[00:00:04] *** Quits: shlomif (~shlomif@87.68.240.100.adsl.012.net.il) (Ping timeout: 252 seconds)
[00:10:35] *** Quits: zln (~zln@c80-217-230-193.bredband.tele2.se) (Ping timeout: 252 seconds)
[00:19:18] *** Joins: mov_eax (~mov_eax@user/mov-eax/x-5035058)
[00:20:13] <buu> huf: that was almost english
[00:21:30] *** Joins: icedjava37 (~icedjava3@ppp046177149155.access.hol.gr)
[00:22:16] *** Joins: semeion (~semeion@user/semeion)
[00:23:03] <huf> buu: it was the other way around
[00:23:18] <huf> or an attempt at it
[00:25:26] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[00:27:43] *** Joins: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net)
[00:30:09] *** Joins: fwg (~fwg@user/fwg)
[00:42:58] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 252 seconds)
[00:44:22] *** Joins: scp1 (~magnus.wo@195-198-186-122.customer.telia.com)
[00:51:43] * GumbyPAN CPAN Upload: Number-MuPhone-1.02 by CHOLLOWAY https://metacpan.org/release/CHOLLOWAY/Number-MuPhone-1.02
[00:51:43] * GumbyPAN CPAN Upload: Lingua-Poetry-Haiku-Finder-0.002 by TOBYINK https://metacpan.org/release/TOBYINK/Lingua-Poetry-Haiku-Finder-0.002
[00:56:12] *** Quits: humky (~humky@user/humky) (Quit: Leaving)
[00:56:36] *** Joins: semeion (~semeion@user/semeion)
[00:56:47] *** Quits: scp1 (~magnus.wo@195-198-186-122.customer.telia.com) (Ping timeout: 245 seconds)
[01:14:23] *** Quits: G_Sabino1ullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 252 seconds)
[01:14:23] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 252 seconds)
[01:14:30] *** Quits: furrymcgee (~devuan@31.179.186.66) (Quit: leaving)
[01:17:28] <kraih> buu: all the stuff i ported from perl to node runs about 15 times faster
[01:18:01] <mst> kraih: v8 is scary fast
[01:18:31] *** Pixi_ is now known as Pixi
[01:19:22] <kraih> yea, not many scripting languages where you actually get to choose the scripting language over some C extension to implement something for better performance
[01:20:31] <El_Che> kraih: is it faster than C in your usecase (mojo.js?)
[01:20:34] <kraih> for so much stuff the context switching to the C++ extension would end up being your bottleneck, it's funny
[01:22:27] <kraih> for my use cases definitely, since i spent a ton of time in js
[01:22:35] <kraih> s/t/d/
[01:23:04] *** Joins: whynot (~whynot@88.155.64.180)
[01:23:38] *** Quits: vrurg (~vrurg@45.74.95.181) (Quit: Leaving...)
[01:24:23] <kraih> weakest part of node is probably the stdlib, it has grown pretty bad over time with a lot of deadends
[01:25:15] <El_Che> I did some JS just to have it under the belt, and I never complained over CPAN again :)
[01:25:47] <kraih> i think there's like 4 different event emitter APIs in the stdlib now
[01:26:47] * GumbyPAN CPAN Upload: Passwd-Keyring-Secret-1.00 by UHLE https://metacpan.org/release/UHLE/Passwd-Keyring-Secret-1.00
[01:27:45] <mst> kraih: lolsob
[01:28:01] <rpath> what is really concerning about node is a big amount of hijacked packages over last years, and this trend seem not to be vanished yet
[01:28:07] <mst> gah, you're making me want to patch tsc again
[01:28:40] <mst> rpath: now microsoft own npm hopefully they'll have sufficient legal clue available to develop a spine
[01:29:27] *** Joins: vrurg (~vrurg@45.74.95.181)
[01:30:24] * mst notes that when CPAN got a similar legal threat, the response wasn't to cave in, but instead to call in me
[01:30:38] * mst really enjoyed himself: http://p3rl.org/Nagios::Plugin
[01:34:27] *** Quits: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8) (Ping timeout: 240 seconds)
[01:35:10] *** Quits: vrurg (~vrurg@45.74.95.181) (Quit: Leaving...)
[01:35:40] *** Joins: vrurg (~vrurg@45.74.95.181)
[01:37:01] *** Quits: aindilis (~aindilis@152-44-40-72.us-chi1.upcloud.host) (Remote host closed the connection)
[01:39:41] *** Joins: aindilis (~aindilis@152-44-40-72.us-chi1.upcloud.host)
[01:41:08] *** Joins: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8)
[01:41:20] *** Quits: mov_eax (~mov_eax@user/mov-eax/x-5035058) (Quit: WeeChat 3.2.1)
[01:41:22] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 240 seconds)
[01:42:26] *** Joins: mov_eax (~mov_eax@user/mov-eax/x-5035058)
[01:42:48] *** Joins: semeion (~semeion@user/semeion)
[01:43:48] *** Joins: azed (~azed@102.104.143.187)
[01:47:26] *** Joins: zandi (~zandi@lfbn-tou-1-442-109.w86-206.abo.wanadoo.fr)
[01:49:13] *** Quits: aindilis (~aindilis@152-44-40-72.us-chi1.upcloud.host) (Remote host closed the connection)
[01:49:31] *** Joins: aindilis (~aindilis@152-44-40-72.us-chi1.upcloud.host)
[01:50:13] <zandi> is it safe to register a recurring Mojo::IOLoop timer in a hypnotoad worker to perform some small periodic tasks for that worker?
[01:50:41] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 252 seconds)
[01:51:22] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 245 seconds)
[01:53:17] *** Joins: xv8 (~xv8@2601:5cb:c001:50:cb86:fdfc:1f51:a5a0)
[01:53:23] *** Joins: WinterStar (~IceLight@user/icelight)
[01:57:50] *** Quits: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net) (Ping timeout: 252 seconds)
[01:59:35] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[02:04:59] *** Quits: APic (apic@apic.name) (Read error: Connection reset by peer)
[02:05:00] *** Quits: anthk_ (~anthk_@92.176.105.30) (Read error: Connection reset by peer)
[02:05:34] *** Joins: APic (apic@apic.name)
[02:09:31] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[02:13:42] *** Quits: magla (~gelignite@55d47635.access.ecotel.net) (Quit: Stay safe!)
[02:14:50] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 256 seconds)
[02:15:07] *** xv8 is now known as XV8
[02:15:25] *** Joins: semeion (~semeion@user/semeion)
[02:19:48] *** Quits: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de) (Quit: Leaving.)
[02:21:12] *** Joins: jlenz_ (~jlenz@c-73-204-107-230.hsd1.fl.comcast.net)
[02:24:34] *** Quits: dsrt^ (~dsrt@68.101.54.227) (Ping timeout: 240 seconds)
[02:25:07] *** Quits: jlenz__ (~jlenz@c-73-204-107-230.hsd1.fl.comcast.net) (Ping timeout: 245 seconds)
[02:29:30] *** XV8 is now known as xv8
[02:30:23] *** Quits: zandi (~zandi@lfbn-tou-1-442-109.w86-206.abo.wanadoo.fr) (Remote host closed the connection)
[02:30:44] *** Joins: zandi (~zandi@lfbn-tou-1-442-109.w86-206.abo.wanadoo.fr)
[02:34:51] *** Joins: shlomif (~shlomif@87.68.240.100.adsl.012.net.il)
[02:36:50] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[02:36:51] *** Joins: G_Sabino1ullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[02:37:16] *** Joins: default__ (~rpath@gateway/tor-sasl/rpath)
[02:38:26] *** Joins: anthk_ (~anthk_@92.176.105.30)
[02:40:33] *** Quits: rpath (~rpath@gateway/tor-sasl/rpath) (Ping timeout: 276 seconds)
[02:43:10] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 256 seconds)
[02:43:44] *** Joins: semeion (~semeion@user/semeion)
[02:44:39] *** Joins: scp1 (~magnus.wo@195-198-186-122.customer.telia.com)
[02:49:58] *** Quits: anthk_ (~anthk_@92.176.105.30) (Ping timeout: 256 seconds)
[02:51:07] *** Quits: scp1 (~magnus.wo@195-198-186-122.customer.telia.com) (Ping timeout: 252 seconds)
[02:53:19] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 252 seconds)
[02:54:53] *** Quits: APic (apic@apic.name) (Read error: Connection reset by peer)
[02:55:32] *** Quits: arthurpbs (~arthurpbs@168.121.98.22) (Ping timeout: 245 seconds)
[03:06:46] *** Joins: semeion (~semeion@user/semeion)
[03:12:06] *** Joins: APic (apic@apic.name)
[03:17:32] *** Quits: mov_eax (~mov_eax@user/mov-eax/x-5035058) (Quit: WeeChat 3.2.1)
[03:17:39] *** Joins: X-Scale` (~ARM@128.229.28.37.rev.vodafone.pt)
[03:18:34] *** Quits: X-Scale (~ARM@238.72.108.93.rev.vodafone.pt) (Ping timeout: 240 seconds)
[03:18:42] *** X-Scale` is now known as X-Scale
[03:20:16] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 252 seconds)
[03:22:21] *** Quits: icedjava37 (~icedjava3@ppp046177149155.access.hol.gr) (Quit: leaving)
[03:23:25] *** Joins: asdflkj_sh (asdflkj@bsdforall.org)
[03:23:55] *** Joins: mov_eax (~mov_eax@user/mov-eax/x-5035058)
[03:25:40] *** Quits: Pali (~pali@user/pali) (Ping timeout: 240 seconds)
[03:25:46] *** Joins: aspic (~shifty~~~@ppp121-44-123-120.syd-gls-har-bras39.tpg.internode.on.net)
[03:31:36] *** Quits: aspic (~shifty~~~@ppp121-44-123-120.syd-gls-har-bras39.tpg.internode.on.net) (Ping timeout: 260 seconds)
[03:32:43] *** Joins: semeion (~semeion@user/semeion)
[03:34:03] *** Joins: pizdets_ (~pizdets@183.182.114.81)
[03:34:40] *** Quits: pizdets (~pizdets@183.182.110.224) (Ping timeout: 250 seconds)
[03:44:59] *** Joins: aspic (~shifty~~~@ppp121-44-123-120.syd-gls-har-bras39.tpg.internode.on.net)
[03:54:38] *** Joins: scp1 (~magnus.wo@195-198-186-122.customer.telia.com)
[03:55:10] *** Quits: mov_eax (~mov_eax@user/mov-eax/x-5035058) (Ping timeout: 240 seconds)
[03:57:01] *** Joins: mov_eax (~mov_eax@user/mov-eax/x-5035058)
[03:58:13] *** Quits: waltman (waltman@2601:4a:701:4451:ec67:e820:91c0:3679) (Ping timeout: 252 seconds)
[03:59:01] *** Joins: waltman (waltman@2601:4a:701:4451:60bd:2602:d760:42c)
[04:00:07] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[04:00:48] *** Quits: scp1 (~magnus.wo@195-198-186-122.customer.telia.com) (Ping timeout: 256 seconds)
[04:01:30] *** Quits: drbean (drbean@thinks.life.is-a.beauty) (Remote host closed the connection)
[04:03:23] *** xv8 is now known as XV8
[04:04:43] *** XV8 is now known as xv8
[04:05:26] *** Quits: zandi (~zandi@lfbn-tou-1-442-109.w86-206.abo.wanadoo.fr) (Remote host closed the connection)
[04:05:46] *** Joins: zandi (~zandi@lfbn-tou-1-442-109.w86-206.abo.wanadoo.fr)
[04:08:43] *** Joins: mnemonic (~semeion@user/semeion)
[04:10:59] *** Quits: whynot (~whynot@88.155.64.180) (Quit: Lost terminal)
[04:11:34] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 256 seconds)
[04:13:46] *** Quits: zandi (~zandi@lfbn-tou-1-442-109.w86-206.abo.wanadoo.fr) (Remote host closed the connection)
[04:16:19] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[04:19:40] *** Quits: Adura (~Adura@user/adura) (Ping timeout: 240 seconds)
[04:21:01] *** Quits: pizdets_ (~pizdets@183.182.114.81) (Quit: pizdets)
[04:21:47] *** Joins: pizdets (~pizdets@183.182.114.81)
[04:26:07] *** Joins: drbean (drbean@thinks.life.is-a.beauty)
[04:28:13] *** Quits: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net) (Quit: Konversation terminated!)
[04:28:14] *** Joins: Adura (~Adura@user/adura)
[04:32:43] *** Quits: mov_eax (~mov_eax@user/mov-eax/x-5035058) (Read error: Connection reset by peer)
[04:34:08] *** Joins: semeion (~semeion@user/semeion)
[04:34:08] *** mnemonic is now known as Guest3235
[04:36:22] *** Quits: Guest3235 (~semeion@user/semeion) (Ping timeout: 245 seconds)
[04:44:35] *** Joins: Manderson (~manderson@45.40.80.170)
[04:47:10] *** Quits: Manderson_ (~manderson@45.40.80.170) (Ping timeout: 252 seconds)
[04:49:48] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 250 seconds)
[04:50:49] *** Quits: pizdets (~pizdets@183.182.114.81) (Quit: pizdets)
[04:51:32] *** Joins: pizdets (~pizdets@183.182.114.81)
[04:52:35] *** Quits: pizdets (~pizdets@183.182.114.81) (Client Quit)
[04:54:38] *** Joins: scp1 (~magnus.wo@195-198-186-122.customer.telia.com)
[04:55:29] *** Joins: pizdets (~pizdets@183.182.114.81)
[04:59:13] *** xv8 is now known as XV8
[04:59:54] *** Quits: pizdets (~pizdets@183.182.114.81) (Client Quit)
[05:01:12] *** Joins: pizdets (~pizdets@183.182.114.81)
[05:03:44] *** Joins: semeion (~semeion@user/semeion)
[05:04:50] *** Quits: scp1 (~magnus.wo@195-198-186-122.customer.telia.com) (Ping timeout: 256 seconds)
[05:07:09] * GumbyPAN CPAN Upload: Mail-Milter-Authentication-3.20210907 by MBRADSHAW https://metacpan.org/release/MBRADSHAW/Mail-Milter-Authentication-3.20210907
[05:11:38] *** Quits: G_Sabino1ullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 256 seconds)
[05:11:38] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 256 seconds)
[05:13:38] *** Quits: Lantizia (~Lantizia@195.62.201.126) (Ping timeout: 252 seconds)
[05:21:34] *** Joins: Lantizia_ (~Lantizia@195.62.201.126)
[05:30:19] *** Joins: mnemonic (~semeion@user/semeion)
[05:32:04] <simcop2387> Mst, grinnz, genio, et al: replace systemd with emacs, https://github.com/a-schaefers/systemE
[05:32:05] <Paperbot_> Link title(s): [ GitHub - a-schaefers/systemE: 🤣 A lightweight systemd replacement written in Emacs lisp 🤣 ]
[05:33:10] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 240 seconds)
[05:33:18] <mst> simcop2387: don't tempt me
[05:34:56] <simcop2387> It's basic and missing some things but it'd be awesome tk see it get the needed sigchld support and a proper built in supervisor system
[05:35:13] <mst> runit, nosh, etc.
[05:36:25] <mst> also s6
[05:38:34] <simcop2387> I jjust love taking the meme of emacs as an OS to the extreme
[05:39:02] <mst> makes more sense than systemd
[05:39:36] * mst is looking at https://www.bsdstore.ru/en/about.html
[05:42:13] * GumbyPAN CPAN Upload: Valiant-0.001007 by JJNAPIORK https://metacpan.org/release/JJNAPIORK/Valiant-0.001007
[05:42:14] <simcop2387> Neat
[05:44:22] *** Quits: azed (~azed@102.104.143.187) (Ping timeout: 252 seconds)
[05:52:22] *** XV8 is now known as xv8
[06:00:23] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[06:11:15] *** Joins: Manderson_ (~manderson@45.40.80.170)
[06:12:38] *** Joins: scp1 (~magnus.wo@195-198-186-122.customer.telia.com)
[06:12:47] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[06:13:35] *** Quits: Manderson (~manderson@45.40.80.170) (Ping timeout: 252 seconds)
[06:13:49] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[06:13:50] *** Joins: G_Sabino1ullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[06:16:50] *** Joins: Manderson (~manderson@45.40.80.170)
[06:17:23] *** Joins: mmlj4 (~mmlj4@ip68-11-69-185.no.no.cox.net)
[06:17:27] *** Joins: mattil (~mattil@62-113-189-106.bb.dnainternet.fi)
[06:18:32] *** Quits: Manderson_ (~manderson@45.40.80.170) (Ping timeout: 252 seconds)
[06:18:47] *** Quits: scp1 (~magnus.wo@195-198-186-122.customer.telia.com) (Ping timeout: 245 seconds)
[06:20:41] *** Joins: scp1 (~magnus.wo@195-198-186-122.customer.telia.com)
[06:21:42] *** Quits: mattil (~mattil@62-113-189-106.bb.dnainternet.fi) (Ping timeout: 245 seconds)
[06:28:10] *** Quits: cooper (~mitchell@user/cooper) (Ping timeout: 240 seconds)
[06:28:29] *** Joins: cooper (~mitchell@user/cooper)
[06:30:20] *** Quits: Su-Shee (~Susanne@p4ff4905a.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[06:32:08] *** Joins: Su-Shee (~Susanne@p4ff49fe9.dip0.t-ipconnect.de)
[06:32:32] *** Joins: mov_eax (~mov_eax@user/mov-eax/x-5035058)
[06:32:50] *** Quits: scp1 (~magnus.wo@195-198-186-122.customer.telia.com) (Ping timeout: 252 seconds)
[06:33:19] *** Quits: fwg (~fwg@user/fwg) (Quit: .oO( zzZzZzz ...)
[06:35:31] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:35:31] *** FinnElija is now known as Guest9426
[06:35:31] *** finn_elija is now known as FinnElija
[06:38:27] *** Quits: Guest9426 (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 245 seconds)
[06:38:30] *** Joins: Manderson_ (~manderson@45.40.80.170)
[06:40:27] *** Quits: Manderson (~manderson@45.40.80.170) (Ping timeout: 245 seconds)
[06:40:39] *** Joins: scp1 (~magnus.wo@195-198-186-122.customer.telia.com)
[06:43:35] *** Joins: Manderson (~manderson@45.40.80.170)
[06:43:47] *** Quits: Manderson_ (~manderson@45.40.80.170) (Ping timeout: 245 seconds)
[06:44:45] *** xv8 is now known as XV8
[06:46:47] *** Quits: scp1 (~magnus.wo@195-198-186-122.customer.telia.com) (Ping timeout: 245 seconds)
[06:50:18] <asdflkj_sh> Is there a way to use perl interactively that allows using ^P to access history? (natively, not counting rlwrap)
[06:52:18] <ology> History of what?
[06:52:42] <asdflkj_sh> lines typed in
[06:52:53] <asdflkj_sh> just like in bash
[06:53:10] <ology> You have to keep track of the lines and do something to map ^P
[06:53:39] <ology> Step back. What are you trying to accomplish and where? And what errors are you getting?
[06:54:20] <ology> Are you wanting perl to be your shell? Are you in vim? 
[06:55:05] <asdflkj_sh> I want to use it interactively to test a language feature and see if it works the way I think it does
[06:55:17] <revhippie> perlbot: repl
[06:55:18] <perlbot> revhippie: Read-Eval-Print-Loop - see reply from Reply, re.pl from Devel::REPL, tinyrepl from Eval::WithLexicals, or perlsh from App::perlsh | an anagram of perl!
[06:56:14] <asdflkj_sh> revhippie: thanks
[06:57:08] *** XV8 is now known as xv8
[06:57:24] *** Quits: aspic (~shifty~~~@ppp121-44-123-120.syd-gls-har-bras39.tpg.internode.on.net) (Ping timeout: 260 seconds)
[06:58:29] <asdflkj_sh> though I'd prefer not to have to use type a single line to use any package: I just want to run a couple lines without having to retype the parts that are the same between them, like some sort of caveman before GNU readline was invented
[06:59:22] <ether> use your shell's history then?
[06:59:35] <ether> perl -wle'...'; !!gs/foo/bar/
[07:00:18] <ether> er !!:gs...
[07:00:58] <ether> or just up-arrow and edit the last line manually, like you would for any other command.
[07:01:13] <asdflkj_sh> that doesn't work on this system
[07:02:22] <asdflkj_sh> oh, you meant that in the shell too
[07:04:02] <asdflkj_sh> (every other scripting language I know other than awk keeps history when used interactively, even lua, which seems generally much smaller and simpler than perl)
[07:06:21] * GumbyPAN CPAN Upload: App-sdif-4.20.1 by UTASHIRO https://metacpan.org/release/UTASHIRO/App-sdif-4.20.1
[07:08:17] *** Joins: Manderson_ (~manderson@45.40.80.170)
[07:10:02] *** Quits: Manderson (~manderson@45.40.80.170) (Ping timeout: 245 seconds)
[07:21:14] *** Quits: G_Sabino1ullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 252 seconds)
[07:21:14] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 252 seconds)
[07:22:32] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 256 seconds)
[07:23:31] <kiwiroy> asdflkj_sh: have you tried rlwrap?
[07:25:02] *** Joins: arthurpbs (~arthurpbs@168.121.99.239)
[07:29:03] <simcop2387> asdflkj_sh: perl doesn't include a built in repl sadly, though if you learn the perl debugger you can use it for a repl.  but it is a bit obtuse to use at first
[07:34:55] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 252 seconds)
[07:49:57] *** Joins: Martchus (~martchus@2a01:c23:c15f:3500:d250:99ff:fe49:3cce)
[07:50:56] *** Quits: Martchus_ (~martchus@2a01:c23:c1d4:400:d250:99ff:fe49:3cce) (Ping timeout: 250 seconds)
[07:54:05] *** Joins: Manderson (~manderson@45.40.80.170)
[07:56:26] *** Quits: Manderson_ (~manderson@45.40.80.170) (Ping timeout: 252 seconds)
[08:10:08] <Grinnz> https://twitter.com/bmastenbrook/status/1435081369470836738
[08:10:09] <Paperbot_> Brian Mastenbrook (@bmastenbrook) 16m14s ago in reply to @thingskatedid #1435080919639945218: Kate. how dare you imply that EBCDIC is unreasonable
[08:10:41] *** Quits: ShorTie (~ShorTie@205.sub-72-105-247.myvzw.com) (Read error: Connection reset by peer)
[08:11:53] *** Joins: ShorTie (~ShorTie@205.sub-72-105-247.myvzw.com)
[08:18:38] *** Joins: scp1 (~magnus.wo@195-198-186-122.customer.telia.com)
[08:24:37] *** Quits: scp1 (~magnus.wo@195-198-186-122.customer.telia.com) (Ping timeout: 245 seconds)
[08:42:02] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:46:36] *** xv8 is now known as XV8
[08:50:38] *** Joins: scp1 (~magnus.wo@195-198-186-122.customer.telia.com)
[08:56:42] *** Quits: scp1 (~magnus.wo@195-198-186-122.customer.telia.com) (Ping timeout: 245 seconds)
[09:06:20] *** Quits: randir (~randir@95-25-59-33.broadband.corbina.ru) (Remote host closed the connection)
[09:06:48] *** Quits: X-Scale (~ARM@128.229.28.37.rev.vodafone.pt) (*.net *.split)
[09:06:48] *** Quits: jjatria (~jjatria@68.183.32.235) (*.net *.split)
[09:06:48] *** Quits: Kassandry (~Kassandry@kassandry.net) (*.net *.split)
[09:06:55] *** Joins: Kassandry (~Kassandry@kassandry.net)
[09:07:00] *** Joins: jjatria (~jjatria@68.183.32.235)
[09:07:55] *** Joins: X-Scale (~ARM@128.229.28.37.rev.vodafone.pt)
[09:10:57] *** Quits: mov_eax (~mov_eax@user/mov-eax/x-5035058) (Ping timeout: 245 seconds)
[09:11:15] *** Quits: daxim (~daxim@2a02:b18:c13b:28:42b0:76ff:fe7b:7663) (*.net *.split)
[09:11:15] *** Quits: jjhoo (jahakala@dsl-trebng21-58c18f-56.dhcp.inet.fi) (*.net *.split)
[09:11:15] *** Quits: shaldannon (william@208.79.82.66) (*.net *.split)
[09:11:15] *** Quits: a6502__ (~wieger@stofzuiger.a6502.net) (*.net *.split)
[09:11:15] *** Quits: bugweiser (~tc@user/denofre) (*.net *.split)
[09:11:15] *** Quits: peder (4822@nidur.ifi.uio.no) (*.net *.split)
[09:11:15] *** Quits: Yaakov (sid19863@user/Yaakov) (*.net *.split)
[09:11:15] *** Quits: kraih (sid17075@mojo/destroy-all-humans/kraih) (*.net *.split)
[09:11:15] *** Quits: toddr (sid457681@id-457681.tinside.irccloud.com) (*.net *.split)
[09:11:15] *** Quits: skyl4rk (~tlvb@user/tlvb) (*.net *.split)
[09:11:15] *** Quits: Artea (~Lufia@artea.com.pt) (*.net *.split)
[09:11:15] *** Quits: tabakhase (tabakhase@user/tabakhase) (*.net *.split)
[09:11:23] *** Joins: shaldannon (william@208.79.82.66)
[09:11:23] *** Joins: a6502_ (~wieger@stofzuiger.a6502.net)
[09:11:28] *** Joins: peder (4822@nidur.ifi.uio.no)
[09:11:32] *** Joins: Manderson_ (~manderson@45.40.80.170)
[09:11:32] *** Joins: kraih (sid17075@mojo/destroy-all-humans/kraih)
[09:11:32] *** Joins: Artea (~Lufia@artea.com.pt)
[09:11:37] *** Joins: bugweiser (~tc@62-131-37-204.fixed.kpn.net)
[09:11:39] *** Joins: toddr (sid457681@id-457681.tinside.irccloud.com)
[09:11:40] *** Quits: bugweiser (~tc@62-131-37-204.fixed.kpn.net) (Changing host)
[09:11:40] *** Joins: bugweiser (~tc@user/denofre)
[09:11:42] *** Joins: jjhoo (~jahakala@dsl-trebng21-58c18f-56.dhcp.inet.fi)
[09:11:44] *** Joins: tabakhase (tabakhase@user/tabakhase)
[09:11:46] *** Joins: daxim (~daxim@2a02:b18:c13b:28:42b0:76ff:fe7b:7663)
[09:11:49] *** Joins: skyl4rk (~tlvb@user/tlvb)
[09:12:02] *** Joins: Yaakov (sid19863@user/Yaakov)
[09:12:31] *** Joins: aspic (~shifty~~~@ppp121-44-121-132.syd-gls-har-bras39.tpg.internode.on.net)
[09:13:40] *** Quits: Manderson (~manderson@45.40.80.170) (Ping timeout: 240 seconds)
[09:16:39] *** Joins: scp1 (~magnus.wo@195-198-186-122.customer.telia.com)
[09:18:44] *** Joins: randir (~randir@93.159.239.42)
[09:24:50] *** Quits: scp1 (~magnus.wo@195-198-186-122.customer.telia.com) (Ping timeout: 260 seconds)
[09:27:14] *** Quits: LogicAside (~LogicAsid@user/logicaside) (*.net *.split)
[09:27:14] *** Quits: batman (~batman@50.31.137.146) (*.net *.split)
[09:27:14] *** Quits: castawayc (~castaway@cpc81822-swin19-2-0-cust3.3-1.cable.virginm.net) (*.net *.split)
[09:27:14] *** Quits: andinus (andinus@tilde.institute) (*.net *.split)
[09:27:14] *** Quits: smitop (~smitop@user/smitop) (*.net *.split)
[09:27:14] *** Quits: silug (~silug@068-188-018-154.biz.spectrum.com) (*.net *.split)
[09:27:14] *** Quits: Lynx_ (~x@fuchshai.geomar.de) (*.net *.split)
[09:27:14] *** Quits: castaway (~castaway@cpc81822-swin19-2-0-cust3.3-1.cable.virginm.net) (*.net *.split)
[09:27:14] *** Quits: Bodger1234_ (sid503511@highgate.irccloud.com) (*.net *.split)
[09:27:14] *** Quits: ndorf (~nd@ob.noxio.us) (*.net *.split)
[09:27:14] *** Quits: dustinm` (~dustinm@static.38.6.217.95.clients.your-server.de) (*.net *.split)
[09:27:14] *** Quits: berndj (~berndj@ns1.linksynergy.co.za) (*.net *.split)
[09:27:14] *** Quits: treefrob (~treefrob@p2e54235e.dip0.t-ipconnect.de) (*.net *.split)
[09:27:14] *** Quits: justache (~justache@user/justache) (*.net *.split)
[09:27:14] *** Quits: gk_ (~irkk@debrecziner.extrawurst.systems) (*.net *.split)
[09:27:14] *** Quits: sevvie (~sevvie@vps-6df5f188.vps.ovh.net) (*.net *.split)
[09:27:14] *** Quits: ramix (~ram@82-65-77-141.subs.proxad.net) (*.net *.split)
[09:27:14] *** Quits: salparadise (~salparadi@129.146.17.140) (*.net *.split)
[09:27:14] *** Quits: marienz (~marienz@libera/staff/marienz) (*.net *.split)
[09:27:15] *** Quits: sjn (sjn@sprocket.nvg.ntnu.no) (*.net *.split)
[09:27:15] *** Quits: Joel (~jjshoe@user/joel) (*.net *.split)
[09:27:15] *** Quits: digdilem (~digdilem@rolf.yuss.org) (*.net *.split)
[09:27:15] *** Quits: deecat (~deecat@73.99.215.70) (*.net *.split)
[09:27:15] *** Quits: bnjf (~bnjf@vm.bnjf.id.au) (*.net *.split)
[09:27:15] *** Quits: surfist (surfist@gateway02.insomnia247.nl) (*.net *.split)
[09:27:21] *** Joins: sevvie (~sevvie@vps-6df5f188.vps.ovh.net)
[09:27:21] *** Joins: gk (~irkk@debrecziner.extrawurst.systems)
[09:27:23] *** Joins: sjn (sjn@sprocket.nvg.ntnu.no)
[09:27:32] *** Joins: bnjf (~bnjf@vm.bnjf.id.au)
[09:27:33] *** Joins: silug (~silug@068-188-018-154.biz.spectrum.com)
[09:27:33] *** Joins: ramix (~ram@82-65-77-141.subs.proxad.net)
[09:27:36] *** Joins: deecat (~deecat@73.99.215.70)
[09:27:39] *** Joins: marienz (~marienz@libera/staff/marienz)
[09:27:40] *** Joins: salparadise (~salparadi@129.146.17.140)
[09:27:51] *** Joins: digdilem (~digdilem@rolf.yuss.org)
[09:27:58] *** Joins: andinus (andinus@tilde.institute)
[09:28:08] *** Joins: Bodger1234_ (sid503511@id-503511.highgate.irccloud.com)
[09:28:15] *** Joins: dustinm` (~dustinm@static.38.6.217.95.clients.your-server.de)
[09:28:20] *** Joins: smitop (~smitop@user/smitop)
[09:28:24] *** Joins: justache (~justache@user/justache)
[09:28:25] *** Joins: treefrob (~treefrob@p2e54235e.dip0.t-ipconnect.de)
[09:28:32] *** Joins: castawayc (~castaway@cpc81822-swin19-2-0-cust3.3-1.cable.virginm.net)
[09:28:39] *** Joins: batman (~batman@50.31.137.146)
[09:28:45] *** Joins: Joel (~jjshoe@user/joel)
[09:29:34] *** Joins: berndj (~berndj@ns2.linksynergy.co.za)
[09:29:40] *** Joins: LogicAside (~LogicAsid@user/logicaside)
[09:32:22] *** Joins: ndorf (~nd@ob.noxio.us)
[09:32:31] *** Joins: castaway (~castaway@cpc81822-swin19-2-0-cust3.3-1.cable.virginm.net)
[09:32:32] *** Joins: Lynx_ (~x@fuchshai.geomar.de)
[09:33:25] *** Joins: mattil (~mattil@airio.portalify.com)
[09:34:27] *** Joins: surfist (surfist@gateway02.insomnia247.nl)
[09:34:51] *** Quits: APic (apic@apic.name) (Read error: Connection reset by peer)
[09:54:21] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[09:57:01] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[09:57:08] *** Joins: APic (apic@apic.name)
[09:57:42] *** Quits: APic (apic@apic.name) (Read error: Connection reset by peer)
[09:57:48] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[09:58:00] *** Quits: mattil (~mattil@airio.portalify.com) (Ping timeout: 265 seconds)
[09:59:07] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[10:01:29] *** Joins: willthechill (~willthech@2600:1700:8c61:3ed0:3177:ae04:5861:103b)
[10:03:07] *** Joins: scp1 (~magnus.wo@195-198-186-122.customer.telia.com)
[10:04:06] *** Joins: randir_ (~randir@93.159.239.42)
[10:04:06] *** Quits: randir (~randir@93.159.239.42) (Read error: Connection reset by peer)
[10:07:10] *** Joins: APic (apic@apic.name)
[10:07:20] *** Quits: scp1 (~magnus.wo@195-198-186-122.customer.telia.com) (Ping timeout: 252 seconds)
[10:07:20] *** Quits: APic (apic@apic.name) (Read error: Connection reset by peer)
[10:09:38] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:14:10] *** Quits: chiselfu1e (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[10:21:01] *** Joins: jetchisel (jetchisel@user/jetchisel)
[10:22:43] *** Quits: default__ (~rpath@gateway/tor-sasl/rpath) (Quit: Leaving)
[10:28:18] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[10:28:49] *** Joins: zln (~zln@c80-217-230-193.bredband.tele2.se)
[10:32:10] *** Joins: APic (apic@apic.name)
[10:33:16] *** Quits: APic (apic@apic.name) (Read error: Connection reset by peer)
[10:36:39] *** Joins: scp1 (~magnus.wo@195-198-186-122.customer.telia.com)
[10:36:47] *** Joins: txtsd (~txtsd@user/txtsd)
[10:37:10] *** Joins: APic (apic@apic.name)
[10:37:52] *** Quits: APic (apic@apic.name) (Read error: Connection reset by peer)
[10:40:22] *** Joins: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de)
[10:41:35] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Remote host closed the connection)
[10:43:00] *** Quits: scp1 (~magnus.wo@195-198-186-122.customer.telia.com) (Ping timeout: 260 seconds)
[10:46:55] *** Joins: dsrt^ (~dsrt@68.101.54.227)
[10:49:06] *** Joins: horsepatat (~horsepata@212.3.197.193)
[10:50:51] *** Joins: art1 (~romeyke@p200300ccdf037c0091f547ed79ee9414.dip0.t-ipconnect.de)
[10:52:55] *** Quits: KnoP (~KnoP@p57b21ac7.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[10:54:51] *** Joins: Manderson (~manderson@45.40.80.170)
[10:54:52] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! 👋)
[10:56:08] *** Joins: furrymcgee (~devuan@31.179.186.66)
[10:56:17] *** Quits: EvanCarroll (~ecarroll@46.196.88.53) (Ping timeout: 252 seconds)
[10:57:35] *** Quits: Manderson_ (~manderson@45.40.80.170) (Ping timeout: 260 seconds)
[10:58:13] *** Joins: jaggz (~jaggz@user/jaggz)
[10:58:38] <jaggz> how do I convert my $year, $mon, .. $minute, $sec; to an epoch time so I can add a couple hours to it?
[10:58:46] <jaggz> (then convert it back)
[11:00:48] <jaggz> maybe this thing:   $epoch = timelocal(00, $mm, $hh, $dd, $mon - 1, $yy - 1900);
[11:02:02] <shlomif> perlbot: time
[11:02:02] <perlbot> shlomif: ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst)=localtime(time); OR Modules: Time::Piece, Time::Format, Time::Tiny, Time::Moment, Time::C, etc.
[11:04:27] *** Joins: Manderson_ (~manderson@45.40.80.170)
[11:06:46] *** Quits: Manderson (~manderson@45.40.80.170) (Ping timeout: 252 seconds)
[11:09:14] *** Joins: APic (apic@apic.name)
[11:09:26] *** Quits: APic (apic@apic.name) (Read error: Connection reset by peer)
[11:09:33] *** Joins: tobybl (~tobybl@189.192.115.87.dyn.plus.net)
[11:11:46] *** Quits: Adura (~Adura@user/adura) (Quit: Quit)
[11:14:14] *** Joins: APic (apic@apic.name)
[11:14:22] *** Quits: APic (apic@apic.name) (Read error: Connection reset by peer)
[11:14:58] <vague> Why not use Time::Piece?
[11:16:01] *** Quits: GEttR (~GEttR@user/gettr) (Ping timeout: 252 seconds)
[11:16:11] <vague> Do you have a specific date you want to change to or current time?
[11:17:20] *** Quits: WinterStar (~IceLight@user/icelight) (Quit: WeeChat 3.2)
[11:18:02] *** Joins: WinterStar (~IceLight@user/icelight)
[11:18:21] <vague> If you want to use a custom date then maybe Time::C is better for it
[11:19:14] *** Joins: APic (apic@apic.name)
[11:19:28] *** Quits: APic (apic@apic.name) (Read error: Connection reset by peer)
[11:23:20] *** Joins: ufobat (~martin@dynamic-095-114-173-173.95.114.pool.telefonica.de)
[11:28:05] *** Joins: Pali (~pali@user/pali)
[11:30:52] <jaggz> got it working using timelocal()
[11:30:57] <jaggz> sorry
[11:31:22] <jaggz> now i'm trying to figure out how Image::Magick works
[11:32:01] <jaggz> I loaded an image with: open(IMAGE, $f) || die "Can't open image $f: $!"; $frame->Read(file=>\*IMAGE);
[11:34:38] <jaggz> $frame ends up being an array ref..  looks like it has one item in it .. $frame->[0] is a scalar ref, and it's just a big number
[11:35:12] <lopid> hex?
[11:35:38] *** Quits: Pali (~pali@user/pali) (Ping timeout: 265 seconds)
[11:35:40] <jaggz> no, actual number
[11:35:54] <Botje> jaggz: probably a pointer to native memory. you should not expect to find useful information inside the guts of an object.
[11:36:06] <Botje> try reading the documentation and seeing what methods are available
[11:36:21] <Botje> also, don't use BAREWORD filehandles. it's 2021 and they went out of fashion in 1995.
[11:37:27] <jaggz> interesting.. things were erroring when I tried, but I tried a method $frame->Set(dither=>'True'); and that didn't error
[11:37:42] <jaggz> i just copied from an example.. don't care about fashion
[11:37:51] <lopid> this module capitalises too much
[11:38:49] <jaggz> p $frame->size()    Can't locate auto/Image/Magick/size.al
[11:39:01] <jaggz> same with just "size", without "()")
[11:39:21] <lopid> maybe it's Size
[11:39:23] <vague> I'd use Imager instead, https://metacpan.org/pod/Imager
[11:39:23] <Paperbot_> Link title(s): [ Imager - Perl extension for Generating 24 bit Images - metacpan.org ]
[11:39:33] <jaggz> oh, these are image attributes we can set.. not ones to grab as properties
[11:41:14] <jaggz> vague, image magick seems like .. quite a module
[11:43:38] <vague> I'm surprised you managed to install it. I hear it's a beast to install. No idea how it is to use otherwise. Imager has gotten good reviews
[11:44:06] *** Quits: mnemonic (~semeion@user/semeion) (Quit: WeeChat 3.2)
[11:44:23] <jaggz> vague, I had problems installing it in the past.. cpanm fails even now.
[11:44:26] <jaggz> debian packages go in fine 
[11:45:03] <jaggz> I think imager might be easier to work with
[11:45:16] *** Quits: willthechill (~willthech@2600:1700:8c61:3ed0:3177:ae04:5861:103b) (Ping timeout: 252 seconds)
[11:45:44] *** Joins: KnoP (~KnoP@business-176-095-149-105.static.arcor-ip.net)
[11:45:48] <jaggz> I had problems even with bugs/inconsistency in image magick in the past.. stuff I tested very carefully but there seemed to just be issues between it the image magick lib..
[11:45:54] <jaggz> that was some years ago though
[11:46:17] *** Joins: EvanCarroll (~ecarroll@88.244.92.96)
[11:50:17] *** Joins: APic (apic@apic.name)
[11:50:27] *** Quits: APic (apic@apic.name) (Read error: Connection reset by peer)
[11:51:34] <jaggz> bmp/2021-08-31--07-03-08.bmp not a BMP file
[11:51:38] <jaggz> thanks Imager
[11:52:02] <jaggz> 'file' says: "PC bitmap, Windows 98/2000 and newer format"
[11:52:57] <EvanCarroll> asciibetical, where "aa" sorts before "a"
[11:53:25] <EvanCarroll> 1.2.3-foo > 1.2.3-fooo
[11:53:30] <EvanCarroll> makes perfect sense.
[11:54:32] <jaggz> ?
[11:54:37] *** Quits: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[11:55:12] <EvanCarroll> semver has a concept of a prerelease, which must be taken into account when sorted.
[11:55:17] *** Joins: APic (apic@apic.name)
[11:55:38] <EvanCarroll> It sorts asciibetical.
[11:56:20] <EvanCarroll> I've always found that somewhat counterintuitive, because I _still_ need to look up if shorter strings come before longer ones.
[11:56:47] <EvanCarroll> well, the dotted section sorts asciibetical.
[11:57:22] <EvanCarroll> so 1.2.3-1.foo comes before 1.2.3-2.fooo which would come after 1.2.3-2.foo
[12:02:46] *** Joins: Norkle (~norkle@admin.nasa-g0v.com)
[12:10:28] *** Joins: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de)
[12:14:41] *** Joins: scp1 (~magnus.wo@195-198-186-122.customer.telia.com)
[12:16:13] *** Joins: fwg (~fwg@user/fwg)
[12:17:31] <Botje> the expensive word for that is "lexicographic"
[12:22:25] <huf> is there a sane sure way to start a thing that murders all processes started inside it when it exits? something less racy and shit than manually killing the pids of the children? the use case would be a test that starts N background processes before running the test, and then being sure that everyhthing is cleaned up and dead when it's done
[12:22:40] *** Quits: scp1 (~magnus.wo@195-198-186-122.customer.telia.com) (Ping timeout: 252 seconds)
[12:23:23] *** Joins: Adura (~Adura@user/adura)
[12:23:49] <EvanCarroll> I don't think that is even possible. =(
[12:24:03] <EvanCarroll> I think anything that double forks is divorced of its parent process and becomes a child of pid 1
[12:24:18] <Botje> use slay and nuke the entire user account?
[12:24:22] <huf> we have cgroups and shit now
[12:24:25] <huf> surely there's *something*
[12:24:32] <Botje> or, yes, cgroup
[12:24:36] <Botje> maybe
[12:27:37] <EvanCarroll> huf: I don't think so, be interested if there was.
[12:28:37] <EvanCarroll> forking once, you'll have the same process group, and session. killing the parent will give you a new process group and session. and forking subsequently again process id.
[12:28:53] <huf> *blink*
[12:28:58] <EvanCarroll> that new process id can not be tied to anything.
[12:29:29] <EvanCarroll> it doesn't have to make sense, every act of additional complexity does something useful and unrelated.
[12:29:38] <EvanCarroll> enjoy!
[12:29:43] <huf> i just dont understand why you said it
[12:29:54] <huf> twice
[12:30:42] <EvanCarroll> what did I say twice?
[12:30:43] <huf> apparently you can also send signals to children when the parent dies, but that probably doesnt solve grandchildren
[12:40:20] *** Quits: X-Scale (~ARM@128.229.28.37.rev.vodafone.pt) (Read error: Connection reset by peer)
[12:42:32] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (Quit: Lost terminal)
[12:47:08] *** Joins: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e)
[12:49:26] *** Quits: diskin (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[12:51:18] *** Joins: diskin (~diskin@87.117.49.178)
[12:54:50] *** Joins: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net)
[13:03:13] <Altreus> wait surely you can have multiple generations and just kill things recursively
[13:04:34] <xq> huf: are you asking how to kill entire process groups?
[13:04:44] <xq> or something else
[13:05:07] *** Joins: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net)
[13:07:33] <huf> how to make sure an entire tree of non-cooperating processes is killed in a safe sure way
[13:07:49] <huf> some may be actively malicious, but they dont have special privileges
[13:07:57] <huf> that's roughly the assumption
[13:10:39] <EvanCarroll> huf: you can create a pid namespace.
[13:11:08] <EvanCarroll> huf: that's how containers work
[13:11:20] <xq> if killing process groups using negative pid is not sufficient then yeah, some other grouping/selection mechanism is needed
[13:11:27] *** Quits: APic (apic@apic.name) (Quit: [TLS] Client upgrade)
[13:11:27] <xq> that or carpet bombing
[13:11:37] *** Joins: APic (apic@apic.name)
[13:12:43] <huf> yeah, unshare --pid --kill-child seems like the thing
[13:15:11] <EvanCarroll> at that point though, you're really better off just using a container.
[13:15:47] <EvanCarroll> podman -ti run alpine:3 /bin/sh -- stupidcmd.exe
[13:15:53] <EvanCarroll> or if you're statically linked you can use distroless.
[13:16:11] <huf> i dont need an entire container
[13:16:18] <huf> i dont need a whole new userland
[13:16:23] <huf> i just want to run some tests ffs
[13:16:44] <huf> (and have the background shit that was started for the tests get cleaned up automagically)
[13:17:02] <EvanCarroll> a new userland?
[13:19:03] <Mandevil> I don't understand how this (https://l.perl.bot/p/99vfz5) can result in 13 elements in an array, when there's clearly 14.
[13:19:03] <Paperbot_> Link title(s): [ Perlbot Pastebin ]
[13:19:21] <Mandevil> Undef counts as a valid element of a list too.
[13:19:35] <EvanCarroll> I'm just saying if you want to make sure your process doesn't double fork and spin off a daemon that can exist longer than tests, then likely you also don't want it to leave other elements in the user's slice (like ipc). there is a mechanism to isolate a process into a different set of namespaces: containeriztion
[13:19:44] <EvanCarroll> and podman does just that elegantly
[13:19:48] <Botje> Mandevil: one of your methods is returning an empty list.
[13:20:00] <xq> context-dependent return and empty list yeah
[13:20:05] <Mandevil> Let's check
[13:20:10] <EvanCarroll> it doesn't need a new "userland" either. you can launch one process in a container with nothing else.
[13:20:33] *** Quits: APic (apic@apic.name) (Quit: Boot tut gut™)
[13:21:09] <Mandevil> Oh right
[13:21:30] <Mandevil> List context and I am using wantarray in get_port_flags
[13:22:01] * GumbyPAN CPAN Upload: Catmandu-PICA-1.07 by VOJ https://metacpan.org/release/VOJ/Catmandu-PICA-1.07
[13:22:03] <Botje> next time, trust the computer when it tells you you screwed up
[13:22:28] <Mandevil> I trust it, I just didn't see where :)
[13:24:36] <EvanCarroll> in other news, the android watch scene sucks dog shit
[13:24:50] *** Joins: diskin_ (~diskin@ec2-3-124-171-230.eu-central-1.compute.amazonaws.com)
[13:24:50] *** diskin is now known as Guest321
[13:24:50] *** diskin_ is now known as diskin
[13:25:03] <EvanCarroll> the idea that people aren't hacking galaxy watches is terrifying to me.
[13:25:12] <EvanCarroll> this new generation (old man anger)
[13:25:44] <EvanCarroll> I remember when kids drilled through epoxy coated cpus to short out connections they couldn't exist that took on faith existed.
[13:25:58] <EvanCarroll> couldn't see that they took*
[13:26:00] <Altreus> Mandevil: I did exactly the same thing in a more irritating way
[13:26:26] <Altreus> Mandevil: I accidentally created a method that sometimes returned a list, where the method it replaced was guaranteed to return a scalar
[13:26:35] <Altreus> Mandevil: This did not go well in hash constructores
[13:26:39] <Altreus> s/res/rs/
[13:26:52] <Altreus> 50% of the time I'd get a warning
[13:27:07] <Altreus> 50% of the time I'd get a valid hash that 90% of the time wasn't problematic
[13:27:19] <Altreus> Perl is sometimes a bit *too* flexible
[13:27:22] <Mandevil> At least it was 50%.
[13:27:30] <Mandevil> It could have been something like 10e-5.
[13:27:30] *** Quits: Guest321 (~diskin@87.117.49.178) (Ping timeout: 260 seconds)
[13:27:46] <Altreus> true, tests were at least likely to trigger the warning
[13:28:40] *** Quits: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e) (Ping timeout: 260 seconds)
[13:30:17] *** Quits: entonian[m] (~entonianm@2001:470:69fc:105::7ac0) (Quit: You have been kicked for being idle)
[13:36:10] *** Quits: Affliction (affliction@user/affliction) (Remote host closed the connection)
[13:36:45] <Botje> huf: did you consider running the swarm of processes as a distinct user?
[13:37:38] <huf> Botje: yeah, that'd work but i'd need a user for each run
[13:37:42] <huf> so parallel runs dont tangle up
[13:38:07] <Botje> well, yes.
[13:38:24] <Botje> but that's something systemd-run can manage for you
[13:38:39] <Botje> I believe that gives you a transient user by default, which you can systemd kill later.
[13:38:39] *** Joins: scp1 (~magnus.wo@195-198-186-122.customer.telia.com)
[13:39:00] <huf> ah
[13:40:49] <Botje> DynamicUser=yes, apparently.
[13:44:11] *** Joins: Affliction (affliction@user/affliction)
[13:45:10] *** Quits: scp1 (~magnus.wo@195-198-186-122.customer.telia.com) (Ping timeout: 252 seconds)
[13:45:28] *** Quits: riceandbeans (~zach@user/riceandbeans) (Quit: rebooting)
[13:45:40] <EvanCarroll> any perl5 source code wiz, know where the source code is for preincrement
[13:46:14] <LeoNerd> pp_hot.c  I suspect
[13:46:24] <EvanCarroll> thanks will check
[13:46:37] <EvanCarroll> the opcode was easy to find, the tests were easy to find
[13:46:48] <LeoNerd> :)
[13:47:05] <LeoNerd> grep pp_preinc pp*.c
[13:47:26] <EvanCarroll> got it thanks
[13:47:40] <EvanCarroll> well kinda
[13:48:11] <EvanCarroll> specifically what I'm looking for is how the roll over code with ++$foo works where $foo is a string
[13:48:28] <EvanCarroll> guessing that's in sv_inc
[13:48:45] <LeoNerd> I imagine so, as it'll be shared with  $foo++
[13:48:53] <LeoNerd> It's not specific to /pre/inc
[13:49:35] *** Quits: jaggz (~jaggz@user/jaggz) (Quit: I saith goodbye)
[13:50:10] <EvanCarroll> so sv_inc is a macro for Perl_sv_inc
[13:50:29] <EvanCarroll> And that's where github's search stops 
[13:50:30] <EvanCarroll> https://github.com/Perl/perl5/search?q=Perl_sv_inc
[13:50:31] <Paperbot_> Link title(s): [ Search · Perl_sv_inc · GitHub ]
[13:53:50] <Botje> EvanCarroll: sv.c
[13:54:05] <Botje> line 8963 for current HEAD
[13:54:27] <Botje> i guess github is scared of large files?
[13:55:05] <EvanCarroll> It's only artifically intelligent enough to know perl is terrifying
[13:55:43] <EvanCarroll> ok, cool though I found it!
[13:56:06] <Botje> works pretty much as I expected it to.
[13:56:07] <EvanCarroll> also terrifying ++$foo is EBCDIC aware.
[13:57:38] *** Joins: Linux77_ (~Linux7_7@186.233.182.237)
[13:58:16] *** Quits: Linux77 (~Linux7_7@186.233.182.237) (Ping timeout: 252 seconds)
[13:58:17] *** Linux77_ is now known as Linux77
[14:00:54] <Altreus> what are those letters
[14:02:19] <EvanCarroll> I'm going to try to port this to rust, but better.
[14:02:41] <Altreus> rewrite perl in rust
[14:08:05] <EvanCarroll> Going to break down AAAaaaddd to three iterators <ALPHA><alpha><digit> chained in reverse where each iterator is marked with a capacity (in characters) and represented internally by a u64 and rendered in the right base on display
[14:08:50] <EvanCarroll> Then I can fast forward from AAAaaa0 by 500,000 runs instantly and get a rendering.
[14:12:27] <Botje> isn't it quicker to work out how to format that variable-base number as a string instead of calling ++ 500K times?
[14:13:33] <EvanCarroll> Sure, if you already know the format, but if you don't know the format there is no way around it.
[14:14:03] <Botje> you have to know the format to define the increment operator too, no?
[14:14:41] <EvanCarroll> Perl doesn't that's why you have to call ++ 500,000 times. I'm replicating that functionality.
[14:15:07] <EvanCarroll> I mean the alternative would be to provide the format to a display function rather than having a customer iterator
[14:15:15] *** Joins: scp1 (~magnus.wo@195-198-186-122.customer.telia.com)
[14:15:16] <Altreus> it would be interesting if you could define the format of a string such that you can increment through it deterministically
[14:15:37] <Altreus> but I think that's probably a string -> int -> sum -> string sort of procedure anyway
[14:16:46] *** Joins: homura (root@user/homura)
[14:17:43] *** Quits: scp1 (~magnus.wo@195-198-186-122.customer.telia.com) (Read error: Connection reset by peer)
[14:18:19] <Altreus> class StringThatIsReallyANumberWithAnUnorthodoxBase
[14:19:14] <EvanCarroll> I mean you have three options that I can see here, either a single incrementor which represents how many steps you took from the starting point, or a set of incrementors one for each section which stores a max-value and chaining that together.
[14:19:35] <LeoNerd> Chaining them seems fine
[14:20:07] <EvanCarroll> (third option is what perl currently does with character bumping having no internal state and just doing it on the display)
[14:30:53] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[14:31:13] <EvanCarroll> LeoNerd: You've probably looked into it, but I'm curious what your thoughts are on Rust?
[14:33:13] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:33:57] *** Joins: csrf (~csrf@user/csrf)
[14:35:40] *** Quits: Martchus (~martchus@2a01:c23:c15f:3500:d250:99ff:fe49:3cce) (Ping timeout: 240 seconds)
[14:36:27] *** Quits: aspic (~shifty~~~@ppp121-44-121-132.syd-gls-har-bras39.tpg.internode.on.net) (Ping timeout: 260 seconds)
[14:36:39] *** Joins: Martchus (~martchus@dynamic-077-009-124-124.77.9.pool.telefonica.de)
[14:37:21] *** Joins: aspic (~shifty~~~@ppp121-44-102-202.syd-gls-har-bras38.tpg.internode.on.net)
[14:38:05] <LeoNerd> I've not really looked in anywhere near enough detail to have much opinion yet. But not seen anything I dislike, put it that way
[14:38:11] <LeoNerd> (whereas Go is just full of stuff like that :/ )
[14:38:22] *** XV8 is now known as xv8
[14:40:11] <EvanCarroll> cool cool
[14:40:50] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[14:40:57] <LeoNerd> TBH I'm not sure I really have much of a use for it
[14:41:30] <LeoNerd> Most of the C I write is either Perl core, or _tiny_ microcontroller stuff,.. I know there is a "rust on AVR" project that apparently works, but I'm not sure the code I write there is really big enough to justify it
[14:41:41] <LeoNerd> There's only so much you can manage to fit in 8Ki of flash and 1Ki of RAM
[14:42:40] <Altreus> I read a diatribe on Go and now I have no desire to entertain it
[14:44:42] <EvanCarroll> LeoNerd: The micropy project is pretty awesome. Rust would kill at that domain.
[14:45:32] <LeoNerd> Oh possibly so.. I just don't feel *I* have the time to dedicate to it
[14:45:36] <LeoNerd> Too busy trying to keep Perl afloat
[14:45:49] <LeoNerd> Speaking of: has anyone tested out my "stable-booleans" branch yet?
[14:49:42] *** Joins: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e)
[14:58:52] <shlomif> LeoNerd: i have not - let me see
[15:00:02] <shlomif> today my test suite caught a bunch of bugs in a new program i wrote: https://github.com/shlomif/shlomif-computer-settings/commit/e8f9c18dbd741700015086e932df283864c158b7
[15:00:03] <Paperbot_> Link title(s): [ add largest-version script for refactoring perl/core theme · shlomif/shlomif-computer-settings@e8... ]
[15:04:06] *** Joins: anthk_ (~anthk_@92.176.105.30)
[15:17:37] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Ping timeout: 245 seconds)
[15:23:30] <Altreus> LeoNerd: is keeping it afloat arational thing to do?
[15:23:52] <Altreus> I suppose if it sinks we'd have to make puns elsewhere
[15:24:07] *** Joins: emanuele6 (~emanuele6@2001:b07:645e:ea8c:221:ccff:fe6c:949d)
[15:24:19] *** Quits: emanuele6 (~emanuele6@2001:b07:645e:ea8c:221:ccff:fe6c:949d) (Changing host)
[15:24:19] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[15:24:32] <LeoNerd> Speaking of floats, and rationals: I need an identifer name, for a wrapper function of the %% operator.
[15:24:39] <LeoNerd> I'm thinking  is_divisor
[15:24:43] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 252 seconds)
[15:24:53] <LeoNerd> I dno't really like "divides" because it isn't named  is_...
[15:25:13] <LeoNerd> And since Perl isn't Scheme so we can't just put a `?` on the end of function names, that'll have to do
[15:26:31] <LeoNerd> And in other news, I sometimes really wish perl version numbering had the `~` character from Debian
[15:26:53] <LeoNerd> Its nominal value is negative.. it lets you make "before" versions... version 0.2~rc1 is /before/ version 0.2
[15:26:57] <shlomif> LeoNerd: 1. is_divisor() sounds fine. 2. i am running "make test" on https://github.com/Perl/perl5/pull/19040
[15:27:00] <Paperbot_> Link title(s): [ Stable tracking of "boolean intent" across SVs by leonerd · Pull Request #19040 · Perl/perl5 · Gi... ]
[15:27:01] <LeoNerd> Which is always what you want with rc versions
[15:27:25] <Altreus> is_divisible?
[15:27:29] <LeoNerd> shlomif: Right. I know the perl *itself* works fine. I'm interested in hearing test results of *using* it for some real code
[15:27:47] <shlomif> << All tests successful. Files=2692, Tests=1197883, 375 wallclock secs (146.95 usr 15.76 sys + 984.87 cusr 69.62 csys = 1217.20 CPU)>>
[15:27:50] <Altreus> _by
[15:28:09] <LeoNerd> is_diviible_by { CODEBLOCK } NUMBER
[15:28:10] <LeoNerd> Hrm
[15:28:13] <Altreus> it's 6 %% 2 not 2 %% 6, right
[15:28:37] <Altreus> so it means "is divisible by", not "is a factor of"
[15:28:48] <Altreus> in either case, there's a name
[15:30:03] <Altreus> Also I made a big deal out of RC versioning at $job[-2] and I didn't even use a figure, just v2rc1
[15:30:54] <fling> Don't you like sentimental versioning?
[15:32:27] <Altreus> I said figure but I meant "some sort of dash"
[15:37:36] *** Joins: icedjava37 (~icedjava3@ppp046177149155.access.hol.gr)
[15:39:41] <EvanCarroll> eval: 1
[15:39:43] <perlbot> EvanCarroll: 1
[15:39:48] <EvanCarroll> oh good it answers to me again.
[15:40:26] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[15:41:24] <EvanCarroll> eval: chr(ord("a")-ord("A") + ord("B"))
[15:41:26] <perlbot> EvanCarroll: b
[15:41:53] <EvanCarroll> eval: ord("a")-ord("A")
[15:41:55] <perlbot> EvanCarroll: 32
[15:42:22] <LeoNerd> I -think- that remains true in EBCDIC as well; that  ord(UPPER) - ord(lower)  of the same letter is constant
[15:42:29] <LeoNerd> it's just a different constant than in ASCII
[15:42:54] <EvanCarroll> yeah, i vaguely remember that being true too
[15:43:57] <EvanCarroll> but I forget which papyrus bearing history script led me to believe that
[15:44:25] <EvanCarroll> eval: chr(ord("B")<<5)
[15:44:26] <perlbot> EvanCarroll: ࡀ
[15:45:36] <EvanCarroll> Actually you're adding 32 in binary. which is just flipping that 2**5 bit. that was the thing.
[15:45:45] <EvanCarroll> eval: chr(ord("B") | 2**5)
[15:45:46] <perlbot> EvanCarroll: b
[15:51:47] <LeoNerd> I have a physical "pause" button on my keyboard. How much work I wonder, would it take, to ensure that button always does the right thing... whether I'm playing a youtube video in a browser tab, or mplayer, or cmus, or... whatever
[15:52:22] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[15:52:37] <art1> Botje: shlomif: Because of the gestrign problem with error when using Parallel::Iterator. The cause seems to have been the module Storable which was shipped with Debian Buster. Since yesterday's update of the module on our system it seems to run stable now.
[15:52:46] *** Quits: anthk_ (~anthk_@92.176.105.30) (Ping timeout: 252 seconds)
[15:53:05] <art1> s/gstrign/yesterday's/
[15:53:45] *** Joins: mattil (~mattil@airio.portalify.com)
[15:55:12] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[15:55:44] <Altreus> gosh I remember pressing pause to pause games
[15:55:55] <Altreus> this laptop doesn't even feature one
[15:56:06] <Altreus> nor a media key for it wtf
[15:56:21] <Altreus> what is this, a laptop for ... not media consumers?
[15:56:51] <Altreus> It has a bloody scroll lock. What modern application can use that?
[15:56:57] * Altreus tries
[15:57:24] <Altreus> but apparently no light to indicate it is active
[15:58:33] <fizzie> I use the "pause/break" key as the "lock screen" shortcut, because that's what you do when you want to take a break.
[15:59:10] *** Quits: mattil (~mattil@airio.portalify.com) (Ping timeout: 260 seconds)
[15:59:29] <Altreus> This laptop is not designed for break-takers
[15:59:59] <shlomif> art1: i see - thanks for the head's up
[16:00:18] <art1> shlomif: np
[16:06:18] * GumbyPAN CPAN Upload: JSON-Parser-Regexp-0.19 by RAJ https://metacpan.org/release/RAJ/JSON-Parser-Regexp-0.19
[16:07:50] *** xv8 is now known as XV8
[16:08:10] *** Quits: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[16:11:17] *** XV8 is now known as xv8
[16:13:45] *** Quits: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e) (Ping timeout: 260 seconds)
[16:14:41] *** Joins: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de)
[16:16:27] *** Quits: ufobat (~martin@dynamic-095-114-173-173.95.114.pool.telefonica.de) (Ping timeout: 265 seconds)
[16:17:00] <andrzejku> is the PLD is used somewhere nowdays?
[16:17:01] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[16:17:11] <andrzejku> it looks like a died project
[16:18:47] *** Quits: Masklin_Gurder (~joel@89-233-200-127.cust.bredband2.com) (Ping timeout: 245 seconds)
[16:22:55] <ilmari> andrzejku: do you mean PDL? It seems to have a steady stream of releases: https://metacpan.org/dist/PDL/changes
[16:22:56] <Paperbot_> Link title(s): [ Changes - metacpan.org ]
[16:25:52] <andrzejku> a yes indeed
[16:26:20] * GumbyPAN CPAN Upload: Games-Sudoku-General-0.026 by WYANT https://metacpan.org/release/WYANT/Games-Sudoku-General-0.026
[16:26:24] *** Joins: Masklin_Gurder (~joel@89-233-200-127.cust.bredband2.com)
[16:26:42] <ilmari> ad the mailing list seems moderately active: https://sourceforge.net/p/pdl/mailman/pdl-general/
[16:26:44] <Paperbot_> Link title(s): [ Perl Data Language / List pdl-general Archives ]
[16:38:15] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 260 seconds)
[16:41:41] <Botje> andrzejku: maybe it's just "done"?
[16:41:56] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[16:41:57] *** Joins: G_Sabino1ullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[16:42:09] <andrzejku> Botje, what do you mean by done?
[16:42:34] <Botje> no more features, no more bugs.
[16:42:55] <Botje> how did you come to the conclusion it's a "dead project"?
[16:44:29] <andrzejku> Botje, I just tried to use it and found that it is not very popular in google
[16:45:04] <Botje> since when is "not popular" the same as "dead"?
[16:45:32] *** Joins: ufobat (~martin@dynamic-095-114-173-173.95.114.pool.telefonica.de)
[16:48:25] <andrzejku> Botje, sometimes yes
[16:48:46] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:49:40] <Botje> that's a terrible mindset to have.
[16:51:56] <andrzejku> Botje, I am sorry :( forgive me
[17:06:29] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[17:11:24] * GumbyPAN CPAN Upload: Mojolicious-Plugin-TagHelpers-ContentBlock-0.11 by AKRON https://metacpan.org/release/AKRON/Mojolicious-Plugin-TagHelpers-ContentBlock-0.11
[17:16:34] *** Joins: hethw (~heth@46.238.32.56)
[17:18:09] <hethw> hi. I have a json with \u00d1\u0084 inside I want to convert it to the proper \u0444 how do I do that?
[17:18:25] <hethw> as I understand \u is a json specific format
[17:21:06] *** Quits: icedjava37 (~icedjava3@ppp046177149155.access.hol.gr) (Quit: leaving)
[17:21:30] *** Joins: humky (~humky@user/humky)
[17:22:49] *** Joins: proller (~p@2a02:6b8:0:51e:de6b:f9c7:b25:ab2a)
[17:24:05] <fizzie> Ending up in a situation where you have individual UTF-8 *bytes* escaped as "\u00xx" in the first place is a tragic tragedy of tragic proportions.
[17:26:26] * GumbyPAN CPAN Upload: Log-Log4perl-Layout-JSON-Readable-1.0.2 by DAKKAR https://metacpan.org/release/DAKKAR/Log-Log4perl-Layout-JSON-Readable-1.0.2
[17:27:36] <LeoNerd> That sounds like a double-encoding problem
[17:29:45] <hethw> fizzie, thanks for the help. :P
[17:30:17] <fizzie> I mean, I imagine in practical terms you *could* just do something like decode("utf-8", encode("iso-8859-1", $json_string)) to cope with it. But it's not a good place to be.
[17:30:24] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[17:32:54] *** Joins: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e)
[17:35:25] *** Quits: horsepatat (~horsepata@212.3.197.193) (Read error: Connection reset by peer)
[17:36:38] <fizzie> https://l.perl.bot/p/pb8wi6 suggests that "works".
[17:36:38] <Paperbot_> Link title(s): [ Perlbot Pastebin ]
[17:37:06] <Botje> yes. the correct solution is a swift bop on the nose of whoever is giving you broken JSON.
[17:38:44] <LeoNerd> perlbot: swift bop
[17:38:44] <perlbot> LeoNerd: No factoid found. Did you mean one of these: [sw0rdfish] [bp pdf] [spider] [sandbox] [spetrea] [szabgab] [spudnuts] [subspace] [sound off] [spellbook]
[17:39:31] <sivoais> andrzejku: yes, PDL is used! And we're actively developing new features. For example, the latest big overhaul was using C11's "native" complex numbers as internal types.
[17:43:01] *** Joins: choroba (~E.Choroba@88.146.255.106)
[17:45:55] *** Quits: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e) (Ping timeout: 260 seconds)
[17:46:13] *** Joins: anthk_ (~anthk_@92.176.105.30)
[17:46:28] * GumbyPAN CPAN Upload: Music-Beets-Info-0.006 by WOLDRICH https://metacpan.org/release/WOLDRICH/Music-Beets-Info-0.006
[17:46:41] *** Quits: randir_ (~randir@93.159.239.42) (Remote host closed the connection)
[17:52:40] *** Quits: anthk_ (~anthk_@92.176.105.30) (Ping timeout: 252 seconds)
[17:58:30] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[18:01:30] * GumbyPAN CPAN Upload: DBIx-Lite-0.33 by AAR https://metacpan.org/release/AAR/DBIx-Lite-0.33
[18:02:27] *** Joins: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e)
[18:03:34] *** Quits: mmlj4 (~mmlj4@ip68-11-69-185.no.no.cox.net) (Ping timeout: 252 seconds)
[18:04:01] *** Joins: mmlj4 (~mmlj4@ip68-11-69-185.no.no.cox.net)
[18:05:00] *** xv8 is now known as XV8
[18:06:03] *** Quits: humky (~humky@user/humky) (Quit: Leaving)
[18:07:34] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[18:10:28] *** XV8 is now known as xv8
[18:10:55] *** Joins: tg (~tg@rockylinux/infra/tg)
[18:12:42] *** Quits: xv8 (~xv8@2601:5cb:c001:50:cb86:fdfc:1f51:a5a0) (Quit: Konversation terminated!)
[18:13:08] *** Quits: aspic (~shifty~~~@ppp121-44-102-202.syd-gls-har-bras38.tpg.internode.on.net) (Ping timeout: 260 seconds)
[18:14:15] <leitz> Yay me! I've been studying "Grokking Simplicity" and finally caught on to the advantages of passing a subroutine reference to a function. 
[18:14:36] <mst> \o/
[18:14:43] <leitz> My skills still need work, but I seem to be going in the right direction.
[18:15:12] <leitz> Hey mst, Happy Tuesday!
[18:15:13] <mst> dicking around with passing functions to functions and stuff is one of those things that initially seems pointless and then once you have the 'aha' moment is glorious :D
[18:15:31] *** Quits: B33F_1337 (~b33f1337@host.b33f1337.com) (Quit: whoops)
[18:15:40] <ilmari> perlbot: tell leitz about hop
[18:15:40] <perlbot> leitz: Higher Order Perl, http://hop.perl.plover.com/, download at http://hop.perl.plover.com/book/pdf/HigherOrderPerl.pdf
[18:16:07] * leitz actually met MJD once, and hop is on the "to buy" list. 
[18:16:31] * GumbyPAN CPAN Upload: Log-Log4perl-Layout-JSON-Readable-1.0.3 by DAKKAR https://metacpan.org/release/DAKKAR/Log-Log4perl-Layout-JSON-Readable-1.0.3
[18:16:50] <ilmari> leitz: no need to buy, he's made it available for free on hist website
[18:17:00] <leitz> ilmari, I'm still transitioning into my "Perl Brain". I have lots of books, but have to work to overcome the cognitive dissonance.
[18:17:47] <leitz> ilmari, I like to buy; it supports the author and I can read it as my nighttime ritual. 
[18:18:18] <ilmari> leitz: both valid reasons
[18:19:02] *** Joins: B33F_1337 (~b33f1337@host.b33f1337.com)
[18:19:23] <leitz> Last night I read a chapter on the advantages of passing functions in "Grokking Simplicity", and let it settle in to my brain. Through all the rocks and detrius. This morning I had a simple idea to test that I understood the syntax of it.
[18:19:55] <leitz> My plan is to practice more, and then "take it to work" in some of my personal projects. 
[18:20:04] <leitz> Maybe eventually to actual work.
[18:21:59] <mst> leitz: I *love* that book
[18:22:05] *** Quits: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e) (Ping timeout: 260 seconds)
[18:24:17] <leitz> mst, it's really helped me understand the concept and value of functional programming. I didn't get either, but the book is pragmatic and useful.
[18:24:56] <mst> leitz: note - and I mean this as a compliment to the book - that when I read HOP I didn't really learn any major new things, but found it a wonderful read that felt like "comparing notes with another perl hacker with similar preferences for function composition batshittery"
[18:26:31] * mst remembers once getting a feedback entry on a YAPC talk to mine that just said "you are not Damian Conway"
[18:26:54] <Altreus> all positive then
[18:26:59] <mst> my immediate thought was "no, no I'm not ... but that's fine, cos I wanted to be MJD when I grew up anyway"
[18:27:37] <mst> when I got around to telling them in person, both Damian and MJD thought that was both appropriate and hilarious
[18:27:40] <Altreus> Damian Conway is one of those names that makes me thing "pillock" but actually I have no idea what he's like
[18:27:53] <Altreus> Like Richard Dawkins, you understand
[18:28:03] <mst> Altreus: hah, fair, but he's fucking awesome
[18:28:26] <Altreus> I'm certain he's been instrumental in my being where I am today
[18:28:45] <Altreus> via various English or Perl writings
[18:28:59] <mst> I'm fairly certain that's true of pretty much all of us
[18:29:39] <mst> among other things, he's the single best regexp guru I'm aware of
[18:30:27] *** Joins: mov_eax (~mov_eax@user/mov-eax/x-5035058)
[18:30:48] <Altreus> I don't use those any more
[18:30:54] <Altreus> Not on purpose, although I could spin a yarn
[18:31:27] <Altreus> I have recently deleted a lot of them though
[18:31:51] <mst> to the point where when I decided to riff off his YAPC keynote to set up a lightning talk once, I got him to look at the code to check I hadn't missed an easier way, and was exceedingly chuffed when he looked over it and went roughly "nope, I agree, this is the least batshit way to implement that under the circumstances"
[18:32:33] <mst> ... damnit, now I'm missing audrey ...
[18:32:49] <leitz> mst, audrey?
[18:33:06] <mst> leitz: audrey tang
[18:33:10] <Altreus> That's a name I've not heard in a long time
[18:33:50] <mst> leitz: one of the old guard true genius perl hackers
[18:34:09] <EvanCarroll> best perl5 hacker, imho.
[18:34:37] <EvanCarroll> who writes perl6 in haskell because they're bored and tired of waiting for it to be invented...
[18:34:40] <EvanCarroll> there is always one.
[18:34:48] * leitz comes back from the google search.
[18:35:01] <leitz> Nice. 
[18:35:09] <mst> right, she's the only person I know of who was better at giving out commit bits than I was in that era
[18:36:14] <mst> ten years ago, when I'd just perpetrated truly stupid shit in perl and I wanted feedback without first having to spend 45 minutes explaining that I'd done, my list of people to ask were: larry, damian, ingy, audrey
[18:36:50] *** Quits: zln (~zln@c80-217-230-193.bredband.tele2.se) (Quit: WeeChat 3.2)
[18:37:03] <leitz> Well, you're on my list, mst, so there is a circle of life thing there.  :)
[18:37:21] <EvanCarroll> leitz: your list is desperate.
[18:37:30] <EvanCarroll> ;)
[18:37:39] <leitz> :P
[18:38:32] <leitz> So, my learning plan is taking a turn. 
[18:38:35] <mst> EvanCarroll: we all know that for a while I was on -your- list of people to check in with when you'd juast perpetrated something clever :D
[18:38:57] * leitz thinks EvanCarroll probably sobered up at some point in time...
[18:39:45] <mst> leitz: I dunno, we get on -better- these days than we used to, so I'm not convinced sobriety is much involved :D
[18:40:24] *** Parts: Dima[m] (~reddima10@2001:470:69fc:105::366) ()
[18:40:28] <EvanCarroll> mst: I had a very long list, but sure I had you on it.. filed between ice cream, and sky god.
[18:40:36] <leitz> I tend to see good books and buy them. And read some of them, and read about some of the concepts. The failure I keep stumbling on is that I'm trying to learn higher order stuff without being unconsciously fluent in the basics.
[18:41:28] <leitz> My current track is to keep banging at the basics. Buy hop when I get through the books I have. Work on my personal projects and get feedback.
[18:42:10] <leitz> The goal is mastery. Not as in "I'm a master", but an ability to code without having to look things up.
[18:42:23] <mst> leitz: lolwhat
[18:42:37] <mst> mastery isn't not having to look things up
[18:42:58] <mst> IMO it's much more "knowing where to look things up and being able to do so quickly""
[18:43:28] <EvanCarroll> leitz: do you know any other language?
[18:44:08] <leitz> mst, I'd disagree. Here's how I'm seeing mastery. If I want to work on a problem, I can think through the solution and write the tests and code without having to look up simple stuff.
[18:45:03] <leitz> EvanCarroll, yes, and that's part of my struggle. Perl is great, but more difficult for me. It "sticks" less, so unless I make and munge hashes on a daily basis I forget how.
[18:45:15] <mst> leitz: fair, but that's just improving your mental cache to me
[18:45:20] <mst> well worth it
[18:45:22] <EvanCarroll> what other language do you use?
[18:45:38] <leitz> mst, makes sense.
[18:46:15] <leitz> EvanCarroll, I have worked with shell, Python, Ruby, C, Go, PHP, TCL, and some SQL. 
[18:46:34] *** Quits: dsrt^ (~dsrt@68.101.54.227) (Remote host closed the connection)
[18:46:40] <mst> leitz: note that before I do anything unusually complex in perlre, I re-read perldoc perlre top to bottom, then keep perlreref open in a browser tab the entire time I'm writing the code
[18:46:54] <leitz> However, my day job is in Perl, sort of, and I'm just not the brilliant coder who can keep a dozen languages straight in their head.
[18:47:20] <mst> I feel it's worth remembering that after 20 years of writing perl for money I *still* do that
[18:47:46] <leitz> I'm not at audrey level, certainly. Not even at "mst after a heavy drinking weekend with no sleep" level.
[18:48:05] <mst> *LOL*
[18:48:53] <leitz> mst, understood. There's always going to be stuff to learn, and that's why I love my career. I just want to have to basics down so much that I can think about the problem, and not the syntax. 
[18:49:17] <leitz> I had that with Ruby, and was getting close with Python. Still not there with Perl.
[18:49:32] <EvanCarroll> Python is a better language for learning higher ordered programmer. So is JS.
[18:49:53] <mst> disagree re python
[18:50:00] <mst> ES6 with => and let, yeah, fair enough
[18:50:10] <leitz> EvanCarroll, oddly enough, Perl is the best for what I personally want to do. Sometimes I almost cry about that, but it's the truth.
[18:50:17] <Altreus> I actually learned higher-order programming in terms of JS
[18:50:18] *** Joins: gryphn (~gryphn@154.21.20.106)
[18:50:22] <mst> but if you don't have decent lexical scoping and closures, it's just not the same
[18:50:23] <Altreus> And brought the understanding back to perl
[18:50:35] <EvanCarroll> I'm more referring to the ecosystem.
[18:51:05] <Altreus> expound
[18:51:05] <EvanCarroll> https://pyfunctional.pedro.ai/
[18:51:06] <Paperbot_> Link title(s): [ PyFunctional by EntilZha ]
[18:51:13] <EvanCarroll> With JS there is Ramda
[18:51:19] <mst> and lodash
[18:51:24] <EvanCarroll> lodash is garbage
[18:51:26] <EvanCarroll> but anyway. ;)
[18:51:37] <mst> I can use either pretty happily
[18:51:47] <mst> ramda is damn nice though
[18:52:22] <mst> but python's scoping is shit enough that I just can't
[18:53:05] <EvanCarroll> Altreus: ramda/lodash/pyfunctional and rx.js have no Perl analogs, so we do things differently that will make it harder for you to grok higher ordered programmer because you'll simply see so much less of it.
[18:53:06] * mst learned function composition fuckery about 20 years ago in perl and scheme
[18:53:16] <Altreus> can't take seriously a webpage claiming to be functional that only shows me lambdas in the synopsis
[18:53:37] <Altreus> I was kind of hoping it made anonymous local functions a bit more plausible
[18:53:40] <EvanCarroll> scheme/haskell are also great for teaching that but no one really wants to learn _another_ language to pick up a concept which is why I start off the question with asking what you know
[18:53:42] <mst> p3rl.org/RxPerl # "no perl analogs" my hairy arse
[18:53:44] <EvanCarroll> but to each their own.
[18:54:15] <mst> right, hence why I didn't mention it sooner, but it's still how -I- learned
[18:54:40] <Altreus> but I already grok higher-order programming and I don't really see perl to be any different from JS
[18:54:50] <leitz> EvanCarroll, learning FP isn't really my goal, the simplicity is. The book uses JS because it's *not* a pure FP language, and is an easier one to read if you don't know.
[18:54:58] <Altreus> They both have basically the same scoping rules and basically the same inability to curry properly
[18:55:07] <EvanCarroll> Altreus: erg, that was directed at leitz 
[18:55:11] <Altreus> o
[18:55:26] <Altreus> *Altreus = *leitz
[18:55:31] <leitz> We look so much alike...
[18:56:33] * mst wouldn't know, hasn't met leitz for a beer in person yet
[18:57:01] <Altreus> You wouldn't recognise me. My hair is an inch longer now.
[18:57:03] <leitz> mst, one day. German beer, though. American and British make me ill. Not sure why.
[18:57:26] <Altreus> They taste of principles
[18:57:33] <mst> leitz: I don't believe in drink shaming :D
[18:58:39] <leitz> Well, I haven't been to a pub for a long time, and never was good at darts. Still, I'll give it a go.
[18:58:40] <mst> anyway, at my local pubs I usually drink snakebite and black which weirds out basically everybody
[18:58:46] <revhippie> Kids in the Hall, "Girl Drink Drunk"?
[18:58:59] <mst> hah, I can't play darts worth a damn
[18:58:59] <Altreus> I've not had snakebite black since before uni
[18:59:32] <mst> Altreus: it's been my standard pint for a bit over 20 years
[18:59:58] <mst> Altreus: stowford press and carlsberg export for preference
[19:00:07] <Altreus> it's a classic
[19:00:15] <leitz> I can't remember what I drank when I was there. It was probably an affectation more than a conscious choice.
[19:00:32] <mst> I picked up the habit from the wigan goth scene in '99 or so
[19:00:57] <revhippie> heh, Google's "People also ask..." re: "snakebite black" -- "Is snakebite and black illegal?"
[19:01:19] <Altreus> well, is it?
[19:01:27] <mst> it is not
[19:01:32] <revhippie> Altreus: "In order to avoid the odious task of what we call "vom-mopping" or more descriptively "carrot-picking", certain drinks such as snakebite (with or without black) or over the top cocktails are banned. This ban has the added bonus of keeping out goths and people with dogs on string."
[19:01:51] <mst> but there's a huge thing where some bartenders -think- it is
[19:02:12] <Altreus> dogs on string
[19:02:17] <vague> mst, have you tried it with Guinness?
[19:03:09] <mst> vague: what the FUCK
[19:03:30] <Altreus> where's the line between geniun bemusement and shaming? :)
[19:04:02] <vague> A bartender at my local pub gave me one and it was surprisingly tasty
[19:04:02] <mst> Altreus: so snakebite (sans black) was a punk scene thing, then snakebite and black was a goth scene thing
[19:04:21] <Altreus> I'm sure there are Irish goths
[19:04:25] <mst> so crustpunks and dogs on strings are a thing
[19:04:38] <Altreus> like literally a string instead of a lead?
[19:04:58] <Altreus> my dad calls any sufficiently small dog a rat on a string
[19:05:09] <mst> well, more rope than string technically but yes absolutely
[19:05:30] <huf> what is black?
[19:05:32] <mst> hell, a friend of mine used to organise punk festivals around here and the festivals were -called- "dog on a string"
[19:05:48] <mst> huf: blackcurrant cordial - ribena basically
[19:05:58] <Altreus> we should try other things, like vimto
[19:06:07] <mst> aughno that does -not- work
[19:06:11] <Altreus> he's tried
[19:06:55] *** Quits: EvanCarroll (~ecarroll@88.244.92.96) (Ping timeout: 252 seconds)
[19:07:10] <mst> I mean it reached the point where if I saw the dude in person I can't remember his actual name at all but everybody I know who knows him would recognise who I was addressing if I said "alright, dog!"
[19:07:30] *** Quits: yano (~yano@ircpuzzles/staff/yano) (Quit: WeeChat, the better IRC client, https://weechat.org/)
[19:07:48] *** Joins: yano (~yano@ircpuzzles/staff/yano)
[19:08:24] <mst> vague: did you mean half guiness, half cider, or what?
[19:08:42] <huf> all of these sound so desperate
[19:09:07] <vague> Yeah. Well, smaller than a pint but half'n'half plus currant
[19:09:08] <huf> teenaged "i havent any money and i wanna get fucked up in 20 minutes" desperate
[19:09:16] <mst> vague: interesting
[19:09:18] <Altreus> huf: yep
[19:09:41] <Altreus> huf: with a bit of "all of these options are revolting; what if we mix them?"
[19:09:46] <huf> but if that's the case, what's wrong with cheap vodka and cheap apple juice? :D
[19:10:01] <Altreus> spirit of experimentation
[19:10:07] <mst> huf: that's actually where a bunch of my annoyance comes from - I've been drinking snakebite and black so long that I'm actually more predictable in terms of rate of drunkenness on that than anything else
[19:10:10] <huf> or you know, vodka and water and the memory of a slice of lime
[19:10:13] *** Joins: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr)
[19:10:25] <Altreus> variety is the spice of life?
[19:10:34] <huf> still, at least it's not red wine + coke
[19:10:36] <huf> that thing is just vile
[19:10:38] <mst> but too many places assume that snakebite is a fast ticket to fucked up ville
[19:10:59] <mst> and I'm going "yes, yes, I know, but not in my case, can I have a pint please?"
[19:11:35] <mst> huf: oh, at home, vodka and blackcurrant is my standard drink
[19:11:59] <mst> Altreus: oh, yeah, that's one of the reasons for snakebite
[19:12:39] <Altreus> Been to enough clubs where the only palatable drink is newky brown
[19:12:44] <mst> Altreus: shitty dive bar, don't trust the lines, so you get half your pint from one line, half from the other, and ribena added as well, it's basically guaranteed to taste like a pint no matter how badly the people maintaining the lines have fucked it up
[19:12:52] <Altreus> Grolsch was always a relief
[19:13:09] <mst> right, bottle of dog was a pretty standard fallback plan for me if they wouldn't give me snakebite
[19:15:50] *** Joins: Su-Shee_ (~Susanne@p4ffc7f3c.dip0.t-ipconnect.de)
[19:16:01] *** Joins: gizmomathboy (~gizmomath@206.127.53.107)
[19:16:42] *** Quits: Su-Shee (~Susanne@p4ff49fe9.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[19:17:53] <hethw> fizzie, thanks, and this will need another transformation to become \u0444
[19:19:50] *** Quits: mov_eax (~mov_eax@user/mov-eax/x-5035058) (Ping timeout: 260 seconds)
[19:21:18] <Botje> \u0444 is a JSON representation of the unicode code point U+0444
[19:21:35] <Botje> If you include it in a JSON document it will appear as part.
[19:21:44] *** Quits: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net) (Ping timeout: 252 seconds)
[19:22:26] <Botje> eval: use JSON qw(encode_json); $chr = chr(0x444); encode_json({abc => "my $chr string"})
[19:22:27] <perlbot> Botje: {"abc":"my ф string"}
[19:22:35] <Botje> .. or just render it. that works too.
[19:23:23] *** Joins: YaoNai (~YaoNai@user/yaonai)
[19:23:49] <mst> hah
[19:24:01] *** Joins: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net)
[19:24:35] *** Joins: randir (~randir@95-25-59-33.broadband.corbina.ru)
[19:25:17] <rewt> eval: use JSON qw(encode_json); $chr = chr(0x444); JSON->new->ascii->encode({abc => "my $chr string"})
[19:25:19] <perlbot> rewt: {"abc":"my \u0444 string"}
[19:27:20] <mst> ascii? YOU ANIMAL
[19:28:00] <Botje> well, hethw was ascii'ing for it.
[19:29:05] <huf> huh, i like how acsii works just as well
[19:29:24] <Altreus> I WANNA ENCODE LIKE AN ANIMAL
[19:29:53] <Altreus> can't think of the next line
[19:32:01] *** Joins: mattil (~mattil@62-113-189-106.bb.dnainternet.fi)
[19:32:07] <mst> I WANNA PARSE YOU FROM THE FIRST BYTE
[19:32:36] <huf> i think it'd work better with "pack" instead of "encode"
[19:32:51] <Altreus> I agree
[19:32:52] <huf> if this is the NIN song
[19:33:36] *** Quits: art1 (~romeyke@p200300ccdf037c0091f547ed79ee9414.dip0.t-ipconnect.de) (Quit: Leaving.)
[19:33:45] *** Joins: EvanCarroll (~ecarroll@46.196.88.53)
[19:36:37] *** Quits: mattil (~mattil@62-113-189-106.bb.dnainternet.fi) (Ping timeout: 252 seconds)
[19:37:53] *** Joins: thrig (~thrig@65.113.153.50)
[19:41:25] *** Quits: YaoNai (~YaoNai@user/yaonai) (Quit: leaving)
[19:46:31] *** Quits: mmlj4 (~mmlj4@ip68-11-69-185.no.no.cox.net) (Ping timeout: 252 seconds)
[19:51:45] *** Joins: Manderson (~manderson@45.40.80.170)
[19:54:13] *** Quits: Manderson_ (~manderson@45.40.80.170) (Ping timeout: 252 seconds)
[19:55:36] *** Joins: bit4bit (~bit4bit@190.128.123.78)
[19:56:58] *** Quits: thrig (~thrig@65.113.153.50) (Ping timeout: 252 seconds)
[19:58:02] *** Joins: thrig (~thrig@65.113.153.50)
[19:58:30] *** Quits: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr) (Quit: leaving)
[19:59:36] *** Joins: mmlj4 (~mmlj4@ip68-11-69-185.no.no.cox.net)
[20:00:11] *** Joins: magla (~gelignite@55d44c2f.access.ecotel.net)
[20:10:10] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 252 seconds)
[20:23:56] *** Quits: shlomif (~shlomif@87.68.240.100.adsl.012.net.il) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[20:29:37] *** Quits: ShorTie (~ShorTie@205.sub-72-105-247.myvzw.com) (Ping timeout: 245 seconds)
[20:30:05] *** Joins: ShorTie (~ShorTie@112.sub-72-108-77.myvzw.com)
[20:32:32] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[20:39:08] <thrig> LeoNerd: https://l.perl.bot/p/wiccxg
[20:39:09] <Paperbot_> Link title(s): [ Perlbot Pastebin ]
[20:39:39] <LeoNerd> Correct...  match/case are controlflow statements, and not expressions
[20:39:42] <LeoNerd> You cannot `return match...`
[20:39:43] <mst> thrig: do {}
[20:39:52] <mst> or just remove the 'return'
[20:39:55] <LeoNerd> Either put the `return`s inside the case, or what mst said
[20:40:52] <thrig> maybe a documentation warning, as some folks might want the "return" as the "final statement in its containing "sub"" ?
[20:41:49] <mst> thrig: the documentation explains all of this already?
[20:42:05] <mst> I mean, that's how I debugged it
[20:42:22] <thrig> no? it says "final statement" but not that "putting return in front of said produces wacky error message"
[20:42:33] <mst> it says it's a statement
[20:42:45] <mst> so using it as an expression is nasal demon time
[20:42:56] <thrig> users may be unclear on the distinction
[20:42:56] <mst> 'return if' won't be happy either
[20:42:59] <ilmari> return is a statement that takes an expression yielding the value to return.
[20:43:49] <mst> the error message does suck
[20:44:28] <mst> not sure what LeoNerd can do about that if anything though
[20:44:42] * mst has thankfully forgotten most things he learned about the parser
[20:44:49] <LeoNerd> I -could- complain earlier if  PL_parser->expect == XTERM  but I have /no/ idea if that finds weird cornercases of things that break
[20:44:53] <LeoNerd> That might break   do { STMT }
[20:45:07] <LeoNerd> I'd have to experiment. Trying to work out if perl is expecting a full statement or not, is not very reliable
[20:45:25] <LeoNerd> my @x = map { Well what do we have here...?
[20:45:37] <thrig> or a doc example,  sub { ...   # no return here!   match .... }
[20:46:02] <LeoNerd> I shall do the same thing that the docs for if, while, foreach, all do
[20:46:17] <mst> yeah, documenting the last-statement thing and 'do { ... }' both would be a good idea likely
[20:46:31] <LeoNerd> I thought I mentioned that? I mostly copypasta'ed it from try/catch
[20:46:40] <thrig> do {} is mentioned
[20:47:00] <LeoNerd> > Even though a match statement is a full statement and not an expression, 
[20:48:01] *** Joins: e1f (~user@141.117.1.139)
[20:48:06] *** Quits: gryphn (~gryphn@154.21.20.106) (Ping timeout: 265 seconds)
[20:48:38] <mst> LeoNerd: yeah, I meant documenting as in explicit examples
[20:48:40] *** Joins: icedjava37 (~icedjava3@ppp046177149155.access.hol.gr)
[20:49:48] *** Quits: choroba (~E.Choroba@88.146.255.106) (Quit: Leaving)
[20:53:33] *** Joins: willthechill (~willthech@2600:1700:8c61:3ed0:3177:ae04:5861:103b)
[20:55:10] *** Quits: tobybl (~tobybl@189.192.115.87.dyn.plus.net) (Remote host closed the connection)
[20:57:33] *** Quits: KnoP (~KnoP@business-176-095-149-105.static.arcor-ip.net) (Quit: ChatZilla 0.9.99 [SeaMonkey 2.53.9/20210823155652])
[21:01:08] *** Quits: bit4bit (~bit4bit@190.128.123.78) (Ping timeout: 265 seconds)
[21:01:48] * GumbyPAN CPAN Upload: Test-MockModule-v0.177.0 by GFRANKS https://metacpan.org/release/GFRANKS/Test-MockModule-v0.177.0
[21:06:42] *** Joins: bn_work (uid268505@id-268505.highgate.irccloud.com)
[21:08:52] *** Quits: mmlj4 (~mmlj4@ip68-11-69-185.no.no.cox.net) (Ping timeout: 265 seconds)
[21:09:53] *** Joins: mmlj4 (~mmlj4@ip68-11-69-185.no.no.cox.net)
[21:11:30] *** Joins: gast0n (~g4570n@user/gast0n)
[21:11:48] * GumbyPAN CPAN Upload: Date-5.2.9 by SYBER https://metacpan.org/release/SYBER/Date-5.2.9
[21:17:26] *** Joins: bes_internal (~bes@leased-line-217-21-59-112.telecom.by)
[21:17:38] *** Quits: Linux77 (~Linux7_7@186.233.182.237) (Read error: Connection reset by peer)
[21:17:57] *** Joins: Linux77 (~Linux7_7@186.233.182.237)
[21:22:11] <buu> LeoNerd: did you see the Notcurses library?
[21:22:35] <LeoNerd> I have not
[21:23:19] *** Quits: mmlj4 (~mmlj4@ip68-11-69-185.no.no.cox.net) (Ping timeout: 252 seconds)
[21:23:52] *** Joins: mmlj4 (~mmlj4@ip68-11-69-185.no.no.cox.net)
[21:25:33] <Altreus> Is it not curses?
[21:27:27] <mst> o/ some of those who use curses / find tickit to be worth it o/ # perling in the name of
[21:27:48] <thrig> tickit fails to compile on OpenBSD
[21:28:17] <LeoNerd> thrig: Would be useful to report that as a bug.. as I get verylittle visiblity otherwise
[21:29:44] <Altreus> Fuck you my UI will have scrollbars
[21:30:14] <Altreus> does that track have any other lines?
[21:30:32] *** Joins: ufobat_ (~martin@dynamic-077-007-129-095.77.7.pool.telefonica.de)
[21:30:57] <huf> "the invisible hand of the free market shall deliver all of us"
[21:30:59] <huf> IIRC
[21:31:32] <Grinnz> it'll deliver us something alright
[21:31:42] <huf> well, paul ryan likes them
[21:31:46] <huf> so they must have lines like that
[21:32:00] <thrig> in particular Alien-libtickit-0.12 assumes `make` is GNU-shaped (`make: unknown option -- -`) then eventually gets to `cc: error: linker command failed with exit code 1`
[21:32:02] <Grinnz> scrollbars?
[21:32:47] <Altreus> those things you get in the terminal emulator when the UI is not curses
[21:32:51] <Grinnz> ah yeah that's why Alien::Build has an option to specify gmake
[21:33:03] <huf> Altreus: what?
[21:33:08] <LeoNerd> thrig:  https://metacpan.org/release/PEVANS/Alien-libtickit-0.12/source/inc/Alien/make/Module/Build.pm#L16
[21:33:09] <Paperbot_> Link title(s): [ inc/Alien/make/Module/Build.pm - metacpan.org ]
[21:33:16] <huf> show me these scrollbars on my xterm
[21:33:25] *** Quits: ufobat (~martin@dynamic-095-114-173-173.95.114.pool.telefonica.de) (Ping timeout: 260 seconds)
[21:33:27] <Altreus> sorry, curses as a shorthand for curses-like
[21:33:34] <Altreus> as opposed to just outputting on stdout
[21:33:42] <LeoNerd> I suspect the first error message is just that probe test
[21:33:52] <Grinnz> what does it do if there's no gnu make?
[21:34:19] <LeoNerd> Also, if linker failed, that isn't helpful... I'd need to see what the actual linker complaint was
[21:34:33] <LeoNerd> (can you paste the entire log somewhere?)
[21:35:45] <huf> why not leave fixing this to the vast userbase of openbsd though? seriously, who cares?
[21:35:56] <Grinnz> thrig, apparently
[21:35:57] <mst> huf: LeoNerd cares.
[21:36:04] <mst> huf: because he's a mental bastard.
[21:36:09] <huf> pervert
[21:36:10] <xenu> openbsd i believe is the only bsd that actually cares about perl :P
[21:36:21] <mst> huf: yes, yes he is. it's one of the reasons we're friends.
[21:36:37] <mst> xenu: freebsd's perl packaging is amazing and the dude responsible for it is excellent
[21:36:53] <xenu> still, it's isn't in core and they don't have any perl code
[21:37:04] <xenu> s/it's/it/
[21:37:13] <mst> xenu: they deliberately removed it from core so they could do it *better* in ports, and it worked
[21:37:48] <mst> xenu: they even keep the .packlist when installing cpan modules from ports so you can fatpack them
[21:37:52] <LeoNerd> Heh... turns out: when you don't ship a mediocre thing in core and let people install their own choice of thing from a selection, that tends to improve the selections over time
[21:37:56] <LeoNerd> If only we tried that >.>
[21:38:04] <thrig> https://l.perl.bot/p/87yaz5
[21:38:04] <Paperbot_> Link title(s): [ Perlbot Pastebin ]
[21:38:28] <mst> LeoNerd: freebsd ports will install any perl version you want, and can comfortably manage multiple perls at the same time, it's -really- impressive work
[21:38:52] <LeoNerd> Yah - I'm mostly making a point about the "modules we ship with perl core" problem
[21:39:20] <xenu> i wouldn't call our "perl must be useless out of the box" policy a success
[21:39:49] <mst> LeoNerd: oh, yes, I'm just squee-ing about how nice the ports setup is
[21:40:16] *** Quits: Linux77 (~Linux7_7@186.233.182.237) (Remote host closed the connection)
[21:40:23] <Grinnz> what xenu said
[21:40:31] <Grinnz> i also wouldn't call it intentional
[21:40:59] <leitz> I think Perl out of the box is pretty useful. 
[21:41:11] <LeoNerd> Hah!
[21:41:16] * leitz accepts being the lone voice in the distant wilderness...
[21:41:18] <Grinnz> as long as you specifically need to do what it has out of the box, sure
[21:41:24] <Grinnz> that's probably 20% of use cases
[21:41:35] <xenu> that doesn't even include "download a file from the internet"
[21:41:35] *** Joins: Linux77 (~Linux7_7@186.233.182.237)
[21:41:41] <LeoNerd> I suppose out-of-the-box it's slightly nicer than `awk`, ...
[21:41:44] <xenu> due to lack of SSL
[21:41:57] <LeoNerd> Yah.. no incore SSL is annoying
[21:42:01] <mst> the lack of SSL thing is annoying
[21:42:16] <haarg> the state of ssl in perl is really shit in general
[21:42:36] <leitz> A couple of weeks ago a guy said the stuff I work on had a burp on his servers. Turns out the issue was no dmidecode and the ARCH was PPC64LE. 
[21:42:59] <leitz> Our "mostly out of the box" Perl code worked on a node I hadn't ever heard of.
[21:43:05] <mst> hah
[21:43:33] <TieUpYourCamel> interesting that came up... I'm reviewing my setup directions right now, and wondering if my comment "Net::SSLeay must be intstalled from the development version otherwise it fails the tests" still needs to be in there.
[21:43:51] <Grinnz> nope, there was a stable release in january
[21:44:16] <huf> still possibly the weirdest named common module :D
[21:44:23] <Grinnz> that part is openssl's fault
[21:45:08] <thrig> libtickit-0.4.2a/t/55tickit-process.c probably needs #include <sys/wait.h> somewhere
[21:45:22] <LeoNerd> Ahyes
[21:45:59] <ilmari> OpenSSL 3.0 is out now, which is Apache 2.0-licensed, so GPL-compatible
[21:46:06] <ilmari> https://www.openssl.org/blog/blog/2021/09/07/OpenSSL3.Final/
[21:46:06] <Paperbot_> Link title(s): [ OpenSSL 3.0 Has Been Released! - OpenSSL Blog ]
[21:46:14] <thrig> no other files appear to have that fault
[21:46:15] *** Quits: proller (~p@2a02:6b8:0:51e:de6b:f9c7:b25:ab2a) (Ping timeout: 260 seconds)
[21:46:22] <LeoNerd> 791: Paul "LeoNerd" Evans 2021-09-07 t/55tickit-process.c should #include <sys/wait.h> (thanks thrig)
[21:46:25] <LeoNerd> Fixéd
[21:46:29] <Grinnz> what happened to openssl 2?
[21:46:47] <LeoNerd> Grinnz: Perhaps it got {Perl,PHP,Scheme} 6'ed?
[21:46:54] <mst> LOL
[21:46:58] <ilmari> LeoNerd: also MySQL
[21:47:03] *** Quits: ufobat_ (~martin@dynamic-077-007-129-095.77.7.pool.telefonica.de) (Ping timeout: 265 seconds)
[21:47:06] <thrig> also Solaris
[21:47:09] <LeoNerd> Wow... something cursed about the number 6 perhaps
[21:47:09] <thrig> and Java
[21:47:12] <huf> what is up with 6
[21:47:19] <ilmari> that could also have been the classic sun dropt-the-first-digit trick
[21:47:21] <LeoNerd> Odd how IP has managed it
[21:47:26] <LeoNerd> That said, they skipped 5
[21:47:50] *** Joins: APic (apic@apic.name)
[21:48:26] <Altreus> so what the hell does SSLeay actually mean then
[21:48:40] <Altreus> Cos every time I need it I try SSLEay first
[21:48:42] <huf> it's someone's name
[21:48:46] <huf> or some people's name
[21:48:49] <huf> something weird
[21:48:53] <Grinnz> original dev's initials were EAY
[21:48:54] <xenu> apparently ipv6 skipped '5' because of this: https://en.wikipedia.org/wiki/Internet_Stream_Protocol
[21:48:54] <Paperbot_> Link title(s): [ Internet Stream Protocol - Wikipedia ]
[21:48:57] <xenu> TIL
[21:49:16] <LeoNerd> I have no idea about anyone else, but I pronounce it the same as the island of Sicily
[21:49:19] <Grinnz> it was renamed openssl from ssleay a while ago
[21:49:26] <LeoNerd> As in "Net Sicily"
[21:49:28] <Grinnz> but Net::SSLeay is of course older than that happening
[21:49:34] <thrig> the iconte de monte ssleay
[21:49:55] * LeoNerd idly wonders if libuv does SSL
[21:50:32] <LeoNerd> http://docs.libuv.org/en/v1.x/api.html  -- appears not
[21:50:32] <Paperbot_> Link title(s): [ API documentation — libuv documentation ]
[21:51:07] <xq> why do we still not have a pure perl implementation of SSL ?
[21:51:26] <LeoNerd> Do *you* want to write it?
[21:51:29] <thrig> slow, race conditions, lots of work, 
[21:51:40] <LeoNerd> That's something even I won't dare go near
[21:51:52] <Grinnz> pure perl crypto is impossible to get reasonably efficient
[21:51:56] <xq> slow in this case is a feature if anything
[21:52:05] <Grinnz> not when you want to make http requests in less than 10 seconds
[21:52:09] <xq> it will highlight places where the interpreter needs optimizations
[21:52:18] <LeoNerd> Hah. I have many benchmarks around that
[21:52:23] <LeoNerd> That's what  Faster::Maths  is for :)
[21:52:51] <LeoNerd> (I'm still waiting for someone to pay me to work on that, ... there must be *someone* who wants all their mathsy perl code to run 25% faster)
[21:53:05] <Altreus> I do enjoy using British in my module names
[21:53:22] <Altreus> "Despatch" is a particularly fun word for it
[21:53:24] <LeoNerd> Altreus: I named `Convert::Color` wrongly :/
[21:53:43] <Altreus> can't win them all
[21:53:47] <xq> thrig: I get the slow part and the lots of work part, but can you elaborate on the race conditions part?
[21:54:10] <LeoNerd> Yah offhand I can't thinkof anything inherently racey about an SSL impl
[21:54:17] <ilmari> timing attacks, on the other hand
[21:54:31] <Altreus> key to good comedy attacks
[21:54:33] <LeoNerd> Hah.. Timing attacks by visual inspection and a stopwatch
[21:59:10] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[21:59:42] <xq> how would you go about utilizing AESNI CPU instructions from inside a pure perl program?
[21:59:48] <xq> or not achievable?
[21:59:57] <thrig> Inline::ASM probably
[22:00:13] *** Joins: Pali (~pali@user/pali)
[22:00:21] <simcop2387> xq: not possible from pure perl
[22:00:55] <simcop2387> you could probably use the kernel crypto layer i think though
[22:01:05] <mst> xq: depends what you mean by pure perl I guess
[22:02:34] <simcop2387> LeoNerd: what BLAS libs will it support?
[22:02:43] <LeoNerd> ?
[22:02:48] <thrig> (assuming the CPU or kernel actually provide ...)
[22:03:16] <simcop2387> if you're soing faster maths i assume it'll use one of the linear algebra libraries to accelerate it
[22:03:27] <xenu> simcop2387: it's about reducing opcode overhead
[22:03:35] <xenu> that's by far the main reason why perl math is slow
[22:03:57] <LeoNerd> Oh.. Yah. It turns long chains of -little- ops, into bigger macroöps. Much like MULTICONCAT does
[22:04:19] <LeoNerd> That's really the way to think about it.. Faster::Maths makes a "MULTIMATH" op which does a numbery thing, similar to what MULTICONCAT does for strings
[22:04:34] <mst> clever.
[22:04:57] <simcop2387> LeoNerd: FUSEDMULTADD instructions? :)
[22:05:00] <LeoNerd> So e.g. if you write  my $len = sqrt( $x * $x + $y * $y );  that becomes a single MULTIMATH, rather than a SQRT, an ADD and two MULTs
[22:05:39] <LeoNerd> Not really working at that low a level. I'll remind you about perl and operator overloading ;)
[22:06:15] <simcop2387> bah we need fortran as perl
[22:06:32] <thrig> isn't that what perlform is
[22:07:06] <xenu> xq: it's easy to use any cpu instruction from perl, just generate some machine code and put it in the right place with IPC::SysV::memwrite
[22:07:25] <xq> so easy
[22:07:29] <xq> duh
[22:07:34] <simcop2387> we need llvmjit for perl
[22:07:36] <mst> xenu: or generate a shared object, memfd_create it, then dlopen the memfd
[22:07:46] <mst> xenu: that's how I fatpack XS .so files
[22:09:29] <xq> I was wondering the other day if llvm could be somehow used to make perl faster
[22:09:42] <xq> but that leaves open the question about what to do with existing XS modules
[22:09:54] <xq> that rely on the wonderful perl "API"
[22:10:28] <simcop2387> a jit isn't impossible but would be insanely difficult
[22:11:20] <mst> xq: right, the XS API is the biggest obstacle to rewriting stuff, sadly
[22:11:24] <xenu> tbh if i were to implement jit i'd probably roll my own, it isn't *that* difficult and most of the existing libraries are too slow
[22:11:42] <xenu> (by "not difficult" i mean implementing JIT, not integrating it with perl, the latter is hard)
[22:12:28] <LeoNerd> A JIT would be easily possible for a smaller, less-featured language like perl but without things like dynamic symbol table, or operator overloading
[22:14:23] *** Joins: riceandbeans (~zach@dev07.raasta.org)
[22:14:23] *** Quits: riceandbeans (~zach@dev07.raasta.org) (Changing host)
[22:14:23] *** Joins: riceandbeans (~zach@user/riceandbeans)
[22:16:55] * GumbyPAN CPAN Upload: SDL2-FFI-0.07 by SANKO https://metacpan.org/release/SANKO/SDL2-FFI-0.07
[22:21:16] <jdv> didn't nothingmuch look into llvm maybe a decade ago and decide it wasn't worth it?
[22:24:26] <mst> jdv: all of the possible problems are still there, but a decade is still a long time
[22:29:17] *** Quits: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net) (Ping timeout: 252 seconds)
[22:30:57] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[22:31:51] *** Joins: horsepatat (~horsepata@212.3.197.193)
[22:39:59] *** Quits: thrig (~thrig@65.113.153.50) (Remote host closed the connection)
[22:46:58] * GumbyPAN CPAN Upload: GraphQL-Plugin-Convert-DBIC-0.19 by ETJ https://metacpan.org/release/ETJ/GraphQL-Plugin-Convert-DBIC-0.19
[22:51:58] * GumbyPAN CPAN Upload: GraphQL-Plugin-Convert-MojoPubSub-0.02 by ETJ https://metacpan.org/release/ETJ/GraphQL-Plugin-Convert-MojoPubSub-0.02
[22:56:59] * GumbyPAN CPAN Upload: GraphQL-Plugin-Convert-OpenAPI-0.20 by ETJ https://metacpan.org/release/ETJ/GraphQL-Plugin-Convert-OpenAPI-0.20
[22:57:08] *** Quits: mmlj4 (~mmlj4@ip68-11-69-185.no.no.cox.net) (Ping timeout: 265 seconds)
[22:57:26] *** Quits: gizmomathboy (~gizmomath@206.127.53.107) (Quit: Leaving)
[23:08:15] *** Quits: gast0n (~g4570n@user/gast0n) (Ping timeout: 265 seconds)
[23:08:34] *** Joins: gast0n (~g4570n@user/gast0n)
[23:09:07] *** Joins: jess (~jess@libera/staff/jess)
[23:09:39] *** Joins: Manderson_ (~manderson@45.40.80.170)
[23:12:07] *** Quits: Manderson (~manderson@45.40.80.170) (Ping timeout: 265 seconds)
[23:13:29] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[23:14:32] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[23:17:01] * GumbyPAN CPAN Upload: App-perlimports-0.000018 by OALDERS https://metacpan.org/release/OALDERS/App-perlimports-0.000018
[23:24:31] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[23:24:32] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[23:24:47] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[23:24:52] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[23:25:36] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[23:26:14] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[23:27:33] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[23:30:17] *** Joins: Manderson (~manderson@45.40.80.170)
[23:30:31] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[23:32:25] *** Quits: Manderson_ (~manderson@45.40.80.170) (Ping timeout: 260 seconds)
[23:38:04] *** Quits: horsepatat (~horsepata@212.3.197.193) (Read error: Connection reset by peer)
[23:40:41] <asdflkj_sh> maybe perl could use libgccjit, emacs lisp can and it's fairly dynamic with something like operator overloading (advising functions)
[23:41:40] *** Joins: omegatron (~some@p54849842.dip0.t-ipconnect.de)
[23:47:58] *** Quits: furrymcgee (~devuan@31.179.186.66) (Ping timeout: 252 seconds)
[23:48:29] *** Joins: semeion (~semeion@user/semeion)
[23:49:06] *** Joins: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e)
[23:52:46] <mst> asdflkj_sh: yeah, if elisp can use it, it's certainly not *inflexible* at least ;)
[23:55:19] <xenu> it has huge overhead
[23:55:36] *** Joins: Manderson_ (~manderson@45.40.80.170)
[23:55:41] <xenu> also depending on gcc is a no-no for perl
[23:57:05] * GumbyPAN CPAN Upload: Grizzly-0.102 by NOBUNAGA https://metacpan.org/release/NOBUNAGA/Grizzly-0.102
[23:58:23] *** Quits: Manderson (~manderson@45.40.80.170) (Ping timeout: 252 seconds)
