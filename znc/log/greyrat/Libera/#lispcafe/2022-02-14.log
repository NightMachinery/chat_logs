[00:22:39] *** Quits: cosimone (~user@93-34-133-235.ip49.fastwebnet.it) (Read error: Connection reset by peer)
[00:22:54] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[00:34:05] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca) (Remote host closed the connection)
[00:43:24] *** Quits: shka (~herr@109.231.0.226) (Ping timeout: 272 seconds)
[01:13:44] <hayley> https://github.com/no-defun-allowed/awesome-low-level-programming-languages
[01:13:45] -ixelp- GitHub - no-defun-allowed/awesome-low-level-programming-languages: A curated list of low level programming languages (i. [...]
[01:14:48] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Read error: Connection reset by peer)
[01:15:06] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[01:26:32] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[01:31:44] <aeth> https://old.reddit.com/r/Superbowl/
[01:31:45] -ixelp- Superb Owl
[01:32:16] <hayley> https://twitter.com/glowcoil/status/1492958237762670592 I don't see the problem. Don't need much UB to optimise
[02:00:45] *** Quits: edgar-rft (~edgar-rft@ip-109-193-249-223.um39.pools.vodafone-ip.de) (Read error: Connection reset by peer)
[02:02:11] *** Joins: edgar-rft (~edgar-rft@ip-109-193-249-223.um39.pools.vodafone-ip.de)
[02:06:05] <moon-child> (car 0)  ;should signal an error
[02:11:56] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca)
[02:33:22] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[02:33:38] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[02:46:15] <hayley> ck_: https://youtu.be/Shxey13MF4A?t=69
[02:46:16] -ixelp- [YTP] ElectroBOOM Likes Extreme Shit - YouTube
[02:48:52] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[02:49:15] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[02:50:42] *** Quits: random-nick (~random-ni@87.116.181.150) (Ping timeout: 272 seconds)
[02:52:31] *** Joins: atw (~user@ool-18bf5678.dyn.optonline.net)
[03:08:44] *** Quits: Alfr (~Alfr@user/alfr) (Killed (copper.libera.chat (Nickname regained by services)))
[03:08:49] *** Joins: Alfr (~Alfr@user/alfr)
[03:09:22] *** Quits: edgar-rft (~edgar-rft@ip-109-193-249-223.um39.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[03:10:45] *** Joins: edgar-rft (~edgar-rft@ip-109-193-249-223.um39.pools.vodafone-ip.de)
[03:18:41] <moon-child> 'C++ would become a low-level, unprincipled hackers’ favorite playground'   O RLY?
[03:32:18] <hayley> Hm, some of the intro text to Crafting Interpreters claims that compiler books are scary, and the author wants to demystify things. But he is teaching how to write interpreters and bytecode systems. Way to move the goal posts.
[03:33:19] <hayley> I'd like to write some prose on my next compiler project, but it is going to be trickier because the subject matter simply is trickier.
[04:10:03] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[04:21:34] <selwyn> https://rust-unofficial.github.io/too-many-lists/index.html
[04:21:35] -ixelp- Introduction - Learning Rust With Entirely Too Many Linked Lists
[04:21:38] <selwyn> like a troll post
[04:21:54] <selwyn> > We should all as a community say no to linked lists as a "standard" data structure.
[04:27:09] <hayley> Not interested
[04:28:07] <hayley> "Unless you have a workload that is heavily dominated by splitting and merging costs, the penalty every other operation takes due to caching effects and code complexity will eliminate any theoretical gains." What no compacting GC does to a mf
[04:29:52] <gilberth> What is the alternative? Linked vectors?
[04:30:04] <moon-child> #(1 #(2 #(3)))
[04:30:40] <gilberth> Yeah, that ought to be politically correct then.
[04:30:53] <hayley> Well, they just recommend vectors.
[04:31:20] <semz> #define MAX_VECTOR_SIZE = 640000 /* ought to be enough for everybody */
[04:31:22] <gilberth> As moon-child demonstrated.
[04:31:30] <hayley> No, flat vectors.
[04:31:33] <hayley> No linking.
[04:31:44] <gilberth> No pointers?
[04:31:53] <semz> oops, that = does not belong there
[04:32:58] <hayley> Nope.
[04:33:11] <hayley> It is Rust, they cannot afford pointers.
[04:34:45] <edgar-rft> pointers already have corroded away
[04:36:15] <gilberth> Then I use indices into a vector? Ok. 0 = NIL, atoms are marked by :ATOM. Then (1 2 3) would be #(0 0 4 6 :ATOM 1 8 10 :ATOM 2 12 0 :ATOM 3). Easy.
[04:39:14] <gilberth> semz: What happend to the other 15360 bytes?
[04:39:58] <kakuhen> hayley: the you don't need an OS claim is a huge red pill
[04:40:16] <kakuhen> i was once told "if you have memory safety you don't need a separation kernel at all, so you can more or less get rid of the kernel entirely"
[04:40:50] <moon-child> what is a kernel?
[04:40:59] <semz> gilberth: Minimal overhead for security mitigations. Don't worry, they mean we no longer need bounds checking.
[04:41:22] <gilberth> semz: Hey, that's cool!
[04:41:27] <moon-child> I think 'kernel' encompasses interfaces for interacting with hardware devices, interfaces for writing drivers, interfaces for inter-process communication and security, scheduling, ...
[04:41:52] <gilberth> File! moon-child, I want files!
[04:43:11] <moon-child> believe me, I know
[04:43:15] <gilberth> Well, you could see a kernel as just a library.
[04:43:29] <moon-child> (hmm, can we lump files into 'interfaces for interacting with hardware devices'?)
[04:43:42] <moon-child> gilberth: if you want security, then you are limited in your ability to do that
[04:43:47] <hayley> kakuken: I could have also recommended Zetalisp and Smalltalk for writing operating systems, but this seemed funnier.
[04:44:20] <hayley> Both are very suitable for OS and game programming; OSes didn't get any better from there.
[04:45:10] <gilberth> And besides interrupts and HW access you have little needs for privilege levels.
[04:45:44] <hayley> I guess we can give gilberth a file, as a treat.
[04:45:45] <moon-child> not hardware privilege levels
[04:45:56] <moon-child> but separating processes from each other.  Don't let me diddle your bits
[04:46:29] <gilberth> moon-child: A user process should be unable to disable interrupts or access hardware registers.
[04:46:52] <moon-child> sure, yes
[04:46:59] <hayley> "Why don't you use Racket for your programming language?" Others: "not low level enough, dynamic types (oops, we forgot Typed Racket), etc" Me: "top-level is hopeless"
[04:48:39] <hayley> But I guess I do want to play with inline caching and stack allocation, which Racket does not provide.
[04:49:22] <moon-child> IOW: not low level enough
[04:49:24] <moon-child> :)
[04:50:01] <hayley> IOW: I dislike Racket weenies
[04:50:37] <gilberth> But for the rest the reasoning "you don't have a pointer to my data and thus cannot mess with it" is fine, but minor details like any kind of debugging/inspection/reflection API. Begins with a backtrace facility, which may leak "private" data structures of say your file system library.
[04:51:01] <hayley> Mirrors.
[04:51:21] <gilberth> Mirrors? Smoke, too?
[04:51:27] <hayley> Granted, that's for reflecting on objects, not the stack.
[04:51:40] <moon-child> gilberth: obviously it's necessary to be able to forge pointers sometimes.  But that should be a capability you get, that is not given to all code
[04:51:59] <hayley> https://en.m.wikipedia.org/wiki/Mirror_(programming)
[04:52:07] <gilberth> moon-child: Why do I want to forge pointers?
[04:52:35] <moon-child> well, how will you push some pixels to the screen without forging a pointer to the framebuffer?
[04:53:43] <hayley> Also http://bracha.org/mirrors.pdf
[04:53:59] <gilberth> Anyhow, in the general case, you still need something like privilege levels, capabilities, whatever. Which could be present for code running on behalf an OS-like library. In the broader sense that also would be useful for other libraries, which are not usually called part of the kernel.
[04:55:27] <gilberth> moon-child: I assume, there is some frame buffer array pre-forged once. And how would you get a useful pointer anyway without messing with the MMU? Also to set up things like write-through.
[04:57:28] <gilberth> And pushing pixels should be one of those kernel-like things. Only possible through some single library which controls the resource "screen real estate". That's the primary task of an operating system, namely managing concurrent access to shared resources, be it the CPU, the memory, the disk, or the printer.
[04:59:04] <gilberth> Hence you want some mechanism to ensure that those resources could only be accessed through whatever manages that resource.
[05:00:26] <moon-child> yes
[05:18:47] <hayley> (defun cons (car cdr) (declare (cleavir-stuff:should-not-cons)) ...)
[05:21:01] <drakonis> what does IOW mean?
[05:21:30] <drakonis> hayley: top-level is hopeless is the dumbest thing i've ever heard
[05:21:46] <drakonis> historically it had been about the developers not putting effort on the repl experience
[05:21:58] <drakonis> then it evolved into this mantra that's used to justify too many things
[05:22:05] <hayley> "In other words"
[05:22:19] <drakonis> oh
[05:22:21] <drakonis> i see
[05:38:31] *** Joins: Rue (~rue@2001-b011-1000-1cb7-da1d-fbf4-ac2a-f9f7.dynamic-ip6.hinet.net)
[05:44:10] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:49:14] *** Quits: Rue (~rue@2001-b011-1000-1cb7-da1d-fbf4-ac2a-f9f7.dynamic-ip6.hinet.net) (Quit: WeeChat 3.4)
[05:50:55] *** Joins: Rue (~rue@2001-b011-1000-1cb7-da1d-fbf4-ac2a-f9f7.dynamic-ip6.hinet.net)
[05:55:03] <hayley> https://twitter.com/rickdadier/status/1492606916429852675
[05:56:37] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 256 seconds)
[06:18:08] *** Quits: molson_ (~molson@172-103-21-94-dynamic.midco.net) (Remote host closed the connection)
[06:25:12] *** Joins: molson (~molson@172-103-21-94-dynamic.midco.net)
[06:40:57] *** Joins: notzmv (~zmv@user/notzmv)
[06:55:10] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[06:56:31] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[07:20:55] <ck_> mfiano: ok good to know
[07:42:48] <hayley> https://twitter.com/firstpeoplesvic/status/1493069336940285953 "Our official* response to what Scott Morrison said today*"
[07:43:19] <hayley> *on the topic of the national apology to stolen generations: "Sorry is not the hardest word to say. The hardest is 'I forgive you'". ???
[07:43:22] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[08:02:40] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Quit: ec)
[08:09:28] *** Quits: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Ping timeout: 250 seconds)
[08:12:05] *** Joins: semz_ (~semz@user/semz)
[08:14:53] *** Quits: semz (~semz@user/semz) (Ping timeout: 256 seconds)
[08:21:22] *** semz_ is now known as semz
[08:28:58] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[08:29:49] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[08:41:26] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[08:43:10] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[08:51:42] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[08:53:18] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[09:19:10] <gilberth> Ok. What Cairo renders is gamma corrupted. As I expected. I wonder if we would get better rasterization when we would treat our coverage and alpha as linear.
[09:20:06] <hayley> God dammit, why does everything I want to do, including hacks in sandbox games, end up becoming a compilation problem?
[09:20:31] * hayley now wonders if loop unrolling will help in the toy language you get for scripting some stuff.
[09:21:12] <gilberth> Because you defined yourself as a compiler writer. Self-fulfilling prophecy or perception bias.
[09:21:40] <hayley> Damn.
[09:21:46] *** Quits: JSharp (sid4580@id-4580.lymington.irccloud.com) (*.net *.split)
[09:21:46] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (*.net *.split)
[09:21:46] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (*.net *.split)
[09:21:46] *** Quits: molson (~molson@172-103-21-94-dynamic.midco.net) (*.net *.split)
[09:21:46] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (*.net *.split)
[09:21:46] *** Quits: edgar-rft (~edgar-rft@ip-109-193-249-223.um39.pools.vodafone-ip.de) (*.net *.split)
[09:21:46] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca) (*.net *.split)
[09:21:46] *** Quits: cross (~cross@spitfire.i.gajendra.net) (*.net *.split)
[09:21:46] *** Quits: Posterdati (~posterdat@host-87-19-166-231.retail.telecomitalia.it) (*.net *.split)
[09:21:46] *** Quits: dbotton (sid492350@lymington.irccloud.com) (*.net *.split)
[09:22:24] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[09:22:24] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[09:22:24] *** Joins: molson (~molson@172-103-21-94-dynamic.midco.net)
[09:22:24] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[09:22:24] *** Joins: edgar-rft (~edgar-rft@ip-109-193-249-223.um39.pools.vodafone-ip.de)
[09:22:24] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca)
[09:22:24] *** Joins: cross (~cross@spitfire.i.gajendra.net)
[09:22:24] *** Joins: Posterdati (~posterdat@host-87-19-166-231.retail.telecomitalia.it)
[09:22:24] *** Joins: dbotton (sid492350@lymington.irccloud.com)
[09:22:56] *** Joins: JSharp (sid4580@2a03:5180:f:2::11e4)
[09:24:26] *** Quits: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de) (Quit: Leaving)
[09:25:03] *** Quits: nckx (~nckx@tobias.gr) (*.net *.split)
[09:25:03] *** Quits: eschaton (~eschaton@li541-49.members.linode.com) (*.net *.split)
[09:26:18] *** Joins: nckx (~nckx@tobias.gr)
[09:26:31] *** Quits: jeosol (~jeosol@user/jeosol) (Ping timeout: 256 seconds)
[09:27:27] <hayley> Hm, well, a bogus for loop e.g. for (;;) { } takes non-zero time to execute, so a sensible VM should count that. Thus loop unrolling might help. idk
[09:28:58] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (*.net *.split)
[09:28:58] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (*.net *.split)
[09:30:47] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[09:34:16] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[09:34:59] * hayley ran some tests and 4x unrolling is some 60% faster. Is she really going to write a compiler for a stupid video game scripting language?
[09:36:28] <dave0> i thought video games were scripted with lua?
[09:36:38] <gilberth> Ok. What is the theory behind Porter-Duff? Do we really talk about flux with linear stimulus values or about power? *sigh*
[09:36:47] <hayley> Not this specific case.
[09:37:12] <moon-child> hmm, I think I figured out a decent approximation for bezier arc length
[09:37:15] <moon-child> so i can draw dashed lines
[09:37:23] <moon-child> but I need to spend more time in the trenches implementing!
[09:37:32] <gilberth> Rather how does a voltage applied to grid at an CRT correspond to the number of photons emitted at the screen?
[09:38:13] <gilberth> moon-child: You're a calculus person, aren't you?
[09:39:03] <moon-child> hmm, somewhat?
[09:39:12] <moon-child> I was planning to properly read a calculus book
[09:39:45] <moon-child> oh, also gradients.  I think.  Does anyone want gradients applied along a stroke?
[09:39:47] <gilberth> Yeah, this is why I say you're better at math than I am. I always hated calculus as I am too lazy for memorizing all the tricks.
[09:40:17] <gilberth> moon-child: No, I don't want gradients. Can they come out of fashion, please?
[09:40:31] <moon-child> haha
[09:41:02] <moon-child> hmm, internet sez svg doesn't have it
[09:41:49] <gilberth> SVG has gradients, but not in the fashion that it varies with the curve parameter.
[09:42:23] <gilberth> moon-child: Curious, weren't you formally trained in calculus?
[09:43:25] <moon-child> I haven't been to university.  I learned a bit in high school, but
[09:43:51] <gilberth> moon-child: BTW, can you think of any test image to judge, if going linear with coverage and alpha looks more correct than doing it in the gamma encoded space?
[09:43:55] <moon-child> gilberth: that's the thing--you wouldn't want it to vary with the curve parameter, but with the arc distance (and the relationship is not linear).  You need this anyway to do dashes, so I am surprised they don't have it
[09:44:12] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca) (Remote host closed the connection)
[09:44:27] <moon-child> gilberth: hmm this is for aa?
[09:44:31] <moon-child> or just normal blending?
[09:44:35] <gilberth> moon-child: I meant the distance traveled on the curve.
[09:44:37] <moon-child> for latter, obvious is grayscale ramp
[09:44:56] <mfiano> moon-child: Have you considered arc-length reparameterization?
[09:45:03] <gilberth> Yes, aa. I was wondering since a decade, if it wouldn't look better if done in linear space.
[09:46:09] <moon-child> hmm.  How about a rectangle rotated 45 degrees?
[09:46:23] <gilberth> I could draw 1px wide lines at 2px distance. Once offset 1/2 leading to "50%" gray and then to a 0/100% stripe pattern. But that is just the classical test image.
[09:47:35] <gilberth> moon-child: I am looking at a line fan. I think the aa-corrupted looks better, but that could be biased. But first I would need to make sure the gamma of my screen is correct.
[09:47:51] <moon-child> mfiano: hmm, I will think about that.  I am not sure if it buys me anything
[09:48:42] <gilberth> moon-child: And indeed, calculus at uni is a bit different than just knowing all the formulae essentially.
[09:48:51] *** Joins: shka (~herr@109.231.0.226)
[09:49:28] <gilberth> * gamma-corrupted.
[09:50:06] <moon-child> I still think gaussian coverage has potential
[09:51:02] <moon-child> but I am too lazy to implement it.  Too annoying, and breaks my space partitioning
[09:51:15] <gilberth> That would be what?
[09:52:08] * shka wakes up, checks news, no war going on, good
[09:52:18] <pl> no war going on yet
[09:52:18] <moon-child> a more normal coverage calculation, I think, uses a box filter: take the box with side-length 1 pixel distance centred at the pixel, take all the points in it, say the covered ones are 1 and the uncovered ones are 0
[09:52:22] <moon-child> and average them
[09:52:23] <gilberth> Nah, I am fighting with my bias. Both to by belief that doing that in gamma-space is wrong and in me knowing which image is which.
[09:52:49] <moon-child> with a gaussian filter, you instead average all the points in the space, with a weighted average, weighting them according to their distance to the target pixel, using a gaussian function
[09:53:18] <gilberth> Hmm.
[10:00:10] <gilberth> Anyhow I am digging more of rendering, rasterization and colour spaces than I ever intended. This is somehow the wrong turn.
[10:01:02] <shka> pl: hopefully not just yet
[10:01:26] <shka> but it really looks like it is coming
[10:02:02] * gilberth is optimistic.
[10:02:38] <shka> i am no longer optimistic ever since Russians pulled out ambassador from Ukraine 
[10:03:16] <gilberth> Hmm.
[10:06:24] <aeth> so, no surprise attack
[10:06:34] <aeth> Sunday would have been the surprise, especially during the Super Bowl
[10:07:55] <pl> aeth: not like a handegg match is important in whether Russia attacks a country that USA had given up upholding defence treaty with in 2014
[10:08:38] <hayley> What about a superb owl?
[10:10:22] <White_Flame> I can haz supper bowl
[10:11:07] <shka> nobody outside of US cares about the superbowl
[10:11:35] <moon-child> false, I care a great deal about superb owls
[10:11:36] <pl> other than maybe dealing with outpour of weird match references and something about halftime show and ads
[10:11:54] <gilberth> moon-child: Same continent. Doesn't count.
[10:11:56] <pl> moon-child: a superb owl and SuperBowl are two different things, though ;)
[10:12:11] <aeth> pl: would've insulted the US
[10:12:18] <shka> anyhow, this is uniquely american thing
[10:12:21] <aeth> to do something when everyone's attention is focused on one thing
[10:12:25] <hayley> https://www.youtube.com/watch?v=sS0qhHiyrfI
[10:12:26] -ixelp- WWDITS Superb Owl - YouTube
[10:12:35] <shka> i don't see why they find this interesting
[10:12:56] <pl> aeth: I mean, maybe it would insult a bit of journalists and MIC people, but it's not like USA didn't abandon Ukraine in 2014
[10:13:03] <shka> since even if you like the sport, there is not much of that in the event
[10:13:36] * hayley has to make a business decision.
[10:13:36] <pl> aeth: nor does typical american care about what happens there
[10:14:09] <gilberth> All I know about the superbowl is that it exists; nothing more.
[10:14:12] <hayley> I'm supposed to get the asshole in the house a birthday present, and he wants another external hard drive. I can get a 2TB drive for about AU$100, or a 4TB for AU$150. The former is cheaper, the latter is better value and will shut him up for longer.
[10:14:27] <shka> pl: also, now Trump already proved that americans are not overly keen on military interventions anymore
[10:15:14] <dave0> gilberth: freshen your coffee, sir?
[10:15:18] <shka> or all that interested in the wider world
[10:16:11] <gilberth> dave0: It's late for me, but how could I reject such a charming offer?
[10:16:27] <dave0> gilberth: decaf?
[10:16:42] <gilberth> Nope, give me the real thing!
[10:16:47] <dave0> lol no worries!
[10:16:57] * dave0 puts on the kettle brb
[10:17:14] <shka> ~speed, what i need~
[10:17:21] <gilberth> I already drink de-alced beer all the time, that's enough de-... for me.
[10:18:17] <aeth> gilberth: the superbowl basically has the reputation as the (only) TV show that all Americans watch
[10:18:24] <aeth> basically near-total ratings
[10:18:24] <shka> gilberth: alco has the opposite effect to caffeine, so it makes sense :P 
[10:18:47] <gilberth> shka: Right.
[10:19:12] <gilberth> aeth: What's a TV show? ;)
[10:19:39] <aeth> gilberth: legacy streaming platform
[10:19:41] <aeth> cheaper
[10:20:13] <pl> an adblock interrupted by a very slow sport and some sort of a show in the middle
[10:20:20] <gilberth> And one that I pay a "tax" for although I don't have a TV at all. So much for cheaper.
[10:20:25] <kakuhen> a television show is a specific segment of a specific company's mpeg-2 transport stream being transmitted over radio waves
[10:20:42] <shka> how baseball stopped to be the most popular sport in the USA anyway?
[10:21:13] <aeth> there are a lot more baseball games
[10:21:32] <aeth> even if baseball had comparable popularity, there's 4-7 games in the World Series
[10:21:53] <shka> "World" :D
[10:21:54] <aeth> so the only thing that would be of comparable magnitude to the one-game Super Bowl would be a WS game 7, which won't happen every year
[10:21:54] <shka> ok
[10:21:58] <aeth> Canada counts
[10:22:05] <shka> but not japan?
[10:22:07] <aeth> plus, Cuba used to have a team in the minor leagues
[10:22:18] <shka> i heard that baseball is a very popular sport in the Japan
[10:22:40] <hayley> From long ago: "I was gonna ask how Jai handles safety (I know, you just git gud skrub) but then I saw the C part." From the "Jai Primer": "the increase in productivity and reduction of friction when memory-safe mechanisms are absent more than make up for the time lost in tracking down errors, especially when good programmers tend to produce relatively few errors" So the answer is, again, "you are just a shit programmer if you are thinking about
[10:22:40] <hayley> that"
[10:23:15] <White_Flame> wow
[10:23:42] <White_Flame> so they actually believe that debugging is an inconsequential amount of time in programming
[10:23:51] <hayley> Apparently, if you just git gud.
[10:24:10] <aeth> shka: each game in football basically counts for 10 baseball games
[10:24:18] <White_Flame> i got gud many years ago, and it taught me that debugging is more important than writing
[10:24:21] <aeth> ~16 NFL games a season vs ~160 MLB games a season
[10:24:34] <kakuhen> meanwhile someone in here, if i recall correctly, spent an entire day tracing down spaghetti C++ only to find out the source of a bug was a class forgetting to fill a slot value
[10:24:37] <shka> ... how those people are even around
[10:24:44] <shka> aeth: thanks for clearing this up
[10:24:49] <kakuhen> and he noted how in common lisp, the compiler would instantly signal an error that'd tell him those slots were un-initialized 
[10:24:54] <kakuhen> saving him his entire day
[10:24:58] <kakuhen> it was either in here or #commonlisp
[10:25:06] <moon-child> sounds like gilberth's story about translating tex sources to cl
[10:25:18] <moon-child> and hitting an unbound slot
[10:25:20] <moon-child> because unions
[10:25:28] <aeth> 2021 NFL season used 17 games instead of 16. MLB is supposed to be 162 but sometimes it's more or less for a team if there are rain delays or tiebreakers
[10:25:34] <dave0> kakuhen: once i spent a few hours to find i wrote 32678 instead of 32768
[10:25:38] <aeth> (NFL used to be 16 games)
[10:26:14] <moon-child> #.(expt 2 15)
[10:26:17] <kakuhen> dave0: that's why when I use exponents of 2 in common lisp I do stuff like #.(expt 2 15)
[10:26:20] <kakuhen> lole yeah
[10:26:33] <kakuhen> and if the slow down in read-time concerns me, then #.(ash 1 15) or something like that
[10:26:56] <aeth> White_Flame: debugging takes no time until it takes all time
[10:33:46] <aeth> shka: oh, and it's not just football and baseball. There's the increasing popularity of basketball because you can play it. Doesn't require a field or equipment. (Few could ever play it professionally, though.)
[10:34:26] <aeth> (Baseball, on the other hand, has so many minor league teams.)
[10:34:46] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[10:34:53] <hayley> Hm, idk if I can call it gameshit though. It's quite the opposite of webshit, though also very terrifying (given they have no JS to save their asses from complete miserable lossage). One /g/ thread used the term, making fun of game development tools by comparing them to webshit tools.
[10:35:37] <aeth> kakuhen: C++ is a good language to spend all day debugging
[10:36:01] <kakuhen> Sounds right
[10:36:07] <hayley> Twitter also uses "gameshit" to refer to low quality video games, and low quality video game stores.
[10:36:11] <kakuhen> tfw i just posted that with my apple watch
[10:36:17] <aeth> "deriving" anything that's not 0, 1, or 2 is a good practice in general, though
[10:36:18] <gilberth> Can I intercept unwinding? I have a library function written in C, it calls a callback which I provide. Now I want that when unwinding happens beyond the foreign function invokation, the callback would return with an error code into the foreign library functions, which then would clean up and return to Lisp again. I could stop an unwind with unwind-protect. But I can't see a way to then continue that unwinding.
[10:36:40] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[10:37:03] <aeth> (obviously within reason... (* 10 x) or whatever might just make sense and obviously you do (expt 2 15) and not (expt 2 (1- (expt 2 4)))
[10:37:07] <aeth> )
[10:38:17] <hayley> A wise stassats said that, if your compiler won't constant fold, then you clearly don't care for performance.
[10:38:19] <kakuhen> speaking of gameshit, i want to try getting common lisp running on my ps vita
[10:38:38] <kakuhen> the reason: toy visual novel engine using sdl, but interfacing with sdl from common lisp if possible
[10:38:56] <kakuhen> iphones are pretty locked down yet something as complex as EQL can work on them
[10:39:03] <kakuhen> and there's all those legends about Allegro CL being used for some PS2 games
[10:39:06] <kakuhen> so I think it may be doable
[10:39:21] <hayley> .oO(Well, I did mention that the term collides with other peoples' definitions...)
[10:40:14] *** Quits: iamFIREc1 (~iamFIREcr@user/iamfirecracker) (Ping timeout: 260 seconds)
[10:40:26] <kakuhen> don't worry, this isn't the first time I talk about oranges when someone else talks about apples
[10:42:09] *** Joins: iamFIREc1 (~iamFIREcr@user/iamfirecracker)
[10:42:26] <kakuhen> this makes deleting large folders quite slow
[10:42:26] <kakuhen> oh god, ncdu decides to print and flush the entire terminal's buffer every time it's deleting a file from a folder
[10:43:09] <kakuhen> by "large" I actually mean "many files inside," and it seems to be executing one syscall per file
[10:43:23] * hayley goes to think of another derogatory name.
[10:44:14] <kakuhen> holy shit why is yarn using 2.6 GiB in my ~/Library/Caches
[10:44:20] <kakuhen> all I did was use yarn to install react-native
[10:44:41] <kakuhen> moreover, the actual ios app that runs react-native is like 800 mb itself... then 4.1 gb go to stupid dyld_shared_cache for the simulator, and that's not counting all the bloat xcode brings with it...
[10:44:53] <kakuhen> no wonder 30 gb disappeared from my drive overnight
[10:44:53] <shka> oh
[10:45:21] <hayley> smth like "Game developer who thinks anything short of maximum runtime performance is literally Hitler", come to think of it.
[10:45:31] <shka> kakuhen: you are starting to understand why react native and electron are abominations and should be destroyed
[10:46:09] <kakuhen> instead i think i shouldn't have pretended a 512 gb ssd was large enough for my needs
[10:46:10] * hayley handles Godwin's law for #lispcafe
[10:46:45] <kakuhen> about 1/3rd of my drive is eaten up by transport streams of japanese shows i watch weekly
[10:46:58] <kakuhen> and i have a tendency to hoard data rather than delete things once im long done with it
[10:47:15] <kakuhen> i've been seriously debating wiping my backup drive and using that to store the TS in fact
[10:47:25] <kakuhen> but I don't want to test my luck so soon
[11:10:32] *** Joins: cosimone (~user@93-44-187-99.ip98.fastwebnet.it)
[11:10:50] *** Quits: cosimone (~user@93-44-187-99.ip98.fastwebnet.it) (Remote host closed the connection)
[11:11:40] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 272 seconds)
[11:12:47] *** Joins: aeth (~aeth@user/aeth)
[11:15:01] <contrapunctus> I just tried out Movim again and whoa... phoe 's there! 😀️
[11:19:30] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[11:27:08] <ck_> what is a movim?
[11:29:55] <contrapunctus> ck_: https://mov.im/
[11:29:56] -ixelp- Login
[11:30:12] <contrapunctus> uh... * https://movim.eu
[11:30:12] -ixelp- Movim â Responsive web-based cross-platform XMPP client
[11:30:19] <ck_> I see, thanks
[11:30:38] <ck_> I liked when more services had xmpp interfaces. even google chat did
[11:32:37] <contrapunctus> it's like a social network built over XMPP (reusing your existing XMPP account), and includes a pretty featureful XMPP chat
[11:33:55] <moon-child> baker: 'functional programming is a "good thing"'
[11:56:30] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Read error: Connection reset by peer)
[11:57:52] <hayley> moon-child: sauce?? Can't believe Baker would ever say that
[11:58:15] <moon-child> https://plover.com/%7Emjd/misc/hbaker-archive/ReverseGC.html
[11:58:16] -ixelp- NREVERSAL of Fortune
[11:58:57] <hayley> "Since functional programming is a "good thing", and since reference counting is sufficient for these languages, it would seem that little more can be said" bruh
[11:59:44] *** Joins: cosimone (~user@93-44-187-99.ip98.fastwebnet.it)
[12:02:28] *** Joins: random-nick (~random-ni@87.116.181.150)
[12:11:37] *** Quits: cosimone (~user@93-44-187-99.ip98.fastwebnet.it) (Remote host closed the connection)
[12:13:39] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[12:14:40] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[12:15:12] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[12:31:10] *** Joins: treflip (~user@user/treflip)
[12:35:04] *** Quits: treflip (~user@user/treflip) (Client Quit)
[12:41:19] <selwyn> shka: would you rather play baseball or cricket
[12:41:34] <hayley> "Movim is a kickass _distributed_ social platform [...] and uses the industry-standard XMPP protocol"
[12:41:49] * hayley old netfarmer yells at terminology
[12:44:33] <semz> gilberth: Can unwind-protect even stop an unwind? I thought it was undefined behavior to do almost any non-local transfer of control inside it.
[12:45:26] <hayley> "If a non-local exit occurs during execution of cleanup-forms, no special action is taken. The cleanup-forms of unwind-protect are not protected by that unwind-protect." Seems defined to me.
[12:45:51] * semz goes spelunking through cleanup issues
[12:47:57] <semz> Oh, I was thinking of the unrelated EXIT-EXTENT issue
[12:48:00] <semz> never mind
[12:49:14] *** Joins: razetime (~quassel@49.207.198.36)
[12:49:47] *** Joins: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net)
[12:51:09] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 252 seconds)
[12:51:39] <semz> Wait no, this is related. http://www.lispworks.com/documentation/HyperSpec/Issues/iss152_w.htm
[12:51:39] -ixelp- CLHS: Issue EXIT-EXTENT Writeup
[12:51:56] <semz> "In particular, it is legal, during the evaluation of an UNWIND-PROTECT cleanup form executed because of a non-local transfer of control, to initiate a new transfer of control to an exit intervening between the UNWIND-PROTECT and the original target; the original processing of transfer of control is abandoned."
[12:52:02] <semz> This is the medium proposal that didn't pass
[12:52:48] <semz> How are you going to cancel the unwind without going to a point that is being passed over?
[12:53:03] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[12:54:20] <semz> Note the example under ";;returns 2 under MEDIUM, is error under MINIMAL"
[12:56:09] <semz> (block a (block b (unwind-protect (return-from a 1) (return-from b 2)))) ; pasted for convenience and because there are multiple examples with that heading, lol
[13:06:07] <semz> SBCL, CCL and ECL all return 2, but I could see this fail in a pretty nasty way if the implementation doesn't guarantee the stronger semantics.
[13:08:49] <gilberth> This issue is very odd. At least the interpretation that the clean up form is executed in the dynamic context of the place we unwind to. I would be really surprise, if given (defun bar () (unwind-protect <protected> (blah *foo*)) the binding of *foo* in the clean-up could be different from the binding <protected> sees.
[13:09:33] <gilberth> Or put otherwise: It would surprise me, if the meaning of dynamic scope is different for BLOCK, CATCH, and TAGBODY from LET.
[13:12:25] <gilberth> Anyhow, what I would need would be to temporary suspend a non-local exit and progress and continue it then. Perhaps by somehow getting hold of the current non-local exit target.
[13:13:14] <gilberth> A catch-all so to speak. :-)
[13:13:56] * hayley reads ThreadSanitizer output again
[13:14:53] <hayley> Things that look odd: trans_list and heap_scavenge sometimes race, but it shouldn't really matter, and page allocation and scav1 race, which might matter.
[13:15:08] <hayley> I know the former involves two writes of the same value, due to locking, but the latter is just weird to me.
[13:18:02] <hayley> Somehow scav1 finds a pointer into a new page. This pointer hopefully is only created after the page map is set up, though tsan doesn't understand fences, so I cannot easily enforce it. sigh
[13:20:24] <hayley> .oO(Make the assignment an atomic store, with release consistency.)
[13:23:10] <hayley> "Previous write of size 1 at 0x0000503df603 by main thread (mutexes: write M27, write M525045576352708960)" Er, I don't have that many mutexes.
[13:28:16] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[13:28:24] * gilberth believes we would need a HayleySanitizier.
[13:29:03] <hayley> What about me is not well-defined?
[13:31:04] <gilberth> Well, you have very strange notion of what is fun to begin with.
[13:31:18] <hayley> Can't say I am finding debugging this GC to be very fun.
[13:32:44] <hayley> I am slightly tempted to just make SBCL use a parallel sometimes-copying GC library, but I only know of Blackburn's MMtk port, and it is ported to Rust, which would be ironic for a Steel Wool Common Lisp.
[13:33:09] <gilberth> Other girls at your age would prefer to go shopping :-)
[13:37:57] * hayley adds the right acquire loads and release stores, and thinks it probably should work now.
[13:46:37] <hayley> But here's the game: thread T1 creates a new page, writes the new generation number to the page table, and then goes to fix pointers elsewhere, some of which may point to that new page. Another thread T2 better only be able to read the new generation number if it encounters a pointer to that new page, else it may falsely ignore that pointer.
[13:48:35] <hayley> Hm...no, because we check if the page is from from_space, and reordering like that won't make a from-space page look like not a from-space page. sigh again
[13:50:56] <hayley> So far, I can't find any races that don't seem benign. Generation numbers all have a "monotonicity" property where out-of-order reads can't actually hurt.
[13:53:52] <selwyn> https://www.youtube.com/watch?v=Cz8ObjoYhLQ
[13:53:52] -ixelp- A Tape from City 17 - A Half-Life: Alyx Short [S2FM] - YouTube
[13:54:45] <hayley> ...now I'm not sure, actually. A very old page could well have been from-space the last time it was used, and we could stumble there.
[13:59:21] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 252 seconds)
[14:01:07] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[14:09:34] *** Joins: skeemer (~skeemer@h-158-174-23-219.NA.cust.bahnhof.se)
[14:17:36] *** Quits: razetime (~quassel@49.207.198.36) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:26:19] * hayley asks around. "You might need to clear TLBs if you update a page table." Er, wrong sort of page table.
[14:31:41] <hayley> That said, x86-64 has total store ordering, so a non-atomic store is the same as a release. No?
[14:31:57] <hayley> So that can't cause any crashes, though I should be aware for non-TSO platforms.
[15:17:58] *** Quits: Brucio-61 (~Brucio-6@ip-094-114-248-079.um31.pools.vodafone-ip.de) ()
[15:18:11] *** Quits: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net) (Quit: Client closed)
[15:21:04] *** Joins: rogersm (~rogersm@90.166.180.250)
[15:44:41] *** Quits: scymtym (~user@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Remote host closed the connection)
[15:59:50] *** Quits: atw (~user@ool-18bf5678.dyn.optonline.net) (Ping timeout: 272 seconds)
[16:03:00] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[16:04:27] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[16:16:30] *** Joins: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net)
[16:23:09] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca)
[16:27:29] *** Joins: treflip (~user@user/treflip)
[16:42:16] *** Quits: iamFIREc1 (~iamFIREcr@user/iamfirecracker) (Ping timeout: 272 seconds)
[16:43:50] *** Joins: iamFIREc1 (~iamFIREcr@user/iamfirecracker)
[16:53:02] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[16:54:48] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[17:09:56] *** Joins: scymtym (~user@2001:638:504:20e6:6ac3:87e0:e782:f3fc)
[17:11:18] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 252 seconds)
[17:13:09] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[17:15:44] <shka> anything in CL for checking if there is a line of sight between two point in a 3D space with vertices around?
[17:16:59] *** Joins: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se)
[17:17:41] <mfiano> isn't that just basic math?
[17:17:46] <mfiano> |v2-v1| gives you the vector.
[17:18:12] <shka> i need to quickly check if there is a vertex on that vector
[17:18:19] <shka> so some BSP and stuff
[17:18:41] <mfiano> vertices are infinitely small, so i don't understand the check
[17:28:37] <selwyn> return to bsp
[17:38:55] <shka> selwyn: bsp is perfectly fine for CPU time
[17:39:05] <shka> it is just bsp rendering that went out of fashion
[17:39:15] <selwyn> yeah
[17:40:22] <shka> https://en.wikipedia.org/wiki/M%C3%B6ller%E2%80%93Trumbore_intersection_algorithm
[17:40:28] <shka> ok, so there is this algorithm
[17:49:32] <selwyn> ok
[17:50:20] <selwyn> this is a terrible wikipedia article
[17:50:23] <selwyn> now i have to read java
[17:50:27] <shka> sorry
[17:50:32] <shka> but
[17:50:34] <selwyn> not your fauly
[17:50:40] <shka> it is easier then writing java
[17:51:48] <selwyn> ok, so use it to do ray triangle intersections
[17:51:57] <selwyn> but you can't do every single triangle because its wasteful
[17:52:00] <selwyn> so use the bsp
[17:52:09] <selwyn> i assume this is for cs go
[17:53:10] <shka> yes, but that's not why bsp
[17:54:02] <ck_> is not why bsp?
[17:55:51] <ck_> (because "why not")
[17:56:14] <selwyn> lol
[18:02:29] * selwyn is tired
[18:28:13] *** Joins: kevingal (~quassel@37.228.202.92)
[18:34:48] <edgar-rft> my car is tired, too
[18:39:14] *** Quits: dbotton (sid492350@lymington.irccloud.com) ()
[18:39:33] *** Joins: dbotton (sid492350@id-492350.lymington.irccloud.com)
[18:53:19] *** Quits: treflip (~user@user/treflip) (Remote host closed the connection)
[19:02:31] *** Joins: razetime (~quassel@49.207.198.36)
[19:06:45] *** Joins: Brucio-61 (~Brucio-61@2001:638:504:20e6:6ac3:87e0:e782:f3fc)
[19:09:39] *** Joins: Catie (~user@user/catie)
[19:10:08] *** Quits: prite (~pritam@user/pritambaral) (Quit: Konversation terminated!)
[19:46:34] *** Quits: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Ping timeout: 272 seconds)
[19:52:12] *** Quits: rogersm (~rogersm@90.166.180.250) (Remote host closed the connection)
[19:52:57] *** Joins: rogersm (~rogersm@90.166.180.250)
[19:53:13] *** Joins: Inline (~Inline@2a02:908:1252:7a80::1aa)
[20:35:06] *** Joins: treflip (~user@user/treflip)
[20:36:42] *** Quits: razetime (~quassel@49.207.198.36) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:01:54] <ck_> no, this is tie(red) https://images.beastsofwar.com/2016/06/Tie-Defender.png
[21:06:46] *** Quits: Rue (~rue@2001-b011-1000-1cb7-da1d-fbf4-ac2a-f9f7.dynamic-ip6.hinet.net) (Quit: WeeChat 3.4)
[21:08:08] *** Quits: kevingal (~quassel@37.228.202.92) (Remote host closed the connection)
[21:20:04] <selwyn> https://www.youtube.com/watch?v=EkTHDgYTh64
[21:20:05] -ixelp- Why the UK's IBM Failed - YouTube
[21:20:07] <selwyn> never heard of this
[21:20:50] <ck_> is the answer like in The IT Crowd "because it was 'made in britain'" ?
[21:21:16] <ck_> I'll queue it up for later
[21:27:12] <shka> ICL was operating on the government contracts
[21:27:16] <shka> IIRC
[21:27:53] <pl> All did 
[21:28:56] <shka> yeah, such was the time
[21:29:40] <selwyn> government can pick winners
[21:33:57] <shka> well, not really, but companies in the early days relied on that sweet public money 
[21:34:03] <shka> including symbolic
[21:35:17] <ck_> not a winner in your book?
[21:35:20] <selwyn> well yeah
[21:35:28] <selwyn> they wouldn't have succeeded without public money
[21:35:28] <shka> and thinking machines corporations
[21:35:35] <shka> and CRAY 
[21:35:57] <shka> once NSA didn't need supercomputers cray and TM were both in hot water
[21:37:07] <shka> and a lot of symbolics was also defense sector
[21:37:36] <selwyn> did the gulf war logistics get done on symbolics machines?
[21:37:41] <shka> yup
[21:37:48] <shka> well, on SOME lisp machines
[21:37:52] <shka> don't know if symbolics
[21:38:43] <shka> say what you will about IBM, they were diversified pretty well given the context
[21:47:39] *** Quits: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net) (Quit: Client closed)
[21:48:00] <selwyn> their quantum computer isnt very scalable
[21:49:35] <selwyn> i should still use it for something though
[21:50:36] <ck_> maybe you could try chaining a block, I heard many good things about that
[22:03:55] <selwyn> not the first time i've heard that suggestion
[22:04:12] <selwyn> i suspect that cryptographic hashes are extremely unsuited to quantum computers, but who knows
[22:04:41] <selwyn> there's surely plenty of suckers who would buy into a quantum blockchain
[22:05:33] <selwyn> lol @ cryptobros worrying about quantum attacks when their shitty exchanges regularly lose hundreds of millions
[22:08:23] <ck_> it's all a very weird stageplay, this life
[22:09:39] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[22:10:24] <ck_> or an intricate tapestry with all kinds of variations on a theme
[22:13:53] <ck_> any day now The Undertaker will climb on the ropes, sell an NFT, while publishing a peer-reviewed paper about how geopolitical shifts are influencing the LGBTQQX+ subcommunity of antarctic penguins, who wrote linux
[22:24:49] *** Quits: treflip (~user@user/treflip) (Remote host closed the connection)
[22:27:52] *** Joins: eugercek (~user@user/eugercek)
[22:45:11] <pl> shka: it wasn't NSA that was paying for Cray and TM
[22:45:22] <shka> you sure?
[22:45:23] <pl> shka: NSA is one of those few places that continued to buy
[22:45:36] <pl> (and hidden part of how Sun became big company)
[22:46:00] <shka> iirc NSA was like almost 50% of Cray income
[22:47:03] <pl> TM had its sales prospect dry up when post cold war DARPA/NSF stopped funding clients to buy their (and not only their) supercomputers. Pretty much same thing hit Symbolics and TI LispM range
[22:47:07] <shka> anyway, bravo me, i made that line of sight thing
[22:47:20] *** Joins: clothespin (~awolven@c-73-209-95-92.hsd1.il.comcast.net)
[22:47:23] <shka> pl: ok
[22:47:30] <shka> still, public money
[22:47:30] <clothespin> good morning
[22:52:11] <selwyn> good morning
[23:25:06] <clothespin> what's going on?
[23:36:25] <clothespin> quiet
[23:46:12] *** Quits: Brucio-61 (~Brucio-61@2001:638:504:20e6:6ac3:87e0:e782:f3fc) (Ping timeout: 252 seconds)
[23:46:19] *** Quits: scymtym (~user@2001:638:504:20e6:6ac3:87e0:e782:f3fc) (Ping timeout: 250 seconds)
[23:46:25] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca) (Remote host closed the connection)
[23:47:08] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[23:53:51] <pl> shka: very much so public money
[23:54:42] <pl> symbolics and TI and TM pretty much got a huge chunk of business because DARPA was, effectively if not on paper, buying their machines and distributing them over the country to see what people made with them
