[00:00:54] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[00:01:07] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[00:06:32] *** Quits: forell (~forell@user/forell) (Quit: ZNC - https://znc.in)
[00:07:49] *** Joins: forell (~forell@user/forell)
[00:09:18] *** Quits: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi) (Quit: mikoto-chan)
[00:12:59] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:11f0:11ab:7004:939b)
[00:16:14] *** Joins: yauhsien (~yauhsien@61-231-35-209.dynamic-ip.hinet.net)
[00:20:32] *** Quits: yauhsien (~yauhsien@61-231-35-209.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[00:26:40] *** Joins: deadmarshal (~deadmarsh@95.38.119.180)
[00:26:54] *** Joins: jinsun__ (~quassel@user/jinsun)
[00:28:20] *** Quits: oxide (~lambda@user/oxide) (Quit: oxide)
[00:28:32] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 240 seconds)
[00:29:02] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Ping timeout: 240 seconds)
[00:30:23] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 264 seconds)
[00:31:03] *** Quits: deadmarshal (~deadmarsh@95.38.119.180) (Ping timeout: 256 seconds)
[00:31:29] *** Quits: serg (~a@p200300ef97155109502293e1a26d2ca1.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[00:36:44] *** Quits: _ht (~quassel@82-169-194-8.biz.kpn.net) (Remote host closed the connection)
[00:38:32] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:b4a8:9431:5c1:c0e0) (Remote host closed the connection)
[00:38:48] *** Joins: dhil (~dhil@cpc103052-sgyl39-2-0-cust260.18-2.cable.virginm.net)
[00:38:50] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:11f0:11ab:7004:939b) (Ping timeout: 268 seconds)
[00:39:04] *** Joins: jbox (~jbox@user/jbox)
[00:40:20] *** Quits: timCF_ (~timCF@m91-129-99-212.cust.tele2.ee) (Quit: leaving)
[00:42:59] *** Joins: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net)
[00:43:46] *** Joins: alzgh (~alzgh@user/alzgh)
[00:44:21] *** Quits: hippoid (~hippoid@c-98-220-13-8.hsd1.il.comcast.net) (Remote host closed the connection)
[00:47:04] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:50:08] *** Joins: pavonia (~user@user/siracusa)
[01:00:38] *** Joins: lavaman (~lavaman@98.38.249.169)
[01:02:54] *** Quits: mei (~mei@user/mei) (Ping timeout: 260 seconds)
[01:05:57] *** Quits: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk) (Remote host closed the connection)
[01:08:39] *** Quits: hiruji (~hiruji@user/hiruji) (Read error: Connection reset by peer)
[01:13:12] *** Quits: kuribas (~user@ptr-25vy0i85dt12hx5mopu.18120a2.ip6.access.telenet.be) (Quit: ERC (IRC client for Emacs 26.3))
[01:13:31] *** Joins: ubert (~Thunderbi@p548c9fcb.dip0.t-ipconnect.de)
[01:19:19] *** Quits: sagax (~sagax_nb@user/sagax) (Ping timeout: 250 seconds)
[01:21:03] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[01:22:01] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[01:23:17] *** Parts: ees (~user@pool-108-18-30-46.washdc.fios.verizon.net) (ERC 5.4 (IRC client for GNU Emacs 28.0.60))
[01:23:43] *** Joins: ees (~user@pool-108-18-30-46.washdc.fios.verizon.net)
[01:24:45] *** Quits: myShoggoth (~myShoggot@97-120-85-195.ptld.qwest.net) (Read error: Connection reset by peer)
[01:25:03] *** Joins: myShoggoth (~myShoggot@97-120-85-195.ptld.qwest.net)
[01:25:43] *** Joins: rusty (~rustyboy@82.77.237.221)
[01:28:00] *** Quits: Guest17 (~Guest17@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Quit: Client closed)
[01:32:51] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 276 seconds)
[01:38:55] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:b4a8:9431:5c1:c0e0)
[01:39:55] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[01:41:47] *** Quits: rusty (~rustyboy@82.77.237.221) (Quit: Leaving)
[01:43:20] *** Joins: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk)
[01:43:35] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:b4a8:9431:5c1:c0e0) (Ping timeout: 264 seconds)
[01:44:51] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[01:45:15] *** Joins: hiruji (~hiruji@user/hiruji)
[01:45:15] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[01:45:28] *** Quits: hiruji (~hiruji@user/hiruji) (Remote host closed the connection)
[01:45:46] *** Joins: hiruji (~hiruji@user/hiruji)
[01:46:14] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 260 seconds)
[01:47:58] *** Joins: waleee (~waleee@h-82-196-111-63.NA.cust.bahnhof.se)
[01:48:49] *** Quits: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk) (Ping timeout: 265 seconds)
[01:50:23] *** Quits: hiruji (~hiruji@user/hiruji) (Ping timeout: 256 seconds)
[01:50:38] *** Joins: hiruji (~hiruji@user/hiruji)
[01:52:35] *** Quits: myShoggoth (~myShoggot@97-120-85-195.ptld.qwest.net) (Ping timeout: 264 seconds)
[01:52:43] *** jinsun__ is now known as jinsun
[01:54:03] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fabc-15.dhcp.inet.fi) (Read error: Connection reset by peer)
[01:56:54] *** Joins: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi)
[01:59:42] *** Joins: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk)
[02:04:33] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 268 seconds)
[02:05:05] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[02:05:44] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:d960:c213:7b57:d73e)
[02:05:48] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:b4a8:9431:5c1:c0e0)
[02:07:46] *** Joins: notzmv (~zmv@user/notzmv)
[02:10:58] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:d960:c213:7b57:d73e) (Ping timeout: 260 seconds)
[02:14:18] *** Quits: __monty__ (~toonn@user/toonn) (Quit: leaving)
[02:15:52] *** Quits: gg (~gg@88.160.100.84) (Read error: Connection reset by peer)
[02:19:07] *** Quits: acidjnk_new (~acidjnk@2001:16b8:67ca:f700:252c:a817:9d7d:a6ca) (Ping timeout: 250 seconds)
[02:19:56] *** Quits: mc47 (~mc47@xmonad/TheMC47) (Remote host closed the connection)
[02:20:22] *** Joins: yauhsien (~yauhsien@118-167-40-224.dynamic-ip.hinet.net)
[02:21:24] *** Quits: dhil (~dhil@cpc103052-sgyl39-2-0-cust260.18-2.cable.virginm.net) (Remote host closed the connection)
[02:25:26] *** Quits: yauhsien (~yauhsien@118-167-40-224.dynamic-ip.hinet.net) (Ping timeout: 260 seconds)
[02:28:35] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Quit: Leaving)
[02:35:40] *** Joins: Alleria (~textual@user/alleria)
[02:37:14] *** Quits: CannabisIndica (~herb@user/mesaboogie) (Ping timeout: 268 seconds)
[02:37:33] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[02:38:08] *** Joins: myShoggoth (~myShoggot@97-120-85-195.ptld.qwest.net)
[02:39:57] *** Joins: CannabisIndica (~herb@user/mesaboogie)
[02:41:33] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 268 seconds)
[02:46:23] *** Quits: Successus (~Successus@gateway/tor-sasl/successus) ()
[02:47:34] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:78f3:43f3:fd48:5ac3)
[02:50:09] *** Joins: timCF_ (~timCF@m91-129-99-212.cust.tele2.ee)
[02:51:15] *** Joins: fernand (~fernand@179.156.35.4)
[02:54:03] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:b4a8:9431:5c1:c0e0) (Remote host closed the connection)
[02:57:31] *** Joins: jmorris (uid433911@hampstead.irccloud.com)
[02:57:40] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[02:57:52] *** Joins: vysn (~vysn@user/vysn)
[02:57:56] *** Quits: unit73e (~emanuel@2001:818:e8dd:7c00:32b5:c2ff:fe6b:5291) (Quit: Leaving)
[02:58:34] *** Joins: AlexNoo_ (~AlexNoo@94.233.241.104)
[02:58:59] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 250 seconds)
[03:00:03] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 268 seconds)
[03:00:41] *** Joins: mimmy (~mimmy@cpef81d0f857c83-cmf81d0f857c80.cpe.net.cable.rogers.com)
[03:01:09] *** Quits: AlexZenon (~alzenon@178.34.161.211) (Ping timeout: 265 seconds)
[03:01:17] *** Quits: Alex_test (~al_test@178.34.161.211) (Ping timeout: 268 seconds)
[03:02:07] *** Quits: AlexNoo (~AlexNoo@178.34.161.211) (Ping timeout: 265 seconds)
[03:04:02] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Ping timeout: 240 seconds)
[03:04:37] *** Joins: kayvank (~soostone@52-119-115-185.PUBLIC.monkeybrains.net)
[03:05:45] *** Quits: mimmy (~mimmy@cpef81d0f857c83-cmf81d0f857c80.cpe.net.cable.rogers.com) (Ping timeout: 256 seconds)
[03:06:22] *** Joins: Alex_test (~al_test@94.233.241.104)
[03:06:28] *** Joins: AlexZenon (~alzenon@94.233.241.104)
[03:07:01] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[03:07:15] *** Quits: max22- (~maxime@2a01cb0883359800a2387d5f4d01fe15.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[03:09:14] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[03:10:00] <timCF_> Is there the way to unlift somehow name of the type (just normal kind *) from type level (in case of usage from generic function) to value level (for example a String)?
[03:11:01] <geekosaur> not entirely sure what you're talking about
[03:11:14] <geekosaur> types don't exist at runtime so their names normally aren't known
[03:12:07] <geekosaur> there is Data.Typeable which carries type information in a dictionary at runtime, but (a) it won't work for polymorphic types (b) you need to carry it around in your types
[03:12:08] <timCF_> Something like `showType :: forall a. a -> String`
[03:12:34] <EvanR> that type doesn't have enough information to work
[03:12:36] <geekosaur> :t typeOf
[03:12:38] <lambdabot> Typeable a => a -> TypeRep
[03:12:42] <awpr> > show (typeRep (Proxy @Int))
[03:12:43] <lambdabot>  <hint>:1:22: error: parse error on input ‘@’
[03:12:46] <EvanR> :t show . typeOf
[03:12:47] <lambdabot> Typeable a => a -> String
[03:13:06] <timCF_> Exactly what I wanted
[03:13:11] <timCF_> Thanks!
[03:13:44] <EvanR> interested to see how you end up with an unknown type at runtime xD
[03:14:35] <timCF_> hmmm
[03:14:50] <geekosaur> betting it's polymorphic, in which case as I said this won't work
[03:15:02] <timCF_> actually why I do even need a value of "a"?
[03:15:06] <geekosaur> you can't find out the actual type it was called at
[03:15:33] <timCF_> why just not `showType :: forall a. String`
[03:15:35] <awpr> you don't need a value; there's a Proxy version, or `undefined` will work
[03:15:59] <awpr> `base` tends to avoid using ambiguous types that need TypeApplications to work
[03:16:03] <timCF_> and then `showType @a` from some generic function
[03:16:11] <timCF_> aa
[03:16:14] <geekosaur> also Typeable predates Proxy and TypeApplications
[03:16:24] <EvanR> forall a . String is a constant
[03:16:42] <timCF_> it's kinda a function on types
[03:16:42] *** Quits: myShoggoth (~myShoggot@97-120-85-195.ptld.qwest.net) (Ping timeout: 268 seconds)
[03:16:50] <awpr> you can write that API, though: `showType :: forall a. Typeable a => String`   `showType = show (typeRep @a Proxy)`
[03:16:52] <timCF_> but on value level it's a constant
[03:16:54] <EvanR> your're mixing levels now
[03:17:01] *** Quits: Jing (~hedgehog@2604:a840:3::1094) (Remote host closed the connection)
[03:17:34] *** Joins: Jing (~hedgehog@2604:a840:3::1094)
[03:17:43] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:17:56] <awpr> type parameters don't exist at runtime (at least until `foreach` from distant-future dependent haskell becomes a thing), so there needs to be something passed in to identify the type at runtime if it's going to be something other than a constant (in this case, a `Typeable` instance)
[03:19:17] *** Quits: kayvank (~soostone@52-119-115-185.PUBLIC.monkeybrains.net) (Remote host closed the connection)
[03:26:13] <timCF_> Yeah, typeRep works perfectly with Proxy type. Cool stuff!
[03:30:38] *** Quits: whatsupdoc (uid509081@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[03:31:04] *** Quits: ees (~user@pool-108-18-30-46.washdc.fios.verizon.net) (Remote host closed the connection)
[03:31:12] *** Joins: ian` (~user@ool-45779fe5.dyn.optonline.net)
[03:31:14] *** Quits: alzgh (~alzgh@user/alzgh) (Ping timeout: 256 seconds)
[03:33:41] *** Quits: timCF_ (~timCF@m91-129-99-212.cust.tele2.ee) (Quit: leaving)
[03:36:22] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 260 seconds)
[03:38:19] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[03:39:23] *** Quits: zaquest (~notzaques@5.130.79.72) (Read error: Connection reset by peer)
[03:39:35] *** Quits: ChaiTRex (~ChaiTRex@user/chaitrex) (Remote host closed the connection)
[03:40:01] *** Joins: ChaiTRex (~ChaiTRex@user/chaitrex)
[03:43:32] *** Joins: zaquest (~notzaques@5.130.79.72)
[03:47:09] *** Joins: pfurla (~pfurla@2804:14d:5c81:4104:d41b:9326:c4d8:9f2a)
[03:48:17] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:78f3:43f3:fd48:5ac3) (Remote host closed the connection)
[03:48:23] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:b4a8:9431:5c1:c0e0)
[03:52:28] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[03:54:02] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[03:56:11] *** Quits: Tuplanolla (~Tuplanoll@91-159-69-50.elisa-laajakaista.fi) (Quit: Leaving.)
[04:02:54] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[04:03:34] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 268 seconds)
[04:04:11] *** Lord_of_Life_ is now known as Lord_of_Life
[04:08:22] *** Quits: desantra (~skykanin@user/skykanin) (Quit: WeeChat 3.3)
[04:13:54] *** Joins: jgeerds (~jgeerds@55d45b75.access.ecotel.net)
[04:17:25] *** Joins: mvk (~mvk@2607:fea8:5cc1:fa00::4702)
[04:21:03] *** Joins: mimmy (~mimmy@cpef81d0f857c83-cmf81d0f857c80.cpe.net.cable.rogers.com)
[04:22:25] *** Joins: yauhsien (~yauhsien@118-167-40-224.dynamic-ip.hinet.net)
[04:25:02] *** Quits: mimmy (~mimmy@cpef81d0f857c83-cmf81d0f857c80.cpe.net.cable.rogers.com) (Ping timeout: 240 seconds)
[04:26:02] *** Quits: jgeerds (~jgeerds@55d45b75.access.ecotel.net) (Ping timeout: 240 seconds)
[04:26:32] *** Quits: yauhsien (~yauhsien@118-167-40-224.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[04:34:47] *** Joins: machinedgod (~machinedg@24.105.81.50)
[04:36:13] <arahael> maerwald: just had a look for the missing libraries...  libtinfo.so.6 does not exist in alpine.  it's a transitional package, too.
[04:36:40] <arahael> maerwald: so it's looking very unlikely that there is an easy way for me to get haskell going in this environmenr.
[04:37:01] <geekosaur> symlink to libncurses.so.6
[04:38:07] <geekosaur> ideally configure would detect lack of libtinfo and use libncurses instead
[04:39:43] <arahael> hmm.  what about libnuma?
[04:39:54] <geekosaur> that one I don't know
[04:41:13] <geekosaur> on my ubuntu it's from libnuma1, but that probably doesn't help
[04:41:23] *** Quits: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8) (Remote host closed the connection)
[04:42:25] *** Quits: alx741 (~alx741@186.178.109.242) (Ping timeout: 268 seconds)
[04:44:11] <arahael> i think i have it in the numacl package so lets try that...
[04:44:13] <geekosaur> https://pkgs.alpinelinux.org/contents?branch=edge&name=numactl-dev&arch=x86&repo=main
[04:44:19] <arahael> that! :)
[04:44:51] <geekosaur> lso I just noticed you pointed to a .so but you won't find those on alpine iirc, it's all static
[04:45:00] <geekosaur> so you still have a problem
[04:45:52] <geekosaur> I thought we had a static/alpine build of ghc somewhere though
[04:45:59] * geekosaur digs
[04:46:29] *** Joins: whatsupdoc (uid509081@hampstead.irccloud.com)
[04:47:11] <arahael> No, there's .so files too.
[04:47:18] <geekosaur> https://downloads.haskell.org/~ghc/8.10.7/ghc-8.10.7-x86_64-alpine3.10-linux-integer-simple.tar.xz ?
[04:47:29] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[04:47:30] <arahael> Yeah, but I'm on aarch64
[04:47:30] *** Joins: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8)
[04:47:34] <geekosaur> oh
[04:47:43] <geekosaur> dunno about that one
[04:48:01] <arahael> It's been confirmed you guys don't have it.
[04:48:26] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[04:48:26] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[04:48:26] *** Joins: wroathe (~wroathe@user/wroathe)
[04:48:40] <geekosaur> and if you need a libnuma.so then numactl won't have iot, it's only got a static library
[04:48:53] <arahael> No, I've got it now, had to install that.
[04:49:27] <arahael> Hmm...  What's teh difference between libncursesw and libncurses, I have the former...
[04:49:58] <geekosaur> there isn't one in api level 6
[04:50:02] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:1f:67de:401b:c472)
[04:50:13] <geekosaur> used to be that ncursesw was wide character (unicode) support
[04:50:16] <arahael> Ah.
[04:50:26] *** Quits: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk) (Remote host closed the connection)
[04:50:44] <arahael> Hmm, ok, so I think it just don't work - I have now satisfied all libraries but still three missing symbols.
[04:51:00] <arahael> Missing symbols: gnu_dev_makedev, gnu_dev_major, gnu_dev_minor
[04:51:20] <geekosaur> uh. that's a libc issue
[04:51:44] <arahael> Seems like ghcup's binary isn't compiled for my system at all then.
[04:52:05] <geekosaur> sounds like somehow they got a few glibc headers mixed in with musl?
[04:52:22] <geekosaur> because I'd expect those to be macros
[04:53:05] <arahael> maerwald: Has pointed out there's no bindist for this system, though I assumed he was referring to the static bindists.
[04:53:14] <arahael> But I guess there isn't one at all.
[04:53:38] <arahael> s/:/, :)
[04:53:44] *** Joins: jushur (~human@user/jushur)
[04:54:22] <arahael> I think I may be best investigating rust instead if I want to support this system.
[04:56:20] *** Joins: alx741 (~alx741@186.178.108.219)
[04:56:47] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:1f:67de:401b:c472) (Ping timeout: 264 seconds)
[04:57:10] <arahael> (Especially since I haven't actually written this yet, though, I do really like the idea of using haskell's network-simple-tls.)
[05:03:35] <arahael> I could consider compiling haskell, but I've no other compiler to bootstrap it, so it's still back to cross compiling, and I'm not really keen to get into that with haskell.
[05:29:25] *** Joins: deadmarshal (~deadmarsh@95.38.116.117)
[05:31:33] *** Quits: wroathe (~wroathe@user/wroathe) (Quit: leaving)
[05:33:39] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Ping timeout: 256 seconds)
[05:34:02] *** Quits: deadmarshal (~deadmarsh@95.38.116.117) (Ping timeout: 260 seconds)
[05:38:50] *** Quits: fryguybob (~fryguybob@cpe-74-67-169-145.rochester.res.rr.com) (Quit: leaving)
[05:43:49] *** Joins: fryguybob (~fryguybob@cpe-74-67-169-145.rochester.res.rr.com)
[05:44:41] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[05:45:43] <danso> is (->) mathematically a bifunctor, but isn't in haskell for practical computery reasons? 
[05:48:03] <awpr> the Bifunctor class is a very specific form of bifunctor that (->) isn't
[05:48:11] *** Joins: zaquest (~notzaques@5.130.79.72)
[05:48:23] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:48:53] <awpr> Bifunctor is Hask x Hask -> Hask bifunctors, but (->) is Hask_op x Hask -> Hask.  for that, there's Profunctor
[05:50:57] <danso> hm ok thanks
[05:56:25] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 268 seconds)
[06:01:23] *** Joins: lavaman (~lavaman@98.38.249.169)
[06:05:46] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 260 seconds)
[06:08:52] *** Quits: alx741 (~alx741@186.178.108.219) (Quit: alx741)
[06:09:23] *** Joins: machinedgod (~machinedg@24.105.81.50)
[06:10:12] *** Quits: pfurla (~pfurla@2804:14d:5c81:4104:d41b:9326:c4d8:9f2a) (Quit: gone to sleep. ZZZzzz…)
[06:12:03] *** Joins: pfurla (~pfurla@2804:14d:5c81:4104:d41b:9326:c4d8:9f2a)
[06:13:32] *** Quits: xff0x (~xff0x@2001:1a81:5231:4c00:adf9:5009:dcd2:4bf0) (Ping timeout: 240 seconds)
[06:13:44] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:1f:67de:401b:c472)
[06:14:27] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 256 seconds)
[06:15:42] *** Joins: xff0x (~xff0x@2001:1a81:526f:1d00:143a:8455:ad4e:6c5e)
[06:16:12] *** Quits: pfurla (~pfurla@2804:14d:5c81:4104:d41b:9326:c4d8:9f2a) (Client Quit)
[06:16:25] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[06:18:37] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:1f:67de:401b:c472) (Ping timeout: 268 seconds)
[06:20:42] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 260 seconds)
[06:22:56] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[06:23:49] *** Joins: yauhsien (~yauhsien@118-167-40-224.dynamic-ip.hinet.net)
[06:25:35] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[06:28:14] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[06:28:37] *** Quits: yauhsien (~yauhsien@118-167-40-224.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[06:30:30] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[06:32:33] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:1f:67de:401b:c472)
[06:36:06] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 260 seconds)
[06:37:08] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:1f:67de:401b:c472) (Ping timeout: 268 seconds)
[06:37:44] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[06:42:32] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[06:44:35] *** Quits: lagash (lagash@lagash.freeirc.org) (Killed (calcium.libera.chat (Nickname regained by services)))
[06:44:48] *** Joins: lagash_ (lagash@lagash.freeirc.org)
[06:45:22] *** Quits: jbox (~jbox@user/jbox) (Ping timeout: 260 seconds)
[06:47:31] *** Joins: lavaman (~lavaman@98.38.249.169)
[06:47:44] *** Joins: pfurla (~pfurla@201.17.118.230)
[06:52:26] *** Joins: zebrag (~chris@user/zebrag)
[06:56:09] *** Quits: fernand (~fernand@179.156.35.4) (Quit: Connection closed)
[07:08:16] *** Quits: Cajun (~Cajun@user/cajun) (Ping timeout: 256 seconds)
[07:16:37] *** Quits: lagash_ (lagash@lagash.freeirc.org) (Quit: ZNC - https://znc.in)
[07:20:38] *** Quits: whatsupdoc (uid509081@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[07:20:47] *** Joins: yauhsien (~yauhsien@118-167-40-224.dynamic-ip.hinet.net)
[07:21:19] *** Quits: td_ (~td@muedsl-82-207-238-028.citykom.de) (Ping timeout: 256 seconds)
[07:23:14] *** Joins: td_ (~td@muedsl-82-207-238-154.citykom.de)
[07:23:22] *** Quits: xff0x (~xff0x@2001:1a81:526f:1d00:143a:8455:ad4e:6c5e) (Ping timeout: 268 seconds)
[07:23:54] *** Joins: xff0x (~xff0x@2001:1a81:526f:1d00:936b:4a50:cc7a:54ee)
[07:23:59] *** Quits: renzhi (~xp@2607:fa49:6500:b100::6e7f) (Ping timeout: 268 seconds)
[07:24:22] *** Joins: lagash (lagash@lagash.shelltalk.net)
[07:25:34] *** Quits: yauhsien (~yauhsien@118-167-40-224.dynamic-ip.hinet.net) (Ping timeout: 260 seconds)
[07:25:46] *** Quits: shapr (~user@pool-100-36-247-68.washdc.fios.verizon.net) (Remote host closed the connection)
[07:31:05] *** Joins: dsamperi (~dsamperi@2603-7000-3b42-5400-696c-e6d5-a38c-bff7.res6.spectrum.com)
[07:31:35] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 264 seconds)
[07:33:53] <dsamperi> Have recent revisions of GHC provided a work-around for the fact that field names have file/module scope? SPJ says something about this in his lecture on Lenses.
[07:35:06] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:c9bb:e46c:7fac:4568)
[07:37:01] *** Joins: wei2912 (~wei2912@138.75.71.147)
[07:37:37] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[07:38:31] <dsal> There's nothing special about field names in that regard.  You can choose to or choose not to export those symbols.
[07:38:45] <dsal> There are new features that allow you to have records without generating the accessor functions.
[07:38:52] <dsal> And a few other weird record hacks.
[07:39:59] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:c9bb:e46c:7fac:4568) (Ping timeout: 264 seconds)
[07:40:42] *** Joins: jbox (~jbox@user/jbox)
[07:41:41] <sm> a growing number of weird record hacks
[07:44:57] <dsamperi> Simon suggested a future release  might include  a work-around for field name conflicts in the same module using Lens library.
[07:45:17] *** Quits: ralu (~ralu@static.211.245.203.116.clients.your-server.de) (Quit: Ping timeout (120 seconds))
[07:50:17] *** Joins: helby (helby@alpine/moderator/helby)
[07:52:42] <helby> Hey, I am not familiar with cabal/ghc, trying to build HsOpenSSL on OpenBSD and had some errors ;/ https://envs.sh/E2h.log
[07:53:45] *** Joins: ralu (~ralu@static.211.245.203.116.clients.your-server.de)
[07:59:51] <dsal> dsamperi: It's unclear what you mean.  lens can do this with "classy" lenses, but you can't just make a function mean different things.
[08:00:50] <dsal> You can always qualify symbols to the module that's exporting them.
[08:01:47] <helby> it would help if at least I know what these errors means ;/
[08:02:52] <awpr> this kinda looks like an incompatibility between some low-level Haskell/C interface code and the C headers your system provides
[08:03:24] <awpr> the error is coming from C land, where something is trying to find the offset of a struct field, in a type that's not been defined yet, only forward-declared
[08:03:27] *** Quits: rtsn (~nstr@c-c7fe225c.07-59-7570703.bbcust.telenor.se) (Ping timeout: 268 seconds)
[08:03:46] *** Joins: rtsn (~nstr@c-c7fe225c.07-59-7570703.bbcust.telenor.se)
[08:04:56] <helby> well openbsd uses libressl, not openssl, don't know if it can be related, but I assume
[08:05:14] <awpr> that sounds like it's probably the issue
[08:08:15] <awpr> from skimming the issue tracker, it looks like it intends to support libressl, maybe on a best-effort basis.  it might be worth filing a bug report https://github.com/vshabanov/HsOpenSSL/issues
[08:08:23] *** Quits: dsrt^ (~dsrt@68.101.63.101) (Ping timeout: 268 seconds)
[08:10:46] *** Joins: dsrt^ (~dsrt@68.101.63.101)
[08:11:07] *** Quits: dsamperi (~dsamperi@2603-7000-3b42-5400-696c-e6d5-a38c-bff7.res6.spectrum.com) (Quit: Konversation terminated!)
[08:18:28] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[08:27:16] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:31:45] *** Joins: yauhsien (~yauhsien@118-167-40-224.dynamic-ip.hinet.net)
[08:31:54] *** Joins: deadmarshal (~deadmarsh@95.38.116.117)
[08:36:07] *** Quits: yauhsien (~yauhsien@118-167-40-224.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[08:37:25] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:cc87:cc85:f027:20a)
[08:42:33] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:cc87:cc85:f027:20a) (Ping timeout: 265 seconds)
[08:43:31] *** Joins: hololeap (~hololeap@user/hololeap)
[08:47:21] *** Joins: yauhsien (~yauhsien@118-167-40-224.dynamic-ip.hinet.net)
[08:54:49] *** Quits: deadmarshal (~deadmarsh@95.38.116.117) (Ping timeout: 256 seconds)
[08:56:28] *** Joins: vysn (~vysn@user/vysn)
[09:00:48] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[09:02:49] *** Quits: waleee (~waleee@h-82-196-111-63.NA.cust.bahnhof.se) (Quit: WeeChat 3.3)
[09:05:25] *** Quits: phma (~phma@host-67-44-208-215.hnremote.net) (Read error: Connection reset by peer)
[09:06:13] *** Joins: phma (~phma@host-67-44-208-36.hnremote.net)
[09:26:42] *** Joins: edrx (~Eduardo@2804:56c:d2d0:b400:6e3c:c666:9c9c:53ff)
[09:34:15] *** Joins: deadmarshal (~deadmarsh@95.38.116.117)
[09:36:40] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:cc87:cc85:f027:20a)
[09:37:34] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:41:11] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:cc87:cc85:f027:20a) (Ping timeout: 264 seconds)
[09:42:07] *** Quits: mvk (~mvk@2607:fea8:5cc1:fa00::4702) (Ping timeout: 268 seconds)
[09:47:04] *** Joins: mbuf (~Shakthi@223.178.74.138)
[09:48:59] *** Quits: yauhsien (~yauhsien@118-167-40-224.dynamic-ip.hinet.net) (Ping timeout: 264 seconds)
[09:57:09] *** Quits: deadmarshal (~deadmarsh@95.38.116.117) (Ping timeout: 256 seconds)
[10:00:40] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[10:02:05] *** Joins: deadmarshal (~deadmarsh@95.38.116.117)
[10:04:03] *** Quits: jmorris (uid433911@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[10:06:01] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[10:07:40] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:391b:6915:6f86:ad4d)
[10:14:39] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[10:16:18] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:391b:6915:6f86:ad4d) (Ping timeout: 260 seconds)
[10:25:57] *** Joins: abhixec_ (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net)
[10:28:33] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:e15c:d2bc:9fea:d850)
[10:31:09] *** Joins: mei (~mei@user/mei)
[10:33:43] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:e15c:d2bc:9fea:d850) (Ping timeout: 265 seconds)
[10:39:59] *** Quits: deadmarshal (~deadmarsh@95.38.116.117) (Ping timeout: 264 seconds)
[10:40:36] *** Joins: Solid (~slot@xmonad/slotThe)
[10:42:02] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 260 seconds)
[10:42:07] *** Joins: cheater1__ (~Username@user/cheater)
[10:42:11] *** cheater1__ is now known as cheater
[10:43:15] *** Joins: deadmarshal (~deadmarsh@95.38.116.117)
[10:46:49] *** Parts: Solid (~slot@xmonad/slotThe) (WeeChat 3.3)
[10:52:36] *** Quits: pfurla (~pfurla@201.17.118.230) (Quit: gone to sleep. ZZZzzz…)
[10:57:02] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[10:57:03] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:57:58] *** Quits: nitrix (~nitrix@user/nitrix) (Quit: Libera upgrade.)
[10:58:29] *** Joins: nitrix (~nitrix@user/nitrix)
[11:04:33] *** Joins: Axman6 (~Axman6@user/axman6)
[11:13:26] *** Quits: Skyfire (~pyon@user/pyon) (Quit: brb)
[11:13:39] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[11:22:39] *** Joins: Skyfire (~pyon@user/pyon)
[11:25:16] *** Quits: Skyfire (~pyon@user/pyon) (Client Quit)
[11:27:16] *** Joins: Skyfire (~pyon@user/pyon)
[11:27:56] *** Quits: phma (~phma@host-67-44-208-36.hnremote.net) (Read error: Connection reset by peer)
[11:29:05] *** Joins: phma (phma@2001:5b0:2144:7d68:1cc9:af1c:e136:41c7)
[11:30:02] *** Quits: deadmarshal (~deadmarsh@95.38.116.117) (Ping timeout: 268 seconds)
[11:30:29] *** Joins: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr)
[11:31:35] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[11:32:12] *** Joins: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk)
[11:37:30] *** Joins: deadmarshal (~deadmarsh@95.38.116.117)
[11:39:51] *** Quits: tzh (~tzh@c-24-21-73-154.hsd1.or.comcast.net) (Quit: zzz)
[11:40:04] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:e15c:d2bc:9fea:d850)
[11:45:29] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:e15c:d2bc:9fea:d850) (Ping timeout: 250 seconds)
[11:46:02] *** Joins: takuan (~takuan@178-116-218-225.access.telenet.be)
[11:46:27] *** Joins: yauhsien (~yauhsien@118-167-40-224.dynamic-ip.hinet.net)
[11:51:37] *** Quits: yauhsien (~yauhsien@118-167-40-224.dynamic-ip.hinet.net) (Ping timeout: 268 seconds)
[12:00:34] *** Joins: chomwitt (~chomwitt@2a02:587:dc2d:ec00:12c3:7bff:fe6d:d374)
[12:06:55] *** Quits: deadmarshal (~deadmarsh@95.38.116.117) (Ping timeout: 256 seconds)
[12:16:41] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:b4a8:9431:5c1:c0e0) (Remote host closed the connection)
[12:21:01] *** Quits: gustik (~gustik@2a01:c844:240a:de20:3606:7339:bc88:b5f5) (Quit: Leaving)
[12:24:12] <albet70> what's the relationship between json and yaml?
[12:28:09] <sm> four letter names, plain text, popular, overused, hard to displace
[12:28:19] <pavonia> JSON is a subset of YAML
[12:31:00] *** Quits: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk) (Remote host closed the connection)
[12:31:27] <[exa]> also, parsing json is afaik decidable
[12:31:37] <[exa]> albet70: you meant the packages right? :D
[12:32:16] <albet70> "🟢 [exa] :albet70: you meant the packages right? :D", just the name
[12:33:02] <albet70> "pavonia :JSON is a subset of YAML", aha
[12:35:15] *** Joins: MoC (~moc@user/moc)
[12:37:21] <albet70> is that simple to use parsec to parse yaml? I tried json at once
[12:37:56] <albet70> or megaparsec?
[12:40:45] *** Joins: jonathanx_ (~jonathan@h-178-174-176-109.A357.priv.bahnhof.se)
[12:44:36] *** Joins: deadmarshal (~deadmarsh@95.38.116.117)
[12:47:33] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Killed (NickServ (GHOST command used by allbery_b)))
[12:47:33] *** Joins: allbery_b (~geekosaur@xmonad/geekosaur)
[12:47:36] *** allbery_b is now known as geekosaur
[12:48:06] *** Joins: Tuplanolla (~Tuplanoll@91-159-69-50.elisa-laajakaista.fi)
[12:51:48] <[exa]> albet70: there's the specialized parser in `yaml` package that can be recommended, but if you are okay with parsing a decent safe subset of yaml, megaparsec should just work
[12:52:36] <[exa]> there's even some support for autoparsing the indentation blocks, which well, you know, helps a lot.
[12:52:47] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:e15c:d2bc:9fea:d850)
[12:55:58] *** Quits: jbox (~jbox@user/jbox) (Read error: Connection reset by peer)
[12:57:45] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:e15c:d2bc:9fea:d850) (Ping timeout: 265 seconds)
[13:00:57] *** Joins: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk)
[13:13:30] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[13:14:47] *** Joins: _ht (~quassel@82-169-194-8.biz.kpn.net)
[13:17:03] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:b4a8:9431:5c1:c0e0)
[13:21:39] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:b4a8:9431:5c1:c0e0) (Ping timeout: 268 seconds)
[13:25:39] *** Joins: mc47 (~mc47@xmonad/TheMC47)
[13:27:13] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[13:27:40] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[13:30:05] *** Quits: justache (~justache@user/justache) (Read error: Connection reset by peer)
[13:31:01] *** Joins: justache (~justache@user/justache)
[13:31:53] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:e15c:d2bc:9fea:d850)
[13:36:32] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:e15c:d2bc:9fea:d850) (Ping timeout: 240 seconds)
[13:37:25] *** Joins: phma_ (~phma@2001:5b0:211f:e738:5c4d:dbc4:3f14:dae2)
[13:38:41] *** Quits: phma (phma@2001:5b0:2144:7d68:1cc9:af1c:e136:41c7) (Read error: Connection reset by peer)
[13:42:16] *** phma_ is now known as phma
[13:42:18] *** Joins: zer0bitz (~zer0bitz@2001:2003:f6bc:f00:5be:28c2:b3af:e641)
[13:45:06] *** Quits: bollu (~bollu@139.59.46.74) (Quit: The Lounge - https://thelounge.chat)
[13:54:03] *** Joins: jgeerds (~jgeerds@55d45b75.access.ecotel.net)
[13:55:14] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[13:55:32] *** Joins: lavaman (~lavaman@98.38.249.169)
[13:55:39] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[13:55:53] *** Joins: lavaman (~lavaman@98.38.249.169)
[13:56:01] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[13:56:16] *** Joins: lavaman (~lavaman@98.38.249.169)
[13:56:23] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[13:56:39] *** Joins: lavaman (~lavaman@98.38.249.169)
[13:56:44] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[13:57:02] *** Joins: lavaman (~lavaman@98.38.249.169)
[13:57:09] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[13:58:58] *** Joins: Successus (~Successus@gateway/tor-sasl/successus)
[14:01:45] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[14:01:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[14:07:28] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[14:11:35] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[14:12:33] *** Joins: pfurla (~pfurla@2804:14d:5c81:4104:d41b:9326:c4d8:9f2a)
[14:15:53] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:7892:4ebf:89a7:d96)
[14:16:00] *** Quits: m4lvin_ (~m4lvin@w4eg.de) (Quit: m4lvin_)
[14:16:12] *** Joins: m4lvin (~m4lvin@w4eg.de)
[14:18:08] *** Joins: linkedlistist (uid528169@lymington.irccloud.com)
[14:18:12] <smunix> modified 
[14:18:38] * [exa] welcomes the change
[14:18:50] *** Joins: chisui (~chisui@2001:16b8:666f:100:7a17:7081:22e6:bcd)
[14:19:37] <linkedlistist> Hey, folks, does anyone have any experience of calling Haskell from Rust?
[14:20:09] *** Quits: yushyin (XNontZhIIh@karif.server-speed.net) (Quit: WeeChat 3.3)
[14:20:18] *** Joins: yushyin (3RNeQpThcJ@karif.server-speed.net)
[14:23:57] *** Quits: jgeerds (~jgeerds@55d45b75.access.ecotel.net) (Ping timeout: 268 seconds)
[14:27:51] *** Joins: kupi (uid212005@hampstead.irccloud.com)
[14:28:23] *** Joins: lavaman (~lavaman@98.38.249.169)
[14:30:51] *** Joins: alx741 (~alx741@186.178.108.219)
[14:31:15] *** Joins: __monty__ (~toonn@user/toonn)
[14:32:58] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 260 seconds)
[14:36:04] *** Quits: MoC (~moc@user/moc) (Quit: Konversation terminated!)
[14:37:14] *** Quits: drownbes (~drownbes@200-149-20-81.sta.estpak.ee) (Ping timeout: 260 seconds)
[14:38:46] *** Quits: pfurla (~pfurla@2804:14d:5c81:4104:d41b:9326:c4d8:9f2a) (Quit: gone to sleep. ZZZzzz…)
[14:43:28] <[exa]> linkedlistist: it should be possible using the "reverse FFI" as from C, given Rust can call C symbols with ccall.
[14:44:01] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:e15c:d2bc:9fea:d850)
[14:45:06] <[exa]> i.e., just simulate what's happening in here https://wiki.haskell.org/Calling_Haskell_from_C
[14:45:29] <[exa]> you'll just need to take the `test.rs` and compile it yourself to `.o`
[14:45:52] <albet70> haha, calling haskell from rust
[14:46:18] <[exa]> like, honestly I'd expect the other way around.
[14:46:19] <[exa]> :D
[14:46:27] <albet70> nowadays, people always compare those two
[14:46:46] <albet70> which one is better or harder to learn
[14:47:40] <[exa]> yeah comparing the incomparable is a popular fun. :D
[14:48:29] *** Joins: yauhsien (~yauhsien@118-167-40-224.dynamic-ip.hinet.net)
[14:48:33] <[exa]> nyway rust is pretty good, at least for beginners who require the tooling, esp. compared to the other languages in that niche
[14:48:39] <[exa]> seriously looking forward to how that develops
[14:48:55] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:e15c:d2bc:9fea:d850) (Ping timeout: 265 seconds)
[14:49:01] <albet70> I saw there was a rust book in the library, and it's so big I mean there're too many pages, so I didn't learn rust from there
[14:50:27] <albet70> and then I saw learn yourself a haskell for good, it doesn't have so many pages, so I buy it and learn haskell
[14:51:31] <sshine> albet70, I started solving the Rustlings tutorial. it's a nice alternative to reading a book.
[14:51:34] <albet70> it's a good book for beginners, but it lacks lots of concepts
[14:51:55] <albet70> sshine, does it have so many pages?
[14:52:04] <sshine> it's not a book.
[14:52:32] *** Joins: lavaman (~lavaman@98.38.249.169)
[14:53:07] <sshine> it's a git repository. you download it, set up a development environment, enable "file watch" (turn the compiler to recompile the tutorial project every time a file is changed), and start fixing intentional bugs left in each tutorial file. when you're done with one file, the next file complains.
[14:53:11] *** Quits: yauhsien (~yauhsien@118-167-40-224.dynamic-ip.hinet.net) (Ping timeout: 264 seconds)
[14:53:25] <albet70> also there's another language that comes to compare with haskell, scala
[14:53:31] <sshine> eventually, when you get to the stuff about borrowed pointers, I do feel the need to read up. but I can still use just online resources.
[14:53:52] *** Quits: chisui (~chisui@2001:16b8:666f:100:7a17:7081:22e6:bcd) (Quit: Client closed)
[14:54:25] <albet70> haskell, rust, scala those three are very argued
[14:54:59] <sshine> they're argued?
[14:55:03] <albet70> the pointers, is like C or C++?
[14:55:15] <sshine> yes, but stronger typed pointers.
[14:56:29] <albet70> C's pointers are not typed?
[14:56:50] <sshine> they're loosely typed. you almost always have to cast things eventually.
[14:56:54] <albet70> I totally forget how to write C
[14:56:55] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[14:57:36] <yushyin> good old voidpointers ;)
[14:57:38] <sshine> and function pointers in C are somewhat of a hack.
[14:57:40] <albet70> I most use python or kotlin at work
[14:57:42] <sshine> yeah :)
[14:58:17] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[14:58:49] <sshine> rust differentiates between references, pointers, whether they're mutable/immutable, and several kinds of smart pointers: https://doc.rust-lang.org/book/ch15-00-smart-pointers.html -- depending on the use-case.
[14:59:11] *** Quits: chomwitt (~chomwitt@2a02:587:dc2d:ec00:12c3:7bff:fe6d:d374) (Ping timeout: 250 seconds)
[15:05:53] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:e15c:d2bc:9fea:d850)
[15:09:32] <albet70> could >> implement in other languages?
[15:09:40] <albet70> be implemented
[15:10:49] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:e15c:d2bc:9fea:d850) (Ping timeout: 268 seconds)
[15:15:45] *** Quits: ubert (~Thunderbi@p548c9fcb.dip0.t-ipconnect.de) (Quit: ubert)
[15:16:06] *** Joins: ubert (~Thunderbi@p200300ecdf0ba2db387348ed975200f7.dip0.t-ipconnect.de)
[15:19:00] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[15:23:36] *** Joins: acidjnk (~acidjnk@2001:16b8:6774:9a00:78e5:1df2:55f8:981b)
[15:28:30] *** Quits: acidjnk (~acidjnk@2001:16b8:6774:9a00:78e5:1df2:55f8:981b) (Ping timeout: 260 seconds)
[15:30:00] *** Quits: wei2912 (~wei2912@138.75.71.147) (Quit: Lost terminal)
[15:30:08] <geekosaur> it has been implemented, although it has shortcomings because very few languages are polymorphic in the way Haskell is
[15:30:19] <geekosaur> usually it's called "andthen"
[15:30:58] *** Quits: zer0bitz (~zer0bitz@2001:2003:f6bc:f00:5be:28c2:b3af:e641) (Ping timeout: 265 seconds)
[15:31:22] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fabc-15.dhcp.inet.fi)
[15:36:17] *** Joins: lavaman (~lavaman@98.38.249.169)
[15:37:14] *** Quits: nf (~n@monade.li) (Quit: Fairfarren.)
[15:37:19] <albet70> geekosaur, has it been implemented in python?
[15:37:29] *** AlexNoo_ is now known as AlexNoo
[15:37:35] <albet70> and what it looks like?
[15:37:48] <geekosaur> I don't do python so I don't know
[15:37:55] <geekosaur> probably someone has
[15:39:01] *** Joins: nf (~n@monade.li)
[15:39:05] *** Joins: Pickchea (~private@user/pickchea)
[15:39:42] <albet70> ok
[15:40:14] *** Joins: notzmv (~zmv@user/notzmv)
[15:41:26] *** Joins: Feuermagier_ (~Feuermagi@154.28.188.151)
[15:41:34] *** Quits: vgtw (~vgtw@c-6a60205c.07-348-756d651.bbcust.telenor.se) (Quit: ZNC - https://znc.in)
[15:41:59] *** Joins: vgtw (~vgtw@c-6a60205c.07-348-756d651.bbcust.telenor.se)
[15:42:02] <albet70> geekosaur, I googled python andThen, and it gives me "compose"...
[15:42:08] *** Quits: Feuermagier_ (~Feuermagi@154.28.188.151) (Client Quit)
[15:42:13] <albet70> composing functions
[15:42:53] <geekosaur> mm, that may mean it's as close as it gets then
[15:42:53] *** Joins: Feuermagier_ (~Feuermagi@154.28.188.151)
[15:43:18] <geekosaur> like I said, most languages aren't as polymorphic as Haskell is, the whole concept of "monad" is difficult for them
[15:43:19] <albet70> I saw some python code using >>, I was very curious it, because I know what it's doing in haskell, then I wonder why someone in python would use it
[15:43:40] *** Quits: Feuermagier_ (~Feuermagi@154.28.188.151) (Remote host closed the connection)
[15:43:40] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[15:43:52] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[15:44:22] <albet70> and then I read the code in python, it makes no sense
[15:44:54] <yushyin> maybe something similar in the future/promises api of python
[15:45:23] <albet70> so I wonder the author write that, it seems he/she knowing >> like haskell, but they implement it wrong
[15:45:42] <yushyin> https://docs.python.org/3/library/asyncio-future.html?#asyncio.Future.add_done_callback
[15:51:47] *** Quits: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk) (Remote host closed the connection)
[15:52:13] *** Joins: alzgh (~alzgh@user/alzgh)
[15:55:08] *** Joins: fef (~thedawn@user/thedawn)
[15:58:25] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:00:43] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Read error: Connection reset by peer)
[16:01:31] *** Quits: deadmarshal (~deadmarsh@95.38.116.117) (Ping timeout: 256 seconds)
[16:01:37] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[16:02:47] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Ping timeout: 264 seconds)
[16:08:09] *** Quits: rtsn (~nstr@c-c7fe225c.07-59-7570703.bbcust.telenor.se) (Ping timeout: 268 seconds)
[16:08:51] *** Joins: rtsn (~nstr@c-c7fe225c.07-59-7570703.bbcust.telenor.se)
[16:12:26] *** Quits: _ht (~quassel@82-169-194-8.biz.kpn.net) (Ping timeout: 260 seconds)
[16:12:37] *** Joins: _ht (~quassel@37.120.218.140)
[16:17:25] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:8ce9:9a4:40aa:9fe2)
[16:18:38] *** Quits: benin (~benin@183.82.178.244) (Ping timeout: 268 seconds)
[16:19:11] *** Joins: ThatLinuxGuy (~sand49@2001:8003:8431:d200:220b:84b2:a334:cbad)
[16:22:41] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:8ce9:9a4:40aa:9fe2) (Ping timeout: 265 seconds)
[16:24:08] *** Quits: MidAutumnMoon (~MidAutumn@user/midautumnmoon) (Quit: Leaving for a break - theLounge)
[16:24:40] *** Joins: MidAutumnMoon6 (~MidAutumn@user/midautumnmoon)
[16:24:45] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[16:24:53] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[16:25:09] *** Joins: acidjnk (~acidjnk@2001:16b8:6774:9a00:78e5:1df2:55f8:981b)
[16:25:12] *** Joins: benin (~benin@183.82.178.244)
[16:25:35] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[16:28:44] *** Joins: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk)
[16:30:58] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Quit: Leaving)
[16:31:32] *** Quits: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[16:32:32] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[16:33:44] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:34:12] <albet70> is >> related to . ?
[16:34:23] *** Quits: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk) (Ping timeout: 256 seconds)
[16:35:09] <albet70> when m~ r->, <$> equal to .
[16:35:34] <albet70> what about >> ?
[16:35:35] <geekosaur> you could say >>= is . on a higher level. Arrowes were intended to capture that abstraction but it never quite worked in practice
[16:35:54] <geekosaur> >> is just >>= discarding the input but keeping any effects
[16:36:02] <geekosaur> *Arrows
[16:36:31] *** Quits: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi) (Ping timeout: 268 seconds)
[16:37:27] <albet70> :t (>>)
[16:37:28] <lambdabot> Monad m => m a -> m b -> m b
[16:37:40] <albet70> :t (>>=)
[16:37:41] <lambdabot> Monad m => m a -> (a -> m b) -> m b
[16:38:13] <albet70> :t (.)
[16:38:14] <lambdabot> (b -> c) -> (a -> b) -> a -> c
[16:39:41] <geekosaur> % :t (>>) @((->) _) -- let's see if this works
[16:39:41] <yahb> geekosaur: (w -> a) -> (w -> b) -> w -> b
[16:40:14] <geekosaur> not quite the same, but you can see the similarity
[16:40:35] *** Quits: xff0x (~xff0x@2001:1a81:526f:1d00:936b:4a50:cc7a:54ee) (Ping timeout: 264 seconds)
[16:40:43] <albet70> "geekosaur :% :t (>>) @((->) _) -- let's see if this works", what this mean?
[16:40:55] <albet70> that @
[16:41:05] *** Joins: xff0x (~xff0x@2001:1a81:526f:1d00:2bb4:8855:a1a6:d69e)
[16:41:17] <geekosaur> it's a type application. I had to direct it to yahb because lambdabot doesn't understand type applications
[16:41:48] <geekosaur> so I in effect told it to expand the type of (>>) using ((->) r) (function application) as the monad
[16:42:32] <albet70> alright, when m~ (w->)
[16:43:25] <albet70> but >> is similarity to >>=, not (.)
[16:43:48] <albet70> (.) would be like (b -> c) -> m b -> m c
[16:44:08] <albet70> >> like m a -> m b -> m b
[16:44:44] <geekosaur> % :t (>>=) @((->) _)
[16:44:44] <yahb> geekosaur: (w -> a) -> (a -> w -> b) -> w -> b
[16:45:10] <geekosaur> this is closer to (.) but has that extra parameter in the middle
[16:45:25] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:8ce9:9a4:40aa:9fe2)
[16:45:47] <geekosaur> this is part of why Arrows never quite worked; there is a strong abstract similarity to (.) but not even Haskell can quite capture it
[16:46:35] <geekosaur> actually we have a sort-of way now via Control.Category, but I think that requires you understand some category theory to work with it
[16:46:52] <geekosaur> since it's modeling categories to capture the abstraction
[16:47:46] <albet70> "yahb :geekosaur: (w -> a) -> (a -> w -> b) -> w -> b", (b -> c) -> (a -> b) -> a -> c I don't see how this similarity
[16:48:13] <albet70> not just the extra parameter in the middle
[16:49:45] <albet70> when b~w, c~a, it would like (w->a) -> (x ->w) -> (x -> a)
[16:50:43] <geekosaur> right, it's thrown off because the ((->) r) monad always injects that extra "r" (we call it "r" by convention but yahb called it "w")
[16:51:12] <geekosaur> I used it because it comes closest to looking like (.) but the extra "w" complicates things
[16:53:40] <geekosaur> Arrows make things fit together more directly by wrapping Monad in Kleisli, but at the cost that you have to use `arr` which strongly limits its usefulness
[16:54:12] *** Joins: Guest17 (~Guest17@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[16:56:28] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[16:56:47] <geekosaur> and the problem with showing this is (.) has only one type fitting its "type schema" which is not *quite* the same as ((->) r), but Monad has many that fit; and it's not easy to see how the two relate without using some category theory
[16:56:52] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:8ce9:9a4:40aa:9fe2) (Ping timeout: 268 seconds)
[16:56:58] *** Joins: deadmarshal (~deadmarsh@95.38.116.117)
[16:57:15] <geekosaur> Control.Category defines its own version of (.) which makes it a bit clearer
[16:57:18] <geekosaur> hm
[16:57:31] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:45d3:5172:e85f:c128)
[16:57:45] <geekosaur> % :t (Control.Category..)
[16:57:45] <yahb> geekosaur: forall {k} {cat :: k -> k -> *} {b :: k} {c :: k} {a :: k}. Category cat => cat b c -> cat a b -> cat a c
[16:58:04] <geekosaur> clear as mud :(
[16:58:14] <hpc> just ignore everything before "."
[17:02:07] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[17:05:34] *** Quits: acidjnk (~acidjnk@2001:16b8:6774:9a00:78e5:1df2:55f8:981b) (Ping timeout: 260 seconds)
[17:10:52] *** Joins: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk)
[17:13:50] *** Joins: machinedgod (~machinedg@24.105.81.50)
[17:15:20] *** Joins: acidjnk (~acidjnk@2001:16b8:6774:9a00:78e5:1df2:55f8:981b)
[17:16:43] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[17:17:25] *** Quits: xff0x (~xff0x@2001:1a81:526f:1d00:2bb4:8855:a1a6:d69e) (Ping timeout: 250 seconds)
[17:18:16] *** Joins: xff0x (~xff0x@2001:1a81:526f:1d00:d375:c485:c62f:a6f6)
[17:22:15] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:7892:4ebf:89a7:d96) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:28:25] *** Joins: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi)
[17:30:27] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:36:59] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 264 seconds)
[17:38:19] *** Joins: mimmy_ (~mimmy@2607:fea8:6e0:7f90:2c71:f3a7:2628:f681)
[17:38:39] *** Joins: waleee (~waleee@h-82-196-111-63.NA.cust.bahnhof.se)
[17:41:17] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:45d3:5172:e85f:c128) (Ping timeout: 268 seconds)
[17:46:47] *** Joins: dawdler (~dawdler@user/dawdler)
[17:48:59] *** Quits: mimmy_ (~mimmy@2607:fea8:6e0:7f90:2c71:f3a7:2628:f681) (Ping timeout: 264 seconds)
[17:51:27] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[17:53:25] <hololeap> what would be an example of a profunctor in haskell that is not strong?
[17:54:15] *** Joins: mmhat (~mmh@55d438c0.access.ecotel.net)
[17:56:33] *** Quits: jassob1 (~jassob@h-98-128-167-112.NA.cust.bahnhof.se) (Ping timeout: 256 seconds)
[18:00:25] <xdej>  /9
[18:00:29] <xdej> sorry
[18:00:37] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[18:00:58] *** Joins: alzgh (~alzgh@user/alzgh)
[18:01:20] *** Quits: NinjaTrappeur (~ninja@user/ninjatrappeur) (Quit: WeeChat 3.3)
[18:02:00] <hololeap> from the looks of it, Op is a Category, but not an Arrow, so it would be a profunctor that is not strong, right?
[18:02:09] *** Joins: NinjaTrappeur (~ninja@user/ninjatrappeur)
[18:03:00] <hololeap> although it's probably costrong
[18:06:20] *** Joins: mimmy_ (~mimmy@2607:fea8:6e0:7f90:2c71:f3a7:2628:f681)
[18:06:48] *** Joins: pfurla (~pfurla@2804:14d:5c81:4104:d41b:9326:c4d8:9f2a)
[18:08:10] <hololeap> % unfirst (Op (f :: forall d. (b,d) -> (a,d))) = Op $ \b -> fst $ f (b,undefined)
[18:08:10] <yahb> hololeap: ; <interactive>:12:14: error:; * Couldn't match expected type: b -> a; with actual type: forall d. (b1, d) -> (a1, d); * When checking that the pattern signature: forall d. (b1, d) -> (a1, d); fits the type of its context: b -> a; In the pattern: f :: forall d. (b, d) -> (a, d); In the pattern: Op (f :: forall d. (b, d) -> (a, d)); * Relevant bindings incl
[18:09:20] *** Joins: jassob1 (~jassob@h-98-128-166-172.NA.cust.bahnhof.se)
[18:11:09] *** Quits: mimmy_ (~mimmy@2607:fea8:6e0:7f90:2c71:f3a7:2628:f681) (Ping timeout: 250 seconds)
[18:12:45] *** Quits: son0p (~ff@181.136.122.143) (Remote host closed the connection)
[18:13:57] <hololeap> % unfirst (Op (f :: (b,d) -> (a,d))) = Op $ \b -> fst $ f (b, undefined)
[18:13:57] <yahb> hololeap: 
[18:14:02] <hololeap> % :t unfirst
[18:14:02] <yahb> hololeap: Op (a, d) (b, d) -> Op a b
[18:14:08] <hololeap> so yeah, it's costrong
[18:17:10] <ProfSimm> Hey anyone here know physics theoreticians who wanna brainstorm about things with me?
[18:20:28] *** Joins: yauhsien (~yauhsien@118-167-40-224.dynamic-ip.hinet.net)
[18:21:22] *** Quits: deadmarshal (~deadmarsh@95.38.116.117) (Ping timeout: 268 seconds)
[18:21:41] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[18:21:44] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:b4a8:9431:5c1:c0e0)
[18:26:02] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:b4a8:9431:5c1:c0e0) (Ping timeout: 240 seconds)
[18:26:02] *** Quits: yauhsien (~yauhsien@118-167-40-224.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[18:26:35] *** Quits: ThatLinuxGuy (~sand49@2001:8003:8431:d200:220b:84b2:a334:cbad) (Quit: Konversation terminated!)
[18:27:47] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.3)
[18:28:01] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[18:34:18] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[18:35:49] *** Joins: unit73e (~emanuel@2001:818:e8dd:7c00:32b5:c2ff:fe6b:5291)
[18:37:53] *** Joins: _ht_ (~quassel@82-169-194-8.biz.kpn.net)
[18:38:00] *** Quits: _ht (~quassel@37.120.218.140) (Ping timeout: 268 seconds)
[18:42:39] *** Joins: max22- (~maxime@2a01cb0883359800ebf1dbb598d360cc.ipv6.abo.wanadoo.fr)
[18:46:33] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[18:55:16] <Hecate> :27
[18:55:18] <Hecate> eh
[18:57:29] *** Quits: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk) (Remote host closed the connection)
[18:57:56] *** Joins: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk)
[18:58:57] *** Joins: renzhi (~xp@2607:fa49:6500:b100::6e7f)
[18:59:02] *** Quits: acidjnk (~acidjnk@2001:16b8:6774:9a00:78e5:1df2:55f8:981b) (Ping timeout: 240 seconds)
[18:59:48] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[19:02:17] *** Quits: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk) (Ping timeout: 256 seconds)
[19:03:36] <jiribenes> hololeap: Tagged :: Type -> Type -> Type from `tagged` has a Profunctor instance but not a Strong instance in `profunctors`
[19:04:00] <jiribenes> (as far as I can tell)
[19:06:48] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:07:12] *** Joins: Vajb (~Vajb@nalkaylds2h97nzof-2.v6.elisa-mobile.fi)
[19:08:23] *** Joins: hololeap (~hololeap@user/hololeap)
[19:16:13] *** Joins: ees (~user@pool-108-18-30-46.washdc.fios.verizon.net)
[19:17:04] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:17:48] *** Joins: mimmy_ (~mimmy@2607:fea8:6e0:7f90:2c71:f3a7:2628:f681)
[19:18:43] *** Quits: Raito_Bezarius (~Raito@wireguard/tunneler/raito-bezarius) (Ping timeout: 268 seconds)
[19:19:25] *** Joins: whatsupdoc (uid509081@hampstead.irccloud.com)
[19:21:32] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 240 seconds)
[19:23:32] *** Quits: mimmy_ (~mimmy@2607:fea8:6e0:7f90:2c71:f3a7:2628:f681) (Ping timeout: 240 seconds)
[19:24:42] *** Joins: mimmy_ (~mimmy@2607:fea8:6e0:7f90:100e:941d:330:91e9)
[19:26:31] *** Quits: pfurla (~pfurla@2804:14d:5c81:4104:d41b:9326:c4d8:9f2a) (Quit: gone to sleep. ZZZzzz…)
[19:27:24] *** Quits: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8) (Remote host closed the connection)
[19:27:38] *** Quits: kupi (uid212005@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[19:28:43] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[19:30:07] *** Quits: dexmad[m] (~dexmadmat@2001:470:69fc:105::e056) (Quit: You have been kicked for being idle)
[19:30:19] *** Joins: Raito_Bezarius (~Raito@wireguard/tunneler/raito-bezarius)
[19:30:45] *** Joins: jgeerds (~jgeerds@55d45b75.access.ecotel.net)
[19:30:59] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 264 seconds)
[19:31:37] *** Quits: jgeerds (~jgeerds@55d45b75.access.ecotel.net) (Remote host closed the connection)
[19:33:31] *** Joins: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8)
[19:34:20] *** Joins: Lycurgus (~juan@98.4.112.204)
[19:36:37] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[19:37:53] *** Joins: hololeap (~hololeap@user/hololeap)
[19:38:24] *** Joins: Cajun (~Cajun@user/cajun)
[19:43:45] *** Quits: xff0x (~xff0x@2001:1a81:526f:1d00:d375:c485:c62f:a6f6) (Ping timeout: 265 seconds)
[19:46:47] *** Quits: ees (~user@pool-108-18-30-46.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[19:52:25] *** Quits: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8) (Remote host closed the connection)
[19:54:23] *** Quits: mimmy_ (~mimmy@2607:fea8:6e0:7f90:100e:941d:330:91e9) (Ping timeout: 265 seconds)
[19:57:48] *** Joins: mimmy_ (~mimmy@2607:fea8:6e0:7f90:100e:941d:330:91e9)
[19:58:11] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fabc-15.dhcp.inet.fi) (Ping timeout: 250 seconds)
[19:58:32] *** Joins: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8)
[20:01:28] <EvanR> would you say that in foldr the f happens first, and in foldl the recursion happens first
[20:01:42] <EvanR> and is this typical of right fold and left fold in general
[20:03:23] *** Quits: mimmy_ (~mimmy@2607:fea8:6e0:7f90:100e:941d:330:91e9) (Ping timeout: 264 seconds)
[20:05:52] *** Joins: xff0x (~xff0x@2001:1a81:526f:1d00:d375:c485:c62f:a6f6)
[20:10:22] *** Quits: ubert (~Thunderbi@p200300ecdf0ba2db387348ed975200f7.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[20:10:40] *** Joins: ubert (~Thunderbi@p548c9fcb.dip0.t-ipconnect.de)
[20:10:45] <Lycurgus> how is "recursion" different from "f"?
[20:12:46] *** Quits: mbuf (~Shakthi@223.178.74.138) (Quit: Leaving)
[20:15:27] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:b4a8:9431:5c1:c0e0)
[20:19:16] *** Joins: pfurla (~pfurla@2804:14d:5c81:4104:d09a:3c35:dab9:95ad)
[20:20:11] *** Joins: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk)
[20:23:17] *** Joins: yauhsien (~yauhsien@118-167-40-224.dynamic-ip.hinet.net)
[20:28:10] *** Quits: yauhsien (~yauhsien@118-167-40-224.dynamic-ip.hinet.net) (Ping timeout: 260 seconds)
[20:30:09] *** Quits: taktoa[c] (sid282096@tinside.irccloud.com) (Remote host closed the connection)
[20:30:09] *** Quits: glowcoil (sid3405@tinside.irccloud.com) (Remote host closed the connection)
[20:30:10] *** Quits: kristjansson_ (sid126207@tinside.irccloud.com) (Remote host closed the connection)
[20:30:10] *** Quits: hongminhee (sid295@tinside.irccloud.com) (Remote host closed the connection)
[20:30:10] *** Quits: sa (sid1055@tinside.irccloud.com) (Remote host closed the connection)
[20:30:10] *** Quits: agander_m (sid407952@tinside.irccloud.com) (Remote host closed the connection)
[20:30:10] *** Quits: jackdk (sid373013@cssa/jackdk) (Remote host closed the connection)
[20:30:10] *** Quits: bbhoss (sid18216@tinside.irccloud.com) (Remote host closed the connection)
[20:30:10] *** Quits: typetetris (sid275937@tinside.irccloud.com) (Remote host closed the connection)
[20:30:10] *** Quits: jmct_ (sid160793@tinside.irccloud.com) (Remote host closed the connection)
[20:30:10] *** Quits: hubvu (sid495858@user/hubvu) (Remote host closed the connection)
[20:30:10] *** Quits: _0x47 (sid508683@tinside.irccloud.com) (Remote host closed the connection)
[20:30:38] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:30:45] *** Joins: mimmy_ (~mimmy@2607:fea8:6e0:7f90:100e:941d:330:91e9)
[20:34:17] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[20:36:02] *** Quits: mimmy_ (~mimmy@2607:fea8:6e0:7f90:100e:941d:330:91e9) (Ping timeout: 260 seconds)
[20:37:24] *** Quits: S11001001 (sid42510@ilkley.irccloud.com) (Remote host closed the connection)
[20:37:24] *** Quits: ysh (sid6017@ilkley.irccloud.com) (Remote host closed the connection)
[20:37:24] *** Quits: cln (sid336875@ilkley.irccloud.com) (Remote host closed the connection)
[20:37:25] *** Quits: mrianbloom (sid350277@ilkley.irccloud.com) (Remote host closed the connection)
[20:37:25] *** Quits: tapas (sid467876@ilkley.irccloud.com) (Remote host closed the connection)
[20:37:25] *** Quits: edwardk (sid47016@haskell/developer/edwardk) (Remote host closed the connection)
[20:37:25] *** Quits: ProofTechnique (sid79547@ilkley.irccloud.com) (Remote host closed the connection)
[20:37:25] *** Quits: bw (sid2730@user/betawaffle) (Remote host closed the connection)
[20:37:25] *** Quits: gmc (sid58314@ilkley.irccloud.com) (Remote host closed the connection)
[20:37:25] *** Quits: jonrh (sid5185@ilkley.irccloud.com) (Remote host closed the connection)
[20:37:25] *** Quits: supersven (sid501114@ilkley.irccloud.com) (Remote host closed the connection)
[20:37:25] *** Quits: pepeiborra (sid443799@ilkley.irccloud.com) (Remote host closed the connection)
[20:37:25] *** Quits: hook54321 (sid149355@user/hook54321) (Remote host closed the connection)
[20:37:25] *** Quits: SethTisue__ (sid14912@ilkley.irccloud.com) (Remote host closed the connection)
[20:37:25] *** Quits: angerman (sid209936@ilkley.irccloud.com) (Remote host closed the connection)
[20:37:25] *** Quits: rune (sid21167@ilkley.irccloud.com) (Remote host closed the connection)
[20:37:25] *** Quits: caasih (sid13241@ilkley.irccloud.com) (Remote host closed the connection)
[20:37:25] *** Quits: rtpg (sid443069@ilkley.irccloud.com) (Remote host closed the connection)
[20:37:25] *** Quits: sa1_ (sid7690@ilkley.irccloud.com) (Remote host closed the connection)
[20:38:09] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[20:41:51] *** Quits: SrPx (sid108780@uxbridge.irccloud.com) (Remote host closed the connection)
[20:41:51] *** Quits: AndreasK__ (sid320732@uxbridge.irccloud.com) (Remote host closed the connection)
[20:41:51] *** Quits: alanz (sid110616@uxbridge.irccloud.com) (Remote host closed the connection)
[20:41:51] *** Quits: aristid (sid1599@uxbridge.irccloud.com) (Remote host closed the connection)
[20:41:51] *** Quits: systemfault (sid267009@uxbridge.irccloud.com) (Remote host closed the connection)
[20:41:51] *** Quits: vito (sid1962@user/vito) (Remote host closed the connection)
[20:41:51] *** Quits: aarchi (sid486183@uxbridge.irccloud.com) (Remote host closed the connection)
[20:41:51] *** Quits: davetapley (sid666@uxbridge.irccloud.com) (Remote host closed the connection)
[20:41:51] *** Quits: obviyus (sid415299@user/obviyus) (Remote host closed the connection)
[20:41:51] *** Quits: b20n (sid115913@uxbridge.irccloud.com) (Remote host closed the connection)
[20:41:51] *** Quits: bradparker (sid262931@uxbridge.irccloud.com) (Remote host closed the connection)
[20:41:51] *** Quits: T_S_ (sid501726@uxbridge.irccloud.com) (Remote host closed the connection)
[20:41:51] *** Quits: eruditass (uid248673@uxbridge.irccloud.com) (Remote host closed the connection)
[20:42:04] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[20:42:45] <dsal> dante stopped working for me a while ago and I just finally got around to looking into the issue.  It's trying to run some kind of pure nix shell to run a cabal repl or something that was just not going to happen.  I told it to run `nix-shell -p stack --run 'stack ghci'` and suddenly everything works again.
[20:43:11] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 268 seconds)
[20:43:24] *** Lord_of_Life_ is now known as Lord_of_Life
[20:45:59] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[20:48:23] *** Quits: gregberns__ (sid315709@helmsley.irccloud.com) (Ping timeout: 246 seconds)
[20:48:23] *** Quits: kaizen (sid501599@helmsley.irccloud.com) (Ping timeout: 246 seconds)
[20:48:39] *** Quits: elvishjerricco (sid237756@helmsley.irccloud.com) (Ping timeout: 250 seconds)
[20:48:39] *** Quits: truckasaurus (sid457088@helmsley.irccloud.com) (Ping timeout: 250 seconds)
[20:48:40] *** Quits: NiKaN (sid385034@helmsley.irccloud.com) (Ping timeout: 250 seconds)
[20:48:44] *** Quits: carter (sid14827@helmsley.irccloud.com) (Ping timeout: 246 seconds)
[20:48:52] *** Quits: edmundnoble (sid229620@helmsley.irccloud.com) (Ping timeout: 260 seconds)
[20:48:52] *** Quits: bjs (sid190364@user/bjs) (Ping timeout: 260 seconds)
[20:48:52] *** Quits: grfn (sid449115@helmsley.irccloud.com) (Ping timeout: 260 seconds)
[20:49:02] *** Quits: lightandlight (sid135476@helmsley.irccloud.com) (Ping timeout: 240 seconds)
[20:49:02] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:b4a8:9431:5c1:c0e0) (Remote host closed the connection)
[20:49:14] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:14a5:84da:2caa:2854)
[20:49:20] *** Quits: gaze___ (sid387101@helmsley.irccloud.com) (Ping timeout: 260 seconds)
[20:49:20] *** Quits: dpratt__ (sid193493@helmsley.irccloud.com) (Ping timeout: 260 seconds)
[20:49:26] *** Quits: cbarrett (sid192934@helmsley.irccloud.com) (Ping timeout: 246 seconds)
[20:49:26] *** Quits: scav (sid309693@helmsley.irccloud.com) (Ping timeout: 246 seconds)
[20:49:26] *** Quits: parseval (sid239098@helmsley.irccloud.com) (Ping timeout: 246 seconds)
[20:49:26] *** Quits: mcfilib (sid302703@user/mcfilib) (Ping timeout: 246 seconds)
[20:49:32] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[20:49:58] *** Quits: conjunctive (sid433686@helmsley.irccloud.com) (Ping timeout: 250 seconds)
[20:49:58] *** Quits: alinab (sid468903@helmsley.irccloud.com) (Ping timeout: 250 seconds)
[20:50:08] *** Quits: tnks (sid412124@helmsley.irccloud.com) (Ping timeout: 246 seconds)
[20:51:32] *** Quits: Firedancer (sid336191@hampstead.irccloud.com) (Ping timeout: 246 seconds)
[20:51:32] *** Quits: acertain (sid470584@hampstead.irccloud.com) (Ping timeout: 246 seconds)
[20:51:32] *** Quits: joel135 (sid136450@hampstead.irccloud.com) (Ping timeout: 246 seconds)
[20:51:41] *** Quits: dmj` (sid72307@hampstead.irccloud.com) (Ping timeout: 250 seconds)
[20:51:53] *** Quits: SanchayanMaity (sid478177@hampstead.irccloud.com) (Ping timeout: 246 seconds)
[20:51:53] *** Quits: rubin55 (sid175221@hampstead.irccloud.com) (Ping timeout: 246 seconds)
[20:51:58] *** Quits: jakesyl_ (sid56879@hampstead.irccloud.com) (Ping timeout: 260 seconds)
[20:52:04] *** Parts: edrx (~Eduardo@2804:56c:d2d0:b400:6e3c:c666:9c9c:53ff) (Killed buffer)
[20:52:07] *** Quits: ehamberg (sid18208@hampstead.irccloud.com) (Ping timeout: 250 seconds)
[20:52:08] *** Quits: tritlo (sid58727@user/tritlo) (Ping timeout: 250 seconds)
[20:52:08] *** Quits: amir (sid22336@user/amir) (Ping timeout: 250 seconds)
[20:52:33] *** Quits: iphy (sid67735@lymington.irccloud.com) (Ping timeout: 250 seconds)
[20:52:34] *** Quits: Boarders_ (sid425905@lymington.irccloud.com) (Ping timeout: 250 seconds)
[20:52:34] *** Quits: mustafa (sid502723@rockylinux/releng/mustafa) (Ping timeout: 250 seconds)
[20:52:47] *** Quits: whatsupdoc (uid509081@hampstead.irccloud.com) (Ping timeout: 256 seconds)
[20:53:00] *** Quits: integral (sid296274@user/integral) (Ping timeout: 250 seconds)
[20:53:00] *** Quits: pjlsergeant (sid143467@hampstead.irccloud.com) (Ping timeout: 250 seconds)
[20:53:04] *** Quits: aria (sid380617@lymington.irccloud.com) (Ping timeout: 260 seconds)
[20:53:04] *** Quits: teehemkay (sid14792@lymington.irccloud.com) (Ping timeout: 268 seconds)
[20:53:11] *** Quits: linkedlistist (uid528169@lymington.irccloud.com) (Ping timeout: 264 seconds)
[20:53:17] *** Quits: philpax_ (sid516926@lymington.irccloud.com) (Ping timeout: 246 seconds)
[20:53:22] *** Quits: saolsen (sid26430@lymington.irccloud.com) (Ping timeout: 260 seconds)
[20:53:25] *** Quits: JSharp (sid4580@lymington.irccloud.com) (Ping timeout: 250 seconds)
[20:53:32] *** Quits: awpr (uid446117@lymington.irccloud.com) (Ping timeout: 260 seconds)
[20:53:32] *** Quits: enemeth79 (sid309041@lymington.irccloud.com) (Ping timeout: 260 seconds)
[20:53:32] *** Quits: sclv (sid39734@haskell/developer/sclv) (Ping timeout: 260 seconds)
[20:53:32] *** Quits: teehemkay_ (sid14792@lymington.irccloud.com) (Ping timeout: 260 seconds)
[20:53:38] *** Quits: nrr__ (sid20938@lymington.irccloud.com) (Ping timeout: 246 seconds)
[20:53:38] *** Quits: NemesisD (sid24071@lymington.irccloud.com) (Ping timeout: 246 seconds)
[20:53:38] *** Quits: Adeon (sid418992@lymington.irccloud.com) (Ping timeout: 246 seconds)
[20:53:38] *** Quits: christiaanb (sid84827@lymington.irccloud.com) (Ping timeout: 246 seconds)
[20:53:38] *** Quits: dsal (sid13060@lymington.irccloud.com) (Ping timeout: 246 seconds)
[20:53:50] *** Quits: astra` (sid289983@user/amish) (Ping timeout: 260 seconds)
[20:53:50] *** Quits: degraafk (sid71464@lymington.irccloud.com) (Ping timeout: 260 seconds)
[20:53:50] *** Quits: hamishmack (sid389057@hampstead.irccloud.com) (Ping timeout: 260 seconds)
[20:54:00] *** Quits: ephemient (uid407513@lymington.irccloud.com) (Ping timeout: 260 seconds)
[20:54:17] *** Quits: PotatoGim (sid99505@lymington.irccloud.com) (Ping timeout: 250 seconds)
[20:54:20] *** Quits: whez (sid470288@lymington.irccloud.com) (Ping timeout: 246 seconds)
[20:54:20] *** Quits: Pent (sid313808@lymington.irccloud.com) (Ping timeout: 246 seconds)
[20:54:28] *** Quits: gonz____ (sid304396@lymington.irccloud.com) (Ping timeout: 260 seconds)
[20:54:46] *** Quits: idnar (sid12240@debian/mithrandi) (Ping timeout: 260 seconds)
[20:54:46] *** Quits: hendi (sid489601@lymington.irccloud.com) (Ping timeout: 260 seconds)
[20:55:53] *** Quits: TimWolla (~timwolla@2a01:4f8:150:6153:beef::6667) (Quit: Bye)
[20:59:27] *** Joins: mimmy_ (~mimmy@2607:fea8:6e0:7f90:100e:941d:330:91e9)
[21:00:46] *** Joins: TimWolla (~timwolla@2a01:4f8:150:6153:beef::6667)
[21:02:01] <Sqaure> I wonder if theres commonly used i18n library for haskell. Id be fine with a key-value with some sort of replacement mechanism for parameterized strings (that allows a replacement mechanism)?  
[21:03:34] *** Quits: hiruji (~hiruji@user/hiruji) (Ping timeout: 260 seconds)
[21:04:15] *** Quits: mimmy_ (~mimmy@2607:fea8:6e0:7f90:100e:941d:330:91e9) (Ping timeout: 250 seconds)
[21:04:41] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[21:05:09] *** Joins: shapr (~user@pool-100-36-247-68.washdc.fios.verizon.net)
[21:06:15] *** Joins: tzh (~tzh@c-24-21-73-154.hsd1.or.comcast.net)
[21:07:01] *** Parts: jakalx (~jakalx@base.jakalx.net) (Error from remote client)
[21:11:50] *** Quits: pfurla (~pfurla@2804:14d:5c81:4104:d09a:3c35:dab9:95ad) (Quit: gone to sleep. ZZZzzz…)
[21:11:54] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[21:12:31] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[21:14:03] <sm> there's something in the shakespeare family of packages
[21:14:11] *** Quits: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 264 seconds)
[21:14:13] <sm> and an i18n section on hackage I believe
[21:14:37] *** Joins: myShoggoth (~myShoggot@97-120-85-195.ptld.qwest.net)
[21:15:04] <sshine> The i18n packages was unfortunately last released in 2016.
[21:17:43] <sshine> Sqaure, there's a section on i18n in the Yesod book. https://www.yesodweb.com/book/internationalization -- but it seems like they didn't pick language-agnostic standards like gettext.
[21:18:23] <sm> oh wow, people are really not using the https://hackage.haskell.org/packages/#cat:I18n category 
[21:18:49] *** Joins: jakalx (~jakalx@base.jakalx.net)
[21:18:50] <Sqaure> I checked out shakespear and i18. I felt the former had too many dependencies. The latter seemed a bit too specialized
[21:19:21] <Sqaure> ...and had no built in replacement. 
[21:19:33] *** Joins: malc (~malc@2a00:1370:8117:7bb5:31d2:4ba8:5ed4:b0d0)
[21:19:51] *** Parts: malc (~malc@2a00:1370:8117:7bb5:31d2:4ba8:5ed4:b0d0) (ERC (IRC client for Emacs 28.0.50))
[21:19:52] <sm> hgettext ?
[21:19:53] <sshine> I guess the i18n package is a standard wrapper around gettext .po files. that's pretty neat, no?
[21:20:26] *** Joins: deadmarshal (~deadmarsh@95.38.116.117)
[21:20:41] <Sqaure> i guess i can work around it
[21:21:58] <hololeap> it looks like pandoc rolled their own as well: https://github.com/jgm/pandoc/blob/master/src/Text/Pandoc/Translations.hs
[21:23:26] <maerwald> pretty basic
[21:23:48] *** Joins: hiruji (~hiruji@user/hiruji)
[21:26:19] *** Joins: mimmy_ (~mimmy@2607:fea8:6e0:7f90:100e:941d:330:91e9)
[21:31:20] *** Quits: mimmy_ (~mimmy@2607:fea8:6e0:7f90:100e:941d:330:91e9) (Ping timeout: 260 seconds)
[21:38:34] *** Quits: xsperry (~xs@cpe-188-129-101-182.dynamic.amis.hr) (Ping timeout: 260 seconds)
[21:49:31] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:b4a8:9431:5c1:c0e0)
[21:49:35] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 264 seconds)
[21:51:38] *** Quits: renzhi (~xp@2607:fa49:6500:b100::6e7f) (Ping timeout: 268 seconds)
[21:53:50] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:b4a8:9431:5c1:c0e0) (Ping timeout: 246 seconds)
[21:56:27] *** Joins: mimmy_ (~mimmy@2607:fea8:6e0:7f90:100e:941d:330:91e9)
[21:59:38] *** Joins: yauhsien (~yauhsien@118-167-40-224.dynamic-ip.hinet.net)
[22:00:30] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[22:01:01] *** Quits: mimmy_ (~mimmy@2607:fea8:6e0:7f90:100e:941d:330:91e9) (Ping timeout: 250 seconds)
[22:01:17] *** Quits: unit73e (~emanuel@2001:818:e8dd:7c00:32b5:c2ff:fe6b:5291) (Quit: Leaving)
[22:02:34] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[22:03:57] *** Quits: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk) (Remote host closed the connection)
[22:04:09] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[22:04:18] *** Quits: yauhsien (~yauhsien@118-167-40-224.dynamic-ip.hinet.net) (Ping timeout: 260 seconds)
[22:10:03] *** Joins: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net)
[22:11:03] <EvanR> is there a name for this pattern: your monad code is polymorphic in the monad but includes a subclass monad constraint to provide "API calls"
[22:12:01] <EvanR> or this one: your code is in some custom monad, but is parameterized by an known monad m and there is a record of m actions in the context
[22:12:12] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[22:12:37] <EvanR> (I see these accomplish very similar things)
[22:12:41] *** Quits: Successus (~Successus@gateway/tor-sasl/successus) ()
[22:13:10] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[22:13:31] <EvanR> I've only ever seen it referred to by these long winded explanations xD
[22:14:05] *** Joins: jonrh (sid5185@id-5185.ilkley.irccloud.com)
[22:14:07] *** Joins: bw (sid2730@user/betawaffle)
[22:14:14] *** Joins: ysh (sid6017@id-6017.ilkley.irccloud.com)
[22:14:29] *** Joins: sa1_ (sid7690@id-7690.ilkley.irccloud.com)
[22:14:42] *** Joins: caasih (sid13241@id-13241.ilkley.irccloud.com)
[22:14:44] *** Joins: y04nn (~y04nn@92.223.89.196)
[22:14:46] *** Joins: SethTisue__ (sid14912@id-14912.ilkley.irccloud.com)
[22:14:54] *** Joins: rune (sid21167@id-21167.ilkley.irccloud.com)
[22:15:00] *** Lord_of_Life_ is now known as Lord_of_Life
[22:15:30] *** Quits: Guest17 (~Guest17@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Quit: Client closed)
[22:18:40] *** Joins: bw__ (sid2730@user/betawaffle)
[22:18:40] *** Joins: jonrh_ (sid5185@id-5185.ilkley.irccloud.com)
[22:18:47] *** Quits: jonrh (sid5185@id-5185.ilkley.irccloud.com) (Ping timeout: 250 seconds)
[22:19:02] *** Quits: caasih (sid13241@id-13241.ilkley.irccloud.com) (Ping timeout: 246 seconds)
[22:19:02] *** Quits: sa1_ (sid7690@id-7690.ilkley.irccloud.com) (Ping timeout: 246 seconds)
[22:19:02] *** Quits: bw (sid2730@user/betawaffle) (Ping timeout: 246 seconds)
[22:19:13] *** Quits: SethTisue__ (sid14912@id-14912.ilkley.irccloud.com) (Ping timeout: 250 seconds)
[22:19:24] *** Quits: rune (sid21167@id-21167.ilkley.irccloud.com) (Ping timeout: 260 seconds)
[22:19:24] *** Quits: ysh (sid6017@id-6017.ilkley.irccloud.com) (Ping timeout: 260 seconds)
[22:20:13] *** Joins: davetapley (sid666@id-666.uxbridge.irccloud.com)
[22:20:31] *** Joins: aristid (sid1599@id-1599.uxbridge.irccloud.com)
[22:20:35] *** Joins: vito (sid1962@user/vito)
[22:21:06] *** Joins: alanz (sid110616@id-110616.uxbridge.irccloud.com)
[22:21:12] *** Joins: SrPx (sid108780@id-108780.uxbridge.irccloud.com)
[22:21:15] *** Joins: b20n (sid115913@id-115913.uxbridge.irccloud.com)
[22:22:53] *** Quits: jonrh_ (sid5185@id-5185.ilkley.irccloud.com) (Ping timeout: 246 seconds)
[22:23:03] *** Joins: bradparker (sid262931@id-262931.uxbridge.irccloud.com)
[22:23:06] *** Joins: systemfault (sid267009@id-267009.uxbridge.irccloud.com)
[22:23:07] *** Quits: bw__ (sid2730@user/betawaffle) (Ping timeout: 250 seconds)
[22:23:08] *** Quits: myShoggoth (~myShoggot@97-120-85-195.ptld.qwest.net) (Ping timeout: 260 seconds)
[22:23:37] *** Joins: jonrh_ (sid5185@id-5185.ilkley.irccloud.com)
[22:23:47] *** Joins: bw__ (sid2730@id-2730.ilkley.irccloud.com)
[22:23:47] *** Joins: ysh (sid6017@id-6017.ilkley.irccloud.com)
[22:24:01] *** Joins: sa1_ (sid7690@id-7690.ilkley.irccloud.com)
[22:24:15] *** Joins: caasih (sid13241@id-13241.ilkley.irccloud.com)
[22:24:18] *** Joins: SethTisue__ (sid14912@id-14912.ilkley.irccloud.com)
[22:24:21] *** Joins: obviyus (sid415299@user/obviyus)
[22:24:22] *** Quits: alx741 (~alx741@186.178.108.219) (Ping timeout: 260 seconds)
[22:24:24] *** Joins: rune (sid21167@id-21167.ilkley.irccloud.com)
[22:24:54] *** Joins: aarchi (sid486183@id-486183.uxbridge.irccloud.com)
[22:25:01] *** Joins: S11001001 (sid42510@id-42510.ilkley.irccloud.com)
[22:25:10] *** Joins: edwardk (sid47016@haskell/developer/edwardk)
[22:25:11] *** Joins: T_S_ (sid501726@id-501726.uxbridge.irccloud.com)
[22:25:23] *** Joins: myShoggoth (~myShoggot@97-120-85-195.ptld.qwest.net)
[22:25:27] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Quit: Leaving)
[22:25:28] *** Joins: gmc_ (sid58314@id-58314.ilkley.irccloud.com)
[22:25:48] *** Joins: ProofTechnique (sid79547@id-79547.ilkley.irccloud.com)
[22:26:18] <sshine> EvanR, if I understand correctly, what you're describing are similar to what Matt Parsons calls "capabilities" here: https://www.parsonsmatt.org/2018/03/22/three_layer_haskell_cake.html -- or?
[22:26:47] *** Joins: angerman (sid209936@id-209936.ilkley.irccloud.com)
[22:26:47] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[22:26:49] *** Joins: alx741 (~alx741@186.178.108.219)
[22:27:27] *** Joins: AndreasK__ (sid320732@id-320732.uxbridge.irccloud.com)
[22:27:32] *** Joins: hook54321 (sid149355@user/hook54321)
[22:27:34] *** Joins: carter (sid14827@id-14827.helmsley.irccloud.com)
[22:27:39] *** Joins: xkuru (~xkuru@user/xkuru)
[22:27:45] *** Joins: eruditass (uid248673@id-248673.uxbridge.irccloud.com)
[22:27:49] *** Joins: cln (sid336875@id-336875.ilkley.irccloud.com)
[22:28:00] *** Joins: mrianbloom (sid350277@id-350277.ilkley.irccloud.com)
[22:28:03] *** Joins: lightandlight (sid135476@id-135476.helmsley.irccloud.com)
[22:28:24] *** Joins: bjs (sid190364@user/bjs)
[22:28:25] *** Joins: cbarrett (sid192934@id-192934.helmsley.irccloud.com)
[22:28:30] *** Joins: dpratt__ (sid193493@id-193493.helmsley.irccloud.com)
[22:28:34] *** Joins: rtpg (sid443069@id-443069.ilkley.irccloud.com)
[22:28:34] *** Joins: pepeiborra (sid443799@id-443799.ilkley.irccloud.com)
[22:28:46] *** Joins: tapas (sid467876@id-467876.ilkley.irccloud.com)
[22:28:54] *** Joins: edmundnoble (sid229620@id-229620.helmsley.irccloud.com)
[22:29:11] *** Joins: elvishjerricco (sid237756@id-237756.helmsley.irccloud.com)
[22:29:12] *** Joins: parseval (sid239098@id-239098.helmsley.irccloud.com)
[22:29:18] <sshine> EvanR, or rather, that's one way to parameterise your monad over certain things... https://github.com/parsonsmatt/cardano-sl/blob/10e55bde9a5c0d9d28bca25950a8811407c5fc8c/docs/monads.md#the-has-constraints -- but I've seen other, simpler approaches related to free effect systems where you have simpler Has* classes.
[22:29:42] <sshine> EvanR, I was gonna call that "has-style" type classes. but I can't find a reference to anyone calling them that. I'm sure I didn't come up with it, though.
[22:30:38] *** Joins: mcfilib (sid302703@user/mcfilib)
[22:30:48] *** Joins: lavaman (~lavaman@98.38.249.169)
[22:31:02] *** Joins: gregberns__ (sid315709@id-315709.helmsley.irccloud.com)
[22:31:45] *** Joins: gaze___ (sid387101@id-387101.helmsley.irccloud.com)
[22:32:11] *** Joins: tnks (sid412124@id-412124.helmsley.irccloud.com)
[22:32:13] *** Joins: NiKaN (sid385034@id-385034.helmsley.irccloud.com)
[22:32:23] *** Joins: conjunctive (sid433686@id-433686.helmsley.irccloud.com)
[22:32:35] *** Joins: grfn (sid449115@id-449115.helmsley.irccloud.com)
[22:32:38] *** Joins: truckasaurus (sid457088@id-457088.helmsley.irccloud.com)
[22:32:42] *** Joins: alinab (sid468903@id-468903.helmsley.irccloud.com)
[22:33:10] *** Joins: kaizen (sid501599@id-501599.helmsley.irccloud.com)
[22:34:08] *** Joins: supersven (sid501114@id-501114.ilkley.irccloud.com)
[22:34:10] *** Joins: ehamberg (sid18208@id-18208.hampstead.irccloud.com)
[22:34:23] *** Joins: JSharp (sid4580@id-4580.lymington.irccloud.com)
[22:34:23] *** Joins: amir (sid22336@user/amir)
[22:34:35] *** Joins: idnar (sid12240@debian/mithrandi)
[22:34:38] *** Joins: dsal (sid13060@id-13060.lymington.irccloud.com)
[22:34:39] *** Joins: tritlo (sid58727@user/tritlo)
[22:34:44] *** Joins: teehemkay (sid14792@id-14792.lymington.irccloud.com)
[22:34:45] *** Joins: teehemkay_ (sid14792@id-14792.lymington.irccloud.com)
[22:34:54] *** Joins: dmj` (sid72307@id-72307.hampstead.irccloud.com)
[22:35:00] *** Joins: jakesyl_ (sid56879@id-56879.hampstead.irccloud.com)
[22:35:03] *** Joins: NemesisD (sid24071@id-24071.lymington.irccloud.com)
[22:35:08] *** Joins: saolsen (sid26430@id-26430.lymington.irccloud.com)
[22:35:09] *** Joins: nrr__ (sid20938@id-20938.lymington.irccloud.com)
[22:35:25] <EvanR> heh.... nice post. I'm not sure what capability refers to there. At the end they give up and call the three layers imperative, object oriented, and functional xD
[22:35:30] *** Joins: joel135 (sid136450@id-136450.hampstead.irccloud.com)
[22:35:36] *** Joins: sclv (sid39734@haskell/developer/sclv)
[22:35:39] *** Joins: pjlsergeant (sid143467@id-143467.hampstead.irccloud.com)
[22:35:44] <EvanR> but they are covering what I'm talking about basically
[22:35:56] *** Joins: iphy (sid67735@id-67735.lymington.irccloud.com)
[22:36:00] *** Joins: degraafk (sid71464@id-71464.lymington.irccloud.com)
[22:36:18] *** Joins: christiaanb (sid84827@id-84827.lymington.irccloud.com)
[22:36:19] *** Joins: hongminhee (sid295@id-295.tinside.irccloud.com)
[22:36:21] *** Joins: bbooth (~bbooth@bam.lbl.gov)
[22:36:31] *** Joins: rubin55 (sid175221@id-175221.hampstead.irccloud.com)
[22:36:32] *** Joins: glowcoil (sid3405@id-3405.tinside.irccloud.com)
[22:36:33] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[22:36:42] *** Joins: PotatoGim (sid99505@id-99505.lymington.irccloud.com)
[22:36:48] *** Joins: bbhoss (sid18216@id-18216.tinside.irccloud.com)
[22:36:59] *** Joins: scav (sid309693@id-309693.helmsley.irccloud.com)
[22:37:06] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[22:37:21] *** Quits: bbooth (~bbooth@bam.lbl.gov) (Client Quit)
[22:37:52] *** Joins: astra` (sid289983@user/amish)
[22:37:55] *** Joins: integral (sid296274@user/integral)
[22:38:12] *** Joins: gonz____ (sid304396@id-304396.lymington.irccloud.com)
[22:38:20] *** Joins: Firedancer (sid336191@id-336191.hampstead.irccloud.com)
[22:38:30] *** Joins: kristjansson_ (sid126207@id-126207.tinside.irccloud.com)
[22:38:51] *** Joins: hamishmack (sid389057@id-389057.hampstead.irccloud.com)
[22:38:58] *** Joins: jmct_ (sid160793@id-160793.tinside.irccloud.com)
[22:38:59] *** Joins: aria (sid380617@id-380617.lymington.irccloud.com)
[22:39:19] <[exa]> EvanR: re first one if you say "mtl-like HasMonads" everyone will know :] the second is much closer to actual effect systems and interpreters, perhaps some naming from the effect packages would fit
[22:39:24] *** Joins: Adeon_ (sid418992@id-418992.lymington.irccloud.com)
[22:39:28] *** Joins: acertain (sid470584@id-470584.hampstead.irccloud.com)
[22:39:31] *** Joins: SanchayanMaity (sid478177@id-478177.hampstead.irccloud.com)
[22:39:40] *** Joins: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk)
[22:39:54] *** Joins: Boarders_ (sid425905@id-425905.lymington.irccloud.com)
[22:39:55] *** Joins: mustafa (sid502723@rockylinux/releng/mustafa)
[22:39:56] *** Joins: taktoa[c] (sid282096@id-282096.tinside.irccloud.com)
[22:40:00] *** Adeon_ is now known as Adeon
[22:40:19] *** Joins: hendi (sid489601@id-489601.lymington.irccloud.com)
[22:40:38] *** Joins: philpax_ (sid516926@id-516926.lymington.irccloud.com)
[22:40:43] <EvanR> mtl-like is like class Monad m => MonadCoolThing m where ?
[22:40:55] *** Joins: shdw (~shdw@23-233-101-24.cpe.pppoe.ca)
[22:41:07] *** Joins: burnside_ (~burnsides@dhcp168-012.wadham.ox.ac.uk)
[22:41:13] *** Quits: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk) (Remote host closed the connection)
[22:43:18] <[exa]> yes, MonadState MonadReader MonadWhatever
[22:43:37] *** Joins: typetetris (sid275937@id-275937.tinside.irccloud.com)
[22:43:39] *** Joins: enemeth79 (sid309041@id-309041.lymington.irccloud.com)
[22:43:53] *** Joins: Pent (sid313808@id-313808.lymington.irccloud.com)
[22:44:10] <EvanR> is that naming scheme really common or is there something less Monady xD
[22:44:27] *** Joins: jackdk (sid373013@cssa/jackdk)
[22:44:37] *** Joins: agander_m (sid407952@id-407952.tinside.irccloud.com)
[22:44:54] *** Joins: ephemient (uid407513@id-407513.lymington.irccloud.com)
[22:45:11] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[22:45:20] <[exa]> not sure, AFAIK everyone who goes with typeclasses just goes with that
[22:45:20] *** Joins: hubvu (sid495858@user/hubvu)
[22:45:43] *** Joins: awpr (uid446117@id-446117.lymington.irccloud.com)
[22:45:44] *** Joins: _0x47 (sid508683@id-508683.tinside.irccloud.com)
[22:46:07] *** Quits: arahael (~arahael@14-203-84-159.static.tpgi.com.au) (Ping timeout: 256 seconds)
[22:46:15] *** Joins: whez (sid470288@id-470288.lymington.irccloud.com)
[22:49:04] *** Joins: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263)
[22:49:26] *** Joins: linkedlistist (uid528169@id-528169.lymington.irccloud.com)
[22:53:28] *** Quits: deadmarshal (~deadmarsh@95.38.116.117) (Ping timeout: 260 seconds)
[22:56:02] *** Joins: euouae (~euouae@user/euouae)
[22:56:11] <sshine> EvanR, yeah so I think you can discuss granularity here. "has-style" could also be finer, e.g. HasLog, HasDatabase. and the particular example from cardano-sl was one degree more parameterised, e.g. Has LoggingParams. but here's a similar approach with GADTs: https://github.com/hasura/eff#eff-in-action
[22:58:41] <EvanR> oh, here Effect is a datakind? 
[22:59:20] <EvanR> hmm no
[22:59:55] <EvanR> the m out of nowhere in Filesystem is weird
[23:01:17] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:02:12] <sshine> hmm, yeah.
[23:02:42] <sshine> I'm not sure about that, either.
[23:03:29] <[exa]> freer? (there the "logging" of actions is the default though)
[23:04:38] *** Joins: mimmy_ (~mimmy@2607:fea8:6e0:7f90:100e:941d:330:91e9)
[23:05:42] *** Quits: shailangsa (~shailangs@host86-185-98-19.range86-185.btcentralplus.com) (Remote host closed the connection)
[23:07:07] *** Quits: jjhoo (~jahakala@user/jjhoo) (Remote host closed the connection)
[23:07:07] *** Joins: pfurla (~pfurla@2804:14d:5c81:4104:d09a:3c35:dab9:95ad)
[23:09:34] *** Quits: mimmy_ (~mimmy@2607:fea8:6e0:7f90:100e:941d:330:91e9) (Ping timeout: 260 seconds)
[23:16:43] *** Quits: jonathanx_ (~jonathan@h-178-174-176-109.A357.priv.bahnhof.se) (Ping timeout: 256 seconds)
[23:20:49] *** Joins: yauhsien (~yauhsien@118-167-40-224.dynamic-ip.hinet.net)
[23:24:05] *** Quits: shdw (~shdw@23-233-101-24.cpe.pppoe.ca) (Ping timeout: 256 seconds)
[23:24:21] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:b4a8:9431:5c1:c0e0)
[23:25:26] *** Quits: yauhsien (~yauhsien@118-167-40-224.dynamic-ip.hinet.net) (Ping timeout: 260 seconds)
[23:27:24] *** Joins: jjhoo (jahakala@user/jjhoo)
[23:27:57] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:78f3:43f3:fd48:5ac3)
[23:30:56] *** Quits: Vajb (~Vajb@nalkaylds2h97nzof-2.v6.elisa-mobile.fi) (Read error: Connection reset by peer)
[23:32:09] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[23:34:17] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[23:35:25] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[23:35:25] *** Quits: juhp (~juhp@128.106.188.82) (Ping timeout: 256 seconds)
[23:36:47] *** Joins: juhp (~juhp@128.106.188.82)
[23:39:44] *** Joins: machinedgod (~machinedg@135-23-192-217.cpe.pppoe.ca)
[23:44:17] <nf> guess i'll cross-post from #haskell-lens: is there some way to combine the indices of two indexed folds? for example, i'd want something like  ["ab","cd"] ^@.. ifolded . ifolded  to return  [((0, 0), 'a'), ((0, 1), 'b'), ((1, 0), 'c'), ((1, 1), 'd')]
[23:46:24] *** Joins: unit73e (~emanuel@2001:818:e8dd:7c00:32b5:c2ff:fe6b:5291)
[23:47:43] *** Quits: mc47 (~mc47@xmonad/TheMC47) (Remote host closed the connection)
[23:53:38] *** Joins: fendor (~fendor@178.165.196.64.wireless.dyn.drei.com)
[23:56:04] *** Joins: kayvank (~user@52-119-115-185.PUBLIC.monkeybrains.net)
