[00:00:14] <samsch> Is there a split on regex thing?
[00:00:47] <samsch> Oh, .split can take a regex, til
[00:01:00] <GreenJello> n> 'hello @samsch!'.split(/(@\w+)/g
[00:01:01] <jellobot> (fail) SyntaxError: missing ) after argument list
[00:01:09] <GreenJello> n> 'hello @samsch!'.split(/(@\w+)/g)
[00:01:10] <jellobot> (okay) [ 'hello ', '@samsch', '!' ]
[00:01:19] <GreenJello> the ()s are important there
[00:01:40] <GreenJello> you end up with even indexes being plain text and odd being mentions
[00:01:56] <samsch> Yo, that's sick
[00:02:03] *** Joins: silly_ (~silly@user/silly)
[00:02:05] <onosendi> GreenJello: then map over that, and if starts with '@' return `<span>${iter}</span>`, otherwise escape it.
[00:02:19] <samsch> Tbf, my brain today is low, so I'm also probably easily impressed >_>
[00:02:57] <GreenJello> onosendi, you don't need to escape it if you pass it as a react child
[00:03:52] <GreenJello> but if you really want to generate an html string, then yes
[00:05:50] <samsch> `originalString.split(/(@\w+)/g).map((token, index) => index % 2 === 0 ? token : <span>{token}</span>)` I think? I hate that magic modulo compare though.
[00:05:51] *** Quits: sillyslux__ (~silly@user/silly) (Ping timeout: 265 seconds)
[00:06:21] <GreenJello> yeah, that, plus a key on the spaN
[00:06:23] <GreenJello> span*
[00:07:37] <samsch> Oh, yeah. React will complain about it, though I don't really think it's actually doing anything valuable here.
[00:09:00] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[00:09:08] *** Joins: sam_1 (~sam_1@87.51.251.118)
[00:11:25] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) ()
[00:11:47] *** Joins: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com)
[00:13:24] <onosendi> samsch: ah, nice, works perfectly. I like the use of the remainder op. I was going with `token.startsWith('@')`.
[00:15:48] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 268 seconds)
[00:17:24] <onosendi> airbnb doesn't like `key={index}`.
[00:17:31] *** Joins: Naan` (~Naan@user/naan)
[00:18:04] <samsch> Yeah, just ignore it for that line :P
[00:18:39] *** Quits: ekh (~ekh@46.186.162.178) (Read error: Connection reset by peer)
[00:18:41] <ljharb> or `key={originalString}` or something
[00:19:16] <GreenJello> index is more correct here
[00:19:37] <GreenJello> it's the only thing guaranteed to not have a conflict
[00:19:44] <samsch> I don't hate `token + index` either.
[00:19:56] *** Joins: tex (~dee@user/dix)
[00:20:00] <samsch> But yeah, index is pretty much correct.
[00:20:02] <GreenJello> that would also be fine
[00:20:36] <onosendi> ljharb: lol, if (string == 'airbnb') { beep };
[00:21:02] *** Quits: systemdlete (~systemdle@c-174-50-188-152.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[00:21:21] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 268 seconds)
[00:21:33] <GreenJello> samsch, actually, that might conflict in contrived situations. You'd need index + ':' + token to be super safe
[00:22:12] <GreenJello> else token = 'a1' index=1, and token = 'a' index=11 would conflict
[00:22:13] <samsch> Generally, I'd agree, but I *think* since it always starts with `@`, you're actually safe here.
[00:22:20] <GreenJello> oh, true
[00:22:32] <samsch> Oh, but not with it as a suffix
[00:22:38] <samsch> `index + token` would be safe
[00:22:46] <samsch> But not `token + index`. Gross
[00:23:25] *** Quits: jim87 (~quassel@93.55.249.30) (Ping timeout: 268 seconds)
[00:27:51] *** Joins: Betal (~Betal@user/betal)
[00:29:36] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Read error: Connection reset by peer)
[00:30:34] <diophantoz> hi, if i remove a DOM element in a function like: var removed = titleField.parentNode.removeChild(titleField);
[00:30:49] <diophantoz> and then want to use the removed variable in another function
[00:31:01] <diophantoz> so i can add the DOM element again
[00:31:12] <diophantoz> how would i go about that? it seems to be an issue with scope
[00:31:48] <GreenJello> not clear what the issue is
[00:32:03] <onosendi> `removeChild` returns the child removed?
[00:32:27] <GreenJello> oh, read over that
[00:32:43] <GreenJello> seems it does, though
[00:32:57] <diophantoz> in my second function i have titleField.appendChild(removed);
[00:33:05] <diophantoz> but removed is null
[00:33:07] <ljharb> samsch: anything that includes index adds no value over just using index
[00:33:09] *** Joins: systemdlete (~systemdle@c-174-50-188-152.hsd1.ca.comcast.net)
[00:33:10] *** Quits: sizeof_void34 (~Thunderbi@109-252-124-86.nat.spd-mgts.ru) (Quit: sizeof_void34)
[00:33:18] <ljharb> but i agree that it's fine to override the eslint rule in this case
[00:33:31] <GreenJello> ljharb, that's not true in general
[00:33:47] <GreenJello> but in this case there aren't stateful children, so it doesn't matter
[00:34:20] <ljharb> how is it not true in general?
[00:34:21] <GreenJello> it would be niche that you benefit from also including the index, though
[00:34:34] <ljharb> the only purpose of `key` is to make things more efficient when the list changes order
[00:34:43] <ljharb> if you use `index` in any way, you've erased all the benefit of `key`;
[00:34:51] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 265 seconds)
[00:34:58] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[00:35:02] <ljharb> i'd love to see an example of something where including the index actually helped
[00:35:20] <ljharb> (or where including something alongside the index doesn't hurt)
[00:36:07] <GreenJello> key is more impactful than performance when children have state (including e.g. focus, or cursor position)
[00:37:02] <GreenJello> I know I've combined index with something else, but don't recall where, and it might have been a mistake for all I know
[00:37:19] <ljharb> i totally believe that sometimes key doesn't help based on what the components are doing
[00:37:32] <ljharb> but that doesn't really change my suggestion
[00:37:43] *** Quits: systemdlete (~systemdle@c-174-50-188-152.hsd1.ca.comcast.net) (Client Quit)
[00:38:06] *** Joins: systemdlete (~systemdle@c-174-50-188-152.hsd1.ca.comcast.net)
[00:38:27] <GreenJello> ah, so one situation is a React.Children.map where I needed to namespace keys in generated elements to not conflict with the provided element keys
[00:38:38] <GreenJello> so I did a static prefix + index
[00:39:18] <diophantoz> the code: https://dpaste.org/6ohN
[00:39:50] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[00:42:25] *** Joins: ircuser-1 (~Johnny@71.63.241.168)
[00:42:35] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 265 seconds)
[00:43:25] <GreenJello> ljharb, found a couple that look like not great examples, and one that might be correct, wanting components to remount when changing order
[00:43:41] <GreenJello> it's an id joined with an index
[00:44:08] <GreenJello> there are collapsable sections inside the sub component, and if the key changes those get reset
[00:44:10] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[00:44:27] <onosendi> diophantoz: it's out of scope.
[00:45:01] <onosendi> diophantoz: https://dpaste.org/CRH8
[00:45:08] *** Quits: Haxxa (~Haxxa@122.199.45.213) (Quit: Haxxa flies away.)
[00:45:51] <teut>           <Fab variant="extended" aria-label="add" className={classes.button}>                {helpedOrganisations.buttonText} </Fab>   how to make the text of material ui Fab to show   the ellipses on overflow?
[00:45:54] <GreenJello> diophantoz, it looks like you're trying to append the node to itself as well
[00:46:15] *** night_wulfe_ is now known as night_wulfe
[00:46:15] <teut> Uploaded file: https://uploads.kiwiirc.com/files/f11be6f3a0b57b7c070bbb8d4418e1b6/pasted.txt
[00:46:38] <teut> Uploaded file: https://uploads.kiwiirc.com/files/5f8c3d692a4abbeb11aa54144adbaf6b/image.png
[00:46:46] *** Quits: arthur_melo_ (~IRC@user/arthur-melo/x-6822691) (Remote host closed the connection)
[00:46:46] <teut> on mobile it goes out
[00:47:03] *** Joins: arthur_melo (~IRC@user/arthur-melo/x-6822691)
[00:47:11] <legit> What's the difference between Toaster.prototype.toast = function() { //do something } and Toaster.prototype.toast = () => { //do something }? I found that the latter does not work when I'm calling toast() from an instance
[00:47:24] *** Joins: jamea (~jamea@200.68.141.31)
[00:47:25] <GreenJello> diophantoz, you would need to store the parent of #field_pres_title somewhere, or query it, and call that.appendChild(titleField)
[00:47:35] *** Quits: nomic (~nomic@185.192.69.176) (Quit: Leaving)
[00:47:38] *** Joins: Haxxa (~Haxxa@122.199.45.213)
[00:48:30] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[00:49:21] *** Quits: morgabra (sid500580@user/morgabra) ()
[00:49:38] *** Joins: morgabra (sid500580@user/morgabra)
[00:50:07] <autistic> shan, you're right, indeed!
[00:50:19] <shan> this is a rare occurrence
[00:51:49] <autistic> Anyway, how do you handle learning curve when you have time constraints? And, hiring someone better than me isn't an option LOL I would've if I could
[00:52:44] *** Quits: systemdlete (~systemdle@c-174-50-188-152.hsd1.ca.comcast.net) (Ping timeout: 265 seconds)
[00:52:55] <autistic> I guess there's no answer for that, there is no magic
[00:53:21] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:53:38] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 268 seconds)
[00:57:12] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[00:58:41] <GreenJello> legit, arrow functions capture `this` from where they're defined, but for methods you want dynamic `this`
[00:59:26] <diophantoz> onosendi, GreenJello ty, i will look into it
[00:59:32] <GreenJello> with function(){} functions, `this` depends on how the function is invoked (e.g. if called as t.toast(), `this` will be `t`)
[01:00:52] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[01:01:33] *** Joins: haycon (~haycon@84.215.37.126)
[01:01:55] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 265 seconds)
[01:02:39] <ljharb> GreenJello: ok so in those cases you _want_ the ordering to reset everything?
[01:02:50] <ljharb> GreenJello: while that seems exceedingly rare i'll give you that one
[01:03:05] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[01:03:05] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[01:03:05] *** Joins: wroathe (~wroathe@user/wroathe)
[01:03:25] *** Joins: nomic (~nomic@185.192.69.176)
[01:03:31] <GreenJello> yeah, well it was 1 in 200 key usages in the project I grep'd
[01:03:41] <legit> GreenJello, so when using the arrow function I'd have no t.toast?
[01:03:53] *** Joins: zebrag (~chris@user/zebrag)
[01:04:10] <GreenJello> legit, you wouldn't be able to access 't' inside the function
[01:04:18] *** Joins: systemdlete (~systemdle@c-174-50-164-14.hsd1.ca.comcast.net)
[01:04:47] <GreenJello> since `this` would be whatever it is in the scope in which the function is defined, before creating any instances
[01:04:48] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: WeeChat 3.2.1)
[01:06:22] *** Quits: _banana_ (~banana_@2603-6000-b500-9ce3-2994-de6c-12d5-3f57.res6.spectrum.com) (Quit: Leaving)
[01:06:31] <legit> Oh, I think I get it
[01:06:35] <legit> Thanks!:)
[01:06:37] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[01:07:18] <banana_> `const someObject = { toast() { ... } };`  is different than `const someObject = { toast: () => { ... } };`
[01:08:23] <banana_> for the arrow function example `this` is whatever the function block that directly surrounds `someObject` points to
[01:08:28] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[01:09:00] <banana_> the first example is an instance method and `this` will be the instance or `someObject`
[01:09:26] *** Joins: pizdets_ (~pizdets@183.182.115.39)
[01:10:17] *** Quits: pizdets (~pizdets@183.182.111.39) (Ping timeout: 268 seconds)
[01:11:57] *** Quits: teut (~teut@182.68.241.120) (Quit: Connection closed)
[01:12:14] <banana_> autistic: not sure if you got my comment but yeah read https://www.amazon.com/JavaScript-Definitive-Most-Used-Programming-Language/dp/1491952024/ref=sr_1_3?dchild=1&keywords=definitive+guide+javascript&qid=1631564876&sr=8-3 some people think it's boring but it's a good read.
[01:12:48] <prussian> typescript can help you with this-ness as well, or at least make sure it is what you expect it to be.
[01:13:46] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi) (Ping timeout: 260 seconds)
[01:13:55] <autistic> banana_, thanks, I surely need some reading on JS
[01:14:23] *** Quits: YaknotiS (~YaknotiS@user/yaknotis) (Ping timeout: 268 seconds)
[01:14:52] <banana_> it's your best bet. GreenJello told me years ago to get good at JS and yeah once I finally did I saw the greatest improvement in my competency
[01:15:25] <banana_> once you have that knowledge you'd be surprised how much more is built from just having that knowledge.
[01:16:13] <banana_> working with third-party libraries etc, syntax won't intimidate you etc.
[01:16:39] <banana_> ljharb won't intimidate you
[01:16:40] <banana_> etc
[01:19:14] <banana_> :P. also yeah people on here have a high-level understanding of JS so you won't know JS "too much," if that's even a concern of yours
[01:21:55] <ljharb> !eloquent @ autistic
[01:21:56] <jellobot> autistic, Eloquent JavaScript is a comprehensive introductory Web-based book with examples and a built-in interpreter. http://eloquentjavascript.net/
[01:22:42] <banana_> that too
[01:23:25] <autistic> Thanks too ljharb, sounds like I need
[01:23:46] <prussian> never used a book. MDN is half the battle, the rest is writing junk til you puke.
[01:23:56] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[01:25:02] <autistic> prussian, MDN is the first result for every web search I do on anything, it's really helpful... But, I guess this day today proved again I need some "JS literacy"
[01:25:16] <prussian> autistic: around this-iness?
[01:25:55] <banana_> yeah I think MDN is a good place for reminders or for quick lookups for smaller JS features.
[01:25:59] <prussian> mdn has a page about it. if you are feeling special, typescript allows you to "type" the this context and it will tell you when it thinks you are definitely doing it wrong.
[01:26:27] <banana_> MDN's awesome though
[01:26:50] <autistic> this-iness? I guess there's one more thing I don't know about LOL
[01:27:42] <banana_> yeah I'm just learn JS first before you cross the TS bridge
[01:28:25] <prussian> bindings of this, etc. are common problems people have.
[01:28:51] <prussian> autistic: have you seen? https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this
[01:28:56] <autistic> Ohhh, I guess the this thing was another conversation
[01:29:21] <prussian> oh
[01:29:25] <prussian> i'm not paying attention
[01:29:29] <prussian> your name color is the same
[01:29:32] <prussian> sorry
[01:29:33] <prussian> ignore me
[01:29:38] <autistic> No worries, I do that all the time
[01:30:01] *** Quits: necrognosis (~necrognos@user/necrognosis) (Ping timeout: 268 seconds)
[01:30:04] <banana_> it's IRC maybe the freenode owner was onto something
[01:30:25] <banana_> bad joke
[01:32:24] <prussian> maybe...
[01:32:56] <banana_> if this was discord you could see direct replies etc.
[01:33:20] *** Quits: vats (~vats@103.70.83.191) (Remote host closed the connection)
[01:33:56] <banana_> but yeah no idea what changes freenode king was trying to implement... so yeah stupid joke
[01:34:11] <prussian> I am too old for discord.
[01:34:13] <prussian> simple as that.
[01:38:08] <banana_> yeah discord kinda sucks
[01:38:17] *** Joins: sam_1 (~sam_1@87.51.251.118)
[01:38:21] <prussian> it is ok for voice chat I guess?
[01:38:36] <prussian> I just spin up some other service and link it inline in irc though...
[01:38:39] <prussian> zoom, et al.
[01:38:43] <sheetjs> you aren't too old for discord or onlyfans
[01:38:50] <prussian> idk about that.
[01:38:52] <banana_> lol
[01:39:03] <prussian> 30 is when you are too old to trust yourself.
[01:39:10] *** Quits: haniaF (~haniaF@83.24.199.163.ipv4.supernova.orange.pl) (Quit: ZNC 1.8.2 - https://znc.in)
[01:39:20] <prussian> can't trust myself to know about that.
[01:39:31] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[01:39:44] <velix> Okay, var_dump() doesn't work in JS :D
[01:39:45] *** Joins: haniaF (~haniaF@83.24.199.163.ipv4.supernova.orange.pl)
[01:39:49] <sheetjs> worth pointing out that bezos started amazon when he was 30
[01:40:20] <prussian> unicorns do exist I guess 🦄
[01:40:31] <prussian> I'm mostly joking, by the way.
[01:40:54] <prussian> what is it with tc39 proposals and flamewars?
[01:41:13] <sheetjs> what flamewar?
[01:41:21] <prussian> the pipleine one
[01:41:25] <prussian> it started up again.
[01:41:46] <prussian> is there like a mod or whatever to lock stuff? lol
[01:41:53] <sheetjs> there are different perspectives on what constitutes a useful change worthy of consideration
[01:42:27] <prussian> ya... but like: https://github.com/tc39/proposal-pipeline-operator/issues/205 is literally just people talking in circles.
[01:42:36] <prussian> and the OPs actionables are just ignored.
[01:42:58] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 268 seconds)
[01:43:22] <prussian> sheetjs: what happened to niggler? I'm assuming that is you, no?
[01:43:27] <sheetjs> if the crux of the argument in favor of a proposal is that "it is trendy", then trends will always influence the decision
[01:44:06] <sheetjs> it was retired.  this is my company's "social media outreach"
[01:44:11] <prussian> I see.
[01:44:14] <prussian> rip
[01:44:23] <silly_> n> var_dump = console.log; var_dump('hello') @velix
[01:44:24] <jellobot> velix, hello
[01:44:57] <sheetjs> that, and an occasional twitter response
[01:46:42] <velix> silly_: I know ;)
[01:46:44] <sheetjs> because in 2021 apparently it's not good enough to have an awesome library, you also need good marketing
[01:46:47] <velix> silly_: But FullStack is annoying.
[01:46:59] <velix> silly_: "what language am I in right now? hmm".
[01:47:00] <silly_> yeah i know
[01:47:22] <silly_> switching between languages is terrible
[01:47:33] <velix> Ja, das finde ich auch.
[01:47:34] <velix> oops
[01:47:58] <sheetjs> its easier when they are different silly_, like switching between JS and python is easier than JS and C
[01:48:29] <prussian> sheetjs: ya. marketing sucks
[01:48:30] <velix> most annoying is ${var} vs. {$var}
[01:48:41] <prussian> I hope it is working for you.
[01:48:55] <silly_> it also helps if you know them well
[01:49:18] <prussian> I have crappy processes at work that deal with Excel sheets, I'd much rather support your lib (that I know even MSO's excel uses lol) than the crap they do now.
[01:49:22] <prussian> oh well.
[01:49:25] <sheetjs> not well.  someone thought sheetjs was a google sheets library
[01:49:36] <prussian> Javascript remains the blacksheep at my work for some reason.
[01:49:45] <prussian> i'm sorry
[01:50:25] *** Joins: andrew9184_ (sid416777@id-416777.uxbridge.irccloud.com)
[01:52:24] <sheetjs> should rephrase, sheetjs as a project is going well but still facing uphill challenges even with the JS community
[01:52:44] *** Joins: Snyp (~Snyp@49.207.198.150)
[01:53:14] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[01:54:16] <sheetjs> among other reasons, because google sheets is a mess.  the "gsheet" format is really just metadata but there are a surprising number of emails and questions about it
[01:55:02] <silly_> you aim to allow imports and exports to all formats?
[01:55:03] *** Joins: voltage_ (voltage@user/voltage)
[01:55:46] <prussian> Lol
[01:55:58] <prussian> Gotta love spreadsheets.
[01:56:04] <sheetjs> within reason.  the goal is every format that Excel 2.0 - 2019 support
[01:56:22] <devslash> is there a way in Node to make a curl command and wait for the results
[01:56:42] <sheetjs> reading and writing, and addressing various bugs in Excel roundtripping
[01:57:34] <prussian> devslash: I'm sure there is a fetch() implementation you can find on npm
[01:58:04] <sheetjs> devslash: if you are literally trying to cURL (with curl opts), you can use child_process.execSync
[01:58:26] <sheetjs> or use a libcurl node module
[01:58:33] <devslash> i just want to get the html of a url
[01:58:38] <prussian> Ya. I'm sure someone did it.
[01:58:39] <devslash> it doesnt have to be with curl
[01:59:46] <GreenJello> devslash, then using an http client like node-fetch is preferred
[02:00:02] <GreenJello> but it's async, like most I/O operations in node
[02:01:12] <sheetjs> silly_: so as an example of a roundtrip error, excel supports a very old file format called DIF.  The format has some loose typing (string or numeric), but Excel actually tries to evaluate every string.  So a file with a string that looks like a number (e.g. "0.3") is written as a string but read back as a number in Excel
[02:01:15] *** Quits: jamea (~jamea@200.68.141.31) (Ping timeout: 268 seconds)
[02:01:28] <sheetjs> the way to work around it is to write a formula that evaluates to a string e.g. "=""0.3"""
[02:01:48] <prussian> Beautiful.
[02:01:51] <prussian> I love it
[02:01:53] <sheetjs> same problem with CSVs today
[02:02:06] <prussian> Ya. Sounds about right.
[02:02:21] <sheetjs> except it's `="${data}"` instead of `"=""${data}"""`
[02:02:57] <prussian> I have nightmares about things like that.
[02:03:58] <prussian> Having ambiguous representation of data that is.
[02:04:31] <sheetjs> its an issue that still haunts us today
[02:04:46] <sheetjs> names parsed as dates
[02:04:59] <sheetjs> values parsed as dates that give unexpected results in formulae
[02:05:23] *** Quits: tex (~dee@user/dix) (Quit: Konversation terminated!)
[02:05:26] <sheetjs> "Scientists rename human genes to stop Microsoft Excel from misreading them as dates "
[02:05:33] <sheetjs> Sometimes it’s easier to rewrite genetics than update Excel
[02:05:40] <sheetjs> https://www.theverge.com/2020/8/6/21355674/human-genes-rename-microsoft-excel-misreading-dates
[02:05:51] <prussian> Ya. I remember seeing that lol.
[02:06:15] <prussian> Feels like the worse is better mantra for office users.
[02:06:31] <velix> sheetjs: I'm creating my XLSX files using R. It really rocks.
[02:06:36] <devslash> https://pastebin.com/teXZ1hSW
[02:06:38] <sheetjs> the alternative isn't much better
[02:06:39] <devslash> theres my code
[02:06:40] <velix> 800k lines in JS are hard to handle.
[02:07:01] <devslash> I get an error that body is not defined
[02:07:04] <prussian> So much stuff at my work is done in excel. A literal DSL interpreted by some Java xlsx parser.
[02:07:10] <prussian> Ugh
[02:07:14] <velix> prussian: here, too.
[02:07:16] <sheetjs> its a mistake not to use sheetjs :P
[02:07:30] <velix> Excel 365 is way too big for most of our projects.
[02:07:44] <prussian> Clearly. I wrote a lot of process automation and some shell script emitting compiler in js. So easy.
[02:07:48] <velix> It can now to stuff with maps, display coordinates etc.
[02:08:03] <prussian> I just need to fix the licensing part of the release process
[02:08:14] <prussian> Then I can have them buy sheetjs pro ofc.
[02:08:20] <velix> I'd really love to have JS, Python or R support directly in Excel to process columns.
[02:08:28] <devslash> any idea why that is not working
[02:08:32] <velix> InDesign with JS is really nice.
[02:08:39] <velix> You can automate all kind of stuff.
[02:08:57] <prussian> Neat
[02:08:59] <sheetjs> https://bugs.documentfoundation.org/show_bug.cgi?id=83511 was from LibreOffice
[02:09:04] <sheetjs> the key quote is
[02:09:07] <prussian> I should just quit now though.
[02:09:13] <sheetjs> We ignore the last two bits for many stuff to improve the user experience.
[02:09:59] <sheetjs> "excel preserving 35-year old bugs" is arguably better than "calculator fudging numbers"
[02:10:32] <prussian> Lol
[02:12:15] <prussian> Ya.... I love bug reports like this.
[02:13:34] <devslash> its not working correctly
[02:14:24] <sheetjs> you actually need those "last two bits" to correctly determine fractions
[02:14:49] *** Quits: drew (~drew@user/drew) (Ping timeout: 268 seconds)
[02:14:54] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 265 seconds)
[02:15:15] *** Quits: nomic (~nomic@185.192.69.176) (Quit: Leaving)
[02:15:20] <sheetjs> Excel doesn't use the "mediant" method (bounded search where you add numerators and denominators) for worst-case performance reasons
[02:15:26] *** Quits: diophantoz (~diophanto@user/diophantoz) (Ping timeout: 268 seconds)
[02:16:57] <devslash> can you ugys help me out
[02:18:31] <sheetjs> you also need res.send(body) within the async function, and you need to actually call it
[02:18:37] <devslash> i did
[02:18:41] <devslash> but it never gets sent
[02:18:50] <devslash> did you see the code that I pasted
[02:18:57] <sheetjs> yeah line 8 is outside of the async function
[02:19:02] <sheetjs> and that function is not being called
[02:19:10] <devslash> well it does not work inside of async
[02:19:18] <sheetjs> you have to call html
[02:19:21] <devslash> then how are you supposed to do it
[02:19:23] <devslash> how
[02:20:22] <sheetjs> something like https://pastebin.com/AUHGfVtk
[02:20:37] <sheetjs> you also probably want some sort of error checking
[02:20:56] <sheetjs> so if the request fails, you send back an error
[02:21:04] <devslash> ok
[02:21:34] <devslash> let me try that out
[02:21:54] <devslash> all that did work thanks
[02:22:00] <devslash> your syntax is a bit different
[02:26:55] <ljharb> prussian: the threads are definitely a mess
[02:27:24] <ljharb> prussian: in this specific case it's that FP people (capital "F" FP) are an extreme minority in JS, but are very very vocal, and aren't willing to accept that they're an extreme minority
[02:30:02] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:28] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:34:42] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Remote host closed the connection)
[02:34:49] *** Quits: Snyp (~Snyp@49.207.198.150) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:35:01] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[02:35:16] *** Joins: wroathe (~wroathe@96-88-30-181-static.hfc.comcastbusiness.net)
[02:35:16] *** Quits: wroathe (~wroathe@96-88-30-181-static.hfc.comcastbusiness.net) (Changing host)
[02:35:16] *** Joins: wroathe (~wroathe@user/wroathe)
[02:35:23] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 268 seconds)
[02:36:34] *** Joins: sillyslux__ (~silly@user/silly)
[02:37:10] *** Quits: g00fy (~g00fy@user/g00fy) (Ping timeout: 252 seconds)
[02:40:19] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 268 seconds)
[02:47:10] *** Joins: g00fy (~g00fy@user/g00fy)
[02:48:40] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[02:49:22] *** Joins: VoidNoir0 (~VoidNoir0@72.80.203.52)
[02:50:07] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[02:50:22] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[02:51:40] *** Joins: christian[m]12 (~christian@2001:470:69fc:105::f6f1)
[02:52:28] *** Joins: blez (~blez@213.91.182.96)
[02:53:22] *** Joins: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net)
[02:53:53] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 268 seconds)
[02:54:46] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 252 seconds)
[02:54:57] *** Quits: grapheti (~grapheti@dynamic42-98-142-74.dobsonteleco.com) (Remote host closed the connection)
[02:56:37] *** Quits: xsperry (~as@user/xsperry) (Remote host closed the connection)
[03:05:37] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Read error: Connection reset by peer)
[03:09:55] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:b9b1:3cd4:933c:9069) (Ping timeout: 268 seconds)
[03:11:58] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[03:12:58] *** Joins: hendursaga (~weechat@user/hendursaga)
[03:16:27] *** Quits: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net) (Quit: Leaving.)
[03:17:04] *** Quits: arthur_melo (~IRC@user/arthur-melo/x-6822691) ()
[03:17:17] <systemfault> My problem with the Hack syntax is that it's mostly useless...
[03:19:46] <systemfault> I'd just kill the proposal, haha
[03:19:52] <systemfault> (If I could)
[03:20:04] <systemfault> JS doesn't need pipelining
[03:21:33] <prussian> Ya.... I'm not seeing it either
[03:21:39] <sheetjs> plenty of features to prioritize before pipelines
[03:21:42] <prussian> ljharb: they really do put the F in it
[03:21:50] <systemfault> The point of a pipe function is to... compose functions :)
[03:22:03] <prussian> I just want iterator helpers
[03:22:41] <sheetjs> pipe falls under "syntactic sugar"
[03:22:42] <systemfault> pipelining doesn't change much, nobody "should" be doing a ton of nested calls.
[03:22:54] <systemfault> sheetjs: I saw it like classes...
[03:23:20] <systemfault> sheetjs: Everyone was building their own "thing" before they were standardized with ES6.
[03:23:46] <prussian> I just don't see how it is any different than intermediate variables
[03:23:48] <prussian> Lol
[03:23:49] <systemfault> I was hoping that JS would just have "pipe" built-in, not some weird and not that useful thing
[03:24:13] <wroathe> systemfault: Which proposal is this that you guys are talking about?
[03:24:21] <systemfault> wroathe: pipelining operator.
[03:24:24] <wroathe> systemfault: Thanks
[03:24:24] <sheetjs> pipeline operator |>
[03:24:56] <systemfault> wroathe: Today's drama thread https://github.com/tc39/proposal-pipeline-operator/issues/205
[03:25:23] <wroathe> systemfault: Double thanks
[03:25:35] <prussian> Needs to be renamed to pipeline expressions or syntax
[03:25:43] <prussian> Seems to be more than just an operator now
[03:26:22] <sheetjs> does it qualify as "way of life" prussian?
[03:26:48] <prussian> I don't know what it qualifies as
[03:26:50] <sheetjs> pipelyfe
[03:26:56] <wroathe> systemfault: Hah. I hadn't seen this proposal before. They sure jump through a lot of hoops to avoid mentioning function composition.
[03:27:02] <prussian> It just feels downright weird.
[03:27:10] <sheetjs> a serious 64 bit integer proposal would be nice
[03:27:27] <systemfault> sheetjs: Not sure it's going to happen...
[03:27:29] <GreenJello> sheetjs, can we call it mediumint?
[03:27:30] <wroathe> systemfault: Feels like this should just be a function composition operator
[03:27:34] *** Quits: onizu (uid373383@id-373383.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[03:27:40] <prussian> sheetjs: this
[03:27:44] <GreenJello> oh "serious", nevermind
[03:27:48] <prussian> Doing bitwise on 32bit is so lame
[03:27:56] <systemfault> wroathe: But apparently, the idea of composing functions is some niche thing...
[03:28:06] *** Joins: matsaman (~matsaman@user/matsaman)
[03:28:16] <systemfault> wroathe: So, they'd rather add that extremely complex pipelining operator
[03:28:23] <prussian> I'm sure the 64bit int will point us at arraybuffer and say SUFFER
[03:28:33] <wroathe> systemfault: Yeah, that's why I said they're jumping through hoops. It's time to acknowledge that JS is as much a functional language as it is anything else.
[03:28:40] <sheetjs> short, int, long, long long, big
[03:28:55] <sheetjs> quad is also sometimes used
[03:29:22] <prussian> Just add operator overloading or defining custom ones. Then we can have like those c++ literals operators... duh
[03:29:28] <prussian> 1_LL
[03:29:38] <GreenJello> prussian, that's pretty much the situation, like how you do 16 bit math with number+Uint16Array
[03:29:45] <prussian> Ya
[03:29:52] *** Joins: gggpkm (~gggpkm@111-251-126-187.dynamic-ip.hinet.net)
[03:29:53] <GreenJello> you do 64 bit math with bigint+typed array
[03:29:56] <prussian> Which is fine
[03:30:06] <prussian> If not ergonomically weird
[03:30:16] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 268 seconds)
[03:30:26] <sheetjs> bigint doesnt have 64 bit overflow semantics
[03:31:40] <wroathe> systemfault: I like this guy (the issue you linked)
[03:32:07] <GreenJello> sheetjs, isn't it just n % 2^64 or (n - 2^63) % 2^64?
[03:32:12] <GreenJello> or something like that
[03:32:26] <GreenJello> I'm sure the typed arrays automate that
[03:32:31] *** Joins: sam_1 (~sam_1@87.51.251.118)
[03:32:35] <prussian> Ya, that's why you're forced into ArrayBuffer+TypedArray
[03:32:42] *** Quits: pizdets_ (~pizdets@183.182.115.39) (Ping timeout: 250 seconds)
[03:32:49] <systemfault> wroathe: In the end, a possible solution could be to have both a pipe and a pipelining operator...
[03:32:57] <sheetjs> yes its doable, as is writing your own bytes -> double routine
[03:32:58] *** Joins: jamea (~jamea@177.239.87.39)
[03:33:00] <systemfault> wroathe: I can't see that happening though
[03:33:01] <prussian> I'm p sure. The BigInt64 array view is 2s complement
[03:33:05] <prussian> I'm sure it overflows
[03:33:28] <sheetjs> how does wasm handle it?
[03:33:49] *** Joins: pizdets (~pizdets@183.182.114.182)
[03:34:07] <sheetjs> oh its just bigint
[03:34:12] <wroathe> systemfault: I'd certainly prefer just plain old function composition. The ^ placeholder adds extra complexity for the convenient of syntactical sugar, and plain old composition is just as powerful
[03:34:41] *** Joins: xsperry (~as@user/xsperry)
[03:35:15] <velix> Hmm... When I save a vanilla JS file, can I make the website in the browser update magically? I've seen this in Angular.
[03:36:36] <GreenJello> there are live reload servers
[03:36:57] <GreenJello> usually you get it from webpack or similar
[03:37:04] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 265 seconds)
[03:37:06] <velix> ah yeah! https://bytearcher.com/articles/refresh-changes-browser-express-livereload-nodemon/
[03:37:09] <velix> Just found it, thanks.
[03:37:54] <sheetjs> n> "\u2713"
[03:37:55] <jellobot> (okay) '✓'
[03:38:17] <velix> n> "\u96"
[03:38:18] <jellobot> (fail) SyntaxError: Invalid Unicode escape sequence
[03:38:20] <sheetjs> n> "\u2713\u2714\u2705"
[03:38:21] <jellobot> (okay) '✓✔✅'
[03:38:30] <sheetjs> n> "\u0096\x96"
[03:38:31] <jellobot> (okay) '\x96\x96'
[03:38:31] <velix> u96 = submarine ... why don't I get a submarine here?
[03:38:38] <sheetjs> unicode
[03:38:45] <velix> sheetjs: I know ;)
[03:38:48] <matsaman> 'cause it doesn't exist?
[03:38:51] <sheetjs> which of those check characters look best for a readme?
[03:38:57] <velix> matsaman: yeah, the designers s*ck :(
[03:39:47] <velix> sheetjs: Can you show "no" in comparism?
[03:39:59] <velix> The "yes" / checked needs to fit to the "no"
[03:40:02] <sheetjs> there's no "no" in context
[03:40:35] <sheetjs> it's either "yes" or blank
[03:40:55] <devslash> Is this the right way to read all LI items using the jsdom library ?
[03:40:55] <devslash> * rewrit3 has quit (Read error: Connection reset by peer)
[03:40:55] <devslash> * normen has quit (Ping timeout: 268 seconds)
[03:41:16] <devslash> oops
[03:41:31] <devslash>  const dom = new JSDOM(body);
[03:41:31] <devslash>         const URLS = dom.window.document.getElementsByTagName("li").textContent;
[03:41:47] <systemfault> No...
[03:42:00] <devslash> qhat is wrong with it
[03:42:08] <GreenJello> lists don't have .textContent
[03:42:09] <systemfault> getElement-->s<--ByTagName
[03:42:11] <GreenJello> their items do
[03:42:22] <sheetjs> getElementsByTagName gives you a list of items
[03:42:24] <devslash> so what do i change
[03:42:38] <sheetjs> you need to loop the list and get the textContent of each one
[03:42:43] <devslash> ok so i removed .textcontent
[03:43:29] *** Joins: N4buc0 (~N4buc0@2001:1284:f013:af60:3be7:3677:cfb7:cdf)
[03:43:50] <sheetjs> [... dom.window.document.getElementsByTagName("li")].map(e => e.textContent)
[03:44:03] <sheetjs> does that work?
[03:44:07] <systemfault> const URLS = Array.from(dom.window.document.getElementsByTagName("li"), n => n.textContent)
[03:44:26] <systemfault> What sheetjs wrote should also work
[03:44:43] <systemfault> Assuming HTMLCollection supports iterators
[03:44:48] <systemfault> (I'm not sure)
[03:44:58] <sheetjs> its array-like like arguments
[03:45:15] <systemfault> NodeList supports it (querySelectorAll)
[03:45:23] <GreenJello> spread is iterators only
[03:45:31] <GreenJello> Array.from is iterator or array-like
[03:46:16] <systemfault> HTMLCollection is iterable in Chrome at least
[03:46:21] <systemfault> (Just tried it)
[03:49:36] *** Joins: gggp (~textual@111.63.44.5)
[03:53:00] *** Joins: nomic (~nomic@185.192.69.176)
[03:57:22] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 265 seconds)
[03:58:12] *** Quits: N4buc0 (~N4buc0@2001:1284:f013:af60:3be7:3677:cfb7:cdf) (Quit: Leaving)
[04:05:01] *** Quits: sylario (uid115390@id-115390.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[04:05:36] <ljharb> systemfault: hack syntax is incredibly useful
[04:05:53] <ljharb> systemfault: the point of the pipeline operator is to de-nest nested function calls. not to compose functions into another function.
[04:06:34] <ljharb> systemfault: like `Object.fromEntries(Object.entries(obj).map(mapper))` → `obj |> Object.entries(^) |> ^.map(mapper) |> Object.fromEntries(^)`, which allows you to read LTR instead of inside-to-out.
[04:06:48] <systemfault> You're not supposed to nest functions calls ad infinitum... we have things like "variables" to avoid that.
[04:06:49] <ljharb> (obv it'd be a much bigger improvement when `mapper` is inline, as it often is)
[04:06:56] <ljharb> not "ad infinitum"
[04:07:10] <ljharb> but 2-3 levels? it happens literally all the time, and there's nothing wrong with it. it just reads better as a pipeline.
[04:07:18] *** Joins: silly_ (~silly@user/silly)
[04:07:45] <systemfault> ljharb: Yes, it does read better... but IMHO, isn't worth the added syntax.
[04:08:18] *** Quits: haycon (~haycon@84.215.37.126) (Quit: Konversation terminated!)
[04:08:40] <ljharb> it's fine if you prefer "nothing" over hack pipes, but that's never been a compelling argument against any feature
[04:08:58] <systemfault> The compelling argument is keeping the language simple..
[04:09:10] *** Quits: xberry (~LSD@2.lsd.systems) (Ping timeout: 252 seconds)
[04:09:12] <ljharb> better readability simplifies the language.
[04:09:20] <ljharb> just like "shorter is simpler" is false, so too is "fewer features is simpler".
[04:09:43] <systemfault> Having special syntactic constructs with special rules is not "simpler"
[04:09:47] <ljharb> also, F# pipes without partial application are pretty terrible for everyone who isn't an FP nerd, and partial application has a lot of pushback to overcome before it's even remotely viable
[04:10:13] <systemfault> The FP people don't want pipelining, they want "pipe" as in (left to right function composition)
[04:10:24] <systemfault> It should, IMHO, be a totally separate thing and proposal.
[04:10:54] *** Quits: sillyslux__ (~silly@user/silly) (Ping timeout: 265 seconds)
[04:11:00] <matsaman> totally separate language? =)
[04:11:13] *** Quits: Gurkenglas (~Gurkengla@dslb-002-207-014-195.002.207.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[04:13:12] *** Joins: pikapika_lunar (~pikapika_@pika.powered.by.lunarbnc.net)
[04:13:25] *** Quits: Naan` (~Naan@user/naan) (Ping timeout: 252 seconds)
[04:13:53] *** Joins: acidsys (~LSD@2.lsd.systems)
[04:14:23] <systemfault> It's just that |> has an history of being "pipe"... except for that stupid language nobody uses called "Hack"
[04:14:29] <ljharb> systemfault: right but that's not something the committee is likely to go for.
[04:14:31] <systemfault> That's why it "triggers" the FP people.
[04:14:38] <ljharb> it's not about the hack language
[04:14:42] <ljharb> that's just what this flavor is called
[04:14:48] <systemfault> ...
[04:14:50] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Ping timeout: 260 seconds)
[04:14:54] <ljharb> i think i see what you're saying tho
[04:15:01] *** Joins: spynx (~spynxic@spynxic.powered.by.lunarbnc.net)
[04:15:02] <systemfault> It's "Hack" as in the "Hack programming language"
[04:15:04] <ljharb> right
[04:15:12] *** Joins: sillyslux__ (~silly@user/silly)
[04:15:13] <matsaman> hackly named
[04:15:13] <ljharb> i'm pretty sure tho that in every language where |> is "pipe", there's auto-currying
[04:15:30] <ljharb> JS doesn't have auto-currying, so *attempting to write code like you would in an auto-currying language* is a category error
[04:15:37] <ljharb> rxjs is just the largest library in that category
[04:16:14] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Ping timeout: 260 seconds)
[04:16:36] <ljharb> systemfault: are there languages with |> as "pipe" that don't do auto-currying?
[04:16:49] <ljharb> i'm not super informed here
[04:16:49] <systemfault> ljharb: Not that I know, they're all "auto-curried"
[04:16:52] <ljharb> ok
[04:16:59] <ljharb> then personally i think that's the real disconnect
[04:17:01] <matsaman> in fairness, curry is delicious
[04:17:11] <systemfault> matsaman: Only with naan breads.
[04:17:13] <ljharb> these people are writing FP in JS the same way java people try to write java in JS
[04:17:27] <matsaman> systemfault: I mean that's good enough for me
[04:17:30] <ljharb> JS is unique, it has its own idioms, it can't be elegantly changed into a language it's not
[04:17:46] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[04:18:07] *** Joins: wroathe (~wroathe@user/wroathe)
[04:18:45] <systemfault> ljharb: The usage of pipe in JS/TS is mostly a workaround around the shortcomings of chaining APIs...
[04:18:59] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 268 seconds)
[04:19:27] <systemfault> If there was some "magic" to fix that, not sure anyone would use pipe
[04:19:30] *** Quits: jamea (~jamea@177.239.87.39) (Ping timeout: 260 seconds)
[04:19:54] <systemfault> (For RxJS, FP-TS, Effect-TS.. etc)
[04:20:28] *** Joins: smvg (~smvg@85.218.163.88)
[04:21:27] <systemfault> Chaining APIs are usually better in terms of UX (IMHO) as they provide better discoverability
[04:22:43] <matsaman> .pipe()?
[04:23:13] <ljharb> systemfault: hack pipes do fix that.
[04:23:17] <ljharb> systemfault: as would F# pipes, fwiw
[04:23:54] *** Joins: scoobydoo_ (~scooby@user/scoobydoo)
[04:23:55] *** Quits: scoobydoo_ (~scooby@user/scoobydoo) (Excess Flood)
[04:23:57] <ljharb> either way you can do `a\n .b() \n |> c(^) \n |> ^.d() \n .e()` etc
[04:24:10] <ljharb> ie, mixing `.` and `|>` in the chain however you like
[04:24:15] *** Joins: scoobydoo_ (~scooby@user/scoobydoo)
[04:25:52] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 245 seconds)
[04:25:56] *** scoobydoo_ is now known as scoobydoo
[04:26:07] *** Quits: pikapika_lunar (~pikapika_@pika.powered.by.lunarbnc.net) (Ping timeout: 240 seconds)
[04:26:10] *** Quits: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net) (Ping timeout: 268 seconds)
[04:26:56] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[04:27:37] *** Quits: spynx (~spynxic@spynxic.powered.by.lunarbnc.net) (Ping timeout: 268 seconds)
[04:29:20] *** Quits: smvg (~smvg@85.218.163.88) (Quit: leaving)
[04:30:05] *** Joins: scoobydoo_ (~scooby@user/scoobydoo)
[04:30:06] *** Quits: scoobydoo_ (~scooby@user/scoobydoo) (Excess Flood)
[04:30:26] *** Joins: scoobydoo_ (~scooby@user/scoobydoo)
[04:30:27] *** Quits: scoobydoo_ (~scooby@user/scoobydoo) (Excess Flood)
[04:30:51] *** Joins: Guest1054 (~Guest10@2601:586:c403:2600:ece2:dd54:23ce:34d7)
[04:31:13] <systemfault> ljharb: If I have some awful library like RxJS where my type has a billion methods, can webpack, or any bundler, remove those that are unused or we're not there yet?
[04:31:26] <systemfault> s/type/prototype
[04:31:47] *** Parts: Guest1054 (~Guest10@2601:586:c403:2600:ece2:dd54:23ce:34d7) ()
[04:31:49] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[04:32:26] *** Joins: scoobydoo_ (~scooby@user/scoobydoo)
[04:32:27] *** Quits: scoobydoo_ (~scooby@user/scoobydoo) (Excess Flood)
[04:32:39] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 265 seconds)
[04:32:48] *** Joins: scoobydoo_ (~scooby@user/scoobydoo)
[04:32:48] *** scoobydoo_ is now known as scoobydoo
[04:32:49] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Excess Flood)
[04:32:54] *** Joins: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net)
[04:33:56] <ljharb> systemfault: sure, if they're all only deep-imported. if they're done with that lazy "manifest" or "barrel" import method, then you'd need to rely on tree-shaking half-assing the cleanup.
[04:37:33] *** Joins: silly_ (~silly@user/silly)
[04:40:45] *** Joins: silly (~silly@user/silly)
[04:40:55] *** Quits: sillyslux__ (~silly@user/silly) (Ping timeout: 252 seconds)
[04:41:22] <systemfault> Maybe I'm not clear, sorry. If I have: `class Whatever { x() {...} y() {...} z() {...} }` in my code and only use Whatever#x, then bundle it using webpack,  are Whatever#y and Whatever#z guaranteed to be removed?
[04:43:02] <GreenJello> systemfault, we're not there yet, and likely never will be
[04:43:14] <GreenJello> closure compiler is the only thing crazy enough to attempt that
[04:43:17] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 265 seconds)
[04:43:34] <systemfault> That was one of the reasons why the rxjs people decided to do with the `pipe` stuff..
[04:45:26] <systemfault> *to go
[04:45:53] *** Quits: nomic (~nomic@185.192.69.176) (Quit: Leaving)
[04:48:03] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:49:24] *** Quits: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net) (Quit: Leaving.)
[04:54:15] *** Joins: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net)
[04:56:16] *** Quits: gehn (~gehn@user/gehn) (Quit: Leaving)
[04:56:32] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[04:57:06] <FlorianBad> What would be a possible reason why `console.log('b.specs='+b.specs)` shows 'b.specs=[object object]' (as I expected) while `console.log('b.specs.abc='+('abc' in b.specs ? '1' : '0') )` seems to crash with no error?
[04:57:39] <FlorianBad> (note that abc isn't in that object)
[05:01:45] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 260 seconds)
[05:02:39] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[05:03:47] *** Joins: nomic (~nomic@185.217.117.156)
[05:03:47] *** Quits: hassoon (hassoon@user/hassoon) (Ping timeout: 240 seconds)
[05:03:56] *** Quits: nomic (~nomic@185.217.117.156) (Read error: Connection reset by peer)
[05:04:15] *** Joins: nomic (~nomic@185.217.117.156)
[05:06:01] *** Joins: sam_1 (~sam_1@87.51.251.118)
[05:08:13] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[05:10:34] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 268 seconds)
[05:14:53] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 268 seconds)
[05:17:34] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 268 seconds)
[05:17:46] *** Quits: brentaarnold (~brentaarn@24.112.92.157) (Ping timeout: 252 seconds)
[05:19:24] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[05:19:43] *** Joins: jazzy (~jaziz@2600:380:865d:911b:e5e1:b429:e129:6354)
[05:19:45] <FlorianBad> on one knows? :(
[05:21:06] <ThePendulum> it just hangs, or how does it crash?
[05:22:43] *** Joins: brentaarnold (~brentaarn@24.112.92.157)
[05:22:51] *** Joins: sam_1 (~sam_1@87.51.251.118)
[05:24:00] *** Quits: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net) (Quit: Leaving.)
[05:24:37] <FlorianBad> ah... damn, I guess I'm tired :)  I had a filter on the console log so I couldn't see the output lol.
[05:24:55] <FlorianBad> well, in some cases b.specs was not defined lol..
[05:26:14] *** Quits: systemdlete (~systemdle@c-174-50-164-14.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[05:27:02] <FlorianBad> So, my issue is something else then... Why doing this doesn't work when abc doesn't exist?   `if( b.specs && b.specs.abc !== '' )` ?
[05:27:21] <FlorianBad> Shouldn't it just be equivalent to not '' ?
[05:27:45] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 265 seconds)
[05:28:00] <FlorianBad> I'm trying to have the if being false if either the value doesn't exist, or if it's an empty string
[05:28:01] <robertmaxrees> FlorianBad what about it "doesn't work"?
[05:28:04] *** Joins: Snyp (~Snyp@49.207.198.150)
[05:28:17] <GreenJello> if( b.specs && b.specs.abc )`
[05:28:35] <GreenJello> !truthy
[05:28:36] <jellobot> GreenJello, The 'falsy' values in JavaScript are undefined, null, 0, -0, 0n, NaN, '', and false. The 'truthy' values are all other values. All objects are truthy. There is nothing both truthy and falsy, or neither truthy nor falsy.
[05:29:12] <FlorianBad> yeah, 0 is something that I want though
[05:29:29] <FlorianBad> I'm trying to avoid writing a 300 characters if condition
[05:29:51] <GreenJello> if( b.specs && b.specs.abc != null && b.specs.abc !== '' )`
[05:30:26] <GreenJello> well, you have a pretty specific and unusual set of requirements
[05:30:29] <FlorianBad> hmm, and non existent is null then?
[05:30:31] *** Quits: gggp (~textual@111.63.44.5) (Ping timeout: 268 seconds)
[05:30:47] <GreenJello> checks for null or undefined
[05:30:50] <onosendi> Why not `if (b?.specs?.abc) {}` ?
[05:31:16] <FlorianBad> onosendi: hmmmmm..... very interested in this, what is that called? I never saw it before
[05:31:22] *** Quits: gggpkm (~gggpkm@111-251-126-187.dynamic-ip.hinet.net) (Ping timeout: 260 seconds)
[05:31:42] <GreenJello> optional chaining, but it wouldn't really help here
[05:31:45] <onosendi> FlorianBad: optional chaining.
[05:32:06] <GreenJello> guess it is a little shorter: if( b.specs?.abc != null && b.specs?.abc !== '' )
[05:32:14] <FlorianBad> yeah it wouldn't because it's about abc itself, but still I love that I just learned it :)
[05:33:28] <FlorianBad> so undefined is null only if == but not if ===, correct? so `!= null` is also false if undefined?
[05:33:39] *** Joins: gggp (~textual@111.63.44.9)
[05:34:02] <wroathe> Heh. This is concerning: https://github.com/tc39/proposal-pipeline-operator/issues/205#issuecomment-918700396
[05:34:04] <GreenJello> yes
[05:34:13] <FlorianBad> ok, cool :)
[05:34:35] <wroathe> Seems to be a lot of that going around. People spend too much time writing and not enough time reading.
[05:34:37] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Ping timeout: 268 seconds)
[05:36:31] <FlorianBad> Probably true :)
[05:36:34] <sickdyd> I'm gettin a date from a CMS that is in UTC ("2021-09-30T15:00:00+0000"), then I need to calculate the difference of days between that date and the end of the month. The problem is that the date gets converted to JST so that the date becomes "Fri Oct 01 2021 00:00:00 GMT+0900 (Japan Standard Time)" so when I substract the remaining days to the end of the month to this date I get a negative number.
[05:38:19] *** Quits: Snyp (~Snyp@49.207.198.150) (Ping timeout: 268 seconds)
[05:40:51] *** Joins: sam_1 (~sam_1@87.51.251.118)
[05:45:09] *** Quits: Axy (~Axy@user/axy) (Ping timeout: 265 seconds)
[05:45:11] *** Joins: systemdlete (~systemdle@c-73-48-156-19.hsd1.ca.comcast.net)
[05:45:43] *** Joins: Axy (~Axy@user/axy)
[05:45:56] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 268 seconds)
[05:47:08] *** Joins: silly_ (~silly@user/silly)
[05:47:31] <systemfault> wroathe: Yeah, that's definitely not their brightest moment....
[05:49:41] *** Joins: sillyslux__ (~silly@user/silly)
[05:49:52] <Slade> hmm if i pay these people money i get magic immunity to lot of laws. https://sacscoc.org/
[05:49:54] <Slade> err
[05:50:00] * Slade kicks that message over a window
[05:50:15] *** Quits: silly (~silly@user/silly) (Ping timeout: 268 seconds)
[05:51:55] *** Quits: arthurpbs (~arthurpbs@168.121.98.59) (Ping timeout: 260 seconds)
[05:52:58] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 252 seconds)
[05:56:52] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[05:57:02] *** Quits: systemdlete (~systemdle@c-73-48-156-19.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[05:57:41] <ezzieyguywuf> if I have an array of {promise, someString}, get can I use `Promise.all()` on all the promises in the array? i.e. I might have `[{promise: promise1, someString: "someString1"}, {promise: promise2, someString: "someString2"}]`
[05:57:56] <ezzieyguywuf> s/get can I/how can I/
[05:59:30] *** Quits: gggp (~textual@111.63.44.9) (Ping timeout: 268 seconds)
[06:00:14] *** Joins: gggp (~textual@111.63.44.9)
[06:00:46] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[06:02:07] <wroathe> systemfault: They just closed the thread
[06:02:21] <systemfault> Yeah, drama-overflow
[06:02:31] <wroathe> "I'm going to go ahead and close this thread; it appears to have run its course, and in any case is filled with unacceptable levels of hostility."
[06:04:09] <wroathe> Using respect as a justification for prematurely closing threads is not a good look, in my view. The least he could've done is gone over some of the most important points in the original post and shared some linkes to prior conversation.
[06:04:42] <wroathe> The OP put in a lot of good work, and added a lot of value. It deserves to be responded to in a similary thoughtful way by the proposal champions.
[06:04:43] <systemfault> ezzieyguywuf: .map
[06:06:11] <systemfault> const allResolvedPromises = await Promise.all(arr.map(a => a.promise));
[06:09:52] *** Joins: systemdlete (~systemdle@c-73-41-90-112.hsd1.ca.comcast.net)
[06:11:13] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 268 seconds)
[06:12:34] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[06:14:35] *** Joins: deviantfero (~deviantfe@190.150.27.58)
[06:16:05] *** Quits: birkoff (birkoff@user/birkoff) (Quit: ZNC 1.8.2 - https://znc.in)
[06:18:34] *** Joins: jamea (~jamea@177.239.87.39)
[06:18:46] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[06:18:58] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[06:20:54] *** Joins: cheater (~Username@user/cheater)
[06:21:05] *** Quits: systemdlete (~systemdle@c-73-41-90-112.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[06:23:44] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.2)
[06:27:04] *** Joins: bynx (~bynx@fw.rry.vaskywire.net)
[06:27:40] *** Quits: bynx (~bynx@fw.rry.vaskywire.net) (Client Quit)
[06:27:57] *** Joins: bynx (~bynx@fw.rry.vaskywire.net)
[06:28:13] *** Quits: bynx (~bynx@fw.rry.vaskywire.net) (Client Quit)
[06:28:44] *** Quits: deviantfero (~deviantfe@190.150.27.58) (Quit: WeeChat 3.2)
[06:28:54] *** Joins: bynx (~bynx@fw.rry.vaskywire.net)
[06:29:08] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Ping timeout: 265 seconds)
[06:29:13] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:29:31] *** Joins: electr0n (~electr0n@about/security/founder/electr0n)
[06:34:14] *** Joins: systemdlete (~systemdle@c-73-41-77-120.hsd1.ca.comcast.net)
[06:34:54] *** Quits: bynx (~bynx@fw.rry.vaskywire.net) (Quit: leaving)
[06:38:57] *** Joins: bynx (~bynx@fw.rry.vaskywire.net)
[06:45:33] *** Joins: sam_1 (~sam_1@87.51.251.118)
[06:50:04] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 268 seconds)
[06:50:13] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[06:52:32] *** Quits: kakashiA1 (~kakashi@ip-37-201-198-190.hsi13.unitymediagroup.de) (Ping timeout: 268 seconds)
[06:53:40] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) (Quit: Leaving...)
[06:55:24] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[06:55:24] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 268 seconds)
[06:57:48] *** Joins: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net)
[06:57:54] *** Quits: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net) (Client Quit)
[07:01:04] *** Quits: bynx (~bynx@fw.rry.vaskywire.net) (Quit: leaving)
[07:09:01] <ezzieyguywuf> systemfault: thanks
[07:09:57] *** Joins: audiocat (~audio@2603-8081-1800-6a6f-ee32-c9a4-2f90-9021.res6.spectrum.com)
[07:19:03] *** Joins: silly_ (~silly@user/silly)
[07:19:40] *** Quits: magsilva (~kvirc@177.42.47.187) (Ping timeout: 268 seconds)
[07:21:13] *** Joins: Rockwood (~Rocky@user/rocky)
[07:21:57] *** Joins: silly (~silly@user/silly)
[07:22:54] *** Quits: sillyslux__ (~silly@user/silly) (Ping timeout: 260 seconds)
[07:23:35] *** Joins: sillyslux__ (~silly@user/silly)
[07:24:36] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 268 seconds)
[07:27:03] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[07:27:37] *** Quits: silly (~silly@user/silly) (Ping timeout: 265 seconds)
[07:32:00] *** Quits: systemdlete (~systemdle@c-73-41-77-120.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[07:36:37] *** Joins: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net)
[07:36:42] *** Quits: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net) (Client Quit)
[07:38:31] *** Joins: Rockwood_ (~Rocky@user/rocky)
[07:40:11] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 265 seconds)
[07:44:00] *** Joins: systemdlete (~systemdle@c-73-41-243-185.hsd1.ca.comcast.net)
[07:44:00] <ezzieyguywuf> why does `getDependencies` return before `recurseDeps` has finished recursing? http://dpaste.com/3LP4DB996
[07:44:11] <ezzieyguywuf> am I mis-using the promises and `await` syntax?
[07:44:16] *** Rockwood_ is now known as Rockwood
[07:44:52] <GreenJello> !repaste
[07:44:54] <jellobot> GreenJello, Repasted ezzieyguywuf's paste to https://git.io/Ju9Dn
[07:46:37] <GreenJello> ezzieyguywuf, the code looks correct, but it does return a promise when the first await is reached
[07:46:41] <GreenJello> no way around that
[07:47:06] <GreenJello> to the caller, an async function just looks like any promise-returning function
[07:47:22] <GreenJello> it's a style choice for implementing an individual function
[07:47:24] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[07:49:18] <ezzieyguywuf> I'd like to do "getDependencies(pkg).then(deps => console.log(`getDeps = ${JSON.stringify(deps)`).catch(err => console.log(err)"
[07:49:43] *** Joins: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net)
[07:49:49] *** Quits: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net) (Client Quit)
[07:49:54] <ezzieyguywuf> but my `getDeps = ...` console log seems to display after only the first recursion, and then after that I still see a bunch of recursion logs "recursed with..."
[07:50:01] <ezzieyguywuf> GreenJello: ^
[07:50:55] *** Joins: birkoff (birkoff@birkoff.thunderirc.net)
[07:51:18] *** birkoff is now known as Guest2026
[07:51:51] <GreenJello> oh, misread the code. forEach ignores what your callback returns, so you won't be waiting on the promises there
[07:52:11] <GreenJello> you need to .map instead and Promise.all those promises
[07:53:00] <GreenJello> or if you want them sequential: await Promise.all(promises).then(async (results) => { for (const result of results) { const dep = …
[07:53:18] <ezzieyguywuf> ah of course!
[07:53:29] <ezzieyguywuf> GreenJello: thanks a lot.
[07:53:45] <GreenJello> btw, you can also flatten this to const results = await Promise.all(promises);
[07:54:00] <GreenJello> with either solution
[07:54:17] <ezzieyguywuf> ah hah, yes that is more readable
[07:54:27] <ezzieyguywuf> I thought mixing `await` and `.then` was a bit fishy
[07:54:37] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:38a2:d61b:8252:515d)
[07:54:50] <ljharb> ezzieyguywuf: it's not, it's totally fine to mix them
[07:54:58] * ezzieyguywuf nods
[07:56:13] <ezzieyguywuf> is there a more succinct way of doing these 5 lines? https://gist.github.com/brigand-bot/c196dd6327c048df95c54e3d269b18ab#file-js-L54-L58
[07:56:20] <ezzieyguywuf> maybe a list comprehension? is that a thing in javascript?
[07:58:41] <ljharb> ezzieyguywuf: no, there's no comprehensions in JS nor will there ever be, thankfully
[07:58:53] <ezzieyguywuf> hah probs for the best
[07:58:59] <ezzieyguywuf> there's plenty in the language as it is
[07:59:01] <ljharb> so yes, there's a more concise way
[07:59:15] <ljharb> `const promises = Object.keys(deps).map(getPackument);`
[07:59:24] <ljharb> !iterations @ ezzieyguywuf
[07:59:25] <jellobot> ezzieyguywuf, ECMAScript's Array contains a number of built-in methods for iteration (e.g., map, reduce, every, some, filter, and forEach). They relieve the need for manual iteration, provide better abstraction than a `for` loop, and make it clear what your iteration is doing. See https://gist.github.com/ljharb/58faf1cfcb4e6808f74aae4ef7944cff
[07:59:49] <ljharb> ezzieyguywuf: btw why are you making your own getPackument when `@npmcli/arborist` has that already
[07:59:54] <ljharb> like, the thing actual npm uses
[08:00:21] <ljharb> it's highly unlikely arborist doesn't have the thing you need to do any npm registry or node_modules interaction, since that's npm's core.
[08:01:10] *** Quits: Talon (Talon@172.77.100.181) (Ping timeout: 260 seconds)
[08:01:16] *** Joins: Talon_ (Talon@172.77.105.154)
[08:01:22] <ezzieyguywuf> ljharb: sweet thanks
[08:01:34] <ezzieyguywuf> ljharb: first I've heard of arborist I will check it out
[08:01:40] <ljharb> it's the core of npm 7
[08:01:45] <rustyshackleford> we've been hiring more experienced people at work to offset the young people
[08:01:47] <ezzieyguywuf> 🤣
[08:02:08] <ljharb> lol
[08:02:10] <rustyshackleford> it seems like every time we hire someone new, we lose someone
[08:02:20] <ljharb> probably not caused by the hiring
[08:03:05] *** Joins: ferdna (~ferdna@user/ferdna)
[08:03:43] <wroathe> rustyshackleford: Why are they leaving?
[08:03:52] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 265 seconds)
[08:04:09] <rustyshackleford> ljharb: nope but its also not progress
[08:04:16] <rustyshackleford> well partially
[08:04:49] <rustyshackleford> I think some people are pissed that their filling these positions with new hires
[08:05:01] <rustyshackleford> instead of promoting people who already work there
[08:05:26] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[08:05:48] <ljharb> rustyshackleford: then do a bit of a mix
[08:06:15] <rustyshackleford> well I'm not management
[08:06:42] <rustyshackleford> I'm just here venting about work again ha
[08:06:48] <systemfault> According to their hiring practices, you will never be
[08:06:56] <systemfault> (manager)
[08:06:56] *** Joins: sam_1 (~sam_1@87.51.251.118)
[08:07:49] <rustyshackleford> systemfault: I wouldn't want to be in management either
[08:07:53] <theskillwithin> 😋
[08:08:09] <rustyshackleford> I need a second career haha
[08:08:11] *** Quits: nomic (~nomic@185.217.117.156) (Quit: Leaving)
[08:08:16] <theskillwithin> i think he was joking anyways
[08:08:34] <wroathe> I'm not sure that upward mobility is such a strong motivating factor in developer flight. I suspect it has more to do with the day to day decision making from the technical leaders in the org.
[08:08:51] *** Joins: iamzero (~iamzero@2a02:2f0f:9109:8d00:8f91:35ee:c1b:9651)
[08:09:23] <wroathe> Granted, being promoted to a leadership role would fix that, but for many I think they don't necessarily want that amount of responsibility
[08:09:34] <rustyshackleford> wroathe: there are varying levels of tech also
[08:09:34] <theskillwithin> if your not changing jobs every 3 years, apparently your leaving money on the table
[08:10:02] <rustyshackleford> wroathe: promotion/compensation to recognize people who have done great work would help retain your smart people
[08:10:12] <rustyshackleford> but instead they leave with all of that domain knowledge
[08:10:34] <ljharb> the best way to be promoted is indeed to change jobs
[08:10:38] <theskillwithin> can get dat % increase,  or get a new job and get on another level increase
[08:10:46] <ljharb> and "every 3 years" is probably not changing jobs nearly often enough
[08:10:52] <Rockwood> theskillwithin, o/
[08:10:56] <theskillwithin> i mean on avg
[08:11:04] <wroathe> Yeah, the market is such that at the slightest sign of friction within your organization you can just interview for another job and likely get a raise to go with it
[08:11:17] <wroathe> Makes retaining developers quite difficult
[08:11:20] <theskillwithin> esp if your onnit, and your skills are outgrowing ur pay
[08:11:28] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 268 seconds)
[08:11:48] <rustyshackleford> I guess I should job hop
[08:11:53] <ljharb> ThePendulum: 3 years is not an average, it's an upper limit
[08:11:56] <ljharb> theskillwithin: ^
[08:12:01] <theskillwithin> haha
[08:12:08] <rustyshackleford> it seems like more of the same BS though
[08:12:09] <ljharb> theskillwithin: leaving your job every year is reasonable because that's where the cliff is
[08:12:15] <rustyshackleford> I almost want to work in a different field
[08:12:26] <ljharb> theskillwithin: if you stay at your job for 3+ years you'd better be getting paid serious fuck you money
[08:12:37] <rustyshackleford> ljharb: if I'm hiring someone who gets a new job every year I would see that as a red flag
[08:12:50] <rustyshackleford> maybe they're not as competent as they say
[08:12:57] <rustyshackleford> and its for sure a sign they won't stick around
[08:13:02] <theskillwithin> ljharb the lower bound is, no one wants to hire someone who changes jobs frequently of course right
[08:13:10] <ljharb> rustyshackleford: then you're not going to hire the best people
[08:13:19] <ljharb> rustyshackleford: loyalty is a red flag
[08:13:28] <ljharb> rustyshackleford: this is capitalism, loyalty is stupid
[08:13:39] <ljharb> rustyshackleford: the instant you get a better offer, either you take it, or you're a sucker
[08:13:44] <ljharb> rustyshackleford: and hiring suckers is bad busines
[08:13:45] <ljharb> s
[08:13:46] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:38a2:d61b:8252:515d) (Ping timeout: 260 seconds)
[08:13:47] *** Parts: theskillwithin (~theskillw@user/theskillwithin) (Textual IRC Client: www.textualapp.com)
[08:14:01] *** Joins: theskillwithin (~theskillw@user/theskillwithin)
[08:14:01] <ljharb> aw, theskillwithin left
[08:14:07] <ljharb> theskillwithin: nah
[08:14:09] <rustyshackleford> if I'm running say, a small business, I think loyalty is worth a lot
[08:14:17] <ljharb> theskillwithin: you can change your job every year and you can easily get hired
[08:14:18] <theskillwithin> ljharb new keyboard, sometimes i hit the end key by accident i think, and leave
[08:14:22] <rustyshackleford> reputation and trust are worth a lot
[08:14:26] <theskillwithin> or seomthing idk
[08:14:36] <ljharb> rustyshackleford: if your ambition is "to be a SMALL business" then you deserve the mediocre crop you get from those hiring practices
[08:14:39] <theskillwithin> i left my last job in 3 years, to the exact day
[08:14:50] <wroathe> rustyshackleford: Contractors often take a new contract every year. There's an unofficial rule that resulted from a court case against Microsoft where contractors sued for missed benefits that makes it so companies will only retain you for an arbitrary amount of time before they say you need to either take some time off or find a new job
[08:15:00] <ljharb> theskillwithin: it's fine to stay 3 years, or 4, or 8. you just have to seriously defend staying longer than 1-2 years anywhere.
[08:15:11] <theskillwithin> but to be fair, at my last job, i did half way thru end up working almost on entire diff thing
[08:15:25] <ljharb> rustyshackleford: if your goal is to be a successful business? then you should PREFER people that know their own worth and don't stay at a job a DAY longer than they're getting paid top dollar to do so.
[08:15:52] <rustyshackleford> ljharb: on day 1, you don't know this person. they still need to earn a reputation
[08:16:03] <ljharb> rustyshackleford: sure. i'm not talking about < 1 year
[08:16:14] <ljharb> rustyshackleford: that's what the 1 year cliff is for. to give it some time to know them
[08:16:23] <rustyshackleford> I'm not giving that person a key, or letting them close the restaurant
[08:16:34] <rustyshackleford> or whatever business we're in
[08:16:35] <ljharb> rustyshackleford: then you misunderstand how engineering works
[08:16:43] <theskillwithin> and the new thing was bluehost, so i was like i didn't sign up to work at this wtf
[08:16:51] <ljharb> rustyshackleford: the instant someone can land code in production, they're like a manager who can close, in a restaurant
[08:17:16] <ljharb> rustyshackleford: there are only restaurant managers in code. there are no busboys or waiters.
[08:17:19] <ljharb> iow, it's a terrible analogy
[08:17:31] *** Quits: gggp (~textual@111.63.44.9) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:17:35] <rustyshackleford> there definitely are busboys and waiters
[08:17:47] <ljharb> rustyshackleford: not in engineering.
[08:17:47] <rustyshackleford> if we're going to keep going with this bad analogy
[08:17:54] <ljharb> rustyshackleford: there's people that have that level of competency
[08:18:03] <ljharb> rustyshackleford: but *everyone* has a manager level of authority
[08:18:09] <ljharb> again, repeating the terrible analogy :-)
[08:18:11] <rustyshackleford> junior devs who need some guidance
[08:18:21] <wroathe> rustyshackleford: Wait, are you saying that all developers new to your organization are unrpoven busboys and waiters?
[08:18:22] <ljharb> they can still get code into prod and break your business
[08:18:37] <rustyshackleford> wroathe: not quite
[08:18:53] <rustyshackleford> wroathe: on day one, maybe
[08:19:09] <rustyshackleford> let me hear them talk and see some code they write and then I'll form my opinion
[08:19:13] <theskillwithin> wroathe he didn't start this analogy, which the person who did said its terrible analogy, lets not hold him to it
[08:19:22] <wroathe> theskillwithin: Fair enough
[08:19:48] <rustyshackleford> so this one new hire worked at Apple for 8 months
[08:19:56] <rustyshackleford> is that impressive, or a red flag?
[08:20:14] <systemfault> I would personally have waited another 4 months.
[08:20:29] <theskillwithin> same
[08:20:34] <rustyshackleford> I get being new to node, but he's integrating a new SDK and seems unfamiliar with how package.json works
[08:21:16] <rustyshackleford> why not ride out Apple for a few years and have that on your resume. Am I to believe a small bank gave him a much better offer?
[08:22:01] <systemfault> Maybe he did not like the culture?
[08:22:21] <systemfault> I would personally work for Google or Apple only one year... for my resume
[08:22:23] <wroathe> rustyshackleford: Could be. For example, if the was contracting for Apple the staffing firm he was going through might have been billing him at a high Apple-worthy rate, but only paying him a pittance
[08:22:42] <systemfault> Otherwise, working for giants like them is not appealing to me.
[08:22:49] <wroathe> rustyshackleford: It's entirely possible he was being billed to Apple at $140/hr, and the staffing firm was only giving him $40 of that.
[08:22:55] <theskillwithin> systemfault plot twist, he worked at the genius bar
[08:22:59] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:38a2:d61b:8252:515d)
[08:23:08] <rustyshackleford> he put it on his resume as Apple, not as XYZ consulting firm
[08:23:12] <wroathe> theskillwithin: But the _real_ genius bar. Not the fake ones :P
[08:23:22] <ljharb> rustyshackleford: i think leaving after 8 months when there's a 12 month cliff is probably not a good sign
[08:23:23] <theskillwithin> lol
[08:23:23] <wroathe> rustyshackleford: People don't put consulting firms on resumes
[08:23:28] <ljharb> rustyshackleford: but leaving at 12 months one day? smart.
[08:23:30] *** Joins: sam_1 (~sam_1@87.51.251.118)
[08:23:59] <rustyshackleford> I need to find a career that pays a comparable amount
[08:24:03] <GreenJello> ljharb, I'm not qualified to calculate that
[08:24:08] <rustyshackleford> but doing something different, maybe more fun
[08:24:27] <ljharb> GreenJello: well, potentially smart, i guess :-)
[08:24:42] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:38a2:d61b:8252:515d) (Client Quit)
[08:24:45] <ljharb> whereas leaving before a cliff is unlikely to ever be a smart move, or a willing one
[08:25:10] *** Joins: gggp (~textual@111.63.44.9)
[08:25:12] <theskillwithin> can be explained if you had moved to a diff state or something like that
[08:25:16] <wroathe> rustyshackleford: Bomb defusal expert
[08:25:32] <rustyshackleford> wroathe: yeah thats the idea
[08:25:36] <rustyshackleford> jumping out of helicopters
[08:25:42] <wroathe> High risk high reward
[08:25:50] <rustyshackleford> wrestling bears
[08:25:51] <rustyshackleford> idk
[08:26:07] <rustyshackleford> lately I'm so bored of working from home and sitting at a desk all day
[08:26:09] <wroathe> https://www.youtube.com/watch?v=NAOQH4xEyhM
[08:26:09] <skillbot> YouTube Title: Monty Python - careers advice
[08:26:21] <wroathe> rustyshackleford: This is rapidly turning into a therapy session for you :P
[08:26:53] <rustyshackleford> wroathe: I love the one where you pay to have an argument
[08:27:13] <wroathe> rustyshackleford: Yeah, but this one is particularly relevant to you in this situation :P
[08:27:16] <theskillwithin> lol
[08:27:37] *** Quits: gggp (~textual@111.63.44.9) (Client Quit)
[08:27:46] <rustyshackleford> wroathe: lol this is pretty on point
[08:28:53] <rustyshackleford> wroathe: I just joked about wrestling bears haha
[08:29:14] <wroathe> rustyshackleford: Yes, yes, that's why I linked it.
[08:29:21] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 268 seconds)
[08:30:19] *** Quits: woink (~woink@cpe-69-206-152-193.hvc.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:31:03] *** Joins: silly_ (~silly@user/silly)
[08:32:16] <rustyshackleford> wroathe: well I'm already in banking
[08:32:27] <rustyshackleford> this video didn't explain the next step towards lion taming
[08:32:29] <sheetjs> is there a line by line blame tool for webpack or rollup to identify why code is retained in the final bundle?
[08:32:33] *** Quits: sillyslux__ (~silly@user/silly) (Read error: Connection reset by peer)
[08:32:45] *** Quits: greta (uid516789@id-516789.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[08:33:01] <wroathe> rustyshackleford: bear wrestling
[08:33:06] <theskillwithin> sheetjs you mean sourcemaps?
[08:33:18] <Rockwood> sheetjs, o/
[08:33:59] <sheetjs> no, trying to import one variable on one line is pulling in ~250K of code, a lot of which is due to side effects.  trying to identify the root
[08:34:44] *** Joins: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net)
[08:34:49] <sheetjs> code is definitely being omitted, so its not some broad "tree shaking isn't working"
[08:34:57] *** Quits: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net) (Client Quit)
[08:36:34] <wroathe> sheetjs: Shake it harder
[08:36:45] <theskillwithin> usually in dev its less of a problem because on dev the code isn't uglified yet
[08:37:44] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[08:37:51] <ljharb> treeshaking is a crutch for half-assing the cleanup that direct imports would handle automatically
[08:38:15] <sheetjs> you'd be proud ljharb
[08:38:34] <sheetjs> after ~1 hour of work and some cat magic, sheetjs finally has something resembling a proper ESM build
[08:38:49] <theskillwithin> hell yes
[08:38:55] <sheetjs> actually there are two, because browser ESM doesn't play nice with `import * as fs from "fs"`
[08:38:58] <ljharb> i mean, i'd be prouder if you just stuck to pure CJS
[08:39:05] <ljharb> works with every build process
[08:39:09] <sheetjs> angular forced our hands
[08:39:20] <ljharb> angular doesn't use a bundler?
[08:39:39] <sheetjs> starting with angular 10, CJS modules elicit yellow complaints
[08:39:54] <ljharb> fucking angular
[08:39:59] <sheetjs> CommonJS or AMD dependencies can cause optimization bailouts.
[08:40:00] <ljharb> what about a dual package?
[08:40:06] <ljharb> like, ESM that imports CJS?
[08:40:10] *** Quits: Nitrousoxide (~msdos@user/nitrousoxide) (Ping timeout: 252 seconds)
[08:40:15] <sheetjs> tried that, same issue
[08:40:21] <ljharb> what assholes
[08:40:27] <ljharb> tbh i'd say just keep the yellow complaints
[08:40:33] <ljharb> that's a really dumb policy that will warn on 99% of npm
[08:41:21] <theskillwithin> idk man, i was using cjs import on carbon and i got like hundreds of icons I didn't need in my bundle
[08:41:38] *** Joins: sam_1 (~sam_1@87.51.251.118)
[08:42:02] *** Joins: Nitrousoxide (~msdos@user/nitrousoxide)
[08:42:05] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 268 seconds)
[08:42:28] <ljharb> that's not CJS, that's the package doing a manifest export instead of proper deep imports.
[08:42:29] <sheetjs> the CJS still exists.  in fact, the transformation was originally a sed command
[08:42:32] <theskillwithin> btw dont use carbon components, im ripping them out one by one
[08:42:55] <ljharb> sheetjs: yeah but it creates a huge hazard to duplicate anything stafeul
[08:43:12] <ljharb> sheetjs: in fact it's a best practice in dual packages for all stateful pieces to be CJS only, and for both ESM and CJS to pull it in
[08:43:24] <theskillwithin> i feel like half my career i spend time with outdated UI component libraries, ripping them out
[08:47:38] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 268 seconds)
[08:50:17] *** Joins: nomic (~nomic@185.217.117.156)
[08:51:29] *** Quits: nomic (~nomic@185.217.117.156) (Client Quit)
[08:52:30] *** Quits: audiocat (~audio@2603-8081-1800-6a6f-ee32-c9a4-2f90-9021.res6.spectrum.com) (Ping timeout: 260 seconds)
[08:54:51] <theskillwithin> ljharb stateful pieces?
[08:55:31] *** Joins: onosendi (~onosendi@user/onosendi)
[08:55:38] <theskillwithin> oh
[08:55:55] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[08:56:26] <theskillwithin> ljharb idk when i pull up my bundle analyzer, its usually not esm causing the problems.  so if that can be solved then im 100% onboard
[09:07:14] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:07:36] *** Joins: nomic (~nomic@185.217.117.156)
[09:08:53] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.2)
[09:10:08] *** Joins: onosendi (~onosendi@user/onosendi)
[09:12:15] *** Joins: mdemo (~mdemo@c-73-40-53-74.hsd1.wv.comcast.net)
[09:12:30] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[09:12:54] *** Joins: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net)
[09:13:45] *** Quits: jamea (~jamea@177.239.87.39) (Ping timeout: 268 seconds)
[09:15:23] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.2)
[09:18:47] *** Quits: autistic (~autistic@170.84.56.9) (Ping timeout: 245 seconds)
[09:25:04] *** Joins: sillyslux__ (~silly@user/silly)
[09:28:34] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 252 seconds)
[09:32:15] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 268 seconds)
[09:33:38] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[09:34:04] *** Joins: onosendi (~onosendi@user/onosendi)
[09:34:04] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[09:39:38] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.2)
[09:39:56] *** Joins: Gurkenglas (~Gurkengla@dslb-002-207-014-195.002.207.pools.vodafone-ip.de)
[09:40:36] *** Quits: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net) (Quit: Leaving.)
[09:41:17] *** Quits: systemdlete (~systemdle@c-73-41-243-185.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[09:47:04] <ljharb> theskillwithin: not sure what you mean
[09:47:15] <ljharb> theskillwithin: bundle problems have nothing to do with the module format, really
[09:48:40] <ashnur> lol, angular takes issues with cjs?
[09:48:40] <theskillwithin> well in this case it did, because realized changing to their esm fixed the problem
[09:48:41] <ashnur> why
[09:48:59] <theskillwithin> so same exact package, just using their esm fixed
[09:49:00] <ashnur> do they know what year this is
[09:49:54] <theskillwithin> ashnur id say that just about using angular in general, but i don't wanna be mean
[09:50:39] <ljharb> i mean yeah, angular's trash anyways, but still this is pretty bad
[09:50:52] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[09:51:05] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[09:53:27] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[09:53:37] *** Joins: systemdlete (~systemdle@c-73-116-48-52.hsd1.ca.comcast.net)
[09:57:13] <theskillwithin> Only Murderers in the Building,  show worth it to get hulu,  but wait till season is over so u can pay just one month of hulu to see it
[10:03:06] *** Quits: Drgonz0 (~Drgonz0@107-179-254-222.cpe.teksavvy.com) ()
[10:03:49] <theskillwithin> i lack patients tho hehe
[10:03:52] <shan> sup kids
[10:04:04] <shan> how would you unify querySelector and querySelectorAll
[10:04:15] <theskillwithin> i wouldn't
[10:04:22] <shan> F
[10:04:30] <shan> ok let's assume you would~
[10:04:52] <shan> i want to make a unified query() function for campfire
[10:05:03] <theskillwithin> ugh
[10:05:12] <theskillwithin> well
[10:05:25] <theskillwithin> the only logical way is to start with querySelectorAll
[10:05:46] <theskillwithin> then determine if theres multiple or not
[10:05:54] <shan> ofc
[10:05:57] *** Quits: junktext (~junktext@77.247.181.215) (Ping timeout: 268 seconds)
[10:06:02] <shan> but how does the user use it
[10:07:49] <theskillwithin> good point, ugh this really sucks i don't wanna think about this
[10:07:54] <shan> LMFAO
[10:08:20] <ljharb> shan: what do you mean unify
[10:08:29] <shan> like, use the same function to stand in for both
[10:08:31] <ljharb> shan: the answer is "literally always use qSA and ignore qS entirely"
[10:08:37] <shan> bruh
[10:08:40] <ljharb> i'm serious
[10:08:43] <ljharb> just always return an array
[10:08:53] <shan> but what if the user wants a single element and not a collection
[10:08:55] <ljharb> you can't make a single function that stands in for both, practically speaking
[10:08:59] <ljharb> then the user can do `[0]` and can also stfui
[10:09:05] <shan> i dont want the clunk of doing cf.query(thing)[0]
[10:09:09] <ljharb> or they can do `.map` or `.forEach`
[10:09:16] <ljharb> shan: that's not clunk, that's superior
[10:09:20] <ljharb> what's clunky is having both APIs.
[10:09:26] <ljharb> the browser messed up by providing qS.
[10:09:38] <shan> but what if they only want the first element matching a certain selector
[10:10:34] <ljharb> then they're stupid
[10:10:35] *** Joins: onizu (uid373383@id-373383.uxbridge.irccloud.com)
[10:10:50] <ljharb> any operation they want to do on `el` they can do identically on `[el]`
[10:10:54] <shan> ooh i could make them pass a callback :0
[10:10:56] <ljharb> it's a list, just "do the thing" on each item in the list
[10:11:10] <ljharb> or you could just always return an array since the language *literally has that built in*
[10:11:22] <ljharb> (the ability to provide a callback to do a thing for each item in an array, i mean)
[10:11:23] <theskillwithin> apparently shan is trying to rewrite jquery haha
[10:11:23] <shan> lmfao ;_; this is painful
[10:11:25] <theskillwithin> jk
[10:11:33] <shan> should i wrap queryselector at all ;_;
[10:11:38] <ljharb> it's much simpler to return a list of 0, 1, or n items, than to return null or an item
[10:11:38] <ljharb> no
[10:11:42] <shan> *queryselectorall
[10:11:43] <ljharb> you should only support qSA
[10:11:48] <ljharb> that is the only thing you need
[10:11:52] <ljharb> but also yes, why are you doing this
[10:12:00] <ljharb> either use jquery or use react, why are you fucking around with the in between
[10:12:08] <shan> idk it's just verbose to type querySelectorAll
[10:12:20] <ljharb> `var $ = document.querySelectorAll` solved
[10:12:21] <ljharb> next?
[10:12:24] <shan> bruh
[10:12:28] <theskillwithin> nah, get rid of that opinion shan its just code
[10:12:33] <shan> fair
[10:12:36] <ljharb> don't do dumb things for dumb reasons
[10:12:36] <shan> ok
[10:12:39] <shan> next up
[10:12:44] <ljharb> do dumb things for good reasons, at least.
[10:12:47] <shan> in my quest to reduce clunk im considering whether i should move event handlers to the root of the args object and do something like if(key.startsWith(on)) { elt.addEventListener(key.match(/on([a-zA-Z]+)/)[1], val) }
[10:12:58] <ljharb> you should be using event delegation, yes
[10:13:14] <shan> currently i'm doing something like cf.nu("div#id", { on: { click: doThing } })
[10:13:16] <ljharb> guess what library's the best at doing that, if you're not using react
[10:13:31] <ljharb> ohhh right this is your new jquery imitation thing
[10:13:40] <shan> should i instead do cf.nu("div#id", { onclick: doThing })
[10:13:48] <ljharb> yes, wtf is "on" for
[10:13:51] <theskillwithin> ljharb srsly?
[10:13:55] <ljharb> theskillwithin: srsly what
[10:14:00] <shan> that reduces an indent level
[10:14:11] <theskillwithin> ljharb hes writing a jquery think?  i was only joking b4
[10:14:19] <ljharb> theskillwithin: yes you're right
[10:14:23] <ljharb> theskillwithin: i'd forgotten that, is all
[10:14:23] <shan> it's not a jquery imitation ;_;
[10:14:28] <ljharb> sure it is
[10:14:28] <theskillwithin> LOL
[10:14:29] <ljharb> jquery already exists
[10:14:32] <ljharb> react already exists
[10:14:51] <shan> ;-;
[10:14:56] <ljharb> writing a replacement for "the not-good-anymore pattern" is definitely just an imitation of the thing that used-to-be-cool
[10:15:03] <ljharb> if it's for funsies or learning, go nuts, ofc
[10:15:29] <ljharb> but you simply can't beat jquery at being jquery, that market's cornered
[10:15:31] <theskillwithin> if its for fun GO for it, if not, i feel your wasting your talents
[10:15:35] <ljharb> yup
[10:15:43] <shan> "talents"
[10:15:48] <shan> lmfao ;_;
[10:16:02] <ljharb> i mean, let's be real tho, if you actually don't have talents why do you think you'd succeed at this
[10:16:12] <ljharb> (other than learning or fun)
[10:16:23] <ljharb> and if you think you'd succeed at this, modulo learning/fun, then why would you think you have no talents
[10:16:56] <ljharb> (to repeat it for like the 5th time, literally all of this cynicism is invalid if you're doing it for fun or to learn)
[10:17:18] <ljharb> just making sure you have no illusions, is all :-)
[10:17:39] <shan> i'm so confused
[10:17:44] <ljharb> what about?
[10:17:56] <shan> idk ;_;
[10:18:05] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[10:20:24] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[10:24:14] *** Quits: hax (~hax@user/hax) (Quit: Leaving)
[10:24:32] *** Joins: hax (~hax@69.165.175.67)
[10:24:32] *** Quits: hax (~hax@69.165.175.67) (Changing host)
[10:24:32] *** Joins: hax (~hax@user/hax)
[10:26:16] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[10:30:34] *** Joins: sam_1 (~sam_1@87.51.251.118)
[10:30:55] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[10:31:44] *** Joins: thiras (~thiras@user/thiras)
[10:31:45] <fweht> i cant click a button (fire the event listener) if another button with 0 opacity lies above it.  `pointer-events: auto` didnt help.  any ideas?
[10:32:59] <theskillwithin> you mean pointer-events none?  idk if that would help either
[10:33:26] <fweht> theskillwithin: ah, that would be the one!  yeah, i just read that `auto` is the default value, so it shouldnt change anything
[10:34:18] <fweht> yup, fixed it :)
[10:34:31] <theskillwithin> careful using that, can cause debug hell
[10:35:00] <fweht> good to know, but i dont see another way around for now
[10:37:19] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[10:37:19] *** Quits: mdemo (~mdemo@c-73-40-53-74.hsd1.wv.comcast.net) (Quit: The Lounge - https://thelounge.github.io)
[10:40:09] *** Joins: i0e (~is0ke3@user/is0ke3)
[10:44:47] <shan> pointer events none is pretty cool though
[10:44:57] <shan> https://xyzshantaram.github.io/FlashlightOverlay/ i used it for this
[10:45:01] <shan> works like a charm
[10:50:54] <fweht> ah thats sweet
[10:55:51] <fweht> is it bad practice to have lines like `onclick = () => window.foo ? window.foo() : null` in the html and then define the function `foo` in some script?  or should you always explicitly query the element and set event listeners?
[10:59:09] <ljharb> fweht: yes, it is
[10:59:11] <ljharb> !inline @ fweht
[10:59:11] <jellobot> fweht, Inline event handlers are essentially `eval` inside HTML markup - they're bad practice and result in poorly factored, hard-to-manage code. Seriously consider attaching your events with JavaScript, instead, eg: https://developer.mozilla.org/en/DOM/element.addEventListener
[10:59:36] <fweht> i see, thank you!
[11:00:05] *** Joins: vysn (~vysn@user/vysn)
[11:07:26] *** Quits: nomic (~nomic@185.217.117.156) (Quit: Leaving)
[11:07:48] *** Joins: nomic (~nomic@185.217.117.156)
[11:14:42] *** Quits: nomic (~nomic@185.217.117.156) (Quit: Leaving)
[11:16:54] *** Joins: nomic (~nomic@185.217.117.156)
[11:17:05] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 268 seconds)
[11:23:46] <thykka> fweht, using addEventListener has obvious advantages too, like being able to set multiple different listeners for the same element
[11:24:17] <shan> ^
[11:24:25] <shan> aEL superiority
[11:24:50] <fweht> also i saw that stuff like `ontouch` isnt even officially supported
[11:25:07] <shan> "touch" isn't an event :p
[11:26:04] <shan> ljharb: is there a list of all the things that jellobot has
[11:26:28] <ljharb> shan: no, that would invite abuse
[11:26:33] <shan> what do you mean abuse
[11:26:45] <ljharb> historically facts are editable
[11:27:07] <ljharb> they’re actually supposed to be on ecmabot, but it’s been gone for like 6 months. In the interim, jellobot replicate the facts read-only
[11:27:29] <theskillwithin> jellobot automatically detects if ecmabot is gone
[11:27:32] <ljharb> so either ecmabot will come back, or jellobot will become the source of truth, but a list allows people to look for things to vandalize on purpose.
[11:27:42] *** Quits: nomic (~nomic@185.217.117.156) (Quit: Leaving)
[11:27:47] <ljharb> it’s happened before.
[11:27:54] <shan> but like what if i want to read all the best practices
[11:28:03] <ljharb> ask
[11:28:06] <theskillwithin> ljharb 😝
[11:28:26] <ljharb> it’s a bot, not a book
[11:28:33] <shan> ;_;
[11:28:39] <mannequin> ;-;
[11:28:48] <shan> how do i know what to aks
[11:29:47] <ljharb> the factoids require context. they’ll be triggered when relevant.
[11:29:56] <theskillwithin> https://github.com/brigand/jellobot
[11:31:39] *** Quits: Jck_true (~jcktrue@188.228.89.240) (Read error: Connection reset by peer)
[11:31:41] *** Joins: Jck_true (~jcktrue@188.228.89.240)
[11:38:26] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:41:20] <theskillwithin> watching countdown: inspiration4
[11:54:19] <DPA> A canvas isn't really necessary just for a flash light: https://jsfiddle.net/2qf6a83p/
[11:56:10] <theskillwithin> ooo nea
[11:56:12] <theskillwithin> neat
[11:56:31] <theskillwithin> nice work DPA
[11:58:25] *** Joins: _banana_ (~banana_@2603-6000-b500-9ce3-7001-59e8-28e9-6730.res6.spectrum.com)
[12:01:58] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 260 seconds)
[12:02:07] *** Joins: silly_ (~silly@user/silly)
[12:02:22] *** Joins: diophantoz (~diophanto@user/diophantoz)
[12:04:29] *** Quits: sillyslux__ (~silly@user/silly) (Read error: Connection reset by peer)
[12:05:05] *** Joins: silly (~silly@user/silly)
[12:05:26] <theskillwithin> btw joing #libera-cloak !cloakme to hide your ip
[12:05:28] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[12:07:06] <theskillwithin> DPA thats really cool, i wanna do like james bond thing with it
[12:07:31] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 252 seconds)
[12:07:34] *** Quits: iamzero (~iamzero@2a02:2f0f:9109:8d00:8f91:35ee:c1b:9651) (Quit: WeeChat 3.2)
[12:07:37] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0f7-64.dhcp.inet.fi)
[12:10:46] *** Quits: abraham (~abraham@143.244.185.86) (Quit: The Lounge - https://thelounge.chat)
[12:11:56] *** Joins: abraham (~abraham@143.244.185.86)
[12:11:59] <theskillwithin> i think a lot of people don't understand how cool it is infact
[12:13:21] *** Joins: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[12:15:24] *** Joins: jim87 (~quassel@93.55.249.30)
[12:16:26] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[12:19:09] *** Joins: audiocat (~audio@2603-8081-1800-6a6f-3d26-a8b1-a13c-41db.res6.spectrum.com)
[12:23:04] *** Quits: jim87 (~quassel@93.55.249.30) (Ping timeout: 268 seconds)
[12:26:27] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.2)
[12:26:33] *** Joins: silly_ (~silly@user/silly)
[12:26:47] *** Joins: vysn (~vysn@user/vysn)
[12:29:58] *** Quits: silly (~silly@user/silly) (Ping timeout: 260 seconds)
[12:32:16] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:38a2:d61b:8252:515d)
[12:35:08] *** Quits: devslash (~devslash@46.232.211.210) (Quit: ZNC 1.8.2 - https://znc.in)
[12:35:40] *** Joins: devslash (~devslash@46.232.211.210)
[12:35:49] *** Joins: sizeof_void34 (~Thunderbi@109.252.124.86)
[12:35:56] <shan> DPA: GG
[12:36:03] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:37:04] *** Joins: sQVe (~sQVe@user/sqve)
[12:38:45] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[12:42:23] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[12:44:10] *** Quits: _banana_ (~banana_@2603-6000-b500-9ce3-7001-59e8-28e9-6730.res6.spectrum.com) (Ping timeout: 240 seconds)
[12:45:33] *** Joins: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[12:45:33] *** Quits: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Changing host)
[12:45:33] *** Joins: YaknotiS (~YaknotiS@user/yaknotis)
[12:47:06] *** Quits: moldorcoder7_ (~moldorcod@37.120.143.28) (Ping timeout: 265 seconds)
[12:51:33] *** Joins: sillyslux__ (~silly@user/silly)
[12:55:19] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 265 seconds)
[13:11:34] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[13:16:04] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[13:19:01] *** Quits: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[13:21:32] *** Quits: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[13:23:01] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2)
[13:24:40] *** Joins: benni (~benni@ipbcc2cdf9.dynamic.kabel-deutschland.de)
[13:26:07] *** Quits: sagax (~sagax_nb@user/sagax) (Read error: Connection reset by peer)
[13:28:26] *** Joins: thiras (~thiras@user/thiras)
[13:29:22] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[13:30:11] *** Joins: CryptoDavid (uid14990@id-14990.uxbridge.irccloud.com)
[13:31:03] *** Joins: silly_ (~silly@user/silly)
[13:34:25] *** Quits: sillyslux__ (~silly@user/silly) (Ping timeout: 252 seconds)
[13:36:45] *** Joins: sambauer (~sambauer@86.121.130.173)
[13:43:14] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 260 seconds)
[13:43:51] *** Joins: greta (uid516789@id-516789.lymington.irccloud.com)
[13:51:48] *** Joins: pulse (~pulse@user/pulse)
[14:06:23] *** Joins: RLa (~RLa@82.131.127.224.cable.starman.ee)
[14:08:25] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[14:08:53] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:38a2:d61b:8252:515d) (Quit: Leaving)
[14:12:08] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) (Client Quit)
[14:15:38] *** Joins: jim87 (~quassel@93.55.249.30)
[14:20:51] *** Quits: jim87 (~quassel@93.55.249.30) (Ping timeout: 268 seconds)
[14:24:24] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0f7-64.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:28:16] *** audiocat is now known as audioduck
[14:28:52] *** Quits: sQVe (~sQVe@user/sqve) (Ping timeout: 268 seconds)
[14:32:07] *** Joins: poncha (~poncha@user/poncha)
[14:33:36] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[14:34:05] *** Joins: asanto (~asanto@193.34.98.46)
[14:35:03] *** Joins: sillyslux__ (~silly@user/silly)
[14:38:01] <asanto> Hi all, I saw in code as they call functions like this (0, fn)(args). Why do they do it like that and how is it possible ? https://jsfiddle.net/HongKilDong/z75kuqcj/
[14:38:44] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 268 seconds)
[14:39:49] <thykka> asanto, where did you see such code? was it minified?
[14:40:33] <prussian> asanto: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comma_Operator
[14:40:50] <prussian> The fn is the result of (0, fn)
[14:40:56] <prussian> Which is callable
[14:41:42] <asanto> https://github.com/keen/keen-tracking.js/blob/master/dist/keen-tracking.js
[14:41:57] <thykka> asanto, that code was not written by hand
[14:42:12] <thykka> it's bundled by webpack
[14:43:18] <asanto> ow, ok, thank you
[14:44:14] <asanto> Comma operator is pretty neat )
[14:45:09] <thykka> mainly useful when code golfing
[14:46:08] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[14:46:57] *** vdamewood is now known as Guest6509
[14:46:57] *** Quits: Guest6509 (~vdamewood@fedora/vdamewood) (Killed (copper.libera.chat (Nickname regained by services)))
[14:46:57] *** vinleod is now known as vdamewood
[14:48:32] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) (Quit: Leaving...)
[14:49:03] <asanto> now it really make sense!
[14:52:17] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:5c47:50d6:795a:5cec)
[15:03:16] *** Joins: JohnComputation2 (~JohnCompu@gateway/tor-sasl/johncomputation)
[15:05:00] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Ping timeout: 276 seconds)
[15:09:10] *** Quits: diophantoz (~diophanto@user/diophantoz) (Ping timeout: 240 seconds)
[15:13:04] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 265 seconds)
[15:16:25] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[15:18:29] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[15:26:33] *** Quits: thiras (~thiras@user/thiras) (Read error: Connection reset by peer)
[15:27:52] *** Joins: CiaoSen (~Jura@p5dcc1d1c.dip0.t-ipconnect.de)
[15:28:36] *** Joins: iamzero (~iamzero@2a02:2f0f:9109:8d00:8f91:35ee:c1b:9651)
[15:34:08] *** Joins: thiras (~thiras@user/thiras)
[15:37:15] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[15:40:42] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0f7-64.dhcp.inet.fi)
[15:46:45] *** Joins: daoudr (~daoudr@178.197.216.245)
[15:47:12] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[15:47:14] <daoudr> does array.every() work on 2d arrays?
[15:48:28] <Alexendoo> daoudr: Yes, but it doesn't do anything special, each value passed to the callback would be an array
[15:48:36] <thykka> daoudr, a 2d array is an array of arrays. Array.every will operate on the array, but not the inner ones
[15:48:53] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[15:50:31] <thykka> n> [[1, 2, 3], [4, 5, 6], [7, 8, 9]].every(row => row.every(cell => typeof cell === 'number'))
[15:50:32] <jellobot> (okay) true
[15:54:06] <daoudr> thanks
[15:56:01] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[16:00:06] *** Joins: moldorcoder7 (~moldorcod@37.120.143.28)
[16:00:43] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 252 seconds)
[16:03:41] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: No Ping reply in 180 seconds.)
[16:03:42] *** Quits: thiras (~thiras@user/thiras) (Read error: Connection reset by peer)
[16:09:02] *** Joins: arthur_melo (~IRC@user/arthur-melo/x-6822691)
[16:11:00] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[16:13:42] *** Joins: X-Scale` (~ARM@46.50.0.45)
[16:15:57] *** Quits: X-Scale (~ARM@46.50.5.253) (Ping timeout: 268 seconds)
[16:15:59] *** X-Scale` is now known as X-Scale
[16:22:06] *** Quits: greta (uid516789@id-516789.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[16:22:42] <Covrus> I have a text file in a module that I want available from that module. I'm reading it with fs.readFileSync('../helpfile.txt') but it's using the directory of the application and not the module. How do I get it to use the module-relative file?
[16:23:02] *** Quits: asanto (~asanto@193.34.98.46) (Quit: Client closed)
[16:24:03] *** Joins: jim87 (~quassel@93.55.249.30)
[16:27:55] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[16:28:35] *** Joins: hassoon (hassoon@user/hassoon)
[16:29:07] *** Quits: jim87 (~quassel@93.55.249.30) (Ping timeout: 268 seconds)
[16:31:42] <hassoon> 'morning
[16:31:43] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[16:31:45] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: No Ping reply in 180 seconds.)
[16:32:32] *** Joins: silly_ (~silly@user/silly)
[16:33:34] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 260 seconds)
[16:33:36] *** Joins: woink (~woink@cpe-69-206-152-193.hvc.res.rr.com)
[16:34:41] *** Joins: Intelo (~Intelo@88.244.90.255)
[16:35:28] *** Quits: woink (~woink@cpe-69-206-152-193.hvc.res.rr.com) (Client Quit)
[16:35:55] *** Quits: sillyslux__ (~silly@user/silly) (Ping timeout: 252 seconds)
[16:43:04] *** Quits: CiaoSen (~Jura@p5dcc1d1c.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[16:45:46] *** Quits: audioduck (~audio@2603-8081-1800-6a6f-3d26-a8b1-a13c-41db.res6.spectrum.com) (Ping timeout: 268 seconds)
[16:46:00] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Quit: Client closed)
[16:46:17] *** Quits: Intelo (~Intelo@88.244.90.255) (Quit: Client closed)
[16:46:18] <daoudr> why this code is checking on the the first inner array https://pastebin.com/CfQZRAcv
[16:47:04] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[16:47:07] <daoudr> on = only
[16:47:21] <thykka> daoudr, you're not returning a value in the inner .every
[16:47:53] <daoudr> yes I did this intentionally to check the output
[16:48:01] <daoudr> return does not print
[16:48:10] <thykka> you need return for .every to work
[16:48:15] <daoudr> oh
[16:48:21] <thykka> otherwise it will always return false
[16:48:54] <daoudr> everytime I rediscover return:-)
[16:49:24] <thykka> also, seems like 'publish!' rule needs .some instead of .every, and you cannot implement "i smell a series" with .every or .some
[16:51:17] <daoudr> how to use return and print the result because puting the function in console does not work with higher order functions
[16:51:22] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[16:51:25] <thykka> it does
[16:51:35] <daoudr> console = console.log()
[16:51:40] <thykka> but you can console.log and then return, to have both
[16:52:30] <daoudr> I will try something
[16:52:34] <daoudr> based on your feedback
[16:52:34] <thykka> in your case, you should be able to do: console.log(well([['BAD', 'GOOD', ...]]));
[16:52:53] <thykka> that will log whatever your well function returns
[16:53:03] <daoudr> oh ok
[16:53:17] *** Joins: cheater (~Username@user/cheater)
[16:53:19] <thykka> in the paste it doesn't return anything
[16:53:27] *** Quits: zuQe8 (~zuQe8@cpc105068-sgyl40-2-0-cust196.18-2.cable.virginm.net) (Quit: Bye)
[16:53:41] <thykka> because the return keyword is missing before x.every(.....
[16:53:42] *** Joins: Simplar (~quassel@188.163.92.105)
[16:57:55] *** Joins: trevors_ (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[16:58:29] *** Joins: goddard (~goddard@user/goddard)
[17:00:37] <ezzieyguywuf> I'd like to read in a file as a string and then use interpolation to add data programmatically. For example, in python I might save "{} some text {}" in a file, read it into a variable `myString` and then use `myString.format(x, y)` to fill in the tags. Is there a similar approach I can use in javascript?
[17:00:44] *** Joins: Intelo (~Intelo@88.244.90.255)
[17:01:07] <Covrus> sure, read it in as a template, render appropriately, no?
[17:01:29] <thykka> ezzieyguywuf, mustache.js does pretty much that, as do other template engines
[17:01:31] <ezzieyguywuf> how do I read it in as a template?
[17:01:40] <Covrus> it'd still be just a file
[17:01:41] <ezzieyguywuf> ah, so I'll need to use a "template engine"
[17:01:50] <Covrus> use handlebars, moustache, whatever rendering library you want
[17:01:55] <ezzieyguywuf> gotcha
[17:01:59] <ezzieyguywuf> cool, thanks for the help.
[17:02:02] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Ping timeout: 260 seconds)
[17:02:17] <Covrus> there may be other approaches, but that seems best to me with my experience level
[17:03:17] <ezzieyguywuf> yea, the only dependency-free appreach I can think of is simply using String.replace, I was curious if there was some built-in language feature but it doesn't sound like there is
[17:03:37] <thykka> not really, no
[17:04:04] <Covrus> there's always string interpolation but that's an unwise idea
[17:04:08] <thykka> and yeah, i've used .replace to implement some trivial template automation
[17:04:11] <Covrus> and isn't trivial to do anyway
[17:05:00] <thykka> for anything more productiony, I'd use mustache. It's simple and it doesn't have logic like handlebars does (which is a good thing)
[17:05:07] <thykka> https://github.com/janl/mustache.js/
[17:05:40] *** Quits: RLa (~RLa@82.131.127.224.cable.starman.ee) (Quit: Client closed)
[17:06:42] <ezzieyguywuf> 👍
[17:07:05] <ezzieyguywuf> when someone refers to ES6, how do you distinguish which "release" (i.e. 2015, 2016, etc...) they're talking about? or is it always just "the latest"?
[17:08:41] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[17:08:44] <Alexendoo> ES6 refers to ES2015, as it's the sixth edition
[17:08:59] <thykka> technically it should refer to ECMAScript 2015, but colloquially it could mean that or some later version
[17:09:18] <thykka> i.e. "not JS from 1998"
[17:09:39] <silly_> when someone refers to ES6, they mostly mean modern js, es6+
[17:09:59] * ezzieyguywuf nods
[17:10:20] <ezzieyguywuf> dang, I had another question but now I can't remember it.
[17:11:44] *** Quits: Intelo (~Intelo@88.244.90.255) (Quit: Client closed)
[17:12:17] *** Joins: RLa (~RLa@82.131.127.224.cable.starman.ee)
[17:16:05] *** Joins: jamea (~jamea@187.185.190.209)
[17:16:28] *** Joins: Intelo (~Intelo@88.244.90.255)
[17:16:42] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[17:22:10] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[17:25:02] <prussian> ESNEXT sounds more hardcore than es6+
[17:26:35] *** Joins: CiaoSen (~Jura@p5dcc1d1c.dip0.t-ipconnect.de)
[17:30:16] *** Quits: sizeof_void34 (~Thunderbi@109.252.124.86) (Read error: Connection reset by peer)
[17:30:22] *** Joins: sizeof_void35 (~Thunderbi@109-252-124-86.nat.spd-mgts.ru)
[17:32:01] *** Quits: CiaoSen (~Jura@p5dcc1d1c.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[17:32:32] *** Joins: nomic (~nomic@185.217.117.156)
[17:32:40] *** sizeof_void35 is now known as sizeof_void34
[17:32:42] *** Joins: Heraes (~Heraes@119.12.203.77.rev.sfr.net)
[17:32:42] *** Quits: Heraes (~Heraes@119.12.203.77.rev.sfr.net) (Changing host)
[17:32:42] *** Joins: Heraes (~Heraes@user/romarain)
[17:34:18] <daoudr> Why it is printing undefined? https://pastebin.com/8FEWJEdG
[17:34:46] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[17:35:06] <Alexendoo> well doesn't return anything, the return in it returns from the inner arrow function cell => ...
[17:35:56] <thykka> everything must return something, or the result will be lost.
[17:36:03] <Alexendoo> Perhaps you want a map rather than forEach
[17:36:12] <Alexendoo> (And to return that)
[17:36:34] <thykka> no, they need more than that.. the previous version of this paste had the task description, and this won't cut it :P
[17:36:53] <thykka> they're going to need 3 functions, each for a different part of the task
[17:37:30] <thykka> one with .every, one with .some and then one with .reduce or .map
[17:37:36] <thykka> err.. .map/.filter
[17:38:34] <thykka> i think the problem is that daoudr is trying to solve all the problems at once, and as once piece. Strongly recommend breaking it down into more manageable parts
[17:47:52] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[17:49:56] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[17:50:40] *** Joins: jmft2 (~jmft2@213.31.248.255)
[17:52:59] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 268 seconds)
[17:55:07] *** Joins: kakashiA1 (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de)
[17:57:26] *** Quits: RLa (~RLa@82.131.127.224.cable.starman.ee) (Quit: Client closed)
[18:02:10] <fakuve> Hi peoples . (maybe this belongs more to nodejs) but how do I use a oneliner to invoke one function within the Command Line interpreter
[18:02:54] <fakuve> So I can just call a JS function with Linux (so using node I guess) , such as `node encodeURI("https://www.mawebsite.com")`
[18:04:23] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[18:04:29] *** Quits: jmft2 (~jmft2@213.31.248.255) (Read error: Connection reset by peer)
[18:05:01] *** Joins: jmft2 (~jmft2@213.31.248.255)
[18:06:17] *** Joins: dev4449 (~dev4449@172.98.71.157)
[18:06:36] *** Joins: gggp (~textual@111.63.44.9)
[18:08:15] <dev4449> hi. good day.
[18:09:22] <dev4449> I can't find out how to use a getter inside the class itself. https://paste.ubuntu.com/p/HGTS3qFC26/
[18:10:48] *** Joins: autistic (~autistic@170.84.56.9)
[18:12:06] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:5c47:50d6:795a:5cec) (Ping timeout: 268 seconds)
[18:12:51] *** Quits: nomic (~nomic@185.217.117.156) (Quit: Leaving)
[18:14:09] <daoudr> thank you
[18:15:26] <Cork> dev4449: same as you reference the current object in all member functions this.<method name>
[18:15:41] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[18:16:02] <Cork> though in your case i would prob just grab it directly from the variable
[18:16:05] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[18:17:26] *** Quits: gggp (~textual@111.63.44.9) (Ping timeout: 268 seconds)
[18:17:54] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[18:18:12] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[18:20:33] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[18:21:13] <dev4449> Cork: okay. thanks.
[18:23:32] *** Quits: benni (~benni@ipbcc2cdf9.dynamic.kabel-deutschland.de) (Quit: Client closed)
[18:24:40] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[18:25:04] *** Joins: jim87 (~quassel@93.55.249.30)
[18:26:57] <Koopz> say uh i'm still a noob regarding all this module stuff but if i wanted to use a browser's native Module loading function do i use the "ESM" or "AMD" version of a package?
[18:27:40] <Koopz> or won't either work and i gotta go the oldfashioned way and add a <script type="text/javascript" src="node_modules/..."> via js?
[18:28:42] *** Joins: thiras (~thiras@user/thiras)
[18:29:46] *** Quits: jim87 (~quassel@93.55.249.30) (Ping timeout: 260 seconds)
[18:31:59] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[18:32:48] *** Joins: bynx (~bynx@fw.rry.vaskywire.net)
[18:37:04] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Ping timeout: 252 seconds)
[18:37:34] *** Quits: poncha (~poncha@user/poncha) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[18:37:39] *** Joins: salad (~cucumber@82.76.148.128)
[18:38:47] <Koopz> ah yes we're off to a good start trying to import monaco-editor
[18:39:34] <Koopz> i see it trying to request js files without the .js extension, resulting in an obvious 404
[18:40:54] <Covrus> I solved the problem with path.join(__dirname,"../help.txt"), incidentally, which should have been fairly obvious
[18:43:15] <Koopz> was that directed at me?
[18:43:24] <shan> Koopz: ESM
[18:43:42] <Koopz> i'm not gonna edit files in node_modules to make it work :D
[18:43:53] <shan> you need the esm version of a file
[18:44:06] <Covrus> Koopz: no, this was a question I'd posed much earlier in the day
[18:44:10] <Koopz> k
[18:44:11] <Koopz> import * as monaco from '../node_modules/monaco-editor/esm/vs/editor/editor.main.js';
[18:44:14] <shan> i'm pretty sure adding a script tag pointing at node_modules is an awful idea
[18:44:42] <shan> also if you're working with a bundler like esbuild or webpack or whatever you don't need the whole path
[18:44:45] <wez> That looks awful
[18:45:14] <Koopz> and i'm pretty sure i'm not gonna bother spending a week downloading 500GB of shit to make webpack spit out some shit if browsers finally implemented module support themselves
[18:45:22] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[18:45:31] <shan> also also, if you wanna write code directly for the browser then you load from a cdn
[18:45:36] <shan> not node_modules
[18:45:54] <wez> Koopz: It takes you a week to download 500GB?  Time to upgrade mate.
[18:45:55] <Koopz> top 10 reasons not to load from a cdn: 1) You live in the EU
[18:46:06] <Alexendoo> Unbundled esm is not a great experience for users
[18:46:57] <Koopz> ever wondered why bundling became so popular? because data privacy policies
[18:47:27] <Koopz> you can basically get sued if you make a user do a request to a domain which isn't yours
[18:47:43] <shan> then bundle your shit
[18:47:58] *** Quits: monoxane (~monoxane@119-18-17-227.771211.mel.static.aussiebb.net) (Ping timeout: 252 seconds)
[18:47:59] <Alexendoo> The origin it's served from is unrelated to bundling
[18:48:19] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:48:19] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[18:48:19] *** Joins: wroathe (~wroathe@user/wroathe)
[18:48:28] <Alexendoo> And that is certainly not the reason it is popular
[18:48:33] <Koopz> CDNs are not cool
[18:48:43] <Koopz> unless you host your own obviously
[18:48:50] <ThePendulum> yeah I don't think I ever heard anyone suggest that was even a minor consideration
[18:49:07] <wez> Koopz: Why is that an issue?
[18:49:37] <ThePendulum> why would bundling even be necessary, most people were putting all their scripts on their own server individually
[18:49:56] <wez> I like AWS CloudFront. Does the EU have an issue with that?
[18:50:05] *** Quits: bradp (~bradp@cpe-70-92-7-182.wi.res.rr.com) (Quit: ZNC - https://znc.in)
[18:50:37] *** Joins: bradp (~bradp@cpe-70-92-7-182.wi.res.rr.com)
[18:50:43] <wez> And what does the EU have against cookies? It's up to the client / browser to accept them or not.
[18:50:57] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 268 seconds)
[18:51:00] <wez> You don't need to reimplement a browser feature
[18:51:38] <Koopz> i've been wondering for eternities why this cookie consent bullshittery isn't a browser feature
[18:52:07] <Alexendoo> Would make it too easy to decline
[18:52:10] <wez> Koopz:
[18:52:13] <Koopz> obviously
[18:52:16] <wez> 👍
[18:52:28] <wez> Alexendoo: so?
[18:52:42] <Koopz> Marketing doesn't like easily declinable things
[18:53:15] <Alexendoo> wez: So sites wouldn't want to use it, and google wouldn't want to implement it
[18:53:32] <Koopz> that's why the "Accept Everything" button is visually screaming at you to click it compared to the "Accept the bare minimum needed to use this page" button
[18:53:35] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 260 seconds)
[18:53:55] <Koopz> it's the whole "Download" button leading to malware ordeal over again
[18:54:03] <wez> Koopz: I just edit the source in browser and disable it
[18:54:09] <wez> without agreeing to it
[18:54:25] <wez> You can't do that easily if it was a browser implementation
[18:54:31] <Koopz> I have "I don't care about Cookies" installed as well
[18:55:07] <ezzieyguywuf> lets say I have module A with a globale variable MY_CACHE. if I import module A into _both_ module B and module C (import * as mod from A), does B.mod and C.mod contain the saim MY_CACHE, or are they distinct?
[18:55:37] *** Joins: jetchisel (jetchisel@user/jetchisel)
[18:58:57] *** Quits: dev4449 (~dev4449@172.98.71.157) (Quit: Client closed)
[18:59:59] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[19:01:05] *** Joins: jetchisel (jetchisel@user/jetchisel)
[19:01:10] *** Joins: monoxane (~monoxane@119-18-17-227.771211.mel.static.aussiebb.net)
[19:01:27] *** Quits: bynx (~bynx@fw.rry.vaskywire.net) (Quit: leaving)
[19:02:38] *** Joins: Junxter (~Junxter@222.95.222.185)
[19:07:18] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[19:08:09] *** Joins: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com)
[19:13:55] *** Joins: voltage_ (voltage@user/voltage)
[19:14:51] *** Joins: zach (~bynx@fw.rry.vaskywire.net)
[19:15:19] *** Quits: zach (~bynx@fw.rry.vaskywire.net) (Client Quit)
[19:16:03] *** Joins: vqueiroz (uid340368@id-340368.hampstead.irccloud.com)
[19:17:07] *** Joins: bynx (~bynx@fw.rry.vaskywire.net)
[19:18:08] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[19:20:17] *** Quits: jmft2 (~jmft2@213.31.248.255) (Quit: This computer has gone to sleep)
[19:21:22] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[19:23:49] *** Quits: Junxter (~Junxter@222.95.222.185) (Read error: Connection reset by peer)
[19:24:02] *** Joins: Junxter (~Junxter@222.95.222.185)
[19:25:09] *** Quits: goddard (~goddard@user/goddard) (Quit: WeeChat 2.8)
[19:25:52] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 252 seconds)
[19:27:14] *** Joins: sillyslux__ (~silly@user/silly)
[19:27:41] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[19:27:43] *** Quits: silly_ (~silly@user/silly) (Read error: Connection reset by peer)
[19:33:24] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Lost terminal)
[19:34:04] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 265 seconds)
[19:35:16] *** Quits: kakashiA1 (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de) (Ping timeout: 252 seconds)
[19:38:03] <daoudr> finally I figured it out https://pastebin.com/XixYQU4V
[19:38:04] *** Joins: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net)
[19:42:05] <daoudr> oh I have redundancy
[19:43:17] <Alexendoo> daoudr: while(...) { ...; break } is the same as an if
[19:45:09] <shan> that indentation though
[19:45:09] <daoudr> I was not supposed to count the bad
[19:45:54] <daoudr> what is the shortcut to fix indentation in  visual studio
[19:46:29] <shan> is it visual studio or visual studio code
[19:48:26] *** Quits: trevors_ (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:48:49] *** Joins: haycon (~haycon@84.215.37.126)
[19:49:46] <daoudr> code
[19:49:46] <shan> also, daoudr, why are you doing String(cell)?
[19:49:59] *** Quits: iamzero (~iamzero@2a02:2f0f:9109:8d00:8f91:35ee:c1b:9651) (Quit: WeeChat 3.2)
[19:50:15] <shan> in vscode, press ctrl-shift-P and type format document and you can 1) run the formatter from there and 2) see the shortcut for future use
[19:50:29] <daoudr> shan no need for string(cell) correct. since I do not need to count anything but the good
[19:51:08] <daoudr> shan wait.. I need to make it string so I can use toLowerCase
[19:51:25] <shan> but if it's 'bad' or 'good' it's already a string isn't it
[19:51:26] <daoudr> because good can be 'good' or 'GOOD'
[19:51:50] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[19:51:53] <shan> what type of object is `cell`
[19:52:33] *** Joins: dba_ (uid502594@id-502594.hampstead.irccloud.com)
[19:54:51] <daoudr> cell is a single element in an inner array
[19:54:58] <shan> what type of object is it
[19:56:36] <daoudr>  typeof cell brings two types depending on the element in the array.. in my case   string and number
[19:57:43] <shan> ah so that's why you need the call to string()
[19:58:39] <daoudr> yes
[19:59:15] *** Joins: iomari891 (~iomari891@129.205.113.2)
[19:59:28] <daoudr> thanks for the shortcut7
[19:59:34] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[19:59:35] <shan> sure :p
[20:00:42] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[20:00:55] <shan> anyway i'd probably refactor your snippet like so: https://bin.readthedocs.fr/ausith.js
[20:02:07] *** Joins: kakashiA1 (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de)
[20:02:39] *** Joins: Jtucker (~jtucker__@cpc1-cdif17-2-0-cust297.5-1.cable.virginm.net)
[20:03:28] <daoudr> Expected: 'Publish!', instead got: 'Publish'
[20:03:49] <daoudr> streamlined code. I like it
[20:04:11] <daoudr> thanks
[20:04:57] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 268 seconds)
[20:05:34] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0f7-64.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:05:48] <shan> my bad, add in the exclamation mark
[20:06:12] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[20:06:38] *** Joins: hendursaga (~weechat@user/hendursaga)
[20:12:28] <ezzieyguywuf> so, I can do `import fs as "fs"` for the nodejs fs module, but for my own modules I'm doing `import * as myHelper from ./myHelper` - what do I have to do in myHelper so that I can use the same syntax as the fs import?
[20:12:51] <shan> export default myhelper;
[20:13:07] <shan> import myHelper from './myHelper';
[20:13:09] <shan> i think
[20:13:10] *** Quits: jamea (~jamea@187.185.190.209) (Ping timeout: 240 seconds)
[20:13:16] <shan> export default goes in your js file
[20:13:23] <shan> in the helper's js file
[20:13:50] <ezzieyguywuf> it just has to say `export default myHelper` that's it?
[20:14:02] <ezzieyguywuf> what is "myHelper" in that case?
[20:14:14] <ezzieyguywuf> I thought the `export default` was to set a single "thing" as the default export
[20:15:05] *** Joins: jim87 (~quassel@93.55.249.30)
[20:15:29] <ezzieyguywuf> I guess I'd have to do `export default { func1: func1, func2: func2, etc... }
[20:15:35] *** Quits: iomari891 (~iomari891@129.205.113.2) (Read error: Connection reset by peer)
[20:16:09] *** Joins: iomari891 (~iomari891@129.205.113.2)
[20:17:41] *** Quits: Haxxa (~Haxxa@122.199.45.213) (Remote host closed the connection)
[20:18:03] <ezzieyguywuf> yup that does it
[20:18:06] *** Joins: Haxxa (~Haxxa@122.199.45.213)
[20:18:36] *** Joins: diophantoz (~diophanto@user/diophantoz)
[20:18:50] *** Quits: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net) (Quit: Leaving.)
[20:19:19] <merpnderp> My google-fu is not strong enough for this. I need to make an axios xhr request that returns a file and prompts the user to save it.
[20:19:54] *** Quits: jim87 (~quassel@93.55.249.30) (Ping timeout: 260 seconds)
[20:20:46] *** Quits: jazzy (~jaziz@2600:380:865d:911b:e5e1:b429:e129:6354) (Ping timeout: 268 seconds)
[20:22:54] *** Joins: Rockwood (~Rocky@user/rocky)
[20:23:33] *** Joins: Rockwood_ (~Rocky@user/rocky)
[20:26:41] *** Joins: kill (~killown@user/killown)
[20:27:23] *** Joins: Guest15 (~Guest15@2601:586:c403:2600:5d2b:a41:e798:38d0)
[20:27:33] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[20:27:46] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 268 seconds)
[20:29:50] *** Joins: sam_1 (~sam_1@87.51.251.118)
[20:31:31] *** Quits: Simplar (~quassel@188.163.92.105) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[20:32:30] <Rockwood_> sheetjs, o/
[20:32:43] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[20:33:14] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:37:26] *** Joins: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net)
[20:38:40] *** Quits: haycon (~haycon@84.215.37.126) (Ping timeout: 240 seconds)
[20:38:50] *** Quits: iomari891 (~iomari891@129.205.113.2) (Ping timeout: 265 seconds)
[20:39:06] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[20:40:46] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 265 seconds)
[20:40:49] *** Joins: iomari891 (~iomari891@129.205.113.2)
[20:41:07] *** Joins: jamea (~jamea@10.189-202-213.bestelclientes.com.mx)
[20:43:26] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[20:43:45] *** Joins: Rockwood (~Rocky@user/rocky)
[20:45:20] *** Quits: iomari891 (~iomari891@129.205.113.2) (Client Quit)
[20:46:16] *** Quits: Rockwood_ (~Rocky@user/rocky) (Ping timeout: 268 seconds)
[20:48:58] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[20:50:51] *** Joins: voltage_ (voltage@user/voltage)
[20:52:09] *** Quits: bynx (~bynx@fw.rry.vaskywire.net) (Quit: WeeChat 3.0)
[20:53:44] *** Joins: iomari891 (~iomari891@129.205.113.2)
[20:55:14] *** Joins: bynx (~bynx@fw.rry.vaskywire.net)
[20:57:30] *** Joins: shimbles (~shimbles@209.201.38.106)
[20:59:02] *** Quits: Guest15 (~Guest15@2601:586:c403:2600:5d2b:a41:e798:38d0) (Quit: Client closed)
[20:59:38] *** Quits: EgonX (~EgonX@2601:2c6:47f:9c18:b9f3:9e2a:7cee:6091) (Quit: Textual IRC Client: www.textualapp.com)
[21:00:04] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[21:00:37] *** Quits: bynx (~bynx@fw.rry.vaskywire.net) (Quit: WeeChat 3.0)
[21:00:45] <ThePendulum> merpnderp: not sure that's possible, looked into that a while ago
[21:01:02] <ThePendulum> ended up with a classic form post
[21:01:42] <ThePendulum> apparently some hacky work around is to retrieve the data as a blob, save it to a temporary file and navigate to it, but that puts the whole thing in memory
[21:04:36] *** Joins: bynx (~bynx@fw.rry.vaskywire.net)
[21:05:45] *** Joins: nomic (~nomic@185.217.117.156)
[21:09:38] *** Joins: gehn (~gehn@user/gehn)
[21:10:44] *** Quits: iomari891 (~iomari891@129.205.113.2) (Ping timeout: 265 seconds)
[21:14:30] *** Quits: bynx (~bynx@fw.rry.vaskywire.net) (Quit: WeeChat 3.0)
[21:14:33] *** Quits: nomic (~nomic@185.217.117.156) (Quit: Leaving)
[21:14:51] *** Joins: nomic (~nomic@185.217.117.156)
[21:20:49] *** Joins: bynx (~bynx@fw.rry.vaskywire.net)
[21:23:00] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[21:23:32] *** Joins: EgonX (~EgonX@2601:2c6:47f:9c18:ec5e:fd8:129f:12a6)
[21:23:34] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 252 seconds)
[21:23:38] *** Joins: sam_1 (~sam_1@87.51.251.118)
[21:24:01] *** Joins: cheater (~Username@user/cheater)
[21:27:59] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 268 seconds)
[21:28:08] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 265 seconds)
[21:28:17] *** Joins: Guest52 (~Guest52@5.148.154.4)
[21:29:37] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 252 seconds)
[21:29:55] *** Quits: Guest52 (~Guest52@5.148.154.4) (Client Quit)
[21:31:35] *** Joins: Deneb (~johnch@86.111.189.80.dyn.plus.net)
[21:33:40] *** Quits: Intelo (~Intelo@88.244.90.255) (Quit: Client closed)
[21:36:00] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 268 seconds)
[21:36:36] *** Joins: cheater (~Username@user/cheater)
[21:36:38] *** Quits: Jtucker (~jtucker__@cpc1-cdif17-2-0-cust297.5-1.cable.virginm.net) (Remote host closed the connection)
[21:36:44] *** Quits: shimbles (~shimbles@209.201.38.106) (Quit: Client closed)
[21:42:36] *** Joins: sam_1 (~sam_1@87.51.251.118)
[21:47:24] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Remote host closed the connection)
[21:47:28] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 265 seconds)
[21:51:18] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[21:52:29] *** Joins: incognito (~relativit@user/incognito)
[21:53:20] *** Joins: vats (~vats@103.70.83.191)
[21:55:23] *** Quits: Rockwood (~Rocky@user/rocky) (Remote host closed the connection)
[21:56:27] *** Joins: Rockwood (~Rocky@user/rocky)
[21:57:31] *** Joins: Rockwood_ (~Rocky@user/rocky)
[21:57:42] *** Joins: inoas (~ionas@aftr-37-201-194-213.unity-media.net)
[21:57:52] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[21:59:18] *** Joins: jess (~jess@libera/staff/jess)
[22:01:29] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 265 seconds)
[22:03:56] *** Joins: whitehot_robot (~whitehot_@cantelope.org)
[22:06:12] *** Parts: whitehot_robot (~whitehot_@cantelope.org) ()
[22:07:25] *** Joins: onosendi (~onosendi@user/onosendi)
[22:12:03] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[22:13:54] <daoudr> https://pastebin.com/stuqjxf5  it returns null instead of alphabets
[22:14:45] <Rockwood_> let regex =  /^[A-Za-z]+$/g;
[22:15:08] <Rockwood_> you are passing number too
[22:15:13] <Rockwood_> you are passing numbers too
[22:15:35] <onosendi> n> const reverseLetter = (str) => str.split('').reverse().join(''); console.log(reverseLetter('foobar'));
[22:15:36] <jellobot> (okay) raboof
[22:16:18] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[22:16:33] <Rockwood_> >n const reverseLetter = (str) => str.split('').reverse().join(''); console.log(reverseLetter('foobar1234'));
[22:16:44] *** Joins: sam_1 (~sam_1@87.51.251.118)
[22:16:52] <Rockwood_> n> const reverseLetter = (str) => str.split('').reverse().join(''); console.log(reverseLetter('foobar1234'));
[22:16:53] <jellobot> (okay) 4321raboof
[22:17:06] *** Joins: Drgonz0 (~Drgonz0@107-179-254-222.cpe.teksavvy.com)
[22:17:24] <Rockwood_> let regex =  /^[A-Za-z0-9]+$/g;
[22:17:29] <Rockwood_> now see
[22:18:51] <Rockwood_> daoudr, https://jsfiddle.net/zncur57v/
[22:19:27] *** Joins: haycon (~haycon@84.215.37.126)
[22:19:53] *** Joins: matsaman (~matsaman@user/matsaman)
[22:20:12] <daoudr> I wanted to match only alphabets. this worked  let regex =  /[A-Za-z]+/g;
[22:20:43] <Rockwood_> yes
[22:20:54] <Rockwood_> why are you adding g there
[22:20:56] *** Joins: sept (~user1@24-52-239-66.cable.teksavvy.com)
[22:21:08] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[22:21:15] <vqueiroz> Any idea if EMScripten is capable of compiling without modifications SDL + OpenGL ES 2.0?
[22:21:21] <vqueiroz> I'm having serious problems now.
[22:21:38] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 268 seconds)
[22:22:44] <Rockwood_> var myArray = /d(b+)d/g.exec('cdbbdbsbz');
[22:23:07] <daoudr> Rockwood_: g is  redundant. thanks
[22:24:27] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:5c2:d100:3356:b296)
[22:26:16] *** Quits: Gurkenglas (~Gurkengla@dslb-002-207-014-195.002.207.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[22:26:51] <matsaman> daoudr: you won't ever have 'asdf1234asdf' with a second run of alphas?
[22:30:51] <daoudr> matsaman: I do not understand
[22:30:59] <ljharb> daoudr: why are you trying to use regular expressions to parse non-regular strings?
[22:31:05] <daoudr> my code failed with this input https://pastebin.com/qrbKZQNd
[22:31:15] <ljharb> daoudr: or is this just homework/a tutorial
[22:31:49] <daoudr> it is kata https://imgur.com/klLQLeq.png
[22:31:50] <matsaman> daoudr: that's why the 'g' isn't redundant
[22:31:57] <Rockwood_> \o
[22:32:03] <matsaman> o/
[22:32:05] <Rockwood_> good night everyone
[22:32:16] <Rockwood_> matsaman, wow howdy bro?
[22:32:21] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[22:32:21] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[22:32:21] *** Joins: wroathe (~wroathe@user/wroathe)
[22:32:52] <matsaman> howdy howdy
[22:33:45] <Rockwood_> i am fine but tried right now
[22:33:49] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[22:33:51] <Rockwood_> tired
[22:33:56] *** Quits: Rockwood_ (~Rocky@user/rocky) (Quit: The Time is Over)
[22:33:56] <banana_> ahoy
[22:33:58] <matsaman> mmm
[22:34:03] <matsaman> 'oy
[22:36:39] *** Quits: nomic (~nomic@185.217.117.156) (Quit: Leaving)
[22:36:52] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[22:37:15] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 265 seconds)
[22:37:24] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[22:40:45] *** Quits: pizdets (~pizdets@183.182.114.182) (Ping timeout: 268 seconds)
[22:41:01] *** Joins: pizdets_ (~pizdets@183.182.111.138)
[22:41:43] *** Joins: iomari891 (~iomari891@129.205.113.2)
[22:44:23] <daoudr> the regex stops when it encounter non alphabet character
[22:44:35] <daoudr> time to sleep good night all and thanks for help
[22:44:51] <matsaman> daoudr: /foo/g
[22:45:30] *** Joins: csd (~csd@c-73-22-175-211.hsd1.il.comcast.net)
[22:45:59] *** Joins: yumbox (~yumbox@82-74-56-167.cable.dynamic.v4.ziggo.nl)
[22:46:00] *** Quits: daoudr (~daoudr@178.197.216.245) (Quit: Leaving)
[22:46:04] *** Quits: onizu (uid373383@id-373383.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[22:46:40] *** Parts: yumbox (~yumbox@82-74-56-167.cable.dynamic.v4.ziggo.nl) ()
[22:46:43] *** Joins: yumbox (~yumbox@82-74-56-167.cable.dynamic.v4.ziggo.nl)
[22:46:49] <csd> does anyone know how to reference individual characters using json-schema's regex patterns? specifically, i want to create a regex that disallows the character \u0000, and i don't know how to express that in the regex
[22:47:43] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Quit: Client closed)
[22:47:51] <matsaman> Dunno. [^\u0000]?
[22:48:44] <csd> yeah no that doesn't seem to work. nor if i escape the slash further in the regex
[22:48:51] <csd> and the json schema docs dont address this use-case
[22:49:25] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[22:49:25] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[22:49:25] *** Joins: wroathe (~wroathe@user/wroathe)
[22:49:50] <sheetjs> docusign has a specific format for phone numbers but doesn't tell you in the error message
[22:53:04] <Alexendoo> csd: tried ^[^\u0000]*$ ?
[22:53:49] *** Joins: drew (~drew@user/drew)
[22:53:53] <matsaman> ^
[22:55:26] <csd> thanks that works... not sure why it needed the ^ and $
[22:55:52] <csd> actually now that i think about it i guess it makes sense
[22:56:09] <csd> thanks again
[22:56:47] <matsaman> my suggestion was incomplete
[23:02:21] *** Quits: rawgreaze (~rawgreaze@user/rawgreaze) (Read error: Connection reset by peer)
[23:04:36] <matsaman> what's an easy commandline JS interpreter to get for an ARM macbook?
[23:04:54] <matsaman> v8 maybe
[23:05:18] <ljharb> matsaman: node
[23:05:20] <sheetjs> mac ships with one
[23:05:22] *** Joins: rawgreaze (~rawgreaze@c-73-89-208-53.hsd1.ma.comcast.net)
[23:05:22] *** Quits: rawgreaze (~rawgreaze@c-73-89-208-53.hsd1.ma.comcast.net) (Changing host)
[23:05:22] *** Joins: rawgreaze (~rawgreaze@user/rawgreaze)
[23:05:58] <ljharb> but also yes, every mac has `jsc`, but i don't think it's in the PATH by default
[23:05:59] <matsaman> sheetjs: what's it called?
[23:06:00] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.2)
[23:06:13] <ljharb> matsaman: try `/System/Library/Frameworks/JavaScriptCore.framework/Versions/Current/Helpers/jsc`
[23:06:22] <ljharb> matsaman: but really, just use node, node 16 works on ARM natively
[23:06:50] *** Joins: mastarija (~mastarija@31.217.5.196)
[23:07:11] <matsaman> man that's so much better than d8
[23:07:22] <ljharb> it's a different engines
[23:07:26] <ljharb> d8 is v8 which is node
[23:07:36] <ljharb> and chrome
[23:07:37] <ljharb> jsc is webkit which is safari
[23:07:39] *** Joins: pavonia (~user@user/siracusa)
[23:07:43] <ljharb> matsaman: but, again, use node :-)
[23:07:56] <matsaman> just don't like the d8 repl/console is all, let's see how node's is
[23:08:23] *** Joins: Betal (~Betal@user/betal)
[23:08:38] <mastarija> Does anyone know of some simple game engine that has a "pure" "functional" design? Avoids mutating data (or at least has such semantics). I'm looking for an example to study.
[23:09:23] <matsaman> thanks you two =)
[23:10:21] <matsaman> functional or functional
[23:10:23] <ljharb> matsaman: i don't know why you would have even started with d8 tho. node is what you want.
[23:10:34] <ljharb> mastarija: games break all the best practices
[23:10:54] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[23:10:57] <ljharb> mastarija: if you find a single example of a game that avoids mutation and uses functional paradigms i would also love to study it
[23:11:18] <ezzieyguywuf> with `npm install @babel/core`, what does the @ mean?
[23:11:26] <ljharb> ezzieyguywuf: it's just a scope
[23:11:33] <ljharb> ezzieyguywuf: npm packages can be "foo" or "@foo/bar"
[23:11:34] <mastarija> ljharb, I know games break "best practices", but maybe there's an example of pure game engine out there :D
[23:11:39] <ljharb> mastarija: good luck!
[23:11:53] <mastarija> If not I'll make one, but I always like to check the previous work :)
[23:12:12] <ljharb> i mean, the important thing when making a game is playability, not how it's written
[23:12:15] <sheetjs> fun.js: the game engine that puts fun in functional
[23:12:23] <ljharb> so it won't matter unless you make a good game in the first place
[23:12:28] <mastarija> ljharb, depends on your goals
[23:12:35] <ezzieyguywuf> ljharb: what's the difference between the two though?
[23:12:37] <ezzieyguywuf> what is a "scope"
[23:12:39] <mastarija> ljharb, also I'm talking about engine, not the game :D
[23:13:20] <matsaman> I type [a-z into node and it wants to autocomplete to [a-zlib =P
[23:13:32] <matsaman> works fine though
[23:14:03] <sheetjs> zlib is a global
[23:15:30] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 268 seconds)
[23:19:14] <ljharb> mastarija: sure but the engine doesn't matter unless there's a good game built with it
[23:19:20] <ljharb> ezzieyguywuf: it's just like a namespace for package names
[23:19:34] <ljharb> ezzieyguywuf: like https://npmjs.com/@ljharb/eslint-config for example
[23:20:14] <mastarija> ljharb, it does matter if the purpose was exploration of immutable JS game engine design and not a game
[23:20:31] <ljharb> mastarija: the purpose of exploring X design is to make better X
[23:21:46] <ashnur> mastarija, https://github.com/oakes/play-cljc
[23:21:50] <mastarija> ljharb, what?
[23:22:06] <ljharb> mastarija: exploring game design is so you can design a better game
[23:22:09] <ljharb> mastarija: otherwise why bother
[23:22:15] *** Joins: Guest998 (~Guest99@2601:586:c403:2600:5d2b:a41:e798:38d0)
[23:22:17] *** Parts: Guest998 (~Guest99@2601:586:c403:2600:5d2b:a41:e798:38d0) ()
[23:22:19] <ashnur> don't listen to ljharb, he thinks he knows everything :D
[23:22:33] <mastarija> yes, he spouts some nonsense
[23:22:40] <ljharb> what's nonsense?
[23:22:55] <ashnur> wouldn't say nonsense, but i agree it's an overgeneralization
[23:23:05] <mastarija> it misses the point completly
[23:23:06] <ljharb> of course i don't know everything. i don't know why you'd want to explore something for no other purpose than to waste time
[23:23:13] <mastarija> and starts arguing about something unrelated
[23:23:14] <ljharb> mastarija: that's why i keep asking for the point
[23:23:16] <mastarija> like game design
[23:23:38] <ashnur> ljharb, let's start with, if you don't know the purpose of something and feel it's a waste of time, doesn't mean you have to say what you feel
[23:23:39] <mastarija> ljharb, point is to make an immutable game engine in JS
[23:23:47] <mastarija> which might be nicer to work with
[23:23:59] <mastarija> because you don't have the burden of mutable game objects
[23:24:16] <ljharb> ashnur: i don't have to say anything, but i always get to choose to
[23:24:19] <mastarija> basically, how to be better at making games on an engineering level
[23:24:20] <ashnur> ljharb, unless, you are personally invested, in which case, i hope whoever else is there will invite you to share your feelings
[23:24:40] <ljharb> mastarija: that sounds great. what i said earlier is that you'd need an actual *game* built on it to persuade people that it was actually nicer to work with
[23:24:44] <mastarija> not on a game design level
[23:24:59] *** Quits: Heraes (~Heraes@user/romarain) (Quit: Leaving)
[23:25:11] <mastarija> ljharb, dude you are 10 steps ahead
[23:25:14] <ljharb> game programmers won't switch to an entirely different paradigm just because it "feels nicer to work with"
[23:25:16] <ljharb> mastarija: lol maybe so
[23:25:20] <ashnur> :D
[23:25:27] <ljharb> mastarija: nothing wrong with measuring twice before cutting once tho
[23:25:35] <mastarija> that's the bridge we'll cross once we come to it
[23:25:48] <mastarija> research doesn't always guarantee success or has a clear goal
[23:25:55] <mastarija> this is something you don't seem to understand
[23:26:04] <ljharb> mastarija: https://twitter.com/jzux/status/1423013399491801089
[23:26:11] <ashnur> that's how I see it too, if you put a purpose on it, you murdered it
[23:26:21] <ljharb> i think purposeless research is dooming it.
[23:26:46] <ashnur> in capitalism, for sure
[23:26:54] <ashnur> in general, maybe less so
[23:27:21] <ljharb> point me to the planet with humans and without capitalism and i'll be happy to go endorse purposeless research there
[23:27:22] <mastarija> let's not forget that whole "projective geometry" (basis of 3D games) was made for fun
[23:27:29] <mastarija> because someone was playing around with stuff
[23:27:42] <ljharb> mastarija: luck isn't retroactive justification
[23:28:08] <ljharb> mastarija: also citation needed
[23:28:11] <mastarija> dude, do you sit in a gray room whole day until someone comes to you with a specific purpose?
[23:28:36] <mastarija> don't you ever just "fuck around and find out"?
[23:28:40] <banana_> ljharb: hippie communes
[23:29:08] <banana_> except they work with capitalism
[23:30:15] <ljharb> mastarija: the phrase "fuck around and find out" is a threat. you're not *supposed* to fuck around.
[23:30:30] <ljharb> so it's an ironic choice to make your point :-)
[23:30:35] <mastarija> I know it's a threat, but I used it differently
[23:30:56] <mastarija> It's ironic how confined in your thinking you are
[23:30:58] <ljharb> most people who fuck around do indeed find out - that they shouldn't have done that
[23:30:59] <banana_> oh ok i actually read for context
[23:31:28] <mastarija> lol
[23:32:17] *** Joins: sam_1 (~sam_1@87.51.251.118)
[23:32:53] <ljharb> mastarija: i mean go nuts ofc, again i was just pointing out that nobody will care about your research unless it actually makes a successful/fun game and is also nicer to work with. i'd be stoked if that ended up happening; a significant % of the worst discussions in here are JS game devs trying to write terrible code
[23:33:45] <mastarija> ljharb, dude, I don't care if people don't care, I'm doing this for fun
[23:33:56] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[23:34:03] <happymeal> RIP norm macdonald  :(
[23:34:10] <banana_> yeah I mean there's plenty of nerds out there that build something in a cool way without the thing itself being cool
[23:34:19] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[23:34:52] <banana_> just to do it. maybe gives you a different perspective from the experience.
[23:35:46] <mastarija> I intend to, reason why I came here is that I thought someone might know of some prior art
[23:36:24] <mastarija> but then there's ljharb derailing the whole conversation with "reasons", just like last time I asked something here
[23:36:29] <mastarija> :)
[23:36:29] <ashnur> > <ljharb> point me to the planet with humans and without capitalism and i'll be happy to go endorse purposeless research there << yeah, maybe think about this twice before you repeat it?
[23:36:41] <banana_> there's definitely people on here that know how to functional program.
[23:36:54] <ashnur> how would such a planet exist when the richest and most affluent people refuse to even contemplate alternative thoughts if they are not served ready made?
[23:36:56] <ashnur> it's a joke
[23:37:10] <ashnur> who should build it for you?
[23:37:13] <ljharb> ashnur: i'm well aware of that. which is why "in capitalism" is a given
[23:37:26] <ashnur> its only a given as long as you refuse to contemplate alternatives
[23:37:35] <mastarija> also, you can just make a lot of money and conduct your purposless research for the rest of your life
[23:37:45] <mastarija> that's my approach for capitalistic society
[23:38:34] <banana_> yeah you might get status from it but you might gain some self-actualization, idk sounds ok.
[23:39:23] <ljharb> ashnur: i don't mean it'll always be one, i mean that when talking about actual context, alternatives are irrelevant; discussing alternatives is a different topic.
[23:39:28] <ljharb> mastarija: true enough
[23:39:58] *** Quits: inoas (~ionas@aftr-37-201-194-213.unity-media.net) (Quit: Leaving...)
[23:40:05] <mastarija> well, cya, gotta go conduct my purposless research ;D
[23:40:10] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 268 seconds)
[23:40:44] <banana_> like making synthetic cocaine versus going to south america
[23:40:55] *** Quits: mastarija (~mastarija@31.217.5.196) (Quit: Leaving)
[23:41:06] <ashnur> ljharb, such thinking only serves to cement the circumstances and to exclude the possibility of change
[23:41:26] <ashnur> cognitive dissonance to protect the narratives that people shield themselves
[23:41:29] *** Quits: salad (~cucumber@82.76.148.128) (Quit: salad)
[23:41:41] <banana_> the guy is wasting money, buying that one expensive chemical to make it syntactically but at least has a good time when he produces something
[23:42:01] <ashnur> if you want something else, you have to build everything in accordance with that else, not with your current context only
[23:43:10] *** Joins: earendel (uid498179@user/earendel)
[23:43:47] <banana_> I think he's just playing devils advocate but yeah go for it, people on here at least could help with the functional programming part in js
[23:43:58] <wroathe> Holy shit, Norm MacDonald died!? Nooooooo.
[23:44:24] <ashnur> that's sad
[23:44:33] <ashnur> been watching him this year a lot
[23:44:41] <wroathe> "I’m pretty sure, I’m not a doctor, but I’m pretty sure if you die, the cancer dies at the same time. That’s not a loss. That’s a draw." -- Norm
[23:46:13] *** Joins: chenxuezhao (~chenxuezh@120.244.238.69)
[23:46:21] <banana_> whoah went out like andy kaufman
[23:47:53] *** Quits: electr0n (~electr0n@about/security/founder/electr0n) (Quit: WeeChat 3.2)
[23:51:45] <shan> what the fuck is going on in here
[23:52:18] <ashnur> someone had to ruin my evening by being in the news on account of dying
[23:52:57] <shan> huh
[23:53:12] <ljharb> ashnur: it's just compartmentalizing
[23:53:16] *** Joins: nomic (~nomic@185.217.117.156)
[23:53:33] <ljharb> ashnur: if everyone's always thinking about changing capitalism when trying to solve other problems then those other problems won't get solved
[23:54:07] <ljharb> wroathe: damn, that's a pretty great quote
[23:54:07] <sillyslux__> https://twitter.com/peter_szilagyi/status/1437646118700175360
[23:54:35] <ljharb> sillyslux__: luckily most everyone migrated off of travis last november when they broke their pricing
[23:54:51] <sillyslux__> oh
[23:54:52] <ljharb> i have a few things left, but also i don't have any secrets in 99% of my projects
[23:55:22] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[23:55:35] <ljharb> for open source projects, CI secrets are usually just about deploying rendered sites for the project, so the potential damage is very minimal
[23:55:55] *** Quits: haycon (~haycon@84.215.37.126) (Ping timeout: 252 seconds)
[23:57:03] <ashnur> funny how the most important problems are somehow all such that we have to choose between solving them or working for a better society
[23:58:54] <banana_> I think it's like you need some people to sit around and think about stuff while others do the menial tasks
[23:59:31] <banana_> should probably be a balance where that responsibility is shared
