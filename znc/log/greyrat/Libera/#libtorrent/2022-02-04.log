[00:01:58] <cheater> APic, yeah. but also do dead channels.
[14:44:02] <nfc_> Not sure. I'd wager it's the client. Isn't all this reasonably well documented? (Was last time I checked.)
[17:53:46] <DjLegolas> 1. the client is responsible of moving completed torrents, using libtorrent.torrent_handle.move_storage()
[17:55:58] <DjLegolas> 2. you can query the session handler for torrent status, which will return the torrent_status struct, which has a progress (float [0, 1]) or progress_ppm (int [0, 1000000]): https://libtorrent.org/reference-Torrent_Status.html
[17:56:09] <DjLegolas> @cheater
[18:20:04] <cheater> nfc_ DjLegolas thanks. i have tried reading libtorrent documentation and i haven't seen either of that, i'm new to the codebase
[18:20:28] <cheater> DjLegolas: how does move_storage handle sparse files? does it have any handling for them?
[18:24:44] <DjLegolas> TBH, i have no idea. my guess is that it will treat them the same way it handles any other file.. but your guess is good as mine :)
[20:35:32] <cheater> DjLegolas: it's a pretty big problem for the following reason. and it comes as a combination of things that aren't necessarily due to libtorrent, but it's the situation that libtorrent finds itself in and so it has to live with it.
[20:36:57] <cheater> first of all, for many residential users, seeding more than a handful of torrents will essentially ddos their router, as it just can't handle the network pressure associated with outgoing connections necessary to seed a torrent correctly. so you want to limit your seeding to maybe say 10-20 torrents.
[20:38:15] <DjLegolas> i think the best way to find out is to open an issue in the github page
[20:38:21] <cheater> second of all, if you want to maximize your utility, you will be seeding collection torrents. for example, let's say there is a free (as in freedom) tv series that is released both on an episodic basis (one torrent per episode), and everything in one torrent (4 sesons / 40 episodes in one torrent)
[20:39:01] <cheater> so you want to be seeding the second one, because the internet drop outs will actually be /per torrent/ not /per megabytes shared/ so the more megabytes you share the better
[20:40:25] <cheater> now the next aspect of this is that most people using torrents a lot will have a temporary disk and then completed torrents are moved to another disk that only stores stuff and never has downloads going. not doing things this way (i.e. you have both temp/ and download/ on the same FS) results in pathological file systems that slow down file IO by orders of magnitude.
[20:41:52] <cheater> the last aspect of this is that many people downloading collection torrents will not download everything. let's say a musician released 500 of their music videos in one torrent and you only want, say, 20 of them. they will amost certainly not be contiguous. that means that for every file you want to download, the last chunk of the file before that will also be downloaded. in temp/, a sparse file will be created for that previous file that will only 
[20:41:52] <cheater> take up as much disk space as that last chunk needs. however, when this file is moved, the file will be inflated.
[20:42:33] <cheater> this means that for a torrent where you download 20 files, you will be essentially using the amount of disk space that 40 files take up.
[20:42:42] <cheater> the current behavior i'm seeing from clients using libtorrent is that sparse files are not being handled specially, which means that this space doubling happens
[20:44:35] <cheater> rant over :-)
