[00:00:09] <vdamewood> Can you imagine running a computer with a 100 baud teletype?
[00:00:55] <[itchyjunk]> I cannot
[00:01:00] <[itchyjunk]> because i don't understand what that means
[00:01:35] <mrig> was curses an attempt to standardise terminal display?
[00:01:36] <vdamewood> [itchyjunk]: Back in the ancient days, computers didn't have screens. You would connect to them with a device that was meant to be a remote typewriter.
[00:01:37] <GeDaMo> A teletype is like a mechanical typewriter, 100 baud refers to the communication speed with the computer
[00:02:42] <vdamewood> Normally, you'd plug your teletype into a special line for teletypes, and someone else would plug in theirs, and what you typed showed up on their paper.
[00:02:52] *** Quits: Cashlin (~hp@user/cashlin) (Quit: Konversation terminated!)
[00:03:18] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[00:03:22] <vdamewood> Someone got the bright idea to use that to communicate with a computer. So what you typed was sent to the computer, and the computer would send back teletype messages as its output.
[00:03:23] <[itchyjunk]> fancy
[00:03:29] *** Joins: flynn (~mcbloch@user/flynn)
[00:03:30] <[itchyjunk]> i've used dial up plenty
[00:03:35] *** Joins: rtypo (~alex@user/rtypo)
[00:03:38] <GeDaMo> https://en.wikipedia.org/wiki/Acoustic_coupler
[00:03:38] <bayaz> Title: Acoustic coupler - Wikipedia 
[00:04:05] <vdamewood> 100 baud means that the pulse on the line could change about 100 times per second, which meant you could see about 10 characters output per second.
[00:04:26] <vdamewood> or send about 10 characters per second.
[00:04:53] <[itchyjunk]> Only if you use binary!
[00:05:07] <[itchyjunk]> neurons work in some analog way i heard
[00:05:10] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 240 seconds)
[00:05:13] <[itchyjunk]> so they can encode a lot more
[00:05:17] <[itchyjunk]> how ever that works
[00:05:22] <vdamewood> For the most part, TTY lines used binary encodings.
[00:06:15] <vdamewood> TTY = TeleTYpe
[00:07:45] <vdamewood> So, just think, if you wanted to output a full screen of characters, at 80 characters per line, and 24 characters per screen, it would take 3 minutes and 12 seconds.
[00:07:55] <vdamewood> Of course, there was no such thing as a 'screen'.
[00:08:08] *** Joins: Crescendo (~Crescendo@user/crescendo)
[00:09:02] <vdamewood> GeDaMo: Though, it's my understanding that telecom companies in the day offered dedicated tty lines, separate from the telephone system.
[00:09:06] <[itchyjunk]> it kinda makes sense that people would output to paper at some point
[00:09:16] <[itchyjunk]> the input via paper is a bit weirder
[00:09:18] <pyzozord> actually I wanted to set my terminal in low baud but couldn't figure out how to do it
[00:09:29] <[itchyjunk]> but i can imagine inputing truth table or some such somehow
[00:09:42] <GeDaMo> Yeah, possibly
[00:09:47] <GeDaMo> I never had to deal with those
[00:09:56] <vdamewood> So, no acoustic couplers for TTYs.
[00:10:24] <GeDaMo> I seem to remember some TTY devices having acoustic couplers built-in
[00:10:33] <pyzozord> I think seeing characters stream in over time would be pretty cool
[00:10:54] <pyzozord> I might do it now with my terminal actually
[00:10:56] <vdamewood> Hmm... I guess it would make sense for some companies to want to try to use the phone line instead to save on the cost of leasing a TTY line.
[00:11:26] <vdamewood> Especially if they only sent a handful of communiqu√©s per month. And the long-distance charges were cheaper.
[00:11:40] <InPhase> vdamewood: I called one of those services as a child, using my dialup modem.  I saw the number listed somewhere, and didn't know what it was, so I called it up with my modem.  The person on the other end was typing stuff back asking me if I wanted to make a call.  I quickly figured out what it was for from that.
[00:11:41] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 252 seconds)
[00:11:53] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[00:12:12] *** Joins: Crescendo (~Crescendo@user/crescendo)
[00:12:21] <vdamewood> InPhase: One of those services?
[00:12:31] <InPhase> vdamewood: TTY services.
[00:13:14] <vdamewood> Did they bridge a modem connection to a TTY line or was it like a telegram?
[00:13:41] <InPhase> vdamewood: It opened like a very low baud modem connection.  I used the same software I used to connect to BBS's.
[00:14:17] *** Joins: dunkeln (~dunkeln@94.128.205.199)
[00:14:17] *** Quits: dunkeln (~dunkeln@94.128.205.199) (Changing host)
[00:14:17] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[00:14:25] <InPhase> I'm not sure how other people were doing it, but apparently the dialup modems were intercompatible with the TTY service protocol.
[00:14:45] <vdamewood> Okay, so it was a bridging service.
[00:14:45] <GeDaMo> http://www.webstart.com/jed/service/texassilent700.gif
[00:14:46] <bayaz> Type: image/gif Size: 381.3 kB 
[00:15:12] <InPhase> This would have been around 1993-1995, I don't quite remember when.
[00:15:27] <GeDaMo> https://craphound.com/images/radio_shack_catalog_rsc-09_computer_catalog.1983.pdf-pages.jpg
[00:15:28] <JanC> using standardised protocols would make sense from a cost perspective, of course
[00:15:28] <bayaz> Type: image/jpeg Size: 139.3 kB 
[00:15:56] *** Quits: sevla (~platen@user/sevla) (Ping timeout: 250 seconds)
[00:16:14] <vdamewood> JanC: Right, but the technologies were developed separately and before there was standardization.
[00:16:33] <vdamewood> These days, everything is better because it's all TCP/IP.
[00:16:45] <InPhase> It's possible dialup modems copied the TTY approach.
[00:17:17] *** Joins: webNET4 (~0x100@32.211.211.39)
[00:17:49] <vdamewood> Well, I have a concert to get ready for.
[00:20:20] *** Joins: sevla (~platen@user/sevla)
[00:20:46] *** Quits: thomas_25 (thomas_25@pls.just.stfu-kthx.bnc4you.xyz) (Quit: FreeZNC - Visit us! Server: irc.libera.chat Channel: #bnc4you)
[00:20:51] *** Quits: andypandy (~andypandy@h-178-174-148-234.A163.priv.bahnhof.se) (Quit: Bye)
[00:22:39] *** Joins: andypandy (~andypandy@h-178-174-148-234.A163.priv.bahnhof.se)
[00:28:45] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Quit: Leaving.)
[00:31:02] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:71b7:bdff:34f7:41d7)
[00:33:41] *** Quits: freakazoid343 (~matt@2603-9000-cf0f-80e3-71b7-bdff-34f7-41d7.inf6.spectrum.com) (Ping timeout: 252 seconds)
[00:36:30] *** Quits: chickfilla (~lastc@modemcable058.200-162-184.mc.videotron.ca) (Remote host closed the connection)
[00:37:48] *** Joins: thomas_25 (thomas_25@pls.just.stfu-kthx.bnc4you.xyz)
[00:38:38] *** Quits: inky_ (~inky@5.77.158.200) (Ping timeout: 252 seconds)
[00:38:47] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[00:38:53] *** Joins: chickfilla (~lastc@modemcable058.200-162-184.mc.videotron.ca)
[00:40:22] *** Joins: inky_ (~inky@46.36.119.19)
[00:41:54] *** Quits: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net) (Ping timeout: 256 seconds)
[00:42:58] *** Quits: sevla (~platen@user/sevla) (Ping timeout: 252 seconds)
[00:44:33] *** Joins: sevla (~platen@user/sevla)
[00:45:03] *** Quits: Haxxa (~Haxxa@122.199.45.213) (Quit: Haxxa flies away.)
[00:46:16] *** Joins: rsx (~dummy@ppp-188-174-139-239.dynamic.mnet-online.de)
[00:47:29] *** Joins: chance (~chance@user/chance)
[00:51:05] <pyzozord> Ok, got more keys now working, had to manually map them
[00:51:19] *** Joins: Haxxa (~Haxxa@122.199.45.213)
[00:51:19] <pyzozord> still delete, home and the like won't work though :(
[00:51:22] *** Quits: chance (~chance@user/chance) (Client Quit)
[00:51:32] *** Quits: sevla (~platen@user/sevla) (Ping timeout: 256 seconds)
[00:51:50] <pyzozord> but at least I can now ^^ to switch the current file in vi
[00:52:43] <webNET4> how are you reading the keys?
[00:53:18] <pyzozord> I'm getting the simulated/virtual keycode from sdl
[00:53:25] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[00:54:03] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[00:56:12] *** Quits: humky (~humky@user/humky) (Quit: Leaving)
[00:59:24] *** Quits: chickfilla (~lastc@modemcable058.200-162-184.mc.videotron.ca) (Remote host closed the connection)
[01:02:03] *** Joins: jamea77 (~jamea@189.237.193.205)
[01:02:44] *** Quits: jamea (~jamea@200.68.140.27) (Ping timeout: 250 seconds)
[01:02:46] <mrig> Using the named pipe is really useful, as it also delays the start of the program until the pipe is being read, so there is plenty of time to start gdb and place break points then too :)
[01:02:56] *** Quits: Curiosity (uid511277@user/cypris) (Quit: Connection closed for inactivity)
[01:03:35] *** Joins: jamea (~jamea@189.237.193.205)
[01:03:52] *** Quits: zwr (~zwr@2804:d45:b966:fb00:38de:c296:2fbf:c2fe) (Ping timeout: 252 seconds)
[01:04:19] *** Quits: user51 (~user51@176.228.90.248) (Remote host closed the connection)
[01:04:41] *** Joins: zwr (~zwr@2804:d45:b966:fb00:910a:d889:ae80:3966)
[01:06:21] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:1401:c07a:1bf6:5a6f)
[01:06:34] *** Quits: jamea77 (~jamea@189.237.193.205) (Ping timeout: 240 seconds)
[01:07:02] <pyzozord> You know what is one thing C does wrong? It confuses strings and characters with bytes. One needs to preted memory is array of characters to operate on bytes
[01:07:07] <webNET4> is that a SDL_SCANCODE ?
[01:07:13] <pyzozord> webNET4: yes
[01:07:26] <webNET4> hmm i wonder why they aren't workin
[01:08:03] <pyzozord> it makes sense it doesn't work. I wonder why the xlib version worked without mappings
[01:08:07] <webNET4> bytes aren't a type in C
[01:08:10] *** Quits: jamea (~jamea@189.237.193.205) (Ping timeout: 240 seconds)
[01:08:30] <pyzozord> yeah it should be. There should be just byte type
[01:08:45] <webNET4> if you use unsigned char *  as "bytes" and -Wconversion it will warn you
[01:09:02] *** Joins: jamea (~jamea@189.237.193.205)
[01:09:23] <InPhase> pyzozord: C pretends that there are computers without 8 bit bytes, because these used to exist.
[01:09:37] <pyzozord> oh wait, so I shouldn't use unsigned?
[01:10:13] <vdamewood> InPhase: They still do.
[01:10:17] <webNET4> for a string?
[01:10:24] <pyzozord> oh I see. Yeah it makes sense then that they didn't call it "byte"
[01:10:33] <InPhase> vdamewood: Good luck stumbling into one.
[01:10:47] <webNET4> strings contain chars char is signed,   i don't agree with it but thats how C works/was designed
[01:11:13] <pyzozord> oh really? I think I might have forgotten about that
[01:11:16] <InPhase> vdamewood: Old mainframes that could be upgraded to a raspberry pi don't count.  :)
[01:12:05] <pyzozord> so what happens if I do unsigned char c = 'c'; printf("%c", c);
[01:12:16] <pyzozord> do I get a different character?
[01:12:21] <vdamewood> InPhase: Naw, I'm talking embedded systems and DSP. Where, eg CHAR_BIT = 24, and sizeof(short) = siseof(int) = sizeof(long) = 1
[01:12:45] <webNET4> if you use -wconversion it will (hopefully) cause a warning
[01:12:51] <webNET4> -Wconversion
[01:13:02] <webNET4> many compilers don't care by default
[01:13:21] <pyzozord> but does it change how program behaves?
[01:13:27] *** Quits: jamea (~jamea@189.237.193.205) (Ping timeout: 245 seconds)
[01:13:33] <pyzozord> or is it just kind of semantic/types kind of warning
[01:13:41] <InPhase> vdamewood: For those limited cases, C and C++ should target an abstract machine, and it should be the compiler's job to make these things work out on the platform.
[01:13:56] *** Joins: jamea77 (~jamea@189.237.193.205)
[01:14:08] <vdamewood> InPhase: Well, that's what they do. (At least C does. I haven't confirmed for C++)
[01:14:13] <webNET4> it's to catch mistakes, and there could be some issues mainly when the type sizes don't match
[01:14:33] <pyzozord> InPhase: I'm not sure but I think it's "the abstract machine". As in, there is only one.
[01:15:44] *** Quits: rsx (~dummy@ppp-188-174-139-239.dynamic.mnet-online.de) (Quit: rsx)
[01:15:44] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[01:15:51] <pyzozord> webNET4: ah so program output won't change on normal 8bit-byte computers
[01:15:52] *** Joins: jamea (~jamea@189.237.193.205)
[01:16:00] <vdamewood> Just like the Highlander.
[01:16:00] <InPhase> vdamewood: The ambiguity on the types has served no one.  It's basically premature optimization cutting down into the code itself, making implementation difficult.
[01:16:44] <vdamewood> InPhase: Your argument seems to have drifted. I only mentioned that systems with CHAR_BIT != 8 still exist.
[01:17:13] <InPhase> vdamewood: But who uses them?
[01:17:46] <vdamewood> Audio engineers. Bus operators.
[01:17:48] <InPhase> vdamewood: Museums, yes.  Legacy embedded chips, sure.  Who is buying embedded chips without 8 bit support in 2021 for new projects?
[01:17:50] *** Joins: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net)
[01:17:51] <pyzozord> my point was only that i must use char type to operate on memory
[01:18:07] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[01:18:14] <webNET4> pyzozord  i'm no SDL expert but maybe you should be using SDLK_ instead of SDL_SCNACODE
[01:18:19] <webNET4> errrgh  SDL_SCANCODE
[01:18:25] *** Joins: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net)
[01:18:31] *** Pixi_ is now known as Pixi
[01:18:41] <pyzozord> webNET4: sorry I actually use SDLK_ indeed. I realized the same thing and converted all mappings
[01:18:43] *** Quits: jamea77 (~jamea@189.237.193.205) (Ping timeout: 252 seconds)
[01:18:54] <webNET4> ah
[01:19:15] <sgt_chuckles> whats a typical way to store settings/credentials in a CLI application? 
[01:19:25] <webNET4> is this in a window env, or is SDL reading device directly
[01:19:37] *** Joins: jamea77 (~jamea@189.237.193.205)
[01:19:44] <InPhase> vdamewood: (My usage of "exist" is of course hyperbole.  But I refer to the fact that they seem to have no prominence anywhere that I can see, and are basically a relic of the past.)
[01:19:49] *** Quits: hqdruxn08__ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 252 seconds)
[01:19:52] *** Quits: jamea77 (~jamea@189.237.193.205) (Read error: Connection reset by peer)
[01:20:07] *** Quits: jamea (~jamea@189.237.193.205) (Ping timeout: 245 seconds)
[01:20:20] <sgt_chuckles> at my job we use .env and .yaml, but I don't get the point of using the .yml file to read from the .env file, when we can just read from .env 
[01:20:21] <pyzozord> sgt_chuckles: in docker containers that's usally in env vars
[01:21:29] <pyzozord> sgt_chuckles: what ymls exctly?
[01:21:55] <sgt_chuckles> a config.yml file in my application
[01:22:17] <pyzozord> config.yml is very generic, what reads that config.yml
[01:22:46] <sgt_chuckles> the program when it needs to access a url, and get stuff like client_id, ect.
[01:22:57] <sgt_chuckles> the url is supposed to be secret
[01:23:10] <sgt_chuckles> credentials, ect.
[01:23:29] <pyzozord> well maybe it's just poorly written / messy code?
[01:23:36] <webNET4> credentials in the URL???   is that standard practice?
[01:24:07] <sgt_chuckles> no, it needs to provide credentials before accessing a url like api keys
[01:24:24] <sgt_chuckles> which is kept in a .env
[01:24:51] <sgt_chuckles> and read via templates into yaml to be read by the program...I just find the method a bit tedius
[01:24:51] <InPhase> vdamewood: On searching, I managed to find one 20 year old TI DSP still in use that has CHAR_BIT>8, and one line from Analog Devices that used to be 16-bit or 32-bit, but their latest ones support 8-bit.
[01:25:16] <InPhase> vdamewood: I think it is too inconvenient to work in an 8-bit networked world without supporting 8-bit data.
[01:25:23] <pyzozord> you'd typycally keep api keys in environment. The .env are usually used by build system to set the correct envrionment in correct docker container, they are not actually used by the program in production
[01:25:36] *** Joins: jamea (~jamea@189.237.193.205)
[01:25:39] <sgt_chuckles> im not using a docker container
[01:25:44] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[01:25:52] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[01:25:52] <InPhase> vdamewood: I'm having trouble finding a third line in use anywhere that has CHAR_BIT != 8.
[01:26:25] <sgt_chuckles> pyzozord: i would like to, but i need to access the user's file system via the application, and idk how to via docker.
[01:26:28] <pyzozord> sgt_chuckles: are you sure? how is the application ran in production? Also docker container or vm, it doesn't matter
[01:26:57] <sgt_chuckles> that's the thing, it's not in production yet
[01:27:11] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[01:27:23] *** Joins: webNET4 (~0x100@32.211.211.39)
[01:27:31] <sgt_chuckles> of course im sure
[01:27:32] <pyzozord> docker is mostly a server technology, you typically don't use it on user machines
[01:27:40] <sgt_chuckles> ok
[01:28:01] <[itchyjunk]> holy poop
[01:28:04] <pyzozord> although there are some exceptions like flatpack or whathaveyou nowadays
[01:28:13] <[itchyjunk]> apparently you can eliminate run time errors in lnaguages liek adga
[01:28:17] * [itchyjunk] mind blown
[01:28:21] *** Lord_of_Life_ is now known as Lord_of_Life
[01:28:30] <webNET4> you can't eliminate runtime errors
[01:28:31] <pyzozord> but I think it's not docker per se, but it does use containers
[01:28:39] *** Joins: jamea77 (~jamea@200.68.140.27)
[01:28:54] <webNET4> well, unless you have redundant machines that operate in lockstep
[01:29:01] <webNET4> then you can within a certain percentage of confidence
[01:29:05] <sgt_chuckles> pyzozord: lets say your terminal application needs some credentials that could be saved on your machine for later use. How would you provide and store that data.
[01:29:06] *** Joins: sevla (~platen@user/sevla)
[01:29:15] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:29:37] <sgt_chuckles> like github user credentials for example
[01:29:48] <pyzozord> sgt_chuckles: few ways, one idea is to use that machines safe secret store service
[01:30:11] *** Quits: ethanv2 (~ethanv2@2.220.159.187) (Quit: leaving)
[01:30:16] <pyzozord> sgt_chuckles: https://rtfm.co.ua/en/what-is-linux-keyring-gnome-keyring-secret-service-and-d-bus/
[01:30:16] *** Quits: jamea (~jamea@189.237.193.205) (Ping timeout: 252 seconds)
[01:30:24] <webNET4> iirc  "byzantine generals"
[01:31:05] <sgt_chuckles> would this work for macos?
[01:31:26] <pyzozord> sgt_chuckles: looking up how some well known applications store user credentials is a good idea. For example docker (but ignore the fact that it's docker) has multiple methods and lets user chose how user would like the credentals to be stored
[01:31:38] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:31:46] *** Quits: mnd999_ (~mark@2001:8b0:da3:76a2:4630:5b97:83a2:3e21) (Ping timeout: 256 seconds)
[01:31:54] <pyzozord> sgt_chuckles: the easiest is of course just keep it in some text file somewhere and only make sure the permissions to that file are only for this user
[01:32:30] *** Joins: Auron (~Auron956@user/auron)
[01:32:55] <pyzozord> sgt_chuckles: git pretty much does that. It just simply stores your login and password in a text file
[01:33:16] <vdamewood> InPhase: https://www.nxp.com/products/processors-and-microcontrollers/additional-mpu-mcus-architectures/digital-signal-processors/24-bit-dual-core-symphony-dsp:DSP56724
[01:33:17] <bayaz> Title: DSP56724|24-bit Dual-Core Symphony¬Æ DSP | NXP Semiconductors 
[01:33:54] <sgt_chuckles> pyzozord: if git does it that way, I don't see why we can't use that same process
[01:34:32] <pyzozord> sgt_chuckles: yeah, I'd go for it. Just read up on best practices with that, it's easy to mess this up if you are not carefull
[01:34:37] <sgt_chuckles> providing credentials shouldn't be a cumbersome process
[01:35:41] <vdamewood> InPhase: ^ Looks like it has support for 8-bit data transfer, but still works internally on 24- and 56-bit data.
[01:37:01] <[itchyjunk]> https://www.youtube.com/watch?v=bRudW0aBNg8
[01:37:02] <bayaz> Title: Eliminating Run-Time Errors with Agda - Computerphile 
[01:37:12] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[01:37:36] <pyzozord> [itchyjunk]: I think webNET4 point was that there are outside factors even if your code was perfect. Like cosmic rays
[01:37:45] <webNET4> itchy, thats only theoretical elimination, how can agda detect a bit flip from cosmic rays
[01:38:07] <webNET4> or faulty ram module
[01:38:16] <webNET4> rowhammer, etc
[01:38:16] <pyzozord> also formal proof could be wrong too I guess
[01:38:36] <pyzozord> meaning you could make some mistake while making the proof
[01:39:45] <pyzozord> [itchyjunk]: unfortunatly humans do not operate in the world of absolutes. There is always a but.
[01:40:44] <pyzozord> [itchyjunk]: but being more certain is better than being less certain, so it doesn't mean we should just give up. I certainly prefer to fly airplanes that have proved software than unproved
[01:40:56] <[itchyjunk]> well mathematical proof
[01:41:06] <[itchyjunk]> a type theoritic proof
[01:41:21] <pyzozord> if I'm not mistaken mathematical proofs get disproven too
[01:41:34] <webNET4> and what of a failing angle of attack sensor that is generating values within acceptable parameters but they're all over the map
[01:41:37] <[itchyjunk]> if it's a proof, it can't be disproven in the same formal system.
[01:41:45] <[itchyjunk]> your proof can be wrong to begin with.
[01:41:51] *** Joins: soapsudsxx (~soapsudsx@141.193.188.154)
[01:41:51] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-9946-f19a-5329-6a99.res6.spectrum.com)
[01:41:57] <[itchyjunk]> but if it's sound, you can't disprove it later in the same formal system
[01:41:59] <pyzozord> yes that's my point
[01:42:33] <pyzozord> if something is true you can't prove it false later. But maybe it wasn't true in the first place
[01:42:38] <[itchyjunk]> you can't prove something wrong in a formal proof system like agda though. unless you introduce some funcky axiom just to get it wrong
[01:42:56] <[itchyjunk]> you can't prove a not ture thing as true in the whole point though
[01:43:05] <[itchyjunk]> of proof assistance and programm as proof
[01:43:12] <[itchyjunk]> at least that's what i am udnerstanding from this
[01:43:19] <[itchyjunk]> else type theory is meaningless
[01:43:42] <InPhase> vdamewood: Well, my laptop also works primarily with 32-bit, 64-bit, 128-bit, and 256-bit chunks of data.  But still supports 8-bit bytes, for that same reason of data transfer.  :)  
[01:43:48] *** Joins: azed (~azed@102.104.143.187)
[01:43:55] <[itchyjunk]> program as a proof only works if you can verify that it is true. if it lets you prove wrong things, it's meaningless
[01:44:01] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 250 seconds)
[01:44:26] <pyzozord> [itchyjunk]: my point is, humans are flawed and make mistakes
[01:44:53] <[itchyjunk]> Yes but formal proof system doesn't have the human element in it
[01:45:09] <[itchyjunk]> if you foamally prove 2 + 2 = 4, it's true.
[01:45:25] <pyzozord> unless you made an error in your proof, that's my point
[01:45:27] <[itchyjunk]> if it could be false but you still proved it true, type theory becomes meaningless
[01:45:30] <[itchyjunk]> you can't
[01:45:40] <InPhase> [itchyjunk]: They do.  As you increase the complexity of what you're trying to prove, the core problem is demonstrating that what you are proving is actually what you wanted to true.  Essentially, the proof specification simply becomes another way of writing a program.
[01:45:49] *** Quits: NEYi (~NEYi@109.251.216.38) (Quit: Leaving)
[01:45:52] <[itchyjunk]> you can't make an error and prove it in a proof system
[01:45:53] <InPhase> s/wanted to true/wanted to prove/
[01:46:06] <[itchyjunk]> InPhase, in paper and pencil proofs
[01:46:11] <InPhase> [itchyjunk]: You can.  You can prove the wrong thing, and make a mistake in what you think you are proving.
[01:46:14] <[itchyjunk]> i am talking about type theory program as a proof concept
[01:46:29] <[itchyjunk]> InPhase, that won't be the witness of your end goal
[01:46:42] <[itchyjunk]> if you assume A to prove B but B was some other type
[01:46:45] <InPhase> [itchyjunk]: Imagine trying to make a formal mathematical proof that an IRC client is correct.
[01:46:50] <[itchyjunk]> the program gets stuc in endless goal
[01:47:02] <[itchyjunk]> InPhase, yes, that's program as a proof
[01:47:21] <[itchyjunk]> if you can exebit there is a witness of such a client then that is your proof
[01:47:28] <InPhase> [itchyjunk]: To do it, you have to exactly specify all the behavior of an IRC client.  That has similar complexity to writing an IRC client.
[01:47:38] <[itchyjunk]> yes
[01:47:41] <[itchyjunk]> it's hard.
[01:47:50] <InPhase> And, has as much room for error as writing an IRC client.
[01:47:55] <[itchyjunk]> but if you prove that formally, it can't later turn out to not be true.
[01:48:11] <[itchyjunk]> you might not be able to prove something.
[01:48:15] <[itchyjunk]> but if you do, that's that
[01:48:23] <InPhase> You will know that your program exactly matches what you wrote out that it SHOULD do.  But how do you prove that what you wrote out that it should do is what it was actually supposed to do?
[01:48:25] <[itchyjunk]> unless you're claiming type theory is wrong at it's core.
[01:48:39] <[itchyjunk]> by having a type of each result
[01:48:44] <[itchyjunk]> and witness for each type
[01:48:56] <InPhase> This is in fact the same problem of programming itself.  Programs almost always do exactly what you tell them to do.
[01:48:59] <[itchyjunk]> a proof is just a program of that type.
[01:49:04] <[itchyjunk]> ...
[01:49:24] <[itchyjunk]> you're literally dismissing a large branch of math with no justification
[01:49:33] <InPhase> I'm not.  The math is fine.
[01:49:33] <[itchyjunk]> type theory seems to be pretty sound
[01:49:36] <pyzozord> InPhase: I don't think he is ready for this line of thinking
[01:49:38] <[itchyjunk]> type theory is math.
[01:49:46] <InPhase> Type theory I have no problems with.
[01:49:54] <[itchyjunk]> This is literal premise of type theory.
[01:50:02] <[itchyjunk]> Programms as proof.
[01:50:10] <InPhase> It's that applying it to the real world seems to introduce the same complexity and errors as the problems it's trying to solve.
[01:50:15] <[itchyjunk]> And you need to have a witness to show program exists.
[01:50:24] <[itchyjunk]> complexity exists.
[01:50:27] <[itchyjunk]> I am not arguying that.
[01:50:33] <[itchyjunk]> And you might have errors.
[01:50:44] <[itchyjunk]> But if you do, you won't be able to prove it.
[01:50:46] <InPhase> Which means that your proof did not buy correctness.
[01:50:53] <[itchyjunk]> It never runs.
[01:51:00] <[itchyjunk]> If you make an error, you get stuck in a loop
[01:51:03] <[itchyjunk]> of sub goals.
[01:51:09] <[itchyjunk]> you never reach the Qed.
[01:51:13] <[itchyjunk]> so you never had a proof.
[01:51:21] <[itchyjunk]> But if you do get the Qed. that's that.
[01:51:26] <InPhase> That's what?
[01:51:32] <InPhase> Tell me what the "that" is exactly.
[01:51:33] <[itchyjunk]> A witness.
[01:51:36] <InPhase> Of?
[01:51:41] <[itchyjunk]> of the type.
[01:51:47] <InPhase> Which proves exactly what?
[01:51:48] *** Joins: jamea (~jamea@200.68.140.27)
[01:52:01] <[itchyjunk]> your Theorem. Lemma. Assertion.
[01:52:10] <InPhase> And how do you know that is correct?
[01:52:10] <[itchyjunk]> Your theorem in this case was `irc client`.
[01:52:16] <[itchyjunk]> because oyu have a witness.
[01:52:23] <InPhase> No, that's how the math checks out.
[01:52:29] <InPhase> How do you know it is a correct IRC client?
[01:52:29] <[itchyjunk]> that is how math checks out.
[01:52:39] <[itchyjunk]> because you have a witness for the type.
[01:52:48] <[itchyjunk]> this is what type theory is.
[01:52:48] <InPhase> What does the witness for the type show you?
[01:52:59] <pyzozord> [itchyjunk]: 
[01:52:59] <[itchyjunk]> How do you show P->P ?
[01:53:04] <InPhase> You're stuck in a box.  I'm trying to get you out of the box.
[01:53:10] *** Quits: jamea77 (~jamea@200.68.140.27) (Ping timeout: 240 seconds)
[01:53:12] <pyzozord> [itchyjunk]: "Beware of bugs in the above code; I have only proved it correct, not tried it" - that's Donald Knuth
[01:53:19] <[itchyjunk]> Prove to me P-> P
[01:53:36] <InPhase> We're not debating the math.  We agree the math works.
[01:53:47] <pyzozord> InPhase: I don't think he is ready. He has a shiny new hammer. You are makeing it mate
[01:53:49] <[itchyjunk]> Type theory is math.
[01:54:00] <[itchyjunk]> P->P is an asertion. any program can be an assertion.
[01:54:03] <InPhase> [itchyjunk]: And it works.  Now how do you know the IRC client does what an IRC client should?
[01:54:05] <[itchyjunk]> You prove it by producing a witness.
[01:54:08] <[itchyjunk]> there is no difference.
[01:54:22] <[itchyjunk]> not being able to define "irc client" isn't an issue.
[01:54:22] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[01:54:28] <InPhase> [itchyjunk]: Not an issue??
[01:54:31] <InPhase> [itchyjunk]: It's the whole game.
[01:54:34] *** Joins: flynn (~mcbloch@user/flynn)
[01:54:37] <[itchyjunk]> Your premise is that a definition exists.
[01:54:40] <[itchyjunk]> And that you prove it.
[01:54:45] <[itchyjunk]> And it turns out incorrect.
[01:54:45] <InPhase> Nope nope nope.
[01:54:56] <[itchyjunk]> Then you and I are having different conversation.
[01:55:02] <[itchyjunk]> Because i asked twice and that's what was said above.
[01:55:11] <[itchyjunk]> that theorem once proved turns out to be false.
[01:55:19] <InPhase> [itchyjunk]: The whole reason this isn't in widespread use is because sitting down and trying to formally define an IRC client is no easier than writing an IRC client.
[01:55:32] <[itchyjunk]> That's not related to the claim.
[01:55:34] <InPhase> [itchyjunk]: Both come with the same chances for making uncaught mistakes.
[01:55:38] *** Quits: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net) (Read error: Connection reset by peer)
[01:55:41] <[itchyjunk]> Claim is that an assertion exists.
[01:55:47] <[itchyjunk]> Not that it's hard to make an assertion.
[01:55:51] <InPhase> And if you make uncaught mistakes...  You do not have a correct IRC client.
[01:55:56] <[itchyjunk]> Further, the claim is that a proof for that assertion exists.
[01:56:08] *** Joins: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net)
[01:56:13] <[itchyjunk]> Finally, that this proof can turn out to be a non proof.
[01:56:17] <[itchyjunk]> This is impossible.
[01:56:29] <InPhase> No one is suggesting that.
[01:56:32] <[itchyjunk]> Maybe you decide to change the assertion.
[01:56:36] <[itchyjunk]> Scroll up.
[01:56:40] <InPhase> It's not the issue.
[01:56:40] <[itchyjunk]> I've not changed what I have said.
[01:56:48] <InPhase> And you've not yet heard what I said.  :)
[01:57:14] <[itchyjunk]> <pyzozord> if something is true you can't prove it false later. But maybe it wasn't true in the first place
[01:57:14] <[itchyjunk]> <[itchyjunk]> you can't prove something wrong in a formal proof system like agda though. unless you introduce some funcky axiom just to get it wrong
[01:57:15] <InPhase> Still stuck in the math box.  Now try the real world box where there are problems to define.  :)
[01:57:16] <[itchyjunk]> Ypi
[01:57:23] <[itchyjunk]> You're talking about something else, idk what.
[01:57:36] <[itchyjunk]> The claim was something gets proved in a formal system and later turns out to be false.
[01:57:42] <[itchyjunk]> Which isn't the case.
[01:57:57] <InPhase> Actually pyzozord said the opposite of what you're attributing there.
[01:58:23] <InPhase> "maybe it wasn't true in the first place" means maybe what you were trying to prove never WAS a correct IRC client.
[01:58:40] <[itchyjunk]> pyzozord> also formal proof could be wrong too I guess
[01:58:40] <[itchyjunk]> <pyzozord> meaning you could make some mistake while making the proof
[01:58:50] <[itchyjunk]> if it's a formal proof, it's a proof.
[01:58:51] <InPhase> Yes.
[01:58:53] <pyzozord> [itchyjunk]: are you aware that you are talking to a phd in physics?
[01:58:55] <[itchyjunk]> it proved something.
[01:58:57] <InPhase> [itchyjunk]: But what?
[01:59:07] <[itchyjunk]> your assertion can change.
[01:59:11] <[itchyjunk]> and you might want a new proof.
[01:59:15] <InPhase> [itchyjunk]: If you prove the wrong thing, your proof can be logically perfect, and useless.
[01:59:16] <[itchyjunk]> but the proof is still correct.
[01:59:25] <[itchyjunk]> pyzozord, type theory is independent of physics.
[01:59:35] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[01:59:39] <[itchyjunk]> InPhase, "the wrong thing"
[01:59:45] <[itchyjunk]> you can only prove what you assert.
[01:59:49] <pyzozord> point is, you just started your academic education, and you are talking to someone with vast experience
[01:59:59] <InPhase> [itchyjunk]: Which takes us to the problem of asserting the correct thing.
[02:00:01] <[itchyjunk]> so what ever you asserted is what you proved.
[02:00:08] <InPhase> [itchyjunk]: How do you prove you asserted the correct thing?
[02:00:08] <[itchyjunk]> pyzozord, appeal to authority isn't evidence of much.
[02:00:18] <[itchyjunk]> InPhase, i've explained already.
[02:00:24] <[itchyjunk]> type theory uses type to prove it.
[02:00:32] <pyzozord> [itchyjunk]: it's not authority, it's experience. That's very different
[02:00:32] <[itchyjunk]> if you produce a witness of the type, you have proved it.
[02:00:33] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[02:00:43] <InPhase> [itchyjunk]: Nope.
[02:00:56] <[itchyjunk]> no, having experience in brain surgery doesn't make you good at building rockets.
[02:01:00] <InPhase> [itchyjunk]: You cannot use type theory to prove a definition of an IRC client exists.
[02:01:03] <[itchyjunk]> what "nope" ?
[02:01:06] <InPhase> [itchyjunk]: You cannot use type theory to prove a definition of an IRC client is correct.
[02:01:14] <[itchyjunk]> you don't prove definitions.
[02:01:19] <[itchyjunk]> You give definitions.
[02:01:20] <InPhase> [itchyjunk]: And that's the problem!
[02:01:25] <[itchyjunk]> No one ever proves definition in math.
[02:01:37] <[itchyjunk]> But a program can be a theorem in type theory.
[02:01:38] <InPhase> [itchyjunk]: So you cannot guarantee a correct result any more than just writing a program.
[02:01:44] <[itchyjunk]> You prove it by producing a witness of that type.
[02:01:56] <pyzozord> [itchyjunk]: think is, you are talking to brain surgeon and you are learning how to build bikes for now
[02:01:57] <[itchyjunk]> I can garuntee the result if i produced the witness for that assertion.
[02:02:19] <InPhase> [itchyjunk]: You guarantee that it exactly matches something that you aren't even sure what it is.  What does that mean to you?
[02:02:30] <[itchyjunk]> i don't need to know what it means.
[02:02:34] <InPhase> lol
[02:02:38] <InPhase> Well your users might care.
[02:02:41] <[itchyjunk]> I can prove a program without knowing what it's doing.
[02:02:52] <InPhase> But you proved nothing useful then.
[02:02:54] <pyzozord> yeah I think it's a lost case, he'll eventually find his own conclusions
[02:03:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[02:03:13] <pyzozord> hammer is too new and too shiny
[02:03:16] <[itchyjunk]> https://hal-lara.archives-ouvertes.fr/hal-02102043/file/RR1997-24.pdf
[02:03:17] <bayaz> Type: application/pdf Size: 450.0 kB 
[02:04:07] *** Quits: Hax0r (~Hax0r@128.127.222.236) (Quit: Leaving)
[02:04:15] <[itchyjunk]> You can have a constructive proof of a program.
[02:04:23] <[itchyjunk]> That's the whole point behind type theory.
[02:04:30] <[itchyjunk]> If that were untrue, that whole field is a scam.
[02:04:59] <pyzozord> I think you missinterpreted my wrods
[02:04:59] *** Quits: APic (apic@apic.name) (Read error: Connection reset by peer)
[02:05:08] <InPhase> [itchyjunk]: Yeah, I have no problem with program proving theory.  It's important work, which to date has very limited applications, such as proving certain classes of bugs don't exist, or that very well-defined algorithms are implemented correctly.  Complicated program behavior is not within scope because of what I tried to explain.
[02:05:16] <pyzozord> I said "formal proof could be wrong" but I mean it in a very general way
[02:05:33] <[itchyjunk]> Most of math has had very little practical applciation for most of human history.
[02:05:34] *** Joins: APic (apic@apic.name)
[02:05:43] <[itchyjunk]> Application doesn't define the validity of theoritical mathematics.
[02:05:45] <InPhase> [itchyjunk]: The field is not a scam.  It's a fine field.  But you misestimated its applicability.
[02:06:11] <pyzozord> in theory there is no difference between theory and practice, in practice there is
[02:06:16] <[itchyjunk]> It's not an estimation. the premise of that branch is that you can cast formal math in terms of types.
[02:06:30] <[itchyjunk]> You can re-write set theoritic math into homotopy type theory.
[02:06:32] <pyzozord> [itchyjunk]: you are talking about soundness of theory, meanwhile I was talking about the practice
[02:07:02] <[itchyjunk]> it's theoritically impossible for a witness to not be a witness at some point for the same type.
[02:07:15] <[itchyjunk]> you can define new types where the witness might not be a witness.
[02:07:16] <LjL> i think i will conclusively use the discussion above (and likely below) as the one correct definition of "talking past each other"
[02:07:25] <[itchyjunk]> but for a given type, if a witness exists, it exists.
[02:07:30] <[itchyjunk]> there is no way around it.
[02:07:35] <InPhase> [itchyjunk]: No one disputed that.
[02:07:41] <[itchyjunk]> That was my whole point.
[02:07:49] <[itchyjunk]> So again, not sure what you're trying to add to that.
[02:08:16] <InPhase> [itchyjunk]: That it does not solve problems in 99%+ of software engineering problems, and there is no clear way that it could.
[02:08:43] <InPhase> [itchyjunk]: Because you cannot prove the initial definitions of a program, therefore you cannot prove the things we want to be correct.
[02:08:58] <[itchyjunk]> you don't prove definitions.
[02:09:04] <[itchyjunk]> initial or final.
[02:09:10] <pyzozord> there are always assumptions and external factors, that's just life
[02:09:15] *** Joins: Rounin (~david@84.212.130.215)
[02:09:19] <InPhase> [itchyjunk]: And thus you do not have real world proofs.  Which is important.
[02:09:31] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[02:09:32] *** Joins: nik (~nik777@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[02:09:36] <[itchyjunk]> "real world proof"
[02:09:45] <[itchyjunk]> Proof is a proof.
[02:09:50] <[itchyjunk]> real world has nothing to do with it.
[02:09:50] <InPhase> [itchyjunk]: You cannot prove general programs correct.
[02:10:07] <[itchyjunk]> You can program any "program" as defined in type theory.
[02:10:14] <[itchyjunk]> Computer programs fall under that "program" part.
[02:10:16] <pyzozord> [itchyjunk]: it has everything to do with it, that is what I was talking about. You are missing the point
[02:10:36] <[itchyjunk]> type theory is a mathematical concept. it has nothing to do with "real world".
[02:10:48] <LjL> then why the hell was the topic IRC clients
[02:10:52] <LjL> "IRC clients" are pretty real world shit
[02:10:52] <InPhase> [itchyjunk]: Do you think you can extend type theory to make a proven correct IRC client?
[02:10:52] <[itchyjunk]> If you write an irc client in Agda, you can precisely prove it.
[02:11:00] <[itchyjunk]> yes.
[02:11:06] <[itchyjunk]> write a client in adga.
[02:11:11] <[itchyjunk]> it self checks.
[02:11:13] <InPhase> [itchyjunk]: How do you know the definition is correct?
[02:11:23] <[itchyjunk]> "definition is correct"
[02:11:24] <LjL> "you don't prove definitions"
[02:11:27] <[itchyjunk]> what does that mean?
[02:11:35] <InPhase> [itchyjunk]: How do you know it does what IRC clients should?
[02:11:40] <LjL> that the definition matches what people think of the behavior of an actual IRC client
[02:11:53] <[itchyjunk]> you make it do what you want to do.
[02:12:00] <[itchyjunk]> it's code you write
[02:12:04] <[itchyjunk]> it's not magic
[02:12:04] <LjL> then just write it to make it do that
[02:12:06] <pyzozord> what you want to do might not be what is the best thing
[02:12:07] <LjL> forget about "proving" it
[02:12:18] <pyzozord> for example because you are not aware that you should want something better
[02:12:33] <pyzozord> or you might want something plain wrong
[02:12:40] <InPhase> [itchyjunk]: If I make an agda "Hello World" and call the filename "irc_client.agda", is it a correct IRC client?
[02:13:07] <InPhase> [itchyjunk]: Clearly it has been proven.
[02:13:08] <[itchyjunk]> At this point, i am not sure if you're actually worked with proof assistance or not
[02:13:20] <[itchyjunk]> because either you haven't or you're purposefully acting dense.
[02:13:29] <InPhase> [itchyjunk]: These are rhetorical questions for your sake.
[02:13:42] *** Quits: magla (~gelignite@55d47635.access.ecotel.net) (Quit: Stay safe!)
[02:13:50] <pyzozord> [itchyjunk]: you are fearsly defending the soundenss of theory, but theory is sound only in theory
[02:14:24] <pyzozord> people get shit wrong all the time
[02:14:30] <[itchyjunk]> I don't know a lot of math, i admit. but this amount of denseness is silly.
[02:14:42] <[itchyjunk]> A formal proof is exactly what the name says.
[02:14:52] <[itchyjunk]> It doesn't magically turn into a non proof.
[02:15:01] <InPhase> [itchyjunk]: No one is arguing that.
[02:15:06] <[itchyjunk]> If it did, mathematics needs to rethink itself.
[02:15:25] <[itchyjunk]> <pyzozord> [itchyjunk]: you are fearsly defending the soundenss of theory, but theory is sound only in theory
[02:15:28] <[itchyjunk]> so what does that mean.
[02:15:29] <InPhase> [itchyjunk]: We're saying the proof of an IRC client implementation is completely useless unless you can also prove it is a correct IRC client.  What is the point of the proof in the first place?
[02:15:45] <pyzozord> Ok being called dense I think it's time for me to move on from this discussion. Nothing to gain from convincing him that there is no such thing as perfect
[02:15:53] *** Quits: Inari (~Pinkishu@p508ef19c.dip0.t-ipconnect.de) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[02:16:04] <[itchyjunk]> i am gonna file this under "you probably don't know either what proof is in type theory or what a theorem is in math" and move on
[02:17:10] *** Quits: nik (~nik777@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: Leaving)
[02:17:17] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[02:18:00] * InPhase glances over at his bookshelf.
[02:18:03] <InPhase> [itchyjunk]: Ok.  :)
[02:18:20] *** Quits: axe (~axe@178.238.173.195) (Quit: Leaving)
[02:18:49] <LjL> i don't know anything about type theory or theorem proving and yet i understand the point InPhase is making
[02:18:52] <LjL> my brain must work wrong
[02:19:09] <LjL> i bet the neurons are like provably wrong
[02:19:21] <[itchyjunk]> It's good you all understand each other.
[02:19:40] <[itchyjunk]> Professor Thorsten quite clearly says what the proof mean in those videos
[02:19:47] <LjL> ja
[02:20:07] <[itchyjunk]> He seems like a person who knows what he is talking about so i'll listen to him, though
[02:20:40] *** Quits: sevla (~platen@user/sevla) (Ping timeout: 240 seconds)
[02:21:02] *** Joins: Pickchea (~private@user/pickchea)
[02:21:35] <pyzozord> problem is not with the professor, problem is with your listening
[02:22:33] <[itchyjunk]> okay, problem is with my listining.
[02:22:35] *** Quits: jamea (~jamea@200.68.140.27) (Ping timeout: 252 seconds)
[02:22:37] *** Joins: sevla (~platen@user/sevla)
[02:22:52] <[itchyjunk]> https://www.youtube.com/watch?v=qT8NyyRgLDQ
[02:22:53] <bayaz> Title: Computer Science ‚à© Mathematics (Type Theory) - Computerphile 
[02:23:04] <[itchyjunk]> Literally says a witness if the proof of a program.
[02:23:14] <[itchyjunk]> But i must be having hearing issues.
[02:24:03] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.2)
[02:24:34] *** Quits: dsrt^ (~dsrt@68.101.54.227) (Ping timeout: 240 seconds)
[02:29:24] <bjs> [itchyjunk]: type theory is basically set theory for constructivists
[02:29:53] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[02:30:03] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[02:31:41] <bjs> [itchyjunk]: some constructivist mathematicians do not believe in (or at least, do not accept) using the axiom  `P or (not P)`;  if you prove something you have to give me an example!  type theory is this but for sets,  if you describe a type you show me how to build it!
[02:32:41] <[itchyjunk]> bjs, right that is the `witness of a type as the proof for that type` idea?
[02:32:57] *** Quits: juliaEnv (~juliaEnv@ip-86-49-255-181.net.upcbroadband.cz) (Quit: Going offline, see ya! (www.adiirc.com))
[02:33:06] *** Quits: Leone (~Leo@24.140.234.189) (Read error: Connection reset by peer)
[02:33:07] <bjs> [itchyjunk]: a witness to a statement is a kind of proof, and is a kind of proof that a constructivist would accept as a proof
[02:33:08] <bjs> yeah
[02:34:16] <[itchyjunk]> so a theorem A is a type A. and a proof for A would have the type A and thus a witness ?
[02:34:17] <bjs> The kind of proof a constructivist wouldn't accept is that "it must exist because it doesn't not exist"
[02:34:28] <[itchyjunk]> the stuff that i have no grasp over is this homotopy type theroy.
[02:34:30] <bjs> a constructivist would go "show me then!"
[02:34:46] <[itchyjunk]> apparently , you can completly reformalize set theortific math into type theoritic
[02:34:46] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:34:59] <[itchyjunk]> oh wait
[02:35:00] *** Joins: Leone (~Leo@24.140.234.189)
[02:35:05] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.2)
[02:35:11] <[itchyjunk]> doesn't that have issues with proof by contradiction then?
[02:35:15] <bjs> [itchyjunk]: yes,  turns out lots of ideas in mathematics are equivalent 
[02:35:18] <bjs> [itchyjunk]: and yes.
[02:35:25] <[itchyjunk]> damn..
[02:36:29] <[itchyjunk]> Another thing i would like to understand is curry howard correspondence
[02:36:41] <[itchyjunk]> it come up a lot in FP/Proof type readings
[02:39:38] <[itchyjunk]> "In other words, the Curry‚ÄìHoward correspondence is the observation that two families of seemingly unrelated formalisms‚Äînamely, the proof systems on one hand, and the models of computation on the other‚Äîare in fact the same kind of mathematical objects."
[02:39:54] <[itchyjunk]> I guess this is where a lot of the equivalence between math and programm comes from
[02:40:00] <[itchyjunk]> https://en.wikipedia.org/wiki/Curry%E2%80%93Howard_correspondence
[02:40:01] <bayaz> Title: Curry‚ÄìHoward correspondence - Wikipedia 
[02:42:42] <bjs> [itchyjunk]: yes,  a proof "looks like" a program (or a type system specifically)
[02:42:51] *** Quits: akevinhuang2 (~thekevinh@user/thekevinhuang) (Read error: Connection reset by peer)
[02:43:06] <[itchyjunk]> hmmm what does type system mean?
[02:43:15] *** Quits: chomwitt (~chomwitt@2a02:587:dc16:c800:12c3:7bff:fe6d:d374) (Remote host closed the connection)
[02:43:25] <[itchyjunk]> oh
[02:43:31] <[itchyjunk]> its something like a formal system from math
[02:43:36] <[itchyjunk]> but for computers, heh
[02:43:39] *** Joins: akevinhuang (~thekevinh@user/thekevinhuang)
[02:44:44] <bjs> [itchyjunk]: yes,  a type system is a specific theory of types.  It defines what the terms are and what the rules are.  Basically like a mini programming language
[02:45:32] <[itchyjunk]> so a lambda calculus is a formal system but when it gets implemented for some computer, it also becomes a type system, fair to say?
[02:45:37] <bjs> and it turns out these mini programming languages look very much like proof systems.  Programs that compute things in one "look like" proofs of the same thing in the other.
[02:46:05] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:46:34] <bjs> [itchyjunk]: lambda calculus (or rather, simply-typed lambda calculus) is one example of a programming language (lets say) and inside this definition is a type system
[02:46:46] <bjs> which contains the terms and rules for checking correctness of a lambda calculus program
[02:47:17] <[itchyjunk]> hmm
[02:47:45] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Remote host closed the connection)
[02:48:00] *** Joins: jamea (~jamea@177.239.82.108)
[02:48:31] <[itchyjunk]> so java is not a type system but rather has a type system inside it
[02:48:48] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz‚Ä¶)
[02:48:49] <[itchyjunk]> if i did `int x = 1L;`, it would be the type system that complains?
[02:49:19] <bjs> [itchyjunk]: well i mean all these things are kind of interchangeable but yes we'd say that java *has* a type system as part of the definition of the language, and it is the rules of the type system that would complain about that program yeah
[02:50:44] <[itchyjunk]> so doing math in a type system turns out to be writing programs ..
[02:51:01] <[itchyjunk]> a bit of a bizarre idea. i am surprised that it should be this way
[02:51:02] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:51:15] <[itchyjunk]> even thought computers were invented to do math to begin with
[02:52:40] <bjs> [itchyjunk]: take a look at https://en.wikipedia.org/wiki/Simply_typed_lambda_calculus#Typing_rules  it has the rules (written in standard notation) for simply-typed lambda calculus (probably the simplest type system for a programming language), and if you are familiar with "Normal" proof systems the rules will be of familiar style
[02:52:40] <bayaz> Title: Simply typed lambda calculus - Wikipedia 
[02:53:32] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[02:53:48] *** Joins: webNET4 (~0x100@32.211.211.39)
[02:54:25] <bjs> [itchyjunk]: e.g. see https://en.wikipedia.org/wiki/List_of_rules_of_inference#Table:_Rules_of_Inference  (although note this is classical not constructivist logic).  Compare for example Modus Ponens with Rule 4 from the STLC (function application);  you should just be able to "see" the fact they're the same thing
[02:54:25] <bayaz> Title: List of rules of inference - Wikipedia 
[02:54:53] *** Quits: APic (apic@apic.name) (Read error: Connection reset by peer)
[02:57:16] <[itchyjunk]> wow
[02:57:18] <[itchyjunk]> If {\displaystyle x}x has type {\displaystyle \sigma }\sigma  in the context, we know that {\displaystyle x}x has type {\displaystyle \sigma }\sigma .
[02:57:22] <[itchyjunk]> like reflexivity ?
[02:58:58] <bjs> [itchyjunk]: eh, that rule is just boilerplate letting you extract information from the context.  Contexts are kind of like scopes
[02:59:12] <[itchyjunk]> ah
[03:01:34] <kline> i should really learn how to make latex templates
[03:02:53] <[itchyjunk]> hmmmmm i kinda see it and i kinda don't
[03:03:30] *** Quits: humanface (~humanface@20014C4E1C473D0038D8AF5AA8970C01.dsl.pool.telekom.hu) (Quit: Client closed)
[03:03:39] <[itchyjunk]> (p and (p -> q) ) -> q is similar to e_1 having type p -> q and e_2 having type p
[03:04:00] <[itchyjunk]> so i am kinda function composing them doing e_2 first then e_1 ..
[03:05:40] <bjs> [itchyjunk]: it's not composition it's really just function application (calling).
[03:05:53] <bjs> if I have a function that takes a P and gives a Q, if I give it a P I get a Q
[03:06:25] *** Joins: anovick (~anovick@IGLD-83-130-127-193.inter.net.il)
[03:06:31] <bjs> (or re-phrased, if I have a P I can get a Q)
[03:07:20] <[itchyjunk]> this is like A -> B -> C where i can think of A -> (B -> C) and (B -> C) is a program that takes a of type A and returns c of type C and A is a program that produced a of type A
[03:07:32] *** Quits: independent56 (~independe@95.144.68.39) (Ping timeout: 250 seconds)
[03:07:42] <[itchyjunk]> this stuff is stiff confusing
[03:07:53] <[itchyjunk]> just "curry it" they say
[03:07:56] <bjs> [itchyjunk]: that example is just where P=A and Q=(B -> C)
[03:08:11] <bjs> and the rule just applies
[03:08:22] <bjs> (B -> C) is just "the rest of the proof"
[03:09:33] <bjs> in the same way that `True => P => Q => R => S`  (which is a proof of S, so long as each implication holds) then `Q => R => S` part is just "the rest of the proof of S" once you get to the part proving P
[03:09:54] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[03:11:10] *** Quits: anovick (~anovick@IGLD-83-130-127-193.inter.net.il) (Ping timeout: 240 seconds)
[03:12:06] *** Joins: APic (apic@apic.name)
[03:12:17] *** Joins: zaher (~zaher@37.48.178.20)
[03:12:34] *** Quits: jamea (~jamea@177.239.82.108) (Ping timeout: 252 seconds)
[03:12:45] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Quit: leaving)
[03:13:04] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[03:13:42] <[itchyjunk]> hmm right
[03:14:52] <[itchyjunk]> that one is tripping me lol. `True => P` holds trivially right? yeah.. 
[03:15:17] <bjs> [itchyjunk]: no
[03:15:28] <[itchyjunk]> hmmmmmmmmmmm
[03:15:58] <[itchyjunk]> True => P, true is always true so P always holds?
[03:15:59] <bjs> [itchyjunk]: I mean,  say I want to prove some statement S (e.g. "the square of a prime number is one less than a multiple of 3" or something ridiculous),  What I do is I start from something I know is true and then "build up"
[03:16:09] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[03:16:14] <[itchyjunk]> ah
[03:16:17] <[itchyjunk]> gotcha
[03:16:38] <bjs> [itchyjunk]: `P => Q` (aka "if P then Q") are those building blocks.  If P is true, then I can show Q must be true.
[03:16:51] <[itchyjunk]> I was reading about syllogism for my history of math class and this kinda reminds me of that
[03:17:01] <[itchyjunk]> Aristortle was on to functional programming and type system!
[03:17:08] *** Joins: X-Scale` (~ARM@128.229.28.37.rev.vodafone.pt)
[03:17:29] <bjs> [itchyjunk]: so a proof would look like "(True thing) => Step1 => Step2 => Step3 => Statement" , if all the implications hold (i.e. you can show that from each step you get to the next) then you have what we call a "proof"
[03:17:48] <[itchyjunk]> right
[03:18:03] <[itchyjunk]> I managed to do a `P->P` in coq
[03:18:34] *** Quits: X-Scale (~ARM@238.72.108.93.rev.vodafone.pt) (Ping timeout: 240 seconds)
[03:18:42] *** X-Scale` is now known as X-Scale
[03:18:43] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[03:18:43] <bjs> [itchyjunk]: Curry-Howard is literally just "looking" at that and saying "isn't that the same as saying if I have something a P (something true) and a function P -> Q -> R -> S (the implications) that I can get an S (a proof of S)?"
[03:20:23] <bjs> so by running the program you would get a witness to S, and therefore you have a constructivist proof of S.
[03:21:12] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[03:21:24] <[itchyjunk]> makes sense.
[03:21:37] <[itchyjunk]> after hearing it, it almost sounds obvious.. lol
[03:21:47] *** Joins: Curiosity (uid511277@user/cypris)
[03:22:01] <bjs> [itchyjunk]: well it's one of those theorems that's a very deep insight but also not very deep
[03:22:04] <[itchyjunk]> it does sound obvious.. which is a bit strange. like a duh, ofcourse moment
[03:22:12] <[itchyjunk]> right
[03:22:24] <[itchyjunk]> probably learn something more each time you visit after gaining more experience
[03:23:11] *** Joins: anovick (~anovick@2a0d:6fc0:1bd8:7800:98e9:2c6f:1a52:52c0)
[03:23:12] <bjs> [itchyjunk]: the good theorems always do.  It has a lot to do with the decades of experience "cleaning up" the argument; I suspect it was a lot less obvious back then and they were just toying around with the ideas
[03:23:50] <[itchyjunk]> right!
[03:24:21] <[itchyjunk]> just looked at the dates and curry was thinking about this in 1930!
[03:24:22] <[itchyjunk]> wtf
[03:26:10] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) (Ping timeout: 240 seconds)
[03:27:35] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 250 seconds)
[03:29:12] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 250 seconds)
[03:30:07] *** Quits: gitgoood (~gitgood@host-78-145-137-41.as13285.net) (Ping timeout: 245 seconds)
[03:30:15] *** Joins: hexingb (~hexingb@2409:8902:78c4:4375:4d53:ddee:a379:e6ce)
[03:33:27] *** Joins: Crescendo (~Crescendo@user/crescendo)
[03:33:38] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[03:33:47] *** Joins: Crescendo (~Crescendo@user/crescendo)
[03:34:03] *** Joins: pizdets_ (~pizdets@183.182.114.81)
[03:34:40] *** Quits: pizdets (~pizdets@183.182.110.224) (Ping timeout: 250 seconds)
[03:43:21] *** Joins: zaher_ (~zaher@37.48.178.201)
[03:44:37] *** Quits: nicbk (~nicbk@user/nicbk) (Remote host closed the connection)
[03:45:14] *** Quits: zaher (~zaher@37.48.178.20) (Ping timeout: 250 seconds)
[03:46:55] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Quit: Leaving)
[03:51:06] *** Joins: jamea (~jamea@177.239.86.115)
[03:57:40] *** Quits: anovick (~anovick@2a0d:6fc0:1bd8:7800:98e9:2c6f:1a52:52c0) (Ping timeout: 240 seconds)
[03:58:30] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:71b7:bdff:34f7:41d7) (Read error: Connection reset by peer)
[03:59:15] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:71b7:bdff:34f7:41d7)
[03:59:53] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:00:04] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[04:01:30] *** Quits: pyzozord (pyzozord@user/pyzozord) (Remote host closed the connection)
[04:05:20] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[04:05:32] *** Joins: webNET4 (~0x100@32.211.211.39)
[04:05:47] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[04:05:59] *** Joins: webNET4 (~0x100@32.211.211.39)
[04:07:25] <webNET4> TIL: python has triple quoted strings, is there any reason they couldn't have used double quotes? only to leave open the possibility of letting user output ""double quoted something"" ?
[04:07:33] *** Joins: vicfred (~vicfred@user/vicfred)
[04:08:23] <yitz> They're used heavily in docstrings
[04:08:25] *** Joins: Macuser (~Macuser@216.30.159.201)
[04:08:34] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[04:08:34] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[04:08:40] <yitz> You can try to find the PEP where they were introduced to see the rationale
[04:08:46] *** Joins: flynn (~mcbloch@user/flynn)
[04:09:23] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[04:17:51] <webNET4> this can only be used as a "docstring"?
[04:17:55] <InPhase> webNET4: Because "" is the empty string...
[04:18:32] <webNET4> yeah but if you look at the next char and its a " then magically its not empy
[04:18:43] <InPhase> webNET4: foo("", "")
[04:18:49] <InPhase> webNET4: How many parameters are passed?
[04:18:54] <webNET4> i'll file it under, easier to implement
[04:19:11] <micrex22> Dr. String
[04:21:01] *** Quits: pizdets_ (~pizdets@183.182.114.81) (Quit: pizdets)
[04:21:47] *** Joins: pizdets (~pizdets@183.182.114.81)
[04:23:44] <JanC> webNET4: no, it would be impossible to implement it with 2, as InPhase illustrated
[04:25:23] <webNET4> foo(""", """) how many params?
[04:25:38] <JanC> one
[04:27:28] <webNET4> oh they would have to banish empty strings
[04:27:33] <webNET4> i seee
[04:27:49] *** Joins: gitgoood (~gitgood@host-78-145-137-41.as13285.net)
[04:28:06] <JanC> well, banishing empty strings would just create additional problems, of course
[04:28:10] <webNET4> not impossible but impractical
[04:28:35] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[04:29:19] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[04:29:30] *** Joins: flynn (~mcbloch@user/flynn)
[04:30:55] <InPhase> webNET4: Three works because it only requires that adjacent empty strings are not syntactically valid.  This is an okay compromise.
[04:31:35] <webNET4> yeah it's much nicer than all the nasty escape chars in string literals
[04:31:47] <webNET4> for quotes anyway
[04:31:47] <InPhase> "foo""bar" is okay, but """" is likely to not compile.
[04:31:51] *** Joins: nicbk (~nicbk@user/nicbk)
[04:32:13] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[04:34:14] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[04:34:58] <InPhase> And if you really want adjacent empty strings, you can damage your eyes with things like this.  :)  """"""''''''""""""
[04:36:19] <InPhase> Just don't miscount...  This still compiles.  """""''''''"""""
[04:36:38] *** Joins: pyzozord (pyzozord@user/pyzozord)
[04:36:40] *** Quits: xsperry (~as@user/xsperry) (Ping timeout: 240 seconds)
[04:36:57] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[04:38:42] *** Joins: chickfilla (~lastc@modemcable058.200-162-184.mc.videotron.ca)
[04:39:28] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 252 seconds)
[04:41:58] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[04:42:56] *** Joins: brabrax (~brabrax@user/brabrax)
[04:43:42] *** Quits: TechTest (uid283215@id-283215.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[04:45:06] *** Quits: jaysicks (~jaysicks@94-21-246-55.pool.digikabel.hu) (Remote host closed the connection)
[04:48:52] *** Quits: peteyboy1 (~peteyboy1@95.169.235.10) (Ping timeout: 245 seconds)
[04:48:53] <quazimodo> So i have a question that is about experience
[04:49:00] <quazimodo> Private, Partner & Public API
[04:49:16] <quazimodo> should they be separate or unified
[04:49:22] *** Joins: Macuser (~Macuser@216.30.159.201)
[04:50:31] *** Parts: micrex22 (~quassel@user/micrex22) ()
[04:50:49] *** Quits: pizdets (~pizdets@183.182.114.81) (Quit: pizdets)
[04:50:56] <Caffeinated> Baldric?
[04:51:32] *** Joins: pizdets (~pizdets@183.182.114.81)
[04:52:35] *** Quits: pizdets (~pizdets@183.182.114.81) (Client Quit)
[04:55:29] *** Joins: pizdets (~pizdets@183.182.114.81)
[04:57:04] *** Quits: Tazy (~Tazmainia@102.39.90.151) (Ping timeout: 252 seconds)
[04:59:26] *** Quits: derpy (~quassel@dslb-002-202-069-037.002.202.pools.vodafone-ip.de) (Read error: Connection reset by peer)
[04:59:34] *** Joins: derpy (~quassel@dslb-002-202-069-037.002.202.pools.vodafone-ip.de)
[04:59:54] *** Quits: pizdets (~pizdets@183.182.114.81) (Client Quit)
[05:00:23] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[05:00:37] *** Joins: flynn (~mcbloch@user/flynn)
[05:01:12] *** Joins: pizdets (~pizdets@183.182.114.81)
[05:05:05] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[05:05:52] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 252 seconds)
[05:06:25] *** Quits: chickfilla (~lastc@modemcable058.200-162-184.mc.videotron.ca) (Remote host closed the connection)
[05:07:43] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[05:10:31] *** Joins: qaph (~weechat@user/qaph)
[05:11:43] *** Joins: juliaEnv (~juliaEnv@ip-86-49-255-181.net.upcbroadband.cz)
[05:13:27] *** Joins: xiongxin8802 (~quassel@2409:8955:384c:1539:13ac:876e:41f7:7142)
[05:13:38] *** Quits: kron (~weechat@user/qaph) (Ping timeout: 252 seconds)
[05:13:40] *** qaph is now known as kron
[05:14:10] *** Quits: xiongxin8802 (~quassel@2409:8955:384c:1539:13ac:876e:41f7:7142) (Client Quit)
[05:14:35] *** Joins: xiongxin8802 (~quassel@2409:8955:384c:1539:13ac:876e:41f7:7142)
[05:18:55] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[05:25:21] *** Joins: Cashlin (~hp@user/cashlin)
[05:28:55] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2.1)
[05:29:11] *** Joins: quartz (~nick@2603-8001-7700-61a4-0000-0000-0000-0eff.res6.spectrum.com)
[05:33:55] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[05:34:20] *** Joins: mickey (~user@user/mickey)
[05:34:44] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[05:36:06] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[05:36:13] <quazimodo> dodo: you mostly agreed with me so i like your opinion
[05:36:15] <quazimodo> what do you think
[05:42:19] *** [_] is now known as [itchyjunk]
[05:43:01] *** Joins: frost (~frost@59.71.240.119)
[05:44:22] *** Quits: azed (~azed@102.104.143.187) (Ping timeout: 252 seconds)
[05:44:28] <webNET4> what API is non-public?
[05:51:02] <webNET4> like, something unorthodox as an undocumented call, or easter eggs in the API?
[05:51:50] <webNET4> a russian roulette function that fails 1/6th of the time
[05:52:56] *** Joins: pavonia (~user@user/siracusa)
[05:53:33] <webNET4> did they just pull some new keywords out of thin air to apply to the concept of an Api ?
[05:54:12] *** Joins: zaher (~zaher@37.48.178.201)
[05:54:21] <[itchyjunk]> hmm all methods are part of API right?
[05:54:25] <[itchyjunk]> and you have private method?
[05:54:46] <webNET4> maybe they are shoe-horning authentication into the API and trying to make functions that require AUTH
[05:54:54] <webNET4> its still part of the public API spec i'd imagine
[05:55:07] <[itchyjunk]> ah
[05:55:44] <webNET4> or they think a class interface is an application interface
[05:55:57] <webNET4> with private methods
[05:56:13] <webNET4> the world may negver know
[05:57:01] *** Quits: zaher_ (~zaher@37.48.178.201) (Ping timeout: 252 seconds)
[05:57:10] *** Quits: xff0x (~xff0x@2001:1a81:5209:3600:6986:c057:5fff:c53b) (Ping timeout: 240 seconds)
[05:57:43] *** Joins: mickey8 (~user@user/mickey)
[05:58:54] *** Quits: mickey (~user@user/mickey) (Remote host closed the connection)
[05:58:55] *** mickey8 is now known as mickey
[05:59:00] *** Joins: xff0x (~xff0x@2001:1a81:5244:5800:ade4:7c8b:9b3b:6271)
[06:02:13] <[itchyjunk]> argh
[06:02:15] *** Quits: sevla (~platen@user/sevla) (Quit: WeeChat 2.8)
[06:13:02] *** Quits: xiongxin8802 (~quassel@2409:8955:384c:1539:13ac:876e:41f7:7142) (Ping timeout: 245 seconds)
[06:13:43] <webNET4> OH, maybe private API means ABI
[06:13:51] <webNET4> in this unknown scenario
[06:14:33] <webNET4> or thats partner
[06:14:51] <webNET4> private would be like void * then
[06:15:05] *** Quits: Cashlin (~hp@user/cashlin) (Quit: Konversation terminated!)
[06:16:33] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:17:12] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 245 seconds)
[06:17:12] *** brabrax_ is now known as brabrax
[06:17:23] *** Joins: mmlj4 (~mmlj4@ip68-11-69-185.no.no.cox.net)
[06:19:19] *** Joins: gargus (~user@14-201-60-238.static.tpgi.com.au)
[06:19:40] *** Quits: hexingb (~hexingb@2409:8902:78c4:4375:4d53:ddee:a379:e6ce) (Ping timeout: 240 seconds)
[06:20:33] *** Joins: hexingb (~hexingb@2409:8902:78c4:4375:5505:5315:201b:19cd)
[06:21:54] *** Quits: cth (~Cthulchu@193.194.107.250) (Ping timeout: 256 seconds)
[06:24:40] *** Quits: hexingb (~hexingb@2409:8902:78c4:4375:5505:5315:201b:19cd) (Ping timeout: 240 seconds)
[06:24:55] *** Joins: hexingb (~hexingb@101.236.65.144)
[06:27:32] *** Joins: _73 (~user@pool-96-252-123-136.bstnma.fios.verizon.net)
[06:28:10] *** Joins: kmh (~kmh@p2e511797.dip0.t-ipconnect.de)
[06:29:26] *** Parts: _73 (~user@pool-96-252-123-136.bstnma.fios.verizon.net) ()
[06:30:05] *** Quits: kmh_ (~kmh@p200300df5f052300e4bf53d4503676cb.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[06:30:30] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[06:30:31] *** Joins: gvbu (~gvbu@pool-96-252-123-136.bstnma.fios.verizon.net)
[06:31:04] <gvbu> is science of programming by Gries easier to grasp than discipline of programming by Djikstra?
[06:31:40] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[06:32:56] *** Quits: Curiosity (uid511277@user/cypris) (Quit: Connection closed for inactivity)
[06:36:21] *** Joins: pandakekok9 (~job@wikimedia-commons/pandakekok9)
[06:39:42] *** Joins: Mija (~Mija@user/mija)
[06:43:35] *** Joins: gitgooood (~gitgood@host-78-145-137-41.as13285.net)
[06:45:30] *** Quits: gitgoood (~gitgood@host-78-145-137-41.as13285.net) (Ping timeout: 250 seconds)
[06:46:33] *** Quits: electr0n (~electr0n@about/security/founder/electr0n) (Remote host closed the connection)
[06:46:35] *** Quits: zaher (~zaher@37.48.178.201) (Ping timeout: 252 seconds)
[06:47:09] *** Joins: zaher (~zaher@37.48.155.129)
[06:49:12] <JanC> I assume "private" refers to "for internal company use only", "partner" refers to customers/suppliers, & "public" refers to everyone else
[06:50:01] <JanC> is that ^^^ right, quazimodo?
[06:50:31] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:53:51] *** Joins: xiongxin8802 (~quassel@2409:8955:384c:1539:13ac:876e:41f7:7142)
[06:54:21] *** Quits: xiongxin8802 (~quassel@2409:8955:384c:1539:13ac:876e:41f7:7142) (Client Quit)
[07:04:17] *** Joins: electr0n (~electr0n@about/security/founder/electr0n)
[07:04:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[07:04:38] *** Joins: audio (~audio@2603-8081-1801-3bb5-92e1-977b-0879-14f5.res6.spectrum.com)
[07:06:47] *** Joins: sympt (~textual@c-71-197-185-120.hsd1.wa.comcast.net)
[07:07:20] *** Quits: quartz (~nick@2603-8001-7700-61a4-0000-0000-0000-0eff.res6.spectrum.com) (Quit: WeeChat 3.2)
[07:07:25] <a_train[m]> so, will C++ ever provide what rust does?
[07:07:29] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[07:07:48] <a_train[m]> Rust is growing in bloat and complexity too, and I don't dare to think what will become of it in 10-30 years time.
[07:07:59] <a_train[m]> But it doesn't leak.
[07:08:30] <a_train[m]> It is productive. And is frankly better at even c++ for large complex (concurrent) projects.
[07:09:04] *** Quits: akevinhuang (~thekevinh@user/thekevinhuang) (Ping timeout: 252 seconds)
[07:09:20] <a_train[m]> And you don't have to know a gazillion different tools... static analyzers, valgrind, configure complex build systems etc etc. As they say, rust is "batteries included".
[07:09:30] *** Joins: dsrt^ (~dsrt@68.101.54.227)
[07:09:31] <a_train[m]> You just build, and it'll follow the dependencies etc for you.
[07:10:18] *** Joins: lalitmee_ (~lalitmee@180.94.33.3)
[07:10:25] *** Quits: juliaEnv (~juliaEnv@ip-86-49-255-181.net.upcbroadband.cz) (Quit: Going offline, see ya! (www.adiirc.com))
[07:13:08] *** Joins: Curiosity (uid511277@user/cypris)
[07:13:56] *** emby is now known as emba
[07:18:54] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[07:18:59] *** emba is now known as emmalemmabingbon
[07:19:07] *** Joins: webNET4 (~0x100@32.211.211.39)
[07:20:35] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[07:24:13] *** Quits: nicbk (~nicbk@user/nicbk) (Quit: nicbk)
[07:25:26] *** Joins: hexfive (~eric@50.35.83.177)
[07:27:09] *** Quits: hexfive (~eric@50.35.83.177) (Client Quit)
[07:31:09] *** Quits: sympt (~textual@c-71-197-185-120.hsd1.wa.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[07:31:33] *** Quits: gvbu (~gvbu@pool-96-252-123-136.bstnma.fios.verizon.net) (Quit: Client closed)
[07:32:12] <quazimodo> webNET4: are you contradictory because of a personality thing?
[07:32:29] <webNET4> wdym?
[07:32:42] <quazimodo> > what API is non-public?
[07:32:45] <quazimodo> weird question
[07:32:48] <webNET4> not really
[07:32:50] <quazimodo> JanC: sure
[07:33:11] *** Joins: majors (~majors@user/majors)
[07:33:27] <quazimodo> ... i suppose in the metaphysical sense nothing is private, because existence is a handful of fundamental forces and some ?strings?particles?waves?
[07:33:46] <webNET4> look at the binary symbols
[07:33:53] <webNET4> and how they're epxorted
[07:34:16] <quazimodo> a_train[m]: where's the bloat coming in?
[07:35:21] <webNET4> a static function in a c translation unit for example might be considered private
[07:42:57] <JanC> webNET4: I'm pretty sure quazimodo is talking about web APIs, not C APIs
[07:43:05] <webNET4> how can you be so sure?
[07:43:46] <webNET4> they offer no clarification on the initial query
[07:45:00] <JanC> because the term "partner API" wouldn't make much sense otherwise
[07:45:40] <webNET4> i was thinking something linking to a host process as a module, like the NVIDIA monstrosity
[07:46:02] <webNET4> they'r partners, i guess, but offer no insight into what they're doing
[07:51:47] <a_train[m]> quazimodo: what? do you mean rust? It keeps adding new constructs, features and keywords with no sign of slowing down. Ever heard of bfloat16? Did you know that Rust has adopted c-unions (for some c-compatible systems programming)?
[07:52:09] <a_train[m]> extern "c" {}  etc etc... it keeps adding things. It is growing and will keep growing.
[07:52:17] *** Quits: rtypo (~alex@user/rtypo) (Read error: Connection reset by peer)
[07:52:20] <a_train[m]> There's some SIMD-thing in there too.
[07:52:47] <a_train[m]> it's not unlike e.g. python, a simple language (and nor should it be).
[07:53:08] <a_train[m]> it will eventually suffer the same complexity hell that C++ is suffering.
[07:53:36] <a_train[m]> but it lacks some of the insane initialization and implicit conversion junk that c++ has, so that's a huge improvement.
[07:53:56] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[07:54:09] *** Joins: webNET4 (~0x100@32.211.211.39)
[07:55:32] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 245 seconds)
[07:56:12] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[07:56:47] *** Quits: RedNifre (~michael@dslb-002-203-247-205.002.203.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[07:58:24] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Quit: Leaving)
[07:58:48] *** Joins: RedNifre (~michael@dslb-002-201-038-001.002.201.pools.vodafone-ip.de)
[07:59:35] <a_train[m]> man, c++ is toast. I hate to admit it.
[07:59:53] <a_train[m]> I like to believe that I write good code, but. Rust has your back.
[08:01:44] <webNET4> is toast? 2/3 of "the brower"s are written in it
[08:02:17] <webNET4> maybe even 3/3
[08:02:51] <leduyquang753> I feel more restricted and uncomfortable in Rust than in C++.
[08:06:15] <a_train[m]> webnet4, rust has been a player in the league for what... 3 years? Of course the world is written in legacy code.
[08:06:38] <webNET4> yeah what percentage is it up to i don't keep track
[08:06:48] <quazimodo> wow
[08:06:50] <quazimodo> just... wow
[08:06:55] <quazimodo> you can't help yourself eh
[08:06:57] <webNET4> >50 by 2050 ?
[08:07:03] <a_train[m]> It's like saying that 80% of all people with cancer dies, therefore cancer isn't toast when a perfect cure for all cancers emerge.
[08:07:35] <webNET4> if you wait too long the toast gets moldy
[08:07:54] <arahael> a_train[m]: Way longer, I think.
[08:07:58] <quazimodo> webNET4: honestly dude you strike me as one of the unhelpful & oppositional experts you find on stack overflow that just manage to derail things, i'm going to block you
[08:08:33] <webNET4> k bye
[08:09:02] <oldlaptop> a_train[m]: something like C++ is never going away - it might, after a few more decades, be the same kind of shambling zombie COBOL is, but it is not going away
[08:09:17] <webNET4> no more time i have to wait for clarifications on 1) why to use docker, and 2_ wtf is a partner API or wth you're even talking about
[08:09:33] <a_train[m]> c++ is getting better and I'm not saying that it's bad as such. I am saying that rust has some very strong merits and believe that one day, rust will be the better choice over c++ for any new project where c++ would otherwise be an option.
[08:10:17] <a_train[m]> oldlaptop: that is a possibility.
[08:10:30] <quazimodo> linux community is starting to say some very rusty words
[08:10:46] <quazimodo> they'll begin writing low hanging fruit in rustlang soon I think
[08:11:16] <quazimodo> once the kernel starts to have bits of it written in rustlang, and developers manage to write safe parallelised stuff for games in rustlang modules I see it growing
[08:11:22] <oldlaptop> C++-as-COBOL-in-ten-years is, I would say, a *pessimistic* estimate from the C++-boosterism perspective
[08:12:11] <quazimodo> the other thing to note is that where C++ was good for business C# is now the way to go, and where C++ was good for performance & capability there is a ?better? fit in rust
[08:12:26] <quazimodo> so yeah, I see C++ being picked less often for new things
[08:12:38] <oldlaptop> (to be clear I don't have a dog in that fight; I dislike C++ and haven't fooled with rust - I would hate cargo with the burning fire of a thousand suns, though, most likely)
[08:12:55] <quazimodo> it's not even a 'is this  tech good/bad' but more like 'i am a business, should I use C++' and  the answer is looking like no more & more often
[08:13:17] <quazimodo> oldlaptop: I havent seen much hate for cargo, what's it done to you?
[08:13:25] <leduyquang753> oldlaptop Hey we are kinda on the same boat, I also dislike people shoving "USE CARGO" into people's faces.
[08:13:37] <oldlaptop> "I am a business, should I use C++?" is not a question that contains enough information for a reasonable answer
[08:13:52] <webNET4> don't expect any reasonable answers here
[08:14:14] <leduyquang753> Carbo just takes away a lot of flexibility I would have from C++ regarding building a project.
[08:14:17] <oldlaptop> quazimodo: Nothing in particular, which is why that's not present/perfect tense
[08:14:17] <leduyquang753> Cargo
[08:14:45] <quazimodo> oldlaptop: i'm making it easy to digest, yes everything has a lot more scope to it but on the face of it, and on balance, i am seeing movements that indicate to me that C++ isn't the serious choice now when it absolutely was before
[08:14:46] <oldlaptop> but I generally dislike language-specific package managers at best, particularly when it's infeasible to work outside them
[08:14:53] <quazimodo> I work a lot in corporate innovation 
[08:15:17] <webNET4> rofl
[08:15:27] <quazimodo> no one is considering building their new stuff in C++ unless there is a realllly compelling reason, or the CTO is a C++ person
[08:15:44] <leduyquang753> If anything I am looking forward to GCC having a Rust front-end.
[08:15:50] <leduyquang753> quazimodo I do.
[08:16:26] <quazimodo> leduyquang753: can you elaborate on the flexibility, i'm not sure that I understand and i'm pretty curious
[08:16:54] <leduyquang753> I am not tied to a specific package manager, I don't need to set up a whole system of folders, I can do it either manually or script it, etc.
[08:17:27] <oldlaptop> I'm given to understand cargo wants to (a) download (b) build and (c) install absolutely everything for you, and it's at the least difficult to work around that.
[08:17:46] <oldlaptop> If that's not broadly true, perhaps I only would hate it about as much as (say) pip.
[08:17:49] <leduyquang753> Yes but I would like to be able to not use it when I don't need it.
[08:18:11] <quazimodo> I am privileged in that I've used elixir & ruby's package manager a lot, they make life so easy
[08:18:29] <quazimodo> so i'm not sure why cargo causes a problem
[08:18:58] <quazimodo> if it does the fetch, build & install well, and you can specify the versions/repos of you want to get, then I don't see the problem
[08:19:08] <quazimodo> does it do those things  in a bad way?
[08:19:19] <quazimodo> like bad caching or it's slow somehow?
[08:19:28] <leduyquang753> I just don't have enough control.
[08:19:54] <leduyquang753> With C++ I can choose to place my dependencies whereever I want and then let the compiler know.
[08:20:02] <quazimodo> this isn't me challenging you, more trying to understand, we've built pretty wide scaled stuff with small & large teams etc, what control do you need?
[08:20:07] <quazimodo> why do you need to place them where ever?
[08:20:11] <oldlaptop> In particular, I do *not* want build processes downloading random stuff all by themselves whenever they feel like it.
[08:20:20] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[08:20:32] *** Joins: webNET4 (~0x100@32.211.211.39)
[08:20:41] <leduyquang753> Because I have limited resources on my laptop and I need to manage the space.
[08:20:58] <quazimodo> oldlaptop: that's actually fair, although we used self signed dependencies & local cache to make it safe
[08:21:18] <quazimodo> cryptographic signing/fingerprinting of deps more or less solved the issue for su
[08:21:28] <quazimodo> leduyquang753: fair i guess
[08:21:36] <oldlaptop> And to do that you had to more or less host the "home" it wants to phone, yes?
[08:21:39] *** Joins: Treebeard (~bland@64.253.0.103.dyn-cm-pool70.pool.hargray.net)
[08:21:40] *** Quits: BenLand100 (~bland@user/benland100) (Ping timeout: 252 seconds)
[08:21:41] *** Quits: Treebeard (~bland@64.253.0.103.dyn-cm-pool70.pool.hargray.net) (Changing host)
[08:21:41] *** Joins: Treebeard (~bland@user/benland100)
[08:21:49] <oldlaptop> That sounds like a big headache to me.
[08:21:59] *** Treebeard is now known as BenLand100
[08:21:59] <quazimodo> oldlaptop: no, build system fetches from wherever it wants to and then the stuff gets tested against known signatures
[08:22:09] <quazimodo> though
[08:22:22] <quazimodo> i think one of the devs set up a "local" cache in our network
[08:22:37] <quazimodo> so, yes, but not much manual loading of deps into it, just made it faster to get the deps onto the build machines
[08:22:44] <quazimodo> just a cache
[08:22:51] <quazimodo> it wasn't for security but for build speed
[08:23:16] <quazimodo> security was all through audit & self signing the deps
[08:24:36] <oldlaptop> so after all the headache you're still relying on random servers scattered randomly across the internet for your builds to work?
[08:24:37] <quazimodo> which is how it should be in my opinion, if you dont trust any package repository you're going to always be safe, and a cache server can make it quick
[08:24:37] <quazimodo> well your local cache server solves that problem, and random servers scattered randomly across the internet have worked almost every single time for the last 10 years
[08:24:51] <oldlaptop> this is my unconvinced face :|
[08:24:52] <webNET4> not always, the dev you're pulling from's key could be stolen/copied-without-knowlege
[08:24:53] <quazimodo> i think the source of packages is irrelevant
[08:25:02] *** Quits: gitgooood (~gitgood@host-78-145-137-41.as13285.net) (Ping timeout: 252 seconds)
[08:25:10] <quazimodo> if it's fast, cheap & you have signed the package yourself or a trusted party has signed for you, then it's great
[08:25:48] <quazimodo> i think being convinced is one thing but the fact is that the entire web ecosystem is using this approach & they've moved to true CI/CD using it
[08:26:13] <quazimodo> I have more problems with my teams actually programming the wrong thing now than I do with deps/build
[08:26:30] <quazimodo> deps & build were more of a problem before this approach, in my experience
[08:26:30] <oldlaptop> "all the node people are doing it!" does not sounds like a good argument to me
[08:26:53] <quazimodo> the web ecosystem is more than node
[08:27:14] <quazimodo> and i'm not saying that it's good because lots of people do it
[08:27:34] <quazimodo> what i'm saying is, lots of people are doing it and they are largely progressing towards more efficient, faster systems of deployment because of it
[08:27:42] *** Quits: piou (~piou@user/piou) (Remote host closed the connection)
[08:27:43] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[08:27:55] *** Joins: piou (~piou@24.20.201.77.rev.sfr.net)
[08:27:58] <quazimodo> it's not niche, everyone can do it, they can do it safely and they can release many times a day without issue
[08:28:28] <quazimodo> i will add that I don't like node's approach
[08:28:43] <quazimodo> I do like ruby's
[08:28:58] <quazimodo> rubygems ... soooo good
[08:29:01] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[08:29:13] *** Joins: webNET4 (~0x100@32.211.211.39)
[08:29:17] *** Joins: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net)
[08:29:46] *** Quits: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net) (Client Quit)
[08:51:08] *** Joins: TastyWiener95 (~uhhh3@user/tastywiener95)
[08:52:28] *** Quits: envex (~envex@cpe-173-91-189-33.neo.res.rr.com) (Ping timeout: 252 seconds)
[09:01:08] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:01:58] *** Quits: hexingb (~hexingb@101.236.65.144) (Ping timeout: 252 seconds)
[09:04:53] *** Quits: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) (Remote host closed the connection)
[09:04:55] *** Joins: hexingb (~hexingb@2409:8902:78c4:4375:e449:d331:bc0e:ec39)
[09:06:48] *** Quits: X-Scale (~ARM@128.229.28.37.rev.vodafone.pt) (*.net *.split)
[09:06:48] *** Quits: wolfshappen (~waff@irc.furworks.de) (*.net *.split)
[09:06:48] *** Quits: davidv7 (~davidv7@user/videogameenjoyer) (*.net *.split)
[09:06:48] *** Quits: obrut (~obrut@user/obrut) (*.net *.split)
[09:07:00] *** Joins: obrut (~obrut@static.108.201.69.159.clients.your-server.de)
[09:07:04] *** Joins: wolfshappen (~waff@irc.furworks.de)
[09:07:04] *** Joins: davidv7 (~davidv7@user/videogameenjoyer)
[09:07:30] *** Joins: X-Scale (~ARM@128.229.28.37.rev.vodafone.pt)
[09:08:49] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:11:15] *** Quits: Vesryn (~vesryn@user/vesryn) (*.net *.split)
[09:11:15] *** Quits: Flonk (~Flonk@ec2-52-40-29-25.us-west-2.compute.amazonaws.com) (*.net *.split)
[09:11:15] *** Quits: boycott (~boycott@user/boycott) (*.net *.split)
[09:11:15] *** Quits: feliix42 (~felix@gibbs.uberspace.de) (*.net *.split)
[09:11:15] *** Quits: extor (~xtor@192.99.217.240) (*.net *.split)
[09:11:15] *** Quits: Guest6847 (ianmacd@faust.caliban.org) (*.net *.split)
[09:11:15] *** Quits: crackerjack (crackerjac@pear.bnc4free.com) (*.net *.split)
[09:11:15] *** Quits: sweetfish (~sweetfish@user/sweetfish) (*.net *.split)
[09:11:15] *** Quits: Duckle (~Duckle@user/duckle) (*.net *.split)
[09:11:15] *** Quits: dka (~code-is-a@ns3059207.ip-193-70-33.eu) (*.net *.split)
[09:11:15] *** Quits: fspy (~fspy@user/fspy) (*.net *.split)
[09:11:15] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (*.net *.split)
[09:11:15] *** Quits: skreech (~skreech@user/skreech) (*.net *.split)
[09:11:24] *** Joins: dka (~code-is-a@ns3059207.ip-193-70-33.eu)
[09:11:25] *** Joins: ianmacd (ianmacd@faust.caliban.org)
[09:11:26] *** Joins: skreech (skreech@user/skreech)
[09:11:37] *** Joins: feliix42 (~felix@gibbs.uberspace.de)
[09:11:45] *** Joins: Vesryn (~vesryn@user/vesryn)
[09:11:47] *** Joins: Duckle (~Duckle@user/duckle)
[09:11:50] *** Joins: Flonk (~Flonk@ec2-52-40-29-25.us-west-2.compute.amazonaws.com)
[09:11:54] *** ianmacd is now known as Guest2756
[09:11:54] *** Joins: fspy (~fspy@user/fspy)
[09:11:55] *** Joins: mcfrdy (~mcfrdy@user/mcfrdy)
[09:12:01] *** Joins: boycott (~boycott@166.ip-149-56-46.net)
[09:12:01] *** Quits: boycott (~boycott@166.ip-149-56-46.net) (Changing host)
[09:12:01] *** Joins: boycott (~boycott@user/boycott)
[09:12:17] *** Joins: crackerjack (crackerjac@pear.bnc4free.com)
[09:12:24] *** Joins: sweetfish (~sweetfish@user/sweetfish)
[09:15:01] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[09:19:12] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 245 seconds)
[09:19:56] *** Joins: extor (~xtor@192.99.217.240)
[09:22:47] *** Quits: zaher (~zaher@37.48.155.129) (Ping timeout: 252 seconds)
[09:27:14] *** Quits: morgabra (sid500580@user/morgabra) (*.net *.split)
[09:27:14] *** Quits: Fangs (sid141280@stonehaven.irccloud.com) (*.net *.split)
[09:27:14] *** Quits: jontxu (~jon@51.15.171.164) (*.net *.split)
[09:27:14] *** Quits: rdrg109 (~rdrg109@51.195.232.80) (*.net *.split)
[09:27:14] *** Quits: Kol (~Kol@d75-157-122-186.bchsia.telus.net) (*.net *.split)
[09:27:14] *** Quits: chromis (sid150893@tinside.irccloud.com) (*.net *.split)
[09:27:14] *** Quits: nitrix (~nitrix@user/nitrix) (*.net *.split)
[09:27:14] *** Quits: hexology (~hexology@user/hexology) (*.net *.split)
[09:27:14] *** Quits: hexnewbie (~hexnewbie@user/hexnewbie) (*.net *.split)
[09:27:14] *** Quits: Bodger1234_ (sid503511@highgate.irccloud.com) (*.net *.split)
[09:27:14] *** Quits: mwbrown (~mwbrown@user/mwbrown) (*.net *.split)
[09:27:14] *** Quits: berndj (~berndj@ns1.linksynergy.co.za) (*.net *.split)
[09:27:14] *** Quits: Henry151 (~bishop@user/henry151) (*.net *.split)
[09:27:14] *** Quits: justache (~justache@user/justache) (*.net *.split)
[09:27:14] *** Quits: bayaz (~bayaz@user/jeaye/bot/bayaz) (*.net *.split)
[09:27:14] *** Quits: FoodMan_ (~glucose@194.110.13.12) (*.net *.split)
[09:27:14] *** Quits: shan (shan@cyblog/maintainer/shan) (*.net *.split)
[09:27:14] *** Quits: cacheyourdreams (~cache@user/cacheyourdreams) (*.net *.split)
[09:27:14] *** Quits: bin4ry (~bin4ry@128.199.135.148) (*.net *.split)
[09:27:14] *** Quits: mz` (~mz`@user/mz/x-8532539) (*.net *.split)
[09:27:14] *** Quits: slavfox (~slavfox@93.158.232.111) (*.net *.split)
[09:27:14] *** Quits: nanowire (rob@user/nanowire) (*.net *.split)
[09:27:15] *** Quits: Yamakaja (~yamakaja@user/yamakaja) (*.net *.split)
[09:27:15] *** Quits: dkeohane1 (~dkeohane@ec2-18-189-29-140.us-east-2.compute.amazonaws.com) (*.net *.split)
[09:27:15] *** Quits: hirish (~hirish@ip85.ip-137-74-20.eu) (*.net *.split)
[09:27:15] *** Quits: ra4king (~ra4king@roiatalla.com) (*.net *.split)
[09:27:15] *** Quits: d10n (~d10n@user/d10n) (*.net *.split)
[09:27:15] *** Quits: digdilem (~digdilem@rolf.yuss.org) (*.net *.split)
[09:27:15] *** Quits: theglass (~glass@user/theglass) (*.net *.split)
[09:27:15] *** Quits: void09 (~void@revinin5minute.com) (*.net *.split)
[09:27:15] *** Quits: lupi (lupi@user/lupi) (*.net *.split)
[09:27:15] *** Quits: askie (~askie@81.171.100.212) (*.net *.split)
[09:27:21] *** Joins: askie (~askie@81.171.100.212)
[09:27:24] *** Joins: theglass (~glass@246.ip-137-74-113.eu)
[09:27:25] *** Joins: void09 (~void@revinin5minute.com)
[09:27:27] *** Joins: digdilem (~digdilem@rolf.yuss.org)
[09:27:28] *** Joins: morgabra (sid500580@user/morgabra)
[09:27:31] *** Joins: rdrg109 (~rdrg109@51.195.232.80)
[09:27:34] *** Joins: chromis (sid150893@id-150893.tinside.irccloud.com)
[09:27:35] *** Joins: Kol (~Kol@d75-157-122-186.bchsia.telus.net)
[09:27:43] *** Quits: theglass (~glass@246.ip-137-74-113.eu) (Changing host)
[09:27:43] *** Joins: theglass (~glass@user/theglass)
[09:27:47] *** Joins: Fangs (sid141280@id-141280.stonehaven.irccloud.com)
[09:27:53] *** Joins: nitrix (~nitrix@ns569831.ip-51-79-81.net)
[09:27:53] *** Joins: FoodMan (~glucose@194.110.13.12)
[09:27:54] *** Joins: lupi (lupi@is.here.for-some.fun)
[09:27:57] *** Joins: mz` (~mz`@xvm-240-147.dc2.ghst.net)
[09:28:03] *** Joins: justache (~justache@user/justache)
[09:28:04] *** Joins: Bodger1234_ (sid503511@id-503511.highgate.irccloud.com)
[09:28:07] *** Joins: mwbrown (~mwbrown@user/mwbrown)
[09:28:22] *** Joins: bin4ry (~bin4ry@128.199.135.148)
[09:28:22] *** Joins: cacheyourdreams (~cache@user/cacheyourdreams)
[09:28:27] *** Quits: nitrix (~nitrix@ns569831.ip-51-79-81.net) (Changing host)
[09:28:27] *** Joins: nitrix (~nitrix@user/nitrix)
[09:28:39] *** Joins: ra4king (~ra4king@roiatalla.com)
[09:28:40] *** Joins: bayaz (~bayaz@user/jeaye/bot/bayaz)
[09:28:42] *** Joins: d10n (~d10n@user/d10n)
[09:28:43] *** ChanServ sets mode: +o bayaz
[09:28:45] *** Joins: hexology (~hexology@user/hexology)
[09:28:45] *** Joins: hirish (~hirish@ip85.ip-137-74-20.eu)
[09:29:01] *** Joins: Yamakaja (~yamakaja@vps.pub.yamakaja.me)
[09:29:02] *** Quits: Yamakaja (~yamakaja@vps.pub.yamakaja.me) (Changing host)
[09:29:02] *** Joins: Yamakaja (~yamakaja@user/yamakaja)
[09:29:32] *** Joins: berndj (~berndj@ns2.linksynergy.co.za)
[09:29:42] *** Joins: dkeohane1 (~dkeohane@ec2-18-189-29-140.us-east-2.compute.amazonaws.com)
[09:30:02] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:30:02] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[09:31:01] *** Joins: shan (shan@cyblog/maintainer/shan)
[09:31:08] *** Joins: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl)
[09:31:15] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:31:25] *** Joins: jontxu (~jon@51.15.171.164)
[09:32:24] *** Joins: nanowire (rob@user/nanowire)
[09:33:01] *** Joins: Henry151 (~bishop@user/henry151)
[09:33:43] *** Quits: hexingb (~hexingb@2409:8902:78c4:4375:e449:d331:bc0e:ec39) (Ping timeout: 252 seconds)
[09:33:56] *** Joins: hexingb (~hexingb@103.37.140.36)
[09:34:51] *** Quits: APic (apic@apic.name) (Read error: Connection reset by peer)
[09:35:02] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[09:35:23] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[09:38:10] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[09:38:22] *** Joins: flynn (~mcbloch@user/flynn)
[09:40:52] *** Quits: davros (~davros@host86-185-99-252.range86-185.btcentralplus.com) (Ping timeout: 252 seconds)
[09:45:30] *** Joins: davros (~davros@host86-185-99-252.range86-185.btcentralplus.com)
[09:46:38] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:911a:795:c2cc:9f2c) (Read error: Connection reset by peer)
[09:51:19] *** Joins: lalitmee__ (~lalitmee@180.94.32.116)
[09:51:46] *** Joins: TechTest (uid283215@id-283215.lymington.irccloud.com)
[09:53:47] *** Quits: lalitmee_ (~lalitmee@180.94.33.3) (Ping timeout: 245 seconds)
[09:54:31] *** Quits: electr0n (~electr0n@about/security/founder/electr0n) (Quit: WeeChat 3.2)
[09:54:57] *** Joins: electr0n (~electr0n@about/security/founder/electr0n)
[09:56:52] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[09:57:08] *** Joins: APic (apic@apic.name)
[09:57:42] *** Quits: APic (apic@apic.name) (Read error: Connection reset by peer)
[10:02:20] <kodah> quite a riveting discussion
[10:04:37] *** Quits: davros (~davros@host86-185-99-252.range86-185.btcentralplus.com) (Remote host closed the connection)
[10:07:10] *** Joins: APic (apic@apic.name)
[10:07:20] *** Quits: APic (apic@apic.name) (Read error: Connection reset by peer)
[10:14:10] *** Quits: chiselfu1e (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[10:18:44] *** Parts: Raguile (~Raguile@user/raguile) ()
[10:20:12] *** Joins: blahboybaz (~blahboyba@73.109.57.10)
[10:20:19] *** Joins: lalitmee_ (~lalitmee@180.94.32.83)
[10:21:00] <blahboybaz> Is a javascript proxy the same as a virtual function in c++ ?  I mean, is it kind of doing the same thing?
[10:22:38] <deniska> blahboybaz: not sure if there's a direct analog of js Proxy in C++
[10:22:46] *** Quits: lalitmee__ (~lalitmee@180.94.32.116) (Ping timeout: 252 seconds)
[10:22:58] <deniska> blahboybaz: in js effectively any function call is virtual
[10:24:08] <blahboybaz> hmm
[10:27:49] <blahboybaz> I been reading the mdn on proxy and they're losing me somewhere along the line. For example, in the second exaimple given in the mdn - section starting with  " To customise the proxy, we define functions on the handler object: " - they give a parameter  " receiver "  but receiver does not seem to be userd anywhere in the example and it is not explicitly defined before that. I thought it might be 
[10:27:55] <blahboybaz> a callback but since I don't see it used I don't think it's that. Its one example that is confusing me in that doc
[10:28:24] <blahboybaz> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy#description
[10:28:27] <bayaz> Title: Proxy - JavaScript | MDN 
[10:29:47] *** Joins: hexnewbie (~hexnewbie@user/hexnewbie)
[10:29:56] *** Joins: Akronymus (~Akronymus@85.118.189.59)
[10:30:58] *** Joins: independent56 (~independe@95.144.68.39)
[10:31:54] <blahboybaz> receiver does show up in the mdn for Reflect but I do not see it being defined there either so I don't know how I'm supposed to grep what's going on
[10:32:10] *** Joins: APic (apic@apic.name)
[10:33:16] *** Quits: APic (apic@apic.name) (Read error: Connection reset by peer)
[10:36:24] *** Joins: user51 (~user51@176.228.90.248)
[10:37:10] *** Joins: APic (apic@apic.name)
[10:37:52] *** Quits: APic (apic@apic.name) (Read error: Connection reset by peer)
[10:43:36] *** Joins: dunkeln (~dunkeln@94.128.205.199)
[10:43:36] *** Quits: dunkeln (~dunkeln@94.128.205.199) (Changing host)
[10:43:36] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[10:45:52] *** Quits: hexingb (~hexingb@103.37.140.36) (Ping timeout: 252 seconds)
[10:46:10] *** Joins: hexingb (~hexingb@2409:8902:78c4:4375:7157:943f:2208:85ee)
[10:47:38] *** Quits: austincheney_ (~austinche@104-189-235-24.lightspeed.rcsntx.sbcglobal.net) (Read error: Connection reset by peer)
[10:47:42] *** Joins: austincheney (~austinche@104-189-235-24.lightspeed.rcsntx.sbcglobal.net)
[10:51:03] <blahboybaz> ever feel waves of nausea and disgust roll over you when trying to break into some new knowledge?
[10:52:23] <DPA> You can see more here: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy
[10:52:23] <DPA> For "get": argument "receiver", it says: Either the proxy or an object that inherits from the proxy. So for x=new Proxy(y,{get(target, property, receiver){}}), when accessing x.anything, the get handler will called with receiver=x, target=y, property="anything". I think "this" is also x.
[10:52:24] <bayaz> Title: Proxy() constructor - JavaScript | MDN 
[10:54:29] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[10:58:29] *** Quits: austincheney (~austinche@104-189-235-24.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 252 seconds)
[10:59:02] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[10:59:15] *** Joins: mnd999_ (~mark@2001:8b0:da3:76a2:4630:5b97:83a2:3e21)
[10:59:20] *** Joins: webNET4 (~0x100@32.211.211.39)
[11:01:27] <Akronymus> Webex can suck a fat one.
[11:01:55] <Akronymus> How can there be something worse than teams?
[11:05:50] *** Joins: lalitmee__ (~lalitmee@180.94.32.179)
[11:08:19] *** Quits: hexingb (~hexingb@2409:8902:78c4:4375:7157:943f:2208:85ee) (Ping timeout: 252 seconds)
[11:08:34] *** Quits: lalitmee_ (~lalitmee@180.94.32.83) (Ping timeout: 265 seconds)
[11:08:57] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-b82e-8865-a976-d9c2.res6.spectrum.com)
[11:09:14] *** Joins: APic (apic@apic.name)
[11:09:26] *** Quits: APic (apic@apic.name) (Read error: Connection reset by peer)
[11:10:49] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[11:10:51] <no_gravity> Good Morning
[11:11:17] <beaky> hello my name is beaky
[11:11:29] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[11:11:37] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-9946-f19a-5329-6a99.res6.spectrum.com) (Ping timeout: 252 seconds)
[11:11:48] <no_gravity> beaky: That is a wonderful name!
[11:11:57] <blahboybaz> https://pasteboard.co/KjsBIbg.png
[11:11:59] <no_gravity> beaky: Is exponential growth x^2 or 2^x?
[11:11:59] <bayaz> Title: Pasteboard - Uploaded Image 
[11:13:20] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[11:14:14] *** Joins: APic (apic@apic.name)
[11:14:22] *** Quits: APic (apic@apic.name) (Read error: Connection reset by peer)
[11:15:43] <blahboybaz> DPA: appreciate that
[11:15:49] <blahboybaz> thx
[11:18:07] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[11:18:18] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:f1cc:d5ea:e86d:e5c1)
[11:18:24] *** Joins: webNET4 (~0x100@32.211.211.39)
[11:19:14] *** Joins: APic (apic@apic.name)
[11:19:15] <Akronymus> no_gravity exponential.
[11:19:27] <Akronymus> Brain why?
[11:19:28] *** Quits: APic (apic@apic.name) (Read error: Connection reset by peer)
[11:19:34] <Akronymus> 2^x is
[11:19:45] <Akronymus> x^2 is quadratic.
[11:19:45] <no_gravity> Akronymus: Nice. Thanks.
[11:20:04] <Akronymus> Basically named after the exponent.
[11:21:49] *** Joins: absc (~absc@dynamic-adsl-94-34-168-109.clienti.tiscali.it)
[11:22:18] <blahboybaz> I think 2^x is binary isn't it?
[11:22:39] <blahboybaz> ( as for that one anyway )
[11:29:03] <Akronymus> blahboybaz it is a way to convert from binary to decimal.
[11:29:23] <Akronymus> But no, not inherently binary.
[11:30:51] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Read error: Connection reset by peer)
[11:31:44] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:32:21] <Sauvin> How is 2^x "not inherently binary"?
[11:32:33] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[11:33:27] <Akronymus> It isn't in base 2, for one thing.
[11:33:36] <Akronymus> And you can raise to arbitrary powers.
[11:33:42] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[11:33:51] <Akronymus> So, stuff like 2^1.5 is possible
[11:33:55] *** Joins: webNET4 (~0x100@32.211.211.39)
[11:34:17] <jelly> blahboybaz: can you define "binary growth"
[11:34:28] * jelly has no idea what that is
[11:34:47] <Sauvin> Oh, I was thinking 2^n, where n is an integer.
[11:35:10] <Akronymus> That'd be geometric growth.
[11:35:30] <Akronymus> (A subgroup of exponential)
[11:37:01] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 252 seconds)
[11:38:53] *** Quits: piou (~piou@24.20.201.77.rev.sfr.net) (Changing host)
[11:38:54] *** Joins: piou (~piou@user/piou)
[11:44:30] *** Joins: aradesh (~aradesh@user/aradesh)
[11:45:04] *** Joins: mrig (~mrig@user/mrig)
[11:45:17] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:49:20] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[11:50:17] *** Joins: APic (apic@apic.name)
[11:50:27] *** Quits: APic (apic@apic.name) (Read error: Connection reset by peer)
[11:50:40] *** Quits: jamea (~jamea@177.239.86.115) (Ping timeout: 240 seconds)
[11:51:27] *** Joins: hexingb (~hexingb@103.37.140.21)
[11:54:28] *** Joins: Rounin (~david@84.212.130.215)
[11:55:17] *** Joins: APic (apic@apic.name)
[11:55:55] *** Quits: independent56 (~independe@95.144.68.39) (Ping timeout: 260 seconds)
[11:57:14] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[12:02:12] *** Quits: soapsudsxx (~soapsudsx@141.193.188.154) (Remote host closed the connection)
[12:02:22] *** Joins: jaysicks (~jaysicks@94-21-246-55.pool.digikabel.hu)
[12:03:02] *** Quits: noteness (noteness@user/noteness) (Ping timeout: 245 seconds)
[12:03:14] *** Joins: chomwitt (~chomwitt@2a02:587:dc16:c800:12c3:7bff:fe6d:d374)
[12:07:03] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[12:10:50] *** Joins: alycidyne (~kova@91-160-172-214.subs.proxad.net)
[12:11:32] <alycidyne> Hello, what if all file formats were developed as abstract data types and thus independently of any app/program?
[12:11:48] *** Joins: mishugana (~mishugana@user/mishugana)
[12:13:09] <alycidyne> as a first step towards delegitimizing software as a business
[12:13:20] <webNET4> they wouldn't be portable
[12:14:06] <mrig> alycidyne: Would that not give you the UNIX file system?
[12:14:20] <mrig> UNIX across other systems, POSIX ?
[12:14:23] <alycidyne> webNET4: how is an abstract data type not portable?
[12:14:38] <webNET4> because you need to define its structure
[12:14:47] <mrig> Good morning.
[12:14:50] <mrig> :)
[12:14:50] <alycidyne> webNET4: I said data type, not data structure
[12:15:03] <webNET4> you said file format
[12:15:11] <webNET4> what is a file without data
[12:15:16] *** Quits: hexingb (~hexingb@103.37.140.21) (Ping timeout: 265 seconds)
[12:15:26] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:15:36] *** Joins: hexingb (~hexingb@103.37.140.36)
[12:17:10] <mrig> files and stream, are all that there is anyhow.
[12:17:37] <alycidyne> mrig: so let's just ignore records :P
[12:19:10] <mrig> those are files though.
[12:19:40] <alycidyne> webNET4: as for portability, unless the systems used different byte sizes or alignments which were coprime and the file format were about systems, I don't see portability issues yet
[12:19:47] <alycidyne> webNET4: and that's if the format is binary
[12:19:48] <mrig> I mean really discreet and continuous data I suppose.
[12:20:01] <webNET4> what endianness
[12:20:55] <webNET4> all string based?
[12:20:55] <mrig> what date format?
[12:20:56] <webNET4> it will be slow
[12:21:39] <alycidyne> webNET4: networking uses big-endian in all cases, so it's not like this hasn't been imposed already
[12:21:45] *** Quits: quazimodo (~quazimodo@n1-40-133-145.bla1.nsw.optusnet.com.au) (Remote host closed the connection)
[12:22:02] <mrig> data fields could be an interesting way to look at it, when the numbers get big.
[12:22:17] <mrig> especially when more than one interact.
[12:24:34] * mrig gets all enamored with matrices again. :D
[12:24:50] *** Joins: teut (~teut@122.161.21.145)
[12:24:55] <teut> https://drive.google.com/drive/folders/1yLSHeTzeft1W6GE80EVxpWPbHnNmjqQZ
[12:24:57] <teut> oops
[12:24:58] <bayaz> Title: Higher Education Talks: Slides - Google Drive 
[12:25:07] <teut> https://dpaste.org/dgdW 
[12:25:12] <alycidyne> re string-based formats, the OpenDocument standard literally uses zipped archives of xml files
[12:25:15] <teut> how to use declytype there?
[12:25:19] <teut> decltype*
[12:26:35] <webNET4> lol
[12:27:25] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 260 seconds)
[12:27:57] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[12:28:30] <mrig> dang vim has started to block up when I make a :vim search
[12:28:35] <mrig> :|
[12:28:40] <webNET4> https://arne-mertz.de/2017/01/decltype-declval/
[12:30:17] <pyzozord> Gah! My lead dev just merged his three month old branch with 192 files changed!
[12:30:23] <pyzozord> can you be any more disruptive
[12:31:30] <alycidyne> pyzozord: only 192 files in three months? :P
[12:31:43] <Trashlord> heh
[12:34:26] <pyzozord> all just to change the compiler
[12:35:05] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[12:37:33] *** Joins: cth (~Cthulchu@193.194.107.250)
[12:37:44] <death916> hope you werent working on anything changed
[12:37:59] <death916> or that depends on something changed
[12:38:08] *** Joins: MINIMAN10000 (~quassel@c-73-225-3-123.hsd1.wa.comcast.net)
[12:38:10] <death916> or that depends on something that depends on something changed
[12:38:49] *** Quits: alycidyne (~kova@91-160-172-214.subs.proxad.net) (Quit: leaving)
[12:39:14] <pyzozord> there is 3.9% chance per file. So if I changed 3 files I got 11% chance of being affected
[12:40:18] *** Quits: mishugana (~mishugana@user/mishugana) (Quit: leaving)
[12:40:20] <pyzozord> and indirect dependencies I don' know but I'd say it probably affects everything
[12:40:20] *** Quits: X-Scale (~ARM@128.229.28.37.rev.vodafone.pt) (Read error: Connection reset by peer)
[12:41:01] <mrig> oh it could be trying to search my named pipe!
[12:41:19] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[12:41:42] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[12:42:02] <mrig> records are, I suppose, somewhat less of an attempt to be a pen and paper than files.
[12:42:21] <pyzozord> records?
[12:42:44] <mrig> yes alycidyne mentioned them earlier.
[12:44:05] <mrig> I like folio more than file as a term, don't know why; Reminds me more of trees I suppose :D
[12:44:15] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[12:44:27] *** Joins: webNET4 (~0x100@32.211.211.39)
[12:44:52] <mrig> did htop spawn a library when written I wonder, or use one for its output>
[12:44:54] <mrig> ?
[12:45:58] <webNET4> ldd shows ncurses
[12:46:12] *** Quits: blahboybaz (~blahboyba@73.109.57.10) (Ping timeout: 265 seconds)
[12:46:17] <webNET4> and libc / libm
[12:47:01] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:47:08] <mrig> I should take a look at the code I suppose, see how it was organised.
[12:47:17] *** Joins: dunkeln (~dunkeln@94.128.205.199)
[12:47:17] *** Quits: dunkeln (~dunkeln@94.128.205.199) (Changing host)
[12:47:17] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[12:47:52] *** Joins: blahboybaz (~blahboyba@73.109.57.10)
[12:48:07] *** Quits: MINIMAN10000 (~quassel@c-73-225-3-123.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[12:48:07] <mrig> Just stumbled on some of the config pages, it's really well done.
[12:48:22] <user51> is there a word that describes the feeling you get when you read code and think "this is the wrong language for this"?
[12:48:44] <webNET4> yes i call that reading code
[12:48:46] <mrig> user51: confusion?
[12:49:09] <mrig> could be disgust I suppose XD
[12:49:37] *** Quits: hexingb (~hexingb@103.37.140.36) (Ping timeout: 252 seconds)
[12:49:42] <mrig> user51: I get this feeling when I read English :P
[12:50:28] <beaky> i love rust
[12:51:25] <Trashlord> I want to get into Rust
[12:51:28] <mrig> pyzozord: if you are having time dysphoria, I think mine could be time and place dysphoria :D
[12:51:32] <Trashlord> gotta find something good to do with it
[12:52:19] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Quit: Leaving)
[12:52:20] <mrig> Trashlord: if you code the next big thing, you could define the language of a generation and become a hip coding influancer!
[12:52:33] * mrig avoids all the hype.
[12:53:13] <mrig> why make the programming language more complicated to support a feeble written langauge?
[12:53:20] <mrig> language.
[12:53:25] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[12:53:30] * mrig goes retro.
[12:53:41] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[12:54:04] <webNET4> write a C compiler in rust, lol
[12:54:06] *** Joins: hexingb (~hexingb@103.37.140.21)
[12:54:19] <mrig> heh
[12:54:47] <webNET4> eh someone is probably on that already
[12:55:12] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi)
[12:55:13] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:f1cc:d5ea:e86d:e5c1) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[12:55:28] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi) (Read error: Connection reset by peer)
[12:56:09] <mrig> I see sets and automates, write them with love and attention in whatever language tickles your fancy XD
[12:56:50] <mrig> surprising how little there is underneath all the abstractions :)
[12:57:25] *** Joins: jinsun (~quassel@user/jinsun)
[12:57:27] *** Joins: jinsun__ (~quassel@user/jinsun)
[12:57:45] <mrig> what would the compliment of BrainFuck look like?
[12:58:35] <user51> mrig: http://sprunge.us/ZifpzR
[12:58:40] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi)
[12:58:40] <mrig> A language designed for readability rather than obfuscation?
[12:58:45] <user51> heres the code
[12:58:51] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[12:59:04] *** Joins: webNET4 (~0x100@32.211.211.39)
[13:00:44] *** Quits: mz` (~mz`@xvm-240-147.dc2.ghst.net) (Changing host)
[13:00:44] *** Joins: mz` (~mz`@user/mz/x-8532539)
[13:01:01] <pyzozord> I'm not sure how true that is, but I'd love it if language wasn't a major factor in code redability
[13:01:03] <mrig> oh a parser for s expressions in AWK, dang I'm not going to get into trying to read that right now :)
[13:01:17] <mrig> pyzozord: sure it is.
[13:01:30] <mrig> including the underlying human language.
[13:01:35] <user51> it also really depends on what the language provides
[13:01:37] <mrig> its grammar.
[13:01:57] <user51> the awk code above could use some helping of function pointers, for example. but at that point might as well do C.
[13:02:41] <pyzozord> I think sometimes you just neeed to say things different or even say other things to get the poin across well. The real trouble comes when someone is trying to speak polish in english and they end up with ponglish
[13:02:42] <mrig> What is the term for the language used to write a program, not the programming language but the choice of native language?
[13:02:46] <user51> you can - quite painfuly - emulate pointers in awk by assigning specific length unique ids to stuff. but once stuff gets nested, it becomes quite ugly.
[13:03:20] *** Joins: plastico (~plastico@neomutt/plastico)
[13:03:27] <mrig> user51: ah right, I gather that the use of pointers in AWK is quite restricted.
[13:03:41] <user51> nah, there are no pointers in awk at all
[13:03:46] <pyzozord> I actually think my ideal language would do just that
[13:03:48] <mrig> For reading and formatting data really I suppose.
[13:04:22] <user51> if you consider what a pointer is, it's possible to implement it to some degree. but pointers to pointers become.. you just think, yeah this isn't the right language
[13:04:24] <mrig> pyzozord: there are also more involved types of grammar for human language. 
[13:04:31] <mrig> far more structured.
[13:04:41] <Trashlord> maybe I *should* write a C compiler. I wouldn't even know where to begin but I'm sure I could figure it out eventually
[13:04:43] <mrig> than we use at the moment.
[13:05:32] <mrig> user51: just a hunch, but is sounds as thought the pointers is AWK are somehow linked to C's unions too.
[13:06:41] <piou> Trashlord: writting a compiler is fun, but I'm not sure I would recommend C as a first language to write a compiler for, it's full of quirks :)
[13:06:50] <user51> mrig: how are they related?
[13:07:06] <pyzozord> hmm I think my ideal language would have just stack and arrays.
[13:07:19] <pyzozord> But arrays could be of type byte
[13:07:22] <mrig> user51: oh I am speculating, I read on here the other day that the pointers in AWK are coupled to data size.
[13:07:34] <mrig> so one naturally thinks of unions.
[13:07:39] <piou> Trashlord: its quite old by now but the book "Let's write a compiler" is available online for free and very easy to get going IMHO
[13:07:48] *** Joins: lalitmee_ (~lalitmee@180.94.32.247)
[13:08:03] <user51> mrig: awk has no pointers, the only data structure provided is an associative array
[13:08:13] <pyzozord> stack, arrays, and infinite, cost-free recursion
[13:08:34] <pyzozord> or loops. Not sure which. Maybe both
[13:08:51] <user51> cost-free recursion? howdoes that work?
[13:09:04] <pyzozord> same as loops
[13:09:12] *** Joins: vysn (~vysn@user/vysn)
[13:09:19] *** Quits: JavaBean (~javabean@user/javabean) (Ping timeout: 252 seconds)
[13:09:32] *** Joins: JavaBean- (~javabean@user/javabean)
[13:09:42] <pyzozord> I mena time cost-free. Of course recursion needs some space - most of the time anyway
[13:10:29] *** Quits: lalitmee__ (~lalitmee@180.94.32.179) (Ping timeout: 252 seconds)
[13:11:07] <Trashlord> piou: alright, thanks
[13:11:27] *** Quits: APic (apic@apic.name) (Quit: [TLS] Client upgrade)
[13:11:34] <mrig> a language with which to write programs, seems to be a logical step at this time, irrespective of the programming language.
[13:11:37] *** Joins: APic (apic@apic.name)
[13:12:06] <mrig> Our philosophy was not far enough advanced to grok this when programming started out, seems like an obvious destination though.
[13:12:31] *** Joins: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk)
[13:12:31] *** Quits: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk) (Changing host)
[13:12:32] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[13:15:38] <mrig> worst choice would be language that is inherently ambiguous, the only thing that would achieve is favoring the troll over the risi 
[13:15:41] <mrig> :D
[13:15:44] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[13:16:23] * mrig casts some runes ...
[13:17:31] <mrig> piou: returning to write some C now after using a more modern language, It is amazing how much looser it is. I'd no notion of how much so in the past.
[13:18:44] <mrig> reducing ambiguity, pruning ambiguity in language bonsai :)
[13:20:27] <mrig> oh the pipe was screwing vim up, must remember to add that to the search ignore in the rc
[13:20:33] *** Quits: APic (apic@apic.name) (Quit: Boot tut gut‚Ñ¢)
[13:21:54] *** Quits: dre (~dre@2001:8003:c932:c301:693b:b827:4df9:b3e4) (Quit: Leaving)
[13:23:18] <nitrix> mrig, Looser for better or worse?
[13:23:40] <mrig> nitrix: sorry?
[13:23:57] <mrig> oh looser, right.
[13:24:24] <mrig> I read loser :D
[13:25:10] *** Quits: blahboybaz (~blahboyba@73.109.57.10) (Ping timeout: 260 seconds)
[13:25:29] <mrig> nitrix: I am not sure to be honest, self discipline and consistency is required when using it, but I do love the way in which it is mechanical in aspect.
[13:25:36] <nitrix> It's me following up on your return to C and curious if that meant that you're now capable to appreciate on a level you couldn't before, or that its flaws are glaringly obvious.
[13:26:00] <mrig> not flaws, just its nature more so.
[13:26:29] <mrig> its 'spikyness', wrought with danger for sure.
[13:26:39] <mrig> but, depends entire upon how you use it.
[13:27:09] <nitrix> Right. I think that's where I'm at too. It has a purpose/vision and sticks to it. Once you're aligned to that, it's very predictable and doesn't get much in your way.
[13:27:35] <pyzozord> I think most people like more structured languages. Otherwise things like Rust wouldn't get so popular
[13:28:00] <mrig> quite, I've always thought that this would be the case, but it is very difficult to be allowed the space in which to practice, in the current coding paradigm.
[13:29:59] <piou> pyzozord: I don't know if it's about liking them more... Things like "I have a vision and I stick to it" only scale with effort, and the more people work on a project the better it becomes to find bugs when developing and not days or months later in production
[13:30:01] <pyzozord> Funnily enough I'm not a big fan of ambiguity in human languages, but I think I'm mostly ok with it in programming languages. Probably the reverse of most people
[13:30:39] *** Joins: Daemonick (~nick@77.49.60.169.dsl.dyn.forthnet.gr)
[13:31:16] <piou> yeah, I'm not a fan of either but I excuse human language more easily than programming ones
[13:31:27] <Daemonick> Too many ITs but there are so few who can really and actually write codes
[13:31:33] <pyzozord> I think maybe I have certain level of certainess and ambiguity I like and human languages or no certain enough, and most programming languages are not ambigue enough
[13:31:52] <pyzozord> s/or no/are not/
[13:33:04] <piou> Maybe the reason why I accept it in human languages is because ambiguity is often its own space of expression, allowing for subtlety that leads to poetry or humour. And as much as I like beautiful code I don't think a programming language is the place to have poetry and humour.
[13:33:31] <pyzozord> I think I disagree with that
[13:33:51] <piou> what part?
[13:34:00] <pyzozord> or maybe I agree with what was said
[13:34:16] <nitrix> It puts a lot of trust onto the programmers, but the responsibilities are derived from few concepts that can be learned reasonably easily. On the other hand, you have safer languages that don't trust programmers, but then you have to deal with the various abstractions that are meant to cover all variations/permutations of all edge cases deriving from those concepts.
[13:34:29] <piou> pyzozord: It's funny how unclear you can be on a discussion on ambiguity ^_^
[13:34:33] <pyzozord> but I believe that using programming languages is inheritently a creative act
[13:34:45] <piou> pyzozord: oh, that I agree with completely
[13:35:21] <mrig> nitrix: I find that the safety aspect impedes learning and leads to cargo cult mythologies.
[13:36:27] <mrig> piou: yes I agree with you there, but think that there is space for both and also equate this to issues of psychosis, as such it is rather less romantic.
[13:36:36] <pyzozord> Hmm I dont think I have a fully formed opinion about safety and strictness of programming languages.
[13:37:08] <mrig> The notion that the 'artist must suffer' is nonsense in my opinion, yet it is repeated in some cultures to the detriment of many.
[13:37:25] *** Quits: chomwitt (~chomwitt@2a02:587:dc16:c800:12c3:7bff:fe6d:d374) (Ping timeout: 260 seconds)
[13:37:30] <nitrix> I always have the same complaint: abstractions are never perfect. They are like 90% solutions and when you combine them with other abstractions, the problem worsen. 90% * 90% is 81%. The more abstractions, the more everything becomes edge cases.
[13:37:30] *** Joins: aliosablack (~chomwitt@94.66.61.235)
[13:38:02] <mrig> some do love that the artists suffer for their own amusement, this is often also the root of humor.
[13:38:18] <Akronymus> https://confluence.atlassian.com/doc/confluence-security-advisory-2021-08-25-1077906215.html
[13:38:19] <bayaz> Title: Confluence Security Advisory - 2021-08-25 | Confluence Data Center and Server 7.13 | Atlassian Documentation 
[13:38:20] <Akronymus> Fuck.
[13:38:20] <nitrix> You end up having to worry about choices the abstraction made, or little details, or flags, or differently named abstractions that have slightly different behavior.
[13:38:46] <nitrix> Like, sure, it's all done for you, it saves you so much time, but the cognitive overhead is hard to dismiss.
[13:38:50] <mrig> oh that's an interesting thought, how the edge cases react to abstraction.
[13:38:54] <Akronymus> Abstractions shouldn't be hiding complexity.
[13:38:58] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:39:03] <Akronymus> They should be a new way to think about something
[13:39:05] <pyzozord> mrig: I agre  but I always felt that 'only suffering can be artists'
[13:39:10] *** Quits: hexingb (~hexingb@103.37.140.21) (Ping timeout: 260 seconds)
[13:39:12] <Akronymus> Where hiding complexity is incidental.
[13:39:30] <mrig> Oh there are some fascinating perspectives on this in different cultures.
[13:39:46] <mrig> It is one of the key aspects in a way that define culture too.
[13:40:11] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 252 seconds)
[13:41:01] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi)
[13:43:31] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[13:44:15] *** shaolin is now known as h4x0r
[13:44:45] <pyzozord> Meaning you can only appriciate the beauty when you understand the ugly
[13:45:02] <pyzozord> if there is only beauty or only ugly it's meaningless
[13:45:30] <mrig> but beauty is in the eye of the beholder, you are appreciating a field.
[13:45:35] <pyzozord> but "game developer must suffer terrible programming language to produce art" is braindead :D
[13:45:36] <DPA> One thing I don't like about more recent languages is that they try to create an ecosystem / platform. One doesn't simply program with X, Y and Z anymore, one has an X project, and mainly uses X, and Y Z are to be used sparingly and only using the tools of X and the abstraction package those creates!
[13:45:36] <DPA> Also, modularity, individually compilable units, interfaces first? Nowhere to be found! Programs, Libs, etc. are compiled all at once, implementations referencing each other directly...
[13:45:49] <mrig> That is what I mean about the romance take on things.
[13:46:02] *** Joins: hexingb (~hexingb@103.37.140.36)
[13:48:21] <mrig> interfaces are amazing.
[13:48:55] <deniska> DPA: newer languages don't have a luxury of unix clones being de-facto ecosystems for older languages
[13:49:06] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:49:19] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:49:30] <mrig> Akronymus: the facade design patter is rather useful though.
[13:49:35] <mrig> pattern
[13:49:53] <mrig> just not supposed to be the answer to everything.
[13:50:26] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi)
[13:51:15] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[13:52:49] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:56:56] <DnzAtWrk> losing my patience with unity
[13:57:01] <DnzAtWrk> I mean... ubuntu
[13:57:13] <DnzAtWrk> debian any day :P
[13:59:28] *** Quits: hexingb (~hexingb@103.37.140.36) (Ping timeout: 252 seconds)
[14:01:40] *** Joins: GreenAlpaca (~GreenAlpa@user/greenalpaca)
[14:01:49] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[14:04:00] *** Joins: hexingb (~hexingb@103.37.140.21)
[14:04:15] <pyzozord> DnzAtWrk: what's wrong
[14:05:10] *** Quits: audio (~audio@2603-8081-1801-3bb5-92e1-977b-0879-14f5.res6.spectrum.com) (Ping timeout: 240 seconds)
[14:06:10] *** Joins: dunkeln (~dunkeln@94.128.205.199)
[14:06:10] *** Quits: dunkeln (~dunkeln@94.128.205.199) (Changing host)
[14:06:10] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[14:08:10] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[14:14:54] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[14:15:29] <DnzAtWrk> busted audio driver
[14:16:08] *** Joins: homura (root@user/homura)
[14:16:24] *** Joins: nitro (~nitro@c-73-165-183-88.hsd1.pa.comcast.net)
[14:17:29] *** Joins: CoderGuy2 (~CoderGuy@2601:644:101:4f20:5b8:e3a6:fe04:8cd6)
[14:21:10] *** Quits: CoderGuy (~CoderGuy@2601:644:101:4f20:2141:1521:c9ad:6f50) (Ping timeout: 240 seconds)
[14:21:15] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[14:21:26] *** Joins: flynn (~mcbloch@user/flynn)
[14:22:33] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Ping timeout: 276 seconds)
[14:23:40] *** Joins: xsperry (~as@user/xsperry)
[14:23:50] <mrig> oh, that's rough, what is it doing?
[14:25:52] <mrig> I'm really happy with the way that debian is behaving with my sound device, its usb though.
[14:26:45] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:27:15] *** Joins: lalitmee__ (~lalitmee@180.94.33.48)
[14:27:56] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[14:28:14] <password> i thought my laptop had busted audio drivers , it would just suddenly stop playing , turns out the spring contacts in the case was not making contact
[14:28:35] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi)
[14:29:43] *** Quits: lalitmee_ (~lalitmee@180.94.32.247) (Ping timeout: 252 seconds)
[14:32:12] *** Quits: Mija (~Mija@user/mija) (Ping timeout: 245 seconds)
[14:34:52] <DarkTrick> Anyone here knows how to integrate `glib-compile-resources` into my build system (autotools)
[14:41:47] *** Quits: jacktar (~whiteshad@gateway/tor-sasl/jacktar) (Remote host closed the connection)
[14:46:00] *** Quits: teut (~teut@122.161.21.145) (Quit: Ping timeout (120 seconds))
[14:48:58] *** Quits: aliosablack (~chomwitt@94.66.61.235) (Ping timeout: 265 seconds)
[14:49:03] *** Joins: chomwitt (~chomwitt@athedsl-369855.home.otenet.gr)
[14:49:59] <arkanoid> I want to learn how to deal with errors and how to use options, exceptions, int returns and some discussion about the pro and cons of each approach
[14:50:09] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:50:55] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 260 seconds)
[14:51:29] <pyzozord> I'd be interested in to listening in to discussion about error handling and how exactly exceptions are bad too
[14:53:24] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[14:53:36] *** Joins: flynn (~mcbloch@user/flynn)
[14:53:55] *** Quits: JavaBean- (~javabean@user/javabean) (Ping timeout: 252 seconds)
[14:54:46] <Trashlord> any good CSS tutorial out there that won't bore me to hell?
[14:55:01] <Trashlord> I gotta improve my web dev front end skills
[14:55:18] *** Joins: JavaBean (~javabean@user/javabean)
[14:55:36] <pyzozord> Trashlord: not a tutorial, but you gotta know this one https://css-tricks.com/snippets/css/a-guide-to-flexbox/
[14:55:40] <bayaz> Title: A Complete Guide to Flexbox 
[14:56:08] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[14:56:10] *** Quits: chomwitt (~chomwitt@athedsl-369855.home.otenet.gr) (Ping timeout: 260 seconds)
[14:56:17] <Trashlord> pyzozord: thanks. I think I've encountered that one previously, but never followed up on it
[14:56:44] <pyzozord> Groking the box model also very useful https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/The_box_model
[14:56:45] <bayaz> Title: The box model - Learn web development | MDN 
[14:57:30] *** Joins: img (~img@user/img)
[14:57:39] <Trashlord> hmm, maybe MDN as a whole is a good resource for learning this
[14:57:53] <pyzozord> I guess that entire mdn tutorial is a not bad https://developer.mozilla.org/en-US/docs/Learn/CSS
[14:57:54] <bayaz> Title: Learn to style HTML using CSS - Learn web development | MDN 
[14:58:01] <Trashlord> yeah
[14:58:03] <Trashlord> thanks
[14:58:18] *** Joins: dunkeln (~dunkeln@94.128.205.199)
[14:58:18] *** Quits: dunkeln (~dunkeln@94.128.205.199) (Changing host)
[14:58:18] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[14:58:20] <pyzozord> yeah mdn is generally used as de-facto documentation by most frontend devs
[14:58:38] <Trashlord> I've used it mostly for JS
[14:59:47] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:00:49] <arkanoid> pyzozord: any good reference for this?
[15:01:20] *** Joins: jacktar (~whiteshad@gateway/tor-sasl/jacktar)
[15:01:45] *** jacktar is now known as lonewolf
[15:01:56] <pyzozord> reference?
[15:02:05] *** Joins: alguien (~alguien@user/alguien)
[15:02:06] *** Joins: fanis30 (~fanis30@adsl-142.37.6.0.tellas.gr)
[15:02:12] *** lonewolf is now known as lone_wolf
[15:02:22] *** lone_wolf is now known as jacktar
[15:03:46] <Trashlord> pyzozord: I guess he means the claim that it's used as de-facto documentationn by most frontend devs
[15:04:09] <pyzozord> arkanoid: no no good reference. I am the good reference :P
[15:04:22] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[15:04:34] *** Joins: flynn (~mcbloch@user/flynn)
[15:05:38] *** Quits: x003fgqwe (uid479614@id-479614.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[15:07:09] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[15:07:20] *** Quits: hexingb (~hexingb@103.37.140.21) (Ping timeout: 265 seconds)
[15:08:13] *** Joins: hexingb (~hexingb@2409:8902:78c4:4375:cc10:1563:545:260e)
[15:08:32] *** Joins: img (~img@user/img)
[15:09:08] <alguien> Here's the plan, guys. A new cross-platform framework for mobile development. But only for iOS. How is that cross-platform you ask? Easy, the API is the Android SDK. We write apps for native Android and it works on iOS. That's the only reason we use cross-platform tools anyway, to support iOS users. Of course, due to the translation layer, it won't work as well on iOS as it does on Android. That's a good thing. People stop using iOS on account on 
[15:09:08] <alguien> apps being slower on it, and we are finally free of the poisonous apple!
[15:10:16] *** Quits: ShockTohp (~kevin@155.138.224.160) (Ping timeout: 252 seconds)
[15:10:35] <arkanoid> alguien: microsoft has been working on this for years, see Xamarin
[15:10:56] <alguien> arkanoid, i'm afraid Xamarin slows down Android apps more than iOS ones
[15:11:22] <deniska> alguien: plan spectacularly backfires: the compatibility layer actually works better than native android
[15:12:09] <GeDaMo> I had something like back in the 80s
[15:12:22] <arkanoid> alguien: well, minor issue. Wouldn't you sacrifice Android to kill iOS? I'd do
[15:12:37] <GeDaMo> I spent two weeks porting some MS-BASIC programs to C-BASIC to run on Concurrent CP/M
[15:12:41] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[15:12:53] *** Joins: flynn (~mcbloch@user/flynn)
[15:12:56] <GeDaMo> Just as I finished, an MS-DOS emulator for CCP/M turned up
[15:13:19] <GeDaMo> It ran the MS-BASIC programs compiled for MS-DOS faster than the native C-BASIC opes :/
[15:14:46] *** Joins: chomwitt (~chomwitt@athedsl-351437.home.otenet.gr)
[15:14:54] <alguien> GeDaMo, https://media2.giphy.com/media/ZsXGPHnHmQYCY/giphy.gif
[15:14:54] <bayaz> Type: image/gif Size: 1.8 MB 
[15:15:04] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:1401:c07a:1bf6:5a6f) (Read error: Connection reset by peer)
[15:15:23] *** Joins: dan01 (~dan01@2a02:2f09:321a:b600:e95f:cf13:a244:e1d4)
[15:15:23] <GeDaMo> Yeah :P
[15:15:58] <user51> fx!32 :)
[15:16:09] <pyzozord> Xamarin and Mono are pretty cool
[15:16:13] <alguien> GeDaMo, lousy C-BASIC compiler, huh?
[15:16:32] <GeDaMo> It was slow compiling and the code it produced was also slow
[15:17:15] <user51> https://en.wikipedia.org/wiki/FX!32
[15:17:16] <bayaz> Title: FX!32 - Wikipedia 
[15:17:21] *** Quits: Akronymus (~Akronymus@85.118.189.59) (Ping timeout: 256 seconds)
[15:17:34] <alguien> pyzozord, not for Android: https://itnext.io/goodbye-xamarin-forms-f41723fb9fe1
[15:17:38] <bayaz> Title: Goodbye Xamarin.Forms 
[15:18:05] <pyzozord> As I understand it the way xamarin works on android is that there are actually two vms running at the same time: dalivk as a server for all android things, and mono as the thing that executes the code. Whenever code needs to call some native apis it calls to the server in dalvik, and that executes the native stuff
[15:18:14] <pyzozord> oh did they cancel android?
[15:18:56] <alguien> pyzozord, if that is so, then the above link applies to Xamarin as a whole, not just Forms
[15:19:06] <pyzozord> oh but it's just some "forms" library
[15:19:09] *** Joins: pulse (~pulse@user/pulse)
[15:19:45] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[15:19:55] *** Joins: flynn (~mcbloch@user/flynn)
[15:20:18] <alguien> pyzozord, they disn't cancel Android, since MS has no mobile platform of its own to compete with iOS anymore. But there's this hardly fixable context switching problem, and then there's the fact that you can't develop Xamarin apps on (just) GNU/Linux
[15:20:25] <alguien> *Xamarin.Android
[15:20:27] <mrig> does anyone know how zig deals with OOP if at all?
[15:20:40] *** Joins: Twipply (~Twipply@user/twipply)
[15:20:54] <mrig> does it have methods on objects or classes, any of that sort of thing?
[15:20:55] <pyzozord> the xamarin android architecture seems to be still with 2 vms https://docs.microsoft.com/en-us/xamarin/android/internals/architecture
[15:20:56] <bayaz> Title: Architecture - Xamarin 
[15:21:10] *** Quits: dan01 (~dan01@2a02:2f09:321a:b600:e95f:cf13:a244:e1d4) (Read error: Connection reset by peer)
[15:21:53] <alguien> and they have yet to port the left-hand-side to Core
[15:22:26] <mrig> I'm intrigued if it was created by a game programmer, as to what the did for grouping things.
[15:22:32] *** Quits: Daemonick (~nick@77.49.60.169.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[15:23:08] <alguien> mrig, i'd be surprised any gamedev wisdom was integrated into the language itself. Compiler, sure
[15:23:44] <mrig> ah, more of a relaxed approach to code structure then.
[15:24:01] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[15:24:08] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[15:25:33] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:25:36] <alguien> I wonder what would be a surrogate for gamedev experience that is likewise not "that" mathematically-intensive but doesn't result in mere entertainment
[15:25:44] <alguien> *or mere art
[15:26:12] <alguien> I don't care to produce time-wasters, but I see the benefits of developing them
[15:26:46] <alguien> *learning to develop them
[15:26:47] <mrig> It is the way that they mirror reality that intrigues me, superb approach for constructing models.
[15:27:05] <GeDaMo> Military simulations?
[15:27:07] <alguien> simulations then?
[15:27:11] <mrig> science or engineering moreso than math.
[15:27:44] <alguien> GeDaMo, why'd you have to go and insert "military" in there, poor GeDaMo ?
[15:27:48] <GeDaMo> :P
[15:28:08] <beaky> factorio but for real life factories
[15:28:11] <mrig> could be military, could be humane. Humane would be the 'higher grade' simulations :D
[15:28:19] <alguien> beaky, vale vale
[15:28:22] <mrig> far more complicated.
[15:28:33] <alguien> also less evil
[15:28:37] <mrig> military would be way to easy!
[15:29:01] <alguien> i'd rather do games than "defense" contracts ew
[15:29:34] <mrig> I'd rather do scientific models.
[15:29:46] <alguien> GeDaMo, no offense. I subscribe to a strict interpretation of a Catholic Just war doctrine
[15:29:55] <GeDaMo> Kerbal Space Program! :P
[15:29:59] <alguien> hehe
[15:30:00] <mrig> heh
[15:30:11] <GeDaMo> I'm no fan of the military either
[15:30:19] <mrig> space, now we are talking :)
[15:30:26] <GeDaMo> But a lot of games aren't far off being military sims anyway
[15:30:39] <mrig> cosmological models, not starwars.
[15:30:53] <pyzozord> Some have history of starting out as miliatry sims. Arma for example
[15:31:15] <mrig> I would imagine that some may get hijacked for military purposes too.
[15:31:44] *** Joins: lalitmee_ (~lalitmee@180.94.32.109)
[15:32:22] <mrig> What is Arma?
[15:32:27] <alguien> GeDaMo, oh so it wasn't you I talked to several years back when I said the day my code is used by the military is the day I stop coding
[15:32:40] <alguien> mrig, an FPS
[15:32:51] <GeDaMo> I don't know although I've heard similar sentiments before
[15:32:56] *** Joins: Tazy (~Tazmainia@102.39.90.151)
[15:33:04] *** Joins: aliosablack (~chomwitt@ppp-94-67-192-178.home.otenet.gr)
[15:33:08] <pyzozord> https://www.youtube.com/watch?v=ZHRWXyIU19A
[15:33:10] <bayaz> Title: Depiction of War in Games: Can You Do Better? 
[15:33:13] <mrig> I think that military organisations all over the world have copies of dwarf fortress that the reverse engineer to understand the tech! :D
[15:33:26] *** Quits: chomwitt (~chomwitt@athedsl-351437.home.otenet.gr) (Ping timeout: 265 seconds)
[15:33:45] <GeDaMo> https://en.wikipedia.org/wiki/Distributed_Interactive_Simulation
[15:33:46] <bayaz> Title: Distributed Interactive Simulation - Wikipedia 
[15:34:02] <alguien> oof
[15:34:02] *** Quits: lalitmee__ (~lalitmee@180.94.33.48) (Ping timeout: 252 seconds)
[15:34:39] <mrig> ah the Pandora's box that is computing.
[15:34:41] <alguien> Well, nice chatting with you guys, peace be with you. Enough procrastination for today. deniska I'll keep on iterating on that cross-platfrom apple killer idea
[15:35:02] <mrig> have a nice rest of the appropriate time segment.
[15:35:17] <alguien> :)
[15:35:21] *** Parts: alguien (~alguien@user/alguien) (Leaving)
[15:35:51] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[15:36:49] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:37:17] *** Joins: Atque (~Atque@user/atque)
[15:38:59] *** Joins: jokoon (~eio@2a01:e0a:542:e160:2db0:a7b3:f992:1d5b)
[15:42:08] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[15:42:37] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[15:42:41] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:43:52] *** Joins: Crescendo (~Crescendo@user/crescendo)
[15:45:10] *** Quits: flynn (~mcbloch@user/flynn) (Ping timeout: 260 seconds)
[15:46:46] *** Joins: peteyboy1 (~peteyboy1@95.169.235.10)
[15:47:26] *** Joins: flynn (~mcbloch@user/flynn)
[15:47:30] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 260 seconds)
[15:47:32] <mrig> military is a necessary evil am not so naive to imagine otherwise, however I do think that problems arise when it becomes the 'raison d'etre' of the intelligencer.
[15:47:46] <mrig> thats just entirely backwards.
[15:48:16] <mrig> wow make has some subtle nuances :|
[15:49:04] <mrig> I think it is separating the implicit defaults from the other choices that makes it rather tricky.
[15:57:50] *** Joins: Akronymus (~Akronymus@85.31.8.180)
[16:00:17] *** Joins: Ecophobia (~Ecophobia@mobile-access-2e840c-136.dhcp.inet.fi)
[16:01:06] *** Quits: fanis30 (~fanis30@adsl-142.37.6.0.tellas.gr) (Quit: WeeChat 3.2)
[16:01:58] *** Quits: Tazy (~Tazmainia@102.39.90.151) (Quit: Leaving)
[16:03:13] *** Quits: aliosablack (~chomwitt@ppp-94-67-192-178.home.otenet.gr) (Ping timeout: 252 seconds)
[16:07:32] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[16:11:45] *** Quits: pandakekok9 (~job@wikimedia-commons/pandakekok9) (Remote host closed the connection)
[16:16:57] *** Curiosity is now known as Guest6100
[16:17:58] *** Joins: pandakekok9 (~job@wikimedia-commons/pandakekok9)
[16:21:20] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) (Ping timeout: 260 seconds)
[16:25:13] *** Quits: hexingb (~hexingb@2409:8902:78c4:4375:cc10:1563:545:260e) (Ping timeout: 252 seconds)
[16:25:28] *** Joins: Hax0r (~Hax0r@51.252.22.22)
[16:28:49] <pyzozord> I need to figure out the how to properly compile with static libraries
[16:28:58] <pyzozord> seems so much better for distribution
[16:30:09] <pulse> it's just a compiler flag
[16:30:25] <pyzozord> can't move my terminal to my work laptop now because it's all dynamic linking with hardcoded path to /home/me/Projects/myproj/sdl2/install/libs/
[16:30:50] <Akronymus> F
[16:30:51] <pyzozord> and me is different on work laptop
[16:30:54] *** Joins: dev0 (~dev0@user/deepspace-link)
[16:31:16] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[16:34:07] *** Joins: Crescendo (~Crescendo@user/crescendo)
[16:38:17] <pikapika> Akronymus, hi uwu
[16:38:43] *** Quits: Hax0r (~Hax0r@51.252.22.22) (Quit: Leaving)
[16:39:09] *** Joins: Cyp_ (~cyp@192038133070.mbb.telenor.dk)
[16:39:37] *** Quits: Cyp_ (~cyp@192038133070.mbb.telenor.dk) (Client Quit)
[16:41:45] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 260 seconds)
[16:42:05] *** Joins: ShockTohp (~kevin@155.138.224.160)
[16:45:07] <DPA> Why do you link the absolute path? Just make it relative & use LD_LIBRARY_PATH.
[16:45:35] *** Joins: hexingb (~hexingb@103.37.140.21)
[16:46:47] <DPA> Or add a library search path with $ORIGIN. 
[16:47:21] *** Joins: akevinhuang (~thekevinh@user/thekevinhuang)
[16:49:40] <pyzozord> that sounds very interesting I need to figure out how to do that
[16:50:01] <DPA> Also look at rpath
[16:51:01] <pyzozord> you mean -rpath flag to autotools?
[16:52:50] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 260 seconds)
[16:55:05] <Akronymus> Do any of you ever read a RFC when implementing something?
[16:55:17] <DPA> Yes
[16:59:21] *** Joins: dunkeln (~dunkeln@94.128.205.199)
[16:59:22] *** Quits: dunkeln (~dunkeln@94.128.205.199) (Changing host)
[16:59:22] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[16:59:26] <Akronymus> Do you like RFC's?
[16:59:45] *** Joins: lalitmee__ (~lalitmee@180.94.33.165)
[17:00:38] <DPA> Most RFCs, yes.
[17:00:57] <Akronymus> My man
[17:02:22] *** Joins: juliaEnv (~juliaEnv@ip-86-49-255-181.net.upcbroadband.cz)
[17:02:22] *** Quits: lalitmee_ (~lalitmee@180.94.32.109) (Ping timeout: 265 seconds)
[17:05:32] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Quit: Leaving)
[17:06:29] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[17:07:33] *** Quits: Ecophobia (~Ecophobia@mobile-access-2e840c-136.dhcp.inet.fi) (Quit: WeeChat 2.8)
[17:08:28] *** Quits: xff0x (~xff0x@2001:1a81:5244:5800:ade4:7c8b:9b3b:6271) (Ping timeout: 256 seconds)
[17:08:57] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Ping timeout: 276 seconds)
[17:09:14] *** Joins: xiongxin8802 (~xiongxin@119.123.100.247)
[17:11:29] *** Joins: Rounin (~david@84.212.130.215)
[17:14:42] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[17:15:20] *** Joins: jamea (~jamea@187.185.190.209)
[17:19:09] *** Joins: xff0x (~xff0x@2001:1a81:5244:5800:ade4:7c8b:9b3b:6271)
[17:20:17] *** Joins: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net)
[17:21:30] *** Joins: humky (~humky@user/humky)
[17:22:44] *** Joins: lalitmee_ (~lalitmee@180.94.33.105)
[17:23:21] *** Quits: dev0 (~dev0@user/deepspace-link) ()
[17:24:44] *** Joins: chomwitt (~chomwitt@2a02:587:dc02:7900:12c3:7bff:fe6d:d374)
[17:25:34] *** Quits: lalitmee__ (~lalitmee@180.94.33.165) (Ping timeout: 265 seconds)
[17:27:24] *** Quits: frost (~frost@59.71.240.119) (Quit: Connection closed)
[17:32:56] *** Quits: Guest6100 (uid511277@user/cypris) (Quit: Connection closed for inactivity)
[17:35:42] <varaindemian> anyone knows the smtp servers/gateways Microsoft is using in their phishing simulation campains?
[17:37:07] *** Joins: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC)
[17:39:16] <pyzozord> RFCs like what for example? Like the python pips? That seems like way too much to read
[17:39:39] <pyzozord> RFCs seem mostly for the developers for the technology not for the users of it
[17:39:57] <Akronymus> Like RFC for IRC.
[17:40:03] <Akronymus> For implementing your own.
[17:40:09] *** Quits: jokoon (~eio@2a01:e0a:542:e160:2db0:a7b3:f992:1d5b) (Quit: Leaving)
[17:40:17] <Akronymus> And/or as a learning resource to see how some tech actually works.
[17:41:09] <pyzozord> Well I do sometimes but very rarely. Most of the time I feel it's a waste of time to read lengthy rationale why called is called "x" instead of "eks"
[17:41:27] <Akronymus> Oh that's fair.
[17:41:45] <Akronymus> I find the why quite important, but I can see where you are coming from.
[17:42:31] <pyzozord> I mean if I am deeply curious about some technology, sure, than I'll read it. But if it's strictly utalitarian stuff for work I probably won't bother
[17:43:12] <Akronymus> I sometimes, altough rarely, have to read a RFC because of me encountering some edge case.
[17:43:26] <Akronymus> Which then turns out, the other side didn't implement it properly.
[17:43:34] <Akronymus> So, its useless after all.
[17:44:20] <oldlaptop> as standards documents go, RFCs are shockingly non-evil
[17:44:30] <oldlaptop> as a general class, anyhow
[17:44:38] <pyzozord> I did read RFCs a bit about irc and a bit about telnet. Mostly out of curiosity
[17:44:47] <Akronymus> Ever had to acquire some ISO spec? oldlaptop
[17:44:55] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 265 seconds)
[17:45:23] <oldlaptop> not really - they do make "drafts" of C standard revisions available gratis
[17:45:49] <Akronymus> Yeah, the drafts usually work well enough.
[17:46:01] <pyzozord> Akronymus: yes, ISO/IEC 9945 :P
[17:46:08] <Akronymus> Altough, some companies demand you to meet the exact iso standard.
[17:46:20] <Akronymus> Which you have to somehow source.
[17:46:26] <oldlaptop> so then they get to pay for it
[17:46:33] <Akronymus> In an ideal world.
[17:46:45] <oldlaptop> one way or another they do! :P
[17:46:48] <Akronymus> Usually it is: We only consider you for this contract if you meat ISO xxxx
[17:46:55] <Akronymus> s/meat/meet
[17:47:05] <pyzozord> meat works too :D
[17:53:04] <Caffeinated> ISO meat
[17:56:18] <pulse> ew, meat
[17:57:51] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[17:58:21] *** Joins: todda7 (~torstein@240.red-81-37-247.dynamicip.rima-tde.net)
[17:59:52] <password> I'm once again asking for your lintters
[18:01:34] <[itchyjunk]> what's lintters?
[18:01:53] <password> -t
[18:01:55] <password> linter
[18:02:05] <pulse> avoid jslint because it's made by spacists
[18:02:53] <password> i need something for LUA/Qt/ph/js in order of priority
[18:02:55] <[itchyjunk]> Idk what linter is either
[18:03:10] <password> it removes fluff from code , [itchyjunk]
[18:03:12] <[itchyjunk]> oh i know what LUA and js is
[18:03:15] <[itchyjunk]> ah
[18:03:20] <password> its like a grammer checker for code
[18:03:27] <[itchyjunk]> i saw something that removes unused package from haskell code
[18:03:34] *** Quits: mmlj4 (~mmlj4@ip68-11-69-185.no.no.cox.net) (Ping timeout: 252 seconds)
[18:03:35] <[itchyjunk]> oh something different
[18:03:39] <Akronymus> Linter is for example enforcing that you only use tabs for identation.
[18:03:44] <Akronymus> Rather than mixing in spaces.
[18:03:49] <[itchyjunk]> ah
[18:03:50] <pulse> [itchyjunk], linter is a sort of static checker for languages that aren't static
[18:03:51] <pulse> if that makes sense
[18:04:01] *** Joins: mmlj4 (~mmlj4@ip68-11-69-185.no.no.cox.net)
[18:04:02] <Akronymus> Or that you can't have unneeded includes.
[18:04:05] <pulse> it makes sure you don't do stupid things
[18:04:07] <[itchyjunk]> no the "static" part i haven't understood well
[18:04:10] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[18:04:27] <pulse> [itchyjunk], you know how a C++ compiler doesn't compile if you skip a single ; ?
[18:04:30] <[itchyjunk]> public static void main(Stringp[] args) { } , the static part is the most unclear
[18:04:39] <password> well stuff that checks for best practises , like you can add checks to ensure you use '===' instead of '==' in php
[18:04:40] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Read error: Connection reset by peer)
[18:04:40] <[itchyjunk]> pulse, yes but in context of java
[18:04:52] <[itchyjunk]> ah
[18:04:54] <Akronymus> Or enforcing specific call conventions.
[18:04:56] <pulse> imagine a language that does compile if you skip ;, or do something really weird like try to add a string to an object
[18:05:00] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[18:05:01] <password> like you code could be working but there can be lots of fluff in it
[18:05:04] <Akronymus> https://en.wikipedia.org/wiki/Lint_(software)
[18:05:05] <bayaz> Title: Lint (software) - Wikipedia 
[18:05:09] <[itchyjunk]> so it's asthetics? since compiler wouldn't care later anyways right?
[18:05:09] <pulse> a linter is a tool that helps you find issues like that before they become problematic
[18:05:12] <pulse> it's a code quality tool
[18:05:15] <Akronymus> Naming of variables/fields 
[18:05:16] <[itchyjunk]> oh i see, like removing lints on clothes
[18:05:22] <Akronymus> A linter can do many things.
[18:05:33] <password> yeah its makes your code cleaner
[18:05:42] <password> its a loos term
[18:05:45] <pulse> [itchyjunk], no, it's not just aesthetics. it's code quality in the best case and avoiding bugs in the worst case
[18:05:50] *** Quits: cth (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[18:06:03] *** Quits: humky (~humky@user/humky) (Quit: Leaving)
[18:06:16] <Akronymus> A linter also can enforce things the language itself doesn't.
[18:06:56] <[itchyjunk]> my professor is a linter
[18:07:03] <[itchyjunk]> he makes us use specific variable names
[18:07:18] <Akronymus> At least they are well named, right?
[18:07:25] <[itchyjunk]> yes
[18:07:26] <password> yeah , thats extactly why i want one here
[18:07:39] <password> because we have a rule that says all variables must start with caps
[18:07:50] <password> then i forget and boss throws a fit
[18:08:00] <password> even though my code is probably the most robust here
[18:09:08] <Akronymus> Huh, I think I just had an epiphany.
[18:09:24] <password> hmmm?
[18:12:40] <password> I'm really tempted to suggest sublime linter though one of the devs dont' use sublime
[18:13:09] <Akronymus> `(define fold (lambda (state funct seq) (cond ((null? seq) state) (t (fold (funct state (car seq)) funct (cdr seq))))))`
[18:13:18] <Akronymus> fold is EASY.
[18:13:29] <Akronymus> At least as a naive implementation.
[18:13:46] *** Joins: lalitmee__ (~lalitmee@180.94.33.123)
[18:14:10] * password stops processing when he hits a lambda
[18:14:42] <Akronymus> And a sum is then only `(define sum (lambda (seq) (fold 0 + seq)))`
[18:15:00] <Akronymus> Altough, probably better to switch function and state.
[18:15:03] <password> theres a good screenshot of a linter : http://www.sublimelinter.com/en/stable/
[18:15:04] <bayaz> Title: Welcome to SublimeLinter ‚Äî SublimeLinter 4.0.0 documentation 
[18:15:17] <Akronymus> password lambdas are pretty easy IMO.
[18:15:34] <password> tws
[18:15:40] <Akronymus> Altough, I guess if you don't grok them they can seem insurmountable.
[18:15:58] <password> i never bothers
[18:16:06] <Akronymus> lambda just takes 2 lists.
[18:16:17] *** Quits: lalitmee_ (~lalitmee@180.94.33.105) (Ping timeout: 252 seconds)
[18:16:19] <Akronymus> 1st defines the input variables.
[18:16:26] <Akronymus> The 2nd one defines what it does.
[18:16:49] *** Quits: xiongxin8802 (~xiongxin@119.123.100.247) (Ping timeout: 265 seconds)
[18:18:34] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[18:19:34] *** Joins: tddschn (~textual@45.77.71.205)
[18:24:25] *** Quits: chomwitt (~chomwitt@2a02:587:dc02:7900:12c3:7bff:fe6d:d374) (Ping timeout: 260 seconds)
[18:25:25] *** Quits: electr0n (~electr0n@about/security/founder/electr0n) (Remote host closed the connection)
[18:27:10] <varaindemian> anyone knows the smtp servers/gateways Microsoft is using in their phishing simulation campains?
[18:27:16] *** Quits: gargus (~user@14-201-60-238.static.tpgi.com.au) (Quit: Leaving)
[18:27:29] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:27:42] *** Joins: damxsa (~damx@2001:16a2:ce7c:3300:3aeb:69cb:3de4:fb7b)
[18:29:13] *** Quits: damxsa (~damx@2001:16a2:ce7c:3300:3aeb:69cb:3de4:fb7b) (Client Quit)
[18:29:18] *** Joins: electr0n (~electr0n@about/security/founder/electr0n)
[18:32:20] *** Joins: chomwitt (~chomwitt@2a02:587:dc02:7900:12c3:7bff:fe6d:d374)
[18:35:09] *** Joins: biberu\ (~biberu@user/biberu)
[18:35:39] <pyzozord> DPA: would you mind giving me a pointer what more specifically to look up about rpath?
[18:36:40] *** Quits: digilink (~digilink@user/digilink) (Ping timeout: 240 seconds)
[18:36:59] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[18:37:44] *** Quits: todda7 (~torstein@240.red-81-37-247.dynamicip.rima-tde.net) (Ping timeout: 252 seconds)
[18:38:10] *** Quits: biberu (~biberu@user/biberu) (Ping timeout: 252 seconds)
[18:38:10] *** biberu\ is now known as biberu
[18:38:50] *** Joins: digilink (~digilink@user/digilink)
[18:39:04] <Akronymus> Trying to look up something related to lambda functions:
[18:39:21] <Akronymus> Results: AWS, AWS,AWS,AWS,AWS,something mildly related, AWS
[18:39:30] *** Joins: xiongxin8802 (~xiongxin@113.116.34.210)
[18:39:45] <Akronymus> And now rona
[18:41:25] <biberu> Akronymus: why can't they just generate a guid for their project name, it'd be so much easier to google both that and lambda functions
[18:41:59] <Akronymus> I REALLY dislike that amazon took lambda as their products name.
[18:43:52] *** Quits: user51 (~user51@176.228.90.248) (Ping timeout: 265 seconds)
[18:43:57] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[18:45:36] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[18:45:58] <GeDaMo> I wonder if anyone's used an IPv6 address as a product name? Then, if you know what it's called, you also know how to connect to it :P
[18:46:34] *** Quits: dsrt^ (~dsrt@68.101.54.227) (Remote host closed the connection)
[18:47:49] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[18:49:30] *** Quits: xiongxin8802 (~xiongxin@113.116.34.210) (Ping timeout: 260 seconds)
[18:55:32] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:592f:1d19:f5a3:fe53)
[18:56:18] <varaindemian> anybody?
[18:56:20] *** Quits: Rayke (rayke@user/rayke) (Quit: WeeChat 3.2)
[18:59:09] *** Joins: vicfred (~vicfred@user/vicfred)
[18:59:11] *** Quits: vicfred (~vicfred@user/vicfred) (Client Quit)
[18:59:52] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[18:59:59] <GeDaMo> varaindemian: why do you believe that MS are conducting phishing simulations?
[19:00:03] *** Joins: Lyn (~Lyn@user/law)
[19:00:54] <varaindemian> GeDaMo: https://docs.microsoft.com/en-us/microsoft-365/security/office-365-security/attack-simulation-training-faq?view=o365-worldwide
[19:00:55] <bayaz> Title: Attack simulation training deployment considerations and FAQ - Office 365 
[19:01:12] <varaindemian> GeDaMo: to help organizations? :D
[19:02:04] <GeDaMo> Right, so you think your organization is using this?
[19:02:52] <GeDaMo> There's a link from that page giving a list of URLs
[19:02:53] *** Quits: Spookbooty (~spookboot@c-71-196-201-34.hsd1.co.comcast.net) (Remote host closed the connection)
[19:03:56] *** Joins: Rayke (rayke@user/rayke)
[19:04:37] <varaindemian> GeDaMo: No, I am interested in the SMTP servers/gateways they use when impersonating Dropbox let's say
[19:04:55] *** Joins: RickDeckard (~RickDecka@pool-100-12-189-215.nycmny.fios.verizon.net)
[19:07:56] *** Joins: independent56 (~independe@95.144.68.39)
[19:09:14] *** Quits: Akronymus (~Akronymus@85.31.8.180) (Quit: Client closed)
[19:09:58] <DPA> pyzozord: Here is a minimal example: https://bpa.st/JLUQ
[19:09:59] <bayaz> Title: View paste JLUQ 
[19:13:40] *** Joins: dan01 (~dan01@2a02:2f09:321a:b600:39e3:b050:3810:7919)
[19:15:19] <DPA> Output should look like this: https://bpa.st/JMJQ
[19:15:19] <DPA> As can be seen, it finds the lib even after it and the lib are moved somewhere else, because -Wl,-rpath,'$ORIGIN/lib/' makes it search relative to itself in the folder lib.
[19:15:20] <bayaz> Title: View paste JMJQ 
[19:15:20] *** Joins: node1 (~node1@user/node1)
[19:16:14] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:18:28] <DPA> So to summarize, all this takes to work is: 1) proper rpath added to LDFLAGS  2) linked without absolute path
[19:20:52] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[19:21:00] *** Quits: chomwitt (~chomwitt@2a02:587:dc02:7900:12c3:7bff:fe6d:d374) (Ping timeout: 260 seconds)
[19:22:41] <mrig> I wasn't sure about the way that delve displays data, but now that I'm back in gdb, I actually prefer the delve way.
[19:23:10] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (Remote host closed the connection)
[19:25:14] *** Joins: lalitmee_ (~lalitmee@180.94.32.1)
[19:25:32] <mrig> is there a way to make a breakpoint from withing gdb when it is in the 'continuing' state? The program that it is attached to is still running?
[19:26:11] *** Joins: audgirka (~audgirka@2402:e280:3e16:e48:d5ba:7034:2ac9:4275)
[19:26:12] <mrig> break where you are sort of thing?
[19:26:26] *** Joins: compscipunk (~compscipu@107-214-234-232.lightspeed.sndgca.sbcglobal.net)
[19:26:32] *** Quits: audgirka (~audgirka@2402:e280:3e16:e48:d5ba:7034:2ac9:4275) (Remote host closed the connection)
[19:26:37] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:71b7:bdff:34f7:41d7) (Read error: Connection reset by peer)
[19:27:34] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[19:27:44] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:d4b6:3f93:f669:5584)
[19:27:51] *** Quits: lalitmee__ (~lalitmee@180.94.33.123) (Ping timeout: 265 seconds)
[19:28:03] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Ping timeout: 276 seconds)
[19:28:14] *** Joins: lalitmee (~lalitmee@180.94.32.26)
[19:29:25] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Quit: Leaving)
[19:30:16] *** Quits: lalitmee_ (~lalitmee@180.94.32.1) (Ping timeout: 265 seconds)
[19:30:18] *** Joins: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com)
[19:31:06] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[19:39:40] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 260 seconds)
[19:41:24] *** Quits: hexingb (~hexingb@103.37.140.21) (Read error: Connection reset by peer)
[19:41:35] *** Joins: lalitmee_ (~lalitmee@180.94.33.208)
[19:42:38] *** Quits: lalitmee (~lalitmee@180.94.32.26) (Ping timeout: 252 seconds)
[19:42:42] *** Joins: hexingb (~hexingb@101.236.65.144)
[19:45:29] *** Joins: Hax0r (~Hax0r@128.127.222.236)
[19:46:31] *** Quits: mmlj4 (~mmlj4@ip68-11-69-185.no.no.cox.net) (Ping timeout: 252 seconds)
[19:47:02] *** Quits: hexingb (~hexingb@101.236.65.144) (Ping timeout: 252 seconds)
[19:47:26] *** Joins: hexingb (~hexingb@2409:8902:78c4:4375:9823:42cf:d67:88e6)
[19:47:27] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:47:49] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.2)
[19:47:50] *** Joins: node1 (~node1@user/node1)
[19:48:07] *** Joins: vysn (~vysn@user/vysn)
[19:48:34] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[19:50:07] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[19:50:55] *** Quits: vysn (~vysn@user/vysn) (Client Quit)
[19:51:12] *** Joins: vysn (~vysn@user/vysn)
[19:54:37] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:55:07] *** Quits: vysn (~vysn@user/vysn) (Client Quit)
[19:55:24] *** Joins: vysn (~vysn@user/vysn)
[19:56:20] *** Quits: vysn (~vysn@user/vysn) (Client Quit)
[19:56:37] *** Joins: vysn (~vysn@user/vysn)
[19:59:16] <DPA> Isn't that just Ctrl-C?
[19:59:36] *** Joins: mmlj4 (~mmlj4@ip68-11-69-185.no.no.cox.net)
[20:00:11] *** Joins: magla (~gelignite@55d44c2f.access.ecotel.net)
[20:00:48] *** jinsun is now known as Guest656
[20:00:48] *** jinsun__ is now known as jinsun
[20:03:03] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[20:03:16] <mrig> that shuts the process down though, looking to interrupt by making a break point.
[20:04:00] <mrig> If the program that is being debugged were not awaiting user input, then the whole things would finish, I was wondering if there was anything for this case.
[20:04:06] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[20:04:40] <pyzozord> DPA: much appriciated
[20:04:41] *** Joins: chomwitt (~chomwitt@ppp-94-67-192-178.home.otenet.gr)
[20:05:58] <pyzozord> Actually full day of work. Those are rare now... And spent whole day debugging issue other people avoided for weeks
[20:06:18] <pyzozord> I like debugging, I actually think it's much easier than developing new things
[20:06:38] <pyzozord> When developing new things it's much easier to screw up
[20:06:44] <mrig> pyzozord: forget other people, next you can start cleaning up the code :P
[20:07:01] <mrig> Both are cool though :)
[20:07:28] <pyzozord> Yeah. I think I like creating things for personal projects, but for paid work I like debugging more
[20:07:48] <mrig> I'm standing back at the moment and scraping my hooves on the floor getting ready to charge.
[20:07:59] *** Joins: CodeSpelunker (~CodeSpelu@user/codespelunker)
[20:08:14] <mrig> Love it when you are really locked into making something, such a great phase of work that.
[20:09:42] <vysn> pyzozord: https://ibb.co/2c85KK5
[20:09:43] <bayaz> Title: debugg-2312 
[20:10:00] *** Joins: nitro_ (~nitro@c-73-165-183-88.hsd1.pa.comcast.net)
[20:12:04] *** Quits: CodeSpelunker (~CodeSpelu@user/codespelunker) (Client Quit)
[20:12:19] *** Quits: nitro (~nitro@c-73-165-183-88.hsd1.pa.comcast.net) (Ping timeout: 265 seconds)
[20:12:54] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[20:13:17] *** Joins: independent56 (~independe@95.144.68.39)
[20:13:39] <pyzozord> vysn: sorry i don't know this website
[20:14:52] <GeDaMo> ibb is an image sharing site like imgur
[20:15:18] <pyzozord> oh so it's safe?
[20:16:02] <GeDaMo> In as far as any site is safe
[20:16:59] *** Quits: pandakekok9 (~job@wikimedia-commons/pandakekok9) (Remote host closed the connection)
[20:18:12] <pyzozord> vysn: haha :D
[20:19:01] <oldlaptop> any image-sharing site (or, indeed, any website with images at all) could easily be a vector for maliciously-crafted images designed to exploit bugs in image rendering libraries
[20:19:38] <pyzozord> that's true
[20:20:03] <oldlaptop> maybe that's less important now than the bad old days when there were libpng zero-days every five minutes; still, maybe worth thinking about disabling images under some circumstances
[20:20:36] <pyzozord> I have scripts images and fonts disabled by default
[20:21:24] <oldlaptop> Fonts are the really nasty thing.
[20:21:59] <oldlaptop> Did Microsoft finally take windows' font parser out of kernel space?
[20:22:25] <pyzozord> oh wow, that doesn't sound good
[20:22:56] <oldlaptop> Indeed, it's barely better than having IE send javascript to the kernel for execution
[20:23:04] <jinsun> go full RMS mode and write a program that downloads and emails you the website and view in emacs
[20:23:46] <pyzozord> oh wow what? Did IE really do that?
[20:23:55] *** Quits: jamea (~jamea@187.185.190.209) (Ping timeout: 265 seconds)
[20:24:04] <pyzozord> I knew IE was terrible, but I didn't know it was this bad
[20:24:38] <oldlaptop> No, it didn't
[20:24:41] <oldlaptop> (so far as I know)
[20:24:56] <pyzozord> oh ok
[20:24:59] <oldlaptop> but it and everything else sends/sent TrueType fonts to the kernel for rendering, which is almost as bad
[20:25:14] <oldlaptop> ISTR they did finally change that, but I don't remember for certain
[20:26:00] <oldlaptop> (I don't recall offhand if TrueType hints are technically Turing-complete/LBA-complete, but they're DEFINITELY complicated enough that it's a good guess the parser's bugs are)
[20:26:05] <pyzozord> does truetype has some kind of embedded scripting language in it?
[20:26:17] <oldlaptop> Yes, for defining rendering "hints"
[20:27:12] <vysn> oldlaptop: how do you suggest we browse the web more securely?
[20:27:18] *** Quits: jinsun (~quassel@user/jinsun) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[20:27:23] <oldlaptop> each glyph basically includes (or can include, AIUI this is becoming less and less common as resolutions increase) little programs to optimize fitting them to the pixel grid, which was supremely important in the mid-late '90s
[20:27:53] <oldlaptop> vysn: Something like NoScript goes a long way.
[20:28:13] <oldlaptop> Banning downloadable fonts is also a very good idea, and... *somewhat* less disruptive.
[20:28:53] <oldlaptop> The main problem (besides webpages not getting exactly the font the designer hoped for for actual text) is icon fonts, which are also disfavored for accessibility reasons and therefore less common than they used to be
[20:29:08] <oldlaptop> github purged its icon fonts in favor of svg, for example
[20:29:15] *** Quits: Guest656 (~quassel@user/jinsun) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[20:29:19] *** Joins: jinsun (~quassel@user/jinsun)
[20:29:19] *** Quits: jinsun (~quassel@user/jinsun) (Client Quit)
[20:29:41] <oldlaptop> from the somewhat more bad old days when they *were* still quite common: https://flak.tedunangst.com/post/i-hate-icon-fonts
[20:29:42] <bayaz> Title: i hate icon fonts 
[20:29:45] *** Joins: jinsun (~quassel@user/jinsun)
[20:30:13] *** Quits: tddschn (~textual@45.77.71.205) (Ping timeout: 265 seconds)
[20:31:49] <oldlaptop> as for webpages not getting exactly the fonts they want, I care so little about that I tell firefox to ignore any font specification other than the "standard" ones - and tell it sans-serif is a serif font - just because I hate all non-monospace sans serif fonts.
[20:32:21] *** Joins: Andalu30 (~andalu30@85.137.21.37.dyn.user.ono.com)
[20:32:25] <pyzozord> how does font hinting works really? If a font is described in vectors, is there anything else needed?
[20:32:39] <mrig> Oh is this essentially and issue of sending user defined code into the kernel of an OS?
[20:32:42] *** Quits: mobidrop (~mobidrop@user/mobidrop) (Remote host closed the connection)
[20:32:48] <oldlaptop> Yes, if it's the late 1990s and you're trying to render that vector at 10x8 pixels or something
[20:33:51] <pyzozord> what would be an example of a simplest hint?
[20:35:19] <oldlaptop> the old microsoft core fonts from that period were the subject of obsessive efforts to make them look good on low-resolution displays without antialiasing, and a big part of that was writing these nasty little programs to help fit each glyph to the pixel grid
[20:35:34] <oldlaptop> https://fontforge.org/docs/ui/dialogs/ttfinstrs.html has some examples
[20:35:34] <bayaz> Title: Viewing and Editing truetype instructions in FontForge. ‚Äî FontForge 20201107 documentation 
[20:35:51] <oldlaptop> of course the links out to developer.apple.com are utterly broken
[20:35:57] *** Quits: absc (~absc@dynamic-adsl-94-34-168-109.clienti.tiscali.it) (Quit: Leaving.)
[20:36:09] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[20:36:51] *** Joins: aliosablack (~chomwitt@2a02:587:dc02:7900:12c3:7bff:fe6d:d374)
[20:37:51] <oldlaptop> Nowadays on "hi-DPI" displays your objections are perfectly valid, and it's getting to the point (e.g. on apple's current stuff) where things like hinting and AA aren't very important
[20:37:54] *** Quits: chomwitt (~chomwitt@ppp-94-67-192-178.home.otenet.gr) (Read error: Connection reset by peer)
[20:38:11] <oldlaptop> at least subpixel AA is rapidly declining in importance - apple certainly doesn't bother with it
[20:38:29] <Lyn> should I be using .svg or .png files in an app? e.g. the icons, maybe other/all graphics too
[20:38:47] <pyzozord> so this looks like a stack machine for manipulating points
[20:39:11] <oldlaptop> Lyn: That depends on what's going to be in the files.
[20:39:46] <oldlaptop> A decent rule of thumb is probably to use SVG (or other forms of vector graphics wherever possible - on the understanding that it's frequently not possible
[20:39:53] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[20:39:54] <oldlaptop> *graphics)
[20:40:30] <oldlaptop> sometimes you need to address pixels, and sometimes you do not
[20:43:23] <vysn> I take it this applies to fonts people download and install in their machines?
[20:44:33] <oldlaptop> vysn: Yes, but it's a security concern because fonts aren't just downloaded and installed manually; CSS has for some time provided webpages with the ability to specify a custom font for the browser to go out and download
[20:44:59] <oldlaptop> in the same sort of way it just downloads images and shows them to you, it just goes out and downloads the font and uses it to render some text
[20:46:01] <oldlaptop> Because fonts are complicated things (which in the case of TrueType can include bona fide *programs*), font parsers can have security bugs, and so it's not necessarily a great thing to download and parse fonts whenever some webpage tells you to
[20:46:20] *** Joins: user51 (~user51@176.228.90.248)
[20:46:39] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:46:41] <vysn> would you recommend any set of tools to test a system's security and see if it has been compromised?
[20:47:12] <oldlaptop> that's not really possible in general
[20:47:29] <dodo> vysn: if you have that suspicion burn the machine
[20:47:41] <oldlaptop> Windows "antivirus" programs are an attempt to do that kind of thing, or at least that's one of the things they try to do.
[20:47:43] *** Joins: dunkeln (~dunkeln@94.128.205.199)
[20:47:43] *** Quits: dunkeln (~dunkeln@94.128.205.199) (Changing host)
[20:47:43] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[20:48:57] *** Quits: Andalu30 (~andalu30@85.137.21.37.dyn.user.ono.com) (Read error: Connection reset by peer)
[20:49:25] <oldlaptop> One of the many problems with their strategy is that one possibility for things that have "compromised" the system is to change the operating system itself, such that (among other nefarious things) it lies and says that (to take one real-world example) any directory with a name matching a certain pattern doesn't actually exist: https://en.wikipedia.org/wiki/Sony_BMG_copy_protection_rootkit_scandal
[20:49:25] <bayaz> Title: Sony BMG copy protection rootkit scandal - Wikipedia 
[20:50:10] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[20:51:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[20:52:04] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[20:52:25] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:52:28] <mrig> that was around the time that I last paid for an AAA game, and was not able to play it.
[20:52:42] <mrig> crazy world.
[20:56:05] *** Joins: pulse (~pulse@user/pulse)
[20:56:06] <mrig> Lyn: some things to consider when gauging whether to use svg (vector) or png (raster) is the number of vertices in the png compared to the number of pixels in the raster images; Then take into account the bandwidth if transmitting the image anywhere and the processing required to generate it if it is vector and also the resolution that is required.
[20:56:23] <mrig> sorry the vertices in the svg.
[20:57:45] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[20:58:33] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:58:35] *** Joins: gitgooood (~gitgood@host-78-145-137-41.as13285.net)
[21:01:00] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[21:01:17] *** Quits: inky (~inky_@46.36.119.19) (Ping timeout: 252 seconds)
[21:03:29] *** Quits: kodah (~kodah@user/kodah) (Ping timeout: 252 seconds)
[21:03:49] <mrig> That would be an interesting thing to gather some stats on, would be quite simple to do I think.
[21:04:15] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[21:04:41] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:04:58] <mrig> would make for a 'practical' example of CS at work.
[21:05:47] <mrig> ... and a useful one for us mere mortals :)
[21:06:41] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Remote host closed the connection)
[21:07:33] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[21:07:59] <GeDaMo> https://rogerjohansson.blog/2008/12/07/genetic-programming-evolution-of-mona-lisa/
[21:08:00] <bayaz> Title: Genetic Programming: Evolution of Mona Lisa 
[21:08:07] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[21:08:44] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[21:08:48] *** Joins: jab416171 (~jab416171@c-174-52-53-66.hsd1.ut.comcast.net)
[21:08:52] *** Quits: mmlj4 (~mmlj4@ip68-11-69-185.no.no.cox.net) (Ping timeout: 265 seconds)
[21:09:53] *** Joins: mmlj4 (~mmlj4@ip68-11-69-185.no.no.cox.net)
[21:10:05] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[21:10:13] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[21:10:21] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:11:50] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[21:12:09] *** Joins: snake (~snake@user/snake)
[21:12:17] *** Joins: Izem (~Izem@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca)
[21:12:47] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[21:13:25] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 252 seconds)
[21:15:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[21:16:04] *** Quits: inky_ (~inky@46.36.119.19) (Ping timeout: 250 seconds)
[21:16:25] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:16:43] *** Joins: inky (~inky_@178.78.141.169)
[21:16:47] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[21:17:02] <mrig> Is accessing global static variables on the stack with pointers undefined defined behaviour in C?
[21:17:14] *** Quits: lalitmee_ (~lalitmee@180.94.33.208) (Ping timeout: 252 seconds)
[21:17:41] <GeDaMo> global static variables aren't on the stack
[21:17:45] <mrig> ah
[21:17:49] *** Joins: inky_ (~inky@178.78.141.169)
[21:18:30] <mrig> I am aware that there is a place above or aside from the stack for static var inside of functions am quite keen to really understand the differences here.
[21:18:52] <Izem> Is that .bss?
[21:18:55] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2.1)
[21:19:04] <mrig> Are they in someway like literal strings and untouchable?
[21:19:58] <GeDaMo> static variables in functions would likely be in the same space as global variables
[21:20:13] <GeDaMo> But the name would only be visible inside the function
[21:20:22] <mrig> right yes, are they save to write to with pointers or is this a no no?
[21:20:28] <mrig> safe rather.
[21:21:14] <mrig> I would not normally want to do this but am reviewing some really old code and don't want to change it too much unless it really is UB.
[21:21:44] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[21:21:55] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[21:22:27] <mrig> I mean would not write this way, but am curious to understand, I think this is causing some UB in gdb, but am not sure that it is the source.
[21:22:29] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:22:35] <GeDaMo> https://th.bing.com/th/id/OIP.m4AwtroYqfzvlf2U-xFQgwAAAA?pid=ImgDet&rs=1
[21:22:36] <bayaz> Type: image/jpeg Size: 24.4 kB 
[21:22:44] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[21:22:52] <GeDaMo> Huh, that has 'heap' and 'stack' the wrong way around :P
[21:22:55] *** Quits: gitgooood (~gitgood@host-78-145-137-41.as13285.net) (Ping timeout: 260 seconds)
[21:23:19] *** Quits: mmlj4 (~mmlj4@ip68-11-69-185.no.no.cox.net) (Ping timeout: 252 seconds)
[21:23:43] <mrig> oh that's a cool graphic, right yes so they are on opposite sides of the free space.
[21:23:47] *** Joins: gtr (~gtr@fsfe/gtr)
[21:23:51] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 265 seconds)
[21:23:52] *** Joins: mmlj4 (~mmlj4@ip68-11-69-185.no.no.cox.net)
[21:24:23] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[21:24:27] <user51> 'dyanmic variables'
[21:24:28] <user51> haha
[21:24:40] <gtr> Hi freaks :) Please recommend me an open source IDE for Linux which has support for (at least) Go and C++
[21:24:44] <mrig> pretty sure that it is a bad idea to have pointers into the heart of the global data :D
[21:24:53] <GeDaMo> No, it should be OK
[21:24:57] <mrig> oh
[21:25:06] <GeDaMo> If it's static, it's not moving
[21:25:24] <mrig> ah right so this must be coming from elsewhere.
[21:25:41] <mrig> well the pointer might be moving :D
[21:25:46] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi) (Read error: Connection reset by peer)
[21:25:49] <pyzozord> gtr: Eclipse?
[21:25:57] <mrig> which was more the thought that could cause some concerns.
[21:26:40] <pyzozord> gtr: also heard about NetBeans
[21:26:55] <pyzozord> although not sure if it supports c++
[21:27:08] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[21:27:41] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[21:28:05] <gtr> pyzozord, Eclipse does not have Golang support AFAIK (plugin is unmaintained)
[21:28:43] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:29:20] <gtr> Neither has Netbeans
[21:29:22] *** Quits: user51 (~user51@176.228.90.248) (Ping timeout: 252 seconds)
[21:29:30] <pyzozord> gtr: everything seems to be convering to vscode nowadays. That's not exactly an ide but it has a big amount of community plugins so I guess it could be made into an ide
[21:29:55] <pyzozord> otherwise intelij stuff but that's not really open source
[21:30:25] <mrig> vim is still good for both.
[21:30:44] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[21:30:58] <mrig> emacs too.
[21:31:06] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 265 seconds)
[21:32:01] <pyzozord> damn i got a headache, i hate those
[21:32:23] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[21:33:42] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[21:34:00] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[21:34:17] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:34:33] <mrig> too much screen time perhaps?
[21:34:39] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[21:34:49] <GeDaMo> Or not enough :P
[21:34:55] <mrig> heh, yes there is that.
[21:34:59] <Izem> gtr: gnome has created an ide for it's own projects, it may be worth a look
[21:35:35] <Izem> It is called gnome builder, it fully supports c, c++, and rust ootb
[21:35:57] <gtr> pyzozord, make sure to drink enough water :)
[21:36:14] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[21:36:25] <gtr> Izem, then it does not support Go :/
[21:36:58] <pulse> maybe it supports Went
[21:36:59] <Izem> it uses a language server like vscode, so it might
[21:37:01] <pulse> wink, wink
[21:37:41] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[21:37:45] <pulse> pyzozord, best cure is to lie down for a nap i find
[21:37:58] <Izem> I'm sure it could use the same language server made by the go team
[21:38:37] <vysn> If you don't want the headache of setting up your own Emacs config  you can always try one of the opinionated distros that make ready out of the box
[21:38:43] <Izem> gtr: random question, would you pay for an ide?
[21:39:19] <gtr> Izem, only if it is open source
[21:39:33] <Izem> what if it is partially open source?
[21:39:45] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[21:39:45] *** Joins: node1_ (~node1@157.35.14.178)
[21:39:48] *** Quits: GreenAlpaca (~GreenAlpa@user/greenalpaca) (Read error: Connection reset by peer)
[21:39:50] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[21:39:55] <gtr> Hmmm. What do you have in mind?
[21:40:07] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[21:40:08] *** Quits: node1_ (~node1@157.35.14.178) (Remote host closed the connection)
[21:40:20] <Izem> front end that is partially proprietary, everything else is open source
[21:40:22] *** Quits: mickey (~user@user/mickey) (Remote host closed the connection)
[21:40:34] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:40:39] *** Joins: mickey (~user@user/mickey)
[21:40:46] <gtr> Tell me the name please :D
[21:40:46] <vysn> like Doom Emacs. its user friendly and uses evil-mode (vim layer for Emacs)
[21:40:47] *** Quits: node1 (~node1@user/node1) (Ping timeout: 265 seconds)
[21:40:48] <Izem> front end == user facing ui
[21:41:22] <Izem> I have no names, I'm just trying to be entrepreneurial 
[21:41:48] <vysn> spacemacs is aonther widely used Emacs distro
[21:42:19] *** Joins: sympt (~textual@c-71-197-185-120.hsd1.wa.comcast.net)
[21:43:39] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[21:44:32] <Izem> As I understand it, people seem to only pay for proprietary apps. In this fashion most of the usefulness is open to the public, and what computer users seem to call an app would just be the front end. That simplifies installation and payment I think
[21:45:12] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[21:45:45] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[21:46:08] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[21:47:13] *** Quits: sympt (~textual@c-71-197-185-120.hsd1.wa.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[21:47:22] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[21:47:32] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 265 seconds)
[21:47:39] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[21:47:50] *** Joins: APic (apic@apic.name)
[21:48:00] <Izem> What I'm not sure about is using the platform method for payment or creating web page to handle payments
[21:48:59] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[21:49:04] *** jarthur_ is now known as jarthur
[21:49:12] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[21:49:43] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[21:50:56] *** Joins: jamea (~jamea@200.68.140.29)
[21:51:08] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[21:52:15] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[21:52:53] <gtr> Regarding Emacs, I prefer graphical applications but thanks for the suggestion
[21:53:12] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[21:53:19] <dodo> but... emacs has a gui
[21:53:26] <mrig> emacs is a pretty advanced gui :)
[21:53:40] <mrig> it is not mouse oriented though :)
[21:53:58] <Izem> it supports the mouse
[21:54:09] <gtr> Yes exactly I am mouse oriented. ;) I have a very nice and smooth mouse and I want to use it a lot
[21:54:26] * mrig chuckles at the though of the mouse oriented paradigm.
[21:54:45] <mrig> gtr: I'm and elephant that is afraid of mice!
[21:54:45] <gtr> Izem, I would never pay for proprietary applications tbh. Not even the source code is available. Very bad deal IMO
[21:55:14] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[21:55:29] <mrig> is the gnome IDE a parallel to the Qt IDE?
[21:55:38] *** Quits: anon__ (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Remote host closed the connection)
[21:55:41] <Izem> no, it's totally different
[21:56:09] <Izem> Qt ide just has some c++ support, gnome ide has a language server + goodies
[21:56:21] <mrig> Ah, I was wondering if it was a similar integration except with GTK
[21:56:32] <Izem> and meson by default instead of cmake
[21:56:40] <mrig> ah right.
[21:56:51] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[21:56:59] <Izem> it
[21:57:03] <Izem> s pretty good
[21:57:03] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[21:57:11] <mrig> I'm still pretty ignorant of all these things, interesting to hear about it.
[21:57:48] <mrig> But being a big vim fan, it is hard to detach me from my keyboard, and then there is my innate fear of mice too :)
[21:58:10] <Izem> modal editing is for the birds :P
[21:58:46] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[21:59:27] <Izem> still, vim is such an advanced concept, since the editor is based on transformations of text
[21:59:50] <mrig> Yes, that is the fascinating thing about it.
[21:59:50] <Izem> not sure what that would look like in a traditional gui system
[22:00:09] <mrig> I think a more graphical interface would be possible.
[22:00:22] <mrig> Could make for an interesting library too.
[22:00:24] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[22:00:26] *** Joins: lunarkitty (uid501895@user/pyra)
[22:01:06] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:01:19] <mrig> It's simply closer to the heart of programming than a graphical access.
[22:01:27] <mrig> To my mind anynow.
[22:01:46] <Izem> I'm imagining something like paint but with words instead of images
[22:01:46] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[22:02:04] <Izem> I think you would have to create a language transformation language prior to this
[22:02:04] <mrig> the wrong thing go into muscle memory when you use a mouse.
[22:02:25] <Izem> no need of muscle memory
[22:02:36] <mrig> and I'm pretty sure that you don't use the same part of the brain either.
[22:02:42] <Izem> no need to even remember at all, that is the point of these systems
[22:02:44] <mrig> to access stored data.
[22:03:05] <mrig> thats why the resulting code is so messy and none understand it.
[22:03:30] <Izem> what topic are we on? I lost track
[22:03:36] <mrig> best avoid pointers in that case :P
[22:03:40] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[22:04:00] <mrig> Izem: chocolate bars with hazelnuts in every byte.
[22:04:10] <Izem> s/language transformation language/text transformation language/
[22:04:39] *** Joins: DeepComa (~PhoenixCo@user/alien-fx-fiend/x-2328408)
[22:05:35] <mrig> well those really are fancy ways of stating that you are looking for regular languages withing the set that is all of the text within your document so as to be able to act upon it, surely?
[22:05:50] <mrig> regexp
[22:06:19] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[22:06:41] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[22:06:46] *** Quits: xff0x (~xff0x@2001:1a81:5244:5800:ade4:7c8b:9b3b:6271) (Ping timeout: 252 seconds)
[22:07:44] *** Joins: xff0x (~xff0x@2001:1a81:5244:5800:bebc:1a37:2a8f:4a9c)
[22:07:50] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[22:08:10] *** Quits: DeepComa (~PhoenixCo@user/alien-fx-fiend/x-2328408) (Client Quit)
[22:08:41] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[22:08:47] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:f1cc:d5ea:e86d:e5c1)
[22:09:37] *** Joins: gitgooood (~gitgood@host-78-145-137-41.as13285.net)
[22:12:54] *** Joins: webNET4 (~0x100@32.211.211.39)
[22:14:12] <gtr> I want to program like program like Tom Cruise navigates his computer in Minority Report, using a fancy HUD and gestures ;)
[22:14:36] <mrig> well I should take a look at the gnome IDE anyhow just to see what it is like.
[22:14:36] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 265 seconds)
[22:14:49] <mrig> gtr: I think that will give you arm ache :|
[22:15:28] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[22:15:32] <mrig> gtr: procrastination is the secret to good code :P
[22:15:34] <gtr> mrig, moving is better for the body than not moving. Sitting all time long only moving fingers will give you back pain and arthritis everywhere
[22:15:46] <mrig> gtr: there is yoga for that :)
[22:15:46] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[22:15:59] <mrig> when your ready to write, write.
[22:16:10] <mrig> you're
[22:16:20] <pikapika> Java is a very well liked language
[22:16:22] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[22:16:34] <mrig> it is a nice coffee too!
[22:16:40] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) ()
[22:16:40] <pulse> i don't like Java
[22:16:40] *** ghostbusters2 is now known as ghostbuster
[22:16:45] <pulse> C# is better
[22:16:48] *** Quits: majors (~majors@user/majors) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[22:17:13] <mrig> oh we are so spoiled by having so much choice!
[22:17:13] * gtr starts exorcism ritual on pulse
[22:17:34] <mrig> lol
[22:17:42] <vysn> Walking every other day is a good way to balance sitting for long periods of time
[22:18:20] <gtr> vysn, it's naive to think that 30 minutes of walking could compensate for 8 hours of sitting
[22:18:28] <vysn> although most people recommend moving every half hour but I find that harder to implement
[22:18:59] <mrig> I'd never get any coding done if I tried that.
[22:19:18] <mrig> I can sit still and meditate for hours and hours on end.
[22:19:39] <vysn> gtr: what about an 1 or 2 of walking?
[22:19:48] <vysn> an hour*
[22:19:50] <mrig> not an issue, true that it is not so good for the body though.
[22:20:12] <mrig> bah that's all such superficial stuff :P
[22:20:21] <pulse> ez to solve https://images-cdn.9gag.com/photo/a7EDQBL_700b.jpg
[22:20:22] <bayaz> Type: image/jpeg Size: 45.8 kB 
[22:20:26] <pulse> now you can walk and compute at the same time
[22:20:36] *** Joins: majors (~majors@user/majors)
[22:20:40] <vysn> please don't let it be a standing desk
[22:21:00] <pulse> power might be problematic though, might wanna strap a diesel generator somewhere on that
[22:23:39] <vysn> mrig: meditation doesn't strike me as a good alternative to physical exercise 
[22:23:58] *** Joins: eEntershikari1 (~eentershi@109.197.254.86)
[22:24:07] <vysn> siting down for hours on end is a real problem in the long run
[22:24:36] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[22:24:36] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:24:40] <vysn> https://www.youtube.com/watch?v=wUEl8KrMz14
[22:24:41] <bayaz> Title: Why sitting is bad for you - Murat Dalkilin√ß 
[22:25:33] <vysn> the dreadful standing desk might be the only effective solution
[22:25:38] *** Joins: user51 (~user51@176.228.90.248)
[22:25:39] <vysn> that and walking regularly
[22:26:07] <user51> i just joined, what's "that"? :D
[22:26:30] *** Joins: todda7 (~torstein@240.red-81-37-247.dynamicip.rima-tde.net)
[22:26:32] *** Quits: Kol (~Kol@d75-157-122-186.bchsia.telus.net) (Ping timeout: 252 seconds)
[22:26:38] *** Joins: Rubba (~Kol@d75-157-122-186.bchsia.telus.net)
[22:26:48] <vysn> the dreadful standing desk
[22:27:01] <pulse> vysn, you know you can just exercise every day, right
[22:27:10] <gtr> user51, sitting < standing desk < walking < navigating computer with full-body gestures
[22:27:47] <user51> how much exercise do you need anyway
[22:27:54] <pulse> 15-45min a day
[22:28:18] <pulse> if you sweat and run out of breath that's a good sign you're doing enough
[22:28:32] <pulse> combine that with cold showers and i guarantee you you can sit for 10 hours without any problems
[22:28:52] *** Quits: Izem (~Izem@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca) (Remote host closed the connection)
[22:28:53] <GeDaMo> I was certainly sweating on my walk this morning although that's mainly because the weather turned hot again :P
[22:28:59] <vysn> pulse:  i thought that as well. but according to gtr. walking for 30 mins a day is no compensation for sitting down for 8 hours
[22:29:10] <pulse> i didn't say walking though
[22:29:12] <pulse> i said exercise
[22:29:20] <pulse> 30 min cardio >>> walking
[22:29:25] <pulse> even walking is better than nothing, though
[22:29:50] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[22:30:35] <pulse> you don't see marines having problems if they have to sit 10 hours do you :p
[22:30:40] <mrig> just doing the breathing is better than nothing.
[22:31:00] <mrig> you don't even need to do the exercise to keep the lungs functional.
[22:32:43] <mrig> and for exercise the more recent info suggests that a short few minute burst is as good as doing loads and loads.
[22:33:13] <mrig> But a walk and getting out is way nicer.
[22:34:07] <MrMobius> why are so many android apps 100s of mb? it seems like some of the simpler ones wouldnt be 10% that size if they were pc programs
[22:34:42] <webNET4> 4k resolution EMOJI's pre-rendered in the binary?
[22:35:56] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[22:36:00] <webNET4> they're using PNG's without compression too*
[22:37:18] <user51> glorius
[22:37:26] <vysn> mrig: isn't that for the mind? what about the body? it needs exercise 
[22:37:28] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Client Quit)
[22:37:51] <vysn> and don't get me started on posture
[22:38:10] <vysn> https://ibb.co/BCpNRQS
[22:38:10] <bayaz> Title: flying-desk 
[22:38:47] <pulse> don't underestimate the power of the mind
[22:39:23] <pulse> the mind is so powerful that you can have a physical illness, you take some sugar being told it will cure it, and your minds cures it
[22:42:40] <vysn> pulse: true, but are you suggesting that its possible to say lose weight by sheer will alone? 
[22:42:51] <pulse> yes
[22:43:34] *** Joins: Akuli (~Akuli@213.216.210.90)
[22:44:22] *** Quits: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net) (Quit: Leaving)
[22:44:46] <mrig> vysn: breathing well it is for the link between the mind the heart and the lungs, does all of it.
[22:45:19] <mrig> your posture can be you mental attitude too, we take things far to literally sometimes.
[22:46:16] <mrig> English does not have the same grammatical structure as the language that these practices were conceived with. Leads to quite a lot of undefined behavior :D
[22:46:46] <GeDaMo> https://en.wikipedia.org/wiki/Placebo
[22:46:47] <bayaz> Title: Placebo - Wikipedia 
[22:47:13] <mrig> Placebo is a wonderful thing.
[22:47:16] <webNET4> don't forget the bones produce red blood cells for the lungs/brain !
[22:47:42] <pulse> "but have no impact on the disease itself."
[22:47:44] <pulse> this is bollocks
[22:47:53] <pulse> it definitely has impact on the disease itself
[22:47:53] <mrig> webNET4: dont forget that bones are effectively antenna.
[22:48:03] <pulse> it's just hard to admit
[22:48:15] <pulse> having put so many billions into pills, that sugar and suggestion can do the same often
[22:50:13] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:f1cc:d5ea:e86d:e5c1) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[22:52:36] <webNET4> unless you're a https://en.wikipedia.org/wiki/Channichthyidae crocodile icefish!
[22:52:37] <bayaz> Title: Channichthyidae - Wikipedia 
[22:54:09] *** Quits: jamea (~jamea@200.68.140.29) (Read error: Connection reset by peer)
[22:55:02] <mrig> just to cool for hemoglobin!
[22:55:33] <mrig> pulse: yes placebo is a tough pill to swallow, perhaps take it with some honey?
[22:55:40] <pulse> ;)
[22:56:44] <pyzozord> why do electronical components like screens need those extra circuits? This one even has a chip. Why? https://www.waveshare.com/13.3inch-e-Paper-HAT.htm
[22:57:08] *** Quits: mmlj4 (~mmlj4@ip68-11-69-185.no.no.cox.net) (Ping timeout: 265 seconds)
[22:58:09] <pyzozord> do i really need an extra chip to control the screen?
[22:59:08] <GeDaMo> Do you know how to control the screen without that chip?
[22:59:20] <mrig> could be linking two completely different power sources together, perhpas?
[22:59:24] <webNET4> you could wire each pixel to a physical output
[22:59:51] <mrig> tiny digital signal and a meaty led power source.
[23:01:20] *** Joins: lalitmee_ (~lalitmee@180.94.33.208)
[23:01:22] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:02:17] *** Joins: jamea (~jamea@200.68.140.29)
[23:04:06] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[23:04:11] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Quit: leaving)
[23:05:34] *** Joins: motherr (~motherr@user/motherr)
[23:06:02] *** Joins: menace (~someone@ppp-93-104-186-17.dynamic.mnet-online.de)
[23:06:13] *** Quits: menace (~someone@ppp-93-104-186-17.dynamic.mnet-online.de) (Changing host)
[23:06:13] *** Joins: menace (~someone@user/menace)
[23:06:39] <pyzozord> Not sure if I know how to control it, but maybe https://www.waveshare.com/wiki/13.3inch_e-Paper_HAT
[23:06:42] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[23:06:48] *** Quits: jamea (~jamea@200.68.140.29) (Ping timeout: 265 seconds)
[23:06:57] <pyzozord> This look promising? https://www.waveshare.com/w/upload/5/5d/13.3inch-e-paper-specification.pdf
[23:07:08] <webNET4> aaaaaaaaaaaarrrrghhhh  https://news.ycombinator.com/item?id=28447672
[23:07:35] <webNET4> "Unity patents ECS" (uspto.gov)
[23:07:51] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[23:09:08] *** Joins: jess (~jess@libera/staff/jess)
[23:09:32] *** Joins: jamea (~jamea@189.231.74.254)
[23:12:13] <pyzozord> oh that's craazy, so where can I read the patent? :P
[23:12:13] *** Quits: hexingb (~hexingb@2409:8902:78c4:4375:9823:42cf:d67:88e6) (Ping timeout: 252 seconds)
[23:12:34] <mrig> Thank you for reminding me why I don't touch any of that proprietary stuff.
[23:12:48] <webNET4> the link if you have javascipt, USPTO alternate link is broken, f'n useless organization
[23:12:59] <pyzozord> thay can't patent design patterns, that's stupid :P
[23:13:05] <pyzozord> s/thay/they/
[23:13:14] <deniska> mrig: the problem with patents is that you don't have to touch it to violate them
[23:13:19] <mrig> It is always owned by unscrupulous people.
[23:13:28] <deniska> but I'd guess there's plenty of prior art to make this one fairly dubious
[23:13:29] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[23:13:49] <Donitz> TIL in finland you can't technically have donate buttons for personal software projects
[23:13:52] <Donitz> freaking sucks
[23:14:07] <webNET4> they build their engine on prior languages, JS/C#  and then turn around and try to patent a common data structure, UGLY!
[23:14:28] <mrig> Only the unscrupulous with limited imagination get into the 'patent it all' game.
[23:14:32] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[23:14:41] <CoJaBo> Donitz: ..wat
[23:15:01] <Donitz> can't have donate buttons, need permit for fundraising
[23:15:11] <Donitz> and private people won't get permits
[23:15:18] <Donitz> and it needs to be for a charity of some kind, not for own profit
[23:15:21] <Donitz> as far as I understood
[23:16:10] <deniska> Donitz: are you sure the legislation you're reading into isn't specific to charity foundraising?
[23:16:10] <CoJaBo> Donitz: Can private people sell "things" online?
[23:16:16] <Donitz> yes
[23:16:18] <Donitz> selling is fine
[23:16:20] <Donitz> as long as you pay tax
[23:16:24] <CoJaBo> Donitz: Then sell something trivial :P
[23:16:37] <Donitz> but I don't want to sell something
[23:16:56] <CoJaBo> Donitz: Support my project by buying a star to appear next to your username in the Supporters List and/or Forum!
[23:16:56] <deniska> Donitz: check with a lawyer, but I believe if you pay taxes off your donate button, you won't have any problems with the gov't :)
[23:17:02] <Donitz> https://news.ycombinator.com/item?id=23613719
[23:17:14] <deniska> Donitz: don't call it "donate" call it "sponsor" :)
[23:17:22] <Donitz> "We have a law called "Money Collection act", which states that to gather donations (i.e. payments with nothing in return), you have to get a permit. This permit costs money, is not given to individuals, and is given only for non-profit activities."
[23:17:36] <pyzozord> in raspberry pi, there is that 40 gpio bus, can I control voltage on individual pins?
[23:17:53] <Donitz> you can control voltage on analog pins
[23:18:01] <Donitz> wait
[23:18:07] <Donitz> does pi even have analog pins
[23:18:11] <CoJaBo> Donitz: Yeh, It sounds like the nothing-in-return bit is the problematic part. Just have all options give some trivial exchange lol
[23:18:23] <Donitz> yes, but you can't really do that on itch.io
[23:18:30] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:f1cc:d5ea:e86d:e5c1)
[23:18:35] <Donitz> so I removed donations
[23:18:52] <CoJaBo> Yeh, might have to link another site then maybe
[23:18:54] <deniska> isn't itch.io for selling gaems?
[23:18:54] *** Joins: rsx (~dummy@ppp-188-174-151-43.dynamic.mnet-online.de)
[23:19:04] <GeDaMo> Could you not sell image files?
[23:19:13] <Donitz> all my games are free
[23:19:14] <mrig> deniska, do you mean that you can infringe it by having the same idea independently, having no idea of the prior sources existence?
[23:19:16] <Donitz> I don't want to sell anything
[23:19:28] <CoJaBo> Or you could do it manually or programattically if there's a way to view who "donated" :P
[23:19:58] <Donitz> if patents dissapeared tomorrow, everything in the world would be better
[23:20:14] <Donitz> have you browsed google patents?
[23:20:19] <CoJaBo> Donitz: If it's games, have a "Supporter" version of the game with a slightly different logo saying it's for supporters or something
[23:20:19] <Donitz> It's mental
[23:20:27] <CoJaBo> Donitz: There's a zillion ways to do it lol
[23:20:30] <GeDaMo> I am not a fan of the patent system
[23:20:35] <Donitz> and the mere act of browsing patents makes you liable for more damages if sued
[23:20:37] <Donitz> hahaha
[23:20:41] <Donitz> it's so broken
[23:20:48] <GeDaMo> Pay to get your name in the credits roll
[23:20:55] <deniska> In modern world the patent system is‚Ä¶ weird.
[23:21:07] <deniska> It doesn't make sense to get a patent for an invention you genuinly care about
[23:21:17] <Donitz> so I implemented gradient descent inverse kinematics
[23:21:17] <mrig> in the world of data structures it is utterly ridiculous.
[23:21:22] <Donitz> an extremely well known method of doing IK
[23:21:30] <Donitz> then stupidly looked it up on google patents
[23:21:33] <deniska> But if you can come up and file 5000 patents, it's really benefitial for your business
[23:21:38] <Donitz> and of course, like literally anything you could imagine, there was a patent for it
[23:21:43] <Donitz> so now I'm too anxious to use it
[23:21:48] <Donitz> screw patents
[23:22:32] <GeDaMo> The patent system is just a weapon big companies use to attack each other
[23:23:13] <webNET4> "we have all these lawyers on payroll, now what?"
[23:23:32] *** Joins: phil294 (~phi@ip1f13ff68.dynamic.kabel-deutschland.de)
[23:24:01] <Donitz> the fact is, NOBODY HAS THE POWER TO BROWSE ALL PATENTS
[23:24:15] <pulse> doesn't google have a patent search
[23:24:17] <Donitz> patents are purpsefully made to be vague and difficult to understand
[23:24:24] <Donitz> purposefully*
[23:24:28] <pulse> why do you care, anyway
[23:24:29] <GeDaMo> Just because a patent is granted, that doesn't mean it would stand up to scrutiny
[23:24:31] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[23:24:32] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[23:24:40] <GeDaMo> Challenging it involves lawyers :/
[23:24:40] <Donitz> just for the reason that you can be sued at such a point when you are big enough to be worth the effort
[23:24:43] <pulse> the only reason someone will sue you over a patent is if you literally make half a million bucks
[23:24:47] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[23:24:47] <Donitz> patents are not enforced until it's too late
[23:24:50] <pulse> and at that point you can afford lawyers
[23:24:52] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[23:24:52] <Donitz> they are malicious
[23:25:19] <pulse> there's a bigger chance Disney will sue you if you use Mickey in your game, then some patent troll even finding you
[23:25:26] <pulse> you have to be a big fish
[23:25:36] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[23:25:41] <Donitz> that's not true at all
[23:25:44] <Donitz> there are tons of patent trolls
[23:25:47] <pulse> and if Silicon Valley taught me anything, it's to just pay the troll if one finds you
[23:25:50] <pulse> it's cheaper in the long run
[23:25:50] <Donitz> suing you for things like using the google play store
[23:25:54] <Donitz> because they patented it
[23:25:56] <Donitz> REAL EXAMPLE
[23:26:14] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[23:26:31] *** Quits: todda7 (~torstein@240.red-81-37-247.dynamicip.rima-tde.net) (Ping timeout: 252 seconds)
[23:26:41] <Donitz> and then they use their crooked courts out of state/country where they win by default if you ignore them
[23:26:46] <Donitz> garbage humans
[23:26:56] <Donitz> scum of the earth
[23:27:21] <pulse> you can just base your business in China, then they can't touch you :p
[23:27:33] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[23:27:49] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[23:28:03] *** Joins: webNET4 (~0x100@32.211.211.39)
[23:28:52] *** Joins: lalitmee__ (~lalitmee@180.94.32.100)
[23:29:20] <Donitz> copyright AT LEAST only applies to things you created
[23:29:29] <Donitz> so the damage done by copyright is self-limiting
[23:30:31] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[23:31:26] *** Quits: lalitmee_ (~lalitmee@180.94.33.208) (Ping timeout: 252 seconds)
[23:33:00] *** Quits: jamea (~jamea@189.231.74.254) (Ping timeout: 260 seconds)
[23:33:08] *** Joins: jamea77 (~jamea@189.231.74.254)
[23:33:49] *** Quits: RickDeckard (~RickDecka@pool-100-12-189-215.nycmny.fios.verizon.net) (Quit: Leaving...)
[23:35:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[23:39:44] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:f1cc:d5ea:e86d:e5c1) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[23:39:47] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (Quit: Konversation terminated!)
[23:40:10] *** Quits: haliucinas (~haliucina@5.20.153.21) (Ping timeout: 240 seconds)
[23:42:09] *** Quits: compscipunk (~compscipu@107-214-234-232.lightspeed.sndgca.sbcglobal.net) (Quit: WeeChat 3.2.1)
[23:42:18] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[23:42:21] *** Joins: haliucinas (~haliucina@5.20.153.21)
[23:43:44] *** Joins: Crescendo (~Crescendo@user/crescendo)
[23:51:32] *** Joins: Auron (~Auron956@user/auron)
[23:51:47] *** Quits: Lyn (~Lyn@user/law) (Ping timeout: 252 seconds)
[23:52:54] *** Joins: zaher (~zaher@37.48.176.167)
[23:55:25] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[23:55:44] *** Joins: Crescendo (~Crescendo@user/crescendo)
[23:56:42] *** Quits: electr0n (~electr0n@about/security/founder/electr0n) (Quit: WeeChat 3.2)
[23:57:32] *** Quits: TastyWiener95 (~uhhh3@user/tastywiener95) (Ping timeout: 245 seconds)
[23:58:23] *** Quits: inky_ (~inky@178.78.141.169) (Ping timeout: 252 seconds)
[23:58:52] *** Joins: inky_ (~inky@46.36.119.19)
[23:59:15] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.2)
[23:59:31] *** Quits: inky (~inky_@178.78.141.169) (Ping timeout: 252 seconds)
[23:59:43] *** Joins: vysn (~vysn@user/vysn)
