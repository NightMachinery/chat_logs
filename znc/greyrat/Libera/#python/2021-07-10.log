[00:00:05] *** Joins: wyclif (~wyclif@user/wyclif)
[00:01:45] *** Joins: esaym153 (~esaym153@net153.net)
[00:01:52] *** Quits: bn_work (uid268505@id-268505.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[00:02:17] *** Quits: candyman (~candyman@user/candyman) (Ping timeout: 252 seconds)
[00:02:49] *** Quits: whaley (~whaley@066-169-090-170.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:02:53] <esaym153> I've got an interview soon with a place using fastapi and couchbase and I haven't used either. Is there any super awesome tutorial for that stack anywhere?
[00:02:55] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:4d98:f5d8:40a0:ce97)
[00:03:08] *** Quits: UselessCourage (~UselessCo@gateway/tor-sasl/uselesscourage) (Quit: Leaving)
[00:04:02] *** Joins: cuz (~user@38.140.58.234)
[00:04:50] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 255 seconds)
[00:04:56] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[00:05:11] <grym> fastAPI's docs are slightly idiosyncratic but thorough
[00:05:16] *** Joins: cheater (~Username@user/cheater)
[00:06:37] <noyb> esaym153: Install them in a virtual environment and build something.  It's the only way I can see success.
[00:07:03] <esaym153> noyb: doing that now, Just didn't know if there was something else
[00:08:20] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[00:08:44] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:10:38] *** Joins: inom (~inom@176.59.102.225)
[00:10:59] *** Quits: isekaijin (~pyon@user/pyon) (Ping timeout: 252 seconds)
[00:11:05] <bluss> is there an irc channel for just jupyter or numfocus stuff?
[00:11:14] <SnoopJ> esaym153, if you've used Flask before, this is a good side-by-side: https://amitness.com/2020/06/fastapi-vs-flask/
[00:11:30] <esaym153> sweet
[00:11:41] *** Joins: isekaijin (~pyon@user/pyon)
[00:12:30] *** Quits: Barones (~Barones@2804:48dc:8500:0:4d0f:1aa9:7e5f:65b4) (Remote host closed the connection)
[00:12:30] *** Quits: rhax (~yannick@user/rhax) (Quit: Leaving)
[00:12:40] <SnoopJ> bluss, those things are topical here, I don't think there's any channels dedicated to them on this network (#jupyter exists, but it has only one user)
[00:12:59] <SnoopJ> in general you can `/msg alis help` for information about how to ask the server about channels
[00:13:35] *** Roey is now known as StuffRoeySays
[00:13:46] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 240 seconds)
[00:13:58] *** Quits: Guddu (~Guddu@106.214.41.45) (Read error: Connection reset by peer)
[00:14:11] <grym> JordiGH: https://i.imgur.com/J4kWcj4.jpeg
[00:14:32] <bluss> thanks. I tried search site too, across multiple network, didn't find anything. But sometimes people know more than the automatic listings
[00:14:39] <JordiGH> grym: lol?
[00:15:49] <SnoopJ> bluss, there's also #pydata with 22 users, might be some overlap
[00:15:53] *** Joins: dominikoso (~dominikos@IP-80-94-28-144.internet.lantech.com.pl)
[00:16:46] *** Joins: qlixed (~qlixed@81-9-245-190.fibertel.com.ar)
[00:20:00] *** Quits: inom (~inom@176.59.102.225) (Quit: WeeChat 3.1)
[00:20:24] <AhmedAmerican> why am getting `httpx.ReadError` for that site only ? https://bpa.st/GZZA
[00:23:13] *** Joins: inom (~inom@176.59.102.225)
[00:23:47] *** Joins: Barones (~Barones@2804:48dc:8500:0:c9d7:f668:21b2:9de7)
[00:24:46] *** Quits: deviantfero (~deviantfe@190.150.27.58) (Quit: WeeChat 3.2)
[00:29:35] *** Joins: bilb_ono (~alexmarsh@ip68-5-218-141.oc.oc.cox.net)
[00:32:00] *** Quits: boxelephant (~boxelepha@209.143.87.130) (Quit: leaving)
[00:32:29] *** Joins: boxelephant (~boxelepha@209.143.87.130)
[00:32:49] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[00:36:05] *** Quits: bilb_ono (~alexmarsh@ip68-5-218-141.oc.oc.cox.net) (Quit: bilb_ono)
[00:36:27] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[00:36:36] *** Joins: bilb_ono (~alexmarsh@ip68-5-218-141.oc.oc.cox.net)
[00:36:47] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:a6ea:d549:1785:23d0) (Quit: Leaving)
[00:37:05] *** Joins: wyclif (~wyclif@user/wyclif)
[00:39:41] *** Quits: RougeR (~rougex250@user/rouger) (Remote host closed the connection)
[00:40:36] <ChrisWarrick> AhmedAmerican: perhaps it does not like httpx or your proxy and closes a connection uncleanly in that case
[00:40:53] *** Joins: reset (~reset@user/reset)
[00:41:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[00:42:54] *** Joins: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4)
[00:42:57] *** Quits: powerjungle (~powerjung@h081217087223.dyn.cm.kabsi.at) (Quit: ZNC - https://znc.in)
[00:43:26] *** Parts: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4) ()
[00:44:46] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[00:47:07] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[00:49:19] <Gurkenglas> so there's this executable written in python (coconut) and it crashes with a traceback. is there a way to run such with a debugger?
[00:49:54] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[00:50:47] <JordiGH> pudb they_python_executable might work?
[00:50:55] <JordiGH> Unless "executable" means "binary".
[00:51:02] *** Joins: Julian (~tos9@python/site-packages/Julian)
[00:53:01] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[00:53:49] *** Joins: wyclif (~wyclif@user/wyclif)
[00:54:02] <Gurkenglas> Neat! Though the mouse doesn't work in there.
[00:55:03] *** Joins: Crassus (~Crassus@user/crassus)
[00:55:16] *** Joins: pseudocrat (~quassel@user/pseudocrat)
[00:55:38] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 252 seconds)
[00:55:53] *** Joins: vimart (~vimart@85.255.232.169)
[00:56:17] <grym> yes, pudb is a tui
[00:56:32] <Gurkenglas> hmmm i am guessing that "coconut is a directory" is in fact that coconut is a "binary", as in something i run using "coconut" or "python -m coconut"
[00:57:01] <grym> the only coconut i see is https://github.com/evhub/coconut
[00:57:06] <Gurkenglas> thats the one
[00:57:52] <Gurkenglas> so i need to do something before doing "pip install ." if i want to run it with a debugger?
[00:59:15] *** Quits: Cienisty (cloak@user/cienisty) (Quit: Error 606 | Demon not found)
[00:59:18] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[00:59:29] *** Joins: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4)
[01:00:10] *** Joins: Julian (~tos9@python/site-packages/Julian)
[01:03:22] *** Parts: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4) ()
[01:03:47] <ChrisWarrick> depends what debugger you want
[01:03:55] *** Joins: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-147.dsl.bell.ca)
[01:04:07] <ChrisWarrick> pdb is built-in, pudb is a nice TUI, or you might want to run it in your favorite IDE
[01:04:21] <SnoopJ> is there something I can use instead of zipimport.zipimporter(pth) that works for not-a-zip paths too? I can't find a spelling for this in importlib
[01:04:28] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 272 seconds)
[01:04:41] <SnoopJ> (I don't really want to touch sys.path for this)
[01:05:03] <Gurkenglas> Ah, I can just run main.py with pudb instead of doing pip install .
[01:05:20] <SnoopJ> Gurkenglas, as a rule you can point pudb at anything you'd point python3 at
[01:05:49] <Gurkenglas> yeah i just didnt realize running the installed coconut is the same as running its main.py
[01:06:19] *** Quits: maharg101 (~maharg101@savoy.force9.co.uk) (Quit: Textual IRC Client: www.textualapp.com)
[01:06:38] *** Quits: MrFantastik (~Thunderbi@rrcs-184-74-43-235.nys.biz.rr.com) (Ping timeout: 252 seconds)
[01:06:39] *** Quits: Barones (~Barones@2804:48dc:8500:0:c9d7:f668:21b2:9de7) (Remote host closed the connection)
[01:06:55] *** Joins: AskerX (~Guest98@209.58.147.245)
[01:06:59] *** Joins: Barones (~Barones@2804:48dc:8500:0:c9d7:f668:21b2:9de7)
[01:07:05] *** Joins: ATAD (~ATAD@user/atad)
[01:08:31] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Quit: mogad0n)
[01:08:35] *** Quits: rendar (~rendar@user/rendar) ()
[01:08:38] *** Quits: noarb- (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[01:08:39] *** Quits: dvx (~dvx@185.63.97.64) (Quit: dvx)
[01:08:47] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[01:09:24] <bancroft> is this new?
[01:09:27] <bancroft> what is this magic
[01:09:54] *** Joins: wyclif (~wyclif@user/wyclif)
[01:10:21] <SnoopJ> bancroft, ?
[01:10:34] <bancroft> SnoopJ: pudb
[01:11:26] <SnoopJ> bancroft, it's a third-party tool, has been around for a while. Oldest tag on GitHub is 2009
[01:11:42] *** Joins: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it)
[01:12:00] <bancroft> never heard of it until today but cool, i'm going to try it
[01:12:07] <bancroft> hopefully it's close to gdb
[01:12:23] *** Quits: bilb_ono (~alexmarsh@ip68-5-218-141.oc.oc.cox.net) (Quit: bilb_ono)
[01:12:51] *** Quits: TheRAt (~TheRAt@user/therat) (Ping timeout: 258 seconds)
[01:13:03] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[01:14:32] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.0.1)
[01:15:11] *** Joins: TheRAt (~TheRAt@user/therat)
[01:15:14] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[01:17:29] *** Joins: mxp (~mxp@138.199.47.179)
[01:17:44] <SnoopJ> I wouldn't say so, but it's a great debugger
[01:18:14] *** Joins: noarb (~noarb@user/noarb)
[01:18:15] <jinsun> SnoopJ: runpy.run_path maybe? depends on what you want to do with the zipimporter like object
[01:18:24] <ChrisWarrick> bancroft: if you like console debuggers (why?), there is pdb
[01:18:32] *** Joins: Auron (Auron956@user/auron)
[01:19:19] <SnoopJ> jinsun, I'm loading an auxilliary module that is specified in a config file. Canonically it'll be a package in a .zip, but if I can make it folder-friendly that'd be nice to have
[01:19:28] *** Quits: AskerX (~Guest98@209.58.147.245) (Quit: Client closed)
[01:19:32] *** Quits: qlixed (~qlixed@81-9-245-190.fibertel.com.ar) (Ping timeout: 255 seconds)
[01:19:44] *** Quits: Barones (~Barones@2804:48dc:8500:0:c9d7:f668:21b2:9de7) (Remote host closed the connection)
[01:19:59] *** Quits: boxelephant (~boxelepha@209.143.87.130) (Ping timeout: 255 seconds)
[01:20:09] *** Joins: Barones (~Barones@2804:48dc:8500:0:c9d7:f668:21b2:9de7)
[01:20:26] <SnoopJ> doing something like this right now: `zi = zipimporter(config.package_path); module = zi.load_module("foopkg"); model = module.make_model(**args)`
[01:20:34] <SnoopJ> err, **factory_args :)
[01:20:53] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 255 seconds)
[01:21:35] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[01:21:50] *** Quits: kindablue (znc@irc.tpurist.com) (Quit: System Rebooting..)
[01:22:28] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 246 seconds)
[01:23:12] *** Quits: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Remote host closed the connection)
[01:23:25] *** Joins: cdown (~cdown@89.32.122.5)
[01:23:30] *** Joins: Cienisty (Cienisty@user/cienisty)
[01:23:32] *** Joins: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[01:24:21] *** kevr is now known as tiny-kevr
[01:24:45] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My Mac Pro has gone to sleep. ZZZzzz…)
[01:24:59] *** Joins: solrize (~solrize@user/solrize)
[01:25:14] *** Joins: parzival (~parzival@user/parzival)
[01:25:28] <solrize> is there a simple way to create an executable file, i.e. open(filename, 'w') but with mode 0777 & ~umask  ?
[01:25:36] *** Joins: kindablue (znc@irc.tpurist.com)
[01:25:45] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[01:25:56] *** Joins: Kamuela (sid111576@id-111576.tinside.irccloud.com)
[01:26:10] <habnabit_> solrize, umask is always applied
[01:26:22] *** Joins: super (~0@user/clueless)
[01:26:24] <SnoopJ> pathlib.Path.touch() allows you to pass a mode
[01:27:13] *** Joins: wyclif (~wyclif@user/wyclif)
[01:27:18] <solrize> habnabit, umask is applied when creating a file with open, but 'w' doesn't give the executable bit.  and then if i use os.fchmod it doesn't use the umask.  and it looks like os.umask changes the umask as well as returns it
[01:27:47] <habnabit_> solrize, open it with os.open, then pass the fd to the builtin open
[01:28:08] <solrize> hmm ok let me try that thanks
[01:28:58] *** tiny-kevr is now known as kevr
[01:30:04] *** Joins: jazzy (~jaziz@2600:380:8653:59ba:7d3d:6a42:3e7f:d235)
[01:30:35] *** Quits: ganchan (~thomas_w@user/ganchan) (Read error: Connection reset by peer)
[01:30:36] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[01:31:02] <SnoopJ> jinsun, I think pkgutil.get_importer() is the thing I'm looking for, unless there's an importlib replacement for that
[01:32:24] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[01:33:19] *** Quits: Deknos (~someone@user/menace) (Quit: Deknos)
[01:33:58] *** Joins: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net)
[01:35:43] <rannnn8888> httpx.Request("POST", "https://httpbin.org/anything", json={"index": index}) how i add here proxy ?
[01:36:16] <rannnn8888> i try like in the request , proxies=proxies but its not good
[01:37:27] <solrize> habnabit_, hmm i don't seem to be able to print to the file that i open that way
[01:37:59] <habnabit_> solrize, how so
[01:38:59] <solrize> oh nm, fixed
[01:38:59] <jinsun> SnoopJ: ah ok okay cool, that seems bettter for your folder case, I used runpy once but I was taking a simple single config.py file
[01:39:01] <solrize> thanks
[01:39:14] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[01:39:45] <SnoopJ> jinsun, I think I'm overthinking this, I'll just check zipfile.is_zipfile() on the input and raise an exception if it isn't one, and if we really wanna do that some other time, that turns into the impl :)
[01:40:12] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Remote host closed the connection)
[01:40:50] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My Mac Pro has gone to sleep. ZZZzzz…)
[01:41:17] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 252 seconds)
[01:41:38] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[01:41:56] *** Joins: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br)
[01:42:12] *** Quits: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br) (Remote host closed the connection)
[01:42:28] *** lukedashjr is now known as luke-jr
[01:42:37] *** Joins: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br)
[01:45:29] *** Joins: wyclif (~wyclif@user/wyclif)
[01:45:38] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 255 seconds)
[01:45:49] *** Quits: zumba_addict (~zumba_add@2601:240:4500:8320:893a:9830:2905:12a4) (Quit: Client closed)
[01:45:53] *** Joins: pro (~pro@user/pro)
[01:46:01] *** Joins: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net)
[01:46:59] <pro> is there a nice way to create sqlite table with headers from the first line of a csv file, without manually parsing the first line of the csv
[01:47:26] <ChrisWarrick> pro: in python? probably not
[01:47:26] *** Joins: rhax (~yannick@user/rhax)
[01:47:34] <ChrisWarrick> pro: in sqlite3 (the cli app)? maybe
[01:47:36] <grym> pro: dataset's real close
[01:47:45] <grym> sec
[01:48:45] <grym> pro: csv.DictReader -> dataset.insert_many is pretty close, if you want to do this manually; otherwise, https://github.com/simonw/csvs-to-sqlite/tree/main/csvs_to_sqlite
[01:48:47] <solrize> pro, sqlite3 cli app .load command doesit automatically i think?
[01:49:12] *** Quits: rhax (~yannick@user/rhax) (Client Quit)
[01:50:20] *** Joins: pnoud (~pnoud@user/pnoud)
[01:50:38] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[01:51:17] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[01:52:23] *** Quits: cuz (~user@38.140.58.234) (Ping timeout: 255 seconds)
[01:55:08] *** Quits: KevinX (~KevinX@94.140.11.95) (Ping timeout: 272 seconds)
[01:55:32] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 255 seconds)
[01:56:32] *** Joins: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4)
[01:57:07] *** Parts: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4) ()
[01:57:54] *** Joins: KevinX (~KevinX@94.140.11.98)
[02:01:01] *** Quits: fluffyballoon (~fluffybal@pat-verona-i.epic.com) (Quit: Client closed)
[02:01:37] *** Joins: fluffyballoon (~fluffybal@pat-verona-i.epic.com)
[02:02:05] *** Quits: user3456 (user3456@user/user3456) (Ping timeout: 252 seconds)
[02:02:55] *** Quits: pseudocrat (~quassel@user/pseudocrat) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:03:56] *** Joins: wyclif (~wyclif@user/wyclif)
[02:04:09] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[02:04:43] *** Quits: dascout_29 (~dascout_2@190.236.211.203) (Quit: Client closed)
[02:08:29] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[02:09:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[02:09:20] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Remote host closed the connection)
[02:09:39] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[02:10:28] *** Joins: cation21 (cation@user/cation)
[02:11:27] *** Joins: Celeo (~Celeo@user/celeo)
[02:14:17] *** Quits: cation (cation@user/cation) (Ping timeout: 252 seconds)
[02:14:20] *** cation21 is now known as cation
[02:16:24] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[02:16:55] *** Joins: matsaman (~matsaman@user/matsaman)
[02:17:36] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[02:18:41] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[02:18:51] *** Joins: user3456 (user3456@user/user3456)
[02:19:59] *** Joins: wyclif (~wyclif@user/wyclif)
[02:21:07] *** Quits: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com) (Read error: Connection reset by peer)
[02:21:47] *** Joins: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com)
[02:22:05] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 255 seconds)
[02:22:31] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[02:22:41] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[02:23:00] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[02:23:53] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 255 seconds)
[02:24:08] *** Quits: Barones (~Barones@2804:48dc:8500:0:c9d7:f668:21b2:9de7) (Quit: Leaving)
[02:24:19] *** Quits: fluffyballoon (~fluffybal@pat-verona-i.epic.com) (Ping timeout: 246 seconds)
[02:25:01] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[02:25:37] *** Quits: f8e4 (~user@159.89.21.45) (Quit: WeeChat 3.1)
[02:25:41] *** Quits: azazello (~azazello@109.75.158.195) (Ping timeout: 255 seconds)
[02:26:22] *** Joins: Julian (~tos9@python/site-packages/Julian)
[02:26:27] *** Joins: f8e4 (~user@159.89.21.45)
[02:26:32] *** Quits: p-i- (~Ohmu@node-4pl.pool-118-172.dynamic.totinternet.net) (Read error: Connection reset by peer)
[02:26:34] *** Quits: Praise (~Fat@user/praise) (Ping timeout: 240 seconds)
[02:26:34] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[02:27:02] *** Joins: Praise (~Fat@user/praise)
[02:27:06] *** Joins: c10l (~c10l@89.34.167.207)
[02:27:22] *** Joins: p-i- (~Ohmu@node-ot2.pool-118-173.dynamic.totinternet.net)
[02:27:23] *** Joins: wyclif (~wyclif@user/wyclif)
[02:28:34] *** Joins: ice9 (~ice9@user/ice9)
[02:29:35] *** Quits: pro (~pro@user/pro) (Ping timeout: 252 seconds)
[02:30:25] *** Joins: audiocat (~audio@2603-8081-1800-00ad-e454-55e6-6248-e2bb.res6.spectrum.com)
[02:31:11] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 268 seconds)
[02:31:42] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Read error: Connection reset by peer)
[02:32:03] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[02:32:14] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[02:32:50] *** Joins: heco (~redrum@user/redrum88)
[02:33:01] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Ping timeout: 244 seconds)
[02:33:42] *** Quits: upsala2 (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[02:33:56] *** Joins: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4)
[02:34:19] *** Parts: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4) ()
[02:34:23] *** Joins: qlixed (~qlixed@181.44.129.13)
[02:35:08] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[02:36:51] <kevr> Is there a nice way to multiline an annotated return type?
[02:38:22] *** Quits: BSaboia (~bsaboia@188-178-217-166-cable.dk.customer.tdc.net) (Quit: This computer has gone to sleep)
[02:38:56] *** Quits: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br) (Quit: Leaving)
[02:39:10] *** Joins: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net)
[02:39:36] *** Quits: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 252 seconds)
[02:40:40] *** Joins: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br)
[02:41:09] *** Quits: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br) (Remote host closed the connection)
[02:41:16] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[02:41:46] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Ping timeout: 252 seconds)
[02:42:41] <tpr> I simply let black do formatting
[02:43:37] *** Joins: reedrichards (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[02:43:49] *** Joins: wyclif (~wyclif@user/wyclif)
[02:43:50] <SnoopJ> kevr, you can use continuation lines just as you would in any other expr: https://bpa.st/XBOA
[02:43:59] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Ping timeout: 252 seconds)
[02:44:00] *** reedrichards is now known as MrFantastik
[02:44:30] *** Joins: Julian (~tos9@python/site-packages/Julian)
[02:44:42] <SnoopJ> but if you have an annotation complicated enough to necessitate this, maybe you should give it a name and annotate as `def f() -> ComplicatedType:`
[02:45:53] <Byteflux> this extension i use in vscode to show indentations doesn't like line continuation indents if they aren't indented normally :<
[02:46:42] *** Joins: darksun (~darksun@user/darksun)
[02:46:46] <SnoopJ> sounds like it's running an opinionated linter
[02:46:55] *** Joins: korg815 (~korg815@user/korg815)
[02:47:01] <Byteflux> it assumes invalid syntax and highlights the indents as red
[02:47:01] *** Joins: bilb_ono (~alexmarsh@ip68-5-218-141.oc.oc.cox.net)
[02:47:54] *** Joins: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[02:47:55] <ChrisWarrick> find a better extension
[02:48:14] <ChrisWarrick> I don’t really see the point in highlighting indents in red in any case, in any language
[02:48:17] *** Joins: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4)
[02:48:36] <SnoopJ> if it tells you that's invalid syntax, it's meriting a bug report: the above is valid syntax (as running the program serves to demonstrate)
[02:48:56] <Byteflux> Yeah, definitely.
[02:48:56] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[02:49:14] <SnoopJ> if it just complains "heee-eeey don't do that :'[" then that's another matter :)
[02:49:15] <Byteflux> ChrisWarrick: It's "indent-rainbow" and I just liked that it shows different colors for each indent level
[02:49:26] *** Quits: bilb_ono (~alexmarsh@ip68-5-218-141.oc.oc.cox.net) (Client Quit)
[02:50:51] *** Parts: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4) ()
[02:51:15] <kevr> Hmm. Okay. So, I'm trying to declare my own TypeVar, but when I do, wherever I use that TypeVar ties the signature to the function where its used. `A = TypeVar('A'); def f(a: A): pass;`, my semantic completion/diagnostics tool then shows the signature as A@f instead of A.
[02:51:19] <kevr> Any... clue? :P
[02:51:37] <kevr> I'd like to just have it use 'A', like a normal old type.
[02:51:38] <ChrisWarrick> kevr: what semantic completion/diagnostics tool is this?
[02:51:46] <kevr> coc.nvim + coc-pyright
[02:52:16] <ChrisWarrick> okay, my tool of choice (pycharm) doesn’t do that, so perhaps report a bug in your tool of choice
[02:52:19] <SnoopJ> kevr, it's reporting it that way because TypeVars are for the type checker's benefit: context is very important to them.
[02:52:42] <kevr> SnoopJ: But the TypeVar itself is declared globally, it's not local to the function.
[02:52:58] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 240 seconds)
[02:53:12] <kevr> If that's just a biproduct of it having to track where it needs to be or something, I'm fine with it. It just feels like I might be doing something wrong.
[02:53:17] <SnoopJ> kevr, would you like to be able to distinguish between different contexts in which these TypeVars are being used? I would, in a hypothetical program where they will definitely be used this way.
[02:53:51] <kevr> SnoopJ: Frankly, I just want my sqlalchemy.orm.Query type to show a valid type in my diagnostic tool.
[02:54:02] *** Quits: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net) (Ping timeout: 255 seconds)
[02:54:02] <kevr> If I pass it directly as a type, the tooling sees it as Unknown
[02:54:26] <kevr> So, I added a TypeVar for it in the module where I'm using it as a type hint.
[02:55:21] <kevr> Query = typing.TypeVar('orm.Query', orm.Query)
[02:55:29] <kevr> (where orm is an imported sqlalchemy module
[02:55:31] *** Joins: BSaboia (~bsaboia@188-178-217-166-cable.dk.customer.tdc.net)
[02:56:05] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 252 seconds)
[02:56:26] <kevr> Maybe I should just be looking at the diagnostic tool as the problem here?
[02:56:36] <kevr> as Chris has suggested
[02:56:57] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::2f4b) (Quit: Konversation terminated!)
[02:57:01] <SnoopJ> Not being able to annotate with the type does sound like a problem with the tool
[02:57:18] <kevr> SnoopJ: Odd thing is though, that it works with... pretty much every other type.
[02:57:27] <kevr> I wonder if it is because of some sort of lazy behavior by sqlalchemy
[02:58:04] <kevr> at least, this is the first time I have seen it fail on a type matching.
[02:58:38] <SnoopJ> if that behavior could prevent your tooling from discovering the necessary type information, maybe
[02:59:03] *** Joins: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4)
[02:59:29] <SnoopJ> or maybe it needs typestubs? I dunno much about sqlalchemy or annotation workflows to be honest
[02:59:31] <kevr> "If you are using PEP 484 static type checkers for Python, a MyPy plugin is included with type stubs for SQLAlchemy. The plugin is tailored towards SQLAlchemy declarative models."
[02:59:37] *** Parts: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4) ()
[02:59:37] <kevr> Interesting.
[02:59:54] <kevr> I believe it does, yeah
[03:00:05] <kevr> That is what I'm missing!
[03:00:06] <SnoopJ> a plugin would be even better :)
[03:00:24] *** Joins: wyclif (~wyclif@user/wyclif)
[03:00:53] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:a6ea:d549:1785:23d0)
[03:02:08] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 255 seconds)
[03:02:23] *** Quits: Akuli (~Akuli@87-94-111-36.bb.dnainternet.fi) (Remote host closed the connection)
[03:05:19] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Quit: MrFantastik)
[03:06:20] *** Joins: darksun (~darksun@user/darksun)
[03:07:32] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 255 seconds)
[03:10:07] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[03:11:29] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 252 seconds)
[03:11:40] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[03:15:03] <grym> altendky: in desert, how do i express typing.Union[str, Path]?  https://bpa.st/4KDA
[03:15:53] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[03:16:09] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[03:16:23] *** Joins: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4)
[03:16:29] *** Quits: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net) (Ping timeout: 265 seconds)
[03:16:48] *** Parts: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4) ()
[03:17:43] *** Joins: Lando-SpacePimp (~LandoC@user/lando-spacepimp)
[03:18:03] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:18:35] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 258 seconds)
[03:19:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[03:20:26] *** Quits: roelj (~user@2001:1c02:b21:6200:c9cf:5ac8:4ac9:c58e) (Remote host closed the connection)
[03:23:29] *** Joins: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com)
[03:25:04] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 272 seconds)
[03:26:46] *** Quits: BSaboia (~bsaboia@188-178-217-166-cable.dk.customer.tdc.net) (Quit: This computer has gone to sleep)
[03:27:09] *** Joins: BSaboia (~bsaboia@188-178-217-166-cable.dk.customer.tdc.net)
[03:27:16] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[03:27:51] <sudomann_> Python 3.9 on m1 macbook - i don't understand what is preventing me from installng dm-tree https://dpaste.org/TQ9z
[03:28:12] <sudomann_> I see something goes wrong with installing from the wheel file it downloaded
[03:28:33] <ChrisWarrick> sudomann_: it didn’t download any wheels
[03:28:34] <sudomann_> Then it tries to build it natively with bazel it looks?
[03:28:41] <ChrisWarrick> sudomann_: you need `bazel` to build it
[03:28:58] *** Quits: jazzy (~jaziz@2600:380:8653:59ba:7d3d:6a42:3e7f:d235) (Ping timeout: 240 seconds)
[03:29:07] <ChrisWarrick> such is the cost of using a dumb new platform
[03:29:43] <sudomann_> hmm thats kind of odd
[03:29:49] <ChrisWarrick> nah, not really
[03:30:05] *** Quits: jkl (~jkl@user/jkl) (Quit: ZNC 1.8.2 - https://znc.in)
[03:30:09] <sudomann_> Others in the company are telling me they build the image (this is from a Dockerfile) with no issue
[03:30:24] <ChrisWarrick> are they running m1 macs too?
[03:30:29] <sudomann_> Some
[03:30:37] *** Joins: wyclif (~wyclif@user/wyclif)
[03:30:38] <sudomann_> I gotta ask for specifics now
[03:30:41] <ChrisWarrick> yes, you do
[03:30:54] <ChrisWarrick> this paste isn’t from docker, it’s running natively on macos
[03:31:04] *** Parts: cul8r (~cul8r@2600:1702:2160:13e0::44) (discombobulating)
[03:31:17] *** Joins: cdown_ (~cdown@163.114.131.1)
[03:31:27] <matsaman> sudomann_: no issue on arm?
[03:31:45] <sudomann_> yes, thats oabout the same output i got from docker. I made a venv to build the package in isolation and see if it was something with docker
[03:31:58] <ChrisWarrick> sudomann_: okay, then show us the docker output
[03:32:03] <sudomann_> I'll share the docker build output in a moment
[03:32:40] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[03:33:56] *** Quits: cdown (~cdown@89.32.122.5) (Ping timeout: 252 seconds)
[03:34:22] *** Quits: BSaboia (~bsaboia@188-178-217-166-cable.dk.customer.tdc.net) (Ping timeout: 265 seconds)
[03:34:34] <sudomann_> https://dpaste.org/yLAb
[03:35:00] <ChrisWarrick> okay, so you’re running arm64 docker
[03:35:36] <ChrisWarrick> dm-tree has macos, linux, and windows wheels - but only for the reasonable computer architecture (i.e. x86_64) and not for arm64
[03:35:38] <altendky> grym: you search the tickets and see the extensive discussion and a PR i wrote a year or two ago that i need to finalize and merge.  or, you can use the existing marshmallow solutions that guess and so every single thing ever turns out to be a string because you can `str(anything)` successfully, basically.
[03:35:41] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[03:35:48] <altendky> well, yeah, i'm getting excessive, but that's the basic ist of it.
[03:35:56] *** Joins: pioto (~pioto@user/pioto)
[03:35:58] <sudomann_> Are you familia with rosetta? ChrisWarrick
[03:36:10] <ChrisWarrick> sudomann_: it will be gone in about 2 or 3 years, knowing apple
[03:36:16] <sudomann_> I launched this build from a rosetta backed terminal
[03:36:19] <altendky> grym: though in this case it sounds like they are really just different forms of the same thing, so say more about which direction etc etc.
[03:36:26] <ChrisWarrick> sudomann_: docker might not listen to rosetta
[03:36:46] <ChrisWarrick> sudomann_: ask your other m1-using friends how they deal with that, perhaps docker needs some convincing to run intel emulation
[03:37:13] <ChrisWarrick> sudomann_: https://docs.docker.com/docker-for-mac/apple-silicon/ says: "Not all images are available for ARM64 architecture. You can add --platform linux/amd64 to run an Intel image under emulation. In particular, the mysql image is not available for ARM64. You can work around this issue by using a mariadb image."
[03:37:23] <sudomann_> this is where I installed docker from https://docs.docker.com/docker-for-mac/apple-silicon/
[03:37:26] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:37:33] <sudomann_> with the understanding it would use rosetta :/
[03:37:57] <ChrisWarrick> docker on mac runs a linux vm, it would be terribly inefficient to run an entire VM in rosetta
[03:38:10] <kevr> ChrisWarrick: If you write this function: `def f(a: sqlalchemy.orm.Query): pass;`, your tooling shows you the type signature in the signature of the function properly?
[03:38:13] <sudomann_> Aah i see
[03:38:17] <ChrisWarrick> (and probably not implemented)
[03:38:29] <ChrisWarrick> kevr: I can’t check right now, but I would guess it does
[03:38:41] <kevr> Could you possibly verify when you can check?
[03:39:01] <ChrisWarrick> (and possibly not all the features VMs need are implemented by rosetta*)
[03:40:46] <sudomann_> man...and i was pretty eager to set up and work mostly on this mac
[03:41:05] <sudomann_> It builds with the --platform linux/amd64 flag
[03:41:10] <sudomann_> But I wonder will the image run?
[03:41:17] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 255 seconds)
[03:41:44] *** Quits: audiocat (~audio@2603-8081-1800-00ad-e454-55e6-6248-e2bb.res6.spectrum.com) (Ping timeout: 252 seconds)
[03:41:47] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[03:43:20] *** Joins: LuxuryMode (uid91005@id-91005.charlton.irccloud.com)
[03:47:28] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Remote host closed the connection)
[03:47:41] *** Quits: fannagoganna (uid110488@id-110488.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[03:48:30] *** Joins: wyclif (~wyclif@user/wyclif)
[03:48:48] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[03:49:28] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 246 seconds)
[03:49:46] *** Quits: ntdll (~ntdll@user/ntdll) (Ping timeout: 272 seconds)
[03:51:02] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Ping timeout: 244 seconds)
[03:51:11] *** Joins: pnoud (~pnoud@user/pnoud)
[03:51:27] *** Joins: drincruz_ (~drincruz@cpe-69-203-74-164.hvc.res.rr.com)
[03:51:31] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[03:52:32] *** Quits: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com) (Ping timeout: 255 seconds)
[03:53:44] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[03:53:53] *** Joins: i0e (~is0ke3@user/is0ke3)
[03:53:55] *** Quits: wolfshappen (~waff@irc.furworks.de) (Quit: later)
[03:55:02] <jamiejackson> hi folks, how do you spy on a function (function call is a few levels deep) in pytest? i'm using python 3.9 and i want to assert that a function is returning what i expect. i'm struggling because python testers don't seem to use the term "spy"
[03:55:09] *** Joins: wolfshappen (~waff@irc.furworks.de)
[03:55:45] *** Quits: nac (~nac@user/nac) (Quit: The Lounge - https://thelounge.chat)
[03:55:52] <altendky> jamiejackson: "mock", though we often try to not do that and instead just have things be more accessible for direct testing.
[03:56:11] *** Joins: nac (~nac@user/nac)
[03:56:29] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 252 seconds)
[03:56:32] *** Quits: Sheilong (uid293653@id-293653.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[03:59:01] <SnoopJ> jamiejackson, you are tracing the execution of your tests, or of program code being tested?
[03:59:54] <jamiejackson> altendky, i'm trying something new (TDD from the outside in). even though the functions will be directly testable, i don't have tests for them yet. this ends up being an end-to-end test (with external services mocked)...
[03:59:57] <SnoopJ> Either way, I am a big fan of sticking a breakpoint wherever it's necessary and/or configuring pytest to call pudb when a failure occurs, then running pytest with -s
[04:00:09] <nedbat> jamiejackson: is the result of the function not evident from the eventual return?
[04:00:27] <jamiejackson> i still don't have a feel for how to do TDD outside in. i usually resort to inside-out, but i wanted to try something new
[04:00:59] *** Quits: parzival (~parzival@user/parzival) (Ping timeout: 252 seconds)
[04:01:16] *** Joins: bilb_ono (~alexmarsh@ip68-5-218-141.oc.oc.cox.net)
[04:01:35] <jamiejackson> nedbat, not really, this thing will kick off a process that doesn't really return anything
[04:01:45] *** Quits: Norore (~weechat@2a01:e0a:23a:5600:b9d3:ae19:12de:25b) (Quit: WeeChat 3.2)
[04:02:15] <jamiejackson> SnoopJ, this is during testing, not during real execution
[04:03:44] <SnoopJ> jamiejackson, another useful tool I like for for "spying" on something: https://pypi.org/project/q/
[04:04:00] *** Joins: whaley (~whaley@066-169-090-170.res.spectrum.com)
[04:04:08] <SnoopJ> (by the principal author of the `inspect` library, no less!)
[04:05:01] *** Joins: wyclif (~wyclif@user/wyclif)
[04:05:06] *** Quits: nac (~nac@user/nac) (Quit: The Lounge - https://thelounge.chat)
[04:05:32] <jamiejackson> q is interesting. a different animal than what i'm after, but good for the toolbox.
[04:05:42] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[04:05:45] *** Joins: nac (~nac@user/nac)
[04:08:12] *** Quits: nac (~nac@user/nac) (Client Quit)
[04:08:21] <jamiejackson> altendky, the "spying" i'm used to also involves mocks (a much broader term), but what's the lingo i need to look for in python land for what i call "spying" (inspecting an inner function's calls, responses, counts, etc.)?
[04:08:50] *** Joins: nac (~nac@user/nac)
[04:09:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[04:10:05] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 255 seconds)
[04:10:05] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[04:10:14] <nedbat> jamiejackson: when you use mock.patch, you get a mock object, which has attributes for the calls that have happened.
[04:11:11] <jamiejackson> looking that up, thanks.
[04:11:19] *** Quits: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it) (Quit: Leaving.)
[04:11:35] *** Quits: nac (~nac@user/nac) (Client Quit)
[04:11:43] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[04:12:07] <graingert> jamiejackson: Egg `assert m.mock_calls == [...`
[04:12:11] <graingert> Eg
[04:12:13] *** Joins: nac (~nac@user/nac)
[04:13:19] <SnoopJ> I'm a big fan of driving pudb through the execution a bit at a time, the variable inspector is quite good. I believe PyCharm's debugger has the same.
[04:13:37] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[04:14:06] <SnoopJ> uh, unless "what happened to this object, was it the right thing?" is what you're after here. I may have misread the question, upon reflection :)
[04:16:38] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 268 seconds)
[04:17:22] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 240 seconds)
[04:17:24] <altendky> jamiejackson: i would think that the reason you would tdd from the inside out is that the inside can exist before the outside does, so you can pass a test without having developed the entire application.
[04:19:41] *** Quits: drincruz_ (~drincruz@cpe-69-203-74-164.hvc.res.rr.com) (Ping timeout: 252 seconds)
[04:22:18] *** Quits: kericsson (~kericsson@user/kericsson) (Quit: Textual IRC Client: www.textualapp.com)
[04:22:34] *** Joins: wyclif (~wyclif@user/wyclif)
[04:23:23] *** Joins: computeiro (~Wender@189.37.67.180)
[04:24:26] <kevr> SnoopJ: Ah, my issues were due to Pyright being configured incorrectly for my virtualenv, but the error was hidden away behind some settings.
[04:24:27] *** Joins: Wulf4 (~Wulf@user/wulf)
[04:24:40] <kevr> i figured it had to be something along those lines.
[04:25:00] <kevr> The sqlalchemy types extensions are purely for mapped models.
[04:25:34] <SnoopJ> Aha, glad to hear that it wasn't some spooky requirement not to use that type
[04:25:44] <kevr> :P
[04:26:15] *** Joins: graywolf (~wolf@user/graywolf)
[04:26:31] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[04:26:49] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[04:26:51] *** Joins: CombatVet (~c4@user/combatvet)
[04:27:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[04:27:44] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 252 seconds)
[04:27:44] *** Wulf4 is now known as Wulf
[04:27:55] <jamiejackson> i'm reading through this: https://medium.com/analytics-vidhya/mocking-in-python-with-pytest-mock-part-i-6203c8ad3606 what import do i need for `mocker` to be available? my testing-related imports so far are "from mock import patch" and "import pytest"
[04:28:43] <nedbat> jamiejackson: mocker is a fixture, so you don't need an import
[04:29:07] <nedbat> jamiejackson: it's passed as an argument to your test function.
[04:29:25] <jamiejackson> okay, pycharm doesn't seem to resolve it, i'll just ignore that for now...
[04:31:41] *** Quits: {HD} (~{HD}@102.165.16.52) (Ping timeout: 255 seconds)
[04:34:15] *** Joins: audiocat (~audio@2603-8081-1800-00ad-cd5e-af49-8601-9338.res6.spectrum.com)
[04:38:31] *** Joins: wyclif (~wyclif@user/wyclif)
[04:40:43] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[04:41:18] *** Quits: matsaman (~matsaman@user/matsaman) (Ping timeout: 268 seconds)
[04:43:07] *** Joins: matsaman (~matsaman@user/matsaman)
[04:43:20] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[04:43:35] *** Joins: Riviera (Riviera@user/riviera)
[04:44:21] *** Quits: wolfshappen (~waff@irc.furworks.de) (Quit: later)
[04:45:09] <graywolf> Hello, I would like to ask a question but on the required site for pastes (https://bpa.st/+python) I get `Text exceeds spam score.`. Can I use different site for a pastes?
[04:45:25] <Yhg1s> graywolf: you can use any site you like.
[04:47:18] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[04:47:58] <graywolf> Cool, wasn't clear to me based on the channel topic. Anyway, I'm trying to compile a c++ extension for python, and the compilation works fine. These files are created https://paste.vpsfree.cz/FgInA42R/raw/ , but it looks like python is not able to find the files. I do not know much about python packages, so should it be able to load it? If not, how it should look so that python is able to process
[04:47:59] <jamiejackson> nedbat, i'm having a bad time. i'm missing something basic. i don't know now to make `mocker` resolve: https://gist.github.com/jamiejackson/24401bdd889f0f4160a9c8304995789e
[04:48:00] <graywolf> it?
[04:48:28] <nedbat> jamiejackson: you should have "mocker" as a parameter to your test function.
[04:48:47] <Yhg1s> graywolf: well, it's installing it in an .egg directory, which is not a good idea. Install the package with 'pip' instead of running 'setup.py install'.
[04:49:02] <Yhg1s> graywolf: other than that, that should work for a Python 3.9 installation on musl, on x86_64 hardware.
[04:49:34] <jamiejackson> just this, nedbat? `def test_servicenow_log_processing(mocker):`
[04:49:41] <nedbat> jamiejackson: yes
[04:49:51] <Yhg1s> graywolf: what are you running that's trying to import the package, and how is it failing?
[04:50:32] <graywolf> Yhg1s: Just `import libtorrent` and it fails with ModuleNotFoundError
[04:51:01] <Yhg1s> graywolf: what are you doing the import in? How was the Python doing the import started?
[04:51:29] <jamiejackson> only sadness, nedbat: https://gist.github.com/jamiejackson/18098581c0e342f57dd93d89f868cc7e
[04:51:45] <graywolf> Yhg1s: Just by running python3: https://paste.vpsfree.cz/iadIX:nq/raw/
[04:52:04] <nedbat> jamiejackson: oh, you need to install it:  https://pypi.org/project/pytest-mock/
[04:52:20] *** Joins: Fluxx (~Fluxx@user/fluxx)
[04:52:25] <Yhg1s> graywolf: what does 'import sys, pprint; print(sys.prefix); pprint.pprint(sys.path)' in that interpreter show?
[04:53:00] <graywolf> Yhg1s: https://paste.vpsfree.cz/EaDIBj_S/raw/
[04:53:22] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:54:20] <Yhg1s> graywolf: The install process that created /usr/lib/python3.9/site-packages/python_libtorrent-1.2.14-py3.9-linux-x86_64.egg should also have created a .pth file in /usr/lib/python3.9/site-packages that adds that directory to sys.path, which apparently didn't happen (or, Python was patched to not process .pth files, perhaps?) Using pip to install the package, or avoiding eggs some other way, should fix that
[04:54:25] <jamiejackson> nedbat, it's a miracle, thanks! now i'm going to try to use mock_calls
[04:54:26] <Yhg1s> problem.
[04:55:50] *** Joins: wyclif (~wyclif@user/wyclif)
[04:56:04] <graywolf> Yhg1s: Thanks, I will look into the .pth files and how to create one; I'm writing package for alpine, so using pip is probably not possible for me (I need to do make DESTDIR=xxx install and I'm not sure pip supports that); Thank you for the advice regarding the .pth, will check that out.
[04:56:05] *** Joins: jkl (~jkl@user/jkl)
[04:56:14] *** Joins: {HD} (~{HD}@102.165.16.92)
[04:56:44] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:58:02] *** Quits: cedric (~cedric@2a01:cb11:867:c200:d938:faa6:dd1:a5d4) (Quit: Konversation terminated!)
[04:58:17] <Yhg1s> graywolf: pip has a -t argument for installing in a particular location, but if you insist on not using pip, you should at least use --single-version-externally-managed, and probably other arguments to setuptools that I forgot existed. (pip handles this all very nicely)
[04:58:26] <Yhg1s> graywolf: oh, you want --root, not -t.
[04:59:47] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[04:59:47] <graywolf> Yhg1s: Ok, I will try the pip :) I checked and saw that some packages are already using it so it should be possible. Thank you
[05:00:20] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:03:26] <Gustavo6046> Is iterating through a dict's values as fast/efficient as iterating through a list?
[05:03:38] *** Quits: {HD} (~{HD}@102.165.16.92) (Ping timeout: 255 seconds)
[05:04:05] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 255 seconds)
[05:04:46] <Gustavo6046> What about a sparse list?
[05:05:06] <Gustavo6046> Nvm
[05:05:43] *** Quits: boB_K7IQ (~boB_K7IQ@152.44.147.180) (Ping timeout: 265 seconds)
[05:05:53] *** Quits: vimart (~vimart@85.255.232.169) (Ping timeout: 252 seconds)
[05:07:07] *** Joins: darksun (~darksun@user/darksun)
[05:10:15] *** Quits: grnman_ (~gandalf@c-73-49-209-161.hsd1.fl.comcast.net) (Remote host closed the connection)
[05:10:19] *** Joins: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com)
[05:10:21] <habnabit_> Gustavo6046, what's a sparse list
[05:10:50] <Gustavo6046> I wanted to see how much faster struct-of-arrays was than array-of-structs
[05:11:09] <Gustavo6046> Or in this case, a class with many member arrays, rather than an array of objects/tuples
[05:11:37] <Gustavo6046> One stores positions, the other velocities, and every tick the same operations would be applied: update positions by velocities, then reduce velocities
[05:12:06] <Gustavo6046> Is one for loop (one that does each update, and velocity drag, in each iteration) faster or slower than two for loops (each for a single such atomic operation)?
[05:12:40] *** Joins: tWqaq (~tWqaq@101.93.138.206)
[05:13:08] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:13:22] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 272 seconds)
[05:13:35] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 252 seconds)
[05:15:16] *** Quits: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com) (Ping timeout: 272 seconds)
[05:16:03] *** Joins: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net)
[05:16:24] <sgt_chuckles> My question is what is the most efficient way to keep track of the number of digits after a decimal point?
[05:16:33] <sgt_chuckles> (i.e. I want to return 4 from 93.4146)
[05:16:54] <matsaman> are you sure you need to worry about efficiency yet?
[05:16:58] <nedbat> sgt_chuckles: this is a tricky question.
[05:17:04] <matsaman> how inefficient for you is splitting and slicing?
[05:17:27] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[05:18:20] <nedbat> sgt_chuckles: what will you use the number of digits for?
[05:18:47] <MacGyver> Surely the sensible answer here is just arithmetic?
[05:18:59] <matsaman> split and len, even
[05:19:33] *** Quits: jkl (~jkl@user/jkl) (Quit: ZNC 1.8.2 - https://znc.in)
[05:19:45] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[05:20:24] *** Joins: jkl (~jkl@user/jkl)
[05:20:26] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My Mac Pro has gone to sleep. ZZZzzz…)
[05:21:07] <sgt_chuckles> wondering if there's any faster way than importing decimal, and doing decimal.Decimal('93.1231').as_tuple().exponent
[05:21:41] <nedbat> sgt_chuckles: you could try str(x) then using string operations.
[05:21:59] <nedbat> sgt_chuckles: but is it a speed-sensitive operation? How often are you doing this?
[05:22:33] <nedbat> sgt_chuckles: btw, your decimal.Decimal starts with a string already, so just use the string.
[05:22:52] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 272 seconds)
[05:24:03] <nedbat> sgt_chuckles: also, this feels like the kind of question that will shift as we get deeper into how the information will be used.
[05:24:59] *** Quits: jkl (~jkl@user/jkl) (Remote host closed the connection)
[05:26:53] *** Joins: jkl (~jkl@user/jkl)
[05:27:16] <sgt_chuckles> would using the string method be a better way to do this?
[05:27:47] <nedbat> sgt_chuckles: you'd have to try it to see what is faster. will you be answering any of our questions?
[05:28:11] <sgt_chuckles> ok
[05:29:05] *** Joins: {HD} (~{HD}@191.96.185.201)
[05:29:36] *** Quits: graywolf (~wolf@user/graywolf) (Quit: WeeChat 3.2)
[05:30:05] *** Quits: cryocaustik (~cryocaust@user/cryocaustik) (Remote host closed the connection)
[05:30:24] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:41] <nedbat> sgt_chuckles: what will you do with the number of digits?
[05:31:00] <sgt_chuckles> its just an exercise
[05:31:53] *** Quits: Milos (~Milos@user/milos) (Quit: ZNC 1.8.2 - https://znc.in)
[05:32:09] *** Joins: Milos (~Milos@user/milos)
[05:32:13] <nedbat> sgt_chuckles: hmm, ok.  why the interest in the speed of it?
[05:34:11] *** Joins: vlm (~vlm@user/vlm)
[05:35:58] <sgt_chuckles> well, im actually wondering how would the exponent specifically get us the number of digits preceding a decimal point? or do exponents mean something different entirely in this case?
[05:36:02] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f) (Ping timeout: 255 seconds)
[05:36:36] <sgt_chuckles> because im thinking of literal exponents like 3^2 where 2 would be an exponent
[05:36:51] *** Quits: LeoTal (~LeoTal@86.170.86.79.rev.sfr.net) (Quit: Leaving.)
[05:39:47] <nedbat> sgt_chuckles: the exponent in this case is from 931231 * 10e-4
[05:40:05] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 255 seconds)
[05:40:42] *** Quits: clawh_ (~clawh@185.244.214.60) (Ping timeout: 252 seconds)
[05:40:46] <nedbat> sgt_chuckles: DecimalTuple(sign=0, digits=(9, 3, 1, 2, 3, 1), exponent=-4)
[05:41:30] *** Quits: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea) (Quit: WeeChat 3.2)
[05:42:47] *** Quits: kmh (~kmh@p200300df5f086f00577dac48d2ae195c.dip0.t-ipconnect.de) (Ping timeout: 255 seconds)
[05:44:02] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[05:44:17] *** Joins: milosz_ (~milosz@user/milosz)
[05:44:22] *** Quits: Teacup_ (~teacup@user/teacup) (Quit: Teacup_)
[05:44:44] *** Joins: Teacup (~teacup@user/teacup)
[05:44:56] *** Joins: pete443_ (~pete@user/pete443)
[05:45:29] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[05:45:46] *** Quits: pete443 (~pete@user/pete443) (Ping timeout: 240 seconds)
[05:46:10] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[05:46:15] *** Joins: nbao (~nbao@2804:14c:5bb8:9720::1000)
[05:47:17] *** Quits: milosz (~milosz@user/milosz) (Ping timeout: 268 seconds)
[05:48:00] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[05:51:00] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[05:51:23] *** Quits: bilb_ono (~alexmarsh@ip68-5-218-141.oc.oc.cox.net) (Quit: bilb_ono)
[05:52:01] *** Joins: pnoud (~pnoud@user/pnoud)
[05:52:02] *** Quits: zeenk (~zeenk@2a02:2f04:a106:9600:82fb:aed9:ca9:38d3) (Quit: Konversation terminated!)
[05:53:53] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[05:54:31] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[05:55:07] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 246 seconds)
[05:55:50] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 255 seconds)
[05:55:54] *** Quits: akk (~akk@174-28-112-132.albq.qwest.net) (Quit: +++)
[05:57:02] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 252 seconds)
[05:57:03] *** Joins: akaWolf (~akaWolf@akawolf.org)
[05:57:13] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[05:58:24] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 265 seconds)
[05:58:26] *** Quits: Teacup (~teacup@user/teacup) (Quit: Teacup)
[05:58:37] *** Joins: drincruz_ (~drincruz@cpe-69-203-74-164.hvc.res.rr.com)
[05:58:48] *** Joins: Teacup (~teacup@user/teacup)
[05:59:20] *** Joins: Julian (~tos9@python/site-packages/Julian)
[06:00:58] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[06:01:18] *** Quits: Teacup (~teacup@user/teacup) (Client Quit)
[06:01:43] *** Joins: Teacup (~teacup@user/teacup)
[06:02:01] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[06:03:29] *** Quits: {HD} (~{HD}@191.96.185.201) (Ping timeout: 255 seconds)
[06:03:56] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 255 seconds)
[06:09:07] *** Quits: Teacup (~teacup@user/teacup) (Quit: Teacup)
[06:09:08] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 252 seconds)
[06:09:30] *** Joins: Teacup (~teacup@user/teacup)
[06:09:47] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:10:08] *** Quits: brabrax- (~brabrax@user/brabrax) (Ping timeout: 252 seconds)
[06:12:16] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[06:12:26] *** Quits: hegstal (~hegstal@2a02:c7f:7604:8a00:7018:37c7:e025:203e) (Ping timeout: 252 seconds)
[06:14:11] *** Quits: Teacup (~teacup@user/teacup) (Client Quit)
[06:14:23] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[06:14:35] *** Joins: Teacup (~teacup@user/teacup)
[06:14:44] *** Quits: Teacup (~teacup@user/teacup) (Client Quit)
[06:15:07] *** Joins: Teacup (~teacup@user/teacup)
[06:16:49] *** Quits: Teacup (~teacup@user/teacup) (Client Quit)
[06:17:12] *** Joins: Teacup (~teacup@user/teacup)
[06:18:13] *** Quits: twobitsprite (~twobitspr@107.13.51.62) (Ping timeout: 265 seconds)
[06:19:02] *** Joins: bilb_ono (~alexmarsh@ip68-5-218-141.oc.oc.cox.net)
[06:19:21] *** Joins: {HD} (~{HD}@102.165.16.102)
[06:20:08] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 255 seconds)
[06:21:42] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.2)
[06:21:44] *** Quits: thekingofbandit (thekingofb@user/thekingofbandit) (Remote host closed the connection)
[06:21:56] *** Quits: nac (~nac@user/nac) (Ping timeout: 255 seconds)
[06:22:04] *** Joins: Togra (~Togra@user/togra)
[06:22:26] *** Jormungandr89 is now known as MercilessDeth
[06:23:28] <Togra> so I'm using tkinter, I've got a dialog box with a large tkinter.Text widget in it, which is working pretty well, but I'm wondering if there's a way to make it so <Return> doesn't put a carriage return into the text widget, even if it's focused
[06:23:33] *** Joins: nac (~nac@user/nac)
[06:23:58] <Togra> right now is does both that and hits the "ok" button and closes the window, and I want it to only close the window and not add a carriage return to the text, while shift-return adds a return without closing the window. I have shift-return working like this so far
[06:24:19] <Togra> but I need to find a way to make <Return> do nothing with the text widget, and I'm having a hard time finding out how
[06:24:32] *** Quits: MercilessDeth (~brad@136.49.61.2) (Quit: Konversation terminated!)
[06:24:53] *** Joins: MercilessDeth (~brad@136.49.61.2)
[06:29:29] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 252 seconds)
[06:29:45] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[06:30:53] *** Quits: nac (~nac@user/nac) (Quit: The Lounge - https://thelounge.chat)
[06:30:53] *** Quits: jamiejackson (~jamiejack@207.172.87.34) (Quit: Connection closed)
[06:31:41] *** Quits: drincruz_ (~drincruz@cpe-69-203-74-164.hvc.res.rr.com) (Ping timeout: 252 seconds)
[06:31:47] *** Joins: nac (~nac@user/nac)
[06:33:32] *** Quits: bilb_ono (~alexmarsh@ip68-5-218-141.oc.oc.cox.net) (Quit: bilb_ono)
[06:33:34] *** Quits: nac (~nac@user/nac) (Client Quit)
[06:33:56] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[06:34:17] *** Joins: nac (~nac@user/nac)
[06:36:24] *** Joins: nac0 (~nac@user/nac)
[06:36:34] *** Quits: nac (~nac@user/nac) (Read error: Connection reset by peer)
[06:36:35] *** nac0 is now known as nac
[06:37:11] *** Quits: nac (~nac@user/nac) (Client Quit)
[06:37:53] *** Joins: nac0 (~nac@user/nac)
[06:38:35] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 255 seconds)
[06:42:53] *** Joins: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com)
[06:43:46] *** Quits: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-147.dsl.bell.ca) (Ping timeout: 246 seconds)
[06:45:35] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My Mac Pro has gone to sleep. ZZZzzz…)
[06:45:53] *** Joins: Julian (~tos9@python/site-packages/Julian)
[06:46:18] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Ping timeout: 240 seconds)
[06:47:31] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[06:47:35] *** Quits: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com) (Ping timeout: 255 seconds)
[06:47:57] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[06:48:09] *** Joins: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-147.dsl.bell.ca)
[06:48:23] *** Joins: jstein_ (~jstein@gentoo/developer/jstein)
[06:49:16] <Widdershins> Togra: do you want the text widget to be unable to contain newlines? that's usually a property you can set in my gui programming experience
[06:50:23] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 252 seconds)
[06:51:19] *** Quits: LuxuryMode (uid91005@id-91005.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[06:51:28] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[06:51:45] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:51:45] *** FinnElija is now known as Guest8187
[06:51:45] *** finn_elija is now known as FinnElija
[06:52:05] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 255 seconds)
[06:52:29] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[06:53:25] <Togra> I want it to be able to have newlines, just not set with only the enter key, only shift-enter
[06:53:41] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Ping timeout: 252 seconds)
[06:53:42] <Togra> shift enter for adding newlines, non-shift enter for keyboard "ok" key shortcut
[06:54:06] <Togra> so far I've got almost all of this, except non-shift enter also adds a newline as it closes the window, and I want that specific thing to not happen
[06:54:27] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[06:54:37] *** Quits: Guest8187 (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 246 seconds)
[06:54:46] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:4d98:f5d8:40a0:ce97) (Read error: Connection reset by peer)
[06:54:59] *** Joins: hendursaga (~weechat@user/hendursaga)
[06:55:20] *** Quits: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-147.dsl.bell.ca) (Ping timeout: 252 seconds)
[06:58:54] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[07:02:17] *** Quits: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) (Quit: Leaving)
[07:02:56] *** Joins: northernsage (~northerns@187.107.158.146)
[07:03:11] *** Joins: boB_K7IQ (~boB_K7IQ@c-73-254-117-91.hsd1.wa.comcast.net)
[07:03:29] *** Quits: tabakhase (tabakhase@user/tabakhase) (Quit: ZNC - http://znc.in)
[07:03:47] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:5c84:451b:98f1:cfd6)
[07:03:56] *** Joins: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-147.dsl.bell.ca)
[07:03:59] *** Quits: venmx (~albasawa@host31-53-197-249.range31-53.btcentralplus.com) (Ping timeout: 258 seconds)
[07:04:24] *** Quits: nyah (~nyah@90.221.186.180) (Quit: leaving)
[07:04:24] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:5c84:451b:98f1:cfd6) (Read error: Connection reset by peer)
[07:06:01] *** Joins: venmx (~albasawa@host31-52-42-93.range31-52.btcentralplus.com)
[07:06:19] *** Joins: Snyp (~rksht@49.207.215.109)
[07:07:31] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[07:08:17] <Widdershins> you may be able to have a keystroke handler that prevents default handling conditionally
[07:08:30] <Widdershins> that's how it works in javascript but i am unfortunately quite unfamiliar with tkinter
[07:08:36] *** Joins: darksun (~darksun@user/darksun)
[07:09:21] *** Joins: tabakhase (tabakhase@user/tabakhase)
[07:09:21] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[07:09:42] *** Joins: northernsage (~northerns@187.107.158.146)
[07:11:45] *** Joins: tm007 (uid287041@id-287041.highgate.irccloud.com)
[07:12:01] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[07:12:26] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 272 seconds)
[07:12:28] *** Quits: trace987 (~trace@ip5b429953.dynamic.kabel-deutschland.de) (Ping timeout: 246 seconds)
[07:14:02] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 252 seconds)
[07:14:26] <Togra> I'll look into those things
[07:14:45] <Togra> I think most people have moved on from tkinter to other GUI toolkits, but this looked handy at the time I started the project lol
[07:15:14] <Widdershins> yeah lol. i think it's still moderately common and easy to use but i'm not sure how well it handles nuanced requirements like this. sorry i'm not the person to ask!
[07:15:16] *** Quits: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-147.dsl.bell.ca) (Ping timeout: 246 seconds)
[07:16:13] <Togra> no problem, python's big and it's easy to use a lot of python without necessarily using any tkinter in particular
[07:17:15] *** Joins: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-147.dsl.bell.ca)
[07:17:15] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[07:17:20] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 252 seconds)
[07:23:25] *** Quits: Derailed (~tom@ec2-13-211-184-100.ap-southeast-2.compute.amazonaws.com) (Quit: ZNC - https://znc.in)
[07:27:05] *** Joins: Derailed (~tom@ec2-13-211-184-100.ap-southeast-2.compute.amazonaws.com)
[07:27:14] *** Quits: whaley (~whaley@066-169-090-170.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:30:02] *** Quits: jstein_ (~jstein@gentoo/developer/jstein) (Quit: quit)
[07:30:07] <tm007> what's alternate to tkinter?
[07:31:05] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 252 seconds)
[07:32:04] *** Quits: Natt0 (~Natalie@cust-143-196-110-94.dyn.as47377.net) (Read error: Connection reset by peer)
[07:32:16] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[07:33:17] *** Quits: northernsage (~northerns@187.107.158.146) (Quit: leaving)
[07:33:30] *** Joins: northernsage (~northerns@187.107.158.146)
[07:34:08] <Togra> GTK, QT might fill that space? this is the first GUI application I've worked on so my understanding may be super super shaky
[07:34:33] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[07:34:47] <tm007> I've never worked on Python GUI app
[07:34:55] <tm007> My knowledge is even worse
[07:35:01] *** Joins: y1n (~y1n@84-115-65-187.wifi.dynamic.surfer.at)
[07:35:05] <tm007> What are you amking?
[07:35:15] *** Joins: Wulf4 (~Wulf@user/wulf)
[07:35:59] *** Quits: northernsage (~northerns@187.107.158.146) (Client Quit)
[07:36:11] *** Joins: northernsage (~northerns@187.107.158.146)
[07:36:29] *** Joins: skapata (~Skapata@user/skapata)
[07:36:32] <Togra> I've got a small text RPG game thing, and the editor to make campaigns is in tkinter so it's easier to do. ironic since the game is all text but the editor is a GUI
[07:36:41] <Togra> it's working great, I'm just cleaning up some details and rough edges
[07:37:01] *** Joins: gggpkm (~gggpkm@60.10.194.47)
[07:37:06] <tm007> interesting stuff man
[07:37:07] *** Joins: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com)
[07:37:13] <tm007> must be fun to work on it
[07:37:28] <Togra> thanks, yeah it's a lot of fun, working with GUI stuff is really neat to do, a lot more tangible in some ways
[07:37:59] <Togra> tkinter is a little tricky in some ways, but I imagine that isn't just it being older but more just that every toolkit has its downsides and pain points
[07:38:47] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 252 seconds)
[07:38:47] *** Wulf4 is now known as Wulf
[07:38:53] *** Quits: catdog2 (~quassel@2001:470:50f7:cdcd::cd1) (Quit: No Ping reply in 120 seconds.)
[07:39:20] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[07:39:23] *** Quits: slavfox (~slavfox@93.158.232.111) (Quit: ZNC 1.8.2 - https://znc.in)
[07:39:24] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Quit: Will return)
[07:39:43] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[07:39:45] *** Quits: noctavian (~noctavian@gateway/tor-sasl/noctavian) (Quit: ZNC 1.8.2 - https://znc.in)
[07:39:54] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Ping timeout: 240 seconds)
[07:39:55] *** Joins: noctavian_ (~noctavian@gateway/tor-sasl/noctavian)
[07:39:58] *** Joins: pwnd_sfw4 (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[07:40:10] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Read error: Connection reset by peer)
[07:40:10] *** pwnd_sfw4 is now known as pwnd_sfw
[07:40:12] *** Joins: catdog (~quassel@2001:470:50f7:cdcd::cd1)
[07:40:19] *** Joins: candyman (~candyman@user/candyman)
[07:40:26] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 244 seconds)
[07:40:26] *** Quits: jacktar (~whiteshad@gateway/tor-sasl/jacktar) (Ping timeout: 244 seconds)
[07:40:43] *** Joins: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl)
[07:40:45] <tm007> Yeah
[07:40:47] <tm007> true
[07:40:56] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 272 seconds)
[07:40:57] *** Joins: jacktar (~whiteshad@gateway/tor-sasl/jacktar)
[07:41:59] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[07:42:05] *** Quits: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com) (Ping timeout: 252 seconds)
[07:42:13] *** Quits: autopsy (~autopsy@2600:8800:ff0d:400:11f4:a4c3:52ba:2331) (Quit: Leaving)
[07:42:16] *** Joins: Julian (~tos9@python/site-packages/Julian)
[07:42:20] <circuitbone> Did you use packing or grid in the layout tm007 ?
[07:42:50] <circuitbone> Togra: ^
[07:43:26] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[07:43:28] <Togra> grid
[07:43:47] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Quit: Leaving)
[07:44:03] *** Quits: dvu (~danielvu@168.235.66.22) (Quit: WeeChat 3.1)
[07:44:06] <Togra> for the text widget, for the ok and cancel buttons I call tkinter.simpledialog.Dialog's super().buttonbox() to set those up, then rebind shift-enter so it won't close the window
[07:44:18] <Togra> those might be pack but I don't recall, if they are it doesn't get mad
[07:44:28] <circuitbone> https://www.irccloud.com/pastebin/vLQPzEnl/fastgrid.py
[07:44:47] <circuitbone> I had a tkinter job years ago with a stack of data and found pre loading all the cells fast.
[07:45:21] *** Joins: wyclif (~wyclif@user/wyclif)
[07:45:31] <Togra> oh nice
[07:45:32] <circuitbone> all good
[07:45:49] <circuitbone> That might help you laying out game grids etc.
[07:46:19] <Togra> https://bpa.st/4EVA cool, I'll keep it handy
[07:46:32] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 255 seconds)
[07:46:34] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 240 seconds)
[07:46:46] <circuitbone> Are you making modals?
[07:46:49] <Togra> so far this is what I'm working with, it's a widget basically just to have a large text field with which I can edit strings on objects, it works for that purpose great, and I do want to be able to use carriage returns in the strings sometimes
[07:47:09] <Togra> just trying to get keybinds to work how I want
[07:47:12] <circuitbone> ah ok
[07:47:18] <Togra> I don't think I'm using modals
[07:47:24] <circuitbone> ok
[07:47:35] <circuitbone> https://game-icons.net/ I use this for my placeholders.
[07:48:41] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[07:49:06] *** Quits: northernsage (~northerns@187.107.158.146) (Quit: leaving)
[07:49:18] *** Joins: northernsage (~northerns@187.107.158.146)
[07:50:43] *** Joins: parzival (~parzival@user/parzival)
[07:52:51] *** Joins: pnoud (~pnoud@user/pnoud)
[07:52:58] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 240 seconds)
[07:54:07] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 246 seconds)
[07:54:42] *** Joins: cheater (~Username@user/cheater)
[07:55:50] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:55:59] *** Quits: y1n (~y1n@84-115-65-187.wifi.dynamic.surfer.at) (Ping timeout: 255 seconds)
[07:56:11] <kevr> Does pyright supported reStructuredText?
[07:57:27] *** Quits: SpeakerToMeat (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[07:57:44] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[07:58:02] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[07:58:03] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[07:58:13] *** Joins: SpeakerToMeat (~Speaker@user/speakertomeat)
[07:58:27] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[07:59:29] <Wulf> kevr: how is a type checker related to documentation?
[07:59:41] *** Joins: dvu (~danielvu@168.235.66.22)
[08:00:12] <kevr> Wulf: it is not just a type checker, it also does semantic completion. It parses docstrings for function help.
[08:00:14] *** Joins: p-i-_ (~Ohmu@node-nem.pool-1-0.dynamic.totinternet.net)
[08:01:31] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[08:01:31] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[08:01:58] *** Joins: northernsage (~northerns@187.107.158.146)
[08:03:06] *** Quits: p-i- (~Ohmu@node-ot2.pool-118-173.dynamic.totinternet.net) (Ping timeout: 265 seconds)
[08:04:50] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[08:05:25] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[08:08:33] *** Quits: woky (~woky@li1651-31.members.linode.com) (Quit: Nothing in this world is hopeless!)
[08:08:48] *** Joins: woky (~woky@li1651-31.members.linode.com)
[08:09:09] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:10:31] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[08:10:39] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[08:10:39] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[08:11:12] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[08:14:40] *** Joins: grnman_ (~gandalf@c-73-49-209-161.hsd1.fl.comcast.net)
[08:14:57] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My Mac Pro has gone to sleep. ZZZzzz…)
[08:15:32] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 252 seconds)
[08:15:36] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:16:37] <AhmedAmerican> using return inside while loop without break is safe ?
[08:17:26] <kevr> yes, it is.
[08:17:35] *** Quits: LiftLeft (~LiftLeft@154.21.28.156) (Ping timeout: 255 seconds)
[08:19:09] <Wulf> kevr: perhaps you should simply try it and see. Sorry, can't help :)
[08:21:28] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 272 seconds)
[08:22:16] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[08:22:19] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[08:23:17] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[08:24:37] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[08:30:43] <kevr> I did try it and see. That's why I ask, because it doesn't seem to by default.
[08:31:22] *** Joins: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com)
[08:33:00] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[08:33:02] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[08:33:11] *** Joins: northernsage (~northerns@187.107.158.146)
[08:33:31] *** Quits: SirScott (~SirScott@c-67-176-100-163.hsd1.co.comcast.net) (Quit: Ping timeout (120 seconds))
[08:34:25] *** Joins: SirScott (~SirScott@c-67-176-100-163.hsd1.co.comcast.net)
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:37] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:37:05] *** Quits: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com) (Ping timeout: 252 seconds)
[08:37:07] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[08:37:32] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[08:38:42] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[08:39:00] *** Joins: northernsage (~northerns@187.107.158.146)
[08:39:14] *** Joins: NeoCore (~neocore@217.138.207.156)
[08:39:38] <Wulf> kevr: ok. Then download the source and grep it for rst, restructured, or similar.
[08:40:38] *** Joins: webvictim (~gus@mnemosyne.webvictim.net)
[08:42:25] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Ping timeout: 246 seconds)
[08:42:32] *** Quits: riposte (~finalripo@2403-5800-3200-5c02--310.ip6.aussiebb.net) (Quit: Quitting)
[08:43:06] <Widdershins> chances are someone has made a fairly usable chat client somewhere in tkinter that you can maybe try stealing the key handling from Togra, that's pretty much my only remaining thought
[08:44:59] <Togra> I ended up getting it figured out through some odd bindings, feels a little hacky but seems to work
[08:45:26] <Togra> I have shift-enter bound under both buttonbox and body to do nothing, which lets it still add carriage returns but it doesn't hit "ok", and return is bound to move the cursor to the end of the window
[08:45:28] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[08:45:41] <Togra> which, luckily, seems to happen before it hits "ok". I have .strip() run on the text's contents so it works out
[08:46:26] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[08:46:50] *** Quits: SirScott (~SirScott@c-67-176-100-163.hsd1.co.comcast.net) (Ping timeout: 255 seconds)
[08:47:53] *** Joins: Julian (~tos9@python/site-packages/Julian)
[08:48:42] *** Quits: candyman (~candyman@user/candyman) (Remote host closed the connection)
[08:50:08] *** Joins: SirScott (~SirScott@c-67-176-100-163.hsd1.co.comcast.net)
[08:50:24] <Widdershins> Togra: oh apparently you can return "break" from the handler to curtail further handling of the event
[08:50:26] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 255 seconds)
[08:50:36] <Togra> :O
[08:50:36] <Widdershins> maybe try that instead
[08:50:49] <Togra> nice, yeah I'll check that out. my solution works but yours sounds like it's not a hack lol
[08:51:09] <Widdershins> yeah i'm just googling shit and clicking on partially-related stackoverflow answers and that jumped out at me
[08:52:33] <Widdershins> i might also presume that as a rule the most recently registered handlers run first but you might want to verify that
[08:52:33] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[08:52:56] *** Joins: northernsage (~northerns@187.107.158.146)
[08:53:34] *** Quits: StuffRoeySays (~Roey@user/Roey) (Quit: Client exiting)
[08:54:02] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 255 seconds)
[09:00:12] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[09:00:54] *** Joins: sgn (~sgn@user/sgn)
[09:01:24] *** Parts: Warped (~Warped@user/warped) (I'm outta here! :P)
[09:01:47] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[09:06:26] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:07:33] *** Joins: riposte (~finalripo@2403-5800-3200-5c02--310.ip6.aussiebb.net)
[09:09:37] *** Joins: darksun (~darksun@user/darksun)
[09:10:08] *** Quits: Maikel (~Maikel@130.61.63.136) (Quit: The Lounge - https://thelounge.chat)
[09:10:16] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[09:10:59] *** Joins: Lando-SpacePimp (~LandoC@user/lando-spacepimp)
[09:12:12] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[09:12:39] *** Joins: trace987 (~trace@ip5b429953.dynamic.kabel-deutschland.de)
[09:12:44] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 252 seconds)
[09:14:54] *** Joins: Maikel (~Maikel@130.61.63.136)
[09:17:34] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[09:17:34] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[09:18:07] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 246 seconds)
[09:18:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[09:18:48] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[09:19:00] *** Joins: northernsage (~northerns@187.107.158.146)
[09:19:37] *** Joins: wyclif (~wyclif@user/wyclif)
[09:21:39] *** Quits: therealjumbo (~zignegoj@mail.hedonline.com) (Read error: Connection reset by peer)
[09:21:45] *** Joins: therealjumbo1 (~zignegoj@mail.hedonline.com)
[09:24:47] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[09:25:00] *** Joins: northernsage (~northerns@187.107.158.146)
[09:25:41] *** Joins: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com)
[09:27:45] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[09:27:47] *** Quits: nbao (~nbao@2804:14c:5bb8:9720::1000) (Ping timeout: 255 seconds)
[09:27:55] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[09:28:30] *** Joins: nbao (~nbao@2804:14c:5bb8:9720::1000)
[09:30:09] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[09:30:26] *** Quits: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com) (Ping timeout: 252 seconds)
[09:30:43] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[09:31:32] *** Quits: dibber (~dibber@c-73-14-187-235.hsd1.co.comcast.net) (Ping timeout: 252 seconds)
[09:31:33] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[09:31:47] *** Joins: northernsage (~northerns@187.107.158.146)
[09:32:24] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 272 seconds)
[09:35:23] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[09:35:47] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 258 seconds)
[09:36:34] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:41:01] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Read error: Connection reset by peer)
[09:41:14] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[09:42:35] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[09:42:42] *** Joins: noobly (~noobly@50.38.126.25)
[09:43:30] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[09:43:30] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[09:43:42] *** Joins: northernsage (~northerns@187.107.158.146)
[09:44:01] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 246 seconds)
[09:45:28] <noobly> I'm having a weird problem with a NN/MLP (using the MNIST handwriting dataset), where it peaks quickly and then sharply declines. If anyone feels like playing with it, the code is here: https://dpaste.com/H75BAX84M.
[09:46:20] *** Quits: wedwards (~wedwards@rtr0.17.31.bogert.cyberfusion.cloud) (Ping timeout: 272 seconds)
[09:46:41] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 255 seconds)
[09:50:25] *** Joins: pro (~pro@user/pro)
[09:51:18] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[09:51:32] *** Joins: northernsage (~northerns@187.107.158.146)
[09:53:41] *** Joins: pnoud (~pnoud@user/pnoud)
[09:54:01] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[09:58:34] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 240 seconds)
[09:59:24] *** Quits: nac0 (~nac@user/nac) (Quit: The Lounge - https://thelounge.chat)
[10:00:03] *** Joins: nac0 (~nac@user/nac)
[10:03:51] *** Joins: LiftLeft (~LiftLeft@154.21.23.73)
[10:06:00] *** Quits: nbao (~nbao@2804:14c:5bb8:9720::1000) (Quit: WeeChat 3.2)
[10:09:32] *** Parts: pro (~pro@user/pro) (WeeChat 3.2)
[10:12:06] *** Quits: noobly (~noobly@50.38.126.25) (Quit: Client closed)
[10:16:57] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[10:19:53] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 265 seconds)
[10:19:55] *** Quits: [_] (~itchyjunk@user/itchyjunk/x-7353470) (Client Quit)
[10:19:57] *** Joins: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com)
[10:24:46] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[10:24:58] *** Quits: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com) (Ping timeout: 272 seconds)
[10:26:14] *** Quits: LiftLeft (~LiftLeft@154.21.23.73) (Ping timeout: 272 seconds)
[10:27:11] *** Quits: Snyp (~rksht@49.207.215.109) (Ping timeout: 255 seconds)
[10:29:18] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[10:30:47] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 255 seconds)
[10:33:39] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[10:33:56] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 255 seconds)
[10:38:22] *** Joins: Pickchea (~private@user/pickchea)
[10:38:27] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[10:39:10] *** Joins: Vonter (~Vonter@user/vonter)
[10:40:55] *** Joins: Julian (~tos9@python/site-packages/Julian)
[10:41:22] *** Joins: Pseudocrat (~skovacs@user/pseudocrat)
[10:44:19] *** Quits: zaquest (~notzaques@5.128.210.178) (Remote host closed the connection)
[10:45:16] *** Joins: pnoud (~pnoud@user/pnoud)
[10:45:18] *** Joins: zaquest (~notzaques@5.128.210.178)
[10:46:23] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[10:46:31] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:a6ea:d549:1785:23d0) (Quit: Leaving)
[10:46:33] *** Joins: rsrx (~rsrx@103.225.150.81)
[10:47:25] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:47:53] *** Joins: seednode (~seednode@user/seednode)
[10:48:28] *** Quits: Pseudocrat (~skovacs@user/pseudocrat) (Quit: WeeChat 3.3-dev)
[10:49:54] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[10:50:08] *** Joins: northernsage (~northerns@187.107.158.146)
[10:54:16] *** Quits: northernsage (~northerns@187.107.158.146) (Client Quit)
[10:54:27] *** Joins: northernsage (~northerns@187.107.158.146)
[10:54:38] *** Quits: TheRAt (~TheRAt@user/therat) (*.net *.split)
[10:54:38] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (*.net *.split)
[10:54:38] *** Quits: pan (~quassel@pankid.club) (*.net *.split)
[10:54:38] *** Quits: bambams (~bambams@165.227.200.42) (*.net *.split)
[10:54:38] *** Quits: Yasumoto (~Yasumoto@ec2-34-212-228-153.us-west-2.compute.amazonaws.com) (*.net *.split)
[10:54:38] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (*.net *.split)
[10:54:38] *** Quits: waxfire23 (~waxfire@65.119.2.240) (*.net *.split)
[10:54:38] *** Quits: vbgunz (~vbgunz@35.141.71.47) (*.net *.split)
[10:54:38] *** Quits: connor_goodwolf (~connor@user/connor-goodwolf/x-2615606) (*.net *.split)
[10:54:38] *** Quits: Cheaterman (~Cheaterma@82-65-202-73.subs.proxad.net) (*.net *.split)
[10:54:38] *** Quits: streety (~streety@li761-24.members.linode.com) (*.net *.split)
[10:54:38] *** Quits: anddam (~anddam@user/anddam) (*.net *.split)
[10:54:38] *** Quits: drjp (jeanpaul@112-54-174-82.ftth.glasoperator.nl) (*.net *.split)
[10:54:38] *** Quits: et (~et@user/et) (*.net *.split)
[10:54:38] *** Quits: PublicWiFi (~PublicWiF@user/publicwifi) (*.net *.split)
[10:54:38] *** Quits: kungp (~kungp@h-46-59-2-200.A230.priv.bahnhof.se) (*.net *.split)
[10:54:38] *** Quits: launchd (examknow@bitbot/launchd) (*.net *.split)
[10:54:38] *** Quits: Kaya (~KC@static.89.202.216.95.clients.your-server.de) (*.net *.split)
[10:54:38] *** Quits: somlis (~somlis@user/somlis) (*.net *.split)
[10:54:38] *** Quits: rddd (~rdd@c-407ce255.012-81-73746f39.cust.ownit.se) (*.net *.split)
[10:54:38] *** Quits: JerryXiao (~JerryXiao@user/jerryxiao) (*.net *.split)
[10:54:38] *** Quits: sunny93 (~sunny93@wireguard/tunneler/sunny93) (*.net *.split)
[10:54:38] *** Quits: moto (~moto@user/moto) (*.net *.split)
[10:54:38] *** Quits: daniel-k (~daniel-k@192.241.135.211) (*.net *.split)
[10:54:38] *** Quits: barometz (~dvanb@i117058.upc-i.chello.nl) (*.net *.split)
[10:54:38] *** Quits: tkazi (~tkazi@user/tkazi) (*.net *.split)
[10:54:38] *** Quits: odrling (~odrling@korone.aidoru.agency) (*.net *.split)
[10:54:38] *** Quits: jjasghar (~quassel@user/jjasghar) (*.net *.split)
[10:54:38] *** Quits: alexyov (~alexyov@84.22.6.244) (*.net *.split)
[10:54:38] *** Quits: phylaz (~phylaz@219.92-221-176.customer.lyse.net) (*.net *.split)
[10:54:38] *** Quits: kn100 (~kn100@wireguard/tunneler/kn100) (*.net *.split)
[10:54:38] *** Quits: MrFixIt (~samurai_@c-73-246-215-75.hsd1.il.comcast.net) (*.net *.split)
[10:54:38] *** Quits: Duckle (~Duckle@user/duckle) (*.net *.split)
[10:54:38] *** Quits: MrBurns (~japa@ec2-13-48-124-121.eu-north-1.compute.amazonaws.com) (*.net *.split)
[10:54:38] *** Quits: nohop (~nohup@crack.nohup.nl) (*.net *.split)
[10:54:38] *** Quits: nedbat (~nedbat@python/psf/nedbat) (*.net *.split)
[10:54:38] *** Quits: jfb4 (~jfb4@178.62.2.68) (*.net *.split)
[10:54:38] *** Quits: Alexer (~alexer@alexer.net) (*.net *.split)
[10:54:38] *** Quits: etiennem- (~etienne@176-149-215-214.abo.bbox.fr) (*.net *.split)
[10:54:38] *** Quits: simon816 (~simon816@ec2-35-178-246-72.eu-west-2.compute.amazonaws.com) (*.net *.split)
[10:54:38] *** Quits: zerok (~zerok@user/zerok) (*.net *.split)
[10:54:38] *** Quits: spirit (~spirit@user/spirit) (*.net *.split)
[10:54:38] *** Quits: Vultyre (~vultyre@user/vultyre) (*.net *.split)
[10:54:38] *** Quits: bbear (~znc@21212.s.t4vps.eu) (*.net *.split)
[10:54:38] *** Quits: libussa (~libussa@libussa.net) (*.net *.split)
[10:54:38] *** Quits: OliverUK (~opashley@70.138.105.34.bc.googleusercontent.com) (*.net *.split)
[10:54:38] *** Quits: oisota (~oisota@user/oisota) (*.net *.split)
[10:54:38] *** Quits: erhandsome (~erhandsom@user/erhandsome) (*.net *.split)
[10:54:38] *** Quits: kinabalu (~kinabalu@about/java/kinabalu) (*.net *.split)
[10:54:38] *** Quits: Ogmios (~Ogmios@user/ogmios) (*.net *.split)
[10:54:38] *** Quits: wintrmute (~wintrmute@bit.pappanaka.com) (*.net *.split)
[10:54:38] *** Quits: seoul_man (~meh@user/seoul-man/x-5066766) (*.net *.split)
[10:54:38] *** Quits: lack (~lack@user/lack) (*.net *.split)
[10:54:38] *** Quits: arti (~arti@193.40.103.195) (*.net *.split)
[10:54:38] *** Quits: mteo (francis@user/francis) (*.net *.split)
[10:54:38] *** Quits: francis (francis@user/francis) (*.net *.split)
[10:54:38] *** Quits: coldenbrewed (~nitrobrew@li1517-39.members.linode.com) (*.net *.split)
[10:54:38] *** Quits: webvictim (~gus@mnemosyne.webvictim.net) (*.net *.split)
[10:54:38] *** Quits: Anarchic (~Anarchic@getlegit.co.uk) (*.net *.split)
[10:54:38] *** Quits: rookie101 (~rookie@207.154.204.166) (*.net *.split)
[10:54:38] *** Quits: Karyon (~Karyon@user/karyon) (*.net *.split)
[10:54:38] *** Quits: sud (~sud@user/sud) (*.net *.split)
[10:54:38] *** Quits: mpmc (~mpmc@user/mpmc) (*.net *.split)
[10:54:38] *** Quits: RemiYuko (~licht@user/akechishiro) (*.net *.split)
[10:54:38] *** Quits: Makdaam (makdaam@user/makdaam) (*.net *.split)
[10:54:38] *** Quits: quasineutral (~quaisneut@user/quasineutral) (*.net *.split)
[10:54:38] *** Quits: gggpkm (~gggpkm@60.10.194.47) (*.net *.split)
[10:54:38] *** Quits: c10l (~c10l@89.34.167.207) (*.net *.split)
[10:54:38] *** Quits: GvP (~GvP@ip70-162-85-176.ph.ph.cox.net) (*.net *.split)
[10:54:38] *** Quits: Hazza (~Haxxa@122-199-59-136.ip4.superloop.com) (*.net *.split)
[10:54:38] *** Quits: Zer0xFF (michael@matrix.michaelsasser.org) (*.net *.split)
[10:54:38] *** Quits: mixfix41 (~homefame@user/mixfix41) (*.net *.split)
[10:54:38] *** Quits: redj (~quassel@bras-base-bchmpq5707w-grc-24-76-69-197-62.dsl.bell.ca) (*.net *.split)
[10:54:38] *** Quits: aquijoule__ (~richbridg@213-225-7-126.nat.highway.a1.net) (*.net *.split)
[10:54:38] *** Quits: nuala (~nuala@user/nuala) (*.net *.split)
[10:54:38] *** Quits: crawler (~crawler@user/crawler) (*.net *.split)
[10:54:38] *** Quits: jaggz (~jaggz@user/jaggz) (*.net *.split)
[10:54:38] *** Quits: ST47 (~ST47@user/st47) (*.net *.split)
[10:54:38] *** Quits: Somni (insomnia@193-227-58-66.gci.net) (*.net *.split)
[10:54:38] *** Quits: notevil (~notevil@user/notevil) (*.net *.split)
[10:54:38] *** Quits: chemsmith (~chemsmith@user/chemsmith) (*.net *.split)
[10:54:38] *** Quits: dfch (~dfch@user/dfch) (*.net *.split)
[10:54:38] *** Quits: nisstyre (~wes@user/nisstyre) (*.net *.split)
[10:54:38] *** Quits: twainwek (~user@144.211.196.35.bc.googleusercontent.com) (*.net *.split)
[10:54:38] *** Quits: greenbagels (~gb@user/greenbagels) (*.net *.split)
[10:54:39] *** Quits: sanshiki (~falx@user/falx) (*.net *.split)
[10:54:39] *** Quits: phy1729 (~phy1729@zsh/wizard/phy1729) (*.net *.split)
[10:54:39] *** Quits: dgw (dgw@sopel/admin/dgw) (*.net *.split)
[10:54:39] *** Quits: schumaml (~schumaml@dslb-178-002-189-095.178.002.pools.vodafone-ip.de) (*.net *.split)
[10:54:39] *** Quits: meti (~meti@user/meti) (*.net *.split)
[10:54:39] *** Quits: deepy (deepy@user/deepy) (*.net *.split)
[10:54:39] *** Quits: mwilson (~mwilson@li159-72.members.linode.com) (*.net *.split)
[10:54:39] *** Quits: Maple (~Maple@user/maple) (*.net *.split)
[10:54:39] *** Quits: rexbinary (~rexbinary@user/rexbinary) (*.net *.split)
[10:54:39] *** Quits: Ninja3047 (~Ninja3047@3047.ninja) (*.net *.split)
[10:54:39] *** Quits: p3lim (~p3lim@ti0006q161-0896.bb.online.no) (*.net *.split)
[10:54:39] *** Quits: Kraus (~quassel@075-141-246-250.res.spectrum.com) (*.net *.split)
[10:54:39] *** Quits: Yamakaja (~yamakaja@user/yamakaja) (*.net *.split)
[10:54:39] *** Quits: pioto (~pioto@user/pioto) (*.net *.split)
[10:54:39] *** Quits: fengshaun (~fengshaun@68.69.214.210) (*.net *.split)
[10:54:39] *** Quits: Helle (~helle@80-100-16-232.ip.xs4all.nl) (*.net *.split)
[10:54:39] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (*.net *.split)
[10:54:39] *** Quits: kolcon (~kolcon@v.kolouch.org) (*.net *.split)
[10:54:39] *** Quits: andrewSC (~andrewSC@95.179.141.168) (*.net *.split)
[10:54:39] *** Quits: energizer (~energizer@user/energizer) (*.net *.split)
[10:54:39] *** Quits: michaelis (~michaelis@193.183.209.17) (*.net *.split)
[10:54:39] *** Quits: bailsman (~Mm1@xls01.freecult.org) (*.net *.split)
[10:54:39] *** Quits: LogicAside (~LogicAsid@user/logicaside) (*.net *.split)
[10:54:39] *** Quits: mjh4386 (~mjh4386@165.22.53.231) (*.net *.split)
[10:54:39] *** Quits: hexnewbie (~hexnewbie@user/hexnewbie) (*.net *.split)
[10:54:39] *** Quits: Scotteh (~Scotteh@user/scotteh) (*.net *.split)
[10:54:39] *** Quits: ZeroKnight (zeroknight@dimensionzero.net) (*.net *.split)
[10:54:39] *** Quits: nfc (nfc@tilde.institute) (*.net *.split)
[10:54:39] *** Quits: ColdKeyboard (~ColdKeybo@user/coldkeyboard) (*.net *.split)
[10:54:39] *** Quits: swistak (~swistak@185.21.216.141) (*.net *.split)
[10:54:39] *** Quits: roppert (~roppert@inb4.se) (*.net *.split)
[10:54:39] *** Quits: unary (~unary@ternary.ca) (*.net *.split)
[10:54:39] *** Quits: vince (~vince@75.127.14.76) (*.net *.split)
[10:54:39] *** Quits: guardian (~guardian@planet-d.net) (*.net *.split)
[10:54:39] *** Quits: enkrypt (~enkrypt@user/enkrypt) (*.net *.split)
[10:54:39] *** Quits: faceface (~faceface@user/faceface) (*.net *.split)
[10:54:39] *** Quits: pr3d4t0r (~zhenya01@user/pr3d4t0r) (*.net *.split)
[10:54:39] *** Quits: c4017w (~c4017@209.52.68.8) (*.net *.split)
[10:54:39] *** Quits: comrumino (~comrumino@li87-103.members.linode.com) (*.net *.split)
[10:54:39] *** Quits: dmat (~noone@user/dmat) (*.net *.split)
[10:54:39] *** Quits: Aramis (~aramis@cm-84.210.154.79.getinternet.no) (*.net *.split)
[10:54:39] *** Quits: Celelibi (celelibi@user/celelibi) (*.net *.split)
[10:54:39] *** Quits: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net) (*.net *.split)
[10:54:39] *** Quits: blaisebool (~blaiseboo@static.247.123.46.78.clients.your-server.de) (*.net *.split)
[10:54:39] *** Quits: odinsbane (~mbs@pat-pool-138.crick.ac.uk) (*.net *.split)
[10:54:39] *** Quits: zegalch (~zegalch@178.128.75.133) (*.net *.split)
[10:54:39] *** Quits: Retr0id (~Retr0id@user/retr0id) (*.net *.split)
[10:54:39] *** Quits: achilleas (~ach@user/achilleas) (*.net *.split)
[10:54:39] *** Quits: mingdao (~mingdao@wireguard/tunneler/mingdao) (*.net *.split)
[10:54:39] *** Quits: zyeri (~zyeri@tilde.team) (*.net *.split)
[10:54:56] *** Joins: webvictim (~gus@mnemosyne.webvictim.net)
[10:54:56] *** Joins: gggpkm (~gggpkm@60.10.194.47)
[10:54:56] *** Joins: pioto (~pioto@user/pioto)
[10:54:56] *** Joins: c10l (~c10l@89.34.167.207)
[10:54:56] *** Joins: TheRAt (~TheRAt@user/therat)
[10:54:56] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[10:54:56] *** Joins: GvP (~GvP@ip70-162-85-176.ph.ph.cox.net)
[10:54:56] *** Joins: Hazza (~Haxxa@122-199-59-136.ip4.superloop.com)
[10:54:56] *** Joins: pan (~quassel@pankid.club)
[10:54:56] *** Joins: Zer0xFF (michael@matrix.michaelsasser.org)
[10:54:56] *** Joins: bambams (~bambams@165.227.200.42)
[10:54:56] *** Joins: Yasumoto (~Yasumoto@ec2-34-212-228-153.us-west-2.compute.amazonaws.com)
[10:54:56] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[10:54:56] *** Joins: waxfire23 (~waxfire@65.119.2.240)
[10:54:56] *** Joins: mixfix41 (~homefame@user/mixfix41)
[10:54:56] *** Joins: redj (~quassel@bras-base-bchmpq5707w-grc-24-76-69-197-62.dsl.bell.ca)
[10:54:56] *** Joins: aquijoule__ (~richbridg@213-225-7-126.nat.highway.a1.net)
[10:54:56] *** Joins: nuala (~nuala@user/nuala)
[10:54:56] *** Joins: crawler (~crawler@user/crawler)
[10:54:56] *** Joins: jaggz (~jaggz@user/jaggz)
[10:54:56] *** Joins: twainwek (~user@144.211.196.35.bc.googleusercontent.com)
[10:54:56] *** Joins: streety (~streety@li761-24.members.linode.com)
[10:54:56] *** Joins: ST47 (~ST47@user/st47)
[10:54:56] *** Joins: Somni (insomnia@193-227-58-66.gci.net)
[10:54:56] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[10:54:56] *** Joins: connor_goodwolf (~connor@user/connor-goodwolf/x-2615606)
[10:54:56] *** Joins: bailsman (~Mm1@xls01.freecult.org)
[10:54:56] *** Joins: Cheaterman (~Cheaterma@82-65-202-73.subs.proxad.net)
[10:54:56] *** Joins: phy1729 (~phy1729@zsh/wizard/phy1729)
[10:54:56] *** Joins: notevil (~notevil@user/notevil)
[10:54:56] *** Joins: zerok (~zerok@user/zerok)
[10:54:56] *** Joins: anddam (~anddam@user/anddam)
[10:54:56] *** Joins: nisstyre (~wes@user/nisstyre)
[10:54:56] *** Joins: drjp (jeanpaul@112-54-174-82.ftth.glasoperator.nl)
[10:54:56] *** Joins: sanshiki (~falx@user/falx)
[10:54:56] *** Joins: dfch (~dfch@user/dfch)
[10:54:56] *** Joins: chemsmith (~chemsmith@user/chemsmith)
[10:54:56] *** Joins: greenbagels (~gb@user/greenbagels)
[10:54:56] *** Joins: dgw (dgw@sopel/admin/dgw)
[10:54:56] *** Joins: schumaml (~schumaml@dslb-178-002-189-095.178.002.pools.vodafone-ip.de)
[10:54:56] *** Joins: meti (~meti@user/meti)
[10:54:56] *** Joins: et (~et@user/et)
[10:54:56] *** Joins: deepy (deepy@user/deepy)
[10:54:56] *** Joins: PublicWiFi (~PublicWiF@user/publicwifi)
[10:54:56] *** Joins: kungp (~kungp@h-46-59-2-200.A230.priv.bahnhof.se)
[10:54:56] *** Joins: mwilson (~mwilson@li159-72.members.linode.com)
[10:54:56] *** Joins: Maple (~Maple@user/maple)
[10:54:56] *** Joins: launchd (examknow@bitbot/launchd)
[10:54:56] *** Joins: Kaya (~KC@static.89.202.216.95.clients.your-server.de)
[10:54:56] *** Joins: somlis (~somlis@user/somlis)
[10:54:56] *** Joins: rddd (~rdd@c-407ce255.012-81-73746f39.cust.ownit.se)
[10:54:56] *** Joins: JerryXiao (~JerryXiao@user/jerryxiao)
[10:54:56] *** Joins: sunny93 (~sunny93@wireguard/tunneler/sunny93)
[10:54:56] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[10:54:56] *** Joins: Ninja3047 (~Ninja3047@3047.ninja)
[10:54:56] *** Joins: p3lim (~p3lim@ti0006q161-0896.bb.online.no)
[10:54:56] *** Joins: Kraus (~quassel@075-141-246-250.res.spectrum.com)
[10:54:56] *** Joins: moto (~moto@user/moto)
[10:54:56] *** Joins: nohop (~nohup@crack.nohup.nl)
[10:54:56] *** Joins: daniel-k (~daniel-k@192.241.135.211)
[10:54:56] *** Joins: barometz (~dvanb@i117058.upc-i.chello.nl)
[10:54:56] *** Joins: lack (~lack@user/lack)
[10:54:56] *** Joins: Yamakaja (~yamakaja@user/yamakaja)
[10:54:56] *** Joins: tkazi (~tkazi@user/tkazi)
[10:54:56] *** Joins: jjasghar (~quassel@user/jjasghar)
[10:54:56] *** Joins: odrling (~odrling@korone.aidoru.agency)
[10:54:56] *** Joins: alexyov (~alexyov@84.22.6.244)
[10:54:56] *** Joins: fengshaun (~fengshaun@68.69.214.210)
[10:54:56] *** Joins: nfc (nfc@tilde.institute)
[10:54:56] *** Joins: swistak (~swistak@185.21.216.141)
[10:54:56] *** Joins: vince (~vince@75.127.14.76)
[10:54:56] *** Joins: phylaz (~phylaz@219.92-221-176.customer.lyse.net)
[10:54:56] *** Joins: kn100 (~kn100@wireguard/tunneler/kn100)
[10:54:56] *** Joins: Helle (~helle@80-100-16-232.ip.xs4all.nl)
[10:54:56] *** Joins: roppert (~roppert@inb4.se)
[10:54:56] *** Joins: MrFixIt (~samurai_@c-73-246-215-75.hsd1.il.comcast.net)
[10:54:56] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[10:54:56] *** Joins: kolcon (~kolcon@v.kolouch.org)
[10:54:56] *** Joins: Duckle (~Duckle@user/duckle)
[10:54:56] *** Joins: nedbat (~nedbat@python/psf/nedbat)
[10:54:56] *** Joins: MrBurns (~japa@ec2-13-48-124-121.eu-north-1.compute.amazonaws.com)
[10:54:56] *** Joins: jfb4 (~jfb4@178.62.2.68)
[10:54:56] *** Joins: andrewSC (~andrewSC@95.179.141.168)
[10:54:56] *** Joins: unary (~unary@ternary.ca)
[10:54:56] *** Joins: OliverUK (~opashley@70.138.105.34.bc.googleusercontent.com)
[10:54:56] *** Joins: Alexer (~alexer@alexer.net)
[10:54:56] *** Joins: etiennem- (~etienne@176-149-215-214.abo.bbox.fr)
[10:54:56] *** Joins: simon816 (~simon816@ec2-35-178-246-72.eu-west-2.compute.amazonaws.com)
[10:54:56] *** Joins: erhandsome (~erhandsom@user/erhandsome)
[10:54:56] *** Joins: spirit (~spirit@user/spirit)
[10:54:56] *** Joins: energizer (~energizer@user/energizer)
[10:54:56] *** Joins: michaelis (~michaelis@193.183.209.17)
[10:54:56] *** Joins: kinabalu (~kinabalu@about/java/kinabalu)
[10:54:56] *** Joins: guardian (~guardian@planet-d.net)
[10:54:56] *** Joins: hexnewbie (~hexnewbie@user/hexnewbie)
[10:54:56] *** Joins: LogicAside (~LogicAsid@user/logicaside)
[10:54:56] *** Joins: Vultyre (~vultyre@user/vultyre)
[10:54:56] *** Joins: mjh4386 (~mjh4386@165.22.53.231)
[10:54:56] *** Joins: bbear (~znc@21212.s.t4vps.eu)
[10:54:56] *** Joins: Scotteh (~Scotteh@user/scotteh)
[10:54:56] *** Joins: ZeroKnight (zeroknight@dimensionzero.net)
[10:54:56] *** Joins: libussa (~libussa@libussa.net)
[10:54:56] *** Joins: oisota (~oisota@user/oisota)
[10:54:56] *** Joins: ColdKeyboard (~ColdKeybo@user/coldkeyboard)
[10:54:56] *** Joins: enkrypt (~enkrypt@user/enkrypt)
[10:54:56] *** Joins: Ogmios (~Ogmios@user/ogmios)
[10:54:56] *** Joins: wintrmute (~wintrmute@bit.pappanaka.com)
[10:54:56] *** Joins: seoul_man (~meh@user/seoul-man/x-5066766)
[10:54:56] *** Joins: faceface (~faceface@user/faceface)
[10:54:56] *** Joins: pr3d4t0r (~zhenya01@user/pr3d4t0r)
[10:54:56] *** Joins: c4017w (~c4017@209.52.68.8)
[10:54:56] *** Joins: comrumino (~comrumino@li87-103.members.linode.com)
[10:54:56] *** Joins: dmat (~noone@user/dmat)
[10:54:56] *** Joins: Aramis (~aramis@cm-84.210.154.79.getinternet.no)
[10:54:56] *** Joins: coldenbrewed (~nitrobrew@li1517-39.members.linode.com)
[10:54:56] *** Joins: arti (~arti@193.40.103.195)
[10:54:56] *** Joins: mteo (francis@user/francis)
[10:54:56] *** Joins: rookie101 (~rookie@207.154.204.166)
[10:54:56] *** Joins: francis (francis@user/francis)
[10:54:56] *** Joins: Celelibi (celelibi@user/celelibi)
[10:54:56] *** Joins: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net)
[10:54:56] *** Joins: Anarchic (~Anarchic@getlegit.co.uk)
[10:54:56] *** Joins: blaisebool (~blaiseboo@static.247.123.46.78.clients.your-server.de)
[10:54:56] *** Joins: Karyon (~Karyon@user/karyon)
[10:54:56] *** Joins: sud (~sud@user/sud)
[10:54:56] *** Joins: odinsbane (~mbs@pat-pool-138.crick.ac.uk)
[10:54:56] *** Joins: zegalch (~zegalch@178.128.75.133)
[10:54:56] *** Joins: mpmc (~mpmc@user/mpmc)
[10:54:56] *** Joins: RemiYuko (~licht@user/akechishiro)
[10:54:56] *** Joins: Makdaam (makdaam@user/makdaam)
[10:54:56] *** Joins: Retr0id (~Retr0id@user/retr0id)
[10:54:56] *** Joins: quasineutral (~quaisneut@user/quasineutral)
[10:54:56] *** Joins: achilleas (~ach@user/achilleas)
[10:54:56] *** Joins: mingdao (~mingdao@wireguard/tunneler/mingdao)
[10:54:56] *** Joins: zyeri (~zyeri@tilde.team)
[10:55:34] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[10:56:01] *** Quits: northernsage (~northerns@187.107.158.146) (Client Quit)
[10:56:59] *** Joins: Pseudocrat (~skovacs@user/pseudocrat)
[10:58:59] *** Joins: rendar (~rendar@user/rendar)
[10:59:37] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 246 seconds)
[11:00:42] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[11:01:10] *** Quits: gggpkm (~gggpkm@60.10.194.47) (Ping timeout: 252 seconds)
[11:05:13] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 246 seconds)
[11:05:35] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[11:10:17] *** Joins: ElectricSheep (~esheep_zn@pool-100-19-29-200.phlapa.fios.verizon.net)
[11:10:45] *** Quits: jtck_ (~jtck@222.164.13.173) (Remote host closed the connection)
[11:11:43] *** Joins: jtck (~jtck@222.164.13.173)
[11:13:18] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 244 seconds)
[11:14:06] *** Joins: darksun (~darksun@user/darksun)
[11:14:11] *** Joins: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com)
[11:18:56] *** Quits: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com) (Ping timeout: 255 seconds)
[11:19:17] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 258 seconds)
[11:20:39] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[11:21:51] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[11:23:30] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My Mac Pro has gone to sleep. ZZZzzz…)
[11:24:50] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[11:26:44] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 244 seconds)
[11:28:47] <nubonix> using pendulum, if i have a day of 'Monday' and a time of '00:00' how can i only get the datetime if the datetime is in the future?
[11:29:26] <nubonix> i havent figured out how to get a datetime object using the string of the day
[11:30:21] <nubonix> rofl... nvm  `pl.from_format('Monday', 'dddd')`
[11:30:59] <nubonix> alright, so how can i get the last day of the week? [sunday the 11th of july as an example]
[11:33:02] <nubonix> nvm to that too, solved both
[11:33:13] <ChrisWarrick> (how did you solve the second one?)
[11:33:55] *** Joins: tims (~tims@59-102-102-197.tpgi.com.au)
[11:36:42] <Repiphany> I'm trying to play around with mixing wxpython and IPython, but the IPython shell stops responding if I try opening the wx.FileDialog from the window menu, anyone know if there's a proper way to integrate wx and ipython?
[11:36:46] <Repiphany> Example https://bpa.st/WBHA
[11:37:01] *** Joins: wyclif (~wyclif@user/wyclif)
[11:37:27] <ChrisWarrick> Repiphany: how does it stop responding? is the rest of the window working?
[11:37:51] <Repiphany> The window responds fine but I can't type in the IPython shell after clicking "Open"
[11:37:56] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 252 seconds)
[11:38:02] <Repiphany> Can type in it normally before interacting with the window
[11:38:33] <ChrisWarrick> and after you close the file picker?
[11:38:41] <Repiphany> Still unresponsive
[11:38:46] <rannnn8888> nubonix hey remmber the httpx Yesterday ?
[11:38:56] <nubonix> yo
[11:39:20] <nubonix> mm, ive used httpx before, whats up?
[11:39:53] <rannnn8888> nubonix what its yo ? :D  slang of ?
[11:40:12] <ChrisWarrick> nubonix: how did you solve the last-day-of-the-week problem?
[11:40:14] <nubonix> rannnn8888: its equivalent to hi
[11:40:21] <nubonix> ChrisWarrick: yeah i was derping hard
[11:40:44] <nubonix> rannnn8888: and yes, its 100% slang
[11:40:48] <ChrisWarrick> Repiphany: I’d look into the actions wx does when it opens the window, perhaps ipython does something to the event loop that opening the file picker undoes
[11:41:17] <nubonix> ChrisWarrick: yeah, i was derping hard, thanks though :)
[11:41:17] <rannnn8888> nubonix I did not talk 'with you yesterday? Maybe confused by nicknames :D  ?
[11:42:15] <nubonix> rannnn8888: we were talking about it yesterday yes, i was just confused what you meant by remembering the library yesterday [as if i have never used it since yesterday :P]
[11:42:30] *** Joins: jazzy (~jaziz@2600:380:8653:59ba:7d3d:6a42:3e7f:d235)
[11:42:38] *** Joins: Vonter (~Vonter@user/vonter)
[11:42:56] <nubonix> rannnn8888: anyways, how can i help?
[11:43:30] <nubonix> rannnn8888: dont worry about it, im just giving you a hard time :P
[11:43:33] <rannnn8888> nubonix I talk about the aiometer and the httpx
[11:43:50] <nubonix> rannnn8888: yes i remember, and?
[11:44:05] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Read error: Connection reset by peer)
[11:44:11] <nubonix> rannnn8888 yes, i remember, and?*
[11:44:35] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 255 seconds)
[11:44:57] <nubonix> rannnn8888: it was me and someone else, but idkr who else was helping
[11:45:02] *** Quits: audiocat (~audio@2603-8081-1800-00ad-cd5e-af49-8601-9338.res6.spectrum.com) (Ping timeout: 255 seconds)
[11:45:38] <rannnn8888> so i cheack now when i use the script like we write its dont use session no ? and compre this vs the concurrent.futures and its
[11:45:48] <rannnn8888> and its slower
[11:45:55] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[11:46:12] *** Joins: upsala (~zcb@185.213.155.160)
[11:46:18] <ChrisWarrick> rannnn8888: show your code?
[11:46:19] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[11:46:38] *** Joins: acresearch (~acresearc@user/acresearch)
[11:47:17] <rannnn8888> https://dpaste.org/M5Mf
[11:48:55] *** Quits: upsala (~zcb@185.213.155.160) (Client Quit)
[11:49:02] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 252 seconds)
[11:49:15] <rannnn8888> ChrisWarrick i script a same site diffrent page and i think if i can use session its speed up the script , in concurrent.futures I realized it could not be used
[11:49:40] <rannnn8888> And simple request take more time
[11:49:55] <rannnn8888> i scrap*
[11:49:57] *** Joins: upsala (~zcb@185.213.155.160)
[11:50:10] <ChrisWarrick> how do you make a "simple request"?
[11:50:31] <rannnn8888> r = requests.get(url=url, timeout=10)
[11:50:35] <rannnn8888> example
[11:50:47] <ChrisWarrick> but that’s not httpx
[11:51:15] *** Joins: sunyour (~sunyour@129.226.182.99)
[11:51:43] <rannnn8888> in the script i send i try httpx if u see
[11:51:54] <ChrisWarrick> httpx’s AsyncClient does connection pooling, but there are limits to the connections it uses
[11:52:25] <rannnn8888> ChrisWarrick i  try like in my concurrent.futures script 100
[11:52:43] <rannnn8888> and it return me slower
[11:52:44] <ChrisWarrick> rannnn8888: https://www.python-httpx.org/advanced/#pool-limit-configuration
[11:53:08] <ChrisWarrick> rannnn8888: how much slower? what numbers and what other scripts are we talking about?
[11:54:21] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[11:54:28] <rannnn8888> ChrisWarrick sec i edit its simle use concurrent.futures and request send r = requests.get
[11:55:16] <rannnn8888> ChrisWarrick but here its use session ? s = requests.Session() https://dpaste.org/M5Mf ?
[11:55:16] <nubonix> rannnn8888: just read the docs m8
[11:55:39] <ChrisWarrick> rannnn8888: ?
[11:55:49] <nubonix> rannnn8888: ^
[11:56:01] <nubonix> rannnn8888: sessions are used when you have to login, otherwise dont use sessions
[11:56:11] <nubonix> or if you have to go to one page before another
[11:56:19] <ChrisWarrick> rannnn8888: M5Mf is httpx, which is a distinct library from requests, and it uses httpx.Client, which is kinda equivalent to requests Sessions
[11:56:38] <ChrisWarrick> requests.Session is also handy for performance reasons (connection pooling)
[11:57:03] <nubonix> ChrisWarrick: wdym by requests sessions r good for performance?
[11:57:15] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-d976-268d-ebd6-fd0d.res6.spectrum.com) (Quit: jarthur)
[11:57:16] <nubonix> vs?
[11:57:17] <ChrisWarrick> nubonix: "what do you mean"* are*
[11:57:24] <ChrisWarrick> nubonix: vs not using a session
[11:57:41] <ChrisWarrick> nubonix: https://docs.python-requests.org/en/master/user/advanced/
[11:57:43] <ChrisWarrick> nubonix: The Session object allows you to persist certain parameters across requests. It also persists cookies across all requests made from the Session instance, and will use urllib3’s connection pooling. So if you’re making several requests to the same host, the underlying TCP connection will be reused, which can result in a significant performance increase (see HTTP persistent connection).
[11:57:46] <nubonix> mm, how so if you dont have to chain requests?
[11:58:05] <nubonix> mk
[11:58:25] <nubonix> but thats still chained requests
[11:58:39] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[11:58:43] <nubonix> ChrisWarrick: rannnn8888 is scraping
[11:58:58] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 265 seconds)
[11:59:02] <nubonix> and im pre sure that ran doesnt have to login
[11:59:09] <rannnn8888> ChrisWarrick  So by logic for scrap the same site but diffrent site pages it should be faster right? vs example https://docs.python.org/3/library/concurrent.futures.html
[11:59:14] *** Joins: manti7 (~manti7@176.10.104.94)
[11:59:20] <fluter> hi, for extension modules, do i need to build for each minor version?
[11:59:21] <ChrisWarrick> rannnn8888: did you show your concurrent.futures code yet?
[11:59:31] <fluter> like does 3.8 modules work for 3.9 and 3.10?
[11:59:36] <ChrisWarrick> fluter: in general, no
[11:59:53] <ChrisWarrick> fluter: but AFAIK there’s a stable ABI you can target that works over multiple versions
[11:59:55] <fluter> ChrisWarrick: so i need to build 3 modules
[12:00:00] <fluter> hmm ok
[12:00:02] <nubonix> fluter: versions of the package are usually specific to the python version, but there is alot of overlap
[12:00:08] <fluter> will check that out
[12:00:52] <nubonix> there is alot of overlap*
[12:01:15] <fluter> how can i target a stable ABI instead of a specific version?
[12:01:27] <nubonix> ABI?
[12:01:39] <ChrisWarrick> fluter: https://docs.python.org/3/c-api/stable.html
[12:02:27] <rannnn8888> ChrisWarrick i talk the simple like here https://dpaste.org/gbQJ
[12:03:09] <ChrisWarrick> rannnn8888: This code is testing 4 requests, not 2880
[12:03:14] <rannnn8888> i put same concurrent.futures.ThreadPoolExecutor(max_workers=100)
[12:03:29] <fluter> nice thank you
[12:03:33] <nubonix> rannnn8888: pre sure as ChrisWarrick eluded to earlier, there are default limits on connections, and concurrent futures has 50 i think as a default, so this is probably higher than httpx's default
[12:03:34] <rannnn8888> ChrisWarrick yes i write in the urls all the 2800 sites
[12:03:48] <ChrisWarrick> rannnn8888: please show the code you run, not some random samples
[12:04:12] <rannnn8888> k sec i move to my computer sec and send
[12:08:26] *** Joins: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com)
[12:10:18] *** Quits: kolcon (~kolcon@v.kolouch.org) (Quit: WeeChat 3.2)
[12:10:50] *** Quits: TheRAt (~TheRAt@user/therat) (Read error: Connection reset by peer)
[12:11:08] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 255 seconds)
[12:12:45] *** Joins: Snyp (~rksht@49.207.217.46)
[12:13:30] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:14:17] *** Quits: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com) (Ping timeout: 255 seconds)
[12:16:29] <rannnn8888> ChrisWarrick k i cheack again the httpx.AsyncClient faster like 10 sec u think its the max i can set ?
[12:16:35] *** Joins: TheRAt (~TheRAt@user/therat)
[12:17:33] <rannnn8888> i can get*
[12:18:07] *** Joins: minip (~minip@user/minip)
[12:24:14] <nubonix> rannnn8888: scrapy is probably a better option, the limitations that ive found is javascript, but this can be conquered by using splash or selenium, or executing the javascript with the request [which is a pain]
[12:24:40] <nubonix> its a framework in python designed to scrape, and it does it extremely well
[12:25:15] <rannnn8888> nubonix the site i scrap its return json
[12:25:18] <nubonix> theres even a test builtin that shows how fast you can scrape with the hardware you have
[12:25:34] <nubonix> rannnn8888: perfect, writing a parser should be super simple
[12:25:47] <rannnn8888> scrapy uses multi therdind ?
[12:25:52] <rannnn8888> thearding
[12:25:53] <nubonix> getting a hang of the framework takes a bit, but its definitely worth it imo
[12:25:58] <nubonix> it has concurrency yes
[12:25:59] *** Quits: hposca (~hposca@node-1w7jr9phoke2vlnhot95w4kak.ipv6.telus.net) (Ping timeout: 255 seconds)
[12:26:18] <nubonix> think its asnyc, but i cant remember
[12:26:26] <rannnn8888> but u think its be more faster from this aiometer ? session ?
[12:26:26] <nubonix> you dont write any async code though, it does it all for you
[12:26:45] <nubonix> that really comes down to configurations
[12:27:08] <nubonix> its WAY easier to write it in scrapy than it is the way your doing it now
[12:27:20] <nubonix> than the way you are doing it now*
[12:27:21] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[12:27:48] <nubonix> when using scrapy DO NOT use bs4, ever
[12:28:03] <nubonix> it cuts the scraping speed by 30% or more
[12:28:40] <deniska> doesn't scrapy use BS4 under the hood?
[12:28:43] <nubonix> so you will have to learn to use css selectors, as this is what scrapy uses [last time i checked]
[12:28:45] <nubonix> no
[12:28:45] *** Quits: demophoon (~demophoon@c-24-21-106-28.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[12:28:55] <nubonix> if it does it uses lxml
[12:29:04] <nubonix> html.parser is the default, and its garbage
[12:29:30] *** Joins: demophoon (~demophoon@c-24-21-106-28.hsd1.or.comcast.net)
[12:29:33] <deniska> ah, lxml.html, I see
[12:29:41] <nubonix> if you import and use bs4 vs using scrapy selectors, there is a massive difference
[12:29:41] <deniska> for some reason I had an idea it uses BS4
[12:29:58] <nubonix> it might idk, but the parser is what matters
[12:30:04] <nubonix> you can tell bs4 to use lxml or html
[12:30:05] <deniska> (which in turn itself can use lxml.html :D )
[12:30:07] <nubonix> yes
[12:30:29] <nubonix> i wouldnt want to scrape with import lxml, the docs r.... a pain imo
[12:30:57] <nubonix> missing alot of documentation last time i looked, and scowering the internet for how to use it is... well no
[12:31:55] <deniska> back when I was parsing some things, I was inventing my own framework, but that's because I wanted to have a really specific crawling order in multiple scrapers in sync
[12:32:15] <nubonix> i tried a bunch of different things myself
[12:32:23] *** Quits: Snyp (~rksht@49.207.217.46) (Ping timeout: 252 seconds)
[12:32:38] *** Joins: envex (~envex@cpe-173-91-189-33.neo.res.rr.com)
[12:32:44] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 255 seconds)
[12:32:50] <deniska> scrapy is quite nice for "I want to eventually extract everything this site has to offer" though :)
[12:33:25] <nubonix> i basically did what you did,  and opted to use aiohttp [didnt know about httpx at the time] and so i used that, as i also needed some js rendering and cba to use scrapy to do so, but this is just what i do [if it involves some js, i dont use scrapy]
[12:33:47] *** Joins: slav0nic (slav0nic@python.su)
[12:33:55] <nubonix> yeah the items are kinda cool, for grabbing specifics n whatnot
[12:34:15] <nubonix> as well*
[12:34:32] <nubonix> mm, nvm lols, i concur with your statement :P
[12:34:34] *** Joins: Snyp (~rksht@49.207.193.84)
[12:34:36] <nubonix> sitemaps spiders WOOO
[12:34:49] <nubonix> if the site has a sitemap >.>
[12:35:59] <deniska> last time a site was doing funky stuff in JS I wasn't able to make sense of in a debugger, I just plucked the script, removed references to `window` and `document`, and subproccessed to node when I needed to run this function :)
[12:36:02] <nubonix> my favorite sitemap-like thing was appending integers to the url on a wannabe amazon site, was halarious, but it worked so :P
[12:36:04] *** Joins: candyman (~candyman@user/candyman)
[12:36:17] *** Joins: derelict (~derelict@user/derelict)
[12:36:17] *** Quits: derelict (~derelict@user/derelict) (Client Quit)
[12:36:33] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f)
[12:36:37] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[12:36:40] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:36:46] <nubonix> rofl
[12:36:50] <nubonix> nice :)
[12:37:15] <deniska> (it was some weird "generate a hash of login and password to avoid bot writers and pass it as one of the login form fields" thing)
[12:37:18] <nubonix> "R u a webbrowser?" sureeee
[12:37:19] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[12:37:33] <nubonix> yeah i can name alot of those
[12:37:42] <nubonix> had to deal with them recently and NTY
[12:38:07] <nubonix> akamai, perimterx, metadata1 >.>
[12:38:11] <nubonix> wanted to scream
[12:38:41] <nubonix> theres a bunch of others, but those r just the ones i dealt with
[12:39:03] <nubonix> yeah, its their WAF that is generating that hash
[12:39:14] <nubonix> which is the names i mentioned above
[12:39:32] <deniska> I recently helped someone to overcome some client-side request signing like that, JS debuggers in browsers got quite a bit better :)
[12:39:35] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:39:46] <deniska> and oh boy they do love md5 hash functions
[12:39:51] <nubonix> oh?
[12:39:58] <nubonix> idk y lols.. basically plaintext
[12:40:32] <nubonix> in their defense... encrpytion doesnt exist... so theres nothing they can really do
[12:41:03] <deniska> a site required some sort of signature in the header, turns out it's request values sorted by keys, concatenated via ';', with a static salt added at the end
[12:41:08] <nubonix> like.. if you have valid credentials to the site... you can login programmatically, its just a matter of time and determination
[12:41:11] *** Quits: amirouche (~amirouche@user/amirouche) (Quit: WeeChat 2.8)
[12:41:20] <deniska> salt was stored in their script using caesar cipher
[12:41:28] <nubonix> huh
[12:41:37] <nubonix> right on :D
[12:41:53] *** Joins: cedric (~cedric@2a01:cb11:867:c200:65e3:5b08:7001:96d4)
[12:41:53] <nubonix> ye i avoided js like the plague
[12:41:58] *** Joins: derelict (~derelict@user/derelict)
[12:42:02] <nubonix> and made my client help me w/ it
[12:42:07] <nubonix> had*
[12:42:08] *** Quits: derelict (~derelict@user/derelict) (Client Quit)
[12:42:27] <deniska> I'd rather rewrite a procedure in python than go through "headless browser" route
[12:42:41] <nubonix> browesrs r ... no
[12:42:48] <nubonix> so much overhead its not even funny
[12:42:53] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[12:43:05] <nubonix> fine if you are doing like 10 tasks... [for me] but anymore and nope
[12:43:22] <deniska> besides taking a lot of system resources, also now the reliability of my program directly depends on the reliability of JS code someone else wrote :)
[12:43:24] <nubonix> unfortunately we dont have a go-browser in python
[12:43:28] <nubonix> go-rod*
[12:43:33] <nubonix> literly 4mb of ram >.>
[12:43:46] <nubonix> vs selenium which is like 200mb-700mb
[12:44:14] <deniska> go-rod is a browser thing
[12:44:31] <nubonix> its a browser for the language go
[12:44:38] <nubonix> headless i think idk
[12:44:49] <nubonix> super super small amount of resources to run it
[12:44:58] <deniska> https://github.com/go-rod/rod I'm looking here and I see that it needs chrome running
[12:45:06] <nubonix> hmm
[12:45:14] *** Quits: candyman (~candyman@user/candyman) (Remote host closed the connection)
[12:46:11] <nubonix> idk, was recommened to me by a person in a channel that specializes in anti-WAF
[12:46:32] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[12:46:41] <nubonix> idk anything about go, and certianly nothin about gorod :P
[12:46:49] <nubonix> just heard it was light
[12:47:13] <deniska> the library itself might be light, chrome it interacts with probably isn't :)
[12:47:17] <nubonix> wonder what it does with chrome running tho, or how it uses it, and what the resource consumption is
[12:47:27] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[12:47:36] <deniska> it says it right on the tin, it uses devtools protocol: https://chromedevtools.github.io/devtools-protocol/
[12:47:37] <nubonix> just another selenium ofc >.>
[12:48:14] <deniska> same thing tools like puppeteer or selenium-chrome-driver also do
[12:48:29] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[12:48:35] <nubonix> says its based on that though?
[12:48:39] *** Joins: Crassus (~Crassus@user/crassus)
[12:48:40] <nubonix> based != running?
[12:48:51] <nubonix> pup is outdated, use playwright
[12:48:57] <nubonix> well pypeteer
[12:49:11] <nubonix> playwright has sleep problems though >.>
[12:49:24] <deniska> nubonix: in "features" rod says "Automatically find or download browser"
[12:49:32] <nubonix> damn...
[12:49:43] *** Joins: candyman (~candyman@user/candyman)
[12:50:07] <nubonix> rofl, well im glad i didnt learn go just for that, cause i thought about it :D
[12:50:39] <deniska> it takes about 4 hours to learn go, you wouldn't lose much :P
[12:51:16] <nubonix> you can make some good money finding out how to login by getting something that programmaticly creates those hashes
[12:51:49] <nubonix> on average its $500 just for getting a hash generator
[12:51:53] <deniska> Not exactly good, but quick for sure :)
[12:52:03] <nubonix> wdym?
[12:52:19] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:52:20] <nubonix> oh :P idk, $500 is weeks worth for every job ive ever worked
[12:52:31] <nubonix> but ive always done labor jobs so..
[12:52:59] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 255 seconds)
[12:53:16] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[12:53:55] <deniska> I mean that "proper programming job" (well, of course depending on where you are) may pay better, but there's something oddly satisfying in reverse engineering these somewhat silly client-side protections
[12:54:47] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 255 seconds)
[12:54:49] <deniska> (well, I guess they're not silly if they circumvent perhaps 95% of actors the site owners don't want to deal with)
[12:55:02] <nubonix> haha
[12:55:18] <nubonix> yeah :/
[12:55:28] <nubonix> but the 5% that do make a real good amount
[12:55:41] <nubonix> for e.g. reselling graphics cards rn... or a few months ago was insane
[12:55:53] *** Lord_of_Life_ is now known as Lord_of_Life
[12:56:15] <deniska> I was mostly into sports betting automation :)
[12:56:32] <nubonix> icba to vpn to another country
[12:56:58] <nubonix> i try to automate anything i can think of lols
[12:57:18] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[12:57:26] <nubonix> atm im working on an overseer for botting on games
[12:57:54] *** Joins: ZenixOwler (~zenix@118.69.128.37)
[12:58:03] *** Joins: ice9 (~ice9@user/ice9)
[12:58:05] <nubonix> schedule the bot to do whatever task at whatever time via the overseer [doing this on many bots, just one game tho]
[12:58:18] <ZenixOwler> woah, is this a new feature in Python that was recently added or it has been there for awhile ? -> float("inf")
[12:58:28] <ZenixOwler> just know that infinity is now a value
[12:58:37] *** Quits: GregTheHun (~GregTheHu@2601:300:4500:3d41:9d1f:1512:c7da:4108) (Ping timeout: 246 seconds)
[12:58:52] <deniska> Naughty. If it's some idler sort of game, can be an interesting task, if it's something that puts other players at a disadvantage, then nah, I wouldn't do that
[12:58:56] <nubonix> huh,  idk a usecase off hand but im sure some could use it :)
[12:59:14] <nubonix> lolz :P i exchange ingame currency for irl currency
[12:59:15] <deniska> ZenixOwler: probably python1.0 or whatever the first version was
[12:59:56] <ZenixOwler> damn
[12:59:57] <nubonix> im not sure infinity exists, just a really large number, as the value has to be stored, and has to fit in ram?
[13:00:00] <ChrisWarrick> ZenixOwler: +/-inf and nan are part of ieee 754, so they’ve been there forever
[13:00:04] <deniska> ZenixOwler: +infinity, -infinity and NaN are the feature of IEEE 754 floating points, which python and many other PLs use
[13:00:24] <ChrisWarrick> nubonix: it’s just a special value in ieee 754
[13:00:37] <nubonix> ChrisWarrick: hmm, alright
[13:00:59] <ZenixOwler> why do we even need this infinity anyway, i hardly see any usage
[13:02:20] <deniska> ZenixOwler: it's often used to represent the result of division by 0 (not in python though, it raises an exception here)
[13:02:25] <ChrisWarrick> ZenixOwler: ask javascript what the result of 1/0 is
[13:02:45] *** Joins: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com)
[13:02:58] <ZenixOwler> well i know what it results in with Javascript, but i am wondering about Python, but it's fine tho if it doesn't do anything more than raising exceptions
[13:03:15] <deniska> heh, sometimes use `1/0` trick of "quickly crash the program at this spot", and was really surprised it didn't work in JS :)
[13:03:45] <deniska> ZenixOwler: sometimes it's useful to have as a value which compares bigger to any other number
[13:05:07] <ZenixOwler> nice to know then
[13:05:49] <deniska> but yes, the usecase is a rare one, if python had to came up with its number system, maybe we wouldn't have it :)
[13:05:57] <deniska> its own
[13:08:02] <nubonix> anyone wanna help pyqt threads? i have a socket server that im streaming my desktop video feed to a pyqt client [label], but im unable to connect to multiple ports
[13:08:14] *** Quits: parzival (~parzival@user/parzival) (Ping timeout: 252 seconds)
[13:08:24] *** Quits: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com) (Ping timeout: 252 seconds)
[13:08:35] <nubonix> well, unable to display to two windows, i can display to one window just fine, but as soon as i add another, everything is whacked
[13:10:15] <nubonix> for each video feed server im watching a window on a local or remote computer that is being streamed to this one
[13:10:33] <nubonix> a single computer can have many video feed servers
[13:10:59] <nubonix> have code for everything if someone wants to help :D
[13:11:21] <rannnn8888> https://dpaste.org/mGTV why its fail with proxy ?  https://dpaste.org/mGTV
[13:11:35] *** Joins: palasso (~palasso@user/palasso)
[13:12:27] <nubonix> rannnn8888: dont think thats how you use proxies in httpx
[13:13:57] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[13:14:53] <nubonix> heres the code: https://bpa.st/BKBQ
[13:15:08] *** Joins: darksun (~darksun@user/darksun)
[13:15:29] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 255 seconds)
[13:16:07] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[13:16:25] *** Quits: ZenixOwler (~zenix@118.69.128.37) (Quit: Leaving)
[13:16:34] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 240 seconds)
[13:16:56] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[13:17:33] <nubonix> rannnn8888: https://www.python-httpx.org/advanced/#example
[13:17:55] <nubonix> o, mb rannnn8888 https://www.python-httpx.org/advanced/#http-proxying
[13:18:11] <nubonix> it uses a dictionary for proxies, just like requests do
[13:18:43] <nubonix> please notice that http has to be used in both http and httpx keys
[13:19:02] <nubonix> both http and https protocols*
[13:19:32] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:20:26] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 255 seconds)
[13:20:53] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 252 seconds)
[13:23:05] *** Quits: computeiro (~Wender@189.37.67.180) (Ping timeout: 252 seconds)
[13:24:11] *** Joins: blddk_ (~admin@185.233.252.229)
[13:24:32] <rannnn8888> nubonix its not httpx i try use aiohttp
[13:24:33] *** blddk_ is now known as blddk
[13:24:50] <nubonix> o lols, mb
[13:25:00] <nubonix> still the same, aiohttp doesnt use proxies like that
[13:25:09] <nubonix> id use aiohttp_proxies library if you want to use proxies
[13:25:35] <nubonix> you still use aiohttp and have to import it, it just puts the proxies in a format that aiohttp can understand
[13:26:46] <rannnn8888> https://pypi.org/project/aiohttp-proxy/ u talk about this ?
[13:27:06] <nubonix> rannnn8888: yes
[13:27:43] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[13:29:22] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[13:32:01] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[13:32:08] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[13:33:53] <rannnn8888> stil get unble https://dpaste.org/4swV
[13:36:51] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:37:10] <rannnn8888> nubonix *
[13:37:14] <nubonix> rannnn8888 whats the traceback? can you connect to the proxy with something like requests? [this is known as a sanity check]
[13:37:34] <nubonix> rannnn8888: yes, please tag me, as im doing other things atm as well
[13:37:44] <rannnn8888> nubonix yes the proxy good i cheack him before
[13:38:27] <nubonix> rannnn8888: whats the traceback? where is the code to start your function?
[13:40:14] *** Quits: Pseudocrat (~skovacs@user/pseudocrat) (Ping timeout: 255 seconds)
[13:42:12] <rannnn8888> nubonix this the start trackback erorr https://dpaste.org/rY96
[13:42:38] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[13:43:20] <rannnn8888> after this is The above exception was the direct cause of the following exception:
[13:43:50] <nubonix> you need to create futures
[13:43:58] <nubonix> its failing on the gather line
[13:44:11] <nubonix> b/c you didnt create the futures for gather to run
[13:44:48] <nubonix> meaning, gather doesnt know what to do with the async function, it needs a future instead
[13:44:56] *** Joins: p-i- (~Ohmu@node-nem.pool-1-0.dynamic.totinternet.net)
[13:45:16] *** Joins: pnoud (~pnoud@user/pnoud)
[13:45:17] *** Joins: darksun (~darksun@user/darksun)
[13:45:37] *** Joins: wyclif (~wyclif@user/wyclif)
[13:46:29] <rannnn8888> nubonix what u mean i run its by asyncio.run(main(urls))
[13:46:35] <nubonix> no
[13:46:59] <nubonix> you need to use asyncio.create_task
[13:47:17] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[13:47:18] <nubonix> asyncio.create_task(main(urls)) isnt going to cut it
[13:48:16] *** Quits: p-i-_ (~Ohmu@node-nem.pool-1-0.dynamic.totinternet.net) (Ping timeout: 272 seconds)
[13:49:00] <rannnn8888> u mean raplace the run to  asyncio.create_task(main(urls)) ?
[13:49:10] <rannnn8888> asyncio.run(main(urls))  to  asyncio.create_task(main(urls))
[13:49:13] <nubonix> this or something similar/closeto needs to be above gather, and you need to pass *tasks to gather instead of what you have now`tasks = [url for url in urls: asnycio.create_task(get(url))]`
[13:49:46] <nubonix> also, get is a terrible naming convention for a function, please use fetch instead
[13:50:08] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 255 seconds)
[13:50:17] <rannnn8888> not have way to add the proxy to the seesion get simple :X ? async with session.get(url=url) as response:
[13:50:31] <nubonix> what
[13:50:49] <nubonix> please reword that
[13:50:53] <rannnn8888> https://stackoverflow.com/questions/51887784/using-aiohttp-with-proxy
[13:51:12] <nubonix> no, this is for older versions of python
[13:51:13] <rannnn8888> like here i see hem tell him add
[13:51:13] *** Quits: Snyp (~rksht@49.207.193.84) (Quit: WeeChat 3.2)
[13:51:14] <rannnn8888> proxy = 'http://your_user:your_password@your_proxy_url:your_proxy_port'
[13:51:15] <rannnn8888> async with session.get(url, proxy=proxy) as response:
[13:52:42] <nubonix> okay but did you see what was wrong in the SO question?
[13:52:52] <nubonix> they made the same mistake you did :P
[13:53:16] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[13:53:38] <rannnn8888> nubonix but all ppl here answer him add the proxy in the s.get :x this what i want :D
[13:53:39] *** Quits: therealjumbo1 (~zignegoj@mail.hedonline.com) (Read error: Connection reset by peer)
[13:53:54] <rannnn8888> not for all aiohttp.ClientSession(connector=connector)
[13:53:56] *** Joins: therealjumbo1 (~zignegoj@mail.hedonline.com)
[13:53:58] *** Quits: therealjumbo1 (~zignegoj@mail.hedonline.com) (Read error: Connection reset by peer)
[13:54:14] *** Joins: therealjumbo1 (~zignegoj@mail.hedonline.com)
[13:54:19] <nubonix> rannnn8888: right, the advantage of using aiohttp_proxy is that it supports socks5, aiohttp doesnt i believe
[13:55:02] <rannnn8888> yep but i want after all s.get from diffrent proxy becouse this i want add it for the s.get
[13:55:05] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[13:56:11] <nubonix> i want to use a different proxy for each request, is what you are trying to say i think, yeah?
[13:56:33] <nubonix> if this is true, then use a generator
[13:56:56] <otisolsen70> I am trying to build a venv in which I install pyheif. This package has some dependencies that I have installed also (libffi6 lifheif-dev libde256-dev) mentioned here: https://pypi.org/project/pyheif/. But when I try to install it, I get Command "/data/photo/photo/sigal-dev/venv/bin/python3 -u -c "import setuptools, tokenize;__file__='/tmp/pip-install-5n1ks08d/pyheif/setup.py';f=getattr(tokenize,
[13:57:01] <otisolsen70> 'open', open)(__file__);code=f.read().replace('\r\n', '\n');f.close();exec(compile(code, __file__, 'exec'))" install --record /tmp/pip-record-w6g3pirg/install-record.txt --single-version-externally-managed --compile --install-headers /data/photo/photo/sigal-dev/venv/include/site/python3.7/pyheif" failed with error code 1 in /tmp/pip-install-5n1ks08d/pyheif/
[13:57:05] *** Joins: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com)
[13:57:06] <otisolsen70> What am I missing for this to work?
[13:57:23] *** Quits: p-i- (~Ohmu@node-nem.pool-1-0.dynamic.totinternet.net) (Ping timeout: 265 seconds)
[13:58:31] <rannnn8888> nubonix see here https://docs.aiohttp.org/en/stable/client_advanced.html
[13:58:32] <rannnn8888> async with aiohttp.ClientSession() as session:
[13:58:33] <rannnn8888>     async with session.get("http://python.org",
[13:58:33] <rannnn8888>                            proxy="http://proxy.com") as resp:
[13:58:34] <rannnn8888>         print(resp.status)
[14:02:34] *** Quits: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com) (Ping timeout: 240 seconds)
[14:03:15] <nubonix> otisolsen70: please use a pastebin like site
[14:03:56] <nubonix> rannnn8888: what is your overall goal?
[14:04:20] <nubonix> i know you want to scrape a website, but how are going about it related to proxies?
[14:04:28] <otisolsen70> nubonix, for the error message? Or do you want the entire output?
[14:04:46] <rannnn8888> nubonix the the s.get proxy
[14:04:50] <nubonix> otisolsen70: the error message is known as a traceback, and the code is code, please paste both in a pastebin like site
[14:04:54] <rannnn8888> from*
[14:05:21] <nubonix> otisolsen70: the format is here is whats happening, heres what i expect to happen, code, traceback
[14:05:38] *** Joins: p-i- (~Ohmu@node-nem.pool-1-0.dynamic.totinternet.net)
[14:05:59] <nubonix> rannnn8888: yes, im aware that proxy or proxies is a parameter in aiohttp
[14:06:19] <nubonix> rannnn8888: i have not had success with it myself, so i use aiohttp_proxy
[14:06:58] *** Joins: euouae (~euouae@user/euouae)
[14:07:06] *** Joins: LeoTal (~LeoTal@86.170.86.79.rev.sfr.net)
[14:07:49] <otisolsen70> nubonix, I try to install pyhief via pip. It fails with the traceback here: https://paste.yt/p15599.html. I expect it to install pyheif without errors.
[14:08:19] *** Joins: Auron (Auron956@user/auron)
[14:08:28] <nubonix> otisolsen70: a tag is not needed, as this is a global question
[14:08:39] <nubonix> otisolsen70: however, what operating system are you using?
[14:08:50] <otisolsen70> nubonix, debian linux (buster)
[14:09:05] *** Quits: rigid (~rigid@user/rigid) (Quit: +++ ATH)
[14:09:27] <nubonix> otisolsen70: okay, how are you installing it? [the pip command you are using]
[14:09:45] <nubonix> that is providing you the error
[14:09:52] <nubonix> giving*
[14:10:21] <rannnn8888> nubonix i slove this
[14:10:23] <otisolsen70> nubonix, it is in the paste: venv/bin/pip3 install -Ur requirements.txt
[14:10:29] <nubonix> otisolsen70: also, have you installed the dependancies before using pip?
[14:10:32] <rannnn8888> i need add the policy = asyncio.WindowsSelectorEventLoopPolicy()
[14:10:32] <rannnn8888> asyncio.set_event_loop_policy(policy)
[14:11:02] <otisolsen70> nubonix, yes.
[14:11:17] <rannnn8888> nubonix u see amazing :D
[14:11:49] <otisolsen70> nubonix, I ran apt install libffi libheif-dev libde265-dev
[14:11:49] <otisolsen70>  as mentioned on https://pypi.org/project/pyheif/.  libffi is actually called libffi6. But I have installed that.
[14:12:30] *** Joins: MikZyth (~MikZyth@188.65.242.200)
[14:13:23] <euouae> otisolsen70: mentions debian buster here, https://github.com/carsales/pyheif/issues/1
[14:14:26] <euouae> It may be an issue with setup.py. The sizeof error means that some definitions are missing, this would be the case if the headers can not be found
[14:16:16] <otisolsen70> euouae, hmm.. I have read through the issue. It was closed, but I do not really see any real conclusion...
[14:16:31] <otisolsen70> euouae, someone said he installed libheif-dev libde265-dev x265 libffi-dev. However, tthis does not make it work.
[14:17:08] *** Joins: entuland (~entuland@user/entuland)
[14:18:21] <euouae> otisolsen70: the solution according to the thread is to install everything from source
[14:18:38] <euouae> so do not use a package manager
[14:18:57] <otisolsen70> euouae, so I need a libheif installed from source?
[14:19:04] <euouae> everything involved
[14:19:39] <otisolsen70> euouae, everything involved? Meaning Python 3 from  source? Debian buster from source? pyheif from source? pip from source?
[14:19:45] <otisolsen70> A LOT is involved.
[14:20:01] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::2f4b)
[14:20:15] <euouae> First you need to bang two rocks together to get fire
[14:20:35] *** km_ is now known as km
[14:20:52] <euouae> Try installing pyheif from source like @fdoumet mentions
[14:22:12] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Quit: WeeChat 2.8)
[14:22:45] <otisolsen70> euouae, so if I run the build command as  suggested by fdoumet, then I build libheif. But is this for the virtualenv only or system wide? Will it work doing it inside the venv at all?
[14:23:00] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[14:23:15] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[14:23:44] <euouae> Try
[14:23:50] <otisolsen70> euouae, instead of doing make install. Should I be able to move some  .so file into my venv and make it work only for the venv?
[14:24:01] <euouae> It's a header issue
[14:25:04] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 246 seconds)
[14:26:28] *** Joins: iflema (~ian@user/iflema)
[14:29:33] <otisolsen70> euouae, I am trying to just make it with ./configure --prefix=/data/photo/photo/sigal-dev/venv/usr/local hopefully that will install it in the venv
[14:29:53] <euouae> no don't do that
[14:29:58] <euouae> just do what the instructions say
[14:31:06] *** Joins: greedom (~greedom@2001:16b8:2e0c:3800:805f:f707:b9c6:43e8)
[14:31:16] <otisolsen70> euouae, that will install libheif unmanaged on the entire machine. That would be great if it was a docker container as described in the issue. But it is not. It is a physical machine doing lots of other stuff. So I risk messing up a lot that actually woroks.
[14:31:19] <otisolsen70> works*
[14:32:36] *** Quits: Jigsy (~Jigsy@user/jigsy) (Ping timeout: 272 seconds)
[14:32:36] <euouae> I don't understand the risk
[14:33:02] *** Joins: Jigsy (~Jigsy@user/jigsy)
[14:33:39] *** Quits: acresearch (~acresearc@user/acresearch) (Quit: WeeChat 2.8)
[14:35:13] *** Quits: greedom (~greedom@2001:16b8:2e0c:3800:805f:f707:b9c6:43e8) (Remote host closed the connection)
[14:35:24] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Quit: leaving)
[14:36:02] *** Joins: greedom (~greedom@2001:16b8:2e0c:3800:805f:f707:b9c6:43e8)
[14:37:30] *** Quits: brabrax_ (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[14:38:17] <ThiefMaster> hey, any recommendation what's the best python (3) library for SAML SSO?
[14:38:37] *** Joins: brabrax_ (~brabrax@user/brabrax)
[14:38:43] <Gustavo6046> Everyone is my friend by default
[14:38:50] <Gustavo6046> that includes you habn
[14:38:55] <Gustavo6046> you can't escape the friend ray!
[14:38:56] <ThiefMaster> (the application would be the SP, not an IdP)
[14:39:25] <p-i-> How might I go about plotting something like this: https://pasteboard.co/KavxyOC.png ?
[14:40:30] *** Quits: susam (~susam@user/susam) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:40:39] <p-i-> I think I can use multiple sub-figures in matplotlib, but how to achieve the bars? Each bar has (time, red_or_green, min, max)
[14:40:46] *** Joins: susam (~susam@user/susam)
[14:42:13] <p-i-> If I could raw-plot the lines, that would do it, I guess.
[14:42:20] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[14:43:04] <jinsun> p-i-: isn't it just line plot with (time, min) and (time, max) as the points
[14:44:39] *** Joins: acresearch (~acresearc@user/acresearch)
[14:46:08] *** Joins: Jigsy` (~Jigsy@user/jigsy)
[14:46:08] *** Quits: Jigsy (~Jigsy@user/jigsy) (Killed (NickServ (GHOST command used by Jigsy`)))
[14:46:32] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 272 seconds)
[14:46:49] *** Joins: cheater (~Username@user/cheater)
[14:48:12] *** Jigsy` is now known as Jigsy
[14:51:24] *** Joins: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com)
[14:51:40] *** Quits: KindOne (kindone@user/kindone) (Ping timeout: 246 seconds)
[14:52:10] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 240 seconds)
[14:53:57] *** Quits: acresearch (~acresearc@user/acresearch) (Quit: WeeChat 2.8)
[14:54:07] *** Quits: rsrx (~rsrx@103.225.150.81) (Ping timeout: 246 seconds)
[14:54:15] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[14:54:54] *** Joins: wyclif (~wyclif@user/wyclif)
[14:56:29] *** Quits: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com) (Ping timeout: 252 seconds)
[14:58:36] *** Joins: azazello (~azazello@109.75.158.195)
[14:59:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[15:00:18] *** Quits: inom (~inom@176.59.102.225) (Quit: WeeChat 3.1)
[15:01:36] *** Joins: timkofu (~timkofu@user/timkofu)
[15:01:38] <timkofu> Hi
[15:02:31] *** Trieste_ is now known as Trieste
[15:03:18] *** Quits: candyman (~candyman@user/candyman) (Quit: candyman)
[15:04:55] *** Quits: Jigsy (~Jigsy@user/jigsy) (Killed (NickServ (GHOST command used by Jigsy`)))
[15:05:01] *** Joins: Jigsy` (~Jigsy@user/jigsy)
[15:05:16] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[15:06:26] *** Joins: wyclif (~wyclif@user/wyclif)
[15:06:54] *** Jigsy` is now known as Jigsy
[15:06:55] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[15:08:43] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[15:08:58] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[15:10:14] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 255 seconds)
[15:11:31] *** Joins: akaWolf (~akaWolf@akawolf.org)
[15:11:52] *** Quits: mawk (mawk@wireguard/contributor/mawk) (Ping timeout: 272 seconds)
[15:12:13] *** Joins: mawk (mawk@wireguard/contributor/mawk)
[15:14:31] *** Joins: iflema (~ian@user/iflema)
[15:17:57] *** Joins: ExpiredKebab (~sgreadly@2407:7000:a2f5:e803:a071:5a81:dc87:23b1)
[15:18:49] *** Quits: ExpiredKebab (~sgreadly@2407:7000:a2f5:e803:a071:5a81:dc87:23b1) (Client Quit)
[15:20:06] *** Quits: sebastianos (~sebastian@user/sebastianos) (Ping timeout: 272 seconds)
[15:21:19] *** Joins: sebastianos (~sebastian@user/sebastianos)
[15:24:41] *** Joins: rgp6 (~rgp@user/rgp)
[15:26:07] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[15:26:26] *** Quits: rgp (~rgp@user/rgp) (Ping timeout: 272 seconds)
[15:26:26] *** rgp6 is now known as rgp
[15:28:02] *** Quits: rgp (~rgp@user/rgp) (Client Quit)
[15:29:52] *** Quits: jvalleroy (~quassel@user/jvalleroy) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[15:30:01] *** Joins: jvalleroy (~quassel@user/jvalleroy)
[15:30:01] *** Quits: jvalleroy (~quassel@user/jvalleroy) (Client Quit)
[15:30:11] *** Joins: jvalleroy (~quassel@user/jvalleroy)
[15:30:11] *** Quits: jvalleroy (~quassel@user/jvalleroy) (Client Quit)
[15:30:20] *** Joins: jvalleroy (~quassel@user/jvalleroy)
[15:30:20] *** Quits: jvalleroy (~quassel@user/jvalleroy) (Client Quit)
[15:30:29] *** Joins: jvalleroy (~quassel@user/jvalleroy)
[15:30:39] *** Joins: rgp (~rgp@user/rgp)
[15:31:25] *** Quits: galen (~gaken@user/galen) (Remote host closed the connection)
[15:31:33] *** Joins: galen (~gaken@user/galen)
[15:31:36] *** Joins: matiss (~matiss@almalinux/web/matiss)
[15:34:02] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 272 seconds)
[15:34:03] *** Quits: Crassus (~Crassus@user/crassus) (Quit: Textual IRC Client: www.textualapp.com)
[15:35:48] *** Joins: Crassus (~Crassus@user/crassus)
[15:36:10] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[15:36:34] *** Quits: sebastianos (~sebastian@user/sebastianos) (Ping timeout: 272 seconds)
[15:36:50] *** Joins: sebastianos (~sebastian@user/sebastianos)
[15:37:14] *** Joins: gggp (~gggp@60.10.194.47)
[15:40:48] *** Joins: candyman (~candyman@user/candyman)
[15:42:38] *** Joins: ntdll (~ntdll@user/ntdll)
[15:44:06] *** Joins: michelem (~Adium@51.154.167.11)
[15:45:38] *** Joins: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com)
[15:46:07] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[15:46:07] *** Joins: pnoud (~pnoud@user/pnoud)
[15:46:07] <michelem> Hi folks! A basic question for anybody who used gRPC with python: Does each incoming connection create a new instance of my "Servicer" implementation, or is there a singleton instance serving all clients, or an unpredictable mixture?
[15:46:11] *** Joins: node1 (~node1@user/node1)
[15:46:11] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:a6ea:d549:1785:23d0)
[15:46:42] *** Quits: gggp (~gggp@60.10.194.47) (Ping timeout: 272 seconds)
[15:46:54] <michelem> I didn't find this explained in any document, so I suppose the gRPC compiler makes no promise there – i.e. I must assume the most general case – a mixture.
[15:47:17] *** Joins: milosz__ (~milosz@user/milosz)
[15:48:51] <nedbat> michelem: i took a quick spin through some of their docs, and didn't find anything
[15:49:22] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[15:49:33] *** Quits: minip (~minip@user/minip) (Remote host closed the connection)
[15:50:30] *** Quits: milosz_ (~milosz@user/milosz) (Ping timeout: 272 seconds)
[15:50:39] <michelem> nedbat: Very nice of yours, thanks. And yeah, I found gRPC docs to be barebones as well. Even for the Go language, which is its native platform. Clearly still a relatively young framework.
[15:51:08] *** Joins: rhax (~yannick@user/rhax)
[15:51:46] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[15:52:24] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 272 seconds)
[15:52:27] *** Joins: y1n (~y1n@84-115-64-236.wifi.dynamic.surfer.at)
[15:52:34] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[15:53:18] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[15:53:53] *** Quits: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com) (Ping timeout: 255 seconds)
[15:55:10] <michelem> I tested out the technology with 2 projects to collect experience with it, as lots of people are crazy for protoBuf. I see applications, but for quite specific cases. It's no silver bullet.
[15:55:59] <ChrisWarrick> it solves google’s problems, kinda, but it might not solve yours
[15:56:06] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[15:56:12] *** Quits: ATAD (~ATAD@user/atad) (Ping timeout: 272 seconds)
[15:57:51] <michelem> sure. And many situations with chatty distributed services. That comes at a price in several areas.
[15:58:23] <michelem> anyway, this channel proves friendly and useful as ever. Thanks folks.
[16:00:34] *** Quits: rhax (~yannick@user/rhax) (Remote host closed the connection)
[16:05:12] *** Joins: Linux77 (~Linux7_7@2804:2484:8150:eb0:2e91:8ad1:7947:8fb1)
[16:05:42] *** Quits: willcl_ark (~quassel@user/willcl-ark/x-8282106) (Ping timeout: 272 seconds)
[16:06:15] *** Quits: jacktar (~whiteshad@gateway/tor-sasl/jacktar) (Ping timeout: 244 seconds)
[16:06:58] *** Joins: jacktar (~whiteshad@gateway/tor-sasl/jacktar)
[16:09:38] *** Quits: timkofu (~timkofu@user/timkofu) (Read error: Connection reset by peer)
[16:10:11] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[16:16:29] *** Joins: drincruz_ (~drincruz@cpe-69-203-74-164.hvc.res.rr.com)
[16:16:30] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[16:18:51] <p-i-> I'm doing `lines = [(1,1), (3,2), 'r', ...]; matplotlib.pyplot.plot(*lines)`. Does anyone know how to use RGB instead of 'r'?
[16:19:02] <p-i-> If I use (1,0,0) I get an error
[16:19:08] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:20:51] <ChrisWarrick> p-i-: what do the matplotlib docs say about specifying color? also, it would be better if you specified it explicitly instead of just including it as an argument
[16:21:45] <p-i-> Can't... I need different segments to be different colors...
[16:22:18] <ChrisWarrick> what prevents you from not using * for this?
[16:23:03] <p-i-> What do you mean?
[16:24:32] <p-i-> ok looks like I can use hex strings, after googling 'matplotlib specify color'
[16:24:33] <p-i-> tx
[16:25:06] <p-i-> doc _does_ say I should be able to (1,0,0) but ... ah maybe it's a * unpacking issue...?
[16:25:20] <p-i-> Nope, I don't get it
[16:25:24] *** Quits: Linux77 (~Linux7_7@2804:2484:8150:eb0:2e91:8ad1:7947:8fb1) (Quit: Leaving)
[16:25:36] <p-i-> Anyway, I can use hex-strings for this fine
[16:25:44] *** Joins: akaWolf (~akaWolf@akawolf.org)
[16:28:14] <ChrisWarrick> there’s a difference between (a, b, c) and (a, b, color=c)
[16:28:16] *** Joins: wyclif (~wyclif@user/wyclif)
[16:28:19] *** Joins: ATAD (~ATAD@user/atad)
[16:28:44] <ChrisWarrick> the matplotlib api is a bit of a trainwreck, it sometimes lets you do the first way, but not always
[16:29:21] <Repiphany> Nicer to just be as explicit as possible instead of using the shortcuts
[16:29:37] <Repiphany> The third positional argument is a "format string", not just a color
[16:31:32] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[16:33:22] *** Joins: rsrx (~rsrx@103.225.150.81)
[16:33:43] *** Quits: euouae (~euouae@user/euouae) (Quit: euouae)
[16:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:36] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:37:02] *** Joins: xhor (~xhor@79.112.4.198)
[16:37:47] *** Quits: jazzy (~jaziz@2600:380:8653:59ba:7d3d:6a42:3e7f:d235) (Ping timeout: 252 seconds)
[16:38:54] <tWqaq> Please help me to resolve this issue asked yesterday: https://discourse.gnome.org/t/use-glib-mainloop-new-none-false-quit-to-terminate-glib-mainloop-new-none-false-run-not-work-well-what-is-wrong/6934. Thank you :)
[16:42:05] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[16:45:09] *** Joins: Julian (~tos9@python/site-packages/Julian)
[16:46:04] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 265 seconds)
[16:46:33] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[16:49:29] *** Joins: iomari891 (~iomari891@105.112.138.38)
[16:49:41] *** Quits: y1n (~y1n@84-115-64-236.wifi.dynamic.surfer.at) (Ping timeout: 255 seconds)
[16:51:02] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[16:51:42] *** Quits: frost (~frost@59.71.241.179) (Quit: Connection closed)
[16:52:50] *** Quits: MikZyth (~MikZyth@188.65.242.200) (Ping timeout: 255 seconds)
[16:53:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[16:53:24] *** orbatos__ is now known as orbatos
[16:56:11] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[16:57:56] *** Joins: frdy (~mcfrdy@user/mcfrdy)
[16:58:26] *** Parts: LeoTal (~LeoTal@86.170.86.79.rev.sfr.net) ()
[17:01:03] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[17:01:36] *** Joins: Naan (~naan@user/naan)
[17:02:03] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:05:47] *** Joins: whaley (~whaley@066-169-090-170.res.spectrum.com)
[17:06:36] *** Quits: frdy (~mcfrdy@user/mcfrdy) (Quit: Leaving)
[17:07:40] *** Joins: mcfrdy (uid507892@user/mcfrdy)
[17:08:40] *** Joins: jazzy (~jaziz@2600:380:8653:59ba:fdf6:260a:bc2c:db50)
[17:13:34] *** Joins: cdown (~cdown@89.32.122.5)
[17:14:04] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (Read error: Connection reset by peer)
[17:14:55] *** Joins: pmcnabb (~pmcnabb@user/pmcnabb)
[17:16:10] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.2)
[17:16:14] *** Quits: cdown_ (~cdown@163.114.131.1) (Ping timeout: 255 seconds)
[17:18:07] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[17:18:21] *** Quits: qpdb| (~qpdb@user/qpdb) (Quit: WeeChat 3.1)
[17:18:32] *** Quits: michelem (~Adium@51.154.167.11) (Quit: Leaving.)
[17:18:46] *** Joins: michelem (~Adium@51.154.167.11)
[17:22:15] *** Quits: Cheaterman (~Cheaterma@82-65-202-73.subs.proxad.net) (Changing host)
[17:22:15] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[17:22:58] *** Quits: drincruz_ (~drincruz@cpe-69-203-74-164.hvc.res.rr.com) (Ping timeout: 272 seconds)
[17:23:06] *** Quits: bidouille (~user_name@trois.potager.org) (Quit: leaving)
[17:23:13] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (Read error: Connection reset by peer)
[17:23:28] *** Joins: bidouille (~user_name@trois.potager.org)
[17:23:37] *** Joins: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea)
[17:25:23] *** Joins: pmcnabb (~pmcnabb@user/pmcnabb)
[17:26:48] *** Quits: michelem (~Adium@51.154.167.11) (Quit: Leaving.)
[17:27:17] *** Quits: jazzy (~jaziz@2600:380:8653:59ba:fdf6:260a:bc2c:db50) (Ping timeout: 252 seconds)
[17:28:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[17:28:40] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 272 seconds)
[17:28:55] *** Joins: cheater (~Username@user/cheater)
[17:29:34] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Read error: Connection reset by peer)
[17:31:22] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[17:33:02] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Read error: Connection reset by peer)
[17:33:25] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[17:35:02] *** Joins: heco (~redrum@user/redrum88)
[17:38:03] *** Joins: drincruz_ (~drincruz@cpe-69-203-74-164.hvc.res.rr.com)
[17:40:44] *** Joins: wyclif (~wyclif@user/wyclif)
[17:45:14] *** Quits: drincruz_ (~drincruz@cpe-69-203-74-164.hvc.res.rr.com) (Ping timeout: 252 seconds)
[17:45:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[17:46:57] *** Joins: pnoud (~pnoud@user/pnoud)
[17:47:25] *** Joins: KindOne (kindone@user/kindone)
[17:49:09] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[17:51:14] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[17:51:55] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 246 seconds)
[17:51:59] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[17:52:24] *** Joins: drincruz_ (~drincruz@cpe-69-203-74-164.hvc.res.rr.com)
[17:52:54] *** Joins: pycurious (~Adium@user/pycurious)
[17:52:57] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:8de0:a840:44e1:eebc)
[17:54:47] *** Joins: computeiro (~Wender@189.37.69.4)
[18:00:11] *** Joins: wyclif (~wyclif@user/wyclif)
[18:03:19] *** Joins: AskerX (~Guest58@103.125.235.22)
[18:03:30] *** Quits: drincruz_ (~drincruz@cpe-69-203-74-164.hvc.res.rr.com) (Ping timeout: 272 seconds)
[18:05:14] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[18:05:32] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[18:06:02] *** Joins: brickfat (~brickfat@user/brickfat)
[18:06:26] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[18:09:28] *** Joins: brylie (~Thunderbi@88-114-218-116.elisa-laajakaista.fi)
[18:09:45] *** Parts: brickfat (~brickfat@user/brickfat) ()
[18:18:43] *** Joins: wyclif (~wyclif@user/wyclif)
[18:21:05] *** Joins: trampel (~trampel@2601:602:9c00:921:6ec3:f0fc:617b:8eac)
[18:24:35] *** Joins: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net)
[18:25:20] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[18:26:21] *** Quits: therealjumbo1 (~zignegoj@mail.hedonline.com) (Read error: Connection reset by peer)
[18:26:27] *** Joins: therealjumbo2 (~zignegoj@mail.hedonline.com)
[18:26:30] *** Joins: m1n10n (georgecloo@cpe-76-184-204-251.tx.res.rr.com)
[18:26:32] *** Quits: therealjumbo2 (~zignegoj@mail.hedonline.com) (Read error: Connection reset by peer)
[18:26:45] *** Joins: therealjumbo2 (~zignegoj@mail.hedonline.com)
[18:27:59] *** Quits: brylie (~Thunderbi@88-114-218-116.elisa-laajakaista.fi) (Quit: brylie)
[18:30:14] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[18:31:08] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-09dd-4ce8-9138-5b64.res6.spectrum.com)
[18:34:14] *** Joins: y1n (~y1n@84-115-65-142.wifi.dynamic.surfer.at)
[18:38:10] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[18:39:07] *** Joins: rigid (~rigid@user/rigid)
[18:39:16] <rigid> ahoy
[18:40:49] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:8de0:a840:44e1:eebc) (Ping timeout: 246 seconds)
[18:40:58] <rigid> is there some library for user-friendly pattern matching on the commandline? i want to filter a list of dictionaries by matching attributes with rules
[18:41:12] *** Quits: ntdll (~ntdll@user/ntdll) (Ping timeout: 268 seconds)
[18:41:32] *** Quits: tm007 (uid287041@id-287041.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[18:41:48] <rigid> i suppose there already is a solution but I can't come up with a useful search term.
[18:41:57] <NeilRG> AhmedAmerican, yes
[18:41:59] *** Quits: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net) (Ping timeout: 252 seconds)
[18:42:51] <Julian> rigid: https://glom.readthedocs.io/en/latest/cli.html
[18:42:57] *** Joins: jimm (~jim@about/linux/staff/jim)
[18:43:08] <rigid> currently I just use "--filter <attribute> <regex>" and match that. But regexes are not very userfriendly. I'd like something like "--filter some_attribute >= 5" or "--filter some_attribute ~= word"
[18:43:40] *** Quits: B33F_133F (~b33f1337@host.b33f1337.com) (Ping timeout: 268 seconds)
[18:43:40] *** Quits: jimm (~jim@about/linux/staff/jim) (Remote host closed the connection)
[18:44:24] <grym> rigid: glom has a cli; otherwise, you could do the jq dance if you can make it json
[18:44:54] *** Quits: greedom (~greedom@2001:16b8:2e0c:3800:805f:f707:b9c6:43e8) (Remote host closed the connection)
[18:45:01] <rigid> Julian: that's somewhat what I look for, but for professionals. Not needing the user to pass JSON or regexes on the commandline is what I need.
[18:45:21] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[18:45:55] *** Joins: zebrag (~chris@user/zebrag)
[18:46:06] <rigid> grym: ah no, my app has a list of dictionaries internally. Not as output. I just want something that parses & applies matching rules
[18:46:40] <grym> rigid: glom does that too, but you said "on the command line" specifically...
[18:47:18] <rigid> yeah, my tool is a cli tool.
[18:47:36] <Julian> well then you don't want a CLI, you have one :)
[18:47:54] <rigid> hm, maybe I can write a simple parser to create glom Match() patterns
[18:48:15] <rigid> Julian: yeah
[18:48:32] <grym> if you want to write a parser; parsimonious
[18:48:56] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Quit: Leaving)
[18:49:06] <rigid> i'd rather like to avoid it. I can't really believe there's nothing that parses stuff like "A == B" etc. already
[18:49:06] <grym> but i tend to dislike CLIs whose arguments are stringly typed DSLs
[18:49:14] <grym> i'm looking at you, ffmpeg
[18:49:22] *** Joins: skapata (~Skapata@user/skapata)
[18:49:24] <grym> rigid: i mean, there's ast.literal_eval()
[18:49:44] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:49:50] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 268 seconds)
[18:50:17] *** Joins: nyah (~nyah@90.221.186.180)
[18:50:41] <rigid> grym: how else would you select certaint entities from a list of entities? like gnu find does it
[18:51:26] <rigid> just that I don't filter files but documents to be downloaded from various webportals (where you want things like "fetch newest entry", "fetch entries where category == foobar" and so on)
[18:51:33] <Julian> it depends what language you want your people to write -- JSON I understand not wanting someone to write, but I think there's a lot of overlap between "people who know regexes" and "people who know what A == B means itself, or who know how to run a CLI"
[18:51:47] <Julian> but possibly you may just want jq's language then?
[18:51:55] <rigid> grym: hm... that sounds like a receipe for disaster :) but I didn't know literal_eval() ... very interesting
[18:51:56] <Julian> Which you can access from Python via e.g. https://github.com/mwilliamson/jq.py I think
[18:52:21] <Julian> and then someone can indeed write stuff like .foo > 12
[18:52:37] <Julian> (though possibly you wrap what they wrote with a select())
[18:52:59] *** Joins: node1 (~node1@user/node1)
[18:53:06] <rigid> Julian: if I have to write everything myself, i'd prefer jq. The problem is, that my app then would need to download everything and filter later using jq. I'd need something like glom in my app.
[18:53:15] <rigid> ah
[18:53:25] <rigid> of course there are python bindings for jq :-P
[18:53:52] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[18:54:06] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Remote host closed the connection)
[18:54:22] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[18:54:24] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[18:54:55] <rigid> hm, if literal_eval() wouldn't impose a security showstopper, it might be the most elegant solution
[18:55:00] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[18:55:23] <grym> it's at least safer than eval() :P
[18:55:28] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:8de0:a840:44e1:eebc)
[18:55:48] <rigid> but since i'm already outputting JSON in some cases, jq might be the best way to go.
[18:55:56] <grym> "This can be used for safely evaluating strings containing Python values from untrusted sources without the need to parse the values oneself. It is not capable of evaluating arbitrarily complex expressions, for example involving operators or indexing."
[18:56:39] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:58:34] <rigid> I think i'll try jq. it's not super user-friendly but much better for the job than I anticipated
[18:58:56] <rigid> grym: Julian: thank you
[18:59:38] *** Joins: akk (~akk@174-28-112-132.albq.qwest.net)
[19:01:17] <rigid> oh btw, if you are looking for automated document scraping and like to try alpha-stage software: https://github.com/heeplr/document-dl (currently only interesting for germans, tho)
[19:02:12] *** Joins: Linux77 (~Linux7_7@228-179-233-186.raimax.com.br)
[19:02:35] *** Quits: jtck (~jtck@222.164.13.173) (Quit: Leaving)
[19:04:45] *** Joins: jtck (~jtck@222.164.13.173)
[19:05:06] *** Quits: jtck (~jtck@222.164.13.173) (Remote host closed the connection)
[19:07:15] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[19:07:51] *** Joins: jtck (~jtck@222.164.13.173)
[19:09:22] *** Joins: gareppa (~gareppa@user/gareppa)
[19:10:27] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[19:10:59] *** Quits: jtck (~jtck@222.164.13.173) (Remote host closed the connection)
[19:11:40] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Read error: Connection reset by peer)
[19:11:58] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[19:12:32] *** Joins: jtck (~jtck@222.164.13.173)
[19:13:14] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[19:13:23] *** Joins: kolcon (~kolcon@v.kolouch.org)
[19:13:58] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 252 seconds)
[19:15:40] *** Joins: zeden (~zeden@user/zeden)
[19:16:28] *** Joins: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net)
[19:16:58] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[19:17:13] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[19:23:08] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 255 seconds)
[19:23:30] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[19:24:51] *** Joins: slee (~slee@user/slee)
[19:24:51] *** Joins: Lando-SpacePimp (~LandoC@user/lando-spacepimp)
[19:24:56] *** Joins: chance (~chance@user/chance)
[19:25:49] <slee> hi, trying to convert unix timestap to date/time with version 3.9.5...all examples i can find online are failing as i'm guessing it's older python functions
[19:26:29] *** Joins: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr)
[19:26:55] <marduk> slee: datetime.fromtimestamp() doesn't work?
[19:27:42] *** Joins: greedom (~greedom@2001:16b8:2e0c:3800:805f:f707:b9c6:43e8)
[19:28:33] *** Quits: greedom (~greedom@2001:16b8:2e0c:3800:805f:f707:b9c6:43e8) (Remote host closed the connection)
[19:29:19] *** Joins: greedom (~greedom@2001:16b8:2e0c:3800:805f:f707:b9c6:43e8)
[19:29:43] *** Joins: MikZyth (~MikZyth@188.65.242.200)
[19:30:01] <slee> marduk, aaaah, thanks, i was trying datetime.datetime.fromtimestamp()
[19:30:05] <slee> works, thanks
[19:31:01] *** Joins: dez (uid92154@user/dez)
[19:31:04] *** Joins: brumla (~brumla@cst-prg-16-151.cust.vodafone.cz)
[19:32:03] *** Joins: Ninkentio (~Ninkentio@117.237.241.239)
[19:32:36] <marduk> datetime.datetime.fromtimestamp() and datetime.fromtimestamp() refer to the same thing, it just depends on how you imported it. Unfortunately the module and the class inside the module have the same name.
[19:34:53] *** Quits: akk (~akk@174-28-112-132.albq.qwest.net) (Quit: +++)
[19:36:27] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Remote host closed the connection)
[19:36:52] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Remote host closed the connection)
[19:37:16] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[19:37:52] *** Quits: y1n (~y1n@84-115-65-142.wifi.dynamic.surfer.at) (Ping timeout: 272 seconds)
[19:38:06] *** Joins: LiftLeft (~LiftLeft@154.21.114.114)
[19:38:27] *** Joins: y1n (~y1n@84-115-64-95.wifi.dynamic.surfer.at)
[19:39:47] *** Quits: MikZyth (~MikZyth@188.65.242.200) (Ping timeout: 268 seconds)
[19:41:38] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 268 seconds)
[19:41:53] *** Parts: jaggz (~jaggz@user/jaggz) (Leaving)
[19:42:04] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[19:43:14] *** Joins: drincruz_ (~drincruz@cpe-69-203-74-164.hvc.res.rr.com)
[19:43:41] *** Quits: Fluxx (~Fluxx@user/fluxx) (Ping timeout: 252 seconds)
[19:44:12] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 272 seconds)
[19:45:55] *** Quits: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net) (Quit: Client closed)
[19:47:47] *** Joins: pnoud (~pnoud@user/pnoud)
[19:47:49] *** Joins: Sheilong (uid293653@id-293653.charlton.irccloud.com)
[19:51:03] *** Joins: MikZyth (~MikZyth@188.65.242.200)
[19:51:04] *** Quits: MikZyth (~MikZyth@188.65.242.200) (Client Quit)
[19:52:50] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 252 seconds)
[19:55:17] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[19:55:46] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[19:56:01] *** Quits: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 265 seconds)
[19:56:09] *** Quits: Linux77 (~Linux7_7@228-179-233-186.raimax.com.br) (Quit: Leaving)
[19:56:59] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[19:57:09] *** Joins: brylie (~Thunderbi@88-114-218-116.elisa-laajakaista.fi)
[19:57:23] *** Quits: pgib (~textual@173.38.117.69) (Remote host closed the connection)
[19:59:25] *** Joins: Warped (~Warped@user/warped)
[19:59:28] *** Joins: chaosite (~chaosite@user/chaosite)
[19:59:48] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 252 seconds)
[20:00:02] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 255 seconds)
[20:01:12] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[20:01:46] *** Quits: drincruz_ (~drincruz@cpe-69-203-74-164.hvc.res.rr.com) (Ping timeout: 258 seconds)
[20:02:16] *** Joins: iomari891 (~iomari891@105.112.138.38)
[20:04:05] *** Quits: brumla (~brumla@cst-prg-16-151.cust.vodafone.cz) (Quit: Client closed)
[20:05:02] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[20:05:16] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[20:07:04] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Read error: Connection reset by peer)
[20:07:22] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[20:07:42] *** Quits: brylie (~Thunderbi@88-114-218-116.elisa-laajakaista.fi) (Quit: brylie)
[20:08:49] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Read error: Connection reset by peer)
[20:09:07] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[20:10:14] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Quit: Leaving)
[20:11:23] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Remote host closed the connection)
[20:11:40] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[20:13:26] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[20:14:56] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Read error: Connection reset by peer)
[20:15:14] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[20:15:44] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[20:16:39] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[20:17:00] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[20:17:05] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[20:17:44] *** Joins: shrysr (~shrysr@2600:3c04::f03c:91ff:fece:e233)
[20:18:45] *** Joins: wyclif (~wyclif@user/wyclif)
[20:21:46] *** Joins: Lando-HoloNet (~LandoC@user/lando-spacepimp)
[20:22:31] *** Quits: be3uykpy (~be3uykpy@141.226.9.247) (Read error: Connection reset by peer)
[20:24:01] *** Quits: chowmeined (~chowmeine@user/chowmeined) (Read error: Connection reset by peer)
[20:24:22] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Ping timeout: 252 seconds)
[20:25:19] *** Joins: gggp (~gggp@60.10.194.47)
[20:25:22] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:a6ea:d549:1785:23d0) (Quit: Leaving)
[20:25:48] <gggp> is there nice practice of python for ecommerce
[20:25:54] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[20:26:16] *** Quits: Dotz0cat (~Dotz0cat@h179.194.186.173.dynamic.ip.windstream.net) (Ping timeout: 246 seconds)
[20:28:27] *** Joins: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[20:29:14] *** Quits: greedom (~greedom@2001:16b8:2e0c:3800:805f:f707:b9c6:43e8) (Remote host closed the connection)
[20:30:00] *** Joins: greedom (~greedom@2001:16b8:2e0c:3800:805f:f707:b9c6:43e8)
[20:31:40] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[20:36:04] <sudomann_> ImportError: cannot import name 'parse_datetime' from 'ciso8601' (unknown location)
[20:36:11] <sudomann_> What is that telling me?
[20:36:16] *** Joins: yogoyo (~patrick@user/yogoyo)
[20:36:37] <sudomann_> Does this suggest the package is installed and function being imported is absent?
[20:36:43] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:37:03] <sudomann_> I've never seen (unkown location) in an import error
[20:38:22] *** Quits: y1n (~y1n@84-115-64-95.wifi.dynamic.surfer.at) (Ping timeout: 268 seconds)
[20:38:25] <gggp> Does & operator invoke AsRef trait ?
[20:38:48] *** Joins: y1n (~y1n@84-115-65-39.wifi.dynamic.surfer.at)
[20:39:09] <ChrisWarrick> gggp: this is #python, there is no such thing as traits or AsRef
[20:39:36] <gggp> oops
[20:39:47] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[20:40:00] <sudomann_> hello fellow crustacean :P gggp
[20:40:17] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[20:41:33] *** Joins: LittleHillMYR (~Lil@user/littlehillmyr)
[20:43:34] *** Quits: trampel (~trampel@2601:602:9c00:921:6ec3:f0fc:617b:8eac) (Quit: Leaving)
[20:43:41] *** Quits: slee (~slee@user/slee) (Quit: Leaving)
[20:44:22] *** Quits: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 272 seconds)
[20:44:22] *** Quits: gggp (~gggp@60.10.194.47) (Ping timeout: 272 seconds)
[20:46:43] *** Joins: Dantalion (~Dantali0n@217-123-73-108.cable.dynamic.v4.ziggo.nl)
[20:46:54] *** Quits: Dantali0n (~Dantali0n@217-123-73-108.cable.dynamic.v4.ziggo.nl) (Ping timeout: 272 seconds)
[20:51:58] *** Quits: LittleHillMYR (~Lil@user/littlehillmyr) (Quit: WeeChat 3.2)
[20:54:55] *** Joins: teut (~teut@106.214.16.139)
[20:55:13] *** Joins: northernsage (~northerns@187.107.158.146)
[20:55:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[20:55:51] <teut> https://bpa.st/OHJQ  I forgot why I used the "start" variable here. Can someone tell what's special it is doing in the algorithm?
[20:55:58] <teut> the algorithm works
[20:56:45] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[20:57:09] *** Joins: northernsage (~northerns@187.107.158.146)
[20:58:22] *** Quits: northernsage (~northerns@187.107.158.146) (Client Quit)
[20:58:52] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Remote host closed the connection)
[20:59:02] <ferros> teut: you want us to tell you why you wrote something in your code? ;)
[20:59:10] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[20:59:40] <teut> '=D  yes, I solved this  on 01/26/2020 15:57
[20:59:55] <teut> it's a leetcode problem, no clean code
[21:00:20] <teut> actually, it's almost impossible to do clean code with these algorithms
[21:00:35] <bjs> teut: I'm not sure that is true :)
[21:00:38] <ferros> There's a thing you'd have to do if you were writing code for me
[21:00:41] <ferros> It's called comments
[21:00:59] <teut> oh ya, comments could have been put
[21:01:01] <bjs> teut: it takes practice to be able to write things cleanly (and usually, good use of abstractions)
[21:01:08] <teut> but , its too late now
[21:01:17] <bjs> teut: well, what happens if you remove start
[21:01:25] <bjs> if you remove it and something goes wrong, you'll soon see why you added it
[21:01:42] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[21:02:11] *** jmcantre1 is now known as jmcantrell
[21:02:40] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Client Quit)
[21:02:50] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[21:03:16] *** Quits: AskerX (~Guest58@103.125.235.22) (Ping timeout: 246 seconds)
[21:07:09] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[21:07:09] <phy1729> I came up with basically the same, but no start
[21:07:25] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[21:07:45] <teut> without start  "abba"    gives 3 but answer is 2
[21:07:48] *** Joins: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[21:07:59] <phy1729> OH its for if the start of the current substring is after when this char last was encountered
[21:08:27] *** Joins: wyclif (~wyclif@user/wyclif)
[21:08:35] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[21:08:56] <phy1729> The other option would be to filter the dict in the conditional branch to del those entries
[21:08:56] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 252 seconds)
[21:09:14] <bjs> teut: the answer is 2?
[21:09:19] <teut> yes
[21:09:34] <bjs> teut: because "ab" is the longest substring without repeating characters?
[21:09:47] <teut> Uploaded file: https://uploads.kiwiirc.com/files/65da7abef8143a764443ed49167388cd/image.png
[21:09:49] <teut> yes
[21:10:12] <bjs> teut: are you using some website to check whether you get the answer right?
[21:10:21] <teut> yes leetcode problems
[21:10:33] <bjs> teut: do you not try it out yourself, before having the website say/
[21:10:52] <teut> I don;t have all the test cases
[21:11:07] <bjs> teut: okay but you can come up with your own, to check it's correct?
[21:11:17] <teut> they only have their intelligently selected test cases
[21:11:25] <teut> no, that's difficult
[21:11:28] <bjs> it is?
[21:11:54] <bjs> teut: if you don't try come up with test cases yourself, then you're even running the code yourself and that doesn't seem like a good way to approach these coding problems :)
[21:12:12] <bjs> It's always a good idea to try understand the problem and come up with examples yourself and run your own code when trying to learn coding.
[21:12:19] *** Joins: northernsage (~northerns@187.107.158.146)
[21:12:20] <teut> I can try  all 26**10 ways   , random 10 digit numbers
[21:12:35] <bjs> teut: no, like make up some examples and just run your code to see what it does
[21:12:45] *** Joins: inom (~inom@176.59.102.225)
[21:12:50] <bjs> at the moment *you* don't even run your own code at all?  that can't be a good way to do this.
[21:12:52] <teut> random 10 length strings*
[21:13:42] <teut> what I ran it, and I failed 2 times
[21:13:50] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[21:13:52] <teut> Uploaded file: https://uploads.kiwiirc.com/files/7c19873e7b905dee19182afcbce3fbbc/image.png
[21:14:19] <teut> the companies which come at my college doesnt allow python
[21:14:25] <teut> it says do it in c /c++
[21:14:28] <teut> or java
[21:14:46] <bjs> teut: yes but I'm just saying, that *you* aren't even trying to run your own code at any point here. It's just a weird thing.  It's like learning woodworking but you hand the nail and hammer to a friend who actually does it for you.  If you're trying to learn you should try do things yourself
[21:15:13] <bjs> the point is, if you just run examples from the website you'll go "oh yeah of course" but if you try come up with examples yourself, and try actually run your code yourself you'll get a much better understanding of the problems and the corner cases.
[21:15:17] <teut> cant you see two Wrong Answer at    22:03?
[21:15:18] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Read error: Connection reset by peer)
[21:15:22] <bjs> teut: Yes?
[21:15:26] <teut> its the time now in india
[21:15:35] <teut> here today is  7/10
[21:15:45] <bjs> Yes..
[21:16:07] <teut> that *you* aren't even trying to run your own code at any point here     <     ---   "Yes"?
[21:16:12] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[21:16:27] <bjs> teut: that looks like the leetcode website, that's running the code for you, on the examples it made up
[21:16:43] <teut> and what is expected from me?
[21:16:50] <bjs> I'm just saying that this isn't a good way to approach these problems,  it's much better to try do as much as possible yourself
[21:16:50] <teut> it just runs its test cases
[21:17:33] <teut> no one can do all these interview problems which practicing from months
[21:17:36] <bjs> teut: I'm just saying that you will do better if you try come up with your own examples, and test your code yourself *before* asking the website.
[21:17:37] <teut>  or wrote learning
[21:17:45] <teut> without*
[21:18:01] <teut> ok , test driven you mean maybe
[21:18:04] <bjs> teut: no
[21:18:29] <bjs> teut: like when you learn algebra,  you are taught to check your own working out because _the process of checking your answers is really important to learning_
[21:19:14] <teut> but that wont lead me to O(n) solution
[21:19:52] <teut> ok , ok , your point is checking own examples. Ya fine
[21:20:18] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:20:57] <bjs> teut: I mean the problems aren't that hard,  like this problem here to do this in O(n) time is not very difficult.  I certainly expect that a competent programmer would be able to do this task without months of study for it.
[21:21:54] <teut> sure, days of memorization can help pass the interview easily but I don't have that ability
[21:22:13] <bjs> teut: I didn't say anything about memorization, you don't need to memorize anything to solve this problem
[21:22:17] <teut> so its just experience I build things upon
[21:22:58] <bjs> teut: yes you need that experience, you need the knowledge and understanding not just memorization. That's why I say you should do more yourself,  you'll have more success that way :)
[21:23:34] *** Joins: Pickchea (~private@user/pickchea)
[21:25:59] *** Quits: whaley (~whaley@066-169-090-170.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:26:15] *** Joins: wyclif (~wyclif@user/wyclif)
[21:28:42] *** Quits: northernsage (~northerns@187.107.158.146) (Quit: Leaving)
[21:31:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[21:31:32] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:8de0:a840:44e1:eebc) (Quit: Client closed)
[21:32:35] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::2f4b) (Quit: Konversation terminated!)
[21:36:46] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[21:37:59] *** Quits: y1n (~y1n@84-115-65-39.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[21:38:26] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[21:38:53] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.2)
[21:39:04] *** Joins: y1n (~y1n@84-115-65-39.wifi.dynamic.surfer.at)
[21:41:22] *** Joins: chowmeined (~chowmeine@user/chowmeined)
[21:42:03] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[21:42:11] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[21:43:55] *** Quits: inom (~inom@176.59.102.225) (Quit: WeeChat 3.1)
[21:44:25] *** Joins: wyclif (~wyclif@user/wyclif)
[21:44:29] *** Joins: bilb_ono (~alexmarsh@12.8.208.130)
[21:45:15] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 265 seconds)
[21:45:47] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 252 seconds)
[21:46:45] *** Quits: rendar (~rendar@user/rendar) ()
[21:48:21] *** Joins: clawh (~clawh@78.10.204.217)
[21:48:37] *** Joins: pnoud (~pnoud@user/pnoud)
[21:49:38] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[21:53:08] *** Joins: emilrwx (~emilrwx@dsl-tkubng12-54f955-62.dhcp.inet.fi)
[21:53:28] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 252 seconds)
[21:54:08] *** Joins: iomari891 (~iomari891@105.112.138.38)
[21:54:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[21:54:40] *** Quits: candyman (~candyman@user/candyman) (Ping timeout: 272 seconds)
[21:54:44] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[21:54:47] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 255 seconds)
[21:54:59] *** Joins: Dotz0cat (~Dotz0cat@h56.70.29.71.dynamic.ip.windstream.net)
[21:55:18] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 252 seconds)
[21:56:26] *** Joins: clf59 (~clf59@user/clf59)
[21:57:37] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 246 seconds)
[21:59:46] *** clf59 is now known as whytwulf
[22:01:09] *** Quits: whytwulf (~clf59@user/clf59) (Client Quit)
[22:01:10] *** Joins: wyclif (~wyclif@user/wyclif)
[22:02:07] *** Quits: ericlee (~ericlee@2601:647:4681:3420::1) (Remote host closed the connection)
[22:02:38] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 252 seconds)
[22:03:12] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:a6ea:d549:1785:23d0)
[22:04:16] *** Joins: tims1 (~tims@61.69.132.167)
[22:04:38] *** Joins: loki_val (~crabbedha@user/crabbedhaloablut)
[22:04:40] *** Joins: heip1ahd (~heip1ahd@2a05:f480:1400:8d1:5400:3ff:fe68:465c)
[22:05:35] *** Quits: tims (~tims@59-102-102-197.tpgi.com.au) (Ping timeout: 255 seconds)
[22:05:49] *** Quits: Ninkentio (~Ninkentio@117.237.241.239) (Read error: Connection reset by peer)
[22:05:51] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Ping timeout: 244 seconds)
[22:06:09] *** Joins: Crassus (~Crassus@user/crassus)
[22:06:18] *** Joins: chaosite (~chaosite@user/chaosite)
[22:07:50] *** Quits: bilb_ono (~alexmarsh@12.8.208.130) (Quit: bilb_ono)
[22:09:14] *** Joins: outsider (~sierkov@c89-176.i07-23.onvol.net)
[22:09:17] *** Joins: Roey (~Roey@user/Roey)
[22:09:58] *** Joins: clf59 (~clf59@user/clf59)
[22:10:51] *** Joins: bilb_ono (~alexmarsh@12.8.208.130)
[22:11:08] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 272 seconds)
[22:11:46] *** Quits: clf59 (~clf59@user/clf59) (Client Quit)
[22:12:20] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 255 seconds)
[22:12:28] *** Quits: bilb_ono (~alexmarsh@12.8.208.130) (Client Quit)
[22:12:56] *** Joins: cheater (~Username@user/cheater)
[22:13:23] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[22:13:37] *** Quits: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[22:15:07] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[22:15:30] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[22:16:10] *** Joins: Akuli (~Akuli@82-203-165-49.bb.dnainternet.fi)
[22:17:35] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 252 seconds)
[22:18:28] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[22:18:38] *** Quits: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 255 seconds)
[22:19:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[22:19:40] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[22:19:52] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[22:19:52] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 252 seconds)
[22:22:32] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 272 seconds)
[22:22:49] *** Joins: han-solo (~hanish@user/han-solo)
[22:28:00] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[22:29:48] <rndusr> hey
[22:30:17] *** Quits: Crassus (~Crassus@user/crassus) (Quit: Textual IRC Client: www.textualapp.com)
[22:30:26] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Read error: Connection reset by peer)
[22:30:30] <rndusr> why does this program print the lengths of individual members of an array, but then when multiplying all the numbers I get 0? https://ttm.sh/tQF.txt
[22:30:51] <bjs> rndusr: because 0*3*1*2 is 0 :)
[22:30:57] <bjs> rndusr: maybe you wanted to start with 1 not 0
[22:31:20] <rndusr> oh
[22:31:23] <rndusr> thanks
[22:31:26] *** Quits: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 252 seconds)
[22:31:34] <rndusr> i thought I was going crazy
[22:31:46] <rndusr> it seems i am
[22:31:51] *** Joins: Xano (~Xano@2a00:23c4:420c:d700:ab35:4886:494c:7369)
[22:33:52] *** Joins: wyclif (~wyclif@user/wyclif)
[22:35:59] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My Mac Pro has gone to sleep. ZZZzzz…)
[22:37:12] *** Joins: Mikaela (~Mikaela@user/mikaela)
[22:37:34] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[22:37:47] *** Quits: y1n (~y1n@84-115-65-39.wifi.dynamic.surfer.at) (Ping timeout: 258 seconds)
[22:38:03] *** Joins: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it)
[22:38:23] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[22:38:34] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[22:38:37] *** Joins: y1n (~y1n@84-115-65-39.wifi.dynamic.surfer.at)
[22:38:42] *** Joins: cheater (~Username@user/cheater)
[22:38:57] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[22:39:08] *** Quits: trace987 (~trace@ip5b429953.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[22:39:36] *** Joins: Deneb (~johnch@58.111.189.80.dyn.plus.net)
[22:41:08] *** Joins: weedmic (~weedmic@109-186-197-174.bb.netvision.net.il)
[22:41:22] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 240 seconds)
[22:48:13] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[22:49:55] *** Joins: wyclif (~wyclif@user/wyclif)
[22:50:52] *** Joins: rvt (~rvt@librecad/rvt)
[22:51:19] <rvt> How do I exit an virtual environment when deactivate does not work? (gives -bash: deactivate: command not found)
[22:51:53] <BtbN> close and re-open the shell
[22:52:05] *** Joins: martums (~martums@user/martums)
[22:52:22] *** Quits: greedom (~greedom@2001:16b8:2e0c:3800:805f:f707:b9c6:43e8) (Remote host closed the connection)
[22:52:43] *** Quits: martums (~martums@user/martums) (Remote host closed the connection)
[22:53:17] *** Quits: node1 (~node1@user/node1) (Remote host closed the connection)
[22:53:34] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 272 seconds)
[22:53:37] *** Quits: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 246 seconds)
[22:53:41] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[22:53:48] <rvt> BtbN: I just opened the shell
[22:54:10] <bjs> rvt: are you sure there is a virtual environment active then?
[22:54:33] <rvt> bjs: BtbN see : https://pastebin.com/9BLN1xab
[22:54:35] *** Joins: audiocat (~audio@2603-8081-1800-00ad-6cca-685f-65eb-8db9.res6.spectrum.com)
[22:54:46] <rvt> bjs: that is what I am trying to find out…
[22:54:50] <han-solo> `type python` # should tell you where your current python is being invoked from
[22:55:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[22:55:03] <rvt> I am nto sure what a virtual environment is, but apparently this tool creates one..
[22:55:24] <bjs> rvt: what is "this tool" ?
[22:55:41] <rvt> type python -> python is hashed (/Users/rvt/.platformio/penv/bin/python)
[22:56:13] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[22:56:22] <rvt> The tool is ESP-IDF … it’s a compiler suite for the esp devices
[22:57:53] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[22:58:12] <rvt> Could it be that you can only make one virtual environment at the same time?
[22:58:19] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[22:59:40] <ChrisWarrick> you can only activate one venv at a time
[22:59:47] *** Joins: pyfisch0 (~pyfisch@user/pyfisch)
[23:00:15] *** Quits: pyfisch (thelounge@user/pyfisch) (Quit: the lounge - https://webirc.envs.net)
[23:00:27] *** Quits: rsrx (~rsrx@103.225.150.81) (Quit: Leaving)
[23:01:50] *** Joins: kmh (~kmh@p200300df5f30ad00c00521c3c33cf4ab.dip0.t-ipconnect.de)
[23:02:17] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 255 seconds)
[23:02:42] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[23:04:21] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 256 seconds)
[23:04:31] *** Quits: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 265 seconds)
[23:05:15] <rvt> ChrisWarrick: I always thought you coudl active multiple because they where virtual...
[23:05:30] <ChrisWarrick> rvt: no, you can’t do that
[23:05:44] <ChrisWarrick> rvt: you can’t “stack” venvs, this would only lead to a mess
[23:05:49] <rvt> ChrisWarrick: How would you then go about if two tools need virtual environments?
[23:06:13] <ChrisWarrick> rvt: make two separate venvs for them, and run the appropriate scripts (or activate)?
[23:06:23] <rvt> Hmmm wait… if you open two terminals, can you then open two virtual environments?
[23:06:29] <ChrisWarrick> yes
[23:06:57] *** Joins: wyclif (~wyclif@user/wyclif)
[23:07:01] <ChrisWarrick> also, note that venv activation is mostly for humans’ convenience — what matters is that you run the appropriate python binary
[23:07:53] *** Quits: Hanii (~textual@host86-184-47-37.range86-184.btcentralplus.com) (Quit: Textual IRC Client: www.textualapp.com)
[23:08:43] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[23:11:43] *** Joins: Betal (~Beta@user/betal)
[23:13:31] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[23:14:38] *** pyfisch0 is now known as pyfisch
[23:15:18] *** Joins: greedom (~greedom@2001:16b8:2e0c:3800:805f:f707:b9c6:43e8)
[23:15:33] *** Quits: SpeakerToMeat (~Speaker@user/speakertomeat) (Quit: WeeChat 3.1)
[23:17:20] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Client Quit)
[23:17:21] <rvt> ChrisWarrick: ok thanks… I always struggle with the last one… I have pip3 and pip and python3 and python…
[23:17:45] <ChrisWarrick> rvt: it’s safest to run venv/bin/python, venv/bin/python -m pip
[23:17:58] <ChrisWarrick> rvt: if you activate, running just `python` should be safe
[23:19:42] <rvt> ChrisWarrick: The issue is that there are tools that use python so I am not sure what they require..
[23:19:47] <rvt> venv/bin/python -m pip
[23:19:48] <ChrisWarrick> rvt: what tools in particular?
[23:20:23] <rvt> ChrisWarrick: platformio and esp-idf, they are build tools for ESP devices… I just know the c++ portion of it..
[23:21:31] *** Joins: parzival (~parzival@user/parzival)
[23:22:14] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[23:22:36] <ChrisWarrick> rvt: you’d need to check their docs
[23:23:05] *** Quits: jdmark (~jdmark@67.8.137.130) (Quit: Leaving)
[23:24:25] <rvt> ChrisWarrick: it’s one of these ‘’’’worked a few weeks ago, something is changed’ situations… thanks for the explanation about virtual env… I think I know how to fix it
[23:24:28] *** Parts: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it) ()
[23:24:43] <ChrisWarrick> rvt, you might want to learn more about venvs: http://chriswarrick.com/blog/2018/09/04/python-virtual-environments/
[23:25:06] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My Mac Pro has gone to sleep. ZZZzzz…)
[23:25:33] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[23:27:08] *** Quits: weedmic (~weedmic@109-186-197-174.bb.netvision.net.il) (Quit: Konversation terminated!)
[23:28:41] *** Quits: Dotz0cat (~Dotz0cat@h56.70.29.71.dynamic.ip.windstream.net) (Read error: Connection reset by peer)
[23:28:45] <rvt> ChrisWarrick: got it working again, I think my symlinks to the latest version of pythin got invalidated after a brew update somehow alias pip=pip3 did not work, aswell as alias for python to python3…
[23:28:58] <ChrisWarrick> that’s not a good alias to have
[23:29:20] *** Joins: chaosite (~chaosite@user/chaosite)
[23:30:18] *** Quits: audiocat (~audio@2603-8081-1800-00ad-6cca-685f-65eb-8db9.res6.spectrum.com) (Ping timeout: 240 seconds)
[23:30:36] *** Joins: jdmark (~jdmark@67.8.137.130)
[23:31:00] <rvt> ChrisWarrick: I blame stack overflow :)  https://stackoverflow.com/questions/44455001/how-to-change-pip3-command-to-be-pip/51882124
[23:31:23] <ChrisWarrick> ah yes, stack overflow, the best place for bad advice
[23:31:58] *** Joins: Dotz0cat (~Dotz0cat@h234.70.213.151.dynamic.ip.windstream.net)
[23:33:11] <rvt> ChrisWarrick: if it’s about c++ or java… I can weed them out very easy, python I don’t have much experience with (if at all…)
[23:33:39] <rvt> in the past SO was a lot better
[23:34:59] *** Joins: y04nn (~y04nn@89.45.7.186)
[23:37:30] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[23:37:54] *** Quits: y1n (~y1n@84-115-65-39.wifi.dynamic.surfer.at) (Ping timeout: 272 seconds)
[23:38:10] *** Quits: parzival (~parzival@user/parzival) (Ping timeout: 240 seconds)
[23:38:17] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 255 seconds)
[23:38:23] *** Joins: y1n (~y1n@84-115-65-39.wifi.dynamic.surfer.at)
[23:40:38] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[23:40:46] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[23:40:53] *** Joins: nbao (~nbao@2804:14c:5bb8:9720:ae9e:17ff:fedf:3e09)
[23:41:27] <dunc> Is there a library for getting a graph (as in boxes and lines) view of parts of a codebase in Python?
[23:42:50] <dunc> Sometimes, when trying to grok a legacy module, it would be very useful to get a bird's-eye view of how it's tied to the rest of the codebase, at a glance, without having to basically do that manually
[23:42:52] *** Joins: attackthemoon (~attackthe@2600:6c40:1d00:560c:b8dc:6c57:c55a:bc6c)
[23:43:46] <dunc> I know that only a certain amount of Python is amenable to static analysis because of the dynamic nature, but to be honest it's usually 95%+, which is absolutely good enough for me here.
[23:44:08] <dunc> Does such a thing exist?
[23:45:16] *** Joins: pnoud (~pnoud@user/pnoud)
[23:46:08] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[23:46:51] <rndusr> is there a way to get permutations of a list containing lists like this? https://ttm.sh/tQq.txt
[23:46:55] <rndusr> and if so, how?
[23:47:29] *** Joins: furrykef (~furrykef@ip68-229-199-137.ok.ok.cox.net)
[23:47:56] <furrykef> re.match(r".*(īe|ie|ēa|ea|an|am|[āaǣæēeīiōoūu])[b-df-hj-np-tv-z]*", "hīer")[1]
[23:48:13] <furrykef> This returns "e" instead of the expected "īe"
[23:48:16] <furrykef> What should I do?
[23:48:38] <furrykef> (I'm trying to match the vowel or diphthong of an Old English syllable.)
[23:48:53] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Quit: leaving)
[23:49:12] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[23:49:51] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My Mac Pro has gone to sleep. ZZZzzz…)
[23:50:46] <dav1d> furrykef: .*?(īe|ie|ēa|ea|an|am|[āaǣæēeīiōoūu])[b-df-hj-np-tv-z]*
[23:50:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:50:56] *** Quits: seanBE (~seanBE@ec2-34-243-193-160.eu-west-1.compute.amazonaws.com) (Quit: Goodbye)
[23:50:57] <dav1d> you wont the first .* to not be greedy
[23:51:15] <nedbat> furrykef: or use re.search, and remove the first .*
[23:51:28] <dav1d> or remove `e` from the [] group
[23:51:33] <furrykef> Thanks
[23:51:33] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[23:51:36] *** Joins: seanBE (~seanBE@ec2-34-243-193-160.eu-west-1.compute.amazonaws.com)
[23:51:46] <dav1d> re.search is probably the better way tbh
[23:51:48] <nedbat> furrykef: and what is [b-df-hj-np-tv-z]* for? it's a star, so it's optional, and you aren't using it
[23:51:57] *** Joins: supakeen (~user@python/site-packages/supakeen)
[23:52:14] <furrykef> Sorry, meant to be a bit more emphatic: Thanks!
[23:52:30] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[23:53:52] <furrykef> nedbat: actually, I meant to put parens around that part. Also around the .* (which is now .*? ) at the start
[23:53:59] *** Quits: stoneware (~stoneware@user/stoneware) (Quit: I'll be back soon)
[23:54:04] <furrykef> Now that I've done that, the regex seems to do what I want
[23:54:41] <furrykef> This way I can mutate the vowel of an Old English syllable, so for instance "mann" becomes "menn"
[23:58:07] <dav1d> furrykef, isn't re.sub better for that? Especially since you could have multiple matches in a single word
[23:58:22] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[23:58:46] *** Quits: greedom (~greedom@2001:16b8:2e0c:3800:805f:f707:b9c6:43e8) (Remote host closed the connection)
[23:59:42] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[23:59:43] <furrykef> dav1d: different vowels become different things. "gōs" becomes "gēs", "mūs" becomes "mȳs", etc. (cf. modern English goose -> geese, mouse -> mice)
