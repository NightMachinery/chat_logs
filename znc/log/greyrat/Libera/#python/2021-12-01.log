[00:00:39] <Sheilong> I created a new virtual environment and installed it to be available form a jupyter notebook.  From jupyter notebook I can import external modules like pandas and tensorflow from this virtual environment without have installed them.
[00:00:47] <Sheilong> Perhaps I did something wrong
[00:00:59] *** Joins: Viewday11 (~Viewday@user/viewday)
[00:01:49] *** Joins: goldfish (~goldfish@user/goldfish)
[00:02:25] <SnoopJ> Sheilong, sounds like maybe the kernel running the notebook isn't the venv's interpreter
[00:02:41] <SnoopJ> i.e. the notebook is not actually running "inside" the environment
[00:02:52] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[00:03:03] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[00:03:06] <SnoopJ> IPython docs about that: https://ipython.readthedocs.io/en/stable/install/kernel_install.html#kernels-for-different-environments
[00:03:07] *** Joins: mehwork (~mehwork@98.185.199.35.bc.googleusercontent.com)
[00:03:09] *** Joins: alex11 (~alex11@user/alex11)
[00:03:09] <Sheilong> SnoopJ: However in the top right corner the environment appears right there
[00:03:40] <phox> SnoopJ: I'm "not having to look elsewhere to verify or alter the implementation" :)
[00:03:47] <mehwork> if i'm unit testing a cli script written in python, should i use  if __name__ == '__main__': main()   so importing the script in my pyunit test will work?
[00:03:53] <mehwork> or is there a better practice
[00:04:09] <bjs> mehwork: that is a good idea
[00:04:18] <mehwork> thanks
[00:04:25] <Sheilong> SnoopJ: this is how it looks like https://imgur.com/aM3HLmX
[00:04:27] <bjs> the `if __name__ == "__main__"` part is how you distinguish between being imported or being run as a script
[00:05:33] <Sheilong> SnoopJ: I did a mistake. I ran the command to install the venv into jupyter without activating it.
[00:05:59] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-bc7b-beb0-653c-822c.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[00:06:55] *** Joins: hemstock (~hemstock@194.59.250.234)
[00:09:31] *** Joins: the-mask (~the-mask@user/the-mask)
[00:09:39] *** Joins: The_Jag (~The_Jag@host-79-13-66-68.retail.telecomitalia.it)
[00:10:59] <lpapp> SnoopJ: ok, thanks
[00:11:03] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-bc7b-beb0-653c-822c.res6.spectrum.com)
[00:12:29] *** Quits: neachdainn (~nate@50.224.226.50) (Ping timeout: 252 seconds)
[00:15:35] <enrh> How safe is it to expose a FastAPI app in Uvicorn to the Internet?
[00:16:43] <RozhyarMM> Hello everyone, I need guidance, I'm a Java Developer and trying to move to python django, I need to get familiar with python syntax what would be you advice for me?
[00:17:43] <RozhyarMM> I have 2 years experience in Java
[00:18:39] <SnoopJ> RozhyarMM, the official tutorial is a pretty good introduction: https://docs.python.org/3/tutorial/
[00:19:26] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[00:19:28] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Read error: Connection reset by peer)
[00:19:55] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[00:20:41] <Togra> your java experience should make it pretty easy to get in the door
[00:20:50] <Swayze> the official django tutorial is also excellent
[00:20:59] <Togra> it may take longer to get used to the specific things that python does and makes a little easier/cleaner, but I can't imagine it'll take you long to get started with python
[00:21:05] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[00:21:27] <Swayze> https://docs.djangoproject.com/en/3.2/intro/tutorial01/
[00:21:37] <Swayze> you can learn python and django at once with this one :)
[00:22:23] <Wooble> eh, it does assume a bit of python knowledge, and believe me learning python class syntax from an ORM that does it weirdly isn't a great idea. :)
[00:22:43] <Swayze> :p
[00:22:47] *** Joins: hzm74 (~hzm74@217-121-154-127.cable.dynamic.v4.ziggo.nl)
[00:22:53] <Swayze> purists gonna pure
[00:23:44] <tvm> Wooble: i'd agree on that
[00:24:28] <Togra> oh yeah, messing up class properties vs object properties can be real confusing, stuff like that
[00:24:33] <the-mask> hello to all;
[00:24:34] <tvm> django was mostly about searching how to do something mundane for me
[00:24:37] <Togra> sometimes learning the hard way is the most effective, but.. yeah lol
[00:24:44] <Wooble> I started python with google app engine; it has a django-inspired db layer and it took me forever to realize regular classes don't define all of the instance members by instantiating things in the class body :)
[00:25:28] <Togra> yeah I think that's what I was doing, I believe I either got lucky or used copy.deepcopy() to "fix" it and it worked fine until I heard here that that was a weird way to go
[00:25:32] <Togra> then I revised all my stuff
[00:25:51] <Togra> gotta do it all in __init__
[00:29:40] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[00:30:01] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[00:30:38] *** Quits: Tas-sos (~Tas-sos@46.198.212.72) (Ping timeout: 252 seconds)
[00:30:44] <RozhyarMM> Thanks everyone I appreciate your help
[00:31:15] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[00:31:22] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Remote host closed the connection)
[00:31:35] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[00:31:45] *** Joins: fikran (~fikran@user/fikran)
[00:32:08] <SnoopJ> Swayze, well, it's a fair point that the Django tutorial is mostly aimed at people learning *Django*
[00:32:30] <the-mask> I'm reading an excel file, where one cell has a long description of the product ( string ); I have 3 cases of description, smth like  -> 88.9 / product name / style | 88.9x76.1 / product name / style  | 88.9x88.9x76.1 / product name / style; for now, I'm using a nested if . . but I cannot accommodate all cases on the dimension area ....; any suggestion I can try ?
[00:32:56] <phox> 12:52 < Swayze> purists gonna pure
[00:33:00] <phox> > purée
[00:33:08] <Swayze> lol
[00:33:18] <Swayze> pourists gonne pour
[00:33:25] <Swayze> *cheers*
[00:33:35] <phox> you have to purée first.
[00:33:53] <phox> ergo pourists <subset> purists
[00:35:33] <SnoopJ> the-mask, it's not entirely clear what task you are trying to solve. You are worried about the variation between A, AxB, AxBxC?
[00:35:57] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[00:36:18] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[00:36:35] *** Joins: fabs (~fabs@wrls-249-137-11.wrls-client.fas.harvard.edu)
[00:36:41] *** Quits: hzm74 (~hzm74@217-121-154-127.cable.dynamic.v4.ziggo.nl) (Ping timeout: 252 seconds)
[00:36:44] <lxer> RozhyarMM: forget everything you know about classes. that should make it a lot easier.
[00:36:48] *** Joins: maroloccio (~marolocci@151.53.155.184)
[00:38:00] <Wooble> Ideally coming from Java start by forgetting classes are even a thing but the django ORM makes that tough ;)
[00:39:27] <Wooble> (coming from perl I wish I started python with someone telling me to forget regexes exist :) )
[00:39:56] *** Joins: howdoi (uid224@id-224.lymington.irccloud.com)
[00:40:22] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[00:40:39] *** Joins: mickey8 (~user@user/mickey)
[00:40:48] <the-mask> SnoopJ, yes ..."if A in cell": works, then I move to "if product name in cell": and so on ......; but, as you see in the last case AxBxC , A is equal to B . . .; how do I check all those conditions ?
[00:41:51] *** Joins: hzm74 (~hzm74@217-121-154-127.cable.dynamic.v4.ziggo.nl)
[00:42:57] <SnoopJ> the-mask, I would probably distinguish between them by looking at how many dimensions there are, by counting the number of occurrences of "x" or something like that.
[00:43:51] *** Joins: lastshell (~lastshell@user/lastshell)
[00:44:05] <lxer> ok, to make it more precise: forget about private/public, ABC's, interfaces, namespaces, dependency injection and ignore @staticmethod.
[00:44:22] *** Joins: djapo (~archangel@user/djapo)
[00:44:29] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[00:44:34] <SnoopJ> I am not sure I agree that all of this forgetting is the way to learn something
[00:44:50] <lxer> that should prevent 99% of the common mistakes that Java devs make when they begin with Python.
[00:44:55] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Remote host closed the connection)
[00:45:15] *** Joins: aac (~AAC@2001:8a0:6cc5:7e01:dc1e:6600:85ec:1bd9)
[00:45:49] <RozhyarMM> so basically forget most the things wired into my brain
[00:46:20] <aac> hey. The pasting link doesnt work
[00:46:21] <RozhyarMM> that is going to be tough and I don't even know what is ORM but I heard it is one the hard parts
[00:46:43] <aac> where can i paste?
[00:46:54] <the-mask> SnoopJ, I was thinking also about making a counter for that occurrence; but implementing it ....grr..cannot quite figure; but, reasoning . . .would splitting those 3 cases to 3 different functions will be an option ? and then calling all 3 functions inside another function ?
[00:47:01] *** Quits: hzm74 (~hzm74@217-121-154-127.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[00:47:49] <SnoopJ> the-mask, there are a lot of options for pretty much any problem. The trick is to make a problem specific enough that only one or two of them stand out.
[00:48:05] <the-mask> aac, https://bpa.st/+python you have in in the topic description ...
[00:48:12] *** Quits: Andrynet1 (~Andrynet@190.152.206.33) (Ping timeout: 256 seconds)
[00:48:35] *** Joins: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4)
[00:48:48] <aac> oh
[00:48:50] <mattf> Multiprocessing having unicode decode error: http://ix.io/3GCh, The same code runs in my mac fine without that error but when i work with files that are on a exfat usb that error happens. What is that?
[00:48:51] <aac> now it worked
[00:48:53] <aac> :)
[00:49:12] <the-mask> aac, great
[00:49:49] *** Joins: Andrynet1 (~Andrynet@190.152.206.33)
[00:49:50] <CrtxReavr> mattf, so. . . same Mac, just with files on USB storage where things are different?
[00:49:55] <mattf> yeah
[00:49:57] <aac> ok so here it is...this python code is very slow, starting at "3 2" , whilte java is fast. Here it is https://bpa.st/LVCQ
[00:50:19] <mattf> CrtxReavr: reading the files from exfat causes that problem
[00:50:32] <aac> if you take a look at the code, shouldnt be 500*500*15*15 instructions?!
[00:50:38] <aac> is that slow?
[00:50:52] <SnoopJ> mattf, hmm, there was a question that looked very similar (exfat, decode error) earlier. The error is happening because whatever is in the file is not UTF-8, but it's trying to decode with UTF-8. I'm not sure why, though.
[00:51:03] <CrtxReavr> mattf, take the python script out of it for a a test. ..
[00:51:32] *** Quits: teut (~teut@182.68.254.204) (Quit: Client closed)
[00:51:35] <CrtxReavr> dd if=/your/file/on/exfat of=/dev/null
[00:51:36] <mattf> CrtxReavr: you mean take the python script out of the usb drive but still use the files from the drive?
[00:51:38] <the-mask> RozhyarMM, apologize for bothering; one of the new theory of learning states that in order to learn smth new - first you have to unlearn what you know; meaning, you need to disconnect the neuronal paths already established, so you can make/construct new ones ...
[00:52:55] <SnoopJ> CrtxReavr, dd doesn't decode anything, so what exactly is that checking?
[00:53:44] *** Joins: beli6147 (~Thunderbi@174.128.60.162)
[00:54:00] <the-mask> SnoopJ, true words, I'll probably have to try both or 3 ways - not only for the purpose of learning more; just wanted to be sure that my reasoning is not far away from the correct logic ...
[00:54:54] <CrtxReavr> mattf, python shoudln't care where it reads files from. . so I suggested a test for reading the file that had nothing to do with python.
[00:56:11] <SnoopJ> CrtxReavr, the error isn't in reading the file, it's in decoding it: it's a UnicodeDecodeError
[00:56:14] <dlam> im trying to find a random print() somewhere which is dumping random logging - I can't find where it is because my project is big!   Maybe is there a way to make it enter pdb on any print()'s
[00:56:31] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[00:57:35] *** Quits: falkor (~falkor@90.242.155.158) (Ping timeout: 252 seconds)
[00:57:45] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Read error: Connection reset by peer)
[00:57:47] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[00:58:13] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[00:58:19] <CrtxReavr> I dunno about turning on pdb that what, I hav ean idea on how i'd try to find it.
[00:59:31] *** Quits: singularity00 (~singulari@85.187.64.126.client.entry.bg) (Quit: The true sign of intelligence is not knowledge but imagination.)
[01:00:11] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[01:00:39] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[01:00:52] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 264 seconds)
[01:01:07] <RozhyarMM> the-mask no need to apologize, I greatly appreciate your advice, I expect it to be hard to move from java to python since they are very different, unlike moving from java to C# or vice versa but C# is practically same as java there not much difference between them
[01:01:21] *** Joins: userHeni (~userHeni@25.98.60.94.rev.vodafone.pt)
[01:01:41] *** Joins: Reffter (~Reffter@2001:818:dea5:2b00:9df1:5652:b37e:c090)
[01:02:18] <Swayze> python is incredibly intuitive
[01:02:19] *** Quits: Allegretto (~allegrett@84-236-126-151.pool.digikabel.hu) (Ping timeout: 256 seconds)
[01:02:26] <Swayze> :) you wont have any issues at all
[01:02:26] <grym> ehhh
[01:02:27] *** Quits: userHeni (~userHeni@25.98.60.94.rev.vodafone.pt) (Remote host closed the connection)
[01:02:31] <grym> ehhhhhhhhh
[01:02:32] <grym> :D
[01:02:35] <Swayze> :D
[01:02:44] *** Joins: Betal (~Betal@user/betal)
[01:02:45] <grym> i jumped from c# to python and spent 6 months screaming
[01:02:46] <grym> so
[01:02:48] <grym> ymmv
[01:03:00] *** none is now known as stdout
[01:03:33] <Swayze> python is the new BASIC :p
[01:03:37] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:03:47] <Swayze> http://coffeeghost.net/2008/06/18/python-is-the-new-basic/
[01:03:50] * Swayze grins
[01:04:10] <SnoopJ> Swayze, Benno Rice makes a compelling case that it's the new COBOL in this talk: https://www.youtube.com/watch?v=BCqGjGzWI48
[01:04:12] <Swayze> print "hello world!" <-- i rest my case
[01:04:20] <SnoopJ> (BASIC is the new BASIC)
[01:04:22] <Wooble> pff you can't even get goto without a horrible hacky third-party module.
[01:04:31] <CrtxReavr> Maybe python2 is the new basic.
[01:04:45] <jinsun_> Swayze: doesn't work :D
[01:05:00] <Swayze> i ommitted the 10 for obvious reasons :p
[01:05:29] *** Quits: scadman (~scadman@cpc145252-maid8-2-0-cust473.20-1.cable.virginm.net) (Quit: Konversation terminated!)
[01:06:11] <Swayze> https://inventwithpython.com/
[01:06:14] <the-mask> RozhyarMM, I cannot advice you on learning python; and the same scientists say that "unlearning" it is really hard; but, to make it simpler, I would say try to learn it as you do not know another programming language ...
[01:06:18] <Swayze> now sure if you guys ever used or seen this but its great
[01:06:41] *** Joins: mankoff (~quassel@152.115.35.237)
[01:06:44] <Swayze> they all freely available online to read
[01:06:52] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:b8b7:2c62:cadc:e295) (Ping timeout: 256 seconds)
[01:07:55] *** Joins: henistein (~henistein@2001:8a0:c18a:f601:24f2:3695:c45f:af7b)
[01:08:35] *** Quits: Andrynet1 (~Andrynet@190.152.206.33) (Ping timeout: 252 seconds)
[01:09:24] *** Joins: Ilyu (~quassel@gateway/vpn/pia/ilyu)
[01:10:18] *** Quits: stoneware (~stoneware@user/stoneware) (Ping timeout: 256 seconds)
[01:10:23] *** Joins: Andrynet1 (~Andrynet@190.152.206.33)
[01:10:38] <jinsun_> dlam: you could replace __builtins__.print (or maybe sys.stdout.write) with something that raises an exception, before running any other code, so you find out the culprit from the traceback
[01:11:35] <nedbat> aac: if you're comparing java and python code, you should also show the java code
[01:11:48] <aac> ok hold on
[01:12:28] <nedbat> dlam: __builtins__.print = some_other_function
[01:12:38] <aac> actually....i added some addional stuff, after i said...same site?
[01:13:39] <aac> but anyway , not seeing the java code, shouldnt the code run smooth?
[01:13:56] *** Quits: kevr (~kevr@user/kevr) (Remote host closed the connection)
[01:14:12] <aac> the only thing i see ,is the prime factors, ...but on printing, the maximum factor len is about 3 to 4 elems
[01:14:32] *** Quits: kai43 (~kai@x50d24799.cust.hiper.dk) (Quit: The Lounge - https://thelounge.chat)
[01:14:39] *** Joins: kevr (~kevr@user/kevr)
[01:14:46] *** tris is now known as empty_string
[01:15:10] *** empty_string is now known as tris
[01:15:20] <dlam> ooo thanks all!
[01:15:27] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[01:15:35] *** Joins: Allegretto (~allegrett@94-21-199-120.pool.digikabel.hu)
[01:17:06] *** Quits: Andrynet1 (~Andrynet@190.152.206.33) (Ping timeout: 256 seconds)
[01:17:20] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[01:18:47] *** Quits: akahs (~Shaka@user/shaka) (Quit: .)
[01:18:49] *** Joins: Andrynet1 (~Andrynet@190.152.206.33)
[01:19:57] <nedbat> aac: where is the java code?
[01:20:07] <aac> hold on
[01:20:08] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 252 seconds)
[01:20:16] <aac> can i paste it ?? not finsished yet...
[01:20:27] <aac> i was refering to some old version of the java code
[01:20:33] <aac> which i dont have now
[01:20:42] <aac> since i went to code java, since python was slow2
[01:20:57] <jinsun_> aac: print total_c before doing primefactors(), the number is getting very big
[01:21:05] *** Joins: HiddenHyde (~Hidden_Hy@user/hiddenhyde)
[01:21:16] *** Quits: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Ping timeout: 264 seconds)
[01:21:35] <jinsun_> maybe in Java you had overflow and it turned small again after some loops
[01:22:33] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[01:22:36] <nedbat> aac: I think jinsun_ may be right. Pretty Slow 3 7 is trying to factor 50031545098999715
[01:22:43] *** Quits: mankoff (~quassel@152.115.35.237) (Ping timeout: 256 seconds)
[01:22:45] *** Joins: mankoff_ (~quassel@c-67-183-220-189.hsd1.wa.comcast.net)
[01:22:57] <aac> oh ok
[01:22:58] <aac> i se
[01:22:59] <nedbat> aac: idk what java does with numbers that large, does it silently overflow?
[01:22:59] <aac> i see
[01:23:05] <aac> dont know
[01:23:23] <aac> thats probably the reason
[01:23:24] <aac> thanks
[01:23:50] <aac> ill just print stuff in primefactors.. :)
[01:23:52] <aac> toi check
[01:23:57] <aac> good news..dont need to code java
[01:23:58] <aac> :)
[01:24:11] <aac> thks
[01:24:16] <nedbat> Pretty Slow 9 12 is trying to factor 73704051903524280116894498097877590315122066680972^C8500645352004312413332631230802882392591836809869313187877282834207645418384705328821481715832062645792336395268740030517061167134329444872737962756972042910026293641954016579897960315570109401933441147460146170127620981396081597741053134316105898712821102  :)
[01:24:28] <nedbat> (without the ^C)
[01:24:49] *** Quits: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:24:52] *** Joins: arandomcomrade (~arandomco@user/arandomcomrade)
[01:25:08] <aac> ok ok.. :)
[01:25:24] <aac> probably bug on java?
[01:25:33] <aac> perhaps it will overflow :)
[01:25:48] <nedbat> Swayze: there's a school of thought (that I agree with) that no programming language is "intuitive", merely ones that are familiar, so it depends a lot on what you've used before.
[01:26:07] *** Quits: grooverman (~grooverma@177.95.12.14) (Ping timeout: 256 seconds)
[01:26:10] *** Joins: voldial (~user@user/voldial)
[01:26:35] *** Joins: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[01:26:44] <SnoopJ> I could maybe see a case for intuition in some visual programming languages, but even then...
[01:27:05] *** Joins: a6a45081-2b83 (~aditya@2601:249:4300:1296:88ec:cc73:84d4:1507)
[01:27:31] <lxer> Studying some good python projects would help a lot of devs. I think Pandas is very readable (even for beginners) and very pythonic.
[01:27:40] <SnoopJ> lxer, much of it is also not in Python
[01:27:49] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Ping timeout: 256 seconds)
[01:28:54] <dkdjsm> was python intended to look like a pseudocode?
[01:28:58] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:29:05] *** Joins: NyaaTheCat (~CalculusC@user/calculuscat)
[01:29:20] *** Quits: upsala (~zcb@185.213.155.252) (Quit: WeeChat 3.3)
[01:29:52] <lxer> would that be too easy?
[01:30:08] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:b8b7:2c62:cadc:e295)
[01:30:10] <grym> dkdjsm: no, not really
[01:30:39] *** Quits: Inline (~Inline@aftr-37-201-240-100.unity-media.net) (Quit: Leaving)
[01:31:37] *** Joins: causa_sui (~causasui@192.241.228.169)
[01:33:16] *** Quits: a6a45081-2b83 (~aditya@2601:249:4300:1296:88ec:cc73:84d4:1507) (Remote host closed the connection)
[01:33:53] *** Quits: causasui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[01:33:58] <KirkMcDonald> dkdjsm: Guido has written at some length about his intentions with Python: http://python-history.blogspot.com/2009/01/introduction-and-overview.html
[01:34:59] *** Quits: RozhyarMM (~RozhyarMM@2a0d:4f00:12:2dae:4062:2393:b038:fb14) (Ping timeout: 252 seconds)
[01:36:12] *** Quits: NyaaTheCat (~CalculusC@user/calculuscat) (Quit: I have phased into another dimension, see ya later!)
[01:36:31] *** Joins: NyaaTheCat (~CalculusC@user/calculuscat)
[01:37:07] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:37:25] *** Joins: neachdainn (~nate@50.224.226.50)
[01:37:50] *** Joins: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[01:38:07] *** Quits: ub (~Thunderbi@p200300ecdf0ba2aaa54fdd1e9768c0b5.dip0.t-ipconnect.de) (Quit: ub)
[01:38:37] *** Quits: HiddenHyde (~Hidden_Hy@user/hiddenhyde) (Quit: Leaving)
[01:39:17] *** Joins: bindu_ (~bindu@user/bindu)
[01:40:17] *** Quits: causa_sui (~causasui@192.241.228.169) (Ping timeout: 256 seconds)
[01:40:45] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[01:41:08] *** bindu_ is now known as bindu
[01:42:13] *** Joins: NineBAR (~NineBAR@c-107-5-176-200.hsd1.mi.comcast.net)
[01:43:15] *** Joins: kevr` (~kevr@user/kevr)
[01:45:16] *** Quits: jay-m126 (~jay-m@129.0.76.210) (Read error: Connection reset by peer)
[01:45:18] *** Quits: jay-m126_ (~jay-m@129.0.76.210) (Read error: Connection reset by peer)
[01:45:51] *** Quits: kevr (~kevr@user/kevr) (Remote host closed the connection)
[01:48:01] *** Joins: azidhaka_ (~azidhaka@user/azidhaka)
[01:48:07] *** Joins: dre (~dre@2001:8003:c932:c301:a3be:66e5:a03e:cca3)
[01:48:27] *** Joins: kinabalu (~kinabalu@about/java/kinabalu)
[01:48:30] *** Joins: jay-m126 (~jay-m@129.0.76.217)
[01:50:37] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[01:50:51] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Ping timeout: 264 seconds)
[01:51:43] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[01:52:14] *** Quits: Jimmy2027 (~hendrik@2001:1620:2018:38:dde3:1b0f:dc57:eb0f) (Ping timeout: 260 seconds)
[01:52:36] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:6d3e:7e5e:e0b5:771e) (Quit: Textual IRC Client: www.textualapp.com)
[01:53:08] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[01:53:38] *** Joins: jay-m126_ (~jay-m@129.0.76.217)
[01:55:06] *** Quits: arandomcomrade (~arandomco@user/arandomcomrade) (Read error: Connection reset by peer)
[01:56:19] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 268 seconds)
[01:56:26] *** Quits: RasnCain_ (~rasncain@gw1.cox.com) (Ping timeout: 252 seconds)
[01:56:51] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[01:58:19] <lxer> ^that is about the details. Where I think python can be really good is when it comes to architecture of large applications. However, that requires careful use of modules, and not just simply dumping things in files&folders like in any other language.
[01:58:44] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:59:40] *** Joins: grooverman (~grooverma@177.102.119.40)
[02:01:03] *** Quits: raek (~raek@2001:9b1:efe:3200:d250:99ff:fec0:e153) (Quit: raek)
[02:02:29] <Swayze> its possible, my background is (in this order) basic on a zx spectrum, turbo pascal, inline assembly with pascal (for 1337 90's scrollers), c, c++, visual basic, c#, java then python (probably forgot a few)
[02:02:42] *** Joins: raek (~raek@h-109-228-152-171.A163.priv.bahnhof.se)
[02:03:02] <Swayze> does t-sql, html, javascript count as langauges :p
[02:03:23] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[02:03:27] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Read error: Connection reset by peer)
[02:03:51] <Swayze> a few node.js apis
[02:04:25] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[02:04:26] <Swayze> i certainly found python intuitive but perhas it is JUST ME
[02:04:34] <Swayze> doubt it ...
[02:05:27] <CrtxReavr> Python generally works well with my brain.
[02:05:38] <CrtxReavr> Whereas Perl absolutely does not.
[02:06:21] <Swayze> exactly tried perl once never ever
[02:06:23] <Swayze> again :p
[02:06:45] <Swayze> i was trying to think of the example to highlight with nedbat and perl is the one i couldnt think of
[02:06:53] <mefistofeles> I'm very glad I was introduced into programming with C/C++ tbh, but I'm happy I get to program using Python
[02:06:59] <CrtxReavr> I think the biggest problem with perl is that it's too free-form.
[02:07:14] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[02:07:19] <CrtxReavr> Just format it any old way and it'll mostly work!
[02:07:40] <CrtxReavr> Reading other peoples' perl is like chewing broken glass.
[02:08:11] *** Quits: dre (~dre@2001:8003:c932:c301:a3be:66e5:a03e:cca3) (Remote host closed the connection)
[02:08:22] <CrtxReavr> https://trioptimum.com/~crtxreavr/tmp/pi.pl.png
[02:08:38] <Swayze> theres a similar problem with c
[02:08:50] <Swayze> code golf :p
[02:08:58] *** Quits: stdout (~stdout@216.163.21.11) (Quit: Leaving)
[02:09:07] <Swayze> its like ppl are deliberately trying to be as obscure as possible
[02:09:27] <Swayze> we can do it like a+b but why not use a pointer to the bufferoverflow bug in 32 bit integers instead or wevs
[02:09:52] *** Quits: Andrynet1 (~Andrynet@190.152.206.33) (Ping timeout: 264 seconds)
[02:10:56] *** Joins: dre (~dre@2001:8003:c932:c301:1276:3400:25a9:855)
[02:10:56] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Ping timeout: 256 seconds)
[02:11:25] *** Joins: Andrynet1 (~Andrynet@190.152.206.33)
[02:11:46] <lxer> I noticed that java devs are often stressed and almost having a nervous breakdown, and I've tried to figure out why that is. So far the only thing I found is the difference in 'code navigation distance' (clicking through 20 files to find something), which results in much higher mental load.
[02:13:38] <noord> lxer: spring boot, `let add simple annotation, ooh it works`, `add more, mmh perfect!` add the latest one breaks everything
[02:14:53] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:7d90:e8ce:e7ae:433b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:15:06] *** Quits: henistein (~henistein@2001:8a0:c18a:f601:24f2:3695:c45f:af7b) (Quit: Client closed)
[02:15:42] * dkdjsm doesn't trust a language people discover random new operators in
[02:16:33] <The-Compiler> dkdjsm: I guess Python users will discover := or @ at some point :D
[02:16:33] *** Quits: the-mask (~the-mask@user/the-mask) (Ping timeout: 256 seconds)
[02:16:46] <phantomotap> ooo. what does @ do?
[02:16:52] <The-Compiler> phantomotap: nothing
[02:17:06] <The-Compiler> phantomotap: but classes can define it, e.g. numpy does I think
[02:17:10] *** Quits: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[02:17:28] <phantomotap> oh. that's... neat i guess.
[02:17:43] * CrtxReavr has never used the walrus operator and hopefully will never need it.
[02:17:45] <The-Compiler> phantomotap: https://www.python.org/dev/peps/pep-0465/
[02:18:09] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[02:18:28] <CrtxReavr> It's literally the stupidest new feature in 3.8 and it caused so much fuss and over-shadowed an actually cool, new language feature.
[02:18:38] *** Quits: csmiga (~Thunderbi@96-87-248-1-static.hfc.comcastbusiness.net) (Quit: csmiga)
[02:18:48] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:7d90:e8ce:e7ae:433b)
[02:19:02] * noord going crazy
[02:19:11] <phantomotap> The-Compiler: thanks for the link
[02:19:12] <SnoopJ> yea numpy uses it, was kinda how it got introduced to begin with
[02:19:18] *** Quits: nicholaus04 (~nicholaus@2607:fb90:e58c:fb6a:2920:4094:8818:7c51) (Quit: Joined Game)
[02:19:50] <jinsun_> I don't remember any better thing from 3.8 than walrus really (the f-string = thing is meh)
[02:20:31] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[02:21:29] <CrtxReavr> multiprocessing.shared_memory
[02:21:36] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[02:22:07] <CrtxReavr> Memory blocks given python namespace that are accessible by multiple instances of python.
[02:22:24] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[02:22:56] <jinsun_> ah, never needed that, and 3.8 added positional only args too, but I find more uses of walrus than that too
[02:23:19] <CrtxReavr> Um. . .
[02:23:43] <CrtxReavr> I'm quite sure "positional-only args" were far from new in 3.8.
[02:24:14] *** Joins: ArtfulDodger (~ArtfulDod@2a02-8440-6313-20f3-78ba-13a3-5b05-4fb6.rev.sfr.net)
[02:24:32] <The-Compiler> CrtxReavr: they were added in 3.8 though?
[02:24:36] <jinsun_> I'm talking about https://docs.python.org/3.8/whatsnew/3.8.html#positional-only-parameters
[02:25:22] <ArtfulDodger> Do you know why method mro() isn't available in all classes e.g. in Class Test: pass ?
[02:26:09] *** Joins: ittner (~ittner@2804:15e4:806b:4b00:610c:fb63:3522:8057)
[02:26:29] *** LabMonkey is now known as Mechanismus
[02:26:30] <SnoopJ> ArtfulDodger, are you talking about __mro__()?
[02:26:38] *** Joins: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr)
[02:26:45] *** Quits: Andrynet1 (~Andrynet@190.152.206.33) (Ping timeout: 256 seconds)
[02:27:02] <CrtxReavr> Okay. . .yeah, this is something different from what I thought you meant.
[02:27:06] <jinsun_> Test.mro also seems to exist (tested on 3.9)
[02:27:07] *** Joins: junktext__ (~junktext@gateway/vpn/pia/junktext)
[02:27:36] <SnoopJ> ...huh, I had no idea mro() (sans dunders) was a thing
[02:27:49] <SnoopJ> CrtxReavr, positional-only parameters are parameters that can only be passed positionally.
[02:27:53] <mdk> SnoopJ: https://docs.python.org/3/library/stdtypes.html?highlight=mro#class.mro
[02:28:00] <ArtfulDodger> SnoopJ, yes but mro is also supposed to exist https://docs.python.org/3/library/stdtypes.html?highlight=mro#class.mro
[02:28:07] <mdk> it's for metaclasses so they can alter the mro before the class is created :D
[02:28:27] <SnoopJ> ArtfulDodger, it exists for me with your sample in 3.8.10
[02:29:04] *** Quits: raek (~raek@h-109-228-152-171.A163.priv.bahnhof.se) (Quit: raek)
[02:29:18] <ArtfulDodger> SnoopJ, hum, how is that possible https://bpa.st/5RYQ ?
[02:29:46] *** Quits: dvx (~dvx@5.181.92.64) (Quit: dvx)
[02:29:53] <ArtfulDodger> oooow actually it's a class method
[02:30:08] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[02:30:13] <SnoopJ> ArtfulDodger, right, the MRO is about the class, not instances of it
[02:30:28] <ArtfulDodger> Yeah, sorry for the stupid question then :D
[02:30:36] <SnoopJ> not stupid :)
[02:30:37] *** Joins: raek (~raek@h-109-228-152-171.a163.priv.bahnhof.se)
[02:30:44] *** Quits: WayToDoor (~WayToDoor@user/waytodoor) (Quit: See you later :))
[02:30:53] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[02:31:05] *** Joins: Bakunin (~Lindis@user/lindis)
[02:31:06] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[02:31:16] *** Joins: stoneware (~stoneware@user/stoneware)
[02:31:17] *** Quits: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[02:31:28] *** Quits: vsantana (~Thunderbi@fttx-177136148231.usr.predialnet.com.br) (Ping timeout: 264 seconds)
[02:32:20] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[02:32:25] *** Joins: RasnCain_ (~rasncain@gw1.cox.com)
[02:32:35] *** Quits: AM (~techman@82-203-163-159.bb.dnainternet.fi) (Ping timeout: 265 seconds)
[02:33:16] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[02:34:13] *** Joins: AM (~techman@213.216.208.108)
[02:34:21] <ArtfulDodger> Also, do you know examples in which you would need for C to inherit from A here while you are already inheriting from B and C that already inherit from A? https://bpa.st/ABZQ
[02:34:26] <nedbat> I have used := a bit and f-string= a ton, and never used positional-only, so there you go :)
[02:34:41] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 256 seconds)
[02:36:20] *** Quits: sniperwolf (~sniperwol@91.230.98.1) (Quit: Client closed)
[02:36:24] *** Joins: cdown_ (~cdown@163.114.131.1)
[02:37:40] <JayDoubleu> Can I add else statement to list comprehension ? AKA ` x for x in y if y == True else False` ?
[02:37:41] *** Quits: jay-m126_ (~jay-m@129.0.76.217) (Ping timeout: 252 seconds)
[02:37:41] *** Quits: jay-m126 (~jay-m@129.0.76.217) (Ping timeout: 252 seconds)
[02:37:48] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:38:14] <BtbN> What would that logically do?
[02:38:19] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:38:59] <JayDoubleu> Sorry I should give better example `True for x in y if y == "true" else False`
[02:39:13] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 256 seconds)
[02:39:15] *** cdown_ is now known as cdown
[02:39:16] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[02:39:16] *** Quits: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-165.dsl.bell.ca) (Ping timeout: 264 seconds)
[02:39:24] <BtbN> Like, that "if" there works more like "where" statement from SQL. an Else-Branch does not make a whole lot of sense.
[02:39:42] <JayDoubleu> so if X in Y list does not match my condition it should return False
[02:40:09] <BtbN> so, [x == "true" for x in mylist]?
[02:40:53] <yitz> all(x == "true" for x in list) ?
[02:41:06] *** Joins: fikran (~fikran@user/fikran)
[02:41:56] <JayDoubleu> I have a list of dicts. Let's say `[{"name": "apple"},{"name": "orange"}]` And I want to return true if item["name"] is "orange" and false otherwise
[02:41:58] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[02:43:00] *** Joins: Andrynet (~Andrynet@190.152.206.33)
[02:43:25] *** Joins: Atque (~Atque@user/atque)
[02:44:13] *** kevr` is now known as kevr
[02:44:14] <jinsun_> so `[item["name"] == "orange" for item in the_list]` ?
[02:45:12] *** Joins: brentaarnold (~brentaarn@32.132.115.46)
[02:45:21] * JayDoubleu sent a code block: https://libera.ems.host/_matrix/media/r0/download/libera.chat/312316d978e1db9dbb5ceaf55926c53048daaa5a
[02:45:39] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[02:45:53] <JayDoubleu> Effectively `apples = [True for x in fruits if x["name"] == "apple" else False]`
[02:45:59] *** Quits: NyaaTheCat (~CalculusC@user/calculuscat) (Quit: I have phased into another dimension, see ya later!)
[02:46:04] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 256 seconds)
[02:46:09] *** Joins: Jimmy2027 (~hendrik@2001:1620:2018:38:dde3:1b0f:dc57:eb0f)
[02:46:18] <SnoopJ> the ternary is just syntax noise there, the result of == is already a bool
[02:46:28] <jinsun_> x["name"] == "apple" is already true or false so you don't need the if else
[02:46:28] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Ping timeout: 264 seconds)
[02:46:54] *** Joins: guenhael (~Thunderbi@2a01cb008c3d5800f99e00cb4d902568.ipv6.abo.wanadoo.fr)
[02:47:02] *** Joins: semeion (~semeion@user/semeion)
[02:47:12] <syrius> len(list(filter(lambda x: x['name'] == "orange", foo))) > 0
[02:47:19] <jinsun_> but if you are asking about how to do ternary in list comprehension you want something like `True if x["name"] == "apple" else False for x in fruits`
[02:47:31] <JayDoubleu> Erm, but I want the list of both True and False. It now just returns just True
[02:47:49] <syrius> oh
[02:48:21] <JayDoubleu> jinsun_: Ha, that's what I was missing ;) Thanks
[02:48:36] <JayDoubleu> Silly me
[02:48:57] <syrius> oh i didn't catch the wanting a list full of true/false. yeah jinsun_'s is good.
[02:49:27] *** Quits: dkdjsm (~dkdjsm@178.49.152.151) (Quit: Client closed)
[02:49:49] *** Quits: ikus060 (~ikus060@96.127.228.230) (Quit: Leaving)
[02:50:40] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Ping timeout: 264 seconds)
[02:50:54] *** Quits: oprypin (~irc@pryp.in) (Quit: Bye)
[02:51:03] *** Joins: oprypin (~irc@pryp.in)
[02:52:15] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[02:53:21] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:53:44] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[02:54:33] *** Quits: mankoff_ (~quassel@c-67-183-220-189.hsd1.wa.comcast.net) (Quit: quit)
[02:54:54] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:54:56] *** Joins: qurls (~user@2603-9000-b30e-f600-8dce-20ac-b5f8-34f1.inf6.spectrum.com)
[02:56:49] *** Joins: Macuser (~Macuser@216.30.159.201)
[02:56:50] *** Quits: Andrynet (~Andrynet@190.152.206.33) (Ping timeout: 256 seconds)
[02:57:26] *** phryk_ is now known as phryk
[02:58:04] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) ()
[02:58:17] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[02:58:22] *** Quits: Keira (~k@lulzsec.co.uk) (Ping timeout: 265 seconds)
[02:58:41] *** Joins: Andrynet (~Andrynet@190.152.206.33)
[02:59:20] *** semeion is now known as mnemonic
[02:59:27] *** Joins: Keira (~k@lulzsec.co.uk)
[02:59:32] *** Quits: ittner (~ittner@2804:15e4:806b:4b00:610c:fb63:3522:8057) (Quit: Namárië)
[03:01:41] *** Quits: guenhael (~Thunderbi@2a01cb008c3d5800f99e00cb4d902568.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[03:01:55] *** Joins: NyaaTheCat (~CalculusC@user/calculuscat)
[03:02:12] <aphysically> hmm I could do advent of code I've never done that before
[03:03:09] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:03:33] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[03:03:59] *** Joins: weedmic (~weedmic@89-139-232-154.bb.netvision.net.il)
[03:04:28] *** Quits: cosimone (~user@93-47-231-3.ip115.fastwebnet.it) (Ping timeout: 264 seconds)
[03:04:32] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:7d90:e8ce:e7ae:433b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:05:20] *** Quits: Andrynet (~Andrynet@190.152.206.33) (Ping timeout: 256 seconds)
[03:05:43] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:7d90:e8ce:e7ae:433b)
[03:06:19] <SnoopJ> aphysically, it's a fun excuse to try new things, and the puzzles get devious by the end
[03:07:12] *** Joins: Andrynet (~Andrynet@190.152.206.33)
[03:08:05] *** Quits: NyaaTheCat (~CalculusC@user/calculuscat) (Quit: I have phased into another dimension, see ya later!)
[03:08:16] *** Quits: Reffter (~Reffter@2001:818:dea5:2b00:9df1:5652:b37e:c090) (Quit: Client closed)
[03:09:15] *** Quits: lxer (~lx@ip5f5bf666.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[03:11:23] *** Quits: sus (zero@user/zeromomentum) (Quit: the lounge - https://webirc.envs.net)
[03:12:20] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 252 seconds)
[03:14:21] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[03:15:34] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:16:19] *** Quits: ham5urg (~ham5urg@p200300d167435800d9ca1ce4e9d31feb.dip0.t-ipconnect.de) (Remote host closed the connection)
[03:17:35] <Guest14> Hi I am trying to use the btcpayserver greenfield API and I need to figure out how to get the signatures from the header to match the body. https://dpaste.org/GJOh
[03:17:37] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[03:17:53] *** Joins: JanC (~janc@user/janc)
[03:18:11] <Guest14> I am getting different results. request.headers.get('Btcpay-Sig').split('sha256=')[-1].strip() does not equal generated_signature
[03:18:50] <Guest14> idk if request.body should be something else like request.data or request.payload but only request.body and request.headers seems to work
[03:18:53] *** Quits: Andrynet (~Andrynet@190.152.206.33) (Ping timeout: 256 seconds)
[03:19:25] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[03:20:22] <Guest14> https://stackoverflow.com/questions/69774771/validate-header-webhook
[03:20:22] <Guest14> https://stackoverflow.com/questions/39767297/how-to-use-sha256-hmac-in-python-code
[03:20:23] <Guest14> https://stackoverflow.com/questions/59580376/how-can-i-validate-payloads-from-github-webhooks-in-python-3
[03:20:31] *** Quits: mnemonic (~semeion@user/semeion) (Quit: WeeChat 3.3)
[03:20:36] <Guest14> This is where I got some of the concepts from
[03:20:40] *** Joins: Andrynet (~Andrynet@190.152.206.33)
[03:21:17] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[03:21:41] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Remote host closed the connection)
[03:22:38] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[03:23:10] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[03:23:15] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:23:30] <aphysically> SnoopJ: yeah the early ones seem easy mostly just a typing race, was just playing with a few https://bpa.st/U43Q
[03:23:48] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:7d90:e8ce:e7ae:433b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:23:56] *** Quits: dld (~dld@2601:197:600:1210:4c8f:59ca:20e7:8c51) (Quit: WeeChat 3.0)
[03:24:08] *** Joins: WayToDoor (~WayToDoor@user/waytodoor)
[03:24:10] *** Joins: davidlowryduda (~dld@2601:197:600:1210:4c8f:59ca:20e7:8c51)
[03:24:20] <aphysically> it looks like writing an explicit loop might be a good strategy for making sure you solve the second part fast
[03:24:22] *** Quits: Sario (uid356235@fosshost/cdo/Sario) (Quit: Connection closed for inactivity)
[03:24:24] *** davidlowryduda is now known as dld
[03:24:41] <zamba> i want to pack the value 3 into a int.. it should only take up 5-bit of the integer.. and it should be from the 3rd to the second last position of the 8-bit int
[03:24:51] <zamba> what is the easiest way of "packing" bits like this in python?
[03:25:09] <grym> zamba: struct.pack
[03:25:51] <zamba> grym: does that operate on "sub 8-bit" sizes?
[03:26:06] <zamba> everything seems to be at least 1 bytes in size for the packing
[03:26:08] <Yhg1s> it does not.
[03:26:17] <Yhg1s> zamba: what do you want to do with the other bits?
[03:26:18] <grym> oops
[03:27:04] <zamba> Yhg1s: it should be set to different values.. so for instance i may want to pack the int value 2 into the first 2 bits, then the value 3 into the next 5 and then 0 or 1 in the lasst
[03:27:19] <zamba> i'm basically doing this for a total of 32 bits (4 bytes)
[03:27:26] *** Quits: Andrynet (~Andrynet@190.152.206.33) (Ping timeout: 256 seconds)
[03:27:37] <zamba> so i have different places of the 4-bytes word where i want to set certain values
[03:27:46] <zamba> if that makes sense?
[03:27:48] <Yhg1s> zamba: well, the usual thing to do is to just bitshift and mask to get the bits you want. There's nothing in the standard library that will do this for you.
[03:27:54] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Quit: This computer has gone to sleep)
[03:27:59] <Yhg1s> zamba: but there are third-party modules that exist for this, like bitstruct.
[03:28:17] *** Quits: Guest3140 (~vit@chello085216193138.chello.sk) (Ping timeout: 252 seconds)
[03:28:23] <zamba> Yhg1s: well, i do bitshifting and masking when retrieving values
[03:28:37] <zamba> Yhg1s: but i don't understand how that can be done when setting values?
[03:29:05] *** Quits: The_Jag (~The_Jag@host-79-13-66-68.retail.telecomitalia.it) (Quit: The_Jag)
[03:29:06] <Yhg1s> zamba: exactly the opposite way. You shift the other direction, and use bitwise OR instead of bitwise AND.
[03:29:09] *** Joins: Andrynet (~Andrynet@190.152.206.33)
[03:29:16] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[03:29:53] *** Joins: jinsun (~quassel@user/jinsun)
[03:30:03] *** Quits: jinsun (~quassel@user/jinsun) (*.net *.split)
[03:30:03] *** Quits: dld (~dld@2601:197:600:1210:4c8f:59ca:20e7:8c51) (*.net *.split)
[03:30:03] *** Quits: Jimmy2027 (~hendrik@2001:1620:2018:38:dde3:1b0f:dc57:eb0f) (*.net *.split)
[03:30:03] *** Quits: cdown (~cdown@163.114.131.1) (*.net *.split)
[03:30:03] *** Quits: qurls (~user@2603-9000-b30e-f600-8dce-20ac-b5f8-34f1.inf6.spectrum.com) (*.net *.split)
[03:30:03] *** Quits: azidhaka_ (~azidhaka@user/azidhaka) (*.net *.split)
[03:30:03] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-bc7b-beb0-653c-822c.res6.spectrum.com) (*.net *.split)
[03:30:03] *** Quits: upekkha (~Advanced@2a01:4f8:1c0c:49df::1) (*.net *.split)
[03:30:03] *** Quits: zware (~zach@python/psf/zware) (*.net *.split)
[03:30:03] *** Quits: sud (~sud@user/sud) (*.net *.split)
[03:30:03] *** Quits: bomb-on (~bomb-on@194.144.47.113) (*.net *.split)
[03:30:03] *** Quits: voirnox (~voirnox@xor.moe) (*.net *.split)
[03:30:03] *** Quits: dwt_ (~dwt_@c-98-200-58-177.hsd1.tx.comcast.net) (*.net *.split)
[03:30:03] *** Quits: dv^_^ (~dv@eclipse.oxfordfun.com) (*.net *.split)
[03:30:03] *** Quits: NoImNotNineVolt (~fdsa@c-73-248-207-98.hsd1.nj.comcast.net) (*.net *.split)
[03:30:03] *** Quits: foo (~foo@user/foo/x-8763512) (*.net *.split)
[03:30:03] *** Quits: laksith (~laksith@laksith.dev) (*.net *.split)
[03:30:03] *** Quits: jamwil (~jamwil@user/jamwil) (*.net *.split)
[03:30:03] *** Quits: Wu (~wu@152.red-88-21-0.staticip.rima-tde.net) (*.net *.split)
[03:30:03] *** Quits: simplicity (~yti@user/simplicity) (*.net *.split)
[03:30:03] *** Quits: erhandsome (~erhandsom@user/erhandsome) (*.net *.split)
[03:30:03] *** Quits: kenwoodfox (~quassel@user/kenwoodfox) (*.net *.split)
[03:30:03] *** Quits: Teacup_ (~teacup@user/teacup) (*.net *.split)
[03:30:03] *** Quits: jootoi_ (~jootoi@130.61.158.197) (*.net *.split)
[03:30:03] *** Quits: phryk (~totallyno@user/phryk) (*.net *.split)
[03:30:03] *** Quits: woky_ (~woky@li1651-31.members.linode.com) (*.net *.split)
[03:30:03] *** Quits: earthbreaker (~earthbrea@li778-229.members.linode.com) (*.net *.split)
[03:30:03] *** Quits: Armen (~Armen@armen138.com) (*.net *.split)
[03:30:03] *** Quits: nac (~nac@user/nac) (*.net *.split)
[03:30:03] *** Quits: kaichiuc1u (~kaichiuch@user/kaichiuchu) (*.net *.split)
[03:30:03] *** Quits: Mechanismus (~LabMonkey@206.255.106.67) (*.net *.split)
[03:30:03] *** Quits: dude-x_ (~textual@72.76.74.165) (*.net *.split)
[03:30:03] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-2958-7b1f-8e17-11c9.res6.spectrum.com) (*.net *.split)
[03:30:03] *** Quits: Elzington (~Elzington@static-68-235-44-44.cust.tzulo.com) (*.net *.split)
[03:30:03] *** Quits: seoul_man (~meh@user/seoul-man/x-5066766) (*.net *.split)
[03:30:03] *** Quits: Robin_Jadoul (afe6b98926@2604:bf00:561:2000::18e) (*.net *.split)
[03:30:03] *** Quits: dawg (dirtydawg@triton.blinkenshell.org) (*.net *.split)
[03:30:03] *** Quits: jdmark (~jdmark@097-102-095-007.res.spectrum.com) (*.net *.split)
[03:30:03] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (*.net *.split)
[03:30:03] *** Quits: akk (~akk@75.161.146.115) (*.net *.split)
[03:30:03] *** Quits: tbcr1 (~tbcr@user/tbcr) (*.net *.split)
[03:30:03] *** Quits: nomic (~nomic@185.198.243.158) (*.net *.split)
[03:30:03] *** Quits: Enitin (~Enitin@82.102.22.84) (*.net *.split)
[03:30:03] *** Quits: sfields (~sfields@2605:a601:adea:7a00:4b8a:a822:48cd:474f) (*.net *.split)
[03:30:03] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (*.net *.split)
[03:30:03] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (*.net *.split)
[03:30:03] *** Quits: nyah (~nyah@94.6.71.219) (*.net *.split)
[03:30:03] *** Quits: arinov (~arinov@213.194.126.155) (*.net *.split)
[03:30:03] *** Quits: akspecs (00cc8321af@user/akspecs) (*.net *.split)
[03:30:03] *** Quits: cm315 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (*.net *.split)
[03:30:03] *** Quits: CrypticSquared (~CrypticS_@user/crypticsquared) (*.net *.split)
[03:30:03] *** Quits: xrogaan (~xrogaan@user/xrogaan) (*.net *.split)
[03:30:03] *** Quits: willcl_ark (~quassel@user/willcl-ark/x-8282106) (*.net *.split)
[03:30:03] *** Quits: supakeen (~user@python/site-packages/supakeen) (*.net *.split)
[03:30:03] *** Quits: dalan (~dalan@124.168.196.74) (*.net *.split)
[03:30:03] *** Quits: emf (~emf@2620:10d:c090:400::5:d28b) (*.net *.split)
[03:30:03] *** Quits: Throgkt (~Throgkt@user/throgkt) (*.net *.split)
[03:30:03] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (*.net *.split)
[03:30:03] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (*.net *.split)
[03:30:03] *** Quits: Lazenca (~lazenca@user/lazenca) (*.net *.split)
[03:30:03] *** Quits: thickrocks (e46ff6ac16@2604:bf00:561:2000::13d) (*.net *.split)
[03:30:03] *** Quits: supay (adas@adas.shelltalk.net) (*.net *.split)
[03:30:03] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (*.net *.split)
[03:30:03] *** Quits: alxndr (~alexander@ybti.net) (*.net *.split)
[03:30:03] *** Quits: hwrd (aa272caead@2604:bf00:561:2000::137) (*.net *.split)
[03:30:03] *** Quits: dba (uid502594@id-502594.hampstead.irccloud.com) (*.net *.split)
[03:30:03] *** Quits: millido (~millido@84.210.150.128) (*.net *.split)
[03:30:03] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (*.net *.split)
[03:30:03] *** Quits: akmod (~akmod@c-73-228-115-212.hsd1.ut.comcast.net) (*.net *.split)
[03:30:03] *** Quits: user3456 (user3456@user/user3456) (*.net *.split)
[03:30:03] *** Quits: cyphase (~cyphase@user/cyphase) (*.net *.split)
[03:30:03] *** Quits: LogicAside (~LogicAsid@user/logicaside) (*.net *.split)
[03:30:03] *** Quits: DaPinkOne (~Dap@user/dap) (*.net *.split)
[03:30:03] *** Quits: flyback (~flyback@2601:540:8201:1e60::9a75) (*.net *.split)
[03:30:03] *** Quits: kn100 (~kn100@wireguard/tunneler/kn100) (*.net *.split)
[03:30:03] *** Quits: Pandadub (~Barones@189.50.80.77) (*.net *.split)
[03:30:03] *** Quits: gr1m (~gr1m@45.83.220.218) (*.net *.split)
[03:30:03] *** Quits: sharksauce (sharksauce@user/sharksauce) (*.net *.split)
[03:30:03] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (*.net *.split)
[03:30:03] *** Quits: mogad0n (~mogad0n@user/mogad0n) (*.net *.split)
[03:30:03] *** Quits: glider (~glider@user/glider) (*.net *.split)
[03:30:03] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (*.net *.split)
[03:30:03] *** Quits: starz (starz@2001:41d0:8:4bd3::1) (*.net *.split)
[03:30:03] *** Quits: Titore (~Titore@user/titore) (*.net *.split)
[03:30:03] *** Quits: en7ropy (~en7ropy@c-73-60-111-180.hsd1.ma.comcast.net) (*.net *.split)
[03:30:03] *** Quits: Madda (~Madda@216.51.198.146.dyn.plus.net) (*.net *.split)
[03:30:03] *** Quits: justm3 (~Username@82-171-42-20.fixed.kpn.net) (*.net *.split)
[03:30:03] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (*.net *.split)
[03:30:03] *** Quits: davor (~davor@user/davor) (*.net *.split)
[03:30:03] *** Quits: zmt00 (~zmt00@user/zmt00) (*.net *.split)
[03:30:03] *** Quits: charlie_sando (~q@2603-8080-2901-f106-b43a-2850-18e0-07b7.res6.spectrum.com) (*.net *.split)
[03:30:03] *** Quits: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net) (*.net *.split)
[03:30:03] *** Quits: bim9262 (~bim9262@user/bim9262) (*.net *.split)
[03:30:03] *** Quits: mrHedgehog0 (9658dbe103@2604:bf00:561:2000::a5) (*.net *.split)
[03:30:03] *** Quits: mwichmann (~mats@209-188-119-117.taosnet.com) (*.net *.split)
[03:30:03] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (*.net *.split)
[03:30:03] *** Quits: irrgit (~irrgit@192.241.175.183) (*.net *.split)
[03:30:03] *** Quits: gildarts (16abab341f@user/gildarts) (*.net *.split)
[03:30:03] *** Quits: mosh3k21 (~mosh3k21@user/mosh3k21) (*.net *.split)
[03:30:04] *** Quits: sharktamer (9bafe1e1bb@2604:bf00:561:2000::17) (*.net *.split)
[03:30:04] *** Quits: Hummer12007 (061e0434dc@2604:bf00:561:2000::16) (*.net *.split)
[03:30:04] *** Quits: samuelbernardo (~samuelber@nata01.lip.pt) (*.net *.split)
[03:30:04] *** Quits: jim (~jim@about/linux/staff/jim) (*.net *.split)
[03:30:04] *** Quits: swinnenb (~swinnenb@user/swinnenb) (*.net *.split)
[03:30:04] *** Quits: Myst (~Myst@user/myst) (*.net *.split)
[03:30:04] *** Quits: johncs (~johncs@2604:a880:2:d0::216b:f001) (*.net *.split)
[03:30:04] *** Quits: ptalbert (~ptalbert@109.212.14.37.dynamic.jazztel.es) (*.net *.split)
[03:30:04] *** Quits: reset (~reset@user/reset) (*.net *.split)
[03:30:04] *** Quits: carbolymer (~carbolyme@dropacid.net) (*.net *.split)
[03:30:04] *** Quits: redrum88 (redrum88@user/redrum88) (*.net *.split)
[03:30:04] *** Quits: svet (~ec2-user@ec2-3-144-179-53.us-east-2.compute.amazonaws.com) (*.net *.split)
[03:30:04] *** Quits: hirish (~hirish@ip85.ip-137-74-20.eu) (*.net *.split)
[03:30:04] *** Quits: vbgunz_ (~vbgunz@35.141.71.47) (*.net *.split)
[03:30:04] *** Quits: remexre (~remexre@user/remexre) (*.net *.split)
[03:30:04] *** Quits: vinnix (~vinnix@user/vinnix) (*.net *.split)
[03:30:04] *** Quits: Nei (~ailin@user/nemui) (*.net *.split)
[03:30:04] *** Quits: BuddyTheElf (launchd@bitbot/launchd) (*.net *.split)
[03:30:04] *** Quits: linuxdaemon (linuxdemon@bnc.linuxdemon.xyz) (*.net *.split)
[03:30:04] *** Quits: nvz (~user@nvz.farted.online) (*.net *.split)
[03:30:04] *** Quits: Swayze (~gryster@user/swayze) (*.net *.split)
[03:30:04] *** Quits: Juhaz (juhaz@hilla.kapsi.fi) (*.net *.split)
[03:30:11] *** Joins: akspecs (00cc8321af@user/akspecs)
[03:30:14] <zamba> hm, let's see if i understood that
[03:30:23] *** Joins: upekkha (~Advanced@2a01:4f8:1c0c:49df::1)
[03:30:23] *** Joins: mrHedgehog0 (9658dbe103@2604:bf00:561:2000::a5)
[03:30:36] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[03:30:36] *** Joins: launchd (launchd@bitbot/launchd)
[03:30:36] *** Joins: kenwoodfox (~quassel@user/kenwoodfox)
[03:30:37] *** aoei\Chickatrice is now known as aoei
[03:30:47] *** Joins: Teacup (~teacup@user/teacup)
[03:30:47] *** Joins: Throgkt (~Throgkt@user/throgkt)
[03:30:53] *** Quits: Colt (~Colt@user/colt) (Remote host closed the connection)
[03:30:54] *** Joins: willcl_ark (~quassel@user/willcl-ark/x-8282106)
[03:30:54] *** Joins: irrgit (~irrgit@192.241.175.183)
[03:31:01] <zamba> so if i have the value 2, the value 3 and the value 1 which i want to pack into the first 2, the next 5 and then the last bit?
[03:31:01] *** Joins: Pandadub (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c)
[03:31:11] *** Joins: Mechanismus (~LabMonkey@206.255.106.67)
[03:31:24] *** Quits: Pandadub (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c) (Remote host closed the connection)
[03:31:31] <Yhg1s> zamba: 2 | (3 << 2) | (1 << 7)
[03:31:37] *** Joins: Nei (~ailin@user/nemui)
[03:31:40] *** Joins: Swayze (~gryster@user/swayze)
[03:31:47] *** Joins: linuxdaemon (linuxdemon@bnc.linuxdemon.xyz)
[03:31:48] *** Joins: justm3 (~Username@82-171-42-20.fixed.kpn.net)
[03:31:50] *** Joins: jdmark (~jdmark@097-102-095-007.res.spectrum.com)
[03:31:50] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[03:31:54] *** Joins: bim9262 (~bim9262@user/bim9262)
[03:31:54] *** Joins: vbgunz_ (~vbgunz@35.141.71.47)
[03:31:54] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:a0d4:385b:b8e7:7194) (Ping timeout: 268 seconds)
[03:31:57] *** Joins: nomic (~nomic@185.198.243.158)
[03:31:57] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[03:32:02] <zamba> wow, just magic
[03:32:05] *** Joins: Lazenca (Lazenca@user/lazenca)
[03:32:06] *** Joins: dwt_ (~dwt_@c-98-200-58-177.hsd1.tx.comcast.net)
[03:32:06] *** Joins: Pandadub (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c)
[03:32:09] *** Joins: sharktamer (9bafe1e1bb@2604:bf00:561:2000::17)
[03:32:09] *** Joins: hwrd (aa272caead@2604:bf00:561:2000::137)
[03:32:09] *** Quits: nomic (~nomic@185.198.243.158) (Read error: Connection reset by peer)
[03:32:11] *** Joins: davor (~davor@user/davor)
[03:32:12] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Remote host closed the connection)
[03:32:12] *** Joins: flyback (~flyback@2601:540:8201:1e60::9a75)
[03:32:13] *** Joins: woky (~woky@li1651-31.members.linode.com)
[03:32:14] *** Joins: Colt (~Colt@user/colt)
[03:32:15] *** Joins: hirish (~hirish@ip85.ip-137-74-20.eu)
[03:32:18] *** Joins: jinsun (~quassel@user/jinsun)
[03:32:18] *** Joins: voirnox (~voirnox@xor.moe)
[03:32:20] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Read error: Connection reset by peer)
[03:32:20] *** Joins: johncs (~johncs@2604:a880:2:d0::216b:f001)
[03:32:21] *** Joins: thickrocks (e46ff6ac16@2604:bf00:561:2000::13d)
[03:32:23] *** Joins: gildarts (16abab341f@user/gildarts)
[03:32:23] *** Joins: supakeen (~user@python/site-packages/supakeen)
[03:32:25] *** Joins: carbolymer (~carbolyme@dropacid.net)
[03:32:25] *** Joins: millido (~millido@84.210.150.128)
[03:32:28] *** Joins: zware (~zach@python/psf/zware)
[03:32:29] *** Quits: chemsmith (~chemsmith@user/chemsmith) (Ping timeout: 256 seconds)
[03:32:30] *** Joins: user3456 (user3456@user/user3456)
[03:32:30] *** Joins: samuelbernardo (~samuelber@nata01.lip.pt)
[03:32:30] *** Joins: jootoi (~jootoi@130.61.158.197)
[03:32:31] *** Joins: Titore (~Titore@user/titore)
[03:32:31] *** Joins: sud (~sud@user/sud)
[03:32:33] *** Joins: nomic (~nomic@185.198.243.158)
[03:32:35] *** Joins: phryk (~totallyno@user/phryk)
[03:32:35] *** Joins: earthbreaker (earthbreak@2600:3c03::f03c:91ff:fece:9070)
[03:32:37] *** Joins: laksith (~laksith@laksith.dev)
[03:32:39] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[03:32:41] *** Joins: gr1m (~gr1m@45.83.220.218)
[03:32:41] *** Joins: swinnenb (~swinnenb@user/swinnenb)
[03:32:46] *** Joins: dv^_^ (~dv@eclipse.oxfordfun.com)
[03:32:59] *** Joins: CrypticSquared (~CrypticS_@user/crypticsquared)
[03:33:02] *** foxbox is now known as salami
[03:33:03] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[03:33:08] *** salami is now known as foxbox
[03:33:14] *** Quits: Portugol9 (~Portugol9@user/portugol9) (Ping timeout: 252 seconds)
[03:33:14] *** Joins: arinov (~arinov@213.194.126.155)
[03:33:17] *** Joins: remexre (~remexre@user/remexre)
[03:33:22] <zamba> let's see if i understand it as well
[03:33:24] *** Joins: DaPinkOne (~Dap@user/dap)
[03:33:32] *** Joins: tbcr1 (~tbcr@user/tbcr)
[03:33:33] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[03:33:37] *** Quits: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net) (Ping timeout: 256 seconds)
[03:33:37] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[03:34:11] *** Quits: hexnewbie (~hexnewbie@user/hexnewbie) (Ping timeout: 256 seconds)
[03:34:15] *** Joins: glider (~glider@user/glider)
[03:34:21] <SnoopJ> aphysically, well, all the competition around it is sort of an afterthought, the challenge is the main draw :)
[03:34:26] *** Joins: LogicAside (~LogicAsid@user/logicaside)
[03:34:39] *** Joins: chemsmith (~chemsmith@user/chemsmith)
[03:35:08] *** Joins: tesuji (~quassel@2a02:908:180:9500:f5e8:aae6:d52b:d22b)
[03:35:09] <tim__> Was reading something recently that said that opening files without an encoding specified was a bug, and that it defaulted to some opaque system-dependent behavior or something. Anyone catch that around? Trying to find docs. Could be misremembering too, not sure.
[03:35:10] *** Joins: Wu (~wu@152.red-88-21-0.staticip.rima-tde.net)
[03:35:11] *** Joins: dude-x (~textual@72.76.74.165)
[03:35:12] *** Joins: foo (~foo@user/foo/x-8763512)
[03:35:15] *** Joins: alxndr (~alexander@ybti.net)
[03:35:16] *** Joins: simplicity (~yti@user/simplicity)
[03:35:20] *** Joins: jamwil (~jamwil@user/jamwil)
[03:35:26] *** Joins: vinnix (~vinnix@user/vinnix)
[03:35:28] *** Joins: hexnewbie (~hexnewbie@user/hexnewbie)
[03:35:36] *** Joins: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net)
[03:35:39] *** Quits: tesuji (~quassel@2a02:908:180:9500:f5e8:aae6:d52b:d22b) (Client Quit)
[03:35:42] *** Joins: emf (~emf@2620:10d:c090:400::5:d28b)
[03:35:54] *** Joins: redrum88 (redrum88@user/redrum88)
[03:36:01] *** Joins: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net)
[03:36:15] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[03:36:21] *** Joins: Portugol9 (~Portugol9@user/portugol9)
[03:36:52] <SnoopJ> tim__, I don't think using it as such is or has ever been considered a bug, but working out the default encoding is less than transparent. The open() docs are a good place to begin: https://docs.python.org/3/library/functions.html#open
[03:37:26] <tim__> Just found what I was looking for: https://docs.python.org/3.10/whatsnew/3.10.html#optional-encodingwarning-and-encoding-locale-option
[03:37:27] *** Quits: weedmic (~weedmic@89-139-232-154.bb.netvision.net.il) (Quit: Konversation terminated!)
[03:38:12] <tim__> I do need to revisit those docs though, thank you SnoopJ
[03:38:32] <SnoopJ> you can definitely write bugs with it if the implicit encoding won't always be correct, yea
[03:38:33] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[03:38:41] <SnoopJ> you end up here if you don't specify it: https://docs.python.org/3/library/locale.html#locale.getpreferredencoding
[03:38:44] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[03:39:51] *** Joins: jarthur_ (~jarthur@cpe-70-114-198-37.austin.res.rr.com)
[03:40:19] *** Joins: svet (~ec2-user@ec2-3-144-179-53.us-east-2.compute.amazonaws.com)
[03:40:26] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.3)
[03:41:10] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[03:41:50] *** Quits: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Remote host closed the connection)
[03:41:54] *** Quits: netrunner (~netrunner@user/netrunner) (Quit: Leaving)
[03:42:08] *** Joins: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[03:43:12] *** Quits: DarthGandalf (user@znc/developer/DarthGandalf) (Remote host closed the connection)
[03:43:21] <zamba> Yhg1s: though, (2 << 6 | 3 << 2 | 1 is more correct, or?
[03:43:41] <zamba> argh, i mean: '(2 << 6) | (3 << 2) | 1'
[03:44:43] *** Joins: NyaaTheCat (~CalculusC@user/calculuscat)
[03:45:57] *** Joins: JordiGH (~jordi@user/jordigh)
[03:46:01] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[03:46:16] <bjs> zamba: it depends which way around you mean when you said "the last bit"
[03:46:21] <bjs> i..e is the last bit of 010101 0 or 1? :)
[03:47:13] *** Quits: Andrynet (~Andrynet@190.152.206.33) (Ping timeout: 256 seconds)
[03:47:42] <bjs> this ambiguity is why phrases exist like "least significant bit" and "most significant bit"
[03:47:47] *** Quits: Balzy (~Balzy@host-87-5-133-30.retail.telecomitalia.it) (Ping timeout: 256 seconds)
[03:47:55] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[03:48:03] *** Quits: NyaaTheCat (~CalculusC@user/calculuscat) (Client Quit)
[03:48:51] *** Joins: Andrynet (~Andrynet@190.152.206.33)
[03:49:29] *** Joins: Balzy (~Balzy@host-79-17-138-160.retail.telecomitalia.it)
[03:52:26] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[03:52:44] *** Joins: grayn (Thunderbir@gateway/vpn/protonvpn/grayn)
[03:52:59] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[03:53:44] <arkanoid> can you tell me why mypy says that this line is ok? "parsed: Tuple[str, str, pd.DataFrame] = False"
[03:55:03] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[03:55:39] *** Quits: aac (~AAC@2001:8a0:6cc5:7e01:dc1e:6600:85ec:1bd9) (Remote host closed the connection)
[03:55:47] *** Joins: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-165.dsl.bell.ca)
[03:56:12] *** Joins: DarthGandalf (user@znc/developer/DarthGandalf)
[03:56:19] *** Parts: johncs (~johncs@2604:a880:2:d0::216b:f001) (bye)
[03:56:35] <bjs> arkanoid: it does?
[03:56:51] <SnoopJ> arkanoid, is it in an unreachable branch?
[03:57:05] <bjs> or in some code that mypy isn't type checking at all, for other reasons?
[03:57:09] <arkanoid> can yes, actually it says it's ok "parsed: Tuple[str, str, pd.DataFrame] = None" also
[03:57:24] <arkanoid> no type checking is working all around this
[03:57:33] <bjs> arkanoid: maybe you can share the code? where is this line?
[03:57:46] <bjs> on its own? in a function? in a class? in some kind of `if`?
[03:58:17] <SnoopJ> my money is on unreachable code: https://bpa.st/LJJA
[03:58:21] *** Joins: velgin (~velgin@pool-96-237-105-119.bstnma.fios.verizon.net)
[03:58:32] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 252 seconds)
[03:58:33] *** Quits: Andrynet (~Andrynet@190.152.206.33) (Ping timeout: 256 seconds)
[03:58:37] *** Joins: microclimate (~microclim@user/microclimate)
[03:59:26] <jinsun> run it with  --warn-unreachable to check
[04:00:00] *** Joins: Wulf (~Wulf@user/wulf)
[04:00:20] *** Joins: Andrynet (~Andrynet@190.152.206.33)
[04:01:25] *** Joins: NyaaTheCat (~CalculusC@user/calculuscat)
[04:02:46] <zamba> 0x00.to_bytes(1, "big") <- this seems a bit backwards
[04:02:58] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Ping timeout: 265 seconds)
[04:03:04] <zamba> what is the easiest and fastest way to convert the int 0 to bytes
[04:03:22] *** Quits: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net) (Ping timeout: 260 seconds)
[04:03:30] *** justache is now known as totallynotjustac
[04:03:30] <nedbat> zamba: b'\x00'  ?
[04:04:00] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[04:04:10] *** totallynotjustac is now known as justache
[04:04:15] *** Joins: faLUKE (~paolo@host-80-117-216-225.retail.telecomitalia.it)
[04:04:16] *** Quits: chilversc (~chilversc@user/chilversc) (Ping timeout: 256 seconds)
[04:04:23] *** Joins: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net)
[04:04:50] *** Quits: willcl_ark (~quassel@user/willcl-ark/x-8282106) (Ping timeout: 256 seconds)
[04:04:53] <bjs> zamba: if it's always 1 int in range 0-255 then bytes([i]) also works
[04:05:24] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[04:05:40] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[04:05:54] *** Joins: chilversc (~chilversc@user/chilversc)
[04:06:05] <faLUKE> hello, I'm getting crazy with this:  { f = open(somefile,'wb') f.write("bah") f.close() os.remove(somefile) }  <--- bah is written into somefile, but the file is not removed. What could be the issue??
[04:06:27] <faLUKE> sorry:
[04:06:28] *** Joins: willcl_ark (~quassel@user/willcl-ark/x-8282106)
[04:06:35] <faLUKE> open(somefile, 'w')
[04:06:51] *** Quits: microclimate (~microclim@user/microclimate) (Remote host closed the connection)
[04:07:20] <faLUKE> (tested on ubuntu)
[04:07:37] *** Quits: Andrynet (~Andrynet@190.152.206.33) (Ping timeout: 256 seconds)
[04:07:38] <bjs> faLUKE: do you have the actual test code?
[04:08:02] <BtbN> Works for me with that snippet.
[04:08:09] <BtbN> Are you on Windows or something?
[04:08:45] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 256 seconds)
[04:09:32] <faLUKE> I'm on Ubuntu
[04:09:32] <SnoopJ> jinsun, yea, that works. It's kind of annoying that the arg is --warn but the report is an error
[04:09:44] *** Joins: Andrynet (~Andrynet@190.152.206.33)
[04:09:54] <bjs> faLUKE: but what was the actual code you ran? can you pastebin the test file or something?
[04:10:54] <jinsun> SnoopJ: yeah should have been --disallow-unreachable
[04:11:01] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[04:14:59] *** Quits: neachdainn (~nate@50.224.226.50) (Ping timeout: 256 seconds)
[04:15:02] *** Quits: grimvar (~grimvar@i5C75F5C0.versanet.de) (Ping timeout: 252 seconds)
[04:15:21] *** Quits: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Ping timeout: 250 seconds)
[04:15:24] <faLUKE> bjs: I have to check better before pastebin the file
[04:16:30] *** Joins: jazzy (~jaziz@user/jaziz)
[04:16:38] *** Quits: NyaaTheCat (~CalculusC@user/calculuscat) (Quit: I have phased into another dimension, see ya later!)
[04:16:43] *** Joins: grimvar (~grimvar@i5C75F609.versanet.de)
[04:17:34] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:1401:22a5:674e:d69b) (Quit: smeeagle)
[04:19:19] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[04:19:26] *** Quits: e2m4n (~ezman@user/e2m4n) (Ping timeout: 252 seconds)
[04:19:45] *** Joins: NyaaTheCat (~CalculusC@user/calculuscat)
[04:19:59] *** Quits: Andrynet (~Andrynet@190.152.206.33) (Ping timeout: 252 seconds)
[04:20:13] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[04:20:15] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:20:23] <faLUKE> bjs: sorry, just found the error, I was a dumbass
[04:22:12] *** Joins: Andrynet (~Andrynet@190.152.206.33)
[04:23:16] <causa-sui> i'm doing an extremely unscientific and subjective style poll. is it better/more readable/whatever to return after a 'try/except', or inside a 'finally'? example https://dpaste.com/9KWUFX8XE foo() or bar() ?
[04:24:18] *** Joins: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net)
[04:24:23] <SnoopJ> causa-sui, neither of those uses `finally`, did you mean `else`?
[04:24:25] *** Parts: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) ()
[04:25:31] <causa-sui> yeah, my bad
[04:25:33] <causa-sui> else
[04:25:36] *** Joins: jim (~jim@about/linux/staff/jim)
[04:25:56] <causa-sui> 'finally: return x' wouldn't make sense I think
[04:26:12] <zamba> i want to set up an adapter for converting values between two systems.. for instance the value 2 in one system maps over to the value 3 in another system.. but i want both systems to refer to their corresponding value as for instance LOCKED
[04:26:12] <causa-sui> SnoopJ:
[04:26:13] <SnoopJ> I would normally try/except and then just a `return` after the block for the 'happy path'
[04:26:30] <zamba> what is the best way of setting up such an "adapter" between the two "systems"
[04:26:32] <zamba> ?
[04:26:54] <SnoopJ> zamba, are these systems of units?
[04:26:54] <zamba> create two enums.. one for each?
[04:26:58] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:b8b7:2c62:cadc:e295) (Quit: Client closed)
[04:27:10] *** justache is now known as zoite
[04:27:30] <zamba> SnoopJ: it's just different states.. for instance in one system 2 means locked, 3 means searching, 1 means unlocked.. in the other system, 3 means locked, 1 means searching and 2 means unlocked
[04:27:59] <SnoopJ> zamba, sounds like two enums might make sense, then
[04:28:00] <zamba> but in my code i don't want to "remember" the values.. but instead i want to refer to .LOCKED, .UNLOCKED, .SEARCHING and so on
[04:28:05] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[04:28:23] <KirkMcDonald> Two enums, and maybe also two functions to convert each to the other.
[04:28:48] <KirkMcDonald> Or just two dicts, mapping each to the other.
[04:29:11] *** zoite is now known as z0ite
[04:29:23] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:29:41] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:71d9:b2ed:5e8:e81d)
[04:30:57] <zamba> yeah, and that's the other point.. i want to map directly between them.. so for instance if means LOCKED in one, then i'm able to get out the value of LOCKED in the other
[04:31:01] <SnoopJ> KirkMcDonald, perhaps on EBar: `@classmethod def from_EFoo(cls, fooval): return getattr(cls, fooval.name)` ?
[04:31:11] <SnoopJ> and vice versa
[04:31:14] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[04:31:42] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[04:32:13] <causa-sui> KirkMcDonald: does factorio-python still work? :O
[04:32:33] *** Quits: goldfish (~goldfish@user/goldfish) (Quit: Leaving)
[04:33:27] *** Quits: Kabouik (~Kabouik@user/kabouik) (Remote host closed the connection)
[04:34:09] *** Quits: NyaaTheCat (~CalculusC@user/calculuscat) (Quit: I have phased into another dimension, see ya later!)
[04:36:31] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[04:36:40] <SnoopJ> zamba, e.g. https://bpa.st/FO2Q
[04:37:41] <SnoopJ> probably some clever trick to make the boilerplate repetition go away in the limit of many such enums, but for two...heck, I'd just write it :)
[04:39:14] <zamba> SnoopJ: ah, nice.. yeah, i did something like that
[04:39:21] *** Joins: parv (~quass@user/parv)
[04:39:25] <zamba> that classmethod thing was nice
[04:41:04] <bancroft> i'm using vanilla subprocess.check_output, just a command and a cwd, and i'm not getting realtime output. Am I crazy? because I thought for sure it would.
[04:41:22] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:41:47] *** Joins: OPK (~OPK@user/opk)
[04:42:50] <causa-sui> iirc check_output returns the output after the subprocess closes
[04:43:08] <zamba> SnoopJ: is it possible to turn it around somehow? let's say you have an instance of EBar and want to convert that value into an instance of EFoo?
[04:43:19] <bancroft> causa-sui: that is the behaviour i'm seeing, so I need to make it realtime then
[04:43:27] <zamba> so like a class method to_foo inside EBar?
[04:43:57] <SnoopJ> zamba, yes, but anything more interleaved like that makes me think I'd rather just have one structure representing both the two systems *and* the relationship between them.
[04:44:06] <causa-sui> bancroft: what's your interpreter version?
[04:44:36] <zamba> SnoopJ: true
[04:44:39] <bancroft> causa-sui: ubuntu18 on that box so it's 3.6.9
[04:44:40] *** Quits: whaley (~whaley@2603-6080-a301-33d1-4c2f-0051-868d-a86d.res6.spectrum.com) (Ping timeout: 268 seconds)
[04:45:04] *** Quits: Andrynet (~Andrynet@190.152.206.33) (Ping timeout: 256 seconds)
[04:45:18] *** Joins: whaley (~whaley@2603-6080-a301-33d1-61af-b49d-1f8a-054a.res6.spectrum.com)
[04:45:32] <causa-sui> alright. you're using the old api but 3.6 supports subprocess.run -- might be worth boning back up on the docs https://docs.python.org/3.6/library/subprocess.html
[04:46:01] <phox> ^
[04:46:57] *** Joins: Andrynet (~Andrynet@190.152.206.33)
[04:47:08] <jinsun> .run will also give the output after it completes though no?
[04:48:17] <jinsun> you probably would have to Popen and then https://docs.python.org/3/library/subprocess.html#subprocess.Popen.communicate in a loop
[04:48:25] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[04:48:25] *** Quits: flokuehn (~flokuehn@87.123.247.94) (Ping timeout: 256 seconds)
[04:49:48] *** Quits: DarthGandalf (user@znc/developer/DarthGandalf) (Remote host closed the connection)
[04:50:04] *** Joins: DarthGandalf (user@znc/developer/DarthGandalf)
[04:50:19] *** Joins: flokuehn (~flokuehn@87.123.247.75)
[04:50:28] *** Joins: fikran (~fikran@user/fikran)
[04:50:37] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[04:51:13] <causa-sui> you might
[04:52:15] *** Quits: Andrynet (~Andrynet@190.152.206.33) (Ping timeout: 252 seconds)
[04:53:15] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[04:53:42] *** Quits: akspecs (00cc8321af@user/akspecs) (Remote host closed the connection)
[04:53:44] *** Joins: NyaaTheCat (~CalculusC@user/calculuscat)
[04:53:48] *** Joins: akspecs (00cc8321af@user/akspecs)
[04:54:05] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 256 seconds)
[04:54:20] *** Quits: aoei (aoei@nethackscoreboard/aoei) (Quit: hold that thought - server reboot)
[04:55:09] *** Joins: BSaboia (~bsaboia@201-29-126-99.user3p.veloxzone.com.br)
[04:55:19] <bancroft> jinsun causa-sui doing run(..., check=True) does exactly what I need. Realtime output, and raises a CalledProcessError on failure :)
[04:55:35] *** Joins: aoei (aoei@nethackscoreboard/aoei)
[04:55:37] <causa-sui> very good
[04:55:41] *** Joins: Andrynet (~Andrynet@190.152.206.33)
[04:56:04] *** Quits: ccallahan (~ccallahan@redhat/ccallahan) (Remote host closed the connection)
[04:56:45] *** Joins: sus (zero@user/zeromomentum)
[04:57:09] <jinsun> ah so you didn't want to capture output
[04:58:03] <KirkMcDonald> causa-sui: factorio-python was always just a prototype.
[04:58:11] <causa-sui> rats. ah well
[04:58:34] <KirkMcDonald> A way for me to poke around with the recipe graph.
[04:59:15] <KirkMcDonald> And to prototype solver code before writing it for the actual calculator.
[05:01:24] *** Joins: nicholaus04 (~nicholaus@172.58.17.115)
[05:02:01] *** Quits: Portugol9 (~Portugol9@user/portugol9) (Ping timeout: 256 seconds)
[05:03:41] *** Joins: DrFlask (~DrFlask@2601:204:d87e:42f0:1acf:8846:c89d:81bf)
[05:03:43] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[05:05:01] *** Joins: Portugol9 (~Portugol9@user/portugol9)
[05:06:34] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[05:08:36] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[05:09:57] *** Quits: RasnCain_ (~rasncain@gw1.cox.com) (Ping timeout: 256 seconds)
[05:14:16] *** Quits: NyaaTheCat (~CalculusC@user/calculuscat) (Quit: I have phased into another dimension, see ya later!)
[05:15:51] *** Quits: velgin (~velgin@pool-96-237-105-119.bstnma.fios.verizon.net) (Read error: Connection reset by peer)
[05:16:14] *** Quits: Andrynet (~Andrynet@190.152.206.33) (Ping timeout: 256 seconds)
[05:16:51] *** Quits: BSaboia (~bsaboia@201-29-126-99.user3p.veloxzone.com.br) (Quit: This computer has gone to sleep)
[05:16:55] *** Quits: mags (~mags@097-090-237-145.res.spectrum.com) (Ping timeout: 265 seconds)
[05:17:48] *** Joins: BSaboia (~bsaboia@201-29-126-99.user3p.veloxzone.com.br)
[05:18:19] *** Joins: Andrynet (~Andrynet@190.152.206.33)
[05:18:19] *** Joins: mags (~mags@097-090-237-145.res.spectrum.com)
[05:20:41] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:24:46] *** Joins: NyaaTheCat (~CalculusC@user/calculuscat)
[05:28:56] *** Joins: vsantana (~Thunderbi@fttx-177136148231.usr.predialnet.com.br)
[05:30:24] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:49] *** Quits: BSaboia (~bsaboia@201-29-126-99.user3p.veloxzone.com.br) (Quit: This computer has gone to sleep)
[05:31:03] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[05:31:51] *** Quits: Andrynet (~Andrynet@190.152.206.33) (Ping timeout: 252 seconds)
[05:33:33] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[05:33:53] *** Joins: Andrynet (~Andrynet@190.152.206.33)
[05:37:41] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[05:37:44] *** Quits: NyaaTheCat (~CalculusC@user/calculuscat) (Quit: I have phased into another dimension, see ya later!)
[05:37:48] *** Joins: RasnCain_ (~rasncain@ip174-73-119-77.br.br.cox.net)
[05:38:05] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 252 seconds)
[05:39:01] *** Joins: BSaboia (~bsaboia@201-29-126-99.user3p.veloxzone.com.br)
[05:39:11] *** Quits: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-165.dsl.bell.ca) (Ping timeout: 252 seconds)
[05:40:12] *** Quits: BSaboia (~bsaboia@201-29-126-99.user3p.veloxzone.com.br) (Max SendQ exceeded)
[05:41:16] *** Joins: BSaboia (~bsaboia@201-29-126-99.user3p.veloxzone.com.br)
[05:41:23] *** Quits: Andrynet (~Andrynet@190.152.206.33) (Ping timeout: 252 seconds)
[05:41:56] *** Quits: qpdb (~qpdb@user/qpdb) (Ping timeout: 252 seconds)
[05:41:59] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[05:43:19] *** Joins: Andrynet (~Andrynet@190.152.206.33)
[05:44:14] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[05:45:57] *** Joins: nicode (~nic@2607:f2c0:932e:7500:1315:d5b6:bb04:36f3)
[05:46:16] *** Quits: grayn (Thunderbir@gateway/vpn/protonvpn/grayn) (Ping timeout: 256 seconds)
[05:47:21] <nicode> Howdy! What's a good way to get a reference of python constants, e.g. I'm looking for where curses.KEY_ENTER is to see what other keys exist but I'm not sure where to look. Should I just download the python source code and search that?
[05:47:24] *** Quits: RasnCain_ (~rasncain@ip174-73-119-77.br.br.cox.net) (Ping timeout: 256 seconds)
[05:49:05] <dre> nicode, open up python repl, import curses, curses.<tab><tab>
[05:49:20] <nicode> oh, thanks dre!
[05:49:40] *** Quits: Andrynet (~Andrynet@190.152.206.33) (Ping timeout: 256 seconds)
[05:50:15] *** Joins: RasnCain (~rasncain@ip174-73-119-77.br.br.cox.net)
[05:50:29] <nicode> that works nicely, duh!
[05:51:02] <nicode> OK, follow-up question to anyone who's familiar w/ curses, how do you handle for ESC key being pressed?
[05:51:44] *** Joins: Andrynet (~Andrynet@190.152.206.33)
[05:51:46] <nicode> I don't see anything like curses.KEY_ESC but there is curses.KEY_END KEY_EXIST so I guess I'll try some to see if it's just poorly named...
[05:55:19] *** Joins: qpdb (~qpdb@user/qpdb)
[05:55:39] *** Quits: BSaboia (~bsaboia@201-29-126-99.user3p.veloxzone.com.br) (Quit: This computer has gone to sleep)
[05:55:41] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 252 seconds)
[05:56:13] *** Joins: boON (~boON@92.38.136.69)
[05:56:13] *** Joins: brabrax (~brabrax@user/brabrax)
[05:56:15] *** Joins: Armen (~Armen@armen138.com)
[05:56:31] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[05:58:58] <greyblue9> inside try/except
[05:59:32] *** Quits: whaley (~whaley@2603-6080-a301-33d1-61af-b49d-1f8a-054a.res6.spectrum.com) (Ping timeout: 252 seconds)
[05:59:46] *** Joins: BSaboia (~bsaboia@201-29-126-99.user3p.veloxzone.com.br)
[05:59:52] <greyblue9> if you return in a finally bad things happen iirc
[06:00:10] *** Quits: mgedmin (~mg@user/mgedmin) (Quit: ZNC - http://znc.sourceforge.net)
[06:00:43] *** Joins: dsk (~dsk@user/dsk)
[06:00:49] *** Joins: whaley (~whaley@2603-6080-a301-33d1-61af-b49d-1f8a-054a.res6.spectrum.com)
[06:00:54] *** Joins: Macuser (~Macuser@216.30.159.201)
[06:00:59] *** Quits: BSaboia (~bsaboia@201-29-126-99.user3p.veloxzone.com.br) (Max SendQ exceeded)
[06:01:28] *** Joins: BSaboia (~bsaboia@201-29-126-99.user3p.veloxzone.com.br)
[06:01:38] *** Quits: BSaboia (~bsaboia@201-29-126-99.user3p.veloxzone.com.br) (Client Quit)
[06:02:09] *** Quits: nomic (~nomic@185.198.243.158) (Remote host closed the connection)
[06:02:18] *** Joins: mgedmin (~mg@user/mgedmin)
[06:02:49] *** Quits: whaley (~whaley@2603-6080-a301-33d1-61af-b49d-1f8a-054a.res6.spectrum.com) (Remote host closed the connection)
[06:02:50] <nedbat> greyblue9: you can return from finally, but it's confusing what happens.
[06:03:19] *** Joins: Retr0id2 (~Retr0id@user/retr0id)
[06:03:29] *** Quits: Retr0id (~Retr0id@user/retr0id) (Read error: Connection reset by peer)
[06:03:30] *** Retr0id2 is now known as Retr0id
[06:03:48] *** Quits: sharperguy (~sharpergu@88.130.223.19) (Ping timeout: 265 seconds)
[06:04:29] *** Joins: nomic (~nomic@185.198.243.158)
[06:05:18] *** Quits: RasnCain (~rasncain@ip174-73-119-77.br.br.cox.net) (Remote host closed the connection)
[06:05:29] *** Joins: sharperguy (~sharpergu@88.130.219.48)
[06:06:37] *** Quits: EGH (~EGH@185.25.195.104) (Ping timeout: 256 seconds)
[06:08:23] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[06:09:25] *** Joins: EGH (~EGH@185.25.195.104)
[06:09:54] *** Joins: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-165.dsl.bell.ca)
[06:12:00] *** Joins: frost (~frost@user/frost)
[06:12:09] *** Parts: DrFlask (~DrFlask@2601:204:d87e:42f0:1acf:8846:c89d:81bf) ()
[06:14:16] *** Joins: Lando-SpaceIzzle (~Lando-Spa@user/lando-spacepimp)
[06:15:19] *** Quits: CygniX (~CygniX@2605:6400:30:fdc6:68:f4:4e:78) (Remote host closed the connection)
[06:18:34] *** Quits: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[06:19:54] *** Joins: jackblasted (~quassel@45.131.194.98)
[06:24:06] *** Joins: CygniX (~CygniX@2a01:8740:1:727:4e:80:7f:2d)
[06:25:37] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[06:25:49] *** Joins: mickey8 (~user@user/mickey)
[06:26:25] *** Quits: ubert (~Thunderbi@p200300ecdf0ba2aae6b318fffe838f33.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[06:26:50] *** Joins: ubert (~Thunderbi@p200300ecdf0ba2bee6b318fffe838f33.dip0.t-ipconnect.de)
[06:28:26] <aphysically> I'm naughty I did except Exception ;^( https://bpa.st/NBQQ
[06:29:01] *** Parts: CygniX (~CygniX@2a01:8740:1:727:4e:80:7f:2d) (Konversation terminated!)
[06:29:11] <aphysically> gonna get coal during the advent of code prolly
[06:29:20] *** Quits: ubert (~Thunderbi@p200300ecdf0ba2bee6b318fffe838f33.dip0.t-ipconnect.de) (Remote host closed the connection)
[06:29:37] *** Joins: ubert (~Thunderbi@p200300ecdf0ba2bee6b318fffe838f33.dip0.t-ipconnect.de)
[06:30:03] *** Quits: llh (~llh@user/llh) (Quit: :::: ( UPP ) ::::)
[06:33:57] *** Joins: llh (~llh@user/llh)
[06:34:50] *** Quits: renrelkha (~renrelkha@user/renrelkha) (Read error: Connection reset by peer)
[06:35:31] *** Quits: willcl_ark (~quassel@user/willcl-ark/x-8282106) (Ping timeout: 256 seconds)
[06:35:43] *** Joins: renrelkha (~renrelkha@user/renrelkha)
[06:36:05] *** Joins: RasnCain_ (~rasncain@ip174-73-119-77.br.br.cox.net)
[06:36:11] *** Joins: willcl_ark (~quassel@user/willcl-ark/x-8282106)
[06:37:02] *** Joins: CygniX (~CygniX@2a01:8740:1:727:4e:80:7f:2d)
[06:39:44] *** Quits: faLUKE (~paolo@host-80-117-216-225.retail.telecomitalia.it) (Remote host closed the connection)
[06:42:33] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[06:42:33] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:42:33] *** finn_elija is now known as FinnElija
[06:42:33] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[06:42:48] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[06:43:17] *** Quits: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Remote host closed the connection)
[06:45:23] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[06:45:55] *** Quits: Lando-SpaceIzzle (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 252 seconds)
[06:47:23] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[06:49:56] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[06:50:08] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[06:56:29] *** Quits: RasnCain_ (~rasncain@ip174-73-119-77.br.br.cox.net) (Ping timeout: 256 seconds)
[06:57:56] *** Joins: et_ (~et@user/et)
[06:58:11] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[06:58:29] *** Quits: et (~et@user/et) (Ping timeout: 268 seconds)
[06:58:30] *** et_ is now known as et
[06:59:06] *** Quits: boON (~boON@92.38.136.69) (Quit: boON)
[06:59:49] *** Joins: fikran (~fikran@user/fikran)
[06:59:54] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:02:34] *** Joins: boON (~boON@92.38.136.69)
[07:03:36] *** Quits: boON (~boON@92.38.136.69) (Client Quit)
[07:03:40] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[07:04:39] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 268 seconds)
[07:05:23] *** Joins: boON (~boON@92.38.136.69)
[07:05:33] *** Quits: boON (~boON@92.38.136.69) (Changing host)
[07:05:33] *** Joins: boON (~boON@user/boon)
[07:05:46] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[07:06:34] *** Quits: boON (~boON@user/boon) (Client Quit)
[07:06:48] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Quit: Leaving)
[07:07:00] *** Joins: boON (~boON@user/boon)
[07:08:17] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 252 seconds)
[07:08:21] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Ping timeout: 276 seconds)
[07:08:59] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[07:09:34] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 256 seconds)
[07:16:32] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 252 seconds)
[07:19:29] *** Joins: boON_ (~boON@user/boon)
[07:20:20] *** Quits: boON (~boON@user/boon) (Ping timeout: 256 seconds)
[07:23:23] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[07:24:52] *** Quits: jarthur_ (~jarthur@cpe-70-114-198-37.austin.res.rr.com) (Ping timeout: 256 seconds)
[07:27:18] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-f5ee-2791-688d-e316.res6.spectrum.com)
[07:28:08] *** Joins: aniketgm (~Aniket@49.36.107.115)
[07:28:26] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[07:29:20] *** Joins: comlord (~Thunderbi@121.227.116.10)
[07:30:01] *** Quits: haasn (~nand@haasn.dev) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[07:31:21] *** Joins: haasn (~nand@haasn.dev)
[07:32:28] *** Joins: kdc (~kdc@196.211.197.159)
[07:32:41] <sunny93> Can I import from a soft link of another python package folder?
[07:33:02] *** Quits: Dotz0cat (~Dotz0cat@h14.95.187.173.dynamic.ip.windstream.net) (Ping timeout: 268 seconds)
[07:33:47] <sunny93> I don't want to copy or move the other folder so I am thinking creating a soft link and import with that soft link. anything bad?
[07:34:27] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[07:34:31] *** Joins: grayn (~Thunderbi@130.95.254.118)
[07:35:57] *** Joins: guenhael (~Thunderbi@2a01cb008c3d5800f99e00cb4d902568.ipv6.abo.wanadoo.fr)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:06] *** Quits: nomic (~nomic@185.198.243.158) (Quit: Leaving)
[07:39:55] <FunkyBob> sunny93: or you could add the path to sys.paths
[07:40:00] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[07:40:11] *** Quits: guenhael (~Thunderbi@2a01cb008c3d5800f99e00cb4d902568.ipv6.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[07:40:32] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[07:42:16] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[07:44:26] *** Joins: RasnCain (~rasncain@ip174-73-119-77.br.br.cox.net)
[07:44:33] <sunny93> ya using soft link breaks something
[07:45:45] <sunny93> never mind. Not a big deal. I am just being curious
[07:45:57] *** Joins: zaquest (~notzaques@5.130.79.72)
[07:48:37] *** Quits: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:49:30] *** Joins: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[07:49:39] *** Quits: akspecs (00cc8321af@user/akspecs) (Remote host closed the connection)
[07:49:46] *** Joins: akspecs (00cc8321af@user/akspecs)
[07:52:01] *** Quits: RasnCain (~rasncain@ip174-73-119-77.br.br.cox.net) (Ping timeout: 256 seconds)
[07:53:41] *** Quits: sreve_ (~quassel@p4ff44be4.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[07:54:13] *** Joins: sreve (~quassel@p4ff44972.dip0.t-ipconnect.de)
[07:54:17] *** Quits: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:54:28] *** Quits: maroloccio (~marolocci@151.53.155.184) (Quit: WeeChat 3.0)
[07:55:26] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[07:56:44] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Quit: Leaving)
[08:02:48] *** Joins: zlg (~zlg@user/zlg)
[08:06:10] *** Quits: sagax (~sagax_nb@user/sagax) (Quit: Konversation terminated!)
[08:07:03] *** Quits: grayn (~Thunderbi@130.95.254.118) (Quit: grayn)
[08:07:14] *** Joins: grayn1 (~Thunderbi@130.95.254.118)
[08:09:08] *** Joins: twb (~twb@159-196-230-25.9fc4e6.mel.nbn.aussiebb.net)
[08:09:22] <twb> I want to port (roughly) this to python3-gi: https://sources.debian.org/src/xdg-user-dirs-gtk/0.10-3/update.c/
[08:09:22] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:14f6:792c:9624:6b14)
[08:09:31] <twb> Where is parse_gtk_bookmarks in gi?
[08:09:32] *** grayn1 is now known as grayn
[08:09:36] *** Quits: Guest14 (~Guest14@pool-96-253-74-73.rcmdva.fios.verizon.net) (Ping timeout: 256 seconds)
[08:09:53] *** Quits: vsantana (~Thunderbi@fttx-177136148231.usr.predialnet.com.br) (Ping timeout: 252 seconds)
[08:10:07] *** Quits: minip (~minip@user/minip) (Remote host closed the connection)
[08:11:37] <twb> This guy is using gi, but is doing it by hand!  https://sources.debian.org/src/quodlibet/4.4.0-2/quodlibet/qltk/filesel.py/?hl=176#L176
[08:12:03] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Remote host closed the connection)
[08:13:00] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:71d9:b2ed:5e8:e81d) (Ping timeout: 256 seconds)
[08:13:14] <twb> Oh maybe it's not a GTK function at all in xdg-user-dirs-gtk.  Maybe it's by hand there also...
[08:13:33] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (Remote host closed the connection)
[08:13:54] <twb> ...it is.  No wonder.
[08:14:14] *** Quits: EgonX (~EgonX@c-73-115-70-244.hsd1.tx.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[08:15:00] <twb> Someone else parsing it manually: https://sources.debian.org/src/gedit/40.1-3/plugins/quickopen/quickopen/__init__.py/?hl=129#L128
[08:16:02] *** Quits: yac (~user@user/yac) (Quit: .)
[08:18:34] *** Joins: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[08:20:58] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[08:22:39] *** Joins: RasnCain (~rasncain@ip174-73-119-77.br.br.cox.net)
[08:22:43] *** Quits: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[08:23:40] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[08:26:01] *** Quits: dsk (~dsk@user/dsk) (Ping timeout: 252 seconds)
[08:26:18] *** Joins: dsk (~dsk@user/dsk)
[08:26:34] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[08:26:53] *** Quits: ubert (~Thunderbi@p200300ecdf0ba2bee6b318fffe838f33.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[08:27:07] *** Quits: RasnCain (~rasncain@ip174-73-119-77.br.br.cox.net) (Ping timeout: 252 seconds)
[08:27:09] *** Quits: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-165.dsl.bell.ca) (Ping timeout: 256 seconds)
[08:28:36] *** Quits: hemstock (~hemstock@194.59.250.234) ()
[08:28:49] <twb> OK after a bit more poking it looks like I want gi.repository.GLib.BookmarkFile
[08:29:19] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:29:28] <twb> How to actually initialize this is nonobvious...
[08:30:52] *** Joins: ubert (~Thunderbi@p200300ecdf0ba2bee6b318fffe838f33.dip0.t-ipconnect.de)
[08:31:02] *** Joins: djhankb (~djhankb@208.113.164.68)
[08:31:17] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (Remote host closed the connection)
[08:33:06] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[08:33:32] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[08:33:33] *** z0ite is now known as justache
[08:34:52] *** Joins: iflema (~ian@user/iflema)
[08:36:27] *** Joins: truth (~truth@user/truth)
[08:36:55] <twb> OK it looks like GLib.BookmarkFile is actually for the XBEL format that Qt5 still uses, but GTK stopped using a decade ago.  https://sources.debian.org/src/gobject-introspection/1.70.0-2/gir/glib-2.0.c/?hl=12033#L5255
[08:37:24] *** Quits: taru9 (~realTaru9@user/taru9) (Quit: %xD%)
[08:38:32] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 256 seconds)
[08:40:41] <aphysically> SnoopJ: eeeeeeeeeeeeeeee
[08:41:00] <aphysically> I got this https://cdn.discordapp.com/attachments/386246790565068811/915469720436760576/Screenshot_from_2021-11-30_21-09-30.png
[08:41:06] <aphysically> I kept getting 504 gateway errors submitting my answer
[08:41:08] <twb> I'm 80% sure this is the API I want: https://sources.debian.org/src/gtk+3.0/3.24.30-4/gtk/gtkbookmarksmanager.h/
[08:41:16] <twb> I just can't see how to get to it from python gi
[08:41:24] <aphysically> took like 8 tries took like 30 seconds
[08:41:26] <aphysically> Q_Q
[08:42:51] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[08:46:05] *** Joins: seoul_man (~meh@user/seoul-man/x-5066766)
[08:47:39] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[08:53:14] *** Joins: taru9 (~realTaru9@user/taru9)
[09:00:07] *** Quits: comlord (~Thunderbi@121.227.116.10) (Ping timeout: 252 seconds)
[09:00:40] *** Joins: cyphase (~cyphase@user/cyphase)
[09:04:07] *** Quits: NineBAR (~NineBAR@c-107-5-176-200.hsd1.mi.comcast.net) (Read error: Connection reset by peer)
[09:04:42] *** Joins: RasnCain_ (~rasncain@ip174-73-119-77.br.br.cox.net)
[09:07:10] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[09:07:23] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[09:07:31] *** Quits: Bakunin (~Lindis@user/lindis) (Remote host closed the connection)
[09:09:10] *** Joins: fikran (~fikran@user/fikran)
[09:10:01] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:10:35] *** Joins: Themis3000 (~Thunderbi@user/themis3000)
[09:11:26] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[09:12:22] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[09:12:35] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 252 seconds)
[09:12:55] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[09:14:06] *** Quits: akspecs (00cc8321af@user/akspecs) (Remote host closed the connection)
[09:14:12] *** Joins: akspecs (00cc8321af@user/akspecs)
[09:14:47] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 252 seconds)
[09:15:09] *** Quits: RasnCain_ (~rasncain@ip174-73-119-77.br.br.cox.net) (Ping timeout: 252 seconds)
[09:15:48] *** Joins: Dotz0cat (~Dotz0cat@h118.199.117.75.dynamic.ip.windstream.net)
[09:16:37] *** Joins: iflema (~ian@user/iflema)
[09:19:22] *** Joins: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[09:20:58] <twb> This is what I ended up with: http://ix.io/3GDE
[09:21:23] <twb> I hate it, but AFAICT gtk developers have just screwed up, and everyone has to do the same workaround
[09:22:37] <twb> ...didn't work :/
[09:23:35] *** Quits: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[09:23:36] *** Joins: jazzy2 (~jaziz@user/jaziz)
[09:25:17] <twb> OK that's my fault.
[09:26:09] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[09:29:09] *** Joins: fdan (~fdan@103.215.168.1)
[09:29:14] <twb> Works now.  Yay.  I just had to use /usr/lib/systemd/user not /lib/systemd/user.
[09:29:56] <fdan> hi there, i get ModuleNotFoundError: No module named 'requests'
[09:29:59] <fdan> i am in vs code
[09:30:06] *** Joins: stranac (~stranac@195.29.239.126)
[09:30:31] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:32:02] <aniketgm> fdan: do pip install requests
[09:32:27] <aniketgm> pip3 if pip for some reason is still on version 2
[09:34:30] *** Quits: aphysically (~aphysical@user/aphysically) (Ping timeout: 268 seconds)
[09:35:15] <fdan> i have done that.
[09:35:20] *** Joins: aphysically (~aphysical@user/aphysically)
[09:35:41] <fdan> still facing the same issue
[09:36:57] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[09:41:54] *** Quits: jackblasted (~quassel@45.131.194.98) (Ping timeout: 268 seconds)
[09:42:07] *** Quits: taru9 (~realTaru9@user/taru9) (Quit: %xD%)
[09:42:17] *** Joins: manti7 (~manti7@176.10.104.94)
[09:42:24] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[09:42:45] <fdan> i tried changing the python interpretters as well
[09:43:11] *** Joins: taru9 (~realTaru9@user/taru9)
[09:46:32] *** Joins: krishnac (~krishnac@c-67-188-37-26.hsd1.ca.comcast.net)
[09:47:40] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[09:47:50] *** Quits: krishnac (~krishnac@c-67-188-37-26.hsd1.ca.comcast.net) (Remote host closed the connection)
[09:47:53] *** Joins: RasnCain_ (~rasncain@ip174-73-119-77.br.br.cox.net)
[09:47:58] <twb> fdan: "requests" is a third-party HTTP client library.  Whatever you're using needs it, so you need to install it.
[09:48:09] <fdan> yep i did
[09:48:10] <fdan> python3 -m pip install {new_module}
[09:48:13] <fdan> this one worked
[09:48:14] *** Joins: krishnac (~krishnac@c-67-188-37-26.hsd1.ca.comcast.net)
[09:49:04] <jinsun> fdan: you figured out https://snarky.ca/why-you-should-use-python-m-pip/
[09:49:26] *** Joins: arinov (~arinov@213.194.126.155)
[09:51:49] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[09:52:13] *** Joins: sgn (~sgn@user/sgn)
[09:52:33] *** Quits: dsk (~dsk@user/dsk) (Ping timeout: 252 seconds)
[09:54:55] *** Joins: upsala (~zcb@185.213.155.252)
[09:55:36] <aniketgm> jinsun: that sucks.
[09:55:50] *** Joins: shawwwn (uid6132@id-6132.helmsley.irccloud.com)
[09:56:16] <aniketgm> I usually upgrade evrything with a new version. (python -m pip upgrade ...)
[09:58:47] *** Quits: RasnCain_ (~rasncain@ip174-73-119-77.br.br.cox.net) (Ping timeout: 252 seconds)
[09:58:50] <jinsun> which part sucks? using venv or having to type python -m?
[09:59:25] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[10:01:47] *** Quits: krishnac (~krishnac@c-67-188-37-26.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[10:01:47] <aniketgm> the part where pip is confused with the interpreter. not the part about typing or anything.
[10:02:20] <jinsun> oh yeah
[10:02:48] *** Joins: ihristov (~ihristov@217.145.94.71)
[10:03:37] <jinsun> sucks that the more obvious and convenient ways to do it are bad
[10:03:44] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 252 seconds)
[10:04:39] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[10:05:23] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 252 seconds)
[10:05:39] *** Joins: arinov (~arinov@213.194.126.155)
[10:06:21] *** Joins: Hummer12007 (061e0434dc@2604:bf00:561:2000::16)
[10:07:42] *** Quits: jazzy2 (~jaziz@user/jaziz) (Read error: Connection reset by peer)
[10:08:06] *** Joins: jazzy2 (~jaziz@user/jaziz)
[10:08:29] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Remote host closed the connection)
[10:08:52] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[10:09:35] <jinsun> I personally still do the more convenient things though, I just have a big kitchend sink venv activated all the time, and I simply pip install in that
[10:10:29] <jinsun> just added export PIP_REQUIRE_VIRTUALENV=true in my bashrc to not accidentally use pip outside of the venv
[10:12:05] *** Quits: martums (~martums@user/martums) (Read error: Connection reset by peer)
[10:12:08] *** Quits: thekingofbandit (thekingofb@user/thekingofbandit) (Remote host closed the connection)
[10:12:19] *** Quits: xcm_ (~xcm@user/xcm) (Remote host closed the connection)
[10:12:35] <fdan> jinsun could you give me an example of what is mocking and how it helps in testing
[10:12:35] *** Joins: xcm_ (~xcm@user/xcm)
[10:12:51] <fdan> a coding snippet to test and play around would be very helpful
[10:12:57] *** Joins: martums (~martums@user/martums)
[10:13:04] *** Joins: thekingofbandit (thekingofb@user/thekingofbandit)
[10:13:20] <aniketgm> being in an venv is no biggy. that's a neat way though (setting that var in bashrc). When I started python. I wasn't even aware you have to create an venv. everything I installed was global.
[10:14:24] *** Pixi_ is now known as Pixi
[10:14:49] <jinsun> fdan: eh I don't use mocks much, so dunno if I can explain much better than the docs, https://docs.python.org/3/library/unittest.mock.html has good example I think
[10:16:34] <jinsun> fdan: also read https://pythonspeed.com/articles/verified-fakes/ for an alternative to mocks
[10:16:46] <aniketgm> I've never used it too. is this like the monkey patching ?
[10:17:27] *** Joins: pizdets (~pizdets@183.182.110.245)
[10:18:05] <jinsun> yeah it monkey patches something while your test is running, so you can track how it was used
[10:21:17] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Remote host closed the connection)
[10:23:19] *** Quits: Ilyu (~quassel@gateway/vpn/pia/ilyu) (Ping timeout: 256 seconds)
[10:23:32] *** Quits: bn_work (uid268505@id-268505.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[10:26:02] *** Joins: trace987 (~trace@ip5b429834.dynamic.kabel-deutschland.de)
[10:26:21] <jinsun> I found one the one time I used mock, it was useless, I just had the test to get 100% coverage :D
[10:27:17] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[10:27:18] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:27:40] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[10:28:04] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[10:29:33] *** Quits: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net) (Ping timeout: 256 seconds)
[10:29:36] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Ping timeout: 256 seconds)
[10:30:17] *** Joins: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net)
[10:30:58] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[10:31:56] *** Joins: Guest3140 (~vit@chello085216193138.chello.sk)
[10:32:46] <ksynwa_> Can someone tell me what is wrong with this type hinting? `def generateset(filenames: list[str]) -> set:`
[10:32:46] *** Quits: ubert (~Thunderbi@p200300ecdf0ba2bee6b318fffe838f33.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[10:32:52] *** Quits: kdc (~kdc@196.211.197.159) (Quit: Leaving)
[10:33:18] <ksynwa_> I get this error: TypeError: 'type' object is not subscriptable
[10:34:00] <jinsun> you can do that in 3.9+ only
[10:34:15] <jinsun> which python version are you using?
[10:34:56] *** Joins: ubert (~Thunderbi@p200300ecdf0ba2bee6b318fffe838f33.dip0.t-ipconnect.de)
[10:35:05] <jinsun> before 3.9 either use typing.List instead of list
[10:35:12] <ksynwa_> Ah ok my bad
[10:35:20] <ksynwa_> Thanks very much jinsun. This is python 3.8.
[10:35:30] <jinsun> or do from __future__ import annotations at the top of your file, so they are stringified
[10:36:08] <ksynwa_> That worked. Thanks a lot.
[10:38:23] *** Joins: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[10:40:00] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:40:58] *** Quits: daoudr (~daoudr@2a02:1205:c690:ca10:843a:6e21:9631:a11f) (Quit: Leaving)
[10:43:09] *** Quits: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[10:44:53] *** Joins: RasnCain (~rasncain@ip174-73-119-77.br.br.cox.net)
[10:45:01] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[10:45:25] *** Joins: txtsd (~txtsd@user/txtsd)
[10:46:52] *** Joins: mrwick (~mrwick@user/mrwick)
[10:47:47] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:ee0e:93a3:da05:71d3)
[10:49:23] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[10:54:23] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:55:03] *** Quits: RasnCain (~rasncain@ip174-73-119-77.br.br.cox.net) (Ping timeout: 256 seconds)
[10:55:37] *** Quits: Andrynet (~Andrynet@190.152.206.33) (Ping timeout: 252 seconds)
[10:56:14] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:57:02] *** Joins: seednode (~seednode@user/seednode)
[10:57:39] *** Joins: Andrynet (~Andrynet@190.152.206.33)
[10:59:01] *** Joins: gusto (~Augustus@109.255.100.54)
[10:59:14] *** Joins: luigibu (~luigi@80.30.201.209)
[11:00:52] *** Quits: luigibu (~luigi@80.30.201.209) (Client Quit)
[11:01:46] *** Joins: guenhael (~Thunderbi@2a01cb008c3d5800f99e00cb4d902568.ipv6.abo.wanadoo.fr)
[11:01:51] *** Quits: grayn (~Thunderbi@130.95.254.118) (Ping timeout: 256 seconds)
[11:02:22] *** Joins: grayn (Thunderbir@gateway/vpn/protonvpn/grayn)
[11:03:32] <Wulf> What function name does "python3 -m mod" try to execute?
[11:04:03] *** Quits: Andrynet (~Andrynet@190.152.206.33) (Ping timeout: 252 seconds)
[11:04:14] *** Joins: luigibu (~luigi@80.30.201.209)
[11:05:10] *** Joins: chele (~chele@user/chele)
[11:06:09] *** Joins: Andrynet (~Andrynet@190.152.206.33)
[11:07:59] <jinsun> it executes the entire mod.py not just one function
[11:08:27] <Wulf> jinsun: oh, that explains it. Thanks :)
[11:08:30] <jinsun> or mod/__main__.py if mod is a package
[11:08:31] *** Quits: ckdCreations (~ckdCreati@147.55.130.33) (Read error: Connection reset by peer)
[11:09:54] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 260 seconds)
[11:10:09] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[11:11:20] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[11:12:41] *** Joins: palasso (~palasso@user/palasso)
[11:12:57] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[11:14:00] *** Joins: ckdCreations (~ckdCreati@147.55.133.139)
[11:14:41] *** Quits: Andrynet (~Andrynet@190.152.206.33) (Ping timeout: 252 seconds)
[11:15:05] *** Quits: nepeat (~nepeat@79.110.170.59) (Read error: Connection reset by peer)
[11:15:17] *** Joins: sudomannn (~sudomann@2601:543:100:4fc8:8838:fd4e:364:585d)
[11:16:31] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[11:16:35] *** Joins: Andrynet (~Andrynet@190.152.206.33)
[11:16:39] *** Joins: NeoCore (~neocore@160.238.38.93)
[11:16:45] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[11:17:00] *** Quits: portalrat (~portalrat@user/portalrat) (Remote host closed the connection)
[11:17:08] *** Quits: sudomann (~sudomann@2601:543:100:4fc8:8838:fd4e:364:585d) (Ping timeout: 260 seconds)
[11:17:20] *** Joins: portalrat (~portalrat@user/portalrat)
[11:18:22] *** Joins: nepeat (~nepeat@79.110.170.59)
[11:18:31] *** Joins: fikran (~fikran@user/fikran)
[11:18:41] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[11:18:58] *** Joins: mickey8 (~user@user/mickey)
[11:19:14] *** Joins: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[11:20:48] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[11:21:11] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[11:21:17] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[11:21:20] *** Joins: jazzy3 (~jaziz@user/jaziz)
[11:21:50] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 252 seconds)
[11:22:50] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[11:23:27] *** Joins: tobybl (~tobybl@213.31.134.21)
[11:23:46] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi)
[11:24:31] *** Joins: tobybl_ (~tobybl@213.31.134.21)
[11:25:12] <zamba> i have a 4-byte word.. i want to shift off the first 4 bits, but i'm unable to do so
[11:25:49] <zamba> this is the bit-representation of the 4 bytes: 0b00100000000000000010001011111000
[11:26:10] <zamba> i want to get rid of that 1 in the 3rd position
[11:26:13] *** Quits: Andrynet (~Andrynet@190.152.206.33) (Ping timeout: 256 seconds)
[11:26:18] *** Quits: ArtfulDodger (~ArtfulDod@2a02-8440-6313-20f3-78ba-13a3-5b05-4fb6.rev.sfr.net) (Quit: Leaving)
[11:26:45] <zamba> so i attempted to shift left 4 positions, but then got:
[11:26:47] <zamba> 0b1000000000000000100010111110000000
[11:26:54] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:27:35] <zamba> so instead of shifting that 1 'off' the edge, then the int just increases
[11:27:58] *** Joins: dld (~dld@2601:197:600:1210:4c8f:59ca:20e7:8c51)
[11:28:01] *** Joins: Andrynet (~Andrynet@190.152.206.33)
[11:28:26] *** Quits: tobybl (~tobybl@213.31.134.21) (Ping timeout: 252 seconds)
[11:28:33] *** Joins: kosh (~kosh@user/kosh)
[11:28:33] <Wulf> zamba: Hello. First get rid of bytes and words. Use integers.
[11:28:47] <zamba> Wulf: ok, a 32-bit int?
[11:29:30] <Wulf> zamba: no, just int. Python doesn't have fixed-width ints.
[11:30:12] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:30:17] <Wulf> zamba: what is the expected result?
[11:31:33] <zamba> well, i just want to get rid of the first 0010
[11:31:43] <zamba> so shift left to get rid of it and then shift right again
[11:32:09] *** Joins: grooverman_ (~grooverma@177.95.12.14)
[11:32:31] <Wulf> zamba: no. What you want is to apply a bit mask. e.g. val &= ~(0b1111 << 28)
[11:32:51] <zamba> you mean 0b0000?
[11:33:04] <zamba> because i'm not interested in those bits
[11:33:49] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[11:33:59] <zamba> oh, yeah, your code worked.. but why 0b1111 instead of 0b0000?
[11:34:04] <zamba> what does that ~ mean?
[11:34:13] <Wulf> zamba: ~ is bitwise not.
[11:34:37] <zamba> but i could just do 0b0000 << 28, no?
[11:34:46] *** Quits: grooverman (~grooverma@177.102.119.40) (Ping timeout: 256 seconds)
[11:34:53] <Wulf> zamba: zero leftshifted a lot is still zero.
[11:34:58] <Wulf> so... no.
[11:35:01] <zamba> ah, of course
[11:35:08] <zamba> makes sense
[11:35:59] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[11:36:00] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[11:37:34] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Ping timeout: 256 seconds)
[11:37:58] *** Joins: Ilyu (~quassel@gateway/vpn/pia/ilyu)
[11:39:45] *** Joins: RiFo (~RiFo@user/rifo)
[11:40:21] *** Quits: mags (~mags@097-090-237-145.res.spectrum.com) (Ping timeout: 252 seconds)
[11:40:25] *** Joins: LucaTM (~LucaTM@user/lucatm)
[11:40:31] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[11:40:43] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 252 seconds)
[11:42:17] *** Joins: mags (~mags@097-090-237-145.res.spectrum.com)
[11:44:22] *** Joins: ub (~Thunderbi@p200300ecdf0ba2be089e3f14725e8432.dip0.t-ipconnect.de)
[11:44:58] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[11:46:40] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 256 seconds)
[11:48:17] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[11:49:24] *** Joins: RasnCain_ (~rasncain@ip174-73-119-77.br.br.cox.net)
[11:49:53] *** Joins: rendar (~rendar@user/rendar)
[11:50:18] *** Quits: RasnCain_ (~rasncain@ip174-73-119-77.br.br.cox.net) (Remote host closed the connection)
[11:51:07] *** Joins: RasnCain (~rasncain@gw1.cox.com)
[11:51:10] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[11:53:00] *** Joins: jay-m126 (~jay-m@129.0.76.210)
[11:53:05] *** Joins: jay-m126_ (~jay-m@129.0.76.210)
[11:54:45] *** Joins: jpic (~jpic@82.142.20.182)
[11:56:21] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:56:40] *** Joins: Knaxius (~Knaxius@herzlichweise.de)
[11:58:38] *** dcaro_away is now known as dcaro
[11:58:42] *** Joins: vladoski (~vladoski@2001:8a0:7ae1:4400:bded:84d2:c79e:8618)
[12:01:10] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:01:15] *** Quits: jay-m126 (~jay-m@129.0.76.210) (Ping timeout: 252 seconds)
[12:01:37] *** Quits: jay-m126_ (~jay-m@129.0.76.210) (Ping timeout: 252 seconds)
[12:02:09] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Ping timeout: 276 seconds)
[12:03:22] *** Joins: jay-m126 (~jay-m@154.72.167.177)
[12:03:30] *** Joins: jay-m126_ (~jay-m@154.72.167.177)
[12:03:33] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[12:03:38] *** Quits: guenhael (~Thunderbi@2a01cb008c3d5800f99e00cb4d902568.ipv6.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[12:04:13] *** Quits: hendry (~hendry@210.23.22.8) (Ping timeout: 250 seconds)
[12:05:39] *** Joins: Redsuit_ (~Redsuit@068-186-121-067.biz.spectrum.com)
[12:06:27] *** Joins: jmd (~user@de.cellform.com)
[12:06:33] *** Joins: hendry (~hendry@210.23.22.2)
[12:06:43] *** Quits: Themis3000 (~Thunderbi@user/themis3000) (Quit: Themis3000)
[12:07:38] <fdan> hi there
[12:07:52] <fdan> can a python function just use a return without specifying any variable?
[12:07:53] <fdan> https://pasteboard.co/ptTFds1sBQAU.png
[12:08:02] <fdan> also what does -> None really mean?
[12:08:15] <Repiphany> `return` returns None
[12:08:26] <Repiphany> A function without any return statement also returns None
[12:08:36] *** aoei is now known as Stella
[12:08:43] <fdan> sure
[12:08:43] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[12:08:50] *** Stella is now known as stella
[12:09:01] <fdan> '->' it sets the return type to None?
[12:09:18] <Repiphany> No, that's just a type hint/annotation
[12:09:34] <The-Compiler> fdan: it's a type annotation saying that the function returns None - Python itself will ignore it at runtime, but tooling like your IDE or additional checkers (e.g. mypy) will check it for correctness.
[12:09:52] <fdan> cool
[12:10:06] <fdan> so type hint is only for the consumers of the python script?
[12:10:14] <fdan> not for the python run time?
[12:10:27] <The-Compiler> well, for developers of it mostly
[12:10:28] *** Quits: preston (~preston@097-080-132-008.res.spectrum.com) (Ping timeout: 256 seconds)
[12:10:49] <Repiphany> If you don't expect your function to return anything, it's conventional to not have any return statements, unless you're ending execution of the function early
[12:10:50] <Swayze> None is a return, its just of type None
[12:10:58] <Swayze> all functions return  something :)
[12:11:01] *** Parts: jmd (~user@de.cellform.com) ()
[12:11:42] <The-Compiler> Swayze: what Repiphany was saying (I think) is that you typically wouldn't do "return" or "return None" at the end of a function (if it doesn't return anything elsewhere)
[12:11:52] *** Joins: VaniaPy (~VaniaPy@46.12.146.107.dsl.dyn.forthnet.gr)
[12:11:55] *** Parts: VaniaPy (~VaniaPy@46.12.146.107.dsl.dyn.forthnet.gr) ()
[12:12:05] <fdan> sure
[12:12:10] *** Quits: Ilyu (~quassel@gateway/vpn/pia/ilyu) (Ping timeout: 256 seconds)
[12:15:22] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[12:16:05] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 256 seconds)
[12:16:28] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[12:17:13] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[12:18:55] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[12:18:56] *** Joins: kai (~kai@x50d24799.cust.hiper.dk)
[12:20:09] *** Joins: NeilRG_ (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[12:20:36] <NeilRG_> Would ABCMeta be required in modern Python, or can everything it does be achieved in an ordinary class?
[12:20:51] <NeilRG_> i.e., could ABC be written without a metaclass?
[12:21:56] *** Joins: Ilyu (~quassel@78.202.228.230)
[12:22:19] *** Quits: Ilyu (~quassel@78.202.228.230) (Client Quit)
[12:22:20] *** Joins: VaniaPy (~VaniaPy@46.12.146.107.dsl.dyn.forthnet.gr)
[12:22:25] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[12:23:42] <NeilRG_> I guess __subclasscheck__ and __instancecheck__ have to be on the metaclass
[12:25:17] <Shapeshifter> I have a question about custom iterators. If my class' __iter__ returns self, and __next__ returns whatever next element, does this naturally mean that an instance of this class is stateful and can only be used in one place? Like if I did a = iter(my_instance); b = iter(my_instance); next(a); next(b); then b already skipped an element. How would I implement this such that my iterator always starts
[12:25:24] <Shapeshifter> "fresh" when iter() is called on it?
[12:25:46] <KirkMcDonald> Shapeshifter: If __iter__ returns self, then that means your class is, itself, an iterator.
[12:26:17] <KirkMcDonald> Shapeshifter: Files are an example of types like this.
[12:26:58] *** Joins: swensson (~swensson@host-90-235-21-244.mobileonline.telia.com)
[12:27:01] <Shapeshifter> KirkMcDonald: I see. So I could for example have an inner class that implements the iterator and return a new instance of that?
[12:27:37] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:27:37] <KirkMcDonald> Shapeshifter: So you'd change this by making __iter__ return something else. It is quite common to implement __iter__ as a generator, which yields each element.
[12:28:29] <KirkMcDonald> Shapeshifter: You could also implement an explicit iterator type as a separate class. There is little benefit in making it an inner class, however, as opposed to just another class in the same module.
[12:28:33] *** Joins: delvian (~delvian@41.13.224.164)
[12:28:54] <Shapeshifter> KirkMcDonald: Alright, thanks.
[12:30:15] *** Joins: onichomp666 (~onichomp@177.231.43.15)
[12:30:16] *** Joins: reset (~reset@user/reset)
[12:30:56] *** Joins: drogas (~drogas@jump2.jet.uk)
[12:31:41] *** Quits: sudomannn (~sudomann@2601:543:100:4fc8:8838:fd4e:364:585d) (Ping timeout: 252 seconds)
[12:31:41] *** Quits: onichomp (~onichomp@2806:264:4404:8266:d177:e7f1:3914:58e4) (Ping timeout: 252 seconds)
[12:31:41] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[12:32:16] *** Quits: Redsuit_ (~Redsuit@068-186-121-067.biz.spectrum.com) (Quit: Leaving)
[12:32:33] *** Joins: the_lanetly_052 (~the_lanet@185.30.89.222)
[12:33:16] *** Quits: the_lanetly_052 (~the_lanet@185.30.89.222) (Max SendQ exceeded)
[12:33:19] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[12:33:39] *** Quits: grayn (Thunderbir@gateway/vpn/protonvpn/grayn) (Remote host closed the connection)
[12:33:46] *** Joins: the_lanetly_052 (~the_lanet@185.30.89.222)
[12:33:57] *** Joins: p-i-_ (~Ohmu@2001:44c8:460a:b000:b968:e85a:15c5:91ca)
[12:34:31] *** Quits: the_lanetly_052 (~the_lanet@185.30.89.222) (Max SendQ exceeded)
[12:35:01] *** Joins: the_lanetly_052 (~the_lanet@185.30.89.222)
[12:35:18] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 260 seconds)
[12:35:42] *** Quits: the_lanetly_052 (~the_lanet@185.30.89.222) (Max SendQ exceeded)
[12:36:15] *** Joins: the_lanetly_052 (~the_lanet@185.30.89.222)
[12:36:16] *** Parts: lpapp (~lpapp@ec2-15-161-137-233.eu-south-1.compute.amazonaws.com) ()
[12:36:38] *** Quits: p-i- (~Ohmu@223.206.69.149) (Ping timeout: 252 seconds)
[12:37:09] *** Quits: the_lanetly_052 (~the_lanet@185.30.89.222) (Max SendQ exceeded)
[12:37:10] *** Joins: shad (~shad@user/shad)
[12:37:44] *** Joins: the_lanetly_052 (~the_lanet@185.30.89.222)
[12:38:31] *** Quits: the_lanetly_052 (~the_lanet@185.30.89.222) (Max SendQ exceeded)
[12:38:58] *** Joins: sudomann (~sudomann@2601:543:100:4fc8:8838:fd4e:364:585d)
[12:39:00] *** Joins: the_lanetly_052 (~the_lanet@185.30.89.222)
[12:39:01] *** Joins: pwnd_sfw4 (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[12:39:03] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Read error: Connection timed out)
[12:39:47] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[12:39:48] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Read error: Connection reset by peer)
[12:39:48] *** pwnd_sfw4 is now known as pwnd_sfw
[12:39:55] *** Quits: the_lanetly_052 (~the_lanet@185.30.89.222) (Max SendQ exceeded)
[12:40:03] *** Joins: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[12:40:51] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 252 seconds)
[12:41:23] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[12:41:59] *** Quits: p-i-_ (~Ohmu@2001:44c8:460a:b000:b968:e85a:15c5:91ca) (Quit: Leaving...)
[12:42:06] *** Joins: comlord (~Thunderbi@121.227.116.10)
[12:42:12] *** Joins: drogas (~drogas@jump2.jet.uk)
[12:42:49] *** Quits: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net) (Quit: Going offline, see ya! (www.adiirc.com))
[12:43:23] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[12:43:24] *** Joins: PJBoy (~PJBoy@user/pjboy)
[12:43:38] *** Joins: sgn (~sgn@user/sgn)
[12:43:51] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:1401:22a5:674e:d69b)
[12:44:47] *** Quits: akspecs (00cc8321af@user/akspecs) (Remote host closed the connection)
[12:44:54] *** Joins: akspecs (00cc8321af@user/akspecs)
[12:44:59] *** Quits: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[12:49:16] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[12:51:48] *** Quits: swensson (~swensson@host-90-235-21-244.mobileonline.telia.com) (Ping timeout: 256 seconds)
[12:52:35] *** Quits: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Ping timeout: 252 seconds)
[12:53:10] *** Seto_Kaiba is now known as Hunterkll
[12:56:48] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:7d90:e8ce:e7ae:433b)
[12:57:27] *** aniketgm is now known as roronoa
[12:57:31] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Read error: Connection timed out)
[12:58:04] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[12:59:50] *** Quits: roronoa (~Aniket@49.36.107.115) (Quit: leaving)
[13:02:10] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi)
[13:05:03] *** Quits: Andrynet (~Andrynet@190.152.206.33) (Ping timeout: 252 seconds)
[13:05:36] *** Joins: The_Jag (~The_Jag@host-79-36-38-58.retail.telecomitalia.it)
[13:06:32] *** Joins: the_lanetly_052 (~the_lanet@194.135.152.219)
[13:07:01] *** Joins: Andrynet (~Andrynet@181.113.97.175)
[13:08:02] *** Joins: aniketgm (~Aniket@49.36.107.115)
[13:09:17] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[13:11:41] <VaniaPy> Hello friends, how can i return a single object from a json? For instance, here i need to return a single  object from the list https://bpa.st/ECBQ,let's say only the April object
[13:13:34] *** Quits: Knaxius (~Knaxius@herzlichweise.de) (Quit: bye)
[13:14:31] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[13:14:46] <aniketgm> VaniaPy: json objects are basically dictionaries. you can simply write: your_object["April"]
[13:15:04] <aniketgm> and get those values.
[13:15:34] <VaniaPy> aniketgm yeah i know,but i need to get dynamically an object,not by hard coding the month
[13:15:56] *** Joins: raxor2k (~raxor2k@fwa5cd2-48.bb.online.no)
[13:17:13] *** Joins: vulpes_vulpes (~vulpes_vu@62-64-204-115.dynamic.dial.as9105.com)
[13:18:54] <aniketgm> what do you mean dynamically ? At some point you will have to pass in the repective values. Just compare the input and get it from the dictionary.
[13:19:55] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Read error: Connection timed out)
[13:20:22] <aniketgm> use strftime(format) to get the respective month that matches Apr, Jan, Feb etc. and have it fetch from the json object.
[13:20:31] *** Joins: guenhael (~Thunderbi@2a01cb008c3d5800f99e00cb4d902568.ipv6.abo.wanadoo.fr)
[13:20:50] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[13:23:07] *** Quits: nos0u1 (nosoul@gateway/vpn/protonvpn/nosoul) (Remote host closed the connection)
[13:23:10] <VaniaPy> aniketgm i mean i need to do something like json['month'] no matter what that month is and each time i call my endpoint to reach the next month
[13:25:13] *** Quits: comlord (~Thunderbi@121.227.116.10) (Ping timeout: 256 seconds)
[13:25:50] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[13:26:57] *** Joins: BlueSky (~BlueSky@user/bluesky)
[13:27:41] *** Joins: xkuru (~xkuru@user/xkuru)
[13:27:44] <aniketgm> VaniaPy: yes, assuming that I suggested this api --> strftime(format); have a look.
[13:27:52] *** Joins: fikran (~fikran@user/fikran)
[13:27:54] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[13:28:40] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[13:28:47] <aniketgm> https://www.geeksforgeeks.org/python-strftime-function/
[13:29:05] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[13:29:50] <jinsun> VaniaPy: if you mean you want the values without referring to the keys, you can loop over your_dict.values()
[13:29:57] *** Quits: Henryx (~ebianchi@2a01:4f8:1c0c:76ad::1) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[13:30:51] *** Joins: comlord (~Thunderbi@121.227.116.10)
[13:31:06] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:1401:22a5:674e:d69b) (Quit: smeeagle)
[13:32:37] <VaniaPy> jinsun i need to return something like this https://bpa.st/OUOA the object with its key and its values
[13:32:56] *** Joins: Ergo^ (~ergo@91.238.59.144)
[13:33:46] *** Quits: RasnCain (~rasncain@gw1.cox.com) (Ping timeout: 256 seconds)
[13:34:11] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[13:34:16] <jinsun> that is invalid syntax, unless you meant to put that inside {}
[13:34:32] <jinsun> so you want a dict with only the "First" item?
[13:34:36] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[13:34:47] <jinsun> or maybe a key, value tuple, that is easier
[13:34:49] *** Joins: BigShip8 (~BigShip@user/bigship)
[13:35:24] <jinsun> key_value_pair = next(iter(your_dict.items())
[13:35:29] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[13:35:32] <VaniaPy> jinsun yeah i can return it in another {}
[13:35:46] *** Quits: BigShip (~BigShip@user/bigship) (Ping timeout: 245 seconds)
[13:35:46] *** BigShip8 is now known as BigShip
[13:36:10] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[13:36:14] <jinsun> you can contruct a dict from that tuple if you want
[13:37:03] *** Lord_of_Life_ is now known as Lord_of_Life
[13:37:34] *** Joins: onichomp (~onichomp@177.231.43.15)
[13:37:57] *** Joins: weedmic (~weedmic@188.120.139.53)
[13:38:31] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Read error: Connection timed out)
[13:38:48] *** Joins: Henryx (~ebianchi@2a01:4f8:1c0c:76ad::1)
[13:38:49] *** Quits: onichomp666 (~onichomp@177.231.43.15) (Ping timeout: 256 seconds)
[13:39:06] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[13:39:15] <VaniaPy> yeah right,that is the format that i need,the only thing is that it's not iterating over the objects
[13:39:26] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[13:39:30] <VaniaPy> so,i'm getting the same object each time i call the api
[13:39:31] *** Joins: naranja (~orange@user/orangeboxcutter)
[13:39:45] *** Joins: bindu (~bindu@user/bindu)
[13:40:18] *** Quits: orangeboxcutter (~orange@user/orangeboxcutter) (Ping timeout: 276 seconds)
[13:40:27] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[13:40:55] *** Quits: tobybl_ (~tobybl@213.31.134.21) (Remote host closed the connection)
[13:41:10] *** Quits: dre (~dre@2001:8003:c932:c301:1276:3400:25a9:855) (Ping timeout: 268 seconds)
[13:41:59] *** Joins: Vonter (~Vonter@user/vonter)
[13:42:55] *** Joins: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net)
[13:44:42] *** Joins: theoceaniscool (~theoceani@119.12.232.133)
[13:46:11] *** Quits: comlord (~Thunderbi@121.227.116.10) (Remote host closed the connection)
[13:46:43] *** Joins: nosoul (nosoul@gateway/vpn/protonvpn/nosoul)
[13:46:49] *** Joins: nomic (~nomic@185.198.243.158)
[13:49:35] *** Quits: asix (~Anders@user/asix) (Ping timeout: 256 seconds)
[13:52:48] *** Joins: Klinda (~superleag@user/klinda)
[13:53:19] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[13:55:17] *** Quits: guenhael (~Thunderbi@2a01cb008c3d5800f99e00cb4d902568.ipv6.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[13:55:48] *** Quits: nomic (~nomic@185.198.243.158) (Quit: Leaving)
[13:56:56] *** Quits: nicode (~nic@2607:f2c0:932e:7500:1315:d5b6:bb04:36f3) (Ping timeout: 252 seconds)
[13:58:00] *** Joins: vsantana (~Thunderbi@fttx-177136148231.usr.predialnet.com.br)
[13:59:36] *** Joins: dre (~dre@2001:8003:c932:c301:3452:4883:fbcf:635)
[13:59:47] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[13:59:48] *** Joins: guenhael (~Thunderbi@193.52.208.97)
[14:01:47] *** Joins: RasnCain_ (~rasncain@ip174-73-119-77.br.br.cox.net)
[14:02:41] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[14:03:14] *** Joins: asix (~Anders@user/asix)
[14:03:34] *** Joins: brabrax (~brabrax@user/brabrax)
[14:05:42] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1)
[14:05:48] *** Joins: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[14:06:08] <lesshaste> what's the best module for getting tweets/accessing the twitter API?
[14:09:11] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[14:09:13] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 252 seconds)
[14:10:04] *** Joins: brabrax (~brabrax@user/brabrax)
[14:10:46] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[14:11:25] *** Joins: nos0u1 (nosoul@gateway/vpn/protonvpn/nosoul)
[14:11:47] *** Quits: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52) (Ping timeout: 252 seconds)
[14:13:59] *** Quits: nosoul (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 252 seconds)
[14:14:53] <fdan> lets say if i use global variable in a program and i am writing an unit test for this
[14:15:07] <fdan> how can i refer the global variable in the unit test case
[14:15:39] *** Quits: RasnCain_ (~rasncain@ip174-73-119-77.br.br.cox.net) (Ping timeout: 256 seconds)
[14:17:27] *** Joins: tobybl (~tobybl@213.31.134.21)
[14:19:36] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:22:07] *** Quits: tobybl (~tobybl@213.31.134.21) (Remote host closed the connection)
[14:24:28] *** Joins: backthen (~Thunderbi@c-76-103-177-91.hsd1.ca.comcast.net)
[14:24:52] <backthen> can a python class extend from a function?
[14:27:07] <ldericher> backthen, no, but you can just call the function from your class
[14:28:21] *** Joins: jmd (~user@de.cellform.com)
[14:30:27] *** Parts: aniketgm (~Aniket@49.36.107.115) ()
[14:31:01] *** Joins: vimal (~vimal@ip-213-127-89-120.ip.prioritytelecom.net)
[14:31:53] *** Quits: guenhael (~Thunderbi@193.52.208.97) (Quit: guenhael)
[14:32:30] <jinsun> and you can turn a function into a class too
[14:32:42] *** Quits: Andrynet (~Andrynet@181.113.97.175) (Ping timeout: 256 seconds)
[14:32:46] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[14:34:16] *** Joins: stonkey (~stonkey@user/stonkey)
[14:34:42] *** Joins: Andrynet (~Andrynet@181.113.97.175)
[14:34:46] *** Quits: weedmic (~weedmic@188.120.139.53) (Quit: Konversation terminated!)
[14:37:40] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[14:38:28] *** Quits: delvian (~delvian@41.13.224.164) (Quit: Leaving)
[14:38:57] *** Joins: Madda (~Madda@216.51.198.146.dyn.plus.net)
[14:39:19] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:40:28] <rindolf> fdan: like you would normally
[14:40:29] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[14:40:37] *** Joins: falkor (~falkor@90.242.155.158)
[14:41:21] <rindolf> 'assert global_var == 24'
[14:41:28] *** Quits: mihaiadrian (~Thunderbi@82.76.223.244) (Quit: mihaiadrian)
[14:42:08] <nedbat> backthen: what would that do, to extend from a function?
[14:44:35] <backthen> nedbat: well, this is a problem with the aiohttp module. Seems others are having it too
[14:44:39] <backthen> https://groups.google.com/g/linux.debian.bugs.dist/c/i6bH1Ou7azQ?pli=1
[14:45:18] *** Joins: RasnCain_ (~rasncain@ip174-73-119-77.br.br.cox.net)
[14:45:49] <supakeen> you could use non-system packaged dependencies by installing them yourself in a virtual environment for your package, that's the general recommended way
[14:45:54] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[14:45:56] <supakeen> and would prevent the above issue as well
[14:46:26] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:ee0e:93a3:da05:71d3) (Ping timeout: 252 seconds)
[14:46:59] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:fef2:22f5:df06:797c)
[14:47:20] <supakeen> alternatively it seems this thing hasn't made it further than unstable and unstable is, well, unstable
[14:47:59] <backthen> supakeen: hmm, I don't understand why does it happen. Why does it extend from a function
[14:49:33] *** Joins: uncleho (~uncleho@2a00:801:72a:a807:886b:e1e1:df1d:78d3)
[14:49:53] <uncleho> https://ibb.co/MDygTNH Here I want the function "interpolation" to take two vectors x, y and a list L. The list L consists of functions f0, f1,... defined elsewhere. I want to solve the general case with some iteration. Right now I have a bunch of ugly if elif.. that specify each case. How can I do that? IF this is the wrong channel to ask I
[14:49:54] <uncleho> apologize.
[14:50:27] <grawity> uh, could you please pastebin the code as text, instead of a screenshot
[14:51:12] *** Joins: nomic (~nomic@185.198.243.158)
[14:51:33] <NeilRG_> what do you guys think of  PEP 671?
[14:51:37] <grawity> but it looks like a `for i in range(len(L)): y_ret += c[i]*L[i](x)`, tbh
[14:51:44] <uncleho> ok https://pastebin.com/tNDMmb1V
[14:52:02] <KirkMcDonald> Or use zip()
[14:52:04] <uncleho> I tried that, But it didn't work :(
[14:52:10] <supakeen> backthen: I have no idea on the why and when, but they've changed all of that and CeilTimeout itself is now a function called ceil_timeout.
[14:52:22] <nedbat> NeilRG_: i think the same thing as with most peps: i wish people would use the full titles when discussing them, because I can't remember which number is which :)
[14:52:31] <NeilRG_> nedbat: Lol
[14:52:44] <NeilRG_> https://www.python.org/dev/peps/pep-0671/
[14:52:52] <NeilRG_> (I hate it)
[14:52:57] <supakeen> backthen: It is likely that async_timeout.timeout was previously a class, and is now a function: https://github.com/aio-libs/aiohttp/commit/48bf8c356c7c3bac5d520484ede5c35bd1795afb
[14:53:40] <supakeen> which yes, if you look at the async_timeout module they refactored what was previously a class into a function a few years ago
[14:53:46] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[14:54:03] <supakeen> then someone bumped async_timeout in debian unstable and it became incompatible with any other package that requires async_timeout < 4
[14:54:12] <supakeen> (e.g: aiohttp in the version that is in debian)
[14:54:32] *** Joins: Knaxius (~Knaxius@herzlichweise.de)
[14:54:48] *** Joins: grayn (~Thunderbi@2001:8003:8c8b:e00:df85:8ceb:4143:d486)
[14:55:21] <backthen> supakeen: oh my. I'm on Ubuntu. It's also Debian I think. Guess the solution is to downgrade async_timeout to < 4
[14:55:35] *** Joins: logithack (~logithack@p200300cfbf3661006817cd8da552dcce.dip0.t-ipconnect.de)
[14:55:41] *** Quits: fdan (~fdan@103.215.168.1) (Quit: Client closed)
[14:55:47] <supakeen> backthen: or to not use globally installed python packages and instead install dependencies for your project in a virtual environment for that project
[14:55:47] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 252 seconds)
[14:55:57] *** Joins: grayn1 (~Thunderbi@124.188.209.195)
[14:56:00] <supakeen> these versions are both > 2 years old
[14:56:43] <backthen> you mean async_timeout 3 and 4 are both > 2 years old?
[14:56:44] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[14:57:14] <logithack> If you do `def outer_func():` and, within that function, define a nested function `def inner_func():`, and you call `outer_func` multiple times in a loop, does Python re-define `inner_func` upon each call of `outer_func`, or does it define it only once?
[14:57:35] <supakeen> backthen: i take back my words, async_timeout 4 was released a month ago, the changes are much older :)
[14:57:43] <supakeen> apparently they spent a long time without doing the actual release
[14:58:33] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[14:58:59] <backthen> supakeen: thanks for looking into it. In that thread, the last person says he fixed it by upgrading aiohttp too
[14:59:05] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[14:59:24] <supakeen> yep, and it's still going through the process of being accepted into debian which then needs to find its way to ubuntu i guess?
[14:59:29] *** Quits: grayn (~Thunderbi@2001:8003:8c8b:e00:df85:8ceb:4143:d486) (Ping timeout: 268 seconds)
[15:00:19] <backthen> haha how long does that typically take? I have no experience in these kinda things
[15:00:25] *** Quits: grayn1 (~Thunderbi@124.188.209.195) (Ping timeout: 256 seconds)
[15:00:25] *** Quits: RasnCain_ (~rasncain@ip174-73-119-77.br.br.cox.net) (Ping timeout: 256 seconds)
[15:00:36] <supakeen> me neither but if this affects ubuntu perhaps there is an ubuntu bug report as well
[15:00:50] <supakeen> (or you could file one, i guess)
[15:01:13] *** Joins: grayn (Thunderbir@gateway/vpn/protonvpn/grayn)
[15:07:34] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[15:10:38] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 252 seconds)
[15:11:02] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[15:11:11] *** Quits: Andrynet (~Andrynet@181.113.97.175) (Ping timeout: 252 seconds)
[15:13:14] *** Joins: Andrynet (~Andrynet@181.113.97.175)
[15:13:20] *** Quits: vimal (~vimal@ip-213-127-89-120.ip.prioritytelecom.net) (Remote host closed the connection)
[15:14:38] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[15:14:53] <jinsun> logithack: it defines in each call, and you can make the inner function change based on the parameters of the outer one
[15:15:13] <logithack> jinsun: thanks!
[15:15:46] *** Joins: guenhael (~Thunderbi@193.52.208.97)
[15:15:54] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:17:13] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:18:57] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[15:19:53] *** Joins: dez (uid92154@user/dez)
[15:21:05] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[15:21:24] *** Quits: uncleho (~uncleho@2a00:801:72a:a807:886b:e1e1:df1d:78d3) (Ping timeout: 256 seconds)
[15:21:37] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[15:22:44] *** Quits: Andrynet (~Andrynet@181.113.97.175) (Ping timeout: 252 seconds)
[15:24:34] *** Joins: nosklo (~nosklo@2804:14c:5b74:93c7::e6ed)
[15:24:40] *** Joins: Andrynet (~Andrynet@181.113.97.175)
[15:25:38] *** Quits: nosklo (~nosklo@2804:14c:5b74:93c7::e6ed) (Client Quit)
[15:26:58] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:27:00] *** Joins: RasnCain (~rasncain@ip174-73-119-77.br.br.cox.net)
[15:27:32] *** Quits: poiqwepoiqwe (uid525840@id-525840.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[15:27:55] *** Joins: festerdam (~polas@185.51.93.165)
[15:27:59] *** Quits: nyany (~nyany@dronebl/admin/cat) (Quit: quit = yes)
[15:28:37] <festerdam> Hi, all!
[15:29:01] *** Joins: nyany (~nyany@dronebl/admin/cat)
[15:29:53] *** Quits: Andrynet (~Andrynet@181.113.97.175) (Ping timeout: 252 seconds)
[15:30:24] <supakeen> Hi.
[15:30:54] *** Joins: e2m4n (~ezman@user/e2m4n)
[15:31:39] *** Quits: grooverman_ (~grooverma@177.95.12.14) (Read error: Connection reset by peer)
[15:31:46] *** Quits: d33tah (~d33tah@2a03:b0c0:3:d0::14d2:c001) (Quit: WeeChat 2.8)
[15:32:02] *** Joins: Andrynet (~Andrynet@181.113.97.175)
[15:32:12] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[15:32:31] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:32:41] <festerdam> I have a question. There's one package whose Readme gives this example of its use: from CLIPy import Clip; Clip.bootstap_database("clip_id", "clip_password", storage); clip = Clip(); clip.bootstrap_database(). Is the second line legal code considering Clip.bootstrap_database is a static method?
[15:32:59] *** Joins: grooverman (~grooverma@177.95.12.14)
[15:33:16] <festerdam> *is not a static method
[15:33:36] *** Quits: RasnCain (~rasncain@ip174-73-119-77.br.br.cox.net) (Remote host closed the connection)
[15:34:06] *** Joins: RasnCain_ (~rasncain@ip174-73-119-77.br.br.cox.net)
[15:34:56] <Yhg1s> festerdam: it can be, sure, in a variety of ways. If Clip is a class, bootstrap_database could be a classmethod, or it could be a regular method that checks the value of 'self'.
[15:35:17] <grawity> it doesn't look like one though https://github.com/NovaUNL/CLIPy/blob/master/CLIPy/interface.py#L31
[15:35:33] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:07] <grawity> if it's a regular method, calling it on the class you'd be passing "clip_id" as 'self', wouldn't you
[15:36:14] <Yhg1s> Yes.
[15:36:21] <grawity> which doesn't make much sense in context
[15:36:30] <Yhg1s> And it would produce an error.
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:59] <grawity> I suspect the README is more of an example, not the first time I see "Class.method()" style being used to demonstrate what parameters a normal bound method takes
[15:37:13] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[15:37:13] *** Joins: fikran (~fikran@user/fikran)
[15:37:13] *** Quits: Andrynet (~Andrynet@181.113.97.175) (Ping timeout: 252 seconds)
[15:37:26] <festerdam> So I think it may be a maintainer mistake. Probably ld code in the example someone forgot to remove. Beause I think the id and password are supposed to be passed via a config file
[15:37:41] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:37:48] <Yhg1s> Yes, very likely.
[15:37:51] <KirkMcDonald> Yeah, that documentation seems erroneous.
[15:38:35] <KirkMcDonald> The arguments being passed don't seem to correspond to the method's parameters at all.
[15:39:24] *** Joins: Andrynet (~Andrynet@181.113.97.175)
[15:40:06] *** Quits: jmd (~user@de.cellform.com) (Read error: Connection reset by peer)
[15:40:45] *** Quits: RasnCain_ (~rasncain@ip174-73-119-77.br.br.cox.net) (Remote host closed the connection)
[15:41:26] *** Quits: jazzy3 (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[15:41:33] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[15:41:54] *** Joins: RasnCain_ (~rasncain@gw1.cox.com)
[15:42:12] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[15:42:33] <festerdam> Thanks!
[15:43:15] *** Quits: raxor2k (~raxor2k@fwa5cd2-48.bb.online.no) (Remote host closed the connection)
[15:43:27] * grawity wonders if python users would recognize ruby-style "Class#method()" references
[15:44:11] *** Quits: guenhael (~Thunderbi@193.52.208.97) (Ping timeout: 252 seconds)
[15:44:13] <KirkMcDonald> I mean they might if they've also used Ruby...
[15:44:28] <vladoski> i'm trying to run coverage but it tells me that there's no coverage.cmdline
[15:44:33] <vladoski> how can I fix this?
[15:45:14] <nedbat> vladoski: 1) did you name your own file coverage.py?  2)  can you pastebin the full error report?
[15:46:36] <vladoski> https://bpa.st/QTEA
[15:46:37] <vladoski> no
[15:46:53] *** Quits: BlueSky (~BlueSky@user/bluesky) (Ping timeout: 256 seconds)
[15:47:03] <vladoski> i mean i have one file in my project that's named coverage.py but i don't want to run coverage on that
[15:47:29] <nedbat> vladoski: i think that file is interfering
[15:47:51] *** Quits: logithack (~logithack@p200300cfbf3661006817cd8da552dcce.dip0.t-ipconnect.de) (Quit: Leaving)
[15:48:50] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[15:49:59] *** Quits: vsantana (~Thunderbi@fttx-177136148231.usr.predialnet.com.br) (Quit: vsantana)
[15:50:49] *** Quits: NeilRG_ (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Quit: Leaving...)
[15:53:09] *** Joins: tobybl (~tobybl@213.31.134.21)
[15:55:13] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[15:55:48] *** Joins: aniketgm (~Aniket@49.36.107.115)
[15:55:59] *** Quits: Lazenca (Lazenca@user/lazenca) (Remote host closed the connection)
[15:56:06] *** Joins: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr)
[15:56:09] *** Joins: pmcnabb (~pmcnabb@user/pmcnabb)
[15:58:16] *** Quits: Andrynet (~Andrynet@181.113.97.175) (Ping timeout: 256 seconds)
[15:58:25] <zamba> i'm parsing a lot of headers in custom protocols.. they usually contain fields at variable-sized ints.. currently i'm extracting the different fields and then returning a dict with the different names and their values.. but i feel there's a neater way of doing this.. for instance creating a struct or a datatype for this.. can pydandic be a solution here?
[15:58:33] *** Parts: aniketgm (~Aniket@49.36.107.115) ()
[15:59:13] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[15:59:21] *** Parts: jaggz (~jaggz@user/jaggz) (Leaving)
[15:59:59] *** Joins: Andrynet (~Andrynet@181.113.97.175)
[16:00:14] *** Joins: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net)
[16:00:19] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[16:00:25] <zamba> currently i'm parsing a header called a source packet header.. so it contains version number (3 bits), type (1 bit), data field header flag (1 bit), application process identifier (11 bits).. and so on
[16:00:29] *** Quits: grayn (Thunderbir@gateway/vpn/protonvpn/grayn) (Ping timeout: 256 seconds)
[16:01:23] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[16:01:31] <supakeen> Is your question about the parsing of it or about the output?
[16:01:38] <supakeen> A dict seems to be a fine thing for the latter.
[16:02:14] *** Quits: e2m4n (~ezman@user/e2m4n) (Ping timeout: 256 seconds)
[16:02:26] <zamba> how to represent it
[16:02:31] *** Joins: spithash (~spithash@user/spithash)
[16:02:45] *** Quits: vladoski (~vladoski@2001:8a0:7ae1:4400:bded:84d2:c79e:8618) (Ping timeout: 250 seconds)
[16:02:47] <zamba> i feel source_packet_header["version_number"] is a bit, well, un-neat
[16:02:58] <zamba> source_packet_header.version_number, though, seems better :)
[16:03:00] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi)
[16:03:11] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:2da2:5327:d7ca:24f0)
[16:03:12] <supakeen> Oh, I don't particularly have a strong opinion about that.
[16:03:24] *** dcaro is now known as dcaro_lunch
[16:03:28] *** Joins: cm315 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[16:04:50] <bjs> If you can de-structure into sets of fixed fields (e.g. classes) then that would be better (in my opinion)
[16:04:51] <supakeen> It might be nice to use a class so you can have some (class)methods such as SourcePacketHeader.from_bytes and .to_bytes.
[16:05:02] <supakeen> If that's a thing you'd like :)
[16:05:02] <bookworm> I do, one my editor knows about and can help me with and the dict version is a black box you need to introspect
[16:05:11] <bjs> I have seen people trying to make dict-like things with dot-access but I think that's bad
[16:05:26] <bjs> As they are essentially just dicts but with different syntax
[16:06:00] <zamba> bjs: you mean like enums?
[16:06:24] <grym> no, dataclasses
[16:06:43] <grym> (i like 'em, too, over dicts in many cases)
[16:07:21] <zamba> isn't that something that pydantic is set out to supersede?
[16:08:27] <Yhg1s> dataclasses aren't dicts-with-dot-access, since they have fixed structure.
[16:08:41] *** Joins: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-165.dsl.bell.ca)
[16:09:22] <bjs> zamba: uh, I'll clear up I said two different things.  A class with fixed structure (this is good, and yes like with a dataclass or something);  and then the dict-but-with-dot-syntax (which i say is bad)
[16:09:44] <zamba> well, i'm not interested in the dict-but-with-dot-syntax.. i'm interested in setting up a dataclass
[16:09:48] <bjs> it's not the dot-syntax that is nice (to me) it's the fact it has a fixed set of fields, possibly with type information and documentation, and my IDE can autocomplete etc
[16:10:20] <Yhg1s> zamba: you do remember how I pointed you at third-party packages that can do the bit-parsing for you, right? Like bitstruct. You should also consider attrs for your structured objects.
[16:11:41] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[16:12:37] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[16:13:05] <zamba> hm, but i'm just curious on how to best set this up.. let's say i have 6 bytes that should be parsed into different fields.. should i have a class-method inside the class that do the parsing?
[16:13:28] <zamba> or should i just have a class to structure the data/information and then let some other, outside, function parse the bytes into the structure?
[16:13:59] <bjs> zamba: Yhg1s's suggestion of bitstruct might be a nice way.  Another way is to have a class with a (class)method to parse the bytes
[16:14:38] <bjs> I've never used bitstruct, it looks okay;  but I'd probably use attrs to make some nice classes and a simple classmethod
[16:14:52] *** Quits: festerdam (~polas@185.51.93.165) (Quit: leaving)
[16:15:07] <grawity> I usually have a @classmethod def from_bytes(cls, buf)
[16:17:04] <zamba> what does the decorator @classmethod really do?
[16:18:17] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Ping timeout: 252 seconds)
[16:18:21] *** Joins: Payam (~Payam@138.106.57.131)
[16:19:24] *** Joins: kdc (~kdc@196.211.197.159)
[16:20:22] *** Joins: aniketgm (~Aniket@49.36.107.115)
[16:21:11] *** aniketgm is now known as RoronoaZoro
[16:21:33] *** Joins: Naan (~Naan@user/naan)
[16:23:03] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[16:23:51] *** Joins: plastico (~plastico@neomutt/plastico)
[16:24:08] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[16:24:25] <bjs> zamba: it's like a static method but knows the class, you call it on the class itself (no instance needed)
[16:24:43] <bjs> zamba: here's a little example of one approach you could take using attrs https://bpa.st/TE7Q
[16:25:25] *** Quits: shad (~shad@user/shad) (Ping timeout: 256 seconds)
[16:26:15] *** Joins: vimal (~vimal@ip-213-127-89-120.ip.prioritytelecom.net)
[16:26:27] *** Joins: shad (~shad@user/shad)
[16:26:48] <zamba> bjs: oh.. nice.. i'll see what i can make out of it :)
[16:27:24] <bjs> I'm like 99% sure I got the bitwise operations wrong there because I wasn't paying attention, it should be like `(b >> (lsb - 1)) & ((1 << (msb - lsb + 1)) - 1)`
[16:28:20] <bjs> No that can't be right either :D
[16:29:39] <bjs> I over-compensated my off-by-one,  it should just be `>> lsb` not `>> (lsb - 1)` ...
[16:29:57] *** Quits: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[16:30:43] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[16:31:04] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[16:31:05] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[16:31:07] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[16:31:56] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[16:32:01] *** Joins: greedom (~greedom@p200300de670a07004b16b8f833ad95fc.dip0.t-ipconnect.de)
[16:32:38] *** Joins: xkuru (~xkuru@user/xkuru)
[16:34:14] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:fef2:22f5:df06:797c) (Ping timeout: 252 seconds)
[16:35:08] *** Joins: guenhael (~Thunderbi@193.52.208.97)
[16:35:12] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:b14a:1393:a2fc:c252)
[16:36:24] *** Quits: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net) (Quit: Leaving)
[16:36:42] *** Joins: a0z1 (~a0z1@185.213.154.162)
[16:37:08] *** Joins: NyaaTheCat (~CalculusC@user/calculuscat)
[16:37:44] *** Joins: zeden (~zeden@user/zeden)
[16:38:03] *** Joins: tmm88 (~tmm88@user/tmm88)
[16:38:36] <tmm88> https://www.toptal.com/developers/hastebin/tuxarukoga.properties can someone point me to a mean of fixing
[16:39:01] *** Joins: legola (~legola@46.235.101.65)
[16:41:24] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[16:41:39] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[16:41:57] <supakeen> Can you not use that sort of rude language even in a paste. Aside from that; what's the actual goal of this script and what have you tried?
[16:42:56] <tmm88> supakeen: first of all my honest and deep signs of apologies and regret. i was just trying to being humorous. my honest and deep signs of regret if i seemed rude at some point
[16:43:01] *** Joins: darksun (~darksun@user/darksun)
[16:43:46] *** Joins: delvian (~delvian@41.13.200.224)
[16:43:48] <tmm88> the goal of the script is taking two variables as an input and encrypting and decrypting them using ssl and storing them into variables using os.popen(xxx).read()
[16:44:13] *** Joins: vladoski (~vladoski@2001:8a0:7ae1:4400:9e9b:9edb:43de:cd59)
[16:44:16] <tmm88> so that then i can read them into the terminal
[16:45:06] <vladoski> nedbat, even if I remove/rename that file I still get that
[16:46:26] <RoronoaZoro> tmm88: why don't you just pickle/marshall it.
[16:46:37] <RoronoaZoro> there is a marshall package I believe
[16:46:49] <Payam> Hi, How do I disable multiple rules in pylint? I did `pylint -d C301, W1203 src/*.py`
[16:47:10] <Payam> I got a fatal error
[16:47:40] <RoronoaZoro> make a .pylintrc file and add your rules there.
[16:47:45] <RoronoaZoro> Payam: ^
[16:47:53] *** Quits: tobybl (~tobybl@213.31.134.21) (Remote host closed the connection)
[16:49:39] <grawity> tmm88: I'd say the very first thing is to avoid calling the `openssl` binary as much as possible
[16:49:43] *** Quits: nomic (~nomic@185.198.243.158) (Quit: Leaving)
[16:50:11] <grawity> tmm88: but if you do have to call it, then subprocess.run([arg1, arg2, ...]) is better than popen()
[16:50:25] <RoronoaZoro> Payam: https://newbedev.com/how-do-i-disable-a-pylint-warning
[16:50:55] <tmm88> RoronoaZoro: i am already making some experiments with marshal and pickle
[16:51:01] <tmm88> and i seem to like it
[16:53:33] <tmm88> one more question how do i de-serialize data with marshal
[16:53:33] <jinsun> Payam: I use --disable= instead of -d, feels more trustworthy, also no spaces between the codes, only comma
[16:53:34] <tmm88> ?
[16:55:32] *** Joins: drogas (~drogas@jump2.jet.uk)
[16:56:06] <RoronoaZoro> tmm88: marshall.loads() i believe. last time i read, the doc said the 'pickle' package is untrustworthy. maybe Read the Fine manual.
[16:57:05] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[16:57:07] <arkanoid> I'm trying to stay within strict pylance/mypy checks, but I have project/src folder intended to contain main stuff, and project/tests folder intended to contain pytest stuff. From a project/tests/test_stuff.py I need to import project/src/stuff.py, so I'm trying to use sys.path to append "../src" to it, but editor forces me to reorder imports such that sys.path edit comes after all imports, and
[16:57:09] <arkanoid> execution fails. How to solve this?
[16:59:04] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[16:59:32] *** Joins: tobybl (~tobybl@213.31.134.21)
[16:59:39] *** Quits: ihristov (~ihristov@217.145.94.71) (Quit: Connection closed)
[16:59:44] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[16:59:59] <arkanoid> here it says that a static type checker cannot handle dynamic changes to system paths: https://github.com/microsoft/pylance-release/issues/498#issuecomment-711486245
[17:00:09] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Remote host closed the connection)
[17:00:39] <jinsun> arkanoid: don't write sys.path.append in your code
[17:01:17] <jinsun> you can make a .env file and set PYTHONPATH=src if you really want to play will sys.path
[17:01:52] <jinsun> but better would be to install the package in editable mode
[17:04:07] *** Quits: tobybl (~tobybl@213.31.134.21) (Ping timeout: 252 seconds)
[17:04:21] <arkanoid> I'm not installing a package, I'm writing my own project
[17:04:27] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[17:05:40] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[17:05:51] <jinsun> so, your project should be installable
[17:05:57] *** Quits: RasnCain_ (~rasncain@gw1.cox.com) (Ping timeout: 252 seconds)
[17:06:06] *** Joins: sagax (~sagax_nb@user/sagax)
[17:06:39] <jinsun> make a setup.py / setup.cfg / pyproject.toml and put insnide your project folder, then pip install --editable /path/to/project-folder
[17:06:56] *** Joins: yte3 (~0@151.15.189.85)
[17:07:53] *** Joins: RasnCain_ (~rasncain@gw1.cox.com)
[17:09:40] *** Quits: RoronoaZoro (~Aniket@49.36.107.115) (Read error: Connection reset by peer)
[17:11:47] <jinsun> you can go with the PYTHONPATH solution if you are lazy to make it installable, see here https://code.visualstudio.com/docs/python/environments#_use-of-the-pythonpath-variable
[17:12:57] <jinsun> the .env will apply only to stuff that the vscode extension does though, probably mypy will not catch it
[17:12:59] <arkanoid> jinsun: pytest docs seems to suggest a third way that I don't fully understand, see "Tests outside application code" https://docs.pytest.org/en/6.2.x/goodpractices.html
[17:13:26] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:13:50] <arkanoid> that's basically what I have: a root with mypkg and tests folders. How does he import mypkg from test_app.py?
[17:13:54] <jinsun> arkanoid: yeah you can do that way, then get rid of the src folder and move your package one level above
[17:13:55] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:1401:22a5:674e:d69b)
[17:15:20] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Read error: Connection reset by peer)
[17:15:30] <jinsun> you cannot have both src layout and your package magically added to sys.path
[17:15:41] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[17:15:59] *** Joins: ravan (~ravan@user/ravan)
[17:16:12] <jinsun> src layout is for the people who don't want the sys.path thing
[17:16:41] <arkanoid> I have to read more about this "layout" trends, to find out which one I need
[17:19:17] *** Joins: alius (~adrien@2a01:e0a:13c:cd90:88a1:4114:7bad:d8fc)
[17:19:27] <arkanoid> pytest suggests this reading and src layout https://blog.ionelmc.ro/2014/05/25/python-packaging/#the-structure
[17:20:06] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[17:20:49] <jinsun> yes and it also suggests making your package installable and testing with tox
[17:20:52] *** Quits: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com) (Remote host closed the connection)
[17:20:55] *** Joins: brabrax (~brabrax@user/brabrax)
[17:23:06] <arkanoid> ok I need to read about modern project layout
[17:23:57] *** Joins: eron (~eron@2804:14c:32:93d6:6089:a688:a4fe:61f7)
[17:24:08] <jinsun> arkanoid: for making installable you can follow this guide https://packaging.python.org/tutorials/packaging-projects/
[17:24:32] *** Joins: aniketgm (~Aniket@49.36.107.115)
[17:25:15] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[17:28:53] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[17:28:55] *** Quits: tmm88 (~tmm88@user/tmm88) (Quit: Client closed)
[17:30:45] *** Joins: dawg (dirtydawg@triton.blinkenshell.org)
[17:31:41] *** Joins: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[17:31:46] *** Quits: a0z1 (~a0z1@185.213.154.162) (Ping timeout: 256 seconds)
[17:33:03] *** Joins: bloody (~bloody@user/bloody)
[17:33:20] *** Joins: txtsd (~txtsd@user/txtsd)
[17:34:18] *** Joins: Sario (uid356235@fosshost/cdo/Sario)
[17:34:53] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[17:35:05] *** Quits: mihaiadrian (~Thunderbi@82.76.223.244) (Quit: mihaiadrian)
[17:35:56] *** Joins: ccallahan (~ccallahan@redhat/ccallahan)
[17:36:17] *** Joins: introom (introom@2600:3c01::f03c:92ff:fea3:2cf)
[17:36:38] *** Quits: swinnenb (~swinnenb@user/swinnenb) (Quit: This is the hidden truth, the world between the lines.)
[17:37:04] *** Joins: maromau (~mauro@151.51.224.59)
[17:37:16] <arkanoid> jinsun: if I go src layout + installable package, will vscode integrated testing panel "install" the fresh package on every test run?
[17:37:26] *** Joins: luigibu (~luigi@80.30.201.209)
[17:37:51] *** Quits: RasnCain_ (~rasncain@gw1.cox.com) (Ping timeout: 252 seconds)
[17:37:56] <jinsun> no, you will have to install it yourself, if you use tox then tox will install it each time it runs I think
[17:38:00] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[17:38:31] <introom> hi. How do i force a python program to use socks proxy for all outbound tcp connections?
[17:38:56] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[17:38:56] <arkanoid> jinsun: ok, thanks again
[17:39:23] <arkanoid> introom: if external tool is viable then proxychains
[17:40:04] <jinsun> arkanoid: but the good thing about pip install --editable is that your changes will reflext in the site-packages automaically, that is why I suggestested editable mode so you won't have to install everytimme
[17:40:38] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:40:41] <jinsun> s/reflext/reflect
[17:40:46] <jinsun> ugh I can't type
[17:41:28] <Wulf> introom: there's also "tsocks". Or you can configure your local netfilter firewall to do funny stuff.
[17:41:44] <Wulf> introom: or python-only, monkey-patch the socket library
[17:43:03] *** Quits: zeden (~zeden@user/zeden) (Ping timeout: 256 seconds)
[17:43:23] *** Joins: zeden (~zeden@user/zeden)
[17:43:54] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[17:44:12] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[17:44:15] *** Parts: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-165.dsl.bell.ca) (WeeChat 3.2)
[17:44:27] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[17:45:12] <lesshaste> what is the easiest way to find the number of minutes from start to end of the day given a string such as '9:45-18:00'
[17:45:20] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Read error: Connection timed out)
[17:45:22] <lesshaste> ?
[17:46:26] <Wulf> lesshaste: the easiest? Hard to say. How is "easy" defined?
[17:46:34] *** Joins: fikran (~fikran@user/fikran)
[17:46:45] <lesshaste> Wulf, I guess shortest code once you have the write modules?
[17:46:50] <lesshaste> the right modules
[17:46:50] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 252 seconds)
[17:47:31] *** dcaro_lunch is now known as dcaro
[17:48:38] *** Joins: ^moebius^ (~webchat@host-87-15-57-190.retail.telecomitalia.it)
[17:49:37] <Wulf> lesshaste: 1440 - int((g := re.search(r"(\d+):(\d+)", "9:45-18:00").groups())[0]) * 60 - int(g[1])
[17:49:42] <Wulf> someone get it shorter?
[17:49:54] <lesshaste> Wulf, wow!
[17:50:45] <lesshaste> Wulf,  that outputs 855 for me which isn't right
[17:51:21] <Wulf> lesshaste: 855 minutes is 14 hours 15 minutes. Looks fine to me?!
[17:51:55] <lesshaste> Wulf, isn't it 8 hours and 15 minutes?
[17:52:21] <Wulf> lesshaste: from start (09:45) to end of the day (24:00)?
[17:52:23] <SnoopJ> Wulf, 12 hours from 9:45 is 21:45 and 14 is larger than 12.
[17:52:48] <lesshaste> Wulf,  sorry.. 9:45-18:00 starts at 9:45 and ends at 18:00
[17:52:58] <Wulf> lesshaste: so the day doesn't matter?
[17:53:12] <lesshaste> Wulf,  right. They are on the same day that is all that matters
[17:53:27] <jinsun> ` start, end = [datetime.datetime.strptime(s, "%H:%M") for s in "9:45-18:00".split("-")]; print((end-start).total_seconds() / 60)`
[17:53:29] <lesshaste> I mean the end of the working day as shown by the times in the string
[17:53:30] <introom> Wulf:monkey patch the python socket library, but some c libraries invoked by python might not take effect.
[17:53:45] <Wulf> introom: so use netfilter.
[17:54:24] *** Joins: stdout (~stdout@216.163.21.11)
[17:54:29] <lesshaste> jinsun, thanks!
[17:55:29] *** Quits: maromau (~mauro@151.51.224.59) (Quit: Konversation terminated!)
[17:55:38] *** Quits: Dotz0cat (~Dotz0cat@h118.199.117.75.dynamic.ip.windstream.net) (Ping timeout: 252 seconds)
[17:57:34] *** Joins: raxor2k (~raxor2k@fwa5cd2-48.bb.online.no)
[17:57:36] *** Parts: raxor2k (~raxor2k@fwa5cd2-48.bb.online.no) ()
[17:57:59] <lesshaste> jinsun, a,b,c,d=eval(input().translate({58:44,45:44}));return(a-c)*60+b-d    maybe?
[17:58:07] <Wulf> ((g := list(map(int, re.findall(r"\d+", "9:45-18:00"))))[2] - g[0]) * 60 + g[3] - g[1]
[17:58:47] <Wulf> lesshaste: eval is evil!
[17:59:05] *** Joins: Dotz0cat (~Dotz0cat@h171.88.213.151.dynamic.ip.windstream.net)
[17:59:22] <lesshaste> Wulf, yes!
[18:00:02] *** Joins: a0z1 (~a0z1@185.65.135.169)
[18:00:17] <SnoopJ> lesshaste, if you're using eval() just for literal values, use ast.literal_eval(), which has substantially fewer sharp edges
[18:00:30] <SnoopJ> if you're using it for not-literals, you've already got headaches :)
[18:00:33] <lesshaste> SnoopJ,  good call
[18:01:50] <lesshaste> Wulf, your code works very nicely
[18:02:11] <jinsun> lesshaste: the signs should be the other way unless you really wanted to do start-end and not end-start
[18:02:30] <lesshaste> jinsun,  yes it was buggy. Thank you
[18:02:44] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:02:47] <lesshaste> but I prefer Wulf's because it doesn't use eval
[18:03:05] <Wulf> lesshaste: if you're fine with multiple statements: a,b,c,d = map(int, re.findall(r"\d+", "9:45-18:00")); print((c - a) * 60 + d - b)
[18:03:17] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[18:03:26] <lesshaste> Wulf,  even better. Thank you
[18:03:48] <lesshaste> we can even afford to give a,b,c,d informative names :)
[18:04:13] *** Joins: qlixed (~qlixed@181.44.129.13)
[18:04:18] <Wulf> lesshaste: or write a function. def foo(bar: str) -> int: a,b,c,d = map(int, re.findall(r"\d+", bar); return (c - a) * 60 + d - b
[18:04:42] <Wulf> But now it's getting longer. And shorter = better.
[18:05:10] <SnoopJ> shorter = shorter
[18:05:48] <lesshaste> Wulf, I see you have added in types too!
[18:05:53] <lesshaste> which I never do
[18:06:00] <Wulf> lesshaste: it's fun, try it!
[18:06:02] <lesshaste> is there a typechecking system for python?
[18:06:05] <lesshaste> Wulf, yes!
[18:06:14] <lesshaste> I mean, will you ever get a type error this way?
[18:06:15] <Wulf> lesshaste: mypy and some other whose name I forgot
[18:06:22] <Yhg1s> pytype, pylance.
[18:06:33] <lesshaste> but python by default never warns you?
[18:06:39] <lesshaste> Yhg1s,  thanks
[18:06:52] *** Quits: Payam (~Payam@138.106.57.131) (Ping timeout: 256 seconds)
[18:07:08] <Wulf> pyright
[18:07:27] <lesshaste> Wulf, I think you map is missing a )
[18:07:27] <Yhg1s> Python implementations don't use the type annotations, yes.
[18:07:36] <lesshaste> Yhg1s,  hmm.. that's a shame
[18:07:40] <lesshaste> any plan for them to?
[18:07:42] *** Joins: vimart (~vimart@62.60.60.193)
[18:08:17] <Wulf> lesshaste: oh noes! But now I'll keep it open until the end of times, just to annoy you ;-)
[18:08:35] <lesshaste> Wulf,  Aaaaaarg
[18:08:36] <lesshaste> :)
[18:08:41] <vimart> Hello World
[18:08:47] <Wulf> Hello, vimart!
[18:08:51] *** Joins: BlueSky (~BlueSky@user/bluesky)
[18:09:19] <Yhg1s> lesshaste: why is it a shame? But no, it certainly won't happen in the next ten years, almost certainly never.
[18:09:42] <SnoopJ> especially because the fact that it doesn't currently makes all kinds of hackery possible :)
[18:10:10] <Yhg1s> Or just can't express common, sensible code.
[18:10:12] <SnoopJ> `def f(param: "custom_tool_thingy"): ...`
[18:10:34] <bjs> Yhg1s: what about something like mypy being moved into the stdlib or included as standard with a flag,  is that any more likely?
[18:10:35] <SnoopJ> PyContracts is the main one that comes to mind for whatever reason, but I guess FastAPI/Typer count too
[18:10:43] <grym>  PEP 484 says it won't, or at least doesn't want to https://www.python.org/dev/peps/pep-0484/#non-goals
[18:10:44] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:7d90:e8ce:e7ae:433b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:11:07] <Yhg1s> bjs: not the latter, but the former, sure, eventually. Still probably not within ten years, though.
[18:11:16] <SnoopJ> haha
[18:11:21] <Yhg1s> grym: yes, but that's about *PEP 484*, not about later developments.
[18:11:48] <grym> Yhg1s: yes, which aiui all hinge on `x:sometype`
[18:12:04] <grym> so if we pinkie-swear that that syntax isn't binding
[18:12:07] <SnoopJ> (n.b. it doesn't *have* to be a type)
[18:12:18] <grym> annotations don't, no
[18:12:31] <grym> i'd hope type annotations would, though
[18:12:33] <Yhg1s> grym: I... don't understand your point, sorry.
[18:12:56] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:13:03] *** Quits: Strom (strom@fedora/strom) ()
[18:13:05] <bjs> grym: I think that statement is saying that PEP 484 itself does not propose to make the annotations mandatory in any version of Python
[18:13:23] <bjs> but that does not preclude future proposals from doing that (however unlikely)
[18:13:42] <grym> bjs: i agree; and if that's true, then compelling them (to enable the runtime interpreter to check types automatically with, e.g., a flag or whatever) is out
[18:13:59] <Yhg1s> grym: why is it out?
[18:14:07] <bjs> Not at all, it's highly unlikely but not completely out
[18:14:16] <grym> i guess the weaker form of 'is out', which is 'guido et. al. will be v. sad', is also in play
[18:14:50] <Yhg1s> why would they be sad?
[18:14:51] *** Quits: BillyZane (~BillyZane@193.160.245.245) (Quit: Leaving)
[18:14:53] <bjs> grym: I don't think it's really about a particular individual "being sad", I would assume Guido is one of the more pro-type people
[18:14:57] <grym> Yhg1s: they said they would be
[18:15:04] <Yhg1s> PEP 484 does not say "this will never happen", it says "this PEP isn't trying to make it happen"
[18:15:06] <grym> (i'm paraphrasing)
[18:15:13] <Yhg1s> grym: I think you're misunderstanding, more like.
[18:15:16] <grym> it says "the authors have no desire to ever make type hints mandatory, even by convention."
[18:15:25] <grym> which is more than "we're not trying to make this happen"
[18:15:32] <grym> but less than "shall not"
[18:15:34] <grym> we can move on
[18:15:34] <Yhg1s> grym: at the time of writing the PEP, they didn't have that desire, yes :)
[18:15:46] <grym> Yhg1s: and they project that desire forewards
[18:15:50] <bjs> I think we shouldn't read more into words in a PEP than what they mean in relation to that PEP
[18:15:50] <grym> in the tense of that sentence
[18:15:52] <Yhg1s> no, they do not.
[18:15:53] <grym> is all my point is
[18:15:58] <Yhg1s> they just state their current desires.
[18:16:02] <grym> yes, they do.  what do you think "to ever" means?
[18:16:15] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-a58e-bfb2-96f8-2fe0.res6.spectrum.com)
[18:16:28] <Yhg1s> grym: what it says is that _at the time of that writing_, they didn't have even a long-term desire to do it.
[18:16:32] *** Quits: ^moebius^ (~webchat@host-87-15-57-190.retail.telecomitalia.it) (Ping timeout: 256 seconds)
[18:16:47] <grym> i'll remember to only care so much about PEPS :)
[18:16:59] <Naan>  "ever" is pretty strong
[18:17:04] <Naan> but this is a pointless debate
[18:17:07] <grym> yes, it is
[18:17:17] <grym> let's go watch rashomon instead
[18:17:25] <jinsun> as long as Any is available, making it mandatory won't help much
[18:17:38] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[18:17:40] <jinsun> people will find just ways to insert Any everywhere
[18:17:43] <bjs> jinsun: Any is an important type in any gradual system really
[18:18:02] <bjs> and as Yhg1s mentioned, there are many perfectly valid and common patterns in Python that are sensible but not checkable with these systems
[18:18:24] <bjs> so even if you do make it mandatory you would need some kind of escape like "Any"
[18:18:29] <Yhg1s> (There's already a way to add type annotations automatically, it's pytype.)
[18:19:12] <bjs> I think pytype still supports Any but yes
[18:19:16] <bjs> I am not a pytype expert
[18:19:33] *** Joins: FCS (FurCoatSta@159.196.89.115)
[18:19:51] *** Joins: Elzington (~Elzington@static-68-235-44-28.cust.tzulo.com)
[18:19:54] <FCS> Hi all, I see Travis CI is noted on RealPython as a good CI tool. Is this currently best practice when using GitHub?
[18:20:13] <Yhg1s> pytype still supports Any, of course. Like you said, you need it. I'm saying you don't need to find a way to insert Any anywhere, you can just use pytype :)
[18:20:31] <apollo13> FCS: no, you probably want to use anything but travis ci
[18:20:40] <FCS> What would you recommend apollo
[18:20:41] <Yhg1s> FCS: yeah, no, not so much.
[18:21:12] <Yhg1s> FCS: I would suggest using GitHub Actions, unless there's some reason you can't.
[18:21:32] <FCS> I have heard about GH Actions but never really delved into it, I will read up more about it. Thanks for the recommendation.
[18:21:50] *** Joins: faceface (~faceface@user/faceface)
[18:22:18] *** Joins: ikus060 (~ikus060@96.127.228.230)
[18:24:18] *** Joins: abip20 (~abdullah@user/abip20)
[18:25:44] <apollo13> FCS: GHA on GH or Gitlab CI on Gitlab :D
[18:26:17] *** Joins: guenhael1 (~Thunderbi@193.52.208.97)
[18:26:41] *** Quits: guenhael (~Thunderbi@193.52.208.97) (Ping timeout: 256 seconds)
[18:26:41] *** guenhael1 is now known as guenhael
[18:26:51] *** Joins: sazawal (~sazawal@223.190.82.88)
[18:27:45] <sazawal> Hi all. Can I wait for multiprocessing.Manager().Queue() data in a function ran with asyncio.run_coroutine_threadsafe?
[18:28:22] <sazawal> I mean wait with blocking, as queue.get()
[18:28:33] <bjs> sazawal: well yes, but it'll block your event loop
[18:28:59] <sazawal> I see
[18:29:16] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[18:30:54] *** Joins: Julian (~tos9@python/site-packages/Julian)
[18:30:57] <sazawal> bjs, So the way is to wait in a function running in another thread, and put the received data in q=asyncio.Queue() as `asyncio.run_coroutine_threadsafe(q.put(data),loop)` in the same thread? Then receiving it in the asyncio event loop?
[18:31:31] <bjs> sazawal: that would work yeah
[18:31:57] <sazawal> bjs, Hmm quite convoluted, but okay
[18:32:03] <bjs> I think that solution is quite nice, to separate the part talking to the other process
[18:32:10] <bjs> with the part that communicates with your event loop
[18:32:46] <sazawal> Yea, I guess
[18:33:11] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[18:33:55] *** Joins: amanjhalmat12 (~amanjhalm@212.237.123.164)
[18:34:57] *** Quits: guenhael (~Thunderbi@193.52.208.97) (Quit: guenhael)
[18:35:07] <{HD}> which py formatter do you people use? autopep8, black, or yapf?
[18:35:16] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[18:35:43] <bjs> {HD}: i use black;  it does a reasonable job and the cases where it does something I dislike there's either an option for it (line length) or I don't care enough
[18:36:00] <xavierdarkness> My company uses black.
[18:36:22] <{HD}> seems like the articles I am finding online and reddit all lean towards black.
[18:36:35] <grym> {HD}: bjs' point is very high praise, imo: good evidence that black really hit the sweet spot of consensus on formatting choices.
[18:36:55] <bjs> black does just good enough that i can't be bothered to do it manually
[18:37:04] <grym> everyone has a few quibbles, the intensity of dislike is low, and there's a high variance among each person's quibble-set compared with everyone else's
[18:37:53] <grym> "ehh, fine, whatever, i don't care now" is pretty great
[18:38:35] *** Quits: justache (~justache@user/justache) (Ping timeout: 256 seconds)
[18:39:14] <{HD}> well, I just installed black. I will see how it goes. Thanks for the input.
[18:39:17] *** Joins: whaley (~whaley@2603-6080-a301-33d1-61af-b49d-1f8a-054a.res6.spectrum.com)
[18:39:27] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[18:41:13] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[18:41:17] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 252 seconds)
[18:41:34] *** Joins: Julian (~tos9@python/site-packages/Julian)
[18:43:01] *** Joins: RasnCain_ (~rasncain@gw1.cox.com)
[18:46:14] *** Quits: beli6147 (~Thunderbi@174.128.60.162) (Quit: beli6147)
[18:46:39] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[18:46:40] *** Joins: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com)
[18:47:31] *** Quits: RasnCain_ (~rasncain@gw1.cox.com) (Ping timeout: 252 seconds)
[18:49:23] *** Joins: kn100 (~kn100@wireguard/tunneler/kn100)
[18:49:53] *** Joins: mrcrypto (uid521271@id-521271.helmsley.irccloud.com)
[18:50:51] <{HD}> oh no! I know this is going to stir up a storm but...
[18:51:01] <{HD}> where do I get black that uses tabs instead of spaces?
[18:51:14] <{HD}> or is there an option in black for tabs?
[18:51:41] <bjs> {HD}: no, and no Python formatter will let you use tabs
[18:51:51] *** aniketgm is now known as zoro
[18:51:55] <bjs> I hope!
[18:51:55] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[18:52:17] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 252 seconds)
[18:52:22] <{HD}> DOH!
[18:52:24] <grym> {HD}: tabs are Right Out
[18:52:34] <SnoopJ> {HD}, black does not do tabs, no
[18:53:16] <bjs> {HD}: every python formatter will be 4 space characters per indent
[18:53:28] <grym> quality editors, of which there are many, can Do The Right Thing in python modes though; also, you can make nearly all of them blacken your file on save
[18:53:28] <jinsun> it will be pep8 violation if it did tabs
[18:53:30] <bjs> that is standard and is the result of bloody battles
[18:53:41] *** Quits: amanjhalmat12 (~amanjhalm@212.237.123.164) (Quit: Client closed)
[18:53:44] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[18:53:49] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[18:53:55] <SnoopJ> perhaps we can focus on the question that was asked
[18:53:55] *** Joins: Julian (~tos9@python/site-packages/Julian)
[18:54:43] *** Joins: fdan (~fdan@192.146.154.3)
[18:55:00] <SnoopJ> apparently there's an abandoned fork of black called black-with-tabs, hah
[18:55:06] *** Joins: Linux77 (~7Linux7@186.233.182.193)
[18:55:22] <{HD}> grym: I am currently using vscode and it does blacken on save or run...
[18:55:35] *** Quits: Andrynet (~Andrynet@181.113.97.175) (Ping timeout: 252 seconds)
[18:55:50] <grym> {HD}: yeah, new builds even have black as a dropdown option already i believe
[18:55:58] <Dev0n> hey, does with open("file.txt", 'w+') not supposed to work on Windows if "file.txt" doesn't exist and throw a "FileNotFoundError"?
[18:56:03] <grym> and you just have to tell it where the path is if nonstandard
[18:56:37] <Julian> Dev0n: that doesn't sound right, no
[18:57:06] <fdan> hi there
[18:57:11] <Dev0n> Hum odd, the same code I have for creating a file (with full path) on mac with w+ works but on windows throws FileNotFoundError.
[18:57:13] <fdan> what is the use of abstract methods?
[18:57:15] <SnoopJ> grym, I think that's been there since I started using it in 2019
[18:57:22] <fdan> why this is failing btw https://pasteboard.co/5M2eq5Vi6orC.png
[18:57:27] <Julian> fdan: Are you talking about ABCs?
[18:57:31] <fdan> yes
[18:57:32] *** Joins: Andrynet (~Andrynet@181.113.97.175)
[18:57:32] <bjs> fdan: you mean like with the abc module?
[18:57:36] <fdan> yes
[18:57:39] <SnoopJ> but the Python integrations continue to get a lot of attention
[18:57:47] *** Joins: akk (~akk@75.161.146.115)
[18:57:54] <Julian> fdan: They are essentially a kind of runnable documentation that tells implementers of the class what they should implement.
[18:57:57] <Julian> Or runtime-checkable.
[18:58:06] <bjs> fdan: it means Python can check that you have all the right methods to implement the "interface" the ABC defines
[18:58:08] <SnoopJ> fdan, it's failing because process() is abstract, but you didn't implement it
[18:58:18] <gitesh> look at this ------> https://bpa.st/RFHA
[18:58:23] <gitesh> how is decorators working?
[18:58:25] <SnoopJ> when you write a concrete subclass, you must define an implementation for every abstractmethod
[18:58:25] *** Quits: vbgunz_ (~vbgunz@35.141.71.47) (Ping timeout: 256 seconds)
[18:58:41] <bjs> fdan: it fails because `process` is an abstract method, which means that you are required to implement it yourself in any subclass but the subclass did not implement it
[18:58:43] <jinsun> Dev0n: I think windows gives weird errors for unrelated issues, and there is a 260 character limit on the total path length, hitting that also gives filenotfound I think
[18:58:46] <bjs> so Python checked and raised an error for you
[18:58:51] <gitesh> what is passed to split_string?
[18:58:55] <SnoopJ> gitesh, that is the same as `say_hi = split_string(uppercase_decorator(say_hi))`
[18:59:05] <bjs> gitesh: try re-write this code without using the @ syntax, and you'll see
[18:59:11] <fdan> bjs sure that fixes
[18:59:28] <Dev0n> jinsun, ahh definitely under 260 chars so that's not it
[18:59:32] <fdan> bjs: it means Python can check that you have all the right methods to implement the "interface" the ABC defines
[18:59:32] *** Joins: justache (~justache@user/justache)
[18:59:53] <Bluefoxicy> hey I have code that generates a number between -1 and 1 scaled to a 16-bit integer and everything on google says you can make this output sound by writing a wav file
[18:59:56] <bjs> fdan: yeah
[19:00:00] <Bluefoxicy> is there actually a way to send numbers to the sound card?
[19:00:09] <SnoopJ> fdan, it's not "Python" doing it so much as the base class, but yea, it's checking when you instantiate that you fleshed out the abstract stuff.
[19:00:11] <Dev0n> maybe some windows permission issue
[19:00:13] <zoro> gitesh: sequence of passes to @<decorators> bottom-up
[19:00:15] <fdan> i didnt understand this exactly. could you talk to me like you talk to a 5 year old
[19:00:29] <Bluefoxicy> because "python can play back a wav file" is just spooky magic if there's no way to read the file in and write its contents to meatspace
[19:00:38] <fdan> i am still not understanding the usecase of abc
[19:00:52] <bjs> fdan: there really isn't much to it, when you say @abstractmethod it means that Python checks that you wrote one
[19:00:55] <Swayze> abc easy as 123
[19:00:55] *** Joins: Burger (~textual@user/burger)
[19:01:05] <Swayze> do ri mi, abc
[19:01:10] <SnoopJ> Bluefoxicy, PyAudio is a pretty good library
[19:01:19] <bjs> Swayze: are you in the right channel? :)
[19:01:30] <Swayze> sorry thought this was #motown
[19:01:37] <Swayze> wc
[19:01:39] <fdan> bjs: why do i write an abstract method
[19:01:54] <bjs> fdan: to make Python check that subclasses have those methods
[19:02:02] <bjs> that's *all* they do
[19:02:06] <fdan> sure
[19:02:29] <Bluefoxicy> @snoopJ thanks, now to figure out the documentation
[19:02:29] <SnoopJ> you're declaring "An instance of this abstract class has these methods, but it's up to the subclass to define what those methods *do*"
[19:03:10] <bjs> fdan: for example if you want people to write classes with read and write methods, you can make a class `class File(ABC): ` with abstract read and write methods.  Then any class that inherits from File must implement both read and write.  If the author forgets, Python will check and tell them
[19:03:23] <fdan> sure
[19:03:26] <The-Compiler> honest questions: Why ABCs over mypy protocols?
[19:03:46] <Julian> The-Compiler: no good reason, I think a lot of us hate abcs
[19:03:58] <SnoopJ> The-Compiler, do you mean in the post-3.8 world?
[19:04:00] <Julian> the main reason is a thing that others on the "other side" would think is a negative
[19:04:10] <Julian> The-Compiler: namely that abcs let you mix abstract and concrete implementation details
[19:04:27] <bjs> Right,  this is why collections.abc.* are all abcs
[19:04:28] <Julian> (which to some is a plus, and to those who dislike abcs, is a ridiculous idea)
[19:04:33] <bjs> because they have mixin methods
[19:04:41] <SnoopJ> Julian, you can do that with Protocol, too. PEP 544 includes this in its examples, even.
[19:04:51] <fdan> thanks Julian SnoopJ bjs
[19:04:55] <bjs> SnoopJ: but at that point all you have is an abc :P
[19:04:58] <SnoopJ> ABC was just there before Protocol existed. I'm not sure why you'd prefer it after the fact
[19:04:59] <The-Compiler> SnoopJ: should be able to do so in earlier versions via https://pypi.org/project/typing-extensions/ I suppose?
[19:05:13] <Julian> SnoopJ: can you, TIL
[19:05:16] <SnoopJ> The-Compiler, oh, fair
[19:05:19] *** Joins: cation21 (cation@user/cation)
[19:05:22] *** Quits: dermato (~dermatobr@cpe-70-114-219-76.austin.res.rr.com) (Quit: WeeChat 3.1)
[19:05:25] <Julian> (honestly I use neither, I'm still behind using z.i)
[19:05:49] *** Quits: Togra (~Togra@user/togra) (Quit: I am in the upside down)
[19:05:50] *** Quits: cation (cation@user/cation) (Ping timeout: 256 seconds)
[19:05:52] <SnoopJ> Protocols are nice, Luciano Ramalho gave a very nice talk about them at PyCon 2021
[19:06:05] <Julian> SnoopJ: (seems you're right, that's unfortunate.)
[19:06:11] <SnoopJ> which hopefully means there will be a section about them in the 2nd edition of his book
[19:06:17] <The-Compiler> actually, you don't even need typing-backports really
[19:06:23] <SnoopJ> Julian, why is it unfortunate?
[19:06:28] <bjs> SnoopJ: also I'm a little confused,  Protocols don't support mixin methods like abcs do they?
[19:06:34] <bjs> Like the collections.abc.* ones
[19:06:56] <The-Compiler> SnoopJ: https://github.com/qutebrowser/qutebrowser/blob/master/qutebrowser/utils/utils.py#L38-L45
[19:06:59] <Julian> bjs: SnoopJ: it encourages inheritance
[19:07:02] <Julian> er, SnoopJ ^
[19:07:15] <Julian> bjs: https://www.python.org/dev/peps/pep-0544/#protocol-members
[19:07:31] <SnoopJ> bjs, I'm not entirely sure I understand the question. I don't think there's anything special to how mix-in methods are resolved, is there? Like, they're "just" methods that get added to the inheritance diagram, right?
[19:07:37] <moonmoon> abcs and protocols have different semantics; even when protocols exist there may be cases where an abc would be better from a logical point of view, because it encapsulates a class hierarchy that makes sense for your program (whereas a protocol doesn't imply any sort of hierarchy)
[19:07:43] *** Joins: Togra (~Togra@user/togra)
[19:08:07] <SnoopJ> yea, I guess the reason you'd use an ABC over a Protocol is that you want to *require* inheritance
[19:08:16] <Julian> https://glyph.twistedmatrix.com/2021/03/interfaces-and-protocols.html
[19:08:23] <Julian> this was a decent post from a few months ago
[19:08:40] <SnoopJ> yea
[19:08:40] *** Quits: jay-m126_ (~jay-m@154.72.167.177) (Ping timeout: 256 seconds)
[19:08:42] *** cation21 is now known as cation
[19:09:02] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:1401:22a5:674e:d69b) (Quit: smeeagle)
[19:09:11] *** Quits: jay-m126 (~jay-m@154.72.167.177) (Ping timeout: 256 seconds)
[19:09:31] <SnoopJ> I guess ABCs are "join me and we can rule the galaxy as BaseClass and Derived" and Protocols is more like "if it fits, I commits"
[19:09:31] *** Joins: mosh3k21 (~mosh3k21@user/mosh3k21)
[19:10:34] <bjs> SnoopJ: hmm, I got a bit confused.  If you inherit a Protocol it behaves just like an ABC?
[19:11:28] <{HD}> okay so my tab problem is that I use tabs for clang so my editor is setup for that. Anyone using vscode have it tabs for clang and spaces for py? if so how did you do that?
[19:11:49] *** Joins: amanjhalmat12 (~amanjhalm@212.237.123.164)
[19:11:51] *** Quits: justache (~justache@user/justache) (Read error: Connection reset by peer)
[19:11:54] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[19:11:56] <bjs> {HD}: VSCode is highly configurable and its configuration is per language, so yeah it's very easy to set it up to do that
[19:12:08] <bjs> {HD}: doesn't the standard Python extension just do that for you?
[19:13:15] *** Joins: justache (~justache@user/justache)
[19:13:45] <{HD}> bjs: I guess I should delete my custom settings. I think I set it up to `"editor.insertSpaces": false` and `"editor.detectIndentation": false`....
[19:13:50] <{HD}> let me try without those.
[19:13:59] *** Joins: RasnCain (~rasncain@gw1.cox.com)
[19:14:01] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[19:14:08] <bjs> If you have detectedIndentation set to true for all languages then you open a py file with tabs
[19:14:09] <SnoopJ> {HD}, I think the "Indent with spaces" and "Indent with tabs" commands are remembered across language families. Mine does tabs for C++, spaces for Python.
[19:14:11] <bjs> it'll detect the tabs yeah
[19:14:26] <bjs> so I wouldn't have that globally enabled typically
[19:14:56] <{HD}> okay, that worked for python. Let me see if it messed up my .c
[19:15:02] <SnoopJ> oh, guess not, I get spaces if I open a new C++ file. I suppose I get tabs because I'm editing $employer stuff and it figures that out.
[19:15:14] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[19:15:25] *** Parts: VaniaPy (~VaniaPy@46.12.146.107.dsl.dyn.forthnet.gr) ()
[19:15:37] *** Joins: VaniaPy (~VaniaPy@46.12.146.107.dsl.dyn.forthnet.gr)
[19:15:59] <jinsun> yeah it detects existing indentation and overrides the default  behavior for the languge by default
[19:16:20] *** Quits: amanjhalmat12 (~amanjhalm@212.237.123.164) (Client Quit)
[19:16:51] <SnoopJ> I think you can declare it per-language in the settings if you're willing to write some JSON
[19:17:01] <{HD}> jinsun: does it do this cross file? is it detecting in this workspace I have .py with spaces? so when I make a .c it uses spaces?
[19:17:25] <SnoopJ> {HD}, I believe it does whatever is in *that* file
[19:17:40] <SnoopJ> ($employer's C++ uses tabs, but Python in the same codebase uses spaces)
[19:17:44] <{HD}> SnoopJ: yea, if the autodetect ends up not working I will write something. I have my .clang-format set to tabs so even though the editor is inserting spaces when I save it goes tabs...
[19:17:52] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[19:18:10] <SnoopJ> {HD}, I can't find it in the VSCode docs but this is what I'm talking about: https://flaviocopes.com/vscode-language-specific-settings/
[19:18:45] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[19:19:10] <SnoopJ> (that's in settings.json, which is accessible via the command palette)
[19:19:25] <{HD}> SnoopJ: perfect!
[19:19:54] <{HD}> do you think its [python] or just [py]
[19:19:59] <jinsun> [python]
[19:20:05] <SnoopJ> It's [python] as far as I know
[19:20:16] <jinsun> and it is here in vscode docs https://code.visualstudio.com/docs/getstarted/settings#_languagespecific-editor-settings
[19:20:23] <SnoopJ> (Python source doesn't always live in a .py)
[19:20:43] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[19:21:00] *** Joins: Zweimer (~Zweimer@2a02:908:d20:26e0:6c61:3acf:b93e:fc8e)
[19:21:34] <{HD}> jinsun: Thanks! Just what I needed.
[19:22:08] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[19:22:08] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[19:23:57] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[19:24:44] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 252 seconds)
[19:24:58] <{HD}> Just tested it and it works!
[19:25:23] <Zweimer> Hey. I am importing a random file using importlib. This works well. However, I cannot instantiate an object of the class which I loaded. https://bpa.st/WZ5Q
[19:25:35] <Zweimer> What am I doing wrong?
[19:25:38] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 256 seconds)
[19:26:22] <SnoopJ> Zweimer, you didn't make an instance of the class, but you're calling an instance method
[19:26:37] <SnoopJ> maybe you meant inst().run() ?
[19:26:39] <grym> Zweimer: probably inst().run()
[19:26:44] <grym> jinx
[19:27:13] <Yhg1s> more likely `inst = obj()`
[19:27:19] <Zweimer> Yeah, I tried this too. I do not get an error report afterwards, just a:  Process finished with exit code -1073740791 (0xC0000409)
[19:27:53] <SnoopJ> Zweimer, that sounds like a separate issue, probably something went wrong inside the class (which we can't see)
[19:28:25] <SnoopJ> But as far as the question you did ask us, it's because you didn't make an instance (I agree with Yhg1s's suggestion to use a less misleading name)
[19:29:12] <SnoopJ> err, I guess the name is fine, but it doesn't match what L18 does
[19:30:42] <Zweimer> Ah right. I removed the parent class from my loaded class and it works now
[19:32:05] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[19:32:09] <Zweimer> Any idea why there's a problem with: class TabCoffee(QtWidgets.QWidget): inheriting from QWidget?
[19:32:34] *** justache is now known as justSleigh
[19:33:39] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:36:39] *** Quits: whaley (~whaley@2603-6080-a301-33d1-61af-b49d-1f8a-054a.res6.spectrum.com) (Ping timeout: 252 seconds)
[19:37:11] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[19:37:36] *** Joins: whaley (~whaley@2603-6080-a301-33d1-456a-1e4c-dd86-8e17.res6.spectrum.com)
[19:38:40] *** Quits: greedom (~greedom@p200300de670a07004b16b8f833ad95fc.dip0.t-ipconnect.de) (Remote host closed the connection)
[19:39:58] *** Joins: mickey84 (~user@user/mickey)
[19:40:08] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[19:40:08] *** mickey84 is now known as mickey8
[19:40:43] *** Quits: Burger (~textual@user/burger) (Quit: Textual IRC Client: www.textualapp.com)
[19:41:13] *** Joins: pyzozord (pyzozord@user/pyzozord)
[19:41:26] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[19:41:46] <pyzozord> hey can I send a request with a cookie via urllib.request.urlopen somehow?
[19:41:56] *** Quits: ikus060 (~ikus060@96.127.228.230) (Quit: Leaving)
[19:43:13] *** Joins: monkey_ (~user@181.114.17.106)
[19:43:47] *** Joins: ^moebius^ (~webchat@host-87-15-57-190.retail.telecomitalia.it)
[19:44:20] *** Quits: alius (~adrien@2a01:e0a:13c:cd90:88a1:4114:7bad:d8fc) (Quit: Konversation terminated!)
[19:44:55] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:46:14] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[19:46:58] <Wooble> pyzozord: sure, you can set whatever http headers you want to, manually.
[19:47:43] <Wooble> pyzozord: or use https://docs.python.org/3/library/http.cookiejar.html#module-http.cookiejar I guess
[19:48:10] <dob1> how can I check if my python script has syntax errors without executing it?
[19:48:16] <zoro> literally my first search result: https://stackoverflow.com/questions/51682341/how-to-send-cookies-with-urllib
[19:48:18] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[19:48:38] <zoro> dob1: use pylint.
[19:48:44] *** Joins: e2m4n (~ezman@user/e2m4n)
[19:48:49] <Wooble> dob1: or flake8
[19:49:00] <pyzozord> Wooble: I'm confused, how do I use it
[19:49:21] <dob1> I take a look, thanks
[19:49:37] <pyzozord> I can create a CookieJar then add_cookie_header, but what do I do with that CookieJar then?
[19:49:42] *** Joins: rajkosto (~rajkosto@93-86-99-67.dynamic.isp.telekom.rs)
[19:49:51] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 252 seconds)
[19:50:46] *** Joins: zebrag (~chris@user/zebrag)
[19:50:59] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[19:51:09] <zoro> pyzozord: check the link i just pasted above.
[19:51:27] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[19:52:12] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[19:52:52] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[19:53:01] *** Quits: BravoSlo (BravoSlo@gateway/vpn/airvpn/bravoslo) (Quit: Leaving)
[19:53:01] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Ping timeout: 268 seconds)
[19:53:39] <pyzozord> zoro: thanks!
[19:53:39] *** Parts: pyzozord (pyzozord@user/pyzozord) ()
[19:53:50] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[19:53:53] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[19:55:53] *** Joins: rb100 (~jeff@d27-96-151-97.nap.wideopenwest.com)
[19:55:56] *** Joins: fikran (~fikran@user/fikran)
[19:56:34] <dob1> what is "UPPER_CASE naming style" i am using snakecase naming convention
[19:56:51] <dob1> it's camelcase ?
[19:57:01] <bookworm> ThisIsCamelCase
[19:57:18] *** Quits: akk (~akk@75.161.146.115) (Quit: +++)
[19:57:31] *** Joins: rsx (~dummy@ppp-188-174-159-13.dynamic.mnet-online.de)
[19:57:32] <Wooble> dob1: uppercase is for constants
[19:57:32] <bookworm> generally upper case + underscores is reserved for constants
[19:57:58] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 256 seconds)
[19:58:34] *** Quits: elwoodpd (~elwoodpd@host-92-8-65-11.as13285.net) (Quit: Leaving)
[19:58:36] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[19:59:23] *** Quits: ^moebius^ (~webchat@host-87-15-57-190.retail.telecomitalia.it) (Ping timeout: 252 seconds)
[19:59:53] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[20:01:58] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1) (Quit: Leaving)
[20:02:11] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[20:02:21] *** Joins: paravida (~myChateau@user/paravida)
[20:02:27] *** Quits: mallkrampus (~mallkramp@172.93.207.235) (Ping timeout: 256 seconds)
[20:02:41] *** Quits: a0z1 (~a0z1@185.65.135.169) (Ping timeout: 252 seconds)
[20:03:08] *** Joins: guenhael1 (Thunderbir@gateway/vpn/protonvpn/guenhael)
[20:03:19] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Remote host closed the connection)
[20:03:19] *** guenhael1 is now known as guenhael
[20:03:59] <Masklin_Gurder> foo=bar ; if foo not bar: continue             <--- is this not ok syntax?
[20:04:10] <Masklin_Gurder> Uhm sorry, wait
[20:04:21] <Masklin_Gurder> foo=bar ; if not foo==bar: continue             <--- is this not ok syntax?
[20:04:33] <grym> Masklin_Gurder: not in one line it's not
[20:04:35] *** Joins: nomic (~nomic@185.198.243.158)
[20:04:53] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[20:05:10] <Masklin_Gurder> grym: Why not?
[20:05:11] <Wooble> (also spell that foo != bar)
[20:05:24] <Masklin_Gurder> I thought python was one-lineable
[20:05:27] <Masklin_Gurder> Wooble: no >:)
[20:05:45] <grym> python is famous for significant whitespace
[20:06:03] <grym> i don't know if what you wrote is legal, but i would not write it that way anyway
[20:06:12] <Masklin_Gurder> But I want it on one line :(
[20:06:15] <SnoopJ> Masklin_Gurder, not all things can be expressed on one line
[20:06:26] <grym> Masklin_Gurder: we live in an imperfect world of joy and sorrow mingled
[20:06:58] *** Joins: pyzozord (pyzozord@user/pyzozord)
[20:06:58] <phy1729> Luckily there isn't a shortage of newline bytes
[20:06:59] <SnoopJ> you can do `if predicate: continue` on a single line, though, but not the entire loop it lives in
[20:07:45] <pyzozord> hey, just finished first day of Advent of Code, can you review my python? One thing I don't like is that I read entire response and conver it, maybe that should be lazy instead? Any other ideas how to improve this code in general? https://ideone.com/BbjIMM
[20:07:52] <Masklin_Gurder> I use  'if foo: bar' a lot, I guess this example fails because of the semicolon somehow...
[20:08:03] <bjs> Masklin_Gurder: Python has two types of statements, "compound" statements and "simple" statements.  You cannot have multiple statements on a single line if any of them are "compound" statements
[20:08:24] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[20:09:34] *** Joins: a0z1 (~a0z1@185.213.154.169)
[20:09:37] <bjs> (that is, separated by ";")
[20:09:38] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[20:10:20] <Masklin_Gurder> I see.
[20:10:28] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[20:10:30] <Masklin_Gurder> Not sure I see why it has to be like that, but I accept the flaws of snek.
[20:10:34] <bjs> Formally speaking, the syntax is that compound statements are things made up of other statements (e.g. `if` and `while`).  The syntax has `simple_statemnet (";" simple_statement)+`
[20:10:49] <Wooble> [otherwise foo=bar;if foo != bar:baz;quux;   would be ambiguous.
[20:11:01] <SnoopJ> Masklin_Gurder, if you can't see why it's a syntax requirement, it seems strange to qualify it as a flaw
[20:11:02] <zoro> I've never used semicolon in python statements like this.
[20:11:09] <bjs> Masklin_Gurder: it's because we use indentation to disambiguate these compound statements, and while there may be some cases which seem unambiguous this rule prevents all the "bad" cases
[20:11:24] <SnoopJ> but perhaps you are expressing an aesthetic preference
[20:11:54] <bjs> Masklin_Gurder: see https://docs.python.org/3/reference/compound_stmts.html#compound-statements
[20:12:12] <Masklin_Gurder> SnoopJ: My example wasn't ambiguous, but the argument bjs dropped is fair I guess.
[20:12:30] <SnoopJ> Masklin_Gurder, when you create a programming language, you have to consider all the programs one might write in it
[20:12:45] <bjs> Masklin_Gurder: well, whether a flaw or not it's a fairly hard to avoid consequence of using indentation
[20:12:54] <SnoopJ> Python chose whitespace to delineate blocks, other languages choose braces/whatever
[20:12:59] <zoro> this is the way i've used most of the time. https://docs.python.org/3/reference/compound_stmts.html#the-if-statement
[20:13:14] <zoro> SnoopJ: exactly
[20:13:52] <Wooble> pyzozord: getting the input file via http every time you run it seems suboptimal anyway; I just save the files.
[20:14:04] <SnoopJ> I didn't like Python's choice when I first came to the language, but now I adore it, because it lightly encourages consistency in the visual appearance of control flow
[20:14:26] <SnoopJ> (without the tedious OTB flamewar)
[20:14:54] <pyzozord> Wooble: yeah but that beside that one :D
[20:15:07] *** Quits: rany (~rany@user/rany) (Remote host closed the connection)
[20:15:16] *** Joins: Bakunin (~Lindis@user/lindis)
[20:15:37] <Wooble> pyzozord: mild spoiler: part 2 is more annoying if you read lazily. :)
[20:15:50] *** Joins: mallkrampus (~mallkramp@172.93.207.238)
[20:15:51] *** Joins: BillyZane2 (~BillyZane@152.89.204.189)
[20:16:00] *** BillyZane2 is now known as BillyZane
[20:17:21] <pyzozord> is it?
[20:17:30] <pyzozord> it doesn't seem so, you read two at a time
[20:17:42] <pyzozord> well I guess you can say it's just a bit more annyoing
[20:18:01] <pyzozord> actually sorry not two at a time
[20:18:10] <pyzozord> you read first one, and then you keep reading one at a time
[20:18:18] *** Joins: rany (~rany@user/rany)
[20:19:26] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[20:19:30] <Wooble> well, actually my initial solution was more annoying so I just built the list all at once, and then I switched to something from more_itertools that would have handled the lazy iterators anyway
[20:19:39] <Wooble> so, uh, nevermind. :)
[20:19:55] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[20:20:12] *** Quits: VaniaPy (~VaniaPy@46.12.146.107.dsl.dyn.forthnet.gr) (Quit: Connection closed)
[20:20:43] <Wooble> unless you're planning on running your code under micropython on some tiny board that can't handle 2K numbers in a list, probably not worth worrying about :)
[20:22:20] *** Joins: ld (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net)
[20:23:23] *** Joins: slav0nic (slav0nic@python.su)
[20:23:35] *** gitesh is now known as iamfuckedip
[20:23:56] *** iamfuckedip is now known as iamfuckedup
[20:24:41] *** Quits: a0z1 (~a0z1@185.213.154.169) (Ping timeout: 252 seconds)
[20:25:57] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[20:26:20] *** Joins: Betal (~Betal@user/betal)
[20:27:10] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[20:27:15] *** iamfuckedup is now known as tigerHighway
[20:27:45] *** tigerHighway is now known as gitesh
[20:28:07] *** Joins: Julian (~tos9@python/site-packages/Julian)
[20:29:10] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[20:29:38] *** Quits: monkey_ (~user@181.114.17.106) (Ping timeout: 252 seconds)
[20:30:11] *** Quits: Andrynet (~Andrynet@181.113.97.175) (Ping timeout: 252 seconds)
[20:30:41] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[20:31:27] *** Quits: grooverman (~grooverma@177.95.12.14) (Read error: Connection reset by peer)
[20:32:22] *** Joins: Andrynet (~Andrynet@181.113.97.175)
[20:32:57] *** Joins: grooverman (~grooverma@177.102.119.40)
[20:33:09] *** Joins: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com)
[20:34:30] *** casastortaAway is now known as casastorta
[20:35:19] *** Quits: ccallahan (~ccallahan@redhat/ccallahan) (Ping timeout: 256 seconds)
[20:35:38] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[20:37:10] *** Joins: tobybl (~tobybl@213.31.134.21)
[20:37:13] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:1401:22a5:674e:d69b)
[20:38:04] *** Joins: Themis3000 (~Thunderbi@user/themis3000)
[20:38:48] *** Joins: ld__ (~a0z1@185.213.155.166)
[20:39:16] *** Quits: vladoski (~vladoski@2001:8a0:7ae1:4400:9e9b:9edb:43de:cd59) (Ping timeout: 268 seconds)
[20:39:22] *** Joins: jncraton (~jncraton@199.8.13.16)
[20:39:55] *** Joins: ccallahan (~ccallahan@redhat/ccallahan)
[20:40:58] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[20:41:24] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[20:41:32] *** Quits: delvian (~delvian@41.13.200.224) (Quit: Leaving)
[20:41:36] *** Quits: ld (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net) (Ping timeout: 256 seconds)
[20:42:07] *** Joins: ccallahan|Backup (~ccallahan@redhat/ccallahan)
[20:42:43] *** Techcable_ is now known as Techcable
[20:43:52] *** Joins: arinov (~arinov@178.240.181.140)
[20:44:08] *** Quits: tobybl (~tobybl@213.31.134.21) (Remote host closed the connection)
[20:44:09] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[20:44:25] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[20:44:29] *** Quits: ccallahan (~ccallahan@redhat/ccallahan) (Ping timeout: 252 seconds)
[20:45:32] *** Joins: Macuser (~Macuser@216.30.159.201)
[20:45:44] <dob1> it was better that I didn't know about pylint... I have so many warnings in all my scripts
[20:45:47] <dob1> :)
[20:45:51] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[20:46:09] *** Joins: mickey8 (~user@user/mickey)
[20:46:35] <greyblue9> that would be a very miniscule python indeed
[20:47:20] <dob1> I never care about import order, it's really relevant?
[20:47:23] <greyblue9> `gc.get_objects()` would probably bring it to death's door
[20:47:56] <jinsun> dob1: before pylint, start using isort and black
[20:48:08] <jinsun> more than half of the warning will go away
[20:48:16] <greyblue9> it is if you have circular dependencies, at least
[20:48:24] <SnoopJ> greyblue9, to say micropython is idiosyncratic is perhaps an understatement
[20:49:16] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[20:49:30] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Client Quit)
[20:49:41] <SnoopJ> 2k simultaneous objects could exceed not-tiny boards, depending on the size of the objects, but 'primitive' stuff like ints are done pretty well
[20:49:56] <greyblue9> ah, `get_objects` is not implemented in their `gc` module, anyway
[20:50:15] <SnoopJ> yea, the GC alone is very different
[20:50:23] *** Quits: Gerula (~Gerula@user/gerula) (Quit: Leaving)
[20:50:31] <greyblue9> nor any of the `referent` / `references` functions
[20:50:32] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 252 seconds)
[20:50:35] <jinsun> dob1: also satisfy flake8 before pylint, pylint in the end when every other tool cannot find problems in your code, and pylint has lots of stuff that are fine to be disabled, find the really annoying once and disable them
[20:50:42] *** Joins: MikZyth (~MikZyth@host-13-154-66-217.spbmts.ru)
[20:50:49] <SnoopJ> nice article on this very subject: https://lwn.net/Articles/725508/
[20:51:05] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:51:20] <Wooble> dob1: or just pyflakes if you just care about syntax and not style.
[20:51:25] <SnoopJ> in some meaningful senses, micropython does a *better* job :)
[20:51:31] <greyblue9> oh, interesting
[20:51:39] <SnoopJ> but then, it's targeting a more narrow context
[20:51:46] <dob1> I didn't know about all these tools, now I look at them
[20:52:21] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[20:53:04] <SnoopJ> +1 to disabling the pylint stuff that is just aggravation
[20:53:17] *** Quits: the_lanetly_052 (~the_lanet@194.135.152.219) (Ping timeout: 252 seconds)
[20:53:32] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi)
[20:53:54] <Wooble> dob1: python -m py_compile yourscript.py  also works, although it's mostly there to build cached bytecode.
[20:53:57] *** Joins: alius (~adrien@2a01:e0a:13c:cd90:65e0:60ad:e6c4:7bc0)
[20:53:57] <greyblue9> I haven't used flake8 because I assumed it's focused on PEP 8
[20:54:12] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[20:54:16] <pyzozord> Here is how I did second part https://ideone.com/AcqIPQ, wdyt?
[20:55:04] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[20:55:07] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[20:55:56] <Wooble> pyzozord: seems reasonable (although you can limit the size of a deque so you don't need to popleft)
[20:56:06] *** Quits: alius (~adrien@2a01:e0a:13c:cd90:65e0:60ad:e6c4:7bc0) (Client Quit)
[20:57:20] *** Joins: alius (~adrien@2a01:e0a:13c:cd90:65e0:60ad:e6c4:7bc0)
[20:57:26] <greyblue9> MicroPython can run in 16KB RAM--I wonder if that's its resident size or if that's the requirement for the whole system?
[20:58:11] *** Joins: tobybl (~tobybl@213.31.134.21)
[20:58:14] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[20:58:33] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:990f:1e4e:6cd3:1c4a)
[20:58:57] <SnoopJ> greyblue9, I'm not sure I know what distinction you're making there
[20:59:38] <Wooble> if other stuff is using all 16K of ram you've got, probably python isn't going to start :P
[20:59:48] <pyzozord> Wooble: cool, didn't notice it had that, thanks
[21:00:15] <pyzozord> I feel that code I wrote is not very pythonic, not very idomatic
[21:00:20] *** Joins: djapo (~archangel@user/djapo)
[21:00:26] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 252 seconds)
[21:01:00] <greyblue9> haha... I can't wrap my head around that.. it would probably only be able to have one python file in memory at a time
[21:01:43] *** Quits: arinov (~arinov@178.240.181.140) (Ping timeout: 252 seconds)
[21:02:26] <SnoopJ> greyblue9, 16 KB is the RAM the runtime needs, is the way to read that
[21:02:34] <stewie925> hey pythonistas - I have python3.8 on my Mac and python3.6.9 in my virtual machine.  I noticed that whey I create a virtual environment with 3.6.9 and run pip3 freeze, I see this `pkg-resources==0.0.0` when I run pip3 freeze
[21:02:58] <greyblue9> ah, gotcha
[21:03:00] <stewie925> whereas when I run it under python3.8, there is none (which is expected).  is that a "bug" in 3.6.9?
[21:03:02] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[21:03:06] *** Quits: legola (~legola@46.235.101.65) (Remote host closed the connection)
[21:03:07] <SnoopJ> greyblue9, so if you had a system with just 16 KB, you'd indeed have a very constrained Python environment :)
[21:03:32] <Wooble> stewie925: https://stackoverflow.com/questions/39577984/what-is-pkg-resources-0-0-0-in-output-of-pip-freeze-command
[21:03:34] <SnoopJ> just 16 KB RAM I mean. Important to remember that you need the 256 KB that can be from ROM, too.
[21:03:36] <greyblue9> to say the least :p
[21:03:49] <SnoopJ> it's a cool little implementation
[21:03:56] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[21:04:01] <Wooble> stewie925: short answer: debian does weird stuff to pip.
[21:04:17] <SnoopJ> there's even a to-native compiler tucked away in there
[21:04:21] <stewie925> ahh, good to know, thanks Wooble
[21:04:40] *** Quits: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com) (Quit: csmiga)
[21:05:01] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[21:05:53] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Remote host closed the connection)
[21:06:05] *** Quits: mrcrypto (uid521271@id-521271.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[21:06:48] <greyblue9> i think there's even a separate python3-setuptools package
[21:06:50] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[21:06:56] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Remote host closed the connection)
[21:07:05] *** Joins: guenhael1 (Thunderbir@gateway/vpn/protonvpn/guenhael)
[21:07:06] *** Joins: mickey8 (~user@user/mickey)
[21:09:05] *** Joins: arinov (~arinov@178.240.181.140)
[21:09:26] *** guenhael1 is now known as guenhael
[21:09:27] <SnoopJ> debian does weird stuff to all of Python >_>
[21:09:27] <greyblue9> SnoopJ: that's pretty cool that they store some objects on the stack
[21:09:53] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 256 seconds)
[21:10:36] <SnoopJ> greyblue9, yea it's neato toledo. A few months ago, there was a great interview/walkthrough of some of the guts between the guy who leads CircuitPython (which is Adafruit's fork) and the guy that is basically all MicroPython (cannot recall their names)
[21:10:47] *** ld__ is now known as aoz1
[21:10:48] <greyblue9> small integers etc
[21:10:53] <SnoopJ> and the code is shockingly legible, considering
[21:11:09] *** Quits: tobybl (~tobybl@213.31.134.21) (Remote host closed the connection)
[21:11:12] *** aoz1 is now known as a0z1
[21:12:28] <greyblue9> and no refcounts?
[21:12:28] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[21:12:33] *** Quits: grooverman (~grooverma@177.102.119.40) (Read error: Connection reset by peer)
[21:12:37] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:1401:22a5:674e:d69b) (Quit: smeeagle)
[21:13:02] *** Joins: jay-m126_ (~jay-m@129.0.76.214)
[21:13:19] <SnoopJ> I'm not sure how the GC works actually
[21:13:27] *** Joins: grooverman (~grooverma@177.102.119.40)
[21:13:46] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:1401:22a5:674e:d69b)
[21:15:34] *** Joins: anddam (~anddam@user/anddam)
[21:16:08] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[21:17:41] *** Joins: jay-m126 (~jay-m@129.0.76.214)
[21:17:51] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 252 seconds)
[21:18:19] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[21:19:06] *** Joins: kosh (~kosh@user/kosh)
[21:19:42] <anddam> I would like to create a standalone program displaying a Tk window, just that for now. I tried cx_freeze and pyinstaller and those carried on quite a bit of libs, about 8 MB and 10 MB resp
[21:19:56] *** Parts: pyzozord (pyzozord@user/pyzozord) ()
[21:20:24] *** Quits: arinov (~arinov@178.240.181.140) (Quit: WeeChat 3.3)
[21:20:42] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 256 seconds)
[21:20:53] <aphysically> the first AoC ended up being a moving window
[21:21:00] <anddam> I read at least pyinstaller should try and only get the required libs, does showing a single Tk() window require that amount ot dependencies?
[21:21:59] *** Quits: rsx (~dummy@ppp-188-174-159-13.dynamic.mnet-online.de) (Quit: rsx)
[21:22:06] <cluelessperson_> aphysically, ypu
[21:22:07] <cluelessperson_> yup
[21:22:31] <SnoopJ> anddam, well, libpython itself is ~ 5 MB on my machine, so it's believable that dragging in a UI framework could double that
[21:22:48] <Wooble> aphysically: spoiler: like 2/3 of AoC each year is reducible to a single more_itertools function and some glue code. :)
[21:23:22] <aphysically> when I was going through the past ones my conclusion was basically that I should avoid itertools and comprehensions
[21:23:50] <anddam> SnoopJ: I see
[21:23:55] <aphysically> not because they're bad solutions, but because it seemed too hard to predict in what way the part 2 of the problem changes from part 1 and so by writing a loop initially I can solve the second one faster
[21:23:56] *** Joins: delvian (~delvian@41.13.212.200)
[21:24:16] *** Joins: arinov (~arinov@178.240.181.140)
[21:24:50] <aphysically> plus I reduce the cognitive load of considering the best itertools/collection solution which is a bit valuable when you're trying to get the solution in within two minutes or whatever
[21:25:07] <Wooble> aphysically: I usually end up with a naive part 1 solution and then a generalized solution for both parts that uses something off the shelf
[21:25:46] <Wooble> (I also don't even start the problems until hours after they're posted so "finish in 2 minutes" isn't a consideration)
[21:26:17] <aphysically> I got my first solution in within 1 minute 29 seconds but I only got rank 270 or something on the global leaderboards; I was trying to submit the answer repeatedly and getting 504 gateway timeouts for at least 30 seconds so it's hard to know where I would have actually scored if everyone's solutions were accepted first attempt
[21:26:24] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[21:26:53] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 256 seconds)
[21:27:22] <aphysically> (the answer obviously isn't "look where your time would have been on the leaderboard", because presumably other people had submission problems too
[21:27:55] *** Joins: Roey (~Roey@user/Roey)
[21:28:06] *** Joins: Inline (~Inline@aftr-37-201-240-100.unity-media.net)
[21:29:03] *** Joins: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com)
[21:30:00] *** Quits: Pixi (~Pixi@user/pixi) (Quit: Leaving)
[21:30:08] *** Quits: Guest3140 (~vit@chello085216193138.chello.sk) (Ping timeout: 252 seconds)
[21:30:22] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[21:31:31] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[21:32:02] *** Quits: jay-m126_ (~jay-m@129.0.76.214) (Ping timeout: 256 seconds)
[21:32:09] *** Quits: jay-m126 (~jay-m@129.0.76.214) (Ping timeout: 252 seconds)
[21:32:45] *** Joins: jay-m126 (~jay-m@129.0.76.214)
[21:33:00] *** Joins: jay-m126_ (~jay-m@129.0.76.214)
[21:33:06] *** Joins: Pixi (~Pixi@user/pixi)
[21:34:21] *** Quits: paravida (~myChateau@user/paravida) (Ping timeout: 252 seconds)
[21:34:48] *** Quits: vaio (~gary@user/ghost) (Ping timeout: 276 seconds)
[21:34:50] *** Joins: tobybl (~tobybl@213.31.134.21)
[21:34:51] *** Quits: jncraton (~jncraton@199.8.13.16) (Quit: leaving)
[21:35:24] *** Joins: vaio (~gary@user/ghost)
[21:35:46] *** Quits: kdc (~kdc@196.211.197.159) (Quit: Leaving)
[21:39:03] *** Quits: tobybl (~tobybl@213.31.134.21) (Remote host closed the connection)
[21:39:21] *** Joins: MaximB (~MaximB@87.68.165.78)
[21:42:45] *** Quits: kostkon (~kostkon@2a02:587:a116:e46c:7814:108:8592:7c58) (Remote host closed the connection)
[21:43:57] *** Joins: gabriel (~gabriel@188-167-229-200.dynamic.chello.sk)
[21:44:07] *** gabriel is now known as gabriel_sevecek
[21:44:45] *** Quits: rb100 (~jeff@d27-96-151-97.nap.wideopenwest.com) (Quit: leaving)
[21:44:59] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 252 seconds)
[21:45:09] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[21:45:19] <SnoopJ> greyblue9, in Kavya Joshi's talk linked from that article, @23:24 is where she starts discussing MicroPython's bitmap allocation strategy, but she doesn't talk about how the GC cleans up objects
[21:45:31] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Read error: Connection reset by peer)
[21:45:39] <MaximB> Hi, got a "problem", how would you solve it? https://paste.debian.net/1221544/
[21:45:48] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[21:46:57] <SnoopJ> the corresponding part of the MicroPython docs is here, but it also doesn't talk about the details of the mark-and-sweep https://docs.micropython.org/en/latest/develop/memorymgt.html
[21:47:25] *** Joins: kostkon (~kostkon@2a02:587:a116:e46c:7814:108:8592:7c58)
[21:47:28] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[21:48:32] <cluelessperson_> MaximB, are you asking for help on your homework?
[21:48:55] <cluelessperson_> :P
[21:49:59] *** Joins: paravida (~myChateau@user/paravida)
[21:50:01] *** Joins: ExpiredKebab (~sgreadly@2407:7000:a239:503:cdf8:d959:20a5:b5a3)
[21:51:12] <cluelessperson_> MaximB, I have two solutions in my head.
[21:51:53] <cluelessperson_> 1, using double the memory space,   map the count and locations of each character, so you can rip them out of say, a linked list?
[21:53:09] <cluelessperson_> 2,  2x passes,  one pass to map(by dict) count per char,   and one pass to reiterate over characters, only yielding characters that don't exceed the threshold
[21:53:26] *** Joins: vit (~vit@chello085216193138.chello.sk)
[21:53:31] *** Joins: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[21:53:50] *** vit is now known as Guest4367
[21:53:55] <NeilRG> how do I import a global variable in a different module that can be rebound?
[21:54:03] *** Quits: Vonter (~Vonter@user/vonter) (Quit: WeeChat 3.3)
[21:54:07] <cluelessperson_> NeilRG, what does "rebound" mean?
[21:54:30] <NeilRG> like if x lives in module m, then someone will later set m.x = something_else
[21:54:31] *** Guest4367 is now known as freeworld
[21:54:52] <NeilRG> so anyone who already imported it with "from .m import x" will not see the rebound value
[21:55:09] <cluelessperson_> NeilRG, use a mutable that you update.
[21:55:13] <cluelessperson_> perhaps a singleton
[21:55:15] <NeilRG> cluelessperson_, can you elaborate?
[21:55:33] <cluelessperson_> NeilRG, do you know the difference between assignment vs mutation?
[21:55:56] <NeilRG> cluelessperson_, you want me to box x within another variable that I mutate?
[21:56:05] <NeilRG> I've been using the module m as the box I guess
[21:56:23] <Luke> I'm writing a package with `setup.cfg`, that's going to be converted into a zipapp (with `shiv` specifically). I've got "data files" as part of it (YAML that's inside the package structure) but when I run it with `shiv`, it's not present in the extracted files.
[21:56:23] <Luke> I've got zip_safe = False in setup.cfg, are there other options I should be setting to ensure these files end up in the zipapp? Thanks
[21:56:43] <cluelessperson_> Instead of importing a variable assigned a value,  and possibly reassigning the variable (probably locally), you can use an object to store and update state without modifying what the variable is pointing to.
[21:57:19] <Sheilong> How can I replace strings in a pandas column by nans and then convert the column data type to float?
[21:57:21] <cluelessperson_> NeilRG, class Thing: x=0;       Thing.x += 1  would update for everywhere that imported it.
[21:57:35] <NeilRG> cluelessperson_, right, so that object is the module
[21:57:53] <NeilRG> but I see your point, I could make another box within it
[21:58:00] <NeilRG> what you're calling Thing
[21:58:14] <cluelessperson_> NeilRG, honestly, not sure why you're electing to use a global
[21:58:15] <zoro> NeilRG: what cluelessperson_ is trying to say is control the var using a class object.
[21:58:46] <cluelessperson_> yes, but I don't even like my suggestion and am bothered I don't understand this problem that well.
[21:59:04] <SnoopJ> greyblue9, okay, after staring at MicroPython's gc_sweep() (https://github.com/micropython/micropython/blob/master/py/gc.c#L269) for a bit, I think I get it: the bitmap has four states: free, head/tail, marked. You start with the root and mark any blocks that can be reached, and once that's done, you free whatever's left.
[21:59:11] <SnoopJ> Some description here as well: https://github.com/micropython/micropython/wiki/Memory-Manager#garbage-collection-cycle
[21:59:26] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[21:59:35] <zoro> cluelessperson_: why does it have to be singleton. Just it's not like he has to deal with only one instance.
[21:59:41] *** Joins: singularity00 (~singulari@85.187.64.126.client.entry.bg)
[21:59:42] <no_gravity> Do you guys write "print(...)" or "print (...)"?
[21:59:43] <NeilRG> cluelessperson_, It's just for a logger and progress bar that I need to pass around
[21:59:48] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[21:59:50] <mefistofeles> I'm getting some 'http.client.RemoteDisconnected: Remote end closed connection without response' when trying to do a urlretrieve with urllib, what's the best case to deal with that? Should I just try catching that expecific RemoteDisconnected error/exception?
[21:59:52] <SnoopJ> Not entirely sure how the mark phase works, but I guess just saying it's mark-and-sweep is enough for people who have written one of those before :)
[21:59:54] <NeilRG> cluelessperson_, should I pass them explicitly?
[22:00:01] *** Quits: Knaxius (~Knaxius@herzlichweise.de) (Quit: bye)
[22:00:03] <SnoopJ> no_gravity, the latter is only possible in ancient Python
[22:00:08] *** fling is now known as ciphersalad
[22:00:12] <SnoopJ> oh, nevermind, you have parens in both
[22:00:12] *** Joins: zyweo (~Svew@user/zyweo)
[22:00:17] * SnoopJ needs a coffee
[22:00:21] <zoro> no_gravity: it doesn't matter
[22:00:29] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[22:00:40] <SnoopJ> no_gravity, I write `print(...)` but I wouldn't be shocked if I saw `print (...)`
[22:00:58] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Quit: rickybob)
[22:00:59] * octav1a provides SnoopJ a coffee ^w^
[22:01:30] <zoro> SnoopJ: how do you do that ? is there a irc command I'm not aware.
[22:01:51] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[22:01:55] <no_gravity> SnoopJ: You never put a space between the function name and the (?
[22:01:57] <SnoopJ> zoro, often `/me action`, sometimes /emote or something else.
[22:02:07] <no_gravity> SnoopJ: I don't do either. But I am interested what is most common.
[22:02:09] <SnoopJ> no_gravity, no
[22:02:28] <cluelessperson_> NeilRG, probably best to avoid globals altogether.
[22:02:35] <no_gravity> SnoopJ: Great, thanks.
[22:02:46] <NeilRG> cluelessperson_, I've always believed that, but people seem to tolerate them for logging
[22:03:01] * zoro greets Python
[22:03:08] <zoro> hmm..
[22:03:12] *** Joins: djapo (~archangel@user/djapo)
[22:03:12] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[22:04:33] <cluelessperson_> NeilRG, depends, but even then I suggest having a log factory to give you a new instance when needed I think
[22:05:01] <SnoopJ> greyblue9, ah okay, the mark phase is actually not that bad: gc_collect_start() begins with mp_state_ctx, does some juggling to work out what it can see there, then calls gc_collect_root() and scans over that, marking HEAD blocks (and any of their children, using gc_mark_subtree()) as it goes. Once that's done, the sweep phase begins.
[22:05:08] <SnoopJ> neat :)
[22:05:10] <NeilRG> cluelessperson_, I can't do that because of statefulness?  Or maybe I can, not sure
[22:05:14] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[22:05:16] *** Joins: fikran (~fikran@user/fikran)
[22:06:44] *** ciphersalad is now known as fling
[22:06:57] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Remote host closed the connection)
[22:07:38] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[22:07:54] *** dcaro is now known as dcaro_away
[22:07:57] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[22:09:09] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:10:31] *** Quits: Andrynet (~Andrynet@181.113.97.175) (Ping timeout: 256 seconds)
[22:11:29] *** Quits: zoro (~Aniket@49.36.107.115) (Quit: leaving)
[22:12:18] *** Joins: Andrynet (~Andrynet@181.113.97.175)
[22:12:52] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[22:14:12] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[22:14:32] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[22:14:53] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:15:14] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 252 seconds)
[22:15:53] *** Joins: cheater (~Username@user/cheater)
[22:16:11] *** Quits: jay-m126 (~jay-m@129.0.76.214) (Ping timeout: 256 seconds)
[22:16:20] *** Quits: jay-m126_ (~jay-m@129.0.76.214) (Ping timeout: 252 seconds)
[22:17:46] <tpr> anyone knows if it's possible to make vscode find inlined test functions?
[22:17:56] *** Joins: jay-m126 (~jay-m@154.72.150.212)
[22:18:05] <SnoopJ> tpr, probably. what is an inlined test function?
[22:18:08] *** Parts: no_gravity (~no_gravit@user/no-gravity/x-5639427) ()
[22:18:23] *** Joins: jay-m126_ (~jay-m@154.72.150.212)
[22:18:26] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[22:19:10] <tpr> SnoopJ: instead of having some simple tests in a separate test_<foo>.py file, I'd simply have them contained in the script itself (prefixed with test_ as usual, works fine when executing pytest <file>.py). useful for single file scripts etc.
[22:19:15] *** Joins: zeden (~zeden@user/zeden)
[22:19:22] <montpol> What does this code do: zeroOD = refOD[refOD != np.nan].mean()
[22:19:49] *** Joins: rowbots (~dirgeable@h96-60-60-73.arvdco.broadband.dynamic.tds.net)
[22:20:11] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[22:20:26] <grym> montpol: takes the mean of the non-nan elements
[22:20:30] <grym> of refOD
[22:20:31] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:20:32] <randall> montpol: It will throw you an error that refOD is undefined.
[22:20:41] <montpol> lol randall
[22:20:45] <SnoopJ> tpr, when you say "find" are you talking about getting VSCode to *run* these tests? As far as locating them, I'd probably search for `def test_` over the codebase
[22:21:04] <grym> montpol: also, np.nanmean() is probably faster :)
[22:21:11] <SnoopJ> montpol, it looks like the author meant to do what grym said, but it won't actually do this because NaN doesn't compare equal to itself.
[22:21:21] <tpr> SnoopJ: yes indeed, I'm looking to execute the tests inside its debugger
[22:21:47] <randall> montpol: Glad I could help ;)
[22:21:49] <montpol> grym what is this weird indexing case stuff?
[22:22:00] <grym> montpol: numpy is very fancy
[22:22:01] <SnoopJ> tpr, I think you can just run pytest over the whole codebase in that case
[22:22:06] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Read error: Connection reset by peer)
[22:22:18] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[22:22:36] <montpol> SnoopJ so that means I cannot use np.nanmean()?
[22:22:49] <SnoopJ> montpol, it means you *should* use it, because nanmean() does the correct thing.
[22:22:50] <grym> montpol: no, you can and probably should
[22:23:04] <montpol> ah ok
[22:23:13] <grym> montpol: https://cs231n.github.io/python-numpy-tutorial/#array-indexing for more on fanciness
[22:23:18] <montpol> no indexing?
[22:23:21] <SnoopJ> the author of that code would probably be surprised to find out that `np.nan != np.nan`
[22:23:33] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:23:35] <SnoopJ> but this is the magical terror of NaNs :/
[22:24:03] <grym> montpol: what that code probably meant to be was `zeroOD = refOD.nanmean()`
[22:24:05] <montpol> Just like: zeroOD = refOD.np.nanmean()?
[22:24:15] <SnoopJ> `np.nanmean(refOD)`
[22:24:27] <grym> err, yeah
[22:24:42] <grym> some things live on the instance and some don't and i usually get it wrong
[22:25:38] <SnoopJ> montpol, the way this works: `refOD != np.nan` creates another numpy array full of booleans indicating whether the test is true or not for that element, and then *that* array is used to index the original, which is a thing numpy knows how to do
[22:25:40] <montpol> ah ok thanks...id like to read up on this cause it just looks weird and new
[22:25:52] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[22:25:52] *** Quits: Andrynet (~Andrynet@181.113.97.175) (Ping timeout: 256 seconds)
[22:25:53] <montpol> grym the Array indexing section you sent doesnt discuss this stuff
[22:25:54] <SnoopJ> the official docs on indexing are very good: https://numpy.org/doc/stable/reference/arrays.indexing.html
[22:26:15] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:26:19] <SnoopJ> using an array to index an array is what numpy calls "advanced indexing" https://numpy.org/doc/stable/reference/arrays.indexing.html#advanced-indexing
[22:26:32] <montpol> ah wait
[22:26:34] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:1401:22a5:674e:d69b) (Quit: smeeagle)
[22:26:35] <montpol> sorry yes it does
[22:26:39] <montpol> cool thanks SnoopJ
[22:26:49] <SnoopJ> roughly: you walk along the indexing array and if what you see is True, you take the element from the thing-being-indexed. If it's False, you skip it.
[22:26:51] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[22:26:59] <montpol> ok so the [] acts like a condition
[22:27:07] <SnoopJ> yea
[22:27:20] <SnoopJ> very important note: this is *guaranteed* to copy the original data
[22:27:34] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 256 seconds)
[22:27:43] <montpol> but refOD would need to be a np then
[22:27:50] *** Joins: Andrynet (~Andrynet@181.113.97.175)
[22:27:53] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 252 seconds)
[22:27:56] <SnoopJ> yes, I've been assuming refOD is an ndarray to start with
[22:28:22] <montpol>  yea that also my confusion...im sure it is as well but:
[22:28:24] <montpol> refOD = ODpic[self.refROI[1] : self.refROI[3], self.refROI[0] : self.refROI[2]]
[22:28:38] <montpol> ODpic = -np.log((old_div((absdataK40), (refdataK40))))
[22:28:48] <grym> yeah, that's a ndarray then
[22:28:58] <montpol> np.log makes an array?
[22:29:01] <grym> yes
[22:29:11] <montpol> refOD looks like a dictionary
[22:29:22] <tpr> SnoopJ: well, it isn't finding any tests as there are no files matching the test file pattern. '*.py' cannot be set as the pattern
[22:29:39] <grym> no, it's just getting indexed in a way you're not accustomed to
[22:29:49] <SnoopJ> montpol, the first example is indexing with two slice objects, i.e. it's the same as `refOD = ODpic[A:B, C:D]`
[22:30:13] <SnoopJ> which is also described in the numpy docs on indexing (really, they're a very informative read!)
[22:30:26] <montpol> ok ok ill go and read it haha
[22:30:32] *** Quits: ST47 (~ST47@wikimedia/st47) (Ping timeout: 240 seconds)
[22:30:37] *** Joins: mdemo (~mdemo@user/mdemo22)
[22:30:44] <montpol> thanks you guys.... you guys are awesome for being so helpful!
[22:31:32] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[22:31:59] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:32:08] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:33:14] *** Quits: ccallahan|Backup (~ccallahan@redhat/ccallahan) (Ping timeout: 256 seconds)
[22:33:22] <SnoopJ> tpr, oh, I see what you mean. try: `python3 -m pytest -o python_files="*.py"` per https://docs.pytest.org/en/6.2.x/example/pythoncollection.html#customizing-test-collection
[22:33:30] <SnoopJ> or putting that in your pytest configuration
[22:35:17] <meejah> can i expect any sort of portability in pickle files? like, "should" I be able to open a linux-produced one on windows? (trying to track down "insecure string pickle" error, but it's windows-only and I don't have a windows) .. also, yes I know pickle is bad, but "pre-existing condition" I'm trying to get rid of ;)
[22:36:14] <SnoopJ> meejah, I think it should be portable across platforms, but *not* across pickle versions, which change with the wind AFAIK
[22:37:03] *** Quits: zyweo (~Svew@user/zyweo) (Ping timeout: 252 seconds)
[22:37:09] *** Quits: Andrynet (~Andrynet@181.113.97.175) (Ping timeout: 256 seconds)
[22:37:12] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[22:37:30] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[22:37:34] *** Joins: Andrynet (~Andrynet@181.113.97.175)
[22:37:54] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:38:05] *** Joins: Gerula (~Gerula@user/gerula)
[22:38:23] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Ping timeout: 250 seconds)
[22:39:12] *** Joins: jncraton (~jncraton@199.8.13.16)
[22:41:07] *** Parts: mehwork (~mehwork@98.185.199.35.bc.googleusercontent.com) ()
[22:41:53] <meejah> hrmm, okay thanks! (probably that latter is more-relevant)
[22:42:44] *** Joins: onichomp666 (~onichomp@2806:264:4404:82be:b1e6:8d1e:bcf7:973c)
[22:42:55] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[22:43:13] *** Joins: FluffyMask (~masque@user/fluffymask)
[22:43:17] *** Quits: onichomp (~onichomp@177.231.43.15) (Ping timeout: 252 seconds)
[22:43:37] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:43:43] <SnoopJ> to my knowledge it's a lil' bytecode of its own, and there are some specific guarantees about backwards compat re: Python versions, so yea, I think it's not tied to platform
[22:43:46] *** Quits: onichomp666 (~onichomp@2806:264:4404:82be:b1e6:8d1e:bcf7:973c) (Read error: Connection reset by peer)
[22:44:10] <SnoopJ> although the objects so serialized could be, maybe?
[22:44:23] *** Joins: onichomp666 (~onichomp@2806:264:4404:82be:b1e6:8d1e:bcf7:973c)
[22:44:31] *** Quits: arinov (~arinov@178.240.181.140) (Ping timeout: 256 seconds)
[22:45:06] *** Quits: Haxxa (~Haxxa@125-63-20-105.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:07] *** Joins: se-sm-ca (~sean@user/se-sm-ca)
[22:45:29] <meejah> it's just basic types .. and seems to only fail on windows-platforms (not ubuntu, debian, fedora, nix, macos)
[22:46:05] *** Joins: arinov (~arinov@178.240.181.140)
[22:46:08] <SnoopJ> TIAS territory I think :)
[22:46:18] <octav1a> I have an esoteric question. Currently I have a program with a bunch of input files for 'experiments'. A function of a user interface involves sorting / filtering by the maximum value of all of these experiments. So currently, we index over all of them to find these maximums, for fast usage later. Now, a new request has come in to basically select some subset of the experiment files to use, so the  maximums can be different. It would seem that either we
[22:46:18] <octav1a> need to re-index when the chosen experiments are changed, or store maximums for every potential combination. Both of which seem less than ideal.
[22:47:17] <SnoopJ> octav1a, how many experiments are you dealing with as a rough ceiling?
[22:47:18] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[22:47:50] <tpr> SnoopJ: I don't think that helps with the integrated debugger, but thanks anyway :)
[22:48:02] <octav1a> SnoopJ: the number of input files I've seen ranges from 10-500
[22:48:25] <SnoopJ> tpr, you can definitely configure how it invokes pytest or a debugger separately, but I'm not sure how you're using the two in this case
[22:48:47] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[22:49:03] <SnoopJ> octav1a, that's small enough that just scanning through them doesn't sound like much of a problem; you could scan through them, build the subset, then compute the maximum of that, maybe?
[22:49:16] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:49:32] <SnoopJ> it does sound like you have a good amount of metadata for these, though. Perhaps you need a more traditional database-y thing like a sqlite db
[22:50:04] <octav1a> SnoopJ: so that is the number of comparisons / experiments. Inside each of these there are a large list of data points that we find the maximums for, say around 30k, which is why we needed the index to begin with.
[22:50:11] *** Quits: Andrynet (~Andrynet@181.113.97.175) (Ping timeout: 256 seconds)
[22:50:33] *** Quits: MikZyth (~MikZyth@host-13-154-66-217.spbmts.ru) (Quit: WeeChat 3.3)
[22:50:55] <SnoopJ> octav1a, so the size of a scan is more like 15 M?
[22:50:57] <octav1a> So say there were two experiments, we would get the maximum between 30k things (max between the first and second experiment)
[22:51:19] <octav1a> So the index is relatively constant size of 30k
[22:51:26] <SnoopJ> that may be more towards the "proper DB" end of things, then.
[22:51:32] *** Quits: arinov (~arinov@178.240.181.140) (Ping timeout: 252 seconds)
[22:51:43] <tpr> SnoopJ: from the looks of it, vscode wants to collect all the tests for running. tbh, I'm not that familiar with vscode at all, so that's why I'm trying to do things I'm accustomed to do with pycharm
[22:51:54] <SnoopJ> tpr, and where does the debugger enter the picture?
[22:52:04] *** Joins: Andrynet (~Andrynet@181.113.97.175)
[22:52:08] <octav1a> Does sqlite have some functionality to do the "maximum of data points in these combination of columns" or something?
[22:52:11] *** Quits: l4yer (~l4yer@2a07-a880-3101-1052-a135-751a-e6a7-8249.pool6.ovpn.com) (Remote host closed the connection)
[22:52:17] <octav1a> Sorry, I just realized this is a bit off topic.
[22:52:28] <tpr> SnoopJ: I'm trying to find out how to debug testsebug why a test is failing
[22:52:30] <octav1a> yeah
[22:52:44] *** Joins: ST47 (~ST47@wikimedia/st47)
[22:52:46] <SnoopJ> octav1a, SQL lets you express some very arbitrary queries, it can definitely do what you're describing here, so you could just structure the DB with whatever fields make sense per experiment
[22:52:52] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Remote host closed the connection)
[22:53:22] <SnoopJ> but sqlite isn't the only option, most database solutions are going to give you a way to do queries over the data
[22:53:23] <tpr> grr. misclicked. so I have a failing tests, and I'd want to have some breakpoints in the code under test to debug that.
[22:53:42] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[22:53:43] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:1401:22a5:674e:d69b)
[22:53:49] <SnoopJ> tpr, pytest provides --pdb for this purpose, I usually use that
[22:54:17] <SnoopJ> (you can configure the debugger it uses with --pdbcls if you don't want pdb itself)
[22:54:39] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[22:54:49] <SnoopJ> but breakpoint() should just work if you run pytest with -s, too
[22:54:52] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:56:17] *** Joins: l4yer (~l4yer@2a07-a880-3101-1022-506c-3672-1aff-71b6.pool6.ovpn.com)
[22:56:26] <tpr> SnoopJ: yes, I know about those. I just wanted to play around with the vscode's integrated debugger instead of using the tools I'm usually using
[22:57:14] <tpr> this is just an exercise to get the feeling of how vscode works
[22:57:34] *** Quits: MaximB (~MaximB@87.68.165.78) (Ping timeout: 256 seconds)
[22:59:30] <SnoopJ> not really sure how its debugger works, but looks like there's a command-line interface to it at least
[22:59:49] <SnoopJ> if it doesn't Just Work with pytest out of the box then I guess it's still missing a trick or two
[23:00:23] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[23:00:37] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:01:34] *** Joins: beli6147 (~Thunderbi@174.128.60.162)
[23:02:55] *** Joins: DaNeenjah (~jake@adsl-74-230-8-177.hsv.bellsouth.net)
[23:04:10] *** gitesh is now known as g1t3sh
[23:04:24] *** Quits: mags (~mags@097-090-237-145.res.spectrum.com) (Ping timeout: 256 seconds)
[23:05:52] *** g1t3sh is now known as gitesh
[23:06:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[23:06:13] *** Joins: mags (~mags@097-090-237-145.res.spectrum.com)
[23:06:23] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:06:38] <tpr> SnoopJ: yeah, I suppose it's not a common usecase to write tests for single file projects. :) having tests in separate files matching those patterns works as expected
[23:07:59] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:1401:22a5:674e:d69b) (Quit: smeeagle)
[23:08:43] *** Joins: JordiGH (~jordi@user/jordigh)
[23:08:45] *** Quits: ckdCreations (~ckdCreati@147.55.133.139) (Read error: Connection reset by peer)
[23:08:59] *** Joins: ckdCreations (~ckdCreati@147.55.133.133)
[23:09:46] <JordiGH> cpython doesn't have "garbage collection", right? I mean, not like there's a separate GC step? It's more like refcounting, when the last reference dies, so does the referenced resource? I'm wondering if I can just rely on references to NamedTemporaryFile to vanish for the file handle and file on disk to vanish.
[23:10:18] <JordiGH> Like: nothing references NamedTemporaryFile object anymore -> cleanup happens
[23:10:38] *** Quits: Andrynet (~Andrynet@181.113.97.175) (Ping timeout: 256 seconds)
[23:10:59] *** Quits: vulpes_vulpes (~vulpes_vu@62-64-204-115.dynamic.dial.as9105.com) (Remote host closed the connection)
[23:11:11] <rajkosto> there is a cleaning GC, just refcounting cannot break loops
[23:11:21] <grym> JordiGH: i think that's NamedTemporaryFile(...,delete=True) ?
[23:11:32] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[23:11:43] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[23:11:44] <KirkMcDonald> JordiGH: It primarily uses reference counting, but there is also a generational mark-and-sweep GC for resolving cycles.
[23:11:57] <JordiGH> Ah, so it's both.
[23:11:59] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:12:10] <JordiGH> So I could potentially have a file handle leak if I'm not using context managers.
[23:12:18] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[23:12:20] <JordiGH> grym: Don't see that arg? https://docs.python.org/3/library/tempfile.html#tempfile.TemporaryFile
[23:12:31] <KirkMcDonald> Potentially.
[23:12:41] <grym> JordiGH: it's for NamedTemporaryFile, which is what you asked about first
[23:12:43] *** Joins: Andrynet (~Andrynet@181.113.97.175)
[23:12:56] *** Quits: vimart (~vimart@62.60.60.193) (Quit: WeeChat 2.8)
[23:13:16] *** Quits: Phase (~phase@user/phase) (Ping timeout: 245 seconds)
[23:13:22] <JordiGH> I have a cat on my lap, when did that even happen.
[23:13:25] <JordiGH> Er, wrong window.
[23:15:02] *** Joins: Phase (~phase@user/phase)
[23:15:16] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:16:02] *** Quits: l4yer (~l4yer@2a07-a880-3101-1022-506c-3672-1aff-71b6.pool6.ovpn.com) (Quit: Leaving)
[23:16:26] *** Quits: eron (~eron@2804:14c:32:93d6:6089:a688:a4fe:61f7) (Quit: Client closed)
[23:17:23] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[23:17:35] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:19:13] <greyblue9> `os.rename` works when the destination is an existing file on *nix, but errors on windows?
[23:19:59] <bjs> greyblue9: what do the docs say
[23:20:08] *** Quits: Andrynet (~Andrynet@181.113.97.175) (Ping timeout: 252 seconds)
[23:20:22] <montpol> is this also bad code then:         odimg[np.abs(odimg) == np.inf] = np.nan
[23:20:22] <montpol> SnoopJ grym
[23:20:28] <bjs> greyblue9: the answer appears to be "yes, with exceptions" https://docs.python.org/3/library/os.html#os.rename
[23:21:24] <grym> montpol: the trouble you had before is that nan doesn't equal nan
[23:21:48] *** Joins: Auron (Auron956@user/auron)
[23:21:59] <grym> montpol: here this is saying "nan out all the elements that look infinite"; there might be a more natural way to express that, but you can actually compare to infinities so maybe this is ok
[23:22:06] *** Joins: Andrynet (~Andrynet@181.113.97.175)
[23:22:14] <JordiGH> inf == inf is true, yeah.
[23:22:14] <montpol> ah ok good to know thanks
[23:22:30] <montpol> the absolute is for im guessing if its -inf
[23:22:42] <grym> yeah, i would guess so as well
[23:22:51] <montpol> thanks :)
[23:22:53] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[23:23:00] <grym> but there's np.isinf :)
[23:23:02] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[23:23:10] <montpol> :O
[23:23:11] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:23:19] <grym> and we have a prior example in the channel of code that kind of shows the author wasn't up on their deep numpy
[23:24:53] *** Quits: NyaaTheCat (~CalculusC@user/calculuscat) (Quit: I have phased into another dimension, see ya later!)
[23:24:59] <montpol> odimg[np.isinf(odimg)] = np.nan
[23:25:03] <greyblue9> seems like `os.replace` is more cross-platform
[23:25:05] <montpol> that is much better
[23:25:29] *** Quits: BlueSky (~BlueSky@user/bluesky) (Quit: Leaving)
[23:25:33] <montpol> thanks for the tips grym!!!
[23:25:53] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[23:26:44] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[23:29:01] *** Quits: noarb- (~noarb@user/noarb) (Read error: Connection reset by peer)
[23:29:57] *** Quits: grooverman (~grooverma@177.102.119.40) (Remote host closed the connection)
[23:31:09] *** Joins: grooverman (~grooverma@177.95.12.14)
[23:31:52] *** Quits: rajkosto (~rajkosto@93-86-99-67.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[23:33:07] *** Joins: BSaboia (~bsaboia@177.37.198.35)
[23:33:09] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[23:34:42] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:35:32] *** Quits: jncraton (~jncraton@199.8.13.16) (Quit: leaving)
[23:36:28] *** Joins: noarb (~noarb@user/noarb)
[23:38:50] *** Quits: mags (~mags@097-090-237-145.res.spectrum.com) (Ping timeout: 252 seconds)
[23:39:23] *** Joins: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net)
[23:39:55] *** Joins: fructose (~fructose@user/fructose)
[23:40:07] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[23:40:21] *** Joins: hemstock (~hemstock@194.59.250.234)
[23:40:27] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:40:27] *** Joins: mags (~mags@097-090-237-145.res.spectrum.com)
[23:42:52] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[23:43:48] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Quit: Leaving)
[23:43:56] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[23:45:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[23:46:15] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:46:33] <Sheilong> How do I get the frequency of change in a datetime column in a pandas dataframe?
[23:46:54] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Ping timeout: 256 seconds)
[23:47:20] *** Joins: georgios (~georgios@user/georgios)
[23:47:47] *** Quits: Throgkt (~Throgkt@user/throgkt) (Quit:  )
[23:47:47] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[23:50:12] *** Quits: Themis3000 (~Thunderbi@user/themis3000) (Quit: Themis3000)
[23:51:29] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[23:51:46] *** Quits: georgios (~georgios@user/georgios) (Remote host closed the connection)
[23:51:48] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:53:33] *** Joins: audiobirb (~audio@user/audio)
[23:56:45] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[23:56:58] *** Joins: dba (uid502594@id-502594.hampstead.irccloud.com)
[23:56:59] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[23:57:21] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:58:06] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:f1ed:6887:90f:533)
