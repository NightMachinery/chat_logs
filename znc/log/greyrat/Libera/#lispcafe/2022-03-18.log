[00:00:18] <Lycurgus> dunno, didn do anything but go right to what was hanging in linux, and in mac it didn
[00:01:36] <Lycurgus> i suspect my connection to X on linux though, there are some layers
[00:02:03] <gilberth> Well, what I face is a feature of macos. Perhaps to save battery life [which battery, again?] or something. But still very annoying.
[00:02:31] <Lycurgus> prolly a way to turn that off
[00:02:38] <gilberth> Nope.
[00:02:50] <Lycurgus> and it should even be there if it's not a laptop
[00:03:16] <Lycurgus> there's a way, you may not be able find it though
[00:03:41] <Lycurgus> *shouldn even
[00:03:43] <gilberth> Yes, by patching the kernel perhaps.
[00:04:06] <Lycurgus> as a limit truth, but that's not what I meant
[00:04:38] <Lycurgus> gonna try something
[00:04:41] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[00:05:32] <gilberth> Well, it's very deep in the system and not documented and even the API to tell Cocoa what kind of process you have, that is if you care, doesn't work.
[00:08:05] <gilberth> Hmm, so far LW is not affected. But I am using the listener, which talks to the GUI. There are some actions which makes your timeouts obeyed again, it's only that I haven't figured out yet. Let's try w/o talking to the GUI.
[00:08:27] *** Joins: Lycurgus (~juan@98.4.112.204)
[00:08:40] <Lycurgus> yeah it was xauth
[00:10:50] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[00:11:05] <Lycurgus> so i'd rather just use it on mac till I can afford a priced edition
[00:15:08] <Lycurgus> hmm, not as hard to use on linux as I thought from the test of what worked
[00:15:21] <Lycurgus> just doesn't work thru vnc
[00:15:52] <Lycurgus> most stuff does but there are snags with xauth in odd cases
[00:15:58] <gilberth> I wonder if people actually care about the IDE of LispWorks.
[00:17:54] <Lycurgus> well obviously i do
[00:18:11] <gilberth> For what it is worth, when I don't use the GUI, LispWorks is affected, too. Let's see if a mere (write-line "hi") to the Listener is good enough to make macos behave.
[00:18:16] <Lycurgus> i'm aware if just used thru slime oder you wouldn see it
[00:18:46] <Lycurgus> but I loose confidence if the main modality the distributed product is supposed to operate in doesn't work
[00:18:48] <gilberth> Well, could have been that you care about CAPI or what it is called.
[00:19:50] <hayley> Good morning everyone!
[00:19:59] <gilberth> Nope, a mere (write-line "hi") is not enough. So LispWorks also has not found a secret way.
[00:20:35] <Lycurgus> yello hayley ; also i found I needed to upgrade sly (from it's 2019 state) to work with current sbcl
[00:21:03] <Lycurgus> what are you trynna do?
[00:22:16] <Lycurgus> not enough to do what?
[00:25:14] <gilberth> Not enough to make macos behave wrt to timeouts. There is some flag somewhere, which makes macos not respect timeouts. Some actions trigger it to be turned off again. Would I know which, I could fool macos.
[00:25:40] <Lycurgus> i c
[00:25:52] <Lycurgus> do you use xcode?
[00:26:10] <gilberth> As I really don't like the idea to spawn a second process and using it as a timeout server.
[00:26:21] <gilberth> Lycurgus: Nope. Why should I?
[00:26:58] <Lycurgus> well it's culture is where the thing should binary patching the kernel would be expected to be found
[00:27:20] <Lycurgus> way short, but i'm not sayin easy peasy
[00:27:38] <Lycurgus> *the thing short of binary patching
[00:28:05] <gilberth> Sure. And I can expect that putative users patch their kernel. And as it is closed source and signed, I very much doubt that a user could do that.
[00:28:31] <Lycurgus> :)
[00:29:13] <gilberth> I mean, I can't even put something into /usr/. And there are files in $HOME, I can't read. Not even as root. You're not the sysadmin anymore with macos. The machine is not yours.
[00:29:37] <Lycurgus> the hell it aint
[00:30:22] <Lycurgus> i own a thing
[00:31:19] <Lycurgus> pardon me, spring has sprung
[00:31:21] <gilberth> Well, the road is clear. Machintoshs will become iPhones without a SIM card but with a keyboard.
[00:34:24] <Lycurgus> and the i/mac/tv/watch/etc will fall off and there will be a second OS called OS
[00:36:21] <gilberth> Still, I am somewhat hooked to macos. But: I don't update as macos is getting worse and worse with time.
[00:37:29] <Lycurgus> if you use xcode, you're gonna build for native devices, you don't really have a choice
[00:38:19] <gilberth> I always have a choice. Nobody forces me to use Apple's products.
[00:38:23] <Lycurgus> 3-4 years is about as long as you can sit on a version
[00:38:42] <Lycurgus> i meant if you are going to develop for sale on their store
[00:38:59] <Lycurgus> or use on their current devices
[00:39:08] <gilberth> Sure, when I would, I would need to update.
[00:39:32] <gilberth> Lycurgus: One reason, I don't upgrade my hardware, too.
[00:44:11] <gilberth> And that root cannot read certain files is very bad. How am I supposed to back them up then? Apart from the fact that I don't like the idea that there is data on my disk, I cannot read.
[00:49:04] * hayley puts https://www.youtube.com/watch?v=kGWDAreaR5A on jukebox
[00:53:33] *** Joins: lisp123 (~lisp123@120.154.103.52)
[00:58:17] *** Quits: lisp123 (~lisp123@120.154.103.52) (Ping timeout: 240 seconds)
[00:59:13] *** Joins: dave0 (~dave0@069.d.003.ncl.iprimus.net.au)
[01:03:00] <hayley> Elvis Costello arc: quit computer programming and have a studio album released at 22yo
[01:05:07] <dave0> https://youtu.be/snPDoXl9ZPs
[01:05:08] -ixelp- Elvis Costello - Watching The Detectives - YouTube
[01:06:38] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[01:24:23] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[01:24:54] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[01:26:30] *** Quits: shka (~herr@109.231.3.55) (Ping timeout: 252 seconds)
[01:36:28] *** Quits: molson (~molson@172-103-21-94-dynamic.midco.net) (Remote host closed the connection)
[01:37:09] *** Joins: molson (~molson@172-103-21-94-dynamic.midco.net)
[01:39:32] *** Quits: molson (~molson@172-103-21-94-dynamic.midco.net) (Remote host closed the connection)
[01:40:00] *** Joins: molson (~molson@172-103-21-94-dynamic.midco.net)
[02:03:59] <hayley> https://www.youtube.com/watch?v=s5sNmErPKFQ
[02:04:00] -ixelp- Give Me Back My Name (2005 Remaster) - YouTube
[02:04:17] *** Quits: robin (~robin@user/terpri) (Ping timeout: 240 seconds)
[02:06:41] *** Quits: cosimone (~user@93-44-187-176.ip98.fastwebnet.it) (Read error: Connection reset by peer)
[02:10:52] *** Joins: cosimone (~user@93-44-187-176.ip98.fastwebnet.it)
[02:12:05] *** Quits: molson (~molson@172-103-21-94-dynamic.midco.net) (Remote host closed the connection)
[02:13:36] *** Joins: molson (~molson@172-103-21-94-dynamic.midco.net)
[02:24:32] *** Joins: robin (~robin@user/terpri)
[02:26:18] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Quit: ec)
[02:42:21] *** Joins: lisp123 (~lisp123@120.154.103.52)
[02:46:38] *** Quits: random-nick (~random-ni@87.116.176.196) (Ping timeout: 260 seconds)
[02:47:13] *** Quits: lisp123 (~lisp123@120.154.103.52) (Ping timeout: 256 seconds)
[02:50:17] * hayley .footdef > sup {vertical-align: baseline;}
[02:50:28] <hayley> Firefox: "vertical-align has no effect on this element since it's not an inline or table-cell element."
[02:50:35] <hayley> idk, it looks like it had an effect to me.
[02:51:55] <hayley> dave0: https://chaser.com.au/podcasts/pm-to-lower-the-price-of-beer-in-hopes-people-get-drunk-enough-to-vote-for-him/
[03:05:05] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[03:09:32] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[03:11:51] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[03:16:40] <dave0> hayley: lol
[03:17:04] <dave0> i think he's on to something
[03:20:29] <moon-child> https://0x0.st/oNX0.png  I think this is the dumbest graph I've ever seen
[03:21:16] <moon-child> 'latency as a function of cache level' I guess ... I guess it kinda approximates average latency as a function of _log_ of workingset size?
[03:23:04] <moon-child> (but why not just measure as a function of actual working set size?)
[03:25:50] * hayley scratches head
[03:26:12] <hayley> Yes, are the cache sizes the same? And clock speeds?
[03:32:33] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[03:34:19] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[03:43:20] <kakuhen> i don't even know what the graph is trying to demonstrate
[03:43:28] <kakuhen> also i hate graphs that say "more is better" "less is better"
[03:43:32] <kakuhen> better for what?
[03:43:47] <kakuhen> and if i don't understand the contents of a graph then telling me "__ is better" does not convince me that is the case
[03:44:03] <hayley> Working set (more is better)
[03:45:50] <hayley> Would anyone be offended if my "simplest possible dynamic translator" fused the two instructions "load address for label; jump there" into one JMP or CALL?
[03:47:33] <moon-child> peepholes are fair game
[03:47:40] <moon-child> but also that should predict pretty well
[03:48:04] <hayley> It's simpler in the end than introducing a mapping of VM location -> native location. Given that I wrote it all in nasm too.
[03:48:43] <moon-child> kakuhen: 'place in race (higher is better)'
[03:48:44] <hayley> Otherwise I do a 1-to-1 mapping of instructions, though I mention mapping stack locations to registers to avoid memory accesses after.
[03:49:57] <hayley> OTOH I don't know how effective a virtual stack would be, because there are no constraints on how the stack is manipulated. Worse, you can push a 16-bit value to the stack, and then do 8-bit operations on the top byte!
[03:50:23] <moon-child> even forth maintains a top-of-stack register
[03:50:44] <hayley> I would have loved to compile FORTH rather than this VM.
[03:53:27] <hayley> But I must have done something wrong, since this VM was designed to avoid bloatware, and to be suitable for continued use of older machines. Or 400x slower than native is just fine for them.
[03:55:33] <hayley> "Some people think these constraints are fun. We can't argue with personal preferences, but we can still argue that these constraints coincide with weaknesses of both humans and computers; the machine model is hard for humans to simulate, and a performant implementation of [snip] requires all the complexity of modern optimising compilers!"
[04:19:43] <hayley> One random thought: when it comes to understanding low-level hardware buggery, it is more educational to have a high-level language. The reason is that, if you just write inline assembler or something, you just have to work out one solution. Whereas, if you have to modify the compiler to generate faster code, you have to understand the mechanisms at play, and teach the compiler how to exploit them.
[04:21:20] *** Quits: dave0 (~dave0@069.d.003.ncl.iprimus.net.au) (Ping timeout: 250 seconds)
[04:24:16] <hayley> Granted, things like vectorisation and basic block positioning are hard enough that people give up and use deep learning. But you have to explain your thought process in code, for the compiler to use.
[04:36:23] *** Quits: robin (~robin@user/terpri) (Remote host closed the connection)
[04:49:30] *** Joins: Lycurgus (~juan@98.4.112.204)
[04:50:28] <Lycurgus> the west side story remake has reached it's end/affordable price for rental on yt
[04:58:11] *** Joins: razetime (~quassel@117.254.34.103)
[05:04:36] *** Quits: OlCe (~user@amontpellier-655-1-45-169.w109-210.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[05:06:08] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[05:06:48] <waleee> https://twitter.com/visegrad24/status/1504591511450796040 quite trippy seeing the hammer & sickle inside a christian cross
[05:27:20] *** Joins: robin (~robin@user/terpri)
[05:31:33] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[05:33:40] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[06:01:15] *** Quits: robin (~robin@user/terpri) (Remote host closed the connection)
[06:08:02] *** Joins: Inline__ (~Inline@p200300cd470af600c32f3b3744c2844b.dip0.t-ipconnect.de)
[06:08:04] *** Joins: robin (~robin@user/terpri)
[06:10:13] *** Quits: Inline (~Inline@p200300cd470bec006530e405655b2087.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[06:12:25] *** Quits: razetime (~quassel@117.254.34.103) (Read error: Connection reset by peer)
[06:34:29] *** Joins: razetime (~quassel@117.254.34.103)
[06:52:58] <kakuhen> the node-ipc drama has me thinking me again
[06:53:07] <kakuhen> what stops xach or anyone else from shipping literal malware into quicklisp
[06:53:46] <ck_> "node-ipc drama"?
[06:53:53] <kakuhen> as far as i'm concerned, quicklisp is only safe because xach is a cool person and likely wouldn't want to push malicious code to people
[06:54:01] <ck_> and nobody really, same with all open source, it is built on trust
[06:54:28] <ck_> as far as I understand there is no security or other audit going on with quicklisp, other than "must compile on sbcl"
[06:55:03] <kakuhen> right, builds are tested on different machines and if they fail then package author gets notified to fix it (or else they get off ql)
[06:55:13] <kakuhen> still nonetheless something i think about
[06:56:15] <hayley> I will threaten them with object capabilities?
[06:57:44] <kakuhen> also that reminds me about the security issues involved with what i want to do
[06:58:29] <kakuhen> say you want to extend some audio player to add support for some codec -- all fine i guess, just load the relevant package
[06:58:37] <kakuhen> but how do you stop that code from even attempting to do any networking
[06:58:48] <ck_> I see what you mean with the node package.. maybe I'll go back to pen, paper and slide rule for the meantime
[06:58:52] <kakuhen> i know for instance that in ffmpeg there's a policy where basically no encoder or decoder is allowed to do any sort of networking
[06:58:57] <kakuhen> i guess that's enforced with people rather than compilers
[06:59:12] <kakuhen> maybe with some fancy pledge() calls in openbsd you can somewhat enforce it at run-time
[06:59:13] <kakuhen> i wonder if common lisp has anything similar
[06:59:42] <kakuhen> oh right and there's also the linux equivalent of pledge/unveil but i dont remember its name
[06:59:52] <semz> Personally, I think QL's lack of authentication is a much more pressing issue than the possibility that Xach ships malware.
[07:01:39] <kakuhen> a friend jokingly said to me "closos will have fcges to solve this problem"
[07:01:45] <kakuhen> too bad i know nothing about closos or what a fcge is
[07:01:56] <GreaseMonkey> something something the main OSes are broken by design
[07:02:12] <GreaseMonkey> and we're stuck with the technical bankruptcy that we're left with
[07:04:13] <GreaseMonkey> the webdev community does not deserve wasm. i'm not sure what they deserve, but wasm is just too good of a design for them
[07:05:26] <GreaseMonkey> not to say it's a god-tier design or anything, but from what i've read, a lot of stuff that's just straight up given to you with OS APIs is optional in wasm and you have to explicitly require it somehow
[07:05:37] <hayley> GreaseMonkey: https://arxiv.org/abs/2112.11745
[07:06:57] <GreaseMonkey> wait, so it *is* made by web developers?
[07:07:36] *** Quits: molson (~molson@172-103-21-94-dynamic.midco.net) (Remote host closed the connection)
[07:08:32] <hayley> It's made by people with C programs.
[07:08:41] <GreaseMonkey> huh, ok, i was still probably right about there being some decent security in there... but why the fuck did they include eval
[07:10:27] *** Joins: Lycurgus (~juan@98.4.112.204)
[07:12:34] * hayley is trying to work out how to give a C++ program as little as possible to run while still having -fsanitize=address -fsanitize=undefined
[07:12:57] <hayley> Static linking doesn't work with sanitizing, so I need to give the sandbox something.
[07:14:14] <Lycurgus> 'trust but verify'; in practice the last part is unnecessary if you're paying attention
[07:14:36] <ck_> speak softly and carry a big diff
[07:15:18] <Lycurgus> trust ql, the thing xach beane but don't stupidly assume that extends to every package in ql, though it more or less does
[07:15:24] <hayley> I want a bot where someone gives it a C++ program, and it complains if your program is broken. The best way I know to do that, sadly, is to run with -fsanitize=address -fsanitize=undefined
[07:15:50] <Lycurgus> *thing xach bean maintains (as distinct from the content it works)
[07:16:02] <Lycurgus> *beane
[07:16:27] <ck_> *provides
[07:17:35] *** Joins: dave0 (~dave0@069.d.003.ncl.iprimus.net.au)
[07:17:57] <dave0> maw
[07:17:58] <hayley> bwrap --bind /tmp/program /tmp/program --ro-bind /lib64 /lib64 --ro-bind /usr/lib /usr/lib --ro-bind /proc /proc -- /tmp/program
[07:19:48] *** Quits: razetime (~quassel@117.254.34.103) (Ping timeout: 240 seconds)
[07:20:04] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[07:20:04] <GreaseMonkey> ok, from what i've seen in that paper, the two main issues appear to be 1. stack smashing which can corrupt data (but not return addresses) and 2. the commonly-used memory allocator not checking if the pointer is correct before free()ing
[07:20:25] <Lycurgus> i would want my bot to complain that 'broken' was ill defined or offer an interminable list of candidates, eg. has no proof, has warnings, ... .
[07:20:37] <GreaseMonkey> ...hot damn this is a new paper, preprint for late april this year
[07:21:52] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[07:22:14] <hayley> I got to cite it for an article, for another VM which is just as bad, but it also has un-sandboxable access to the file system.
[07:22:42] <hayley> So you are basically running a native executable at this point. Oops.
[07:23:04] *** Joins: molson (~molson@172-103-21-94-dynamic.midco.net)
[07:28:02] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[07:28:38] <hayley> "let me tell you about -fsanitize=undefined" "that breaks my program" "I think it was broken before, and you just found out"
[07:29:12] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[07:30:35] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Quit: WeeChat 3.4.1)
[07:32:26] *** Quits: molson (~molson@172-103-21-94-dynamic.midco.net) (Quit: Leaving)
[07:37:58] *** Joins: semz_ (~semz@user/semz)
[07:38:31] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Read error: Connection reset by peer)
[07:40:40] *** Quits: semz (~semz@user/semz) (Ping timeout: 250 seconds)
[07:45:59] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Ping timeout: 252 seconds)
[07:48:36] *** semz_ is now known as semz
[07:51:30] *** Joins: razetime (~quassel@117.254.34.103)
[09:06:54] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[09:09:03] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[09:20:12] *** Joins: shka (~herr@109.231.3.55)
[09:35:29] <hayley> moon-child: "A simple counter thats incremented on reference and then the memory is released when it hits zero is jet-fast compared to a garbage collector that has to run periodically." lol
[09:36:31] <hayley> This description of RC is broken, because they never actually mentioned decrementing when you are done with a reference. lol
[09:37:00] <kakuhen> refcounting good because it sounds like malloc/free to me, GC bad because it's GC!!!
[09:37:07] <moon-child> obviously, you free the object when the counter overflows
[09:37:09] <moon-child> duh
[09:37:17] <hayley> Thanks!
[09:40:23] *** Quits: lagash (lagash@lagash.shelltalk.net) (Ping timeout: 252 seconds)
[09:41:07] <hayley> But, yeah, you just increment on every reference, and that's definitely going to be jet fast. Definitely. Absolutely. It definitely won't screw up your cache at all.
[09:42:16] <moon-child> hey.  You were going to do deferred rc
[09:42:47] <moon-child> I actually think rc might not be _too_ bad given sufficient static optimization.  But they had an interpreter, so I doubt they would hav sprung for something like that
[09:42:59] <hayley> *ulterior, acshually
[09:43:14] *** Joins: lagash (lagash@lagash.shelltalk.net)
[09:43:43] <hayley> But naive RC makes a move between two registers adjust counts, whereas deferred doesn't. That saves you a lot of RC updates, though granted it's still more than the 0 in tracing.
[09:47:40] <hayley> And then ulterior RC uses a moving nursery, and doesn't bother to adjust counts for new objects, basically treating them as roots for deferred RC instead.
[09:52:52] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[09:53:06] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[10:01:46] *** Joins: molson (~molson@172-103-21-94-dynamic.midco.net)
[10:01:47] *** Joins: molson_ (~molson@172-103-21-94-dynamic.midco.net)
[10:09:14] *** Quits: cross (~cross@spitfire.i.gajendra.net) (*.net *.split)
[10:14:34] *** Joins: cross (~cross@spitfire.i.gajendra.net)
[10:23:23] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[10:25:16] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[10:27:32] <moon-child> 'lively linear refcounts: look ma, no adjustments!'
[10:29:16] <hayley> https://www.youtube.com/watch?v=G6SYVV_Pu5Y
[10:29:16] -ixelp- I Held My Breath For 1 Month In Survival Minecraft - YouTube
[10:35:42] <hayley> It's called "deferred" cause you infrequently scan the roots, increment refcounts from the roots, free what didn't get incremented, and then decrement again. A bit like doing a bit of mark work, but then RCing the rest.
[10:41:00] <hayley> https://rmod-files.lille.inria.fr/FreeBooks/BitsOfHistory/BitsOfHistory.pdf p.331 claims it saves 91% of RC updates by deferral.
[10:48:01] *** Quits: molson (~molson@172-103-21-94-dynamic.midco.net) (Quit: Leaving)
[10:55:27] *** Joins: rotateq (~user@ip-078-094-235-194.um19.pools.vodafone-ip.de)
[10:57:24] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[11:00:13] <hayley> And then https://people.cs.umass.edu/~emery/classes/cmpsci691s-fall2004/papers/ulterior-reference-counting.pdf p.8 claims to only produce like 5% the increments and 11% the decrements of deferred reference counting. So I think there is a huge margin between URC and naive RC.
[11:04:50] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[11:05:38] *** Quits: shka (~herr@109.231.3.55) (Ping timeout: 250 seconds)
[11:45:12] <moon-child> ttps://www.youtube.com/watch?v=kdMG40wUCm4
[11:56:53] *** Quits: razetime (~quassel@117.254.34.103) (Ping timeout: 256 seconds)
[11:58:28] *** Joins: random-nick (~random-ni@87.116.167.125)
[12:05:36] *** Quits: Posterdati (~posterdat@user/Posterdati) (Read error: Connection reset by peer)
[12:07:30] *** Joins: razetime (~quassel@117.254.34.103)
[12:15:11] *** Joins: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net)
[12:16:36] *** Quits: razetime (~quassel@117.254.34.103) (Ping timeout: 245 seconds)
[12:17:11] *** Joins: razetime (~quassel@117.254.34.103)
[12:20:50] * hayley wonders if this new, much worse, FTB launcher will still know where to locate her worlds from the old launcher.
[12:20:57] <hayley> It didn't know that I had anything installed before, so I'm not counting on it.
[12:23:12] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[12:27:19] <hayley> Yes, it did not. Oh well.
[12:28:25] <selwyn> https://twitter.com/bantg/status/1504213698658938881?s=20&t=sVYgvBKfZqjFNwdheVGQkQ
[12:30:03] <hayley> OTOH I'm a bit bored of the tech mod packs, even though I end up doing the same thing and don't touch too many mods in the process.
[12:32:36] *** Joins: Posterdati (~posterdat@user/Posterdati)
[12:36:55] *** Joins: Oddity (~Oddity@user/oddity)
[13:04:41] *** Joins: dickbar__ (~dickbaren@86-90-132-28.fixed.kpn.net)
[13:31:51] *** Joins: lisp123 (~lisp123@120.154.103.52)
[13:36:37] *** Quits: lisp123 (~lisp123@120.154.103.52) (Ping timeout: 256 seconds)
[13:40:41] <hayley> "Lisp is a language where all data and code is represented as lists" Average Lisp non-user
[13:41:21] * moon-child wonders how they expect to represent anything without symbols, at least
[13:42:19] <moon-child> (defconstant nil '#1=(#1# . #1#)) (defconstant a (cons nil nil)) (defconstant b (cons nil nil))... perhaps?  But, of course, lisp is also 'functional', and therefore does not have mutability nor EQ
[13:42:38] <kakuhen> >Lisp is a language where all data and code is represented as lists
[13:42:42] <kakuhen> keywords are my favorite lists
[13:42:46] <kakuhen> how about you?
[13:43:03] <hayley> https://www.reddit.com/r/transprogrammer/comments/tfwe03/define_uwu_display_nyan/i0ypb4v/ thanks I regret posting about parallelising SBCL GC
[13:43:04] -ixelp- (define (uwu) (display "nya~\n")) : transprogrammer
[13:43:05] <moon-child> (symbol-plist :kakuhen)
[13:43:27] *** Quits: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net) (Quit: Client closed)
[13:43:44] * hayley uploaded an image: (114KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/XBohbRsKufPUiqCAKwmQYwGZ/lamport-is-dead-inside.jpeg >
[13:44:01] <kakuhen> (setf (symbol-plist :cl-user) nil)
[13:44:04] <kakuhen> nothing personnel, kid
[13:46:16] <kakuhen> hayley: this confuses me
[13:46:26] <kakuhen> not the joke but the specific pipeline
[13:46:39] <kakuhen> afaik RMS is the only man on earth who would go to emacs lisp from common lisp
[13:47:11] <hayley> The real based pipeline: Java -> Haskell -> Clojure -> Smalltalk -> Common Lisp
[13:47:35] <rotateq> i like that :)
[13:48:03] <kakuhen> ahaha is that sequence exact at  clojure?
[13:48:17] <kakuhen> so smalltalk can be realized as a quotient of clojure with haskell
[13:48:34] <kakuhen> err sorry, clojure as a quotient of haskell and smalltalk
[13:48:43] <selwyn> maths has entered the chat
[13:49:16] <hayley> Bacon et al's "A Unified Theory of Garbage Collection" agrees with me that deferred RC is like doing a bit of tracing work from the stack every so often.
[13:50:26] <kakuhen> oh also i learned a fun fact about WSL
[13:50:39] <kakuhen> turns out WSL "just works" if you use windows 11, but my friend is using windows 10
[13:50:47] <kakuhen> and windows 10 doesnt have a functioning x server out of the box
[13:51:02] <kakuhen> so i have to open that can of worms now.... 
[13:51:33] <kakuhen> unfortunately the machine i was testing everything on ran windows 11, and the experience had very minimal hassle, besides an outdated ubuntu meaning outdated emacs package
[13:51:54] <kakuhen> but SBCL is surprisingly up-to-date on ubuntu 20.04
[13:52:22] * hayley uploaded an image: (18KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/lZVsgJjimDkxKLIesAGPnqOf/older-first.png >
[14:09:49] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 256 seconds)
[14:10:27] <kakuhen> is there a way to use loop to get both index and element of a vector?
[14:10:50] <kakuhen> i know we have (loop for element across vector ...) but I'm wondering if there is a method more "elegant" than incrememnting my own counter
[14:11:02] <hayley> (loop for i from 0 for element across vector ...)
[14:11:13] <kakuhen> ah that's exactly what i wanted, thanks hayley!
[14:26:31] <pjb> also: (loop for i below (length vector) for element = (aref vector i) do …)
[14:27:13] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[14:30:49] *** Quits: easye (~user@oxi.slack.net) (Remote host closed the connection)
[14:37:39] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[14:54:21] *** Joins: vats (~vats@103.16.30.139)
[15:01:02] *** Quits: razetime (~quassel@117.254.34.103) (Ping timeout: 240 seconds)
[15:04:19] *** Joins: Oddity (~Oddity@user/oddity)
[15:04:26] *** Quits: vats (~vats@103.16.30.139) (Ping timeout: 260 seconds)
[15:04:26] *** Joins: razetime (~quassel@117.254.34.103)
[15:05:48] <hayley> White_Flame: https://www.youtube.com/watch?v=7VoOXem0fhc
[15:05:48] -ixelp- Say Hello To Erlang - YouTube
[15:09:39] *** Joins: Lycurgus (~juan@98.4.112.204)
[15:13:24] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 240 seconds)
[15:21:22] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[15:30:37] *** Quits: Brucio-61 (~Brucio-35@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[15:31:18] *** Quits: scymtym (~user@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[15:33:28] <mfiano> hello
[15:33:45] <mfiano> Can someone try highlighting me please?
[15:34:47] <hayley> mfiano: I can't
[15:34:55] <mfiano> Thanks
[15:37:12] *** Quits: dickbar__ (~dickbaren@86-90-132-28.fixed.kpn.net) ()
[15:43:17] *** Joins: shka (~herr@109.231.3.55)
[15:48:33] <kakuhen> lowlight
[15:53:06] <selwyn> https://en.wikipedia.org/wiki/Q_(programming_language_from_Kx_Systems) has anyone used this thing
[15:55:15] *** Joins: REP (~REP@h-158-174-126-192.A163.priv.bahnhof.se)
[15:55:36] <SAL9000> test
[15:58:16] *** Quits: REP (~REP@h-158-174-126-192.A163.priv.bahnhof.se) (Read error: Connection reset by peer)
[16:04:09] *** Joins: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net)
[16:05:06] *** Joins: Lycurgus (~juan@98.4.112.204)
[16:05:30] <Lycurgus> the west side story is so good
[16:05:32] <sham1> SAL9000: success. I assume
[16:05:37] <Lycurgus> *story remake
[16:05:55] <SAL9000> sham1: well it *starts*... whether it works is another question :p
[16:06:03] <SAL9000> lots of "exception in another thread" going on here.
[16:06:34] <Lycurgus> but the most exquisite part is how it was a box office bomb
[16:08:32] <Lycurgus> in other news, i think putlers 'traitors and scum' (AKA 'oysters and gender freedom') speech will be remembered 
[16:09:58] <Lycurgus> vlad grozny
[16:18:41] *** Joins: scymtym (~user@2001:638:504:20e6:6ac3:87e0:e782:f3fc)
[16:21:26] *** Joins: Brucio-61 (~Brucio-35@2001:638:504:20e6:6ac3:87e0:e782:f3fc)
[16:23:07] <shka> people finally realize what a shit show Russia is
[16:23:09] <shka> great
[16:23:26] <shka> west has eastern europe lesson
[16:32:39] <ck_> realize how? is something in the news I have not seen yet?
[16:34:36] <Lycurgus> you seem to ask something of the masses or the media directed to them
[16:34:49] <Lycurgus> presumably the western masses
[16:36:19] <Lycurgus> who are not known for their appetite for subtleties
[16:36:47] <Lycurgus> but the realities of russia's current condition are broadly understood
[16:37:33] <Lycurgus> for example in about 20% of the population of the russian federation
[16:37:53] <Lycurgus> the other 80% are the counter part to the western masses
[16:38:23] <Lycurgus> declining demographics
[16:38:44] <Lycurgus> a very narrow power elite (about a 100 individuals)
[16:39:06] <Lycurgus> an economy the size of that of texas roughly
[16:39:12] <Lycurgus> etc., etc.
[16:40:32] <Lycurgus> the 80% that are swallowing the line being put out by state media
[16:41:40] <Lycurgus> like the trump believers, there's a fundamental yearning to conflate belief and truth, to assert the latter from the former
[16:45:12] <Lycurgus> not to mention a humiliating defeat reminiscent of finland 1940
[16:46:13] <Lycurgus> and by humiliating defeat I mean the exposure of utter military incompetence
[16:46:55] <Lycurgus> again similar to finland, which it's generally acknowledge signaled to hitler that barbarossa was in order
[16:48:40] *** Joins: Psybur (~Psybur@mobile-166-171-56-243.mycingular.net)
[16:53:42] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Quit: WeeChat 3.4)
[16:54:15] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[17:04:27] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[17:05:23] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[17:08:33] *** Quits: jmiven (~vpm@pham.algeb.re) (Quit: reboot)
[17:09:15] *** Joins: jmiven (~vpm@pham.algeb.re)
[17:14:11] <ck_> selwyn: https://github.com/RIAEvangelist/node-ipc/issues/308
[17:14:13] -ixelp- American NGO affected by your recklessness · Issue #308 · RIAEvangelist/node-ipc · GitHub
[17:40:48] <shka> selwyn: this is also kinda cool https://somafm.com/cliqhop/
[17:40:50] -ixelp- SomaFM: cliqhop idm: Blips'n'beeps backed mostly w/beats. Intelligent Dance Music. Commercial-free, Listener-supported R [...]
[17:52:49] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Read error: Connection reset by peer)
[17:53:54] *** Joins: vats (~vats@103.16.30.139)
[17:55:33] *** Quits: sunarch (sid526836@user/sunarch) (Ping timeout: 250 seconds)
[17:55:33] *** Quits: iquites (sid77830@id-77830.lymington.irccloud.com) (Ping timeout: 250 seconds)
[17:56:36] *** Joins: iquites (sid77830@id-77830.lymington.irccloud.com)
[17:56:36] *** Joins: sunarch (sid526836@user/sunarch)
[17:58:42] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[18:01:47] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[18:02:10] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[18:03:51] *** Quits: razetime (~quassel@117.254.34.103) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:04:06] *** Joins: razetime (~quassel@117.254.34.103)
[18:05:26] *** Quits: razetime (~quassel@117.254.34.103) (Client Quit)
[18:05:41] *** Joins: razetime (~quassel@117.254.34.103)
[18:06:28] *** Inline__ is now known as Inline
[18:07:30] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Read error: Connection reset by peer)
[18:08:46] *** Quits: vats (~vats@103.16.30.139) (Ping timeout: 260 seconds)
[18:09:41] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[18:14:43] *** Quits: dave0 (~dave0@069.d.003.ncl.iprimus.net.au) (Read error: Connection reset by peer)
[18:16:14] *** Quits: rotateq (~user@ip-078-094-235-194.um19.pools.vodafone-ip.de) (Remote host closed the connection)
[18:19:58] *** Joins: dave0 (~dave0@069.d.003.ncl.iprimus.net.au)
[18:29:24] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[18:31:12] *** Joins: easye (~user@oxi.slack.net)
[18:31:33] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[18:50:08] *** Quits: dave0 (~dave0@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[18:58:29] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 268 seconds)
[18:59:53] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[19:01:23] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[19:09:00] *** Quits: X-Scale (~ARM@89.214.146.79) (Ping timeout: 240 seconds)
[19:11:20] *** Joins: X-Scale (~ARM@92.250.103.125)
[19:38:27] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[19:59:49] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 240 seconds)
[20:01:33] *** Quits: molson_ (~molson@172-103-21-94-dynamic.midco.net) (Remote host closed the connection)
[20:01:53] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[20:09:28] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 250 seconds)
[20:11:29] *** Joins: aeth (~aeth@user/aeth)
[20:29:37] *** Quits: razetime (~quassel@117.254.34.103) (Ping timeout: 240 seconds)
[21:26:30] *** Joins: OlCe (~user@lfbn-nic-1-262-219.w90-116.abo.wanadoo.fr)
[21:27:55] *** Joins: molson (~molson@172-103-21-94-dynamic.midco.net)
[22:02:34] *** Joins: vats (~vats@103.16.30.139)
[22:30:03] *** Quits: v3ga (~v3ga@2603-6080-5204-3b35-0000-0000-0000-18ad.res6.spectrum.com) (Remote host closed the connection)
[22:30:21] *** Joins: v3ga (~v3ga@2603-6080-5204-3b35-0000-0000-0000-18ad.res6.spectrum.com)
[22:32:27] *** Quits: molson (~molson@172-103-21-94-dynamic.midco.net) (Remote host closed the connection)
[22:34:12] *** Joins: molson (~molson@172-103-21-94-dynamic.midco.net)
[22:54:48] *** Joins: Oddity (~Oddity@user/oddity)
[22:55:24] *** Quits: vats (~vats@103.16.30.139) (Ping timeout: 240 seconds)
[22:58:46] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Quit: WeeChat 3.4.1)
[23:11:02] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[23:12:13] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[23:16:57] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[23:18:31] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[23:20:02] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[23:22:08] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Client Quit)
[23:23:08] *** Quits: molson (~molson@172-103-21-94-dynamic.midco.net) (Remote host closed the connection)
[23:29:47] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[23:34:04] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[23:35:35] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 240 seconds)
[23:37:54] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[23:53:15] *** Joins: molson (~molson@172-103-21-94-dynamic.midco.net)
[23:54:51] *** Quits: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net) (Ping timeout: 256 seconds)
