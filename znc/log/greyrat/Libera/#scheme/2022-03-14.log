[00:11:57] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[00:32:29] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[00:42:24] *** Parts: casmajavi (~casmajavi@user/casmajavi) (Leaving)
[00:46:55] *** Quits: lumberjack123 (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 240 seconds)
[00:51:20] *** Joins: lumberjack123 (~alMalsamo@gateway/tor-sasl/almalsamo)
[00:51:46] *** Joins: mnieper` (~user@ipbcc1ad82.dynamic.kabel-deutschland.de)
[00:53:08] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[01:12:35] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 240 seconds)
[01:14:42] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[01:18:11] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:24:42] *** Joins: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-231.dsl.bell.ca)
[01:31:45] *** Joins: badkins (~badkins@136.56.92.199)
[01:35:48] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 240 seconds)
[01:38:27] *** Quits: mnieper (~user@212.30.36.27) (Ping timeout: 252 seconds)
[01:39:33] *** Quits: cybersyn (~user@42.113.121.31) (Ping timeout: 252 seconds)
[01:41:27] *** Joins: badkins (~badkins@136.56.92.199)
[01:42:12] *** Joins: hashfunc569 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96)
[01:50:39] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[01:54:07] *** Quits: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-231.dsl.bell.ca) (Remote host closed the connection)
[01:54:26] *** Joins: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-231.dsl.bell.ca)
[02:10:55] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[02:13:57] *** Quits: nmeum (~nmeum@barium.8pit.net) (Remote host closed the connection)
[02:14:14] *** Joins: nmeum (~nmeum@barium.8pit.net)
[02:20:26] <Zipheir> Why isn't Scheme "good for data description"?
[02:23:54] <Zipheir> sonny: ^
[02:24:20] <wasamasa> it doesn't have cryptic C syntax
[02:32:38] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[02:33:37] *** Quits: hashfunc569 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96) (Ping timeout: 240 seconds)
[02:36:35] <sonny> Zipheir: it can't handle arbitrary bit patterns
[02:37:25] *** Joins: notzmv (~zmv@user/notzmv)
[02:37:30] <Zipheir> sonny: Use a bit or bytevector?
[02:38:01] <Zipheir> (bitvectors as in SRFI 178)
[02:38:24] <Zipheir> sonny: Do you mean some literal notation for bitstrings?
[02:39:12] <sonny> ah no
[02:39:22] *** Joins: eddof13 (~eddof13@192.154.196.148)
[02:39:23] <sonny> just a way to lay out data on a bit level
[02:41:48] <Zipheir> Does any high-level language provide that?
[02:42:00] *** Quits: eddof13 (~eddof13@192.154.196.148) (Client Quit)
[02:42:25] <wasamasa> erlang?
[02:42:58] <Zipheir> I know people assume C gives them bit-for-bit control of data structure representations, but I don't think the standards support that beyond some things about field alignment.
[02:43:02] <sonny> Zipheir: apart from c++, I don't think so
[02:43:14] <wasamasa> http://www.erlang.org/doc/programming_examples/bit_syntax.html
[02:43:41] <wasamasa> there's a bitstring egg
[02:44:06] <Zipheir> wasamasa: Those look a lot like bytevectors.
[02:44:22] <wasamasa> description, not data types
[02:44:45] <wasamasa> this syntax is about translating some prototol description to pattern matching code
[02:44:56] <Zipheir> Ah.
[02:45:21] <Zipheir> Doesn't the Cartwright-Shinn matcher for Scheme support matching against bytevector literals?
[02:45:46] <wasamasa> example 4 shows such a usecase
[02:45:55] <Zipheir> sonny: Admittedly, standard Scheme didn't even have bytevectors pre-R6RS.
[02:46:33] <Zipheir> wasamasa: Makes sense.
[02:46:46] <sonny> makes sense, didn't seem like something for scheme's intented audience
[02:46:53] <sonny> intended*
[02:48:01] <Zipheir> sonny: I don't think that's why.  Most Schemes *had* u8vectors, IIUC.  The pre-R6 standards are just very small.
[02:48:31] <Zipheir> (u8vector ≡ bytevector, except in Guile)
[02:49:52] <Zipheir> wasamasa: In any case, you can get something very similar to that with Scheme's pattern matching and bit lists/vectors/streams.
[02:50:04] <wasamasa> yes, see the bitstring egg :P
[02:50:19] <sonny> fair enough, although it is kinda klunky if I was working at this level all the time
[02:50:49] <Zipheir> wasamasa: I didn't immediately think to look at CHICKEN eggs, this being #scheme.
[02:51:25] <Zipheir> sonny: If you're working at this level all the time, you'd extend the language to give you what you want, I guess.
[02:51:46] <sonny> yeah
[02:52:16] <Zipheir> (The classic Lisp kick-the-can-down-the-road response: "no, we don't have it, but we give you everything you need to implement it".)
[02:53:35] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[02:54:55] *** Quits: lumberjack123 (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 240 seconds)
[03:19:55] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Quit: jrincayc)
[03:20:31] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:22:44] *** Quits: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-231.dsl.bell.ca) (Remote host closed the connection)
[03:23:03] *** Joins: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-231.dsl.bell.ca)
[03:27:53] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[03:30:44] <aeth> amazigh: try PCPartPicker. It supports a lot of countries these days. Idk if it's all of equal quality. https://pcpartpicker.com/
[03:30:44] *** Joins: TCZ (~tcz@91.150.178.124)
[03:31:25] <aeth> amazigh: the user interface is confusingly built around building an entire PC as the main supported path, but it works for individual parts too
[03:31:36] <aeth> e.g. https://pcpartpicker.com/products/cpu/
[03:32:31] <aeth> It provides the Amazon prices, but not the Amazon price history because Amazon forbids sites from doing that.
[03:32:36] <aeth> Everything else has a history, too.
[03:34:49] <aeth> sonny: You don't have to use lists at all... there are plenty of data structures available. It's a bit unfortunate that all of the good procedure names are reserved for lists, though.
[03:36:02] <sonny> yeah
[03:36:26] <X-Scale> https://www.reuters.com/world/russia-seeks-military-equipment-china-after-ukraine-invasion-reports-2022-03-13/
[03:36:27] <rudybot> https://teensy.info/9uHoFbVkMZ
[03:36:28] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[03:36:30] <sonny> I think trees are probably a better backing data structure to start in the kernel
[03:36:58] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Client Quit)
[03:39:18] <sonny> well, once size doesn't fit all, tbh
[03:40:36] *** Joins: seninha (~chatzilla@user/seninha)
[03:40:43] <Zipheir> sonny: Tree = list of (among other things) lists
[03:42:09] <Zipheir> aeth: It's too bad we can't just use (import (prefix ...)) to provide the vector-, etc. prefixes.  We're kind of stuck with the long names.
[03:47:48] *** Quits: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-231.dsl.bell.ca) (Remote host closed the connection)
[03:48:08] *** Joins: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-231.dsl.bell.ca)
[03:49:45] <sonny> Zipheir: I'm optmizing in my head
[03:50:17] <Zipheir> That's guaranteed to be premature optimization :)
[03:51:04] <sonny> not when I'm making a kernel
[03:51:15] <sonny> I don't want this part to be opaque
[03:51:15] <Zipheir> But I'm serious.  Building trees with conses works just fine.
[03:51:35] <sonny> what if I want leaves to be in an array?
[03:52:21] <Zipheir> Well, it's not going to work for everything.
[03:56:46] *** Joins: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo)
[04:00:57] <Zipheir> I know that sometimes people get into thinking that there is "one true" representation for some abstract type, so I'm emphasizing that there's nothing heretical about cons-based trees.
[04:01:48] *** Joins: zacque (~zacque@124.82.52.252)
[04:14:11] <aeth> In Scheme, the heresy is not using cons pairs
[04:16:32] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[04:30:23] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220226204633])
[04:52:51] *** Quits: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-231.dsl.bell.ca) (Ping timeout: 256 seconds)
[05:00:26] *** Joins: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-231.dsl.bell.ca)
[05:00:47] *** Parts: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-231.dsl.bell.ca) ()
[05:01:43] *** Quits: TCZ (~tcz@91.150.178.124) (Quit: Leaving)
[05:37:58] *** Joins: frost (~frost@user/frost)
[06:17:09] *** alMalsamo is now known as lumberjack123
[06:21:07] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[06:23:55] *** Quits: Avichi (~Avichi@2a02:a460:7aa6:1:a944:f298:3868:4c64) (Quit: Ping timeout (120 seconds))
[06:27:34] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 250 seconds)
[06:39:55] *** Quits: lwhjp (~user@softbank126150065004.bbtec.net) (Remote host closed the connection)
[06:49:20] *** Joins: hashfunc569 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96)
[06:57:35] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Ping timeout: 240 seconds)
[07:05:03] *** Quits: klf (~fkl@67.216.58.219) (Remote host closed the connection)
[07:12:17] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 252 seconds)
[07:17:04] *** Joins: cybersyn (~user@42.113.121.83)
[07:18:54] *** Quits: m455 (~m455@user/m455) (Ping timeout: 252 seconds)
[07:19:58] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[07:20:02] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[07:24:44] <lockywolf> Could someone remind me whether it is allowed to treat all symbols as defined by default?
[07:26:35] *** Quits: xgqt (~xgqt@gentoo/developer/xgqt) (Quit: WeeChat 3.3)
[07:36:03] <fizzie> R5RS (since that's where I remember it from): "Some implementations of Scheme use an initial environment in which all possible variables are bound to locations, most of which contain undefined values."
[07:39:20] <lockywolf> fizzie, thanks!
[07:43:48] *** Quits: hashfunc569 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96) (Ping timeout: 240 seconds)
[07:44:42] *** Quits: jao (~jao@45.134.142.225) (Ping timeout: 250 seconds)
[08:11:06] <Zipheir> Wow.
[08:11:28] <Zipheir> I wonder if any implementations do that?
[08:16:07] *** Joins: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-231.dsl.bell.ca)
[08:36:25] *** Joins: Darkcoal (~user@user/Darkcoal)
[08:47:27] *** Quits: cybersyn (~user@42.113.121.83) (Ping timeout: 256 seconds)
[08:48:14] *** Joins: xgqt (~xgqt@gentoo/developer/xgqt)
[08:59:26] *** Quits: robin (~robin@user/terpri) (Remote host closed the connection)
[09:29:58] <lockywolf> Chez
[09:30:05] <lockywolf> Also Chibi
[09:34:46] *** Quits: ski (~ski@remote12.chalmers.se) (Quit: Lost terminal)
[09:39:54] *** Joins: ski (~ski@remote12.chalmers.se)
[09:40:19] *** Parts: ski (~ski@remote12.chalmers.se) ()
[09:40:27] *** Joins: ski (~ski@remote12.chalmers.se)
[09:41:01] <Zipheir> Chez does allow set! without a corresponding define or let.  chibi doesn't.
[09:55:43] *** Joins: karlosz (~karlosz@47.151.136.69)
[10:28:49] *** Quits: mdhughes (~mdhughes@user/mdhughes) (Quit: Returning to Simulacron-1)
[10:34:01] *** Joins: mdhughes (~mdhughes@user/mdhughes)
[10:35:02] *** Quits: clacke (88d96f2df3@knopi.disroot.org) (Read error: Connection reset by peer)
[10:37:33] *** Joins: robin (~robin@user/terpri)
[10:38:00] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 272 seconds)
[10:40:05] *** Joins: Darkcoal (~user@user/Darkcoal)
[10:46:56] *** Quits: m1dnight_ (~christoph@78-22-9-5.access.telenet.be) (Quit: WeeChat 3.4)
[10:47:17] *** Joins: m1dnight (~christoph@78-22-9-5.access.telenet.be)
[10:47:20] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[11:02:04] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 272 seconds)
[11:03:19] *** Joins: Darkcoal (~user@user/Darkcoal)
[11:11:17] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 240 seconds)
[11:11:42] *** Joins: Darkcoal (~user@user/Darkcoal)
[11:12:04] *** Joins: thevishy (~Nishant@49.37.242.151)
[11:12:27] *** Quits: zacque (~zacque@124.82.52.252) (Quit: Goodbye :D)
[11:14:00] *** Quits: mnieper` (~user@ipbcc1ad82.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[11:14:10] *** Joins: zacque (~zacque@124.82.52.252)
[11:16:52] *** Quits: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-231.dsl.bell.ca) (Quit: Client closed)
[11:19:08] *** Quits: thevishy (~Nishant@49.37.242.151) (Quit: Leaving)
[11:20:08] *** Joins: nishant (~Nishant@49.37.242.151)
[11:23:00] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 240 seconds)
[11:24:50] *** Quits: karlosz (~karlosz@47.151.136.69) (Ping timeout: 250 seconds)
[11:24:55] *** Joins: Darkcoal (~user@user/Darkcoal)
[11:32:12] *** Joins: klovett_ (~klovett@107.116.92.161)
[11:35:24] *** Quits: klovett (~klovett@107.116.92.161) (Ping timeout: 240 seconds)
[11:46:11] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 252 seconds)
[11:46:31] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[11:47:41] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 272 seconds)
[11:47:45] *** Joins: Darkcoal (~user@user/Darkcoal)
[11:48:30] *** Joins: frost (~frost@user/frost)
[11:49:12] *** Joins: aeth (~aeth@user/aeth)
[11:52:36] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 240 seconds)
[11:54:26] *** Joins: Darkcoal (~user@user/Darkcoal)
[11:55:17] *** Joins: badkins (~badkins@136.56.92.199)
[11:59:24] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 240 seconds)
[12:01:58] *** Joins: mnieper (~user@137.250.162.24)
[12:10:45] *** Quits: m1dnight (~christoph@78-22-9-5.access.telenet.be) (Quit: WeeChat 3.4.1)
[12:11:24] *** Joins: m1dnight (~christoph@78-22-9-5.access.telenet.be)
[12:13:07] *** Joins: Avichi (~Avichi@2a02:a460:7aa6:1:a944:f298:3868:4c64)
[12:22:12] *** Quits: frost (~frost@user/frost) (Quit: Client closed)
[12:29:10] *** Joins: frost (~frost@user/frost)
[12:30:21] *** Quits: frost (~frost@user/frost) (Client Quit)
[12:35:02] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 260 seconds)
[12:37:19] *** Joins: Darkcoal (~user@user/Darkcoal)
[12:41:29] *** Quits: Avichi (~Avichi@2a02:a460:7aa6:1:a944:f298:3868:4c64) (Ping timeout: 256 seconds)
[12:53:04] *** Joins: gproto23 (~gproto23@user/gproto23)
[12:54:32] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[12:56:24] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[13:09:55] *** Joins: vats (~vats@103.158.91.1)
[13:43:59] *** Joins: civodul (~user@guix/contributor/civodul)
[13:46:28] *** Quits: cedb (~ced@user/ouestbillie) (Read error: Connection reset by peer)
[13:46:50] *** Joins: kjak (~kjak@pool-108-45-56-21.washdc.fios.verizon.net)
[13:46:50] *** Joins: cedb (~ced@user/ouestbillie)
[13:57:08] *** Quits: nishant (~Nishant@49.37.242.151) (Quit: Leaving)
[14:24:16] *** Joins: frost (~frost@user/frost)
[14:30:03] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[14:30:36] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[14:30:44] *** Joins: s-liao (~s-liao@101.86.164.158)
[14:31:25] *** Quits: zacque (~zacque@124.82.52.252) (Quit: Goodbye :D)
[14:31:29] *** Quits: s-liao (~s-liao@101.86.164.158) (Client Quit)
[14:31:54] *** Joins: s-liao (~s-liao@101.86.164.158)
[14:34:30] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 260 seconds)
[14:36:07] *** Joins: aeth (~aeth@user/aeth)
[14:39:03] *** Joins: X-Scale` (~ARM@219.206.137.78.rev.vodafone.pt)
[14:39:59] *** Quits: pyro (~root@zhaozhou.dcollins.info) (Ping timeout: 252 seconds)
[14:40:36] *** Quits: X-Scale (~ARM@83.223.233.31) (Ping timeout: 240 seconds)
[14:40:36] *** X-Scale` is now known as X-Scale
[14:40:49] *** Joins: pyro (~root@zhaozhou.dcollins.info)
[14:54:55] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 240 seconds)
[14:57:09] *** Quits: s-liao (~s-liao@101.86.164.158) (Quit: Client closed)
[15:01:47] *** Quits: cedb (~ced@user/ouestbillie) (Quit: WeeChat 3.4)
[15:04:45] *** Quits: vats (~vats@103.158.91.1) (Ping timeout: 252 seconds)
[15:07:50] *** Joins: cedb (~ced@user/ouestbillie)
[15:13:03] *** Quits: cedb (~ced@user/ouestbillie) (Quit: WeeChat 3.4)
[15:13:24] *** Joins: cedb (~ced@user/ouestbillie)
[15:25:57] *** Joins: seninha (~chatzilla@user/seninha)
[15:26:23] *** Quits: frost (~frost@user/frost) (Quit: Client closed)
[15:26:52] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[15:36:29] *** Joins: rgherdt_ (~rgherdt@port-92-195-30-153.dynamic.as20676.net)
[15:36:44] *** Quits: rgherdt (~rgherdt@port-92-195-30-153.dynamic.as20676.net) (Remote host closed the connection)
[15:40:04] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[15:42:00] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[15:48:25] *** Joins: TCZ (~tcz@91.150.178.124)
[15:57:18] *** Joins: badkins (~badkins@136.56.92.199)
[15:57:46] *** Quits: TCZ (~tcz@91.150.178.124) (Quit: Leaving)
[15:59:11] *** Joins: frost (~frost@user/frost)
[16:01:37] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 240 seconds)
[16:05:32] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 240 seconds)
[16:10:08] *** Joins: TCZ (~tcz@91.150.178.124)
[16:13:52] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 250 seconds)
[16:17:36] *** Quits: frost (~frost@user/frost) (Quit: Client closed)
[16:29:26] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[16:32:24] *** Joins: s-liao (~s-liao@101.86.164.158)
[16:33:18] <s-liao> hello
[16:40:58] *** Joins: m455 (~m455@user/m455)
[16:46:29] *** Quits: pyro (~root@zhaozhou.dcollins.info) (Ping timeout: 252 seconds)
[16:46:47] *** Quits: TCZ (~tcz@91.150.178.124) (Quit: Leaving)
[16:47:03] *** Joins: pyro (~root@zhaozhou.dcollins.info)
[16:49:41] *** Quits: s-liao (~s-liao@101.86.164.158) (Ping timeout: 256 seconds)
[16:50:02] *** Joins: s-liao (~s-liao@101.86.164.158)
[16:51:48] *** Joins: s-liao58 (~s-liao@101.86.164.158)
[16:52:51] *** Joins: badkins (~badkins@136.56.92.199)
[16:54:47] *** Quits: s-liao (~s-liao@101.86.164.158) (Ping timeout: 256 seconds)
[17:01:06] *** Joins: s-liao (~s-liao@101.86.164.158)
[17:04:25] *** Quits: s-liao58 (~s-liao@101.86.164.158) (Ping timeout: 256 seconds)
[17:10:13] <sham1> Hello
[17:13:22] *** Joins: vats (~vats@103.16.30.211)
[17:14:28] *** Joins: klovett (~klovett@107.116.92.19)
[17:15:50] *** Quits: klovett_ (~klovett@107.116.92.161) (Ping timeout: 250 seconds)
[17:22:27] *** Quits: cedb (~ced@user/ouestbillie) (Read error: Connection reset by peer)
[17:24:39] *** Joins: cedb (~ced@user/ouestbillie)
[17:25:34] *** Quits: cedb (~ced@user/ouestbillie) (Client Quit)
[17:26:02] *** Joins: cedb (~ced@user/ouestbillie)
[17:32:17] *** Quits: cedb (~ced@user/ouestbillie) (Quit: WeeChat 3.4)
[17:32:35] *** Joins: cedb (~ced@user/ouestbillie)
[17:41:26] *** Joins: frost (~frost@user/frost)
[17:44:19] *** Quits: frost (~frost@user/frost) (Client Quit)
[17:45:02] *** Quits: s-liao (~s-liao@101.86.164.158) (Quit: Client closed)
[17:45:17] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[17:50:35] *** Joins: frost (~frost@user/frost)
[17:54:35] *** Quits: cedb (~ced@user/ouestbillie) (Quit: WeeChat 3.4)
[17:54:59] *** Joins: cedb (~ced@user/ouestbillie)
[17:55:59] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[18:02:57] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 252 seconds)
[18:05:38] *** Joins: Darkcoal (~user@user/Darkcoal)
[18:07:24] * amazigh` waves
[18:18:35] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[18:18:40] *** Joins: yosik (~user@user/yosik)
[18:18:58] <pinoaffe> Zipheir: does RnRS provide a way to programatically "rename" imported bindings?
[18:20:09] <pinoaffe> cuz in guile you could import a module but using a simple lambda ensure that all bindings that start in vector- are renamed to start in, say, v- (or you could just remove the entire prefix)
[18:22:00] *** Joins: clacke (88d96f2df3@knopi.disroot.org)
[18:23:05] <amazigh`> not you can't do that with rnrs
[18:23:21] <amazigh`> but you can rename with `rename` and `prefix`
[18:23:34] <amazigh`> it is not a lambda renaming
[18:23:55] *** Quits: lumberjack123 (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 240 seconds)
[18:25:31] *** Joins: notzmv (~zmv@user/notzmv)
[18:26:41] <amazigh`> with a mix of `only` and `prefix` you can achieve a similar purpose but it is more verbose
[18:32:21] *** Joins: badkins (~badkins@136.56.92.199)
[18:34:07] <amazigh`> here is an example https://github.com/picrin-scheme/picrin/blob/2af16bc88fbfca2efafd27ca9e5006d73c06f6fb/t/renaming-import.scm
[18:36:57] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 240 seconds)
[18:40:14] *** Joins: badkins (~badkins@136.56.92.199)
[18:43:15] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Ping timeout: 240 seconds)
[18:43:48] *** Quits: xgqt (~xgqt@gentoo/developer/xgqt) (Ping timeout: 250 seconds)
[18:44:01] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[18:44:35] *** Joins: xgqt (~xgqt@gentoo/developer/xgqt)
[18:54:05] *** Joins: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo)
[18:59:48] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[19:07:52] *** Joins: jao (~jao@45.134.142.199)
[19:11:00] *** Quits: mnieper (~user@137.250.162.24) (Ping timeout: 240 seconds)
[19:12:13] *** Quits: amazigh` (e7bf083bc5@user/amirouche) (Remote host closed the connection)
[19:12:13] *** Quits: j0ni (c79e08d4b1@2604:bf00:561:2000::2a) (Remote host closed the connection)
[19:12:13] *** Quits: axvr (757f658d76@2604:bf00:561:2000::e1) (Remote host closed the connection)
[19:12:13] *** Quits: sm2n (ae95cb1267@user/sm2n) (Write error: Broken pipe)
[19:12:13] *** Quits: nytpu (5a8c9ec580@2604:bf00:561:2000::33) (Remote host closed the connection)
[19:12:13] *** Quits: retropikzel (9d1a4f9f46@2604:bf00:561:2000::ce) (Remote host closed the connection)
[19:12:15] *** Quits: fluffyballoon (45ce440a48@2604:bf00:561:2000::e2) (Remote host closed the connection)
[19:12:34] *** Joins: j0ni (c79e08d4b1@2604:bf00:561:2000::2a)
[19:12:34] *** Joins: retropikzel (9d1a4f9f46@2604:bf00:561:2000::ce)
[19:12:41] *** Joins: fluffyballoon (45ce440a48@2604:bf00:561:2000::e2)
[19:12:48] *** Joins: axvr (757f658d76@2604:bf00:561:2000::e1)
[19:12:50] *** Joins: sm2n (ae95cb1267@user/sm2n)
[19:12:53] *** Joins: nytpu (5a8c9ec580@2604:bf00:561:2000::33)
[19:13:03] *** Joins: amazigh` (e7bf083bc5@user/amirouche)
[19:13:23] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[19:15:30] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[19:17:30] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:a896:dea:2287:d7fd)
[19:17:30] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:a896:dea:2287:d7fd) (Changing host)
[19:17:30] *** Joins: skapata (~Skapata@user/skapata)
[19:21:13] *** Joins: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-231.dsl.bell.ca)
[19:25:01] *** Joins: badkins (~badkins@136.56.92.199)
[19:27:31] *** Quits: klovett (~klovett@107.116.92.19) (Quit: ZZZzzz…)
[19:29:17] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 240 seconds)
[19:30:10] *** alMalsamo is now known as lumberjack123
[19:31:04] *** Joins: badkins (~badkins@136.56.92.199)
[19:32:24] <Zipheir> pinoaffe: It's an interesting idea to be able to do arbitrary transformations on import sets.  Currently, this is something in the Lambda Order which is *not* first class.
[19:35:00] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 240 seconds)
[19:35:35] *** Joins: mnieper` (~user@ipbcc1ad82.dynamic.kabel-deutschland.de)
[19:54:00] *** Quits: kjak (~kjak@pool-108-45-56-21.washdc.fios.verizon.net) (Ping timeout: 250 seconds)
[19:55:03] *** Joins: kjak (~kjak@pool-108-45-56-21.washdc.fios.verizon.net)
[20:03:31] <dpk> we may get dynamic imports in R7RS Large, i guess?
[20:05:14] <edgar-rft> for enlarging R7RS Large even further
[20:07:19] *** Quits: webshinra (~shinra@2a01cb080779fc00b3436da62fafc69e.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[20:09:28] *** Joins: webshinra (~shinra@2a01cb080779fc00b3436da62fafc69e.ipv6.abo.wanadoo.fr)
[20:17:23] *** Joins: gproto23_ (~gproto23@user/gproto23)
[20:18:05] <Zipheir> Of course, computing with import sets could easily lead to incomprehensible imports.
[20:18:48] <Zipheir> It would be cool to play with, but I'm not sure I'd want it as a permanent language feature.
[20:19:54] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 252 seconds)
[20:31:44] <jcowan> I agree: there is such a thing as being *too* dynamic, which is why we don't have dynamic scope any more.
[20:41:45] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[20:45:06] *** Joins: Avichi (~Avichi@2001:980:1b5c:1:5881:d765:5b9c:ef7b)
[20:47:42] <mdhughes> (for-each (lambda (i) (import (path-join (getenv "SCHEMELIBPATH") (format #f "srfi-~d" i)) )) (iota 255))
[20:48:37] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:49:36] *** Joins: karlosz (~karlosz@47.151.136.69)
[21:00:50] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[21:06:42] *** Joins: karlosz_ (~karlosz@47.151.136.69)
[21:09:25] *** Quits: karlosz (~karlosz@47.151.136.69) (Ping timeout: 240 seconds)
[21:09:25] *** karlosz_ is now known as karlosz
[21:10:55] *** Quits: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-231.dsl.bell.ca) (Ping timeout: 256 seconds)
[21:13:50] *** Joins: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-231.dsl.bell.ca)
[21:15:00] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220226204633])
[21:16:16] <sonny> Zipheir the other day want I wanted was bitfields
[21:17:09] <Zipheir> sonny: I seem to remember Kernighan & Pike writing "NEVER use bitfields in C"...
[21:18:34] <Zipheir> But that was before several better-ish C standards.
[21:19:03] <sonny> I haven't used them myself
[21:19:09] <sonny> but it's a good idea I think
[21:19:13] <Zipheir> I mean, it's just syntax.  It's really not hard to extend Scheme with a bitfield-like S-exp syntax.
[21:19:20] <sham1> Bitfields are fragile, unportable and just annoying. Better to just do the shifts and such manually. And in Scheme it can be better because macros can still make manipulating the relevant bytevectors easier 
[21:19:38] <sonny> I want to construct types this way, that's more what I'm interested in
[21:19:49] <Zipheir> sonny: What does that mean?
[21:20:16] <sonny> describe a layout / record with bitfields and construct a new type
[21:20:33] <sham1> This is probably relevant: https://github.com/TaylanUB/scheme-bytestructures
[21:20:39] <sonny> thanks
[21:20:52] <Zipheir> sonny: You mean strictly specifying a binary representation of a new type?
[21:21:07] <sonny> yeah
[21:21:32] <sonny> like super structures
[21:21:41] <sonny> or maybe I'd call them super records
[21:21:57] <Zipheir> So if I define a type τ, then it's some homomorphism τ → Bitstring, I guess.
[21:22:21] <sonny> yep
[21:22:53] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:23:28] <sonny> then you don't have to waste space anymore etc
[21:23:45] <Zipheir> I think I'd assume the compiler knows how best to do that3.
[21:23:48] <Zipheir> s/3//
[21:24:07] <Zipheir> Otherwise, it's just another way to talk about (un)marshalling.
[21:24:19] <sham1> And besides, compacting also has tradeoffs like being slower in some cases and all that
[21:24:31] <Zipheir> Yes.
[21:24:55] <Zipheir> "Trying to outsmart a compiler removes most of the reason for using one." (Kernighan?)
[21:26:40] <Zipheir> So I suppose if you trust the compiler to pick the most efficient representation of your types, and the result is bloated in a significant way for your purposes... use/write a better compiler.
[21:27:02] <sham1> A small memory footprint is the most relevant when doing information interchange, or as Zipheir put it, marshalling and unmarshalling
[21:27:15] <Zipheir> Sorry, I'd rather not say "better".  "Space optimizing".
[21:27:36] <sham1> Well, s/small/packed/
[21:27:57] <Zipheir> sham1: Yeah, I agree.
[21:28:20] <Zipheir> But maybe sonny wants to write a kernel that runs in 32KB.
[21:28:33] <sham1> Maybe 
[21:33:01] *** Quits: Avichi (~Avichi@2001:980:1b5c:1:5881:d765:5b9c:ef7b) (Ping timeout: 256 seconds)
[21:33:07] <sonny> Zipheir when you describe stuff with records it can be a waste of space
[21:33:33] <sonny> especially when you want symbols not integers
[21:33:49] <Zipheir> sonny: I guess you want jcowan's packed records.
[21:34:05] <Zipheir> sonny: It gets worse, though, because you want symbols, not Scheme objects.
[21:34:07] <sonny> I'm interested, can you share the url?
[21:34:49] <Zipheir> I have to find it, one sec.  I think it's just a spec, though.  It's obviously not portably implementable.
[21:36:38] <Zipheir> I can't find it.
[21:36:54] <Zipheir> jcowan: ^  Did you ever write up your dense/packed records idea?
[21:36:59] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[21:37:58] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[21:37:59] <Zipheir> sonny: What you also want is something like the typed-records egg from CHICKEN.  At least in principle, this lets you avoid some of the overhead of dynamic typing.
[21:38:58] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[21:39:18] <Zipheir> sonny: e.g. oh, you want a 64-bit integer.  But you don't get that, you get a Scheme object representing a 52-bit fixnum.
[21:40:04] <Zipheir> sonny: So you need some way to get around that if you really want high-efficiency binary representations.
[21:40:44] <sonny> let me think, maybe it will lead to something :P
[21:43:16] <sham1> Wait, 52-bit fixnums? Are they NaN-boxing? 
[21:44:05] <jcowan> Zipheir: Do you mean https://github.com/johnwcowan/r7rs-work/blob/master/StructuresCowan.md
[21:45:12] <Zipheir> sham1: Possibly.  I was exaggerating.  12 bits is a lot of overhead.
[21:45:32] <Zipheir> jcowan: That's it, thanks!
[21:46:25] <sham1> Yeah, it sure is. I'm personally partial towards having the least significant bit being zero and then leaving the 63/31 bits left for fixnum magnitude and sign 
[21:47:02] <Zipheir> sonny: But seriously, unless this is a serious super bare-metal project, I wouldn't worry about it.  Software is so incredibly huge these days that it seems kind of silly to worry about packing records as densely as possible.
[21:47:43] <sham1> After all, small integers are like the most common data so they probably should be good esp. for addition and subtraction 
[21:48:57] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[21:49:30] *** Joins: optimist (~optimist@27.58.155.72)
[21:51:22] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[21:59:18] *** Joins: klovett (~klovett@107.116.92.19)
[22:00:25] *** Joins: badkins (~badkins@136.56.92.199)
[22:03:27] *** Joins: klovett_ (~klovett@107.116.92.19)
[22:05:04] *** Joins: klovett__ (~klovett@107.116.92.99)
[22:05:24] *** Quits: klovett (~klovett@107.116.92.19) (Ping timeout: 240 seconds)
[22:06:29] *** Quits: mjsir911 (~bnc@user/mjsir911) (Remote host closed the connection)
[22:06:44] *** Joins: mjsir911 (~bnc@user/mjsir911)
[22:07:48] *** Quits: klovett_ (~klovett@107.116.92.19) (Ping timeout: 240 seconds)
[22:08:45] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 268 seconds)
[22:10:41] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[22:11:07] *** Joins: klovett (~klovett@107.116.92.99)
[22:12:08] *** Joins: klovett_ (~klovett@107.116.92.99)
[22:13:48] *** Quits: klovett__ (~klovett@107.116.92.99) (Ping timeout: 240 seconds)
[22:15:24] *** Quits: klovett (~klovett@107.116.92.99) (Ping timeout: 240 seconds)
[22:15:36] <amazigh> who needs bit packing or optimized datastructures say int maps...
[22:15:39] <amazigh> :)
[22:17:16] *** Joins: apg (~apg@71-34-103-243.ptld.qwest.net)
[22:21:23] <Zipheir> amazigh: ?
[22:23:33] *** Joins: livoreno (~livoreno@user/notzmv)
[22:24:38] <amazigh> Isn't SRFI-224 using bit packing?
[22:28:09] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[22:28:17] <Zipheir> amazigh: No, the spec says nothing about it, and my implementation doesn't use any bitmaps.  Maybe you're thinking of intsets (SRFI 217).  *Those* use bitmaps in their leaves.
[22:28:34] <Zipheir> Sorry, the sample implementation of intsets does.
[22:29:04] <Zipheir> amazigh: I think saying anything about bit representation in an int-map spec. would be a bad abstraction leak.
[22:29:40] <Zipheir> Unless, again, we're talking about marshalling.
[22:33:22] *** Quits: m455 (~m455@user/m455) (Quit: WeeChat 3.0)
[22:37:52] *** Quits: emacsomancer (~emacsoman@136.60.128.68) (Quit: WeeChat 3.4)
[22:38:31] *** Joins: emacsomancer (~emacsoman@136.60.128.68)
[22:44:32] *** Joins: m455 (~m455@user/m455)
[22:49:38] *** Quits: Darkcoal (~user@user/Darkcoal) (Quit: Darkcoal)
[23:31:22] *** Joins: gproto23 (~gproto23@user/gproto23)
[23:31:26] *** Quits: gproto23_ (~gproto23@user/gproto23) (Read error: Connection reset by peer)
[23:31:27] *** Quits: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-231.dsl.bell.ca) (Ping timeout: 256 seconds)
[23:37:03] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[23:38:25] *** Joins: cjb (~cjb@user/cjb)
[23:38:32] *** Joins: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-231.dsl.bell.ca)
[23:51:47] *** Quits: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-231.dsl.bell.ca) (Quit: Client closed)
[23:54:32] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
