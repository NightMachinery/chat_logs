[00:37:00] *** Quits: emacsomancer (~emacsoman@136.60.128.68) (Ping timeout: 240 seconds)
[00:40:15] *** Joins: emacsomancer (~emacsoman@136.60.128.68)
[00:43:05] *** Joins: X-Scale` (~ARM@219.206.137.78.rev.vodafone.pt)
[00:45:20] *** Quits: X-Scale (~ARM@46.50.5.24) (Ping timeout: 272 seconds)
[00:45:21] *** X-Scale` is now known as X-Scale
[00:57:59] *** Quits: rogersm (~rogersm@90.166.180.250) (Ping timeout: 256 seconds)
[00:59:33] *** Joins: rogersm (~rogersm@90.166.180.250)
[01:06:01] *** Quits: tyson2 (~user@bras-base-toroon0949w-grc-02-142-114-235-113.dsl.bell.ca) (Remote host closed the connection)
[01:06:52] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[01:08:11] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[01:26:06] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:48f1:c1ea:bce4:b1d6)
[01:28:18] *** Quits: rogersm (~rogersm@90.166.180.250) (Quit: Leaving...)
[01:28:26] <hayley> Good morning everyone!
[01:37:19] <drakonis> hi
[02:00:08] *** Joins: clothespin (~awolven@c-73-209-95-92.hsd1.il.comcast.net)
[02:09:13] <hayley> "Thinking doesn't guarantee that we won't make mistakes. But not thinking guarantees that we will."
[02:11:34] <Alfr> hayley, why?
[02:13:49] <hayley> Alfr: why not?
[02:14:38] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:48f1:c1ea:bce4:b1d6) (Remote host closed the connection)
[02:14:55] <Alfr> We might ask an oracle who always suggests no-mistake actions.
[02:16:03] <Alfr> Admittedly, such an oracle has yet to be invented.
[02:16:13] *** Quits: scymtym (~user@2001:638:504:20e6:6ac3:87e0:e782:f3fc) (Ping timeout: 240 seconds)
[02:16:18] <neominimum> I operate on pure unbridled instinct
[02:17:14] *** Quits: Brucio-61 (~Brucio-61@2001:638:504:20e6:6ac3:87e0:e782:f3fc) (Ping timeout: 268 seconds)
[02:24:38] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[02:24:44] <neominimum> Interestingly having ADHD practically guarantees making mistakes no matter the case, due to the brains propensity to make judgements too quickly.
[02:26:42] *** Joins: Brucio-61 (~Brucio-61@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[02:28:16] <neominimum> hayley: What is a mistake in that quote?
[02:31:58] <neominimum> It has to be a very general definition else it would be to easy to find a contradiction.
[02:32:56] <gilberth> Good morning #lispcafe!
[02:35:03] <hayley> When you do something that you'd rather not, in the grand scheme of things. Leslie Lamport said it on the topic of designing software.
[02:36:22] <hayley> Good morning gilberth!
[02:37:20] <gilberth> Something is not right. Both my brother in law and my wife caught Corona. And this despite being vaccinated thrice. And for my wife being pretty cautiousness I wonder how that did happen. Hmm.
[02:38:57] *** Quits: Brucio-61 (~Brucio-61@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Read error: Connection reset by peer)
[02:42:32] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:2cb8:ed82:ec9d:3612)
[02:45:21] <neominimum> hayley: In that case, it seems that if you don't think then it's not possible to make a mistake.
[02:46:09] *** Joins: Brucio-61 (~Brucio-39@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[02:48:54] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 252 seconds)
[02:51:23] <neominimum> gilberth: Are they alright?
[02:53:31] <gilberth> neominimum: At the very moment: Yes.
[02:57:07] <gilberth> neominimum: Only trouble: We have to almost shutdown our company for like ten days. And I cannot replace her as CEO, I am not healthy enough for that. We'll see.
[02:58:41] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Quit: ec)
[02:59:09] <neominimum> I have a few relatives that caught Covid, but they were lucky to have only mild flu symptoms. I hope that will be the case with yours.
[03:00:03] <neominimum> I see, that looks to be quite the challenge.
[03:16:53] *** Joins: scymtym (~user@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[03:21:27] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[03:21:49] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[03:23:29] *** Quits: cosimone (~user@93-44-187-176.ip98.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[03:50:40] *** Joins: cosimone (~user@93-44-187-176.ip98.fastwebnet.it)
[04:05:11] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[04:12:06] <GreaseMonkey> someone in my house got it and temporarily lost their sense of taste but myself and the other person in the house somehow managed to avoid it
[04:12:51] <GreaseMonkey> the vaccine doesn't guarantee that you won't get it, but it does make it notably less brutal
[04:26:31] *** Joins: dave0 (~dave0@069.d.003.ncl.iprimus.net.au)
[04:26:48] *** Joins: lisp123 (~lisp123@143.238.164.103)
[04:32:04] *** Quits: lisp123 (~lisp123@143.238.164.103) (Ping timeout: 272 seconds)
[04:33:24] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[04:50:53] <neominimum> I thought I'd have it by now as I work in a supermarket in which I can serve up to 300 people in a shift. Just lucky I guess.
[04:53:33] <hayley> https://www.youtube.com/watch?v=cVQIp_QT0gA
[04:53:33] -ixelp- Anti-Pope - YouTube
[04:53:43] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 260 seconds)
[04:59:11] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[05:01:43] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:06:58] <moon-child> qhong: https://youtu.be/bjRDaaGlER8?t=1097 '"smart memory" proposals for linked-list addressing have failed'
[05:06:58] -ixelp- Stanford Seminar - Mostly Missless Memory in the Mill CPU - YouTube
[05:07:40] <moon-child> 'much as we would like samsung to help us out here, samsung is not willing to do this and the research in this area is not working very well'
[05:13:09] <waleee> at least they managed to produce a intresting lecture series, (mill computing inc) 
[05:26:35] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:2cb8:ed82:ec9d:3612) (Remote host closed the connection)
[05:36:39] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[05:38:54] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[06:18:28] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[06:30:42] <moon-child> https://pbs.twimg.com/media/FOp2pPIVsAAStyU.png
[06:34:24] *** Quits: shka (~herr@109.231.3.55) (Ping timeout: 252 seconds)
[06:39:08] <hayley> Hm, doing some fairly non-head-hurty peephole optimisations doubles the performance of my translation of that VM code.
[06:42:47] <GreaseMonkey> do you have optimisations for precalculating constant expressions?
[06:45:35] <moon-child> I think even tcc does that
[06:45:52] <qhong> moon-child: sounds like accidental historical artifacts (from capitalism) then
[06:46:21] <GreaseMonkey> IIRC even Turbo Pascal does that in some cases
[06:46:22] <moon-child> it's basically a peephole from the perspective of the ast, so counts :P
[06:47:16] <qhong> any idea on this problem?: http://lambda-the-ultimate.org/node/5649 I'm totally stuck on it
[06:47:17] -ixelp- Do we need exactly two binding constructs? | Lambda the Ultimate
[06:48:03] <hayley> There aren't any constant expressions to precalculate here. Unless you count the entire benchmark, because it is pure, but you could also just remove the whole program then. :)
[06:48:15] <GreaseMonkey> i can't seem to connect to LtU right now
[06:48:59] <moon-child> qhong: I wanna know how you got a ltu account
[06:49:03] <qhong> GreaseMonkey: yes I also sometimes have problem connecting to it recently, sometimes server responses, sometimes not
[06:49:04] <moon-child> :P
[06:49:08] <moon-child> never got back to me when I requested one
[06:49:10] <qhong> moon-child: email the admin
[06:49:16] <qhong> moon-child: oops spam filter
[06:49:30] <moon-child> oh
[06:49:31] <moon-child> :/
[06:49:37] <moon-child> the dangers of self-hosting email
[06:49:51] <qhong> then it's 95% spam filter
[06:50:13] <qhong> internet is now centralized, because of capitalism ofc
[06:51:13] <hayley> https://www.youtube.com/watch?v=oC2dcxwS6IA
[06:51:14] -ixelp- The Muppets get Modernized - YouTube
[06:51:45] <qhong> GreaseMonkey: I copied the post into a gist in case ltu has covid https://gist.github.com/BlueFlo0d/5ffc452267b7f632349b2c384dbf0398
[06:51:46] -ixelp- ltu-env-obj.org Â· GitHub
[06:52:06] *** Joins: notzmv (~zmv@user/notzmv)
[06:52:52] <GreaseMonkey> cheers
[06:54:03] <moon-child> qhong: :<
[06:54:11] <moon-child> what about the fully automated luxury gay space communism I was promised
[06:55:21] <qhong> and there's more pratical problem of having 2 instead of 1 construct -- it's no longer possible to use object interface to manipulate closures, because the latter have an environment component that maps symbols instead of slots
[06:57:40] * hayley uploaded an image: (290KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/xZCOyXispuakqLUcBmlLkWrx/Screenshot_2022-03-25_13-27-17.png >
[06:58:18] <hayley> moon-child: they only have self-imposed austerity gay Earth communism now
[07:05:02] *** Joins: lisp123 (~lisp123@143.238.164.103)
[07:10:24] *** Quits: lisp123 (~lisp123@143.238.164.103) (Ping timeout: 272 seconds)
[07:15:29] *** Joins: Inline__ (~Inline@p4fedbdac.dip0.t-ipconnect.de)
[07:17:55] *** Quits: Inline (~Inline@p200300cd470cc200742cdab66a29c7e1.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[07:26:13] <hayley> https://news.ycombinator.com/item?id=30795406 "I think common lisp is basically a better rust for a lot of the things rust is being used for"
[07:26:13] -ixelp- One thing to keep in mind is that common lisp is actually a super new and exciti... | Hacker News
[07:38:55] <kakuhen> is it insane to initialize an adjustable 0-dim vector?
[07:39:05] <kakuhen> or should i just start with nil and cons it when i want to add objects to it
[07:41:27] <hayley> 0 dimension vector? 0 element rather?
[07:41:39] <kakuhen> oh sorry, yes, 0 element
[07:41:45] <hayley> Sounds fine to me.
[07:42:10] <kakuhen> sweet
[07:42:40] <kakuhen> adjustable arrays require a fill-pointer to be set, right?
[07:43:26] <kakuhen> a friend tried explaining to me fill pointers, but i honestly do not understand their purpose much
[07:44:47] <hayley> I don't think they need fill pointers, but they're useful.
[07:45:40] <hayley> The fill pointer lets you have an array which can store more elements than you are currently storing, so that you don't resize so often.
[07:46:05] <kakuhen> so it's to ease the burden of resizing an array then, right
[07:48:42] <moon-child> language is annoying.  'dimension' means 'size', colloquially.  But it means something different and weird in math and programming
[07:49:10] <moon-child> ditto 'transpose', which meant 'swap' before the mathematicians stole it
[07:49:31] <kakuhen> my brain was confusing the word because i am sleep deprived, and when i see (x y z) i think "vector in some 3d space"
[08:04:55] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[08:06:59] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[08:08:21] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[08:17:39] <hayley> https://www.youtube.com/watch?v=lmuDfQ0y8l8
[08:17:39] -ixelp- Great cable, but too fast - YouTube
[08:24:07] <kakuhen> am i using flexi-streams wrong or does make-flexi-stream have the worst default behavior
[08:24:39] <kakuhen> if i (open "path/to/file" :element-type xyz) and pass that into make-flexi-stream, why not make the default element-type that of the stream...
[08:27:42] <hayley> I thought flexi-streams were for converting from binary streams to character streams.
[08:27:47] <kakuhen> oh...
[08:28:13] <kakuhen> i've been only using it only because it lets me make in-memory streams for testing
[08:28:37] <hayley> Oh, okay.
[08:54:59] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 268 seconds)
[09:06:41] <Alfr> kakuhen, btw. it does make sense to initialize 0-dim. arrays.
[09:07:45] <Alfr> moon-child, in the context of permutations it's still swap the position of two things.
[09:11:50] <kakuhen> https://plaster.tymoon.eu/view/3003/raw?password
[09:11:58] <kakuhen> why doesn't this work? I inspected ecase but I don't understand macros well
[09:12:24] <hayley> ECASE doesn't evaluate the values on the left hand side.
[09:12:44] <kakuhen> right, so I then tried `(,some-list big)
[09:12:46] <kakuhen> but that failed too
[09:13:12] <hayley> ALEXANDRIA:SWITCH does evaluate the value to compare to.
[09:13:32] <hayley> e.g. (alexandria:switch (2) ((+ 1 1) 'two)) â TWO
[09:20:59] <kakuhen> ok i found a nasty hack
[09:21:31] <kakuhen> evaluate some-list at read time and the macro expands to what i want
[09:22:56] <hayley> That also works.
[09:24:40] <moon-child> qhong: why can't you just have packages for your symbols?
[09:24:52] <moon-child> circularity problems with bootstrapping, but you have that anyway
[09:27:47] *** Joins: semz_ (~semz@user/semz)
[09:30:27] *** Quits: semz (~semz@user/semz) (Ping timeout: 260 seconds)
[09:30:48] <qhong> moon-child: so now again 2 binding constructs: package that bind strings to symbols, and environment/objects that bind symbols to values?
[09:31:45] <qhong> It does sound better, but I was always under the impression that CL package system is necessary only because of it doesn't have hygiene metaprogramming ability, and the use of hygiene F-expr + first-class environment can get rid of package
[09:31:50] <qhong> maybe that's an illusion
[09:33:27] <qhong> I also didn't hear much discussion on CL's package system on LtU/PL community in general and ppl seem to be deem it too primitive
[09:35:00] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[09:37:14] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[09:39:00] * hayley uploaded an image: (557KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/ISscrVAxAKVdNoJZwyreELLa/clownport.png >
[09:40:59] <rotateq> hayley: a good application photo
[09:47:38] <rotateq> I wanted to take another as mine when Mr Bean looks so concentrated as here: https://youtu.be/3amsAlYS5r8?t=89
[09:47:39] -ixelp- Paint it Bean! | Funny Clips | Mr Bean Official - YouTube
[09:54:18] <moon-child> qhong: hmm, does a package _bind_ strings to symbols?
[09:54:55] <moon-child> I think, rather, that whereas previously the global environment contained a mapping (symbol-name -> symbol), it now contains a mapping (package-name * symbol-name -> symbol)
[09:55:58] <moon-child> alternately, wrt the operational _semantics_, symbols just get another slot
[09:57:17] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[09:59:03] <rotateq> or when you give nicknames to packages (to shorten it) one can say directly even from reading "so this is now from package FOO" or even using something like (defmethod foo:bar ...)
[09:59:43] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[10:01:44] <qhong> moon-child: are package a complete separated class of entities from lexical environments?
[10:02:04] <qhong> then, there are two binding constructs
[10:02:55] <hayley> gilberth: How to design an analog to digital converter: <https://www.youtube.com/watch?v=upTgM_S5rAQ&t=623s>
[10:02:55] -ixelp- HP 3458A - Why is this 31 year old Multimeter UNRIVALLED? - YouTube
[10:04:37] <qhong> moon-child: hmm, or I can see one can have very "light-weight" package that is just a string (prefix), and have it passed to READ
[10:05:13] <moon-child> yes.  Packages are syntax sugar
[10:05:34] <qhong> It still doesn't sound perfect. Even if one insists that package is just string, they are still conceptually namespace and need to be organized. Environments are a good way to organize namespace, but we somehow simply cannot use it for packages
[10:05:51] <moon-child> why not?
[10:06:06] <moon-child> (defvar *packages* (make-hash-table))
[10:06:47] <moon-child> again, there are circularity problems at bootstrap time, because *packages* is a symbol and a symbol needs to have a package, but those are not hard to resolve, and they do not exist at run time
[10:07:26] <moon-child> (or, you know, s/hash-table/environment/, w/e)
[10:08:33] <moon-child> *packages* goes in the global environment.  I assume you have one of those
[10:09:37] <qhong> yes. And there need to be a global environment and a global package ex nihilo
[10:11:34] <moon-child> indeed.  But what is wrong with that?
[10:11:53] <qhong> still a bit unsure. Say I'm going to nuke OS and use solely the lisp system as my computing environment, which device should be used in place of Unix filesystem? Packages or nested environments?
[10:12:20] <moon-child> why do you need to pick one?
[10:12:28] <moon-child> say all objects are persisted to disc transparently
[10:12:53] <moon-child> all the types of objects you can create--symbols, environments, strings, ...--acts as a replacement for the unix file system
[10:12:59] <moon-child> *act
[10:16:18] <hayley> "None of that is going to get rid of the problem of garbage collection however. Thatâs pretty much inherent in lisp." You can get rid of the problem if you stop seeing it as one. :)
[10:16:42] <qhong> moon-child: unix file system organize resource in a hierarchical way (for better and for worth), and mostly give each resource a unique identifier
[10:17:30] <moon-child> ok.  If you want to create such a data structure, you certainly can.  I'm not going to tell you what the right way to do that is, though
[10:18:00] <qhong> having two separate binding construct makes it a bit more cumbersome
[10:18:03] <moon-child> re packages: packages do not create a mapping to _data_.  Only to symbols.  And symbols do not contain any meaningful data.  A symbol is _only_ meaningful in context of an environment, which can map it to a value
[10:18:16] <moon-child> so I have no idea how you expect to be able to use packages to access data
[10:19:29] <moon-child> I mean, if you object to the notion that a symbol can have a package, why do you not also object to the notion that a symbol can have a name?  Aren't there already two means of binding: one from names to symbols, and another from symbols to values?
[10:19:34] <qhong> moon-child: a nested chain of environment can be used to access data, but the key are symbol, and in our presumed case, has both name component and package component
[10:20:16] <moon-child> so you want to distinguish foo -> bar -> baz from foo:bar -> baz?
[10:20:41] <qhong> that has to be the case
[10:20:46] <moon-child> hmmm
[10:20:58] <qhong> I feel like it makes the identifier usage much more confusing
[10:21:07] <qhong> basically you have both / and \, and they are different
[10:21:17] <qhong> (and you also need parenthesis probably)
[10:21:57] <moon-child> it feels like an invented issue to me.  But I am not quite able to see why yet
[10:22:37] <moon-child> like, there is no foo:bar:baz
[10:23:19] <qhong> foo/(bar:baz) and (foo/bar):baz is different
[10:24:04] <moon-child> what is (foo/bar):baz?
[10:24:24] <moon-child> I interpret bar:baz to mean the symbol named baz in the package named bar
[10:24:29] <qhong> baz in package foo/bar (a package bound to symbol bar in environment foo)
[10:24:44] <moon-child> I don't see why that needs to be supported
[10:25:02] <qhong> then package have a flat string namespace
[10:25:07] <moon-child> it is like wanting to write 2e(3+4) in place of 2e7
[10:25:42] <moon-child> if you want that, you can simply write (* 2 (expt 10 (+ 3 4))).  Similarly write (intern "baz" foo/bar) if you want that
[10:28:56] <qhong> or in another word, both package and symbol has to are second-class naming citizen
[10:29:20] <qhong> normal data are named by specifying a path of environment bindings from root environment to the object
[10:29:20] *** Joins: lisp123 (~lisp123@143.238.164.103)
[10:29:47] <qhong> but we don't name package or symbol that way
[10:33:48] *** Inline__ is now known as Inline
[10:33:57] *** Quits: lisp123 (~lisp123@143.238.164.103) (Ping timeout: 240 seconds)
[10:34:29] * hayley got Coffee Compiler Club shirt in the mail
[10:34:38] <hayley> Cliff didn't mention shipping getting any better.
[10:35:38] <dave0> hayley: care for a decaf cap?
[10:36:00] <hayley> I don't drink coffee. That's why it's funny.
[10:36:00] <dave0> it's a little to late in the day for full strength
[10:36:12] <dave0> oh!
[10:36:30] <dave0> but this is a cafe
[10:36:55] <hayley> I don't like the taste.
[10:43:06] <qhong> moon-child: I don't like it after using a hypothetical OS based on said 2D naming in my head. Heck, what I'm going to do when I start a new project, make a new package or make a new environment?
[10:46:12] <hayley> You'd pick one to be more "top level", right?
[10:48:27] *** Joins: Lycurgus (~juan@98.4.112.204)
[10:49:16] <rotateq> so have a drink on me hayley and dave0 :)
[10:49:23] <rotateq> have to go now, see you later
[10:49:27] *** Quits: rotateq (~user@p200300e787143500a6f16de1b1c2e823.dip0.t-ipconnect.de) (Quit: ERC (IRC client for Emacs 27.2))
[10:59:06] *** Quits: GreaseMonkey (greaser@user/greasemonkey) (Read error: Connection reset by peer)
[11:16:53] *** Joins: silasfox (~sbv@p200300cec717230004f2e58485b580c9.dip0.t-ipconnect.de)
[11:21:41] <hayley> https://www.youtube.com/watch?v=kglnc7dHAnI
[11:21:42] -ixelp- French Revolution Gambit - YouTube
[11:30:16] <moon-child> hmm.  Under the c++11 memory model (as stolen by c, scheme, llvm, perhaps also cl if bike gets his way), memory ordering is a policy which is realised twice.  It limits when the cpu can make memory accesses visible to threads, but it also limits how the compiler can reorder and remove operations
[11:30:47] <hayley> Right.
[11:31:14] <moon-child> this feels like partial affirmation of my idea that multicore-parallelism shoul dbe like ilp, but one level up: the compiler does it automatically, but you can tune to take better advantage of it
[11:31:16] <moon-child> but I'm not sure why
[11:32:06] <hayley> Same thing with how side effects are visible to the same thread, no? The processor can pipeline and reorder as it pleases, except around particular combinations that "conflict". And the compiler may do the same.
[11:33:03] * dave0 inserts a memory barrier and forgets where he put his keys
[11:33:08] <moon-child> hmmm yeah
[11:33:16] <moon-child> dave0: have you tried searching under a lamppost?
[11:33:28] <dave0> o_O
[11:33:43] <hayley> Look under a Lamport after.
[11:33:44] *** semz_ is now known as semz
[11:47:19] <gilberth> I don't get how people could ever misplace their keys. Or their glasses.
[11:48:37] <hayley> gilberth: Well. You wrote PostScript which is a stack language. I assume that code for the VM I showed you was still unreadable as a stack language?
[11:48:59] * gilberth has a second look
[11:51:04] <gilberth> There is funny decoration like # and & and ,& in there.
[11:51:56] *** Joins: shka (~herr@109.231.3.55)
[11:52:53] <hayley> # is a prefix for literals. & is used to define a label that is referenced by ; or ,&. Thus it's really someone's poor assembler rather than a stack language like PS or Forth.
[11:54:05] * hayley achieved Markdown lossage.
[11:55:01] <gilberth> PS is nice because it has mandated tail calls and therefore GOTO. When you construct your code vectors grammatically, you could stick an executable array right into another executable array. A pure GOTO.
[12:02:02] <hayley> But I note that procedures aren't really words on their own, and I still have to call them explicitly. This is quite unlike Forth.
[12:13:30] *** Joins: treflip (~user@user/treflip)
[12:15:39] <gilberth> hayley, which language do you talk about?
[12:33:57] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[12:43:22] <hayley> gilberth: The one in the article. Note that I push a label to the stack, then JSR to it.
[12:52:27] <kakuhen> does eql not work for testing equality?
[12:52:32] <kakuhen> err equality of numbers
[12:52:48] <kakuhen> riddle me this: (samples subframe) = 4096 and (length (decoded subframe)) = 4096
[12:52:58] <kakuhen> yet I am getting Failed assertion: (EQL (SAMPLES SUBFRAME) (LENGTH (PAYLOAD SUBFRAME)))
[12:53:04] <kakuhen> payload = decoded here oops
[12:53:14] <kakuhen> unless the inspector is lying to me 
[12:54:11] * kakuhen uploaded an image: (85KiB) < https://libera.ems.host/_matrix/media/r0/download/kotoura.moe/ASLLDPcNYZqxqvCWYwyxDWNK/p1.png >
[12:54:17] <kakuhen> so here's the vector in question (the decoded samples)
[12:54:22] * kakuhen uploaded an image: (110KiB) < https://libera.ems.host/_matrix/media/r0/download/kotoura.moe/sVxEdsMXLroKtkzTlFclYixk/p2.png >
[12:54:27] <kakuhen> this is what the subframe slots are
[12:54:41] <kakuhen> the SAMPLES slot and size of the vector both agree... so why the failed assert?
[12:55:26] <moon-child> 'inspector is lying'  possible; what happens if you insert a debug print?
[12:55:35] <kakuhen> guess i have to try that now
[12:58:42] *** Joins: random-nick (~random-ni@87.116.167.125)
[12:59:40] <kakuhen> ok so the inspector wasn't lying
[12:59:49] <kakuhen> the fill pointer gave away that i only have 754 resdiuals
[13:01:25] <semz> I can never remember which functions respect the fill pointer and which don't.
[13:02:52] <shka> length respect the fill pointer
[13:02:58] <shka> array-dimensions does not
[13:05:10] <kakuhen> good thing length does
[13:05:29] <kakuhen> the residual samples im decoding look like sane values though, so im wondering where the  bug is
[13:05:49] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[13:06:02] <kakuhen> all i know is that i do not bother running the lpc model since i fail the very first assertion i make (out of 3)
[13:07:02] <kakuhen> it's very unfortunate the stack trace does not include my decoding functions
[13:07:43] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[13:21:55] <moon-child> aghh
[13:22:06] <moon-child> chrome has almost the same bug as firefox
[13:22:09] <moon-child> not quite as bad though
[13:29:20] *** Joins: lisp123 (~lisp123@143.238.164.103)
[13:31:54] <kakuhen> well, i learned that `flac -a` is a thing, nice.
[13:32:00] <kakuhen> so this helps me narrow the bug
[13:32:27] <kakuhen> it looks like my decoder gets everything right, but since i overloaded the meaning of "order" in decode-rice-residual, i probably passed the wrong value somewhere in this giant 20-line loop
[13:41:45] *** Quits: Lycurgus (~juan@98.4.112.204) (Ping timeout: 252 seconds)
[13:57:38] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[13:59:05] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[14:17:45] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[14:19:40] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[14:42:39] <moon-child> omg
[14:42:42] <moon-child> alpine is _so_ slow
[14:42:47] <moon-child> I have no idea what it's even doing
[14:42:54] <moon-child> gnus was super slow too when I tried it
[14:43:05] <moon-child> any non-garbage mail/news readers?
[14:44:13] <shka> well, i am using akregrator and kmail
[14:44:34] <shka> bog standard applications
[14:45:15] <selwyn> how many news feeds do you follow
[14:45:36] <selwyn> i haven't used any since 2012
[14:45:43] <shka> well, just a handful 
[14:46:25] <lisp123> which ones?
[14:47:10] <shka> planet lisp for instance :P
[14:48:03] <lisp123> Oh that reminds to read that, some nice articles from time to time
[14:48:24] *** Joins: notzmv (~zmv@user/notzmv)
[14:48:39] <lisp123> I thought the spammer from c.l.l disappeared, but looks like he just went on holiday and came back today >.<
[14:50:28] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:6ce3:12ab:6bc1:5d18)
[14:51:17] <moon-child> shka: gui is annoying
[14:51:48] <shka> sometimes it is, but i don't spend days worth reading emails, i don't feel need to optimize this part of my workflow 
[14:52:15] <moon-child> also I want maildir support, as last time I set up dovecot it was super flaky and annoying, and I did not bother to maintain it
[14:52:26] <selwyn> now that i am between jobs, i want to improve my email management actually
[14:53:08] <moon-child> I was going to write an email client, but eh, lazy
[14:53:32] <moon-child> I do want to eventually implement my ideas for taggroup-based record organisation, though
[14:53:44] <shka> selwyn: 99% of benefit are just filters 
[14:54:01] <lisp123> moon-child: I was thinking of doing some CLOS-style approach to record organisation
[14:54:01] <shka> and every respectable email client can do that
[14:54:13] <lisp123> with multiple inheritance etc on tags
[14:54:25] <selwyn> um
[14:54:30] <selwyn> spam filters?
[14:54:55] <moon-child> can shell out to spamassassin/rspamd/we
[14:55:12] <moon-child> lisp123: why?
[14:55:29] <moon-child> I don't really see the point.  Or, rather, that seems orthogonal to the sort of organization that I want to enable
[14:56:20] <shka> selwyn: no, things like: do something when the topic/whatever matches regex/whatever
[14:56:25] <selwyn> right
[14:56:49] <selwyn> is there a way to manage that with multiple clients on different machines?
[14:56:59] <shka> imap
[14:57:13] <moon-child> nfs :)
[14:57:50] <lisp123> moon-child: I was looking at recording "events" -> e.g. meetings / calls / etc -> a most basic event class could just 1 slot - title, then a meeting could have title, time, attendees, etc. - this way one could search across all titles, or all times etc
[14:59:06] <lisp123> what were you thinking of doing?
[14:59:54] <shka> selwyn: if your config are just files, you can synchronize those and it works
[14:59:58] <moon-child> ok.  Now you want to add a new tag so you have to go and redefine.  And what does it buy you?  Make everything a straight hash table.  You _want_ more expressiveness
[15:00:06] <moon-child> can elaborate more, but I am going to bed now :)
[15:00:14] <selwyn> i see
[15:00:17] <selwyn> shka: thanks!
[15:00:18] <shka> moon-child: good night
[15:01:00] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[15:01:01] <shka> anyway, simply grab email client like kmail/claws email/thunderbird
[15:01:16] <shka> or something from gnome that i can't remember the name of
[15:01:23] <shka> they all work 
[15:01:39] <shka> and the core functionality is there 
[15:01:57] <lisp123> moon-child: chat later :)
[15:02:13] <kakuhen> cant believe how typing `with` instead of `for` would lead me down such a confusing bug chase
[15:02:15] <shka> if you are using windows, The Bat is a shockingly good email client
[15:02:37] <kakuhen> but then there was another bug that wouldn't manifest itself until i hit a rice2 partition (since i wrongfully read 4/5 bits for the partition order while flac spec says only 4 bits are used)
[15:03:01] <kakuhen> that would throw off the encoding parameters and eventually make my decoded samples explode and signal type errors
[15:03:41] <shka> but "the bat!" is closed sources you are supposed to pay for
[15:04:52] <shka> maybe it also has version for mac, i don't know
[15:05:18] <kakuhen> ...[im so excited that i can just loop (parse-block (make-instance 'frame)) until i hit eof now]
[15:06:06] <kakuhen> my friend commented that my api is "very weird" and falls very short of being CLOS style but i guess that is my fault for rigidly following the tables given in the spec 
[15:06:40] <kakuhen> the most clos magic i do is hide header and footer parsing in before/after methods so that you dont have to worry about it
[15:07:33] <kakuhen> it makes the CCL stack traces very ugly and unhelpful, but it also means i can just (make-instance 'frame) at a sync code and iterate my way until EOF
[15:08:05] <selwyn> i had a good system for a while, but the problem was that i had all the rules in the webmail client
[15:15:53] <shka> webslave
[15:17:11] <kakuhen> off-by-one error for fixed subframes, nice !!!
[15:17:20] <kakuhen> this bug was way less obscure than the decode-lpc bug thankfully
[15:17:36] <kakuhen> know the difference between `for` and `with` in a loop, it might save you 2 hours of debugging.
[15:18:49] <selwyn> -_-
[15:18:53] <selwyn> well i learnt my mistake
[15:21:29] <shka> stuff like this makes me despise web applications
[15:22:45] <shka> https://www.forbes.com/sites/davidaxe/2022/03/24/ukraine-has-launched-counteroffensives-reportedly-surrounding-10000-russian-troops/?sh=1be5baa81170
[15:22:45] -ixelp- Ukraine Has Launched Counteroffensives, Reportedly Surrounding 10,000 Russian Troops
[15:22:49] <shka> it is happenin
[15:24:03] *** Quits: OlCe (~user@lfbn-nic-1-262-219.w90-116.abo.wanadoo.fr) (Remote host closed the connection)
[15:27:32] <aeth> > forbes.com/sites
[15:27:46] <aeth> basically as much credibility as the reddit reports of this
[15:27:55] <aeth> forbes is one step up from a blog
[15:28:18] <selwyn> i don't buy it
[15:29:02] <qhong> some more thoughts on the object/environment problem: 1. is multiple parent environments (basically multiple USE-PACKAGE) desirable? 2. is multiple inheritance desirable? 3. are those two questions fundamentally the same question?
[15:29:13] <aeth> selwyn: I'll believe it when it's on the Wikipedia map
[15:29:37] *** Quits: lisp123 (~lisp123@143.238.164.103) (Remote host closed the connection)
[15:29:58] <selwyn> imo the real fight is in the east, where the ukrainians can still be surrounded
[15:30:12] <shka> qhong: depends, depends, no
[15:30:51] <selwyn> well, i don't want to play armchair general tbh
[15:30:59] <selwyn> but as aeth says
[15:32:02] <qhong> shka: under the object-as-namespace "isomorphism", 1 and 2 do seem to map to each other. And your same answer for 1 and 2 give some empirical support for 3 :)
[15:32:35] <shka> object as namespace is a faulty idea
[15:32:49] <qhong> can you elaborate?
[15:35:02] <shka> the benefit of objects is how they can interact with each other, being usable as a namespace is enabler for that, but that's i
[15:35:10] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[15:35:54] * dave0 freshens everyone's coffee
[15:36:26] <shka> qhong: so my point is, using objects as a namespace misses the point
[15:36:39] <shka> use packages as namespaces... and packages are even objects as well
[15:36:45] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[15:36:57] <shka> and as for use-package
[15:37:09] <shka> use just :cl and import other symbols individually 
[15:37:44] <shka> local nicknames is a thing now 
[15:37:54] <selwyn> i don't think that the inheritance model would fit that well into packages
[15:38:17] <shka> it could work, but why even bother with that
[15:38:23] <shka> package is just a bag 
[15:38:32] <qhong> selwyn: the prototype model is suspiciously similar
[15:38:39] *** Joins: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net)
[15:38:45] <qhong> shka: object can also just be a bag
[15:40:34] <qhong> Object and namespaces look too similar to me, so I wonder if there's a 1-1 correspondence and if they can be unified. Sure, they're used in different things, but different procedures are used for different things as well, and that doesn't prevent us to provide a uniform type and interface for all procedures. 
[15:41:29] *** Joins: OlCe (~user@lfbn-nic-1-262-219.w90-116.abo.wanadoo.fr)
[15:41:47] <shka> qhong: that's what i would call useless analogy 
[15:42:09] <shka> anyway, time to do some actual work xD
[15:42:14] <shka> BBL
[15:43:52] <shka> remember that anime? https://www.youtube.com/watch?v=4OxFSy8G5wk
[15:43:53] -ixelp- Trigun - Opening HD - YouTube
[15:44:08] <shka> this opening theme used to be my ringtone for years
[15:51:46] <hayley> https://www.youtube.com/watch?v=IBYRnxHBsRA
[15:51:46] -ixelp- Careering - YouTube
[15:52:42] <hayley> Seems I can make SLIME print out nicely formatted values with the variable-width font, since it also updates the buffer.
[15:53:41] * selwyn entered a hackathon
[15:53:45] <selwyn> going to try and do it in lisp
[15:53:59] *** Joins: razetime (~quassel@117.254.34.170)
[16:01:47] <hayley> https://kmflett.wordpress.com/2022/03/25/poll-finds-michael-rosen-is-preferred-choice-for-the-next-dr-who/
[16:01:48] -ixelp- Poll finds Michael Rosen is preferred choice for the next Dr Who | Kmflett's Blog
[16:06:12] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[16:08:26] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[16:10:11] *** Joins: jeosol (~jeosol@user/jeosol)
[16:23:16] *** Joins: Lycurgus (~juan@98.4.112.204)
[16:44:03] <selwyn> sigh
[16:58:16] <hayley> https://github.com/fare/gerbil-poo
[16:58:16] -ixelp- GitHub - fare/gerbil-poo: Prototype Object Orientation for Gerbil Scheme
[17:02:54] <selwyn> trying to sneak in abcl
[17:08:06] <shka> not going well i presume
[17:10:43] <selwyn> i just don't know how gradle works
[17:10:46] <selwyn> it looks doable
[17:11:48] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[17:23:58] <Lycurgus> i use gradle without thinking about it so ... .
[17:24:14] <Lycurgus> (in android studio)
[17:26:00] <Lycurgus> don't sweat a thing if you don't have to
[17:27:48] *** Quits: razetime (~quassel@117.254.34.170) (Ping timeout: 252 seconds)
[17:30:22] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[17:32:41] <selwyn> damn
[17:32:48] <selwyn> does abcl use tagged pointers?
[17:33:31] <hayley> It can't.
[17:34:52] <selwyn> i printlned (+ 2 2) and got org.armedbear.lisp.Fixnum@4
[17:35:11] <hayley> toString()?
[17:35:26] <selwyn> oh
[17:35:31] <selwyn> :s
[17:36:15] *** Joins: razetime (~quassel@117.254.34.57)
[17:37:51] <sham1> It should automagickally toString that, so it's weird that it doesn't
[17:40:20] <Gnuxie> <hayley> "https://kmflett.wordpress.com/20..." <- damn
[17:40:21] -ixelp- 20 years after Dianaâs death: the left & Royalty. From Red Republicanism to the Peopleâs Princess? | Kmflett's Blog
[17:40:31] <Gnuxie> uhh
[17:40:40] <Gnuxie> ixelp: how tf you get that?
[17:41:28] <Gnuxie> just beard people though
[17:41:31] <Gnuxie> not a national poll
[17:41:32] <Gnuxie> that's a shame 
[17:47:14] *** Quits: razetime (~quassel@117.254.34.57) (Read error: Connection reset by peer)
[17:49:57] <selwyn> gnuxie: https://img.ifunny.co/images/0506f4a7d65f5542db78c14427b4c5bda9e897e6e1ccee19cb0e76cea53f704f_1.jpg
[17:50:02] <selwyn> just as well it wasn't put to the people
[17:50:24] <Gnuxie> lmao
[17:51:53] <selwyn> based republican ixelp
[17:52:59] <selwyn> in other news, abcl is being accepted by the hackathon
[17:53:14] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[17:54:50] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[17:55:05] <selwyn> not sure if i can get away with quicklisp as well
[18:08:31] <selwyn> lol
[18:09:26] *** Joins: razetime (~quassel@117.254.34.57)
[18:19:36] <semz> Gnuxie: the reply feature looks like <name> "text..." <- reply on the IRC end, so the link got cut off
[18:20:23] <semz> selwyn: Does the hackathon specify the language? Why is it hard to get ABCL in?
[18:24:35] <selwyn> the specified languages are java, python and rust
[18:24:59] <selwyn> abcl was not that hard in the end, just gradle nonsense
[18:25:42] <selwyn> how can i expose a java stream as a lisp stream
[18:27:46] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[18:28:12] <sham1> I'd be very surprised if there wasn't a way of taking a Java InputStream/OutputStream and making it a CL stream
[18:30:32] <sham1> Apparently there is at least on the Java side, but now one needs to see if there is one for CL side
[18:34:42] <selwyn> that would probably be enough for my purposes
[18:38:21] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[18:46:23] * shka just added unordered set splitter to statistical-learning
[19:01:30] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[19:04:25] <shka> TIL that one of the bombers in squadron used for dropping nuclear bombs on the japan was called "necessary evil" 
[19:13:38] <selwyn> narrator voiceover: it wasn't
[19:17:45] <shka> selwyn: oh it was, it is documented 
[19:18:00] <shka> there was more then 2 bombers in that unit 
[19:18:02] <shka> you know
[19:18:14] <shka> and all crews were trained for dropping nukes
[19:18:40] <shka> also, "enola gay" is strange enough name 
[19:18:44] <selwyn> i meant dropping the nukes wasnt a necessary evil
[19:19:16] <shka> well, won't debate that, but name of the plane was curious choice 
[19:19:19] <selwyn> indeed
[19:19:33] <selwyn> names were weird back then
[19:25:40] <Gnuxie> Elona gay
[19:26:23] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[19:27:57] *** Quits: treflip (~user@user/treflip) (Quit: Quit)
[19:28:18] <Gnuxie> Is this why musk changed his twitter name 
[19:28:21] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[19:28:28] <Gnuxie> To own the libs, smh 
[19:34:15] <Gnuxie> Anyone read the gossip on Chelsea Manning cucking Elon Musk 
[19:34:31] <Gnuxie> Truely inspirational 
[19:34:46] <shka> jesus 
[19:34:58] <shka> you brits really are football fanatics
[19:43:46] <selwyn> gnuxie: it seems more than gossip
[19:47:17] <shka> chelsea manning is a person
[19:47:24] <shka> had to google this out
[19:51:26] <jeosol> shka: proof you are not stateside and following the events here
[19:51:35] <jeosol> shka: how are you by the way
[19:51:45] *** Joins: Lycurgus (~juan@98.4.112.204)
[19:51:57] *** Quits: razetime (~quassel@117.254.34.57) (Ping timeout: 240 seconds)
[19:53:10] <shka> well, Russian invasion continues to bother me, I am looking for some comfort food of tv shows and trigun anime is still great, oh, and I meet a girl and we are going to jog tomorrow 
[19:53:47] <shka> i still work on statistical learning, but I probably should cleanup clusters package so it can be integrated into quicklisp
[19:54:02] <shka> so that's me
[19:54:06] <shka> jeosol: how are you?
[19:54:10] <jeosol> I agree, last time we spoke was prior to the invasion. it is sad to see the events unfold
[19:54:26] <jeosol> I am saddened by the pictures and all this is just not necessary in this day and age
[19:54:38] <Lycurgus> sql and relational model didn become fully dominant until the 90s
[19:54:52] <shka> nationalism and imperialism continue to be the dark side of humanity
[19:55:06] <shka> what can i say
[19:55:08] <Lycurgus> sorry wrong channel
[19:55:15] <jeosol> but why? we live relative short lives and we just create madness for all
[19:55:31] <shka> Lycurgus: because relation databases make sense 
[19:55:43] <jeosol> why not just live in peace relative to others, why create chaos.
[19:55:45] <shka> jeosol: how can i know?
[19:56:03] <jeosol> It's a rhetorical question
[19:56:10] <jeosol> not directed at you per se
[19:56:47] <Lycurgus> shka, actually it's the power of sql, the other models make sense too
[19:56:48] <jeosol> hopefully, they get some ceasefire but it seems putin doesn't want to lose face
[19:57:25] <shka> Lycurgus: i mean, synchronization if one element of the relational model that is overlooked 
[19:59:00] <shka> and it is done RIGHT in your typical SQL database
[19:59:28] <shka> and yeah, sql as a language is powerful but arguably also wonky 
[20:00:21] *** Joins: razetime (~quassel@117.254.34.170)
[20:03:30] <Gnuxie> selwyn : source? I went into a deep dive last week on the self referencing articles and they link to one tweet by Grimes where they reply to Manning with something like "Yeah I'm realising you're right about more recently..."
[20:04:16] <shka> jeosol: also, i really don't care about elon personal life 
[20:04:36] <shka> honestly i only care about spacex
[20:05:09] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Ping timeout: 256 seconds)
[20:05:18] <selwyn> shka: but this is very funny
[20:05:26] <shka> why?
[20:05:27] <jeosol> it was just the chelsea manning name you mentioned, I don't really follow these people, it was just a name I remember seeing in relation to someone that change their sex
[20:05:52] <selwyn> it is unexpected and about elon
[20:05:56] <selwyn> i guess i just like gossip
[20:06:05] <Gnuxie> yeah it's funny 
[20:06:28] <shka> well, i don't consider this funny, kinda mundane honestly 
[20:06:44] <Gnuxie> and Elon is a pos and more people should realise it 
[20:07:20] <shka> https://www.reuters.com/business/energy/exclusive-russias-gazprom-seeks-gas-payments-euros-indias-gail-sources-2022-03-25/?utm_source=reddit.com
[20:07:20] -ixelp- EXCLUSIVE Russia's Gazprom seeks gas payments in euros from India's GAIL | Reuters
[20:07:37] <shka> end of petrodollar and the raise of petroeuro :P
[20:08:44] <shka> Gnuxie: a lot of people are pos
[20:09:06] <shka> there are 12 legit people in the world, the rest are pos
[20:11:15] <selwyn> i am kind of worried how the usa will take losing its position as world hegemon
[20:11:59] <shka> i don't expect massive political changes
[20:12:32] <Lycurgus> the number 12 seems pulled and therefore pos
[20:13:01] <shka> financial elites will adjust, and USA despite everything else, is a highly developed nation with natural resources and large population
[20:13:18] <Lycurgus> it's funny how 'good person' is interpreted as a double negative
[20:13:36] <shka> in other words: Americans will be completely fine and they know it 
[20:13:54] <Lycurgus> for a normal objsct, good has a positive functional meaning
[20:14:05] <shka> they simply won't be able to credit as they used to
[20:14:45] <shka> also it seems that american citizens are fed up of American imperialism as well
[20:14:56] <Lycurgus> the failure of ethnogenesis if driving change in the US fueled by other factors
[20:15:26] <Lycurgus> the fact that it is rich and could be autarkic doesn't mean it's immune to change
[20:15:34] <selwyn> another aspect of contemporary america is that it likes to launch wars of choice even on a good day
[20:15:53] <selwyn> hm
[20:15:57] <shka> selwyn: nah, not anymore 
[20:16:11] <shka> big part of trump victory was "no more wars" promise 
[20:16:24] <shka> and they don't even need foreign oil at this point 
[20:16:30] <Lycurgus> the thing with them only accepting rubles in payment, is that smart if fx still works and the ruble has cratered?
[20:16:45] <shka> it is even possible that they will return to isolationist policy 
[20:16:52] <Lycurgus> why wouldn't I want to pay in roubles?
[20:17:26] <shka> Lycurgus: because you don't have roubles, you need to buy them in Russia central bank, under exchange rate dictated by russian central bank
[20:17:34] <selwyn> only countries that sanctioned russia have to pay in roubles, it is not for everyone
[20:17:56] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[20:17:58] <Lycurgus> you can't buy roubles on international exchanges any more?
[20:18:05] <shka> nope
[20:18:05] <Lycurgus> that would explain if so
[20:18:27] <shka> and russians can't sell roubles to buy foreign currency 
[20:18:29] <selwyn> and if you want to buy roubles from the russian central bank, then some russian banks have to be not sanctioned
[20:18:45] <Lycurgus> ah, then they've dropped out of the international system completely
[20:18:53] <shka> yeah, full USSR
[20:19:38] <Lycurgus> a currency that doesn't trade on international arbitrage markets is effectively a private national chit
[20:19:53] <shka> yes, welcome to the commie land
[20:20:07] <selwyn> shka: since the world is de-dollarising, how will us-led sanctions be able to isolate russia
[20:20:09] <Lycurgus> i think the rouble traded internationally under the soviets
[20:20:29] <shka> selwyn: well, why USA would care about Russia in next 20 years?
[20:21:07] <shka> i really think that they will become isolationist country once again 
[20:21:22] <shka> and they kinda can do that amazingly 
[20:21:25] <Lycurgus> the US, you don't live here I take it
[20:21:34] <Lycurgus> *the US?,
[20:21:47] <shka> no, i live in eastern europe 
[20:21:51] <Lycurgus> the US created the current international system
[20:22:26] <selwyn> unless i am missing something, i really can't see the logic here
[20:22:37] <Lycurgus> in some sense it is still its center although china and the eu now have equal mass
[20:22:55] <selwyn> if america becomes autarkic, and the dollar doesn't rule the world, then sanctions will be less effective and not more effective
[20:23:16] <shka> selwyn: i mean: the will to sustain the american empire is waning anyway, and if so, what is the motivation for actually carrying about europe?
[20:23:32] <selwyn> well, whats the motivation for caring about sanctions then
[20:23:47] <selwyn> why risk e.g. palladium imports for no good reason?
[20:24:07] <shka> right here, right now there is still an issue, but in next 20 years?
[20:24:46] <Lycurgus> the whole angst that is currently being expressed about the international system is based on false expectations of a US collapse 
[20:24:55] <shka> american financial empire won't collapse in one year, it will take few decades 
[20:24:59] <Lycurgus> and overestimating the impact of russia
[20:25:07] <shka> it is still alive and well now
[20:25:34] <shka> but once it falls, and i don't think this can be avoided now, what motivation is left?
[20:26:16] <Lycurgus> the thing that is changed/changing is that the US isn't basically the whole show anymore and basically has run it's course as leading nation
[20:26:37] *** Quits: silasfox (~sbv@p200300cec717230004f2e58485b580c9.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[20:26:39] <Lycurgus> but there doesn't have to be a leading nation for there to be a thriving international order
[20:27:08] <Lycurgus> one the US built but which ultimately grows independent of that origin
[20:27:26] <Lycurgus> just as western civilization isn't bound to the greeks
[20:27:39] <shka> selwyn: sometimes you simply have to accept the reality, that's my take, and that's what i think will happen in the future
[20:27:55] <Lycurgus> so civilization per se isn't going to be bound to western
[20:28:06] <selwyn> elites often don't like to accept reality though
[20:28:32] <shka> capital has no nationality 
[20:28:54] <selwyn> i feel that if america ever has to accept that it is #2 to china, it will go apeshit, at least at a cultural level
[20:28:59] <selwyn> and i don't know what that entails
[20:29:22] <pl> selwyn: it already had issues dealing with post-bush world
[20:29:28] <Lycurgus> actually it does, most of it, non-fiat excluded
[20:30:18] <shka> selwyn: ever heard of Trump?
[20:30:19] <Lycurgus> i'm american and I accepted it some time ago, when the PPP GDPs crossed
[20:30:25] <shka> expect more of that in the futur
[20:30:52] <shka> but I expect this to be mostly isolationist type of crazy  
[20:31:14] <Lycurgus> also the fact that the chinese aren't religious and have the largest non believer population speaks to me
[20:31:16] <pl> America started losing weight in international politics after the blunders of Bush & Cheney combo
[20:32:40] <Lycurgus> in a lot of stuff, like smoking, traditional medicine, etc, they look normal stupid
[20:32:53] <shka> can't loose wars if you don't go to wars 
[20:32:56] * shka taps head
[20:33:56] <shka> anyway, this is my opinion, i think that it holds it's ground but you are free to disagree
[20:34:18] <selwyn> shka: it makes sense actually
[20:34:18] <shka> but remember that capital has no nationality, it is a global concept
[20:34:25] <gilberth> Is there anything said about which threads gets SIGINT and SIGQUIT when generated by the tty?
[20:35:27] <Lycurgus> who would say it?
[20:35:33] <shka> gilberth: https://man7.org/linux/man-pages/man7/pthreads.7.html
[20:35:34] -ixelp- pthreads(7) - Linux manual page
[20:35:37] <Lycurgus> signals is signals
[20:35:42] <gilberth> POSIX?
[20:35:48] <shka> gilberth: yes
[20:35:55] <selwyn> speaking of bush, i think that the memory of iraq is what is informing much analysis of ukraine and leading to incorrect thinking
[20:35:58] <shka> threads have signal masks
[20:36:33] <Lycurgus> which they set themselves (or their parent process/job does)
[20:37:15] <shka> i know that sigterm is handled on the root thread in linux 
[20:37:29] <shka> dunno if this is standard or not
[20:38:10] <shka> selwyn: well, great power leaders also make mistakes
[20:38:15] <Lycurgus> you can do anything you want in linux, kernel builds are very highly routinized by now
[20:38:50] <shka> cesar had some military blunders, just as napoleon, and Hitler had no idea of true soviet military capability 
[20:38:51] <gilberth> Well, Linux is a special case as with Linux threads and processes are essentially the same.
[20:39:01] <shka> AFAIK soviet union was supposed to collapse in few weeks
[20:39:34] <shka> in the end, only humans
[20:39:47] <selwyn> for example, the absence of much of the russian air force is seen as a major weakness and disadvantage, because if it was the usa in charge the air force would be employed in bombing cities continuously with no regard for consequences
[20:39:54] <shka> Putin also fucked up
[20:39:56] <Lycurgus> gilberth, at some level that's true but answering that in an interview once brought down a shitload of gotcha
[20:39:59] <selwyn> the problem is that the other side doesn't have to make the same mistakes you do
[20:40:10] *** Quits: OlCe (~user@lfbn-nic-1-262-219.w90-116.abo.wanadoo.fr) (Remote host closed the connection)
[20:40:19] <shka> selwyn: you are reading this wrong
[20:40:25] <Lycurgus> all tasking constructs are basically about processes
[20:40:42] <Lycurgus> but on linux process and thread are different
[20:41:08] <gilberth> Lycurgus: Well, threads are created with clone() which is just a fork() with MAP_PRIVATE turned off and this getting rid of copy-on-write. With Linux that is.
[20:41:10] <shka> selwyn: absence of russian air force is surprising because it was expected that it would be used to destroy ukrainian army before launching the real attack
[20:41:43] <selwyn> well, exactly
[20:41:49] <selwyn> they expected russia to behave like the usa
[20:41:49] <shka> but in the end it seems that they are not good at targeting ground targets actually
[20:42:17] <shka> selwyn: oh, Russians use artillery to level down the cities, don't you worry about that
[20:42:20] <gilberth> Anyhow, I'll play with signal masks then. Thanks.
[20:42:21] <shka> planes expensive 
[20:43:35] <shka> here is the most reasonable explanation i found https://www.youtube.com/watch?v=_WGcfkqzUI4
[20:43:36] -ixelp- Reasons for Failure? Russian Air Force in Ukraine - YouTube
[20:44:01] <shka> selwyn: don't get under impression that Russians are somehow more humane
[20:44:32] <shka> they are not, they simply don't have that much of air strike capability 
[20:45:00] <shka> primary function of air force is the air defense, not ground strikes 
[20:45:12] <shka> according to Russians at least
[20:47:07] <Lycurgus> russian has only ever done well against even more backward adversaries or when it was on defense after invasion of its core
[20:47:48] <shka> selwyn: Russian army killed 1/4 of the Chechnya population, and also Aleppo was a show of what Russians actually do
[20:47:48] <Lycurgus> its suicidal for it in it's current form to go full on against the west
[20:48:00] <Lycurgus> *russia has only
[20:48:20] <shka> it is not that they don't want to ruin Ukraine, it is just that is difficult to ship enough of ordnance to do that
[20:48:21] <Lycurgus> which is why it's very unlikely it will
[20:48:27] <selwyn> raqqa was/is the most destroyed city in syria
[20:49:16] <selwyn> at the end of the battle, some parts of aleppo were in much better state than expected
[20:49:50] <selwyn> so i don't regard it as a convincing data point of brutal russian urban tactics
[20:50:21] <Lycurgus> no one country had air supremacy in syria i take it
[20:50:53] <shka> selwyn: "some parts" :P
[20:51:25] <selwyn> would also remark that turkey did its best to ruin the city
[20:52:15] <shka> yeah, but remember that Putin destroyed Grozny without anybody helping him
[20:52:57] <selwyn> grozny was much worse
[20:53:24] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[20:53:47] <shka> also, Russians were on budget
[20:54:40] <selwyn> in 2000?
[20:54:45] <shka> in Syria
[20:55:28] <selwyn> syria contains other clues as to how ukraine might turn out
[20:55:33] <shka> anyway, just because they can't does not mean they don't wanna
[20:55:33] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[20:55:45] <shka> and Kiev is a huge city 
[20:56:15] <selwyn> russia encircled several towns and cities and eventually made ceasefire and disarmament agreements
[20:56:58] <selwyn> i suspect this is why they are not really trying to take big cities in eastern ukraine, they think they can simply wait before cutting a deal with locals
[20:57:01] <shka> and how long the syrian civil war went on?
[20:57:25] <selwyn> not for very long after russia intervened
[20:57:47] <shka> yeah, but it was years 
[20:58:02] *** Joins: rotateq (~user@p200300e787143500a6f16de1b1c2e823.dip0.t-ipconnect.de)
[20:58:07] <shka> and Ukrainians are not fighting civil war
[20:59:25] <shka> anyway, so far it seems that Russian offensive is in a stalemate, we gonna see how this will go, but i expect only the very worst of them 
[21:01:04] <shka> so far Russians only escalate the conflict and Putin seem to be hellbent on waging this war
[21:06:35] *** Joins: tyson2 (~user@64.137.152.177)
[21:09:17] <selwyn> sigh
[21:11:46] <selwyn> going to integrate quicklisp with this silly build system
[21:12:09] <shka> selwyn: well, you can go without quicklisp
[21:12:23] <selwyn> hm
[21:12:27] <shka> you will have to download systems manually, but it is workable 
[21:12:32] <selwyn> i guess i do have asdf
[21:12:39] <shka> i mean, people did that for years
[21:13:17] <shka> decades in fact
[21:13:19] <selwyn> is implementation asdf good enough?
[21:13:31] <shka> it ought to be 
[21:13:37] * shka *shrugs*
[21:13:40] <waleee> selwyn: are you using cl for physics related stuff?
[21:14:11] <selwyn> waleee: i have done but not at the moment
[21:14:19] <waleee> ah ok
[21:14:56] *** Quits: shka (~herr@109.231.3.55) (Read error: Connection reset by peer)
[21:15:16] *** Joins: shka (~herr@109.231.3.55)
[21:19:14] <Lycurgus> asdf is trickster
[21:19:26] <Lycurgus> it went from flaky to rock solid
[21:19:33] <Lycurgus> over like 20 years
[21:19:48] <Lycurgus> which somehow seems like a blink in lisp world
[21:19:59] <Lycurgus> *a trickster
[21:21:05] <Lycurgus> at the beginning of that period various defsystem usages were the thing
[21:23:08] <Lycurgus> amusingly there's a js thing called asdf
[21:23:28] <Lycurgus> which logtalk supports 
[21:24:00] <Lycurgus> very cognitively dissonant since expected and wanted it to be the lisp thing
[21:25:12] *** Quits: molson (~molson@172-103-21-94-dynamic.midco.net) (Remote host closed the connection)
[21:25:37] *** Joins: molson (~molson@172-103-21-94-dynamic.midco.net)
[21:29:06] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[21:35:09] *** Joins: OlCe (~user@lfbn-nic-1-262-219.w90-116.abo.wanadoo.fr)
[21:41:36] *** Quits: tyson2 (~user@64.137.152.177) (Remote host closed the connection)
[21:43:00] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[21:45:11] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[22:09:06] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[22:10:35] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[22:11:00] *** Quits: razetime (~quassel@117.254.34.170) (Ping timeout: 272 seconds)
[22:30:21] *** Quits: dave0 (~dave0@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[22:43:15] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[22:44:58] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[22:47:10] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:6ce3:12ab:6bc1:5d18) (Remote host closed the connection)
[22:51:29] *** Joins: tyson2 (~user@198.98.109.220)
[22:57:58] <lagash> then there's asdf-vm :)
[22:58:15] *** Quits: Inline (~Inline@p4fedbdac.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[22:58:41] <rotateq> maybe like for example here: https://github.com/lambdamikel/Common-Lisp-Tangram-Solver/blob/main/src/define-system.lisp
[22:58:42] -ixelp- Common-Lisp-Tangram-Solver/define-system.lisp at main Â· lambdamikel/Common-Lisp-Tangram-Solver Â· GitHub
[22:59:14] <rotateq> I wanted to try porting it to SBCL and McCLIM but hmm :(
[23:00:28] <phoe> rotateq: https://github.com/lambdamikel/Common-Lisp-Tangram-Solver/blob/main/src/tangram-sysdcl.lisp
[23:00:29] -ixelp- Common-Lisp-Tangram-Solver/tangram-sysdcl.lisp at main Â· lambdamikel/Common-Lisp-Tangram-Solver Â· GitHub
[23:00:36] <phoe> looks simple enough to port I guess?
[23:00:50] <phoe> once you remove stuff like https://github.com/lambdamikel/Common-Lisp-Tangram-Solver/blob/main/src/tangram-sysdcl.lisp#L5-L6 though
[23:00:51] -ixelp- Common-Lisp-Tangram-Solver/tangram-sysdcl.lisp at main Â· lambdamikel/Common-Lisp-Tangram-Solver Â· GitHub
[23:01:41] <rotateq> phoe: yes for you :) but I'm not yet capable/experienced enough
[23:01:56] <phoe> :D
[23:02:07] <rotateq> and then when some small important details are just in lw, acl ...
[23:02:35] <rotateq> phoe: no really, especially with asdf, but I can understand now some more of the CLIM code
[23:05:20] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[23:10:02] *** Joins: Inline (~Inline@p200300cd472405000b711a3855c27fc9.dip0.t-ipconnect.de)
[23:16:50] *** Quits: Inline (~Inline@p200300cd472405000b711a3855c27fc9.dip0.t-ipconnect.de) (Remote host closed the connection)
[23:17:18] *** Joins: Inline (~Inline@p200300cd472405000b711a3855c27fc9.dip0.t-ipconnect.de)
[23:17:24] <rotateq> but it's good that i wrote "not yet" and not "never"
[23:19:31] *** Quits: tyson2 (~user@198.98.109.220) (Ping timeout: 245 seconds)
[23:19:36] <phoe> :3
[23:28:04] <rotateq> small personal progress
[23:36:13] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[23:38:28] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[23:53:44] *** robin_ is now known as robin
