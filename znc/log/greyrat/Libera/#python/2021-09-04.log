[00:00:23] <Akuli> yeah, type aliases need the old union syntax, even in new pythons or even with from __future__ import annotations
[00:00:40] <Akuli> in typeshed we recently changed all unions except type aliases (and base classes) to use the new syntax
[00:00:42] <hexology> that isnt what bothers me :P
[00:00:54] <hexology> but that's great to know, i am definitely going to use | for unions
[00:00:59] <Akuli> this is a bit tl;dr :D what bothers you then?
[00:01:12] *** Joins: gr33n7001 (~gr33n7007@user/gr33n7007h)
[00:01:20] <Akuli> i am also a mypy user and i would also be interested to try pyright
[00:01:32] <hexology> for some reason mypy can't find the annotations for anyio even though they're installed in the same venv
[00:01:33] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[00:01:47] <hexology> and the overloading is giving me another issue that i can attempt to reproduce
[00:01:49] *** Quits: vladoski (~vladoski@2001:b07:add:d406:bdc1:3f1f:8197:d9e8) (Quit: Textual IRC Client: www.textualapp.com)
[00:01:50] <Akuli> which version of anyio is installed?
[00:02:11] <hexology> why, are annotations only on git master or something/
[00:02:27] *** Joins: Auron (~Auron956@user/auron)
[00:02:28] <Akuli> i did "pip install anyio" and i got anyio that comes with a py.typed file
[00:02:45] <Akuli> https://dpaste.com/AVQ85G5TD
[00:02:53] <hexology> oh nvm i'm a moron i wasn't running the right 'mypy'
[00:03:00] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[00:03:01] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[00:03:09] <hexology> still, this overloading business is driving me nuts
[00:03:14] <hexology> i'll post an example
[00:03:15] <jinsun> hexology: pyright also complains with that overloads code, Overloaded function implementation is not consistent with signature of overload
[00:03:23] <hexology> ah
[00:03:25] *** Quits: Intruder777 (~Intruder7@user/intruder777) (Quit: Leaving)
[00:03:36] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[00:03:36] <hexology> i was going to try it because i knew they were farther along w/ things like recursive type definitions
[00:03:57] <Akuli> pyright generally seems to fix bugs quickly and well, pyright fixes bugs quickly but dirtily, mypy doesn't fix bugs :D
[00:04:04] <hexology> heh
[00:04:08] <Akuli> this has been my experience, looking at how bug reports get handled by different type checkers
[00:04:20] <hexology> difference between big microsoft bucks vs mypy seeming mostly unsupported by corporate entities
[00:04:21] *** Quits: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net) (Quit: See you on the flip side.)
[00:05:06] <hexology> it always blows my mind how few companies care to invest in the software that they depend on ... probably because they see it as a "cost center" and the engineers could never convince upper management to contribute developer time
[00:05:33] <hexology> they don't realize that mypy is a developer productivity tool
[00:05:52] *** Quits: raxor2k (~raxor2k@ti0043a400-5959.bb.online.no) ()
[00:07:19] <Akuli> i meant to say that pytype fixes bugs quickly and dirtily
[00:07:35] <Akuli> the maintainer is super responsive, but every new feature is implemented as mapping the type to Any
[00:07:44] <hexology> oh hah
[00:08:08] <hexology> isn't pytype backed by google or something? maybe their full time job is to keep the issue tracker as clear as possible
[00:08:19] <Akuli> yes, it's google's type checker
[00:08:57] <hexology> facebook also does or did have one right? pyre
[00:09:34] *** Joins: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net)
[00:09:34] <hexology> oh this is interesting... `-m` says "no errors", but running the .py file directly gives a bunch of errors
[00:09:41] <lmat> This looks absurd to me...what am I missing? https://imgur.com/4qs7zeQ.png
[00:09:48] *** Quits: vats (~vats@180.149.226.8) (Read error: Connection reset by peer)
[00:10:20] <bjs> lmat: probably it's a method with no arguments
[00:10:20] <hexology> lmat: did someone forget to put a `self` parameter in a method?
[00:10:24] <bjs> other than "self"
[00:10:29] <bjs> or someone forgot to put "self"
[00:11:40] *** Quits: Spydar007 (~spydar007@user/spydar007) (Ping timeout: 240 seconds)
[00:11:53] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[00:12:38] *** Quits: lambda (~weechat@cyka.blyat.vodka) (Ping timeout: 272 seconds)
[00:12:48] *** Joins: Spydar007 (~spydar007@user/spydar007)
[00:13:06] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 276 seconds)
[00:13:37] *** Joins: semeion (~semeion@user/semeion)
[00:14:04] *** Joins: Adoi (~Adoi@user/adoi)
[00:14:07] *** Quits: stealth_ (~stelath_@216-197-160-97.regn.static.sasknet.sk.ca) (Quit: Leaving)
[00:15:00] *** Joins: lambda (~weechat@cyka.blyat.vodka)
[00:15:13] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 252 seconds)
[00:15:29] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[00:15:42] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[00:18:13] <hexology> current source of confusion/frustration https://bpa.st/KPSQ
[00:18:32] <hexology> when i run this as `mypy -m framework` i get no errors, but when i run `mypy framework.py` i get these errors that i don't understand
[00:19:41] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[00:20:27] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[00:20:50] *** Joins: ZedHedTed (~ZedHedTed@user/zedhedted)
[00:21:40] *** Joins: fikran (~fikran@user/fikran)
[00:21:47] <jinsun> well that line 18 thing is because of default arguments like before
[00:22:28] <hexology> oh true let me remove that
[00:23:00] <hexology> ok, it fixes the line 18 issue but the others are still there
[00:24:07] *** Joins: audiocat (~audio@2603-8081-1801-3bb5-56dd-3a97-504c-0c8d.res6.spectrum.com)
[00:24:18] <hexology> hmm, pyright has other complaints, it's apparently having a hard time narrowing these types
[00:26:13] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 252 seconds)
[00:26:20] *** Quits: georgios (~georgios@user/georgios) (Ping timeout: 256 seconds)
[00:27:26] *** Joins: darksun (~darksun@user/darksun)
[00:27:38] *** Quits: ganchan (~thomas_w@user/ganchan) (Read error: Connection reset by peer)
[00:27:44] <jinsun> line 54 problems are becasue anyio.runprocess takes str only in the first argument list
[00:28:02] <jinsun> you probably want to convert the paths to string using os.fspath
[00:28:18] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[00:28:29] <jinsun> and don't take bytes or encode those
[00:28:54] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[00:29:17] *** Quits: pro_z (~pro_z@37.214.55.6) (Ping timeout: 245 seconds)
[00:29:25] <jinsun> *decode
[00:31:24] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[00:31:52] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Quit: leaving)
[00:32:18] <jinsun> ah no os.fspath can give bytes, so just do str(path) maybe
[00:32:34] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 256 seconds)
[00:33:10] <hexology> ah i was using __fspath__ conditional on being PathLike
[00:33:13] <hexology> let's see if that fixes it
[00:33:19] *** Joins: Gerula (~Gerula@user/gerula)
[00:33:22] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[00:33:23] <hexology> does anyio not support non-unicode filenames?
[00:34:01] <jinsun> no idea, the annotations could be wrong
[00:34:18] *** Joins: voidcat_ (~voidcat@miaow/classabbyamp)
[00:34:27] <hexology> yeah ive found  buggy annotations before
[00:34:36] <hexology> tornado has a few List[foo] that should be Sequence[foo]
[00:34:57] <hexology> and the 3rd-party pandas stubs were a mess... i was in progress on cleaning them up, but got held up for lack of remaining sanity points
[00:35:42] *** Joins: GregTheHun (~GregTheHu@2601:300:4500:3d41:9d1f:1512:c7da:4108)
[00:35:51] <jinsun> yeah outside the standard library the annotation situation is bad really
[00:36:12] <hexology> actually i'm impressed at how not bad it is!
[00:36:40] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[00:37:00] <ssbr> I've been trying to get annotations working since 2018 for my code :(   still has buggy annotations in it...
[00:37:21] *** Joins: Roey (~Roey@user/Roey)
[00:37:42] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[00:38:05] *** Quits: fengshaun (~fengshaun@68.69.214.210) (Quit: bibi!)
[00:38:10] *** Quits: lethu (~lethu@user/lethu) (Ping timeout: 240 seconds)
[00:38:52] *** Quits: mei (~mei@user/mei) (Ping timeout: 252 seconds)
[00:39:26] <jinsun> ya at least many libraries are adding annotations and improving them
[00:39:41] <jinsun> could be worse
[00:39:55] <jinsun> and everything would be Any outside of stdlib
[00:40:26] *** Quits: Sky_Net (~Sky_Net@176.14.213.85) (Read error: Connection reset by peer)
[00:40:44] *** Quits: shangxiao (~davids@124.187.193.187) (Quit: WeeChat 3.2)
[00:41:07] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Read error: Connection reset by peer)
[00:41:08] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Client Quit)
[00:41:36] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[00:42:01] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[00:42:02] *** Quits: Slimgin (~quassel@097-071-159-126.biz.spectrum.com) (Ping timeout: 244 seconds)
[00:43:06] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[00:44:23] *** Joins: darksun (~darksun@user/darksun)
[00:44:30] *** Joins: ravan (~ravan@user/ravan)
[00:45:29] <Akuli> jinsun, feel free to contribute annotations to typeshed :D
[00:46:08] <Akuli> often a non-standard-library project has like 3 functions that people actually use, and the rest is some advanced functionality that most people never need
[00:46:32] <Akuli> so you can run stubgen to auto-generate stubs that use Any typing and are missing argument types etc, then type-hint just the 3 most commonly used things and make a pull request
[00:47:17] *** Joins: Barones (~Barones@2804:7f3:8987:d2a4:dca1:cd66:e0e9:a376)
[00:47:34] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[00:47:53] <jinsun> yeah I should contribute, but I get lazy instead and just switch to dynamic typing instead :D
[00:47:53] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[00:48:20] <Akuli> but isn't it nice to make something and use it the next day after merging pr? :D
[00:48:30] <Akuli> non-stdlib stubs get auto-uploaded to pypi nightly
[00:48:43] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:49:17] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 245 seconds)
[00:49:37] <jinsun> oh nice
[00:50:09] <jinsun> I'll try next time I see some obvious problem with annotations that can be fixed
[00:50:13] <Akuli> :)
[00:51:51] <jinsun> here is one obvious problem https://github.com/python/typeshed/search?q=*args%2C+**kwargs
[00:52:08] <jinsun> those should be *args: Any, **kwargs: Any
[00:52:21] *** Joins: pgib (~textual@173-38-117-70-rtp-corp-nat-pool.cisco.com)
[00:52:24] <Akuli> not  really
[00:52:33] <Akuli> there's a difference between "accepts anything" and "we haven't filled in the types yet"
[00:52:40] <Akuli> i.e. Any and not annotated
[00:54:05] <jinsun> ok not so obvious problem, but in strict mode pyright complains when I use those functions (even if I use only the annotated parts), and I have to switch to basic mode where it treats those as Any
[00:54:34] <Akuli> in mypy you can configure that option by keeping the rest of strict enabled
[00:54:39] <Akuli> don't know about pyright
[00:56:34] <jinsun> oh what is the mypy flag for that?
[00:57:16] <Akuli> i haven't checked, i just use # type: ignore[no-untyped-call]
[00:57:25] <Akuli> so i can grep it when i want to fix something in typeshed :)
[00:57:42] *** Quits: voidcat (~voidcat@user/voidcat) (Quit: nyaa~)
[00:57:44] <Akuli> if you can't find a flag for this, you can still disable no-untyped-call error code
[00:58:12] <jinsun> ok, yes that can be done
[00:58:15] *** Quits: Powerhouse6666 (~Powerhous@security.orcacomputers.com) (Quit: Leaving)
[00:58:46] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[01:00:01] *** Joins: pragma- (~chaos@user/pragmatic-chaos)
[01:01:25] *** Quits: bpluly (Lucy@82-69-31-48.dsl.in-addr.zen.co.uk) (Ping timeout: 252 seconds)
[01:01:38] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[01:02:14] *** Joins: bpluly (Lucy@82-69-31-48.dsl.in-addr.zen.co.uk)
[01:03:13] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 244 seconds)
[01:03:16] *** Joins: zensei_ (~zensei@user/zensei)
[01:03:37] *** Quits: zensei (~zensei@user/zensei) (Ping timeout: 248 seconds)
[01:04:43] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 252 seconds)
[01:07:28] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:07:43] *** Joins: darksun (~darksun@user/darksun)
[01:08:51] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:e913:ebf0:5b4f:bc6f) (Quit: Leaving)
[01:09:35] *** saribro is now known as swinnenb
[01:09:44] *** Quits: resmo (~resmo@2a00:d420:9:8a00:4264:bbbf:4af3:c25c) (Ping timeout: 252 seconds)
[01:10:56] *** Joins: ubert (~Thunderbi@178.115.65.0.wireless.dyn.drei.com)
[01:11:30] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[01:11:39] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[01:12:48] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 256 seconds)
[01:13:11] *** Joins: newpy (~newpy@2601:280:4381:1390:d8a2:4368:1fe2:a8e3)
[01:13:45] *** Quits: n00b101 (uid448161@id-448161.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[01:13:49] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[01:14:15] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:14:35] *** Quits: bpluly (Lucy@82-69-31-48.dsl.in-addr.zen.co.uk) (Ping timeout: 244 seconds)
[01:14:44] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[01:16:03] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[01:16:45] *** Joins: georgios (~georgios@user/georgios)
[01:18:20] *** Joins: Pickchea (~private@user/pickchea)
[01:19:34] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[01:21:24] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[01:21:29] <Akuli> jinsun, apparently it took 30 minutes for me to create stubs for a small library and to get it merged :D https://github.com/python/typeshed/pull/6000
[01:22:15] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[01:22:50] <hexology> ParamSpec will help make *args and **kwargs a lot better
[01:23:09] *** Joins: diek (~diek@2804:14d:7684:9581:39a4:d67e:cbe7:7b90)
[01:23:14] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[01:23:16] <hexology> although there's still no way to "copy" annotations from one function or class to another
[01:23:23] <jinsun> Akuli: oh really fast, and they don't have to be complete I guess?
[01:23:25] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[01:23:36] <Akuli> jinsun, correct
[01:23:44] <jinsun> cool
[01:24:12] <hexology> which sounds stupid until you realize that 1) there's a ton of copying and pasting going on in type annotation world, and 2) the annotations are known statically anyway, so there's no reason you couldn't be able to "clone" a type from one function or class to another in most circumstances (and the edge cases would fall back to Any or object as per mypy settings)
[01:24:29] <Akuli> hexology, actually there is https://github.com/Akuli/porcupine/blob/363a3bde324f71f8632585687e84d84c7d95cb21/porcupine/utils.py#L88-L107
[01:24:31] *** Joins: rakoon (~rakoon@2a02:2149:824f:5900:5b2c:7391:5a57:9e3b)
[01:24:49] <hexology> huh
[01:24:55] *** Lord_of_Life_ is now known as Lord_of_Life
[01:25:09] *** Quits: diek (~diek@2804:14d:7684:9581:39a4:d67e:cbe7:7b90) (Client Quit)
[01:25:10] <hexology> let me read that linked issue
[01:25:28] <hexology> ah i see what's happening
[01:25:30] <hexology> yeah it's clever for sure
[01:25:38] <hexology> but i agree with codethief that it's a partial solution https://github.com/python/typing/issues/769#issuecomment-903896306
[01:25:44] <hexology> i'll probably use it though
[01:25:48] <Akuli> :)
[01:25:53] <hexology> there are other use cases too... like deriving a Protocol from a concrete class
[01:26:00] <hexology> or deriving a TypedDict from a class
[01:26:14] <Akuli> yeah, it is more of a "good enough" solution than "all handles corner cases are good" solution
[01:26:34] <hexology> and things like copying *args and/or **kwargs from a function when you don't have any "generic" context available
[01:26:37] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:27:00] <hexology> cool you wrote an IDE in tikinter
[01:27:02] <hexology> tkinter*
[01:27:10] <Akuli> :)
[01:27:10] <hexology> nice screenshots
[01:27:27] <Akuli> one of the motivating things to me was people disliking tkinter on #python
[01:27:30] <hexology> good readme too, balance between informative and not being verbose
[01:27:40] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 240 seconds)
[01:28:32] <hexology> is it possible in python to iterate over a buffered stream in chunks, such that the chunk size is exactly the size of the stream's internal buffer?
[01:29:16] <Akuli> if this is for a performance optimization, idk maybe just use a big buffer size? :D
[01:29:38] <hexology> ooh there's a method for it
[01:29:41] <Akuli> if this is "i don't want to block", you can use a non-blocking read on linux, and on windows it is apparently just not possible unless you know the number of bytes beforehand
[01:29:48] <hexology> https://docs.python.org/3/library/io.html#io.BufferedIOBase.read1
[01:30:24] <hexology> mostly i don't want my application to make decisions about buffering
[01:30:37] <hexology> at least, i don't want that decision to be made in more than 1 place
[01:30:52] <Akuli> :D
[01:31:08] <hexology> i'm planning on using anyio as in my code snippets, so i don't even know what apis they offer
[01:31:19] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[01:31:51] <hexology> i think ultimately i want to figure out a way to truly fork/pipe/dup/exec processes to behave like a real shell
[01:32:07] *** Joins: Pandadub (~Barones@186.213.206.209)
[01:32:27] <hexology> but every time i read how it works my brain melts, and i also assume i'd have to write a c extension for it
[01:32:28] <aphysically> agh
[01:32:30] *** Joins: resmo (~resmo@2a00:d420:9:8a00:3cd2:486:76de:5790)
[01:32:49] <Akuli> python goes pretty low-level
[01:32:55] <Akuli> os.pipe() returns 2 integers, for example
[01:33:04] <aphysically> having trouble getting multiple local packages where one depends on another, not sure if there's a way to get this right with PYTHONPATH somehow and building the first
[01:33:15] <hexology> oh no kidding there's os.pipe() and os.dup()
[01:33:46] *** Quits: ubert (~Thunderbi@178.115.65.0.wireless.dyn.drei.com) (Ping timeout: 256 seconds)
[01:33:46] <hexology> aphysically: what's the file layout?
[01:34:11] <hexology> you might need --find-links with pip install
[01:34:17] *** Quits: Barones (~Barones@2804:7f3:8987:d2a4:dca1:cd66:e0e9:a376) (Ping timeout: 245 seconds)
[01:34:24] <aphysically> projects/project1/pyproject.tml/src/project1/__init__.py
[01:34:28] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[01:34:32] <aphysically> then similar for project2, which is an entirely separate package
[01:35:03] <aphysically> I want to use project1 as a dependency in project2
[01:35:05] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[01:35:06] <hexology> in my org's monorepo we assume you are doing everything from the top-level of each project, and use --find-links with relative paths
[01:35:23] <hexology> so you'd be in project2, and our requirements.txt has --find-links=../project1
[01:35:30] <aphysically> I can install project1 manually with pip before installing project2, but tox still fails finding project1
[01:35:38] <aphysically> (in that case)
[01:35:52] <hexology> is there a way to pass pip args like --find-links thru tox? i imagine that there is or should be
[01:35:52] <aphysically> let me look up find-links
[01:36:03] *** Joins: zln (~zln@c80-217-230-193.bredband.tele2.se)
[01:36:07] <aphysically> let's see :)
[01:36:14] *** Quits: slee (~slee@user/slee) (Quit: Leaving)
[01:36:25] *** Quits: damonlynch (~ngaio@2601:245:c700:2c06:39f4:b7d8:b3d6:7378) (Quit: Leaving)
[01:36:39] <hexology> https://pip.pypa.io/en/stable/cli/pip_install/#install-find-links it basically is an extra location to look for installable distributions
[01:36:54] *** Joins: darksun (~darksun@user/darksun)
[01:37:08] *** Joins: slee (~slee@user/slee)
[01:37:37] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Remote host closed the connection)
[01:37:38] <hexology> depends if you want to do editable installs or not too
[01:37:53] <hexology> for editable you can just do --editable ../project1
[01:38:24] <hexology> people like to complain about python packaging but pip has accumulated a lot of flexibility
[01:39:08] *** Joins: c4017w (~c4017@209.52.68.8)
[01:39:34] <slee> habnabit_, hi again...regarding the earlier question on using the header to limit the amount of data the request grabs...i've tried using the range: 0-2048....but that only seems to work if the server you're pinging for data allows it....is there a python way to do this even if the server doesn't have/allow that deature?
[01:40:00] *** Joins: resmo_ (~resmo@2a00:d420:9:8a00:98bf:9f56:a38a:4125)
[01:40:09] <slee> s/deature/feature
[01:40:59] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[01:41:01] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[01:41:42] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 256 seconds)
[01:41:47] *** Quits: resmo (~resmo@2a00:d420:9:8a00:3cd2:486:76de:5790) (Ping timeout: 245 seconds)
[01:41:51] *** Joins: eazyy (~eazyy@user/eazyy)
[01:42:12] *** Quits: georgios (~georgios@user/georgios) (Ping timeout: 245 seconds)
[01:42:40] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 252 seconds)
[01:42:40] <aphysically> hmmm I'm still not sure the best way to get tox to figure out the dependency
[01:42:56] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Read error: Connection reset by peer)
[01:43:10] <aphysically> is it possible to get a pip-installable package onto the PYTHONPATH somehow?
[01:43:21] <aphysically> or uhh
[01:43:33] <aphysically> mmph
[01:43:38] <jinsun> pip install --editable ?
[01:43:44] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[01:44:03] <hexology> aphysically: you can write `--find-links` in the requirements file
[01:44:13] <aphysically> I don't mind if it's not editable, I pip installed it manually by specifying the directory jinsun, that satisfied the dependency
[01:44:32] <hexology> there's also a pip config file
[01:44:36] <aphysically> but then tox couldn't find the dependency in its isolated environment
[01:44:38] <hexology> do you _want_ editable or not?
[01:44:44] <aphysically> not particularly
[01:44:52] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[01:45:24] <aphysically> I'd rather just reinstall project1 when I want to update it so I can work on the two relatively independently
[01:47:18] <jinsun> ah tox isolated environment, then maybe you want to keep a pip config file
[01:47:33] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[01:47:48] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:48:02] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 245 seconds)
[01:48:10] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Remote host closed the connection)
[01:48:18] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[01:49:43] <jinsun> maybe you can put the path to parent of project1 in extra-index-url (that works for wheel files and sdists though, probably pip will not build from pyproject.toml like that)
[01:50:16] <jinsun> or just build them separately outside of tox, and put the wheels in a folder
[01:50:21] <aphysically> I can always build project1
[01:50:25] <hexology> if you're not using editable for this anyway, having pre-built wheels might make your life easier anyway
[01:50:37] <aphysically> I'm trying to get find-links to work right now
[01:50:44] <hexology> you could even dump them all into a single common build/ directory
[01:50:56] <aphysically> not sure why it's not working, I'm assuming I'm being dumb with it somehow
[01:51:45] *** Joins: stdout (~stdout@50.115.255.72)
[01:51:56] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:52:20] *** Quits: kindablue (znc@irc.tpurist.com) (Quit: System Rebooting..)
[01:52:30] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Remote host closed the connection)
[01:52:42] <hexology> https://bpa.st/IZVA
[01:53:00] <hexology> you can dump your sdists and wheels into that build/ directory
[01:53:04] *** Joins: kindablue (znc@2001:19f0:6001:175a:dedb:79f4:38d:5b35)
[01:53:14] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-58c384-213.dhcp.inet.fi) (Read error: Connection reset by peer)
[01:53:17] <hexology> so you don't have to --find-links for every dep, you just do it in every project
[01:53:20] *** Quits: y1n (~y1n@213162073074.public.t-mobile.at) (Ping timeout: 244 seconds)
[01:53:38] *** Quits: Liblx (~Alex@2a02:810c:280:59c:359a:7e57:9b73:48bf) (Quit: WeeChat 3.2)
[01:53:40] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 252 seconds)
[01:54:27] <hexology> i probably didn't do the tox config right but that's the idea anyway
[01:54:38] <hexology> i don't really use tox, at work we just pin everything to 3.8
[01:55:04] <hexology> (although i'm pretty sure our prod docker images are using 3.8.1 instead of the latest 3.8.x)
[01:55:20] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:55:35] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[01:55:59] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[01:56:38] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:57:31] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Ping timeout: 252 seconds)
[01:58:38] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[01:59:12] *** Quits: zln (~zln@c80-217-230-193.bredband.tele2.se) (Quit: WeeChat 3.2)
[02:00:44] <aphysically> find-links doesn't seem to work with the raw package directory, I have to build a wheel, but I guess that's okay
[02:01:05] <russw> a reasonably convention for a cli tool to output human readable text (like `1K`) is a `-h` switch... what would you say a similar convention might be for a switch to dump the raw number? e.g. `1732`
[02:01:07] <hexology> hm i guess that's one limitation
[02:01:30] <russw> oops - bad rewrite, but the gist is there ;)
[02:01:45] <hexology> russw: some tools use a convention like `-h` to turn the setting on and `-H` to turn it off, if it's already enabled in a config file or something
[02:01:55] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 252 seconds)
[02:02:17] <russw> interesting idea. I was thinking I'd seen -p for "parseable" or somesuch, before.
[02:02:35] <hexology> `-r` for "raw" is also a common option
[02:02:58] *** Quits: Akuli (~Akuli@87-94-108-135.bb.dnainternet.fi) (Quit: Leaving)
[02:04:00] <jinsun> --porcelain=version (but only git does that really)
[02:04:04] *** Quits: simone (~nya@user/sx) (Quit: Ping timeout (120 seconds))
[02:04:16] *** Joins: simone (~nya@user/sx)
[02:04:47] *** Joins: jl (~kk@user/jl)
[02:06:16] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:06:34] *** Joins: zln (~zln@c80-217-230-193.bredband.tele2.se)
[02:07:49] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:68d6:790f:36f0:bbce)
[02:10:14] <stewie925> hi guys, been stuck with this algorithm and would like to request some "clues", NOT asking for complete python code solution :)   https://imgur.com/a/3OHsm8W
[02:11:12] <bjs> stewie925: what kind of clues?   it's hard to know what level to give with 0 extra info
[02:11:13] *** Joins: Samian (~Sami@2620:10d:c091:480::1:77bb)
[02:11:35] <bjs> stewie925: i guess the first clue is to start by writing `def solution(S): ` into a .py file and to start writing some Python code to solve it?
[02:11:41] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[02:11:51] <stewie925> hi bjs
[02:12:19] <phy1729> I would just note the splits can only move around where the "b"s are
[02:12:23] <stewie925> well yes, its basically asking to write a python program
[02:14:16] *** Quits: slee (~slee@user/slee) (Quit: Leaving)
[02:14:28] <stewie925> phy1729: and the rule is to split the string into three parts, and that each part will have the same number of a's
[02:14:52] <stewie925> so I suppose a string of more than 4 a's would be invalid
[02:15:18] <phy1729> right so that means the "a"s can't move from one part to another; only the "b"s can
[02:15:42] *** Quits: emika (~emika@185.207.249.5) (Ping timeout: 256 seconds)
[02:15:57] <jinsun> stewie925: why will 6 "a"s be invalid, aa,aa,aa ?
[02:16:19] <deltab> that'd be fine
[02:16:23] *** Joins: emika (~emika@185.207.249.234)
[02:16:27] <stewie925> jinsun, it depends on the placement of the a's
[02:16:27] <deltab> any multiple of 3
[02:16:53] <stewie925> oh hmm....
[02:17:03] <stewie925> let me try something
[02:17:09] <jinsun> stewie925: not really, it depend on the placement on commas, and you control that
[02:17:11] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[02:17:42] *** Quits: zln (~zln@c80-217-230-193.bredband.tele2.se) (Quit: WeeChat 3.2)
[02:17:59] <stewie925> jinsun... you have a point...
[02:18:07] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[02:18:12] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Quit: Leaving)
[02:18:20] <stewie925>  but for the sake of simplicity for now, am looking to do just 3 a's LOL...
[02:18:24] <jinsun> any multiple of 3 should be fine I think, so maybe count the number of a and return 0  if it is not a multiple of 3, then write the rest of the code assuming it is multiple of 3
[02:18:32] *** Quits: junktext (~junktext@77.247.181.218) (Ping timeout: 256 seconds)
[02:19:19] <deltab> look at the example of bbbbbbbbb: how can you list the different ways of splitting that?
[02:19:34] <stewie925> the samples didn't show more than 3 a's, so I'm hoping to start from there...   so as starters, I just save the index number of the 'a' occurrences in a list, then try to iterate through the a-index list
[02:20:15] <phy1729> No a's is the hardest case imo
[02:20:20] <stewie925> deltab:  true...
[02:20:26] <deltab> the examples are short making it easier to fit them on a page; but largere examples can be easier to think about
[02:20:51] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:21:20] <deltab> solve the hardest case and the rest is simpler, maybe even trivial :-)
[02:21:27] *** Joins: madduck (~madduck@user/madduck)
[02:21:39] <phy1729> Consider if there are only a's and no b's. You can immedietly tell where the pipes should go right (assuming the number is a multiple of 3)
[02:22:17] <nyuszika7h> is there a way to make a github repo containing wheels and have pip install from that? it's a private thing I don't want to publish to pypi
[02:22:45] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::4433) (Quit: Konversation terminated!)
[02:23:06] <jinsun> nyuszika7h: you can just have a folder called pypi and have pip install from that
[02:23:26] <stewie925> so for `ABABA` we can have these combos:  `a ba ba`, `a bab a`, `ab a ba`, `ab ab a`
[02:23:35] <deltab> phy1729: ah yeah, that constrains the initial search space
[02:23:36] *** Quits: mantiX (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[02:23:37] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:23:50] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Remote host closed the connection)
[02:24:05] <phy1729> Now consider aa | aba | aa    the inner b is irrelevant because it's not next to a partition
[02:24:10] *** Joins: shad (~shad@user/shad)
[02:24:17] *** Quits: kindablue (znc@2001:19f0:6001:175a:dedb:79f4:38d:5b35) (Quit: System Rebooting..)
[02:24:41] <stewie925> so for `ABABA` we can have these combos:  `1. a ba ba 2. a bab a 3. ab a ba  4. ab ab a`
[02:24:55] <stewie925> that should be lowercase not uppercase, sorry
[02:25:05] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 252 seconds)
[02:25:08] *** Joins: kindablue (znc@2001:19f0:6001:175a:5400:3ff:fe51:d77f)
[02:25:12] *** Joins: darksun (~darksun@user/darksun)
[02:25:34] <stewie925> I see the pattern where it starts with 1 character (1 and 2) then expanded to two chars (3 - 4)
[02:26:13] <phy1729> stewie925: do you see how inner b's are irrelevant?
[02:27:42] <stewie925> phy1729: yes I see that, they just want the same number of a's in each of the three parts
[02:28:16] *** Joins: qlixed (~qlixed@152.170.36.244)
[02:28:23] <phy1729> So it's only the bs on a partition boundry that matter and each partition boundry is independent from the other (unless there are no a's)
[02:28:30] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:28:38] <stewie925> but for the algo test, I think we could go with just one a for each of the 3 parts, to make it simpler
[02:28:52] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[02:29:42] <jinsun> so no "a"s should be handled separately I guess, would be simpler that way, because we can assume boundaries independent
[02:29:42] <stewie925> and yes, I have an issue with how they determine the `bbbbb` having only 6 combos of 3 parts - it could be a free-for-all
[02:29:57] <bjs> stewie925: a free for all?
[02:30:18] <zware> Once you solve for 0 'a's, isn't the solution the same for any multiple of 3 'a's?
[02:30:41] <zware> Hmm, scratch that
[02:31:01] *** Joins: fikran (~fikran@user/fikran)
[02:31:28] <stewie925> zware:  yeah that algo test is crazy lol
[02:31:28] <zware> (clumping of a's shoots down that thought)
[02:32:01] *** Joins: Xano (~Xano@2a00:23c4:4200:a00:35ec:8e0f:9e24:6755)
[02:32:06] <stewie925> I was given 60 minutes to solve it - those 60 mins went down the toilet
[02:32:18] *** Quits: Xano (~Xano@2a00:23c4:4200:a00:35ec:8e0f:9e24:6755) (Client Quit)
[02:33:02] <stewie925> but looking at the pattern of this `ababa` breakdown:  `1. a ba ba 2. a bab a 3. ab a ba  4. ab ab a`
[02:33:51] <stewie925> so it starts with the first occurrence of a for 1 and 2 :  `1. a ba ba 2. a bab a`
[02:34:19] <phy1729> stewie925: do you see how if there's at least one a in each partition, each partition boundry is independent?
[02:34:57] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[02:35:23] <gitesh> What's the difference between an object and an instance
[02:35:27] <stewie925> phy1729: yes, I do
[02:35:28] *** Quits: audiocat (~audio@2603-8081-1801-3bb5-56dd-3a97-504c-0c8d.res6.spectrum.com) (Ping timeout: 252 seconds)
[02:35:43] <bjs> gitesh: you keep asking this same question.  Nothing.  An object is an instance of a class.
[02:36:10] <deltab> gitesh: 'instance' is used to express the relationship of an object to a class
[02:36:14] <phy1729> so let's consider just one partition, how many ways are there to split  aba or abba or abbba etc. ?
[02:36:34] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 252 seconds)
[02:36:40] *** Quits: arti (~arti@2001:bb8:4008:2020::f) (Ping timeout: 240 seconds)
[02:36:46] *** Joins: zln (~zln@c80-217-230-193.bredband.tele2.se)
[02:36:46] <bjs> gitesh: are you keeping notes or writing things down?  It might help you be able to look back at things you've discussed previously.
[02:37:00] *** Joins: arti (~arti@193.40.103.195)
[02:37:03] <stewie925> phy1729: it would be just 2  ways for all of them
[02:37:12] <stewie925> because each partition should have at least one a
[02:37:40] <deltab> gitesh: what's the difference between a person and a descendant?
[02:37:58] <phy1729> stewie925: not quite, try splitting after each character and see if it works or not
[02:39:00] <stewie925> phy1729: could you share how you would separate abbba?
[02:39:12] <stewie925> ahhhh I got it
[02:40:24] <anddam> howdy, as general rule should I check for wrong condition before running a statement or should I run and catch the exception?
[02:40:34] <anddam> say   def my_function(value): return len(value)
[02:40:47] <anddam> and then someone starts calling my_function(None)
[02:41:13] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[02:41:23] <stewie925> `abbba = 1. a bbba  2. ab bba 3. abb ba 4. abbb a` then 5-8 would be the reversed string of 1-4.
[02:41:41] <phy1729> Personally I'd use type annotations and a checker like mypy and then it's caught before runtime
[02:41:54] <bjs> anddam: as a general rule there is no general rule
[02:42:02] <phy1729> stewie925: so for 3 b's there are 4 options
[02:42:08] <anddam> I ask due to the "better ask for forgiveness than for permission"
[02:42:11] <bjs> anddam: typically you wouldn't check "too much",  but some people like to check at the "interfaces"
[02:42:19] <stewie925> oh wait should just `abbba = 1. a bbba  2. ab bba 3. abb ba 4. abbb a`
[02:42:39] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:60f9:ffc0:b80a:de8f) (Quit: Textual IRC Client: www.textualapp.com)
[02:42:44] <deltab> anddam: things to consider: how likely is it to happen? what can you do when it happens?
[02:42:46] <bjs> anddam: a typical thing is to catch the exceptions and then re-raise your own custom ones to make things easier to understand.  Sometimes you *do* want to check early though
[02:43:11] <anddam> bjs: ok, I'll play by ear then
[02:43:19] <bjs> anddam: e.g. before you actually start writing files or deleting things or writing to a database or before you go to sleep for 60 minutes just to tell them it was malformed input and nothing was running
[02:43:44] <anddam> well in my case I am wrapping a C ffi library and the functions are encoding strings as UTF-8 bytes using ctypes
[02:43:55] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[02:43:55] <anddam> only thing is all of a sudden rather than strings I have None as inputs as well
[02:44:10] <anddam> so I need to handle that and return None and 0 for the length
[02:44:44] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Read error: Connection reset by peer)
[02:44:45] <stewie925> phy1729: all I can think of is I should record the indices of the 'a' occurrences, then use the for loop against the index list and write out a correct formula to splice the string into three occurrences ...
[02:44:49] <anddam> I did it by actually checking if value is None:  and then remembered the EAFP thing, so I figured I rather ask
[02:45:18] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[02:45:22] <anddam> deltab: well since now I am writing the part that requires those None, now it's all Nones so quite often
[02:45:58] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[02:46:23] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[02:46:30] <phy1729> stewie925: I'd say at a high level: count the a's, figure out where the paritions go and how many b's are there, then there's a short calculation with no looping you can do to get the answer
[02:46:48] *** Quits: akk (~akk@174-28-98-206.albq.qwest.net) (Quit: +++)
[02:47:10] <stewie925> thanks phy1729!   hopefully I can solve this on my own
[02:48:18] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[02:48:59] <aphysically> thanks hexology I (finally) got it sorted, although the inability to install from the directory is a bit annoying
[02:50:07] <aphysically> honestly I think a better solution might be just vendoring the module I want to share
[02:51:16] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[02:51:24] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[02:53:18] *** Quits: qlixed (~qlixed@152.170.36.244) (Quit: That's all folks!!)
[02:54:34] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Remote host closed the connection)
[02:56:09] *** Joins: junktext (~junktext@77.247.181.212)
[02:59:01] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[02:59:51] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3-dev)
[03:00:26] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:00:57] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[03:02:06] *** Joins: Fedorasan (~fedorasan@user/fedorasan)
[03:02:34] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[03:03:09] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:05:18] <Soni> aww https://bugs.python.org/issue23354
[03:05:34] *** Quits: magla (~gelignite@55d44ca3.access.ecotel.net) (Quit: Stay safe!)
[03:05:36] <Soni> also wait, isn't that technically UB? (signed integer overflow)
[03:06:43] *** Quits: Skyfire (~pyon@user/pyon) (Quit: WeeChat 3.2)
[03:07:37] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 245 seconds)
[03:07:53] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[03:08:07] <bjs> Soni: only if it was overflowing in the C
[03:09:09] <nedbat> Soni: i guess technically it is.
[03:10:06] <hexology> aphysically: i'm not sure how that's better than building a wheel or sdist
[03:10:08] <hexology> you can also just specify the filename directly in the requirements
[03:10:10] <hexology> that's not really ideal though
[03:10:13] <hexology> because it makes your setup.py non-portable outside your specific setup
[03:10:27] <bjs> I would guess there’s a lot of cases where Python hits UB in extreme scenarios. overfilling stack and things like that
[03:10:29] <hexology> but you _can_ list the filename in requirements.in and it will work
[03:11:16] <hexology> so you can literally put `../private1` in your requirements.in, and just put the name `private1` in your setup.py
[03:11:53] *** Joins: withered_wolf (~withered_@2600:1008:b11a:241:3c19:9464:d511:ad30)
[03:11:53] <hexology> if you run `pip install -r requirements.in && pip install .` , pip will be satisfied because it's already installed and it won't complain about the missing dep
[03:12:00] *** Joins: Ivii (~Ivyy@2001:a61:13eb:f801:e833:4a95:1b34:64e2)
[03:15:52] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:16:10] *** Quits: withered_wolf (~withered_@2600:1008:b11a:241:3c19:9464:d511:ad30) (Ping timeout: 240 seconds)
[03:17:23] *** Joins: dangrenier83 (~username@user/dangrenier83)
[03:17:40] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[03:18:12] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[03:18:55] <cloudbender> will setting/resetting the paths be adequate for me to run both of python 3.x and 2.7 ?
[03:19:25] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:19:31] <nedbat> cloudbender: you can install them side-by-side.  then just run the python you want directly. or change the path to point to the python you want
[03:20:01] *** Quits: ferz (~ferz@93-39-140-21.ip76.fastwebnet.it) (Ping timeout: 252 seconds)
[03:20:17] <cloudbender> netbat thank you.  Is there a 3.x version I should hold with ? I'm not interested in bleeding edge.
[03:20:32] *** Quits: rakoon (~rakoon@2a02:2149:824f:5900:5b2c:7391:5a57:9e3b) (Ping timeout: 245 seconds)
[03:20:42] <jinsun> you can run them as python2 and python3 and avoid messing with path also
[03:20:52] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 256 seconds)
[03:21:05] <jinsun> (keep python3 == python by default)
[03:21:33] <nedbat> cloudbender: 3.8 or 3.9 are great
[03:21:38] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[03:22:03] <cloudbender> yeah. I'll probably set up icons to create specific command shells per version
[03:22:05] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Remote host closed the connection)
[03:22:12] <cloudbender> 3.8 it is then
[03:22:32] <jinsun> no 3.9 minimum
[03:22:46] <cloudbender> ok
[03:23:18] *** Quits: eazyy (~eazyy@user/eazyy) (Quit: Leaving)
[03:23:40] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[03:24:06] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[03:24:14] <jinsun> 3.9 is not really bleeding edge, 3.10.0rc1 is
[03:25:23] <cloudbender> I need to stay compatible with windows 7
[03:25:41] *** Quits: Payam (~Payam@c188-150-219-9.bredband.tele2.se) (Quit: Leaving)
[03:25:43] <jinsun> oh no
[03:26:21] <jinsun> then you are stuck with 3.8 I guess
[03:27:08] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:28:42] <cloudbender> what is meant by 'windows embbedable file' int terms of download versions ?
[03:28:57] *** Quits: shabius_ (~shabius@45.15.19.195) (Quit: Leaving)
[03:30:03] <cloudbender> nevermind
[03:30:36] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[03:31:08] *** Joins: djhankb (~djhankb@208.113.164.68)
[03:33:13] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[03:33:58] *** Quits: Shanzem (~Shanzem@86.31.109.147) (Quit: sudo Shanzem -lol -updoot -karma -gold >/dev/lies)
[03:34:11] *** Joins: lightbulbjim (~lightbulb@user/lightbulbjim)
[03:44:33] *** Quits: Gurkenglas (~Gurkengla@dslb-088-075-022-191.088.075.pools.vodafone-ip.de) (Read error: Connection reset by peer)
[03:46:13] *** Quits: voidcat_ (~voidcat@miaow/classabbyamp) (Quit: nyaa~)
[03:46:32] *** Joins: djapo (~archangel@user/djapo)
[03:46:51] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:46:59] *** Joins: voidcat (~voidcat@miaow/classabbyamp)
[03:48:58] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[03:51:08] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 244 seconds)
[03:53:03] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[03:53:06] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[03:54:10] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 240 seconds)
[03:56:22] *** Quits: junktext (~junktext@77.247.181.212) (Ping timeout: 245 seconds)
[03:56:48] *** Quits: pragma- (~chaos@user/pragmatic-chaos) (Quit: Bye!)
[04:00:11] *** Joins: qk1z (~qk1z@193-82-233-119.tpgi.com.au)
[04:01:22] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[04:02:47] *** Joins: Wulf4 (~Wulf@user/wulf)
[04:03:22] *** Joins: Powerhouse6666 (~Powerhous@security.orcacomputers.com)
[04:03:36] *** Joins: pragma- (~chaos@user/pragmatic-chaos)
[04:05:52] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Quit: WeeChat 3.2)
[04:06:12] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[04:06:12] *** Wulf4 is now known as Wulf
[04:09:05] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[04:10:35] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[04:10:46] *** Quits: sirn (~sirn@user/sirn) (Ping timeout: 244 seconds)
[04:11:45] *** Quits: Gaffel (~gaffel@h-178-174-170-170.A1405.priv.bahnhof.se) (Quit: What's that?)
[04:13:55] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 252 seconds)
[04:15:25] *** Joins: Gaffel (~gaffel@h-178-174-170-170.A1405.priv.bahnhof.se)
[04:16:03] *** PJBoy is now known as Guest6601
[04:16:03] *** Quits: Guest6601 (~PJBoy@user/pjboy) (Killed (calcium.libera.chat (Nickname regained by services)))
[04:16:11] *** Joins: PJBoy (~PJBoy@user/pjboy)
[04:17:55] *** Joins: Fiji (~Fiji@user/fiji)
[04:18:58] *** Joins: ferz (~ferz@93-39-140-21.ip76.fastwebnet.it)
[04:19:33] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Ping timeout: 244 seconds)
[04:20:07] *** Quits: ChkDigit (~u388mw@207-195-34-73.prna.static.sasknet.sk.ca) (Ping timeout: 245 seconds)
[04:22:38] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 256 seconds)
[04:23:01] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[04:24:43] *** Quits: ferz (~ferz@93-39-140-21.ip76.fastwebnet.it) (Ping timeout: 244 seconds)
[04:28:36] *** BillyZane2 is now known as BillyZane
[04:30:03] *** Quits: Gaffel (~gaffel@h-178-174-170-170.A1405.priv.bahnhof.se) (*.net *.split)
[04:30:03] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (*.net *.split)
[04:30:03] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (*.net *.split)
[04:30:03] *** Quits: pragma- (~chaos@user/pragmatic-chaos) (*.net *.split)
[04:30:03] *** Quits: Powerhouse6666 (~Powerhous@security.orcacomputers.com) (*.net *.split)
[04:30:03] *** Quits: qk1z (~qk1z@193-82-233-119.tpgi.com.au) (*.net *.split)
[04:30:03] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (*.net *.split)
[04:30:03] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (*.net *.split)
[04:30:03] *** Quits: lightbulbjim (~lightbulb@user/lightbulbjim) (*.net *.split)
[04:30:03] *** Quits: djhankb (~djhankb@208.113.164.68) (*.net *.split)
[04:30:03] *** Quits: dangrenier83 (~username@user/dangrenier83) (*.net *.split)
[04:30:03] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (*.net *.split)
[04:30:03] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (*.net *.split)
[04:30:03] *** Quits: arti (~arti@193.40.103.195) (*.net *.split)
[04:30:03] *** Quits: emika (~emika@185.207.249.234) (*.net *.split)
[04:30:03] *** Quits: c4017w (~c4017@209.52.68.8) (*.net *.split)
[04:30:03] *** Quits: zensei_ (~zensei@user/zensei) (*.net *.split)
[04:30:03] *** Quits: ravan (~ravan@user/ravan) (*.net *.split)
[04:30:03] *** Quits: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net) (*.net *.split)
[04:30:03] *** Quits: BigShip (~BigShip@user/bigship) (*.net *.split)
[04:30:03] *** Quits: hudo (~hudo@62.68.27.70) (*.net *.split)
[04:30:03] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (*.net *.split)
[04:30:03] *** Quits: wolfgang (~wolfgang@101.174.6.197) (*.net *.split)
[04:30:03] *** Quits: kdbxw (~kdbxw@94.180.185.33) (*.net *.split)
[04:30:03] *** Quits: nurupo (~nurupo.ga@user/nurupo) (*.net *.split)
[04:30:03] *** Quits: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net) (*.net *.split)
[04:30:03] *** Quits: FluffyMask (~masque@user/fluffymask) (*.net *.split)
[04:30:03] *** Quits: hsv (~unknown@user/hsv) (*.net *.split)
[04:30:03] *** Quits: twobitsprite (~twobitspr@66.115.166.148) (*.net *.split)
[04:30:03] *** Quits: davor (~davor@user/davor) (*.net *.split)
[04:30:03] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (*.net *.split)
[04:30:03] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (*.net *.split)
[04:30:03] *** Quits: fannagoganna (~tanim@c-73-40-72-85.hsd1.va.comcast.net) (*.net *.split)
[04:30:03] *** Quits: blddk (~admin@185.233.252.229) (*.net *.split)
[04:30:03] *** Quits: rdvn (~rdvn@user/rdvn) (*.net *.split)
[04:30:03] *** Quits: zivoni (~tomas@user/zivoni) (*.net *.split)
[04:30:03] *** Quits: heco (~redrum@user/redrum88) (*.net *.split)
[04:30:03] *** Quits: ELFrederich (~ELFrederi@134.244.29.70) (*.net *.split)
[04:30:03] *** Quits: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net) (*.net *.split)
[04:30:03] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (*.net *.split)
[04:30:03] *** Quits: LiftLeft (~LiftLeft@172.98.92.15) (*.net *.split)
[04:30:03] *** Quits: realies (~realies@user/realies) (*.net *.split)
[04:30:03] *** Quits: supakeen (~user@python/site-packages/supakeen) (*.net *.split)
[04:30:03] *** Quits: wender (~Wender@186.210.224.40) (*.net *.split)
[04:30:03] *** Quits: vbgunz (~vbgunz@35.141.71.47) (*.net *.split)
[04:30:03] *** Quits: newbie|2 (~Warped@user/warped) (*.net *.split)
[04:30:03] *** Quits: nyah (~nyah@bcdcb6e3.skybroadband.com) (*.net *.split)
[04:30:03] *** Quits: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (*.net *.split)
[04:30:03] *** Quits: xakan (~xakan@ns354170.ip-91-121-101.eu) (*.net *.split)
[04:30:03] *** Quits: ice9 (~ice9@user/ice9) (*.net *.split)
[04:30:03] *** Quits: seednode (~seednode@user/seednode) (*.net *.split)
[04:30:03] *** Quits: Armen (~Armen@armen138.com) (*.net *.split)
[04:30:03] *** Quits: aead (~aead@user/aead) (*.net *.split)
[04:30:03] *** Quits: montxero (~user@149.167.149.74) (*.net *.split)
[04:30:03] *** Quits: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com) (*.net *.split)
[04:30:03] *** Quits: platta (~platta@pool-71-187-23-254.nwrknj.fios.verizon.net) (*.net *.split)
[04:30:03] *** Quits: byanka (~byanka@185.176.110.253) (*.net *.split)
[04:30:03] *** Quits: Strom (strom@fedora/strom) (*.net *.split)
[04:30:03] *** Quits: Axy (~Axy@user/axy) (*.net *.split)
[04:30:03] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (*.net *.split)
[04:30:03] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (*.net *.split)
[04:30:03] *** Quits: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com) (*.net *.split)
[04:30:03] *** Quits: kr0nk (~kr0nk@user/kr0nk) (*.net *.split)
[04:30:03] *** Quits: odrling (~odrling@korone.aidoru.agency) (*.net *.split)
[04:30:03] *** Quits: nickodd (~nickodd@user/nickodd) (*.net *.split)
[04:30:03] *** Quits: jpic (~jpic@82.142.28.254) (*.net *.split)
[04:30:03] *** Quits: pr3d4t0r (~zhenya01@user/pr3d4t0r) (*.net *.split)
[04:30:03] *** Quits: menace (~someone@user/menace) (*.net *.split)
[04:30:03] *** Quits: jinsun (~quassel@user/jinsun) (*.net *.split)
[04:30:03] *** Quits: BillyZane (~BillyZane@91.196.220.173) (*.net *.split)
[04:30:03] *** Quits: leahey (~leahey@static.36.0.217.95.clients.your-server.de) (*.net *.split)
[04:30:03] *** Quits: Dev0n (~Dev0n@user/dev0n) (*.net *.split)
[04:30:03] *** Quits: LuKaRo (~LuKaRo@p4fc334cf.dip0.t-ipconnect.de) (*.net *.split)
[04:30:03] *** Quits: Pixi (~Pixi@user/pixi) (*.net *.split)
[04:30:03] *** Quits: rtur (~weechat@mail.rtur.org) (*.net *.split)
[04:30:03] *** Quits: gloin (~gloin@user/gloin) (*.net *.split)
[04:30:03] *** Quits: rjwiii (~mr-rich@072-187-028-004.res.spectrum.com) (*.net *.split)
[04:30:03] *** Quits: envex (~envex@cpe-173-91-189-33.neo.res.rr.com) (*.net *.split)
[04:30:03] *** Quits: cdown (~cdown@163.114.131.1) (*.net *.split)
[04:30:03] *** Quits: Vision (~Vision@024-178-231-173.res.spectrum.com) (*.net *.split)
[04:30:03] *** Quits: OPK (~OPK@user/opk) (*.net *.split)
[04:30:03] *** Quits: et (~et@user/et) (*.net *.split)
[04:30:03] *** Quits: pacbard (~pacbard@user/pacbard) (*.net *.split)
[04:30:03] *** Quits: asd (~noname@user/asd) (*.net *.split)
[04:30:03] *** Quits: m4v (~znc@ubuntu/member/m4v) (*.net *.split)
[04:30:03] *** Quits: Haxxa (~Haxxa@122.199.45.213) (*.net *.split)
[04:30:03] *** Quits: ShorTie (~ShorTie@205.sub-72-105-247.myvzw.com) (*.net *.split)
[04:30:03] *** Quits: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte) (*.net *.split)
[04:30:03] *** Quits: akaWolf (~akaWolf@akawolf.org) (*.net *.split)
[04:30:03] *** Quits: syrius (syrius@titan.stormtek.net) (*.net *.split)
[04:30:03] *** Quits: Abrax (~Abrax@user/abrax) (*.net *.split)
[04:30:03] *** Quits: Jigsy (~Jigsy@user/jigsy) (*.net *.split)
[04:30:03] *** Quits: sus (zero@user/zeromomentum) (*.net *.split)
[04:30:03] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (*.net *.split)
[04:30:04] *** Quits: hudo_ (~hhudo_@37.24.178.194) (*.net *.split)
[04:30:04] *** Quits: dhch (~dhch@185.213.154.168) (*.net *.split)
[04:30:04] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (*.net *.split)
[04:30:04] *** Quits: fjmorazan (~quassel@user/fjmorazan) (*.net *.split)
[04:30:04] *** Quits: jmft2 (~JMFT@82.3.54.26) (*.net *.split)
[04:30:04] *** Quits: daniel-k (~daniel-k@fsf/emeritus/daniel-k) (*.net *.split)
[04:30:04] *** Quits: NightMonkey (~NightMonk@user/nightmonkey) (*.net *.split)
[04:30:04] *** Quits: Nei (~ailin@user/nemui) (*.net *.split)
[04:30:04] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (*.net *.split)
[04:30:04] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (*.net *.split)
[04:30:04] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (*.net *.split)
[04:30:04] *** Quits: rodstewart (~dmartins@188.ip-149-56-97.net) (*.net *.split)
[04:30:04] *** Quits: dfch (~dfch@user/dfch) (*.net *.split)
[04:30:04] *** Quits: nigelb (~nigel@zeus.nigelb.me) (*.net *.split)
[04:30:04] *** Quits: rexbinary (~rexbinary@user/rexbinary) (*.net *.split)
[04:30:04] *** Quits: Geronimo (~Geronimo@user/geronimo) (*.net *.split)
[04:30:04] *** Quits: km (~km@static.55.93.181.135.clients.your-server.de) (*.net *.split)
[04:30:04] *** Quits: j00n (~mario@user/j00n) (*.net *.split)
[04:30:04] *** Quits: luke-jr (~luke-jr@user/luke-jr) (*.net *.split)
[04:30:04] *** Quits: fluter (~fluter@user/fluter) (*.net *.split)
[04:30:04] *** Quits: Bardon (~Bardon@user/Bardon) (*.net *.split)
[04:30:04] *** Quits: birkoff (birkoff@user/birkoff) (*.net *.split)
[04:30:10] *** Joins: nigelb (~nigel@zeus.nigelb.me)
[04:30:11] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[04:30:12] *** Joins: akaWolf (~akaWolf@akawolf.org)
[04:30:13] *** Joins: odrling (~odrling@korone.aidoru.agency)
[04:30:16] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[04:30:23] *** Joins: montxero (~user@149.167.149.74)
[04:30:24] *** Joins: sus (zero@user/zeromomentum)
[04:30:32] *** Joins: Geronimo (~Geronimo@user/geronimo)
[04:30:34] *** Joins: dhch (~dhch@185.213.154.168)
[04:30:34] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[04:30:35] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[04:30:36] *** Joins: wolfgang (~wolfgang@101.174.6.197)
[04:30:40] *** Joins: twobitsprite (~twobitspr@66.115.166.148)
[04:30:40] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[04:30:43] *** Joins: rdvn (~rdvn@user/rdvn)
[04:30:44] *** Joins: arti (~arti@2001:bb8:4008:2020::f)
[04:30:48] *** Joins: jinsun (~quassel@user/jinsun)
[04:30:50] *** Joins: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net)
[04:30:54] *** Joins: seednode (~seednode@user/seednode)
[04:30:58] *** Joins: gloin (~gloin@user/gloin)
[04:31:01] *** Joins: ShorTie (~ShorTie@205.sub-72-105-247.myvzw.com)
[04:31:02] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[04:31:05] *** Joins: Armen (~Armen@armen138.com)
[04:31:08] *** Joins: Abrax (~Abrax@user/abrax)
[04:31:15] *** Joins: Nei (~ailin@user/nemui)
[04:31:17] *** Quits: Abrax (~Abrax@user/abrax) (Remote host closed the connection)
[04:31:27] *** Joins: m4v (~znc@ubuntu/member/m4v)
[04:31:32] *** Joins: Jigsy (~Jigsy@user/jigsy)
[04:31:38] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[04:31:45] *** Joins: heco (~redrum@user/redrum88)
[04:31:53] *** Joins: LiftLeft (~LiftLeft@172.98.92.15)
[04:31:55] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[04:31:58] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[04:31:58] *** Joins: km (~km@2a01:4f9:c011:1979::1)
[04:32:00] *** Joins: Abrax (~Abrax@user/abrax)
[04:32:05] *** Joins: Bardon (~Bardon@user/Bardon)
[04:32:06] *** Joins: realies (~realies@user/realies)
[04:32:08] *** Joins: pragma- (~chaos@user/pragmatic-chaos)
[04:32:08] *** Joins: envex (~envex@cpe-173-91-189-33.neo.res.rr.com)
[04:32:12] *** Joins: Strom (strom@fedora/strom)
[04:32:12] *** Joins: BillyZane (~BillyZane@91.196.220.173)
[04:32:12] *** Joins: zensei (~zensei@user/zensei)
[04:32:12] *** Joins: nurupo (~nurupo.ga@user/nurupo)
[04:32:13] *** Joins: pacbard (~pacbard@user/pacbard)
[04:32:14] *** Joins: NightMonkey (~NightMonk@user/nightmonkey)
[04:32:16] *** Joins: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte)
[04:32:16] *** Joins: aead (~aead@user/aead)
[04:32:17] *** Joins: c4017w (~c4017@209.52.68.8)
[04:32:17] *** Joins: cdown (~cdown@163.114.131.1)
[04:32:18] *** Joins: Warped (~Warped@user/warped)
[04:32:18] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:32:19] *** Joins: Gaffel (~gaffel@h-178-174-170-170.A1405.priv.bahnhof.se)
[04:32:19] *** Joins: dfch (~dfch@user/dfch)
[04:32:30] *** Joins: et (~et@user/et)
[04:32:30] *** Joins: Axy (~Axy@user/axy)
[04:32:45] *** Joins: daniel-k (~daniel-k@fsf/emeritus/daniel-k)
[04:32:46] *** Joins: pr3d4t0r (~zhenya01@user/pr3d4t0r)
[04:33:08] *** Joins: supakeen (~user@python/site-packages/supakeen)
[04:33:38] *** Joins: syrius (syrius@titan.stormtek.net)
[04:33:40] *** Joins: Noisytoot (~noisytoot@sourcehut/user/noisytoot)
[04:33:41] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[04:33:54] *** Joins: davor (~davor@user/davor)
[04:34:03] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[04:34:13] *** Joins: sargon (~sargon@188.250.185.117)
[04:35:10] *** Joins: OPK (~OPK@user/opk)
[04:35:10] *** Joins: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com)
[04:35:17] *** Joins: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net)
[04:35:18] *** Joins: hsv (~unknown@user/hsv)
[04:35:18] *** Joins: asd (~noname@user/asd)
[04:35:20] *** Joins: jpic (~jpic@82.142.28.254)
[04:35:46] *** Joins: Haxxa (~Haxxa@122.199.45.213)
[04:35:48] *** Joins: lightbulbjim (~lightbulb@user/lightbulbjim)
[04:36:23] *** Joins: LuKaRo (~LuKaRo@p4fc334cf.dip0.t-ipconnect.de)
[04:36:57] *** Joins: audiocat (~audio@2603-8081-1801-3bb5-0534-c68d-e38c-6e43.res6.spectrum.com)
[04:37:55] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-4d20-c6a4-d08c-1eac.res6.spectrum.com)
[04:38:14] *** Joins: Macuser (~Macuser@216.30.159.201)
[04:39:03] *** Quits: acidsys (~LSD@2.lsd.systems) (Excess Flood)
[04:39:18] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:39:43] *** Joins: LSD (~LSD@2.lsd.systems)
[04:39:47] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[04:40:17] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Quit: WeeChat 2.8)
[04:40:41] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:41:15] *** Joins: FluffyMask (~masque@user/fluffymask)
[04:41:22] *** Quits: gr33n7001 (~gr33n7007@user/gr33n7007h) (Ping timeout: 245 seconds)
[04:42:40] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 240 seconds)
[04:43:00] *** Joins: gr33n7001 (~gr33n7007@user/gr33n7007h)
[04:43:39] *** Joins: Powerhouse6666 (~Powerhous@security.orcacomputers.com)
[04:44:10] *** Joins: nomic (~nomic@185.192.69.188)
[04:44:19] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[04:44:41] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[04:44:48] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[04:45:49] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[04:48:29] *** Quits: lightbulbjim (~lightbulb@user/lightbulbjim) (Quit: Sleeping...)
[04:51:41] *** Joins: lethu (~lethu@user/lethu)
[04:53:45] *** Joins: Soul_keeper (1000@wsip-184-183-17-199.ph.ph.cox.net)
[04:54:52] *** Joins: sirn (~sirn@user/sirn)
[04:55:12] <Soul_keeper> I'm having trouble finding out how to initialize a string to, in part, contain another. ie: string_a="whatever" string_b="""more {string_a} more"""   How should this be done ?
[04:55:21] *** Joins: BUSY (~BUSY@user/busy)
[04:56:21] <jinsun> put a f in front of the second string
[04:56:38] *** Quits: shad (~shad@user/shad) (Ping timeout: 256 seconds)
[04:56:41] <jinsun> `string_a="whatever"; string_b=f"more {string_a} more"`
[04:56:55] <Soul_keeper> will that work with multiline """ ?
[04:57:02] <jinsun> yes
[04:57:50] <Soul_keeper> SyntaxError: f-string: expecting '}'
[04:58:14] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[04:58:21] <Soul_keeper> is it supposed to be something other than  f"""  ?  ie: ""f"  ?
[04:58:45] <jinsun> no, this works on my machine `string_a="whatever"; string_b=f"""more {string_a} more"""`
[04:59:11] <mefistofeles> Soul_keeper: make sure you are using a python3 supported version
[04:59:39] <jinsun> does this simple exmple work for you?
[04:59:51] <jinsun> if yes then show code, if no then check python version
[04:59:58] <Soul_keeper> not working here for some reason, I just upgraded to Python 3.9.7
[05:00:57] <mefistofeles> Soul_keeper: are you running inside an interpreter? or running a file? how are you running it?
[05:01:16] <mefistofeles> s/interpreter/repl
[05:01:24] *** Joins: withered_wolf (~withered_@2600:1008:b11a:241:3c19:9464:d511:ad30)
[05:01:37] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:7435:d465:48ce:7317) (Read error: Connection reset by peer)
[05:02:37] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[05:03:35] <jinsun> that error you showed earlier comes if you start { but don't close }
[05:03:40] <jinsun> so check for typos
[05:04:03] *** Joins: brabrax (~brabrax@user/brabrax)
[05:04:57] <mefistofeles> yeah, also share the code :P that's the easiest and quickest way
[05:05:41] *** Quits: withered_wolf (~withered_@2600:1008:b11a:241:3c19:9464:d511:ad30) (Ping timeout: 252 seconds)
[05:08:13] <Soul_keeper> sorry, i'm trying to share code. It'll take me awhile
[05:08:55] *** Quits: cnsunyour (~sunyour@129.226.182.99) (Quit: WeeChat 3.1)
[05:09:12] *** Joins: ColonelJ (~ColonelJ@user/colonelj)
[05:09:17] *** Joins: sunyour (~sunyour@129.226.182.99)
[05:11:27] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:13:30] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:6186:d2df:bc96:d6ce)
[05:19:28] *** Joins: dangrenier83 (~username@user/dangrenier83)
[05:19:59] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[05:22:30] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[05:22:40] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 252 seconds)
[05:24:06] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[05:24:08] *** Joins: lightbulbjim (~lightbulb@user/lightbulbjim)
[05:27:09] *** Quits: lightbulbjim (~lightbulb@user/lightbulbjim) (Client Quit)
[05:29:53] *** Quits: zln (~zln@c80-217-230-193.bredband.tele2.se) (Ping timeout: 252 seconds)
[05:30:34] *** Joins: lightbulbjim (~lightbulb@user/lightbulbjim)
[05:32:13] *** Quits: Fedorasan (~fedorasan@user/fedorasan) (Quit: Going offline, see ya! (www.adiirc.com))
[05:32:42] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[05:35:03] *** Joins: cdown_ (~cdown@89.32.122.5)
[05:37:37] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 245 seconds)
[05:37:48] *** cdown_ is now known as cdown
[05:38:00] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[05:38:41] *** Quits: elgraz (~elgraz@151.65.9.160) (Quit: Leaving)
[05:43:57] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Remote host closed the connection)
[05:44:01] *** Joins: Fiji_ (~Fiji@user/fiji)
[05:44:31] *** Joins: aswsd (~helpme8@user/hlpme)
[05:44:37] *** Quits: lightbulbjim (~lightbulb@user/lightbulbjim) (Quit: Sleeping...)
[05:44:44] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[05:46:28] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[05:47:25] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 252 seconds)
[05:47:44] <Soul_keeper> http://sterlingdesktops.com/test.py   here is my example, not sure why the second part fails.
[05:48:32] *** Joins: czuk_cza (~mist@188.147.96.18.nat.umts.dynamic.t-mobile.pl)
[05:49:41] <jinsun_> there is a free { in the end in the second one (C_FILE_HEAD)
[05:49:49] *** Joins: Everything (~Everythin@37.115.210.35)
[05:49:54] <Soul_keeper> escape it ?
[05:50:03] <jinsun_> {{
[05:50:52] <Soul_keeper> thanks, that works
[05:52:58] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:53:11] <Soul_keeper> one last related question: the file header also contains the same string that is used several times elsewhere, is it good practice to have the string first in a python file ?
[05:53:18] *** Joins: lightbulbjim (~lightbulb@user/lightbulbjim)
[05:53:21] *** Joins: sagax (~sagax_nb@user/sagax)
[05:53:55] *** Quits: Fiji_ (~Fiji@user/fiji) (Quit: Leaving)
[05:54:07] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Remote host closed the connection)
[05:54:44] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[05:54:56] <jinsun_> you mean the #! ?
[05:55:10] <kevr> Where can I find documentation that tells exactly what the '^' specifier is in versions setup in pyproject.toml? My google fu is absolutely trash and I can't find any information about them in the 518 PEP page or anywhere similar.
[05:55:10] <Everything> 'shebang' it is called
[05:55:14] <Everything> yes, it's a good practice
[05:55:29] <Soul_keeper> jinsun_, yes, if I put the string immediately after that
[05:55:57] <kevr> For dependencies, that is.
[05:56:00] <Everything> Soul_keeper: #!/usr/bin/env python3
[05:58:18] <Soul_keeper> http://sterlingdesktops.com/entities.py   here is the example, entitites_json_url is declared below. Can/should I move that to the top above the header ?
[05:59:08] <Soul_keeper> i've read that the header is supposed to be first
[05:59:14] <grym> Soul_keeper: no need to declare everything at the top of a file.  scope close to use, and use functions
[05:59:20] <Everything> Soul_keeper: Python wouldn't care. This is global variable. After shebang it's OK. Not before
[05:59:28] <Everything> grym: +1
[05:59:30] *** Quits: nomic (~nomic@185.192.69.188) (Quit: Leaving)
[05:59:32] <grym> Soul_keeper: you would benefit from having a main() function at least
[06:00:28] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[06:00:39] <aswsd> there is a channel called #pyar with even more members than this one. anyone knows what it's about? i asked this question there yesterday but no one responded
[06:01:36] *** Quits: lightbulbjim (~lightbulb@user/lightbulbjim) (Quit: Sleeping...)
[06:01:50] <ColonelJ> Can anyone recommend a library, I want to create a server with both HTTP API and websockets in Python?  I did find Flask and Flask-SocketIO wondering if this is a good option?
[06:02:06] <Soul_keeper> Ok, thanks. There is a lot of things I can improve. I just have to learn the basics, most google searches turn up advanced tricks instead.
[06:03:02] <jinsun_> aswsd it is the Python Argentina channel apparently, https://www.python.org/community/irc/
[06:03:05] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[06:03:41] <grym> ColonelJ: fastAPI is quite nice!
[06:04:51] <grym> ColonelJ: we swapped out all our flask services for fastAPI at work
[06:05:26] <nedbat> aswsd: it's the Python Argentina channel
[06:05:30] <nedbat> oops
[06:06:08] <aswsd> Thanks. I'm suprised python argentina group has more members than english-speaking channel like this one
[06:06:34] <aswsd> i thought more people speak english than argentinan
[06:06:44] <Everything> It looks like it's gated to somewhere
[06:06:46] <Everything> See nicknames
[06:06:50] <Everything> like telegram_NNN
[06:06:57] <nedbat> aswsd: the language you are thinking of is Spanish :)
[06:07:00] <aswsd> I'm sticking to this python group. Can't speak Spanish
[06:07:09] <ColonelJ> grym: it looks cool but I can't see any reference to websockets yet
[06:07:46] *** Joins: iflema (~ian@user/iflema)
[06:07:54] <ColonelJ> grym: actually I found it nvm
[06:08:06] <jinsun_> Everything: that makes sense now, Telegram has much more users than IRC
[06:08:07] *** Quits: sco1 (~sco1@charon.whatbox.ca) (Ping timeout: 240 seconds)
[06:08:10] *** Quits: voidcat (~voidcat@miaow/classabbyamp) (Quit: nyaa~)
[06:08:56] *** Joins: voidcat (~voidcat@miaow/classabbyamp)
[06:09:10] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[06:09:14] <aswsd> jinsun_: maybe it's good idea to somehow connect telegram users to this irc group. More members. Telegram has more features too. IRC is old tech but somehow, it attracts more high quality members
[06:09:15] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:09:17] *** Joins: sco1 (~sco1@charon.whatbox.ca)
[06:09:47] *** Quits: utunbu_ (~utunbu@user/utunbu) (Ping timeout: 240 seconds)
[06:09:47] *** Quits: LostInWeb (~quassel@narvi.bifroest.eu) (Ping timeout: 240 seconds)
[06:09:51] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:10:33] *** Joins: LostInWeb (~quassel@narvi.bifroest.eu)
[06:10:34] <Everything> jinsun_: maybe it's gated to web (2.0) somewhere
[06:10:49] <aswsd> For some stupid reason, I cannot connect to freenode IRC server anymore. Is the python group over there still larger than this one? Am I missing out anything good for python?
[06:11:04] <grym> aswsd: freenode's super dead
[06:11:10] <jinsun_> no
[06:11:20] <jinsun_> (I mean you are not missing out)
[06:11:21] <aswsd> grym: oh ... it used to be biggest on irc
[06:11:34] <grym> aswsd: the community moved to libera
[06:11:44] <ColonelJ> everything that was on freenode moved here as far as I can tell... I only realised this today
[06:11:50] <grym> have i got a greek boat for you!
[06:11:51] <aswsd> I can't connect to freenode. Freenode commited suicide if many users face same problem as me.
[06:11:58] <grym> aswsd: yes, in mid-may :P
[06:12:42] <aswsd> grym: thanks. I'll continue this discussion in #libera. Not suitable in #python. Good that I'm not missing out by migrating here
[06:12:54] *** Quits: voidcat (~voidcat@miaow/classabbyamp) (Client Quit)
[06:13:07] *** Joins: voidcat (~voidcat@user/voidcat)
[06:13:17] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[06:13:17] <phy1729> aswsd: https://gist.github.com/joepie91/df80d8d36cd9d1bde46ba018af497409/ may prove enlightening
[06:13:29] <nedbat> aswsd: i doubt there's any reason to connect to freenode
[06:14:18] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[06:14:26] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[06:14:48] *** Joins: gggp (~textual@60.10.194.45)
[06:14:53] *** Joins: Guest72 (~textual@240d:1a:ade:8000:bc36:fd0:d9c4:a819)
[06:15:10] <aswsd> phy1729: good article. thanks.
[06:15:18] *** Joins: utunbu_ (~utunbu@user/utunbu)
[06:16:10] *** Quits: gggp (~textual@60.10.194.45) (Client Quit)
[06:17:17] <ColonelJ> grym: would be interested to hear why you switched away from flask?
[06:17:25] <kevr> Where can I find documentation that tells exactly what the '^' specifier is in versions setup in pyproject.toml? My google fu is absolutely trash and I can't find any information about them in the 518 PEP page or anywhere similar.
[06:17:42] <kevr> I've found https://www.python.org/dev/peps/pep-0440/, which shows a regex used to parse the verison, speaking about it being "canonical" if it has a leading ^.
[06:17:52] <kevr> version*
[06:18:09] *** Joins: gggp (~textual@60.10.194.45)
[06:18:20] <kevr> Oh, no. Nevermind. That ^ is a regex anchor, not in the version...
[06:18:24] <grym> ColonelJ: fastAPI offers swagger/openAPI for free, async for free, validation at the edges with pydantic instead of doing it all myself.  I got to delete about 800 lines of code per project when we switched
[06:18:40] *** Quits: Samian (~Sami@2620:10d:c091:480::1:77bb) (Ping timeout: 240 seconds)
[06:19:24] *** Joins: zmt01 (~zmt00@user/zmt00)
[06:19:34] <grym> ColonelJ: having my callers get semantically sensible validation errors for malformed requests without writing a line of extra code to do so is really, really nice
[06:19:37] *** Quits: gggp (~textual@60.10.194.45) (Client Quit)
[06:19:38] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:21:22] *** Joins: ogata (~ogata@240d:1a:ade:8000:bc36:fd0:d9c4:a819)
[06:21:28] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2)
[06:21:31] *** Joins: nomic (~nomic@185.192.69.188)
[06:21:47] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 245 seconds)
[06:21:47] *** brabrax_ is now known as brabrax
[06:22:09] *** Quits: Guest72 (~textual@240d:1a:ade:8000:bc36:fd0:d9c4:a819) (Quit: Textual IRC Client: www.textualapp.com)
[06:22:53] <jinsun_> kevr: there is something in poetry docs https://python-poetry.org/docs/dependency-specification/#caret-requirements
[06:22:59] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Quit: Hay te huacho!)
[06:22:59] <hexology> grym have you looked into sqlmodel at all?
[06:23:03] *** Joins: aspplus (~aspplus@240d:1a:ade:8000:bc36:fd0:d9c4:a819)
[06:23:10] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 240 seconds)
[06:23:11] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 250 seconds)
[06:23:17] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:68d6:790f:36f0:bbce) (Ping timeout: 256 seconds)
[06:23:25] <jinsun_> maybe it is poetry specific?
[06:23:28] <kevr> jinsun_: Ah, geez. Didn't get that far. Thank you!
[06:23:44] *** Quits: nomic (~nomic@185.192.69.188) (Client Quit)
[06:23:49] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[06:24:30] <grym> hexology: i know of it, but that's it
[06:24:48] <hexology> i've been thinking about how it could be really nice to have the entire "stack" be unified around pydantic
[06:24:59] <grym> if i had a database, yep
[06:25:03] <grym> i'd probably give it a test drive
[06:25:44] <hexology> my org's web services are currently tornado + motor, but i have a soft green light to experiment with fastapi + odmantic
[06:26:26] <hexology> i haven't had time to roll up my sleeves w/ it but i'm looking forward to it. although the more i use tornado the more comfortable with it i am. but not having to write all that stuff from scratch, like you said, is a huge benefit
[06:26:30] <grym> i get to do a lot of greenfield work
[06:26:39] <hexology> that's fun
[06:26:53] <hexology> fortunately we have the microservices thing going for us, so we can spin up a fastapi-based service to see how we like it
[06:27:06] <grym> at this point it's pretty straightforward for us to cobble something together with fastAPI bolted onto pytorch and friends
[06:27:14] <grym> zip it up in a docker image
[06:27:16] <grym> and off she goes
[06:27:18] <hexology> ah you're serving ML stuff
[06:27:33] <grym> yeah, so all our endpoints are "json and files in, json out" level of simple
[06:27:42] <hexology> i remember i did that with flask in a previous job
[06:28:00] <hexology> wrote the jsonschema by hand
[06:28:03] <grym> been there
[06:28:21] <grym> i was very amused the first time i got to tell a client how to get to their docs
[06:28:25] <hexology> was definitely educational, but it was such a waste of time, considering i wasn't even supposed to be a dev at that job
[06:28:26] *** Parts: aswsd (~helpme8@user/hlpme) (Once you know what it is you want to be true, instinct is a very useful device for enabling you to know that it is)
[06:28:31] <grym> and their reaction was just kind of ... awe?
[06:28:42] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[06:28:48] <hexology> generated from the openapi schema, right?
[06:29:00] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[06:29:20] <hexology> openapi 3.1 is kind of a mess.. i really hope things stabilize
[06:29:21] <grym> "docker load -i deliverable.tar.gz && docker compose up and then go to localhost:8000/redoc"
[06:29:32] <grym> ".. really?!" "yep!"
[06:29:34] <hexology> lol
[06:29:40] <hexology> that's pretty cool
[06:30:06] <grym> i have been abusing the heck out of pydantic.con*
[06:31:04] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[06:31:20] <hexology> is that a typo or some feature in pydantic?
[06:31:20] *** Joins: nomic (~nomic@185.192.69.188)
[06:31:24] <hexology> i haven't used it yet, just been reading docs
[06:31:27] *** Quits: Evolver (sid32215@user/evolver) (Ping timeout: 240 seconds)
[06:31:47] *** Quits: JacobFrost (sid494713@id-494713.tinside.irccloud.com) (Ping timeout: 240 seconds)
[06:31:49] *** Joins: Evolver (sid32215@user/evolver)
[06:31:53] <grym> `async def foo(files:conlist(UploadFile, min_items=1), hyperparameter:confloat(ge=0.0, le=5.0))`
[06:32:07] <grym> "give me at least one file and a float between 0 and 5, or catch a 422
[06:32:07] *** Quits: jtanner (sid194399@id-194399.helmsley.irccloud.com) (Ping timeout: 240 seconds)
[06:32:27] *** Quits: graingert (sid128301@id-128301.tinside.irccloud.com) (Ping timeout: 240 seconds)
[06:32:27] <hexology> ah, constraints?
[06:32:39] <grym> yeah, baby constrained types
[06:32:47] *** Quits: josh_h (sid301834@id-301834.helmsley.irccloud.com) (Ping timeout: 240 seconds)
[06:32:51] <hexology> what does that "expand to" from the perspective of a type checker? list[UploadFile] and float?
[06:32:57] <grym> it's not the full magic, but it's fine for this.
[06:33:01] <grym> i ... think so
[06:33:06] <grym> but i'm not sure
[06:33:07] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (Ping timeout: 240 seconds)
[06:33:07] *** Quits: han-` (sid293063@id-293063.helmsley.irccloud.com) (Ping timeout: 240 seconds)
[06:33:42] <hexology> i recently was pointed to Crosshair which is some kind of postmodern data contract framework that also does property based testing continuously in a daemon as you work
[06:34:00] <hexology> https://crosshair.readthedocs.io/en/latest/get_started.html
[06:34:01] <hexology> kind of wild
[06:34:14] *** Joins: jtanner (sid194399@id-194399.helmsley.irccloud.com)
[06:34:14] *** Joins: JacobFrost (sid494713@id-494713.tinside.irccloud.com)
[06:34:18] *** Joins: graingert (sid128301@id-128301.tinside.irccloud.com)
[06:34:49] <hexology> i suppose hypothesis could (maybe already does) use those constraints to generate test cases
[06:35:21] <grym> the temptation to install that and watch it just choke to death on scientist ML code ...
[06:35:37] *** Joins: josh_h (sid301834@id-301834.helmsley.irccloud.com)
[06:35:38] *** Joins: cloudbender2 (~cloudbend@user/cloudbender)
[06:35:44] *** Joins: han-` (sid293063@id-293063.helmsley.irccloud.com)
[06:35:45] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[06:35:57] <cloudbender2> what was the breaking change in 3.9 which removes compatibility with windows 7 ?
[06:36:04] <hexology> lol yeah, i would hope there's a way to constrain when/what it runs so you don't accidentally start running huge matrix arithmetic operations in the background
[06:37:51] <hexology> https://pypi.org/project/deal/ there's this too which i haven't explored
[06:38:15] <hexology> having this all under one library _and_ having a web framework that "just works" along with it...
[06:38:30] <hexology> or even having a subset of it
[06:38:38] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Ping timeout: 256 seconds)
[06:38:38] *** Quits: czuk_cza (~mist@188.147.96.18.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 256 seconds)
[06:38:46] *** Quits: ogata (~ogata@240d:1a:ade:8000:bc36:fd0:d9c4:a819) (Quit: Textual IRC Client: www.textualapp.com)
[06:38:46] *** Quits: aspplus (~aspplus@240d:1a:ade:8000:bc36:fd0:d9c4:a819) (Quit: Textual IRC Client: www.textualapp.com)
[06:39:07] <hexology> https://www.python.org/dev/peps/pep-0647/ could also be a relevant tool when it lands
[06:39:46] <hexology> or did they already land? https://mypy.readthedocs.io/en/latest/more_types.html
[06:40:54] *** Quits: cloudbender2 (~cloudbend@user/cloudbender) (Ping timeout: 256 seconds)
[06:41:09] <jinsun> 3.10
[06:41:19] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 252 seconds)
[06:42:59] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:46:03] <hexology> it's in typing-extensions for 3.9 and below
[06:46:07] <hexology> very nice, i'm going to use this
[06:49:57] *** Joins: rudrab (~rudrab@2402:e280:215f:228:c249:d16f:6fe:ea85)
[06:50:21] <jinsun> oh nice
[06:59:05] *** Joins: Samian (~Sami@174.27.107.153)
[07:01:35] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:02:14] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[07:02:54] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[07:03:00] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[07:03:26] <hexology> https://mypy-play.net/?mypy=0.910&python=3.9&flags=show-error-codes%2Cstrict&gist=62ef455f169f46b169d220b2a19f69b4
[07:03:29] <hexology> very into this
[07:08:28] *** Joins: gggp (~textual@111.63.14.116)
[07:08:35] *** Joins: lightbulbjim (~lightbulb@user/lightbulbjim)
[07:09:32] *** Joins: Shanzem (~Shanzem@86.31.109.147)
[07:09:38] <jinsun_> well that one could have been done with isinstance
[07:09:51] <hexology> yeah it was contrived
[07:10:11] <jinsun_> but it will be more helpful in nested structures like lists and dicts of unions
[07:10:14] <hexology> refining the types of collections is probably the most valuable use case (and the one most relevant to something like Pydantic)
[07:10:38] *** Quits: godlike (~godlike@user/godlike) (Quit: So say we all!)
[07:10:42] *** Quits: gggp (~textual@111.63.14.116) (Client Quit)
[07:10:55] *** Joins: godlike (~godlike@user/godlike)
[07:13:55] *** Quits: rudrab (~rudrab@2402:e280:215f:228:c249:d16f:6fe:ea85) (Quit: rudrab)
[07:15:11] *** Quits: lightbulbjim (~lightbulb@user/lightbulbjim) (Quit: Sleeping...)
[07:16:50] <newpy> does anyone know why there is a numpy.median() but no numpy.ndarray.median()? (when we can call other 5-stat methods directly from the ndarray)
[07:18:28] *** Joins: cheater (~Username@user/cheater)
[07:21:15] *** Quits: lethu (~lethu@user/lethu) (Remote host closed the connection)
[07:22:09] <newpy> I want to find the first element of a numpy array for which every element afterwards is equal
[07:22:17] *** Quits: dftrace (~dftrace@hopper.lethalbit.com) (Ping timeout: 248 seconds)
[07:22:35] <newpy> I'm using np.all(arr[i:] == arr[-1]) which is compact enough
[07:23:28] <newpy> but I have it embedded in a loop for i in range(0:arr.size): if( np.all(...)): print(i); break;
[07:23:33] <newpy> is there a better way of doing that?
[07:25:40] *** Joins: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[07:28:37] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[07:28:53] *** Joins: gggp (~textual@60.10.23.169)
[07:29:14] *** Quits: montxero (~user@149.167.149.74) (Read error: Connection reset by peer)
[07:29:26] <hexology> maybe you can start searching from the end of the array, and then report the last index where the elements are all the same
[07:29:36] *** Joins: montxero (~user@149.167.149.74)
[07:30:50] <hexology> or find the last index where x[1:]-x[:-1] != 0 then add 1 to it
[07:31:10] <hexology> or for that matter where x[1:]!=x[:-1]
[07:31:59] <deltab> newpy: my guess is it's because it can't be implemented without extra ememory allocation, due to the sorting, or something similar
[07:32:02] *** Joins: stealth_ (~stelath_@216-197-160-97.regn.static.sasknet.sk.ca)
[07:32:34] <newpy> deltab, ah good guess
[07:33:12] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[07:33:34] <newpy> hexology, would that still require a for loop?
[07:33:48] <kevr> Is there a way to specify a script path for poetry? With setup.py, you can use --install-scripts=/some/path, I'd like to do the same in Poetry if possible, but I... can't see anything regarding it in Poetry docs. Of course, I'm probably missing the right section again.
[07:33:53] <newpy> oh I guess it makes each step O(1)
[07:34:59] <hexology> newpy: i think it's exactly 2 scans over the array. the 1st is "internal" in numpy during !=, and the 2nd is you looping over the result to find the last True element
[07:35:28] <hexology> there might be a succinct numpy-ism to express the latter
[07:36:27] <deltab> are the values sorted?
[07:37:53] <hexology> this one is 2-3 full scans over the data and should be decently efficient (but still has an expensive intermediate allocation if this is a big array): (y[1:]!=y[:-1]).nonzero()[0].max()+1
[07:41:17] *** Joins: sedeki (~textual@user/sedeki)
[07:42:12] *** Quits: gggp (~textual@60.10.23.169) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:44:03] *** Joins: matsaman (~matsaman@user/matsaman)
[07:45:05] *** Joins: lethu (~lethu@user/lethu)
[07:47:04] *** Quits: matsaman (~matsaman@user/matsaman) (Client Quit)
[07:49:54] *** Quits: zaquest (~notzaques@5.128.210.178) (Read error: Connection reset by peer)
[07:51:31] *** Joins: p-i- (~Ohmu@mx-ll-223.206.150-107.dynamic.3bb.co.th)
[07:52:25] <p-i-> WORKDIR=${3:=./_workdir}  # How come this isn't working?  I'm running the script without passing a third CLI param, but it's coming out empty.
[07:52:27] *** Joins: gggp (~textual@60.10.194.45)
[07:52:30] *** Quits: gggp (~textual@60.10.194.45) (Client Quit)
[07:52:45] *** Joins: zaquest (~notzaques@5.128.210.178)
[07:54:39] *** Joins: matsaman (~matsaman@user/matsaman)
[07:54:51] <stealth_> p-i-, what is that suppose to be?
[07:55:11] <p-i-> stealth_: It's supposed to be a default value for $3
[07:55:36] <stealth_> p-i-, as in that doesn't look like python code
[07:55:52] *** Joins: elkclone (~elkclone@user/elkclone)
[07:56:31] <p-i-> woops wrong channel
[07:56:34] *** Joins: ElPresidente (~ElPreside@172-125-150-28.lightspeed.tukrga.sbcglobal.net)
[07:57:17] *** Quits: ElPresidente (~ElPreside@172-125-150-28.lightspeed.tukrga.sbcglobal.net) (Read error: Connection reset by peer)
[07:57:56] *** Quits: sedeki (~textual@user/sedeki) (Quit: Textual IRC Client: www.textualapp.com)
[07:59:29] *** Joins: lalitmee__ (~lalitmee@180.94.32.196)
[07:59:29] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[08:01:36] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[08:01:38] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[08:02:07] *** Joins: BigShip (~BigShip@user/bigship)
[08:02:09] *** Quits: ColonelJ (~ColonelJ@user/colonelj) (Quit: leaving)
[08:02:13] *** Joins: KombuchaKip (~kip@192.252.230.5)
[08:06:29] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[08:06:30] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[08:07:01] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:09:37] *** Quits: Shanzem (~Shanzem@86.31.109.147) (Quit: sudo Shanzem -lol -updoot -karma -gold >/dev/lies)
[08:09:59] <justsomeguy> p-i-: Must be bash. You probably want :- rather than :=.
[08:11:02] <zumba_addict> Hey all. Why does this happen? What could be causing it? `pyenv: cannot rehash: /home/fedora/.pyenv/shims isn't writable` Is it just because it's not writable?
[08:11:07] <justsomeguy> p-i-:  := assigns a value to 3, but does not expand the value, :- uses the default value ./_workdir for that particular expansion
[08:12:19] <phy1729> justsomeguy: it assigns and expands, but is also a #bash topic
[08:13:14] <matsaman> zumba_addict: that'd be my first guess
[08:13:19] <justsomeguy> I should have tested it out before commenting. Also, you're right. Just thought I could solve it briefly.
[08:13:26] <zumba_addict> ok, I'll recheck
[08:14:24] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[08:14:24] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[08:15:51] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[08:17:40] *** Quits: goepsilongo (~chacho@2603-7000-ab00-62ed-0000-0000-0000-0bd0.res6.spectrum.com) (Ping timeout: 240 seconds)
[08:22:55] <zumba_addict> matsaman, it was the directory permission. I fixed it
[08:24:33] <matsaman> nice
[08:25:49] *** Quits: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 252 seconds)
[08:28:22] *** Joins: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net)
[08:28:41] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.2)
[08:29:44] *** Quits: Curiosity (uid511277@user/cypris) (Quit: Connection closed for inactivity)
[08:31:15] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[08:34:21] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-3474-1442-9ff3-7009.res6.spectrum.com) (Read error: Connection reset by peer)
[08:34:37] *** Quits: Nahra (~user@static.161.95.99.88.clients.your-server.de) (Ping timeout: 252 seconds)
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:11] *** Joins: mohabaks_ (~mohabaks@gateway/tor-sasl/mohabaks)
[08:36:13] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2)
[08:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:37:51] *** Joins: gggp (~textual@60.10.194.45)
[08:37:53] *** Joins: Betal (~Betal@user/betal)
[08:39:02] *** Quits: reset (~reset@user/reset) (Quit: reset)
[08:39:27] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 276 seconds)
[08:40:06] <p-i-> That answer worked fwiw
[08:40:07] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[08:43:22] *** Quits: Ivii (~Ivyy@2001:a61:13eb:f801:e833:4a95:1b34:64e2) (Remote host closed the connection)
[08:43:48] *** Joins: lordrishav (~LordRisha@user/lordrishav)
[08:46:37] *** Quits: gggp (~textual@60.10.194.45) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:47:06] *** Joins: Vonter (~Vonter@user/vonter)
[08:47:21] *** Joins: i0e (~is0ke3@user/is0ke3)
[08:49:32] <kevr> Is there a way I can specify a similar configuration as setup.py's --install-scripts to Poetry?
[08:52:20] *** Quits: shawwwn (uid6132@id-6132.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[08:53:04] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.2)
[08:56:37] *** Quits: DerpGusta (~quassel@user/derpgusta) (Ping timeout: 252 seconds)
[08:57:50] *** Joins: DerpGusta (~quassel@user/derpgusta)
[08:58:35] *** Quits: Maikel (~Maikel@130.61.63.136) (Quit: The Lounge - https://thelounge.chat)
[08:58:49] *** Quits: Warped (~Warped@user/warped) (Quit: We Gone! Bye Bye)
[08:59:50] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:02:53] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: WeeChat 3.2)
[09:03:57] *** Joins: Maikel (~Maikel@130.61.63.136)
[09:04:10] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-4d20-c6a4-d08c-1eac.res6.spectrum.com) (Ping timeout: 240 seconds)
[09:09:54] *** Joins: HiddenHyde (~HiddenHyd@user/hidden-hyde/x-6930285)
[09:10:18] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-00fd-de4a-ab18-4740.res6.spectrum.com)
[09:10:30] *** Joins: lalitmee_ (~lalitmee@180.94.33.3)
[09:12:36] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[09:13:20] *** Quits: lalitmee__ (~lalitmee@180.94.32.196) (Ping timeout: 256 seconds)
[09:14:11] *** Quits: nomic (~nomic@185.192.69.188) (Quit: Leaving)
[09:14:54] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[09:15:30] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:16:39] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[09:18:12] *** Joins: matsaman (~matsaman@user/matsaman)
[09:18:22] *** Quits: matsaman (~matsaman@user/matsaman) (Client Quit)
[09:20:08] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[09:26:20] *** Quits: twainwek (~user@144.211.196.35.bc.googleusercontent.com) (Remote host closed the connection)
[09:27:37] *** Joins: twainwek (~user@144.211.196.35.bc.googleusercontent.com)
[09:30:04] *** Joins: rakoon (~rakoon@2a02:2149:824f:5900:5f22:cd5e:7988:2bae)
[09:30:44] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[09:33:22] <Wulf> kevr: what does this "--install-scripts" do?
[09:33:58] <kevr> Wulf: It installs console_scripts to a particular path, and the packages/modules to their default places.
[09:34:43] <kevr> for example, `setup.py install --install-scripts=/usr/local/bin` will install packages and modules toward python's lib path, and it'll install any console scripts to /usr/local/bin
[09:34:55] <stealth_> kevr, you shouldn't really use `setup.py` to install but use something like pip/poetry, since setup.py doesn't have a way to uninstall!
[09:35:29] <Wulf> kevr: don't know. I suggest you use a virtualenv and then symlink whatever executables you want in your path
[09:35:32] <kevr> I agree. We're switching to Poetry.
[09:37:36] <jinsun> are you making a distro package?
[09:37:36] *** Quits: CyberShadow (vladimir@89.28.117.31) (Quit: CREO ERGO SVM)
[09:37:36] <kevr> jinsun: We'd like to be able to, yeah. We can post process it, I guess.
[09:38:00] <jinsun> putting stuff in /usr/local/bin is something I see distro package scripts do, otheriwse just dumping in venv bin works fine for most cases
[09:38:19] <kevr> yeah, we need to use it in both venv and not-venv cases.
[09:39:57] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[09:40:18] *** Joins: CyberShadow (vladimir@89.28.117.31)
[09:41:12] <jinsun> pip install has --root and --prefix options which might be useful
[09:41:17] <jinsun> no idea about poetry
[09:42:49] *** Quits: jack__d (~jack__d@pool-98-109-145-13.nwrknj.fios.verizon.net) (Ping timeout: 252 seconds)
[09:44:00] <kevr> No worries. I've got another approach we can work with. The paths are configurable in this project anyways, I was just hoping I could do a more easy swap-in-place.
[09:44:28] *** Joins: jack__d (~jack__d@pool-98-109-145-13.nwrknj.fios.verizon.net)
[09:44:29] *** Joins: Atque (~Atque@user/atque)
[09:44:40] <kevr> Thanks for hearing me out. I appreciate you guys.
[09:47:03] *** Joins: theprophet (~theprophe@85.114.228.184)
[09:47:57] *** Quits: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net) (Quit: Client closed)
[09:49:06] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[09:53:20] <theprophet> is  F optional in python?
[09:53:53] *** Quits: emerent (~quassel@p200300cd5701a102ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[09:54:12] *** Joins: emerent (~quassel@p200300cd5701a189ba27ebfffed28a59.dip0.t-ipconnect.de)
[09:54:20] <leduyquang753> What F?
[09:54:42] <theprophet> how many f s are in python?
[09:55:04] <leduyquang753> You can put as many "f"s in your Python script as you like.
[09:55:07] <theprophet> well i am talking about the print f
[09:55:11] *** Joins: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com)
[09:55:21] <leduyquang753> You mean f-strings?
[09:55:31] <theprophet> oh yes
[09:55:32] *** Joins: lightbulbjim (~lightbulb@user/lightbulbjim)
[09:55:54] <leduyquang753> You don't need to use f-strings to create strings.
[09:55:56] *** Quits: renrelkha (~renrelkha@user/renrelkha) (Quit: bye)
[09:56:30] <theprophet> arent strings just words?
[09:56:39] <theprophet> like this "word"
[09:56:39] *** Joins: stardiviner (~stardivin@183.246.147.106)
[09:56:40] <theprophet> ?
[09:56:46] *** Joins: renrelkha (~renrelkha@user/renrelkha)
[09:57:10] <theprophet> by strings you mean that right?
[09:57:23] <theprophet> like subclass of sequence types?
[09:57:30] <theprophet> str?
[09:57:34] <leduyquang753> Strings are sequences of characters.
[09:58:13] *** Quits: OPK (~OPK@user/opk) (Ping timeout: 252 seconds)
[09:58:14] <theprophet> ok? then why do people stlll use f in python?
[09:58:21] <theprophet> leduyquang753 whats up with that?
[09:58:23] *** Quits: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4) (Read error: Connection reset by peer)
[09:58:29] <leduyquang753> Because they need to insert values into the string.
[09:58:47] <leduyquang753> f-strings is made for doing that more effortlessly.
[09:58:49] <leduyquang753> are
[09:59:20] <theprophet> hmm
[09:59:48] *** Quits: Samian (~Sami@174.27.107.153) (Ping timeout: 256 seconds)
[09:59:51] *** Joins: mattf (~mattf@li908-138.members.linode.com)
[09:59:57] <theprophet> what you mean insert values ? can you tell me that in layman's?
[10:00:04] <leduyquang753> Compare f"Today is {date}/{month}/{year}." to "Today is " + str(date) + "/" + str(month) + "/" + str(year) + ".".
[10:00:21] *** Joins: mei (~mei@user/mei)
[10:00:44] *** Joins: djhankb (~djhankb@208.113.164.68)
[10:01:06] <theprophet> so i can insert values in that line? or you just did not wrote the source where the values are ?
[10:01:17] <leduyquang753> Yes you can insert values in.
[10:01:33] <theprophet> wow
[10:01:37] <leduyquang753> Those date, month, year are variables in this case, obviously.
[10:02:09] <theprophet> yea but those variables are in code or that single line of code is able to do it ?
[10:02:23] *** Joins: gggp (~textual@60.10.23.169)
[10:02:27] *** Joins: fluter (~fluter@user/fluter)
[10:02:46] <kevr> they're in code
[10:02:57] <kevr> in the scope of the format string they're being used in.
[10:03:04] <theprophet> got it
[10:03:19] <theprophet> but you can do the same without f is that correct?
[10:03:34] <leduyquang753> Yes, which is much more tedious as demonstrated.
[10:03:53] *** Quits: lordrishav (~LordRisha@user/lordrishav) (Read error: Connection reset by peer)
[10:04:50] <theprophet> ok thank you very much
[10:04:54] *** Joins: OPK (~OPK@user/opk)
[10:06:58] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[10:07:44] *** Quits: gr33n7001 (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.2)
[10:10:27] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[10:10:35] *** Quits: gggp (~textual@60.10.23.169) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:11:06] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[10:12:32] *** Joins: fikran (~fikran@user/fikran)
[10:13:02] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 245 seconds)
[10:13:14] *** Joins: upsala (~zcb@185.213.155.160)
[10:13:54] *** Joins: hendursaga (~weechat@user/hendursaga)
[10:15:16] *** Quits: LiftLeft (~LiftLeft@172.98.92.15) (Ping timeout: 252 seconds)
[10:16:19] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[10:18:05] *** Joins: gggp (~textual@60.10.194.45)
[10:19:04] *** Quits: gggp (~textual@60.10.194.45) (Client Quit)
[10:19:37] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[10:19:56] *** Joins: Warped (~Warped@user/warped)
[10:28:53] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[10:29:37] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[10:31:09] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[10:32:01] *** Quits: madduck (~madduck@user/madduck) (Quit: leaving)
[10:32:14] *** Quits: HiddenHyde (~HiddenHyd@user/hidden-hyde/x-6930285) (Quit: Leaving)
[10:32:17] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[10:32:40] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[10:33:29] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[10:34:39] *** Joins: Mija (~Mija@user/mija)
[10:35:09] *** Joins: gggp (~gggp@111-251-124-128.dynamic-ip.hinet.net)
[10:35:37] *** Quits: gggp (~gggp@111-251-124-128.dynamic-ip.hinet.net) (Remote host closed the connection)
[10:35:40] *** Joins: gggpkm (~gggpkm@111-251-124-128.dynamic-ip.hinet.net)
[10:37:02] <p-i-> This is no longer a Python issue, but a networking issue. Nevertheless, if anyone has some insight I am most grateful: https://stackoverflow.com/questions/69052688/cannot-connect-from-local-machine-to-tcp-server-on-aws-ec2-ubuntu
[10:38:20] *** Joins: Gurkenglas (~Gurkengla@dslb-088-075-022-191.088.075.pools.vodafone-ip.de)
[10:39:17] *** Quits: AlanMD_ (~AlanMD@193.105.140.131) (Ping timeout: 245 seconds)
[10:40:03] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:40:25] *** Joins: LiftLeft (~LiftLeft@172.83.47.113)
[10:40:32] <stealth_> p-i-, why is the `HOST` for client some sub-domain ?
[10:41:00] <p-i-> ooops my bad paste
[10:41:06] <p-i-> I actually replaced that with my box's IP
[10:41:11] *** Quits: newpy (~newpy@2601:280:4381:1390:d8a2:4368:1fe2:a8e3) (Quit: Leaving)
[10:41:15] <p-i-> I'll fix the Q
[10:41:26] <stealth_> p-i-, ok, what about the server `HOST` is that an ip or '' ?
[10:42:19] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Remote host closed the connection)
[10:44:21] <p-i-> stealth_: Every other line of code is the same as that example.
[10:44:38] <p-i-> And it works between a remote box hosted on vultr and my local machine
[10:44:40] <aphysically> does stdlib have any cryptographically safe string comparisons?
[10:44:43] <aphysically> (safe against timing attack?)
[10:44:48] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[10:44:54] <p-i-> AWS is failing somehow
[10:45:03] <stealth_> p-i-, well the server needs to be `HOST = '0.0.0.0'` if you are trying to connect from external source
[10:45:13] *** Joins: Shanzem (~Shanzem@86.31.109.147)
[10:45:36] <aphysically> oh I think I found one in hmac
[10:45:40] <p-i-> stealth_: It must interpret '' as '0.0.0.0', as it works on vultr
[10:45:45] <aphysically> hmac.compare_digest(a, b)
[10:46:20] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:46:31] <stealth_> p-i-, can't assume that
[10:46:48] <p-i-> ok lemme try
[10:46:51] *** Joins: seednode (~seednode@user/seednode)
[10:47:14] *** Joins: xakan (~xakan@ns354170.ip-91-121-101.eu)
[10:47:31] <p-i-> yeah no joy
[10:48:39] *** Joins: nickodd (~nickodd@user/nickodd)
[10:49:05] <stealth_> aphysically, https://docs.python.org/3/library/hmac.html#hmac.compare_digest
[10:49:28] *** Joins: Sky_Net (~Sky_Net@176.14.213.85)
[10:49:40] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[10:49:51] <aphysically> yeah :)
[10:49:59] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[10:50:13] *** Joins: y1n (~y1n@84-115-65-198.wifi.dynamic.surfer.at)
[10:50:49] *** Quits: lightbulbjim (~lightbulb@user/lightbulbjim) (Quit: Sleeping...)
[10:53:00] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[10:53:02] *** Joins: retrosenator (~retrosena@91.sub-174-247-27.myvzw.com)
[10:53:48] <stealth_> p-i-, that's all i got, atm :) having used those services.
[10:54:04] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) (Client Quit)
[10:54:28] *** Quits: Mija (~Mija@user/mija) (Read error: Connection reset by peer)
[10:54:45] <p-i-> stealth_: tx, no worries. I'm used to AWS being a horrible experience.
[10:55:53] <stealth_> p-i-, i see, *i have never used those services
[10:56:35] <retrosenator> i tried it once
[10:56:43] <retrosenator> but i dont really like amazon
[10:58:26] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[11:01:41] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[11:03:40] *** Quits: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[11:10:30] *** Quits: ckdCreations (~ckdCreati@147.55.133.138) (Read error: Connection reset by peer)
[11:10:45] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[11:12:02] *** Joins: manti7 (~manti7@176.10.104.94)
[11:13:48] *** Quits: zaquest (~notzaques@5.128.210.178) (Quit: Leaving)
[11:13:55] *** Joins: palasso (~palasso@user/palasso)
[11:14:11] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[11:15:45] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[11:16:49] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:6186:d2df:bc96:d6ce) (Remote host closed the connection)
[11:17:12] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:6186:d2df:bc96:d6ce)
[11:17:40] *** Joins: zaquest (~notzaques@5.128.210.178)
[11:18:59] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:ad49:9d10:6791:c41d)
[11:19:30] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:ad49:9d10:6791:c41d) (Client Quit)
[11:20:11] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:6186:d2df:bc96:d6ce) (Read error: Connection reset by peer)
[11:22:55] *** Quits: Sky_Net (~Sky_Net@176.14.213.85) (Ping timeout: 252 seconds)
[11:24:01] *** Quits: et (~et@user/et) (Ping timeout: 252 seconds)
[11:24:22] *** Joins: Sky_Net (~Sky_Net@176.14.213.85)
[11:26:19] *** Joins: et (~et@user/et)
[11:29:26] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[11:29:47] *** Joins: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net)
[11:30:07] *** Joins: lordrishav (~LordRisha@user/lordrishav)
[11:32:40] *** Quits: y1n (~y1n@84-115-65-198.wifi.dynamic.surfer.at) (Ping timeout: 240 seconds)
[11:33:02] *** Quits: DerpGusta (~quassel@user/derpgusta) (Ping timeout: 245 seconds)
[11:33:52] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[11:35:01] *** Joins: lalitmee__ (~lalitmee@180.94.33.214)
[11:35:42] *** Joins: zln (~zln@c80-217-230-193.bredband.tele2.se)
[11:37:12] *** Quits: lalitmee_ (~lalitmee@180.94.33.3) (Ping timeout: 245 seconds)
[11:37:15] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) (Quit: Leaving...)
[11:37:30] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[11:39:26] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[11:39:46] *** Joins: DerpGusta (~quassel@user/derpgusta)
[11:40:07] *** Joins: rsx (~dummy@ppp-188-174-131-58.dynamic.mnet-online.de)
[11:40:53] *** Joins: Appli000 (~Thunderbi@176-161-23-89.abo.bbox.fr)
[11:45:07] *** Quits: rakoon (~rakoon@2a02:2149:824f:5900:5f22:cd5e:7988:2bae) (Ping timeout: 245 seconds)
[11:46:22] *** Quits: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net) (Ping timeout: 245 seconds)
[11:46:27] *** Joins: gggp (~textual@60.10.194.45)
[11:46:50] *** Joins: y1n (~y1n@84-115-64-241.wifi.dynamic.surfer.at)
[11:47:21] *** Quits: gggp (~textual@60.10.194.45) (Client Quit)
[11:53:25] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[11:54:00] *** Joins: lalitmee_ (~lalitmee@180.94.33.33)
[11:54:19] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[11:55:54] *** Joins: kuler (~kulernil@gateway/tor-sasl/kuler)
[11:55:55] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Ping timeout: 256 seconds)
[11:56:10] *** Joins: pycode (~pycode@2001:b07:5d28:551:9be0:49b5:1c39:4049)
[11:56:10] *** Quits: lalitmee__ (~lalitmee@180.94.33.214) (Ping timeout: 240 seconds)
[12:00:31] *** Joins: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net)
[12:00:32] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 245 seconds)
[12:02:00] *** Joins: frost (~frost@59.71.240.119)
[12:03:20] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2)
[12:03:27] *** Quits: rsx (~dummy@ppp-188-174-131-58.dynamic.mnet-online.de) (Ping timeout: 245 seconds)
[12:05:48] *** Quits: stealth_ (~stelath_@216-197-160-97.regn.static.sasknet.sk.ca) (Quit: Leaving)
[12:05:54] *** Quits: Appli000 (~Thunderbi@176-161-23-89.abo.bbox.fr) (Quit: Appli000)
[12:07:19] *** Joins: foozle (~foozle@2001-b011-c001-16ef-eb07-082b-2ebb-6ce6.dynamic-ip6.hinet.net)
[12:07:29] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[12:07:45] *** Joins: lightbulbjim (~lightbulb@user/lightbulbjim)
[12:08:03] *** Joins: rsx (~dummy@ppp-188-174-141-18.dynamic.mnet-online.de)
[12:10:42] *** Quits: lethu (~lethu@user/lethu) (Ping timeout: 256 seconds)
[12:12:00] <p-i-> Fixed. I was using privateIP, needed publicIP
[12:13:38] *** Joins: Samian (~Sami@2620:10d:c091:480::1:e369)
[12:14:30] *** Joins: n00b101 (uid448161@id-448161.tooting.irccloud.com)
[12:15:49] *** Joins: rendar (~rendar@user/rendar)
[12:15:49] *** Joins: Liblx (~Alex@2a02:810c:280:59c:4c45:84b8:14af:7992)
[12:16:50] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[12:17:22] *** Joins: kosh (~kosh@user/kosh)
[12:19:15] <Liblx> Hello, I want to get a string out of another. But with split I see no possibility. It starts easy with a # but then it is followed by upper letters and after it no space but any non-letter character. Example: "abcdefgh#HELLO-ijklm" or "wjdhsgaZggakaslfJJ#THANKS]]]...jdaaufd". How can I solve it?
[12:19:57] <Liblx> I'd need #HELLO and #THANKS from the examples. Thanks for all ideas!
[12:20:07] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[12:20:18] <Repiphany> Liblx: The answer is always regex
[12:20:42] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[12:21:53] *** Joins: fikran (~fikran@user/fikran)
[12:25:25] <aphysically> huh, I wonder how you would even use sqlite to store api keys
[12:25:37] *** Quits: y1n (~y1n@84-115-64-241.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[12:25:46] <deniska> Liblx: regex answer: re.search(r'#(\w+)', 'abcdefgh#HELLO-ijklm')[1]
[12:25:47] <aphysically> I guess you probably can't unless sqlite has some built in constant time lookup functions
[12:26:34] *** Quits: oelewapperke (~cde@ns509915.ip-198-245-49.net) (Ping timeout: 256 seconds)
[12:27:11] *** Quits: retrosenator (~retrosena@91.sub-174-247-27.myvzw.com) (Read error: Connection reset by peer)
[12:27:26] <aphysically> if I store the hashes of API keys in a (large) database, it's presumably not cryptographically safe to use sqlite to check if a provided key is in the database because of a timing attack
[12:27:55] <aphysically> so you could loop through each item in the database and check it individually with a safe string comparison function, but then why am I using a database
[12:28:04] *** Joins: CoolerX (~CoolerX@user/coolerx)
[12:28:20] <Inge> timing attack to compare hashes?
[12:28:25] <Inge> of fixed length?
[12:29:00] <aphysically> presumably the lookup time for whether or not a hash is in the database depends on its content
[12:29:19] <FunkyBob> hmm... nice synchrony with rice + rajma... both need 15mins of simmering
[12:29:27] <FunkyBob> oops, wrong channel :)
[12:29:46] <aphysically> I guess it doesn't matter if it's hashed
[12:31:15] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[12:31:27] <aphysically> mmmmm I'm not sure I should think about this tomorrow after sleep
[12:31:31] *** Joins: greedom (~greedom@2001:16b8:2e61:3800:6b3d:53fd:1782:d062)
[12:31:45] *** Joins: Pickchea (~private@user/pickchea)
[12:35:32] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 245 seconds)
[12:35:57] <Inge> I'd wager a timing attack on a btree lookup of fixed-length hashes is going to have to be very precise. Also, even if the hash was successfully extracted, what would be the vulnerability?
[12:36:31] *** Quits: resmo_ (~resmo@2a00:d420:9:8a00:98bf:9f56:a38a:4125) (Remote host closed the connection)
[12:36:42] *** Quits: lightbulbjim (~lightbulb@user/lightbulbjim) (Quit: Sleeping...)
[12:36:47] *** Joins: resmo_ (~resmo@2a00:d420:9:8a00:611e:996e:4590:75fd)
[12:36:48] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:36:50] <aphysically> found some relevant discussions: https://security.stackexchange.com/questions/9192/timing-attacks-on-password-hashes
[12:36:55] <aphysically> https://crypto.stackexchange.com/questions/40433/is-it-necessary-to-worry-about-timing-attacks-when-comparing-sha256-or-argon2-ha
[12:37:08] *** Joins: jamer05 (~jamer05@user/jamer05)
[12:37:17] *** Quits: dba (uid502594@id-502594.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[12:37:46] <aphysically> so in general there is a timing issue you would want to mitigate, but hiding the salt from the user is also okay
[12:38:00] <aphysically> but you can't use individually salted API keys (and it's not usual to salt API keys which already have enough entropy to begin with)
[12:38:07] <supakeen> But one shouldn't rely on the salt being secret :)
[12:38:07] *** Quits: greedom (~greedom@2001:16b8:2e61:3800:6b3d:53fd:1782:d062) (Remote host closed the connection)
[12:38:18] <aphysically> (because if you individually salt the API keys, you can't do an efficient database inclusion lookup again)
[12:38:54] *** Joins: greedom (~greedom@2001:16b8:2e61:3800:6b3d:53fd:1782:d062)
[12:39:08] <aphysically> seems a bit iffy to rely on a global salt being secret though, so you're really back to needing a way to do a database inclusion check that runs in constant time based on the key length
[12:39:48] <supakeen> a salt is always per-hash; a global salt is called a 'pepper' (I don't like the term either)
[12:39:59] <aphysically> ah
[12:40:16] <aphysically> for user-password this isn't a problem because you would index the database by the username presumably
[12:40:23] <aphysically> but an API key has no such index
[12:40:36] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[12:42:02] *** Joins: y1n (~y1n@84-115-64-162.wifi.dynamic.surfer.at)
[12:42:48] <p-i-> I'm trying to ping-test a UDP socket server/client: https://bpa.st/JKUQ but I'm getting 'Can't assign requested address'.
[12:43:09] <p-i-> I had it working for socket.STREAM, but switching to socket.DGRAM I can't get it working.
[12:43:28] <p-i-> I've tried bumping the ports in case of a ghost port from a prior run.
[12:43:31] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[12:43:52] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.2)
[12:44:01] *** Joins: user2_ (~ogata@240d:1a:ade:8000:a0c6:bf5c:b949:7f44)
[12:45:05] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-00fd-de4a-ab18-4740.res6.spectrum.com) (Quit: jarthur)
[12:45:16] *** Quits: zln (~zln@c80-217-230-193.bredband.tele2.se) (Ping timeout: 256 seconds)
[12:45:31] *** Joins: lalitmee__ (~lalitmee@180.94.33.37)
[12:46:37] *** Quits: foozle (~foozle@2001-b011-c001-16ef-eb07-082b-2ebb-6ce6.dynamic-ip6.hinet.net) (Quit: Leaving)
[12:46:59] <aphysically> anyway, I'm headed in for the night, ping me if anyone has any info on a standard way to approach the problem
[12:47:30] <aphysically> I feel like the real answer is probably give up and use usernames if I don't want to use something really elaborate
[12:48:02] *** Quits: lalitmee_ (~lalitmee@180.94.33.33) (Ping timeout: 245 seconds)
[12:49:37] *** Quits: greedom (~greedom@2001:16b8:2e61:3800:6b3d:53fd:1782:d062) (Remote host closed the connection)
[12:50:24] <p-i-> Fixed. Looks like I can't .bind a UDP socket.
[12:52:32] *** Quits: user2_ (~ogata@240d:1a:ade:8000:a0c6:bf5c:b949:7f44) (Quit: Leaving)
[12:52:55] *** Quits: lordrishav (~LordRisha@user/lordrishav) (Quit: WeeChat 2.8)
[12:54:56] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) (Quit: Leaving...)
[12:55:11] *** Joins: niv (~niv@limbo.cypherpunks.io)
[12:55:23] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 252 seconds)
[12:56:12] *** Joins: user2_ (~ogata@240d:1a:ade:8000:a0c6:bf5c:b949:7f44)
[12:57:36] *** Quits: user2_ (~ogata@240d:1a:ade:8000:a0c6:bf5c:b949:7f44) (Client Quit)
[12:58:19] *** Joins: ogata (~ogata@240d:1a:ade:8000:a0c6:bf5c:b949:7f44)
[12:59:57] *** Andrew is now known as AhkilKumar
[13:00:26] *** AhkilKumar is now known as Andrew
[13:01:22] *** Quits: resmo_ (~resmo@2a00:d420:9:8a00:611e:996e:4590:75fd) (Ping timeout: 252 seconds)
[13:02:00] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[13:02:38] *** Joins: magla (~gelignite@55d416bb.access.ecotel.net)
[13:02:38] *** Joins: aspplus (~user2@240d:1a:ade:8000:a0c6:bf5c:b949:7f44)
[13:03:38] *** Quits: Shanzem (~Shanzem@86.31.109.147) (Quit: sudo Shanzem -lol -updoot -karma -gold >/dev/lies)
[13:03:48] *** Joins: dthpulse (~quassel@podciarou.sk)
[13:04:22] *** Quits: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:06:45] *** Joins: resmo (~resmo@2a02:1205:34e4:1ef0:4d5b:f4eb:635a:1c18)
[13:06:48] *** Joins: CoolerX (~CoolerX@user/coolerx)
[13:07:13] <pycode> hello everybody, I am learning python, pardon for the stupid question in advance :) I wonder if a class like this https://bpa.st/EGUA is ok or not. I think i am using the class badly, i mean that i will use that class for reading its attributes and stop, so "an instance" of that class is not needed,
[13:08:00] *** Joins: lalitmee_ (~lalitmee@180.94.32.14)
[13:08:12] <supakeen> It doesn't really seem like you're encapsulating some data but instead are just using it as a namespace
[13:08:17] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:08:22] <pycode> so basically i need a "container" with thoose information that i can read from outside without dealing with instances because that class does not do anything magical
[13:08:26] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[13:08:51] *** Joins: supakeen (~user@python/site-packages/supakeen)
[13:08:56] <pycode> supakeen, exactly
[13:09:01] *** Parts: stardiviner (~stardivin@183.246.147.106) (Using Circe, the loveliest of all IRC clients)
[13:09:03] <supakeen> You could use a normal module to do this :)
[13:09:16] <pycode> i need to store information inside a "container" so the container in this case is the namespace
[13:09:32] <pycode> supakeen, could you give me an example please? without using class right?
[13:09:41] <pycode> just store funciton inside that?
[13:09:48] <pycode> *functions
[13:09:55] <supakeen> You could just remove the class definition, de-indent everything by one level and remove the 'self' arguments and you're done.
[13:10:20] <pycode> oh ok thanks supakeen
[13:10:32] *** Quits: lalitmee__ (~lalitmee@180.94.33.37) (Ping timeout: 245 seconds)
[13:10:50] <pycode> so in that module i will have everything for MovingAverage instead of using a class with that name
[13:11:00] <pycode> so just the name of the module / file matter in this case
[13:11:00] <pycode> ok
[13:11:36] <pycode> supakeen, wait can i get all the functions with @rule decorator in this case?
[13:12:02] <pycode> because as you can see i have a "mirror" param in @rule() that let me understand what is the other mirrored function
[13:12:16] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Quit: elastic_dog)
[13:12:20] <pycode> is that possibile somehow?
[13:13:18] <supakeen> you can use the same decorator, i don't see the problem?
[13:13:24] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[13:14:18] *** Joins: Adoi (~Adoi@user/adoi)
[13:14:55] <pycode> supakeen, i mean lets suppose i call this module "moving_average", then i need to load all the functions inside this module with that @rule decorator
[13:14:59] <pycode> how can i do that?
[13:15:04] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:15:25] <supakeen> the same as you're currently doing? decorators are in the definition place, not the calling place?
[13:15:35] <pycode> decorator is adding attributes to every function ok but how cna i get the list?
[13:16:17] <pycode> supakeen, https://stackoverflow.com/questions/139180/how-to-list-all-functions-in-a-python-module
[13:16:24] <pycode> the accepted answer?
[13:16:27] <pycode> with inspect
[13:16:27] <pycode> ?
[13:17:43] *** Joins: Elzington (~Elzington@68.235.43.86)
[13:19:57] *** Joins: stpz (~stpz@27.190.92.216)
[13:20:18] <supakeen> I have no idea why you want this; you weren't doing it in the previous code example either?
[13:21:27] <pycode> supakeen, yes because i need a way to load all the rules of every module moving_Average, std etc...so for each modules i have some rules i need a way to load them automatically
[13:21:38] <pycode> should i create a list of functions at the end of each module ?
[13:21:48] <pycode> to "expose" those functions
[13:22:30] <supakeen> you can do that, yes
[13:22:51] <pycode> supakeen, something like this: https://bpa.st/VJKA
[13:22:52] <pycode> ?
[13:23:15] <pycode> i removed the mirror param inside @rule because i specify it in __rules__
[13:23:39] <supakeen> that'll work, sure i assume you're passing these to another thing that would know to look at __rules__?
[13:24:31] <pycode> supakeen, exactly
[13:24:33] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[13:24:47] <pycode> yes that way i "expose" those functions instead of using "inspect"
[13:25:04] <pycode> then for each module i create i know there is a __rules__ to read
[13:25:56] <supakeen> explicit is better than implicit :)
[13:26:21] <supakeen> you can put the functions in there by name, they don't have to be strings
[13:26:38] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:27:19] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[13:27:42] *** Quits: randall (~randall@user/randall) (Ping timeout: 276 seconds)
[13:27:53] *** Joins: randall (~randall@user/randall)
[13:27:56] *** Quits: simone (~nya@user/sx) (Quit: Ping timeout (120 seconds))
[13:28:07] *** Joins: simone (~nya@user/sx)
[13:28:57] <pycode> supakeen, yeah that could be another optimization hehe
[13:29:00] <pycode> right!
[13:29:36] *** Joins: LuksNuke (~LuksNuke@2001:7e8:c00d:2800:5632:a48d:a3f2:8471)
[13:29:44] <pycode> supakeen, is there any problem using __ __ FOR variable name?
[13:30:09] <pycode> i read that double underscores at the beginning and at the end are reserved like __init__ __main__ etc
[13:30:10] <pycode> no?
[13:30:28] <supakeen> they tend to indicate that its something for internal Python use
[13:30:31] *** Joins: brylie (~Thunderbi@81-197-199-179.elisa-laajakaista.fi)
[13:30:37] *** Quits: CoolerX (~CoolerX@user/coolerx) (Quit: Leaving)
[13:31:02] <pycode> so better to use another name right ?
[13:31:05] <supakeen> there's no real reason to use it here, you could just call it `rules`
[13:31:17] <pycode> ok
[13:31:24] <raek> if some attribute with special meaning is added to python in the future, it will likely have a name with double underscores
[13:31:28] <pycode> supakeen, in this case should i use the upper case?
[13:31:47] <pycode> raek, ok so it is better to avoid that name
[13:31:48] <raek> (so I would treat such names as "owned by python")
[13:31:50] <raek> yes
[13:31:55] <pycode> ok
[13:32:06] *** Quits: ogata (~ogata@240d:1a:ade:8000:a0c6:bf5c:b949:7f44) (Quit: Leaving)
[13:32:12] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 245 seconds)
[13:32:24] <pycode> what about uppercase ? :) pardon i understand is a stupid question :F
[13:34:42] *** Quits: Pandadub (~Barones@186.213.206.209) (Ping timeout: 245 seconds)
[13:35:07] <supakeen> if you want to treat them as internal to your application (as in, people shouldn't touch them) you usually indicate that with a single leading underscore: _rules
[13:36:37] <raek> pycode: uppercase is used for global constants
[13:36:55] <pycode> ok
[13:37:40] <p-i-> If I do `with s = ...` what causes s to destruct?  Going out of scope?  Does this mean if I assign s to a persistent variable, it won't be destroyed until that variable destructs?
[13:38:54] <raek> p-i-: do you mean "with ... as s:" ?
[13:39:27] <pycode> last question, is it possible to check if a "name" is a callable or a class? https://bpa.st/VFRQ
[13:39:27] *** Quits: Teacup (~teacup@user/teacup) (Ping timeout: 240 seconds)
[13:39:38] <pycode> a function or a class
[13:39:46] <p-i-> raek: yes, sorry
[13:39:48] <theprophet> guys, does python handle parser errors? a.k.a syntax errors?
[13:40:06] <raek> p-i-: in any case, variables live until the function returns in python. so "blocks" do not matter for variable scope. (blocks = if/else/with/for etc).
[13:40:25] <p-i-> How to get s to persist outside of it's block-life?
[13:40:28] <raek> p-i-: so the value assigned to s is actually available after the "with" block
[13:40:38] <p-i-> I'm iterating thru many s, and I want to keep one of them.
[13:41:01] <p-i-> s are socket connections.
[13:41:16] <raek> however, the thing s refers to may be "closed" in some context manager specific way
[13:41:38] <pycode> to understsand what class i should pass i can have a callable to return it, for example: https://bpa.st/EIPQ
[13:41:48] <p-i-> Can I somehow bump refcount on s, so it persists?
[13:41:50] *** Joins: Nahra (~user@static.161.95.99.88.clients.your-server.de)
[13:41:56] <raek> if s is an socket, then after the with block you will still have an "s" variable, but it will refer to a socket object that is closed
[13:41:59] *** Joins: j00n (~mario@user/j00n)
[13:42:09] <p-i-> raek: yes, how to prevent it from closing?
[13:42:19] <p-i-> Abandon the with-block?
[13:42:33] <grawity> automatically closing is kinda the whole point of the with-block, is it not
[13:42:35] <pycode> so to initialize the class i should do get_indicator()() if it is already a class just MyClass()
[13:42:43] <pycode> how to understand if it is a function or class?
[13:42:45] <raek> s.close() is called on the way out of the with block no matter how you exit the with block (including returning and raising exceptions)
[13:42:57] <p-i-> grawity: I want all but one of the sockets to close. I just want to keep one!
[13:43:14] <raek> p-i-: if you don't want to close the socket it doesn't make much sense to use a with block
[13:43:19] <grawity> I'd say manually close the ones you don't want then
[13:43:23] <grawity> instead of using 'with'
[13:43:42] <raek> all a with block does is something like "please python make sure that I don't forget to close this"
[13:43:53] <p-i-> yeah. That's what I'm doing. Just curious if there's some way to persist the one I want. I've bumped into this before...
[13:43:55] *** Joins: Teacup (~teacup@user/teacup)
[13:44:15] <raek> p-i-: have you looked into ExitStack?
[13:44:36] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:44:41] * p-i- looks
[13:45:03] <raek> if you don't want to close it don't use with... :-)
[13:45:43] <raek> "with" is not mandatory in any way
[13:45:54] *** Quits: y1n (~y1n@84-115-64-162.wifi.dynamic.surfer.at) (Ping timeout: 256 seconds)
[13:45:58] <raek> exit stack can be used like this:
[13:46:37] <raek> at some point in you application you have a "with ExitStack() as exit_stack:"
[13:46:43] *** Joins: jetchisel (jetchisel@user/jetchisel)
[13:47:05] <raek> inside that with block you can dynamically open new sockets and add them to the exit stack
[13:47:17] *** Joins: NineBAR (~NineBAR@c-107-5-176-200.hsd1.mi.comcast.net)
[13:47:19] <raek> if you're done with a socket is closed earler that is fine
[13:47:28] <gitesh> so should i treat `point.x` an entity or separate two entities?
[13:47:39] *** Quits: bn_work (uid268505@id-268505.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[13:47:46] <gitesh> 1> point and 2> x
[13:47:51] <raek> but it allows you to add a guarding layer of "please close these if I forget about them (or crash in the middle of something)
[13:48:05] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::4433)
[13:48:13] <theprophet> can somebody tell me why this is not working? https://pastebin.com/ei7xuu4C
[13:49:21] <raek> p-i-: but in your case it might be simpler to just write the code without "with" first, and then maybe reintroduce if it fits
[13:49:36] *** Quits: txtsd (~txtsd@user/txtsd) (Quit: WeeChat 3.2)
[13:50:34] <p-i-> Yup. Basically I've noticed a high variance in ping-time when I open a socket. I guess it sets the route at socket-creation-time and keeps to that route. And sometimes I get lucky. So I'm opening the socket 100x and keeping the one with the lowest latency.
[13:50:56] <p-i-> (And it's my own socketserver so I'm only spamming myself)
[13:52:12] *** Quits: aspplus (~user2@240d:1a:ade:8000:a0c6:bf5c:b949:7f44) (Quit: Konversation terminated!)
[13:53:22] *** Quits: pycode (~pycode@2001:b07:5d28:551:9be0:49b5:1c39:4049) (Remote host closed the connection)
[13:53:36] *** Joins: pycode (~pycode@2001:b07:5d28:551:214b:b0ab:3b73:2ee6)
[13:54:00] <gitesh> again what is the difference between an instance and an object?
[13:54:29] *** Joins: rakoon (~rakoon@2a02:2149:824f:5900:de8f:3a15:6740:8990)
[13:54:39] <gitesh> all objects are instances but all instances are not objects
[13:55:18] <p-i-> gitesh: foo_inst = Foo()
[13:55:34] <p-i-> Foo is a _class_.
[13:55:56] <gitesh> p-i-: so foo_inst is an instance or an object?
[13:56:10] <p-i-> I don't use the word 'object'.
[13:56:23] <p-i-> But I didn't go to CS school...
[13:57:06] <p-i-> Stick with class and instance, and you should be ok.
[13:57:32] *** Quits: stpz (~stpz@27.190.92.216) (Quit: Client closed)
[13:57:46] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[13:59:10] *** Joins: y1n (~y1n@84-115-65-27.wifi.dynamic.surfer.at)
[14:00:57] *** Quits: LuksNuke (~LuksNuke@2001:7e8:c00d:2800:5632:a48d:a3f2:8471) (Ping timeout: 245 seconds)
[14:01:51] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[14:01:58] <gitesh> is .(dot) operator?
[14:02:18] <gitesh> for an instance `print(point1.x)`
[14:02:25] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[14:02:42] *** Joins: LuksNuke (~LuksNuke@2001:7e8:c00d:2800:5632:a48d:a3f2:8471)
[14:03:13] *** Joins: Hackerpcs (~user@user/hackerpcs)
[14:05:57] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 245 seconds)
[14:10:18] *** Joins: lightbulbjim (~lightbulb@user/lightbulbjim)
[14:10:45] *** Joins: shad (~shad@user/shad)
[14:11:24] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[14:11:58] <bjs> gitesh: they’re the same thing
[14:12:36] <gitesh> bjs: so normal variable `x` is same as instance variable `point1.x` ?
[14:13:19] <bjs> gitesh: variables aren’t objects/instances/values at all. they’re just names for those things
[14:13:43] <bjs> all values in Python are objects and an object is just an instance (of some class)
[14:13:50] <gitesh> yeah here we use dot operator to name it but in real they are just names
[14:14:20] <gitesh> so that means dot(.) is allowed to name a variable
[14:14:57] *** Joins: Atque (~Atque@user/atque)
[14:15:08] <bjs> gitesh: well it's an operator,  it takes the object on the left-hand side and accesses the attribute given by the name on the right-hand side
[14:16:03] <gitesh> can we override that operation like __eq__ overrites == ?
[14:16:14] <bjs> gitesh: yes,  Python lets you override that operator like most operators
[14:16:27] <bjs> gitesh: <x>.y is roughly (<x>).__getattr__("y")
[14:16:31] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[14:16:53] <bjs> uh __getattribute__ sorry
[14:18:27] <gitesh> is an object a most complex data structure?
[14:18:33] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[14:18:56] <bjs> gitesh: I'm not even sure what that means
[14:19:12] <bjs> gitesh: in Python everything is an object,  the number 0 is an object
[14:19:20] <gitesh> because objects has attributes
[14:19:26] <bjs> I wouldn't call 0 a "most complex data structure"
[14:19:32] <bjs> gitesh: yeah, and methods
[14:19:38] <bjs> I guess they are a kind of data structure in that sense, yes.
[14:19:49] <bjs> in that they are a structure which contains data.
[14:21:22] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 245 seconds)
[14:21:36] <gitesh> if point1 is an instance of Point() class , point1.x is a variable name
[14:22:01] <bjs> gitesh: "point1" is a variable name,  "x" is an attribute name of the object the "point1" name referred to
[14:22:12] *** Joins: dev0 (~dev0@user/deepspace-link)
[14:22:29] <bjs> and that attribute refers to ... some other object,  whatever you assigned it to
[14:23:06] *** Quits: brylie (~Thunderbi@81-197-199-179.elisa-laajakaista.fi) (Quit: brylie)
[14:23:56] <p-i-> yeah, an object can have member-variables and member functions. These are termed "attributes". Internally the object has an attributes-dict.
[14:24:03] <pycode> try again, is it possible to check if i am calling a function or a class?
[14:24:04] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 250 seconds)
[14:24:42] *** Quits: lalitmee_ (~lalitmee@180.94.32.14) (Ping timeout: 245 seconds)
[14:24:43] <bjs> pycode: uh,  you mean you're going `obj()` and you want to know if obj is a function or a class?
[14:25:04] <p-i-> I think it's possible to override () on an object. So maybe a function is just a kind of object that overrides the () actribute.
[14:25:10] *** Joins: darksun (~darksun@user/darksun)
[14:25:13] <pycode> bjs, https://bpa.st/G7XQ
[14:25:32] <bjs> pycode: you can check the type of the thing.  if it's an instance of type then it's a class
[14:26:03] <pycode> bjs, i am not initializing the instance
[14:26:08] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 252 seconds)
[14:26:09] <pycode> can i check it before?
[14:26:10] <bjs> pycode: I know
[14:26:24] *** Quits: lightbulbjim (~lightbulb@user/lightbulbjim) (Quit: Sleeping...)
[14:26:31] <pycode> bjs, could you give me an example please?
[14:26:36] <bjs> pycode: yes, you can check the type of the thing. if it's an instance of type then it's a class
[14:26:41] <bjs> pycode: isinstance(maybe_a_class, type)
[14:27:00] <bjs> if this is True then it was a class.
[14:27:14] <pycode> bjs, where you write "type" can i put the name of a class i am inherithing from that ipotetic class?
[14:27:17] <p-i-> I've got a barebones UDP socket server https://bpa.st/VATQ ... suppose I have multiple clients connecting to it. Each new incoming packet I can store the address, so when I want to send an event to all listeners I can loop through. But how to deal with users that disconnect? I can't see any way of getting notification.
[14:27:19] <bjs> pycode: no
[14:27:24] <bjs> pycode: isinstance(int, type) is True
[14:27:31] <bjs> but isinstance(42, type) is not,  just try it
[14:27:40] <p-i-> Is that where UDP shifts to TCP? To handle this kind of stuff...
[14:28:06] <pycode> hmm ok i missinterpret that "type"
[14:28:13] <pycode> no i mean one moment i write the code
[14:28:59] <bjs> p-i-: UDP basically gives you no guarantees.  You might get packets in the wrong order, they might get lost entirely, the client might just disappear and you'll simply stop receiving packets from them
[14:29:10] <pycode> bjs, https://bpa.st/FKGQ
[14:29:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[14:29:25] <p-i-> bjs: So my clients should send keepalives if they don't want to be axed.
[14:29:30] <pycode> return False :(
[14:29:36] <bjs> p-i-: TCP adds the idea of a "connection" and makes sure you receive all the messages in the order they were sent without any gaps and you get notified if the connection drops
[14:29:43] <bjs> pycode: no type
[14:29:43] <pycode> i have all my classes that inherithing Indicator class
[14:29:51] <bjs> pycode: isinstance(Test, type)
[14:30:08] <supakeen> * bytes
[14:30:10] <p-i-> UDP is great for getting a signal thru the internet fast, which is what I'm using it for.
[14:30:11] <supakeen> not messages :)
[14:30:30] <bjs> supakeen: yeah :)
[14:30:32] <supakeen> and UDP has no 'connections' :)
[14:30:40] *** Quits: rakoon (~rakoon@2a02:2149:824f:5900:de8f:3a15:6740:8990) (Ping timeout: 256 seconds)
[14:30:40] *** Joins: HiddenHyde (~HiddenHyd@user/hidden-hyde/x-6930285)
[14:30:46] <pycode> bjs, so type = class? it checks if it is a class
[14:30:52] <bjs> pycode: yes
[14:31:04] <pycode> and can i do an additional check if that class is inherithing from my Indicator(parent) class ?
[14:31:13] <p-i-> I notice I get an error if I my_udpsocket.shutdown(socket.SHUT_RDWR)
[14:31:15] <bjs> pycode: yes, you can use issubclass
[14:31:15] *** Joins: fikran (~fikran@user/fikran)
[14:31:46] *** Joins: lalitmee (~lalitmee@180.94.32.213)
[14:31:46] <bjs> p-i-: yes it's faster, but that comes from a trade-off. By doing fewer checks and not having a "connection" like TCP does it can be much more lightweight and just throw the packets out there and let them make their way to you without extra checks
[14:32:01] <pycode> i try
[14:32:03] <acresearch> people, is it possible to have the __init__() of a class "return" a value instead of printing it?  i am getting this error: TypeError: __init__() should return None, not 'tuple'
[14:32:21] <supakeen> acresearch, __init__ is not allowed to return a value
[14:32:54] <supakeen> it's only meant to initialize a class after which you can call other methods on the instance
[14:33:00] <pycode> print(issubclass(MyTest, TheParent)) -> True
[14:33:05] <pycode> perfect bjs thanks!
[14:33:42] <supakeen> and a keepalive in UDP doesn't make sense though it might make sense on the application level (your own protocol) depending
[14:33:54] <supakeen> perhaps I can interest you in SCTP
[14:34:39] <p-i-> supakeen: I don't need sequencing, just raw speed for this one.
[14:35:37] <acresearch> supakeen: ok, so what is the best way to have the class return a value?
[14:35:52] <acresearch> supakeen: wheres should the return statement be?
[14:35:58] *** Quits: Sky_Net (~Sky_Net@176.14.213.85) (Ping timeout: 252 seconds)
[14:36:20] *** Joins: Sky_Net (~Sky_Net@176.14.213.85)
[14:37:02] *** Joins: p-i-_ (~Ohmu@223.206.150.107)
[14:37:21] <supakeen> acresearch, classes don't normally return value; their methods do
[14:37:28] <acresearch> supakeen: hmmm
[14:37:44] <supakeen> perhaps you want a function? it's a bit hard to tell :)
[14:38:05] <theprophet> can somebody tell me why this is not working? https://pastebin.com/ei7xuu4C
[14:38:05] <az> Hi, at line 363 I've with statement. it works when everything is inside the file but when I want to use it outside I get "NameError: name 'stub' is not defined" , how would I make it a library that could be imported and have  what is now inside __name__ == "__main__": used or put it in a better place
[14:38:11] <pycode> as i wrote i have many classes that are inheriting from Indicator, i then need to create a kind of register that is shared across all those indicators class without passing data like FirstIndicator(data) SecondIndicator(data) ThirdIndicator(data) and so on...what pattern should i use?
[14:38:47] *** Quits: HiddenHyde (~HiddenHyd@user/hidden-hyde/x-6930285) (Quit: Leaving)
[14:38:51] <acresearch> supakeen: ok let me send you my code     i just want it to be clean you know?       https://paste.debian.net/1210365/
[14:39:08] <acresearch> supakeen: print statement in line 16
[14:39:19] <acresearch> supakeen: sorry 14
[14:39:23] <az> Hi, at line 363 I've with statement. it works when everything is inside the file but when I want to use it outside I get "NameError: name 'stub' is not defined" , how would I make it a library that could be imported and have  what is now inside __name__ == "__main__": used or put it in a better place https://gitlab.com/uak/bchd-grpc-python-lib/-/blob/main/bchd_gprc_lib.py
[14:39:47] *** Joins: sedeki (~textual@user/sedeki)
[14:39:53] *** Quits: p-i- (~Ohmu@mx-ll-223.206.150-107.dynamic.3bb.co.th) (Ping timeout: 252 seconds)
[14:39:54] <supakeen> acresearch, is there anything wrong with the user 'just' doing `Mol_Vol_Area("file.sdf").calc()`?
[14:40:08] <acresearch> supakeen: ahhhhhh
[14:40:12] <acresearch> supakeen: i see   ok
[14:40:56] <bjs> az: why not make HitGrpc take a `stub` as an input: `HitGrpc(stub)` then use `self.stub` in all the methods.  Then when you import the library you can make a stub, make a HitGrpc then call the methods
[14:41:02] <acresearch> supakeen: hmmmm no that does not work
[14:41:10] *** Joins: computeiro (~Wender@189.37.65.234)
[14:41:22] *** Quits: Adoi (~Adoi@user/adoi) (Read error: Connection reset by peer)
[14:41:27] <supakeen> If you always only returning the value of `calc()` then a few functions that are not in a class might be better suited to your needs.
[14:41:31] <bjs> acresearch: does not work?
[14:41:51] <acresearch> bjs: TypeError: calc() missing 2 required positional arguments
[14:41:53] <supakeen> It seems to me you are not really changing state in between the methods that you want to encapsulate and are mostly using it as a namespace?
[14:42:14] <bjs> acresearch: I don't think supakeen meant to write exactly that but is asking why not just make the users run calc directly
[14:42:45] <bjs> acresearch: another solution might be to make __init__ take the area and volume directly and then have a function (or a @classmethod) to create a Mol_Vol_Area from a filename
[14:42:51] <acresearch> ok let me think about it for a bit,    the class works, but i am just trying to make it  'clean' you know?
[14:42:56] <pycode> i read there is a kind of register pattern
[14:42:57] <bjs> acresearch: like Mol_Vol_Area.from_filepath(path)
[14:43:00] <pycode> registry
[14:43:02] <supakeen> And you can rewrite calc so it doesn't take the arguments but takes them from `self` since you're just passing "atoms, bonds = self.parse(filename)" that line could move into `.parse` etc
[14:43:16] <supakeen> But it's a bit hard to tell what *you* find to be clean.
[14:43:38] <supakeen> I personally would write this code without a class.
[14:44:20] <acresearch> supakeen: my original code is without a class, i am just combining it into a class so i can easily transport it to other projects,    you know like a single block
[14:44:36] <supakeen> Sure :)
[14:45:14] <az> bjs, not sure what to do with the __name__ __main__ thing and with statement
[14:45:32] <bjs> az: what thing do you want to *do* with those?
[14:45:48] <bjs> az: the if block there is "if running this file directly" and you probably still want that?
[14:45:58] *** Quits: y1n (~y1n@84-115-65-27.wifi.dynamic.surfer.at) (Ping timeout: 256 seconds)
[14:46:03] <az> I want with to function
[14:46:13] <az> so not only stub would be move out right?
[14:46:17] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[14:46:23] <bjs> az: well why not just move the stub stuff into main
[14:46:29] <bjs> then you can just call main from wherever
[14:46:40] <az> ok
[14:46:44] <az> thanks will try that
[14:49:12] <bjs> az: something like https://bpa.st/N4PA
[14:49:36] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[14:50:05] *** Joins: mickey (~user@user/mickey)
[14:50:28] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Client Quit)
[14:50:36] <bjs> az: then another file can import this library and either make a stub and a a HitGrpc itself,  or it can call the main functions to just "run" the pre-made thing
[14:50:36] *** Joins: misterx (~8473@p57912297.dip0.t-ipconnect.de)
[14:51:04] *** Quits: resmo (~resmo@2a02:1205:34e4:1ef0:4d5b:f4eb:635a:1c18) (Ping timeout: 256 seconds)
[14:51:52] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[14:52:56] *** Joins: resmo (~resmo@2a00:d420:9:8a00:2b9e:4d06:b489:8cf9)
[14:53:16] <misterx> hi there! I encounter a weird problem with regular expressions / re. I try to match the whitespace on the beginning of a line by '^( *)' (shorted, groupings following…) yet the returns of .match().groups() are empty. I checked the expression on pythex.org it should be correct. Any ideas what I could do?
[14:54:28] *** Quits: shad (~shad@user/shad) (Ping timeout: 256 seconds)
[14:54:30] *** Quits: sedeki (~textual@user/sedeki) (Quit: Textual IRC Client: www.textualapp.com)
[14:56:04] <supakeen> math wants to match from the beginning
[14:56:08] <supakeen> * match
[14:56:24] <supakeen> you might want search?
[14:56:33] <supakeen> or findall
[14:57:21] <purplex> in python, i just saw a variable assigned a value 'nan' when i mouseovered it in debug, but i can't check it using x == 'NaN'?
[14:57:38] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[14:57:46] <supakeen> You likely mean float("NaN")
[14:58:36] *** Quits: frost (~frost@59.71.240.119) (Quit: Connection closed)
[14:58:57] <purplex> i checked type(x) it says <class 'float'>
[14:59:07] *** Joins: Pickchea (~private@user/pickchea)
[14:59:18] *** Joins: y1n (~y1n@84-115-65-27.wifi.dynamic.surfer.at)
[14:59:33] <purplex> so how can i check it? x == float("NaN") ? let me check
[14:59:49] <nedbat> purplex: math.is_nan(x)
[15:00:14] <pycode> is there a way to share an object between many classes? for example as i wrote i have many indicator those indicator need to access the prices so i have a list with those prices that i need to use inside every indicator class
[15:00:33] <pycode> is there a way to let those indicator access this prices without passing the data as i wrote above?
[15:00:40] <pycode> FirstIndicator(data) SecondIndicator(data) ThirdIndicator(data etc
[15:01:02] *** portalrat_ is now known as portalrat
[15:01:31] <purplex> nedbat: math has no attribute .is_nan, i get error
[15:01:58] <nedbat> purplex: sorry: math.isnan(x)
[15:02:01] <purplex> yep and x == float("NaN") didn't work
[15:02:30] <purplex> isnan works, thanks
[15:02:37] *** Quits: Samian (~Sami@2620:10d:c091:480::1:e369) (Ping timeout: 245 seconds)
[15:03:57] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[15:03:59] <nedbat> pycode: you can use the price list as a global
[15:05:45] *** Joins: timkofu (~timkofu@user/timkofu)
[15:05:47] <timkofu> Hi
[15:05:48] *** Quits: LuksNuke (~LuksNuke@2001:7e8:c00d:2800:5632:a48d:a3f2:8471) (Ping timeout: 256 seconds)
[15:06:01] <misterx> @supakeen well, it does not seem to matter whether i use match() or findall()
[15:06:12] <pycode> nedbat, how? it is basically an array that i update everytime i get new prices from socket
[15:06:41] <nedbat> misterx: can you link us to your code?
[15:07:05] <misterx> nedbat: yes, I'll tidy up and do a paste
[15:11:29] *** Quits: magla (~gelignite@55d416bb.access.ecotel.net) (Quit: Stay safe!)
[15:11:41] *** Joins: shad (~shad@user/shad)
[15:11:49] *** Joins: stealth_ (~stelath_@216-197-160-97.regn.static.sasknet.sk.ca)
[15:12:21] *** Joins: daoudr (~daoudr@178.197.197.112)
[15:12:30] *** Joins: lalitmee_ (~lalitmee@180.94.33.117)
[15:13:15] <nedbat> pycode: you can define it at the top level of your module, and update it as you need
[15:13:56] *** Joins: lordrishav (~LordRisha@user/lordrishav)
[15:14:31] *** Quits: daoudr (~daoudr@178.197.197.112) (Client Quit)
[15:14:47] <pycode> nedbat, what about if i have multiple price? can i define a class that hold these dataseries and share them with all the other indicator classes?
[15:15:01] *** Quits: lalitmee (~lalitmee@180.94.32.213) (Ping timeout: 252 seconds)
[15:18:33] <nedbat> pycode: sure
[15:21:15] *** Quits: dev0 (~dev0@user/deepspace-link) ()
[15:22:21] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[15:22:44] <pycode> nedbat, but... how can i share? just put that class globally?
[15:23:16] <nedbat> pycode: i think you mean an instance, not class, and yes, just put it globally
[15:25:04] <misterx> okay, this is super weird. it works in my cutout that i wanted to show you, yet not in my script. probably not an error with the regex itself… /o\
[15:26:22] *** Quits: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net) (Ping timeout: 245 seconds)
[15:29:25] *** Joins: AlanMD (~AlanMD@5-14-246-29.residential.rdsnet.ro)
[15:29:36] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:29:53] *** Joins: mxp (~mxp@139.28.219.252)
[15:30:17] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[15:30:33] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[15:31:02] <misterx> well. turns out, if you .strip() a string prior to searching for leading whitespace, you will find none. silly me /o\
[15:31:03] *** Joins: djhankb (~djhankb@208.113.164.68)
[15:32:16] <pycode> nedbat, so basically .... prices = PriceHolder() then i update prices and all the INdiicator classes read that prices variable
[15:32:17] <pycode> right?
[15:34:06] <nedbat> pycode: yes, something like that
[15:34:07] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 240 seconds)
[15:34:20] *** Quits: AlanMD (~AlanMD@5-14-246-29.residential.rdsnet.ro) (Ping timeout: 252 seconds)
[15:35:33] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[15:35:34] <acresearch> people, if i have a url that downloads a file,,, i can download it using wget,    what is a better "python" way to download it?  using reauests? urllib?
[15:35:55] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[15:35:57] <The-Compiler> acresearch: requests is great
[15:36:04] <acresearch> ok
[15:36:20] <pycode> nedbat, sometimes i think about sophisticated solution, registry...special patterns etc etc....but then i can achieve the same thing with a global variable ahhaha
[15:36:40] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[15:36:53] <pycode> i tend to overcomplicate everything grrr
[15:37:30] *** Joins: czuk_cza (~mist@188.147.96.18.nat.umts.dynamic.t-mobile.pl)
[15:39:28] <nedbat> pycode: it's an occupational hazard
[15:40:46] *** Joins: nomic (~nomic@185.192.69.188)
[15:42:35] <pycode> easy is better... i need to print it and put it over my monitor
[15:42:36] <pycode> :D
[15:42:42] *** Quits: n00b101 (uid448161@id-448161.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[15:42:44] *** Joins: Fedorasan (~fedorasan@user/fedorasan)
[15:45:40] <pycode> thank you very much
[15:45:57] *** Quits: y1n (~y1n@84-115-65-27.wifi.dynamic.surfer.at) (Ping timeout: 245 seconds)
[15:46:22] *** Quits: luna-is-here (~quassel@ip-95-223-58-39.hsi16.unitymediagroup.de) (Ping timeout: 252 seconds)
[15:46:29] *** Joins: luna-is-here_ (~quassel@2a02:908:f761:2a3c::a)
[15:48:52] *** Quits: Gurkenglas (~Gurkengla@dslb-088-075-022-191.088.075.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[15:50:50] *** Quits: pycode (~pycode@2001:b07:5d28:551:214b:b0ab:3b73:2ee6) (Ping timeout: 252 seconds)
[15:51:55] *** Joins: LuksNuke (~LuksNuke@2001:7e8:c066:6200:be85:8d95:5d9:f9da)
[15:53:40] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Ping timeout: 240 seconds)
[15:56:22] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[15:59:36] *** Joins: y1n (~y1n@84-115-65-65.wifi.dynamic.surfer.at)
[16:00:07] *** Quits: shad (~shad@user/shad) (Ping timeout: 252 seconds)
[16:00:54] *** Joins: georgios (~georgios@user/georgios)
[16:04:49] *** Quits: dharrigan (~dharrigan@user/dharrigan) (Quit: ZNC - https://znc.in)
[16:04:59] *** Joins: Mikro (leo@libera.ninja)
[16:05:42] *** Joins: dharrigan (~dharrigan@user/dharrigan)
[16:05:45] <xrogaan> is it possible to share the state of numpy.random.* and python's random.Random()?
[16:06:18] <xrogaan> In order to create deterministic outcomes.
[16:07:35] <xrogaan> I guess I can use Random().choice() on a numpy array.
[16:08:42] *** Quits: czuk_cza (~mist@188.147.96.18.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 256 seconds)
[16:10:09] <Tuju> i found a workaround to my suds problem https://stackoverflow.com/questions/69046728/suds-python3-typeerror-xxxxx-got-an-unexpected-keyword-argument-inject
[16:10:11] *** Joins: pycode (~pycode@2001:b07:5d28:551:a9af:f71f:29c8:4fa4)
[16:11:42] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[16:12:13] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:14:13] *** Joins: n00b101 (uid448161@id-448161.tooting.irccloud.com)
[16:15:31] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 252 seconds)
[16:17:03] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[16:17:28] *** Joins: txtsd (~txtsd@user/txtsd)
[16:17:46] *** Quits: resmo (~resmo@2a00:d420:9:8a00:2b9e:4d06:b489:8cf9) (Ping timeout: 256 seconds)
[16:17:52] *** Joins: wender (~Wender@189.41.10.188)
[16:19:26] <acresearch> people, i have a multi line string, i am trying to loop through it as if it is a file, how can i do that?   a for loop loops through the string by charachter rather than line
[16:20:10] *** Quits: computeiro (~Wender@189.37.65.234) (Ping timeout: 240 seconds)
[16:20:26] *** Joins: rtur (~weechat@mail.rtur.org)
[16:20:36] *** Joins: lalitmee__ (~lalitmee@180.94.33.231)
[16:21:30] <nedbat> acresearch: the_string.splitlines() will give you a list of lines
[16:22:05] <acresearch> nedbat: ok
[16:22:59] *** Joins: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net)
[16:23:07] *** Quits: wyre (~wyre@user/wyre) (Ping timeout: 240 seconds)
[16:23:13] *** Quits: lalitmee_ (~lalitmee@180.94.33.117) (Ping timeout: 252 seconds)
[16:25:12] *** Joins: Pandadub (~Barones@186.213.206.209)
[16:25:14] *** Joins: wyre (~wyre@user/wyre)
[16:26:57] *** Joins: nomic2 (~nomic@185.192.69.188)
[16:27:12] *** Quits: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net) (Ping timeout: 245 seconds)
[16:29:40] *** Quits: nomic (~nomic@185.192.69.188) (Ping timeout: 256 seconds)
[16:29:52] *** Joins: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net)
[16:31:08] *** Quits: wyre (~wyre@user/wyre) (Read error: Connection reset by peer)
[16:33:44] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[16:34:12] *** Quits: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[16:34:15] *** Quits: mohabaks_ (~mohabaks@gateway/tor-sasl/mohabaks) (Remote host closed the connection)
[16:34:19] *** Joins: LucaTM (~LucaTM@user/lucatm)
[16:34:43] *** Joins: mohabaks_ (~mohabaks@gateway/tor-sasl/mohabaks)
[16:35:47] *** Joins: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:37:43] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:38:41] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[16:40:26] *** Quits: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[16:40:37] *** Joins: fikran (~fikran@user/fikran)
[16:41:50] *** Joins: shad (~shad@user/shad)
[16:42:30] *** Joins: platta (~platta@pool-71-187-23-254.nwrknj.fios.verizon.net)
[16:42:47] *** Joins: Cyberg33k (~Cybergeek@80.161.188.186)
[16:43:13] <pycode> nedbat, still there? i think i have to call indicator from prices so i have to register them somehow, because i need to send an event or call indicator when there is new data as i wrote prices are coming in "real time" so i have to notify them to the indicator
[16:43:18] <pycode> *indicators
[16:43:31] <pycode> so i needt o implement a "notification" system or something like that
[16:43:55] *** Joins: dez (uid92154@user/dez)
[16:44:48] *** Quits: ledtc (~ledtc@c-f8aa70d5.014-57-6c756e3.bbcust.telenor.se) (Quit: Client closed)
[16:45:10] *** Joins: besnn (~besnn@user/besnn)
[16:45:40] *** Joins: wyre (~wyre@user/wyre)
[16:46:19] *** Quits: y1n (~y1n@84-115-65-65.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[16:48:51] *** Quits: wyre (~wyre@user/wyre) (Client Quit)
[16:49:47] *** Joins: wyre (~wyre@user/wyre)
[16:50:41] <pycode> Observer pattern?
[16:51:54] <gitesh> I think object means cases
[16:52:09] <gitesh> For example if int object int is 3 in this case
[16:54:17] *** Quits: wyre (~wyre@user/wyre) (Ping timeout: 245 seconds)
[16:58:29] *** Quits: Allegretto (~allegrett@84-236-30-129.pool.digikabel.hu) (Ping timeout: 252 seconds)
[17:00:03] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[17:00:10] *** Joins: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl)
[17:00:16] *** Quits: shad (~shad@user/shad) (Ping timeout: 256 seconds)
[17:00:23] <pycode> guys i need your help, is this an error? https://bpa.st/ZOFQ
[17:00:35] <pycode> take a look at BaseStrategy
[17:00:47] <pycode> i do return self.symbol and return self.timeframe
[17:00:56] <pycode> but the BaseStrategy does not have those ettributes
[17:01:02] <pycode> the child class has
[17:01:06] <pycode> so is this wrong?
[17:01:34] *** Joins: wyre (~wyre@user/wyre)
[17:02:18] *** Joins: pr0xibus (~pr0xibus@host86-145-241-199.range86-145.btcentralplus.com)
[17:03:36] <stealth_> pycode, looks right, also its common to do `self._symbol = symbol` for internally passed instances
[17:04:29] <pycode> stealth_, yes the Strategy looks ok i wonder if BaseStrategy is correct
[17:04:34] *** Joins: Atque (~Atque@user/atque)
[17:04:40] <pycode> because i did not declare symbol and timeframe as None there
[17:04:50] <pycode> i juse declare / initialize them into the Child class
[17:04:53] <pycode> is that a problem?
[17:05:12] <stealth_> pycode, it is, as long as you don't call it directly like `a = BaseString().get_symbol()` then you have error
[17:05:22] <pycode> ok
[17:05:24] <pycode> thanks
[17:07:17] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 252 seconds)
[17:09:01] <jean-luc> why did you declare Broker
[17:09:12] <jean-luc> in init
[17:09:23] <jean-luc> but no assignment :p
[17:09:40] *** Quits: jamer05 (~jamer05@user/jamer05) (Ping timeout: 240 seconds)
[17:10:02] *** Quits: pr0xibus (~pr0xibus@host86-145-241-199.range86-145.btcentralplus.com) (Ping timeout: 250 seconds)
[17:10:29] <bjs> pycode: it's not wrong,  it will work
[17:10:41] <bjs> pycode: so long as you make a Strategy instance
[17:10:49] <pycode> jean-luc, eheh yeah i am working on it too :)
[17:10:50] <bjs> obviously if you make a BaseStrategy one, it won't work as it wont have the attributes
[17:11:17] <pycode> bjs, yes i thought that declaring those attributes on the BaseStrategy was ok
[17:11:30] <pycode> but yes i will use that class from Strategy
[17:11:32] <pycode> so no problem ok
[17:11:48] <bjs> pycode: the attributes exist on instances not classes
[17:12:05] *** Joins: Allegretto (~allegrett@84-236-52-59.pool.digikabel.hu)
[17:12:06] <bjs> so `self.symbol = ...` then all methods that get the same "self" will see those attributes too
[17:12:06] <pycode> yes i forgot that particular :D
[17:12:54] <pycode> bjs yes but for example if i do OtherClass(BaseStrategy) it will no work because this OtherCLass does not initialize symbol/timeframe...but yes, that will be my error so ok.
[17:13:01] *** Joins: plastico (~plastico@neomutt/plastico)
[17:13:22] <bjs> pycode: if OtherClass doesn't go `self.symbol = something` then yes, when you call `.get_symbol()` it will fail
[17:13:34] <bjs> pycode: (also shouldn't it be `def get_symbol(self): `
[17:13:40] <stealth_> ^
[17:13:45] <stealth_> i just noticed that as well
[17:14:07] <pycode> bjs? just call symbol ?
[17:14:20] <pycode> s = Strategy() s.symbol
[17:14:21] <pycode> ?
[17:14:24] <pycode> without method
[17:14:28] <pycode> do you mean that?
[17:14:51] <bjs> pycode: huh?  well you can do that but i didn't say that
[17:15:17] <pycode> bjs, ok but it is usually better to create such methods to returns attributes?
[17:15:32] <bjs> pycode: no it's quite uncommon to make `get_` methods
[17:15:41] <bjs> pycode: since as you say, you can just go `self.symbol` when you need
[17:15:46] <pycode> ok
[17:15:50] <pycode> i will remove those methods
[17:16:03] *** Joins: goepsilongo (~chacho@2603-7000-ab00-62ed-0000-0000-0000-0bd0.res6.spectrum.com)
[17:16:27] <stealth_> i figured pycode had a master plan to use those `get*` methods.
[17:16:41] <pycode> :)
[17:17:20] <stealth_> also in python you have to pass `self` and first argument for methods
[17:17:29] <stealth_> *as
[17:18:18] <stealth_> for "normal" methods
[17:18:39] <pycode> yes yes just wrote it quickly on bpaste
[17:19:48] *** Quits: p-i-_ (~Ohmu@223.206.150.107) (Remote host closed the connection)
[17:20:10] *** Quits: LuksNuke (~LuksNuke@2001:7e8:c066:6200:be85:8d95:5d9:f9da) (Remote host closed the connection)
[17:20:23] *** Joins: p-i- (~Ohmu@mx-ll-223.206.150-107.dynamic.3bb.co.th)
[17:21:48] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 256 seconds)
[17:22:35] *** Joins: lalitmee_ (~lalitmee@180.94.32.182)
[17:23:52] *** Joins: gggp (~textual@60.10.23.169)
[17:24:42] *** Quits: lalitmee__ (~lalitmee@180.94.33.231) (Ping timeout: 245 seconds)
[17:26:54] *** Quits: gggpkm (~gggpkm@111-251-124-128.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[17:27:15] *** Quits: Tempesta (Tempesta@user/tempesta) (Quit: See ya!)
[17:28:19] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[17:28:46] *** Quits: besnn (~besnn@user/besnn) (Read error: Connection reset by peer)
[17:29:29] *** Joins: resmo (~resmo@2a00:d420:9:8a00:ddfb:380e:653e:406)
[17:30:43] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[17:35:10] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[17:35:29] *** Joins: Tempesta (~Tempesta@user/tempesta)
[17:35:42] *** Quits: rsx (~dummy@ppp-188-174-141-18.dynamic.mnet-online.de) (Quit: rsx)
[17:36:00] *** Joins: zentropy (~zentropy@188.250.185.117)
[17:36:36] *** Joins: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net)
[17:37:28] *** Quits: oz4ga (~tim@93.90.4.233) (Ping timeout: 252 seconds)
[17:38:32] *** Joins: kostkon (~androirc@2a02:587:a104:dec2:88ea:4fb4:9441:6f3d)
[17:39:00] *** Joins: weird_error (~textual@ool-4579fedc.dyn.optonline.net)
[17:39:19] *** Quits: Santzes (~Santzes@2400:8901::f03c:92ff:fe49:47a6) (Quit: WeeChat 3.2)
[17:40:40] *** Quits: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[17:41:30] *** Quits: nomic2 (~nomic@185.192.69.188) (Quit: Leaving)
[17:42:51] *** Quits: gggp (~textual@60.10.23.169) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:43:50] *** Joins: oz4ga (~tim@93.90.4.233)
[17:45:10] *** Joins: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net)
[17:45:10] *** Quits: p-i- (~Ohmu@mx-ll-223.206.150-107.dynamic.3bb.co.th) (Read error: Connection reset by peer)
[17:45:19] *** Joins: kosh (~kosh@user/kosh)
[17:45:28] *** Joins: p-i- (~Ohmu@223.206.150.107)
[17:49:22] *** Joins: dasbootmir (~dasbootmi@user/dasbootmir)
[17:50:57] *** Quits: misterx (~8473@p57912297.dip0.t-ipconnect.de) (Quit: Lost terminal)
[17:50:59] *** Joins: Santzes (~Santzes@2400:8901::f03c:92ff:fe49:47a6)
[17:51:39] *** Joins: computeiro (~Wender@189.37.65.234)
[17:51:58] *** Joins: k162_ (k162@user/k162)
[17:53:29] *** Quits: wender (~Wender@189.41.10.188) (Ping timeout: 252 seconds)
[17:58:05] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[17:58:47] *** Joins: hendursaga (~weechat@user/hendursaga)
[18:01:21] *** Bato_ is now known as Bato
[18:02:46] *** Quits: pycode (~pycode@2001:b07:5d28:551:a9af:f71f:29c8:4fa4) (Ping timeout: 252 seconds)
[18:04:48] *** Joins: reset (~reset@user/reset)
[18:05:04] *** Joins: Slimgin (~quassel@2603:9001:207:a100:1420:805:ccaf:f8cd)
[18:07:01] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[18:08:02] *** Joins: Pickchea (~private@user/pickchea)
[18:08:07] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[18:09:11] *** Parts: lordrishav (~LordRisha@user/lordrishav) (WeeChat 2.8)
[18:09:52] *** Joins: PJBoy (~PJBoy@user/pjboy)
[18:13:43] <rud0lf> i want to move Pickle data between python2 and python3 (incompatible)... what format can i store loaded data in p2 to read and pickle in python3 ?
[18:13:43] *** Quits: zentropy (~zentropy@188.250.185.117) (Quit: Ex-Chat)
[18:14:18] <BtbN> Whatever works for your data really
[18:14:23] <BtbN> json, plain old CSV, ...
[18:15:03] *** Joins: nyah (~nyah@bcdcb6e3.skybroadband.com)
[18:15:48] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[18:15:55] <rud0lf> thank you
[18:16:45] *** Quits: Scarecr0w (scarecr0w@user/scarecr0w) (Remote host closed the connection)
[18:18:11] <gitesh> How does object in python resembles to object in real world?
[18:20:11] <ansimita> gitesh: Hope this helps https://en.wikipedia.org/wiki/Duck_typing
[18:22:39] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[18:23:00] <gitesh> Oh I liked you nick ansimita
[18:23:09] <gitesh> It sounds like my friend asmita
[18:23:53] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-3474-1442-9ff3-7009.res6.spectrum.com)
[18:24:57] *** Joins: shlomif (~shlomif@87.68.240.100.adsl.012.net.il)
[18:26:07] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[18:28:09] <gitesh> That is real duck
[18:28:32] *** Quits: timkofu (~timkofu@user/timkofu) (Quit: leaving)
[18:30:23] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[18:33:34] *** Quits: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[18:34:12] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[18:34:42] *** Joins: Dyresen (bjorn@128.39.36.51)
[18:35:11] *** Joins: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[18:36:37] *** Joins: Naan (~naan@user/naan)
[18:37:40] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[18:39:05] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[18:40:01] *** Joins: czuk_cza (~mist@188.147.96.18.nat.umts.dynamic.t-mobile.pl)
[18:42:09] *** Joins: Scarecr0w (scarecr0w@user/scarecr0w)
[18:42:14] *** Joins: Enitin (~Enitin@82.102.22.86)
[18:44:06] *** Joins: hudo (~hudo@62.68.27.70)
[18:44:36] *** Quits: Jefren (~Jefren@70.35.67.187) (Quit: WeeChat 3.2)
[18:45:55] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 250 seconds)
[18:46:57] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[18:47:56] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[18:48:27] *** Quits: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net) (Ping timeout: 245 seconds)
[18:49:22] *** Joins: thiras (~thiras@user/thiras)
[18:49:53] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:49:57] *** Joins: fikran (~fikran@user/fikran)
[18:50:32] *** Quits: Pandadub (~Barones@186.213.206.209) (Ping timeout: 245 seconds)
[18:50:47] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[18:51:23] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[18:53:25] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Remote host closed the connection)
[18:53:55] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 252 seconds)
[18:54:17] *** Joins: kostkon_ (~androirc@5-203-190-135.pat.nym.cosmote.net)
[18:54:28] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[18:55:38] *** Quits: kostkon (~androirc@2a02:587:a104:dec2:88ea:4fb4:9441:6f3d) (Ping timeout: 252 seconds)
[18:55:52] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[18:56:10] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[18:57:11] *** Joins: Enitin (~Enitin@82.102.22.86)
[18:57:54] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[18:58:03] *** Joins: akk (~akk@174-28-98-206.albq.qwest.net)
[18:58:12] <aphysically> morning ;)
[18:58:58] <aphysically> back to my problem from last night (how to store a database of API keys?)
[18:59:04] *** Joins: P1ro (~quassel@user/p1ro)
[19:00:53] <ChrisWarrick> aphysically: a database of API keys? what would be the problem with storing those the same way you’d store other data?
[19:01:20] <aphysically> an sqlite database inclusion check isn't resistant to a timing attack
[19:01:43] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Read error: Connection reset by peer)
[19:01:56] *** Joins: Duality (~pi@82-197-207-54.dsl.cambrium.nl)
[19:01:58] <Duality> hey
[19:02:03] <ChrisWarrick> aphysically: what do you mean?
[19:02:08] <Duality> i just installed something with pip without using sudo
[19:02:14] <Duality> does it automatically do --user now ?
[19:02:21] <Duality> pip install that is
[19:02:38] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[19:02:43] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[19:02:58] <aphysically> ChrisWarrick: let's say I have a really large number of API keys, and I have all their hashes I want to store, and I want to check if a user provided API key is valid
[19:03:09] <aphysically> I want to check if it's in the database
[19:03:45] <aphysically> if I have an sqlite3 database indexed by the api key hash (an API key normally has enough entropy that it doesn't *need* to have a slow key derivation function or a salt)
[19:03:51] <Duality> i guess it does
[19:03:58] <Duality> it shows up under HOME/.local
[19:04:01] <aphysically> I can check if the hash is in the database efficiently
[19:04:02] *** Joins: shad (~shad@user/shad)
[19:04:16] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[19:04:20] <aphysically> but the time to check if the hash is in the database will have short circuiting behavior in the b tree dependent on the content of the hash
[19:04:55] <aphysically> so to be cryptographically secure you need a way to check inclusion in the database that depends on the length of the key you're checking but not its contents
[19:05:30] <aphysically> stdlib has a way to do this for regular string comparisons, hmac.compare_digest, but if I loop through every key in the database and use hmac.compare_digest I don't have any benefits of using a database lookup
[19:05:48] <ChrisWarrick> aphysically: Perhaps you could introduce an artificial delay on the application side that makes the difference invisible?
[19:06:39] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[19:07:29] <aphysically> I thought about this, pulling off a thread and waiting a minimum amount of time before returning, but this is a bit of a hacky solution that doesn't solve the problem in general (for instance what if the database was being slow to respond that took longer than the delay?) Maybe not a real concern
[19:08:39] <aphysically> but I figure there surely must be a standard way to do this - if not in sqlite3, then surely there's some database out there that supports cryptographically secure lookups
[19:08:52] <aphysically> I can't be the only one that's stored api keys
[19:09:06] <aphysically> for user/password combos this isn't a problem because the database would be indexed by the username
[19:09:59] <ChrisWarrick> api key + api secret?
[19:10:36] <aphysically> another solution was just use a username, yeah (of some sort)
[19:10:57] <ChrisWarrick> and I guess many developers just don’t care about timing attacks with the API keys
[19:11:14] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Remote host closed the connection)
[19:12:07] *** Joins: airmailsteam (~airmailst@user/airmailsteam)
[19:12:45] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[19:13:51] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[19:13:57] *** Joins: y1n (~y1n@84-115-65-83.wifi.dynamic.surfer.at)
[19:14:04] <airmailsteam> Hey, so I have a 2d array (matrix) and it represents the values of intensity. How do I create a 3d/surface plot from this data? The indices of the matrix represent the x and y coordinates for the plot
[19:14:09] *** Joins: heco (~redrum@user/redrum88)
[19:14:16] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 252 seconds)
[19:14:41] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[19:15:17] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:15:37] <aphysically> ChrisWarrick: yeah maybe :\
[19:15:40] *** Quits: pacbard (~pacbard@user/pacbard) (Ping timeout: 240 seconds)
[19:15:42] <ChrisWarrick> airmailsteam: matplotlib can probably do that
[19:16:18] <aphysically> admittedly the concern is a bit academic since I'm not planning to store more than a handful of keys - but still, I wanted to do it correctly
[19:16:34] *** Joins: ano (~ano@user/ano)
[19:16:36] *** Joins: Jefren (~Jefren@70.35.67.187)
[19:16:37] <aphysically> (so it's not a problem for me to loop through them individually and hmac.compare_digest)
[19:16:39] <airmailsteam> ChrisWarrick: I am looking at the docs and q&a's online, but cant find anything relevant
[19:17:46] <ChrisWarrick> airmailsteam: you might need to build x, y, z arrays first, I’m not sure if matplotlib can deal with a single matrix by itself
[19:18:01] <aphysically> actually this might be a good opportunity for me to learn producer/consumer threading (produce a list of the keys, and a consumer to check the equalities in many threads), then you COULD use salts I guess since you're looping through it anyway
[19:18:38] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[19:18:51] <aphysically> but I digress, I'd still like to actually do this normally
[19:19:01] <ChrisWarrick> aphysically: spawning threads for equality checking sounds like a tremendous waste of resources
[19:19:24] <aphysically> well, it makes sense if you were using a key derivation function
[19:19:32] <greatgatsby> aphysically, can you use something like redis as a lookup cache?  I think it guarantees constant time lookups?
[19:19:33] <aphysically> (with a hash)
[19:19:50] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[19:19:56] <aphysically> (because it's slow and would need to be computed for every item in the database individually)
[19:20:02] <airmailsteam> ChrisWarrick: I am not sure I follow. I already have the arrays, I think. The z array is just the matrix and the x and y ones are the indices. Or am I missing something?
[19:20:28] <aphysically> greatgatsby: maybe, I don't know about redis so let's look :)
[19:21:01] <aphysically> key derivation with a salt I mean
[19:21:14] <ChrisWarrick> airmailsteam: z would need to be 1-dimensional
[19:22:02] *** Quits: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl) (Ping timeout: 252 seconds)
[19:22:47] <airmailsteam> ChrisWarrick: I see. I could reshape it, but the values of z are dependent on x and y.
[19:23:17] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[19:23:36] <ChrisWarrick> airmailsteam: yes, you’d need to build arrays of x's and z's to match (unless matplotlib somehow has a feature to do it for you)
[19:23:59] *** Quits: kostkon_ (~androirc@5-203-190-135.pat.nym.cosmote.net) (Read error: Connection reset by peer)
[19:24:07] *** Joins: kostkon_ (~androirc@2a02:587:a118:2650:88ea:4fb4:9441:6f3d)
[19:24:17] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[19:24:33] *** Joins: dba (uid502594@id-502594.stonehaven.irccloud.com)
[19:24:35] *** kostkon_ is now known as kostkon
[19:24:59] <ChrisWarrick> airmailsteam: perhaps start by getting the 3d plotting examples from matplotlib’s docs and getting familiar with the API and what you need to provide
[19:26:51] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[19:27:10] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[19:27:14] <airmailsteam> It seems mayavi has what I am looking for. I will read into its API docs
[19:28:27] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[19:28:27] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 245 seconds)
[19:29:02] *** Joins: Enitin (~Enitin@82.102.22.86)
[19:29:40] *** Quits: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[19:30:17] *** Quits: zegalch (~zegalch@178.128.75.133) (Remote host closed the connection)
[19:30:27] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[19:30:36] *** Joins: LuksNuke (~LuksNuke@2001:7e8:c066:6200:be85:8d95:5d9:f9da)
[19:30:51] *** Joins: zegalch (~zegalch@178.128.75.133)
[19:31:50] *** Joins: Gurkenglas (~Gurkengla@dslb-088-075-022-191.088.075.pools.vodafone-ip.de)
[19:33:07] *** Joins: rjwiii (~mr-rich@072-187-028-004.res.spectrum.com)
[19:34:30] *** Joins: shad (~shad@user/shad)
[19:37:22] <akk> The matplotlib docs on 3d plotting are pretty minimal, so I second ChrisWarrick's suggestion of starting from working examples.
[19:37:46] <akk> The docs don't give you enough information to know how to construct the input.
[19:39:45] <airmailsteam> Indeed the docs arent very useful. But turns out what I was looking for was the surf function from mayavi.mlab
[19:39:52] *** Joins: pro_z (~pro_z@37.214.56.59)
[19:40:27] *** Quits: kostkon (~androirc@2a02:587:a118:2650:88ea:4fb4:9441:6f3d) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[19:40:45] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-58c384-213.dhcp.inet.fi)
[19:40:48] *** Quits: goepsilongo (~chacho@2603-7000-ab00-62ed-0000-0000-0000-0bd0.res6.spectrum.com) (Quit: Konversation terminated!)
[19:40:50] <rud0lf> when i try to install "hmmlearn" with pip or cloned repo setup.py i get this SyntaxError: File "/tmp/easy_install-KHsau3/setuptools_scm-6.3.1/setup.py", line 22 ... f"{type(self).__name__} is forbidden, "
[19:40:58] <rud0lf> f-string in python2 install script?
[19:41:21] <rud0lf> where can i find the script source so i can correct it? setup.py creates new temp file every time
[19:41:22] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 245 seconds)
[19:41:36] *** Joins: Enitin (~Enitin@82.102.22.85)
[19:42:11] *** Quits: dasbootmir (~dasbootmi@user/dasbootmir) (Quit: dasbootmir)
[19:42:40] *** Joins: dasbootmir (~dasbootmi@user/dasbootmir)
[19:43:25] *** Quits: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte) (Ping timeout: 252 seconds)
[19:43:32] *** Quits: airmailsteam (~airmailst@user/airmailsteam) (Quit: Konversation terminated!)
[19:43:57] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[19:44:20] *** Joins: ano (~ano@user/ano)
[19:45:10] *** Joins: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net)
[19:45:12] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:45:31] *** Joins: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte)
[19:45:43] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[19:45:59] *** Joins: Skyfire (~pyon@user/pyon)
[19:46:10] *** Joins: shangxiao (~davids@124.187.193.187)
[19:47:06] *** Quits: LuksNuke (~LuksNuke@2001:7e8:c066:6200:be85:8d95:5d9:f9da) (Remote host closed the connection)
[19:48:30] *** Quits: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC) (Quit: WeeChat 3.2)
[19:49:04] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:49:05] *** Quits: Enitin (~Enitin@82.102.22.85) (Remote host closed the connection)
[19:49:32] *** Quits: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[19:50:35] *** Joins: Enitin (~Enitin@82.102.22.85)
[19:50:40] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[19:51:40] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:51:44] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 252 seconds)
[19:52:06] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[19:52:13] *** Joins: Notgnoshi (~nots@2001-48F8-8-40-E82-9D29-6179-2796-dynamic.midco.net)
[19:52:26] *** Joins: ano (~ano@user/ano)
[19:54:10] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 240 seconds)
[19:54:19] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[19:56:04] *** Quits: c10l (~c10l@89.34.167.207) (Ping timeout: 252 seconds)
[19:56:14] *** Joins: FluffyMask (~masque@user/fluffymask)
[19:57:16] *** Joins: c10l (~c10l@89.34.167.207)
[19:59:25] *** Joins: Pandadub (~Barones@186.213.206.209)
[19:59:26] *** Quits: y1n (~y1n@84-115-65-83.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[20:00:40] *** Joins: p-i-_ (~Ohmu@223.206.150.107)
[20:01:31] *** Joins: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net)
[20:01:56] <rendar> i run my coroutine with asyncio.create_task() without awaiting it: how can i capture exceptions?
[20:03:46] *** Quits: p-i- (~Ohmu@223.206.150.107) (Ping timeout: 252 seconds)
[20:06:02] *** Quits: shad (~shad@user/shad) (Ping timeout: 252 seconds)
[20:10:45] <bjs> rendar: you can't, that's one reason *why* you should await it
[20:11:19] <rendar> bjs, but if i await each task, i can't run multiple commands at once! with the prompt...
[20:11:22] *** Joins: Betal (~Betal@user/betal)
[20:11:41] <bjs> rendar: why can't you have another task that cleans up the old tasks awaiting them or something?
[20:11:58] *** Joins: cow0w (~user@user/cow0w)
[20:12:01] *** Quits: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[20:12:14] <rendar> bjs, how would that help? i mean, i have to await that other task!
[20:12:31] <bjs> rendar: `await asyncio.gather(dispatcher(),  cleanup_old())`
[20:13:45] <rendar> bjs, uhm, wait, what you mean with dispatcher() and cleanup_old() ? the former dispatches commands with create_task() and add the resulting Task object into a list, and cleanup_old() traverses that list of Task objects?
[20:14:48] <cow0w> Hi, in pandas, I have a dataframe with start-end time columns which represents events, in another dataframe I've got a stream of data with start time, how can I merge these two dataframes that for every stream data row, I'll get the event columns? the start in the stream data has to fall within the start-end time. merge_asof seems kind of close, but it's only looking at one key (either start/end time)
[20:15:49] *** Joins: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[20:18:03] <bjs> rendar: for example yeah
[20:18:33] <bjs> rendar: I'd probably make a set of things (because the order they will finish is undefinde),  and use something like asyncio.wait so you wait for 1 to finish then loop round and wait for the next
[20:19:10] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 256 seconds)
[20:19:10] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[20:19:13] <jim> are there plans to do a rust python?
[20:19:49] <jinsun> there is a RustPython https://github.com/RustPython/RustPython
[20:21:32] <jim> any binaries available for linux?
[20:21:46] *** Joins: white_shadow (~white_sha@user/white-shadow/x-1132694)
[20:22:00] *** Joins: white_pie (~white_sha@user/white-shadow/x-1132694)
[20:22:01] <jim> jinsun, anyway, thanks for responding
[20:22:08] *** Quits: white_pie (~white_sha@user/white-shadow/x-1132694) (Client Quit)
[20:23:14] *** Joins: retrosenator (~retrosena@253.sub-174-246-238.myvzw.com)
[20:23:47] <jinsun> you can cargo intall or conda install apparently,  I haven't tried it
[20:23:48] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[20:24:42] *** Joins: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net)
[20:25:27] *** Joins: newpy (~newpy@206.168.231.90)
[20:26:03] *** Joins: Enitin (~Enitin@82.102.22.85)
[20:27:28] *** Joins: ColonelJ (~ColonelJ@user/colonelj)
[20:28:45] *** Joins: rapier (~marcos@170.233.159.1)
[20:28:52] *** Quits: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net) (Ping timeout: 245 seconds)
[20:29:00] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[20:30:04] *** Joins: junktext (~junktext@109.201.152.161)
[20:30:28] <ChrisWarrick> rud0lf: hmmlearn seems to be python 3.5+, although its dependency setuptools_scm seems to be installing in a 3.6+-compatible version
[20:30:30] <rapier> how can I find out progID of app?
[20:31:48] *** Joins: node1 (~Guest30@user/node1)
[20:31:52] <node1> Hi
[20:32:05] <node1> Does anyone used boto3 in Python?
[20:32:20] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Read error: Connection reset by peer)
[20:34:13] <rud0lf> i see, thanks
[20:34:32] <node1> Is it possible to access s3 bucket  without `access key` using boto3 python. which is hosted publically ?
[20:34:47] *** Quits: ericam (~ericam@pool-98-113-135-30.nycmny.fios.verizon.net) (Quit: WeeChat 3.2)
[20:35:10] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[20:35:12] <ColonelJ> can anyone recommend some learning materials to get up to speed with Python quickly (in a day?), including type annotations and async/await? I'm an experienced programmer and I've mostly been using TypeScript with node.js lately if that info is any use...
[20:35:57] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 245 seconds)
[20:36:41] <stealth_> ColonelJ, https://www.pythonsheets.com/
[20:37:26] <bjs> rendar: here's a really dumb example that just collects them in the background and prints any exceptions that happen https://bpa.st/FLNA
[20:38:00] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:38:33] <node1> Do aws s3 bucket policy allow end user to access programmatically a  bucket(which is hosted publically) without the access key?
[20:38:43] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[20:40:25] *** Quits: ChrisWarrick (kwpolska@user/kwpolska) (Quit: Rebooting!)
[20:40:38] *** Joins: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net)
[20:41:02] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[20:41:22] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[20:42:13] *** Quits: jrjsmrtn (~jrjsmrtn@ip-83-134-174-201.dsl.scarlet.be) (Quit: ZNC 1.8.2 - https://znc.in)
[20:42:45] *** Joins: ChrisWarrick (kwpolska@user/kwpolska)
[20:43:52] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[20:44:13] *** Joins: jrjsmrtn (~jrjsmrtn@ip-83-134-174-201.dsl.scarlet.be)
[20:44:28] *** Quits: c10l (~c10l@89.34.167.207) (Ping timeout: 252 seconds)
[20:44:56] *** Joins: henbruas (~henbruas@ti0003a400-3211.bb.online.no)
[20:45:05] *** Quits: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[20:47:55] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[20:48:10] *** Quits: retrosenator (~retrosena@253.sub-174-246-238.myvzw.com) (Ping timeout: 240 seconds)
[20:48:39] *** Quits: node1 (~Guest30@user/node1) (Quit: Client closed)
[20:50:32] *** Joins: nomic (~nomic@185.192.69.188)
[20:52:28] *** Joins: loki_val (~crabbedha@user/crabbedhaloablut)
[20:52:39] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Ping timeout: 276 seconds)
[20:53:35] *** Joins: retrosenator (~retrosena@30.sub-174-210-75.myvzw.com)
[20:54:09] <ColonelJ> stealth_: thanks, looks useful and covers both things.  I guess though it lacks explanations, so need to refer to docs a lot to understand perhaps
[20:55:10] <stealth_> ColonelJ, sure
[20:56:48] *** Joins: click (~hack@user/realhack)
[20:57:12] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[20:57:18] *** Joins: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net)
[20:57:33] *** Joins: c10l (~c10l@89.34.167.207)
[20:58:13] *** Quits: jl (~kk@user/jl) (Ping timeout: 252 seconds)
[20:58:16] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[20:58:29] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[20:59:18] *** Joins: fikran (~fikran@user/fikran)
[20:59:53] *** Joins: jl (~kk@user/jl)
[21:00:51] *** Quits: Pandadub (~Barones@186.213.206.209) (Quit: Leaving)
[21:07:10] *** Quits: Mikaela (~sid12355@Feneas/Mikaela) (Remote host closed the connection)
[21:07:42] *** Quits: Smedles (~quassel@61-245-148-167.3df594.adl.nbn.aussiebb.net) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[21:07:53] *** Joins: Mikaela (~sid12355@Feneas/Mikaela)
[21:08:15] *** Joins: Auron (~Auron956@user/auron)
[21:08:16] *** Joins: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[21:08:25] <ColonelJ> looking at https://www.pythonsheets.com/notes/python-code-style.html it suggests to use _ as throwaway variable, but if I use that it breaks the normal function of _, so I can't see how this good
[21:09:01] <Peng> What's the normal function of _?
[21:09:12] *** Quits: Enitin (~Enitin@82.102.22.85) (Read error: Connection reset by peer)
[21:09:21] <ColonelJ> in the REPL it gives the output of the last command?
[21:09:26] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[21:10:12] <Peng> I did not know that!
[21:10:21] *** Joins: Enitin (~Enitin@82.102.22.85)
[21:10:27] <Peng> Wait, did I?
[21:11:07] <Peng> Yes, I did. In any case, that doesn't happen outside the REPL.
[21:11:58] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 252 seconds)
[21:12:18] <ColonelJ> yes, it says _ is not defined, so maybe it's ok in code to use it
[21:12:42] *** Quits: n00b101 (uid448161@id-448161.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[21:13:36] <stealth_> ColonelJ, `_` will be replaced and shouldn't use it as a variable. Its normally used in cases like `for _ in range(5): print('hello')` where you don't care what `_` is.
[21:14:49] <rendar> bjs,  i see
[21:15:00] <rendar> bjs, why do you use a set() instead of an asyncio.Queue ?
[21:15:14] <rendar> oh sorry, because you traverse it
[21:15:17] <bjs> rendar: like i said,  the order that things actually finish in is not the same as the order you schedule them (maybe)
[21:15:21] *** Joins: sfields (~sfields@2603-8090-1605-d7f3-a5f3-370f-2c5a-80de.res6.spectrum.com)
[21:15:25] <rendar> yeah
[21:16:30] <rapier> no help, but got it
[21:16:38] <rapier> o yeah
[21:17:04] <rapier> but i don't know how to find out about progIDs
[21:21:17] *** Quits: ColonelJ (~ColonelJ@user/colonelj) (Quit: leaving)
[21:21:20] <stealth_> rapier, what is progIDs?
[21:21:21] *** Quits: dasbootmir (~dasbootmi@user/dasbootmir) (Quit: gone to sleep... zzz…)
[21:21:49] *** Joins: ColonelJ (~ColonelJ@user/colonelj)
[21:22:54] <rapier> excel has excel.application as progid
[21:23:08] <rapier> i meant microsoft excel
[21:23:27] <rapier> i was looking for progid of kingsoft spreadsheet
[21:23:36] <rapier> i was looking for chinese websites
[21:23:59] <rapier> until I discovered that id of kingoffice is KET.application
[21:24:10] <rendar> bjs, now my problem is, if i have such a library to print tracebacks: https://rich.readthedocs.io/en/stable/traceback.html#printing-tracebacks --- how can i do this, if your method give me an exception *object* and not an active traceback?
[21:24:22] <bjs> rendar: the exception objects have a traceback on them
[21:24:29] <rapier> i need to use make an automation with Component Object Model
[21:24:44] <rapier> needed*
[21:25:03] <rendar> bjs, yes but if you open that link, you'll see that library doesn't get a traceback .. it seems it takes the *active* traceback, or whatever it's called...
[21:25:07] *** Quits: white_shadow (~white_sha@user/white-shadow/x-1132694) (Ping timeout: 245 seconds)
[21:25:37] <stealth_> rapier, is this python related? not sure what you are trying to do
[21:26:34] <rapier> i'm trying to export a sheet from spreadsheet as image
[21:26:53] *** Quits: hudo (~hudo@62.68.27.70) (Ping timeout: 252 seconds)
[21:27:10] <rapier> but i couldn't use excel2img, because it only works for microsoft excel
[21:27:26] <rapier> i don't have microsoft excel, i have another spreadsheet app
[21:27:42] <rapier> i was looking a way to do that on this new spreadsheet app
[21:27:48] <bjs> rendar: well if it doesn't have a function that lets you pass the exception in manually you can always just `try: raise f.exception() except: console.whatever()`
[21:28:28] <rendar> bjs, hmm, raise WhateverExceptionObject re-raise that exception like it's running in that moment?
[21:28:54] <bjs> rendar: well im not sure what "like it's running at the moment" means, but yes, it will raise it again
[21:28:56] <rendar> i thought once you instanced one exception you could raise it only once
[21:29:01] <rendar> ok
[21:29:03] *** Quits: OverCoder (~OverCoder@user/overcoder) (Remote host closed the connection)
[21:30:10] *** Quits: wolfgang (~wolfgang@101.174.6.197) (Remote host closed the connection)
[21:30:39] *** Quits: Leliana (is@2a02:2658:1133:0:dead:babe:0:1) (Quit: brb, sex)
[21:30:59] *** Joins: Leliana (is@the.one.and.only.revthefox.co.uk)
[21:31:06] <stealth_> rapier, use another tool! there are lots of them out there
[21:31:38] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[21:32:03] <rapier> hahahaha... you have no idea how i search for a tool to solve this... there is no solution for non excel sheets
[21:32:56] *** Joins: thiras (~thiras@user/thiras)
[21:34:04] <stealth_> rapier, ok! if you have any specific python question, you can paste your code https://bpa.st/+python and ask it that way.
[21:34:28] <rapier> ok
[21:34:30] <rapier> thank you
[21:35:30] *** Quits: CrypticSquared (~CrypticS_@user/crypticsquared) (Quit: Leaving...)
[21:35:37] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 252 seconds)
[21:35:49] *** Joins: CrypticSquared (~CrypticS_@user/crypticsquared)
[21:37:28] <rendar> if i have ZeroDivisionError exception, how can i get 'ZeroDivisionError' string instead of this other string: "<class 'ZeroDivisionError'>" ?
[21:38:26] *** Joins: dffd (~dffd@178.49.152.151)
[21:38:40] <dffd> what could I use to read a huffman tree from a file with python?
[21:38:50] <stealth_> rendar, `obj.__class__.__name__`
[21:39:02] <rendar> stealth_, oh right, thanks
[21:39:42] *** Joins: white_shadow (~white_sha@user/white-shadow/x-1132694)
[21:41:15] *** Joins: HiccupJul_ (~HiccupJul@cpc122682-reig6-2-0-cust39.6-3.cable.virginm.net)
[21:42:50] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 252 seconds)
[21:43:44] *** Joins: Enitin (~Enitin@82.102.22.84)
[21:45:27] *** Quits: hendry (~hendry@210.23.22.2) (Ping timeout: 245 seconds)
[21:46:10] <ColonelJ> why would you write this? (i.e. why the `_ =`?): _ = await r.read(1024)
[21:47:14] *** Quits: white_shadow (~white_sha@user/white-shadow/x-1132694) (Quit: Leaving)
[21:47:14] *** Joins: hudo (~hudo@62.68.27.70)
[21:47:20] <stealth_> ColonelJ, normally you wouldn't
[21:47:38] <greatgatsby> ColonelJ, _ is often indicates the data is not going to be used, although I'm not sure it's necessary in this case
[21:47:41] *** Joins: hendry (~hendry@210.23.22.2)
[21:47:58] <HiccupJul_> i'm iterating through a directory using pathlib's iterdir, which returns a generator object. is there a way to "trigger" something when it tries to iterate through an empty directory (i.e. interate through a a generator that doesn't generate anything)?
[21:47:59] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[21:48:07] <greatgatsby> why not just `await r.read(1024)`  ?  Would that not work?
[21:48:27] *** Quits: lalitmee_ (~lalitmee@180.94.32.182) (Ping timeout: 245 seconds)
[21:49:23] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[21:50:33] <HiccupJul_> here is my current code:
[21:50:33] <HiccupJul_> https://bpa.st/XA2Q
[21:51:04] <HiccupJul_> but it seems like it might be inefficient to use `if any(iterdir_object)`
[21:51:53] <HiccupJul_> i'm thinking maybe there is something i can put within the for loop?
[21:52:38] <HiccupJul_> currently, it seems like it is checking the generator (iterdir_object) twice - once for `any()`, a second time for the for loop
[21:53:15] <stealth_> HiccupJul_, directory is never empty though! it has at least '.'
[21:53:34] <HiccupJul_> i think iterdir ignores those
[21:53:40] <InPhase> HiccupJul_: I'm not sure what you're using there.  Is the bool cast giving true if it's a dir or a file?
[21:53:40] <HiccupJul_> for my purposes i want to ignore them too
[21:54:35] <InPhase> I would hope it ignores '.', otherwise you'll infinitely recurse.  :)
[21:54:42] <stealth_> HiccupJul_, why do you need a `if` statement? the `for` loop will only iterate if there is anything or else `for` isn't run
[21:54:56] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 252 seconds)
[21:55:09] <HiccupJul_> the if statement is so i can have the "else"
[21:55:25] <HiccupJul_> because i want to print info on the directory if it is empty
[21:55:33] <HiccupJul_> and if it is not empty, i want the recursion to continue
[21:55:36] <cow0w> Hi, in pandas, I have a dataframe with start-end time columns which represents events, in another dataframe I've got a stream of data with start time, how can I merge these two dataframes that for every stream data row, I'll get the event columns? the start in the stream data has to fall within the start-end time. merge_asof seems kind of close, but it's only looking at one key (either start/end time)
[21:55:44] <InPhase> HiccupJul_: Can you get a count?
[21:55:47] <HiccupJul_> i was using glob, but that ignore empty directories
[21:56:07] *** Joins: Achylles (~Achylles_@2804:431:d724:131a:afba:e8f4:a787:4346)
[21:56:10] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[21:56:13] <InPhase> HiccupJul_: And is this pathlib?  The example is incomplete.
[21:56:21] <HiccupJul_> good idea, i can put a count in the for loop, and if that's 0 at the end, then i can determine the dir is empty
[21:56:43] <HiccupJul_> yeah its pathlib. i'll post the full script
[21:56:51] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[21:56:54] <HiccupJul_> https://bpa.st/T2MQ
[21:57:31] *** Quits: Achylles (~Achylles_@2804:431:d724:131a:afba:e8f4:a787:4346) (Read error: Connection reset by peer)
[21:58:39] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[21:58:54] <InPhase> HiccupJul_: Is there any pathlib Path that casts to False?
[21:58:55] <yitz> dir_contents = list(...);  if dir_contents:  for entry: do_stuff()    ; else: print("empty")
[21:59:01] *** Joins: Achylles (~Achylles_@2804:431:d724:131a:afba:e8f4:a787:4346)
[21:59:02] *** Quits: casastorta (~casastort@dc4.krivokuca.net) (Quit: ZNC 1.8.2 - https://znc.in)
[21:59:04] *** Joins: Enitin (~Enitin@82.102.22.84)
[21:59:41] *** Joins: casastorta (~casastort@dc4.krivokuca.net)
[22:01:44] <HiccupJul_> i don't fully understand the question, but i don't think path objects ever return False (or True)
[22:02:29] <HiccupJul_> some properties of a path may return False or True, however
[22:03:25] <HiccupJul_> `if dir_contents` i guess is the same sort of thing as `if any(iterdir_object)` in my code
[22:03:40] *** Quits: khrbt (~znc@user/khrbt) (Ping timeout: 252 seconds)
[22:03:44] *** Quits: czuk_cza (~mist@188.147.96.18.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 252 seconds)
[22:04:06] <stealth_> HiccupJul_, `sha1 = hashes.get('sha1')` you don't need the `try` block, `.get()` default value is `None`
[22:04:19] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[22:04:43] *** Quits: willcl_ark (~quassel@user/willcl-ark/x-8282106) (Ping timeout: 252 seconds)
[22:04:54] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Read error: Connection reset by peer)
[22:04:55] *** Joins: jdmark (~jdmark@67.8.137.130)
[22:05:46] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[22:05:55] *** Joins: Payam (~Payam@c188-150-219-9.bredband.tele2.se)
[22:05:56] <stealth_> HiccupJul_, o, u actually pass `hashes` something other then dict
[22:07:48] <HiccupJul_> yeah get_file_hashes is given a path, and it returns a dict with the four hashes for the file referenced by that path
[22:07:52] *** Joins: cyphase (~cyphase@user/cyphase)
[22:07:59] <HiccupJul_> `get_file_hashes(path)`
[22:08:28] <InPhase> HiccupJul_: It appears there is a massive deficit in pathlib of it not providing the number of files in a directory, so iteration is the way to get at them.  Therefore your any approach is actually the most efficient way to check if it's empty, because any short circuits at the first true.  What you've done is ugly and confusing, but, I think it's also a decent way to do it given what pathlib gives you to
[22:08:30] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Read error: Connection reset by peer)
[22:08:34] <InPhase> work with.  It will never iterate past the first directory element while executing the any.
[22:09:37] *** Quits: dffd (~dffd@178.49.152.151) (Ping timeout: 256 seconds)
[22:09:39] *** Joins: dffd99 (~dffd@178.49.152.151)
[22:09:51] <HiccupJul_> i guess that makes sense
[22:10:18] <HiccupJul_> although i'm thinking, is there not a way to "catch" the generator failing to generate?
[22:10:42] <InPhase> HiccupJul_: The way to handle what you've done is to put an explanatory comment, because it's not quickly clear what the intention of that line is.
[22:11:53] *** Quits: jancoow (~jancoow@user/jancoow) (Ping timeout: 248 seconds)
[22:12:05] <aphysically> what would be best practice for a multiline sqlite query - define it with """ ?
[22:12:16] <aphysically> asking about the formatting style
[22:12:42] *** Parts: akk (~akk@174-28-98-206.albq.qwest.net) (+++)
[22:12:48] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[22:13:16] *** Joins: ubert (~Thunderbi@91.141.67.114.wireless.dyn.drei.com)
[22:14:37] *** Joins: zln (~zln@c80-217-230-193.bredband.tele2.se)
[22:15:03] <stealth_> aphysically, https://docs.python.org/3/library/sqlite3.html#sqlite3.Cursor.executescript ?
[22:15:27] <aphysically> yeah """ then I guess
[22:16:05] *** Joins: defjam (~eb0t@90.194.35.110)
[22:16:19] <HiccupJul_> added a comment https://bpa.st/NX2A
[22:16:39] *** Quits: Achylles (~Achylles_@2804:431:d724:131a:afba:e8f4:a787:4346) (Read error: Connection reset by peer)
[22:16:57] *** Joins: Achylles (~Achylles_@2804:431:d724:131a:afba:e8f4:a787:4346)
[22:17:01] <HiccupJul_> but from my point of view, it seems wasteful for `any()` to check the generator, find it *does* have return something, then run a for loop.
[22:17:32] <HiccupJul_> seems like the generator is being "iterated" twice - once by `any()`, a second time by `for`
[22:18:02] *** Joins: khrbt (~znc@user/khrbt)
[22:19:51] <bjs> HiccupJul_: I'd assume by the comment that it's a dirty hack to check if the dir is empty
[22:20:01] <bjs> ah
[22:20:05] <HiccupJul_> yeah
[22:20:17] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[22:20:23] <HiccupJul_> this seems to be the only way with pathlib to find an empty path
[22:20:31] <HiccupJul_> *empty dir
[22:20:40] <bjs> HiccupJul_: to be honest I'm not sure it's really that wasteful,  as it presumably isn't going to iterate the entire generator
[22:21:06] <bjs> if it actually works that is
[22:21:07] *** Quits: weird_error (~textual@ool-4579fedc.dyn.optonline.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:21:09] *** Joins: iomari891 (~iomari891@105.112.138.38)
[22:21:14] <HiccupJul_> that's true, its not a big waste since it will quickly find that it is "empty"
[22:21:17] <HiccupJul_> it does seem to work
[22:21:30] <HiccupJul_> example output:
[22:21:53] <HiccupJul_> https://bpa.st/IKPQ
[22:22:18] *** Joins: Pickchea (~private@user/pickchea)
[22:22:38] *** Joins: bn_work (uid268505@id-268505.highgate.irccloud.com)
[22:22:47] <HiccupJul_> empty directory is represented in this xml format as a "rom" (file) with no hash or size values. again, a hack.
[22:22:54] <HiccupJul_> but that's off-topic
[22:22:57] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:b8f0:9547:597:852a)
[22:23:43] <Ennea> i have a question regarding best practices with member variables of class instances. if i create a class Foo, with a member variable bar, and then set member variable baz on an instance of Foo to some value; python will have no issue with that, generally speaking. running pyright on it, though, it reports "cannot assign member 'baz' for type 'Foo'". what would be the best way to avoid this if i don't have control over the class?
[22:23:48] *** Quits: sfields (~sfields@2603-8090-1605-d7f3-a5f3-370f-2c5a-80de.res6.spectrum.com) (Quit: Leaving)
[22:25:29] <varaindemian> https://www.irccloud.com/pastebin/pNuMV8kA/msword.py
[22:25:34] *** Quits: Cyberg33k (~Cybergeek@80.161.188.186) (Quit: This computer has gone to sleep)
[22:25:45] <varaindemian> trying to make sens out of this scrip: ^
[22:26:02] <Ennea> for some more background/my use case: i'm using tkinter and setting an image on a label. i'm also storing a reference to that image in a member variable that does not otherwise exist on the label class, because if i don't, it gets garbage collected
[22:26:17] <varaindemian> and  I get this error https://www.irccloud.com/pastebin/bNGK08kj/error.py
[22:27:13] <varaindemian> basically: TypeError: string argument expected, got 'bytes'
[22:27:43] <HiccupJul_> first thought is that it might be a python2 script and you are running it in python3
[22:28:10] <HiccupJul_> or maybe vice versa
[22:28:17] *** Quits: defjam (~eb0t@90.194.35.110) (Quit: WeeChat 2.3)
[22:29:24] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Remote host closed the connection)
[22:29:39] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[22:30:47] *** Quits: Sheilong (uid293653@id-293653.charlton.irccloud.com) ()
[22:31:06] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[22:31:10] *** Quits: ubert (~Thunderbi@91.141.67.114.wireless.dyn.drei.com) (Ping timeout: 252 seconds)
[22:31:11] <varaindemian> it's not
[22:31:24] *** Joins: ano (~ano@user/ano)
[22:31:49] <varaindemian> it's python3
[22:32:00] <dffd99> "file is not a zip file"
[22:32:06] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[22:32:22] *** Quits: shlomif (~shlomif@87.68.240.100.adsl.012.net.il) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[22:33:25] <varaindemian> dffd99: yeah but then `Exception ignored in: <function ZipFile.__del__ at 0x7f1c009984c0>`
[22:33:32] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Remote host closed the connection)
[22:34:51] *** Joins: pycode (~pycode@2001:b07:5d28:551:8c87:ed88:9b04:3500)
[22:35:53] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[22:36:19] <dffd99> also, why do you open DOCX in text mode?
[22:37:37] <bjs> varaindemian: okay?  but what about the "Is not a zip file" part
[22:38:08] <bjs> that seems like the more important error
[22:38:20] <varaindemian> dffd99: not sure about that part
[22:38:40] <varaindemian> bjs: thoght they are related and ti got ignored
[22:39:05] <HiccupJul_> doc and docx are both binary files, so opening them as text will give undesirable results
[22:39:06] <bjs> varaindemian: no you've misread, the bytes nor str is the one that was ignored
[22:39:13] *** Joins: willcl_ark (~quassel@user/willcl-ark/x-8282106)
[22:39:14] <bjs> HiccupJul_: where/who is opening as text
[22:39:38] <dffd99> lines 27-30
[22:40:23] <bjs> varaindemian: the problem seems to be more that you're just making a ZipFile wrong: https://docs.python.org/3/library/zipfile.html#zipfile.ZipFile
[22:40:37] *** Joins: defjam (~eb0t@90.194.35.110)
[22:40:44] <bjs> varaindemian: it says "Open a ZIP file, where file can be a path to a file (a string), a file-like object or a path-like object." but your input_buf doesn't appear to be any of those things?
[22:41:18] <bjs> varaindemian: maybe you wanted to `with ZipFile(template, "r") as doc: ...`
[22:41:52] *** Quits: philipp64|work (~philipp64@174.27.28.163) (Quit: philipp64|work)
[22:42:15] <dffd99> stringio is a file-like object, n'est ce pas?
[22:43:35] *** Quits: nrg (~NRG@user/nrg) (Quit: ZNC - https://znc.in)
[22:44:43] *** Joins: nrg (~NRG@user/nrg)
[22:45:09] <Ennea> have you tried using a BytesIO instead?
[22:46:21] <stewie925> hi guys, I got a partial solution for the codility test https://imgur.com/a/3OHsm8W   but I couldn't figure out the last one (all b's). here is my code: https://bpa.st/62GA
[22:47:41] <dffd99> also, why "ZipFIle.filelist" is undocumented?
[22:49:27] <varaindemian> bjs: this is where I took it from and tried to adapt it: https://github.com/thinkst/canarytokens/blob/master/msword.py
[22:49:32] <stealth_> stewie925, have you looked at https://docs.python.org/3/library/itertools.html there are stuff already written
[22:50:11] *** Quits: HiccupJul_ (~HiccupJul@cpc122682-reig6-2-0-cust39.6-3.cable.virginm.net) (Quit: thanks for the help)
[22:50:46] *** Quits: acresearch (~acresearc@user/acresearch) (Quit: WeeChat 2.8)
[22:51:15] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:51:16] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Read error: Connection reset by peer)
[22:51:31] <stewie925> hmmm
[22:51:45] *** LSD is now known as acidsys
[22:51:53] <ColonelJ> stewie925: it says you have to efficiently produce the **number** of possible ways to split the strings, you shouldn't be actualy generating all the strings :)
[22:52:06] <stealth_> stewie925, o, its a school assignment or something?
[22:52:10] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[22:53:09] <stewie925> ColonelJ:  bingo!  Exactly I'd like to hear what is the efficient way  :)     stealth_:  it was a task given by  the recruiter.... I couldn't finish it in an hour :(
[22:53:49] <varaindemian> bjs: got the same output when I changed it to `WORD_TEMPLATE`
[22:54:03] <varaindemian> bjs: `    with open(WORD_TEMPLATE, 'r') as f:`
[22:54:30] <ColonelJ> stewie925: you'd probably find this useful https://en.wikipedia.org/wiki/Stars_and_bars_(combinatorics)
[22:54:32] <stewie925> ColonelJ:  and the example 4 threw me away
[22:54:46] *** Quits: defjam (~eb0t@90.194.35.110) (Quit: WeeChat 2.3)
[22:55:10] <ColonelJ> stewie925: yeah I think the example 4 is the special case where you need combinatorics, the other cases are trivial because all the splits go at independent positions
[22:55:18] <bjs> varaindemian: that wasn't my suggestion
[22:55:52] <stewie925> threw me off I mean
[22:56:09] <dffd99> it looks like a python2 script
[22:56:26] *** Joins: defjam (~eb0t@90.194.35.110)
[22:56:31] <pycode> hello everybody, is better to create a method (setter) or inject a value in an attribute? https://bpa.st/5D7Q
[22:56:47] <pycode> strategy.set_broker(self.broker) or strategy.broker = self.broker ?
[22:56:49] <stealth_> stewie925, you should have told them you will solve it after they hire you!
[22:56:54] <pycode> i think set_broker() is more explicit
[22:56:57] <bjs> varaindemian: I mean zipfile thinks it's not a zipfile, probably because you're using a StringIO and doing something weird.  You can just give the path to zipfile directly and it'll open it
[22:56:58] *** comruminoAlt is now known as comrumino
[22:57:55] <stewie925> stealth_: LOL - but I was super depressed I couldn't finish it but I went ahead and tried to finish it on my own.... I understand python structure but these algorithm tests make me feel really stupid :(
[22:57:58] *** Joins: wolfgang (~wolfgang@101.174.6.197)
[22:59:04] <stealth_> stewie925, no, they are stupid for asking that for a job interview, its a waste of time, anyone can solve it if they spend enough time on it.
[22:59:54] <varaindemian> bjs: if you look at my code `WORD_TEMPLATE` has the path to my zipfile: `WORD_TEMPLATE="/home/oct/Desktop/demo.docx"`
[23:00:01] <stealth_> stewie925, just be glad you are not working for them.
[23:00:02] <bjs> varaindemian: yes...
[23:01:10] <dffd99> varaindemian: replace 'r' with 'rb' everywhere, and 'StringIO' with 'BytesIO'
[23:01:45] <stewie925> stealth_: thank you for the comforting words...  been out of the work force for a year and eager to get back in
[23:02:51] <bjs> varaindemian: zipfile.ZipFile can take a file path,  just forget the open() and the StringIO stuff and just give zipfile the path
[23:03:30] *** Quits: pycode (~pycode@2001:b07:5d28:551:8c87:ed88:9b04:3500) (Ping timeout: 256 seconds)
[23:04:08] <stealth_> stewie925, i hear you
[23:04:09] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[23:04:22] <theprophet> guys is it possible to make this code even shorter? https://pastebin.com/wihYT06J
[23:04:40] <az> still unable to figure out how to use "with statement with class and methods" should I put it in every method? couldn't find an example on that
[23:04:51] *** Quits: k162 (k162@user/k162) (Remote host closed the connection)
[23:04:55] <bjs> az: put what in every method?
[23:05:08] <az> bjs, with statement
[23:05:14] *** Joins: k162 (k162@user/k162)
[23:05:18] <bjs> az: but with what?  `with <what here?>: ...`
[23:05:50] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[23:06:02] <az> same as the one I showed  you earlier. https://gitlab.com/uak/bchd-grpc-python-lib/-/blob/main/bchd_gprc_lib.py
[23:06:11] <az> to open gprc connection channel
[23:06:14] <theprophet> somebody?
[23:06:22] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[23:06:31] <bjs> theprophet: is it possible? probably yes
[23:06:46] <theprophet> bjs did you see the code?
[23:06:49] <bjs> theprophet: yes
[23:07:05] <theprophet> @bjs can you make it shorter?
[23:07:16] <bjs> theprophet: can I make a shorter program that prints the same things out? of course
[23:07:20] <az> I will remove the if __name__  == __main__ section as I figured out it only executed if the file was directly executed, not imported
[23:07:56] *** Joins: ubert (~Thunderbi@91.141.67.114.wireless.dyn.drei.com)
[23:08:00] <bjs> az: do what I did in my example, just put the `with ...` stuff inside a main() function somewhere or you can put it inside the code that imports this file
[23:08:05] *** Joins: duidvd (~axe@178.238.173.195)
[23:08:19] <theprophet> @js it does not print same thing
[23:08:27] <bjs> theprophet: what does not?
[23:08:38] *** Joins: fikran (~fikran@user/fikran)
[23:08:44] <theprophet> @bjs code i linked
[23:08:51] <bjs> theprophet: the same as what?  I'm confused
[23:09:03] <az> bjs, didn't notice your example. could you please resend it
[23:09:23] <bjs> az: https://bpa.st/N4PA
[23:09:35] <theprophet> @bjs you said "can I make a shorter program that prints the same things out? of course"
[23:09:45] <bjs> theprophet: yes
[23:09:55] <theprophet> @bjs so you saw my code?
[23:09:59] <bjs> theprophet: yes
[23:10:12] <bjs> theprophet: I'm not sure what you're getting at here,  or what you're really asking for
[23:10:16] <theprophet> @bjs why would you say "can I make a shorter program that prints the same things out? of course" when my code does not print same thing.
[23:10:22] <varaindemian> dffd99: `ValueError: ZipFile requires mode 'r', 'w', 'x', or 'a'`
[23:10:29] <az> bjs, thanks
[23:10:30] <bjs> theprophet: how can it not print the same thing as the code i make that prints the same thing
[23:10:51] <dffd99> varaindemian then don't replace it there?
[23:11:14] <theprophet> @bjs  https://pastebin.com/wihYT06J my question is can you make this code even shorter ?
[23:11:37] <bjs> theprophet: ... we're going in circles here.  Can I make code that prints out all the same messages as this? Probably yes
[23:11:40] <dffd99> theprophet also, that code won't work in Russian
[23:11:51] <bjs> theprophet: but again, I'm not really sure you *really* mean that?  I assume you're not golfing here
[23:12:08] <theprophet> @bjs well it does not print same messages thats what i am saying
[23:12:29] <bjs> theprophet: I haven't even written the code how c an you say it doesn't print the same as your code
[23:12:34] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[23:12:55] <hogarius> theprophet: bjs never wrote out how to make it shorter.
[23:13:02] <theprophet> @bjs i am not talking about your code, i am talking about my code
[23:13:18] <bjs> theprophet: I'm very confused. You have some code. If you run it it prints some things out
[23:13:28] <theprophet> @bjs well it does not
[23:13:30] <bjs> theprophet: I could write a program, that is shorter than yours, but prints the same things out
[23:13:39] <bjs> theprophet: it does not? What do you mean
[23:14:42] <theprophet> @bjs well my code has chronological order
[23:14:49] <bjs> theprophet: okay... what?!
[23:15:00] <bjs> theprophet: I'll be honest so far you're making 0 sense
[23:15:05] <hogarius> theprophet: what does your code print out?  Show us in a pastebin.
[23:15:24] <theprophet> i litteraly posted the pastebin link twice
[23:15:26] <theprophet> https://pastebin.com/wihYT06J
[23:15:30] <bjs> theprophet: yes we all saw it
[23:16:07] <bjs> theprophet: when you run this code it prints some lines out to the screen,  I can write code that prints the same lines out to the screen but with less code.  This is called code "golfing".  I'm almost certain from your previous questions that this *isnt* what you are looking for
[23:16:12] <bjs> So.. what *are* you looking for?
[23:16:25] *** Joins: zivoni (~tomas@user/zivoni)
[23:16:27] <theprophet> heres with output
[23:16:29] <theprophet> https://pastebin.com/wihYT06J
[23:16:42] *** Joins: monkey_ (~user@190.104.116.134)
[23:17:26] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 252 seconds)
[23:18:03] *** Joins: Enitin (~Enitin@82.102.22.85)
[23:18:48] *** Quits: ubert (~Thunderbi@91.141.67.114.wireless.dyn.drei.com) (Ping timeout: 250 seconds)
[23:19:54] <hogarius> theprophet: you don't like that output?
[23:20:10] *** Quits: georgios (~georgios@user/georgios) (Ping timeout: 240 seconds)
[23:20:12] <theprophet> i do but
[23:20:37] <theprophet> i wanna know if its possbile to without breaking the chronological order of code to make it even shorter
[23:20:46] <hogarius> theprophet: you don't like ypur code?
[23:20:47] <theprophet> and if it is possible can somebody do it for me?
[23:20:51] *** Joins: upsala (~zcb@185.213.155.160)
[23:20:52] <ColonelJ> lol
[23:21:17] <bjs> theprophet: what do you mean by chronological order?
[23:21:28] <theprophet> just do the same thing as my code does
[23:21:33] <theprophet> but shorter
[23:21:47] <theprophet> if you can do it, please edit my code and show me
[23:22:47] <theprophet> i really need it to learn to write even shorter version of this code.
[23:23:21] *** Joins: czuk_cza (~mist@188.147.96.18.nat.umts.dynamic.t-mobile.pl)
[23:23:49] <theprophet> @bjs can you do that for me?
[23:23:53] *** Joins: magla (~gelignite@55d416bb.access.ecotel.net)
[23:24:51] *** Quits: devcpu (~rusty@104.243.107.236) (Quit: leaving)
[23:24:52] <bjs> theprophet: okay but I'm pretty sure you're not going to be happy with the answer I give
[23:24:56] *** Joins: y1n (~y1n@84-115-65-212.wifi.dynamic.surfer.at)
[23:24:57] <bjs> theprophet: https://bpa.st/ZJ4A  here the program is half the size now
[23:25:34] <theprophet> bjs ok, thanks man, big thank you.
[23:25:38] *** Joins: devcpu (~rusty@104.243.107.236)
[23:27:21] <stewie925> ColonelJ:  Sorry stepped away for a while but the exercise I posted requires implementation of algorithm so I believe imports are not allowed.  I know this sucks, but thank you.
[23:28:21] *** Joins: fflam_ (~mdt@ip70-179-20-127.sd.sd.cox.net)
[23:28:49] <ColonelJ> stewie925: I never said anything about imports, maybe you meant stealth_
[23:28:50] *** Quits: fflam (~mdt@ip70-179-20-127.sd.sd.cox.net) (Read error: Connection reset by peer)
[23:28:58] <theprophet> bjs when writing the program, is it better to do your version or mine?
[23:29:06] <bjs> theprophet: is that a serious question? :P
[23:29:22] <theprophet> @bjs i dont mean the level thing
[23:29:27] <bjs> the level thing?
[23:29:47] <theprophet> bjs i mean i dont question your experience
[23:30:00] <theprophet> @bjs i meant structure of the code
[23:30:23] <bjs> theprophet: I think if I tried to write code like I showed you there for any real job I'd be fired
[23:30:50] <bjs> trying to make things "shorter" is a goal for fun games, not for actually programming things
[23:31:37] <bjs> making things more readable,  more robust,  easier to test,  faster,  these are all things one might try make their code be.  But "shorter" is not one of them except in very very rare circumstances :)
[23:31:37] <theprophet> @bjs so main things is , it has to be readable?
[23:32:00] <theprophet> bjs gotcha, thanks for your advice
[23:32:11] *** Joins: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9)
[23:32:11] <bjs> theprophet: because look at my code, you cannot read it, you cannot understand it,  it might have a bug in it (my code *does* have a bug... can you see it?)
[23:32:12] <bjs> etc
[23:32:13] *** Joins: Celeo (~Celeo@user/celeo)
[23:32:21] <bjs> but it *is* shorter
[23:32:38] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[23:32:43] <dffd99> I think "shorter" mean "algorithmically shorter". not just written without whitespace
[23:32:55] <theprophet> @bjs i dont see a thing tbh lol
[23:33:21] <bjs> theprophet: i can't read the code i pasted either,  it was kind of there to make a point that shorter code is not better code
[23:33:22] <bjs> :P
[23:33:24] <dffd99> python3 was a bad idea
[23:33:34] <bjs> dffd99: why
[23:33:41] <duidvd> @dffd99: why
[23:33:43] <theprophet> @bjs lol
[23:33:45] <dffd99> because it broke everything
[23:34:09] <bjs> eh it mostly broke things that were already mostly broken
[23:34:10] <duidvd> finally, no maintaining of 2.x anymore
[23:34:40] <dffd99> the indian guy with his broken script is a good example
[23:34:51] <duidvd> there was so much time to upgrade to python3.
[23:35:15] <theprophet> dffd99 whos indian guy?
[23:35:30] *** Joins: sfields (~sfields@2603-8090-1605-d7f3-0ec9-68f3-b8b9-8bd4.res6.spectrum.com)
[23:35:30] <bjs> dffd99: varaindemian you mean,  people have nicks and "the indian guy" (A) probably doesn't uniquely identify anyone and (B) might not even apply to varaindemian who knows
[23:37:09] <mawk> what's the cool new alternative to matplotlib ?
[23:37:20] <mawk> I remember seeing a lib like this but I forgot the name
[23:37:41] <mawk> there's also gitesh who is indian
[23:38:12] <duidvd> I guess he was not referring to a specific person
[23:38:26] <theprophet> and whos the other indian guy dff mentioned?
[23:39:57] <theprophet> some lowkey racist insult passed by
[23:40:11] <mawk> where
[23:40:44] <mawk> do you know about this matplotlib alternative maybe bjs ? I don't know if you do maths stuff or not
[23:41:10] *** Quits: devcpu (~rusty@104.243.107.236) (Ping timeout: 240 seconds)
[23:41:32] <bjs> mawk: are you thinking of plotly?
[23:41:35] <duidvd> my inner autist gets offended by the inadequate details of the conversation participants
[23:41:50] <mawk> yes bjs ! thanks
[23:42:14] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[23:42:18] <stewie925> Oops sorry ColonelJ
[23:42:23] <mawk> duidvd: I'm french and dutch
[23:42:27] <mawk> and also luxembourgisch
[23:42:44] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 252 seconds)
[23:42:47] *** Joins: shutnoshut7 (~shutnoshu@ec2-52-29-68-122.eu-central-1.compute.amazonaws.com)
[23:43:41] *** Quits: defjam (~eb0t@90.194.35.110) (Quit: WeeChat 2.3)
[23:43:50] *** Quits: pro_z (~pro_z@37.214.56.59) (Ping timeout: 252 seconds)
[23:44:06] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:44:28] <duidvd> What's your default language pack?
[23:44:42] *** Joins: librenaut (~librenaut@user/librenaut)
[23:45:13] <ColonelJ> stewie925: have you tried hackerrank.com or something like that?  You can practice loads of different problems.
[23:46:00] <ColonelJ> stewie925: and usually the standard library is fine to use unless it says otherwise, so you can import stuff
[23:46:04] <mawk> just french duidvd sadly; my parents were too lazy to teach me anything else
[23:46:47] *** Quits: Kvothe (~weechat@user/elodin) (Ping timeout: 245 seconds)
[23:46:55] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[23:48:21] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Read error: Connection reset by peer)
[23:48:45] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[23:49:32] *** Joins: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl)
[23:50:25] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[23:51:12] *** Quits: shutnoshut7 (~shutnoshu@ec2-52-29-68-122.eu-central-1.compute.amazonaws.com) (Quit: Bye!)
[23:51:17] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Remote host closed the connection)
[23:51:38] *** Joins: shutnoshut (~shutnoshu@ec2-52-29-68-122.eu-central-1.compute.amazonaws.com)
[23:51:46] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[23:51:47] *** Quits: mxp (~mxp@139.28.219.252) (Ping timeout: 245 seconds)
[23:53:07] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Remote host closed the connection)
[23:53:40] *** Quits: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[23:54:36] *** Joins: jancoow (~jancoow@user/jancoow)
[23:54:39] *** Quits: mohabaks_ (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 276 seconds)
[23:55:51] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[23:58:22] <dffd99> was 1.x to 2.x transition also so painful?
[23:59:39] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
