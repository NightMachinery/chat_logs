[00:00:10] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[00:01:21] *** Joins: vlm (~vlm@user/vlm)
[00:01:31] *** Quits: informatiko (~informati@dynamic-077-180-118-060.77.180.pool.telefonica.de) (Quit: leaving)
[00:02:15] <flower_> I'm writing a curses terminal application. The event loop is that it's waits until a key is pressed and then does his thing. key = window.getch()
[00:02:43] <flower_> But my application listens to open sound control (osc / udp) messages at the same time (in a other thread).
[00:03:01] <flower_> How can I make such a message affect the event loop?
[00:03:37] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[00:03:54] <ChrisWarrick> getting two asynchronous things to work isn’t necessarily easy
[00:03:57] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[00:04:16] <flower_> hm
[00:04:35] <flower_> can I get the message to simulate a keypress?
[00:04:36] <ChrisWarrick> I’d probably look for something to integrate curses with asyncio, and then do your udp stuff with asyncio
[00:07:13] *** Joins: viaSanctus (~viaSanctu@user/viasanctus)
[00:08:04] *** Joins: zmt00 (~zmt00@user/zmt00)
[00:10:52] <flower_> with pynput or xdotool
[00:12:16] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[00:12:39] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-38bb-375d-90ab-51e1.res6.spectrum.com)
[00:13:57] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-e5e5-d7cd-75a1-94c2.res6.spectrum.com) (Ping timeout: 240 seconds)
[00:15:08] *** Joins: parv (~quass@user/parv)
[00:15:32] *** Parts: aniketgm (~Aniket@49.36.109.81) ()
[00:15:44] *** Quits: jarthur_ (~jarthur@2603-8080-1540-002d-38bb-375d-90ab-51e1.res6.spectrum.com) (Client Quit)
[00:20:57] *** Quits: jay-m1261 (~jay-m@129.0.77.219) (Ping timeout: 240 seconds)
[00:21:15] *** Joins: jay-m1261 (~jay-m@194.110.13.25)
[00:21:57] *** Quits: bancroft (~bancroft@142.162.53.67) (Ping timeout: 240 seconds)
[00:22:47] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[00:24:02] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[00:25:26] *** Quits: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Remote host closed the connection)
[00:25:31] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 268 seconds)
[00:25:51] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[00:25:53] *** Joins: c10l5 (~c10l@user/c10l)
[00:27:42] *** Joins: bancroft (~bancroft@142.162.53.67)
[00:27:50] <leitz> Trying to figure out using conftest.py with pytest, missing something simple.   https://gist.github.com/LeamHall/9fe30b0a3120576be59b384b0b3003d9
[00:28:07] *** Quits: pyfisch (~pyfisch@user/pyfisch) (Quit: The Lounge - https://thelounge.chat)
[00:28:53] *** Quits: rajkosto (~rajkosto@109-93-246-215.dynamic.isp.telekom.rs) (Ping timeout: 256 seconds)
[00:29:06] *** Quits: c10l (~c10l@user/c10l) (Ping timeout: 260 seconds)
[00:29:06] *** c10l5 is now known as c10l
[00:29:14] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[00:29:21] *** Joins: pyfisch (~pyfisch@user/pyfisch)
[00:29:26] *** Quits: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Remote host closed the connection)
[00:30:07] <SnoopJ> leitz, try `def test_have_data(make_person_data): data = make_person_data; do_something(data)`  (you're already returning data from the fixture, I'd just call it `person_data`)
[00:30:12] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[00:31:23] *** Joins: Yugi (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[00:32:16] <SnoopJ> leitz, i.e. https://bpa.st/OB6A
[00:32:31] *** Quits: Jigsy (~Jigsy@user/jigsy) (Remote host closed the connection)
[00:32:55] *** Joins: Jigsy (~Jigsy@user/jigsy)
[00:33:24] <SnoopJ> even if the name was available, fixtures aren't meant to be called directly. but when you do want names from conftest, you can/must import them
[00:33:56] *** Quits: Yugi (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Remote host closed the connection)
[00:34:43] *** Joins: Yugi (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[00:35:11] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:bdb4:1561:70c5:fdc6) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:35:23] *** Quits: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 252 seconds)
[00:35:26] *** Quits: Yugi (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Remote host closed the connection)
[00:36:24] <leitz> SnoopJ, how do I import the conftest.py? I thought pytest automatically read it?
[00:37:02] <SnoopJ> leitz, it does automatically "read" it, but it doesn't just inject all the names from it into a test module's namespace. Among other things, it makes the fixtures declared in these available for use in the associated suite
[00:38:22] *** Joins: qlixed (~qlixed@102-6-231-201.fibertel.com.ar)
[00:38:26] <SnoopJ> I believe there's a way to invoke pytest to only do collection/discovery, and you'd see it picking up your fixture, but not using it anywhere
[00:39:28] *** Joins: progGuyx01 (~nites@98.42.83.50)
[00:40:09] *** Joins: ExeciN (~ExeciN@user/nicexe)
[00:40:28] <leitz> SnoopJ, thanks! It took a couple of minutes to get your paste to sink in...
[00:40:37] *** Quits: jay-m1261 (~jay-m@194.110.13.25) (Ping timeout: 240 seconds)
[00:40:56] *** Quits: saunders (~nicholas@172.103.152.184) (Ping timeout: 268 seconds)
[00:41:23] <SnoopJ> leitz, if pytest is new to you, it can be hard to get your head around the implicit behaviors. This is an excellent introduction to the library: https://nedbatchelder.com/text/test3.html
[00:41:49] *** Quits: Roey (~Roey@user/Roey) (Remote host closed the connection)
[00:42:06] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:bdb4:1561:70c5:fdc6)
[00:42:13] *** Quits: junktext__ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 240 seconds)
[00:42:53] *** Joins: jay-m1261 (~jay-m@gateway/vpn/pia/jay-m126)
[00:43:21] <SnoopJ> a relatively concise way to describe how pytest works is: it scans whatever it's pointed at, finds tests (`test_*()`), fixtures, etc. during the "collection" phase, then starts running tests, arranging each test's dependencies as the test wants them
[00:43:28] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[00:43:43] *** Joins: mickey8 (~user@user/mickey)
[00:44:17] <SnoopJ> and conftest.py is "just" a place that can hold fixtures used across multiple parts of a suite and other configuration (hooking into pytest's machinery to change how collection/invocation works is often done there)
[00:44:38] <leitz> SnoopJ, thanks! I'm likely to be on a new team soon, and the one I'm likely to be on is interested in Python.  It's a win-win.  :)
[00:44:45] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 256 seconds)
[00:44:50] <SnoopJ> woohoo :)
[00:47:49] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[00:48:08] *** Quits: goepsilongo (~goepsilon@2806:263:c404:8000:1841:9986:6b2b:10e6) (Quit: Textual IRC Client: www.textualapp.com)
[00:48:12] *** Quits: powftw (uid448161@id-448161.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[00:49:18] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[00:49:57] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[00:50:03] *** Joins: junebug (~junebug@2600:1700:3db0:2540:893f:76e:ad3f:3df0)
[00:51:37] *** Quits: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 240 seconds)
[00:52:37] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 240 seconds)
[00:53:42] *** Joins: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net)
[00:54:16] *** Quits: AmR (~AmREiSa@156.199.236.68) (Quit: Konversation terminated!)
[00:54:50] *** Joins: ideopathic (~ideopathi@2600:1702:8b0:a500:c44:b005:6ec6:f8a8)
[00:57:08] *** Joins: ozoned (odoood@gateway/vpn/protonvpn/odoood)
[00:57:33] <progGuyx01> anyone working on anything interesting ?
[00:58:23] <exarkun> no
[00:58:49] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[00:59:14] <Swayze> https://glyph.twistedmatrix.com/2016/08/attrs.html
[00:59:20] <Swayze> this is hilarious
[00:59:29] *** Quits: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net) (Ping timeout: 256 seconds)
[01:00:30] *** Joins: Themis3000 (~Thunderbi@user/themis3000)
[01:01:25] *** Quits: jay-m1261 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 240 seconds)
[01:01:49] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[01:03:26] *** Joins: jay-m1261 (~jay-m@gateway/vpn/pia/jay-m126)
[01:03:26] *** Quits: ST47 (~ST47@wikimedia/st47) (Ping timeout: 252 seconds)
[01:03:59] *** Joins: Viewday11 (~Viewday@user/viewday)
[01:04:38] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[01:06:13] *** Quits: upsala (~zcb@185.209.196.169) (Ping timeout: 268 seconds)
[01:06:16] *** Joins: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com)
[01:07:52] *** Joins: upsala (~zcb@185.209.196.169)
[01:08:40] <PantelicGR2> Happy holidays! Be well with love, peace and freedom. :)
[01:10:14] <leitz> Time for a break.
[01:10:16] *** Joins: lorogue (~lorogue@77.33.23.154.dhcp.fibianet.dk)
[01:10:33] <leitz> SnoopJ, thanks! I need to read nedbat's article in a bit. https://github.com/LeamHall/CharacterBible/blob/master/test/test_person_view.py
[01:11:53] *** Quits: bancroft (~bancroft@142.162.53.67) (Ping timeout: 250 seconds)
[01:12:08] *** Joins: odoood__ (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net)
[01:12:10] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:29ad:19a:fa15:e17c)
[01:12:27] *** Quits: vegg (~Stas@188.58.14.223) (Quit: Leaving)
[01:12:37] *** Quits: jay-m1261 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 240 seconds)
[01:13:37] *** Quits: junebug (~junebug@2600:1700:3db0:2540:893f:76e:ad3f:3df0) (Ping timeout: 240 seconds)
[01:14:17] *** Quits: ozoned (odoood@gateway/vpn/protonvpn/odoood) (Ping timeout: 240 seconds)
[01:14:57] <nedbat> Swayze: what is hilarious about it?
[01:15:24] <ali1234> i don't understand "unfortunate proliferation of class inheritance"
[01:15:38] <ali1234> attrs has nothing to do with inheritance
[01:16:28] <ali1234> unless the author is suggesting that because attrs lets you define classes so easily, you can just copy paste the same code everywhere instead of using inheritance
[01:16:46] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-38bb-375d-90ab-51e1.res6.spectrum.com)
[01:16:46] <nedbat> ali1234: i think the paragraph is broadly mentioning overuse and misuse of classes, then attrs is a solution to some not all of them
[01:16:50] <ali1234> but they don't seem to ever talk about inheritance after the introduction
[01:18:07] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:bdb4:1561:70c5:fdc6) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:18:10] <nedbat> ali1234: he says that attrs will make it easier to make good (small, self-contained) classes, so you might not be tempted into make bad classes
[01:18:41] *** Joins: vegg (~Stas@188.58.14.223)
[01:18:44] <ali1234> it doesn't really though. it just lets you define attributes with less boilerplate. it doesn't do anything to help you design your class heirarchy
[01:19:00] <vegg> looks like I have same problem, no solution... https://stackoverflow.com/questions/56971465/pip-is-not-installed-with-python-3-7-3-even-i-did-selected-it-on-install
[01:19:20] <ali1234> vegg: did you install from microsoft store by any chance?
[01:19:32] <nedbat> ali1234: it might have been an overly broad claim, or it might be that he can see connections we can't :)
[01:19:37] *** Quits: cyberpear (uid364019@fedora/cyberpear) (Quit: Connection closed for inactivity)
[01:19:44] <vegg> idk, prolly no
[01:19:51] <ali1234> maybe but it would be nice if they had talked about those connections :)
[01:19:57] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[01:20:48] <ali1234> vegg: not sure what the problem is then. if you install python from the microsoft store, it will not add anything to the path except python.exe, so no pip, nor anything you install with pip. if you download the python installer from python.org it does add all that stuff to the path
[01:20:50] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-38bb-375d-90ab-51e1.res6.spectrum.com) (Quit: jarthur)
[01:21:07] *** Quits: somlis (~somlis@user/somlis) (Quit: WeeChat 3.3)
[01:21:12] *** Joins: bancroft (~bancroft@142.162.53.67)
[01:21:55] <vegg> scripts is empty...
[01:22:35] <ali1234> i don't know then
[01:22:36] *** Quits: odoood__ (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net) (Quit: Leaving)
[01:23:25] *** Quits: tmm88 (~tmm88@user/tmm88) (Ping timeout: 240 seconds)
[01:24:10] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-38bb-375d-90ab-51e1.res6.spectrum.com)
[01:26:02] <Yhg1s> vegg: run 'py -m pip' instead of 'pip'.
[01:26:15] <vegg> C:\Work\Python310\python.exe: No module named pip
[01:26:37] *** Quits: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com) (Ping timeout: 240 seconds)
[01:26:47] <Repiphany> Did you use the embedded version
[01:26:56] *** Joins: debayer (~debayer@75.115.113.138)
[01:27:18] <Yhg1s> vegg: and C:\Work\Python310 is where you installed Python? (It's not a place it would normally install)
[01:28:54] <vegg> python-3.10.0-amd64, yes, that's a folder
[01:29:45] <Yhg1s> vegg: I'm not sure what that's supposed to mean, sorry. Did you tell Python to install in C:\Work\Python310? How did you install it?
[01:30:09] *** Joins: somlis (~somlis@user/somlis)
[01:30:49] <vegg> yes. for all users
[01:32:26] <jinsun> I think there is a checkbox for pip when you install using the python.org installer, which you probably unchecked
[01:32:45] *** Quits: debayer (~debayer@75.115.113.138) (Ping timeout: 268 seconds)
[01:33:15] <Yhg1s> vegg: how did you install it, though? What did you run, what options did you select?
[01:33:25] <vegg> why would I uncheck it
[01:33:30] <vegg> when I need pip
[01:33:47] <Yhg1s> vegg: it's not about what you would do, it's about what you did.
[01:34:09] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:cac:3196:550a:b3fa) (Quit: Textual IRC Client: www.textualapp.com)
[01:34:15] <vegg> interesting. downloaded 3.10.1. and it installed pip
[01:34:50] <vegg> Yhg1s, I tried few times reinstalling
[01:35:05] <vegg> ok it works now
[01:35:37] *** Quits: Narrat (~omnius@p200300df5f0f8e0406ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[01:38:45] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[01:38:57] *** Quits: grooverman (~grooverma@187.11.220.159) (Ping timeout: 240 seconds)
[01:42:32] *** Joins: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com)
[01:43:25] *** Quits: jfcaron (~jfcaron@192.252.229.166) (Quit: jfcaron)
[01:43:32] *** Quits: Barones (~Barones@2804:7f3:888b:7e76:ba4d:15e6:5660:6b92) (Ping timeout: 240 seconds)
[01:43:57] *** Joins: grooverman (~grooverma@177.102.119.40)
[01:44:00] *** Quits: vegg (~Stas@188.58.14.223) (Quit: Leaving)
[01:44:17] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[01:44:45] *** Joins: jfcaron (~jfcaron@192.252.229.166)
[01:45:09] *** Quits: akk (~akk@174-28-122-47.albq.qwest.net) (Quit: +++)
[01:45:24] *** Joins: Guest42 (~Guest42@pool-96-253-74-73.rcmdva.fios.verizon.net)
[01:46:06] *** Joins: Macuser (~Macuser@2600:1003:b44a:c499:2507:e301:9721:4a51)
[01:48:32] *** Quits: sreve (~quassel@p4ff44da1.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[01:49:13] *** Joins: sreve (~quassel@p549d7c96.dip0.t-ipconnect.de)
[01:50:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[01:54:16] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[01:54:47] *** Quits: georgios (~georgios@user/georgios) (Ping timeout: 250 seconds)
[01:56:01] *** Joins: transhumanist (~hiken@2601:196:8800:35f0:4d08:6d31:8d7d:b576)
[01:56:10] *** Quits: bancroft (~bancroft@142.162.53.67) (Ping timeout: 268 seconds)
[01:56:20] *** Joins: Ivii (~Ivyy@2001:a62:4c3:8e01:7d6f:92d:ca84:3ebd)
[01:56:38] *** Quits: lethu (~lethu@user/lethu) (Quit: Leaving)
[01:56:58] <transhumanist> Hi! All, Happy Holidays! If I might interrupt your fun times for a moment! Can anyone tell me whats wrong with this piece of code? https://bpa.st/C5IQ
[01:59:57] *** Quits: KombuchaKip (~kip@192.252.230.5) (Remote host closed the connection)
[02:00:52] <ChrisWarrick> transhumanist: are you sure that the file exists at the path with the replacement?
[02:01:24] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[02:02:10] *** Joins: KombuchaKip (~kip@192.252.230.5)
[02:02:13] *** Quits: Techcable (~Techcable@168.235.93.147) (Quit: ZNC - https://znc.in)
[02:02:22] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Client Quit)
[02:02:23] *** Quits: qlixed (~qlixed@102-6-231-201.fibertel.com.ar) (Ping timeout: 256 seconds)
[02:03:08] <transhumanist> ChrisWarrick: well its part of a google colab and not sure how its loosing the file, perhaps I should do a directory listing?
[02:03:18] <transhumanist> just insert an !ls in the code?
[02:03:49] *** Joins: Techcable (~Techcable@168.235.93.147)
[02:03:57] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[02:04:11] *** Joins: deletor (~deletor@062122119061.gdansk.vectranet.pl)
[02:06:08] *** Joins: fikran (~fikran@user/fikran)
[02:06:25] *** Joins: junebug (~junebug@2600:1700:3db0:2540:3e6f:7279:9ace:877b)
[02:06:32] *** Quits: sreve (~quassel@p549d7c96.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[02:06:51] <yitz> Is there a simple way to tell if a string can be converted with `int()` other than doing a try-except?
[02:07:04] <Yhg1s> yitz: nope, that's the simple way.
[02:07:24] *** Joins: sreve (~quassel@p54a70b5a.dip0.t-ipconnect.de)
[02:07:30] <yitz> Meh. str.isdemical and str.isnumeric seem so ... close but not quite helpful
[02:07:51] <yitz> Is str.decimal like isnumeric but with a '.' added?
[02:07:54] <Yhg1s> they are not for that, yes. If you want to convert it with int(), converting it with int() is the way to go.
[02:08:22] <Yhg1s> both of those involve the unicode character database, I'm not sure how much overlap they have right now, and nobody knows how much overlap they'll have in the future.
[02:08:24] *** Joins: georgios (~georgios@user/georgios)
[02:08:44] *** Quits: pabogr (uid27497@id-27497.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[02:08:48] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[02:08:50] <yitz> Ah. Joy. The docs for those two aren't super illuminating
[02:08:52] <yitz> THanks
[02:09:40] *** Joins: ykska (~ykska@182.226.37.172)
[02:10:50] <Numerlor> isdecimal should work for ints
[02:11:12] <Yhg1s> Numerlor: not for all of the values that will work with int(), no.
[02:11:52] *** Joins: sazawal (~sazawal@122.161.92.186)
[02:12:45] <Repiphany> int('0b1111', 0)
[02:12:51] <yitz> "-1".isdecimal() => False
[02:13:12] <Numerlor> What does it miss with the default base exceot signs?
[02:13:30] <Numerlor> But anyway, I'd just use the try except
[02:13:42] <ChrisWarrick> transhumanist: note that the previous line does a conditional rename
[02:13:48] <Yhg1s> Numerlor: signs isn't enough?
[02:13:55] <Repiphany> int(
[02:14:07] <Repiphany> '123\n' would be missed
[02:14:57] <Numerlor> Yhg1s:  simple enough to check for, if doing it through the method instead of try except
[02:15:03] <Repiphany> Also int('1_234_567')
[02:15:20] *** Quits: jdmark (~jdmark@user/jdmark) (Quit: Leaving)
[02:16:21] <Yhg1s> Numerlor: not simpler than using try/except :)
[02:16:27] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[02:16:36] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[02:17:26] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[02:17:54] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[02:18:24] <Numerlor> They did specifically ask for ways other than try except
[02:19:33] <Yhg1s> Numerlor: and for 'simple'. Reimplementing the logic of int() isn't going to be simple. You did see Repiphany's response, right?
[02:20:01] *** Quits: upsala (~zcb@185.209.196.169) (Quit: WeeChat 3.4)
[02:20:32] *** Quits: locrian9 (~mike@99-153-255-194.lightspeed.irvnca.sbcglobal.net) (Quit: leaving)
[02:20:32] *** Quits: seednode (~seednode@user/seednode) (Read error: Connection reset by peer)
[02:20:57] *** Joins: seednode (~seednode@user/seednode)
[02:23:18] *** Quits: nicode (~nic@2607:f2c0:9368:e200:da27:df65:cb31:3c2) (Ping timeout: 268 seconds)
[02:23:45] *** Quits: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com) (Remote host closed the connection)
[02:25:39] <Numerlor> Yes, while a bit more than isdecimal, stripping the string, checking for leading/trailing _ and removing any \d_\d is also not particularly difficult. I don't think there is anything beyond that without going into other bases
[02:28:15] *** Quits: ykska (~ykska@182.226.37.172) (Ping timeout: 268 seconds)
[02:32:17] *** Quits: junebug (~junebug@2600:1700:3db0:2540:3e6f:7279:9ace:877b) (Ping timeout: 240 seconds)
[02:33:14] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[02:34:19] *** Joins: Klinda (~superleag@user/klinda)
[02:36:23] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 252 seconds)
[02:38:07] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[02:40:06] *** Quits: Ivii (~Ivyy@2001:a62:4c3:8e01:7d6f:92d:ca84:3ebd) (Remote host closed the connection)
[02:41:53] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[02:42:47] <jinsun> is there any difference between sys.exit() and raise SystemExit()? or it is just 2 different ways of doing literally the same thing?
[02:44:22] <Yhg1s> jinsun: well, sys.exit can be replaced by something else, something that does more than just raise SystemExit.
[02:44:41] <Yhg1s> jinsun: it's also easier to set breakpoints on in debuggers.
[02:45:26] *** Joins: shabius (~shabius@2a0e:1c80:1:1042::1009)
[02:46:19] <jinsun> ah okay, yeah, better monkey patching and debugging possibilities
[02:46:28] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:46:29] *** Quits: shabius (~shabius@2a0e:1c80:1:1042::1009) (Client Quit)
[02:46:38] <jinsun> with sys.exit
[02:47:55] *** Joins: yitz_ (~yitz@exercism/yitz)
[02:48:35] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 268 seconds)
[02:49:25] *** Quits: yitz (~yitz@exercism/yitz) (Ping timeout: 256 seconds)
[02:49:29] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[02:50:16] *** Joins: newpy (~newpy@206.168.231.90)
[02:50:45] <flower_> use logging for debugging (read it yesterday ;) )
[02:51:16] <flower_> or instead of debuggers that is
[02:51:19] <flower_> ;)
[02:51:30] <flower_> fluent python (?)
[02:53:04] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[02:53:17] <jinsun> I do it like a caveman and just litter the code with print statements :D, if debugger cannot be used
[02:54:17] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:f67:8d19:310d:4689) (Ping timeout: 240 seconds)
[02:54:22] *** Joins: shabius (~shabius@2a0e:1c80:1:1042::1009)
[02:54:57] <Swayze> nedbat: just the writing style
[02:56:09] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[02:56:14] *** Quits: shabius (~shabius@2a0e:1c80:1:1042::1009) (Client Quit)
[02:56:56] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[02:57:41] *** Joins: shabius (~shabius@46.188.18.36)
[02:57:53] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:58:05] *** Joins: zer0bitz_ (~zer0bitz@dsl-hkibng32-54f844-160.dhcp.inet.fi)
[02:58:06] <nedbat> Swayze: you like it?
[02:58:26] *** Quits: shabius (~shabius@46.188.18.36) (Remote host closed the connection)
[02:59:02] *** Quits: DaNeenjah (~jake@adsl-74-230-8-166.hsv.bellsouth.net) (Quit: WeeChat 3.4)
[02:59:16] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:59:50] *** Joins: KvL (~KvL@195.216.219.76)
[03:00:18] *** Quits: zer0bitz (~zer0bitz@2001:2003:f444:a000:2421:137f:dee3:7f7d) (Ping timeout: 260 seconds)
[03:01:32] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[03:03:42] *** Joins: zepolen_ (~zepolen@ppp-94-66-223-200.home.otenet.gr)
[03:04:02] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Read error: Connection reset by peer)
[03:04:51] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54f844-160.dhcp.inet.fi)
[03:05:24] *** Quits: Gerula (~Gerula@user/gerula) (Quit: Leaving)
[03:05:34] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[03:06:18] *** Quits: seednode (~seednode@user/seednode) (Read error: Connection reset by peer)
[03:08:17] *** Quits: zer0bitz_ (~zer0bitz@dsl-hkibng32-54f844-160.dhcp.inet.fi) (Ping timeout: 240 seconds)
[03:08:33] *** Joins: seednode (~seednode@user/seednode)
[03:10:10] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 268 seconds)
[03:12:32] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[03:12:32] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-38bb-375d-90ab-51e1.res6.spectrum.com) (Quit: jarthur)
[03:16:02] *** Joins: Terexen (~terexen@user/terexen)
[03:16:58] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 268 seconds)
[03:18:17] *** Quits: humberto1 (~humbertow@189.236.35.124) (Ping timeout: 240 seconds)
[03:18:19] *** Joins: humbertowoody (~humbertow@187.202.201.225)
[03:18:51] *** Joins: Gerula (~Gerula@user/gerula)
[03:20:09] *** Quits: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy) (Quit: WeeChat 3.3)
[03:21:39] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[03:21:39] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[03:21:39] *** finn_elija is now known as FinnElija
[03:24:28] <leitz> Is there a reason to use string.Template vice string.format?
[03:26:57] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[03:28:08] <Wulf> leitz: "A primary use case for template strings is for internationalization (i18n) since in that context, the simpler syntax and functionality makes it easier to translate than other built-in string formatting facilities in Python."
[03:29:39] <leitz> Wulf, thanks! I like the idea of templates, but what I'm doing seems to be better as a formatted string.
[03:30:15] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[03:30:45] *** yitz_ is now known as yitz
[03:31:13] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[03:31:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[03:32:04] *** Joins: Seiryu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[03:32:39] *** Joins: tejr (~tejr@user/tejr)
[03:32:49] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[03:33:48] *** Quits: pulec (~pulec@user/pulec) (Read error: Connection reset by peer)
[03:34:06] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[03:34:11] *** Quits: bailsman (~Mm1@xls01.freecult.org) (Ping timeout: 256 seconds)
[03:34:17] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Ping timeout: 240 seconds)
[03:34:27] *** Joins: farn (~farn@2a03:4000:7:3cd:d4ab:85ff:feeb:f505)
[03:34:31] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[03:34:41] *** Quits: catdog (~quassel@2001:470:50f7:cdcd::cd1) (Ping timeout: 252 seconds)
[03:34:45] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Ping timeout: 256 seconds)
[03:35:06] <Numerlor> .format also allows additional things like accesing attribtues and items which are unsafe if the template is from the user
[03:35:23] *** Joins: catdog (~quassel@2001:470:50f7:cdcd::cd1)
[03:35:53] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[03:36:17] <parv> Do not about template; one can call a function in format strings, at least of f-string variety
[03:36:31] <parv> s/not about/not know about/
[03:37:31] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:37:44] *** Joins: Wulf (~Wulf@user/wulf)
[03:40:30] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[03:41:40] *** Joins: georgios (~georgios@user/georgios)
[03:42:12] <leitz> So far format seems much more useful.
[03:42:15] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[03:42:27] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[03:42:48] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[03:42:57] <Wulf> leitz: I agree. I just quoted the official docs.
[03:43:25] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Client Quit)
[03:47:00] *** Nochebuena is now known as ElAlcohol
[03:49:23] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Quit: Leaving)
[03:51:36] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:52:27] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54f844-160.dhcp.inet.fi) (Read error: Connection reset by peer)
[03:54:08] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:54:39] *** ElAlcohol is now known as Nochebuena
[03:55:35] *** Joins: flyback- (~flyback@2601:540:8201:1e60::1b5d)
[03:55:45] *** Quits: sazawal (~sazawal@122.161.92.186) (Quit: Leaving)
[03:56:17] *** Quits: humbertowoody (~humbertow@187.202.201.225) (Ping timeout: 240 seconds)
[03:56:31] <nedbat> parv: f-strings allow any expression.  format only allows .attr and [item]
[03:56:59] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:29ad:19a:fa15:e17c) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[03:57:41] *** Joins: softwarewolf (~softwarew@user/softwarewolf)
[03:57:57] *** Quits: flyback (~flyback@2601:540:8201:1e60::997d) (Ping timeout: 240 seconds)
[04:00:58] *** flyback- is now known as flyback
[04:01:36] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[04:01:41] *** Joins: NeilRG (~NeilRG@bras-vprn-toroon4834w-lp130-03-142-113-139-83.dsl.bell.ca)
[04:01:53] <NeilRG> .
[04:02:38] *** Joins: humbertowoody (~humbertow@187.202.201.225)
[04:02:59] *** Quits: KvL (~KvL@195.216.219.76) (Quit: KvL)
[04:03:19] *** Joins: KvL (~KvL@195.216.219.76)
[04:04:03] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-6dd8-0bff-e3b9-65aa.res6.spectrum.com)
[04:04:51] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[04:05:46] *** Quits: flyback (~flyback@2601:540:8201:1e60::1b5d) (Quit: Leaving)
[04:06:57] *** Quits: humbertowoody (~humbertow@187.202.201.225) (Ping timeout: 240 seconds)
[04:09:31] *** Joins: flyback (~flyback@2601:540:8201:1e60::1b5d)
[04:09:37] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[04:13:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[04:15:29] *** Joins: fikran (~fikran@user/fikran)
[04:16:47] *** Quits: jfcaron (~jfcaron@192.252.229.166) (Quit: jfcaron)
[04:21:43] *** Quits: chilversc (~chilversc@user/chilversc) (Ping timeout: 268 seconds)
[04:25:52] *** Joins: bluedust (~bluedust@117.222.187.193)
[04:26:08] *** Joins: jfcaron (~jfcaron@192.252.229.166)
[04:26:29] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[04:28:53] *** Nochebuena is now known as Cava
[04:29:11] *** Cava is now known as Anna_de_Codorniu
[04:30:17] *** Quits: NeilRG (~NeilRG@bras-vprn-toroon4834w-lp130-03-142-113-139-83.dsl.bell.ca) (Remote host closed the connection)
[04:31:29] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Remote host closed the connection)
[04:31:52] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[04:31:54] *** Joins: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il)
[04:31:55] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[04:34:33] *** Quits: knstn (~knstn@ppp-94-66-57-173.home.otenet.gr) (Quit: leaving)
[04:37:13] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[04:41:08] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-38bb-375d-90ab-51e1.res6.spectrum.com)
[04:42:32] *** Joins: Gerula_ (~Gerula@user/gerula)
[04:42:32] *** Quits: Gerula (~Gerula@user/gerula) (Killed (calcium.libera.chat (Nickname regained by services)))
[04:42:32] *** Gerula_ is now known as Gerula
[04:42:36] *** Joins: ykska (~ykska@182.226.37.172)
[04:42:37] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-6dd8-0bff-e3b9-65aa.res6.spectrum.com) (Ping timeout: 240 seconds)
[04:43:28] *** Joins: magla (~gelignite@55d49e3c.access.ecotel.net)
[04:44:26] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[04:47:07] *** Quits: MikZyth (~MikZyth@host-79-157-66-217.spbmts.ru) (Quit: WeeChat 3.4)
[04:48:56] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[04:49:39] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[04:51:57] *** Joins: humbertowoody (~humbertow@189.132.138.226)
[04:52:35] *** Joins: nomic (~nomic@85.203.46.91)
[04:53:45] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[04:56:21] *** Quits: humbertowoody (~humbertow@189.132.138.226) (Ping timeout: 256 seconds)
[04:58:26] *** Quits: softwarewolf (~softwarew@user/softwarewolf) (Remote host closed the connection)
[04:58:37] *** Quits: parv (~quass@user/parv) (Ping timeout: 240 seconds)
[04:58:41] *** Quits: Techcable (~Techcable@168.235.93.147) (Quit: ZNC - https://znc.in)
[04:59:13] *** Joins: Alleria (~textual@user/alleria)
[04:59:30] *** Quits: KvL (~KvL@195.216.219.76) (Quit: KvL)
[05:00:31] *** Quits: bluedust (~bluedust@117.222.187.193) (Remote host closed the connection)
[05:01:59] *** Joins: driib23 (~driib@185.195.233.156)
[05:03:57] *** Quits: driib2 (~driib@185.65.135.238) (Ping timeout: 240 seconds)
[05:03:57] *** driib23 is now known as driib2
[05:04:19] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[05:04:25] *** Quits: magla (~gelignite@55d49e3c.access.ecotel.net) (Quit: Stay safe!)
[05:04:50] *** Joins: Techcable (~Techcable@168.235.93.147)
[05:06:23] *** Joins: softwarewolf (~softwarew@user/softwarewolf)
[05:17:17] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 240 seconds)
[05:19:26] *** Joins: JingleJazzy (~jaziz@user/jaziz)
[05:20:17] *** Quits: cozmo (~user@c-73-235-114-131.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[05:24:51] *** Quits: faint (~faint@2a05:f480:2000:1325::) (Quit: disconnecting)
[05:25:23] *** Quits: Seiryu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[05:26:28] *** Quits: Colt (~Colt@user/colt) (Remote host closed the connection)
[05:27:04] *** Joins: Colt (~Colt@user/colt)
[05:27:07] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[05:27:59] *** Joins: humbertowoody (~humbertow@189.132.138.226)
[05:28:07] *** Joins: et_ (~et@user/et)
[05:28:51] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:29:32] *** Quits: et (~et@user/et) (Ping timeout: 268 seconds)
[05:29:32] *** et_ is now known as et
[05:30:23] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:32:17] *** Quits: humbertowoody (~humbertow@189.132.138.226) (Ping timeout: 240 seconds)
[05:32:17] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 240 seconds)
[05:45:05] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[05:45:36] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[05:46:07] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Quit: nappy time)
[05:55:42] *** Quits: jfcaron (~jfcaron@192.252.229.166) (Quit: jfcaron)
[05:56:49] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:510f:e364:8034:402a)
[05:58:28] *** Quits: jarthur_ (~jarthur@2603-8080-1540-002d-38bb-375d-90ab-51e1.res6.spectrum.com) (Quit: jarthur_)
[05:59:40] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-38bb-375d-90ab-51e1.res6.spectrum.com)
[06:00:34] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[06:01:06] *** Joins: humbertowoody (~humbertow@189.132.138.226)
[06:01:37] *** Quits: qpdb (~qpdb@user/qpdb) (Ping timeout: 240 seconds)
[06:02:50] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 268 seconds)
[06:03:00] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:03:25] *** brabrax_ is now known as brabrax
[06:03:28] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[06:05:37] *** Quits: humbertowoody (~humbertow@189.132.138.226) (Ping timeout: 240 seconds)
[06:05:46] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[06:05:54] *** Quits: Macuser (~Macuser@2600:1003:b44a:c499:2507:e301:9721:4a51) (Quit: Textual IRC Client: www.textualapp.com)
[06:05:55] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 268 seconds)
[06:07:58] *** Quits: vd33 (~vd33@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca) (Quit: Client closed)
[06:10:59] *** Quits: newpy (~newpy@206.168.231.90) (Quit: Leaving)
[06:15:59] *** Joins: qpdb (~qpdb@user/qpdb)
[06:18:43] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[06:19:34] <Forty-Bot> when do I need to pass arguments to super()?
[06:20:09] <Helion> When you are using python2, or python 3.1 or older
[06:20:20] <Forty-Bot> I have a class where if I use super without arguments ("super()"), I get "TypeError: super(type, obj): obj must be an instance or subtype of type"
[06:20:30] <Forty-Bot> but if I pass the superclass/instance it works fine
[06:20:36] <Forty-Bot> I am using python 3.9
[06:21:11] <Helion> that doesn't sound...right
[06:21:22] <Helion> can you show your code?
[06:21:27] <Forty-Bot> sure, one sec
[06:21:32] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[06:21:45] *** Quits: goldfish (~goldfish@user/goldfish) (Remote host closed the connection)
[06:22:00] *** Joins: goldfish (~goldfish@user/goldfish)
[06:23:03] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[06:23:17] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[06:23:25] <Forty-Bot> Helion: https://github.com/Forty-Bot/trends.tf/blob/wip/trends/site/wsgi.py#L86
[06:23:57] <Forty-Bot> if I replace the call to super with "super(werkzeug.routing.IntegerConverter, self)" it works fine
[06:24:50] *** Joins: fikran (~fikran@user/fikran)
[06:25:26] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[06:26:03] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: leaving)
[06:27:14] *** Joins: lethu (~lethu@user/lethu)
[06:28:36] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[06:28:59] <Helion> Im not seeing anything in your codebase standing out to me saying it shouldn't just work, and i just checked werkzeug and even the lass you are inheriting from uses super() just fine, so.... i dont know.
[06:29:05] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[06:30:15] <Helion> It might be that you are running super() in a generator expression, and the magic that makes zero-arg-super work lost its context
[06:30:17] *** Joins: Vonter (~Vonter@user/vonter)
[06:30:28] <Forty-Bot> hm, maybe
[06:30:41] <Forty-Bot> well, I don't really need it anyway
[06:30:48] <Forty-Bot> but it's pretty strange
[06:31:01] <Helion> you could try: to_url = super().to_url; return '+'.join(to_url(value) for value in values) and it might work?
[06:31:19] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[06:31:58] <Helion> if the latter works... then ...it might be a bug or it might be a known limitation
[06:32:36] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:32:36] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[06:32:36] *** finn_elija is now known as FinnElija
[06:32:41] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[06:32:59] <Forty-Bot> the latter works
[06:34:28] <Helion> now.... to go digging to see if its a bug or working as intended!
[06:34:35] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Quit: !be back soon)
[06:36:12] *** Joins: lapno (~lapno@epm16.neoplus.adsl.tpnet.pl)
[06:36:13] *** Joins: vicfred (~vicfred@user/vicfred)
[06:36:24] <Helion> The docs don't say it wont work in a generator expression, but i'm getting hints that it probably isn't intended to work in generator expressions
[06:36:57] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[06:36:59] <bparker> how can I unflatten nested data that looks like this: [{"id": "1", "parent_id": "1"}, {"id": "2", "parent_id": "1"}, {"id": "3", "parent_id": "1"}] so that I can do e.g. dict["1"] and have ["2", "3"] inside it and so on down to further levels also
[06:37:31] *** Joins: cozmo (~user@c-73-235-114-131.hsd1.ca.comcast.net)
[06:37:54] *** Joins: millido (~millido@84.210.150.128)
[06:38:37] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 240 seconds)
[06:41:36] *** Quits: cozmo (~user@c-73-235-114-131.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[06:42:52] *** Joins: jfcaron (~jfcaron@192.252.229.166)
[06:42:53] *** Quits: ykska (~ykska@182.226.37.172) (Ping timeout: 256 seconds)
[06:43:13] *** Joins: cozmo (~user@c-73-235-114-131.hsd1.ca.comcast.net)
[06:47:18] *** Quits: Abrax (~Abrax@user/abrax) (Quit: Leaving)
[06:50:55] *** Joins: saunders (~nicholas@172.103.152.184)
[06:53:57] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[06:54:23] *** Joins: Jong (~Jong@2620:10d:c090:400::5:da53)
[06:54:34] *** Joins: derreck (~derreck@c-71-58-70-16.hsd1.pa.comcast.net)
[06:56:00] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[07:00:38] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:00:38] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[07:00:38] *** finn_elija is now known as FinnElija
[07:03:37] *** Quits: saunders (~nicholas@172.103.152.184) (Ping timeout: 240 seconds)
[07:04:22] *** Quits: delvian (~delvian@41.13.250.193) (Ping timeout: 260 seconds)
[07:15:04] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[07:15:06] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Quit: ZNC - https://znc.in)
[07:17:00] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[07:20:50] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[07:23:09] *** Joins: adeliktas5 (~adeliktas@i59F5F5F7.versanet.de)
[07:24:22] *** Joins: Abrax (~Abrax@user/abrax)
[07:24:49] *** Quits: adeliktas (~adeliktas@i59F52F0C.versanet.de) (Ping timeout: 256 seconds)
[07:24:49] *** adeliktas5 is now known as adeliktas
[07:25:13] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[07:25:24] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[07:25:31] *** Quits: Abrax (~Abrax@user/abrax) (Client Quit)
[07:27:57] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 240 seconds)
[07:30:40] *** Joins: vicfred (~vicfred@user/vicfred)
[07:32:29] *** Joins: delvian (~delvian@41.13.243.144)
[07:34:43] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[07:34:54] *** Quits: Vonter (~Vonter@user/vonter) (Read error: Connection reset by peer)
[07:35:22] *** Joins: Abrax (~Abrax@user/abrax)
[07:35:25] *** Joins: lalitmee_ (~lalitmee@180.94.32.171)
[07:35:36] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Remote host closed the connection)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:17] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 240 seconds)
[07:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:43] *** Joins: Vonter (~Vonter@user/vonter)
[07:36:47] *** Quits: Guest42 (~Guest42@pool-96-253-74-73.rcmdva.fios.verizon.net) (Quit: Client closed)
[07:37:27] *** Joins: Barones (~Barones@2804:7f3:888b:7e76:ba4d:15e6:5660:6b92)
[07:37:50] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[07:38:11] *** Joins: jaggz (~jaggz@user/jaggz)
[07:38:36] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Remote host closed the connection)
[07:38:57] <jaggz> anyone know how to make a cameras npz file from a bunch of images?
[07:39:02] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[07:39:15] <jaggz> this requires that file: https://github.com/Totoro97/NeuS
[07:40:42] <aphysically> jinsun: I feel like I've found a lot of LSP bugs in AoC related stuf
[07:40:55] <aphysically> I wonder if that's because of the tendency to write solutions script-style where everything is at the global level
[07:41:21] <aphysically> this means the type checker has a bit more complicated interdependence than in normal code that has well designed isolated functions (which have to be annotated!)
[07:41:25] *** Joins: jazzy2 (~jaziz@user/jaziz)
[07:41:35] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Max SendQ exceeded)
[07:41:46] <aphysically> and also the tendency of AoC solutions to be lightly golfed a bit combines to tease out some odd bugs
[07:42:03] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[07:42:44] <aphysically> I found https://github.com/python/mypy/issues/11807 when someone shared their weird way to do rotation code
[07:44:50] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[07:44:54] *** Joins: jazzy3 (~jaziz@user/jaziz)
[07:45:02] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[07:45:04] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Remote host closed the connection)
[07:45:13] *** Quits: JingleJazzy (~jaziz@user/jaziz) (Ping timeout: 256 seconds)
[07:45:25] *** Seto_Kaiba is now known as Hunterkll
[07:48:17] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[07:48:36] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Remote host closed the connection)
[07:48:59] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[07:49:38] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Ping timeout: 260 seconds)
[07:49:38] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[07:50:46] *** Joins: jazzy2 (~jaziz@user/jaziz)
[07:51:25] *** Quits: Adrixan_ (~Adrixan@218.72.75.34.bc.googleusercontent.com) (Quit: ZNC - https://znc.in)
[07:52:36] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Remote host closed the connection)
[07:54:17] *** Quits: jazzy3 (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[07:58:17] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Quit: ZNC - https://znc.in)
[07:59:22] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:00:28] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[08:01:32] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[08:01:46] *** Parts: softwarewolf (~softwarew@user/softwarewolf) ()
[08:01:56] *** Joins: bancroft (~bancroft@142.162.53.67)
[08:03:25] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-98c0-b8e6-c470-1237.res6.spectrum.com) (Read error: Connection reset by peer)
[08:04:01] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[08:04:41] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[08:05:02] *** Joins: vicfred (~vicfred@user/vicfred)
[08:05:20] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[08:06:01] *** Parts: bancroft (~bancroft@142.162.53.67) ()
[08:06:23] *** Quits: sreve (~quassel@p54a70b5a.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[08:06:45] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 256 seconds)
[08:07:04] *** Joins: sreve (~quassel@p54a71e15.dip0.t-ipconnect.de)
[08:10:16] *** Joins: rvalue (~rvalue@user/rvalue)
[08:10:27] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[08:10:37] *** Quits: tdsmith (~tdsmith@kvm.kumokasumi.org) (Ping timeout: 240 seconds)
[08:11:40] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Remote host closed the connection)
[08:11:49] *** Joins: tdsmith (~tdsmith@kvm.kumokasumi.org)
[08:12:01] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[08:12:08] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[08:12:17] *** Quits: delvian (~delvian@41.13.243.144) (Ping timeout: 240 seconds)
[08:14:32] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 240 seconds)
[08:14:43] *** Joins: rvalue- (~rvalue@user/rvalue)
[08:16:19] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[08:16:50] *** rvalue- is now known as rvalue
[08:20:32] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[08:23:40] *** Joins: debayer (~debayer@75.115.113.138)
[08:25:50] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[08:28:57] *** Quits: debayer (~debayer@75.115.113.138) (Ping timeout: 240 seconds)
[08:30:35] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[08:31:44] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[08:31:57] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[08:33:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[08:34:11] *** Joins: fikran (~fikran@user/fikran)
[08:34:54] *** Quits: hqdruxn08__ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 260 seconds)
[08:35:45] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Remote host closed the connection)
[08:36:05] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[08:39:23] *** Quits: cozmo (~user@c-73-235-114-131.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[08:40:28] *** Joins: cozmo (~user@c-73-235-114-131.hsd1.ca.comcast.net)
[08:43:14] *** Joins: debayer (~debayer@75.115.113.138)
[08:43:40] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Remote host closed the connection)
[08:44:05] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[08:47:37] *** Quits: debayer (~debayer@75.115.113.138) (Ping timeout: 240 seconds)
[08:49:17] *** Joins: AsenMx (~AsenMx@user/asenmx)
[08:49:57] *** Quits: derreck (~derreck@c-71-58-70-16.hsd1.pa.comcast.net) (Ping timeout: 240 seconds)
[08:52:22] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[08:53:20] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[08:55:14] <jinsun> aphysically: yeah, the type inference bugs are more likely to show up in the scripty kind of code, though finding mypy bugs is easier even in normal code, just that they are usually already known instead of new ones
[08:55:50] *** Quits: Maikel (~Maikel@130.61.63.136) (Quit: The Lounge - https://thelounge.chat)
[08:59:32] *** Joins: Maikel (~Maikel@130.61.63.136)
[09:00:46] *** Joins: junebug (~junebug@2600:1700:3db0:2540:7e3d:8fa5:5c6d:59cb)
[09:01:06] *** Quits: maplefinger (~maplefing@user/lindis) (Quit: happy satan, folks)
[09:01:37] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 240 seconds)
[09:02:13] *** Joins: AsenMx (~AsenMx@user/asenmx)
[09:02:29] <aphysically> jinsun: the last advent of code ended up being real trivial, not gonna clean up my solution just gonna go hang out with family https://bpa.st/NWQA
[09:02:36] <aphysically> cheers
[09:03:40] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Remote host closed the connection)
[09:04:06] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[09:05:31] *** Quits: lapno (~lapno@epm16.neoplus.adsl.tpnet.pl) (Quit: Leaving)
[09:06:54] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[09:08:47] *** Joins: debayer (~debayer@75.115.113.138)
[09:09:19] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:11:49] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[09:13:49] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[09:14:51] *** Joins: bayman (~bayman@c-73-15-245-176.hsd1.ca.comcast.net)
[09:20:10] *** Quits: lalitmee_ (~lalitmee@180.94.32.171) (Ping timeout: 260 seconds)
[09:21:40] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-38bb-375d-90ab-51e1.res6.spectrum.com) (Quit: jarthur)
[09:22:57] *** Quits: junebug (~junebug@2600:1700:3db0:2540:7e3d:8fa5:5c6d:59cb) (Ping timeout: 240 seconds)
[09:26:24] <aphysically> jinsun: kinda surprised python doesn't have a min+max finding function in stdlib
[09:26:49] <aphysically> I think numpy doesn't have one either which is more oof than python not having one
[09:28:47] *** Joins: upsala (~zcb@185.209.196.169)
[09:29:33] <jinsun> like min and max of a list at the same time? or like the local maxima and minima of a function?
[09:30:58] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[09:32:15] <jinsun> the latter is a bit too much specifc to numerical stuff, so not surprising it is not there in stdlib, numpy could have it I guess but I don't think it does, scipy has something for that though
[09:33:07] <bayman> I installed python3.10 via apt, update-alternatives to use 3.10 as default for python and now pip and apt is broken. how can I fix?
[09:34:33] *** Joins: delvian (~delvian@41.13.243.144)
[09:37:26] *** Joins: jmd (~user@de.cellform.com)
[09:38:10] <dodo> bayman: make 3.9 the default again? how do you know they are broken anyway?
[09:40:05] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[09:40:16] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[09:40:49] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 256 seconds)
[09:41:11] <bayman> dodo: https://bpa.st/DKCA
[09:48:21] *** Joins: parv (~quass@user/parv)
[09:51:53] *** Quits: cthulchu (~Cthulchu@184-090-172-137.res.spectrum.com) (Ping timeout: 250 seconds)
[09:52:50] *** Joins: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net)
[09:52:53] *** Joins: bluedust (~bluedust@103.148.21.40)
[09:56:57] *** Quits: kill (~killown@user/killown) (Ping timeout: 240 seconds)
[09:56:58] *** Joins: killown (~killown@user/killown)
[09:57:02] *** Quits: Barones (~Barones@2804:7f3:888b:7e76:ba4d:15e6:5660:6b92) (Remote host closed the connection)
[09:57:12] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[09:58:04] *** jazzy2 is now known as JingleJazzy
[09:59:17] *** Quits: bluedust (~bluedust@103.148.21.40) (Remote host closed the connection)
[10:00:09] *** Joins: manti7 (~manti7@176.10.104.94)
[10:02:23] *** Quits: jfcaron (~jfcaron@192.252.229.166) (Quit: jfcaron)
[10:04:02] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[10:08:08] *** Joins: vicfred (~vicfred@user/vicfred)
[10:08:46] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[10:09:01] *** Quits: xaltsc (~xaltsc@user/xaltsc) (Ping timeout: 250 seconds)
[10:10:37] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Ping timeout: 240 seconds)
[10:10:44] *** Quits: slisnake (~slisnake@82.102.25.12) (Ping timeout: 268 seconds)
[10:11:42] *** Joins: jazzy2 (~jaziz@user/jaziz)
[10:12:39] *** Joins: slisnake (~slisnake@82.102.25.13)
[10:13:21] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[10:13:35] <aphysically> jinsun: min and max at the same time, since it's faster performance wise
[10:13:41] <aphysically> I would expect something like that to be in numpy
[10:13:59] *** Joins: azzazzel (~qwerty@2804:c30:c24d:f101:3b07:beff:afc7:2ff4)
[10:14:03] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[10:14:37] *** Quits: JingleJazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[10:14:49] *** jazzy2 is now known as JingleJazzy
[10:15:41] <dodo> bayman: yeah, switch to the previous python
[10:16:36] *** Joins: cdown (~cdown@163.114.131.1)
[10:21:13] *** Quits: zepolen_ (~zepolen@ppp-94-66-223-200.home.otenet.gr) (Ping timeout: 268 seconds)
[10:23:19] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[10:23:57] *** Joins: Mattiaslndstrm (~Mattiasln@m37-2-42-97.cust.tele2.se)
[10:24:03] *** Quits: Mattiaslndstrm (~Mattiasln@m37-2-42-97.cust.tele2.se) (Client Quit)
[10:27:12] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[10:27:45] <jinsun> aphysically: hmm yeah would be good to have in the stdlib itself actually, especiaily for iterables that can be exhausted by either min or max so can't even use min and max one after the other
[10:28:05] <aphysically> ya true
[10:28:13] *** Joins: agonhajdari (~textual@user/agonhajdari)
[10:30:05] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:31:07] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:20d3:68ba:3cb3:577e) (Quit: Leaving)
[10:32:21] *** Quits: delvian (~delvian@41.13.243.144) (Quit: Leaving)
[10:36:12] *** Quits: nomic (~nomic@85.203.46.91) (Quit: Leaving)
[10:36:13] <jinsun> numpy can do both together in one function call, with np.quantile(array, (0, 1)), no sure if it is actually doing that in one loop or just doing multiple C loops internally, it is too fast to notice for small inputs
[10:36:31] *** Joins: botfather (~botfather@shell1.dds.nl)
[10:36:32] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:c0e5:e221:e934:5fac)
[10:37:01] <jinsun> but that needs an extra step for arbitrary iterables, they have to be conveerted to array
[10:39:12] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[10:40:23] *** Quits: lethu (~lethu@user/lethu) (Remote host closed the connection)
[10:41:27] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[10:42:03] *** Quits: debayer (~debayer@75.115.113.138) (Remote host closed the connection)
[10:42:22] *** Quits: azzazzel (~qwerty@2804:c30:c24d:f101:3b07:beff:afc7:2ff4) (Quit: WeeChat 2.8)
[10:42:53] *** Joins: debayer (~debayer@75.115.113.138)
[10:43:32] *** Joins: fikran (~fikran@user/fikran)
[10:45:02] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[10:45:20] *** Joins: lethu (~lethu@user/lethu)
[10:49:11] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[10:49:25] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[10:49:40] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[10:53:00] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:53:16] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[10:53:21] *** Joins: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[10:53:43] *** Joins: seednode (~seednode@user/seednode)
[10:57:32] *** Quits: modlin (modlin@user/modlin) (Ping timeout: 240 seconds)
[11:01:17] *** Joins: By3way (~byeway@2001:448a:50e0:5c78:e3d:16e9:ed06:b058)
[11:04:02] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[11:04:45] *** Joins: delvian (~delvian@41.13.228.22)
[11:07:40] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[11:11:49] *** Quits: cozmo (~user@c-73-235-114-131.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[11:12:11] *** Quits: bayman (~bayman@c-73-15-245-176.hsd1.ca.comcast.net) ()
[11:12:54] *** Joins: bluedust (~bluedust@103.148.21.40)
[11:13:28] *** Joins: cozmo (~user@c-73-235-114-131.hsd1.ca.comcast.net)
[11:14:46] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Quit: Leaving)
[11:17:43] *** Quits: bluedust (~bluedust@103.148.21.40) (Ping timeout: 256 seconds)
[11:20:32] *** Joins: bluedust (~bluedust@103.148.21.40)
[11:23:18] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[11:25:40] *** Joins: han-solo (~han-solo@user/han-solo)
[11:26:13] *** Joins: humbertowoody (~humbertow@187.202.201.225)
[11:30:15] *** Quits: julia (~quassel@user/julia) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[11:30:54] *** Quits: humbertowoody (~humbertow@187.202.201.225) (Ping timeout: 268 seconds)
[11:30:55] *** Joins: julia (~quassel@user/julia)
[11:31:30] *** Joins: humbertowoody (~humbertow@187.202.201.225)
[11:33:15] *** Joins: grooverman_ (~grooverma@177.102.117.95)
[11:33:31] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[11:35:10] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[11:35:13] *** Quits: grooverman (~grooverma@177.102.119.40) (Ping timeout: 268 seconds)
[11:35:20] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:7e6d:6d3f:19f1:f1f6)
[11:35:41] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[11:36:27] *** Quits: humbertowoody (~humbertow@187.202.201.225) (Ping timeout: 268 seconds)
[11:36:52] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[11:36:57] *** Joins: humbertowoody (~humbertow@187.202.201.225)
[11:38:07] *** Quits: debayer (~debayer@75.115.113.138) (Ping timeout: 256 seconds)
[11:38:48] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[11:39:05] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[11:40:11] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[11:41:17] *** Quits: humbertowoody (~humbertow@187.202.201.225) (Ping timeout: 240 seconds)
[11:42:25] *** Joins: elderK (uid205007@id-205007.helmsley.irccloud.com)
[11:45:04] *** Parts: elderK (uid205007@id-205007.helmsley.irccloud.com) ()
[11:45:06] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[11:45:58] *** Quits: ckdCreations (~ckdCreati@147.55.133.136) (Read error: Connection reset by peer)
[11:46:03] *** Anna_de_Codorniu is now known as Navidad
[11:46:17] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Ping timeout: 240 seconds)
[11:46:20] *** Joins: ckdCreations (~ckdCreati@2607:fb90:b2d9:e1e:f5a4:286e:ece0:4fd0)
[11:47:05] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[11:47:55] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[11:48:31] *** Joins: slav0nic (slav0nic@python.su)
[11:48:42] *** Joins: ano (~ano@user/ano)
[11:56:47] *** Joins: alzgh (~alzgh@user/alzgh)
[12:01:28] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[12:03:26] *** Quits: delvian (~delvian@41.13.228.22) (Ping timeout: 252 seconds)
[12:04:48] *** Joins: humbertowoody (~humbertow@187.202.201.225)
[12:07:22] *** Joins: djapo (~archangel@user/djapo)
[12:08:57] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[12:09:45] *** Quits: humbertowoody (~humbertow@187.202.201.225) (Ping timeout: 268 seconds)
[12:10:06] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[12:10:17] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[12:11:09] *** Joins: bloody (~bloody@user/bloody)
[12:18:55] *** Quits: cozmo (~user@c-73-235-114-131.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[12:18:57] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[12:19:49] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[12:20:23] *** Joins: palasso (~palasso@user/palasso)
[12:20:36] *** Joins: cozmo (~user@c-73-235-114-131.hsd1.ca.comcast.net)
[12:22:37] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[12:22:50] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[12:23:48] *** Joins: delvian (~delvian@41.13.228.22)
[12:24:41] *** Joins: Termux (puracan@user/termux)
[12:28:19] *** Parts: Termux (puracan@user/termux) (;/)
[12:28:40] *** Joins: zepolen_ (~zepolen@ppp-94-66-223-200.home.otenet.gr)
[12:29:21] *** Quits: cozmo (~user@c-73-235-114-131.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[12:29:53] *** Joins: badsektor (~badsektor@user/badsektor)
[12:30:21] *** Joins: Enitin (~Enitin@82.102.22.86)
[12:30:55] *** Joins: cozmo (~user@c-73-235-114-131.hsd1.ca.comcast.net)
[12:32:37] *** Joins: TuxicPolar (~irc@user/TuxicPolar)
[12:35:01] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[12:36:19] <By3way> hello everyone, in python 3.10 async.get_event_loop() is deprecated. so, what you guys suggest to run async function in sync?
[12:36:45] <By3way> does asyncio.run() does the same thing?
[12:37:08] *** Joins: goldcrest (~goldcrest@89.238.143.232)
[12:37:43] <deniska> By3way: you can't call asyncio.run() if the event loop is already running, it's "start the whole thing" function
[12:38:56] <By3way> how i run async function inside sync function?
[12:39:19] *** Joins: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy)
[12:39:47] *** Joins: ItsLandon (~ItsLandon@2601:1c0:6d03:1cb0:7511:87a4:10cd:6552)
[12:40:07] <deniska> if it's the entry point async function, asyncio.run, if it's not the entry point, it's best to reorganize the code so that only async functions call other async functions
[12:40:53] <deniska> By3way: the docs suggest to use asyncio.get_running_event_loop instead of asyncio.get_event_loop
[12:42:18] <ItsLandon> I have a string such as foo!=bar and I'd like to split it into {"key": "foo", "comparitor": "!=", "value": "bar"}. The lengths of the key, comparitor, and value are not guaranteed to be the same across comparisons, but I will know what the keys and comparitors could be at the time of writing.
[12:42:19] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[12:42:48] <ItsLandon> Is there something nice that would facilitate that?
[12:43:41] <ItsLandon> I was thinking of splitting based on the comparitor
[12:44:27] <deniska> ItsLandon: can they be nested? Or always just these 3 items?
[12:44:46] <ItsLandon> They will always be 3 items
[12:45:16] <deniska> ItsLandon: regex then is a tempting solution
[12:45:29] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[12:48:04] <deniska> ItsLandon: `m = re.match(r'(\w+)(!=|>|<|==)(\w+)', 'foo>bar')`, then m[1] is the key, m[2] is the comparator, m[3] is the value
[12:48:13] <deniska> ItsLandon: (or it didn't match, then m is None)
[12:48:27] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[12:50:04] *** Joins: rsx (~dummy@ppp-188-174-158-25.dynamic.mnet-online.de)
[12:51:04] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[12:51:26] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:52:53] *** Joins: fikran (~fikran@user/fikran)
[12:53:53] *** Joins: agonhajdari (~textual@user/agonhajdari)
[12:54:01] <ItsLandon> deniska: I have quite a few comparitors haha. is it possible to turn an fstring into an rstring? I'd like to do f'(\w+)({"|".join(comparitors)}(\w+)' because that will be significantly cleaner
[12:54:38] <deniska> ItsLandon: re.escape
[12:55:12] <Repiphany> re.split can do the same thing and you wouldn't need to capture the groups on each side of the comparitor fwiw
[12:55:33] <deniska> ItsLandon: ("r-string" doesn't produce any special kind of string, it's still a str literal, it just doesn't do special things to \ inside the literal)
[12:57:16] *** Joins: csm3105 (~csm3105@static-90-220-24-46.ipcom.comunitel.net)
[12:59:11] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[12:59:33] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[12:59:48] <ItsLandon> Thanks. I'll try these things out
[13:00:17] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 240 seconds)
[13:00:39] *** Joins: magla (~gelignite@55d48f64.access.ecotel.net)
[13:01:01] *** Joins: kosh (~kosh@user/kosh)
[13:01:37] *** Parts: jmd (~user@de.cellform.com) (ERC (IRC client for Emacs 27.1))
[13:04:27] *** Quits: bluedust (~bluedust@103.148.21.40) (Remote host closed the connection)
[13:05:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[13:07:56] *** Joins: nomic (~nomic@85.203.46.91)
[13:08:52] *** Quits: the_lanetly_052 (~the_lanet@194.135.154.182) (Remote host closed the connection)
[13:09:55] *** Quits: zepolen_ (~zepolen@ppp-94-66-223-200.home.otenet.gr) (Ping timeout: 250 seconds)
[13:11:11] *** Joins: monkeycoder (~monkeycod@121.121.102.16)
[13:11:44] <monkeycoder> print('merry christmas everyone!') :D
[13:11:56] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[13:12:35] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[13:12:37] *** Quits: By3way (~byeway@2001:448a:50e0:5c78:e3d:16e9:ed06:b058) (Quit: Leaving)
[13:14:05] <ItsLandon> lmao deniska turns out re.escape was 100% necessary lol. \(==\|>>\|<<\|>=\|<=\|\~\|\*\|!=\|>>\|<<\|>=\|<=\|!\~\|!\*\) there are some duplicates, but I suspect it won't affect it at all.
[13:14:10] *** Quits: Themis3000 (~Thunderbi@user/themis3000) (Quit: Themis3000)
[13:14:43] *** Joins: zepolen_ (~zepolen@ppp-94-66-223-200.home.otenet.gr)
[13:14:52] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:14:54] <deniska> ItsLandon: no, you need to re.escape each individual comparator, not the resulting string
[13:15:03] <deniska> ItsLandon: you want to keep | as is
[13:15:43] <ItsLandon> Yeah, I know. print(re.escape(f"({'|'.join(additive_comparitors)}|{'|'.join(subtractive_comparitors)})"))
[13:16:17] <ItsLandon> Oh wait, maybe I'm still misunderstanding
[13:16:28] <deniska> ItsLandon: yeah, re.escape need to be called on each comparator
[13:16:52] <deniska> re.escape(c) for c in additive_comparitors
[13:17:10] <deniska> probably don't put that much logic inside an f-string :)
[13:20:53] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[13:23:52] <ItsLandon> Excellent, thanks :)
[13:23:57] *** Quits: csm3105 (~csm3105@static-90-220-24-46.ipcom.comunitel.net) (Ping timeout: 240 seconds)
[13:26:01] <ItsLandon> Yeah, this is 100% what I was looking for. Thanks again
[13:26:03] *** Quits: ItsLandon (~ItsLandon@2601:1c0:6d03:1cb0:7511:87a4:10cd:6552) (Quit: Bye)
[13:26:32] *** Quits: demirok (~bell@user/demirok) (Quit: Leaving.)
[13:27:08] *** Joins: demirok (~bell@user/demirok)
[13:28:43] *** Quits: demirok (~bell@user/demirok) (Client Quit)
[13:31:54] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[13:34:09] *** Quits: alzgh (~alzgh@user/alzgh) (Ping timeout: 256 seconds)
[13:36:33] *** Joins: rajkosto (~rajkosto@109-92-198-239.dynamic.isp.telekom.rs)
[13:36:51] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[13:36:56] *** Quits: sreve (~quassel@p54a71e15.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[13:37:09] *** Joins: bluedust (~bluedust@103.148.21.40)
[13:37:12] *** Joins: sreve (~quassel@p54a70e2c.dip0.t-ipconnect.de)
[13:38:13] *** Quits: rsx (~dummy@ppp-188-174-158-25.dynamic.mnet-online.de) (Ping timeout: 240 seconds)
[13:38:15] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[13:39:03] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[13:39:08] *** Quits: onichomp (~onichomp@2806:264:4404:8137:4879:515b:55e6:5a91) (Ping timeout: 252 seconds)
[13:39:21] *** Joins: Deknos (~someone@user/menace)
[13:39:30] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[13:40:26] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Client Quit)
[13:40:54] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[13:44:07] *** Quits: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy) (Ping timeout: 268 seconds)
[13:45:17] *** Quits: rajkosto (~rajkosto@109-92-198-239.dynamic.isp.telekom.rs) (Ping timeout: 240 seconds)
[13:45:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[13:46:11] *** Quits: greenbigfrog (~greenbigf@ip5f5ad852.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[13:46:48] *** Joins: onichomp (~onichomp@177.231.43.15)
[13:48:47] *** Joins: rsx (~dummy@ppp-188-174-136-217.dynamic.mnet-online.de)
[13:49:35] *** Quits: esv (~esv@74.124.178.154) (Ping timeout: 256 seconds)
[13:52:02] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[13:52:44] *** Joins: rendar (~rendar@user/rendar)
[13:53:32] *** Joins: onichomp666 (~onichomp@177.231.43.15)
[13:53:33] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[13:53:41] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[13:54:57] *** Quits: onichomp (~onichomp@177.231.43.15) (Ping timeout: 240 seconds)
[13:54:58] *** Lord_of_Life_ is now known as Lord_of_Life
[13:56:57] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 240 seconds)
[13:58:25] *** Joins: rajkosto (~rajkosto@93-86-206-84.dynamic.isp.telekom.rs)
[13:58:26] *** Joins: georgios (~georgios@user/georgios)
[13:59:36] *** Joins: greenbigfrog (~greenbigf@ip5f5ad852.dynamic.kabel-deutschland.de)
[14:01:16] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:c5ff:e122:a0a:894e)
[14:01:36] *** Quits: rsx (~dummy@ppp-188-174-136-217.dynamic.mnet-online.de) (Ping timeout: 245 seconds)
[14:02:19] *** Joins: pepper (~pepper@user/pepper)
[14:03:19] *** Joins: rsx (~dummy@ppp-188-174-136-251.dynamic.mnet-online.de)
[14:03:37] *** Joins: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy)
[14:09:59] *** Quits: mat001 (~mat001@c-69-181-158-251.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[14:12:15] *** Quits: foul_owl (~kerry@94.140.8.107) (Ping timeout: 256 seconds)
[14:13:28] *** Joins: chilversc (~chilversc@user/chilversc)
[14:14:57] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:16:23] *** Quits: bluedust (~bluedust@103.148.21.40) (Remote host closed the connection)
[14:16:53] *** Quits: monkeycoder (~monkeycod@121.121.102.16) (Quit: leaving)
[14:18:16] *** Joins: Auron (~Auron956@user/auron)
[14:21:54] *** Joins: Xano (~Xano@host31-48-104-97.range31-48.btcentralplus.com)
[14:23:21] <Xano> Does pickle raise `RecursionError: maximum recursion depth exceeded while calling a Python object` not only when it encounters recursion, but also when the data structure it is pickling is simply too deep (because its own code is recursive, not because the data necessarily is)?
[14:23:32] *** Quits: sreve (~quassel@p54a70e2c.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[14:23:53] *** Joins: sreve (~quassel@p549d77df.dip0.t-ipconnect.de)
[14:23:59] <Xano> I'm pickling a massive cyclic graph but according the documentation pickle should be able to handle that
[14:24:53] <Xano> There are thousands of nodes, many of them with dozens of edges to other nodes, so in terms of depth I can understand pickle would trip over that
[14:26:26] *** Joins: Julian (~tos9@python/site-packages/Julian)
[14:26:37] *** Quits: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[14:26:56] *** Joins: foul_owl (~kerry@212.102.47.57)
[14:27:19] <nvz> just a half-baked thought but are you actually needing to do this? typically such manipulations of data are only necessary when they are to be transported
[14:27:37] *** Quits: rajkosto (~rajkosto@93-86-206-84.dynamic.isp.telekom.rs) (Ping timeout: 240 seconds)
[14:28:01] <nvz> that is, you can probably just dump the data more simply somewhere and only need to sterilize it when actually processing it again
[14:28:12] <Xano> I'm sending it to another process
[14:28:16] *** Quits: rsx (~dummy@ppp-188-174-136-251.dynamic.mnet-online.de) (Ping timeout: 245 seconds)
[14:28:21] <nvz> and its all being used then I guess
[14:28:35] *** Joins: sreve_ (~quassel@p54a71969.dip0.t-ipconnect.de)
[14:28:35] <Xano> Yep I can't reduce the data set, unfortunately
[14:28:36] <nvz> not just some data that may not be further used
[14:28:38] *** Quits: sreve (~quassel@p549d77df.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[14:28:51] <Xano> It's not huge, just complex
[14:29:27] <nvz> yeah I'm no expert in such things I just know all too well the going down the wrong rabbit hole feeling :D
[14:29:32] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[14:29:58] <nvz> winding up realizing you should've taken that left at alberquerque
[14:30:17] *** Quits: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) (Quit: Leaving.)
[14:30:27] <nvz> either way the solution is probably the same
[14:30:37] *** Quits: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy) (Ping timeout: 240 seconds)
[14:30:46] <nvz> your question is fairly simple on the surface.. wanting to know where the pickle breaks
[14:31:10] <nvz> so you kinda gotta step outside your larger problem and probably do up a simplest test case scenario with the pickling recursion
[14:31:58] <nvz> I never really pickled.. I use things like csv, json, yaml, for most things I do
[14:32:24] <nvz> I dont do a whole lot of IPC, just need to make data accessible by other programs or user redable
[14:32:51] *** Joins: MajorBiscuit (~MajorBisc@c-001-017-030.client.tudelft.eduvpn.nl)
[14:33:41] *** Joins: diamondbond (~diamondbo@175.157.180.98)
[14:34:19] <nvz> python doesn't handle recursion well in general really.. and perhaps you need to adjust your algorithm
[14:34:51] <nvz> the sys module controls recursion limits
[14:35:05] <nvz> but simply checking the limit or setting it higher may not solve your issue
[14:35:17] <nvz> you're just going too deep to be feasible likely
[14:35:36] <nvz> you'd need to avoid the recursive stacking and instead use a more iterating approach
[14:36:16] <nvz> depending on your methods of parallel processing, it may not even be more intensive
[14:37:41] *** Joins: lxwulf (~lxwulf@user/lxwulf)
[14:37:46] <nvz> sys.setrecursionlimit and sys.getrecursionlimit are the simplest answers
[14:37:59] <nvz> but as I say, that may not actually solve your more fundamental problem :P
[14:38:04] *** Quits: pepper (~pepper@user/pepper) (Quit: Leaving)
[14:38:53] *** Quits: fling (~fling@user/fling) (Ping timeout: 256 seconds)
[14:39:07] <lxwulf> does autocomplete not work in venv?... i use vscode
[14:40:08] <nvz> autocomplete?
[14:40:43] * nvz idly wonders if the Tail Recursion Exception issue was ever addressed in python
[14:43:50] <bjs> lxwulf: autocomplete sounds like a shell thing not a venv/Python thing (?)
[14:43:52] <nvz> cause ultimately you would either need some fancy lamda and/or yeild type exception handling if not an implementation of TRE
[14:44:19] <nvz> yeah I also use vscode and I'm not sure what they're referring to
[14:44:46] *** Joins: rexbinary_ (~rexbinary@user/rexbinary)
[14:44:47] <nvz> they vscode terminal is a bit fussy and vscode in general can be fussy on linux
[14:45:10] <nvz> I had to make many modifications to get things to work because they conflict with things my WM does and such
[14:45:17] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Ping timeout: 240 seconds)
[14:45:17] *** rexbinary_ is now known as rexbinary
[14:45:40] <bjs> nvz: tco was rejected for a variety of reasons, e.g. poor stack traces https://neopythonic.blogspot.com/2009/04/tail-recursion-elimination.html
[14:45:53] <nvz> yeah I was just reading that
[14:46:18] <nvz> https://code.activestate.com/recipes/474088-tail-call-optimization-decorator/
[14:46:18] <bjs> given Python has a variety of looping constructs there is less need for it, and in general tco becomes more powerful in the presence of other optimizations that turn things into tail calls
[14:46:27] <nvz> is ancient but is a proposed implementation
[14:47:43] <nvz> I am not very educated on these things.. I am entirely self taught dabbler when it comes to coding.. but when I hear things like Xano said, I know all too well the headache of painstakingly writing seemingly perfect code then having it choak on the data :P
[14:48:09] <nvz> more than likely they need to go back to the beginning and change their approach to as you say loop.. or iterate rather than recurse
[14:48:47] <lxwulf> bjs, so mean something false configured? =( i hate such things... i did everything what was documented and still linting or autocomplete doesnt work at all... i thought i can ask here but sorry for disturbing merry christmas for all of you =)
[14:48:51] <bjs> well Xano is using pickle, which is a recursive algorithm and will indeed choke if the object graph is too deeply nested
[14:48:59] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[14:49:43] <nvz> sounds to me like they are recursively pickling so they got recursion inside recursion
[14:50:07] <nvz> and if poorly implemented thats probably not even the extent of it.. you could have recursively recursive recursion
[14:50:09] <bjs> nvz: pickle can raise recursion error on a single pickle call to a very big object
[14:50:10] <nvz> heh
[14:50:22] <bjs> Xano: see https://docs.python.org/3/library/pickle.html#what-can-be-pickled-and-unpickled  note the comment about setrecursionlimit
[14:50:41] <nvz> well that was the gist of their question.. if it could simply fail on the pickle call itself due to its internal recursion
[14:50:55] *** Joins: rito_ (~rito_gh@45.112.243.69)
[14:51:03] <bjs> Yes it can
[14:51:25] *** Joins: awmv_username_ta (~awmv@2a02:21b0:644f:c181:4599:7a94:4d4d:f65)
[14:51:26] <bjs> (where "by itself" is "because you gave it an object that was more nested than the recursion limit")
[14:52:42] <nvz> well this is why I mentioned that at least for my needs I often just use csv, json, yaml and the like for object translation to pass data
[14:52:58] <nvz> json is probably less error prone, faster, and also builtin
[14:53:12] <bjs> well pickle is also fast and builtin :P
[14:53:48] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:c5ff:e122:a0a:894e) (Ping timeout: 268 seconds)
[14:54:01] <bjs> but pickle certainly has lots of caveats
[14:56:21] <nvz> I have no idea of the timing and multiprocessing concerns and such for their use case, but I am at a meta-level recognising the symptoms of a wrong approach :P
[14:56:30] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[14:56:34] <nvz> been there done that
[14:57:02] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[14:57:28] *** Joins: Klinda (~superleag@user/klinda)
[14:59:57] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[15:01:22] *** Quits: diamondbond (~diamondbo@175.157.180.98) (Read error: No route to host)
[15:01:42] *** Joins: diamondbond (~diamondbo@175.157.180.98)
[15:02:14] *** Joins: fikran (~fikran@user/fikran)
[15:02:21] *** Quits: diamondbond (~diamondbo@175.157.180.98) (Read error: Connection reset by peer)
[15:02:41] *** Quits: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 256 seconds)
[15:03:57] *** Quits: awmv_username_ta (~awmv@2a02:21b0:644f:c181:4599:7a94:4d4d:f65) (Ping timeout: 240 seconds)
[15:04:59] *** Quits: shokohsc (~shokohsc@lfbn-idf2-1-630-171.w86-246.abo.wanadoo.fr) (Quit: The Lounge - https://thelounge.chat)
[15:08:18] *** Joins: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com)
[15:08:21] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[15:08:23] *** Joins: csm3105 (~csm3105@static-90-220-24-46.ipcom.comunitel.net)
[15:11:00] *** Quits: lxwulf (~lxwulf@user/lxwulf) (Quit: Leaving)
[15:13:38] *** Joins: goldfish (~goldfish@user/goldfish)
[15:15:04] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[15:15:22] *** Quits: delvian (~delvian@41.13.228.22) (Ping timeout: 268 seconds)
[15:19:17] *** Quits: csm3105 (~csm3105@static-90-220-24-46.ipcom.comunitel.net) (Ping timeout: 240 seconds)
[15:21:40] *** Joins: Viewday110 (~Viewday@user/viewday)
[15:22:56] <nomic> how do i do if conditoin else: on one line
[15:23:11] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[15:23:11] *** Viewday110 is now known as Viewday11
[15:25:49] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 240 seconds)
[15:27:05] *** Quits: greenbigfrog (~greenbigf@ip5f5ad852.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[15:27:52] *** Joins: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[15:28:08] <nomic> y can i do
[15:28:09] <nomic> print("A") if a > b else print("B")
[15:28:18] <nomic> but i cant do
[15:28:19] <nomic>    pix0 = 1 if pix0 < 5 else pix0 = 0
[15:28:34] <sveinse> nomic: a = true_value if condition else false_value
[15:28:39] <nomic> SyntaxError: cannot assign to conditional expression
[15:28:49] *** Joins: greenbigfrog (~greenbigf@ip5f5ad852.dynamic.kabel-deutschland.de)
[15:28:56] <Repiphany> (x if y else b) is a ternary expression that evaluates to either x or b
[15:29:23] <nomic> i want if else on one line and be able to assign something
[15:29:48] <Repiphany> So you can assign with `var = (x if condition else b)`
[15:29:59] <sveinse> nomic: ^ se my code above
[15:30:06] <nomic> ook
[15:30:08] <nomic> will try that
[15:30:48] <Repiphany> `var = print("a") if a > b else print("b")` is the same thing except both prints evaluate to `None`
[15:31:05] *** Joins: debayer (~debayer@75.115.113.138)
[15:31:17] *** Joins: zer0bitz (~zer0bitz@196.244.192.54)
[15:31:20] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[15:31:27] <nomic>    pix0 = (1 if pix0 < 5 else 0)
[15:31:29] <nomic> k
[15:31:37] *** Joins: sidro (~sidro@86.121.200.249)
[15:31:57] *** Quits: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 240 seconds)
[15:33:08] *** Joins: shokohsc (~shokohsc@lfbn-idf2-1-630-171.w86-246.abo.wanadoo.fr)
[15:33:37] *** Quits: greenbigfrog (~greenbigf@ip5f5ad852.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[15:33:56] *** Quits: quasineutral (~quaisneut@user/quasineutral) (Quit: The Lounge - https://thelounge.chat)
[15:34:00] *** Joins: greenbigfrog (~greenbigf@ip5f5ad852.dynamic.kabel-deutschland.de)
[15:34:37] *** Joins: quasineutral (~quaisneut@user/quasineutral)
[15:35:48] *** Quits: Linux77 (~LinuMage@186.233.183.58) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[15:35:50] *** Quits: debayer (~debayer@75.115.113.138) (Ping timeout: 260 seconds)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:13] *** Joins: OCode (~OCode@user/Ocode)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:57] *** Joins: Viewday110 (~Viewday@user/viewday)
[15:37:04] *** Quits: AsenMx (~AsenMx@user/asenmx) (Remote host closed the connection)
[15:38:17] *** Quits: Oco[A]de (~OCode@user/Ocode) (Ping timeout: 240 seconds)
[15:38:34] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[15:38:35] *** Viewday110 is now known as Viewday11
[15:38:35] *** Joins: Oco[A]de (~OCode@user/Ocode)
[15:39:30] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[15:39:42] *** Joins: de-facto (~de-facto@user/de-facto)
[15:40:52] <nvz> nomic: https://book.pythontips.com/en/latest/ternary_operators.html
[15:41:03] *** Quits: sidro (~sidro@86.121.200.249) (Quit: Konversation terminated!)
[15:41:16] *** Quits: OCode (~OCode@user/Ocode) (Ping timeout: 268 seconds)
[15:41:53] <nvz> I believe it was C is the first language I learned shorthand ternary operators on..  a ? b : c
[15:42:19] <nvz> in Lua it is "a and b or c" and pretty sure similar logic works in python
[15:42:20] *** Joins: ntome (~ntome@user/ntome)
[15:42:22] <ntome> hi
[15:42:48] <ntome> is it possible with asyncio to wrap an already running process and its stdin/stdout?
[15:42:56] <leduyquang753> `a and b or c` is just a quirk.
[15:43:08] <ntome> rather thar calling asyncio.create_subprocess_exec
[15:44:46] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[15:45:09] *** Joins: jfcaron (~jfcaron@192.252.229.166)
[15:45:57] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[15:46:28] <nedbat> leduyquang753: definitely no one should be using and-or in python any more
[15:46:54] *** Joins: Enitin (~Enitin@82.102.22.86)
[15:48:19] <Xano> nvz, bjs Thanks! Yeah it's theoretically an infitinitely complex and large graph, and it's for a publicly available software package, so I might have to look for a different serialization algorithm that may not have depth limitations
[15:49:02] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[15:49:05] *** Joins: frost (~frost@user/frost)
[15:49:14] *** Quits: goldcrest (~goldcrest@89.238.143.232) (Quit: Leaving)
[15:52:11] <nvz> you may also want to consider another language..
[15:52:32] <nvz> you can always call bits in a different language
[15:53:34] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (Ping timeout: 260 seconds)
[15:53:41] <nedbat> Xano: you might want to avoid pickle for public code anyway
[15:54:22] <Xano> nedbat, For communication between processes?
[15:54:29] <nedbat> Xano: because it can be insecure
[15:54:44] <nedbat> Xano: it's very convenient, but you should only use it on trusted data
[15:55:55] *** Quits: Terexen (~terexen@user/terexen) (Remote host closed the connection)
[15:56:14] <nedbat> Xano: btw, dill might solve this problem
[15:56:25] *** Joins: bluedust (~bluedust@103.148.21.40)
[15:56:27] <Xano> nedbat, It's for trusted, internal data. I'm aware of the ability to execute unsafe code.
[15:56:35] <nedbat> ok, good
[15:57:16] <Xano> Using Dill right now and it's failing on this exact problem. Looks like this might be some of the standard Pickle code that's having difficulties with the data depth
[15:57:41] <nedbat> Xano: yeah, i didn't know if dill had a different approach to the recursion
[15:58:26] <Xano> As far as I can see Dill is mostly a Pickle wrapper to support additional types (which it does wonderfully)
[15:58:30] <nedbat> Xano: it might not be hard to convert your structure to an equivalent flatter structure
[15:59:00] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[15:59:29] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[15:59:43] *** Quits: badsektor (~badsektor@user/badsektor) (Remote host closed the connection)
[16:00:57] *** Joins: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[16:04:05] *** Joins: ano (~ano@user/ano)
[16:04:32] *** Quits: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com) (Ping timeout: 240 seconds)
[16:05:31] *** Joins: PJBoy (~PJBoy@user/pjboy)
[16:07:04] *** Joins: Viewday117 (~Viewday@user/viewday)
[16:07:20] *** Joins: aniketgm (~Aniket@49.36.109.81)
[16:07:47] <Xano> nedbat, That was plan B in case I was right :D
[16:08:15] <Xano> Thanks for the feedback :)
[16:08:26] *** Joins: dez (uid92154@user/dez)
[16:08:32] <Xano> I'm gonna prepare for our Christmas lunch
[16:08:37] *** Quits: greenbigfrog (~greenbigf@ip5f5ad852.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[16:08:38] <Xano> Happy holidays and happy JWST launch everyone!
[16:08:40] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[16:08:41] *** Viewday117 is now known as Viewday11
[16:10:04] *** Joins: greenbigfrog (~greenbigf@ip5f5ad852.dynamic.kabel-deutschland.de)
[16:10:25] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[16:11:47] *** Quits: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) (Quit: Leaving.)
[16:15:07] *** Joins: ice9 (~ice9@user/ice9)
[16:16:21] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 256 seconds)
[16:19:25] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[16:19:33] *** Quits: idontnee_ (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Read error: Connection reset by peer)
[16:21:58] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Ping timeout: 268 seconds)
[16:22:01] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Read error: Connection reset by peer)
[16:22:17] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[16:24:06] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[16:24:49] *** Quits: jfcaron (~jfcaron@192.252.229.166) (Quit: jfcaron)
[16:26:36] *** Quits: ice9 (~ice9@user/ice9) (Quit: Leaving)
[16:29:02] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[16:33:37] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 240 seconds)
[16:37:03] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[16:38:28] *** Quits: PJBoy (~PJBoy@user/pjboy) (Quit: Ping timeout: 252 seconds)
[16:38:54] *** Joins: PJBoy (~PJBoy@user/pjboy)
[16:39:27] *** Quits: bluedust (~bluedust@103.148.21.40) (Remote host closed the connection)
[16:39:34] *** Joins: mat001 (~mat001@c-69-181-158-251.hsd1.ca.comcast.net)
[16:41:37] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 240 seconds)
[16:42:48] *** Joins: mickey8 (~user@user/mickey)
[16:44:10] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Ping timeout: 268 seconds)
[16:44:44] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[16:45:32] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:45:40] *** Joins: mickey8 (~user@user/mickey)
[16:46:22] <sveinse> asyncio.create_task() won't immediately run the coro. What is a good way of ensuring it has started executing? Call asyncio.sleep(0) right after?
[16:50:54] <supakeen> You will have to assume that your event loop will execute it.
[16:50:56] <sveinse> E.g. is there an awaitable Task function that returns if a Task has started executing? I cannot seem to find any such thing
[16:50:58] <supakeen> (it will)
[16:51:45] <sveinse> supakeen: is it robust enough to sleep(0)? As in, is it safe to assume that will be the case?
[16:51:58] <supakeen> I don't know what the sleep(0) will add in this case.
[16:52:14] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[16:52:47] <sveinse> supakeen: I _assume_ it has added the coro to the waiting task list and that sleep(0) will iterate the waiting coro list. -- but it /is/ an assumption
[16:53:13] <supakeen> But if you want to make sure that it has 'started executing' you can have it trigger an event.
[16:53:22] <supakeen> That is indeed an assumption :)
[16:53:38] <sveinse> The alternative... exactly that... an explicit event
[16:54:06] <supakeen> It will add the coro to the list and execute it when there's time. The sleep inside the coro will only allow the loop to progress again at the point of that sleep.
[16:55:41] <sveinse> I suppose there might not be any guaranteed that the current task execution is even yielded on sleep(0). It could simply test for zero and simply return without revisiting the eventloop, right. And that would fail my assumption
[16:56:05] <supakeen> It won't but sure.
[16:56:34] <supakeen> Can I ask the why behind this? :)
[16:56:34] <Numerlor> if it's in an async context where you can await a sleep then you could await the task/coro
[16:57:16] <Numerlor> Otherwise I don't think you can really do it, as the event loop chooses how it checks the tasks the next time it gets control after the task is scheduled
[16:57:28] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Remote host closed the connection)
[16:57:41] <sveinse> Numerlor: I'm not wanting to await the completion of the coro; I want to await it having started
[16:59:17] *** Joins: mad_moses (~ps@2a02:810b:f3f:f0d0:d250:99ff:fe86:b052)
[16:59:25] <sveinse> But, after this chat here I'm convinced I shouldn't rely on this implicit behavior of asyncio.sleep() and rather use explicit events, even if it makes the code a bit bigger and messier.
[17:00:00] <supakeen> yap
[17:00:24] <supakeen> or some asynchronous queue or whatever you prefer, if this is some consumer/producer thing then there's better primitives out there
[17:00:54] *** Joins: cthulchu (~Cthulchu@184-090-172-137.res.spectrum.com)
[17:01:24] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[17:04:40] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[17:05:19] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:06:11] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[17:06:12] *** Joins: zeden (~zeden@user/zeden)
[17:06:37] *** Joins: Viewday118 (~Viewday@user/viewday)
[17:08:29] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[17:08:29] *** Viewday118 is now known as Viewday11
[17:08:50] *** Quits: p-i- (~Ohmu@2403:6200:8978:eb29:6901:831d:c87b:23e5) (Remote host closed the connection)
[17:09:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[17:10:50] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[17:11:16] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[17:11:35] *** Joins: fikran (~fikran@user/fikran)
[17:13:42] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[17:14:04] *** Joins: spithash (~spithash@user/spithash)
[17:15:13] *** Joins: bluedust (~bluedust@59.89.212.159)
[17:17:22] <ntome> is it possible with asyncio to wrap an already running process and its stdin/stdout? rather than calling asyncio.create_subprocess_exec
[17:17:36] *** Quits: naranja (~orange@user/orangeboxcutter) (Remote host closed the connection)
[17:17:53] *** Joins: naranja (~orange@user/orangeboxcutter)
[17:18:55] *** Quits: de-facto (~de-facto@user/de-facto) (Quit: See you around. 💤)
[17:19:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[17:20:00] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[17:24:25] *** Quits: Gerula (~Gerula@user/gerula) (Quit: Leaving)
[17:25:25] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[17:26:26] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Read error: Connection reset by peer)
[17:26:32] *** Joins: idontnee_ (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[17:27:38] *** Joins: blub1 (~slave_blo@pd9fd1418.dip0.t-ipconnect.de)
[17:27:47] <blub1> hello
[17:28:02] *** blub1 is now known as slave_blocker2
[17:28:11] *** Joins: delvian (~delvian@41.13.228.22)
[17:28:17] *** Quits: delvian (~delvian@41.13.228.22) (Client Quit)
[17:28:46] <slave_blocker2> i am having some issues whith my python project ...
[17:29:09] *** Joins: ethrl (uid524335@user/doforlove33)
[17:32:16] *** Joins: Macuser (~Macuser@2600:1003:b440:73a:bccf:a1dc:4e2a:e3fb)
[17:33:37] *** Quits: LuKaRo_ (~LuKaRo@p5dedaa53.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[17:35:32] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[17:35:35] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[17:35:36] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[17:35:52] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[17:36:04] *** Joins: Noisytoot (~noisytoot@sourcehut/user/noisytoot)
[17:37:06] <aniketgm> https://dontasktoask.com
[17:37:26] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[17:37:40] *** Joins: allyouneedislove (~ethereal@user/doforlove33)
[17:37:58] <slave_blocker2> https://pastebin.com/BRx5PEhr
[17:38:19] <supakeen> ntome: a process that you started as a child of your process or an arbitrary process?
[17:39:09] <slave_blocker2> this comes from : https://raw.githubusercontent.com/slave-blocker/voider_2/main/voider_2/clients_deamon.py
[17:39:16] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[17:39:38] <aniketgm> slave_blocker2: file.close is not required. 'with' takes care of that.
[17:40:04] <slave_blocker2> oh thx
[17:41:29] <slave_blocker2> so for some reason, the processes that are spawn die after a while
[17:41:45] <slave_blocker2> and i dont know why
[17:42:09] <slave_blocker2> well more accurately the threads die off.
[17:43:06] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[17:43:43] *** Quits: Throgkt (~Throgkt@user/throgkt) (Quit:  )
[17:44:17] <slave_blocker2> so the hacky way i just implemented was to check if /proc/$(Thread_ID) exists for any of the threads. And if some of them does not exist the main process starts anew...
[17:45:13] *** Quits: rito_ (~rito_gh@45.112.243.69) (Quit: Leaving)
[17:46:20] <slave_blocker2> how do i manage the threads?
[17:47:32] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[17:48:00] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[17:48:19] *** Joins: agonhajdari (~textual@user/agonhajdari)
[17:48:49] *** Quits: martums (~martums@user/martums) (Read error: Connection reset by peer)
[17:49:29] *** Joins: LuKaRo (~LuKaRo@p5dedaa53.dip0.t-ipconnect.de)
[17:49:40] *** Joins: martums (~martums@user/martums)
[17:50:15] <slave_blocker2> I guess how do i check if a thread is still alive? And if not restart it?
[17:50:57] *** Quits: magla (~gelignite@55d48f64.access.ecotel.net) (Quit: Stay safe!)
[17:52:26] *** Quits: idontnee_ (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Read error: Connection reset by peer)
[17:52:32] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[17:57:17] *** Quits: Macuser (~Macuser@2600:1003:b440:73a:bccf:a1dc:4e2a:e3fb) (Ping timeout: 240 seconds)
[17:59:17] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:7e6d:6d3f:19f1:f1f6) (Ping timeout: 240 seconds)
[18:00:20] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[18:00:33] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:6fd:5920:5ca6:e627)
[18:01:53] *** Quits: aniketgm (~Aniket@49.36.109.81) (Read error: No route to host)
[18:05:09] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 256 seconds)
[18:06:21] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Quit: beastDivision)
[18:09:19] <ntome> supakeen: child of my process
[18:09:32] <ntome> started with pty.fork()
[18:09:35] *** Joins: junebug (~junebug@2600:1700:3db0:2540:dac5:ce6c:3011:414c)
[18:09:47] *** Joins: ErkiS (~opera@85.253.137.74.cable.starman.ee)
[18:11:35] *** Joins: mickey8 (~user@user/mickey)
[18:13:02] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 252 seconds)
[18:15:22] <ErkiS> I'm having great difficulty getting good logging output from pytest. Using anything but a root logger gives no output at all (even though I am using --capture=tee-sys).
[18:15:26] <ErkiS> fine, I can use the root logger.. But when I have several test files, then they're run in parallel in the same process, and since I have a custom formatter for each test, all tests end up using the formatter of the last test launched.
[18:15:29] <ErkiS> how are loggers supposed to be used in pytest?
[18:16:15] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[18:17:14] *** Joins: onichomp (~onichomp@177.231.43.15)
[18:17:57] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: btc donations: bc1qt3chy4rqtzjny2h7qt47cy7nmu6th9sr66wa02)
[18:18:57] *** Quits: onichomp666 (~onichomp@177.231.43.15) (Ping timeout: 240 seconds)
[18:19:29] *** Joins: xaltsc (~xaltsc@user/xaltsc)
[18:22:09] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 256 seconds)
[18:22:20] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-71e3-edb6-520a-8c68.res6.spectrum.com)
[18:22:55] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[18:22:58] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[18:23:36] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[18:23:36] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[18:23:36] *** finn_elija is now known as FinnElija
[18:24:54] *** Quits: allyouneedislove (~ethereal@user/doforlove33) (Quit: WeeChat 2.8)
[18:25:08] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[18:25:14] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:29:06] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[18:30:19] *** Joins: delvian (~delvian@41.13.224.164)
[18:32:15] *** Joins: Throgkt (~Throgkt@user/throgkt)
[18:32:57] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 240 seconds)
[18:32:59] *** Joins: p-i- (~Ohmu@2403:6200:8978:eb29:a19b:c4d4:1e43:9f1f)
[18:36:57] *** Quits: junebug (~junebug@2600:1700:3db0:2540:dac5:ce6c:3011:414c) (Ping timeout: 240 seconds)
[18:37:17] *** Quits: JingleJazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[18:37:49] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[18:37:56] *** Joins: nomic2 (~nomic@85.203.46.91)
[18:38:44] *** Joins: junebug (~junebug@2600:1700:3db0:2540:f803:8a00:50b0:e441)
[18:39:01] *** Quits: nomic (~nomic@85.203.46.91) (Ping timeout: 240 seconds)
[18:39:08] *** nomic2 is now known as nomic
[18:40:12] *** Quits: bluedust (~bluedust@59.89.212.159) (Remote host closed the connection)
[18:42:10] <rindolf> ErkiS: hi, any luck? also see https://blog.codinghorror.com/learn-to-read-the-source-luke/
[18:42:22] *** Joins: leitz (~LeamHall@072-182-158-027.res.spectrum.com)
[18:43:41] *** Quits: Dotz0cat (~Dotz0cat@75.90.45.123) (Ping timeout: 245 seconds)
[18:47:36] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[18:47:54] <ErkiS> rindolf: no luck
[18:48:01] <supakeen> ntome: You could likely wrap the file descriptors you have so you can at least treat those as streams (as long as nothing else touches them). You won't get the pretty process object around it.
[18:48:37] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[18:48:42] <leitz> If dataclass A has a string attribute 's', a dict attribute 'd', and a list attribute 'l', how could you pass a variable that would indicate the specifc attribute you wanted?
[18:48:57] *** Joins: Enitin (~Enitin@82.102.22.85)
[18:49:40] <slave_blocker2> I guess how do i check if a thread is still alive? And if not restart it?
[18:50:01] <slave_blocker2> https://pastebin.com/BRx5PEhr
[18:50:11] <greatgatsby> leitz, getattr(foo, "s")
[18:50:14] <rindolf> ErkiS: ah
[18:50:47] <greatgatsby> if foo is an instance of A
[18:51:46] <greatgatsby> or you could use A if they are class attributes
[18:54:34] <ntome> supakeen: how to wrap the file descriptors? asyncio.StreamReader is documented to be used for sockets
[18:54:50] <ntome> (and no constructor is documented anyway)
[18:55:29] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[18:55:32] <ntome> i thought about loop.add_reader but how to detect EOF or end-of-process?
[18:55:51] *** Quits: c10l (~c10l@user/c10l) (Quit: The Lounge - https://thelounge.chat)
[18:56:08] *** Joins: Roey (~Roey@user/Roey)
[18:56:40] *** Joins: c10l (~c10l@user/c10l)
[19:00:36] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 276 seconds)
[19:02:20] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[19:02:24] *** Joins: nicode (~nic@2607:f2c0:95f4:cc00:f012:6618:6643:90a4)
[19:05:16] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:06:54] *** Joins: Viewday113 (~Viewday@user/viewday)
[19:07:01] *** Joins: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com)
[19:08:30] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[19:08:30] *** Viewday113 is now known as Viewday11
[19:08:48] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[19:10:37] *** Joins: akk (~akk@174-28-122-47.albq.qwest.net)
[19:12:00] *** Quits: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com) (Quit: ThePhilgrim)
[19:12:19] *** Joins: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com)
[19:13:07] *** Quits: cozmo (~user@c-73-235-114-131.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[19:14:18] *** Navidad is now known as Anna_de_Codorniu
[19:14:23] *** Anna_de_Codorniu is now known as Navidad
[19:14:41] *** Joins: cozmo (~user@c-73-235-114-131.hsd1.ca.comcast.net)
[19:14:41] *** Joins: schumaml (~schumaml@p200300e2ef1de00053c1821a43d17d29.dip0.t-ipconnect.de)
[19:15:50] <leitz> greatgatsby, this is what I'm trying to do. The "attr" bit seems to fail.   https://bpa.st/WAVA
[19:16:17] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:16:45] *** Joins: bluedust (~bluedust@59.89.212.159)
[19:17:47] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[19:17:47] <han-solo> what is `self.attr` ?
[19:18:14] <leitz> Added the error:   https://bpa.st/5LCQ
[19:18:23] <han-solo> maybe you meant `attr_type.append(..)` and `attr_type[key]` etc ?
[19:18:49] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[19:18:50] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[19:19:46] <leitz> han-solo, the attribute name gets passed in, lemme update the full code so it has context.
[19:19:57] *** Parts: ibs (ibs@xow.se) ()
[19:20:56] *** Joins: fikran (~fikran@user/fikran)
[19:21:33] *** Quits: AM (~techman@213.216.210.195) (Read error: Connection reset by peer)
[19:22:15] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[19:22:39] <leitz> Person class:   https://github.com/LeamHall/CharacterBible/blob/full_person_builder/person/person.py
[19:22:46] <leitz> Test I'm working on:   https://github.com/LeamHall/CharacterBible/blob/full_person_builder/test/test_person.py
[19:23:49] <han-solo> may i ask why are you using `self.attr` ? because there is not `attr` attribute in your `Person` class
[19:23:52] *** Quits: c10l (~c10l@user/c10l) (Quit: The Lounge - https://thelounge.chat)
[19:24:17] *** Quits: justm3 (~Username@82-171-42-20.fixed.kpn.net) (Ping timeout: 240 seconds)
[19:24:24] *** Joins: justm3 (~Username@82-171-42-20.fixed.kpn.net)
[19:25:12] *** Joins: zumba_addict (~zumba_add@2601:240:4500:8320:224:1dff:fec8:64f6)
[19:25:44] <leitz> attr is a variable passed into set_attr. That's what I'm trying to figure out, how to reference an attribute like that.
[19:27:10] <han-solo> yeah, as greatgatsby suggested, you got the attribute with the `getattr(self, attr)` assuming there is an attribute in the class by the name you pass as attr
[19:27:19] *** Joins: AM (~techman@213.216.209.136)
[19:27:24] <han-solo> now you can use that, instead of `self.attr` right ?
[19:28:55] *** Joins: aniketgm (~Aniket@49.36.109.81)
[19:29:10] <han-solo> leitz: https://bpa.st/DOVQ
[19:29:57] *** Quits: justm3 (~Username@82-171-42-20.fixed.kpn.net) (Ping timeout: 240 seconds)
[19:30:01] *** Joins: justm3 (~Username@82-171-42-20.fixed.kpn.net)
[19:30:17] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 240 seconds)
[19:31:10] *** Joins: Gerula (~Gerula@user/gerula)
[19:31:55] <leitz> han-solo, thanks! You and greatgatsby solved the problem. Took the coffee a few minutes to kick in, and realize that attr_type was actually the object *and* attribute.
[19:35:49] *** Quits: delvian (~delvian@41.13.224.164) (Ping timeout: 256 seconds)
[19:36:52] *** Quits: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com) (Quit: ThePhilgrim)
[19:37:08] *** Joins: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com)
[19:37:26] *** Quits: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com) (Client Quit)
[19:38:09] *** Joins: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com)
[19:38:36] *** Quits: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com) (Client Quit)
[19:38:49] *** Joins: rsx (~dummy@ppp-188-174-137-79.dynamic.mnet-online.de)
[19:39:23] *** Quits: moog (~moog@107.77.244.157) (Remote host closed the connection)
[19:39:43] *** Joins: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com)
[19:39:49] *** Joins: c10l (~c10l@user/c10l)
[19:39:57] *** Quits: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com) (Client Quit)
[19:41:33] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Read error: Connection reset by peer)
[19:41:39] *** Joins: idontnee_ (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[19:42:38] *** Joins: onichomp666 (~onichomp@2806:264:4404:81d9:604e:48fe:c10c:4320)
[19:43:02] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[19:43:57] *** Quits: onichomp (~onichomp@177.231.43.15) (Ping timeout: 240 seconds)
[19:46:01] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (Ping timeout: 256 seconds)
[19:48:17] *** Joins: Noisytoot (~noisytoot@sourcehut/user/noisytoot)
[19:48:33] *** Joins: nichlas (uid374954@id-374954.uxbridge.irccloud.com)
[19:50:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[19:51:05] *** Joins: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com)
[19:51:14] *** Quits: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com) (Client Quit)
[19:51:46] *** Joins: maplefinger (~maplefing@user/lindis)
[19:55:20] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 252 seconds)
[19:56:11] *** Quits: ethrl (uid524335@user/doforlove33) (Quit: Connection closed for inactivity)
[19:57:22] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[20:03:29] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:05:03] *** Quits: rsx (~dummy@ppp-188-174-137-79.dynamic.mnet-online.de) (Ping timeout: 250 seconds)
[20:05:08] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:51d0:69de:d918:9a1f)
[20:07:49] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[20:08:28] *** Joins: djhankb (~djhankb@208.113.164.68)
[20:09:13] <Lando-SpacePimp> han-solo, MY MAN!
[20:09:46] *** Quits: c10l (~c10l@user/c10l) (Quit: The Lounge - https://thelounge.chat)
[20:10:55] *** Quits: idontnee_ (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Ping timeout: 250 seconds)
[20:13:00] *** Joins: c10l (~c10l@user/c10l)
[20:13:11] *** Joins: agonhajdari (~textual@user/agonhajdari)
[20:13:53] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[20:14:32] *** Quits: lethu (~lethu@user/lethu) (Quit: Leaving)
[20:14:49] *** Joins: lethu (~lethu@user/lethu)
[20:15:01] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Remote host closed the connection)
[20:15:12] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:51d0:69de:d918:9a1f) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[20:15:20] *** Joins: Payam (~Payam@c83-250-236-236.bredband.tele2.se)
[20:15:51] *** Joins: nopx (~nopx@2a03:4000:29:6f:949e:beff:fe40:8857)
[20:17:02] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[20:17:23] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Read error: Connection reset by peer)
[20:17:38] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[20:19:28] <han-solo> Lando-SpacePimp: Happy holidays man
[20:20:33] *** Joins: Dotz0cat (~Dotz0cat@h223.11.31.71.dynamic.ip.windstream.net)
[20:21:02] *** Quits: c10l (~c10l@user/c10l) (Quit: The Lounge - https://thelounge.chat)
[20:22:08] *** Joins: c10l (~c10l@user/c10l)
[20:26:17] *** Quits: lorogue (~lorogue@77.33.23.154.dhcp.fibianet.dk) (Read error: Connection reset by peer)
[20:26:17] *** Joins: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com)
[20:27:41] *** Quits: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com) (Client Quit)
[20:28:00] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:510f:e364:8034:402a) (Quit: Leaving)
[20:31:10] *** Quits: bluedust (~bluedust@59.89.212.159) (Remote host closed the connection)
[20:33:08] *** Joins: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com)
[20:34:31] *** Joins: idontnee_ (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[20:34:56] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Ping timeout: 245 seconds)
[20:34:57] *** Joins: stonkey (~stonkey@user/stonkey)
[20:35:52] *** Joins: azzazzel (~qwerty@2804:c30:c24d:f101:3b07:beff:afc7:2ff4)
[20:36:57] *** Joins: pingpongball (~pingpongb@user/pingpongball)
[20:37:11] <pingpongball> recommend me some bassboosted song guys
[20:37:25] <pingpongball> kind of like this
[20:37:26] <pingpongball> https://youtu.be/VeYh47p6yvk?t=1293
[20:37:37] *** Quits: junebug (~junebug@2600:1700:3db0:2540:f803:8a00:50b0:e441) (Ping timeout: 240 seconds)
[20:38:03] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[20:38:13] *** Parts: azzazzel (~qwerty@2804:c30:c24d:f101:3b07:beff:afc7:2ff4) ()
[20:39:26] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[20:39:29] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[20:40:33] *** Joins: badsektor (~badsektor@user/badsektor)
[20:42:58] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:49e:e7a6:edea:b564)
[20:44:19] *** Joins: shuck (~shuck@user/shuck)
[20:45:06] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:47:33] *** Quits: aniketgm (~Aniket@49.36.109.81) (Read error: Connection reset by peer)
[20:47:54] *** Quits: idontnee_ (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Read error: Connection reset by peer)
[20:48:10] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[20:50:01] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[20:50:32] *** Joins: junebug (~junebug@2600:1700:3db0:2540:caee:d639:f58b:fe14)
[20:51:06] *** Joins: zaquest (~notzaques@5.130.79.72)
[20:51:14] *** Joins: Arw- (~Arwalk@lfbn-dij-1-1321-197.w92-141.abo.wanadoo.fr)
[20:51:55] *** Quits: pingpongball (~pingpongb@user/pingpongball) (Quit: Client closed)
[20:52:14] *** Quits: Arw (~Arwalk@lfbn-dij-1-1321-197.w92-141.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[20:54:01] *** Joins: aniketgm (~Aniket@49.36.109.81)
[20:56:52] *** Joins: bluedust (~bluedust@59.89.212.159)
[20:57:01] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:49e:e7a6:edea:b564) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[20:59:57] *** Quits: junebug (~junebug@2600:1700:3db0:2540:caee:d639:f58b:fe14) (Ping timeout: 240 seconds)
[21:04:56] *** Quits: lethu (~lethu@user/lethu) (Ping timeout: 245 seconds)
[21:05:54] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[21:06:06] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[21:07:19] *** Joins: lethu (~lethu@user/lethu)
[21:08:52] *** Joins: de-facto (~de-facto@user/de-facto)
[21:20:05] *** Quits: deletor (~deletor@062122119061.gdansk.vectranet.pl) (Ping timeout: 256 seconds)
[21:23:23] *** Quits: c10l (~c10l@user/c10l) (Quit: The Lounge - https://thelounge.chat)
[21:23:45] *** Joins: c10l (~c10l@user/c10l)
[21:24:30] *** Quits: c10l (~c10l@user/c10l) (Client Quit)
[21:24:53] *** Joins: c10l (~c10l@user/c10l)
[21:27:57] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[21:28:08] *** Quits: badsektor (~badsektor@user/badsektor) (Remote host closed the connection)
[21:28:44] *** Joins: junebug (~junebug@2600:1700:3db0:2540:5cad:7db3:5882:a816)
[21:29:41] *** Joins: y04nn (~y04nn@92.223.89.196)
[21:30:17] *** Joins: fikran (~fikran@user/fikran)
[21:31:48] *** Joins: bloody (~bloody@user/bloody)
[21:32:19] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[21:34:00] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[21:34:25] *** Joins: Puriime (~meriipu@46.249.231.185)
[21:34:34] *** Quits: cozmo (~user@c-73-235-114-131.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[21:36:08] *** Joins: cozmo (~user@c-73-235-114-131.hsd1.ca.comcast.net)
[21:36:54] <Puriime> Is there anything insecure about the way I have quoted and pass lines 40 and 41 to subprocess.Popen here (execute in xfce4-terminal) ? https://bpa.st/2HDMIO4HK6TTRDOIHWIXIAI7JE
[21:37:40] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[21:37:58] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 260 seconds)
[21:39:11] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[21:40:03] *** Quits: Payam (~Payam@c83-250-236-236.bredband.tele2.se) (Quit: Leaving)
[21:43:11] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-0992-69e8-c32c-99a5.res6.spectrum.com)
[21:44:48] *** Quits: slave_blocker2 (~slave_blo@pd9fd1418.dip0.t-ipconnect.de) (Read error: No route to host)
[21:45:02] *** Joins: blub1 (~slave_blo@pd9fd1418.dip0.t-ipconnect.de)
[21:46:20] *** Joins: nyah (~nyah@94.6.71.219)
[21:46:49] *** Joins: s33ker (~s33ker@89-212-68-200.dynamic.t-2.net)
[21:46:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:47:20] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Remote host closed the connection)
[21:47:25] *** Joins: pingpongball (~pingpongb@user/pingpongball)
[21:47:55] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[21:49:24] *** Parts: ErkiS (~opera@85.253.137.74.cable.starman.ee) ()
[21:50:16] *** Joins: scoobydoo_ (~scooby@user/scoobydoo)
[21:50:26] *** Quits: c10l (~c10l@user/c10l) (Quit: The Lounge - https://thelounge.chat)
[21:51:02] *** Quits: pingpongball (~pingpongb@user/pingpongball) (Client Quit)
[21:51:31] *** Joins: pingpongball (~pingpongb@user/pingpongball)
[21:53:07] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 268 seconds)
[21:53:13] *** scoobydoo_ is now known as scoobydoo
[21:59:27] *** Joins: jdmark (~jdmark@user/jdmark)
[21:59:39] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[22:05:51] *** Joins: c10l (~c10l@user/c10l)
[22:06:14] *** Quits: Xano (~Xano@host31-48-104-97.range31-48.btcentralplus.com) (Ping timeout: 252 seconds)
[22:07:57] *** Quits: junebug (~junebug@2600:1700:3db0:2540:5cad:7db3:5882:a816) (Ping timeout: 240 seconds)
[22:08:27] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[22:10:00] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[22:14:17] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 240 seconds)
[22:14:18] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[22:15:30] *** Joins: azzazzel (~qwerty@2804:c30:c24d:f101:3b07:beff:afc7:2ff4)
[22:15:37] *** Quits: davor (~davor@user/davor) (Ping timeout: 240 seconds)
[22:15:43] *** Joins: davor_ (~davor@user/davor)
[22:15:46] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu)
[22:16:47] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[22:17:17] *** Joins: magnumCool (~phil@62.red-185-88-202.telecablesantapola.es)
[22:17:57] *** Parts: magnumCool (~phil@62.red-185-88-202.telecablesantapola.es) ()
[22:19:50] <leitz> The current edition of "Programming Python" was released in 2011; I wonder if they are going to update it.
[22:19:53] *** Quits: bluedust (~bluedust@59.89.212.159) (Remote host closed the connection)
[22:20:09] *** Quits: jaggz (~jaggz@user/jaggz) (Read error: Connection reset by peer)
[22:20:19] *** Joins: fling (~fling@user/fling)
[22:20:28] *** Joins: bluedust (~bluedust@59.89.212.159)
[22:20:59] *** Quits: lethu (~lethu@user/lethu) (Remote host closed the connection)
[22:21:11] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[22:21:25] *** Quits: y04nn (~y04nn@92.223.89.196) (Remote host closed the connection)
[22:21:30] *** Joins: raxor2k (~raxor2k@ti0121a400-2736.bb.online.no)
[22:22:38] <raxor2k> now that i changed from "def" to "async def", im getting "coroutines cannot be used with run_in_executor()" error when running this function : https://bpa.st/4ARA
[22:22:56] <raxor2k> So obviously i need to change this func now, any tip?
[22:25:01] *** Quits: pingpongball (~pingpongb@user/pingpongball) (Quit: Client closed)
[22:25:49] *** Quits: bluedust (~bluedust@59.89.212.159) (Ping timeout: 256 seconds)
[22:26:37] *** Quits: sleepingforest (~sleepingf@user/sleepingforest) (Ping timeout: 240 seconds)
[22:30:14] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 260 seconds)
[22:30:44] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 268 seconds)
[22:32:13] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 240 seconds)
[22:33:02] *** Joins: cliluw (~cliluw@47.147.73.223)
[22:34:45] <Numerlor> why do you need to run coros in an executor? If there is some long blocking thas then run that in the exceutor, not the whole coro
[22:35:00] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[22:37:30] <raxor2k> Didnt get your point ?
[22:37:40] <raxor2k> why do you assume its an coro ?
[22:37:41] <ChrisWarrick> raxor2k: why are you using run_in_executor?
[22:38:01] <ChrisWarrick> raxor2k: the error message says you’re trying to run a coroutine with run_in_executor
[22:38:19] <raxor2k> Chriswarrick: because those 2 functions inside , one of them is an DB function and the other one is a post/get function which makes the program "hang" beacuse it has to wait for an answer
[22:38:41] <ChrisWarrick> raxor2k: that’s not the use-case for run_in_executor
[22:38:51] *** Joins: Lukky (~Lukky@modemcable248.39-20-96.mc.videotron.ca)
[22:38:54] <ChrisWarrick> raxor2k: both of those things should be done by coroutines using an asyncio-aware DB/HTTP library
[22:39:10] <Lukky> Hohoho, where are my cookies...
[22:39:37] <raxor2k> Chriswarrick: and what if that function is not an "async" or not a part of an asyncio program then?
[22:39:49] <ChrisWarrick> raxor2k: you should strive for them to be
[22:40:08] <ChrisWarrick> raxor2k: if they aren’t async, and you can’t make them async, then that’s the use-case of run_in_executor
[22:40:17] <raxor2k> Ok i see
[22:40:28] *** Joins: sandb0y (~pirate@user/sandb0y)
[22:40:30] *** Quits: c10l (~c10l@user/c10l) (Quit: The Lounge - https://thelounge.chat)
[22:40:31] <raxor2k> ok so this: asyncio-aware DB/HTTP library    you have a tutorial/documentation ?
[22:40:39] <ChrisWarrick> raxor2k: what DB are you using?
[22:40:54] <raxor2k> async SQL alchemy
[22:41:08] <ChrisWarrick> raxor2k: so your DB is already async?
[22:41:14] <ChrisWarrick> raxor2k: as for http, https://www.python-httpx.org/
[22:41:34] <raxor2k> Chriswarrick: yes, its already async
[22:41:46] <ChrisWarrick> raxor2k: okay, then run_in_executor is not needed and not usable
[22:42:01] *** Joins: monkeycoder (~monkeycod@2001:d08:1b8a:767d:4106:88e1:13e3:b7ca)
[22:42:19] *** Quits: nomic (~nomic@85.203.46.91) (Quit: Leaving)
[22:42:20] <raxor2k> ChrisWarrick: yes ok thats fine
[22:43:00] <raxor2k> but this one: self.predict_weight_with_AI is a post request func to get data from another API, so i need to be able to use that witout the program to hang
[22:43:07] <raxor2k> i hope that httpx can solve this
[22:43:17] <ChrisWarrick> raxor2k: if you’re making a HTTP POST request, yes
[22:43:58] <raxor2k> and even if im using async sqlalchemy, i hope that i can push data using this function : self.process_rep_data_to_db   without the program hanging as well.
[22:44:31] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 245 seconds)
[22:44:52] <ChrisWarrick> raxor2k: if your function is async, and if it does not call any blocking functions
[22:44:56] *** Joins: c10l (~c10l@user/c10l)
[22:46:07] *** Joins: capnyesterday (uid528258@id-528258.lymington.irccloud.com)
[22:47:08] *** Joins: LDerJim (~jim@user/LDerJim)
[22:49:11] <raxor2k> For christmas: may god bless the guy who made the "asyncio" library in python
[22:49:16] <raxor2k> seems he has saved many lives
[22:49:42] *** Quits: capnyesterday (uid528258@id-528258.lymington.irccloud.com) (Client Quit)
[22:50:41] *** Joins: TypeError (~TypeError@2.133.161.196)
[22:50:46] <TypeError> hello
[22:50:53] *** Joins: lethu (~lethu@user/lethu)
[22:50:59] <TypeError> I need help with a TypeError
[22:51:44] <azzazzel> What is TypeError?
[22:52:09] <TypeError> TypeError: object of type 'generator' has no len()
[22:52:41] *** Joins: emx (~emx@adsl-84-226-68-198.adslplus.ch)
[22:52:41] *** Quits: tdsmith (~tdsmith@kvm.kumokasumi.org) (Read error: Connection reset by peer)
[22:52:46] <azzazzel> Tranform in a List
[22:52:46] <TypeError> Atom beautifier does this
[22:53:00] <TypeError> can I send you the block?
[22:53:16] <azzazzel> yes
[22:53:28] <TypeError> thanks, just a second
[22:53:32] <TypeError> add to a paste
[22:53:51] *** Quits: monkeycoder (~monkeycod@2001:d08:1b8a:767d:4106:88e1:13e3:b7ca) (Quit: WeeChat 2.8)
[22:54:16] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[22:54:31] *** Quits: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt) (Quit: leaving)
[22:55:24] *** Joins: tdsmith (~tdsmith@kvm.kumokasumi.org)
[22:56:07] *** Joins: Pickchea (~private@user/pickchea)
[22:56:22] <raxor2k> chriswarrick: so what you basically say is: if possible: use async whereever you are able to use it ?
[22:56:36] *** Joins: vicfred (~vicfred@user/vicfred)
[22:56:37] *** Joins: BlueSky (~BlueSky@user/bluesky)
[23:00:13] *** Joins: locrian9 (~mike@99-153-255-194.lightspeed.irvnca.sbcglobal.net)
[23:00:26] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:00:33] *** Quits: s33ker (~s33ker@89-212-68-200.dynamic.t-2.net) (Quit: Client closed)
[23:01:03] <Numerlor> if you're doing IO, try to find an async implementation, if that fails then you can use the executor to run blocking IO in a separate thread
[23:01:15] *** justSleigh is now known as justIrresolute
[23:02:15] *** Quits: raxor2k (~raxor2k@ti0121a400-2736.bb.online.no) (Remote host closed the connection)
[23:02:38] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[23:06:00] *** Joins: sazawal (~sazawal@122.161.92.186)
[23:07:10] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[23:07:47] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[23:08:44] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Read error: Connection reset by peer)
[23:11:54] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[23:13:17] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 268 seconds)
[23:16:45] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-71e3-edb6-520a-8c68.res6.spectrum.com) (Quit: Leaving)
[23:17:01] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 240 seconds)
[23:19:28] *** Joins: raxor2k (~raxor2k@ti0121a400-2736.bb.online.no)
[23:20:35] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (Excess Flood)
[23:21:27] *** Joins: agonhajdari (~textual@user/agonhajdari)
[23:21:42] <raxor2k> chriswarrick: i remove the "executor", now it keeps hanging for 0.5 when its pushing data to db
[23:22:07] <ChrisWarrick> raxor2k: how do you experience hanging?
[23:22:46] <raxor2k> I connect with another user to my websocket server and that user keeps receiving numbers from 1-100 instantly
[23:22:55] <raxor2k> i use that to check whether the server hangs or not
[23:23:05] <bjs> raxor2k: run_in_executor is used to run a non-async function "in the background"
[23:23:19] <bjs> it returns a thing you can `await` to wait for the background function to finish
[23:23:26] *** Joins: Noisytoot (~noisytoot@sourcehut/user/noisytoot)
[23:23:37] *** Quits: parv (~quass@user/parv) (Ping timeout: 240 seconds)
[23:23:39] <raxor2k> sorry, my bad Chris
[23:23:42] <raxor2k> i need to try something else
[23:24:19] <ChrisWarrick> raxor2k: is your database driver really async?
[23:25:04] <raxor2k> chriswarrick: yes it is. but this function wasnt something different
[23:25:07] <raxor2k> forget about it, my bad
[23:26:32] *** Quits: emx (~emx@adsl-84-226-68-198.adslplus.ch) (Ping timeout: 240 seconds)
[23:28:09] *** Quits: akk (~akk@174-28-122-47.albq.qwest.net) (Ping timeout: 256 seconds)
[23:28:29] *** Joins: ps_ (~ps@2a02:810b:f3f:f0d1:ccd2:3fff:72d0:ccfd)
[23:29:39] *** Joins: idontnee_ (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[23:31:38] *** Quits: idontnee_ (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Client Quit)
[23:32:33] *** Joins: magla (~gelignite@55d48f64.access.ecotel.net)
[23:32:54] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[23:33:17] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Ping timeout: 240 seconds)
[23:33:30] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[23:33:55] *** Joins: lorogue (~lorogue@77.33.23.154.dhcp.fibianet.dk)
[23:35:13] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[23:37:58] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[23:38:28] <raxor2k> chriswarrick: its working
[23:38:34] <ChrisWarrick> raxor2k: great!
[23:38:42] <raxor2k> now i just need to implement that httpx thing
[23:38:49] <raxor2k> and everything is perfect
[23:39:15] <ps_> hi, any idea how to create a coverage badge on github actions without any payed third party tools?
[23:39:38] *** Joins: fikran (~fikran@user/fikran)
[23:40:03] <raxor2k> chriswarrick: but there isnt a way i can run this "self.predict_weight_with_AI"  post function in a executor "until i implement and test httpx" ?
[23:40:06] <raxor2k> just in meantime
[23:40:15] <ChrisWarrick> raxor2k: you could
[23:40:29] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[23:40:37] <ChrisWarrick> raxor2k: but httpx is fairly easy to adopt
[23:40:40] *** Joins: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt)
[23:40:57] <raxor2k> Ok then
[23:41:18] <raxor2k> bjs: merry christmas president
[23:41:49] *** Quits: lorogue (~lorogue@77.33.23.154.dhcp.fibianet.dk) (Quit: Leaving)
[23:42:07] *** Joins: lorogue (~lorogue@77.33.23.154.dhcp.fibianet.dk)
[23:42:40] *** Joins: eirian (uid533172@user/eirian)
[23:44:22] *** Joins: parv (~quass@user/parv)
[23:44:50] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[23:47:06] *** Quits: zumba_addict (~zumba_add@2601:240:4500:8320:224:1dff:fec8:64f6) (Quit: Client closed)
[23:47:24] <raxor2k> Chriswarrick: when async DB didnt exist. How did they solve those "hang" issues ?
[23:47:31] <raxor2k> yaers ago
[23:48:23] <bjs> threads and other asynchronous (but not "async def") APIs
[23:48:37] <ChrisWarrick> raxor2k: twisted, for example, was started in 2002
[23:49:17] *** Quits: foxbox (~cammy@user/cammy) (Ping timeout: 240 seconds)
[23:49:54] <raxor2k> Hmm okei, so they were able to solve those "hanging" issues back then?
[23:50:14] <ChrisWarrick> sure
[23:50:20] <bjs> Yes, "async" is not some magic,  people used the same ideas back then
[23:50:31] <bjs> they just didn't have the asyncio library
[23:51:02] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:51:57] <raxor2k> ok fine, but you have async sqlalchemy,  and "normal" sqlalchemy(which is have been used for 1.5 years until recently
[23:52:14] <raxor2k> what makes me p*ssed is why do those libraries still exist if they are old and keeps hanging
[23:52:23] <raxor2k> i didnt know about async sqlalchemy
[23:52:28] <raxor2k> until recently
[23:52:59] <ChrisWarrick> async is great, but it also requires getting used to the mental model, and introduces the issue of needing to rewrite or restructure a lot of code to benefit from it
[23:53:33] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[23:53:33] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[23:53:33] *** finn_elija is now known as FinnElija
[23:53:39] *** Quits: c10l (~c10l@user/c10l) (Quit: The Lounge - https://thelounge.chat)
[23:54:02] *** Joins: c10l (~c10l@user/c10l)
[23:55:22] <SnoopJ> asyncthink
[23:58:12] *** Joins: Everything (~Everythin@37.115.210.35)
[23:58:13] *** Quits: Techcable (~Techcable@168.235.93.147) (Quit: ZNC - https://znc.in)
[23:58:22] *** Joins: kosh (~kosh@user/kosh)
