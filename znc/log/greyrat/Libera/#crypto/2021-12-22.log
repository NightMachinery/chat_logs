[00:00:37] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[00:00:42] *** Joins: ses (uid38151@id-38151.hampstead.irccloud.com)
[00:00:46] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[00:02:10] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[00:02:43] *** Quits: dusk (~quassel@suki.ds7s.nl) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:03:12] *** Joins: dusk (~quassel@suki.ds7s.nl)
[00:15:18] *** Quits: semisimple (~semisimpl@user/semisimple) (Ping timeout: 268 seconds)
[00:16:41] *** Joins: semisimple (~semisimpl@user/semisimple)
[00:18:10] *** Quits: dusk (~quassel@suki.ds7s.nl) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:18:38] *** Joins: dusk (~quassel@suki.ds7s.nl)
[00:25:12] *** Quits: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy) (Ping timeout: 256 seconds)
[00:31:37] *** Quits: rardiol (~quassel@user/rardiol) (Ping timeout: 240 seconds)
[00:34:17] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 240 seconds)
[00:48:28] *** Quits: neiluj (~neiluj@2a01:e0a:1f2:d960:9896:8f35:c866:192e) (Quit: WeeChat 3.1)
[00:48:36] *** Joins: PJBoy (~PJBoy@user/pjboy)
[00:55:15] *** Quits: zulutango (~zulutango@static-n58-105-160-58.mas4.nsw.optusnet.com.au) (Read error: No route to host)
[00:55:39] *** Joins: zulutango (~zulutango@static-n58-105-160-58.mas4.nsw.optusnet.com.au)
[00:57:13] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 268 seconds)
[01:17:52] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[01:37:08] <dostoyevsky2> I read that AES in CFB mode is what I should use if I want the message not to change in size after encryption -- any other recommendations?
[01:37:42] <Alipha> dostoyevsky2: why can't the message change in size?
[01:37:46] *** Quits: zer0bitz (~zer0bitz@2001:2003:f444:a000:499c:186d:f10d:6a24) (Ping timeout: 260 seconds)
[01:38:47] <wasamasa> any of the stream ciphers would do
[01:38:57] <wasamasa> so why not AES-GCM
[01:40:33] <maroon> if he means not including an IV, then CTR mode shouldn't be used. at least CFB with a fixed IV gives some level of feedback
[01:40:33] <dostoyevsky2> Alipha: I am interested in FPE so CFB seems to go in that direction by not changing the message size...  I thought I could use it to e.g. encrypt a PNG whilst it still remains a PNG of the same dimensions
[01:41:28] <Alipha> dostoyevsky2: considering PNG and other image formats have a header as part of their specification, i would try to hide the IV and auth tag in the header somewhere
[01:42:20] <maroon> the header includes the dimensions, and i think it also has a palette as a lookup table for the codes in the png
[01:43:33] <Alipha> dostoyevsky2: but as far as ciphers that keep the ciphertext the same size as the plaintext, Google's Adiantum is the top of the line: https://security.googleblog.com/2019/02/introducing-adiantum-encryption-for.html
[01:43:35] <dostoyevsky2> Yeah, so I'd 1) unpack the PNG 2) do encryption on all the RGB pixels -> pack it again like a normal PNG, so palette etc. would be different, file would also be growing in size as encryption won't work well on the encrypted pixels
[01:43:53] <Alipha> https://github.com/google/adiantum
[01:44:14] *** Joins: mouseghost (~draco@user/mouseghost)
[01:44:32] <maroon> so you'd in effect be changing it to be a .bmp?
[01:44:45] <dostoyevsky2> I'd expect the encrypted image to just look like static, that's why it needs to be lossless
[01:45:15] <maroon> why are you unpacking it, to avoid known plaintext?
[01:45:36] <dostoyevsky2> maroon: If I am not unpacking it, it's not FPE, no?
[01:46:14] <dostoyevsky2> I'd just encrypt a PNG that you couldn't even get the dimensions of in encrypted form
[01:46:44] <Alipha> dostoyevsky2: note that a PNG can (and likely will) use some form of compression, e.g., RLE. and so you can't just encrypt the pixels and produce a valid PNG
[01:47:51] <Alipha> s/pixels/pixel data/
[01:48:21] <Alipha> BMPs are more likely to be uncompressed, but apparently there's compressed BMPs too
[01:49:13] <dostoyevsky2> Id doesn't really matter what the image format is, as long as it's lossless... bmp, tiff, png would qualify
[01:49:30] <maroon> there might be multiple ways for a png to compress the same data, so you may not be able to put humpty-dumpty back together after decrypting your FPE
[01:49:32] <dostoyevsky2> If the compression doesn't work it will usually just not be applied
[01:50:26] <maroon> so you're not needing to be able to restore the png back to the original state?
[01:51:11] *** Quits: Guyver2 (~Guyver@guyver2.xs4all.nl) (Quit: Going offline, see ya! (www.adiirc.com))
[01:51:44] <Alipha> dostoyevsky2: " I'd just encrypt a PNG that you couldn't even get the dimensions of in encrypted form"--so then the PNG is completely useless and not viewable and so why bother with FPE?
[01:52:05] <wasamasa> if you keep the metadata and chunk markers as is, it should work
[01:52:18] <wasamasa> only encrypt the image data
[01:52:20] <dostoyevsky2> maroon: Not sure what you are talking about... PNG can contain arbitrary data... 
[01:53:04] <dostoyevsky2> https://github.com/etherdream/web2img <- that guy used PNGs on imgur to store websites... that wouldn't work if the data was changed during creating the png
[01:53:13] <maroon> if you are FPE of a zipped text file, by first unzipping the data, there's no way to know if you can restore to the exact same zip, since there's many ways to compress the same file as a zip
[01:53:27] <dostoyevsky2> that's the definition of a lossless image format
[01:54:15] <maroon> no it's not - zip is losless, but i have at least half a dozen zip programs on this machine that will all create a different size compressed data from the same text
[01:54:40] <Alipha> "exact same zip"... so you may get a zip representing the same content, but not the same zip file
[01:54:47] <dostoyevsky2> maroon: FPE just means that it's still a valid zip/png 
[01:54:51] <maroon> there's adifference between lossless image and losless compression
[01:55:03] *** Joins: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy)
[01:55:42] <wasamasa> why the size requirement though
[01:55:49] <wasamasa> lossless compression messes with that
[01:56:01] <maroon> so again, you don't need to be able to restore the image back to the original.png that would have an identical sha512 fingerprint?
[01:57:12] <dostoyevsky2> maroon: Not necessarily, what you want is the pixels to remain the same, not the PNG to have the same md5
[01:57:17] <Alipha> if you encrypt the uncompressed pixels, then you'll produce a PNG that's larger than the original (is this fine?) if you encyrp the compressed pixels, then you won't end up producing a valid PNG because the decompression will either fail or produce an image that's not a rectangle
[01:58:00] <maroon> if you want the png to be completely scrambled, then you'd also need to encrypt the palette within the png header, so it gives no clue as to the 24-bit colors used in the image
[01:59:56] <dostoyevsky2> maroon: The apis I've used don't let me specify the palette... I just give it RGB pixels and the dimension and it then creates a PNG
[02:01:28] <dostoyevsky2> Alipha: yeah, the ecrypted png being larger is fine... there is really no way around it, since I presume it will look like static
[02:04:52] <dostoyevsky2> but not sure how I could use GCM to have the same size after encryption...
[02:06:22] <dostoyevsky2> Oh, using it as a stream cipher
[02:07:15] <maroon> do you not want it to have the authentication string appended to the scrambled.png?
[02:11:08] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Quit: leaving)
[02:11:25] <dostoyevsky2> maroon: I'd probably need something to store the iv... otherwise it's not going to work, and that would be additional information...  
[02:11:33] <maroon> would a valid FPE for space+base94 text for input containing 95 possible characters, be to use a stream cipher where you discard anything that's not 0-94, and then ciphertext = plain + stream, and decryption would be ciphertext - stream ?
[02:11:54] <maroon> instead of storing an IV, you can use truncated sha256(header)
[02:12:41] <dostoyevsky2> doesn't the iv need to change if I encrypt the same data twice?  otherwise I could just use sha256(filename)
[02:12:42] <maroon> unless you have png's that can have identical headers
[02:14:34] *** Quits: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy) (Ping timeout: 256 seconds)
[02:16:56] <maroon> sha256(filename|header) maybe, though doing this means if it gets emailed to someone and their filename(1).png can't be decrypted
[02:17:59] *** Quits: tuskkk____ (uid18470@id-18470.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[02:18:29] <dostoyevsky2> yeah, it's based on a custom filesystem anyways... in the end the png is just a token, and only in combination with that filesystem you can decrypt it
[02:19:07] <dostoyevsky2> as it also contains the key, and might also hide the iv from you
[02:20:48] <maroon> but yeah if you want the same data to be encrypted differently, you need some kind of unique seed coming from somewhere
[02:22:12] <maroon> or even use the timestamp of there's 2 identical png's with different timestamp - as long as you can adjust for daylight time shift
[02:27:35] *** Quits: CryptoDavid (uid14990@id-14990.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[02:30:37] <maroon> though i've also seen cases where daylight time would change the timestamp by 1 hour +/1 1-2 seconds
[02:30:53] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[02:36:18] *** Quits: Gallomimia (~Gallomimi@node-1w7jra2a2gqpxmcicaoapn3zn.ipv6.telus.net) (Remote host closed the connection)
[02:37:22] *** Joins: Gallomimia (~Gallomimi@node-1w7jra2a2gqpwurlgy67770n6.ipv6.telus.net)
[02:42:54] *** Joins: rardiol (~quassel@user/rardiol)
[02:44:03] *** Quits: deusexbeer (~hedeo@37-146-236-2.broadband.corbina.ru) (Quit: Konversation terminated!)
[02:52:13] *** Quits: mouseghost (~draco@user/mouseghost) (Quit: mew wew)
[03:15:17] *** Quits: wolfshappen (~waff@irc.furworks.de) (Ping timeout: 240 seconds)
[03:17:15] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[03:22:16] *** Joins: wolfshappen (~waff@irc.furworks.de)
[03:30:37] *** Quits: chomwitt (~chomwitt@94.66.63.187) (Ping timeout: 240 seconds)
[03:33:01] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[03:33:37] *** Quits: Malvolio (~Malvolio@user/malvolio) (Ping timeout: 240 seconds)
[03:34:17] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[03:34:56] *** Joins: hqdruxn08__ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[03:36:57] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 240 seconds)
[03:37:51] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 245 seconds)
[03:38:03] *** Joins: ajpkim (~user@user/ajpkim)
[03:38:23] *** Joins: rustycl0ck (~ircuser@gateway/tor-sasl/rustycl0ck)
[03:38:57] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 240 seconds)
[03:39:35] *** Quits: ajpkim (~user@user/ajpkim) (Quit: ERC (IRC client for Emacs 27.2))
[03:41:05] *** Quits: ses (uid38151@id-38151.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[03:54:05] *** Joins: Guest43 (~Guest43@152.166.142.160)
[03:54:46] *** Quits: Guest43 (~Guest43@152.166.142.160) (Quit: Client closed)
[04:01:17] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[04:05:38] *** Quits: rardiol (~quassel@user/rardiol) (Ping timeout: 256 seconds)
[04:06:59] *** Quits: rustycl0ck (~ircuser@gateway/tor-sasl/rustycl0ck) (Remote host closed the connection)
[04:28:12] *** Joins: Wulf (~Wulf@user/wulf)
[04:28:12] *** Joins: rardiol (~quassel@user/rardiol)
[04:28:50] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Remote host closed the connection)
[04:29:16] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[04:40:12] *** Quits: CryptoClub (~fafs@88.red-83-34-81.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[04:54:42] *** Quits: rardiol (~quassel@user/rardiol) (Ping timeout: 260 seconds)
[05:01:14] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 260 seconds)
[05:30:04] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 256 seconds)
[05:51:54] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[06:03:57] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[06:04:30] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[06:20:45] *** Joins: deusexbeer (~hedeo@37-146-236-2.broadband.corbina.ru)
[06:21:13] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:a1e1:617f:5617:eda3)
[06:30:11] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[06:47:07] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[06:51:22] <Sofia> dostoyevsky2: If you want to preserve an image's compressed size while encrypting it, to a file with the same format. I'd go with any length-preserving authenticated encryption scheme. For which your options are limited to an SPRP, meaning any change to any bit of the ciphertext fully randomizes the decrypted plaintext. Then you need to recognize some structure in the image to encode your
[06:51:24] <Sofia> authentication bits. Assuming your input image has relatively low entropy (compared to the white noise you'd get with any random corruption), you may use this entropy score as your authentication tag. 
[06:56:57] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 240 seconds)
[07:00:15] <Sofia> Preserving the PNG format would involve separating the data from the subdivision regions, then compressing the latter metadata and encrypting that against the space of all compressed subdivisions which can fit in the same number of bits. This compression is safe because it doesn't shrink the ciphertext space, it only increases the set of valid reconstructions. Finding this mapping would be the
[07:00:17] <Sofia> tough part.
[07:01:49] <Sofia> The result would be a PNG with random topology containing random colours of the same size, where every bit of the ciphertext is authenticated. But it'd be much more complicated than anything reasonable. :)
[07:18:03] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[07:20:07] *** Joins: akaWolf (~akaWolf@akawolf.org)
[07:31:36] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[07:39:37] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 240 seconds)
[07:47:31] <Alipha> Sofia: google's Adiantum is also length-preserving "authenticated" encryption
[07:47:37] *** Joins: akaWolf (~akaWolf@akawolf.org)
[07:48:15] <Sofia> Alipha: Yes, that is an SPRP.
[07:50:40] <Sofia> Where the authentication specifically relies on structural properties of the message space. I.e. Zeros when padding structures, or values outside their legal ranges (I.e. x <= 50, if x > 50 then invalid).
[07:52:20] <Sofia> A nice deal of SPRPs, unlike say CBC or CTR, is that we don't even need to check the tag in constant time because any corruption to the ciphertext fully randomizes the decryption we're checking. There is no room for differential brute force. Either way, I'd still implement that in constant time on principal.
[07:52:36] <Sofia> :)
[08:07:28] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[08:16:40] <Sofia> deal/detail
[08:19:38] <TimMc> dostoyevsky2: I've skimmed backlog, and I'm pretty sure you still haven't explained why it still needs to be a valid PNG file.
[08:23:31] *** Joins: node1 (~node1@user/node1)
[08:31:40] <TimMc> Without that explanation, it's highly likely you'll get mistargeted advice.
[08:37:57] <dostoyevsky2> TimMc: Not sure how it could be FPE if it's not a valid PNG file anymore afterwards...
[08:38:51] <Sofia> dostoyevsky2: TimMc is asking why you need FPE? Do you really need it to be a valid PNG? Worse, do you really need it to be the same size?
[08:39:20] <Sofia> If you can adjust the size, then you can just auth-encrypt the PNG with any AEAD, then prepend a static PNG header.
[08:40:28] <Sofia> IIRC you can append garbage to a PNG and it'd remain valid, so you could just have a single pixel PNG followed by the ciphertext.
[08:45:57] <dostoyevsky2> Well, FPE is a technique described by NIST and I think it's fascinating.  But e.g. FF1 and FF3 are not builtin in Go, also may be patented by Voltage... So I was thinking if I had a normal encryption algo that wold guarantee me that the encrypted mesage has the same length as the original message that would be something that goes in that direction.  That's really my thought process, getting better at 
[08:46:03] <dostoyevsky2> understanding how somehting like FF1/FF3 really works
[08:53:45] *** Quits: Choco (~Choco@host150.200-71-232.telecom.net.ar) (Quit: Client closed)
[09:03:34] <Sofia> dostoyevsky2: You're trying to do X as a step towards Y. What is Y? https://en.wikipedia.org/wiki/XY_problem + https://xyproblem.info/
[09:04:43] <dostoyevsky2> Sofia: Are you asking why NIST includes FPE in their standards?  Maybe you should drop them an email if you feel confused about it
[09:05:31] <Sofia> I'm asking what you want to do. Why are you playing with PNGs?
[09:06:26] <dostoyevsky2> Sofia: Understanding FPE
[09:10:57] <Sofia> Just understanding. Okay, so where is FPE most frequently used? Credit cards, right? I don't even know any other example off the top of my head. There is a format which must be preserved, due to excuses around backwards compatibility instead of fixing the problem. FPE is rarely useful in practice, especially for well designed systems. It's merely a useful tool for the rare event you need the tool.
[09:16:46] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Remote host closed the connection)
[09:17:08] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[09:19:35] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:20:44] <dostoyevsky2> Sofia: So I am using PNGs because I don't have PII available.  I also don't want to use just text files because I want to have constraints on the maximum file size.  But if I were to design an FPE algorithms for a CC: How would something like FF1/3 compare to just reducing a CC from their alphabet to binary data, encrypting that with CFB, then mapping it again to the CC alphabet, and calculating a 
[09:20:50] <dostoyevsky2> checksum
[09:21:08] <dostoyevsky2> +?
[09:23:07] *** Joins: Wulf (~Wulf@user/wulf)
[09:23:32] <Sofia> I don't know the details of FF[13] but the important detail isn't to use CFB it is to use an n-bit block cipher without length extensions.
[09:23:38] <dostoyevsky2> Is something like CFB quite weak cryptographically?  Or does it bring other challenges
[09:23:39] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:24:47] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:25:41] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:26:50] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:27:44] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:27:48] <rk4> CFB is pretty old and will be well documented
[09:28:51] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:29:51] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:30:58] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:31:57] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:33:03] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:34:03] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:34:33] *** Joins: frost (~frost@user/frost)
[09:35:09] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:35:49] <dostoyevsky2> What I also like about images is that they are very easy to inspect visually. I am not sure how accurate your eyes can decide on whether static is really properly encrypted but it surely is a lot easier than judging an FPE'd text file or even a PII
[09:36:12] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:37:18] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:38:22] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:39:30] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:40:16] *** Joins: BOKALDO (~BOKALDO@user/bokaldo)
[09:40:17] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:41:24] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:42:10] <Sofia> By PII you mean personally identifiable information? You know CC generators exist right?
[09:42:21] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:43:15] *** Quits: node1 (~node1@user/node1) (Ping timeout: 256 seconds)
[09:43:27] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:44:07] <tusko> It is convenient to say that A|B is a rational cut if it is like the cut A|B = {r \in Q : r<1} | {r \in Q : r>= 1} for some fixed rational number r.
[09:44:20] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:45:17] <dostoyevsky2> Sofia: True, but how can I assess the quality of my FPE scheme?  Just with cryptominisat?  If it's already an image I can also use my eyes right from the beginning, before even setting up a satsolver
[09:45:26] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:46:24] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:46:45] <Sofia> cryptominisat? o.o
[09:47:32] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:48:24] <dostoyevsky2> Sofia: Are you saying it's not applicable to that use case?
[09:48:30] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:49:37] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:50:09] <int-e> if cryptominisat breaks your scheme, it's broken. if it doesn't you learned that cryptominisat can't break it, no more
[09:50:37] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:51:07] <Sofia> Alipha: Re Adiantum. I'd prefer FAST because it is a general construction. FAST is a year older and referenced by the Adiantum paper. Despite their rational, I prefer FAST for its generality. https://eprint.iacr.org/2017/849 
[09:51:17] <Sofia> dostoyevsky2: I'm saying I'm not familiar with the tool.
[09:51:36] <int-e> out of curiosity and a bit of annoyance, has anyone ever seen betelgeuse9 speak on any channel?
[09:51:45] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:52:25] <Sofia> Is cryptominisat just a sat solver or does it have crypto details?
[09:52:36] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:53:43] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:53:59] <int-e> Sofia: it's a SAT solver that supports xor clauses (and does linear algebra on them)
[09:54:41] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:54:56] <Sofia> I see.
[09:55:05] *** Joins: Malvolio (~Malvolio@user/malvolio)
[09:55:47] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:55:59] <int-e> But I don't know how much this helps with, say, round-reduced AES.
[09:56:16] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[09:56:36] *** Joins: ravan (~ravan@user/ravan)
[09:56:45] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:57:31] <int-e> (compared to pure DPLL+CDCL as implemented in solvers like kissat)
[09:57:54] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:58:48] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:59:15] <int-e> Uh, plus pre- and inprocessing that simplify clauses, I guess? I should catch up on that.
[09:59:28] <dostoyevsky2> int-e: I've seen people speak _to_ betelgeuse9 on various channels about using a proper internet connection to stop the constant parting but there was never a reply, so it usually ends in a ban
[09:59:54] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[10:00:51] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[10:01:15] <dostoyevsky2> Sofia: IIUC the guy who invented the idea that one could use satsolvers to gauge the quality of an encryption scheme is the author of cryptominisat
[10:01:59] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[10:02:52] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[10:03:28] <Sofia> int-e: I've been meaning to look into the solver space more. I've been in DTLC land without such solvers, but will eventually need to use solvers for some of my projects.
[10:04:00] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[10:04:43] <Sofia> dostoyevsky2: Any links to that measurement method?
[10:05:04] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[10:05:55] <int-e> dostoyevsky2: it's probably a stronger metric than bit diffusion... but (unsurprisingly, since that involves a lot of domain knowledge) it doesn't match state-of-the art differential cryptanalysis.
[10:06:14] <int-e> Sofia: "DTLC" has me stumped
[10:06:53] <dostoyevsky2> Sofia: https://link.springer.com/chapter/10.1007%2F978-3-642-02777-2_24  would be the first paper his group published...  I think the full pdf is also floating around on github
[10:12:13] <Sofia> int-e: Dependently typed lambda calculus. Mostly writing Lean 4 these days. https://leanprover.github.io/lean4/doc/
[10:12:52] <int-e> Sofia: Ah! I've never seen it abbreviated as that (and it's a bit removed from constraint solving)
[10:13:44] <Sofia> int-e: Sorta, there are DTLCs which build on constraint solvers. Lean isn't one of those. 
[10:14:38] <Sofia> Solvers are used for some type checking in other DTLCs whose names don't come to mind.
[10:15:53] <int-e> Yeah I do see the application. I can find papers at least, like "Toward SMT-Based Refinement Types in Agda"
[10:19:00] <Sofia> My solver interests are towards global minimization optimizations.
[10:22:57] <Sofia> Might experiment with simpler linear constraint solvers for that. Haven't looked into the specific details to determine that viability. https://rosstate.org/publications/eqsat/
[10:23:06] *** Parts: linear_cannon (~linear_ca@50.35.78.163) ()
[10:33:15] <sm2n> F* is the big one
[10:43:54] <Sofia> sm2n: Any thoughts about F*?
[10:43:57] * Sofia has not used it
[11:09:55] *** Joins: chasmo77 (~chas77@c-71-193-246-4.hsd1.or.comcast.net)
[11:17:28] *** Joins: node1 (~node1@user/node1)
[11:17:47] *** Joins: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy)
[11:25:26] <Deknos> i do not look at software if it's not at least one release in a debian release distribution. only then i can be sure to use it autonomously.. but i really hope that f* comes there one day
[11:25:38] <Deknos> z3 is already in debian
[11:25:56] *** Quits: lord| (~lordpipe@user/lordpipe) (Ping timeout: 256 seconds)
[11:31:39] <tusko> Do you also do it through the sheets with the lights off?
[11:32:33] *** Joins: chomwitt (~chomwitt@ppp-2-85-245-134.home.otenet.gr)
[11:33:04] <Deknos> using crypto without having the sources and being able to compile the sources yourself into a binary is kind of moot if you want to depend on crypto libraries in the long term
[11:33:06] *** Joins: lord| (~lordpipe@user/lordpipe)
[11:33:45] *** Quits: node1 (~node1@user/node1) (Ping timeout: 256 seconds)
[11:35:12] <tusko> using cryptois only for people with something to hide
[11:36:16] <int-e> tusko: what's the URL to your bathroom webcam?
[11:36:21] <Deknos> ah, you are a troll
[11:36:55] <tusko> that isn't true and actually rather rude to say
[11:37:31] <int-e> 's okay, nobody suggested that you're living in a cave or under a bridge
[11:39:26] <tusko> webcam in the bathroom is psycho shit
[11:41:34] <Peng> tusko: You're using crypto right now
[11:42:36] *** Joins: opsecfail (~opsecfail@user/opsecfail)
[11:42:51] <tusko> why not? encrypt the world
[11:44:42] <int-e> Hmm was https://fahrplan.events.ccc.de/congress/2008/Fahrplan/track/Community/3025.en.html good, I wonder
[11:52:32] <Bostik> I remember being in the room, but can't remember the talk
[11:52:44] <Bostik> so it must have been mediocre
[11:54:19] <tusko> sounds probable
[11:54:28] <tusko> however unlikely
[12:02:51] *** Joins: andreasbuhr (~quassel@p549db80f.dip0.t-ipconnect.de)
[12:05:59] *** Joins: x03nnn (~x03nnn@gateway/vpn/pia/x03nnn)
[12:09:38] *** Parts: x03nnn (~x03nnn@gateway/vpn/pia/x03nnn) (Leaving)
[12:10:43] *** Joins: Guyver2 (~Guyver@guyver2.xs4all.nl)
[12:25:25] *** Joins: Haohmaru (~Haohmaru@195.24.53.110)
[12:37:19] *** Joins: CryptoClub (~fafs@88.red-83-34-81.dynamicip.rima-tde.net)
[12:56:14] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[12:56:41] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[12:59:34] *** Joins: raj_ (uid72176@user/raj)
[12:59:46] *** raj_ is now known as rj
[12:59:47] *** rj is now known as Guest2756
[13:00:09] *** Guest2756 is now known as raj
[13:04:17] *** Quits: wolfshappen (~waff@irc.furworks.de) (Ping timeout: 240 seconds)
[13:08:25] *** Joins: node1 (~node1@user/node1)
[13:11:02] *** Joins: doofenshmirtz (~farawayas@103.160.128.7)
[13:15:22] <doofenshmirtz> this might be a very stupid question since I don't know nothing about crypto. please bear with me. say that I generate a public and a private key. when I do that, how to ensure that my public-private key pair is unique? i.e, no one else in the entire world has generated that pair on their computer.
[13:16:14] <doofenshmirtz> otherwise they may be able to read message meant for me and I them.
[13:17:30] *** Quits: kish` (~sid742412@user/aqua) (Ping timeout: 276 seconds)
[13:23:06] <riv> it's just based on there being so many keys, that the chance of there being two the same is low
[13:31:09] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[13:37:06] *** Joins: gproto23 (~gproto23@user/gproto23)
[13:37:55] *** Quits: doofenshmirtz (~farawayas@103.160.128.7) (Remote host closed the connection)
[13:40:32] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:41:50] <Sofia> doofenshmirtz: Where this "low chance" is effectively negligible in practice. If a everyone alive managed to generate keys as fast as trillions of times every picosecond each (there are a trillion picoseconds in a second), for 100 years, then we might start to have an issue. Now we need a mechanism to compare these for duplicates.
[13:48:47] <Sofia> Whoops. That rate would be an issue in half a day. ;-)
[13:49:13] <Sofia> But as you can imagine, that rate would be insane. The point is that it is insane !
[13:49:20] <Sofia> > 2^128 / (8e9 * 1e12 / picosecond)
[13:49:23] <Sofia> 11 hour, 48 minute, 55.29586 second (time)
[13:49:38] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[13:51:00] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[13:51:01] *** Lord_of_Life_ is now known as Lord_of_Life
[13:51:19] <Sofia> Not that public-key crypto is 128-bit. Curve25518 is ~126 or so. 
[13:51:22] <Sofia> > 2^126 / (8e9 * 1e12 / picosecond)
[13:51:24] <Sofia> 2 hour, 57 minute, 13.82396 second (time)
[13:51:52] *** Quits: weyhmueller (~weyhmuell@blofeld.nc.w9r.de) (Quit: ZNC 1.8.2 - https://znc.in)
[13:51:53] <Sofia> Curve25519*
[13:53:11] *** Joins: weyhmueller (~weyhmuell@blofeld.nc.w9r.de)
[13:53:18] <Sofia> dostoyevsky2: A MUCH bigger issue would be if your randomness is insecure. Ex. The debian ssh keygen issue many years ago, adding a nasty bias where keys were limited to a small set.
[13:56:53] <Sofia> Either way; the communication costs necessary to lean about collisions is too extreme, let alone storage.
[13:57:14] <Sofia> learn
[14:00:31] <Sofia> A more realistic threat here would be symmetric auth-enc sessions than public-key. You create many more sessions than you do identities.
[14:05:17] *** Quits: mad_enz (~mad_enz@lnsm3-torontoxn-142-116-106-108.internet.virginmobile.ca) (Ping timeout: 250 seconds)
[14:05:28] *** Quits: weyhmueller (~weyhmuell@blofeld.nc.w9r.de) (Quit: ZNC 1.8.2 - https://znc.in)
[14:07:36] *** Joins: mad_enz (~mad_enz@lnsm3-torontoxn-142-116-106-108.internet.virginmobile.ca)
[14:08:27] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:09:30] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:10:37] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:11:39] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:12:15] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[14:12:47] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:13:41] *** Quits: deusexbeer (~hedeo@37-146-236-2.broadband.corbina.ru) (Quit: Konversation terminated!)
[14:13:48] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Remote host closed the connection)
[14:14:55] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:15:52] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:16:58] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:17:57] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:19:05] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:20:07] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:21:15] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:22:18] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:23:25] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:24:25] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:25:34] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:26:34] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:27:43] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:28:43] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:29:51] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:30:46] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:31:55] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:32:57] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:34:05] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:35:05] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:35:36] *** Joins: weyhmueller (~weyhmuell@blofeld.nc.w9r.de)
[14:36:11] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:37:09] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:37:57] *** Quits: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy) (Ping timeout: 240 seconds)
[14:38:15] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:38:32] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:e954:6a22:3202:5b23)
[14:39:17] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:40:04] *** Joins: MajorBiscuit (~MajorBisc@c-001-001-037.client.tudelft.eduvpn.nl)
[14:40:24] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:41:27] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:42:34] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:43:39] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Remote host closed the connection)
[14:44:45] *** Quits: gproto23 (~gproto23@user/gproto23) (Read error: Connection reset by peer)
[14:44:45] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:45:43] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:46:50] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:47:41] *** Quits: weyhmueller (~weyhmuell@blofeld.nc.w9r.de) (Quit: ZNC 1.8.2 - https://znc.in)
[14:47:50] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:48:58] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:49:53] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:51:00] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:51:58] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:53:05] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:54:06] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:55:14] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:56:17] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:57:25] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:58:16] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:58:40] *** Joins: weyhmueller (~weyhmuell@blofeld.nc.w9r.de)
[14:59:22] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:00:23] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:01:30] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:02:30] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:03:37] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:04:33] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:05:40] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:06:21] *** Joins: machinedgod (~machinedg@24.105.81.50)
[15:06:24] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[15:06:40] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:07:46] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:08:41] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:09:48] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:10:44] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:10:50] *** Joins: igemnace (~ian@user/igemnace)
[15:11:24] *** Joins: rardiol (~quassel@user/rardiol)
[15:11:52] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:12:56] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:14:04] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:14:56] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:16:03] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:17:06] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:17:37] *** Joins: kish` (~sid742412@user/aqua)
[15:17:56] *** Quits: kish` (~sid742412@user/aqua) (Remote host closed the connection)
[15:18:13] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:18:17] *** Joins: kish` (~sid742412@user/aqua)
[15:19:12] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:20:20] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:21:20] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:21:39] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[15:22:30] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:23:22] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:24:29] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:25:31] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:26:39] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:27:41] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:28:48] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:29:50] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Remote host closed the connection)
[15:30:56] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:32:04] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:33:11] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:33:38] *** Joins: linear_cannon (~linear_ca@50.35.78.163)
[15:34:13] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:35:19] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:36:24] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:37:31] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:38:36] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:39:25] *** Quits: linear_cannon (~linear_ca@50.35.78.163) (Ping timeout: 240 seconds)
[15:39:43] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:40:41] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:41:49] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:42:43] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:43:50] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:44:32] *** Joins: dez (uid92154@user/dez)
[15:44:48] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:45:54] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:46:50] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:47:56] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:48:57] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:50:03] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:51:05] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:52:12] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:52:44] *** Joins: linear_cannon (~linear_ca@50.35.78.163)
[15:53:08] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:54:13] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:55:12] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:56:19] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:57:20] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:58:27] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:58:35] *** Quits: chomwitt (~chomwitt@ppp-2-85-245-134.home.otenet.gr) (Ping timeout: 252 seconds)
[15:58:56] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[15:59:27] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:00:35] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:01:37] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:02:44] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:03:44] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:04:18] *** Quits: Bonstra (~Bonstra@val.bonstra.fr.eu.org) (Remote host closed the connection)
[16:04:52] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:05:48] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:06:55] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:07:09] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[16:07:52] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:09:00] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:10:02] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:11:07] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:12:14] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:13:20] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:14:17] *** Joins: chomwitt (~chomwitt@2a02:587:dc1c:a00:12c3:7bff:fe6d:d374)
[16:14:27] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:15:34] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:16:38] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:17:45] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:17:57] *** Joins: Choco (~Choco@host150.200-71-232.telecom.net.ar)
[16:18:49] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:19:56] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:20:57] *** Quits: linear_cannon (~linear_ca@50.35.78.163) (Ping timeout: 240 seconds)
[16:21:01] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:22:09] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:23:04] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Remote host closed the connection)
[16:24:11] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:25:14] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:26:21] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:27:28] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:28:35] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:29:00] *** Quits: chomwitt (~chomwitt@2a02:587:dc1c:a00:12c3:7bff:fe6d:d374) (Ping timeout: 268 seconds)
[16:29:41] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:29:58] *** Joins: chomwitt (~chomwitt@2a02:587:dc1c:a00:12c3:7bff:fe6d:d374)
[16:30:46] *** Joins: linear_cannon (~linear_ca@50.35.78.163)
[16:30:48] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:31:51] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:32:59] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:34:02] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:35:07] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:36:09] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:37:16] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:37:37] *** Quits: chomwitt (~chomwitt@2a02:587:dc1c:a00:12c3:7bff:fe6d:d374) (Ping timeout: 240 seconds)
[16:38:17] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:39:23] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:40:22] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:41:28] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:42:33] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:43:30] <sm2n> Sofia: F* is quite nice, and gets actual use in practice. In the context of cryptography, project everest is worth checking out. Refinement types are pretty nice for actually writing formally verified programs in practice.
[16:43:40] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:44:38] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:44:39] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Quit: Lost terminal)
[16:45:43] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:46:41] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:47:48] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:48:45] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:49:51] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:50:55] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Remote host closed the connection)
[16:52:03] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:52:58] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:54:05] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:54:15] *** Joins: neiluj (~neiluj@2a01:e0a:1f2:d960:f71f:a091:77ad:cd71)
[16:55:10] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:56:08] *** Quits: linear_cannon (~linear_ca@50.35.78.163) (Ping timeout: 268 seconds)
[16:56:17] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:56:30] <neiluj> Hi! Been studying the Blake algorithm and wondered if its worth implementing it in x86 assembly (esp. the Blake2b algo with vectorized round operations)?
[16:57:18] <neiluj> Since the algorithm is relatively short.
[16:57:21] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:57:24] *** Joins: linear_cannon (~linear_ca@50.35.78.163)
[16:58:08] <neiluj> And maybe try to implement some attacks (found at least 3 types listed on the Blake2 website) if time permits.
[16:58:28] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:59:09] *** Joins: chomwitt (~chomwitt@2a02:587:dc1c:a00:12c3:7bff:fe6d:d374)
[16:59:30] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:59:38] <neiluj> but it might be too ambitious because the attacks are pretty hardcore after a quick glance
[17:00:37] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:00:38] <neiluj> anyway their complexities are more than 2^128 so impractical
[17:01:39] <MacGyver> You can definitely *implement* the attacks, time permits that.
[17:01:43] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:01:50] <MacGyver> But you won't be able to execute them, time doesn't permit that ;)
[17:02:33] <neiluj> oh indeed
[17:02:50] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:03:41] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:04:48] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:05:49] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:06:54] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:07:58] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:09:06] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:10:13] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:11:20] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:12:19] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:12:45] *** Quits: linear_cannon (~linear_ca@50.35.78.163) (Ping timeout: 256 seconds)
[17:12:50] *** Quits: Deknos (~someone@user/menace) (Quit: Deknos)
[17:13:25] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:14:28] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:15:35] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:16:30] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:17:39] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:18:36] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:19:14] *** Quits: raj (uid72176@user/raj) (Quit: Connection closed for inactivity)
[17:19:43] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:20:41] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:21:29] *** Quits: Douwd (~douwd@crux.bsdpro.net) (Quit: So long, and thanks for all the fish.)
[17:21:48] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:22:40] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:23:45] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:24:53] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:25:58] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:26:25] *** Joins: linear_cannon (~linear_ca@50.35.78.163)
[17:26:54] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:28:01] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:29:06] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:30:12] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:31:06] *** Quits: madage (~madage@user/madage) (Remote host closed the connection)
[17:31:11] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:31:24] *** Joins: madage (~madage@user/madage)
[17:32:01] *** Quits: linear_cannon (~linear_ca@50.35.78.163) (Ping timeout: 245 seconds)
[17:32:17] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:33:17] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:34:23] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:35:17] <Sofia> neiluj: If you like blake2, you'll love blake3!
[17:35:19] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:36:25] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:37:34] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:38:40] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:39:12] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[17:39:31] <neiluj> hehe
[17:39:50] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:40:30] *** Joins: gproto23 (~gproto23@user/gproto23)
[17:40:56] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:41:52] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:42:57] *** ChanServ sets mode: +o Peng
[17:43:00] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:43:57] *** Joins: linear_cannon (~linear_ca@50.35.78.163)
[17:44:00] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:45:07] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:46:09] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:47:16] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:48:18] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:48:25] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[17:48:57] *** Quits: linear_cannon (~linear_ca@50.35.78.163) (Ping timeout: 240 seconds)
[17:49:27] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:49:44] *** Joins: linear_cannon (~linear_ca@50.35.78.163)
[17:50:32] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:57:17] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:a1e1:617f:5617:eda3) (Ping timeout: 240 seconds)
[17:59:16] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:a1e1:617f:5617:eda3)
[18:01:45] *** Joins: Guyver2_ (Guyver@guyver2.xs4all.nl)
[18:03:17] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:a1e1:617f:5617:eda3) (Ping timeout: 240 seconds)
[18:03:33] *** Joins: cwebber (~user@user/cwebber)
[18:05:12] *** Quits: Guyver2 (~Guyver@guyver2.xs4all.nl) (Ping timeout: 268 seconds)
[18:05:16] *** Guyver2_ is now known as Guyver2
[18:14:59] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[18:15:10] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[18:41:02] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[18:49:37] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Ping timeout: 240 seconds)
[18:52:03] *** Joins: x88x88x (~x88x88x@149.28.53.172)
[18:59:47] <TimMc> Sofia: Last I saw, they wanted to use FPE on images of credit cards because they thought PCI required this.
[19:52:19] *** Quits: Choco (~Choco@host150.200-71-232.telecom.net.ar) (Quit: Client closed)
[19:54:37] *** Quits: x88x88x (~x88x88x@149.28.53.172) (Ping timeout: 240 seconds)
[19:56:08] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-2893-5a12-7df9-5067.res6.spectrum.com)
[20:01:45] *** Quits: geeknix (~pi@2001:e68:5432:c000:3795:5c40:487:1d37) (Ping timeout: 268 seconds)
[20:01:55] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[20:07:54] *** Joins: Choco (~Choco@host150.200-71-232.telecom.net.ar)
[20:10:42] *** Quits: stiell (~stiell@gateway/tor-sasl/stiell) (Remote host closed the connection)
[20:11:04] *** Joins: stiell (~stiell@gateway/tor-sasl/stiell)
[20:14:18] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[20:15:02] *** Joins: geeknix (~pi@2001:e68:5432:307:f6b7:9845:4bce:2869)
[20:23:56] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[20:24:29] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[20:32:17] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[20:32:35] *** Quits: gproto23 (~gproto23@user/gproto23) (Read error: Connection reset by peer)
[20:32:44] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[20:36:17] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Ping timeout: 240 seconds)
[20:37:03] *** Quits: tusko (~yeurt@copyfree/advocate/tusko) (Remote host closed the connection)
[20:37:19] *** Joins: tusko (~yeurt@copyfree/advocate/tusko)
[20:40:12] *** Joins: gproto23 (~gproto23@user/gproto23)
[20:42:59] *** Quits: rardiol (~quassel@user/rardiol) (Ping timeout: 256 seconds)
[20:44:10] *** Quits: tusko (~yeurt@copyfree/advocate/tusko) (Remote host closed the connection)
[20:44:26] *** Joins: tusko (~yeurt@copyfree/advocate/tusko)
[20:47:47] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[20:52:38] *** Joins: x88x88x (~x88x88x@149.28.53.172)
[20:53:11] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) ()
[20:54:26] *** Joins: jaeckel_ (~jaeckel@user/jaeckel)
[20:58:52] *** Quits: jaeckel_ (~jaeckel@user/jaeckel) (Quit: Goodbye Cruel World)
[21:05:21] *** Joins: jaeckel_ (~jaeckel@user/jaeckel)
[21:05:40] <neiluj> so sad Blake2 and Blake3 were submitted after the sha3 competition
[21:09:24] *** Quits: madage (~madage@user/madage) (Ping timeout: 276 seconds)
[21:12:03] *** Joins: madage (~madage@user/madage)
[21:17:54] *** Quits: jaeckel_ (~jaeckel@user/jaeckel) (Quit: Goodbye Cruel World)
[21:22:19] *** Joins: jaeckel_ (~jaeckel@user/jaeckel)
[21:22:29] *** Peng sets mode: -o Peng
[21:28:57] *** Joins: zro (~zro@user/zro)
[21:29:38] *** Quits: x88x88x (~x88x88x@149.28.53.172) (Ping timeout: 260 seconds)
[21:35:28] *** Quits: jaeckel_ (~jaeckel@user/jaeckel) (Remote host closed the connection)
[21:36:54] *** Joins: x88x88x (~x88x88x@149.28.53.172)
[21:39:12] *** Quits: MajorBiscuit (~MajorBisc@c-001-001-037.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.3)
[21:47:53] *** Joins: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy)
[21:57:42] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Remote host closed the connection)
[21:58:05] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[22:05:32] *** Quits: chomwitt (~chomwitt@2a02:587:dc1c:a00:12c3:7bff:fe6d:d374) (Ping timeout: 240 seconds)
[22:08:37] *** Joins: chomwitt (~chomwitt@2a02:587:dc1c:a00:12c3:7bff:fe6d:d374)
[22:09:37] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-2893-5a12-7df9-5067.res6.spectrum.com) (Ping timeout: 240 seconds)
[22:12:47] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[22:17:44] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[22:19:37] *** Quits: zro (~zro@user/zro) (Ping timeout: 240 seconds)
[22:20:26] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[22:22:13] *** Joins: zro (~zro@user/zro)
[22:28:40] *** Joins: aleck (~aleck@user/aleck)
[22:30:11] *** Quits: aleck1 (~aleck@user/aleck) (Ping timeout: 252 seconds)
[22:43:57] *** Quits: x88x88x (~x88x88x@149.28.53.172) (Ping timeout: 240 seconds)
[22:50:04] *** Quits: Choco (~Choco@host150.200-71-232.telecom.net.ar) (Quit: Client closed)
[22:51:04] *** Quits: phebus (~phebus@fsf/member/phebus) (Quit: POKE 1,0)
[22:55:20] *** Joins: Choco (~Choco@host150.200-71-232.telecom.net.ar)
[22:55:57] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[23:02:56] *** Quits: BOKALDO (~BOKALDO@user/bokaldo) (Quit: Leaving)
[23:12:54] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-800a-95c0-a608-9494.res6.spectrum.com)
[23:13:02] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Ping timeout: 240 seconds)
[23:17:12] *** Quits: JollyRoger (~JollyRoge@user/thejollyroger) (Remote host closed the connection)
[23:17:39] *** Joins: JollyRoger (~JollyRoge@user/thejollyroger)
[23:21:16] *** Joins: x88x88x (~x88x88x@149.28.53.172)
[23:43:09] *** Quits: zro (~zro@user/zro) (Ping timeout: 268 seconds)
[23:43:45] *** Joins: zro (~zro@user/zro)
[23:44:59] *** Quits: opsecfail (~opsecfail@user/opsecfail) (Ping timeout: 252 seconds)
[23:45:37] *** Joins: wolfshappen (~waff@irc.furworks.de)
[23:48:14] *** Quits: zro (~zro@user/zro) (Ping timeout: 260 seconds)
[23:49:57] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[23:51:26] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[23:52:53] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Remote host closed the connection)
[23:53:19] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[23:54:14] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 268 seconds)
[23:57:01] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[23:59:25] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
