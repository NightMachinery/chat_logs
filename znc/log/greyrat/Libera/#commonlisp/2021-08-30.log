[00:15:13] <VincentVega> lisp123_: Interesting, thanks
[00:20:30] *** Joins: robin_ (~robin@user/terpri)
[00:22:49] *** Quits: robin (~robin@user/terpri) (Ping timeout: 250 seconds)
[00:26:05] *** Joins: notzmv (~zmv@user/notzmv)
[00:34:08] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.2)
[00:37:14] *** Quits: cage (~cage@dynamic-adsl-78-15-36-212.clienti.tiscali.it) (Quit: rcirc on GNU Emacs 27.1)
[00:41:03] <lisp123_> Is there a way to extract which file a function is defined in from a live image?
[00:42:29] <lisp123_> I guess one could do it by leveraging slime, but wonder if its something that can be done more generally by an implementation - is the file information passed into the image
[00:43:35] <moon-child> what if the function was not defined in a file?
[00:43:51] <lisp123_> Then it could return nil or something
[00:44:25] <lotuseater> in SBCL if you define and compile/load a function from a file, then call DESCRIBE on it it gives you also the path of the file where it lives
[00:44:41] <lisp123_> lotuseater: Great!
[00:44:50] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[00:46:50] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[00:47:40] *** Joins: hendursaga (~weechat@user/hendursaga)
[00:50:38] <pjb> lisp123_: in general, functions are not defined in files.  functions are defined by evaluating a lambda expression.  Usually those lambda expressions are produced by a macro, such as defun, defgeneric, defmethod, defmacro, and others.
[00:51:04] <pjb> lisp123_: those macros expressions are often read from files, but they can also very often be generated by other macros.
[00:51:05] <moon-child> pjb: sure, but we may associate a 'location' with such a lambda expression
[00:51:18] <moon-child> this location is used for error reporting, for instance
[00:51:32] <moon-child> in which respect I think it is meaningful to speak of a function's being 'defined' in a file
[00:51:33] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.2)
[00:51:53] <pjb> lisp123_: There's nothing standard about that.  There may be implementation specific APIs to do some approximation of that.
[00:55:26] <lisp123_> pjb: Thanks
[00:57:22] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[01:03:46] *** Quits: psycomic (~psycomic@2a01:e0a:18:d0a0:1cc:73cc:fc77:3c4a) (Read error: Connection reset by peer)
[01:05:09] *** Joins: dra (~dra@2a04:4540:641d:4500:812b:a6f8:737:14ef)
[01:05:10] *** Quits: gaqwas (~john@dynamic-095-118-099-198.95.118.pool.telefonica.de) (Ping timeout: 240 seconds)
[01:05:17] *** Quits: Cymew (~ante@c-e989225c.023-1144-7570702.bbcust.telenor.se) (Ping timeout: 250 seconds)
[01:11:58] *** Joins: VincentV` (~user@185.66.254.237)
[01:13:25] *** Quits: VincentVega (~user@185.66.254.237) (Ping timeout: 252 seconds)
[01:15:08] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 250 seconds)
[01:16:17] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[01:18:40] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[01:18:41] *** Lord_of_Life_ is now known as Lord_of_Life
[01:29:13] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[01:34:26] *** Joins: Oladon (~olad@98.43.81.226)
[01:40:49] *** Quits: khrbt (~znc@user/khrbt) (Ping timeout: 250 seconds)
[01:42:33] <lotuseater> lisp123_: "So what is this Common Lisp you speak of?" ^^
[01:44:47] *** edgar-rft is now known as world
[01:45:11] *** Joins: khrbt (~znc@user/khrbt)
[01:45:19] *** world is now known as edgar-rft
[01:46:00] *** Joins: asarch (~asarch@2806:10ae:7:15d4:21db:8911:d8f3:334a)
[01:47:42] *** Quits: pve (~pve@176-93-112-45.bb.dnainternet.fi) (Quit: leaving)
[02:04:41] *** Quits: Duuqnd (~duuqnd@89-253-114-156.customers.ownit.se) (Quit: Leaving)
[02:06:27] *** Quits: VincentV` (~user@185.66.254.237) (Remote host closed the connection)
[02:06:47] *** Joins: VincentV` (~user@185.66.254.237)
[02:12:21] *** Quits: lisp123_ (~lisp123@45.86.202.65) (Remote host closed the connection)
[02:13:06] *** Joins: lisp123 (~lisp123@45.86.202.65)
[02:15:22] *** Joins: lisp123_ (~lisp123@45.86.202.65)
[02:18:05] *** Quits: lisp123 (~lisp123@45.86.202.65) (Ping timeout: 250 seconds)
[02:26:11] *** Quits: srhm (~srhm@user/srhm) (Quit: Konversation terminated!)
[02:28:19] *** Joins: srhm (~srhm@user/srhm)
[02:28:42] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[02:29:08] *** Joins: srhm (~srhm@user/srhm)
[02:34:07] *** Joins: asarch_ (~asarch@2806:10ae:7:2958:177f:a6d7:b0e:3111)
[02:36:36] *** Quits: asarch (~asarch@2806:10ae:7:15d4:21db:8911:d8f3:334a) (Ping timeout: 250 seconds)
[02:37:34] *** asarch_ is now known as asarch
[02:40:54] *** Quits: lisp123_ (~lisp123@45.86.202.65) (Remote host closed the connection)
[02:41:27] *** Joins: lisp123 (~lisp123@45.86.202.65)
[02:42:30] *** Quits: xlei (znc@pool-68-129-84-118.nycmny.fios.verizon.net) (Read error: Connection reset by peer)
[02:42:49] <VincentV`> lisp123: I did it : )
[02:43:40] *** Quits: taiju (~taiju@240b:253:ec40:2400:e1d1:588c:bc3f:1887) (Ping timeout: 240 seconds)
[02:43:51] *** Joins: taiju (~taiju@240b:253:ec40:2400:e1d1:588c:bc3f:1887)
[02:46:47] *** Quits: lisp123 (~lisp123@45.86.202.65) (Read error: Connection reset by peer)
[02:47:07] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:49cc:f481:d79d:3f52)
[02:49:09] *** Joins: xlei (znc@pool-68-129-84-118.nycmny.fios.verizon.net)
[02:50:09] *** Quits: frgo (~frgo@p200300deef0cee0055e6682922dee2f3.dip0.t-ipconnect.de) (Remote host closed the connection)
[02:50:36] *** Joins: frgo (~frgo@p200300deef0cee0055e6682922dee2f3.dip0.t-ipconnect.de)
[02:53:07] *** Quits: dra (~dra@2a04:4540:641d:4500:812b:a6f8:737:14ef) (Quit: Leaving)
[02:54:48] *** Quits: taiju (~taiju@240b:253:ec40:2400:e1d1:588c:bc3f:1887) (Ping timeout: 250 seconds)
[02:57:15] *** Quits: VincentV` (~user@185.66.254.237) (Remote host closed the connection)
[02:57:33] *** Joins: taiju (~taiju@M014013236064.v4.enabler.ne.jp)
[02:57:38] *** Joins: VincentV` (~user@185.66.254.237)
[03:08:38] *** Quits: selwyn (~selwyn@user/selwyn) (Quit: Leaving)
[03:12:40] *** Joins: cjb (~cjb@user/cjb)
[03:13:47] *** Joins: lisp123 (~lisp123@45.86.202.65)
[03:15:07] *** Joins: asarch_ (~asarch@2806:10ae:7:e24d:80e5:6d5a:747c:8ed6)
[03:17:27] *** Quits: asarch (~asarch@2806:10ae:7:2958:177f:a6d7:b0e:3111) (Ping timeout: 240 seconds)
[03:18:40] *** Quits: sander (~sander@user/sander) (Ping timeout: 240 seconds)
[03:19:02] *** Joins: sander (~sander@user/sander)
[03:19:40] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (Ping timeout: 240 seconds)
[03:19:40] *** Quits: kagevf (~jfh@ip68-224-125-162.lv.lv.cox.net) (Ping timeout: 240 seconds)
[03:19:52] *** Joins: kagevf (~jfh@ip68-224-125-162.lv.lv.cox.net)
[03:20:27] *** Quits: asarch_ (~asarch@2806:10ae:7:e24d:80e5:6d5a:747c:8ed6) (Ping timeout: 240 seconds)
[03:20:35] *** Joins: Noisytoot (~noisytoot@sourcehut/user/noisytoot)
[03:20:40] <MetaYan> borodust: Great!
[03:20:53] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
[03:22:40] *** Quits: jgkamat (~jay@user/jay) (Ping timeout: 240 seconds)
[03:24:58] *** Joins: jgkamat (~jay@user/jay)
[03:25:05] *** Quits: jgkamat (~jay@user/jay) (Remote host closed the connection)
[03:25:58] *** Joins: jgkamat (~jay@user/jay)
[03:26:52] *** Quits: lisp123 (~lisp123@45.86.202.65) (Ping timeout: 250 seconds)
[03:41:22] *** Quits: attila_lendvai (~alendvai@catv-86-101-74-70.catv.broadband.hu) (Ping timeout: 252 seconds)
[03:50:25] *** Joins: yitzi (~yitzi@173-27-106-188.client.mchsi.com)
[03:52:37] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:49cc:f481:d79d:3f52) (Remote host closed the connection)
[03:54:35] *** Joins: lisp123 (~lisp123@45.86.202.65)
[04:05:01] *** Quits: lisp123 (~lisp123@45.86.202.65) (Ping timeout: 252 seconds)
[04:10:04] *** Joins: igemnace (~ian@user/igemnace)
[04:14:11] *** Quits: fengshaun (~fengshaun@68.69.214.210) (Quit: bibi!)
[04:15:37] *** Quits: random-nick (~random-ni@87.116.180.61) (Ping timeout: 248 seconds)
[04:24:41] *** Quits: taiju (~taiju@M014013236064.v4.enabler.ne.jp) (Ping timeout: 248 seconds)
[04:26:29] *** Joins: fengshaun (~fengshaun@68.69.214.210)
[04:28:21] *** Quits: fengshaun (~fengshaun@68.69.214.210) (Client Quit)
[04:28:49] *** Joins: fengshaun (~fengshaun@68.69.214.210)
[04:42:27] *** Joins: taiju (~taiju@M014013236064.v4.enabler.ne.jp)
[04:44:15] *** Quits: taiju (~taiju@M014013236064.v4.enabler.ne.jp) (Client Quit)
[04:46:04] <VincentV`> When lisp123 is around again, it would be appreciated if someone could point him at https://pastebin.com/91i5p1fe, he was interested in the implementation.
[04:46:21] <VincentV`> lisp123: ^
[04:52:18] <derelict> Colleen: notify lisp123  When lisp123 is around again, it would be appreciated if someone could point him at https://pastebin.com/91i5p1fe, he was interested in the implementation. from: VincentV`
[04:52:19] <Colleen> derelict: Got it. I'll let lisp123 know as soon as possible.
[04:52:32] <derelict> :
[04:53:37] <VincentV`> derelict: awesome, thanks
[04:54:38] <derelict> :3
[04:59:04] *** Quits: fengshaun (~fengshaun@68.69.214.210) (Quit: bibi!)
[05:12:09] *** Quits: cjb (~cjb@user/cjb) (Ping timeout: 256 seconds)
[05:13:16] *** Joins: cjb (~cjb@user/cjb)
[05:18:16] *** Joins: asarch (~asarch@2806:10ae:7:e787:8323:93a7:410d:290e)
[05:21:24] <yitzi> ::notify moon-child Associating source locations with forms is very implementation specific. In order to figure out how to do so you'll need to look each implementation's code. There may be hints in swank. For SBCL see sb-c::do-forms-from-info also. Also see here https://github.com/yitzchak/common-lisp-jupyter/blob/0b819c61797168002e8b29f87c63a02f04d07377/src/cl-jupyter/kernel.lisp#L582-L707  ... in general it is a not easy and very
[05:21:24] <yitzi> prone to breakage.
[05:21:24] <Colleen> yitzi: Got it. I'll let moon-child know as soon as possible.
[05:25:07] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 240 seconds)
[05:27:19] *** Joins: aeth (~aeth@user/aeth)
[05:37:33] *** Joins: fengshaun (~fengshaun@68.69.214.210)
[05:49:00] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 250 seconds)
[05:49:22] <moon-child> yitzi: sure--I don't think that lisp123_ was looking for anything other than an implementation-specific hack
[05:49:22] <Colleen> moon-child: yitzi said 27 minutes, 58 seconds ago: Associating source locations with forms is very implementation specific. In order to figure out how to do so you'll need to look each implementation's code. There may be hints in swank. For SBCL see sb-c::do-forms-from-info also. Also see here https://github.com/yitzchak/common-lisp-jupyter/blob/0b819c617971
[05:49:22] <Colleen> 68002e8b29f87c63a02f04d07377/src/cl-jupyter/kernel.lisp#L582-L707  ... in general it is a not easy and very
[06:13:44] *** Quits: asarch (~asarch@2806:10ae:7:e787:8323:93a7:410d:290e) (Quit: Leaving)
[06:34:40] *** Quits: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net) (Ping timeout: 240 seconds)
[06:34:47] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 240 seconds)
[06:36:39] *** Joins: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net)
[06:39:40] *** Quits: jmercouris (sid438340@id-438340.stonehaven.irccloud.com) (Ping timeout: 258 seconds)
[06:39:49] *** Joins: akoana (~ah@user/akoana)
[06:41:12] *** Quits: IUSR (sid348938@id-348938.stonehaven.irccloud.com) (Ping timeout: 258 seconds)
[06:42:15] *** Joins: jmercouris (sid438340@stonehaven.irccloud.com)
[06:42:44] *** Joins: IUSR (sid348938@id-348938.stonehaven.irccloud.com)
[06:42:44] *** Quits: d_run (sid83858@id-83858.stonehaven.irccloud.com) (Ping timeout: 258 seconds)
[06:43:55] *** Joins: d_run (sid83858@id-83858.stonehaven.irccloud.com)
[06:48:43] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[06:53:35] *** Joins: Lycurgus (~juan@cpe-45-46-140-49.buffalo.res.rr.com)
[06:59:27] *** Quits: Lycurgus (~juan@cpe-45-46-140-49.buffalo.res.rr.com) (Quit: Exeunt)
[07:05:02] <rdrg109> [Q] Is there any way to know the most downloaded packages in Quicklisp?
[07:12:18] <mfiano> Yes, with quicklisp-stats
[07:18:41] <rdrg109> mfiano: Thanks! :)
[07:21:47] *** Joins: antonv (~antonv@46.53.240.182)
[07:22:36] <antonv> minion: registration, please?
[07:22:36] <minion> The URL https://gitlab.common-lisp.net/users/sign_up?secret=5e8c1303 will be valid until 03:00 UTC.
[07:22:58] *** Quits: jmercouris (sid438340@stonehaven.irccloud.com) (Read error: Connection reset by peer)
[07:23:22] *** Quits: iisi (sid19824@id-19824.stonehaven.irccloud.com) (Read error: Connection reset by peer)
[07:23:40] *** Quits: IUSR (sid348938@id-348938.stonehaven.irccloud.com) (Read error: Connection reset by peer)
[07:24:07] *** Quits: d_run (sid83858@id-83858.stonehaven.irccloud.com) (Ping timeout: 240 seconds)
[07:24:31] *** Quits: gendl (sid100083@id-100083.stonehaven.irccloud.com) (Ping timeout: 258 seconds)
[07:25:33] *** Joins: d_run (sid83858@stonehaven.irccloud.com)
[07:25:42] *** Joins: jmercouris (sid438340@id-438340.stonehaven.irccloud.com)
[07:25:50] *** Joins: IUSR (sid348938@stonehaven.irccloud.com)
[07:25:53] *** Joins: gendl (sid100083@id-100083.stonehaven.irccloud.com)
[07:27:14] *** Joins: iisi (sid19824@id-19824.stonehaven.irccloud.com)
[07:31:16] *** Quits: prxq (~quassel@x4db69b92.dyn.telefonica.de) (Ping timeout: 252 seconds)
[07:31:22] *** Joins: prxq_ (~quassel@dynamic-077-012-033-232.77.12.pool.telefonica.de)
[07:31:28] *** Joins: asarch (~asarch@2806:10ae:7:e787:8323:93a7:410d:290e)
[07:31:50] <beach> Good morning everyone!
[07:36:01] *** Quits: srhm (~srhm@user/srhm) (Quit: Konversation terminated!)
[07:42:33] *** Quits: antonv (~antonv@46.53.240.182) (Ping timeout: 256 seconds)
[07:56:51] *** Joins: antonv (~antonv@46.53.240.182)
[07:56:51] <antonv> minion: registration, please?
[07:56:52] <minion> The URL https://gitlab.common-lisp.net/users/sign_up?secret=3a35c994 will be valid until 03:30 UTC.
[07:58:08] *** Quits: semz (~none@user/semz) (Ping timeout: 250 seconds)
[08:09:16] *** Quits: antonv (~antonv@46.53.240.182) (Quit: Client closed)
[08:11:07] *** Joins: semz (~none@user/semz)
[08:12:28] *** Joins: rtoy (~Thunderbi@c-67-188-80-9.hsd1.ca.comcast.net)
[08:14:46] *** Quits: asarch (~asarch@2806:10ae:7:e787:8323:93a7:410d:290e) (Quit: Leaving)
[08:16:00] <moon-child> https://web.archive.org/web/20180727081543/http://www.pgc.com/pgc/home-stuff/papers-archive/think-w-diag/psych-rea-lisp.html
[08:37:53] *** Joins: shka (~herr@109.231.62.239)
[08:43:48] *** Joins: Oladon (~olad@98.43.81.226)
[08:54:28] *** Quits: khrbt (~znc@user/khrbt) (Ping timeout: 250 seconds)
[09:01:27] *** Joins: khrbt (~znc@user/khrbt)
[09:01:52] *** Joins: pillton (~user@2405:b000:703:2::35:28)
[09:09:14] <pillton> What term would you use to define the set of functions which return a value of a specific type? e.g. The function X accepts a function F which returns a string. The function F is a member of the set of functions which return a string.
[09:10:59] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (*.net *.split)
[09:11:00] *** Quits: srji (~srji@static.43.141.203.116.clients.your-server.de) (*.net *.split)
[09:11:00] *** Quits: specbot (~specbot@common-lisp.net) (*.net *.split)
[09:11:00] *** Quits: seanw (spwhitton@debian/spwhitton) (*.net *.split)
[09:11:00] *** Quits: Colleen (~fermion@supersolid.equilibrium.tymoon.eu) (*.net *.split)
[09:11:00] *** Quits: utis (~utis@84.208.165.160) (*.net *.split)
[09:11:00] *** Quits: dim (~dimlibera@2a02:2178:2:4:1658:d0ff:fe49:408c) (*.net *.split)
[09:11:00] *** Quits: loke (~loke@junk.nocrew.org) (*.net *.split)
[09:11:00] *** Quits: fiddlerwoaroof (~fiddlerwo@user/fiddlerwoaroof) (*.net *.split)
[09:11:00] *** Quits: borodust (~irc@user/borodust) (*.net *.split)
[09:11:00] *** Quits: mgxm (~mgxm@user/mgxm) (*.net *.split)
[09:11:00] *** Quits: dbotton (sid492350@id-492350.tooting.irccloud.com) (*.net *.split)
[09:11:00] *** Quits: splittist (sid17737@id-17737.tinside.irccloud.com) (*.net *.split)
[09:11:00] *** Quits: hubvu (sid495858@id-495858.tinside.irccloud.com) (*.net *.split)
[09:11:00] *** Quits: pieguy128 (~pieguy128@bas1-montreal02-65-92-163-194.dsl.bell.ca) (*.net *.split)
[09:11:00] *** Quits: mason (~mason@redhat/mason) (*.net *.split)
[09:11:00] *** Quits: _whitelogger (~whitelogg@uruz.whitequark.org) (*.net *.split)
[09:11:02] *** Quits: minion (~minion@common-lisp.net) (Write error: Connection reset by peer)
[09:11:11] *** Joins: srji (~srji@static.43.141.203.116.clients.your-server.de)
[09:11:12] *** Joins: utis (~utis@84.208.165.160)
[09:11:12] *** Joins: mason (~mason@redhat/mason)
[09:11:13] *** Joins: seanw (spwhitton@athena.silentflame.com)
[09:11:22] *** Joins: dim (~dimlibera@212.85.154.83)
[09:11:23] *** Quits: seanw (spwhitton@athena.silentflame.com) (Changing host)
[09:11:23] *** Joins: seanw (spwhitton@debian/spwhitton)
[09:11:36] *** Joins: dbotton (sid492350@id-492350.tooting.irccloud.com)
[09:12:00] *** Joins: _whitelogger (~whitelogg@uruz.whitequark.org)
[09:12:15] *** Joins: specbot (~specbot@common-lisp.net)
[09:12:15] *** Joins: minion (~minion@common-lisp.net)
[09:12:20] *** Joins: splittist (sid17737@id-17737.tinside.irccloud.com)
[09:12:24] *** Joins: hubvu (sid495858@id-495858.tinside.irccloud.com)
[09:12:29] *** Joins: Colleen (~fermion@supersolid.equilibrium.tymoon.eu)
[09:12:32] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-57-65-92-163-194.dsl.bell.ca)
[09:12:39] *** Joins: loke (~loke@junk.nocrew.org)
[09:12:39] *** Joins: mgxm (~mgxm@user/mgxm)
[09:12:41] *** Joins: fiddlerwoaroof (~fiddlerwo@user/fiddlerwoaroof)
[09:12:49] <beach> Tough one.  Maybe "<type> producer" or "<type> creator"?
[09:12:50] *** Joins: borodust (~irc@user/borodust)
[09:13:16] <beach> "<type> returner" doesn't sound nice.
[09:13:27] <moon-child> pillton: you might consider 'constructor'.  'F is a string constructor'.  It is not strictly correct, but may get the point across
[09:13:52] <beach> Or that, yes.
[09:14:57] *** Quits: jeosol (~jeosol@76-238-186-228.lightspeed.hstntx.sbcglobal.net) (Ping timeout: 250 seconds)
[09:14:58] <pillton> Cheers. It is tough. Other people have said generator.
[09:15:08] *** Quits: dilated_dinosaur (~dino@cpc1-bexl9-2-0-cust231.2-3.cable.virginm.net) (*.net *.split)
[09:15:08] *** Quits: Oddity (Oddity@user/oddity) (*.net *.split)
[09:15:08] *** Quits: lukego (sid312033@tooting.irccloud.com) (*.net *.split)
[09:15:08] *** Quits: sm2n (~sm2n@user/sm2n) (*.net *.split)
[09:15:08] *** Quits: energizer (~energizer@user/energizer) (*.net *.split)
[09:15:08] *** Quits: zagura (~zagura@user/zagura) (*.net *.split)
[09:15:08] *** Quits: remexre (~nathan@user/remexre) (*.net *.split)
[09:15:08] *** Quits: clemens3 (~clemens@225.40.150.83.ftth.as8758.net) (*.net *.split)
[09:15:08] *** Quits: Patternmaster (~georg@li1192-118.members.linode.com) (*.net *.split)
[09:15:08] *** Quits: zephyr (~alandiper@ec2-34-230-252-114.compute-1.amazonaws.com) (*.net *.split)
[09:15:18] *** Joins: zagura (~zagura@user/zagura)
[09:15:20] <beach> That works too.
[09:15:23] *** Joins: Patternmaster (~georg@li1192-118.members.linode.com)
[09:15:29] *** Joins: lukego (sid312033@id-312033.tooting.irccloud.com)
[09:15:30] *** Joins: dilated_dinosaur (~dino@cpc1-bexl9-2-0-cust231.2-3.cable.virginm.net)
[09:15:41] *** Joins: remexre (~nathan@207-153-38-50.fttp.usinternet.com)
[09:16:16] *** Joins: sm2n (~sm2n@bras-base-hmtnon143hw-grc-12-70-52-146-205.dsl.bell.ca)
[09:16:22] *** Quits: sm2n (~sm2n@bras-base-hmtnon143hw-grc-12-70-52-146-205.dsl.bell.ca) (Remote host closed the connection)
[09:16:40] *** Quits: remexre (~nathan@207-153-38-50.fttp.usinternet.com) (Client Quit)
[09:16:49] *** Joins: sm2n (~sm2n@user/sm2n)
[09:16:54] *** Joins: remexre (~nathan@user/remexre)
[09:17:23] *** Joins: energizer (~energizer@user/energizer)
[09:17:27] *** Joins: clemens3 (~clemens@225.40.150.83.ftth.as8758.net)
[09:25:23] *** Joins: Oddity (Oddity@user/oddity)
[09:25:59] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi)
[09:26:02] <White_Flame> just because it returns a value doesn't mean it created a new one
[09:26:54] <White_Flame> an iterator function over a list of strings, for instance, wouldn't sound right as a generator/constructor/producer/creator
[09:27:09] <moon-child> hence 'not strictly correct, but may get the point across''
[09:27:13] <White_Flame> right
[09:27:34] <White_Flame> if I had to reduce it to a single term out of those presented, I'd still go with "returner"
[09:28:41] <White_Flame> where in reality I tend to use the original phrase "function which returns a string", comparable to "function which takes a string"
[09:28:57] <White_Flame> the parameters are also part of the function's interface, and thus naming should be symmetric there, or inclusive of both parameters & return value
[09:30:09] <White_Flame> where ftypes come in, as in "takes a (function () string)"
[09:36:06] <pillton> So the context is an experiment with combinators whereby each combinator (e.g. alexandria's compose, conjoin, adjoin) returns a function but also maintains a record of the operations that the function is composed of. The final record can then be analysed such that an "optimised" function can be used instead of the original function. As of today, I'd like my combinators to be able to dispatch on these "functions with the attached record"
[09:36:06] <pillton> and also have them dispatch on the type returned by the function. I feel like I am barking up the wrong tree though.
[09:37:12] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[09:37:18] <beach> pillton: You could invent a new name.
[09:40:04] <beach> Like "spinning wheel" or "spinner"
[09:42:12] <pillton> Right.
[09:43:27] <pillton> I agree with everyone's points but I am also conscious of the fact that those terms have baggage.
[09:49:25] <beach> That's why I often invent a new term for it, which I then define once.
[09:49:35] <beach> s/it/things like that/
[09:49:57] *** Joins: lisp123 (~lisp123@45.86.202.65)
[09:50:27] <beach> Like "wad" instead of "parse result returned by Eclector that may contain skipped material like comments and such".
[09:51:16] <beach> Or "rack" for "vector of slot contents but that can also contain other things like the stamp for the instance, and a list of effective slots of the class as it was when the instance was created".
[09:51:39] <beach> Or "stamp" for "the unique number of the class of the instance, as it was when the instance was created".
[09:52:25] <pillton> They are good examples.
[09:52:37] <beach> Thank you.
[09:53:35] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[10:00:27] *** Joins: Volt (~Volt@c-73-145-164-70.hsd1.mi.comcast.net)
[10:01:10] *** Quits: lisp123 (~lisp123@45.86.202.65) (Ping timeout: 240 seconds)
[10:01:45] *** Parts: pranavats (3fba1d1b34@jabberfr.org) (Disconnected: Replaced by new connection)
[10:02:06] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[10:06:27] *** Quits: froggey (~froggey@cpc96342-rdng26-2-0-cust314.15-3.cable.virginm.net) (Ping timeout: 240 seconds)
[10:07:37] *** Joins: spiaggia (~user@2a01:cb19:150:3400:f1a1:1964:a938:fee)
[10:08:27] *** Joins: froggey (~froggey@cpc96342-rdng26-2-0-cust314.15-3.cable.virginm.net)
[10:10:04] *** Quits: Volt (~Volt@c-73-145-164-70.hsd1.mi.comcast.net) (Quit:  )
[10:19:21] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 248 seconds)
[10:22:37] *** Joins: Cymew (~ante@c-e989225c.023-1144-7570702.bbcust.telenor.se)
[10:22:59] <raeda_> How do I load a SBCL contrib package? I'm trying to call sb-rotate-byte:rotate-byte but I'm getting an error saying package not found
[10:23:02] *** Quits: Cymew (~ante@c-e989225c.023-1144-7570702.bbcust.telenor.se) (Read error: Connection reset by peer)
[10:24:08] <spiaggia> Does it have an ASDF system definition?
[10:24:18] <spiaggia> If so, you can use ASDF.
[10:26:15] <raeda_> Of course! Thanks, that's what I needed
[10:26:48] *** Joins: Cymew (~ante@c-e989225c.023-1144-7570702.bbcust.telenor.se)
[10:31:52] *** Quits: pillton (~user@2405:b000:703:2::35:28) (Quit: ERC (IRC client for Emacs 27.2))
[10:47:12] *** Joins: lisp123 (~lisp123@45.86.202.65)
[10:48:59] *** Joins: lisp123_ (~lisp123@5.30.23.247)
[10:52:27] *** Quits: lisp123 (~lisp123@45.86.202.65) (Ping timeout: 250 seconds)
[11:08:37] *** Joins: gaqwas (~john@dynamic-077-007-117-230.77.7.pool.telefonica.de)
[11:14:03] <lotuseater> one package for one exported function ^^
[11:15:54] <lotuseater> s/function/symbol
[11:33:30] *** Quits: seok (~Seok@n114-73-75-18.bla3.nsw.optusnet.com.au) (Ping timeout: 250 seconds)
[11:43:08] *** Joins: retropikzel (~retropikz@2001:999:202:2575:9904:dac0:bdd6:fc33)
[11:43:17] *** Quits: cjb (~cjb@user/cjb) (Quit: rcirc on GNU Emacs 28.0.50)
[11:46:09] *** Parts: spiaggia (~user@2a01:cb19:150:3400:f1a1:1964:a938:fee) (ERC Version 5.3 (IRC client for Emacs))
[11:47:35] *** Joins: pve (~pve@37-33-34-25.bb.dnainternet.fi)
[11:57:54] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[12:01:08] *** Joins: cosimone` (~user@93-34-133-215.ip49.fastwebnet.it)
[12:03:24] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Ping timeout: 250 seconds)
[12:06:42] *** Joins: treflip (~user@95.79.32.99)
[12:12:01] *** Joins: selwyn (~selwyn@user/selwyn)
[12:19:31] *** Quits: gaqwas (~john@dynamic-077-007-117-230.77.7.pool.telefonica.de) (Ping timeout: 252 seconds)
[12:23:15] *** Joins: rain3 (~rain3___@2a02:2f09:d30b:1300:514:bcc7:8202:1798)
[12:29:00] *** Joins: mikko (~mikko@2a02:7b40:d418:6a61::1)
[12:35:32] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:38:36] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[12:48:40] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[13:01:28] *** Quits: prxq_ (~quassel@dynamic-077-012-033-232.77.12.pool.telefonica.de) (Ping timeout: 250 seconds)
[13:03:21] <mikko> is the lispworks hyperspec the best i can do in terms of comprehensive common lisp documentation? the interface is, uh.. let's say not ideal
[13:04:18] <beach> Apparently, someone made a version of the standard using GNU Texinfo.
[13:04:54] *** Joins: attila_lendvai (~alendvai@catv-86-101-74-70.catv.broadband.hu)
[13:05:36] <beach> mikko: Are you new here?  I don't recognize your nick.
[13:06:05] <mikko> beach: yes, i'm just getting started with the language
[13:06:17] <beach> mikko: That's a very strange first utterance.  Usually, people start by explaining why they are interested and such.
[13:06:55] *** Parts: retropikzel (~retropikz@2001:999:202:2575:9904:dac0:bdd6:fc33) (Leaving)
[13:07:10] *** Joins: karlosz (~karlosz@217.111.39.134)
[13:07:35] <beach> mikko: The Common Lisp HyperSpec is a HTML rendering of something close to the standard.  Its main purpose is as a specification for people who implement Common Lisp.  We still don't have a "reference manual".
[13:09:16] <moon-child> 'We still don't have a "reference manual"'  in that case, if I am starting out and I want to know--for example--what the KEY argument to REMOVE-DUPLICATES does, where should I go to find out?
[13:09:26] <lotuseater> mikko: great you started the journey :)
[13:09:31] <mikko> beach: i see, how does a common lisp programmer find out how to do something then?
[13:09:42] <mikko> i'm used to reference manuals
[13:09:43] <beach> mikko: We use the Common Lisp HyperSpec.
[13:09:51] <rain3> http://l1sp.org/
[13:10:28] <pve> mikko: There are books online that you should check out, like "Practical Common Lisp".
[13:10:58] <beach> moon-child: Again, the Common Lisp HyperSpec.  But it is not good enough as a reference manual.  There is way too little explanatory text, and it is easy to miss things like the meaning of "an error should be signaled".
[13:11:11] *** Quits: Posterdati (~posterdat@host-82-49-175-12.retail.telecomitalia.it) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[13:11:50] <beach> mikko: What languages have you used that have a reference manual?
[13:12:04] <lotuseater> reading some of the awesome books and using tools, that help providing information so you don't have to know everything from pure memory, so things can grow by practicing
[13:12:06] <mfiano> http://www.lispworks.com/documentation/HyperSpec/Body/01_aa.htm
[13:12:56] <mikko> beach: python, ruby, crystal, julia mostly.. and i admire the way elixir has done their docs
[13:13:24] <beach> mikko: Does any of those things even have an independent specification, let alone an independent standard?
[13:14:09] <beach> mikko: That is "indpendent", as in "not supplied or maintained by the people who supply the programming system"?
[13:15:04] <mikko> beach: i wouldn't know :) i just write code
[13:15:50] <lotuseater> i think the short answer is simply no
[13:16:19] <beach> mikko: I see.  Well, you see, most Common Lisp programmers think it is important that the language can't change arbitrarily, and that there are several different implementations of the standard, so we would like to see a "language reference manual".
[13:16:25] <beach> But we don't have one (yet).
[13:16:50] <beach> I guess the reason is that most people are kind of OK with using the Common Lisp HyperSpec.
[13:17:05] <mikko> i guess the very first thing to do is write some custom css and userscripts to make hyperspec more usable
[13:18:05] <beach> mikko: Sure, but beware that the Common Lisp HyperSpec is subject to copyright, so you are not allowed to do what you want with it.
[13:18:22] <beach> mikko: The markup is subject to copyright.  Not the contents.
[13:20:00] <beach> mikko: Still, I maintain that it's a suboptimal introduction to complain about the main specification document.
[13:21:05] <mikko> beach: it honestly wasn't my intention to complain, i just figured i must not have found the best thing yet and i apologize for any bad feelings i may have caused
[13:21:18] <VincentV`> mikko: I highly recommend using sly-hyperspec-lookup (or it's slime equivalent), it's super handy. I just pointed it to &key and it brought up http://www.lispworks.com/documentation/HyperSpec/Body/03_da.htm. Also, I have found https://lispcookbook.github.io/cl-cookbook/ to be really handy for as a kind of friendly references about some major topics.
[13:22:18] <pve> mikko: What kind of userscripts would you like to see? (not sure what a userscript *is* exactly)
[13:22:39] <mikko> VincentV`: thanks, i'll check that out! and yeah the cookbook is super nice for getting started, i found the actual books a bit too wordy for my style
[13:24:26] <beach> mikko: Imagine I go to #python and utter something like:  Is the manual for the Python PROGRAMMING SYSTEM the best I can do in terms of comprehensive LANGUAGE reference manual?  Uh, let's say it's not ideal.
[13:24:26] <beach>  
[13:24:36] <lotuseater> mikko: the books "Land of Lisp", "Practical Common Lisp", "ANSI Common Lisp" or "A Gentle Introduction to Symbolic Computation" are great start resources.
[13:26:16] <mikko> pve: i think i'll add a bunch of quicklinks (basically this list http://www.lispworks.com/documentation/HyperSpec/Front/X_AllSym.htm ) to the right side of the page so i can easily navigate, and maybe add a search thingy too
[13:32:47] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Ping timeout: 240 seconds)
[13:33:46] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[13:34:09] <pve> mikko: there's an old screencast that you could watch to get a feel for how CL development can work: https://www.youtube.com/watch?v=NUpAvqa5hQw
[13:34:18] <pve> mikko: skip to about 11:00
[13:34:44] <lotuseater> ah this :)
[13:36:31] <pve> I love that video. It's amazing that it's still relevant after 15 years.
[13:37:01] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 252 seconds)
[13:37:07] <lotuseater> standing the test of time
[13:38:31] <lotuseater> when did the SLIME project start?
[13:41:56] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Ping timeout: 244 seconds)
[13:42:14] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[13:43:48] <pve> at a place I used to work, all the new people had to watch "the SLIME video" :)
[13:44:03] <pve> still have fond memories of that
[13:44:36] <lotuseater> sounds cool, what did you do at work?
[13:48:52] <pve> lotuseater: it was a natural language processing (NLP) research group at the university of Helsinki
[13:49:19] <lotuseater> phew, indeed a nontrivial field
[13:50:31] <pve> yeah, quite hairy
[13:50:31] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[13:50:34] <lotuseater> Finland must be a beautiful country like Sweden or Norway, I should go there sometime
[13:52:54] <pve> lotuseater: It is! Lots of lakes.
[13:53:32] <lotuseater> would be ideal for me, as I like it more cold. or living there
[13:54:33] * lotuseater looks now about what resources are there for NLP with lisp
[13:55:15] <lotuseater> I it tells me I downloaded one some time.
[13:57:43] *** Joins: Posterdati (~posterdat@host-82-49-175-12.retail.telecomitalia.it)
[14:00:32] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 244 seconds)
[14:05:55] *** Quits: yitzi (~yitzi@173-27-106-188.client.mchsi.com) (Remote host closed the connection)
[14:06:14] *** Joins: yitzi (~yitzi@173-27-106-188.client.mchsi.com)
[14:06:17] *** Quits: karlosz (~karlosz@217.111.39.134) (Quit: karlosz)
[14:12:46] *** Quits: yitzi (~yitzi@173-27-106-188.client.mchsi.com) (Quit: Leaving)
[14:14:38] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:22:32] *** Quits: scymtym (~user@ip-88-153-154-183.hsi04.unitymediagroup.de) (Ping timeout: 245 seconds)
[14:39:42] *** Joins: karlosz (~karlosz@217.111.39.134)
[14:42:27] *** Quits: Posterdati (~posterdat@host-82-49-175-12.retail.telecomitalia.it) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[14:43:25] *** Joins: Posterdati (~posterdat@host-82-49-175-12.retail.telecomitalia.it)
[14:48:32] <ecraven> has anyone tried SBCL on a PinePhone?
[14:49:22] <ecraven> (or does any other CL run on aarch64?)
[14:50:09] *** Quits: frgo (~frgo@p200300deef0cee0055e6682922dee2f3.dip0.t-ipconnect.de) (Remote host closed the connection)
[14:50:37] *** Joins: frgo (~frgo@p200300deef0cee000008947ea1c85bbd.dip0.t-ipconnect.de)
[14:50:48] *** Quits: karlosz (~karlosz@217.111.39.134) (Quit: karlosz)
[14:53:16] *** Quits: hhdave (~hhdave@ip212.ip-193-70-71.eu) (Ping timeout: 250 seconds)
[14:53:25] <lotuseater> oh cool you have one of those. maybe ECL
[14:56:52] <ecraven> yea, I'd like to run some Scheme or CL on it, to write fun stuff ;)
[14:57:09] <ecraven> but I would really like a way to create standalone executables, and most Schemes can't do that
[14:58:05] *** Joins: notzmv (~zmv@user/notzmv)
[14:58:12] <lotuseater> the CL REPL App for Android could be a good example to see how ECL and QML can be used combined for that
[15:01:01] <lotuseater> plus the advantage of not being enslaved to Android on the pinephone
[15:01:30] *** Joins: makomo (~makomo@user/makomo)
[15:03:06] *** Joins: asarch (~asarch@2806:10ae:7:e787:8323:93a7:410d:290e)
[15:08:55] *** Quits: rain3 (~rain3___@2a02:2f09:d30b:1300:514:bcc7:8202:1798) (Ping timeout: 252 seconds)
[15:14:41] <VincentV`> What line width do you guys use for your projects? I am feeling kind of ambivalent about 80, thinking of moving to 90. Any 100 users? What's your golden middle?
[15:17:46] <lotuseater> up to 100 is totally ok for me
[15:19:46] *** Joins: silasfox (~sbv@xdsl-85-197-57-82.nc.de)
[15:22:15] *** Joins: random-nick (~random-ni@87.116.165.220)
[15:23:53] <ecraven> there's a package for ecl and sbcl for aarch64, I'll try those later ;)
[15:24:12] <ecraven> yea, I only need an X library, and that's available ;)
[15:24:31] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[15:24:47] <ecraven> also, developping directly *on* the pinephone via slime/sly is something I don't even want to think about, because that just makes CL beat any other solution by miles ;)
[15:27:01] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[15:27:13] <lotuseater> miles? lightyears!
[15:40:49] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 252 seconds)
[15:50:17] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Read error: Connection reset by peer)
[15:50:44] *** Joins: amb007 (~a_bakic@30.14.23.93.rev.sfr.net)
[16:04:50] *** Joins: hineios (~hineios@a95-93-142-124.cpe.netcabo.pt)
[16:04:50] *** Quits: amb007 (~a_bakic@30.14.23.93.rev.sfr.net) (Read error: Connection reset by peer)
[16:06:17] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[16:07:05] <lisp123_> VincentV`: 80 and below, Start off at around 65 and then give 15 as buffer
[16:07:33] <lisp123_> However, sometimes for doc strings, I will break that rule, particularly for slot-documentation (as it is already indented)
[16:07:57] *** Joins: scymtym (~user@2001:638:504:20e6:6ac3:87e0:e782:f3fc)
[16:08:21] <lisp123_> Reason I go for 80 and not 100, is because I rather have multiple frames open in Emacs at the same time (usually 2x2) - If I used another IDE, I would use 100 probably
[16:10:12] <mikko> pve: since you were curious about the userscript: https://i.imgur.com/ddJNIZk.mp4
[16:14:25] *** Quits: scymtym (~user@2001:638:504:20e6:6ac3:87e0:e782:f3fc) (Remote host closed the connection)
[16:15:16] *** Joins: scymtym (~user@2001:638:504:20e6:6ac3:87e0:e782:f3fc)
[16:15:47] <jmercouris> I use 100 lines approximately
[16:15:53] <jmercouris> 100 character width lines
[16:21:17] *** Quits: khrbt (~znc@user/khrbt) (Ping timeout: 245 seconds)
[16:21:57] *** Joins: hhdave (~hhdave@ip212.ip-193-70-71.eu)
[16:26:58] *** Joins: selwyn (~selwyn@user/selwyn)
[16:29:29] *** Joins: yitzi (~yitzi@97-64-230-163.client.mchsi.com)
[16:33:39] <VincentV`> Interesting, thanks for the responses. I just tried 90 and it just feels terribly off somehow. A matter of habbit, it seems.
[16:33:41] *** Quits: asarch (~asarch@2806:10ae:7:e787:8323:93a7:410d:290e) (Quit: Leaving)
[16:34:30] *** Quits: cosimone` (~user@93-34-133-215.ip49.fastwebnet.it) (Ping timeout: 244 seconds)
[16:36:02] *** Joins: heisig (~heisig@p508b531b.dip0.t-ipconnect.de)
[16:36:17] <VincentV`> lisp123_: I suppose you haven't seen my message yesterday, but I pulled of the subscripts, hinted by the article you provided. Do you need the code?
[16:36:23] *** Joins: makomo (~makomo@user/makomo)
[16:36:38] <lisp123_> VincentV`: That would be great! Would love to see it
[16:36:44] <VincentV`> One sec
[16:37:42] <VincentV`> https://pastebin.com/YXBSY5pV
[16:38:46] <lisp123_> This looks great
[16:38:46] <VincentV`> prettify-symbols-mode compresses a keyword to a single symbol, but the idea there is to use the numbers themselves for symbols, just define a predicate when it's reasonable to do
[16:38:52] <VincentV`> overall it's font-lock
[16:38:56] <VincentV`> yeah : )
[16:39:10] <lisp123_> I will use it too :) Thanks for sharing
[16:39:26] <VincentV`> no problem, and thanks for the article, otherwise I would have been stuck with a half-assed overlay solution
[16:39:51] <lisp123_> Great :)
[16:42:09] <lotuseater> are the symbols from the :cl packages rebinded on purpose with cl- ? i mean macrolet and digit-char-p
[16:44:15] <mfiano> My parser signalled an error condition on that question.
[16:44:22] <White_Flame> same here
[16:44:49] <White_Flame> there is only 1 CL package, and CL-USER is the only standard one named CL-
[16:44:58] <White_Flame> (well, nicknamed, but still)
[16:45:02] <lotuseater> so cl: instead :)
[16:45:34] <mfiano> What does rebinded a symbol even mean?
[16:45:35] <VincentV`> lotuseater: I am not sure, but just using macrolet would break my emacs loading
[16:45:58] <VincentV`> I think it just wants me to use cl- prefix where I can and I am OK with it at this point
[16:46:15] <White_Flame> is this an elisp question?
[16:46:37] <mfiano> It seems to be
[16:46:42] <lotuseater> waaaiiit ... ooh, it's an elisp file
[16:46:50] <VincentV`> yeah : )
[16:47:00] *** Joins: khrbt (~znc@user/khrbt)
[16:47:35] <mfiano> I see now. Interesting, though I actively make sure to disable the prettify mode for reasons.
[16:48:23] <lisp123_> White_Flame: Elisp, but for Common Lispers (as in helping the CL IDE)
[16:49:06] <pve> mikko: Ah, I get it now. Do you find it useful?
[16:49:08] <lisp123_> mfiano: Yeah I like seeing all the characters too, but I think this might be useful at times, esp for output (I'm doing more CL -> Swank -> Emacs Buffer output these days)
[16:49:16] <mfiano> It gives a false sense of column length, which is important when adhering to conventions. I also don't like packages that separates the data from the presentation, such as the various Org-mode packages.
[16:50:40] <VincentV`> mfiano: agreed, but in this particular case of subscripts, the column length is preserved
[16:52:11] <mfiano> Understood, though I just tell SBCL to print the subscripts if I need it. font-locking is already slow as it is...
[16:52:27] <mfiano> Or, _read_ the subscripts, rather.
[16:52:52] *** Quits: yitzi (~yitzi@97-64-230-163.client.mchsi.com) (Quit: Leaving)
[16:53:41] <lisp123_> mfiano: How would you do that?
[16:53:56] <lisp123_> (for printing, not reading)
[16:54:30] <mfiano> The printer will print it if the reader reads it.
[16:54:34] <mfiano> (setf (sb-ext:readtable-normalization *readtable*) nil)
[16:54:43] <lisp123_> ah yes that makes sense
[17:00:01] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 252 seconds)
[17:11:07] *** Joins: rain3 (~rain3___@2a02:2f09:d30b:1300:514:bcc7:8202:1798)
[17:12:02] <ecraven> phoe: is your nickname actually dutch/afrikaans for "foo"?
[17:14:15] <mfiano> it's short for phoenix
[17:16:06] <ecraven> I might be wrong, but dutch/afrikaans should pronounce oe as long u (so oo in english), and ph might be construed as greek for f ;)
[17:16:15] <mfiano> pronounced "fee"
[17:16:41] <lotuseater> and thus the profile picture :)
[17:17:12] <ecraven> not sure how, but I totally missed his conditions book!
[17:17:15] <lotuseater> hm could I even use greek fonts for my nickname on IRC? ^^
[17:17:18] <ecraven> looking forward to reading it
[17:17:28] <ecraven> yes, most channels/clients understand utf-8
[17:17:39] <ecraven> φου
[17:17:43] <mfiano> The IRC RFC does not mention
[17:17:43] <ecraven> greek for "foo" ;)
[17:17:50] <mfiano> It only has a notion of "characters"
[17:17:59] <lotuseater> as the normal text, but that doesn't mean for nicks allowed
[17:18:02] <mfiano> After all, it predates the web
[17:18:08] <ecraven> ah, for nicks, I don't know
[17:18:26] <ecraven> just tried: *** Erroneous nick name: φου
[17:18:37] <lotuseater> ecraven: or wonderful symbols like those ∘⍳⌊≠¯⍝⍎⍺⍟⌸⍶⌷⌶!≡
[17:18:44] <ecraven> well, for nicks there's all the finish up-casing compatibility thing
[17:18:58] <ecraven> ah, you have to love APL!
[17:19:12] <lotuseater> indeed
[17:23:13] *** Joins: Bike (~Glossina@71.69.170.70)
[17:23:13] *** ChanServ sets mode: +o Bike
[17:24:09] <phoe> phoe: nope, it's English for phoe-nix
[17:24:20] <phoe> oh, mfiano already answered you
[17:24:46] <phoe> sorry, just came home from a one-and-a-half-week long trip full of surprises and rats, so I will be highly confused for a longer while
[17:25:40] <ecraven> that sounds... interesting ;)
[17:25:49] *** Quits: VincentV` (~user@185.66.254.237) (Ping timeout: 252 seconds)
[17:26:38] <phoe> hell yeah it was
[17:26:57] <phoe> now please excuse me, I need to take a good, proper rest after my vacation
[17:27:03] <lotuseater> phoe: everytime i see your nick i spoke it in my mind as "fo" or "fow" with a nearly silent w and not "phi"
[17:27:04] <ecraven> sweet dreams!
[17:27:14] <phoe> lotuseater: you are not alone
[17:27:18] <ecraven> like the english word "foe"?
[17:27:20] <lotuseater> see you around :)
[17:28:57] <mfiano> Welcome back phoe
[17:29:03] <mfiano> Enjoy your rest
[17:32:41] <lotuseater> so i tried changing the #\a in my nick to #\⍺ but ERC responded erroneous nickname
[17:37:20] <mfiano> IRC requires it
[17:38:21] <lotuseater> okay it's saner this way
[17:38:27] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[17:40:44] <mfiano> Though to be fair, the IRC specification says your nick as it is is not allowed, so some servers may have extensions.
[17:49:08] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[18:03:40] *** Quits: gwefnn (~gwefnn@user/gwefnn) (Quit: ZNC 1.8.1 - https://znc.in)
[18:04:34] <White_Flame> pfœ
[18:04:53] <White_Flame> is probably the closest to my mental pronunciation of it :-P
[18:05:06] <lotuseater> pfau, the big bird
[18:11:25] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 250 seconds)
[18:13:29] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 248 seconds)
[18:15:05] *** Joins: aeth (~aeth@user/aeth)
[18:15:50] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[18:19:41] <phoe> φ
[18:21:01] <lotuseater> "Is there still lambda?" "No, the phi is still rho." OK, this joke works way better in German.
[18:24:25] <ecraven> ah, "Das Vieh"?
[18:25:24] <lotuseater> right, one of those puns in physics departments :D
[18:29:13] *** Joins: santiagopim[m] (~santiagop@2001:470:69fc:105::e57d)
[18:30:24] *** Quits: sm2n (~sm2n@user/sm2n) (Quit: Leaving)
[18:30:35] *** Joins: sm2n (~sm2n@user/sm2n)
[18:31:08] <lotuseater> or like "because they can't C#"
[18:33:08] *** Quits: lisp123_ (~lisp123@5.30.23.247) (Quit: Leaving...)
[18:36:28] *** Joins: notzmv (~zmv@user/notzmv)
[18:52:14] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[18:53:02] <ecraven> sorry for such a basic question, but given a bare new sbcl installation, how do I get a swank running there to connect to from my local emacs?
[18:53:10] <ecraven> I also have quicklisp, can that install swank?
[18:54:03] <lotuseater> hm i you have slime installed, then M-x slime
[18:54:49] <lotuseater> yes you can load swank with quicklisp, when you write an application that connects to a remote machine or such
[18:56:41] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
[18:56:56] <copec> ecraven, slime is usually configured to know what the local CL program is, ie (setq inferior-lisp-program "/usr/bin/sbcl") in the emacs config
[18:57:16] <copec> and when it starts it, it installs swank
[18:57:45] <ecraven> I want to start it on a remote machine, no emacs there.. it seems I just need to quickload swank and then start `swank:create-server' though ;)
[18:59:02] <copec> https://common-lisp.net/project/slime/doc/html/Setting-up-the-lisp-image.html
[18:59:25] <lotuseater> last section may help: https://lispcookbook.github.io/cl-cookbook/debugging.html
[19:00:28] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[19:04:13] *** Joins: Michal (~user@5.30.23.247)
[19:04:19] <Michal> Hello
[19:04:27] <beach> Hello Michal.
[19:04:37] <lotuseater> hi Michal
[19:04:41] <Michal> Hello beach. I hope you are well.
[19:04:48] *** Joins: VincentV` (~user@185.66.254.237)
[19:04:48] <Michal> Hello lotuseater
[19:05:00] <beach> I am well thank you.
[19:05:06] <lotuseater> you were here some days ago, weren't you? iirc
[19:05:23] <Michal> Yes, it was very useful for me
[19:05:26] <Michal> Thank you
[19:05:29] <lotuseater> good
[19:05:51] <Michal> That is great to hear beach.
[19:06:26] <lotuseater> are all your parentheses balanced too? :)
[19:07:17] <Michal> Hah! Yes, fortunately they are. It's an important skill to balance them :)
[19:08:05] <lotuseater> powerful weapons to fight evil bugs
[19:09:25] <jcowan> Naah, just keep a running count in your head as you type, incrementing and decrementing it as needed.
[19:09:31] <jcowan> Easy-peasy.
[19:10:20] <Michal> It took me a while to get used to, for example, the let form having a double (( at the start.
[19:10:38] <lotuseater> Michal: ah, good point :)
[19:11:56] <lotuseater> cause you mostly provide a list of multiple bindings. so when you just need one you could write a little macro for it, with one pair of parentheses or none
[19:12:50] <Michal> Yes, that is true lotuseater. Once I understood that, it was easier to remember.
[19:13:03] <lotuseater> nice
[19:13:23] <lotuseater> I remember that it was similar for me.
[19:13:28] <Michal> What is new in Lisp Land? I am just taking a break now, I have done enough for the day :-)
[19:15:30] <lotuseater> we like to have new citizens :)
[19:16:48] <lotuseater> by the old dialects and the new one
[19:16:58] <Michal> Great to be here :-)
[19:18:14] <lotuseater> but I should go out in the sun for 1h or so now. see you around
[19:18:41] <Michal> Enjoy
[19:23:34] *** Quits: Cymew (~ante@c-e989225c.023-1144-7570702.bbcust.telenor.se) (Ping timeout: 252 seconds)
[19:26:20] *** Quits: treflip (~user@95.79.32.99) (Remote host closed the connection)
[19:28:15] <ecraven> nice, hello.lisp from clx works fine on the pinephone under sbcl!
[19:30:13] <ecraven> if I want to load a local file into a remote swank, I can't use `slime-load-file' (C-c C-l), as that looks for the file locally (on the remote server). is there any way to make this work?
[19:34:56] *** Quits: Michal (~user@5.30.23.247) (Ping timeout: 250 seconds)
[19:37:13] <semz> I've been looking for a solution to that too. So far I've used slime-eval-buffer as a workaround
[19:37:42] <semz> gets awkward with anything bigger though
[19:41:00] *** Quits: VincentV` (~user@185.66.254.237) (Ping timeout: 250 seconds)
[19:48:09] <pl> what about balancin weasels on a rake?
[19:51:18] <mason> pl: If you've got personal experience with weasels you'll know they're constantly in motion, to the extent where the Heisenberg uncertainty principle suggests they're arguably all on the rake at any random moment.
[19:53:41] *** Joins: Everything (~Everythin@37.115.210.35)
[19:55:29] *** Quits: khrbt (~znc@user/khrbt) (Ping timeout: 244 seconds)
[19:56:58] <pl> mason: it's a reference to "powerful weapons to fight evil bugs" actually :P
[19:58:04] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[19:58:14] <mason> pl: What's the reference from? I'm not finding it and now I'm curious.
[19:58:28] *** Joins: hendursaga (~weechat@user/hendursaga)
[19:58:50] <pl> https://www.youtube.com/watch?v=HM1Zb3xmvMc combined with Land of Lisp comic at the end of the book
[20:00:02] <mason> ty ty
[20:01:47] <pl> one of the uses of DSL creation using macros was balancing weasels on a rake
[20:02:09] <mason> Nice, haven't finished the book yet, but my daughter and I are going through it. Just started this weekend.
[20:02:31] <mason> That'll be a special treat at the end, given that we have weasels.
[20:02:40] *** Joins: Oladon (~olad@98.43.81.226)
[20:04:41] *** Joins: khrbt (~znc@user/khrbt)
[20:04:44] *** Joins: Michal (~user@5.30.23.247)
[20:05:18] <jcowan> Heisenweasels
[20:05:30] <jcowan> not to be confused with eigenweasels
[20:07:53] *** Joins: VincentV` (~user@185.66.254.237)
[20:08:39] *** Joins: cage (~cage@dynamic-adsl-78-15-36-212.clienti.tiscali.it)
[20:14:59] <pl> mason: the weasels are at least in the music videos :)
[20:15:16] <pl> they do generally show up in the book, but I do not remember if that particular gag was there
[20:17:42] *** Quits: Michal (~user@5.30.23.247) (Ping timeout: 244 seconds)
[20:17:42] <mason> I'll be looking for it now.
[20:18:28] *** Joins: shka (~herr@109.231.62.239)
[20:22:43] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 250 seconds)
[20:39:47] *** Joins: Alfr (~Alfr@user/alfr)
[20:46:37] *** Quits: sm2n (~sm2n@user/sm2n) (Ping timeout: 252 seconds)
[20:52:40] *** Quits: VincentV` (~user@185.66.254.237) (Ping timeout: 252 seconds)
[21:08:34] *** Quits: amk (~amk@109.255.169.126) (Ping timeout: 252 seconds)
[21:08:59] *** Quits: semz (~none@user/semz) (Quit: Leaving)
[21:10:34] *** Joins: VincentVega (~user@185.66.254.237)
[21:10:39] *** Joins: semz (~none@user/semz)
[21:10:47] *** Joins: amk (~amk@109.255.169.126)
[21:13:24] *** Quits: rinwa (~user@141.226.14.13) (Read error: Connection reset by peer)
[21:13:38] *** Joins: rinwa (~user@141.226.14.13)
[21:15:07] *** Joins: Lycurgus (~juan@cpe-45-46-140-49.buffalo.res.rr.com)
[21:30:37] *** Quits: hhdave (~hhdave@ip212.ip-193-70-71.eu) (Ping timeout: 252 seconds)
[21:31:25] *** Joins: tyson2 (~user@toroon12-3096782677.sdsl.bell.ca)
[21:31:46] *** Joins: sm2n (~sm2n@user/sm2n)
[21:36:32] *** Joins: hhdave (~hhdave@ip212.ip-193-70-71.eu)
[21:47:27] *** Joins: jeosol (~jeosol@76-238-186-228.lightspeed.hstntx.sbcglobal.net)
[21:48:38] *** Quits: selwyn (~selwyn@user/selwyn) (Ping timeout: 244 seconds)
[22:01:58] <lotuseater> pl: the comics are totally wonderful on their own
[22:02:46] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[22:09:20] <lotuseater> mason: sounds like awesome parenting :)
[22:10:24] <mason> lotuseater: Thanks. But it's really awesome kidding, as she's driving the process. She wants to learn to write games.
[22:10:59] <lotuseater> i also had this in mind when I made the other statement: https://xkcd.com/297/
[22:11:50] <mason> lotuseater: Lisp is going to be her first programming language.
[22:12:02] <mason> I'm almost guaranteeing she'll never take a job writing web apps.
[22:13:08] <lotuseater> how old is she now? but anyway, it's cool when there is such intrinsic motivation. and you can show her that this has many many components are backgrounds in also mathematics
[22:13:32] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Ping timeout: 250 seconds)
[22:13:33] *** Joins: Michal (~user@5.30.23.247)
[22:13:33] <lotuseater> oh good! web is nothing for me too
[22:13:46] *** Joins: amb007 (~a_bakic@29.38.22.93.rev.sfr.net)
[22:14:19] <mason> lotuseater: Nine.
[22:14:33] <lotuseater> wow ∘_○
[22:14:34] <semz> make sure to rebind control so her hands will still work when she finishes school :p
[22:14:58] <mason> semz: control to left of a, parens swapped with []
[22:15:11] <lotuseater> or not writing a PhD before finishing school :)
[22:15:51] <mason> Olin Shivers wrote about this key layout, but I can't find the original any more.
[22:19:34] *** Quits: hhdave (~hhdave@ip212.ip-193-70-71.eu) (Ping timeout: 252 seconds)
[22:30:33] *** Quits: Michal (~user@5.30.23.247) (Ping timeout: 250 seconds)
[22:31:41] <lotuseater> mason: if you two realize CL is a bit too much to start you also could use Racket
[22:32:17] *** Quits: fengshaun (~fengshaun@68.69.214.210) (Quit: bibi!)
[22:35:27] <mason> lotuseater: I've been a novice Lisp programmer since the 80s, so we'll be okay.
[22:35:42] <lotuseater> as there is too the book "Realm of Racket" which is quite similar to Land of Lisp
[22:36:18] <mason> A dilletante? An amateur? A fanboy certainly.
[22:36:18] <lotuseater> mason: Oh please don't get me wrong! I didn't doubt anything about it.
[22:36:44] <lotuseater> who do you mean?
[22:36:47] <mason> Me.
[22:37:37] *** Parts: xlei (znc@pool-68-129-84-118.nycmny.fios.verizon.net) ()
[22:37:47] <mason> CL is a conscious choice here. I want her to be able to have SLIME right off and there's not much equivalent for Scheme. Although, yeah, DrRacket works, I'm not sure we'd want to stay on Racket for the things she wants to write.
[22:37:50] <lotuseater> but the "since the 80s" sounds quite experienced
[22:38:17] <mason> lotuseater: Hah. Only if I practised and actually wrote things, as opposed to continual dabbling.
[22:38:38] <lotuseater> yeah right, but when I did some steps with it I got to like DrRacket on its own
[22:38:41] <mason> My history with Lisp is strange at best.
[22:39:01] <lotuseater> I wasn't even born in the 80s.
[22:39:20] <White_Flame> I wasn't born in the 80s either.  Oh, you mean that way ;)
[22:39:26] <mason> haha
[22:39:37] *** Joins: fengshaun (~fengshaun@68.69.214.210)
[22:40:22] * Lycurgus assumes these sentences elided 'yet'
[22:41:07] <Lycurgus> White_Flame, the AI coding you mentioned in #lisp, is that for yourself or an employer?
[22:41:39] <lotuseater> oh the AI codes? :D
[22:41:50] * Lycurgus wasn't even born in the 19th century if that counts
[22:42:14] <White_Flame> one enables the other
[22:42:16] *** Joins: Michal (~user@5.30.23.247)
[22:42:35] *** Parts: Michal (~user@5.30.23.247) ()
[22:42:57] <Lycurgus> i c
[22:43:27] <lotuseater> Lycurgus: you mean the 20th?
[22:43:40] <Lycurgus> reminds me of a response to a random entrant in #libera who wanted to know if that was where the elite meet
[22:43:53] <Lycurgus> lotuseater, no I meant the 19th
[22:43:53] <lotuseater> i think no one here was born in the 19th century
[22:43:59] <lotuseater> haha :D
[22:44:23] <lotuseater> ooh the elites
[22:44:33] <Lycurgus> i said if you mean sullen wage slaves looking for the next paymaster, yep this is the place
[22:50:21] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[22:50:23] *** Joins: makomo (~makomo@user/makomo)
[22:50:48] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[22:52:29] *** Quits: Lycurgus (~juan@cpe-45-46-140-49.buffalo.res.rr.com) (Quit: Exeunt)
[22:54:31] *** Joins: IAmRasputin (~ryan.gann@2601:19c:4600:9e90:4d4d:eb2a:4951:e77a)
[22:56:03] *** Quits: IAmRasputin (~ryan.gann@2601:19c:4600:9e90:4d4d:eb2a:4951:e77a) (Client Quit)
[22:56:08] *** Quits: tyson2 (~user@toroon12-3096782677.sdsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
[22:57:47] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[23:07:55] *** Joins: yitzi (~yitzi@173-27-106-188.client.mchsi.com)
[23:09:01] *** Quits: rinwa (~user@141.226.14.13) (Read error: Connection reset by peer)
[23:11:21] *** Joins: rinwa (~user@141.226.14.13)
[23:11:42] *** Parts: Everything (~Everythin@37.115.210.35) ()
[23:22:51] *** Joins: Guest45 (~Guest45@host167-70.k-lan.satnet-bg.com)
[23:22:58] *** Quits: Guest45 (~Guest45@host167-70.k-lan.satnet-bg.com) (Client Quit)
[23:22:58] *** Quits: amb007 (~a_bakic@29.38.22.93.rev.sfr.net) (Read error: Connection reset by peer)
[23:23:14] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[23:24:28] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 252 seconds)
[23:25:36] *** Joins: nirved (~nirved@gateway/tor-sasl/nirved)
[23:28:28] *** Quits: nirved (~nirved@gateway/tor-sasl/nirved) (Client Quit)
[23:33:09] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[23:40:02] *** Joins: srhm (~srhm@user/srhm)
[23:40:24] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[23:40:51] *** Joins: srhm (~srhm@user/srhm)
[23:43:32] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[23:44:19] *** Quits: srhm (~srhm@user/srhm) (Client Quit)
[23:53:41] *** Joins: gaqwas (~john@dynamic-077-007-117-230.77.7.pool.telefonica.de)
[23:56:19] *** Quits: cage (~cage@dynamic-adsl-78-15-36-212.clienti.tiscali.it) (Quit: rcirc on GNU Emacs 27.1)
