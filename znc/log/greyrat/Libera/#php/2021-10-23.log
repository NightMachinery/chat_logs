[00:02:36] *** Quits: kerunaru (~Jmcb@202.red-79-146-100.dynamicip.rima-tde.net) (Ping timeout: 245 seconds)
[00:11:42] *** Quits: junktext_ (~junktext@gateway/vpn/pia/junktext) (Remote host closed the connection)
[00:12:53] *** Joins: junktext_ (~junktext@gateway/vpn/pia/junktext)
[00:18:47] *** Quits: NoiseEee (~NoiseEee@178.128.153.219) (Quit: The Lounge - https://thelounge.chat)
[00:19:03] *** Joins: NoiseEee (~NoiseEee@178.128.153.219)
[00:22:04] *** Quits: NoiseEee (~NoiseEee@178.128.153.219) (Remote host closed the connection)
[00:23:18] *** Joins: kerunaru (~Jmcb@202.red-79-146-100.dynamicip.rima-tde.net)
[00:24:33] *** Joins: NoiseEee (~NoiseEee@178.128.153.219)
[00:25:17] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[00:29:11] *** Quits: olle (~olle@mue-88-130-56-157.dsl.tropolys.de) (Ping timeout: 258 seconds)
[00:31:29] *** Quits: kerunaru (~Jmcb@202.red-79-146-100.dynamicip.rima-tde.net) (Ping timeout: 258 seconds)
[00:38:17] *** Joins: connrs (~connrs@user/connrs)
[00:48:02] *** Quits: Awaru (Awaru@gateway/vpn/protonvpn/awaru) (Remote host closed the connection)
[00:52:59] *** Quits: magla (~gelignite@55d4ee8d.access.ecotel.net) (Quit: Stay safe!)
[00:53:11] *** Joins: Awaru (Awaru@gateway/vpn/protonvpn/awaru)
[00:55:02] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[01:01:25] *** Quits: Slartibart (~user@c-d6ddd854.217486-0-69706f6e6c79.bbcust.telenor.se) (*.net *.split)
[01:01:25] *** Quits: jaggz (~jaggz@user/jaggz) (*.net *.split)
[01:01:25] *** Quits: NiKaN (sid385034@helmsley.irccloud.com) (*.net *.split)
[01:01:26] *** Quits: Byteflux (~byte@byteflux.net) (*.net *.split)
[01:01:26] *** Quits: Phil-Work (~phil@62.3.100.20) (*.net *.split)
[01:01:26] *** Quits: qwedfg (~qwedfg@user/qwedfg) (*.net *.split)
[01:01:26] *** Quits: alien_lappy (~alien@user/alien) (*.net *.split)
[01:01:26] *** Quits: sharpertool (sid80151@hampstead.irccloud.com) (*.net *.split)
[01:01:26] *** Quits: boubou (~boubou@hide.my.ip.upsidehosting.com) (*.net *.split)
[01:01:26] *** Quits: \mSg (mSg@user/msg/x-0285936) (*.net *.split)
[01:01:26] *** Quits: jmpp (~jmpp@pool-71-105-225-118.nycmny.fios.verizon.net) (*.net *.split)
[01:03:06] *** Joins: Byteflux (~byte@byteflux.net)
[01:03:52] *** Joins: jaggz (~jaggz@user/jaggz)
[01:03:52] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[01:06:42] *** Joins: Slartibart (~user@c-d6ddd854.217486-0-69706f6e6c79.bbcust.telenor.se)
[01:06:44] *** Joins: jmpp (~jmpp@pool-71-105-225-118.nycmny.fios.verizon.net)
[01:10:14] *** Quits: Junxter (~Junxter@114.221.230.117) (Ping timeout: 260 seconds)
[01:12:06] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 260 seconds)
[01:15:24] *** Joins: Phil-Work (~phil@62.3.100.20)
[01:17:14] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 260 seconds)
[01:18:11] *** Quits: guido (~guido@host-95-247-93-153.retail.telecomitalia.it) (Quit: WeeChat 3.3)
[01:22:20] *** Quits: junktext_ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 260 seconds)
[01:34:27] *** Quits: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br) (Quit: harpia)
[01:36:48] *** Joins: Forza_ (~Forza@user/forza)
[01:37:30] *** Quits: Forza (~Forza@user/forza) (Ping timeout: 260 seconds)
[01:39:31] *** Joins: WishBoy (~WishBoy@user/wishboy)
[01:43:20] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 260 seconds)
[01:49:17] *** Quits: LuKaRo (~LuKaRo@p4fc32951.dip0.t-ipconnect.de) (Ping timeout: 264 seconds)
[01:50:23] *** Joins: LuKaRo (~LuKaRo@p5deda401.dip0.t-ipconnect.de)
[01:56:10] *** Joins: brachamh (~brachamh@user/brachamh)
[01:56:48] <brachamh> hello, i'm trying to use this: https://github.com/Rouji/single_php_filehost
[01:57:53] <brachamh> in the config section of the readme, it talks about some settings in php.ini . is that a block of index.php ?
[01:59:50] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[02:00:26] <Blondie101010> brachamh: no, php.ini is where you place the configuration for the PHP SAPI you're using
[02:00:36] <Blondie101010> it is not PHP code
[02:00:57] <Blondie101010> it's typically somewhere in /etc/*/php.ini
[02:01:24] <Blondie101010> look at phpinfo() to get the details on where it looks
[02:01:41] <brachamh> ah ok! thanks!
[02:01:49] <Blondie101010> np
[02:04:17] *** Joins: physikoi (~physikoi@user/physikoi)
[02:07:26] <physikoi> hello #php . i'm trying to figure out how to do a trace so that i can see all of the functions called to get a result. EG: instantiate a class, which may have a constructor that calls some private methods; call a public method of that class instance, which may call other methods and functions. I've come across some posts on stackoverflow, but nothing generates what i'm looking for; i recognize that I might
[02:07:26] <physikoi> be using incorrect terminology. Halp please
[02:07:54] <brachamh> Blondie101010: how do i get the settings there to take effect, then? reload httpd?
[02:08:16] <Blondie101010> if you changed them, yes
[02:09:14] <Blondie101010> physikoi:  it sounds like you want to use a debugger, so you should look for a tutorial that pertains to your setup
[02:10:54] <physikoi> Blondie101010: i thought maybe tracy and kint could help, but they seem to only help when there's an actual bug or for pretty dumping. Am i using the right terminology for what I'm trying to accomplish?
[02:11:34] <Blondie101010> physikoi:  your description sounded like you want a debugger
[02:11:40] <brachamh> Blondie101010: thank you!
[02:11:43] <Blondie101010> np
[02:12:18] <Blondie101010> physikoi:  what IDE and PHP SAPI do you use?
[02:13:35] <physikoi> Not sur what a SAPI is lol. I'm using spacemacs for coding
[02:13:53] <__adrian> physikoi: if you don't want step debugging, then you might get what you want just from https://php.net/debug_backtrace
[02:13:56] <Blondie101010> not sure there will be tutorials for that
[02:14:23] <__adrian> sapi = server api (how you're running php). e.g., cli, nginx+php-fpm, apache+mod_php, etc.
[02:14:33] <__adrian> yeah, i've never heard of spacemacs
[02:14:43] <__adrian> but xdebug has standalone clients
[02:15:01] <__adrian> rather, *there are standalone clients for xdebug
[02:16:30] *** Quits: tex (~super@user/dix) (Ping timeout: 260 seconds)
[02:19:21] <physikoi> __adrian: getting no output for some reason :/ https://www.dropbox.com/s/rqalvey4zd0r24l/Screen%20Shot%202021-10-22%20at%206.48.47%20PM.png?dl=0
[02:19:47] <physikoi> __adrian: ok, using php-fpm with nginx proxy
[02:20:21] <physikoi> __adrian: spacemacs is just emacs. it's not a real IDE tbh. i don't think it can do what you're thinking of
[02:21:58] <__adrian> there are xdebug extensions for emacs. e.g., https://github.com/ahungry/geben  can't say if they're any good
[02:22:30] <__adrian> are you running that somewhere you can see the output?
[02:22:33] <da_wunder> emacs is quite good os but poor text editor
[02:22:46] <physikoi> ok, i tried again with just dumping debug_backtrace(), but i just get this unhelpful printout: https://www.dropbox.com/s/0jryljuk4emrz1y/Screen%20Shot%202021-10-22%20at%206.51.56%20PM.png?dl=0
[02:24:02] <__adrian> so... i take it that's your entire script? a backtrace starts at that function call, then tells you how it got there. if it's literally at the top level of your script, there are no steps to how you got there
[02:24:15] <physikoi> da_wunder: it could be easier to manipulate regions of text
[02:24:52] <physikoi> __adrian: do you think you could provide a simple example? i'm a bit lost
[02:25:13] <__adrian> https://3v4l.org/8YLr0
[02:25:40] <da_wunder> physikoi: you could ask that from emacs doctor
[02:26:21] <da_wunder> https://www.emacswiki.org/emacs/EmacsDoctor
[02:26:46] <__adrian> if you want _actually every step the whole program makes_ then my first question would be, do you realize how many steps there are...?
[02:27:20] <__adrian> debug_backtrace() is good if you have some code you're intersted in, and want to know how the program gets to that point
[02:27:46] <physikoi> ohhh, looks like i was using it incorrectly
[02:27:46] <__adrian> if you want to start at the beginning and step through, then you want a step debugger. you want xdebug.
[02:27:58] <__adrian> not incorrectly, just in a useless place
[02:28:20] <physikoi> da_wunder: i've done that before. the good doctor just made me sicker
[02:29:19] <physikoi> xdebug. i've heard of it ... just found it too intimidating. time to get over it
[02:29:29] <physikoi> thank you, folks!
[02:38:38] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:45:42] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 265 seconds)
[03:19:39] *** Quits: ms49434 (~ms49434@user/ms49434) (Quit: Leaving)
[03:20:42] *** Quits: physikoi (~physikoi@user/physikoi) (Quit: Lost terminal)
[03:41:17] *** Joins: tw2113 (~tw2113@2001-48F8-6-1318-D2AB-D5FF-FE77-2BD5-dynamic.midco.net)
[03:44:06] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[03:44:13] *** Quits: pmercado (~pmercado@186.107.62.14) (Ping timeout: 252 seconds)
[03:45:54] *** Joins: ferdna (~ferdna@user/ferdna)
[03:52:45] *** Quits: Awaru (Awaru@gateway/vpn/protonvpn/awaru) (Quit: Leaving)
[03:53:03] *** Joins: Awaru (Awaru@gateway/vpn/protonvpn/awaru)
[04:00:23] *** Quits: Awaru (Awaru@gateway/vpn/protonvpn/awaru) (Quit: Leaving)
[04:01:12] *** Joins: Awaru (Awaru@gateway/vpn/protonvpn/awaru)
[04:03:26] *** Joins: snedd (~snedd@86.14.114.137)
[04:07:34] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 260 seconds)
[04:07:48] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[04:10:36] *** Quits: Awaru (Awaru@gateway/vpn/protonvpn/awaru) (Quit: Leaving)
[04:16:26] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[04:17:32] *** Joins: Awaru (Awaru@gateway/vpn/protonvpn/awaru)
[04:21:43] *** Joins: stenno (~stenno@user/stenno)
[04:30:36] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[04:34:44] *** Joins: vlm (~vlm@user/vlm)
[05:02:32] *** Joins: The_Jag (~The_Jag@host-87-17-20-218.retail.telecomitalia.it)
[05:05:10] *** Quits: The_Jag_ (~The_Jag@host-80-182-37-74.retail.telecomitalia.it) (Ping timeout: 260 seconds)
[05:06:44] *** Quits: jargon (~jargon@184.101.90.124) (Remote host closed the connection)
[05:11:24] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[05:11:47] *** Quits: snedd (~snedd@86.14.114.137) (Quit: Leaving)
[05:23:10] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 260 seconds)
[05:26:39] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 258 seconds)
[05:31:24] *** Quits: SleePy (SleePy@simplemachines/siteteam/SleePy) (Quit: I quit, that is all)
[05:32:52] *** Quits: jaggz (~jaggz@user/jaggz) (Quit: I saith goodbye)
[05:35:07] *** Joins: SleePy (SleePy@simplemachines/siteteam/SleePy)
[05:51:16] *** Joins: NiKaN (sid385034@helmsley.irccloud.com)
[05:51:42] *** Joins: MrTrick_ (uid181961@uxbridge.irccloud.com)
[05:51:55] <tw2113> sup
[05:51:59] *** Quits: MrTrick (uid181961@id-181961.uxbridge.irccloud.com) (Ping timeout: 264 seconds)
[05:51:59] *** MrTrick_ is now known as MrTrick
[05:56:26] *** Joins: Rockwood (~Rocky@user/rocky)
[06:00:14] *** Quits: Albright (~Albright@2001:19f0:8001:ca4:e869:f825:7a69:95be) (Quit: ZNC 1.8.2 - https://znc.in)
[06:00:27] *** Joins: Albright (~Albright@149.28.13.173)
[06:03:14] *** Joins: sharpertool (sid80151@hampstead.irccloud.com)
[07:08:35] *** Joins: Junxter (~Junxter@114.221.230.117)
[07:12:24] *** Joins: jetchisel (jetchisel@user/jetchisel)
[07:26:05] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[07:31:02] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 260 seconds)
[07:49:42] *** Quits: Robdgreat (~rob@user/robdgreat) (Ping timeout: 260 seconds)
[07:50:24] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:07:15] *** Joins: Nekomander (~BadAdvice@user/badadvicecat)
[08:07:42] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 244 seconds)
[08:20:08] *** Quits: Awaru (Awaru@gateway/vpn/protonvpn/awaru) (Remote host closed the connection)
[08:20:33] *** Joins: Awaru (Awaru@gateway/vpn/protonvpn/awaru)
[08:20:41] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[08:30:27] <Rockwood> which is better in laravel or symphony?
[08:30:45] <Rockwood> or zend?
[08:36:51] <tw2113> for what?
[08:42:53] <Blondie101010> b2b commerce
[08:45:42] <tw2113> here i was hoping Rockwood was asking which was best for the next Facebook killer :P
[08:48:02] *** Joins: Robdgreat (~rob@user/robdgreat)
[08:49:03] *** Joins: WishBoy (~WishBoy@user/wishboy)
[08:49:55] <Rockwood> lol
[08:50:18] <Rockwood> for e-commerce we application
[08:50:33] <Rockwood> tw2113, don't FB :D
[08:50:44] <Rockwood> web application
[08:51:40] <Rockwood> as a programmer which having more options
[08:52:09] <tw2113> yolo
[08:55:02] <Rockwood> tw2113, https://yolophp.computer/
[08:55:05] <Rockwood> am right?
[08:55:36] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[08:56:12] <tw2113> sue
[08:56:14] <tw2113> sure*
[08:56:52] <Blondie101010> if you use that kind of thing on a serious site, you won't be taken seriously
[08:57:09] <tw2113> I recognize at least like 5 people listed on that site
[08:57:24] <tw2113> closer to 10
[08:57:45] <Blondie101010> "YOLO Certified Engineer" :)
[08:58:18] <Blondie101010> I wonder if you can get hired if you list that kind of certificate
[08:59:05] <tw2113> add it to your linkedin and apply for a new job
[08:59:16] <tw2113> we anticipate a blog post about it in a few weeks
[09:00:45] *** Forza_ is now known as Forza
[09:05:44] *** Joins: tex (~super@user/dix)
[09:39:27] *** Joins: genom (~g@37.214.43.122)
[09:44:11] *** Quits: tw2113 (~tw2113@2001-48F8-6-1318-D2AB-D5FF-FE77-2BD5-dynamic.midco.net) (Remote host closed the connection)
[09:50:31] *** Joins: guido (~guido@host-87-17-253-114.retail.telecomitalia.it)
[09:50:43] *** Quits: guido (~guido@host-87-17-253-114.retail.telecomitalia.it) (Client Quit)
[09:51:01] *** Joins: guido (~guido@host-87-17-253-114.retail.telecomitalia.it)
[09:52:02] *** Quits: guido (~guido@host-87-17-253-114.retail.telecomitalia.it) (Client Quit)
[09:53:11] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 264 seconds)
[09:53:30] <WishBoy> Beethoven approves YOLO
[09:54:02] <Blondie101010> isn't he dead?
[09:54:07] *** Joins: guido (~guido@host-87-17-253-114.retail.telecomitalia.it)
[09:56:00] <WishBoy> Blondie101010 yes
[09:56:25] <WishBoy> Blondie101010 https://yolophp.computer/
[09:56:27] <WishBoy> look
[09:56:40] <WishBoy> :P
[09:57:15] *** Quits: guido (~guido@host-87-17-253-114.retail.telecomitalia.it) (Client Quit)
[09:58:29] *** Joins: guido (~guido@host-87-17-253-114.retail.telecomitalia.it)
[09:59:44] <Blondie101010> ah
[10:01:13] <Blondie101010> this isn't even maintained
[10:01:25] <Blondie101010> and there's practically no documentation
[10:01:42] <Blondie101010> it was an attempt at "something" that never got completed
[10:02:06] <Blondie101010> that something does fit their pink ponies and purple elephant ideals I suppose
[10:02:12] <Blondie101010> making the page totally unreadable
[10:05:47] <Blondie101010> I'll skip my observations on the code...  it's not worth it
[10:07:50] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[10:09:05] *** Quits: Nekomander (~BadAdvice@user/badadvicecat) (Ping timeout: 260 seconds)
[10:11:00] * BadAdviceCat quietly installs yolophp into one of Blondie101010's projects.
[10:13:22] -Blondie101010- BadAdviceCat was caught by Blondie101010's honeypot, and a the drone response fleat is on its way
[10:15:08] <Blondie101010> don't worry, they don't harm humans, only electronic devices
[10:19:05] *** Quits: guido (~guido@host-87-17-253-114.retail.telecomitalia.it) (Read error: Connection reset by peer)
[10:53:05] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[10:59:05] *** Joins: guido (~guido@host-87-17-253-114.retail.telecomitalia.it)
[11:09:35] *** Joins: bogdaniel (~bogdaniel@89.137.238.168)
[11:09:39] <bogdaniel> good morning everyone
[11:10:26] <bogdaniel> any advice on how to work with a 300 elements array ? to optimize for memory usage. I'm processing 20k rows from the database to import them as products back in the database from a temp table
[11:10:42] <bogdaniel> but my memory goes wild around 2.5G and crashes
[11:11:08] *** Joins: stenno (~stenno@user/stenno)
[11:14:23] <BadAdviceCat> :O
[11:15:46] <bogdaniel> BadAdviceCat actually in htop the memory in idle is at 1.24 G while i'm running the script it goes to 2.5G and crashes :D
[11:15:48] <ss23> bogdaniel: If you can, avoid PHP all together and just do it all in the database (e.g. select from one table into another). If you have to do it in PHP, do it in batches (so maybe 10 products at a timE)
[11:16:27] <bogdaniel> ss23 well I can't avoid the php at all :(
[11:17:31] <bogdaniel> also ss23 between the browser and the importer i've added this https://www.htmlgoodies.com/php/show-progress-report-for-long-running-php-scripts/ :D
[11:19:04] <bogdaniel> @ss
[11:19:08] <bogdaniel> never did batches ..
[11:21:50] *** Quits: guido (~guido@host-87-17-253-114.retail.telecomitalia.it) (Quit: WeeChat 3.3)
[11:57:32] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[12:03:08] *** Quits: Forza (~Forza@user/forza) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[12:12:15] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[12:12:50] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[12:18:48] *** Joins: hansol (~hansol@185.116.92.25)
[12:30:01] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:40:45] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 260 seconds)
[13:20:47] *** Quits: Zauberfisch (~Zauberfis@cm83-180.liwest.at) (Ping timeout: 240 seconds)
[13:25:36] *** Joins: Zauberfisch (~Zauberfis@cm83-180.liwest.at)
[13:40:36] *** Joins: guido (~guido@host-87-17-253-114.retail.telecomitalia.it)
[13:50:54] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Ping timeout: 260 seconds)
[13:57:50] *** Joins: mactron (~mactron@apn-123-214-101-gprs.simobil.net)
[14:05:06] *** Joins: Forza (~Forza@user/forza)
[14:12:55] *** Quits: Forza (~Forza@user/forza) (Ping timeout: 260 seconds)
[14:14:04] *** Joins: Forza (~Forza@user/forza)
[14:15:59] *** Quits: Forza (~Forza@user/forza) (Client Quit)
[14:17:39] *** Joins: dimi1947 (~dimi1947@2a02:1388:83:f1e0:7133:f5a8:83e5:18c)
[14:19:25] *** Joins: Forza (~Forza@user/forza)
[14:23:26] *** Quits: LuKaRo (~LuKaRo@p5deda401.dip0.t-ipconnect.de) (Quit: ZNC 1.8.2 - https://znc.in)
[14:36:01] *** Quits: dimi1947 (~dimi1947@2a02:1388:83:f1e0:7133:f5a8:83e5:18c) (Quit: Leaving)
[14:37:40] *** Joins: LuKaRo (~LuKaRo@p5deda401.dip0.t-ipconnect.de)
[14:39:45] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[14:49:41] *** Quits: Zauberfisch (~Zauberfis@cm83-180.liwest.at) (Ping timeout: 244 seconds)
[14:50:10] *** Joins: Zauberfisch (~Zauberfis@62.240.152.166)
[14:50:29] *** Quits: tccki (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795) (Quit: tccki)
[14:59:46] *** Quits: bogdaniel (~bogdaniel@89.137.238.168) (Quit: Client closed)
[15:08:16] *** Quits: mactron (~mactron@apn-123-214-101-gprs.simobil.net) (Read error: Connection reset by peer)
[15:08:49] *** Joins: mactron (~mactron@APN-123-214-101-gprs.simobil.net)
[15:12:01] *** Joins: alien_lappy (~alien@user/alien)
[15:12:59] *** Quits: AnrDaemon (~ZNC@darkdragon-nln.starlink.ru) (Ping timeout: 264 seconds)
[15:28:08] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[15:28:23] <no_gravity> Is there a command line way of checking a php file for syntax errors?
[15:30:38] *** Joins: rj1 (~rj1@i.dont.know.how.com.puters.work)
[15:31:08] <no_gravity> Oh, php -l
[15:39:50] *** Quits: Forza (~Forza@user/forza) (Ping timeout: 260 seconds)
[15:42:49] *** Quits: LuKaRo (~LuKaRo@p5deda401.dip0.t-ipconnect.de) (Quit: ZNC 1.8.2 - https://znc.in)
[15:48:10] *** Joins: AnrDaemon (~ZNC@darkdragon-nln.starlink.ru)
[15:48:22] *** Joins: Forza (~Forza@user/forza)
[15:53:13] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[15:55:22] *** Joins: montybanksnyc (~montybank@pool-108-5-238-57.nwrknj.fios.verizon.net)
[15:57:49] *** Quits: mactron (~mactron@APN-123-214-101-gprs.simobil.net) (Read error: Connection reset by peer)
[16:00:56] *** Joins: LuKaRo (~LuKaRo@p5deda401.dip0.t-ipconnect.de)
[16:05:36] *** Joins: parabellum (~parabellu@p200300d3973bc10036780f4f8fe04ae4.dip0.t-ipconnect.de)
[16:11:50] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 260 seconds)
[16:12:10] *** Quits: Forza (~Forza@user/forza) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[16:45:18] *** Quits: LuKaRo (~LuKaRo@p5deda401.dip0.t-ipconnect.de) (Quit: ZNC 1.8.2 - https://znc.in)
[16:47:00] *** Quits: montybanksnyc (~montybank@pool-108-5-238-57.nwrknj.fios.verizon.net) (Quit: Leaving)
[16:54:19] *** Joins: LuKaRo (~LuKaRo@p5deda401.dip0.t-ipconnect.de)
[17:09:10] *** Joins: Forza (~Forza@user/forza)
[17:12:12] *** Quits: Junxter (~Junxter@114.221.230.117) (Remote host closed the connection)
[17:12:37] *** Joins: Junxter (~Junxter@114.221.230.117)
[17:30:24] *** Joins: stenno (~stenno@user/stenno)
[17:45:11] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[17:45:46] *** Joins: mactron (~mactron@APN-123-254-51-gprs.simobil.net)
[18:03:44] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 258 seconds)
[18:12:13] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Ping timeout: 244 seconds)
[18:13:26] <jadew> hey, are there any plans to implement generics in the near future?
[18:15:29] *** Joins: WishBoy (~WishBoy@user/wishboy)
[18:18:01] <__adrian> there have been RFCs for generics in the past. i don't believe any are currently under discussion.
[18:18:05] <AllenJB> jadew: First note that this is a community channel - not many core devs hang out here.
[18:18:07] <AllenJB> The status of generics as far as I can discern (as a "not a core dev, but follows the internals mailing list") is "don't hold your breath". Work is done towards it on and off, but there's some implementation issues. See https://github.com/Danack/RfcCodex/blob/master/generics.md for a summary
[18:19:01] <jadew> AllenJB, thanks
[18:19:53] <jadew> any suggestions on how to get some sort of type checking similar to that? I wish to declare something as Vector<SomeClass>, rather than just Vector
[18:20:43] <da_wunder> use psalm and/or phpstan
[18:20:49] <AllenJB> Have you looked at static analyzers such as phpstan and psalm? They have capabilities beyond PHP's built-in type checks (partly via phpdoc annotations)
[18:21:11] <da_wunder> you can use phpdoc to define those, and those tools will check those
[18:21:42] <jadew> I see, thanks, I will look into it
[18:22:40] <jadew> which one do you recommend of the two?
[18:22:52] <__adrian> you should try and decide for yourself
[18:22:53] <da_wunder> personally I use both of those
[18:23:10] <__adrian> the other major option is phan
[18:23:13] <da_wunder> but yes, try those out and make your own choice
[18:23:39] <jadew> got it, thanks
[18:23:54] <biberu> jadew: is the choice of language fixed?
[18:24:11] <da_wunder> jadew: and also remember to check the check level that those tools are using
[18:24:53] <jadew> biberu, somewhat, I'm migrating a HHVM project to PHP because HHVM has dropped PHP support and I cannot use my PHP libraries with it, but if you have other language suggestions, I would love to hear them - at least so I can consider them for the future
[18:25:15] <__adrian> if your goal is to use php libraries...  :)
[18:25:35] <jadew> well, I might consider migrating the libraries too :)
[18:25:57] <biberu> jadew: it really depends on your own requirements (like how important those libraries are) and background, but there are many languages that feature generics
[18:26:09] <__adrian> including the one you're using currently
[18:26:32] <__adrian> if you're thinking about porting the libraries... why not port them to the language you're already using?
[18:26:50] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[18:27:25] <jadew> __adrian, hacklang seems to become more and more restrictive - I believe they're using that to enforce some internal FB coding standards
[18:27:39] *** Quits: LuKaRo (~LuKaRo@p5deda401.dip0.t-ipconnect.de) (Quit: ZNC 1.8.2 - https://znc.in)
[18:28:46] <jadew> I like a little more freedom in my programs
[18:29:41] <biberu> freedom in what sense?
[18:30:01] <jadew> in the way I structure my programs
[18:30:25] <jadew> for example you can't have statements in the global scope anymore
[18:31:07] <__adrian> that's not a bad thing
[18:31:15] <jadew> that's for me to decide :)
[18:31:36] <jadew> sometimes it might not be a bad thing, other times it could be a useless nuisance
[18:31:50] <jadew> I don't want arbitrary FB rules shoved down my throat
[18:32:27] <__adrian> no, i don't mean that as an opinion - also i don't mean whether you have a choice or not, but that it's an objectively bad practice
[18:32:37] <__adrian> it's definitely not an arbitrary choice.
[18:33:04] <jadew> it's only bad if you don't know what you're doing
[18:33:13] <__adrian> i don't think the language should be forcing the choice on anyone, but there's def a correct choice  :)
[18:33:18] <jadew> like many other things that are labeled as bad in programming
[18:33:20] <__adrian> that's not correct
[18:33:53] <jadew> this attitude leads to cargo cult programming, which is what is enforced in this case, for absolutely no reason
[18:33:55] <__adrian> but if you're set on labeling it as a preference, not something to argue about
[18:34:00] *** Joins: LuKaRo (~LuKaRo@p5deda401.dip0.t-ipconnect.de)
[18:34:08] <jadew> I don't need a function as the entry point, when all I have to do is instantiate something and call a method
[18:34:12] <jadew> it's just silly
[18:34:44] <jadew> it would be fine if the language was like that since the beginning, but it wasn't, and I don't like the fact that it's making this type of changes
[18:34:50] <jadew> makes me weary of what might come
[18:35:26] <jadew> also, I think the fact that they dropped PHP support completely killed their community, so if I have a question, I won't have a place to go
[18:36:10] <__adrian> it's actually good news that they dropped php support - it started as a testbed for making php better, and it accomplished that, so there's no reason to keep that compatibility going forward
[18:36:48] <biberu> so you've identified another feature you want :)
[18:37:30] <jadew> I have to go to dinner, will be back to reply if you want to continue the discussion
[18:37:32] <jadew> ttyl
[18:37:36] <jadew> thanks for the help
[18:38:03] <__adrian> np
[18:40:38] *** Joins: terminalpusher (~terminalp@2a01:586:1df7:1:ca29:66be:5f4:3efd)
[18:42:54] *** Quits: fstd (~fstd@xdsl-81-173-175-11.nc.de) (Read error: Connection reset by peer)
[18:48:46] *** Parts: terminalpusher (~terminalp@2a01:586:1df7:1:ca29:66be:5f4:3efd) ()
[18:51:42] *** Joins: stenno (~stenno@user/stenno)
[18:56:08] *** Joins: gastus (~gastus@mawercer.de)
[18:56:21] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 245 seconds)
[18:56:59] <gastus> string(101) ''    how can that be? Shown by var_dump.
[18:57:13] <gastus> file_put_contents storing string to disk shows 101 chars
[18:58:17] <gastus> my fault.
[18:58:29] <gastus> it was <script> and got hidden by HTML preview in respons tab :-/
[19:02:43] *** Joins: Anticom (~anticom@ip-88-153-48-20.hsi04.unitymediagroup.de)
[19:04:51] *** Quits: mactron (~mactron@APN-123-254-51-gprs.simobil.net) (Read error: Connection reset by peer)
[19:05:19] *** Joins: fstd (~fstd@xdsl-89-0-79-89.nc.de)
[19:05:25] <Blondie101010> that happens all the time
[19:05:39] <Blondie101010> at least you figured it out on your own, which is good
[19:11:32] *** Joins: ferdna (~ferdna@user/ferdna)
[19:13:59] *** Quits: Anticom (~anticom@ip-88-153-48-20.hsi04.unitymediagroup.de) ()
[19:14:41] *** Joins: stenno (~stenno@user/stenno)
[19:16:53] *** Joins: ms49434 (~ms49434@user/ms49434)
[19:17:20] <__adrian> gastus: also note, it's not a character count. it's a byte count.
[19:18:19] *** Quits: fstd (~fstd@xdsl-89-0-79-89.nc.de) (Read error: Connection reset by peer)
[19:19:25] *** Joins: fstd (~fstd@xdsl-89-0-79-89.nc.de)
[19:40:14] *** Quits: ms49434 (~ms49434@user/ms49434) (Quit: Leaving)
[19:45:38] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[19:46:05] <BadAdviceCat> Hello.
[19:46:17] <biberu> o/
[19:48:04] *** Quits: memoryleak (~memorylea@77-58-142-250.dclient.hispeed.ch) ()
[19:52:36] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 245 seconds)
[19:53:29] *** Joins: stenno (~stenno@user/stenno)
[20:07:26] *** Joins: pmercado (~pmercado@186.107.62.14)
[20:14:26] <jadew> __adrian, I'm back
[20:14:52] <jadew> there are many reasons hacklang doesn't need that rule
[20:17:11] <jadew> for one, scripts are called by file, so the entry point is clear
[20:17:32] <jadew> it's not like a C program which gets compiled into a blob and the OS doesn't know where to start from
[20:18:02] *** nuala2 is now known as nuala
[20:19:29] <jadew> secondly, global space pollution is only an issue in programs that share memory, otherwise it's perfectly fine to have stuff in the global space - everything is still contained to your program, it's not like you're declaring stuff at OS scope
[20:20:39] <jadew> enforcing weird rules when they're not needed only forces you to add additional complexity, when it's not really necessary
[20:21:15] <__adrian> jadew: this is not on topic here - i was pointing out that the rule was not arbitrary or foolish because i thought maybe you didn't understand that and could write you code better. if you're not interested in that, that's fine.
[20:23:30] <jadew> had to defend my position, since you attacked it and claimed what they're doing is the only correct way of doing things
[20:23:38] <__adrian> it was not an attack
[20:23:52] <jadew> it was an attack on my position, I didn't take it personally :)
[20:24:09] <__adrian> no; it was not an attack at all
[20:24:58] <jadew> you directly contradicted my position, so you can call it however you like, I'm going to label it as an attack on what I said
[20:25:07] <__adrian> was just an attempt to help you understand something that it seemed you didn't. if you do (to your satisfaction), then it's not worth discussing, as it would only become an argument, and we're not here to argue.
[20:25:25] <__adrian> we're here for code help.
[20:25:46] <jadew> well, debating coding practices seems like a good way of helping someone
[20:26:03] <BadAdviceCat> jadew, are you talking about design principles?
[20:26:13] <BadAdviceCat> Design principles exists to guide programmers to not do things in such a way, that would later create problems.
[20:26:23] <__adrian> discussion could be. the difference is wanting to learn about things vs. wanting to prove a position
[20:26:26] <jadew> BadAdviceCat, yes, I am
[20:26:43] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[20:26:57] <jadew> __adrian, no, there's no difference, if I cannot prove my position, then it means your arguments are better, so I will have to reconsider my views
[20:27:16] <jadew> I can't reconsider them just because someone says so, arguments have to be provided
[20:27:36] <BadAdviceCat> Yes, PHP has a lot of features, doesn't mean they should all be used. It also doesn't mean that certain features should be used in such a fashion, especially if using a feature in PHP is abused and not used like it is intended to be used.
[20:27:38] <__adrian> ...
[20:28:05] <jadew> BadAdviceCat, I agree
[20:29:33] <BadAdviceCat> For example. PHP has the `global` keyword, while it can be used, it SHOULD BE AVOIDED, especially because it creates the problem called: Action at a Distance. - Can read in details about how, and why here: https://en.wikipedia.org/wiki/Action_at_a_distance_(computer_programming)
[20:30:20] <jadew> the reason PHP has the global keyword is because it has dumb scope resoltuion
[20:32:58] <biberu> jadew: so you want a language with top level statements, generics, anything else?
[20:33:37] <jadew> heh, I would just like generics in PHP as it is, I can deal with the rest
[20:34:12] <Blondie101010> why use PHP and not your favorite language?
[20:34:35] <jadew> PHP is my favorite language for web development
[20:34:35] <__adrian> then your question's been answered - no generics, but you can enforce that via static analysis.
[20:36:41] <biberu> __adrian: can you do that for anything but arrays?
[20:37:26] <__adrian> depends on the tools you use. phan, for example, understands  some_iterable_type<the_type_it_contains>
[20:37:41] <jadew> biberu, it appears that you can
[20:37:48] <jadew> in Psalm it's called "template annotation"
[20:38:01] <jadew> so you can declare your class as generic too
[20:38:46] <biberu> i see
[20:39:08] *** Joins: white5moke (~white5mok@ip72-219-109-30.oc.oc.cox.net)
[20:44:55] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 260 seconds)
[20:45:52] <biberu> looks quite verbose, but a nice possibility
[20:46:13] <jadew> that's what I was thinking
[20:47:21] <jadew> a transpiler would be nice, so you can do away with all the extra comments
[20:47:44] <jadew> but with the assumption that PHP would catch up eventually
[20:50:11] <biberu> why though?
[20:50:21] <jadew> which part?
[20:50:36] <biberu> transpiling to php
[20:50:57] <jadew> because at this point you're writing code in the comments
[20:51:09] <biberu> that's be a hard sell in an existing project, and if it's a new project what's the point?
[20:51:29] <jadew> well, you'd be writing next gen php
[20:51:43] <biberu> according to who?
[20:52:11] <jadew> and eventually when PHP finally implements the functionality, you'd only have to make some small changes and drop the transpiler (if you're not making use of some future features)
[20:52:47] <__adrian> i think biberu is hinting that the syntax/behavior that you pick for the transpiler might not match what's eventually implemented
[20:53:10] <biberu> indeed
[20:53:28] <jadew> yeah, I picked up on that too, which is why I said some small changes could be necessary
[20:53:34] <biberu> there are already languages that compile to php
[20:53:35] <jadew> I'd be willing to live with that
[20:54:14] <biberu> iirc haxe does
[20:56:44] <jadew> transpiling from "PHP with features from the future" to "current PHP" is not the same
[20:57:05] <jadew> for one, you don't have to learn another language
[20:57:14] <__adrian> that was not the suggestion. quite the opposite.
[20:57:58] <jadew> what was the suggestion?
[20:58:04] <Blondie101010> jadew: why do you change your engine?
[20:58:15] <Blondie101010> why not use the one that supports your language?
[20:58:23] <jadew> Blondie101010, HHVM dropped PHP support
[20:58:33] <__adrian> that "from the future" is not practical, but there are other languages (that might have the features you want) that compile down to php.
[20:58:40] <jadew> I was heavily using it, and I don't like the general directions they're taking
[20:58:55] * __adrian shrugs
[20:58:58] <__adrian> stop updating
[20:59:04] <jadew> heh
[20:59:18] *** Quits: pmercado (~pmercado@186.107.62.14) (Ping timeout: 258 seconds)
[20:59:27] <Blondie101010> I wouldn't solve this with a transpiler for sure
[20:59:38] <jadew> the template thing?
[20:59:40] <__adrian> maybe YOU wouldn't
[20:59:46] <__adrian> :p
[21:00:34] <Blondie101010> unless you put more effort in the transpiler than in rewriting the code, you'll be getting much less maintainable code
[21:00:56] <jadew> oh, I didn't mean to imply that I would be writing one
[21:01:21] <Blondie101010> therefore the resulting code will probably be much worse
[21:02:24] <jadew> what I meant to say was that instead of a static analysis tool, I would have preferred a transpiler that supported those features (which I'm sure will make it into PHP anyway)
[21:03:00] <Blondie101010> ah ok
[21:04:16] <biberu> jadew: sure, that's why I asked if the language was already decided. if you want to transpile you're introducing a new language regardless, so it's really the php interpreter you need? are you deploying to environments beyond your control that only run php?
[21:05:24] <jadew> biberu, I want to stay with PHP. I made the mistake of adopting HHVM several years ago, now I have to migrate the code back to PHP. I don't need this crap in the future.
[21:05:47] <biberu> that's exactly the risk you take with a transpiler too
[21:05:56] <__adrian> ^
[21:06:10] <jadew> right, but a transpiler that only implements proposed features to the language poses a lower risk
[21:06:33] <jadew> odds are that you'll be able to use the actual language a couple of years down the road, with minor changes
[21:06:42] <__adrian> the risk is higher - because you know the feature _will_ exist but not that it will be compatible with what you anticipated
[21:06:46] <biberu> that doesn't sound like a realistic wish to me
[21:07:26] <Blondie101010> php and hhvm have already divorced a while ago for good reasons
[21:07:29] <jadew> why not? what HHVM introduced was pretty much copied into PHP
[21:07:47] <Blondie101010> if it was the same, they would not have forked
[21:07:54] <jadew> if HHVM was a transpiler instead, we would have had the exact situation I described
[21:08:20] <Blondie101010> php did take some things from hhvm, but that doesn't mean it will ever do anything else similar
[21:08:32] <jadew> Blondie101010, yes, HHVM did a better job in regards to strong typing
[21:08:32] <__adrian> you mean the one where you're trying to move off of the "transpiler" but the real language doesn't behave the same way?  ;)
[21:08:42] <biberu> jadew: at what point should a feature be implemented in the future language? as a proposal? what if it changes? when it's accepted? why not just implement it in php?
[21:09:06] <__adrian> ^ if you know the syntax and behavior... it's not like that's the easy part of a new feature
[21:09:07] <biberu> you'll either break or do extra work
[21:09:23] <jadew> biberu, generics are a great example, there's a proposal, there's an intention to introduce them and they're generally accepted to work in a certain way
[21:10:00] <__adrian> look at how old that proposal is. you think it was abandoned (and is now being rewritten) for no reason?
[21:10:28] <jadew> __adrian, I don't know... things move really really slow with PHP
[21:10:52] <__adrian> problems were found. if you wrote a transpiler based on that original RFC (which i think actually isn't the "original"), you'd have different behavior than the original feature.
[21:10:59] <__adrian> "I don't know..."  good point.
[21:11:19] <__adrian> *eventual feature
[21:11:54] <biberu> if i wanted that I'd just pick a language that supports it, e.g. c# has generics and top level statements ¯\_(ツ)_/¯
[21:11:56] <__adrian> things are slow+careful with php development because there's a very strong emphasis on backwards compatibility.
[21:12:08] <jadew> so you'd rather have the same implementation done in the comments, rather than in code, just because you might have to change something when the real one comes out?
[21:12:23] <__adrian> it's not an implementation
[21:12:26] <Blondie101010> I would not
[21:12:35] <__adrian> it's just a way to verify that your code is doing what you expect.
[21:12:58] <__adrian> it's about the immediate results. when real generics come out, the static analysis tool will still exist.
[21:13:20] <__adrian> and there won't be a conflict with the actual feature. some people might move to it, and some might not.
[21:13:26] <jadew> PHP doesn't need generics - it's all about static analysis
[21:13:41] <Blondie101010> then case closed
[21:14:00] <__adrian> i actually agree on that point  :)
[21:14:08] <biberu> jadew: with the annotations you're betting on the tool being maintained and future compatible...
[21:14:38] <__adrian> biberu: not entirely. annotations are also a way to communicated intent with devss.
[21:14:54] <__adrian> man i'm typoing a lot
[21:15:13] <jadew> __adrian, yeah, but why communicate the type of a variable when it's clear from the code?
[21:15:33] <biberu> __adrian: true, that would remain an advantage
[21:15:39] <__adrian> when? don't.
[21:15:41] <Blondie101010> if it's already clear, then the static analysis tool should be able to handle it well
[21:15:44] <__adrian> ^
[21:15:59] <__adrian> if it's _not_ clear, then you make a comment.
[21:16:18] <jadew> I was talking about the transpiler case
[21:16:30] <jadew> it makes those comments largely obsolete
[21:16:45] <__adrian> not after you've transpiled
[21:16:58] <__adrian> unless your transpiled also writes comments  :)
[21:17:00] <__adrian> *r
[21:17:05] <__adrian> jeez
[21:17:22] <jadew> yeah, I guess it could write comments, but that code is of little interest to you anyway
[21:17:32] <jadew> that one is for the computer to deal with
[21:18:19] <biberu> ^ that's why transpiling parts of an existing project might meet with difficulty
[21:20:09] <BadAdviceCat> OoO, Symfony's docs just got a makeover.
[21:39:10] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 260 seconds)
[21:43:43] *** Joins: Rockwood (~Rocky@user/rocky)
[21:46:44] <Rockwood> good night
[21:48:24] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[21:49:37] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[22:01:20] *** Quits: Junxter (~Junxter@114.221.230.117) (Ping timeout: 260 seconds)
[22:03:56] *** Joins: stenno (~stenno@user/stenno)
[22:05:13] <BadAdviceCat> o_O
[22:18:14] *** Joins: Junxter (~Junxter@114.221.230.117)
[22:19:25] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 258 seconds)
[22:20:25] *** Joins: stenno (~stenno@user/stenno)
[22:45:38] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[22:46:27] <no_gravity> I have a PHP cli script that creates a segmentation fault. Is that something that is normal?
[22:48:27] <TinoDidriksen> No, that should be impossible.
[22:48:33] <no_gravity> TinoDidriksen: Wow
[22:49:50] <no_gravity> It is 100% reproducable like this: Start the script, resize the terminal => segmentation fault (core dumped)
[22:50:00] <Naktibalda> it means a bug in PHP or (more likely) in some extension. Try to identify the function which causes it
[22:50:17] <Naktibalda> why does terminal resize affect php?
[22:50:40] <no_gravity> Ubuntu then writes this file: /var/crash/_usr_bin_php7.4.0.crash
[22:51:11] <Naktibalda> https://bugs.php.net/bugs-generating-backtrace.php
[22:51:15] <Blondie101010> no_gravity: disable all extensions and see what breaks
[22:51:24] <no_gravity> Blondie101010: extensions?
[22:51:43] <Blondie101010> yes, thingys defined in php.ini with extension=
[22:52:34] <no_gravity> Blondie101010: As far as I can see there are none
[22:53:00] <no_gravity> Blondie101010: In /etc/php/7.4/cli/php.ini
[22:53:23] <Naktibalda> php -m
[22:53:49] <Blondie101010> where would the .d be?
[22:54:01] <no_gravity> Naktibalda: That outputs a bunch of stuff.
[22:54:03] <Blondie101010> maybe /etc/php/7.4/cli/php.d
[22:54:13] <Naktibalda> look at cli/conf.d dir
[22:54:39] <no_gravity> Naktibalda: There are a ton of symlinks
[22:54:48] <Blondie101010> exactly
[22:54:49] *** Joins: junktext_ (~junktext@gateway/vpn/pia/junktext)
[22:54:56] <Blondie101010> so move them elsewhere temporarily
[22:55:12] <no_gravity> I guess the script will not run then.
[22:55:50] *** Quits: parabellum (~parabellu@p200300d3973bc10036780f4f8fe04ae4.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[22:56:32] <Naktibalda> no_gravity: you can try to use gdb to analyze crash fil
[22:56:35] <TinoDidriksen> Ah, so it's not the script's fault. You need to do something beyond running the script.
[22:56:45] <Naktibalda> or enable xdebug function trace and see where it stops
[22:56:52] <no_gravity> TinoDidriksen: Yes, start the script + resize the terminal
[22:57:01] <TinoDidriksen> Then sure, outside forces can cause segfaults all the time.
[22:57:12] *** Joins: ferdna (~ferdna@user/ferdna)
[22:57:36] <TinoDidriksen> Resizing the terminal is a very rare action. I doubt anyone cares to test extensions for that.
[22:57:59] <Blondie101010> but what extension would rely on that
[22:58:33] <Blondie101010> curses?
[22:58:37] <TinoDidriksen> readline
[22:58:47] <no_gravity> Lets see if I can make a minimal version of the script ...
[22:58:53] <Blondie101010> I don't think readline would crash for that
[22:59:06] <TinoDidriksen> no_gravity, which extensions do you use in the script?
[22:59:21] <Blondie101010> that's why I suggested to disable them all
[22:59:25] <Blondie101010> it'd be obvious
[22:59:28] <TinoDidriksen> Indeed
[23:00:22] <TinoDidriksen> But it must also be pretty obvious anyway. If there's time to resize the terminal, it's because it's waiting for input or on a progress bar - so he must know exactly where in the code it is.
[23:00:56] * Blondie101010 nods
[23:01:10] *** Joins: parabellum (~parabellu@p200300d3973bc100bb67c9a370f781c8.dip0.t-ipconnect.de)
[23:01:21] <Blondie101010> no_gravity:  so, what is waiting for input when your resize and it crashes?
[23:01:40] <no_gravity> Blondie101010: Yes, it is waiting for input.
[23:02:20] <Blondie101010> what function?
[23:02:49] <no_gravity> I'm trying to figure it out .. it is in a while (true) loop that does a few things ...
[23:03:14] <Blondie101010> ugh, can you show the code?
[23:03:48] <no_gravity> Yeah, but the loop alone does not crash it.
[23:04:15] <BadAdviceCat> no_gravity, my approach to this would be to subject 1 php extension from the loop at a time until the crash stops.
[23:04:23] <BadAdviceCat> Subtract*
[23:04:34] <Blondie101010> good approach
[23:04:36] <TinoDidriksen> ...but when it does crash, what function is it crashing on? Should be pretty simple to see.
[23:04:37] <biberu> remove half of it
[23:04:50] <no_gravity> This is the loop: https://pastebin.com/raw/hPHGVMeK
[23:04:54] <biberu> binary search debugging ^^
[23:04:59] <no_gravity> But that alone does not lead to the crash.
[23:05:13] <TinoDidriksen> So, readline is involved.
[23:05:18] <no_gravity> There must be some initialization before that that sets the stage.
[23:05:57] <Blondie101010> can't you show us a full script?
[23:06:06] <BadAdviceCat> Every month, I check to see if PHP will get accessors, seems like it won't happen.
[23:06:13] <Blondie101010> if not, enable core dumps and look at the stack
[23:06:22] <BadAdviceCat> I'm so salty.
[23:06:35] <no_gravity> Blondie101010: I think I have a core dump. How do I look at the stack?
[23:06:42] <Blondie101010> with a debugger
[23:06:49] <no_gravity> Blondie101010: Uh oh
[23:06:54] <Naktibalda> https://bugs.php.net/bugs-generating-backtrace.php
[23:09:19] *** Quits: white5moke (~white5mok@ip72-219-109-30.oc.oc.cox.net) (Quit: Leaving...)
[23:10:24] <no_gravity> It is tricky because the script reads data from a DB and outputs that. When just remove that part, no crash happens on terminal resize.
[23:11:58] <Blondie101010> no_gravity:  you either share the script, use the debugger as suggested, or stuck all alone with this
[23:12:10] <TinoDidriksen> no_gravity, potentially https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=964358
[23:12:38] <Blondie101010> unlikely
[23:12:46] <Blondie101010> that's a buffer overflow bug
[23:12:50] <no_gravity> Hmm...
[23:14:59] <TinoDidriksen> Oh, I misread that. True, that's an input issue.
[23:15:35] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Quit: It's a dud! It's a dud! It's a du...)
[23:15:45] <TinoDidriksen> Anyway, it's a libedit issue, not a PHP issue.
[23:16:09] <Blondie101010> so far it was not clearly demonstrated
[23:17:10] <no_gravity> I'm still minimizing the script
[23:18:08] <Blondie101010> it's very likely a bug in the readline extension or library, but it'd be nice to have a demo script to prove it
[23:18:32] <no_gravity> I'm down to 138 lines now.
[23:18:44] <Blondie101010> could I run it here?
[23:19:26] <no_gravity> I'll post it when I have removed the stuff not needed for the crash.
[23:19:35] <Blondie101010> ok
[23:19:46] <Blondie101010> try to fake DB data if needed
[23:20:45] <no_gravity> 73 lines ...
[23:21:56] <Blondie101010> ok so paste it
[23:23:22] <no_gravity> Here we go: https://pastebin.com/raw/aLBMAxbc
[23:24:11] <no_gravity> To create a segmentation fault: ./test.php<enter><ctrl+c>
[23:24:33] <no_gravity> No resizing needed.
[23:24:46] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[23:26:09] <no_gravity> Correction: You need to hit <enter> *twice*
[23:26:19] <no_gravity> ./test.php<enter><enter><ctrl+c>
[23:26:56] <Blondie101010> so far it's freezing but not crashing
[23:27:13] <TinoDidriksen> Segfaults for me.
[23:27:48] <Blondie101010> that said, the code has so many problems and concerns that it should not be used in a bug report
[23:30:08] <TinoDidriksen> It's dying in select()
[23:30:19] <Blondie101010> I'm getting: tput: invalid option -- '1'
[23:30:19] <Blondie101010> usage: tput [-V] [-S] [-T term] capname
[23:30:39] <Blondie101010> maybe that's why it doesn't crash for me
[23:31:16] <TinoDidriksen> I definitely agree this is not worth a bug report. This is so much black magic and specific to a given terminal that it's not a PHP issue.
[23:32:53] <no_gravity> I'm down to 22 lines.
[23:33:26] <TinoDidriksen> Show it.
[23:33:36] <no_gravity> https://pastebin.com/raw/uuuCL16r
[23:33:43] <TinoDidriksen> valgrind is a good fire-and-forget debugger, btw.
[23:35:51] <Blondie101010> no_gravity:  that's better
[23:36:13] <no_gravity> I'm down to 3 lines
[23:36:20] <Blondie101010> show it
[23:36:25] <TinoDidriksen> It's any two bytes of input that stops it.
[23:36:35] <Blondie101010> but I'm still not getting a crash (and the error is gone)
[23:36:46] <no_gravity> https://pastebin.com/raw/pFXTMaar
[23:36:58] *** Parts: fengshaun (~fengshaun@S010680615f0c2c0a.cg.shawcable.net) (Leaving)
[23:37:14] <no_gravity> Blondie101010: Do you type this? ./test.php<enter><enter><ctrl+c>
[23:38:09] <TinoDidriksen> I'm testing on Ubuntu, and I assume no_gravity is on a Debian derivative as well.
[23:38:18] <no_gravity> Yup
[23:39:02] <no_gravity> Since the first two lines are mandatory, it is basically a one-liner now.
[23:39:10] <no_gravity> I think that is all I can contribute.
[23:39:26] *** Joins: magla (~gelignite@55d43ee1.access.ecotel.net)
[23:39:50] <Blondie101010> I wish I got the crash :S
[23:40:08] *** Quits: hansol (~hansol@185.116.92.25) (Quit: Client closed)
[23:40:12] <no_gravity> What is strange is that the crash moved from "when terminal is resized" to "when enter and then ctrl+c is pressed" while minifying ...
[23:40:45] <Blondie101010> installing PHP on ubuntu to test
[23:41:23] <no_gravity> Blondie101010: It also happens in a debian docker container for me.
[23:42:01] <TinoDidriksen> The minimal testcase does crash in libedit, in a path that has to do with signals.
[23:42:29] <Blondie101010> resizing would be relevant, and so would ctrl-c
[23:42:51] <no_gravity> Oh, resizing still causes the crash!
[23:43:07] <Blondie101010> what's your 2 line version?
[23:43:11] <Blondie101010> got PHP installed now
[23:43:16] <no_gravity> https://pastebin.com/raw/pFXTMaar
[23:43:17] <TinoDidriksen> Resizing does indeed also crash.
[23:43:44] <TinoDidriksen> But valgrind doesn't know why, and I'm not building a debug build...
[23:44:29] <TinoDidriksen> There's other reports about libedit being bad at signals and error handling, so it doesn't surprise me at all.
[23:44:33] <Blondie101010> yeah it crashes
[23:45:04] <TinoDidriksen> Blondie101010, is your non-Ubuntu PHP linked against libedit or libreadline?
[23:45:07] <BadAdviceCat> The script is still running for me.
[23:45:12] <BadAdviceCat> I'm on Arch Linux.
[23:45:28] <BadAdviceCat> In a VM, on Arch Linux.
[23:45:35] <TinoDidriksen> Linked against what? I'd expect Arch links to libreadline.
[23:45:37] <Blondie101010> libedit
[23:45:59] <no_gravity> Looks like the while(1) is not needed: https://pastebin.com/raw/gP6KjTv2
[23:46:15] <no_gravity> That might be the better example as it shows that the loop is not needed.
[23:46:17] <Blondie101010> BadAdviceCat:  you need to resize the window or send another signal
[23:46:54] <BadAdviceCat> I've resized the window, hit enter, typed in some stuff, hit enter again.
[23:47:11] <no_gravity> BadAdviceCat: Did you try ctrl+c?
[23:48:51] *** Quits: Junxter (~Junxter@114.221.230.117) (Ping timeout: 245 seconds)
[23:49:05] <BadAdviceCat> Oh yeah, I've tried that too. I'm using 8.0.11.
[23:49:14] <BadAdviceCat> Nothing about segfault appeared.
[23:49:47] <Blondie101010> hmmmm, I thought I'd be able to debug this in WSL2, but nope :S
[23:50:25] *** Quits: konrados (~konrados@user-5-173-16-28.play-internet.pl) (Ping timeout: 260 seconds)
[23:50:59] *** Joins: konrados (~konrados@user-5-173-16-28.play-internet.pl)
[23:51:17] <TinoDidriksen> Segfault happened on WSL1 via PuTTy as well.
[23:52:09] <Blondie101010> I got the problem in WSL2, but I don't think I can get the core dump
[23:52:50] <no_gravity> In practical terms, I guess the the getKey() function should not make sure to not call readline_callback_handler_install() twice. I wonder if it can do that without putting a variable into the global scope.
[23:54:08] <Blondie101010> can't you just put the tty in raw mode and just select and read from STDIN?
[23:54:27] <Blondie101010> stty raw
[23:54:46] <no_gravity> Blondie101010: I dunno. I'm doing a ton of funky magic with the terminal. Basically wrote my own ncurses like functionality.
[23:55:01] <Blondie101010> you should test it and see if it also crashes
[23:55:26] <Blondie101010> if not, you have a solution
[23:55:50] <Blondie101010> and if it crashes, it would mean the problem is deeper
[23:56:36] <Blondie101010> with stty raw, termcaps should basically be bypassed
[23:58:10] <no_gravity> The ugliest workaround in the history of workarounds: https://pastebin.com/raw/XdKQg69D
[23:59:21] <BadAdviceCat> Readline library	8.1 - Shared.
