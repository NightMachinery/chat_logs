[00:00:35] *** Quits: magla (~gelignite@55d4e32c.access.ecotel.net) (Quit: Stay safe!)
[00:00:44] <pyzozord> when you think about all the internal and external complexities, it's a miracle that computers work at all
[00:00:50] <izak> i mean a pointer which is represented as long :/ [itchyjunk]
[00:00:56] <[itchyjunk]> "In any case, long pointers are a platform specific issue and may not be portable to other OSes or platforms."
[00:01:06] <deniska> pyzozord: the magic of layers of abstraction
[00:01:06] <InPhase> Stefan26: Program reliability must assume that things do not work the way you assume, and should attempt to recover from that.  Of course you can still be messed up if some critical jump goes off to nowhere, but at least you want to keep your odds high.
[00:01:22] <[itchyjunk]> oh `long` the data structure
[00:01:23] <[itchyjunk]> ?
[00:01:37] <izak> long in jvm [itchyjunk]
[00:01:40] <deniska> [itchyjunk]: "long pointer" is kinda a thing of old days
[00:01:58] <deniska> well, at least for what most people would mean by that
[00:02:27] <Stefan26> how can computer assisted proofs considered to be valid if you can't rule out cosmic rays?
[00:02:57] <[itchyjunk]> because it's not blackbox
[00:02:58] <deniska> Stefan26: how can human assisted proofs be considered to be valid if you can't rule out them going crazy mid paper? :P
[00:03:11] <[itchyjunk]> it tells you what steps it took to verify something
[00:03:46] <[itchyjunk]> you can also take results from one and pass it to another
[00:03:52] <[itchyjunk]> and verify it that way
[00:04:04] <izak> jvm is not necesserly balack boxed.
[00:04:15] <Stefan26> fair enough if something else can run it again
[00:04:19] *** Joins: gitgood (~gitgood@80-44-12-89.dynamic.dsl.as9105.com)
[00:04:21] <[itchyjunk]> i meant to Stefan26 , proof assistance is not blackbox
[00:04:35] <[itchyjunk]> Stefan26, or you can ask 2 proof assist to prove the same thing
[00:04:39] <[itchyjunk]> or 10 of them
[00:04:59] <[itchyjunk]> w/e it take to get your confidence interval high enough to account for some internal error
[00:05:01] <GeDaMo> https://en.wikipedia.org/wiki/Monte_Carlo_method
[00:05:03] <bayaz> Title: Monte Carlo method - Wikipedia 
[00:05:08] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 268 seconds)
[00:05:29] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 248 seconds)
[00:05:51] <izak> random walk
[00:06:08] * [itchyjunk] tries random walk to go to bathroom
[00:06:12] * [itchyjunk] hits the wall
[00:06:17] * [itchyjunk] turns and starts walking
[00:06:19] * [itchyjunk] hits the wall
[00:06:24] <pyzozord> I think that's the difference between the theoretical and practical thought
[00:06:31] *** Joins: Drek45 (~jrept371@129.59.122.18)
[00:06:35] <pyzozord> both are useful
[00:06:40] <pyzozord> none is perfect
[00:06:41] *** Quits: inom (~inom@176.59.111.80) (Quit: Leaving.)
[00:06:43] <izak> fair enouth 
[00:06:50] <izak> *t
[00:07:01] <deniska> [itchyjunk]: if you want to get somewhere, you should random walk in 3d space
[00:07:20] *** Quits: inky (~inky@46.36.119.19) (Ping timeout: 250 seconds)
[00:07:21] * [itchyjunk] walks into the ceiling
[00:08:14] *** Joins: Powerhouse6666 (~Powerhous@2604:3d08:5b7f:e136:95b1:bac0:7698:51de)
[00:08:33] <deniska> you'll still walk into plenty of surfaces, but at least you're not sticking to the origin :)
[00:08:46] *** Joins: inky (~inky@46.36.119.19)
[00:09:41] <Izem> does a cpu care about I/O or is it always handled by another device?
[00:10:06] <deniska> Izem: depends on the architecture
[00:10:07] *** Joins: webnet4 (~0x100@32.211.211.39)
[00:10:28] <deniska> Izem: some CPUs may have dedicated IO ports, some only work with memory and devices should be memory mapped
[00:10:29] <Izem> so like in memory mapped I/O it would care?
[00:11:09] <deniska> in case of memory mapped IO, as far as CPU is concerned, it just tries to read/write certain locations in RAM
[00:11:45] <deniska> Izem: (of course we assume 80s kind of CPUs in this discussion, not too sure what modern ones are doing wrt to pci-e and other high speed stuff)
[00:11:59] <Izem> yes of course
[00:12:25] *** Joins: Crescendo (~Crescendo@user/crescendo)
[00:12:59] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[00:13:24] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[00:13:30] * pyzozord resets [itchyjunk]'s position to 0,0,0
[00:13:50] <Izem> now I just need to figure out what some simple I/O systems are
[00:13:53] <deniska> 0,0,0 <evil laughter>, 0
[00:14:13] <pyzozord> hehhe
[00:14:16] *** Lord_of_Life_ is now known as Lord_of_Life
[00:14:18] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[00:14:21] <[itchyjunk]> why is pci-e fast?
[00:14:24] <[itchyjunk]> like what changed?
[00:14:28] <pyzozord> took me a second before I got it
[00:14:31] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[00:14:32] <[itchyjunk]> it's still copper wire no?
[00:14:55] <Izem> or, if I wrote an OS as a vm I can just trap syscalls and use the OS?
[00:15:02] <deniska> [itchyjunk]: yes, but using differential signalling and other tricks to pass data quickly
[00:15:03] <webnet4> don't they gold plate it? that must be where all the speeeed comes from
[00:15:12] <[itchyjunk]> differentail signalling :O
[00:15:48] *** Joins: molt (~molt@79.140.150.21)
[00:16:18] <deniska> [itchyjunk]: when you put a fast changing signal on a wire, it acts more or less like a radio antenna
[00:16:24] *** Joins: Thedarkb (~Thedarkb@185.69.145.19)
[00:16:26] <[itchyjunk]> damn differential singalling is fancy
[00:16:51] <deniska> [itchyjunk]: so for fast buses we put two wires nearby and put opposite signals on them so they cancel each other out
[00:16:57] <GeDaMo> https://www.youtube.com/watch?v=G3ja6Hn8ps4
[00:16:58] <bayaz> Title: The Simpsons Speedholes 
[00:17:34] <deniska> [itchyjunk]: in ethernet CAT-x cables you literally have twisted pairs
[00:17:54] <deniska> usb and pci-e also use that kind of signalling
[00:19:18] *** Joins: zwr (~zwr@2804:d45:b966:fb00:dba2:de2a:61cd:17bb)
[00:19:21] <izak> to be honest fancy is a fancy word... we dont know if it loops or not.
[00:20:40] <deniska> Izem: there's also this term we call DMA, basically when various computer devices can read/write to RAM or to each other without active participation of the CPU
[00:20:46] *** Quits: cthulchu (~Cthulchu@46.211.59.153) (Ping timeout: 252 seconds)
[00:20:47] <deniska> which also helps to speed things up
[00:22:30] <deniska> Izem: when I was tinkering with writing a RISC-V emulator, I created a magic memory address which when written to outputs a character to stdout, and when read from, gets a character from stdin
[00:22:45] <deniska> that's plenty enough to play around with :)
[00:23:19] <Izem> what about serial?
[00:23:44] <deniska> I was happy getting simple C programs running
[00:24:15] <deniska> like I gave gcc some C code, it produced a binary, and my thing written in python could interpret that binary :D
[00:24:18] <deniska> woo
[00:24:31] <Izem> I may not actually use a vm I just don't know what I/O looks like
[00:24:45] <GeDaMo> It's just bits
[00:24:46] <Izem> deniska: nice
[00:24:57] <deniska> either reading or writing special memory addresses, or issuing special CPU instructions
[00:25:18] <deniska> depending on the architecture
[00:25:43] <Izem> does an os require a shell?
[00:26:04] <deniska> not really, rather a shell requires an OS of some sort
[00:26:14] <Izem> not sure how you would tell it what programs to run otherwise
[00:26:33] <Izem> unless it has predefined programs
[00:26:37] <mercenary> Think kiosk setups, it starts one program
[00:26:39] <deniska> it can read a config from a file system
[00:27:04] <Izem> ok
[00:27:15] <deniska> or wait for a command from a network or whatever
[00:27:34] <Izem> but that reqiures a file system :/
[00:27:35] <deniska> unixy systems start with executing a program at predefined path like /bin/init
[00:28:11] <deniska> Izem: well, if there's no file system, can we really talk about "programs"?
[00:28:47] <Izem> all in memory, can't I send it over serial?
[00:29:37] <deniska> Izem: yeah, sure, but then you'll still have something FS-like even if in-memory
[00:29:47] <mercenary> Izem: yes. one can bootstrap a new board with just something that reads serial, stores in memory, and jumps to the first address
[00:30:08] <Izem> hmm
[00:30:17] <deniska> Izem: if you make an OS which accepts a single program and then jumps to it, it's more like a bootloader in modern nomenclature
[00:31:05] <deniska> Izem: but then if this program calls back to various OS facilities, then it'll be close to DOS, well, besides the whole "disk" part :)
[00:31:13] *** Quits: Drek45 (~jrept371@129.59.122.18) (Remote host closed the connection)
[00:31:16] <Izem> good place to put an interpreter
[00:31:20] <Izem> yes
[00:31:27] <Izem> that sounds good
[00:31:40] *** Quits: pulse (~pulse@user/pulse) (Read error: Connection reset by peer)
[00:32:36] *** Joins: Drek45 (~jrept371@129.59.122.18)
[00:32:54] <deniska> bare metal wasm interpreter is kind of a thing I'd do if I had more free time :)
[00:33:25] *** Quits: gitgood (~gitgood@80-44-12-89.dynamic.dsl.as9105.com) (Ping timeout: 252 seconds)
[00:33:46] <pyzozord> meaning mod riscv to run wasm natively?
[00:34:18] <izak> if every programs is not proven not to crush, implies it eventually crushes... then every computer program is exploitable ?
[00:34:42] <izak> "to crush" *
[00:35:19] <deniska> izak: just because you didn't prove something, doesn't meant it can't be true
[00:35:48] *** Joins: gitgood (~gitgood@80-44-12-89.dynamic.dsl.as9105.com)
[00:36:20] <deniska> izak: also even if you can make a program to crash, doesn't mean it's exploitable unless crashing was the goal of an exploit
[00:36:22] <mercenary> deniska: wasm machine, or wasmachine for short?
[00:36:28] <izak> deniska: then it can be true or fale. yeah, i agree.
[00:36:48] <deniska> pyzozord: WASM isn't really intended to be a good machine language
[00:37:02] *** Joins: jjido (~Denis@2a01:4b00:80e2:7100:94f3:a79f:8eb9:c547)
[00:37:16] <deniska> I was thinking more akin a DOS-like system but with 64 bit, multitasking, and a WASM interpreter :)
[00:37:46] <Izem> seems like a kernel and io system have to be designed at the same time?
[00:37:57] <Izem> maybe even the io system first
[00:38:14] <pyzozord> I think wasm has the potential to become lingua franca of bytecodes
[00:38:21] <Izem> nah
[00:38:34] <deniska> Izem: well, if you consider how this little project called "linux" started
[00:38:42] <Izem> it's a cool project though
[00:38:58] <izak> if i some can make a program crash and catch the address of the program where it crashed.... it not it possible to continue from the point6 where the program has crushed ?
[00:39:21] *** Joins: arcatech (~arcatech@user/arcatech)
[00:39:28] <Izem> I just don't think there will ever be a lingua franca of bytecodes
[00:39:32] <deniska> Izem: Linus was trying to write a program which would use a modem to call to a computer at his uni, and relay keyboard input to modem and modem output to the screen
[00:39:40] *** Quits: [Kalisto] (~nico@user/kalisto/x-8968079) (Ping timeout: 268 seconds)
[00:39:44] <deniska> so it was more or less pure IO thing
[00:39:57] <Izem> interesting
[00:40:04] <pyzozord> izak: depends on the type of "crash"
[00:40:16] *** Quits: arcatech (~arcatech@user/arcatech) (Client Quit)
[00:40:48] <izak> if i may ask ...
[00:40:49] <deniska> Izem: but then it'd be nice for this program to save or upload files, so then disk driver and file systems are nice to have
[00:41:01] <Izem> heh :-)
[00:41:09] <Izem> yeah that's a good start
[00:41:15] <deniska> Izem: add a couple more features like that and you're getting into the OS territory
[00:41:16] <izak> what kind of crush pyzozord... 
[00:41:51] <deniska> Izem: a typical OS development hello world starts with getting something to screen
[00:42:03] <pyzozord> izak: you can recover from divison by zero for example, but it will be very hard to recover from stack smashing
[00:42:18] <Izem> deniska: don't really want to waste time on vga
[00:42:44] <izak> with all due respect, i am not talking about the obvious.
[00:42:50] <deniska> Izem: getting basic video output on ibm pc is really easy, that is if your target is actually ibm pc
[00:43:11] <pyzozord> izak: both are obvious
[00:43:42] <Izem> deniska: not really but that is the first thing I thought of, other hardware is too complex
[00:43:45] <beaky> nice i like the ibm pc it had an iconic keyboard
[00:44:10] *** Joins: freakazoid12345 (~matt@35.136.210.185)
[00:44:20] <Izem> I don't really care about the details I just want to figure out what goes into os design
[00:44:40] <deniska> Izem: other systems can actually be simpler
[00:44:43] <pyzozord> Izem: I heard lots of tables and lookups
[00:45:22] <izak> what would be the not so obvious pyzozord ?
[00:45:24] <deniska> Izem: IBM PC is a typical target of hobby osdev due to its ubiquitousness
[00:45:38] <deniska> lots of emulators, and lots of existing hardware you can experiment on
[00:45:59] *** Quits: Haxxa (~Haxxa@122.199.46.17) (Read error: Connection reset by peer)
[00:46:02] <deniska> lots of documentation as well, both official and unofficial
[00:46:10] <pyzozord> izak: hmm cant think of any (obviously)
[00:46:17] <Izem> well I learn x64 is not segmented like x86, then you think what does an os on this look like?
[00:46:23] <[itchyjunk]> Does java have this concept of macros?
[00:46:27] <Izem> no
[00:46:39] <[itchyjunk]> where there is a different compiler like thing that does some work before the actual compiler
[00:46:39] *** Joins: pulse (~pulse@user/pulse)
[00:46:40] <[itchyjunk]> oh
[00:46:47] <deniska> Izem: oh, x86_64 is very much segmented, it's just that a typical OS configures it to be a single huge segment :)
[00:47:05] *** Quits: freakazoid343 (~matt@35.136.210.185) (Ping timeout: 248 seconds)
[00:47:05] <mawk> well you don't have a choice
[00:47:13] <mawk> you have to have a single flat segment
[00:47:21] <mawk> it's necessary to enable the 64 bit mode
[00:47:24] <[itchyjunk]> you always have a choice!
[00:47:32] <mawk> yes, but then the cpu doesn't let you turn on 64 bits
[00:47:47] <mawk> see the intel SDM
[00:47:56] <beaky> that infamous 5000 page manual
[00:47:56] <pyzozord> izak: i think there is no such thing as obvious or nonobvious when it comes to program crashes. You get a set of possible signals from the os and that's it. Some are more frequent than others, but they are all obvious
[00:48:11] <deniska> mawk: I think it's still possible to put it into segment-ish mode back after switching, wine does that for running win16 applications on 64 bit systems
[00:49:04] <mawk> yes if you're running in a compatibility mode I think you can
[00:49:06] *** Joins: Haxxa (~Haxxa@122.199.46.17)
[00:49:39] <mawk> yes beaky but most of it is useless, you only need the 1500 pages part
[00:49:40] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 240 seconds)
[00:49:52] <mawk> which is a much lower amount you could probably go through in an hour
[00:50:10] <izak> pyzozord: im am a hobbyist but i always thing what if one can map any given instruction to atlist a given set on instructions ?
[00:50:18] <rxndxs> I've read quite a bit of the thing and there's so much craziness going on
[00:50:38] <Izem> does windows nt use stream io?
[00:50:47] <[itchyjunk]> if you create something that takes in Java code and spits out C code, would that be a macro in C or a compiler or what would you call it?
[00:50:57] <Izem> a compiler
[00:51:05] <[itchyjunk]> oh...
[00:51:14] *** Joins: Crescendo (~Crescendo@user/crescendo)
[00:51:17] <[itchyjunk]> my preconception of compiler was very wrong before today
[00:51:20] <izak> [itchyjunk]: a JNI ?
[00:51:20] <deniska> [itchyjunk]: "a compiler" is a general term for a program which transforms a program written in one language to another language
[00:51:23] <Izem> transpiler is another term (source -> source)
[00:51:27] <[itchyjunk]> hmm what's a JNI? :S
[00:51:38] <[itchyjunk]> deniska, i thought macros did this too
[00:51:50] <[itchyjunk]> it takes in some stuff and pits out code in the base language
[00:51:52] <mawk> yes but C macros are stupid
[00:52:02] <mawk> it doesn't deserve the name compiler
[00:52:13] <Izem> macros are copy and paste in C
[00:52:32] <deniska> [itchyjunk]: macros are more like a feature of a language which allow the deeper control of the compilation process
[00:52:36] <[itchyjunk]> oh macros in C use C syntax or somesuch?
[00:52:40] <rxndxs> I despise C macros :( imagine rust like macros in C
[00:52:51] <deniska> you can consider C macros to be the part of the C language, yes
[00:53:00] <rxndxs> [itchyjunk]: you get 'function' like macros which do plain subtitution pretty much
[00:53:06] <[itchyjunk]> deniska, someone here gave an assembly macros example where they wrote a function that took two number , did stuff and returned a number
[00:53:09] <pyzozord> heh in some sense whenever i do search and replace I am performing a transpilation process
[00:53:14] <deniska> (even though strictly speaking historically you had a separate program, cpp, to run preprocessor)
[00:53:19] <[itchyjunk]> and they said it's a macro because the underlying code only sees a number and not a function
[00:53:23] <izak> [itchyjunk]: it is  Java Native Interface .... it is basically a C interface to Java.
[00:53:37] <deniska> [itchyjunk]: macros are like small programs which are run during compilation
[00:53:38] *** Joins: JimmyRustles (~Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net)
[00:53:42] <pyzozord> oh no maybe not, since I might be changing meaning
[00:53:51] <JimmyRustles> is it bad practice to write "if (x > 0)" when you could just write "if (x)"?
[00:54:03] <[itchyjunk]> deniska, right so these programs are in their own language different from the base language right?
[00:54:04] <deniska> JimmyRustles: not really
[00:54:06] <[itchyjunk]> or can be different
[00:54:14] <deniska> JimmyRustles: sometimes verbosity doesn't hurt
[00:54:17] <Izem> JimmyRustles: clarity is great
[00:54:17] <rxndxs> JimmyRustles: those are not equivalent
[00:54:20] <netbsduser> JimmyRustles: and if it's < 0?
[00:54:23] <[itchyjunk]> (i am guessing C macros are written in C or something because C seems to be special)
[00:54:34] <deniska> [itchyjunk]: no, I'd consider these programs to be a part of the language
[00:54:34] <JimmyRustles> netbsduser this would be a situation where x is always zero or positive
[00:54:39] <Izem> if(x) is C style is usually for boolean situations no?
[00:54:41] <JimmyRustles> thanks
[00:54:52] <mawk> or pointers Izem 
[00:55:01] <izak> and for a programmer like me JNI is hell [itchyjunk]
[00:55:09] <[itchyjunk]> izak, oh lol
[00:55:09] <Izem> yeah, otherwise you will have to look at it more
[00:55:17] <deniska> [itchyjunk]: like, `#define` is just a thing a C compiler understands, so we may consider it to be a part of C
[00:55:43] <Izem> cpp you mean?
[00:55:50] <deniska> [itchyjunk]: at the time when C was just being invented, it wasn't strictly true, because preprocessor and a compiler were two separate programs
[00:55:55] <deniska> yeah, cpp thing
[00:56:01] <deniska> not to be confused with c++ :P
[00:56:04] <[itchyjunk]> oh
[00:56:20] <Izem> someone else wanted macros, orignially they were not big on it :P
[00:56:35] <Izem> but it's used quite a bit since then
[00:56:38] <deniska> [itchyjunk]: but eventually everyone was using C with the preprocessor, so preprocessor became the part of the syntax
[00:56:47] <deniska> first de-facto, and then as a part of the standard
[00:57:04] <Izem> is it me or c macros could totally be changed without hurting anything?
[00:57:19] <Izem> you can just add a new maro processor ...
[00:57:20] <deniska> Izem: historically speaking they're a bolt-on, sure :)
[00:57:28] <Izem> ncpp
[00:58:02] <deniska> but then a modern C compiler treats preprocessor as part of the language, giving you useful error messages, keeping track of actual line numbers etc
[00:58:17] <Izem> macros don't harm your source, but I can totally see why the standards group is cautious to add anything
[00:58:21] <pyzozord> preprocessor is kind of a weird thing when I think about it
[00:58:27] <rxndxs> for the people from the tab vs spaces discussion the other day https://cdn.discordapp.com/attachments/238666723824238602/879088747327672330/image0.png
[00:58:28] <bayaz> Type: image/png Size: 174.8 kB 
[00:58:43] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[00:59:02] *** Joins: Crescendo (~Crescendo@user/crescendo)
[00:59:14] <mercenary> Izem: I have seen makefiles that ran the source through m4, then through a 4gl that generated C code, then through cpp/cc. Fun to debug.
[00:59:25] <Izem> arrgghh
[00:59:28] <Izem> my eyes
[00:59:31] <Izem> lol
[00:59:40] <deniska> mercenary: pfft not even using <?php in your .c files
[00:59:48] <Izem> o.O
[00:59:52] <rxndxs> is m4 still a thing ? only place I've seen it is autotools
[00:59:54] <Izem> why???
[01:00:02] <mercenary> deniska: that was before php was invented
[01:00:12] <deniska> Izem: metaprogramming goes brr
[01:00:28] <mawk> deniska: I think cpp is still used, at least by gcc
[01:00:29] *** Quits: Drek45 (~jrept371@129.59.122.18) (Remote host closed the connection)
[01:00:36] <mawk> but it inserts the debug info into the preprocessed source
[01:00:44] <mawk> and that's how it can give you the nice error messages
[01:00:46] <mawk> but I may be wrong
[01:00:52] <mawk> but for clang I think it's how you said
[01:00:58] <GeDaMo> https://en.wikipedia.org/wiki/Polyglot_(computing)
[01:00:58] <bayaz> Title: Polyglot (computing) - Wikipedia 
[01:01:00] <deniska> mawk: it's still available as a separate executable for historical reasons
[01:01:16] <[itchyjunk]> before php was invelted?
[01:01:22] <[itchyjunk]> i've used php4/5 i think
[01:01:23] <deniska> mawk: but it's not like you'll ever have a "preprocessed c file" as a part of your average compilation pipeline
[01:01:24] <izak> what is harder... malware written in go and other or a self modifing code written in c.
[01:01:27] <[itchyjunk]> when was php invented?
[01:01:28] <izak> ?
[01:01:28] <mawk> deniska: I mean by calling gcc -E on a source file to preprocess
[01:01:37] <mawk> yeah it's not common
[01:01:43] <mawk> I only ever used that to debug a nasty macro
[01:02:04] <[itchyjunk]> damn
[01:02:15] <[itchyjunk]> too much to learn when it comes to programming
[01:02:23] <[itchyjunk]> this will get out of hand where no one will know anything
[01:02:25] <deniska> mawk: just like gcc doesn't work to output literal assembly, but you can ask it to output it
[01:02:26] <Izem> yes you have to be careful :P
[01:02:26] <[itchyjunk]> like math :D
[01:03:23] *** Quits: paulo (paulo@jujube.ircnow.org) (Changing host)
[01:03:23] *** Joins: paulo (paulo@user/paulo/x-9032687)
[01:03:47] <[itchyjunk]> omg
[01:03:55] <[itchyjunk]> int and Integer are different things too..
[01:04:00] <Izem> yes
[01:04:01] * [itchyjunk] gently chokes java
[01:04:22] <deniska> [itchyjunk]: java is a acompromise the programming language
[01:04:26] <Izem> int is the primitive type, Integer is the class, this is part of the boxing mentioned early
[01:04:49] <Izem> this is a mistake in design
[01:05:19] *** Quits: paulo (paulo@user/paulo/x-9032687) (Quit: ZNC 1.8.2 - https://znc.in)
[01:05:26] <oldlaptop> obviously this means types were a bad idea
[01:05:27] *** Joins: lapno_ (~lapno@epn141.neoplus.adsl.tpnet.pl)
[01:05:30] <[itchyjunk]> https://thume.ca/2019/07/14/a-tour-of-metaprogramming-models-for-generics/
[01:05:30] <bayaz> Title: Models of Generics and Metaprogramming: Go, Rust, Swift, D and More - Tristan Hume 
[01:05:33] <[itchyjunk]> my head hurts
[01:06:09] <Izem> oldlaptop: no, it should have all been objects from the start, like prior languages e.g. smalltalk, self
[01:06:11] *** Joins: va5c0 (~vasco.nun@95.148.139.46)
[01:06:59] <Izem> but it was made to appear like a c and c++ alternative, so mistakes and all were included
[01:07:03] <deniska> but then it's kinda slow when each numbers happens to be its own thing on heap
[01:07:04] <izak> i wonder wht i dont enjoy rust. dont we have enough programming language  ?
[01:07:29] <Izem> e.g. java case statement etc
[01:07:40] *** Quits: lapno (~lapno@eoh163.neoplus.adsl.tpnet.pl) (Ping timeout: 240 seconds)
[01:08:05] *** Joins: Drek45 (~jrept371@129.59.122.18)
[01:08:10] *** Quits: CaptainJ (~CaptainJ@141.226.12.62) (Ping timeout: 240 seconds)
[01:08:15] * oldlaptop ignores Izem, starts waving "EIAS" signs and chanting "hey, hey, ho, ho, all these types have got to go"
[01:08:17] <deniska> oh, C and C++ mistakes which went to java begin with {} and ;
[01:08:41] <deniska> broken remainder/modulo too?
[01:08:52] <deniska> switch-case was already mentioned
[01:09:37] <Izem> deniska: didn't they fix that?
[01:09:58] <mawk> what broken modulo?
[01:10:02] *** Quits: va5c0 (~vasco.nun@95.148.139.46) (Client Quit)
[01:10:04] <mawk> the fact it doesn't work properly with negative integers?
[01:10:10] <mawk> and you have to take modulo twice
[01:10:38] <mawk> well it works properly but it doesn't give the canonical representant
[01:10:41] *** Joins: paulo (paulo@user/paulo/x-9032687)
[01:11:00] <mawk> that's always annoying, so I do (m + (x % m)) % m to always get a positive result
[01:11:10] <deniska> mawk: yeah, many languages are completely wrong as far as negative numbers with % are involved :)
[01:11:21] <Izem> someone mentioned something interesting about the representation of an object changing at runtime?
[01:11:30] <pyzozord> I think my problem with rust is the same problem I have with math / very theoretical fields. It's just very demanding and restrictive
[01:11:43] <pyzozord> But I need to get more comfortable with that
[01:11:57] <Izem> I think rust is just different, which is good
[01:12:17] <Izem> pyzozord: what do you find demanding so far?
[01:12:42] <Izem> rust syntax is criminal though
[01:12:42] <pyzozord> But instead of doing rust I decide I'll be doing agda. If you steal, steal bilions
[01:12:48] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 244 seconds)
[01:13:18] <pyzozord> or Coq, I'm not sure, but I heard very good things about Coq
[01:13:20] <Izem> there is a little typer book which looks interesting, that may help
[01:13:26] <rxndxs> rust is nice, at least I love how it does meta programming
[01:13:35] <pulse> % isn't modulo, it's remainder :p
[01:13:36] <izak> pyzozord: what do you think of GMP ?
[01:13:39] <pulse> in most langs
[01:13:47] <pyzozord> yeah I heard about Little Typer. I should read Little Schemer and Little Typer. In that order.
[01:13:54] <Izem> coq is a theorem prover btw
[01:14:07] *** Joins: ixil (~ixil@82.197.178.137)
[01:14:25] <Izem> I think the little schemer is a meme tbh
[01:14:33] <Izem> but I didn't read it all tbf
[01:14:49] <Izem> great intro to programming though
[01:15:08] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[01:15:20] <Stefan26> dont talk about coq when beaky is not here?
[01:15:40] <[itchyjunk]> math has to be strict though :s
[01:15:50] <[itchyjunk]> else you can get funky results
[01:15:51] <izak> math is funfull and painfull.
[01:15:57] <pyzozord> izak: GNU Multiple Precision Arthmetic Library? I never used it
[01:16:00] <[itchyjunk]> yeah, math is painful
[01:16:03] <[itchyjunk]> agreed
[01:16:31] <deniska> gcc depends on gmp
[01:16:40] <deniska> to do math during compilation time :D
[01:16:56] <Izem> I've wondered can't someone just make some algebra for pointers
[01:17:10] <Izem> but I guess that's what linear types are for sorta
[01:17:56] <pyzozord> Rust seems like it wants to be Haskell and Haskell seems like it wants to be Agda. I say cut out the middle man
[01:18:03] <Izem> but pointer arith is very usefull
[01:18:25] <Izem> rust is more like ocaml tbh
[01:18:35] <Izem> agda copied haskell syntax
[01:18:41] *** Quits: reumeth (~reumeth@user/reumeth) (Ping timeout: 258 seconds)
[01:19:16] <Izem> big issues are use once and pointer airth, linear types seems to be ok for issue one, is there anything for issue two?
[01:19:41] <Izem> other than banning pointers :P
[01:19:49] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Quit: Leaving.)
[01:20:35] <izak> pyzozord: computer math is crazy.
[01:20:50] <pyzozord> Also apl and agda will look mighty impressive on my CV
[01:21:47] <pyzozord> Most people won't even know what it is and they will look it up and see all these strange strings of symbols and formal definitons for things...
[01:21:55] <pyzozord> It's quite intimidating from the outside
[01:22:01] *** Joins: Samian (~Sami@174.27.107.153)
[01:22:01] <izak> i rater go to go than rust.
[01:22:29] <Izem> pretty sure apl will get you hired quickly, doesn't seem to be many of those guys left :P
[01:23:20] <pyzozord> Anyone knows both lisp and haskell? I still should choose one of them as my major programming language, not sure which is better
[01:23:54] <bjs> pyzozord: Haskell is what all the cool kids use
[01:23:56] <Izem> better in what way?
[01:24:00] <bjs> and you're cool aren't you?
[01:24:31] <izak> lisp all the way!
[01:24:58] <Izem> without knowing anything I'd go with lisp, many compilers/software and it's a lot easier
[01:25:01] <pyzozord> I have 2 sets of languages I want to know. Major languages: assembly, c, js, python and (lisp/haskell). And esoteric languages: apl, agda, forth.
[01:25:43] *** Joins: damxsa (~damx@2001:16a2:cd07:7e00:c69c:ea15:4679:2b93)
[01:25:46] <Izem> forth and apl are really interesting
[01:25:46] <pyzozord> I feel knowing these will pretty much cover all the bases, and if I ever need to learn any other language it will be some aproximation of mix of one of these
[01:25:49] <bjs> pyzozord: (i'd argue that "assembly" isn't 1 language it's more a description of a kind of language)
[01:26:42] <beaky> apl agda and forth are not esoteric although only forth aims to be a general purpose programming language     
[01:26:47] <Izem> pyzozord: don't be like me, just use https://hyperpolyglot.org/ and https://learnxinyminutes.com/ when you want to take a look
[01:26:48] <bayaz> Title: Programming Languages - Hyperpolyglot 
[01:26:48] <bayaz> Title: Learn X in Y Minutes: Scenic Programming Language Tours 
[01:26:51] <pyzozord> bjs: I know Haskell is what the cool kids do. But there is also oldschool cool and that is the lisp way. I can't decide.
[01:27:05] <izak> forth rocks!!
[01:28:00] <bjs> pyzozord: Haskell is old enough to be oldschool as well :)
[01:28:35] <pyzozord> I am under the impression that haskell vs lisp is kind of like c vs python
[01:28:49] <Izem> pyzozord: though if you are interested in haskell I'd check out miranda first personally
[01:28:58] <izak> assembly is like when you want to build a house and you start wondering about the atomic composition of the brics which is c.
[01:29:07] <Izem> no not really
[01:29:15] <Izem> wrt to haskell vs lisp
[01:29:41] <beaky> nice i like haskell though i like rust better than haskell now because rust is more cache friendly by default
[01:29:41] <[itchyjunk]> AGDA is like a proof assistance thing?
[01:29:45] <[itchyjunk]> COQ like thing?
[01:29:48] <[itchyjunk]> or what is it?
[01:29:50] <Izem> lisp was just there from the beginning
[01:29:56] <pyzozord> I heard that haskell is strict and compiled while lisp is loose and interpreted
[01:30:15] <Izem> [itchyjunk]: adga has this special thing called dependent types
[01:30:30] *** Parts: JimmyRustles (~Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net) ()
[01:30:30] <Izem> haskell is interpreted, lisp is compiled
[01:30:36] <damxsa> lisp is very "configurable" you can say.
[01:31:10] <beaky> yes agda is a dependently-typed programming language (and dependent types happen to be useful for proofs) whereas coq is a whole system designed as a proof assistant under dependent types (the dependently-typed programming language part of coq is just gallina but then tehre's like a tactics language that people use in practice to do proofs and a whole vernacular commands to drive the proof
[01:31:12] *** Quits: lapno_ (~lapno@epn141.neoplus.adsl.tpnet.pl) (Quit: Leaving)
[01:31:13] <beaky> assistant)
[01:31:19] <Izem> yes, haskell is a strict language, but I love it's type system
[01:31:44] <Izem> I programmed much more in miranda but I've never had such confidence or completed programs that quickly
[01:31:47] <izak> i think lisp is more comparable to erlang than lisp ?
[01:32:12] <Izem> not really, erlang is something else again
[01:32:23] <Izem> erlang is a functional language built on the actor model
[01:32:34] <izak> i thought they are similar Izem
[01:32:37] <Izem> guess I should call it an actor language then
[01:32:47] <Izem> lisp is similar to every language
[01:33:00] <izak> actor meaning event ? Izem ?
[01:33:11] <Izem> sorta yeah
[01:33:14] <pyzozord> hmm lisp might be it
[01:33:22] <pyzozord> I think I'm more of a lisp person
[01:33:43] <beaky> nice i like lisp
[01:33:48] <Izem> not a bad choice for a language to go deep in
[01:33:55] <pyzozord> on the other hand that would suggest I should work harder on my weak (haskelly) side
[01:33:56] <beaky> are you gonna install emacs now
[01:34:00] <Izem> though now you will probably have to use emacs
[01:34:01] <beaky> do eet
[01:34:03] <Izem> lol
[01:34:32] <Lyn> What's a good way to create golden ISO images?
[01:35:15] <Izem> pyzozord: In that case I suggest ocaml unless you want to take a long time learning haskell
[01:35:42] *** Joins: nevoyu (~joshua@cpe-192-180-19-146.kya.res.rr.com)
[01:36:10] <beaky> but nobody uses ocaml all the cool category theoretic abstract mathemagicians use haskell and blog about it
[01:36:22] <beaky> whereas if you search for ocaml resources the only user is jane street 
[01:36:30] <Izem> yep
[01:36:46] <webnet4> https://en.wikipedia.org/wiki/Gold_compact_disc  Lyn ?
[01:36:46] <bayaz> Title: Gold compact disc - Wikipedia 
[01:36:49] <pulse> there's few things so nice in the world as Pilot Supergrip-G
[01:37:32] <Lyn> webnet4: synonymous with VM template
[01:37:32] <beaky> plus haskell has higher kinded types which ocaml does not so if you use haskell you will know why everyone is mad at rust not supporting higher kinded types
[01:37:47] <izak> oclam is the cool dude we all want to talk to
[01:38:01] <Izem> I suspect ocaml probably has a higher quality ratio when it comes to open source libraries for the few it has
[01:38:10] *** Quits: damxsa (~damx@2001:16a2:cd07:7e00:c69c:ea15:4679:2b93) (Quit: Leaving)
[01:38:11] <izak> ocaml*
[01:38:19] *** Joins: blahboybaz (~blahboyba@67-5-101-245.spok.qwest.net)
[01:38:57] <Izem> the main thing is that it has a HM type system which is want pyzozord wants to learn I think
[01:39:04] <webnet4> dd + mkisofs maybe?
[01:39:17] <Izem> which is what*
[01:39:30] <beaky> oh yes if you want hm then haskell does not have that 
[01:39:49] <Izem> I thought it did?
[01:39:52] <beaky> but then might as well learn standard ml instead the more academic version of ocaml that nobody uses
[01:39:59] <Izem> lol
[01:40:09] <Izem> yeah that might be too much haha
[01:40:23] <Thedarkb> I wish I could wrap my head around FP, I just can't turn my ideas into FP concepts.
[01:40:36] <Izem> does take time to learn
[01:40:54] <Izem> but don't worry, even dennis ritchie said the same thing :P
[01:40:57] <InPhase> Thedarkb: Some don't fit into FP well.
[01:41:16] <Izem> that's why they went with C cause it made more sense
[01:41:30] <beaky> the advantage of standard ml is that there is mlton the world's only whole-program optimizing compiler so you can use it and wait half an hour to compile hello world but then be in awe at the sheer optimization and size efficiency of the output binary
[01:41:57] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[01:41:59] <beaky> this is also why ur/web gets to be so screaming-fast (ur/web is the only production user of standard ml)
[01:42:05] <Izem> lisp, c, and js would be pretty good though, well supported and many compilers also international standards etc
[01:42:28] <InPhase> Thedarkb: A fun exercise is to look at what types of programs are focused on by the strongest adherents of FP.  You'll find these are mostly data translation programs, like compilers and such.
[01:43:00] <Izem> yes there is not much systems stuff sadly
[01:43:06] <pyzozord> what is HM type system?
[01:43:11] <Thedarkb> I do some data translation programs, but I also have to deal with a lot of state as well.
[01:43:17] <Izem> so you end up stumbling in the dark
[01:43:18] <beaky> ill have you know people write webscale webapps (i.e. systems stuff) in haskell too
[01:43:35] <bjs> pyzozord: the type system that Haskell uses (and its predecessor ML)
[01:43:42] <Izem> pyzozord: it's the Hindley–Milner type system
[01:43:43] <pyzozord> I heard of ML
[01:44:25] <beaky> hm type system stands for hindley-milner type system it is the most famous type system where you get to have type inference for every expression (so you can practically leave out the types for the entire program and the type inference algorithm infers everything correctly)
[01:44:45] <Izem> Thedarkb: yes, they figured out parser combinators though, which is wicked impressive
[01:45:04] <Izem> I was wondering about this but then it was already discovered
[01:45:42] *** Quits: blahboybaz (~blahboyba@67-5-101-245.spok.qwest.net) (Ping timeout: 250 seconds)
[01:45:51] <Izem> beaky: is it also responisble for polymorphism?
[01:46:45] <bjs> pyzozord: Haskell for example has a neat type system with lots of generics (parametric polymorphism) and all the types can be inferred automatically.
[01:46:58] <beaky> yes you can do polymorphism and you will still had full type inference but i think the idea of polymorphism was also around in other sources
[01:47:02] <Izem> Thedarkb: state is always gonna be needed, that's why ocaml and scheme are cool
[01:47:03] <beaky> like the CLU language 
[01:47:04] <pyzozord> oh that type inference thing sounds familiar. In Typescript there is a lot of type inference going on.
[01:47:30] <pyzozord> (btw I did not mention typescript on my list, I consider it a spinoff of javascript :P)
[01:47:32] <bjs> pyzozord: all type systems have some amount of type inference, HM made it so that you never needed to write type annotations/signatures at all
[01:47:51] <bjs> pyzozord: although in modern engineering practices you often do, for a variety of reasons.
[01:48:12] *** Quits: aniruddha (uid340443@id-340443.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[01:48:26] <pyzozord> yeah that ML thing sounds kind of similar to typescript
[01:48:27] *** Joins: venue (~venue@user/venue)
[01:48:41] <bjs> pyzozord: HM*,  ML is the name of the language. HM is the name of the type system
[01:49:02] <pyzozord> oh sorry, yes HM
[01:49:39] <Izem> typescript is probably doing something else or it would've been added to javascript
[01:50:39] <pyzozord> Here is a parser that converts typescript signatures to HM-style https://github.com/samhh/tshm
[01:50:40] <bayaz> Title: GitHub - samhh/tshm: A parser and formatter for TypeScript declarations that outputs HM-style type signatures. 
[01:50:48] <pyzozord> that suggests they are pretty similar right?
[01:50:52] <bjs> pyzozord: typescript is different but surely related
[01:51:27] *** Quits: jjido (~Denis@2a01:4b00:80e2:7100:94f3:a79f:8eb9:c547) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:52:08] <bjs> the original ML language was fairly simple and didn't have too many features, newer languages that use similar systems have lots of features that add complexity.  Look at Haskell, or Rust or something,  they have similar but quite different type systems
[01:52:17] <Izem> just wanting for google or mozzila to make a full vm platform so they can make a proper language
[01:52:31] <Izem> s/wanting/waiting/
[01:52:45] <Izem> static type system now is critical for js to gain speed
[01:53:01] <Izem> in which case we are no longer scripting ...
[01:53:10] <webnet4> they won't do it
[01:53:30] <Izem> samething for python, but that's just a C interface so it's still ok
[01:54:08] <pyzozord> it really sounds like typescript and HM are virtually the same systme just with different syntax and library of common features/utility types
[01:54:18] <Izem> that'd probably kill docker
[01:54:37] <Izem> but then we are back at ground zero using vms lol
[01:54:49] *** Quits: kmq (~kmq@x4db91f91.dyn.telefonica.de) (Ping timeout: 252 seconds)
[01:54:55] <pyzozord> if that's the case then I already know way more than I thought I do
[01:55:18] <bjs> pyzozord: well the details are what are different, they both are the same "style", they are type systems for languages with generics and functions and stuff
[01:55:39] <bjs> but typescript has a lot more and i think the actual inference and checking works differently,  but I don't know typescript 
[01:56:00] <pyzozord> I mean it has like "you are the type of that guy or that other guy, except not this subtype, but must be part of this subtype"
[01:56:25] <bjs> pyzozord: subtypes aren't a thing in HM
[01:56:27] <Izem> typescript reminded me of mpy not HM
[01:56:52] <paulo> hi everyone
[01:57:04] <Izem> so typescript is a superlanguage of javascript with types
[01:57:13] <Izem> and so it works without types as well
[01:57:20] <pyzozord> bjs: nither in typescript, it was more conceptually, in typescript you can "unpack" a complex type or "pick" only some of the fields of the object
[01:57:33] *** Joins: zaher (~zaher@37.48.146.210)
[01:57:40] <bjs> pyzozord: well typescript has structural subtyping for sure
[01:57:46] *** Joins: reumeth (~reumeth@user/reumeth)
[01:58:35] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[01:58:54] <pyzozord> so it's just playing around with types making types build on top of other types, depend on other types. and all kinds of variations. It's like c++ generics on steroids
[01:59:34] *** Quits: nekobyte (~cat@user/nekobit) (Ping timeout: 250 seconds)
[01:59:34] *** Quits: zaher_ (~zaher@37.48.146.162) (Ping timeout: 250 seconds)
[01:59:52] <bjs> pyzozord: I think you'd get the wrong impression if you think TypeScript and Haskell have the same/very similar type systems.  They are obviously similar style but how they actually work is going to be quite different due to different language design and features
[02:01:11] <pyzozord> bjs: I hear you say "type system is similar but it it's for different languages, so typeing system will be different by the virtue of being designed for a different language" is that about right?
[02:01:29] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[02:01:33] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:01:35] <bjs> pyzozord: yes, HM is a particular specific type system for one language (ML) and Haskell is sort of "directly" descended from ML in some sense.
[02:02:07] <bjs> pyzozord: but TypeScript and Rust and that are not, and have their own similar looking/style systems but don't use HM (and even modern Haskell doesn't really use it because it has e.g. Typeclasses)
[02:02:23] <pyzozord> Ok then I still need to learn haskell, but it's type system should be familiar already. Just the old concept fitted to make sense into this new language
[02:02:25] <bjs> typeclasses even remove the whole "can infer everything" from the language
[02:03:30] <pyzozord> ok typeclasses sounds like a "type of a type"
[02:03:44] <bjs> pyzozord: not really, typeclasses are like rust's traits if you're familiar
[02:03:55] <bjs> maybe sort of like java interfaces(?) but that's getting a little streched
[02:03:58] <pyzozord> not with rusts, but generally with concept of traits
[02:04:08] <pyzozord> as kind of mixin classes
[02:04:34] <Izem> is usb the only bus a hardware designer needs if he wanted to make a ibm pc clone?
[02:05:03] <beaky> yes typeclasses are not really 'type of a type' maybe perhaps type of a type only in the sense of being a constraint on types (in haskell 'kinds' are the actual type of a type)
[02:05:07] *** Joins: CaptainJ (~CaptainJ@141.226.12.62)
[02:05:13] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[02:05:34] <beaky> the same kind as in higher-kinded types (what everyone wishes rust had)
[02:05:36] *** Joins: mickey (~user@user/mickey)
[02:05:48] <pyzozord> ok so none of these ideas sound revolutionary. The sound like the same concepts just more developed and more features added
[02:06:15] <beaky> Izem: you also need pci 
[02:06:17] <pyzozord> doesn't really change fundamentally what you do and how you do it
[02:06:45] <Izem> yes, that too
[02:06:46] <Izem> ok
[02:07:17] <pyzozord> I saw agda demo that looked kind of fundamentally different. I saw some similarities to typescript but far more differences from anything I know
[02:07:39] <beaky> nice what agda demo did you see
[02:07:44] <beaky> was it the computerphile one
[02:07:55] <beaky> https://www.youtube.com/watch?v=bRudW0aBNg8
[02:07:56] <bayaz> Title: Eliminating Run-Time Errors with Agda - Computerphile 
[02:08:02] <bjs> pyzozord: I mean Haskell is not a new language and a lot of its ideas are fairly revolutionary
[02:08:07] <pyzozord> beaky: yeah that one
[02:08:28] <bjs> pyzozord: Well I mean, no language really has truly *revolutionary* ideas because all the ideas come from theoretical CS first usually
[02:09:15] <bjs> and there were numerous predecessors to Haskell (ML and Miranda are the obvious named ones, although nobody writes either anymore)
[02:10:04] <pyzozord> bjs: I'd consider agda, apl and forth all to be much different from mainstream languages. I'm trying to gauge if haskell belongs to the mainstream set (aka I know most of it by osmosis) or the niche set (aka I mostly never seen such a thing)
[02:10:24] <Izem> haskell is not mainstream
[02:10:37] <Izem> if you are talking about industry
[02:10:39] <pyzozord> not in the sense of popularity in usage
[02:10:46] <pyzozord> no that is not what I am talking about
[02:10:56] <Izem> it is an academic language that's for sure
[02:11:00] <pyzozord> I am talking about the popularity of concepts it uses as part of its design
[02:11:31] <Izem> no, those are not popular either, except lambda calculus I guess
[02:11:33] <bjs> pyzozord: I mean it's not as popular as the other "Mainstream" languages but it is a popular (everyone knows the name), truly general-purpose language
[02:12:09] <bjs> pyzozord: it's never going to be as popular as Java or Python or C, it's never going to have the rich library support those have, it is kind of niche
[02:12:09] <beaky> exactly haskell is a general purpose programming language
[02:12:23] <pyzozord> Izem: isn't lambda calculus another name for anonymous closures?
[02:12:26] <bjs> pyzozord: but there's no definition of what makes a "mainstream" language
[02:12:38] <bjs> pyzozord: no, lambda calculus is like turing machines
[02:12:39] <Izem> pyzozord not really
[02:12:43] <bjs> pyzozord: a mathematical model of computation
[02:12:55] <Izem> that's a marketing way to put it though
[02:13:03] <bjs> actually slightly older than Turing machines
[02:13:09] <pyzozord> I know it's theoretical foundation, but in practice it's just a function that takes functions and makes functions, that's it
[02:13:20] <beaky> lambda calculus is the formal system that inspired those 'anonymous clousres' (that also get called lambda even though for example python's 'lambda' arent closures)
[02:13:31] <bjs> beaky: not closures?
[02:13:53] <pyzozord> so I consider "lambda calculus" or rather "closures" a vey mainstream idea
[02:13:58] <Izem> pyzozord it's a model of computation
[02:14:15] <bjs> pyzozord: lambda calculus is not just "closures"
[02:14:16] <beaky> yes python has some weird scoping rules so it's not really closures like when you try to make an 'addone' function using lambdas and passing the arguments it doesnt work right 
[02:14:28] <Izem> it's just marketing
[02:14:33] <bjs> pyzozord: it's a whole mathematical framework/system,  just like Turing machines are. 
[02:14:36] <bjs> Izem: marketing?
[02:14:44] <Izem> you can call them "closures" though
[02:14:56] <bjs> Izem: call what closures?
[02:15:13] <bjs> beaky: doesn't work right?
[02:15:18] <pyzozord> bjs: from what I could understand about lambda calculus is that this whole mathematical system is build up from idea of composible functions
[02:15:24] <bjs> pyzozord: yes
[02:15:29] <Izem> bjs: saying you have closures has been quite a popular thing to add to languages for the past while
[02:15:39] <bjs> pyzozord: functions are a very old idea in mathematics, going back much further than lambda calculus
[02:15:57] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:16:12] <pyzozord> the lambda calculus idea is that a function is thingified, you can do stuff with it
[02:16:24] <pyzozord> and that what allows it the power to build a whole mathematical system from it
[02:16:35] *** Joins: nekodesu (~bit@user/nekobit)
[02:16:35] <bjs> pyzozord: Church just used them to build a model of computation (or really of formal logic because "computers" and "computation" weren't a thing then)
[02:16:53] *** Quits: zoey (~zoey@2a02:8084:a080:9e00:7c8c:4b88:b1b8:70e1) (Read error: No route to host)
[02:17:00] <pyzozord> so in practical terms it really just sounds like closures. Thingified functions.
[02:17:20] <pyzozord> The rest is just development of that core idea
[02:17:24] <bjs> pyzozord: I mean you're nounifying the whole calculus to be just the function
[02:17:36] <bjs> a lambda calculus isn't a type of function, it's a calculus: a system
[02:18:26] <beaky> bjs: yes in python you need 'nonlocal' (which you cant use in lambdas only in nested function definitions) to specify the free variables for them to properly 'close over' the variables and become closures
[02:18:32] <pyzozord> bjs: I think you might be remarking on the importance of the theoretical foundations
[02:18:47] <pyzozord> bjs: but for me it's the same as with turing machine. It's an array with a loop.
[02:19:04] <pyzozord> well and a pointer
[02:19:10] <bjs> pyzozord: okay but if you just re-define what Lambda Calculus and Turing Machine mean to you that's going to be confusing to everyone else
[02:19:11] *** Quits: Drek45 (~jrept371@129.59.122.18) (Quit: Leaving)
[02:19:14] <bjs> because those words have a meaning
[02:19:19] <bjs> beaky: I'm still not sure what you mean
[02:19:56] <bjs> beaky: why doesn't addone() work? `lambda x: lambda: x + 1` works fine
[02:20:04] <InPhase> pyzozord: For your next challenge, try to get the Turing machine to segfault.
[02:20:06] <beaky> here's a classic example you'd expect i in the lambda to use the values in the list comprehension but it doesn't https://github.com/satwikkansal/wtfpython/blob/master/README.md#-schr%C3%B6dingers-variable-
[02:20:07] <bayaz> Title: wtfpython/README.md at master · satwikkansal/wtfpython 
[02:20:11] <pyzozord> bjs: fair enough I am not familiar with formalized meanings I can see how it can be confusing for you if you those words mean specific things to you
[02:20:21] <bjs> beaky: okay but this isn't because it's "not a closure" it's because it's closing over the same variable each time
[02:20:36] <bjs> also known as "late-binding closures" sometimes
[02:21:13] <beaky> yes but everyone expects real bonafide closures to be lexically scoped not global (which is why lisp lacked them too originally with dynamic scoping)
[02:21:22] <bjs> beaky: they are lexically scoped, they are not global
[02:21:26] <bjs> there is no dynamic scoping here
[02:21:50] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[02:21:53] <bjs> beaky: this is just that Python's `for` loop doesn't introduce a new scope, if it did then the closure would work
[02:21:56] <bjs> the way you expect
[02:22:07] <pyzozord> so I'd still say that lambda calculus, or rather the practical programming constructs used inspired by lambda calculus are mainstream
[02:23:13] <pyzozord> And lambda calculus itself is as mainstream as turing machine itself is mainstream. I'd consider those two equally mainstream, since they are just theoretical models of computation. One name is famously more popular than other but that's beside the point
[02:24:03] <bjs> beaky: in Python a for loop is just a loop that re-assigns to the same variable over and over,  so your closure is closing over that variable and all your closures are closed over the same variable so by the end of the loop they have the same closure over the same variable which has the last value. 
[02:24:16] *** Quits: reumeth (~reumeth@user/reumeth) (Ping timeout: 250 seconds)
[02:24:37] <bjs> beaky: i mean this may or may not be the same way that other languages do closures (lots do it this way),  and other languages may or may not introduce scopes on for loops (I guess most do?) and it's the interaction of those two things. The closures are very real and certianly not "dynamically scoped" or "global".
[02:24:37] *** Quits: Izem (~Izem@bras-base-london1483w-grc-38-65-95-41-242.dsl.bell.ca) (Ping timeout: 258 seconds)
[02:24:50] <beaky> oh alright i was mistaken about python not having closures then
[02:25:15] <bjs> pyzozord: yes Turing machines are much more common and well known and even to me are a more intuitive model of computation,  but I guess the point was that like how TMs are a mathematical model so is Lambda Calculus.
[02:25:34] *** Joins: Izem (~Izem@bras-base-london1483w-grc-38-65-95-41-242.dsl.bell.ca)
[02:25:41] <bjs> pyzozord: if you want to think that languages like C correspond to your "Turing machine" model of computation then languages like Haskell correspond to your Lambda calculus model of computation
[02:26:03] <Izem> c is a register machine I think
[02:26:13] <Izem> but turing machine covers that 
[02:26:40] <bjs> pyzozord: It'd probably be good to learn Haskell so that you at least get an understanding of why some people like it, why others don't, the situations it seems to perform well in etc and also just to broaden your views because Haskell as a language doesn't really work the way any other "mainstream" language does
[02:27:12] <beaky> yes you gotta learn haskell 
[02:27:18] <bjs> its execution model is completely different,  the way you write programs is completely different (if you're used to imperative languages),  the whole feel of the language is very different
[02:27:36] <pyzozord> bjs: yeah I guess that doesn't really get me far because I do consider both models of computation mainstream. In practice professional software developers know them as "imperative languages" and "functional languages". And both are very well knowon
[02:28:02] <bjs> pyzozord: sure, then Haskell belongs in the second camp as a Functional Programming language
[02:28:33] <pyzozord> so I guess aside of these theoretical foundations for computation, are there ideas in haskell that are mainstream or mostly not?
[02:28:35] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[02:28:49] <bjs> pyzozord: well typeclasses are becoming very common
[02:28:52] <bjs> laziness didn't catch on
[02:29:02] <beaky> the only non-mainstream idea is lazy evaluation by default
[02:29:07] <pyzozord> I already know that it uses a lambda calculus and HM type system both of which I consider somewhat mainstream or close to mainstream
[02:29:24] <beaky> all the other cool features of haskell got adopted by like scala for example
[02:29:32] *** Joins: blahboybaz (~blahboyba@67-5-101-245.spok.qwest.net)
[02:29:46] <bjs> pyzozord: most of the things people thought were good about Haskell have been borrowed by newer languages or retrofitted onto them
[02:30:34] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Client Quit)
[02:30:43] <pyzozord> I'm not familiar with scala. So I guess I need to change "mainstream" to "ideas used in c, c++, js, python", 
[02:30:44] <bjs> list comprehensions are now very common in languages
[02:31:06] <bjs> pattern matching was back in original ML and is one of the nicer features that has taken people a while to adopt
[02:31:27] <beaky> soon python too will have pattern matching 
[02:31:32] <beaky> see haskell is mainstream
[02:31:58] <bjs> pyzozord: so yeah, apart from laziness perhaps everything else appears somewhere else in some form or other
[02:32:00] <pyzozord> that lazy evaluation indeed sounds like a novel idea
[02:32:19] <bjs> pyzozord: well not novel, Haskell isn't the first language to do it
[02:32:27] <bjs> but it's one of the only ones still around that does
[02:33:10] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[02:33:11] <pyzozord> ok so it's really like a "functional typescript with lazy evaluation"
[02:33:14] <bjs> Laziness is one of those things that is definitely mixed.  Sometimes it's nice but it does complicate things and it's not always obvious it helps
[02:33:27] <bjs> pyzozord: no it's not like typescript, I said earlie you shouldn't try think like that it'll make it confusing
[02:34:09] <pyzozord> bjs: "functional language with type system similar to typescript and lazy evaluation"
[02:34:23] <bjs> pyzozord: I *really* think trying to compare it to typescript is just confusing
[02:35:19] <bjs> Just go learn Haskell and don't try thinking about comparing it to typescript
[02:35:31] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[02:35:32] <pyzozord> by typescript type system I just mean a type system where I can mix and match types, combine them, disect them and describe them in more detail than in c or c++
[02:36:16] <pyzozord> I'll take a look at this https://www.youtube.com/watch?v=LnX3B9oaKzw
[02:36:16] <bjs> pyzozord: yes they are both languages that have functions and generics and some inference going on but that's about where the similarities end,  because the underlying language for typescript is just so different to haskell
[02:36:17] <bayaz> Title: Functional Programming & Haskell - Computerphile 
[02:37:47] <Izem> yeah typescript looks like mypy
[02:37:58] <bjs> Izem: yeah
[02:38:16] *** Quits: death916 (UserNick@user/death916) (Ping timeout: 252 seconds)
[02:38:16] *** Joins: death916_ (~UserNick@c-67-182-183-147.hsd1.ca.comcast.net)
[02:38:16] *** death916_ is now known as death916
[02:38:18] <beaky> no more videos you gotta dive rite in and learn you a haskell for great good http://learnyouahaskell.com/
[02:38:19] <bayaz> Title: Learn You a Haskell for Great Good! 
[02:38:28] <bjs> Izem: really it's the other way around and that mypy looks like typescript :)
[02:38:41] <Izem> mypy is older isn't it?
[02:38:43] *** Quits: izak (~user@196.189.63.248) (Quit: rcirc on GNU Emacs 28.0.50)
[02:39:10] *** Quits: ixil (~ixil@82.197.178.137) (Remote host closed the connection)
[02:39:36] <bjs> Izem: i don't think so
[02:40:32] <beaky> i like mypy it is the most pythonic type system
[02:40:56] <Izem> I can't tell seems like they both started in 20121
[02:41:01] <Izem> 2012*
[02:41:11] <beaky> what would programming lanugages be like in 20121
[02:41:20] <beaky> by then the unix timestamp would have long overflowed
[02:41:38] *** Joins: zim (~zim@193.32.127.237)
[02:42:38] <Izem> hopefully we moved on from nix by then
[02:43:37] <bjs> Izem: MyPy didn't really take off until after https://www.python.org/dev/peps/pep-0484/ and even for a few years after this and the inclusion of the `typing` module mypy was a bit unstable.  At the time of that PEP mypy was mostly a toy/proof of concept thing and typescript was already becoming a "real" thing
[02:43:37] <bayaz> Title: PEP 484 -- Type Hints 
[02:44:02] <Izem> oh ok
[02:44:19] *** Quits: immibis (~hexchat@62.156.144.218) (Ping timeout: 252 seconds)
[02:44:44] <Izem> I read the dropbox story ... plt matters!
[02:45:54] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[02:46:06] <bjs> pyzozord: anyway yeah, don't worry about comparing languages too much.  The web is full of people (badly) trying to compare Haskell to other languages and trying to lay out where/when FP works and when it doesn't and it's much better just to try yourself and get an understanding
[02:46:31] <Izem> if anyone wondered why we have so much programming languages, they change how you solve problems  and the type of problems you can solve
[02:47:15] <bjs> we have lots of programming languages because no programming language is perfect and sometimes the easiest way to try a fix out is to just make a new language.  Almost nobody actually expected their little language to become popular
[02:47:48] <Izem> yep
[02:47:53] <spynxic> bjs: I don't think that's why we have lots
[02:48:08] <spynxic> That's more like a byproduct of having lots
[02:48:08] <Izem> it's best done to solve/express a domain
[02:48:10] *** Quits: rubion (~rubion@cpc124306-ayle4-2-0-cust188.15-2.cable.virginm.net) (Ping timeout: 252 seconds)
[02:48:17] <pyzozord> bjs: I've been programming for 15 years now
[02:48:33] <beaky> yes im glad we have more than just c and c++
[02:48:45] <bjs> pyzozord: sure but it sounds like you've been in a different domain,  it's really hard to explain Haskell to people who aren't functional programmers
[02:48:50] <Izem> though sometimes people seem to get really attached to a language
[02:48:53] <bjs> because it just works totally differently
[02:49:13] <Thedarkb> There are a lot of vapid C evangelists.
[02:49:23] <Izem> also languages compete cause of ecnomics to say the least, there's probably many other issues
[02:49:26] <Thedarkb> I like using C, but it's possible to recognise that it's a death trap.
[02:49:31] <Izem> lol
[02:49:32] <Izem> yeah
[02:49:46] <bjs> Thedarkb: the same is true for every language,  there are people who like it no matter what. And that's fine.
[02:49:48] <beaky> yes they're asleep now but when they wake up they'll be all about how haskell isnt useful in the real world and only c or c++ can do real-world programming or something 
[02:49:59] <Thedarkb> It's like my car, I like it, it uses very little fuel, but my carpets still get wet going through puddles.
[02:50:12] <bjs> Thedarkb: maybe you should close the door
[02:50:22] <Thedarkb> *close the floor
[02:50:33] *** Quits: zim (~zim@193.32.127.237) (Remote host closed the connection)
[02:50:52] <beaky> high mileage programming languages
[02:51:13] <Izem> seems to be why js is everywhere now
[02:51:19] <Izem> but it creates jobs I guess
[02:51:22] * Izem shrugs
[02:51:34] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 250 seconds)
[02:51:37] <pyzozord> bjs: anyway thanks for the advice
[02:51:45] *** Joins: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net)
[02:53:01] <spynxic> What are the js job titles
[02:53:14] <pulse> "circus coordinator"
[02:53:24] <X-Scale> hah
[02:54:26] <pyzozord> spynxic: frontend developer is one popular one, but there are backend developers as well
[02:54:29] *** Quits: palasso (~palasso@user/palasso) (Quit: I am not a quitter!)
[02:54:33] <pyzozord> can make lots of money too
[02:54:35] <bjs> pyzozord: sure,  also given the video you linked earlier it reminds me that there's also Erlang which is a nice little very niche functional language
[02:55:35] <pyzozord> I was hoping that video would have some haskell demos, unfortunatelly it's just interview with one of the creators, no demos
[02:56:21] <bjs> pyzozord: what kind of demo are you looking for?
[02:56:27] <Izem> lots of academic work has been done in compilers, now it's time for the engineering bit :P
[02:57:07] <pyzozord> bjs: just something short that can quickly give me a feel of what is the main "deal" of the language etc
[02:57:16] <beaky> yes the dream would be for something as screaming-fast as mlton but in haskell
[02:57:20] <bjs> pyzozord: https://www.youtube.com/watch?v=dDtZLm7HIJs&ab_channel=Computerphile is a video I linked the other day which has a little bit of classic FP: parser combinators, in Haskell.
[02:57:21] <bayaz> Title: Functional Parsing - Computerphile 
[02:57:23] <Izem> which for systems languages is realistically a modified c compiler
[02:58:08] <bjs> pyzozord: but the canonical book http://learnyouahaskell.com/chapters is always a good place to go
[02:58:08] <bayaz> Title: Chapters - Learn You a Haskell for Great Good! 
[02:58:47] <Izem> pyzozord the short guide for haskell is 20 pages or so :P
[02:58:55] <pyzozord> bjs: I saw this video few times. Very cool video. I'm generally familiar with functional programing, at least on the superficial level. I know what currying means, what are higher order functions and I have a vague idea of what box is in monads, and what does maybe monad do
[02:59:10] *** Quits: jamea (~jamea@189.237.57.59) (Ping timeout: 252 seconds)
[02:59:19] <pyzozord> bjs: but there wasn't that much explonation of haskell in this video
[02:59:21] <bjs> pyzozord: I think it's a good idea to delete "monad" from your head :P
[02:59:30] <bjs> pyzozord: no the book I linked does explain (at least, it has lots of examples)
[02:59:34] <spynxic> Is security a major concern for professional js developers
[02:59:57] <Izem> beaky: how come none of these category theory guys want to make a proper backend for functional languages? :P
[03:00:22] <Izem> there's a few nice SSA ones though
[03:00:48] <pyzozord> bjs: why, mondas are not in vogue anymore?
[03:00:53] <Izem> spynxic: I would think so, lot's of network stuff?
[03:01:25] <bjs> pyzozord: I think that word has caused far more confusion amongst new Haskeller's than it ever had the right to
[03:01:47] <beaky> Izem: yes the true backend for category theory is homotopy type theory which is what all the cool kids in the ncatlab are checking out and they're still working on with very recent implementations like cubical agda and cooltt
[03:01:48] <spynxic> Izem: like load balancing?
[03:02:17] <Izem> no, like cross site scripting and running un trusted code
[03:02:39] <Izem> which capabilites might help now that I think about it, imagine being able to delegate accross a network
[03:03:00] <Izem> I doubt there is a load balancer done in js
[03:03:47] <pyzozord> oh yeah I've spent like 10h learning about implmenting moands from closures. I'm aware it's not really part of any language, it's more like a library wrapper for values plus style of programming. Even implemented few monads in javascript few years ago. Unless Haskell has built in monadic types I wouldn't be concerned about it at all. But I was listing out all functional ideas I am familiar with
[03:03:53] *** Joins: byanka (~byanka@78.137.43.40)
[03:03:53] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Ping timeout: 244 seconds)
[03:03:55] <bjs> pyzozord: and in general I think the choice of naming of typeclasses is not helpful to programmers (it's great for academics/mathematicians sure). Rust tries a little harder with picking names for traits that make more sense
[03:04:21] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[03:04:25] <Izem> monad in haskell is pretty computer sciency isn't it?
[03:04:32] <Izem> still no clue what it is
[03:04:33] <bjs> Izem: yes and no
[03:04:49] <Izem> clean made more sense with effects
[03:05:03] <Izem> but clean is not popular :/
[03:05:13] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[03:05:45] *** Joins: soapsudsxx (~soapsudsx@141.193.188.138)
[03:05:58] <beaky> yes there are way too many monad tutorials someone made another one in frustration http://www.jerf.org/iri/post/2958
[03:06:40] <pulse> something something endofunctor
[03:06:59] <pyzozord> I learned what I know about monads from here I really liked it https://egghead.io/lessons/javascript-you-ve-been-using-monads
[03:07:00] <bayaz> Title: You've been using Monads 
[03:07:04] <pyzozord> haven't finished the course though
[03:07:55] <pyzozord> sometimes theoreticians have a whole lot of theory built up, but it all amounts to not that much action
[03:08:00] <pyzozord> which btw is very elegant
[03:08:08] <Izem> js and monads?
[03:08:16] <pyzozord> but in practice, if you ignore the theory, it's not that big a deal
[03:08:23] <Izem> seems risky
[03:08:47] <pyzozord> (because theoreticians have effortfully sculpted the thing to be beautiful and simple)
[03:08:50] <bjs> pyzozord: in practice people do understand the theory,  it takes a long time for theory to propagate its way down to the practical person
[03:09:14] <bjs> pyzozord: if you went back 40 years and asked programmers about parsers and context-free languages they'd look at you blankly.  Today they are standard parts of any parser writers jargon
[03:09:28] <Izem> that's the point of a prorgamming language, it should make that easy to use
[03:09:36] <Izem> ala abstraction
[03:10:30] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[03:10:34] *** Quits: varaindemian (uid73404@id-73404.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[03:10:41] <pyzozord> My goal is not to invent new theoretical devices, just to be a practician who can identify and understand theory that I can find useful for my practical goals
[03:10:42] <bjs> pyzozord: a lot of work was condensed into the idea of a context-free grammar so that it was concise and simple and exactly what was needed and then it took time for people to understand how to apply it, and now today the idea of your languages having such grammars is commonplace.  It used to be the same with these funky linear type systems,  but now we have Rust
[03:11:21] <bjs> There's always a lag from the idea until it's condensed and figured out enough to actually put to use.  It's very rare for someone to come up with new theory _and_ figure out how to condense it to actually use it all at once
[03:11:26] <bjs> But I'm sure it happens
[03:11:27] <Izem> meh cfg seems to have been very common
[03:12:00] <Izem> then again the pool of programmers was smaller back then
[03:12:21] <spynxic> What specifically does a type attribute bring to the development experience
[03:12:56] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Read error: Connection reset by peer)
[03:13:09] <Izem> documentation, and a garuntee that operations on your data are correct
[03:14:02] <spynxic> Is there a name for a collection of types
[03:14:09] <bjs> spynxic: a kind
[03:14:12] *** Quits: death916 (~UserNick@c-67-182-183-147.hsd1.ca.comcast.net) (Quit: Going offline, see ya! (www.adiirc.com))
[03:14:13] <pyzozord> I think that the best theoretician is one who knows enough practice and the best practician is one who knows enough theory. My goal is to be the best practician
[03:15:17] <pyzozord> I don't need theoretical devices that aren't fully baked or only serve for internal theoretical reasons to biuld other theoretical devices
[03:15:31] *** Quits: nekodesu (~bit@user/nekobit) (Quit: uninstall gentoo)
[03:15:40] <Izem> no need to put yourself in a box lol
[03:16:02] <bjs> pyzozord: I don't think theoretical ideas fall into nice neat categories like that
[03:16:45] <spynxic> bjs: can a category be a kind
[03:16:53] <pyzozord> Menaing I don't need that much deep lore of the theoretical computer science. Or rather I don't need the more niuanced, less important theoretical ideas that serve mostly for theoreticians. I do want to grok the big ideas. The lambda calculuses, the turing machines and the chomsky's grammars. Those seem like big important ideas.
[03:17:02] <pyzozord> (And many others I don't know about)
[03:17:03] <bjs> spynxic: that sounds like a category error :)   i'm not sure what you're asking
[03:17:19] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.2)
[03:17:33] <Izem> there's usally lectures like great ideas in computer science
[03:17:35] <spynxic> Not really certain what categories consist of
[03:17:38] <Izem> or said sub topic
[03:17:48] <bjs> spynxic: oh yes I guess they could be categories, you have to be careful with types of types because you get sets of sets vibes
[03:18:03] <bjs> spynxic: a category like a category theoretic category?  they can consist of anything
[03:18:16] <spynxic> Pretty sure types were created to solve the sets of sets thing
[03:18:23] *** Joins: rubion (~rubion@cpc124306-ayle4-2-0-cust188.15-2.cable.virginm.net)
[03:18:28] <Izem> pyzozord: I think you just mean you are not doing active research in some field
[03:18:36] <spynxic> Or perhaps that was categories
[03:18:38] <bjs> spynxic: yes, types are like a construtivists set theory
[03:18:46] *** Quits: elnavigator (~elnavigat@105.196.100.217) (Ping timeout: 268 seconds)
[03:18:50] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[03:19:17] <pyzozord> Izem: yes no active research, well maybe a bit if I need something specifc that is hasn't been researched enough
[03:19:28] <pyzozord> but I doubt I'll find many of such cases in my life
[03:19:43] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Quit: Leaving)
[03:19:59] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Read error: Connection reset by peer)
[03:20:10] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Ping timeout: 240 seconds)
[03:20:58] <spynxic> What are the arrows in category theory called
[03:21:10] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[03:21:20] <nitrix> morphisms.
[03:21:24] <bjs> spynxic: you mean, what do category theorists call them?  they say morphism
[03:22:04] <pyzozord> I mean for example John Carmack when created the first Doom game, needed to invent a spatial index to make the game run fast enough. He invented Binary Space Partion trees. That's not really that big an invention, he took existing ideas of binary trees, something else about 2d data, combined it and applied it to the game
[03:22:05] *** Joins: death916 (~death916@c-67-182-183-147.hsd1.ca.comcast.net)
[03:22:05] *** Quits: death916 (~death916@c-67-182-183-147.hsd1.ca.comcast.net) (Changing host)
[03:22:05] *** Joins: death916 (~death916@user/death916)
[03:22:14] <spynxic> Those are like Number.toString()
[03:22:29] <bjs> spynxic: maybe I'm not following
[03:22:32] <spynxic> Type casting
[03:22:37] <nitrix> Hence why you have monomorphic, polymorphic, endomorphic, epimorphisms, automorphic, etc.
[03:23:01] <nitrix> Isomorphic, here's another :P
[03:23:53] <spynxic> nitrix: those are each a unique configuration of arrows?
[03:24:20] <nitrix> Different patterns, yeah. Endomorphisms are morphisms that starts and end at the same object.
[03:24:49] <spynxic> Sounds like what automorphic is
[03:25:06] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Read error: Connection reset by peer)
[03:25:28] <vdamewood> Hi, people etc.
[03:25:31] <nitrix> Basically, the identity function, id :: forall a. a -> a, if your category were the types of a language.
[03:25:46] * vdamewood extracts nitrix's endoskeleton.
[03:25:54] <edgar-rft> vdamewood: hi etc!
[03:26:23] * nitrix crumbles to a puddle of organic constituents, mostly water.
[03:26:40] <vdamewood> An ugly bag of mostly water?
[03:27:23] * vdamewood wonders how obscure that Star Trek reference is.
[03:27:36] <arahael> vdamewood: I thought it was a Douglas Adams reference?
[03:27:39] <edgar-rft> do we feel like a water vessel today? :-)
[03:28:22] <arahael> Hmm, no, it seems to be a Star Trek reference indeed.
[03:28:23] <nitrix> Reject humanity, return to primordial soup.
[03:28:39] <Izem> John Carmck probably knows a lot of theory btw
[03:28:44] *** Joins: elnavigator (~elnavigat@105.196.100.217)
[03:28:44] <Izem> yes monke
[03:29:20] * vdamewood adds salt and pepper to his primordial soup.
[03:29:52] <spynxic> Izem: ever watch cs presentations?
[03:30:16] <arahael> vdamewood: Dont' forget the best white powder: MSG.
[03:30:17] <edgar-rft> let's try to create humans by making a cooking show with primordial soup
[03:30:22] *** Quits: entuland (~entuland@user/entuland) (Quit: Leaving)
[03:30:29] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[03:30:32] <Izem> spynxic: yeah all the time
[03:30:34] <vdamewood> arahael: The spice must flow!
[03:31:04] *** Quits: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net) (Ping timeout: 252 seconds)
[03:31:05] <spynxic> Izem: ones where they use funky terms and board syntax?
[03:31:28] <Izem> board?
[03:31:35] <spynxic> White board
[03:31:39] <vdamewood> edgar-rft: That's taking "To Serve Man" in a new direction.
[03:31:43] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Read error: Connection reset by peer)
[03:31:54] *** Joins: Zeturic (~Orimendix@50-25-46-156.krmtcmta02.res.dyn.suddenlink.net)
[03:31:56] <Izem> I've seen some ones with funky terms, not sure I got anything though ...
[03:32:10] <pyzozord> Izem: yes, but he is fundamentally an engineer not a scientist
[03:32:23] <pyzozord> anyway that's the kind of balance I'm aiming for too
[03:32:48] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[03:32:59] <Izem> John Carmack reminds me of Ken Thompson
[03:33:16] *** Quits: elnavigator (~elnavigat@105.196.100.217) (Ping timeout: 252 seconds)
[03:33:18] <Izem> yeah how you define it is nuanced I guess
[03:33:29] <Izem> I'm cool being a computer scientist though :P
[03:33:33] <edgar-rft> vdamewood: humans were created while god was bored and watched tv
[03:33:47] <Izem> usually not many people are known as computer scientists though
[03:33:55] <spynxic> Izem: watch presentations on thesis work?
[03:33:55] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Read error: Connection reset by peer)
[03:34:12] <Izem> yes
[03:34:21] <vdamewood> edgar-rft: Seems more to me God was bored and invented the TV.
[03:34:41] <edgar-rft> god was created by television makers
[03:34:52] <pyzozord> I think for me fundamentally, solving puzzles is not the where I enjoy the most. I enjoy when I solve them, but the struggle is really unpleasent for me
[03:34:58] <death916> tv maklers were around in the roman times?
[03:35:03] <pyzozord> I enjoy the creative act much more
[03:35:24] <vdamewood> God was around way before Roman times.
[03:35:24] <Izem> I watched this https://youtu.be/tIBVQDF2YCw yesterday and now I (finally) know how to read a flame graph
[03:35:26] <bayaz> Title: Everything You Always Wanted to Know About Hello, World 
[03:35:35] <pyzozord> s/where I enjoy the most/where I enjoy myself the mots/
[03:35:44] <spynxic> pyzozord: familiar with the collapse of a wave function?
[03:36:04] <pyzozord> spynxic: I have heard the name, but not much beyon that
[03:36:25] <spynxic> That's what going from a concept to an implementation feels like
[03:36:32] <pyzozord> spynxic: a sigma activation function comes to mind from the context of neural networks, but I think they are unrelated
[03:36:55] <edgar-rft> death916: they were, but they still didn't know what to do with the shit they created
[03:37:08] <spynxic> A vast realm of possibility to a rigid construction
[03:37:13] <pyzozord> anyway sounds like math, not programming so I don't feel bad for not knowing it (yet) :P
[03:37:17] <death916> man caeser was watchin gladiators on espn
[03:37:42] <spynxic> pyzozord: closer to cs than math because it is physics
[03:38:13] <pyzozord> well for me it could be scientology even at this point :P
[03:38:13] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[03:38:27] <edgar-rft> at roman times movies still were streamed via aquaeducts
[03:38:44] <spynxic> https://youtu.be/v6fAcigk3Ys
[03:38:45] <bayaz> Title: The Observer Effect in Quantum Mechanics 
[03:39:37] *** Joins: Crescendo (~Crescendo@user/crescendo)
[03:39:47] <pyzozord> oh yeah I think heard about this, but generally I have 0 interest in physics
[03:39:55] <pyzozord> and math only instrumentally
[03:40:02] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[03:40:27] * edgar-rft uses instruments like hammers on math
[03:40:33] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[03:40:48] <spynxic> pyzozord: I use the notion analogously though. Comparing it to a process in creativity
[03:40:57] <pyzozord> I guess can serve as a good social status signaler when you mingle in academia but beyond that I don't see any value in it, and I don't mingle in academia so no need to signal that status either
[03:41:17] <Izem> well semiconductors :P
[03:41:59] <Izem> not sure about quatum mechanics tho
[03:42:04] <edgar-rft> what do you want with shit that conucts only half?
[03:42:17] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Read error: Connection reset by peer)
[03:42:24] <edgar-rft> conucts? conducts of course :-)
[03:42:28] <Izem> turn it into a gate
[03:42:33] <spynxic> pyzozord: the analogy basically highlights how commitments can make or break a project
[03:42:54] <pyzozord> Izem: any value for me, not saying it doesn't have _any_ value. I'd say physics is a bit valuable in general. Only a bit.
[03:43:09] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[03:43:18] <Izem> oh I just assumed you also wanted to go down the rabbit hole
[03:43:20] *** Joins: flynn (~mcbloch@user/flynn)
[03:43:22] *** Joins: Drek45 (~jrept371@102.129.153.207)
[03:43:36] * edgar-rft turns a semiconductor into a watergate and uses it on an aquaeduct
[03:43:41] <pyzozord> nope, only in specific areas of interest
[03:43:49] <spynxic> pyzozord: understanding the collapse of a wavefunction introduces you to a norm that you weren't familiar with
[03:44:07] <pyzozord> namly what helps me be more independent from computers and what helps me make video games
[03:44:20] <pyzozord> both implies deep understanding of computers :P
[03:45:16] <pyzozord> don't have motivation to understand entire world, just computers
[03:45:35] <spynxic> Computing machines?
[03:45:59] <pyzozord> yes but not down to the physical level. Electronics is as far as I want to go
[03:46:05] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[03:46:20] *** Joins: Crescendo (~Crescendo@user/crescendo)
[03:46:23] <pyzozord> Essentially I want to go as far as I can learn to make it myself
[03:46:34] <edgar-rft> nobody understands computers, that's why they are so emotionally disturbed
[03:47:07] <spynxic> Ever consider the programming of traffic lights as a kind of science?
[03:47:35] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[03:47:40] *** Joins: jamea (~jamea@177.239.85.103)
[03:47:53] <pyzozord> lots of pre and post grads and even more so phd studens seem to have that push to oneup each other, it's a for of social status game. I'm not in that game
[03:47:53] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[03:48:15] <edgar-rft> spynxic: if you get it to work you can feel enlightened
[03:48:46] <spynxic> edgar-rft: always do
[03:48:46] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Read error: Connection reset by peer)
[03:49:19] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[03:49:25] <spynxic> To run without error is a feat, then to run correctly is nearly unheard of
[03:49:36] *** Joins: JanC (~janc@user/janc)
[03:49:38] *** Quits: rubion (~rubion@cpc124306-ayle4-2-0-cust188.15-2.cable.virginm.net) (Ping timeout: 250 seconds)
[03:49:44] <pyzozord> I'd frankly read a book on history of western philosophy than a physics book.
[03:49:53] <edgar-rft> spynxic: you already solved the problems of traffic light science?
[03:49:53] <pyzozord> Speakingof I should actually read that book :|
[03:50:01] <spynxic> pyzozord: same thing isn't it
[03:50:14] <pyzozord> spynxic: less math
[03:50:25] <spynxic> pyzozord: science used to be called philosophy
[03:50:31] <pyzozord> spynxic: don't be too smart :P
[03:50:41] <pyzozord> you know what I mean
[03:51:14] <spynxic> They were asking a lot of the precursor questions to today's studies
[03:51:17] <Izem> yeah I was gonna say :P
[03:51:37] <Izem> western studies = science art religon?
[03:51:41] <spynxic> edgar-rft: glad you ask. I think I have
[03:51:45] <Izem> from the west
[03:52:13] <pyzozord> oh yeah some history of art would be cool to learn too
[03:52:18] <Izem> seems it used to be one thing sorta
[03:52:24] <pyzozord> some psychology as well
[03:52:28] <Izem> that's when the made univerisities?
[03:52:31] <pyzozord> certainly not freaking quantum physics
[03:52:36] <Izem> and folks would learn 18 languages? lol
[03:53:23] *** Joins: nekodesu (~bit@user/nekobit)
[03:53:31] <spynxic> edgar-rft: traffic lights only like drivers going at a consistent speed at or below the stated speed limit. They especially favor those going below the speed limit but are not dropping speed
[03:54:14] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[03:54:20] <spynxic> And they find braking and acceleration unfavorable, meaning they change to red if the other side of the street is clear
[03:55:52] *** Quits: jaysicks (~jaysicks@212-40-83-106.pool.digikabel.hu) (Remote host closed the connection)
[03:56:51] *** Joins: zaher_ (~zaher@37.48.153.52)
[03:57:30] <edgar-rft> spynxic: it's time to write a doctoral thesis about that
[03:58:20] *** Quits: V (~v@anomalous.eu) (Ping timeout: 256 seconds)
[03:58:44] *** Quits: zaher (~zaher@37.48.146.210) (Ping timeout: 250 seconds)
[03:58:58] <spynxic> Need a dash cam to get some empirical evidence
[03:59:07] * spynxic applies for funding
[04:00:25] <spynxic> There's likely lots of footage of drivers passing thru lights online
[04:00:40] *** Quits: Izem (~Izem@bras-base-london1483w-grc-38-65-95-41-242.dsl.bell.ca) (Ping timeout: 240 seconds)
[04:01:30] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[04:01:46] *** Quits: jack__d (~jack__d@pool-98-109-145-13.nwrknj.fios.verizon.net) (Ping timeout: 250 seconds)
[04:03:09] <spynxic> pyzozord: https://youtu.be/iwpR5-OC-Z0
[04:03:10] <bayaz> Title: Women in the History of Computer Science, Panel Discussion 
[04:03:46] *** Joins: jack__d (~jack__d@pool-98-109-145-13.nwrknj.fios.verizon.net)
[04:04:01] <spynxic> Note the rank of the panel
[04:07:07] *** Joins: audiofreeze (~audio@2603-8081-1801-3bb5-5f9b-6e20-c5b9-e309.res6.spectrum.com)
[04:10:10] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[04:11:10] *** Quits: audiocat (~audio@2603-8081-1801-3bb5-def8-5e99-ae61-1013.res6.spectrum.com) (Ping timeout: 240 seconds)
[04:11:16] *** Joins: euouae (~euouae@user/euouae)
[04:12:49] *** Joins: dre (~dre@2001:8003:c932:c301:64b7:95dc:bc24:e941)
[04:12:52] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[04:14:44] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:14:44] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[04:15:00] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:16:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[04:17:13] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[04:17:18] *** Joins: riff_IRC (~riff-IRC@user/riff-irc)
[04:19:21] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 248 seconds)
[04:19:51] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:20:34] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Ping timeout: 252 seconds)
[04:21:51] <beaky> hello what is the best programming language
[04:21:55] *** Quits: martums (~martums@user/martums) (Read error: Connection reset by peer)
[04:22:18] *** Joins: martums (~martums@user/martums)
[04:23:28] <webnet4> depends who's asking
[04:25:03] <mawk> hello beaky it is C
[04:25:11] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Quit: Leaving)
[04:26:01] <pavonia> It's TeX obviously
[04:26:24] <mawk> texmex
[04:28:11] *** Quits: Samian (~Sami@174.27.107.153) (Read error: Connection reset by peer)
[04:28:19] <spynxic> beaky: classified
[04:28:32] *** Quits: Akuli (~Akuli@87-94-109-4.bb.dnainternet.fi) (Quit: Leaving)
[04:29:00] <edgar-rft> the best programming language is where you never need to write even a single line of code
[04:29:18] <[itchyjunk]> english
[04:29:52] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[04:29:57] <edgar-rft> english has words like "bug"
[04:31:21] <furrykef> The best programming language is Lisp, according to everyone who has used it for at least 50 years
[04:31:43] <furrykef> (If you have not used Lisp for at least 50 years, you are not qualified to have an opinion)
[04:32:35] <arahael> Obligatory XKCD: https://xkcd.com/224/
[04:32:35] <[itchyjunk]> If lisp is so great, why would they teach Java in unis?
[04:32:36] <bayaz> Title: Lisp 
[04:32:39] <[itchyjunk]> Java must be the best
[04:32:43] <euouae> I've used Lisp and Haskell is better
[04:32:44] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:32:44] <mawk> lol [itchyjunk] 
[04:32:55] *** Joins: Thedarkb1 (~Thedarkb@185.69.144.255)
[04:33:24] <euouae> Probably Haskell is the best language, the only issue is that it's very hard
[04:33:50] <arahael> Once you get over the learning curve and that it's just so different, I find it's pretty easy.
[04:33:59] <[itchyjunk]> haskell is very hard
[04:34:03] <edgar-rft> Lisp is full of error -> http://www.lispworks.com/documentation/HyperSpec/Body/f_error.htm
[04:34:03] <[itchyjunk]> i tried once and gave up twice
[04:34:04] <bayaz> Title: CLHS: Function ERROR 
[04:34:05] <arahael> Unless you're dealing with code written by Very Smart People.
[04:34:40] <[itchyjunk]> I'd still like to learn haskell a bit more
[04:34:52] <[itchyjunk]> haskell, lisp, pythong, C seems worth while
[04:35:06] <euouae> C is not worthwhile
[04:35:10] *** Quits: Thedarkb (~Thedarkb@185.69.145.19) (Ping timeout: 240 seconds)
[04:35:11] <euouae> Rust is worthwhile
[04:35:20] <mawk> euouae our prophet
[04:35:36] <euouae> the only reason to learn C is to know what the code you're replacing with Rust code does
[04:35:48] <webnet4> lol
[04:35:57] <[itchyjunk]> What is rust compiler written in?
[04:36:07] <mawk> C obviously
[04:36:08] <webnet4> visual basic
[04:36:23] <euouae> [itchyjunk]: do you know anything about compilers?
[04:36:25] <edgar-rft> GWBASIC is better
[04:36:30] *** Quits: riff_IRC (~riff-IRC@user/riff-irc) (Read error: Connection reset by peer)
[04:36:33] <[itchyjunk]> I know everything there is to know about compiler
[04:36:40] <euouae> lol
[04:37:37] <euouae> The argument is not good and I'm not getting into it, that's all I'll say
[04:37:56] *** Joins: riff_IRC (~riff-IRC@user/riff-irc)
[04:38:07] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[04:38:14] <edgar-rft> my data is bigger than yours
[04:38:37] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:38:41] <mawk> no it's not
[04:38:44] <mawk> or send proof
[04:39:59] <vdamewood> mawk: Are you soliciting pics of edgar-rft's huge data?
[04:40:04] <euouae> [itchyjunk]: I don't know much about Haskell either... did you have any projects in mind you wanted to try? Or modules you wanted to learn?
[04:40:11] <mawk> yes vdamewood exactly
[04:40:27] <vdamewood> Okay, just making sure they're solicited.
[04:40:49] <vdamewood> We don't want people sending unsolicited data picks.
[04:41:13] <webnet4> who was asking about capabilities the other day? heres a new one hot of f the presses https://news.ycombinator.com/item?id=28265459
[04:41:24] <webnet4> capability failures
[04:41:43] <mawk> pata d... no it's not a spoonerism
[04:42:07] <euouae> webnet4, justifies the price tag on that Razer mouse
[04:43:39] <webnet4> getting the malware signed by microsoft probably adds a few bucks to the price tag indeed
[04:44:41] <euouae> hahah exactly
[04:46:02] <vdamewood> Hmm... on the one hand, it would be wise to prohibit file dialogs in drivers, on the other hand, that's how things like PDF conveters work.
[04:47:10] *** Quits: Powerhouse6666 (~Powerhous@2604:3d08:5b7f:e136:95b1:bac0:7698:51de) (Ping timeout: 240 seconds)
[04:47:32] <vdamewood> Though, I'm guessing this isn't even to the point of using the driver, just the installer.
[04:48:08] *** Quits: gitgood (~gitgood@80-44-12-89.dynamic.dsl.as9105.com) (Ping timeout: 250 seconds)
[04:48:30] *** Quits: Zeturic (~Orimendix@50-25-46-156.krmtcmta02.res.dyn.suddenlink.net) (Quit: Leaving)
[04:51:15] <[itchyjunk]> euouae, no i wanted to learn haskell in general. i wanna use it to do group theory stuff if posisble
[04:51:29] <[itchyjunk]> but i think that would be more of a Coq thing
[04:51:33] <[itchyjunk]> but idk coq either
[04:51:44] <[itchyjunk]> but i hear lot of proof assistance is written in FP
[04:52:10] <mawk> yes do cow
[04:52:12] <mawk> coq*
[04:52:14] <mawk> ask beaky about it
[04:52:16] <mawk> coq means cock
[04:52:17] <mawk> the animal
[04:52:22] <mawk> the male of the chicken
[04:52:32] <[itchyjunk]> coq means coq probably
[04:52:38] <[itchyjunk]> but i wanted to use haskell for some mathy stuff
[04:52:44] <[itchyjunk]> learn about category theory using haskell
[04:52:49] <[itchyjunk]> learn about Hask category
[04:52:50] <mawk> no coq means cock
[04:52:51] <mawk> in french
[04:52:56] <[itchyjunk]> oh really?
[04:52:59] <mawk> yes
[04:53:01] <[itchyjunk]> the programm is called cock?
[04:53:08] <mawk> yes but it means the animal in french
[04:53:11] <mawk> not the body part
[04:53:19] <mawk> rooster is a synonym I think
[04:53:22] <[itchyjunk]> what's the difference?
[04:53:26] <[itchyjunk]> doesn't cock mean both?
[04:53:29] <[itchyjunk]> oh i see what you mean
[04:53:32] <mawk> what's the difference between a penis and a rooster?
[04:53:35] <[itchyjunk]> coq is the french word for animal
[04:53:41] <mawk> coq is the french word for rooster
[04:53:46] <[itchyjunk]> but in french cock and cock have different word
[04:53:51] <mawk> yes
[04:53:54] <euouae> French cock is different
[04:54:22] <euouae> We now all understand
[04:54:23] <vdamewood> I want to make a web framework for Coq and call it Vin.
[04:54:32] <mawk> the cock is the emblem animal of france
[04:54:51] <[itchyjunk]> well no time to learn shit
[04:54:52] <mawk> tasty vdamewood 
[04:54:56] <euouae> Great name, but coq is a bad choice for a name
[04:55:02] <[itchyjunk]> first, i hope i can re-register in the class i need this semester
[04:55:25] <vdamewood> Then I could call the whole package Coq au Vin.
[04:55:39] <mawk> I think I've never eaten one
[04:56:06] <vdamewood> I don't consume alcohol, even in cooking, so I've never had the dish.
[04:56:23] * euouae offers a high five to vdamewood
[04:56:38] <mawk> all ethanol disappears when you cook it
[04:56:43] <euouae> I'm also a not-consumer of alcohol
[04:56:46] <mawk> or you can buy non-alcoholic wine
[04:56:59] <euouae> mawk, maybe it does, but not the taste. No need to be reminded of the horrors
[04:57:15] <mawk> it's basically grape juice without the ethanol
[04:57:31] <vdamewood> mawk: I've read research that shows that 3 hours of high heat left a significant amount of alcohol left in the dish.
[04:57:40] <mawk> above 5% vdamewood ?
[04:57:49] <euouae> 5% gets you drunk, no need for the horrors
[04:57:51] <mawk> for wine
[04:57:56] <euouae> alcohol = opium to me
[04:58:06] <mawk> and what is opium to you
[04:58:07] <euouae> enough with the death campaigns
[04:58:16] <vdamewood> Well, for me greater than 0% is significant.
[04:58:52] <euouae> Maybe we should ask Carlsberg stockholders of what they think about our health
[04:59:46] <mawk> what about the non-alcoholic wine vdamewood 
[04:59:51] <mawk> I've heard it keeps the same taste, without the ethanol
[05:00:02] <mawk> but you have to be careful because the law allows to say "non-alcoholic" if there's less than 5% or something
[05:00:08] *** Joins: Caffeinated (~Caffeine@user/alexdelarge)
[05:00:13] <mawk> depending on the process they use it's either really non-alcoholic, or there's a bit lef
[05:00:14] <mawk> t
[05:00:38] <vdamewood> Yeah, given the risks, I'll just avoid it entirely.
[05:02:18] *** Joins: allegorical (~guest@2607:fea8:33e0:65c:c107:d305:9a0:a4a2)
[05:03:01] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2)
[05:06:46] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[05:07:31] <spynxic> Best way to lay out an entire development project in a notebook?
[05:08:46] <euouae> physical notebook?
[05:09:01] <spynxic> Ya, with real pencil
[05:09:30] <euouae> spynxic: Use zettelkasten
[05:09:46] <euouae> I'm not saying it's the best, but it might help you
[05:09:50] <spynxic> Sounds like exactly what I'm looking for
[05:11:14] <rxndxs> if I assume that the most compute-intesive part of compiling code is optimizations, would I be correct ?
[05:11:41] <rxndxs> I'm wondering what's worth working on optimizing for having a performant compiler
[05:15:13] *** Joins: Cyp_ (~cyp@192038133070.mbb.telenor.dk)
[05:17:53] *** Quits: Cyp (~cyp@192038130244.mbb.telenor.dk) (Ping timeout: 258 seconds)
[05:18:44] <spynxic> euouae: https://youtu.be/Q1hTMOA7TYU
[05:18:45] <bayaz> Title: My Notes on Niklas Luhmann's 1981 Zettelkasten article. 
[05:19:29] <euouae> spynxic, nice 
[05:19:32] *** Quits: rxndxs (~ed@201.160.157.102.cable.dyn.cableonline.com.mx) (Quit: leaving)
[05:22:57] *** Quits: em (~em@li247-180.members.linode.com) (Changing host)
[05:22:57] *** Joins: em (~em@user/emnode)
[05:23:43] *** Joins: xa0s (~xa0s@mab.sdf.org)
[05:23:51] *** Quits: webnet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[05:24:08] *** Joins: webnet4 (~0x100@32.211.211.39)
[05:24:10] *** Quits: linext_ (~linext@pool-108-53-128-199.nwrknj.fios.verizon.net) (Read error: Connection reset by peer)
[05:25:03] *** Parts: euouae (~euouae@user/euouae) ()
[05:26:20] *** Joins: linext (~linext@pool-108-53-128-199.nwrknj.fios.verizon.net)
[05:29:48] <karstensrage> spynxic, is that you?
[05:29:52] *** Quits: znedw (~znedw@home.znedw.com) (Ping timeout: 252 seconds)
[05:30:09] *** Joins: znedw (~znedw@home.znedw.com)
[05:30:16] *** Joins: Izem (~Izem@bras-base-london1483w-grc-38-65-95-41-242.dsl.bell.ca)
[05:30:19] *** Joins: rxndxs (~ed@201.160.157.102.cable.dyn.cableonline.com.mx)
[05:30:29] <Lyn> which was the better one, virtualbox or vmware?
[05:30:40] <Izem> vmware
[05:30:45] <[o> I love virtualbox
[05:30:47] <spynxic> karstensrage: no. I'm no nowhere near that established 
[05:30:49] <[o> easier to set up
[05:30:51] <webnet4> which one publishes their source code
[05:30:51] <[o> works great
[05:30:57] <Izem> virtualbox
[05:30:57] <spynxic> Guy has a iMac in the background
[05:30:57] <[o> no one cares, webnet4'
[05:31:05] <webnet4> many do care [o
[05:31:08] <[o> nah
[05:31:08] <Izem> great for linux guests
[05:31:09] <webnet4> like me for instance
[05:31:12] <[o> nobody looks at it
[05:31:20] <[o> this is just a dumb reasoning
[05:31:21] <webnet4> you don't maybe
[05:31:37] <[o> no one cares :D
[05:31:47] <[o> they never cared
[05:31:48] <webnet4> no one knows
[05:31:59] <[o> Lyn: virtualbox ftw
[05:32:07] <spynxic> karstensrage: 2 iMacs*
[05:32:26] <spynxic> Probably recording on the third
[05:32:30] <webnet4> if its just some crap for a job then yeah no one cares maybe
[05:32:40] <webnet4> they all love proprietary software
[05:34:07] <spynxic> A library and plants in the window seal
[05:34:15] *** Joins: cuppajoeman (~cuppajoem@142.134.90.142)
[05:34:52] <cuppajoeman> Hey I want to make a command line script that takes arguements and a help message, is there a place I can find a template for such a thing?
[05:35:16] <[itchyjunk]> like a bash script?
[05:35:38] <[itchyjunk]> it print out help message and takes in arg?
[05:35:52] <[itchyjunk]> doesn't perl have a thing where you can put in help stuff as comments?
[05:35:55] <[itchyjunk]> or was that bash?
[05:35:59] <[itchyjunk]> or am i misremembering
[05:36:17] <[itchyjunk]> i thought there was a language where you could put in commends and when you ran it you could somehow pull that
[05:36:27] <[itchyjunk]> but i am sure bash scripting can do all the stuff you are asking about
[05:36:32] *** Joins: jazzy (~jaziz@2600:380:4533:7020:c055:7f23:886:f4ac)
[05:37:54] *** Parts: Izem (~Izem@bras-base-london1483w-grc-38-65-95-41-242.dsl.bell.ca) (Closing Window)
[05:38:20] <InPhase> cuppajoeman: Bash scripting is the go-to choice if it's a simple task, and you're targetting any decent OS.  If the script is going to be a little complicated in what it does, or might eventually end up more than 50 lines, you almost certainly want to look at something like Python for this.
[05:38:35] <[itchyjunk]> https://linuxconfig.org/bash-scripting-tutorial
[05:38:53] <vdamewood> cuppajoeman: Which OS are you on?
[05:38:58] <cuppajoeman> I am on manjaro
[05:39:12] <[itchyjunk]> i remember perl being popular for stuff like that in the circles i was around at least
[05:39:26] <cuppajoeman> I have made some scripts before but I want something like a template where I can copy it as a template whenever I want to make a new script
[05:39:40] <cuppajoeman> So it'll automatically have a nice command line interface
[05:39:52] <cuppajoeman> the ones I make usually are just like `do_thing.sh`
[05:40:31] <[itchyjunk]> i am not sure what you mean by template
[05:40:36] <[itchyjunk]> what would the template be?
[05:40:46] <[itchyjunk]> take in command like argument is line 1 line in bash
[05:40:50] *** Quits: allegorical (~guest@2607:fea8:33e0:65c:c107:d305:9a0:a4a2) (Quit: Leaving)
[05:41:00] <[itchyjunk]> @! or some special variable
[05:41:07] <vdamewood> cuppajoeman: type help getopts at a bash prompt
[05:41:14] <cuppajoeman> ok
[05:41:26] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[05:41:47] <[itchyjunk]> huh interesting
[05:41:49] <cuppajoeman> getopts looks good
[05:42:10] <[itchyjunk]> is $@ related to getopts?
[05:42:35] <vdamewood> [itchyjunk]: What cuppajoeman wants is a script with an argument processing section, and a help display section, all setup and ready to go so they only have to add what the options are.
[05:42:57] <cuppajoeman> yeah
[05:43:12] <cuppajoeman> then when I want a new script I can just do `cp template.sh new_prog.sh`
[05:43:54] <vdamewood> cuppajoeman: Yeah, you can probably set something like that up with getopts.
[05:43:59] <[itchyjunk]> doesn't he want to do stuff.sh arg1 arg2 arg3 and process those? i thought $@ was related to that
[05:44:29] *** Quits: derpy (~quassel@dslb-002-202-069-037.002.202.pools.vodafone-ip.de) (Write error: Connection reset by peer)
[05:44:36] *** Joins: derpy (~quassel@dslb-002-202-069-037.002.202.pools.vodafone-ip.de)
[05:44:41] *** Quits: snake (~snake@user/snake) (Quit: Leaving)
[05:44:56] <vdamewood> [itchyjunk]: $@ is a variable that holds the whole list of arguments. You can use it to process the arguments, sure, but it doesn't actually do anything.
[05:45:07] <[itchyjunk]> oh
[05:45:34] <vdamewood> cuppajoeman: Also, you might want to look into shift.
[05:46:01] <[itchyjunk]> i still don't grasp all of this
[05:46:11] <[itchyjunk]> does bash scripting work on sh or zsh?
[05:46:39] <cuppajoeman> I don't think it matters what the current shell is because of the shebang?
[05:46:42] *** Joins: snake (~snake@user/snake)
[05:47:00] <vdamewood> Both bash and zsh are extensions of sh. So anything sh can do, bash and zsh can do. zsh implements some of the same extensions as bash.
[05:47:23] <vdamewood> cuppajoeman: Yep. That's how perl scripts worked.
[05:47:24] <[itchyjunk]> hmmm
[05:47:29] <spynxic> What's sh stand for
[05:47:38] <vdamewood> SHell
[05:47:48] <[itchyjunk]> so sh is something that talks to OS directly or something?
[05:47:49] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[05:47:52] <vdamewood> (In the case of Unix, sh means the posixly compliant Bourne Shell)
[05:48:10] <webnet4> hmm is $1  $2  etc for arguments bash specific?
[05:48:13] <vdamewood> [itchyjunk]: No more or less than any other program.
[05:48:25] <vdamewood> webnet4: Nope. Bourne shell and zsh also do that.
[05:48:37] <beaky> what is the most advanced shell
[05:48:37] <[itchyjunk]> why don't bash and zsh talk to OS directly then instead of extending sh?
[05:48:45] <webnet4> nice!
[05:49:08] <[itchyjunk]> beaky, sea shell
[05:49:14] <[itchyjunk]> took billions of years to evolve those
[05:49:31] <beaky> yes all those shells do talk to the os directly it is a shell over the the operating system
[05:49:51] <spynxic> I guess the ba in bash stands for batch?
[05:50:04] <beaky> it stands for bourne again 
[05:50:14] <vdamewood> [itchyjunk]: The fact that they are extensions of sh has nothing to do with how they communicate with the OS. The fact that they are extensions means they implement the same thing, with additional features.
[05:50:20] <spynxic> clever
[05:50:32] <[itchyjunk]> oh i see
[05:50:59] <[itchyjunk]> but if i write some script, say in py that acts as a shell
[05:50:59] <vdamewood> [itchyjunk]: In fact, on GNU-based systems, sh is a hard link to bash and bash just works in a just-sh mode.
[05:51:06] <[itchyjunk]> i still have to run that script from a shell
[05:51:46] <vdamewood> [itchyjunk]: If you have a shell program, you can add it to your list of shells and use it as your shell.
[05:52:16] <[itchyjunk]> oh when the os boots up it launches my script
[05:52:21] <[itchyjunk]> and that would be the starting point
[05:52:24] <[itchyjunk]> makes sense, neat
[05:52:58] *** Quits: sevla (~platen@user/sevla) (Ping timeout: 252 seconds)
[05:53:30] <vdamewood> All a shell is is a program that takes input from a user, and has the ability to run other programs based on that input.
[05:53:34] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 250 seconds)
[05:54:12] <[itchyjunk]> it basically just tells the os to run sometihng right?
[05:54:21] <[itchyjunk]> yeah makes sense
[05:54:28] <[itchyjunk]> surprisingly simple then
[05:54:32] <[itchyjunk]> at least the basic idea
[05:54:37] <vdamewood> It depends on how the OS works.
[05:54:41] <[itchyjunk]> but then you can code stuff in it's own language
[05:55:04] <vdamewood> In DOS, the shell would copy the program into memory and jmp to it. In Linux, the shell calls a syscall to start a new process.
[05:55:53] <beaky> nice i like dos i missed out on dos
[05:56:18] <vdamewood> beaky: I think MS has it available for download in a handful of legit ways if you want to run it in a VM.
[05:56:22] <beaky> iconic operating system that everone calls the command line 'dos' somehow lol
[05:56:53] <vdamewood> beaky: Well, back in the day MS-DOS wasn't the only DOS, and many computers' command-line was called Something-DOS.
[05:58:51] <vdamewood> I'm very tempted to write a shell for funzies.
[05:58:53] <[itchyjunk]> copy a program and jmp to it?
[05:58:57] <[itchyjunk]> that seems a bit weird?
[05:59:11] <vdamewood> [itchyjunk]: Why?
[05:59:26] <cuppajoeman> i think that's lingo for super low level programs
[05:59:29] <[itchyjunk]> is that what an OS does too? copy a program and jmp to it?
[05:59:38] <[itchyjunk]> i guess i don't know how programms gets started normally
[06:00:01] <vdamewood> Well, I just told you how it works in DOS. In something like Linux, thought, it's more complex.
[06:00:20] <vdamewood> First the OS either finds a copy of the program in memory, or loads it in if there isn't one already.
[06:00:59] <vdamewood> This includes any .so's the program might use.
[06:01:22] <[itchyjunk]> hmm what's .so?
[06:01:34] *** Joins: Izem (~Izem@65.95.41.242)
[06:01:46] <vdamewood> Second, the OS makes a virtual memory space for the program to run in.
[06:01:57] <vdamewood> shared-object. A dynamic library.
[06:02:22] <vdamewood> The physical copies in memory of the program are then mapped into the virtual memory space.
[06:03:18] <[itchyjunk]> hmmmmm
[06:03:39] <[itchyjunk]> whats virtual memory ? i assume physical memory is RAM
[06:03:40] <vdamewood> Once the 'process' as it's called is setup, the kernel does a special kind of 'jmp' into the program that also switches the memory the program sees to just the virtual memory space made for it.
[06:03:45] *** Joins: pandakekok9 (~job@wikimedia-commons/pandakekok9)
[06:03:54] <vdamewood> RAM is physical memory but not all physical memory is RAM.
[06:04:01] <[itchyjunk]> oh
[06:04:14] <[itchyjunk]> ah i guess L1 L2 caches are physical memory too
[06:04:17] <vdamewood> Physical memory can also be device interfaces.
[06:04:22] <[itchyjunk]> oh
[06:04:31] <[itchyjunk]> like HDD and SSD
[06:04:42] <vdamewood> [itchyjunk]: They are forms of memory that are physical, but cache isn't considered 'physical memory'.
[06:04:51] <[itchyjunk]> oh
[06:05:00] <[itchyjunk]> what's an example of virtual memory?
[06:05:04] <[itchyjunk]> SWAP?
[06:05:05] <vdamewood> [itchyjunk]: No. Like video cards, sounds cards, and drive *controllers*.
[06:05:18] *** Quits: nitro_ (~nitro@c-73-165-183-88.hsd1.pa.comcast.net) (Remote host closed the connection)
[06:05:20] <[itchyjunk]> oh
[06:05:30] <vdamewood> [itchyjunk]: Swap is a technique that takes advantage of how virtual memory works.
[06:06:18] *** Quits: nekodesu (~bit@user/nekobit) (Quit: uninstall gentoo)
[06:06:44] <vdamewood> When you load things into RAM, they get put into a particular location in physical memory. Virtual Memory is a space of addresses that isn't directly connected to physical addresses. Each process gets its own virtual memory space. And individual chunks of virtual memory are mapped to locations in physical memory.
[06:06:55] *** Joins: trace987 (~trace@95.90.106.112)
[06:07:09] <[itchyjunk]> oh
[06:07:20] <vdamewood> So, when my program writes to the address 0xBAADBEEF, It might be writing to address 0CAFEF00D in physical memory instead.
[06:07:20] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[06:07:31] <[itchyjunk]> does a program in virtual memory think it's all together ?
[06:07:33] <vdamewood> 0xCAFEF00D, I mean.
[06:07:43] <[itchyjunk]> it's "virtually" all together but physically apart?
[06:07:43] <vdamewood> 'all together'?
[06:07:48] <[itchyjunk]> hmm
[06:08:00] <[itchyjunk]> like the virtual memories are next to each other or somesuch
[06:08:08] <[itchyjunk]> like an array is "all together" right?
[06:08:12] <vdamewood> Yeah, in some cases.
[06:08:22] <vdamewood> The word you want is 'contiguous'.
[06:08:27] <[itchyjunk]> i see
[06:08:55] <vdamewood> Usually, the program binary is split into sections, .text, .data, .ro-data, and .bss are common examples.
[06:09:01] <[itchyjunk]> programs don't have to be contiguous even in virual memory?
[06:09:02] <vdamewood> Same with the .so files.
[06:09:06] <[itchyjunk]> that's crazy
[06:10:03] <vdamewood> The different sections are stacked together. So, you would see myprogram's .text, then mylib.so's .text, then myotherlib.so's .text right next to each other. Then somewhere else their .data sections are together, and so on.
[06:10:21] <vdamewood> One difference is that .bss is filled with zeros so it's not actually stored in the program of library file.
[06:10:41] <vdamewood> Instead the program or library file just says 'n bytes of .bss'.
[06:10:49] <vdamewood> And the OS clears that memory when it loads the program.
[06:12:02] <vdamewood> [itchyjunk]: And yes, programs are often not stored contiguously in memory. That's because the CPU (at least x86) offers protections on memory access. So .text (which is the executable code of the program) is often loaded in a section of memory marked 'read only'.
[06:12:10] <[itchyjunk]> seems like an OS is doing a lot of work
[06:12:41] <vdamewood> .data on the other hand is the global variables in a program, that's often stored in a section of memory marked 'no execute'.
[06:12:53] <[itchyjunk]> wait .text is where the "machine code" or byte code or w/e it's called lives?
[06:13:04] <vdamewood> Machine code. Not byte code.
[06:13:09] <spynxic> Bad beef and cafe food..?
[06:13:12] <[itchyjunk]> ah
[06:13:40] *** Quits: xff0x (~xff0x@2001:1a81:52ba:f800:f347:6f1f:6209:b9ad) (Ping timeout: 240 seconds)
[06:13:55] <[itchyjunk]> that specter and meltdown thing was related to being able to access one of these locked memory ?
[06:14:16] <mawk> more or less
[06:14:22] <mawk> access of memory you shouldn't be accessing
[06:14:25] <mawk> from other processes etc
[06:14:44] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[06:15:13] <[itchyjunk]> is that part called side channel? beging able to access memories of your neighrbors on the side or something
[06:15:41] *** Joins: xff0x (~xff0x@2001:1a81:52f9:3300:ba09:60b5:ba3:60da)
[06:16:09] *** Quits: trace987 (~trace@95.90.106.112) (Ping timeout: 248 seconds)
[06:16:09] <mawk> side channel is a way to exfiltrate information
[06:16:20] <vdamewood> Another thing virtual memory does it it allows two different sections of virtual memory to be mapped to the same physical memory. For example, if you have two copies of a program running at once, they will use the same physical copy of the executable in memory (or just the .text and .ro-data sections).
[06:16:29] <webnet4> iirc it was more about measuring the timings of operations and determining state based on delays
[06:16:29] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[06:16:44] <webnet4> through the optimization circuitry
[06:16:47] <[itchyjunk]> oh?
[06:16:56] <webnet4> branch prediction / cache
[06:17:01] <[itchyjunk]> what if i open two text file and edit both differently
[06:17:11] <[itchyjunk]> doesn't pointing to same location cause issue then?
[06:18:01] <[itchyjunk]> oh nm
[06:18:12] <[itchyjunk]> it would only use the parts that makes sense to use 
[06:18:16] <[itchyjunk]> interesting
[06:18:36] <[itchyjunk]> i suppose back before tabs existed, people opening multiple browser would trigger this behavior
[06:18:54] <[itchyjunk]> where OS uses the same physical location of browser to start a new instance
[06:19:39] <vdamewood> Not usually.
[06:20:00] <vdamewood> Usually, the browser program itself would manage the Windows, and only one copy of the program was running.
[06:20:22] <[itchyjunk]> that's with tabs?
[06:20:30] <Lyn> Why does Packer have so many Builders? Are there so many incompatible ISO images? Can't I make 1 ISO that'd run everywhere
[06:20:30] <[itchyjunk]> but what about before tabs existed, back in the day
[06:20:42] <vdamewood> No, what I described was before tabs, too.
[06:20:56] <[itchyjunk]> oh
[06:21:00] <vdamewood> Tabs are just an interface feature.
[06:21:21] <webnet4> Lyn you can read the ISO anywhere   usually unless its some exotic extension to iso
[06:21:28] <vdamewood> Remember, what you see on the screen doesn't always map to how the program works.
[06:21:39] <webnet4> are you tring to boot off of the ISO?
[06:21:53] <[itchyjunk]> so even when i had two of internet explorer running, it was actually 1 programming 2 things?
[06:21:59] <[itchyjunk]> that's interesting
[06:22:02] <vdamewood> Yep.
[06:22:09] <Lyn> not yet, I'm trying to figure out this Packer tool on conceptual level, webnet4
[06:22:16] <webnet4> theresa hack to make it work from a USB device
[06:22:36] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 250 seconds)
[06:22:43] *** Joins: blaklistd (~blaklistd@user/blaklistd)
[06:22:53] *** Joins: brabrax (~brabrax@user/brabrax)
[06:23:09] <webnet4> otherwise i think el torito  usually works
[06:23:52] <vdamewood> El dorito!
[06:24:01] * vdamewood chomps the dorito
[06:25:59] <vdamewood> [itchyjunk]: For further reading: https://www.amazon.com/Linkers-Kaufmann-Software-Engineering-Programming/dp/1558604960
[06:26:34] <vdamewood> They need to make a new edition of that book that covers macOS, and drops the old IBM mainframe.
[06:27:03] <vdamewood> Though, macOS is 95% the same as Linux in this respect.
[06:28:01] <[itchyjunk]> oh this is the kind of stuff software enginners learn?
[06:28:32] <vdamewood> Among other things.
[06:28:42] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[06:29:23] *** Quits: snake (~snake@user/snake) (Quit: Namae nado nai, omae to onaji da..)
[06:29:26] <smallville7123> would i use         std::chrono::high_resolution_clock::now().time_since_epoch().count()       for getting the current time for timestamps ?
[06:30:12] *** Quits: Stefan26 (~Stefan26@78-67-218-242-no207.tbcn.telia.com) (Ping timeout: 256 seconds)
[06:33:07] *** Quits: Izem (~Izem@65.95.41.242) (Ping timeout: 252 seconds)
[06:33:36] *** Joins: EmOwl (~Em@202.150.113.111)
[06:35:21] *** Joins: kmh_ (~kmh@p2e5117f2.dip0.t-ipconnect.de)
[06:37:20] *** Quits: kmh (~kmh@p200300df5f47f400a948c5200deef743.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[06:39:39] *** Joins: Izem (~Izem@65.95.41.242)
[06:39:55] *** Joins: kikijiki (~Thunderbi@user/kikijiki)
[06:41:57] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[06:42:23] *** Quits: TechTest (uid283215@id-283215.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[06:45:05] *** Joins: nitro (~nitro@c-73-165-183-88.hsd1.pa.comcast.net)
[06:47:43] *** Quits: kikijiki (~Thunderbi@user/kikijiki) (Quit: kikijiki)
[06:51:56] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[06:52:22] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 252 seconds)
[06:53:25] <Izem> Since the I/O part of an OS is a key interface for drivers, I cannot unsee the unix file model, what else would be an interesting model?
[06:53:39] *** Joins: freakazoid343 (~matt@35.136.210.185)
[06:54:34] <vdamewood> Izem: Everything's a C++ object.
[06:54:42] <webnet4> files or addresses,  is there another way?
[06:55:24] <webnet4> s/files/handles/
[06:56:00] <Izem> ok, that's interesting too
[06:56:41] *** Quits: freakazoid12345 (~matt@35.136.210.185) (Ping timeout: 248 seconds)
[06:57:01] <oldlaptop> Izem: I'm given to understand IBM i has some bizzare object model.
[06:57:42] *** Joins: kikijiki (~Thunderbi@user/kikijiki)
[06:58:11] <vdamewood> Anything else I can think of is just some form of 'Kernel has an API for it'.
[06:58:25] <vdamewood> Which isn't interesting.
[06:59:45] <lf94> anyone have access to openai codex?
[07:00:02] <lf94> I really want to try "code matching" but going from english to javascript
[07:00:08] <Izem> heh even they had a posix interface
[07:00:25] <Izem> guess that is a requirement of osdev by now :)
[07:02:03] <Izem> this IBM i technology machine interface is really interesting
[07:02:22] <Izem> "Compilers for IBM i do not generate native machine code directly, instead they generate a high level intermediate representation defined by the TIMI."
[07:02:43] <Izem> compiler writers would have loved the IBM i
[07:03:20] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:04:02] <Izem> "Instead of operating on memory addresses, TIMI instructions operate on objects. All data in IBM i, such as data files, source code, programs and regions of allocated memory, are encapsulated inside objects managed by the operating system" I wonder if that improved the memory safety
[07:04:56] *** Quits: kikijiki (~Thunderbi@user/kikijiki) (Quit: kikijiki)
[07:06:00] *** Quits: webnet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[07:06:14] *** Joins: webnet4 (~0x100@32.211.211.39)
[07:06:54] <beaky> nice i like objects
[07:07:01] <Izem> I remember some one asking about a single level store, looks like it has already been done and in prod " the implementation of object-based addressing on top of a single-level store"
[07:09:33] <Izem> wonder what the vulnerabilites for that is like, since it's not a popular OS and has a really interesting architecture
[07:11:27] *** Quits: riff_IRC (~riff-IRC@user/riff-irc) (Read error: Connection reset by peer)
[07:11:54] *** Joins: riff_IRC (~riff-IRC@user/riff-irc)
[07:13:54] *** Joins: gggp (~textual@123.113.180.13)
[07:15:19] <Izem> to think there is an abstraction strong enough to be an alternative to pointer addressing
[07:16:04] <webnet4> how does it work
[07:16:12] <webnet4> object ID value?
[07:16:35] *** Quits: riff_IRC (~riff-IRC@user/riff-irc) (Read error: Connection reset by peer)
[07:16:46] <webnet4> ID+Size
[07:18:03] *** Joins: riff_IRC (~riff-IRC@user/riff-irc)
[07:19:09] <Izem> no clue, but they can be scattered all along the store so they must be related some other way
[07:20:02] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[07:22:24] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 250 seconds)
[07:24:42] <Izem> interesting, implementing a kernel may be less work than I thought, seems like the I/O subsystem is the complex part
[07:26:25] <webnet4> on x86 pc writing keyboard driver is soooooo easy, unless we're talking about USB keyboard
[07:26:51] *** Quits: [_] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[07:27:05] <Izem> if not usb then it's ps2?
[07:27:23] <webnet4> whatever the BIOS provides
[07:27:42] <Izem> the bios provides a keyboard??
[07:30:06] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[07:30:45] <webnet4> https://en.wikipedia.org/wiki/BIOS_interrupt_call
[07:30:47] <bayaz> Title: BIOS interrupt call - Wikipedia 
[07:31:36] <beaky> nice i like the bios
[07:31:43] <beaky> it is a blue screen menu
[07:32:03] <webnet4> 09h
[07:34:53] <webnet4> keybard intercept??? 0_o
[07:35:21] *** Quits: esran (~esran@cb.conical-effort.net) (Quit: ZNC 1.8.x-nightly-20190530-13450c7f - https://znc.in)
[07:36:39] *** Joins: amigojapan (uid86330@id-86330.brockwell.irccloud.com)
[07:37:28] *** Joins: esran (~esran@cb.conical-effort.net)
[07:37:28] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[07:40:36] *** Quits: jamea (~jamea@177.239.85.103) (Ping timeout: 250 seconds)
[07:47:55] *** audiofreeze is now known as audiocat
[07:50:10] <webnet4> oh wait that's the reallly really old way to get keyboard input
[07:51:40] *** Quits: gggp (~textual@123.113.180.13) (Ping timeout: 240 seconds)
[07:54:13] <webnet4> this is how to do it from non-realmode https://wiki.osdev.org/%228042%22_PS/2_Controller
[07:54:14] <bayaz> Title: "8042" PS/2 Controller - OSDev Wiki 
[07:55:10] <Izem> ok, thanks
[07:56:00] <webnet4> althouhgh this is way too much info
[07:58:01] *** Quits: medard (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 248 seconds)
[08:05:02] *** Joins: Samian (~Sami@174.27.107.153)
[08:06:33] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[08:15:33] <webnet4> the really annoying part is setting up the programmable interrupt controller
[08:16:58] *** Joins: gggp (~textual@123.113.178.246)
[08:17:58] *** Joins: anovick (~anovick@igld-83-130-61-178.inter.net.il)
[08:31:05] *** Joins: gargus (~user@118.208.105.121)
[08:31:58] *** Quits: Natch (~natch@c-e070e255.014-297-73746f25.bbcust.telenor.se) (Remote host closed the connection)
[08:33:30] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[08:36:52] *** Quits: Lyn (~Lyn@user/law) (Ping timeout: 252 seconds)
[08:37:21] *** Joins: Natch (~natch@c-e070e255.014-297-73746f25.bbcust.telenor.se)
[08:38:14] *** Quits: pizdets (~pizdets@183.182.110.111) (Ping timeout: 250 seconds)
[08:38:50] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[08:39:11] *** Joins: pizdets (~pizdets@183.182.110.30)
[08:40:09] *** Quits: nevoyu (~joshua@cpe-192-180-19-146.kya.res.rr.com) (Ping timeout: 248 seconds)
[08:41:16] *** Quits: anovick (~anovick@igld-83-130-61-178.inter.net.il) (Ping timeout: 252 seconds)
[08:43:08] <beaky> yes oses spend several microseconds setting up advanced apic timers
[08:43:31] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[08:44:03] *** Quits: HankHill (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (Ping timeout: 276 seconds)
[08:44:12] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[08:44:51] <webnet4> oh yeah APIC, i never got that far. just basic PIC
[08:45:36] <webnet4> for PIC you have to set a vector offset so keypresses don't invoke exception #1
[08:46:25] <webnet4> the whole thing is horribly complex
[08:47:11] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:47:40] *** Joins: HankHill (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[08:48:58] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 252 seconds)
[08:51:53] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 248 seconds)
[08:53:24] *** Quits: gggp (~textual@123.113.178.246) (Ping timeout: 250 seconds)
[08:55:36] *** Joins: gggp (~textual@125.33.91.221)
[09:02:08] *** Quits: gggp (~textual@125.33.91.221) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:03:38] *** Quits: cuppajoeman (~cuppajoem@142.134.90.142) (Quit: Client closed)
[09:05:21] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[09:05:44] *** Joins: vysn (~vysn@user/vysn)
[09:06:40] *** Quits: akevinhuang (~thekevinh@user/thekevinhuang) (Ping timeout: 240 seconds)
[09:11:29] *** Quits: hexnewbie (~hexnewbie@user/hexnewbie) (Ping timeout: 268 seconds)
[09:11:52] *** Quits: CoderGuy (~CoderGuy@user/coderguy) (Quit: Leaving)
[09:12:17] *** Joins: trace987 (~trace@95.90.106.112)
[09:12:19] *** Joins: kmq (~kmq@x4db35169.dyn.telefonica.de)
[09:15:32] *** Joins: ario_ (~ario@159.65.220.102)
[09:15:34] *** Joins: tonsofpc1 (~tonsofpcs@cpe-67-251-117-244.stny.res.rr.com)
[09:15:34] *** Joins: ShockToh1 (~kevin@155.138.224.160)
[09:15:37] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (*.net *.split)
[09:15:37] *** Quits: Brando753 (~Brando753@ec2-34-218-254-59.us-west-2.compute.amazonaws.com) (*.net *.split)
[09:15:37] *** Quits: tonsofpcs (~tonsofpcs@cpe-67-251-117-244.stny.res.rr.com) (*.net *.split)
[09:15:37] *** Quits: mjh4386 (~mjh4386@165.22.53.231) (*.net *.split)
[09:15:37] *** Quits: ario (~ario@159.65.220.102) (*.net *.split)
[09:15:37] *** Quits: calcmandan (~quassel@user/calcmandan) (*.net *.split)
[09:15:37] *** Quits: a1paca_ (~a1paca@user/a1paca) (*.net *.split)
[09:15:37] *** Quits: glider (~glider@user/glider) (*.net *.split)
[09:15:37] *** Quits: DaPinkOne (~Dap@user/dap) (*.net *.split)
[09:15:37] *** Quits: ShockTohp (~kevin@155.138.224.160) (*.net *.split)
[09:15:37] *** Quits: brandon_ (~brandon@user/brandon) (*.net *.split)
[09:15:37] *** Quits: Retr0id (~Retr0id@user/retr0id) (*.net *.split)
[09:15:37] *** Quits: sco1 (~sco1@charon.whatbox.ca) (*.net *.split)
[09:15:37] *** Joins: pikapika_lunar (~pikapika_@pika.powered.by.lunarbnc.net)
[09:15:39] *** Joins: sco1_ (~sco1@charon.whatbox.ca)
[09:15:45] *** Joins: glider_ (~glider@user/glider)
[09:15:46] *** Joins: mjh4386_ (~mjh4386@165.22.53.231)
[09:15:46] *** Joins: calcmandan (~quassel@user/calcmandan)
[09:15:47] *** Joins: brandon__ (~brandon@user/brandon)
[09:15:50] *** Joins: Retr0id6 (~Retr0id@user/retr0id)
[09:15:58] *** Joins: Brando751 (~Brando753@ec2-34-218-254-59.us-west-2.compute.amazonaws.com)
[09:16:03] *** Quits: pikapika_lunar (~pikapika_@pika.powered.by.lunarbnc.net) (Remote host closed the connection)
[09:16:20] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[09:16:26] *** Joins: hexnewbie (~hexnewbie@user/hexnewbie)
[09:16:40] *** Joins: a1paca (~a1paca@user/a1paca)
[09:16:45] *** Joins: DaPinkOne (~Dap@user/dap)
[09:18:50] *** Quits: pnill_ (~pnill@ip170.ip-54-39-37.net) (*.net *.split)
[09:18:50] *** Quits: Spydar007 (~spydar007@user/spydar007) (*.net *.split)
[09:18:50] *** Quits: phenom (~primus@user/phenom) (*.net *.split)
[09:18:50] *** Quits: abirkill (snoopy@d172-218-198-90.bchsia.telus.net) (*.net *.split)
[09:18:50] *** Quits: ozarker (~ozarker@172-15-173-110.lightspeed.mssnks.sbcglobal.net) (*.net *.split)
[09:18:50] *** Quits: adrian17 (~adrian17@thehyper.space) (*.net *.split)
[09:18:50] *** Quits: DarkTrick_ (~DarkTrick@pl-768-132.bunbun.ne.jp) (*.net *.split)
[09:18:50] *** Quits: Bigcheese_ (~quassel@107.182.234.200) (*.net *.split)
[09:18:50] *** Quits: davve_ (davve@bsd.douchedata.com) (*.net *.split)
[09:18:50] *** Quits: d3x0r (~d3x0r@ip68-108-54-126.lv.lv.cox.net) (*.net *.split)
[09:18:50] *** Quits: Sqaure (~a@178.62.91.8) (*.net *.split)
[09:18:50] *** Quits: CuriousErnestBro (~CuriousEr@user/curiousernestbro) (*.net *.split)
[09:18:50] *** Quits: jstoker (~jstoker@user/jstoker) (*.net *.split)
[09:18:50] *** Quits: ebb (ebb@user/ebb) (*.net *.split)
[09:18:50] *** Quits: sauce (~sauce@omae.wa.mou.shindei.ru) (*.net *.split)
[09:18:50] *** Quits: routeveg (~lee@197.ip-51-195-136.eu) (*.net *.split)
[09:18:50] *** Quits: insolentworm (~root@vps-7db3bef3.vps.ovh.ca) (*.net *.split)
[09:18:50] *** Quits: ravish0007 (~quassel@ec2-65-0-45-121.ap-south-1.compute.amazonaws.com) (*.net *.split)
[09:18:50] *** Quits: olspookishmagus (~pookie@snf-137798.vm.okeanos.grnet.gr) (*.net *.split)
[09:18:50] *** Quits: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3) (*.net *.split)
[09:18:50] *** Quits: TheLinuxNerd (~tux@user/thelinuxnerd) (*.net *.split)
[09:18:50] *** Quits: InPhase (~InPhase@openscad/inphase) (*.net *.split)
[09:18:53] *** Joins: davve (davve@bsd.douchedata.com)
[09:18:56] *** Quits: Izem (~Izem@65.95.41.242) (Quit: Going offline, see ya! (www.adiirc.com))
[09:18:56] *** Joins: pnill (~pnill@ip170.ip-54-39-37.net)
[09:18:58] *** Joins: pookie (~pookie@snf-137798.vm.okeanos.grnet.gr)
[09:18:58] *** Joins: Bigcheese (~quassel@107.182.234.200)
[09:18:58] *** Joins: zaher (~zaher@37.48.150.118)
[09:18:58] *** Joins: InPhase_ (~InPhase@openscad/inphase)
[09:18:59] *** Joins: routeveg (~lee@197.ip-51-195-136.eu)
[09:19:05] *** Joins: sauce (~sauce@omae.wa.mou.shindei.ru)
[09:19:06] *** Joins: ravish0007 (~quassel@ec2-65-0-45-121.ap-south-1.compute.amazonaws.com)
[09:19:11] *** Joins: jstoker_ (~jstoker@user/jstoker)
[09:19:17] *** Joins: DarkTrick (~DarkTrick@pl-768-132.bunbun.ne.jp)
[09:19:19] *** Joins: insolentworm (~root@vps-7db3bef3.vps.ovh.ca)
[09:19:22] *** Joins: CuriousErnestBri (~CuriousEr@user/curiousernestbro)
[09:19:23] *** Joins: ebb_ (ebb@user/ebb)
[09:19:24] *** Joins: d3x0r (~d3x0r@ip68-108-54-126.lv.lv.cox.net)
[09:19:27] *** Joins: adrian17 (~adrian17@thehyper.space)
[09:19:28] *** Joins: ozarker (~ozarker@172-15-173-110.lightspeed.mssnks.sbcglobal.net)
[09:19:30] *** Joins: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3)
[09:19:31] *** jstoker_ is now known as jstoker
[09:19:40] *** Joins: abirkill- (snoopy@d172-218-198-90.bchsia.telus.net)
[09:19:43] *** Joins: TheLinuxNerd (~tux@user/thelinuxnerd)
[09:19:54] *** Joins: phenom (~primus@user/phenom)
[09:20:16] *** Quits: zaher_ (~zaher@37.48.153.52) (Ping timeout: 250 seconds)
[09:20:27] *** ebb_ is now known as ebb
[09:20:49] *** abirkill- is now known as abirkill
[09:22:20] *** Quits: b1101 (~b1101@ool-44c01641.dyn.optonline.net) (Quit: b1101)
[09:22:30] *** Joins: Spydar007 (~spydar007@user/spydar007)
[09:22:51] *** Joins: Square (~a@178.62.91.8)
[09:26:22] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[09:28:04] *** Quits: zaher (~zaher@37.48.150.118) (Ping timeout: 250 seconds)
[09:30:01] *** Quits: riff_IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:31:18] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:32:05] *** Joins: TechTest (uid283215@id-283215.tooting.irccloud.com)
[09:36:53] *** Quits: xsperry (~as@user/xsperry) ()
[09:37:54] *** Joins: Izem (~Izem@bras-base-london1483w-grc-38-65-95-41-242.dsl.bell.ca)
[09:39:21] *** Quits: Drek45 (~jrept371@102.129.153.207) (Ping timeout: 248 seconds)
[09:41:25] *** Joins: mei (~mei@user/mei)
[09:42:56] *** Quits: trace987 (~trace@95.90.106.112) (Ping timeout: 268 seconds)
[09:43:04] <vdamewood> Yay, I'm bored again.
[09:45:20] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 244 seconds)
[09:47:52] *** Joins: kikijiki (~Thunderbi@user/kikijiki)
[09:50:40] *** Joins: anovick (~anovick@IGLD-83-130-61-178.inter.net.il)
[09:51:47] *** Joins: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net)
[09:53:53] <micrex22> vdamewood: make a game in Godot
[09:54:20] <vdamewood> Naw, I'm a Unity developer.
[09:54:48] *** Quits: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net) (Client Quit)
[09:55:12] *** Joins: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net)
[09:56:43] <arahael> vdamewood: Qute.
[09:57:06] <vdamewood> Qute?
[09:57:56] *** Quits: dre (~dre@2001:8003:c932:c301:64b7:95dc:bc24:e941) (Quit: Leaving)
[09:58:23] <arahael> Trying to really emphasise "Qt", as "cute".
[09:58:36] *** Quits: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net) (Remote host closed the connection)
[09:59:18] *** Joins: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net)
[09:59:58] *** Joins: gggp (~textual@125.33.81.186)
[10:02:01] *** Joins: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler)
[10:04:29] <kodah> i have to say, Rust is a really fun language to learn
[10:05:05] * arahael loves it, though hasn't actually used it in anger yet.
[10:06:28] *** Quits: Izem (~Izem@bras-base-london1483w-grc-38-65-95-41-242.dsl.bell.ca) (Quit: Going offline, see ya! (www.adiirc.com))
[10:08:04] *** Quits: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler) (Ping timeout: 244 seconds)
[10:08:17] <kodah> i've just been building a CLI in it, but i may take a stab at UI next
[10:08:55] <arahael> Got a particular UI framework in mind?
[10:09:18] <kodah> druid, i think: https://github.com/linebender/druid
[10:09:19] <bayaz> Title: GitHub - linebender/druid: A data-first Rust-native UI design toolkit. 
[10:09:40] *** Quits: gggp (~textual@125.33.81.186) (Ping timeout: 250 seconds)
[10:12:06] <beaky> nice druid is the future of gui
[10:12:10] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[10:12:30] *** Quits: manin (~x@185.242.190.95) (Quit: Leaving)
[10:15:40] *** Quits: xff0x (~xff0x@2001:1a81:52f9:3300:ba09:60b5:ba3:60da) (Ping timeout: 240 seconds)
[10:15:44] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[10:16:43] *** Joins: xff0x (~xff0x@2001:1a81:52f9:3300:b5f:b00c:7918:3d13)
[10:18:55] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[10:22:16] *** Joins: rcoote (~rcoote@2a02:908:692:81c0:27cd:61e5:613:b283)
[10:28:28] *** Joins: independent56 (~independe@148.122.187.2)
[10:30:27] <audiocat> hi vdamewood 
[10:30:45] <vdamewood> audiocat: Meep?
[10:30:59] *** Joins: reumeth (~reumeth@user/reumeth)
[10:31:25] <audiocat> vdamewood, i have a gunicorn service file and I'm wondering if `EnvironmentFile=/etc/environment` in [Service] is valid syntax
[10:31:30] <audiocat> it's not working, that's for sure
[10:31:34] <audiocat> i need suggestions
[10:33:36] <audiocat> nothing?
[10:33:40] <audiocat> vdamewood, 
[10:33:46] <vdamewood> I have no idea.
[10:33:52] <audiocat> ok
[10:33:55] <vdamewood> I've never touched gunicorn.
[10:34:19] *** Quits: EmOwl (~Em@202.150.113.111) (Quit: Deleted from existence by a vengeful computer)
[10:34:32] *** Joins: gggp (~textual@60.10.23.160)
[10:34:54] <deniska> audiocat: you mean systemd service file launching gunicorn?
[10:34:59] *** Joins: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk)
[10:35:02] <audiocat> deniska, yes
[10:35:07] *** Quits: gggp (~textual@60.10.23.160) (Client Quit)
[10:35:29] <deniska> https://www.freedesktop.org/software/systemd/man/systemd.exec.html#EnvironmentFile=
[10:35:30] <bayaz> Title: systemd.exec 
[10:35:34] <deniska> seems to be a thing, sure
[10:36:03] *** Joins: dsrt^ (~dsrt@12.16.129.111)
[10:36:22] *** Joins: dre (~dre@2001:8003:c932:c301:64b7:95dc:bc24:e941)
[10:36:43] *** Joins: xsperry (~as@user/xsperry)
[10:37:28] *** Quits: independent56 (~independe@148.122.187.2) (Remote host closed the connection)
[10:38:16] *** Joins: independent56 (~independe@148.122.187.2)
[10:39:31] *** Quits: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 252 seconds)
[10:39:44] *** Joins: mnrmnaugh (~mnrmnaugh@68.162.206.56)
[10:40:04] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 252 seconds)
[10:41:54] *** Quits: mnrmnaugh (~mnrmnaugh@68.162.206.56) (Client Quit)
[10:41:59] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[10:44:15] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[10:47:32] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:48:41] *** Quits: independent56 (~independe@148.122.187.2) (Remote host closed the connection)
[10:51:13] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[10:52:27] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[10:53:52] *** Quits: Haxxa (~Haxxa@122.199.46.17) (Ping timeout: 250 seconds)
[10:55:53] *** Quits: rxndxs (~ed@201.160.157.102.cable.dyn.cableonline.com.mx) (Quit: Lost terminal)
[10:56:04] *** Joins: Haxxa (~Haxxa@122.199.46.17)
[10:57:22] *** Joins: Akronymus (~Akronymus@85.31.8.181)
[11:01:48] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[11:02:03] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[11:02:08] <beaky> hello i am using strace on firefox but it prints like millions of lines of text is there a way to filter it more cleverly
[11:02:47] <webnet4> yeah i'm pretty sure it has some kind of filter
[11:02:53] *** Joins: mnd999_ (~mark@2001:8b0:da3:76a2:4630:5b97:83a2:3e21)
[11:03:22] <beaky> ill just tee it all to a giant text file and sift thru it later
[11:04:07] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[11:06:47] *** Quits: anovick (~anovick@IGLD-83-130-61-178.inter.net.il) (Ping timeout: 240 seconds)
[11:14:33] <mawk> yes you can tell strace which syscall you're waiting for beaky 
[11:14:44] <mawk> make sure to give -f argument to strace to trace child pids
[11:16:10] *** Quits: jazzy (~jaziz@2600:380:4533:7020:c055:7f23:886:f4ac) (Ping timeout: 240 seconds)
[11:16:42] *** Quits: Fairy (~Fairy@2001:464a:4992:0:615a:3c47:5005:d16f) (Read error: Connection reset by peer)
[11:17:36] *** Joins: Rounin (~david@84.212.130.215)
[11:17:54] *** Joins: gggp (~textual@60.10.23.160)
[11:18:04] *** Joins: immibis (~hexchat@62.156.144.218)
[11:18:58] <beaky> i like strace it is like dtrace but easier
[11:18:58] *** Quits: gggp (~textual@60.10.23.160) (Client Quit)
[11:21:45] *** Quits: pandakekok9 (~job@wikimedia-commons/pandakekok9) (Ping timeout: 245 seconds)
[11:23:42] *** Joins: absc (~absc@81.31.144.180)
[11:23:58] *** Joins: riff_IRC (~riff-IRC@user/riff-irc)
[11:26:10] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Ping timeout: 240 seconds)
[11:26:25] *** Joins: Fairy (~Fairy@2001:464a:4992:0:8d07:be2:289f:3ca3)
[11:28:01] *** Joins: independent56 (~independe@148.122.187.2)
[11:31:11] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[11:31:42] *** Joins: palasso (~palasso@user/palasso)
[11:33:21] *** Joins: Stefan26 (~Stefan26@78-67-218-242-no207.tbcn.telia.com)
[11:33:54] *** Joins: night_wulfe__ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[11:34:31] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 252 seconds)
[11:34:36] <pyzozord> I like ebpf, I don't think there is dtrace for linux
[11:35:17] *** Quits: Natch (~natch@c-e070e255.014-297-73746f25.bbcust.telenor.se) (Remote host closed the connection)
[11:36:15] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[11:37:49] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 252 seconds)
[11:38:44] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[11:38:44] *** Quits: independent56 (~independe@148.122.187.2) (Remote host closed the connection)
[11:38:54] *** Joins: pandakekok9 (~job@wikimedia-commons/pandakekok9)
[11:39:05] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[11:39:47] *** Quits: night_wulfe__ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[11:40:05] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:40:23] *** Joins: Natch (~natch@c-e070e255.014-297-73746f25.bbcust.telenor.se)
[11:40:51] *** Joins: independent56 (~independe@148.122.187.2)
[11:43:57] *** Quits: frm (~frm@user/frm) (Quit: frm)
[11:45:28] *** Joins: aradesh (~aradesh@user/aradesh)
[11:46:26] *** Quits: webnet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[11:48:17] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[11:57:06] *** Joins: mrig (~mrig@user/mrig)
[12:01:40] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 240 seconds)
[12:03:56] <Akronymus> I thought I fucked up with a rebase.
[12:04:10] <Akronymus> Turns out, that atlassian just shows all branches by default.
[12:04:46] *** Joins: jaysicks (~jaysicks@212-40-83-106.pool.digikabel.hu)
[12:05:44] <CuriousErnestBri> Good morning.
[12:05:57] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[12:06:00] <CuriousErnestBri> Hello Akronymus, are you European?
[12:06:06] *** CuriousErnestBri is now known as CuriousErnestBro
[12:06:11] <Akronymus> Yeah, why?
[12:06:19] <CuriousErnestBro> You're up early :D
[12:06:23] * CuriousErnestBro too
[12:08:26] *** Joins: gggp (~textual@60.10.23.160)
[12:08:50] <CuriousErnestBro> POST -> Create, GET -> Read, DELETE -> delete
[12:08:58] <CuriousErnestBro> What route do I use for Update in CRUD?
[12:09:35] <Akronymus> post, I guess
[12:10:03] *** Quits: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net) (Remote host closed the connection)
[12:10:10] <CuriousErnestBro> PATCH
[12:10:16] <Akronymus> https://www.restapitutorial.com/lessons/httpmethods.html oh, put according to this
[12:10:18] <bayaz> Title: HTTP Methods for RESTful Services 
[12:11:18] <CuriousErnestBro> I'm gonna go with PATCH because it's partial updating.
[12:11:20] <Akronymus> Oh yeah, misread that site
[12:12:46] <pyzozord> HACKWEEK!
[12:12:54] * pyzozord puts on his hacker gloves
[12:13:27] * pyzozord starts typing on the keyboard attached to the forearm
[12:13:50] <Akronymus> pyzozord a power glove, I hope
[12:14:13] *** Joins: sjmulder (~sjmulder@2a02-a443-33e5-1-65f2-1fe5-ecb-55bb.fixed6.kpn.net)
[12:14:34] <pyzozord> yeah that's the one! Forgot the name
[12:15:27] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:15:41] * pyzozord puts on his 80s
[12:15:50] <pyzozord> let the hackery begin
[12:16:00] <pyzozord> *80s ray ban
[12:17:33] <pyzozord> ok step one: how do I make programs?
[12:17:38] <mrig> Hello, does anyone happen to have a short bash or shell script that will return the current git branch name, coloured if there are status modifications?
[12:18:14] <mrig> I think I may need to lean a little bash so that this is easier to just cobble together.
[12:18:20] <Akronymus> pyzozord you release butterflies in just the right way.
[12:18:26] <mrig> pyzozord: cool stuff, where are you doing that?
[12:18:44] <Akronymus> Or, actually, first thing would be to make a rock think.
[12:19:39] <pyzozord> mrig: I am porting https://st.suckless.org/ from Xorg library to SDL library :) And if that is successful I'll have my cherry on top: implement animated gif backgrounds in my terminal emulator
[12:19:41] <bayaz> Title: st - simple terminal | suckless.org software that sucks less 
[12:20:32] <pyzozord> Akronymus: https://xkcd.com/378/ :)
[12:20:33] <bayaz> Title: Real Programmers 
[12:20:52] *** Quits: nunxerl (~nunxerl@192.145.118.70) (Ping timeout: 246 seconds)
[12:20:58] <mrig> Oh that looks like a fun project :)
[12:21:22] <pyzozord> once I have my terminal based on SDL or kinds of crazy things can happen
[12:21:25] <mrig> nice way to learn both Xorg and SDL in on go!
[12:21:34] <pyzozord> I was thinking about implementing ffmpeg as the background too
[12:22:03] <mrig> just being able to put bitmaps there would be fun for animations.
[12:22:40] <pyzozord> A bit of Xorg for sure, but mostly I am replacing Xorg with SDL because I think Xorg is too complicated. It encompasses all kinds of usecases like remote desktops, or very different kinds of displays etc
[12:23:06] <mrig> Is the API not distinct about the differing sections?
[12:23:23] <pyzozord> Once I have my terminal display images and videos in the background, I can pretty much drop my entire graphical shell and just boot into my terminal :D
[12:23:52] <mrig> that will suckless :p
[12:24:28] <pyzozord> yeah the name is kind of meh
[12:24:52] <pyzozord> but simple programs written in c that anyone who knows a little of c can change are pretty awesome
[12:24:58] <CuriousErnestBro> Can I make a joke?
[12:25:12] * pyzozord gives CuriousErnestBro the joke ball
[12:25:23] <pyzozord> don't spend it all in one place
[12:25:27] <CuriousErnestBro> Suckless? I hope my wife isn't suckless.
[12:25:30] <CuriousErnestBro> (^:
[12:25:41] <pyzozord> lol
[12:25:49] <pyzozord> didn't see that one coming :D
[12:25:55] <mrig> heh
[12:26:44] <mrig> Not sure that I want a wife who will suckmore though, probably would entail the American meaning of suck, rather than the literal
[12:27:10] * mrig drops the hot potato.
[12:27:10] <pyzozord> right I better start hacking or I'll be the sucker
[12:27:20] <CuriousErnestBro> Good man.
[12:27:23] <mrig> nice, have fun with it.
[12:28:07] *** Quits: gggp (~textual@60.10.23.160) (Ping timeout: 240 seconds)
[12:29:10] *** Quits: absc (~absc@81.31.144.180) (Ping timeout: 240 seconds)
[12:30:07] *** Joins: gggp (~textual@60.10.23.160)
[12:31:27] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[12:31:46] *** Quits: TechTest (uid283215@id-283215.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[12:33:16] <pyzozord> mrig: "git diff --numstat" will print stats for unstaged and "git diff --cached --numstat" for staged changes. You can then parse it with bash/awk/sed
[12:35:01] *** Quits: blahboybaz (~blahboyba@67-5-101-245.spok.qwest.net) (Ping timeout: 252 seconds)
[12:36:10] *** Quits: gggp (~textual@60.10.23.160) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:37:17] *** Joins: ixil (~ixil@82.197.178.137)
[12:37:47] *** Joins: absc (~absc@81.31.144.178)
[12:41:26] *** Quits: DasBrain (~DasBrain@user/dasbrain) (Killed (NickServ (GHOST command used by DasBrain_)))
[12:41:34] *** Joins: DasBrain_ (~DasBrain@user/dasbrain)
[12:41:41] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[12:42:23] <mrig> I was thinking about using 'git status --short' and simply testing the values length
[12:42:52] <mrig> if it comes back empty print in green if not print in red
[12:44:30] <mrig> not sure which might be the best tool for that boolean test
[12:44:35] *** Joins: kobalt (~rsonx@user/kobalt)
[12:44:51] <mrig> oh wc I suppose
[12:45:21] <pyzozord> mrig: yeah status --short was my first suggestion but I thought you don't need that suggestion
[12:46:04] *** Joins: aniruddha (uid340443@id-340443.charlton.irccloud.com)
[12:48:23] <mrig> I need to be just a little more familiar with shell scripts, though it is tempting to just write it in go.
[12:48:54] <mrig> I figure that it is still worth learning shell though.
[12:49:21] <Akronymus> Is there something analogous to $"""some interpolated string with " that don't have to be escaped {somedata}""" in languages besides f#?
[12:50:17] <mrig> the backtick in go
[12:50:23] <pyzozord> mrig: I have to say investing time in shell scripting was a good investment at least for me
[12:50:35] <mrig> Yes seems that it will be worth doing.
[12:50:37] <Akronymus> mrig but then you still have to escape backticks
[12:50:55] <pyzozord> mrig: people in #bash are helpful
[12:51:08] <pyzozord> some can be a bit hrash, but they are helpful
[12:51:16] *** Joins: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler)
[12:52:23] <Akronymus> biberu I just HAVE to share this in here too: {( })
[12:52:34] <mrig> thanks for the headsup, well it is only a little distraction :)
[12:52:52] <biberu> 😱
[12:55:01] <mrig> Akronymus: Using backtics covers all of the edge cases that i've needed so far.
[12:55:28] <mrig> the only other time that I use them is for vim markers
[12:55:31] <Akronymus> https://docs.microsoft.com/en-us/dotnet/fsharp/language-reference/strings
[12:55:31] <bayaz> Title: Strings - F# 
[12:55:48] <Akronymus> Specifically this: let xmlFragment1 = @"<book author=""Milton, John"" title=""Paradise Lost"">"
[12:55:58] <Akronymus> vs this: let xmlFragment2 = """<book author="Milton, John" title="Paradise Lost">"""
[12:56:34] <biberu> f# <3
[12:58:05] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:59:46] <pyzozord> Is there a way to override some Makefile flags outside of makefile? Meaning I want it build with debug symbols but there is no specific target for that
[13:00:44] *** Quits: independent56 (~independe@148.122.187.2) (Remote host closed the connection)
[13:01:46] *** Joins: independent56 (~independe@148.122.187.2)
[13:02:44] *** Quits: independent56 (~independe@148.122.187.2) (Remote host closed the connection)
[13:04:06] <merijn> pyzozord: In well written Makefiles you can, yes
[13:04:06] *** Joins: independent56 (~independe@148.122.187.2)
[13:04:21] *** Sauvin is now known as b
[13:04:21] <merijn> But 90% of Makefiles aren't well written, so...probably not >.>
[13:04:29] *** b is now known as Sauvin
[13:09:06] *** Joins: silasfox (~sbv@xdsl-87-78-57-101.nc.de)
[13:09:45] <pyzozord> turns out this one actually is well written then :) I found out that it uses CFLAGS env var so I can just "CFLAGS=-g make"
[13:10:15] <pyzozord> suckless so far living up to it's name :D
[13:10:40] <pyzozord> ugh my gdb is so rusty now need to remember all the key bindings
[13:12:20] <Akronymus> Wow, what a cursed c stdlib function: ungetc
[13:12:42] <Akronymus> c++ *
[13:12:48] <Akronymus> https://www.cplusplus.com/reference/cstdio/ungetc/
[13:12:49] <bayaz> Title: ungetc - C++ Reference 
[13:13:42] <Akronymus> You can write into the input buffer.
[13:13:51] <Akronymus> Which, I get the usefulness of.
[13:14:18] <pyzozord> it's a c function actually
[13:14:29] <Akronymus> Oh
[13:14:54] *** Quits: furrykef (~furrykef@ip68-229-199-137.ok.ok.cox.net) (Remote host closed the connection)
[13:15:00] <Akronymus> The joys of reverse engineering without any clue of what you are doing.
[13:15:07] <pyzozord> and I don't think it really does push back to the stream it just got 1 char variable that it remembers that getc will use
[13:15:13] *** Joins: furrykef (~furrykef@ip68-229-199-137.ok.ok.cox.net)
[13:15:29] <Akronymus> It actually literally pushes it into the stream.
[13:16:09] <Akronymus> At least in the implementation I am looking at.
[13:16:16] <pyzozord> huh well I guess K&R wasn't too precise about that
[13:16:33] <Akronymus> Altough, the c++ ref says that it may not be portable behavious
[13:16:41] <Akronymus> s/behavious/behaviour
[13:16:54] *** Quits: furrykef (~furrykef@ip68-229-199-137.ok.ok.cox.net) (Read error: Connection reset by peer)
[13:17:13] *** Joins: furrykef (~furrykef@ip68-229-199-137.ok.ok.cox.net)
[13:23:10] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[13:23:30] *** Joins: independent_ (~independe@148.122.187.2)
[13:25:37] *** Quits: independent56 (~independe@148.122.187.2) (Ping timeout: 252 seconds)
[13:28:52] *** Quits: zwr (~zwr@2804:d45:b966:fb00:dba2:de2a:61cd:17bb) (Remote host closed the connection)
[13:30:13] *** Quits: independent_ (~independe@148.122.187.2) (Remote host closed the connection)
[13:32:29] *** Quits: soapsudsxx (~soapsudsx@141.193.188.138) (Remote host closed the connection)
[13:33:05] *** Joins: independent56 (~independe@148.122.187.2)
[13:33:48] *** Joins: elnavigator (~elnavigat@105.196.100.217)
[13:34:59] *** Joins: Citillara (~userid@user/citillara)
[13:35:10] *** Quits: audiocat (~audio@2603-8081-1801-3bb5-5f9b-6e20-c5b9-e309.res6.spectrum.com) (Ping timeout: 240 seconds)
[13:35:45] <pyzozord> anyone knows gdb? what's the difference between step, stepi, next, nexti? I thought that step is like "step into" and next is like "step over", but those -i variants are confusing me now
[13:37:40] *** Quits: Samian (~Sami@174.27.107.153) (Ping timeout: 250 seconds)
[13:38:17] *** Joins: mjbatty (~mjbatty@82.2.17.205)
[13:38:54] <Fleck> pyzozord: https://sourceware.org/gdb/onlinedocs/gdb/Continuing-and-Stepping.html
[13:38:55] <bayaz> Title: Continuing and Stepping (Debugging with GDB) 
[13:39:18] <piou> a line of C may be compiled to several assembly instructions. step is for stepping at the line level, stepi for stepping at the instruction level
[13:39:22] <piou> pyzozord: ^
[13:40:13] <pyzozord> ooh I get it, thanks
[13:40:33] <pyzozord> that's why I was typing stepi serveral times before it got inside the function
[13:41:10] *** Quits: elnavigator (~elnavigat@105.196.100.217) (Ping timeout: 240 seconds)
[13:41:30] *** Joins: elnavigator (~elnavigat@105.196.100.217)
[13:43:25] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Quit: Leaving)
[13:46:36] *** Joins: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk)
[13:46:36] *** Quits: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk) (Changing host)
[13:46:36] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[13:48:12] *** Joins: federico_it (~textual@151.95.116.125)
[13:48:27] *** Joins: usr123 (~usr123@27.255.222.55)
[13:48:53] *** Quits: kmq (~kmq@x4db35169.dyn.telefonica.de) (Remote host closed the connection)
[13:50:00] <Akronymus> anyone know a good windows debugger that allows me to debug precompiled, statically linked, stripped exes?
[13:50:31] <Akronymus> Oh, nvm
[13:50:37] <Akronymus> Apparently ghidra has one
[13:50:42] <Akronymus> https://ghidra-sre.org/releaseNotes_10.0beta.html
[13:50:43] <bayaz> Title: Ghidra: Release Notes 
[13:52:23] *** Joins: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:d9b9:ab65:5f0:bdea)
[13:52:28] *** Quits: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:d9b9:ab65:5f0:bdea) (Remote host closed the connection)
[13:53:09] *** Joins: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:a9f8:1d97:2b8f:e1ae)
[13:53:52] <piou> precompiled? Do you mean decompiled?
[13:54:06] <Akronymus> .exe form
[13:54:15] <Akronymus> As in already compiled
[13:54:20] <Akronymus> Without any source or symbols
[13:54:26] <Akronymus> Available to me
[13:55:31] <piou> Alright
[13:56:02] <Akronymus> But as I said, apparently ghidra now has a built in debugger
[13:56:05] <CuriousErnestBro> I forgot my phone at home
[13:56:15] * CuriousErnestBro is being super productive right now.
[13:56:21] <Akronymus> CuriousErnestBro are you doing irc at work? D:
[13:56:26] <piou> Yeah, ghidra/ida pro/ollydbg  are the main ones on windows
[13:56:52] <CuriousErnestBro> Akronymus I'm unemployed :D (school is starting in a week, I'm coding rust for fun. Actually I should be studying statistics)
[13:57:07] <CuriousErnestBro> It's on the planning for later today.
[13:57:22] <Akronymus> What country are you from?
[13:57:34] *** Joins: TechTest (uid283215@id-283215.tooting.irccloud.com)
[13:58:34] <CuriousErnestBro> Netherlands, you?
[13:59:15] <Akronymus> Austria
[13:59:18] <Akronymus> , europe
[13:59:24] <CuriousErnestBro> Nice.
[13:59:35] <CuriousErnestBro> They let you do IRC at work?
[14:00:05] * Akronymus shrugs
[14:00:25] <CuriousErnestBro> Y'all hiring? :P
[14:01:01] <sjmulder> no one even knows what IRC is any more
[14:01:21] <Akronymus> CuriousErnestBro companies usually trust you to do your job.
[14:01:24] <CuriousErnestBro> Actually, just got sent a part-time vacancy for JS with Potree.
[14:01:27] <mrig> Yay, got my git status on the command line now :)
[14:01:29] <Akronymus> >JS
[14:01:31] <Akronymus> run
[14:01:31] <sjmulder> that is to say, as long as irssi in a terminal doesn't look too much like Discord who'll notice?
[14:01:53] <CuriousErnestBro> Akronymus I looked Potree up, doesn't sound like much fun.
[14:02:04] <biberu> javascript and they care if you irc?
[14:02:31] <Akronymus> CuriousErnestBro still better than "Progress/ABL/OpenEdge"
[14:02:42] <Akronymus> All 3 are the same language just renamed
[14:03:25] <CuriousErnestBro> I probably shouldn't be working next to my studies, but my mom urges me to do a part-time job.
[14:03:36] <pyzozord> mrig: what did you use in the end?
[14:03:43] <CuriousErnestBro> Historically I haven't been a good student, so I'm not sure whether that's a good idea.
[14:04:32] *** Quits: jaysicks (~jaysicks@212-40-83-106.pool.digikabel.hu) (Ping timeout: 250 seconds)
[14:04:37] <sjmulder> plenty of time to chat while you webpack eh
[14:04:50] <mrig> pyzozord: I found an example that tests the output of the pipe for a character, and fed git status --short into that.
[14:05:12] <pyzozord> mrig: sounds good, the simpler the better
[14:05:31] <mrig> pyzozord: took a while to figure out how to use colours in sed output, not happy yet with that as it is only GUN sed compliant, did discover tput though.
[14:05:41] <mrig> GNU rather
[14:05:42] <pyzozord> mrig: I didn't suggest git status --short because I thought I'll reject it as too simple
[14:06:19] <mrig> all I wanted was to colour the branch name if there is one, and this seems fine for that. :)
[14:06:37] <pyzozord> mrig: that sounds like a lot of trouble why not just printf (1) with escape sequences?
[14:06:56] <mrig> oh printf inline?
[14:06:58] <mrig> in sed?
[14:07:10] *** Quits: kobalt (~rsonx@user/kobalt) (Ping timeout: 245 seconds)
[14:07:25] <mrig> if that will achieve the same thing, then that sounds even better than calling some other application.
[14:07:46] <mrig> I must follow the shell scripting tutorial set that I have at some point.
[14:08:20] <pyzozord> not sure what you have there. I'd parse the git status --short with some tool you like, load that into a bash variable then print that variable like so printf '\e[1;34m%-6s\e[m' $mygitstatusparseddata
[14:08:56] <pyzozord> here you can find exactly what codes go for what colors https://en.wikipedia.org/wiki/ANSI_escape_code#CSI_(Control_Sequence_Introducer)_sequences
[14:08:57] <bayaz> Title: ANSI escape code - Wikipedia 
[14:10:20] <pyzozord> so I'd do something like mygitstatusparseddata="$(git status --short | sed/awk/wc/some_parsing)"; printf '\e[colorcode' $mygitstatusparseddata '\e[cleancode';
[14:10:22] <mrig> I've got the colours, not sure how to use printf yet though
[14:10:38] <mrig> I currently have the colour wrapping the output in a sed command
[14:10:46] <pyzozord> printf is like echo, I'm just not sure if echo will be ok with escape sequences
[14:11:11] *** Joins: argument (~0ptions@user/argument)
[14:11:14] <mrig> I did notice that you can use printf to send escape characters into a variable.
[14:11:28] <DPA> Depends. On posix shell, yes. On bash, no.
[14:11:41] <GeDaMo> echo -e will interpret C style escape characters like \e for 'ESC'
[14:11:50] *** Joins: nevoyu (~joshua@cpe-192-180-19-146.kya.res.rr.com)
[14:12:00] <DPA> Only on bach, though, not in posix shell.
[14:12:03] <DPA> *bash
[14:12:53] <mrig> would you recommend tput here?
[14:13:08] <mrig> as a way to get around the context dependant stuff?
[14:13:28] <argument> When using feature branches, if you have sub tickets of a feature that you finish, is it common to merge them into master before the actual feature being finished? Just wondering if it can take a week to finish a feature, if it's better to merge it incrementally to master or when all the subtickets are finished and the feature is fully done
[14:14:06] <pyzozord> mrig: I wouldn't unless you want it to work on very strange terminals, just assume you work on vt100 compatible emulators and just write the codes
[14:14:30] <DPA> Depends. If it's just \r\n\t, I'd use printf, for terminal specific things, if possible, tput. 
[14:14:53] <pyzozord> actually not even vt1000, just assume xterm support. That's what I do
[14:16:35] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[14:16:54] <DPA> And then someday, install st and wonder why it all falls apart.
[14:17:45] *** Joins: jaysicks (~jaysicks@82-131-226-33.pool.digikabel.hu)
[14:17:51] <pyzozord> well yeah all of xterm maybe a bit too much, but the color stuff should be just fine
[14:18:59] <mrig> It's just than I'm using the \x1b gnu escape at the moment, did not seem ideal
[14:19:10] *** Quits: elnavigator (~elnavigat@105.196.100.217) (Ping timeout: 240 seconds)
[14:19:18] <mrig> oh well, it works anyhow.
[14:19:24] <mrig> here ...
[14:20:07] <pyzozord> is \x1b a some kind of gnu extension? I thought it's just hex for ^[ which is standard escape sequence control character
[14:20:26] <GeDaMo> I think that's standard C
[14:20:54] <pyzozord> I also think \x1b is ok
[14:21:10] *** Joins: BrianG61UK__ (~BrianG61U@82-69-89-71.dsl.in-addr.zen.co.uk)
[14:21:42] <GeDaMo> https://en.cppreference.com/w/c/language/escape
[14:21:43] <bayaz> Title: Escape sequences - cppreference.com 
[14:22:04] <jelly> \e is also standard C
[14:22:53] *** Joins: rsx (~dummy@ppp-188-174-138-96.dynamic.mnet-online.de)
[14:22:58] <GeDaMo> It's not on that page
[14:22:58] <jelly> or maybe not
[14:23:17] <vdamewood> jelly: it's not.
[14:23:30] <jelly> damn you, EBCDIC
[14:23:49] *** Quits: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler) (Ping timeout: 244 seconds)
[14:24:27] *** Quits: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:a9f8:1d97:2b8f:e1ae) (Ping timeout: 240 seconds)
[14:24:55] <pyzozord> nvi displayes those characters as ^[ so I litearlly just type the real character ^[ into strings
[14:24:55] <Akronymus> jelly did I miss something?
[14:24:57] *** Joins: nekodesu (~bit@user/nekobit)
[14:25:04] *** Joins: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:5987:4a4a:65b7:c0a)
[14:25:04] *** Quits: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:5987:4a4a:65b7:c0a) (Client Quit)
[14:25:14] *** Joins: jazzy (~jaziz@2600:380:8773:c113:1093:1c01:217f:efb2)
[14:27:13] *** Quits: BrianG61UK__ (~BrianG61U@82-69-89-71.dsl.in-addr.zen.co.uk) (Ping timeout: 252 seconds)
[14:27:55] <jelly> tput is probably the only safe way to get the correct escape codes in a language that doesn't have its own terminfo/termcap bindings (ie sed)
[14:27:56] *** Joins: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:605b:1c39:dd7:be2a)
[14:28:01] <DPA> For C stuff, I'd use curses / terminfo.
[14:28:02] <pyzozord> ugh why does libsdl2-doc package requires 300mb of dependencies...
[14:28:25] *** Joins: elnavigator (~elnavigat@105.196.100.217)
[14:28:37] <mrig> jelly: seems to be written for this kind of job.
[14:30:00] <pyzozord> I personally thing that these tools are needless complexity if you dont care about crossplatfrom compatibility. Printing escape codes personally is just fine. But I won't be pushing my agenda
[14:32:27] *** Quits: independent56 (~independe@148.122.187.2) (Ping timeout: 240 seconds)
[14:33:15] <jelly> you don't care, but someone else may use the tool in a different environment
[14:33:23] <DPA> Directly using escape sequences is just code obfuscation & sabotaging ones a program. Just do it right if possible. It's not more typing work, and much more self explanatory, especially when using the long names.
[14:33:51] <jelly> I disagree it's obfu, but it's needless hardcoding
[14:34:52] <pyzozord> I see it the other way, as needless dependency on more code. As long as it's just a small script designed for personal use. It doesn't need to be engineered, it can be hacked
[14:34:56] <pyzozord> and simple
[14:35:13] <mrig> hum, how do you include a variable within a sed expression in sh?
[14:35:37] <vdamewood> pyzozord: Which distro? (re libsql2-doc)
[14:35:39] <mrig> I'm thinking that learning posix sh is wiser than going full bash at them moment.
[14:35:44] <vdamewood> err sdl
[14:35:45] <jelly> what do you mean, also, which sed flavor
[14:35:48] <pyzozord> mrig: sed "sedcommands $mybashvar more sed commands"
[14:35:54] <pyzozord> vdamewood: ubuntu 20.04
[14:36:05] <deniska> pyzozord: complain to debian/ubuntu, not to us :D
[14:36:13] <mrig> jelly: well I have one example of this being done, and it does not work on my setup :)
[14:36:24] <mrig> as for which there are, I honestly do not know.
[14:36:24] *** Joins: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler)
[14:36:26] <deniska> pyzozord: but yeah, anything involving any sort of typography is going to be big if you want it rendered
[14:36:35] <pyzozord> vdamewood: requires all kinds of bs like libjquery some libjavascript? wth is all that crap. I refused to install this. I'm looking for pdf online now.
[14:36:39] <mrig> gnu sed
[14:36:41] <mrig> that I know
[14:37:14] <mrig> its a bashrc, so must be bash, but that should not stop me from using the sh subset.
[14:37:43] <vdamewood> pyzozord: Yeah, I think I can see two packages that are logical for a -doc package to require, texinfo and man. Other than that, they should just be regular HTML and PDF files capable of being rendered in a normal browser or PDF viewer.
[14:38:29] <pyzozord> vdamewood: fully agree. I don't need -doc packages to be compiling and typestting things on my machine. I just want to read the docs.
[14:39:11] <vdamewood> Yeah, sounds like this is the doc source and not a readable copy.
[14:39:45] <pyzozord> I'm not a fan of complexity, it seems rampid though, people add it everywhere without care, it's almost like they think it's good to add more layers
[14:39:47] *** Quits: elnavigator (~elnavigat@105.196.100.217) (Ping timeout: 240 seconds)
[14:40:07] * mrig takes a machete to the jungle of lineages.
[14:40:07] <pyzozord> even when the layers don't bring much value
[14:40:19] *** Joins: zaher (~zaher@37.48.144.142)
[14:40:30] <vdamewood> pyzozord: I've noticed that a lot of complexity comes from people want to make things easier and not knowing the 'standard' way to do something.
[14:41:07] <mrig> that is a wonderful facet of me-me culture, that does not understand the nature of growth.
[14:41:08] <pyzozord> yeah keeping things simple is not easy, it requires more effort
[14:41:20] <mrig> no dharma :P
[14:42:41] <pyzozord> I found https://wiki.libsdl.org/static_files/offline/sdlwiki.zip. I'll just unpack it in /usr/share/doc and will be happy with it
[14:43:05] <mrig> If the standard ways of doing things are not logical, then this will just keep on going until some logic that is worth keeping is found.
[14:43:40] <mrig> might take some time, but it is bound to happen.
[14:43:42] <vdamewood> I think one of the big ways I see that manifest is whne Unix developers who don't understand Windows development try to port to Windows and basically reinvent the Unix experience on Windows rather than learn how WIndows actually does its things.
[14:43:57] <vdamewood> s/whne/when/
[14:44:09] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:70b0:8bd4:3605:ce5c) (Quit: Textual IRC Client: www.textualapp.com)
[14:44:26] *** Joins: Atque (~Atque@user/atque)
[14:44:51] <DPA> Abstraction can be a valid way to make things simpler. People just often use the wrong tools, and want things to do all and everything imaginable, instead of just one thing.
[14:44:52] <DPA> It's really annoying when JS or worse, JS + jQuery, is used, when it could be done with simple CSS. CSS is very powerful. Here is some tic-tac-toe, all without any JS: https://dpa.li/tic-tac-toe.html
[14:44:54] <bayaz> Title: Tic-Tac-Toe 
[14:45:36] <mrig> windows would probably be obsolete if posix had been applied.
[14:45:39] <pyzozord> Yeah I can imagine that happening. Doing things the "local" way, takes more effort. You need to learn local customs. It's not a simple translation. You say certain things in polish that you say completly differently in english. There are different concerns. Even some things you just don't say.
[14:46:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 248 seconds)
[14:46:03] *** Joins: elnavigator (~elnavigat@105.196.100.217)
[14:46:40] <mrig> DPA: oh that's really cool, did not know that much CSS existed.
[14:46:42] <pyzozord> For example when I'm talking about my friend and say "My friend gave me this book". In polish this signals also gender of my friend. In english I'd intentionally add 'She really recommends it' or something. 
[14:46:53] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:46:57] <jelly> mrig, does not work how?  blue=$(tput setaf 4); red=$(tput setaf 1); printf "a\nb\nc\nd\n"|sed "1s/^/$red/; 3s/^/$blue/"
[14:47:18] <vdamewood> pyzozord: Yeah, a word-for-word translation doesn't always work. For example, many people who speak Romantic languages as their native language will as "How do you call [something]." And that doesn't make sense in English because we ask "what" something is called, not "how" it's called.
[14:47:51] <jelly> also, there's a #bash channel for shell expansion details, and also a #sed
[14:48:37] *** Quits: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler) (Ping timeout: 244 seconds)
[14:50:04] <vdamewood> The logical answer in ENglish to "How do you call your dog?" is "I yell his name."
[14:50:08] <CyberTailor> man bash, man sed
[14:50:34] <pyzozord> vdamewood: I'd go as far as "word for word translation, almost never works". You can't keep your old self in new environment, you need to make a new self that works well in the new environment
[14:50:40] <vdamewood> man bash is actually readlly terrible.
[14:50:44] <vdamewood> realy
[14:50:49] <vdamewood> really, dammit.
[14:50:59] <pyzozord> info bash is quite good
[14:51:12] * arahael loves it, though hasn't actually used it in anger yet.
[14:51:37] <arahael> Oops - typo
[14:52:12] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[14:52:23] <vdamewood> pyzozord: Yeah, It also doesn't help that what a 'word' is isn't consistent across languages, and the way two languages build meaningful sentences might be completely different.
[14:52:47] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:53:12] <vdamewood> pyzozord: For example, many languages will leave the subject out of a sentence entirely because the verb implies it. So a language might have three seprate words while another will have a prefix, a root, and a suffix.
[14:53:25] *** Joins: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler)
[14:53:49] <vdamewood> Japanese leaves the subject out of a sentence just for fun; the verb doesn't imply the subject.
[14:54:23] *** Quits: nekodesu (~bit@user/nekobit) (Quit: uninstall gentoo)
[14:55:23] *** Quits: Raguile (~Raguile@user/raguile) (Ping timeout: 256 seconds)
[14:55:38] <mrig> jelly: Ive this at the moment : https://termbin.com/b2sc
[14:55:40] <bayaz> Type: text/plain; charset=utf-8 
[14:56:14] <mrig> jelly: thanks for the channel pointers will ask about.
[14:57:01] *** Quits: usr123 (~usr123@27.255.222.55) (Read error: Connection reset by peer)
[14:57:16] <pyzozord> mrig: looks good. I would do those git | sed things to just wrap the output in color codes. I'd do something like `printf "color code" $(git command) "coolor code clean"`
[14:57:25] *** Joins: usr123 (~usr123@49.156.64.184)
[14:57:47] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[14:57:49] *** Joins: zaher_ (~zaher@37.48.181.72)
[14:57:57] <mrig> well without the double declaration of the variable, that was me considering pasting two lines. :)
[14:58:33] *** Retr0id6 is now known as Retr0id
[14:58:38] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:59:00] <pyzozord> oh nice, didn't know what od does
[14:59:02] <mrig> pyzozord: oh in the line that calls the git function?
[14:59:03] <jelly> mrig, * does not make sense at the beginning of a regexp
[14:59:21] *** Quits: zaher (~zaher@37.48.144.142) (Ping timeout: 248 seconds)
[14:59:38] <pyzozord> mrig: in these lines "git branch 2> /dev/null | sed -e (...)"
[14:59:57] *** Joins: Lyn (~Lyn@user/law)
[14:59:58] <jelly> mrig, what was this supposed to match, a actual * character, space, then stuff? s/* \(.*\)/[\x1b[38;5;9m\1\x1b[0m]/
[15:01:16] <mrig> jelly: this was lifted from a duckduckgo search, had not considered it further than the assumption that it was selecting all that exists before, but now that you mention it I see that this is redundant in sed.
[15:01:27] <mrig> pyzozord: oh right.
[15:01:28] <pyzozord> I'm not sure what /^[^*]/ and /* \(.*\)/ do. But the first one kind of looks like "delete empty lines" and second one looks like "wrap everything with color codes"
[15:01:41] <pikapika> pyzozord, hi uwu
[15:01:49] <jelly> ^[^*] are lines that start with a not-* character
[15:01:51] *** Joins: nekodesu (~bit@user/nekobit)
[15:02:33] <pyzozord> so I'd just `printf "color code" $(git command | sed -e 'remove empty lines') "clean color code"` seems more readable to me
[15:02:38] <jelly> /* \(.*\)/ is nonsense, I'm kind of surprised GNU sed accepted it
[15:02:39] <pyzozord> pikapika: hello
[15:02:41] <mrig> Id though that it was removing the first word.
[15:03:23] *** Parts: argument (~0ptions@user/argument) (WeeChat 1.9.1)
[15:03:47] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[15:03:56] <pyzozord> yeah unix regexp are annoying especially the non-extended version
[15:04:22] <Akronymus> No lookaheads/behinds sounds scary
[15:04:29] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:04:35] <jelly> if you have GNU sed and are using subexpressions, might as well tell it -r and they you don't have to escape () in (.*)
[15:05:08] <jelly> Akronymus, one doesn't parse scarily complex inputs with sed and awk.
[15:05:09] *** Quits: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler) (Ping timeout: 244 seconds)
[15:05:25] <pikapika> awk has branching and loops
[15:05:27] *** Quits: nvmd (~nvmd@user/nvmd) (Ping timeout: 268 seconds)
[15:05:31] <pikapika> its much like a general programming language
[15:05:39] <jelly> so lookaheads etc are rarely desired
[15:06:04] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[15:06:05] <mrig> jelly: it is selecting the output of the git command that starts with an asterix
[15:06:13] <Akronymus> Oh ok, for sed I can understand not having em
[15:06:16] <mrig> and it is working
[15:06:44] <Thedarkb1> You use sed to fix thousands of broken paths in a database, or something like that.
[15:06:51] <Thedarkb1> *predictably broken
[15:06:59] <jelly> mrig, if you want a line that starts with an asterisk, /^\*...
[15:07:50] <jelly> I guess * is special cased as normal character if at the beginning of the regex, but that's honestly weird
[15:08:08] <Akronymus> Do unix regexes have lazy/possesive quantifiers?
[15:08:26] <pyzozord> mrig: I feel like I accidentally pressured you to learn bash while all you wanted was colored git output
[15:08:26] <jelly> no suchthing as "unix" regexes
[15:08:56] <mrig> jelly: Oh I see what you mean, why did it not balk, well it is not greedy and stoped at the space, selecting everything, I would imagine.
[15:09:01] <Akronymus> [12:33:56] <pyzozord> yeah unix regexp are annoying especially the non-extended version
[15:09:03] <jelly> extended RE syntax, and perl RE and perl-comatible RE do have lazy 
[15:09:07] <mrig> pyzozord: hah
[15:09:16] <jelly> sed -r uses ERE.
[15:09:23] <mrig> bash or sh are on my list of things to do.
[15:09:27] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[15:09:36] <mrig> I am going to need more lifetimes to complete it :D
[15:09:36] <pyzozord> mrig: sorry about that feel free to drop it and come back when you have time for it
[15:10:01] <Akronymus> I use possesive quantifiers rarely.
[15:10:08] <Akronymus> But when I do, they save my ass.
[15:10:13] <mrig> I am just trying to make the script that I've written such that it would also work on BSD
[15:10:21] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:10:28] <mrig> that was my logic
[15:10:44] <GeDaMo> GNU grep -P uses Perl regexes
[15:11:01] <mrig> love GNU too, but get really confused by all the extra stuff.
[15:11:25] * mrig is easily confused.
[15:11:54] *** Joins: varaindemian (uid73404@id-73404.charlton.irccloud.com)
[15:12:17] <mrig> oh I remember now that sed on gnu is quite different, things like the backup and -i flags too
[15:12:18] <pyzozord> yeah it's way too much to take all in in one hour... I've been reading man and info pages for months
[15:13:15] <pyzozord> and asking a lot in #bash, and getting 'bashed' for asking stupid questions :P
[15:13:54] <mrig> It is the thought of the extra work required if I dont fix it now, to load everything into mind that I have now, should the case arrive that I switch systems and have a long list of things that are broken.
[15:14:04] <mrig> pyzozord: oh I would not take that for 2 mins
[15:14:23] * mrig takes out machete and wonders into the jungle.
[15:15:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[15:16:31] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:17:06] * vdamewood wonders aas he wanders.
[15:17:09] <pyzozord> mrig: it's ok as long as there is more "i want to help you" than "i know more than you". Actually I didn't detect any "I know more than you" but I detected noticable amounts of "that is a irritatingly stupid question"
[15:17:12] <vdamewood> s/aas/as/
[15:18:05] <pyzozord> which I am willing to understand given certain personality type and someone who's been helping for years and years answering the same questions
[15:18:55] <pyzozord> although I wish never to become jaded like this
[15:19:28] <jelly> tput and $() will probably work on BSD; sed might be different
[15:20:11] <Akronymus> pyzozord were you here when smallville and I did the whole calculate child position/size thing?
[15:20:45] <pyzozord> Akronymus: I remember him asking about things around 2d geometry for few days but I wasn't following closely
[15:21:22] <Akronymus> That was a case of me being extremely frustrated. Altough I tried to not let it show.
[15:21:24] <vdamewood> So... is someone actually doing something in not-GNU to warrant BSD compatibility?
[15:21:58] <Akronymus> I helped anyways, because it was IMO just the right thing to do.
[15:22:35] <pyzozord> Akronymus: I gave up on helping him while earlier because I felt frustrated too. He seemed to be demanding for all the work to be done for him. I didn't see any frustration from you, and I was actually impressed that you kept helping him for so long
[15:23:18] <Akronymus> For me, it seemed more that he just didn't /get/ it.
[15:23:24] <Akronymus> That's why I stuck with it.
[15:23:44] <pyzozord> Well yeah repeating yourself a thousand times is frustrating too for sure
[15:23:59] <deniska> At some point someone has to give up…
[15:24:00] <pyzozord> And sometimes, it's nobody's fault
[15:25:02] <pyzozord> So I have some understanding for people who are harsher, as long the underlaying intention is to help
[15:25:03] <vdamewood> Whenever I need to blame someone I blame San Andreas. It'a always San Andreas Fault.
[15:25:38] <Akronymus> vdamewood hey, there's the door for that pun: /quit
[15:25:39] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[15:26:08] <pyzozord> I might be too european to get that pun :D
[15:26:16] <pyzozord> *too eastern-europan
[15:26:45] <Akronymus> The san andreas fault is a well known active tectonic  region
[15:26:53] <vdamewood> pyzozord: The "San Andreas Fault" is a geological fault running through Southern California.
[15:27:22] <vdamewood> pyzozord: It's famous for basically being able to wipe out all of Los Angeles if it goes.
[15:27:47] <pyzozord> oh wow, did not know that "fault" is also a geological term
[15:28:19] <CuriousErnestBro> HS256 for session validation is good enough?
[15:28:37] <vdamewood> Where I live, you learn what a 'fault line' is at a young age. We have a few of them.
[15:28:49] <Akronymus> Just use AES4096 /s CuriousErnestBro
[15:30:07] <vdamewood> Maybe the channel rules should be updated to say "Everyone must tolerate vdamewood's puns."
[15:30:27] <CuriousErnestBro> vdamewood I don't get it.
[15:30:38] <vdamewood> CuriousErnestBro: Don't get which?
[15:30:52] <CuriousErnestBro>  Where I live, you learn what a 'fault line' is at a young age. We have a few of them.
[15:30:53] <CuriousErnestBro> The joke.
[15:31:33] <vdamewood> CuriousErnestBro: Not a joke.
[15:32:08] <CuriousErnestBro> Why did you say "puns" then?
[15:32:22] <vdamewood> CuriousErnestBro: Look a little further up.
[15:32:34] <Belxjander> vdamewood: just don't throw too many strawberries... otherwise its just an empty plastic container... but what strawberries do you have a 'pun'net of again?
[15:33:00] <CuriousErnestBro> I see.
[15:33:07] <Belxjander> vdamewood: :-P
[15:33:17] <vdamewood> Belxjander: I don't get it.
[15:33:30] <Akronymus> Belxjander you don't pick strawberries yourself?
[15:33:40] *** Joins: Guest12 (~Guest12@188.241.100.33)
[15:34:02] <vdamewood> Akronymus: For not liking my jokes, you will be pun-ished.
[15:34:19] <Akronymus> I didn't say I don't like them.
[15:34:26] <Akronymus> I just showed you the door.
[15:34:29] <Belxjander> vdamewood: another punnet of strawberries then?
[15:35:12] <vdamewood> Belxjander: Eh, apparently I didn't know the word 'punnet' was a thing.
[15:35:14] <Belxjander> vdamewood: "a pun-net" is a plastic container of strawberries in New Zealand... is it not a known term elsewhere?
[15:35:27] <GeDaMo> It is
[15:36:09] *** Parts: Guest12 (~Guest12@188.241.100.33) ()
[15:36:09] <Belxjander> then again... NZ english is majority UK English with a mashup of Americanisms and a few extra things from Australia next door as well as home-grown...
[15:37:14] <Akronymus> Belxjander lets put another shrimp on the barbie?
[15:37:39] <vdamewood> How do you spell /lori/ as in the thing you use to transport goods on the road?
[15:37:46] <GeDaMo> Lorry
[15:38:17] <Belxjander> Akronymus: thats australian... and usually said with a cheesy smile to get the accent right
[15:38:25] <Akronymus> yanny vdamewood
[15:38:30] <Belxjander> vdamewood: >> Lorry <<
[15:38:31] <arahael> Belxjander: Not actually Australian.
[15:39:05] <Belxjander> arahael: it isn't?,   only ever heard australians say that though
[15:39:14] <vdamewood> Okay, My US-English dictionary has punnet in it, bu tit also has Lorry (which is definitely not a US-English word), so its presence in my dictionary means nothing.
[15:39:25] <vdamewood> s/bu tit/but it/
[15:39:49] <arahael> Belxjander: It's not /normal/ australian, it was popularised by certain movies, and I don't think we'd ever say that amongst locals.
[15:40:18] <arahael> vdamewood: Punnets and Lorrys are different.
[15:40:30] <Akronymus> arahael I was indeed referencing the dumber and dumber movies
[15:40:50] <arahael> Akronymus: For one thing, we don't even refer to prawns as "shrimp".
[15:40:51] <Akronymus> specifically that scene, because it was located in austria, apparently.
[15:41:25] <vdamewood> arahael: That was in response to Belxjander wonderinf if Punnet was a NZ-specific word. I consulted a US-English dictionary to look it up, and when Belxjander wondered about the 'enzedness' of 'Punnet' I looked up Lorry as a control to see if my dictionary was US-only.
[15:41:49] <arahael> vdamewood: Ah, fair enough
[15:41:51] <vdamewood> Maybe I should have spelled'enzedness' as 'NZness'.
[15:42:13] <arahael> Definitely. :)
[15:42:14] *** Joins: pulse (~pulse@user/pulse)
[15:42:49] <arahael> Man, I'm so grumpy today.  Very tired - just got vaccinated yesterday, so that's awesome.
[15:42:56] <arahael> And my arm hurts.
[15:43:03] <vdamewood> And it looks like, despite being the authority on American English, my dictionary does contain commonwealth words.
[15:43:11] <pyzozord> arahael: congrats :)
[15:43:14] <arahael> vdamewood: You don't use the apple dictionary?
[15:43:21] <arahael> Whatever dictionary is included in macos.
[15:43:27] <vdamewood> arahael: Not for English, no.
[15:43:30] *** Quits: pandakekok9 (~job@wikimedia-commons/pandakekok9) (Remote host closed the connection)
[15:43:48] <arahael> pyzozord: Thanks. :)
[15:44:29] <vdamewood> arahael: I use https://www.merriam-webster.com/
[15:44:32] <bayaz> Title: Dictionary by Merriam-Webster: America's most-trusted online dictionary 
[15:44:33] <Belxjander> back later
[15:44:39] *** Joins: jjido (~Denis@2a01:4b00:80e2:7100:94f3:a79f:8eb9:c547)
[15:44:40] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Quit: AmigaOS PPC 4.1 +E +U1 // AmIRC 68K)
[15:44:56] <arahael> vdamewood: Ah, I usually use oxford english.
[15:45:14] <Akronymus> I have learned oxford english in school.
[15:45:17] <vdamewood> Yeah, I consider OED the Highest authority on English in general.
[15:45:30] *** Quits: elnavigator (~elnavigat@105.196.100.217) (Ping timeout: 250 seconds)
[15:45:32] <arahael> So why do you use merriam-webster, then? ;)
[15:45:39] <Akronymus> But during the years since then I adopted a LOT of american phrases.
[15:45:46] <Akronymus> And/or slang.
[15:45:55] <vdamewood> arahael: OED isn't free, and other things released by Oxford aren't the OED.
[15:46:07] <arahael> Ah, fair enough, but it comes with my computer.
[15:46:21] <vdamewood> arahael: I got the "New Oxford American Dictionary"
[15:46:54] <vdamewood> arahael: Also, I consider M-W the authority on American English.
[15:47:06] <arahael> Fair enough.
[15:48:00] *** Joins: elnavigator (~elnavigat@105.196.100.217)
[15:48:06] <vdamewood> arahael: Also, the guy who contributed the W to its name is the reason American English has different spelling from the Commonwealth.
[15:48:35] *** zaher_ is now known as zaher
[15:49:17] <pyzozord> Ah yess lazyfoo.net. I remeber learning from this website SDL 15 years ago. Still by far the best SDL tutorial out there :)
[15:50:04] *** Joins: mobidrop (~mobidrop@user/mobidrop)
[15:50:14] *** Joins: rifl (~user@user/rifl)
[15:50:24] <vdamewood> Man I wish I could have gotten a 2010 edition of Encyclopedia Britannica.
[15:53:01] <mrig> Oh my poor syntax highlighting, trying to keep up with the bash mixed with command line aps :)
[15:53:55] <mrig> ah some spurious brackets, were not making life easy for it.
[15:54:19] <mrig> pyzozord: Oh I did those some years back, they are great.
[15:54:31] *** Quits: zaher (~zaher@37.48.181.72) (Quit: Leaving)
[15:54:36] *** Quits: elnavigator (~elnavigat@105.196.100.217) (Ping timeout: 250 seconds)
[15:54:55] *** Joins: zaher (~zaher@37.48.181.72)
[15:55:14] <pulse> good morning keyboard magicians
[15:55:30] <pyzozord> I looked up some tutorial recommended by the official sdl wiki and they are all just terrible comparing to lazyfoo, no idea why isn't lazy foo the first official recommendation
[15:56:13] * pyzozord types "wingardium leviosa" at pulse
[15:56:51] <pulse> what does that do :o
[15:57:12] <pyzozord> well you should be floating in the air now
[15:58:02] <pulse> i'm not, but i guess that explains the gnomes that popped up all around me
[15:58:20] <pyzozord> ah yes, I got few broken keys on my keyboard...
[15:59:19] <pyzozord> as long as you don't vomit snails, I think we are good. Just kill the gnomes
[15:59:23] <vdamewood> pyzozord: You're saying it wrong, It's leviosa nor leviosa.
[15:59:34] <vdamewood> s/nor/not/
[16:00:00] <mrig> morning pulse :)
[16:00:07] <vdamewood> Why kill the gnomes when you can enslave them?
[16:00:09] <pyzozord> if you did not read/watch harry potter you have grown up in a very different generation than me
[16:00:29] <Akronymus> Harry potter kinda sucks IMO.
[16:00:38] <Akronymus> Just use a gun
[16:00:43] <mrig> vdamewood: who said anything about killing?
[16:00:52] <pyzozord> I was lucky enough to read each book being the same age as harry +/- one or two years
[16:00:55] <vdamewood> mrig: pyzozord did.
[16:01:08] <mrig> oh so he did!
[16:01:10] <Akronymus> Also why teach kids potions where a small mstake can lead to life threatening injuries?
[16:01:15] <password2> how do i fly to scholl with a gun?
[16:01:17] <Akronymus> Without so much as PPE.
[16:01:17] <mrig> pyzozord: what you got against gnomes?
[16:01:19] <password2> school
[16:01:20] <password2> lol
[16:01:37] <pyzozord> mrig: they are just little trolls, aren't they?
[16:01:38] <Akronymus> password2 ah yes, broom flying
[16:01:42] <vdamewood> Did hogwarts assign gnomework?
[16:01:43] <Akronymus> Which is useful
[16:01:51] <Akronymus> But quidditch is a fucking awful game.
[16:01:57] <Akronymus> Only the snatch actually matters.
[16:02:00] <password2> there is mention of gnomes in the books
[16:02:05] <mrig> pyzozord: well, the world needs trolls too, who else are you going to get to guard your bridges?
[16:02:06] *** Joins: elnavigator (~elnavigat@105.196.100.217)
[16:02:13] <pulse> hai mrig and all
[16:02:14] <password2> them being a very tought and irretating garden pest
[16:02:14] * pulse waves
[16:02:17] <vdamewood> There's a troll in the dungeon!
[16:02:30] <Akronymus> anyways, for a AWESOME story involving magic: pact by wildbow
[16:02:33] <password2> you just throw them as far as you can to get them out of your garden
[16:02:40] <Akronymus> And/or worm by the same author
[16:03:11] * mrig builds a bridge out of knowledge gleaned.
[16:03:11] <password2> only snatch matter , just like in real life?
[16:03:23] <Akronymus> https://pactwebserial.wordpress.com/ https://parahumans.wordpress.com/
[16:03:23] <bayaz> Title: Pact 
[16:03:24] <bayaz> Title: Worm 
[16:03:27] <Akronymus> Oh, snitch in english
[16:03:34] <password2> LAWL
[16:03:44] <Akronymus> I was thinking of the german version where it was "schnatz"
[16:04:16] <mrig> that sounds very schnatzyC!
[16:04:18] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[16:04:25] *** Quits: zaher (~zaher@37.48.181.72) (Ping timeout: 248 seconds)
[16:04:25] <password2> lel
[16:04:29] *** Joins: zaher_ (~zaher@37.48.187.35)
[16:04:41] <password2> sorry ima be a kid and laugh at your typo some more
[16:05:20] <Akronymus> Not typo.
[16:05:23] <Akronymus> Mistranslation
[16:05:55] <password2> yeah yeah yeah , still hilarious
[16:05:56] <Akronymus> Typo would be accidentally hitting the wrong kry
[16:06:07] <Akronymus> (Note, that that was intentional)
[16:06:11] <password2> you accidentlally mistranslated :P
[16:06:41] <password2> I'm by no means a grammar nazi
[16:06:42] <arahael> If there's one thing I hate in a language, it's the compiler error messages when they're basically trying to guess what's wrong and failing.
[16:07:15] * vdamewood wonders if 'grammar nazi' was a thing before the 'soup nazi'.
[16:07:27] <Akronymus> arahael c++ templates?
[16:07:28] <password2> or if it tells you your code is wrong whilst you are coding
[16:07:39] <password2> Like FFS I AM STILL BUSY , WAIT A BIT
[16:07:45] <arahael> Akronymus: Swift.
[16:07:57] <Akronymus> I don't mind warnings/errors while writing.
[16:08:12] <Akronymus> As long as it still lets me type instead of doing a popup or something
[16:08:27] *** Quits: elnavigator (~elnavigat@105.196.100.217) (Ping timeout: 240 seconds)
[16:08:49] <arahael> Akronymus: Oh, swift has this marvelous thing when it remembers the errors from the previous compile, removes those errors when you hit 'compile' then re-displays them, then removes them, then updates them.
[16:08:58] <arahael> XCode, really.
[16:09:10] <Akronymus> ...
[16:09:36] <mrig> arahael: false positives worse than no data at all?
[16:10:10] <mrig> error handling is such a big part of programming.
[16:11:00] <arahael> mrig: A lot of the type system in swift seems to be undecidable and is polymorphic (exponential?), so it tries to *guess*, and if your code isn't already correctly-typed, those guesses can become... Stupid.
[16:11:08] <Akronymus> And exceptions are better than just returning some error value/setting a global error value.
[16:11:16] <Akronymus> And ADT's are MUCH better than either of those
[16:11:25] <mrig> arahael: oh right so just plain annoying.
[16:11:33] <password2> Akronymus well visual studios stuff breaks if the code you are writing breaks syntax
[16:11:40] *** DasBrain_ is now known as DasBrain
[16:11:41] *** Joins: sunbae (~euk@user/sunbae)
[16:11:45] <password2> liek it stops autocompleting
[16:11:49] <password2> which i HATE
[16:11:58] <Akronymus> Huh, never experienced that.
[16:12:06] <mrig> Oh, if I parse the output of git, I could have all sorts of info shown by different colours :)
[16:12:20] <password2> QT does it right though
[16:12:26] * mrig see's a need for parsers everywhere now.
[16:12:42] <password2> it will warn you of common issues , like infinite loops without you needing to compile
[16:12:54] <Akronymus> mrig ever tried a parser combinator?
[16:12:57] <password2> I'm a programmer , not a typist
[16:13:08] *** Joins: gaurav_ (~usr123@124.253.109.179)
[16:13:17] <mrig> Akronymus: not to my knowledge, but then I should admit that I've no idea what one is.
[16:13:21] *** Joins: Twipply (~Twipply@user/twipply)
[16:13:43] <Akronymus> https://en.wikipedia.org/wiki/Parser_combinator building a big parser out of lots of smaller ones
[16:13:44] <bayaz> Title: Parser combinator - Wikipedia 
[16:13:51] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Quit: leaving)
[16:14:47] *** Quits: ixil (~ixil@82.197.178.137) (Remote host closed the connection)
[16:14:48] <mrig> Akronymus: oh well I am using that for parsing svg at the moment, have a base xml parser from a library and am polishing the leaves with my own device.
[16:14:51] *** Quits: jjido (~Denis@2a01:4b00:80e2:7100:94f3:a79f:8eb9:c547) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[16:15:22] <mrig> Oh a function, right, cool. No Ive never tried that :)
[16:15:39] <Akronymus> For example, you have a parser for digits.
[16:15:51] <Akronymus> You can then combine that with a repeater parser.
[16:16:25] <Akronymus> Additionally a parser for signs (+,-) 
[16:16:27] *** Quits: usr123 (~usr123@49.156.64.184) (Ping timeout: 240 seconds)
[16:16:36] <Akronymus> That sign parser with an optional
[16:16:52] <Akronymus> And combine the optional with repeater to get base 10 ints
[16:17:00] <GeDaMo> That description of parser combinators reminds me of https://en.wikipedia.org/wiki/Function_representation used in solid modelling 
[16:17:00] <bayaz> Title: Function representation - Wikipedia 
[16:17:02] *** Joins: gggp (~textual@60.10.23.160)
[16:17:13] *** Quits: silasfox (~sbv@xdsl-87-78-57-101.nc.de) (Ping timeout: 252 seconds)
[16:17:41] <Akronymus> https://hackage.haskell.org/package/parsec probably the best known parser combinator
[16:17:42] <bayaz> Title: parsec: Monadic parser combinators 
[16:18:32] <arahael> Akronymus: s/known// ;)
[16:18:43] * arahael loves parsec.
[16:18:53] <arahael> Though, actually, usually I use megaparsec.
[16:18:56] *** Joins: silasfox (~sbv@cgn-89-1-215-99.nc.de)
[16:19:14] <Akronymus> arahael best known as in "best known" rather than "best, known"
[16:19:30] <Akronymus> s/"best known"/"well known"
[16:19:30] <pulse> simply the best, better than all the rest
[16:19:48] <vdamewood> Akronymus: best-known.
[16:20:38] <Akronymus> https://github.com/stephan-tolksdorf/fparsec this is one I use frequently.
[16:20:39] <bayaz> Title: GitHub - stephan-tolksdorf/fparsec: A parser combinator library for F# 
[16:20:47] <Akronymus> Technically it even works in c# afaik
[16:21:05] <Akronymus> https://github.com/bert2/FParsec.CSharp well, with a wrapper
[16:21:05] <bayaz> Title: GitHub - bert2/FParsec.CSharp: A thin C# wrapper for FParsec. 
[16:21:09] *** Joins: ixil (~ixil@82.197.178.137)
[16:21:25] <Akronymus> > While using FParsec from C# is entirely possible in theory, it is very awkward in practice. Most of FParsec's elegance is lost in translation due to C#'s inferior type inference and its lack of custom operators.
[16:21:37] <Akronymus> > C#'s inferior type inference
[16:21:41] <Akronymus> Understatement
[16:21:53] <arahael> Akronymus: Do they at least use linq?
[16:22:04] <Akronymus> No
[16:22:12] <arahael> Odd.
[16:22:21] <Akronymus> Because the whole parsec stuff is written to be FAST.
[16:22:56] <Akronymus> Often outperforming specialized handwritten parsers.
[16:23:25] *** Joins: elnavigator (~elnavigat@105.196.100.217)
[16:23:48] *** Joins: kobalt (~rsonx@user/kobalt)
[16:24:25] <Akronymus> https://stackoverflow.com/questions/4559399/can-parser-combinators-be-made-efficient/4560629
[16:24:26] <bayaz> Title: Can parser combinators be made efficient? 
[16:24:29] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[16:28:19] *** Joins: snake (~snake@user/snake)
[16:29:06] <pyzozord> Right, got 200x200 empty window. Now to figure out how to render fonts in sdl
[16:29:40] *** Quits: jack__d (~jack__d@pool-98-109-145-13.nwrknj.fios.verizon.net) (Ping timeout: 240 seconds)
[16:30:05] <vdamewood> sdl_ttf
[16:31:06] <vdamewood> oh, in case he's off looking at docs. pyzozord: ^
[16:31:30] *** Joins: jack__d (~jack__d@pool-98-109-145-13.nwrknj.fios.verizon.net)
[16:33:02] <pyzozord> Yep got that. Hope it can give me some basic font info too, need font weight and height to determing size of the window
[16:33:13] *** Joins: langstme (~langstme@user/langstme)
[16:33:50] <pyzozord> if not maybe I'll use https://github.com/nothings/stb
[16:33:51] <bayaz> Title: GitHub - nothings/stb: stb single-file public domain libraries for C/C++ 
[16:35:58] *** Quits: riff_IRC (~riff-IRC@user/riff-irc) (Read error: Connection reset by peer)
[16:36:47] *** Quits: gggp (~textual@60.10.23.160) (Ping timeout: 240 seconds)
[16:36:56] *** Quits: kobalt (~rsonx@user/kobalt) (Quit: quit)
[16:37:27] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[16:37:28] *** Joins: riff_IRC (~riff-IRC@user/riff-irc)
[16:37:45] *** Joins: gggp (~textual@60.10.23.160)
[16:38:22] *** ShockToh1 is now known as ShockTohp
[16:38:34] *** ShockTohp is now known as identify
[16:39:03] *** identify is now known as Guest7947
[16:39:56] *** Guest7947 is now known as ShockTohp
[16:42:15] *** Quits: gggp (~textual@60.10.23.160) (Client Quit)
[16:42:42] *** Quits: Thedarkb1 (~Thedarkb@185.69.144.255) (Ping timeout: 250 seconds)
[16:43:28] *** Joins: plastico (~plastico@neomutt/plastico)
[16:43:47] *** Quits: elnavigator (~elnavigat@105.196.100.217) (Ping timeout: 240 seconds)
[16:44:42] *** Joins: elnavigator (~elnavigat@105.196.100.217)
[16:45:58] *** Quits: amigojapan (uid86330@id-86330.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[16:50:40] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 240 seconds)
[16:54:20] *** InPhase_ is now known as InPhase
[16:58:07] *** Quits: elnavigator (~elnavigat@105.196.100.217) (Ping timeout: 240 seconds)
[17:03:36] *** Quits: derpadmin (~derpadmin@cloudbase2.200013.net) (Ping timeout: 258 seconds)
[17:06:48] *** Joins: amigojapan (uid86330@id-86330.brockwell.irccloud.com)
[17:06:50] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[17:06:51] <pyzozord> I can't find documentation for Xft library. Can anyone help figuring out what does "XftXlfdParse" do?
[17:07:13] *** Quits: TechTest (uid283215@id-283215.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[17:07:24] <pyzozord> That's big reason why I wanted to migrate xorg to sdl in the first place, it's just complex and seems to be completly missing documentation
[17:09:38] *** Quits: DasBrain (~DasBrain@user/dasbrain) (Killed (NickServ (GHOST command used by DasBrain_)))
[17:09:39] *** Joins: DasBrain_ (~DasBrain@user/dasbrain)
[17:11:44] <vdamewood> Food!
[17:11:58] *** Joins: elnavigator (~elnavigat@105.196.100.217)
[17:12:07] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[17:12:11] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[17:12:27] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[17:12:51] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[17:12:56] <password2> FOOOD
[17:13:45] *** Quits: nevoyu (~joshua@cpe-192-180-19-146.kya.res.rr.com) (Ping timeout: 248 seconds)
[17:14:47] *** Quits: gargus (~user@118.208.105.121) (Quit: Leaving)
[17:16:33] <vdamewood> Food and a half!
[17:16:37] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi)
[17:16:54] <pulse> foot?
[17:17:04] *** Joins: gggp (~textual@125.33.83.189)
[17:17:13] <vdamewood> I don't eat feet
[17:17:29] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[17:17:46] *** Joins: TechTest (uid283215@id-283215.tooting.irccloud.com)
[17:18:59] <pulse> but you still feed feet
[17:19:11] <pyzozord> ah I found something in the x11 docs. xlfd stands for X Logical Font Description
[17:19:37] <pulse> ah, x11. the only cold war relic that is still in widespread use
[17:19:44] *** Quits: sunbae (~euk@user/sunbae) (Quit: bye :D)
[17:21:13] <deniska> so is the rest of unix :)
[17:21:38] <vdamewood> Does anyone actually use Unix?
[17:21:50] <password2> nope
[17:22:00] *** Joins: kobalt (~rsonx@user/kobalt)
[17:22:33] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[17:23:33] <jelly> I hear some networking appliance/hardware vendors use *BSDs inside
[17:24:11] <jelly> freebsd is unix in this context, right?
[17:24:32] *** Joins: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net)
[17:24:39] <vdamewood> Most BSD's these days are based on 4.4BSD-Lite, which was stripped of AT7T code.
[17:24:49] <vdamewood> AT&T
[17:25:12] <jelly> but it walks like a duck and it quacks like a duck out of Berkeley
[17:25:45] <vdamewood> Given the context, no, it doesn't count.
[17:26:04] <vdamewood> After all, we're talking about cold war relics, and 4.4BSD was released after the end of the Cold War.
[17:26:20] <jelly> :-D
[17:26:30] *** Quits: gggp (~textual@125.33.83.189) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:26:55] *** Joins: jamea (~jamea@187.185.190.209)
[17:27:13] <sandman13> you are telling it as if 4.4BSD and X11 was something that was contested by both US and USSR :D
[17:28:11] *** Quits: pookie (~pookie@snf-137798.vm.okeanos.grnet.gr) (Quit: All for nothing)
[17:28:21] <pyzozord> right, sdl_ttf is amazing I don't need to care about any of that xorg crap
[17:30:32] <vdamewood> pyzozord: Have you also looked into _image, _mixer, and _net?
[17:30:56] <pulse> time to steam some hams
[17:31:05] *** Joins: Ecophobia (~Ecophobia@mobile-access-2e8407-96.dhcp.inet.fi)
[17:31:08] <pyzozord> vdamewood: I'll probably look into _image for this project if I have time left. I want to make animated gifs in the background of my terminal
[17:31:37] <vdamewood> pyzozord: Terminal? I guess there's no need for _mixer and _net, then.
[17:31:42] *** Joins: akevinhuang (~thekevinh@user/thekevinhuang)
[17:32:03] <pyzozord> vdamewood: yep, migrationd https://st.suckless.org/ from Xorg to SDL
[17:32:06] <bayaz> Title: st - simple terminal | suckless.org software that sucks less 
[17:32:12] <pyzozord> *migrating
[17:32:49] <vdamewood> You know that SDL itself is built on Xorg, right?
[17:33:02] <pulse> i will never understand people who use tiling managers
[17:33:02] <pyzozord> I do, I just don't want to deal with xorg
[17:33:48] <vdamewood> pyzozord: So, you're really picking SQL instead of GTK+ or Qt, go tit.
[17:33:53] <vdamewood> SDL*
[17:34:00] <vdamewood> and got it*
[17:34:14] <pyzozord> vdamewood: goes completly against what I've been claiming before about doing native stuff. But SDL is quite small and quite good. And it is cross platform
[17:34:46] <pyzozord> yep, also getting familiar with SDL makes it easier to make games in the future
[17:34:51] <vdamewood> pyzozord: They used DirectX to make the new Windows Terminal.
[17:35:36] <pyzozord> at the end of the day all these native os gui libraries use opengl/directx anyway
[17:36:05] <vdamewood> /metal
[17:36:57] <pyzozord> yeah I think vulkan doesn't count because noone except apple can afford to just migrate everything to a new library all at once
[17:37:05] *** Joins: AndrewYu (~andrew@user/andrewyu)
[17:37:13] <vdamewood> They actually didn't do that.
[17:37:26] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:bdb0:1299:ed93:e6f9)
[17:37:28] <vdamewood> It was a gradual process.
[17:38:46] <pyzozord> nice I can just TTF_GlyphMetrics() from SDL_TTF and I get all info about the font I ever want
[17:39:20] <pyzozord> think I will keep the libfontconfig though, since that just locates fonts in the system
[17:40:18] *** Quits: Ecophobia (~Ecophobia@mobile-access-2e8407-96.dhcp.inet.fi) (Quit: Leaving)
[17:43:04] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[17:45:59] *** Joins: nevoyu (~joshua@cpe-192-180-19-146.kya.res.rr.com)
[17:46:10] *** Joins: Ecophobia (~Ecophobia@mobile-access-2e8407-96.dhcp.inet.fi)
[17:46:13] <pyzozord> I love unnamed scoped blocks. Just adding { and } in your code for some stuff is so useful, especially during development
[17:46:43] *** Joins: jmft2 (~JMFT@82.3.54.26)
[17:46:54] <vdamewood> Yeah, SDL_ttf doesn't find fonts for you.
[17:47:38] <Akronymus> https://techcommunity.microsoft.com/t5/excel-blog/announcing-lambda-helper-functions-lambdas-as-arguments-and-more/ba-p/2576648
[17:47:42] <bayaz> Title: Announcing LAMBDA Helper Functions: Lambdas as arguments and more 
[17:47:49] <Akronymus> https://www.youtube.com/watch?v=P3ALwKeSEYs
[17:47:50] <bayaz> Title: M. Bison "Yes Yes!" Widescreen HD reupload 
[17:49:38] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[17:49:40] <vdamewood> Oh, I should take some drugs while I eat.
[17:49:50] *** Joins: flynn (~mcbloch@user/flynn)
[17:52:22] *** Quits: inky_ (~inky__@46.36.119.19) (Ping timeout: 252 seconds)
[17:54:29] *** Joins: arcatech (~arcatech@user/arcatech)
[17:55:03] *** Quits: Ecophobia (~Ecophobia@mobile-access-2e8407-96.dhcp.inet.fi) (Quit: Leaving)
[17:55:12] *** Quits: langstme (~langstme@user/langstme) (Read error: Connection reset by peer)
[17:55:21] *** Joins: Ecophobia (~Ecophobia@mobile-access-2e8407-96.dhcp.inet.fi)
[17:55:27] *** Joins: gggp (~textual@60.10.23.160)
[17:55:55] *** Quits: Ecophobia (~Ecophobia@mobile-access-2e8407-96.dhcp.inet.fi) (Remote host closed the connection)
[17:56:50] <vdamewood> Well, damn. I missed my last dose of drugs.
[17:57:05] *** Joins: inky_ (~inky@5.77.218.18)
[17:59:31] *** Quits: inky (~inky@46.36.119.19) (Ping timeout: 252 seconds)
[18:05:24] *** Quits: gggp (~textual@60.10.23.160) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:06:41] *** Joins: Ecophobia (~Ecophobia@mobile-access-2e8407-96.dhcp.inet.fi)
[18:09:50] <jelly> I made mom alerts on the phone to take drugs regularly.
[18:15:00] <vdamewood> pyzozord: Are you familiar with SDL2_gfx?
[18:15:09] <pyzozord> vdamewood: nope
[18:15:50] <vdamewood> pyzozord: Apparently it's pretty popular, and supported by PySDL2.
[18:16:49] <pyzozord> oh cool, that could come in useful for GUIs
[18:17:21] *** Quits: Ecophobia (~Ecophobia@mobile-access-2e8407-96.dhcp.inet.fi) (Quit: Leaving)
[18:17:40] <vdamewood> pyzozord: Do you have any interest in Windows or macOS builds?
[18:17:52] <pyzozord> That bezier curve especially and polygon fill
[18:18:20] <pyzozord> vdamewood: no, not atm, but I like the idea that SDL enables that if any employer will ever force me back on mac
[18:18:23] *** Joins: Randolf (~randolf@184.70.10.188)
[18:19:16] <vdamewood> pyzozord: Ah, okay. I asked because SDL2_gfx's author doesn't provide Windows and mac Binaries, but there's another project that does. (tested with the official binaries on libsdl.org.)
[18:20:00] <pyzozord> vdamewood: that's ok, only focused on fonts this week (and maybe gifs if I'm lucky with fonts)
[18:20:22] <vdamewood> Yeah. It also sounds like you'll worry about SDL2_gfx with apt.
[18:20:30] <vdamewood> (When you get there.)
[18:20:42] <vdamewood> And s/worry/deal/
[18:21:10] <pyzozord> :D
[18:24:38] *** Joins: rsonx (~rsonx@user/kobalt)
[18:24:40] *** Quits: kobalt (~rsonx@user/kobalt) (Ping timeout: 245 seconds)
[18:24:53] *** rsonx is now known as kobalt
[18:29:46] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[18:31:37] *** Quits: elnavigator (~elnavigat@105.196.100.217) (Ping timeout: 248 seconds)
[18:31:58] *** Joins: fr13d0kr4 (~fr13d0kr4@ip24-170-205-126.ga.at.cox.net)
[18:32:15] *** Quits: unbuggedware (~unbuggedw@2602:fe90:300:1a2::40e1:8aec) (Read error: Connection reset by peer)
[18:32:15] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:32:47] *** Quits: xff0x (~xff0x@2001:1a81:52f9:3300:b5f:b00c:7918:3d13) (Ping timeout: 240 seconds)
[18:40:04] *** Joins: xff0x (~xff0x@2001:1a81:52f9:3300:b5f:b00c:7918:3d13)
[18:41:48] *** Joins: elnavigator (~elnavigat@105.196.100.217)
[18:42:33] *** Joins: DasBrain (~DasBrain@user/dasbrain)
[18:42:39] <wedr> Writing unit tests ain't fun at all...
[18:42:50] <wedr> Here I am, constantly having the need to procrastinate
[18:42:51] *** Quits: uzee (~uzee@86.36.37.198) (Quit: Leaving)
[18:43:10] <wedr> And fire trucks / police cars / ambulances just keeps driving by my house
[18:43:22] *** Joins: uzee (~uzee@86.36.37.198)
[18:43:29] <wedr> They should all come and save me from this.
[18:44:54] *** Quits: Jarcode (~SomeoneIs@s010600fc8df44e33.va.shawcable.net) (Read error: Connection reset by peer)
[18:45:11] *** Joins: Jarcode (~SomeoneIs@S010600fc8df44e33.va.shawcable.net)
[18:45:27] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi)
[18:45:40] *** Quits: DasBrain_ (~DasBrain@user/dasbrain) (Ping timeout: 240 seconds)
[18:47:47] *** Quits: gaurav_ (~usr123@124.253.109.179) (Read error: Connection reset by peer)
[18:47:51] *** Parts: kobalt (~rsonx@user/kobalt) (part)
[18:47:56] *** Quits: nekodesu (~bit@user/nekobit) (Ping timeout: 250 seconds)
[18:48:10] *** Joins: gaurav_ (~usr123@124.253.247.46)
[18:48:41] *** Quits: caramel (~caramel@user/caramel) (Ping timeout: 248 seconds)
[18:50:39] *** Quits: DasBrain (~DasBrain@user/dasbrain) (Killed (NickServ (GHOST command used by DasBrain_)))
[18:50:41] *** Joins: DasBrain_ (~DasBrain@user/dasbrain)
[18:51:23] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[18:53:38] *** Joins: caramel (~caramel@user/caramel)
[18:57:18] *** Joins: abrowne (~AB@159.196.171.119)
[18:57:40] *** Quits: zaher_ (~zaher@37.48.187.35) (Ping timeout: 240 seconds)
[18:58:10] *** Quits: reumeth (~reumeth@user/reumeth) (Ping timeout: 240 seconds)
[19:00:01] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Ping timeout: 252 seconds)
[19:00:48] *** Joins: nekodesu (~bit@user/nekobit)
[19:02:09] *** DasBrain_ is now known as DasBrain
[19:03:18] <mobidrop> tests aren't fun
[19:03:43] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[19:03:48] <Akronymus> mobidrop depends
[19:03:56] <Akronymus> "normal" tests are indeed not
[19:04:04] <Akronymus> Property based tests actually are
[19:04:25] <Akronymus> https://medium.com/criteo-engineering/introduction-to-property-based-testing-f5236229d237
[19:04:27] <bayaz> Title: Introduction to Property Based Testing 
[19:06:33] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Read error: Connection reset by peer)
[19:06:38] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[19:07:40] *** Joins: VoidNoir0 (~VoidNoir0@72.80.203.52)
[19:09:48] <DnzAtWrk> umm
[19:10:00] <DnzAtWrk> all a turns into ä and e turns into e with 2 dots
[19:10:04] <DnzAtWrk> wtf windows
[19:10:18] <Akronymus> AkronymusMVlOTbf3I9J8FeN0Tn4t
[19:10:23] <Akronymus> wait fuck
[19:10:28] <DnzAtWrk> that's not a swedish keyboard layout
[19:10:34] <DnzAtWrk> that's some kind of insane keyboard layout that doesn't exist
[19:10:41] <Akronymus> Apparently altgr + a does something
[19:10:51] <DnzAtWrk> well you better change it
[19:11:22] <Randolf> DnzAtWrk: Your keyboard has probably been changed to a multi-lingual one.  Windows changes Canadian users' keyboards to French sometimes, and it's very annoying because it doesn't matter if we delete all the keyboards from Control Panel except for the US English layout.
[19:11:39] <DnzAtWrk> swedish keyboards do use a and e
[19:11:43] *** Joins: cthulchu (~Cthulchu@176.113.163.227)
[19:11:44] <DnzAtWrk> whatever the hell windows is doing now makes no sense
[19:11:50] <Randolf> Yup.
[19:12:03] <Randolf> So, change your keyboard back to what it should be in your region, and you'll be fine.
[19:12:03] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[19:12:43] <DnzAtWrk> jesus the language control panel is crap in windows 10
[19:12:52] <DnzAtWrk> What is wrong with simple self-contained panels?
[19:12:53] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[19:12:55] <Akronymus> Oh, that is keepass pasting username and pw
[19:12:59] <DnzAtWrk> why does everything have to be spread out in tons of windows
[19:13:16] <Akronymus> Which I now have changed
[19:13:26] *** sco1_ is now known as sco1
[19:13:38] <Randolf> The stupid thing about Windows here in Canada is that Microsoft seems to think that all Canadians can speak French, but the reality is that the vast majority of us don't, and the use of French keyboards is almost entirely exclusive to one Province that does prominently speak/write French.
[19:13:47] <DnzAtWrk> oh don't get me started
[19:13:52] <DnzAtWrk> as a swedish speaking finn
[19:14:07] <DnzAtWrk> there is a language header
[19:14:13] <DnzAtWrk> bloody use it websites
[19:14:20] <Akronymus> qwertz is a kinda awful keyboard layout for programming
[19:14:25] <Randolf> You could just speak angrily about the Church -- in Quebec, Canada when they do this it's worse than swearing.
[19:14:26] <Akronymus> All the keybinds are messed up
[19:14:35] <Akronymus> at least still better than azerty
[19:15:11] <DnzAtWrk> sigh
[19:15:15] <DnzAtWrk> where is the keyboard language list
[19:15:19] <DnzAtWrk> I can't seem to find it anymore
[19:15:56] * vdamewood hugs his Mac with its 'ABC-Extended' keyboard layout.
[19:16:04] <DnzAtWrk> I DON'T KNOW, what the hell is this
[19:16:08] <DnzAtWrk> damn you microsoft
[19:16:10] *** Quits: jazzy (~jaziz@2600:380:8773:c113:1093:1c01:217f:efb2) (Ping timeout: 240 seconds)
[19:16:13] * wedr watches the MAC being destroyed due to its fragility.
[19:16:14] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Read error: Connection reset by peer)
[19:16:21] <Akronymus> use the windows start menu search? DnzAtWrk
[19:16:32] <vdamewood> wedr: I've had it for a year and a half with no problems.
[19:16:35] <wedr> DnzAtWrk, WinKey + Space
[19:16:57] *** nekodesu is now known as swagdesu
[19:17:08] <vdamewood> Granted, I got this mac by breaking the previous one too many times.
[19:17:16] <Akronymus> I may literally switch keyboard layouts because of shortcuts
[19:17:27] <DnzAtWrk> jesus
[19:17:33] <DnzAtWrk> well it's not in control panel keyboard
[19:17:33] <wedr> Join us, the Qwerty cult.
[19:17:34] <pulse> DnzAtWrk, winkey->"language settings"->keyboard
[19:17:53] <vdamewood> DnzAtWrk: So, you want a normal Swedish layout?
[19:18:03] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[19:18:09] <DnzAtWrk> SHIT
[19:18:11] <pulse> you need to add languages first before you can use them in keyboard settings
[19:18:11] <wedr> DnzAtWrk, The Control Panel is slowly being deprecated over the course of 5-years contingency plan 
[19:18:16] *** Quits: snake (~snake@user/snake) (Ping timeout: 250 seconds)
[19:18:24] <DnzAtWrk> accidentally signed out cancelling my download queue
[19:18:33] <Akronymus> wedr meanwhile there are still some 95 dialogs floating around
[19:19:11] <vdamewood> I wonder what Windows 11 has for the control panel.
[19:19:25] <wedr> Those can't be modified. There were some blog posts mentioning how painful it is because, in the source codes, there are comments documenting how, if you change this icon, it breaks certain important corporate software out in the wilds.
[19:19:37] *** Quits: cthulchu (~Cthulchu@176.113.163.227) (Ping timeout: 248 seconds)
[19:19:41] <DnzAtWrk> I tried that wedr 
[19:19:43] <wedr> I forgot where they were, but it was deemed advanced knowledge in the Windows community
[19:19:47] <DnzAtWrk> where in keyboard do I add languages?
[19:19:52] <DnzAtWrk> There is no such option
[19:19:56] <DnzAtWrk> there is no list of installed languages
[19:20:06] <Akronymus> under language actually
[19:20:08] <DnzAtWrk> Where the hell did all the options go!
[19:20:12] <Akronymus> Because fuck knows
[19:20:27] <DnzAtWrk> There is no "language"
[19:20:40] <Akronymus> Language settings -> language -> keyboard
[19:20:45] <wedr> DnzAtWrk, https://support.microsoft.com/en-us/windows/manage-the-input-and-display-language-settings-in-windows-12a10cb4-8626-9b77-0ccb-5013e0c7c7a2
[19:20:46] <bayaz> Title: Manage the input and display language settings in Windows 10 
[19:20:47] <DnzAtWrk> I don't want to change my "preferred app language"
[19:20:52] <Akronymus> No
[19:20:53] <wedr> You don't need to
[19:20:59] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[19:21:00] <Akronymus> You need to literally go into language settings
[19:21:16] <GeDaMo> Time & Language
[19:21:16] <Akronymus> Within those, you can do the keyboards
[19:21:22] <DnzAtWrk> jesus christ
[19:21:25] <wedr> Settings > Time & Languages > Languages
[19:21:25] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Read error: Connection reset by peer)
[19:21:26] <DnzAtWrk> yes I do need to use that
[19:21:32] <DnzAtWrk> They merged the app and input languages
[19:21:41] <DnzAtWrk> f*cking idiots
[19:21:44] <DnzAtWrk> incompetent fools
[19:21:54] <wedr> Because Time and Languages are considered to be local and regional settings
[19:21:59] <Akronymus> I have english uk as my language.
[19:22:11] <Akronymus> But regional settings are austrian and keyboard is qwertz
[19:22:23] <DnzAtWrk> it wants to download a language pack
[19:22:25] <Randolf> vdamewood: Microsoft is insane -- they keep making their Windows OS more difficult to use with each new version.  Since Windows 10 I've been installing the "Open Shell" (previously Classic Shell) on every computer, and the users always react with "Oh, there's all my programs!  Thank you, I'm so glad they're not gone."
[19:22:25] <vdamewood> wedr: And thanks to that, My Switch gives me temperatures in Farenheit.
[19:22:27] <DnzAtWrk> and I want to change keyboard layout
[19:22:29] <DnzAtWrk> mental
[19:22:41] <Akronymus> Sadly I can't get the microsoft keyboard configurator running because it requires a .net version I can't install.
[19:22:42] <vdamewood> I want Celcius even though i'm in the US.
[19:22:45] *** Quits: rcoote (~rcoote@2a02:908:692:81c0:27cd:61e5:613:b283) (Quit: Konversation terminated!)
[19:22:50] <Akronymus> So I have dead keys which sucks
[19:22:56] <wedr> DnzAtWrk, You can go read the Microsoft Windows 10 support page I linked to you, above.
[19:23:03] <DnzAtWrk> I AM
[19:23:04] <wedr> It has everything you need
[19:23:05] <wedr> oh
[19:23:24] <Akronymus> I hate that ^ ` and ´ require 2 key presses to appear
[19:23:26] *** Joins: NeoCron (~NeoCron@45.158.175.19)
[19:23:34] <DnzAtWrk> merging input and system language is DUMB
[19:23:37] <Randolf> vdamewood: What?  You want metric (like the rest of the world)?  But don't you get it?  Microsoft knows better than you do what you want!  Or did you miss the memo that their marketing department put out?
[19:23:40] <DnzAtWrk> two entirely different concepts
[19:23:44] <wedr> Akronymus, You need to switch to English US, and don't use English UK, English International, and such
[19:23:58] <Akronymus> wedr ITS BOUND TO THE KEYBOARD LAYOUT
[19:24:01] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[19:24:01] <Akronymus> https://zauner.nllk.net/post/0014-windows-no-dead-keys/
[19:24:03] <bayaz> Title: Disabling dead keys under Windows 10 
[19:24:05] <vdamewood> Randolf: Actually, my complaint is with Nintendo.
[19:24:16] <wedr> Akronymus, wait, really?
[19:24:17] <Randolf> vdamewood: Damn, are they pulling a Microsoft?
[19:24:43] <vdamewood> Randolf: My Switch is set to US, so Breath of the Wild gives me Degrees F. It sucks.
[19:24:44] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Read error: Connection reset by peer)
[19:24:46] <Randolf> That's the type of crap I've come to expect from Microsoft.
[19:24:52] <Akronymus> YES, REALLY
[19:25:03] *** Joins: gggp (~textual@60.10.194.43)
[19:25:10] <Randolf> vdamewood: Tell them you're in Canada and you should be fine.
[19:25:25] <wedr> vdamewood, you probably would need to set your switch to English (UK/europe) instead of America
[19:25:29] <Randolf> ...as long as they don't switch you to a French keyboard layout.
[19:25:32] *** Joins: nekodesu (~bit@user/nekobit)
[19:25:32] *** nekodesu is now known as swagneko
[19:25:37] <pulse> Akronymus, 95? there's still 3.1 dialogs in windows 10 :)
[19:25:43] <vdamewood> wedr: Naw, as Randolf said, Canada works.
[19:25:45] <DnzAtWrk> it's amazing how usable simple desktop environments such as xfce and lxqt and lxde are
[19:25:48] <wedr> ah
[19:25:50] <DnzAtWrk> They do JUST as much as windows 10
[19:25:51] <Akronymus> And because the fucking keyboard layout gen requires a OLD .net version that I can't install because fuck knows why I can't disable the dead keys
[19:25:52] <Randolf> pulse: That, unfortunately, is true.
[19:26:00] <DnzAtWrk> at a tiny fraction of the memory
[19:26:08] <vdamewood> Randolf: I tried it, but that also affects which games I can buy.
[19:26:14] *** Joins: jacktar (~whiteshad@gateway/tor-sasl/jacktar)
[19:26:24] <Akronymus> Oh, .net 2.5
[19:26:34] <pulse> start->"odbc"->enter->add->*.mbd->select
[19:26:36] <pulse> voila
[19:26:36] *** Quits: swagdesu (~bit@user/nekobit) (Killed (NickServ (GHOST command used by swagneko)))
[19:27:00] <pulse> is Randolf rindolf's good twin
[19:27:05] * pulse raises eyebrow
[19:27:07] <Randolf> vdamewood: What a bunch of idiots.  Wow.
[19:27:22] <Randolf> pulse: I know rindolf, but we're different people.
[19:27:29] * pulse reattaches eyebrow
[19:27:33] <pulse> carry on
[19:27:37] * Randolf laughs
[19:28:01] <vdamewood> Randolf: Yeah, it sucks. I'm thinking of moving to Vancouver just to make things easy.
[19:28:12] <Akronymus> https://answers.microsoft.com/en-us/windows/forum/all/cant-install-net-framework-35-in-windows-10-x64/37d48d21-d310-4810-9342-9650a4167dd4
[19:28:19] <vdamewood> Randolf: Seriously though, my daily driver is a Mac, and I love it.
[19:28:29] <Randolf> Someone on Twitter has started calling me "Randolf the blonde" lately.  I laugh, but apparently I'm supposed to be insulted.
[19:28:33] <Akronymus> vdamewood hopefully you like having your files scanned.
[19:28:46] *** Quits: sjmulder (~sjmulder@2a02-a443-33e5-1-65f2-1fe5-ecb-55bb.fixed6.kpn.net) (Remote host closed the connection)
[19:29:08] <Randolf> vdamewood: If you do move to Vancouver, let me know because I live in this area -- we can go for a coffee and have some laughs about how dumb modern software from big companies is.
[19:29:35] <Akronymus> Oh, also: WHY CAN'T I ASSIGN THE SEPARATOR ON THE KEYPAD MYSELF INSTEAD OF HAVING IT BOUND TO THE LOCALIZATION?
[19:29:37] <vdamewood> Randolf: Seriously, I can't pass the medical exam.
[19:29:43] <Akronymus> Numpad*
[19:29:45] *** Quits: death916 (~death916@user/death916) (Ping timeout: 248 seconds)
[19:30:13] <pyzozord> Anyone knows if there is like a special mode to gdb that runs gdb and the debuggee program transparently and only (automatically) prints any of the gdb interface if program did not execute correctly?
[19:30:21] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[19:30:28] <vdamewood> Randolf: But if you're ever in Portland, shoot me a line.
[19:30:29] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Read error: Connection reset by peer)
[19:30:29] <Randolf> vdamewood: :(
[19:30:52] *** Joins: death916 (~death916@c-67-182-183-147.hsd1.ca.comcast.net)
[19:30:52] *** Quits: death916 (~death916@c-67-182-183-147.hsd1.ca.comcast.net) (Changing host)
[19:30:52] *** Joins: death916 (~death916@user/death916)
[19:31:19] <Randolf> vdamewood: You're not too far away.  I do want to go there in the future and visit Dr. Peter Boghossian, who is an author and Professor of Philosophy who teaches and promotes critical thinking.
[19:31:24] <Akronymus> WAY too many games/programs fail to have usable shortcuts on non US layout actually
[19:31:33] <Akronymus> Would be nice to have proper ones, but alas
[19:31:38] <GeDaMo> https://www.youtube.com/watch?v=DdmyUZCl75s
[19:31:39] <bayaz> Title: Winning at programming competitions is a negative factor for being good on the job 
[19:31:57] <pulse> people who use non US layouts should be flogged in a public square
[19:32:02] <pulse> oops i didn't meant to say that outloud
[19:32:03] *** Joins: [itchyjunk] (~Guest63@user/itchyjunk/x-7353470)
[19:32:21] <[itchyjunk]> oh thank fuck my professor said attend class while a way to maybe get me into the class if figured out
[19:32:23] <vdamewood> Randolf: But yeah, macOS lets me set Calendar, Start of the Week, 12/24 Hour clock, and Temperature separately from my language(s) and location.
[19:32:28] *** Square is now known as Sqaure
[19:32:37] <[itchyjunk]> I've been a ball of stress since friday
[19:32:56] *** Quits: rexar89 (~alexi5@208.83.82.233) ()
[19:32:59] <[itchyjunk]> ohhh god bless
[19:33:02] * pulse unfurls [itchyjunk] 
[19:33:13] <[itchyjunk]> sorry for venting here but no social media to vent too
[19:33:21] * [itchyjunk] should make twitter or something to rant
[19:33:36] * [itchyjunk] partially unfurls
[19:33:49] <karstensrage> what are you stressed about?
[19:33:50] <[itchyjunk]> hmm
[19:33:53] <Akronymus> And why the fuck are NO keycaps on amazon marked with the layout?
[19:34:00] <[itchyjunk]> I got dropped out of the class I need to graduate
[19:34:08] <[itchyjunk]> my "accelerated OOP" class
[19:34:31] <Randolf> pulse:  Ha ha ha ha ha!
[19:34:35] <[itchyjunk]> there is hw assigned but I can't see it since I am not technically in the class
[19:34:49] * [itchyjunk] slaps self with a large Trout.java
[19:34:57] *** Quits: gggp (~textual@60.10.194.43) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:35:00] <Randolf> [itchyjunk]: You could always vent on Twitter as well -- it's quite toxic.
[19:35:01] <vdamewood> So, if I wanted to, I could be in the US, With Japanese calendar, 24-hour clock, Friday as the start of the week, and temperatures in Celcius. With Englich -CA, and French - CH, and Russian keyboard layouts, with Japanese, and Chinese Simplified as my languages, and it all works.
[19:35:14] <[itchyjunk]> Randolf yes I don't have twitter etc
[19:35:25] <[itchyjunk]> not sure if making one to vent this stuff is worth it
[19:35:26] <karstensrage> whyd you get dropped?
[19:35:35] <pyzozord> Oh that's interesting about the contests. It makes perfect sense though.
[19:35:36] <[itchyjunk]> I am not sure why I got dropped
[19:35:41] <vdamewood> (And no, French-CH isn't a typo)
[19:35:49] <Randolf> CH = Chinese / FR = French
[19:35:58] <vdamewood> Naw, CH is Swizerland
[19:36:06] <Randolf> [itchyjunk]: What?  No Twitter?  Consider yourself lucky!
[19:36:22] <mrig> pulse: when I have finished my charset that is to replace ascii, I will send you a copy :p
[19:36:22] <[itchyjunk]> I have no social media other than steam and irc
[19:36:25] <Randolf> vdamewood: Whoops!  I stand corrected then.
[19:36:26] <vdamewood> So Canadian English, but Swiss French.
[19:36:40] <pulse> :-)
[19:36:50] *** Joins: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net)
[19:36:56] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[19:36:57] <mrig> It will be such darned hot logic that the interweebs will catch on fire.
[19:37:12] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:37:22] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Read error: Connection reset by peer)
[19:37:33] <vdamewood> Randolf: Yeah, ch does represent the chinese language (*cough* mandarin *cough*), but CH represents Switzerland. (ZH is China.)
[19:37:39] <[itchyjunk]> also you can't compile java in java because it never converts shit to native machine code right?
[19:37:52] <[itchyjunk]> I finally understood the virtual machine part of jvm
[19:37:55] <mrig> Randolf: are you the randy version of Rudolf ?
[19:38:08] <mrig> Not just a red nose!
[19:38:16] * mrig hides
[19:38:16] * vdamewood blinks
[19:38:17] *** Joins: gggp (~textual@123.113.176.64)
[19:38:18] <[itchyjunk]> Jvm itself is seen by the base computer in terms of native machine code
[19:38:25] <vdamewood> Does no one know that 'Randolf' is a real name?
[19:38:47] <GeDaMo> It's like they haven't seen Trading PLaces :P
[19:38:49] <[itchyjunk]> and then jvm acts as a fake machine for java codes
[19:38:52] *** Joins: compscipunk (~compscipu@107-214-234-232.lightspeed.sndgca.sbcglobal.net)
[19:39:07] <Randolf> vdamewood: Some of my clients run a Chinese operation and Windows reports ZH for Traditional Chinese and CH for Simplified Chinese on their computer systems.  I realize now that Microsoft is probably getting that wrong again.
[19:39:49] <vdamewood> Wait a sec... 
[19:39:50] <pulse> leave it to the real world to complicate problems that programmers once deemed easy
[19:39:59] <Randolf> mrig: Ha!  I've never heard that one before!  ;)
[19:40:02] *** Joins: zwr (~zwr@191.47.94.157)
[19:40:37] <Randolf> pulse: As long as the pay is good, I'm happy to accept that as job security.
[19:40:51] <pulse> smart
[19:41:20] <vdamewood> Randolf: I was mistaken, China is CN.
[19:41:32] <edgar-rft> we only can hope that the chinese don't do a brain surgery operation on Windows...
[19:42:08] <pulse> i read yesterday the chinese are working on commercial thorium reactors
[19:42:17] <pulse> seems like a brilliant business strategy
[19:42:27] *** Quits: gggp (~textual@123.113.176.64) (Ping timeout: 240 seconds)
[19:42:35] <Randolf> vdamewood: Yes, some show CN and some show CH.  It's weird.
[19:42:40] <pulse> step 1: create cheap thorium reactor, step 2: export to all countries
[19:42:50] <pulse> even energy bout to be made in china
[19:43:08] <vdamewood> Okay, yeah, ch is indeed the language code for chinese.
[19:43:15] <Randolf> Electricity used to be free in China, until people started mining Bitcoin.
[19:43:15] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[19:43:41] <vdamewood> Randolf: The way it *should* be done is with a Language/Country Pair. ch_CN for simplieifed, and ch_TW for traditional.
[19:43:43] <pulse> isn't it zh vdamewood 
[19:43:51] <Randolf> vdamewood: I agree.
[19:44:00] <wedr> Being profitable and making easy money from free things is the human nature of one of the deadly sins, greed.
[19:44:05] <pulse> https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
[19:44:06] <bayaz> Title: List of ISO 639-1 codes - Wikipedia 
[19:44:07] <pulse> this says zh
[19:44:21] <vdamewood> It's zh, yeah.
[19:44:31] <vdamewood> Randolf: s/ch_/zh_/g
[19:44:37] <Randolf> pulse: In the past the .oz ccTLD was for Australia, but that eventually got changed to .au (gold?).
[19:44:58] <vdamewood> Too bad, .oz would have been cool.
[19:45:04] <Randolf> It was cool.
[19:45:10] <pulse> slovenian is si and i still have no idea why
[19:45:13] * edgar-rft wants free electricity everywhere - whatever you touch, you get zapped!
[19:45:15] <pulse> probably slovakia took sl
[19:45:19] <vdamewood> Yeah, ch as a language is Chamorro.
[19:45:20] <pulse> so now we have to be si
[19:45:28] <[itchyjunk]> yeah  free electricity is good
[19:45:36] <vdamewood> SlovenšĉIna
[19:45:36] * Randolf wonders if edgar-rft might be a masochist
[19:45:43] <vdamewood> Fsck my keyboard.
[19:45:44] <wedr> profitable electricity is also good, but it's too good to be true.
[19:45:54] <pulse> i would prefer sv
[19:46:02] <vdamewood> SlovenščIna.
[19:46:02] <pulse> although that might be mistaken for soviet
[19:46:14] <Randolf> Switch to Linux.  I did, and I've never had any keyboard problems since.  (In fact, I haven't had any problems since.)
[19:46:23] <wedr> sv is taken I think. For Swedish domains
[19:46:27] <wedr> https://en.wikipedia.org/wiki/.sv
[19:46:27] <bayaz> Title: .sv - Wikipedia 
[19:46:41] <Randolf> .no for Norway.  No way!  Yes way!
[19:46:42] *** Quits: jinsun (~quassel@user/jinsun) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:47:02] *** Joins: jinsun (~quassel@user/jinsun)
[19:47:06] <wedr> No... I switched to Ubuntu, and I have a ton of problems with the modifier keys for me to change input languages.
[19:47:37] <vdamewood> .sv is El Salvador
[19:47:43] <vdamewood> Sweeden is .se.
[19:47:46] <wedr> oh
[19:47:47] <vdamewood> Sweden
[19:48:03] <wedr> El Salvador should've been esv
[19:48:05] *** Joins: mortalis (~mortalis@162.210.247.183)
[19:48:21] <vdamewood> But that would have been 3 letters.
[19:48:27] <wedr> actually, why are ccTLD restricted to 2 letters anyway?
[19:48:31] <vdamewood> These country codes are specifically 2-letters.
[19:48:32] <GeDaMo> "The Norway Problem - why StrictYAML refuses to do implicit typing and so should you" ttps://hitchdev.com/strictyaml/why/implicit-typing-removed/
[19:48:38] *** Quits: mortalis (~mortalis@162.210.247.183) (Client Quit)
[19:48:44] <wedr> oh
[19:48:53] <vdamewood> wedr: Because they're assigned from ISO 3166-1.
[19:49:01] <vdamewood> (Which is all 2-letter codes)
[19:49:11] *** Quits: Akronymus (~Akronymus@85.31.8.181) (Quit: Akronymus)
[19:49:58] <edgar-rft> Randolf: I want free electricity for *you*, not for me :-)
[19:50:14] <wedr> nevermind.
[19:50:23] <vdamewood> wedr: It also makes it a namespace of sorts that two-letter codes are countries, and everything else is for other stuff.
[19:50:27] *** Quits: elnavigator (~elnavigat@105.196.100.217) (Ping timeout: 240 seconds)
[19:50:33] <pulse> someone give me the energy to complete 2 work tickets
[19:50:37] <pulse> i'd rather be playing games, sigh
[19:50:53] <vdamewood> wedr: It kind of pisses off the Esperanto community that they can't get .eo domain names set aside for Esperanto.
[19:51:01] * wedr passes ki to pulse through cultivation.
[19:51:06] * vdamewood gives pulse a Red Bull.
[19:51:17] <pulse> oh no i can't drink red bull
[19:51:23] <pulse> i get red itchy spots
[19:51:27] *** Quits: jinsun (~quassel@user/jinsun) (Client Quit)
[19:51:29] * vdamewood takes away pulse's Red Bull
[19:51:29] * GeDaMo jabs pulse with a cattle prod
[19:51:34] <pulse> lol
[19:51:36] <pulse> thanks
[19:51:43] * vdamewood gives GeDaMo a second cattle prod.
[19:51:46] *** Joins: hexfive (~eric@50.35.83.177)
[19:51:48] *** Joins: jinsun (~quassel@user/jinsun)
[19:51:50] <pulse> one was plenty :S
[19:51:56] <wedr> For me, I'm trying to be lazy as possible by writing weird Cartesian Product JUnit tests.
[19:52:03] * vdamewood grabs a Klingon pain stick.
[19:52:10] <pulse> i've been trying to be so lazy that it would overflow back into full discipline
[19:52:16] <pulse> but sadly it doesn't work, i've discovered
[19:52:16] <wedr> I have a working JUnit test that has 90 test cases using 1 method
[19:52:24] *** Joins: cthulchu (~Cthulchu@176.113.163.227)
[19:52:26] <pulse> laziness: not an unsigned type
[19:54:02] <wedr> It's a lazy type
[19:54:14] *** Quits: hexfive (~eric@50.35.83.177) (Client Quit)
[19:54:31] <Randolf> edgar-rft: Oh, so sadistic then?  ;)
[19:56:47] <mrig> edgar-rft: is a reincarnation of the Marquis de Sade, no cheap imitations.
[19:58:09] <pulse> time for coffee i guess
[19:58:28] * vdamewood attaches wires to pulse's teeth.
[19:58:39] *** Joins: mortalis (~mortalis@162.210.247.178)
[19:58:42] <pulse> o_.
[19:58:54] <pulse> i googled norway and this came up https://media-cdn.holidaycheck.com/w_1024,h_768,c_fit,q_auto,f_auto/ugc/images/0ed15f1e-3038-357c-ab10-b53268363367
[19:58:55] <bayaz> Type: image/jpeg Size: 187.5 kB 
[19:58:56] <vdamewood> pulse: Wanna see what happens when I flip the switch?
[19:59:05] <pulse> so that's the entire norway
[19:59:20] <pulse> vdamewood, no i had my brother do that to me when i was 12, i don't want a repeat of the experience
[19:59:22] *** Joins: nvmd (~nvmd@user/nvmd)
[19:59:33] <pulse> except it was a string, not a wire
[20:00:10] * pulse shuts off the procrastination circuitry
[20:00:40] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[20:00:45] <mrig> pulse: you could tear your tickets into little pieces, you will then have fun puzzle to solve to find out which ticket to do next!
[20:01:27] <pulse> well. they're digital, i'd have to tear the monitor apart
[20:01:58] <mrig> you could put them through a randomizing function, something like that, to encrypt them.
[20:02:23] <mrig> not as satisfying as tearing them up, but we have to make do with what we've got I suppose.
[20:02:32] <Stefan26> I just found out there exists companies that hire people and don't give them anything to do (and might even take a month to assign to a project)
[20:02:56] <pulse> silicon valley had a bit about that Stefan26 
[20:02:59] <pulse> the roof people
[20:03:00] <Stefan26> such companies that pay devs to do nothing still makes billions in profit
[20:03:01] <mrig> Thats called a retainer, If I am not mistaken.
[20:03:16] <pulse> how can i get such a job
[20:03:29] <Stefan26> Large banks 
[20:03:36] <mrig> just code something that sells for a lot of money for someone other than yourself.
[20:03:47] *** Quits: jamea (~jamea@187.185.190.209) (Ping timeout: 240 seconds)
[20:04:17] <mrig> do it on someone else's pay role, and do it regularly I suppose.
[20:04:25] *** Quits: mortalis (~mortalis@162.210.247.178) (Changing host)
[20:04:25] *** Joins: mortalis (~mortalis@user/mortalis)
[20:05:15] <pulse> you mean payroll
[20:05:17] <mrig> I have to many scruples to be able to work for a bank :D
[20:05:23] <pulse> "pay role" confused me
[20:05:29] * mrig roles in the pay.
[20:05:36] <mrig> rolls in the pay.
[20:05:44] * mrig gives up on English as a lost cause.
[20:06:06] <mrig> I would not sleep at night if I worked for a bank.
[20:06:20] <pulse> what about a small bank
[20:06:30] <karstensrage> [itchyjunk], you can just do your own thing if you want https://java-programming.mooc.fi/
[20:06:30] <bayaz> Title: About the course - Java Programming 
[20:06:58] <[itchyjunk]> karstensrage I need class to graduate
[20:07:02] <mrig> There are no small banks, I thought 2008 saw to that.
[20:07:08] <[itchyjunk]> its my last semester
[20:07:14] <[itchyjunk]> I wanna be finally done!
[20:07:17] <pulse> how do you even start a bank
[20:07:28] <[itchyjunk]> starting a bank it easy
[20:07:41] <[itchyjunk]> getting people to deposit money there is a different story
[20:08:01] <pulse> yeah. hard to market
[20:08:04] * edgar-rft was finally done already before he even entered school
[20:08:11] <pulse> "deposit with us, you don't know us but we know you!"
[20:08:33] <[itchyjunk]> onlybanks
[20:08:40] <mrig> pulse: just convince someone that you are good at looking after their valuables and that your tokens that you give in return have value.
[20:08:47] *** Quits: mortalis (~mortalis@user/mortalis) (Quit: Igloo IRC: https://iglooirc.com)
[20:09:08] <pulse> seems like a lot of work
[20:09:13] *** Quits: CaptainJ (~CaptainJ@141.226.12.62) (Ping timeout: 248 seconds)
[20:09:20] <pulse> i heard some banks still use floppies
[20:09:24] <[itchyjunk]> not if you know a few rich people
[20:09:36] <mrig> tally sticks used to be big in banking.
[20:09:36] <[itchyjunk]> you need about 10 active accounts to start a small bank probably
[20:09:38] *** Joins: elnavigator (~elnavigat@105.196.100.217)
[20:10:30] <pulse> i guess you could specialize
[20:10:33] <GeDaMo> You need some money to loan out
[20:10:35] <pulse> "a bank for X"
[20:10:41] <pulse> much easier than a generic bank
[20:10:53] *** Joins: snake (~snake@user/snake)
[20:10:59] <pulse> i guess that's what lenders are
[20:11:20] <GeDaMo> In order to make money from a bank, you need income from your customers, not just deposits
[20:11:31] *** Joins: CaptainJ (~CaptainJ@141.226.12.62)
[20:12:10] <pulse> yeah i don't understand banks to be honest
[20:13:16] <pulse> "Banks make money from service charges and fees. ... Banks also earn money from interest they earn by lending out money to other clients. The funds they lend comes from customer deposits"
[20:13:20] <pulse> what a strange business model
[20:14:01] *** Quits: dsrt^ (~dsrt@12.16.129.111) (Remote host closed the connection)
[20:14:06] <Randolf> It gets even stranger with recursive derivatives.
[20:14:42] <pyzozord> Great success! https://imgur.com/a/1DK8ToZ
[20:14:42] <bayaz> Title: imgur.com 
[20:14:51] <pyzozord> kind of ugly though :|
[20:15:15] <pulse> pyzozord, congrats
[20:15:18] *** Joins: epolanski (uid312403@id-312403.brockwell.irccloud.com)
[20:15:21] <Randolf> Congratulations!  I remember how that felt when I got my first GUI stuff going in assembler.
[20:15:31] <pulse> you're probably getting the ugly font because you don't clear the screen between frames
[20:15:37] <pulse> that's what tends to happen
[20:15:47] *** Quits: xff0x (~xff0x@2001:1a81:52f9:3300:b5f:b00c:7918:3d13) (Ping timeout: 240 seconds)
[20:15:55] *** Joins: segnior (segnior@user/segnior)
[20:16:09] <pyzozord> there is only one render so that can't be it
[20:16:46] *** Joins: xff0x (~xff0x@2001:1a81:52f9:3300:b601:7649:8935:742b)
[20:17:12] *** Joins: blahboybaz (~blahboyba@67-5-101-245.spok.qwest.net)
[20:18:27] <pulse> if you're redrawing in a loop, you should call SDL_RenderClear each time
[20:19:25] *** Quits: Randolf (~randolf@184.70.10.188) (Quit: Leaving)
[20:19:52] <pyzozord> That's all I'm doing https://termbin.com/tlba I don't think there is a loop there
[20:19:53] <bayaz> Type: text/plain; charset=utf-8 
[20:21:13] *** Joins: jamea (~jamea@10.189-202-213.bestelclientes.com.mx)
[20:22:22] <pyzozord> I opted out of using the renderer stuff, maybe that's the problem
[20:22:50] *** Quits: swagneko (~bit@user/nekobit) (Ping timeout: 250 seconds)
[20:23:52] *** Joins: Zeturic (~Orimendix@50-25-46-156.krmtcmta02.res.dyn.suddenlink.net)
[20:26:07] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[20:26:08] <mrig> Banks aren't businesses.
[20:26:18] *** Joins: Izem (~Izem@bras-base-london1483w-grc-38-65-95-41-242.dsl.bell.ca)
[20:27:16] <pulse> they make money
[20:27:41] <[itchyjunk]> they will wait list me in class
[20:27:57] <[itchyjunk]> if you know someone in that class, pls tell them to drop out cause it's a shitty class
[20:28:01] <[itchyjunk]> that way I'll get their spot
[20:28:02] <[itchyjunk]> thanks
[20:29:40] *** Quits: kodah (~kodah@user/kodah) (Ping timeout: 252 seconds)
[20:30:07] <mrig> "Let us control the money of a nation, and we care not who makes its laws", though apparently the same is said of songs too.
[20:30:24] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[20:30:27] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[20:30:55] <pyzozord> That's better: https://imgur.com/a/VBywsSK
[20:30:55] <bayaz> Title: imgur.com 
[20:30:59] <pyzozord> not sure if it's perfect though
[20:31:05] <[itchyjunk]> same about the clothing lines
[20:31:06] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[20:31:30] <mrig> cool stuff pyzozord :)
[20:31:36] <pyzozord> I changed TTF_RenderText_Solid to TTF_RenderText_Blended
[20:32:06] <pyzozord> mrig: :)
[20:32:41] <pyzozord> hmm it uses bolded font for some reason, I'll try it out with hardcoded normal font maybe that will look better, then I can dig into the fontconfig matching stuff
[20:33:38] *** Quits: andypandy (~andypandy@h-178-174-148-234.A163.priv.bahnhof.se) (Quit: Bye)
[20:34:50] <pyzozord> Hmm no. That's still ugly. Those two "Hello"s are supposed to be the same https://imgur.com/a/qkuiI15
[20:34:51] <bayaz> Title: imgur.com 
[20:35:01] <mrig> I'm locked in combat with go's type system at the moment :|
[20:36:43] <pulse> if wow taght me anything it's to survive a combat you need a good buff
[20:36:46] <[itchyjunk]> use flee()
[20:36:52] * pulse casts caffeine on mrig
[20:37:08] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:37:19] <pulse> +10% alerntness for 1hour
[20:37:38] <mrig> nice, thanks :D
[20:37:51] <[o> :D
[20:38:04] <[o> I drank coffee this weekend. it worked great
[20:38:51] <mrig> I'm going to persist with this until I've mastered it, pretty sure that what it is teaching me with a stick, will be useful when writing in other language too.
[20:39:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[20:39:27] *** Joins: gggp (~textual@221.219.64.36)
[20:39:36] <mrig> But that other languages hide it from you, I could be wrong, but that's my hunch.
[20:39:37] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[20:40:03] *** Joins: inky (~inky@37.186.116.131)
[20:40:11] *** Joins: andypandy (~andypandy@h-178-174-148-234.A163.priv.bahnhof.se)
[20:41:25] *** Joins: exvicesindaco_ (~exvicio@host-80-116-9-227.retail.telecomitalia.it)
[20:41:44] *** Joins: nekodesu (~bit@user/nekobit)
[20:41:54] *** Joins: Thedarkb (~Thedarkb@185.69.144.233)
[20:42:06] *** Joins: exvicesindaco__ (~exvicio@host-80-116-9-227.pool80116.interbusiness.it)
[20:42:07] *** Quits: inky_ (~inky@5.77.218.18) (Ping timeout: 240 seconds)
[20:42:24] *** Joins: exvicesindaco___ (~exvicio@host-80-116-9-227.retail.telecomitalia.it)
[20:42:41] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:44:10] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Ping timeout: 240 seconds)
[20:44:22] <pyzozord> Ah, I think I found it. I added TTF_SetFontHinting(ttffont, TTF_HINTING_LIGHT); Does these Hellos look the same to you? https://imgur.com/a/hBsoOxh
[20:44:23] <bayaz> Title: imgur.com 
[20:44:47] <pyzozord> I still feel like there is a tiny difference
[20:44:47] *** Quits: silasfox (~sbv@cgn-89-1-215-99.nc.de) (Ping timeout: 240 seconds)
[20:45:26] *** Quits: dislabled (~dislabled@115.229.164.82.customer.cdi.no) (Quit: ZNC 1.8.2 - https://znc.in)
[20:45:45] *** Joins: dislabled (~dislabled@115.229.164.82.customer.cdi.no)
[20:45:55] *** Quits: exvicesindaco_ (~exvicio@host-80-116-9-227.retail.telecomitalia.it) (Ping timeout: 250 seconds)
[20:46:14] *** Quits: exvicesindaco__ (~exvicio@host-80-116-9-227.pool80116.interbusiness.it) (Ping timeout: 250 seconds)
[20:46:17] <pyzozord> Ah yes, there is a difference! https://imgur.com/a/zztIcdP
[20:46:17] <bayaz> Title: imgur.com 
[20:46:32] *** Joins: exvicesindaco_ (~exvicio@host-80-116-9-227.retail.telecomitalia.it)
[20:46:32] *** exvicesindaco_ is now known as exvicesindaco
[20:46:39] <pyzozord> The rendering on the left uses that "cleartype" kind of rendering
[20:47:06] *** Quits: exvicesindaco___ (~exvicio@host-80-116-9-227.retail.telecomitalia.it) (Ping timeout: 250 seconds)
[20:47:09] <pyzozord> Not sure how to call it, but special trick that makes it look better on lcd screens
[20:47:21] *** Quits: gggp (~textual@221.219.64.36) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:47:36] *** Quits: Deknos (~someone@user/menace) (Remote host closed the connection)
[20:47:58] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[20:48:05] <mrig> one is desaturated, grey scale.
[20:48:10] *** Quits: gaurav_ (~usr123@124.253.247.46) (Read error: Connection reset by peer)
[20:48:17] *** Quits: NeoCron (~NeoCron@45.158.175.19) (Remote host closed the connection)
[20:48:39] <[itchyjunk]> that one is me
[20:48:56] <pyzozord> The one on the left uses https://en.wikipedia.org/wiki/ClearType
[20:48:57] <bayaz> Title: ClearType - Wikipedia 
[20:49:18] *** nekodesu is now known as swagneko
[20:49:46] <mrig> I like saturation, it is the only way that I can learn :)
[20:50:21] *** Joins: gggpkm (~gggpkm@60.10.194.43)
[20:51:01] <BrkThruCopyWritr> You don't have a soul, you are a soul.
[20:51:04] <BrkThruCopyWritr> and possibly autistic.
[20:51:16] <[itchyjunk]> ;_;
[20:52:13] *** Quits: cthulchu (~Cthulchu@176.113.163.227) (Ping timeout: 252 seconds)
[20:52:18] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 250 seconds)
[20:53:01] <pulse> i have a smol
[20:53:21] *** Quits: absc (~absc@81.31.144.178) (Quit: Leaving.)
[20:53:28] <mrig> aurtistic, nice.
[20:55:22] <mrig> I like people that aren't obsessed with money and status and are not lying all the time.
[20:55:32] <[itchyjunk]> smol what?
[20:55:47] *** Quits: CaptainJ (~CaptainJ@141.226.12.62) (Ping timeout: 240 seconds)
[20:55:54] <[itchyjunk]> I need to make a list of OOP jargon and memorize it or something
[20:56:12] <[itchyjunk]> like I know what an object is conceptually but I can't define it
[20:56:45] *** Quits: jamea (~jamea@10.189-202-213.bestelclientes.com.mx) (Ping timeout: 250 seconds)
[20:56:49] *** Quits: andypandy (~andypandy@h-178-174-148-234.A163.priv.bahnhof.se) (Quit: Bye)
[20:56:58] <pyzozord> [itchyjunk]: state and functions lumped together
[20:57:09] <[itchyjunk]> lol  at this answer
[20:57:10] <[itchyjunk]> In object-oriented programming (OOP), objects are the things you think about first in designing a program
[20:57:50] <[itchyjunk]> hm how would you define a state ?
[20:58:38] <[itchyjunk]> wiki says state means remembered information
[20:58:43] <[itchyjunk]> but seems a little vague
[20:58:57] *** Joins: kobalt (~rsonx@user/kobalt)
[20:59:11] *** Joins: andypandy (~andypandy@h-178-174-148-234.A163.priv.bahnhof.se)
[21:00:37] <[itchyjunk]> https://en.wikipedia.org/wiki/Object_(computer_science)
[21:00:37] <bayaz> Title: Object (computer science) - Wikipedia 
[21:00:44] <[itchyjunk]> object is just something in the memory?
[21:00:58] <[itchyjunk]> that doesn't work always right?
[21:01:11] <[itchyjunk]> in Java, I can have an int type in the memory and that not be an object
[21:02:25] <Izem> [itchyjunk]: I would say classes are first, but I think that's what you mean
[21:02:36] <Izem> also, yes
[21:02:48] *** Quits: ixil (~ixil@82.197.178.137) (Remote host closed the connection)
[21:02:55] <[itchyjunk]> that definition was one of google suggested link
[21:03:07] <[itchyjunk]> I'd probably think of classes first too before objects
[21:03:08] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Remote host closed the connection)
[21:03:12] <Izem> what is state? anything really
[21:03:13] <pyzozord> aww, looks like SDL2_ttf doesn't have subpixel font rendering :( Shame on you SDL2_ttf
[21:03:28] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[21:03:30] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Read error: Connection reset by peer)
[21:03:33] <[itchyjunk]> look like objects can be anything and so can state
[21:03:40] *** Quits: elnavigator (~elnavigat@105.196.100.217) (Ping timeout: 240 seconds)
[21:03:47] <[itchyjunk]> I guess I should stop looking for formal definitions
[21:03:57] *** Joins: frtdlteo^ (~frtdlteo@12.16.129.111)
[21:04:13] *** Joins: ixil (~ixil@82.197.178.137)
[21:04:42] <pyzozord> well now I'm not even sure if I want to port it to SDL
[21:05:02] <Izem> yeah best just to follow the oracle tutorials, oop isn't that serious in Java
[21:05:52] <[itchyjunk]> oh yeah, I forgot to look at what sub typing is too
[21:06:27] <GeDaMo> pyzozord: you could always write your own font rendering :P
[21:06:49] <[itchyjunk]> hmm
[21:06:58] <[itchyjunk]> is Integer a subtype of int in java?
[21:07:14] <pyzozord> GeDaMo: I'm considering now if it's worth dropping down to libfreetype
[21:09:06] <Izem> [itchyjunk] no, and anything close to subtyping in Java would be inheritance
[21:09:10] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (Quit: Konversation terminated!)
[21:09:22] <pyzozord> SDL_ttf source has only 3k lines https://github.com/SDL-mirror/SDL_ttf/blob/master/SDL_ttf.c so I guess I could it could be possible, but that's too much to do in one week
[21:09:24] <bayaz> Title: SDL_ttf/SDL_ttf.c at master · SDL-mirror/SDL_ttf 
[21:09:31] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[21:09:32] *** Joins: silasfox (~sbv@cgn-89-1-215-99.nc.de)
[21:10:23] <pyzozord> hmm stb seems to have subpixel rendering https://github.com/nothings/stb/blob/master/stb_truetype.h#L230
[21:10:27] <bayaz> Title: stb/stb_truetype.h at master · nothings/stb 
[21:10:30] <pyzozord> stb is a really cool library in general
[21:12:44] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[21:14:21] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:15:28] *** Joins: jess (~jess@libera/staff/jess)
[21:15:40] <vin> Can one estimate the max UPI link rate with the number of UPI links available? example intel 8280 has 3 links and gives 10.4 GT/s and 9242 has 4 but what would be it's transfer rate?
[21:15:51] *** Joins: elnavigator (~elnavigat@105.196.100.217)
[21:18:03] <Izem> It would be great if there was a vectorized version of the xterm font
[21:18:48] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (Quit: Konversation terminated!)
[21:19:09] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[21:19:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[21:20:04] <Izem> vin: what unit is GT?
[21:20:06] <vdamewood> Moar food!
[21:21:19] <vdamewood> pyzozord: IIRC SDL_ttf maxes extensve use of freetype.
[21:21:22] *** Joins: kariosfox (~kariosfox@89.229.175.101)
[21:21:56] <vdamewood> makes*
[21:23:06] <vdamewood> pyzozord: Oh, and lack of sub-pixel rendering is usually a FreeType build options. Most Linux distros disable it due to patent problems.
[21:24:09] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[21:24:23] <vdamewood> (If you rebuild freetype with the option enabled, and mess with rpaths in the SDL_ttf.so file, that would probably fix the problem.)
[21:25:27] <vin> Izem: giga transfers per second
[21:26:28] <pulse> the amount of milliseconds it takes a ford GT to lap once around Nurburgring
[21:28:49] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 250 seconds)
[21:29:20] <Izem> vin: you go from link rate to transfer rate, that looks confusing
[21:29:30] <pyzozord> vdamewood: hmm that sounds like a very good idea, "don't write your won, fix sdl_ttf" thanks!
[21:29:50] <pyzozord> I suppose rocking your own version of libraries is much more common practice in c world
[21:30:50] <pyzozord> that's pretty cool because now I can just not worry about it, and later I can just compile my own version of sdl_ttf, drop it next to the program executable so it loads it and that should magically fix the problem
[21:34:24] <vin> Izem: https://en.wikichip.org/wiki/intel/xeon_platinum/8260 look for smp interconnect rate
[21:34:26] <bayaz> Title: Xeon Platinum 8260 - Intel - WikiChip 
[21:35:42] <Izem> 3 connections at 10.4 GT/s
[21:36:13] *** Quits: [itchyjunk] (~Guest63@user/itchyjunk/x-7353470) (Quit: Client closed)
[21:36:22] <Izem> the transfer rate is not going to change with more links
[21:36:27] <Izem> is it?
[21:37:27] *** Quits: silasfox (~sbv@cgn-89-1-215-99.nc.de) (Ping timeout: 240 seconds)
[21:38:05] <vin> yes, which is something I don't know
[21:38:06] <Izem> no I think not, I assume for each link it will be the same 
[21:38:28] <vin> Izem: 
[21:39:00] <vin> I though 10.4 GT/s for total transfer rate for 3 links not per link transfer rate
[21:39:00] <Izem> adding another link just gives you another place to transfer data
[21:39:01] *** Parts: kobalt (~rsonx@user/kobalt) (part)
[21:40:25] <vin> So per link transfer rate would be 3.4 GT/s
[21:40:29] *** Joins: inky_ (~inky@5.77.169.239)
[21:40:36] <vin> in a 3 link setup
[21:41:16] *** Joins: Akuli (~Akuli@213.216.210.73)
[21:41:31] <Izem> well I guess you just have to clear that up, I have no idea tbh
[21:41:48] <Izem> there is #hardware btw
[21:42:10] *** Quits: Citillara (~userid@user/citillara) (Ping timeout: 240 seconds)
[21:42:43] *** Joins: rxndxs (~ed@201.160.157.102.cable.dyn.cableonline.com.mx)
[21:43:52] *** Quits: inky (~inky@37.186.116.131) (Ping timeout: 250 seconds)
[21:44:58] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 240 seconds)
[21:45:15] *** Quits: varaindemian (uid73404@id-73404.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[21:45:42] *** Joins: Trieste (T@user/pilgrim)
[21:46:34] *** Quits: amigojapan (uid86330@id-86330.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[21:47:07] *** Quits: fr13d0kr4 (~fr13d0kr4@ip24-170-205-126.ga.at.cox.net) (Ping timeout: 240 seconds)
[21:47:11] <rxndxs> helooo, anyone in here that plays dwarf fortress ?
[21:48:42] *** Quits: mobidrop (~mobidrop@user/mobidrop) (Quit: we agree)
[21:48:46] *** Joins: gitgoood (~gitgood@80-44-12-89.dynamic.dsl.as9105.com)
[21:49:07] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:49:09] *** Joins: pavonia (~user@user/siracusa)
[21:49:37] *** Joins: programmar (~networker@118.69.128.37)
[21:50:05] <deniska> it's on my "to try eventually, maybe" list
[21:50:33] *** Quits: gggpkm (~gggpkm@60.10.194.43) (Ping timeout: 248 seconds)
[21:53:21] <programmar> i am still a bit vague about how the stack is actually allocated on memory so i would appreciate some clarifying please, like does my RAM have a fixed amount of chunks which is used as the stack which can be used for every running processes or by the startup time of a process, that process will create its own stack
[21:54:18] <GeDaMo> A CPU stack is just an area of memory
[21:54:34] <rxndxs> the OS would just map any regular piece of memory to the proccess's stack
[21:54:35] <GeDaMo> Some CPUs have a specific stack pointer register
[21:54:46] <rxndxs> well yeah arch dependant ^
[21:54:53] <GeDaMo> You can swap stacks, that's how user level threading works
[21:56:22] *** Joins: akevinhuang2 (~thekevinh@user/thekevinhuang)
[21:56:36] <rxndxs> so there's this thing called _dfhack_ which calls itself a 'Memory hacking library for Dwarf Fortress'. I'm interested in how that works, it seems it just replaces a single 'SDL.dll' from the game, and somehow can interact with the whole game's memory ?
[21:56:48] <rxndxs> where can I read about doing something like this ?
[21:57:59] <programmar> GeDaMo: do you mean the kind of stack that when i call a function, it will push a frame onto it ?
[21:58:01] <deniska> rxndxs: well, when you load a dynamic library, it just becomes a part of your memory space
[21:58:22] <deniska> rxndxs: it can do arbitrary stuff any other function in your program can
[21:59:19] *** Quits: akevinhuang (~thekevinh@user/thekevinhuang) (Ping timeout: 252 seconds)
[21:59:31] <rxndxs> I know that is possible, but like, how can it just find arbitrary values like say the health of a player, and update it on demand. I'm mostly curious because it seems to replace SDL.dll which would be just graphics I imagine
[21:59:32] <pyzozord> rxndxs: the library is running in the program's process. It runs as part of the program so has full access to all of programs memory
[22:00:00] <GeDaMo> programmar: yes
[22:00:01] <pyzozord> oh deniska said it better, and earlier
[22:00:15] <jeaye> rxndxs: Ready about "DLL injection"
[22:00:21] <jeaye> s/y//
[22:00:25] <deniska> rxndxs: it may know the location if no address randomization is being used
[22:00:50] <programmar> GeDaMo: huh, so the stack is allocated on the CPU instead of RAM ? somehow i find that a bit impossible since CPU doesn't have too much memory tho
[22:00:56] <programmar> or i could interpret it wrongly 
[22:01:03] <deniska> rxndxs: or it may know "this particular DF function calls SDL_Init and I can calculate offsets"
[22:01:08] <rxndxs> deniska: hmm well it also works with address randomization I think, maybe I'd just have to read the whole source for dfhack and see how it does it
[22:01:09] <GeDaMo> programmar: no, it's in memory but there's a stack pointer register
[22:01:45] <rxndxs> deniska: ahh that could be, I'd have to get my hands dirty I think
[22:01:57] <GeDaMo> programmar: the register points at the address of the top stack element
[22:01:58] <pyzozord> deniska: since it's part of the program it has all the sam capabilities as the rest of the program so it should be able to resolve even randomized addressess, no?
[22:02:09] <jeaye> programmar: https://en.wikipedia.org/wiki/Call_stack
[22:02:10] <bayaz> Title: Call stack - Wikipedia 
[22:02:12] <programmar> GeDaMo: awh ok, got it
[22:02:17] <deniska> pyzozord: yeah, but then you'd need to do scanning and stuff
[22:02:23] <pyzozord> deniska: I don't know how address randomization works, but I imagine there is still some lookup table
[22:02:56] <programmar> GeDaMo: but still i do assume that for each process being started, it has a seperate independet stack of their own right ?
[22:03:09] <deniska> programmar: each thread has its own stack
[22:03:21] <GeDaMo> Each process has its own address space
[22:03:24] <rxndxs> pyzozord: I'm mostly curious about how it manages to work untop of a non-public-source application
[22:03:43] <jeaye> pyzozord: A lookup table would defeat ASLR.
[22:03:47] <deniska> rxndxs: the magic of ~reverse engineering~
[22:04:09] <rxndxs> btw, is there some sort of bin-diff I can use to compare two dll's or something like that ?
[22:04:11] <jeaye> defeat the point of ASLR, I mean.
[22:04:29] *** Joins: rifl` (~user@user/rifl)
[22:04:49] <pyzozord> hmm maybe it has some heuristic that it finds functions/lababels or something and it knows what addresses that function would refer to
[22:05:10] <deniska> you still have to find that place :P
[22:05:17] <pyzozord> but that gets into pretty serious reverse engineering for a stupid game
[22:05:24] <jeaye> rxndxs: https://book.rizin.re/tools/rz-diff/binary_diffing.html
[22:05:25] <bayaz> Title: Binary Diffing - The Official Rizin Book 
[22:05:36] <deniska> a linker just gives one part of the program pointers to refer to another part of a program
[22:05:38] <programmar> GeDaMo: awh right, i guess the OS has to set a fixed amount of how large the address space of one process can have then, is it standard across system or it does depend on something ?
[22:05:42] <deniska> it's not stored in a centralized location
[22:05:59] <rxndxs> jeaye: thx
[22:06:01] *** Quits: rifl (~user@user/rifl) (Ping timeout: 248 seconds)
[22:06:20] <GeDaMo> Each process has a completely separate address space, addresses 0 to max_memory
[22:06:38] <jeaye> rxndxs: Learning more about all of the tools in rizin, as well as the associated gui: cutter, would be great for your own RE journey.
[22:06:46] <deniska> programmar: are you familiar with memory mapping?
[22:06:47] <jeaye> rizin is like the vim of the RE world.
[22:06:48] <GeDaMo> When a context switch happens, the kernel swaps the page tables
[22:07:12] <programmar> deniska: memory ? yes, but the mapping part, not really 
[22:07:47] <rxndxs> jeaye: what's the relationship within rizin and radare ?
[22:07:47] <deniska> programmar: basically any modern CPU you'd run a modern OS on has a device called "memory mapping unit"
[22:07:50] <GeDaMo> programmar: https://en.wikipedia.org/wiki/Virtual_memory
[22:07:50] <bayaz> Title: Virtual memory - Wikipedia 
[22:08:13] <deniska> programmar: which translates memory addresses from virtual ones to the actual addresses in hardware ram
[22:08:16] <jeaye> rxndxs: rizin forked from radare2 to address some usability concerns. The rizin devs were all formerly radare2 devs.
[22:08:26] <jeaye> rxndxs: Kind of like a neovim/vim scenario.
[22:08:40] <rxndxs> jeaye: ooh nice, I used r2 in the past, time to move on
[22:09:05] <jeaye> Usability concerns and also community concerns. r2 has a somewhat toxic community.
[22:09:05] <Izem> ghidra?
[22:09:18] <deniska> programmar: so each process thinks that it has full access to RAM, while OS behind the scenes orchestrates which parts of RAM actually belong to which process
[22:10:05] <programmar> deniska: oohh, that's cool
[22:10:30] <pyzozord> programmar: here is a good book about this https://www.amazon.nl/Linkers-Loaders-John-R-Levine/dp/1558604960
[22:10:54] <programmar> deniska: good to know but still not sure what this "memory mapping unit" deivce you are talking about look like, i tried some gogole search but still couldn't find it 
[22:11:05] <rxndxs> I want to learn more about dynamic libraries and that thing, is where I lack the most about my binary knowledge I think :|
[22:11:16] <deniska> programmar: (that wasn't always the case, in systems like windows3.11 or macos pre-X, a poorly behaved program could write to another process memory and crash the whole system)
[22:11:18] <programmar> pyzozord: ok thk
[22:11:31] <deniska> programmar: it's just a part of a CPU
[22:11:32] *** Joins: jamea (~jamea@200.68.140.40)
[22:11:42] <deniska> programmar: "MMU"
[22:11:50] <programmar> awh, ok
[22:13:41] *** Quits: exvicesindaco (~exvicio@host-80-116-9-227.retail.telecomitalia.it) (Quit: Going offline, see ya! (www.adiirc.com))
[22:15:47] *** Quits: elnavigator (~elnavigat@105.196.100.217) (Ping timeout: 240 seconds)
[22:16:15] <bjs> deniska: programmar: usually called "memory management unit" as it's in charge of more than just mapping, and does things like read/write permissions checking too
[22:17:22] *** Joins: rexar89 (~Kenroy@216.48.99.2)
[22:17:26] <rexar89> hello everyone
[22:17:35] <GeDaMo> Hi rexar89 :)
[22:20:40] *** Joins: frm (~frm@user/frm)
[22:23:25] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[22:24:23] <pyzozord> Oh I think SDL_ttf doesn't render colored emojis
[22:24:34] <pyzozord> And it doesn't do font fallbacks
[22:24:51] <pulse> so it renders emojis, just not colored?
[22:25:05] <Izem> does anyone have a tldr on gpio? what is the configurable part?
[22:25:41] <pyzozord> yeah it appears that way https://imgur.com/a/vhxDNUd
[22:25:41] <bayaz> Title: imgur.com 
[22:25:58] <pyzozord> that's kind of scary
[22:26:08] <deniska> Izem: gpio just means that you can set or read signal levels, without any specific protocol being enforced by an underlying layer
[22:26:33] <Izem> oh ok
[22:27:02] <deniska> Izem: parallel port on older computers is quite close to being GPIO
[22:27:22] <pulse> pyzozord, hmm, a ghostmoji
[22:27:26] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:bdb0:1299:ed93:e6f9) (Quit: Textual IRC Client: www.textualapp.com)
[22:28:03] <pulse> if i were the galactic ruler i would ban emojis. i don't like them
[22:28:15] <pulse> i'm not even sure what specifically i don't like about them. maybe it's the fact that they're inconsistent
[22:28:24] *** Quits: rsx (~dummy@ppp-188-174-138-96.dynamic.mnet-online.de) (Quit: rsx)
[22:28:25] <pyzozord> That project is going to be harder then I tought.
[22:28:29] *** Joins: elnavigator (~elnavigat@105.196.100.217)
[22:28:31] <pulse> pyzozord, what is the project?
[22:28:52] <pyzozord> pulse: migrating https://st.suckless.org/ from Xorg to SDL
[22:28:53] <bayaz> Title: st - simple terminal | suckless.org software that sucks less 
[22:28:57] *** Quits: jamea (~jamea@200.68.140.40) (Ping timeout: 248 seconds)
[22:29:54] <Izem> SDL handles x stuff too right?
[22:30:04] <Izem> maybe you can port it that way first :D
[22:30:07] <pyzozord> I already gave up on subpixel rendering (for now), I need to figure our colored emoijs, and font fallbacks. Right now I can either render emoji or normal letters
[22:30:12] <pyzozord> because they are two different fonts
[22:30:45] <pyzozord> Then I need to still figure out terminal cursor and mouse selection
[22:31:16] <pulse> pyzozord, uf
[22:31:17] <pulse> pyzozord, gl
[22:31:45] <pyzozord> I think it's possible this week, we a bit of luck
[22:32:21] <GeDaMo> https://gankra.github.io/blah/text-hates-you/
[22:32:21] <bayaz> Title: Text Rendering Hates You 
[22:32:34] <Izem> does everyone pretty much use gnu ld?
[22:32:49] <Izem> are there other linkers with scripting ability?
[22:35:01] <rxndxs> jeaye: wow cutter looks really nice
[22:35:06] <pyzozord> I'm not going to support rtl text correctly or ligatures
[22:35:16] <pulse> GeDaMo, you think that's infuriating see https://www.quirksmode.org/blog/pix/css/overflow/css_is_awesome.jpg
[22:35:18] <bayaz> Type: image/jpeg Size: 52.7 kB 
[22:35:23] <pyzozord> that's just too much
[22:36:52] *** Quits: frm (~frm@user/frm) (Quit: frm)
[22:42:23] *** Quits: jmft2 (~JMFT@82.3.54.26) (Killed (NickServ (GHOST command used by jmft2__!~jmft2@81.149.115.87.dyn.plus.net)))
[22:42:47] *** Joins: jmft2__ (~JMFT@82.3.54.26)
[22:44:40] *** Quits: inky_ (~inky@5.77.169.239) (Ping timeout: 240 seconds)
[22:46:15] *** Joins: inky_ (~inky@37.252.67.70)
[22:46:54] <Izem> deniska: you mentioned hobby stuff for ibm pc the other day, what kind of hardware would you get?
[22:48:15] *** Joins: vysn (~vysn@user/vysn)
[22:48:40] *** Joins: poww0wmus1c (~poww0wmus@gateway/tor-sasl/poww0wmus1c)
[22:48:47] *** Quits: nevoyu (~joshua@cpe-192-180-19-146.kya.res.rr.com) (Ping timeout: 240 seconds)
[22:49:05] <deniska> Izem: for starters, bochs and qemu :D
[22:49:19] <Izem> lol
[22:49:22] <Izem> ok :-)
[22:50:04] *** Joins: Jaran (~mail@user/jaran)
[22:50:11] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[22:50:12] <Izem> still cannot even concieve of the stuff they were doing on 8 bit computers
[22:50:13] <deniska> Izem: but then mid 00's PC or a laptop would work fine to actually experiment on real hardware
[22:50:53] <Izem> ok, I think I can find an older tower somewhere
[22:53:47] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[22:54:22] <jeaye> rxndxs: Yeah, cutter is really promising.
[22:54:46] <pyzozord> looks like they added color emojis very recently https://github.com/bminor/SDL_ttf/commit/1df2d28972e3a3ebfead65ad18e8c175223f8c90
[22:54:46] <bayaz> Title: Colored glyph, like Emoji, are now rendered colored when using 'Blend… · bminor/SDL_ttf@1df2d28 
[22:55:08] <pyzozord> I might end up running a custom build of sdl sooner than I thought
[22:56:43] <deniska> Izem: there're also various funky industrial stuff, like PC-104 boards, vortex86 based system on modules, or even raspberry-pi like boards with intel celerons and atoms on them
[22:57:40] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 240 seconds)
[22:58:27] <GeDaMo> https://en.wikipedia.org/wiki/Next_Unit_of_Computing
[22:58:27] <bayaz> Title: Next Unit of Computing - Wikipedia 
[22:59:04] *** Joins: zaher_ (~zaher@37.48.180.179)
[23:01:01] <deniska> NUCs are nice, bit I have slight doubts that they're good targets for hobby osdev…
[23:01:51] <GeDaMo> There's always DOSBox :P
[23:02:00] *** Joins: AmalLight (~AmalLight@37.161.58.74)
[23:03:10] *** Joins: manin (~x@185.242.190.95)
[23:04:32] <MrMobius> the NUCs i looked at were like $600 without ram or ssd :S
[23:04:45] <GeDaMo> I have a Gigabyte BRIX, an older one
[23:04:59] <GeDaMo> I think it was something like £200
[23:05:43] <MrMobius> someone recommended those to me too
[23:05:47] <MrMobius> theyre chinese right?
[23:06:02] <GeDaMo> Isn't everything? :P
[23:06:19] *** Quits: Izem (~Izem@bras-base-london1483w-grc-38-65-95-41-242.dsl.bell.ca) (Ping timeout: 250 seconds)
[23:06:47] <MrMobius> depends on what you mean :)
[23:07:12] *** Joins: Izem (~Izem@bras-base-london1483w-grc-38-65-95-41-242.dsl.bell.ca)
[23:08:16] <deniska> gigabyte produces motherboards
[23:08:28] <deniska> and NUC-like computers are just motherboards but smol
[23:08:40] *** Joins: akevinhuang (~thekevinh@user/thekevinhuang)
[23:08:48] <MrMobius> hmm
[23:08:52] <MrMobius> and a psu?
[23:09:37] <deniska> they use an external 12v brick
[23:10:49] *** Quits: akevinhuang2 (~thekevinh@user/thekevinhuang) (Ping timeout: 252 seconds)
[23:11:19] <Izem> what's a psu?
[23:12:04] <GeDaMo> Power Supply Unit
[23:12:43] <MrMobius> i guess that makes it a double brick if you need one for the mobo and one for the psu
[23:12:56] <MrMobius> GeDaMo, how do you like it?
[23:13:10] <Izem> great, nuc is linux friendly
[23:13:18] <deniska> MrMobius: laptop/minipc power bricks are fairly small nowadays, hardly bigger than a phone charger
[23:13:44] <GeDaMo> I haven't used it much, it was my mum's computer but it seemed OK
[23:14:05] <deniska> my dad like NUCs a lot
[23:14:20] <deniska> I still use one as a server :)
[23:14:23] <deniska> likes*
[23:16:56] *** Quits: frtdlteo^ (~frtdlteo@12.16.129.111) (Remote host closed the connection)
[23:17:24] <Izem> so I've noticed windows development stuff is just for windows, while on linux development stuff is very broad
[23:18:40] <Izem> embedded just seems to use open source stuff but focus mainly on windows environments?
[23:19:16] <pyzozord> Izem: except atms, those run windows xp
[23:19:32] <Izem> xp or ce?
[23:19:45] <pyzozord> could be ce, I'm not sure
[23:22:06] <mercenary> Do smartphones count as embedded?
[23:22:37] <pyzozord> ehh maybe I should give up on SDL_ttf. I need the newest version but I can't just build it, it requires a newer version of SDL. So now I need to build SDL, then make build SDL_ttf using that new version of SDL and then make my program use both. And I'm not sure how to make all of those programs use local versions they all depend on pkg-config and sdl-config
[23:22:55] <MrMobius> mercenary, no
[23:24:37] <Izem> I wonder if anyone ever considered making a mobile product with plan9 or inferno
[23:24:47] *** Quits: rany_ (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[23:24:59] *** Joins: rany (~rany@user/rany)
[23:25:16] <GeDaMo> There were mobile devices built on non-standard OSs in the olden days
[23:25:21] <pyzozord> anyone had experinece with libfreetype2? Is it difficult to use and integrate with SDL? Can it render color emojis?
[23:25:24] <GeDaMo> E.g. Palm Pilot
[23:25:47] <mercenary> and Nokia 9000 bricks
[23:26:09] <GeDaMo> Psion
[23:26:45] <Izem> interesting
[23:26:55] <Izem> so how come it's pretty much just linux now?
[23:27:00] <BrkThruCopyWritr> There has been no greater time in history for e-commerce. By virtue of the web, the average man become a wealthy seller... And he gets there by his message...
[23:27:00] <BrkThruCopyWritr> ...The messsage delivered by a professional copywriter. Copywriting has been the #1 tool in history for making sales. Copywriting applies persuasion to get on-the-fence prospects turned into loyal, return customers...
[23:27:00] <BrkThruCopyWritr> This means more profits for you... more money... more free time... more freedom. Money can be reinvested in your operation and profits multiply...
[23:27:00] <BrkThruCopyWritr> If you're looking to get MORE sales, opt-ins, phone calls, in-store visits...more conversions. A bigger house file... Then please message NOW to start discussing how my word turns into cold hard cash for you.
[23:27:00] <BrkThruCopyWritr> Anyone who messages within 24 hours will get a $20 $ discount on services.
[23:27:20] <Izem> wouldn't the big hardware vendors be interested in their own OS?
[23:27:32] *** Quits: falx (~falx@user/falx) (Quit: wel.... I'm out)
[23:28:14] <Izem> I wonder if there would be more (commericial) OSes if UDI was popular
[23:28:19] <mercenary> No, They have to maintain it. And nobody is going to write apps for one vendor
[23:28:21] *** Quits: schraegstrich (~backslash@user/backslash) (Remote host closed the connection)
[23:28:24] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[23:28:37] <Izem> it could run Java or something
[23:28:43] *** Joins: falx (~falx@user/falx)
[23:28:51] <GeDaMo> Some phones did run Java
[23:28:51] <Izem> and people did?
[23:29:03] <Izem> wasn't that the 70s 80s ?
[23:29:29] *** Joins: backslash (~backslash@user/backslash)
[23:29:33] <Izem> hmm
[23:29:57] *** Joins: webnet4 (~0x100@32.211.211.39)
[23:30:07] <Izem> it certainly seems that way with web apps today
[23:30:43] <Izem> even though there are much less platforms, so I am not sure if it is a large benefit
[23:30:45] <mercenary> Even Cisco is dropping their proprietary OS, and moving to a linux control plane
[23:30:53] <Izem> oh wow
[23:31:19] <wedr> Any proprietary business-oriented OS will never outmatch Windows and Linux OSes.
[23:31:34] *** Joins: gareppa (~gareppa@user/gareppa)
[23:31:36] <wedr> That's my hot take
[23:32:03] <Izem> security is still a major concern
[23:32:05] *** Joins: audiocat (~audio@2603-8081-1801-3bb5-272d-94de-6547-fe9d.res6.spectrum.com)
[23:32:16] <webnet4> not at the pace of USB standards and all the crazy things people want to do with routers
[23:32:30] <mercenary> Only in limited markets. VxWorks is still alive
[23:32:41] <Izem> I see, guess those drivers are really difficult to come by
[23:32:52] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (Remote host closed the connection)
[23:33:39] <Izem> webnet4: what interesting thing is happening with routers?
[23:33:51] <webnet4> they all have USB ports and do weird things with them
[23:34:48] <Izem> oh is this part of "it's now fast enough to use linux for networking so I don't need special hardware"?
[23:35:02] <mercenary> ehm, routers or 'switch-router-AP-modem' things?
[23:35:19] <webnet4> whatever cisco is making that they are incapable of maintianing
[23:36:10] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[23:36:21] *** Joins: Auron (Auron956@user/auron)
[23:36:59] <mercenary> Not incapable, it is just cheaper for them to only maintain drivers and a CLI, instead of an entire OS
[23:37:27] *** Quits: mjbatty (~mjbatty@82.2.17.205) (Quit: Leaving)
[23:37:50] <webnet4> how much cheaper
[23:38:34] <mercenary> no idea. Enough that various BU's moved
[23:39:23] *** Joins: unbuggedware (~unbuggedw@2602:fe90:300:1a2::40e1:8aec)
[23:39:37] *** Quits: abrowne (~AB@159.196.171.119) (Read error: Connection reset by peer)
[23:39:47] <Izem> BU ?
[23:39:54] <mercenary> Busines Unit
[23:40:01] <Izem> oh
[23:40:43] <webnet4> engineers in Cisco's booth demonstrated the vendor's latest Integrated Service Routers, which use small Linux-based blades to run application-focused network services, such as content caching, security and voice/e-mail messaging.
[23:40:48] <webnet4> for the love of the apps
[23:40:50] <webnet4> it seems
[23:41:09] <Izem> interesting
[23:41:13] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[23:41:19] *** Quits: riff_IRC (~riff-IRC@user/riff-irc) (Read error: Connection reset by peer)
[23:41:43] <mercenary> Don't think of companies like microsoft and cisco as one company. Think of it as a loosely coupled set of BU's, all at war with each other
[23:41:54] <Izem> well, pretty nice that it is linux
[23:42:19] <Izem> but I guess this ends up with tragedy of the commons stuff happening?
[23:42:43] <webnet4> the nice part is you might get some bug fixes from cisco
[23:42:46] *** Joins: riff_IRC (~riff-IRC@user/riff-irc)
[23:43:57] <Izem> if there was not Linux, it probably would've happened to one of the bsds right?
[23:44:19] <Izem> cause I can't imagine what it would look like with proprietary OSes competeting
[23:44:36] <Izem> maybe m$ would've been broken up :P
[23:44:48] *** Quits: gareppa (~gareppa@user/gareppa) (Quit: Leaving)
[23:46:00] <mercenary> Before linux, there was Microsoft versus the commercial Unixes: SCO, AIX, AT&T, etc
[23:47:03] *** Quits: programmar (~networker@118.69.128.37) (Ping timeout: 250 seconds)
[23:47:27] <Izem> yeah, wasn't m$ winning since the unixes where in legal battles?
[23:47:40] <Izem> and just m$ 90s dominace
[23:48:11] <webnet4> it's because IBM backed them
[23:48:22] <Izem> ooooh
[23:48:29] <Izem> interesting
[23:48:37] <mercenary> Everybody has an opinion on that. But there is no control group to see what otherwise might have happened
[23:48:51] <webnet4> but there was some BSD issue with copyright iirc
[23:49:06] <webnet4> before linux's time to shine
[23:49:24] <mercenary> IBM had OS/2, technically better. Microsoft had speed and good marketing </opinion>
[23:50:42] <Izem> OS/2 got incorporated into windows NT?
[23:51:17] <webnet4> "OS/2 (Operating System/2) is a series of computer operating systems, initially created by Microsoft and IBM under the leadership of IBM s"
[23:55:31] <webnet4> https://www.nytimes.com/1985/08/22/business/microsoft-and-ibm-join-forces.html  "That could have locked others in the industry out of the market and made it impossible for existing software to run on future I.B.M. computers."
[23:55:32] <bayaz> Title: MICROSOFT AND I.B.M. JOIN FORCES (Published 1985) 
[23:55:32] <webnet4> looooool
[23:55:53] <webnet4> oh so microsoft saved us! hahaha
[23:55:58] <pyzozord> Can I list in make all available targets?
[23:56:43] <mercenary> IVM wasn't going to sell OS/2 to clone makers in direct competition with their hardware. And cheap clones was where the volumes (and the money) was
[23:58:10] <GeDaMo> They also tried to change PC hardware with PS/2 and MCA
[23:59:53] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
