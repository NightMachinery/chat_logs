[00:00:44] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[00:01:05] *** Joins: JollyRoger (~JollyRoge@user/thejollyroger)
[00:01:10] *** Joins: kish` (~sid742412@user/aqua)
[00:01:30] <ioxzev1z> Is SHA-224 just SHA-256 truncated to 224 bits?
[00:02:36] *** Joins: Populus (~emil.a.jo@c-afbbe455.021-17-6b6c6d1.bbcust.telenor.se)
[00:02:46] *** Joins: mz` (~mz`@user/mz/x-8532539)
[00:03:14] <yawkat> no
[00:04:16] <sarnold> hah, I always assumed it was..
[00:04:33] *** Joins: yanmaani1 (~yanmaani@gateway/tor-sasl/yanmaani)
[00:04:47] *** yanmaani1 is now known as yanmaani
[00:04:59] <yanmaani> hiya
[00:05:00] <sarnold> SHA-224 is identical to SHA-256, except that:
[00:05:00] <sarnold>     the initial hash values h0 through h7 are different, and
[00:05:01] <sarnold>     the output is constructed by omitting h7.
[00:05:14] <sarnold> well there ya go. I've been assuming wrong for ages.
[00:05:28] <sarnold> ( https://en.wikipedia.org/wiki/SHA-2 )
[00:05:37] <yanmaani> why does HMAC use the weird padding construction?
[00:05:48] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[00:05:53] *** Joins: bsdbandit01 (~bsdbandit@172.58.191.152)
[00:06:05] <yanmaani> why can't it just do H(H(key) . H(message))?
[00:07:57] *** Quits: stiell (~stiell@gateway/tor-sasl/stiell) (Ping timeout: 276 seconds)
[00:08:31] <yanmaani> oh, it's cos the underlying might be broken
[00:09:24] *** Joins: stiell (~stiell@gateway/tor-sasl/stiell)
[00:10:27] *** Quits: bsdbandit01 (~bsdbandit@172.58.191.152) (Read error: Connection reset by peer)
[00:13:41] *** Quits: cwebber (~user@user/cwebber) (Ping timeout: 250 seconds)
[00:15:01] *** Quits: semisimple (~semisimpl@ip4d171f4c.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[00:17:05] *** Joins: semisimple (~semisimpl@77.23.31.76)
[00:19:00] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[00:20:49] *** Joins: mz` (~mz`@user/mz/x-8532539)
[00:22:21] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[00:23:14] <iz> yeah, to stop hash attacks where you append stuff to the end of message
[00:23:37] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[00:24:05] <iz> that's why hmac-md5 is still okay
[00:24:34] *** Joins: gedulis120 (~gedulis12@46.251.49.174)
[00:24:42] *** Parts: gedulis120 (~gedulis12@46.251.49.174) ()
[00:27:13] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[00:28:35] <yanmaani> seems like H(H(key) . H(message)) is fine then?
[00:28:52] <yanmaani> but that causes other problems, if the hashes collide
[00:29:26] <iz> yeah, cuz of this type of thing: https://en.wikipedia.org/wiki/Length_extension_attack
[00:29:36] <yanmaani> no?
[00:29:44] <yanmaani> that's not the problem
[00:29:49] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[00:29:55] <yanmaani> H(H(k).H(m)) is safe
[00:30:15] <yanmaani> even if you can get H(m') given H(m), you don't have H(m)...
[00:30:27] <yanmaani> the problem is that H(m) == H(m') if the hash is broken
[00:31:00] *** Joins: bsdbandit01 (~bsdbandit@172.58.191.152)
[00:32:06] *** Joins: mz` (~mz`@user/mz/x-8532539)
[00:32:07] *** Quits: bsdbandit01 (~bsdbandit@172.58.191.152) (Read error: Connection reset by peer)
[00:33:39] <iz> oh, yeah, the extra hash in the hmac construction does most of it i guess, but the prefix/postfix stuff is there for some reason.. i thought it was also related to length extension attacks, but maybe not
[00:34:11] <yawkat> H(H(k).H(m)) is not collision resistant if H isnt
[00:34:34] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[00:34:57] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[00:36:53] *** Joins: Sofia (~sofia@gateway/tor-sasl/sofia)
[00:39:36] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Read error: Connection reset by peer)
[00:41:53] <iz> oh, i guess what you are talking about is called NMAC (Nested)
[00:42:30] <iz> https://cseweb.ucsd.edu//~mihir/papers/kmd5.pdf
[00:42:46] *** Joins: mz` (~mz`@user/mz/x-8532539)
[00:43:21] <iz> so the ipad/opad for hmac is just a way to do it where IV isn't ever needed, even if you were using an algorithm that needed it
[00:43:33] *** Joins: Malvolio (~Malvolio@user/malvolio)
[00:43:50] <iz> if i understood that correctly
[00:44:52] <maroon> i understand why ipad and opad need a big hamming distance between them, but i dunno why they also need distance from the original key
[00:45:21] <maroon> in H(H(k).H(m)) what is the dot meaning?
[00:45:27] <iz> i think they just need to be different
[00:45:47] <iz> and besides that, the bytes are kinda arbitrary, but standard
[00:45:53] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[00:46:33] <maroon> the bytes were chosen so that ipad-xor-opad has 4-of-8 bits different
[00:49:23] <maroon> but they were also chosen so that they also both have 4 of 8 bits different than the key
[00:50:28] <TimMc> here I got you an ipad
[00:50:29] <TimMc> \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
[00:51:56] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[00:52:13] <dostoyevsky2> TimMc: That'd be $949.95
[00:53:09] <iz> the opad is the knockoff version where all the buttons and controls are opposite to avoid lawsuits
[00:57:19] *** Joins: mz` (~mz`@user/mz/x-8532539)
[00:58:00] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[00:59:54] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Remote host closed the connection)
[01:00:28] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[01:01:07] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[01:05:41] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 250 seconds)
[01:10:03] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[01:12:35] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Quit: leaving)
[01:18:44] *** Joins: mz` (~mz`@user/mz/x-8532539)
[01:21:40] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[01:23:39] *** Quits: kristijonas (~kristijon@81-7-103-234.static.zebra.lt) (Quit: Client closed)
[01:27:54] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[01:36:52] *** Joins: mz` (~mz`@user/mz/x-8532539)
[01:39:50] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[01:41:42] *** Joins: machinedgod (~machinedg@24.105.81.50)
[01:42:38] *** Joins: bsdbandit01 (~bsdbandit@172.58.191.152)
[01:44:49] *** Quits: bsdbandit01 (~bsdbandit@172.58.191.152) (Read error: Connection reset by peer)
[01:45:18] *** Quits: Brownout (~brown@user/brown) (Remote host closed the connection)
[01:45:22] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[01:45:32] *** Joins: Brownout (~brown@user/brown)
[01:46:25] *** Quits: CryptoDavid (uid14990@id-14990.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[01:50:56] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[01:51:38] *** Quits: son0p (~ff@2800:484:1d81:b700:d40b:900:b387:320) (Ping timeout: 252 seconds)
[01:57:24] *** Joins: mz` (~mz`@user/mz/x-8532539)
[02:00:26] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[02:00:31] *** Quits: chomwitt (~chomwitt@2a02:587:dc19:a500:12c3:7bff:fe6d:d374) (Ping timeout: 250 seconds)
[02:04:23] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[02:04:51] *** Quits: Guyver2 (~Guyver@guyver2.xs4all.nl) (Quit: Going offline, see ya! (www.adiirc.com))
[02:05:16] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Read error: Connection reset by peer)
[02:07:39] *** Joins: andreasbuhr (~quassel@p549db4c8.dip0.t-ipconnect.de)
[02:08:10] *** Quits: andreasbuhr (~quassel@p549db4c8.dip0.t-ipconnect.de) (Client Quit)
[02:10:00] *** Parts: onelegend (~ionizingm@2001:470:69fc:105::1:4aa1) ()
[02:11:11] *** Joins: mz` (~mz`@user/mz/x-8532539)
[02:12:06] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[02:14:17] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[02:18:05] *** moose`` is now known as moose
[02:19:46] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[02:26:25] *** Joins: mz` (~mz`@user/mz/x-8532539)
[02:29:28] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[02:29:31] *** Quits: Malvolio (~Malvolio@user/malvolio) (Read error: Connection reset by peer)
[02:29:57] *** Joins: bsdbandit01 (~bsdbandit@172.58.191.152)
[02:31:34] *** Quits: bsdbandit01 (~bsdbandit@172.58.191.152) (Read error: Connection reset by peer)
[02:32:52] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[02:33:09] *** Joins: bsdbandit01 (~bsdbandit@172.58.191.152)
[02:34:02] *** Joins: wyre_ (~wyre@user/wyre)
[02:35:17] *** Quits: wyre (~wyre@user/wyre) (Ping timeout: 265 seconds)
[02:35:54] *** Joins: Malvolio (~Malvolio@user/malvolio)
[02:39:37] *** Quits: bsdbandit01 (~bsdbandit@172.58.191.152) (Read error: Connection reset by peer)
[02:40:00] *** Joins: mz` (~mz`@user/mz/x-8532539)
[02:43:11] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[02:53:36] *** Joins: mz` (~mz`@user/mz/x-8532539)
[02:56:37] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[03:01:24] *** Joins: lord| (~lordpipe@user/lordpipe)
[03:01:36] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[03:04:22] *** Joins: bsdbandit01 (~bsdbandit@172.58.191.152)
[03:07:10] *** Quits: bsdbandit01 (~bsdbandit@172.58.191.152) (Read error: Connection reset by peer)
[03:08:37] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Remote host closed the connection)
[03:10:25] *** Joins: rustycl0ck (~ircuser@gateway/tor-sasl/rustycl0ck)
[03:11:35] *** Quits: lord| (~lordpipe@user/lordpipe) (Read error: Connection reset by peer)
[03:14:46] *** Joins: mz` (~mz`@user/mz/x-8532539)
[03:14:47] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: caveman)
[03:15:48] *** Quits: rustycl0ck (~ircuser@gateway/tor-sasl/rustycl0ck) (Ping timeout: 276 seconds)
[03:16:17] *** Joins: rustycl0ck (~ircuser@gateway/tor-sasl/rustycl0ck)
[03:17:48] *** Joins: lord| (~lordpipe@user/lordpipe)
[03:17:51] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[03:23:43] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[03:24:29] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[03:29:27] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[03:30:03] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (*.net *.split)
[03:30:03] *** Quits: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8) (*.net *.split)
[03:30:03] *** Quits: CryptoClub (~fafs@88.red-83-34-81.dynamicip.rima-tde.net) (*.net *.split)
[03:30:03] *** Quits: chasmo77 (~chas77@c-71-193-246-4.hsd1.or.comcast.net) (*.net *.split)
[03:30:03] *** Quits: pi4 (~pi@lfbn-mon-1-1101-95.w90-48.abo.wanadoo.fr) (*.net *.split)
[03:30:03] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (*.net *.split)
[03:30:03] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (*.net *.split)
[03:30:03] *** Quits: tent4051 (~tent405@107-214-50-180.lightspeed.bcvloh.sbcglobal.net) (*.net *.split)
[03:30:03] *** Quits: nexgen (~nexgen@li614-178.members.linode.com) (*.net *.split)
[03:30:03] *** Quits: iz (~tv@user/xiz) (*.net *.split)
[03:30:03] *** Quits: mykhal (~m@user/mykhal) (*.net *.split)
[03:30:04] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (*.net *.split)
[03:30:04] *** Quits: HumanG33k (~HumanG33k@dau94-2-82-66-65-160.fbx.proxad.net) (*.net *.split)
[03:30:04] *** Quits: EmmyNoether (~EmmyNoeth@yoke.ch0wn.org) (*.net *.split)
[03:30:04] *** Quits: BUSY (~BUSY@user/busy) (*.net *.split)
[03:30:04] *** Quits: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net) (*.net *.split)
[03:30:04] *** Quits: defjam (~eb0t@90.210.94.161) (*.net *.split)
[03:30:04] *** Quits: instantp10neer (~instantp1@user/instantp10neer) (*.net *.split)
[03:30:04] *** Quits: jab416171 (~jab416171@c-174-52-177-39.hsd1.ut.comcast.net) (*.net *.split)
[03:30:04] *** Quits: rxcomm (~rxcomm@user/rxcomm) (*.net *.split)
[03:30:04] *** Quits: iokill_ (~dave@static.16.105.130.94.clients.your-server.de) (*.net *.split)
[03:30:04] *** Quits: sm2n (ae95cb1267@user/sm2n) (*.net *.split)
[03:30:04] *** Quits: hendi (sid489601@id-489601.lymington.irccloud.com) (*.net *.split)
[03:30:04] *** Quits: riv (river@tilde.team/user/river) (*.net *.split)
[03:30:04] *** Quits: webstrand (~webstrand@user/webstrand) (*.net *.split)
[03:30:04] *** Quits: Lochnair8 (~Lochnair@wireguard/contributor/lochnair) (*.net *.split)
[03:30:04] *** Quits: Tykling (~tykling@irc.tyknet.dk) (*.net *.split)
[03:30:04] *** Quits: koolazer (~koo@user/koolazer) (*.net *.split)
[03:30:05] *** Quits: bgs (~bgs@upc.si.94.140.92.241.dc.cable.static.telemach.net) (*.net *.split)
[03:30:05] *** Quits: int-e (~noone@int-e.eu) (*.net *.split)
[03:30:05] *** Quits: nullheroes (~nullheroe@168.235.66.22) (*.net *.split)
[03:30:05] *** Quits: maroon (tinycrypt@user/maroon) (*.net *.split)
[03:30:05] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (*.net *.split)
[03:30:05] *** Quits: joe7057 (~joseph@wnpgmb016qw-ds01-2-119.dynamic.bellmts.net) (*.net *.split)
[03:30:06] *** Quits: cacu[m] (~cacuconve@2001:470:69fc:105::b9df) (*.net *.split)
[03:30:06] *** Quits: Ragnor (~Ragnor@user/ragnor) (*.net *.split)
[03:30:06] *** Quits: steam (~steam@user/steam) (*.net *.split)
[03:30:06] *** Quits: Bonstra (~Bonstra@val.bonstra.fr.eu.org) (*.net *.split)
[03:30:06] *** Quits: abraham (~abraham@143.244.185.86) (*.net *.split)
[03:30:06] *** Quits: berndj (~berndj@ns1.linksynergy.co.za) (*.net *.split)
[03:30:06] *** Quits: aizen (sid462968@id-462968.ilkley.irccloud.com) (*.net *.split)
[03:30:06] *** Quits: JimL (~quassel@89-162-2-132.fiber.signal.no) (*.net *.split)
[03:30:06] *** Quits: msfninja (~kali@user/msfninja) (*.net *.split)
[03:30:06] *** Quits: karu (~karasu@puffy.mat.univie.ac.at) (*.net *.split)
[03:30:06] *** Quits: davidc__ (~user13172@will.hack.for.beer) (*.net *.split)
[03:30:06] *** Quits: undeclared (nullx@user/undeclared) (*.net *.split)
[03:30:12] *** Joins: iokill (~dave@static.16.105.130.94.clients.your-server.de)
[03:30:16] *** Joins: iz (~tv@157-131-220-165.fiber.dynamic.sonic.net)
[03:30:17] *** Joins: JimL (~quassel@89-162-2-132.fiber.signal.no)
[03:30:18] *** Joins: pi4 (~pi@lfbn-mon-1-1101-95.w90-48.abo.wanadoo.fr)
[03:30:21] *** Joins: Ragnor (~Ragnor@dslb-084-062-055-138.084.062.pools.vodafone-ip.de)
[03:30:27] *** Joins: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8)
[03:30:30] *** Joins: chasmo77 (~chas77@c-71-193-246-4.hsd1.or.comcast.net)
[03:30:37] *** Joins: msfninja (~kali@ip149-32-176-143.adsl2.static.versatel.nl)
[03:30:38] *** Joins: Seirdy (~Seirdy@76-247-182-44.lightspeed.sjcpca.sbcglobal.net)
[03:30:40] *** Joins: EmmyNoether (~EmmyNoeth@193.29.56.54)
[03:30:42] *** Quits: Ragnor (~Ragnor@dslb-084-062-055-138.084.062.pools.vodafone-ip.de) (Changing host)
[03:30:42] *** Joins: Ragnor (~Ragnor@user/ragnor)
[03:30:43] *** Joins: joe7057 (~joseph@wnpgmb016qw-ds01-2-119.dynamic.bellmts.net)
[03:30:49] *** Joins: defjam (~eb0t@90.210.94.161)
[03:30:59] *** Joins: hendi (sid489601@2a03:5180:f:2::7:7881)
[03:31:21] *** Joins: nullheroes (~nullheroe@168.235.66.22)
[03:31:24] *** Joins: aizen (sid462968@ilkley.irccloud.com)
[03:31:44] *** Joins: maroon (tinycrypt@user/maroon)
[03:31:46] *** Joins: HumanG33k (~HumanG33k@dau94-2-82-66-65-160.fbx.proxad.net)
[03:31:50] *** Joins: jab416171 (~jab416171@c-174-52-177-39.hsd1.ut.comcast.net)
[03:33:02] *** Joins: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net)
[03:33:13] *** Joins: Bonstra (~Bonstra@val.bonstra.fr.eu.org)
[03:33:18] *** Joins: CryptoClub (~fafs@88.red-83-34-81.dynamicip.rima-tde.net)
[03:33:32] *** Quits: Malvolio (~Malvolio@user/malvolio) (Ping timeout: 240 seconds)
[03:33:36] *** Joins: instantp10neer (~instantp1@user/instantp10neer)
[03:34:04] *** Joins: berndj (~berndj@ns2.linksynergy.co.za)
[03:34:18] *** Joins: sm2n (ae95cb1267@user/sm2n)
[03:34:29] *** Quits: gde33 (~gde33@84-106-154-98.cable.dynamic.v4.ziggo.nl) (Ping timeout: 252 seconds)
[03:34:36] *** Joins: bgs (~bgs@upc.si.94.140.92.241.dc.cable.static.telemach.net)
[03:34:36] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[03:34:39] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[03:34:48] *** Joins: gde33 (~gde33@84-106-154-98.cable.dynamic.v4.ziggo.nl)
[03:34:52] *** Joins: steam (~steam@user/steam)
[03:35:01] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[03:35:17] *** Joins: davidc__ (~user13172@will.hack.for.beer)
[03:35:17] *** Joins: Tykling (~tykling@irc.tyknet.dk)
[03:35:17] *** Joins: int-e (~noone@int-e.eu)
[03:35:34] *** Joins: mykhal (~m@user/mykhal)
[03:35:35] *** Joins: karu (~karasu@puffy.mat.univie.ac.at)
[03:35:36] *** Joins: koolazer (~koo@user/koolazer)
[03:35:37] *** Joins: webstrand (~webstrand@user/webstrand)
[03:35:44] *** Joins: mz` (~mz`@user/mz/x-8532539)
[03:35:49] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[03:36:25] *** Joins: riv (river@tilde.team/user/river)
[03:36:26] *** Joins: rxcomm (~rxcomm@user/rxcomm)
[03:37:06] *** Joins: tent4051 (~tent405@2600:1700:8150:214f:cd83:7f15:76fd:3738)
[03:37:45] *** Joins: cacu[m] (~cacuconve@2001:470:69fc:105::b9df)
[03:38:48] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[03:40:20] *** Joins: Malvolio (~Malvolio@user/malvolio)
[03:43:40] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Read error: Connection reset by peer)
[03:45:49] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[03:47:23] *** Joins: Wulf (~Wulf@user/wulf)
[03:47:27] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[03:49:05] *** Quits: inlight (~inlight@user/inlight) (Remote host closed the connection)
[04:04:22] *** Joins: bsdbandit01 (~bsdbandit@172.58.191.152)
[04:04:29] *** Quits: bsdbandit01 (~bsdbandit@172.58.191.152) (Read error: Connection reset by peer)
[04:05:11] *** Joins: mz` (~mz`@user/mz/x-8532539)
[04:06:18] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:c959:9e8d:b7ca:4f4d)
[04:08:13] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[04:14:09] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 256 seconds)
[04:16:30] *** Joins: mz` (~mz`@user/mz/x-8532539)
[04:19:36] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[04:21:32] *** Quits: tent4051 (~tent405@2600:1700:8150:214f:cd83:7f15:76fd:3738) (Ping timeout: 240 seconds)
[04:22:39] *** Joins: BUSY (~BUSY@user/busy)
[04:23:27] *** Joins: tent4051 (~tent405@2600:1700:8150:214f:cd83:7f15:76fd:3738)
[04:30:01] *** Quits: CryptoClub (~fafs@88.red-83-34-81.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[04:38:18] *** Joins: mz` (~mz`@user/mz/x-8532539)
[04:39:16] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[04:39:39] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Read error: Connection reset by peer)
[04:41:35] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[04:52:07] *** Joins: mz` (~mz`@user/mz/x-8532539)
[04:55:11] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[04:57:48] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[04:57:59] *** ChanServ sets mode: +o sarnold
[04:58:11] *** sarnold sets mode: +b mz`!~mz`@user/mz/x-8532539$##fix_your_connection
[04:58:13] *** sarnold sets mode: -o sarnold
[04:58:35] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Read error: Connection reset by peer)
[05:04:02] *** Joins: frost (~frost@user/frost)
[05:05:39] *** Quits: curium (~curium@mail.clouded.monster) (Remote host closed the connection)
[05:07:07] *** Joins: curium (~curium@mail.clouded.monster)
[05:17:54] *** Joins: abraham (~abraham@143.244.185.86)
[05:18:06] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: caveman)
[05:19:16] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[05:24:56] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: caveman)
[05:25:23] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[05:27:30] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 260 seconds)
[05:51:41] *** Quits: rardiol (~quassel@user/rardiol) (Ping timeout: 250 seconds)
[06:04:33] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[06:05:21] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Read error: Connection reset by peer)
[06:07:38] *** Joins: bsdbandit01 (~bsdbandit@172.58.191.152)
[06:09:36] *** Quits: bsdbandit01 (~bsdbandit@172.58.191.152) (Read error: Connection reset by peer)
[06:36:57] *** Quits: lord| (~lordpipe@user/lordpipe) (Ping timeout: 256 seconds)
[07:08:18] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[07:12:39] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 256 seconds)
[07:14:34] *** Joins: bsdbandit01 (~bsdbandit@172.58.191.152)
[07:16:38] *** Quits: bsdbandit01 (~bsdbandit@172.58.191.152) (Read error: Connection reset by peer)
[07:36:22] *** Joins: lord| (~lordpipe@user/lordpipe)
[07:50:37] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[07:51:47] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Read error: Connection reset by peer)
[07:57:17] *** Quits: lord| (~lordpipe@user/lordpipe) (Ping timeout: 240 seconds)
[08:11:01] *** Quits: Populus (~emil.a.jo@c-afbbe455.021-17-6b6c6d1.bbcust.telenor.se) (Ping timeout: 256 seconds)
[08:20:26] *** Joins: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com)
[08:21:13] *** Joins: lord| (~lordpipe@user/lordpipe)
[08:32:33] *** Quits: igemnace (~ian@user/igemnace) (Ping timeout: 256 seconds)
[08:46:19] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[08:46:57] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Read error: Connection reset by peer)
[08:47:40] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[08:47:52] *** Joins: igemnace (~ian@user/igemnace)
[08:49:58] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Read error: Connection reset by peer)
[08:53:04] *** Joins: bsdbandit01 (~bsdbandit@172.58.191.152)
[08:55:21] *** Quits: bsdbandit01 (~bsdbandit@172.58.191.152) (Read error: Connection reset by peer)
[09:00:04] *** Joins: bsdbandit01 (~bsdbandit@172.58.191.152)
[09:01:56] *** Quits: bsdbandit01 (~bsdbandit@172.58.191.152) (Read error: Connection reset by peer)
[09:44:59] *** Joins: BOKALDO (~BOKALDO@user/bokaldo)
[09:47:53] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[09:49:46] *** Joins: chomwitt (~chomwitt@2a02:587:dc19:a500:12c3:7bff:fe6d:d374)
[09:49:47] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Read error: Connection reset by peer)
[09:50:17] *** Quits: lord| (~lordpipe@user/lordpipe) (Ping timeout: 240 seconds)
[09:59:56] *** Joins: bsdbandit01 (~bsdbandit@172.58.191.152)
[10:02:08] *** wyre_ is now known as wyre
[10:02:18] *** Quits: bsdbandit01 (~bsdbandit@172.58.191.152) (Read error: Connection reset by peer)
[10:07:33] *** Joins: ravan (~ravan@user/ravan)
[10:09:42] *** Joins: lord| (~lordpipe@user/lordpipe)
[10:10:36] *** Joins: ravan_ (~ravan@42.201.198.151)
[10:10:36] *** Quits: ravan_ (~ravan@42.201.198.151) (Changing host)
[10:10:36] *** Joins: ravan_ (~ravan@user/ravan)
[10:11:22] *** Quits: ravan_ (~ravan@user/ravan) (Remote host closed the connection)
[10:11:47] *** Quits: ravan (~ravan@user/ravan) (Client Quit)
[10:12:04] *** Joins: ravan (~ravan@user/ravan)
[10:13:24] *** Quits: lord| (~lordpipe@user/lordpipe) (Client Quit)
[10:16:32] *** Joins: bsdbandit01 (~bsdbandit@172.58.191.152)
[10:16:54] *** Quits: bsdbandit01 (~bsdbandit@172.58.191.152) (Read error: Connection reset by peer)
[10:24:35] *** Joins: lord| (~lordpipe@user/lordpipe)
[10:27:42] *** Joins: szarka (~szarka@24-124-20-18-static.midco.net)
[10:29:47] *** Quits: madage (~madage@user/madage) (Remote host closed the connection)
[10:30:02] *** Joins: madage (~madage@user/madage)
[10:32:50] *** Joins: bsdbandit01 (~bsdbandit@172.58.191.152)
[10:34:06] *** Quits: instantp10neer (~instantp1@user/instantp10neer) (Ping timeout: 260 seconds)
[10:34:30] *** Quits: bsdbandit01 (~bsdbandit@172.58.191.152) (Read error: Connection reset by peer)
[10:43:46] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[10:48:29] *** Quits: Pythayr (~pither195@64.42.181.51) (Ping timeout: 268 seconds)
[10:55:05] *** Quits: BOKALDO (~BOKALDO@user/bokaldo) (Quit: Leaving)
[11:00:05] *** Quits: jtgd (~jtgd@user/jtgd) (Quit: WeeChat 3.3)
[11:03:17] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Ping timeout: 240 seconds)
[11:05:07] *** Joins: BOKALDO (~BOKALDO@user/bokaldo)
[11:06:21] *** Joins: jtgd (~jtgd@user/jtgd)
[11:06:53] *** Joins: instantp10neer (~instantp1@user/instantp10neer)
[11:09:16] *** Joins: powftw (uid448161@id-448161.lymington.irccloud.com)
[11:10:40] *** Quits: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net) (Quit: Leaving)
[11:12:13] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[11:17:41] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[11:23:36] *** Joins: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net)
[11:33:38] *** Joins: Pythayr (~pither195@64.42.181.51)
[11:38:17] *** Quits: Pythayr (~pither195@64.42.181.51) (Ping timeout: 240 seconds)
[11:43:51] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[11:44:39] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Read error: Connection reset by peer)
[12:06:19] *** Joins: Haohmaru (~Haohmaru@195.24.53.110)
[12:11:53] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[12:13:02] *** Quits: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com) (Quit: jarthur)
[12:16:38] *** Joins: Pythayr (~pither195@64.42.181.50)
[12:17:30] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-e0b9-1b23-8395-a665.res6.spectrum.com)
[12:19:30] *** Joins: machinedgod (~machinedg@24.105.81.50)
[12:21:17] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-e0b9-1b23-8395-a665.res6.spectrum.com) (Client Quit)
[12:21:36] *** Quits: Pythayr (~pither195@64.42.181.50) (Ping timeout: 268 seconds)
[12:28:21] *** Joins: Guyver2 (~Guyver@guyver2.xs4all.nl)
[12:29:18] *** Joins: inlight (~inlight@157.35.40.164)
[12:29:18] *** Quits: inlight (~inlight@157.35.40.164) (Changing host)
[12:29:18] *** Joins: inlight (~inlight@user/inlight)
[12:34:13] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Remote host closed the connection)
[12:35:14] *** Joins: andreasbuhr (~quassel@p548ddec4.dip0.t-ipconnect.de)
[12:50:10] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[12:51:37] *** Joins: CryptoClub (~fafs@88.red-83-34-81.dynamicip.rima-tde.net)
[12:54:47] *** Joins: gabriel1_ (~gabriel1@37.164.124.31)
[12:56:54] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 276 seconds)
[12:57:01] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Ping timeout: 245 seconds)
[12:58:20] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[12:58:21] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Quit: leaving)
[12:58:57] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[13:00:27] *** Quits: msfninja (~kali@ip149-32-176-143.adsl2.static.versatel.nl) (Changing host)
[13:00:27] *** Joins: msfninja (~kali@user/msfninja)
[13:00:35] *** Joins: igemnace (~ian@user/igemnace)
[13:30:06] *** Joins: gproto23 (~gproto23@user/gproto23)
[13:31:12] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:33:26] *** Quits: tent4051 (~tent405@2600:1700:8150:214f:cd83:7f15:76fd:3738) (Ping timeout: 252 seconds)
[13:35:12] *** Joins: tent4051 (~tent405@107-214-50-180.lightspeed.bcvloh.sbcglobal.net)
[13:41:02] *** Quits: joilerv_ (~joilerv@host86-191-93-41.range86-191.btcentralplus.com) (Quit: Textual IRC Client: www.textualapp.com)
[13:44:23] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[13:45:17] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Read error: Connection reset by peer)
[13:45:41] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[13:47:03] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[13:47:03] *** Lord_of_Life_ is now known as Lord_of_Life
[13:49:18] *** Quits: Hash (~Hash@hashsecurity.org) (Quit: https://hashsecurity.org)
[13:50:21] *** Joins: Hash (~Hash@hashsecurity.org)
[13:54:59] *** Quits: gabriel1_ (~gabriel1@37.164.124.31) (Ping timeout: 256 seconds)
[13:57:12] *** Quits: boxframes (~Saloframe@2607:9000:2000:15::a45d) (Remote host closed the connection)
[13:57:31] *** Joins: boxframes (~Saloframe@2607:9000:2000:15::a45d)
[13:57:39] *** Quits: boxframes (~Saloframe@2607:9000:2000:15::a45d) (Remote host closed the connection)
[13:58:33] *** Joins: rardiol (~quassel@user/rardiol)
[13:58:56] *** Quits: powftw (uid448161@id-448161.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[13:59:02] *** Quits: haskal (~haskal@tilde.town) (Ping timeout: 268 seconds)
[14:00:29] *** Quits: Seirdy (~Seirdy@76-247-182-44.lightspeed.sjcpca.sbcglobal.net) (Ping timeout: 250 seconds)
[14:06:03] *** Quits: Hash (~Hash@hashsecurity.org) (Quit: https://hashsecurity.org)
[14:07:22] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[14:09:03] *** Quits: tusko (~yeurt@copyfree/advocate/tusko) (Ping timeout: 276 seconds)
[14:09:12] *** Joins: tusko_ (~yeurt@copyfree/advocate/tusko)
[14:10:41] *** tusko_ is now known as tusko
[14:26:50] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: caveman)
[14:40:17] *** Joins: Hash (~Hash@hashsecurity.org)
[14:45:56] *** Quits: mcf (~mforney@netbsd/developer/mcf) (Excess Flood)
[14:46:05] *** Joins: mcf (~mforney@netbsd/developer/mcf)
[14:50:21] *** Quits: mcf (~mforney@netbsd/developer/mcf) (Excess Flood)
[14:50:31] *** Joins: mcf (~mforney@netbsd/developer/mcf)
[14:55:12] *** Quits: Sofia (~sofia@gateway/tor-sasl/sofia) (Ping timeout: 276 seconds)
[15:00:12] *** Quits: frost (~frost@user/frost) (Remote host closed the connection)
[15:13:29] *** Joins: Sofia (~sofia@gateway/tor-sasl/sofia)
[15:14:57] *** Quits: Guyver2 (~Guyver@guyver2.xs4all.nl) (Ping timeout: 240 seconds)
[15:15:09] *** Joins: Guyver2 (~Guyver@guyver2.xs4all.nl)
[15:25:05] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 256 seconds)
[15:26:04] *** Joins: AsenMx (~AsenMx@user/asenmx)
[15:27:37] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[15:42:43] *** Joins: CryptoDavid (uid14990@id-14990.uxbridge.irccloud.com)
[15:44:36] *** Joins: frost (~frost@user/frost)
[15:46:55] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[15:47:44] *** Joins: gproto23 (~gproto23@user/gproto23)
[15:54:58] *** Quits: BOKALDO (~BOKALDO@user/bokaldo) (Quit: Leaving)
[16:25:57] *** Joins: igemnace (~ian@user/igemnace)
[16:29:56] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[16:31:57] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 256 seconds)
[16:46:37] *** Joins: bsdbandit01 (~bsdbandit@172.58.189.186)
[16:49:09] *** Quits: bsdbandit01 (~bsdbandit@172.58.189.186) (Read error: Connection reset by peer)
[16:49:45] *** Joins: bsdbandit01 (~bsdbandit@172.58.189.253)
[16:52:42] *** Quits: bsdbandit01 (~bsdbandit@172.58.189.253) (Read error: Connection reset by peer)
[16:54:08] *** Joins: bsdbandit01 (~bsdbandit@172.58.189.253)
[16:55:24] *** Joins: gproto23 (~gproto23@user/gproto23)
[16:55:28] *** Joins: BadWolf (~azerty@user/badwolf)
[17:00:58] *** Quits: bsdbandit01 (~bsdbandit@172.58.189.253) (Read error: Connection reset by peer)
[17:04:15] *** Quits: rardiol (~quassel@user/rardiol) (Ping timeout: 256 seconds)
[17:07:26] *** Joins: zro (~zro@user/zro)
[17:10:50] *** Quits: BadWolf (~azerty@user/badwolf) (Quit: *)
[17:10:50] *** Joins: rardiol (~quassel@user/rardiol)
[17:11:26] *** Quits: zro (~zro@user/zro) (Client Quit)
[17:15:24] *** Joins: BOKALDO (~BOKALDO@user/bokaldo)
[17:19:45] *** Joins: ses (uid38151@id-38151.hampstead.irccloud.com)
[17:20:09] *** Quits: rustycl0ck (~ircuser@gateway/tor-sasl/rustycl0ck) (Ping timeout: 276 seconds)
[17:29:26] *** Quits: maroon (tinycrypt@user/maroon) (Ping timeout: 260 seconds)
[17:30:58] *** Joins: maroon (tinycrypt@user/maroon)
[17:35:30] <CryptoClub> Does anybody know if there is a way to obfuscate an integer while returning an integer?
[17:36:02] <CryptoClub> I'd like to give the client a unique ID for an object
[17:36:14] <CryptoClub> The server uses an incremental integer as a PK
[17:37:05] <CryptoClub> I don't feel good about sending the database ID since I don't want the client to know how many objects have been created
[17:37:49] <CryptoClub> I need to find the given object in the database with that ID so hashing is not an option
[17:38:32] <CryptoClub> Also, the server is distributed so keeping the hash-id map in memory doesn't seem wise
[17:39:20] <ioxzev1z> ... doesn't sound logical
[17:39:20] <CryptoClub> I've thought about encrpyting with AES and coding the result in base64. This would work but the result seems unecessarily large to me
[17:40:40] <sonOfRa> Can always generate a random UUID as an additional identifier as an entry point (watch out for db indexing performance on those, characteristics differ wildly between engines)
[17:40:47] <ioxzev1z> Also sounds a little like a cookie to me, client session stored in DB, client has integer to said session and server handles stuff on their side
[17:41:14] <Tykling> I would also say use uuid as ID and keep the serial integer internal
[17:41:18] <sonOfRa> Or something like https://hashids.org/
[17:41:42] <sonOfRa> Because does it really have to be a number? It's an identifier, it shouldn't have semantics
[17:42:04] <CryptoClub> The uuid is a good idea but it seems redudndant to have both an uuid and an incremental id
[17:42:59] <CryptoClub> I would like to leave the PK creation to the database engine since I feel that makes it more agnostic from all the software stack
[17:43:29] <sonOfRa> Then hashids works nicely: You define a salt (which you can share, as a secret parameter between instances)
[17:43:48] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[17:44:17] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 240 seconds)
[17:44:55] *** Joins: AsenMx (~AsenMx@user/asenmx)
[17:45:12] <CryptoClub> Hashids are super cool and i didn't know they existed!!!\
[17:45:21] <CryptoClub> Thank you all a lot!
[17:45:26] <sonOfRa> It's not a cryptographic hash, and it doesn't return numbers, but identifiers.
[17:45:58] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[17:47:07] <Alipha> CryptoClub: if you encrypted with 3DES-ECB, then they're 64-bit numbers instead of 128-bit with AES
[17:47:38] *** Joins: gproto23 (~gproto23@user/gproto23)
[17:48:27] <MacGyver> If it seems redundant to have both a UUID and an incremental ID, ditch the incremental ID.
[17:48:40] <MacGyver> If you can't ditch the incremental ID, it's not redundant.
[17:49:04] <sonOfRa> Depending on database performance, lookups may be fine on UUIDs, but you may want to still join on the incrementals
[17:50:07] *** Joins: bsdbandit01 (~bsdbandit@172.58.189.60)
[17:51:05] <CryptoClub> Alipha: Thanks, I'll look into 3DES-ECB
[17:51:07] *** Quits: bsdbandit01 (~bsdbandit@172.58.189.60) (Read error: Connection reset by peer)
[17:51:17] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[17:52:36] <CryptoClub> UUIDs and incremental ints are both used as a PK. I'm thinking that you may be right, there can be an incremental int that is not the primary key so I'll have the best of both worlds.
[17:53:09] <CryptoClub> Using the UUID as a PK only since there would never be two incrementals with the same value
[17:53:14] <CryptoClub> Good point
[17:53:46] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[17:55:14] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:c959:9e8d:b7ca:4f4d) (Ping timeout: 252 seconds)
[17:56:21] <Alipha> CryptoClub: there's also Speck32, which you can use if you know you'll have less than 4 billion records. Which would produce 32-bit numbers. Note that Speck32 only uses 64-bit keys, which is pretty weak, but probably doesn't matter for this usage
[17:57:03] <Alipha> (you could "triple Speck32" to have it be strong enough)
[17:57:47] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Read error: Connection reset by peer)
[17:58:19] <CryptoClub> For this scenario it should be secure enough. Thanks!
[17:58:21] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Quit: leaving)
[17:58:29] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:c959:9e8d:b7ca:4f4d)
[17:58:53] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[18:01:38] <ms7821> there's also twitter's snowflake IDs
[18:01:49] <ms7821> which are sort-of-sequential
[18:03:00] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:c959:9e8d:b7ca:4f4d) (Ping timeout: 240 seconds)
[18:04:30] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[18:05:31] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Read error: Connection reset by peer)
[18:06:35] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[18:07:17] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 240 seconds)
[18:10:25] *** Joins: inlight (~inlight@157.35.40.164)
[18:10:25] *** Quits: inlight (~inlight@157.35.40.164) (Changing host)
[18:10:25] *** Joins: inlight (~inlight@user/inlight)
[18:10:27] *** Quits: JollyRoger (~JollyRoge@user/thejollyroger) (Remote host closed the connection)
[18:10:55] <MacGyver> ms7821: They're actually called snowflake IDs?
[18:11:11] <ms7821> I think so
[18:11:30] *** Quits: kish` (~sid742412@user/aqua) (Ping timeout: 276 seconds)
[18:11:32] <MacGyver> Heh, indeed, created in 2010.
[18:11:44] *** Joins: kish` (~sid742412@user/aqua)
[18:12:05] <MacGyver> I can't help but feel there's a certain irony in that, considering the use of snowflake as a pejorative term often used in twitter fights nowadays.
[18:12:37] <ms7821> oh that's so 2016
[18:12:45] *** Joins: JollyRoger (~JollyRoge@user/thejollyroger)
[18:12:47] <ms7821> it's wokerati now
[18:14:50] <MacGyver> Snowflakes are probably vulnerable to bayesian analysis though, if the purpose is to hide the number of records created.
[18:15:47] <MacGyver> Though only when considering records created in the same millisecond, so maybe not a problem.
[18:25:41] <TimMc> Snowflakes, because they're unique. :-)
[18:26:18] <TimMc> The purpose isn't hiding record count but instead to allow distributed generation of unique IDs.
[18:26:32] <TimMc> Timestamp + location + counter, I believe.
[18:26:56] <ms7821> yeah
[18:27:26] <TimMc> (Where timestamp is generally measured against some recent epoch, such as the time the IDs started being used, which shaves off some bits.)
[18:28:06] <MacGyver> Yeah, but CryptoClub specifically mentioned their purpose *is* to hide from the client how many objects have been created.
[18:28:18] <MacGyver> Hence, anything vulnerable to bayesian analysis is probably not a good fit.
[18:28:30] <TimMc> Oh, sorry, didn't look back far enough.
[18:28:32] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[18:28:37] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 240 seconds)
[18:29:09] *** Joins: inlight (~inlight@user/inlight)
[18:30:52] <CryptoClub> I'm not an expert in security. The thing is that giving the client the incremental ID feels wrong. It's not going to be a social netowrk or anything
[18:31:11] <CryptoClub> It's going to be used by some specific department at some corporations and that's it
[18:31:46] <CryptoClub> It's a analysis app for some manufacturing facilities, let's leave it at that
[18:32:05] <CryptoClub> Not worried about complex analysis or anything
[18:32:51] <TimMc> CryptoClub: I think I had roughly the same need a while back, and here's what I ended up with after some conversation in this channel: https://www.brainonfire.net/blog/2021/05/06/cryptographic-shuffle/
[18:32:54] <CryptoClub> I think that Hashids are exacly what I'm looking for but I'll look into the cyphers mentioned by Alipha as well
[18:34:28] <ms7821> my general advice would be to not worry about sequential IDs
[18:35:03] <TimMc> I used a small-domain cipher to encrypt the IDs. But hashids is preobably the same idea.
[18:35:05] <ms7821> it's pretty rare for revealing the number of records to actually be an issue, and using UUIDs are often used as secrets
[18:35:39] <MacGyver> My general advice would be to very much worry about sequential IDs, but mostly as a "you should not be able to get access to a record you know the ID of but don't have authority for" question.
[18:36:13] <MacGyver> So not as in "don't use sequential IDs" but as in "use proper authorization regardless of ID scheme".
[18:36:23] <CryptoClub> I've been told that as a rule of thumb you shouldn't let anybody know something that you don't want them to know
[18:36:26] <ms7821> oh totally, but what I mean is that once people use UUIDs they don't bother to check authorisation because UUIDs sort of protect you
[18:36:41] <MacGyver> Or phrased differently, "don't rely on the non-guessability of the ID for security purposes".
[18:37:17] <CryptoClub> Sure thing! Once a UUID is leaked then anybody would have access and that's unacceptable
[18:37:25] <ms7821> CryptoClub, yes, but on the flip side, the german tank problem is actually not as much of a problem as people make out
[18:37:27] <trebuh> DDDD
[18:37:33] <trebuh> oups, sorry
[18:38:49] <TimMc> In my case, I wanted to make it hard for an observer to know if there were "gaps" in the sequence.
[18:38:58] <TimMc> i.e. things that they didn't have access to
[18:39:05] *** Quits: chowmeined (~chowmeine@user/chowmeined) (Read error: Connection reset by peer)
[18:39:28] <ms7821> whereas inserting records in effectively a random order, or having to decrypt IDs when performing manual database operations, has a real impact on developers
[18:40:04] <ms7821> TimMc, snowflake IDs would help there I think
[18:40:08] <TimMc> (My use-case also doesn't involve decrypting the IDs again -- the output is cached.)
[18:42:28] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[18:43:20] <TimMc> Yeah, there are probably a few ways to solve it. I don't have the whole problem space swapped-in at the moment, though, and I think there were some additional constraints. (Determinism, maybe?)
[18:44:42] *** Joins: bsdbandit01 (~bsdbandit@172.58.189.173)
[18:44:51] *** Joins: powftw (uid448161@id-448161.lymington.irccloud.com)
[18:45:21] *** Quits: bsdbandit01 (~bsdbandit@172.58.189.173) (Read error: Connection reset by peer)
[18:46:31] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Client Quit)
[18:46:51] <TimMc> Looking more at hashids... it seems like they're a very weak protection.
[18:47:15] <TimMc> The Feistel cipher implementation I made should be much stronger, as long as it isn't buggy. ;-)
[18:53:27] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[18:57:51] *** Joins: bsdbandit01 (~bsdbandit@172.58.189.173)
[18:58:14] *** Quits: bsdbandit01 (~bsdbandit@172.58.189.173) (Read error: Connection reset by peer)
[19:07:17] *** Joins: dez (uid92154@user/dez)
[19:09:58] *** Joins: igemnace (~ian@user/igemnace)
[19:23:11] *** Joins: joilerv (~joilerv@host86-191-93-41.range86-191.btcentralplus.com)
[19:23:20] *** Quits: joilerv (~joilerv@host86-191-93-41.range86-191.btcentralplus.com) (Client Quit)
[19:24:17] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[19:28:15] *** Joins: cwebber (~user@user/cwebber)
[19:31:19] *** Joins: Pythayr (~pither195@2600:1700:82f0:2fe0:cfcb:bebf:7946:8e4b)
[19:36:37] *** Quits: Pythayr (~pither195@2600:1700:82f0:2fe0:cfcb:bebf:7946:8e4b) (Ping timeout: 240 seconds)
[19:36:53] *** Joins: Pythayr (~pither195@64.42.181.51)
[19:44:20] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[19:55:23] *** Joins: deusexbeer (~hedeo@37-146-236-2.broadband.corbina.ru)
[19:56:02] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Read error: Connection reset by peer)
[19:59:17] *** Quits: iz (~tv@157-131-220-165.fiber.dynamic.sonic.net) (Changing host)
[19:59:17] *** Joins: iz (~tv@user/xiz)
[20:00:20] *** Joins: igemnace (~ian@user/igemnace)
[20:01:12] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[20:02:20] *** Joins: Klotz (~Klotzoman@gateway/tor-sasl/klotz)
[20:03:58] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Read error: Connection reset by peer)
[20:12:21] *** Joins: bsdbandit01 (~bsdbandit@172.58.189.60)
[20:13:32] *** Quits: bsdbandit01 (~bsdbandit@172.58.189.60) (Read error: Connection reset by peer)
[20:48:11] *** Joins: mikail (~mikail@2a02:c7f:bc1f:4a00:fc9:3da5:3e1e:8303)
[20:48:27] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[20:51:03] *** Quits: holgersson (~quassel@user/holgersson) (Quit: “Format C:........[Done]“)
[20:51:21] *** Joins: holgersson (~quassel@user/holgersson)
[20:52:16] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[20:54:26] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) ()
[21:08:17] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 240 seconds)
[21:09:54] *** Joins: Ivii (~Ivyy@2001:a62:4c3:8e01:226:6685:3dd4:7093)
[21:11:33] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Quit: -a- Connection Timed Out)
[21:11:40] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[21:19:13] *** Joins: kristijonas (~kristijon@81-7-103-234.static.zebra.lt)
[21:23:27] *** Quits: mikail (~mikail@2a02:c7f:bc1f:4a00:fc9:3da5:3e1e:8303) (Quit: Leaving)
[21:24:32] *** Quits: powftw (uid448161@id-448161.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[21:27:35] *** Quits: rardiol (~quassel@user/rardiol) (Quit: No Ping reply in 180 seconds.)
[21:29:00] *** Joins: rardiol (~quassel@user/rardiol)
[21:35:35] *** Joins: gproto23 (~gproto23@user/gproto23)
[21:36:48] *** Joins: aleck1 (~aleck@user/aleck)
[21:39:41] *** Quits: aleck (~aleck@user/aleck) (Ping timeout: 268 seconds)
[21:40:09] *** Quits: kish` (~sid742412@user/aqua) (Ping timeout: 276 seconds)
[22:00:00] *** Joins: Choco (~Choco@host150.200-71-232.telecom.net.ar)
[22:03:25] *** Joins: Lochnair8 (~Lochnair@wireguard/contributor/lochnair)
[22:03:30] *** Quits: Lochnair8 (~Lochnair@wireguard/contributor/lochnair) (Client Quit)
[22:03:31] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[22:05:13] *** Quits: mrus (~mrus@149.28.224.172) (Quit: Surfing the great wave off Kanagawa)
[22:05:30] *** Quits: System_Error (~SystemErr@user/systemerror) (Ping timeout: 276 seconds)
[22:06:20] *** Joins: System_Error (~SystemErr@user/systemerror)
[22:08:52] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[22:10:22] *** Joins: Lochnair8 (~Lochnair@wireguard/contributor/lochnair)
[22:18:23] *** Quits: andreasbuhr (~quassel@p548ddec4.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:35:46] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Read error: Connection reset by peer)
[22:42:26] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[22:44:29] *** Joins: mrus (~mrus@2001:19f0:5:1535:5400:3ff:fe7d:10ae)
[22:45:48] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Read error: Connection reset by peer)
[22:51:26] *** Joins: Itaru (~Itaru@ro2.flokinet.is)
[22:53:21] *** Joins: bsdbandit01 (~bsdbandit@172.58.189.26)
[22:54:31] *** Quits: bsdbandit01 (~bsdbandit@172.58.189.26) (Read error: Connection reset by peer)
[22:59:25] *** Joins: bsdbandit01 (~bsdbandit@172.58.189.26)
[23:01:19] *** Quits: BOKALDO (~BOKALDO@user/bokaldo) (Quit: Leaving)
[23:06:05] *** Quits: AEtherC0r3 (~quassel@snf-734901.vm.okeanos.grnet.gr) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[23:09:40] *** Joins: AEtherC0r3 (~quassel@snf-734901.vm.okeanos.grnet.gr)
[23:13:01] *** voiceofreason_ is now known as voiceofreason
[23:13:31] *** Quits: bsdbandit01 (~bsdbandit@172.58.189.26) (Read error: Connection reset by peer)
[23:13:59] <yawkat> maroon: the dot means concatenation
[23:16:43] *** Joins: bsdbandit01 (~bsdbandit@172.58.191.167)
[23:21:39] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 256 seconds)
[23:21:41] *** Quits: kristijonas (~kristijon@81-7-103-234.static.zebra.lt) (Quit: Client closed)
[23:21:54] *** Joins: kristijonas (~kristijon@81-7-103-234.static.zebra.lt)
[23:22:35] *** Joins: inlight (~inlight@user/inlight)
[23:23:10] *** Quits: Choco (~Choco@host150.200-71-232.telecom.net.ar) (Quit: Client closed)
[23:26:33] *** Joins: Choco (~Choco@host150.200-71-232.telecom.net.ar)
[23:28:02] *** Quits: bsdbandit01 (~bsdbandit@172.58.191.167) (Read error: Connection reset by peer)
[23:43:59] *** Joins: chr1 (~chr@mail.alfaorigo.dk)
[23:47:10] *** Quits: chr1 (~chr@mail.alfaorigo.dk) (Client Quit)
[23:52:06] *** Quits: System_Error (~SystemErr@user/systemerror) (Ping timeout: 276 seconds)
