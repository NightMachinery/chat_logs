[00:02:20] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[00:02:39] *** Quits: ckdCreations (~ckdCreati@147.55.133.136) (Read error: Connection reset by peer)
[00:02:57] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[00:03:45] *** Joins: freakazoid343 (~matt@2603-9000-cf03-86c3-bd92-f30c-7395-6f90.inf6.spectrum.com)
[00:05:32] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:1d57:8085:a2ac:6196)
[00:05:59] *** Quits: freakazoid12345 (~matt@2603:9000:cf03:86c3:bd92:f30c:7395:6f90) (Ping timeout: 252 seconds)
[00:06:25] *** Joins: rgrinberg (~textual@2806:101e:7:134:7829:bba6:44e3:4846)
[00:06:37] *** Quits: pehaef (~pehaef@user/pehaef) (Quit: leaving)
[00:09:00] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[00:09:06] *** Quits: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:7859:22cf:713c:fe6e) (Ping timeout: 260 seconds)
[00:11:08] *** Joins: Viewday115 (~Viewday@user/viewday)
[00:11:55] *** Quits: constxd_ (~brad@142.134.78.128) (Quit: WeeChat 3.3)
[00:13:17] *** Joins: seninha (~chatzilla@user/seninha)
[00:14:37] *** Quits: Waynes (~Waynes@user/waynes) (Quit: Leaving.)
[00:17:47] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[00:17:48] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (Ping timeout: 240 seconds)
[00:17:52] *** Joins: eddybilley (~freddieti@2a02-a454-7f89-1-1da7-c18b-9eca-7b8f.fixed6.kpn.net)
[00:20:49] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[00:23:17] *** Quits: Jong (~Jong@163.114.132.1) (Ping timeout: 240 seconds)
[00:24:10] *** Quits: bebyx (~Thunderbi@user/bebyx) (Remote host closed the connection)
[00:25:56] *** Quits: Warkruid (~MarderIII@2a02-a45a-72f1-1-53e-ebf9-3b31-3f17.fixed6.kpn.net) (Quit: Leaving)
[00:25:57] *** Quits: eddybilley (~freddieti@2a02-a454-7f89-1-1da7-c18b-9eca-7b8f.fixed6.kpn.net) (Ping timeout: 240 seconds)
[00:29:23] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[00:29:55] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[00:31:04] <bnchs> ,cc char *shell = 0x7ffffffed20; printf("%s", shell);
[00:31:06] <candide> bnchs: [warning: initialization of 'char *' from 'long int' makes pointer from integer without a cast [-Wint-conversion]]  Program received signal SIGSEGV, Segmentation fault in __strlen_sse2 () called by main (argc=1, argv=0x7fffffffe428) at statement: printf("%s", shell);
[00:31:58] *** Joins: shailangsa (~shailangs@host86-186-133-59.range86-186.btcentralplus.com)
[00:33:20] <bnchs> ,cc asm("mov $0x10, ebx"); printf("%s");
[00:33:21] <candide> bnchs: warning: implicit declaration of function 'a﻿sm' [-Wimplicit-function-declaration]  warning: format '%s' expects a matching 'char *' argument [-Wformat=] /usr/bin/ld:  in function 'main': /home/vm/26029/ undefined reference to 'a﻿sm'
[00:33:35] <bnchs> oops wrong tab
[00:34:09] *** Quits: bertvvvs (~bertvvvs@user/bertvvvs) (Quit: bertvvvs)
[00:34:23] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:35:37] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:1d57:8085:a2ac:6196) (Ping timeout: 250 seconds)
[00:36:39] <SaltHillStroller> I have an unsigned 32 bit integer that increments. I'm trying to take the difference between the value at two different points in time. At some point, the counter overflows. Is there a better way of getting the difference than checking if the current value is smaller than the older value?
[00:36:43] *** Joins: Betal (~Betal@user/betal)
[00:36:50] *** Quits: Darkcoal (~user@user/Darkcoal) (Quit: Darkcoal)
[00:38:18] <SaltHillStroller> ,cc uint32_t time = (t2 > t1) ? t2 - t1 : UINT32_MAX - t1 + t2;
[00:38:19] <candide> SaltHillStroller: error: 't2' undeclared; did you mean 'tm'?
[00:40:20] <SaltHillStroller> Would like to avoid the conditional
[00:40:21] <fizzie> Usually people just get the difference. It works out okay for unsigned types.
[00:41:15] <SaltHillStroller> It leads to massive values though. Often I get time differences of ~1000, but then suddently its ~2^32
[00:41:49] <fizzie> It doesn't.
[00:41:57] <fizzie> ,cc uint32_t old = UINT32_MAX-10, new = 10, delta = new - old; printf("%"PRIu32, delta);
[00:41:59] <candide> fizzie: 21
[00:42:02] *** Quits: arand___ (~Guest30@c-0a01235c.05-662-7570703.bbcust.telenor.se) (Quit: Client closed)
[00:42:54] *** Joins: Thedarkb1 (~Thedarkb@80.233.45.246)
[00:43:01] <fizzie> That's for the case of comparing past the wraparound point. Assuming you always know which one is the newer one of the two times.
[00:43:35] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[00:43:54] <fizzie> (If you want the *signed* result of the subtraction, or the absolute value of the difference, that's different.)
[00:45:01] *** Joins: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:8477:4ea0:67a7:8b9)
[00:45:09] *** Quits: freakazoid343 (~matt@2603-9000-cf03-86c3-bd92-f30c-7395-6f90.inf6.spectrum.com) (Ping timeout: 250 seconds)
[00:45:17] *** Quits: Thedarkb (~Thedarkb@82.3.80.190) (Ping timeout: 240 seconds)
[00:46:26] <SaltHillStroller> oh ...
[00:46:44] <SaltHillStroller> Why doesn't this work then? https://onlinegdb.com/BbB8I0ht0 ?
[00:47:16] <fizzie> Because you're subtracting the "newer" value from the "older" one.
[00:48:44] <SaltHillStroller> Oh. But 'a', i.e. the lower value, *is* the newer value, as it resulted from an overflow
[00:49:52] <fizzie> Oh, well. Yes, the unstated simplifying assumption was that you don't expect the counter to go almost all the way around.
[00:50:24] <fizzie> Also that does work if you assume the 5 resulted from an overflow.
[00:50:46] <fizzie> Because it must have taken 4294967291 increments to go from 10 to 5 via the overflow route, which is what that prints out.
[00:51:30] <fizzie> In other words, if you're saying the old value of the counter was 10, and the new value is 5, 4294967296 is the correct distance between them.
[00:51:37] <SaltHillStroller> Huh. That is true
[00:51:56] <SaltHillStroller> Okay back to the drawing board on my weird values then haha
[00:52:25] *** Quits: magla (~gelignite@55d45672.access.ecotel.net) (Quit: Stay safe!)
[00:52:28] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Quit: WeeChat 3.4)
[00:53:33] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[00:53:53] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[00:54:20] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[00:54:49] <SaltHillStroller> Thanks btw!
[00:55:24] *** Quits: asd (~noname@user/asd) (Ping timeout: 240 seconds)
[00:55:29] *** Quits: cosimone (~user@93-47-229-38.ip115.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[01:06:57] *** Joins: omnihil (~hermes@camel.ethereal.net)
[01:08:50] *** Quits: acerbic (~acerbic@cs-xdata-50-86-54-154.cspire.com) (Ping timeout: 260 seconds)
[01:09:15] *** Quits: dsrt^ (~dsrt@50.232.121.75) (Remote host closed the connection)
[01:09:26] *** Quits: bnchs (~bnchs@41.141.18.213) (Remote host closed the connection)
[01:11:46] *** Joins: acerbic (~acerbic@cs-xdata-50-86-54-154.cspire.com)
[01:13:07] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[01:14:03] *** Joins: Jong (~Jong@2620:10d:c090:400::5:991e)
[01:15:50] *** Quits: ws2k3 (znc@vps.freegamehosting.eu) (Ping timeout: 260 seconds)
[01:17:26] *** Joins: ws2k3 (znc@vps.freegamehosting.eu)
[01:17:37] *** Quits: rgrinberg (~textual@2806:101e:7:134:7829:bba6:44e3:4846) (Ping timeout: 240 seconds)
[01:20:46] *** Quits: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net) (Ping timeout: 245 seconds)
[01:22:11] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[01:22:28] *** Quits: cust (amaama@2607:f2c0:f00f:2500::3) (Remote host closed the connection)
[01:23:39] *** Joins: cruncher (~cruncher@user/cruncher)
[01:23:54] *** Quits: brad_mssw|mac (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net) (Quit: Leaving)
[01:24:14] *** Joins: MrFantastik (~f@176.108.141.162)
[01:25:12] *** Quits: reedrichards (~f@176.108.141.162) (Read error: Connection reset by peer)
[01:26:12] *** Quits: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2) (Ping timeout: 240 seconds)
[01:27:05] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[01:28:03] *** Quits: random-nick (~random-ni@87.116.176.196) (Quit: quit)
[01:29:31] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (Ping timeout: 245 seconds)
[01:30:18] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[01:31:07] *** Joins: random-nick (~random-ni@87.116.167.125)
[01:31:19] *** Joins: hashfuncadb (~user@2601:5c0:c280:7090:29ba:fcc0:8f3a:efac)
[01:31:31] *** Joins: Guest8425 (~Guest@host169.190-139-78.telecom.net.ar)
[01:32:43] *** Joins: ferdna (~ferdna@user/ferdna)
[01:32:44] *** Quits: acerbic (~acerbic@cs-xdata-50-86-54-154.cspire.com) (Read error: Connection reset by peer)
[01:32:49] *** Joins: Klinda (~superleag@user/klinda)
[01:33:07] <seninha> Hello, I'm using a function from Xlib that returns a uint32_t for the size of a image. The reference code I'm reading uses, obviously, uint32_t to handle the returned value. But I will never use anything greater than INT_MAX (I'll actually never use anything larger than my screen size). So, is there any problem if I use int rather than uint32_t for the returned image size?
[01:34:18] <sham1> Do you rely on INT_MAX having a certain size?
[01:34:34] <sham1> And thus a certain magnitude?
[01:35:12] <fizzie> Well, it's guaranteed to be >= 32767, which is already a pretty big screen.
[01:35:38] *** Joins: derpadmin (~Anonymous@homebase.200013.net)
[01:35:52] <sham1> I suppose
[01:36:10] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[01:37:09] <fizzie> Well, I guess depending on what exactly it's measuring. In terms of pixels, it's not that much.
[01:38:08] <fizzie> At any rate, there's no problem in converting (implicitly) an `uint32_t` value to an `int` (or any other conversion between two integer types) when the new type can represent the value.
[01:39:10] *** Joins: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2)
[01:39:27] *** Joins: Maxdaman1us (~Maxdamant@user/maxdamantus)
[01:40:06] <twkm> INT_MAX has nothing to do with uint32_t.
[01:40:15] <twkm> (except by chance)
[01:40:32] *** Quits: tiotags (~tiotags@user/tiotags) (Quit: Leaving)
[01:41:01] *** Joins: Alhazred (~Alhazred@45.129.56.151)
[01:41:27] *** Joins: zer0x (~zer0x@58.186.62.81)
[01:42:26] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (Ping timeout: 260 seconds)
[01:43:26] <twkm> seninha: technically int might be wider making it possible to have a value that surprises you when passed to the function.  also, use another unsigned type not signed.
[01:44:25] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[01:44:35] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[01:44:39] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[01:46:30] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[01:47:01] *** Joins: bertvvvs (~bertvvvs@user/bertvvvs)
[01:47:34] *** Quits: Maxdaman1us (~Maxdamant@user/maxdamantus) (Ping timeout: 260 seconds)
[01:48:28] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[01:49:36] <sham1> Yeah, unsigned int should be good for this
[01:53:27] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:54:02] *** Joins: pulse (~pulse@user/pulse)
[01:54:29] *** Joins: cust (amaama@2607:f2c0:f00f:2500::3)
[01:56:44] *** Joins: xmb (~xmb@178.197.213.104)
[01:57:14] <xmb> hello, a small question, i had problems ( noob still ) creating arrays of chars or so by user defined size, is 'volatile' keyword for this ?
[01:58:05] *** Quits: paper_ (~paper_@user/paper) (Quit: connection reset by purr)
[01:58:38] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[01:58:38] *** Joins: kaph (~kaph@151.35.10.65)
[01:59:37] *** Quits: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2) (Ping timeout: 240 seconds)
[02:01:49] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:02:26] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
[02:02:28] *** Quits: ekathva (~ekathva@n14jqqwhtfh2jdj1f-1.v6.elisa-mobile.fi) (Remote host closed the connection)
[02:03:30] *** Quits: xmb (~xmb@178.197.213.104) (Read error: No route to host)
[02:05:42] *** Joins: xmb (~xmb@178.197.213.104)
[02:05:54] *** Quits: kaph (~kaph@151.35.10.65) (Remote host closed the connection)
[02:06:22] *** Joins: kaph (~kaph@151.35.10.65)
[02:07:16] *** Quits: Akuli (~Akuli@82-203-161-12.bb.dnainternet.fi) (Quit: Akuli)
[02:10:14] *** Joins: semeion (~semeion@user/semeion)
[02:12:14] *** Quits: xmb (~xmb@178.197.213.104) (Ping timeout: 272 seconds)
[02:12:22] *** Quits: semeion (~semeion@user/semeion) (Client Quit)
[02:14:46] *** Joins: rgrinberg (~textual@2806:101e:7:134:88d:6cc4:143:3039)
[02:18:32] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[02:18:36] *** Quits: cruncher (~cruncher@user/cruncher) (Ping timeout: 240 seconds)
[02:19:02] *** Quits: rgrinberg (~textual@2806:101e:7:134:88d:6cc4:143:3039) (Ping timeout: 240 seconds)
[02:19:14] *** Joins: dsrt^ (~dsrt@50.232.121.75)
[02:22:10] *** Joins: kaph_ (~kaph@93-39-148-20.ip76.fastwebnet.it)
[02:23:21] *** Joins: Satin (uid193953@user/Seten)
[02:23:56] *** Joins: Thedarkb2 (~Thedarkb@82.3.80.190)
[02:24:54] *** Quits: kaph (~kaph@151.35.10.65) (Ping timeout: 272 seconds)
[02:25:46] *** Quits: adip_ (~adip@dhy11.neoplus.adsl.tpnet.pl) (Ping timeout: 256 seconds)
[02:25:46] *** Quits: adip (~adip@dhy11.neoplus.adsl.tpnet.pl) (Ping timeout: 256 seconds)
[02:27:01] *** Quits: Thedarkb1 (~Thedarkb@80.233.45.246) (Ping timeout: 268 seconds)
[02:27:09] *** Quits: mahmutov (~mahmutov@37.155.22.20) (Ping timeout: 256 seconds)
[02:30:28] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:4f71:e483:695e:a1c3) (Quit: Leaving)
[02:32:55] *** Quits: coruja (~coruja@user/coruja) (Quit: WeeChat 3.4)
[02:33:41] *** Joins: coruja (~coruja@user/coruja)
[02:33:56] *** Joins: pizdets (~pizdets@183.182.110.6)
[02:34:20] *** Quits: pizdets_ (~pizdets@183.182.110.47) (Ping timeout: 265 seconds)
[02:35:58] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[02:36:26] *** Joins: joast (~rick@cpe-98-146-112-4.natnow.res.rr.com)
[02:38:18] *** Joins: tc__ (~tc@103-140-203-11.vic.as139284.net.au)
[02:41:48] *** Joins: munkis (~mendel_mu@ool-ae2cb229.dyn.optonline.net)
[02:41:53] *** Quits: tc_ (~tc@103-140-203-11.vic.as139284.net.au) (Ping timeout: 256 seconds)
[02:42:16] *** Joins: oxfuxxx (~oxfuxxx@37.120.204.133)
[02:42:17] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 240 seconds)
[02:43:28] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:496e:4097:1a46:a8be)
[02:43:28] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:496e:4097:1a46:a8be) (Changing host)
[02:43:28] *** Joins: skapata (~Skapata@user/skapata)
[02:44:42] <SaltHillStroller> How does the Linux printk function print a u16 vs a u32 from unpadded data? I.e. I have a packed struct with u16's and I want to print them with printk. However, the printk specifier is the same for both u16 and u32. How could printk know to only print the first two bytes?
[02:46:46] <fizzie> Don't you have to give the values to it as separate arguments? Just like with printf.
[02:50:23] *** Quits: singularity00 (~singulari@236.lan-hi1-2.static.rozabg.com) (Quit: The true sign of intelligence is not knowledge but imagination.)
[02:50:38] *** Quits: bertvvvs (~bertvvvs@user/bertvvvs) (Quit: bertvvvs)
[02:53:05] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:58:23] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:59:49] *** Joins: Maxdaman1us (~Maxdamant@user/maxdamantus)
[03:00:17] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (Killed (NickServ (GHOST command used by Maxdaman1us)))
[03:00:25] *** Maxdaman1us is now known as Maxdamantus
[03:00:34] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 2.8)
[03:01:29] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[03:02:40] *** Joins: rgrinberg (~textual@187.223.170.172)
[03:05:36] *** Joins: ymwm_ (~yingmanwu@117.26.68.45)
[03:08:31] *** Quits: rgrinberg (~textual@187.223.170.172) (Ping timeout: 256 seconds)
[03:09:52] *** Joins: bertvvvs (~bertvvvs@user/bertvvvs)
[03:11:21] *** Quits: KnownSyntax (sid233169@user/knownsyntax) (Ping timeout: 252 seconds)
[03:11:21] *** Quits: leonardus (sid358597@id-358597.tinside.irccloud.com) (Ping timeout: 252 seconds)
[03:11:21] *** Quits: lhtseng (sid15322@id-15322.helmsley.irccloud.com) (Ping timeout: 252 seconds)
[03:11:32] *** Quits: cengiz_io (sid223191@id-223191.ilkley.irccloud.com) (Read error: Connection reset by peer)
[03:11:33] <SaltHillStroller> fizzie: ..... uh yes ...... nevermind :)
[03:11:38] *** Quits: Teckla (sid172075@user/teckla) (Read error: Connection reset by peer)
[03:11:38] *** Quits: glenfe (sid231748@user/glenfe) (Read error: Connection reset by peer)
[03:11:38] *** Joins: Franciman (~Franciman@mx1.fracta.dev)
[03:11:41] *** Joins: cengiz_io (sid223191@id-223191.ilkley.irccloud.com)
[03:11:54] *** Quits: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:8477:4ea0:67a7:8b9) (Ping timeout: 252 seconds)
[03:11:54] *** Quits: ullbeking_ (sid5364@id-5364.ilkley.irccloud.com) (Ping timeout: 252 seconds)
[03:11:54] *** Quits: Olfodr (sid535265@user/Olfodr) (Ping timeout: 252 seconds)
[03:11:54] *** Quits: wangledorf_ (sid505185@id-505185.ilkley.irccloud.com) (Ping timeout: 252 seconds)
[03:11:54] *** Quits: PotatoGim (sid99505@id-99505.lymington.irccloud.com) (Read error: No route to host)
[03:11:54] *** Quits: snickerbockers (sid210497@id-210497.ilkley.irccloud.com) (Read error: Connection reset by peer)
[03:11:55] *** Quits: rubin55 (sid175221@id-175221.hampstead.irccloud.com) (Read error: Connection reset by peer)
[03:11:55] *** Quits: wyre (~wyre@user/wyre) (Remote host closed the connection)
[03:11:55] *** Quits: computerquip (sid423484@user/computerquip) (Read error: Connection reset by peer)
[03:11:55] *** Quits: tag (sid271787@id-271787.lymington.irccloud.com) (Read error: Connection reset by peer)
[03:11:57] *** Quits: subvisor (sid502026@id-502026.helmsley.irccloud.com) (Read error: Connection reset by peer)
[03:12:01] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Remote host closed the connection)
[03:12:06] *** Joins: snickerbockers (sid210497@id-210497.ilkley.irccloud.com)
[03:12:06] *** Joins: lhtseng (sid15322@id-15322.helmsley.irccloud.com)
[03:12:10] *** Joins: rubin55 (sid175221@id-175221.hampstead.irccloud.com)
[03:12:11] *** Joins: tag (sid271787@id-271787.lymington.irccloud.com)
[03:12:12] *** Joins: computerquip (sid423484@user/computerquip)
[03:12:12] *** Joins: wyre (~wyre@user/wyre)
[03:12:16] *** Joins: wangledorf_ (sid505185@id-505185.ilkley.irccloud.com)
[03:12:18] *** Joins: Teckla (sid172075@user/teckla)
[03:12:18] *** Joins: subvisor (sid502026@id-502026.helmsley.irccloud.com)
[03:12:20] *** Joins: glenfe (sid231748@user/glenfe)
[03:12:24] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[03:12:25] *** Joins: PotatoGim (sid99505@id-99505.lymington.irccloud.com)
[03:12:25] *** Joins: KnownSyntax (sid233169@user/knownsyntax)
[03:12:30] *** Joins: Olfodr (sid535265@user/Olfodr)
[03:12:37] *** Joins: leonardus (sid358597@id-358597.tinside.irccloud.com)
[03:13:02] *** Quits: vekay (~vekay@user/vekay) (Quit: Leaving)
[03:13:02] *** Joins: ullbeking_ (sid5364@id-5364.ilkley.irccloud.com)
[03:13:33] *** Quits: orestarod (~orestarod@2a02:2149:8b20:700:2b9d:7f86:7169:61c0) (Ping timeout: 252 seconds)
[03:13:33] *** Quits: epicout (~epicout@2a01:e0a:77:db70:978a:6e9:9495:cd9d) (Ping timeout: 252 seconds)
[03:14:06] *** Quits: nosolls (~nosollsma@user/nosolls) (Ping timeout: 252 seconds)
[03:14:06] *** Quits: salty_hermes[m] (~saltyherm@2001:470:69fc:105::1:76a4) (Ping timeout: 252 seconds)
[03:14:18] *** Quits: Burgundy (~NA@86.121.143.206) (Ping timeout: 272 seconds)
[03:14:24] *** Joins: epicout (~epicout@2a01:e0a:77:db70:978a:6e9:9495:cd9d)
[03:15:54] *** Quits: MrFantastik (~f@176.108.141.162) (Quit: Leaving)
[03:17:33] *** Joins: marvin\\ (~marvin\\@pool-100-16-33-240.bltmmd.fios.verizon.net)
[03:17:49] *** Quits: Guest8425 (~Guest@host169.190-139-78.telecom.net.ar) (Remote host closed the connection)
[03:19:25] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[03:20:31] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:25:26] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[03:25:54] *** Joins: orestarod (~orestarod@2a02:2149:8b20:700:2b9d:7f86:7169:61c0)
[03:26:03] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[03:27:40] *** Joins: asd (~noname@user/asd)
[03:27:44] *** Quits: alefir (~alefir@rrcs-24-43-248-58.west.biz.rr.com) (Quit: alefir)
[03:27:55] *** Joins: Rounin (~david@84.212.130.215)
[03:28:18] *** Joins: nosolls (~nosollsma@2001:470:69fc:105::1:c76e)
[03:29:02] *** Quits: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net) (Quit: b1101)
[03:29:39] *** Joins: salty_hermes[m] (~saltyherm@2001:470:69fc:105::1:76a4)
[03:30:35] *** Quits: Biolunar (biolunar@2a02:908:4b24:5000:ba27:ebff:fee0:75a) (Quit: reboot)
[03:32:05] *** Quits: joomla9 (uid543104@id-543104.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[03:32:33] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:32:43] *** Joins: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net)
[03:34:34] *** Joins: soapsudsxx (~soapsudsx@209.221.40.152)
[03:35:19] *** Joins: mceldeen (~mceldeen@h66-222-117-47.mdsnwi.tisp.static.tds.net)
[03:35:50] *** Quits: mceldeen (~mceldeen@h66-222-117-47.mdsnwi.tisp.static.tds.net) (Client Quit)
[03:36:01] *** Quits: marvin\\ (~marvin\\@pool-100-16-33-240.bltmmd.fios.verizon.net) (Quit: Client closed)
[03:38:10] *** Quits: alch (~alch@151.38.18.197) (Ping timeout: 260 seconds)
[03:39:06] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:9816:13a1:80f0:3a2b)
[03:39:50] *** Joins: alch (~alch@151.36.94.218)
[03:40:08] *** Joins: Torr (~Torr@user/torr)
[03:40:23] *** Quits: Murray7501 (~Murray@89.109-247-180.customer.lyse.net) (Quit: leaving)
[03:41:38] *** Joins: retr0 (~retr0@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net)
[03:41:50] <retr0> can someone write me some code
[03:42:53] <retr0> I promise that it is the coolest thing you will ever write and it will (probably) be fast and efficiant because its C
[03:43:23] <Torr> retr0: Here it is: int main(void){return 0;}
[03:43:31] <retr0> i need code that indexes lines
[03:43:32] <retr0> ....
[03:43:35] <retr0> i need code
[03:43:46] *** Quits: orestarod (~orestarod@2a02:2149:8b20:700:2b9d:7f86:7169:61c0) (Ping timeout: 260 seconds)
[03:43:47] <retr0> that indexes lines that match a certain string comparison
[03:43:57] <retr0> then replaces matching lines with fewer lines
[03:44:00] <pony> like grep?
[03:44:08] <pony> oh
[03:44:11] <retr0> the lines themselves are not sorted, only their indexes
[03:44:14] <pony> like uniq?
[03:44:17] <retr0> idk
[03:44:56] <pony> my brain hasn't turned on yet
[03:45:03] <pony> today
[03:45:24] <retr0> so no? ok
[03:45:31] <pony> sorry :/
[03:45:44] *** Joins: freakazoid333 (~matt@2603:9000:cf03:86c3:bd92:f30c:7395:6f90)
[03:45:49] <retr0> where the hell is everyone anyhow
[03:46:12] <retr0> channel is deader than kelsey's nuts
[03:46:48] *** Quits: attaboy (~archer@user/tessio) (Ping timeout: 256 seconds)
[03:47:01] <pony> 🤷
[03:47:14] *** Quits: bertvvvs (~bertvvvs@user/bertvvvs) (Quit: Y'all have a nice day.)
[03:47:46] *** Joins: bertvvvs (~bertvvvs@user/bertvvvs)
[03:47:57] *** Quits: bertvvvs (~bertvvvs@user/bertvvvs) (Client Quit)
[03:50:51] <retr0> here is the criteria that needs to be matched: ? ? 0 0 0 ? ? ? ? ? ? ? ? ? 3024.dat where ? means match any character, then on any other line: ? ? 0 8 0 ? ? ? ? ? ? ? ? ? 3024.dat
[03:51:21] <retr0> the param count on each line are always constant so thats not a problem
[03:51:47] <retr0> it must be + or - 8 than the previous mached line
[03:52:02] <retr0> (paramater 4)
[03:52:51] <retr0> so 55 and 63 should be a match
[03:53:07] <retr0> or 55 and 47
[03:53:11] <retr0> or -8 and 0
[03:53:27] <retr0> if they are back to front it does not matter
[03:53:59] *** Joins: bertvvvs (~bertvvvs@user/bertvvvs)
[03:57:13] *** Quits: retr0 (~retr0@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net) (Remote host closed the connection)
[03:57:30] *** Joins: retr0 (~retr0@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net)
[03:59:49] *** Quits: kkd (~kkd@255.205.154.104.bc.googleusercontent.com) (Ping timeout: 240 seconds)
[04:00:10] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[04:00:37] *** Quits: kilolympus (~kilolympu@31.205.200.235) (Ping timeout: 240 seconds)
[04:01:18] *** Quits: nosolls (~nosollsma@2001:470:69fc:105::1:c76e) (Quit: Reconnecting)
[04:01:22] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[04:01:35] *** Joins: nosolls (~nosollsma@2001:470:69fc:105::1:c76e)
[04:01:42] *** Quits: nosolls (~nosollsma@2001:470:69fc:105::1:c76e) (Changing host)
[04:01:42] *** Joins: nosolls (~nosollsma@user/nosolls)
[04:02:22] *** Joins: nelgau (~nelgau@cpe-75-82-216-42.socal.res.rr.com)
[04:04:31] *** Joins: kilolympus (~kilolympu@31.205.200.235)
[04:05:45] *** Quits: boB_K7IQ (~boB_K7IQ@152.44.147.180) (Ping timeout: 256 seconds)
[04:08:14] *** Joins: Biolunar (biolunar@2a02:908:4b24:5000:ba27:ebff:fee0:75a)
[04:12:55] *** Joins: kkd (~kkd@255.205.154.104.bc.googleusercontent.com)
[04:15:17] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[04:15:32] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[04:15:44] *** Quits: Praise (~Fat@user/praise) (Ping timeout: 272 seconds)
[04:15:51] *** Joins: Praise- (~Fat@user/praise)
[04:16:06] *** Joins: yhirose3 (~yhirose@user/yhirose3)
[04:18:11] *** Quits: retr0 (~retr0@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net) (Remote host closed the connection)
[04:18:28] *** Joins: retr0 (~retr0@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net)
[04:18:30] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[04:18:37] *** Quits: foul_owl (~kerry@23.82.193.87) (Ping timeout: 240 seconds)
[04:19:05] *** Joins: kurahaupo_ (~kurahaupo@pa49-182-13-27.pa.qld.optusnet.com.au)
[04:21:04] *** Joins: foul_owl (~kerry@174-21-76-71.tukw.qwest.net)
[04:21:06] *** Quits: kurahaupo (~kurahaupo@pa49-197-20-124.pa.qld.optusnet.com.au) (Ping timeout: 260 seconds)
[04:21:47] <retr0> .................................................................
[04:21:55] *** Joins: kurahaupo (~kurahaupo@pa49-182-15-80.pa.qld.optusnet.com.au)
[04:22:40] *** Joins: CodePoint (~CodePoint@2600:1700:3070:3790::11)
[04:24:32] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 240 seconds)
[04:25:35] *** Quits: kurahaupo_ (~kurahaupo@pa49-182-13-27.pa.qld.optusnet.com.au) (Ping timeout: 256 seconds)
[04:25:57] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 240 seconds)
[04:27:12] *** Joins: kurahaupo_ (~kurahaupo@pa49-197-136-94.pa.qld.optusnet.com.au)
[04:27:32] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Read error: Connection reset by peer)
[04:28:34] *** Quits: asd (~noname@user/asd) (Ping timeout: 260 seconds)
[04:29:02] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 272 seconds)
[04:29:24] *** Quits: kurahaupo (~kurahaupo@pa49-182-15-80.pa.qld.optusnet.com.au) (Ping timeout: 240 seconds)
[04:30:41] *** Quits: foul_owl (~kerry@174-21-76-71.tukw.qwest.net) (Ping timeout: 256 seconds)
[04:31:21] *** Joins: kurahaupo (~kurahaupo@pa49-197-139-21.pa.qld.optusnet.com.au)
[04:31:34] *** Quits: kurahaupo_ (~kurahaupo@pa49-197-136-94.pa.qld.optusnet.com.au) (Ping timeout: 256 seconds)
[04:31:44] *** Quits: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[04:32:13] *** Quits: retr0 (~retr0@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net) (Remote host closed the connection)
[04:32:19] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[04:33:16] *** Quits: dsrt^ (~dsrt@50.232.121.75) (Ping timeout: 256 seconds)
[04:34:24] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[04:35:30] *** Joins: asd (~noname@user/asd)
[04:35:40] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220226204633])
[04:40:12] <pragma-> whee https://www.youtube.com/watch?v=qkyt6Kb0swk
[04:40:12] <candide> Title of pragma-'s link: CVE-2021-41073 io_uring LPE Exploit Demo - YouTube
[04:40:27] *** Quits: laris (undead@37.221.209.36) (Ping timeout: 252 seconds)
[04:40:30] *** Joins: Wulf (~Wulf@user/wulf)
[04:42:38] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (Ping timeout: 252 seconds)
[04:42:48] <pony> what does the exploit do?
[04:43:16] <pragma-> LPE. local privilege escalation. gain root.
[04:44:24] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[04:44:48] *** Quits: CodePoint (~CodePoint@2600:1700:3070:3790::11) (Quit: CodePoint)
[04:44:52] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[04:45:01] *** Joins: foul_owl (~kerry@23.82.193.89)
[04:45:22] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 260 seconds)
[04:45:48] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 240 seconds)
[04:46:05] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Read error: Connection reset by peer)
[04:46:10] *** Quits: admal (~admal@gateway/tor-sasl/admal) (Remote host closed the connection)
[04:46:23] *** Joins: Murray7501 (~Murray@89.109-247-180.customer.lyse.net)
[04:47:07] *** Quits: yhirose3 (~yhirose@user/yhirose3) (Quit: WeeChat 2.8)
[04:47:39] *** Joins: Wulf (~Wulf@user/wulf)
[04:48:09] <pony> ahh
[04:48:43] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[04:48:43] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[04:48:43] *** Joins: wroathe (~wroathe@user/wroathe)
[04:49:12] *** Joins: laris (undead@37.221.209.36)
[04:55:01] *** Joins: Guest4946 (~Guest@host96.190-137-39.telecom.net.ar)
[04:57:12] *** Joins: MsPoop (~MsPoop@S01069050ca4e3573.cg.shawcable.net)
[05:03:06] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 260 seconds)
[05:06:40] *** Joins: acerbic (~acerbic@cs-xdata-50-86-50-82.cspire.com)
[05:09:00] *** Joins: off^ (~off@50.232.121.75)
[05:10:50] *** Quits: AmR (~AmREiSa@156.199.236.198) (Ping timeout: 272 seconds)
[05:11:00] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[05:14:42] *** Quits: bertvvvs (~bertvvvs@user/bertvvvs) (Quit: Y'all have a nice day.)
[05:18:02] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[05:20:23] *** Joins: rgrinberg (~textual@2806:101e:7:134:88d:6cc4:143:3039)
[05:26:18] *** Joins: zzbot (~zbot@68.23.85.99)
[05:26:23] *** Joins: botz (~zbot@68.23.85.99)
[05:26:50] *** Quits: botz (~zbot@68.23.85.99) (Client Quit)
[05:29:00] *** Quits: zzbot (~zbot@68.23.85.99) (Client Quit)
[05:29:41] *** Joins: zzbot (~zbot@68.23.85.99)
[05:29:48] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:8eaa:1fe9:fd6:a9aa) (Ping timeout: 240 seconds)
[05:30:42] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:c516:12d5:2be4:7323)
[05:32:41] *** Joins: begriffs (~begriffs@user/begriffs)
[05:33:08] *** Quits: kaph_ (~kaph@93-39-148-20.ip76.fastwebnet.it) (Ping timeout: 250 seconds)
[05:33:47] *** Quits: zzbot (~zbot@68.23.85.99) (Client Quit)
[05:34:41] *** Quits: rgrinberg (~textual@2806:101e:7:134:88d:6cc4:143:3039) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:34:57] *** Joins: frost (~frost@user/frost)
[05:37:11] *** Joins: rgrinberg (~textual@2806:101e:7:134:88d:6cc4:143:3039)
[05:37:37] *** Quits: hashfuncadb (~user@2601:5c0:c280:7090:29ba:fcc0:8f3a:efac) (Ping timeout: 240 seconds)
[05:38:25] *** Joins: zzbot (~zbot@68.23.85.99)
[05:38:42] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Ping timeout: 272 seconds)
[05:39:18] *** Quits: zzbot (~zbot@68.23.85.99) (Changing host)
[05:39:18] *** Joins: zzbot (~zbot@user/zzbot)
[05:41:11] *** Joins: biotty (~coien@li35-173.members.linode.com)
[05:41:50] *** Joins: eddybilley (~freddieti@2a02-a454-7f89-1-b839-4a74-d974-8b3e.fixed6.kpn.net)
[05:42:01] *** Quits: biotty (~coien@li35-173.members.linode.com) (Quit: leaving)
[05:45:35] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[05:45:57] *** Quits: eddybilley (~freddieti@2a02-a454-7f89-1-b839-4a74-d974-8b3e.fixed6.kpn.net) (Ping timeout: 240 seconds)
[05:46:08] *** Quits: zzbot (~zbot@user/zzbot) (Quit: Leaving)
[05:47:06] *** Joins: botz (~zzbot@user/zzbot)
[05:52:37] *** Joins: vysn (~vysn@user/vysn)
[05:54:17] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-1-225.hsd1.wa.comcast.net)
[05:58:58] *** Quits: Torr (~Torr@user/torr) (Quit: leaving)
[06:03:56] *** Joins: constxd_ (~brad@142.134.78.128)
[06:03:58] <constxd_> kings
[06:04:13] <pony> hello
[06:04:19] <constxd_> _Thread_local int a = 21;
[06:04:26] <constxd_> is a initialized to 21 on every thread
[06:04:30] <constxd_> or just the main thread
[06:05:18] <pony> I don't know anything about C threads :I
[06:06:32] <constxd_> unacceptable
[06:06:40] <pony> no u
[06:09:00] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 240 seconds)
[06:10:15] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[06:10:33] <fizzie> Every thread, I believe. Conceptually it's initialized at the time the thread is started.
[06:13:01] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:9816:13a1:80f0:3a2b) (Quit: Quit)
[06:14:15] *** Quits: ColdKeyboard (~ColdKeybo@user/coldkeyboard) (Quit: ZNC - https://znc.in)
[06:14:41] <constxd_> right that's what i thought
[06:14:42] *** Joins: ColdKeyboard (~ColdKeybo@user/coldkeyboard)
[06:14:56] <constxd_> must have UB
[06:15:23] <fizzie> ,cc -pthread #include <pthread.h> _Thread_local int i = 21; void *t(void *unused) { printf("[child: i=%d", i); i = 22; printf("->%d]", i); return 0; } int main(void) { pthread_t tt; pthread_create(&tt, 0, t, 0); pthread_join(tt, 0); printf(" [main: i=%d", i); i = 22; printf("->%d]", i); } // just checking
[06:15:25] <candide> fizzie: [child: i=21->22] [main: i=21->22]
[06:16:12] *** Joins: Inline__ (~Inline@p200300cd4709fe0020393da7e35c629b.dip0.t-ipconnect.de)
[06:17:33] <constxd_> ahhh figured out the bug
[06:17:36] <constxd_> based
[06:18:08] <constxd_> multithreaded GC seems a lot less impossible now than it did this morning
[06:18:38] *** Quits: Inline (~Inline@p200300cd470f680001516fcaa15a1e0e.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[06:19:18] <pony> what are you making, constxd_?
[06:21:21] <constxd_> working on my programming language
[06:21:48] <pony> nice
[06:21:51] <constxd_> i neglected threading support for a long time, then just exposed the pthread functions in the language without any regard for correctness
[06:22:06] <constxd_> and now i'm slowly making the runtime actually threadsafe
[06:22:32] <constxd_> coordinating GC across multiple threads with shared data is making me wanna kill myself
[06:22:59] <pony> heh
[06:23:01] <pony> :)
[06:23:01] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[06:26:41] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[06:28:45] *** Joins: Sadale (~Sadale@user/sadale)
[06:29:59] *** botz is now known as zzbot
[06:31:29] *** Quits: AssKoala (~asskoala@user/asskoala) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[06:31:46] *** Joins: AssKoala (~asskoala@23-121-91-253.lightspeed.dybhfl.sbcglobal.net)
[06:31:46] *** Quits: AssKoala (~asskoala@23-121-91-253.lightspeed.dybhfl.sbcglobal.net) (Changing host)
[06:31:46] *** Joins: AssKoala (~asskoala@user/asskoala)
[06:32:57] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 240 seconds)
[06:36:23] *** Joins: fe23 (~fe23@2409:8a34:466:6010:48b0:947e:a180:4fca)
[06:38:51] *** Quits: gog (~ada@user/gog) (Remote host closed the connection)
[06:39:14] *** Joins: gog (~ada@user/gog)
[06:42:32] *** Quits: joev1 (~joev@user/joev) (Ping timeout: 240 seconds)
[06:42:57] *** Joins: joev1 (~joev@user/joev)
[06:46:03] *** Joins: Wulf (~Wulf@user/wulf)
[06:47:10] *** Quits: zzbot (~zzbot@user/zzbot) (Quit: Leaving)
[06:47:28] *** Quits: MsPoop (~MsPoop@S01069050ca4e3573.cg.shawcable.net) (Quit: Client closed)
[06:47:29] *** Joins: zzbot (~zzbot@user/zzbot)
[06:48:06] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[06:54:01] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[06:54:03] *** Quits: zzbot (~zzbot@user/zzbot) (Ping timeout: 256 seconds)
[06:54:12] *** Quits: joev1 (~joev@user/joev) (Ping timeout: 240 seconds)
[06:55:16] *** Joins: joev1 (~joev@user/joev)
[06:59:45] *** Quits: Guest4946 (~Guest@host96.190-137-39.telecom.net.ar) (Remote host closed the connection)
[07:03:14] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[07:03:48] *** Quits: constxd_ (~brad@142.134.78.128) (Ping timeout: 240 seconds)
[07:03:50] <chiselfuse> ehm
[07:03:56] <pony> hi
[07:03:59] <chiselfuse> i'm getting a segfault at compile time
[07:04:17] <chiselfuse> pony: eloo
[07:04:21] <pony> oof
[07:04:54] <chiselfuse> oh nevermind, i forgot that i had && ./a.out after the compile command
[07:05:00] <chiselfuse> fuck
[07:05:04] <pony> heh
[07:05:08] <chiselfuse> that wouldve been interesting
[07:05:18] *** Joins: karakedi (~eAC53C340@user/karakedi)
[07:06:16] *** Joins: artie (~artie@pool-173-59-250-143.bltmmd.fios.verizon.net)
[07:06:55] <gnoo> hello, i splitted a c program into multiple files and now the linker gives error like: ld: /tmp/cc4ggecM.o:/home/me/src/s8085/src/instructions.h:9: multiple definition of `imp_name'; /tmp/ccYEd4mB.o:/home/me/src/s8085/src/instructions.h:9: first defined here
[07:07:04] *** Quits: swinnenb (~swinnenb@user/swinnenb) (Remote host closed the connection)
[07:07:05] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[07:07:10] <gnoo> but both of them are the same file and the same line
[07:07:52] <artie> did you possibly include the header twice by accident? you can use include guards to prevent such issues
[07:07:53] <dave0> gnoo: aha sounds like you need 'extern'
[07:09:06] <dave0> gnoo: the rule of thumb is variables are declared in header files with `extern` ... and defined in exactly one .c file, without extern
[07:09:25] <gnoo> ohh ok, i had it defined in .h file
[07:10:17] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[07:10:20] <chiselfuse> gnoo: past tense of split is split
[07:10:31] <gnoo> ok
[07:10:41] <dave0> splat
[07:10:51] <chiselfuse> no
[07:11:10] <wroathe> splot
[07:11:13] <chiselfuse> splatened
[07:11:20] <caze> splattered
[07:11:33] <chiselfuse> caze: that's a different word alltogether
[07:12:59] <gnoo> yup, it compiles. thanks, dave0
[07:13:26] <dave0> gnoo: no worries... does it run? :-)
[07:13:55] <gnoo> yup!
[07:14:01] <dave0> nice
[07:14:14] <caze> ,works
[07:14:14] <candide> It works it works! Omg omg omg! I mean it compiles. Now what's a segfault?
[07:14:48] <gnoo> should i also use extern for macro definitions? like: #define EPRINTF(fmt, ...)    \ to extern EPRINTF(fmt, ...) ?
[07:14:51] <chiselfuse> it's a fault of the segmentation
[07:15:04] <artie> not for that, no
[07:15:30] <artie> the macro is just a text replacement, the extern keyword has significance at link time
[07:15:30] <gnoo> and enums ?
[07:15:52] <caze> Maybe you should find out what extern does?
[07:16:40] <gnoo> yeah, i should. i'll do that now
[07:17:43] <gnoo> i do understand it tells the compiler that the definition will come later on so don't worry about it now or something :P
[07:19:07] <caze> gnoo: What is a definition?
[07:20:07] *** Joins: h4zel (~hazel@user/h4zel)
[07:20:55] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[07:21:13] <gnoo> like, what a function or a variable does, for functions the statements between {} ? reading about extern, it says that the definition reserves some memory for the function/variable while extern does not
[07:21:37] <artie> notice that the error you pasted earlier came from the linker, not the compiler.
[07:21:38] <caze> Functions don't use memory.
[07:23:06] <gnoo> reserves the space in the executable file?
[07:23:28] <caze> Nope.
[07:23:55] <artie> gnoo, you should read about linkers
[07:24:06] <gnoo> artie: thanks, i'll do it now
[07:24:28] *** Quits: gog (~ada@user/gog) (Ping timeout: 272 seconds)
[07:24:33] <gnoo> but that function has to be stored somewhere, right? that space ?
[07:24:42] <caze> Not in C.
[07:25:18] <gnoo> you mean not necessarily instead of not commonly ?
[07:25:26] <wroathe> > Functions don't use memory.
[07:25:28] <wroathe> lol
[07:25:43] <caze> I mean in the C abstract machine, functions don't use memory.
[07:25:45] <artie> hey, it's a true statement
[07:25:48] <wroathe> caze: I know
[07:25:52] <artie> semantics is fun
[07:25:58] <wroathe> artie: indeed :P
[07:26:13] <dave0> they're being pedantic.. of course the machine code goes somewhere
[07:26:28] <wroathe> https://www.youtube.com/watch?v=H2uHBhKTSe0
[07:26:29] <candide> Title of wroathe's link: Zoolander (9/10) Movie CLIP - Computer Experts (2001) HD - YouTube
[07:27:36] <caze> gnoo: Now, the way the implementation simulates the C abstract machine, the function code has to be stored somewhere. But in the CAM, there is no memory for functions. Functions just exist. They're essentially postulates.
[07:28:29] <gnoo> ok
[07:29:18] *** Joins: ejjfunky (~ejjfunky2@125.164.16.249)
[07:29:19] <caze> gnoo: Now, for people who say that this point is being pedantic, I would say that talking about where function code is stored is immaterial to discussion of the keyword "extern".
[07:30:11] <caze> "extern" is entirely within the realm of the CAM, and to talk about things outside of the CAM would be straying from the topic you're trying to understand, and would only confuse things.
[07:31:46] <caze> So, for the purposes of understand what "extern" means in the C language, and not to conflate C with how your computer stores program binaries, functions don't use memory.
[07:32:42] <gnoo> ok, i couldn't find a good explanation of extern, even wikipedia says: "An external variable must be defined, exactly once, outside of any function; this sets aside storage for it." which is wrong from what you told me?
[07:33:12] <gnoo> not wrong but that's implementation details
[07:33:14] <caze> gnoo: That is talkking about a variable.
[07:33:45] *** Quits: msk (~Thunderbi@89.205.124.40) (Read error: Connection reset by peer)
[07:34:04] <caze> No, it's not an implementation detail. It's a requirement.
[07:34:08] <gnoo> oh, right. variables do use memory
[07:34:54] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[07:35:41] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:35:41] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:35:41] *** Joins: wroathe (~wroathe@user/wroathe)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:41] *** Quits: alch (~alch@151.36.94.218) (Ping timeout: 256 seconds)
[07:39:14] *** Joins: alch (~alch@151.36.84.209)
[07:40:40] *** Joins: msk (~Thunderbi@89.205.124.19)
[07:41:38] *** Quits: ejjfunky (~ejjfunky2@125.164.16.249) (Quit: Leaving)
[07:41:53] *** Quits: analognoise (~analognoi@185.229.59.233) (Read error: Connection reset by peer)
[07:54:20] *** Joins: kts (~kts@103.73.237.36)
[07:56:46] *** Quits: h4zel (~hazel@user/h4zel) (Ping timeout: 272 seconds)
[07:57:27] *** Joins: h4zel (~hazel@user/h4zel)
[07:57:31] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[07:57:59] *** Joins: hinata (~hinata@2409:4042:e03:fa26:f1d0:c5b0:867:5fd4)
[08:02:36] *** Quits: h4zel (~hazel@user/h4zel) (Ping timeout: 240 seconds)
[08:03:47] *** Joins: h4zel (~hazel@user/h4zel)
[08:06:41] *** Joins: hanzo (uid532183@user/hanzo)
[08:07:57] *** Quits: hinata (~hinata@2409:4042:e03:fa26:f1d0:c5b0:867:5fd4) (Ping timeout: 240 seconds)
[08:08:34] *** Joins: hinata (~hinata@2409:4042:e8e:2dda:f1d0:c5b0:867:5fd4)
[08:08:48] *** Quits: h4zel (~hazel@user/h4zel) (Ping timeout: 272 seconds)
[08:09:19] <gnoo> my connection was lost (after my last message), did i miss anything?
[08:10:40] <Maxdamantus> No, but it's odd that you wouldn't be able to tell that, because your IRC client didn't disconnect.
[08:11:18] <gnoo> my bouncer drops some message right after i disconnect, so it's always ambiguous
[08:16:04] *** Quits: constxd (~brad@142.134.78.128) (Quit: WeeChat 2.8)
[08:16:20] <gnoo> i have some closely related global variables like this: http://ix.io/3RK9 , is there a way to group them together ?
[08:18:14] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[08:18:16] <gnoo> (can't use structures, that gives compile-time errors)
[08:18:32] *** Joins: eddybilley (~freddieti@2a02-a454-7f89-1-20fd-6ce0-e071-9e8.fixed6.kpn.net)
[08:18:33] <dave0> not really.. the problem is the functions take different arguments
[08:18:53] *** Quits: hinata (~hinata@2409:4042:e8e:2dda:f1d0:c5b0:867:5fd4) (Quit: Leaving)
[08:19:04] <dave0> maybe if you used a union
[08:19:32] <gnoo> i'm okay with having three different groups for those three as they are distinct but the three lines in each of them are related to each other
[08:19:38] *** Joins: h4zel (~hazel@user/h4zel)
[08:20:49] <dave0> oh you mean define them using a macro?
[08:22:00] <dave0> 3 is right on the border of 'should i use a macro and make it harder to read' and 'it's kinda repetitive but still easy to read'
[08:22:06] *** Joins: hinata (~hinata@2409:4042:e8e:2dda:cc87:9208:4673:89cf)
[08:22:20] *** Joins: seninha (~chatzilla@user/seninha)
[08:22:21] <gnoo> no i mean in void (*imp_fptr[])(struct registers *) = { rrc, nop } , both take the same (0) arguments and the array's len is given by imp_len and it's string representation is imp_name, it feels like those should be grouped together so that they're accessed with the same name similar to structures like imp.len, imp.fptr, imp.name
[08:22:57] *** Quits: eddybilley (~freddieti@2a02-a454-7f89-1-20fd-6ce0-e071-9e8.fixed6.kpn.net) (Ping timeout: 240 seconds)
[08:23:09] <dave0> oh a struct? yeah that'd be alright
[08:23:35] <dave0> oh wait no, it's the function pointer that's a problem
[08:25:10] <gnoo> also const char *imp_name[] = { "rrc", "nop" }; cannot be inside a struct, it gives error like: expected ‘:’, ‘,’, ‘;’, ‘}’ or ‘__attribute__’ before ‘=’ token
[08:25:23] <dave0> it'd look pretty to have    struct { char *name; void (*fptr)(struct registers *); } imp[] = { { "rrc", rrc },{ "nop", nop },{ "mvi", mvi },{ "mov", mov } };
[08:26:35] <gnoo> woah, i didn't knew structs can be used like that
[08:26:56] <gnoo> like just `struct { .. '
[08:27:21] <dave0> yeah the tag is optional
[08:28:44] *** Quits: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Remote host closed the connection)
[08:29:07] *** Joins: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[08:34:21] *** Quits: SaltHillStroller (~SaltHillS@206.223.160.26) (Ping timeout: 256 seconds)
[08:36:03] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[08:36:16] <gnoo> how do i properly extern that, dave0 ? putting it in .h gives link time error like before but using it like "extern struct { char *name; void (*fptr)(struct registers *); } imp[];"  gives: conflicting types for ‘imp’; have ‘struct <anonymous>[]’
[08:37:43] *** Joins: freakazoid343 (~matt@2603:9000:cf03:86c3:bd92:f30c:7395:6f90)
[08:38:07] *** Joins: Betal (~Betal@user/betal)
[08:39:05] *** Joins: attaboy (~archer@user/tessio)
[08:40:14] *** Quits: freakazoid333 (~matt@2603:9000:cf03:86c3:bd92:f30c:7395:6f90) (Ping timeout: 252 seconds)
[08:41:19] <gnoo> ok, i put that in a single .c file and managed others around it. thanks, dave0 !
[08:42:34] *** Joins: pranja (~pranja@58.240.26.203)
[08:43:00] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220226204633])
[08:44:18] *** Quits: pranja (~pranja@58.240.26.203) (Client Quit)
[08:45:44] <dave0> no worries
[08:46:54] <dave0> if you put the struct in a header, you normally give it a name, then you can use   struct name variable[] = { ... }   in the .c file
[08:51:41] <gnoo> oh, ok!
[08:53:07] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:54:09] *** Quits: off^ (~off@50.232.121.75) (Remote host closed the connection)
[08:56:38] *** Joins: eddof13 (~eddof13@2806:102e:12:64:a0cc:1315:5073:f3f7)
[08:58:46] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[09:10:22] *** Quits: koffeinfriedhof (~koffeinfr@ubuntuusers/moderation/koffeinfriedhof) (Quit: WeeChat 3.4)
[09:10:24] <attaboy> good morning
[09:10:45] <attaboy> dave0: no rest for the wicked i guess :)
[09:10:55] *** Quits: artie (~artie@pool-173-59-250-143.bltmmd.fios.verizon.net) (Quit: Client closed)
[09:11:21] *** Joins: koffeinfriedhof (~koffeinfr@ubuntuusers/moderation/koffeinfriedhof)
[09:13:34] <dave0> maw attaboy
[09:18:12] *** Quits: rgrinberg (~textual@2806:101e:7:134:88d:6cc4:143:3039) (Ping timeout: 240 seconds)
[09:18:36] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Ping timeout: 240 seconds)
[09:20:19] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[09:21:19] *** Quits: eddof13 (~eddof13@2806:102e:12:64:a0cc:1315:5073:f3f7) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:21:55] *** Quits: tusko (~yeurt@user/tusko) (Ping timeout: 240 seconds)
[09:23:05] *** Joins: tusko (~yeurt@user/tusko)
[09:23:12] *** Joins: unlink2 (~unlink@p200300ebcf17f000a0e82b17ad9d82cf.dip0.t-ipconnect.de)
[09:23:58] *** Joins: bzng (~bzng4@188-23-202-239.adsl.highway.telekom.at)
[09:25:11] *** Quits: hinata (~hinata@2409:4042:e8e:2dda:cc87:9208:4673:89cf) (Quit: Leaving)
[09:25:17] *** Quits: soapsudsxx (~soapsudsx@209.221.40.152) (Remote host closed the connection)
[09:28:36] *** Quits: h4zel (~hazel@user/h4zel) (Ping timeout: 240 seconds)
[09:31:16] *** Joins: adip (~adip@dhy11.neoplus.adsl.tpnet.pl)
[09:31:18] *** Joins: adip_ (~adip@dhy11.neoplus.adsl.tpnet.pl)
[09:34:59] *** Quits: Praise- (~Fat@user/praise) (Ping timeout: 256 seconds)
[09:35:00] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 240 seconds)
[09:35:05] *** Joins: Trigraph (~Trigraph@user/trigraph)
[09:35:25] *** Joins: Praise (~Fat@user/praise)
[09:37:14] *** Joins: lleo (~leo@188-206-67-190.mobile.kpn.net)
[09:38:35] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: leaving)
[09:39:20] *** Quits: bliminse (~bliminse@host109-152-150-162.range109-152.btcentralplus.com) (Quit: leaving)
[09:41:45] *** Joins: the_lanetly_052_ (~the_lanet@194.135.152.163)
[09:42:57] *** Quits: the_lanetly_052_ (~the_lanet@194.135.152.163) (Max SendQ exceeded)
[09:43:29] *** Joins: the_lanetly_052_ (~the_lanet@194.135.152.163)
[09:43:42] <Trigraph> is this legal ? https://bpa.st/YV4A
[09:44:03] <Trigraph> (in C i.e.)
[09:44:13] *** Quits: the_lanetly_052_ (~the_lanet@194.135.152.163) (Max SendQ exceeded)
[09:44:41] *** Joins: the_lanetly_052_ (~the_lanet@185.30.88.67)
[09:45:05] *** Quits: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[09:46:06] *** Quits: the_lanetly_052_ (~the_lanet@185.30.88.67) (Max SendQ exceeded)
[09:46:33] *** Joins: the_lanetly_052_ (~the_lanet@185.30.88.67)
[09:46:55] <attaboy> just remove te {2, NULL}
[09:47:12] *** Quits: CATS (apic@brezn3.muc.ccc.de) (Ping timeout: 256 seconds)
[09:47:36] <Trigraph> there would be no termination of the list then
[09:47:51] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[09:47:51] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[09:48:04] <attaboy> oh it's a[]
[09:48:07] <attaboy> my bad
[09:48:11] *** Joins: bindu (~bindu@user/bindu)
[09:48:18] *** Joins: tejr (~tejr@user/tejr)
[09:49:37] <Trigraph> i came across this code and the part initializing node_t a[] = {{1, &a[2]} . . . etc} } seems to be unusual. sure it compiles etc, but wondering how would it be possible to initialize a[0].next at compile time (if at all this is evaluated at compile time)
[09:50:16] <Trigraph> wait,  it cannot be this is an address, does this mean it relies on linker/loader magic for fixups at load time ?
[09:50:23] *** Joins: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[09:50:50] <attaboy> s/load time/runtime and yes
[09:51:10] *** Joins: hinata (~hinata@2409:4042:e8e:2dda:cc87:9208:4673:89cf)
[09:51:18] *** Joins: bliminse (~bliminse@host109-152-150-162.range109-152.btcentralplus.com)
[09:52:17] <attaboy> Trigraph: but the type must be known somewhere in runtime it won't guess
[09:52:36] *** Quits: adip_ (~adip@dhy11.neoplus.adsl.tpnet.pl) (Ping timeout: 240 seconds)
[09:52:36] *** Quits: adip (~adip@dhy11.neoplus.adsl.tpnet.pl) (Ping timeout: 240 seconds)
[09:53:26] <dave0> Trigraph: ah yes the trick is that the compiler knows the size of a `struct node` just after the `=` so you can do arithmetic inside the variable definition
[09:53:34] *** Quits: Enitin (~Enitin@82.180.145.230) (Ping timeout: 250 seconds)
[09:53:35] <Trigraph> attaboy, i did not understand your previous statement. the type is defined in code.
[09:54:14] <attaboy> attaboy: a pointer can be point to an incomplete type
[09:54:28] <attaboy> but that type must be defined somewhere else in the code
[09:54:48] <dave0> Trigraph: it's a clever way to build a linked list in a variable definition
[09:55:06] <Trigraph> dave0, yeah it baffled me when i first looked at it :/
[09:55:15] <attaboy> somewhere in the code == not on the current .c file
[09:56:07] <Trigraph> attaboy, it has been long i hve not had to use something like that, i recollect a mention of it in cfaq or somewhere else relating to mutually-referential structures but i cant quite find it
[09:56:22] <Trigraph> would you be so kind as to point me to your reference if you have it handy ?
[09:56:35] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[09:57:02] *** Quits: alefir_ (~alefir@rrcs-24-43-248-58.west.biz.rr.com) (Ping timeout: 250 seconds)
[09:57:15] <dave0> ,cc struct node { int number; struct node *next; }; struct node list[] = { { 3,&list[1] },{ 1,&list[2] },{ 4,&list[3] },{ 1, &list[4] },{ 5, &list[5] },{ 9, NULL } }; for(struct node *n = list; n != 0; n = n->next) { printf("%d ", n->number); }
[09:57:17] <candide> dave0: 3 1 4 1 5 9
[09:57:17] *** Joins: de-facto (~de-facto@user/de-facto)
[09:58:09] <Trigraph> dave0: perhaps it knows struct node size after the struct declaration, i did not understand the "=" part of your answer.
[09:58:30] <dave0> when you are defining the contents of `list[]` it already knows the size is `sizeof(struct node)`
[09:59:02] <dave0> Trigraph: oh okay i meant:
[09:59:07] <dave0> struct node list[] =
[09:59:34] <dave0> here ------------- ^
[09:59:35] <attaboy> Trigraph: you are asking Y but expecting answer X
[09:59:40] <attaboy> but i know what you meant
[09:59:49] <attaboy> dave0: probably got confused
[09:59:59] <dave0> ok
[10:00:20] <attaboy> or i am ..
[10:00:22] <attaboy> let's cleaer that up
[10:00:25] <Trigraph> attaboy, no you are right.
[10:00:41] <Trigraph> i was wondering how .next is filled given that &a[0] is not known at compile time.
[10:01:24] <attaboy> you mean the type of .next is ont known right ?
[10:01:25] *** Joins: hizon (~zxq@43.128.35.22)
[10:01:26] <attaboy> not
[10:01:35] <Trigraph> to that end i understood that something has to be done at runtime to fix up the array elements' .next.
[10:01:48] *** Quits: wlemuel (~wlemuel@210.22.124.110) (Ping timeout: 240 seconds)
[10:01:50] <attaboy> ill give you an example
[10:01:56] <attaboy> if i could find it
[10:02:05] <Trigraph> well, the type of .next is known it is defined above "typedef struct node node_t;
[10:02:05] <Trigraph> "
[10:02:32] <Trigraph> granted node itself is not defined at that point.
[10:02:55] <dave0> Trigraph: it's known at compile time .. the linker can fix up the actual address later
[10:03:17] <dave0> ,cc extern int a; printf("%d ", a); int a = 69;
[10:03:18] <candide> dave0: error: declaration of 'a' with no linkage follows extern declaration
[10:03:33] <dave0> wait that's a candide thing
[10:03:38] <attaboy> Trigraph: if you create instances of the type of .next
[10:03:44] <dave0> ,cc extern int a; int main(void) { printf("%d ", a); return 0; } int a = 69;
[10:03:45] <candide> dave0: /usr/bin/ld:  in function 'main': /home/vm/26919/ undefined reference to 'a'
[10:03:47] <attaboy> then it's known at compile time so i don't understand your question
[10:03:56] <attaboy> if you can create ....
[10:03:56] <dave0> doh that should work
[10:05:06] <attaboy> Trigraph: i think overall you want to learn something that you heard somewhere but don't even know how to ask it :)
[10:06:05] <dave0> ,cc extern int a; void foo(void) { printf("%d ", a); } int a = 69; int main(void) { foo(); }
[10:06:07] <candide> dave0: 69
[10:06:27] <Trigraph> but how can it be known at compile time ? a[] is not completely specified yet i.e at the point where we are using a[1] to initialize .next.
[10:06:35] <dave0> it didn't know the address of a but you can printf it... the linker fixes up the exact address after compiling
[10:07:34] <dave0> Trigraph: it knows the variable's size and that's enough to be able to use it (including pointer arithmetic) ... the linker fixes up the actual address
[10:07:57] <Trigraph> okay
[10:08:58] <dave0> ,cc extern char *a; void foo(void) { printf("%c ", a[4]); } char *a = "Trigraph"; int main(void) { foo(); }
[10:08:59] *** Quits: steve__ (~steve@ool-182c2b80.dyn.optonline.net) (Ping timeout: 256 seconds)
[10:09:00] <candide> dave0: r
[10:09:11] <dave0> i did pointer arithmetic on a
[10:09:14] <dave0> a[4]
[10:10:00] <dave0> ,cc extern char *a; void foo(void) { printf("%s ", a + 3); } char *a = "Trigraph"; int main(void) { foo(); }
[10:10:02] <candide> dave0: graph
[10:10:13] <attaboy> ,c99std 6.7.2.3.10
[10:10:13] <candide> No such section '6.7.2.3.10' in C99 Draft Standard (n1256).
[10:10:29] <attaboy> ,c99std 6.7.2.3
[10:10:31] <candide> http://www.iso-9899.info/n1256.html#6.7.2.3 [Tags] 1 A specific type shall have its content defined at most once. 2 Where two declarations that use the same t﻿ag declare the same type, they shall both use the same choice of struct, union, or enum. 3 A type specifier of the form enum identifier without an enumerator list shall only appear after the type it specifies is complete. Semantics 4 All declarati... <truncated; https://0x0.st/oPCA.txt>
[10:11:03] *** Quits: mintograde (~mintograd@47.201.5.61) (Read error: Connection reset by peer)
[10:11:12] <attaboy> ,c99std 6.7.2.3-10
[10:11:12] <candide> No such text '-10' found within section '6.7.2.3' in C99 Draft Standard (n1256).
[10:11:44] <dave0> Trigraph: i was surprised the first time i saw it too, but now i get how it works, and it's quite handy sometimes
[10:12:38] <attaboy> dave0: how to print a given paragraph from section 6.7.2.3 ?
[10:12:50] *** Joins: j0hn_mc_clane (~j0hn_mc_c@84.198.240.138)
[10:12:58] <dave0> attaboy: idk sorry.. we need fizzie
[10:13:24] <dave0> or pragma-
[10:13:27] * dave0 summons
[10:14:18] <NRK> ,c99 6.7.2.3
[10:14:20] <candide> http://www.iso-9899.info/n1256.html#6.7.2.3 [Tags] 1 A specific type shall have its content defined at most once. 2 Where two declarations that use the same t﻿ag declare the same type, they shall both use the same choice of struct, union, or enum. 3 A type specifier of the form enum identifier without an enumerator list shall only appear after the type it specifies is complete. Semantics 4 All declarati... <truncated; https://0x0.st/oPCm.txt>
[10:14:38] <NRK> ,c99 6.7.2.3p10
[10:14:39] <candide> http://www.iso-9899.info/n1256.html#6.7.2.3p10 [Tags] EXAMPLE 1 This mechanism allows declaration of a self-referential structure. struct tnode { int count; struct tnode *left, *right; }; specifies a structure that contains an integer and two pointers to objects of the same type. Once this declaration has been given, the declaration struct tnode s, *sp; declares s to be an object of the given type and sp ... <truncated; https://0x0.st/oPCa.txt>
[10:15:04] <NRK> this? you can do `pN` to print the Nth paragraph
[10:15:12] <attaboy> NRK: thanks
[10:15:13] <dave0> thanks NRK !
[10:15:21] *** Joins: Darkcoal (~user@user/Darkcoal)
[10:15:35] *** Quits: Thedarkb2 (~Thedarkb@82.3.80.190) (Remote host closed the connection)
[10:15:50] <attaboy> Trigraph: https://0x0.st/oPCa.txt
[10:15:58] *** Joins: Thedarkb2 (~Thedarkb@82.3.80.190)
[10:18:37] <Trigraph> thank attaboy
[10:18:48] *** Quits: novns (~novns@user/novns) (Quit: ZNC - https://znc.in)
[10:19:09] <attaboy> Trigraph: within the code in example 1, node_t is still undefined (incomplete type) and you can have pointers to incomplete types
[10:19:12] *** Joins: novns (~novns@user/novns)
[10:19:20] <attaboy> that's the point
[10:19:46] <attaboy> it was also valid if i would declare foo_t *something;
[10:20:09] <Trigraph> my question was a[] as an array is not completely specified 'yet' and we have &a[0] within the initializer.
[10:20:38] <attaboy> it is specified
[10:20:48] <attaboy> you already defined node_t
[10:21:02] <attaboy> and created an array instance of that definition
[10:21:07] <attaboy> s/definition/type
[10:21:15] <Trigraph> but a[] is not fully specified till the closing brace of a[] { ..... } <-- this brace.
[10:21:35] <attaboy> it is specified but not initialized
[10:21:36] *** Joins: hizon007 (~hizon888@43.129.208.183)
[10:21:44] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 250 seconds)
[10:21:52] *** Quits: hizon007 (~hizon888@43.129.208.183) (Read error: Connection reset by peer)
[10:22:17] *** Joins: Darkcoal (~user@user/Darkcoal)
[10:22:25] <dave0> Trigraph: the compiler has enough information to compute   &a[n]    because it knows the type and size of `a` and that's enough to do pointer arithmetic
[10:22:59] <dave0> well, it knows the size of *a, which is enough
[10:23:28] <Trigraph> you mean size of node_t not size of 'a' ? since we are still within the initializer...
[10:23:47] <dave0> right... sorry i typo'ed
[10:23:57] <dave0> it knows the size of *a
[10:24:13] <dave0> which is the same as  sizeof(node_t)
[10:24:46] <Trigraph> well, size of *a is not same as sizeof(node_t) :(
[10:25:03] <Trigraph> since *a is an array of 3 node_t's
[10:25:29] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:25:51] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[10:25:52] <dave0> ,cc struct foo { size_t number; }; struct foo a[5] = { { sizeof(*a) } }; printf("%zu ", a[0].number);
[10:25:54] <candide> dave0: 8
[10:26:05] <Trigraph> sorry you are right *a is of type node_t
[10:26:53] <dave0> it's trick but sometimes real handy
[10:26:57] <dave0> tricky*
[10:27:36] <dave0> ,cc struct foo { size_t number; }; struct foo a[] = { { sizeof(a) } }; printf("%zu ", a[0].number);
[10:27:37] <candide> dave0: error: invalid application of 'sizeof' to incomplete type 'struct foo[]'
[10:27:48] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 250 seconds)
[10:27:54] <dave0> that didn't work because it doesn't (yet) know the size of `a`
[10:28:07] <dave0> but
[10:28:08] *** Joins: Darkcoal (~user@user/Darkcoal)
[10:28:10] <dave0> ,cc struct foo { size_t number; }; struct foo a[5] = { { sizeof(a) } }; printf("%zu ", a[0].number);
[10:28:12] <candide> dave0: 40
[10:28:21] <dave0> now it does because i put in an explicit size
[10:29:40] <dave0> so there's a bit going on there
[10:30:52] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[10:32:23] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[10:36:11] <attaboy> ,c99std 6.7.2.3p8
[10:36:12] <candide> http://www.iso-9899.info/n1256.html#6.7.2.3p8 [Tags] If a type specifier of the form struct-or-union identifier occurs other than as part of one of the above forms, and no other declaration of the identifier as a t﻿ag is visible, then it declares an incomplete structure or union type, and declares the identifier as the t﻿ag of that type.113) FOOTNOTE.113 A similar construction with enum does not exist... <truncated; https://0x0.st/oPCS.txt>
[10:36:12] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 240 seconds)
[10:38:28] *** Joins: Darkcoal (~user@user/Darkcoal)
[10:39:09] <attaboy> ,c99std 6.7.5.2p8
[10:39:09] <candide> http://www.iso-9899.info/n1256.html#6.7.5.2p8 [Array declarators] EXAMPLE 2 Note the distinction between the declarations extern int *x; extern int y[]; The first declares x to be a pointer to int; the second declares y to be an array of int of unspecified size (an incomplete type), the storage for which is defined elsewhere.
[10:39:30] *** Joins: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr)
[10:39:31] <attaboy> Trigraph: ^
[10:40:01] <Trigraph> thanks let me go through it.
[10:43:43] <attaboy> so the else where is the { ... }
[10:44:25] <attaboy> the elsewhere
[10:44:49] <Xeroine> assuming signed short is 2 bytes what does "short signed *x = malloc(20)" do? AFAIK "sizeof(*x)" is size of short signed and "sizeof(x)" is how many bytes pointer *x can use to store an address. I can only set assign 32767 to *x before it overflows so what does the malloc do here? what are the 20 bytes meant for?
[10:46:00] <supakeen> Probably for a rainy day.
[10:47:03] <supakeen> You'd have to look at how it's used later on to tell, if I look in my crystal orb I'd guess they're storing more than one short.
[10:47:09] <dave0> Xeroine: pointer to 20 bytes
[10:47:51] <dave0> Xeroine: your shorts are 2 bytes, so you can safely store 10 signed shorts in that memory
[10:48:10] <supakeen> Anyways, is this a real thing or a theoretical thing?
[10:48:14] <Xeroine> oh
[10:48:45] <dave0> ,cc short signed *x = malloc(20); for(int a = 0; a < 10; a++) x[a] = 5; for(int b = 0; b < 10; b++) printf("%d ", x[b]);
[10:48:46] <candide> dave0: 5 5 5 5 5 5 5 5 5 5
[10:49:17] <Xeroine> ooh
[10:49:25] <dave0> Xeroine: that's technically not as portable as   short signed *x = malloc(10 * sizeof(short signed));
[10:49:49] <Xeroine> dave0 thx for that example very useful
[10:49:57] <dave0> no worries
[10:51:25] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[10:54:08] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a)
[10:56:31] *** Joins: masoudd (~masoudd@user/masoudd)
[10:56:41] *** Joins: wlemuel (~wlemuel@210.22.124.110)
[10:58:17] *** Joins: ekathva (~ekathva@93-90-58-246.welcomnet.fi)
[11:02:35] *** Joins: panda88kazag (~RadimPavl@176-74-132-138.netdatacomm.cz)
[11:06:17] *** Quits: bliminse (~bliminse@host109-152-150-162.range109-152.btcentralplus.com) (Ping timeout: 240 seconds)
[11:08:28] *** Joins: bliminse (~bliminse@host86-156-84-211.range86-156.btcentralplus.com)
[11:10:48] *** Joins: swinnenb (~swinnenb@user/swinnenb)
[11:12:13] *** Quits: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[11:16:21] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[11:16:37] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[11:16:46] *** Joins: eddybilley (~freddieti@217.119.232.174)
[11:17:26] <sham1> Also
[11:17:32] <sham1> ,mallocidiom
[11:17:32] <candide> T *p = malloc(sizeof *p) is more robust than T *p = malloc(sizeof (T)) because sizeof *p will always be the correct size of T and it prevents unnecessarily repeating the T (DRY principle). If sizeof (T) is used and later one of the T's is changed there will be a mismatch. T *p = malloc(sizeof *p) is more concise and easier to read, especially when T is a compound type.
[11:17:32] *** Quits: kektagen (~kektagen@kektagen.org) (Ping timeout: 272 seconds)
[11:21:20] *** Quits: wlemuel (~wlemuel@210.22.124.110) (Ping timeout: 272 seconds)
[11:21:43] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[11:23:33] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[11:23:57] *** Joins: kektagen (~kektagen@kektagen.org)
[11:30:06] *** Joins: aradesh (~aradesh@user/aradesh)
[11:30:20] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[11:30:34] *** Quits: oxfuxxx (~oxfuxxx@37.120.204.133) (Read error: Connection reset by peer)
[11:32:06] *** Quits: lleo (~leo@188-206-67-190.mobile.kpn.net) (Ping timeout: 272 seconds)
[11:34:30] *** Quits: ColdKeyboard (~ColdKeybo@user/coldkeyboard) (Quit: ZNC - https://znc.in)
[11:34:39] *** Joins: ColdKeybo[a]rd (~ColdKeybo@user/coldkeyboard)
[11:35:00] *** Quits: alch (~alch@151.36.84.209) (Read error: Connection reset by peer)
[11:35:03] *** Joins: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2)
[11:35:57] *** Quits: Alhazred (~Alhazred@45.129.56.151) (Ping timeout: 240 seconds)
[11:39:40] *** Joins: alch (~alch@151.68.104.192)
[11:39:59] *** Joins: oxfuxxx (~oxfuxxx@37.120.204.134)
[11:41:17] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[11:43:20] *** Joins: Rounin (~david@84.212.130.215)
[11:47:11] *** Quits: highrate (~presonic@user/highrate) ()
[11:47:26] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 245 seconds)
[11:49:36] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[11:53:54] *** Joins: sh0ne (~sh0ne@178.237.217.167)
[12:00:03] *** Quits: Natch (~natch@c-67bae255.014-297-73746f25.bbcust.telenor.se) (Ping timeout: 256 seconds)
[12:02:51] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[12:04:25] *** Joins: Natch (~natch@c-67bae255.014-297-73746f25.bbcust.telenor.se)
[12:07:06] *** Quits: Furai (~Furai@furai.pl) (Quit: WeeChat 3.4)
[12:07:24] *** Quits: Zectbumo (~Zectbumo@2600:8802:5100:3f90:18a3:2079:9a01:7f89) (Remote host closed the connection)
[12:08:42] *** Quits: zer0x (~zer0x@58.186.62.81) (Ping timeout: 260 seconds)
[12:09:27] *** Joins: arinov_ (~arinov@213.194.126.155)
[12:12:56] *** Joins: Furai (~Furai@furai.pl)
[12:16:13] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[12:16:40] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[12:23:24] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[12:25:38] *** Joins: Sadale (~Sadale@user/sadale)
[12:25:59] *** Quits: hinata (~hinata@2409:4042:e8e:2dda:cc87:9208:4673:89cf) (Quit: Leaving)
[12:30:10] *** Quits: zdctg[m] (~zdctgmatr@2001:470:69fc:105::1:8a86) (Quit: You have been kicked for being idle)
[12:30:51] *** Joins: Idiotska (~Idiotska@dynamic-046-114-110-067.46.114.pool.telefonica.de)
[12:31:11] <Idiotska> Hacking anywhere?
[12:31:49] <supakeen> What do you mean?
[12:32:22] <Idiotska> I mean Irc Op hacking or unban a irc channel for idiots
[12:33:26] <Idiotska> I'm from autistenchat.org and the ops Yana and MadamePluto has ban my mobile network
[12:33:56] <supakeen> Ok well, this is the #c programming channel :)
[12:35:46] <Idiotska> I such for a programmer and hacker channel to find help. I'm autistic and i'm very sad that the #autistenchat ops has ban my network
[12:36:28] *** Joins: Alhazred (~Alhazred@45.129.56.151)
[12:36:37] *** Joins: iomari891 (~iomari891@197.210.71.177)
[12:36:53] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[12:37:22] <Idiotska> What is #c programming?
[12:37:35] <supakeen> The C programming language.
[12:38:56] *** Parts: Ecco (~user@lfbn-idf1-1-1530-116.w90-90.abo.wanadoo.fr) ()
[12:39:07] <zwr> getentropy()... for the Nintendo DS
[12:39:12] <Idiotska> I havn't any programming skills like many autistic people has it. Do you know a libera channel where hackers are?
[12:39:39] <NRK> hackers or crackers?
[12:40:06] <supakeen> Idiotska: You can use the `alis` bot to search for channels, for example `/msg alis help list` to see its commands.
[12:40:08] <NRK> https://stallman.org/articles/on-hacking.html
[12:41:30] *** Quits: ekathva (~ekathva@93-90-58-246.welcomnet.fi) (Remote host closed the connection)
[12:41:36] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:42:32] *** Joins: adip (~adip@dhy11.neoplus.adsl.tpnet.pl)
[12:42:34] *** Joins: adip_ (~adip@dhy11.neoplus.adsl.tpnet.pl)
[12:45:17] *** Quits: fe23 (~fe23@2409:8a34:466:6010:48b0:947e:a180:4fca) (Ping timeout: 240 seconds)
[12:45:29] *** Parts: Idiotska (~Idiotska@dynamic-046-114-110-067.46.114.pool.telefonica.de) ()
[12:45:57] *** Joins: loganlee (~Thunderbi@user/loganlee)
[12:50:09] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:52:32] *** Quits: kts (~kts@103.73.237.36) (Ping timeout: 272 seconds)
[12:57:37] *** Quits: oxfuxxx (~oxfuxxx@37.120.204.134) (Quit: Yankies Motherfh@ckers C0[k Astroboys)
[12:58:00] *** Joins: oxfuxxx (~oxfuxxx@37.120.204.134)
[13:00:31] *** Joins: semeion (~semeion@user/semeion)
[13:02:25] *** Quits: oxfuxxx (~oxfuxxx@37.120.204.134) (Remote host closed the connection)
[13:02:57] *** Quits: Natch (~natch@c-67bae255.014-297-73746f25.bbcust.telenor.se) (Ping timeout: 240 seconds)
[13:03:06] *** Joins: oxfuxxx (~oxfuxxx@37.120.204.134)
[13:03:21] *** Quits: thevishy (~Nishant@49.37.242.151) (Read error: Connection reset by peer)
[13:03:57] *** Joins: thevishy (~Nishant@49.37.242.151)
[13:06:58] *** Joins: emias (~holger@home.zedat.fu-berlin.de)
[13:13:36] *** Joins: kts (~kts@103.73.237.36)
[13:14:05] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[13:14:55] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:15:48] *** Joins: Klinda (~superleag@user/klinda)
[13:18:38] *** Joins: Natch (~natch@c-67bae255.014-297-73746f25.bbcust.telenor.se)
[13:25:21] *** Quits: thevishy (~Nishant@49.37.242.151) (Quit: Leaving)
[13:25:42] *** Joins: shivesh (~shivesh@user/shivesh)
[13:27:21] *** Joins: ekathva (~ekathva@n14jr7jr13zqs0uz1-1.v6.elisa-mobile.fi)
[13:29:02] *** Quits: moose (~moose@user/moose) (Read error: Connection reset by peer)
[13:29:55] *** Joins: slidercrank (~slidercra@user/slidercrank)
[13:32:49] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[13:33:35] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[13:33:41] *** Quits: oxfuxxx (~oxfuxxx@37.120.204.134) (Quit: Yankies Motherfh@ckers C0[k Astroboys)
[13:34:08] *** Joins: oxfuxxx (~oxfuxxx@37.120.204.134)
[13:34:16] <pony> hi
[13:34:20] <pony> is C good?
[13:34:28] <pony> are pointers good?
[13:34:44] <pony> please ignore me I cant troll
[13:35:32] *** Quits: oxfuxxx (~oxfuxxx@37.120.204.134) (Client Quit)
[13:35:49] <NRK> ,report pony
[13:35:49] <candide> p﻿ony has been reported (report id 77208)
[13:35:56] <pony> thank you
[13:36:01] <NRK> :>
[13:36:19] <NRK> the cyber police are after you now
[13:36:35] <dave0> you have the right to look fabulous
[13:36:38] *** Joins: MajorBiscuit (~MajorBisc@c-001-015-055.client.tudelft.eduvpn.nl)
[13:37:17] <pony> yeah baby
[13:37:40] <dave0> ah! austin powers
[13:38:49] *** Joins: seninha (~chatzilla@user/seninha)
[13:39:36] *** Joins: hinata (~hinata@2409:4042:e8e:2dda:cc87:9208:4673:89cf)
[13:40:12] *** Joins: cart_ (~cart@host-78-144-125-214.as13285.net)
[13:41:02] *** Quits: kts (~kts@103.73.237.36) (Ping timeout: 240 seconds)
[13:45:38] *** Joins: kts (~kts@103.73.237.36)
[13:52:47] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[13:55:21] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 245 seconds)
[13:56:34] *** Joins: iomari892 (~iomari891@197.210.77.147)
[13:57:48] *** Joins: oxfuxxx (~oxfuxxx@37.120.204.134)
[13:59:37] *** Quits: iomari891 (~iomari891@197.210.71.177) (Ping timeout: 256 seconds)
[14:00:11] *** Quits: kts (~kts@103.73.237.36) (Ping timeout: 256 seconds)
[14:00:57] *** Joins: ekathva_ (~ekathva@n14jp5os0e43ev9my-1.v6.elisa-mobile.fi)
[14:02:13] *** Quits: ekathva (~ekathva@n14jr7jr13zqs0uz1-1.v6.elisa-mobile.fi) (Ping timeout: 240 seconds)
[14:05:34] *** Joins: zer0x (~zer0x@58.186.62.81)
[14:12:34] *** Joins: l4s8g_ (~l4s8g@pd9e62e01.dip0.t-ipconnect.de)
[14:14:14] *** Quits: rkta (~rkta@2001:4ba0:cafe:eaf::1) (Quit: zzz)
[14:17:28] *** Quits: oxfuxxx (~oxfuxxx@37.120.204.134) (Ping timeout: 250 seconds)
[14:23:27] *** Joins: oxfuxxx (~oxfuxxx@37.120.204.134)
[14:23:32] *** Joins: rkta_ (~rkta@2001:4ba0:cafe:eaf::1)
[14:23:37] *** rkta_ is now known as rkta
[14:26:55] *** Joins: iomari891 (~iomari891@102.91.5.229)
[14:27:17] *** Joins: unknow (~i.am@user/marlboro)
[14:30:02] *** Quits: iomari892 (~iomari891@197.210.77.147) (Ping timeout: 250 seconds)
[14:30:48] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[14:31:27] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[14:31:40] *** Quits: ncrowl (~ncrowl@31-208-119-54.cust.bredband2.com) (Ping timeout: 256 seconds)
[14:32:48] *** Quits: oxfuxxx (~oxfuxxx@37.120.204.134) (Ping timeout: 256 seconds)
[14:33:12] *** Joins: ncrowl (~ncrowl@31-208-119-15.cust.bredband2.com)
[14:34:42] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[14:36:50] *** Joins: toou (~toou@user/toou)
[14:37:07] *** Quits: toou (~toou@user/toou) (Client Quit)
[14:37:38] *** Joins: bertvvvs (~bertvvvs@user/bertvvvs)
[14:39:49] *** Joins: oxfuxxx (~oxfuxxx@37.120.204.134)
[14:41:24] *** Quits: l4s8g_ (~l4s8g@pd9e62e01.dip0.t-ipconnect.de) (Quit: l4s8g_)
[14:42:47] *** Joins: mattil (~mattil@helsinki.portalify.com)
[14:43:29] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[14:44:38] *** Quits: oxfuxxx (~oxfuxxx@37.120.204.134) (Ping timeout: 272 seconds)
[14:46:53] *** Joins: gog (~ada@user/gog)
[14:51:10] *** Joins: oxfuxxx (~oxfuxxx@37.120.204.133)
[14:51:19] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[14:53:30] *** Joins: l4s8g_ (~l4s8g@pd9e62e01.dip0.t-ipconnect.de)
[14:54:22] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[14:55:44] *** Quits: hizon (~zxq@43.128.35.22) (Read error: Connection reset by peer)
[14:57:16] *** Joins: kaph (~kaph@an-19-184-70.service.infuturo.it)
[15:01:24] *** Quits: eddybilley (~freddieti@217.119.232.174) (Ping timeout: 240 seconds)
[15:05:08] *** Quits: arinov_ (~arinov@213.194.126.155) (Ping timeout: 250 seconds)
[15:06:10] *** Quits: j0hn_mc_clane (~j0hn_mc_c@84.198.240.138) (Ping timeout: 272 seconds)
[15:06:27] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[15:06:42] *** Joins: eddybilley (~freddieti@217.119.232.174)
[15:11:20] *** Quits: eddybilley (~freddieti@217.119.232.174) (Ping timeout: 256 seconds)
[15:13:11] *** Joins: j0hn_mc_clane (~j0hn_mc_c@84.198.240.138)
[15:14:22] *** Quits: j0hn_mc_clane (~j0hn_mc_c@84.198.240.138) (Client Quit)
[15:14:34] *** Joins: fe23 (~fe23@2409:8a34:466:6010:f85c:baac:7ac5:95ce)
[15:16:09] *** Quits: fe23 (~fe23@2409:8a34:466:6010:f85c:baac:7ac5:95ce) (Remote host closed the connection)
[15:16:20] *** Joins: eddybilley (~freddieti@217.119.232.174)
[15:16:33] *** Joins: fe23 (~fe23@2409:8a34:466:6010:f85c:baac:7ac5:95ce)
[15:20:00] *** Joins: random-nick (~random-ni@87.116.176.196)
[15:20:37] *** Quits: eddybilley (~freddieti@217.119.232.174) (Ping timeout: 240 seconds)
[15:20:44] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 272 seconds)
[15:21:09] *** Joins: Klinda (~superleag@user/klinda)
[15:24:13] *** Joins: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net)
[15:29:28] *** Joins: eddybilley (~freddieti@217.119.232.174)
[15:29:28] *** Quits: oxfuxxx (~oxfuxxx@37.120.204.133) (Ping timeout: 256 seconds)
[15:29:44] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[15:30:17] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:30:42] *** Quits: kaph (~kaph@an-19-184-70.service.infuturo.it) (Read error: Connection reset by peer)
[15:31:02] *** Joins: csrf (~csrf@user/csrf)
[15:32:13] *** Joins: Burgundy (~NA@86.121.143.206)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:02] *** Quits: alch (~alch@151.68.104.192) (Read error: Connection reset by peer)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:39:06] *** Quits: Alhazred (~Alhazred@45.129.56.151) (Ping timeout: 272 seconds)
[15:39:25] *** Joins: oxfuxxx (~oxfuxxx@37.120.204.132)
[15:39:44] *** Quits: Trigraph (~Trigraph@user/trigraph) (Ping timeout: 272 seconds)
[15:40:00] *** Joins: alch (~alch@151.38.97.193)
[15:41:58] *** Joins: Telvana2 (~capo@user/telvana)
[15:43:04] *** Quits: Telvana (~capo@user/telvana) (Ping timeout: 256 seconds)
[15:46:09] *** Quits: eddybilley (~freddieti@217.119.232.174) (Ping timeout: 256 seconds)
[15:48:50] *** Joins: eddybilley (~freddieti@217.119.232.174)
[15:53:48] *** Quits: Jong (~Jong@2620:10d:c090:400::5:991e) (Ping timeout: 240 seconds)
[15:57:53] *** Quits: soul-d (~uknown@user/soul-d) (Read error: Connection reset by peer)
[16:07:35] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 240 seconds)
[16:07:36] *** Quits: tazle (tazle@kapsi.fi) (Ping timeout: 272 seconds)
[16:08:47] *** Joins: tejr (~tejr@user/tejr)
[16:09:19] *** Joins: tazle (~tazle@kapsi.fi)
[16:10:37] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Ping timeout: 240 seconds)
[16:10:59] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:13:21] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[16:15:57] *** Joins: wlemuel (~wlemuel@210.22.124.110)
[16:16:53] *** Joins: SaltHillStroller (~SaltHillS@206.223.160.26)
[16:19:14] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 250 seconds)
[16:19:55] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[16:19:58] *** Joins: graywolf (~wolf@user/graywolf)
[16:20:04] *** Joins: Alhazred (~Alhazred@86.106.74.41)
[16:21:21] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[16:23:54] *** Joins: constxd_ (~brad@142.134.78.128)
[16:24:07] *** Quits: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net) (Ping timeout: 256 seconds)
[16:24:26] *** Joins: admal (~admal@gateway/tor-sasl/admal)
[16:25:39] *** Quits: fe23 (~fe23@2409:8a34:466:6010:f85c:baac:7ac5:95ce) (Remote host closed the connection)
[16:26:02] *** Joins: fe23 (~fe23@2409:8a34:466:6010:f85c:baac:7ac5:95ce)
[16:28:08] *** Joins: soul-d (~uknown@user/soul-d)
[16:32:47] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[16:33:48] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.4)
[16:34:32] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[16:34:38] *** Joins: ymwm__ (~yingmanwu@117.26.69.144)
[16:35:17] *** Quits: ymwm__ (~yingmanwu@117.26.69.144) (Max SendQ exceeded)
[16:35:45] *** Joins: ymwm__ (~yingmanwu@117.26.69.144)
[16:37:29] *** Quits: ymwm_ (~yingmanwu@117.26.68.45) (Ping timeout: 256 seconds)
[16:39:17] *** Joins: lisbeths (~user@c-73-83-140-133.hsd1.wa.comcast.net)
[16:39:49] <lisbeths> is there some kind of controversy around using memcpy? If there is please link me to some reading about that
[16:43:03] <NRK> what controversy?
[16:43:10] *** Quits: segnior (segnior@user/segnior) (Remote host closed the connection)
[16:44:20] *** Quits: Sadale (~Sadale@user/sadale) (Ping timeout: 272 seconds)
[16:44:27] <NRK> the only "controversy" i can think of is if your memory region overlap.
[16:44:38] <NRK> then memcpy behavior is undefined, and memmove should be used instead.
[16:44:59] *** Joins: kts (~kts@103.73.237.26)
[16:45:39] *** Joins: Sadale (~Sadale@user/sadale)
[16:46:12] *** Joins: cosimone (~user@93-47-229-38.ip115.fastwebnet.it)
[16:49:24] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 272 seconds)
[16:50:24] <lisbeths> So as some of you know I've been grinding to learn the c memory model. I've learned about how c is not a flat memory model. For example if I wanted to store the literal address of a pointer into a string I'd have to use memcpy. so memcpy is kind of cheaty depending on what you use it for
[16:51:27] <lisbeths> C has at least 3 types of data, funciton pointers, pointers, and regular data. And these are like oil and water they do not mix. You should not convert a pointer inot a string.
[16:52:26] *** Quits: constxd_ (~brad@142.134.78.128) (Ping timeout: 260 seconds)
[16:52:54] *** Quits: admal (~admal@gateway/tor-sasl/admal) (Remote host closed the connection)
[16:53:01] *** Quits: wovixo (~wovixo@128.104.205.49) (Read error: Connection reset by peer)
[16:53:02] <edk> that does not sound accurate
[16:53:24] <lisbeths> which aspect
[16:53:30] <edk> well, any of it
[16:53:31] <fizzie> I don't know if "pointers are a fundamentally different category of a thing" is the lesson you should walk away with. They're still "regular data". They just have an implementation-defined object representation; but that's the case for pretty much all types. There's nothing more wrong with using `memcpy` on a pointer object as there would be in using one on, say, a floating-point type.
[16:53:44] <edk> it's true that C does not have a flat memory model, but the rest just doesn't seem true
[16:54:29] <lisbeths> i should make it clear that I am learning to write portable aviation grade code so I only care about what the c standard can guarantee, OR what the c standard COULD or SHOULD guarantee but doesn't
[16:54:34] <edk> there are two kinds of thing in C that can be pointed to: functions and data. but function pointers are just data
[16:55:32] <edk> you can store object pointers, function pointers, and "regular data" in a struct together, for instance
[16:55:37] *** Quits: mimorek (~mimorek@2a02:a463:6d13:1:8a22:4d45:1db4:6da) (Ping timeout: 240 seconds)
[16:56:30] *** Joins: admal (~admal@gateway/tor-sasl/admal)
[16:56:38] *** Quits: ymwm__ (~yingmanwu@117.26.69.144) (Ping timeout: 260 seconds)
[16:56:53] <fizzie> You can also safely for example use memcpy to copy the representation of an `int *` value into a `char [sizeof (int *)]` object, and then back into a different `int *` object, and the two pointers will compare equal. You can't safely copy the representation of an `int *` "into a string" because some of its bytes might be 0, but that's again the same as with other types.
[16:57:13] *** Joins: wovixo (~wovixo@128.104.205.49)
[16:57:17] <lisbeths> memcpy is only necessary becuase c standard doesn't guarantee how these will be represented. Is that correct?
[16:57:43] *** Quits: graywolf (~wolf@user/graywolf) (Quit: WeeChat 3.3)
[16:57:54] <edk> memcpy is not necessary for anything
[16:57:56] *** Quits: hinata (~hinata@2409:4042:e8e:2dda:cc87:9208:4673:89cf) (Quit: Leaving)
[16:58:08] *** Joins: admal_ (~admal@gateway/tor-sasl/admal)
[16:58:17] <lisbeths> alright then tell me how to store the data of an address in a char* without mcpy pls
[16:58:59] *** Quits: acerbic (~acerbic@cs-xdata-50-86-50-82.cspire.com) (Read error: Connection reset by peer)
[16:59:33] <edk> you could use a loop//
[16:59:49] <edk> s|/|.|g
[16:59:54] <fizzie> Given that you can implement `memcpy` in plain (strictly conforming) C, it's clearly not necessary.
[17:00:27] <lisbeths> That is just memcpy with extra steps
[17:00:28] *** Quits: de-facto (~de-facto@user/de-facto) (Quit: See you around. 💤)
[17:01:06] *** Joins: de-facto (~de-facto@user/de-facto)
[17:01:09] <lisbeths> Let us assume that I wrote a pointer into a string without using mcpy and trusted the compiler to write the data correctly, would that tend to be a faster operation than using memcpy.
[17:01:13] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[17:02:02] <edk> what do you mean by "wrote a pointer into a string"?
[17:02:35] *** Quits: admal (~admal@gateway/tor-sasl/admal) (Quit: leaving)
[17:02:35] *** Quits: admal_ (~admal@gateway/tor-sasl/admal) (Client Quit)
[17:02:44] <lisbeths> I am implementing a dynamic type system and it seems that there have been two very good canditates for storing this in c. One is to represent everything as strings and to just treat the memory model as flat. The other is to use unions/structs
[17:02:51] *** Joins: admal (~admal@gateway/tor-sasl/admal)
[17:03:29] *** Quits: kts (~kts@103.73.237.26) (Ping timeout: 252 seconds)
[17:03:57] <lisbeths> So lets say my address is sizeof(void*) bytes. Then A string which stored my address would be sizeof(void*) bytes further ahead. And this is why allegedly memcpy is necessary
[17:05:38] *** Joins: ludwhe (~ludwhe@user/ludwhe)
[17:06:26] <fizzie> What C calls a string can't necessarily store the representation of a `void *` in sizeof (void *) bytes, because some of those bytes might be 0, and would need to be encoded in some way in order to be part of a string. (If you're using "string" to mean "just a bunch of bytes", then that's different.)
[17:07:34] <edk> it's hard to answer this question because i don't know of any reason why a dynamic type system would need to reinterpret anything
[17:08:29] *** Quits: ludwhe (~ludwhe@user/ludwhe) (Client Quit)
[17:08:47] <fizzie> Yes, just as a disclaimer, I've been considering strictly only the "pointer as a string" part of the question.
[17:09:00] *** Quits: epony (epony@user/epony) (Quit: QUIT)
[17:09:17] *** Joins: ludwhe (~ludwhe@user/ludwhe)
[17:09:21] *** Joins: gildasio1 (~gildasio@gateway/tor-sasl/gildasio)
[17:11:10] <fizzie> (The standard library's formatted input/output functions do provide an implementation-defined conversion from `void *` values to strings of printable characters and back again, but it's not a particularly convenient one because it has no constant upper bound for the length. It tends to get used only for ad-hoc formatting of pointers in debugging messages and such.)
[17:11:15] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Quit: WeeChat 3.4)
[17:11:23] *** gildasio1 is now known as gildasio
[17:11:28] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[17:14:07] *** Quits: cart_ (~cart@host-78-144-125-214.as13285.net) (Read error: Connection reset by peer)
[17:14:16] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[17:17:11] *** Joins: acerbic (~acerbic@cs-xdata-50-86-50-82.cspire.com)
[17:18:36] *** Joins: placeb0 (uid283215@id-283215.lymington.irccloud.com)
[17:20:01] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[17:20:07] *** Joins: kts (~kts@103.73.237.26)
[17:21:14] *** Quits: yolo (~xxiao@li1120-73.members.linode.com) (Remote host closed the connection)
[17:22:42] <lisbeths> There's something subtle about computer memory that I am not getting. But I'll keep working at it. Thanks.
[17:22:58] *** Quits: kkd (~kkd@255.205.154.104.bc.googleusercontent.com) (Ping timeout: 272 seconds)
[17:23:02] *** Parts: lisbeths (~user@c-73-83-140-133.hsd1.wa.comcast.net) (ERC (IRC client for Emacs 26.3))
[17:24:51] *** Joins: kkd (~kkd@255.205.154.104.bc.googleusercontent.com)
[17:24:51] *** Joins: bebyx (~Thunderbi@user/bebyx)
[17:29:18] *** Quits: ik (uid540109@id-540109.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[17:33:01] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:1d0a:10c:e91c:1f8)
[17:33:01] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:1d0a:10c:e91c:1f8) (Changing host)
[17:33:01] *** Joins: skapata (~Skapata@user/skapata)
[17:33:31] <NRK> ,cc void *p = &p;
[17:33:33] <candide> NRK: no output: p = 0x7fffffffe308
[17:34:09] *** Quits: CodeAgain (~codeagain@user/CodeAgain) (Read error: Connection reset by peer)
[17:35:51] <clarity> meow.
[17:37:13] *** Quits: kurahaupo (~kurahaupo@pa49-197-139-21.pa.qld.optusnet.com.au) (Ping timeout: 256 seconds)
[17:37:21] <dave0> what use besides debugging is printing the value of a raw pointer?
[17:37:47] *** Quits: sh0ne (~sh0ne@178.237.217.167) (Ping timeout: 256 seconds)
[17:37:54] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[17:40:29] <dave0> and if it's debugging you can use printf("%d", (int)ptr);
[17:41:35] <clarity> that discards too much info
[17:41:42] <clarity> if int is smaller than the pointer
[17:41:53] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[17:42:32] <dave0> you would tweak it to your system and know the real size anyway.. you're debugging
[17:42:41] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[17:42:49] <clarity> What's the point?
[17:42:57] <dave0> exactly
[17:43:03] <clarity> %p does this for you
[17:43:33] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Remote host closed the connection)
[17:47:02] *** Joins: kurahaupo (~kurahaupo@pa49-197-102-98.pa.qld.optusnet.com.au)
[17:49:08] *** Joins: brad_mssw (~bhouse@208.184.162.149)
[17:49:31] *** Joins: Guest3291 (~Guest@host194.190-137-38.telecom.net.ar)
[17:49:59] *** Quits: ludwhe (~ludwhe@user/ludwhe) (Quit: Client closed)
[17:50:19] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Remote host closed the connection)
[17:50:45] *** Joins: gildasio (~gildasio@gateway/tor-sasl/gildasio)
[17:51:17] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[17:54:38] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[18:00:27] *** Joins: rdg (~rdg@user/rdg)
[18:00:30] *** Quits: Guest3291 (~Guest@host194.190-137-38.telecom.net.ar) (Remote host closed the connection)
[18:02:03] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[18:02:31] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[18:03:10] <rcf> Every time someone tries storing a pointer in an int I die inside just a little bit more
[18:04:18] *** Joins: constxd (~brad@142.134.78.128)
[18:04:25] <constxd> morning kings
[18:05:19] *** Joins: mimorek (~mimorek@2a02:a463:6d13:1:8a22:4d45:1db4:6da)
[18:06:02] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 272 seconds)
[18:08:47] *** Joins: angelacrust (~angelacru@171.50.170.186)
[18:09:13] <angelacrust> Hi, is there a better way to handle line 14? https://bpa.st/T5HA
[18:09:36] *** Joins: epony (epony@user/epony)
[18:10:20] *** Joins: pulse (~pulse@user/pulse)
[18:11:49] <constxd> bro what
[18:11:55] <dave0> angelacrust: yes,   char buff2[51]; fgets(buff2, sizeof buff2, stdin); char c = buff2[0];
[18:11:55] <constxd> angelacrust: what are u trying to do
[18:11:56] <fizzie> dave0: Hypothetically, you might be stuck using a library that has a stringly typed key-value thing to pass data through it (as in, from your code to some later callback that's still your code), and you could use the %p formatting and scanning to smuggle a pointer through portably.
[18:12:09] <rdg> I would like to prevent code rot using something like `if(DEBUG) do_debug_things(foo, bar);`, but how can I turn it on with `#define DEBUG` only (no value)? Using `if(defined(DEBUG))` doesn't work
[18:12:23] <angelacrust> constxd I'm getting an extra newline in the output which I want to remove
[18:12:35] <constxd> #ifdef DEBUG ... #endif
[18:13:40] <constxd> angelacrust: what?
[18:14:16] <constxd> you're only outputting literal strings "YES\n" and "NO\n" -- how could a call to getchar() change the amount of newlines in the output?
[18:14:23] <dave0> rdg: if you don't mind changing the name,    #ifdef DEBUG   int Debug=1;   #else   int Debug=0;   #endif    if(Debug) do_debug_things();
[18:14:36] <rdg> constxd: I can define that for each DEBUG define, but I would like to use a macro like `defined(FOO)`, but they are a lot
[18:14:40] <dave0> angelacrust: use another fgets like my code
[18:14:55] <fizzie> The thing inside can also be a macro rather than a variable.
[18:14:58] <rdg> dave0: that what I was trying to avoid :-)
[18:15:02] *** Quits: bzng (~bzng4@188-23-202-239.adsl.highway.telekom.at) (Quit: Leaving)
[18:15:10] *** Quits: attaboy (~archer@user/tessio) (Quit: WeeChat 3.4)
[18:15:13] <dave0> rdg: oh you can do it with the preproccessor..
[18:15:15] <fizzie> As in, have an `#ifdef DEBUG  #define DEBUG_ON 1  #else  #define DEBUG_ON 0  #endif` prelude, and then do if (DEBUG_ON) do_it();
[18:15:35] <dave0> rdg: #ifdef DEBUG   #undef DEBUG   #define DEBUG 1   #else   #define DEBUG 0   #endif
[18:15:36] <angelacrust> dave0  but I'll have to declare one more buffer right?
[18:15:37] *** Joins: mceldeen (~mceldeen@h66-222-117-47.mdsnwi.tisp.static.tds.net)
[18:15:47] <angelacrust> constxd The scanf() is leaving a newline in the output
[18:15:47] <dave0> angelacrust: yeah, i put  buff2
[18:16:01] <angelacrust> yeah... that's what I'm trying to avoid
[18:16:11] <constxd> angelacrust: scanf doesn't perform output
[18:16:34] <dave0> angelacrust: it's a good idea to not mix fgets and scanf
[18:16:46] <angelacrust> it's leaving a `\n` in the buffer constxd
[18:16:54] <angelacrust> dave0 I see.
[18:16:55] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[18:16:59] *** Quits: mceldeen (~mceldeen@h66-222-117-47.mdsnwi.tisp.static.tds.net) (Remote host closed the connection)
[18:17:04] <dave0> angelacrust: it's also a good idea to use fgets for user input
[18:17:24] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[18:17:39] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[18:17:40] <dave0> user input tends to come in lines, which is fgets' thing
[18:17:42] <rdg> dave0: I would need to do it for each DEBUG_A DEBUG_B etc defines
[18:17:58] <angelacrust> dave0 can I also remove the `\n` inside the scanf() ?
[18:18:20] <rdg> that's why I was trying to find an automatic way using a macro like DEFINED(FOO) which does exactly that
[18:18:30] <dave0> angelacrust: eh it's easier to use fgets
[18:18:51] <dave0> rdg: what's DEBUG_A ?
[18:19:17] <rdg> dave0: different debugging parts that can be enabled
[18:19:33] <dave0> angelacrust: you could use   char c, d; scanf("%c%c", &c, &d);   and then forget about d ... i'm pretty sure %c doesn't skip whitespace
[18:19:42] <angelacrust> yep, but I'll have to declare a buffer of 3 chars when I can do the same thing at 1 char dave0
[18:19:47] <fizzie> angelacrust: If you insist, `scanf("%c%*[^\n]%*c", &c);` will read one character and then discard up to and including the next following "\n".
[18:19:54] <angelacrust> woah
[18:20:19] <dave0> rdg: you want to use    if(DEBUG_A)   in the code aswell?
[18:20:27] <angelacrust> fizzie that's what I was looking for
[18:20:27] <dave0> angelacrust: yeah it's ugly
[18:20:37] <fizzie> Or `scanf("%c%*c", &c);` if you want to keep it simple and just read one character and discard the next one, whatever it is.
[18:20:52] <rdg> dave0: yes, or anything equivalent will work as well
[18:21:32] <dave0> i looked it up, %c doesn't skip whitespace... %c%*c  will work
[18:21:40] <angelacrust> I agree it's ugly and perhaps  falls under bad programming practice, but it fits my requirements  for now
[18:21:41] <dave0> you're basically moving the getchar() into scanf
[18:22:36] <angelacrust> fizzie the next line also has a `\n` so I should use the first format right?
[18:23:03] <fizzie> What next line?
[18:23:26] <angelacrust> the line that has only 1 char
[18:24:01] <fizzie> Well, I mean. If you're okay with assuming it always has just one character, both "%c%*[^\n]%*c" and "%c%*c" will do exactly the same thing.
[18:24:19] <angelacrust> hmm
[18:24:22] <fizzie> The former will just also handle the case where it's longer by discarding the others as well.
[18:24:42] <angelacrust> Got it
[18:24:45] *** Joins: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[18:24:47] *** Quits: kurahaupo (~kurahaupo@pa49-197-102-98.pa.qld.optusnet.com.au) (Quit: Quit)
[18:25:02] *** Quits: zer0x (~zer0x@58.186.62.81) (Ping timeout: 272 seconds)
[18:25:04] *** Joins: kurahaupo (~kurahaupo@pa49-197-102-98.pa.qld.optusnet.com.au)
[18:25:31] <dave0> that scanf format incantation vs fgets
[18:25:38] <angelacrust> yeah...
[18:25:59] <fizzie> There's also "%c%*[^\n]%*1[\n]" if you really like being explicit, but it's functionally equivalent to "%c%*[^\n]%*c".
[18:26:24] <angelacrust> hmm, that's a lot of advanced stuff
[18:27:02] <dave0> it's probably turing complete.. one of the ioccc things did it to printf, why not scanf ;-)
[18:27:19] <fizzie> The reason why they're the same is that the only character that can possibly follow a finished %*[^\n] conversion specification in the input stream is a '\n'. So it doesn't matter whether you use %*c or %*1[\n] to discard it.
[18:27:29] *** Quits: brad_mssw (~bhouse@208.184.162.149) (Quit: This computer has gone to sleep)
[18:27:34] <angelacrust> Gotcha
[18:28:14] <angelacrust> What do you call this technique of avoiding specific chars in scanf()?
[18:29:19] <fizzie> I don't know if it's got a name. The %[...] conversion specifier (or specifically the "..." part) is known as a /scanset/.
[18:30:06] <fizzie> Or I guess if you want to be really precise, the "..." is the /scanlist/, and the resulting set of characters after interpreting the optional ^ is the scanset.
[18:30:06] *** Quits: kts (~kts@103.73.237.26) (Ping timeout: 272 seconds)
[18:30:24] *** Joins: zsoltiv_ (~zsoltiv@85-235-95-111.naracom.hu)
[18:30:32] <dave0> posix says that too .. here's all the gory details   https://pubs.opengroup.org/onlinepubs/9699919799/functions/scanf.html
[18:30:44] <angelacrust> I see
[18:30:49] <angelacrust> thanks everyone
[18:30:58] <angelacrust> dave0 nice, I'll go through it
[18:31:02] <dave0> it's not worth memorizing
[18:31:08] <dave0> no one uses scanf :-p
[18:31:12] <angelacrust> lol
[18:31:27] <dave0> ,scanf
[18:31:27] <candide> scanf is a function that can be unsafe and unproductive - "It's nearly impossible to do decent error recovery with scanf; usually it's far easier to read entire lines (with fgets or the like), then interpret them, either using sscanf or some other techniques." - See http://www.eskimo.com/~scs/C-faq/q12.20.html
[18:31:36] <sham1> Well, no one should use scanf
[18:32:12] <angelacrust> what should I use then? fgets()?
[18:32:46] <angelacrust> oh nvm, it's mentioned up there
[18:34:05] <sham1> Yeah, fgets with sscanf is workable, although I'm not personally a fan, but scanf or fscanf in general is just asking for trouble
[18:34:21] <angelacrust> I see
[18:34:32] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-1-225.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[18:37:12] *** Quits: angelacrust (~angelacru@171.50.170.186) (Quit: Client closed)
[18:38:23] <NRK> ,memcpy
[18:38:24] <candide> No such factoid 'memcpy'; Found one factoid in #c containing 'memcpy': bcopy is way cool, but it's more portable to use memcpy
[18:39:47] <NRK> hmm. why is bcopy cool?
[18:41:41] *** Joins: rgrinberg (~textual@2806:101e:7:134:894c:b2ae:6240:e2e3)
[18:44:02] <zwr> no particular reason. it's the same thing as memmove() but it predates the standard and the order of the parameters is different
[18:47:42] *** Quits: unknow (~i.am@user/marlboro) (Quit: a pentium 100 "running" windows 11 trying to play Last of Us II at ps4emu... that's my brain trying understand 0->R->R->R/2R->0)
[18:55:05] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Quit: Lost terminal)
[18:55:40] *** Quits: rgrinberg (~textual@2806:101e:7:134:894c:b2ae:6240:e2e3) (Ping timeout: 250 seconds)
[19:00:01] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Remote host closed the connection)
[19:00:21] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[19:01:25] *** Joins: vysn (~vysn@user/vysn)
[19:14:23] *** Joins: nostar (~nostar@68.51.221.108)
[19:16:50] <constxd> sham1: ?
[19:19:58] *** Quits: noteness (~noteness@user/noteness) (Remote host closed the connection)
[19:20:48] *** Joins: noteness (~noteness@user/noteness)
[19:23:11] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 256 seconds)
[19:23:17] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[19:25:21] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[19:25:57] *** Joins: marvin\\ (~marvin\\@38.124.151.184)
[19:30:53] *** Joins: joomla9 (uid543104@id-543104.lymington.irccloud.com)
[19:31:00] *** Joins: rgrinberg (~textual@200.68.132.168)
[19:31:12] *** Parts: Franciman (~Franciman@mx1.fracta.dev) (WeeChat 3.4)
[19:32:38] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[19:35:23] <pragma-> lol bcopy
[19:35:36] <pragma-> bzero
[19:35:50] *** Joins: taste_the_rainbo (~taste_the@38.124.151.184)
[19:36:22] <taste_the_rainbo> guys
[19:36:22] *** Quits: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt) (Read error: Connection reset by peer)
[19:36:28] <taste_the_rainbo> is everyone here
[19:36:31] <marvin\\> hey sisters
[19:36:37] <taste_the_rainbo> is everyone here?
[19:36:40] <taste_the_rainbo> lol
[19:36:47] <marvin\\> i dont know
[19:36:50] <marvin\\> maybe
[19:36:52] <marvin\\> maybe not
[19:37:17] <taste_the_rainbo> IS EVERYONE HERE
[19:37:17] *** ChanServ sets mode: +o candide
[19:37:17] *** taste_the_rainbo was kicked by candide (Stop repeating yourself)
[19:37:27] *** candide sets mode: +q *!*@38.124.151.184
[19:37:28] *** Quits: alch (~alch@151.38.97.193) (Ping timeout: 268 seconds)
[19:38:01] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Remote host closed the connection)
[19:38:44] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[19:39:13] *** Quits: marvin\\ (~marvin\\@38.124.151.184) (Quit: Client closed)
[19:39:15] *** Joins: alch (~alch@pd-18-98-149.service.infuturo.it)
[19:40:19] *** Joins: Dotz0cat_ (~Dotz0cat@24.144.1.234)
[19:41:02] *** Joins: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt)
[19:41:10] *** Joins: Optimus (~risto@87.227.227.147)
[19:41:29] *** Joins: masoudd (~masoudd@user/masoudd)
[19:42:03] *** Joins: nuh^ (~nuh@50.232.121.75)
[19:43:30] *** Joins: test_ (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[19:44:16] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[19:44:53] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Read error: Connection reset by peer)
[19:45:00] *** Joins: kts (~kts@103.73.237.26)
[19:45:55] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Ping timeout: 240 seconds)
[19:47:12] *** Joins: gildasio (~gildasio@gateway/tor-sasl/gildasio)
[19:47:14] *** Joins: neverfindme (~hayden@158.123.160.43)
[19:48:07] *** Quits: panda88kazag (~RadimPavl@176-74-132-138.netdatacomm.cz) (Ping timeout: 256 seconds)
[19:48:49] *** Quits: Optimus (~risto@87.227.227.147) ()
[19:51:38] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 260 seconds)
[19:54:12] *** Quits: In0perable (~PLAYER_1@fancydata.science) (Quit: All your buffer are belong to us!)
[19:57:43] *** Joins: boB_K7IQ (~boB_K7IQ@152.44.147.180)
[19:57:45] *** Quits: mrus (~mrus@gateway/tor-sasl/mrus) (Remote host closed the connection)
[19:57:45] *** Quits: gxt_ (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[19:57:45] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[19:57:45] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[19:57:48] *** Quits: eddybilley (~freddieti@217.119.232.174) (Ping timeout: 240 seconds)
[19:58:07] *** Joins: mrus (~mrus@gateway/tor-sasl/mrus)
[19:58:12] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[19:58:12] *** Joins: gxt_ (~gxt@gateway/tor-sasl/gxt)
[19:59:24] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[19:59:32] *** Joins: teepee (~teepee@openscad/teepee)
[20:00:05] *** Joins: eddybilley (~freddieti@217.119.232.174)
[20:02:39] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[20:02:56] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[20:04:37] *** Quits: eddybilley (~freddieti@217.119.232.174) (Ping timeout: 240 seconds)
[20:05:56] *** Joins: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be)
[20:07:37] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[20:07:39] *** Quits: rgrinberg (~textual@200.68.132.168) (Read error: Connection reset by peer)
[20:13:16] *** Joins: vicfred (~vicfred@user/vicfred)
[20:13:45] <Dotz0cat_> What does c have advailable for graphics? Not stuff like gtk
[20:14:22] <pragma-> C itself? Nothing. Third party libraries? SDL is nice.
[20:15:11] <pragma-> Simple non-shader OpenGL is straightforward and widely available
[20:15:35] *** Quits: chasmo77 (~chas77@c-71-193-246-4.hsd1.or.comcast.net) (Quit: It's just that easy)
[20:18:51] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Quit: leaving)
[20:19:00] *** Quits: Telvana2 (~capo@user/telvana) (Ping timeout: 240 seconds)
[20:19:26] *** Joins: rgrinberg (~textual@2806:101e:7:1518:e4af:523d:a092:a251)
[20:19:53] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[20:20:04] <pragma-> you can use OpenGL is "2d mode". it's not just for 3d
[20:20:11] <pragma-> in
[20:20:39] *** Joins: Telvana (~capo@user/telvana)
[20:22:31] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[20:23:23] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[20:23:27] *** Joins: Inoperable (~PLAYER_1@fancydata.science)
[20:23:32] *** Quits: neverfindme (~hayden@158.123.160.43) (Ping timeout: 240 seconds)
[20:24:29] *** Joins: X-Scale` (~ARM@135.232.28.37.rev.vodafone.pt)
[20:24:43] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Client Quit)
[20:25:02] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[20:25:49] *** Joins: retr0 (~retr0@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net)
[20:26:25] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[20:26:43] *** Joins: mahmutov (~mahmutov@37.155.77.112)
[20:27:49] *** Quits: fe23 (~fe23@2409:8a34:466:6010:f85c:baac:7ac5:95ce) (Quit: fe23)
[20:27:54] *** Quits: X-Scale (~ARM@31.22.167.35) (Ping timeout: 272 seconds)
[20:27:55] *** X-Scale` is now known as X-Scale
[20:28:47] *** Quits: cosimone (~user@93-47-229-38.ip115.fastwebnet.it) (Remote host closed the connection)
[20:30:54] *** Joins: effexzi (uid474242@id-474242.ilkley.irccloud.com)
[20:33:21] *** Quits: unlink2 (~unlink@p200300ebcf17f000a0e82b17ad9d82cf.dip0.t-ipconnect.de) (Remote host closed the connection)
[20:33:37] *** Quits: rgrinberg (~textual@2806:101e:7:1518:e4af:523d:a092:a251) (Ping timeout: 240 seconds)
[20:37:45] *** Joins: Zectbumo (~Zectbumo@2600:8802:5100:3f90:18a3:2079:9a01:7f89)
[20:41:02] *** Quits: kubrickdave (~kubrickda@80-121-15-46.adsl.highway.telekom.at) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[20:41:43] *** Joins: eddybilley (~freddieti@2a02:a454:7f89:1:6d76:ef7f:2ba5:5333)
[20:41:49] *** Joins: kubrickdave (~kubrickda@80-121-15-46.adsl.highway.telekom.at)
[20:42:51] *** Joins: cosimone (~user@93-47-229-38.ip115.fastwebnet.it)
[20:43:10] *** Joins: Akiva (~Akiva@user/Akiva)
[20:43:24] *** Quits: retr0 (~retr0@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net) (Remote host closed the connection)
[20:43:58] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 256 seconds)
[20:47:54] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[20:48:02] *** Quits: eddybilley (~freddieti@2a02:a454:7f89:1:6d76:ef7f:2ba5:5333) (Ping timeout: 240 seconds)
[20:48:36] *** Quits: yano (~yano@ircpuzzles/staff/yano) (Quit: WeeChat, the better IRC client, https://weechat.org/)
[20:49:57] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[20:50:00] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[20:50:00] *** Quits: acerbic (~acerbic@cs-xdata-50-86-50-82.cspire.com) (Read error: Connection reset by peer)
[20:51:05] *** Joins: yano (~yano@ircpuzzles/staff/yano)
[20:51:13] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220226204633])
[20:52:52] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:28db:56f8:8249:6f4)
[20:53:46] *** Joins: vysn (~vysn@user/vysn)
[20:55:09] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[20:55:14] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:57:17] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[20:57:26] *** Joins: ckdCreations (~ckdCreati@147.55.130.33)
[20:59:55] *** Joins: eddybilley (~freddieti@2a02-a454-7f89-1-6d76-ef7f-2ba5-5333.fixed6.kpn.net)
[21:01:56] *** Joins: seninha (~chatzilla@user/seninha)
[21:02:47] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[21:02:56] *** Quits: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be) (Quit: Leaving)
[21:03:11] <nitrix> I have seen great things built on top of Nuklear/ImGUI (both uses OpenGL).
[21:03:45] <nitrix> There's also the other approach with embedding a webview, sticking to HTML+CSS+JS combo.
[21:04:46] <nitrix> I'm assuming you want UIs, since you brought up gtk.
[21:05:14] *** Quits: eddybilley (~freddieti@2a02-a454-7f89-1-6d76-ef7f-2ba5-5333.fixed6.kpn.net) (Ping timeout: 250 seconds)
[21:05:24] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 240 seconds)
[21:07:05] <twkm> though not very c-ish.
[21:07:15] <Dotz0cat_> I am going to look into sdl as was suggested
[21:07:24] *** Joins: kuber (~kuber@75-172-6-223.tukw.qwest.net)
[21:07:44] <Amun-Ra> SDL2 is a good choice
[21:08:58] *** Joins: attaboy (~archer@user/tessio)
[21:09:05] <attaboy> ,kr 1-19
[21:09:06] <candide> Chapter 1: A Tutorial Introduction; Exercise 1-19. Write a function reverse(s) that reverses the character string s. Use it to write a program that reverses its input a line at a time.
[21:09:15] <attaboy> is it possible to do this on arbitrary length lines  ?
[21:09:37] <nitrix> It's rather primitive. Windowing, sound, timers, networking, image textures and lots of drawing little shapes at specific offsets.
[21:09:44] *** Joins: retr0 (~retr0@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net)
[21:10:03] <nitrix> Porting SDL to mobile is easy though.
[21:10:27] <Amun-Ra> depends on what you mean by primitive
[21:11:21] <retr0> best way to search for 2 simular lines in a text file, the lines dont have to be consecutive
[21:12:05] <nitrix> You can render text, images and shapes. You still have to build everything else to do anything "graphical".
[21:12:36] <nitrix> And those are with extensions. SDL_ttf, SDL_image, SDL_gfx.
[21:13:34] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a)
[21:15:06] *** Joins: strajder (~strajder@user/strajder)
[21:16:17] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:28db:56f8:8249:6f4) (Quit: Quit)
[21:16:37] *** Joins: hanzo (uid532183@user/hanzo)
[21:17:19] <twkm> attaboy: with what has been presented by that point, no.  with a finite universe, no.  but you can handle as much storage as can obtained.
[21:17:38] <retr0> ...
[21:17:47] <attaboy> twkm: thanks
[21:18:12] <twkm> retr0: best is relative.  perhaps sort them.
[21:18:34] *** Joins: arand___ (~arand___@c-0a01235c.05-662-7570703.bbcust.telenor.se)
[21:19:56] <retr0> yes, i want to index the lines and sort the indexes
[21:20:12] <retr0> best as in fastest way
[21:20:20] <retr0> not sorting the indexes is slow
[21:20:42] *** Quits: rcf (rcf@sdf.org) (Quit: WeeChat 3.2.1)
[21:22:02] <retr0> I also need to count the matches because the replacement text differs depending on the number of matches
[21:22:42] <retr0> the code replaces matching simular lines with fewer lines in the text file
[21:23:04] <retr0> but where the fewer lines still do the same thing as the lines that got replaced
[21:24:44] *** Quits: retr0 (~retr0@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net) (Remote host closed the connection)
[21:25:01] *** Joins: retr0 (~retr0@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net)
[21:26:18] *** Joins: Waynes (~Waynes@user/waynes)
[21:29:09] *** Joins: acerbic (~acerbic@cs-xdata-50-86-55-220.cspire.com)
[21:29:14] <retr0> 1 0 0 0 0 1 0 0 0 1 0 0 0 1 3024.dat and 1 0 0 8 0 1 0 0 0 1 0 0 0 1 3024.dat for example would become 1 0 0 0 0 1 0 0 0 1 0 0 0 1 86996.dat how if there was 3 matches that are related like: 1 0 0 0 0 1 0 0 0 1 0 0 0 1 3024.dat and 1 0 0 8 0 1 0 0 0 1 0 0 0 1 3024.dat and 1 0 0 16 0 1 0 0 0 1 0 0 0 1 3024.dat then that is replaced with just 1 0 0 0 0 1 0 0 0 1 0 0 0 1 3005.dat
[21:30:00] *** Quits: ns12 (~ns12@user/ns12) (Quit: bye)
[21:30:00] <retr0> so the 3rd 4th 5th and last paramaters are what counts, 0 0 0 , 0 8 0 and 0 16 0
[21:30:36] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[21:30:42] <retr0> twkm
[21:30:51] *** Joins: ns12 (~ns12@user/ns12)
[21:31:28] <retr0> if there was 4 matches I could do either 3024 and 3005 or do 86996 and 86996
[21:31:34] *** Joins: tiotags (~tiotags@user/tiotags)
[21:31:37] <retr0> they are equivelant
[21:33:17] *** Quits: retr0 (~retr0@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net) (Remote host closed the connection)
[21:33:34] *** Joins: retr0 (~retr0@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net)
[21:36:34] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:37:27] *** candide sets mode: -o candide
[21:38:00] <twkm> hmm.
[21:38:16] *** Quits: kuber (~kuber@75-172-6-223.tukw.qwest.net) (Remote host closed the connection)
[21:38:51] *** Joins: meator (~meator@user/meator)
[21:38:55] *** Joins: icy_troubles (~icy_troub@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com)
[21:39:13] *** Inline__ is now known as Inline
[21:40:14] *** Quits: acerbic (~acerbic@cs-xdata-50-86-55-220.cspire.com) (Read error: Connection reset by peer)
[21:40:39] *** Quits: joomla9 (uid543104@id-543104.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[21:40:46] *** Quits: ncrowl (~ncrowl@31-208-119-15.cust.bredband2.com) (Ping timeout: 250 seconds)
[21:42:45] *** Joins: ncrowl (~ncrowl@83-233-96-141.cust.bredband2.com)
[21:43:26] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[21:45:12] *** Joins: plastico (~plastico@neomutt/plastico)
[21:46:19] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 256 seconds)
[21:46:35] *** Joins: kuber (~kuber@75-172-6-223.tukw.qwest.net)
[21:46:57] *** Quits: arand___ (~arand___@c-0a01235c.05-662-7570703.bbcust.telenor.se) (Quit: Client closed)
[21:47:10] *** Joins: arand___ (~arand___@c-0a01235c.05-662-7570703.bbcust.telenor.se)
[21:48:44] *** Joins: rcf (rcf@sdf.org)
[21:55:01] *** Joins: singularity00 (~singulari@236.lan-hi1-2.static.rozabg.com)
[21:55:19] *** Joins: rgrinberg (~textual@2806:101e:7:1518:d4fd:b202:fa93:55e1)
[21:56:25] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a)
[21:57:13] *** Quits: alex11 (~alex11@user/alex11) (Read error: Connection reset by peer)
[21:58:10] <masoudd> I read all that and still have no idea what you mean
[21:58:50] <masoudd> you went from "text file" to 3904092384.dat real quit
[21:58:52] <masoudd> quick*
[22:00:09] *** Quits: singularity00 (~singulari@236.lan-hi1-2.static.rozabg.com) (Ping timeout: 256 seconds)
[22:02:57] *** Quits: retr0 (~retr0@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net) (Remote host closed the connection)
[22:03:22] *** Quits: Sadale (~Sadale@user/sadale) (Quit: tawa pona!)
[22:03:25] *** Joins: singularity00 (~singulari@236.lan-hi1-2.static.rozabg.com)
[22:04:02] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[22:04:37] *** Joins: pretty_d1 (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[22:04:38] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 260 seconds)
[22:04:57] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 240 seconds)
[22:05:23] *** Joins: Sadale (~Sadale@user/sadale)
[22:05:34] *** Joins: alex11 (~alex11@user/alex11)
[22:06:56] *** Quits: MajorBiscuit (~MajorBisc@c-001-015-055.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[22:07:08] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[22:07:59] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:08:02] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[22:08:17] *** Quits: placeb0 (uid283215@id-283215.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[22:08:51] *** Joins: mceldeen (~mceldeen@h66-222-117-47.mdsnwi.tisp.static.tds.net)
[22:10:16] *** Quits: kuber (~kuber@75-172-6-223.tukw.qwest.net) (Quit: leaving)
[22:12:06] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[22:12:22] *** Quits: the_lanetly_052_ (~the_lanet@185.30.88.67) (Ping timeout: 256 seconds)
[22:12:42] *** Joins: Thedarkb (~Thedarkb@82.3.80.190)
[22:13:02] *** Quits: Thedarkb2 (~Thedarkb@82.3.80.190) (Ping timeout: 272 seconds)
[22:13:17] *** Quits: mceldeen (~mceldeen@h66-222-117-47.mdsnwi.tisp.static.tds.net) (Ping timeout: 240 seconds)
[22:13:39] *** Quits: rgrinberg (~textual@2806:101e:7:1518:d4fd:b202:fa93:55e1) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:15:02] *** Quits: kts (~kts@103.73.237.26) (Ping timeout: 240 seconds)
[22:15:09] *** Joins: Sadale (~Sadale@user/sadale)
[22:21:16] *** Quits: Dotz0cat_ (~Dotz0cat@24.144.1.234) (Ping timeout: 272 seconds)
[22:21:38] *** Quits: somlis (~somlis@user/somlis) (Quit: WeeChat 3.4)
[22:22:50] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:23:57] *** Quits: iomari891 (~iomari891@102.91.5.229) (Ping timeout: 256 seconds)
[22:24:50] *** Joins: somlis (~somlis@user/somlis)
[22:26:04] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[22:26:26] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[22:30:28] *** Quits: singularity00 (~singulari@236.lan-hi1-2.static.rozabg.com) (Quit: The true sign of intelligence is not knowledge but imagination.)
[22:31:22] *** Quits: wlemuel (~wlemuel@210.22.124.110) (Read error: Connection reset by peer)
[22:35:03] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[22:35:37] *** Quits: pretty_d1 (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 240 seconds)
[22:36:03] *** Joins: wlemuel (~wlemuel@210.22.124.110)
[22:37:38] *** Quits: Zectbumo (~Zectbumo@2600:8802:5100:3f90:18a3:2079:9a01:7f89) (Remote host closed the connection)
[22:41:01] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a)
[22:45:07] *** Quits: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:46:27] *** Joins: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com)
[22:47:04] *** Quits: kurahaupo (~kurahaupo@pa49-197-102-98.pa.qld.optusnet.com.au) (Ping timeout: 250 seconds)
[22:47:33] <constxd> kings
[22:48:26] <NRK> did u fix ur shit?
[22:49:52] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:50:32] *** Quits: mahmutov (~mahmutov@37.155.77.112) (Ping timeout: 250 seconds)
[22:51:29] <constxd> NRK: yes
[22:51:49] <constxd> GC works when many threads are running
[22:51:57] <constxd> only problem is
[22:52:12] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:52:27] <constxd> GC can't start until all threads agree to start and one thread may take a while until it's ready to GC which blocks all other threads
[22:52:49] <constxd> im thinking maybe should have used signals instead
[22:52:56] <constxd> forcibly interrupt other threads
[22:53:13] <NRK> .oO( sounds like a plan! )
[22:53:20] <constxd> but then gotta be really careful since GC can happen at any time
[22:53:36] <constxd> so idk kinda cringe
[22:53:56] <meator> Hi. What's the most effitient way to swap two files on a POSIX system? I have noticed that renameat2() has a RENAME_EXCHANGE flag, but renameat2() requires _GNU_SOURCE.
[22:54:10] <NRK> just remov GC, make it manual memory management
[22:54:12] <NRK> based
[22:57:50] <constxd> no that is cringe
[22:58:23] <NRK> GC is bluepilled
[22:58:51] *** Joins: mahmutov (~mahmutov@5.176.43.188)
[22:59:22] <constxd> no
[22:59:32] <constxd> stop-the-world GC is kinda bluepilled
[22:59:44] <constxd> but a good, sophisticated GC is incredibly redpilled
[23:01:26] <rcf> meator: there's no good way to do it.
[23:01:46] *** Quits: tobiasu (~tobiasu@user/tobiasu) (Quit: upgrade)
[23:01:57] <rcf> meator: if you can avoid it, never rely on POSIX for the filesystem, it's a race condition nightmare without specific syscalls to do such things.
[23:03:19] *** Joins: tobiasu (~tobiasu@user/tobiasu)
[23:03:31] <apotheon> meator: define "efficient" for these purposes
[23:03:35] <fizzie> If the concern is "efficiency" (rather than it being actually atomic to avoid race conditions), just shuffling through multiple renames shouldn't be a problem. But yeah, if you need them to get atomically swapped, I doubt there's a good way; wouldn't have needed a new syscall otherwise.
[23:04:56] <apotheon> Are we worried about minimal peak storage space, minimal RAM, shortest time, least read/write activity, least write activity . . . ?
[23:05:03] <apotheon> There's CPU, too.
[23:05:12] <apotheon> least developer time spent
[23:05:21] *** Joins: kurahaupo (~kurahaupo@pa49-197-102-98.pa.qld.optusnet.com.au)
[23:05:47] <apotheon> Maybe I missed something that suggests a particular definition of "efficient" for these purposes.
[23:06:48] <rcf> The mention of renameat2() makes me think 'efficient' here means 'not actually copying anything from the files themselves'
[23:07:13] <rcf> The question is whether they care about minimizing syscalls or really want atomicity.
[23:07:37] <apotheon> ah, okay
[23:07:54] <apotheon> just name shuffling is the first thing that comes to mind, then
[23:08:00] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[23:08:43] <apotheon> but yeah, not atomic
[23:08:44] <meator> My initial plan was to open(file, O_PATH | O_RDONLY) the files, unlink() both files and linkat() them to the right place, but linkat() AT_EMPTY_PATH also requires _GNU_SOURCE AFAIK.
[23:09:34] <meator> But name shuffling seems better.
[23:11:24] <meator> By "efficient" I meant that I didn't want the "third" file, but it doesn't matter that much.
[23:11:55] <rcf> It does if you care about strict safety, but if you don't it's the most straightforward.
[23:12:48] <apotheon> I think AT_EMPTY_PATH (also?) requires the Linux kernel, so this wouldn't be POSIXy in general.
[23:13:15] *** Quits: arand___ (~arand___@c-0a01235c.05-662-7570703.bbcust.telenor.se) (Ping timeout: 256 seconds)
[23:13:43] <apotheon> The linkat() option with AT_EMPTY_PATH looks dangerous to me.
[23:13:46] <fizzie> Also: "The caller must have the CAP_DAC_READ_SEARCH capability in order to use this flag." Which is uncommon.
[23:13:55] <fizzie> (And: "This will generally not work if the file has a link count of zero --")
[23:13:57] <apotheon> I don't know enough about the implementation details to be sure, though.
[23:14:09] <meator> Comming up for the name of the third file can be error prone.
[23:14:20] <apotheon> fizzie: oh, interesting
[23:14:22] <apotheon> and scary
[23:14:35] *** Joins: Asszi (~quassel@2a02:ab88:2a00:6d00::ae7)
[23:14:49] <apotheon> This whole idea kinda reads like "use after free()".
[23:18:37] *** Quits: kektagen (~kektagen@kektagen.org) (Quit: Heading off - Have a good day)
[23:18:42] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[23:19:41] <meator> Usage of linkat() is my misunderstanding. I have thought that renaming is the same thing as unlink()ing the file and making a hard link to the data with a different name.
[23:21:33] *** Joins: Dean (~Dean@user/De4n-Whit3/x-9385125)
[23:21:40] <rcf> Only in a few situations. symlinks and mountpoints ruin everything, as anyone who keeps up with CVEs will discover.
[23:23:16] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[23:23:16] *** Joins: King_julian (~King_juli@41.1.92.54)
[23:23:20] <Dean> hello
[23:23:34] <Dean> can someone please explain to me what is being said here? https://paste.debian.net/1233616/ i am entirely lost.
[23:23:55] <Dean> sign i understand. but the rest.
[23:24:38] <Dean> what is 'a bias'?
[23:25:43] <fizzie> A thing you subtract from the exponent.
[23:26:09] <fizzie> "A stored value of 200 indicates an exponent of 200 – 127, or 73."
[23:26:13] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:26:36] *** Quits: Alhazred (~Alhazred@86.106.74.41) (Ping timeout: 256 seconds)
[23:26:53] *** Quits: l4s8g_ (~l4s8g@pd9e62e01.dip0.t-ipconnect.de) (Quit: l4s8g_)
[23:27:02] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[23:27:20] <Dean> fizzie: so a bias is just a number added to a datatype? well, subtracted from the exponent? so for the float its 127 and for double its 1023?
[23:27:31] *** Lord_of_Life_ is now known as Lord_of_Life
[23:27:44] <fizzie> Yes. A reason why it's useful to use an unsigned integer + a bias value (instead of using a signed integer for the exponent) is that it makes the all-bits-0 value the most negative exponent, which also makes it the natural choice to represent the floating-point value 0 (and subnormals).
[23:28:34] *** Quits: icy_troubles (~icy_troub@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com) (Quit: Quit)
[23:28:41] *** Joins: icy_troubles (~icy_troub@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com)
[23:28:47] <Dean> thank you fizzie. do you have a recommendation where i can lear more about bias?
[23:29:00] <Dean> i guess i could just look for a youtube video!
[23:29:12] <constxd> zoomers man
[23:29:15] <fizzie> https://en.wikipedia.org/wiki/Exponent_bias has an article for it specifically, at least. I don't know if it's any good, but it's there.
[23:29:36] <constxd> gotta be better than a youtube video
[23:29:37] <Dean> what is a zoomers?
[23:29:47] <constxd> you are a zoomer
[23:31:11] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:f892:3809:ac7b:1ca4)
[23:31:39] *** Joins: kektagen (~kektagen@kektagen.org)
[23:31:51] <Dean> Thank you fizzie !
[23:31:59] <Dean> constxd: i wish my old ass was a zoomer.
[23:32:48] <Dean> lol if i could go back id have started coding much earlier.
[23:33:40] <constxd> youtube videos are generally an inefficient way to learn at best. often they are a harmful way to learn
[23:33:54] *** Quits: munkis (~mendel_mu@ool-ae2cb229.dyn.optonline.net) (Remote host closed the connection)
[23:34:02] <apotheon> On the other hand, Bass Buzz is great.
[23:34:18] *** Joins: munkis (~mendel_mu@ool-ae2cb229.dyn.optonline.net)
[23:34:44] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[23:35:16] <constxd> you might even say that bass buzz is... based
[23:35:21] <constxd> ,rimshot
[23:35:21] <candide> ba-dum, tsss
[23:35:53] *** Quits: alch (~alch@pd-18-98-149.service.infuturo.it) (Read error: Connection reset by peer)
[23:36:26] *** Quits: armin (~armin@unix.porn) (Remote host closed the connection)
[23:37:15] *** Joins: steve__ (~steve@ool-182c2b80.dyn.optonline.net)
[23:39:33] *** Joins: alch (~alch@pd-18-119-96.service.infuturo.it)
[23:41:17] <Dean> constxd: my humor level is 0. i am embarassed. but i am sure to the educated your joke is good.
[23:41:51] <Dean> poorly socialized as a kid and now i'm just freeekey
[23:42:07] <constxd> hell yeah
[23:42:22] <constxd> i was poorly socialzed as well, still recovering slowly
[23:42:33] <NRK> i agree, yt vids are harmful way of learning
[23:42:51] <constxd> it's a safe bet that most people who spend time in C programming IRC channels were probably poorly socialized
[23:43:03] <Dean> constxd: respect. haha. ok now that is a funny one. XD
[23:43:14] <Dean> NRK: ok.
[23:43:34] <Dean> i really respect the wizards of this channel. it's been tremendous help in learning the language. i am very basic with it.
[23:44:39] <caze> Dean: Did you do 1-17 yet?
[23:44:52] *** Quits: adip_ (~adip@dhy11.neoplus.adsl.tpnet.pl) (Ping timeout: 272 seconds)
[23:44:52] *** Quits: adip (~adip@dhy11.neoplus.adsl.tpnet.pl) (Ping timeout: 272 seconds)
[23:44:57] <Dean> caze: yes! i posted it some days (maybe weeks ago?) i have a very bad memory. let me get it.
[23:45:15] <Dean> i don't know if it is correct.
[23:46:06] *** Joins: adip (~adip@dil199.neoplus.adsl.tpnet.pl)
[23:46:13] *** Joins: adip_ (~adip@dil199.neoplus.adsl.tpnet.pl)
[23:46:32] <Dean> codespaces taking some time to load. my internet is so bad.
[23:48:46] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:49:29] <Dean> caze: https://paste.debian.net/1233622/
[23:49:37] *** Joins: l4s8g (~l4s8g@pd9e62e01.dip0.t-ipconnect.de)
[23:50:18] <caze> Dean: It looks like you started with the code that I gave you: https://ideone.com/81STNK Notice how this code can echo back arbitrarily long lines.
[23:50:49] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:51:01] <caze> Dean: Do you have a reason why it was necessary to remove this functionality to extend the program for 1-17?
[23:51:26] <caze> (Your program can only deal with lines that are less than 200 characters long.
[23:51:28] <caze> )
[23:52:46] <Dean> caze: i assumed at some point there would be overflow?
[23:53:27] <caze> Dean: Look closely at the program I gave you. Where would it overflow? https://ideone.com/81STNK
[23:53:44] <caze> *what* is there to overflow?
[23:54:06] <constxd> caze u wdt pilled?
[23:57:12] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:57:50] <caze> Dean: Abstractly, I gave you a program that outputs *more* than the exercise calls for. Your job is to modify the program so that it filters out some of the output (lines being shorter than 80 characters). Can you do this filtering in such a way that you don't limit *all* lines to 200 characters?
[23:58:48] <caze> Dean: From a general computing standpoint, this should be possible, do you agree?
