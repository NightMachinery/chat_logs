[00:00:53] *** Joins: thundergnat (~steve@2601:80:8600:2543:2129:3fcf:f399:9779)
[00:01:10] <thundergnat> m: my %hash = abc => 1, bcd => 2, cde => 1, def => 3, efg => 1, hij => 2, klm => 1, nop => 2; say (% .push: %hash.invert)<1>;
[00:01:10] <camelia> rakudo-moar e98e17da7: OUTPUT: «[abc efg cde klm]␤»
[01:00:53] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[01:00:53] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[01:02:16] *** Quits: melika (~melika@91.99.254.114) (Quit: Connection closed)
[01:03:49] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[01:19:42] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[01:22:35] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[01:31:53] *** Quits: sftp (~sftp@79.174.36.182) (Ping timeout: 256 seconds)
[01:42:08] *** Joins: sftp (~sftp@79.174.36.182)
[01:46:09] *** Quits: sftp (~sftp@79.174.36.182) (Read error: Connection reset by peer)
[01:46:11] *** Joins: sftp_ (~sftp@79.174.36.182)
[01:46:37] *** sftp_ is now known as sftp
[02:03:03] *** Joins: Sgeo_ (~Sgeo@user/sgeo)
[02:03:26] *** Quits: Sgeo (~Sgeo@user/sgeo) (Ping timeout: 245 seconds)
[02:08:09] *** Quits: sftp (~sftp@79.174.36.182) (Ping timeout: 256 seconds)
[02:14:47] <japhb> Found the URI problem: https://github.com/raku-community-modules/URI/issues/48#issuecomment-962519559
[02:28:58] *** Joins: sftp (~sftp@79.174.36.182)
[02:48:57] *** Quits: sftp (~sftp@79.174.36.182) (Ping timeout: 256 seconds)
[02:53:20] <lucs> y
[02:53:24] <lucs> ww
[02:57:27] *** Quits: Kaiepi (~Kaiepi@156.34.44.192) (Ping timeout: 256 seconds)
[02:59:58] *** Quits: holyghost_ (~shameen@2a02:a03f:64c8:9200:b12a:344d:ddeb:5543) (Ping timeout: 260 seconds)
[03:01:49] <discord-raku-bot> <Nemokosch#9980> c ww?
[03:02:27] *** Joins: Kaiepi (~Kaiepi@156.34.44.192)
[03:02:29] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[03:21:43] *** Joins: sftp (~sftp@79.174.36.182)
[03:25:55] *** Joins: jess (~jess@libera/staff/jess)
[03:26:34] *** Quits: sftp (~sftp@79.174.36.182) (Ping timeout: 260 seconds)
[03:31:50] *** Joins: sftp (~sftp@79.174.36.182)
[03:33:20] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[03:33:36] *** Quits: sftp (~sftp@79.174.36.182) (Read error: Connection reset by peer)
[03:34:52] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[03:40:17] *** Joins: gordonfish- (~gordonfis@user/gordonfish)
[03:42:33] *** Quits: gordonfish (~gordonfis@user/gordonfish) (Ping timeout: 268 seconds)
[04:40:35] *** Quits: Skarsnik (~Skarsnik@91-170-31-218.subs.proxad.net) (Ping timeout: 256 seconds)
[05:18:42] *** Joins: sftp (~sftp@79.174.36.182)
[06:03:30] *** seednode4 is now known as seednode
[07:03:31] *** Quits: bloatable6 (blo-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:03:31] *** Quits: bisectable6 (bis-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:03:31] *** Quits: committable6 (com-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:03:31] *** Quits: nativecallable6 (nat-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:03:31] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:03:31] *** Quits: notable6 (not-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:03:31] *** Quits: tellable6 (tel-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:03:31] *** Quits: quotable6 (quo-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:03:31] *** Quits: coverable6 (cov-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:03:31] *** Quits: releasable6 (rel-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[07:03:31] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[07:03:31] *** Quits: greppable6 (gre-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:03:31] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[07:03:31] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[07:03:31] *** Quits: benchable6 (ben-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[07:03:31] *** Quits: shareable6 (sha-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[07:03:31] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[07:03:31] *** Quits: sourceable6 (sou-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[07:03:31] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[07:03:56] *** Joins: quotable6 (quo-able@2001:41d0:2:5eb5::)
[07:04:01] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[07:04:54] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[07:05:21] *** Joins: statisfiable6 (sta-able@2001:41d0:2:5eb5::)
[07:05:38] *** Joins: sourceable6 (sou-able@2001:41d0:2:5eb5::)
[07:05:44] *** Joins: bisectable6 (bis-able@2001:41d0:2:5eb5::)
[07:05:45] *** Joins: shareable6 (sha-able@2001:41d0:2:5eb5::)
[07:05:50] *** Joins: releasable6 (rel-able@2001:41d0:2:5eb5::)
[07:06:20] *** Joins: bloatable6 (blo-able@2001:41d0:2:5eb5::)
[07:06:42] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[07:40:31] *** Joins: frost (~frost@user/frost)
[08:04:27] *** Joins: notable6 (not-able@2001:41d0:2:5eb5::)
[08:06:04] *** Joins: committable6 (com-able@2001:41d0:2:5eb5::)
[08:06:20] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[09:04:02] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[09:05:47] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[09:32:37] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:34:36] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[09:47:31] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[09:48:20] *** Joins: seednode (~seednode@user/seednode)
[10:03:51] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[10:04:05] *** Joins: tellable6 (tel-able@2001:41d0:2:5eb5::)
[10:05:43] *** Joins: unicodable6 (uni-able@2001:41d0:2:5eb5::)
[10:24:25] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[10:47:24] *** Joins: Sgeo (~Sgeo@user/sgeo)
[10:47:47] *** Quits: Sgeo_ (~Sgeo@user/sgeo) (Ping timeout: 264 seconds)
[11:33:53] *** Joins: Sgeo_ (~Sgeo@user/sgeo)
[11:36:45] *** Quits: Sgeo (~Sgeo@user/sgeo) (Ping timeout: 268 seconds)
[12:04:34] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[12:45:35] *** Quits: Sgeo_ (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[13:00:38] *** Joins: MoC (~moc@user/moc)
[14:00:46] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[14:00:46] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[14:01:30] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[14:02:01] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[15:02:01] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[15:02:02] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[15:02:56] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[15:04:52] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[15:33:40] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[15:33:50] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[15:36:53] *** Quits: MoC (~moc@user/moc) (Quit: Konversation terminated!)
[16:02:12] *** Joins: Skarsnik (~Skarsnik@91-170-31-218.subs.proxad.net)
[16:43:33] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[17:43:33] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[18:22:32] *** Quits: euandreh (~euandreh@2804:14c:65c9:5161:4d0f:6b02:d329:b5d2) (Ping timeout: 268 seconds)
[18:25:47] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[19:00:44] *** Joins: Xliff (~Cliff@pool-71-255-227-73.washdc.east.verizon.net)
[19:01:13] <Xliff> \o
[19:01:24] <Xliff> Good morning#raku
[19:02:46] <Xliff> Happy to report that total compile time of my projects is the lowest it has been since Jan at ~12,800 seconds
[19:03:51] <Xliff> https://github.com/Xliff/p6-GLib/blob/master/doc/Perl6%20Projects%20Line%20Counts.xlsx
[19:28:06] <MasterDuke> nice
[19:36:54] <Skarsnik> maybe I should run my gumbo benchmark x)
[19:44:32] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[19:46:47] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[20:21:32] *** Quits: xinming__ (~xinming@115.219.39.150) (Ping timeout: 268 seconds)
[20:23:07] *** Joins: xinming__ (~xinming@115.219.38.153)
[20:31:05] *** Joins: patrickb (~quassel@55d46633.access.ecotel.net)
[20:53:19] <Xliff> Here's a question... why doesn't Duration have methods for .years, .months, .weeks, .days, .hours, and .minutes?
[20:53:30] <Xliff> Would a PR be welcome?
[20:57:41] <Skarsnik> hm
[20:57:51] <Skarsnik> wxhat method do you have on Duration?
[21:04:17] <Xliff> I don't think there are any methods specific to Duration
[21:04:42] <patrickb> japhb: I'm looking at your Termial::LineEditor. There is a lot to learn. :-)
[21:06:06] <patrickb> japhb: In https://github.com/japhb/Terminal-LineEditor/blob/main/lib/Terminal/LineEditor/RawTerminalInput.rakumod#L620 why do you use a react block instead of two awaits? IMHO the awaits would have been the more obvious solution.
[21:07:07] <lizmat> Xliff: makes sense
[21:07:50] <lizmat> question becomes: should Duration.hours be a Real or an Int ?
[21:08:26] <lizmat> also: .years and .months are ambiguous, so I would not add those
[21:08:46] <lizmat> as Durations do not have an "anchor" :-)
[21:12:09] *** Joins: monkey_ (~user@190.104.116.153)
[21:20:28] <perryprog> I suspect the reason it doesn't have those methods is because no one wants to write date and time code ;)
[21:22:35] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[21:24:14] <lizmat> well, a nice addition would be to have a "ago" method on Duration, which would do something for "just now" if < 10 seconds, "N seconds ago" if < 50 seconds, "about a minute ago" if < 90, etc etc
[21:30:50] <El_Che> just saying something without reading the backlog :) : if booleans there is a Before and After method in Go that kind of cover most of the use cases I can think of
[21:32:51] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[21:33:25] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[21:33:34] <lizmat> El_Che: elaborate ?
[21:35:04] <El_Che> you take care of the exact duration before the if
[21:35:12] <El_Che> if entries[i].ValidUntil.Before(now) { ... } 
[21:35:26] <El_Che> if entries[i].ValidUntil.Before(now.AddDate(0,0,-7) { ... } 
[21:35:30] <El_Che> a week ago
[21:35:31] <El_Che> etc
[21:37:11] <lizmat> we have .earlier and .later on dates and datetimes
[21:37:19] <lizmat> if that's what you mean?
[21:37:46] <ugexe> if the number of seconds every year isnt the same then can a Duration actually have such methods?
[21:38:39] <lizmat> that's what I said... :-)
[21:40:59] <El_Che> :)
[21:45:08] <patrickb> japhb: Are you aware that Terminal::termios has parts written in C and thus requires a C compiler to be installed? Terminal::LineEditor depends on it. That's a bit of a bummer for the "written in pure Raku" aspect of Terminal::LineEditor.
[21:45:34] *** Joins: Sgeo (~Sgeo@user/sgeo)
[21:56:15] <japhb> patrickb: re: react instead of two awaits -- by-product of multiple refactorings.  Can probably be changed to awaits now, yeah.
[21:56:56] <patrickb> japhb: Good morning! :-)
[21:58:04] <japhb> patrickb: termios written in C: Grrr.  Yet another yak to shave.  :-(  I mean, it's still useful that Terminal::LineEditor itself is written in Raku, because it's easier to contribute to than e.g. Readline.  But yeah, yet another thing to do.
[21:58:27] <japhb> I have shaved a damn *herd* of yaks at this point, and there's no end in sight!
[21:58:33] <japhb> patrickb: Good morning!  :-)
[21:59:28] <japhb> (On the plus side, I refreshed my state machine skills writing Terminal::ANSIParser, so I guess not all the yak shaves are useless.)
[22:02:55] <patrickb> They are not useless at all! I really appreciate having a fine set of terminal plumbing available in Raku directly.
[22:05:17] <Xliff> lizmat: I don't think Duration needs an anchor, as that should come from context, which is application specific. 
[22:05:30] <Xliff> Duration implies things like days, weeks, months and years.
[22:05:39] <Xliff> I do like the concept of .ago, however.
[22:05:50] <Xliff> I'll include that in my PR.
[22:07:48] <japhb> Oh, I can see right off one of the reasons that termios has parts written in C -- according to my trusty copy of APUE, the struct varies.  And not trivially, either.
[22:08:51] <japhb> Xliff: Once you subtract two Instants, you are left with a quantity that is only a size on the Instant scale ... the original instants are lost, and you no longer have a concept of anchor points; you have magnitude only.
[22:16:03] <Xliff> japhb: DateTime - DateTime = Duration. In this situation, there is an anchor.
[22:16:21] <Xliff> If the concern is Instants - Instants, then that should not return a Duration.
[22:16:30] <Xliff> It should return an Int.
[22:18:15] <Xliff> I also disagree that two instance is not anchored.
[22:18:42] <Xliff> If a DateTime can be created from an Instant, then Instants DO have an anchor when used with context.
[22:18:58] <Xliff> Instant - Instant = Duration. (Anchor is the first Instant)
[22:19:39] <Xliff> But the above is only true within the application context from which that Instance is derived.
[22:37:58] <Juerd> If anyone's looking for a project, https://pypi.org/project/bpython/ has me drooling and I'd love to see a braku :)
[22:44:03] *** Joins: pussies_slayer_9 (~pussies_s@u16b-node.alcatraz.fr)
[22:45:10] *** Joins: zacts (~zacts@user/zacts)
[22:46:18] *** Quits: zacts (~zacts@user/zacts) (Quit: leaving)
[22:47:49] <Xliff> Juerd: That's neat! Quite an ask though. At least for me.
[22:47:50] <japhb> Xliff: I'm saying, you created the Duration from two instants there.  But the Duration does not remember those instants.  It is now just a quantity, which can then be applied to other things.
[22:48:21] <Xliff> japhb: And I'm saying that the nature of that quantity impliee the methods that I wish to add!
[22:48:42] <Xliff> s/impliee/implies/
[22:49:07] <japhb> OK, let's say you subtract Oct 1, midnight from Nov 1, midnight, and you add it to Feb 1.  What should happen?
[22:49:08] <Xliff> sourceable: sub MAIN { }
[22:49:11] <sourceable6> Xliff, No idea, boss. Can you give me a Code object?
[22:49:51] <Xliff> japhb: The hours and minute different from the first should be added to Feb 1st
[22:50:08] <Xliff> (see what I did that?) :)
[22:50:16] <Xliff> s/that/thar/
[22:50:42] <japhb> Juerd: Well, I'm slowly working my way to the point that that *could* be done with Terminal::LineEditor.  But it will take someone spending a while thinking about compiler state to complete that.
[22:51:38] <japhb> Xliff: OK, you've made a choice.  Why do you think it's the correct one, that can be applied in all instances as a rule, rather than a lot of special cases?
[22:51:41] *** Parts: pussies_slayer_9 (~pussies_s@u16b-node.alcatraz.fr) ()
[22:52:23] <Xliff> japhb: Yes, I've made a choice. From the options provided. Once that CAN BE VALID given specific situations. 
[22:52:46] <Xliff> You are trying to tell me this choice in invalid and that the tools that choice provides are not useful.
[22:53:21] <japhb> Xliff: Yes, you've now hit the nail on the head ("given specific situations").  I think what you *want* is a different class than Duration, but related to it.
[22:53:22] <Xliff> If you really are telling me that "class Duration" doesn't need operations typically done on a duration.
[22:53:28] <Xliff> Why call it a Duration?
[22:53:42] <Xliff> Duration IMPLIES units of time.
[22:53:52] <Xliff> Don't take the word and change its meaning!
[22:54:12] <japhb> Because it is a duration in the sense of physical passage of time, but passage of time in TAI is not the same as passage of time on the Gregorian Calendar.
[22:54:26] <Xliff> A duration, in most ALL of its usages, imply "the interegnum between two moments in time"
[22:54:39] <japhb> And no, I'm very much not saying what you're talking about it is unreasonable.  Just different.
[22:54:44] <Xliff> How is passage of time any different in any context?
[22:54:58] <japhb> Oh man, there's a lot of physics in the answer to that.
[22:55:05] <japhb> But ... hold on a sec.
[22:55:16] <Xliff> And if you are not saying it's not unreasonable, then why tell me not to write the PR?
[22:55:46] <japhb> Because you're not looking for CORE Duration, you're looking for "GregorianDuration" or some such
[22:56:08] <japhb> CORE is TAI.
[22:56:33] <Xliff> japhb: And this is how Raku loses! Because you want to take a generic concept, and turn it into something specific that doesn't mean what the commen sense interpretation is!
[22:56:46] <Xliff> japhb: Where in the online docs does it say CORE is TAI. Please point to the page.
[22:57:35] <Xliff> And if you can't reference it then please find a place where said reference should be and I will update the docs.
[22:58:31] <Xliff> And then tell me how .minutes, .hours, .days, .weeks, .months, and .years are not TAI when Instants and Durations are mesured in seconds.
[23:00:27] <japhb> Um, look at src/core/Duration.pm6?
[23:01:05] <japhb> Because a minutes is not always 60 seconds, a day is not always 24 hours, and a month is not always 30 days.
[23:01:17] <japhb> (And a year is not always 365 days, forgot that one)
[23:02:07] <Xliff> Now this is true.
[23:02:46] <Xliff> At least among purists.
[23:03:01] <Xliff> However pratical coders don't give a shit.
[23:03:20] <ugexe> they dont until it matters
[23:03:21] <Xliff> And we need more practical coders in Raku if it's going to grow.
[23:03:50] <Xliff> ugexe: Think it will matter when they reach for Duration.days and find it missing?
[23:04:24] <ugexe> I have never once needed to reach for such a thing, and I feel like I've done a lot of DateTime related business logic in my life
[23:04:37] <Xliff> Funny. I neded it today.
[23:05:05] <Xliff> And it wasn't for anything overly complex. I had to also reach for "augment", which I usually NEVER have to do.
[23:05:09] <Xliff> To each their own.
[23:05:33] <ugexe> maybe i misunderstand, but how would you do this with e.g. perl?
[23:05:34] <japhb> Also ... Raku is the home of NFG, and characters === grapheme clusters.  We try at least to do the actual right thing.
[23:05:44] <Xliff> The use of "augment" is made a bit ugly by its requirement on MONKEY-TYPING and all that opens up.
[23:06:28] <Xliff> ugexed: How does how it is used with perl matetr?
[23:06:37] <Xliff> s/matetr/matter/ ?
[23:06:51] <Xliff> I hate how my typing is deteriorating... :/
[23:06:54] <ugexe> prior art is usually so for a reason
[23:07:25] <ugexe> in other words: why would another language choose to not have such a thing?
[23:07:39] <Xliff> Because the authors were not that forward thinking.
[23:07:52] <ugexe> are you sure they would not say the same of you?
[23:07:54] <Xliff> There are a lot of other reasons, but that's the big one.
[23:08:20] <Xliff> ugexe: I don't think they would. If they aren't going to use it. They won't care that it is there.
[23:08:33] <japhb> Let's not get into talking about people's intelligence or ability to think in general.  That way lies incivility.
[23:09:15] <Xliff> OK, so if the inclination is to not have this in core, then I guess I can module-space it.
[23:09:23] *** Quits: patrickb (~quassel@55d46633.access.ecotel.net) (Quit: Quit.)
[23:09:30] <Xliff> I just think that's a cop out. These methods should be usable out of the box.
[23:09:40] <japhb> Xliff: I'm not saying what you're asking for is useless, it's really not.  I'm saying, it's not *Duration* as defined in Raku.  It's a different thing.  Just like a "Fiscal Year" and a "Calendar Year" are related but not the same.
[23:10:21] <japhb> Let me try a different angle, Xliff.  Make a module that is the API you *want*, and then we can discuss.
[23:11:03] <Xliff> japhb: I do think I just offered that.
[23:11:17] <japhb> Because I can guarantee that the human perception of dates and the physical notion of time only resemble each other in a "fun house mirror" sort of way.
[23:11:28] <japhb> Xliff: Sorry, our messages passed in the ether
[23:11:46] <Xliff> Ho!
[23:11:48] <Xliff> "TAI times are identified by year, month, day, hour, minute, and second."
[23:11:57] <Xliff> https://cr.yp.to/proto/utctai.html
[23:12:06] <Xliff> Second paragraph
[23:12:26] <Xliff> This is EXACTLY as I would lay out each method.
[23:13:17] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[23:14:58] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[23:15:56] <japhb> Great.  Do so.  I think you've misunderstood what DJB means by "identified by" though ....
[23:16:14] <Xliff> How so?
[23:17:18] <japhb> Because TAI does not have timezones or leap seconds.
[23:18:29] <Xliff> I never mentioned either of those concepts.
[23:18:41] <Xliff> Durations don't recognize those etiher.
[23:18:59] <Xliff> s/those/them/
[23:19:09] <japhb> You can absolutely specify a YMDhms for TAI ... they are not the same as YMDhms in any other time system.  And in *particular*, a duration in TAI cannot be applied to any other time system than TAI and still be accurate.
[23:20:23] <Xliff> You mean to tell me that a TAI second is not the same as the seconds we use every day?
[23:20:32] <Xliff> If this is true, why use it?
[23:20:55] <japhb> Yes, read the literal next sentence from the one you pointed out.
[23:21:06] <Xliff> heh. I didn't read that far.
[23:21:42] <japhb> Because it is a continuous, not changing atomic time. (Time Atomic International, except with French spelling)
[23:22:53] <japhb> Things that require super-accurate, invariant time sources (like GPS) need to care about that.
[23:24:35] <japhb> (And in case you were wondering if it matters on earth, well ... Google's Spanner database depends on super-accurate time, as do quite a few of the timeouts and such within Google's systems.  In order to be hide the difference between UTC and TAI and keep everything from going to absolute hell, they have to smear every UTC leap second over 20 hours to get the difference to stop being prohibitive.)
