[00:01:46] *** Quits: tolecnal (tolecnal@login.xiro.net) (Quit: leaving)
[00:02:05] *** Joins: tolecnal (tolecnal@login.xiro.net)
[00:08:29] *** Joins: nabaiste^ (~nabaiste@68.101.50.106)
[00:14:03] *** Quits: peterrooney (~peter@2604:3d08:1583:7400:73f6:968b:4e8a:8c1a) (Quit: new kernel compiled - reboot)
[00:14:25] *** Joins: sdu (~doo@185.44.146.64)
[00:16:33] *** Joins: roadie (~user@2a02:8108:ec0:1427:ec36:2a84:4ea3:46c9)
[00:21:59] *** Quits: dd_ (dd_@gateway/vpn/protonvpn/dd/x-95652672) (Quit: Leaving)
[00:23:11] *** Joins: dd_ (dd_@gateway/vpn/protonvpn/dd/x-95652672)
[00:24:16] *** Quits: Hax0r (~Hax0r@87.101.192.39) (Quit: Leaving)
[00:24:24] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[00:24:31] *** Joins: seninha (~seninha@user/seninha)
[00:28:21] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[00:31:41] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[00:32:23] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[00:34:23] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[00:35:01] *** Joins: peterrooney (~peter@2604:3d08:1583:7400:a326:6944:7686:acf0)
[00:38:53] *** Quits: wuseman (~wuseman@user/wuseman) (Quit: ZNC 1.8.2+deb2build1 - https://znc.in)
[00:39:17] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[00:39:43] *** Joins: diamondbond (~diamondbo@175.157.220.188)
[00:41:05] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[00:42:06] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[00:42:45] *** Joins: wuseman (~wuseman@90-227-25-99-no68.tbcn.telia.com)
[00:42:46] *** Quits: wuseman (~wuseman@90-227-25-99-no68.tbcn.telia.com) (Changing host)
[00:42:46] *** Joins: wuseman (~wuseman@user/wuseman)
[00:43:28] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 265 seconds)
[00:43:53] *** Lord_of_Life_ is now known as Lord_of_Life
[00:50:19] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[00:52:58] *** Joins: moto (~moto@user/moto)
[00:54:36] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[00:55:08] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[00:55:48] *** Quits: roadie (~user@2a02:8108:ec0:1427:ec36:2a84:4ea3:46c9) (Ping timeout: 250 seconds)
[00:59:09] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[01:02:28] *** Joins: white5moke (~pi0xxdmqj@ip72-219-109-30.oc.oc.cox.net)
[01:06:14] *** Quits: ttyX (~ttyX@user/ttyx) (Quit: Leaving)
[01:06:41] *** Quits: GNUHacker (~foobar@fsf/member/GNUHacker) (Quit: Free as in Freedom)
[01:10:57] *** Quits: potamides (~amnifiliu@kh105203.karlshof.wh.tu-darmstadt.de) (Quit: WeeChat 3.2.1)
[01:12:45] *** Joins: _val_ (~valentin@82-169-14-137.biz.kpn.net)
[01:14:59] *** Joins: zeden (~zeden@user/zeden)
[01:15:00] *** Quits: zeden (~zeden@user/zeden) (Client Quit)
[01:16:14] *** Quits: p3rL (~uid0@user/p3rl) (Ping timeout: 252 seconds)
[01:18:45] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[01:20:39] *** Joins: akoana (~ah@user/akoana)
[01:21:34] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[01:21:45] *** Joins: roadie (~user@2a02:8108:ec0:1427:ec36:2a84:4ea3:46c9)
[01:25:02] *** Quits: chomwitt (~chomwitt@2a02:587:dc0a:5800:12c3:7bff:fe6d:d374) (Ping timeout: 260 seconds)
[01:26:05] *** Joins: bolsonarogay (~bolsonaro@186.237.242.64)
[01:26:07] *** Quits: bolsonarogay (~bolsonaro@186.237.242.64) (Remote host closed the connection)
[01:26:32] *** Joins: bolsonarogay (~bolsonaro@186.237.242.64)
[01:29:17] *** Quits: bolsonarogay (~bolsonaro@186.237.242.64) (Read error: Connection reset by peer)
[01:29:29] *** Joins: bolsonarogay (~bolsonaro@186.237.242.64)
[01:30:49] *** Quits: Guest3758 (~Guest@181.91.157.142) (Remote host closed the connection)
[01:34:02] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[01:34:31] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[01:38:34] *** Quits: bolsonarogay (~bolsonaro@186.237.242.64) (Ping timeout: 260 seconds)
[01:38:50] *** Joins: bolsonarogay (~bolsonaro@186.237.242.64)
[01:40:33] *** Quits: white5moke (~pi0xxdmqj@ip72-219-109-30.oc.oc.cox.net) (Remote host closed the connection)
[01:41:05] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[01:41:09] *** Joins: white5moke (~pi0xxdmqj@ip72-219-109-30.oc.oc.cox.net)
[01:43:01] *** Joins: GuiToris (~GuiToris@user/guitoris)
[01:43:50] <GuiToris> hello, I read that &> is a fancier > output 2>&1, I was wondering if &>> also exists?
[01:44:26] <earnestly> It does, but use neither
[01:44:38] *** Quits: roadie (~user@2a02:8108:ec0:1427:ec36:2a84:4ea3:46c9) (Ping timeout: 260 seconds)
[01:44:56] <earnestly> !&> > GuiToris
[01:44:56] <greybot> GuiToris: &> is a bash-specific feature. «&>file» is equivalent to «>file 2>&1». There is no &>> until Bash4. Use «>>file 2>&1» instead. We recommend not using &> or &>> in scripts, because it will break some valid scripts (see !badredir), and is an unintuitive syntax for beginners.
[01:45:36] <GuiToris> thanks
[01:48:36] *** Quits: Krail (~Krail@user/alexdelarge) (Quit: fuck off)
[01:50:10] *** Quits: diamondbond (~diamondbo@175.157.220.188) (Quit: Leaving)
[01:51:53] *** Joins: prifici (~patri@user/prifici)
[01:52:53] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[01:54:52] *** Joins: potamides (~amnifiliu@KH105203.karlshof.wh.tu-darmstadt.de)
[01:57:42] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 260 seconds)
[01:58:31] *** Joins: roadie (~user@2a02:8108:ec0:1427:ec36:2a84:4ea3:46c9)
[02:00:11] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 252 seconds)
[02:03:49] *** Joins: tangy (~tangy@user/tangy)
[02:05:00] *** Joins: Junagu (~junagu@2a02:8010:6989:0:d6cc:2cc9:dc0f:bcf2)
[02:07:40] *** Quits: Junagu (~junagu@2a02:8010:6989:0:d6cc:2cc9:dc0f:bcf2) (Client Quit)
[02:08:42] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 276 seconds)
[02:16:04] *** Quits: roadie (~user@2a02:8108:ec0:1427:ec36:2a84:4ea3:46c9) (Ping timeout: 252 seconds)
[02:17:20] *** Joins: h4x0r (~GodMode@user/h4x0r)
[02:17:48] *** Quits: TheArchitect (~GodMode@user/h4x0r) (Ping timeout: 276 seconds)
[02:17:54] *** h4x0r is now known as TheArchitect
[02:19:43] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[02:19:57] *** Quits: brelod (~me@90.244.150.142) (Quit: leaving)
[02:21:00] <defjam> hey why can i not do this
[02:21:04] <defjam> egrep -Fir --exclude-from=/home/eb0t/grepfile --exclude-dir={django, website, .*} "mobile phone"
[02:21:31] <defjam> grep: conflicting matchers specified
[02:23:03] <defjam> grep: .*}: No such file or directory...i was trying to include all .  directories
[02:23:12] <defjam> i go rid of the -F
[02:23:30] *** Parts: GuiToris (~GuiToris@user/guitoris) (Sieben Acht Gute Nacht!)
[02:23:47] *** Joins: juhop_ (~anon@85-76-103-210-nat.elisa-mobile.fi)
[02:24:48] *** Quits: peterrooney (~peter@2604:3d08:1583:7400:a326:6944:7686:acf0) (Quit: new kernel compiled - reboot)
[02:26:51] *** Joins: peterrooney (~peter@2604:3d08:1583:7400:8cbf:bc49:a7aa:3426)
[02:28:50] *** Joins: roadie (~user@2a02:8108:ec0:1427:ec36:2a84:4ea3:46c9)
[02:29:48] <dodo> defjam: egrep is grep -E
[02:31:28] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[02:33:58] *** Quits: jsrnop (~mark@user/jsrnop) (Quit: The Lounge - https://thelounge.chat)
[02:34:21] <defjam> hey dodo this worked
[02:34:24] *** Joins: jsrnop (~mark@user/jsrnop)
[02:34:26] <defjam> egrep -ir "mobile phone" . --exclude-from=/home/eb0t/grepfile --exclude-dir={django, website, '.*'}
[02:34:34] *** Quits: roadie (~user@2a02:8108:ec0:1427:ec36:2a84:4ea3:46c9) (Ping timeout: 260 seconds)
[02:34:55] <defjam> grep -Eir "mobile phone" . --exclude-from=/home/eb0t/grepfile --exclude-dir={django, website, '.*'}
[02:34:58] *** Quits: juhop_ (~anon@85-76-103-210-nat.elisa-mobile.fi) (Quit: leaving)
[02:35:02] <defjam> going to use that thanks dodo
[02:36:23] *** Joins: mestre (~mestre@191.177.175.57)
[02:37:49] *** Parts: justsomeguy (~justsomeg@user/justsomeguy) (WeeChat 3.2)
[02:48:20] <emanuele6> defjam: what is --exclude-dir={django, website, '.*'} supposed to mean?
[02:48:33] <emanuele6> are you tring to use a brace expansion?
[02:49:00] <emanuele6> # printf '<%s> ' --exclude-dir={django, website, '.*'}
[02:49:01] <shbot> emanuele6: <--exclude-dir={django,> <website,> <.*}>
[02:49:10] <emanuele6> # printf '<%s> ' --exclude-dir={django,website,'.*'}
[02:49:12] <shbot> emanuele6: <--exclude-dir=django> <--exclude-dir=website> <--exclude-dir=.*>
[02:50:01] <akoana> defjam's problem was already solved in #linux :)
[02:51:13] <akoana> (by tirnanog, who seems to be in #bash also sometimes, if I remember correctly)
[02:51:27] <tirnanog> oh, didn't notice it was posed here.
[02:51:33] <akoana> lol
[02:54:23] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[02:54:33] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[02:55:13] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[02:55:37] *** Joins: igemnace (~ian@user/igemnace)
[02:59:35] *** Quits: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[03:00:41] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[03:03:52] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[03:04:57] *** Joins: Crescendo (~Crescendo@user/crescendo)
[03:05:43] *** Joins: dre (~dre@2001:8004:4430:7fc7:86e5:778f:714b:303f)
[03:07:14] *** Quits: bolsonarogay (~bolsonaro@186.237.242.64) (Ping timeout: 260 seconds)
[03:07:30] *** Quits: eem (~eem@user/eem) (Quit: WeeChat 3.3)
[03:07:39] *** Quits: k133 (~k133@user/k133) (Ping timeout: 250 seconds)
[03:07:59] *** Joins: bolsonarogay (~bolsonaro@186.237.242.64)
[03:10:31] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[03:12:52] *** Joins: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net)
[03:13:41] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:15:01] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:15:40] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[03:16:09] *** Quits: white5moke (~pi0xxdmqj@ip72-219-109-30.oc.oc.cox.net) (Remote host closed the connection)
[03:16:10] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[03:20:01] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:21:39] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[03:22:15] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[03:22:56] *** Parts: akoana (~ah@user/akoana) ()
[03:23:07] *** Joins: Crescendo (~Crescendo@user/crescendo)
[03:26:26] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[03:30:29] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi) (Read error: Connection reset by peer)
[03:30:44] *** Joins: roadie (~user@2a02:8108:ec0:1427:ec36:2a84:4ea3:46c9)
[03:33:00] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[03:33:25] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[03:33:41] *** Quits: nabaiste^ (~nabaiste@68.101.50.106) (Ping timeout: 252 seconds)
[03:34:46] *** Joins: euro (~euro@c-71-202-216-217.hsd1.ca.comcast.net)
[03:34:58] *** Joins: nabaiste^ (~nabaiste@68.101.50.106)
[03:35:23] *** Quits: roadie (~user@2a02:8108:ec0:1427:ec36:2a84:4ea3:46c9) (Ping timeout: 250 seconds)
[03:40:44] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Quit: Leaving)
[03:42:20] *** Quits: euro (~euro@c-71-202-216-217.hsd1.ca.comcast.net) (Quit: Leaving)
[03:45:25] *** Quits: peterrooney (~peter@2604:3d08:1583:7400:8cbf:bc49:a7aa:3426) (Quit: new kernel compiled - reboot)
[03:48:48] *** Quits: dre (~dre@2001:8004:4430:7fc7:86e5:778f:714b:303f) (Quit: Leaving)
[03:57:13] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[03:59:58] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 252 seconds)
[04:00:31] *** Joins: arinov (~arinov@213.194.126.155)
[04:03:08] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[04:03:26] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:06:51] *** Joins: nbao (~nbao@187.20.181.193)
[04:08:24] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[04:09:17] *** Parts: gry (~quassel@botters/gry) (пока)
[04:13:05] *** Quits: ntwk (~ntwk@user/ntwk) (Ping timeout: 250 seconds)
[04:20:45] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[04:20:58] *** Quits: aidalgol (~aidalgol@user/aidalgol) (Ping timeout: 265 seconds)
[04:23:47] *** Quits: aaro (~aaro@user/aaro) (Ping timeout: 240 seconds)
[04:25:03] *** Quits: TheArchitect (~GodMode@user/h4x0r) (Remote host closed the connection)
[04:25:24] *** Joins: TheArchitect (~GodMode@user/h4x0r)
[04:26:26] *** Joins: aidalgol (~aidalgol@user/aidalgol)
[04:27:35] *** Joins: ntwk (~ntwk@user/ntwk)
[04:28:10] *** Joins: Shanzem (~Shanzem@86.31.109.147)
[04:30:28] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[04:32:35] *** Quits: xx (~xx@user/xx) (Ping timeout: 250 seconds)
[04:33:52] <seninha> using file(1) to check the type of each file is very slow, I'm gonna just check its file extension... no need to open the file and read it.
[04:49:41] *** Joins: Guest3758 (~Guest@host56.181-14-185.telecom.net.ar)
[04:49:47] *** Joins: CodePoint (~BitShift@2600:1700:3070:3790::29)
[04:55:53] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[04:56:04] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 252 seconds)
[04:57:40] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[04:58:02] *** Joins: sublim20 (~sublim20@user/sublim20)
[05:01:58] *** Joins: keypusher (keypusher@user/keypusher)
[05:04:52] *** Joins: aaro (~aaro@user/aaro)
[05:08:21] *** Joins: earnestly (~earnest@user/earnestly)
[05:08:43] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 252 seconds)
[05:09:52] *** Joins: vlm (~vlm@user/vlm)
[05:10:20] *** Joins: peterrooney (~peter@2604:3d08:1583:7400:dabb:c1ff:fe15:d704)
[05:10:23] *** Joins: keypushe- (keypusher@user/keypusher)
[05:11:28] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 252 seconds)
[05:13:40] *** keypushe- is now known as keypusher
[05:18:45] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[05:21:31] *** Joins: totenkoph (~scythe@user/totenkoph)
[05:23:19] *** Quits: ntwk (~ntwk@user/ntwk) (Ping timeout: 265 seconds)
[05:24:08] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[05:24:19] *** Joins: white5moke (~pi0xxdmqj@ip72-219-109-30.oc.oc.cox.net)
[05:25:03] *** Quits: CodePoint (~BitShift@2600:1700:3070:3790::29) (Quit: Never gonna give you up, never gonna let you down...)
[05:28:36] *** Joins: zebrag (~chris@user/zebrag)
[05:31:01] *** Quits: zaz\ (~zaz@poneybl.eu) (Quit: bye)
[05:31:16] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 252 seconds)
[05:31:30] *** Joins: roadie (~user@2a02:8108:ec0:1427:ec36:2a84:4ea3:46c9)
[05:31:31] *** Joins: zaz\ (~zaz@poneybl.eu)
[05:34:45] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[05:36:07] *** Quits: roadie (~user@2a02:8108:ec0:1427:ec36:2a84:4ea3:46c9) (Ping timeout: 240 seconds)
[05:36:16] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[05:36:31] *** Joins: ntwk (~ntwk@user/ntwk)
[05:37:38] *** Quits: aead (~aead@user/aead) (Killed (NickServ (GHOST command used by aeadio)))
[05:37:59] *** Joins: aeadio (~aead@user/aead)
[05:45:58] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[05:46:40] *** Quits: white5moke (~pi0xxdmqj@ip72-219-109-30.oc.oc.cox.net) (Remote host closed the connection)
[05:47:37] *** Quits: Administratorte (~sq@tempest.math.colostate.edu) (Quit: WeeChat 3.1)
[05:48:11] *** Joins: aead (~aead@user/aead)
[05:53:36] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[05:57:45] *** Quits: aead (~aead@user/aead) (Quit: ZNC - https://znc.in)
[05:58:59] *** Joins: aead (~aead@user/aead)
[06:00:24] *** Joins: roadie (~user@2a02:8108:ec0:1427:ec36:2a84:4ea3:46c9)
[06:01:53] *** Joins: XV8 (~XV8@2601:5cb:c001:50:b1fc:daf5:89c3:87be)
[06:04:09] *** Quits: mestre (~mestre@191.177.175.57) (Quit: leaving)
[06:14:27] *** Quits: peterrooney (~peter@2604:3d08:1583:7400:dabb:c1ff:fe15:d704) (Quit: new kernel compiled - reboot)
[06:21:28] *** Quits: carlos (~pum@user/carlos) (Remote host closed the connection)
[06:22:30] *** Quits: XV8 (~XV8@2601:5cb:c001:50:b1fc:daf5:89c3:87be) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:24:40] *** Joins: XV8 (~XV8@2601:5cb:c001:50:b1fc:daf5:89c3:87be)
[06:25:17] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 252 seconds)
[06:29:21] *** Joins: peterrooney (~peter@2604:3d08:1583:7400:dabb:c1ff:fe15:d704)
[06:30:03] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[06:30:40] *** Quits: jos1 (~jos3@dyndsl-091-248-054-076.ewe-ip-backbone.de) (Ping timeout: 252 seconds)
[06:32:01] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[06:33:32] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 252 seconds)
[06:34:38] *** Joins: sublim20 (~sublim20@user/sublim20)
[06:35:39] *** Parts: nickodd (~nickodd@user/nickodd) ()
[06:35:43] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[06:38:12] *** Quits: bolsonarogay (~bolsonaro@186.237.242.64) (Remote host closed the connection)
[06:39:19] *** Joins: Carp (~rue@1-162-40-185.dynamic-ip.hinet.net)
[06:40:01] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Client Quit)
[06:40:19] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[06:42:06] *** Quits: sinaowolabi_ (~SinaOwola@102.134.114.1) (Ping timeout: 265 seconds)
[06:42:48] *** Joins: jos1 (~jos3@host-091-097-190-069.ewe-ip-backbone.de)
[06:45:58] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 265 seconds)
[06:47:52] *** Joins: sinaowolabi_ (~SinaOwola@102.134.114.1)
[06:50:19] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[06:56:32] *** Joins: bolsonarogay (~bolsonaro@186.237.242.64)
[06:57:12] *** Quits: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au) (Ping timeout: 250 seconds)
[06:57:25] *** Joins: kurahaupo (~kurahaupo@pa49-195-117-73.pa.nsw.optusnet.com.au)
[07:03:19] *** Quits: Guest3758 (~Guest@host56.181-14-185.telecom.net.ar) (Remote host closed the connection)
[07:03:39] *** Joins: cuppajoe (~joe@ip174-68-20-166.no.no.cox.net)
[07:04:16] *** Quits: roadie (~user@2a02:8108:ec0:1427:ec36:2a84:4ea3:46c9) (Ping timeout: 252 seconds)
[07:05:22] *** Quits: wuseman (~wuseman@user/wuseman) (Quit: ZNC 1.8.2+deb2build1 - https://znc.in)
[07:13:09] *** Joins: wuseman (~wuseman@90-227-25-99-no68.tbcn.telia.com)
[07:13:10] *** Quits: wuseman (~wuseman@90-227-25-99-no68.tbcn.telia.com) (Changing host)
[07:13:10] *** Joins: wuseman (~wuseman@user/wuseman)
[07:15:31] *** Quits: bolsonarogay (~bolsonaro@186.237.242.64) (Remote host closed the connection)
[07:16:14] *** Joins: bolsonarogay (~bolsonaro@186.237.242.64)
[07:17:16] *** Quits: bolsonarogay (~bolsonaro@186.237.242.64) (Remote host closed the connection)
[07:17:59] *** Joins: bolsonarogay (~bolsonaro@186.237.242.64)
[07:18:09] *** Quits: bolsonarogay (~bolsonaro@186.237.242.64) (Remote host closed the connection)
[07:18:50] *** Quits: cuppajoe (~joe@ip174-68-20-166.no.no.cox.net) (Quit: WeeChat 3.2)
[07:20:25] *** Joins: bolsonarogay (~bolsonaro@186.237.242.64)
[07:30:08] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[07:34:06] *** Joins: dre (~dre@2001:8003:c932:c301:a6ae:89a3:2bc6:7303)
[07:39:07] *** Joins: n4dir (~user@i577BC875.versanet.de)
[07:39:15] *** Quits: bolsonarogay (~bolsonaro@186.237.242.64) (Remote host closed the connection)
[07:42:02] *** Quits: LiftLeft (~LiftLeft@172.98.92.24) (Ping timeout: 265 seconds)
[07:43:22] *** Joins: bolsonarogay (~bolsonaro@186.237.242.64)
[07:43:32] *** Quits: bolsonarogay (~bolsonaro@186.237.242.64) (Remote host closed the connection)
[07:44:26] *** Quits: dmr (~rdumitru@user/dmr) (Ping timeout: 260 seconds)
[07:47:52] *** Joins: sublim20 (~sublim20@user/sublim20)
[07:47:53] *** Quits: sublim20 (~sublim20@user/sublim20) (Remote host closed the connection)
[07:49:28] *** Quits: sdu (~doo@185.44.146.64) (Quit: Lost terminal)
[07:51:33] *** Quits: XV8 (~XV8@2601:5cb:c001:50:b1fc:daf5:89c3:87be) (Quit: Textual IRC Client: www.textualapp.com)
[07:56:49] *** Joins: bolsonarogay (~bolsonaro@186.237.242.64)
[08:10:10] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[08:13:14] <tsujp> I want to pass to a function an already-formatted string with printf without using a subshell. So I call `foo 'hi %s' "$1"` where by the time `foo` receives that (single) argument it's formatted. I though about using `foo <<< printf 'hi %s' "$1"` but I cannot get the syntax correct
[08:14:06] *** Quits: nbao (~nbao@187.20.181.193) (Quit: leaving)
[08:15:43] *** Quits: sandb0y (pirate@user/sandb0y) (Quit: WeeChat 3.2.1)
[08:16:02] <izabera> foo "$(printf %s "$1")"
[08:16:17] <tsujp> Without using a subshell in this case
[08:17:00] <cryptonector> printf -v then use that?
[08:17:31] <cryptonector> printf -v for_foo ...; foo "$for_foo"
[08:17:50] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:18:13] <pystardust> printf -v myarg 'hi %s' "$1" ; foo "$myarg"
[08:18:27] <izabera> why do you care even
[08:18:38] <izabera> about the subshell
[08:19:05] *** Joins: chomwitt (~chomwitt@2a02:587:dc0a:5800:12c3:7bff:fe6d:d374)
[08:20:26] <tsujp> because I'm trying to make a function that can be called like printf is but with automatic formatting
[08:20:50] <tsujp> so you do `foo 'hi %s\n' "$1"` and it automatically formats the `hi` in yellow, your name in red etc
[08:21:01] <tsujp> crucially called nicely instead of requiring -v to set a var or a subshell each time
[08:21:07] *** Quits: bolsonarogay (~bolsonaro@186.237.242.64) (Remote host closed the connection)
[08:21:07] <tsujp> idk if it can be done though
[08:21:11] <izabera> ok so it's not the subshell that's the problem, you don't want to have to call printf every time
[08:21:20] <izabera> in which case just make foo call it
[08:21:42] <izabera> first thing it does: printf -v mystring "$1" "$2"
[08:21:50] *** Joins: bolsonarogay (~bolsonaro@186.237.242.64)
[08:21:58] <cryptonector> ^
[08:22:45] <tsujp> right but it's got to be generic enough, could such a pattern handle `foo '%s %s' "$1" "$2"` and `foo '%s %s %s' "$1" "$2" "$3"`
[08:23:03] <izabera> printf -v mystring "$1" "${@:2}
[08:23:05] <izabera> !next
[08:23:06] <greybot> Another satisfied customer! Next please!
[08:23:16] <izabera> (+ extra quote at the end)
[08:23:36] <tsujp> hmm lemme try this out
[08:24:19] *** Quits: Shanzem (~Shanzem@86.31.109.147) (Quit: sudo Shanzem -lol -updoot -karma -gold >/dev/lies)
[08:25:18] <cryptonector> I mean, "$1" "${@:2}" is the same as "$@"
[08:25:25] <izabera> true
[08:25:36] <cryptonector> so, printf -v var "$@"
[08:25:43] <tsujp> this doesn't work because inside `foo` $1 and $xyz whatever are different the whole point is the string templating happens before it gets into foo or in such a way that I don't need to first do `printf -v myvar && foo`
[08:25:50] <tsujp> lemme whip up a quick example script
[08:26:00] <izabera> god
[08:26:02] <cryptonector> what's hard is knowing how many arguments the format string wants and how many are left over for other things the function wants
[08:27:28] *** Quits: timj (~timj@user/timj) (Ping timeout: 265 seconds)
[08:27:52] <cryptonector> like, if you wanted to be able to say     foo '<some-format-string-here>' <as-many-args-as-the-format-string-wants-here> <more-args>;   and have foo printf just the args wanted by the format string, then shift them, then do something else with the rest...
[08:27:58] <tsujp> http://ix.io/3A6h
[08:28:02] <cryptonector> but... that's a bit of an ugly pattern -- don't do that
[08:28:16] <tsujp> call that as `./example.sh John` gives `:: Hello there %s` which is incorrect
[08:28:47] <tsujp> And as I have said calling puts with `printf -v` is not acceptable in this case, the whole point is the call is _just_ `puts`
[08:28:49] <izabera> tsujp: puts() { printf -v var "$@"; printf '\033[38;5;11m:: %s\033[m\n' "$var"; }
[08:29:04] <cryptonector> ^
[08:29:21] <tsujp> oh
[08:29:23] <tsujp> im sorry :(
[08:29:30] <tsujp> I misunderstood where the -v stuff went
[08:29:49] <tsujp> Thank you izabera and cryptonector :)
[08:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[08:31:01] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[08:31:17] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[08:31:30] *** Quits: thebombzen (~thebombze@587232563.guest.umich.net) (Quit: Quit)
[08:31:31] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[08:31:41] *** Joins: thebombzen (~thebombze@587232563.guest.umich.net)
[08:31:50] *** Joins: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp)
[08:32:27] *** Joins: roadie (~user@2a02:8108:ec0:1427:ec36:2a84:4ea3:46c9)
[08:34:07] *** Quits: bolsonarogay (~bolsonaro@186.237.242.64) (Remote host closed the connection)
[08:34:50] *** Joins: bolsonarogay (~bolsonaro@186.237.242.64)
[08:36:31] *** Quits: bolsonarogay (~bolsonaro@186.237.242.64) (Remote host closed the connection)
[08:36:55] *** Joins: bolsonarogay (~bolsonaro@186.237.242.64)
[08:36:58] *** Quits: bolsonarogay (~bolsonaro@186.237.242.64) (Remote host closed the connection)
[08:37:10] *** Quits: roadie (~user@2a02:8108:ec0:1427:ec36:2a84:4ea3:46c9) (Ping timeout: 260 seconds)
[08:38:25] *** Joins: bolsonarogay (~bolsonaro@186.237.242.64)
[08:38:26] *** Quits: bolsonarogay (~bolsonaro@186.237.242.64) (Read error: Connection reset by peer)
[08:39:22] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 252 seconds)
[08:39:58] *** Quits: n4dir (~user@i577BC875.versanet.de) (Remote host closed the connection)
[08:40:50] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[08:41:46] *** Joins: timj (~timj@user/timj)
[08:43:37] *** Joins: bolsonarogay (~bolsonaro@186.237.242.64)
[08:45:23] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[08:53:14] *** Quits: barjac (~quassel@92.41.71.225.threembb.co.uk) (Ping timeout: 252 seconds)
[08:53:17] *** Quits: bolsonarogay (~bolsonaro@186.237.242.64) (Remote host closed the connection)
[08:53:31] *** Joins: bolsonarogay (~bolsonaro@186.237.242.64)
[08:53:38] *** Joins: barjac (~quassel@94.197.175.108.threembb.co.uk)
[08:53:54] *** Quits: winstonsmith (~winstonsm@109.201.152.179) (Remote host closed the connection)
[08:54:39] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[08:54:57] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[08:55:15] *** Joins: winstonsmith (~winstonsm@109.201.152.178)
[08:59:45] *** Quits: bolsonarogay (~bolsonaro@186.237.242.64) (Remote host closed the connection)
[09:00:08] *** Joins: bolsonarogay (~bolsonaro@186.237.242.64)
[09:05:04] *** Joins: roadie (~user@2a02:8108:ec0:1427:ec36:2a84:4ea3:46c9)
[09:05:25] *** Quits: wuseman (~wuseman@user/wuseman) (Quit: ZNC 1.8.2+deb2build1 - https://znc.in)
[09:06:09] *** Joins: zindo (zindo@user/zindo)
[09:07:03] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[09:12:41] *** Quits: bolsonarogay (~bolsonaro@186.237.242.64) (Remote host closed the connection)
[09:12:45] <zindo> Hi. Could someone please explain me why this returns 0 in bash?: [ "foo" -ot "/" ]; echo $?
[09:13:05] <geirha> 0 means success
[09:13:07] <zindo> "/" can be replaced by any existent file
[09:13:25] *** Joins: bolsonarogay (~bolsonaro@186.237.242.64)
[09:13:38] <zindo> yeah, but that basically means that any string "is older than" a file ?
[09:14:23] *** Quits: bolsonarogay (~bolsonaro@186.237.242.64) (Remote host closed the connection)
[09:14:37] <geirha> any non-existent file is considered older than an existing file by -ot and -nt, yes
[09:15:20] <zindo> oooh, ok that's good to know, this was driving me crazy because
[09:15:32] <zindo> this does not apply to zsh, that's strange
[09:15:40] *** Joins: bolsonarogay (~bolsonaro@186.237.242.64)
[09:15:47] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 252 seconds)
[09:16:12] <zindo> I couldn't find the documentation about this, if you know could you point me to where that is specified please?
[09:17:24] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[09:17:48] *** Joins: dre_ (~dre@2001:8004:4430:58d:7c07:dfdd:439:9f82)
[09:17:49] *** Joins: ano (~ano@user/ano)
[09:17:51] <geirha> Chet probably went for the "makefile" case, where it builds a file if the target is missing or is older than the source file(s)
[09:18:33] *** Quits: CRThaze (~weechat@188.166.44.58) (*.net *.split)
[09:18:33] *** Quits: hid3 (~arnoldas@78.157.71.116) (*.net *.split)
[09:18:33] *** Quits: kewl_fft (~kewl_fft@2a01:e0a:9cb:8950:feaa:14ff:fec1:c4d4) (*.net *.split)
[09:18:33] *** Quits: particleflux (~particlef@ircb.hackthe.codes) (*.net *.split)
[09:18:33] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (*.net *.split)
[09:18:33] *** Quits: mboehn (mathias@hh1.nuxis.org) (*.net *.split)
[09:18:34] *** Quits: uhu (~uhu@2a01:4f9:c010:1087::2) (*.net *.split)
[09:18:34] *** Quits: skreech (skreech@user/skreech) (*.net *.split)
[09:18:34] *** Quits: Hyde (~MrHyde@static.54.68.46.78.clients.your-server.de) (*.net *.split)
[09:18:34] *** Quits: dka (~code-is-a@ns3059207.ip-193-70-33.eu) (*.net *.split)
[09:18:34] *** Quits: vel (~vel@ec2-52-62-28-79.ap-southeast-2.compute.amazonaws.com) (*.net *.split)
[09:18:34] *** Quits: redo (~redo@193.191.4.173) (*.net *.split)
[09:18:34] *** Quits: murder (mdr@chton.secunit.org) (*.net *.split)
[09:18:34] *** Quits: CalimeroTeknik (~calimero@user/calimeroteknik) (*.net *.split)
[09:18:34] *** Quits: mw_ (~mw@catv-86-101-13-145.catv.broadband.hu) (*.net *.split)
[09:18:34] *** Quits: Darkfoe1 (~chuck@drunk.serverfail.party) (*.net *.split)
[09:18:34] *** Quits: zopsi (zopsi@2600:3c00::f03c:91ff:fe14:551f) (*.net *.split)
[09:18:34] *** Quits: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net) (*.net *.split)
[09:18:34] *** Quits: Anarchic (~Anarchic@getlegit.co.uk) (*.net *.split)
[09:18:34] *** Quits: woky (~woky@li1651-31.members.linode.com) (*.net *.split)
[09:18:34] *** Quits: Bilge (~u@2001:41d0:1:e300:0:1:fee1:900d) (*.net *.split)
[09:18:44] *** Joins: murder (mdr@chton.secunit.org)
[09:18:45] *** Joins: Hyde (~MrHyde@static.54.68.46.78.clients.your-server.de)
[09:18:48] *** Joins: skreech (skreech@user/skreech)
[09:18:48] *** Joins: dka (~code-is-a@ns3059207.ip-193-70-33.eu)
[09:18:49] *** Joins: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net)
[09:18:54] *** Joins: Bilge (~u@2001:41d0:1:e300:0:1:fee1:900d)
[09:18:56] *** Joins: zopsi (zopsi@2600:3c00::f03c:91ff:fe14:551f)
[09:18:57] *** Joins: uhu (~uhu@2a01:4f9:c010:1087::2)
[09:19:04] *** Joins: Anarchic (~Anarchic@getlegit.co.uk)
[09:19:05] *** Joins: mw_ (~mw@catv-86-101-13-145.catv.broadband.hu)
[09:19:07] *** Joins: mboehn (mathias@hh1.nuxis.org)
[09:19:07] *** Joins: redo (~redo@193.191.4.173)
[09:19:11] *** Joins: woky (~woky@li1651-31.members.linode.com)
[09:19:12] *** Joins: particleflux (~particlef@ircb.hackthe.codes)
[09:19:24] *** Joins: mcfrdy (~mcfrdy@user/mcfrdy)
[09:19:25] *** Joins: kewl_fft (~kewl_fft@2a01:e0a:9cb:8950:feaa:14ff:fec1:c4d4)
[09:19:26] *** Joins: vel (~vel@ec2-52-62-28-79.ap-southeast-2.compute.amazonaws.com)
[09:19:30] <zindo> I understand, that is a pretty useful behavior
[09:19:30] *** Joins: CRThaze (~weechat@188.166.44.58)
[09:19:39] *** Joins: Darkfoe1 (~chuck@drunk.serverfail.party)
[09:19:52] <zindo> thank you so much, my head was hurting
[09:20:05] *** Quits: dre_ (~dre@2001:8004:4430:58d:7c07:dfdd:439:9f82) (Remote host closed the connection)
[09:20:34] *** Quits: dre (~dre@2001:8003:c932:c301:a6ae:89a3:2bc6:7303) (Ping timeout: 260 seconds)
[09:21:45] *** Quits: bolsonarogay (~bolsonaro@186.237.242.64) (Remote host closed the connection)
[09:22:53] *** Joins: hid3 (~arnoldas@78.157.71.116)
[09:23:07] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[09:23:10] *** Joins: CalimeroTeknik (~calimero@185.13.36.50)
[09:24:41] *** Quits: Namarrgon (~Namarrgon@archlinux/op/Namarrgon) (*.net *.split)
[09:24:41] *** Quits: grys (~quassel@botters/gry) (*.net *.split)
[09:24:41] *** Quits: karaktaka (~karaktaka@fry.ethernerd.net) (*.net *.split)
[09:24:41] *** Quits: Scarecr0w (scarecr0w@user/scarecr0w) (*.net *.split)
[09:24:42] *** Quits: e2 (e2@sponsored.by.bnc4you.xyz) (*.net *.split)
[09:24:42] *** Quits: vanfanel64 (~vanfanel6@user/vanfanel64) (*.net *.split)
[09:24:42] *** Quits: esselfe (~steph@user/esselfe) (*.net *.split)
[09:24:42] *** Quits: dfdx (~F@user/dfdx) (*.net *.split)
[09:24:42] *** Quits: eldritch_ (~eldritch@user/eldritch/x-9272577) (*.net *.split)
[09:24:42] *** Quits: user282069 (user@2a01:7e00::f03c:92ff:fe7f:456d) (*.net *.split)
[09:24:42] *** Quits: przemoc (~przemoc@user/przemoc) (*.net *.split)
[09:24:42] *** Quits: utunbu_ (~utunbu@user/utunbu) (*.net *.split)
[09:24:42] *** Quits: rtur (~weechat@mail.rtur.org) (*.net *.split)
[09:24:42] *** Quits: Spydar007 (~spydar007@user/spydar007) (*.net *.split)
[09:24:42] *** Quits: phogg (~phogg@static-108-51-94-2.washdc.fios.verizon.net) (*.net *.split)
[09:24:42] *** Quits: VectorX (~VectorX@user/vectorx) (*.net *.split)
[09:24:42] *** Quits: ds (~ds@user/ds) (*.net *.split)
[09:24:42] *** Quits: ilikeyou (~ilikeyou@ec2-18-219-166-223.us-east-2.compute.amazonaws.com) (*.net *.split)
[09:24:43] *** Quits: riddle (riddle@user/riddle) (*.net *.split)
[09:24:43] *** Quits: harleypig (thelounge@harleypig.com) (*.net *.split)
[09:24:43] *** Quits: jrayhawk (~jrayhawk@user/jrayhawk) (*.net *.split)
[09:24:43] *** Quits: leftyfb (leftyfb@ubuntu/member/leftyfb) (*.net *.split)
[09:24:43] *** Quits: kevr (~kevr@user/kevr) (*.net *.split)
[09:24:43] *** Quits: nolesswrong (~nolesswro@45.32.1.17) (*.net *.split)
[09:24:43] *** Quits: Razva (sid17541@user/razva) (*.net *.split)
[09:24:43] *** Quits: rdz (~rdz@2001:620:120:1::12) (*.net *.split)
[09:24:43] *** Quits: amosbird (~amosbird@13.75.119.182) (*.net *.split)
[09:24:43] *** Quits: CrtxReavr (crtxreavr@shodan.trioptimum.com) (*.net *.split)
[09:24:43] *** Quits: izabera (izabera@user/izabera) (*.net *.split)
[09:24:43] *** Quits: znf (~ibm86@toaster.linge-ma.ro) (*.net *.split)
[09:24:43] *** Quits: burrows (burrows@user/burrows) (*.net *.split)
[09:24:43] *** Quits: olspookishmagus (~pookie@snf-137798.vm.okeanos.grnet.gr) (*.net *.split)
[09:24:43] *** Quits: pervaya (~pervaya@2001:41d0:602:3007::641b:b74c) (*.net *.split)
[09:24:43] *** Quits: Sketch (sketch@2604:180:2::a506:5c0d) (*.net *.split)
[09:24:43] *** Quits: ParkerR (ParkerR@znc.withg.org) (*.net *.split)
[09:24:43] *** Quits: mstruebing (~maex@2001:41d0:8:93c7::1) (*.net *.split)
[09:24:43] *** Quits: n-st (~n-st@user/n-st) (*.net *.split)
[09:24:43] *** Quits: Kabouik (~Kabouik@user/kabouik) (*.net *.split)
[09:24:43] *** Quits: VSpike (~johncc@2001:bc8:47ac:1a22::1) (*.net *.split)
[09:24:43] *** Quits: bwe (~bwe@2a01:4f8:1c1c:4878::2) (*.net *.split)
[09:24:43] *** Quits: td001 (~td001@172.245.134.58) (*.net *.split)
[09:24:49] *** Joins: nolesswrong (~nolesswro@45.32.1.17)
[09:24:50] *** Joins: olspookishmagus (~pookie@snf-137798.vm.okeanos.grnet.gr)
[09:24:50] *** Joins: leftyfb (leftyfb@wargames.left-click.org)
[09:24:50] *** Joins: bwe (~bwe@2a01:4f8:1c1c:4878::2)
[09:24:51] *** Joins: burrows (burrows@user/burrows)
[09:24:52] *** Joins: CrtxReavr (crtxreavr@shodan.trioptimum.com)
[09:24:52] *** Joins: ParkerR (ParkerR@znc.withg.org)
[09:24:54] *** Joins: przemoc (~przemoc@89-72-24-4.dynamic.chello.pl)
[09:24:55] *** Joins: jrayhawk (~jrayhawk@user/jrayhawk)
[09:24:56] *** Joins: amosbird (~amosbird@13.75.119.182)
[09:24:58] *** Joins: VSpike (~johncc@2001:bc8:47ac:1a22::1)
[09:24:59] *** Joins: mstruebing (~maex@2001:41d0:8:93c7::1)
[09:24:59] *** Joins: rdz (~rdz@2001:620:120:1::12)
[09:25:00] *** Joins: izabera (izabera@2a01:7e00::f03c:92ff:fe92:6cd9)
[09:25:14] *** Quits: przemoc (~przemoc@89-72-24-4.dynamic.chello.pl) (Changing host)
[09:25:14] *** Joins: przemoc (~przemoc@user/przemoc)
[09:25:14] *** Joins: user282069 (user@2a01:7e00::f03c:92ff:fe7f:456d)
[09:25:18] *** Joins: Kabouik (~Kabouik@2a03:4000:4d:fbd:4fe:b1ff:fee3:35d)
[09:25:18] *** Joins: rtur (~weechat@mail.rtur.org)
[09:25:26] *** Joins: harleypig (thelounge@harleypig.com)
[09:25:27] *** Joins: riddle (riddle@vps-dcf2ed18.vps.ovh.net)
[09:25:46] *** Joins: Razva (sid17541@id-17541.tinside.irccloud.com)
[09:25:46] *** Quits: Kabouik (~Kabouik@2a03:4000:4d:fbd:4fe:b1ff:fee3:35d) (Changing host)
[09:25:46] *** Joins: Kabouik (~Kabouik@user/kabouik)
[09:25:51] *** Quits: izabera (izabera@2a01:7e00::f03c:92ff:fe92:6cd9) (Changing host)
[09:25:51] *** Joins: izabera (izabera@user/izabera)
[09:25:58] *** Quits: Razva (sid17541@id-17541.tinside.irccloud.com) (Changing host)
[09:25:58] *** Joins: Razva (sid17541@user/razva)
[09:26:07] *** Joins: phogg (~phogg@static-108-51-94-2.washdc.fios.verizon.net)
[09:26:10] *** Joins: vanfanel64 (~vanfanel6@user/vanfanel64)
[09:26:13] *** Joins: utunbu_ (~utunbu@user/utunbu)
[09:26:17] *** Joins: kevr (~kevr@user/kevr)
[09:26:24] *** Joins: td001 (~td001@172.245.134.58)
[09:26:25] *** Joins: Scarecr0w (scarecr0w@user/scarecr0w)
[09:26:25] *** Joins: pervaya (~pervaya@ip250.ip-51-83-183.eu)
[09:26:27] *** Joins: Sketch (sketch@new.rednsx.org)
[09:26:31] *** Joins: ds (~ds@user/ds)
[09:26:32] *** Joins: n-st (~n-st@user/n-st)
[09:26:35] *** Joins: grys (~quassel@botters/gry)
[09:26:36] *** Joins: eldritch_ (~eldritch@user/eldritch/x-9272577)
[09:26:57] *** Joins: znf (~ibm86@toaster.linge-ma.ro)
[09:26:58] *** Joins: Spydar007 (~spydar007@user/spydar007)
[09:29:59] *** Joins: ilikeyou (~ilikeyou@ec2-18-219-166-223.us-east-2.compute.amazonaws.com)
[09:29:59] *** Joins: dfdx (~F@user/dfdx)
[09:30:00] *** Joins: karaktaka (~karaktaka@fry.ethernerd.net)
[09:32:43] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[09:33:25] *** Joins: e2 (e2@sponsored.by.bnc4you.xyz)
[09:33:27] *** Joins: tryhard21 (~tryhard21@92.81.30.221)
[09:33:47] <tryhard21> hey guy, i have the following json and i want to extract the media_id object
[09:33:57] <tryhard21> {"media_id":1441830987797708810,"media_id_string":"1441830987797708810","size":79893,"expires_after_secs":86400,"image":{"image_type":"image\/jpeg","w":1192,"h":871}}⏎
[09:34:07] *** Joins: nickodd (~nickodd@user/nickodd)
[09:34:13] <tryhard21> but running cat output | jq '.media_id'
[09:34:28] <tryhard21> it returns "1441830987797708800"
[09:34:39] <tryhard21> which is not even a number there in my object
[09:34:42] <tryhard21> i don't know why
[09:35:52] <OMGOMG> $ jsc
[09:35:52] <OMGOMG> >>> 1441830987797708810
[09:35:52] <OMGOMG> 1441830987797708800
[09:36:28] <tryhard21> OMGOMG what is jsc?
[09:36:35] <OMGOMG> !nabq tryhard21: javascript has some floating point issues, also
[09:36:39] <OMGOMG> fuck
[09:36:43] <OMGOMG> !nabq > tryhard21: javascript has some floating point issues, also
[09:36:43] <greybot> tryhard21: javascript has some floating point issues, also: Not a #bash question. We're no experts in that software or OS; consider asking the channel or mailing list with experts on that topic (eg. ##linux #openssh #ubuntu #zsh #systemd or PM alis with "list keyword" to search for channels).
[09:37:00] <OMGOMG> !uuoc > tryhard21: also:
[09:37:00] <greybot> tryhard21: also:: Useless Use Of Cat (cat foo | grep bar). See https://mywiki.wooledge.org/BashFAQ/119 and http://www.iki.fi/era/unix/award.html#cat
[09:37:30] <tryhard21> yeah
[09:39:48] *** Joins: bolsonarogay (~bolsonaro@186.237.242.64)
[09:39:49] *** Quits: bolsonarogay (~bolsonaro@186.237.242.64) (Read error: Connection reset by peer)
[09:41:18] *** Quits: zindo (zindo@user/zindo) (Quit: $ umount -R /libera)
[09:42:37] <tsujp> im replacing my current shell instance by doing `exec "$SHELL" -l` but I want to set an environment variable for use in the newly replaced shell, from the old one. I though about using `-c` but it exits once it's done doing `set _FOO`.. any ideas?
[09:44:50] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[09:45:08] <tsujp> `-s`?
[09:48:10] <emanuele6> tsujp: set?
[09:48:13] <emanuele6> why set?
[09:48:23] <geirha> FOO=bar exec "$SHELL"
[09:48:58] <emanuele6> `set _FOO' does not declare a variable, it changes the positional arguments of the shell to one argument ($1) equal to "_FOO"
[09:49:23] <tsujp> My mistake re: set
[09:49:35] <tsujp> Woah how come that env var setting persists through exec?
[09:49:43] <tsujp> I didn't even try it because I thought it wouldn't
[09:49:57] <geirha> Not sure why you expected it not to
[09:50:49] <tsujp> `exec` replaces the current process with a new one so there should be a new environment?
[09:51:58] *** Quits: joo (~joo@fsf/member/joo--) (Ping timeout: 252 seconds)
[09:52:18] <emanuele6> processes inherit the environment of the parent process and processes that are replaced with exec retain the environment of the original process
[09:52:48] <tsujp> I see
[09:52:49] <emanuele6> so `export FOO=bar; exec "$SHELL"' would run $SHELL in an environment where FOO is set to bar
[09:53:02] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[09:53:03] <emanuele6> but, in the case of geirha's example, it's a different situation
[09:53:19] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[09:53:52] <emanuele6> `FOO=bar BAZ=zab some_command' is shell syntax for running `some_command' in a modified environment where FOO is set to bar and BAZ is set to zab
[09:54:08] *** Quits: normskal (~normskal@101.175.64.73) (Ping timeout: 256 seconds)
[09:54:40] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[09:56:49] *** Joins: dre (~dre@2001:8003:c932:c301:4390:76e3:18b:dad4)
[09:59:21] *** Joins: joo (~joo@87-49-45-224-mobile.dk.customer.tdc.net)
[09:59:21] *** Quits: joo (~joo@87-49-45-224-mobile.dk.customer.tdc.net) (Changing host)
[09:59:21] *** Joins: joo (~joo@fsf/member/joo--)
[09:59:45] *** Quits: roadie (~user@2a02:8108:ec0:1427:ec36:2a84:4ea3:46c9) (Quit: ERC (IRC client for Emacs 25.3.50.1))
[10:00:19] <tsujp> Gotcha
[10:04:45] <tsujp> I seem to recall there are other types of shells other than the matrix of { login, non-login, interactive, non-interactive } ? There was a session and non-session or something?
[10:04:56] <tsujp> I cannot find the resource I got that from
[10:15:39] *** Quits: tryhard21 (~tryhard21@92.81.30.221) (Quit: Client closed)
[10:16:13] <geirha> yes, different shells read different files and have different logic as to when to read which file. It's all a giant mess
[10:17:02] *** Joins: tobybl (~tobybl@31.111.35.255)
[10:18:23] *** Joins: esselfe (~steph@user/esselfe)
[10:20:51] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[10:21:15] *** Quits: vaio (~gary@user/ghost) (Remote host closed the connection)
[10:21:39] *** Joins: vaio (~gary@user/ghost)
[10:26:40] *** Joins: rtjure (~rtjure@bras-79-132-17-74.comnet.bg)
[10:29:00] <geirha> even bash isn't consistent across systems, because some idiot packagers configures bash to read a global /etc/bashrc in addition to .bashrc, so they can force the crappy config they like on others
[10:32:02] *** Joins: kurahaupo_ (~kurahaupo@220-245-23-126.static.tpgi.com.au)
[10:34:10] <tsujp> I wonder, what does a non-interactive login shell load if anything? A non-interactive non-login just inherits the environment like any process and looks for BASH_ENV but a login interactive?
[10:34:59] *** Quits: kurahaupo (~kurahaupo@pa49-195-117-73.pa.nsw.optusnet.com.au) (Ping timeout: 252 seconds)
[10:35:34] *** Joins: adac (~adac@213-47-187-80.cable.dynamic.surfer.at)
[10:35:40] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.2.1)
[10:36:05] *** Quits: elibrokeit (eschwartz@archlinux/bugwrangler/eschwartz) (Quit: A random quit message)
[10:36:17] <tsujp> reading the man page I deduce this, is it correct? http://ix.io/3A6K
[10:36:41] *** Joins: elibrokeit (eschwartz@archlinux/bugwrangler/eschwartz)
[10:39:11] *** Quits: richardm75 (~richardm7@2600:8801:c507:2900:6de1:7904:bf3f:889f) (Ping timeout: 250 seconds)
[10:42:59] <tsujp> looks like I am right by my reckoning, I did a ` exec "$SHELL" -x -l -c 'env' &` and I can see it loading ~.bash_profile based on the logic I have only in that file showing in the trace
[10:46:09] <emanuele6> tsujp: is there any specific reason you are using $SHELL instead of `bash'?
[10:46:19] <tsujp> none
[10:46:46] <emanuele6> because -l is not portable since "login shell" are not a posix concept
[10:47:38] <tsujp> Oh okay, in that case /usr/bin/env bash it is
[10:48:17] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 250 seconds)
[10:48:23] <emanuele6> why not just `bash'?
[10:49:02] <tsujp> what if I am doing something and and I change which bash I want to use? /usr/bin/env bash would see that and act accordingly no?
[10:49:58] <emanuele6> i don't think i understand
[10:50:08] *** Joins: WinterStar (~IceLight@user/icelight)
[10:50:20] <emanuele6> but if you want to force a PATH lookup, you can simply use `command -p bash', no need for env(1)
[10:52:04] *** Joins: frostwork (~frostwork@user/frostwork)
[10:52:35] <emanuele6> nevermind, that is not how `command -p' works
[10:53:08] <emanuele6> i confused it with `type -P', and there is no equivalent option for `command'
[10:54:26] <emanuele6> still, you could force a PATH lookup with `hash -r; FOO=bar exec bash ...', but i don't really understand why you need env(1) in the first place
[10:54:45] <tsujp> I'm just copying the pattern from the shebang, is it a bad idea to...?
[10:54:46] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[10:54:47] *** Joins: earnestly (~earnest@user/earnestly)
[10:55:03] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[10:55:28] *** Quits: przemoc (~przemoc@user/przemoc) (Ping timeout: 268 seconds)
[10:55:40] <emanuele6> env(1) is used in shebangs because `#!bash' cannot be written directly
[10:56:17] <tsujp> yeah but there's `#!/usr/bin/env bash` and `#!/bin/bash` and its my understanding the former is always the better choice
[10:56:39] <emanuele6> but in a shell, you can just write `bash', so there is no point in using `env bash' or, as you said, `/usr/bin/env bash'
[10:57:11] *** Joins: Ad1Tech (~Ad1Tech@h104101.man.tk-internet.pl)
[10:58:11] <emanuele6> tsujp: why are you talking about shebangs? we were talking about `exec bash ...'
[10:58:29] <earnestly> > https://cr.yp.to/slashpackage/finding.html
[10:59:04] *** gooey is now known as Gooey
[10:59:47] <tsujp> right what I am saying is imagine if I am hacking on the bash source code and I want to run that shell, if I put that manually compiled bash higher in my path `/usr/bin/env bash` will find it and run it whereas `bash` will not
[11:00:40] <emanuele6> `hash -r; exec bash ...' will also find the first bash in PATH
[11:01:23] <tsujp> how does that work given there is a `;` inbetween?
[11:02:24] <tsujp> oh rightr sorry hash -r as in forgot everything and THEN run exec bash
[11:03:05] <emanuele6> but it's fine to use env(1) to force a PATH lookup if you really need to
[11:03:11] <emanuele6> i just don't see the point
[11:04:00] <emanuele6> it would only matter if you introduce the bash binary while the script is running if the bash command was already executed by that script
[11:05:02] <emanuele6> and at that point, why would you want half of your script using one executable, and the other half using the other?
[11:06:43] <tsujp> its moreso I can recompile bash, do `export PATH="$(pwd)/bash:$PATH"` run that command and it's now going to use the bash I just compiled instead of me having to do `./bash` and give the flags to point it to my dotfiles etc
[11:06:55] <tsujp> once I'm done I can just remove that from my path and im back to the system-installed bash
[11:07:26] <emanuele6> you can recompile bash either way
[11:07:53] <emanuele6> if the binary is replaced, it will use the new binary obviously
[11:08:22] *** Quits: daidoji (~daidoji@104-52-250-5.lightspeed.gnvlsc.sbcglobal.net) (Ping timeout: 260 seconds)
[11:08:48] <tsujp> im not talking about the binary being replaced
[11:08:52] <tsujp> okay here's a concrete example
[11:09:15] *** Joins: brelod (~me@90.244.150.142)
[11:09:33] *** Joins: rendar (~rendar@user/rendar)
[11:09:36] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[11:10:38] <tsujp> I've got `/usr/bin/bash` installed via my package manager. I download the bash source code to `~/hacking/bash` and I edit stuff, compile it and now it's compiled into directory `~/hacking/bash/bin` so I want to seamlessly test this new bash I've just compiled with my dotfiles etc. I add it first in the path `export
[11:10:39] <tsujp> PATH="$HOME/hacking/bin/bash:$PATH"` now whenever I run bash with `hash -r; exec bash` it will use my hacking bash and when I am done I can just reset my PATH and it goes back to the system bash at `/usr/bin/bash`
[11:10:45] *** Joins: UnnamedBeer (~UnnamedBe@231.red-83-41-235.dynamicip.rima-tde.net)
[11:12:18] <emanuele6> not really..
[11:12:44] <emanuele6> PATH is marked for exporting so the new bash process will have the same PATH as the parent
[11:13:03] <tsujp> my dotfiles change that behaviour ;)
[11:13:25] *** Quits: Enissay (~Enissay@user/enissay) (Ping timeout: 250 seconds)
[11:13:44] *** Quits: ccl (ccl@shell.xshellz.com) (Ping timeout: 265 seconds)
[11:17:17] <tsujp> wat `exec bash -l` and doing `echo $0` gives `bash` instead of `-bash`
[11:18:30] *** Joins: p3rL (~uid0@user/p3rl)
[11:19:45] <earnestly> Because you used -l
[11:19:46] <osse> pretty sure bash doesn't rewrite its own argv[0]
[11:20:05] <osse> exec -a -bash bash
[11:20:10] <earnestly> iow, -bash when set by execve is noticed by the shell to mean -l
[11:20:27] *** Joins: dmr (~rdumitru@109.166.194.99)
[11:20:28] <earnestly> Think busybox symlinks
[11:21:17] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 246 seconds)
[11:22:00] <tsujp> wdym because I used -l the man page says -l makes it a login shell and the man page further says `A login shell is one whose first character of argument zero is a -, or
[11:22:01] <tsujp>        one started with the --login option.` for which `-l` is equivalent
[11:22:26] <osse> if bash is started as -bash then it's a login shell
[11:22:31] <osse> if bash is started with -l then it's a login shell
[11:22:37] <earnestly> manual is pretty clear
[11:22:44] <osse> but one does not also do the other
[11:22:51] <tsujp> I thought bash would set it's '-' too, my bad
[11:22:56] <osse> if bash is started with -l it is not allso magically started as -bash
[11:23:25] *** Joins: WinterStar (~IceLight@user/icelight)
[11:23:50] <earnestly> Although if it did it would make seeing which shells are login shells via top or so easier, if that distinction matters at all
[11:24:26] <osse> can a program write to its argv ?
[11:24:29] <tsujp> I assumed that passing `-l` would add the `-` to it's zeroth argument
[11:24:46] <earnestly> osse: OS specific, such as setproctitle, or writing to /comm
[11:25:48] <earnestly> top/htop, etc. make note of /comm (htop can now display both, e.g. https://0x0.st/-YyM.png
[11:26:08] *** Joins: Enissay (~Enissay@user/enissay)
[11:26:50] *** Quits: Enissay (~Enissay@user/enissay) (Client Quit)
[11:28:11] *** Joins: Enissay (~Enissay@user/enissay)
[11:30:25] <tsujp> what is /comm? Googling `"comm"` I get results for a local bank, googling `"/comm" -commonwealth` shows still nothing related
[11:30:44] <emanuele6> # ls /proc/self
[11:30:49] <shbot> emanuele6: auxv        exe        mem         oom_adj        smaps         task
[11:30:49] <shbot> emanuele6: clear_refs  fd         mountinfo   oom_score      smaps_rollup  timerslack_ns
[11:30:49] <shbot> emanuele6: etc... ( http://ix.io/17vC )
[11:31:52] <tsujp> thanks
[11:32:03] <emanuele6> # ps -o comm= "$$"; echo -n hi > /proc/self/comm; ps -o comm= "$$"
[11:32:05] <shbot> emanuele6: bash
[11:32:05] <shbot> emanuele6: hi
[11:37:18] *** Joins: shad (~shad@user/shad)
[11:40:33] *** Quits: frostwork (~frostwork@user/frostwork) (Quit: Leaving)
[11:41:18] *** Joins: sdu (~doo@185.44.146.64)
[11:41:25] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[11:43:13] *** Quits: potamides (~amnifiliu@KH105203.karlshof.wh.tu-darmstadt.de) (Ping timeout: 265 seconds)
[11:45:27] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[11:49:13] *** Joins: Mo (~Mo@dynamic-095-116-078-040.95.116.pool.telefonica.de)
[11:49:59] *** Quits: terrorjack (~terrorjac@ec2-13-37-149-154.eu-west-3.compute.amazonaws.com) (Ping timeout: 265 seconds)
[11:53:07] *** Quits: Baggypants (~baggypant@2001:470:1f09:349::baad:daad) (Ping timeout: 252 seconds)
[11:54:13] *** Joins: eem (~eem@user/eem)
[11:56:24] *** Joins: waxfire4 (~waxfire@65.119.2.240)
[11:56:56] *** Quits: nabaiste^ (~nabaiste@68.101.50.106) (Ping timeout: 252 seconds)
[11:57:22] *** Quits: waxfire (~waxfire@65.119.2.240) (Ping timeout: 252 seconds)
[11:57:22] *** waxfire4 is now known as waxfire
[11:57:30] *** Joins: Huy[m] (~huyngoenv@2001:470:69fc:105::dbc7)
[11:59:18] *** Joins: nabaiste^ (~nabaiste@68.101.50.106)
[12:00:14] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 252 seconds)
[12:01:35] *** Joins: extern (~archer@37.142.172.123)
[12:02:20] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:04:26] *** Joins: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net)
[12:08:46] <Soliton> osse: "The parameters argc and argv and the strings pointed to by the argv array shall be modifiable by the program, and retain their last-stored values between program startup and program termination."
[12:13:06] <osse> Soliton: interesting. thanks.
[12:14:16] *** Quits: eem (~eem@user/eem) (Ping timeout: 245 seconds)
[12:15:10] <izabera> wtf you can write to /proc/pid/comm
[12:15:23] <osse> The initial values are laid out right next to eachother in memory, but I suppose they don't have to be
[12:15:38] <izabera> # echo -n 01234567890123456789 > /proc/self/comm; ps -o comm= "$$"
[12:15:40] <shbot> izabera: 012345678901234
[12:15:44] *** Joins: ccl (ccl@shell.xshellz.com)
[12:15:48] <izabera> man does this really work
[12:15:51] <izabera> i can't believe it
[12:16:37] <izabera> trying a thing
[12:18:39] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[12:19:09] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[12:19:52] <izabera> it works and PR_GET_NAME returns that
[12:19:56] <izabera> i had no idea
[12:20:04] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[12:20:41] *** Joins: potamides (~amnifiliu@KH105203.karlshof.wh.tu-darmstadt.de)
[12:23:20] <Soliton> osse: i mean it's another question how useful it is. it's all just in your process' memory. maybe if you really want to save space...
[12:23:23] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[12:26:28] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[12:33:19] *** Joins: sublim20 (~sublim20@user/sublim20)
[12:33:25] *** Quits: sublim20 (~sublim20@user/sublim20) (Remote host closed the connection)
[12:34:26] <earnestly> izabera: I use this to name various backgrounded functions to keep track of them in ps/top/htop, etc
[12:35:29] *** Joins: legola (~legola@46.235.100.27)
[12:35:35] *** Joins: Baggypants (~baggypant@cpc94362-ward12-2-0-cust376.10-2.cable.virginm.net)
[12:41:12] *** Joins: eem (~eem@user/eem)
[12:42:03] *** Joins: Ad1Tech_IT (~Ad1Tech@193.218.151.167.static.telsat.wroc.pl)
[12:43:11] *** Quits: Ad1Tech (~Ad1Tech@h104101.man.tk-internet.pl) (Ping timeout: 246 seconds)
[12:43:43] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 252 seconds)
[12:44:10] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[12:45:43] *** Joins: WinterStar (~IceLight@user/icelight)
[12:49:24] *** Joins: _Ad1Tech_ (~Ad1Tech@h104101.man.tk-internet.pl)
[12:51:59] *** Quits: Ad1Tech_IT (~Ad1Tech@193.218.151.167.static.telsat.wroc.pl) (Ping timeout: 265 seconds)
[12:54:33] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[12:55:12] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[12:55:39] *** Joins: xx (~xx@user/xx)
[12:59:56] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[13:04:40] *** Joins: Namarrgon (~Namarrgon@archlinux/op/Namarrgon)
[13:04:43] *** Joins: wuseman (~wuseman@81-231-55-35-no68.tbcn.telia.com)
[13:04:43] *** Quits: wuseman (~wuseman@81-231-55-35-no68.tbcn.telia.com) (Changing host)
[13:04:43] *** Joins: wuseman (~wuseman@user/wuseman)
[13:04:52] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[13:05:02] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 260 seconds)
[13:05:35] *** Joins: pj (~pj@ghettoforge/pj)
[13:06:03] *** Quits: wuseman (~wuseman@user/wuseman) (Remote host closed the connection)
[13:06:19] *** Quits: Mo (~Mo@dynamic-095-116-078-040.95.116.pool.telefonica.de) (Read error: Connection reset by peer)
[13:08:04] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[13:08:11] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[13:11:42] *** Quits: frojnd (~frojnd@user/frojnd) (Quit: WeeChat 2.3)
[13:12:50] *** Quits: kyr (~kyr@167.71.50.12) (Quit: Lost terminal)
[13:13:09] *** Joins: kyr (~kyr@167.71.50.12)
[13:16:08] *** Quits: tangy (~tangy@user/tangy) (Ping timeout: 252 seconds)
[13:22:27] *** Joins: terrorjack (~terrorjac@2a05:d012:f4:f400:3981:7d7e:56ee:2dd9)
[13:23:02] *** Joins: rcernin_ (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[13:23:13] *** Joins: Mo (~Mo@dynamic-095-116-078-040.95.116.pool.telefonica.de)
[13:23:26] *** Joins: dmr_ (~rdumitru@109.166.194.99)
[13:23:43] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 252 seconds)
[13:24:01] *** Joins: thiras (~thiras@user/thiras)
[13:24:22] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 265 seconds)
[13:24:41] *** Quits: dmr (~rdumitru@109.166.194.99) (Ping timeout: 245 seconds)
[13:26:39] *** Joins: han-solo (~hanish@user/han-solo)
[13:26:50] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[13:27:23] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[13:28:14] *** Quits: dre (~dre@2001:8003:c932:c301:4390:76e3:18b:dad4) (Ping timeout: 265 seconds)
[13:28:36] *** Quits: dmr_ (~rdumitru@109.166.194.99) (Quit: WeeChat 3.2.1)
[13:28:41] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:32:35] *** Quits: eem (~eem@user/eem) (Ping timeout: 265 seconds)
[13:33:35] *** Quits: Mo (~Mo@dynamic-095-116-078-040.95.116.pool.telefonica.de) (Quit: Leaving)
[13:40:46] *** Quits: sinaowolabi_ (~SinaOwola@102.134.114.1) (Ping timeout: 252 seconds)
[13:42:25] *** Joins: sinaowolabi_ (~SinaOwola@102.134.114.1)
[13:43:12] *** Joins: seninha (~seninha@user/seninha)
[13:44:15] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[13:50:57] *** Quits: rcernin_ (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 265 seconds)
[13:51:55] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[13:52:36] *** Quits: _Ad1Tech_ (~Ad1Tech@h104101.man.tk-internet.pl) (Ping timeout: 245 seconds)
[13:53:10] *** Joins: Hackerpcs (~user@user/hackerpcs)
[13:58:35] *** Joins: arinov (~arinov@213.194.126.155)
[13:58:48] *** Joins: tobybl_ (~tobybl@31.111.35.255)
[14:00:15] *** Joins: fdan (~fdan@103.215.168.1)
[14:01:07] *** Quits: tobybl (~tobybl@31.111.35.255) (Ping timeout: 240 seconds)
[14:01:13] *** Joins: eem (~eem@user/eem)
[14:01:46] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[14:01:52] *** Joins: Ad1Tech (~Ad1Tech@h104101.man.tk-internet.pl)
[14:01:55] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[14:03:53] *** Joins: cdown_ (~cdown@163.114.131.1)
[14:05:42] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[14:06:37] *** Quits: cdown (~cdown@89.32.122.5) (Ping timeout: 252 seconds)
[14:06:43] *** cdown_ is now known as cdown
[14:08:07] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Ping timeout: 240 seconds)
[14:08:22] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: SO LONG SUCKERS!)
[14:08:23] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[14:08:54] *** Joins: frostwork (~frostwork@user/frostwork)
[14:11:19] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[14:12:34] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[14:14:23] *** Joins: smorgasbord (buggy@user/smorgasbord)
[14:16:07] <smorgasbord> Hello, can anyone help me understand why this little snippet I have in my bashrc doesn't work as expected?
[14:16:16] <smorgasbord> for file in ${files[@]}; do
[14:16:18] <smorgasbord>  [[ -f $file ]] && echo $file exists
[14:16:20] <smorgasbord> done
[14:16:34] <lopid> !qefe
[14:16:34] <greybot> "$Quote" "$Every" "$Fucking" "$Expansion"
[14:16:43] <smorgasbord> Here files is an array of filenames, some of which begin with "~/" and some of which don't"
[14:16:51] *** Quits: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:17:40] *** Quits: wwilly (~wwilly@cpc92794-cmbg19-2-0-cust589.5-4.cable.virginm.net) (Ping timeout: 252 seconds)
[14:17:51] <smorgasbord> quoting the expansions doesn't help greybot :(
[14:18:05] *** Quits: UnnamedBeer (~UnnamedBe@231.red-83-41-235.dynamicip.rima-tde.net) (Quit: WeeChat 2.3)
[14:18:19] *** Joins: UnnamedBeer (~UnnamedBe@231.red-83-41-235.dynamicip.rima-tde.net)
[14:18:28] <smorgasbord> it doesn't report "file exists" for files like `~/.env`
[14:18:48] <smorgasbord> (though they definitely exist)
[14:19:49] *** Joins: sublim20 (~sublim20@user/sublim20)
[14:21:19] <pj> # files=(foo "bar baz" biz); touch "${files[@]}"; ls; for file in ${files[@]}; do [[ -f $file ]] && echo $file exists; done
[14:21:21] <shbot> pj: bar baz  biz  foo
[14:21:21] <shbot> pj: foo exists
[14:21:21] <shbot> pj: biz exists
[14:21:28] <Soliton> where is the ~ specified?
[14:21:31] <pj> that's why you need to quote ^^^^^
[14:22:05] <Soliton> sounds like you expect the tilde to be expanded somewhere where it is not.
[14:22:41] <pj> # files=(foo "bar baz" biz); touch "${files[@]}"; ls; for file in ${files[@]}; do if [[ -f $file ]]; then echo "$file exists"; else echo "$file does not exist"; fi; done
[14:22:48] <shbot> pj: bar baz  biz  foo
[14:22:48] <shbot> pj: foo exists
[14:22:48] <shbot> pj: etc... ( http://ix.io/3A7J )
[14:22:50] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[14:24:09] <pj> anyways, you *do* need to quote, but your issue is that ~ is expanded before variables are expanded.
[14:25:38] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[14:25:56] <pj> so bash sees $file, doesn't see any "~" there and moves on, then it expands $file to ~/.name and ends up looking for a directory that is literally named "~".
[14:25:57] <smorgasbord> I see the need for quoting in general pj, only reason I didn't in this case is that I *know* that the files don't have spaces or any other problematic characters in their names
[14:26:32] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[14:26:38] <osse> ~ only has a special meaning when unquoted at the start of a string
[14:26:41] <pj> smorgasbord: you still should be quoting as a rule, you never know when your code will be expanded or used where it is needed and it *never* hurts to quote properly.
[14:27:05] * smorgasbord gives pj a thumbs up
[14:27:10] <osse> # files=( a b ~/.env1 "~/.env2" ); echo "${files[@]}"
[14:27:12] <shbot> osse: a b /root/.env1 ~/.env2
[14:27:35] *** Joins: Crescendo (~Crescendo@user/crescendo)
[14:27:44] *** Quits: unixman_home (~unixman2@37-220-137-216.mtaonline.net) (Remote host closed the connection)
[14:27:44] <smorgasbord> I had quoted the filenames during array delcaration
[14:27:50] <osse> literal string, I should say
[14:28:02] *** Joins: unixman_home (~unixman2@37-220-137-216.mtaonline.net)
[14:28:17] <pj> smorgasbord: yeah, well if you wanted ~ to be expanded that's probably wher eyou should not have quoted.
[14:28:24] <Soliton> !~
[14:28:24] <greybot> http://bash-hackers.org/wiki/doku.php/syntax/expansion/tilde $HOME may be easier to use inside ""s as ~ won't expand when double quoted.
[14:28:46] <pj> right, I tend to use $HOME in scripting, as a rule.
[14:28:58] <pj> it just works in a lot of places where ~ does not.
[14:29:10] <smorgasbord> hmm, thanks osse pj soliton
[14:29:25] <pj> of course, it gets harder if you want something like ~foo/bar
[14:29:40] <smorgasbord> unquoting the array does fix it, but I think using $HOME might be a better solution
[14:29:50] *** Gooey is now known as gooey
[14:30:03] <smorgasbord> since this is a tiny script I'll just leave a comment as a note if I ever need to expand it, and settle for unquoted filenames in the array
[14:30:11] <pj> smorgasbord: right, it is, and do quote elsewhere.
[14:30:42] <pj> all you have to do is: "${files[@]}' and echo "$file ..."
[14:30:54] <pj> errrr: "${files[@]}"
[14:31:05] <pj> you would seriously rather add a comment than do that?
[14:31:14] *** gooey is now known as Gooey
[14:31:34] <Bilge> Why, if you do `set +x; echo foo` does it sometimes print `+ set +x\nfoo` but sometimes it prints foo first (`foo\n+ set +x`)?
[14:31:49] <osse> you can also do ~/"quoted name"
[14:32:42] <Soliton> Bilge: it should never do the latter.
[14:33:46] <Bilge> Well, it does, at least when running over ssh relay to a remote host (ssh host bash -s <<<"$script")
[14:34:08] <Bilge> But only sometimes
[14:34:26] <Bilge> Is there any way to suppress `set +x` output? `>&- set +x` doesn't affect it
[14:34:39] <smorgasbord> pj: I'm dumb X/
[14:35:02] <Soliton> perhaps only turn set -x on in a subshell.
[14:35:21] *** Joins: n4dir (~user@i577BC875.versanet.de)
[14:35:28] <Bilge> Ah heh. I'm doing the inverse, just turning it off in a subshell
[14:35:45] <Soliton> why are you using -s there?
[14:35:47] <Bilge> Mainly because I want it on for most of the script
[14:36:02] <Bilge> I dunno, because I thought that's what you're supposed to do lul
[14:36:19] <pj> { set +x; } 2>/dev/null
[14:36:55] <Bilge> pj: probably isn't on by default
[14:37:02] <pj> # set -x; set +x
[14:37:04] <shbot> pj: + set +x
[14:37:15] <pj> # set -x; { set +x; } 2>/dev/null
[14:37:17] <shbot> pj: no output
[14:38:18] <pj> Bilge: that was in answer to this question: [2021-09-28 00:04:26] <Bilge> Is there any way to suppress `set +x` output? `>&- set +x` doesn't affect it
[14:38:31] <Bilge> # set -x; { set +x; } 2>&-
[14:38:32] <shbot> Bilge: no output
[14:38:38] <pj> the answer is: { set +x; } 2>/dev/null
[14:38:48] <pj> that's how you supress the output when turning it off.
[14:38:50] <Soliton> it's usually nicer to ignore output then to fail the write.
[14:39:39] <Bilge> It doesn't work for me over remote ssh
[14:39:46] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[14:40:05] *** Joins: Crescendo (~Crescendo@user/crescendo)
[14:40:13] <Soliton> perhaps you're doing something wrong.
[14:40:23] <Bilge> # set -x; ( set +x; ) 2>&-
[14:40:24] <shbot> Bilge: no output
[14:40:32] <Soliton> useless
[14:40:35] <Bilge> # set -x;set +x 2>&-;
[14:40:36] <shbot> Bilge: + set +x
[14:40:49] <Bilge> I wasn't wrapping the command
[14:40:53] <Bilge> Not sure why you need to
[14:41:13] <pj> because the output you're supressing is not coming from the set command itself
[14:41:21] <pj> it's coming from bash
[14:41:32] *** Joins: sublim20 (~sublim20@user/sublim20)
[14:42:07] <pj> it's going to be useless to wrap it in (), though
[14:42:16] <pj> you need to wrap it in {}, like I said.
[14:42:30] <Bilge> It's also weird that you can only suffix the redirect
[14:42:39] <pj> really I give you the exact answer to the question you're asking and you try to do it 10 other ways.
[14:42:39] <Bilge> # set -x; 2>&- { set +x; }
[14:42:41] <shbot> Bilge: bash: syntax error near unexpected token `}'
[14:43:00] <Bilge> Yes, it's almost as if I want to explore the solution to understand it better
[14:43:36] <Soliton> that's how compound commands work. you can't put the redirection anywhere there.
[14:43:47] <pj> okay, well I guess the best way I can explain it is that if you do: foo 2>/dev/null then you're redirecting output from the foo command...
[14:44:18] <pj> but if you do { foo; } 2>/dev/null then you're also redirecting the output from anything that bash does in relation to the foo comand.
[14:44:48] <pj> so in this case bash is outputting your commands because set -x is set, it's not the set command that sends the output, it's bash.
[14:45:05] <pj> so you have to redirect more than just set, you have to redirect everything that bash does in relation to set.
[14:45:26] <pj> I'm sure there's a better way to explain that, heh.
[14:45:35] <Bilge> lel
[14:45:39] <Bilge> Yes I get it
[14:46:11] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[14:46:12] <pj> now the reason you can't do it with () is because you're then running the set +x in a subshell and as soon as that subshell exits the -x will revert.
[14:46:31] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[14:46:36] <pj> so you have to do it with {} which groups the command but doesn't run it in a subshell
[14:46:46] <Bilge> lol yes I just tried that and figured as much :^)
[14:46:48] <Bilge> Thanks
[14:47:23] *** Joins: Ad1Tech_IT (~Ad1Tech@h104101.man.tk-internet.pl)
[14:47:24] <Bilge> It seems there really is only one rigid solution with little flexibility in approach or syntax
[14:47:27] <pj> also I think there's a difference between &- and /dev/null
[14:47:41] <Bilge> There is, as Soliton said. One closes the pipe and the other just redirects it
[14:47:41] <pj> &- actually closes the fd, I think
[14:47:46] <Bilge> But in practical terms there is no difference
[14:47:57] <Bilge> One is just more terse
[14:47:57] <pj> /dev/null keeps it open but just directs the output to /dev/null
[14:48:48] <pj> well, yes, there is.  When you close a FD and then try to output to it, you get a signal that if left uncaught can kill your script.
[14:48:58] <Soliton> in practical terms there is a difference if the command cares whether the write works or not.
[14:49:04] <pj> ...I think
[14:49:29] <Soliton> the write fails. not sure what signal stuff you mean.
[14:49:34] <pj> so /dev/null actually leaves the FD open but just dumps everything output to it into the bit bucket.
[14:49:55] *** Quits: Ad1Tech (~Ad1Tech@h104101.man.tk-internet.pl) (Ping timeout: 265 seconds)
[14:50:03] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[14:50:11] <Soliton> # echo >&-; echo $?
[14:50:12] <shbot> Soliton: bash: echo: write error: Bad file descriptor
[14:50:12] <shbot> Soliton: 1
[14:50:22] <Bilge> A lot of commands throw a fit if the output pipe is closed, but generally I find well-written programs and bash commands handle it just fine
[14:50:55] <pj> well, that's your issue, you're closing stdout
[14:51:01] <Soliton> if you want them to fail then the handling is fine indeed.
[14:51:18] <pj> so the next command you run that sends to stdout will fail
[14:51:31] <pj> anyways, I have to go.
[14:51:55] <Soliton> usually when you want to ignore output you don't want the command to fail because of that.
[14:52:46] <Soliton> i suppose it's less likely for commands to fail if writing to stderr fails.
[14:53:46] *** Joins: Elodin (~weechat@user/elodin)
[14:56:16] *** Quits: frostwork (~frostwork@user/frostwork) (Quit: Leaving)
[15:00:56] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 245 seconds)
[15:04:41] *** Quits: Ad1Tech_IT (~Ad1Tech@h104101.man.tk-internet.pl) (Ping timeout: 245 seconds)
[15:07:36] *** Joins: rcernin_ (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[15:08:23] *** Joins: alzgh (~alzgh@user/alzgh)
[15:09:19] *** Quits: quazimod1 (~quazimodo@n1-40-133-145.bla1.nsw.optusnet.com.au) (Ping timeout: 252 seconds)
[15:10:36] *** Quits: extern (~archer@37.142.172.123) (Remote host closed the connection)
[15:12:00] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[15:12:42] *** Gooey is now known as gooey
[15:12:54] *** Joins: Guest6834 (~Guest@host23.190-139-78.telecom.net.ar)
[15:15:11] *** Quits: setesat (~setesat@94.4.156.220) (Quit: The Lounge - https://thelounge.chat)
[15:16:22] *** Joins: wuseman (~wuseman@90-227-27-97-no68.tbcn.telia.com)
[15:16:22] *** Quits: wuseman (~wuseman@90-227-27-97-no68.tbcn.telia.com) (Changing host)
[15:16:22] *** Joins: wuseman (~wuseman@user/wuseman)
[15:16:30] *** Joins: setesat (~setesat@94.4.156.220)
[15:18:17] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[15:19:41] *** Quits: sinaowolabi_ (~SinaOwola@102.134.114.1) (Ping timeout: 245 seconds)
[15:19:45] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Ping timeout: 265 seconds)
[15:19:48] *** gooey is now known as Gooey
[15:26:29] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[15:32:05] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[15:32:12] *** Joins: sinaowolabi (~SinaOwola@160.152.98.156)
[15:33:46] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 265 seconds)
[15:34:40] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[15:35:13] *** Joins: Crescendo (~Crescendo@user/crescendo)
[15:42:30] *** Joins: arinov (~arinov@213.194.126.155)
[15:42:59] *** Joins: extern (~archer@141.226.60.187)
[15:45:24] *** Quits: prifici (~patri@user/prifici) (Quit: Off to work or bed.)
[15:50:01] *** Joins: GuiToris (~GuiToris@user/guitoris)
[15:50:35] *** Joins: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net)
[15:50:40] *** Joins: Hazoune (~Hazoune@2001:4451:81eb:8d00:2897:3af4:6cfc:32c1)
[15:50:52] *** Quits: Hazoune (~Hazoune@2001:4451:81eb:8d00:2897:3af4:6cfc:32c1) (Changing host)
[15:50:52] *** Joins: Hazoune (~Hazoune@user/hazoune)
[15:52:17] <GuiToris> hello, I'm doing something wrong. I generate a list of files with 'shuf' and I'd like to display the first 3 items. Short version of my command is : head -n3 $(shuf -e *)  but 'head' tries to display the first 3 lines of each files
[15:52:23] <GuiToris> what should I do differently?
[15:53:29] *** Joins: frostwork (~frostwork@user/frostwork)
[15:53:34] *** Quits: eem (~eem@user/eem) (Quit: WeeChat 3.3)
[15:53:58] *** Joins: eem (~eem@user/eem)
[15:54:16] <Soliton> head reads input lines. you give it arguments. (by abusing wordsplitting and pathname expansion)
[15:54:21] <djph> GuiToris: use the correct output option of shuf(1) ?
[15:54:37] *** Joins: speckz (~speckz@2600:1700:ce0:bf00:59cf:b5ef:120f:ca9e)
[15:55:10] *** Quits: kurahaupo_ (~kurahaupo@220-245-23-126.static.tpgi.com.au) (Ping timeout: 265 seconds)
[15:55:22] <GuiToris> djph, -o write result to FILE instead of standard output ?!
[15:55:32] <djph> GuiToris: I'd have to re-read the manpage, but I think it's -c ?
[15:55:46] <djph> there should be a "limit output to count lines" or something like that
[15:56:00] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 265 seconds)
[15:56:02] <jetchisel> files=(*); shuf -e -- "${files[@]}" | head -n3   ?
[15:56:03] *** Joins: unmanbearpig (~unmanbear@user/unmanbearpig)
[15:56:46] <depesz> shuf -n3 ?
[15:56:50] <djph> oh, no, it's -n
[15:57:17] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[15:57:51] <GuiToris> shuf -n3 won't work in this case, I'd like to keep the order but display more an more paths, like in a memory game
[15:58:20] * GuiToris tries to understand what jetchisel suggested
[15:59:26] <GuiToris> files=(*) is this the place where I can specify the path? for example files=(/home/anyone/folder/*.ogg)
[15:59:28] *** Gooey is now known as gooey
[15:59:33] <GuiToris> does that make sense?
[15:59:42] <Soliton> yes, but it's entirely useless.
[15:59:55] <Soliton> unless you're going to use the varaible more than once.
[16:00:24] <Soliton> shuf -n 3 does nearly the same as piping to head -n 3 so who knows what you don't like about it.
[16:00:38] <Soliton> (infact it works better if you have files with newlines.)
[16:01:41] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 252 seconds)
[16:01:47] *** extern is now known as eaternet
[16:01:51] *** eaternet is now known as EaterNet
[16:02:04] <GuiToris> so my idea is to play more and more files, but I don't want to change the order of the files. If I just increased the -n number of shuf, I would get a totally new sequence each time
[16:02:18] <GuiToris> I thought I would shuffle the files first then just limit the output of that variable
[16:02:39] <Soliton> so you need to save the output of shuf.
[16:03:33] <Soliton> mapfile -t files < <(shuf -e *); printf '%s\n' "${files[@]:0:3}"
[16:03:52] *** Quits: mongy (~mongy@user/mongy) (Quit: WeeChat 3.2.1)
[16:04:12] <Soliton> you can repeat the printing with different lengths.
[16:04:28] <GuiToris> I always have this false impression that I can do things by myself
[16:04:32] *** Joins: wernerf (~wernerf@p200300d89f362b00bda05a47e343d701.dip0.t-ipconnect.de)
[16:04:38] *** wernerf is now known as wernerfred
[16:05:01] <GuiToris> Do I just increase this number "${files[@]:0:3}" "${files[@]:0:4}" "${files[@]:0:5}"
[16:06:25] *** Joins: wwilly (~wwilly@fw-tnat-cam4.arm.com)
[16:07:29] *** Joins: wwilly_ (~wwilly@fw-tnat-cam4.arm.com)
[16:07:46] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[16:08:50] <Hazoune> GuiToris, hey care to explain how that's work?
[16:09:12] <GuiToris> my level is low and limited, but yes sure
[16:09:15] <Hazoune> is that accessing the specific array?
[16:10:02] <GuiToris> I can't really answer to these kind of questions :/
[16:10:12] <Hazoune> okay, sorry.
[16:10:32] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[16:10:55] *** Quits: wwilly (~wwilly@fw-tnat-cam4.arm.com) (Ping timeout: 252 seconds)
[16:10:59] <GuiToris> No manual entry for mapfile, where can I look it up?
[16:11:33] <han-solo> # help mapfile
[16:11:34] <shbot> han-solo: mapfile: mapfile [-n count] [-O origin] [-s count] [-t] [-u fd] [-C callback] [-c quantum] [array] -- http://ix.io/aQ7
[16:11:48] <GuiToris> thank you
[16:14:01] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[16:14:26] <GuiToris> mapfile -t files < <(shuf -e *); printf '%s\n' "${files[@]:0:3}"   is this line creates an actual file (named files) on the disk?
[16:15:24] <han-solo> no
[16:15:59] <GuiToris> thank you, I'll keep writing my script and then show you the end result
[16:16:33] *** Joins: xiongxin (~quassel@113.116.33.5)
[16:17:24] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 265 seconds)
[16:17:33] <EaterNet> han-solo: now that's a veteran in freenode/libera
[16:17:53] *** gooey is now known as Gooey
[16:18:14] *** wwilly_ is now known as wwilly
[16:18:41] *** Quits: EaterNet (~archer@141.226.60.187) (Quit: NOT getting enough love here !!!!)
[16:21:24] <Soliton> !<(
[16:21:24] <greybot> Process Substitution: <(command) or >(command) is replaced by a FIFO or /dev/fd/* entry. Basically shorthand for setting up a named pipe. See <http://mywiki.wooledge.org/ProcessSubstitution>. Example: diff -u <(sort file1) <(sort file2)
[16:21:29] *** Quits: LoRez (~lorez@user/lorez) (Ping timeout: 252 seconds)
[16:21:29] *** Quits: ztx (~ztx@user/ztx) (Ping timeout: 252 seconds)
[16:21:34] *** Joins: Administratorte (~sq@tempest.math.colostate.edu)
[16:21:56] *** Joins: kill (~killown@user/killown)
[16:22:17] *** Quits: Hazoune (~Hazoune@user/hazoune) (Quit: Client closed)
[16:23:33] *** Quits: stevenm (~stevenm@stevenm.keele.netcentral.co.uk) (Ping timeout: 265 seconds)
[16:23:59] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[16:24:24] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[16:25:07] *** Joins: WinterStar (~IceLight@user/icelight)
[16:25:33] <funabashi> Hi can anyone be nice and help me with slipt an MAC address into ":" every second char. 002704320BD5 like 00:27:43:0B:D5
[16:25:35] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[16:26:26] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[16:26:38] *** Quits: dza (~dza@user/dza) (Ping timeout: 260 seconds)
[16:26:50] *** Quits: fdan (~fdan@103.215.168.1) (Ping timeout: 256 seconds)
[16:27:06] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Remote host closed the connection)
[16:27:20] *** Joins: daidoji (~daidoji@104-52-250-5.lightspeed.gnvlsc.sbcglobal.net)
[16:27:48] <pj> if you have a newer mapfile and GNU shuf, then: mapfile -n 3 -d '' -t files < <(shuf -e -z *); printf '%s\n' "${files[@]}"
[16:30:22] *** Quits: aaro (~aaro@user/aaro) (Ping timeout: 260 seconds)
[16:30:56] *** Quits: rcernin_ (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 245 seconds)
[16:31:43] *** Quits: NIXKnight (~NIXKnight@198.98.57.76) (Quit: bye)
[16:31:46] *** Joins: littlepython (~littlepyt@103.215.168.1)
[16:32:46] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[16:32:59] *** Joins: NIXKnight (~NIXKnight@198.98.57.76)
[16:33:04] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[16:33:14] *** Joins: stevenm (~stevenm@stevenm.keele.netcentral.co.uk)
[16:33:31] *** Gooey is now known as gooey
[16:33:32] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 250 seconds)
[16:34:32] *** Joins: sQVe (~sQVe@user/sqve)
[16:34:36] <Soliton> # var=002704320BD5; printf %s:%s:%s:%s:%s:%s "${var:0:2}" "${var:2:2}" "${var:4:2}" "${var:6:2}" "${var:8:2}" "${var:10:2}"
[16:34:38] <shbot> Soliton: 00:27:04:32:0B:D5
[16:34:54] <Soliton> you could write a loop but doesn't seem worth it.
[16:35:22] *** Joins: WinterStar (~IceLight@user/icelight)
[16:35:24] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[16:36:53] <han-solo> # fold -w 2 <<<002704320BD5 | paste -s -d':' # not the best, but fun
[16:36:55] <shbot> han-solo: 00:27:04:32:0B:D5
[16:37:39] <Soliton> if it's from a stream sed is going to be easier.
[16:37:53] <han-solo> mm
[16:39:47] *** Joins: rcernin_ (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[16:39:48] *** Quits: NIXKnight (~NIXKnight@198.98.57.76) (Quit: bye)
[16:40:06] <azidhaka> hi everyone, need help generating a random string consisting of NumberNumberNumberConsonantVowelConsonant like 329lex
[16:40:39] <han-solo> # sed 's/.\{2\}/&:/g' <<<002704320BD5 # nice
[16:40:40] <shbot> han-solo: 00:27:04:32:0B:D5:
[16:40:43] <han-solo> er
[16:40:53] *** Joins: NIXKnight (~NIXKnight@198.98.57.76)
[16:41:37] <funabashi> thanks
[16:41:46] <GuiToris> ok, this is it : https://bpa.st/raw/4QHA
[16:41:46] *** gooey is now known as Gooey
[16:41:47] <checkbot> GuiToris: I think the problem is on line 7. This expression is constant. Did you forget the $ on a variable? See 4 issues on https://shellcheck.net/?id=cb48306
[16:42:13] <GuiToris> I didn't dare to try it, I guess it's a bad code
[16:42:30] <Soliton> what is $(printf ...) for?
[16:42:31] <funabashi> sed command didnt work
[16:42:44] <funabashi> it gives ":" in the end
[16:42:55] <han-solo> no, don't use what i showed
[16:43:27] <earnestly> Wait
[16:43:39] <earnestly> Wait, this is prompting to replay a file?
[16:43:40] *** Joins: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au)
[16:44:11] *** Joins: aaro (~aaro@user/aaro)
[16:44:13] <earnestly> So it plays a sound, whatever, and then prompts if you want to reply it or continue to the next one?
[16:45:00] *** Quits: n4dir (~user@i577BC875.versanet.de) (Remote host closed the connection)
[16:45:05] <GuiToris> typo fix https://bpa.st/raw/OKQA
[16:45:10] <Soliton> it plays a shortened list and continues to play the list with one more element.
[16:45:48] <Soliton> who knows why you don't just use the array normally.
[16:46:09] <Soliton> like why ask how to print the list if you do not want to print the list?
[16:46:36] <GuiToris> mpv uses the paths
[16:46:43] <GuiToris> mpv /path/file.mp4
[16:46:44] <Soliton> exactly
[16:47:04] *** Joins: mago (~mago@87.125.59.102)
[16:47:10] <mago> hi guys
[16:47:16] <Soliton> so you want an array of arguments not a newline seperated printing.
[16:47:36] <GuiToris> I guess so
[16:47:38] <Soliton> and guess what is used to print the list...
[16:47:40] <mago> I have a list of lines with: @1 @2 and some text.
[16:47:46] *** Joins: DaNeenjah (~jake@adsl-74-230-6-204.hsv.bellsouth.net)
[16:47:51] *** Joins: dza (~dza@user/dza)
[16:47:54] <earnestly> GuiToris: This is silly, why are you doing this
[16:47:57] <mago> How do I keep a @1 and @2 but lose the text
[16:48:32] <earnestly> GuiToris: So you build a list of oggs in random order, you take the first five and then play each one with a prompt to repeat the track or continue on to the next one
[16:48:45] <Soliton> sed 's/\(@[0-9]*\).*/\1/'
[16:50:45] <mago> Soliton @1 and @2 is not only numbers it can be text too.. For instance: @MIke @john
[16:51:15] <Soliton> so write a regex according to this unknown specification.
[16:51:16] <earnestly> GuiToris: You can do all of this with mpv
[16:51:25] <Soliton> if the input is even a stream.
[16:52:01] <GuiToris> Soliton, did you mean something like https://bpa.st/raw/UFKA
[16:52:16] <Soliton> yes.
[16:52:25] <Soliton> without the syntax errors.
[16:52:43] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 252 seconds)
[16:53:06] <GuiToris> !check
[16:53:08] <checkbot> GuiToris: Line 4: Couldn't find 'done' for this 'do'. Line 6: Expected 'done' matching previously mentioned 'do'. Line 5: Did you forget to close this double quoted string?. See https://shellcheck.net/?id=cb48987 for all 7 issues.
[16:53:23] *** Quits: frostwork (~frostwork@user/frostwork) (Quit: Leaving)
[16:53:33] <Soliton> to write readable code i would suggest to indent properly, btw.
[16:53:52] <GuiToris> oh, I thought I was doing a great job with that
[16:54:19] <Soliton> well, why does the indentation not start at the start of the loop?
[16:54:33] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[16:54:52] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[16:55:23] *** Quits: legola (~legola@46.235.100.27) (Remote host closed the connection)
[16:55:29] *** Joins: seninha (~seninha@user/seninha)
[16:56:08] *** Quits: sinaowolabi (~SinaOwola@160.152.98.156) (Ping timeout: 252 seconds)
[16:56:37] *** Joins: ztx (~ztx@user/ztx)
[16:57:43] <GuiToris> something like : https://bpa.st/raw/B74A
[16:57:56] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[16:58:02] <GuiToris> does 'while' do what I want it to do?
[16:58:21] <earnestly> GuiToris: Are you doing this as a kind of homework or do you understand that mpv has things like --playlist, --shuffle, --loop-file, --keep-open, etc?
[16:58:23] <geirha> mapfile is also not a loop
[16:58:50] <geirha> indent the loop body, not the loop itself
[16:59:12] <Soliton> !pretty
[16:59:12] <greybot> "Pretty-print" your bash code: pretty() { printf 'pretty() { %s\n }; declare -f pretty' "$(cat)" | bash | sed '1d;2d;$d;s/^ //'; } ## Usage: pretty < myscript
[16:59:35] <Soliton> there is also bash --pretty-print
[16:59:43] <geirha> should probably change that to use --pretty-print
[17:00:46] <earnestly> mpv itself can also take directories and archives full of files and automatically generates a playlist
[17:01:20] <GuiToris> pretty print heavily modified the content
[17:01:33] *** Quits: MenschZwoNull (~MenschZwo@p200300c85711050069caeca619944502.dip0.t-ipconnect.de) (Remote host closed the connection)
[17:01:40] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[17:02:03] *** Parts: wernerfred (~wernerf@p200300d89f362b00bda05a47e343d701.dip0.t-ipconnect.de) ()
[17:02:32] <mago> So i have a list with lines like that one
[17:02:36] <mago> @xiomaramoso @dafnebh  Siento el Spam, pero es un puntazo la de azul pastel para la furgo😂
[17:02:52] <mago> I sant to filter the text and keep only the: @xiomaramoso @dafnebh
[17:03:11] *** Quits: rcernin_ (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 265 seconds)
[17:03:11] <earnestly> awk '{print $1, $2}'
[17:03:16] *** Gooey is now known as gooey
[17:03:28] *** Quits: kill (~killown@user/killown) (Quit: Leaving)
[17:03:35] <gnoo> mago: use [[:alnum:]] instead of [0-9] in Soliton's answer
[17:03:36] <earnestly> read -r first second _; ...
[17:03:37] *** Joins: legola (~legola@46.235.100.27)
[17:03:54] <mago> Ok, thanks gnoo
[17:04:12] <mago> Thanks Soliton
[17:04:25] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[17:04:57] <mago> Also can you help me decipher the command so I learn?
[17:04:59] <Soliton> my version just keeps the first part.
[17:05:00] <geirha> GuiToris:  bash --pretty-print yourscript > newscript
[17:05:17] <GuiToris> that's exactly what I did, but it removed
[17:05:20] <gnoo> !regex
[17:05:20] <greybot> Regular Expressions are used to *match* certain patterns in strings. They come in several flavors (BRE, ERE, PCRE, and more). Bash only supports EREs (using [[ string =~ pattern ]]). Sed uses BREs. See !ere, !bre, !pcre, http://mywiki.wooledge.org/RegularExpression
[17:05:26] <Soliton> is it always the first two words? or any word that starts with an @ or what?
[17:05:43] <mago> Any words that start with @
[17:05:45] <Soliton> you need to explain the logic you want.
[17:05:50] <GuiToris> geirha, so it removed \n-s as well as !#/bin/bash
[17:06:14] <geirha> hm, odd. I guess the pretty function is better after all then
[17:06:46] *** Joins: white5moke (~pi0xxdmqj@ip72-219-109-30.oc.oc.cox.net)
[17:07:27] <GuiToris> https://bpa.st/raw/JQQQ
[17:07:33] <GuiToris> is this better?
[17:07:54] <geirha> for should not be indented
[17:08:10] <geirha> mpv is the first line that should be indented
[17:08:40] <GuiToris> done :)
[17:08:44] *** Quits: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:08:54] <GuiToris> I'll give it a try and see what it does
[17:08:55] *** Joins: sinaowolabi (~SinaOwola@169.159.108.121)
[17:09:42] <GuiToris> wow
[17:09:44] <Soliton> # sed 's/ [^@][^ ]*\b//g' <<< '@1foo @2bar @3baz more foo bar baz'
[17:09:45] <shbot> Soliton: @1foo @2bar @3baz
[17:09:52] <Soliton> perhaps something like that.
[17:09:55] <GuiToris> it seems to be working well
[17:10:01] <GuiToris> thank you very much for your help
[17:10:10] <GuiToris> I was really unsure about 'while'
[17:10:17] <Soliton> your sed needs to support \b like GNU sed.
[17:10:38] <Soliton> perhaps better with awk.
[17:10:40] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[17:10:45] <mago> I tried: sed 's/\(@[[:alnum:]]*\).*/\1/'
[17:10:55] <mago> Is not working as intended..
[17:10:59] *** Joins: LiftLeft (~LiftLeft@66.115.145.213)
[17:11:26] <Soliton> "my version just keeps the first part."
[17:11:32] <mago> Soliton is that command for me? : sed 's/ [^@][^ ]*\b//g' <<< '@1foo @2bar @3baz more foo bar baz'
[17:11:42] <Soliton> yes.
[17:12:27] <mago> It works much better than the other one..
[17:12:57] <Soliton> solutions become better the better one explains the goal.
[17:13:30] <mago> It seems it cleans the text behind but not in front.
[17:13:46] <GuiToris> one little thing, the prompt is ugly after read. Should I append a \n?  like read -rsn 1 -p "Nicer line\n" var
[17:13:53] <Soliton> you never once have shown an example that does not start with an @.
[17:14:09] <mago> Or maybe is not that, maybe is special characters..
[17:14:22] <mago> It keeps emojis..
[17:14:38] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Remote host closed the connection)
[17:14:39] *** Joins: jkwnki (~jkwnki@p4ff31b54.dip0.t-ipconnect.de)
[17:14:39] <geirha> add printf '\n' after the read
[17:14:48] <GuiToris> will do, thank you
[17:14:55] <mago> For example that output: El!! @alvarolr_9 @adrianbayt
[17:15:13] <mago> Or that one: Gracias @ernirock @jordimontessaba
[17:15:35] <mago> Soliton is very good already but if that text in front could be cleaned too.
[17:15:44] *** Joins: node1 (~node1@user/node1)
[17:16:01] <mago> Also this output: @mypineapplehair @markluga93 😢😂
[17:16:49] <mago> Emojis are ok though.
[17:17:04] *** Joins: MenschZwoNull (~MenschZwo@p200300c85711050069caeca619944502.dip0.t-ipconnect.de)
[17:17:34] *** Joins: gas51627 (uid91066@id-91066.helmsley.irccloud.com)
[17:17:53] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[17:19:23] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:20:54] *** Joins: Tireos (~Tireos@91.223.118.131)
[17:21:15] <mago> Will that clean the text in front too? : sed 's/ [^@][^ ]*\b//g' <<< 'more foo bar baz @1foo @2bar @3baz more foo bar baz'
[17:22:40] <han-solo> very easy to test :)
[17:22:45] <mago> Lol, no it doesnt
[17:23:35] <gnoo> this works but it seperates all @s in seperate lines: grep -Eo '@[[:alnum:]]+'
[17:24:20] <Soliton> # sed 's/ [^@][^ ]*//g;s/^[^@][^ ]* //' <<< 'more foo bar baz @1foo @2bar @3baz more foo bar baz'
[17:24:20] <mago> Mmm, ok, how could i group them 2 in each line after that command?
[17:24:22] <shbot> Soliton: @1foo @2bar @3baz
[17:24:51] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[17:25:02] *** Quits: nabaiste^ (~nabaiste@68.101.50.106) (Remote host closed the connection)
[17:25:54] <mago> Thats very good Soliton thanks
[17:26:14] <mago> I like yours too gnoo
[17:26:34] <mago> But then i need to group them by 2 @foo @2bar in each line
[17:26:36] *** Joins: LoRez (~lorez@user/lorez)
[17:26:42] <GuiToris> this is just a convenience thing, I thought I would exit from script by hitting q on the keyboard. Is this good? https://bpa.st/raw/KSOQ
[17:26:50] *** Quits: Tireos (~Tireos@91.223.118.131) (Quit: Leaving)
[17:27:03] <GuiToris> according to shellcheck the syntax is okay
[17:27:04] <GuiToris> !check
[17:27:06] <checkbot> GuiToris: Looks good to me
[17:27:07] *** Joins: Tireos (~Tireos@91.223.118.131)
[17:27:15] <Soliton> weird indentation but sure.
[17:27:25] <mago> Aso, what is a good regex resource to try an decipher the commands? Like a dictionary or something.. gnoo Soliton
[17:27:37] <Soliton> !regex
[17:27:37] <greybot> Regular Expressions are used to *match* certain patterns in strings. They come in several flavors (BRE, ERE, PCRE, and more). Bash only supports EREs (using [[ string =~ pattern ]]). Sed uses BREs. See !ere, !bre, !pcre, http://mywiki.wooledge.org/RegularExpression
[17:27:39] *** Quits: Tireos (~Tireos@91.223.118.131) (Remote host closed the connection)
[17:27:41] <GuiToris> Soliton, thanks, I'll give it a go then
[17:27:49] *** Joins: Tireos (~Tireos@91.223.118.131)
[17:28:14] <Soliton> not particularly complex regex there. just need to know how bracket expressions work.
[17:28:28] <Soliton> [^@] matches any character but an @.
[17:28:51] <GuiToris> oh, q doesn't always work :/ I need to reconsider this
[17:29:25] <gnoo> GuiToris: when you press r, it plays from the start of files array till the current song. is that what you want? eg, if you're on song 2, pressing r plays song 1 and then song 2
[17:29:26] <Soliton> you need to handle it in the loop as well if you want that.
[17:29:29] *** Joins: lopo (~lopo@121.132.251.103)
[17:30:05] <GuiToris> gnoo, yes :) I've tried that part, it works well
[17:30:16] <GuiToris> Soliton, thank you, I'm thinking
[17:30:42] <GuiToris> that's kind of problematic
[17:31:38] <Soliton> !confirm
[17:31:38] <greybot> confirm() { local ans IFS=; while read -rp "$1" -n1 ans; do printf '\n'; case $ans in [Yy]) return 0;; [Nn]) return 1;; esac; done; }; ## Usage: if confirm "Are you sure? "; then ...
[17:32:20] <Soliton> write a function to not have to repeat the same code.
[17:32:36] *** Quits: shad (~shad@user/shad) (Ping timeout: 245 seconds)
[17:32:44] <GuiToris> ok, I'll try
[17:33:29] <Soliton> though you could also just put the mpv call after the question in the loop so you don't need the initial check.
[17:34:07] <Soliton> or wait you start with playing anyway... no clue why you wrote it like that.
[17:35:05] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[17:36:54] <GuiToris> if I put mpv after read, then it would start with a question, wouldn't it?!
[17:37:23] *** Quits: sinaowolabi (~SinaOwola@169.159.108.121) (Ping timeout: 252 seconds)
[17:37:37] <Soliton> yes. just leave the loop as it is and remove the one iteration you put before it for whatever reason.
[17:38:10] <GuiToris> but that's not desired, I would like to hear the audio first
[17:38:28] <Soliton> that is what your loop already does...
[17:38:43] <GuiToris> ok, let me think it over
[17:39:04] *** Joins: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net)
[17:39:07] *** gooey is now known as Gooey
[17:39:24] <GuiToris> if I remove the first read, case won't work anymore
[17:39:41] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[17:39:42] <Soliton> case will work just fine on an empty string.
[17:39:53] <Soliton> you can also initialise ans to whatever you want.
[17:40:09] <GuiToris> oh, yes
[17:40:10] *** Quits: ted-ious (~ted-ious@bitcoinshell.mooo.com) (Ping timeout: 252 seconds)
[17:41:01] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 265 seconds)
[17:41:29] <Soliton> really should just make it a while true loop.
[17:41:37] <earnestly> mpv can loop
[17:42:04] <earnestly> Not only each track but the playlist as a whole
[17:42:09] <Soliton> i doubt it has the given logic built-in.
[17:42:28] <earnestly> It has the ability to toggle looping and to pause at the end of a track
[17:42:31] <Soliton> they don't want to play the complete list.
[17:42:39] *** Joins: WinterStar (~IceLight@user/icelight)
[17:42:44] <earnestly> So to 'replay' the track you'd hit 'l' and space
[17:43:00] <GuiToris> I'd like to play the whole list from the very beginning
[17:43:05] *** Joins: knstn (~knstn@ppp-94-66-57-248.home.otenet.gr)
[17:43:09] *** Joins: odoood (~odoood@2601:c8:c003:a550::2)
[17:43:41] <GuiToris> Soliton, this is what I did https://bpa.st/raw/A3JQ
[17:43:45] <earnestly> (If you really want the exact same interaction there is the lua scripting api but that's a bit much perhaps)
[17:43:54] <GuiToris> it exists
[17:43:57] <GuiToris> only r works
[17:44:00] *** Joins: iomari891 (~iomari891@105.112.138.38)
[17:44:32] <GuiToris> I guess I should do something with *)
[17:44:49] *** Joins: shad (~shad@user/shad)
[17:45:10] <gnoo> https://bpa.st/raw/A7YQ
[17:45:12] <gnoo> !check
[17:45:13] <checkbot> gnoo: Looks good to me
[17:45:45] <Soliton> the for loop was the important part.
[17:46:13] <gnoo> it's done using shuf -n 5 and a counter
[17:46:15] <gas51627> hi all
[17:46:37] <GuiToris> I'll try gnoo's version
[17:46:38] <earnestly> GuiToris: If you respond with something other than r or q then it'll loop through the remaining for loop, doing nothing (with *) explicitly, and implicitly if you don't include that)
[17:48:37] <GuiToris> gnoo, thank you, this is what I wanted! :)
[17:50:21] *** Joins: sinaowolabi_ (~SinaOwola@102.134.114.1)
[17:51:00] <Soliton> i guess the goal changed.
[17:51:36] <gas51627> could someone explain to me what do the last 2 sentences in the last paragraph from the bash manual mean: https://pastebin.com/Y0iCYuey
[17:51:36] <pasteban> Paste is available without ads on https://pastebin.com/raw/Y0iCYuey
[17:52:23] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[17:52:40] <gas51627> `mycommand $(mysubstitution)` does it mean that the result of `mycommand` will be always the exit code of the `mysubstitution`. Surely not.
[17:52:51] <gas51627> but that's how I understand those 2 sentences
[17:53:10] <Strykar> shouldn't "&>" redirect both stdout and stderr? or does it have to be "cmd >>file.txt 2>&1"
[17:53:31] <earnestly> Soliton: Even better would be to use the ability to pause at the end of playback then bind a key to rewind (seek 0 absolute)
[17:53:47] <earnestly> So then the option is either key to replay, enter to go to next
[17:54:26] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 252 seconds)
[17:56:12] <Soliton> !&> > Strykar
[17:56:12] <greybot> Strykar: &> is a bash-specific feature. «&>file» is equivalent to «>file 2>&1». There is no &>> until Bash4. Use «>>file 2>&1» instead. We recommend not using &> or &>> in scripts, because it will break some valid scripts (see !badredir), and is an unintuitive syntax for beginners.
[17:56:45] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[17:57:44] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Ping timeout: 252 seconds)
[17:58:03] <Soliton> gas51627: those sentences are about the case where no command name results.
[17:58:19] *** Joins: wstrnr (~wstrnr@user/wstrnr)
[17:58:21] <Soliton> # $(exit 42); echo $?
[17:58:23] <shbot> Soliton: 42
[17:58:39] <Strykar> right, seems it does not work with Gnome's autostart. will try it the old way, bash version 5.1.8
[17:59:03] <Soliton> sounds like Gnome's autostart does not use bash.
[17:59:22] <GuiToris> Soliton, the goal didn't change, I might have not been able express myself clearly :)
[17:59:31] <wstrnr> what Soliton has shown also works with var=$(...)
[18:00:30] <wstrnr> # what_printed="something $(false   this is failure) blah" || echo "this was a failure.  yet what_printed is '$what_printed'"
[18:00:32] <shbot> wstrnr: this was a failure.  yet what_printed is 'something  blah'
[18:01:01] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[18:01:27] <gas51627> Soliton: right
[18:01:35] <gas51627> it makes sense
[18:01:41] *** Joins: ChmEarl (~chmearl@user/chmearl)
[18:01:43] <wstrnr> it's related to the  local a=$(...)  pitfall.  if you use the "local" command, exit code of the command inside $(...) will be lost.  it'a known pitfall that is listed on pitfalls page
[18:02:29] <wstrnr> (to solve it do   local a;  and a=$(...) || die ...   as 2 separate commands)
[18:04:12] *** sgn_ is now known as sgn
[18:04:22] *** Gooey is now known as gooey
[18:06:42] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Quit: elastic_dog)
[18:07:42] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[18:10:56] *** Quits: GuiToris (~GuiToris@user/guitoris) (Ping timeout: 252 seconds)
[18:11:27] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[18:11:40] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Quit: azidhaka)
[18:12:21] *** Quits: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:15:27] *** Joins: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net)
[18:16:44] <mago> How can i group lines by two in a list I have with bash?
[18:17:08] *** Quits: barjac (~quassel@94.197.175.108.threembb.co.uk) (Ping timeout: 265 seconds)
[18:17:58] *** Quits: af (~af@awalgarg.me) (Ping timeout: 252 seconds)
[18:19:08] *** Quits: emg (~emg@cpe-70-93-247-186.natsow.res.rr.com) (Killed (NickServ (GHOST command used by emg_!~emg_@cpe-70-93-247-186.natsow.res.rr.com)))
[18:19:46] <tirnanog> as a verb, group might require a little more context.
[18:20:16] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[18:21:06] *** Joins: emg (~emg@cpe-70-93-247-186.natsow.res.rr.com)
[18:22:45] <mago> i have a large list with 1 element per line.. I would like 2 elements per line..
[18:23:01] <mago> so the  list goes:
[18:23:02] <mago> abra
[18:23:03] <gas51627> another question, why does `x=$(unexisting_command)` result in code 127, but `echo $(unexisting_command)` result in code 0
[18:23:09] <mago> cada
[18:23:10] <mago> bra
[18:23:12] <mago> coffee
[18:23:17] <mago> And I would liket:
[18:23:22] <mago> abra cada
[18:23:25] <mago> bra coffee
[18:23:48] <mago> Im googlint, but havent come up with the answer yet.
[18:23:57] <tirnanog> # array=({1..6}); n=0; for i in "${!array[@]}"; do if (( ++n % 2 == 0 )); then array[i-1]+=" ${array[i]}"; unset 'array[i]'; fi; done; printf '%s\n' "${array[@]}"
[18:23:58] <shbot> tirnanog: 1 2
[18:23:58] <shbot> tirnanog: 3 4
[18:23:58] <shbot> tirnanog: 5 6
[18:24:29] <jetchisel> # printf '%s\n' {1..6} | pr -t2s' '
[18:24:31] <shbot> jetchisel: 1 4
[18:24:31] <shbot> jetchisel: 2 5
[18:24:31] <gas51627> gas51627: I am trying to find a logic here, but so far I cannot find in the bash documenation any leads, except that $(...) is executed in the subshell
[18:24:31] <shbot> jetchisel: 3 6
[18:24:51] <izabera> # printf %s\\n {1..6} | paste - - -d' '
[18:24:53] <shbot> izabera: 1 2
[18:24:53] <shbot> izabera: 3 4
[18:24:53] <shbot> izabera: 5 6
[18:24:56] <mago> tirnanong is that command for me?
[18:24:57] <tirnanog> jetchisel: thanks. I never remember that utility for some reason.
[18:24:59] <jetchisel> # printf '%s\n' {1..6} | pr -ta2s' '
[18:25:00] <shbot> jetchisel: 1 2
[18:25:00] <shbot> jetchisel: 3 4
[18:25:00] <shbot> jetchisel: 5 6
[18:25:07] <izabera> didn't know that shbot even had pr
[18:25:18] * jetchisel pats shbot ^^
[18:25:23] <mago> tirnanog is that command for me? # array=({1..6}); n=0; for i in "${!array[@]}"; do if (( ++n % 2 == 0 )); then array[i-1]+=" ${array[i]}"; unset 'array[i]'; fi; done; printf '%s\n' "${array[@]}"
[18:25:26] <izabera> is it new?
[18:25:49] <tirnanog> mago: well, look at what happened in the channel since I started talking and you'll probably figure it out.
[18:25:50] <jetchisel> No idea, I have played with shbot and pr for a long time ^^
[18:26:09] <mago> lol
[18:26:21] <jetchisel> tirnanog: Yeah it was an old utility from ancient Unix times I guess.
[18:26:53] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 252 seconds)
[18:27:11] *** Quits: shad (~shad@user/shad) (Ping timeout: 245 seconds)
[18:27:18] *** Joins: keypusher (keypusher@user/keypusher)
[18:27:20] <mago> Ok tirnanog, but the array has 40000 elements
[18:27:34] *** Joins: sublim20 (~sublim20@user/sublim20)
[18:28:20] <tirnanog> if you don't want to manipulate the array directly, consider one of the other two solutions that was presented (paste is a standard utility).
[18:28:37] *** Quits: Tireos (~Tireos@91.223.118.131) (Quit: Leaving)
[18:29:49] <jetchisel> # printf '%s\n' $'g/.\{1,\}/s/$/ /\\\n;+1j' %p Q | ed -s <(printf '%s\n' {1..6})
[18:29:56] <shbot> jetchisel: ?
[18:29:57] <shbot> jetchisel: 1
[18:29:57] <shbot> jetchisel: etc... ( http://ix.io/3A8W )
[18:30:03] <jetchisel> woops \0/
[18:30:51] *** Quits: Strom (strom@fedora/strom) ()
[18:31:46] <Soliton> # printf '%s\n' $'g/.\{1,\}/s/$/ /\\\n;+1j' ,p wq | ed -s <(printf '%s\n' {1..6})
[18:31:50] <shbot> Soliton: ?
[18:31:50] <shbot> Soliton: 1
[18:31:50] <shbot> Soliton: etc... ( http://ix.io/3A8W )
[18:32:02] *** Joins: NotIndonesian (znc@Indonesians.are.sick.bnc.HUNTERS.thats.bad.mn)
[18:32:29] <jetchisel> No dide ^^
[18:32:34] <jetchisel> s/dide/dice
[18:32:56] *** Joins: Strom (strom@fedora/strom)
[18:33:28] <tirnanog> it's an old version of GNU ed. perhaps it doesn't like operating on a process substitution or such.
[18:33:48] *** Quits: lopo (~lopo@121.132.251.103) (Quit: lopo)
[18:34:00] *** gooey is now known as Gooey
[18:34:24] <tirnanog> no, that's not the reason. hmm.
[18:34:29] <Soliton> it says "Invalid address"
[18:34:44] <Soliton> perhaps doesn't like the semicolon.
[18:34:59] *** Joins: GNUHacker (~foobar@fsf/member/GNUHacker)
[18:35:32] <wstrnr> you can "H" in the beginning of the script to see what ed doesn't like about the rest of the commands
[18:35:50] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[18:35:53] <Soliton> hence the error above.
[18:36:18] *** Joins: lavaball (felix@31.204.155.215)
[18:36:41] <wstrnr> shbot has a cool seq program.  seems somewhat useful for generating example input of this kind.  (it'a s joke program to make fun of users of this non-standard utility)
[18:38:03] <Soliton> # printf '%s\n' $'g/.\{1,\}/s/$/ /\\\n.;+1j' ,p | ed -s <(printf '%s\n' {1..6})
[18:38:05] <shbot> Soliton: 1 2
[18:38:06] <shbot> Soliton: 3 4
[18:38:06] <shbot> Soliton: 5 6
[18:38:32] <jetchisel> missing . , ok...
[18:38:48] <wstrnr> # seq 1 6 | awk 'NR % 2 { w = $0 }  NR % 2 == 0 { print w, $0 }'
[18:38:50] <shbot> wstrnr: one two
[18:38:50] <shbot> wstrnr: three four
[18:38:50] <shbot> wstrnr: five six
[18:39:49] *** Joins: xheimlich (~xheimlich@179.218.1.150)
[18:40:05] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[18:40:28] <xheimlich> when piping a command like "ping fast.com | myprogram" -- how can I make it so the whole pinging process is buffered before sending it into myprogram?
[18:41:04] *** Joins: lonewulf` (~lonewulf@user/lonewulf)
[18:41:22] <Soliton> ping fast.com > file; myprogram < file
[18:41:23] <tirnanog> you can't.
[18:41:40] <xheimlich> ok. thanks.
[18:41:41] <tirnanog> (while using a pipe).
[18:41:44] <Soliton> though ping specifically seems like an odd choice.
[18:42:02] *** Parts: GNUHacker (~foobar@fsf/member/GNUHacker) (ERC (IRC client for Emacs 28.0.50))
[18:42:20] *** Joins: richardm75 (~richardm7@2600:8801:c507:2900:d47e:286:8ca1:6c38)
[18:42:27] <Soliton> (at least usually it doesn't stop.)
[18:42:37] <tirnanog> to clarify, even if you coerced the writer into not employing line buffering, say, the buffer size of a fifo is finite so you couldn't guarantee it.
[18:42:40] <xheimlich> myprogram calculates an estimate of the mode of a continuous random variable. so basically a huge improvement over the average that ping displays.
[18:43:27] <xheimlich> Soliton: ah, I see what you mean.
[18:43:43] <Soliton> well, what is even the problem though?
[18:43:44] <xheimlich> anyway, temp files it is.
[18:43:55] <xheimlich> thanks everyone.
[18:43:59] <Soliton> myprogram has a timer or something?
[18:44:06] <Soliton> why does it not just work?
[18:44:16] *** Joins: shad (~shad@user/shad)
[18:45:01] <xheimlich> akchually I think "tempvar=$(...); echo $tempvar | myprogram" is enough.
[18:45:03] <tirnanog> it's an odd request. usually, it's a case of trying to achieve the inverse.
[18:45:24] <xheimlich> Soliton: it just expects a bag of numbers to compute statistics on.
[18:45:25] <Soliton> that is terrible code but still unclear what you're trying to solve.
[18:45:35] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (Ping timeout: 252 seconds)
[18:45:38] <Soliton> so what is the issue?
[18:45:49] <Soliton> it just reads until eof?
[18:45:55] <xheimlich> I want to ping fast.com 100 times and compute statistics on the return time.
[18:46:10] <Soliton> ping -c 100 fast.com | cmd
[18:46:24] <xheimlich> yes. I was hoping there was some weird shell syntax that would help but nm.
[18:46:57] <tirnanog> help with that problem? none has been identified so far.
[18:46:58] <Soliton> help you with what? piping does exactly what should be needed.
[18:47:18] <Soliton> you seem to add the timing requirement out of no reason.
[18:47:22] <tirnanog> ping employs line buffering and you can read from a fifo. don't see what the problem is.
[18:48:35] <xheimlich> temp var works well enough for me. You've been helpful, thanks.
[18:49:02] <Soliton> at least quote the var then.
[18:49:22] <Soliton> still sounds like a useless step.
[18:50:03] <Soliton> at most you mess up the data that way. though in your use case it's likely no issue.
[18:50:45] <Soliton> if you haven't i suggest to just try the pipe.
[18:51:03] <Soliton> it seems more like a misconception issue than anything.
[18:51:49] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.2)
[18:52:14] *** Quits: darkxploit (~jay@32.209.19.50) (Ping timeout: 260 seconds)
[18:54:35] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[18:54:59] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[18:55:11] *** Joins: kill (~killown@user/killown)
[18:56:07] *** Quits: mago (~mago@87.125.59.102) (Quit: Client closed)
[18:57:47] *** Joins: magla (~gelignite@55d4442a.access.ecotel.net)
[19:00:52] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[19:07:30] *** Joins: modobasico (~modobasic@2001:470:69fc:105::1:1bc)
[19:08:17] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[19:08:51] *** Joins: p3hz (~quassel@ip72-209-166-93.ks.ks.cox.net)
[19:10:09] *** Gooey is now known as gooey
[19:10:47] *** Joins: node1 (~node1@user/node1)
[19:10:51] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[19:11:33] *** Joins: YaoNai (~YaoNai@user/yaonai)
[19:13:56] *** Joins: reset (~reset@user/reset)
[19:15:21] *** Quits: keypusher (keypusher@user/keypusher) (Quit: bye)
[19:17:00] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[19:17:55] *** Joins: p3hz_ (~quassel@96.44.142.75.adsl.inet-telecom.org)
[19:19:42] *** Quits: xiongxin (~quassel@113.116.33.5) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:21:04] *** Quits: p3hz (~quassel@ip72-209-166-93.ks.ks.cox.net) (Killed (NickServ (GHOST command used by p3hz_!~quassel@96.44.142.75.adsl.inet-telecom.org)))
[19:21:09] *** p3hz_ is now known as p3hz
[19:24:39] *** Joins: stealth[] (~stealth]@200116b824a62f00e92facdf35ce44fc.dip.versatel-1u1.de)
[19:27:31] *** Joins: barjac (~quassel@92.41.102.236.threembb.co.uk)
[19:28:54] *** Quits: UnnamedBeer (~UnnamedBe@231.red-83-41-235.dynamicip.rima-tde.net) (Quit: WeeChat 2.3)
[19:29:08] *** Joins: touraine (~igloo@109.131.229.44)
[19:31:02] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Quit: Leaving)
[19:32:24] *** Quits: touraine (~igloo@109.131.229.44) (Remote host closed the connection)
[19:32:36] *** Quits: odoood (~odoood@2601:c8:c003:a550::2) (Ping timeout: 245 seconds)
[19:34:04] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[19:39:32] *** Joins: keypusher (keypusher@user/keypusher)
[19:43:18] *** Joins: han-solo (~hanish@137.97.91.230)
[19:43:42] *** Quits: han-solo (~hanish@137.97.91.230) (Client Quit)
[19:44:36] *** Quits: hejux (~hejux@193.122.100.11) (Quit: WeeChat 3.2.1)
[19:45:29] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[19:47:46] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[19:48:05] *** Quits: speckz (~speckz@2600:1700:ce0:bf00:59cf:b5ef:120f:ca9e) (Quit: Textual IRC Client: www.textualapp.com)
[19:48:11] *** Quits: irrgit (~irrgit@192.241.175.183) (Remote host closed the connection)
[19:56:16] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[19:56:34] *** Joins: tejr (~tejr@user/tejr)
[19:59:52] <wstrnr> xheimlich: the ping utility calculates the round-trip times (minimal, average, maximum) by itself and prints them in the last line of output when ping is successful
[20:00:16] <wstrnr> it prints:  rtt min/avg/max/mdev = 158.025/158.496/158.968/0.617 ms
[20:00:16] *** Quits: cisco87 (~quassel@lnxg33k.com) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[20:02:49] *** Joins: cisco87 (~quassel@lnxg33k.com)
[20:03:41] <wstrnr> you can check whether the ping was successful by checking the return status of ping (using PIPESTATUS maybe), and you can parse the "rtt" statistics line using bash, maybe with a regexp (or using awk, or anything).
[20:04:44] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[20:05:05] *** Joins: alzgh (~alzgh@user/alzgh)
[20:06:56] *** Joins: irrgit (~irrgit@192.241.175.183)
[20:08:19] *** Quits: llua (~llua@zsh/developer/llua) (Quit: <Rudolph> shell code is what greycat reads to kids when he tucks them in)
[20:10:10] *** Quits: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:11:36] <wstrnr> # ping() { if [[ $1 == fail ]]; then  false imitate ping failure; return; fi;  echo rtt min/avg/max/mdev = 158.025/158.496/158.968/0.617 ms; };   last_line=$(ping ... | tail -1; exit ${PIPESTATUS[0]}) || last_line=;   if [[ $last_line =~ =\ ([^/]+)/([^/]+)/([^/]+)/ ]]; then br=("${BASH_REMATCH[@]: 1}");  echo "min: ${br[0]}, avg: ${br[1]}, max: ${br[2]}"; else   echo ping fail;  fi
[20:11:37] <shbot> wstrnr: min: 158.025, avg: 158.496, max: 158.968
[20:11:45] <wstrnr> # ping() { if [[ $1 == fail ]]; then  false imitate ping failure; return; fi;  echo rtt min/avg/max/mdev = 158.025/158.496/158.968/0.617 ms; };   last_line=$(ping fail | tail -1; exit ${PIPESTATUS[0]}) || last_line=;   if [[ $last_line =~ =\ ([^/]+)/([^/]+)/([^/]+)/ ]]; then br=("${BASH_REMATCH[@]: 1}");  echo "min: ${br[0]}, avg: ${br[1]}, max: ${br[2]}"; else   echo ping fail;  fi
[20:11:47] <shbot> wstrnr: ping fail
[20:12:18] *** Quits: barjac (~quassel@92.41.102.236.threembb.co.uk) (Ping timeout: 265 seconds)
[20:12:34] *** Joins: llua (~llua@zsh/developer/llua)
[20:12:59] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[20:13:02] *** Quits: YaoNai (~YaoNai@user/yaonai) (Quit: leaving)
[20:13:31] <wstrnr> also could've been done using  set -o pipefail; before "ping"   in the $(ping ... | tail -1)  command substitution
[20:14:21] <wstrnr> xheimlich: you got it, right?
[20:14:30] *** Quits: tobybl_ (~tobybl@31.111.35.255) (Remote host closed the connection)
[20:15:41] *** Quits: Guest6834 (~Guest@host23.190-139-78.telecom.net.ar) (Remote host closed the connection)
[20:15:47] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 252 seconds)
[20:16:40] *** Joins: drd (~drd@93-42-69-115.ip85.fastwebnet.it)
[20:17:36] <wstrnr> at least the ping utility from iputils package for GNU
[20:24:25] *** Quits: littlepython (~littlepyt@103.215.168.1) (Quit: Client closed)
[20:24:57] <Celmor[m]> what's a short method (using standard gnu tools) to read a string on stdin and echo it, as a replacement for "$(read -r s && echo "$s")"? iirc 'read' has a default variable name it uses if not given but I wasn't able to find it
[20:25:09] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[20:26:19] *** Quits: jkwnki (~jkwnki@p4ff31b54.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[20:26:26] <Soliton> cat
[20:26:55] <Soliton> REPLY is the variable read uses if you don't give one.
[20:27:49] *** Joins: INeedAHandle (~INeedAHan@39.124.72.106)
[20:28:42] *** Joins: barjac (~quassel@92.41.102.236.threembb.co.uk)
[20:29:49] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[20:30:19] *** Joins: darkxploit (~jay@32.209.19.50)
[20:30:31] *** Quits: zro (~zro@user/zro) (Ping timeout: 252 seconds)
[20:31:27] *** Joins: sandb0y (~pirate@user/sandb0y)
[20:32:29] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[20:33:14] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[20:35:31] *** Quits: aaro (~aaro@user/aaro) (Ping timeout: 245 seconds)
[20:36:08] <Celmor[m]> cat has to be ended with an EOF though, so not quite equivalent
[20:36:27] <Celmor[m]> but usable indeed
[20:36:36] <Soliton> no clue what that means.
[20:37:20] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[20:37:24] <Soliton> cat will not terminate unless there is an error or EOF, sure. what else do you expect?
[20:38:06] <Soliton> a while read loop should also terminate on error or EOF.
[20:38:49] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[20:39:24] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[20:39:56] *** Quits: erri (~meow@52.8.199.178) (Quit: decisions were made)
[20:40:10] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[20:40:23] <Celmor[m]> was just writing a command like \`do_something "$(argument)"\` as an easy way to accept input. inputting a string and confirming via enter would be the most straight forward. comparing that to $(cat) it can be used in-place but one would have to know to use ^D to \_confirm\_
[20:40:29] <wstrnr> head -1   reads one line and prints it.
[20:41:41] <wstrnr> by the way,  echo "$s"  is a pitfall
[20:41:50] <emanuele6> read -r s is also pitfall
[20:41:52] <Soliton> so you want some kind of prompt for the user and the user should type in a single line?
[20:42:08] <Soliton> and for some reason you do not want to use read?
[20:42:20] <emanuele6> and $() will strip trailing newlines anyway
[20:43:02] *** Joins: zeden (~zeden@user/zeden)
[20:43:18] <Celmor[m]> head -1 is a nice alternative
[20:43:51] *** Joins: semeion (~semeion@user/semeion)
[20:44:04] <Celmor[m]> "you do not want to use read" I simply wanted a shorter version for the commands I type and want to re-execute later via the recall method
[20:44:10] <wstrnr> imho, it's better to stick to read.  if your script will be full of $(head -1), it will be much less easy to add prompts
[20:44:21] <Soliton> the recall method?
[20:44:27] <Celmor[m]> not writing a script
[20:44:28] <Celmor[m]> ^R
[20:44:39] <wstrnr> you  can read -e
[20:44:48] <Soliton> really difficult to understand the goal.
[20:45:18] <wstrnr> with readline features enabled you can use ctrl-p and ctrl-n, also ctrl-r (isearch backward) for "recalling" previously entered lines
[20:45:28] <Soliton> write a function if you don't want to type much? but no clue what the goal is really.
[20:45:46] <Celmor[m]> wstrnr: nice
[20:46:44] *** Joins: erri (~meow@ec2-18-218-146-67.us-east-2.compute.amazonaws.com)
[20:47:08] *** Quits: legola (~legola@46.235.100.27) (Remote host closed the connection)
[20:47:28] <Celmor[m]> Soliton: I type many snippets for which it would be too much work to organize those as functions and recall the function name at a later date so I keep those in my primary bash_history (and use a non-primary bash_history for testing and such so it doesn't pollute my primary one)
[20:47:41] <Celmor[m]> oops, keep forgetting that reply doesn't work on irc
[20:48:24] <Soliton> so just use the shell history however you like?
[20:48:36] <Celmor[m]> that's what I'm doing?
[20:49:06] <Soliton> no clue. you tell me.
[20:49:51] <wstrnr> i personally like doing this:
[20:49:55] <wstrnr> type a long command <press enter>
[20:50:00] <wstrnr> $ cat >script <<''   <press enter>
[20:50:08] <wstrnr> <ctrl-p><ctrl-p> to "recall" a previously typed command (i use emacs keybindings)  then <press enter>
[20:50:08] <Celmor[m]> my bash_history is essentially a collection of snippets I recall via fuzzy search and Ctrl+r. to have situation specific arguments is annoying since I'd have to clear those from the command line before executing it with another argument so it's easier to have my snippet read in an argument
[20:50:13] <wstrnr> <press enter> to effectively enter empty line to end heredoc
[20:50:16] <wstrnr> and then i'm at prompt again, and i have the oneliner script saved in the "script" file
[20:50:23] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: SO LONG SUCKERS!)
[20:51:07] <wstrnr> the   cat >script <<''  spell starts cat with output to file with readline features (while you are entering heredoc contents interactively you have readline features available, including normal bash history)
[20:51:07] <Soliton> oh, so you want a placeholder in your commandline to ask for input?
[20:51:11] <Celmor[m]> unless I'm missing something Ctrl+p is equivalent to up-arrow?
[20:51:20] <Celmor[m]> yeah
[20:51:48] <Soliton> and why would that not be a function using read?
[20:52:44] <Celmor[m]> since I produce many commands I want to re-use it would be to cumbersome to every time write a proper function with a name I then have to remember. it's way easier using fuzzy search (fzf) to recall the command line via some key words used in that snippet
[20:53:02] <Celmor[m]> and ideally that snippet wouldn't contain anything specific, like a longer input string
[20:53:03] <Soliton> why would there be multiple functions?
[20:53:19] <Soliton> it's just one single function?
[20:53:42] <Celmor[m]> cause there are many various commands, each specific to a use-case?
[20:53:48] <Celmor[m]> command lines*
[20:54:03] <Celmor[m]> each one having to be named
[20:54:18] <emanuele6> i don't get it
[20:54:24] <Soliton> a placeholder for input is always the same. it asks for input and expands to that input.
[20:54:36] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[20:54:38] <Soliton> cmd "$(input)"
[20:54:50] <Celmor[m]> wstrnr: but here docs end up in the bash history, don't they?
[20:55:06] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[20:55:33] <Celmor[m]> Soliton: the question was which "placeholder" to use that ideally would be short and support readline to easier input e.g. of a previously used argument from the history
[20:55:57] <Mmike> Hi, folks. How do I properly check for errorlevel returned by some script/command, from within bash script? Do I: if [[ $? -eq 0 ]]; ... (or whatnot), or ... ?
[20:56:00] <Celmor[m]> ah, you mean "input" is a function
[20:56:13] <wstrnr> Celmor[m]: i dunno.  i have  unset HISTFILE   in my .bashrc and i already forgot what ends in history and what does not.
[20:56:27] *** Quits: thebombzen (~thebombze@587232563.guest.umich.net) (Remote host closed the connection)
[20:56:38] <Soliton> input() { read -erp 'please type in the argument: '; printf %s "$REPLY"; }
[20:57:06] <Celmor[m]> I use multiples histfile and have a goal to only keep stuff in my primary one which I may later want to recall as a snippet (sometimes needing to edit crap out)
[20:57:07] <emanuele6> input() { IFS= read -erp 'please type in the argument: ' line; printf %s "$line"; }
[20:57:12] <emanuele6> $REPLY is global :)
[20:57:37] <wstrnr> emanuele6: this command will spoil the "line" variable
[20:57:38] <Celmor[m]> Soliton: well, I didn't know of -e earlier, also people talked about "pit falls" earlier
[20:57:49] <wstrnr> emanuele6: as a hidden side-effect
[20:58:11] <Celmor[m]> emanuele6: I'd prefer having it global
[20:58:23] <emanuele6> wstrnr: oh, i forgot local, yes
[20:58:43] <emanuele6> input() { local line; IFS= read -erp 'please type in the argument: ' line; printf %s "$line"; }
[20:58:58] <Celmor[m]> REPLY was one thing I knew existed but couldn't recall the naming of
[20:59:00] <wstrnr> !pf
[20:59:00] <greybot> wstrnr: No matches found at https://mywiki.wooledge.org/BashPitfalls
[20:59:20] <wstrnr> Celmor[m]: this is the FAQ-esque pitfalls list ^^^
[20:59:56] <emanuele6> Celmor[m]: the pitfalls were `read -r s' instead of `IFS= read -r s' or `read -r' and `echo "$s"` instead of `printf '%s\n' "$s"'
[21:00:03] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:00:13] *** Joins: eoc (~pc@user/eoc)
[21:00:41] *** Joins: aaro (~aaro@user/aaro)
[21:00:54] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[21:01:01] <eoc> how can i log errors to a file, but only create the file if there are error? 'command 2> log' creates the log file even without errors
[21:01:42] *** Joins: The_Loko (~The_Loko@79.116.4.121)
[21:01:51] <Celmor[m]> I knew the \`echo "$s"\` one but often times am to lazy to type it out. I have it overridden via a function that calls printf anyway
[21:02:18] <Celmor[m]> emanuele6: whats IFS= for though? I understand what it does in general but don't get what use it has here
[21:02:32] <koala_man> eoc: this would require a program to sit in between to conditionally create the file. it would be more efficient to just delete if it's empty
[21:03:17] <emanuele6> # echo '  hello   ' | { read -r s; declare -p s ;}
[21:03:19] <shbot> emanuele6: declare -- s="hello"
[21:03:23] <eoc> koala_man: okok
[21:03:26] <emanuele6> # echo '  hello   ' | { IFS= read -r s; declare -p s ;}
[21:03:27] <shbot> emanuele6: declare -- s="  hello   "
[21:03:36] <emanuele6> # echo '  hello   ' | { read -r; declare -p REPLY ;}
[21:03:38] <shbot> emanuele6: declare -- REPLY="  hello   "
[21:04:30] <Celmor[m]> it's automatically trimming?
[21:05:05] <Soliton> field splitting, even if it's just one field.
[21:05:17] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 252 seconds)
[21:07:23] *** Joins: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:b163:93c1:699b:16ff)
[21:07:36] <Celmor[m]> the only difference I notice is the effect of trimming. reading in multiple "words" isn't otherwise affected from what I see, or?
[21:08:26] <Celmor[m]> since I wouldn't mind trimming I'd prefer no IFS=, or is there another pit fall I could run into when not using it?
[21:09:43] <Soliton> you'll never be able to input arguments with leading/trailing IFS whitespace.
[21:10:08] <Celmor[m]> excep it I quote it
[21:10:27] <Celmor[m]> which would be a preferred behavior IMO
[21:10:29] <Soliton> that is not how any of this works.
[21:10:57] <Soliton> there is no code injection or whatever you're thinking about.
[21:11:25] <Soliton> if you want to input shell syntax then you need eval or similar.
[21:11:27] <emanuele6> as Soliton said, also if you want trimming, explicitly say want you want to be trimmed IFS=' ' or IFS=' \t', don't rely on the current value of IFS
[21:11:27] <Celmor[m]> except if I leave out "" from the printf %s\\n $REPLY ;)
[21:11:28] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:a922:d14c:ccf1:e0e0)
[21:11:28] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:a922:d14c:ccf1:e0e0) (Changing host)
[21:11:28] *** Joins: skapata (~Skapata@user/skapata)
[21:11:53] <Soliton> leaving out quotes does wordsplitting and pathname expansion not eval.
[21:12:20] <Soliton> the quotes you type as input will not suddenly become syntax.
[21:12:40] <emanuele6> if s="hello", why should `printf %s\\n "$s"' print "hello\n" and `printf %s\\n $s' print "  hello   \n"?
[21:12:45] *** Quits: nickodd (~nickodd@user/nickodd) (Ping timeout: 268 seconds)
[21:13:33] *** Quits: peterrooney (~peter@2604:3d08:1583:7400:dabb:c1ff:fe15:d704) (Quit: new kernel compiled - reboot)
[21:14:02] <Celmor[m]> not getting the question
[21:14:11] <Celmor[m]> Soliton: I get that
[21:14:23] *** Joins: arinov (~arinov@31.142.23.241)
[21:14:26] <emanuele6> Celmor[m]: that is what you said, no?
[21:14:45] <Soliton> you could actually use read without -r and then backslash escape the spaces though.
[21:14:45] *** Joins: nickodd (~nickodd@user/nickodd)
[21:14:51] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[21:15:13] <Soliton> # read s <<< '\ foo\ '; declare -p s
[21:15:14] <emanuele6> Soliton: then the input might not be one line though
[21:15:15] <shbot> Soliton: declare -- s=" foo "
[21:15:28] <emanuele6> # read s <<< '\ \nfoo\ '; declare -p s
[21:15:29] <shbot> emanuele6: declare -- s=" nfoo "
[21:15:39] <emanuele6> huh?
[21:15:41] *** Quits: erri (~meow@ec2-18-218-146-67.us-east-2.compute.amazonaws.com) (Quit: decisions were made)
[21:16:03] <emanuele6> nevermind then
[21:16:24] *** Joins: peterrooney (~peter@2604:3d08:1583:7400:dabb:c1ff:fe15:d704)
[21:17:21] <Celmor[m]> so \`echo " string needing to be trimmed " | xargs\` is probably bad, or?
[21:18:20] *** Quits: furrymcgee (~devuan@cgn-89-1-211-204.nc.de) (Remote host closed the connection)
[21:18:27] *** Joins: semeion (~semeion@user/semeion)
[21:19:28] <Celmor[m]> just another rabbit whole of bash... in PS I would've just used "$(read)", nothing easier than that
[21:19:34] <Celmor[m]> hole*
[21:20:21] <Soliton> read needs to be forked and cannot set any variables in PS?
[21:21:05] <Soliton> xargs without -0 is certainly a rabbit hole.
[21:21:10] <Celmor[m]> not sure about "forked" but it sure can set variables
[21:21:29] <Celmor[m]> just saying that reading in a string and echoing it is quite a bit more straight forward there
[21:21:53] <Soliton> sounds like $() is nothing like in bash then.
[21:22:47] *** Joins: erri (~meow@ec2-18-218-146-67.us-east-2.compute.amazonaws.com)
[21:22:57] <Soliton> i've never seen anyone ask for such a function before but i suppose that's good for PS users.
[21:23:03] *** Joins: mongy (~mongy@user/mongy)
[21:23:24] <Celmor[m]> https://termbin.com/ia4k
[21:24:04] <emanuele6> isn't the `echo $()' redundant?
[21:24:41] <Celmor[m]> echo is just a standing for a "real" command
[21:24:42] <tirnanog> it serves to demonstrate the point.
[21:25:09] <Celmor[m]> exactly
[21:26:44] <Celmor[m]> as for the matter of writing an "input" function in bash I'm left with more question than I started with
[21:27:16] *** Quits: peterrooney (~peter@2604:3d08:1583:7400:dabb:c1ff:fe15:d704) (Remote host closed the connection)
[21:28:21] <emanuele6> i tried `bash -c 'printf <%s>\\n "$@"' - $(Read-Host -OutVariable s)' in powershell
[21:28:53] <Soliton> afaict there were simple implementations presented. you want now some kind of quote parsing or whatever?
[21:28:54] <emanuele6> if i enter "hello hi", bash sees it as two arguments
[21:28:56] <emanuele6> also if i quote
[21:29:44] <emanuele6> without the <>
[21:29:44] <Celmor[m]> Soliton: nope
[21:29:51] *** Joins: peterrooney (~peter@2604:3d08:1583:7400:dabb:c1ff:fe15:d704)
[21:29:56] <Soliton> so what questions are left?
[21:30:25] <Celmor[m]> Soliton: there were multiple solutions presented but I'm wondering about the differences
[21:30:45] <Celmor[m]> e.g. IFS= and trimming
[21:31:02] <Soliton> so use IFS='' if you want no field splitting or not otherwise.
[21:31:22] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 260 seconds)
[21:31:29] <Soliton> for a generic input function i would not use field splitting.
[21:31:37] <Soliton> but it's up to you.
[21:31:39] <Celmor[m]> I've tried with and without when reading in a multi-field input and found no difference
[21:31:39] *** Joins: momonster (~mo@ip1f106750.dynamic.kabel-deutschland.de)
[21:31:57] <Celmor[m]> not sure how field splittings affects it here for single-line input
[21:32:25] <Soliton> "you'll never be able to input arguments with leading/trailing IFS whitespace."
[21:32:29] <Celmor[m]> or is that exactly the difference: multi-line vs singgle-line
[21:32:52] <Soliton> read reads a single line by default.
[21:33:08] <Soliton> if you want multi-line you could use read -d ''
[21:33:55] <Celmor[m]> so the difference is automatic trimming then. since I'd prefer it I wouldn't use IFS= then
[21:34:10] <emanuele6> you would use IFS=' ' instead
[21:34:48] <emanuele6> or IFS=$' \t' if you want to trim both spaces and TAB characters
[21:35:22] <Soliton> given you'll use this in your interactive shell explicit IFS sounds like a good idea indeed.
[21:35:32] *** Quits: drd (~drd@93-42-69-115.ip85.fastwebnet.it) (Ping timeout: 252 seconds)
[21:36:07] <emanuele6> by the way, i am very confused by powershell
[21:36:31] <emanuele6> bash -c 'printf %s\\n "$@"' - $(Read-Host -OutVariable s)
[21:36:36] <emanuele6> and also: bash -c 'printf %s\\n "$@"' - "$(Read-Host -OutVariable s)"
[21:36:58] <emanuele6> perform wordsplitting if i e.g. enter "hello hi"
[21:37:09] <Soliton> in cmd at least i think it's the task of the called process to parse its command line.
[21:37:15] <Soliton> crazy stuff
[21:37:28] <emanuele6> oh, it's like cmd then
[21:37:29] <Soliton> or in windows in general i guess.
[21:38:17] <emanuele6> and i can't even seem to find anyway to make it not perform word splitting
[21:38:26] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Ping timeout: 245 seconds)
[21:38:30] *** Quits: peterrooney (~peter@2604:3d08:1583:7400:dabb:c1ff:fe15:d704) (Remote host closed the connection)
[21:38:56] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[21:38:57] <Henry151> hey y'all, i was in here the other day and someone gave a link to something about "how to make sure you don't lose any of your bash history"... can anybody link me up to that again?
[21:39:18] <emanuele6> !history > Henry151
[21:39:18] *** Quits: sinaowolabi_ (~SinaOwola@102.134.114.1) (Ping timeout: 265 seconds)
[21:39:18] <greybot> Henry151: http://mywiki.wooledge.org/BashFAQ/088 -- How can I avoid losing any history lines?
[21:39:34] <Henry151> thanks emanuele6
[21:40:06] <Henry151> i somehow only have ~700 lines of bash history when i type "history" on my main laptop, even though my .bashrc has the -1 set for history length and size...
[21:40:51] *** Joins: tangy (tangy@user/tangy)
[21:41:07] <emanuele6> Henry151: what bash version are you using?
[21:41:17] *** Joins: YaoNai (~YaoNai@user/yaonai)
[21:41:28] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[21:41:31] <Celmor[m]> Soliton:  emanuele6 thanks for the suggestions
[21:41:31] <Henry151> GNU bash, version 5.0.3(1)-release (x86_64-pc-linux-gnu)
[21:41:37] *** Joins: peterrooney (~peter@2604:3d08:1583:7400:dabb:c1ff:fe15:d704)
[21:43:47] <Soliton> if you ever start bash without reading your rc files it'll have default history settings and act accordingly. so perhaps use a different filename for your history.
[21:43:50] <Henry151> interesting that the linked guide on wooledge is saying to set HISTFILESIZE=400000000 and HISTSIZE=10000 ... can you help me understand why that is preferred over what i did, which is HISTSIZE=-1 and HISTFILESIZE=-1 ? I thought that would set them both to "unlimited"
[21:44:17] <Henry151> Soliton: hmm, when or why might bash get started without reading the rc files?
[21:44:17] <Soliton> -1 was probably not valid when that was written.
[21:44:23] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[21:45:02] <Soliton> when calling bash --norc for example.
[21:46:28] <Henry151> thanks
[21:46:49] *** Joins: seninha (~seninha@user/seninha)
[21:47:24] <Henry151> following the guidance from wooledge, i just set the "append only" mode on my .bash_history file, using `sudo chattr +a .bash_history`, but when i run `lsattr -a .bash_history` to confirm, it looks like this: `-----a--------e---- .bash_history
[21:47:37] <Henry151> instead of like in the wooledge guide, which doesn't have that 'e'
[21:47:38] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[21:47:42] <Henry151> any input on what that's about?
[21:48:25] *** Quits: momonster (~mo@ip1f106750.dynamic.kabel-deutschland.de) (Quit: Konversation terminated!)
[21:48:31] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[21:48:55] <tangy> does the rest of the filesystem also show the same 'e' output?
[21:49:14] <wstrnr> idk.  just   unset HISTFILE  in your .bashrc and forget about history forever.  if you think you have to jump through so many hoops to preserve your privacy and such.
[21:49:25] <tangy> ...'e' stands for 'extents,' I believe
[21:49:36] <Henry151> yes, it does
[21:49:53] <Henry151> wstrnr: ?? i am trying to preserve my bash history, not my privacy :)
[21:50:06] *** Quits: The_Loko (~The_Loko@79.116.4.121) (Ping timeout: 245 seconds)
[21:50:41] *** Quits: sdu (~doo@185.44.146.64) (Remote host closed the connection)
[21:51:20] *** Quits: arinov (~arinov@31.142.23.241) (Quit: WeeChat 3.1)
[21:51:34] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[21:51:54] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Quit: WeeChat 3.2.1)
[21:52:05] <tangy> I was working with chattr on an ext4 filesystem yesterday, and my output also showed the same 'e' symbol
[21:54:51] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[21:54:58] <Henry151> hm.. i remember using chattr a long while ago to do something... it was some thing where i needed two different applications to both think they had "ownership" over a file, i think, if i remmeber right
[21:55:09] <Henry151> remmeber/lol
[21:55:27] * phy1729 bets chattr +i /etc/resolv.conf
[21:57:04] *** Joins: arinov (~arinov@31.142.23.241)
[21:57:11] *** Quits: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:b163:93c1:699b:16ff) (Ping timeout: 245 seconds)
[21:58:05] *** Quits: arinov (~arinov@31.142.23.241) (Client Quit)
[21:58:23] *** Joins: arinov (~arinov@31.142.23.241)
[21:59:47] <Soliton> emanuele6: btw, what i was referring to earlier was that on windows a new process gets a single string for its commandline. so each and every process parses that itself and might do it differently...
[22:00:07] <Soliton> not sure how bash on windows does that or how that relates to wsl and stuff.
[22:00:18] *** Quits: arinov (~arinov@31.142.23.241) (Client Quit)
[22:00:33] *** Joins: arinov (~arinov@31.142.23.241)
[22:00:34] *** Joins: Inline (~Inline@2a02:908:1252:7a80:1feb:c0cd:e428:d19f)
[22:00:48] <emanuele6> i was using powershell on linux
[22:01:14] <Henry151> phy1729: nah it wasn't that.. but you made me curious enough to want to remember, and i found it, turns out i was all wrong, it wasn't even using chattr, i was using "setfacl -R -m" and misremembering
[22:01:16] *** Quits: arinov (~arinov@31.142.23.241) (Client Quit)
[22:01:33] *** Joins: arinov (~arinov@31.142.23.241)
[22:01:57] <Henry151> chattr and setfacl somehow sounded similar enough to confuse me
[22:02:03] *** Parts: eoc (~pc@user/eoc) ()
[22:02:07] *** Quits: Inline (~Inline@2a02:908:1252:7a80:1feb:c0cd:e428:d19f) (Remote host closed the connection)
[22:02:56] *** Joins: Inline (~Inline@2a02:908:1252:7a80:1feb:c0cd:e428:d19f)
[22:03:05] *** Joins: jkwnki (~jkwnki@p4ff31b54.dip0.t-ipconnect.de)
[22:04:02] *** Joins: The_Loko (~The_Loko@79.116.4.121)
[22:05:38] <Henry151> pretty funny considering they only have two letters in common and don't even rhyme, but there it is
[22:05:51] <Henry151> oh i guess three letters in common
[22:06:33] * Henry151 recedes into the background, nodding and gesturing his gratitude
[22:06:52] *** Quits: arinov (~arinov@31.142.23.241) (Remote host closed the connection)
[22:07:08] *** Joins: arinov (~arinov@31.142.23.241)
[22:07:15] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.2.1)
[22:10:05] *** Quits: arinov (~arinov@31.142.23.241) (Client Quit)
[22:10:30] *** Joins: arinov (~arinov@31.142.23.241)
[22:13:27] *** Quits: wwilly (~wwilly@fw-tnat-cam4.arm.com) (Ping timeout: 240 seconds)
[22:15:09] <luva> Hello, I have a list of Ips and pings seperated by commas as such "255.255.255.255;20.6", I want to sort them by ping. How can I do that?
[22:15:30] <luva> awk -F ';' '{print $2}' pings.csv | sort -n  with this I can sort pings alone
[22:15:37] <luva> but how can I make the IPs switch with it
[22:15:44] *** Quits: arinov (~arinov@31.142.23.241) (Quit: WeeChat 3.1)
[22:17:04] <Soliton> you can tell sort what field to sort.
[22:17:23] <phy1729> sort  -t ';' -k 2
[22:17:46] <luva> oh man phy, thanks for that
[22:17:52] <luva> and soliton also
[22:22:25] *** Quits: Inline (~Inline@2a02:908:1252:7a80:1feb:c0cd:e428:d19f) (Quit: Leaving)
[22:24:26] *** Joins: Inline (~Inline@2a02:908:1252:7a80:1feb:c0cd:e428:d19f)
[22:29:00] *** Quits: peterrooney (~peter@2604:3d08:1583:7400:dabb:c1ff:fe15:d704) (Quit: new kernel compiled - reboot)
[22:30:22] *** Joins: akoana (~ah@user/akoana)
[22:31:35] <geirha> -k2,2n
[22:32:13] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[22:33:12] *** Joins: peterrooney (~peter@2604:3d08:1583:7400:dabb:c1ff:fe15:d704)
[22:34:15] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[22:35:46] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[22:37:12] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Ping timeout: 276 seconds)
[22:40:27] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 276 seconds)
[22:42:56] *** Joins: wwilly (~wwilly@cpc92794-cmbg19-2-0-cust589.5-4.cable.virginm.net)
[22:43:27] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Remote host closed the connection)
[22:44:09] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[22:45:27] *** Joins: Crescendo (~Crescendo@user/crescendo)
[22:46:53] *** Joins: af (~af@awalgarg.me)
[22:47:35] *** Quits: gas51627 (uid91066@id-91066.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[22:48:21] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Quit: Leaving)
[22:50:12] *** Quits: peterrooney (~peter@2604:3d08:1583:7400:dabb:c1ff:fe15:d704) (Quit: new kernel compiled - reboot)
[22:51:52] *** Joins: peterrooney (~peter@2604:3d08:1583:7400:dabb:c1ff:fe15:d704)
[22:52:38] *** Quits: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au) (Ping timeout: 265 seconds)
[22:54:25] *** Joins: betelgeuse8 (~betelgeus@94-225-47-8.access.telenet.be)
[22:54:34] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[22:55:10] *** Quits: Carp (~rue@1-162-40-185.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[22:55:12] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[22:55:15] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[22:55:15] *** betelgeuse8 is now known as betelgeuse
[22:58:19] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[22:58:32] *** Joins: Crescendo (~Crescendo@user/crescendo)
[22:59:22] *** Joins: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au)
[22:59:22] *** Quits: peterrooney (~peter@2604:3d08:1583:7400:dabb:c1ff:fe15:d704) (Quit: new kernel compiled - reboot)
[23:00:13] *** gooey is now known as Gooey
[23:00:48] *** Joins: peterrooney (~peter@2604:3d08:1583:7400:dabb:c1ff:fe15:d704)
[23:02:19] *** Quits: peterrooney (~peter@2604:3d08:1583:7400:dabb:c1ff:fe15:d704) (Remote host closed the connection)
[23:03:45] *** Joins: peterrooney (~peter@2604:3d08:1583:7400:dabb:c1ff:fe15:d704)
[23:04:52] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Remote host closed the connection)
[23:05:42] *** Quits: peterrooney (~peter@2604:3d08:1583:7400:dabb:c1ff:fe15:d704) (Remote host closed the connection)
[23:05:58] *** Quits: Gooey (~gooey@2001:a62:1405:be01:380a:3741:b56e:adf9) (Quit: Textual IRC Client: www.textualapp.com)
[23:09:32] *** Joins: GuiToris (~GuiToris@user/guitoris)
[23:11:40] <GuiToris> there's one thing that is different than what I expected. Code : https://bpa.st/raw/W4PA After the fifth round I'm stuck in the loop and r and any key act the same
[23:13:29] <Soliton> only 5 entries were picked. there is nothing more to play.
[23:13:56] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[23:14:31] <twkm> whitespace safe -> not whitespace safe, oh well.
[23:14:31] <GuiToris> I thought after the 5th round it would ask the question one more time and pressing any key exits from the loop/script
[23:15:44] <Soliton> where do you suggest is that logic implemented?
[23:16:30] <GuiToris> I don't understand your question :/
[23:16:57] <Soliton> you expect logic that is not implemented.
[23:17:06] <Soliton> code does what you program into it.
[23:17:15] <Soliton> nothing more nothing less.
[23:17:59] <Soliton> if ((i > 5)); then break; fi
[23:18:25] <GuiToris> I was just about to look this up
[23:18:27] <GuiToris> thank you
[23:18:38] *** Joins: peterrooney (~peter@2604:3d08:1583:7400:dabb:c1ff:fe15:d704)
[23:18:46] *** Quits: YaoNai (~YaoNai@user/yaonai) (Quit: leaving)
[23:19:09] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[23:19:22] <GuiToris> I'll show you the script in case I insert it in the wrong place
[23:20:32] <GuiToris> I hope this is right : https://bpa.st/raw/CMUQ
[23:21:46] *** Quits: jkwnki (~jkwnki@p4ff31b54.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[23:21:47] *** Quits: stealth[] (~stealth]@200116b824a62f00e92facdf35ce44fc.dip.versatel-1u1.de) (Quit: Leaving)
[23:24:15] <Soliton> sure.
[23:24:33] <GuiToris> thank you very much
[23:38:01] *** Joins: sdu (~doo@185.44.146.64)
[23:40:24] *** Quits: Sayona (~Sayona@user/sayona) (Quit: Bye :))
[23:43:50] *** Quits: kuku (~kuku@user/kuku) (Remote host closed the connection)
[23:44:15] *** Joins: sublim20 (~sublim20@user/sublim20)
[23:45:25] *** Quits: magla (~gelignite@55d4442a.access.ecotel.net) (Quit: Stay safe!)
[23:48:08] *** Joins: jinsun (~quassel@user/jinsun)
[23:48:51] *** Quits: wstrnr (~wstrnr@user/wstrnr) (Ping timeout: 245 seconds)
[23:52:25] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[23:52:36] *** Quits: p3hz (~quassel@96.44.142.75.adsl.inet-telecom.org) (Ping timeout: 245 seconds)
[23:53:06] *** Joins: p3hz (~quassel@ip72-209-166-93.ks.ks.cox.net)
[23:56:49] *** Quits: Rue (~rue@2001-b011-1000-1f54-7eb3-4a8c-a9e9-9ba2.dynamic-ip6.hinet.net) (Ping timeout: 252 seconds)
[23:59:08] *** Joins: Rue (~rue@2001-b011-1000-18fe-c1c5-8c34-a15c-8faf.dynamic-ip6.hinet.net)
[23:59:12] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[23:59:39] *** Joins: CodePoint (~CodePoint@2600:1700:3070:3790:b4dc:3bf:e70e:8e25)
