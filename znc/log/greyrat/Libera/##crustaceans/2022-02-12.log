[00:02:20] <gwozniak> ``...and Morgan’s bizarre online presence as maker of some of the most cringeworthy music ever recorded,...''
[00:02:27] <gwozniak> No argument here
[00:07:24] <gerikson> haha havne't had the patience to watch
[00:15:43] * manicennui realizes that Twitter switched back to "Home" on this machine.
[00:15:51] <manicennui> When are they going to give up on that shit and just do what users want?
[00:16:01] <gwozniak> gerikson: Assuming the soundcloud link I provided a couple days ago is still legit, you still have your chance if you get the patience ;)
[00:28:11] <imode> https://www.youtube.com/watch?v=NutURoj8hPA
[00:28:12] <buttsbot> Canvas - YouTube - https://www.youtube.com/watch?v=NutURoj8hPA
[00:31:40] <gerikson> I hope they socked away some cash for good lawyers
[00:31:56] <gwozniak> gerikson: California Rollz is one of the most bizarrely incompetent songs I've ever heard
[01:20:50] *** Quits: bontaq (~user@ool-45779fe5.dyn.optonline.net) (Remote host closed the connection)
[01:35:57] *** Quits: dcz_ (~dcz@user/dcz) (Ping timeout: 240 seconds)
[01:44:24] *** Joins: prussian (~prussian@user/prussian)
[02:35:36] <gwozniak> Looks like the injunctions are coming to get the truckers off the border
[02:35:55] <gwozniak> No one is very happy about the convoy at this point
[02:39:09] <gwozniak> ``Trudeau said authorities are prepared to hit protesters where it hurts the most by suspending commercial trucking licenses and pursuing charges that could result in jail time.''
[02:40:00] <ngoldbaum> https://twitter.com/ejdickson/status/1491841120933974018
[02:40:00] <buttsbot> Twitter - ejdickson - Scoop: Canadian leftists are using “Ram Ranch,” a 2012 porno metal song about 18 gay cowboys, to troll anti-vaxx truckers and...
[02:40:43] <imode> people are saying that "Ram Ranch" is just one song.
[02:41:07] <imode> there are roughly 9 of them.
[02:41:49] <imode> https://www.youtube.com/watch?v=SnRNsCu3ZqE
[02:41:49] <buttsbot> Ram Ranch is under siege - YouTube - https://www.youtube.com/watch?v=SnRNsCu3ZqE
[02:50:10] *** Joins: bontaq (~user@ool-45779fe5.dyn.optonline.net)
[02:58:03] <companion_cube> > they're also matching with truckers on tinder
[02:58:05] <companion_cube> my god
[02:58:41] <imode> get ram ranch'd.
[02:58:53] <imode> https://www.youtube.com/watch?v=Rtqkxkt7Hyg
[02:58:54] <buttsbot> Rick Astley - Ram Ranch - YouTube - https://www.youtube.com/watch?v=Rtqkxkt7Hyg
[02:59:08] <imode> someone should tell them to blast this.
[02:59:43] <drakonis> i'm sure rick astley already knows about that
[02:59:45] <imode> get rick ranched eediot.
[03:10:56] <imode> this manager is gonna be a fucking shitheel.
[03:34:56] <gwozniak> https://twitter.com/fleaskeys/status/1491985384527572996
[03:34:56] <buttsbot> Twitter - fleaskeys - Made a joke about Al Gore inventing the internet in class today and I thought the joke fell flat until a girl spoke up 5 minu...
[04:33:22] <manicennui> I don't think there is anything I want to spend part of my bonus on this year.
[04:33:52] <manicennui> Maybe I'll just get some really expensive coffee or something.
[04:45:31] <manicennui> https://www.intelligentsia.com/products/bolivia-finca-takesi-geisha
[04:45:31] <buttsbot> -     Bolivia Finca Takesi Geisha | Special Selection Coffee | Intelligentsia Coffee -
[04:59:05] <manicennui> https://www.cnn.com/2022/02/10/us/mississippi-men-charged-for-shooting-at-black-fedex-driver/index.html
[04:59:05] <buttsbot> White father and son charged for chasing and shooting at Black FedEx driver - CNN
[05:16:57] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[05:27:37] *** Quits: klardotsh (~klardotsh@172.58.46.158) (Ping timeout: 240 seconds)
[06:28:19] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[06:33:27] *** Joins: dcz_ (~dcz@user/dcz)
[07:03:27] <imode> give me the steam deck, valve.
[07:03:36] <imode> or I'll eat gabe's beard.
[07:06:24] <Xe> imode: are you after q2 too?
[07:23:28] <manicennui> https://www.reddit.com/r/cats/comments/sqam9l/princess_pamela_knocked_over_two_plants_all/
[07:23:30] <buttsbot> Princess Pamela knocked over two plants… all because I didn’t feed her the moment I came home from work. : cats
[07:23:45] <manicennui> Look at how satisfied that bastard is
[07:24:12] <imode> Xe: nope, Q2.
[07:24:22] <Xe> you fucker
[07:24:25] <Xe> <4
[07:24:26] <manicennui> There went your plants, bitch
[07:24:29] <Xe> i'm after q2
[07:25:50] <imode> sorry lmao.
[07:26:19] <Xe> 512gb?
[07:27:29] <imode> yep, most expensive model.
[07:33:08] <Xe> do let us know how it is
[07:34:59] <Xe> i want to know how well it handles switch emulation
[07:37:53] <Church> ^
[08:37:45] *** Quits: dcz_ (~dcz@user/dcz) (Ping timeout: 256 seconds)
[08:57:39] <imode> I'm mostly enthused about having a computer dedicated to gaming without having to spend money on a laptop with ergonomics.
[08:57:51] <imode> I can set this thing down in its dock and start playing from my shitty laptop via steam remote play.
[08:58:05] <imode> I can take it on the go or play in bed if I wanted to.
[09:13:51] <cb> 256 GB in Q2 here
[09:14:04] <cb> if i'm lucky maybe a bunch of people will cancel and i get bumped up
[09:15:52] <defect> imode: does remote play work in that "direction"? i'm only reading about playing games that live on a computer on the steam deck
[09:18:39] <imode> defect: yeh, you can stream in either direction.
[09:19:31] <imode> whether it's _beneficial_ is up to debate but there's no reason that the steam deck can't be a host.
[09:19:39] <defect> cool
[10:15:01] *** Quits: seabre_ (~seabre@user/seabre) (Ping timeout: 240 seconds)
[10:20:48] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 256 seconds)
[10:54:38] *** Joins: seabre (~seabre@user/seabre)
[12:05:04] *** Quits: jj5 (~jj5@211-26-131-173.dyn.dodo.net.au) (Quit: Konversation terminated!)
[12:08:20] *** Joins: jj5 (~jj5@211-26-131-173.dyn.dodo.net.au)
[14:33:14] <dmc> ProtonMail's phishing report is pretty shite considering I keep finding emails in my inbox from the reported domains :|
[14:34:12] <dmc> how many times do I have to report a proximus.be email
[14:35:10] <dmc> sure as hell hope it's a different username
[15:20:25] *** Joins: dcz_ (~dcz@user/dcz)
[15:46:15] *** Quits: danderson (~dave@tailscale/danderson) (Ping timeout: 250 seconds)
[16:14:58] <gerikson> Xe: are you still working for Tailscale?
[16:15:50] <riv> what's Q2?
[16:16:10] <gerikson> quarter 2 of this year I guess
[16:55:45] *** Joins: gareppa (~gareppa@user/gareppa)
[16:57:42] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[17:00:04] <Xe> gerikson: yes, why?
[17:03:21] <pja> cb: Same, but I told myself I can only buy it if I get a job first.
[17:04:45] <pja> I can do that in six weeks, right?
[17:23:17] <Xe> cb: i'm hoping that other people cancel yeah
[17:37:35] <gerikson> Xe: finally figured out its use case ;)
[17:37:44] <gerikson> considering getting a free account
[17:37:59] <gerikson> I've set up wireguard manually but I want zero configuration
[17:39:50] <Xe> gerikson: yep, welcome to easy street lol
[17:39:59] <gerikson> kewl
[17:40:31] <gerikson> so far I've been getting along with wg and cloud VNC
[17:41:09] <Xe> yeah, tailscale totally replaced my existing wireguard setup
[17:41:42] <gerikson> I wonder if work PC policy allows it... prolly not
[17:41:48] <gerikson> but I'm only there 2 more weeks
[17:42:02] <gerikson> know zip about new place's policy
[18:05:20] <manicennui> Holy shit: https://www.reddit.com/r/TikTokCringe/comments/sqheoe/well_this_is_disturbing/
[18:05:22] <buttsbot> Well this is disturbing : TikTokCringe
[18:07:03] <vladimyr> https://twitter.com/migueldeicaza/status/1492186302778908675
[18:07:03] <buttsbot> Twitter - migueldeicaza - Friends, years ago, I made iCoaster, a PWA that turned your iPhone into a coaster: https://t.co/LQOvXUqRDa   Today, I am ...
[18:41:10] *** Quits: bontaq (~user@ool-45779fe5.dyn.optonline.net) (Ping timeout: 256 seconds)
[19:09:32] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[19:29:19] <riv> log4j seems to be a format string vuln, similar to printf(userinput)
[19:29:37] <riv> in rust println! macro errors in a situation like that, you have to statically provide the string
[19:30:09] <riv> so if you implemented your own 'log4j' in rust - ignoring code loading - you would probably do it that way instead of having dynamic format strings, and this would block the vulnerability from occurring
[19:44:44] <gerikson> peeps, am I way off base in my proposed reply to https://lobste.rs/s/hwfcla/case_against_oop_is_understated_not#c_ezx9tn ? http://simp.ly/publish/n33ZM0
[19:44:45] <buttsbot> Case against OOP is understated, not overstated | Lobsters
[19:44:47] <buttsbot> OO vs FP
[19:46:12] <gerikson> I don't believe FP "took over GP computing"
[19:46:22] <gerikson> but if JS is FP I guess it did?
[19:46:41] <riv> seems like a good reply
[19:47:02] <riv> js equally fails to be fp and oo
[19:47:38] <riv> rust has lambda, mapping etc. feels fairly functional if you want to use it that way. can also use it differently
[19:51:15] <companion_cube> I think react is pretty functional?
[19:52:38] <imode> FP didn't take over general purpose computing.
[19:52:41] <imode> and never will.
[19:52:56] <gerikson> I'm pretty sre I agree
[19:53:08] <gerikson> but stating that will go against my easygoing persona on the site
[19:53:08] <companion_cube> Never will is a bit strong
[19:53:33] <companion_cube> It certainly has been influencing mainstream languages for a while now
[19:53:41] <imode> influencing, not dominating.
[19:54:26] <companion_cube> Indeed not
[19:54:34] <companion_cube> Maybe in 20 years :)
[19:54:38] <gerikson> love me some map
[19:54:47] <imode> imperative programming will still be the norm.
[19:54:49] <companion_cube> If clojure or elixir grow in popularity perhaps.
[19:55:11] <gerikson> wrt to haskell, immutability is basically useless if your dealing with any sort of business logic
[19:55:21] <companion_cube> imode: it's already past "pure imperative" for most
[19:55:26] <companion_cube> It's a blend now
[19:55:41] <imode> which I'm alright with.
[19:55:50] <companion_cube> Sure, me too.
[19:56:01] <imode> I use Java streams on the regular, in fact my entire application is practically one giant stream.
[19:56:05] <gerikson> pragmatism wins over purity
[19:56:13] <imode> you'll wrestle that away from my cold, dead hands.
[19:56:57] <imode> but my objection to "FP dominance" is more of a grounded one. you'll always need imperative programming to express some aspect of your computing stack, if only to build up to something that looks more abstract.
[19:57:08] <companion_cube> Hopefully sum types are next
[19:57:09] <imode> because the computers that we build are imperative.
[19:57:16] <companion_cube> As useful as lambdas, they are
[19:57:43] <companion_cube> imode: that's implies imperative has to be somewhere, not that it has to be the norm
[19:58:03] <imode> I'll agree with that.
[19:58:08] <companion_cube> After all assembly is what our computers know, not C. And yet there's little actual assembly written
[19:58:27] <imode> yet there are problems that are irreducibly imperative.
[19:58:36] <imode> and I don't think we're going to learn to abstract them away yet.
[19:58:46] <imode> as gerikson said.
[19:59:23] <imode> I don't even think FP should be the norm, it's far too basic.
[20:00:26] <imode> mobile agents, millions of tiny processors.. I don't want a paradigm to become the norm that still thinks we're reducing lambda terms on paper, or writing symbols to a tape.
[20:00:42] <companion_cube> You just described elixir
[20:00:53] <imode> thaaat's not elixir.
[20:01:02] <imode> not even close.
[20:01:13] <imode> because it's not erlang, and erlang isn't close.
[20:01:23] <companion_cube> Millions of processes, mobile agents :D
[20:01:33] <imode> no, _processors_.
[20:01:42] <imode> and erlang processes aren't mobile.
[20:02:07] <companion_cube> No, but they can spawn a copy on another node, for example
[20:02:14] <companion_cube> Pretty close
[20:02:23] <imode> close but no cigar, I'm afraid.
[20:02:37] <companion_cube> Alright
[20:02:46] <companion_cube> But millions of tiny processors won't fly in C
[20:02:52] <imode> sure, so fuck C.
[20:03:08] <companion_cube> The abstraction of shared memory won't hold
[20:03:10] <imode> C is a gross mess that should've probably been supplanted by Pascal.
[20:03:23] <companion_cube> Agreed.
[20:03:35] <pja> It would have been, if Pascal wasn’t a weird language with a terrible type system.
[20:03:40] <imode> yeah..
[20:03:53] <imode> ..C is a weird language with a terrible type system, though. :P
[20:04:02] <pja> Even so, some good stuff was produced with it, using Pascal compilers that ignored the standard and bolted on a sane string type.
[20:04:36] <companion_cube> Stuff like TeX, damn
[20:05:00] <imode> companion_cube: put it to you this way, the state of a particular process should be fully independent from its environment. erlang processes have an identity that's tied to a host. erlang processes cannot "examine" their environment unless one has been provided, and their reproduction still needs to be structured.
[20:05:32] <companion_cube> Identity, not state
[20:05:43] <companion_cube> Their state is fully encapsulated
[20:05:52] <companion_cube> And yes, you need some mean of addressing
[20:05:56] <pja> imode: Fair.
[20:06:06] <pja> C got there first though.
[20:06:26] <pja> Now, if someone had been able to actually implement Algol properly...
[20:06:49] <imode> their state isn't fully encapsulated, because there's no standard concept of environment. therefore if a process is migrated blindly to another node, it needs to basically pack its entire apartment up with it and bring it along.
[20:07:05] <imode> you're not transporting a single process with some knowledge of how to do X Y Z, you're transporting its environment over as well.
[20:07:14] <imode> which is kind of the point of the whole "mobile agent" paradigm.
[20:07:33] <companion_cube> The environment is a closure
[20:07:35] <companion_cube> Hence FP
[20:07:58] <imode> no, because all of the surrounding processes that let that process "do something" still need to be connected and brought over.
[20:08:05] <companion_cube> But I agree they're not truly mobile.
[20:08:07] <imode> so sure, include them into the closure.
[20:08:21] <imode> you still need to lug all of that supplementary stuff around manually.
[20:08:29] <companion_cube> You don't need to bring these, just their address, on paper
[20:08:54] <companion_cube> They might not even be on the same node in the first place
[20:08:54] <imode> annnd if they become unaccessible?
[20:09:09] <companion_cube> Well that's distributed systems failure :)
[20:09:18] <companion_cube> You need to be able to deal with it anyway
[20:09:38] <companion_cube> If you have a million cores on your chip, some might also fail earlier than others
[20:09:39] <imode> that's a failure you shouldn't have, and wouldn't if you had the full mobile agents concept.
[20:10:04] <imode> don't reach across a network unless you're transporting something.
[20:10:05] <companion_cube> Sounds like an unimplementable concept, just like Turing machines
[20:10:15] <imode> on the contrary, I'm implementing it in my spare time.
[20:10:43] <companion_cube> 🤷
[20:19:10] <imode> one of the first things you need to do is start thinking about virtual topology (the "space" your agents exist in), and how to restrict or expand it. this removes the need for addressing, because any particular agent is fully specified by its local position in that virtual topology.
[20:20:02] <imode> think of it like talking to an NPC in a videogame. they exist in a particular place and serve a particular purpose. you can only use their services if you're present at that location.
[20:21:32] <imode> moving between nodes changes your position relative to other nodes. your network topology should feed into your local, virtual topology (network links should be realized as virtual links that agents can move between freely, translated into network activity underneath).
[20:22:09] <companion_cube> So what happens if a node fails?
[20:22:11] <imode> you also need to give agents the ability to extend or become a part of that virtual topology.
[20:22:32] <imode> then the virtual link breaks, and anybody waiting for transport gets put into a blocked state.
[20:23:46] <companion_cube> So how is that different from having the address of a process that crashed?
[20:23:48] <imode> the virtual topology is graph-oriented. each node in the graph is represented by an agent. each agent has a set of named ports that can be used to link agents together.
[20:24:57] <imode> "how is that different" -> if I wanted to, I could have an agent take the link over and perform store-and-foreward.
[20:25:40] <imode> so that activities could continue as normal. I have options, but I don't if I'm tying my agents together using (relatively) non-forgeable identifiers.
[20:30:00] <imode> I can do the stupid thing of "navigate to X, do thing Y, bring result back to Z" and not care about fault tolerance by being able to change the environment that an agent reacts to without having to make every agent aware of the change.
[20:37:40] <companion_cube> I'd rather see it I guess
[20:37:50] <companion_cube> like, how tou you program the topology itself.
[20:38:05] <imode> I actually have a little simulator for that.
[20:38:09] <imode> wanna see?
[20:39:34] <companion_cube> Send a link and I'll look after my walk :)
[20:41:08] <imode> http://okturing.com/src/13086/body
[20:42:40] <imode> the sample program assembles into a binary tree.
[20:44:46] <imode> I had to find a good solution to allow agents to become part of the topology, so you end up with this nested graph situation.
[20:47:05] <imode> where an agent, with a whole topology of agents orbiting it or linked to it, can then navigate along another set of agents, who may very well be orbiting or linked to other agents.
[20:47:12] <imode> turtles all the way down.
[21:35:02] <gwozniak> I guess I'm not getting this, because it feels like it is immensely complicated
[21:42:28] <imode> visuals help.
[21:44:11] <imode> it also helps to connect it to familiar programming concepts.
[21:44:48] <imode> most of the mobile agent stuff has been wrapped in obscurity and specifics, like transporting JVM images over the wire.
[21:45:12] <imode> interesting but not generally applicable, and definitely not a guiding principle for a computing environment.
[21:45:27] <imode> the most "complete" thing I can point to, I guess, is telescript. which is then itself obscure-ish.
[21:45:39] <imode> and generally not _that_ well designed or thought out.
[22:06:00] <companion_cube> I wonder if it's similar to graphic cards
[22:06:26] <companion_cube> they have a notion of topology  directly in the hardware, with memory hierarchies and all that
[22:20:53] <kronk> you can definitely model that topology with this technique.
[22:49:46] *** Joins: danderson (~dave@tailscale/danderson)
[23:24:49] *** Quits: nyarmith (~nyarmith@pool-72-95-220-156.pitbpa.fios.verizon.net) (Ping timeout: 256 seconds)
[23:28:03] <dmc[m]> https://preview.redd.it/i5cxuazuleh81.gif?format=mp4&s=a1875820763dd0cfaba94c181fa6c67993158ff1
[23:28:52] <riv> lol
[23:36:03] <kline> made me laugh, thanks
[23:46:24] <gwozniak> Great.  Installed Pi-hole and now my web server config is all fucked up
[23:47:03] <gwozniak> The joys of creating more work for myself by trying to do cool tech things
