[00:02:42] *** Quits: gravicappa (~gravicapp@145.255.1.142) (Ping timeout: 256 seconds)
[00:15:26] *** Quits: mro (~mro@port-92-195-201-197.dynamic.as20676.net) (Remote host closed the connection)
[00:16:16] *** Joins: mro (~mro@port-92-195-201-197.dynamic.as20676.net)
[00:44:27] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:b145:6efe:44b7:516c)
[01:08:05] *** Quits: mro (~mro@port-92-195-201-197.dynamic.as20676.net) (Remote host closed the connection)
[01:08:47] *** Joins: mro (~mro@2002:5cc3:c9c5:0:8107:35f1:c8eb:72f0)
[01:26:40] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:b145:6efe:44b7:516c) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[01:28:06] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[01:32:43] *** Joins: olle (~olle@i5E866D9C.versanet.de)
[01:45:46] *** Quits: bartholin (~bartholin@109.53.7.253) (Ping timeout: 245 seconds)
[01:47:03] *** Quits: emad (~emad@156.214.92.21) (Quit: Leaving)
[01:51:30] *** Quits: ouestbillie (~gallup@62.28.193.74) (Ping timeout: 256 seconds)
[01:57:49] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[01:58:00] *** Joins: bartholin (~bartholin@109.53.0.134)
[02:02:53] *** Joins: Techcable (~Techcable@168.235.93.147)
[02:03:47] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[02:19:59] *** Quits: mro (~mro@2002:5cc3:c9c5:0:8107:35f1:c8eb:72f0) (Quit: Leaving...)
[02:20:14] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[02:33:29] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:b145:6efe:44b7:516c)
[02:38:48] *** Joins: bobo_ (~bobo@37.170.22.193)
[02:39:06] *** Quits: spip (~bobo@37.170.22.193) (Ping timeout: 256 seconds)
[02:41:43] *** Quits: bartholin (~bartholin@109.53.0.134) (Quit: Leaving)
[02:49:57] *** Quits: bobo_ (~bobo@37.170.22.193) (Ping timeout: 240 seconds)
[02:50:12] *** Joins: bobo_ (~bobo@37.164.87.68)
[02:57:23] <d_bot> <Butanium (@me on answer)> > Butanium (@me on answer) ‚Äî 27/01/2022
[02:57:24] <d_bot> <Butanium (@me on answer)> > note to myself : never forget close_out oc or you'll spend 1 hours debugging why your program write file output 1 time on 10
[02:57:25] <d_bot> <Butanium (@me on answer)> note to myself : never forget `close_in ic` or you'll spend 1 hours debugging a linux machine you don't know because your program which works on windows crash on linux (too much file opened)
[02:58:26] <dh`> wouldn't it be nice if there were something that goes around and picks up unreferenced resources for you?
[02:58:40] <dh`> too bad garbage collection doesn't work for file handles.
[03:02:37] *** Quits: olle (~olle@i5E866D9C.versanet.de) (Ping timeout: 240 seconds)
[03:07:09] <d_bot> <Butanium (@me on answer)> yup
[03:19:10] *** Joins: pgiarrusso (sid258222@2a03:5180:f:4::3:f0ae)
[03:19:43] <pgiarrusso> has anybody else here seen https://github.com/ocaml/opam/issues/5035? (opam confuses "A depends on B" with "B depends on A")
[03:51:56] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:b145:6efe:44b7:516c) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[04:36:03] *** Quits: Tuplanolla (~Tuplanoll@91-159-68-166.elisa-laajakaista.fi) (Quit: Leaving.)
[04:51:42] <d_bot> <Et7f3> So we drop manual management of fd ? This has issues since it can be unpredictable when fd will be gc-ed. Or we end up with a mix but it might crash if os reuse fd. I don't think fd are specified to be unique.
[05:02:08] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:b145:6efe:44b7:516c)
[05:11:02] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[05:14:34] <dh`> et7f3, that's why it doesn't work -- the collector doesn't know which things are file handles or know that it should clean them up promptly
[05:14:44] <dh`> it could be made to know some of these things but it becomes a shitshow
[05:15:03] <dh`> (the os won't reuse file handles until you close them, that's not an issue)
[05:20:49] <companion_cube> @butanium use better functions than open_in
[05:54:46] *** Joins: zebrag (~chris@user/zebrag)
[06:15:49] *** Joins: epony (epony@user/epony)
[06:33:46] <qwr> its quite easy to have some unused reference somewhere, with memory its (temporary) leak, but with file handles it could get quite bad, some sort of linear typing might be more useful
[06:34:35] <qwr> (that is even if the "handle" gc were immeadiate, like refcounting)
[06:35:37] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-37-70-24-250-178.dsl.bell.ca) (Ping timeout: 240 seconds)
[06:43:20] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-46-67-70-100-72.dsl.bell.ca)
[06:54:07] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Ping timeout: 268 seconds)
[06:57:24] <d_bot> <Et7f3> The best I can see is in memory representation of fd and internally it is bool+real handle. The gc could prioritize this special type (eg use some kind of liveness analysis) to insert on exit or middle of function.
[06:58:50] <d_bot> <Et7f3> So linux fd just goes up ? Open =4, close(4), open =5 ? Same for mac os ? And windows it is pointer to raw memory so I don't think such guarantees hold.
[07:08:50] <companion_cube> just forget it, use functions that take care of that
[07:09:33] <d_bot> <Et7f3> It can be a fun project to do.
[07:10:13] <d_bot> <Et7f3> And it could be generalised to memory also.
[07:10:50] <companion_cube> it's not easy, and probably not worth doing :p
[07:11:10] <companion_cube> I mean, if you want to replace the GC with a refcounting scheme, you're free to try, but it'll never be merged
[07:12:17] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:12:32] <d_bot> <Et7f3> No i thought of try to get value that are never used after outside gc
[07:13:25] <d_bot> <Et7f3> ü§¶üèªi recall the name: escape analysis
[07:13:51] <companion_cube> that's at best a heuristic though
[07:13:58] <companion_cube> especially in a language so full of closures as OCaml
[07:14:19] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[07:31:42] *** Quits: OCamlPro[m] (~ocamlprom@2001:470:69fc:105::1:70d1) (K-Lined)
[07:31:42] *** Quits: JosEduardo[m] (~joseemdsm@2001:470:69fc:105::ce1d) (K-Lined)
[07:31:43] *** Quits: mclovin (~zapashcan@2001:470:69fc:105::43) (K-Lined)
[07:31:43] *** Quits: smondet[m] (~smondetma@2001:470:69fc:105::b33) (K-Lined)
[07:31:43] *** Quits: Sofi (~sofi@2001:470:69fc:105::1:44cc) (K-Lined)
[07:31:43] *** Quits: CodeBitCookie[m] (~code-bit-@2001:470:69fc:105::a2f) (K-Lined)
[07:31:43] *** Quits: saltrocklamp[m] (~hexology@user/hexology) (K-Lined)
[07:41:37] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 240 seconds)
[08:06:07] *** Quits: tizoc (~user@li296-221.members.linode.com) (Quit: Coyote finally caught me)
[08:12:43] *** Joins: tizoc (~user@li296-221.members.linode.com)
[08:16:39] *** Joins: smondet[m] (~smondetma@2001:470:69fc:105::b33)
[08:16:39] *** Joins: JosEduardo[m] (~joseemdsm@2001:470:69fc:105::ce1d)
[08:16:39] *** Joins: OCamlPro[m] (~ocamlprom@2001:470:69fc:105::1:70d1)
[08:16:39] *** Joins: saltrocklamp[m] (~hexology@user/hexology)
[08:16:40] *** Joins: CodeBitCookie[m] (~code-bit-@2001:470:69fc:105::a2f)
[08:16:40] *** Joins: Sofi (~sofi@2001:470:69fc:105::1:44cc)
[08:19:41] *** Quits: smondet[m] (~smondetma@2001:470:69fc:105::b33) (Quit: Client limit exceeded: 20000)
[08:19:42] *** Quits: OCamlPro[m] (~ocamlprom@2001:470:69fc:105::1:70d1) (Quit: Client limit exceeded: 20000)
[08:20:39] *** Quits: CodeBitCookie[m] (~code-bit-@2001:470:69fc:105::a2f) (Quit: Client limit exceeded: 20000)
[08:29:15] *** Quits: saltrocklamp[m] (~hexology@user/hexology) (Quit: Client limit exceeded: 20000)
[08:34:41] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:10:47] *** Joins: mbuf (~Shakthi@223.190.212.194)
[09:18:27] *** Joins: Everything (~Everythin@37.115.210.35)
[09:38:07] <d_bot> <darrenldl> heuristics is good enough of a solution for slightly too many people tho : D
[09:38:08] *** Joins: mclovin (~zapashcan@2001:470:69fc:105::43)
[09:38:08] *** Joins: smondet[m] (~smondetma@2001:470:69fc:105::b33)
[09:38:21] *** Joins: OCamlPro[m] (~ocamlprom@2001:470:69fc:105::1:70d1)
[09:38:21] *** Joins: saltrocklamp[m] (~hexology@user/hexology)
[09:38:21] *** Joins: CodeBitCookie[m] (~code-bit-@2001:470:69fc:105::a2f)
[09:41:35] *** Joins: ouestbillie (~gallup@62.28.193.74)
[09:53:27] *** Joins: gravicappa (~gravicapp@145.255.1.142)
[09:59:32] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[10:25:46] *** Quits: ouestbillie (~gallup@62.28.193.74) (Ping timeout: 245 seconds)
[11:41:30] *** Joins: dalek-caan (~Thunderbi@109.252.124.86)
[11:45:44] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:b145:6efe:44b7:516c) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[11:50:44] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[12:06:57] *** Joins: jlrnick (~josephler@2a01cb040a159400e5511466c56a8bd0.ipv6.abo.wanadoo.fr)
[12:07:57] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 276 seconds)
[12:15:08] *** Joins: Tuplanolla (~Tuplanoll@91-159-68-166.elisa-laajakaista.fi)
[12:18:37] *** Quits: jlrnick (~josephler@2a01cb040a159400e5511466c56a8bd0.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[13:01:41] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[13:28:15] <d_bot> <glennsl> You could also use `Gc.finalize`? Or are there significant caveats to that?
[13:31:45] *** Joins: humasect (~humasect@2001:1970:57e0:4100::1ae0)
[13:35:08] *** Quits: hackinghorn (~hackingho@user/hackinghorn) (Read error: Connection reset by peer)
[13:35:32] *** Joins: hackinghorn (~hackingho@user/hackinghorn)
[13:36:31] <sadiq> there's no guarantee when that is going to be called
[13:47:08] *** Joins: bartholin (~bartholin@109.53.2.50)
[14:00:20] <d_bot> <glennsl> For anything beyond the simple cases where you can use a higher level abstraction such as what @companion_cube suggests, it seems we're beyond the ability to provide guarantees anyway.
[14:00:33] <d_bot> <glennsl> Unless linear types are implemented.
[14:06:30] *** Joins: mro (~mro@port-92-195-235-19.dynamic.as20676.net)
[14:15:28] <d_bot> <Sliver> I don't understand why the REPL terminal couldn't be open when i execute Ocaml Code. Someone can help me ?
[14:15:29] <d_bot> <Sliver> https://cdn.discordapp.com/attachments/436568060288172044/937297458189459476/Capture_decran_2022-01-30_114441.png
[14:49:52] <d_bot> <Et7f3> open a terminal directly and launch the executable
[14:49:57] *** Quits: bobo_ (~bobo@37.164.87.68) (Ping timeout: 240 seconds)
[14:50:06] *** Joins: bobo_ (~bobo@37.171.106.105)
[14:50:11] <d_bot> <Et7f3> it might show you more detail on failure
[15:15:43] *** Quits: mro (~mro@port-92-195-235-19.dynamic.as20676.net) (Remote host closed the connection)
[15:31:02] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:33:07] <d_bot> <Sliver> The terminal shown me "cannot exec"
[15:34:14] <d_bot> <Et7f3> Windows terminal like cmd.exe ?
[15:34:35] <d_bot> <Et7f3> not terminal opened by vscode
[15:39:35] *** Joins: olle (~olle@i5E866D9A.versanet.de)
[15:45:57] *** Quits: bartholin (~bartholin@109.53.2.50) (Ping timeout: 240 seconds)
[15:52:24] <d_bot> <Sliver> oh ok
[15:55:07] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[15:55:52] <d_bot> <Sliver> but what is the executable in your sentence before ?
[15:58:28] *** Joins: bartholin (~bartholin@109.53.3.99)
[17:33:55] *** Quits: humasect (~humasect@2001:1970:57e0:4100::1ae0) (Remote host closed the connection)
[17:36:45] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[17:44:35] *** Joins: mro (~mro@port-92-195-235-19.dynamic.as20676.net)
[17:46:18] *** Quits: bartholin (~bartholin@109.53.3.99) (Ping timeout: 250 seconds)
[17:49:05] *** Quits: mro (~mro@port-92-195-235-19.dynamic.as20676.net) (Ping timeout: 250 seconds)
[17:49:44] *** Quits: gravicappa (~gravicapp@145.255.1.142) (Ping timeout: 256 seconds)
[17:51:14] <companion_cube> @darrendl: heuristics for resource control? omg no
[17:54:59] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[17:56:28] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[17:58:23] *** Joins: bartholin (~bartholin@109.53.0.249)
[17:58:52] *** Joins: salkin (~salkin@84.212.156.62)
[18:04:58] *** Joins: humasect (~humasect@2001:1970:57e0:4100::1ae0)
[18:09:13] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[18:16:22] *** Quits: bartholin (~bartholin@109.53.0.249) (Ping timeout: 256 seconds)
[18:24:25] <d_bot> <Butanium (@me on answer)> ```ocaml
[18:24:26] <d_bot> <Butanium (@me on answer)> let rec iter_rev f = function
[18:24:27] <d_bot> <Butanium (@me on answer)>   | [] -> ()
[18:24:29] <d_bot> <Butanium (@me on answer)>   | x :: xs -> iter_rev f xs; f x
[18:24:30] <d_bot> <Butanium (@me on answer)> ```
[18:24:31] <d_bot> <Butanium (@me on answer)> This fonction used on a huge list made my program throw `Stack_overflow`
[18:24:32] <d_bot> <Butanium (@me on answer)> Do you think that if I replace it by a
[18:24:34] <d_bot> <Butanium (@me on answer)> ```ocaml
[18:24:35] <d_bot> <Butanium (@me on answer)> List.iter f @@ List.rev very_big_list
[18:24:36] <d_bot> <Butanium (@me on answer)> ```
[18:24:38] <d_bot> <Butanium (@me on answer)> I'll have the same problem ?
[18:25:00] <d_bot> <orbitz> No
[18:25:02] <d_bot> <Butanium (@me on answer)> Since `List.rev` is tail recursive I don't think so
[18:25:04] <d_bot> <Butanium (@me on answer)> ok thanks
[18:26:03] <d_bot> <orbitz> Although the docs are not explicit on this
[18:27:13] <d_bot> <orbitz> https://github.com/ocaml/ocaml/blob/trunk/stdlib/list.ml#L60
[18:28:39] *** Joins: bartholin (~bartholin@109.53.2.89)
[18:32:20] *** Joins: mro (~mro@port-92-195-235-19.dynamic.as20676.net)
[18:42:01] *** Quits: mro (~mro@port-92-195-235-19.dynamic.as20676.net) (Remote host closed the connection)
[18:44:20] *** Joins: mro (~mro@port-92-195-235-19.dynamic.as20676.net)
[18:50:26] *** Quits: mro (~mro@port-92-195-235-19.dynamic.as20676.net) (Remote host closed the connection)
[18:51:39] *** Joins: mro (~mro@port-92-195-235-19.dynamic.as20676.net)
[19:00:50] *** Quits: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it) (Ping timeout: 250 seconds)
[19:18:21] *** Joins: gravicappa (~gravicapp@145.255.1.142)
[19:22:03] *** Joins: ralu5 (~ralu@static.211.245.203.116.clients.your-server.de)
[19:23:26] *** Quits: ralu (~ralu@static.211.245.203.116.clients.your-server.de) (Read error: Connection reset by peer)
[19:23:26] *** ralu5 is now known as ralu
[19:30:56] *** Quits: mro (~mro@port-92-195-235-19.dynamic.as20676.net) (Quit: Leaving...)
[20:05:30] *** Quits: mbuf (~Shakthi@223.190.212.194) (Quit: Leaving)
[20:16:13] *** Quits: bartholin (~bartholin@109.53.2.89) (Ping timeout: 250 seconds)
[20:29:42] *** Joins: bartholin (~bartholin@109.53.0.221)
[20:34:10] *** Quits: humasect (~humasect@2001:1970:57e0:4100::1ae0) (Remote host closed the connection)
[20:43:28] *** Joins: humasect (~humasect@2001:1970:57e0:4100::1ae0)
[20:54:35] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[21:09:26] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:b145:6efe:44b7:516c)
[21:19:56] *** Joins: shawnw (~shawn_w@152.44.212.188)
[21:51:18] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:b145:6efe:44b7:516c) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[21:55:01] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:b145:6efe:44b7:516c)
[21:55:49] *** Joins: Anarchos (~Anarchos@88.168.112.216)
[22:02:20] <d_bot> <goga03_> Hello, i am trying to create switch with opam for ocaml in vscode here are the errors. i tried updating opam but there is nothing changed, if someone knows what is the problem or what i should do, please hep me
[22:02:20] <d_bot> <goga03_> https://cdn.discordapp.com/attachments/436568060288172044/937414946600390666/unknown.png
[22:02:21] <d_bot> <goga03_> https://cdn.discordapp.com/attachments/436568060288172044/937414946831097866/unknown.png
[22:02:23] <d_bot> <goga03_> https://cdn.discordapp.com/attachments/436568060288172044/937414947045011496/unknown.png
[22:09:01] *** Joins: zebrag (~chris@user/zebrag)
[22:11:48] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[22:16:22] *** Quits: bartholin (~bartholin@109.53.0.221) (Ping timeout: 260 seconds)
[22:18:08] *** Quits: mclovin (~zapashcan@2001:470:69fc:105::43) (Quit: Bridge terminating on SIGTERM)
[22:18:08] *** Quits: Sofi (~sofi@2001:470:69fc:105::1:44cc) (Quit: Bridge terminating on SIGTERM)
[22:18:08] *** Quits: JosEduardo[m] (~joseemdsm@2001:470:69fc:105::ce1d) (Quit: Bridge terminating on SIGTERM)
[22:18:12] *** Quits: saltrocklamp[m] (~hexology@user/hexology) (Quit: Bridge terminating on SIGTERM)
[22:18:12] *** Quits: smondet[m] (~smondetma@2001:470:69fc:105::b33) (Quit: Bridge terminating on SIGTERM)
[22:18:16] *** Quits: CodeBitCookie[m] (~code-bit-@2001:470:69fc:105::a2f) (Quit: Bridge terminating on SIGTERM)
[22:18:17] *** Quits: OCamlPro[m] (~ocamlprom@2001:470:69fc:105::1:70d1) (Quit: Bridge terminating on SIGTERM)
[22:21:44] *** Joins: mclovin (~zapashcan@2001:470:69fc:105::43)
[22:22:59] <d_bot> <Butanium (@me on answer)> The version in opam switch create is the OCaml one not the opam one
[22:23:07] *** Joins: smondet[m] (~smondetma@2001:470:69fc:105::b33)
[22:23:19] *** Joins: JosEduardo[m] (~joseemdsm@2001:470:69fc:105::ce1d)
[22:23:19] *** Joins: OCamlPro[m] (~ocamlprom@2001:470:69fc:105::1:70d1)
[22:23:19] *** Joins: saltrocklamp[m] (~hexology@user/hexology)
[22:23:31] *** Joins: CodeBitCookie[m] (~code-bit-@2001:470:69fc:105::a2f)
[22:23:44] <d_bot> <Butanium (@me on answer)> try with 4.14.0
[22:23:45] *** Joins: Sofi (~sofi@2001:470:69fc:105::1:44cc)
[22:25:31] <d_bot> <goga03_> it is same
[22:25:40] <d_bot> <goga03_> list oc available compilers is empt
[22:25:59] <d_bot> <goga03_> idk how to create or what i should do
[22:27:21] <d_bot> <NULL> Didn't the script create a switch ?
[22:29:01] <d_bot> <goga03_> i tried to do it but it didnt help me
[22:29:36] <d_bot> <NULL> What does `opam switch` return ?
[22:29:51] *** Joins: bartholin (~bartholin@109.53.0.242)
[22:29:52] <d_bot> <goga03_> https://cdn.discordapp.com/attachments/436568060288172044/937421876567883846/unknown.png
[22:39:32] *** Quits: Anarchos (~Anarchos@88.168.112.216) (Quit: Vision[]: i've been blurred!)
[22:43:33] <d_bot> <NULL> The script is supposed to create a switch with `ocaml-variants.4.13.1+mingw64c`. That's what it did when I ran it yesterday
[22:47:01] *** Quits: mclovin (~zapashcan@2001:470:69fc:105::43) (Quit: Client limit exceeded: 20000)
[22:48:58] *** Quits: saltrocklamp[m] (~hexology@user/hexology) (Quit: Client limit exceeded: 20000)
[22:55:31] *** Quits: OCamlPro[m] (~ocamlprom@2001:470:69fc:105::1:70d1) (Quit: Client limit exceeded: 20000)
[22:55:32] *** Quits: smondet[m] (~smondetma@2001:470:69fc:105::b33) (Quit: Client limit exceeded: 20000)
[22:55:59] *** Quits: JosEduardo[m] (~joseemdsm@2001:470:69fc:105::ce1d) (Quit: Client limit exceeded: 20000)
[22:56:20] *** Quits: CodeBitCookie[m] (~code-bit-@2001:470:69fc:105::a2f) (Quit: Client limit exceeded: 20000)
[22:57:04] *** Quits: Sofi (~sofi@2001:470:69fc:105::1:44cc) (Quit: Client limit exceeded: 20000)
[23:14:03] <d_bot> <goga03_> do u have stepbystep tutorial for ocaml instalation on windows? it would help me a lot
[23:15:22] <d_bot> <Butanium (@me on answer)> You can use DKML https://diskuv.gitlab.io/diskuv-ocaml/ you just have to run one script but it's ~40Go of install
[23:22:18] <d_bot> <Alistair> Using WSL means you could use the Linux installation, in my experience it‚Äôs much better than attempting to install on windows
[23:25:35] <d_bot> <goga03_> oohh god i reinstalled ocaml and it works now. thank you guys for ur attention
[23:26:55] <d_bot> <goga03_> yeah i know linux is better for this kind of activity but i am using my laptop for university and because i have no experience with linux i cant install it right now
[23:27:38] <d_bot> <NULL> Enabling WSL and installing an instance is easy
[23:55:56] *** Quits: gravicappa (~gravicapp@145.255.1.142) (Ping timeout: 250 seconds)
