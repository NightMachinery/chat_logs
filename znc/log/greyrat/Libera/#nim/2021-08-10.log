[00:01:06] <FromDiscord> <TechnoRazor> It seems like an unnecessary call, as its memory was already wiped when `myProc` took ownership of it.
[00:07:13] <FromDiscord> <TechnoRazor> Is it a bug? It definitely doesn't seem like intended behavior.
[00:11:32] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3vuX
[00:11:39] <FromDiscord> <haxscramper> Do you use sinked object after?
[00:45:26] <FromDiscord> <TechnoRazor> I did not, and there was no compile-time warning about copying
[00:49:53] <FromDiscord> <TechnoRazor> In fact, I got a warning from running your code
[00:54:14] <FromDiscord> <haxscramper> Can you show your code?
[00:54:36] *** Joins: pyautogui (~pyautogui@cpe-76-176-12-47.san.res.rr.com)
[01:03:48] <FromDiscord> <TechnoRazor> sent a code paste, see https://play.nim-lang.org/#ix=3vvg
[01:05:16] *** Quits: ozzz (~oz@46.49.41.80) (Ping timeout: 272 seconds)
[01:05:46] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3vvh
[01:05:46] <FromDiscord> <haxscramper> this is really strange, yes
[01:06:11] <FromDiscord> <haxscramper> `--expandArc:main`
[01:07:45] <FromDiscord> <TechnoRazor> Should I open an issue about this or what?
[01:09:15] <FromDiscord> <haxscramper> I don't know, maybe it is expected, but I'm not really good with arc, so I'm not sure
[01:09:30] <FromDiscord> <haxscramper> But this does seem kind of unexpected to me
[02:10:35] <FromDiscord> <top level await> elegantbeef
[02:10:42] <FromDiscord> <top level await> i had a issue with the uhhh
[02:11:18] <FromDiscord> <top level await> json hook
[02:11:22] <FromDiscord> <top level await> i can't move it to a file for whatever reason
[02:12:48] <FromDiscord> <top level await> sent a code paste, see https://play.nim-lang.org/#ix=3vvs
[02:12:48] <FromDiscord> <top level await> in useer.nim
[02:12:57] <FromDiscord> <top level await> `↵import lib/[animations, config, useer]↵`
[02:13:16] <FromDiscord> <top level await> sent a code paste, see https://play.nim-lang.org/#ix=3vvt
[02:14:27] <FromDiscord> <Elegantbeef> What's the importing file look like?
[02:14:35] <FromDiscord> <top level await> wym
[02:14:39] <FromDiscord> <top level await> (edit) "wym" => "what do you mean?"
[02:15:00] <FromDiscord> <Elegantbeef> Well you're importing it so i want to see what that looks like
[02:15:06] <FromDiscord> <top level await> In reply to @top level await "` import lib/[animations, config,": here
[02:15:08] <FromDiscord> <top level await> oh
[02:15:11] <FromDiscord> <Elegantbeef> You're attempting to access `id` and it's not public
[02:15:22] <FromDiscord> <top level await> sent a code paste, see https://play.nim-lang.org/#ix=3vvu
[02:15:27] <FromDiscord> <top level await> that's where I'm using it
[02:15:30] <FromDiscord> <top level await> sent a code paste, see https://play.nim-lang.org/#ix=3vvv
[02:15:39] <FromDiscord> <Elegantbeef> Yea you're trying to acces `id`
[02:15:39] <FromDiscord> <Elegantbeef> Yea you're trying to accesd `id`
[02:15:42] <FromDiscord> <top level await> yes
[02:15:44] <FromDiscord> <Elegantbeef> It's not exported so you cannot access that
[02:15:55] <FromDiscord> <top level await> i've never used types lol
[02:15:58] <FromDiscord> <Elegantbeef> add an export marker to `id`
[02:16:01] <FromDiscord> <Elegantbeef> `id`
[02:16:07] <FromDiscord> <top level await> ohh
[02:16:08] <FromDiscord> <top level await> thank you
[02:16:20] <FromDiscord> <Elegantbeef> That's like a `public` field in other languages
[02:16:25] <FromDiscord> <top level await> ye syes
[02:16:33] <FromDiscord> <top level await> i also fixed that if statement to just crown = if statement
[02:17:35] <FromDiscord> <Elegantbeef> you know you can do `packet{"ch", "crown", "userId"}`?
[02:23:14] <FromDiscord> <top level await> no.. i didn't know that
[02:24:19] <FromDiscord> <top level await> how do I import a module one level below?
[02:24:58] <FromDiscord> <Elegantbeef> do you mean above?
[02:25:06] <FromDiscord> <top level await> ../
[02:25:32] <FromDiscord> <top level await> that's below i think
[02:25:55] <FromDiscord> <Elegantbeef> `../` is above, below is `folderName/subModule`
[02:26:20] <FromDiscord> <top level await> above the
[02:26:22] <FromDiscord> <top level await> (edit) "the" => "then"
[02:26:25] <FromDiscord> <top level await> I don't know how to do it though
[02:26:29] <FromDiscord> <top level await> cause `../` doesn't work
[02:27:40] <FromDiscord> <Elegantbeef> `../moduleName`
[02:48:16] <FromDiscord> <top level await> is it possible to dynamically import a libary?
[02:48:21] <FromDiscord> <top level await> (edit) "libary?" => "module?"
[02:48:44] <FromDiscord> <Elegantbeef> you can put it in a `when defined(someFlag)` then do `-d:someFlag` at compile time
[02:48:54] <FromDiscord> <Elegantbeef> If you mean at runtime, no cause modules and the like do not exist there
[02:49:06] <FromDiscord> <top level await> well I have a folder
[02:49:09] <FromDiscord> <top level await> that's filled with modules
[02:49:22] <FromDiscord> <top level await> and if one of hte modules matches, the module needs to be imported and executed
[02:49:27] <FromDiscord> <top level await> (edit) "matches," => "matches a string,"
[02:50:43] <FromDiscord> <top level await> what bout hot code reloading?
[02:51:34] <FromDiscord> <Elegantbeef> Well a plugin system/libraries make more sense but I dont know what you're doing
[02:52:52] <FromDiscord> <top level await> sent a code paste, see https://play.nim-lang.org/#ix=3vvC
[03:04:36] *** Quits: pyautogui (~pyautogui@cpe-76-176-12-47.san.res.rr.com) (Quit: Connection closed)
[03:04:58] <FromDiscord> <ynfle (ynfle)> HOw can I see which part can have sideeffect in a fun and why?
[03:05:22] <FromDiscord> <top level await> What connection how I can?
[03:06:28] <FromDiscord> <top level await> sent a code paste, see https://play.nim-lang.org/#ix=3vvE
[03:06:42] <FromDiscord> <top level await> bef
[03:06:45] <FromDiscord> <top level await> (edit) "bef" => "beef"
[03:06:50] <FromDiscord> <top level await> (edit) "https://play.nim-lang.org/#ix=3vvE" => "https://play.nim-lang.org/#ix=3vvF"
[03:14:05] <FromDiscord> <Elegantbeef> Like i said Nim doesnt care about modules at runtime
[03:14:21] <FromDiscord> <top level await> any other way this can be done?
[03:14:26] <FromDiscord> <Elegantbeef> Import all the modules you want to use, then either use a case statement, look up table or the macro system to annotate them so you can use them later
[03:38:14] *** Quits: max22- (~maxime@2a01cb08833598003780bb4e32542ba3.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[04:15:22] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[04:25:18] *** Joins: Pyautogui (~Pyautogui@cpe-76-176-12-47.san.res.rr.com)
[04:26:59] <Pyautogui> Newbie question: Why does this code give a syntax error? https://play.nim-lang.org/#ix=3vvK 
[04:28:19] <FromDiscord> <Elegantbeef> Cause you cannot have a generic procedure type
[04:28:50] <FromDiscord> <Elegantbeef> You'd want something like https://play.nim-lang.org/#ix=3vvM
[04:29:15] <Pyautogui> Got it. Thanks
[04:29:57] *** Quits: Pyautogui (~Pyautogui@cpe-76-176-12-47.san.res.rr.com) (Client Quit)
[04:42:42] *** Joins: madprops (~hj8oijo@user/madprops)
[04:42:44] <FromDiscord> <slymilano> Hey gang, I have my Nim project as #1 on hackernews' "Show HN"!
[04:43:25] <FromDiscord> <Elegantbeef> Congrats!
[04:44:11] <madprops> seems I visited the torrentinim repo in mid 2020 huh
[04:44:31] <madprops> i was wondering because the link had the "visited" tone
[04:45:58] <FromDiscord> <slymilano> yeah been plugging away at it every so often over the last year
[05:34:23] <FromDiscord> <undersquire> what gui libraries do you guys recommend? (preferably pure nim gui libraries, I have only found NiGui so far)
[05:35:00] *** Joins: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca)
[05:36:10] <FromDiscord> <undersquire> (edit) "(preferably" => "(trying to find"
[05:52:51] <FromDiscord> <codic> wow that is cool
[05:55:08] *** Quits: Mister_Magister (~Mister_Ma@user/mister-magister/x-2636733) (Quit: bye)
[05:55:20] *** Joins: Mister_Magister (~Mister_Ma@user/mister-magister/x-2636733)
[06:00:48] <FromDiscord> <Elegantbeef> Nimx, Fidget, are probably the most developed pure Nim GUI libraries
[06:05:31] <FromDiscord> <womble73> I am playing with wxnim at the moment but only because I wanted WebKit as well as other native GUI things. It has been a small battle. Depends on how pure you want, it wraps header files but you need to install wxwidgets and it doesn't play nice with all the latest. But none of the other lib's matched my needs.
[06:11:34] <federico3_> I use gintro
[06:21:29] *** Quits: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca) (Ping timeout: 248 seconds)
[06:29:52] *** Quits: byanka_ (~byanka@91.244.10.3) (Ping timeout: 258 seconds)
[06:31:42] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[06:32:49] *** Joins: flynn (~mcbloch@user/flynn)
[06:35:30] *** federico3_ is now known as federico3
[07:00:57] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:44:36] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[07:56:41] <FromDiscord> <undersquire> where can I learn macros in Nim more, the official docs don't really explain much
[07:56:51] <FromDiscord> <undersquire> (edit) "where can I learn ... macrosNim," 03added "more about" | "Nim more," => "Nim,"
[07:58:48] <FromDiscord> <Elegantbeef> I have this https://dev.to/beef331/demystification-of-macros-in-nim-13n8 but there are many macro explanations on the internet
[07:59:47] <FromDiscord> <Elegantbeef> https://peterme.net/metaprogramming-and-read-and-maintainability-in-nim.html
[08:00:03] <FromDiscord> <codic> wait that expandIf macro in your post might be useul
[08:00:04] <FromDiscord> <codic> (edit) "useul" => "useful"
[08:00:53] <FromDiscord> <Elegantbeef> Well it was inspired by someone asking how to make it
[08:01:01] <FromDiscord> <Elegantbeef> So someone atleast needed it
[08:01:06] <FromDiscord> <Elegantbeef> Rather wanted it
[08:02:31] <FromDiscord> <undersquire> thanks i will read those
[08:02:44] <FromDiscord> <Elegantbeef> If you have any more questions i can probably answer them
[08:17:44] <FromDiscord> <lamersc.com 🐧> I've never used SDL2 before, but am curious if the nim library is up to date?
[08:17:51] <FromDiscord> <lamersc.com 🐧> I'm planning on taking a shot at it
[08:17:59] <FromDiscord> <lamersc.com 🐧> and maybe making a simple platformer
[08:19:02] <FromDiscord> <Elegantbeef> Yea it's up to date afaik
[08:19:24] <FromDiscord> <Elegantbeef> Using it presently atleast
[08:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:51:17] <FromDiscord> <undersquire> In reply to @lamersc.com 🐧 "I've never used SDL2": use sdl2_nim library, not sdl2
[08:51:34] <FromDiscord> <undersquire> the official nim sdl2 bindings are not as up to date as sdl2_nim
[09:27:01] <FromDiscord> <lamersc.com 🐧> In reply to @undersquire "use sdl2_nim library, not": Thank you, I'll check it out
[11:21:41] *** Joins: Vladar (~Vladar@46.162.2.53)
[11:23:13] <FromDiscord> <enthus1ast> i'm curious, is it still true that sdl2 cannot use shaders?
[11:23:14] <FromDiscord> <enthus1ast> (withouth additional opengl context i mean)
[11:23:14] <FromDiscord> <Elegantbeef> Yes it's
[11:23:15] <FromDiscord> <enthus1ast> for ours games (in c++) we have used SFML, if i recall correctly it only supported gles2 but that was good enough, and compatible for old devices.
[11:23:15] <FromDiscord> <Elegantbeef> Yea i mean opengl + sdl2 is relatively simple
[11:27:39] *** Joins: max22- (~maxime@2a01cb088335980049b6259b019a657e.ipv6.abo.wanadoo.fr)
[11:39:40] *** Joins: PMunch (~PMunch@vpn.dualog.com)
[12:08:58] *** Joins: Pyautogui (~Pyautogui@cpe-76-176-12-47.san.res.rr.com)
[12:13:26] <Pyautogui> Newbie question again, sorry: https://play.nim-lang.org/#ix=3vwI. It is giving a odd error, which does not really make sense to me.
[12:16:07] <FromDiscord> <Elegantbeef> You're using `VM` so accessing the type description
[12:16:49] <Pyautogui> Oh, sorry. Stupid of me.
[12:17:10] <PMunch> Damn it, beat me to it
[12:17:57] <PMunch> Fixing that you also use Code as the name of a field in the Chunk object, while in your code you refer to it as code
[12:18:08] <supakeen> (in multiple places)
[12:18:29] <PMunch> Nim is only case-insensitive for all letters but the first
[12:19:33] <Pyautogui> Sorry. Late at night for me.
[12:21:51] <PMunch> This compiles, but I've made some assumptions that might not be right for you: https://play.nim-lang.org/#ix=3vwJ
[12:22:10] <Pyautogui> Thanks. I have actually already fixed.
[12:22:50] <FromDiscord> <Elegantbeef> What's the point of saying `uint16(1)` on that enum
[12:23:14] <FromDiscord> <Elegantbeef> enums are best sized, and use whatever you tell them for all the numbers so you can just do `Op_ret = 1`
[12:23:36] <PMunch> Yeah I don't think that would actually do much, if anything at all
[12:24:04] <FromDiscord> <Elegantbeef> It doesnt do anything afaik
[12:24:32] <FromDiscord> <Elegantbeef> yea the `ord` is a int
[12:24:34] <Pyautogui> I was trying to follow crafting interpreters. I am not very knowledgable about Nim's enums. Thank you, I will fix it.
[12:25:53] <PMunch> If for some reason you really need it to be two bytes large for some reason there is a way to force it, but not sure if you can force the data-type to be uint at the same time
[12:26:00] <PMunch> You probably don't need that though
[12:26:22] <Pyautogui> No, thank you for the suggestion though.
[12:26:27] <FromDiscord> <Elegantbeef> There probably isnt much reason to give a first value to be fair
[12:27:26] <FromDiscord> <Elegantbeef> Since it's doubtful the value is really important
[12:27:50] <Pyautogui> No, it is not. I have changed the code not to use the value.
[12:28:02] <Pyautogui> (and not define it)
[12:28:37] <FromDiscord> <Elegantbeef> is that constants supposed to be the size of TokenType?
[12:28:59] <FromDiscord> <Elegantbeef> If so you can do `array[TokenType, uin16]`
[12:29:12] <FromDiscord> <Elegantbeef> Then index it with the enum value
[12:29:24] <PMunch> Oh, good idea
[12:29:46] <FromDiscord> <Elegantbeef> Thanks i'm allowed one of them every 2.5months
[12:29:49] <FromDiscord> <Elegantbeef> So see you again then
[12:29:58] <Pyautogui> No need. Thanks for the suggestion
[12:32:37] <PMunch> What do you mean "no need"? If the constants are intended to be indexed by TokenType then setting it as an array with that as the index is a neat little trick
[12:33:22] <Pyautogui> I meant that that was not the purpose of TokenType
[12:33:43] <Pyautogui> Sorry for the ambigous phrasing
[12:34:21] <PMunch> Ah right, with the snippet you sent is was hard to tell as that's the only time you use it
[12:43:13] <FromDiscord> <tbrekalo> Hello, new to nim; I am coming from a cpp background. Interested is there something something like std::vector::reserve in nim sequence?
[12:44:10] <FromDiscord> <tbrekalo> (edit) "sequence?" => "sequence?↵↵Also, is there something with auto& like functionality?"
[12:44:12] <FromDiscord> <pointystick> newSeqOfCap, I think
[12:44:25] <FromDiscord> <tbrekalo> In reply to @pointystick "newSeqOfCap, I think": Thanks 👌
[12:44:43] <FromDiscord> <enthus1ast> https://nim-lang.org/docs/system.html#newSeq%2Cseq%5BT%5D%2CNatural
[12:44:52] *** Quits: Pyautogui (~Pyautogui@cpe-76-176-12-47.san.res.rr.com) (Quit: Connection closed)
[12:45:00] <FromDiscord> <Elegantbeef> There are a multitude of newSeq procs which may help you
[12:45:04] <FromDiscord> <Elegantbeef> no clue what auto& does
[12:45:27] <FromDiscord> <enthus1ast> there is an auto type in nim
[12:45:45] <FromDiscord> <enthus1ast> i think it should behave similar
[12:45:56] <FromDiscord> <Elegantbeef> It does
[12:46:04] <FromDiscord> <Elegantbeef> But the `auto&` is what a auto reference?
[12:47:14] <FromDiscord> <tbrekalo> In reply to @Elegantbeef "But the `auto&` is": Yes
[12:48:21] <FromDiscord> <tbrekalo> Takes a reference to an object.. Let's say I want to access a last element in a sequence repeatedly and instead of typing `s[^1]`, I would like to access it via reference.. something like `auto& curr_elem = s[^1]`. That way I can modify the `s[^1]` through `curr_elem`
[12:49:09] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3vwR
[12:49:42] <FromDiscord> <tbrekalo> In reply to @Elegantbeef "Ah there is `byaddr`": Thanks 👍🏿
[12:49:45] <PMunch> Assuming that the type in the sequence is not already a reference type of course
[12:50:07] <PMunch> Then you will just get the reference and can modify it as a reference directly
[12:50:28] <FromDiscord> <tbrekalo> Thanks guys 🙂
[12:50:33] <FromDiscord> <Elegantbeef> No problem
[12:51:09] <PMunch> In this case you could of course also create a template
[12:51:28] <PMunch> If you just want to save yourself having to type [^1] which can be awkward on some layouts
[12:51:44] <PMunch> `template curr_elem = s[^1]`
[12:52:13] <FromDiscord> <Elegantbeef> Nope pmunch you left out the return type
[12:52:18] <FromDiscord> <Elegantbeef> That's an error!
[12:53:09] <FromDiscord> <Elegantbeef> `template currElem: auto = s[^1]` for this hypothetical collectio
[12:53:09] <FromDiscord> <Elegantbeef> `template currElem: auto = s[^1]` for this hypothetical collection
[12:53:30] <FromDiscord> <tbrekalo> What I am actually trying is to compress https://en.wikipedia.org/wiki/FASTA_format so that each DNA base is encoded as two bits and nim's bit operations are kinda.. Uhhh
[12:54:07] <FromDiscord> <Elegantbeef> Nim's bit ops are awesome \:P
[12:54:48] <PMunch> Oh shit, you're right Elegant
[12:54:56] <FromDiscord> <enthus1ast> https://nim-lang.org/docs/bitops.html
[12:55:54] <FromDiscord> <tbrekalo> In reply to @enthus1ast "https://nim-lang.org/docs/bitops.html": Yes, using that and I find it clunky 😦
[12:56:21] <PMunch> Huh, how have I not seen the bitops module until now?
[12:56:29] <PMunch> I always do my bit operations by hand..
[12:56:42] <FromDiscord> <Elegantbeef> peasant
[12:57:04] <PMunch> It's not much, but it's honest work :P
[12:57:05] *** Joins: Pyautogui (~Pyautogui@cpe-76-176-12-47.san.res.rr.com)
[12:57:06] <FromDiscord> <Elegantbeef> Why do you even need bit ops?
[12:57:15] <FromDiscord> <tbrekalo> In reply to @Elegantbeef "Why do you even": Asking me?
[12:57:19] <FromDiscord> <Elegantbeef> Yea
[12:57:29] <FromDiscord> <tbrekalo> In reply to @Elegantbeef "Yea": give me a moment
[12:59:12] <FromDiscord> <tbrekalo> In reply to @Elegantbeef "Why do you even": To achieve this: https://github.com/rvaser/biosoup/blob/62b942c921c5a42f92020b283884a3f6afeb7e9d/include/biosoup/nucleic_acid.hpp#L61
[12:59:56] <FromDiscord> <Elegantbeef> So each letter is turned into how many bits in your desired output?
[13:01:26] <FromDiscord> <tbrekalo> 2 bits
[13:01:40] <FromDiscord> <enthus1ast> @tbrekalo\: we also have a nim science channel by the way
[13:01:58] <FromDiscord> <tbrekalo> In reply to @enthus1ast "<@783283008567640125>\: we also have": Should I go there or this is the place?
[13:02:19] <FromDiscord> <enthus1ast> no just mentioning, in case you don't know \:)
[13:06:42] <FromDiscord> <proud linux user> why balck imjoi
[13:07:57] <PMunch> Probably more people here, so for general Nim help this would be the place to be
[13:08:09] <PMunch> @proud linux user, why not?
[13:09:01] <FromDiscord> <Rika> What did he say?
[13:10:06] <FromDiscord> <enthus1ast> @tbrekalo\: maybe something like this could help\: https://github.com/sealmove/bitstreams
[13:10:08] <nrds> <04prestigebot99> 4GitHub: 7"Interface for reading per bits"
[13:10:23] <FromDiscord> <enthus1ast> then you can just write out the bits for each basepair
[13:10:51] <FromDiscord> <Elegantbeef> I'm pretty dumb cause there is way more than 4 choices \:D
[13:11:38] <FromDiscord> <tbrekalo> Thanks; will look into that. I am also struggling with generics a bit.. `decltype(vec_obj)::value_type` Looking for that sort of functionality in nim
[13:12:27] <FromDiscord> <Rika> For a sequence or an array
[13:12:43] <FromDiscord> <tbrekalo> why not both? 😆 ↵sequence in this case
[13:13:13] <FromDiscord> <Elegantbeef> Well i had fun compressing it without using any manual bitops got \~37 if my logic isnt wrong https://play.nim-lang.org/#ix=3vx5
[13:13:46] <FromDiscord> <Rika> theSeq.T should work?
[13:14:04] <FromDiscord> <Elegantbeef> `theSeq.type.T` maybe
[13:14:19] <FromDiscord> <Rika> Better to use typeof
[13:14:30] <FromDiscord> <Elegantbeef> You're not my real mom!
[13:14:42] <FromDiscord> <tbrekalo> Thanks guys; I have a lot of to digest now
[13:14:44] <FromDiscord> <Rika> Call me mommy
[13:14:46] <PMunch> So basically you want to compress stuff like GATTACA to a sequence of bits, two per letter?
[13:15:02] <PMunch> Because there are only four options two bits can hold them just fine
[13:15:13] <FromDiscord> <tbrekalo> Yes
[13:15:24] <PMunch> Interesting
[13:15:25] <FromDiscord> <Elegantbeef> And a slight modification of my code will give that
[13:16:14] <FromDiscord> <tbrekalo> Thanks; I'll probably request a code review later today or tomorrow
[13:16:35] <FromDiscord> <Elegantbeef> I'm actually pretty surprised that my compression worked so simply
[13:17:00] <FromDiscord> <Elegantbeef> I expected it to have to do some coercing the savings to appear
[13:17:26] <FromDiscord> <Rika> You’re missing a “for”
[13:17:34] <FromDiscord> <enthus1ast> i think the reason it is to not compress fasta is to search it faster (but what do i know, not a biochemist ;) )
[13:18:18] <FromDiscord> <tbrekalo> Actually to compress it because datasets loaded into memory take up few tens of GB
[13:18:24] <FromDiscord> <Elegantbeef> Oh nvm it didnt compress it
[13:18:34] <FromDiscord> <Elegantbeef> This data has symbols mine doesny
[13:18:40] <FromDiscord> <Elegantbeef> Whew i'm not crazy
[13:24:51] *** Quits: Pyautogui (~Pyautogui@cpe-76-176-12-47.san.res.rr.com) (Quit: Connection closed)
[13:35:08] <PMunch> @tbrekalo, did this for fun: http://ix.io/3vxg/nim
[13:35:32] <FromDiscord> <tbrekalo> thanks!
[13:35:57] <FromDiscord> <Elegantbeef> Wow look at this dude actually compress stuff
[13:36:02] <FromDiscord> <Elegantbeef> Big brain over here
[13:36:19] <PMunch> You could obviously replace that loop over the string with something like a streaming read from a file
[13:39:23] <FromDiscord> <tbrekalo> Umm, my 2nd day of nim 😆  still struggling with some rng stuff. I'll send you min impl by noon
[13:39:56] <FromDiscord> <Elegantbeef> Ah noon so you've given yourself 9 hours
[13:40:01] <PMunch> RNG in DNA, sounds like a recipe for cancer :P
[13:40:19] <FromDiscord> <Elegantbeef> Well within an acceptable amount of course pmunch
[13:45:37] <FromDiscord> <dimspith> How can i watch a file for changes asynchronously in nim? i'd like to have a variable storing the last modified time of a file and update it's contents dynamically.
[13:45:50] <FromDiscord> <Elegantbeef> also pmunch using `genome.len - 1` instead of `genomone.high`... 😀
[13:49:11] <PMunch> http://ix.io/3vxj/nim
[13:49:44] <PMunch> Just a bit more fun, now it has it's own type, and an accessor so you can easily get out the different nucleobases from the binary data or iterato over it :)
[13:49:52] <PMunch> @tbrekalo ^
[13:49:59] <FromDiscord> <Elegantbeef> still using `.len - 1`
[13:50:13] <PMunch> Yes, because logically that's what I'm doing
[13:50:33] <FromDiscord> <Elegantbeef> but that's what `genome.high` is?
[13:50:39] <PMunch> I'm not trying to get the highest index, I'm subtracting one from the length so I get the proper rounding effect
[13:50:43] <FromDiscord> <Rika> Yes but that isn’t the intention
[13:50:48] <PMunch> I like to differentiate the two cases :P
[13:50:59] <PMunch> The result would be exactly the same
[13:51:12] <FromDiscord> <Elegantbeef> Of course but i'm just joking around
[13:51:31] <PMunch> It's an interesting question though
[13:52:25] <PMunch> I mean they are functionally equivalent, but I feel this one is more "correct" with the intent I have there as opposed to using .high. Makes it a bit more clear what I'm trying to do
[13:52:52] <FromDiscord> <Elegantbeef> \Can i atleast joke about using `+= 1` instead of `inc`?!
[13:54:20] <PMunch> Haha, you can joke about anything :) It just reminded me of an interesting stylistic discussion
[13:55:41] <PMunch> Since most languages don't have these systems it's one I haven't seen much before. But with Nim and these handy operations for these common tasks I think it's an interesting discussion
[13:55:47] <PMunch> Same with `reset`
[13:56:16] <PMunch> I like using reset instead of ` = 0` or whatever the default value is
[13:56:56] <FromDiscord> <Elegantbeef> I didnt even know reset existed
[13:57:05] <PMunch> Because reset explains what I'm actually trying to do. I don't care what the value actually is, I just want to reset it back to what it would be if I hadn't assigned anything to it
[13:57:18] <PMunch> It's pretty neat, can be helpful in generic code as well
[13:58:00] <FromDiscord> <Elegantbeef> Yea i mean it's just short hand of `a = default(typeof(a))`
[14:46:27] <FromDiscord> <KnorrFG> if i have an enum in c, and i wanna cycle through it, id do something like this `state = (state + 1) % 3` (if the enum has 3 values) what is the nim-equivalent for this?
[14:53:10] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[14:57:06] *** Joins: Vladar (~Vladar@46.162.2.53)
[15:01:47] <FromDiscord> <hotdog> In reply to @dimspith "How can i watch": @dimspith there’s a few bindings for libfswatch you could use - https://nimble.directory/search?query=fswatch+
[15:06:16] <PMunch> KnorrFG, you can use inc to increase the value of an enum
[15:06:20] <PMunch> But that doesn't wrap
[15:12:23] <FromDiscord> <KnorrFG> Yep, that's what I found out too. I'll just go with an extra if I guess
[15:13:43] <PMunch> Could wrap it as a `next` proc or template
[15:14:36] <FromDiscord> <System64 ~ Flandre Scarlet> Hello, does the Nim bindings of SDL2 allow to do that kind of things? https://media.discordapp.net/attachments/371759389889003532/874604134173638696/unknown.png
[15:15:13] <PMunch> @System64, sure why wouldn't they?
[15:17:03] <FromDiscord> <System64 ~ Flandre Scarlet> 'cause C doesn't allow it
[15:18:14] <FromDiscord> <jtiai> In reply to @System64 "'cause C doesn't allow": I recommend to use Vladr4 sdl2_nim. It's better than "official" bindings.
[15:18:22] <FromDiscord> <dom96> In reply to @dimspith "How can i watch": if you want a fun project you can port https://github.com/nim-lang/graveyard/blob/master/fsmonitor/src/fsmonitor.nim to async/await
[15:18:46] <FromDiscord> <haxscramper> In reply to @System64 "'cause C doesn't allow": C does not have lambdas, nim does
[15:19:06] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @jtiai "I recommend to use": What does it add?
[15:19:08] <FromDiscord> <haxscramper> The part you outlined assigns lambda to a field in constructor
[15:19:37] <FromDiscord> <haxscramper> So naturally C would not allow for that, but it is not really related to SDL I think
[15:19:52] <FromDiscord> <Rika> Couldn’t you technically do that by passing the address of a function
[15:19:54] <FromDiscord> <System64 ~ Flandre Scarlet> ah alright
[15:20:53] <FromDiscord> <jtiai> In reply to @System64 "What does it add?": Bindings are done more nim-style than plain C-bindings to nim which official ones are.
[15:21:24] <FromDiscord> <System64 ~ Flandre Scarlet> ah alright, let me check that
[15:22:10] <FromDiscord> <jtiai> And technically, sdl2_nim was created before official one. 😄
[15:23:03] <FromDiscord> <jtiai> It's mainly how sdl2_nim handles types etc. They're better. And good set of examples and docs. But they're not that different. Both enables the same stuff.
[15:25:17] <FromDiscord> <tbrekalo> In reply to @PMunch "Just a bit more": http://ix.io/3vxC/nim
[15:26:23] <PMunch> You don't need that {size} pragma, enums are automatically the smallest possible size
[15:26:57] <FromDiscord> <tbrekalo> In reply to @PMunch "You don't need that": thanks
[15:27:42] <FromDiscord> <tbrekalo> How does enum encoding work under the hub? How can I benchmark is lookup table faster than default enum decoding in nim?
[15:28:14] <PMunch> Uhm, that `pos shr 5` is not going to work as soon as you go over 5 bits in size..
[15:28:31] <PMunch> There are a lot of odd choices in this code..
[15:28:44] <PMunch> 32 + 0.999 for example
[15:28:56] <PMunch> And what is the baseEncoder for?
[15:29:01] <FromDiscord> <tbrekalo> In reply to @PMunch "Uhm, that `pos shr": wym?
[15:29:26] <FromDiscord> <tbrekalo> In reply to @PMunch "And what is the": It's a lookup table for encoding chars to base values used for bit mapping
[15:30:18] <PMunch> Oh wait, that shr thing might actually work
[15:30:30] <PMunch> But why?
[15:31:41] <PMunch> Eh, I guess it might be slightly faster depending on the CPU, hard to tell without a benchmark
[15:32:08] <PMunch> Speaking of how to benchmark, just generate a bunch of valid data (or run on a data-set) and test both approaches against each other
[15:33:17] *** Joins: neurocyte (~neurocyte@user/neurocyte)
[15:34:05] <PMunch> By the way here you don't need to declare the type: var buffer: seq[Base] = newSeqOfCap[Base](fasta.size)
[15:34:15] <FromDiscord> <tbrekalo> Because one block encodes 32 bases which is 2^5. You can write each `pos` as `x|y` in bits. (here I use `|` as concatenation operator with bit strings) `y` is 5 bits long because it represents number in range (0-31) which are always discarded in whole division with 32
[15:34:32] <PMunch> Same for your strings at the end
[15:35:09] <PMunch> Yeah I realised that it would work as I tried to type out why it wouldn't :P
[15:36:02] <FromDiscord> <tbrekalo> In reply to @PMunch "By the way here": Thanks 🙂 I have a bad habit of redundant typedefs xD
[15:37:28] <PMunch> And the lookup table might be faster than the parseEnum route, but I doubt it'd be much faster than a case statement
[15:38:28] *** Joins: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca)
[15:40:14] <FromDiscord> <tbrekalo> got one quesiton regarding code
[15:41:06] <FromDiscord> <tbrekalo> `result.data = newSeq[uint64]((data.len() / 32 + 0.999).toInt()` Can I deduce the type argument for `newSeq` from `result.data`. I asked that earlier but failed to translate answers to code
[15:41:34] <PMunch> What do you mean?
[15:41:52] <PMunch> Instead of having to type newSeq[uint64] use the type from result.data?
[15:43:05] <FromDiscord> <tbrekalo> I would like to be able to write something like: `result.data = newSeq[typeof(result.data[0])] ....`
[15:43:06] <FromDiscord> <Rika> Put “typeof(result.data)” instead of the uint part
[15:43:08] <FromDiscord> <Rika> ?
[15:43:23] *** Joins: Pyautogui (~Pyautogui@cpe-76-176-12-47.san.res.rr.com)
[15:43:23] <FromDiscord> <Rika> Oh that’s what you mean
[15:43:34] <FromDiscord> <Rika> (edit) "“typeof(result.data)”" => "“typeof(result.data).T”"
[15:43:38] <FromDiscord> <Rika> I forgot the T part
[15:44:21] <FromDiscord> <proud linux user> bruh
[15:44:31] <FromDiscord> <tbrekalo> In reply to @Rika "Put “typeof(result.data).T” instead of": but I get `Error: undeclared field: 'T' `
[15:44:41] <FromDiscord> <Rika> Outside of the typeof?
[15:44:53] <FromDiscord> <tbrekalo> yes
[15:45:03] <FromDiscord> <tbrekalo> brb few mins
[15:45:52] <FromDiscord> <proud linux user> min
[15:46:16] *** Quits: Pyautogui (~Pyautogui@cpe-76-176-12-47.san.res.rr.com) (Client Quit)
[15:46:33] <FromDiscord> <Rika> Then import typetraits and typeof(result.data).genericParams().get(0)
[15:47:02] <PMunch> Rika, I have never seen that .T thing, where did you get that from?
[15:47:25] <FromDiscord> <Rika> I was pretty sure it was valid for generics
[15:47:42] <FromDiscord> <Rika> I do not remember
[15:48:23] *** Joins: arkurious (~arkurious@user/arkurious)
[15:48:36] <FromDiscord> <Rika> Actually I guess elementType from typetraits also works
[15:50:14] *** Quits: max22- (~maxime@2a01cb088335980049b6259b019a657e.ipv6.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[15:50:39] *** Joins: rockcavera (~rc@192.12.114.220)
[15:50:40] *** Quits: rockcavera (~rc@192.12.114.220) (Changing host)
[15:50:40] *** Joins: rockcavera (~rc@user/rockcavera)
[15:53:29] <FromDiscord> <tbrekalo> Thanks @Rika !↵It works 🙂
[15:55:11] <FromDiscord> <Rika> The second one I sent (elementType) should be cleaner
[15:56:42] <FromDiscord> <System64 ~ Flandre Scarlet> does someone know how can I make a lambda there please? https://media.discordapp.net/attachments/371759389889003532/874614732525559818/unknown.png
[15:57:16] <FromDiscord> <Rika> Making lambdas should be in the manual
[15:59:05] <FromDiscord> <dimspith> In reply to @dom96 "if you want a": Sounds like a good chance to learn more about async/await and contribute. Thanks!
[16:08:22] <FromDiscord> <System64 ~ Flandre Scarlet> nice, first try https://media.discordapp.net/attachments/371759389889003532/874617665346502706/unknown.png
[16:10:42] <FromDiscord> <Rika> Cursed indentation ngl
[16:21:56] *** Quits: arkurious (~arkurious@user/arkurious) (*.net *.split)
[16:21:56] *** Quits: neurocyte (~neurocyte@user/neurocyte) (*.net *.split)
[16:21:56] *** Quits: Vladar (~Vladar@46.162.2.53) (*.net *.split)
[16:21:56] *** Quits: flynn (~mcbloch@user/flynn) (*.net *.split)
[16:21:56] *** Quits: pjzz (~pjz@place.org) (*.net *.split)
[16:21:56] *** Quits: systemds1cks (~systemdsu@user/systemdsucks) (*.net *.split)
[16:21:57] *** Quits: PMunch (~PMunch@vpn.dualog.com) (*.net *.split)
[16:21:57] *** Quits: Mister_Magister (~Mister_Ma@user/mister-magister/x-2636733) (*.net *.split)
[16:21:58] *** Quits: Jjp137 (~Jjp137@2603-8000-2a01-3406-92fb-a6ff-fee2-6861.res6.spectrum.com) (*.net *.split)
[16:21:58] *** Quits: emery (~quassel@2a03:3b40:fe:ab::1) (*.net *.split)
[16:21:58] *** Quits: oprypin (~irc@pryp.in) (*.net *.split)
[16:21:59] *** Quits: xet7 (~xet7@user/xet7) (*.net *.split)
[16:21:59] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (*.net *.split)
[16:21:59] *** Quits: jkl (~jkl@user/jkl) (*.net *.split)
[16:22:00] *** Quits: happycorsair[m] (~happycors@2001:470:69fc:105::205) (*.net *.split)
[16:22:00] *** Quits: lain (~lain@172.16.254.xxx) (*.net *.split)
[16:22:00] *** Quits: kayabaNerve (~kayabaNer@user/kayabanerve) (*.net *.split)
[16:22:01] *** Quits: mal`` (~mal``@static.38.6.217.95.clients.your-server.de) (*.net *.split)
[16:22:01] *** Quits: euantorano (sid180289@id-180289.brockwell.irccloud.com) (*.net *.split)
[16:22:02] *** Quits: mahlon (~mahlon@martini.nu) (*.net *.split)
[16:22:02] *** Quits: mjsir911 (~bnc@user/mjsir911) (*.net *.split)
[16:22:02] *** Quits: icebattle (~wayne@S010600fc8ddfd2b3.vc.shawcable.net) (*.net *.split)
[16:22:03] *** Quits: blackbeard420 (~blackbear@2600:3c03:e000:297::) (*.net *.split)
[16:22:03] *** Quits: Amun-Ra (~amun-ra@retro.rocks) (*.net *.split)
[16:22:03] *** Quits: rockcavera (~rc@user/rockcavera) (*.net *.split)
[16:22:03] *** Quits: supakeen (~user@python/site-packages/supakeen) (*.net *.split)
[16:22:03] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (*.net *.split)
[16:22:03] *** Quits: drewr (~drew@user/drewr) (*.net *.split)
[16:22:03] *** Quits: nrds (~NimBot@ns501209.ip-142-4-210.net) (*.net *.split)
[16:22:03] *** Quits: koltrast (~koltrast@h77-53-57-114.cust.a3fiber.se) (*.net *.split)
[16:22:03] *** Quits: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca) (*.net *.split)
[16:22:03] *** Quits: mst (~matthewt@vps-6c71e929.vps.ovh.net) (*.net *.split)
[16:22:03] *** Quits: ormiret (sid314108@id-314108.tooting.irccloud.com) (*.net *.split)
[16:22:04] *** Quits: [R] (~rs@genoce.org) (*.net *.split)
[16:22:05] *** Quits: madprops (~hj8oijo@user/madprops) (*.net *.split)
[16:22:05] *** Quits: cyraxjoe (~joe@201.159.96.13) (*.net *.split)
[16:22:05] *** Quits: Freneticks (~Frenetick@gw.ptr-80-238-209-252.customer.ch.netstream.com) (*.net *.split)
[16:22:05] *** Quits: dmu (~darkmusic@user/darkmusic) (*.net *.split)
[16:22:05] *** Quits: Onionhammer (~onionhamm@207-153-1-151.fttp.usinternet.com) (*.net *.split)
[16:22:05] *** Quits: FromDiscord (~FromDisco@mail.nim-lang.org) (*.net *.split)
[16:22:05] *** Quits: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it) (*.net *.split)
[16:22:06] *** Quits: federico3 (~quassel@debian/federico) (*.net *.split)
[16:22:06] *** Quits: def- (~def-@static.238.114.9.176.clients.your-server.de) (*.net *.split)
[16:22:06] *** Quits: LyndsySimon (sid34452@id-34452.tooting.irccloud.com) (*.net *.split)
[16:22:06] *** Quits: dom96 (~dom@mail.nim-lang.org) (*.net *.split)
[16:22:07] *** Quits: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113) (*.net *.split)
[16:22:07] *** Quits: redj (~quassel@bras-base-bchmpq5707w-grc-24-76-69-197-62.dsl.bell.ca) (*.net *.split)
[16:22:07] *** Quits: asd (~noname@user/asd) (*.net *.split)
[16:22:08] *** Quits: ecs (ecs@user/ecs) (*.net *.split)
[16:22:08] *** Quits: notchris (sid181145@id-181145.stonehaven.irccloud.com) (*.net *.split)
[16:22:08] *** Quits: sagax (~sagax@213.138.71.146) (*.net *.split)
[16:22:08] *** Quits: nisstyre (~wes@user/nisstyre) (*.net *.split)
[16:22:08] *** Quits: NimBot (~NimBot@mail.nim-lang.org) (*.net *.split)
[16:22:08] *** Quits: crem (~crem@2a02:169:160a:1:9b30:962e:76eb:4bb3) (*.net *.split)
[16:22:08] *** Quits: mikko (~mikko@2a02:7b40:d418:6a61::1) (*.net *.split)
[16:22:08] *** Quits: GreaseMonkey (greaser@user/greasemonkey) (*.net *.split)
[16:27:46] *** Joins: asd (~noname@user/asd)
[16:27:46] *** Joins: ecs (ecs@user/ecs)
[16:27:46] *** Joins: jkl (~jkl@user/jkl)
[16:27:46] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[16:27:46] *** Joins: xet7 (~xet7@user/xet7)
[16:27:46] *** Joins: mahlon_ (~mahlon@martini.nu)
[16:27:46] *** Joins: laintree (~lain@172.16.254.xxx)
[16:27:46] *** Joins: rockcavera (~rc@user/rockcavera)
[16:27:46] *** Joins: arkurious (~arkurious@user/arkurious)
[16:27:46] *** Joins: neurocyte (~neurocyte@user/neurocyte)
[16:27:46] *** Joins: Vladar (~Vladar@46.162.2.53)
[16:27:46] *** Joins: PMunch (~PMunch@vpn.dualog.com)
[16:27:46] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:27:46] *** Joins: flynn (~mcbloch@user/flynn)
[16:27:46] *** Joins: Mister_Magister (~Mister_Ma@user/mister-magister/x-2636733)
[16:27:46] *** Joins: madprops (~hj8oijo@user/madprops)
[16:27:46] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[16:27:46] *** Joins: drewr (~drew@user/drewr)
[16:27:46] *** Joins: nrds (~NimBot@ns501209.ip-142-4-210.net)
[16:27:46] *** Joins: koltrast (~koltrast@h77-53-57-114.cust.a3fiber.se)
[16:27:46] *** Joins: kayabaNerve (~kayabaNer@user/kayabanerve)
[16:27:46] *** Joins: pjzz (~pjz@place.org)
[16:27:46] *** Joins: systemds1cks (~systemdsu@user/systemdsucks)
[16:27:46] *** Joins: federico3 (~quassel@debian/federico)
[16:27:46] *** Joins: def- (~def-@static.238.114.9.176.clients.your-server.de)
[16:27:46] *** Joins: mst (~matthewt@vps-6c71e929.vps.ovh.net)
[16:27:46] *** Joins: oprypin (~irc@pryp.in)
[16:27:46] *** Joins: emery (~quassel@2a03:3b40:fe:ab::1)
[16:27:46] *** Joins: Jjp137 (~Jjp137@2603-8000-2a01-3406-92fb-a6ff-fee2-6861.res6.spectrum.com)
[16:27:46] *** Joins: notchris (sid181145@id-181145.stonehaven.irccloud.com)
[16:27:46] *** Joins: ormiret (sid314108@id-314108.tooting.irccloud.com)
[16:27:46] *** Joins: cyraxjoe (~joe@201.159.96.13)
[16:27:46] *** Joins: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113)
[16:27:46] *** Joins: redj (~quassel@bras-base-bchmpq5707w-grc-24-76-69-197-62.dsl.bell.ca)
[16:27:46] *** Joins: Freneticks (~Frenetick@gw.ptr-80-238-209-252.customer.ch.netstream.com)
[16:27:46] *** Joins: [R] (~rs@genoce.org)
[16:27:46] *** Joins: dmu (~darkmusic@user/darkmusic)
[16:27:46] *** Joins: sagax (~sagax@213.138.71.146)
[16:27:46] *** Joins: Onionhammer (~onionhamm@207-153-1-151.fttp.usinternet.com)
[16:27:46] *** Joins: nisstyre (~wes@user/nisstyre)
[16:27:46] *** Joins: NimBot (~NimBot@mail.nim-lang.org)
[16:27:46] *** Joins: LyndsySimon (sid34452@id-34452.tooting.irccloud.com)
[16:27:46] *** Joins: mal`` (~mal``@static.38.6.217.95.clients.your-server.de)
[16:27:46] *** Joins: GreaseMonkey (greaser@user/greasemonkey)
[16:27:46] *** Joins: dom96 (~dom@mail.nim-lang.org)
[16:27:46] *** Joins: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it)
[16:27:46] *** Joins: FromDiscord (~FromDisco@mail.nim-lang.org)
[16:27:46] *** Joins: mikko (~mikko@2a02:7b40:d418:6a61::1)
[16:27:46] *** Joins: crem (~crem@2a02:169:160a:1:9b30:962e:76eb:4bb3)
[16:27:46] *** Joins: euantorano (sid180289@id-180289.brockwell.irccloud.com)
[16:27:50] *** Joins: happycorsair[m] (~happycors@2001:470:69fc:105::205)
[16:28:00] *** Joins: mjsir911 (~bnc@user/mjsir911)
[16:28:00] *** Joins: icebattle (~wayne@S010600fc8ddfd2b3.vc.shawcable.net)
[16:28:00] *** Joins: blackbeard420 (~blackbear@2600:3c03:e000:297::)
[16:28:00] *** Joins: Amun-Ra (~amun-ra@retro.rocks)
[16:30:44] *** Quits: nixfreak_nim[m] (~reversem3@2001:470:69fc:105::33d1) (Ping timeout: 252 seconds)
[16:30:44] *** Quits: Helios (~dwaglemat@2001:470:69fc:105::5f8) (Ping timeout: 252 seconds)
[16:30:54] <supakeen> PMunch: 1 for the first indentation, 1 for the second, 2, 3, 5, etc.
[16:30:59] <supakeen> Good way to have less levels ;)
[16:31:02] *** Quits: happycorsair[m] (~happycors@2001:470:69fc:105::205) (Ping timeout: 256 seconds)
[16:31:11] <PMunch> Haha, sounds, interesting.. :P
[16:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:54] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:53:59] <FromDiscord> <bolino> Hi!↵I have a sequence of tables, each of those tables represent a row to be written in a MySQL database with `db_mysql` module.↵Do you know how I can build the query with the values from those tables as parameters of a prepared SQL statement like `db.exec(sql("INSERT INTO table (fieldA, fieldB, fieldC) VALUES (?, ?, ?);"), "row1valueA", "row1valueB", "row1valueC")`?
[16:55:18] <FromDiscord> <bolino> (edit) ""row1valueC")`?" => ""row1valueC", "row2valueA", "row2valueB", "row2valueC")`, (but with many an undefined number of rows/tables of course)?"
[17:05:18] *** laintree is now known as lain
[17:16:41] *** Joins: max22- (~maxime@2a01cb088335980084478791cbd3307c.ipv6.abo.wanadoo.fr)
[17:34:51] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[17:35:15] *** Joins: rockcavera (~rc@192.12.114.220)
[17:35:15] *** Quits: rockcavera (~rc@192.12.114.220) (Changing host)
[17:35:15] *** Joins: rockcavera (~rc@user/rockcavera)
[17:50:28] *** Joins: happycorsair[m] (~happycors@2001:470:69fc:105::205)
[17:54:04] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[18:01:23] *** Joins: nixfreak_nim[m] (~reversem3@2001:470:69fc:105::33d1)
[18:03:21] *** Joins: Helios (~dwaglemat@2001:470:69fc:105::5f8)
[18:07:43] *** Quits: PMunch (~PMunch@vpn.dualog.com) (Quit: Leaving)
[18:14:58] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[18:21:23] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[18:29:20] <FromDiscord> <planetis> @bracketmaster\: try this https://github.com/planetis-m/cowstrings
[18:29:24] <nrds> <04prestigebot99> 4GitHub: 7"Copy-On-Write string implementation according to nim-lang/RFCs#221"
[18:29:34] *** Joins: rockcavera (~rc@user/rockcavera)
[18:33:08] <FromDiscord> <Rika> moo
[18:38:52] *** Parts: neurocyte (~neurocyte@user/neurocyte) (The Lounge - https://thelounge.chat)
[18:42:42] <FromDiscord> <proud linux user> did you moo todaY?
[18:44:09] <FromDiscord> <enthus1ast> whom's bot is @proud linux user  btw? \:)
[18:44:34] <FromDiscord> <proud linux user> its me
[18:44:45] <FromDiscord> <proud linux user> i am a disgorg user
[19:00:27] <FromDiscord> <TurtleP> is there a way to statically link on macOS? I keep getting an error about `ld: -lcrt0.o library not found` on macOS 10.15.
[19:17:35] <FromDiscord> <proud linux user> ohyes. i have ad this mulitple times
[19:17:41] <FromDiscord> <proud linux user> but i forgor sorry
[19:57:50] *** mahlon_ is now known as mahlon
[20:24:39] <FromDiscord> <leorize> `--passL:'-Wl,-Bstatic -llibs -lto_be -llinked_statically -Wl,-Bdynamic'`↵(@TurtleP)
[20:25:00] <FromDiscord> <leorize> on mac you can't statically link the libc for the most part (nor should you)
[20:32:01] <FromDiscord> <TurtleP> Ah I mainly wanted to because I do it for Windows and Linux
[20:32:15] *** Joins: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca)
[20:34:00] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 268 seconds)
[20:36:57] *** Quits: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca) (Ping timeout: 248 seconds)
[20:43:32] <FromDiscord> <Jakraes> Is there a way to make certain procs from a file unusable when imported
[20:43:50] <FromDiscord> <Rika> dont export it
[20:44:03] <FromDiscord> <Jakraes> Gotcha, thank you!
[20:44:07] <FromDiscord> <Rika> can you be more specific
[20:45:12] <FromDiscord> <Jakraes> I want to make a library, so far only for myself and there are certain functions that are not supposed to be imported, they're only used inside the library
[20:45:28] <FromDiscord> <Rika> yeah then dont export it
[20:45:43] <FromDiscord> <Rika> aka no  after the name of the function (procedure)
[20:46:04] <FromDiscord> <Jakraes> Gotcha, thank you for the help!
[20:57:22] *** Quits: cyraxjoe (~joe@201.159.96.13) (Ping timeout: 240 seconds)
[21:09:23] *** Joins: ozzz (~oz@46.49.41.80)
[21:13:00] *** Joins: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca)
[21:36:08] <FromDiscord> <dankrad> if you create a nimble package you can place those also in "private" folder inside the src/projectname/ folder, I guess.
[21:38:25] *** Joins: fputs (~fputs@137.220.33.212)
[21:41:26] *** Quits: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca) (Ping timeout: 258 seconds)
[21:46:35] *** Quits: rockcavera (~rc@user/rockcavera) (Read error: Connection reset by peer)
[21:47:26] *** Joins: rockcavera (~rc@192.12.114.220)
[21:47:26] *** Quits: rockcavera (~rc@192.12.114.220) (Changing host)
[21:47:26] *** Joins: rockcavera (~rc@user/rockcavera)
[21:57:35] <FromDiscord> <gerwy> guys guys guys
[21:57:44] <FromDiscord> <gerwy> NimScript is interpreted right?
[21:57:54] *** Quits: notchris (sid181145@id-181145.stonehaven.irccloud.com) (Ping timeout: 240 seconds)
[21:58:38] <FromDiscord> <haxscramper> yes
[21:58:47] <FromDiscord> <haxscramper> well, compiled to register VM which then executes it
[21:59:28] <FromDiscord> <gerwy> how can i get the size of it's interpreter? i do a little comparison between scripting langs
[22:00:10] <FromDiscord> <haxscramper> https://github.com/nim-lang/Nim/blob/devel/compiler/vm.nim
[22:00:28] <FromDiscord> <haxscramper> for vm
[22:00:30] <FromDiscord> <haxscramper> https://github.com/nim-lang/Nim/blob/devel/compiler/vmgen.nim for codegen
[22:00:38] <FromDiscord> <haxscramper> \~4k
[22:01:07] <FromDiscord> <haxscramper> But if you compare other scripting langs you get into tricky situation, since you also need to include parser/lexer/typecheck etc. ... which is basically most of the compiler
[22:01:26] <FromDiscord> <gerwy> 4k lines of code, i mean more like a binary
[22:01:52] <FromDiscord> <haxscramper> wait a second, I have a test script, so I can tell you approximate size
[22:02:00] <FromDiscord> <gerwy> yeah i should include also libraries that are built in some of them like in Python or Lua but thats get hard, i can't find the size of any Ruby interpreter
[22:02:40] <FromDiscord> <gerwy> In reply to @haxscramper "wait a second, I": oooh, that would be cool if you would get the size of it, also if you would compress it with upx that would be cool too
[22:05:33] *** Joins: notchris (sid181145@stonehaven.irccloud.com)
[22:06:26] <FromDiscord> <System64 ~ Flandre Scarlet> For callbacks, are callbacks faster with lambdas or predefined functions? https://media.discordapp.net/attachments/371759389889003532/874707778533470218/unknown.png
[22:06:47] <FromDiscord> <Rika> please benchmark
[22:06:59] <FromDiscord> <Rika> that isnt something that's obvious i assume and imagine
[22:07:35] <FromDiscord> <System64 ~ Flandre Scarlet> Humm how can I benchmark it?
[22:07:48] <FromDiscord> <haxscramper> https://github.com/treeform/benchy
[22:07:50] <nrds> <04prestigebot99> 4GitHub: 7"Benchmarking."
[22:08:55] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3vzD
[22:09:08] <FromDiscord> <haxscramper> `nim c -r -d:release test1.nim` gives `3.4M`
[22:10:05] <FromDiscord> <haxscramper> `nim c -r -d:release --stacktrace:off --opt:size test1.nim` is down to `2.5M`
[22:10:32] <FromDiscord> <gerwy> Hmm still quiet big to be honest
[22:10:35] <FromDiscord> <haxscramper> `strip` cuts out another `0.5M`
[22:10:52] <FromDiscord> <gerwy> And upx --lzma maybe?
[22:11:11] *** Joins: clemens3 (~clemens@225.40.150.83.ftth.as8758.net)
[22:11:29] <FromDiscord> <haxscramper> `528k`
[22:11:55] <FromDiscord> <gerwy> (edit) "upx --lzma" => "`upx --lzma`"
[22:12:53] <FromDiscord> <gerwy> Okay thats quiet nice, thank you <33
[22:13:10] <FromDiscord> <gerwy> Now i need to say the same thing in Ruby server lol
[22:13:22] <FromDiscord> <haxscramper> You can try this yourself, `nimble install compiler` and check for different flags
[22:16:17] <FromDiscord> <gerwy> Okay, but its just rough comparison
[22:32:31] <ozzz> Hi all! what is second argument for truncate() from posix?
[22:32:38] <ozzz> can't find it in man
[22:32:40] *** Joins: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca)
[22:32:40] <FromDiscord> <Jakraes> I need some help, for some reason the program doesn't output "test", instead it outputs an error, even if it's inside a try except, what's going on? https://media.discordapp.net/attachments/371759389889003532/874714377746518036/Screenshot_5.png
[22:34:12] <nrds> <06Prestige99> @ozzz should be length - where are you looking?
[22:35:24] <ozzz> nrds: thanks, for some reason I can't find anythin on nim-lang.org
[22:35:37] <ozzz> Prestige ^
[22:35:55] <FromDiscord> <Rika> wrong index is a defect
[22:35:57] <FromDiscord> <Rika> cannot be caught
[22:36:47] <FromDiscord> <Rika> please test size; we do not follow "try, dont check" here
[22:38:33] <FromDiscord> <Rika> In reply to @Rika "cannot be caught": well afaik they are by default, `--panics:off` probably disables the behavior
[22:39:05] <FromDiscord> <Rika> ah, incorrect array indexes are never exceptions and are checked on compile time
[22:39:40] <FromDiscord> <Rika> change it to a seq and itll work (while --panics:off is set or is default)
[22:39:53] <FromDiscord> <undersquire> what about with sequences?
[22:40:00] <FromDiscord> <Rika> In reply to @Rika "change it to a": i just said
[22:40:00] <FromDiscord> <undersquire> are index checks at runtime then?
[22:40:05] <FromDiscord> <Rika> yes
[22:40:07] <FromDiscord> <undersquire> ah ok
[22:40:18] <FromDiscord> <undersquire> would that be handled via try except then?
[22:40:33] <FromDiscord> <Rika> i said as well "while panics:off is either set or still default"
[22:40:45] <FromDiscord> <Rika> otherwise they cannot be caught and will crash your program
[22:40:49] <FromDiscord> <undersquire> ah ok
[22:44:02] <FromDiscord> <dain> nim has a repl but it's called `secret` so i guess it's experimental
[22:44:16] <FromDiscord> <dain> is it unstable or something?
[22:44:33] <FromDiscord> <konsumlamm> yes
[22:45:02] <FromDiscord> <konsumlamm> it's called that because noone is supposed to use it for serious stuff
[22:48:43] <FromDiscord> <dain> oh :(
[23:07:08] *** Quits: max22- (~maxime@2a01cb088335980084478791cbd3307c.ipv6.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[23:28:04] *** Joins: notchris_ (sid181145@id-181145.stonehaven.irccloud.com)
[23:28:31] *** Quits: notchris (sid181145@stonehaven.irccloud.com) (Ping timeout: 268 seconds)
[23:46:08] *** Quits: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca) (Quit: Konversation terminated!)
[23:46:20] *** Joins: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca)
[23:48:57] *** Quits: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca) (Read error: Connection reset by peer)
