[00:13:43] *** Quits: PMunch (~PMunch@user/pmunch) (Quit: leaving)
[00:37:37] <FromDiscord> <Elegantbeef> @sOkam!\: why do you need a one liner?
[00:39:16] <FromDiscord> <sOkam!> In reply to @Elegantbeef "<@186489007247589376>\: why do you": explained in prev comment. don't "need" it, just more comfortable
[00:40:25] <FromDiscord> <Elegantbeef> why not just use a define?
[00:41:03] <FromDiscord> <sOkam!> In reply to @Elegantbeef "why not just use": not sure i get the syntax you mean
[00:41:29] <FromDiscord> <ajusa> sent a code paste, see https://play.nim-lang.org/#ix=3QJQ
[00:41:31] <FromDiscord> <sOkam!> kinda new, that was just the first thing i thought of doing. if there is a better way, i'm happy to change it
[00:41:39] <FromDiscord> <Elegantbeef> Actually i take it back, what're you doing 😀
[00:41:52] <FromDiscord> <sOkam!> (edit) "mean" => "mean↵kinda new, that was just the first thing i thought of doing. if there is a better way, i'm happy to change it"
[00:42:15] <FromDiscord> <sOkam!> In reply to @Elegantbeef "Actually i take it": me or ajusa?
[00:42:21] <FromDiscord> <Elegantbeef> You
[00:42:22] <FromDiscord> <ajusa> you I think
[00:42:28] <FromDiscord> <Elegantbeef> Ajusa what is the `h2` template?
[00:43:04] <FromDiscord> <sOkam!> In reply to @Elegantbeef "You":  https://media.discordapp.net/attachments/371759389889003532/946877481162539028/unknown.png
[00:43:12] <FromDiscord> <sOkam!> (edit) "" => "Turning this into one line"
[00:43:38] <FromDiscord> <ajusa> sent a code paste, see https://play.nim-lang.org/#ix=3QJS
[00:45:28] <FromDiscord> <ajusa> though I believe only the last two in this would be ran
[00:46:08] <FromDiscord> <ajusa> and if I define them outside of the buildHTML template code works just fine. I'm trying to build a DSL that doesn't pollute the global namespace by scoping it to a template
[00:48:19] <FromDiscord> <Elegantbeef> ok so you've ran into the issue off template overloading i think
[00:48:29] <FromDiscord> <Elegantbeef> overloaded template cause odd typing bugs
[00:49:10] <FromDiscord> <ajusa> ah nope I'm just dumb
[00:49:30] <FromDiscord> <ajusa> the outer template has an arg called inner, and the inner templates have an arg called inner
[00:49:51] <FromDiscord> <ajusa> so nesting them causes issues, pretty sure that's in the nim tips and tricks. just changed the outer one to call it "myInner" and issue is gone
[00:50:13] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3QJT
[00:50:21] <FromDiscord> <Elegantbeef> you can of course replace it with `w` and `s` if you really want
[00:50:38] <FromDiscord> <Elegantbeef> Ah good to hear, also nice RFC 🙂
[00:50:52] <FromDiscord> <SoicBR> In reply to @ynfle "What is it?": I have absolutely no clue but it (probably) didn't have anything to do with iterating through the table. I was on the verge of going insane so I just gave up and used a more inefficient solution
[00:51:34] <FromDiscord> <sOkam!> In reply to @Elegantbeef "So sokam i was": i don't want opts. that's worse than having 6+lines at the start of the file
[00:51:47] <FromDiscord> <System64 ~ Flandre Scarlet> Eh okay does Nim supports Pointer arithmetic? https://media.discordapp.net/attachments/371759389889003532/946879674208907354/unknown.png
[00:51:58] <FromDiscord> <Elegantbeef> No, but yes it does
[00:52:04] <nrds> <06Prestige99> Lol
[00:52:11] <nrds> <06Prestige99> I love that answer
[00:52:22] <FromDiscord> <auxym> you can cast/to from int, but maybe you shouldn't
[00:52:23] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3QJU
[00:52:27] <FromDiscord> <Elegantbeef> I mean it's done properly, pointers are distinct to pointer to collection
[00:53:14] <FromDiscord> <Elegantbeef> Well sokam i cannot suggest anything side from a if statement
[00:53:33] <FromDiscord> <Nick.> sent a code paste, see https://play.nim-lang.org/#ix=3QJV
[00:54:02] <FromDiscord> <Elegantbeef> `echo dogOwners[Dog(name: "Charlie")]`
[00:54:33] <FromDiscord> <Elegantbeef> it's a table of Dog -\> string
[00:54:45] <FromDiscord> <System64 ~ Flandre Scarlet> Doesn't really works https://media.discordapp.net/attachments/371759389889003532/946880419515731988/unknown.png
[00:54:57] <FromDiscord> <Elegantbeef> color isnt at ype
[00:55:10] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @Elegantbeef "color isnt at ype": color is a pointer
[00:55:14] <FromDiscord> <Nick.> ok, I see it now @ElegantBeef. Thanks!
[00:55:14] <FromDiscord> <Elegantbeef> Sorry it's `cast[ptr UncheckedArray[T]](ptr)[index]`
[00:55:22] <FromDiscord> <Elegantbeef> I messed up a tinge
[00:55:28] <FromDiscord> <System64 ~ Flandre Scarlet> and index is the color?
[00:55:29] <FromDiscord> <sOkam!> In reply to @Elegantbeef "Well sokam i cannot": does if support condensing into oneline better than case of?
[00:55:40] <FromDiscord> <Elegantbeef> index is the offset, ptr would be color
[00:55:44] <FromDiscord> <sOkam!> idm changing the syntax , as long as its 1line
[00:55:44] <FromDiscord> <Elegantbeef> It should
[00:57:22] <FromDiscord> <Elegantbeef> `var s = 'w'; if s == 'w':(echo "whatif") elif s == 'v':(echo "Verbose") else:(echo "silent")`
[00:57:24] <FromDiscord> <Elegantbeef> Works fine
[00:57:48] <FromDiscord> <Elegantbeef> Personally i'd make the return type of that procedure a pointer to a collection since that's what it is
[00:58:02] <FromDiscord> <System64 ~ Flandre Scarlet> Like that? https://media.discordapp.net/attachments/371759389889003532/946881247165165608/unknown.png
[00:58:15] <FromDiscord> <Elegantbeef> Jesus you cannot read my messages 😀
[00:58:32] <FromDiscord> <Elegantbeef> `cast[ptr UncheckedArray[Type]](color)[0]`
[00:58:47] <FromDiscord> <Elegantbeef> replace `Type` with the type the collection holds
[00:58:52] <FromDiscord> <System64 ~ Flandre Scarlet> ah alright
[00:58:56] <FromDiscord> <System64 ~ Flandre Scarlet> so uint8
[00:59:17] <FromDiscord> <Elegantbeef> Also consider making the return type of `tln_GetPalleteData` `ptr UncheckedArray[uint8]`
[00:59:56] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @Elegantbeef "Also consider making the": I'm interoperating with a C lib
[01:00:05] <FromDiscord> <Elegantbeef> That doesnt change my statement
[01:00:34] <FromDiscord> <Elegantbeef> `ptr UncheckedArray[uint]` is the same as `uint8_t` or w/e in C, the difference is Nim's type safety
[01:01:00] <FromDiscord> <Elegantbeef> `ptr uint8` and `ptr UncheckedArray[uint8]` are different types in Nim one can use `[]` the other cannot
[01:03:03] <FromDiscord> <sOkam!> In reply to @Elegantbeef "`var s = 'w';": works, tyty 🙂
[01:05:20] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @Elegantbeef "`ptr UncheckedArray[uint]` is the": Ah alright, so I guess I can change it in the nim module that interops with the lib?
[01:05:42] <FromDiscord> <Elegantbeef> Yep
[01:08:34] <FromDiscord> <System64 ~ Flandre Scarlet> Oh nice https://media.discordapp.net/attachments/371759389889003532/946883897243885668/unknown.png
[01:09:13] <FromDiscord> <Elegantbeef> color is nil
[01:11:25] <FromDiscord> <System64 ~ Flandre Scarlet> weird
[01:16:19] <FromDiscord> <ATwenty0ne> Has anyone had success using punchthrough with netty?
[01:16:54] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @Elegantbeef "color is nil": It normally shouldn't https://media.discordapp.net/attachments/371759389889003532/946885997935874058/unknown.png
[01:17:31] <nrds> <06Prestige99> What is uint8T?
[01:17:47] <FromDiscord> <System64 ~ Flandre Scarlet> unsigned 8-bits int
[01:17:50] <FromDiscord> <Elegantbeef> probably the c2nim'd alias to uint8
[01:17:57] <nrds> <06Prestige99> ah
[01:17:57] <FromDiscord> <Elegantbeef> Nim already has uint8 so you could just use that
[01:20:13] <FromDiscord> <System64 ~ Flandre Scarlet> Ah well I understood
[01:41:08] <FromDiscord> <System64 ~ Flandre Scarlet> It works https://media.discordapp.net/attachments/371759389889003532/946892094834880532/unknown.png
[01:42:18] <FromDiscord> <Elegantbeef> Congrats
[01:45:16] *** Joins: ltriant (~ltriant@118.102.122.246)
[02:06:00] <FromDiscord> <treeform> In reply to @enthus1ast "and does not have": Small correction, my `jsony` does not have its own `JsonNode` but uses `std/json` `JsonNode` and can read and write the std `JsonNode`s, just like `std/json` can.
[02:07:35] <NimEventer> New post on r/nim by RoughCalligrapher906: NIM Ideas in automation, see https://reddit.com/r/nim/comments/t1gki0/nim_ideas_in_automation/
[02:09:44] <FromDiscord> <treeform> sent a code paste, see https://play.nim-lang.org/#ix=3QKh
[02:12:11] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:602a:2cae:7652:6a22)
[02:16:06] <FromDiscord> <treeform> In reply to @ajusa "full template looks like": I think its because you use `inner` twise, the inner inner gets replaced by the body
[02:16:46] <FromDiscord> <treeform> https://play.nim-lang.org/#ix=3QKj this works
[02:16:56] <FromDiscord> <treeform> I had to use inner2 because otherwise it gets replaced
[02:16:58] <FromDiscord> <Elegantbeef> Yea ajusa got it fixed
[02:17:17] <FromDiscord> <treeform> oh I see now
[02:31:21] <FromDiscord> <ajusa> yeah lol, it took me about 10 minutes to see that issue. thanks treeform for the inspiration though, I was directly looking at your video and code for this bit
[02:44:13] <NimEventer> New question by itil memek cantik: Use of declaration and/or definition array of tuple, see https://stackoverflow.com/questions/71272652/use-of-declaration-and-or-definition-array-of-tuple
[02:49:31] *** Quits: ltriant (~ltriant@118.102.122.246) (Ping timeout: 256 seconds)
[03:43:35] *** Quits: shalokshalom (~quassel@2a02:1748:dd5e:7f60:b5dc:871:61:d7) (Remote host closed the connection)
[06:27:30] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:602a:2cae:7652:6a22) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[06:46:03] *** Joins: ltriant (~ltriant@118.102.122.246)
[06:46:34] <FromDiscord> <⎝⪩﹏⪨⎠> I don't know why my code can't detect `(` and `)`. https://media.discordapp.net/attachments/371759389889003532/946968953887006720/unknown.png https://media.discordapp.net/attachments/371759389889003532/946968954411315210/unknown.png https://media.discordapp.net/attachments/371759389889003532/946968954952351794/unknown.png https://media.discordapp.net/attachments/371759389889003532/946968955141107712/unknown.png
[06:48:37] <FromDiscord> <⎝⪩﹏⪨⎠> `insertToken`: https://media.discordapp.net/attachments/371759389889003532/946969472579817552/unknown.png
[06:50:22] <FromDiscord> <Elegantbeef> Is there really any reason to use regex here?
[06:50:55] *** Quits: ltriant (~ltriant@118.102.122.246) (Ping timeout: 256 seconds)
[06:51:33] <NimEventer> New thread by Geohuz: Is there any kalman filter package in Nim?, see https://forum.nim-lang.org/t/8954
[06:52:41] <FromDiscord> <⎝⪩﹏⪨⎠> In reply to @Elegantbeef "Is there really any": Should I use it only for the numbers?
[06:52:46] <FromDiscord> <⎝⪩﹏⪨⎠> Let me try.
[06:52:50] <FromDiscord> <Elegantbeef> I dont think so
[06:54:44] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3QM0
[06:54:51] <FromDiscord> <⎝⪩﹏⪨⎠> In reply to @Elegantbeef "You can just iterate": Hmm...
[06:55:37] <FromDiscord> <⎝⪩﹏⪨⎠> I did use Regex 'cause one time used the patterns matching from Lua, and I wanted to try it on Nim.
[06:55:46] <FromDiscord> <⎝⪩﹏⪨⎠> (edit) "patterns" => "pattern"
[06:56:19] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:56:27] <FromDiscord> <Elegantbeef> Ah i dont like regex generally so i'm biased
[06:56:32] <FromDiscord> <Elegantbeef> We have things like `parseutils`
[06:57:08] <FromDiscord> <⎝⪩﹏⪨⎠> I come fresh from ending the chapter 3 of the "nim tutorial", what did you expected.
[06:58:13] <FromDiscord> <Elegantbeef> I mean it's fine i have a dislike of regex
[06:58:30] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/parseutils.html has a tonnes of things that makes this easy
[07:16:43] <nrds> <06Prestige99> Am I the only one that loves regex? 🤔
[07:17:14] <FromDiscord> <⎝⪩﹏⪨⎠> In reply to @nrds "<Prestige> Am I the": I like Regex (well, at least Lua's one).
[07:17:23] <FromDiscord> <Elegantbeef> Perhaps scanf/parseutils is nicer imo
[07:18:12] <FromDiscord> <⎝⪩﹏⪨⎠> And I thing kind of didn't work: https://media.discordapp.net/attachments/371759389889003532/946976919075819551/unknown.png
[07:18:56] <FromDiscord> <⎝⪩﹏⪨⎠> wait what
[07:19:30] <FromDiscord> <⎝⪩﹏⪨⎠> Hmm... I think I know what I'm missing.
[07:20:15] <FromDiscord> <⎝⪩﹏⪨⎠> Done.
[07:22:05] <FromDiscord> <⎝⪩﹏⪨⎠> Ok, I have the Lexer done, now I need to build the Parser.
[07:22:27] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 250 seconds)
[07:31:38] *** Quits: krux02 (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de) (Remote host closed the connection)
[07:32:10] <FromDiscord> <⎝⪩﹏⪨⎠> And that's the part I've always struggled with: I don't have any idea of how to build a parser.
[07:32:18] <FromDiscord> <⎝⪩﹏⪨⎠> Ill ask that in another server.
[07:32:34] <FromDiscord> <Elegantbeef> There is the #langdev channel
[07:34:46] <FromDiscord> <⎝⪩﹏⪨⎠> In reply to @Elegantbeef "There is the <#763409397716090902>": I'm in a server about more generalized programming and with more members than this one.
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:07:51] <FromDiscord> <retkid> is there any 3d rendering libraries for nim
[08:08:13] <FromDiscord> <Elegantbeef> You can use raylib, or opengl
[08:08:19] <FromDiscord> <Elegantbeef> The former is much easier 😀
[08:08:55] <FromDiscord> <retkid> I'll try raylib and if not I'll use it as an excuse to try another language
[08:09:15] <FromDiscord> <Elegantbeef> One could also use Godot with the nim bindings
[08:09:22] <FromDiscord> <retkid> I can, yes
[08:09:33] <FromDiscord> <retkid> but I don't think that suits my project
[08:09:47] <FromDiscord> <retkid> I might do it in a JS framework for browser embeds
[08:10:08] <FromDiscord> <Elegantbeef> Raylib has  wasm support
[08:10:23] <FromDiscord> <retkid> isn't compiling nim wasm a MASSIVE pain in the tits
[08:10:27] <FromDiscord> <retkid> i tried to one time
[08:10:38] <FromDiscord> <Elegantbeef> No it's a single config file
[08:10:59] <FromDiscord> <Elegantbeef> Dont know if it's a single config file with raylib, but yea it's a single config otherwise
[08:11:16] <FromDiscord> <Elegantbeef> https://github.com/treeform/nim_emscripten_tutorial
[08:11:21] <FromDiscord> <Elegantbeef> Not a real big pain
[08:11:54] <FromDiscord> <retkid> treeform is a gift to the community and he is so productive it is insane
[08:12:34] <FromDiscord> <retkid> I wish i could focus on anything as much as he does
[08:12:43] <FromDiscord> <retkid> stuff takes me so long because i doze and look at my wall and not workj
[08:12:45] <FromDiscord> <retkid> (edit) "workj" => "work"
[08:35:42] <FromDiscord> <creikey> In reply to @retkid "stuff takes me so": this happens to me too, how to avoid this?
[08:36:31] <FromDiscord> <Rika> somehow build discipline ig
[08:47:47] <NimEventer> New thread by JohnLuck: OrderedTable missing Seq methods, see https://forum.nim-lang.org/t/8955
[09:07:07] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:41:32] <FromDiscord> <Deceptive> In reply to @treeform "Here is how you": Damn, this looks a bit easier. Thanks!
[10:30:02] <NimEventer> New thread by Elcritch: Fidget UI: scrolling on OpenGL backend, see https://forum.nim-lang.org/t/8956
[10:47:38] *** Joins: ltriant (~ltriant@118.102.122.246)
[10:52:35] *** Quits: ltriant (~ltriant@118.102.122.246) (Ping timeout: 256 seconds)
[11:41:35] *** Joins: shalokshalom (~quassel@2a02:1748:dd5e:7f60:b5dc:871:61:d7)
[11:43:25] *** Joins: pro (~pro@user/pro)
[11:45:57] *** Quits: shalokshalom (~quassel@2a02:1748:dd5e:7f60:b5dc:871:61:d7) (Ping timeout: 240 seconds)
[11:46:33] *** Joins: shalokshalom (~quassel@2a02:1748:dd5e:7f60:b5dc:871:61:d7)
[11:48:46] *** Quits: shalokshalom (~quassel@2a02:1748:dd5e:7f60:b5dc:871:61:d7) (Client Quit)
[11:48:59] *** Joins: shalokshalom (~quassel@2a02:1748:dd5e:7f60:b5dc:871:61:d7)
[12:17:31] *** Quits: shalokshalom (~quassel@2a02:1748:dd5e:7f60:b5dc:871:61:d7) (Remote host closed the connection)
[12:19:34] *** Joins: shalokshalom (~quassel@2a02:1748:dd5e:7f60:b5dc:871:61:d7)
[12:25:06] *** Joins: jmd_ (~jmdaemon@user/jmdaemon)
[12:25:32] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[12:27:27] <FromDiscord> <tracy> is there a way i can use my nim procedures in c#?
[12:27:53] <FromDiscord> <Elegantbeef> You can use `--app:lib` and use it as a system library
[12:28:07] <FromDiscord> <Elegantbeef> Suggested to use `arc` or `orc` for your gc in that regard so you do not need to setup the GC
[12:28:19] <FromDiscord> <tracy> whas a gc
[12:28:38] <FromDiscord> <tracy> oh nvm im slow
[12:28:47] <FromDiscord> <Elegantbeef> Nim has multiple memory management systems, the default is a garbage collector
[12:28:47] <FromDiscord> <tracy> In reply to @Elegantbeef "You can use `--app:lib`": oooh alr
[12:30:21] <FromDiscord> <Elegantbeef> You'l also want https://nim-lang.org/docs/manual.html#foreign-function-interface-dynlib-pragma-for-export
[12:30:38] <FromDiscord> <rakgew> and the other way around? can nim look somehow into .net clr libs and use their logic?
[12:30:51] <FromDiscord> <Elegantbeef> Yes winim has CLR support
[12:31:02] <FromDiscord> <rakgew> ah nice! thx.
[12:39:35] <FromDiscord> <tracy> sent a code paste, see https://play.nim-lang.org/#ix=3QMT
[12:39:37] <FromDiscord> <tracy> why doesnt this work?
[12:39:50] <FromDiscord> <tracy> sent a code paste, see https://play.nim-lang.org/#ix=3QMU
[12:40:27] <FromDiscord> <Elegantbeef> That shouldnt be `string` it should be `char` or w/e C# has
[12:41:01] <FromDiscord> <tracy> sent a code paste, see https://play.nim-lang.org/#ix=3QMV
[12:41:31] <FromDiscord> <Elegantbeef> yea
[12:42:02] <FromDiscord> <tracy> sent a code paste, see https://paste.rs/PuJ
[12:42:05] <FromDiscord> <Elegantbeef> Going to have to do some unsafe C# possibly, supposedly `StringBuilder` is the same as `char`
[12:42:10] <FromDiscord> <Elegantbeef> No it's returning a `cstring`
[12:42:21] <FromDiscord> <Elegantbeef> Which is a pointer to a char
[12:44:36] <FromDiscord> <Elegantbeef> Yea seems like for a `Cstring` inside C# `StringBuilder` is the go to
[12:47:34] <FromDiscord> <tracy> In reply to @Elegantbeef "Yea seems like for": i think stringbuilder is to buildf strings
[12:47:38] <FromDiscord> <tracy> build strings 
[12:47:49] <FromDiscord> <tracy> like that
[12:47:51] <FromDiscord> <Elegantbeef> I'm reading a lot that it's usable in place of `cstring`
[12:47:53] <FromDiscord> <tracy> sent a code paste, see https://play.nim-lang.org/#ix=3QMX
[12:47:57] <FromDiscord> <Elegantbeef> sorry `char`
[12:48:15] <FromDiscord> <tracy> maybe a char array will work
[12:48:53] <FromDiscord> <Elegantbeef> You can use `char` but i'm reading it seems fine to use StringBuilder, which is why i mentioned it
[12:49:13] <FromDiscord> <Elegantbeef> I've never done C interop with C#, so looking into it a bit
[13:00:08] <FromDiscord> <Elegantbeef> Seems they might be talking about managed libraries with the `StringBuilder` given https://docs.microsoft.com/en-us/dotnet/framework/interop/marshaling-data-with-platform-invoke
[13:00:23] <FromDiscord> <Elegantbeef> So i guess yay for my annoying abillities
[13:07:28] <FromDiscord> <tracy> sent a code paste, see https://play.nim-lang.org/#ix=3QN1
[13:07:33] <FromDiscord> <tracy> cuz i tried but i get a memory error
[13:10:21] <FromDiscord> <Elegantbeef> You'd need to get the file handle of the C# stdout and then open that and set the stdout file to that
[13:11:05] <FromDiscord> <tracy> In reply to @Elegantbeef "You'd need to get": what is "the file handle of the c# stdout"
[13:12:16] <FromDiscord> <Elegantbeef> Basically an id of the opened file
[13:12:44] <FromDiscord> <tracy> how i even begin to get that 🤔
[13:12:56] <FromDiscord> <tracy> never heard of it
[13:13:53] <FromDiscord> <tracy> idk what i did but it just worked
[13:14:12] <FromDiscord> <tracy> just works
[13:14:13] <FromDiscord> <tracy> sent a code paste, see https://play.nim-lang.org/#ix=3QN3
[13:14:13] <FromDiscord> <tracy> for some reason
[13:14:19] <FromDiscord> <Elegantbeef> Guess i'm just dumb
[13:14:29] <FromDiscord> <Elegantbeef> Figured there was an issue with it getting stdout, but yea that's dumb
[13:14:51] <FromDiscord> <Elegantbeef> Who lets me type messages here
[13:20:32] <FromDiscord> <⎝⪩﹏⪨⎠> What do you think about my way of seeing if parenthesis are ok: https://media.discordapp.net/attachments/371759389889003532/947068105883004978/unknown.png
[13:21:06] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d0d7:ba7d:5a5a:630f)
[13:21:39] <FromDiscord> <ShalokShalom> @ElegantBeef Do you have any idea, how we can put the union syntax into something more concise?
[13:22:06] <FromDiscord> <ShalokShalom> Like, with a macro?
[13:22:31] <FromDiscord> <Elegantbeef> https://github.com/alaviss/union https://github.com/beef331/sumtypes https://github.com/andreaferretti/patty https://github.com/chocobo333/AlgebraicDataTypes
[13:22:52] <FromDiscord> <Elegantbeef> Oh right that embeds all of them doesnt it
[13:23:19] <FromDiscord> <Elegantbeef> The parenthesis method seems fine but i dont get why you're doing string comparisons for a character
[13:24:52] <FromDiscord> <ShalokShalom> Patty looks a lot like the examples you have shown me
[13:25:06] <FromDiscord> <ShalokShalom> Is pattern matching and tagged unions the same in Nim?
[13:25:20] <FromDiscord> <Elegantbeef> https://github.com/andreaferretti/patty#constructing-variant-objects
[13:25:48] <FromDiscord> <ShalokShalom> aaah
[13:25:50] <FromDiscord> <ShalokShalom> nice
[13:26:36] <FromDiscord> <Elegantbeef> My package is silly and just use union if you want that, it was deprecated by leorize almost instantly 😀
[13:26:42] <FromDiscord> <Elegantbeef> Probably should add that to the read me
[13:27:35] <FromDiscord> <ShalokShalom> looks good to me
[13:28:20] <FromDiscord> <ShalokShalom> This looks exactly like what I was looking for
[13:28:29] <FromDiscord> <Elegantbeef> Anyway union/sumtypes are for easy to make object variants for heterogeneous holding of types, the last two are for more complex ADT
[13:28:32] <FromDiscord> <Elegantbeef> Patty?
[13:28:39] <FromDiscord> <ShalokShalom> The last link, yeah
[13:28:49] <FromDiscord> <ShalokShalom> Object variants in patty
[13:28:59] <FromDiscord> <ShalokShalom> A shortcut to the syntax you showed me yesterdaay
[13:29:19] <FromDiscord> <Elegantbeef> Yep the joy of macros small core can be expanded in userspace
[13:29:39] <FromDiscord> <Elegantbeef> The syntax is very similar to Rust's ADTs
[13:29:52] *** Joins: kayabaNerve (~kayabaNer@user/kayabanerve)
[13:29:56] <FromDiscord> <ShalokShalom> And kind is just a tradition, not a keyword
[13:30:18] <FromDiscord> <ShalokShalom> Thats nice, since I can use something more descriptive to me 🙂
[13:30:22] <FromDiscord> <Elegantbeef> It's a convention, it can be anything
[13:30:27] <FromDiscord> <ShalokShalom> Yeah, nice
[13:30:50] <FromDiscord> <Elegantbeef> You can also have nested variants, but that requires the tedious api
[13:31:10] <FromDiscord> <Elegantbeef> Or an inner object for a specific field
[13:36:14] <FromDiscord> <ShalokShalom> Well, I see object variants in Patty seem to expand to some more than just the initial setup of the unions
[13:36:30] <FromDiscord> <ShalokShalom> https://github.com/andreaferretti/patty#constructing-variant-objects
[13:37:27] <FromDiscord> <Elegantbeef> If you dont want them time to fork it 😛
[13:37:51] <FromDiscord> <ShalokShalom> Those things seem so basic to me, I really wish someone could just explain to me, how to use Nim in a functional manner.
[13:38:32] <FromDiscord> <Elegantbeef> It's not a functional language, so you can do some things functionally but it's not going to be like F#
[13:38:49] <FromDiscord> <Elegantbeef> Wait what's basic?
[13:40:07] <FromDiscord> <ShalokShalom> unions
[13:40:14] <FromDiscord> <ShalokShalom> well, but it can do all those things
[13:40:30] <FromDiscord> <ShalokShalom> so, when you can use it as a functional language, why not attract more users by a simple guide
[13:40:46] <FromDiscord> <Elegantbeef> Well it's not capable of using it as a functional language
[13:40:52] <FromDiscord> <Elegantbeef> There are things it just cannot do
[13:42:51] <FromDiscord> <Elegantbeef> https://forum.nim-lang.org/t/8927 is related to this, but the gist is, it's imperative and will take compelling things from FP where it makes sense(strict funcs for instance)
[13:42:57] <FromDiscord> <ShalokShalom> There are things, Nim can do, that FSharp cant, like checking on side effect
[13:43:14] <FromDiscord> <ShalokShalom> I am just asking for records, unions, pattern matching and stuff
[13:43:22] <FromDiscord> <ShalokShalom> But more guides
[13:44:28] <FromDiscord> <ShalokShalom> And I am not asking to make it pure
[13:44:34] <FromDiscord> <ShalokShalom> Just .. functional
[13:44:34] *** Quits: rockcavera (~rc@user/rockcavera) (Read error: Connection reset by peer)
[13:45:25] *** Joins: rockcavera (~rc@192.12.112.205)
[13:45:25] *** Quits: rockcavera (~rc@192.12.112.205) (Changing host)
[13:45:25] *** Joins: rockcavera (~rc@user/rockcavera)
[13:45:42] <FromDiscord> <Elegantbeef> Well if i had any idea how to write FP I'd probably make a guide, but I'm not a FP user and there are very few here, so I guess time for you to be the one that writes guides in a few months 😛
[13:45:43] <FromDiscord> <tracy> In reply to @Elegantbeef "Well it's not capable": what does functional lagnauge mean
[13:46:07] <FromDiscord> <tracy> language 
[13:46:28] <FromDiscord> <Elegantbeef> A language that is based off mathematics and strives for sideeffect free procedures, is what i generally say
[13:46:53] <FromDiscord> <ShalokShalom> I would like to port the tutorial, I linked yesterday
[13:47:06] <FromDiscord> <ShalokShalom> That is targeted to show people how to do basic fp
[13:47:11] <FromDiscord> <Elegantbeef> https://en.wikipedia.org/wiki/Functional_programming will explain better than anyone here
[13:47:14] <FromDiscord> <ShalokShalom> It can be used as guide then.
[13:47:17] <FromDiscord> <Elegantbeef> The tutorial?
[13:47:34] <FromDiscord> <ShalokShalom> https://github.com/thedevaspect/aspect-fsharp
[13:47:48] <FromDiscord> <tracy> so nim isnt functional right
[13:47:58] <FromDiscord> <ShalokShalom> Its not purely functional
[13:48:03] <FromDiscord> <Elegantbeef> It's procedural
[13:48:11] <FromDiscord> <ShalokShalom> Every language is functional, to a certain extend
[13:48:17] <FromDiscord> <ShalokShalom> func is functional
[13:48:25] <FromDiscord> <ShalokShalom> const/let in a sense also
[13:48:35] <FromDiscord> <ShalokShalom> immutability
[13:48:35] <FromDiscord> <Elegantbeef> In a very loose sense 😛
[13:48:50] <FromDiscord> <ShalokShalom> I am fine with the feature set
[13:48:56] <FromDiscord> <ShalokShalom> Just not with the documentation.
[13:49:02] <FromDiscord> <Elegantbeef> Functional is a whole paradigm mutability is just a small segment of FP
[13:49:15] <FromDiscord> <ShalokShalom> Yeah, but as an example.
[13:49:31] <FromDiscord> <ShalokShalom> Nim has functional features. I am not complaining about the feature set.
[13:49:50] <FromDiscord> <Elegantbeef> Never said you are, i tend to make jokes
[13:50:12] <FromDiscord> <Elegantbeef> Well t hat's a 300 loc program it seems, doesnt seem too bad to port to Nim
[13:50:16] <FromDiscord> <Elegantbeef> Though i dont understand a lot of FP so... 😀
[13:50:37] <FromDiscord> <ShalokShalom> Yeah, its just using basics
[13:50:47] <FromDiscord> <ShalokShalom> You could start, by looking the tutorial on Youtube 😛
[13:50:52] <FromDiscord> <ShalokShalom> Then you know more about FP
[13:51:16] <FromDiscord> <Elegantbeef> that implies i'd like to
[13:51:27] <FromDiscord> <ShalokShalom> You could 🙂
[13:53:24] <FromDiscord> <ShalokShalom> https://www.youtube.com/watch?v=hsTmLhnzRhE
[13:54:12] <FromDiscord> <Elegantbeef> The typedefs you should be able to port
[13:54:57] <FromDiscord> <ShalokShalom> ok
[13:56:56] <FromDiscord> <Elegantbeef> What things have you stymied anyway?
[14:31:01] <FromDiscord> <ShalokShalom> How to do a single case union?
[14:32:24] <FromDiscord> <ShalokShalom> Is it that way enough?
[14:32:36] <FromDiscord> <ShalokShalom> sent a code paste, see https://paste.rs/XvV
[14:44:08] <FromDiscord> <Rika> Why would you need to do such? Nonetheless I believe that is right
[14:49:13] *** Joins: ltriant (~ltriant@118.102.122.246)
[14:49:17] <FromDiscord> <b4mbus> `nimble run -d:ssl`↵I do that and it does compile and run my project but it doesn't pass `-d:ssl` to the compiler, so then I get SSL errors
[14:49:27] <FromDiscord> <b4mbus> what can I do with it
[14:52:05] <FromDiscord> <tracy> In reply to @b4mbus "`nimble run -d:ssl` I": compile it with -d:ssl
[14:52:14] <FromDiscord> <tracy> oh wait
[14:52:28] <FromDiscord> <tracy> isnt nimble the package manager
[14:53:07] <FromDiscord> <b4mbus> it is
[14:53:26] <FromDiscord> <b4mbus> but it's also some kinda build system, I was told
[14:53:34] <FromDiscord> <tracy> In reply to @b4mbus "but it's also some": nim c -r -d:ssl test.nim
[14:53:43] <FromDiscord> <b4mbus> and a project is also called a package
[14:53:52] <FromDiscord> <tracy> In reply to @b4mbus "and a project is": just compile it normally and try it
[14:53:56] <FromDiscord> <b4mbus> In reply to @tracy "nim c -r -d:ssl": I know I can use the nim compiler but it's not a problem
[14:54:00] <FromDiscord> <b4mbus> (edit) "a" => "the"
[14:54:04] <FromDiscord> <ShalokShalom> sent a code paste, see https://play.nim-lang.org/#ix=3QNs
[14:54:14] <FromDiscord> <b4mbus> In reply to @b4mbus "I know I can": the problem is that `nimble` doesn't pass the arguments to the compiler itself
[14:54:22] <FromDiscord> <b4mbus> and Im using exeternal dependencies
[14:54:29] <FromDiscord> <b4mbus> (edit) "exeternal" => "external" | "externaldependencies ... " 03added "(namely - dimscord and dimscmd)"
[14:54:52] <FromDiscord> <b4mbus> nimble should do that for me
[14:55:10] <FromDiscord> <tracy> have u tried to compile it with nim c
[14:55:23] <FromDiscord> <b4mbus> yes I did
[14:55:29] <FromDiscord> <b4mbus> and as I said
[14:55:43] <FromDiscord> <b4mbus> the issue is that nimble doesn't forward the arguments to the compiler
[14:56:14] <FromDiscord> <ShalokShalom> sent a code paste, see https://paste.rs/laH
[14:56:18] <FromDiscord> <ShalokShalom> How is that semantically different from above
[14:57:19] <FromDiscord> <dom96> In reply to @b4mbus "**the issue** is that": afaik that is indeed an issue with `nimble run` specifically
[14:57:32] <FromDiscord> <b4mbus> alright, so that is a known issue
[14:57:38] <FromDiscord> <b4mbus> is there someone resolving that already?
[14:58:05] <FromDiscord> <b4mbus> https://github.com/nim-lang/nimble/issues/986
[14:58:06] <FromDiscord> <b4mbus> I see
[14:58:16] *** Quits: ltriant (~ltriant@118.102.122.246) (Ping timeout: 272 seconds)
[14:58:55] <FromDiscord> <b4mbus> Id love to file a PR but I just started with nim a few days ago and I would do more harm than good
[15:01:34] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d0d7:ba7d:5a5a:630f) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[15:02:10] *** Quits: pro (~pro@user/pro) (Quit: pro)
[15:02:33] <FromDiscord> <dom96> it should be an easy fix
[15:02:44] <FromDiscord> <dom96> great way to make a first contribution 🙂
[15:03:25] <FromDiscord> <Rika> In reply to @ShalokShalom "When I capitalize the": because the syntax highlighters use the first letter capitalisation to distinguish "regular idents" to "type idents"
[15:04:01] <FromDiscord> <Rika> though i believe it shouldnt do that in all cases like when its a field since thats definitely never a type
[15:06:05] <FromDiscord> <dom96> you shouldn't name your field names that way, syntax highlighting should nudge you away from that
[15:07:11] <FromDiscord> <ShalokShalom> how else?
[15:07:18] <FromDiscord> <Rika> lowercase first letter
[15:07:26] <FromDiscord> <Rika> feel free to use either snake or camel
[15:07:31] <FromDiscord> <ShalokShalom> Yeah, like in the first example?
[15:07:33] *** Joins: PMunch (~PMunch@user/pmunch)
[15:07:35] <FromDiscord> <Rika> yeah
[15:07:39] <FromDiscord> <ShalokShalom> In reply to @ShalokShalom "When I capitalize the": Like that?
[15:07:49] <FromDiscord> <Rika> the types should be pascal
[15:07:53] <FromDiscord> <Rika> north: Exit
[15:07:56] <FromDiscord> <ShalokShalom> ok
[15:08:05] <FromDiscord> <Rika> its just convention
[15:08:15] <FromDiscord> <Rika> you can disobey, but you might not have such a good time
[15:10:13] <FromDiscord> <ShalokShalom> types in Pascal is a convention?
[15:11:35] <FromDiscord> <Rika> pascal case
[15:11:48] <FromDiscord> <ShalokShalom> ah, ok cool
[15:11:50] <FromDiscord> <Rika> which is camel case with a capitalised first letter
[15:11:58] <FromDiscord> <ShalokShalom> yep
[15:12:13] <FromDiscord> <ShalokShalom> someone told me lowercase first for types are fine
[15:12:17] <FromDiscord> <ShalokShalom> so I was confused
[15:12:21] <Amun-Ra> speaking of conventions, I'd like nimgrep to have an option for suggesting snake case variant
[15:12:28] <FromDiscord> <ShalokShalom> why does syntax highlighting also change its color here as well?
[15:12:30] <FromDiscord> <Rika> theyre fine since its just a convention
[15:12:31] <FromDiscord> <ShalokShalom> when its just a convention
[15:12:34] <FromDiscord> <Rika> because its the convention
[15:12:39] <FromDiscord> <Rika> (edit) "the" => "the"
[15:12:40] <FromDiscord> <ShalokShalom> Ah, ok
[15:12:44] <Amun-Ra> shalokshalom: lower case is fine for consts
[15:13:14] <FromDiscord> <ShalokShalom> ok..
[15:15:23] <FromDiscord> <ShalokShalom> How to form a list type?
[15:15:41] <FromDiscord> <ShalokShalom> sent a code paste, see https://play.nim-lang.org/#ix=3QNB
[15:15:42] <FromDiscord> <ShalokShalom> I like to make the Items type a list
[15:16:10] <Amun-Ra> you can make it seq[type]
[15:16:17] <FromDiscord> <ShalokShalom> Thanks
[15:16:26] <FromDiscord> <ShalokShalom> seq[Items] yes?
[15:16:31] <Amun-Ra> or array, if the size is known compile time
[15:16:43] <Amun-Ra> seq[TypeOfAnItem]
[15:17:09] <Amun-Ra> shalokshalom: type Items = seq[byte]
[15:17:12] <Amun-Ra> for example
[15:17:13] <FromDiscord> <Rika> In reply to @ShalokShalom "seq[Items] yes?": tes
[15:17:22] <FromDiscord> <Rika> well
[15:17:26] <FromDiscord> <Rika> what is `Items`?
[15:17:41] <Amun-Ra> if "Items" is a list alike type
[15:17:41] <FromDiscord> <Rika> its prolly more appropriate to name it `Item` if you're doing `seq[Item]`
[15:17:46] <FromDiscord> <ShalokShalom> a type from before
[15:17:47] <Amun-Ra> yes
[15:18:05] <FromDiscord> <ShalokShalom> sent a code paste, see https://paste.rs/jkk
[15:18:19] <Amun-Ra> if you don't need to have an explicite list type by name just have seq[ElementType]
[15:18:55] <FromDiscord> <ShalokShalom> true, singular is also written in the original source, from that I port it
[15:19:31] <Amun-Ra> shalokshalom: https://play.nim-lang.org/#ix=3QND
[15:20:09] <FromDiscord> <ShalokShalom> sent a code paste, see https://play.nim-lang.org/#ix=3QNE
[15:20:34] <Amun-Ra> mhm
[15:21:13] <FromDiscord> <ShalokShalom> Thats fine?
[15:21:45] <Amun-Ra> sure
[15:22:12] <FromDiscord> <dom96> nitpicking: convention is also to use 2 spaces vs 4 for indentation 🙂
[15:22:17] <Amun-Ra> and speaking of coding stype, Nim typically has 2 space indents
[15:24:05] <FromDiscord> <ShalokShalom> Yeah, I am porting F# to Nim
[15:24:11] <FromDiscord> <ShalokShalom> And trying to hold it so close as possible
[15:24:16] <FromDiscord> <ShalokShalom> To compare it 1:1
[15:25:31] <FromDiscord> <ShalokShalom> Is there a formatter?
[15:25:48] <Amun-Ra> there's nimpretty
[15:27:10] <FromDiscord> <tracy> can someone help me convert some c# code to nim?
[15:27:41] <Amun-Ra> paste somewhere the part you have trouble with
[15:28:04] * Amun-Ra 's knowledge of C# is a litle rusty
[15:29:23] <FromDiscord> <tracy> alright let me find it, im just trying to convert it but im rlly new to nim so idrk where to start
[15:29:24] <FromDiscord> <tracy> 1 sec
[15:34:03] <FromDiscord> <tracy> sent a code paste, see https://play.nim-lang.org/#ix=3QNR
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:34] <Amun-Ra> https://nim-lang.org/docs/streams.html
[15:36:55] <FromDiscord> <tracy> how do i do the rest tho
[15:37:14] <FromDiscord> <tracy> it reads the current exe, and then splits it by "" to get the text after it
[15:38:06] <FromDiscord> <Rika> https://nim-lang.org/docs/strutils.html ?
[15:38:29] <FromDiscord> <tracy> and then last thing, its reading the current exe running
[15:38:51] <FromDiscord> <Rika> good luck with that, i dont know
[15:39:25] <FromDiscord> <Rika> something in https://nim-lang.org/docs/system.html maybe like the app name or w/e
[15:45:23] <FromDiscord> <tracy> sent a code paste, see https://paste.rs/aE1
[15:45:24] <FromDiscord> <tracy> what does this mena
[15:45:25] <FromDiscord> <tracy> mean
[15:45:28] <FromDiscord> <tracy> i get it when trying to compile
[15:46:13] <FromDiscord> <Rika> you dont have a c compiler?
[15:46:16] *** Quits: PMunch (~PMunch@user/pmunch) (Quit: leaving)
[15:46:22] <FromDiscord> <tracy>  https://media.discordapp.net/attachments/371759389889003532/947104803719356416/unknown.png
[15:46:30] <FromDiscord> <tracy> gcc is c compiler right ?
[15:46:39] <FromDiscord> <ShalokShalom> How do I map between two objects?
[15:46:44] <FromDiscord> <ShalokShalom> In another object
[15:46:59] <FromDiscord> <ShalokShalom> This is the original code
[15:46:59] <FromDiscord> <ShalokShalom> sent a code paste, see https://play.nim-lang.org/#ix=3QNU
[15:47:08] <FromDiscord> <ShalokShalom> Map from RoomId to Room
[15:47:15] <FromDiscord> <ShalokShalom> How to do that?
[15:50:52] <NimEventer> New thread by Tcheran: Linux moving to C11, see https://forum.nim-lang.org/t/8958
[15:51:45] <NimEventer> New post on r/nim by wrestlingwithbadgers: db_postgres handles only strings?, see https://reddit.com/r/nim/comments/t1vvul/db_postgres_handles_only_strings/
[15:51:47] <FromDiscord> <Rika> nim compiles to c99 no? i dont see reasons for anything to break
[15:56:17] <FromDiscord> <ShalokShalom> @ElegantBeef See, how far I come https://media.discordapp.net/attachments/371759389889003532/947107300529827890/Screenshot_20220226_132534.png
[15:56:33] <FromDiscord> <ShalokShalom> Is this all correct?
[15:59:09] <FromDiscord> <Rika> String -> string, since its a builtin nim type and those are (ODDLY) lowercase
[16:05:31] <FromDiscord> <b4mbus> https://nim-lang.org/docs/nimc.html#compiler-usage-commandminusline-switches↵\> https://nim-lang.org/docs/nimc.html#compiler-usage-commandminusline-switches
[16:05:42] <FromDiscord> <b4mbus> (edit) "https://nim-lang.org/docs/nimc.html#compiler-usage-commandminusline-switches" => "ResultUsed    Warn about the usage of the built-in result variable."
[16:05:48] <FromDiscord> <b4mbus> why would that be a warning?
[16:06:30] <FromDiscord> <b4mbus> what's so wrong about using the result variable?
[16:07:25] <FromDiscord> <Rika> if you want it
[16:07:26] <FromDiscord> <Rika> its a choice
[16:08:12] <FromDiscord> <b4mbus> okay but why would that be a warning? Warnings should notify users about potentially misleading/dangerous actions taken in code
[16:08:50] <FromDiscord> <b4mbus> and using the result variable is not only kind of an idiom but just a standard practice in nim isnt it, and defining a new variable of the same name actually uses that variable, instead of the built-in one
[16:09:23] <FromDiscord> <b4mbus> \> and defining a new variable of the same name actually uses that variable, instead of the built-in one↵oh that's my bad actually
[16:09:42] <FromDiscord> <b4mbus> (edit) "actually" => "actually, it does not use the variable, it uses the built-in"
[16:09:43] <FromDiscord> <b4mbus> ok I see now, me being a dumb bitch again, sorry
[16:09:57] <FromDiscord> <Deceptive> yo guys i am trying to integrate the library which i made in nim, what i want is to unity load this library in the game itself
[16:15:07] <FromDiscord> <auxym> yo, ok, sounds cool
[16:23:58] <FromDiscord> <ShalokShalom> How could someone shorten 17 - 30 on the Nim side?
[16:24:12] <FromDiscord> <ShalokShalom> On the right side is F# https://media.discordapp.net/attachments/371759389889003532/947114325879975946/Screenshot_20220226_135252.png
[16:24:54] <FromDiscord> <ShalokShalom> It amounts to line 11 - 14
[16:25:10] <FromDiscord> <haxscramper> You need to use macros for variant object declarations
[16:25:41] <FromDiscord> <ShalokShalom> Yeah, I think beef has already send me some libraries, but I cant really make sense of it
[16:26:15] <FromDiscord> <ShalokShalom> I like the {}-less approach of Nim
[16:26:22] <FromDiscord> <ShalokShalom> Looks even cleaner. 🙂
[16:32:34] <FromDiscord> <Rika> In reply to @ShalokShalom "How could someone shorten": I think it’s already pretty concise
[16:41:17] *** Quits: jmd_ (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[16:43:35] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:52:58] <FromDiscord> <konsumlamm> In reply to @b4mbus "okay but why would": using `result` can be potentially misleading/dangerous, for example when you forget to initialize it in one code path and then return
[16:56:20] <FromDiscord> <ShalokShalom> In reply to @Rika "I think it’s already": 4 lines vs 13 lines is short?
[16:56:46] <FromDiscord> <Rika> Lines can be inflated or deflated
[16:56:58] <FromDiscord> <Rika> I would be more worried about a 10 vs 80 line difference
[16:57:09] <FromDiscord> <ShalokShalom> well, its overall less boilerplate code on the right side
[16:57:21] <FromDiscord> <ShalokShalom> i like, that its more vertically on Nim side
[16:57:27] <FromDiscord> <Rika> Not really, there’s only like an estimated 5 of boilerplate
[16:57:51] <FromDiscord> <ShalokShalom> Hax says, there are macros, to make it shorter
[16:57:56] <FromDiscord> <ShalokShalom> I am only interested in this
[16:58:24] <FromDiscord> <Rika> Can’t help you, some were suggested above I believe
[17:01:46] <FromDiscord> <deech> Is there any documentation on getting a Nim dev environment up on Windows 10?
[17:03:05] <FromDiscord> <ShalokShalom> There is documentation on how to install Nim. And you can choose VSCode plus Extension. What else do you think about?
[17:09:02] <FromDiscord> <deech> I've seen the official docs, I was thinking a step by step on how to build from scratch with `vcc` ( I'd rather not work with MinGW).
[17:12:28] <FromDiscord> <ShalokShalom> choosenim works without MinGW, it seems: https://github.com/dom96/choosenim#dependencies
[17:23:32] <FromDiscord> <tracy> In reply to @ShalokShalom "<@!145405730571288577> See, how far": theme?!
[17:27:40] *** Joins: kenran (~kenran@200116b82b2bf100d77c1a62a38a1f9a.dip.versatel-1u1.de)
[17:38:05] <nrds> <06Prestige99> I'm on Linux trying to cross compile something with mingw, but having errors about libwinpthread-1.dll not found. Anyone know what I am missing here? I do have mingw-w64-winpthreads installed, do I have to copy the dll locally and dynamically link it?
[17:39:02] <FromDiscord> <ShalokShalom> In reply to @tracy "theme?!": https://marketplace.visualstudio.com/items?itemName=benjaminmandersen.midnight-pastel
[17:40:56] <NimEventer> New question by Kevin Whitefoot: How can one do a pixel by pixel comparison of an image created by cairo and an image loaded from a file, see https://stackoverflow.com/questions/71277311/how-can-one-do-a-pixel-by-pixel-comparison-of-an-image-created-by-cairo-and-an-i
[17:43:35] <FromDiscord> <tracy> sent a code paste, see https://play.nim-lang.org/#ix=3QOt
[17:43:39] <FromDiscord> <tracy> what about this can have side effects?
[17:43:44] <FromDiscord> <tracy>  https://media.discordapp.net/attachments/371759389889003532/947134341899747408/unknown.png
[17:50:25] <FromDiscord> <auxym> I assume opening a file is considered a side effect
[17:54:51] <supakeen> and in general that functions return value is not dependent solely on its inputs
[17:57:21] <FromDiscord> <ShalokShalom> isnt func supposed to prohibit that?
[17:57:28] <FromDiscord> <ShalokShalom> although I heard of some limitations
[18:01:01] <FromDiscord> <tracy> i meant to put proc
[18:01:01] <FromDiscord> <tracy> oops
[18:17:16] <NimEventer> New thread by Rad: Embedded STM32 - Bare Metal Bootstrap, see https://forum.nim-lang.org/t/8959
[18:23:16] <FromDiscord> <tracy> how do i get the length of a filestream 🤔
[18:23:41] <FromDiscord> <tracy> im trying to write to the end of a exe file but i have to set the position of the filestream to the end of the stream
[18:23:47] <FromDiscord> <tracy> and idk how to get the length
[18:29:38] <FromDiscord> <tracy> would this be getting the stream length
[18:29:38] <FromDiscord> <tracy> ?
[18:29:38] <FromDiscord> <tracy> sent a code paste, see https://paste.rs/P2g
[18:31:16] *** Joins: arkurious (~arkurious@user/arkurious)
[18:32:48] <FromDiscord> <tracy> sent a code paste, see https://play.nim-lang.org/#ix=3QOS
[18:44:28] <FromDiscord> <haolian9 (高浩亮)> as it is a file, i think posix.stat is good enough; or open the file in fmAppend mode
[18:44:57] <FromDiscord> <haolian9 (高浩亮)> does `cstring` need to be freed explictly?↵there is a pr related to [daniel-j/nim-mpv#1](https://github.com/daniel-j/nim-mpv/pull/1), i think it's unnecessary, and the `free()` does not really exist.
[18:45:41] <FromDiscord> <ShalokShalom> How to use macros for variant object declarations?
[18:46:22] <FromDiscord> <leorize> depends on how you got the string
[18:46:59] <FromDiscord> <leorize> if it comes from a Nim string, it's memory is managed by the originating string so you don't have to
[18:48:06] <FromDiscord> <leorize> if it is allocated manually or originating from a C API for example, then it might have to be manually freed, but consult the API documentation in that case
[18:49:21] <FromDiscord> <leorize> wdym?↵(@ShalokShalom)
[18:49:43] <FromDiscord> <ShalokShalom> I was told, I can shorten my code this way
[18:49:56] <FromDiscord> <tracy> sent a code paste, see https://play.nim-lang.org/#ix=3QP1
[18:50:00] <FromDiscord> <tracy> and when i run my c# code, it just crashes
[18:50:03] <FromDiscord> <tracy> im trying to use nim in c# as a dllw
[18:50:07] <FromDiscord> <tracy> why does this happen? 🤔
[18:50:45] <FromDiscord> <tracy> i wrote the args wrong, but i didnt in the actual code
[18:51:14] <FromDiscord> <haolian9 (高浩亮)> sent a code paste, see https://play.nim-lang.org/#ix=3QP2
[18:51:24] <FromDiscord> <ShalokShalom> leorize: line 17 - 30, see 11 - 14 as comparison https://media.discordapp.net/attachments/371759389889003532/947151369318580334/Screenshot_20220226_135252.png
[18:51:46] <FromDiscord> <ShalokShalom> I like to do it in a more memorable way
[18:52:07] <FromDiscord> <ShalokShalom> This looks like, I have to look up its syntax more often than I am willing to
[18:52:36] <FromDiscord> <ShalokShalom> Its not really a dedicated syntax, more a combination of basic structures.
[18:54:17] <FromDiscord> <tracy> the error:
[18:54:21] <FromDiscord> <tracy> sent a code paste, see https://play.nim-lang.org/#ix=3QP7
[18:54:31] *** Joins: ltriant (~ltriant@118.102.122.246)
[18:58:16] <FromDiscord> <haolian9 (高浩亮)> thank you! @leorize\:envs.net
[19:00:29] *** Quits: ltriant (~ltriant@118.102.122.246) (Ping timeout: 256 seconds)
[19:01:36] <FromDiscord> <ShalokShalom> @tracyIs this Jetbrains?
[19:01:37] *** Quits: kayabaNerve (~kayabaNer@user/kayabanerve) (Ping timeout: 256 seconds)
[19:02:20] <FromDiscord> <tracy> In reply to @ShalokShalom "<@!946209778584137768>Is this Jetbrains?": is what
[19:02:31] <FromDiscord> <ShalokShalom> your screenshot
[19:02:36] <FromDiscord> <ShalokShalom> do you use the IDE?
[19:02:38] <FromDiscord> <ShalokShalom> for NIm
[19:02:52] <FromDiscord> <tracy> In reply to @tracy "": this error is from when i was calling it from c#
[19:02:58] <FromDiscord> <tracy> its a winform in vs
[19:02:58] <FromDiscord> <ShalokShalom> Ah
[19:03:04] <FromDiscord> <ShalokShalom> (edit) "NIm" => "Nim"
[19:17:00] <FromDiscord> <coldfussion> sent a code paste, see https://paste.rs/Avg
[19:34:09] <FromDiscord> <demotomohiro> Maybe how `cstringArray` and return value of `glfwGetRequi...` hold length of the array differently?
[19:34:26] <FromDiscord> <tracy> In reply to @tracy "": any1 kno a fix for this 🙁
[19:37:56] <FromDiscord> <coldfussion> idk, `glfwGetRequiredInstanceExtensions` returns `const char` in C which should perfectly map to `cstringArray` in nim..↵(@demotomohiro)
[19:38:26] <Amun-Ra> sometimes ptr cstring is more preferrable to cstringArray
[19:40:08] <FromDiscord> <demotomohiro> https://nim-lang.org/docs/system.html#cstringArrayToSeq%2CcstringArray%2CNatural↵`cstringArrayToSeq()` has `len` parameter but your  code doesn't set it.
[19:41:39] <Amun-Ra> you have to iterate over cstingArray to know the length
[19:43:10] <FromDiscord> <coldfussion> oh, yeah, that worked. it just has two versions, one without length, it worked in other cases, so i figured why bother with length... Thanks!↵(@demotomohiro)
[19:45:37] <FromDiscord> <demotomohiro> https://github.com/nim-lang/Nim/blob/d7370ce26962b3b82e6b9be6562f6e88ba7ff86c/lib/system.nim#L2267↵without length version suppose `cstringArray` is terminated by nil.
[19:46:46] <Amun-Ra> yes
[19:47:15] <Amun-Ra> cstringArray == ptr UncheckedArray[cstring]
[19:47:20] <FromDiscord> <coldfussion> oh, so the output of `glfwGetRequiredInstanceExtensions` wasn't nil terminated. makes sense now)
[19:48:04] <FromDiscord> <Phil> Maybe this is sports exhaustion speaking out of me... but how did I loop over a seq of objects again and mutate it's entries again?
[19:48:58] <Amun-Ra> for item in mitems the_sequence: do_sth
[19:49:28] <FromDiscord> <Phil> sent a code paste, see https://play.nim-lang.org/#ix=3QPo
[19:49:40] <FromDiscord> <Phil> mitems iterator? riiiiight
[19:53:11] <Amun-Ra> there's mpairs iterator too (if you need to know the index value)
[19:57:34] <FromDiscord> <ShalokShalom> How do I map between two objects?
[19:58:33] <FromDiscord> <haxscramper> `std/tables`
[19:58:41] <FromDiscord> <haxscramper> (edit) "`std/tables`" => "`std/tables.Table`"
[20:05:22] *** Joins: kayabaNerve (~kayabaNer@user/kayabanerve)
[20:06:11] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[20:06:18] <FromDiscord> <ShalokShalom> I had a look through the documentation, and while it seems very comprehensive, it doesnt seem to cover my simple use case.
[20:07:26] <FromDiscord> <ShalokShalom> sent a code paste, see https://paste.rs/yfi
[20:08:00] <FromDiscord> <ShalokShalom> So to basically map one object to another, within an object.
[20:08:54] <FromDiscord> <tracy> how to check if string in any item of an array
[20:08:54] <FromDiscord> <tracy> ?
[20:09:46] <FromDiscord> <Phil> sequtils lib has what you're searching for tracy
[20:10:48] <FromDiscord> <tracy> In reply to @Isofruit "sequtils lib has what": whats the proc called 🤔
[20:10:53] <FromDiscord> <Phil> you want an `any` proc, essentially you feed that an anonymous proc that determines whether an individual entry in the array passes or fails the test.↵If any of the entries in that array fails, "any" will return false
[20:11:34] <FromDiscord> <tracy> oh okay, tyy!! :))
[20:11:37] <FromDiscord> <Phil> (edit) "test.↵If" => "test. The "test" being your anonymous proc that returns a boolean, passing being "true" returning↵If"
[20:12:33] <FromDiscord> <haxscramper> In reply to @ShalokShalom "I had a look": `Table[RoomId, Room]`
[20:12:38] <FromDiscord> <ShalokShalom> Thanks a lot
[20:13:24] <FromDiscord> <ShalokShalom> Do you see such an example of the official homepage?
[20:13:54] <FromDiscord> <Phil> In reply to @tracy "oh okay, tyy!! :))": No problemo
[20:14:55] <FromDiscord> <tracy> In reply to @Isofruit "No problemo": how do i use it i barely knwo this language im v new jmsadkf
[20:15:13] <FromDiscord> <Phil> In reply to @tracy "how do i use": Ah, you ever done functional programming?
[20:15:28] <FromDiscord> <tracy> In reply to @Isofruit "Ah, you ever done": is c# or python functional 🤔
[20:15:50] <FromDiscord> <ShalokShalom> Is this correct code?
[20:15:51] <FromDiscord> <ShalokShalom> sent a code paste, see https://paste.rs/tQw
[20:16:05] <FromDiscord> <ShalokShalom> fine
[20:16:06] <FromDiscord> <auxym> In reply to @tracy "is c# or python": Imagine you were doing everything in LINQ
[20:16:07] <FromDiscord> <tracy> sent a code paste, see https://play.nim-lang.org/#ix=3QPv
[20:16:14] <FromDiscord> <ShalokShalom> In reply to @tracy "is c# or python": Both have functional features
[20:16:51] <FromDiscord> <ShalokShalom> Both, LINQ and generics, as well as a whole bunch of other implementations come straight out of F#
[20:17:01] <FromDiscord> <Phil> In reply to @tracy "is c# or python": python has the capability to use functional programming patterns. In python the closest thing would be ... god what was it called again, these types of expressions `[e for e in myArray]`
[20:17:05] <FromDiscord> <ShalokShalom> Generics in C# are actually done by the F# creator
[20:17:45] <FromDiscord> <auxym> In reply to @Isofruit "python has the capability": list comprehensions
[20:17:48] <FromDiscord> <ShalokShalom> And Python has this: https://github.com/cognitedata/Expression↵and this: http://coconut-lang.org/
[20:17:56] <FromDiscord> <Phil> In reply to @tracy "is c# or python": thank you! Blanked on the name
[20:17:58] <FromDiscord> <ShalokShalom> And Fable can transpile F# into Python
[20:18:12] <FromDiscord> <Phil> (edit) "In reply to @tracy "is c# or python": thank you! Blanked on the name ... " 03added "@auxym (this was an accident, wanted to respond to tracy)"
[20:18:13] <FromDiscord> <tracy> sent a code paste, see https://play.nim-lang.org/#ix=3QPw
[20:18:14] <FromDiscord> <tracy> In reply to @ShalokShalom "And Fable can transpile": whats fabel
[20:18:15] <FromDiscord> <tracy> fable
[20:18:36] <FromDiscord> <Phil> Anyway, the idea is, that not only can you pass variables as parameters into a proc/function/whatever, you can also pass other procs into them as parameters
[20:18:57] <FromDiscord> <Phil> So that the proc you're handing parameters can call that specific proc at one point in its code
[20:19:35] <FromDiscord> <ShalokShalom> @haxscramper Would you agree, that its sensible to include an example, that explains my use case? Like in the documentation
[20:19:54] <FromDiscord> <ShalokShalom> https://fable.io/
[20:20:03] <FromDiscord> <ShalokShalom> Mainly a F# > JS compiler
[20:20:12] <FromDiscord> <ShalokShalom> But it can also do Python, to a certain extend.
[20:20:16] <FromDiscord> <ShalokShalom> That feature is new.
[20:21:14] <FromDiscord> <ShalokShalom> (edit) 
[20:21:55] <FromDiscord> <Phil> sent a code paste, see https://play.nim-lang.org/#ix=3QPx
[20:21:58] <FromDiscord> <auxym> In reply to @ShalokShalom "<@!608382355454951435> Would you agree,": there's of examples of tables here? https://nim-lang.org/docs/tables.html
[20:23:22] <FromDiscord> <tracy> sent a code paste, see https://play.nim-lang.org/#ix=3QPy
[20:23:52] <FromDiscord> <Phil> What'll happen in my code example is, that the "any" proc will essentially call "largerThan4" on every entry in the array "blablaSeq" one after another. If an entry causes "largerThan4" to output "false", "any" completes immediately with "false". Otherwise it runs through the entire array, gets "true" every time and thus returns "true" itself
[20:24:55] <FromDiscord> <Phil> seqs have the "contains" proc if you have exact matches
[20:25:32] <FromDiscord> <Phil> sent a code paste, see https://play.nim-lang.org/#ix=3QPz
[20:26:19] <FromDiscord> <Phil> (edit) "https://play.nim-lang.org/#ix=3QPz" => "https://play.nim-lang.org/#ix=3QPA"
[20:27:01] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[20:27:07] <FromDiscord> <tracy> this language so hard
[20:27:08] <FromDiscord> <tracy> 😭
[20:27:15] <FromDiscord> <huantian> In reply to @tracy "im tryna do like": Does this not just work?
[20:27:25] <FromDiscord> <tracy> In reply to @huantian "Does this not just": thats python code
[20:27:43] <FromDiscord> <tracy> wait let me try it
[20:28:03] <FromDiscord> <tracy> oh wait it does
[20:28:03] <FromDiscord> <tracy> LOL
[20:30:31] <FromDiscord> <Phil> Seeing that nim has its own list comprehension syntax
[20:30:35] <FromDiscord> <Phil> Does anyone actually use that?
[20:30:44] <FromDiscord> <tracy> use what
[20:30:45] <FromDiscord> <tracy> 🤔
[20:31:10] <FromDiscord> <locriacyber> collect↵(@Phil)
[20:31:13] <FromDiscord> <Phil> list comprehensions when "map, any, some, filter" etc. are readily available and seem easier to write and understand
[20:32:04] <FromDiscord> <tracy> In reply to @Isofruit "list comprehensions when "map,": map any some and filter seem hard idek what them mean
[20:32:42] <FromDiscord> <huantian> In reply to @Isofruit "list comprehensions when "map,": Collect is a lot fore readable when you are trying to do more complex things, like nesting for loops and ifs
[20:33:08] <FromDiscord> <huantian> Otherwise you’d get a tree of doom
[20:33:14] <FromDiscord> <Phil> In reply to @tracy "map any some and": They aren't really, you'll want to get into functional programming patterns either way sooner or later, wrapping your head around what happens when you pass a function to a function is fairly beneficial
[20:33:22] <FromDiscord> <Phil> In reply to @huantian "Otherwise you’d get a": tree as in AST
[20:33:33] <FromDiscord> <huantian> More as in indentation
[20:33:34] <FromDiscord> <Phil> (edit) "AST" => "AST?"
[20:33:44] <FromDiscord> <huantian> /visually
[20:33:52] <FromDiscord> <Phil> Ah, that. my solution tends to be dedicated procs because when you do something that complicated it deserves a name
[20:35:03] <FromDiscord> <Phil> Which I guess is why the usecase for collect hasn't happened for me yet, fair
[20:36:48] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[20:36:58] <FromDiscord> <tracy> do u guys think cpp or nim is better
[20:37:01] <FromDiscord> <tracy> 🤔
[20:37:15] <FromDiscord> <Phil> Got curious because I'd be surprised if C# didn't support functional programming features in one way or another. Turns out it does have those features
[20:37:52] <FromDiscord> <Phil> I'm not sure what answer you're expecting from literally the main channel of the nim discord server
[20:38:37] <FromDiscord> <tracy> idek what r pros n cons
[20:38:56] <FromDiscord> <Phil> Specifically to a question that pretty much has no answer without narrowing down its scope as to better in what regard
[20:39:01] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[20:39:26] <FromDiscord> <Phil> And even there it's insanely hard to answer due to the billion bells and whistles at your disposal typically
[20:40:40] <FromDiscord> <tracy> should i be learning nim as a noobish programmer cuz unlike python (a high level language) nim is like the opposite
[20:41:10] <FromDiscord> <Phil> Is it more memory safe? Certainly.↵Can it reach C++'s performance? Almost anything can if you're enough of a language expert and spend sufficient time optimizing your code.↵Is it more productive? 60% of that depends on the developer, though I'd naturally argue that nim is near the top of the list in terms of being comprehensible.
[20:42:26] <FromDiscord> <tracy> In reply to @Isofruit "Is it more memory": i tried writing cpp code and it is so hard to understand imo syntax wize n stuff
[20:42:52] <FromDiscord> <Phil> The mere nature of having to also deal with memory management opens you up to a whole host of avoidable bugs
[20:43:21] <FromDiscord> <Phil> (edit) "bugs" => "bugs↵And thus also to more complexity. As such nim is by nature simpler if you don't plan on removing the GC that is"
[20:43:37] <FromDiscord> <Phil> Which is something you can actually do in NIM IIRC
[20:43:42] <FromDiscord> <Phil> (edit) "NIM" => "nim"
[20:45:44] <FromDiscord> <Phil> As someone who started out with python/js/java knowledge and went to nim I'd say it's pretty nice to learn.
[20:46:28] <FromDiscord> <tracy> In reply to @Isofruit "As someone who started": ya i wanted to switch cuz the things i wanted to do in python were just not doable (low level kinda stuff)
[20:47:15] <FromDiscord> <Phil> In reply to @tracy "ya i wanted to": I'd suggest with keeping at it.↵One thing you might want to start wrapping your head around is code that runs at compile-time vs. code that runs at runtime
[20:48:21] <FromDiscord> <Phil> That's a significant difference to keep in mind that allows you to do quite a lot to speed up code.↵That and metaprogramming but I'd keep that under wraps for after a month or so of experience
[20:48:31] <FromDiscord> <tracy> oh, i also switched cuz i didnt like my source code being so easy to decompile
[20:49:18] <FromDiscord> <Phil> Can't say much about that
[20:49:54] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d0d7:ba7d:5a5a:630f)
[21:06:08] <FromDiscord> <ShalokShalom> In reply to @auxym "there's of examples of": Not in the way I was looking for them.
[21:07:09] <FromDiscord> <ShalokShalom> Like, this is how I have done it, and I think my use case is much more simple, than most of what is covered: https://github.com/ShalokShalom/fsharp-nim/blob/master/dev-aspect.nim#L58
[21:07:49] <FromDiscord> <ShalokShalom> I frequently get the impression, that Nims documentation is generally covering a lot of niche cases, and adding a lot of details to everything.
[21:08:04] <FromDiscord> <ShalokShalom> And basically not covering basics in some cases.
[21:37:44] *** Quits: Gustavo6046_ (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[21:37:57] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[21:39:37] *** Joins: ltriant (~ltriant@118.102.122.246)
[21:44:49] *** Quits: ltriant (~ltriant@118.102.122.246) (Ping timeout: 256 seconds)
[22:07:40] <NimEventer> New post on r/nim by Familiar_Ad_8919: is the vscode extension still being worked on?, see https://reddit.com/r/nim/comments/t23udx/is_the_vscode_extension_still_being_worked_on/
[22:08:45] <FromDiscord> <b4mbus> What does really `isMainModule` mean? What does Nim consider as a `main module`?
[22:09:18] <FromDiscord> <b4mbus> > True only when accessed in the main module. This works thanks to compiler magic. It is useful to embed testing code in a module.
[22:09:23] <FromDiscord> <b4mbus> The docs dont really say much to me
[22:09:59] <NimEventer> New thread by Gcao: Anyone working on a new Nim book or second edition of Nim in Action?, see https://forum.nim-lang.org/t/8960
[22:29:47] <NimEventer> New post on r/nim by plutoniator: Trouble trying to import a Cython module, see https://reddit.com/r/nim/comments/t24btz/trouble_trying_to_import_a_cython_module/
[22:34:12] <Amun-Ra> b4mbus: are you familiar with python?
[22:34:36] <Amun-Ra> b4mbus: isMainModule is true if you compile the file directly, it's false if you import it
[22:35:04] <Amun-Ra> it's python's equivalent of if __file__ == '__main__'
[22:38:03] <FromDiscord> <b4mbus> I see, makes sense
[22:38:12] <FromDiscord> <b4mbus> another question - is there some kind of a `string_view` in Nim?
[22:38:17] <FromDiscord> <b4mbus> (edit) "`string_view`" => " C++'s `std::string_view`"
[22:38:29] <FromDiscord> <b4mbus> afair string and cstring always allocate?
[22:40:18] <Amun-Ra> what's the diff. between std::string and std::string_view?
[22:41:36] <FromDiscord> <b4mbus> `std::string` is a heap allocated string with SSO, `std::string_view` is just an immutable view for strings, ptr to the beggining + size (kinda like openArray is for seqs and arrays, string_view is for const char's, std::strings, etc.)
[22:41:54] <FromDiscord> <b4mbus> basically string_view doesnt allocate, it only "views" some data
[22:42:03] <FromDiscord> <b4mbus> I also dont suppose there are references in nim, some kinda:
[22:42:27] <FromDiscord> <b4mbus> sent a code paste, see https://play.nim-lang.org/#ix=3QQ9
[22:42:28] <FromDiscord> <b4mbus> I only want to view message here
[22:42:37] <FromDiscord> <b4mbus> `proc foo(message: string)` will copy, wont it?
[22:42:41] <Amun-Ra> no
[22:42:45] <FromDiscord> <b4mbus> idk nim that much
[22:42:46] <FromDiscord> <b4mbus> oh?
[22:42:53] <Amun-Ra> I mean it will for very small objects
[22:43:50] <Amun-Ra> you can just pass a string
[22:45:16] <FromDiscord> <b4mbus> oh hmm
[22:45:18] <FromDiscord> <b4mbus> strings are immutable
[22:45:19] <FromDiscord> <b4mbus> I see
[22:45:31] <FromDiscord> <b4mbus> so nim uses COW refcounted strings I suppose
[22:45:44] <Amun-Ra> not in that case
[22:45:51] <Amun-Ra> proc foo(s: string)
[22:45:58] <Amun-Ra> s will always be immutable
[22:46:49] <Amun-Ra> proc foo(s: var string) is sth like foo(s: &std::string)
[22:48:07] <Amun-Ra> proc foo(s: string) == foo(s: const &std::string)
[22:48:35] <Amun-Ra> more or less
[22:50:34] <Amun-Ra> (there are also ref and var ref variants)
[23:05:24] *** Joins: perro (~perro@072-191-245-069.res.spectrum.com)
[23:07:24] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[23:11:14] <FromDiscord> <tracy> sent a code paste, see https://play.nim-lang.org/#ix=3QQ4
[23:11:21] <FromDiscord> <tracy> why doesnt this get the code from the end of the file?
[23:19:26] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[23:29:02] <FromDiscord> <b4mbus> sent a code paste, see https://play.nim-lang.org/#ix=3QQn
[23:29:08] <FromDiscord> <b4mbus> (edit) "https://play.nim-lang.org/#ix=3QQn" => "https://play.nim-lang.org/#ix=3QQo"
[23:38:27] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d0d7:ba7d:5a5a:630f) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:42:50] <FromDiscord> <b4mbus> actually the cannot evaluate at compile time is only `nimls` trippin
[23:42:57] <FromDiscord> <b4mbus> the other is still there tho
[23:43:22] <FromDiscord> <b4mbus> `[long path](34, 45) Error: identifier expected, but found '(needle) => msgCopy'`
[23:43:27] <FromDiscord> <b4mbus> I get nothing but that....
