[00:00:36] *** Joins: frgo (~frgo@dynamic-046-114-147-099.46.114.pool.telefonica.de)
[00:03:40] *** Quits: frgo (~frgo@dynamic-046-114-147-099.46.114.pool.telefonica.de) (Remote host closed the connection)
[00:04:40] *** Joins: tyson2` (~user@cpe44d9e795a64f-cm688f2e2dfaa0.cpe.net.cable.rogers.com)
[00:07:53] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 265 seconds)
[00:08:08] *** Joins: derelict (~derelict@user/derelict)
[00:08:51] *** Quits: tyson2 (~user@cpe44d9e795a64f-cm688f2e2dfaa0.cpe.net.cable.rogers.com) (Ping timeout: 265 seconds)
[00:11:03] *** Joins: selwyn (~selwyn@user/selwyn)
[00:11:34] <contrapunctus> ohai
[00:12:22] <contrapunctus> Is there an Emacs command to show all occurrences of symbols from a specific package in a buffer?
[00:12:46] *** Quits: treflip (~user@95.79.32.99) (Quit: good night)
[00:13:16] <contrapunctus> e.g. I want to see how a program is using a given library.
[00:15:46] *** Quits: lad (~lad@user/lad) (Remote host closed the connection)
[00:17:58] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[00:20:40] <Bike> emacs doesn't really know about symbols and packages. due to :use it's not always clear what symbola  package belongs to until the code is actually loaded
[00:21:19] <contrapunctus> "what * package a symbol belongs to" ?
[00:21:35] <contrapunctus> hm... ü§îÔ∏è
[00:22:57] <Bike> say you have a file with (in-package #:mypackage) on top, and (define-constant ...) in it somewhere
[00:23:27] <Bike> define-constant could be in mypackage, or it could be in some package mypackage uses (e.g. alexandria), and this isn't apparent until the package is actually around
[00:25:06] <contrapunctus> mmhm
[00:26:42] *** Quits: scymtym (~user@2001:638:504:20e6:6ac3:87e0:e782:f3fc) (Ping timeout: 240 seconds)
[00:31:34] *** Joins: jeosol (~jeosol@76-238-186-228.lightspeed.hstntx.sbcglobal.net)
[00:32:55] *** Quits: sm2n (~sm2n@user/sm2n) (Read error: Connection reset by peer)
[00:33:17] *** Joins: sm2n (~sm2n@user/sm2n)
[00:35:02] *** Quits: unyu (~pyon@user/pyon) (Ping timeout: 268 seconds)
[00:36:57] *** Joins: unyu (~pyon@user/pyon)
[00:48:23] *** Joins: lisp123 (~lisp123@5.30.23.247)
[00:52:50] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 265 seconds)
[00:54:10] *** Joins: scymtym (~user@ip-88-153-154-183.hsi04.unitymediagroup.de)
[00:58:08] *** Quits: lotuseater (~user@p200300e787025700249b68ce60a870ab.dip0.t-ipconnect.de) (Quit: ERC (IRC client for Emacs 27.2))
[01:02:06] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[01:03:44] <pjb> contrapunctus: you can write a little CL program to read a source file and collect the symbols.
[01:04:52] <pjb> contrapunctus: (delete-duplicates (delete-if-not (function symbolp) (flatten (sexp-list-file-contents "~/src/public/hw/hw.lisp")))) #| --> (defpackage :use :export :documentation in-package &optional *standard-output* format finish-output out values defun main &rest declare ignore pname arguments hw) |#
[01:04:56] <contrapunctus> pjb: hehe, one of those famous pjb Lisp one-liners coming up?
[01:04:57] <contrapunctus> a-ha!
[01:05:28] <contrapunctus> pjb: thanks xD
[01:05:31] <pjb> then you can filter on symbol-package.
[01:06:19] <pjb> contrapunctus: however, note that reading a source file is dependent on evaluating parts of that source file (read-time stuff). So it works better if you have already loaded it. (but it may still fail).
[01:07:54] <pjb> or even macros.  There are macros that re-intern their arguments in a different package. Sometimes even with a different case.  And reading doesn't give you all the symbols, since macros can intern more symbols.
[01:08:18] *** Quits: tyson2` (~user@cpe44d9e795a64f-cm688f2e2dfaa0.cpe.net.cable.rogers.com) (Ping timeout: 265 seconds)
[01:26:18] *** Quits: dsk (~dsk@user/dsk) (Ping timeout: 240 seconds)
[01:31:30] *** Joins: selwyn (~selwyn@user/selwyn)
[01:36:56] *** Joins: karlosz (~karlosz@router.cloyne.org)
[01:53:58] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 272 seconds)
[01:54:27] *** Joins: livoreno (~livoreno@user/notzmv)
[01:55:49] *** Joins: frgo (~frgo@p200300deef27d700680eb059371c1892.dip0.t-ipconnect.de)
[01:59:54] *** Quits: frgo (~frgo@p200300deef27d700680eb059371c1892.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[02:06:06] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[02:16:04] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-10-70-54-112-49.dsl.bell.ca)
[02:34:28] *** Joins: frgo (~frgo@p200300deef27d700680eb059371c1892.dip0.t-ipconnect.de)
[02:38:21] *** Quits: Mrtn[m] (~mrtn@2001:470:69fc:105::1f44) (Write error: Connection reset by peer)
[02:38:21] *** Quits: loke[m] (~loke@2001:470:69fc:105::237) (Read error: Connection reset by peer)
[02:38:23] *** Quits: luis` (~luismboma@2001:470:69fc:105::cc7) (Remote host closed the connection)
[02:38:26] *** Quits: etimmons (~etimmons@2001:470:69fc:105::5d5) (Remote host closed the connection)
[02:38:26] *** Quits: dieggsy (~dieggsy@2001:470:69fc:105::91f) (Write error: Connection reset by peer)
[02:38:27] *** Quits: Gnuxie (~gnuxie@user/gnuxie) (Write error: Connection reset by peer)
[02:38:33] *** Quits: akanouras (~akanouras@user/akanouras) (Remote host closed the connection)
[02:38:34] *** Quits: katco (~katco@2001:470:69fc:105::2b8) (Write error: Broken pipe)
[02:38:42] *** Quits: frgo (~frgo@p200300deef27d700680eb059371c1892.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[02:39:07] *** Joins: loke[m] (~loke@2001:470:69fc:105::237)
[02:41:16] *** Joins: Gnuxie (~gnuxie@user/gnuxie)
[02:41:16] *** Joins: katco (~katco@2001:470:69fc:105::2b8)
[02:41:16] *** Joins: akanouras (~akanouras@user/akanouras)
[02:41:16] *** Joins: dieggsy (~dieggsy@2001:470:69fc:105::91f)
[02:41:16] *** Joins: etimmons (~etimmons@2001:470:69fc:105::5d5)
[02:41:16] *** Joins: Mrtn[m] (~mrtn@2001:470:69fc:105::1f44)
[02:41:28] *** Joins: luis` (~luismboma@2001:470:69fc:105::cc7)
[02:41:34] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[02:42:06] *** Quits: attila_lendvai (~alendvai@catv-86-101-74-70.catv.broadband.hu) (Ping timeout: 272 seconds)
[02:49:12] *** Joins: lisp123 (~lisp123@5.30.23.247)
[02:50:12] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[02:53:33] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 258 seconds)
[02:57:22] *** Joins: frgo (~frgo@p200300deef27d700680eb059371c1892.dip0.t-ipconnect.de)
[02:59:53] *** Quits: pve (~pve@178-55-192-74.bb.dnainternet.fi) (Quit: leaving)
[03:01:30] *** Quits: frgo (~frgo@p200300deef27d700680eb059371c1892.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[03:01:59] *** Quits: varjag (~user@ti0040a400-5479.bb.online.no) (Ping timeout: 258 seconds)
[03:03:37] *** Joins: cjb (~cjb@user/cjb)
[03:08:21] *** Quits: luna-is-here (~quassel@ip-95-223-58-221.hsi16.unitymediagroup.de) (Remote host closed the connection)
[03:08:42] *** Quits: [deleted] (~zmv@user/notzmv) (Ping timeout: 272 seconds)
[03:09:30] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[03:14:15] *** Joins: Lycurgus (~juan@cpe-45-46-140-49.buffalo.res.rr.com)
[03:16:02] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Ping timeout: 252 seconds)
[03:16:31] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[03:17:23] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 244 seconds)
[03:19:36] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[03:35:05] *** Quits: taiju (~taiju@M014013236064.v4.enabler.ne.jp) (Ping timeout: 256 seconds)
[03:36:52] *** Quits: ghard (~user@2a02:a210:23c2:6e00:3617:ebff:fed2:79cd) (Ping timeout: 246 seconds)
[03:37:16] *** Joins: taiju (~taiju@240b:253:ec40:2400:654f:7566:b735:5f06)
[04:06:41] *** lacedaemon is now known as fe[nl]ix
[04:08:21] *** Quits: Alfr (~Alfr@user/alfr) (Killed (molybdenum.libera.chat (Nickname regained by services)))
[04:08:26] *** Joins: Alfr (~Alfr@user/alfr)
[04:10:18] *** Quits: beegs (~beegs@2600:8805:d50c:4200::3a89) (Ping timeout: 240 seconds)
[04:10:41] *** Joins: beegs (~beegs@2600:8805:d50c:4200::3a89)
[04:18:11] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[04:26:14] *** Quits: MichaelRaskin (~MichaelRa@ipb21b6221.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[04:46:50] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[04:47:10] *** Joins: livoreno (~livoreno@user/notzmv)
[04:53:55] *** Quits: random-nick (~random-ni@87.116.181.229) (Ping timeout: 258 seconds)
[05:09:03] *** Joins: ShawnB (~ShawnB@96.44.191.150)
[05:19:24] *** Joins: notzmv (~zmv@user/notzmv)
[05:26:53] *** Joins: frgo (~frgo@p200300deef27d700680eb059371c1892.dip0.t-ipconnect.de)
[05:31:06] *** Quits: frgo (~frgo@p200300deef27d700680eb059371c1892.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[05:49:40] *** Joins: frgo (~frgo@p200300deef27d700680eb059371c1892.dip0.t-ipconnect.de)
[05:49:49] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-10-70-54-112-49.dsl.bell.ca) (Remote host closed the connection)
[05:53:55] *** Quits: frgo (~frgo@p200300deef27d700680eb059371c1892.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[05:59:43] *** Joins: mingus_ (~jan-magnu@ti0135a400-2471.bb.online.no)
[05:59:50] *** Quits: mingus (~jan-magnu@ti0135a400-2471.bb.online.no) (Read error: Connection reset by peer)
[06:02:47] *** Quits: engblom_ (~foo@62-121-47-42.static.lounea.fi) (Ping timeout: 268 seconds)
[06:02:56] *** Joins: engblom (~foo@62-121-47-42.static.lounea.fi)
[06:03:22] *** Quits: beegs (~beegs@2600:8805:d50c:4200::3a89) (Quit: WeeChat 3.0.1)
[06:03:24] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Ping timeout: 268 seconds)
[06:04:01] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[06:28:13] *** Quits: mister_m (~user@c-73-209-97-9.hsd1.il.comcast.net) (Ping timeout: 258 seconds)
[06:30:13] *** Quits: bhaible (~bruno@dslb-088-068-034-084.088.068.pools.vodafone-ip.de) (Remote host closed the connection)
[06:30:50] *** Joins: bhaible (~bruno@dslb-088-068-034-084.088.068.pools.vodafone-ip.de)
[06:31:19] *** Quits: cjb (~cjb@user/cjb) ()
[06:41:30] *** Quits: taiju (~taiju@240b:253:ec40:2400:654f:7566:b735:5f06) (Ping timeout: 240 seconds)
[06:44:30] *** Joins: prxq_ (~quassel@x4dbd037b.dyn.telefonica.de)
[06:47:58] *** Quits: prxq (~quassel@x4db6cf8b.dyn.telefonica.de) (Ping timeout: 252 seconds)
[06:50:19] *** Joins: taiju (~taiju@240b:253:ec40:2400:654f:7566:b735:5f06)
[06:55:24] *** Quits: igemnace (~ian@user/igemnace) (Quit: WeeChat 3.2)
[06:55:30] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 240 seconds)
[06:58:01] *** Joins: igemnace (~ian@user/igemnace)
[07:04:45] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 256 seconds)
[07:08:26] *** Joins: lad (~lad@user/lad)
[07:09:10] <lad> How can I load in this project to my SBCL environment? It doesn't contain a ".asd" system file... https://github.com/andersvi/cl-jack
[07:12:02] <Bike> lad: probably cl-jack-load.lisp
[07:17:06] <lad> Bike, hmm. I cloned the project into my ~/common-lisp dir. I'm not able to require or load the file
[07:17:25] <Bike> what do you mean, not able? just do (load "wherever/cl-jack-load.lisp")
[07:22:10] <lad> Bike, okay, I can load it by absolute path.
[07:22:38] <Bike> since there's nothing like a system definition, that's probably the only provided way to do it
[07:34:17] <beach> Good morning everyone!
[07:40:05] *** Quits: Bike (~Glossina@71.69.170.70) (Quit: sleep)
[07:40:24] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 252 seconds)
[07:41:02] *** Joins: derelict (~derelict@user/derelict)
[07:43:29] *** Quits: igemnace (~ian@user/igemnace) (Quit: WeeChat 3.2)
[08:00:48] *** Joins: frgo (~frgo@p200300deef27d700680eb059371c1892.dip0.t-ipconnect.de)
[08:07:28] *** Quits: frgo (~frgo@p200300deef27d700680eb059371c1892.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[08:07:29] *** Quits: jeosol (~jeosol@76-238-186-228.lightspeed.hstntx.sbcglobal.net) (Quit: Ping timeout (120 seconds))
[08:07:38] <Josh_2> Good morning beach
[08:12:18] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[08:13:53] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[08:16:54] *** Joins: frgo (~frgo@p200300deef27d700680eb059371c1892.dip0.t-ipconnect.de)
[08:20:47] *** Quits: Noisytoot (noisytoot@sourcehut/user/noisytoot) (Quit: ZNC 1.8.2 - https://znc.in)
[08:21:06] *** Quits: frgo (~frgo@p200300deef27d700680eb059371c1892.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[08:24:00] *** Joins: Noisytoot (noisytoot@sourcehut/user/noisytoot)
[08:30:59] *** Joins: jeosol (~jeosol@76-238-186-228.lightspeed.hstntx.sbcglobal.net)
[08:40:42] *** Joins: frgo (~frgo@p200300deef27d700680eb059371c1892.dip0.t-ipconnect.de)
[08:45:06] *** Quits: frgo (~frgo@p200300deef27d700680eb059371c1892.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[08:47:40] *** Quits: zephyr (~alandiper@ec2-34-230-252-114.compute-1.amazonaws.com) (Quit: Ping timeout (120 seconds))
[08:50:15] *** Joins: zephyr (~alandiper@ec2-34-230-252-114.compute-1.amazonaws.com)
[08:51:43] *** Joins: lisp123 (~lisp123@5.30.23.247)
[08:56:24] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 272 seconds)
[09:14:30] *** Joins: igemnace (~ian@user/igemnace)
[09:20:45] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 256 seconds)
[09:30:21] *** Joins: torbo (~user@72.15.63.17)
[09:30:37] *** Joins: lisp123 (~lisp123@5.30.23.247)
[09:31:23] *** Quits: torbo (~user@72.15.63.17) (Remote host closed the connection)
[09:38:45] *** Joins: notzmv (~zmv@user/notzmv)
[09:56:40] *** Joins: Retropikzel (~Retropikz@2001:999:202:71f:2024:2d45:1a41:e4aa)
[10:01:09] *** Joins: dsk (~dsk@user/dsk)
[10:24:26] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Ping timeout: 272 seconds)
[10:24:47] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[10:28:04] *** Joins: attila_lendvai (~alendvai@catv-86-101-74-70.catv.broadband.hu)
[10:32:02] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Ping timeout: 272 seconds)
[10:32:45] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[10:34:44] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 268 seconds)
[10:40:33] *** Quits: Lycurgus (~juan@cpe-45-46-140-49.buffalo.res.rr.com) (Quit: Exeunt)
[10:41:30] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Ping timeout: 240 seconds)
[10:41:51] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[10:45:21] *** Quits: Retropikzel (~Retropikz@2001:999:202:71f:2024:2d45:1a41:e4aa) (Quit: Leaving)
[10:47:54] *** Joins: shka (~herr@109.231.62.239)
[10:48:13] *** Joins: varjag (~user@ti0040a400-5479.bb.online.no)
[10:50:17] *** Quits: Alfr (~Alfr@user/alfr) (Ping timeout: 256 seconds)
[10:56:44] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Ping timeout: 272 seconds)
[10:57:51] *** Joins: amb007 (~a_bakic@226.105.204.77.rev.sfr.net)
[11:11:24] *** Quits: White_Flame (~quassel@user/white-flame/x-6930243) (Remote host closed the connection)
[11:12:37] *** Joins: White_Flame (~quassel@user/white-flame/x-6930243)
[11:13:12] *** Quits: varjag (~user@ti0040a400-5479.bb.online.no) (Ping timeout: 272 seconds)
[11:17:10] <susam> Good morning, #commonlisp!
[11:17:37] <beach> Hello susam.
[11:17:47] <susam> Hello beach.
[11:23:44] *** Joins: frgo (~frgo@p200300deef27d700680eb059371c1892.dip0.t-ipconnect.de)
[11:24:33] *** Joins: Cymew (~ante@c-e989225c.023-1144-7570702.bbcust.telenor.se)
[11:24:58] *** Quits: frgo (~frgo@p200300deef27d700680eb059371c1892.dip0.t-ipconnect.de) (Remote host closed the connection)
[11:25:10] *** Joins: frgo (~frgo@p200300deef27d700680eb059371c1892.dip0.t-ipconnect.de)
[11:31:30] *** Quits: taiju (~taiju@240b:253:ec40:2400:654f:7566:b735:5f06) (Ping timeout: 240 seconds)
[11:36:39] *** Joins: taiju (~taiju@240b:253:ec40:2400:654f:7566:b735:5f06)
[11:39:52] *** Quits: amb007 (~a_bakic@226.105.204.77.rev.sfr.net) (Ping timeout: 258 seconds)
[11:39:59] *** Joins: amb007 (~a_bakic@71.198.204.77.rev.sfr.net)
[11:51:01] <kakuhen> Probably off-topic, but does anyone know what it means when you get NIL randomly in your backtraces?
[11:51:17] <kakuhen> here is an example output: https://a.uguu.se/HNkRHOBF.png
[11:51:34] <kakuhen> i understand this is likely implementation-specific, so for reference, this occurs with CCL (doesn't seem to happen in SBCL though)
[11:52:18] *** Quits: amb007 (~a_bakic@71.198.204.77.rev.sfr.net) (Read error: Connection reset by peer)
[11:53:37] *** Joins: amb007 (~a_bakic@71.198.204.77.rev.sfr.net)
[11:55:55] *** Quits: amb007 (~a_bakic@71.198.204.77.rev.sfr.net) (Read error: Connection reset by peer)
[11:56:20] <beach> It probably just means that CCL did not save any information about those particular stack frames.  What is your value of DEBUG?  If it is not 3, you might want to try setting it to 3.
[11:56:45] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[12:03:28] *** Joins: MichaelRaskin (~MichaelRa@ipb21b6221.dynamic.kabel-deutschland.de)
[12:03:28] *** ChanServ sets mode: +o MichaelRaskin
[12:09:22] *** Quits: karlosz (~karlosz@router.cloyne.org) (Quit: karlosz)
[12:18:07] *** Quits: pjb (~pjb@user/pjb) (Remote host closed the connection)
[12:20:22] <kakuhen> I'm not sure what the DEBUG value is. It seems unbound when I try accessing it from the REPL
[12:21:37] <beach> clhs optimize
[12:21:37] <specbot> http://www.lispworks.com/reference/HyperSpec/Body/d_optimi.htm
[12:21:55] <beach> (proclaim '(optimize (debug 3)))
[12:31:16] *** Joins: karlosz (~karlosz@router.cloyne.org)
[12:33:06] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Read error: Connection reset by peer)
[12:33:13] *** Joins: amb007 (~a_bakic@71.198.204.77.rev.sfr.net)
[12:33:13] *** Quits: amb007 (~a_bakic@71.198.204.77.rev.sfr.net) (Read error: Connection reset by peer)
[12:33:31] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[12:34:37] *** Joins: pve (~pve@188-67-246-37.bb.dnainternet.fi)
[12:36:01] *** Joins: terpri (~terpri@user/terpri)
[12:36:01] *** terpri is now known as robin
[12:36:08] *** Joins: hendursaga (~weechat@user/hendursaga)
[12:39:31] *** Quits: hendursa1 (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:43:50] <kakuhen> I just set it to 3 and I'm still getting the nils appearing in some entries
[12:44:32] <kakuhen> I can live with this anyway; there's enough information for me to tell what exactly is going on anyway, and I rarely have to deliver an interrupt like I did in the screenshot
[12:45:05] <beach> It was probably already 3 then, and there is just some information that is not kept by CCL.
[12:45:46] *** Joins: selwyn (~selwyn@user/selwyn)
[12:45:49] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[12:47:04] <lad> I'm writing a function "sum-from-int" that takes an my-INT and list-of-ints and returns a list of INTs where each item is a running sum of my-Int and each int in the list-of-ints... https://pastiebin.com/60dd79b18ca87
[12:47:09] <lad> there has to be a better way....?
[12:48:02] <lad> (sum-from-int 1 '(1 2 3 4 5)) ; (1 2 4 7 11 16)
[12:48:09] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[12:48:10] *** Lord_of_Life_ is now known as Lord_of_Life
[12:49:18] <beach> lad: Pretty sure there is a better way, yes, but I need to first understand what you are doing.  Your description didn't do it for me.
[12:49:24] <beach> Also, you need to work on your code layout.
[12:49:45] <pve> lad: what is "n"?
[12:49:45] <flip214> lad: try a recursive function with an accumulator; or you could use REDUCE.
[12:49:50] <beach> In Common Lisp you never put whitespace before a closing parethesis.
[12:49:58] <flip214> also, LOOP (and ITERATE) provide SUM primitives.
[12:50:54] <pve> lad: also, what is "res"?
[12:51:16] <beach> Oh, right lots of bad stuff in there.
[12:52:06] <lad> n is the number that gets added to each int in list-of-ints. res is the resul where the sum gets appended to
[12:52:09] <beach> lad: Using SETF to assign to an undefined variable is undefined behavior in Common Lisp.  And N and RES are both undefined.
[12:52:17] <pve> lad: you probably want to use "let" instead
[12:52:58] <beach> lad: And using APPEND will give you a quadratic algorithm where a linear one is possible.
[12:53:18] <lad> yes, let easily replaces setf here, thx
[12:53:54] <lad> i thought maybe use reduce or loop, but this way was the easiest for me to think about
[12:54:20] <lad> i have trouble even describing what its supposed to do :D
[12:54:30] <moon-child> lad: this is called a 'scan'
[12:56:50] <moon-child> lad: rather than taking an extra 'initial' number and a list, you should just take one list.  The caller can easily cons on an additional number if it wants to
[13:04:26] <beach> Someone should show an improved version without REDUCE or LOOP.
[13:04:43] <beach> I am in the middle of some debugging, so I prefer not to be distracted.
[13:06:27] *** Quits: prxq_ (~quassel@x4dbd037b.dyn.telefonica.de) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[13:07:30] *** Quits: robin (~terpri@user/terpri) (Ping timeout: 240 seconds)
[13:07:35] <sm2n> (defun running-sum (list) (loop for x in list for accum = x then (+ x accum) collect accum))
[13:07:52] <sm2n> not very nice to read on one line though
[13:08:56] <flip214> lad: https://paste.debian.net/hidden/27fced4d/
[13:09:00] *** Joins: robin (~terpri@user/terpri)
[13:09:25] <sm2n> https://plaster.tymoon.eu/view/2532#2532
[13:09:51] <moon-child> implementation using april: +/
[13:10:09] <sm2n> heh
[13:10:44] <sm2n> moon-child, incidentally, is there an implementation of those array based trees in cl yet?
[13:10:45] <lad> much appreciated!
[13:11:00] <sm2n> I might try my hand at writing something if not
[13:11:11] <sm2n> I still find it fascinating
[13:11:16] *** Joins: pjb (~pjb@user/pjb)
[13:11:29] <moon-child> sm2n: not as far as I know.  I think it falls to you!
[13:11:54] <moon-child> (also take a look at petalisp if you haven't seen it)
[13:12:58] <sm2n> I see
[13:13:08] <sm2n> I have looked at petalisp but I didn't really understand it
[13:14:00] <lad> flip214, yours actually returns what i'm expecting. sm2n not sure why but using loop isn't returning correctly, seems to be off by one in the results
[13:15:30] <lad> sm2n, i guess i have to add in the initial number to the list actually, cool
[13:16:30] <sm2n> lad, is this what you want? https://plaster.tymoon.eu/view/2533#2533
[13:16:52] <sm2n> I think it's more elegant to just add the initial to the start of the list though, yeah
[13:16:57] <lad> btw i'm using this generate musical midi notes according to major or minor scales steps :)
[13:17:43] <sm2n> sounds like fun
[13:19:18] <lad> sm2n, i think you're right about the earlier is more elegant since i need to cons the start onto the list with the new one u pasted. thx again
[13:22:22] <sm2n> oh wow, I think I was looking at the wrong thing last time
[13:22:46] <sm2n> the petalisp getting started examples are actually quite understandable to me
[13:28:45] *** Joins: lotuseater (~user@p200300e7870b0900249b68ce60a870ab.dip0.t-ipconnect.de)
[13:49:21] *** Quits: taiju (~taiju@240b:253:ec40:2400:654f:7566:b735:5f06) (Ping timeout: 256 seconds)
[13:49:30] *** Quits: robin (~terpri@user/terpri) (Ping timeout: 240 seconds)
[13:50:17] *** Joins: taiju (~taiju@240b:253:ec40:2400:654f:7566:b735:5f06)
[13:57:36] *** Joins: robin (~terpri@user/terpri)
[14:02:36] *** Joins: patience_ (~patience@159.196.168.42)
[14:02:51] *** Joins: lisp123 (~lisp123@5.30.23.247)
[14:05:52] *** Quits: karlosz (~karlosz@router.cloyne.org) (Quit: karlosz)
[14:07:27] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 258 seconds)
[14:27:17] *** Joins: McParen (~McParen@user/mcparen)
[14:30:30] *** Joins: [deleted] (~livoreno@user/notzmv)
[14:32:25] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 256 seconds)
[14:32:52] *** Joins: derelict (~derelict@user/derelict)
[14:43:30] *** Quits: robin (~terpri@user/terpri) (Ping timeout: 240 seconds)
[14:54:09] *** Quits: frgo (~frgo@p200300deef27d700680eb059371c1892.dip0.t-ipconnect.de) (Remote host closed the connection)
[14:54:38] *** Joins: frgo (~frgo@p200300deef27d700680eb059371c1892.dip0.t-ipconnect.de)
[14:56:18] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-10-70-54-112-49.dsl.bell.ca)
[15:08:21] *** Joins: terpri (~terpri@user/terpri)
[15:09:21] *** Quits: terpri (~terpri@user/terpri) (Remote host closed the connection)
[15:09:39] *** Joins: terpri (~robin@user/terpri)
[15:09:57] *** terpri is now known as robin
[15:12:18] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[15:25:01] *** Parts: McParen (~McParen@user/mcparen) ()
[15:34:05] *** Quits: Cymew (~ante@c-e989225c.023-1144-7570702.bbcust.telenor.se) (Ping timeout: 258 seconds)
[15:36:18] *** Joins: treflip (~user@95.79.32.99)
[15:38:13] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Quit: Leaving...)
[15:38:43] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Ping timeout: 256 seconds)
[15:39:01] *** Joins: amb007 (~a_bakic@87.198.204.77.rev.sfr.net)
[15:40:25] *** Joins: random-nick (~random-ni@87.116.165.220)
[15:43:28] *** Joins: frgo_ (~frgo@p200300deef27d700807e2e49d7db93f9.dip0.t-ipconnect.de)
[15:46:08] *** Quits: frgo_ (~frgo@p200300deef27d700807e2e49d7db93f9.dip0.t-ipconnect.de) (Remote host closed the connection)
[15:46:39] *** Joins: frgo_ (~frgo@p200300deef27d700b5e927f5aa5af249.dip0.t-ipconnect.de)
[15:46:42] *** Quits: frgo (~frgo@p200300deef27d700680eb059371c1892.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[15:47:38] *** Quits: [deleted] (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[15:47:57] *** Joins: livoreno (~livoreno@user/notzmv)
[15:50:52] *** Quits: amb007 (~a_bakic@87.198.204.77.rev.sfr.net) (Ping timeout: 265 seconds)
[15:51:12] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[16:36:14] *** Joins: Alfr (~Alfr@user/alfr)
[16:44:12] *** Quits: treflip (~user@95.79.32.99) (Read error: Connection reset by peer)
[16:44:26] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-10-70-54-112-49.dsl.bell.ca) (Ping timeout: 272 seconds)
[16:53:47] *** Joins: Cymew (~ante@host-217-213-69-246.mobileonline.telia.com)
[17:01:19] *** Joins: Bike (~Glossina@71.69.170.70)
[17:01:19] *** ChanServ sets mode: +o Bike
[17:07:06] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Read error: Connection reset by peer)
[17:08:26] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[17:13:25] *** Joins: notzmv (~zmv@user/notzmv)
[17:17:26] *** Quits: patience_ (~patience@159.196.168.42) (Remote host closed the connection)
[17:19:23] <shka> hmmm, are there any situations when the abort restart is not available?
[17:21:04] <Bike> implementations usually bind an abort restart in all threads, but they don't technically have to
[17:21:35] <Bike> the standard does "encourage" abort to always be available, though
[17:22:11] <shka> Bike: thanks!
[17:22:55] <shka> threads make sense, since there is no threads in the CL standard
[17:24:00] <Bike> in clasp for a while we didn't bind abort restarts in threads, but it turned out slime (specifically SLDB) expects at least one restart to be available in all contexts
[17:29:06] *** Quits: Cymew (~ante@host-217-213-69-246.mobileonline.telia.com) (Ping timeout: 240 seconds)
[17:42:00] <skempf> lad: here is a solution using mapcar instead of recursion: https://dpaste.com/DS5U543MZ
[17:43:12] <beach> skempf: (setf adder (+ adder item)) is better expressed as (incf adder item)
[17:43:54] <beach> skempf: And you are not using the variable you introduced with a LET.
[17:45:12] <beach> You probably want to use ITER-SUM rather than ADDER in the INCF too.
[17:46:30] *** Quits: lad (~lad@user/lad) (Ping timeout: 252 seconds)
[17:49:01] *** Joins: cage (~cage@dynamic-adsl-78-15-22-223.clienti.tiscali.it)
[17:50:46] <skempf> Yikes. I should finish my coffee first.
[17:53:18] <skempf> Fixed https://dpaste.com/DQR8P7WF4
[17:54:32] <skempf> And yes, I certainly meant to use the variable I introduced in the LET. I don't normally use map functions, so this was my morning learning exercise today.
[17:55:06] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[17:59:24] *** Joins: treflip (~user@95.79.32.99)
[18:03:47] *** Quits: pjb (~pjb@user/pjb) (Ping timeout: 256 seconds)
[18:04:33] *** Joins: lisp123 (~lisp123@5.30.23.247)
[18:06:52] *** Quits: Alfr (~Alfr@user/alfr) (Read error: Connection reset by peer)
[18:07:14] *** Joins: Alfr (~Alfr@user/alfr)
[18:09:06] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 265 seconds)
[18:09:51] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[18:29:41] <Josh_2> Afternoon all
[18:32:06] <beach> Hello Josh_2.
[18:32:11] <beach> skempf: Much better. :)
[18:33:22] <Josh_2> My love for generics keeps increasing
[18:34:00] <beach> "generics" as in "generic functions"?
[18:34:04] <Josh_2> Yes
[18:34:05] <beach> Great!
[18:54:45] <jcowan> For future investigation, I suspect those NIL frames represent pure C functions
[18:55:15] <beach> Makes sense.
[18:59:19] *** Joins: selwyn_ (~selwyn@user/selwyn)
[19:02:24] *** Quits: selwyn (~selwyn@user/selwyn) (Ping timeout: 252 seconds)
[19:06:58] <jackdaniel> #<my stack is so pure that you can't look at it - your c function>
[19:09:29] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-10-70-54-112-49.dsl.bell.ca)
[19:24:35] <shka> funny that you can't C the stack :P
[19:27:01] *** Quits: selwyn_ (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[19:30:38] <jackdaniel> that was funny :)
[19:34:48] *** Quits: Alfr (~Alfr@user/alfr) (Ping timeout: 272 seconds)
[19:37:47] *** Joins: cuz (~user@38.140.58.234)
[19:47:08] *** Quits: igemnace (~ian@user/igemnace) (Quit: WeeChat 3.2)
[19:47:51] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 258 seconds)
[19:48:56] *** Joins: aeth (~aeth@user/aeth)
[19:49:38] *** Quits: cuz (~user@38.140.58.234) (Remote host closed the connection)
[19:50:47] *** Joins: cuz (~user@38.140.58.234)
[19:51:46] *** Joins: selwyn (~selwyn@user/selwyn)
[19:53:20] *** Joins: yitzi (~yitzi@173-27-106-188.client.mchsi.com)
[19:57:49] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Read error: Connection reset by peer)
[19:58:01] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[20:01:24] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Read error: Connection reset by peer)
[20:01:40] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[20:02:23] *** Quits: cuz (~user@38.140.58.234) (Read error: Connection reset by peer)
[20:02:46] *** Joins: cuz (~user@38.140.58.234)
[20:05:22] *** Joins: varjag (~user@ti0040a400-5479.bb.online.no)
[20:05:23] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Read error: Connection reset by peer)
[20:05:27] *** Joins: lisp123 (~lisp123@5.30.23.247)
[20:05:51] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[20:10:16] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 272 seconds)
[20:10:58] *** Quits: varjag (~user@ti0040a400-5479.bb.online.no) (Ping timeout: 252 seconds)
[20:13:24] *** Joins: dlowe (~dlowe@user/dlowe)
[20:26:43] *** Joins: lottaquestions_ (~nick@104.221.94.126)
[20:26:54] *** Quits: lottaquestions_ (~nick@104.221.94.126) (Read error: Connection reset by peer)
[20:27:33] *** Joins: lottaquestions_ (~nick@104.221.94.126)
[20:28:51] *** Quits: lottaquestions (~nick@2607:fa49:5040:5c00:1462:27c1:87fd:2d04) (Ping timeout: 256 seconds)
[20:32:09] *** Quits: yitzi (~yitzi@173-27-106-188.client.mchsi.com) (Remote host closed the connection)
[20:32:30] *** Joins: yitzi (~yitzi@173-27-106-188.client.mchsi.com)
[20:34:29] *** Quits: selwyn (~selwyn@user/selwyn) (Remote host closed the connection)
[20:34:54] *** Joins: selwyn (~selwyn@user/selwyn)
[20:42:30] *** Quits: lottaquestions_ (~nick@104.221.94.126) (Quit: Konversation terminated!)
[20:42:53] *** Joins: lottaquestions_ (~nick@2607:fa49:5040:5c00:6cb4:29c0:7f63:f1ac)
[20:47:47] *** Joins: pjb (~pjb@user/pjb)
[20:53:22] *** Quits: treflip (~user@95.79.32.99) (Remote host closed the connection)
[20:53:23] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Read error: Connection reset by peer)
[20:54:15] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[20:56:07] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Read error: Connection reset by peer)
[20:56:23] *** Joins: amb007 (~a_bakic@71.198.204.77.rev.sfr.net)
[20:56:23] *** Quits: amb007 (~a_bakic@71.198.204.77.rev.sfr.net) (Read error: Connection reset by peer)
[20:56:41] *** Joins: amb007 (~a_bakic@71.198.204.77.rev.sfr.net)
[21:04:07] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-10-70-54-112-49.dsl.bell.ca) (Remote host closed the connection)
[21:11:09] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[21:20:38] *** Quits: amb007 (~a_bakic@71.198.204.77.rev.sfr.net) (Ping timeout: 252 seconds)
[21:21:43] *** Joins: amb007 (~a_bakic@247.246.204.77.rev.sfr.net)
[21:44:42] *** Joins: lad (~lad@user/lad)
[21:47:20] *** Quits: yitzi (~yitzi@173-27-106-188.client.mchsi.com) (Remote host closed the connection)
[21:54:18] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-4-120.prtc.net)
[21:55:22] *** Joins: yitzi (~yitzi@173-27-106-188.client.mchsi.com)
[22:02:19] *** Joins: lisp123 (~lisp123@5.30.23.247)
[22:09:04] *** Joins: selwyn (~selwyn@user/selwyn)
[22:11:26] *** Joins: frgo (~frgo@p200300deef27d700807e2e49d7db93f9.dip0.t-ipconnect.de)
[22:12:01] <lisp123> I have had a revelation
[22:12:41] <jcowan> lisp123: Tell us, O enlightened one.
[22:13:20] <lisp123> I was going alot of web dev with a lisp backend and started getting RSI from having to keep refreshing my browser screen
[22:13:43] <lisp123> Then I realised, I should just create my UIs in Emacs, so I can do everything via a keyboard
[22:14:03] <shka> nah
[22:14:07] <shka> learn some mcclim
[22:14:09] <lisp123> Then I realised, Emacs is a lightweight environment in itself
[22:14:16] <lisp123> Thus, Emacs + CL = Lisp Machine in 2021
[22:14:35] <shka> emacs is very limiting
[22:14:58] <lisp123> For GUI related items yes, but for anything text based I think it has it all?
[22:15:23] *** Quits: frgo_ (~frgo@p200300deef27d700b5e927f5aa5af249.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[22:15:29] <shka> hmmm, for text it is better but still not ideal
[22:16:30] <lisp123> i tried mcclim but it didn't load on me (MacOS/SBCL)
[22:16:33] <shka> honestly, the best possible IDE for CL would be written in CL itself
[22:16:46] <lisp123> a CL-based Emacs would be great
[22:16:47] <lisp123> BUT
[22:17:17] <lisp123> Emacs has (require 'cl-lib) --> You can do most of your Emacs programming in elisp and the rest via a slime:eval
[22:17:44] <lisp123> programming in common lisp* (via cl-lib)
[22:17:49] <shka> yes, emacs is the best we have (in the open source world at least)
[22:18:33] <jcowan> shka: I hear a lot of statements like that ("we need to rewrite Pandoc in Scheme!") but I never really understand why.
[22:19:44] <elf_fortrez> so we should run lynx on emacs?
[22:20:11] <shka> jcowan: pandoc in scheme? nah, there i https://docs.racket-lang.org/pollen/
[22:20:14] <elf_fortrez> or i*
[22:20:35] <lisp123> elf_fortrez: erc
[22:20:39] <shka> it is not pandoc, but honestly what it does does really well
[22:20:55] <lisp123> sorry i meant eww
[22:21:05] <elf_fortrez> too imperative?
[22:21:25] <jcowan> Sure.  The idea here was to be able to upload arbitrary formats and then download them in a uniform format from a Scheme web server.
[22:22:38] *** Joins: akoana (~ah@user/akoana)
[22:22:40] <shka> hmmm, not interested, sorry
[22:23:57] *** Quits: amb007 (~a_bakic@247.246.204.77.rev.sfr.net) (Read error: Connection reset by peer)
[22:24:25] <elf_fortrez> has anyone here dabbled with gpt3?
[22:24:29] <sm2n> elf_fortrez, https://www.gnu.org/software/emacs/manual/html_mono/eww.html#Overview
[22:24:55] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[22:25:01] *** Quits: pjb (~pjb@user/pjb) (Ping timeout: 256 seconds)
[22:25:49] <lisp123> elf_fortrez: its on my list, have you?
[22:26:06] <elf_fortrez> no, i saw it, and i am interested
[22:26:29] <elf_fortrez> i should finish the article
[22:26:33] <elf_fortrez> 2 articles
[22:26:40] <lisp123> which ones?
[22:26:40] <elf_fortrez> written by a woman
[22:26:41] <elf_fortrez> math
[22:26:51] <elf_fortrez> i will send you the link
[22:27:37] *** Quits: frgo (~frgo@p200300deef27d700807e2e49d7db93f9.dip0.t-ipconnect.de) (Remote host closed the connection)
[22:28:08] *** Joins: frgo (~frgo@p200300deef27d7009ccb6508d64ac6ab.dip0.t-ipconnect.de)
[22:28:15] <elf_fortrez> I don't know if the researcher wants the heat
[22:29:09] <elf_fortrez> i think i should go read books
[22:29:44] <elf_fortrez> i will make more sense afterwards
[22:29:53] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-4-120.prtc.net) (Quit: Client closed)
[22:31:44] <lad> lisp123, Have you used something like a watcher script that refreshes the browser page for you automatically?
[22:34:03] <lad> lisp123,  maybe something like this from emacs: https://www.emacswiki.org/emacs/SaveAndReloadBrowser
[22:34:08] <lisp123> lad: no, I haven't. Perhaps I should look into that. The bigger issue was I needed to keep resetting the cache, which was another keystroke + having to use the mouse to navigate the UI on the webpage
[22:46:18] *** Quits: robin (~robin@user/terpri) (Ping timeout: 240 seconds)
[23:01:03] *** Joins: karlosz (~karlosz@router.cloyne.org)
[23:04:36] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[23:07:27] <Josh_2> Did you succeed in turning your emacs into your website test bench?
[23:09:11] <lisp123> Josh_2: not sure if you were referring to me, but I'm developing Emacs apps now, not using Emacs as a webviewer (these apps are for myself - if I need to publish for others, then probably have to jump back into fron-end dev)
[23:10:42] <Josh_2> Oops yes I forgot to tag
[23:35:47] *** Quits: lad (~lad@user/lad) (Remote host closed the connection)
[23:36:33] *** Joins: lad (~lad@user/lad)
[23:38:00] *** Quits: etiago (~etiago@user/etiago) (Ping timeout: 250 seconds)
[23:41:09] *** Joins: IAmRasputin (~ryan.gann@50-207-73-195-static.hfc.comcastbusiness.net)
[23:43:05] *** Joins: attila_lendvai_ (~alendvai@catv-86-101-74-70.catv.broadband.hu)
[23:45:56] *** Quits: attila_lendvai (~alendvai@catv-86-101-74-70.catv.broadband.hu) (Ping timeout: 268 seconds)
[23:56:11] *** Joins: selwyn (~selwyn@user/selwyn)
[23:59:46] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 252 seconds)
