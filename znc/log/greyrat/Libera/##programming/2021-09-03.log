[00:00:14] *** Quits: repne_scasb (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net) (Ping timeout: 244 seconds)
[00:04:13] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[00:06:13] *** Quits: QuartzXtal (sid507167@id-507167.tooting.irccloud.com) ()
[00:06:27] *** Joins: QuartzXtal (sid507167@id-507167.lymington.irccloud.com)
[00:06:56] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (Quit: Konversation terminated!)
[00:12:29] *** Joins: Cashlin (~hp@user/cashlin)
[00:12:48] *** Joins: gitgood (~gitgood@host-78-145-140-210.as13285.net)
[00:14:11] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 244 seconds)
[00:15:02] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Quit: Leaving.)
[00:18:37] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 252 seconds)
[00:19:09] *** Joins: Enitin (~Enitin@82.102.22.84)
[00:19:43] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[00:22:25] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[00:23:04] *** Joins: Shanzem (~Shanzem@86.31.109.147)
[00:25:26] *** Joins: nvmd (~nvmd@user/nvmd)
[00:25:38] *** Quits: nvmd (~nvmd@user/nvmd) (Client Quit)
[00:25:50] *** Joins: nvmd (~nvmd@user/nvmd)
[00:27:37] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 244 seconds)
[00:29:12] *** Joins: Enitin (~Enitin@82.102.22.86)
[00:33:10] *** Joins: swagneko (~bit@user/nekobit)
[00:35:10] *** Joins: repne_scasb (~inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net)
[00:38:09] <arahael> Usually the fee, I think, is however much they charge for a "replacement".
[00:38:23] <arahael> (Irrespective of the actual replacement cost).
[00:39:31] *** Quits: mei (~mei@user/mei) (Ping timeout: 252 seconds)
[00:43:53] *** Joins: ugly (~ugly@2804:431:d77e:3a94:245f:a975:3ab9:6447)
[00:44:29] *** Joins: conquistador (~conquista@cpc161059-seve28-2-0-cust130.13-3.cable.virginm.net)
[00:47:24] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[00:50:46] *** Joins: crazyfrog (~crazyfrog@2001:4bc9:a42:d289:6b0e:a488:31:210c)
[00:50:51] *** Quits: independent__ (~independe@95.144.68.39) (Remote host closed the connection)
[00:51:04] *** Quits: silasfox (~sbv@p200300cec704065cdb41befe26522709.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[00:51:10] *** Joins: independent__ (~independe@95.144.68.39)
[00:52:04] *** Quits: ugly (~ugly@2804:431:d77e:3a94:245f:a975:3ab9:6447) (Quit: WeeChat 2.8)
[00:52:20] *** Joins: ugly (~ugly@2804:431:d77e:3a94:245f:a975:3ab9:6447)
[00:52:51] *** Quits: independent__ (~independe@95.144.68.39) (Remote host closed the connection)
[00:53:00] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Ping timeout: 276 seconds)
[00:53:09] *** Joins: independent__ (~independe@95.144.68.39)
[00:54:43] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:54:43] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[00:55:26] *** Quits: ugly (~ugly@2804:431:d77e:3a94:245f:a975:3ab9:6447) (Client Quit)
[00:55:42] *** Joins: ugly (~ugly@2804:431:d77e:3a94:245f:a975:3ab9:6447)
[00:56:22] *** Quits: ugly (~ugly@2804:431:d77e:3a94:245f:a975:3ab9:6447) (Client Quit)
[00:56:37] *** Joins: ugly (~ugly@2804:431:d77e:3a94:245f:a975:3ab9:6447)
[01:03:36] *** Quits: magla (~gelignite@55d4a93f.access.ecotel.net) (Quit: Stay safe!)
[01:03:49] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[01:04:40] *** Joins: nekodesu (~bit@user/nekobit)
[01:05:40] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:06:31] *** Quits: nekodesu (~bit@user/nekobit) (Client Quit)
[01:07:18] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[01:07:34] *** Quits: swagneko (~bit@user/nekobit) (Ping timeout: 252 seconds)
[01:07:37] *** Joins: flynn (~mcbloch@user/flynn)
[01:10:21] *** Quits: independent__ (~independe@95.144.68.39) (Remote host closed the connection)
[01:10:25] *** Joins: quippy (~quippy@47-220-146-143.gtwncmkt04.res.dyn.suddenlink.net)
[01:10:44] *** Joins: independent__ (~independe@95.144.68.39)
[01:11:18] *** Quits: ugly (~ugly@2804:431:d77e:3a94:245f:a975:3ab9:6447) (Quit: WeeChat 2.8)
[01:11:56] *** Joins: silasfox (~sbv@2001-4dd6-4b95-0-383d-e94d-aa82-1e8f.ipv6dyn.netcologne.de)
[01:12:21] *** Quits: independent__ (~independe@95.144.68.39) (Remote host closed the connection)
[01:12:40] *** Joins: independent__ (~independe@95.144.68.39)
[01:19:55] *** Joins: Guest71 (~Guest71@adsl-72-50-5-53.prtc.net)
[01:21:42] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[01:22:10] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[01:22:45] *** Quits: langstme (~langstme@user/langstme) (Read error: Connection reset by peer)
[01:23:17] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[01:23:32] *** Joins: Crescendo (~Crescendo@user/crescendo)
[01:24:24] *** Lord_of_Life_ is now known as Lord_of_Life
[01:24:29] *** Quits: Akuli (~Akuli@82-203-165-163.bb.dnainternet.fi) (Quit: Leaving)
[01:26:23] <diophantoz> surcharge how absurd
[01:26:54] *** Joins: vysn (~vysn@user/vysn)
[01:27:29] <diophantoz> it's like when the landlord says you broke something and deduct from your deposit
[01:28:24] *** Joins: immibis (~hexchat@62.156.144.218)
[01:28:59] <webNET4> what happens when you anger the sealord?
[01:29:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[01:31:45] *** Joins: zaher (~zaher@37.48.189.83)
[01:32:15] *** Joins: ugly (~ugly@2804:431:d77e:3a94:245f:a975:3ab9:6447)
[01:32:23] <diophantoz> the firelord or the icelord comes
[01:32:26] *** Joins: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com)
[01:34:21] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[01:35:42] *** Quits: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com) (Client Quit)
[01:35:52] *** Joins: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com)
[01:38:48] *** Joins: zaher_ (~zaher@178.171.155.189)
[01:40:10] *** Quits: scabby (~scabby@user/scabootssca) (Ping timeout: 240 seconds)
[01:42:31] *** Joins: pavonia (~user@user/siracusa)
[01:42:32] *** Quits: zaher (~zaher@37.48.189.83) (Ping timeout: 244 seconds)
[01:45:32] *** Quits: zaher_ (~zaher@178.171.155.189) (Quit: Leaving)
[01:52:59] *** Quits: quippy (~quippy@47-220-146-143.gtwncmkt04.res.dyn.suddenlink.net) (Quit: Leaving)
[01:55:53] <Caffeinated> webNET4: Aquaman gets on his little pink horsey
[01:59:14] *** Quits: aniruddha (uid340443@id-340443.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[01:59:22] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[01:59:34] *** Joins: flynn (~mcbloch@user/flynn)
[02:00:49] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:3861:b031:6b93:c510)
[02:02:55] <beaky> we've all been fooled the correct way to uniformly sample a range of integers is not to use modulo and not to use rejection sampling https://github.com/apple/swift/pull/39143
[02:03:27] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:3861:b031:6b93:c510) (Ping timeout: 245 seconds)
[02:04:23] <Caffeinated> who is "we"
[02:04:39] <diophantoz> congruence calculations nice
[02:04:41] <Caffeinated> seems more like, after two weeks, you came to the wrong conclusion
[02:05:10] <beaky> all of us writing code generating random numbers
[02:05:18] <beaky> (in a range)
[02:05:22] <diophantoz> i can generate a completely random number by thought
[02:05:35] <diophantoz> most often it's 7
[02:05:41] <Caffeinated> lol
[02:05:49] <beaky> nice i like 7
[02:05:58] <arahael> i prefer 4.
[02:06:10] <arahael> easier to cite xkcd that way.
[02:06:43] *** Quits: codemin (~codemin@69.167.14.52) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:06:49] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 244 seconds)
[02:06:57] <beaky> i will now implement this algorithm in rust
[02:07:20] <Caffeinated> lol
[02:07:35] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:08:13] *** Joins: mrig (~mrig@user/mrig)
[02:09:00] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Quit: AmigaOS PPC 4.1 +E +U1 // AmIRC 68K)
[02:09:10] *** Quits: AsenMx (~AsenMx@78.90.248.234) (Ping timeout: 252 seconds)
[02:09:27] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[02:09:45] <beaky> its already rewritten in rust https://github.com/rust-random/rand/issues/1172
[02:09:47] <bayaz> Title: Look into this alleged optimal algorithm for bounded random integers · Issue #1172 · rust-random/rand 
[02:10:37] <pyzozord> I didn't even know that the modulo thing was biased, let alone about that rejection sampling
[02:10:58] <Juliu> 7 is way more random than 4
[02:11:00] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:11:13] <Juliu> So all random numbers should be 7 ... or 17
[02:11:58] <Caffeinated> 7 or 11 works
[02:12:04] <Caffeinated> but not two 1's
[02:12:19] <Caffeinated> oh wait..that's something else :P
[02:12:35] <Juliu> We should define a set of random numbers, so everyone can use that set and doesnt pick a wrong number by accident
[02:12:56] *** Quits: ugly (~ugly@2804:431:d77e:3a94:245f:a975:3ab9:6447) (Quit: WeeChat 2.8)
[02:13:59] <pyzozord> haha, the officially approved random numbers, by the random consortium
[02:14:31] <pyzozord> if you do not use officially approved random number, your random number has a random chance of not being random
[02:15:13] *** Quits: silasfox (~sbv@2001-4dd6-4b95-0-383d-e94d-aa82-1e8f.ipv6dyn.netcologne.de) (Ping timeout: 252 seconds)
[02:15:20] <Juliu> Imagine someone picked 100 by accident. That would be catastrohic
[02:15:43] *** Joins: Macuser (~Macuser@2607:b400:24:0:908d:9f83:f1b2:d0cd)
[02:16:38] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[02:17:00] <Juliu> Maybe we should make certain numbers illegal to protect people from them
[02:17:01] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[02:17:21] <Juliu> I mean, no one will miss a 50, right?
[02:18:50] <arahael> Juliu: pyzozord isn't joking, btw. there really is the random consortium.
[02:19:15] <Juliu> Does it consist of random members?
[02:20:14] <arahael> in a mannar of speaking.  there is also random.org
[02:20:28] <Juliu> Can anyone define what random is?
[02:21:29] <Juliu> Just to make this clear, I was also not joking about making the number 50 illegal. I mean, ask yourself this: Do you really need the 50? When was the last time you needed it?
[02:21:54] <Caffeinated> Juliu: Do you do this ... for a living?
[02:22:11] <Caffeinated> like how Mark Twain went around the world making jokes etc
[02:22:17] <karstensrage> Caffeinated, you mean you can get paid for being an arrogant idiot on irc?
[02:22:22] <Caffeinated> haha
[02:22:22] <Juliu> Caffeinated, I am not a paid Russian troll, if you mean that
[02:22:23] * karstensrage quits his job
[02:22:49] <arahael> karstensrage: you quit your job before you got the confirmation? gutsy.  man.  thats gutsy :)
[02:22:57] <pyzozord> a traveling jokester problem
[02:22:58] <karstensrage> well i got excited
[02:23:07] *** Quits: Guest71 (~Guest71@adsl-72-50-5-53.prtc.net) (Ping timeout: 256 seconds)
[02:23:09] <karstensrage> i have to work on the arrogant part i think though
[02:23:12] * arahael smiles.
[02:23:14] <Juliu> pyzozord, the travelling jokesman problem is hard
[02:23:26] <pyzozord> JK-hard?
[02:23:33] <Juliu> lol
[02:23:35] <karstensrage> lol
[02:23:44] <pyzozord> sorry, couldn't resist it :P
[02:24:16] <Juliu> Here, let me show you:   https://i.redd.it/8m37dlp14mpy.jpg
[02:24:16] <bayaz> Type: image/jpeg Size: 43.2 kB 
[02:25:19] <oldlaptop> beaky: What are you doing, reloading swift's pull requests all day or something?!
[02:25:25] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 244 seconds)
[02:25:26] *** Joins: swagneko (~bit@user/nekobit)
[02:25:31] *** Joins: nekodesu (~bit@user/nekobit)
[02:25:46] *** Joins: Crescendo (~Crescendo@user/crescendo)
[02:26:47] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 245 seconds)
[02:28:14] <pyzozord> When a PR starts with "Everyone knows that generating an unbiased random integer in a range 0 ..< upperBound, where upperBound is not a power of two, requires rejection sampling." I already know it is beyond my understanding.
[02:28:27] <pyzozord> Never learned how to generate random numbers
[02:28:42] <oldlaptop> Neither did anyone else (not with software, anyway)
[02:29:55] *** Parts: BrkThruCopyWritr (~ttt@107-190-27-93.cpe.teksavvy.com) ()
[02:30:17] <Juliu> I know 2 general methods: Additive or multiplicative congruence
[02:31:56] <oldlaptop> so did these people: https://upload.wikimedia.org/wikipedia/commons/3/38/Randu.png
[02:31:56] <bayaz> Type: image/png Size: 18.5 kB 
[02:32:10] <oldlaptop> (that's a particularly shocking example, to be fair)
[02:32:38] <pyzozord> x,y,z?
[02:32:53] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[02:33:04] <oldlaptop> Yes, that is what happens if you plot consecutive values from what was once a common PRNG as three-dimensional points
[02:33:37] <pyzozord> how do they interpret it? [x,y,z,x,y,z,x,y,z,...]?
[02:33:43] <oldlaptop> good linear-congruential generators don't start doing that for mere three-dimensional plots, but they all do it
[02:33:47] <oldlaptop> Yes
[02:33:51] <edgar-rft> just simply assume that nobody has a clue and replace the random generator with a constant integer :-)
[02:34:00] <oldlaptop> https://en.wikipedia.org/wiki/Spectral_test
[02:34:01] <bayaz> Title: Spectral test - Wikipedia 
[02:34:09] *** Quits: Brumaire (~quassel@81-64-14-121.rev.numericable.fr) (Quit: ran away)
[02:34:35] <pyzozord> How did Knuth come up with that test
[02:34:53] <oldlaptop> excellent question
[02:34:57] <oldlaptop> elegantly simple, isn't it
[02:35:02] <pyzozord> I guess this goes into raw statistics
[02:35:07] <pyzozord> yeah quite clever
[02:35:20] <piou> pyzozord: it's a bit condescending to just assume everyone knows that, but it's a commonly known fact. The idea behind it is easily understood. When generating a number it's generated between a minimum and maximum value. In practice those are INT_MIN and INT_MAX but let's imagine that they're [0, 16]. If you want a number between 0 and 9 (included) you might be tempted to just do rand()%11, but
[02:35:26] <piou> if you do that numbers 0 to 6 have twice the chance to appear compared to numbers 7 to 9. That's because 0%10=0 and 10%0 so if rand() is 0 or 10 both values count as a 0 but only 7 will count as a 7. So using a modulo to limit random numbers to a range will introduce bias. What would be better would be to reject any value that isn't between 0 and 10 and try again until you hit one.
[02:36:26] <pyzozord> piou: ooh cool, that's a cool intuition, thanks for that
[02:36:33] <pyzozord> I'll keep that in mind now
[02:36:40] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 252 seconds)
[02:36:42] <piou> (and there's a clever thing you can do which involves both a modulus and rejection in practice to limit the number of tries, but that's the idea)
[02:36:57] <oldlaptop> You can of course still use modulus if your range happens to fit
[02:37:28] <pyzozord> see, my general lack of mathematical experience shows even in simple things like this, I'm not able to think through even simple problems like this
[02:38:07] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.2)
[02:38:19] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[02:38:38] *** Joins: webNET4 (~0x100@32.211.211.39)
[02:38:53] <piou> Drawing a picture helps. I think people sometimes think badly of pictures because they feel you should be good enough at math not to need them, but no matter how high-level the math a good picture is generally the best medium for intuition.
[02:39:26] <oldlaptop> an example of that clever thing you can do: https://cvsweb.openbsd.org/src/lib/libc/crypt/arc4random_uniform.c?rev=1.3&content-type=text/x-cvsweb-markup
[02:39:29] <bayaz> Title: src/lib/libc/crypt/arc4random_uniform.c - view - 1.3 
[02:39:46] <oldlaptop> or at least one clever thing you can do
[02:40:47] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Excess Flood)
[02:40:51] *** Quits: jokoon (~eio@2a01:e0a:542:e160:c0cc:c5be:7650:abff) (Quit: Leaving)
[02:40:57] <edgar-rft> pyzozord: when a PR starts with "Everyone knows..." and you *don't* know it than this PR is already is proven to be wrong.
[02:40:59] <oldlaptop> still, I suppose it's not an algorithm by the Knuthian definition (which IIRC requires guaranteed termination)
[02:41:21] <oldlaptop> edgar-rft: or to be a bit silly
[02:41:34] <Juliu> piou, I agree. Also pictures are used way to rarely since they can quickly give you an insight what someone is talking about. But they can mislead and make someone thing the general case is the case in the picture
[02:41:37] *** Quits: independent__ (~independe@95.144.68.39) (Ping timeout: 252 seconds)
[02:41:39] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[02:42:25] * oldlaptop does not usually do this: https://img.gifglobe.com/grabs/montypython/AndNowForSomethingCompletelyDifferent/gif/L27tdNMYTGTv.gif
[02:42:40] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 252 seconds)
[02:42:40] <Juliu> But I think giving several examples works better in learning than giving a formula for the general case. The human brain is pretty good in understanding the pattern that all examples share
[02:42:52] <piou> oldlaptop: I was thinking of something akin to      int r,max; max=INT_MAX-(INT_MAX % upper_bound); do { r = rand(); } while (r > max);
[02:44:14] <pyzozord> yeah there is something about that. A formula is like a program, you have to "execute" it to see how it works
[02:44:27] <oldlaptop> I'd say arc4random_uniform is something "akin" to that :)
[02:44:35] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[02:44:51] <piou> oldlaptop: it is, just much less readable IMHO
[02:44:56] <Juliu> pyzozord, that is why I hate people asking questions like "Here my code. Does it work?"
[02:45:12] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Remote host closed the connection)
[02:45:17] <oldlaptop> which is probably why that file has such a high comment-to-code ratio :P
[02:45:22] <oldlaptop> (even excluding the license)
[02:45:27] <cis> "I have only proved it correct, not tried it."
[02:45:31] <Juliu> Code or a formula does not replace someone or some picture telling you what this is all about
[02:45:40] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[02:45:56] <piou> like, I like openbsd folks (that's a lie, I don't like them much) but why the for(;;)/if/break really?
[02:46:08] <pyzozord> oldlaptop: I noticed that as well, it seemed almost like literate programming
[02:46:23] <Juliu> piou, can you show me/us what you mean?
[02:46:25] <oldlaptop> ask djm@, I guess?
[02:46:28] <pyzozord> I mean to comment:code ration was reall high
[02:47:53] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Remote host closed the connection)
[02:48:43] <oldlaptop> the best theory-of-mind I can come up with is that it stresses the infinite-unless-this-happens nature of the loop
[02:48:59] <oldlaptop> in case the comment needed some help with that
[02:49:45] <Juliu> I often use an infinity-loop and a if+break instead of a while or do-while loop
[02:50:05] <oldlaptop> I mean, I would probably have done `while ((r = arc4random()) >= min);`
[02:50:24] <Juliu> It has advantages, for example you can execute some code before the first if
[02:50:29] <oldlaptop> it's worth it just to piss off compilers that don't like assignments in conditions
[02:51:39] <Juliu> while(true) { r = arc4random(); if(r < min) break; }
[02:52:06] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[02:52:29] <oldlaptop> for(;;) seems to be the usual infinite-loop idiom in the openbsd C library, for whatever reason
[02:52:53] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[02:52:58] <Juliu> I still want a   loop { }
[02:53:27] *** Joins: TCZ (~tcz@91.150.165.88)
[02:54:06] <Juliu> oldlaptop, does it matter if the use while(true) or for(;;) all the time? Not really
[02:54:10] *** Joins: dev0 (~dev0@user/deepspace-link)
[02:54:41] <oldlaptop> Well, it matters if you use while(true) because you either need C99 stdbool.h or you need to `#define true 1` or so yourself.
[02:54:55] *** Quits: Shanzem (~Shanzem@86.31.109.147) (Quit: sudo Shanzem -lol -updoot -karma -gold >/dev/lies)
[02:55:02] <webNET4> i prefer while(1 != 0)
[02:55:09] <Juliu> I dont need anything since I use C++11 or higher
[02:55:24] <oldlaptop> for(;;) is the shortest version, I think
[02:55:27] <Juliu> webNET4, ?
[02:55:37] <oldlaptop> Well, the code under discussion is C, not C++.
[02:55:47] <Juliu> oldlaptop, yes, it's just harder to read for newbies
[02:56:39] <webNET4> /s (i thought it would be an obvious one)
[02:57:46] <Juliu> #define loop for(;;)
[02:57:58] <webNET4> anything is possible in C-world!
[02:58:55] *** Joins: zaher (~zaher@37.48.189.83)
[03:02:44] <mawk> for (;;) is the canonical infinite loop
[03:02:48] <mawk> while (1) is infinitely ugly
[03:02:50] *** Joins: independent__ (~independe@95.144.68.39)
[03:03:27] <webNET4> have you met our lord and savior the preprocessor?
[03:03:39] <mawk> don't do #define loop Juliu why are you doing this
[03:04:07] <mawk> a: stuff; goto a;
[03:04:10] <mawk> ^ old school way
[03:05:40] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[03:05:52] *** Joins: webNET4 (~0x100@32.211.211.39)
[03:05:54] *** Quits: Macuser (~Macuser@2607:b400:24:0:908d:9f83:f1b2:d0cd) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:06:01] *** Quits: independent__ (~independe@95.144.68.39) (Remote host closed the connection)
[03:06:25] *** Joins: independent__ (~independe@95.144.68.39)
[03:07:27] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:12:12] <Juliu> mawk, it was a joke
[03:12:40] <mawk> you can't joke about C Juliu it's too serious of a topic
[03:12:50] *** Joins: codemin (~codemin@69.167.19.112)
[03:13:04] <Juliu> GoTo is not that good. Use ComeFrom instead.     https://en.wikipedia.org/wiki/COMEFROM
[03:13:05] <bayaz> Title: COMEFROM - Wikipedia 
[03:15:39] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:22:17] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[03:24:31] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[03:25:09] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:25:21] *** Quits: Samian (~Sami@163.114.130.5) (Ping timeout: 244 seconds)
[03:25:49] *** Quits: Inari (~Pinkishu@p4fe7ef06.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[03:26:14] *** Quits: dudek (~dudek@185.150.236.103) (Quit: Leaving)
[03:26:37] *** Quits: crazyfrog (~crazyfrog@2001:4bc9:a42:d289:6b0e:a488:31:210c) (Changing host)
[03:26:37] *** Joins: crazyfrog (~crazyfrog@user/crazyfrog)
[03:27:14] *** Joins: hexfive (~eric@50.35.83.177)
[03:30:23] *** Joins: hexingb (~hexingb@2409:8900:704f:a790:f886:899b:1284:41c4)
[03:30:42] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Quit: Leaving)
[03:30:45] *** Quits: hexfive (~eric@50.35.83.177) (Client Quit)
[03:31:07] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[03:32:46] *** Quits: pizdets_ (~pizdets@183.182.114.199) (Ping timeout: 252 seconds)
[03:33:31] *** Quits: independent__ (~independe@95.144.68.39) (Remote host closed the connection)
[03:33:49] *** Joins: independent__ (~independe@95.144.68.39)
[03:34:02] *** Joins: pizdets (~pizdets@183.182.111.16)
[03:34:45] *** Quits: dev0 (~dev0@user/deepspace-link) ()
[03:34:50] *** Joins: gggp (~textual@60.10.194.45)
[03:34:55] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[03:35:10] *** Quits: dont_thread_on_m (~dont_thre@23.94.134.204) (Quit: WeeChat 2.3)
[03:36:11] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[03:36:23] *** Joins: flynn (~mcbloch@user/flynn)
[03:37:47] *** Quits: abirkill (snoopy@d172-218-198-90.bchsia.telus.net) (Quit: Let us prepare to grapple with the ineffable itself, and see if we may not eff it after all.)
[03:38:01] *** Joins: abirkill (snoopy@d172-218-198-90.bchsia.telus.net)
[03:39:10] <beaky> i think we can implement comefrom in rust with macros
[03:40:28] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Ping timeout: 252 seconds)
[03:41:17] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 245 seconds)
[03:41:27] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[03:43:36] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Read error: Connection reset by peer)
[03:43:50] <[itchyjunk]> so (in java), i don't understand why main () {} can't return anything?
[03:43:53] <[itchyjunk]> why must it be void?
[03:44:17] <[itchyjunk]> is it because there is no frame outside of it?
[03:44:26] <[itchyjunk]> the program just terminates or somesuch?
[03:45:12] <davros> thats just the way its defined
[03:45:28] <[itchyjunk]> hmm but i define it right? in each file?
[03:45:35] <davros> its the starting point so yeah.. they made it that the program doesn't produce a value on exit
[03:45:44] <[itchyjunk]> since i write `public static void main(String[] args) {}`
[03:45:45] <davros> i think only in the main applicaton class
[03:45:52] <davros> i hasten to add, i dont know because i dont use java
[03:46:08] <davros> i''m not a fan of it
[03:46:11] *** Joins: Macuser (~Macuser@216.30.159.201)
[03:46:16] <[itchyjunk]> can main method in some other language return stuff ?
[03:46:24] <davros> but several languages have this main entry point idea
[03:46:26] <[itchyjunk]> not sure if other language has main like java
[03:46:32] <davros> c does
[03:46:34] <davros> rust does
[03:46:41] <davros> c has an entry point
[03:46:41] <[itchyjunk]> can you return in those?
[03:46:45] <[itchyjunk]> or it's void in those too?
[03:46:47] <davros> c has an int return
[03:46:59] <[itchyjunk]> oh main can return an int?
[03:47:02] <[itchyjunk]> interesting!
[03:47:04] <davros> rust , you call something else to exit with the programs return value to the os
[03:47:10] <davros> in c, the int is returned to the os
[03:47:24] <davros> in java, i guess its like rust, they'd need to give you a seperate function to exit with a return value
[03:47:30] <[itchyjunk]> oh so the os can tell if it exited with a error or not or something?
[03:47:33] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[03:47:34] <davros> its just a choice, there's nothing gospel about it
[03:47:41] <[itchyjunk]> ah
[03:47:46] <rtypo> yes, a non-zero return signals an error
[03:47:53] <davros> yeah some OS's expect a return value
[03:47:58] <[itchyjunk]> oh i would have guessed 1 meant no error
[03:47:59] <davros> note that thats an OS detail aswell
[03:48:01] <[itchyjunk]> and 0 meant error
[03:48:02] <[itchyjunk]> heh
[03:48:14] <davros> so you could even ask "on what OS"
[03:48:15] <[itchyjunk]> oh some OS can't take returns?
[03:48:30] <[itchyjunk]> damn everything gets so complicated 
[03:48:31] <davros> there's no gospel truth that an OS must take a return value from a program
[03:48:40] <davros> yeah details vary between platforms
[03:48:45] <rtypo> sorry I forgot not everyone uses Linux
[03:49:06] <davros> yeha when we say "the OS", its kind of safe to assume people usually mean "unix-like OS"
[03:49:20] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 252 seconds)
[03:49:27] <beaky> what are some non unix-like oses
[03:49:34] <davros> but its also possible for a programming language to be used on non unix-like OS's
[03:49:35] <[itchyjunk]> windows?
[03:49:44] <beaky> like windows qnx minix sel4 and... *crickets*
[03:49:53] <[itchyjunk]> never heard of those other ones
[03:50:02] <davros> to be fair .. i can't think of an actively used non unixlike os other than windows
[03:50:02] <[itchyjunk]> is there an os called UNIX ?
[03:50:16] <beaky> yes there was unix 
[03:50:17] <davros> historical: Amiga OS
[03:50:24] <[itchyjunk]> was?
[03:50:25] *** Joins: crazyfrog_ (~crazyfrog@user/crazyfrog)
[03:50:28] <[itchyjunk]> oh
[03:50:34] <davros> but only retro enthusiasts use that now
[03:50:38] <[itchyjunk]> so no more UNIX just unix-like
[03:50:44] <beaky> yes exactly
[03:51:07] <davros> so yeah when someone says "the OS", it's a safe assumption that they mean "unix-like OS"
[03:51:28] *** Quits: crazyfrog (~crazyfrog@user/crazyfrog) (Ping timeout: 252 seconds)
[03:51:31] <davros> just bear in mind that its not strictly required and there might be some obscure microcontroller or somethign that has a differnet thing
[03:51:54] <davros> gooigle are making fucksia which is not a unix style os
[03:52:09] <davros> however its spelled i dont know
[03:52:12] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-d4cb-19ad-9d54-b5c3.res6.spectrum.com) (Ping timeout: 245 seconds)
[03:53:33] <beaky> yes i dont even know how to pronounce fuchsia
[03:53:36] <beaky> few-shuh
[03:53:50] *** Quits: humanface (~humanface@20014C4E1C473D00A4E67DD8C63A3FAF.dsl.pool.telekom.hu) (Quit: Client closed)
[03:54:50] <beaky> couldnt they pick an easier name
[03:55:08] <beaky> like 'go' 
[03:55:35] <pavonia> magenta
[03:56:59] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[03:57:40] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-fc65-cf54-436c-2f33.res6.spectrum.com)
[03:58:00] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[03:58:47] <[itchyjunk]> fuck sia
[03:59:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[04:01:27] <davros> beaky, if it's pronounced "few-shuh" , why did they call it "FUCK- OS"
[04:03:06] <beaky> i guess ti comes from the name fuchs 
[04:03:13] <beaky> the name Fuchs sounds very familiar someohw
[04:03:26] <arahael> There's someone that goes by that nick.
[04:03:51] <rtypo> fuchs means fox in german
[04:04:08] <rtypo> (btw, iirc)
[04:04:09] <beaky> nice i like foxes
[04:04:13] <pavonia> beaky: Former (?) staff member
[04:05:10] *** Joins: zaher_ (~zaher@37.48.182.171)
[04:05:37] <arahael> rtypo: Good to know! :)
[04:05:38] <beaky> the german word sounds more like 'fox' yet the flower is called 'fewshuh'
[04:06:18] *** Quits: independent__ (~independe@95.144.68.39) (Ping timeout: 256 seconds)
[04:06:52] *** Quits: zaher (~zaher@37.48.189.83) (Ping timeout: 252 seconds)
[04:06:54] *** Joins: independent__ (~independe@95.144.68.39)
[04:07:03] <beaky> like the vowel is different
[04:08:09] <pavonia> The German pronounciation is more like "fook-sia"
[04:08:10] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Ping timeout: 240 seconds)
[04:08:22] <LjL> so is the italian
[04:08:41] *** Quits: Cashlin (~hp@user/cashlin) (Quit: Konversation terminated!)
[04:12:36] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-fc65-cf54-436c-2f33.res6.spectrum.com) (Quit: jarthur)
[04:13:01] <cis> > Fuchsia (/ˈfjuːʃə/, FEW-shə) is a vivid purplish red color, named after the color of the flower of the fuchsia plant, which was named by a French botanist, Charles Plumier, after the 16th-century German botanist Leonhart Fuchs. The color fuchsia was first introduced as the color of a new aniline dye called fuchsine, patented in 1859 by the French chemist François-Emmanuel Verguin. The dye was renamed magenta later in the same year, to celebrate a
[04:13:01] <cis>  victory of the French army at the Battle of Magenta on June 4, 1859, near the Italian city of that name.
[04:13:24] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[04:13:25] <beaky> nice i wish google went with magenta os then
[04:13:38] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[04:15:38] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-fc65-cf54-436c-2f33.res6.spectrum.com)
[04:19:59] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[04:20:12] *** Joins: flynn (~mcbloch@user/flynn)
[04:24:21] *** Quits: cliluw (~cliluw@47.147.80.149) (Read error: Connection reset by peer)
[04:26:18] *** Quits: Tazy (~Tazmainia@102.39.90.151) (Read error: Connection reset by peer)
[04:26:39] *** Joins: numsima (~numsima@101.175.64.73)
[04:29:18] *** Parts: TCZ (~tcz@91.150.165.88) (...)
[04:32:17] *** Joins: Krail (~Krail@user/alexdelarge)
[04:37:15] *** Joins: dormac (~kukulkan@ip59-131-15-186.ct.co.cr)
[04:38:42] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-fc65-cf54-436c-2f33.res6.spectrum.com) (Quit: jarthur)
[04:38:46] *** Quits: independent__ (~independe@95.144.68.39) (Ping timeout: 252 seconds)
[04:39:42] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Ping timeout: 245 seconds)
[04:41:49] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) (Ping timeout: 244 seconds)
[04:42:52] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[04:45:33] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[04:49:00] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[04:49:17] *** Joins: webNET4 (~0x100@32.211.211.39)
[04:53:41] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 252 seconds)
[04:56:31] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[04:56:44] *** Joins: webNET4 (~0x100@32.211.211.39)
[04:56:48] *** Joins: farmstatejake (~farmstate@user/farmstatejake)
[04:57:32] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[04:57:40] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[04:57:50] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[04:57:54] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:58:02] *** Joins: webNET4 (~0x100@32.211.211.39)
[04:58:34] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Quit: leaving)
[04:59:04] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[04:59:34] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:64af:bfcd:937a:b017) (Read error: Connection reset by peer)
[05:00:55] *** Joins: tcsilver (~tcsilver@pool-96-255-128-204.washdc.fios.verizon.net)
[05:03:07] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[05:04:11] *** Quits: farmstatejake (~farmstate@user/farmstatejake) (Remote host closed the connection)
[05:07:25] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[05:16:49] *** Quits: jaysicks (~jaysicks@91-82-168-11.pool.digikabel.hu) (Remote host closed the connection)
[05:21:14] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[05:22:10] *** Quits: Krail (~Krail@user/alexdelarge) (Quit: Krail)
[05:22:20] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Quit: leaving)
[05:22:53] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[05:25:14] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[05:25:47] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[05:26:05] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Client Quit)
[05:26:27] *** Joins: audiocat (~audio@2603-8081-1801-3bb5-59c8-d7f9-3a37-49c7.res6.spectrum.com)
[05:26:40] *** Quits: conquistador (~conquista@cpc161059-seve28-2-0-cust130.13-3.cable.virginm.net) (Quit: Client closed)
[05:28:13] *** Joins: byanka (~byanka@185.176.110.253)
[05:28:45] *** Joins: jazzy (~jaziz@172.58.35.7)
[05:28:50] *** Quits: humky (~humky@user/humky) (Quit: Leaving)
[05:29:03] *** Joins: farmstatejake (~farmstate@user/farmstatejake)
[05:35:52] *** Joins: Guest40 (~Guest40@pool-96-255-235-36.washdc.fios.verizon.net)
[05:36:10] *** Quits: crazyfrog_ (~crazyfrog@user/crazyfrog) (Ping timeout: 240 seconds)
[05:36:30] *** Quits: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net) (Remote host closed the connection)
[05:37:17] *** Joins: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net)
[05:38:32] *** Quits: gggp (~textual@60.10.194.45) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:38:57] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[05:39:02] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[05:39:37] *** Quits: peteyboy1 (~peteyboy1@95.169.235.10) (Ping timeout: 245 seconds)
[05:40:36] *** Joins: crazyfrog (~crazyfrog@user/crazyfrog)
[05:40:38] *** Joins: gggp (~textual@111.63.14.116)
[05:43:34] *** Quits: nekodesu (~bit@user/nekobit) (Quit: uninstall gentoo)
[05:43:37] <[itchyjunk]> gave up on hw
[05:43:39] <[itchyjunk]> feels good man
[05:43:44] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[05:43:52] *** Joins: nekodesu (~bit@user/nekobit)
[05:43:55] *** Joins: flynn (~mcbloch@user/flynn)
[05:45:24] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2)
[05:45:55] *** Quits: nekodesu (~bit@user/nekobit) (Remote host closed the connection)
[05:45:56] *** Quits: swagneko (~bit@user/nekobit) (Remote host closed the connection)
[05:46:11] *** Joins: swagneko (~bit@user/nekobit)
[05:47:25] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Quit: leaving)
[05:48:29] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[05:48:40] *** Quits: xsperry (~as@user/xsperry) (Remote host closed the connection)
[05:48:52] *** Quits: farmstatejake (~farmstate@user/farmstatejake) (Remote host closed the connection)
[05:49:29] *** Joins: farmstatejake (~farmstate@user/farmstatejake)
[05:50:40] *** Joins: frost (~frost@59.71.240.119)
[05:52:15] *** Quits: farmstatejake (~farmstate@user/farmstatejake) (Remote host closed the connection)
[05:52:52] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Client Quit)
[05:53:16] *** Quits: crazyfrog (~crazyfrog@user/crazyfrog) (Remote host closed the connection)
[05:53:31] *** Joins: crazyfrog (~crazyfrog@user/crazyfrog)
[05:53:34] *** Quits: EmOwl- (~EmOwl-@202.150.113.111) (Ping timeout: 252 seconds)
[05:55:00] *** Quits: dormac (~kukulkan@ip59-131-15-186.ct.co.cr) (Quit: WeeChat 2.8)
[05:55:52] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:56:22] *** Quits: dsrt^ (~dsrt@wsip-98-188-244-188.mc.at.cox.net) (Remote host closed the connection)
[05:57:30] *** Joins: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net)
[05:57:58] *** Quits: crazyfrog (~crazyfrog@user/crazyfrog) (Ping timeout: 252 seconds)
[06:02:40] *** Quits: xff0x (~xff0x@2001:1a81:5329:9c00:9b27:ac34:a98:1a7c) (Ping timeout: 240 seconds)
[06:04:29] *** Joins: xff0x (~xff0x@2001:1a81:5362:1000:f7a:10f6:c105:a65a)
[06:07:09] *** Joins: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com)
[06:08:37] *** Quits: swagneko (~bit@user/nekobit) (Remote host closed the connection)
[06:14:22] *** Quits: hexingb (~hexingb@2409:8900:704f:a790:f886:899b:1284:41c4) (Ping timeout: 256 seconds)
[06:14:28] *** Quits: anovick (~anovick@2a0d:6fc0:18cb:e900:98e9:2c6f:1a52:52c0) (Ping timeout: 252 seconds)
[06:15:54] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[06:16:03] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Client Quit)
[06:16:13] *** Joins: hexingb (~hexingb@2409:8900:284f:58a4:c0c7:f97b:c417:98fe)
[06:18:07] *** Quits: compscipunk (~compscipu@107-214-234-232.lightspeed.sndgca.sbcglobal.net) (Quit: WeeChat 3.2)
[06:18:54] *** Quits: flynn (~mcbloch@user/flynn) (Ping timeout: 256 seconds)
[06:19:51] <smallville7123> in android, how do i get dlopen(NULL, RTLD_LAZY); to work, as dlsym(symbol_table, name); returns 0x0 even though the symbol exists
[06:21:37] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 252 seconds)
[06:21:52] *** Joins: zaher__ (~zaher@130.0.243.158)
[06:21:55] *** Quits: Quietwalker (~X@cpe-70-113-121-167.austin.res.rr.com) (Ping timeout: 250 seconds)
[06:22:00] *** Joins: brabrax (~brabrax@user/brabrax)
[06:22:47] *** Joins: lunarkitty (uid501895@user/pyra)
[06:23:41] <InPhase> smallville7123: Is symbol_table null?
[06:23:44] <smallville7123> no
[06:23:54] <smallville7123> im using android ndk
[06:23:54] <InPhase> smallville7123: And symbol_table is your result from dlopen?
[06:23:58] <smallville7123> yes
[06:24:26] <smallville7123> and i have        extern "C" __attribute__ ((visibility("default")))
[06:24:41] *** Joins: zaher (~zaher@37.48.182.171)
[06:24:55] *** Quits: zaher_ (~zaher@37.48.182.171) (Ping timeout: 252 seconds)
[06:25:35] <InPhase> smallville7123: And what does dlerror report for you?
[06:25:57] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Remote host closed the connection)
[06:26:08] *** Joins: cation21 (cation@user/cation)
[06:26:19] *** Joins: flynn (~mcbloch@user/flynn)
[06:26:35] <smallville7123> even this fails       dlsym(dlopen(NULL, RTLD_LAZY), name);      and dlerror reports      undefined symbol: newInstance__imgui
[06:26:42] *** Quits: zaher__ (~zaher@130.0.243.158) (Ping timeout: 244 seconds)
[06:26:54] <InPhase> Well then I would conclude that this is an undefined symbol.
[06:27:01] <InPhase> And that your problem is not dlsym.
[06:27:07] *** Quits: cation (cation@user/cation) (Ping timeout: 252 seconds)
[06:27:13] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 244 seconds)
[06:27:26] *** Joins: Quietwalker (~X@154.3.250.75)
[06:29:07] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[06:29:36] *** cation21 is now known as cation
[06:29:52] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[06:30:30] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:60f9:ffc0:b80a:de8f)
[06:31:29] <smallville7123> ;-;
[06:31:40] *** Quits: Quietwalker (~X@154.3.250.75) (Ping timeout: 240 seconds)
[06:32:56] <InPhase> smallville7123: Perhaps try running the nm command on the program you're trying to work with, and see what you get.
[06:34:00] <InPhase> The -C flag will demangle, if that helps.
[06:34:02] *** Joins: kmh_ (~kmh@p200300df5f102900bc2a0488d71d046a.dip0.t-ipconnect.de)
[06:35:55] *** Quits: kmh (~kmh@p200300df5f110700c85528b7506c64dc.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[06:38:44] *** Quits: gggp (~textual@111.63.14.116) (Ping timeout: 256 seconds)
[06:40:32] <smallville7123> i have         5200: 000000000020dd00   152 FUNC    GLOBAL DEFAULT   14 newInstance__imgui
[06:40:45] *** Quits: Guest40 (~Guest40@pool-96-255-235-36.washdc.fios.verizon.net) (Quit: Client closed)
[06:41:04] *** Joins: gggp (~textual@60.10.194.45)
[06:42:40] *** Quits: hexingb (~hexingb@2409:8900:284f:58a4:c0c7:f97b:c417:98fe) (Ping timeout: 240 seconds)
[06:43:05] *** Joins: hexingb (~hexingb@101.236.65.144)
[06:44:16] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:44:20] *** Joins: akevinhuang2 (~thekevinh@user/thekevinhuang)
[06:46:07] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:46:42] *** Quits: akevinhuang (~thekevinh@user/thekevinhuang) (Ping timeout: 245 seconds)
[06:48:15] <[itchyjunk]> https://assets-global.website-files.com/5f3c19f18169b62a0d0bf387/60d33be9e145cb9e6c28fa8f_2xb2f2VxehbkWOhOVqOghOYg4ifSVtTDD4XTatQRAUeVQJZidqxyydLvkwASiplALthYScZlW13PNFsd66-DV719GoSyzFQ-d6VsdoDNn44IAXGtu8xQV4W1mmhp9SBmd9A0dO2L.png
[06:48:15] <bayaz> Type: image/png Size: 250.5 kB 
[06:48:18] *** Joins: pandakekok9 (~job@wikimedia-commons/pandakekok9)
[06:50:37] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[06:50:52] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[06:50:57] *** Joins: Izem (~Izem@bras-base-london1483w-grc-30-74-12-157-86.dsl.bell.ca)
[06:51:12] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[06:52:39] <Izem> I understand using procedures or functions to create programs, but not objects. What role is it supposed to play? For some reason it seems to be [used] like a module.
[06:52:55] <Caffeinated> ohai remby o/
[06:53:58] <leduyquang753> You can learn about object oriented programming in general.
[06:59:17] *** Quits: gitgood (~gitgood@host-78-145-140-210.as13285.net) (Ping timeout: 245 seconds)
[07:01:24] *** Quits: hexingb (~hexingb@101.236.65.144) (Ping timeout: 256 seconds)
[07:01:45] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[07:01:45] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Client Quit)
[07:05:09] *** Quits: cation (cation@user/cation) (Remote host closed the connection)
[07:05:51] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:06:30] *** Quits: Caffeinated (~Caffeine@user/alexdelarge) (Ping timeout: 256 seconds)
[07:08:02] *** Quits: gggp (~textual@60.10.194.45) (Ping timeout: 244 seconds)
[07:08:15] *** Joins: cation (cation@user/cation)
[07:10:34] *** Joins: hexingb (~hexingb@103.37.140.36)
[07:11:30] *** Joins: Quietwalker (~X@154.3.250.75)
[07:12:49] *** Joins: Caffeinated (~Caffeine@user/alexdelarge)
[07:13:59] *** Joins: gggp (~textual@111.63.14.116)
[07:15:28] *** Joins: arcatech (~arcatech@user/arcatech)
[07:17:54] *** Joins: codeminster (~codemin@31.6.60.219)
[07:18:23] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[07:22:04] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[07:22:13] *** Joins: DeepComa (~PhoenixCo@user/alien-fx-fiend/x-2328408)
[07:24:12] *** Quits: codeminster (~codemin@31.6.60.219) (Quit: -a- IRC for Android 2.1.59)
[07:24:36] *** Joins: ^-^hi (~nikw@user/-hi/x-1729478)
[07:28:55] *** Quits: DeepComa (~PhoenixCo@user/alien-fx-fiend/x-2328408) (Quit: .oO (bbl tc folks~!))
[07:29:11] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[07:30:32] *** Joins: Samian (~Sami@166.170.47.25)
[07:32:13] *** Quits: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[07:34:36] *** Quits: gggp (~textual@111.63.14.116) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:35:19] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[07:35:25] *** Quits: Samian (~Sami@166.170.47.25) (Ping timeout: 244 seconds)
[07:35:38] *** Joins: flynn (~mcbloch@user/flynn)
[07:37:44] *** Joins: foozle (~foozle@2001-b011-c001-16ef-3000-2890-f155-1c1d.dynamic-ip6.hinet.net)
[07:41:17] *** Quits: CinderellaMan (~GodMode@user/h4x0r) (Remote host closed the connection)
[07:42:38] <beaky> nice i like object oriented programming
[07:43:12] *** Joins: CinderellaMu (~GodMode@user/h4x0r)
[07:43:50] <beaky> does rust have safe circular buffers
[07:44:07] *** CinderellaMu is now known as CinderellaMan
[07:44:09] <beaky> or must i use unsafe rust to use circular buffers
[07:44:43] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Ping timeout: 244 seconds)
[07:45:12] *** CinderellaMan is now known as TheArchitekt
[07:45:15] <poprocks> just created a new git branch in my app called 'moar-threads'. wish me luck
[07:45:27] *** TheArchitekt is now known as TheArchiteckt
[07:45:59] *** Joins: Shanzem (~Shanzem@86.31.109.147)
[07:46:12] *** TheArchiteckt is now known as Architect
[07:48:21] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[07:48:52] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 245 seconds)
[07:50:29] *** Quits: Quietwalker (~X@154.3.250.75) (Read error: Connection reset by peer)
[07:50:49] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[07:51:23] <beaky> nice i like threads
[07:51:33] <beaky> are you using rust
[07:51:47] <poprocks> no ma'am
[07:52:00] <poprocks> C
[07:52:39] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[07:55:30] *** Joins: JanC (~janc@user/janc)
[07:57:21] <homura> i am learning to code
[07:58:15] *** Joins: aniruddha (uid340443@id-340443.charlton.irccloud.com)
[07:58:41] <poprocks> nice
[08:00:42] *** Joins: alefir (~alefir@191.96.106.96)
[08:01:48] *** Joins: soapsudsxx (~soapsudsx@141.193.188.154)
[08:03:29] <beaky> nice
[08:03:36] <beaky> wish i knew how to code
[08:04:18] <alefir> not that hard to learn
[08:04:36] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[08:04:48] *** Joins: webNET4 (~0x100@32.211.211.39)
[08:05:38] <InPhase> smallville7123: Well...  Then I don't know the issue.  Maybe it's something specific to the android system you are using.  Does the dlopen library definitely work with executables targetting that platform?
[08:08:11] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[08:08:27] *** Joins: BUSY (~BUSY@user/busy)
[08:09:25] <Izem> beaky: if you are using rust then programming with functions might not be a bad idea :P
[08:09:45] <beaky> yes i like rust
[08:09:57] <beaky> rust is my favorite programming language
[08:09:58] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:1df4:6ff0:9b2d:6f2e)
[08:10:54] <arahael> Izem: But he only needs the MOV intrinsic.
[08:11:01] <beaky> what is the mov intrinsic
[08:11:04] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 252 seconds)
[08:11:36] <arahael> beaky: I'm referring to the movfuscator.  https://github.com/xoreaxeaxeax/movfuscator
[08:11:38] <bayaz> Title: GitHub - xoreaxeaxeax/movfuscator: The single instruction C compiler 
[08:12:05] <beaky> nice i like mov it is my favorite instruction
[08:12:07] <Izem> arahael: that's a dark path ...
[08:12:11] <webNET4> lol nooooooooooooooooo
[08:12:28] <webNET4> JUST mov to build a compiler???
[08:12:29] <Izem> programming will now loose all meaning
[08:12:36] <smallvil_> welp it turns out that java loads libraries with RTLD_LOCAL
[08:13:42] <webNET4> one instruction, but how many tree codes
[08:15:28] *** Quits: jazzy (~jaziz@172.58.35.7) (Read error: Connection reset by peer)
[08:15:46] *** Joins: jazzy (~jaziz@172.58.35.7)
[08:17:36] <smallvil_> movfuscator does not work with modern C
[08:18:02] <smallvil_> also it hasnt been updated in ages
[08:18:17] <webNET4> they use K and R syntax?
[08:20:38] <smallvil_> "LCC is a C89 compiler. If you try to compile C99 code, you will get errors. Don't use C99 features like bool, for (int ...), etc. Don't declare variables in the middle of blocks."
[08:20:44] <smallvil_> basically that
[08:20:58] *** Quits: hexingb (~hexingb@103.37.140.36) (Ping timeout: 252 seconds)
[08:21:05] <webNET4> nice
[08:21:10] *** Joins: hexingb (~hexingb@2409:8900:284f:82e4:8a3:b108:c60:390)
[08:21:20] *** Joins: xavie (~xavie@176-139-252-198.abo.bbox.fr)
[08:21:23] <webNET4> /* and no // comments */
[08:22:39] <smallvil_> "The inspiration for the compiler is the paper "mov is Turing-complete", by Stephen Dolan."      LMFAO
[08:23:57] <smallvil_> who knew that "mov", an instruction existing in almost every ISA is Turing-complete o.o lmao
[08:24:24] <Izem> almost every ISA?
[08:24:44] <smallvil_> dome ISA's might not implement mov
[08:24:49] <smallvil_> some*
[08:25:01] <smallvil_> eg very ancient ISA's
[08:25:02] <Izem> it's pretty big with intel I know that
[08:25:07] <glguy> It's not really the move functionality but the various addressing modes that Intel's mov supported
[08:25:45] <glguy> So it'd depend heavily on the addressing modes supported by each ISA if the same circumstances applied.
[08:26:29] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:39:01] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[08:39:29] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[08:40:32] *** Quits: Neverloads (NeverLoad@freakshells.net) (Quit: FREAKSHELLS - https://www.freakshells.net)
[08:41:04] <PlanckWalk> Most ISAs have at least one indirect addressing mode for some sort of "move" instruction, so most of them could probably support arbitrary computation given some theoretical extension of their address space
[08:41:22] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 245 seconds)
[08:42:19] <PlanckWalk> (Or access to memory-mapped I/O for external storage)
[08:43:38] *** Quits: Shanzem (~Shanzem@86.31.109.147) (Quit: sudo Shanzem -lol -updoot -karma -gold >/dev/lies)
[08:44:49] *** Joins: Neverloads (NeverLoad@freakshells.net)
[08:47:10] *** Joins: Quietwalker (~X@cpe-70-113-121-167.austin.res.rr.com)
[08:47:53] *** Joins: droid3 (~fffd@024-177-015-135.res.spectrum.com)
[08:48:35] <droid3> curious i know how to build many different ALU for addition, multiplication, division , and subtraction operations on integers.
[08:49:19] <droid3> I know how to achieve negative number integer arithmetic using ones/twos complement representations
[08:49:40] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[08:49:57] <droid3> But i am curious now on floating point circuitry. Aka for FPU they use to be coprocessors for this standard  IEEE 754
[08:50:44] <droid3> The issue is how is the circuitry adding/subtracting floating point numbers when the exponents are different values?
[08:51:16] <droid3> Like if the exponents where the same it could just default to using regular integer ALU circuits.
[08:51:58] <droid3> But for when the exponents are different how is the hardware circuits built to do arithmetic when that occurs.
[08:53:24] <droid3> Usually the formats of Binary32,64,128,256 formats use a signed bit at the MSB and then a piece for the exponent then the rest for the base.
[08:53:52] <droid3> base => should be significand
[08:54:53] <droid3> Anyway i was curious on how the circuitary of FPU are done now there part of the cpu ALU unit or some internal FPU inside the cpu instead of an outside coprocessor chip back in the day.
[08:55:24] *** Quits: juliaEnv (~juliaEnv@ip-86-49-255-181.net.upcbroadband.cz) (Quit: Going offline, see ya! (www.adiirc.com))
[08:55:41] <droid3> multiplication and division seems more simply then add or subtraction to do physically in circuitry for the floating point stuff.
[08:56:41] <droid3> As you just add exponents , check the MSB's for negative or positive signs, and then multiply/divide the significand as you would for a regular ALU for integers.
[08:56:43] *** Quits: LiftLeft (~LiftLeft@172.83.47.138) (Ping timeout: 252 seconds)
[08:57:25] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[08:57:36] *** Joins: flynn (~mcbloch@user/flynn)
[08:57:46] <droid3> But when it comes to addition or subtraction when the exponents are different then its kind of harder to see how the physical circuitry is designed for these cases.
[08:57:53] <InPhase> droid3: Add and subtract is easy.  You can bitshift by the difference of the exponents.
[08:57:57] <droid3> Anybody on want to discuss a little tonight
[08:59:23] <InPhase> droid3: Actual implementations might be more clever, but the most trivial way to see a solution is to take the largest exponent, put that mantissa on top, then shift the smaller exponent's mantissa to the right by the difference in exponents, and then do the addition and subtraction as if they are integer values.
[08:59:31] <droid3> Ya but how is that done in FPU do they physical create a circuit to do this check and do the bitshifting 
[09:00:40] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[09:00:50] <InPhase> droid3: Consider that floating point addition and subtraction, at least last time I checked, takes about twice as long for the processor than integer addition or subtraction.
[09:01:06] <InPhase> droid3: This is the amount of time you'd expect for shift than add.
[09:01:27] *** Joins: mishugana (~mishugana@user/mishugana)
[09:01:35] <InPhase> droid3: As for "do they do it"?  Find a circuit layout for the processor you really care about if you want to be sure, I guess.  :)
[09:02:46] <beaky> nice so coq has circular buffers https://gitlab.mpi-sws.org/FP/igps/-/blob/master/theories/examples/circ_buffer.v
[09:02:48] <bayaz> Title: theories/examples/circ_buffer.v · master · FP / iGPS 
[09:03:10] <droid3> Yup makes since they use scientific notation for the numbers and then make sure when they add/subtract they have the exponents equal. If not they do the shift and add to make them in that form before normally add/sub 
[09:04:55] <droid3> Curious when one declares a float , double ,...etc are these placing the values into special floating point registers. Or do they hold them in the same rax , eax ,...etc registers for the integer ALU stuff.
[09:08:28] <droid3> Also is there a difference InPhase from how fix point vs floating point calculations are done?
[09:08:44] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[09:10:38] *** Quits: mishugana (~mishugana@user/mishugana) (Quit: leaving)
[09:12:50] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[09:15:52] <droid3> not what i am asking is one could do all this in software and use the same rax , eax ,...etc registers that are normally used for integer operations
[09:16:20] *** Joins: s0berage (~s0berage@135-23-213-77.cpe.pppoe.ca)
[09:17:15] <droid3> But i imagine there is dedicate equivalent registers for the floating point arithmetic now its on a single internal cpu section before in like the 80's it was mostly an add on coprocessor chip.
[09:17:37] *** Quits: zaher (~zaher@37.48.182.171) (Ping timeout: 252 seconds)
[09:17:49] *** Joins: LiftLeft (~LiftLeft@172.83.47.37)
[09:18:09] <InPhase> droid3: Software floating point was how it was originally done.  This was much slower.
[09:19:41] <droid3> ya probably slower than arbitrary precision software libraries like BigDecimal,BigNum ,...etc because it probably lacked the kabsturn algorithm for multiplication.. 
[09:20:26] <droid3> Anyway curious now that its not a coprocessor but built into the cpu with the ALU unit for integer arithmetic.
[09:20:58] <droid3> I am wondering what the equivalent general purpose floating point register a 64 bit computer usually has.
[09:23:08] <droid3> High level code like c/c++ , python , java kind of obscure the registers. And for what i have done with assemblier thru the years it was mostly using rax , eax, ebx , edx ,....etc aka the normally  stuff like these https://wiki.cdot.senecacollege.ca/wiki/X86_64_Register_and_Instruction_Quick_Start
[09:23:10] <bayaz> Title: X86 64 Register and Instruction Quick Start - CDOT Wiki 
[09:24:00] <droid3> is there any documentation on the general purpose x64 registers for floating point arithemtic.
[09:24:49] <droid3> I can use extension avx , ...etc extension instructions to do floating point arithemtic at assembly level
[09:25:28] <droid3> But not so clear on what the register names are and if you can access them with mov commands.
[09:26:03] *** Quits: jess (~jess@libera/staff/jess) ()
[09:26:04] <PlanckWalk> SSE instructions are available on all 64-bit chips
[09:27:48] <droid3> thru these command your talking about
[09:27:49] <droid3> https://docs.oracle.com/cd/E26502_01/html/E28388/eojde.html
[09:27:50] <bayaz> Title: SSE Instructions - x86 Assembly Language Reference Manual 
[09:28:22] <droid3> Ok so then the floating point registers are named xmm0,1,2,3,...etc
[09:28:42] <PlanckWalk> Actually SSE2 technically but yes
[09:29:05] <droid3> Just out of curiosity  how many are there and is there any additional floating point registers one can use ?
[09:29:53] *** Joins: Mija (~Mija@user/mija)
[09:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:30:26] <droid3> or are these xmm registers the only internal cpu registers that work on floating point numbers?
[09:30:41] <InPhase> droid3: So there used to be separate floating point registers and commands for those.  But this has largely been superceded by those SSE xmm registers.  But it's not correct to call the xmm floating point registers, because they can do both, and have routines for converting floats to integers and such.
[09:30:44] <droid3> I mean only register usable thru asm.
[09:30:49] *** Quits: LiftLeft (~LiftLeft@172.83.47.37) (Ping timeout: 252 seconds)
[09:30:54] <PlanckWalk> droid3: In practice there are a crapton of them
[09:31:10] <InPhase> droid3: The old floating point approaches still exist, and can still be used, they're just typically less optimal.
[09:31:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:31:50] <PlanckWalk> x87 interface is still present, XMM, YMM, ZMM, etc
[09:32:07] <droid3> so how do you know what xmms register your using when you issue a asm instruction
[09:32:12] <PlanckWalk> You can rely on XMM0-15 existing, though.
[09:32:35] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[09:32:58] <droid3> is there anyway to dump info or figure out what additional registers you have that work with floating point instructions?
[09:33:22] <PlanckWalk> There are cpuid instructions
[09:33:25] *** Quits: nostalgia (~nostalgia@c-24-13-122-176.hsd1.in.comcast.net) (Remote host closed the connection)
[09:33:46] <droid3> And can you ever access them directly with mov  rax , xmm0 
[09:33:58] <InPhase> droid3: cat /proc/cpuinfo  :)
[09:34:21] <droid3> Or another words is it mostly instructions that operate with xmms registers and memory not between registers
[09:34:24] <InPhase> droid3: model name is important, as you can look things up.  flags is also informative.
[09:34:38] <droid3> and probably not between rax register and xmm0
[09:35:29] <PlanckWalk> Yes, you can move (part of) xmm registers to/from general-purpose 64-bit registers
[09:35:53] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:36:40] <PlanckWalk> You can't just copy 1:1 since xmm registers are 128 bits
[09:36:53] <beaky> so there are circular iterators in rust but are there circular slices
[09:37:35] <InPhase> You know, I used to memorize entire assembly instruction sets to work with them.  The pile of x86-64 features available now really makes this sort of thing unreasonable.
[09:38:51] <droid3> does anything jump out at you from this https://pastebin.com/Tkiph6PN
[09:38:53] <bayaz> Title: fpu : yesfpu_exception : yescpuid level : 13wp : yesflags : fpu vme d - Pastebin.com 
[09:39:10] <droid3> in terms of other fpu registers on this machine?
[09:39:30] <PlanckWalk> avx
[09:40:08] <PlanckWalk> That means it has 16 ymm registers with 256 bits each
[09:41:26] <droid3> so my machine can do better the a double 64 bit floating point number then.
[09:41:33] <PlanckWalk> (As well as xmm, mmx, x87 floating-point registers)
[09:42:17] <droid3> It could possible do 256 quad precision fpu stuff provide the language and compiler supported using it that i was using.
[09:42:30] <PlanckWalk> It doesn't support 256-bit floating point.  Just up to 4x 64-bit floating point.
[09:43:06] <droid3> what does that mean it can do 64 bit only still but 4 computations at the same time
[09:43:18] <PlanckWalk> Yes
[09:43:26] <droid3> Ahhh i see
[09:44:18] <droid3> its still hard to tell from avx , mmx , xmm x87...etc what the names of all these fpu registers are and how to access / use each one.
[09:44:32] <InPhase> droid3: Now you see how numpy gets its vector performance benefits.
[09:44:33] <PlanckWalk> (Technically xmm are the lower 128 bits of the ymm registers)
[09:45:34] <PlanckWalk> avx-512 provides 512-bit zmm registers, which extend the avx 256-bit ymm registers, which extend the sse 64-bit xmm registers.
[09:45:57] <InPhase> droid3: Unlike the rest of Python, aside from skipping a lot of interpreter overhead, it can also take advantage of these sse operations.  (Which every reasonable C and C++ optimizer does as well.)
[09:46:15] <PlanckWalk> (AVX-512 also doubles the number of such registers)
[09:47:05] <droid3> Normally i just declare a float , double ,...etc in my c/c++ , java ,...whatever and it compiles / takes care of it for me. When i go to assemblier i only really worked with these registers rax , rbx, rcx ,..... aka the general purpose etc. And possible when i am designing toyOS i use the special purpose idtr ,gdtr , cr0 ,cr2 ...etc stuff
[09:49:04] <droid3> PlanckWalk "avx-512 provides 512-bit zmm registers, which extend the avx 256-bit ymm registers, which extend the sse 64-bit xmm registers." 
[09:49:38] <PlanckWalk> Err, 128-bit xmm registers
[09:49:56] <droid3> yup but then why are they made to only work with 64bit double precision FP instead of being able to do a huge one number 512 FP computation 
[09:50:16] <PlanckWalk> There's next to no demand for 128-bit floating point computation
[09:50:45] <PlanckWalk> In almost all applications where 64 bits isn't enough, neither is 128 bits.
[09:51:03] <droid3> Well not if your doing ridiculously precision math but then again you always have BigDecimal software libraries for that.
[09:51:29] <beaky> pen and paper the only ide one needs https://noteflakes.com/articles/2021-09-02-how-i-write-code-pen-paper
[09:51:56] <PlanckWalk> So basically there's "hardly care about precision" 32-bit, "care quite a bit" 64-bit, and "need MOAR" arbitrary-precision.
[09:52:00] <droid3> so other then xmm , ymm , zmm is there any more  after zmm extensions? And also are these all the floating point registers on the computer.
[09:52:24] <PlanckWalk> (And even "precision, what's that I need SPEED" 16-bit floating point in some restricted applications)
[09:52:39] <droid3> IEEE x87 came out along time ago so there is probably backward old compatible registers out there where missing?
[09:52:45] <droid3> Talking about.
[09:52:56] <PlanckWalk> droid3: There are also MMX and x87 floating point.
[09:53:17] <droid3> ya what are those registers names 
[09:53:37] <PlanckWalk> Oh hmm, mmx was probably only integer
[09:53:59] <PlanckWalk> Yeah.  I was thinking of AMD's 3DNow!
[09:54:21] <PlanckWalk> Both are obsolete now.
[09:55:19] <Izem> beaky: he may be on to something, but paper is pretty wasteful
[09:55:37] <Izem> I'm using paper right now :D
[09:56:58] <droid3> So MMX is not what was that for anyway.
[09:57:11] <PlanckWalk> I don't think any of the vector instructions support transcendental functions like sine, cosine, log, etc.
[09:57:31] <droid3> And 3dNow wasnt that for 3d computer graphics floating point arithmetic for doing computer graphics
[09:57:34] <PlanckWalk> So sometimes you might still want x87?  I'm not sure, haven't used any of those in assembly.
[09:58:01] *** Quits: soapsudsxx (~soapsudsx@141.193.188.154) (Remote host closed the connection)
[09:58:06] <droid3> what about sse and all its versions  
[09:58:21] <PlanckWalk> All the SSE series work on xmm registers
[09:59:12] <droid3> O so SSE version are just added instruction on to the x86 arch that used xmms not any new floating point registers apart from xxms regs
[09:59:22] <PlanckWalk> Right
[09:59:56] <droid3> so then avx uses xmms ,ymms , zmms ,...etc stuff
[10:00:17] <PlanckWalk> avx extends the xmm registers to 256-bit registers addressed using ymm
[10:00:18] <droid3> what of the stuff i showed you in this https://pastebin.com/Tkiph6PN
[10:00:20] <bayaz> Title: fpu : yesfpu_exception : yescpuid level : 13wp : yesflags : fpu vme d - Pastebin.com 
[10:00:38] <droid3> uses something different like a different fpu registers 
[10:00:44] <PlanckWalk> (Like AX is an extension of the earlier A register, and RAX extends AX)
[10:01:13] <droid3> ya if your going back to ZX80 days 
[10:01:33] <droid3> or if your a little more modern you say AX breaks down into AH and AL 
[10:01:38] <PlanckWalk> Yes
[10:01:51] <droid3> And if your a little more modern you have EAX contains AX 
[10:01:55] <PlanckWalk> There isn't a specific name for the upper half of ymm0
[10:02:00] <droid3> which now RAX contains EAX ...
[10:02:02] <PlanckWalk> The lower half is xmm0
[10:02:02] *** Joins: Shanzem (~Shanzem@86.31.109.147)
[10:02:23] <PlanckWalk> Ah yes, I went back further than I intended :)
[10:02:42] <droid3> Ok so then what was before xmm registers for floating point 
[10:02:58] <PlanckWalk> x87 registers, presented as a "stack'
[10:04:32] <PlanckWalk> Those are 80-bit
[10:05:00] <pikapika> PlanckWalk, is there a name in statistics for the dot product of two series?
[10:05:07] <pikapika> ie x1y1 + x2y2 + x3y3 + ...
[10:05:17] <PlanckWalk> "dot product"
[10:05:30] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[10:05:44] <PlanckWalk> Sometimes "inner product"
[10:05:54] *** Joins: mei (~mei@user/mei)
[10:05:59] <pikapika> PlanckWalk, this is encountered in correlation of two sequences but there is also a (sum xi)(sum yi) term there, so its hard to separate
[10:06:02] <PlanckWalk> (If you're treating them as vectors and you want to be fancy)
[10:06:07] <droid3> st(0) st(1) ... O i see so instructions like fld fsqrt fstp...etc
[10:06:31] <droid3> There basically a stack based thing not a register based thing for x87 by the looks of it.
[10:06:53] <PlanckWalk> Yes.  They're registers in hardware, but the API is via stack
[10:06:53] *** Joins: tccki_ (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795)
[10:07:10] *** Quits: tccki (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795) (Read error: Connection reset by peer)
[10:07:24] <PlanckWalk> I don't know for sure why, I suspect just to reduce opcode space
[10:07:30] <droid3> so you cannt mov eax st(1) or so. you have to pop it off the stack with fpu instruction and put it into memory location then you can move it into eax ...etc
[10:08:20] <pikapika> PlanckWalk, do you have any experience with regressions
[10:08:25] *** tccki_ is now known as tccki
[10:08:32] <PlanckWalk> pikapika: yes, various types
[10:08:40] <droid3> What do you mean API. Not talking about software. I am talking about the fld , fmul ...etc asm low level stuff below API such as c/c++ libraries
[10:08:59] <PlanckWalk> (Also with regressions of bugfixes in code that does regressions)
[10:09:11] <PlanckWalk> droid3: The interface that the hardware presents to the programmer
[10:09:11] <pikapika> PlanckWalk, I meant linear regression in statistics
[10:09:18] <PlanckWalk> pikapika: Yes
[10:09:29] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi)
[10:09:45] <PlanckWalk> PlanckWalk: ISA, if you prefer
[10:10:09] <PlanckWalk> (But in particular, the aspect of the ISA that corresponds to the model of register access)
[10:10:20] <droid3> Ahhh so then this stack where is it located in main memory? Or is it a stack of internal registers on in the cpu that when you use fpu instructions get placed into certain memory locations
[10:10:32] <PlanckWalk> droid3: It's a hardware stack
[10:10:48] <PlanckWalk> It does not correspond to anything in memory
[10:10:59] <PlanckWalk> It's really just a labelling of registers.
[10:11:26] <droid3> Ok so then fstp is like pop off the internal st0 stack into a memory location.
[10:11:32] <PlanckWalk> Right
[10:11:52] <pikapika> PlanckWalk, is there anything closed form for the second unknown or is it best to just let it remain in terms of sums of shit
[10:11:55] <droid3> So fstp was like the way to get the values out of the internal stack and place them in retrievable main memory
[10:12:03] <PlanckWalk> It just means copy the register currently marked as "top" into memory, and change the "top" label.
[10:12:04] <pikapika> if there are two unknowns in a regression
[10:12:40] <pikapika> its just annoying because for everything else I was able to form nice expressions in terms of well known statistical parameters
[10:13:04] <PlanckWalk> pikapika: It's always going to involve sums
[10:13:17] <pikapika> for the first one it came something like -rxy/n * sigmay/sigmax
[10:13:22] <PlanckWalk> (Or sometimes a lot worse, if you're doing nonlinear regression)
[10:13:27] <pikapika> which I feel if I spend some effort I can reduce to just two or three loops
[10:14:03] <PlanckWalk> Oh, you mean finding efficient code to compute the sums?
[10:14:07] <pikapika> yeah
[10:14:10] <PlanckWalk> Or re-use their values?
[10:14:14] <pikapika> for example
[10:14:27] <pikapika> the denominator simplifies to n^2*sigmax^2
[10:14:32] <pikapika> which is computed by just one loop instead of 2
[10:14:41] <pikapika> so I am wondering if similar optimizations could be done for the numerator
[10:15:02] <PlanckWalk> You can compute the various sums incrementally and then compute everything if you like.
[10:15:03] <droid3> curious for computers was there anything before x87 coprocessors. Like 1980 < 
[10:15:06] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[10:15:21] <pikapika> PlanckWalk, oh yeah good point
[10:15:41] <pikapika> I can just do a single loop and compute all thats needed
[10:15:56] <pikapika> I was trying too hard needlessly
[10:15:57] <pikapika> still
[10:16:08] <pikapika> I feel some optimizations might be possible inside the loop body too, I'll have to see
[10:16:09] <PlanckWalk> Yes: Sum x, Sum y, Sum z, Sum xx, Sum xy, etc
[10:16:21] *** Joins: mishugan1 (~mishugana@103.5.134.18)
[10:16:29] <PlanckWalk> (Or whatever your particular regression method uses)
[10:16:40] <pikapika> yeah I get the point
[10:17:10] <PlanckWalk> droid3: FPUs go back almost as far as CPUs
[10:17:38] <PlanckWalk> E.g. to the 1950's
[10:19:28] <droid3> ya but we didnt have the first personal computers or even microprocessor based cpu's before the 1971 when the first 4004 chip was created. And even then i imagine it took into the mid to late 70;s to even begin to have PC that the general public could get at.
[10:20:06] <PlanckWalk> Yes, early personal computers mostly didn't have FPUs
[10:20:50] <droid3> Anyway what was the fpu like before x87 . I would imagine they all be coprocessors aka a dedicate secondary chip not something built into the cpu that was later after x87 
[10:21:28] <PlanckWalk> Both approaches have been used
[10:21:47] <PlanckWalk> The term x87 comes from being an external coprocessor
[10:22:05] <PlanckWalk> I.e. with a separate part number
[10:22:12] <droid3> So the computers of the era 50 to 80's that had fpu where probably mainframes or huge computers not for PC stuff. It seems PC got all the cool stuff add later for the general public that the 1950 - 80's era had been working to perfect.
[10:22:34] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[10:22:42] <PlanckWalk> Integrated FPU in personal computers didn't really happen until 486dx
[10:23:37] <droid3> so when did x87 turn into avx , sse versions ,...etc and when did we start getting xmms , ymms , zmms ,...etc registers
[10:23:50] <PlanckWalk> x87 never went away
[10:23:52] <droid3> vs just having the st stack ones
[10:24:27] <PlanckWalk> SSE started in the late 90's IIRC
[10:24:37] * PlanckWalk checks.  Yeah, 1999
[10:25:00] <droid3> it seems they have change the format to x87 common format was 80bits registers for the st(0) ...etc
[10:25:11] *** Quits: Izem (~Izem@bras-base-london1483w-grc-30-74-12-157-86.dsl.bell.ca) (Quit: Going offline, see ya! (www.adiirc.com))
[10:25:14] <PlanckWalk> SSE was only 2x 32-bit originally
[10:25:18] <PlanckWalk> Err, 4x
[10:25:34] <droid3> But there are a bunch of different standards for different floating point sizes like 32 , 64 ,80 ,128 ,...etc out there at least on paper.
[10:26:20] <PlanckWalk> Modern x86 CPUs can do computation with 16, 32, 64, and 80 bit floating point values.
[10:26:37] <PlanckWalk> There are standards for arbitrary sized floating point values.
[10:27:27] *** Quits: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net) (Ping timeout: 240 seconds)
[10:28:04] <droid3> Curious did sse versions bring the xmms registers because it seems they still operated on the st(0) and just add commands like FXRSTOR, FXSAVE  ...etc
[10:28:43] <droid3> I guess did SSE come out before or after AVX , 3DNOW , MMX ....
[10:28:44] *** Quits: mishugan1 (~mishugana@103.5.134.18) (Quit: leaving)
[10:29:01] <PlanckWalk> SSE was the first extension to floating-point handling after x87
[10:29:40] *** Quits: jazzy (~jaziz@172.58.35.7) (Ping timeout: 252 seconds)
[10:30:06] <droid3> what exactly does extension even mean in this context is it just SSE versions add new opcodes that worked on ST() stack
[10:30:09] <PlanckWalk> (Well, AMD got in there a bit earlier, but it's gone now)
[10:30:20] <droid3> Or did they add different physical registers 
[10:30:24] <PlanckWalk> No, SSE instructions have nothing to do with St()
[10:31:07] <PlanckWalk> x87 is completely independent of SSE (and future extensions)
[10:31:29] <droid3> So then what did SSE opcode use for the registers
[10:31:38] <droid3> was it the xmms 
[10:31:43] <PlanckWalk> New xmmN registers
[10:31:59] <droid3> And if so how does AVX differ from SSE versions 
[10:32:03] <PlanckWalk> (For N=0 to 7 original, later 0 to 15)
[10:32:11] <droid3> other then adding new opcode 
[10:32:28] * PlanckWalk repates "avx extends the xmm registers to 256-bit registers addressed using ymm"
[10:32:42] <droid3> because if its just adding new fpu opcodes one could call AVX just SSE6 or whatever version at this point
[10:32:53] <PlanckWalk> Yes, you could if you really wanted
[10:33:05] <PlanckWalk> But it did change the register model
[10:33:15] <PlanckWalk> So it's not really "just more instructions on SSE registers"
[10:34:00] <droid3> ok so avx from sse versions was not just adding opcode extra instruction but also increased the register size to ymms 
[10:34:06] <PlanckWalk> Yes
[10:34:21] <PlanckWalk> AVX-512 doubled the size again, and also double the number of registers
[10:34:37] <droid3> Ok ya so it was physical register increase not just added microcode to go against the same size /same registers
[10:34:41] <droid3> Ok i see
[10:35:26] <droid3> So then is AVX currently the most current fpu extension we got.
[10:35:40] <droid3> Do they call AVX also zmms extension as well.
[10:36:09] *** Quits: tccki (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795) (Read error: Connection reset by peer)
[10:36:09] *** Joins: tccki_ (~tccki@box.webslate.co.nz)
[10:36:17] <droid3> So its all AVX as we go further with adding opcodes and widening the registers
[10:36:30] <PlanckWalk> zmm  is specific to avx-512
[10:37:00] <droid3> ok so is there anything more current in fpu then avx-512 for machines
[10:37:11] <PlanckWalk> GPUs?  ;-)
[10:37:25] <PlanckWalk> A bunch of CPUs have them built in now
[10:37:36] *** tccki_ is now known as tccki
[10:37:51] <PlanckWalk> Given that, I suspect there won't be an extension from avx-512
[10:37:53] <droid3> besides GPU card  for computer graphics
[10:38:02] <PlanckWalk> Not card
[10:38:07] <PlanckWalk> Integrated GPUs
[10:38:14] <PlanckWalk> CPU and GPU on the same chip.
[10:38:31] <droid3> O wait your saying there embedding the gpu into the cpu itself as a fpu processor.
[10:38:36] <PlanckWalk> Yes
[10:38:42] *** Joins: rofl (~rofl@2603:3016:1e01:b980:20b3:fc15:12c5:30d8)
[10:39:18] <droid3> O ya that would probably blow away all the other standards. Do we have any computers with this ability for PC users
[10:39:34] <PlanckWalk> Most of them?
[10:40:01] *** Quits: kaivai (~kaivai@user/kaivai) (Quit: ZNC - https://znc.in)
[10:40:09] <droid3> as part of the internal cpu not talking about using cuda and doing it off your graphics card gpu.
[10:40:20] *** Joins: kaivai (~kaivai@user/kaivai)
[10:40:43] <PlanckWalk> Well, you wouldn't use CUDA.  That's nvidia-only.
[10:41:04] <droid3> ok opencl
[10:41:13] <droid3> you get my point 
[10:41:37] *** Joins: palasso (~palasso@user/palasso)
[10:41:40] *** Quits: jcarpenter2 (rofl@2603:3016:1e01:b980:20b3:fc15:12c5:30d8) (Ping timeout: 240 seconds)
[10:41:47] <PlanckWalk> The drivers actually compile into GPU extension instructions.
[10:42:00] <PlanckWalk> Which execute on the chip's inbuilt GPU hardware
[10:42:23] <PlanckWalk> You just program against the driver API
[10:43:07] <PlanckWalk> In theory you could probably write machine code for it, but in practice that's pointless
[10:43:22] <PlanckWalk> (Because the interface differs somewhat for every chip)
[10:43:30] <PlanckWalk> Well, every model of chip
[10:44:14] <droid3> O your saying if i new the gpu extensions opcodes and had a assemblier/compiler that understood how to build the machine code for those new gpu extension instructions.
[10:44:25] <PlanckWalk> It's a bit less efficient doing it that way for small tasks, but you usually don't do these sorts of things on tiny tasks.
[10:44:35] <PlanckWalk> Yes
[10:44:39] <droid3> Then i be able to bypass any need for cuda , opencl ,...etc and just program directly
[10:45:23] <PlanckWalk> In practice, the compilers/assemblers are in the graphics/GPGPU drivers.
[10:45:42] <PlanckWalk> They just don't expose their internals
[10:45:58] <droid3> O so the gpu card for the display monitor which uses a gpu processor with its own dedicate memory. Also has a gpu internal in my cpu or at least microcode in my cpu to access / run gpu instructions for my card.
[10:47:51] <PlanckWalk> Sometimes there are 3 GPUs: external card(s), motherboard integrated, and CPU integrated.
[10:48:24] <PlanckWalk> But the CPU-integrated ones are usually comparatively tiny
[10:48:43] <PlanckWalk> (and compete with general-purpose CPU for memory bandwidth and heat load)
[10:48:52] <droid3> Yup ok i gotcha. So why make huge gpu card if you can just build them internal to the cpu 
[10:49:03] <droid3> is there any issue with speed or performance 
[10:49:06] <PlanckWalk> Yes
[10:50:31] <PlanckWalk> You make huge GPU card if you want a huge GPU with its own heatsinks and power supply and dedicated memory
[10:50:45] <droid3> Curious so if i was to write mathematical code or things that utilize alot of floating point computations it be better to use a gpu then to do it with traditional cpu's
[10:50:53] <PlanckWalk> Yes
[10:51:12] *** Joins: vysn (~vysn@user/vysn)
[10:51:24] <droid3> So it be better to write it with cuda or opencl ,...etc then write the floating point code for traditional x87,avx,sse ...etc 
[10:51:35] <PlanckWalk> Yes
[10:54:54] <droid3> cool thanks for the discussion have a better outlook on the history of FPU and where it now is. How it use to work and where its kind of going.
[10:55:13] <droid3> talk later great topic tonight later guys.
[10:56:11] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:1df4:6ff0:9b2d:6f2e) (Read error: Connection reset by peer)
[10:57:08] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:57:43] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:9cd1:7ad:f0f6:4c60) (Ping timeout: 252 seconds)
[10:58:16] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 252 seconds)
[10:58:54] *** Joins: absc (~absc@dynamic-adsl-94-34-168-146.clienti.tiscali.it)
[11:08:10] *** Joins: Inhahe (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net)
[11:09:10] <webNET4> it's a miracle, they fixed github's ugly layout!
[11:10:35] *** Joins: Akronymus (~Akronymus@85.31.8.180)
[11:11:28] *** Quits: sicelo (~sicelo@user/sicelo) (Quit: Bye!)
[11:11:52] <Akronymus> Damn, I have the stuck ping again.
[11:20:10] *** Joins: sicelo (~sicelo@vm8.ganeti.dyne.org)
[11:20:10] *** Quits: sicelo (~sicelo@vm8.ganeti.dyne.org) (Changing host)
[11:20:10] *** Joins: sicelo (~sicelo@user/sicelo)
[11:22:30] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:9cd1:7ad:f0f6:4c60)
[11:28:48] *** Quits: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net) (Quit: Leaving)
[11:30:22] <diophantoz> hi, how do i make an object inherit one of an initiated objects attributes (java) such that it will always inherit that last set attribute?
[11:31:16] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[11:31:23] <diophantoz> it seems to me i have to do something with references
[11:36:44] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[11:37:17] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:38:44] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[11:40:37] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 252 seconds)
[11:45:10] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4) (Ping timeout: 240 seconds)
[11:45:36] *** Joins: anahat (~anahat@116.74.180.160)
[11:45:45] <Akronymus> No idea what you mean.
[11:46:21] <Akronymus> Are you saying that when an attrribute of some object gets set you want to set a attribute in a different one?
[11:46:51] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[11:47:39] *** Joins: Rounin (~david@84.212.130.215)
[11:49:13] *** Joins: mnd999_ (~mark@2001:8b0:da3:76a2:4630:5b97:83a2:3e21)
[11:49:56] *** Joins: aradesh (~aradesh@user/aradesh)
[11:52:22] <smallvil_> is the font height always equal to the line height?
[11:52:28] <smallvil_> is the font size always equal to the line height?
[11:54:12] *** Joins: mrig (~mrig@user/mrig)
[11:56:13] *** Joins: Samian (~Sami@2620:10d:c091:480::1:3a90)
[11:57:42] <beaky> hello so in the file system i dont use underscores or camelcase  but in program code i use underscores like in snake case or even camelcase how do i reconcile thse tewo different naming ocnventions
[12:07:05] <pyzozord> beaky: Why_Not_Both?
[12:07:12] *** Joins: Thedarkb1-Work (~Thedarkb@62.232.253.82)
[12:07:29] <pyzozord> beaky: also what do you mean by recociling here?
[12:07:37] *** Joins: isosterix (~isosterix@ip-95-222-34-30.hsi15.unitymediagroup.de)
[12:08:19] <beaky> since they are different naming conventions but ideally everywhere will have the same name
[12:09:41] <pyzozord> sorry, still not sure what do you mean by "ideally everwhere will have the same name". You mean you want snakecase and camelcase to have the same name?
[12:11:08] *** Quits: frost (~frost@59.71.240.119) (Quit: Connection closed)
[12:11:22] <pyzozord> oh do you mean "ideally I want to be consistant and use just one naming convention"?
[12:11:24] <RedNifre> Hey, can anybody recommend an Android app that is good at reading a QR code raw, as in debug friendly output of the content of the code, without resolving URLs etc.? Maybe even display the bytes (My understanding is, that the black and white dots are bits, with checksums, grouped into bytes, encoding UTF-8 (or other encodings?).
[12:11:29] <beaky> yes ideally it will all just be kebab-case
[12:11:38] <Akronymus> "Files have alllowercase naming"
[12:11:50] *** Quits: Thedarkb-Work (~Thedarkb@62.232.253.82) (Ping timeout: 244 seconds)
[12:11:59] <beaky> yes good idea i will just have everything be alllowercasewithoutspaces 
[12:12:10] <Akronymus> Tbh, I don't see the need to reconcile the naming schemes.
[12:12:17] <pyzozord> That should be called angrycase :P
[12:12:32] <Akronymus> > in the file system i dont use underscores or camelcase  
[12:12:39] <Akronymus> Seems to indicate all lower case.
[12:13:00] <leduyquang753> I just use normal sentence case to file names, with spaces.
[12:13:17] <beaky> spaces are not necessary they are just a redundant feature of writing our ancestors never used spaces anyway and many languages like chinese do not have or need spaces
[12:13:30] <Akronymus> Spaces are redundant.
[12:13:38] <Akronymus> But they make it MUCH easier to read.
[12:13:45] <Akronymus> Oristhiseasierforyoutoread?
[12:13:47] <beaky> i dont have to press on the space bar if i just type everything without spaces
[12:14:03] <leduyquang753> The only reason Chinese doesn't need spaces is that all the characters are cramped into a fixed square.
[12:14:04] <Akronymus> Altough, they aren't always redundant.
[12:14:12] *** Quits: alefir (~alefir@191.96.106.96) (Ping timeout: 256 seconds)
[12:14:22] <pyzozord> I'd have some kind of system of meaning assigned to naming conventions. For example _ indicates change of scope/abstraction layer. CamelCase indicates just different words within the same "layer". And is used only for actual file names kebab-case.
[12:14:30] <mrig> spaces are used to mark breathing or breath in sanskrit and effect the meter
[12:14:33] <Akronymus> Because sometimes two words written as one could be interpreted as a different one.
[12:14:44] *** Quits: haliucinas (~haliucina@5.20.153.21) (Remote host closed the connection)
[12:14:57] <mrig> beaky: I do the same, prefer all lower and snake case for the file system.
[12:14:59] <Akronymus> https://www.youtube.com/watch?v=bLE7zsJk4AI beaky
[12:15:04] <bayaz> Title: Worst Wifi Password Ever 
[12:15:28] <mrig> underscores were designed for this, so far as I'm aware :)
[12:16:01] <Akronymus> `fourwordsalluppercase` is the best wifi password ever.
[12:16:13] <mrig> I use full stops a lot and hyphens in file naming too.
[12:16:42] <mrig> Upper case is way to roman for my liking :P
[12:16:57] <mrig> Makes me think of barking orders.
[12:17:21] <Akronymus> THIS_has_GOT_to-BEtheWorstnAMINGsChEmE
[12:17:43] <mrig> beaky I thought that you would go for a chest rather than a case, all tea's considered.
[12:17:54] <mrig> Akronymus: nice nasty case that"
[12:17:57] <mrig> !
[12:18:17] <mrig> random case?
[12:18:40] <pyzozord> only use non-printable utf-8 characters
[12:18:52] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[12:19:06] <mrig> linking in C is fun when you are still learning what it all does. Its like going on an adventure into the unknown!
[12:19:33] <mrig> if you use escape characters, do you escape from the file system?
[12:19:45] <pyzozord> I've manged to make gcov working on my program. Only problem is, that it's not helpful.
[12:19:58] <mrig> What is gcov?
[12:20:05] <beaky> nice i like utf-7
[12:20:07] <beaky> i mean utf-8
[12:20:20] <pyzozord> gnu coverage, it's companion program to gprof, gnu profiler
[12:20:30] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[12:20:34] *** Joins: haliucinas (~haliucina@5.20.153.21)
[12:20:41] <pyzozord> gnu coverage counts how many time each line has been ran
[12:20:48] <mrig> utf-8 is great, it allows for the use of different underlying charset still, so far as I am aware.
[12:21:08] <mrig> I don't think that unichar does this?
[12:21:14] <mrig> unicode
[12:21:23] <mrig> pyzozord: oh nice.
[12:22:15] <Akronymus> Oh wow, naming your wifi "What Wifi" and setting your password to "idontremember" is EVIL.
[12:22:18] <Akronymus> Gotta do that.
[12:22:21] <mrig> For some reason the compiler can not see my main function at the moment, I've no idea why that is.
[12:22:28] <Akronymus> Well, with a different PW of course.
[12:22:40] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[12:22:48] <Akronymus> mrig did you mark it as the entry point?
[12:23:02] <Akronymus> And/or are you building to the correct project/target?
[12:23:07] <mrig> Akronymus: I have no idea, how does one do that?
[12:23:17] <Akronymus> What language?
[12:23:38] <mrig> c
[12:23:50] <mrig> simple make file rather than using a build system
[12:25:03] <Akronymus> https://stackoverflow.com/questions/7494244/how-to-change-entry-point-of-c-program-with-gcc
[12:25:04] <bayaz> Title: How to change entry point of C program with gcc? 
[12:25:09] <Akronymus> mrig this may be helpful
[12:25:57] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4)
[12:26:21] <mrig> Thank you!
[12:27:15] <mrig> The main is there though, curious really.
[12:27:43] *** Joins: Guest10 (~Guest10@93-172-153-232.bb.netvision.net.il)
[12:28:58] <pyzozord> I keep forgetting that order of arguments to gcc matters
[12:29:33] <mrig> I think that could be the issue here too
[12:30:07] *** Quits: inky (~inky_@46.36.119.19) (Ping timeout: 252 seconds)
[12:30:31] *** Joins: Tazy (~Tazmainia@102.39.90.151)
[12:30:36] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:30:36] <pyzozord> it gets me every time, took me few hours to realize I was passing the gcov flags in the wrong places
[12:30:47] <mrig> I think this is because I'm using two source locations for the source files
[12:31:17] <mrig> And it is looking in the last one used but there is no main function in that code
[12:32:26] <Akronymus> Apparently twitter stores 20MB of cookies for the desktop and another 20 for the mobile version.
[12:32:29] <Akronymus> WTF?
[12:32:52] *** Quits: inky_ (~inky@46.36.119.19) (Ping timeout: 252 seconds)
[12:33:25] *** Joins: inky_ (~inky@178.78.130.226)
[12:34:19] <pyzozord> it makes sense a cookie with 20 mega bites
[12:34:28] *** Quits: Jaran (~mail@user/jaran) (Ping timeout: 252 seconds)
[12:34:39] <pyzozord> more like a whole pie, but anyway
[12:34:54] *** Joins: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk)
[12:35:24] <mrig> Akronymus: Oh I had an extra /*/*.c in my wildcard expression, had thought that it meant in folder and in sub folders.
[12:35:25] *** Joins: elgraz (~elgraz@151.65.9.160)
[12:35:32] <mrig> and extra *
[12:35:49] *** Quits: swinnenb (~swinnenb@user/swinnenb) (Quit: This is the hidden truth, the world between the lines.)
[12:36:42] <Akronymus> Pretty sure that means all .c files that are 2 levels deeper.
[12:37:07] <mrig> wow it is insane all the going around in circles that C compiler gets you doing, when you are used to a more modern language.
[12:37:24] *** Joins: Guest562 (~Guest5@public-gprs227132.centertel.pl)
[12:37:26] <mrig> I'd thought that there was a way to get it to do both.
[12:37:34] <mrig> perhaps without the /
[12:37:39] <Akronymus> Does make support xpaths?
[12:37:56] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[12:38:07] *** Joins: deathonater (~deathonat@2603-7000-e206-3fd8-28ad-882f-3872-8513.res6.spectrum.com)
[12:38:07] *** Quits: deathonater (~deathonat@2603-7000-e206-3fd8-28ad-882f-3872-8513.res6.spectrum.com) (Changing host)
[12:38:07] *** Joins: deathonater (~deathonat@user/smeef)
[12:38:09] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[12:38:16] <mrig> Oh is that xpaths that does that?
[12:38:47] <Akronymus> Dunno.
[12:39:04] <Akronymus> I was asking whether make supports them
[12:39:20] <pyzozord> I have halfmind made up about buying a raspberrypi 4 and waveshare 12 inch eink screen and making a tablet/laptop from that
[12:39:41] <pyzozord> Really damn want a nice eink screen
[12:39:47] <Akronymus> https://www.gnu.org/software/make/manual/make.html#Search-Algorithm mrig
[12:39:49] <bayaz> Title: GNU make 
[12:41:05] *** Quits: Smeef (~deathonat@user/smeef) (Ping timeout: 250 seconds)
[12:41:36] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[12:41:41] *** Quits: bertiger_ (~bertiger@user/bertiger) (Quit: -)
[12:41:58] <mrig> pyzozord: on line 66 of gif.c where is win being defined?
[12:42:01] *** Joins: bertiger (~bertiger@user/bertiger)
[12:42:08] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[12:43:41] <pyzozord> mrig: x.c lines 78 and 145
[12:44:14] *** Joins: spynx (~spynxic@spynxic.powered.by.lunarbnc.net)
[12:44:23] <Akronymus> https://twitter.com/moyix/status/1431068919834480645 Thats pretty idiotic.
[12:44:31] <Akronymus> https://twitter.com/moyix/status/1433254293352730628
[12:44:57] <pyzozord> Akronymus: juts don't read twitter
[12:45:01] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[12:45:17] <Akronymus> > I also figured out what it's using the list for: it will suppress autocomplete suggestions if the suggestion contains a slur. So it has trouble completing a list of Near East countries, for example:
[12:45:17] <mrig> I'm not getting those over in gif.c
[12:45:37] <pyzozord> mrig: it's in file x.c
[12:45:42] <mrig> wondering if they might need to be made export
[12:46:02] *** Joins: euouae (~euouae@user/euouae)
[12:46:03] <mrig> the win variable
[12:46:06] *** Quits: el_kevino (~mote@2604:a880:400:d1::901:5001) (Ping timeout: 272 seconds)
[12:46:18] <euouae> Hello, how do I get to authenticate to github using my gpg keys?
[12:46:26] <Akronymus> Oh wow, "man" "woman" "male" and "female" are on the blocklist too.
[12:46:33] <mrig> Am intrigued as to when this is OK in one version but not the other.
[12:46:42] *** Joins: inky (~inky_@178.78.130.226)
[12:46:43] <mnd999_> At least we know how to keep our code off co-pilot i guess
[12:46:43] <Akronymus> pyzozord I mean the copilot censoring stuff is idiotic.
[12:46:43] <RedNifre> jUsT uSe SpOnGeBoBcASe
[12:46:55] <mrig> lol
[12:47:10] *** Joins: varaindemian (uid73404@id-73404.charlton.irccloud.com)
[12:47:13] <varaindemian> anyone tried https://github.com/thinkst/canarytokens ?
[12:47:14] <bayaz> Title: GitHub - thinkst/canarytokens: Canarytokens helps track activity and actions on your network. 
[12:47:15] <euouae> I'm trying to follow a drduh's guide on yubikey's to use my yubikey to connect to github but I don't get any output from `ssh-agent -L`
[12:47:15] <mrig> good for mopping up grammatical messes
[12:47:15] <pyzozord> Akronymus: btw that bit of code he showed in the second tweet is not real code. This has been clearly transformed by some transpiler
[12:47:16] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[12:47:28] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[12:47:43] *** Joins: el_kevino (~mote@2604:a880:400:d1::901:5001)
[12:47:43] <Akronymus> pyzozord those are the hashes for the words
[12:48:20] <pyzozord> Akronymus: no no I get that, I mean Object.defineProperty(t, "__esModule", { 
[12:48:30] <mrig> pyzozord: yes those are marked as being static which limits the scope, If memory serves.
[12:48:39] <Akronymus> Oh, seems either decompiled or minified.
[12:49:06] <pyzozord> mrig: nope, in golobal scope, static means the exact opposite :D
[12:49:13] * mrig is dancing about the compiler in ignorance.
[12:49:29] <mrig> pyzozord: when I remove the static, it then is able to see it though.
[12:49:38] *** Quits: lexano[m] (~lexanomat@2001:470:69fc:105::3110) (Ping timeout: 250 seconds)
[12:49:42] *** Quits: rvlobato[m] (~ronaldo@2001:470:69fc:105::219f) (Ping timeout: 245 seconds)
[12:49:42] *** Quits: kakos[m] (~kakos@2001:470:69fc:105::c965) (Ping timeout: 245 seconds)
[12:49:59] *** Quits: psydroid (~psydroid@user/psydroid) (Ping timeout: 252 seconds)
[12:50:36] *** Joins: orondo (~orondo@user/orondo)
[12:50:41] <mrig> I think static limits to that file
[12:50:50] <mrig> need to check in k'n'r
[12:51:00] *** Joins: Cypris (uid511277@user/cypris)
[12:51:01] <euouae> my understanding is that I have to generate the authentication public key and point ssh-agent to it, but the guide doesn't seem to do this 
[12:51:05] *** Quits: foozle (~foozle@2001-b011-c001-16ef-3000-2890-f155-1c1d.dynamic-ip6.hinet.net) (Quit: Leaving)
[12:51:13] <pyzozord> I don't think so but cppreference.com seems frozen atm
[12:51:50] *** Cypris is now known as Curiosity
[12:51:51] <euouae> instead they are using `ssh-add -L` which gives me "This agent has no identities"
[12:52:12] *** Quits: getz[m] (~getz@2001:470:69fc:105::c85e) (Ping timeout: 245 seconds)
[12:52:14] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Read error: Connection reset by peer)
[12:52:15] <mrig> dang, I must remember to glue this back together again.
[12:52:37] *** Quits: life_is_pointles (~neon2919m@2001:470:69fc:105::e482) (Ping timeout: 245 seconds)
[12:52:41] *** Quits: whaleshunter[m] (~whaleshun@2001:470:69fc:105::daf2) (Ping timeout: 250 seconds)
[12:52:44] *** Quits: securethemews (~securethe@2001:470:69fc:105::9b6d) (Ping timeout: 252 seconds)
[12:52:44] *** Quits: andrew[m]1 (~andrewmtx@2001:470:69fc:105::3af2) (Ping timeout: 256 seconds)
[12:52:59] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[12:53:01] <varaindemian> I am looking for a way to insert unique url
[12:53:22] <varaindemian> insdie a picture in a docx file
[12:53:22] *** Joins: Inari (~Pinkishu@p4fe7eb2c.dip0.t-ipconnect.de)
[12:53:23] <mrig> pyzozord: yes using static here limits them to file scope.
[12:53:34] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Remote host closed the connection)
[12:53:46] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[12:54:01] <mrig> I need to reread this chapter in fact, static scoped variables within functions are really useful at times too.
[12:54:01] <mawk> don't use static in C++
[12:54:04] <mawk> use anonymous namespace
[12:54:20] <mrig> Oh this is c99 mawk.
[12:54:26] <mawk> ah
[12:54:30] <Curiosity> oh nice
[12:54:32] <pyzozord> mrig: hmm maybe you are right, I see in the spec  "If the declaration of a file scope identifier for an object or a function contains the storage-
[12:54:35] <pyzozord> class specifier static, the identifier has internal linkage."
[12:54:36] <Curiosity> this makes things interesting 
[12:55:04] <mrig> pyzozord: I think your code that is working is accessing another declaration of win, it could be.
[12:55:09] <pyzozord> In 6.2.2.3
[12:55:26] <pyzozord> mrig: I'm using a dirty #include "gif.c" in there
[12:55:37] <mrig> right
[12:55:37] <pyzozord> so I might have never noticed that
[12:55:44] *** Joins: kakos[m] (~kakos@2001:470:69fc:105::c965)
[12:55:55] <pyzozord> and I remembered what static at global scope does wrongly
[12:55:56] *** Joins: silasfox (~sbv@2001-4dd6-4b95-0-383d-e94d-aa82-1e8f.ipv6dyn.netcologne.de)
[12:56:09] <pyzozord> the statics where there in original st, I just didin't remove them
[12:56:24] *** Joins: lexano[m] (~lexanomat@2001:470:69fc:105::3110)
[12:56:26] <mrig> This is kinda why I wanted to pull out your files to see what was where in the running order.
[12:57:07] <varaindemian> anyone
[12:57:08] <varaindemian> ?
[12:57:23] <pyzozord> I need to make my irssi stop passing line breaks
[12:58:19] *** Joins: getz[m] (~getz@2001:470:69fc:105::c85e)
[12:58:28] <mrig> C is going to be a lot of fun once all this makes sense :)
[12:58:40] *** Joins: Pickchea (~private@user/pickchea)
[12:59:22] <mrig> sure that if these base habits are good that the compiler messages are far easier to manage.
[12:59:25] <euouae> ok it was ~.gnupg/sshcontrol` that I needed to edit 
[12:59:53] *** Joins: psydroid (~psydroid@user/psydroid)
[13:00:22] *** Joins: whaleshunter[m] (~whaleshun@2001:470:69fc:105::daf2)
[13:00:45] *** Joins: life_is_pointles (~neon2919m@2001:470:69fc:105::e482)
[13:00:50] <mrig> pyzozord: actually putting export in front of it, makes it accessible but not visible.
[13:00:58] <pyzozord> I confused linkage with storage-class, thats what I remembered wrong
[13:01:24] *** Joins: moha (uid506645@id-506645.helmsley.irccloud.com)
[13:01:35] <mrig> Oh me to, just now coming to grok what these mean.
[13:02:01] <pyzozord> I think you can keep static where it was, and in the other place where you want to use it you can add another declaration of it with extenal
[13:03:11] <pyzozord> the original object has internal linkage but static storage, meaning it's lifetime is entire program execution. And the declaration in other file with external just says "hey, this object already exists, link to the existing object"
[13:03:11] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:03:46] *** Joins: SmokenatorZ8 (~Smokenato@152.249.182.2)
[13:04:17] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[13:04:17] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[13:04:30] *** Joins: andrew[m]1 (~andrewmtx@2001:470:69fc:105::3af2)
[13:04:50] *** Joins: plastico (~plastico@neomutt/plastico)
[13:04:53] <arahael> inspirational website of the day :) (or week...  i should do this daily!)
[13:04:59] <euouae> Can someone help me with authentication with a hardware key for pushing to github?
[13:05:03] <arahael> https://xkcd.com/1053/
[13:05:03] <bayaz> Title: Ten Thousand 
[13:05:16] *** Joins: securethemews (~securethe@2001:470:69fc:105::9b6d)
[13:05:45] *** Quits: SmokenatorZ (~Smokenato@200.150.183.20) (Ping timeout: 248 seconds)
[13:05:45] *** SmokenatorZ8 is now known as SmokenatorZ
[13:05:48] <arahael> so remember: whatever complete newbie topic a dev should know: we probably have 10,000 learning that *today* so be kind!
[13:06:07] <homura> i am learning to code
[13:06:36] <arahael> homura: awesome :) you are in that 10k, then! :D
[13:06:47] *** Quits: Thedarkb (~Thedarkb@85.255.234.252) (Ping timeout: 245 seconds)
[13:06:59] <mrig> extern rather :)
[13:07:35] <pyzozord> yeah, extern! Sorry I've learned this once, and then almost never used it
[13:07:45] *** Joins: rvlobato[m] (~ronaldo@2001:470:69fc:105::219f)
[13:09:35] <mrig> oh no it is not kicking up the same error, I'm on a hunt now to get the the root of it :D
[13:13:41] *** Quits: bw (sid2730@user/betawaffle) ()
[13:14:10] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi)
[13:14:11] *** Joins: lalitmee (~lalitmee@2402:3a80:8e8:f12f:4e99:6ae8:5afb:e8c6)
[13:14:18] *** Joins: bw (sid2730@user/betawaffle)
[13:14:45] *** Quits: user282069 (user@2a01:7e00::f03c:92ff:fe7f:456d) (Quit: WeeChat 2.3)
[13:16:12] <euouae> can someone help me with github and yubikey authentication?
[13:17:09] <mrig> euouae: an ssh key?
[13:17:17] <euouae> mrig, yeah 
[13:17:24] <mrig> what operating system are you using?
[13:18:03] <mrig> on linux I need to have the key pair set up in a special folder and to have the sshagent know where that is, if memory serves.
[13:18:08] <euouae> I'm using fedora 
[13:18:18] *** Joins: chomwitt (~chomwitt@2a02:587:dc1c:8c00:12c3:7bff:fe6d:d374)
[13:18:30] <euouae> I'm having trouble figuring it all out 
[13:18:40] <pyzozord> euouae: github has great docs about it, have you tried https://docs.github.com/en/github/authenticating-to-github/
[13:18:41] <bayaz> Title: Authenticating to GitHub - GitHub Docs 
[13:18:53] <mrig> euouae: you might like to have a read of this too https://linux.die.net/man/1/ssh-agent
[13:18:53] <bayaz> Title: ssh-agent(1): authentication agent - Linux man page 
[13:19:12] <euouae> pyzozord, these don't include yubikeys
[13:19:13] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:20:32] <euouae> mrig, in my opinion that man page is lacking (assuming I'm reading gpg-agent)
[13:20:53] <pyzozord> euouae: https://github.com/liyanchang/yubikey-setup#github
[13:20:54] <bayaz> Title: GitHub - liyanchang/yubikey-setup: How to set up your yubikey 
[13:21:04] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 244 seconds)
[13:21:06] <mrig> ah you have some sort of dongle, sorry, no I know nothing about that.
[13:21:26] <euouae> pyzozord, that is about 2FA, which I already have enabled, but not related
[13:21:56] <pyzozord> euouae: so what is it that you need?
[13:22:31] <euouae> I need to be able to do i.e. `git clone` and `git push` without having to enter username/password, instead relying on the yubikey to authenticate me
[13:23:54] *** Quits: ullbeking (sid5364@id-5364.charlton.irccloud.com) ()
[13:24:22] *** Joins: ullbeking (sid5364@id-5364.ilkley.irccloud.com)
[13:24:33] <mrig> euouae: normally it is the ssh_agent that deals with this, perhaps it needs to see the key?
[13:24:50] <euouae> but I don't understand how 
[13:25:11] <webNET4> what happens if the hardware  goes missing do you use a password to generate a new key?
[13:25:11] <mrig> read about the agent perhaps, I don't understand how yet either :)
[13:25:38] <mrig> webNET4++
[13:26:07] <euouae> webNET4, the hardware only contains the private keys for some of my subkeys
[13:26:20] <beaky> so rust has a borrow checker but why does rust not also have an array bounds checker to prove all bounds correct at compile time
[13:26:23] <euouae> if it goes missing I revoke them 
[13:26:47] <mrig> euouae: you could also try asking in ##linux too.
[13:27:12] <mrig> There are perhaps different mechanisms on different distributions for this.
[13:27:42] <webNET4> beaky it doesn't?
[13:27:50] <webNET4> for serious though?
[13:27:57] <euouae> This should be related to gpg-agent only mrig
[13:28:04] <euouae> maybe I can ask in gnupg 
[13:28:13] <mrig> euouae: semantics, you get my point :)
[13:28:17] <beaky> yes rust does not i think very few languages have static bounds checkers and stuff
[13:28:33] <pyzozord> euouae: see if this helps https://github.blog/2021-05-10-security-keys-supported-ssh-git-operations/
[13:28:33] <bayaz> Title: Security keys are now supported for SSH Git operations 
[13:28:39] <beaky> coq has it through the lia tactic (formerly known as omega)
[13:28:41] <mrig> euouae: yes, you need the root of the system that is doing the task and sort of search on from that.
[13:29:50] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[13:29:53] <mrig> euouae: the keyring that I have deals with both gpg and ssh rsa, it is not a subject that I master yet. In fedora you may have something else, so you could try to find a fedora channel too.
[13:30:02] *** Joins: webNET4 (~0x100@32.211.211.39)
[13:30:16] <euouae> mrig, this is all because SSH sucks
[13:30:31] <mrig> euouae: well no, it is because you need your key to work.
[13:30:37] <mrig> I'm fine with ssh.
[13:30:45] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[13:30:58] *** Joins: flynn (~mcbloch@user/flynn)
[13:31:08] <euouae> mrig, I mean, invoking ssh appears to have deleted my .ssh config files, so...
[13:31:19] <mrig> why?
[13:31:20] <euouae> and replaced it with ~/.ssh/known_hosts only 
[13:31:26] <euouae> no idea why
[13:31:27] <mrig> It should not do that.
[13:31:37] <mrig> I hope you have a backup :D
[13:31:50] <euouae> I just created the configuration files but now they're deleted. No idea why that happened
[13:32:04] <webNET4> beaky that's incredible. i was sure it had such a feature because of all the hype bout "safety"
[13:32:22] <audiocat> how do i open up an xdg-open dialog with js from the browser so that when  users click "ok" it opens a desktop application, like discord does?
[13:32:33] <beaky> yes the idea of rust's safety is that it is memory safety
[13:32:42] <arahael> euouae: Wait, what? SSH sucks?
[13:32:48] <euouae> i.e. my history has `~/.ssh/id_rsa_yubikey.pub` and `~/.ssh/config` and now they're gone
[13:33:13] <euouae> arahael, I think it's confusing to have both gpg keys and ssh keys but ssh doesn't care for gpg keys 
[13:33:22] <euouae> and you need to hack your way around it, seems to me
[13:33:28] <mrig> euouae: you have to give a different name when generating a key pair if you do not want the default one to get overwritten.
[13:33:36] <beaky> rather than static bounds checking safety (rust instead trusts indexed bounds are correct or encourages you to use slices and iterators)
[13:33:38] <arahael> euouae: Newer ssh's support gpg keys, but generally, you can pick the type of key you want.
[13:33:59] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[13:34:01] <arahael> euouae: What trips people out a bit is that the ssh server _also_ needs to support them.
[13:34:02] <euouae> arahael, does it? All the instructions I'm reading tell me to use gpg-agent
[13:34:06] *** Quits: Guest10 (~Guest10@93-172-153-232.bb.netvision.net.il) (Quit: Client closed)
[13:34:17] *** Joins: Enitin (~Enitin@82.102.22.84)
[13:34:26] <arahael> euouae: Wouldn't be the first time some random's instructions on medium.com were incomplete. :(
[13:34:37] <euouae> I don't even use medium.com on principle
[13:34:45] <euouae> but anyway, I can't find anything online to be honest
[13:35:22] <euouae> the gpg-agent man page does not seem to acknowledge the existence of hardware keys, the yubico help pages don't seem to have it, github.com doesn't have it and the few guides I've seen online don't explain it
[13:35:25] *** Joins: gggp (~textual@111.63.14.116)
[13:35:32] <euouae> so I was wondering if anyone is doing this, using yubikey with github 
[13:35:48] <beaky> despite this in rust i trust 
[13:36:06] <arahael> THeir main website seems to be https://www.openssh.com
[13:36:07] <bayaz> Title: OpenSSH 
[13:36:22] *** Joins: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk)
[13:36:22] *** Quits: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk) (Changing host)
[13:36:22] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[13:36:24] <beaky> runtime bounds checking is a small price to pay and its still memory safe
[13:36:40] *** Quits: zwr (~zwr@2804:d45:b966:fb00:9d50:5f1e:87a4:6ad6) (Ping timeout: 252 seconds)
[13:36:40] <arahael> euouae: I personally don't use my yubikey with git, and certainly not with github, however, github would need dto be running a new-enough version of ssh to support gpg.
[13:36:49] <arahael> euouae: And I don't know if we know that.
[13:36:55] <audiocat> how do i open up an xdg-open dialog with js from the browser so that when  users click "ok" it opens a desktop application, like discord does?
[13:36:56] <webNET4> in GDB i trust
[13:37:00] <euouae> arahael, hence the gpg-agent hacks, right?
[13:37:04] <webNET4> beaky OH, i thought thats what you were talking about
[13:37:13] *** Joins: zwr (~zwr@2804:d45:b966:fb00:9e3f:83ef:ad29:6370)
[13:37:24] <webNET4> so it has the runtime checks ok
[13:37:44] <arahael> euouae: I don't think so, no.  the gpg-agent is the gpg version of ssh-agent, and what they do is pre-fill any passwords, or in this case, lets you physically touch the yubikey and provide that stuff.
[13:37:44] <beaky> yes array bounds checking (different from memory safety where you dont mess with uninitialized or free'd memory or touch unowned memory)
[13:37:47] <euouae> audiocat, maybe they associate a URI with an application?
[13:38:03] <audiocat> beaky, thanks for helping me the other day
[13:38:06] <beaky> the whole point of memory is to have arrays
[13:38:15] <audiocat> euouae, why does there seem to be no docs on this, but so many sites use it
[13:38:20] <arahael> euouae: Personally I think yubikey should do far better documentation for using their stuff with ssh.
[13:38:22] <euouae> arahael, does the server communicate the version of software they use in any way?
[13:38:25] <beaky> no problem audiocat im glad you got your proejct working
[13:38:41] <audiocat> beaky, ^_^ i forgot what you even helped me with but i know you helped me lol
[13:38:51] <arahael> euouae: You might get this info if you ssh to github.com (like you would when cloning a repo), but with -vvv
[13:38:59] <beaky> but its alright im sure the genius brilliant language designers and implementors behind rust will figure out how to give us static zero-cost full bounds checking
[13:39:04] <euouae> arahael, I don't see it 
[13:39:27] <euouae> or is it this, OpenSSH_8.6p1, OpenSSL 1.1.1l  FIPS 24 Aug 2021
[13:39:28] <euouae> ?
[13:39:40] *** Joins: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net)
[13:39:42] <euouae> in my opinion that's mine :P  
[13:40:06] <pyzozord> yeah I agree with arahael, yubikey sucks at documentation not ssh sucks in general
[13:40:10] <arahael> Hmm, your SSH is newer than mine, and yeah, that's yours.  But you can definitely see which ciphers the server supports. For github, they are: debug1: kex_input_ext_info:
[13:40:11] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 244 seconds)
[13:40:11] <webNET4> you have to check at runtime because faulty hardware can creep up on you
[13:40:12] <arahael> server-sig-algs=<ssh-ed25519-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp256-cert-v01@openssh.com,sk-ssh-ed25519-cert-v01@openssh.com,sk-ecdsa-sha2-nistp256-cert-v01@openssh.com,rsa-sha2-512-cert-v01@openssh.com,rsa-sha2-256-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-dss-cert-v01@openssh.com,sk-ssh-ed25519@o
[13:40:14] <arahael> penssh.com,sk-ecdsa-sha2-nistp256@openssh.com,ssh-ed25519,ecdsa-sha2-nistp521,ecdsa-sha2-nistp384,ecdsa-sha2-nistp256,rsa-sha2-512,rsa-sha2-256,ssh-rsa,ssh-dss>
[13:41:01] *** Joins: frost (~frost@59.71.240.119)
[13:41:02] <pyzozord> although generally everything sucks and is absolutely way too complex. It's like every thing is it's own little universe with massive amount of concepts nad prerequisite knoweledge
[13:41:15] <arahael> Yep, there's that as well.
[13:41:31] <beaky> wow that is a lot of ssh things
[13:41:47] <arahael> beaky: Yeah, it was one-line, but I forgot weechat will split it if it's too long. :(
[13:42:02] <mrig> yes complexity is rather like weeds.
[13:42:10] <euouae> There's this, https://github.com/drduh/YubiKey-Guide#ssh but following the guide I don't get any results 
[13:42:11] <bayaz> Title: GitHub - drduh/YubiKey-Guide: Guide to using YubiKey for GPG and SSH 
[13:42:34] <euouae> I get stuck at the point where I'm instructed to run `ssh-add -L` which for me produced no results 
[13:42:35] <mrig> needs maintenance to remove it, rather than to keep it.
[13:43:05] <mrig> Often has prickles and stings though when you go near to it.
[13:43:53] <euouae> There's a mention of my issue at the troubleshoot page, let me see if that's what I need to do, thank you for your help 
[13:45:24] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:9cd1:7ad:f0f6:4c60) (Quit: Quit)
[13:45:59] *** Quits: lalitmee (~lalitmee@2402:3a80:8e8:f12f:4e99:6ae8:5afb:e8c6) (Remote host closed the connection)
[13:46:18] *** Joins: lalitmee (~lalitmee@2402:3a80:8e8:f12f:4e99:6ae8:5afb:e8c6)
[13:47:49] *** Joins: anovick (~anovick@IGLD-83-130-62-236.inter.net.il)
[13:48:04] *** Quits: lalitmee (~lalitmee@2402:3a80:8e8:f12f:4e99:6ae8:5afb:e8c6) (Max SendQ exceeded)
[13:48:37] *** Joins: lalitmee (~lalitmee@2402:3a80:8e8:f12f:4e99:6ae8:5afb:e8c6)
[13:48:47] <mawk> webNET4: and also because it's generally impossible to check everything at compile time
[13:49:29] <mawk> first because you may have user input which you can't predict, and second because it is maybe a hard computational problem for unconstrained languages such as C/C++
[13:50:21] *** Quits: lalitmee (~lalitmee@2402:3a80:8e8:f12f:4e99:6ae8:5afb:e8c6) (Max SendQ exceeded)
[13:50:28] <euouae> mrig, this turned out to be an issue with me having to simply unplug and plug-in the key again... 
[13:52:40] <euouae> so now I can successfully ssh into `git@github.com`, but I still can't `git clone` without being requested a username and password
[13:55:01] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[13:55:07] *** Quits: ^-^hi (~nikw@user/-hi/x-1729478) (Ping timeout: 245 seconds)
[13:55:13] *** Joins: webNET4 (~0x100@32.211.211.39)
[13:57:12] <euouae> OK. it's like `git clone ssh://git@github.com/user/repo` to make it work. I'm just stupid
[13:57:20] <webNET4> yeah so if you don't check at the array access you have to check at the type level. either way you always have to check unless you figure out some weird trick 
[13:59:13] <euouae> Actually now I can't get it to work again. What the heck
[13:59:14] <webNET4> "safety padding" and using blocks of 255 just to prevent it from trashing other memory but it's still broken code
[14:00:17] *** Joins: joj_ (~joj@jojeee.xyz)
[14:00:20] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 244 seconds)
[14:00:28] <webNET4> man it's late/early. im outta here before i start rambling
[14:00:35] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[14:00:49] <mrig> euouae: ah, glad to hear that you have got it sorted, yes the hardware problems are often solved by turning the thing off and on again. :)
[14:00:49] *** Quits: joj (~joj@jojeee.xyz) (Read error: Connection reset by peer)
[14:00:50] <euouae> now I'm getting an issue about `~/.ssh/id_rsa_yubikey.pub` having an invalid format 
[14:01:09] <euouae> mrig, I'm encountering new issues and I've no idea what is going on. It worked and now it doesn't 
[14:01:16] *** Joins: jaysicks (~jaysicks@91-82-168-11.pool.digikabel.hu)
[14:01:46] <euouae> NOW I get sign_and_send_pubkey: signing failed for RSA "/home/fox/.ssh/id_rsa_yubikey.pub" from agent: agent refused operation
[14:01:56] <euouae> makes me want to scream
[14:02:36] *** Quits: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (Quit: Ping timeout (120 seconds))
[14:02:52] <mrig> whisper to it, don't scream :D
[14:02:54] *** Joins: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[14:03:27] *** Joins: sinhue (~mithrin@188-167-233-152.dynamic.chello.sk)
[14:03:31] <euouae> now I get the invalid format again. How is it possible that I get all these different errors 
[14:03:36] <euouae> without changing anything
[14:03:52] *** Quits: x003fgqwe (uid479614@id-479614.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[14:04:12] *** Quits: mehrdad2000[m] (~mehrdad20@2001:470:69fc:105::dbc2) (Ping timeout: 245 seconds)
[14:05:24] *** Joins: GreenAlpaca (~GreenAlpa@public-gprs227132.centertel.pl)
[14:05:57] <mrig> state is a complicated thing.
[14:06:19] <euouae> yeah I don't get why this is so finnicky 
[14:06:22] *** Joins: mehrdad2000[m] (~mehrdad20@2001:470:69fc:105::dbc2)
[14:06:24] *** Quits: gggp (~textual@111.63.14.116) (Ping timeout: 256 seconds)
[14:06:29] <mrig> especially within an origami construction.
[14:06:40] <euouae> well guess what, NOW it works
[14:06:42] * mrig folds euouae.
[14:07:32] <euouae> baaargh just crumble me and toss me into the bin
[14:07:45] <euouae> folding is too delicate for my current temperament
[14:08:02] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 245 seconds)
[14:08:05] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[14:08:12] *** Quits: Tips|Cloud (sid62231@id-62231.charlton.irccloud.com) ()
[14:08:25] *** Joins: Enitin (~Enitin@82.102.22.85)
[14:08:49] *** Joins: Tips|Cloud (sid62231@id-62231.ilkley.irccloud.com)
[14:09:42] *** Quits: GreenAlpaca (~GreenAlpa@public-gprs227132.centertel.pl) (Client Quit)
[14:09:52] <Akronymus> turning one monitor vertical was a great decision.
[14:10:00] *** Joins: GreenAlpaca (~GreenAlpa@public-gprs227132.centertel.pl)
[14:10:24] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Quit: Leaving)
[14:10:33] *** Quits: sinhue (~mithrin@188-167-233-152.dynamic.chello.sk) (Quit: Leaving)
[14:10:38] *** Joins: independent__ (~independe@95.144.68.39)
[14:10:40] *** Quits: audiocat (~audio@2603-8081-1801-3bb5-59c8-d7f9-3a37-49c7.res6.spectrum.com) (Ping timeout: 240 seconds)
[14:11:32] *** Quits: GreenAlpaca (~GreenAlpa@public-gprs227132.centertel.pl) (Changing host)
[14:11:32] *** Joins: GreenAlpaca (~GreenAlpa@user/greenalpaca)
[14:12:11] *** Quits: GreenAlpaca (~GreenAlpa@user/greenalpaca) (Client Quit)
[14:12:29] *** Joins: GreenAlpaca (~GreenAlpa@user/greenalpaca)
[14:14:15] *** Quits: varaindemian (uid73404@id-73404.charlton.irccloud.com) ()
[14:14:30] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[14:16:09] *** Joins: swagneko (~bit@user/nekobit)
[14:20:11] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[14:20:24] *** Joins: flynn (~mcbloch@user/flynn)
[14:22:41] *** Joins: swinnenb (~swinnenb@user/swinnenb)
[14:26:19] *** Quits: independent__ (~independe@95.144.68.39) (Remote host closed the connection)
[14:26:38] *** Joins: independent__ (~independe@95.144.68.39)
[14:29:59] <arahael> Akronymus: It's so underrated.  But I've noticed it depends on the monitor. Some really work badly in terms of viewing angles.
[14:30:03] *** Joins: AsenMx (~AsenMx@78.90.248.234)
[14:30:33] *** Joins: xsperry (~as@user/xsperry)
[14:31:58] <Akronymus> arahael for me it is a pretty good thinkvision monitur with 1440x2560
[14:32:05] <Akronymus> monitor*
[14:32:29] <arahael> Akronymus: Think vision sounds fancy.
[14:33:01] <Akronymus> Work monitor
[14:33:08] <Akronymus> 2 of those + laptop
[14:33:37] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[14:33:57] *** Joins: flynn (~mcbloch@user/flynn)
[14:34:29] <arahael> Very nice.
[14:34:40] <arahael> I have a Dell u-series I'm very happy with. 32" gloriness.
[14:34:44] <AsenMx> Hello, GITLAB-CI question here: I have include template in my gitlab-ci. How can I make the job that is included from template to be a manual step?
[14:34:48] <smallvil_> im bored af
[14:36:38] <Akronymus> Wow, 27 inches.
[14:37:12] *** Quits: silasfox (~sbv@2001-4dd6-4b95-0-383d-e94d-aa82-1e8f.ipv6dyn.netcologne.de) (Ping timeout: 245 seconds)
[14:38:32] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[14:38:43] *** Quits: euouae (~euouae@user/euouae) (Quit: Client closed)
[14:39:04] *** Joins: silasfox (~sbv@2001-4dd6-4b95-0-383d-e94d-aa82-1e8f.ipv6dyn.netcologne.de)
[14:41:01] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 252 seconds)
[14:41:09] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 244 seconds)
[14:41:48] *** Joins: scoobydoo_ (~scooby@user/scoobydoo)
[14:41:52] *** Quits: scoobydoo_ (~scooby@user/scoobydoo) (Excess Flood)
[14:41:58] *** Joins: Enitin (~Enitin@82.102.22.84)
[14:42:12] *** Joins: scoobydoo_ (~scooby@user/scoobydoo)
[14:42:14] *** Quits: scoobydoo_ (~scooby@user/scoobydoo) (Excess Flood)
[14:42:28] <mrig> I think I'm going to rebind my k'n'r and turn it into a hard back.
[14:42:35] *** Joins: scoobydoo_ (~scooby@user/scoobydoo)
[14:42:37] *** Quits: scoobydoo_ (~scooby@user/scoobydoo) (Excess Flood)
[14:42:41] <homura> smallville7123: if you're bored give this a listen https://open.spotify.com/track/4sGylyGhQaOzhi77fLrMmP
[14:42:43] <bayaz> Title: Big Poppa 
[14:42:55] <smallville7123> no
[14:42:57] <mrig> if I glue in some tissue down the spine it will open nicely.
[14:43:00] <smallville7123> lol
[14:43:23] *** Joins: scoobydoo_ (~scooby@user/scoobydoo)
[14:43:24] *** Quits: scoobydoo_ (~scooby@user/scoobydoo) (Excess Flood)
[14:43:35] <pyzozord> when I create a new file it has group permisisons rw-, why is that? Should the file be default have only permissions for current user?
[14:43:45] *** Joins: scoobydoo_ (~scooby@user/scoobydoo)
[14:43:47] *** Quits: scoobydoo_ (~scooby@user/scoobydoo) (Excess Flood)
[14:43:47] *** Quits: scoobydoo (~scooby@user/scoobydoo) (K-Lined)
[14:43:59] <GeDaMo> There's a setting for default permissions
[14:44:04] <homura> i love it when you call me big poppa
[14:44:07] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[14:44:18] *** Joins: flynn (~mcbloch@user/flynn)
[14:44:20] <smallville7123> dude confirmed
[14:44:24] <smallville7123> XD
[14:44:52] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[14:45:00] <GeDaMo> umask, that's it
[14:45:06] <pyzozord> thanks!
[14:45:10] *** Quits: Samian (~Sami@2620:10d:c091:480::1:3a90) (Ping timeout: 240 seconds)
[14:45:17] <pyzozord> is it reasonable to set a umask to just current user?
[14:46:05] <GeDaMo> I don't see why not
[14:46:16] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[14:46:19] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 244 seconds)
[14:46:37] <piou> pyzozord: it's even common to use umask for a single process
[14:46:48] *** Joins: user51 (~user51@176.228.90.248)
[14:47:31] <smallville7123> re-creating the android view heirarchy is difficult and boring cus i cant think of anything which would be useful to test each view against ;-;
[14:49:13] <piou> pyzozord: that said, do you have any issue with group rw- ? It's unlikely to cause issues, especially since I doubt there are other users in your user group
[14:49:56] <pyzozord> piou: yeah nvi doesn't want to read .exrc files with write group permission for security reasons
[14:50:22] <pyzozord> and I just enabled my nvi fork to have local .exrc files so that I can have different indentation styles in different projects
[14:50:37] <piou> That's tight ^_^
[14:51:34] <piou> Can't say it adds much to security in most contexts really, but if it can ease their minds...
[14:51:42] <pyzozord> yeah I don't know why I waited so long. nvi had that option already coded in, It just had a safty on, had to remove the safety in the code and now local .exrc are working like magic. Took me 1 minute. It took me hours before to keep reformatting the files
[14:52:56] <Akronymus> piou for most files, group rw- seems fine.
[14:53:14] <piou> it is
[14:53:36] <Akronymus> For stuff like a password file for something like keepass I'd go with user rw only.
[14:53:48] *** Quits: Mija (~Mija@user/mija) (Quit: Mija)
[14:53:50] <Akronymus> (Of course the password file is encrypted)
[14:54:40] *** Quits: flynn (~mcbloch@user/flynn) (Ping timeout: 240 seconds)
[14:55:31] <piou> Thing is, that's asking the wrong question. I've never encountered a system where multiple users were in the same user group (by which I mean, a group related to the user directly, so the piou group for the piou user). Not saying it can't happen or be useful, but I've never seen it, it's generally much easier to create a separate group focused on a purpose rather than adding users to user groups.
[14:55:37] <piou> This means that in pretty much all cases to access a file with group rights you need to be the user...and are therefore accessing it with user rights.
[14:56:22] <piou> Setting group rights is only useful if you decide to have multiple users in the associated group.
[14:56:29] <GeDaMo> It would have been more common in the olden days when people actually shared a computer :P
[14:56:55] <piou> And even then, create the nvirc group or something if you really want to
[14:57:08] <GeDaMo> Yeah, there would have been project or department groups
[14:57:12] *** Quits: chomwitt (~chomwitt@2a02:587:dc1c:8c00:12c3:7bff:fe6d:d374) (Ping timeout: 245 seconds)
[14:57:42] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[14:58:25] *** Joins: flynn (~mcbloch@user/flynn)
[14:58:33] *** Joins: Enitin (~Enitin@82.102.22.86)
[15:01:19] *** Quits: GreenAlpaca (~GreenAlpa@user/greenalpaca) (Quit: WeeChat 3.2)
[15:01:39] *** Quits: AsenMx (~AsenMx@78.90.248.234) (Remote host closed the connection)
[15:01:43] *** Joins: GreenAlpaca (~GreenAlpa@user/greenalpaca)
[15:02:03] *** Joins: AsenMx (~AsenMx@78.90.248.234)
[15:02:17] <arahael> piou: I'd have to check my work systems, but I'm pretty sure I'm not in my own group there.
[15:02:23] <arahael> piou: Syncrhonised accounts and all, too.
[15:02:27] <smallville7123> re-creating all the widgets that android has *
[15:03:08] <piou> arahael: interesting
[15:03:16] <homura> i am a programmer
[15:03:32] <arahael> piou: Everything's in active directory, I suspect.
[15:06:49] *** Quits: independent__ (~independe@95.144.68.39) (Remote host closed the connection)
[15:06:56] *** Joins: Guest5789 (~Guest57@160.238.74.19)
[15:07:02] <Guest5789> Hi 
[15:07:06] *** Joins: jazzy2 (~jaziz@172.58.36.22)
[15:07:07] *** Joins: independent__ (~independe@95.144.68.39)
[15:07:23] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[15:07:29] <Guest5789> Is it common for employers asking their employee to resign?
[15:07:46] <pyzozord> Guest5789: yes
[15:07:47] <Akronymus> Guest5789 depends on how badly you screwed up.
[15:08:00] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[15:08:01] <Akronymus> Also: often such a thing is used to get out of paying benefits.
[15:08:12] *** Joins: flynn (~mcbloch@user/flynn)
[15:08:14] <pyzozord> they rather you resigned then they fired you, if you are a country protecting employee more than employer
[15:08:24] <GeDaMo> Are they offering a severance package?
[15:08:26] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[15:08:48] <Akronymus> pyzozord over here we have X time of protection after getting fired to actually no longer working.
[15:08:59] *** Quits: jazzy2 (~jaziz@172.58.36.22) (Client Quit)
[15:09:12] <Akronymus> But in case of mutual dissolution of the contract it can be expedited to be immediate.
[15:09:14] <Guest5789> AkechiShiro  pyzozord  I was doing my job very fine and suddenly they stopped giving me work and today HR ask me to fire and gave some notice period. I am willing to do that but it costed my time so I am unsure what to do
[15:09:22] <Guest5789> Should I obey them and resign? 
[15:09:22] *** Joins: ugly (~ugly@2804:431:d77e:3a94:a613:a23:fed8:efdb)
[15:09:44] <Akronymus> Talk to a lawyer?
[15:09:45] <Guest5789> ask me to resign*
[15:09:48] <Guest5789> not fire
[15:10:03] <Guest5789> GeDaMo no 
[15:10:10] <Guest5789> they are willing to pay 1 month salary
[15:10:12] <Akronymus> And where you work at (country/state) is very important.
[15:10:23] <Akronymus> Along with under what kind of contract.
[15:10:23] <pyzozord> if no then I don't see why should you help them screw you over
[15:10:28] <piou> Guest5789: would definitely talk to a lawyer, that's more complex than what ##programming can handle to provide useful advice
[15:10:42] <Akronymus> Hence, talk to a lawyer.
[15:10:56] <pyzozord> yeah talk to a lawyer, I agree
[15:11:05] <piou> Guest5789: lawyers aren't necessarily expensive too, you should really consider it
[15:11:05] <Akronymus> What country are you from?
[15:11:07] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 244 seconds)
[15:11:08] <Guest5789> piou I got no time for lawyers but want to know experts opinion here
[15:11:18] <Akronymus> lawyers are the experts.
[15:11:23] <Akronymus> CYA
[15:11:25] <Guest5789> AkechiShiro India
[15:11:26] <Akronymus> Cover Your Ass
[15:11:30] <piou> Guest5789: why don't you have time? Take the time, what are they going to do? Fire you?
[15:11:32] <smallvil_> creating and testing widgets is difficult ;-;
[15:11:39] <mrig> There are lawyers who hang out in #GNU, so far as I am aware.
[15:11:49] *** Quits: swagneko (~bit@user/nekobit) (Quit: uninstall gentoo)
[15:12:04] <Guest5789> piou I am not sure  HR talked so polite and asked me to resign
[15:12:04] <piou> Guest5789: that's an important decision to take and people pressing you into a decision without consel is a classic tactics to avoid you working out your best interest
[15:12:13] <Akronymus> ##law may help
[15:12:19] <piou> Guest5789: so take the time, drop off IRC and see a lawyer
[15:12:20] <Akronymus> HR isn't there for you.
[15:12:27] *** Joins: chomwitt (~chomwitt@2a02:587:dc1c:8c00:12c3:7bff:fe6d:d374)
[15:12:31] <Akronymus> HR is there for covering the companies ass.
[15:12:49] <piou> Clearly they don't want to deal with firing you so take the time
[15:12:54] <piou> It's important
[15:13:09] <Guest5789> piou okay
[15:13:11] <piou> Don't listen to strangers on IRC that don't even live in your country or know its laws and context
[15:13:20] <Akronymus> Over here, in austria, there are many lawyers who actually provide free services in case you are getting fired.
[15:13:33] <Guest5789> piou but that company exist in many countries
[15:13:33] <Akronymus> Altough most of them through the union.
[15:13:43] <Akronymus> (Unions over here actually are a good thing)
[15:13:51] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[15:13:54] *** Joins: juliaEnv (~juliaEnv@ip-86-49-255-181.net.upcbroadband.cz)
[15:13:57] <piou> Guest5789: that doesn't change a thing
[15:13:58] <pyzozord> even investing 1/10th of a salary in lawyer consultation is a good investment in this case imo
[15:14:01] <Akronymus> Talk to a lawyer that knows your local labour laws.
[15:14:15] <Akronymus> s/labour/employment
[15:14:21] <piou> Guest5789: the company can be american but it's still about the laws in your country
[15:14:36] <Guest5789> pyzozord Akronymus okay
[15:14:42] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 245 seconds)
[15:14:59] <Akronymus> ##law may know where to point you towards Guest5789
[15:15:21] *** Joins: Atque (~Atque@user/atque)
[15:15:24] <Guest5789> Akronymus I am in there thank you
[15:15:25] *** vinleod is now known as vdamewood
[15:15:30] <mrig> Oh cool, there is a law channel too.
[15:15:51] <pyzozord> gotta love irc and libera :)
[15:15:56] <mrig> yep
[15:16:30] <mrig> snakes and ladders though, so long as one is aware of that.
[15:16:38] *** Joins: peteyboy1 (~peteyboy1@95.169.235.10)
[15:16:48] <piou> Guest5789: tell them from the beginning where you are, at least that should help you avoid advices relevant to the US or Germany or anywhere else
[15:17:13] <pyzozord> mrig: it took me a moment to realize what you mean, that's a cool way to put it
[15:17:17] <mrig> But I've faith in human nature still.
[15:17:36] <Guest5789> piou okay
[15:18:02] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[15:18:04] <Akronymus> Anything legalese I usually instantly defer to "contact a/your lawyer"
[15:18:13] *** Joins: flynn (~mcbloch@user/flynn)
[15:18:21] <mrig> Akronymus: this is fine if you have the resources.
[15:19:08] *** Quits: aniruddha (uid340443@id-340443.charlton.irccloud.com) ()
[15:19:23] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[15:19:40] <Akronymus> mrig there are usually ways to have it be pro bono work and/or only pay afterwards after the lawyer helped you/only pay a part of what the lawyer helped getting you.
[15:21:11] *** Joins: akevinhuang (~thekevinh@user/thekevinhuang)
[15:21:36] <mrig> not everyone fits into the machinations mindset and these types get clobbered. It is also often the case that the probono is a way for a dysfunctional education systems to provide work for people who are otherwise not going to get work.
[15:21:38] <Akronymus> https://www.probono-india.in/ Guest5789 found this
[15:21:48] <mrig> not all  cases obviously but, worth considering.
[15:22:46] <Guest5789> Akronymus better to find new job than fighting for justice in countries like India
[15:22:50] *** Joins: swagneko (~bit@user/nekobit)
[15:23:00] *** Quits: akevinhuang2 (~thekevinh@user/thekevinhuang) (Ping timeout: 244 seconds)
[15:23:03] <Akronymus> I meant for legal counsel
[15:23:09] <Akronymus> Rather than filing a lawsuit or something
[15:23:16] *** Joins: APic (apic@apic.name)
[15:23:25] <pyzozord> I think this is a good risk vs reward ratio. Risk is 1/10 of a salary, reward may be even 3 or 6 salaries
[15:23:26] <piou> Guest5789: it's not about fighting for justice here, it's about weighing your choices to know what's best for you
[15:23:36] <smallvil_> how do you come up with inspiration for new wigets?
[15:23:38] *** Quits: monchi (sid347418@id-347418.charlton.irccloud.com) ()
[15:23:48] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[15:23:53] *** Joins: monchi (sid347418@id-347418.ilkley.irccloud.com)
[15:24:06] *** Joins: mickey (~user@user/mickey)
[15:24:09] <piou> Guest5789: you're not likely to file a lawsuit, that's not what a lawyer is for there, it's about understanding your rights and knowing what you can and can't do
[15:24:41] <Guest5789> piou  For me getting new job is 15days of effort but if I accept them it is accepting that I am wrong
[15:24:44] <Akronymus> Completely on a tangent: I find it funny that we used to write UI in code, then went to drag and drop editors and now write it in "code" again. (pure code -> winforms visual editor in visual studio -> wpf with xaml)
[15:25:13] *** Joins: rcoote (~rcoote@221-224-024-217.ip-addr.vsenet.de)
[15:25:38] <piou> Guest5789: I don't see what this changes to the matter, that's still a question for a lawyer
[15:25:42] <pyzozord> Guest5789: I wouldn't focus on ego in cases like this. I know it's hard, but try to think coldly and materialistically.
[15:26:07] <Guest5789> piou okay
[15:26:13] <Guest5789> pyzozord  I agree
[15:27:02] *** Joins: Twipply (~Twipply@user/twipply)
[15:27:03] *** Quits: GreenAlpaca (~GreenAlpa@user/greenalpaca) (Quit: WeeChat 3.2)
[15:27:15] *** Joins: gggp (~textual@60.10.194.45)
[15:27:28] <pyzozord> The stakes are higher than a brused ego, the stakes are your livelyhood, your source of income, that's how you support yourself.
[15:28:20] <pyzozord> No time for getting offended, this is survival-level problem.
[15:28:26] <Akronymus> Or a potential fund to have a few months of financial stability to search for a job.
[15:28:39] <Akronymus> And/or educating yourself.
[15:28:46] <mrig> Guest5789: it is not particular to India, same is true in most countries, this is human nature doing its thing.
[15:29:07] *** Joins: GreenAlpaca (~GreenAlpa@user/greenalpaca)
[15:29:09] *** Quits: GreenAlpaca (~GreenAlpa@user/greenalpaca) (Client Quit)
[15:29:15] <mrig> In France there is the opposite problem, non give full time work because of the worker protection laws.
[15:29:34] *** Joins: GreenAlpaca (~GreenAlpa@user/greenalpaca)
[15:29:59] <Akronymus> https://www.arbeiterkammer.at/index.html We have this institution.
[15:30:03] <bayaz> Title: Arbeiterkammer 
[15:30:03] <Guest5789> hmm thank you all  
[15:30:11] *** Quits: itok (sid418430@2001:67c:2f08:3::6:627e) ()
[15:30:17] <Akronymus> Basically everyone can go to them when they need legal counsel for work related stuff.
[15:30:19] <Akronymus> For free.
[15:30:49] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:31:03] *** Joins: itok (sid418430@id-418430.ilkley.irccloud.com)
[15:31:59] *** Joins: dsrt^ (~dsrt@wsip-98-188-244-188.mc.at.cox.net)
[15:33:20] *** Quits: gggp (~textual@60.10.194.45) (Ping timeout: 244 seconds)
[15:35:51] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[15:35:54] *** Joins: Mangy_Dog (~Mange@user/mangy-dog/x-7397214)
[15:36:09] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:37:15] *** Quits: independent__ (~independe@95.144.68.39) (Remote host closed the connection)
[15:37:22] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) ()
[15:37:37] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[15:37:43] <pyzozord> I hate how complex gcc is, but I do love that it has a flag for everything
[15:37:44] *** Joins: independent__ (~independe@95.144.68.39)
[15:38:14] *** Quits: Guest5789 (~Guest57@160.238.74.19) (Quit: Client closed)
[15:38:40] *** Joins: rtypo (~alex@user/rtypo)
[15:40:05] <Akronymus> I wish more languages had sexpressions
[15:40:28] <Akronymus> Altough, really torn between them and ML style syntax.
[15:40:37] <mrig> prefix notation, what is so good about that?
[15:40:39] <edgar-rft> Akronymus: "Arbeitskammer" sounds as if all really *working* people in austria fit into a single chamber :-)
[15:40:48] * vdamewood hands pyzozord a clang.
[15:41:24] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[15:41:24] <Akronymus> edgar-rft well, "kammer" means something more like department in this case.
[15:41:30] <Akronymus> mrig easy to parse.
[15:41:42] <Akronymus> No operator precedence.
[15:41:46] <mrig> Oh that is polish notation too.
[15:42:00] <pyzozord> vdamewood: isn't clang similarly complex to gcc?
[15:42:07] <Akronymus> reverse, rather, afair mrig
[15:42:11] <mrig> revers polish means that you can collect the data first and then decide what to do with it.
[15:42:21] <mrig> Which is a bit of an advantage.
[15:42:23] <arahael> Akronymus: Arguably, haskell has them, with optional parens. :)
[15:42:28] <Akronymus> Oh nvm. Reverse is postfix
[15:42:48] <vdamewood> pyzozord: Well, not in all ways.
[15:43:00] <mrig> yes reverse is operator after collection.
[15:43:35] <Akronymus> Kinda funny that I like both, f# (for the strict type system/being static) and lisp (basically the most dynamic language out there)
[15:43:47] <vdamewood> I want to try reverse hungarian notation.
[15:44:07] <mrig> would be a jit compiler.
[15:44:16] <Akronymus> Eww, hungarian notation
[15:44:17] <mrig> java runs on this.
[15:44:31] <vdamewood> Akronymus: Ah, but this is *reverse* hungarian notation.
[15:44:49] <Akronymus> Which is worse.
[15:44:51] *** Quits: independent__ (~independe@95.144.68.39) (Remote host closed the connection)
[15:45:00] <vdamewood> Akronymus: You don't want to loop over CountInt?
[15:45:09] *** Joins: independent__ (~independe@95.144.68.39)
[15:45:10] <Akronymus> I have a string for a name.
[15:45:17] <Akronymus> So, that'd be names
[15:45:20] <pyzozord> People really liked hungarian notation and then really started hating it. I didn't get the memo.
[15:45:22] <Akronymus> Under reverse hungarian
[15:45:28] <vdamewood> Naw, NameStr
[15:45:39] <vdamewood> or name_s
[15:45:42] <mrig> pyzozord: C++ perhaps?
[15:46:00] <edgar-rft> Poland, Austria, Hungary sounds more as we want to loop over the entire continent.
[15:46:04] <vdamewood> pyzozord: Microsoft really liked Hungarian notation.
[15:46:07] <mrig> I'm not sure of the dates involved.
[15:46:47] <mrig> edgar-rft: not to the CS guardians though, it is all Greek to them :P
[15:47:06] <vdamewood> pyzozord: Hungarian notation was useful in languages like B (or was it BCPL) where there was only one type, a 16-bit bit pattern. Could be an int, a signed int, or a pointer.
[15:47:40] <vdamewood> And you could use the same variable for multiple types.
[15:47:47] <arahael> vdamewood: The original idea behind hungarian was, and is, good, though.
[15:47:53] <arahael> Let me find the article.
[15:47:56] <pyzozord> vdamewood: hmm yess, I think my first language I learned was c++ on windows so I must have taken hungarian notation as status quo mistakenly, and never updated that assumption later
[15:48:01] <mrig> I use it in C a lot.
[15:48:10] <mrig> well in all coding that has name spaces.
[15:48:29] <arahael> https://www.joelonsoftware.com/2005/05/11/making-wrong-code-look-wrong/
[15:48:31] <bayaz> Title: Making Wrong Code Look Wrong 
[15:48:32] <arahael> It's really good.
[15:48:33] <mrig> suffix and postfix naming
[15:49:27] <Akronymus> Hungarian notion isn't really needed anymore, as most IDE's allow you to see the type at any time.
[15:49:28] <arahael> And more importantly, the article distinguishes between apps and systems hungarian.
[15:49:29] <vdamewood> arahael: Pff, when has Joel Spolsky ever developed anything useful. Is there even a Stack Overflow question about this?
[15:49:34] <arahael> Akronymus: I disagree.
[15:49:37] <vdamewood> s/useful./useful?/
[15:50:08] <mrig> Akronymus: I'd argue that it removes the need of an IDE and leads consequently to better code.
[15:50:16] *** Quits: GreenAlpaca (~GreenAlpa@user/greenalpaca) (Quit: WeeChat 3.2)
[15:50:40] *** Joins: GreenAlpaca (~GreenAlpa@user/greenalpaca)
[15:50:58] <mrig> because the code has to be better organised.
[15:51:24] <Akronymus> IMO the one true way to organize code is from top to bottom.
[15:51:25] <arahael> Akronymus: It's useful to prefix the *intent* of your types.  Eg, using 'x' as a prefix for variables that represent the horizontal offset from the origin, lbl prefixes for labels, etc.
[15:51:32] <Akronymus> No references to anything declared later.
[15:51:39] <arahael> Akronymus: But prefixing variables with their actual mechanical type is indeed just stupid.
[15:51:45] <Akronymus> Not even through the use of placeholders.
[15:52:04] *** Quits: ishan (~ishan@2400:8904::f03c:91ff:fe9e:a26f) (Ping timeout: 250 seconds)
[15:52:07] <Akronymus> arahael oh, intent makes perfect sense to do.
[15:52:24] <Akronymus> Altough, I'd just put the intent into the name itself.
[15:52:30] <mrig> The last C++ project that I put my nose into that is clearly written in an IDE and using all the build tools, was a complete mess.
[15:52:33] <arahael> Akronymus: Yeah, well, that's what that article talks about.
[15:52:36] <Akronymus> I'd just use "horizontalOffset"
[15:52:43] <arahael> Akronymus: The difference between apps and systems hungarian.
[15:52:51] <Akronymus> Gotcha.
[15:52:51] *** Joins: ishan (~ishan@li2028-175.members.linode.com)
[15:52:55] <mrig> It was funny because the author or maintainer could not work out how it was that I had read their private notes :D
[15:53:19] <arahael> Akronymus: Amusingly, the article also talks about how people just latch on the word "hungarian". ;)
[15:53:24] <bjs> both kinds are sort of outdated ever since we learned that the world doesn't end once you reach 80 characters on a line
[15:53:27] <Akronymus> You can make a mess inside and outside an IDE.
[15:53:42] <Akronymus> I'd argue that inside an ide it usually works out better.
[15:53:46] <pyzozord> do you guys read those articles like the one linked from joelonsoftware.com a moment ago? That's so long, it would take me an hour to read it
[15:53:58] <AsenMx> Hello, does anyone know in Gitlab CI  how to make include of template to be a manual job?
[15:54:01] <Akronymus> I must admit I didn't.
[15:54:44] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[15:54:50] <arahael> Yeah, joel's articles are generally good, but old style.  For today's people online, it's too long.
[15:54:56] *** Joins: flynn (~mcbloch@user/flynn)
[15:55:12] <arahael> vdamewood: And well, he did start stackoverflow. :)
[15:55:34] * arahael thinks he did, anyway.
[15:55:41] <arahael> vdamewood: I'm not sure he actually *codes* much, though.
[15:56:19] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[15:56:24] <Akronymus> https://dev.to/klimcio/file-order-in-f-the-most-annoying-thing-for-a-beginner-38dc <-- the only true way to structure source IMO.
[15:56:24] <bayaz> Title: File Order in F# - the most annoying thing for a beginner? 
[15:56:40] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 240 seconds)
[15:57:05] <Akronymus> Cyclic dependencies are EVIL
[15:57:28] <mrig> yes stackoverflow and also that team workflow program, trello if I'm not mistaken.
[15:57:31] <Akronymus> https://fsharpforfunandprofit.com/posts/cyclic-dependencies/
[15:57:32] <bayaz> Title: Cyclic dependencies are evil | F# for fun and profit 
[15:57:36] <pyzozord> Akronymus: I don't remember, I'm checking for you
[15:57:53] <pyzozord> AsenMx: ^
[15:57:55] <mrig> cyclic dependencies make code illegible.
[15:58:01] *** Quits: elgraz (~elgraz@151.65.9.160) (Ping timeout: 252 seconds)
[15:58:18] <Akronymus> Hence strict top to bottom with no way to reference future stuff is the way to go.
[15:58:32] <mrig> ruins the readability, cause you cant follow the logic.
[15:58:44] <AsenMx> pyzozord, ?
[15:58:46] <Akronymus> Well, unless it is intra-file recursion 
[15:59:00] <Akronymus> Because then you can see it in one place.
[15:59:02] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[15:59:12] <pyzozord> AsenMx: I think you just add "when: manual"
[15:59:25] <mrig> Akronymus: na, a good understanding of separation of concerns interfaces and dependency flow makes for nice reading.
[15:59:26] <Akronymus> If you need to reference something declared later, you have made some wrong design decisions.
[15:59:51] <mrig> if the code is logic the reading it is easy.
[15:59:55] <pyzozord> AsenMx: https://docs.gitlab.com/ee/ci/jobs/job_control.html#create-a-job-that-must-be-run-manually
[15:59:56] <bayaz> Title: Choose when to run jobs | GitLab 
[16:00:12] *** Quits: df_data (sid466269@charlton.irccloud.com) ()
[16:00:17] <Akronymus> mrig I meant it more in the sense that sometimes you can't get out of having something mutually recursive. But those are usually so tightly coupled as to make sense to put in the same file.
[16:00:25] *** Joins: df_data (sid466269@id-466269.ilkley.irccloud.com)
[16:00:28] <Akronymus> Mind you, same file can be multiple modules in f#.
[16:00:28] <mrig> if you need to hole umpteen things in mind whilst flitting about all over the place then it is nasty to read.
[16:00:44] <AsenMx> pyzozord, how do i use when on an include?
[16:00:49] <mrig> Akronymus: right yes, same with any language really.
[16:00:58] <mrig> any code rather.
[16:00:59] <Akronymus> mrig I highly recommend reading the series of posts I linked.
[16:01:10] <Akronymus> From fsharpforfunandprofit
[16:01:13] *** Joins: mickey (~user@user/mickey)
[16:01:21] <mrig> f# on cyclical dependacies?
[16:01:22] <Akronymus> Just a 3 part series
[16:01:38] <Akronymus> https://fsharpforfunandprofit.com/posts/cyclic-dependencies/ that one
[16:01:39] <bayaz> Title: Cyclic dependencies are evil | F# for fun and profit 
[16:01:39] <pyzozord> AsenMx: your template must support it
[16:02:00] <mrig> Akronymus: yes will do thanks for the link, am studying this subject at the moment.
[16:02:00] *** Joins: Leone (~Leo@24.140.234.189)
[16:02:12] <mrig> it seems to be the root of all coding evils.
[16:02:14] <Akronymus> It is nice when the language itself enforces no cylces.
[16:02:25] <mrig> Akronymus: I love/hate this about go.
[16:02:33] <AsenMx> pyzozord, not sure how every time i ask here something you answer me with something completely irrelevant to my question
[16:02:41] <mrig> fascinating to come back to a little C after learning more about it.
[16:03:17] <Akronymus> There are some languages that change how you think about programming.
[16:03:25] <mrig> Akronymus: it was something that was bugging me, but I did not know what it was about C, that stopped me from learning a build system.
[16:03:40] <Akronymus> Haskell, lisp, assembly, smalltalk and erlang would be good examples for those IMO
[16:03:45] <mrig> needed to pin down what it was, seems this is it.
[16:03:51] <beaky> nice i like haskell
[16:03:56] <GeDaMo> Don't forget Forth! :P
[16:04:00] <AsenMx> pyzozord, https://pastebin.com/NmMDrbS5 please show me how to make that include to be a manual step and everything that is in the include to be manual step
[16:04:02] <bayaz> Title: stages: - static test - build - test - review - deploy - produ - Pastebin.com 
[16:04:02] <mrig> I want to learn to code C in a way that does not have issues.
[16:04:05] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[16:04:12] <Akronymus> Haven't ever interacted with any forth.
[16:04:13] <mrig> then I will have grokked it.
[16:04:30] <Akronymus> Are you using make or cmake?
[16:04:31] <mrig> me either, but I do find it appealing. 
[16:04:40] <mrig> I'm using make.
[16:04:51] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[16:04:53] <Akronymus> I'd recommend using cmake instead.
[16:04:55] <mrig> and want to fully understand it before moving on.
[16:04:58] <Akronymus> Allegedly much better.
[16:05:11] <mrig> na, this is where I am learning about cyclic dependencies.
[16:05:17] <pyzozord> AsenMx: I told you. The template must support it.
[16:05:38] <mrig> I know why my 'hunch' was telling me not to now, am happy about this.
[16:05:45] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[16:05:50] <AsenMx> pyzozord, support it how? i don't think we are talking about the same stuff
[16:05:57] <mrig> Go has taught me this, I think the was or is a particular bugbear of Rob Pikes.
[16:06:05] <mrig> which would make sense.
[16:06:44] <AsenMx> pyzozord,  you can't put when on an include dude you need to wrap it in some type of job
[16:06:47] <mrig> I imagine that the practice will be good for most languages though, whether or not they get around the issue in the compiler.
[16:07:09] <pyzozord> AsenMx: of course you can't. The template must support it via some variables that it uses
[16:07:09] <Akronymus> In C, you'd use a prototype to be able to reference a "future" implementation of a a function.
[16:07:33] <AsenMx> pyzozord, i don't want to change the template man this is not the thing im asking 
[16:07:49] <AsenMx> pyzozord, you are not answering anything of the things im asking
[16:07:55] <pyzozord> you cannot not change the template
[16:08:05] <pyzozord> And frankly, I'm done talking to this one. Next!
[16:08:24] * Akronymus laughs in LISP
[16:09:06] <AsenMx> pyzozord, yeah your input is as useless as it can be, don't know why every time you answer me with some non related shit
[16:09:42] <user51> Akronymus: lisp has been on my mind lately
[16:10:00] <user51> but ican't get c out of my mind anyway. it's pointers here, pointers there..
[16:10:16] <Akronymus> I was referring to this: `you cannot not change the template`
[16:10:27] <Akronymus> Oh wait, cannot not?
[16:10:33] <Akronymus> I must've overlooked the not
[16:10:36] <pyzozord> yeah, cannot not
[16:10:44] <user51> !!can
[16:10:46] <pyzozord> canon't
[16:10:51] <Akronymus> Must?
[16:10:58] <pyzozord> precisely
[16:11:18] *** Joins: elgraz (~elgraz@151.65.9.160)
[16:11:21] <Akronymus> I thought you were saying you can't change templates, hence why I did the lisp thing, because in there you can actually.
[16:11:25] <Akronymus> But I digress
[16:12:19] <pyzozord> Yeah I get that, no this was really "your template must have a variable that controls this, or you need to change the template so that it has the variable that controls this"
[16:13:27] <Akronymus> https://stackoverflow.com/a/5396824 Found someone that put it into better words than I could mrig
[16:13:28] <bayaz> Title: How to organize F# source of large project (>300 classes) in Visual Studio? 
[16:14:31] <mrig> Akronymus: I fully agree with you, though using other languages the issues are the same.
[16:14:36] *** spynx is now known as spynxic
[16:14:47] <mrig> IDE's compound this problem, it seems.
[16:14:55] <mrig> unless the language prevents it.
[16:15:04] <Akronymus> Oh, that's fair.
[16:15:33] <Akronymus> Only ever having to look into one direction to see what can be referenced by something is quite useful.
[16:15:43] <mrig> yep
[16:15:59] <mrig> and makes finding  a starting point for reading much easier.
[16:16:10] <mrig> a way into the code.
[16:16:12] <Akronymus> Start at the bottom
[16:16:15] <Akronymus> And read upwards
[16:17:01] <mrig> I like when code is grouped into roughly 3 stages as much as is possible.
[16:17:04] *** Joins: saribro (~swinnenb@user/swinnenb)
[16:17:30] *** Joins: gitgood (~gitgood@host-78-145-140-210.as13285.net)
[16:17:41] <Akronymus> Eh, I think that as many layers as needed to eliminate all circular dependcies is better.
[16:17:49] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 252 seconds)
[16:17:58] <mrig> when the top down structure is easy to find and problems confined by bottom up reading.
[16:18:29] <mrig> sure yes, that's a gross simplification to depict the structure.
[16:18:44] <Akronymus> In the 3rd entry of the series I linked you it shows an example of adding layers to reduce complexity
[16:18:53] *** Quits: psb (sid500598@user/psb) ()
[16:18:59] <mrig> this is all also spoken about in the SOLID sermons.
[16:19:09] *** Joins: psb (sid500598@user/psb)
[16:19:16] *** Quits: krin (sid500722@user/krin) ()
[16:19:29] <mrig> I only say 2 links, not read them yet, just organised them into tabs in the work reading list.
[16:19:31] *** Joins: krin (sid500722@user/krin)
[16:19:31] *** Quits: greyblue9 (sid500829@id-500829.charlton.irccloud.com) ()
[16:19:47] *** Joins: greyblue9 (sid500829@id-500829.ilkley.irccloud.com)
[16:19:51] <Akronymus> >open to extension
[16:19:53] *** Joins: Enitin (~Enitin@82.102.22.85)
[16:19:56] <Akronymus> Not a fan of that.
[16:19:58] <mrig> ah yes got them.
[16:20:01] *** Quits: swinnenb (~swinnenb@user/swinnenb) (Ping timeout: 252 seconds)
[16:20:08] <Akronymus> Inheritance is one of the roots of MANY evils.
[16:20:21] <mrig> open to extension is not inheritance though.
[16:20:28] <mrig> it is composition.
[16:20:49] <Akronymus> In most cases IME it is done through inheritance.
[16:20:52] <paulo> Akronymus: is wealth inheritance also the root of evils?
[16:20:55] <Akronymus> At least in OOP
[16:21:07] <mrig> Yes that's a big misunderstanding though it would seem.
[16:21:22] <mrig> oop in the hands of coders who are not ready for it perhpas?
[16:21:26] <Akronymus> Of course composition would be better.
[16:21:33] *** Quits: GreenAlpaca (~GreenAlpa@user/greenalpaca) (Quit: WeeChat 3.2)
[16:21:34] <Akronymus> OOP is inherently flawed IMO.
[16:21:49] <mrig> the notion that it is easier for beginners is flawed.
[16:21:59] *** Joins: GreenAlpaca (~GreenAlpa@user/greenalpaca)
[16:22:09] <mrig> you got to know why in my opinion to be able to apply it.
[16:22:09] <Akronymus> But back to the topic: In functional languages you don't really extend anything but rather construct functionality out of smaller things.
[16:22:25] <mrig> sure yes.
[16:22:45] <Akronymus> Which enables compile time checking that you deal with all possible values of something, for example.
[16:23:21] <mrig> but you can contain procedural code with state within a subsection though, for the sake of feasibility; And unit tests over the in and the outs.
[16:23:26] <Akronymus> And you can always use existing data structures to pack them into larger one.
[16:23:32] <mrig> same thing really.
[16:23:51] <Akronymus> Then use the functionality that already exists for that smaller data and use it, in the context, of the bigger date
[16:24:02] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[16:24:04] <Akronymus> (Unpack, send through function, repack, for example)
[16:24:27] <mrig> I code C as you are describing, at least I aspire to.
[16:24:42] <mrig> an go lets you construct the same too.
[16:24:58] <mrig> though the types are likely quite different.
[16:24:58] <[itchyjunk]> my hw is due today and my professors autograder is not ready yet
[16:25:04] <Akronymus> C doesn't help in dealing with completeness of something.
[16:25:04] <[itchyjunk]> but new hw will be assigned today
[16:25:26] <Akronymus> And the support for algebraic data is... not really a thing.
[16:25:57] <mrig> Akronymus: I don't require that though, like to know my own code as well as I can; More of a linear algebra man myself.
[16:26:13] <mrig> not a mathematician, more of an engineer.
[16:26:25] <Akronymus> Algebraic data types doesn't really have anything to do with algebra.
[16:26:33] <mrig> sure they do.
[16:26:34] <Akronymus> At least not in the sense you are thinking of.
[16:26:48] <Akronymus> Algebraic data is data that can be EITHER this type OR that type.
[16:26:51] <mrig> what sense do you think that I am thinking though?
[16:27:00] <mrig> sure that is what x is
[16:27:07] <mrig> foundation of algebra.
[16:27:13] <mrig> a variable
[16:27:19] <Akronymus> Think union wrapped in a struct where the struct stores what type is currently in used.
[16:27:23] <Akronymus> s/used/use
[16:27:24] <mrig> I think that we are on the same page ther.
[16:27:29] *** Quits: Curiosity (uid511277@user/cypris) ()
[16:27:44] *** Joins: Curiosity (uid511277@user/cypris)
[16:27:44] <vdamewood> arahael: FWIW, I was trying to be humorous with that comment.
[16:27:53] <Akronymus> Tagged/discriminated unions are other names for it.
[16:28:01] <arahael> vdamewood: No worries. :)
[16:28:08] <mrig> and could be a pointer to a function for a functor no?
[16:29:01] <mrig> if the struct that contains the function has variables to that are effected by the function.
[16:29:07] <Akronymus> https://hastebin.com/amoqeqiloh.rust This for example from https://fsharpforfunandprofit.com/posts/designing-with-types-making-illegal-states-unrepresentable/
[16:29:08] <bayaz> Title: Designing with types: Making illegal states unrepresentable | F# for fun and profit 
[16:29:39] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 244 seconds)
[16:29:41] <mrig> I like writing contracts with functions.
[16:29:45] <Akronymus> The contactinfor can be EITHER EmailOnly  OR PostOnly OR EmailAndPost 
[16:29:48] <mrig> when required.
[16:29:55] <Akronymus> And you literally can't access it in the wrong way
[16:30:21] <Akronymus> Like, when a emailonly is stored, you can't access it like a postonly
[16:30:28] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[16:30:50] <user51> can anyone recommend language bug spray? :D
[16:31:01] <Akronymus> Not sure what you mean
[16:31:12] <mrig> user51: get in and enjoy the nature1
[16:31:12] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[16:31:14] <mrig> !
[16:31:28] *** Joins: mickey (~user@user/mickey)
[16:31:35] <user51> Akronymus: oh, it's just thinking about programming and thinking "hey, it would be cool if the language could do..."
[16:31:55] <Akronymus> > "hey, it would be cool if the language could do..."
[16:32:01] <Akronymus> Answer: lisp
[16:32:10] *** Quits: AsenMx (~AsenMx@78.90.248.234) (Ping timeout: 240 seconds)
[16:32:10] <user51> so you go through 5 stages of compiler development and 0x00318193aff
[16:32:14] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[16:32:36] <user51> lisp was on my mind because i was thinking about the structure of it
[16:33:03] <pyzozord> I tried using gprof and gcov but they do not tell me how much time do third party library function calls take, any idea how I can find that out?
[16:33:10] *** Joins: Crescendo (~Crescendo@user/crescendo)
[16:33:35] <pyzozord> gprof tells me how much time my functions t ake in total, an gcov tells me how often each line is executed. That gives some insight, but I really need "how much time each line takes"
[16:33:50] *** Joins: AsenMx (~AsenMx@78.90.248.234)
[16:34:22] <pyzozord> I'll as in ##workingset
[16:34:35] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[16:34:48] <mrig> pyzozord: what if you get the third party source files?
[16:35:30] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[16:35:41] *** Joins: Crescendo (~Crescendo@user/crescendo)
[16:35:56] <user51> lisp = lisp is simply pointers :)
[16:36:18] <Akronymus> >:(
[16:36:33] <pyzozord> mrig: wouldn't know how to set that up
[16:37:26] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[16:37:55] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Remote host closed the connection)
[16:39:16] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[16:39:17] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 245 seconds)
[16:40:05] *** Joins: gggp (~textual@60.10.194.45)
[16:40:40] *** Quits: gggp (~textual@60.10.194.45) (Client Quit)
[16:43:02] *** Quits: orondo (~orondo@user/orondo) (Quit: leaving)
[16:43:58] <paulo> happy weekend everyone
[16:44:59] <user51> cheers lad
[16:45:25] <mrig> pyzozord: whats that?
[16:45:36] <mrig> contracts for pre and post conditions?
[16:46:29] *** Quits: AsenMx (~AsenMx@78.90.248.234) (Remote host closed the connection)
[16:46:43] *** Joins: Enitin (~Enitin@82.102.22.86)
[16:46:52] *** Joins: AsenMx (~AsenMx@78.90.248.234)
[16:47:21] <mrig> You can put a contract into a struct as as function pointer, then wrap what ever is being called with a decorator that calls the functions if they are not NULL or nil.
[16:47:22] <[itchyjunk]> monday is no classes
[16:47:25] <[itchyjunk]> fuck yeah
[16:47:38] <[itchyjunk]> only problem is everyone gave extra hw because monday is off day
[16:47:45] <[itchyjunk]> what a bunch of poopoo!
[16:48:37] *** Quits: YHVH (~yhvh@2601:982:8300:8090:b926:24a3:ed5e:cc61) (Ping timeout: 252 seconds)
[16:48:49] *** Joins: LiftLeft (~LiftLeft@172.98.92.15)
[16:49:05] <mrig> pyzozord: this could be a reason that I find JS so difficult, that none of this is a consideration within the language.
[16:49:18] <mrig> I use it to navigate :|
[16:49:35] * mrig scratches head and ponders the logistics.
[16:49:48] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[16:49:53] <pyzozord> mrig: I think I would need to compile sdl with gprof and gcov flags, but I don't think I will always have library source available so I'm hoping to learn a way of profiling libraries without access to library sources
[16:50:25] <[itchyjunk]> anyone dabble with type theory?
[16:51:17] <pyzozord> mrig: yeah that's an idea. there -finstrument-functions in gcc, I'm not sure if that includes library function calls though
[16:52:07] <mrig> pyzozord: oh I see, sorry I was thinking of something else, not your getting into the libs for profiling conundrum.
[16:52:47] <mrig> ah a flag for the case, that would be cool.
[16:53:55] *** Joins: pulse (~pulse@user/pulse)
[16:53:56] *** Joins: Ecophobia (~Ecophobia@mobile-access-2e840c-136.dhcp.inet.fi)
[16:54:27] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 244 seconds)
[16:55:10] *** Quits: GreenAlpaca (~GreenAlpa@user/greenalpaca) (Quit: WeeChat 3.2)
[16:55:35] *** Joins: GreenAlpaca (~GreenAlpa@user/greenalpaca)
[16:56:08] <user51> mrig: kno  what, i might actually do it
[16:56:14] <user51> go to some park with my laptop and start coding lisp
[16:56:22] <user51> why have i NOT considered this before
[17:00:22] *** Quits: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net) (Ping timeout: 256 seconds)
[17:00:55] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[17:01:10] *** Quits: gitgood (~gitgood@host-78-145-140-210.as13285.net) (Ping timeout: 244 seconds)
[17:01:26] <Caffeinated> plennitutes
[17:02:45] *** Joins: ^-^hi (~nikw@user/-hi/x-1729478)
[17:04:19] <Akronymus> g2g
[17:04:26] *** Quits: Akronymus (~Akronymus@85.31.8.180) (Quit: Akronymus)
[17:04:38] <Caffeinated> bye bye now
[17:05:47] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[17:05:58] *** Joins: flynn (~mcbloch@user/flynn)
[17:06:02] <user51> gday
[17:14:29] <mrig> user51: different park, different dialect? I've no idea, as yet, as to how it might be to code with either lisp or forth.
[17:14:48] <mrig> marvels still yet to explore.
[17:15:33] <mrig> for now, cyclic dependencies and program structure in C for a while.
[17:15:48] <user51> c is a good choice
[17:16:05] <user51> but i've been doing a bit of c in awk lately, even if it's nto perfect
[17:16:36] <Caffeinated> c is really fun once you get into it
[17:17:11] *** Quits: inky_ (~inky@178.78.130.226) (Ping timeout: 244 seconds)
[17:17:13] <Caffeinated> took me a while (i started with Power C on my C64) but once I got the hang of it I couldn't stop writing code using it
[17:17:15] *** Joins: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net)
[17:17:57] <mrig> I always enjoy the way that you think about memory in C, but do need to get more proficient with the scope, am really realising this now.
[17:18:20] <mrig> But am sure that is it logic and really fun once known.
[17:18:30] <user51> it depends onw hat you're doing with c
[17:18:45] <user51> in general i've found that if i often miss pointers if i'm not in c
[17:18:47] <mrig> Communicating with the compiler will become much easier.
[17:19:08] <pyzozord> mrig: if you don't want to read directly from the spec, here seems to be a good description of what is happening there https://en.cppreference.com/w/c/language/storage_duration
[17:19:09] <bayaz> Title: Storage-class specifiers - cppreference.com 
[17:22:03] <Lyn> is there any convenient tool to grab the hexcolor of something on the screen? it's getting old to paste ss to paint, get rgb in decimal and use calculator to convert to hex
[17:22:05] *** Joins: inky_ (~inky@178.78.130.226)
[17:22:14] <Lyn> Win10 if relevant
[17:22:44] <MrMobius> Lyn, i bet you could do it with a couple of lines of win api
[17:23:20] <MrMobius> there is an api call for that iirc
[17:23:42] <mrig> pyzozord: not looking to use tools from C11 just yet.
[17:23:54] <mrig> interesting to note the additions though.
[17:24:51] *** Joins: dan01 (~dan01@109.100.108.171)
[17:25:18] <Caffeinated> omg no...MicroEMACS on my Amiga A500 boot-extras disk
[17:26:02] *** Quits: rcoote (~rcoote@221-224-024-217.ip-addr.vsenet.de) (Quit: Konversation terminated!)
[17:27:34] <MrMobius> Lyn, do you know Python, C/C++, C# or VB?
[17:27:41] <MrMobius> any of those will let you do it
[17:27:51] <Lyn> Python yes, but there appears to be something called Windows 10 PowerToys nowadays
[17:27:53] <vdamewood> Is VB even relivent anymore?
[17:28:03] <[itchyjunk]> someone said yes
[17:28:12] <Lyn> isn't VBA the only lang for Excel
[17:28:15] <[itchyjunk]> according to some survay, it's use is growing 
[17:28:16] <MrMobius> the old VB before .net is very relevant since it's used to script microsoft office
[17:28:35] <vdamewood> Lyn: PowerTows go back as far as XP, maybe 98.
[17:28:40] <vdamewood> Toys*
[17:28:45] <Lyn> oh I see
[17:29:20] <vdamewood> MrMobius: I guess it's also relevant in the same way COBOL was last year.
[17:29:34] <MrMobius> vdamewood, not really
[17:30:05] <vdamewood> I've seen a handful of VB6 jobs pop up here and there.
[17:30:24] <MrMobius> i dont think there's any shortage of people who can do VBA like there is for COBOL. also almost everyone has Excel which is not the case for COBOL
[17:30:56] <MrMobius> its not dying or a rare language or anything
[17:30:59] <[itchyjunk]> i wanna learn how to do hello world in lambda calculus in java..
[17:31:47] *** Quits: pulse (~pulse@user/pulse) (Read error: Connection reset by peer)
[17:32:22] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:32:47] <[itchyjunk]> wait, can i pass a method to another method ?
[17:33:04] <[itchyjunk]> like public static void test (int apple) { }
[17:33:14] <[itchyjunk]> public static int stuff () {}
[17:33:26] <[itchyjunk]> then i .test(stuff()) { } ?
[17:33:29] <[itchyjunk]> (in java)
[17:33:38] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi)
[17:33:40] *** Quits: xff0x (~xff0x@2001:1a81:5362:1000:f7a:10f6:c105:a65a) (Ping timeout: 240 seconds)
[17:34:04] <pyzozord> mrig: I think that page I linked mentiones everything, you can just ignore the sections tagged with c11 or later
[17:34:41] *** Joins: xff0x (~xff0x@2001:1a81:5362:1000:ab65:46f5:7289:f422)
[17:34:47] <pyzozord> lesson learned: gprof and gcov need both cflags and ldflags to function properly
[17:35:03] <pyzozord> that's what I get for not reading documentation carefully enough
[17:35:37] <pyzozord> took me 15 years to learn to read documentation, it will take next 15 to learn to read documentation carefully
[17:36:48] <lf94> In math, is there some equivalent to named arguments?
[17:37:09] <lf94> in lambda calculus it kills composition
[17:37:13] <lf94> more or less...
[17:37:22] <[itchyjunk]> what's an example of named arguments?
[17:37:24] <Amadiro> not really I don't think
[17:37:31] <lf94> f(arg1=3)
[17:37:47] <Amadiro> if you have many arguments to something in maths it's usually cast as some sort of parameter space anyway (and then it's a single argument)
[17:37:53] <[itchyjunk]> ah you're passing something to a function but assigning a name ot it as well?
[17:38:02] <edgar-rft> hmm, how do lambda calculus compositions sound like?
[17:38:04] <lf94> no arg1 is the name of the argument
[17:38:17] <[itchyjunk]> passing a vector is different from passing a list of scalar values in math
[17:38:22] <lf94> (λx.x)[x=3]
[17:38:30] <lf94> I guess lambda calculus can have named arguments
[17:38:39] <[itchyjunk]> v = (c,d)^T f(v) is different from f(c,d)
[17:38:47] <[itchyjunk]> where c,d \in R or somesuch
[17:38:56] <lf94> (λx.λy.x + y)[y=6]
[17:39:18] <[itchyjunk]> i wish i understood lambda calculus
[17:39:19] <lf94> Which would reduce the expression to (λx.x + 6)
[17:39:27] * [itchyjunk] goes back to trying to do hello world in lambda calculus
[17:39:28] <lf94> It's pretty easy! Go learn about it :)
[17:39:38] <[itchyjunk]> i have a link open, procastinating 
[17:39:39] <[itchyjunk]> lol
[17:39:47] <lf94> It took me 2 months to really know it well :)
[17:40:00] <lf94> but it "sticks" with you forever after that
[17:40:09] <Amadiro> it's normal to play pretty fast and loose with turning multiple parameters into a single vector in maths when it's not of interest to look at the individual components
[17:40:23] <lf94> Amadiro: gotchya.
[17:40:29] <Amadiro> but then, as long as the reader understands what you mean, that's all that matters in the end
[17:40:34] <lf94> Yeah
[17:40:43] <Amadiro> so inconsistent notation is often accepted
[17:41:22] <edgar-rft> 𝄞 ♩ ♫ Greatest Masterpieces ♪ ♬ ... composed by Lambda Calculus
[17:41:35] <beaky> nice i like lambada calcuus
[17:41:44] <beaky> i use lambdas in rust
[17:41:51] <[itchyjunk]> in math?
[17:41:57] <[itchyjunk]> you can't turn random things into vectors
[17:42:00] *** Joins: zivoni (~tomas@v2202104118411149666.quicksrv.de)
[17:42:03] <[itchyjunk]> vectors are elements of vector spaces
[17:42:16] <[itchyjunk]> and vector spaces are very specific mathematical objects
[17:42:33] <[itchyjunk]> for example, it assumes you are defining it over some field of scalard F
[17:42:34] <Amadiro> you just call them tuples or nples instead
[17:42:45] <Amadiro> or "a parameter space"
[17:42:50] <[itchyjunk]> not all tuples are vectors
[17:42:56] <Amadiro> indeed
[17:43:07] <Amadiro> I never mentioned vectors :)
[17:43:16] <Amadiro> oh, I did
[17:43:17] <Amadiro> my bad
[17:43:59] <Caffeinated> know your vectirs
[17:44:06] <Caffeinated> vectors*
[17:44:06] <edgar-rft> I have a lambda sensor in the exhaust pipe of my car. 
[17:44:12] <Caffeinated> gah i have to stop switching keyboards
[17:44:27] <[itchyjunk]> hmmm whats lambda sensor?
[17:44:41] <edgar-rft> Caffeinated: you mean keybirds
[17:44:42] *** Quits: xff0x (~xff0x@2001:1a81:5362:1000:ab65:46f5:7289:f422) (Ping timeout: 245 seconds)
[17:45:31] *** Joins: keir (~keir@user/keir)
[17:45:31] <[itchyjunk]> damn the tutorial is 1 hours long
[17:45:35] <[itchyjunk]> i'll never get through it
[17:45:36] <^-^hi> what do you think about this idea: an imperative programming language with only function-calls, arithmetic and conditionals is much easier to correctly implement than HTML/CSS, while not being prone to many denial-of-service and hardware level exploits turing-complete languages are vulnerable to by nature. 
[17:45:48] <^-^hi> even if one manages to do one of these, it would require so much code that it could be detected and prevented easily.
[17:46:14] <edgar-rft> [itchyjunk]: lambda sensor -> https://en.wikipedia.org/wiki/Oxygen_sensor
[17:46:15] <bayaz> Title: Oxygen sensor - Wikipedia 
[17:47:26] <^-^hi> so such a language could do most of what HTML/CSS do in documents.
[17:47:29] <Caffeinated> edgar-rft: lol yes keybirds
[17:47:50] <[itchyjunk]> oh unrelated to lambda calculus it seems
[17:48:46] <MrMobius> "easy no correctly implement" and "not terrible to use" are not always the same
[17:48:53] <MrMobius> *easy to
[17:48:54] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:49:08] <^-^hi> the idea is that you use lua for interactive pages (which normally use HTML/CSS/JS) and a non turing-complete subset for documents to preserve security.
[17:49:35] *** Joins: gggp (~textual@60.10.194.45)
[17:49:37] <[itchyjunk]> easy to not implement and correctly not use
[17:51:14] <edgar-rft> I often used lamda to calculate the wire length for radio an tv antennas.
[17:51:26] <^-^hi> MrMobius: you can have a script compile a markup language to this. or do it in a WYSIWYG just as nearly everyone does with HTML/CSS.
[17:51:34] <arahael> Hmm, Android Studio is weird.  How do I run "gradle" on the command line, on macos, after having *installeD* Androi Studio?
[17:52:01] <pyzozord> oh great this is just what I need https://www.youtube.com/watch?v=FJW8nGV4jxY
[17:52:02] <bayaz> Title: Linux Performance Tools, Brendan Gregg, part 1 of 2 
[17:52:12] <^-^hi> MrMobius: but the browser would end up very very smaller and more portable 
[17:53:26] *** Quits: zivoni (~tomas@v2202104118411149666.quicksrv.de) (Quit: WeeChat 3.0)
[17:54:13] *** Quits: gggp (~textual@60.10.194.45) (Client Quit)
[17:54:26] <mrig> How should I understand what the compiler is telling me here: https://termbin.com/8ymq
[17:54:27] <bayaz> Type: text/plain; charset=utf-8 
[17:54:58] <mrig> this is all in the linking right?
[17:55:07] <^-^hi> yes, you forgot to link something
[17:55:22] <mrig> Or am linking twice?
[17:55:30] <pyzozord> mrig: yeah, those are linker errors
[17:55:35] *** Joins: zivoni (~tomas@user/zivoni)
[17:55:59] <mrig> so is this an error in the make file or from #include statments?
[17:56:10] <^-^hi> in makefile
[17:56:21] <^-^hi> headers don't know about linker afaik
[17:56:44] <pyzozord> no #include isn't really related. C has a concept of "compilation unit" which kind of a "single file after resolving all includes"
[17:57:04] <pyzozord> compiler compiles each compilaiton unit into an object file, and linker links all object files
[17:57:23] <user51> my compiler will just use cat instead :)
[17:57:28] *** Joins: xff0x (~xff0x@2001:1a81:5362:1000:ab65:46f5:7289:f422)
[17:57:45] <pyzozord> so this means that linker can't find some objects from one object file in another. Something like that
[17:58:01] <mrig> ok so it is coming after the compilation stage and at linker stage.
[17:58:07] <mrig> right yes.
[17:58:35] <mrig> why does it say multiple definitions if it cant find it though?
[17:59:24] <pyzozord> i bet that's because of that pesky #include "gif.c" that I did in the middle of x.c
[17:59:33] <pyzozord> that was very hacky thing to do
[18:00:24] <pyzozord> if you have comething like cc *.c then that would explain it becaus gif.c happens twice. Once as part of x.c and another time on it's own
[18:00:59] <^-^hi> thanks for teaching me why we don't combine multiple compilation units with including c files.
[18:01:34] <mrig> oh right let me have a look for that.
[18:01:50] <pyzozord> I mean I knew what I was doing, but mrig doesn't know what I was doing
[18:02:29] *** Quits: jaysicks (~jaysicks@91-82-168-11.pool.digikabel.hu) (Remote host closed the connection)
[18:02:33] <mrig> heh, yes on line 500 or so :D
[18:02:40] *** Quits: hexingb (~hexingb@2409:8900:284f:82e4:8a3:b108:c60:390) (Ping timeout: 240 seconds)
[18:03:04] *** Joins: jaysicks (~jaysicks@91-82-168-11.pool.digikabel.hu)
[18:03:07] <^-^hi> doesn't anyone have any criticism on the idea of writing non-interactive webpages in non-turning complete lua?
[18:03:09] <mrig> right so a search for includes in noted for this kind of thing in the future.
[18:03:10] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 244 seconds)
[18:03:20] <pyzozord> yeah it was a very dirty way of "continue writing inside x.c but have somet thinking space out of that mess"
[18:03:56] *** Joins: pulse (~pulse@user/pulse)
[18:03:56] <pyzozord> ^-^hi: yes, just write them in html. They are non interactive anyway
[18:04:34] <^-^hi> pyzozord: no i mean, as for a complete different browser architecture.
[18:04:47] <Caffeinated> lol
[18:04:59] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:05:01] <Caffeinated> boredom must have set in sooo long ago ^-^hi 
[18:05:24] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[18:05:30] <mrig> pyzozord: Yay! it compiled"
[18:05:30] * ^-^hi 's english doesn't suck that much, yet he misses words and stuff so much.
[18:05:40] <pyzozord> mrig: nice :)
[18:06:15] <mrig> I am a little suspicious of struts defined in header files at the moment though.
[18:06:38] <mrig> Having needed to do so to make win usable from within two files.
[18:06:55] <mrig> I can probably tuck it all into one file though.
[18:06:55] <^-^hi> Caffeinated: implementing just one lua api in portable small C and loading it is by far smaller and more portable and more efficient than current state of affairs.
[18:07:09] *** Quits: GreenAlpaca (~GreenAlpa@user/greenalpaca) (Quit: WeeChat 3.2)
[18:07:13] <pyzozord> mrig: I think c doesn't reall recognize .h or .c per se. It's all the same to it. A header file is just a file that conventionally doesn't include function definitions, only declarations.
[18:07:19] <^-^hi> Caffeinated: browsers are the main problem in many fringe OSes
[18:07:35] *** Joins: GreenAlpaca (~GreenAlpa@user/greenalpaca)
[18:07:42] <pyzozord> mrig: but there are very popular libraries that are all written in a header file like https://github.com/nothings/stb
[18:07:43] <bayaz> Title: GitHub - nothings/stb: stb single-file public domain libraries for C/C++ 
[18:08:19] *** Joins: s1berage (~s0berage@135-23-213-77.cpe.pppoe.ca)
[18:08:35] <mrig> pyzozord: yes I know, but people have been using C in a really bad way for years and years, it even spilled over into the standard use of C++
[18:08:47] <mrig> you pick this up in the use of make too.
[18:08:53] <mrig> from what I gather so far.
[18:09:10] <mrig> due to cyclic dependencies 
[18:09:21] <mrig> leads to horrific compile times
[18:09:40] <mrig> I'm intrigued to master why this is so.
[18:09:49] <pyzozord> yeah I think this style kind of abuses C's ideas to circumvent some of the standard problems
[18:09:57] <mrig> take the burs off the edge of the blade as it were.
[18:10:05] *** Quits: inky (~inky_@178.78.130.226) (Ping timeout: 252 seconds)
[18:10:17] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[18:10:34] *** Quits: s0berage (~s0berage@135-23-213-77.cpe.pppoe.ca) (Ping timeout: 252 seconds)
[18:11:17] <mrig> heh, I still cant reset by terminal properly after running this though, some work to do on the escape codes or something.
[18:11:24] *** Quits: dsrt^ (~dsrt@wsip-98-188-244-188.mc.at.cox.net) (Remote host closed the connection)
[18:12:17] <pyzozord> mrig: you might be running to the same bug I have. The escape code for alt buffer is broken I think. Makes the whole terminal black
[18:12:50] <mrig> heh and the terminal wraps over itself with an \r instead of a \n :D
[18:12:52] *** Joins: Pickchea (~private@user/pickchea)
[18:13:00] *** Joins: Guest16 (~Guest16@103.240.169.236)
[18:13:16] <pyzozord> oh that I didn't do anything about, that must be standard st
[18:13:31] <mrig> nice for writing long rambling rants, because they overwrite themselves.
[18:13:36] <Guest16> is there any way to block all other websites except few? in windows, hosts file need website addressses that need to be blocked. 
[18:14:17] <pyzozord> mrig: i think \r is correct, it just returns cursor to the first position in current line, that's to be expected
[18:14:37] <mrig> could be a glitch when running inside a tmux session.
[18:15:06] <mrig> pyzozord: this is in the terminal that I run pyzoterm from, after exiting.
[18:15:40] <pyzozord> mrig: oh one thing read README there is instruction there about tic
[18:15:41] <mrig> so it is not resetting the terminal after use I suppose.
[18:15:46] <mrig> right.
[18:17:29] *** Joins: gggp (~gggp@111-251-157-238.dynamic-ip.hinet.net)
[18:18:07] *** Quits: silasfox (~sbv@2001-4dd6-4b95-0-383d-e94d-aa82-1e8f.ipv6dyn.netcologne.de) (Quit: WeeChat 3.2)
[18:18:10] *** Joins: hexingb (~hexingb@223.104.227.96)
[18:18:45] <Caffeinated> windows has a firewall
[18:18:49] <Caffeinated> maybe use it?
[18:19:21] <[itchyjunk]> so i am seeing that lambda calculus lets me add methods on the fly
[18:19:30] <mrig> pyzozord: does tic require the name of the executable?
[18:19:31] <[itchyjunk]> but i can't do this is i am working with primitives , can i?
[18:19:38] <[itchyjunk]> since it's not an object?
[18:19:54] <[itchyjunk]> int x = (int y, int z) -> y+z; 
[18:19:55] <[itchyjunk]> ?
[18:22:40] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[18:23:01] <pyzozord> mrig: tbh I don't know I did the tic stuff back when typyst was st
[18:24:30] <mrig> dang, just found a horrific bug in my game :| needs a complete rewrite.
[18:24:56] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 252 seconds)
[18:25:26] <^-^hi> what is it mrig?
[18:26:26] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[18:26:36] <mrig> you can win a match and the thing does not recognise it.
[18:26:58] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Remote host closed the connection)
[18:27:00] <mrig> so not until the next move is played.
[18:27:15] *** Joins: s0berage (~s0berage@135-23-213-77.cpe.pppoe.ca)
[18:27:28] <mrig> does not occur often either
[18:27:46] <mrig> better code structure required.
[18:28:37] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[18:29:15] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[18:29:17] *** Quits: s1berage (~s0berage@135-23-213-77.cpe.pppoe.ca) (Ping timeout: 245 seconds)
[18:29:54] *** Quits: Ecophobia (~Ecophobia@mobile-access-2e840c-136.dhcp.inet.fi) (Quit: WeeChat 2.8)
[18:30:13] *** Joins: Enitin (~Enitin@82.102.22.85)
[18:31:35] *** Quits: independent__ (~independe@95.144.68.39) (Ping timeout: 244 seconds)
[18:32:05] *** Quits: anahat (~anahat@116.74.180.160) (Quit: Connection closed)
[18:32:44] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:32:54] <mrig> Is there any way to use a PM in irc to send data to a game?
[18:33:16] <mrig> If you set up your program for the protocol, I suppose you would have to make the game a client.
[18:33:18] <Amadiro> you mean if there's a way to make that happen?
[18:33:22] <mrig> Yes
[18:33:24] <Amadiro> sure
[18:33:38] <mrig> Oh that could be a nice incentive to rewrite.
[18:33:39] <Amadiro> people have done that before
[18:33:59] *** Quits: GreenAlpaca (~GreenAlpa@user/greenalpaca) (Quit: WeeChat 3.2)
[18:34:32] *** Joins: GreenAlpaca (~GreenAlpa@user/greenalpaca)
[18:35:39] <mrig> oh just using guest connections too would be fine, if you did a sort of hand shake thing first.
[18:35:53] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[18:36:04] <Amadiro> guest connection?
[18:36:08] <mrig> I best ask if it is not against any server policy or anything I suppose.
[18:36:25] <mrig> yes without requiring the use of a registered nick.
[18:36:31] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[18:36:57] <Amadiro> You don't need to be registered on most IRC networks to receive private messages, only to speak in certain larger channels
[18:37:02] <mrig> If you dont what to write the full irc client software at the same time as the game.
[18:37:02] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 252 seconds)
[18:37:20] *** Joins: Enitin (~Enitin@82.102.22.84)
[18:37:35] *** Quits: Curiosity (uid511277@user/cypris) (Quit: Connection closed for inactivity)
[18:37:40] <mrig> right yes, so if you wanted to play a game with someone on irc, you could both start the program and exchange connection names.
[18:37:41] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi)
[18:38:13] <mrig> Of course were it that you wanted an irc tictactoe leader board, you would have to get a little more involved :D
[18:38:43] <Amadiro> you can run your own IRC server if you're worried about breaking policy
[18:38:56] <mrig> or chess bot what ever it is that you have concocted.
[18:39:11] <Amadiro> but yes, there have been games and other things (like twitch) that use IRC under the hood for everything, including e.g. matchmaking etc
[18:39:19] <mrig> ah for more serious applications for sure.
[18:39:29] <diophantoz> you must be registered on libera to send private messages tho?
[18:39:29] <mrig> cool.
[18:39:39] <diophantoz> or receive
[18:39:45] <mrig> ah right.
[18:39:57] <mrig> well it could be a channel.
[18:40:10] <mrig> ##tictactoeproleague
[18:41:02] <mrig> ##beakystearooms
[18:42:03] <mrig> would be the logical way too, you could chat about an ongoing game in the channel too.
[18:42:33] *** Joins: magla (~gelignite@55d44ca3.access.ecotel.net)
[18:44:55] *** Joins: scoobydoo_ (~scooby@user/scoobydoo)
[18:44:56] *** scoobydoo_ is now known as scoobydoo
[18:44:56] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Excess Flood)
[18:46:07] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[18:46:52] *** Joins: Izem (~Izem@bras-base-london1483w-grc-30-74-12-157-86.dsl.bell.ca)
[18:48:01] <Izem> If src and det are both (string) char*, what is in ret: while( ! (ret = *src - *dst) && *dst)?
[18:48:57] <Izem> The (character) difference, which should be 0 if they are the same?
[18:50:12] <mrig> lol, hilarious bugs in my code now! Right time for a rethink and an analysis as to why this is happening.
[18:51:02] <Caffeinated> hi remby o/
[18:51:26] *** Quits: AsenMx (~AsenMx@78.90.248.234) (Ping timeout: 256 seconds)
[18:51:33] *** Quits: justicefries (~justicefr@2600:1700:9850:1a20:c486:8f31:8ec2:8a8c) (Read error: Connection reset by peer)
[18:52:42] <PlanckWalk> Izem: Inside the loop body, it's always zero.  After the loop, it might or might not be.
[18:55:52] *** Quits: hexingb (~hexingb@223.104.227.96) (Ping timeout: 244 seconds)
[18:56:41] *** Joins: hexingb (~hexingb@111.30.225.74)
[18:57:53] *** Quits: frost (~frost@59.71.240.119) (Quit: Connection closed)
[18:58:15] *** Quits: Guest16 (~Guest16@103.240.169.236) (Quit: Connection closed)
[19:00:06] *** Joins: vs^ (~vs@wsip-98-188-244-188.mc.at.cox.net)
[19:01:09] <Izem> Does apple use dynamic binary translation to run x86 apps or virtualization?
[19:01:36] *** Joins: vicfred (~vicfred@user/vicfred)
[19:02:34] *** Joins: aliosablack (~chomwitt@ppp-94-69-12-184.home.otenet.gr)
[19:03:01] <mrig> Why would using #define _XOPEN_SOURCE then make the compiler not recognise <stdio.h> or <string.h> ?
[19:03:22] <mrig> I am using this due to a compiler warning about wchar.h
[19:03:27] *** Quits: chomwitt (~chomwitt@2a02:587:dc1c:8c00:12c3:7bff:fe6d:d374) (Ping timeout: 245 seconds)
[19:04:20] <Izem> wrong header?
[19:04:46] <Izem> seems to be in wctype.h according to cpprefernce
[19:05:13] <mrig> ah including a compiler flag seems to have removed the warning.
[19:05:15] <Izem> ah nvm, it is both
[19:06:29] <mrig> man there is a lot of stuff to know about if you want to know what your code is actually doing.
[19:07:10] <mrig> relieved to notice that my bug is not as horrendous as I thought, just that it was not noticeable before and has always been there.
[19:07:25] <mrig> Correctness of code is a fascinating thing.
[19:08:00] <mrig> pyzozord: are you interested in taking this code back now with a greatly simplified makefile?
[19:08:14] <mrig> and the SDL linked from asside.
[19:08:24] <pyzozord> mrig: sure!
[19:08:46] <mrig> ah I need to just check that your gif code is working first.
[19:10:01] *** Joins: Jaran (~mail@user/jaran)
[19:10:02] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 252 seconds)
[19:10:13] <pyzozord> mrig: could I ask you to not share the code publically though?
[19:10:57] *** Joins: Enitin (~Enitin@82.102.22.84)
[19:10:58] <pyzozord> mrig: or share publically but just a diff
[19:11:18] <mrig> sure thing
[19:12:38] <Izem>  
[19:14:06] *** Quits: dislabled (~dislabled@115.229.164.82.customer.cdi.no) (Ping timeout: 256 seconds)
[19:14:19] <Caffeinated>  
[19:14:38] <mrig> pyzozord: how'd you start up to use an animated background normally, with -a and then the address of the file?
[19:15:39] <pyzozord> mrig: yep, -a stands for "animation" :)
[19:16:30] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[19:16:36] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[19:18:31] <mrig> well there is more work to get the gif code integrated this way still, but I'll send anyway so that you can take a look.
[19:19:40] <pyzozord> the most annyoing thing about my current implementation is that the gif loading process takes few seconds. This should be instant!
[19:20:21] <pyzozord> I just found very nice and very topical for the channel video https://www.youtube.com/watch?v=-VADIcicpcg I'll be sharing it each time there is another oop vs fp discussion 
[19:20:22] <bayaz> Title: Object Oriented Programming vs Functional Programming • Dave Farley • GOTO 2021 
[19:21:08] *** Quits: Izem (~Izem@bras-base-london1483w-grc-30-74-12-157-86.dsl.bell.ca) (Quit: Going offline, see ya! (www.adiirc.com))
[19:29:15] *** Joins: gtc (~gtc@200.40.87.165)
[19:29:21] *** Joins: lalitmee (~lalitmee@180.94.33.98)
[19:30:10] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[19:30:22] *** Joins: flynn (~mcbloch@user/flynn)
[19:30:25] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Quit: Leaving)
[19:31:44] *** Quits: ugly (~ugly@2804:431:d77e:3a94:a613:a23:fed8:efdb) (Quit: WeeChat 2.8)
[19:31:58] *** Quits: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net) (Ping timeout: 252 seconds)
[19:36:57] <mrig> oh yes thats really slow, am not on that page yet, still mulling over the structure.
[19:38:15] *** Quits: pandakekok9 (~job@wikimedia-commons/pandakekok9) (Remote host closed the connection)
[19:39:42] *** Quits: anovick (~anovick@IGLD-83-130-62-236.inter.net.il) (Ping timeout: 245 seconds)
[19:39:43] *** Joins: YHVH (~yhvh@2601:982:8300:8090:e8fd:f666:d50d:b8a)
[19:40:25] *** Joins: Maaaanu (~manuel@ip5b41c17b.dynamic.kabel-deutschland.de)
[19:41:22] *** Quits: Hax0r (~Hax0r@128.127.222.236) (Ping timeout: 245 seconds)
[19:42:05] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.2)
[19:42:28] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
[19:45:50] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) ()
[19:47:27] *** Quits: Doffi (~doffi@91.132.197.188) (Read error: Connection reset by peer)
[19:48:31] *** Joins: Doffi (~doffi@91.132.197.188)
[19:52:42] *** Quits: gggp (~gggp@111-251-157-238.dynamic-ip.hinet.net) (Ping timeout: 244 seconds)
[19:52:45] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-7-205.prtc.net)
[19:54:53] *** Quits: inky_ (~inky@178.78.130.226) (Read error: Connection reset by peer)
[19:56:54] *** Joins: inky_ (~inky@37.252.67.70)
[19:58:51] *** Joins: Andalu30 (~andalu30@85.137.21.37.dyn.user.ono.com)
[19:59:37] *** Joins: gggp (~textual@60.10.194.45)
[20:02:09] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[20:03:30] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[20:04:20] *** Joins: freakazoid12345 (~matt@2603-9000-cf0f-80e3-3861-b031-6b93-c510.inf6.spectrum.com)
[20:04:21] *** Joins: gggp_ (~gggp@111-251-157-238.dynamic-ip.hinet.net)
[20:04:47] *** Joins: webstrand (~webstrand@user/webstrand)
[20:07:12] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:3861:b031:6b93:c510) (Ping timeout: 245 seconds)
[20:09:39] *** Quits: gggp (~textual@60.10.194.45) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:12:01] *** Joins: jess (~jess@libera/staff/jess)
[20:12:28] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 256 seconds)
[20:14:27] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:15:06] <mrig> yes nice video, makes sense.
[20:16:52] <homura> i am learning to code
[20:17:47] <GeDaMo> homura: which language?
[20:18:10] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 252 seconds)
[20:18:23] <vdamewood> Hmm... looks like Visual Basic, as a language, is pretty much dead now.
[20:18:37] <mrig> should not have put a picture of Einstein there though, he was not a mathematical thinker!
[20:18:45] <mrig> was a model thinker.
[20:18:46] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:18:49] *** Joins: lalitmee_ (~lalitmee@180.94.33.76)
[20:18:53] <vdamewood> Visual Basic support in .NET 5.0 is pretty much going to be enough to make (most) old code work, and that's it.
[20:18:55] <mrig> homura: nice!
[20:20:19] <vdamewood> homura: Yes, don't leave us in suspense. Which language?
[20:20:57] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[20:21:04] *** Quits: moha (uid506645@id-506645.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[20:21:07] *** Quits: lalitmee (~lalitmee@180.94.33.98) (Ping timeout: 244 seconds)
[20:22:35] *** Quits: Guest562 (~Guest5@public-gprs227132.centertel.pl) (Quit: Client closed)
[20:25:23] <GreenAlpaca>  /python load slavfox
[20:25:28] <GreenAlpaca> whoops
[20:25:31] <GreenAlpaca> :D
[20:26:35] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-7-205.prtc.net) (Ping timeout: 256 seconds)
[20:27:13] *** Quits: Andalu30 (~andalu30@85.137.21.37.dyn.user.ono.com) (Quit: Konversation terminated!)
[20:29:04] *** Joins: euouae (~euouae@user/euouae)
[20:32:57] <homura> vdamewood: subscribe to my patreon for the Big Reveal
[20:33:28] <vdamewood> Not worth it.
[20:34:14] <homura> good decision
[20:34:17] *** Quits: juliaEnv (~juliaEnv@ip-86-49-255-181.net.upcbroadband.cz) (Quit: Going offline, see ya! (www.adiirc.com))
[20:35:07] *** Quits: pizdets (~pizdets@183.182.111.16) (*.net *.split)
[20:35:07] *** Quits: w0ng (~w0ng@144.48.36.84) (*.net *.split)
[20:35:07] *** Quits: Tempesta (~Tempesta@user/tempesta) (*.net *.split)
[20:35:07] *** Quits: myon98 (~myon98@user/myon98) (*.net *.split)
[20:35:32] *** Joins: w0ng (~w0ng@144.48.36.84)
[20:35:35] *** Quits: dan01 (~dan01@109.100.108.171) (Ping timeout: 244 seconds)
[20:35:54] *** Joins: pizdets (~pizdets@183.182.111.16)
[20:36:12] *** Joins: Tempesta (Tempesta@user/tempesta)
[20:36:12] *** Quits: Tempesta (Tempesta@user/tempesta) (Excess Flood)
[20:37:20] *** Joins: dislabled (~dislabled@115.229.164.82.customer.cdi.no)
[20:37:46] *** Joins: Tempesta (Tempesta@user/tempesta)
[20:37:46] *** Quits: Tempesta (Tempesta@user/tempesta) (Excess Flood)
[20:37:52] <mrig> ls
[20:38:57] *** Joins: Tempesta (Tempesta@183.98.39.112)
[20:38:57] *** Quits: Tempesta (Tempesta@183.98.39.112) (Changing host)
[20:38:57] *** Joins: Tempesta (Tempesta@user/tempesta)
[20:38:57] *** Quits: Tempesta (Tempesta@user/tempesta) (Excess Flood)
[20:39:17] *** Joins: Tempesta (Tempesta@user/tempesta)
[20:39:53] *** Joins: myon98 (~myon98@user/myon98)
[20:40:47] *** Quits: derpadmin (~derpadmin@cloudbase2.200013.net) (Ping timeout: 250 seconds)
[20:41:57] <mrig> :) oh I'm not in that terminal!
[20:42:08] *** Joins: Enitin (~Enitin@82.102.22.86)
[20:42:15] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[20:42:33] *** Joins: fch (~myname87@mob-5-90-227-40.net.vodafone.it)
[20:43:01] *** Joins: Cashlin (~hp@user/cashlin)
[20:46:04] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[20:46:15] *** Joins: flynn (~mcbloch@user/flynn)
[20:49:13] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Quit: Leaving)
[20:49:23] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[20:49:41] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[20:50:54] *** Quits: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[20:52:07] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 244 seconds)
[20:52:16] *** Joins: gitgood (~gitgood@host-78-145-140-210.as13285.net)
[20:52:16] *** Quits: codemin (~codemin@69.167.19.112) (Ping timeout: 252 seconds)
[20:52:38] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[20:54:30] <DnzAtWrk> here is an interesting question that came up
[20:54:44] <DnzAtWrk> is reverse engineering using machine learning patent infringement?
[20:55:41] <GeDaMo> I don't see why machine learning would make a difference
[20:56:04] <DnzAtWrk> because you are teaching a computer to immitate
[20:56:11] <DnzAtWrk> you are not actually reverse engineering the algorithm
[20:56:40] <vdamewood> Patent infringement happens when you implement patented technology, it doesn't actually madder how you implemented it.
[20:57:01] <vdamewood> s/madder/matter/
[20:57:11] <Caffeinated> don't get mad, get madder
[20:57:24] * vdamewood doesn't madder.
[20:57:30] <DnzAtWrk> and does a patent extend over immitation?
[20:57:37] <DnzAtWrk> or does the techonlogy have to be an exact copy
[20:58:19] *** Quits: inky_ (~inky@37.252.67.70) (Ping timeout: 252 seconds)
[20:58:31] <vdamewood> Depends on the patent. If the patent is for coating a surface in silver to make it reflective, and you use copper, that's not ain infrignement.
[20:59:00] <DnzAtWrk> and if your patent is to for example have an algorithm for generating nice textures
[20:59:01] *** Joins: pulse (~pulse@user/pulse)
[20:59:06] <DnzAtWrk> and you teach a neural network to immitate it
[20:59:11] <GeDaMo> Define 'nice'
[20:59:34] <vdamewood> Buf if someone patents rotating a card in play as a game mechanic to show game state, then you infringe if you use turning cards to show state in your game.
[20:59:57] <DnzAtWrk> that's the kind of stupid things that honestly shouldn't be patentable :P
[21:00:09] <vdamewood> DnzAtWrk: It was actually patented.
[21:00:13] <DnzAtWrk> I know
[21:00:15] <GeDaMo> https://en.wikipedia.org/wiki/Superformula "Gielis has filed a patent application related to the synthesis of patterns generated by the superformula"
[21:00:15] <DnzAtWrk> magic the blargh
[21:00:17] <bayaz> Title: Superformula - Wikipedia 
[21:00:25] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:00:26] <DnzAtWrk> and then someone patented a magic deck
[21:00:29] <DnzAtWrk> copyrighted*
[21:00:36] <DnzAtWrk> just to show how dumb the idea is
[21:00:56] <vdamewood> Fortunately, the Magic patents are long dead now.
[21:01:06] <DnzAtWrk> my friend doesn't believe me when I argue that patents are worse for humanity than copyright :P
[21:01:12] *** Quits: lalitmee_ (~lalitmee@180.94.33.76) (Ping timeout: 256 seconds)
[21:01:37] <DnzAtWrk> anyway, the whole machine learning thing is a huge blank hole at this point
[21:01:40] <DnzAtWrk> there are so many questions
[21:01:41] <vdamewood> I don't have a problem with either, but the terms are way too long thes days.
[21:01:43] <pulse> you think your friends are bad
[21:01:49] <pulse> one of my friends has become a flat earther
[21:01:49] <DnzAtWrk> if you train a model using copyrighted data, is your model copyrighted?
[21:01:55] <DnzAtWrk> are autoencoders copyright violation?
[21:01:56] <pulse> the other is trying to make perpetuum mobile out of magnets
[21:01:57] <euouae> derivative work
[21:02:05] <DnzAtWrk> yeah you say that but you don't know
[21:02:07] <euouae> DnzAtWrk, this stuff only matters if it can be proven
[21:02:07] <DnzAtWrk> nobody knows for sure
[21:02:19] <euouae> so the question is, are you doing it in a way that is traceable?
[21:02:22] <vdamewood> Well, data can't be copyrighted, only the expression can.
[21:02:36] <GeDaMo> pulse: I came up with an idea for a perpetual motion machine when I was a kid, it involved magnets :P
[21:02:50] <DnzAtWrk> I think many kids came up with the same idea
[21:02:52] <DnzAtWrk> wheel of magnets
[21:03:12] *** Joins: lalitmee_ (~lalitmee@180.94.33.76)
[21:03:18] <pulse> GeDaMo, as a kid it's understandable
[21:03:19] <DnzAtWrk> stupid kids shouldn't be allowed in physics
[21:03:24] <pulse> as an almost-40-year-old it's kinda not
[21:03:24] <GeDaMo> Mine was a linear motor moving a magnets through a coil of wire to produce the power for the linear motor
[21:03:28] <DnzAtWrk> jk
[21:03:34] <pyzozord> Does this gprof output sound like I have any performance problems in my code? https://termbin.com/e1lq Or does it suggest that the three seconds that it took to execute the program are spent somewhere else?
[21:03:35] <bayaz> Type: text/plain; charset=utf-8 
[21:03:43] <pulse> GeDaMo, that's a classic one yes
[21:03:47] <vdamewood> Yep, my perpetual motion machines used two sets of magnets to hold a spining wheel of magnets in place while it hovered in the air.
[21:03:54] <pulse> also water and capillary action
[21:03:55] <vdamewood> s/machines/machine/
[21:04:12] <GeDaMo> Damned laws of thermodynamics! :P
[21:04:14] <DnzAtWrk> is it even possible to theoretically prove a perpetual motion machine work ON earth
[21:04:21] <DnzAtWrk> wouldn't you need to be far out in space
[21:04:33] <mrig> some kid do dream about making brushless motors though, and rotating nothingness and it works out ok.
[21:04:38] <pulse> even in space there's no perpetual motion
[21:04:40] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[21:04:43] <pulse> there's just motion due to lowest energy
[21:04:52] <DnzAtWrk> sure there could be, if you have a universe with two spinning atoms
[21:04:55] <DnzAtWrk> perpetual motion!
[21:05:10] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[21:05:12] <pulse> hmm
[21:05:18] <mrig> creativity is great, should be encouraged not ridiculed.
[21:05:21] *** Joins: flynn (~mcbloch@user/flynn)
[21:05:30] <vdamewood> https://youtu.be/-frFd9u0CGU
[21:05:31] <bayaz> Title: Lisa, In this House we obey the laws of Thermodynamics!! 
[21:05:36] <DnzAtWrk> I know, kids have such a huge inner imagination
[21:05:40] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[21:05:43] <DnzAtWrk> which I'm fairly sure adults are lacking at this point
[21:05:47] <mrig> channeling is what it needs.
[21:05:47] <DnzAtWrk> and I mean quite physically
[21:05:51] <DnzAtWrk> adults lose their inner imagination
[21:06:25] <DnzAtWrk> or at least weakens
[21:08:04] *** Quits: swagneko (~bit@user/nekobit) (Quit: needs more desu!)
[21:10:55] *** Joins: inky_ (~inky@188.115.227.51)
[21:10:57] *** Quits: peteyboy1 (~peteyboy1@95.169.235.10) (Ping timeout: 245 seconds)
[21:11:14] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:9cd1:7ad:f0f6:4c60)
[21:11:36] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[21:11:40] *** Quits: ^-^hi (~nikw@user/-hi/x-1729478) (Ping timeout: 240 seconds)
[21:11:42] <[itchyjunk]> halo
[21:12:00] <DnzAtWrk> aaaa aaa aaa aaaa aaaaaa
[21:12:04] *** Joins: ^-^hi (~nikw@user/-hi/x-1729478)
[21:13:29] <[itchyjunk]> so `Runnable x = () -> System.out.println("Test"); x.run();` works
[21:13:56] <GeDaMo> Java?
[21:14:26] <[itchyjunk]> but I can't get `Runnable x = (int z, int y) -> System.out.println(z+y);` doesn't work
[21:14:28] <[itchyjunk]> yes java
[21:14:35] <GeDaMo> In what way does it not work?
[21:14:43] <[itchyjunk]> let me find the error again
[21:14:56] <[itchyjunk]> something about needing functionable stuff
[21:15:50] <pyzozord> I can't believe that gnu binutils won't have a tool to find out time spent per line of code
[21:16:04] <[itchyjunk]> I am using online ide called jdoddle
[21:16:07] <pyzozord> or any other way to find out how much I spend in which library call
[21:16:10] <[itchyjunk]> is there a way to share that anyone knows of?
[21:16:14] <[itchyjunk]> I can't find a share button
[21:18:00] *** Joins: dan01 (~dan01@109.100.108.171)
[21:18:00] <[itchyjunk]> incompatible parameter types in lambda expression
[21:18:03] <[itchyjunk]> is one of the error
[21:18:10] *** Joins: Izem (~Izem@bras-base-london1483w-grc-30-74-12-157-86.dsl.bell.ca)
[21:18:11] *** Joins: swagneko (~bit@user/nekobit)
[21:18:28] <jinsun> [itchyjunk]: it probably wants expressions only, and declaring variables is not expression
[21:18:32] *** Joins: Guest524 (~Guest5@public-gprs227132.centertel.pl)
[21:18:52] <[itchyjunk]> jdoodle.com/ia/gyl
[21:19:03] <[itchyjunk]> hmm
[21:19:06] <jinsun> [itchyjunk]: ah no I read wrong
[21:19:20] <[itchyjunk]> well found a way to share
[21:19:21] <GeDaMo> Try it with just (z, y) ...
[21:19:25] <[itchyjunk]> ah
[21:19:32] <[itchyjunk]> I pre declare z and y ?
[21:19:36] <[itchyjunk]> or no need to at all?
[21:19:44] <GeDaMo> Try without types
[21:20:01] <[itchyjunk]> same error
[21:20:05] <[itchyjunk]> when I get rid of types
[21:20:38] <[itchyjunk]> second error is this
[21:20:40] <[itchyjunk]>         x.run(2,3);
[21:20:48] <[itchyjunk]> opops
[21:20:53] <[itchyjunk]> does my link work?
[21:20:58] <GeDaMo> Not for me
[21:21:21] <[itchyjunk]> jdoodle.com/ia/gym
[21:21:42] <[itchyjunk]> hmmmm
[21:21:57] <[itchyjunk]> claims it's a sharable link to the code
[21:22:05] <GeDaMo> OK, it's working now
[21:23:03] <[itchyjunk]> my understanding was stuff inside () got passed to a lambda function
[21:23:07] <[itchyjunk]> then you had a ->
[21:23:16] <[itchyjunk]> then a { } and a block of code in there
[21:23:17] <jinsun> Runnable.run should take no arguments apparently
[21:23:27] <[itchyjunk]> oh..
[21:23:46] <[itchyjunk]> so I can't pass stuff to lambda calculus function thingy? interesting
[21:23:48] <jinsun> so it is the Runnable interface that is the problem not the lambda syntax
[21:23:54] <[itchyjunk]> ah..
[21:24:19] *** Joins: lalitmee__ (~lalitmee@180.94.33.198)
[21:24:43] <jinsun> does Java have type inference, like var in C# ?
[21:24:55] <jinsun> or auto for C++ folks
[21:25:45] <[itchyjunk]> for type? you always have to declare types
[21:25:54] <[itchyjunk]> but it auto boxed primitive types
[21:25:58] <[itchyjunk]> which are not objects
[21:26:01] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi) (Read error: Connection reset by peer)
[21:26:47] *** Quits: lalitmee_ (~lalitmee@180.94.33.76) (Ping timeout: 245 seconds)
[21:26:55] *** Quits: xff0x (~xff0x@2001:1a81:5362:1000:ab65:46f5:7289:f422) (Ping timeout: 252 seconds)
[21:27:40] *** Joins: xff0x (~xff0x@2001:1a81:5362:1000:c47d:ed82:441b:712b)
[21:28:11] <[itchyjunk]> Runable Drawable Sayable ...
[21:28:16] <[itchyjunk]> Confusable ..
[21:29:04] <jeaye> jinsun: Nope. Just its generics.
[21:29:33] <[itchyjunk]> lol I need Addable I think
[21:29:37] * [itchyjunk] tries
[21:29:50] *** Quits: gggp_ (~gggp@111-251-157-238.dynamic-ip.hinet.net) (Ping timeout: 244 seconds)
[21:30:20] *** Quits: mnd999_ (~mark@2001:8b0:da3:76a2:4630:5b97:83a2:3e21) (Read error: Connection reset by peer)
[21:30:36] <Izem> I am looking at code that compares strings to see if they are the same. It mentioned something about pages "PAGE_SAFE_BLK = PAGE_SIZE - BLK_SIZE ; maximum offset for safe block compare" so I wonder if they want to stay within a Page to be cache friendly?
[21:30:46] *** Quits: lalitmee__ (~lalitmee@180.94.33.198) (Ping timeout: 252 seconds)
[21:30:53] <[itchyjunk]> hmmm it says Addable symbol not found
[21:30:58] <[itchyjunk]> but Addable is what I want
[21:30:58] <Izem> As in the string should be less than a page
[21:31:20] <[itchyjunk]> jdoodle.com/ia/gyo
[21:31:28] <[itchyjunk]> any idea? I got `Addable` from here
[21:31:36] <[itchyjunk]> https://www.javatpoint.com/java-lambda-expressions
[21:31:37] <bayaz> Title: Java Lambda Expressions - javatpoint 
[21:32:08] <[itchyjunk]> oh
[21:32:16] <[itchyjunk]> he creates an Addable interface on top
[21:32:26] <[itchyjunk]> it functional or w/e, with only one method
[21:32:39] <[itchyjunk]> and lambda is actually implementing that interface?
[21:32:42] <[itchyjunk]> aye karamba
[21:33:26] <GeDaMo> https://en.wikipedia.org/wiki/%C2%A1Ay%2C_caramba!
[21:33:27] <bayaz> Title: ¡Ay, caramba! - Wikipedia 
[21:34:13] <[itchyjunk]> ah that's how you spell it
[21:34:35] <[itchyjunk]> oh its positive
[21:34:41] <[itchyjunk]> ay !caramba
[21:34:43] <GeDaMo> I used to spell it Aye, Caramaba but I'm Scottish :P
[21:34:45] <[itchyjunk]> I can negate it
[21:34:47] <Aye> henlo
[21:35:40] <GeDaMo> Regretting your nick choice? :P
[21:35:43] *** Joins: xormor (leet@user/pamipetteri)
[21:35:47] <xormor> so if I use rot_13, and create it mathematically do I do b = a (mod 26) + 13 + 'a' if I use lowercase letters only?
[21:35:48] *** Joins: node1 (~node1@user/node1)
[21:36:08] <pyzozord> Anyone has experience with valgrind? How do I interpret this output? https://termbin.com/g9d7
[21:36:09] <bayaz> Type: text/plain; charset=utf-8 
[21:36:26] <[itchyjunk]> xormor that notation is confusing
[21:36:37] <GeDaMo> xormor: you'd have to subtract 'a' to get into the range 0..26
[21:36:41] <[itchyjunk]> stuff equivalent stuff (mod stuff)
[21:36:45] <[itchyjunk]> is the notation
[21:37:05] <GeDaMo> ((ch - 'a') + 13) mod 26 + 'a'
[21:37:37] <vdamewood> pyzozord: s/has/have/
[21:38:09] <pyzozord> vdamewood: that's always confused me. One has, but anyone have.
[21:38:50] <Aye> GeDaMo, always!
[21:39:30] <GeDaMo> :P
[21:39:39] <Izem> Is their a calculator that can handle this number 0fefefefefefefeffh ?
[21:39:47] <vdamewood> pyzozord: it's because you're asking a question. In English, the auxiliary verb gets conjugated. When you ask a question, you ad a meaningless 'to do' to the question, and that gets conjugated: "Does anyone have...". Colloqually, the 'Does' gets dropped.
[21:40:34] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Remote host closed the connection)
[21:40:41] <pyzozord> ooh
[21:41:03] <[itchyjunk]> okay look like I need to understand interfaces to understand lambda calculus in java
[21:41:09] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[21:41:12] <pyzozord> that makes sense. The does is kind of still there, still affecting the grammar
[21:41:28] <[itchyjunk]> since lambda functions seems to be implementing special types of interfaces with only one method
[21:41:33] <[itchyjunk]> iiuc
[21:41:37] <GeDaMo> Izem: Python will if you make it 0xfefefefefefefeff
[21:41:37] <Izem> [itchyjunk] it's an inner class not lamba calculus
[21:41:51] <Izem> ok great
[21:41:56] <[itchyjunk]> hmm?
[21:42:08] <[itchyjunk]> I am literally googling lambda calculus and this is what they return
[21:42:12] <vdamewood> pyzozord: In a statement, "Anyone has" would be correct. "Anyone has the ability to learn to program... badly."
[21:42:15] <[itchyjunk]> the ()->{} stuff
[21:42:22] *** Joins: lunarkitty (uid501895@user/pyra)
[21:42:30] <Juliu> Izem, the Windows calculator turns fefefefefefefeff into a negative number when you display it as decimal, so it cant handle that size
[21:42:40] <pyzozord> vdamewood: got it
[21:42:55] <Izem> Juliu: I tried it in hex and it said invalid input
[21:43:19] <Juliu> Izem, fefefefefefefeff as input worked for me
[21:43:46] <Izem> hmm, maybe I have to type it out then
[21:44:10] <Izem> already using python anyways
[21:44:13] *** Joins: NEYi (~NEYi@109.251.216.38)
[21:44:46] <GeDaMo> [itchyjunk]: it's not really lambda calculus, just an anonymous function
[21:44:53] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:7435:d465:48ce:7317)
[21:44:55] <[itchyjunk]> wtf you can use lambda calculus in place of variables to do funky shit
[21:45:04] <[itchyjunk]> GeDaMo what's the difference?
[21:45:13] <[itchyjunk]> anonymous class stuff is different it claims
[21:45:17] <[itchyjunk]> different syntax
[21:45:35] *** Joins: x003fgqwe (uid479614@id-479614.lymington.irccloud.com)
[21:45:36] <GeDaMo> https://en.wikipedia.org/wiki/Lambda_calculus
[21:45:36] <bayaz> Title: Lambda calculus - Wikipedia 
[21:45:37] <[itchyjunk]> A var = new A() { insert stuff for anonymous class and methods here }
[21:45:54] <vdamewood> pyzozord: Besides... Do you speak any Dutch? That would make English one of three languages you know.
[21:45:56] <[itchyjunk]> GeDaMo googling java lambda calculus returns these stuff though
[21:46:10] <GeDaMo> Yes, 'lambda' is used a a term for anonymous functions
[21:46:12] <pyzozord> aah! I got it --inclusive=yes gives much more sensible results! https://termbin.com/pv09z
[21:46:12] <bayaz> Type: text/plain; charset=utf-8 
[21:46:14] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 252 seconds)
[21:46:26] <[itchyjunk]> ...
[21:46:30] <pyzozord> vdamewood: Only barely, I'm below A2 level in Dutch
[21:46:36] <[itchyjunk]> so I am wasting my time learning anynomous functions?
[21:46:36] <GeDaMo> Lambda calculus is a whole thing :P
[21:46:41] <Juliu> Izem, https://defuse.ca/big-number-calculator.htm says that 0xfefefefefefefeff = 18374403900871474943 (not sure if correct!)
[21:46:42] <bayaz> Title: Online Big Number Calculator 
[21:46:46] <[itchyjunk]> I wanted to learn lambda calculus in programming
[21:47:03] <[itchyjunk]> how do you do lambda calculus in java then?
[21:47:07] <Izem> not the right language :/
[21:47:17] <bjs> [itchyjunk]: with functions
[21:47:22] <[itchyjunk]> stuck with java..
[21:47:29] <[itchyjunk]> bjs like anonymous functions?
[21:47:31] <bjs> [itchyjunk]: methods are basically like functions
[21:47:40] <bjs> [itchyjunk]: the anonymous part is very very unimportant for lambda calculus
[21:47:40] <pyzozord> My program is spending 90% of the time in some sdl-opengl function
[21:47:41] <[itchyjunk]> argh! so I was tricked
[21:47:52] <[itchyjunk]> I thought I was learning lambda stuff in java
[21:47:58] <Izem> yeah it's marketing
[21:47:59] <[itchyjunk]> but I was learning anynomous functions
[21:48:04] <vdamewood> pyzozord: I forget, what are the levels?
[21:48:13] <[itchyjunk]> I got bamboozeled
[21:48:26] *** Quits: fch (~myname87@mob-5-90-227-40.net.vodafone.it) (Quit: Leaving)
[21:48:29] <vdamewood> If you're below A2, does that mean you're B1 or A3?
[21:48:49] <pyzozord> vdamewood: A0-C2
[21:48:55] <Juliu> Izem, did you get what I searched for you?
[21:49:07] <pyzozord> vdamewood: oh sorry A1, A2, B1, B2, C1, C2
[21:49:26] <[itchyjunk]> I was trying to charge my phone through this keyboard but it's super slow
[21:49:31] *** Joins: webNET4 (~0x100@32.211.211.39)
[21:49:47] <pyzozord> vdamewood: means I'm between A1 and A2. Means I know something, but really not a lot
[21:49:54] *** Parts: keir (~keir@user/keir) (leave)
[21:49:54] <Izem> Juliu: yep, thank you
[21:50:01] <Juliu> Izem, you'Re welcome
[21:50:10] <vdamewood> pyzozord: Oh, wait, which is the weaker level, A or C?
[21:50:35] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Quit: Client closed)
[21:50:46] <Izem> GeDaMo: python doesn't have unsigned numbers right?
[21:50:52] *** Joins: compscipunk (~compscipu@107-214-234-232.lightspeed.sndgca.sbcglobal.net)
[21:50:56] <vdamewood> Izem: Correct.
[21:50:57] <GeDaMo> Sorry, I don't know
[21:50:57] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 245 seconds)
[21:51:07] <vdamewood> GeDaMo: Bignums and doubles only.
[21:51:09] <bjs> [itchyjunk]: the anonymous part of anonymous functions in lambda calculus is really just a very shallow thing people get very attached to but it's really only there for simplicity.
[21:51:13] <GeDaMo> Ah
[21:51:25] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[21:51:27] *** Joins: Enitin (~Enitin@82.102.22.85)
[21:51:37] *** Joins: flynn (~mcbloch@user/flynn)
[21:51:56] <vdamewood> GeDaMo: Oh wait, I think Python3's int type silently switches between int64 and bignum as needed.
[21:52:22] <GeDaMo> Yeah, I thought there was a small int which got promoted when it became large enough
[21:52:33] <GeDaMo> Or did they change that for 3?
[21:52:39] <vdamewood> GeDaMo: Changed in Python 3.
[21:52:57] <vdamewood> GeDaMo: There used to be int (int32 or int64, I forget which) and long (bignum).
[21:53:09] <Izem> yeah I think the code I'm looking at wants strings to be less than a page
[21:53:11] *** Joins: Macuser (~Macuser@216.30.159.201)
[21:53:49] <pyzozord> vdamewood: Oh sorry, I didn't know it was european thing. A is the weakest, C is the strongest. C2 is native-like. I like to think my english is C1. https://en.wikipedia.org/wiki/Common_European_Framework_of_Reference_for_Languages
[21:53:49] <bayaz> Title: Common European Framework of Reference for Languages - Wikipedia 
[21:54:09] <vdamewood> pyzozord: It may be a European thing, But I've encountered it before.
[21:55:08] <vdamewood> But damn. now I'm pissed off because I thought my books that said "Develop up to A2 skill" were saying they'd get me to full-ish mastery.
[21:56:04] *** Quits: BUSY (~BUSY@user/busy) (Ping timeout: 252 seconds)
[21:56:42] <pyzozord> vdamewood: oh no definetly not :D
[21:57:22] <GeDaMo> My hovercraft is full of eels :|
[21:58:56] * pyzozord punches GeDaMo 
[21:58:57] <vdamewood> GeDaMo: I will not buy this record. It is scratched.
[21:59:10] <GeDaMo> :D
[22:00:01] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[22:00:50] *** Joins: Akuli (~Akuli@87-94-108-135.bb.dnainternet.fi)
[22:02:16] <pyzozord> My program spends literally 90% of the time waiting for SDL_SetRenderTarget
[22:02:49] <GeDaMo> Is it actually waiting? Or doing something?
[22:02:49] <pyzozord> I either use SDL renders very wrong, or it's a very poorly written part of SDL
[22:03:13] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 252 seconds)
[22:03:25] <vdamewood> My favorite Scottish band released a new album last week. My order finally arrived yesterday.
[22:03:28] <GeDaMo> Maybe it's waiting for the vertical frame refresh?
[22:03:35] <pyzozord> Seems like internally it's calling GL_RunCommandQueue which takes up all the time
[22:03:44] <vdamewood> I need to rip it and sync my phone.
[22:03:50] <GeDaMo> I think that's sending data to the GPU
[22:04:09] * vdamewood wonders if there are any other Scottish bands he likes.
[22:04:22] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:04:25] <pyzozord> here is full output with tree of callers/calles and percentage of time taken https://termbin.com/mzy7
[22:04:26] <bayaz> Type: text/plain; charset=utf-8 
[22:05:16] *** Joins: xeno__ (~xeno@user/xeno)
[22:05:20] <pyzozord> GL_RunCommandQueue spends almost all of it's time at ???:0x00000000069a40e0 which I have no idea what it is
[22:07:04] <pyzozord> Ah I see that it spends all it's time in ???:0x00000000003d99d0 which comes from the graphics driver /usr/lib/x86_64-linux-gnu/dri/i965_dri.so
[22:07:07] *** Quits: xeno (~xeno@user/xeno) (Ping timeout: 245 seconds)
[22:08:04] <pyzozord> and down the line in the driver 0x000000000013df10 is the real reason for the slowness
[22:08:24] <vdamewood> Must rip CD.
[22:08:42] *** Joins: Enitin (~Enitin@82.102.22.84)
[22:08:49] <pyzozord> hmm it would be useful to have debugging information for drivers and kernel stuff
[22:09:37] *** Joins: vysn (~vysn@user/vysn)
[22:09:49] *** Quits: Izem (~Izem@bras-base-london1483w-grc-30-74-12-157-86.dsl.bell.ca) (Ping timeout: 252 seconds)
[22:10:13] * vdamewood hands pyzozord some debugging symbols.
[22:10:33] * pyzozord accepts the symbolic gesture
[22:10:48] * vdamewood gestures symbolically
[22:11:34] <pyzozord> That... was rude! :D
[22:11:52] <user51> symbolic programming is nice, but i also heartily recommend pointers
[22:11:52] <vdamewood> pyzozord: It's only rude if I turn my hand the other way.
[22:12:18] <vdamewood> like this.
[22:12:21] * vdamewood turns his hand
[22:12:34] *** Quits: flynn (~mcbloch@user/flynn) (Ping timeout: 252 seconds)
[22:12:43] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[22:12:51] * pyzozord twists vdamewood's hand further
[22:13:05] * vdamewood turns his whole body
[22:13:16] <pyzozord> Oh how the turntables!
[22:13:25] <user51> vdamewood is now a cd-rom
[22:13:39] <vdamewood> I will not buy this record! It is scratched!
[22:13:48] *** Joins: rexar89_ (~alexi5@208.83.82.234)
[22:14:13] <vdamewood> You spin me right round, baby, like a record, baby, right round, round round!
[22:14:25] <GeDaMo> https://www.youtube.com/watch?v=PGNiXGX2nLU
[22:14:26] <bayaz> Title: Dead Or Alive - You Spin Me Round (Like a Record) (Official Video) 
[22:14:31] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[22:14:53] <vdamewood> GeDaMo: Did you think of posting that link before or after I posted the lyrics line?
[22:15:07] <GeDaMo> I was already waiting for Youtube to load :P
[22:15:28] <pyzozord> heheh
[22:15:32] <vdamewood> Great minds
[22:16:14] *** Joins: flynn (~mcbloch@user/flynn)
[22:16:57] <CuriousErnestBro> Why don't programmers like using R?
[22:17:42] <Caffeinated> most programmers probably find lower case r is sufficient 
[22:17:44] <user51> does R have pointers?
[22:18:04] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 252 seconds)
[22:18:13] <vdamewood> I literally have no opinion on R.
[22:19:51] <user51> anyway, what's progging
[22:20:04] *** Quits: swagneko (~bit@user/nekobit) (Quit: needs more desu!)
[22:20:53] <user51> i made some horrible mess in awk: give every symbol a unique id, then concatenate them into lists. 
[22:21:05] <user51> world's worst lisp award :)
[22:22:17] *** Joins: Izem (~Izem@bras-base-london1483w-grc-30-74-12-157-86.dsl.bell.ca)
[22:22:17] *** Quits: Izem (~Izem@bras-base-london1483w-grc-30-74-12-157-86.dsl.bell.ca) (Client Quit)
[22:23:35] <pyzozord> An awkard lisp?
[22:23:48] <pyzozord> damn it, awkward
[22:24:05] <Caffeinated> lisps and mis-pronounced R's
[22:24:10] *** Quits: euouae (~euouae@user/euouae) (Quit: Client closed)
[22:27:12] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[22:27:23] *** Joins: flynn (~mcbloch@user/flynn)
[22:27:46] <pulse> user51, because indices start with 1
[22:28:40] <pulse> ehm, CuriousErnestBro* sorry user51 
[22:28:52] <CuriousErnestBro> that seems silly
[22:29:14] <user51> it always seems silly until you miss it :)
[22:31:32] <pyzozord> How do I install linux kernel debug symbols? Is it a good idea to do it?
[22:33:28] *** Joins: audiocat (~audio@2603-8081-1801-3bb5-ee33-baaf-ff65-1117.res6.spectrum.com)
[22:36:06] *** Parts: xormor (leet@user/pamipetteri) ()
[22:42:04] <RedNifre> What's the situation with Rx, like RxJava etc.? Is that still popular?
[22:42:09] <homura> l8r
[22:42:17] *** Joins: brw7 (~bas@static.66.39.12.49.clients.your-server.de)
[22:42:55] <Caffeinated> doctor java?
[22:43:55] <CuriousErnestBro> ah, doctor java brings back memories 
[22:44:08] *** Quits: brw (~bas@static.66.39.12.49.clients.your-server.de) (Read error: Connection reset by peer)
[22:44:08] *** brw7 is now known as brw
[22:44:12] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[22:44:24] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[22:48:22] *** Joins: pikapika_lunar (~pikapika_@pika.powered.by.lunarbnc.net)
[22:49:00] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Client Quit)
[22:49:15] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Ping timeout: 276 seconds)
[22:49:53] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:49:58] *** Joins: bencevans5 (~bencevans@static.153.97.4.46.clients.your-server.de)
[22:51:47] *** Quits: bencevans (~bencevans@static.153.97.4.46.clients.your-server.de) (Ping timeout: 245 seconds)
[22:51:47] *** bencevans5 is now known as bencevans
[22:51:51] *** Quits: Architect (~GodMode@user/h4x0r) (Ping timeout: 276 seconds)
[22:52:30] *** Quits: mickey (~user@user/mickey) (Ping timeout: 276 seconds)
[22:52:30] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (Ping timeout: 276 seconds)
[22:52:30] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Ping timeout: 276 seconds)
[22:53:33] *** Joins: BrianG61UK__ (~BrianG61U@2a02:8010:66b7:dddd:5c4f:6d00:4ecc:dae9)
[22:55:07] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:b5e8:61ab:ae33:6d00) (Ping timeout: 245 seconds)
[22:55:11] *** Joins: Curiosity (uid511277@user/cypris)
[22:55:28] *** Quits: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:5c4f:6d00:4ecc:dae9) (Ping timeout: 252 seconds)
[22:55:35] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:b5e8:61ab:ae33:6d00)
[22:58:45] *** Joins: mickey (~user@user/mickey)
[22:58:46] *** Joins: anovick (~anovick@2a0d:6fc0:18cb:e900:98e9:2c6f:1a52:52c0)
[22:58:51] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[22:58:51] *** Joins: CinderellaMan (~GodMode@user/h4x0r)
[22:59:40] *** Quits: audiocat (~audio@2603-8081-1801-3bb5-ee33-baaf-ff65-1117.res6.spectrum.com) (Ping timeout: 240 seconds)
[23:00:12] *** Quits: ^-^hi (~nikw@user/-hi/x-1729478) (Ping timeout: 256 seconds)
[23:01:35] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[23:02:07] <davros> how does library linking work with wasm 
[23:02:28] <davros> are wasm files like executables , or can they still be 'linked'
[23:02:42] <davros> is there a 'wasm ecosystem' equivalent of a library
[23:02:47] *** Joins: vitorgonc (~vitorgonc@2804:d55:580c:5e00:7498:9392:9f51:5d2e)
[23:03:18] <mrig> From what I understand you compile a wasm file and access it with JS rather like a library.
[23:06:26] <Caffeinated> better yet, does "wasm" have searchable documentation
[23:08:18] <mrig> not on the command line, I wouldn't imagine.
[23:08:34] <mrig> no where sensible like in the terminal that you use to code with it.
[23:08:47] <GeDaMo> https://webassembly.github.io/spec/core/
[23:08:48] <bayaz> Title: WebAssembly Specification — WebAssembly 1.1 (Draft 2021-08-19) 
[23:08:53] * mrig needs a rest already.
[23:09:47] <GeDaMo> https://developer.mozilla.org/en-US/docs/WebAssembly
[23:09:48] <bayaz> Title: WebAssembly | MDN 
[23:09:55] <deniska> davros: wasm specifies an executable/library format not unlike elf or PE
[23:09:59] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:b5e8:61ab:ae33:6d00) (Quit: Leaving)
[23:10:11] *** Joins: arcatech (~arcatech@user/arcatech)
[23:10:17] *** Quits: BrianG61UK__ (~BrianG61U@2a02:8010:66b7:dddd:5c4f:6d00:4ecc:dae9) (Quit: Leaving)
[23:10:46] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[23:10:58] *** Joins: flynn (~mcbloch@user/flynn)
[23:11:16] <pyzozord> ok I think I give up on the ubuntu linux headers
[23:12:13] *** Joins: peteyboy1 (~peteyboy1@95.169.235.10)
[23:13:38] *** Quits: nvmd (~nvmd@user/nvmd) (Quit: Later, nerds.)
[23:14:21] *** Joins: ^-^hi (~nikw@user/-hi/x-1729478)
[23:14:24] *** Quits: magla (~gelignite@55d44ca3.access.ecotel.net) (Remote host closed the connection)
[23:14:40] *** Joins: magla (~gelignite@55d44ca3.access.ecotel.net)
[23:20:13] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[23:20:42] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[23:22:09] <mrig> what are PE files?
[23:22:17] <mrig> I know elf from linux binaries.
[23:23:00] <mrig> oh the window version perhpas.
[23:23:00] <GeDaMo> Portable Executables, Windows 
[23:23:07] <mrig> right yes
[23:23:39] <mrig> where the dll are the dynamical linked binaries.
[23:23:57] <mrig> or so I gather.
[23:24:04] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[23:24:10] *** Quits: vs^ (~vs@wsip-98-188-244-188.mc.at.cox.net) (Ping timeout: 240 seconds)
[23:24:25] <mrig> not used windows since learning anything about programming so it is still a bit of a mystery.
[23:24:49] *** Lemniscate is now known as Sauvin
[23:25:10] <GeDaMo> Dynamically Linked Libraries, yes
[23:25:19] <GeDaMo> I think they're still PE though
[23:25:46] <Twix> Its just M$'s format for executables. The UEFI standard uses the same format. Which results in linux bootloaders like grub or even the Linux kernel(which can boot itself without any bootloader) to exist as PE32 files :D
[23:25:51] *** Quits: isosterix (~isosterix@ip-95-222-34-30.hsi15.unitymediagroup.de) (Read error: Connection reset by peer)
[23:25:52] <mrig> ah ok, all the binaries PE then, is that the same on linux? The a files are elf?
[23:26:07] <mrig> a and o I suppsoe?
[23:26:10] *** Quits: hexingb (~hexingb@111.30.225.74) (Ping timeout: 240 seconds)
[23:26:15] <DPA> .so is ELF too
[23:26:20] <GeDaMo> I'm not sure if .a are but .so are, I think
[23:26:26] <DPA> .a and .o are different
[23:26:34] <GeDaMo> .a is an archive
[23:26:45] <mrig> ah right, yes a make with ar
[23:26:49] <Twix> .a is a archive of .o files(which are ELF objects)
[23:26:49] *** Quits: dan01 (~dan01@109.100.108.171) (Ping timeout: 252 seconds)
[23:27:00] <mrig> right, that makes sense.
[23:27:12] <mrig> an so?
[23:27:21] <mrig> the whole program?
[23:27:32] <mrig> apart from linked codde
[23:27:35] <mrig> code rather.
[23:27:50] <DPA> A so is also ELF. SOme can even be executed.
[23:28:34] <pulse> did someone say elf
[23:28:39] * pulse hides his pointy ears
[23:28:46] <Twix> :3
[23:28:53] <Twix> no, that are elves
[23:29:15] <Twix> or vulkanians
[23:30:00] <Twix> LLAP _\\//
[23:30:16] <DPA> If I execute /usr/lib/x86_64-linux-gnu/libpthread.so, it prints the copyright notice.
[23:30:23] <Twix> but there are no elves or vulkanians in computers. Only deamons
[23:30:43] <Twix> DPA, yes, they can be executable
[23:30:44] * mrig reaches for bow and plucks a tune on it; Something irritable to elvin feet.
[23:31:11] <mrig> apparently my computer is full of elf's then.
[23:31:48] <mrig> irresistible rather than irritable, darned spell correction.
[23:32:31] *** Joins: Crescendo (~Crescendo@user/crescendo)
[23:33:01] <GeDaMo> https://en.wikipedia.org/wiki/DWARF
[23:33:01] <bayaz> Title: DWARF - Wikipedia 
[23:33:16] *** Joins: ixil (~ixil@82.197.178.137)
[23:33:17] <mrig> oh cool, yes it does.
[23:33:53] <mrig> there is kill -9 for the deamons if they get unruly!
[23:34:07] <mrig> daemons rather
[23:34:21] <rustyshackleford> is there much work in C?
[23:34:27] <mrig> love the nasty or nice settings on the processes in linux.
[23:34:41] <mrig> Is that a carry over from UNIX?
[23:34:42] <rustyshackleford> been doing react/javascript for like 5 years
[23:34:47] <pulse> mrig, linux is like https://www.youtube.com/watch?v=wEPKO5bD7TQ
[23:34:49] <bayaz> Title: Rise From The Dead in the name of Satan 
[23:34:49] *** Joins: dan01 (~dan01@109.100.108.171)
[23:34:54] <rustyshackleford> started doing some Java backend and I'm kinda liking the lower level work
[23:35:03] *** Quits: ishan (~ishan@li2028-175.members.linode.com) (Quit: Peace.)
[23:35:20] <mrig> lol!
[23:35:37] *** Quits: Cashlin (~hp@user/cashlin) (Quit: Konversation terminated!)
[23:35:43] <deniska> rustyshackleford: java is not exactly much lower level than js
[23:35:49] *** Quits: VoidNoir0 (~VoidNoir0@72.80.203.52) (Quit: Connection closed)
[23:35:52] <deniska> at least if you compare it to C vs java
[23:36:00] <rustyshackleford> that is true
[23:36:16] <mrig> rustyshackleford: C is quite domain specific I think.
[23:36:33] <mrig> you might need to target a domain to get work with it.
[23:36:43] <rustyshackleford> which domains?
[23:36:50] <deniska> rustyshackleford: C is common in kernel/driver development, MCU and other kind of lower end embedded
[23:36:54] <rustyshackleford> I'm thinking something like industrial/manufacturing automation
[23:37:04] <mrig> well still used for drives and in electronics.
[23:37:30] <mrig> rustyshackleford: you would need to do some investigation to find out.
[23:38:39] <mrig> likely those are in C++ or java, but could be in C.
[23:39:16] <mrig> my brother writes C, that is for drivers for scientific equipment though, so a niche company.
[23:39:51] <mrig> small niche production not large scale.
[23:40:26] *** Quits: inky_ (~inky@188.115.227.51) (Ping timeout: 256 seconds)
[23:42:40] *** Joins: snake (~snake@user/snake)
[23:42:42] *** Quits: Stefan26 (~Stefan26@78-67-218-242-no207.tbcn.telia.com) (Ping timeout: 256 seconds)
[23:43:44] *** Joins: vs^ (~vs@wsip-98-188-244-188.mc.at.cox.net)
[23:43:49] <pyzozord> cool, I'm stuck making buttons for websites
[23:44:18] <pyzozord> anything is more interesting than another debate should make the button red or green
[23:44:26] <pyzozord> it feels like that scene from fight club
[23:45:36] <deniska> pyzozord: almost literallt bikeshedding
[23:45:48] <edgar-rft> sell your buttons at ebay and let them pay double for buying a red *and* a green button
[23:46:03] *** Joins: gladys (~jackiek@c-174-55-240-240.hsd1.pa.comcast.net)
[23:46:11] <gladys> hello
[23:46:26] <edgar-rft> world!
[23:46:33] <gladys> printf
[23:46:40] <gladys> syntax invalid
[23:47:17] *** Joins: swagneko (~bit@user/nekobit)
[23:47:31] <rustyshackleford> I dunno it would be fun o do something more concrete
[23:47:37] <rustyshackleford> industrial automation seems fun
[23:47:43] <rustyshackleford> idk what else is out there except for websites/mobile apps
[23:47:51] <mrig> What was that comic clip of a business meeting where they want a triangle to be given more squareness or a red triangle made into something impossible?
[23:48:38] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[23:49:56] <deniska> mrig: I know a video sketch like that
[23:50:03] <edgar-rft> rustyshackleford: I suggest you do some concrete math -> https://www.calculator.net/concrete-calculator.html
[23:50:04] <bayaz> Title: Concrete Calculator 
[23:50:14] <mrig> ah this one https://www.youtube.com/watch?v=BKorP55Aqvg
[23:50:20] <bayaz> Title: The Expert (Short Comedy Sketch) 
[23:50:38] <rustyshackleford> It might be fun to do actual concrete work
[23:50:42] <gladys> im not really a programmer. I only know  shell from reading The Linux CLI by William Shotts and The Linux Bible by Christopher Negus. And I was wondering if there were any books on  programming youd recommend?
[23:50:45] <rustyshackleford> hang up the software development career ha
[23:50:47] <GeDaMo> https://www.youtube.com/watch?v=AySXu8x-RnA
[23:50:48] <bayaz> Title: The Birth Of Poochie (The Simpsons) 
[23:51:27] *** Joins: fch (~myname87@mob-5-90-227-40.net.vodafone.it)
[23:51:34] <gladys> ideally in C language
[23:52:27] <GeDaMo> One of these days, I going to get around to reading this :P https://modernc.gforge.inria.fr/
[23:52:28] <bayaz> Title: Modern C 
[23:52:47] <edgar-rft> I'm not sure if there are books written in the C language :-)
[23:53:22] <edgar-rft> Jokes aside, I'm a terrible C programmer, better don't listen to me.
[23:53:48] <gladys> well the kernel is written in C thats why Im so interested in it specifically
[23:54:00] <gladys> but apologies if thats a weird thing to ask here
[23:54:19] <GeDaMo> Nothing wrong with asking for book recommendations
[23:54:20] *** Joins: ishan (~ishan@2400:8904::f03c:91ff:fe9e:a26f)
[23:55:17] *** Joins: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net)
[23:55:26] *** Quits: Maker (~maker@70.18.215.45) ()
[23:55:54] <gladys> is C a god awful place to start? 
[23:56:00] <edgar-rft> You could read "The development of the C language" where Dennis Ritchie explains what he would do better if he could start over again -> http://www.bell-labs.com/usr/dmr/www/chist.html
[23:56:01] <bayaz> Title: Chistory 
[23:56:26] <edgar-rft> It's not too long...
[23:56:40] <deniska> gladys: generally I'd recommend against it, but if kernel development is your passion, C is a good place to start :)
[23:57:50] <deniska> gladys: people also use other languages in this space, C++ is also popular in this niche (well, outside of linux and most other unixy things), and rust is a new kid on a block people also experiment with in that regard
[23:58:42] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2)
[23:59:10] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 240 seconds)
[23:59:24] <deniska> osdev wiki has some other interesting mentions including freepascal, freebasic, go and even C#
[23:59:50] <deniska> basically anything which supports a standalone compilation with minimal runtime can be used for that, at least in theory
