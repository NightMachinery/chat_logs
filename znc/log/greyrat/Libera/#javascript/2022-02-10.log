[00:01:23] *** Joins: twiclo (~twiclo@2604:7b80:2000:1069:52fc:cedd:fbeb:10c)
[00:01:40] <twiclo> Does JS have an "if let"?
[00:04:00] <tokie> like rust's if let?
[00:04:55] <twiclo> Yeah
[00:05:16] *** Joins: yagamilito (~yagamilit@2601:642:4600:34b0:f5d2:86ea:63ad:b952)
[00:05:37] *** Quits: yagamilito (~yagamilit@2601:642:4600:34b0:f5d2:86ea:63ad:b952) (Client Quit)
[00:05:49] *** Joins: yagamilito (~yagamilit@2601:642:4600:34b0:f5d2:86ea:63ad:b952)
[00:06:06] <hassoon_> if let ?
[00:06:18] *** Quits: baracurda_ (~baracurda@user/parserblabla) (Ping timeout: 276 seconds)
[00:07:02] <hassoon_> maybe if ( (()=>{let ...})() )
[00:07:08] *** Quits: hseg (~hseg@195.192.229.41) (Remote host closed the connection)
[00:07:11] <hassoon_> but if let ? nah i don't think so
[00:08:22] *** Quits: ThePhilgrim (~thephilgr@151.40.115.120) ()
[00:08:51] *** Joins: sidro (~sidro@86.126.115.212)
[00:09:59] *** Joins: hseg (~hseg@195.192.229.41)
[00:10:08] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 256 seconds)
[00:12:18] *** Joins: c4017w__ (~c4017@209.52.68.8)
[00:12:48] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Ping timeout: 276 seconds)
[00:13:15] *** Quits: nomic (~nomic@185.217.117.245) (Remote host closed the connection)
[00:13:40] *** Quits: sidro (~sidro@86.126.115.212) (Remote host closed the connection)
[00:15:18] *** Joins: nomic (~nomic@2a00:23c7:ec90:a501:28ee:8914:7d0d:6f8)
[00:15:48] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[00:16:15] *** Joins: sidro (~sidro@86.126.115.212)
[00:17:26] *** Quits: sidro (~sidro@86.126.115.212) (Client Quit)
[00:18:12] *** Joins: sidro (~sidro@86.126.115.212)
[00:20:37] *** Joins: matsaman (~matsaman@user/matsaman)
[00:22:35] *** Quits: nomic (~nomic@2a00:23c7:ec90:a501:28ee:8914:7d0d:6f8) (Quit: Leaving)
[00:24:22] *** Joins: asanto (~asanto@195.114.145.50)
[00:25:17] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[00:26:43] *** Quits: hseg (~hseg@195.192.229.41) (Remote host closed the connection)
[00:28:11] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[00:31:39] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[00:31:52] *** Quits: asanto (~asanto@195.114.145.50) (Quit: Leaving)
[00:33:55] *** Joins: chromagna (~chromagna@174.27.145.218)
[00:34:10] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 250 seconds)
[00:35:11] *** Quits: twiclo (~twiclo@2604:7b80:2000:1069:52fc:cedd:fbeb:10c) (Ping timeout: 268 seconds)
[00:36:04] *** Quits: sidro (~sidro@86.126.115.212) (Remote host closed the connection)
[00:36:07] <EdFletcher> Correct, it does not
[00:36:19] *** Quits: teut (~teut@2401:4900:1c68:dbe1:482e:df7e:b828:f451) (Quit: Client closed)
[00:36:31] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[00:36:50] *** Joins: ckdCreations (~ckdCreati@147.55.133.136)
[00:37:06] *** Joins: twiclo (~twiclo@66.29.177.50.static.utbb.net)
[00:37:16] *** Joins: nomic (~nomic@2a00:23c7:ec90:a501:28ee:8914:7d0d:6f8)
[00:37:41] *** Joins: pycurious (~Adium@user/pycurious)
[00:38:14] *** Joins: teut (~teut@2401:4900:1c68:dbe1:482e:df7e:b828:f451)
[00:40:45] *** Quits: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 276 seconds)
[00:44:08] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[00:45:36] *** Nnnavd is now known as Nnavd
[00:45:44] <senoraraton> In this paste from https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API/webRequest/onBeforeRequest -> https://bpa.st  On line 15 how do I find out what the accetable values for types: is?
[00:45:56] <senoraraton> *acceptable
[00:46:52] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[00:47:43] *** Quits: humanBird (~humanBird@2603-8001-7000-3642-8c2b-39c2-5b67-a4ff.res6.spectrum.com) (Quit: Client closed)
[00:48:05] <ljharb> senoraraton: you mean like mime types?
[00:48:31] <senoraraton> I think its -> https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensionRequestons/API/webRequest/ResourceType
[00:48:32] <ljharb> senoraraton: https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API/webRequest/RequestFilter
[00:48:41] <ljharb> so yes, what you have
[00:50:59] <senoraraton> What sort of type is just a generic link click?  I'm trying to censor links and write custom onClick functions that match a specific URL
[00:52:21] *** Quits: nomic (~nomic@2a00:23c7:ec90:a501:28ee:8914:7d0d:6f8) (Quit: Leaving)
[00:53:06] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[00:53:33] *** Joins: pycurious (~Adium@user/pycurious)
[00:58:11] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 250 seconds)
[00:59:13] <ljharb> senoraraton: links aren't only hit on click, so that won't really work anyways
[00:59:29] <ljharb> senoraraton: eg, i always right click and open in new tab, or copy and paste into a new tab, etc, and neither of those triggers onClick
[01:01:57] *** Quits: dan01 (~dan01@2a02:2f0f:311c:1500:5502:3f50:21ba:ca4a) (Read error: Connection reset by peer)
[01:02:24] <senoraraton> The type is optional, so I'm just capturing everything that matches the subdomain I specify.
[01:03:18] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[01:03:34] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:03:53] *** Joins: stwange (~j@82.21.202.140)
[01:04:06] *** Quits: hojasuelta (~hojasuelt@187.144.37.38) (Remote host closed the connection)
[01:04:17] *** Quits: chromagna (~chromagna@174.27.145.218) (Ping timeout: 256 seconds)
[01:04:48] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: The Game)
[01:06:38] *** Quits: c4017w__ (~c4017@209.52.68.8) (Quit: Leaving)
[01:07:14] *** Quits: ox1eef (~0x1eef@user/ox1eef) (Remote host closed the connection)
[01:07:25] *** Joins: ox1eef (~0x1eef@user/ox1eef)
[01:09:04] *** Joins: hojasuelta (~hojasuelt@187.144.37.38)
[01:10:00] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[01:11:14] *** Joins: pycurious (~Adium@user/pycurious)
[01:11:58] *** Joins: chromagna (~chromagna@174.27.145.218)
[01:13:26] *** Joins: Harlin (~DonQixote@75-163-202-34.clsp.qwest.net)
[01:14:37] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[01:15:46] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[01:16:21] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[01:17:36] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[01:18:33] *** Quits: clamiax (~clamiax@net-93-144-125-193.cust.dsl.teletu.it) (Quit: circo)
[01:19:01] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Ping timeout: 256 seconds)
[01:19:14] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 250 seconds)
[01:20:05] *** Joins: clamiax (~clamiax@net-93-144-125-193.cust.dsl.teletu.it)
[01:24:54] *** Quits: dingdreher (~dingdrehe@2a02:aa08:401e:fff2:35f4:c0a:127c:c6a0) (Quit: dingdreher)
[01:25:25] *** Joins: coder7of9 (~coder7of9@user/coder7of9)
[01:26:12] *** Joins: mintoyatsu (~mint@user/mintoyatsu)
[01:28:45] <coder7of9> i have class MyClass(   constructor(){ this.foo = "bar" ;} )  and MyClass.prototype.myInlineClass={     action:function(){   Here  I would like to access   foo } }      Can I get to foo from here?
[01:30:25] <coder7of9> if not I can rework my class so I do not use prototype to extend
[01:30:37] <ljharb> stwange: you need to auth with nickserv for non-ops to see what you say. see the last link in the topic
[01:30:57] *** Quits: D4mned (~D1mned@212.101.234.121) (Quit: Leaving)
[01:31:19] *** Joins: abf (~abf@user/abf)
[01:31:23] <stwange> ljharb, thanks, didn't realise I wasn't authed
[01:31:35] <stwange> Sorry for the newbie question but I'm trying to figure out why a Ghost theme is giving me NaN for currentIndex after an update. It gets it from parseInt($('.loop .swiper-slide:first-child .pagination-number:first-child b').text())   - What's it searching for inside that $(.loop....) ?
[01:35:28] *** Quits: serh (serh@nemern.icu) (Read error: Connection reset by peer)
[01:36:28] *** Joins: c4017w (~c4017@209.52.68.8)
[01:37:57] *** Quits: clamiax (~clamiax@net-93-144-125-193.cust.dsl.teletu.it) (Remote host closed the connection)
[01:37:59] *** Joins: dirigible (~dirigible@2607:9000:0:3:36a4:cf80:2f7b:6990)
[01:39:56] *** Joins: clamiax (~clamiax@net-93-144-125-193.cust.vodafonedsl.it)
[01:40:28] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[01:40:30] *** Quits: teut (~teut@2401:4900:1c68:dbe1:482e:df7e:b828:f451) (Quit: Client closed)
[01:40:53] *** Quits: dirigible_ (~dirigible@2607:9000:0:3:36a4:cf80:2f7b:6990) (Ping timeout: 256 seconds)
[01:43:08] <senoraraton> So I'm a bit confused. I'm following the docs on webRequest.onBeforeRequest and the first example they give -> https://bpa.st/AKMA is supposed to log every request to the console, but its not working.  My script is loading because I have a test function at its head, but I'm not getting the function calls
[01:43:47] <senoraraton> Here is my manifest.json file -> https://termbin.com/ajkm
[01:44:37] <senoraraton> I'm pretty sure according to the docs, I don't actually need the permissions listed for this simple function, but I added them in testing just incase.
[01:45:46] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[01:46:33] *** Quits: The_Blod- (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[01:48:10] *** Quits: garrit (~garrit@user/garrit) (Ping timeout: 256 seconds)
[01:53:41] *** Quits: magga (magga@ti0036a400-3577.bb.online.no) (Remote host closed the connection)
[01:56:11] *** Joins: llorllale (~llorllale@198.98.119.85)
[01:58:33] *** Quits: junebug (~junebug@2600:1700:3db0:2540:bb54:f69c:5ce0:5722) (Quit: Leaving)
[02:01:33] *** Joins: nitrospectide (~Adium@38.65.76.76)
[02:02:30] *** Quits: yagamilito (~yagamilit@2601:642:4600:34b0:f5d2:86ea:63ad:b952) (Quit: Client closed)
[02:02:42] <nitrospectide> Can anyone recommend a lightweight jQuery lightbox that will let me tag images as part of a sequence that can be stepped through in a modal? Colorbox used to do this really nicely, but it's for jQ 1.x
[02:04:03] *** Quits: Arisc (~ckmptnml@189-31-251-104.user3p.brasiltelecom.net.br) (Ping timeout: 250 seconds)
[02:04:23] <senoraraton> So apparently you have to use a background script.  You can't run the webRequest api in a content script.... Would be really nice if that was stated in the documentation.
[02:05:55] *** Joins: garrit (~garrit@ip-109-42-114-196.web.vodafone.de)
[02:05:55] *** Quits: garrit (~garrit@ip-109-42-114-196.web.vodafone.de) (Changing host)
[02:05:55] *** Joins: garrit (~garrit@user/garrit)
[02:07:11] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Ping timeout: 256 seconds)
[02:07:20] <ljharb> stwange: parseInt should always have its second argument, radix, specified - set it to `10` (altho that probably isn't the issue)
[02:07:28] <ljharb> stwange: but also see what the string is before passing it into parseInt
[02:08:01] *** Quits: happymeal (~happymeal@user/happymeal) (Read error: Connection reset by peer)
[02:08:14] *** Joins: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au)
[02:09:20] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[02:10:35] *** Quits: garrit (~garrit@user/garrit) (Ping timeout: 256 seconds)
[02:10:48] *** Joins: garrit (~garrit@p5dd0d0a0.dip0.t-ipconnect.de)
[02:10:48] *** Quits: garrit (~garrit@p5dd0d0a0.dip0.t-ipconnect.de) (Changing host)
[02:10:48] *** Joins: garrit (~garrit@user/garrit)
[02:12:39] *** Quits: garrit (~garrit@user/garrit) (Client Quit)
[02:12:45] *** Joins: garrit (~garrit@p5dd0d0a0.dip0.t-ipconnect.de)
[02:12:45] *** Quits: garrit (~garrit@p5dd0d0a0.dip0.t-ipconnect.de) (Changing host)
[02:12:45] *** Joins: garrit (~garrit@user/garrit)
[02:13:37] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 240 seconds)
[02:13:41] *** Joins: spronkey (~spronkey@122-58-75-76-adsl.sparkbb.co.nz)
[02:13:45] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Remote host closed the connection)
[02:15:55] *** Joins: pycurious (~Adium@user/pycurious)
[02:15:59] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[02:16:20] *** Quits: mintoyatsu (~mint@user/mintoyatsu) (Remote host closed the connection)
[02:16:21] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[02:18:37] *** Quits: purphoroff (purphoros@devforge.org) (Ping timeout: 240 seconds)
[02:20:19] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 250 seconds)
[02:20:24] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[02:20:25] *** Quits: hojasuelta (~hojasuelt@187.144.37.38) (Remote host closed the connection)
[02:20:37] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[02:20:42] *** Joins: hojasuelta (~hojasuelt@2806:102e:18:abc0:9c52:c28:4dbf:3b25)
[02:20:57] *** Joins: purphoros (purphoros@devforge.org)
[02:21:24] *** Quits: hojasuelta (~hojasuelt@2806:102e:18:abc0:9c52:c28:4dbf:3b25) (Remote host closed the connection)
[02:21:35] *** Joins: pycurious (~Adium@user/pycurious)
[02:22:29] *** Quits: flughafen (~flughafen@p2e55dcb3.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[02:22:29] *** Quits: garrit (~garrit@user/garrit) (Read error: Connection reset by peer)
[02:25:58] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 260 seconds)
[02:26:08] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:27:15] *** Joins: pycurious (~Adium@user/pycurious)
[02:27:51] *** Joins: garrit (~garrit@p5dd0d0a0.dip0.t-ipconnect.de)
[02:27:51] *** Quits: garrit (~garrit@p5dd0d0a0.dip0.t-ipconnect.de) (Changing host)
[02:27:51] *** Joins: garrit (~garrit@user/garrit)
[02:27:52] *** Joins: sam_1 (~sam_1@87.51.251.118)
[02:30:01] *** Quits: Sven_vB_ (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:25] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:31:33] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[02:32:25] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[02:32:49] <ox1eef> nitrospectide: whatever you find will probably be unmaintained.
[02:32:58] *** Joins: kongzilla (~weechat@gateway/tor-sasl/kongzilla)
[02:33:20] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Client Quit)
[02:33:25] *** Joins: pycurious (~Adium@user/pycurious)
[02:33:41] *** Quits: pizdets (~pizdets@183.182.114.142) (Ping timeout: 245 seconds)
[02:34:02] *** Joins: pizdets_ (~pizdets@183.182.115.213)
[02:35:12] *** Quits: mat001 (~mat001@72.28.108.216) (Ping timeout: 256 seconds)
[02:35:25] <ljharb> nitrospectide: jquery plugins have always been a bad idea, and jquery itself is generally avoided now that react and friends exist
[02:37:10] *** Joins: c4017w_ (~c4017@209.52.68.8)
[02:38:21] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 256 seconds)
[02:38:43] <lockdown_> ljharb: what do you recommend for 'progressive enhancement' ?
[02:39:44] *** Quits: chromagna (~chromagna@174.27.145.218) (Quit: leaving)
[02:40:00] *** Joins: chromagna (~chromagna@174.27.145.218)
[02:40:26] <ljharb> lockdown_: to do it?
[02:40:30] <ljharb> not sure what you're asking
[02:40:52] *** Quits: c4017w (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[02:41:54] <lockdown_> to enhance an already server-rendered html web app
[02:42:23] <alystair> progressive enhancement simply means you have a baseline quality expected for the user experience and then you further enhance it using features that maybe limited to certain browsers
[02:43:32] *** Joins: yagamilito (~yagamilit@2601:642:4600:34b0:f5d2:86ea:63ad:b952)
[02:45:57] <ljharb> lockdown_: if it's already server-rendered, progressive enhancement just means "add some stuff that only works when JS does, or when specific browser features are present"
[02:46:00] <kongzilla> is Modernizr still relevant?
[02:46:04] <ljharb> kongzilla: yes
[02:46:17] <ljharb> kongzilla: but, using frameworks like react and friends usually already covers that stuff
[02:49:16] <alystair> of course Paul Irish is involved in that project, can't escape em'! :D
[02:52:29] <coder7of9> would you favor react over native javascript   i have read conflicting views
[02:54:16] <kongzilla> it depends on the size of the app
[02:54:19] <ox1eef> is the browser implmenting its own react
[02:54:24] <kongzilla> native javascript can go a long way
[02:54:31] <ox1eef> or making it easier for the react model?
[02:54:55] <alystair> depends on size of the app, and who is going to be reading the code ;)
[02:55:05] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[02:55:38] <kongzilla> If I were to build something kind of mid-sized but wanted absolutely no build step, I would go with Vue
[02:56:23] <ox1eef> whatever the circumstance id go with Vue
[02:56:49] *** Joins: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net)
[02:57:13] <kongzilla> I like functional react components
[02:58:54] <coder7of9> i am always hesitant that in 3 years these libraries fall out of flavor and there is a load of legacy code dependent on them... i guess the same of true of vanilla javascript as it will also age and need to be updated.
[02:58:58] <ljharb> coder7of9: react is native javascript
[02:59:07] <ljharb> coder7of9: and react has been "in flavor" since 2013. it's not going anywhere.
[02:59:22] <ljharb> (also, react over vue, personally)
[02:59:36] <ljharb> and "no build step" is a bad thing to want :-)
[02:59:49] <ox1eef> it's just the nature of it. once everything used jquery.
[02:59:50] <sheetjs> nothing ever "dies".  even jquery and backbone thrive in 2022
[03:00:17] <sheetjs> to a large extent because of fear of lock-in with react
[03:00:37] <ox1eef> the jquery ive seen is always the wild wild west.
[03:00:57] <ljharb> in no way does backbone "thrive" now
[03:01:01] <ljharb> it merely still exists. jquery too
[03:01:08] <coder7of9> all these libraries are technically native javascript...   someone who is competent in react may still need to learn vanilla javascript  (without react)
[03:01:20] <ljharb> and nobody afraid of lock-in chooses jquery or backbone or anything else. react's no different.
[03:01:41] <sheetjs> coder7of9: your concern is well placed if you think you will need to revisit when you don't have the resources to rewrite
[03:01:42] <ox1eef> i'm a fan of vanilla javascript, and you can get by, but ultimately the reactive model is better in some circumstances.
[03:01:46] <kongzilla> can't really be "competent" in react without knowing javascript
[03:02:39] <sheetjs> the issue isn't just "react" as a thing.  once you buy into the ecosystem, since react isn't really "batteries included", you will end up drawing from projects in the ecosystem
[03:02:54] <ox1eef> indeed
[03:02:54] <ljharb> the challenge tho is, what will be harder in a future where you're pressed for time: dealing with your own homegrown crap that nobody knows, or dealing with a framework that's no longer in vogue but also has *extensive* documentation for the version you're using
[03:02:56] *** Joins: jumpcutking (uid459573@id-459573.uxbridge.irccloud.com)
[03:03:18] <ljharb> i'd argue that while in both cases you're screwed (which is why you shouldn't neglect any codebase), you're far less screwed if you're using a known quantity
[03:03:31] <kongzilla> native js isn't batteries included at all
[03:03:48] <ox1eef> yeah i came to a similar conclusion, it still makes for good practice :) react can be a bubble too, where you dont see the browser API but rather react's.
[03:04:27] <ljharb> but since the browser's API largely is horrifically bad, that's usually a good thing
[03:04:31] <kongzilla> true... I've got no experience building anything with MutationObserver
[03:04:37] <ljharb> nor should you, MO is gross
[03:04:56] <ox1eef> good or bad people who want to build cool stuff benefit from knowing some of these APIs.
[03:04:58] <alystair> as someone who made an entire MO debug suite, agreed :D
[03:05:32] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[03:07:21] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[03:07:54] <alystair> I might turn it into its own DevTools extension or submit it as a PR... useful outside my library to see what is being mutated and when
[03:08:31] <ox1eef> hard to find the motivation to bother with chrome extensions after v3.
[03:09:01] <coder7of9> if speed is important don't these virtual doms slow everything down... or is it insignificant.... i remember seeing an ad at spotify for native js developer.. obviously they were concerned
[03:09:20] <alystair> I only made 2 chrome extensions in the past - one to display domain favicons in gmail, and another that adds a CSS animation effect of the 'upvote' button on Reddit that makes it go flying like a rocket
[03:09:28] *** em is now known as Em
[03:09:42] <alystair> so nothing serious yet
[03:10:23] <ox1eef> i made one that took screenshots of videos at a keystroke, with a popover gallery and a slideshow one. v3 throws it into the dustbin of yesterday, and the changes are such that tons of extensions will be the same
[03:10:39] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[03:11:14] <sheetjs> so what exactly can extensions do?
[03:11:54] <ox1eef> theyve been crippled, they can have a service worker which goes in and out of memory, so no persitence anymore like you had with background pages. you can use the storage API instead.
[03:12:17] <sheetjs> but you can still use content scripts that can access the dom
[03:12:27] <ox1eef> yeah, true - that's still a great feature.
[03:12:29] <alystair> coder7of9 as someone who's against VDOM - yes perf. can be slower but it's not significant in most situations, it's the additional React specific knowledge and gotchas one needs to get things working that is frustrating.
[03:13:00] <alystair> *is = are
[03:13:03] <kongzilla> I haphazardly put together a userscript that adds a search UI to an index page of an in-house system, and a few other small improvements. It continues to save us around 400k annually in vendor costs. All because the team that owns that system won't do the bare minimum to improve its UI.
[03:13:15] <sheetjs> we had some sample code to scrape tables from a page and generate an excel file -- are any of those features broken now?
[03:14:17] <alystair> I haven't touched v3 yet but this page has details re: changes https://developer.chrome.com/docs/extensions/mv3/intro/mv3-overview/
[03:14:34] <ox1eef> +1
[03:20:38] *** Quits: gehn (~gehn@user/gehn) (Quit: Leaving)
[03:22:06] <coder7of9> if you were hiring a developer in a vanilla js environment would you hesitate if the candidates experience was all in react for example.   i need to set up react and get a feel for this.
[03:22:44] *** Joins: poiqwepoiqwe (~poiqwepoi@124-171-217-203.tpgi.com.au)
[03:22:46] *** Quits: twiclo (~twiclo@66.29.177.50.static.utbb.net) (Quit: WeeChat 3.4)
[03:22:48] <coder7of9> alystair   thanks
[03:23:44] <coder7of9> react and vue   ... weekend project :)
[03:24:16] *** Quits: Decker (~d3x0r@user/d3x0r) (Remote host closed the connection)
[03:25:50] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:27:14] *** Quits: kongzilla (~weechat@gateway/tor-sasl/kongzilla) (Remote host closed the connection)
[03:28:02] *** Quits: Jaran (~mail@user/jaran) (Remote host closed the connection)
[03:33:04] <KevinX> If someone asks, "What's your stack?" - Is that telling of anything about the skill level of the developer?
[03:33:31] <coder7of9> that is a good point
[03:33:50] <coder7of9> skills are transferable
[03:34:01] <coder7of9> language to language
[03:34:25] <KevinX> I mean the question specifically
[03:34:29] <coder7of9> or in this case libraries ...
[03:34:49] <KevinX> or are you not even replyign to me lol
[03:35:23] <sheetjs> not every role involves cutting edge research
[03:35:36] <coder7of9> but i have encountered individuals who know little about the underlying activity and work at a level of configuarations
[03:36:09] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 250 seconds)
[03:36:10] <coder7of9> KevinX   telling of the person asking or the person asked :)
[03:36:18] <KevinX> I meant the actual phrasing of the question "what's your stack" which feels like a dated way to ask in 2022
[03:36:29] <sheetjs> https://twitter.com/triskweline/status/798443082740023296
[03:37:18] <KevinX> ha h Steam is usually buggy though so not surprised :P
[03:37:35] <sheetjs> but that's besides the point
[03:37:43] *** Joins: c4017w__ (~c4017@209.52.68.8)
[03:37:44] <KevinX> but I meant the question, since you can't answer it the same way as you could 15 years ago
[03:37:51] <KevinX> Before you would say LAMP or something
[03:38:08] <sheetjs> the question is indicative of the type of work involved
[03:38:31] <KevinX> But does asking the question that way indicate anything? My assumption is that they might not be up to date
[03:38:42] <KevinX> Like they don't understand the current landscape
[03:39:12] <sheetjs> If you're hiring someone to work on a bunch of wordpress sites
[03:39:25] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[03:39:36] <sheetjs> then you care about their experience with wordpress and the stack involved moreso than general JS flexibility
[03:39:53] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[03:40:20] <KevinX> So where I work is hiring, and one applicant reached out and asked us "what's your stack?"
[03:40:37] <sheetjs> right, it sounds like they may have an agency background
[03:40:56] <KevinX> My assumption was they might be a bit out of date
[03:41:04] <KevinX> (they happen to be a wordpress dev actually)
[03:41:14] <sheetjs> so in those situations
[03:41:21] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[03:41:44] <sheetjs> many companies look for specific experience to work with an existing stack
[03:42:09] <sheetjs> so from the candidate's perspective, they need to know to ascertain whether they're going to be productive immediately or will need time to learn
[03:42:09] <KevinX> do people still use the word stack though? I think that's what bothered me
[03:42:32] <KevinX> i.e. the jargon was the concern i had
[03:42:47] <sheetjs> would you rather they use a 2022 phrase like "software supply chain" or "bill of modules"?
[03:43:01] <KevinX> I think it's good and important to ask about what technologies we are using
[03:43:11] <KevinX> I'm not sure what to ask in 2022 lol
[03:43:16] <sheetjs> stack is a generally accepted and understood term
[03:43:21] *** Joins: cheater (~Username@user/cheater)
[03:43:27] <KevinX> but "what's your stack" seemed "boomerish" for lack of a better word
[03:43:47] <sheetjs> "securing the software supply chain" is arguably more boomerish
[03:43:58] <KevinX> For sure :D
[03:44:33] <KevinX> But stack doesn't resonate now since even the database is typiclly abstracted in modern web apps
[03:45:05] <KevinX> So the LAM in LAMP would be useless information to ask for
[03:45:31] <KevinX> Using LAMP as that's when I think people talking about "stack" like that
[03:45:39] <sheetjs> "what's your stack?" is a colloquialism for "what software are you employing?"
[03:45:42] <sheetjs> https://en.wikipedia.org/wiki/Solution_stack
[03:45:47] *** Quits: garrit (~garrit@user/garrit) (Ping timeout: 256 seconds)
[03:45:47] <coder7of9> i still code everything. old school
[03:46:05] *** Joins: k8yun (~k8yun@user/k8yun)
[03:46:14] <KevinX> yeah, but just seems dated
[03:46:14] <coder7of9> i write the sql etc..
[03:46:23] <KevinX> JAMStack being the only modern thing there
[03:46:37] <KevinX> and even JAMStack is barely used
[03:47:06] <KevinX> Plus you woulnd't really answer jamstack to "whats your stack"
[03:48:10] *** Joins: pycurious (~Adium@user/pycurious)
[03:48:42] <sheetjs> the only thing you should read into it KevinX is that the candidate probably has expertise in one stack
[03:48:57] <sheetjs> and that he or she is currently most effective in that set of technologies
[03:49:19] <KevinX> Yeah
[03:49:26] <sheetjs> if you are a react shop, in the abstract it's easy to say "vue skills translate to react"
[03:49:38] <sheetjs> but as we talked about earlier, that's only one piece of the puzzle
[03:49:44] <sheetjs> the ecosystem is very different
[03:50:11] <sheetjs> so your experience with vue router doesn't necessarily translate to react-router or reach-router
[03:50:17] <KevinX> It happened a couple months ago and  not sure what happened. But I thought of it today because of a similar situation came up
[03:50:44] <KevinX> We were hiring a contractor to fix the wordpress site we have and they asked for FTP access
[03:51:18] <sheetjs> don't forget salesforce
[03:51:34] <KevinX> Which also seems like a signal that I should keep an extra eye open
[03:51:35] <sheetjs> lots of salesforce devs that work with standalone libraries
[03:51:43] <sheetjs> ... even in 2022
[03:52:06] *** Joins: CalamityBlue (~CalamityB@2603-8000-d907-cec8-dccd-8808-739a-455d.res6.spectrum.com)
[03:52:42] <KevinX> I've never had to deal with salesforce thankfully
[03:52:54] *** Quits: poiqwepoiqwe (~poiqwepoi@124-171-217-203.tpgi.com.au) (Quit: Client closed)
[03:52:58] <sheetjs> the point is, for all the talk of modern JS and modern frameworks
[03:53:12] <sheetjs> for all the talk about abandoning the past
[03:53:35] <sheetjs> it will be a very very long time before we can dismiss vanilla JS or the programming of antiquity
[03:53:54] <KevinX> If someone asks "what version of jQuery are you using?" I'd be equally concerned
[03:54:09] <sheetjs> in the abstract
[03:54:36] <jaawerth> salesforce devs make *bank* too. I mean, I suppose they'd have to
[03:54:41] <sheetjs> you should prefer a jQuery wizard over a react neophyte
[03:54:46] <jaawerth> because hoe else would you get someone to specialize in salesforce
[03:54:51] *** Quits: chromagna (~chromagna@174.27.145.218) (Ping timeout: 256 seconds)
[03:55:17] <sheetjs> people hate on angular, but it provides a standard set of solutions to a number of problems
[03:55:48] <KevinX> I'd be okay with anyone who is just up to date
[03:55:55] <KevinX> And knows something well
[03:56:00] <sheetjs> that's not well-defined with react or vue
[03:56:11] <sheetjs> so say they are up to date with the core patterns
[03:56:17] <sheetjs> does it mean they are up to date with the ecosystem?
[03:56:19] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[03:56:34] <sheetjs> as a semi-related example: react-native does not provide a solution for file system access
[03:56:40] *** Joins: poiqwepoiqwe (~poiqwepoi@124-171-217-203.tpgi.com.au)
[03:57:00] <KevinX> i think everyone needs to be up to date with the ecosystem in general
[03:57:04] <sheetjs> two "competing" libraries react-native-fs and react-native-fetch-blob have become popular at various points when the maintainers were more active
[03:57:16] <sheetjs> expo had its own solution but it was deeply tied to the entire expo stack
[03:57:34] <KevinX> i dont actually know much about react native at all actually. I should probably build something
[03:57:37] <sheetjs> but the point is that when facebook and react move in a direction, the ecosystem takes a while to catch up
[03:57:59] <sheetjs> and there's a huge schism in all of these libraries between react native < 0.65 and >= 0.65
[03:58:16] <KevinX> there's a difference between cutting edge and 10+ years back though
[03:58:25] <sheetjs> but getting back to coder7of9's point
[03:58:42] <sheetjs> there's little confidence a project from 6 months back will still work
[03:58:43] <KevinX> One contractor asked for the server login and password and they didn't understand when I said it's ssh only and send me a key
[03:58:56] <sheetjs> React is much the same way
[04:00:14] <sheetjs> we all have our own "obvious" things KevinX
[04:00:25] <sheetjs> you'd be surprised how few js developers are familiar with bitwise operations
[04:00:34] <sheetjs> despite it being a language feature from the very beginning
[04:00:57] <KevinX> well i know how they work but I'd probably be looking them up as well haha
[04:01:10] <ThePendulum> ^ more to do with how often they come in useful
[04:01:39] <KevinX> I actually was experimenting with bit masking earlier
[04:02:02] <sheetjs> if you're used to working in environments where you are provisioned your own account and login, you may never have had to use ssh keys
[04:02:04] <KevinX> but thought it would be too confusing to read later on
[04:02:59] <ThePendulum> wouldn´t someone with their own account be more likely to be using ssh keys?
[04:03:08] <sheetjs> for hiring purposes, one nice thing about angular and the "batteries included" approach is that it's not unfair to expect an angular dev to know the core components
[04:03:10] <KevinX> well the ssh thing irked me because they tried to suggest having password auth wasnt an issue
[04:03:17] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[04:03:20] <ThePendulum> I would think that only becomes more important as you´re allowing more accounts
[04:03:34] <sheetjs> ThePendulum: its an issue only if it's made to be an issue
[04:03:39] <sheetjs> aka if password-based auth is disabled
[04:04:07] <KevinX> a lot of people aren't security focused
[04:04:23] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[04:04:23] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[04:04:23] *** Joins: wroathe (~wroathe@user/wroathe)
[04:04:25] <KevinX> We had one team member commit an api key secret to github
[04:04:27] <sheetjs> different risk profile
[04:04:29] <KevinX> And it's still there
[04:04:39] <KevinX> They are on another team
[04:04:52] <sheetjs> KevinX: consider "password-less key" vs "password"
[04:04:57] <KevinX> I asked to have it removed but they said it's okay because the repo is private
[04:05:03] <sheetjs> suddenly a file on the filesystem has unfettered access
[04:06:00] <sheetjs> can you change the api key?
[04:06:09] <jaawerth> password auth is usually nbd if fail2ban or simlar is set up
[04:06:36] <jaawerth> keys are still usually better but to sheetjs's point passwordless keys can present their own kind of problem
[04:06:51] <KevinX> could change the key but they'd update it im sure and the PM still wouldn't care
[04:06:51] *** Joins: audiobirb (~audio@user/audio)
[04:07:07] *** Quits: peteyboy1 (~peteyboy1@95.169.226.66) (Ping timeout: 250 seconds)
[04:09:09] <KevinX> key + pass would be ideal. we all share the same user account though ;-)
[04:09:19] <jaawerth> well you just passphrase the key
[04:09:23] <jaawerth> shared user account? goodness
[04:09:40] <KevinX> well no one every has to log in really
[04:09:43] <KevinX> ever*
[04:10:22] <jaawerth> fuck it just use telnet
[04:10:25] <wroathe> I authenticate my users by forcing them to record a unique interpetive dance, and then having them perform it for their camera every time they want to log in.
[04:10:27] *** Joins: Supavisah (~Supavisah@user/supavisah)
[04:10:45] <jaawerth> hahaha you joke but when I was first getting into stuff in college I totally set up a ridiculous port-knocking scheme
[04:11:01] <jaawerth> so in order to ssh in you first had to knock a sequence of ports to get past iptables
[04:11:10] <KevinX> ha ha
[04:12:03] <sheetjs> then they do the thing where they replay the video on a small screen
[04:13:25] <buu> I make users issue the correct series of git commands to unstage and ammend a checkout
[04:13:37] <buu> good luck with that, robots
[04:14:03] *** Quits: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[04:14:07] <buu> Also, personally, I've long forgotten how bitwise operations actually work
[04:14:31] <buu> I mean, I could work it out, but I've definitely evicted them from my brain space
[04:14:34] <wroathe> I make my users do my grocery shopping for me, and if I don't like the brands they choose, I don't let them log in.
[04:14:51] <buu> lol
[04:15:08] <buu> One of my friends had a box of cakemix substituted with .. a cake
[04:16:15] <KevinX> the grocery delivery drivers here often block the front door with the loot so I have to go around the house to move them. About 10% of the time
[04:16:17] <sheetjs> golden grahams or cinnamon toast crunch?
[04:16:47] <Supavisah> buu That's actually a good substitution, I had an avocado replaced with a cucumber. Carrots with chantenay carrots of a much smaller quantity.
[04:18:04] <buu> lol
[04:18:05] *** Quits: kristijonas (~kristijon@78-56-32-39.static.zebra.lt) (Remote host closed the connection)
[04:18:05] *** Quits: kristijonas_ (~kristijon@78-56-32-39.static.zebra.lt) (Remote host closed the connection)
[04:18:40] <buu> They're both green I guess
[04:19:03] *** Joins: kristijonas (~kristijon@78-56-32-39.static.zebra.lt)
[04:19:05] *** Joins: kristijonas_ (~kristijon@78-56-32-39.static.zebra.lt)
[04:19:16] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Killed (NickServ (GHOST command used by Sven_vB_)))
[04:19:18] *** Joins: Sven_vB_ (~sven@user/sven-vb/x-2094958)
[04:20:04] *** Joins: crashrep (~crashrep@user/crashrep)
[04:21:07] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[04:23:39] *** Joins: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi)
[04:27:59] *** Joins: Decker (~d3x0r@user/d3x0r)
[04:30:21] *** Quits: DrowningElysium (uid190788@user/drowningelysium) (Quit: Connection closed for inactivity)
[04:31:37] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[04:34:55] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[04:34:56] *** Quits: llorllale (~llorllale@198.98.119.85) (Quit: WeeChat 3.4)
[04:35:28] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[04:38:10] *** Joins: c4017w_ (~c4017@209.52.68.8)
[04:39:24] *** Quits: BUSY (~BUSY@user/busy) (Remote host closed the connection)
[04:39:32] *** Joins: llorllale (~llorllale@198.98.119.85)
[04:41:34] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[04:43:45] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[04:44:19] *** Quits: stagas (~stagas@2a02:587:c42f:9215:bc60:9d9a:9ed9:5fe5) (Remote host closed the connection)
[04:44:37] *** Joins: stagas (~stagas@2a02:587:c42f:9215:bc60:9d9a:9ed9:5fe5)
[04:44:45] *** Joins: spynx (~spynxic@spynxic.powered.by.lunarbnc.net)
[04:45:36] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[04:45:52] *** Quits: spynx (~spynxic@spynxic.powered.by.lunarbnc.net) (Client Quit)
[04:46:02] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[04:46:07] *** Joins: spynx (~spynxic@spynxic.powered.by.lunarbnc.net)
[04:46:13] *** Quits: gwn (00597634f8@2604:bf00:561:2000::390) (Ping timeout: 240 seconds)
[04:46:15] *** Joins: de-facto_ (~de-facto@user/de-facto)
[04:46:35] *** Joins: BUSY (~BUSY@user/busy)
[04:46:43] *** Joins: gwn (00597634f8@2604:bf00:561:2000::390)
[04:46:45] *** Quits: monoxane (~monoxane@user/monoxane) (Quit: Ping timeout (120 seconds))
[04:47:06] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Ping timeout: 276 seconds)
[04:47:11] *** Joins: monoxane (~monoxane@user/monoxane)
[04:47:14] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[04:48:05] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Ping timeout: 252 seconds)
[04:48:08] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[04:50:06] *** de-facto_ is now known as de-facto
[04:50:28] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[04:51:46] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[04:54:07] *** Joins: pycurious (~Adium@user/pycurious)
[04:56:24] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[05:03:11] *** Quits: stagas (~stagas@2a02:587:c42f:9215:bc60:9d9a:9ed9:5fe5) (Ping timeout: 256 seconds)
[05:04:33] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[05:06:45] *** Quits: Sven_vB_ (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[05:06:50] *** vinleod is now known as vdamewood
[05:06:57] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[05:14:51] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[05:15:17] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 240 seconds)
[05:16:29] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:116f:8251:b1b1:3325) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:16:49] *** Quits: poiqwepoiqwe (~poiqwepoi@124-171-217-203.tpgi.com.au) (Quit: Client closed)
[05:17:01] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[05:17:55] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[05:19:32] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[05:23:10] *** Quits: Supavisah (~Supavisah@user/supavisah) (Quit: Leaving)
[05:27:22] *** Joins: vysn (~vysn@user/vysn)
[05:28:05] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[05:28:06] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[05:30:00] *** Quits: abf (~abf@user/abf) (Quit: Leaving)
[05:32:47] *** Quits: yagamilito (~yagamilit@2601:642:4600:34b0:f5d2:86ea:63ad:b952) (Quit: Client closed)
[05:33:57] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[05:34:12] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Remote host closed the connection)
[05:38:41] *** Joins: c4017w__ (~c4017@209.52.68.8)
[05:38:48] *** Quits: michigan (uid507982@id-507982.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[05:38:48] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 256 seconds)
[05:39:59] *** Joins: k8yun_ (~k8yun@user/k8yun)
[05:41:36] *** Quits: k8yun_ (~k8yun@user/k8yun) (Remote host closed the connection)
[05:41:57] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[05:42:52] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:b013:3303:cbfd:b0ad)
[05:43:39] *** Quits: k8yun (~k8yun@user/k8yun) (Ping timeout: 256 seconds)
[05:45:48] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:46:09] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[05:46:41] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[05:47:11] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[05:47:41] *** Joins: ash_mobile (~androirc@c-98-202-117-157.hsd1.ut.comcast.net)
[05:54:48] *** Joins: yagamilito (~yagamilit@2601:642:4600:34b0:a4a6:dd03:c62d:4176)
[05:55:49] *** Joins: keypusher (keypusher@user/keypusher)
[05:57:26] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 250 seconds)
[06:01:20] *** Joins: k8yun (~k8yun@user/k8yun)
[06:06:24] *** Quits: yagamilito (~yagamilit@2601:642:4600:34b0:a4a6:dd03:c62d:4176) (Quit: Client closed)
[06:06:31] *** Joins: Rockwood (~Rocky@user/rocky)
[06:14:00] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[06:17:50] *** Joins: mintoyatsu (~mint@user/mintoyatsu)
[06:20:52] *** Quits: de-facto (~de-facto@user/de-facto) (Quit: See you around. 💤)
[06:21:06] *** Joins: de-facto (~de-facto@user/de-facto)
[06:21:40] *** Quits: ash_mobile (~androirc@c-98-202-117-157.hsd1.ut.comcast.net) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[06:26:12] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[06:26:46] *** Quits: coder7of9 (~coder7of9@user/coder7of9) (Quit: Client closed)
[06:26:57] *** Joins: shailangsa (~shailangs@host217-39-45-199.range217-39.btcentralplus.com)
[06:27:22] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Quit: Leaving...)
[06:30:37] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[06:32:44] *** Joins: chromagna (~chromagna@174.27.145.218)
[06:33:48] *** Joins: Arisc (~ckmptnml@189-31-251-104.user3p.brasiltelecom.net.br)
[06:38:40] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[06:39:11] *** Joins: c4017w_ (~c4017@209.52.68.8)
[06:42:35] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[06:45:39] *** Joins: Buoy172 (~Buoy172@185.100.244.134)
[06:45:59] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[06:46:52] <Buoy172> Using useReducer(), is it ok to not always deep copy the state?
[06:46:53] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 256 seconds)
[06:50:23] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[06:52:44] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[06:52:47] *** Joins: src (~src@user/src)
[06:53:06] *** Quits: spynx (~spynxic@spynxic.powered.by.lunarbnc.net) (Read error: Connection reset by peer)
[06:55:25] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[06:56:11] <systemfault> I'm not sure if anyone deep copies anything in reducers.
[06:56:28] <systemfault> Deep copying, in general, is an anti-pattern in JS
[06:58:31] *** Joins: junebug (~junebug@2600:1700:3db0:2540:3b4c:a3a0:1c16:653e)
[06:58:41] <wroathe> I deep copy everything - even when there's no reducers involved
[06:58:52] <wroathe> Because I hate memory, and it must burn.
[06:59:05] <sheetjs> or you are dealing with array nonsense
[06:59:44] <dave0> memory should just be a fast cache for the harddisk
[07:00:08] <sheetjs> sadly vuejs3 reactive doesn't play nice with direct arrays, reactive([]) won't respond to pushes so you have to do something like reactive({data: [] })
[07:01:03] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[07:01:25] <Rockwood> sheetjs, o/
[07:01:35] <sheetjs> Rockwood: o\
[07:04:27] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[07:05:31] <Buoy172> Yeah all those 3rd party libraries like immutable or lodash just burn the memory (when used for deep copying)
[07:05:45] <Buoy172> shallow copy ftw
[07:06:35] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[07:06:44] *** Quits: Buoy172 (~Buoy172@185.100.244.134) ()
[07:08:17] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[07:10:02] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:10:02] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:10:02] *** Joins: wroathe (~wroathe@user/wroathe)
[07:10:49] *** Joins: Junxter (~Junxter@222.95.164.193)
[07:11:11] *** Quits: nitrospectide (~Adium@38.65.76.76) (Quit: Leaving.)
[07:11:44] *** Joins: matsaman (~matsaman@user/matsaman)
[07:11:48] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:12:13] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[07:13:34] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[07:15:08] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[07:16:14] *** Quits: tristan_ (~tristan@223.62.202.113) (Ping timeout: 260 seconds)
[07:17:16] <systemfault> The whole point of a library like immutable or immer... is to avoid deep copying... They use "Persistent Data Structures"
[07:17:58] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[07:19:37] *** Joins: nomic (~nomic@2a00:23c7:ec90:a501:28ee:8914:7d0d:6f8)
[07:21:25] <Rockwood> KevinX, o/
[07:21:54] *** Joins: ferdna (~ferdna@user/ferdna)
[07:22:14] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[07:22:45] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[07:24:00] <pagios> hello
[07:28:54] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[07:34:32] *** Joins: rustyshackleford (uid236774@helmsley.irccloud.com)
[07:36:57] *** Quits: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au) (Ping timeout: 240 seconds)
[07:38:25] *** Joins: snakeyhiss (~scott@101.100.131.109)
[07:39:42] *** Joins: c4017w__ (~c4017@209.52.68.8)
[07:43:01] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[07:44:34] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[07:53:01] *** Joins: audiobirb (~audio@user/audio)
[07:58:40] <Rockwood> const url = new URL(_url, baseURL || defaultBaseURL); i wanna do if i have baseUrl then no need the defaultBaseUrl
[07:59:13] <Rockwood> is it similar?
[07:59:32] <Rockwood> baseURL or defaultBaseURL <--- similar?
[07:59:40] <Rockwood> baseURL || defaultBaseURL <--- similar?
[08:02:15] <Rockwood>   const mainUrl = (baseURL ? baseURL : defaultBaseURL); or this is correct?
[08:02:19] <matsaman> n> true || false
[08:02:20] <jellobot> (okay) true
[08:02:46] <Rockwood> n> true || true
[08:02:46] <jellobot> (okay) true
[08:02:53] <Rockwood> which one?
[08:02:57] <matsaman> n> true? true: false
[08:02:58] <jellobot> (okay) true
[08:03:07] <matsaman> either, but the latter is fairly verbose for your use case, really
[08:04:23] <Rockwood> means?
[08:04:52] <Rockwood> i wanna make it conditional
[08:04:57] *** Quits: junebug (~junebug@2600:1700:3db0:2540:3b4c:a3a0:1c16:653e) (Quit: Leaving)
[08:06:00] <Rockwood> if (baseURL) then only see baseurl if not then defaultBaseURL
[08:06:17] *** Joins: cheater (~Username@user/cheater)
[08:06:39] <Rockwood>   const mainUrl = (baseURL ? baseURL : defaultBaseURL);
[08:06:39] <Rockwood>   const url = new URL(_url, baseURL || defaultBaseURL);
[08:06:45] <Rockwood> looks similar?
[08:07:20] <Rockwood> i am confuse
[08:13:45] <matsaman> that's exactly what true || false does, and also true || true
[08:14:04] <matsaman> so give it a try
[08:14:14] <matsaman> you might need another set of parentheses, I'm not sure
[08:18:55] *** Quits: N4buc0 (~N4buc0@177.16.170.138) (Ping timeout: 256 seconds)
[08:23:44] *** Joins: han-solo (~hanish@user/han-solo)
[08:24:12] *** Parts: snakeyhiss (~scott@101.100.131.109) ()
[08:26:42] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[08:27:26] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[08:31:04] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[08:33:04] *** Joins: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au)
[08:34:49] *** Quits: Harlin (~DonQixote@75-163-202-34.clsp.qwest.net) (Quit: Leaving)
[08:38:05] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[08:40:11] *** Joins: c4017w_ (~c4017@209.52.68.8)
[08:41:27] *** Quits: doc (~doc@user/doc) (Quit: Things to do)
[08:42:23] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[08:43:25] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[08:52:12] *** Quits: jumpcutking (uid459573@id-459573.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[08:53:05] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[08:53:31] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[08:54:44] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:55:57] *** Quits: ferdna (~ferdna@user/ferdna) (Ping timeout: 240 seconds)
[08:56:49] *** Joins: ferdna (~ferdna@user/ferdna)
[08:58:18] *** Joins: tristan_ (~tristan@223.62.202.127)
[09:00:56] *** Joins: Harlin (~DonQixote@75-163-202-34.clsp.qwest.net)
[09:10:48] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[09:10:48] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[09:10:48] *** Joins: wroathe (~wroathe@user/wroathe)
[09:11:39] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Ping timeout: 276 seconds)
[09:15:35] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[09:16:05] *** Joins: garrit (~garrit@ip-109-42-114-119.web.vodafone.de)
[09:16:05] *** Quits: garrit (~garrit@ip-109-42-114-119.web.vodafone.de) (Changing host)
[09:16:05] *** Joins: garrit (~garrit@user/garrit)
[09:17:25] *** Quits: tristan_ (~tristan@223.62.202.127) (Ping timeout: 240 seconds)
[09:20:22] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-079.um10.pools.vodafone-ip.de)
[09:20:41] *** Quits: garrit (~garrit@user/garrit) (Ping timeout: 256 seconds)
[09:24:15] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[09:24:40] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[09:25:59] *** Joins: k8yun_ (~k8yun@user/k8yun)
[09:27:30] *** Quits: SpiceMan (~Don_Spice@user/SpiceMan) (Quit: WeeChat 2.8)
[09:29:30] *** Joins: garrit (~garrit@p4fe717b1.dip0.t-ipconnect.de)
[09:29:30] *** Quits: garrit (~garrit@p4fe717b1.dip0.t-ipconnect.de) (Changing host)
[09:29:30] *** Joins: garrit (~garrit@user/garrit)
[09:29:45] *** Quits: k8yun (~k8yun@user/k8yun) (Ping timeout: 256 seconds)
[09:30:14] *** Quits: pmercado (~pmercado@186.107.50.37) (Ping timeout: 252 seconds)
[09:30:23] *** Joins: SpiceMan (~Don_Spice@user/SpiceMan)
[09:33:25] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[09:38:49] *** Quits: Desuii (~Desuii___@203.206.227.49.dyn.cust.vf.net.nz) (Ping timeout: 256 seconds)
[09:39:24] <alystair> additional parens shouldn't be necessary unless you're stacking logical operations, at which point it just helps with readability for intended order of operations...
[09:39:57] *** Quits: chromagna (~chromagna@174.27.145.218) (Ping timeout: 256 seconds)
[09:40:39] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[09:40:42] *** Joins: c4017w__ (~c4017@209.52.68.8)
[09:43:17] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[09:43:49] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[09:45:16] *** Joins: mexen (uid495612@user/mexen)
[09:52:01] *** Quits: spronkey (~spronkey@122-58-75-76-adsl.sparkbb.co.nz) (Quit: you are feeeling very sleeeeeepyy......)
[09:55:31] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[09:59:47] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[10:01:00] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[10:04:29] *** Joins: D4mned (~D1mned@89.108.142.93)
[10:09:27] *** Joins: masoudd (~masoudd@user/masoudd)
[10:10:33] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[10:15:32] *** Joins: hojasuelta (~hojasuelt@187.144.37.38)
[10:17:29] *** Joins: tristan_ (~tristan@223.33.164.16)
[10:17:33] *** Joins: cheater (~Username@user/cheater)
[10:18:13] *** Joins: Jaran|zZzZZZZz (~mail@user/jaran)
[10:18:20] *** Quits: nomic (~nomic@2a00:23c7:ec90:a501:28ee:8914:7d0d:6f8) (Quit: Leaving)
[10:20:11] *** Quits: hojasuelta (~hojasuelt@187.144.37.38) (Ping timeout: 256 seconds)
[10:20:23] <buu> This is apparently the IT world now https://usercontent.irccloud-cdn.com/file/crSJRTOd/image.png
[10:23:17] <theskillwithin> dang I must be buying the wrong socks, I never feel like that
[10:30:15] *** Joins: spronkey (~spronkey@122-58-75-76-adsl.sparkbb.co.nz)
[10:32:14] <buu> yeah
[10:32:24] <buu> I actually try fairly hard to never wear socks tbh
[10:33:24] <theskillwithin> I don't even wear shoes, I wear sandals 99% of the time
[10:33:30] <buu> Me too!
[10:33:50] <buu> For some reason as a teenager I started wearing addidas sandals and just never stopped
[10:36:27] <theskillwithin> I like Rainbow sandals,  this is my primary one https://www.rainbowsandals.com/product/302ALL00_MENS
[10:36:41] <theskillwithin> for a sandal you don't have to wear in I like https://freewaters.com/collections/mens/products/the-dillon-mens-sandals
[10:37:05] <theskillwithin> for like just walking onto the balcony or the backyard i think this one but its a newer version now https://freewaters.com/collections/mens/products/open-country-2-0-mens-sandals
[10:37:29] <theskillwithin> its getting cold outside tho, so I am experimenting with https://www.thenorthface.com/shop/mens-thermoball-traction-mule-v-nf0a3uzn?variationId=33U
[10:40:00] *** Joins: stagas (~stagas@2a02:587:c42f:9215:e335:8bf6:6d67:6709)
[10:40:37] *** Quits: FlannelKing (~flannel@cpe-76-175-193-181.socal.res.rr.com) (Changing host)
[10:40:37] *** Joins: FlannelKing (~flannel@user/flannel)
[10:40:42] *** FlannelKing is now known as Flannel
[10:41:10] *** Joins: c4017w_ (~c4017@209.52.68.8)
[10:44:37] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[10:45:14] *** Joins: sam_1 (~sam_1@87.51.251.118)
[10:45:22] <buu> that is a lot more thought than I've ever put into sandals
[10:45:51] <buu> I just wear these for the last 20+ years https://www.adidas.com/us/adissage-slides/F35580.html
[10:46:02] <buu> Although they actually stopped making the original version and the new one is lame =[
[10:46:22] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[10:48:03] *** Joins: pycode1 (~pycode3@2001:b07:5d28:551:73fd:4a91:570b:78d2)
[10:48:55] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[10:50:26] <theskillwithin> I hate when that happens
[10:51:41] <silly> i made an electron app with a main window and a settings window, but now i've concluded that it's better to have everything in one window. and this is what i hate when it happens
[10:51:47] <silly> (╯°□°)╯︵ ┻━┻ everything
[10:52:12] *** Quits: pycode1 (~pycode3@2001:b07:5d28:551:73fd:4a91:570b:78d2) (Remote host closed the connection)
[10:52:45] <theskillwithin> (ヘ･_･)ヘ┳━┳
[10:53:18] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[10:55:11] *** Joins: flughafen (~flughafen@p2e55dcb3.dip0.t-ipconnect.de)
[10:55:13] <silly> i want a little senior project manager inside me to tell me how to make things better the 1st time
[10:55:49] *** Quits: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au) (Ping timeout: 240 seconds)
[10:56:52] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[10:58:04] <theskillwithin> well it happens to seniors as well
[10:59:06] <silly> i want one to whom it doesn't
[10:59:22] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:a89e:b347:cccb:c7e5) (Read error: Connection reset by peer)
[10:59:39] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:3c9b:6dce:e374:3130)
[11:00:14] <theskillwithin> ya that would be nice
[11:04:52] <theskillwithin> https://youtu.be/7qNGWjDzxpQ
[11:04:53] <skillbot> YouTube Title: Jocko Motivation: SISYPHUS - The ROCK, The GRIND (from Jocko Podcast)
[11:08:44] *** Quits: k8yun_ (~k8yun@user/k8yun) (Quit: Leaving)
[11:09:27] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[11:16:52] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[11:17:00] *** Quits: spronkey (~spronkey@122-58-75-76-adsl.sparkbb.co.nz) (Quit: you are feeeling very sleeeeeepyy......)
[11:21:03] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[11:21:49] *** Joins: fef (~thedawn@user/thedawn)
[11:22:15] *** Joins: Akiva (~Akiva@user/Akiva)
[11:24:18] *** Quits: src (~src@user/src) (Quit: Leaving)
[11:24:26] *** Joins: magga (magga@ti0036a400-3577.bb.online.no)
[11:25:22] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-079.um10.pools.vodafone-ip.de) (Read error: Connection reset by peer)
[11:25:29] *** Joins: kakashiAL (~kakashi@ip-037-201-198-079.um10.pools.vodafone-ip.de)
[11:25:41] <jwpapi> jaawerth austincheney Following the discussion last night I improved my code like this
[11:25:44] <jwpapi> https://www.irccloud.com/pastebin/Mu32H9Oq/
[11:25:49] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:4477:9d9a:1a21:9a92)
[11:27:26] <jwpapi> I assume I might need the FBSerializer later again. That’s why I used a compositional approach.
[11:27:26] <jwpapi> I also combined `.then` with await to make it clearer for a reader what is happening, while not introducing unnecessary chaining or mutating
[11:30:04] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:30:08] *** Joins: cotko (~cotko@155.pool85-49-78.dynamic.orange.es)
[11:31:32] <jwpapi> Would you guys agree that of all guidelines for good code the most important one is that it easy to understand
[11:37:32] <dave0> yup easy to read/understand
[11:37:38] <theskillwithin> ya thats a good first one
[11:41:41] *** Joins: c4017w__ (~c4017@209.52.68.8)
[11:44:57] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[11:47:08] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 256 seconds)
[11:48:58] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[11:57:59] *** Joins: jazzy2 (~jaziz@user/jaziz)
[11:58:24] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[11:58:49] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:59:32] *** Joins: peteyboy1 (~peteyboy1@95.169.226.66)
[12:00:36] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[12:00:57] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[12:01:06] *** Quits: konrados (~konrados@user-94-254-233-55.play-internet.pl) (Read error: Connection reset by peer)
[12:02:00] *** Joins: konrados (~konrados@user-94-254-233-55.play-internet.pl)
[12:05:24] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Quit: WeeChat 3.4)
[12:06:06] *** jazzy2 is now known as jazzy
[12:06:36] <bobdobbs> jwpapi: yes
[12:06:48] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[12:06:57] <jwpapi> thank you guys!
[12:07:32] <jwpapi> fixed a bug in line 9, but this was more about code style any way
[12:13:24] *** Joins: baracurda_ (~baracurda@user/parserblabla)
[12:16:31] *** Quits: kakashiAL (~kakashi@ip-037-201-198-079.um10.pools.vodafone-ip.de) (Read error: Connection reset by peer)
[12:16:35] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-079.um10.pools.vodafone-ip.de)
[12:18:19] *** Joins: nomic (~nomic@185.192.69.51)
[12:20:39] *** Joins: kalen- (~kalen@gateway/vpn/pia/kalen)
[12:23:43] *** Quits: kalen (~kalen@gateway/vpn/pia/kalen) (Ping timeout: 256 seconds)
[12:23:46] *** Quits: kalen- (~kalen@gateway/vpn/pia/kalen) (Read error: Connection reset by peer)
[12:27:12] *** Joins: kalen- (~kalen@gateway/vpn/pia/kalen)
[12:27:12] *** kalen- is now known as kalen
[12:29:57] *** Quits: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[12:30:48] *** Joins: ejjfunky (~ejjfunky@125.164.23.223)
[12:31:05] *** Quits: cotko (~cotko@155.pool85-49-78.dynamic.orange.es) (Ping timeout: 256 seconds)
[12:31:20] *** Quits: ckdCreations (~ckdCreati@147.55.133.136) (Read error: Connection reset by peer)
[12:31:42] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[12:32:38] *** Joins: cotko (~cotko@155.pool85-49-78.dynamic.orange.es)
[12:32:45] *** Joins: voltage_ (voltage@user/voltage)
[12:36:11] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[12:37:24] *** Joins: ckdCreations (~ckdCreati@147.55.130.36)
[12:40:37] *** Joins: iomari891 (~iomari891@105.112.138.38)
[12:41:25] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[12:41:25] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[12:41:25] *** Joins: wroathe (~wroathe@user/wroathe)
[12:42:10] *** Joins: c4017w_ (~c4017@209.52.68.8)
[12:44:15] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[12:44:38] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[12:45:49] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[12:46:38] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[12:46:44] *** Joins: gproto23 (~gproto23@user/gproto23)
[12:49:20] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:52:43] *** Joins: thojanssens (~thojansse@2001:fb1:77:281:419d:7b2b:b24d:7e15)
[12:53:15] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Quit: Leaving)
[12:54:43] *** Quits: xsperry (~xs@user/xsperry) (Ping timeout: 250 seconds)
[12:56:15] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[13:03:08] *** Joins: xsperry (~xs@user/xsperry)
[13:10:13] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[13:11:54] *** Joins: stenno (~stenno@user/stenno)
[13:16:49] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[13:17:52] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:19:04] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Read error: Connection reset by peer)
[13:20:24] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[13:23:49] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[13:24:40] *** Joins: teut (~teut@2401:4900:1c68:dbe1:482e:df7e:b828:f451)
[13:28:17] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 250 seconds)
[13:28:29] *** Quits: kalen (~kalen@gateway/vpn/pia/kalen) (Read error: Connection timed out)
[13:30:28] *** Joins: stenno (~stenno@user/stenno)
[13:30:58] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 260 seconds)
[13:32:37] *** Joins: kalen (~kalen@gateway/vpn/pia/kalen)
[13:33:17] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 250 seconds)
[13:36:30] *** Quits: LtHummus (~lthummus@174-21-27-9.tukw.qwest.net) (Ping timeout: 256 seconds)
[13:38:54] *** Quits: alystair (~alystair@user/alystair) (Ping timeout: 260 seconds)
[13:41:49] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[13:42:41] *** Joins: c4017w__ (~c4017@209.52.68.8)
[13:45:10] *** Joins: LtHummus (~lthummus@174-21-20-149.tukw.qwest.net)
[13:46:13] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[13:54:10] <magga> ive created a modal, and added a window.onclick function to hide it. but its not working on my mobile phone. im guessing its because it doesnt register the click like a normal mouse click. any way to solve this ? :)
[13:56:13] <theskillwithin> an additional handler of ontouch for mobile
[13:56:25] *** Quits: m5zs7k (aquares@web10.mydevil.net) (Ping timeout: 256 seconds)
[13:57:01] <theskillwithin> i mean touchstart*
[13:57:28] *** Joins: m5zs7k (aquares@web10.mydevil.net)
[14:01:11] <magga> okay thanks theskillwithin i'll try it
[14:01:32] *** Joins: c4017w_ (~c4017@209.52.68.8)
[14:01:50] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[14:02:30] *** Joins: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[14:02:37] <magga> nice it worked theskillwithin
[14:02:38] *** Joins: sunny934 (~sunny93@wireguard/tunneler/sunny93)
[14:02:48] *** Joins: Rubba (~Kol@75.157.122.186)
[14:02:53] *** Joins: csmiga1 (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com)
[14:03:01] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 240 seconds)
[14:03:02] *** Joins: stan_man_can (~stanley@d66-183-88-69.bchsia.telus.net)
[14:03:05] *** Joins: tofran2 (~tofran@bl15-47-228.dsl.telepac.pt)
[14:03:37] *** Joins: haniaF (~haniaF@83.24.223.148.ipv4.supernova.orange.pl)
[14:03:37] *** Joins: Swantvee (~swant@libera/staff/swant)
[14:03:59] *** Joins: Nnnavd (~Nnavd@ec2-34-220-224-214.us-west-2.compute.amazonaws.com)
[14:04:06] *** Joins: [RMS] (~rs@genoce.org)
[14:04:42] *** Joins: JoelJoel (~jjshoe@user/joel)
[14:05:03] *** Joins: han-solo (~hanish@103.104.46.12)
[14:05:22] *** Quits: han-solo (~hanish@103.104.46.12) (Changing host)
[14:05:22] *** Joins: han-solo (~hanish@user/han-solo)
[14:05:31] *** Quits: Swant (~swant@libera/staff/swant) (Killed (NickServ (GHOST command used by Swantvee)))
[14:05:33] *** Joins: kraucrow (~polarizin@188.166.72.81)
[14:05:38] *** Swantvee is now known as Swant
[14:05:39] *** Joins: chovy_ (chovy@tilde.club)
[14:06:04] *** Joins: gjvc_ (~gjvc@user/gjvc)
[14:06:12] *** Joins: cnsunyour (~sunyour@129.226.182.99)
[14:06:17] *** Joins: g2anj_ (~v@58.228.230.4)
[14:06:23] *** Joins: Maxdaman1us (~Maxdamant@user/maxdamantus)
[14:06:29] *** Joins: duch_kazatel (~robert0@c-76-114-62-229.hsd1.ca.comcast.net)
[14:06:43] *** Joins: DonSpice (~Don_Spice@user/SpiceMan)
[14:06:57] *** Joins: robyndrake (~robyndrak@154.16.118.240)
[14:07:04] *** Joins: erry_ (~erry@errietta.me)
[14:07:15] *** Joins: Nitrousoxide_ (~msdos@user/nitrousoxide)
[14:07:19] *** Quits: SpiceMan (~Don_Spice@user/SpiceMan) (Killed (NickServ (GHOST command used by DonSpice)))
[14:07:21] *** robyndrake is now known as Guest5214
[14:07:24] *** DonSpice is now known as SpiceMan
[14:08:20] *** Joins: ttys000_ (~ttys000@user/ttys000)
[14:11:02] *** Quits: c4017w__ (~c4017@209.52.68.8) (*.net *.split)
[14:11:02] *** Quits: ckdCreations (~ckdCreati@147.55.130.36) (*.net *.split)
[14:11:02] *** Quits: voltage_ (voltage@user/voltage) (*.net *.split)
[14:11:02] *** Quits: cotko (~cotko@155.pool85-49-78.dynamic.orange.es) (*.net *.split)
[14:11:02] *** Quits: kristijonas_ (~kristijon@78-56-32-39.static.zebra.lt) (*.net *.split)
[14:11:02] *** Quits: kristijonas (~kristijon@78-56-32-39.static.zebra.lt) (*.net *.split)
[14:11:02] *** Quits: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com) (*.net *.split)
[14:11:02] *** Quits: bliminse (~bliminse@host86-158-241-239.range86-158.btcentralplus.com) (*.net *.split)
[14:11:02] *** Quits: ttys000 (~ttys000@user/ttys000) (*.net *.split)
[14:11:02] *** Quits: g2anj (~v@58.228.230.4) (*.net *.split)
[14:11:02] *** Quits: Stanley (~stanley@d66-183-88-69.bchsia.telus.net) (*.net *.split)
[14:11:02] *** Quits: Kol (~Kol@75.157.122.186) (*.net *.split)
[14:11:02] *** Quits: haniaF_ (~haniaF@83.24.223.148.ipv4.supernova.orange.pl) (*.net *.split)
[14:11:02] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (*.net *.split)
[14:11:02] *** Quits: c17r (~c17r@c17r.com) (*.net *.split)
[14:11:02] *** Quits: [R] (~rs@genoce.org) (*.net *.split)
[14:11:02] *** Quits: s1b1 (~s1b1@user/s1b1) (*.net *.split)
[14:11:02] *** Quits: Phineas (~Phineas@user/Phineas) (*.net *.split)
[14:11:02] *** Quits: gjvc (~gjvc@user/gjvc) (*.net *.split)
[14:11:02] *** Quits: sunny93 (~sunny93@wireguard/tunneler/sunny93) (*.net *.split)
[14:11:03] *** Quits: tofran (~tofran@bl15-47-228.dsl.telepac.pt) (*.net *.split)
[14:11:03] *** Quits: theglass (~glass@user/theglass) (*.net *.split)
[14:11:03] *** Quits: MootPoot (uid444585@ilkley.irccloud.com) (*.net *.split)
[14:11:03] *** Quits: hughrawlinson_ (sid11243@ilkley.irccloud.com) (*.net *.split)
[14:11:03] *** Quits: abraham (~abraham@143.244.185.86) (*.net *.split)
[14:11:03] *** Quits: chovy (chovy@tilde.club) (*.net *.split)
[14:11:03] *** Quits: robyn (~robyndrak@user/robyndrake) (*.net *.split)
[14:11:03] *** Quits: The_Tablet (~tablet@user/the-tablet) (*.net *.split)
[14:11:03] *** Quits: robertmaxrees (~robert0@c-76-114-62-229.hsd1.ca.comcast.net) (*.net *.split)
[14:11:03] *** Quits: erry (~erry@errietta.me) (*.net *.split)
[14:11:03] *** Quits: Nnavd (~Nnavd@ec2-34-220-224-214.us-west-2.compute.amazonaws.com) (*.net *.split)
[14:11:03] *** Quits: Joel (~jjshoe@user/joel) (*.net *.split)
[14:11:03] *** Quits: Nitrousoxide (~msdos@user/nitrousoxide) (*.net *.split)
[14:11:03] *** Quits: justGhost (~justache@user/justache) (*.net *.split)
[14:11:03] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (*.net *.split)
[14:11:03] *** Quits: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (*.net *.split)
[14:11:03] *** Quits: sunyour (~sunyour@129.226.182.99) (*.net *.split)
[14:11:03] *** Quits: coc0nut (~coc0nut@user/coc0nut) (*.net *.split)
[14:11:03] *** Quits: hassoon__ (~hassoon@triton.blinkenshell.org) (*.net *.split)
[14:11:03] *** Quits: webstran- (~webstrand@user/webstrand) (*.net *.split)
[14:11:03] *** Quits: philivey9426 (~polarizin@188.166.72.81) (*.net *.split)
[14:11:03] *** Quits: cryocaustik7 (~cryocaust@user/cryocaustik) (*.net *.split)
[14:11:03] *** Quits: jellobot (~jellobot@li334-26.members.linode.com) (*.net *.split)
[14:11:03] *** Quits: kyshoc (~kyshoc@adsl-99-93-208-248.dsl.mtry01.sbcglobal.net) (*.net *.split)
[14:11:03] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (*.net *.split)
[14:11:03] *** Quits: hassoon_ (hassoon@user/hassoon) (*.net *.split)
[14:11:03] *** Quits: Unfixed (~Jake@64.31.33.140) (*.net *.split)
[14:11:03] *** Quits: Spydar007 (~spydar007@user/spydar007) (*.net *.split)
[14:11:03] *** Quits: dlam (~dlam@dlam.me) (*.net *.split)
[14:11:03] *** Quits: les_ (~whome@user/les) (*.net *.split)
[14:11:03] *** Quits: Lewix__ (sid158496@tinside.irccloud.com) (*.net *.split)
[14:11:03] *** Quits: AlbertLast (~nix@0exclusive.de) (*.net *.split)
[14:11:04] *** zuQe85 is now known as zuQe8
[14:11:06] *** csmiga1 is now known as csmiga
[14:11:06] *** sunny934 is now known as sunny93
[14:11:09] *** tofran2 is now known as tofran
[14:11:50] *** Joins: ckdCreations (~ckdCreati@147.55.130.36)
[14:14:40] *** Maxdaman1us is now known as Maxdamantus
[14:15:25] <stenno> libera, splitting the net since 2021
[14:16:12] *** Joins: hassoon (~hassoon@triton.blinkenshell.org)
[14:16:12] *** Joins: voltage_ (voltage@user/voltage)
[14:16:12] *** Joins: cotko (~cotko@155.pool85-49-78.dynamic.orange.es)
[14:16:12] *** Joins: kristijonas_ (~kristijon@78-56-32-39.static.zebra.lt)
[14:16:12] *** Joins: kristijonas (~kristijon@78-56-32-39.static.zebra.lt)
[14:16:12] *** Joins: bliminse (~bliminse@host86-158-241-239.range86-158.btcentralplus.com)
[14:16:12] *** Joins: c17r (~c17r@c17r.com)
[14:16:12] *** Joins: s1b1 (~s1b1@user/s1b1)
[14:16:12] *** Joins: Phineas (~Phineas@user/Phineas)
[14:16:12] *** Joins: MootPoot (uid444585@ilkley.irccloud.com)
[14:16:12] *** Joins: hughrawlinson_ (sid11243@ilkley.irccloud.com)
[14:16:12] *** Joins: abraham (~abraham@143.244.185.86)
[14:16:12] *** Joins: The_Tablet (~tablet@user/the-tablet)
[14:16:12] *** Joins: justGhost (~justache@user/justache)
[14:16:12] *** Joins: coc0nut (~coc0nut@user/coc0nut)
[14:16:12] *** Joins: webstran- (~webstrand@user/webstrand)
[14:16:12] *** Joins: cryocaustik7 (~cryocaust@user/cryocaustik)
[14:16:12] *** Joins: jellobot (~jellobot@li334-26.members.linode.com)
[14:16:12] *** Joins: kyshoc (~kyshoc@adsl-99-93-208-248.dsl.mtry01.sbcglobal.net)
[14:16:12] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[14:16:12] *** Joins: hassoon_ (hassoon@user/hassoon)
[14:16:12] *** Joins: Unfixed (~Jake@64.31.33.140)
[14:16:12] *** Joins: Spydar007 (~spydar007@user/spydar007)
[14:16:12] *** Joins: dlam (~dlam@dlam.me)
[14:16:12] *** Joins: les_ (~whome@user/les)
[14:16:12] *** Joins: Lewix__ (sid158496@tinside.irccloud.com)
[14:16:12] *** Joins: AlbertLast (~nix@0exclusive.de)
[14:16:12] *** erbium.libera.chat sets mode: +v jellobot
[14:19:20] <jwpapi> `new adsSdk.Campaign(campaign._data.id)` how do I the result of this
[14:19:23] <jwpapi> in general
[14:19:27] <jwpapi> is that an instance
[14:20:23] <stenno> how do you what?
[14:20:25] <stenno> missing a word
[14:20:33] <jwpapi> stenno: how do I call it?
[14:20:34] <jwpapi> sorry
[14:20:48] <stenno> yes, the result of this will be an instance
[14:20:48] <Pilum> Assign it to a variable?
[14:20:52] <jwpapi> stenno: thank you
[14:21:06] <stenno> `new` calls the constructor and returns an instance
[14:21:06] <Pilum> Ah. *what* do you call it.
[14:22:11] <jwpapi> yes that helps a lot with my wording
[14:23:07] *** Quits: teut (~teut@2401:4900:1c68:dbe1:482e:df7e:b828:f451) (Quit: Client closed)
[14:28:09] <jwpapi> Do I use the words serializer and factory here correct? https://www.irccloud.com/pastebin/MFaqn5VY/
[14:28:39] *** Joins: dan01 (~dan01@2a02:2f09:3913:cc00:d809:3295:ba30:ec0d)
[14:29:02] *** Quits: gproto23 (~gproto23@user/gproto23) (Read error: Connection reset by peer)
[14:29:16] *** Joins: gproto23 (~gproto23@user/gproto23)
[14:33:44] <jwpapi> really happy with this code style now
[14:33:49] <jwpapi> https://www.irccloud.com/pastebin/5nBmUM8Z/
[14:34:03] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[14:34:11] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[14:34:49] *** Quits: thojanssens (~thojansse@2001:fb1:77:281:419d:7b2b:b24d:7e15) (Ping timeout: 250 seconds)
[14:44:04] *** Quits: kalen (~kalen@gateway/vpn/pia/kalen) (Read error: Connection reset by peer)
[14:44:42] *** Joins: kalen (~kalen@gateway/vpn/pia/kalen)
[14:45:37] *** Joins: ccapndave (~ccapndave@2a02:1210:6c4e:d600:6dd7:6cf5:c6bb:d1e0)
[14:45:53] <ccapndave> Does anyone know how to render a React component inside a Lit component?
[14:52:06] <theskillwithin> idk, if i had to guess it would be easier the other way around
[14:53:50] <ccapndave> Yeah its trivial that way
[14:53:55] <ccapndave> But I need to do it the other way :)
[14:55:04] <fweht> anybody used gif.js in node?  i seem to get no result, i wonder if i need to includ some worker script or if everything works out of the box?
[14:55:24] <fweht> ah sorry i dont mean node, i mean npm, gif.js as npm package
[14:55:38] *** Joins: jalil (~jalil@2a01:e0a:277:4100:4b34:f28b:c1d1:3941)
[14:58:53] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[14:58:56] *** Joins: federico (~federico@176.206.191.61)
[15:00:41] *** Quits: stenno (~stenno@user/stenno) (Read error: Connection reset by peer)
[15:01:29] <ccapndave> theskillwithin: I think I can do it with a `ref` plus implementing `updated`
[15:01:40] *** Joins: stenno (~stenno@user/stenno)
[15:02:11] *** Joins: c4017w__ (~c4017@209.52.68.8)
[15:03:01] *** Quits: dan01 (~dan01@2a02:2f09:3913:cc00:d809:3295:ba30:ec0d) (Remote host closed the connection)
[15:03:25] *** Joins: dan01 (~dan01@2a02:2f09:3913:cc00:d809:3295:ba30:ec0d)
[15:05:16] <Maxdamantus> ccapndave: never used Lit, custom elements or shadow DOM before, but afaict from the Lit documentation, you could just do something like `update(){ ReactDOM.mount(<Foo/>, this.shadowRoot); }`
[15:05:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[15:05:27] <Maxdamantus> Dunno if that will mess with the Lit lifecycle or whatever.
[15:05:33] <ccapndave> I think it should be fine
[15:05:35] <ccapndave> Thanks :+1:
[15:05:41] <ccapndave> I've never used it before either; this is the first time
[15:07:38] <Maxdamantus> er, s/\<update\>/updated/
[15:10:37] *** Quits: nomic (~nomic@185.192.69.51) (Quit: Leaving)
[15:10:55] *** Joins: nomic (~nomic@185.192.69.51)
[15:13:14] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[15:14:38] <stenno> n> '<>'.replace(/<>/,'x')
[15:14:39] <jellobot> (okay) 'x'
[15:14:46] <stenno> no need to escape
[15:15:11] *** Parts: nickel715 (~nickel715@user/nickel715) (The Lounge - https://thelounge.chat)
[15:16:27] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[15:17:53] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Remote host closed the connection)
[15:18:49] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[15:19:13] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[15:19:31] *** Quits: ccapndave (~ccapndave@2a02:1210:6c4e:d600:6dd7:6cf5:c6bb:d1e0) (Quit: Textual IRC Client: www.textualapp.com)
[15:22:24] *** Joins: Tempesta (~Tempesta@user/tempesta)
[15:24:06] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[15:25:02] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 268 seconds)
[15:27:34] *** Joins: pmercado (~pmercado@186.107.50.37)
[15:32:04] *** Quits: mintoyatsu (~mint@user/mintoyatsu) (Remote host closed the connection)
[15:35:10] *** Joins: ccapndave (~ccapndave@2a02:1210:6c4e:d600:6dd7:6cf5:c6bb:d1e0)
[15:35:29] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 250 seconds)
[15:36:38] *** Joins: thojanssens (~thojansse@49.230.14.31)
[15:36:58] <ccapndave> I'm a bit unsure about the best way to handle external property changes in my React app.  The application is loaded with a single property that is a map of strings to some data, and this gets put into the state.  Once its running I want to tell the application to update a single item in this map.  How can I do that by changing the properties?  The best I came up with is passing in an `EventTarget` and listening on it,
[15:36:58] <ccapndave>  but its not very React-y.
[15:37:01] <ccapndave> Is there a better way?
[15:41:31] *** Joins: chao (~stenno@user/stenno)
[15:43:41] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 245 seconds)
[15:49:06] *** Joins: DrowningElysium (uid190788@user/drowningelysium)
[15:54:45] *** Joins: fef (~thedawn@user/thedawn)
[15:55:51] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[15:56:48] *** Joins: kalen- (~kalen@gateway/vpn/pia/kalen)
[15:57:27] *** Joins: mei (~mei@user/mei)
[15:59:31] *** Joins: i0e (~is0ke3@user/is0ke3)
[16:00:06] *** Joins: alystair (~alystair@user/alystair)
[16:00:48] *** Quits: kalen (~kalen@gateway/vpn/pia/kalen) (Ping timeout: 268 seconds)
[16:00:50] *** kalen- is now known as kalen
[16:02:40] *** Joins: c4017w_ (~c4017@209.52.68.8)
[16:05:54] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 260 seconds)
[16:06:02] *** Quits: ccapndave (~ccapndave@2a02:1210:6c4e:d600:6dd7:6cf5:c6bb:d1e0) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:06:16] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[16:06:17] *** Joins: chao (~stenno@user/stenno)
[16:07:23] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Remote host closed the connection)
[16:15:30] *** Joins: pulse (~pulse@user/pulse)
[16:18:24] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 250 seconds)
[16:18:37] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 240 seconds)
[16:19:06] *** Joins: stenno (~stenno@user/stenno)
[16:20:15] <austincheney> jwpapi, awesome.
[16:20:30] *** Quits: bliminse (~bliminse@host86-158-241-239.range86-158.btcentralplus.com) (Quit: leaving)
[16:21:15] <austincheney> jwpapi, I use a lot of functions in my code.  If you are new to the language functions are first class citizens, which means you can put functions absolutely anywhere.
[16:21:57] <austincheney> functions are essentially just a portable bag of instructions that optionally receive input and provide output (default undefined)
[16:27:34] *** Joins: bliminse (~bliminse@host86-158-241-239.range86-158.btcentralplus.com)
[16:30:08] *** Joins: carrot98[m] (~carrot98m@2001:470:69fc:105::1:5fcc)
[16:30:32] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[16:31:20] *** Quits: alystair (~alystair@user/alystair) (Remote host closed the connection)
[16:33:16] *** Joins: i0e (~is0ke3@user/is0ke3)
[16:34:56] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[16:36:25] *** Joins: bobdobbs` (~user@116.251.146.222)
[16:38:06] *** Quits: bobdobbs (~user@2406:5a00:4456:db00:aff5:24d:5a3e:1b41) (Ping timeout: 260 seconds)
[16:39:09] *** Joins: ccapndave (~ccapndave@2a02:1210:6c4e:d600:6dd7:6cf5:c6bb:d1e0)
[16:39:23] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 250 seconds)
[16:39:51] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[16:41:51] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.4)
[16:43:10] *** Quits: henry40408 (~henry4040@175.181.155.165) (Read error: Connection reset by peer)
[16:44:59] *** Joins: henry40408 (~henry4040@123-204-141-191.adsl.dynamic.seed.net.tw)
[16:49:30] <stenno> nowadays i really find functions strange that return undefined lol
[16:49:35] <stenno> like .forEach
[16:49:39] <stenno> it really feels bad
[16:52:30] <undefined_bob> I'm undefined :3
[16:54:06] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[17:00:36] <stenno> a function returning undefined_bob would be even stranger than a function returning undefined
[17:02:26] <Cork> n> function func() { return Symbol('undefined_bob') }; func()
[17:02:27] <jellobot> (okay) Symbol(undefined_bob)
[17:03:11] *** Joins: c4017w__ (~c4017@209.52.68.8)
[17:03:39] <DPA> n> func=(x)=>`${x}_bob`; func()
[17:03:40] <jellobot> (okay) 'undefined_bob'
[17:04:03] <Cork> except that one isn't unique! :D
[17:05:57] <DPA> You want func to always return a different undefined_bob?
[17:06:30] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[17:08:22] *** Quits: ccapndave (~ccapndave@2a02:1210:6c4e:d600:6dd7:6cf5:c6bb:d1e0) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:08:42] *** Joins: D1nger (~Booster2o@91.183.83.5)
[17:13:26] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 250 seconds)
[17:14:53] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[17:15:43] *** Joins: i0e (~is0ke3@user/is0ke3)
[17:25:33] *** Joins: gehn (~gehn@user/gehn)
[17:25:38] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:26:02] *** Joins: chao (~stenno@user/stenno)
[17:27:06] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 260 seconds)
[17:28:16] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 245 seconds)
[17:29:16] *** Quits: magga (magga@ti0036a400-3577.bb.online.no) (Remote host closed the connection)
[17:29:31] *** Joins: magga (magga@ti0036a400-3577.bb.online.no)
[17:31:38] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[17:35:02] *** Joins: ccapndave (~ccapndave@213.55.221.7)
[17:35:17] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 250 seconds)
[17:37:16] *** Joins: chao (~stenno@user/stenno)
[17:38:47] *** Quits: flughafen (~flughafen@p2e55dcb3.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[17:39:42] *** JoelJoel is now known as Joel
[17:40:16] *** Quits: Spydar007 (~spydar007@user/spydar007) (Quit: Quit)
[17:41:03] *** chao is now known as stenno
[17:46:05] *** Joins: Spydar007 (~spydar007@user/spydar007)
[17:49:08] *** Joins: jsmooth (~quassel@user/jsmooth)
[17:49:57] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[17:49:57] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[17:49:57] *** Joins: wroathe (~wroathe@user/wroathe)
[17:50:06] <jsmooth> I'm looking for the best free options for libraries to take away JS' quirks, make it fun and ES6 compatible
[17:50:32] <jsmooth> I'm not looking for Angular or Vue or ReactJS
[17:51:41] *** Joins: flughafen (~flughafen@p5de8ee72.dip0.t-ipconnect.de)
[17:52:41] <SpiceMan> define "fun"
[17:52:52] <SpiceMan> without fun, you are describing babel
[17:52:58] <SpiceMan> and listing frameworks
[17:53:05] <SpiceMan> so... I have no idea what you are talking about
[17:53:35] *** Quits: jalil (~jalil@2a01:e0a:277:4100:4b34:f28b:c1d1:3941) (Quit: jalil)
[17:53:47] *** Joins: jalil (~jalil@2a01:e0a:277:4100:f726:20ac:8c7a:b279)
[17:54:59] *** Quits: keypusher (keypusher@user/keypusher) (Remote host closed the connection)
[17:55:09] *** Joins: hseg (~hseg@195.192.229.41)
[17:55:13] *** Quits: voltage_ (voltage@user/voltage) (Remote host closed the connection)
[17:55:32] *** Joins: N4buc0 (~N4buc0@2804:7f4:348b:2121:7dc1:f932:cbd3:a24c)
[17:55:32] *** Quits: ccapndave (~ccapndave@213.55.221.7) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:55:37] *** Joins: voltage_ (voltage@user/voltage)
[17:55:58] *** Joins: keypusher (keypusher@user/keypusher)
[17:57:42] *** Joins: ccapndave (~ccapndave@213.55.221.7)
[17:58:57] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 256 seconds)
[17:59:26] *** Quits: hseg (~hseg@195.192.229.41) (Remote host closed the connection)
[17:59:35] *** Joins: hseg (~hseg@195.192.229.41)
[17:59:52] *** Quits: hseg (~hseg@195.192.229.41) (Remote host closed the connection)
[18:03:40] *** Joins: c4017w_ (~c4017@209.52.68.8)
[18:07:07] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[18:08:15] *** Joins: stenno (~stenno@user/stenno)
[18:08:39] <undefined_bob> lol @ stenno Cork DPA :D
[18:09:29] <stenno> symbols are cool
[18:09:40] <stenno> can we get a million more well-known symbols
[18:12:09] <stenno> imagine a well-known json symbol which is used by JSON.stringify
[18:12:37] *** Quits: D4mned (~D1mned@89.108.142.93) (Ping timeout: 240 seconds)
[18:13:03] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[18:13:09] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[18:13:09] <stenno> or well-known serialization symbol
[18:13:51] <silly> like .toJSON()?
[18:13:52] *** Quits: nomic (~nomic@185.192.69.51) (Quit: Leaving)
[18:13:53] <sheetjs> you dont need a symbol for that
[18:13:58] *** Joins: D4mned (~D1mned@89.108.142.93)
[18:14:26] <stenno> toJSON is just for dates, right
[18:15:23] <sheetjs> n> var x = { valueOf:() => 3, toString: () => "4", toJSON: () => "5" }; [x+1, x+"1", JSON.stringify(x)]
[18:15:24] <jellobot> (okay) [ 4, '31', '"5"' ]
[18:15:24] <stenno> what does JSON.stringify actually do? iterates over enumerable keys and checks if the type of the value is stringifyable?
[18:15:39] <sheetjs> n> var x = { valueOf:() => 3, toString: () => "4", toJSON: () => "5" }; [x+1, String(x), JSON.stringify(x)]
[18:15:39] <jellobot> (okay) [ 4, '4', '"5"' ]
[18:16:06] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:16:12] <austincheney> jsmooth, the best library to remove the quirks is TypeScript with TypeScript lint and a bunch of custom rules.  This is super super subjective and my personal opinion.  ES5 introduced "use strict" but otherwise added more quirks than it took away so I have a bunch of personal lint rules for just that
[18:16:34] <sheetjs> it gets called with an argument
[18:16:47] <stenno> ooh wait there is a second param
[18:16:48] <silly> stenno, define stringifyable
[18:16:58] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[18:17:00] *** Joins: pulse (~pulse@user/pulse)
[18:17:03] <austincheney> jsmooth, the reason why TypeScript is great for this purpose is because you can specify that all functions must be typed and that implicity "any" types are not allowed
[18:17:05] <silly> n> JSON.parse('null')
[18:17:05] <jellobot> (okay) null
[18:17:06] <sheetjs> n> var x = { toJSON: function() { console.log(arguments); return "abc"; } }; JSON.stringify(x)
[18:17:07] <jellobot> (okay) [Arguments] { '0': '' } '"abc"'
[18:17:14] <stenno> silly: well a function doesn't doesn't get stringified
[18:17:17] <stenno> sorry
[18:17:19] <stenno> er not sorry
[18:17:20] <sheetjs> n> var x = { toJSON: function() { console.log(arguments); return "abc"; } }; JSON.stringify({x})
[18:17:21] <jellobot> (okay) [Arguments] { '0': 'x' } '{"x":"abc"}'
[18:17:23] <silly> but it could
[18:17:30] <sheetjs> n> var x = { toJSON: function() { console.log(arguments); return "abc"; } }; JSON.stringify([x])
[18:17:31] <jellobot> (okay) [Arguments] { '0': '0' } '["abc"]'
[18:17:38] <stenno> n> const foo = {a: () => 23}; JSON.stringify(foo)
[18:17:38] <jellobot> (okay) '{}'
[18:17:39] <sheetjs> ^^ stenno the gamut
[18:18:04] <sheetjs> toJSON gets an argument which varies depending on the context
[18:18:23] <stenno> hmm peculiar
[18:18:42] <stenno> second param of stringify is the replacer function
[18:18:47] <stenno> never used it
[18:19:22] <sheetjs> n> var x = { toJSON: function() { console.log(arguments); return "abc"; } }; var arr = [1,2,3]; arr.x = x; JSON.stringify(arr)
[18:19:22] <jellobot> (okay) '[1,2,3]'
[18:19:32] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[18:20:00] <stenno> n> const foo = {a: () => 23}; JSON.stringify(foo, (k,v) => 'lazy function');
[18:20:01] <jellobot> (okay) '"lazy function"'
[18:20:20] <stenno> hmm interesting
[18:20:49] <stenno> i'd have expected '{"a": "lazy function"}'
[18:21:27] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 250 seconds)
[18:21:28] <stenno> n> const foo = {a: () => 23}; JSON.stringify(foo, (k,v) => (typeof v === 'function') ? 'lazy function' : v);
[18:21:28] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:3c9b:6dce:e374:3130) (Read error: Connection reset by peer)
[18:21:28] <jellobot> (okay) '{"a":"lazy function"}'
[18:21:32] <stenno> strange
[18:21:43] <stenno> unexpected at least
[18:21:57] *** Quits: llorllale (~llorllale@198.98.119.85) (Ping timeout: 240 seconds)
[18:22:12] *** Joins: happymeal (~happymeal@user/happymeal)
[18:22:48] <stenno> n> const foo = {a: () => 23}; JSON.stringify(foo, (k,v) => { console.log(k,v); return v; });
[18:22:49] <jellobot> (okay) { a: [Function: a] } a [Function: a] '{}'
[18:23:06] <DPA> toJSON is nice with classes / prototypes
[18:23:12] <stenno> i don't get it
[18:23:23] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[18:23:23] <DPA> n> JSON.stringify(10n)
[18:23:23] <jellobot> (fail) TypeError: Do not know how to serialize a BigInt
[18:23:31] <stenno> n> const foo = {a: () => 23}; JSON.stringify(foo, (k,v) => { console.log('key',k,'value',v); return v; });
[18:23:31] <jellobot> (okay) key  value { a: [Function: a] } key a value [Function: a] '{}'
[18:23:38] <DPA> n> BigInt.prototype.toJSON = function(){return this.toString();}; JSON.stringify(10n)
[18:23:39] <jellobot> (okay) '"10"'
[18:23:43] <stenno> first item that gets passed it the actual object
[18:23:47] <stenno> DPA: well.
[18:24:02] <stenno> the reason for symbols is that you can safely extend the prototype of build-ins
[18:24:44] <stenno> hmm
[18:24:52] <stenno> maybe not for built-ins still..
[18:25:09] *** Quits: ccapndave (~ccapndave@213.55.221.7) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:25:36] <stenno> so BigInt should have an already defined well-known toJSON symbol
[18:25:42] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:25:42] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:25:42] *** Joins: wroathe (~wroathe@user/wroathe)
[18:26:28] <stenno> https://stackoverflow.com/questions/34749640/should-the-extension-of-built-in-javascript-prototypes-through-symbols-also-be-a
[18:26:45] <DPA> Technically, it should just be a JSON number, but we can't just turn it into a number and return it to toJSON, because it'll loose the precision. Same with deserialisation.
[18:27:18] *** Joins: Left_Turn (~Matthew@2a00:23c8:5f92:1801:80f1:f70f:75be:3480)
[18:28:24] *** Quits: thojanssens (~thojansse@49.230.14.31) (Ping timeout: 250 seconds)
[18:29:10] <sheetjs> you can pass a string
[18:30:17] <sheetjs> n> JSON.stringify(112341234123412341234)
[18:30:18] <jellobot> (okay) '112341234123412340000'
[18:30:28] <sheetjs> n> BigInt.prototype.toJSON = function() { return this.toString(); }; JSON.stringify(112341234123412341234n)
[18:30:29] <jellobot> (okay) '"112341234123412341234"'
[18:30:37] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-079.um10.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[18:30:39] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[18:31:32] <sheetjs> you could do some roundtrip thing in your JSON.parse to determine if a string should be a bigint
[18:31:55] *** Joins: chromagna (~chromagna@174.27.145.218)
[18:33:02] <DPA> Yes, but ideally, numbers should be numbers. JSON just doesn't go well with new data types, like BigInt and Date. I sometimes make some custom serialization & deserialization functions that use strings and just prefix them with the type.
[18:33:02] <DPA> Like {a:"test", b: new Date()} becomes {"a":"string:test","b":"Date:2022-02-10T15:02:26.191Z"}. But it's not pretty.
[18:33:22] <sheetjs> just go all the way
[18:33:36] *** Joins: ccapndave (~ccapndave@213.55.221.7)
[18:34:14] <sheetjs> make it xml
[18:34:59] <sheetjs> in all seriousness, this is one area that xml actually handles better than most
[18:35:20] <DPA> Right, schemas... Wasn't there schema stuff for JSON as well? Or was that turtle or something?
[18:36:19] <sheetjs> protobuf also has schemas
[18:39:55] <DPA> protobuf is a nice idea. Is there only that one implementation from google with that unusual license, though?
[18:40:58] <sheetjs> "unusual" there are 3 moving parts
[18:41:27] <sheetjs> the core protobuf software, including the protoc compiler itself, is BSD-3-Clause
[18:41:59] *** Joins: chao (~stenno@user/stenno)
[18:42:17] <sheetjs> when you use protoc to generate code, you need a small support library to use it (for JS, it provides support for 64-bit integers among other things).  That is also BSD-3-Clause
[18:43:27] <sheetjs> finally, there's the actual generated output from protoc that you typically compile into your program.  Google explicitly disclaims ownership
[18:44:14] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-079.um10.pools.vodafone-ip.de)
[18:44:37] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 250 seconds)
[18:44:44] <DPA> Where does that thing fit in: https://github.com/protocolbuffers/protobuf/blob/master/LICENSE
[18:45:28] <sheetjs> lines 1-27 are the standard body for BSD-3-Clause
[18:45:48] <sheetjs> https://opensource.org/licenses/BSD-3-Clause
[18:46:27] <sheetjs> as it is in the repo for the compiler project, it is understood that the license applies to the compiler
[18:46:41] *** Quits: muley (~muley@76-245-68-99.lightspeed.iplsin.sbcglobal.net) (Remote host closed the connection)
[18:46:50] *** Joins: thojanssens (~thojansse@49.230.14.31)
[18:47:00] <sheetjs> lines 29-30 are google saying they don't claim ownership of generated output
[18:47:09] <sheetjs> and 30-32 are talking about the shim
[18:47:37] <DPA> Ok, I see.
[18:48:00] *** Joins: teut (~teut@2401:4900:1c68:dbe1:f0f6:7833:462e:d903)
[18:48:02] *** Joins: muley (~muley@76-245-68-99.lightspeed.iplsin.sbcglobal.net)
[18:48:37] <jsmooth> austincheney:  Where can I find a good set of lint rules?
[18:48:57] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-079.um10.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[18:48:58] *** Joins: RLa (~RLa@82.131.24.208.cable.starman.ee)
[18:50:08] *** Joins: vysn (~vysn@user/vysn)
[18:51:02] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[18:51:03] *** Quits: ccapndave (~ccapndave@213.55.221.7) (Read error: Connection reset by peer)
[18:51:46] <silly> !airbnb @jsmooth
[18:51:46] <jellobot> jsmooth, Airbnb's javascript style guide is an extremely comprehensive set of default style rules (which you can then customize as you see fit) - setup instructions can be found here: https://github.com/airbnb/javascript - see also !eslint and !airbnb-react
[18:51:49] *** Parts: k_sze (~k_sze@mail2.kalunite.net) (Leaving)
[18:52:10] <silly> this is the most popular one
[18:52:57] *** Quits: garrit (~garrit@user/garrit) (Ping timeout: 240 seconds)
[18:53:27] *** Joins: garrit (~garrit@ip-109-42-113-38.web.vodafone.de)
[18:53:27] *** Quits: garrit (~garrit@ip-109-42-113-38.web.vodafone.de) (Changing host)
[18:53:27] *** Joins: garrit (~garrit@user/garrit)
[18:56:26] *** Joins: ferdna (~ferdna@user/ferdna)
[18:57:07] *** Parts: Left_Turn (~Matthew@2a00:23c8:5f92:1801:80f1:f70f:75be:3480) (Leaving)
[18:58:12] <sheetjs> n> 0x391453 + 2554631
[18:58:13] <jellobot> (okay) 6295386
[18:58:21] <sheetjs> n> 0x391492 + 2554568
[18:58:22] <jellobot> (okay) 6295386
[18:58:25] <sheetjs> hmm
[18:58:29] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 250 seconds)
[18:59:16] <silly> n> 6295386 + 0b1
[18:59:16] <jellobot> (okay) 6295387
[18:59:46] <silly> n> 6295383 + 0b11
[18:59:47] <jellobot> (okay) 6295386
[18:59:53] <sheetjs> good work silly
[19:00:01] <silly> yes, ikr
[19:00:47] *** Quits: keypusher (keypusher@user/keypusher) (Remote host closed the connection)
[19:01:05] *** Quits: voltage_ (voltage@user/voltage) (Remote host closed the connection)
[19:01:15] *** Joins: i0e (~is0ke3@user/is0ke3)
[19:01:29] *** Joins: voltage_ (voltage@user/voltage)
[19:01:39] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-079.um10.pools.vodafone-ip.de)
[19:02:38] <jsmooth> Okay. Thank you.
[19:02:39] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 256 seconds)
[19:02:40] *** Joins: d[-_-]b (~stenno@user/stenno)
[19:02:44] *** Joins: keypusher (keypusher@user/keypusher)
[19:02:52] <fweht> hi, i made an app which let the user create a gif and download it, works as intended but on the iphone downloading and sharing is a bit cumbersome, are there maybe some meta parameters or something which let the user directly download and share a gif?
[19:04:11] *** Joins: c4017w__ (~c4017@209.52.68.8)
[19:05:57] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-079.um10.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[19:06:40] *** Quits: undefined_bob (~undefined@user/undefined-bob/x-5411918) (Quit: WeeChat 1.5)
[19:07:50] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[19:09:27] *** Quits: teut (~teut@2401:4900:1c68:dbe1:f0f6:7833:462e:d903) (Ping timeout: 256 seconds)
[19:09:28] *** Joins: crashrep (~crashrep@user/crashrep)
[19:12:51] *** d[-_-]b is now known as stenno
[19:17:00] *** Quits: fabz- (~textual@2804:14c:34:2686:7ce4:7b7f:e85a:8a44) (Quit: Textual IRC Client: www.textualapp.com)
[19:17:09] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 256 seconds)
[19:20:36] *** Quits: Jigsy (~Jigsy@user/jigsy) (Ping timeout: 268 seconds)
[19:21:49] *** Quits: garrit (~garrit@user/garrit) (Ping timeout: 240 seconds)
[19:22:51] *** Joins: garrit (~garrit@dslb-088-070-028-028.088.070.pools.vodafone-ip.de)
[19:22:51] *** Quits: garrit (~garrit@dslb-088-070-028-028.088.070.pools.vodafone-ip.de) (Changing host)
[19:22:51] *** Joins: garrit (~garrit@user/garrit)
[19:24:26] *** Joins: Jigsy (~Jigsy@user/jigsy)
[19:25:02] *** Joins: benni (~benni@ipbcc2c928.dynamic.kabel-deutschland.de)
[19:29:02] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[19:29:11] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 252 seconds)
[19:32:01] *** Quits: stenno (~stenno@user/stenno) (Quit: WeeChat 3.3)
[19:33:09] *** Quits: chromagna (~chromagna@174.27.145.218) (Ping timeout: 250 seconds)
[19:33:17] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[19:34:21] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[19:34:45] <austincheney> jsmooth, silly code style is not the same as lint rules.  Those serve different pruposes though you can enforce some code style rules with a lint tool.
[19:35:12] *** Joins: i0e (~is0ke3@user/is0ke3)
[19:36:50] <austincheney> jsmooth, here are my lint rules: https://gist.github.com/prettydiff/d2fff78abd374461235c1e0d8a312deb
[19:37:10] <austincheney> jsmooth, this is highly subject to my personal opinions on programming
[19:37:45] <austincheney> everything in "no-restricted-syntax" is a custom rule
[19:39:25] <silly> do you disallow Promise or Promise.*? and why?
[19:40:18] <silly> in line 78
[19:40:36] <buu> "                "message": "Use explicit reference names instead of 'this'."
[19:40:40] <buu> What does this mean
[19:41:01] <buu> wait what
[19:41:02] <buu>                 "message": "No classes. Inheritance imposes unseen complexity upon code extension."
[19:41:08] <austincheney> silly, because I prefer explicit callbacks so that I can read the flow control.  It is an extremely imperative style of coding
[19:41:08] <buu>                 "message": "Do not use Promise.  Instead use callbacks and provide documentation to clearly describe the flow control."
[19:41:14] <buu> Oh god no
[19:41:15] <austincheney> buu, I don't like OOP.
[19:41:25] <RLa> he likes callback hell
[19:41:35] <buu> Callbacks are genuinely awful
[19:41:44] <silly> there's a fetish for everything
[19:42:12] *** Joins: stenno (~stenno@user/stenno)
[19:42:20] <sheetjs> can you even easily roundtrip classes through json?
[19:43:04] <austincheney> when the application is small callbacks can really blow out the size of the code which impacts reading speed.  As an application gets larger that becomes irrelevant because no matter what there is going to be a lot of code to read.
[19:43:05] <silly> have you tried extending global.JSON?
[19:43:07] <sheetjs> or structured clone for that matter
[19:44:03] <corwin> Three stages of language evolution: TMTOWTDI, The Best Practice Is Actually, and What Was That Used For, Again?
[19:44:13] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-079.um10.pools.vodafone-ip.de)
[19:46:11] <RLa> doesn't JSON.parse include reviever function support to give you class instances for example?
[19:46:49] <silly> huh? i doubt that, yet you can implement it yourself
[19:46:50] <stenno> didn't i just post that a few hours ago
[19:47:02] <stenno> second parameter of JSON.parse
[19:47:13] <stenno> oh reviver
[19:47:31] <silly> stenno, didn't you do the strigify dance only?
[19:47:35] <stenno> yep
[19:47:43] <stenno> my bad
[19:48:04] <stenno> JSON.parse takes second param too
[19:48:16] <stenno> and there you can give a reviver
[19:48:45] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-079.um10.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[19:48:58] <stenno> n> JSON.parse('{"a":23}', (k,v) => typeof v === 'number' ? v + 1 : v)
[19:48:59] <jellobot> (okay) { a: 24 }
[19:49:28] <silly> but how would that work with scopes?
[19:50:10] <stenno> not sure what you mean, then again i lost my chat history of this channel when i reconnected
[19:50:22] <stenno> so i kinda stumbled into this discussion lol
[19:50:58] <silly> if you created a function from string, how would it get access to variables from outer scope?
[19:51:09] *** Joins: dingdreher (~dingdrehe@2a02:aa08:401e:fff2:35f4:c0a:127c:c6a0)
[19:51:35] *** Quits: garrit (~garrit@user/garrit) (Ping timeout: 250 seconds)
[19:51:50] *** Joins: garrit (~garrit@ip-109-42-113-40.web.vodafone.de)
[19:51:50] *** Quits: garrit (~garrit@ip-109-42-113-40.web.vodafone.de) (Changing host)
[19:51:50] *** Joins: garrit (~garrit@user/garrit)
[19:52:12] <silly> i'm sure there's a good reason why json doesn't stringify functions and nobody wants it to
[19:53:31] *** Quits: benni (~benni@ipbcc2c928.dynamic.kabel-deutschland.de) (Quit: Client closed)
[19:54:02] *** Joins: bynx (~bynx@pool-173-53-74-29.rcmdva.fios.verizon.net)
[19:54:10] <sheetjs> how would it even work?
[19:54:17] *** Joins: sam_1 (~sam_1@87.51.251.118)
[19:55:20] <sheetjs> n> Object.defineProperty.toString()
[19:55:21] <jellobot> (okay) 'function defineProperty() { [native code] }'
[19:56:04] <bynx> Does anyone know of a way to read massive PDF files (1GB+) in the browser without memory issues?
[19:57:00] <RLa> bynx, browser native reader?
[19:57:19] <bynx> Any reader is fine as long as it can work with huge files
[19:57:43] *** Joins: heatwave (~heatwave@2401:4900:1c65:67e9:e7df:5551:904d:de01)
[19:57:56] <RLa> pdf.js should be able to give you content only based on selected pages
[19:58:07] <sheetjs> PDF.js, the reader used in firefox, is widely regarded as one of the best javascript readers
[19:58:18] <bynx> Sick I'll check it out thanks :D
[19:58:28] *** Joins: Rockwood (~Rocky@user/rocky)
[19:58:51] <RLa> it's not full reader afaik, you need to implement your own paging, zoom/pan controls etc.
[19:59:26] *** Quits: nulysses (~Thunderbi@p200300c51726b60019ce65532cb00489.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[19:59:32] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[19:59:34] <bynx> Can I configure it to scroll through many pages and load only what's shown?
[19:59:34] *** Quits: cotko (~cotko@155.pool85-49-78.dynamic.orange.es) (Ping timeout: 256 seconds)
[20:00:39] <bynx> I may have just found my own answer in the docs... looks like it does that by default. I'll give it a whirl.
[20:02:44] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 252 seconds)
[20:02:56] *** Quits: dingdreher (~dingdrehe@2a02:aa08:401e:fff2:35f4:c0a:127c:c6a0) (Quit: dingdreher)
[20:04:40] *** Joins: c4017w_ (~c4017@209.52.68.8)
[20:08:23] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[20:08:45] *** Quits: Relms-Wah (Relms@user/relms) (Quit: Ur Cute)
[20:08:56] *** Quits: D4mned (~D1mned@89.108.142.93) (Ping timeout: 250 seconds)
[20:11:19] *** Joins: D4mned (~D1mned@89.108.142.93)
[20:11:21] *** Quits: D4mned (~D1mned@89.108.142.93) (Client Quit)
[20:11:31] *** Joins: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net)
[20:12:38] *** Joins: eXtr3m0_ (~eXtr3m0@p4fd3a0d7.dip0.t-ipconnect.de)
[20:15:56] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[20:15:57] *** Joins: thiras (~thiras@user/thiras)
[20:15:58] *** Joins: thiras_ (~thiras@user/thiras)
[20:15:58] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[20:16:01] *** Quits: thiras_ (~thiras@user/thiras) (Remote host closed the connection)
[20:17:11] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-079.um10.pools.vodafone-ip.de)
[20:18:46] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[20:19:32] *** Quits: garrit (~garrit@user/garrit) (Remote host closed the connection)
[20:21:08] *** Quits: jsmooth (~quassel@user/jsmooth) (Quit: jsmooth)
[20:21:25] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-079.um10.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[20:22:45] *** Quits: heatwave (~heatwave@2401:4900:1c65:67e9:e7df:5551:904d:de01) (Quit: WeeChat 3.4)
[20:23:01] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[20:25:47] *** Joins: sam_1 (~sam_1@87.51.251.118)
[20:27:39] *** Quits: baracurda_ (~baracurda@user/parserblabla) (Ping timeout: 276 seconds)
[20:28:03] *** Quits: D1nger (~Booster2o@91.183.83.5) (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
[20:28:47] *** Quits: peteyboy1 (~peteyboy1@95.169.226.66) (Ping timeout: 256 seconds)
[20:29:41] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[20:29:56] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 245 seconds)
[20:31:09] *** Joins: ekathva (~ekathva@2001:999:50:cab1:d271:1874:582c:870e)
[20:32:59] *** Quits: ekathva (~ekathva@2001:999:50:cab1:d271:1874:582c:870e) (Remote host closed the connection)
[20:33:09] *** Joins: src (~src@user/src)
[20:33:40] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[20:34:03] *** Joins: nomic (~nomic@2a00:23c7:ec90:a501:7081:314:1342:7d42)
[20:34:05] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[20:34:09] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[20:34:12] *** Quits: nomic (~nomic@2a00:23c7:ec90:a501:7081:314:1342:7d42) (Remote host closed the connection)
[20:34:20] *** Joins: nomic2 (~nomic@185.192.69.51)
[20:35:57] *** Quits: shailangsa (~shailangs@host217-39-45-199.range217-39.btcentralplus.com) (Remote host closed the connection)
[20:38:59] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[20:39:51] *** Joins: dingdreher (~dingdrehe@2a02:aa08:401e:fff2:35f4:c0a:127c:c6a0)
[20:42:23] *** Joins: nulysses (~Thunderbi@p200300c51726b60019ce65532cb00489.dip0.t-ipconnect.de)
[20:42:55] *** Quits: bynx (~bynx@pool-173-53-74-29.rcmdva.fios.verizon.net) (Quit: WeeChat 2.8)
[20:43:34] *** Joins: garrit (~garrit@p2003000603f8d257213fc6a762236c21.dip0.t-ipconnect.de)
[20:43:34] *** Quits: garrit (~garrit@p2003000603f8d257213fc6a762236c21.dip0.t-ipconnect.de) (Changing host)
[20:43:34] *** Joins: garrit (~garrit@user/garrit)
[20:43:38] *** Quits: garrit (~garrit@user/garrit) (Remote host closed the connection)
[20:43:53] *** Joins: garrit (~garrit@p2003000603f8d257213fc6a762236c21.dip0.t-ipconnect.de)
[20:43:53] *** Quits: garrit (~garrit@p2003000603f8d257213fc6a762236c21.dip0.t-ipconnect.de) (Changing host)
[20:43:53] *** Joins: garrit (~garrit@user/garrit)
[20:47:39] *** Joins: sam_1 (~sam_1@87.51.251.118)
[20:49:35] *** nomic2 is now known as nomic
[20:49:56] *** Joins: Buoy172 (~Buoy172@95.86.30.134)
[20:50:05] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Ping timeout: 256 seconds)
[20:50:18] <Buoy172> I want to make a shallow copy of an object, but I want one property removed.
[20:50:26] <Buoy172> Is this the right way: https://kopy.io/j9b2u ?
[20:50:35] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-079.um10.pools.vodafone-ip.de)
[20:51:21] *** Quits: RLa (~RLa@82.131.24.208.cable.starman.ee) (Quit: Client closed)
[20:53:09] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 256 seconds)
[20:53:10] *** Joins: peteyboy1 (~peteyboy1@95.169.226.66)
[20:53:12] *** Joins: teut (~teut@2401:4900:1c68:dbe1:f0f6:7833:462e:d903)
[20:53:18] <ross> Buoy172: sure, but no need to set d to null first
[20:54:13] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[20:54:14] <ross> if d is very large and you have memory constraints, it might be better to construct the copied object from scratch, as your way will have objTarget contain d for a sec before you delete it
[20:54:48] <Buoy172> yes, d is very large
[20:55:02] <Buoy172> but doesn't setting it to 'null' avoid that (like in my example)
[20:55:03] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-079.um10.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[20:55:13] <Buoy172> I mean avoid copying it
[20:56:28] *** Joins: sam_1 (~sam_1@87.51.251.118)
[20:57:51] <ljharb> Buoy172: `const { removed, ...rest } = obj` does that
[20:57:56] <ljharb> Buoy172: where "removed" is the property you want to remove
[20:58:14] <ljharb> also what is "very large"
[20:58:50] <ljharb> Buoy172: also that paste site's SSL cert is invalid; can you use gist or codesandbox? no point in using anything but those two.
[21:00:04] <Buoy172> ok, so I my case I should do "const objTarget = { d: null, ...obj };", right?
[21:00:09] <ljharb> no, that won't work
[21:00:16] <ljharb> just do `d` and ignore the binding that's created
[21:00:18] <Buoy172> I will not use "kopy.io" in the future
[21:00:20] <samsch> `d` wouldn't be copied anyway, the new object just has a new ref to it.
[21:00:31] <samsch> !paste
[21:00:31] <jellobot> samsch, Please paste your code to a site like https://gist.github.com or https://dpaste.org/ (NOT pastebin.com or hastebin), or create a running example: see !fiddle. See also !badpastebin !hastebin !nopaste and !mcve
[21:00:48] <samsch> dpaste is good if you want a no-login small bin
[21:02:14] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 260 seconds)
[21:03:00] <Buoy172> @ljharb: right, 'd' will be a ref in the new object. So I can just delete it afterwards.
[21:03:30] <Buoy172> Because I don't want 'd' in there when I convert to json string in the future.
[21:03:50] <Buoy172> Thanks all
[21:04:11] *** Quits: tristan_ (~tristan@223.33.164.16) (Remote host closed the connection)
[21:04:30] *** Joins: tristan_ (~tristan@223.33.164.16)
[21:05:11] *** Joins: c4017w__ (~c4017@209.52.68.8)
[21:06:12] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[21:06:14] <Buoy172> Made this just to confirm: https://jsbin.com/gefunupeta/1/edit?js,console
[21:08:15] *** Joins: terminalpusher (~terminalp@2a01:586:c811:1:5c46:8c99:ea68:5e78)
[21:09:01] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[21:09:30] *** Joins: stenno (~stenno@user/stenno)
[21:09:40] <jaawerth> ljharb: omg they messed with the spacejam 1996 website, added an async tag just so they could use google analytics on it. THE NERVE
[21:10:25] *** Jaran|zZzZZZZz is now known as Jaran
[21:10:46] *** Quits: Buoy172 (~Buoy172@95.86.30.134) ()
[21:14:23] *** Joins: hojasuelta (~hojasuelt@2806:102e:18:abc0:5817:70d5:8365:91ed)
[21:14:32] *** Joins: shailangsa (~shailangs@host217-39-45-199.range217-39.btcentralplus.com)
[21:16:53] *** Quits: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net) (Remote host closed the connection)
[21:17:31] *** Joins: mat001 (~mat001@72.28.108.216)
[21:17:57] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[21:18:15] *** Quits: garrit (~garrit@user/garrit) (Read error: Connection reset by peer)
[21:18:22] *** Joins: garrit (~garrit@p2003000603f8d257213fc6a762236c21.dip0.t-ipconnect.de)
[21:18:22] *** Quits: garrit (~garrit@p2003000603f8d257213fc6a762236c21.dip0.t-ipconnect.de) (Changing host)
[21:18:22] *** Joins: garrit (~garrit@user/garrit)
[21:19:56] *** Joins: sam_1 (~sam_1@87.51.251.118)
[21:20:39] *** Quits: N4buc0 (~N4buc0@2804:7f4:348b:2121:7dc1:f932:cbd3:a24c) (Remote host closed the connection)
[21:21:01] *** Joins: N4buc0 (~N4buc0@2804:7f4:348b:2121:7dc1:f932:cbd3:a24c)
[21:24:05] *** Joins: Akiva (~Akiva@user/Akiva)
[21:24:07] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-079.um10.pools.vodafone-ip.de)
[21:25:53] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[21:26:10] *** Quits: terminalpusher (~terminalp@2a01:586:c811:1:5c46:8c99:ea68:5e78) (Remote host closed the connection)
[21:26:55] *** Quits: garrit (~garrit@user/garrit) (Ping timeout: 250 seconds)
[21:27:06] *** Joins: garrit (~garrit@ip-109-42-112-93.web.vodafone.de)
[21:27:06] *** Quits: garrit (~garrit@ip-109-42-112-93.web.vodafone.de) (Changing host)
[21:27:06] *** Joins: garrit (~garrit@user/garrit)
[21:28:02] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 240 seconds)
[21:28:51] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-079.um10.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[21:29:24] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[21:31:02] <ljharb> jaawerth: lol
[21:32:31] *** Quits: Kirjava (~cake@user/kirjava) (Quit: confectionery says bye)
[21:32:33] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:32:46] <teut> does js caches it's code somewhere?
[21:33:23] <teut> I often make changes to the code and the updates arent reflected when I run the code
[21:33:37] *** Quits: ejjfunky (~ejjfunky@125.164.23.223) (Quit: Leaving)
[21:33:40] <teut> then I restart my vscode and the code runs
[21:33:48] <teut> I am quite sick of this
[21:34:17] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Ping timeout: 256 seconds)
[21:35:49] <austincheney> teut, the browser will cache external assets such as JavaScript files, other environments might do the same, but there is no language specific caching between runtimes
[21:36:04] <teut> and in case of node.js?
[21:36:39] *** Quits: src (~src@user/src) (Quit: Leaving)
[21:37:21] <austincheney> teut, in the case of Node the Node each execution is separate from the prior.  If you want to cache anything you have to do a lot of intentional work, such as writing to a file or database
[21:37:25] *** Joins: chromagna (~chromagna@174.27.145.218)
[21:37:49] <teut> in python it creates a bytecode file  .pyc
[21:37:57] *** Joins: Betal (~Betal@user/betal)
[21:37:59] <teut> do you do such a thing?
[21:38:11] <teut> I mean does js does this thing?
[21:38:48] *** Quits: Harlin (~DonQixote@75-163-202-34.clsp.qwest.net) (Quit: Leaving)
[21:38:59] <austincheney> no
[21:38:59] *** Quits: garrit (~garrit@user/garrit) (Read error: Connection reset by peer)
[21:39:09] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[21:39:17] <teut> hmm, i wander what the problem is then
[21:39:30] <teut> wonder*
[21:39:41] *** Joins: garrit (~garrit@dslb-088-070-028-028.088.070.pools.vodafone-ip.de)
[21:39:41] *** Quits: garrit (~garrit@dslb-088-070-028-028.088.070.pools.vodafone-ip.de) (Changing host)
[21:39:41] *** Joins: garrit (~garrit@user/garrit)
[21:39:41] <austincheney> teut, how you are executing your application?
[21:40:02] <teut> I am using git push heroku master -f
[21:40:16] <teut> but I have experienced similar issues which doing react
[21:40:56] <teut> while doing*
[21:41:26] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:b013:3303:cbfd:b0ad) (Quit: Textual IRC Client: www.textualapp.com)
[21:41:56] <austincheney> teut, your execution is hidden behind a git hook as part of a heroku runtime.  I have no experience with heroku
[21:42:32] <teut> oh  , so it maybe doing something
[21:43:09] <teut> but if it does not catches , from next time I will do a git diff everything I am stuck in such a situation
[21:43:19] *** Joins: Kirjava (~cake@2a01:4f9:c010:6fe9::2)
[21:43:23] *** Quits: Kirjava (~cake@2a01:4f9:c010:6fe9::2) (Changing host)
[21:43:23] *** Joins: Kirjava (~cake@user/kirjava)
[21:44:41] <austincheney> teut, in my case my app is written in TypeScript that compiles to JavaScript from a build task.  When I make changes to my build task I have to run the build twice.  The first time compiles to JavaScript and the second time runs the updated build as the compiled JavaScript
[21:47:56] *** erry_ is now known as erry
[21:50:35] *** Quits: hojasuelta (~hojasuelt@2806:102e:18:abc0:5817:70d5:8365:91ed) (Remote host closed the connection)
[21:51:02] *** Joins: N4buc0- (~N4buc0@177.16.170.138)
[21:51:15] *** Joins: hojasuelta (~hojasuelt@2806:102e:18:abc0:5817:70d5:8365:91ed)
[21:52:09] *** Quits: N4buc0 (~N4buc0@2804:7f4:348b:2121:7dc1:f932:cbd3:a24c) (Remote host closed the connection)
[21:53:23] *** Joins: pycode (~pycode3@2001:b07:5d28:551:c4d5:39cc:f845:6ac5)
[21:53:41] <pycode> hello is there a select2 alternative with just JS Without jquery?
[21:54:13] *** Joins: sam_1 (~sam_1@87.51.251.118)
[21:54:40] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 250 seconds)
[21:55:21] *** Quits: hojasuelta (~hojasuelt@2806:102e:18:abc0:5817:70d5:8365:91ed) (Ping timeout: 245 seconds)
[21:55:49] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Read error: Connection reset by peer)
[21:56:05] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[21:58:38] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-079.um10.pools.vodafone-ip.de)
[22:02:07] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[22:02:13] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 250 seconds)
[22:02:29] *** Quits: Junxter (~Junxter@222.95.164.193) (Read error: Connection reset by peer)
[22:02:46] *** Quits: mei (~mei@user/mei) (Quit: mei)
[22:02:51] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 256 seconds)
[22:03:25] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-079.um10.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[22:03:46] *** Joins: ColorShes (~yoann@1.618.talagrand.com)
[22:04:43] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[22:04:52] *** Quits: duch_kazatel (~robert0@c-76-114-62-229.hsd1.ca.comcast.net) ()
[22:05:14] *** Joins: robertmaxrees (~robert0@c-76-114-62-229.hsd1.ca.comcast.net)
[22:05:23] *** Joins: thiras (~thiras@user/thiras)
[22:05:40] *** Joins: c4017w_ (~c4017@209.52.68.8)
[22:05:41] <KevinX> pycode https://tom-select.js.org/ or https://choices-js.github.io/Choices/ maybe
[22:06:08] *** Quits: clamiax (~clamiax@net-93-144-125-193.cust.vodafonedsl.it) (Quit: brb)
[22:07:27] *** Joins: clamiax (~clamiax@net-93-144-125-193.cust.dsl.teletu.it)
[22:08:28] <teut> austincheney , I m using cjs only
[22:08:39] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[22:09:26] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[22:09:44] *** Quits: realies (~realies@user/realies) (Quit: Ping timeout (120 seconds))
[22:10:13] *** Quits: thojanssens (~thojansse@49.230.14.31) (Ping timeout: 256 seconds)
[22:10:25] *** Joins: realies (~realies@user/realies)
[22:11:44] *** Joins: hojasuelta (~hojasuelt@2806:102e:18:abc0:5817:70d5:8365:91ed)
[22:18:33] *** Joins: onosendi (~onosendi@user/onosendi)
[22:19:56] <onosendi> stenno: you use weechat, correct? Are you using a bouncer?
[22:20:24] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[22:21:03] <stenno> no
[22:21:22] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:23:02] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:24:54] <silly> n> Object.entries({'':'nothing'})
[22:24:55] <jellobot> (okay) [ [ '', 'nothing' ] ]
[22:25:00] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 250 seconds)
[22:25:19] <silly> so silly..
[22:29:08] <ljharb> what's silly about that
[22:29:39] <ljharb> teut: heroku doesn't really work in modern web dev, because you don't want to do your build process in production, but you also don't want to commit your build output to git
[22:29:49] *** Quits: pycode (~pycode3@2001:b07:5d28:551:c4d5:39cc:f845:6ac5) (Ping timeout: 256 seconds)
[22:29:53] <ljharb> iow the entire "git push to deploy" concept stopped working once transpiling became defacto necessary
[22:30:04] <ljharb> (also bundling, minifying, etc)
[22:30:25] <teut> so what is used now?
[22:30:31] <teut> netlify?
[22:30:44] <teut> that build the code , unlike heroku
[22:30:46] *** Quits: dan01 (~dan01@2a02:2f09:3913:cc00:d809:3295:ba30:ec0d) (Ping timeout: 245 seconds)
[22:31:06] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-079.um10.pools.vodafone-ip.de)
[22:31:41] <teut> also now I see that heroku is owned by salesforce which is a big company. It's quite strange that were would use the old techniques.
[22:33:36] <silly> n> Object.entries({'':undefined}) @betternow
[22:33:37] <jellobot> betternow, [ [ '', undefined ] ]
[22:33:41] <silly> nooh
[22:35:32] *** Quits: chromagna (~chromagna@174.27.145.218) (Ping timeout: 240 seconds)
[22:35:43] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-079.um10.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[22:38:14] *** Joins: FreEm1nD (~FreEm1nD@mail.guarapari.store)
[22:38:38] *** Joins: jazzy (~jaziz@user/jaziz)
[22:39:01] *** Quits: garrit (~garrit@user/garrit) (Ping timeout: 240 seconds)
[22:39:42] *** Joins: garrit (~garrit@ip-109-42-112-93.web.vodafone.de)
[22:39:42] *** Quits: garrit (~garrit@ip-109-42-112-93.web.vodafone.de) (Changing host)
[22:39:42] *** Joins: garrit (~garrit@user/garrit)
[22:41:01] *** Joins: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net)
[22:41:18] *** Joins: vysn (~vysn@user/vysn)
[22:43:46] *** Joins: z1haze (~z1haze@user/z1haze)
[22:44:04] <z1haze> is there any official standard or widely adopted standard for how to format json responses for errors?
[22:44:57] *** Joins: teut79 (~teut@2401:4900:1c68:dbe1:f0f6:7833:462e:d903)
[22:45:31] <z1haze> eg {error: true, code: 001, text: 'description of error'} ?
[22:46:05] *** Joins: matsaman (~matsaman@user/matsaman)
[22:47:01] <onosendi> z1haze: something like: https://dpaste.org/QsE5
[22:48:36] <z1haze> so you just mimic the data that can be retreived from the http status, plus a custom message?
[22:49:13] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-079.um10.pools.vodafone-ip.de)
[22:49:19] *** Quits: teut (~teut@2401:4900:1c68:dbe1:f0f6:7833:462e:d903) (Ping timeout: 256 seconds)
[22:50:15] <onosendi> z1haze: It can be whatever you want it to be. Whatever it is, make it consistent. I definitely wouldn't use `error: true`, though.
[22:50:41] <z1haze> why?
[22:50:52] <onosendi> What I showed you gives the code, the text version of the code, plus a custom message, which I find to be ideal.
[22:51:05] <onosendi> z1haze: because the code already says if it's an error or not.
[22:51:18] <z1haze> what you showed could be extracted from the http status, minus the extra message
[22:51:53] <ljharb> teut79: heroku has been owned by salesforce for over a decade
[22:52:08] <ljharb> silly: what are you trying to do?
[22:52:32] <teut79> oh, I observed it just when they started putting the authenticator
[22:52:35] <z1haze> salesforce has the paradigm -- if you can't beat em, buy em
[22:52:45] <teut79> this company pays a lot
[22:53:02] <teut79> and another one is sprinklr
[22:53:05] <z1haze> salesforce also uses heroku for a LOT of its own stuff
[22:53:08] <teut79> but sprinklr is shit
[22:53:16] <silly> i'm trying to clean up my server response
[22:53:37] <silly> phpsomethingsomething
[22:53:37] <z1haze> any ecommerce site running on commerce cloud (which is salesforce) exports orders through heroku and into salesforce core
[22:53:51] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-079.um10.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[22:54:35] <z1haze> onosendi, im referring to most of the information if your json is superfluous https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
[22:55:53] *** Quits: flughafen (~flughafen@p5de8ee72.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[22:56:51] *** Joins: ThePhilgrim (~thephilgr@151.40.115.120)
[22:57:59] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Quit: Client closed)
[23:01:52] *** Quits: dingdreher (~dingdrehe@2a02:aa08:401e:fff2:35f4:c0a:127c:c6a0) (Quit: dingdreher)
[23:02:09] *** Joins: dan01 (~dan01@2a02:2f0f:311c:1500:f8cf:4494:bcdb:e0bf)
[23:02:54] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Remote host closed the connection)
[23:04:30] <ross> hi all, having a brain fart. how can I in an async function await some change in the document? e.g. I'm waiting for some querySelector to return a non-null value and I want to resume code execution afterwards
[23:06:12] *** Joins: c4017w__ (~c4017@209.52.68.8)
[23:06:12] *** Quits: garrit (~garrit@user/garrit) (Read error: Connection reset by peer)
[23:06:37] *** Joins: garrit (~garrit@p4fe717b1.dip0.t-ipconnect.de)
[23:06:37] *** Quits: garrit (~garrit@p4fe717b1.dip0.t-ipconnect.de) (Changing host)
[23:06:37] *** Joins: garrit (~garrit@user/garrit)
[23:06:54] <ljharb> ross: querySelector is sync
[23:06:58] <ljharb> ross: and JS is single-threaded
[23:07:06] <ljharb> ross: so all you could do is a really terrible "poll with setTimeout" for that
[23:07:22] <ljharb> ross: generally speaking, you want the code making the change to notify you (push) instead of you noticing it (pull)
[23:09:10] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[23:09:37] *** Quits: garrit (~garrit@user/garrit) (Read error: Connection reset by peer)
[23:09:48] *** Joins: k8yun (~k8yun@user/k8yun)
[23:10:03] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[23:10:35] *** Joins: cotko (~cotko@155.pool85-49-78.dynamic.orange.es)
[23:10:56] <stenno> mutationobserver maybe
[23:11:46] *** Joins: garrit (~garrit@p4fe717b1.dip0.t-ipconnect.de)
[23:11:46] *** Quits: garrit (~garrit@p4fe717b1.dip0.t-ipconnect.de) (Changing host)
[23:11:46] *** Joins: garrit (~garrit@user/garrit)
[23:12:14] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 250 seconds)
[23:12:37] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[23:12:58] <ljharb> it'd work, but is gross
[23:13:06] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[23:14:31] *** Quits: EgonX (~EgonX@c-73-115-70-244.hsd1.tx.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[23:15:11] <KevinX> If you know the parent the mutationobserver would be lightweight
[23:15:25] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[23:16:39] <KevinX> Do you control what makes the element not null? Have it fire a custom event you listen for
[23:18:30] <stenno> i wondered if it was a greasemonkey script
[23:19:49] <KevinX> hmm yeah then maybe a polling thing every second would be best
[23:20:07] <stenno> just a guess, we need more info
[23:20:32] *** Joins: tex (~super@user/dix)
[23:22:14] *** Joins: ferdna (~ferdna@user/ferdna)
[23:22:35] *** Quits: FreEm1nD (~FreEm1nD@mail.guarapari.store) (Quit: Leaving)
[23:22:55] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[23:23:26] *** Quits: hojasuelta (~hojasuelt@2806:102e:18:abc0:5817:70d5:8365:91ed) (Remote host closed the connection)
[23:25:45] *** Joins: ejjfunky (~ejjfunky2@125.164.21.143)
[23:26:55] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-079.um10.pools.vodafone-ip.de)
[23:27:49] *** Joins: Fubbe (~Fubbe@151.40.115.120)
[23:28:21] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.4)
[23:28:38] <ross> haha yeah, it's a greasemonkey script
[23:28:54] *** Quits: Fubbe (~Fubbe@151.40.115.120) (Client Quit)
[23:29:48] *** Quits: tccki (~tccki@box.webslate.co.nz) (Quit: tccki)
[23:30:06] *** Joins: tccki (~tccki@box.webslate.co.nz)
[23:31:49] *** Joins: chromagna (~chromagna@174.27.145.218)
[23:32:59] *** Joins: hojasuelta (~hojasuelt@2806:102e:18:abc0:5817:70d5:8365:91ed)
[23:33:18] *** Quits: jalil (~jalil@2a01:e0a:277:4100:f726:20ac:8c7a:b279) (Quit: jalil)
[23:33:42] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[23:33:55] <stenno> mutationobserver then imo
[23:34:27] <z1haze> i can do instanceof check on a potentially undefined prop without issue, right? is that frowned upon?
[23:36:16] *** Joins: flughafen (~flughafen@p57969651.dip0.t-ipconnect.de)
[23:36:16] <systemfault> ljharb: So, we're getting the awful Deno-like imports? https://github.com/nodejs/node/pull/36328
[23:36:52] <ljharb> systemfault: sadly yes. altho atm it's behind a flag, and my hope is that it will be disabled by default unless "policies" enable it.
[23:37:04] <systemfault> Fun... </s>
[23:37:22] *** Quits: hojasuelta (~hojasuelt@2806:102e:18:abc0:5817:70d5:8365:91ed) (Ping timeout: 250 seconds)
[23:38:57] *** Quits: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) (Quit: Client closed)
[23:39:38] <stenno> can't remember when i last used instanceof
[23:39:49] <stenno> instanceOf*
[23:40:11] <stenno> instanceof**
[23:40:15] <systemfault> You need to use more classes!
[23:40:21] <stenno> operators are _never_ camelCase
[23:40:36] <stenno> systemfault: lol i guess
[23:41:16] <systemfault> The last time I used it, it was in a catch handler because I wanted to handle a specific error differently.
[23:41:47] *** Joins: quartz (~user_name@user/quartz)
[23:43:14] <stenno> right
[23:44:10] <z1haze> stenno, fair -- but in this usecase how would you go about it? I have an object that may have a property on it, and that property if exists will be an array, and that array _might_ have a length > 0.. and i only want to operate if that is the case
[23:44:23] <z1haze> instanceof seems fine to use to me?
[23:44:30] <stenno> foo.bar?.length
[23:44:34] <z1haze> i tried that
[23:44:37] <z1haze> :)
[23:44:41] <stenno> ...and?
[23:44:48] <stenno> what do you mean you 'tried it'
[23:45:07] <z1haze> well length would just be undefined
[23:46:08] <systemfault> I'm very confused now..
[23:46:27] <z1haze> https://jsfiddle.net/z1haze/78jya49k/1/
[23:47:07] <ljharb> instanceof is almost always the wrong choice
[23:47:20] <systemfault> z1haze: What would you expect it to be if not undefined?
[23:47:24] *** Joins: alystair (~alystair@user/alystair)
[23:47:24] <stenno> z1haze: you can use ?? if you want to be explicit
[23:47:33] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[23:47:57] *** Quits: Guest8414 (riotz@is.only.here.for-some.fun) (Changing host)
[23:47:57] *** Joins: Guest8414 (riotz@user/riotz)
[23:48:01] <stenno> n> undefined == 0
[23:48:02] <jellobot> (okay) false
[23:48:06] <z1haze> i guess that if (obj?.prop?.length) { ... would work but only because javascript interprets undefined as falsey
[23:48:08] <stenno> (foo.bar?.length ?? 0) > 0
[23:48:10] *** Joins: EgonX (~EgonX@c-73-115-70-244.hsd1.tx.comcast.net)
[23:48:31] <z1haze> it doesnt seem very proper
[23:48:41] *** Guest8414 is now known as riotz
[23:49:11] <systemfault> z1haze: console.log(obj?.prop?.length ?? 0);
[23:49:24] <stenno> first ?. is not needed systemfault
[23:49:29] <systemfault> I mean, I still don't understand what you're expecting here.
[23:49:32] <z1haze> yeah it is
[23:49:46] <z1haze> prop is potentially not there
[23:49:48] <systemfault> stenno: I just copy pasted what was on the paste and add ?? 0 :P
[23:49:49] <stenno> if i know that obj is an object
[23:49:54] <stenno> fair
[23:49:56] <stenno> it doesn't matter
[23:50:48] <stenno> n> ({})?.prop?.length ?? 0
[23:50:49] <jellobot> (okay) 0
[23:51:09] <stenno> n> ({prop: [23,42]})?.prop?.length ?? 0
[23:51:10] <jellobot> (okay) 2
[23:52:33] <stenno> z1haze: ^
[23:52:55] <z1haze> yeah i see using the ?? operation. thanks
[23:56:56] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[23:57:51] *** Quits: noarb (~noarb@user/noarb) (Read error: Connection reset by peer)
[23:58:16] *** Joins: noarb (~noarb@user/noarb)
[23:58:35] *** Quits: duds- (~duds-@user/duds) (Read error: Connection reset by peer)
