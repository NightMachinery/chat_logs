[00:01:56] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-281d-023e-06d1-52a1.res6.spectrum.com)
[00:02:03] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[00:28:47] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[00:30:11] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[00:32:01] *** Joins: fikran (~fikran@user/fikran)
[00:33:17] *** Quits: burningserenity (~burningse@2603:9001:f01:ad99::1008) (Quit: ZNC 1.8.2 - https://znc.in)
[00:34:29] *** Joins: Tv_ (uid62079@user/tv/x-3144562)
[00:43:55] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[00:46:10] *** Quits: haise01 (~haise01@user/haise01) (Quit: ZNC 1.8.2 - https://znc.in)
[00:53:31] *** Quits: attila_lendvai (~alendvai@catv-89-132-208-37.catv.broadband.hu) (Ping timeout: 260 seconds)
[00:55:23] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:56:58] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[01:02:13] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:f05d:bd9c:2454:7324)
[01:05:39] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:35bc:e6a1:70b3:a27a) (Ping timeout: 260 seconds)
[01:07:39] *** Quits: normen (~normen@p200300d71721dd00ed669167fc0b5f14.dip0.t-ipconnect.de) (Quit: WeeChat 3.3)
[01:10:36] *** Quits: TFKyle (~kyle@64.201.205.70) (Remote host closed the connection)
[01:16:36] <seebs> hhes: errgroup.WithContext() is also fairly close on this!
[01:25:08] *** Joins: icebattle (~wayne@S010600fc8ddfd2b3.vc.shawcable.net)
[01:29:06] *** Joins: rcernin (~rcernin@124.190.139.235)
[01:29:10] *** Joins: freakazoid12345 (~matt@2603-9000-cf0f-80e3-f05d-bd9c-2454-7324.inf6.spectrum.com)
[01:30:39] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[01:31:15] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[01:31:27] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:f05d:bd9c:2454:7324) (Ping timeout: 258 seconds)
[01:32:04] *** Quits: dlss^ (~dlss@wsip-68-227-92-38.mc.at.cox.net) (Remote host closed the connection)
[01:36:53] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-281d-023e-06d1-52a1.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[01:38:47] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 260 seconds)
[01:40:36] *** Joins: tyson2` (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[01:41:10] *** Quits: tyson2` (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[01:43:41] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Ping timeout: 244 seconds)
[01:46:58] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[01:47:08] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[01:47:39] *** Quits: be3uykpy (~be3uykpy@2a00:a040:19a:b060:e923:e688:e0c7:ff4a) (Ping timeout: 260 seconds)
[01:50:18] *** Quits: volt (~volt@172.58.154.73) (Ping timeout: 260 seconds)
[01:57:49] *** Quits: hackinghorn (~hackingho@user/hackinghorn) (Quit: Leaving)
[02:01:58] *** Joins: freakazoid343 (~matt@35.136.210.185)
[02:04:55] *** Quits: freakazoid12345 (~matt@2603-9000-cf0f-80e3-f05d-bd9c-2454-7324.inf6.spectrum.com) (Ping timeout: 260 seconds)
[02:06:43] *** Joins: volt (~volt@172.58.154.73)
[02:09:45] *** Joins: burningserenity (~burningse@142-196-178-216.res.spectrum.com)
[02:11:44] <dostoyevsky2> Can anyone recommend a letsencrypt client written in go?
[02:12:43] <lemmi> https://go-acme.github.io/lego
[02:13:16] <dostoyevsky2> yeah, that's the one I am looking at atm :)
[02:15:23] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[02:20:06] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:f05d:bd9c:2454:7324)
[02:21:04] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[02:22:56] *** Joins: arinov (~arinov@213.194.126.155)
[02:23:07] *** Quits: freakazoid343 (~matt@35.136.210.185) (Ping timeout: 260 seconds)
[02:31:41] <b0nn> https://pressly.github.io/goose/blog/out-of-order-migrations/
[02:32:09] <b0nn> Goose is now supporting the ability to apply older migrations
[02:32:29] <b0nn> Previously I would have to go into the DB and ... massage things...
[02:33:25] *** Quits: jpw_ (~jpw@user/jpw) (Remote host closed the connection)
[02:33:48] *** Quits: yonson (~yonson@2600:8801:d900:7bb:1e69:7aff:fea2:4e85) (Remote host closed the connection)
[02:33:55] *** Joins: yonson (~yonson@2600:8801:d900:7bb:1e69:7aff:fea2:4e85)
[02:33:57] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e8ee-f9fa-2a3e-92d6.res6.spectrum.com)
[02:34:41] *** Joins: rairden (~rairden@2603:9000:de04:9613::1a20)
[02:34:52] *** Joins: gspbirel56 (~gspbirel5@c-73-214-199-7.hsd1.pa.comcast.net)
[02:36:39] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 260 seconds)
[02:37:14] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[02:38:45] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:f937:ed54:b96b:ec0b)
[02:39:27] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[02:39:46] *** Quits: volt (~volt@172.58.154.73) (Ping timeout: 260 seconds)
[02:39:55] *** Quits: bkircher (~bkircher@2001:a61:24b5:cd01:883a:c8e1:e0f0:e39) (Ping timeout: 260 seconds)
[02:41:23] *** Joins: fikran (~fikran@user/fikran)
[02:42:22] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:f05d:bd9c:2454:7324) (Ping timeout: 258 seconds)
[02:44:00] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:f937:ed54:b96b:ec0b)
[02:45:50] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e8ee-f9fa-2a3e-92d6.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[02:46:55] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:f937:ed54:b96b:ec0b) (Ping timeout: 260 seconds)
[02:49:43] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 260 seconds)
[02:52:44] *** Joins: ahappydeath (~ahappydea@user/ahappydeath)
[03:03:37] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 265 seconds)
[03:15:36] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[03:21:00] *** Quits: fub (uid190747@id-190747.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[03:21:39] *** Joins: volt (~volt@67.197.6.215)
[03:27:23] *** Quits: volt (~volt@67.197.6.215) (Ping timeout: 264 seconds)
[03:35:41] *** Joins: adlternative (~adl@2409:8970:1090:f794:29ed:d2f:4725:6c91)
[03:39:07] *** Joins: brainfreeze (~brainfree@2a03:1b20:4:f011::20d)
[03:44:19] *** Quits: adlternative (~adl@2409:8970:1090:f794:29ed:d2f:4725:6c91) (Quit: Konversation terminated!)
[03:46:02] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[03:46:57] *** Joins: bpalmer (~user@user/bpalmer)
[03:47:43] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[03:48:43] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e8ee-f9fa-2a3e-92d6.res6.spectrum.com)
[03:58:29] *** Joins: volt (~volt@67.197.6.215)
[04:03:04] *** Quits: volt (~volt@67.197.6.215) (Ping timeout: 265 seconds)
[04:04:16] *** Joins: volt (~volt@67.197.6.215)
[04:04:35] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 264 seconds)
[04:09:03] *** Quits: volt (~volt@67.197.6.215) (Ping timeout: 260 seconds)
[04:11:46] *** Quits: adip (~adip@aedy49.neoplus.adsl.tpnet.pl) (Ping timeout: 265 seconds)
[04:16:54] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[04:24:27] *** Quits: ahappydeath (~ahappydea@user/ahappydeath) (Ping timeout: 260 seconds)
[04:25:23] *** Quits: andlabs (~andlabs@2a00:79e1:abc:1a12:e575:d80c:eb45:d0d6) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:40:05] *** Joins: ahappydeath (~ahappydea@user/ahappydeath)
[04:40:27] *** Joins: leitz_ (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[04:41:09] *** Quits: leitz_ (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Client Quit)
[04:42:50] *** Joins: volt (~volt@67.197.6.215)
[04:42:50] <leitz> Quick question on modules before I zonk out. If I have a small collection of tools; one repo but several individual tools each with their own main.go, do I put the go.mod in the parent repository or in each tool's dir?
[04:46:47] <fizzie> You *can* do either, but it's probably more common to just have a one-to-one correspondence with repositories and modules, as long as you don't really need the capability of versioning each tool independently. With multiple modules you need to do things like subdirectory-prefixed version tags separately for each of the modules.
[04:46:51] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 260 seconds)
[04:47:29] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e8ee-f9fa-2a3e-92d6.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[04:47:47] *** Quits: volt (~volt@67.197.6.215) (Ping timeout: 264 seconds)
[04:48:43] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[04:50:44] *** Joins: fikran (~fikran@user/fikran)
[04:50:49] <leitz> fizzie, thanks.
[04:50:59] *** Joins: andlabs (~andlabs@2604:ca00:179:bade:304f:839d:2fb4:8176)
[04:53:01] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[04:53:30] <fizzie> There's a little bit of discussion at the "Module directories within a repository" section at https://golang.org/ref/mod#vcs-dir too, though more on what you can do rather than on what you should do.
[04:54:43] <leitz> I think it would actually work better to separate out stuff. I have some standard library things I do, and need to figure out how to share those. Otherwise the small things are small and not tightly related.
[04:58:16] <fizzie> I guess the obvious question is, if they're unrelated, what are they doing in the same repository then? But whatever works best, of course.
[04:59:47] *** Quits: ahappydeath (~ahappydea@user/ahappydeath) (Ping timeout: 264 seconds)
[05:01:42] *** Joins: ahappydeath (~ahappydea@user/ahappydeath)
[05:02:36] *** Quits: andlabs (~andlabs@2604:ca00:179:bade:304f:839d:2fb4:8176) (Ping timeout: 245 seconds)
[05:03:22] *** Joins: andlabs (~andlabs@64.9.251.134)
[05:04:44] <b0nn> fizzie: does the relationship "Cos I use them all" count :)
[05:07:38] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e8ee-f9fa-2a3e-92d6.res6.spectrum.com)
[05:10:09] <leitz> :P
[05:10:31] <leitz> I'll start breaking them up tomorrow. I need to get practice with modules anyway.
[05:10:51] *** Quits: kiril (~kiril@85.91.153.163) (Quit: ZNC - https://znc.in)
[05:11:05] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[05:11:15] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[05:12:32] *** Joins: kiril (~kiril@85.91.153.163)
[05:13:00] *** Joins: frost (~frost@user/frost)
[05:23:29] *** Quits: andlabs (~andlabs@64.9.251.134) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:33:13] *** Parts: hrob (~hrob@31-209-232-158.dsl.dynamic.simnet.is) ()
[05:34:28] *** Joins: freakazoid343 (~matt@2603-9000-cf0f-80e3-016e-5342-d339-076e.inf6.spectrum.com)
[05:37:43] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:f937:ed54:b96b:ec0b) (Ping timeout: 260 seconds)
[05:44:50] <b0nn> Personally I'm not that up with modules, they went through a bit of a rough patch, and I was waiting for things to settle down to a point where I wouldn't regret learning more about them
[05:45:54] <b0nn> But, having said that, I've since come to understand that dependency management is a horrible horrible nightmare of nasty things (npm, gradle, maven, and so on)
[06:00:42] *** Quits: jespada (~jespada@181.28.253.200) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:03:01] *** Quits: ahappydeath (~ahappydea@user/ahappydeath) (Ping timeout: 245 seconds)
[06:06:23] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 264 seconds)
[06:09:55] *** Joins: prologic (~prologic@mail.mills.io)
[06:10:11] <prologic> I need to wrap multiple io.ReadSeeker's into a single io.ReadSeeker
[06:10:21] <prologic> Anyone know of a good package that does this for me already?
[06:11:53] <prologic> Ahh
[06:11:54] <prologic> https://pkg.go.dev/github.com/SKF/moby/pkg/ioutils#MultiReadSeeker
[06:11:57] <prologic> Brilliant :)
[06:12:45] <prologic> Although is there a better one that doesn't come from the moby/docker project :D
[06:13:43] *** Joins: andlabs (~andlabs@70.107.171.168)
[06:15:16] <prologic> github.com/badgerodon/ioutil might work 👌
[06:22:22] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[06:26:11] *** Quits: hgl (hgl@user/hgl) (Ping timeout: 264 seconds)
[06:28:04] *** Quits: erhandsome (~erhandsom@user/erhandsome) (Ping timeout: 265 seconds)
[06:28:09] *** Quits: dfch (~dfch@user/dfch) (Ping timeout: 258 seconds)
[06:31:04] <ash_worksi> I'll try again; is there something that allows me to use cli commands on the same app used for a web interface?
[06:31:17] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[06:31:49] <seebs> supossibly? i'm not sure what you want to do.
[06:31:55] <seebs> ... that's a weird typo
[06:32:01] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[06:32:29] <seebs> if you want to give commands to a program that also has a web interface of some sort: the usual idiom would be to have an API that you're using, from CLI or web, and also a web site that uses that API, and a CLI tool that uses that API, or something similar.
[06:33:44] <ash_worksi> seebs: well, I know someone on here recommended something they (I think) wrote that allows you to provide a command line command to single entry point; say `go run myapp user:create ash_m secret` or something
[06:34:04] <ash_worksi> (forgive my illiteracy, I am very, very new to go)
[06:34:07] *** Parts: prologic (~prologic@mail.mills.io) (Textual IRC Client: www.textualapp.com)
[06:34:25] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[06:35:46] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e8ee-f9fa-2a3e-92d6.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[06:39:44] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[06:41:02] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[06:47:08] *** Quits: lazyreader (~lazyreade@user/lazyreader) (Quit: The Lounge - https://thelounge.chat)
[06:47:36] *** Joins: lazyreader (~lazyreade@user/lazyreader)
[06:47:50] *** Quits: DM430784214 (~DM4307@c-73-15-244-129.hsd1.ca.comcast.net) (Quit: The Lounge - https://thelounge.chat)
[06:48:09] *** Joins: DM430784214 (~DM4307@c-73-15-244-129.hsd1.ca.comcast.net)
[06:52:22] *** Joins: hgl (hgl@67.230.181.248)
[06:52:23] *** Quits: hgl (hgl@67.230.181.248) (Changing host)
[06:52:23] *** Joins: hgl (hgl@user/hgl)
[06:52:43] *** Joins: erhandsome (~erhandsom@user/erhandsome)
[06:53:28] *** Joins: dfch (~dfch@user/dfch)
[06:58:18] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[06:58:30] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[06:59:17] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[07:00:05] *** Joins: fikran (~fikran@user/fikran)
[07:03:52] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[07:04:59] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 260 seconds)
[07:05:28] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[07:11:09] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[07:12:00] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[07:17:26] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[07:18:33] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[07:23:37] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:60f3:1fd2:dd3e:6979)
[07:24:35] *** Quits: rcernin (~rcernin@124.190.139.235) (Ping timeout: 260 seconds)
[07:25:03] *** Quits: freakazoid343 (~matt@2603-9000-cf0f-80e3-016e-5342-d339-076e.inf6.spectrum.com) (Ping timeout: 260 seconds)
[07:26:14] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[07:26:58] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[07:29:52] *** Joins: rcernin (~rcernin@124.190.139.235)
[07:32:34] *** Joins: bodhi (~bodhi@c-73-93-87-220.hsd1.ca.comcast.net)
[07:32:40] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[07:33:27] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Ping timeout: 260 seconds)
[07:33:36] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e8ee-f9fa-2a3e-92d6.res6.spectrum.com)
[07:34:19] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e8ee-f9fa-2a3e-92d6.res6.spectrum.com) (Client Quit)
[07:35:09] <bodhi> Is there a good reference to implement rbac on grpc apis?
[07:39:29] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[07:44:09] *** Quits: Tv_ (uid62079@user/tv/x-3144562) (Quit: Connection closed for inactivity)
[07:44:35] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Ping timeout: 260 seconds)
[07:55:42] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 260 seconds)
[08:01:54] *** Quits: rairden (~rairden@2603:9000:de04:9613::1a20) (Remote host closed the connection)
[08:14:38] <b0nn> ash_worksi: In order for the CLI to accept the same commands used for a web interface, then the app has to be written to accept a) input from the cli and b) that input is to match the web commands
[08:15:02] <b0nn> I mean, there's nothing stopping that from happening, just that it has to be done explicitly
[08:16:26] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[08:26:49] *** Joins: volt (~volt@67.197.6.215)
[08:26:57] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[08:30:08] *** Quits: c10l (~c10l@user/c10l) (Quit: The Lounge - https://thelounge.chat)
[08:30:23] *** Joins: c10l (~c10l@user/c10l)
[08:32:43] *** Quits: volt (~volt@67.197.6.215) (Ping timeout: 260 seconds)
[08:35:09] <bodhi> hey b0nn :-)
[08:44:11] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[08:44:50] *** Joins: mickey8 (~user@user/mickey)
[08:51:18] *** Joins: sysx1000 (~s@user/sysx1000)
[08:53:33] <sysx1000> Hello, when using text/template I always have output like this - image/svg&#43;xml. Template code is:  "{{$entry.MIME}}". How can I get rid of HTML escaping in my output?
[08:54:23] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[08:55:47] <sysx1000> it doesn't make sense to me, why + sign is always escaped? to be honest, it's a text template, so no escaping must be done whatsoever
[08:56:34] <bookworm> are you sure your import is correct?
[08:56:52] <bookworm> text/template doesn't url escape, html/template does
[08:57:35] <sysx1000> well, yes, pardon me. eyesore. it's html/template, q is closed
[09:00:27] *** Joins: dsrt^ (~dsrt@wsip-68-227-92-38.mc.at.cox.net)
[09:06:47] <b0nn> hey bodhi :-)
[09:07:43] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[09:09:37] *** Joins: fikran (~fikran@user/fikran)
[09:15:20] *** Joins: zalt (~zalt@user/zalt)
[09:23:26] *** Quits: zalt (~zalt@user/zalt) (Ping timeout: 245 seconds)
[09:25:49] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[09:35:57] *** Joins: mei (~mei@user/mei)
[09:40:34] *** Joins: jpw (~jpw@user/jpw)
[09:41:46] *** Quits: Wouter0100 (~Wouter010@entry.nbg.netvos.nl) (Remote host closed the connection)
[09:41:57] *** Joins: Wouter0100 (~Wouter010@entry.nbg.netvos.nl)
[09:44:54] *** Joins: bkircher (~bkircher@2001:a61:24b5:cd01:711f:b4dc:f9:b325)
[09:46:17] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[09:47:00] *** Quits: csmarchbanks (~csmarchba@prometheus/team/csmarchbanks) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[09:56:11] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 264 seconds)
[09:57:16] *** Joins: shka (~herr@83.175.151.96)
[09:59:33] *** Quits: brainfreeze (~brainfree@2a03:1b20:4:f011::20d) (Quit: Leaving)
[10:00:09] *** Joins: jjonah (~jjonah@p200300d5d7058900dea632fffeb3342f.dip0.t-ipconnect.de)
[10:03:22] *** Joins: bluehoney (bluehoney@gateway/vpn/protonvpn/bluehoney)
[10:05:01] *** Quits: jjonah (~jjonah@p200300d5d7058900dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[10:09:44] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[10:10:47] *** Joins: zalt (~zalt@user/zalt)
[10:11:37] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[10:12:22] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[10:12:41] *** Joins: mickey8 (~user@user/mickey)
[10:19:50] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 244 seconds)
[10:23:34] *** Joins: pylong_ (~bluehoney@cpe-75-81-204-188.mi.res.rr.com)
[10:24:25] *** Quits: zalt (~zalt@user/zalt) (Ping timeout: 265 seconds)
[10:26:26] *** Quits: bluehoney (bluehoney@gateway/vpn/protonvpn/bluehoney) (Ping timeout: 260 seconds)
[10:29:20] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[10:32:42] *** Quits: girafe (~girafe@176-147-142-235.abo.bbox.fr) (Read error: Connection reset by peer)
[10:32:43] *** Joins: zalt (~zalt@user/zalt)
[10:34:14] *** Joins: jla (~jordi@64.225.79.195)
[10:34:41] *** Joins: jcajka (~jcajka@89-24-144-111.customers.tmcz.cz)
[10:35:17] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[10:36:03] *** Quits: pylong_ (~bluehoney@cpe-75-81-204-188.mi.res.rr.com) (Quit: Leaving)
[10:38:00] *** Joins: saschagrunert (~saschagru@46.128.124.46)
[10:39:27] *** Quits: jla (~jordi@64.225.79.195) (Quit: Leaving.)
[10:54:11] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[10:54:43] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[11:00:02] *** Quits: zalt (~zalt@user/zalt) (Ping timeout: 260 seconds)
[11:00:46] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:01:57] *** Joins: zalt (~zalt@user/zalt)
[11:02:01] *** Joins: mrig (~AdiIRC@user/mrig)
[11:08:13] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[11:15:07] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:16:07] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[11:16:18] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[11:16:46] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[11:17:48] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[11:18:00] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[11:18:58] *** Joins: fikran (~fikran@user/fikran)
[11:19:03] *** Joins: adip (~adip@aedy49.neoplus.adsl.tpnet.pl)
[11:33:05] *** Quits: mrig (~AdiIRC@user/mrig) (Read error: Connection reset by peer)
[11:33:18] *** Joins: mrig (~AdiIRC@user/mrig)
[11:33:22] *** Joins: fub (uid190747@id-190747.ilkley.irccloud.com)
[11:38:14] *** Quits: sysx1000 (~s@user/sysx1000) (Quit: f)
[11:41:55] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[11:42:22] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[11:48:51] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[11:50:47] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:2dfd:11aa:39d8:5a6b)
[11:51:00] *** Quits: mickey8 (~user@user/mickey) (Ping timeout: 276 seconds)
[11:51:20] *** Quits: rcernin (~rcernin@124.190.139.235) (Ping timeout: 260 seconds)
[11:54:22] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:60f3:1fd2:dd3e:6979) (Ping timeout: 258 seconds)
[11:54:46] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:55:24] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[11:55:43] *** Quits: zalt (~zalt@user/zalt) (Ping timeout: 260 seconds)
[11:57:05] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[11:57:38] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[11:59:25] *** Parts: ash_worksi (~ash_m@user/ash-m/x-3292451) ()
[11:59:28] *** Joins: volt (~volt@67.197.6.215)
[12:01:30] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:bd72:c244:ea8f:27b7)
[12:04:07] *** Quits: volt (~volt@67.197.6.215) (Ping timeout: 260 seconds)
[12:07:16] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[12:07:48] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[12:09:07] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[12:14:03] *** Joins: rcernin_ (~rcernin@124.190.139.235)
[12:17:18] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:488f:55fc:e2f3:3d2f)
[12:17:56] *** Joins: arinov (~arinov@213.194.126.155)
[12:18:23] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:bd72:c244:ea8f:27b7) (Ping timeout: 264 seconds)
[12:18:31] *** Quits: OMGOMG (~bobrobert@poppy.ifi.uio.no) (Ping timeout: 258 seconds)
[12:19:34] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[12:19:47] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[12:20:03] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:2dfd:11aa:39d8:5a6b) (Ping timeout: 258 seconds)
[12:20:48] *** Joins: mickey8 (~user@user/mickey)
[12:30:09] *** Quits: dec (~dec@2001:470:69fc:105::3204) (Quit: You have been kicked for being idle)
[12:31:39] *** Quits: rcernin_ (~rcernin@124.190.139.235) (Ping timeout: 260 seconds)
[12:43:47] *** Joins: attila_lendvai (~alendvai@catv-89-132-208-37.catv.broadband.hu)
[12:43:48] *** Quits: phylaz (~phylaz@219.92-221-176.customer.lyse.net) (Quit: The Lounge - https://thelounge.chat)
[12:43:58] *** Joins: rcernin (~rcernin@124.190.139.235)
[12:44:31] *** Joins: phylaz (~phylaz@219.92-221-176.customer.lyse.net)
[12:45:58] *** Quits: phylaz (~phylaz@219.92-221-176.customer.lyse.net) (Client Quit)
[12:47:38] *** Quits: ethoxy (~caretaker@cx21.havox.ru) (Ping timeout: 246 seconds)
[12:47:59] *** Joins: phylaz (~phylaz@219.92-221-176.customer.lyse.net)
[12:51:40] *** Joins: jla (~jordi@212.161.114.203)
[12:53:17] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:68e9:e58f:9aa3:ac65)
[12:55:42] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:488f:55fc:e2f3:3d2f) (Ping timeout: 258 seconds)
[13:01:32] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[13:05:22] *** Joins: mickey8 (~user@user/mickey)
[13:10:43] *** Joins: martinkennelly_ (~martinken@84.203.20.92)
[13:26:34] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[13:28:27] *** Joins: fikran (~fikran@user/fikran)
[13:32:09] *** Joins: evocatus (~evocatus@84.51.113.13)
[13:35:14] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[13:42:07] *** Quits: dsrt^ (~dsrt@wsip-68-227-92-38.mc.at.cox.net) (Ping timeout: 260 seconds)
[13:44:02] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Read error: Connection reset by peer)
[13:49:26] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:52:20] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[13:52:48] *** Joins: mickey8 (~user@user/mickey)
[14:00:13] *** Joins: volt (~volt@67.197.6.215)
[14:02:19] *** Quits: thing (~thing@user/thing) (Remote host closed the connection)
[14:02:44] *** Joins: thing (~thing@user/thing)
[14:02:52] *** Joins: normen (~normen@p200300d71721dd00c0b2c8de4d9e4c5b.dip0.t-ipconnect.de)
[14:09:36] *** Joins: jespada (~jespada@181.28.253.200)
[14:12:17] *** Joins: dsrt^ (~dsrt@wsip-68-227-92-38.mc.at.cox.net)
[14:13:11] *** Quits: fub (uid190747@id-190747.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[14:15:13] *** Parts: jla (~jordi@212.161.114.203) ()
[14:16:17] *** Quits: c10l (~c10l@user/c10l) (Quit: The Lounge - https://thelounge.chat)
[14:19:04] *** Quits: teasea (~teasea@user/teasea) (Quit: teasea)
[14:19:23] *** Joins: teasea1 (~teasea@user/teasea)
[14:19:52] *** teasea1 is now known as teasea
[14:21:15] *** Joins: c10l (~c10l@user/c10l)
[14:21:38] *** Quits: c10l (~c10l@user/c10l) (Client Quit)
[14:21:51] *** Joins: c10l (~c10l@user/c10l)
[14:23:28] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[14:33:39] *** Joins: frost (~frost@user/frost)
[14:34:07] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[14:40:54] *** Joins: ekathva (~ekathva@88-114-118-220.elisa-laajakaista.fi)
[14:45:06] *** Joins: gggpkm (~gggpkm@li2015-124.members.linode.com)
[14:45:06] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:68e9:e58f:9aa3:ac65)
[14:46:03] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:68e9:e58f:9aa3:ac65) (Ping timeout: 260 seconds)
[14:47:55] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:51:08] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[14:54:07] *** Quits: rcernin (~rcernin@124.190.139.235) (Ping timeout: 265 seconds)
[14:58:13] *** Quits: evocatus (~evocatus@84.51.113.13) (Read error: Connection reset by peer)
[15:03:47] *** Quits: volt (~volt@67.197.6.215) (Ping timeout: 265 seconds)
[15:09:30] *** Joins: casionaut (~casionaut@user/casionaut)
[15:10:56] <leitz> A module's version is in its git tag, not in the files themselves?
[15:12:24] <ikke> correct
[15:12:43] <ikke> Otherwise there could be multiple commits that have the same version
[15:13:01] <ikke> a tag uniquely identifies a single commit
[15:18:56] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[15:19:22] <leitz> It seems to break the "push early, push often" value of git.
[15:20:00] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[15:20:14] <fizzie> Why? You don't have to tag *every* commit. And there are ways to request the most recent commit if someone really needs to.
[15:23:15] *** Quits: arinov (~arinov@213.194.126.155) (Quit: WeeChat 3.1)
[15:23:22] <leitz> It may well be that it's my lack of git-fu. If I tag v1.2.3, and commit after that, when someone pulls by version @1.2.3 they won't get my updates?
[15:24:26] *** Quits: ekathva (~ekathva@88-114-118-220.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[15:24:52] *** Joins: ekathva (~ekathva@88-114-118-220.elisa-laajakaista.fi)
[15:25:34] <fizzie> Well, yes, that's true. But if there's a *meaningful* change that they might want to get, surely you'd tag it with a new minor version? It's not like you'll run out of integers.
[15:26:12] <fizzie> And if someone really wants to get the most recent source code, they can do `go get` by branch (e.g., `go get example.com/foo@master`) instead.
[15:26:23] <sztanpet> its your expectations on how version updates should work that is off leitz, nowhere does it work like that
[15:27:20] <fizzie> It'd be kind of unworkable if the contents of what `v1.2.3` means could change after the fact.
[15:28:27] <fizzie> (The way checking out a module by branch works is, `go get example.com/foo@master` will write a pseudoversion in go.mod that uniquely identifies a commit, something like `require example.com/foo v1.2.3-0.YYYY
[15:28:36] *** Joins: zalt (~zalt@user/zalt)
[15:28:51] <fizzie> ...that got cut off, but it's boring anyway. The pseudoversion just has a timestamp and a commit hash.
[15:32:34] <leitz> My current work flow is to do a little bit, and push up the change so that when my old computer croaks off, I haven't lost everything.
[15:33:14] <leitz> Currently watching Kat Zein's video on module structure, since I have to fix a lot of old issues.
[15:33:49] <leitz> Thus lots of commits, but no real solid tag-worthy code for a bit.
[15:33:58] *** Joins: guniberas (~guniberas@42.191.188.121)
[15:35:47] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[15:37:48] *** Joins: fikran (~fikran@user/fikran)
[15:40:57] <fizzie> Yeah, I don't think there should be anything preventing you from doing *that*. If the changes are not "tag-worthy", a random user of the module shouldn't need to get them, right? So you can commit as much as you like, and then decide to tag whenever the codebase is in a nice, stable state, ready to be used, passing all tests and so on.
[15:41:05] <fizzie> (And if you feel like it, you can pick a git workflow that keeps a `main` branch relatively clean, uploading your intermediate commits into a separate `develop` branch, and then either update the `main` branch whenever you'd tag a version or even consolidate the commits if you want that branch to have a neater history with more meaningful changes. (Whether that's a good idea is something people
[15:41:07] <fizzie> will keep arguing forever though.))
[15:44:31] *** Quits: dsrt^ (~dsrt@wsip-68-227-92-38.mc.at.cox.net) (Remote host closed the connection)
[15:45:11] *** Parts: rk4 (~r@user/rk4) ()
[15:46:29] *** Joins: volt (~volt@67.197.6.215)
[15:48:01] *** Quits: ekathva (~ekathva@88-114-118-220.elisa-laajakaista.fi) (Ping timeout: 245 seconds)
[15:51:57] *** Joins: arinov (~arinov@213.194.126.155)
[15:53:54] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[15:56:59] *** Quits: zalt (~zalt@user/zalt) (Ping timeout: 260 seconds)
[15:57:37] *** Quits: dalan62367 (~dalan@59-102-54-91.tpgi.com.au) (Quit: dalan62367)
[15:58:03] *** Joins: dalan62367 (~dalan@59-102-54-91.tpgi.com.au)
[15:59:32] *** Joins: pascal_ (~pascal@2a01:cb14:876:d100:3e61:cc01:3a73:c8a2)
[15:59:56] *** pascal_ is now known as Guest6835
[16:01:40] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[16:01:52] *** Joins: ekathva (~ekathva@88-114-118-220.elisa-laajakaista.fi)
[16:04:47] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:8c40:5e2a:640e:6bc)
[16:04:57] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:05:17] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[16:05:46] *** Quits: Guest6835 (~pascal@2a01:cb14:876:d100:3e61:cc01:3a73:c8a2) (Quit: Guest6835)
[16:06:11] *** Joins: pascal_ (~pascal@2a01:cb14:876:d100:3e61:cc01:3a73:c8a2)
[16:06:32] *** pascal_ is now known as Guest4724
[16:06:40] *** Parts: Guest4724 (~pascal@2a01:cb14:876:d100:3e61:cc01:3a73:c8a2) ()
[16:06:46] *** Quits: slowtyper (~slowtyper@user/slowtyper) (Ping timeout: 245 seconds)
[16:07:34] *** Joins: slowtyper (~slowtyper@user/slowtyper)
[16:16:21] *** Joins: alzgh (~alzgh@user/alzgh)
[16:19:15] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:8c40:5e2a:640e:6bc) (Ping timeout: 258 seconds)
[16:20:19] *** Quits: ekathva (~ekathva@88-114-118-220.elisa-laajakaista.fi) (Ping timeout: 260 seconds)
[16:20:43] *** Joins: ekathva (~ekathva@88-114-118-220.elisa-laajakaista.fi)
[16:32:09] *** Quits: bkircher (~bkircher@2001:a61:24b5:cd01:711f:b4dc:f9:b325) (Quit: WeeChat 3.2)
[16:32:41] *** Joins: bkircher (~bkircher@2001:a61:24b5:cd01:711f:b4dc:f9:b325)
[16:35:04] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi)
[16:35:38] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:36:43] *** Quits: bluebird (~bluebird@user/bluebird) (Quit: leaving)
[16:43:30] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi)
[16:44:19] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:6970:de70:8850:922a)
[16:47:50] *** Quits: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de) (Ping timeout: 244 seconds)
[16:47:51] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:68e9:e58f:9aa3:ac65) (Ping timeout: 260 seconds)
[16:49:56] *** Joins: emcconville (~emcconvil@c-98-222-200-8.hsd1.in.comcast.net)
[16:54:46] *** Quits: arinov (~arinov@213.194.126.155) (Quit: WeeChat 3.3)
[16:57:02] *** Joins: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de)
[16:57:51] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[17:03:38] *** Joins: csmarchbanks (~csmarchba@prometheus/team/csmarchbanks)
[17:13:23] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-04de-ef7d-4fbd-a956.res6.spectrum.com)
[17:13:40] *** Quits: thing (~thing@user/thing) (Remote host closed the connection)
[17:14:11] *** Joins: thing (~thing@user/thing)
[17:16:14] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:18:16] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[17:18:28] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[17:19:20] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[17:25:39] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[17:27:58] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:31:01] *** Quits: jespada (~jespada@181.28.253.200) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:41:29] *** Quits: justHaunt (~justache@user/justache) (Read error: Connection reset by peer)
[17:43:01] *** Joins: justHaunt (~justache@user/justache)
[17:43:28] *** Joins: tane (~tane@dslb-002-201-234-197.002.201.pools.vodafone-ip.de)
[17:43:28] *** Quits: tane (~tane@dslb-002-201-234-197.002.201.pools.vodafone-ip.de) (Changing host)
[17:43:28] *** Joins: tane (~tane@user/tane)
[17:45:23] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[17:47:10] *** Joins: fikran (~fikran@user/fikran)
[17:47:15] *** Joins: Tv_ (uid62079@user/tv/x-3144562)
[17:50:51] *** Quits: gggpkm (~gggpkm@li2015-124.members.linode.com) (Remote host closed the connection)
[17:52:17] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[18:01:33] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Remote host closed the connection)
[18:02:10] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[18:08:51] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[18:09:38] *** Joins: jla (~jordi@212.161.114.203)
[18:14:18] *** Quits: yonson (~yonson@2600:8801:d900:7bb:1e69:7aff:fea2:4e85) (Remote host closed the connection)
[18:14:26] *** Joins: yonson (~yonson@2600:8801:d900:7bb:1e69:7aff:fea2:4e85)
[18:15:27] <rawtaz> opinion question, just curious about your thoughts; do you think Rust is passing Go in popularity?
[18:15:37] <rawtaz> it seems its gaining more and more interest, traction etc
[18:21:32] <Awoobis> it doesnt particularly matter which language is more popular. Rust and Go are compared pretty often for languages with very different approaches to things. Rust is *VERY* good at what it does, as is Go. Both have their strengths (speed and correctness for rust, not quite as much speed. ease of development. easy parallelism for go). and their weaknesses (rust syntax is a bear as is the borrow
[18:21:33] <Awoobis> checker for new devs (disclaimer: I am NOT a rust dev, its on my list but its not something Im looking for this second), go's GC and spartan nature)
[18:23:18] <rawtaz> yeah i agree with you. and theres of course the right tool for the job, which depends on your needs and requirements. im not trying to go into which is better or so. but despite all that, im still curious if anyone else is feeling that rust is gaining momentum and traction to such an extent that it feels it might surpass Go in many areas.
[18:23:41] <Awoobis> ¯\_(ツ)_/¯ if it does it does
[18:23:44] <rawtaz> even if they have differences i think theyre often looked at for the same type of job and in relation to each other etc
[18:24:06] <rawtaz> of course. i am not asking that, i am asking about your feelings and what you've noticed, so to speak.
[18:24:10] <rawtaz> im not asking if it *will*
[18:26:07] <rawtaz> for some reason my `brew upgrade` started building rust, and it's taking (relatively speaking) ages :/
[18:26:26] <Awoobis> far more complex language
[18:26:38] <Awoobis> and it trades runtime speed for compiletime
[18:26:45] *** Joins: wikro (~foo@hjkl.se)
[18:26:50] *** Quits: volt (~volt@67.197.6.215) (Ping timeout: 260 seconds)
[18:27:17] *** Joins: volt (~volt@67.197.6.215)
[18:28:35] <wikro> hola! I have a question. Where does the issue lie when I type 'go install github.com/prometheus/prometheus@latest', and it chooses version v1.8.2, when latest is 2.30.3. Is it my version of go, something in the repo, something else?
[18:31:04] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[18:33:01] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:3d83:13ab:890d:249)
[18:33:04] *** Quits: volt (~volt@67.197.6.215) (Ping timeout: 265 seconds)
[18:35:43] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:6970:de70:8850:922a) (Ping timeout: 258 seconds)
[18:39:28] <ikke> wikro: the import path is different
[18:39:44] <ikke> try: `go install github.com/prometheus/prometheus/v2@latest`
[18:40:01] <wikro> oh I see, thank you!
[18:43:59] <wikro> hmm, it still tires to install 1.8.2, and says "...@latest found (v1.8.2), but does not contain package github.com/prometheus/prometheus/v2"
[18:45:30] *** Joins: freakazoid343 (~matt@2603-9000-cf0f-80e3-3d83-13ab-890d-0249.inf6.spectrum.com)
[18:46:23] *** Joins: kayprish (~kayprish@46.240.130.158)
[18:48:15] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:3d83:13ab:890d:249) (Ping timeout: 260 seconds)
[18:48:18] <rawtaz> Awoobis: ah you mean that it compiles slower i take it. i never wrote any Rust, i dont like the syntax at all
[18:48:32] *** Quits: jla (~jordi@212.161.114.203) (Quit: Leaving.)
[18:49:14] *** Quits: saschagrunert (~saschagru@46.128.124.46) (Remote host closed the connection)
[18:50:31] *** Quits: slowtyper (~slowtyper@user/slowtyper) (Ping timeout: 245 seconds)
[18:50:36] *** Joins: slowtype- (~slowtyper@46.12.47.90.dsl.dyn.forthnet.gr)
[18:52:27] *** Joins: volt (~volt@67.197.6.215)
[18:52:54] *** Quits: kayprish (~kayprish@46.240.130.158) (Quit: leaving)
[18:53:05] *** Joins: kayprish (~kayprish@46.240.130.158)
[18:55:27] *** Joins: INeedAHandle (~INeedAHan@39.124.72.106)
[18:57:07] *** Quits: volt (~volt@67.197.6.215) (Ping timeout: 260 seconds)
[18:58:25] *** Joins: vyrus-home (~Username@208-122-122-82.t3com.net)
[18:59:52] *** Quits: casionaut (~casionaut@user/casionaut) (Remote host closed the connection)
[19:00:30] *** Joins: kayprish_ (~kayprish@46.240.130.158)
[19:00:43] *** Quits: kayprish_ (~kayprish@46.240.130.158) (Client Quit)
[19:00:47] *** Quits: kayprish (~kayprish@46.240.130.158) (Quit: leaving)
[19:00:57] *** Joins: kayprish (~kayprish@46.240.130.158)
[19:02:11] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 264 seconds)
[19:11:17] *** Parts: kaleido (~adam@user/kaleido) (The Lounge - https://thelounge.chat)
[19:13:27] <fizzie> Feels to me the main Prometheus Go project isn't really designed to be importe, or installed with `go install` either.
[19:13:46] <ikke> yes, it has no v2 branch or directory
[19:14:05] <siXy> It does have installation instructions. It might be worth following them.
[19:21:09] *** Quits: vyrus-home (~Username@208-122-122-82.t3com.net) (Quit: Going offline, see ya! (www.adiirc.com))
[19:25:26] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[19:25:33] *** Joins: volt (~volt@67.197.6.215)
[19:27:37] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[19:28:03] *** Joins: mickey8 (~user@user/mickey)
[19:32:54] *** Quits: jcajka (~jcajka@89-24-144-111.customers.tmcz.cz) (Quit: Leaving)
[19:33:25] *** Joins: X-Scale` (~ARM@50.77.166.178.rev.vodafone.pt)
[19:34:27] *** Quits: X-Scale (~ARM@31.22.144.14) (Ping timeout: 260 seconds)
[19:35:05] *** X-Scale` is now known as X-Scale
[19:39:07] *** Quits: ekathva (~ekathva@88-114-118-220.elisa-laajakaista.fi) (Ping timeout: 260 seconds)
[19:40:51] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[19:40:55] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[19:41:42] *** Joins: vyrus-home (~Username@208-122-122-82.t3com.net)
[19:42:50] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[19:43:09] *** Joins: mickey8 (~user@user/mickey)
[19:46:37] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:ed43:2e19:9693:a22e)
[19:49:42] *** Quits: freakazoid343 (~matt@2603-9000-cf0f-80e3-3d83-13ab-890d-0249.inf6.spectrum.com) (Ping timeout: 258 seconds)
[19:54:31] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[19:56:31] *** Joins: fikran (~fikran@user/fikran)
[19:56:38] *** Joins: carlavilla (~carlavill@2a0c:5a84:3607:2f00:221:6bff:fe3b:cee4)
[19:57:46] *** Parts: vyrus-home (~Username@208-122-122-82.t3com.net) ()
[19:57:50] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[20:02:28] *** Joins: be3uykpy (~be3uykpy@2a00:a040:19a:b060:80be:24fb:c570:cb65)
[20:05:49] *** Joins: girafe (~girafe@176-147-142-235.abo.bbox.fr)
[20:06:29] *** Joins: dntreou (~yakiza@inet-2a02-6900-8808-e010--26b.oracle-ocna.com)
[20:14:34] *** Quits: slowtype- (~slowtyper@46.12.47.90.dsl.dyn.forthnet.gr) (Ping timeout: 265 seconds)
[20:15:19] *** Joins: slowtyper (~slowtyper@user/slowtyper)
[20:23:58] *** Quits: noarb (~noarb@user/noarb) (Read error: Connection reset by peer)
[20:24:07] *** Joins: noarb- (~noarb@user/noarb)
[20:27:39] *** Quits: guniberas (~guniberas@42.191.188.121) (Ping timeout: 260 seconds)
[20:27:59] *** Quits: khrbt (~znc@user/khrbt) (Ping timeout: 264 seconds)
[20:28:02] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[20:31:58] *** Joins: khrbt (~znc@user/khrbt)
[20:34:18] *** Joins: ofh (~felix@203-213-101-192.static.tpgi.com.au)
[20:35:50] *** Quits: yelnah (~felix@124.168.233.94) (Ping timeout: 265 seconds)
[20:41:55] *** Joins: ekathva (~ekathva@88-114-118-220.elisa-laajakaista.fi)
[20:45:41] *** Joins: tyson2 (~user@cpe18b169b14ff9-cmf0f2490de5d0.sdns.net.rogers.com)
[20:56:10] *** Quits: dntreou (~yakiza@inet-2a02-6900-8808-e010--26b.oracle-ocna.com) (Ping timeout: 260 seconds)
[20:56:52] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[20:57:25] *** Joins: mickey8 (~user@user/mickey)
[21:00:43] *** Joins: slowtype- (~slowtyper@79.103.51.245.dsl.dyn.forthnet.gr)
[21:01:57] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[21:02:00] *** Quits: slowtyper (~slowtyper@user/slowtyper) (Ping timeout: 260 seconds)
[21:05:08] *** Joins: neurocyte0132889 (~neurocyte@185.117.68.82)
[21:05:08] *** Quits: neurocyte0132889 (~neurocyte@185.117.68.82) (Changing host)
[21:05:08] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[21:05:18] *** Quits: slowtype- (~slowtyper@79.103.51.245.dsl.dyn.forthnet.gr) (Ping timeout: 260 seconds)
[21:06:17] *** Joins: slowtyper (~slowtyper@user/slowtyper)
[21:09:29] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[21:09:42] *** Joins: mickey8 (~user@user/mickey)
[21:12:46] *** Quits: xlei (znc@pool-68-129-84-118.nycmny.fios.verizon.net) (Ping timeout: 260 seconds)
[21:16:26] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:ed43:2e19:9693:a22e) (Read error: Connection reset by peer)
[21:17:07] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:ed43:2e19:9693:a22e)
[21:25:43] *** Quits: jsrnop (~mark@user/jsrnop) (Quit: The Lounge - https://thelounge.chat)
[21:27:02] *** Joins: jsrnop (~mark@user/jsrnop)
[21:29:56] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:ed43:2e19:9693:a22e) (Read error: Connection reset by peer)
[21:30:36] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:ed43:2e19:9693:a22e)
[21:31:08] *** Joins: slowtype- (~slowtyper@79.103.49.216.dsl.dyn.forthnet.gr)
[21:31:54] *** Quits: slowtyper (~slowtyper@user/slowtyper) (Ping timeout: 260 seconds)
[21:40:34] *** Joins: Atque (~Atque@user/atque)
[21:42:20] *** Joins: haise01 (~haise01@user/haise01)
[21:43:15] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:43:34] *** Joins: xlei (znc@pool-68-129-84-118.nycmny.fios.verizon.net)
[21:44:20] *** Quits: bodhi (~bodhi@c-73-93-87-220.hsd1.ca.comcast.net) (Quit: WeeChat 3.0.1)
[21:44:45] <lungaro> i need to implement a basic server side filtering mechanism where events are streamed to a client over grpc and i'd like to filter them server side according to the clients filter requirements.
[21:44:52] <lungaro> Is there a way to achieve this efficiently?
[21:44:57] *** Quits: Scarecr0w (scarecr0w@user/scarecr0w) (Remote host closed the connection)
[21:45:39] <lungaro> I was thinking about compiling the filter into a trie and doing a string compare but i've not written or benched anything
[21:47:13] *** Joins: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net)
[21:48:31] *** Quits: tyson2 (~user@cpe18b169b14ff9-cmf0f2490de5d0.sdns.net.rogers.com) (Remote host closed the connection)
[21:48:45] *** Joins: fscklife (~nikw@5.114.164.1)
[21:48:54] <fscklife> does go repos have a mirror?
[21:48:56] *** Joins: INeedAHandle (~INeedAHan@39.124.72.106)
[21:49:45] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:51:41] *** Joins: simson (~simson@p57ba7d35.dip0.t-ipconnect.de)
[21:53:05] *** Joins: slowtyper (~slowtyper@user/slowtyper)
[21:54:13] *** Joins: freakazoid343 (~matt@2603-9000-cf0f-80e3-b526-c1c3-357b-ba90.inf6.spectrum.com)
[21:54:27] *** Quits: slowtype- (~slowtyper@79.103.49.216.dsl.dyn.forthnet.gr) (Ping timeout: 260 seconds)
[21:54:36] <ikke> go repos?
[21:55:11] <ikke> You mean https://cs.opensource.google/go?
[21:56:47] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:ed43:2e19:9693:a22e) (Ping timeout: 260 seconds)
[21:57:42] <dostoyevsky2> I did a `GO111MODULE=on go get -u github.com/go-acm
[21:57:57] <dostoyevsky2> e/lego/v4/cmd/lego' -- this installs 200 other packages...
[21:58:33] <dostoyevsky2> github.com/Azure/azure-sdk-for-go v32.4.0+incompatible // github.com/softlayer/softlayer-go // github.com/vultr/govultr/v2
[21:58:49] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[21:58:52] <dostoyevsky2> every hyperscaler lib that's out there it seems
[21:59:04] <Tv_> azure and aws libs definitely suck both
[21:59:15] <Tv_> in different ways,  but undeniably
[21:59:21] <dostoyevsky2> I don't see how this is necessary to get a Let's Encrypt cert
[21:59:35] <Tv_> dostoyevsky2: it's not, you're just using a bloaty library
[21:59:41] <rewt> the repo you got has those as dependencies, so it kinda has to get them for it to build
[22:00:36] *** Quits: kupi (uid212005@id-212005.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[22:00:42] <Tv_> https://pkg.go.dev/golang.org/x/crypto/acme/autocert is probably still the slimmest letsencrypt client out there
[22:03:11] <dostoyevsky2> Tv_: Neat, I could actually just embed this library into my own code easily...
[22:03:47] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[22:04:01] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-04de-ef7d-4fbd-a956.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[22:04:38] <lungaro> doesn't look so bad, i'm surprised too given the friction i've had with certbot =P
[22:05:00] *** Joins: vhost- (~vhost@65.102.48.134)
[22:05:08] <Tv_> autocert is rsc code, it's *obviously* better than many alternatives ;)
[22:05:16] <dostoyevsky2> certbot is what I use atm but deployment is not so easy, requires a working python installation
[22:05:20] <Tv_> thought it's also simple because of its assumptions; no DNS mode etc
[22:05:52] *** Joins: fikran (~fikran@user/fikran)
[22:06:04] <fscklife> ikke: some countries say it is 405 for them
[22:06:46] <dostoyevsky2> https://gist.github.com/FZambia/b51fa33ea4ec78caa7722299da5ae09e
[22:07:09] <dostoyevsky2>  Simple Go TLS server with Let's Encrypt automatic certificates  <- ~80 LoC
[22:07:50] *** Joins: Scarecr0w (scarecr0w@user/scarecr0w)
[22:08:03] *** Joins: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com)
[22:08:41] *** Joins: Atque (~Atque@user/atque)
[22:09:12] <seebs> LE is such a Good Thing
[22:09:32] <lungaro> now I wonder how easy it would be to support internal TLS =P
[22:09:46] <dostoyevsky2> I am still looking for a Let's be evil angle, though ;-)
[22:09:51] <seebs> not nearly as easy, i think
[22:10:21] <lungaro> if you could crack that, you could TLS everything and start shifting off HTTP
[22:11:32] *** Joins: jespada (~jespada@181.28.253.200)
[22:13:06] <siXy> You can use either wildcards (ewwww) or DNS based challenges for that. Works fine.
[22:13:19] <dostoyevsky2> lungaro: I am doing an was from scratch project, so first step is to use internal TLS with client certs to setup a cluster and now I am giving access to public resources via normal TLS
[22:13:43] <siXy> and you absolutely *should* use HTTPS internally. Always.
[22:13:44] <dostoyevsky2> s/ was / aws /
[22:13:48] *** Quits: jespada (~jespada@181.28.253.200) (Client Quit)
[22:14:28] <dostoyevsky2> lungaro: https://gist.github.com/xjdrew/97be3811966c8300b724deabc10e38e2
[22:14:42] <siXy> If you don't want to do LE for all your internal stuff, there's a couple nice things to help manage an internal CA, but that's probably only of interest to companies with more than a handful of employees.
[22:15:07] <Tv_> i haven't gotten around to it but my plan is to do LE via DNS challenge for internal stuff
[22:15:26] <Tv_> DNS challenge needed when LE cannot connect directly to the service
[22:15:45] <Tv_> but then you need a programmatic-editing DNS host, which is somehow still pretty rare
[22:16:07] *** Joins: Swtiris (~USER@ppp079166100179.access.hol.gr)
[22:16:19] <Tv_> i was thinking of writing a service that can edit DNS freely, and then make that provide a hostname-locked APIs to the actual services
[22:17:06] <siXy> for my things, I have a subdomain that's delegated to aws route53, and do dns challenges there as the r53 api is bad but not unusuably bad
[22:17:15] <Tv_> so i'd run internal services in subdomain of a public dns zone, but none of the A records etc would have to be publicly visible
[22:17:20] <dostoyevsky2> Tv_: Is it hard to run one's own bind?  I guess there would be a go implementation of bind... so you could dynamically adjust DNS replies
[22:17:31] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Quit: The Lounge - https://thelounge.chat)
[22:17:43] <Tv_> dostoyevsky2: sure but all you really need is to be able to set TXT records, so you can get by with simpler things
[22:17:53] <siXy> if I was doing this at a company I'd run netflix's lemur + cloudflare's cfssl to have a proper internal CA.
[22:18:41] <dostoyevsky2> siXy: I just wrote a REST service which is internal where I generate all certs, give them gracious lifetimes..  it's just a couple of openssl commands
[22:19:01] *** Parts: Swtiris (~USER@ppp079166100179.access.hol.gr) ()
[22:19:31] *** Joins: jespada (~jespada@181.28.253.200)
[22:20:13] <siXy> dostoyevsky2: which is fine if you want to let anyone who can get to that service the ability to generate whatever cert they want with little accountability or management.
[22:20:34] <Tv_> i'm actually at a point where i could really use very, very simple deployment automation, all onto one box, but mostly to get upgrades smooth... meanwhile, most things like that are built to copy with 100+ engineer staff managing 17 kubernetes clusters
[22:20:50] <fizzie> https://github.com/joohoi/acme-dns is written in Go and is for running your own DNS server specifically for ACME challenges.
[22:21:02] <dostoyevsky2> siXy: Oh, you'd have to steal an auth token to generate the certs too...
[22:22:42] <dostoyevsky2> siXy: but since it's in my internal network, it would be easy to just allow cert generation via connection from localhost too... even simplier
[22:23:29] <siXy> Tv_: Have you seen Hashicorp's nomad? I have that on my list of thingss to look at - it's kind of k8s but simple
[22:23:42] <Tv_> siXy: yeah but this is all one machine
[22:23:47] *** Joins: neurocyte0132889 (~neurocyte@185.117.68.82)
[22:23:47] *** Quits: neurocyte0132889 (~neurocyte@185.117.68.82) (Changing host)
[22:23:47] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[22:24:17] <Tv_> siXy: squeezing monthly costs down, i know it won't need to scale out, and even if it did that'd be more to a CDN than identical boxes in a row
[22:25:14] <lungaro> whatever happened to all the heroku forks, ie dokku
[22:25:16] <Tv_> i have two containers and a handful of single-file executable that sometimes coordinate via local files.. i'm looking at mostly systemd services, very little fancy stuff
[22:25:40] <Tv_> most of those tend to take out useful things like coordinating via dropping files in a dir
[22:25:46] <lungaro> Yeah
[22:25:53] <simson> siXy: lemur looks nice ...  good pointer, if I ever have to manage certs at a corp
[22:25:54] <Tv_> i *really* don't need to build a REST api for that
[22:25:58] <lungaro> haha
[22:25:59] <dostoyevsky2> What libraries in Go support changing a TXT record?  How does one actually authenticate for that?  Wouldn't it be easier to just rent a server, run a DNS on it, and point the DNS record of a domain to that server
[22:26:16] <lungaro> i hate deployment systems. You could just script it via ssh shell commands in jenkins!
[22:27:35] <lungaro> would it be possible to use ebpf in go to provide a filtering mechanism? How would I push values onto a stack and then run a user defined function?
[22:27:50] <lungaro> missing a compiler package, not sure what term to use
[22:28:49] <lungaro> ah here it is. x/net/bpf -- its called a VM, not a runtime, DOh
[22:30:37] <dostoyevsky2> lungaro: it can run arbitrary binary code IIUC, but there is a verifier that's pretty strict, in order to prevent you from crashing the kernel
[22:31:04] <Tv_> lungaro: i hope you really have performance requirements justifying that complexity
[22:31:26] <lungaro> i'm just curious, I dont actually have perf reqs
[22:31:37] <Tv_> lungaro: fwiw a lot of the CS work on "demultiplex incoming network packets to correct receiver" in exokernels etc use bloom filters or similar
[22:31:41] <dostoyevsky2> I wonder if that verifier is just a constraint resolver
[22:33:15] <siXy> dostoyevsky2: https://elixir.bootlin.com/linux/latest/source/kernel/bpf/verifier.c
[22:33:32] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Read error: Connection reset by peer)
[22:33:36] <Tv_> lungaro: and in the real world, network protocols (aimed for such use) carefully put a suitable session ID in a good location, so it's more a hash table lookup than a "filter"
[22:34:14] <lungaro> makes sense. I'm trying to just explore a mechanism of user defined event filtering on the server
[22:34:15] <Tv_> lungaro: for pubsub with arbitrary subscription criteria, there's some publications recently mostly centered around kafka about that
[22:34:42] <Tv_> lungaro: definitely start with a "user sets configuration, server calls a function with the message and config"
[22:34:51] <lungaro> so it'd be more fun to do something more flexible than the typical "Does EventX match Filter" loop
[22:35:39] <lungaro> i could see myself simply accepting a lua/javascript expression and eval'ing per event
[22:35:40] <lungaro> lol
[22:36:28] <siXy> calling a javascript function on every packet recieved would be a novel way to benchmark your cpu, I suppose.
[22:36:37] <Tv_> per connected client...
[22:36:38] <dostoyevsky2> siXy: 15k LoC -- I wonder how many CVEs that will get us....
[22:36:43] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[22:37:08] <Tv_> lungaro: most pubsub systems force you to (hierarchical) topics, for this reason
[22:37:20] <dostoyevsky2> siXy: Isn't that what node.js does?
[22:37:32] <lungaro> yeah, i'm not per packet here, i've got my own pubsub. I could think about a topic concept
[22:37:50] <siXy> dostoyevsky2: I think generally the assumption is that if you give attackers access to run arbitrary bpf programs then just maybe the bpf verifier isn't your top concern.
[22:38:14] <Tv_> lungaro: i would just define a struct FilterConfig, let client change it, have a function filterMatch(*FilterConfig, *Message) bool, and start accumulating fields in FilterConfig
[22:38:36] <lungaro> yeah, that's what I normally do
[22:39:01] <Tv_> later on you can make a field be a javascript program ;)
[22:39:05] <lungaro> kinda tangenting here but it'd be nice to support operators too, like equals(), regex(), etc
[22:39:06] <lungaro> ;)
[22:39:31] <dostoyevsky2> siXy: Yeah, still... Windows actually got their act together when they introduced a verifier for drivers, effectively eliminating driver crashes... something about that is fascinating..
[22:39:38] <Tv_> lungaro: plenty of search engines, document databases, etc encode their queries as json
[22:39:56] <Tv_> lungaro: you have a pretty classic "inverted query" scenario there
[22:39:59] <siXy> windows definitely hasn't eliminated driver crashes, I'm afraid to say
[22:40:06] <dostoyevsky2> Ah, ok...
[22:40:36] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Quit: mikoto-chan)
[22:40:53] <lungaro> https://github.com/Knetic/govaluate
[22:40:56] <lungaro> interesting
[22:41:27] <dostoyevsky2> lungaro: Any tips for getting started writing one's own pubsub broker?  I looked into zeromq and mqtt source codes so far and some small golang PoCs
[22:42:34] <dostoyevsky2> I guess Kafka is essentially just sharding/scaling horizontally but making sure that certain topics converge to certain server locations
[22:42:51] <Tv_> lungaro: oh if you're leaning that way.. there's some things for evaluating rulesets, more standard
[22:42:57] <lungaro> dostoyevsky2, not really, my context is a grpc server which defines the streaming API. Then in the app I wire up a client broadcast api with the "event api"
[22:43:04] <lungaro> Tv_, care to share?
[22:43:27] <Tv_> lungaro: searching..
[22:43:56] <lungaro> thanks. yeah, this stuff seems to escape me half the time I need to find it. Pretty sure i've seen this one before
[22:44:03] <Tv_> lungaro: https://pkg.go.dev/github.com/google/cel-go/cel  has a reputation for being reasonably fast
[22:44:13] <lungaro> sweet
[22:44:23] *** Quits: slowtyper (~slowtyper@user/slowtyper) (Ping timeout: 260 seconds)
[22:44:29] <Tv_> lungaro: https://www.openpolicyagent.org/ is inspired by it, more like prolog, implementation is slower
[22:44:41] <Tv_> lungaro: and then there's https://go.starlark.net/
[22:44:43] *** Joins: slowtyper (~slowtyper@user/slowtyper)
[22:45:11] <Tv_> lungaro: CEL is used in Google Firestore security rules, Starlark is mostly famous from Bazel
[22:45:23] *** Joins: horribleprogram (~user@user/horribleprogram)
[22:45:52] <Tv_> lungaro: author of Go Starlark lib says if you don't trust the starlark source, run it in a resource-constrained subprocess
[22:46:05] <Tv_> as in, no cpu limit, no allocation limit, etc
[22:46:26] <lungaro> yeah, that's why I started at bpf, cause it was a safer world and my needs are minimal
[22:46:29] <Tv_> no clue if CEL or OPA have stronger guarantees, CEL definitely is built to work on hostile input
[22:46:35] <lungaro> ie, i could easily not have loops
[22:46:41] <lungaro> nice
[22:46:50] <Tv_> i think CEL and Starlark are fundamentally unable to express loops
[22:46:53] <lungaro> yeah, CEL looks nice likeit'll give me what I want
[22:46:56] <Tv_> just combinatorial explosion
[22:47:03] <dostoyevsky2> does go have an easy way to cgroup a process... like a cheap "podman/from scratch"?
[22:47:17] <Tv_> i've been eyeing using OPA for actual security policies
[22:47:32] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:47:36] <Tv_> mostly because i've written some CEL and i think something else could be better...
[22:47:56] <Tv_> dostoyevsky2: there is not much about cgroups that is easy
[22:48:05] <Tv_> dostoyevsky2: podman is available as a library though
[22:48:16] <dostoyevsky2> Tv_: hmmm...
[22:48:18] <Tv_> i mostly shove things into systemd units with DynamicUser= etc
[22:48:52] <Tv_> protip: you can make systemd serve each socket connection in a separately sandboxed process belonging to a separate unique userid
[22:49:31] <dostoyevsky2> is that similar to privsep?  Popular on OpenBSD, e.g. for the the openssh server
[22:49:42] <Tv_> what's hard about that world is mostly interaction with "legacy" protocols like HTTP/2
[22:50:02] <Tv_> privsep is like.. encoding everything into the source
[22:50:17] <Tv_> systemd is like.. architecting your program into separate communicating services
[22:50:49] <Tv_> closest to what privsep does on bsds in linux land is called landlock, and it's mostly focused on a process self-limiting what paths it can access
[22:51:05] <Tv_> e.g. after consuming config, remove ability to read /etc
[22:51:56] <Tv_> that and self-seccomp can be used in ways very similar to privsep, but.. exposing the gory details
[22:52:05] *** Joins: tyson2 (~user@cpe688f2ec1f9b3-cm688f2ec1f9b0.cpe.net.cable.rogers.com)
[22:53:19] <dostoyevsky2> Also, for unveil/pledge on OpenBSD, these are actually supported by Golang... so very easy to secure a process there in Go too
[22:55:17] <Tv_> except for the whole not controlling threading part
[22:55:31] <Tv_> that whole world works a lot better with single-threaded forking C processes
[22:56:15] <Tv_> this especially hurts with seccomp, where a Go app makes a whole lot syscalls your code didn't really directly make
[22:57:27] <dostoyevsky2> on OpenBSD they use a global lock for all syscalls, so I guess they control threading that way ;-)
[22:57:47] <Tv_> well more C runtime is much slimmer and mostly doesn't do things behind your back
[22:58:12] <Tv_> trade-offs being mostly GC, cheap green threads
[22:58:32] <Tv_> i for one could live the rest of my life without writing an event loop ever again...
[22:58:40] *** Quits: slowtyper (~slowtyper@user/slowtyper) (Ping timeout: 260 seconds)
[22:58:43] *** Joins: slowtype- (~slowtyper@2a02:214c:8630:300:654c:f501:742f:b8e4)
[22:59:03] *** Joins: abadon_fare (~fare@2001:8a0:e49b:d200:9870:e2f:5de:a479)
[22:59:54] <dostoyevsky2> I used to have an account here: https://openbsd.amsterdam/ ... but I couldn't really use it to run irssi, because it would intermittently freeze for like 15s...  but the project might support an SMP implementation for OpenBSD in the future... at least as a use case
[23:00:33] <horribleprogram> I looked at bettercap and now I'm going to learn Go
[23:02:39] <horribleprogram> I don't have a src directory within ${GOPATH}
[23:03:01] <horribleprogram> also why is everything root
[23:03:17] <horribleprogram> ~/go/ has all root ownership
[23:07:18] <horribleprogram> oh thank god to install go I just have to use "go install ..."
[23:08:09] <Tv_> sounds like you created files (extracted a tarball?) as root, yourself
[23:08:25] <horribleprogram> precisely
[23:08:27] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[23:09:05] <horribleprogram> so i did a refresh... basically commented out .zshrc GOPATH and GOROOT, sudo rm -rf /usr/local/go and sudo rm -rf ~/go
[23:09:12] <horribleprogram> and re-installed it with the .pkg
[23:09:16] *** Quits: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt) (Ping timeout: 245 seconds)
[23:09:31] *** Joins: X-Scale` (~ARM@31.22.167.71)
[23:10:52] *** X-Scale` is now known as X-Scale
[23:11:11] *** Quits: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl) (Ping timeout: 264 seconds)
[23:11:32] *** Joins: foobaz212 (~foobaz212@88.98.219.238)
[23:11:58] <horribleprogram> so GOROOT is ${$(which go)/bin*} ?
[23:12:04] <horribleprogram> or is it the actual bin file
[23:12:16] <horribleprogram> cuz the documentation lacks the documentation on setting these environemnt variables
[23:12:57] *** Joins: mrig (~mrig@user/mrig)
[23:14:07] <ikke> horribleprogram: if you use go modules (which you should), there is no need to set all these environment variables
[23:14:35] <horribleprogram> ikke: I just noticed yeah
[23:14:48] <horribleprogram> ikke: so if go env GOROOT returns /usr/local/go
[23:15:16] <horribleprogram> and go env GOPATH returns /Users/horribleprogram/go I don't need to set them?
[23:15:25] <ikke> correct
[23:15:31] <horribleprogram> wow cool :)
[23:15:42] <horribleprogram> yeah I saw it was deprecated
[23:15:47] <horribleprogram> the go get github.com/blah/foo
[23:16:05] <ikke> You can still set GOPATH if you want to move it somewhere else, but you no longer have to put all your projects inside GOPATH
[23:16:06] <horribleprogram> so I came to Go learning at a transition phase?
[23:16:12] <horribleprogram> ahh
[23:16:43] <ikke> Most projects have switched to go modules nowadays
[23:17:03] <ikke> since go 1.16 (or 1.17, I forgot), go modules are assumed to be used by default
[23:17:11] <horribleprogram> ahh cool
[23:20:38] *** Quits: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net) (Ping timeout: 260 seconds)
[23:21:10] <horribleprogram> dang Montgomery wants me to update
[23:21:14] <horribleprogram> macOS montgomery
[23:21:51] <horribleprogram> they switched to simpson character codenames now btw, that's Mr. Burns' first name
[23:23:10] *** Quits: simson (~simson@p57ba7d35.dip0.t-ipconnect.de) (Quit: WeeChat 3.0)
[23:24:22] *** Quits: abadon_fare (~fare@2001:8a0:e49b:d200:9870:e2f:5de:a479) (Ping timeout: 258 seconds)
[23:26:56] <horribleprogram> explain packages and modules to me
[23:27:30] *** Quits: jpw (~jpw@user/jpw) (Remote host closed the connection)
[23:28:17] <horribleprogram> the module is example/user/hello, so like Java I must follow the same directory structure
[23:28:18] <horribleprogram> ?
[23:28:59] <horribleprogram> like go mod init example/user/hello && mkdir -p example/user/hello
[23:29:31] <ikke> You do not need to replicated the folder structure
[23:29:44] <horribleprogram> "Next, create a file named hello.go inside that directory containing the following Go code:"
[23:30:20] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[23:30:53] <horribleprogram> oh I see
[23:31:13] <horribleprogram> the output will check go.mod and create it accordingly
[23:32:14] *** Joins: fub (uid190747@id-190747.ilkley.irccloud.com)
[23:32:47] <horribleprogram> oh wait a second, I made the directories myself
[23:34:54] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[23:35:47] *** Quits: bkircher (~bkircher@2001:a61:24b5:cd01:711f:b4dc:f9:b325) (Quit: WeeChat 3.2)
[23:36:15] *** Quits: sharktamer (~sharktame@cpc91312-watf11-2-0-cust697.15-2.cable.virginm.net) (Remote host closed the connection)
[23:38:15] *** Quits: tyson2 (~user@cpe688f2ec1f9b3-cm688f2ec1f9b0.cpe.net.cable.rogers.com) (Remote host closed the connection)
[23:38:45] *** Quits: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[23:39:38] *** Joins: bkircher (~bkircher@2001:a61:24b5:cd01:711f:b4dc:f9:b325)
[23:39:55] *** Quits: mei (~mei@user/mei) (Ping timeout: 260 seconds)
[23:41:18] <horribleprogram> wth is a rune
[23:41:30] <horribleprogram> what is this Runescape or something?
[23:41:40] *** Joins: gpeskens (~gpeskens@2001:985:7aa4:1:44ab:7a73:1535:cd95)
[23:41:47] <ikke> no, it's just a single 'character'
[23:42:07] <horribleprogram> also python has tuple-assignment as well so I'm not impressed
[23:42:11] <ikke> But on unicode level, not a single byte
[23:42:24] <horribleprogram> also python has the extended tuple assignment... a, *b = [1, 2, 3, 4]
[23:42:44] <horribleprogram> that makes no sense
[23:42:48] <ikke> horribleprogram: golang is not a language that tries to impress
[23:42:58] <horribleprogram> is it a UTF-16 code unit
[23:43:04] <horribleprogram> or a Unicode code point
[23:43:11] <horribleprogram> so a 32-bit unsigned integer
[23:43:15] <j416> horribleprogram: https://golang.org/doc/effective_go
[23:43:16] <j416> horribleprogram: https://golang.org/ref/spec
[23:43:19] <j416> horribleprogram: https://tour.golang.org/welcome/1
[23:43:35] <horribleprogram> I'm going through golang.org/doc/code
[23:43:56] <horribleprogram> ikke: well that's good cuz I'm not impressed
[23:44:51] <horribleprogram> actually this is pretty cool
[23:45:02] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[23:45:23] <ikke> golang has very little syntactic sugar
[23:45:24] <horribleprogram> I wondered why fmt.Println() used this sort of TitleCase convention... as it's a function, but now I see
[23:46:15] <horribleprogram> the naming convention of top-level functions actually corresponds to a syntax component of the language, they're exported by default
[23:46:16] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 265 seconds)
[23:46:35] <ikke> Yes, public functions / methods / fields start with a capital
[23:46:53] *** Joins: sharktamer (9bafe1e1bb@2604:bf00:710:0:5054:ff:feea:5006)
[23:48:11] *** Joins: mikoto-chan (~mikoto-ch@185.237.102.117)
[23:48:21] <horribleprogram> so far I'm impressed, I got to restart and try out the new macOS Montgomery
[23:48:31] <horribleprogram> and also I've been annoying so I'll come back when I actually have some questions
[23:48:35] <horribleprogram> take care ty
[23:48:43] <horribleprogram> have a good evening/morning/night everyone
[23:48:50] *** Quits: horribleprogram (~user@user/horribleprogram) (Remote host closed the connection)
[23:49:22] *** Joins: abadon_fare (~fare@2001:8a0:e49b:d200:536e:103e:b0f1:87ef)
[23:49:41] *** Quits: andlabs (~andlabs@70.107.171.168) (Read error: Connection reset by peer)
[23:50:11] *** Joins: andlabs (~andlabs@70.107.171.168)
[23:54:26] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[23:54:45] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[23:54:51] *** Quits: abadon_fare (~fare@2001:8a0:e49b:d200:536e:103e:b0f1:87ef) (Ping timeout: 260 seconds)
[23:56:44] *** Quits: foobaz212 (~foobaz212@88.98.219.238) (Quit: Client closed)
[23:56:57] *** Joins: foobaz212 (~foobaz212@88.98.219.238)
[23:57:58] *** Joins: freakazoid12345 (~matt@2603-9000-cf0f-80e3-b526-c1c3-357b-ba90.inf6.spectrum.com)
[23:59:07] <b0nn> hrm, Macs haven't gone for "Montgomery", instead it's "Monterey"; sadly the Simpsons was not an inspiration for the naming of their OS
