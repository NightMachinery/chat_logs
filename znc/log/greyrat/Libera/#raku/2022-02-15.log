[00:04:25] *** Quits: abraxxa (~ahartmai@tsa-tc-flod.t-systems.at) (Remote host closed the connection)
[00:55:38] *** Quits: laidback_01 (~jax@98.97.66.6) (Ping timeout: 272 seconds)
[01:05:45] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[01:08:17] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[01:25:46] *** Joins: curiosa (~curiosa@37.165.105.57)
[01:28:26] *** Joins: laidback_01 (~jax@98.97.66.6)
[01:38:11] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[01:40:04] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[01:56:12] *** Quits: laidback_01 (~jax@98.97.66.6) (Ping timeout: 240 seconds)
[02:05:03] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[02:14:30] *** Joins: laidback_01 (~jax@98.97.66.6)
[02:19:42] <guifa> there are some weird things that can happen with using any namespace that exists
[02:20:25] <guifa> I got a bug report with DateTime::Timezones where my module conflicted with another one that exported `class DateTime::Parse`
[02:20:59] <guifa> when mine imported in `class DateTime [is DateTime]`, the DateTime::Parse disappeared
[02:23:28] <guifa> that doesn't happen with non-built ins though:
[02:23:29] <guifa> m: class Foo::Bar { method foo {'foobar'} }; class Foo { ; }; say Foo::Bar.foo
[02:23:30] <camelia> rakudo-moar b5f49ace1: OUTPUT: ¬´foobar‚ê§¬ª
[02:36:27] <MasterDuke> i just watched p6steve's fosdem talk. i think that's the first time i've ever seen a grammar with two action classes available, very cool
[03:03:41] *** Quits: curiosa (~curiosa@37.165.105.57) (Quit: Client closed)
[03:37:53] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[03:40:17] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[03:52:14] <Geth> ¬¶ doc: 06c85115f1 | Coke++ | xt/01-raku-version.t
[03:52:14] <Geth> ¬¶ doc: track new release
[03:52:14] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/06c85115f1
[04:24:30] <gfldex> Is there a way to tell an infix to take a WhateverCode as an argument instead of forming a closure?
[04:25:38] *** Joins: daxim (~daxim@2a02:b18:c13b:28:42b0:76ff:fe7b:7663)
[04:56:35] <moon-child> &[whatever](*, whatever)?
[05:25:38] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[05:25:38] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[05:32:35] <Geth> ¬¶ raku-mode: Mercerenies++ created pull request #56: Temporary fix for Issue #43
[05:32:35] <Geth> ¬¶ raku-mode: review: https://github.com/Raku/raku-mode/pull/56
[05:50:14] *** Joins: vrurg (~vrurg@45.74.95.181)
[05:50:33] *** Joins: frost (~frost@user/frost)
[06:27:10] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[06:36:30] *** Quits: frost (~frost@user/frost) (Ping timeout: 252 seconds)
[07:18:00] *** Quits: vrurg (~vrurg@45.74.95.181) (Quit: Leaving...)
[07:19:29] *** Joins: vrurg (~vrurg@45.74.95.181)
[08:19:30] *** Quits: quotable6 (quo-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:19:30] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:19:30] *** Quits: benchable6 (ben-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:19:30] *** Quits: nativecallable6 (nat-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:19:30] *** Quits: releasable6 (rel-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:19:30] *** Quits: tellable6 (tel-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:19:30] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:19:30] *** Quits: notable6 (not-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:19:30] *** Quits: bloatable6 (blo-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:19:30] *** Quits: coverable6 (cov-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:19:30] *** Quits: shareable6 (sha-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:19:30] *** Quits: bisectable6 (bis-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:19:31] *** Quits: committable6 (com-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[08:19:31] *** Quits: greppable6 (gre-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[08:19:31] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[08:19:31] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[08:19:31] *** Quits: sourceable6 (sou-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[08:19:31] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[08:19:46] *** Joins: quotable6 (quo-able@2001:41d0:2:5eb5::)
[08:19:54] *** Joins: unicodable6 (uni-able@2001:41d0:2:5eb5::)
[08:20:34] *** Joins: committable6 (com-able@2001:41d0:2:5eb5::)
[08:20:34] *** Joins: notable6 (not-able@2001:41d0:2:5eb5::)
[08:20:55] *** Joins: releasable6 (rel-able@2001:41d0:2:5eb5::)
[08:22:31] *** Joins: bisectable6 (bis-able@2001:41d0:2:5eb5::)
[08:22:39] *** Joins: bloatable6 (blo-able@2001:41d0:2:5eb5::)
[08:26:27] *** Joins: frost (~frost@user/frost)
[08:27:26] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[09:21:43] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[09:40:48] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[10:19:54] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[10:21:30] *** Joins: vrurg_ (~vrurg@45.74.95.181)
[10:21:33] *** Joins: sourceable6 (sou-able@2001:41d0:2:5eb5::)
[10:21:36] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[10:22:10] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[10:24:22] *** Quits: vrurg (~vrurg@45.74.95.181) (Ping timeout: 272 seconds)
[10:39:37] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[10:40:27] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[10:41:27] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[10:49:24] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[11:08:00] *** Joins: abraxxa (~ahartmai@smtp.hartmaier.priv.at)
[11:12:36] *** Quits: abraxxa (~ahartmai@smtp.hartmaier.priv.at) (Ping timeout: 252 seconds)
[11:13:36] *** Joins: abraxxa (~ahartmai@tsa-tc-flod.t-systems.at)
[11:20:43] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[11:22:01] *** Joins: tellable6 (tel-able@2001:41d0:2:5eb5::)
[11:22:45] *** Joins: immediate (~immediate@139.179.217.40)
[11:28:55] <immediate> hello! I have a string of length 4, I need to make it 7 by repeating things. Context: 3 digit CSS color code, e.g., `#FAB` to become `#FFAABB`. I do this
[11:29:01] <immediate> m: my $s = "#FAB"; say "#" ~ $s.comb.skip.map(* x 2).join
[11:29:01] <camelia> rakudo-moar 65507b89d: OUTPUT: ¬´#FFAABB‚ê§¬ª
[11:29:30] <immediate> Question is how you would do it? Some regex could be?
[11:29:36] *** Quits: laidback_01 (~jax@98.97.66.6) (Ping timeout: 272 seconds)
[11:29:48] <immediate> or is it fine enough? (im relateively new to language)
[11:31:32] <immediate> oh there is raku-beginner i should have posted there I guess...
[11:32:56] *** Joins: laidback_01 (~jax@98.97.66.6)
[11:39:00] *** Quits: laidback_01 (~jax@98.97.66.6) (Ping timeout: 240 seconds)
[11:57:39] <CIAvash> m: say '#FAB'.subst: :g, /\w/, * x 2 # regex version
[11:57:39] <camelia> rakudo-moar 65507b89d: OUTPUT: ¬´#FFAABB‚ê§¬ª
[12:07:04] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[12:09:15] *** Joins: laidback_01 (~jax@98.97.66.6)
[12:16:31] <CIAvash> m: say '#FAB'.comb.rotor(1, 3).&{.[0] ~ .[1]¬ª.&(* x 2).join} # Another way to write your solution
[12:16:32] <camelia> rakudo-moar 65507b89d: OUTPUT: ¬´#FFAABB‚ê§¬ª
[12:18:34] *** Joins: frost (~frost@user/frost)
[12:20:13] <immediate> thanks
[12:21:08] *** Joins: statisfiable6 (sta-able@2001:41d0:2:5eb5::)
[12:22:53] <CIAvash> m: say '#FAB'.wordcase: :filter{.comb¬ª.&(* x 2).join} # and another solution
[12:22:54] <camelia> rakudo-moar 65507b89d: OUTPUT: ¬´#FFAABB‚ê§¬ª
[12:23:20] *** Joins: Darkcoal (~user@user/Darkcoal)
[12:38:00] *** Quits: frost (~frost@user/frost) (Ping timeout: 272 seconds)
[12:40:13] *** Joins: dakkar (~dakkar@home.thenautilus.net)
[12:43:17] <lizmat> immediate: I would have used your original version
[12:57:27] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545)
[13:09:12] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[13:21:50] *** Joins: shareable6 (sha-able@2001:41d0:2:5eb5::)
[13:38:26] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[13:41:55] *** Joins: Guest53 (~Guest53@79-64-127-48.host.pobb.as13285.net)
[13:42:21] *** Parts: Guest53 (~Guest53@79-64-127-48.host.pobb.as13285.net) ()
[13:52:21] *** Quits: immediate (~immediate@139.179.217.40) (Quit: Connection closed)
[14:27:46] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[15:04:45] *** Joins: curiosa (~curiosa@37.166.40.235)
[15:35:46] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[15:40:19] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[16:14:47] *** Quits: curiosa (~curiosa@37.166.40.235) (Quit: Client closed)
[16:37:23] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[16:53:52] *** Joins: SqrtNegInf (~SqrtNegIn@97-113-30-12.tukw.qwest.net)
[17:16:53] * lizmat clickbaits https://rakudoweekly.blog/2022/02/14/2022-07-unsigned-released/
[17:29:19] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[17:33:50] *** Quits: discord-raku-bot (~RakuIRC@ip5f5ab74b.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[17:34:18] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab74b.dynamic.kabel-deutschland.de)
[17:38:51] *** Joins: vrurg (~vrurg@45.74.95.181)
[17:40:54] *** Quits: vrurg_ (~vrurg@45.74.95.181) (Ping timeout: 252 seconds)
[18:40:54] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[18:40:54] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[18:40:57] *** Joins: Sgeo (~Sgeo@user/sgeo)
[18:42:39] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[18:43:19] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[18:52:28] <[Coke]> bisectable doesn't work on windows, right?
[18:52:48] <[Coke]> is it something I could run on my laptop and use directly rather than via IRC?
[19:00:06] <MasterDuke> yeah
[19:05:43] <MasterDuke> checkout how Blin does it
[19:07:24] <ugexe> i think those might relying on some non-windows commands
[19:07:50] <[Coke]> I just figure if I have to do another bisect on this windows laptop, I'm going to want it to be a managed thing, not me doing the bisect and rebuild by hand (throwing out the deploy each time.) 
[19:07:56] <[Coke]> I can fix that part.
[19:08:28] <[Coke]> I mean, theoretically
[19:11:24] <ugexe> on windows i usually bisect by release
[19:11:32] <ugexe> just switching between them with rakubrew
[19:11:52] <ugexe> so yeah not the most automated process
[19:12:32] <ugexe> you can also build specific commits ala `rakubrew build moar 234jfj39`
[19:12:46] <ugexe> for once you find the release it started
[19:22:24] <[Coke]> I used git bisect in a rakudo build, and did rm -rf /c/raku /c/sandbox/rakudo/nqp before each build, and it's gone ok
[19:22:39] <[Coke]> but either way there's management going on I'd rather script
[19:34:38] <[Coke]> crap. typed "git bisect good' on the last one... and it's hanging. like 5m now
[19:35:01] <[Coke]> ah, windows highlight paused output. oops
[19:37:36] *** Joins: Xliff (~Cliff@pool-71-255-227-73.washdc.east.verizon.net)
[19:38:04] <[Coke]> one of two skipped commits, an NQP bump or https://github.com/rakudo/rakudo/commit/dab9cd661588a9c9439f578c061e74fd658300cd
[19:39:54] <[Coke]> will try master with the latter reverted and see if that works.
[19:40:10] <Xliff> CAn you untap a supply or force a tapped handler to stop responding to events?
[19:43:29] *** Quits: abraxxa (~ahartmai@tsa-tc-flod.t-systems.at) (Remote host closed the connection)
[19:43:34] <[Coke]> does bisectable deal with nqp bumps and dig into nqp commits, or just report that out as a single rakudo commit?
[19:44:20] <MasterDuke> single rakudo commit. that's been a longstanding todo (same with moarvm commits)
[19:45:25] *** Joins: abraxxa-home (~alex@2a01:100:2000:2500::22)
[19:51:53] *** Quits: rypervenche (~rypervenc@user/rypervenche) (Quit: Êé∞Êé∞ÔΩû)
[20:04:20] <[Coke]> crap. ok, still doesn't work with the one commit reverted.
[20:04:28] <[Coke]> which leaves the skipped NQP bump.
[20:07:34] *** Parts: laidback_01 (~jax@98.97.66.6) ()
[20:08:05] <[Coke]> ... which includes a moarvm bump. :P
[20:10:00] <[Coke]> ah. it ONLY includes a moarvm bump.
[20:13:27] <[Coke]> with 15 commits.
[20:15:37] <[Coke]> so it looks like shareable is handing out builds to use, those builds are all a specific kind of build, so would step one to add windows be to add any second arch type to shareable?
[20:15:54] <[Coke]> (and then at some point, a windows variant can be one?)
[20:26:31] <Xliff> Can you untap a supply or force a tapped handler to stop responding to events?
[20:36:04] <japhb> Xliff: I think there's some implicit context in what you are asking.  Are you talking about a live or on-demand supply?  Are you expecting to undo a single tap without disturbing other taps?  Do you have control of the code in the tap handler?
[20:37:08] <Xliff> japhb: I'm not sure about supply type. I want to untap just a single event and yes, I would have control of the code in the handler.
[20:37:41] <Xliff> I suspect the Supply being tapped would come from a source Supplier, since i would need .emit
[20:49:27] <japhb> I think I would tend to have an atomic flag visible to the tapping react that indicates mode (whether to ignore or not), and just drop events that arrive when ignoring.
[21:05:56] *** Quits: dakkar (~dakkar@home.thenautilus.net) (Ping timeout: 272 seconds)
[21:18:52] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Quit: No Ping reply in 180 seconds.)
[21:19:08] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[21:34:30] *** Quits: juanfra__ (~juanfra@user/juanfra) (Read error: Connection reset by peer)
[21:36:40] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[22:22:40] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545)
[22:32:59] *** Quits: dogbert11 (~dogbert@c83-253-59-194.bredband.tele2.se) (Quit: WeeChat 2.8)
[22:36:31] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[22:41:32] *** Joins: dogbert17 (~dogbert@c83-253-59-194.bredband.tele2.se)
[22:53:28] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[23:10:04] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[23:13:43] *** Joins: nikhil (~nikhil@157.48.146.115)
[23:13:55] *** Quits: nikhil (~nikhil@157.48.146.115) (Client Quit)
[23:19:23] *** Quits: Darkcoal (~user@user/Darkcoal) (Quit: Darkcoal)
[23:38:58] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
