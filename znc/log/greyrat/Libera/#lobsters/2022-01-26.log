[00:00:05] <carbolymer> riv: git status - staged are in green
[00:00:19] <carbolymer> riv: if stage is empty, and index is clean, that means that you can skip this commit
[00:00:21] <riv> it doesn't show me that, like git status normally does
[00:00:32] <ngoldbaum> so if you’re writing a member function how you access the instance if it’s not a parameter?
[00:00:34] <riv> it just says "rebase in progress"
[00:00:48] <ngoldbaum> personally i prefer the explicit parameter in the function definition
[00:00:54] <banna> what does `rebase --continue` say, riv?
[00:00:55] <iDrougge> ngoldbaum: I just access it. It's a member function, so it should already have access to self.
[00:01:03] <vgel> iDrougge i mean, it's explicit in the sense that it's on the LHS of the dot. there's some languages like Raku (IIRC) that let you "pun" functions to either be called as `foo(a, b)` or `a.foo(b)`
[00:01:10] <ngoldbaum> and no weird syntax like obj.foo(obj, param, param, …)
[00:01:20] <riv> rebase --continue says:  No changes - did you forget to git add
[00:01:24] <banna> vgel: have you used go before?
[00:01:43] <vgel> no, I haven't, why?
[00:02:03] <banna> riv: Ah, I'd do another git add just to be sure. Take the list shown in git status and add those paths.
[00:02:14] <ngoldbaum> iDrougge: but like in the class definition there would be a magic name “self” that is bound inside member functions but isn’t otherwise?
[00:02:19] <ngoldbaum> i don’t like that much
[00:02:22] <banna> vgel: go has a nice struct / class member system
[00:02:23] <iDrougge> vgel: But its moving from inside the parameter list to the left side of the dot should confuse beginners more than it confuses me.
[00:02:29] <ngoldbaum> would “self” come in via a closure?
[00:03:03] <banna> I wrote a toy language that has a better implementation of OOP than python, but that's just me being annoying
[00:03:10] <iDrougge> I haven't used more than half a dozen object oriented languages, but they all seem to treat this or self as implicit.
[00:03:17] <ngoldbaum> also it’s not always self, class methods are a thing too…
[00:03:18] *** Quits: jmloyola (~jmloyola@170.150.8.2) (Quit: Lost terminal)
[00:03:22] <vgel> banna oh interesting, I should probably look into it, been putting it off but now that it has generics i'm a bit more interested
[00:03:37] <iDrougge> That's basically my understanding of OO: A compound object with bound functions with an implicit parameter of the object they're operating on.
[00:03:51] <ngoldbaum> as a beginner i found the implicit this in c++ extremely confusing
[00:03:56] <banna> vgel: the generics support is a cherry on top, yeah. I'd certainly look into it as a higher-level Rust.
[00:04:02] <iDrougge> ngoldbaum: Self in a class method should be the class itself, if anything, shouldn't it?
[00:04:26] <ngoldbaum> usually it’s called cls instead of self
[00:04:38] <ngoldbaum> calling it self at all in python is just a convention
[00:04:44] <ngoldbaum> you don’t have to call it that
[00:04:44] <banna> Python class methods are wonky has heck.
[00:04:54] <banna> You need a decorator to call a function static?
[00:04:55] <vgel> iDrougge I mean I won't deny it's an extra thing / piece of complexity. I personally think it's worth it for lightweight namespacing, but there's nothing stopping you from declaring all member functions as free functions that take an explicit first parameter instance
[00:05:18] <ngoldbaum> banna: and @staticmethod is basically completely useless!
[00:05:41] <ngoldbaum> i guess if you want to make a class that’s a bag of functions?
[00:05:50] <ngoldbaum> but why not just have a module?
[00:05:59] <vgel> i definitely cringe a bit when people call python "executable psuedocode", it's got a lot of hidden complexity and weird corners of the language
[00:06:02] <banna> I think python shines the most when it is doing procedural data fumbling
[00:06:25] <iDrougge> vgel: I think that's the opposite of what I want. If I'm making a method on an object, I think it's implicit that I'm interested in self. Self is the outer scope.
[00:06:29] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[00:07:08] <vgel> iDrougge have you used Rust? what do you think about `fn(self) / fn(&self) / fn(mut self) / etc` there?
[00:07:37] <companion_cube> yass, I started a troll
[00:07:48] <iDrougge> vgel: No, I haven't.
[00:07:52] <companion_cube> is python bytecode fixed-size? like, seems like 2 bytes per instruction given the disassembly above
[00:08:03] <vgel> companion_cube I believe so, yes
[00:08:09] <ngoldbaum> rust isn’t OO though so it’s ok :p
[00:08:19] <vgel> IIRC there's a `EXTRA_ARGS` opcode or something like that
[00:08:25] <iDrougge> I think Rust is OO in my book.
[00:08:29] <vgel> that gets interpreted as additional data for the previous opcode
[00:08:45] <iDrougge> But not in Alan Kay's.
[00:08:59] <vgel> Rust is the good parts of OO :)
[00:10:03] <technomancy> wow, we got from "OOP mentioned" to arguing about the definition of OOP to "the good parts" in record time
[00:10:18] <technomancy> good job everyone
[00:10:22] <vgel> but in rust's defense the `self` parameter is more needed since you need a sigil to declare how the method is called
[00:10:30] <vgel> glad to be of service :p
[00:10:43] <iDrougge> Well, you could have put the sigil somewhere else.
[00:11:05] <technomancy> companion_cube: yeah python without classes would be very different.
[00:11:06] <technomancy> and better.
[00:11:11] <vgel> true, personally I like the consistency of declaration
[00:11:19] <companion_cube> technomancy: but it wouldn't be python
[00:11:19] <iDrougge> Me too.
[00:11:21] <vgel> didn't python 1.x not have classes?
[00:11:22] <banna> Gotta love how, after a certain point, programming is literally just organizing a junk drawer.
[00:11:37] <iDrougge> I prefer when declaration and call site look similar.
[00:11:44] <technomancy> companion_cube: it would if guido called it that
[00:11:59] <companion_cube> heh
[00:12:06] <iDrougge> Python with classes is Python++
[00:12:08] <companion_cube> it wouldn't have become that popular, I suspect.
[00:12:21] <technomancy> well, uptake and good design are more or less orthogonal
[00:12:35] <companion_cube> idk, you got to be in the zeitgeist
[00:12:45] <iDrougge> People didn't take Javascript seriously until it got classes. ;)
[00:12:54] <vgel> ah, no python originally had classes but they were kinda janky and were redone in 2.2
[00:13:07] <JordiGH> Hm, is there a bootstrap widget for inputting negative numbers?
[00:13:17] <vladimyr> iDrougge: for me it is other way around...
[00:13:39] <mockturtle> Deno in 2021 [javascript] (jturner) https://lobste.rs/s/omioza
[00:13:52] *** Quits: zer0bitz (~zer0bitz@2001:2003:f444:a000:2055:673d:3155:da63) (Ping timeout: 250 seconds)
[00:13:58] <technomancy> issuing correction on a previous post of mine, regarding object oriented programming. you do not, under any circumstances, "gotta hand it to them"
[00:14:55] <banna> technomancy: We never pass by reference in OOP, thank you.
[00:15:15] <ngoldbaum> i can hold python in my head pretty well
[00:15:22] <ngoldbaum> can’t say that about many other languages
[00:15:30] *** _w1ntermute_ is now known as _w1ntermute
[00:15:37] <technomancy> haha, coming from lua, python looks positively baroque.
[00:16:14] <vgel> i can hold the 50% of python that's commonly used in my head, but whenever i see a metaclass I nope out
[00:16:33] <vgel> spent a lot of a previous job digging through django / django-rest-framework internals
[00:16:37] <vgel> eek
[00:16:40] <iDrougge> technomancy: Hand what to them?
[00:17:31] <technomancy> iDrougge: I was riffing on a dril post in response to companion_cube saying you gotta be "in the zeitgeist" to succeed
[00:18:45] <vgel> i've also been working on speeding up this compbio pipeline we have in python, and "optimized" python is something else
[00:19:16] <JordiGH> Is it okay to use <script> tags at the top of an HTML document or is this too 1998?
[00:19:17] <vgel> a lot of `def method(self, sum=sum): # local variable optimization` that absolutely was not profiled
[00:19:19] <vladimyr> banna: we send messages around ;)
[00:19:23] <JordiGH> Like, can I put my own js in there?
[00:19:31] <JordiGH> Or will I get laughed at if I do?
[00:19:35] <vgel> JordiGH yeah I do that all the time
[00:19:54] <vladimyr> and you won't get laughed for doing it
[00:20:01] <vgel> definitely seen as more prototype-y, but even in prod if you need some small thing that's a couple lines like including an analytics script it's totally fine
[00:20:14] <vgel> *initializing an analytics script
[00:20:53] <vladimyr> usual way of doing google analytics, hubspot, blue button site...
[00:20:55] <technomancy> I do that but it's specifically to load a separate VM so then I can add another <script type="application/lua"> tag
[00:21:08] <technomancy> haven't had anyone laugh yet but probably because they're too bewildered
[00:21:14] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[00:21:15] <banna> bahahaha
[00:21:40] *** Quits: reno1 (~reno@2600:1700:7aa1:d630:4801:58f0:f654:6714) (Ping timeout: 250 seconds)
[00:21:41] <banna> JordiGH: if you've seen what google has done with hypertext, you'll be just fine
[00:21:54] <vladimyr> what about `<script type="text/x-template">`, is that too much?
[00:21:59] <JordiGH> vgel: I'm writing my own js in there. It hides and shows two divs when you select stuff from a drop down.
[00:22:17] <vgel> JordiGH if it's less than, say, 50 lines I wouldn't worry about it
[00:22:18] <JordiGH>     function handleQAModeChange(select) {
[00:22:19] <JordiGH> etc
[00:22:39] <JordiGH> 18 lines, under laughable threshold.
[00:22:51] <vgel> yep :)
[00:22:52] <technomancy> JordiGH: I was surprised how much stuff you can do with pure HTML nowadays http://youmightnotneedjs.com/
[00:22:52] <mockturtle> [ You Might Not Need JavaScript ] - youmightnotneedjs.com
[00:22:56] <JordiGH> It feels somehow wrong to be actually writing js or something.
[00:23:02] <JordiGH> Shouldn't I be writing react and typescript?
[00:23:04] <vladimyr> go for it!
[00:23:14] <ngoldbaum> it’s even free javascript
[00:23:18] <ngoldbaum> stallman be praised
[00:23:27] <vladimyr> libre :D
[00:23:41] <vladimyr> but then, gpl header has more that 18 lines...
[00:23:42] <iDrougge> technomancy: I've been thinking about that zeitgeist thing. Rust is in every sense a "bondage and disciple" language just as Ada was described through all these years. Yet everyone despised Ada and Rust is cool.
[00:23:56] *** Joins: reno1 (~reno@2600:1700:7aa1:d630:4801:58f0:f654:6714)
[00:24:02] <JordiGH> Stallman not be praised. :(
[00:24:19] <JordiGH> The False Prophet.
[00:24:20] <technomancy> iDrougge: my impression is that Ada had close ties to the US department of defense; is that true?
[00:24:29] <technomancy> that's about as uncool as it's possible to be
[00:24:39] <vgel> iDrougge bondage is cool now, I guess
[00:25:19] <iDrougge> technomancy: It was ordered by the US defence department.
[00:25:26] <technomancy> also in the 1990s memory problems just caused crashes instead of millions of customers data being heisted so Rust is solving a much bigger problem than Ada was.
[00:25:48] <vgel> definitely feels like there's this cyclical trend from static -> dynamic -> static -> etc. and rust has hit at the right time in the zeitgeist
[00:26:26] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 250 seconds)
[00:27:08] <technomancy> like ... it's solving the same problem, but the problem that was once small is now big
[00:27:08] <vgel> but seeing people writing, like, web frontends in Rust, I definitely forsee a rebellion in a couple years from people who are like "why are we bothering with a borrow checker and no GC for something that runs in a browser..."
[00:27:23] <technomancy> vgel: haha yeah that makes absolutely no sense.
[00:27:45] <Ticho> so, just like there was a rebellion of nosql, there will be a rebellion of norust? :)
[00:27:52] <technomancy> even if you really like static types, you can have good static types without throwing away GC altogether
[00:27:54] <iDrougge> vgel: Yes, I agree.
[00:28:02] *** Quits: reno1 (~reno@2600:1700:7aa1:d630:4801:58f0:f654:6714) (Ping timeout: 240 seconds)
[00:28:03] <technomancy> the number of problems that legitimately require avoiding GC are very small
[00:28:05] *** Quits: ngp (~ngp@199.180.249.183) (Quit: connection reset by purr)
[00:28:14] <vladimyr> why would anyone make frontend in Rust is beyond me
[00:28:14] *** Joins: ngp (~ngp@199.180.249.183)
[00:28:35] <vgel> I would love a rust-like language except it's fully gc'd and has a super-optimizing backend like v8 that gets it up to like 50% of rust performance
[00:28:40] *** Quits: ngp (~ngp@199.180.249.183) (Client Quit)
[00:28:49] *** Joins: ngp (~ngp@199.180.249.183)
[00:28:52] <technomancy> vgel: you're in luck; ocaml exists! =)
[00:29:05] <iDrougge> vgel: Swift?
[00:29:08] <vgel> I've tried OCaml but the frontend situation is a mess
[00:29:18] <technomancy> ah ok, I know nothing about web dev
[00:29:20] <vgel> not on a mac for swift :/
[00:29:23] <vladimyr> reason?
[00:29:38] <technomancy> I mean, never trust Apple
[00:29:45] <technomancy> that seems like ... pretty obvious at this point
[00:29:46] <vladimyr> bucklescript, whatever they are calling it these days
[00:30:00] <technomancy> oh lol; I thought you meant "what reason to avoid swift"
[00:30:19] <vgel> yeah that was the issue, there was like bucklescript and some reason-specific stdlibs and their types were incompatible? there were like 4 string types?
[00:30:21] <vladimyr> lol :)
[00:30:23] <vgel> it was very confusing
[00:30:34] <vladimyr> something you might like: https://aantron.github.io/dream/
[00:30:34] <mockturtle> [ Dream — Tidy, feature-complete web framework ] - aantron.github.io
[00:30:37] <iDrougge> vgel: You can run it on Linux as well. I thought that was you use case.
[00:30:59] <iDrougge> 4 string types sounds like… Rust.
[00:31:11] <vgel> well for backend stuff I'm mostly happy with Rust, so my main use-case for my dream language would be for web frontends or maybe apps
[00:31:14] *** Quits: vladoski (~foo@2001:b07:add:d406:a908:aca8:6f2f:4bb7) (Quit: Textual IRC Client: www.textualapp.com)
[00:31:38] <vgel> eh, the Rust ones are all flavors of the same underlying string type:)  but maybe I just have stockholm syndrome there
[00:32:34] <vgel> vladimyr dream looks cool, thanks! i'll have to give it a harder look
[00:32:56] *** Quits: mahmutov (~mahmutov@37.155.74.145) (Ping timeout: 250 seconds)
[00:33:41] *** Joins: reno1 (~reno@2600:1700:7aa1:d630:4801:58f0:f654:6714)
[00:33:47] <iDrougge> Rust has a lot of zeitgeist, but I think it will be a hard sell as long as it has things like 4 string flavours or constructs like let string = String::from("A literal")
[00:34:29] <ngoldbaum> wat
[00:35:32] <vgel> yeah, i agree. it makes sense in context (you need to allocate the immutable-in-the-binary &str reference into a boxed heap object to manipulate it), but at the same time it feels like coding in Rust is bouncing between high-level abstractions and very low-level decisions about allocations
[00:35:44] <iDrougge> ngoldbaum: I got it from here. Is it incorrect? https://jeang3nie.codeberg.page/case-for-modern-language-pt1/
[00:35:44] <mockturtle> [ Jean G3nie ] - jeang3nie.codeberg.page
[00:36:19] <ngoldbaum> no i’m just mystified by your statement
[00:36:49] <iDrougge> I mean a hard sell to people who are just programmers during office hours.
[00:37:23] <companion_cube> I hope rust doesn't become an application-level language
[00:37:30] <companion_cube> it's not designed for that :/
[00:37:31] <vladimyr> saying just 4 is charitable interpretation of https://cheats.rs/#string-conversions
[00:37:32] <mockturtle> [ Rust Language Cheat Sheet ] - cheats.rs
[00:37:56] <iDrougge> companion_cube: Yes, it's a bit scary when people try to make it one.
[00:38:06] <iDrougge> Or use it as one, I mean.
[00:38:13] <companion_cube> oh well, good luck to them
[00:38:33] <companion_cube> I think the jvm or the CLR are probably the best application platforms at this point
[00:38:38] <vgel> well, i don't know. at work we use it for some api servers, and it works well
[00:38:44] <vgel> but we have really high performance requirements
[00:38:50] <companion_cube> (just pick F# on the CLR, and, scala3 or kotlin on the jvm?)
[00:39:15] <vladimyr> beam with erlang/elixir/gleam
[00:39:31] *** Quits: reno1 (~reno@2600:1700:7aa1:d630:4801:58f0:f654:6714) (Ping timeout: 268 seconds)
[00:39:59] <vgel> and i dabble in game development, where it's replacing c++, which I think in terms of complexity is probably a lateral move at least
[00:40:20] <vgel> *it's replacing c++ -> for me, not the game industry in general :)
[00:40:21] <iDrougge> Yes, it's long overdue in such niches.
[00:41:07] <ngoldbaum> i’d much rather spend a bunch of time getting code right the first time than spending time much later in valgrind or whatever after i realized something is broken
[00:41:17] <ngoldbaum> luv 2 fix random memory corruption bugs
[00:41:32] <vgel> yep, exactly
[00:41:35] <ngoldbaum> seg faults with completely random stack traces
[00:41:39] <ngoldbaum> lots of fun
[00:42:31] <vgel> but where it's replacing an interpreted language with a lot more developer base for ambiguous "performance!" goals without any optimization or performance testing of the original app... i mean, have fun i guess
[00:42:48] <vgel> tbf, that's somewhat a strawman
[00:43:51] <vladimyr> trading potential minuscule perf gains for significant development speed decrease
[00:44:31] <iDrougge> I'm worried that too much Rust hype in such sector will lead to a cooldown effect. People will burn themselves trying to port their Python or Go to Rust and swear never again to use a language with sum types or real type systems.
[00:45:09] <ngoldbaum> nah people will just write performance sensitive stuff in rust and keep everything else in python
[00:45:19] <ngoldbaum> same thing they’ve been doing with C for a decade or two
[00:45:22] <vgel> yeah, same. like what 99% of app shops need is sum types, exhaustive-by-default pattern matching, and composition over inheritance, not a GC-free borrow-checked language
[00:45:47] <vgel> ngoldbaum I hope so. PyO3 is awesome
[00:46:10] <vgel> but there's definitely a lot of hype for rewrite *everything* in rust
[00:46:17] *** Joins: reno1 (~reno@2600:1700:7aa1:d630:4801:58f0:f654:6714)
[00:46:25] * ngoldbaum has definitely wasted time debugging awful C extension bugs that rust wouldn’t have
[00:47:26] <vgel> we had this horrible python implementation of metropolis-hastings sampling in our pipeline that was multiprocess, tons of threading.Event and stuff everywhere, and I replaced it with a PyO3 rust module in like 2 days that's 10x faster *on a single thread*
[00:47:51] *** Quits: md618 (~md618@90.192.131.73) (Ping timeout: 256 seconds)
[00:48:16] <vgel> that's the code that had all the builtin functions hoisted into kwargs for performance lol
[00:50:16] *** Quits: torfbauer__ (~zim@dynamic-077-011-059-059.77.11.pool.telefonica.de) (Ping timeout: 250 seconds)
[00:51:34] *** Quits: reno1 (~reno@2600:1700:7aa1:d630:4801:58f0:f654:6714) (Ping timeout: 250 seconds)
[00:52:18] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[00:52:20] <vgel> though i've been interested in checking out julia as a faster replacement for python. I like the idea of writing the high-performance code in the same language as everything else, but still being python-like. having to write a rust extension is a high barrier to wanting to speed up *everything*, so you still end up with a lot of performance
[00:52:21] <vgel> papercuts that just aren't worth it
[00:54:16] <vladimyr> it is not /compiled python/ but nim comes very close to your description
[00:54:18] <bsandro> i'm slowly replacing internal python stuff that people complain about being slow with go potatoes
[00:55:13] <bsandro> even somewhat badly written they still outperform python with text/data processing and it doesn't take much time to reimplement stuff anyway
[00:56:17] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[00:57:10] <vgel> vladimyr right! I've played around with nim a few years ago and liked it, but it's matured a lot since then so I should definitely give it another look
[00:57:56] <pe> It's an awkward thing.
[00:59:12] *** Joins: reno1 (~reno@2600:1700:7aa1:d630:4801:58f0:f654:6714)
[00:59:36] *** Joins: vladoski (~foo@2001:b07:add:d406:f598:a556:af7d:d70e)
[01:03:53] *** Quits: jiqiren_ (~jiqiren@oh-hi.org) (Quit: leaving)
[01:04:27] *** Joins: arcatech (~arcatech@user/arcatech)
[01:05:00] *** Joins: jiqiren (~jiqiren@oh-hi.org)
[01:05:26] *** Quits: vladoski (~foo@2001:b07:add:d406:f598:a556:af7d:d70e) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:08:29] *** Joins: atw (~user@ool-18bf5678.dyn.optonline.net)
[01:10:25] *** Joins: cartesius (uid536719@id-536719.tinside.irccloud.com)
[01:12:32] * vgel thinks "this is so simple it doesn't need a test"
[01:12:37] * vgel writes test anyway
[01:12:46] * vgel it has a bug
[01:13:11] *** Joins: CHUD (~CHUD@host-80-41-89-108.as13285.net)
[01:15:03] *** Quits: atw (~user@ool-18bf5678.dyn.optonline.net) (Ping timeout: 256 seconds)
[01:16:39] <rb> ahh i can't wait until i can write tests
[01:16:42] <mockturtle> Local Privilege Escalation in polkit's pkexec [security] (df) https://lobste.rs/s/r3llin
[01:16:46] <rb> oh boy
[01:23:55] <varjag> vgel: bonus: the bug was in the test
[01:24:32] <vgel> that's the nightmare scenario
[01:24:42] <vgel> along with "turns out half our test suite hasn't been running for 2 weeks"
[01:25:48] <mockturtle> asciiMol: Curses based ASCII molecule viewer for linux terminals [visualization] (zem) https://lobste.rs/s/zcpmer
[01:25:50] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[01:26:15] *** Quits: _w1ntermute (~sven@dslb-084-057-144-135.084.057.pools.vodafone-ip.de) (Quit: Konversation terminated!)
[01:26:33] *** Quits: reno1 (~reno@2600:1700:7aa1:d630:4801:58f0:f654:6714) (Quit: WeeChat 3.4)
[01:27:58] *** Quits: polve (~polve@user/polve) (Ping timeout: 250 seconds)
[01:29:08] *** Joins: jmloyola (~jmloyola@170.150.8.2)
[01:30:41] *** Joins: polve (~polve@user/polve)
[01:31:19] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 268 seconds)
[01:32:03] <thardin> neat
[01:32:10] <JordiGH> /me is the new greentext
[01:32:41] *** Quits: dre (~dre@2001:8003:c932:c301:7948:9e4c:da1f:659b) (Quit: Leaving)
[01:32:43] <thardin> >be me
[01:32:58] <thardin> >notice /me doesn't really work with the same third person format
[01:33:10] *** Joins: dre (~dre@2001:8003:c932:c301:7948:9e4c:da1f:659b)
[01:34:15] <iDrougge> Neat. But what about all those who can't afford colour terminals?
[01:35:28] <thardin> not every IRC client renders /me green. irssi for example
[01:35:50] *** Quits: vgel (~vgel@2601:602:9603:d750:c4a4:18a0:84a4:9898) (Quit: Client closed)
[01:35:53] <thardin> also let's not encourage people to use colors
[01:36:30] <JordiGH> I recently had to figure out how to turn off that abomination in Hexchat.
[01:36:48] <iDrougge> No, that wouldn't work well for those still using Macintoshes with built-in screens.
[01:36:49] <thardin> lol
[01:36:51] <JordiGH> lol
[01:42:20] *** Quits: carlavilla (~carlavill@2a0c:5a84:320d:6900:221:6bff:fe3b:cee4) (Quit: awwww)
[01:46:11] *** Quits: dvn (~dvn@bnc.janky.solutions) (Excess Flood)
[01:49:11] *** Quits: CHUD (~CHUD@host-80-41-89-108.as13285.net) (Remote host closed the connection)
[01:49:27] *** Joins: CHUD (~CHUD@host-80-41-89-108.as13285.net)
[01:50:53] *** Joins: dvn (~dvn@bnc.janky.solutions)
[01:50:55] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[01:51:36] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[01:52:13] *** Quits: ur5us (~ur5us@2406:e002:6d58:d101:2b70:9bf7:d290:b791) (Ping timeout: 240 seconds)
[01:53:39] *** Joins: jx0 (~jx0@199.229.250.114)
[01:55:37] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[01:56:32] *** Joins: jmw (~jmw@user/jmw)
[01:57:14] *** Joins: ur5us (~ur5us@2406:e002:6d58:d101:2b70:9bf7:d290:b791)
[02:03:20] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[02:03:28] *** Joins: vgel (~vgel@2601:602:9603:d750:c4a4:18a0:84a4:9898)
[02:05:10] <mockturtle> The Big Fix: Fix Vulnerabilities, Get a Shirt [event] (rdegges) https://lobste.rs/s/se9sq0
[02:10:26] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 250 seconds)
[02:14:44] *** Joins: smoking_gnu476 (~smoking_g@c-71-205-186-218.hsd1.co.comcast.net)
[02:23:02] *** Quits: jmw (~jmw@user/jmw) (Quit: jmw)
[02:24:06] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[02:29:17] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 268 seconds)
[02:40:18] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[02:40:38] *** Quits: jx0 (~jx0@199.229.250.114) (Quit: poof!)
[02:40:57] *** Joins: jx0 (~jx0@199.229.250.114)
[02:42:56] *** Quits: smoking_gnu476 (~smoking_g@c-71-205-186-218.hsd1.co.comcast.net) (Ping timeout: 250 seconds)
[02:43:55] *** Quits: blindguard (~blindguar@2a02:908:1864:c200:e9df:eeac:1563:f38a) (Quit: Konversation terminated!)
[02:44:40] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 250 seconds)
[02:46:45] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[02:51:57] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[02:52:04] *** Joins: smoking_gnu476 (~smoking_g@c-71-205-186-218.hsd1.co.comcast.net)
[02:58:06] <pe> Colours are disabled on this channel.
[02:58:21] <pe> I don't think I remember any client colouring ACTIONs.
[03:00:38] <mockturtle> CVE-2022-0185 - Winning a $31337 Bounty after Pwning Ubuntu and Escaping Google's KCTF Containers [security linux] (lattera) https://lobste.rs/s/1wtblp
[03:03:49] *** Quits: smoking_gnu476 (~smoking_g@c-71-205-186-218.hsd1.co.comcast.net) (Ping timeout: 268 seconds)
[03:04:16] <vladimyr> Is anyone aware of the online list of (all) maintained IRC clients? Awesome IRC (clients)?
[03:05:07] *** Joins: art_vandelay (~art_vande@142.126.234.156)
[03:05:32] <vladimyr> https://github.com/davisonio/awesome-irc#clients
[03:05:33] <mockturtle> [ GitHub - davisonio/awesome-irc: A curated list of awesome IRC resources. ] - github.com
[03:05:41] <technomancy> might as well try to find a list of all the world's sandwich shops
[03:05:43] <vladimyr> Promising but lacks some popular choices...
[03:06:08] <technomancy> by the time you finish the list a new one will have been created
[03:06:13] <vladimyr> You don't think Google has that?
[03:06:38] <kline> i know of several clients that arent in that list that do appear elsewhere
[03:06:40] <kline> shame
[03:07:03] *** Quits: CHUD (~CHUD@host-80-41-89-108.as13285.net) (Ping timeout: 256 seconds)
[03:07:39] <kline> https://www.ilmarilauhakangas.fi/irc_technology_news_from_the_second_half_of_2021/
[03:07:39] <mockturtle> [ IRC technology news from the second half of 2021 ] - www.ilmarilauhakangas.fi
[03:08:02] <kline> theres a big list of irc stuff that had changes, including numerous clients
[03:08:34] <vladimyr> Oh yeah, saw that back in the day
[03:11:35] *** Quits: fridim (~fridim@82.66.95.80) (Ping timeout: 256 seconds)
[03:13:46] <vladimyr> Sidenote this bearblog hugo theme is just great
[03:14:32] *** Quits: dre (~dre@2001:8003:c932:c301:7948:9e4c:da1f:659b) (Ping timeout: 240 seconds)
[03:14:42] <vladimyr> As bearblog itself https://bearblog.dev/
[03:14:42] <mockturtle> [ ʕ•ᴥ•ʔ Bear Blog ] - bearblog.dev
[03:17:58] <pe> I started my own IRC client in 2015, and I'm the only user.
[03:18:12] *** Joins: fridim (~fridim@82.66.95.80)
[03:18:13] <pe> I'd like to rewrite it, but so much time has been invested in it...
[03:19:17] <pe> Still might succeed in making a remote GUI for it.
[03:21:35] <vladimyr> So you are saying you didn't rewrite it in Rust yet? :P
[03:21:53] <pe> I was considering Go, but it turned out to be pointless, because its libraries suck.
[03:21:58] <leonardo> what language you used for you irc client? have you used any library or you made the protocol from scratch?
[03:22:34] <pe> C from scratch, on top of GNU Readline. And some Lua plugins.
[03:23:49] <technomancy> I made an IRC bot from scratch in Fennel using nothing but a TCP sockets library.
[03:24:01] <pe> In theory I could redirect Readline rendering and cursify it...
[03:24:04] <technomancy> it's ~250 lines with around 80 being specific to the IRC parts
[03:24:13] <indigo> technomancy: Link? Or is it private?
[03:24:44] <technomancy> https://git.sr.ht/~technomancy/pengbot
[03:24:44] <mockturtle> [ ~technomancy/pengbot - sourcehut git ] - git.sr.ht
[03:25:03] <technomancy> I also have a variant of that running on an esp8266 microcontroller hooked into LED strips in my office
[03:25:15] <indigo> Ah, Zhuangzi :D
[03:25:18] <technomancy> but I had to remove some features to make it fit in 80kb of ram
[03:25:57] <technomancy> my favorite IRC bots are completely inexplicable which is why I named it after the p'eng passage, yeah
[03:26:42] <c355E3B> Like mockturtle''s peek command?
[03:27:10] <technomancy> oh, I don't know that one
[03:27:56] <technomancy> clojurebot used to have a random chance that it would interpret any line said in the channel as directed towards it, plus it had fuzzy matching on its key/value lookup store so it had some surreal moments
[03:29:27] <vladimyr> technomancy @technomancy:libera.chat: I'm curious, what do you think about Phel? (https://phel-lang.org/)
[03:30:20] <technomancy> hm; don't really know anything about it. looks awfully odd using # for comments and having backslashes in symbols tho.
[03:31:13] <technomancy> I'm sympathetic to wanting to put better syntax on a runtime you're stuck with, but for that to work well the underlying VM has to offer reasonable semantics, and that seems, uh, unlikely here =)
[03:31:29] <technomancy> I know hylang has had a hell of a time with this as they've had to work around mistakes in python's scoping design
[03:32:39] <c355E3B> Lisp on Neko?
[03:33:32] <vladimyr> Haxelang Neko?
[03:33:39] <technomancy> what's neko?
[03:34:23] <c355E3B> https://nekovm.org/
[03:34:23] <mockturtle> [ NekoVM ] - nekovm.org
[03:34:49] <jdmark> cool
[03:35:05] <jdmark> it's always nice to know what goes into designing a programming language
[03:35:08] <technomancy> huh, so like a runtime specifically designed as a compilation target for language designers?
[03:35:18] <vladimyr> Didn't they move away from it and focused on Hashlink development?
[03:35:35] <vladimyr> https://hashlink.haxe.org/
[03:35:36] <mockturtle> [ HashLink - Haxe Virtual Machine ] - hashlink.haxe.org
[03:35:42] <c355E3B> Yeah Hashlink is where all the money is being spent right now
[03:35:52] <c355E3B> but IMO Neko still works for a lot of stuff
[03:36:31] <technomancy> "But if you have a dynamically typed language or no class system, you'll have to trick the virtual machine and find a type mapping from your type system to the JVM or the .NET one." IIUC this is a huge problem with .NET and not at all with the JVM because of type erasure
[03:36:56] <c355E3B> Didn't self solve that issue?
[03:37:00] <c355E3B> I feel like they did
[03:37:53] <vladimyr> They produce some really interesting tech but it is sadly mostly unknown to a wider audience
[03:37:57] *** Quits: varjag (~user@ti0040a400-5479.bb.online.no) (Ping timeout: 240 seconds)
[03:39:02] <technomancy> neko claiming to be "more object oriented" is a bit of a red flag
[03:39:04] *** Joins: ka80 (~ka80@111.60.138.34.bc.googleusercontent.com)
[03:39:10] *** Quits: timj (~timj@user/timj) (Quit: Leaving.)
[03:39:16] *** Joins: timj (~timj@user/timj)
[03:39:32] <technomancy> ironic because with static vs dynamic they're like "the VM shouldn't be tied to a specific language detail like static types" but then they go and embed OOP in their VM
[03:40:06] <technomancy> neko strings are mutable =(
[03:41:36] <technomancy> overall seems like ... slightly worse than lua, which is still very good =)
[03:42:15] <vladimyr> Where do you place teal on that scale? :)
[03:42:51] <technomancy> oh man ...  I really want teal to succeed, but right now it seems a long way away from being useful since their type system completely punts on handling nil
[03:43:03] <kline> i gave up on learning anything about neko because i check about 8 pages looking for a sample of what it looked like and found only a hello world
[03:43:15] <technomancy> apparently they hope to fix this in the future but right now it feels rather useless
[03:43:22] <kline> i did find out that its pronounced n[e]ko, not n[i]ko though
[03:43:29] <imode> neh-ko
[03:43:41] <technomancy> like ... why build a type system to catch type errors, and then be like "except we can't catch the single most common type error in existence, we only catch ... you know, like ... all the other ones"
[03:43:57] <technomancy> that's a golang level design fuckup
[03:44:05] <vladimyr> That's weird, didn't know that
[03:44:08] <kline> so i guess i know that their priorities lie with the correct japanese pronounciation and not developer onboarding
[03:44:41] <c355E3B> I'm a big fan of the ecosystem, but it suffers from the Ocaml problem
[03:45:41] <imode> what's the ocaml problem.
[03:46:17] <vladimyr> Well neko wasn't meant to be widely advertised in contrast to haxe that is/was relying on it
[03:47:02] <c355E3B> imode: it being so heavily tied to INIRA kept it from gaining adoption outside of the french sphere for a while
[03:47:55] <vladimyr> that's a recurring theme with French-made stuff
[03:48:07] <vladimyr> redlang fits in that bucket too
[03:49:33] <technomancy> is inria academic or commercial?
[03:49:52] <thardin> yes
[03:49:57] <pe> :)
[03:50:11] <vladimyr> academic afaik?
[03:50:23] <pyrho> yes I think so too
[03:50:34] <thardin> mostly academic I think, but no doubt plenty of overlap
[03:50:57] *** Quits: ur5us (~ur5us@2406:e002:6d58:d101:2b70:9bf7:d290:b791) (Ping timeout: 240 seconds)
[03:50:58] <thardin> it's not unusual for academic groups to also have a leg in the business side of things
[03:51:30] <mockturtle> ribosome: Haskell extension framework for neovim [haskell] (srid) https://lobste.rs/s/fjaqee
[03:51:42] <pyrho> nice
[03:53:21] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[03:53:27] <vladimyr> kline: lots of neko examples on rosetta https://rosettacode.org/wiki/Category:Neko
[03:53:29] <mockturtle> [ Category:Neko - Rosetta Code ] - rosettacode.org
[03:53:51] <kline> damn
[03:53:56] <kline> rosetta code loading fast these days
[03:53:58] <kline> thats nice to see
[03:54:26] <technomancy> c355E3B: is it a problem of having an overbearing maintainer who is not open to contributions from outside the in-group?
[03:55:00] <technomancy> that feels like a really common problem tbh
[03:55:08] <technomancy> like ... every language I've ever used, maybe?
[03:55:13] <c355E3B> Yes but that’s everything
[03:55:31] <c355E3B> Like at some level, you need to have some kind of filter
[03:55:40] <technomancy> in-groups gonna in-group
[03:56:00] <c355E3B> It’s like me trying to sneak extra instructions into ppc
[03:56:05] <mockturtle> Reverse engineering the 1988 NeXT keyboard protocol [hardware reversing] (calvin) https://lobste.rs/s/ulq6h1
[03:56:07] <technomancy> lol
[03:56:21] <c355E3B> They can’t stop me forever
[03:57:41] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[03:58:45] <vladimyr> technomancy @technomancy:libera.chat: that OOP flavor baked inside neko vm is probably a consequence of it being inspired by actionscript vms
[03:59:53] *** Quits: cartesius (uid536719@id-536719.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[03:59:57] <pe> Loading fast?
[04:00:38] <vladimyr> According to my understanding haxe started as /flash everywhere/ similar like adobe air did
[04:00:40] *** Joins: CHUD (~CHUD@host-80-41-89-108.as13285.net)
[04:00:41] <technomancy> vladimyr: I'm honestly very sympathetic to the motivations behind neko; it's just up against some real tough competition that has a huge head start
[04:01:07] <kline> pe, rosettacode was underprovisioned for a long time, it used to take double-digit seconds to load some of the larger pages
[04:02:15] <vladimyr> They didn't instead to compete with anyone, just wanted to build something that would allow them to run flash like stuff outside of flash player
[04:02:27] *** Joins: varjag (~user@ti0040a400-5479.bb.online.no)
[04:02:38] <vladimyr> *wanted (damn autocorrect)
[04:03:53] *** Quits: hexa- (~hexa-@juno.lossy.network) (Quit: WeeChat 3.3)
[04:05:25] <technomancy> ah, well the way they position it now, they seem to be competing
[04:05:37] *** Quits: Vaelatern (~Vaelatern@voidlinux/maintainer/Vaelatern) (Ping timeout: 240 seconds)
[04:06:57] *** Quits: bpmedley (~bpmedley@2600:1700:e2c:8410:d87d:8fa:c490:9ed) (Ping timeout: 240 seconds)
[04:07:12] *** Quits: seschwar (~seschwar@user/seschwar) (Quit: :wq)
[04:07:31] <vladimyr> I guess you are right, historically it was just a means to an end for developing flash-era indie games
[04:07:44] <pe> Wait, haxe is something other than a Flash replacement?
[04:07:50] <technomancy> well, I mean, where it came from originally vs what they want to do with it now could very well be different
[04:07:55] <technomancy> nothing wrong with that
[04:08:20] <vladimyr> Eventually evolved into something more than that if you ask me
[04:08:48] *** Joins: dsrt^ (~dsrt@96-86-240-178-static.hfc.comcastbusiness.net)
[04:10:40] *** Joins: Vaelatern (~Vaelatern@cpe-76-183-97-243.tx.res.rr.com)
[04:10:40] *** Quits: Vaelatern (~Vaelatern@cpe-76-183-97-243.tx.res.rr.com) (Changing host)
[04:10:40] *** Joins: Vaelatern (~Vaelatern@voidlinux/maintainer/Vaelatern)
[04:10:45] <vladimyr> I mean it compiles to everything you could imagine and provides decent stdlib but I doubt it sees much usage outside of indie gamedev world
[04:11:24] *** Joins: hexa- (~hexa-@juno.lossy.network)
[04:11:51] *** Quits: varjag (~user@ti0040a400-5479.bb.online.no) (Ping timeout: 256 seconds)
[04:12:13] *** Quits: CHUD (~CHUD@host-80-41-89-108.as13285.net) (Ping timeout: 256 seconds)
[04:24:26] *** Joins: bpmedley (~bpmedley@2600:1700:e2c:8410:1069:cffb:776b:6679)
[04:34:45] *** Joins: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com)
[04:37:29] *** Quits: giusb (~giusb@user/giusb) (Quit: WeeChat 3.3)
[04:42:40] *** Joins: l__q (~modinfo@user/modinfo)
[04:46:37] *** Joins: CHUD (~CHUD@host-80-41-89-108.as13285.net)
[04:48:31] *** Joins: torfbauer__ (~zim@dynamic-077-011-059-059.77.11.pool.telefonica.de)
[04:49:48] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[04:50:51] *** Quits: punkeel (~punkeel@user/punkeel) (Ping timeout: 276 seconds)
[04:51:54] *** Joins: punkeel (~punkeel@user/punkeel)
[04:54:21] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[04:57:01] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[04:58:19] *** Quits: ka80 (~ka80@111.60.138.34.bc.googleusercontent.com) (Ping timeout: 256 seconds)
[04:59:21] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[05:05:00] *** Quits: jx0 (~jx0@199.229.250.114) (Remote host closed the connection)
[05:09:38] *** Quits: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[05:13:04] *** Joins: ur5us (~ur5us@2406:e002:6d58:d101:2b70:9bf7:d290:b791)
[05:16:31] *** Joins: jx0 (~jx0@199.229.250.114)
[05:20:32] *** Joins: smoking_gnu476 (~smoking_g@c-71-205-186-218.hsd1.co.comcast.net)
[05:21:44] <mockturtle> LunarML: A Standard ML compiler that produces Lua [ml] (eatonphil) https://lobste.rs/s/x1sxum
[05:43:45] *** Joins: dre (~dre@2001:8003:c932:c301:c799:698e:a7d8:4ce6)
[05:46:53] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-08e4-8030-e2cd-d870.res6.spectrum.com)
[05:50:41] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[05:51:57] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 240 seconds)
[05:52:53] *** Quits: x88x88x (~x88x88x@149.28.53.172) (Read error: Connection reset by peer)
[05:53:05] *** Quits: CHUD (~CHUD@host-80-41-89-108.as13285.net) (Ping timeout: 256 seconds)
[05:58:38] *** Quits: jmloyola (~jmloyola@170.150.8.2) (Quit: Lost terminal)
[06:05:08] *** Joins: l__q (~modinfo@user/modinfo)
[06:06:50] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[06:18:55] *** Joins: supersandro20005 (~supersand@i5C756450.versanet.de)
[06:18:56] *** Quits: supersandro2000 (~supersand@i5C75614B.versanet.de) (Killed (calcium.libera.chat (Nickname regained by services)))
[06:18:56] *** supersandro20005 is now known as supersandro2000
[06:23:21] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-08e4-8030-e2cd-d870.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[06:24:51] *** Joins: califax- (~califax@user/califx)
[06:28:21] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[06:28:21] *** califax- is now known as califax
[06:31:07] *** Joins: atw (~user@ool-18bf5678.dyn.optonline.net)
[06:32:22] *** Joins: solocshaw (~Thunderbi@gateway/vpn/pia/solocshaw)
[06:33:33] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[06:36:20] *** Quits: vow (~daze@189.127.141.75) (Quit: leaving)
[06:37:27] <jdmark> Sup
[06:54:08] *** Joins: Gomme (~Gomme@2a01:cb10:86d5:a500:17c:2e43:27eb:9f6d)
[07:06:57] *** Quits: art_vandelay (~art_vande@142.126.234.156) (Ping timeout: 256 seconds)
[07:08:43] *** Joins: art_vandelay (~art_vande@142.126.234.156)
[07:09:31] *** Quits: Adran (~adran@botters/adran) (Quit: Este é o fim.)
[07:14:26] *** Joins: jmw (~jmw@user/jmw)
[07:14:38] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 250 seconds)
[07:16:54] *** Joins: Adran (adran@botters/adran)
[07:23:27] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-08e4-8030-e2cd-d870.res6.spectrum.com)
[07:24:33] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-08e4-8030-e2cd-d870.res6.spectrum.com) (Client Quit)
[07:28:13] *** Parts: akkartik2 (538c7e6b31@2604:bf00:561:2000::24) ()
[07:31:20] *** Joins: cartesius (uid536719@id-536719.tinside.irccloud.com)
[07:35:02] *** Quits: smoking_gnu476 (~smoking_g@c-71-205-186-218.hsd1.co.comcast.net) (Ping timeout: 240 seconds)
[07:41:32] *** Joins: torfbauer_ (~zim@dynamic-078-055-167-233.78.55.pool.telefonica.de)
[07:43:57] *** Quits: torfbauer__ (~zim@dynamic-077-011-059-059.77.11.pool.telefonica.de) (Ping timeout: 240 seconds)
[07:48:22] *** Quits: ur5us (~ur5us@2406:e002:6d58:d101:2b70:9bf7:d290:b791) (Quit: Leaving)
[07:56:28] *** Joins: ur5us (~ur5us@2406:e002:6d58:d101:2b70:9bf7:d290:b791)
[07:59:56] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[07:59:59] *** Quits: torfbauer_ (~zim@dynamic-078-055-167-233.78.55.pool.telefonica.de) (Quit: Leaving)
[08:10:15] *** Joins: smoking_gnu476 (~smoking_g@c-71-205-186-218.hsd1.co.comcast.net)
[08:17:43] *** Joins: bones (~bones@pool-173-73-208-157.washdc.fios.verizon.net)
[08:18:49] *** Quits: bones (~bones@pool-173-73-208-157.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[08:19:54] *** Quits: ur5us (~ur5us@2406:e002:6d58:d101:2b70:9bf7:d290:b791) (Remote host closed the connection)
[08:23:39] *** Joins: bones (~bones@pool-173-73-208-157.washdc.fios.verizon.net)
[08:28:48] *** Quits: Irenes (~ireneista@user/ireneista) (Ping timeout: 268 seconds)
[08:30:45] *** Quits: bones (~bones@pool-173-73-208-157.washdc.fios.verizon.net) (Quit: Quit)
[08:31:03] *** Quits: lexik_ (~lexik@171.25.222.230) (Remote host closed the connection)
[08:32:12] *** Quits: strugee (~strugee@ool-4575d6b1.dyn.optonline.net) (Ping timeout: 250 seconds)
[08:32:16] *** Joins: lexik (~lexik@171.25.222.230)
[08:39:01] *** Quits: bontaq (~user@ool-45779fe5.dyn.optonline.net) (Ping timeout: 240 seconds)
[08:39:17] *** Quits: timj (~timj@user/timj) (Ping timeout: 240 seconds)
[08:41:01] *** Joins: strugee (~strugee@ool-4575d6b1.dyn.optonline.net)
[08:41:36] *** Joins: Irenes (~ireneista@user/ireneista)
[08:41:36] *** ChanServ sets mode: +o Irenes
[08:45:49] *** mclare_ is now known as mclare
[08:51:13] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[08:55:13] *** Joins: timj (~timj@user/timj)
[08:55:17] *** Quits: smoking_gnu476 (~smoking_g@c-71-205-186-218.hsd1.co.comcast.net) (Ping timeout: 240 seconds)
[09:05:40] *** Joins: ur5us (~ur5us@2406:e002:6d58:d101:23b2:b738:8a21:f7ed)
[09:08:53] *** Joins: the_lanetly_052 (~the_lanet@194.135.152.166)
[09:17:37] <mockturtle> Infix Operators in Python [python] (agent281) https://lobste.rs/s/bo4r0s
[09:24:54] *** Joins: aaron (~aaron@dsl-katy-207-70-135-154.consolidated.net)
[09:30:08] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[09:30:53] *** Quits: aaron (~aaron@dsl-katy-207-70-135-154.consolidated.net) (Quit: aaron)
[09:31:29] *** Joins: symb0l (~symb0l@dsl-katy-207-70-135-154.consolidated.net)
[09:34:16] *** Quits: symb0l (~symb0l@dsl-katy-207-70-135-154.consolidated.net) (Client Quit)
[09:34:17] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[09:34:53] *** Joins: symb0l (~symb0l@dsl-katy-207-70-135-154.consolidated.net)
[09:40:57] *** Quits: cartesius (uid536719@id-536719.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[09:53:38] *** Quits: symb0l (~symb0l@dsl-katy-207-70-135-154.consolidated.net) (Quit: symb0l)
[10:05:37] *** Quits: ur5us (~ur5us@2406:e002:6d58:d101:23b2:b738:8a21:f7ed) (Ping timeout: 240 seconds)
[10:28:06] *** Joins: jmml97 (~jmml97@185.red-81-32-105.dynamicip.rima-tde.net)
[10:34:17] *** Joins: GodEater_ (~godeater@user/godeater)
[10:35:42] *** Quits: GodEater (~godeater@user/godeater) (Ping timeout: 250 seconds)
[10:35:43] *** GodEater_ is now known as GodEater
[10:37:02] *** Quits: dasm (~dasm@2601:647:cd00:a4:5054:ff:feda:eded) (Ping timeout: 240 seconds)
[10:52:47] *** Quits: leon (~znc@user/leon) (Quit: see you later, alligator)
[10:53:06] *** Joins: leon (~znc@user/leon)
[10:57:26] *** Joins: dasm (~dasm@2601:647:cd00:a4:5054:ff:feda:eded)
[11:00:30] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 268 seconds)
[11:17:23] <mockturtle> argv silliness (polkit bug noticed in 2013) [security] (olliej) https://lobste.rs/s/tpvp4h
[11:20:16] *** Quits: jmw (~jmw@user/jmw) (Quit: jmw)
[11:21:40] *** Joins: CHUD (~CHUD@host-80-41-89-108.as13285.net)
[11:26:17] *** Quits: CHUD (~CHUD@host-80-41-89-108.as13285.net) (Ping timeout: 256 seconds)
[11:30:38] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:30:58] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[11:37:40] *** Quits: GodEater (~godeater@user/godeater) (Ping timeout: 250 seconds)
[11:38:35] *** Joins: Major_Biscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[11:41:03] *** Joins: mdepalol (~mdepalol@23.pool90-175-180.dynamic.orange.es)
[11:43:00] *** Joins: GodEater (~godeater@user/godeater)
[11:47:43] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[11:50:12] *** Joins: reneeontheweb (~reneeonth@90-228-217-81-no236.tbcn.telia.com)
[11:51:49] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[12:02:40] <mockturtle> LetsEncrypt: Issue with TLS-ALPN-01 Validation Method [security] (freddyb) https://lobste.rs/s/4wmbte
[12:08:20] *** Quits: Major_Biscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 268 seconds)
[12:14:37] *** Joins: ur5us (~ur5us@2406:e002:6d58:d101:23b2:b738:8a21:f7ed)
[12:16:11] *** Joins: _gabriele (~gabriele@user/gabriele)
[12:16:11] *** _gabriele is now known as gabriele
[12:23:28] *** Joins: punkeel_ (~punkeel@user/punkeel)
[12:23:54] *** Quits: punkeel (~punkeel@user/punkeel) (Ping timeout: 276 seconds)
[12:23:55] *** punkeel_ is now known as punkeel
[12:31:22] *** Joins: Major_Biscuit (~MajorBisc@c-001-019-027.client.tudelft.eduvpn.nl)
[12:36:07] *** Joins: xkuru (~xkuru@user/xkuru)
[12:40:30] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 250 seconds)
[12:41:36] *** Quits: mdepalol (~mdepalol@23.pool90-175-180.dynamic.orange.es) (Quit: leaving)
[12:41:57] *** Quits: jx0 (~jx0@199.229.250.114) (Quit: poof!)
[12:42:17] *** Joins: fwg (~fwg@user/fwg)
[12:42:22] *** Joins: mdepalol (~mdepalol@23.pool90-175-180.dynamic.orange.es)
[12:42:59] *** Joins: witx (~witx@a94-132-168-30.cpe.netcabo.pt)
[12:46:28] *** Quits: reneeontheweb (~reneeonth@90-228-217-81-no236.tbcn.telia.com) (Remote host closed the connection)
[12:46:40] *** Joins: reneeontheweb (~reneeonth@90-228-217-81-no236.tbcn.telia.com)
[12:54:51] *** Joins: cdown_ (~cdown@188.214.11.14)
[12:57:32] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 240 seconds)
[12:57:38] *** cdown_ is now known as cdown
[13:01:18] *** Joins: vladoski (~foo@2001:b07:add:d406:f598:a556:af7d:d70e)
[13:01:44] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[13:06:02] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[13:08:17] *** Joins: manjaroi3_ (~manjaro-i@gw25-pha-stl-mmo-1.avonet.cz)
[13:08:21] *** Parts: manjaroi3_ (~manjaro-i@gw25-pha-stl-mmo-1.avonet.cz) ()
[13:12:59] *** Joins: cdown_ (~cdown@163.114.131.1)
[13:15:25] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 240 seconds)
[13:15:26] *** cdown_ is now known as cdown
[13:15:47] <riv> morning
[13:17:26] *** Quits: ur5us (~ur5us@2406:e002:6d58:d101:23b2:b738:8a21:f7ed) (Quit: Leaving)
[13:17:44] *** Joins: varjag (~user@188.95.247.249)
[13:27:55] <mockturtle> Erlang/OTP profiling: eprof vs. AdventOfCode [erlang debugging] (vkatsuba) https://lobste.rs/s/pxkgqd
[13:29:21] <Major_Biscuit> riv: good morning
[13:38:19] *** Quits: DreamweaverN (~Dreamweav@37.48.111.199) (Ping timeout: 250 seconds)
[13:40:16] *** Joins: DreamweaverN (~Dreamweav@2001:1af8:4700:b0d0:a800::)
[13:54:54] *** Quits: vladoski (~foo@2001:b07:add:d406:f598:a556:af7d:d70e) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:55:56] <mockturtle> Julia macros for beginners [programming] (jnb) https://lobste.rs/s/q6zzmw
[13:56:16] *** Joins: vladoski (~foo@2001:b07:add:d406:f598:a556:af7d:d70e)
[13:56:40] *** Joins: CHUD (~CHUD@host-80-41-89-108.as13285.net)
[13:57:26] <mockturtle> Guiding Design Principles for Scientific Python [python] (zverok) https://lobste.rs/s/nbdcpf
[14:00:59] *** Quits: CHUD (~CHUD@host-80-41-89-108.as13285.net) (Ping timeout: 256 seconds)
[14:01:18] *** Joins: md618 (~md618@129.31.149.36)
[14:17:48] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[14:18:07] <mockturtle> Run Ordinary Rails Apps Globally [ruby scaling] (caius) https://lobste.rs/s/88hgjq
[14:22:43] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[14:38:28] *** Joins: tundra (~tundra@user/tundra)
[14:42:27] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[14:47:16] *** Quits: dsrt^ (~dsrt@96-86-240-178-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[14:51:28] *** Joins: l__q (~modinfo@user/modinfo)
[15:00:25] *** Quits: samythemany11 (~samythema@gateway/tor-sasl/samythemany) (Quit: Bridge terminating on SIGTERM)
[15:00:25] *** Quits: threenp11 (~threenp@gateway/tor-sasl/threenp) (Quit: Bridge terminating on SIGTERM)
[15:01:27] *** Joins: threenp (~threenp@gateway/tor-sasl/threenp)
[15:03:04] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 250 seconds)
[15:05:24] *** Quits: leodavinci (~leodavinc@59.91.73.63) (Read error: Connection reset by peer)
[15:06:24] *** Joins: l__q (~modinfo@user/modinfo)
[15:08:51] <rb> i just want to say, thank you lennart poettering
[15:10:37] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 240 seconds)
[15:11:38] <lep> ))
[15:12:42] <pe> Based Lennart.
[15:16:42] <riv> Anyone know that thing where youy use regex to compress javascript code>?
[15:17:35] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[15:17:37] <riv> is there a page I can paste my code into to compress like that?
[15:18:36] <riv> its used for js4k stuff
[15:19:28] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:22:35] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 268 seconds)
[15:24:57] <pe> What.
[15:25:26] <dutchie> are you talking about javascript minifiers?
[15:26:11] <rb> riv: https://duckduckgo.com/?q=javascript+minifier&t=ffab&ia=answer
[15:26:11] <mockturtle> [ javascript minifier at DuckDuckGo ] - duckduckgo.com
[15:26:18] <rb> instant answers are epic
[15:26:59] <riv> dutchie: no
[15:27:12] <jj5> I <3 duckduckgo
[15:27:43] *** Quits: echoSMILE (uid504326@user/echosmile) (Quit: Connection closed for inactivity)
[15:28:43] <pe> I only successfully use Duck for questionable queries.
[15:29:20] <rb> the only thing i want
[15:29:26] <rb> is for duck.com to not be a redirect
[15:29:31] <rb> i want to use duck.com for my search queries
[15:29:52] <lep> i only use duckduckgo
[15:29:57] <pe> https://www.youtube.com/watch?v=yhyAm31cr2E
[15:29:58] <mockturtle> [ QUACK KILLS by Psychostick w/lyrics ] - www.youtube.com
[15:30:01] <pe> Thematic.
[15:30:22] <lep> switch was made very easy as google really doesnt like no-cookies/no-js
[15:30:32] <lep> maybe it's better nowadays
[15:30:37] <lep> but what do i care
[15:31:04] <pe> In my experience, Duck is a tragic failure most of the time, as opposed to Google.
[15:31:40] <pe> Mainly with non-English queries.
[15:32:13] *** Joins: cdown_ (~cdown@188.214.11.14)
[15:32:32] *** Quits: visl (visl@user/visl) (Ping timeout: 240 seconds)
[15:35:32] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 240 seconds)
[15:35:35] *** cdown_ is now known as cdown
[15:35:55] *** Quits: vladoski (~foo@2001:b07:add:d406:f598:a556:af7d:d70e) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:36:38] <pretty_dumm_guy> Hi. Good day. I have a question for JS developers. I wanna use a javascript library as standalone for a website. However, the library uses node. Is it possible to do what I am trying ot do ?
[15:36:59] <pretty_dumm_guy> I have been trying to acheive this for a day now and I am frustated
[15:37:36] <riv> pretty_dumm_guy: https://duckduckgo.com/?q=use+javascript+node+standalone&t=ffab&ia=answer instant answers are epic
[15:37:36] <mockturtle> [ use javascript node standalone at DuckDuckGo ] - duckduckgo.com
[15:39:32] <pretty_dumm_guy> riv: many thanks. I somehow didnt think of this and have been breaking my head looking at the JS spec
[15:41:36] <pe> This is now my favourite Wikipedia page https://hy.wikipedia.org/wiki/Str%C4%8D_prst_skrz_krk
[15:41:37] <mockturtle> [ Strč prst skrz krk - Վիքիպեդիա՝ ազատ հանրագիտարան ] - hy.wikipedia.org
[15:42:42] *** Joins: vladoski (~foo@2001:b07:add:d406:f598:a556:af7d:d70e)
[15:46:52] *** Joins: on^ (~on@96-86-240-178-static.hfc.comcastbusiness.net)
[15:52:23] *** Joins: cdown_ (~cdown@163.114.131.1)
[15:55:04] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 250 seconds)
[15:55:11] *** cdown_ is now known as cdown
[16:06:42] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[16:08:30] *** Quits: sliced (~sliced@nat-185-238-205-210.kampinostelco.pl) (Ping timeout: 250 seconds)
[16:09:32] *** Quits: polve (~polve@user/polve) (Ping timeout: 240 seconds)
[16:10:17] <kline> https://en.wikipedia.org/wiki/Str%C4%8D_prst_skrz_krk for those following at home
[16:10:17] <mockturtle> [ Strč prst skrz krk - Wikipedia ] - en.wikipedia.org
[16:11:31] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[16:12:24] *** Joins: polve (~polve@user/polve)
[16:18:46] *** Quits: yano (~yano@ircpuzzles/staff/yano) (Quit: WeeChat, the better IRC client, https://weechat.org/)
[16:20:33] <mockturtle> Programming with Generators [pdf compsci programming plt] (vrthra) https://lobste.rs/s/qrchkm
[16:20:50] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[16:20:50] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[16:20:50] *** Joins: JordiGH (~jordi@user/jordigh)
[16:20:52] *** Joins: yano (~yano@ircpuzzles/staff/yano)
[16:25:49] <rb> kline: idk why but that 3 seconds of a guy saying the sentence followed by 30 seconds of credits is hilarious to me
[16:27:00] <kline> esp when all the credit entries are the same guy
[16:27:04] <kline> its very wikipedia
[16:35:44] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Quit: WeeChat 3.2.1)
[16:37:07] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[16:39:52] *** Joins: vow (~daze@189.127.141.75)
[16:40:14] <mockturtle> Lock-Free Locks Revisited [compsci c++] (crstry) https://lobste.rs/s/tkvmgr
[16:48:32] *** Quits: Major_Biscuit (~MajorBisc@c-001-019-027.client.tudelft.eduvpn.nl) (Ping timeout: 240 seconds)
[16:53:10] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[16:55:15] *** Joins: Major_Biscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[16:56:32] *** Joins: citizen_stig (~citizen_s@2001:982:9f64:1:443c:7bd0:8f3c:6772)
[16:57:59] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[17:01:26] *** Quits: vgel (~vgel@2601:602:9603:d750:c4a4:18a0:84a4:9898) (Quit: Client closed)
[17:02:58] *** Joins: CHUD (~CHUD@host-80-41-89-108.as13285.net)
[17:06:26] *** Quits: reneeontheweb (~reneeonth@90-228-217-81-no236.tbcn.telia.com) (Quit: Client closed)
[17:07:25] *** Quits: CHUD (~CHUD@host-80-41-89-108.as13285.net) (Ping timeout: 256 seconds)
[17:11:01] *** Quits: YellowSuB (~YellowSuB@user/yellowsub) (Ping timeout: 256 seconds)
[17:12:53] *** Joins: YellowSuB (~YellowSuB@user/yellowsub)
[17:13:42] <legit> My life changed now that I can edit over SSH using the VSCode Remote SSH extension. Has this been a thing for other editors/IDEs and I'd been ignorant all these years?
[17:14:15] <wink> legit: it's not a new concept at all but the execution has ranged from ok' to abysmal
[17:14:48] <wink> legit: I do remember using it on windows in 2006/07, I think. with Zend Studio (iirc?)
[17:15:17] <aram> legit: sam has been doing this since the early 80s.
[17:15:25] <wink> also jetbrains is doing something like this now I guess? and in approx. 148 seconds someone will shout emacs
[17:15:28] <aram> except it wasn't ssh, but various kind of serial links.
[17:16:04] <wink> but yeah, for me vs code's version is the first that is actually nice to use and didn't need tons of fiddling
[17:16:17] <legit> vscode is even doing port forwarding seamlessly
[17:16:18] <aram> I am doing it in acme, with a technology very different and in some ways inferior to sam's, but it works very well for me.
[17:16:32] *** Quits: witx (~witx@a94-132-168-30.cpe.netcabo.pt) (Ping timeout: 250 seconds)
[17:17:34] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[17:22:10] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 250 seconds)
[17:25:04] <varjag> wink: emacs indeed can do that, even with multiple ssh hops
[17:27:55] <gerikson> I remmebr doing it on emacs years ago
[17:28:41] <varjag> before it was hip!
[17:28:44] <wink> no comment on 'nice' though :D
[17:29:00] *** Quits: solocshaw (~Thunderbi@gateway/vpn/pia/solocshaw) (Ping timeout: 268 seconds)
[17:31:34] <riv> legit: emacs tramp mode has been around forever basically
[17:31:51] *** Joins: bontaq (~user@ool-45779fe5.dyn.optonline.net)
[17:31:59] *** Joins: witx (~witx@a94-132-168-30.cpe.netcabo.pt)
[17:34:49] *** Quits: atw (~user@ool-18bf5678.dyn.optonline.net) (Ping timeout: 256 seconds)
[17:38:32] <mockturtle> Automatically retrying an asynchronous Swift Task [swift] (napkindrawing) https://lobste.rs/s/faaxxd
[17:51:25] <gwozniak> Yeah, I've done editing over SSH with Emacs for a while
[17:52:31] <bkhl> I use it for developing on local VMs, that works excellently.
[17:52:53] <bkhl> Over remote connections it's a bit more hit and miss.
[17:53:30] <bkhl> I've been thinking about prototyping an alternative to Tramp that works like the VScode extensions.
[17:53:34] <gwozniak> On remote connections I have found it's a bit laggy and yeah, I run Emacs remotely for that
[17:53:43] <bkhl> I.e. run Emacs headless on the remote end and communicate by sending S-exps back and forth
[17:54:13] <varjag> so emacsclient
[17:54:18] <bkhl> Hm.
[17:54:56] <bkhl> If you could connect Emacs to multiple Emacs servers at once, yes.
[17:55:16] <bkhl> Maybe you can, actually worth looking into.
[18:00:13] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-14e7-49c4-8e85-9c7b.res6.spectrum.com)
[18:00:59] <gwozniak> In truth, I don't use Emacs over SSH for my local VM because remote debugging doesn't quite work
[18:01:31] <gwozniak> More accurately, navigating the source in the debugger remotely doesn't quite work
[18:02:14] <mockturtle> Micro C: A compiler for a small subset of C to LLVM in Haskell [c haskell compilers] (av) https://lobste.rs/s/eijt2h
[18:13:21] *** Quits: on^ (~on@96-86-240-178-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[18:16:26] *** Joins: voltage_ (voltage@user/voltage)
[18:22:42] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[18:27:31] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[18:30:43] *** Joins: seschwar (~seschwar@user/seschwar)
[18:33:30] <mockturtle> Static Typing Python Decorators [python] (calvin) https://lobste.rs/s/j00l7v
[18:36:52] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-14e7-49c4-8e85-9c7b.res6.spectrum.com) (Remote host closed the connection)
[18:45:27] *** Joins: CHUD (~CHUD@host-80-41-89-108.as13285.net)
[18:47:20] *** Quits: CHUD (~CHUD@host-80-41-89-108.as13285.net) (Remote host closed the connection)
[18:48:57] *** Quits: thelazyoxymoron (~thelazyox@49.207.203.188) (Ping timeout: 240 seconds)
[18:58:39] *** Quits: KerusEnfau (~EnfauKeru@gateway/tor-sasl/enfaukerus) (Remote host closed the connection)
[18:59:01] *** Joins: KerusEnfau (~EnfauKeru@gateway/tor-sasl/enfaukerus)
[19:00:17] *** Quits: citizen_stig (~citizen_s@2001:982:9f64:1:443c:7bd0:8f3c:6772) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:01:37] *** Quits: art_vandelay (~art_vande@142.126.234.156) (Ping timeout: 240 seconds)
[19:03:25] *** Joins: art_vandelay (~art_vande@142.126.234.156)
[19:05:47] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[19:13:32] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 250 seconds)
[19:16:28] *** Joins: jmw (~jmw@user/jmw)
[19:17:42] *** Quits: smitop[m] (~smitopkde@2001:470:69fc:105::1:117) (Quit: Client limit exceeded: 20000)
[19:17:56] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[19:18:27] *** Quits: zygonsisyphus[m] (~zygonsisy@2001:470:69fc:105::482) (Quit: Client limit exceeded: 20000)
[19:19:10] *** Quits: nworb (~zbrownm]@2001:470:69fc:105::1:33db) (Quit: Client limit exceeded: 20000)
[19:22:57] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[19:25:15] *** Joins: arcatech (~arcatech@user/arcatech)
[19:30:30] <bsandro> new mbp with m1pro arrived, darn feels they've at least tried with this one, feels so much better than 2019 model
[19:30:30] *** Joins: nworb (~zbrownm]@2001:470:69fc:105::1:33db)
[19:30:31] *** Joins: smitop[m] (~smitopkde@2001:470:69fc:105::1:117)
[19:30:31] *** Joins: zygonsisyphus[m] (~zygonsisy@2001:470:69fc:105::482)
[19:32:00] <JordiGH> Hm, we're replacing JIRA with clickup.
[19:32:11] *** Joins: sliced (~sliced@public-gprs539159.centertel.pl)
[19:32:27] *** Quits: varjag (~user@188.95.247.249) (Quit: ERC (IRC client for Emacs 26.3))
[19:33:08] *** Quits: sliced (~sliced@public-gprs539159.centertel.pl) (Read error: Connection reset by peer)
[19:35:03] <dmc> https://github.com/j-hui/fidget.nvim
[19:35:04] <mockturtle> [ GitHub - j-hui/fidget.nvim: Standalone UI for nvim-lsp progress ] - github.com
[19:36:29] <JordiGH> Anyone have any opinions on clickup? First time I hear about it.
[19:38:56] *** Joins: aja (~user@static24-72-139-17.r.rev.accesscomm.ca)
[19:39:02] *** n_shp is now known as nshp
[19:39:58] <JordiGH> Clickup doesn't even have a Wikipedia page. :-/
[19:40:04] <JordiGH> how am I supposed to know what it is
[19:40:24] <kline> its everything
[19:40:32] <kline> it says right there on their homepage, one app to replace them all
[19:40:49] *** Joins: citizen_stig (~citizen_s@2001:982:9f64:1:41f3:70b3:46bb:841e)
[19:41:13] *** Quits: jmml97 (~jmml97@185.red-81-32-105.dynamicip.rima-tde.net) (Quit: WeeChat 3.0.1)
[19:41:30] <riv> got a git question
[19:41:41] <riv> can rebasing make commits that did compile, into ones that don't?
[19:45:30] <JordiGH> Yes. A rebase is a rewrite.
[19:45:32] <pushcx> It seems like it should be possible if a patch applies in the wrong place to break syntax.
[19:45:39] *** Quits: vladoski (~foo@2001:b07:add:d406:f598:a556:af7d:d70e) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:45:54] *** Quits: witx (~witx@a94-132-168-30.cpe.netcabo.pt) (Ping timeout: 268 seconds)
[19:46:13] <JordiGH> It really should be called "rewriting", you use `git rebase` a lot more to rewrite than to change the base.
[19:46:14] *** Joins: vladoski (~foo@2001:b07:add:d406:f598:a556:af7d:d70e)
[19:46:35] <iDrougge> Yes, but Linus Torvalds "designed" it.
[19:46:41] <kline> riv, yes
[19:47:16] <riv> well that sucks
[19:47:17] <JordiGH> iDrougge: As much as I wanna blame Linus for this, by far most of the design is due to Hamanio.
[19:47:35] <JordiGH> Linus called it a cache. Hamanio called it an index. Everyone else calls it a staging area.
[19:47:43] <riv> I think that I may want to avoid rebasing a lot then, because I prefer to have commits that compile for bisection reasons
[19:48:02] <JordiGH> riv: Rebase drafts, don't rebase published commits.
[19:48:07] <kline> rebasing is a tool, not a practice
[19:48:12] <iDrougge> JordiGH: How sad, I like to blame Linus for name value.
[19:48:15] <kline> so im not sure that you can reasonably say "im just never rebasing"
[19:48:34] *** Joins: heeeee (~heeeee@179-67-23-244.user3g.veloxzone.com.br)
[19:48:36] <riv> I didnt say that
[19:48:50] *** Quits: heeeee (~heeeee@179-67-23-244.user3g.veloxzone.com.br) (Remote host closed the connection)
[19:49:09] <JordiGH> iDrougge: Linus did blob-tree-commit-ref and went back to sleep. Everything else is Hamanio.
[19:49:34] <edk> i think rebasing actually makes bisect better
[19:49:37] <iDrougge> 😔
[19:49:42] <riv> I've never really understood why conversations work like this. Person says one thing, another person quotes them as saying something completely different
[19:49:46] <edk> you do need to check that your rebased stuff compiles, obviously
[19:50:06] <kline> riv, what im getting at is that git rebase doesnt inherently make your bisects more or less likely to succeed
[19:50:14] <riv> edk: of course ill check the top commit builds/fix it so that it builds. but rebasing will affect a whole chain of commits - it's those ones im worried about
[19:50:20] <kline> some uses will make it less likely to succeed, some will make it more likely to succeed
[19:50:25] <shapr> riv: words don't exactly fit thoughts, best to repeat back to someone what you think they said, using different words
[19:50:33] <edk> riv: it is possible to check those too, if you want to
[19:50:36] <JordiGH> riv: Communication involves two partners and those two partners are seldom on equal ground. You flap your oral meats to push out air and you hope that air excites my timpanum to replicate your thoughts in my head.
[19:50:40] <riv> I don't want to
[19:50:52] <kline> JordiGH, theyre made out of meat?
[19:50:56] <edk> how do you know they compile in any case then
[19:51:00] <JordiGH> kline: Yes, it's disgusting.
[19:51:11] <edk> i don't normally compile every commit i do
[19:51:15] <kline> JordiGH, i suggest we just mark this sector empty
[19:51:21] <edk> i definitely don't run my ci
[19:51:31] <riv> edk: really? how do you avoid committing code that doesn't build?
[19:51:39] <edk> i don't
[19:52:04] <riv> ok so your advice on this seems to be coming from a rather different point of view
[19:52:17] <edk> i suspect that this is relatively representative
[19:52:22] *** JohnDoe[m]12 is now known as pacu[m]
[19:52:44] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[19:52:48] <edk> if your workflow is you only ever commit right after compiling and running your tests and then treat commits as immutable, i can see why you'd want to keep treating them as immutable
[19:53:08] <riv> how do you use git bisect?
[19:53:16] <riv> if you have random commits in your history that dont even build
[19:53:28] <dutchie> git bisect skip
[19:53:56] <edk> i don't accidentally have commits that don't build very often, i just don't have a process that prevents it
[19:54:05] <edk> and i claim you can't prevent this except by making your ci run on every commit
[19:54:14] <edk> (as opposed to every push)
[19:54:28] *** Quits: vladoski (~foo@2001:b07:add:d406:f598:a556:af7d:d70e) (Quit: Textual IRC Client: www.textualapp.com)
[19:55:07] <nshp> push to a branch, CI the branch, merge when CI passes or rewrite the branch until it does?
[19:55:13] <edk> yeah
[19:55:39] <edk> so basically like most people do anyway but runs are either going to take a lot longer or be a lot more parallel
[19:55:55] <edk> it's possible i'm very biased, but most people that i've spoken to don't work on code entirely serially
[19:56:02] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Quit: ZNC - https://znc.in)
[19:56:28] <edk> i'll make 2½ changes, testing as i go, then commit them with git add -p
[19:56:31] *** Joins: Zedronar (~Zedronar@cpc158777-hari22-2-0-cust169.20-2.cable.virginm.net)
[19:56:46] <charlie_sando> 2 1/2
[19:56:59] <charlie_sando> How did you make that sweet fraction edk
[19:57:06] <edk> i typed <Compose> 1 2
[19:57:10] <nshp> yeah, I do that, but at least when I'm feeling nice and responsible, I then `stash` the rest and build/test locally
[19:57:45] <nshp> (to be fair, I frequently feel irresponsible)
[19:59:01] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 250 seconds)
[20:00:30] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[20:00:48] *** Quits: xse (~xse@user/xse) (Remote host closed the connection)
[20:01:21] <iDrougge> charlie_sando: I have added an auto replacement in MacOS's system settings. Just type 1/2 and space.
[20:01:39] *** Joins: jmloyola (~jmloyola@170.150.8.2)
[20:01:48] *** Joins: 077AAE8MJ (~sven@dslb-084-057-144-135.084.057.pools.vodafone-ip.de)
[20:02:40] *** Joins: xse (~xse@user/xse)
[20:06:10] <gwozniak> edk: I work very similarly
[20:06:11] *** Joins: solocshaw (~Thunderbi@gateway/vpn/pia/solocshaw)
[20:06:42] <gwozniak> Also, I have never used git bisect as I have never found it necessary
[20:08:03] <companion_cube> oh? it's so nice though
[20:08:17] <shapr> and does more than people think
[20:08:31] <gwozniak> Not when builds take a while
[20:09:53] <gwozniak> Keep in mind the number of commits the entire team makes in a week is typically countable on one hand
[20:10:10] <riv> gwozniak: I use it when I want to find the commit that caused a bug
[20:10:17] <riv> im curious how you approach this problem?
[20:10:28] <edk> if you can leave git bisecting while you do something else it doesn't matter so much how slow it
[20:10:29] <edk> is
[20:10:38] <riv> do you just kinda fix the bug without the extra info that seeing the bad commit gives you?
[20:10:53] <edk> well, if you just find the bug by debugging, you can fix it without knowing
[20:10:56] <gwozniak> I just look at the commits and I can figure it out because it's usually obvious
[20:10:58] <edk> or you can work backwards from the blame
[20:11:02] <riv> ah alright
[20:12:51] <gwozniak> Also, a lot of the time bugs show up that are caused by combinations of features, not actually breaking things.  That is, they both need to coexist, but if one is used in a certain way it causes the other to break.  Rolling back the commit is not a fix.  It was something not considered in the first place
[20:14:20] <nshp> bisect has been helpful for tracking down bugs in _other_ peoples' reposo
[20:14:28] <nshp> s/reposo/repos/
[20:14:54] <nshp> could've used a debugger too, but if you already have a simple test case, that's sometimes just faster
[20:15:21] <edk> gwozniak: i don't think the goal of bisecting is to find a commit to roll back
[20:16:02] <edk> it's just to have a smaller number of lines to think about
[20:16:05] <nshp> agreed, it's to find a regression so you know the what and the why that introduced it
[20:16:09] *** md618 is now known as madb
[20:16:11] <ngoldbaum> nshp: unless you know the code really well it’s often faster on your own code too
[20:16:16] <gwozniak> edk: yes, what I meant (said very clumsily) is that bisect isn't going to find the bug because it wasn't introduced in an obvious way
[20:16:34] <nshp> ngoldbaum: perhaps. most of what I work on is smaller projects, so I do tend to know it very well
[20:16:43] <ngoldbaum> also this is why 10,000 line commits from squashing a PR are bad
[20:17:14] <edk> squash-merging on github is useful for dealing with people who refuse to write good commit messages
[20:17:31] *** Joins: mahmutov (~mahmutov@37.155.23.91)
[20:17:50] <riv> what are some important things to do for a good commit message?
[20:18:10] <ngoldbaum> less than 80 character clear summary
[20:18:17] <riv> okay
[20:18:25] <gwozniak> This is something my team does not do so well
[20:18:34] <ngoldbaum> some text after if needed to explain what happened, only necessary on like 10% of commits imo
[20:18:36] <edk> you can get as involved as you like, but basically i just think they shouldn't be "adsfhuidsgjadsfiW"
[20:18:47] <riv> lol
[20:18:55] <ngoldbaum> yeah, not “did stuff”
[20:18:59] <riv> or like
[20:19:05] <riv> "replaced fooBar with quux"
[20:19:12] <riv> it makes sense when you're looking at this specific function
[20:19:14] <gwozniak> All our commits link back to the Jira issue
[20:19:21] <riv> but someone reading the commit doesn't even know what file you are in
[20:19:23] <ngoldbaum> riv: i mean that’s fine if all it is is a search and replace
[20:19:24] <gwozniak> Because every commit has to be associated with one
[20:20:00] <ngoldbaum> rewriting public history is very bad; rewriting a work in progress commit stack should be standard practice
[20:20:11] <ngoldbaum> also there should be better tooling for that
[20:20:25] <ngoldbaum> “hg absorb” was my favorite mercurial feature
[20:21:06] <iDrougge> edk: Some of my colleagues are such pigs that the repo would probably be destroyed if they didn't squash everything. They implement one feature in the feature branch, but in addition there are a dozen commits pulling in develop and a dozen reverts.
[20:21:24] <ngoldbaum> given a stack of commits and a dirty working directory, it automagically figured out which commits each hunk of the uncommited diff “should” be in and did that history rewriting automagically
[20:21:36] *** Joins: CHUD (~CHUD@host-80-41-89-108.as13285.net)
[20:21:42] <CHUD> pe: im back
[20:22:04] *** Quits: madb (~md618@129.31.149.36) (Changing host)
[20:22:04] *** Joins: madb (~md618@user/madb)
[20:22:24] *** Quits: madb (~md618@user/madb) (Quit: leaving)
[20:23:14] <iDrougge> But I suspect there is a correlation between people who make dirty Git histories and people who make dirty code.
[20:23:26] <gwozniak> I always squash local work before sharing it because it's usually a mess
[20:23:28] <iDrougge> Or people who write bad commit messages and people who are bad at naming their symbols.
[20:25:12] <gwozniak> With my work, if there is a major feature it is very difficult to avoid the "big commit" because you can't have half a compiler pass
[20:25:33] <riv> yeah
[20:26:44] <gwozniak> I can commit it in pieces, but it's not going to run until it's all there.  Those earlier commits are basically useless
[20:27:39] <iDrougge> Yes, I can imagine that's a story better told in one piece than in instalments.
[20:27:58] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[20:27:59] <gwozniak> When I was porting a backend to a newer version of GCC I had about 100 commits where the compiler just wouldn't build
[20:27:59] *** Quits: Zedronar (~Zedronar@cpc158777-hari22-2-0-cust169.20-2.cable.virginm.net) (Quit: Connection closed)
[20:28:25] <gwozniak> But putting each change in a commit made digging through the history a lot easier
[20:28:50] <dutchie> I was using stgit for a while, but I found it annoying that it didn't really interact with other git tooling. now I'm fairly happy with git-branchless
[20:29:06] *** Joins: witx (~witx@a94-132-168-30.cpe.netcabo.pt)
[20:29:39] <gwozniak> After I got the compiler building, I had a bunch more commits needed before it would actually run and compile some basic code
[20:30:11] <gwozniak> Doing that all in one commit would have been about 9 months of work in one, giant commit
[20:30:27] <gwozniak> But you can't go back and bisect it
[20:31:14] <gwozniak> It took about 12 months to get it to the point where it was essentially working and you could run tests
[20:34:02] <gwozniak> The commits I made when porting contained explanations and links explaining why the change was made, which is invaluable when you're looking at it 2 years later and trying to figure out why something is structured the way it is
[20:34:08] *** Joins: madb (~md618@user/madb)
[20:34:24] <gwozniak> Stuff like "the backend macro changed from X to Y, blah blah blah"
[20:34:44] <iDrougge> That's the kind of history I like.
[20:35:07] <gwozniak> The GCC devs did a bad job of that until recently
[20:35:28] <gwozniak> Everything was in a Changelog, which usually didn't explain much of anything
[20:36:08] <gwozniak> I had to go digging through the mailing list, with the hope the discussion around it took place around the same time as the commit
[20:36:20] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[20:42:08] <JordiGH> Okay, so I'm getting the impression that the general consensus is "ClickUp? wtf is that?"
[20:42:15] <JordiGH> None of you have tried it, have you?
[20:42:18] <JordiGH> I can't find blog posts about it.
[20:42:26] <JordiGH> I can barely find a few Stack Overflow questions about it.
[20:42:35] <JordiGH> And just one news article about ClickUp.
[20:43:02] <JordiGH> So why the fuck are we replacing JIRA, which everyone knows, with ClickUp, that nobody does? Explain this to me, admins at my work.
[20:43:33] <technomancy> the only thing I know about ClickUp is that it's not Jira, which tbf is a big point in its favor.
[20:44:17] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[20:44:56] <JordiGH> You're saying I can use that argument to get my company back on Mercurial?
[20:45:01] <wink> never heard of it
[20:45:11] <wink> not of clickup either ;)
[20:45:17] <nshp> iirc atlassian made a significant pricing change recently which is making life worse for smaller companies, that could be part of it
[20:45:30] <JordiGH> Oh, we are a small company.
[20:45:47] <nshp> I don't actually remember what it was, but we also moved away from atlassian stuff because of that (to GHE)
[20:45:52] <JordiGH> nshp: Oh you got a link for it?
[20:46:08] <wink>  One app to
[20:46:08] <wink> replace them all.
[20:46:08] <wink> All of your work in one place: Tasks, Docs, Chat, Goals, & more.
[20:46:10] <wink> omg
[20:46:54] <ngoldbaum> JordiGH: what about a webcam pointing at sticky notes on a wall
[20:47:07] <JordiGH> I'm accidentally advertising ClickUp to all of you, aren't I?
[20:47:10] <JordiGH> I'm driving its growth.
[20:47:23] <fwg> maybe you'll get a mug out of it
[20:47:33] <nshp> JordiGH: this seems maybe relevant, without digging into it much: https://www.atlassian.com/migration/assess/journey-to-cloud
[20:47:33] <mockturtle> [ Atlassian Server end of life (sale/support) information ] - www.atlassian.com
[20:47:54] <nshp> they're apparently killing off the self hosted options? I guess?
[20:48:03] <JordiGH> nshp: Oh, huh, that doesn't apply to us.
[20:48:18] *** Quits: Perry (~perry@coffee-break.at) (Quit: ZNC - http://znc.in)
[20:48:26] <JordiGH> Atlassian is a pretty devil company but at least everyone already has workarounds for this devil.
[20:48:31] <ngoldbaum> lol they’re just completely killing the self-hosted stuff
[20:48:32] <ngoldbaum> wow
[20:48:33] <JordiGH> lol
[20:48:50] <nshp> I thought that was most of the reason people used atlassian, heh
[20:48:55] <ngoldbaum> now everyone gets to use the shitty cloud bitbucket
[20:49:03] *** Joins: Perry (~perry@coffee-break.at)
[20:49:11] <JordiGH> Wait, Atlassian Server isn't Bitbucket server, is it?
[20:49:24] <JordiGH> They keep renaming their stuff so I don't know what's the current state of things.
[20:49:37] <iDrougge> Atlassian just killed their Mac Jira app, too, so good riddance.
[20:49:41] <ngoldbaum> bitbucket server is part of atlassian setver aiui
[20:49:48] <nshp> I think it's the name of the whole package JordiGH
[20:49:55] <nshp> bitbucket server, jira, all that stuff
[20:50:17] <ngoldbaum> bitbucket server used to be called stash
[20:50:32] <ngoldbaum> and it was way less shitty than “bitbucket” which became bitbucket cloud
[20:50:39] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[20:50:46] <wink> we are in the progress of migrating to self-hosted bitbucket
[20:50:56] <wink> so maybe the cloud is in our future and this is just step1 :P
[20:51:03] <ngoldbaum> despite it going away in 2024 apparently?
[20:51:17] <nshp> I've used all of these things over the years, and I have never once been able to intuitively find my way around any of their interfaces
[20:51:20] <wink> someone decided all-in to jira/confluence 2y ago or so
[20:51:30] <wink> so it kinda makes sense, from that pov
[20:51:39] <wink> if we need to move out in 2y, might as well do all of it
[20:51:41] <ngoldbaum> bitbucket is extremely bad
[20:51:50] <wink> don't tell me
[20:52:09] <ngoldbaum> there was a point in like 2009 or so when bitbucket could have conceivably outcompeted github
[20:52:15] <wink> but we have fishey and ssh git@localwhatever now :)
[20:52:18] <ngoldbaum> we are not in that universe
[20:52:24] <wink> it could be a little improvement
[20:52:26] <wink> we'll see
[20:53:05] <technomancy> confluence is hilariously bad; they straight up killed the support they used to have for non-wysiwyg editing
[20:53:06] <JordiGH> If I go back in time, my priorities would be to firebomb Columbus's ships so they can't reach America, and to convince Jesper to not sell Bitbucket.
[20:53:09] <wink> I think it will be interesting if they'll have some local EU hosting
[20:53:44] *** Quits: solocshaw (~Thunderbi@gateway/vpn/pia/solocshaw) (Ping timeout: 268 seconds)
[20:53:55] <JordiGH> Hey, how do I remove FEFF from a file?
[20:53:58] <JordiGH> I mean, the BOM.
[20:54:11] <wink> I'm the last person defending atlassian products, so don't interpret it like that. but... at this job it has not yet interfered with my work, so I don't really care
[20:54:31] <JordiGH> Perfect https://unix.stackexchange.com/questions/381230/how-can-i-remove-the-bom-from-a-utf-8-file
[20:54:32] <mockturtle> [ How can I remove the BOM from a UTF-8 file? ] - unix.stackexchange.com
[20:54:33] <wink> we have someone who is quick and able to adjust stuff
[20:55:22] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 250 seconds)
[20:56:21] *** Quits: CHUD (~CHUD@host-80-41-89-108.as13285.net) (Ping timeout: 256 seconds)
[21:04:29] <catern> at what point does posting all my articles cross into self-promotion? am I OK because I actively comment on other articles also?
[21:04:44] <catern> (I have an article to post but I'm worried)
[21:06:20] <wink> don't think we have real numbers for that :P depends on frequency for both
[21:07:48] <gerikson> catern: no hard rules, but if you only post your own content and never comment, the gimlet eye of the mods will turn towards you , Sauron-like
[21:07:51] <gerikson> j/k
[21:07:56] *** Joins: CHUD (~CHUD@host-80-41-89-108.as13285.net)
[21:08:15] <gerikson> you will get  friendly PM asking you to change your ways if you step over the line
[21:10:07] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[21:11:03] *** Quits: threenp (~threenp@gateway/tor-sasl/threenp) (Ping timeout: 276 seconds)
[21:11:13] <mockturtle> Prefer to change the code rather than write a workaround [practices] (catern) https://lobste.rs/s/wcwpkk
[21:11:18] <catern> let's see then
[21:11:35] <Ticho> you'll also have to go stand in the shame corner for fifteen minutes :)
[21:12:19] * gerikson appreciates the HTML 1.0 styling 
[21:12:30] <catern> i have only goodwill in my heart rather than a lust for fame and fortune, so perhaps that's enough
[21:12:39] <Ticho> nice, now I have something to read with the pizza that just arrived :)
[21:13:11] <technomancy> catern: your articles are solid; I don't think you need to worry
[21:13:11] *** Joins: vicfred (~vicfred@user/vicfred)
[21:13:26] <technomancy> over half the stuff I post is from my own site too
[21:14:17] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[21:14:33] <ngoldbaum> catern: if the things you post are ads or ad-adjacent probably, if they’re just perdonal posts on a technical blog probably not, especially if they’re generally well received and topical
[21:14:41] <Ticho> hm, no links to your other posts, no shilling of any product of yours? are you sure you are doing blogging correctly? :)
[21:15:19] <technomancy> any log which uses zero CSS automatically gets a +20% credibility boost so you got that going for you
[21:15:22] <technomancy> *any blog
[21:15:45] <catern> thank you, thank, you're very kind
[21:16:39] * technomancy compares https://lobste.rs/newest/catern vs https://lobste.rs/newest/technomancy
[21:17:06] <catern> hah
[21:18:23] <technomancy> oh man you haven't posted your terminals article?
[21:18:30] <technomancy> that's like your best one =D
[21:18:44] <catern> i am glad it's continuing to be useful on #emacs :)
[21:19:10] <catern> guess I could post it
[21:19:19] <catern> (at some later time)
[21:19:19] *** Joins: threenp (~threenp@gateway/tor-sasl/threenp)
[21:24:23] *** Quits: citizen_stig (~citizen_s@2001:982:9f64:1:41f3:70b3:46bb:841e) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:28:33] *** Joins: citizen_stig (~citizen_s@2001:982:9f64:1:5026:c2b3:b8b7:fca4)
[21:30:14] <mockturtle> PureNix: transpile PureScript code to Nix [haskell nix] (washort) https://lobste.rs/s/ir8gvq
[21:33:45] <gwozniak> We're all-in on Atlassian stuff here, and we self-host everything.  Wonder how the ops people feel about this
[21:34:03] *** Quits: jmw (~jmw@user/jmw) (Quit: jmw)
[21:36:11] <gwozniak> I can't see how we'd move away from Jira
[21:37:45] *** Joins: mouseghost (~draco@user/mouseghost)
[21:39:50] <gwozniak> But if we did, I wouldn't complain--unless the migration was a shitshow
[21:41:30] *** Joins: Wizzzzzy_ (~wizzzzzy@178.255.149.135)
[21:45:04] *** Quits: citizen_stig (~citizen_s@2001:982:9f64:1:5026:c2b3:b8b7:fca4) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:46:50] <mockturtle> I found an unpatched Xerox vulnerability that lets anyone remotely brick networked printers [security] (mqudsi) https://lobste.rs/s/eh1qfu
[21:47:35] <mockturtle> A Minimum Viable Computer, or Linux for $15 [linux hardware] (nalzok) https://lobste.rs/s/mpmhjn
[21:49:24] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[21:49:58] *** Quits: witx (~witx@a94-132-168-30.cpe.netcabo.pt) (Ping timeout: 250 seconds)
[21:51:15] *** Joins: arcatech (~arcatech@user/arcatech)
[21:53:10] *** Joins: citizen_stig (~citizen_s@2001:982:9f64:1:5cea:3a87:f03f:9696)
[21:54:21] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[21:56:29] <banna> ooo you know an article is going to be good if its about printers
[21:59:37] *** Quits: gabriele (~gabriele@user/gabriele) (Quit: Leaving)
[22:06:22] *** Joins: the_lanetly_052_ (~the_lanet@185.30.90.32)
[22:08:53] *** Quits: CHUD (~CHUD@host-80-41-89-108.as13285.net) (Ping timeout: 256 seconds)
[22:09:02] *** Quits: the_lanetly_052 (~the_lanet@194.135.152.166) (Ping timeout: 250 seconds)
[22:14:14] *** Joins: varjag (~user@ti0040a400-5479.bb.online.no)
[22:18:32] <mockturtle> Creating a Postgres Foreign Data Wrapper [databases] (zachmu) https://lobste.rs/s/hv7ixt
[22:20:59] *** Quits: Major_Biscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 256 seconds)
[22:23:46] *** Quits: aja (~user@static24-72-139-17.r.rev.accesscomm.ca) (Ping timeout: 268 seconds)
[22:33:52] *** Quits: mossman93 (~quassel@user/mossman93) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:34:10] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Ping timeout: 250 seconds)
[22:34:23] *** Joins: Ilyu (~quassel@gateway/vpn/pia/ilyu)
[22:36:33] <mockturtle> DirectFB2 project brings back DirectFB graphics library for Linux embedded systems [linux] (raymii) https://lobste.rs/s/zzjp0f
[22:41:33] <riv> i hate these progress bars in terminal that stop me from scrolling up to read soemthing above
[22:41:42] *** Joins: extra_medium (~sentinel@user/sentinel/x-2761183)
[22:42:04] *** Joins: CHUD (~CHUD@host-80-41-89-108.as13285.net)
[22:42:27] *** Quits: extra_medium (~sentinel@user/sentinel/x-2761183) (Client Quit)
[22:44:23] *** Quits: Wizzzzzy_ (~wizzzzzy@178.255.149.135) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:47:59] *** Quits: mouseghost (~draco@user/mouseghost) (Quit: mew wew)
[22:48:22] *** kiedtl is now known as cot
[22:48:39] *** Quits: mahmutov (~mahmutov@37.155.23.91) (Ping timeout: 250 seconds)
[22:52:05] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[22:53:14] *** Quits: madb (~md618@user/madb) (Ping timeout: 250 seconds)
[22:53:51] *** Quits: Ilyu (~quassel@gateway/vpn/pia/ilyu) (Ping timeout: 256 seconds)
[22:54:10] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[22:54:47] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[22:56:20] *** Joins: Major_Biscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[22:59:32] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[22:59:53] <Church> c355E3B: All those EFS hacks are still needed it seems
[22:59:57] <Church> Multiple big WOMPS
[23:00:02] <c355E3B> Oh no
[23:00:36] *** Quits: Major_Biscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 250 seconds)
[23:02:39] *** Joins: Major_Biscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[23:03:16] *** Joins: mahmutov (~mahmutov@5.176.46.201)
[23:03:31] *** Joins: mouseghost (~draco@user/mouseghost)
[23:07:23] *** Quits: Major_Biscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 252 seconds)
[23:17:32] *** Joins: drobilla (~user@198-84-224-189.cpe.teksavvy.com)
[23:18:36] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[23:20:57] *** Quits: 077AAE8MJ (~sven@dslb-084-057-144-135.084.057.pools.vodafone-ip.de) (Quit: Konversation terminated!)
[23:22:55] *** Joins: petar (~petar@87.116.166.16)
[23:23:19] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[23:28:18] *** Joins: ur5us (~ur5us@2406:e002:6d58:d101:23b2:b738:8a21:f7ed)
[23:32:55] <mockturtle> The Cat Escaped from the Chrome Sandbox [security] (calvin) https://lobste.rs/s/uv35zq
[23:34:18] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[23:40:38] <JordiGH> hhhholeee frijoles I received good news
[23:41:03] <gerikson> excellent
[23:41:07] <gerikson> we could all use some
[23:42:47] *** Joins: Wizzzzzy (~wizzzzzy@178.255.149.135)
[23:43:30] *** Joins: rhn (~rhn@user/rhn)
[23:44:04] <technomancy> JordiGH: you got a job offer_
[23:44:06] <technomancy> ?
[23:44:16] <ngoldbaum> is the good news bean-related?
[23:48:24] <JordiGH> Well I did order some tacos.
[23:48:52] *** Quits: Wizzzzzy (~wizzzzzy@178.255.149.135) (Ping timeout: 268 seconds)
[23:49:35] *** Joins: Wizzzzzy (~wizzzzzy@185.69.145.173)
[23:50:55] <JordiGH> I'm so happy that there are so many chilangos in Montreal. They make food almost exactly like back in the old country. Well, the old city.
[23:55:32] *** Quits: Wizzzzzy (~wizzzzzy@185.69.145.173) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:57:36] *** Joins: ultsllt (~ultsllt@50.231.5.242)
[23:59:54] <ngoldbaum> can you get good al pastor? not sure if you’re vegetarian :p
