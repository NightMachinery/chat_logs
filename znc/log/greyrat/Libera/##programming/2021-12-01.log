[00:00:03] <tvm> the drives that don't have it are all dead already
[00:02:50] <tvm> HDD problems are kinda random, sometime they die young
[00:02:52] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[00:03:00] <tvm> often they'll spin for years
[00:04:12] <tvm> this SSD is at 75% of wear (from 100%) after two years of clean running time, i've had it for like four years 
[00:04:25] <we3fan> I see, OK. pyzozord, tvm - thanks guys.
[00:04:55] <tvm> we3fan: you should see hours there somewhere too
[00:05:14] <tvm> this has 17k hours and is at 75% from 100%
[00:05:48] <tvm> second metric would be spare blocks
[00:06:14] <tvm> this one is at 98%, that means 2% of blocks are dead
[00:06:54] *** Joins: nitro_ (~nitro_@c-73-165-183-88.hsd1.pa.comcast.net)
[00:07:03] <pyzozord> disks will wear or writes right?
[00:07:12] <pyzozord> I don't really write that much
[00:07:14] <tvm> yeah, generally yes
[00:07:27] <tvm> download 80GB steam game and delete it, that's a wear
[00:07:33] <pyzozord> I guess that's more of a problem if you work a lot with media, like a graphics designer etc
[00:07:47] <tvm> generally writing and erasing a lot, that makes the wear
[00:07:48] <pyzozord> or yeah keep downloading and deleting stuff
[00:07:50] *** Quits: probableUser (~probableU@2a02:8388:1a08:4680:80f4:78d1:d774:5047) (Read error: Connection reset by peer)
[00:08:37] <tvm> the amount of cycles per transistor is limited
[00:08:57] <tvm> just like with normal HDD
[00:09:18] <tvm> applies to everything that is rewritable
[00:09:49] <tvm> also SD cards and the like
[00:10:09] <KillerWasp> about of begin directories: 1) /a/b/c/d - from the root directory. 2) a/b/c/d - from the actual directory. 3) ./a/b/c/d - from the actual directory. It's all correct?
[00:10:30] <we3fan> Thanks tvm, my SSD only 2k hours for now. This number 75%, do you see it somewhere in CrystalDiskInfo?
[00:10:43] <KillerWasp> the point 2 seem don't work with open() function.
[00:10:59] <tvm> we3fan: it should be somewhere, but i don't have that app at hand so i can't say how it's called
[00:11:21] *** Joins: mikrosis (~mikrosis@dynamic-046-114-171-169.46.114.pool.telefonica.de)
[00:11:22] <tvm> we3fan: but yours is apparently new 
[00:11:53] <tvm> KillerWasp: correct but it depends on the context
[00:12:28] <tvm> KillerWasp: 1 is absolute, 2/3 and relative, 3 you use only to launch something
[00:12:45] <KillerWasp> i need ./ for open() also
[00:12:54] <tvm> what kind of open() ?
[00:13:09] <KillerWasp> 'man 2 open'
[00:13:13] <tvm> oh
[00:13:37] <tvm> so a C call ?
[00:13:40] <KillerWasp> yes
[00:13:50] <tvm> haven't touched that for years, someone else might know
[00:13:53] <KillerWasp> i need use open("./a/b/c/d",O_RDONLY);
[00:14:47] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[00:14:51] <we3fan> OK no problem. Yes mine is only about 3-4 months old. I wanted to ask something about TRIM. If I use the SSD for 6 months for example and never use TRIM on it, and then I format the partition - does formatting it means it is TRIMmed?
[00:18:14] <kveroneau> Generally what I do when I got a machine with an SSD and a regular magdisk, is have the SSD be my boot device, and then create an LVM on the HDD which I then create my logical volumes for everything else.  If I have something specific that would benefit from the speeds of the SSD, then I place it's data file on the SSD, or better yet, a fricken tmpfs so that I don't wear down my lovely SSD to a pulp.  But a tmpfs is really only an option if 
[00:18:14] *** Quits: Buttercat (~Buttercat@user/buttercat) (Read error: Connection reset by peer)
[00:18:15] <kveroneau> ya got the RAM, and remember to copy any important data off of it before shutting down or restarting.
[00:19:43] <kveroneau> On the Windows side of things, since I only boot to Windows these days to play the odd game, and since most of my games aren't super modern, they tend to load just fine from the magdisk, but the Windows system partition is installed to the SSD to improve it's overall performance, like faster booting and such.
[00:20:58] *** Joins: mikrosis69 (~mikrosis@dynamic-046-114-171-169.46.114.pool.telefonica.de)
[00:21:12] <tvm> we3fan: that depends mostly on the OS, but it should be mostly automatical these days, both Windows and Linux have been handling that for years
[00:22:42] *** Quits: mikrosis (~mikrosis@dynamic-046-114-171-169.46.114.pool.telefonica.de) (Ping timeout: 256 seconds)
[00:22:58] <tvm> but quick google will tell you better i guess
[00:23:17] * kveroneau really wishes Microsoft Teams supported /me instead of hyroglifics.
[00:26:17] <tvm> we3fan: i'd expect windows format to call a trim after that, not sure about linux, but you can always force it manually
[00:26:27] <pyzozord> KillerWasp: form what I understand acording to posix open("a/b/c/d") should wokr just fine https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap04.html#tag_04_13
[00:26:29] <bayaz> Title: General Concepts 
[00:27:08] *** Joins: flakland (~flaknet99@32.211.211.39)
[00:27:50] <we3fan> Thanks kveroneau, very informative, I will try some of your tips.   I see, OK thanks tvm
[00:28:09] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Remote host closed the connection)
[00:29:23] <pyzozord> and https://pubs.opengroup.org/onlinepubs/9699919799/functions/open.html says The path argument points to a pathname naming the file.
[00:29:24] <bayaz> Title: open 
[00:29:30] <KillerWasp> pyzozord: sometimes don't work without / or ./ in the begin... :/
[00:29:40] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[00:30:19] <KillerWasp> I was making a string directory system for a class. But since point 2 usually fails I was thinking of excluding it.
[00:30:38] <nomagno> Hm alright, now that my VM has a (working!) assembler, I can write actual proper code!
[00:30:54] <nomagno> Well it's not really an assembler, it executes the code it reads from a file. So I guess it's technically an interpreter
[00:30:55] <kveroneau> we3fan, if you tend to compile a lot of code, you could consider placing your compiler object files in a tmpfs to improve compile performance and less the wear on the SSD. ;)
[00:30:59] <nomagno> Assembler & interpreter
[00:31:06] <nomagno> Well, the point is coding is acceptable now
[00:31:22] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Remote host closed the connection)
[00:31:35] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[00:31:40] <KillerWasp> nomagno: what VM??
[00:31:44] *** Quits: hans (~hans@36.84-48-255.nextgentel.com) (Ping timeout: 252 seconds)
[00:31:53] <nomagno> Oh I've been coding up a VM for the last week and a bit
[00:32:08] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[00:32:10] <nomagno> It's a subproject for my game
[00:32:12] <nomagno> here: https://gitea.com/Nomagno/Half-World/src/branch/master/src/core/iset
[00:32:14] <KillerWasp> a VM or in a VM?
[00:32:39] <nomagno> KillerWasp: a VM
[00:32:53] <nomagno> For a P-CODE/Imaginary CPU. really fun!
[00:33:35] <nomagno> I take pride in it being written in portable C99
[00:33:37] <KillerWasp> humm, a interprete of asm code?
[00:33:48] <pyzozord> KillerWasp: I just tested open("a/b", O_RDONLY) and it worked just fine
[00:34:04] <nomagno> KillerWasp: it assembles and interprets custom assembly for my custom instruction set for my custom CPU inside my custom VM, yes.
[00:34:16] <KillerWasp> nomagno: seem nice and funny, interprete from a asm code also must work fine
[00:34:33] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:34:52] <nomagno> KillerWasp: I mean, it's a VM, if I assembled it to a binary I'd have to interpret the binary anyways!
[00:35:03] <nomagno> there's no phisical CPU to target
[00:35:23] <nomagno> s/phisical/physical/
[00:36:04] <KillerWasp> mmm, i see a vector of two index for your fake asm bytecode
[00:36:30] *** Joins: Buttercat (~Buttercat@user/buttercat)
[00:36:48] *** Joins: maroloccio (~marolocci@151.53.155.184)
[00:37:09] *** Joins: hans (~hans@36.84-48-255.nextgentel.com)
[00:37:59] <nomagno> What does 'vector of two index' mean?
[00:38:07] *** Joins: cool6502 (~cool333@bzq-79-176-139-177.red.bezeqint.net)
[00:38:18] *** Joins: duchess (~duchess@24.109.185.150)
[00:38:19] <KillerWasp> seem like worse that a ARM, where each instruction are 32 bytes, or 16 bytes.
[00:38:28] *** Quits: pulse (~pulse@user/pulse) (Quit: Join a community of haunted house decorators at https://indiedevs.net/)
[00:38:55] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[00:39:08] <we3fan> kveroneau: Thanks, that's a great idea, I will try it sometime. :)
[00:39:49] *** Quits: Buttercat (~Buttercat@user/buttercat) (Remote host closed the connection)
[00:40:06] <KillerWasp> nomagno: for the begin i guess that's fine. :)
[00:40:14] <nomagno> I'm not sure what that means
[00:40:22] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[00:40:26] <nomagno> You mean bits?
[00:40:28] <nomagno> The maximum address space size is implementation-defined, because the VM is written in C. I purposefully limit it to 16 bits
[00:40:28] <nomagno> Because otherwise I would be ruling out C implementations
[00:40:36] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[00:40:39] *** Joins: mickey8 (~user@user/mickey)
[00:40:46] <nomagno> if you want more bits, you move to a machine with more bits :P
[00:41:21] *** Quits: cool2077 (~cool333@bzq-79-176-139-177.red.bezeqint.net) (Ping timeout: 256 seconds)
[00:41:25] <KillerWasp> nomagno: i see that use uint, i don't see still the inside of uint but i guess is 'unsigned int'
[00:41:26] * kveroneau wants more than 64-bits.
[00:41:42] * kveroneau can't find a machine on the market with more than 64-bits.
[00:41:52] * kveroneau gets depressed and cries in the corner.
[00:41:57] <nomagno> KillerWasp: Yeah there's a typedef in iset.h
[00:42:04] <flakland> get a FPGA and run 128bit riscv on it
[00:42:10] <nomagno> The 'formal' assembly or binary format requires you to specify the size of instruction arguments (and implicitly that of the address space) in bits before you even start with the rest of the code
[00:42:40] <kveroneau> flakland, I didn't know that.  That might be something fun to dabble in at one point. :)
[00:42:49] <nomagno> But that's really just the code asking 'are we ok? do you support this?' to the VM
[00:42:57] <KillerWasp> flakland: use 128bit and reach the limit of universe! \o/
[00:44:12] *** Quits: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca) (Ping timeout: 256 seconds)
[00:44:28] *** Joins: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca)
[00:44:29] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[00:44:31] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[00:44:44] *** Joins: flakland (~flaknet99@32.211.211.39)
[00:44:55] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Remote host closed the connection)
[00:45:31] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[00:45:38] <flakland> fixed point suddenly becomes viable with 128bit word size
[00:46:53] <tomathy> https://www.youtube.com/watch?v=mviI2a8Pxek
[00:46:54] <bayaz> Title: Steven Anderson Dr Spergel compilation - 1st Revision 
[00:47:17] <Twix> fixed point is not only with 128 bit viable
[00:47:56] <pyzozord> nomagno: this is pretty impressive. It's hard for me to follow without extending more effort to understand
[00:48:06] <pyzozord> but it starting to look pretty impressive
[00:48:55] <flakland> twix well yeah but  you may end up with a delta that's too small, or not enough bits for the whole part, depending on implementation
[00:49:14] <sonny> tomathy what is that? a meme?
[00:49:50] <tomathy> xD
[00:51:15] *** Joins: Guest17 (~Guest17@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[00:51:32] *** Quits: teut (~teut@182.68.254.204) (Quit: Client closed)
[00:53:28] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[00:56:16] <pyzozord> do you think it makes sense to wear those funny programming gloves?
[00:56:31] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[00:56:33] <pyzozord> the ones that protect your thingy in your hands
[00:58:06] <pyzozord> arthritis
[00:58:13] <KillerWasp> tvm: it's normal called relative or absolute in the directories? seem like asm...
[00:58:20] *** Joins: pavonia (~user@user/siracusa)
[00:58:28] <pyzozord> it's not a thing in the hands, it's a thing you can get
[00:59:03] *** Quits: user51 (~user51@176.228.151.30) (Remote host closed the connection)
[00:59:59] *** Joins: pierino (~piero@host-87-0-37-167.retail.telecomitalia.it)
[01:00:06] <pyzozord> wrist brace for carpal tunnel
[01:00:08] <pierino> hi
[01:00:25] <KillerWasp> i download a book of astral travel. Now I can go directly to their homes to ask them, using IRC is too tedious.
[01:00:52] <Teckla> pyzozord: Turmeric + Black Pepper
[01:00:52] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 264 seconds)
[01:01:26] *** Quits: reumeth (~reumeth@user/reumeth) (Ping timeout: 252 seconds)
[01:01:41] <pyzozord> Teckla: didn't you recommend me a book few days ago?
[01:01:51] <Teckla> pyzozord: Nope
[01:01:54] <pyzozord> oh sorry
[01:02:23] <pyzozord> somone recommended me a Tao book and I bought it and I'm very glad to have it
[01:02:27] <Teckla> I'm recommending Turmeric + Black Pepper (the Black Pepper is usually already added to Turmeric supplements) for Carpal Tunnel and/or arthritis in hands.
[01:02:32] <flakland> pyzo also make sure your desk is level and you're not leaning too much on one wrist
[01:02:48] <pyzozord> I'm not sure if I have any hand problems really
[01:03:14] <flakland> then it might only make sense as a fashion statement
[01:03:21] <pyzozord> my joints are quit noisy but otherwise I don't notice any trouble
[01:03:37] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:03:47] <pyzozord> i sometimes get weak hands when playing for few hours with xbox controller
[01:04:03] <pyzozord> like kind of stiff and with an electric feeling
[01:04:10] <pyzozord> s/weak/sleepy/
[01:04:22] <flakland> ok that sounds kind of messed up
[01:04:51] <pyzozord> no it's nothing bad, it's like what happens to your legs when you sit too long on a toilet :P
[01:04:57] <pyzozord> but with hands and xbox controller :P
[01:05:09] <Teckla> pyzozord: That is likely inflammation.  Take the aforementioned turmeric and black pepper supplements, and that problem will go away.
[01:05:57] <pyzozord> huh I'll take a look, I didn't think I had a problem. I just asked because I'm watching someone who wears that wrist brace
[01:06:09] <Teckla> Source 1: My wife is a Registered Nurse.  Source 2: Due to hand arthritis, I take the aforementioned turmeric and black pepper supplements, which solves the problem.
[01:07:34] <Teckla> All you programmers can thank me later, when you get older and have arthritis.  ;)
[01:07:35] <pyzozord> do you eat it?
[01:07:41] *** Quits: rtypo (~alex@user/rtypo) (Read error: Connection reset by peer)
[01:07:56] <Teckla> pyzozord: It comes in capsule form, you just take a few capsules per day, ~1,000 mg each.
[01:08:02] *** Quits: hans (~hans@36.84-48-255.nextgentel.com) (Ping timeout: 256 seconds)
[01:08:04] *** Quits: hoochmonger (~hoochmong@user/hoochmonger) (Ping timeout: 264 seconds)
[01:08:51] <pyzozord> is it real science or more like homeopathy?
[01:08:54] *** Joins: hoochmonger (~hoochmong@user/hoochmonger)
[01:08:55] <pyzozord> pardon the question
[01:09:24] *** Joins: Ilyu (~quassel@gateway/vpn/pia/ilyu)
[01:10:18] *** Quits: stoneware (~stoneware@user/stoneware) (Ping timeout: 256 seconds)
[01:11:17] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[01:11:19] *** Quits: Guest17 (~Guest17@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Quit: Client closed)
[01:11:37] <arahael> pyzozord: it's quite traditional in some cultures - eg, malaysia uses tumeric in this way (i have a malaysian dish i sometimes make that uses two full teaspoons of tumeric *plus* tumeric leaves).
[01:11:52] <nomagno> tomathy: I thought he was getting to some point, but he wasn't
[01:12:20] <tomathy> well he was just repeating a point
[01:12:28] *** Quits: caramel (~caramel@user/caramel) (Read error: Connection reset by peer)
[01:12:39] <tomathy> that the scientists of our time are more like priests, he's just mocking them
[01:12:39] *** Joins: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de)
[01:12:39] *** Quits: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de) (Changing host)
[01:12:39] *** Joins: resamvi (~resamvi@user/resamvi)
[01:12:53] <nomagno> That's a fair point.
[01:13:01] <Teckla> pyzozord: It really works.
[01:13:31] <arahael> pyzozord: however, as for "is it science", thats complicated.  generally a lot of these are either ineffective - or are quite effective, but havent had the resources put in to do a proper scientific investigation as hose are very expensive and hard to justify unless you have a patent or something.  and no government will give you a monopoly over a traditional treatment.
[01:13:44] <pyzozord> looks like science supports the claims https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5664031/
[01:14:18] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[01:14:25] <pyzozord> I am planning to buy a massive amount of vitamine D too
[01:14:32] <pyzozord> might get this stuff too
[01:14:32] <Teckla> A lot -- probably most -- supplements are nonsense.  But, I can personally attest to tumeric + black pepper working really, really well.
[01:14:57] *** Joins: ChromaCat248 (~ChromaCat@user/chromacat248)
[01:14:59] <nomagno> Patents on medicines is among the least comprehensible things to be allowed, IMHO
[01:15:03] <nomagno> It enrages me
[01:15:10] <Teckla> A wrist rest helped a bunch too
[01:15:38] <pyzozord> the anti-inflamatory stuff is very useful in my case
[01:16:11] <sonny> Teckla you don't eat those in your food anyways??
[01:16:42] <Teckla> sonny: Not in sufficient quantities
[01:16:51] <mrig> cumin as well for inflammation, these are so far as I am aware, the sources from which some anti inflammatory molecules or drugs were discovered. 
[01:17:40] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 264 seconds)
[01:18:51] <pyzozord> cool I'll try that stuff
[01:19:49] <mrig> Rather than taking them with food, you just put it in it :)
[01:20:07] *** Joins: zaher (~zaher@37.48.152.30)
[01:20:32] <flakland> argh thanks guys now i have an incurable hunger for indian food
[01:21:05] *** Joins: HiddenHyde (~Hidden_Hy@user/hiddenhyde)
[01:21:13] *** Joins: rtypo (~alex@user/rtypo)
[01:21:20] *** Joins: sh1r4s3 (~sh1r4s3@109.252.75.9)
[01:21:56] *** Joins: DevAntoine (~DevAntoin@pop.92-184-112-232.mobile.abo.orange.fr)
[01:22:33] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[01:22:36] <tvm> flakland: i approve that
[01:24:44] <d3x0r> so I need this structure to be able to represent this space transformation.  It's sort of like a hypercube maybe where each point in A is actually sent to B but that's not really it at all.  I'm certainly overanalyzing it
[01:25:52] *** Quits: DevAntoine (~DevAntoin@pop.92-184-112-232.mobile.abo.orange.fr) (Remote host closed the connection)
[01:25:59] <tvm> flakland: just order some vindaloo, it's only food i know that's both pain and joy at once
[01:26:15] <sonny> mrig exactly
[01:27:05] *** Joins: a6a45081-2b83 (~aditya@2601:249:4300:1296:88ec:cc73:84d4:1507)
[01:27:08] *** Joins: vysn (~vysn@user/vysn)
[01:29:32] *** Joins: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de)
[01:29:32] *** Quits: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de) (Changing host)
[01:29:32] *** Joins: resamvi (~resamvi@user/resamvi)
[01:30:02] *** Quits: chomwitt (~chomwitt@2a02:587:dc16:f200:12c3:7bff:fe6d:d374) (Ping timeout: 252 seconds)
[01:30:13] *** Joins: DevAntoine (~DevAntoin@pop.92-184-112-232.mobile.abo.orange.fr)
[01:30:39] *** Quits: Inline (~Inline@aftr-37-201-240-100.unity-media.net) (Quit: Leaving)
[01:33:01] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Remote host closed the connection)
[01:33:16] *** Quits: a6a45081-2b83 (~aditya@2601:249:4300:1296:88ec:cc73:84d4:1507) (Remote host closed the connection)
[01:35:28] *** Quits: DevAntoine (~DevAntoin@pop.92-184-112-232.mobile.abo.orange.fr) (Remote host closed the connection)
[01:38:22] *** Quits: dan_pena (~dan_pena@110.252.130.77.rev.sfr.net) (Quit: Lost terminal)
[01:38:37] *** Quits: HiddenHyde (~Hidden_Hy@user/hiddenhyde) (Quit: Leaving)
[01:44:24] *** Joins: akevinhuang (~thekevinh@user/thekevinhuang)
[01:44:52] *** Joins: terminalpusher (~terminalp@2a01:586:a4a5:1:a8d0:5524:e423:6127)
[01:44:58] *** Quits: we3fan (~we3fan@89.185.206.82) (Quit: Leaving)
[01:45:19] *** Joins: Joanna (uid57472@id-57472.lymington.irccloud.com)
[01:48:07] *** Joins: dre (~dre@2001:8003:c932:c301:a3be:66e5:a03e:cca3)
[01:49:50] <nomagno> d3x0r: Can you provide an example of the structure?
[01:50:08] <nomagno> I don't know, draw something or make pseudo code
[01:50:09] <nomagno> Anything
[01:50:56] <d3x0r> https://d3x0r.github.io/STFRPhysics/math/mathSphereDecay the grid/radius is displaced by an amount.  At any given point there's a direction vector that defines (is defined by?) that displacment
[01:50:57] <bayaz> Title: Spacial Compression Geodesics 
[01:51:36] <d3x0r> if you move the first slider, you increase the space around 0, shifting space away from the zero.  That space gets an increased length of pi*R (R is the slider)
[01:51:38] *** Joins: mestre (~mestre@191.177.175.57)
[01:51:45] <d3x0r> but decreases in length by 1/R
[01:52:11] <d3x0r> so there's this direction vector, and a scalar that defines other vectors based onit
[01:52:22] <d3x0r> but then I need A+B=C and I don't know how to define the + operator
[01:52:33] <d3x0r> (well it's more of a *.)
[01:52:36] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:6d3e:7e5e:e0b5:771e) (Quit: Textual IRC Client: www.textualapp.com)
[01:52:59] <d3x0r> if there's a wide narrow box of displacment from one source, another one will add a widening, and shrinking from a perpendicular side
[01:54:20] <d3x0r> https://d3x0r.github.io/STFRPhysics/math/gravityFields.html  so then the fields rather than actually being compressed in a direction are stretched , which should decrease their desity in all the directions
[01:54:20] <bayaz> Title: Gravity Metaballs 
[01:55:17] <d3x0r> so while the 1/S part should be a 1/S it can be scaled by other sources of displacement... which looks like they should never actually allow each other to get close
[01:57:15] <d3x0r> (3+) 2 should still basically converge
[01:57:34] <d3x0r> (that was a while ago... ya I don't know either.)
[01:58:10] <Joanna>  /msg alis
[01:58:44] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:58:50] *** Parts: pierino (~piero@host-87-0-37-167.retail.telecomitalia.it) ()
[02:00:08] *** Parts: KillerWasp (KillerWasp@user/killerwasp) (YOU KIDDING ME?? YOU KIDDING MEEE???? (PC drinking beer) *kernel panic!*)
[02:02:44] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:02:46] *** Quits: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net) (Remote host closed the connection)
[02:02:47] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[02:03:00] *** Joins: flakland (~flaknet99@32.211.211.39)
[02:03:00] <sonny> want to help, but it's in another dimension
[02:03:23] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[02:04:03] <d3x0r> I guess maybe my math is wrong
[02:04:15] <d3x0r> pir - 1/x
[02:04:42] <d3x0r> pi(r-1/x) anyway ya maybe my cube is the wrong size
[02:07:58] <sonny> while I was doing nothing jetbrains made another ide
[02:08:11] *** Quits: dre (~dre@2001:8003:c932:c301:a3be:66e5:a03e:cca3) (Remote host closed the connection)
[02:08:27] <sonny> I think it will be really popular
[02:09:35] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[02:09:36] <flakland> lol dexor this is highly confusing stuff here
[02:10:00] <flakland> is this calculating gravity field?
[02:10:15] <flakland> how can the field of a sphere change shape at all?
[02:10:31] *** Joins: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au)
[02:10:56] *** Joins: dre (~dre@2001:8003:c932:c301:1276:3400:25a9:855)
[02:14:35] *** Quits: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com) (Ping timeout: 252 seconds)
[02:15:32] *** Quits: terminalpusher (~terminalp@2a01:586:a4a5:1:a8d0:5524:e423:6127) (Remote host closed the connection)
[02:15:54] *** Joins: terminalpusher (~terminalp@2a01:586:a4a5:1:a8d0:5524:e423:6127)
[02:21:18] *** Quits: jokoon (~eio@2a01:e0a:542:e160:ec4a:8bf:770c:2b75) (Quit: Leaving)
[02:21:39] <d3x0r> it does if you look at a plane
[02:21:50] <d3x0r> all the light in a plane surely follows straight lines in a plane
[02:22:06] <d3x0r> with 0 z deviation from that plane
[02:22:27] <d3x0r> and it's symmetric so you can rotate it to any directin around the sphere
[02:22:33] <d3x0r> the proprortionality remains the same
[02:23:51] <d3x0r> there is kind of a bug.  When you use the Z offset, it applies a Z difference in the geodeics... which mean the displace paths DO leave that plane... and they're going up and over. There is no indicationof that Z, and they don't clip whem they leave the plane...
[02:24:23] <d3x0r> so it's a little misleading to see the +/-1 plane intersecting the sphere because you see the geodescics over the surface of the sphere instead of just that plane.  The 0 plane is 0
[02:28:56] *** Quits: Akuli (~Akuli@82-203-165-211.bb.dnainternet.fi) (Quit: Akuli)
[02:29:24] <pyzozord> Teckla: thanks for that recommendation about curcumin and peper
[02:30:18] <pyzozord> looks like this is a well studied thing and has really strong anti-inflamatory effects which work in multiple ways even as far as reducing chances for cancer
[02:30:27] <d3x0r> it's all really very 1 dimensional... can almost do most of it with just an X axis
[02:30:56] <flakland> whats really confusing is the 4 point one morphs the red grid, but not the single point
[02:31:07] <tomathy> i agree
[02:31:09] <flakland> i'm just looking at the pictures, no JS interp here
[02:31:11] *** Joins: stoneware (~stoneware@user/stoneware)
[02:31:17] *** Quits: mfiano (~mfiano@li1282-157.members.linode.com) (Ping timeout: 256 seconds)
[02:31:50] <flakland> shouldn't the lines be displaces on the single point example?
[02:32:20] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[02:32:59] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 256 seconds)
[02:33:16] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[02:33:53] *** Quits: kveroneau (kveroneau@node1.veroneau.net) (Quit: Follow my Nick on Twitter and YouTube!)
[02:33:54] <d3x0r> well if it's a 0 displacmenet condition then no
[02:34:02] <flakland> 0 mass?
[02:34:18] <d3x0r> like initial conditions - it's not until you expand the EM (electromagnetic) space that light travels in that its paths become not flat
[02:34:24] <d3x0r> 0 mass at that point
[02:36:49] <d3x0r> it's an aether - but there's no drag because light is in it... there is geodesic precession between spin and linear space (gravity probe B) .  It applies to EM stuff... (which basically all mass is) there's various reasons one would expect mater to be attracted within the compressed space 
[02:37:03] *** Quits: poww0wmus1c (~poww0wmus@gateway/tor-sasl/poww0wmus1c) (Quit: leaving)
[02:37:07] <d3x0r> but mostly it's where the compression is highest or the spread is the highest   
[02:37:53] <flakland> what use is  a 0 mass point,  it's just really confusing, and what the red lines even represent
[02:38:25] <d3x0r> radial displacement of circles - because it's really just a linear thing r-theta polar coordinates can work too
[02:38:35] <d3x0r> it becomes more confusing in the 4 particle case and why it's not there
[02:38:36] <flakland> displacement of a 0 mass circle?
[02:39:16] <d3x0r> the circle is a geodesic in space too - it's more about the gradient between the rings that it's indicating
[02:39:21] <psystemupdate> hey this might sound stupid but where can you download this metaverse facebook is talking about, i have some warez to smugglez
[02:39:32] <flakland> how do the rings have a size?
[02:39:48] <d3x0r> they exist at a size in EM space
[02:39:49] <flakland> some kind of unit length?
[02:39:58] <d3x0r> ya a radius from the emitter
[02:40:09] <d3x0r> displacement
[02:40:53] <flakland> i don't know if displacement is the right word for a 0 mass objhect
[02:41:07] <d3x0r> because the different angles of scissoring on the squares is less clear that the change happens in a radius
[02:41:23] <d3x0r> it wouldn't be... until it has mass and displaces the space around it
[02:42:44] *** Joins: Atque (~Atque@user/atque)
[02:42:47] *** Quits: terminalpusher (~terminalp@2a01:586:a4a5:1:a8d0:5524:e423:6127) (Remote host closed the connection)
[02:42:48] <flakland> and iirc light doesn't get displaced or pushed away from an object, it selects the shortest path to the viewer
[02:43:02] <d3x0r> https://github.com/d3x0r/STFRPhysics/blob/master/math/GravityCurves.png initially it's just flat, there's no displacment.  In the bottom right corner, is the displaced space; yes the composition of that image is bad becaues it's the second case that's more interesting
[02:43:04] <bayaz> Title: STFRPhysics/GravityCurves.png at master · d3x0r/STFRPhysics 
[02:43:27] <d3x0r> is does - if you didn't have that displacment projected - it would be flat, and shortest path
[02:44:01] <d3x0r> it also follows geodesics, and doesn't accelerate or get shifted from them
[02:44:19] *** Quits: src (~src@user/src) (Quit: Leaving)
[02:45:18] *** Joins: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de)
[02:45:18] *** Quits: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de) (Changing host)
[02:45:18] *** Joins: resamvi (~resamvi@user/resamvi)
[02:46:28] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Ping timeout: 264 seconds)
[02:50:02] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[02:51:39] *** Joins: soapsudsxx (~soapsudsx@209.221.40.158)
[02:51:52] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 264 seconds)
[02:52:04] *** Quits: ixil (~ixil@82.197.178.137) (Remote host closed the connection)
[02:53:21] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:54:44] *** Joins: VincentValentine (~VincentVa@79.126.106.250)
[02:54:49] <d3x0r> https://i.ibb.co/FbpZZWk/chrome-MT2-OFGVQ6g.png flakland and then this is inner totation curves - if something happens to hit the displaced space just right, then can go in, and interact with the other spinning things for a while, and then come back out
[02:54:51] <bayaz> Type: image/png Size: 186.6 kB 
[02:55:13] <d3x0r> Which is another demo in the same project... but dealing with rotations.  Surely negative space can't be infinite itself...
[02:55:28] <d3x0r> if there's nothing spinnin in that space, then there's no displacement
[02:55:39] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) (Ping timeout: 256 seconds)
[02:55:47] <d3x0r> if there is a matter, it's possible it's there and almost all geoddeiscs are around it and don't interact with it 
[02:55:51] <d3x0r> (dark matter)
[02:56:22] <d3x0r> at a larger scale though - you'd get shimmer on a cloaked mass where there's a uncertainty based on position for which geodesic is least time
[02:56:30] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[02:56:55] *** Joins: Macuser (~Macuser@216.30.159.201)
[02:57:22] *** Joins: KillerWasp (KillerWasp@user/killerwasp)
[02:58:04] <KillerWasp> hello random glitched guys
[02:58:14] <d3x0r> I wish
[03:03:09] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:03:45] <pyzozord> while vs do while?
[03:04:13] <pyzozord> it bothers me that we can't have one construct for all looping needs
[03:04:59] <d3x0r> do you always want to do it once?
[03:05:30] <xsperry> pyzozord, recursion
[03:07:29] *** Joins: caramel (~caramel@user/caramel)
[03:08:09] <flakland> ahah! there is another word for displacement that is used  "gravitational flux density"
[03:08:18] <pyzozord> i think i'd like dowhile (condition) { code; } better than do { code; } while(condition);
[03:08:31] <pyzozord> That's a bit weird, even though it reads better in english. 
[03:08:33] *** Joins: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:55f1:210:90cf:cd28)
[03:08:47] <pyzozord> You rarely get to read entire loop at once
[03:09:00] <pyzozord> they tend to have at least sever lines of code
[03:10:52] <sonny> looping contructs are not generic, unless you allow goto
[03:10:57] *** Quits: swp (~swp@143.176.249.0) (Ping timeout: 256 seconds)
[03:11:11] <sonny> 2-3 forms are common
[03:11:23] *** Quits: |smlckz| (smlckz@user/smlckz) (Quit: WeeChat 3.2)
[03:11:44] <sonny> dowhile (condition) { code; } -- this is a while loop
[03:13:45] <tomathy> why take ye thought for raiment?
[03:17:37] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[03:17:49] *** Joins: JanC (~janc@user/janc)
[03:18:10] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[03:20:02] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:21:07] <sonny> exotic imperative like while-else seems to have been dropped entirely
[03:23:15] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:23:56] *** Quits: dld (~dld@2601:197:600:1210:4c8f:59ca:20e7:8c51) (Quit: WeeChat 3.0)
[03:24:10] *** Joins: davidlowryduda (~dld@2601:197:600:1210:4c8f:59ca:20e7:8c51)
[03:24:24] *** davidlowryduda is now known as dld
[03:25:10] <pyzozord> while else is in python
[03:25:17] <pyzozord> I really like it
[03:25:35] <dTal> recursion is the loop primitive
[03:26:24] <sonny> oh really, didn't know that
[03:26:46] <dTal> not in python, sorry, I meant in general
[03:26:53] <dTal> echoing xsperry
[03:27:18] <dTal> Python doesn't do TCO and so handles recursion poorly for loops
[03:27:30] <sonny> I was responing to pyzozord
[03:27:48] <dTal> Python likes to enforce blub-style programming
[03:27:56] <sonny> blub?
[03:28:17] *** Quits: Guest3140 (~vit@chello085216193138.chello.sk) (Ping timeout: 252 seconds)
[03:29:09] <JanC> there are versions of Python that can handle near infinite recursion, of course
[03:29:49] <dTal> sonny: "blub" was a term coined by paul graham for the didactical "average programming language"
[03:29:53] *** Joins: jinsun (~quassel@user/jinsun)
[03:30:02] *** Quits: zopsi_ (zopsi@2600:3c00::f03c:91ff:fe14:551f) (Quit: Oops)
[03:30:03] *** Quits: jinsun (~quassel@user/jinsun) (*.net *.split)
[03:30:03] *** Quits: dld (~dld@2601:197:600:1210:4c8f:59ca:20e7:8c51) (*.net *.split)
[03:30:03] *** Quits: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:55f1:210:90cf:cd28) (*.net *.split)
[03:30:03] *** Quits: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au) (*.net *.split)
[03:30:03] *** Quits: ChromaCat248 (~ChromaCat@user/chromacat248) (*.net *.split)
[03:30:03] *** Quits: hoochmonger (~hoochmong@user/hoochmonger) (*.net *.split)
[03:30:03] *** Quits: wildo (~lain6141@119.224.72.222) (*.net *.split)
[03:30:03] *** Quits: maxzor_ (~maxzor@2a01cb04054faa002934748502e5b064.ipv6.abo.wanadoo.fr) (*.net *.split)
[03:30:03] *** Quits: Rayke (rayke@user/rayke) (*.net *.split)
[03:30:03] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (*.net *.split)
[03:30:03] *** Quits: makersmasher (~makersmas@2600:6c40:5b00:158d:62a4:4cff:feb5:d54a) (*.net *.split)
[03:30:03] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (*.net *.split)
[03:30:03] *** Quits: neunon (~neunon@user/neunon) (*.net *.split)
[03:30:03] *** Quits: voirnox (~voirnox@xor.moe) (*.net *.split)
[03:30:03] *** Quits: Solak (~solak@cthia.xs4all.nl) (*.net *.split)
[03:30:03] *** Quits: unetudiantJS (~unetudian@144.202.10.138) (*.net *.split)
[03:30:03] *** Quits: Teacup_ (~teacup@user/teacup) (*.net *.split)
[03:30:03] *** Quits: jootoi_ (~jootoi@130.61.158.197) (*.net *.split)
[03:30:03] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-2958-7b1f-8e17-11c9.res6.spectrum.com) (*.net *.split)
[03:30:03] *** Quits: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de) (*.net *.split)
[03:30:03] *** Quits: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net) (*.net *.split)
[03:30:03] *** Quits: tomathy (~jenova@user/quetzl) (*.net *.split)
[03:30:03] *** Quits: getynge (~getynge@2601:702:80:2fc0::a0a3) (*.net *.split)
[03:30:03] *** Quits: Elzington (~Elzington@static-68-235-44-44.cust.tzulo.com) (*.net *.split)
[03:30:03] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:6113:19c1:4341:bd44) (*.net *.split)
[03:30:03] *** Quits: jdmark (~jdmark@097-102-095-007.res.spectrum.com) (*.net *.split)
[03:30:03] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (*.net *.split)
[03:30:03] *** Quits: Enitin (~Enitin@82.102.22.84) (*.net *.split)
[03:30:03] *** Quits: sfields (~sfields@2605:a601:adea:7a00:4b8a:a822:48cd:474f) (*.net *.split)
[03:30:03] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (*.net *.split)
[03:30:03] *** Quits: arcatech (~arcatech@user/arcatech) (*.net *.split)
[03:30:03] *** Quits: Teckla (~Teckla@user/teckla) (*.net *.split)
[03:30:03] *** Quits: CrypticSquared (~CrypticS_@user/crypticsquared) (*.net *.split)
[03:30:03] *** Quits: RPNX (RPNX@gateway/vpn/protonvpn/rpnx) (*.net *.split)
[03:30:03] *** Quits: emf (~emf@2620:10d:c090:400::5:d28b) (*.net *.split)
[03:30:03] *** Quits: Twipply (~Twipply@user/twipply) (*.net *.split)
[03:30:03] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (*.net *.split)
[03:30:03] *** Quits: Burgundy (~yomon@79.115.213.171) (*.net *.split)
[03:30:03] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (*.net *.split)
[03:30:03] *** Quits: Lazenca (~lazenca@user/lazenca) (*.net *.split)
[03:30:03] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (*.net *.split)
[03:30:03] *** Quits: nshire (~nshire@user/nshire) (*.net *.split)
[03:30:03] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (*.net *.split)
[03:30:03] *** Quits: bpmedley_ (~bpmedley@2600:1700:e2c:8410:48d8:bca6:b317:876) (*.net *.split)
[03:30:03] *** Quits: raczka1 (~raczka@dedicated-aid6.rev.nazwa.pl) (*.net *.split)
[03:30:03] *** Quits: bazhang (~bazhang@2607:fcd0:aa80:1304::bf2d) (*.net *.split)
[03:30:03] *** Quits: gr1m (~gr1m@45.83.220.218) (*.net *.split)
[03:30:03] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (*.net *.split)
[03:30:03] *** Quits: glider (~glider@user/glider) (*.net *.split)
[03:30:03] *** Quits: plantman (~plantman@2601:405:4680:1b0::2) (*.net *.split)
[03:30:03] *** Quits: SuperNintendoSUX (~sjw@69.206.48.64) (*.net *.split)
[03:30:03] *** Quits: geeknix (~pi@2001:e68:5432:abd2:b9e4:e37d:3d09:4004) (*.net *.split)
[03:30:03] *** Quits: en7ropy (~en7ropy@c-73-60-111-180.hsd1.ma.comcast.net) (*.net *.split)
[03:30:03] *** Quits: nulleip (~luiz@user/nulleip) (*.net *.split)
[03:30:03] *** Quits: arahael (~arahael@27-32-144-20.tpgi.com.au) (*.net *.split)
[03:30:03] *** Quits: tomtomgps (~tom@2a01:cb1c:56f:a200:25ed:a2da:a455:9ad7) (*.net *.split)
[03:30:03] *** Quits: wilz (~wilz@modemcable036.177-131-66.mc.videotron.ca) (*.net *.split)
[03:30:03] *** Quits: motherr (~motherr@user/motherr) (*.net *.split)
[03:30:03] *** Quits: sauce (~sauce@omae.wa.mou.shindei.ru) (*.net *.split)
[03:30:04] *** Quits: davros (~davros@host86-185-99-134.range86-185.btcentralplus.com) (*.net *.split)
[03:30:04] *** Quits: kmh (~kmh@2a00:6020:5004:6800:e4b6:6015:65e3:7907) (*.net *.split)
[03:30:04] *** Quits: swinnenb (~swinnenb@user/swinnenb) (*.net *.split)
[03:30:04] *** Quits: johncs (~johncs@2604:a880:2:d0::216b:f001) (*.net *.split)
[03:30:04] *** Quits: carbolymer (~carbolyme@dropacid.net) (*.net *.split)
[03:30:04] *** Quits: BenLand100 (~bland@user/benland100) (*.net *.split)
[03:30:04] *** Quits: hirish (~hirish@ip85.ip-137-74-20.eu) (*.net *.split)
[03:30:04] *** Quits: user282069 (user@2a01:7e00::f03c:92ff:fe7f:456d) (*.net *.split)
[03:30:04] *** Quits: BuddyTheElf (launchd@bitbot/launchd) (*.net *.split)
[03:30:04] *** Quits: edenist (~edenist@rdns.robotprofessor.net) (*.net *.split)
[03:30:04] *** Quits: PsyZeus (~TheLight@user/psyzeus) (*.net *.split)
[03:30:16] *** Joins: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net)
[03:30:24] *** Joins: nshire (~nshire@47.146.41.156)
[03:30:25] *** Joins: en7ropy (~en7ropy@c-73-60-111-180.hsd1.ma.comcast.net)
[03:30:26] *** Joins: davros (~davros@host86-185-99-134.range86-185.btcentralplus.com)
[03:30:26] *** Joins: unetudiantJS (~unetudian@144.202.10.138)
[03:30:28] *** Joins: PsyZeus (~TheLight@37.48.95.134)
[03:30:28] *** Joins: BenLand100 (~bland@64.253.5.174.dyn-cm-pool75.pool.hargray.net)
[03:30:30] *** Quits: nshire (~nshire@47.146.41.156) (Changing host)
[03:30:30] *** Joins: nshire (~nshire@user/nshire)
[03:30:32] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[03:30:36] *** Joins: launchd (launchd@bitbot/launchd)
[03:30:37] *** aoei\Chickatrice is now known as aoei
[03:30:40] *** Joins: dld (~dld@2601:197:600:1210:4c8f:59ca:20e7:8c51)
[03:30:40] *** Joins: Rayke (rayke@2600:3c03::f03c:92ff:fe86:498b)
[03:30:41] *** Joins: wilz (~wilz@modemcable036.177-131-66.mc.videotron.ca)
[03:30:42] *** Joins: raczka1 (~raczka@dedicated-aid6.rev.nazwa.pl)
[03:30:46] *** Joins: plantman (~plantman@2601:405:4680:1b0::2)
[03:30:47] *** Joins: Teacup (~teacup@user/teacup)
[03:30:50] *** Joins: edenist (edenist@rdns.robotprofessor.net)
[03:30:53] *** Quits: Colt (~Colt@user/colt) (Remote host closed the connection)
[03:30:56] *** Joins: Burgundy (~yomon@79.115.213.171)
[03:31:01] *** Joins: zopsi (~zopsi@irc.dir.ac)
[03:31:04] *** Joins: Seirdy (~Seirdy@76-247-182-44.lightspeed.sjcpca.sbcglobal.net)
[03:31:05] *** Quits: Rayke (rayke@2600:3c03::f03c:92ff:fe86:498b) (Signing in (Rayke))
[03:31:05] *** Joins: Rayke (rayke@user/rayke)
[03:31:09] *** BenLand100 is now known as Guest1483
[03:31:11] *** Joins: tomathy (~jenova@user/quetzl)
[03:31:14] *** Joins: SuperNintendoSUX (~sjw@69.206.48.64)
[03:31:16] *** Joins: user282069 (user@2a01:7e00::f03c:92ff:fe7f:456d)
[03:31:19] *** Joins: geeknix (~pi@180.74.190.212)
[03:31:29] *** Quits: Guest1483 (~bland@64.253.5.174.dyn-cm-pool75.pool.hargray.net) (Changing host)
[03:31:29] *** Joins: Guest1483 (~bland@user/benland100)
[03:31:30] *** Quits: PsyZeus (~TheLight@37.48.95.134) (Changing host)
[03:31:30] *** Joins: PsyZeus (~TheLight@user/psyzeus)
[03:31:40] *** Quits: tomathy (~jenova@user/quetzl) (Read error: Connection reset by peer)
[03:31:43] <dTal> sonny: http://www.paulgraham.com/avg.html
[03:31:44] <bayaz> Title: Beating the Averages 
[03:31:50] *** Joins: jdmark (~jdmark@097-102-095-007.res.spectrum.com)
[03:31:57] *** Joins: Twipply (~Twipply@user/twipply)
[03:31:57] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[03:32:02] *** Joins: neunon (~neunon@user/neunon)
[03:32:05] *** Joins: Lazenca (Lazenca@user/lazenca)
[03:32:09] *** Quits: Twipply (~Twipply@user/twipply) (Read error: Connection reset by peer)
[03:32:11] *** Joins: maxzor (~maxzor@2a01cb04054faa002934748502e5b064.ipv6.abo.wanadoo.fr)
[03:32:14] *** Joins: Colt (~Colt@user/colt)
[03:32:15] *** Joins: hirish (~hirish@ip85.ip-137-74-20.eu)
[03:32:16] *** Joins: johncs (~johncs@2604:a880:2:d0::216b:f001)
[03:32:18] *** Joins: jinsun (~quassel@user/jinsun)
[03:32:18] *** Joins: voirnox (~voirnox@xor.moe)
[03:32:20] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Read error: Connection reset by peer)
[03:32:22] *** Joins: kmh (~kmh@2a00:6020:5004:6800:f48c:606a:7e94:b0ae)
[03:32:25] *** Joins: carbolymer (~carbolyme@dropacid.net)
[03:32:27] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:55f1:210:90cf:cd28)
[03:32:29] *** Quits: inky_ (~inky@46.36.112.226) (Ping timeout: 256 seconds)
[03:32:30] *** Joins: jootoi (~jootoi@130.61.158.197)
[03:32:32] *** Joins: Twipply (~Twipply@user/twipply)
[03:32:34] *** Joins: tomathy (~jenova@user/quetzl)
[03:32:39] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[03:32:41] *** Joins: gr1m (~gr1m@45.83.220.218)
[03:32:41] *** Joins: swinnenb (~swinnenb@user/swinnenb)
[03:32:52] <dTal> the idea is tha when people look at less powerful languages than the one they're used to, they see that they are less powerful; but when they look up, at *more* powerful languages, they see only weirdness
[03:32:59] *** Joins: CrypticSquared (~CrypticS_@user/crypticsquared)
[03:32:59] *** Joins: hoochmonger (~hoochmong@user/hoochmonger)
[03:33:12] *** Joins: sauce (~sauce@omae.wa.mou.shindei.ru)
[03:33:33] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[03:34:08] *** Joins: niek (~niek@2a02:6ea0:dc05::a15d)
[03:34:11] *** Quits: hexnewbie (~hexnewbie@user/hexnewbie) (Ping timeout: 256 seconds)
[03:34:15] *** Joins: glider (~glider@user/glider)
[03:34:23] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[03:34:26] *** Joins: tomtomgps (~tom@2a01:cb1c:56f:a200:25ed:a2da:a455:9ad7)
[03:34:50] <dTal> and I perceive that Python has a kind of blub-itis, where anything that's "too clever" is discouraged, sometimes forcibly by odd language limitations like single-line lambdas
[03:35:10] *** Joins: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de)
[03:35:11] *** Joins: tesuji (~quassel@2a02:908:180:9500:f5e8:aae6:d52b:d22b)
[03:35:15] *** Joins: Solak (~solak@cthia.xs4all.nl)
[03:35:18] *** Joins: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au)
[03:35:18] *** Joins: wildo (~lain6141@119.224.72.222)
[03:35:19] *** Joins: nulleip (~luiz@user/nulleip)
[03:35:20] *** Joins: Teckla (~Teckla@user/teckla)
[03:35:23] <JanC> single-line lambdas are really just because nobody found a good syntax for them  :)
[03:35:28] *** Joins: hexnewbie (~hexnewbie@user/hexnewbie)
[03:35:39] *** Quits: tesuji (~quassel@2a02:908:180:9500:f5e8:aae6:d52b:d22b) (Client Quit)
[03:35:41] *** Joins: motherr (~motherr@user/motherr)
[03:35:49] *** Joins: emf (~emf@2620:10d:c090:400::5:d28b)
[03:35:51] <kennyd> that's python in a nutshell. form over function
[03:35:54] *** Joins: tesuji (~quassel@2a02:908:180:9500:f5e8:aae6:d52b:d22b)
[03:36:09] *** Joins: arcatech (~arcatech@user/arcatech)
[03:38:24] <vdamewood> I think I want to start a company called Ball, and I'll make a Python distribution and call it Ball Pytho.
[03:38:25] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[03:38:32] *** Quits: sheb (~sheb@31.223.228.71) (Ping timeout: 240 seconds)
[03:38:35] <vdamewood> Ball Python*
[03:38:44] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[03:39:52] *** Quits: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca) (Ping timeout: 256 seconds)
[03:39:53] <unetudiantJS> vdamewood: there already is a company named ball
[03:40:25] <vdamewood> Oh, well, there goes that dream.
[03:42:14] *** Joins: jarthur_ (~jarthur@cpe-70-114-198-37.austin.res.rr.com)
[03:42:35] <vdamewood> Well, at any rate, I'm now In a position where I need to run a debigger across a P/Invoke call.
[03:42:41] <vdamewood> debugger
[03:42:59] *** Joins: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca)
[03:43:35] <sonny> dTal that's an old doc
[03:43:37] <flakland> sigstop then attach with gdb
[03:44:23] <JanC> it's not entirely impossible to create "anonymous" functions in Python IIRC, it's just that the current (lack of) syntax is so horrible that nobody wants to use it  :)
[03:48:21] *** Quits: rickybobby (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 256 seconds)
[03:49:07] <pyzozord> debigger
[03:49:15] <pyzozord> smallerer
[03:51:16] *** Parts: Joanna (uid57472@id-57472.lymington.irccloud.com) ()
[03:51:25] <pyzozord> wish I had a debigger for realestate prices
[03:52:42] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[03:53:49] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:55:03] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[03:55:26] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[03:56:06] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[03:56:12] *** Parts: johncs (~johncs@2604:a880:2:d0::216b:f001) (bye)
[03:59:08] *** Quits: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca) (Ping timeout: 256 seconds)
[04:01:31] <dre> <kennyd> that's python in a nutshell. form over function
[04:01:37] <dre> yep and thank god for that
[04:02:58] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Ping timeout: 265 seconds)
[04:03:11] *** Joins: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca)
[04:03:11] *** Quits: tomathy (~jenova@user/quetzl) (Remote host closed the connection)
[04:03:30] *** justache is now known as totallynotjustac
[04:04:10] *** totallynotjustac is now known as justache
[04:05:05] *** Quits: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca) (Client Quit)
[04:05:24] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[04:05:39] *** Joins: tomathy (~jenova@user/quetzl)
[04:05:40] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[04:06:34] <vdamewood> pyzozord: Most people call debiggers size optimizers for some stupid reason.
[04:07:31] <vdamewood> flakland: Last I checked, gdb didn't support the .NET Runtime, and the OS I'm using doesn't have sigstop.
[04:12:11] *** Joins: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:6113:19c1:4341:bd44)
[04:12:45] *** Quits: jaysicks (~jaysicks@94-21-138-235.pool.digikabel.hu) (Remote host closed the connection)
[04:12:47] *** Joins: zaher_ (~zaher@37.48.152.170)
[04:13:36] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:55f1:210:90cf:cd28) (Killed (NickServ (GHOST command used by BrianG61UK_!~BrianG61U@2a02:8010:66b7:dddd:6113:19c1:4341:bd44)))
[04:13:44] *** BrianG61UK_ is now known as BrianG61UK
[04:14:21] *** Joins: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:55f1:210:90cf:cd28)
[04:15:02] *** Quits: zaher (~zaher@37.48.152.30) (Ping timeout: 256 seconds)
[04:15:52] *** Joins: ircuser (~ircuser@S01069050ca4e3573.cg.shawcable.net)
[04:15:53] <flakland> vdamewood, ouch
[04:16:30] *** Joins: jazzy (~jaziz@user/jaziz)
[04:19:19] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[04:19:31] *** Quits: Burgundy (~yomon@79.115.213.171) (Ping timeout: 256 seconds)
[04:19:41] *** Quits: Seirdy (~Seirdy@76-247-182-44.lightspeed.sjcpca.sbcglobal.net) (Quit: exiting 3.3)
[04:19:46] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[04:19:50] <flakland> "SuspendThread" ?
[04:20:13] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[04:20:15] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:22:48] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[04:23:58] *** Joins: bpmedley (~bpmedley@2600:1700:e2c:8410:7c85:8272:3c4d:abee)
[04:25:27] *** Quits: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de) (Remote host closed the connection)
[04:27:10] *** justache is now known as zoite
[04:28:05] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[04:29:11] *** zoite is now known as z0ite
[04:29:13] <vdamewood> flakland: It exists as a function.
[04:29:23] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:29:45] <vdamewood> Well, looks like SWIG doesn't handle one of my scenarios correctly, so that's not going to work.
[04:29:59] <vdamewood> I really will have to hand-code these wrappers.
[04:35:21] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 245 seconds)
[04:36:31] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[04:41:22] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:43:04] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:43:07] <vdamewood> And my project is setup in such an ad-hoc manner it's impossible to follow the build.
[04:43:31] <vdamewood> I'm notsure if I want to abandon this project, or go all-in on it.
[04:44:51] <vdamewood> I'll go for abandoning it.
[04:46:16] *** Joins: skepta (~eric@36.70.44.228)
[04:47:21] *** Quits: skepta (~eric@36.70.44.228) (Client Quit)
[04:47:37] *** zaher_ is now known as zaher
[04:47:42] *** Joins: skepta (~eric@36.70.44.228)
[04:49:16] <KillerWasp> ☕
[04:50:34] * vdamewood drinks KillerWasps wasp's emoji.
[04:51:06] <LjL> dTal, "But I don't expect to convince anyone (over 25) to go out and learn Lisp. The purpose of this article is not to change anyone's mind, but to reassure people already interested in using Lisp" sounds slightly elitist, and the thing linked from "over 25" sounds like a much better story of being taught programming than i ever had (since *i* only had a tiny amount of BASIC in high school, nevermind being taught programming in 6 grade! good thing i already 
[04:51:06] <LjL> knew bad BASIC from my own learning)
[04:52:01] <LjL> but despite the elitism, since i am in fact over 25, and i also find any example of Lisp or Scheme or similar program, even the simplest, immediately foreign and utterly puzzling, maybe i should gain comfort knowing that i'd need a younger and smarter mind to deal with this, and just keep writing Python
[04:52:59] <tomathy> is there a literary format that preps a document for hashing?
[04:53:15] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[04:53:32] *** Quits: peteyboy_ (~peteyboy1@95.169.232.161) (Ping timeout: 252 seconds)
[04:53:40] <KillerWasp> I would have loved to accept a job at QBasic.
[04:54:00] <vdamewood> I'm over 25 and I understand Lisp more or less.
[04:54:03] <KillerWasp> Did any jobs ever exist for QBasic or Turbo C++?
[04:54:20] *** Quits: aoei (aoei@nethackscoreboard/aoei) (Quit: hold that thought - server reboot)
[04:54:33] <vdamewood> KillerWasp: I once got Turbo C++ from someone who wanted me to write a program for his business, does that count?
[04:54:51] <KillerWasp> vdamewood: yes
[04:55:28] <vdamewood> I don't think the person had any idea what the project entailed, and probably didn't understand that Turbo C++ was wholly the wrong tool for the job.
[04:55:35] *** Joins: aoei (aoei@nethackscoreboard/aoei)
[04:55:47] <KillerWasp> It is the type of job that is often offered for a group of systems analysts as well.
[04:56:17] <vdamewood> As for QBasic, I don't think anyone, not even Microsoft, took it seriously as a programming platform.
[04:56:28] <KillerWasp> really?
[04:57:03] <vdamewood> Yeah, even when they were developign QBasic, they were developing BASIC implementations targeting professionals separately.
[04:57:09] <KillerWasp> How were the applications developed at that time?
[04:57:58] <KillerWasp> like Lotus 123, Quatroo Pro, Professional Write, Word Star, etc.
[04:58:16] <oldlaptop> like what, QuickBasic?
[04:58:28] <KillerWasp> or Turbo C++ maybe
[04:58:32] <JanC> QuickBasic
[04:58:34] <vdamewood> There were lots of varied and disparate ways to develop back in those days.
[04:58:34] <oldlaptop> I'm not sure I buy a distinction between QBASIC and QuickBasic as "different implementations"
[04:58:44] <JanC> and IIRC there was a level above that
[04:58:57] <vdamewood> QBasic came after QuickBasic. It would have been BASIC professional development System.
[04:58:57] <KillerWasp> I always believed that these programs were developed with Turbo C/C++
[04:59:23] <vdamewood> Turbo C++ itself targeted hobyists. Borland C++ was targed for professional development.
[04:59:50] <JanC> the original Turbo products were definitely targeting professionals (too)
[05:00:40] <JanC> Borland C++ didn't even exist until version 6.x or so
[05:00:51] <JanC> maybe even 7
[05:00:51] <oldlaptop> QBASIC is substantially a stripped-down version of QuickBasic, the most important deficiency (besides being a BASIC) being (if I recall correctly) that QBASIC lacked a "compiler" (or the ability to generate EXE files at any rate; I somehow suspect QuickBasic's output was closer to an interpreter with the script built in, but never mind)
[05:01:42] <KillerWasp> yes, i mean QBasic like QuickBasic 7.0 with compiler and all (qbx.exe)
[05:02:29] <oldlaptop> as anyone who's used them could tell you, the interfaces are basically identical (as is "EDIT.COM" in DOS 5+, which IIRC just calls QBASIC with a flag that means "run as a basic text editor")
[05:02:44] <JanC> I think QuickBasic compiled to some sort of bytecode or structure or so, which was then interpreted
[05:03:05] <JanC> at least, that's what (early?) Visual Basic also did
[05:03:15] <oldlaptop> I am not familiar with the implementation details of QuickBasic. I would assume out of hand they're basically the same as the implementation details of QBASIC.
[05:03:31] <vdamewood> oldlaptop: I build with QuickBasic 4.5, I don't think there was any BASIC code in the exe.
[05:03:34] <vdamewood> built*
[05:03:43] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[05:04:02] <oldlaptop> vdamewood: Perhaps it is byte-compiled or something then - maybe even really compiled. (You opened your EXE in a hex editor or something to look?)
[05:04:04] <vdamewood> oldlaptop: There was another big difference between the two. There was a statement CALL ABSOLUTE that worked very differently between the two.
[05:04:21] <KillerWasp> oldlaptop: time to disassembler it! :P
[05:04:44] <vdamewood> oldlaptop: Yeah. It was a long time ago, and I didn't understand x86 machine code (or assembly), so I just opened it, saw binary garbage, and closed it. So no details.
[05:04:51] <JanC> QBASIC took some things from QuickBasic but not all (and it lacked features especially)
[05:04:58] <vdamewood> But I do remember there not being a copy of the BASIC code in the exe.
[05:05:03] <oldlaptop> That's what "stripped-down version" means.
[05:05:23] <JanC> it was not just stripped down
[05:05:38] *** Quits: _0x1d3 (sid43116@id-43116.tinside.irccloud.com) (Ping timeout: 252 seconds)
[05:05:44] <JanC> maybe they had to replace some stuff that they cut
[05:05:54] <vdamewood> Anyway, the relationship between QuickBASIC and QBASIC is irrelevant to my statement that Microsoft was pushing other tools for professional development.
[05:06:14] <vdamewood> Besides, QuickBASIC didn't come with GORILLA.BAS.
[05:06:21] <JanC> and I suppose after it forked, QuickBasic developed further while QBASIC didn't really
[05:06:34] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[05:06:37] <vdamewood> JanC: No. Quick Basic development stopped before QBASIC was released.
[05:06:49] <JanC> oh?
[05:06:58] *** Joins: _0x1d3 (sid43116@id-43116.tinside.irccloud.com)
[05:07:05] <vdamewood> I remember QuickBASIC 4.5 being older than QBASIC 1.0, and 4.5 was the last release.
[05:07:41] <vdamewood> Make that version 7.
[05:07:41] <JanC> but the (other) professional BASIC thing survived?
[05:08:04] <oldlaptop> My vague recollection was that it more or less continued as early VB, but this is rapidly going past the few excretions I give about Microsoft's BASICs, 20th century or otherwise
[05:08:06] *** Quits: stagas (~stagas@2a02:587:c40e:fc00:c20d:277e:7f0e:46bb) (Ping timeout: 268 seconds)
[05:08:13] <JanC> I remember software being written with that into the 1990s at least
[05:08:13] <vdamewood> JanC: Yes, it wasn't called QuickBASIC, it was something like BASIC Professional Development system
[05:08:16] *** Quits: avery (sid501608@id-501608.uxbridge.irccloud.com) (Ping timeout: 245 seconds)
[05:08:29] <JanC> yeah, I don't remember the exact name
[05:08:36] <vdamewood> PDS eventually became VB though, yes.
[05:09:07] <JanC> I remember some DOS-based accounting software around here being written in it  :)
[05:09:08] *** Joins: avery (sid501608@id-501608.uxbridge.irccloud.com)
[05:09:10] *** zero is now known as yin
[05:09:13] *** Quits: mikrosis69 (~mikrosis@dynamic-046-114-171-169.46.114.pool.telefonica.de) (Quit: Connection closed)
[05:09:34] <vdamewood> But yeah, QBasic itself was always a toy for amateurs.
[05:09:44] *** Joins: CodeSpelunker (~CodeSpelu@user/codespelunker)
[05:10:01] <JanC> it was just to replace GWBASIC with a nicer editor
[05:10:13] <vdamewood> Pretty much, but the language was better too.
[05:10:15] <KillerWasp> my first toy!!! :'DDD
[05:10:38] <tangy> did someone say toys/
[05:10:38] <JanC> the language being better was mostly an accident probably
[05:10:39] <vdamewood> QBASIC didn't need line numbers, and supported actual subroutines and functions.
[05:11:20] <vdamewood> JanC: I think it had more to to with the fact that GW-BASIC was just terrible.
[05:11:44] <LjL> QBasic really was a *lot* better
[05:11:58] <LjL> i don't know the history but it seems unlikely to have been an accident
[05:12:32] <JanC> I don't remember GWBASIC as well as the BASIC on my Sinclair ZX Spectrum, but even that had subroutines, even if it had line-numbers?
[05:12:36] <vdamewood> I'm feeling very "Do not lecture me of the ancient magics. I was there when it was written!" right now.
[05:13:01] * tangy bows
[05:13:05] <vdamewood> Did it have subroutines, or gosub?
[05:13:20] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[05:13:21] <JanC> GOSUB are subroutines
[05:13:36] <JanC> maybe without some fancy syntax  :)
[05:13:36] <vdamewood> No, GOSUB was a half-way step toward subroutines.
[05:13:51] <KillerWasp> anyone know the source code for Quick Basic 7.0? (qbx.exe)
[05:14:08] <vdamewood> KillerWasp: Like, have it memoriezed?
[05:14:10] <KillerWasp> it's for gold collection
[05:14:54] <vdamewood> KillerWasp: Anyway, to answer the question further, assembly wasn't uncommon back then either.
[05:14:56] <LjL> anyway what i meant was not that i was content with stopping at BASIC, but http://www.trollope.org/scheme.html (which is the thing that the "over 25" linked to, not sure though if vdamewood started understanding Lisp *before* or *after* they were 25? :P) describes a *series* of elective computer classes, BASIC, then Pascal, then Logo, finally Scheme, starting from 6th grade (11yo) to high school, and complains that everything except Logo and Scheme were the 
[05:14:56] <LjL> wrong things to teach, and confused everything. well, maybe that was the case, but computers weren't ever *mentioned* for me at school until high school when we had a cursory BASIC class that was one hour every two weeks. i just think people should appreciate what their education system offers in perspective, even if it's not the best, and BASIC or Pascal may be worse starting languages than Scheme
[05:14:57] <bayaz> Title: A Scheme Story 
[05:15:53] <vdamewood> Okay, I may have been under 25 when I started with LISP.
[05:16:08] <LjL> it also does mention, though, that with Scheme all the complicated rote-learned things about recursion, tree traversing, and whatnot (again, very very far from the trivial things i was taught about computing in school) finally started to make sense - i wonder whether they would have equally made sense had they been taught Scheme from the start, instead of spending many years struggling to understand those things before.
[05:16:15] <[itchyjunk]> damn youngins, not appriciating what they have
[05:16:27] <KillerWasp> something like it: https://github.com/qb40/qb
[05:16:28] <bayaz> Title: GitHub - qb40/qb: Microsoft QuickBASIC v4.0 in DOS. 
[05:16:33] <KillerWasp> but for more later version.
[05:16:35] <LjL> [itchyjunk], i have no idea of their age
[05:16:56] <LjL> but i have a very clear idea that they weren't schooled in my country
[05:18:10] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[05:18:22] <LjL> BASIC definitely existed on affordable computers when i was 11, and... well, other languages existed too. so it's not like my school couldn't have taught these things, had they 1) had the computers to teach it, and 2) had any vague idea that these might be worthwhile things to teach
[05:18:51] <KillerWasp> ok, all here are binaries, that suck...
[05:19:01] *** Quits: ircuser (~ircuser@S01069050ca4e3573.cg.shawcable.net) (Ping timeout: 252 seconds)
[05:19:31] <KillerWasp> microsoft don't want set free your source code.
[05:19:36] <[itchyjunk]> When i was young, they taught lotus123 and qbasic
[05:19:43] <[itchyjunk]> i skipped on the lotus shit
[05:19:48] <[itchyjunk]> i think i did qbasic for a year
[05:20:08] <LjL> well, when i was young, we simply didn't have a concept of elective classes at school
[05:20:19] <[itchyjunk]> it wasn't elective.
[05:20:41] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:20:46] <LjL> everybody took the same classes, we were always in the same classroom, the only difference, if any, was that when you started school, you could decide like whether to be in the class that had some English teaching
[05:20:56] <LjL> [itchyjunk], well you said you skipped on the lotus shit
[05:21:02] <[itchyjunk]> i did.
[05:21:05] <LjL> how did you skip it if it wasn't elective?
[05:21:07] <[itchyjunk]> doesn't mean it's elective.
[05:21:34] <LjL> oh well, i don't pretend to understand your school system. i barely understand mine.
[05:22:43] <LjL> i definitely couldn't "skip" things and expect to not fail the year, though
[05:23:21] <JanC> or being arrested even  :)
[05:23:22] <[itchyjunk]> i failed that section, but the teacher passed me anyways
[05:23:28] <JanC> well, your parents maybe
[05:24:07] <LjL> JanC, arrested is unlikely, but social services might get involved after enough unjustified absences
[05:24:24] <[itchyjunk]> no such thing as "social services" in my country
[05:24:37] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[05:25:24] <norias> what?! no socialists services!? how barbaric
[05:26:11] <LjL> sigh
[05:26:40] <tangy> darned helpers. who needs em! ;-p
[05:27:17] <LjL> in the type of case in question, they are more enforcers than helpers
[05:27:40] <LjL> not sending your child to school? okay, first you get asked nicely, then if you still don't, you have your child taken away
[05:30:38] <norias> so, there should be no consequences?
[05:32:08] <LjL> i struggle to see where anyone said that
[05:32:09] *** Quits: superdupond (~Kev@2a01cb0400149f004945d532820e8dbd.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[05:32:25] <tangy> wouldn't it be kinda boring, being the only kids who stay home from school?
[05:37:41] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[05:41:42] <vdamewood> tangy: but all that daytime TV!
[05:41:53] *** Joins: sheb (~sheb@31.223.228.71)
[05:41:59] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[05:44:04] *** Quits: sheb (~sheb@31.223.228.71) (Remote host closed the connection)
[05:44:20] *** Joins: sheb (~sheb@31.223.228.71)
[05:45:05] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[05:46:21] <vdamewood> Anyone ever notice that there isn't really a general Windows development channel on this network?
[05:47:26] *** Quits: gitgood (~gitgood@85.210.185.0) (Ping timeout: 252 seconds)
[05:47:59] <norias> vdamewood: is there a general linux development channel? or OS X?
[05:48:18] <vdamewood> norias: #macdev
[05:48:22] <vdamewood> for OS X.
[05:48:27] <norias> well, cool
[05:49:40] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[05:50:03] <vdamewood> Oh, and ##linux-programming exists, but only has 4 users.
[05:51:00] <dre> >Anyone ever notice that there isn't really a general Windows development channel on this network?
[05:51:08] <dre> no one with brains uses windows for development 
[05:51:41] <norias> dre: what if their users are on windows?
[05:51:52] <vdamewood> The closest that we have for Windows is #winapi, which isn't general, it's specific to the system's API.
[05:52:00] <norias> not being an ass, can you compile for windows from say linux?
[05:52:18] <dre> I think you can 
[05:52:40] <vdamewood> norias: Yes, mingw-w64 can be build for Linux.
[05:52:42] <dre> make a webapp for it :P 
[05:53:00] <vdamewood> built*
[05:53:21] *** Joins: simon323 (~simon323@2409:8a34:468:83d0:793b:4721:5b34:60ac)
[05:53:24] <vdamewood> norias: Don't worry about being an ass. You'd be completely outshined by dre if you were.
[05:54:23] <dre> (͠≖ ͜ʖ͠≖)
[05:55:41] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 252 seconds)
[05:56:13] *** Joins: brabrax (~brabrax@user/brabrax)
[05:56:24] <vdamewood> norias: Unfortunately, thouhg, compiling for Windows isn't all there is to Windows development.
[05:56:28] <vdamewood> though*
[05:56:33] *** Joins: |smlckz| (smlckz@user/smlckz)
[06:00:47] <tangy> vdamewood: lol
[06:01:01] *** Joins: Macuser (~Macuser@216.30.159.201)
[06:01:55] <flakland> ask #libera a bunch of window users in there all the time
[06:02:55] <vdamewood> tangy: What's so funny?
[06:03:07] *** Joins: Retr0id2 (~Retr0id@user/retr0id)
[06:03:29] *** Quits: Retr0id (~Retr0id@user/retr0id) (Read error: Connection reset by peer)
[06:03:30] *** Retr0id2 is now known as Retr0id
[06:04:07] *** Quits: CodeSpelunker (~CodeSpelu@user/codespelunker) (Remote host closed the connection)
[06:04:29] *** Quits: xff0x (~xff0x@2001:1a81:52c5:f300:8200:618:b8e3:ab90) (Ping timeout: 252 seconds)
[06:04:31] *** Joins: CodeSpelunker (~CodeSpelu@user/codespelunker)
[06:05:20] <tangy> the idea of 6 year olds interested in 'the bold and the beautiful.'
[06:06:17] *** Joins: xff0x (~xff0x@2001:1a81:530d:ee00:3ffa:7a4c:8a0a:d168)
[06:06:41] *** Quits: mattallmill (~mattallmi@ip68-103-132-187.ks.ok.cox.net) (Ping timeout: 252 seconds)
[06:11:35] <vdamewood> tangy: I was thinking more The Price is Right.
[06:11:53] <vdamewood> Though, yeah, the idea of kids wanting to watch soap operas is funny.
[06:12:00] *** Joins: frost (~frost@user/frost)
[06:13:42] <oldlaptop> tangy: https://www.youtube.com/watch?v=GQvHwuTB4JU
[06:13:44] <bayaz> Title: The Days of the Week 
[06:14:25] <vdamewood> oldlaptop: Is that Sesame street?
[06:14:43] <oldlaptop> That would be a "no"
[06:15:59] <vdamewood> It really does sound like the kind of parody they would do.
[06:16:34] <|smlckz|> how would you define a ''loop counter''?
[06:17:17] <vdamewood> The variable used to control the number of times a loop is executed.
[06:17:18] <oldlaptop> |smlckz|: Alas, I now need to ask how you, |smlckz|, would define "define". (Do you want a dictionary definition of the term, or are you trying to write a program that uses one?)
[06:17:34] <vdamewood> #define define
[06:18:36] <vdamewood> oldlaptop: Methinks the quotes hint at a dictionary definition.
[06:18:45] <oldlaptop> You'd hope so
[06:18:49] *** breavyn_ is now known as breavyn
[06:18:51] <vdamewood> I sure do.
[06:19:12] <oldlaptop> (https://youtu.be/GQvHwuTB4JU?t=907 is not the kind of side-splitting joke that Sesame Street would go for, I don't think)
[06:20:05] <|smlckz|> then please direct me to a dictionary on computing, where i can read about this..
[06:20:32] <vdamewood> oldlaptop: Yea, too much drinking.
[06:21:56] <|smlckz|> i am trying to find a definition that's good enough for a written exam.. our teacher gave us what vdamewood just said.. i wonder if there is more clearer definition..
[06:22:22] <flakland> counter is not an index, the question really is does it start at 0 or 1
[06:22:32] <oldlaptop> |smlckz|: I'm not sure how to phrase it more clearly.
[06:23:22] <KillerWasp> OFFTOPIC: https://0x0.st/-hNZ.png - where i can found this table?
[06:23:24] <bayaz> Type: image/png Size: 281.3 kB 
[06:24:19] <oldlaptop> I assume we're excluding a "definition" that looks like `for (int i = 0; i < 42; i++) { printf("the loop counter, i, is now %d\n", i); }`
[06:25:03] <|smlckz|> if we take a generalised loop `for (i = start; i <= end; i = f(i))`.. i, start, end all ''control'' how many times this loop is executed, right?
[06:25:37] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[06:25:41] <vdamewood> sI'd say determine
[06:25:49] *** Joins: mickey8 (~user@user/mickey)
[06:25:50] <|smlckz|> okay, generalised, so `pred(i, end)` instead of i <= end..
[06:26:17] *** Joins: job (~job@wikimedia-commons/pandakekok9)
[06:26:39] <vdamewood> (p-should-end i end)
[06:28:18] <vdamewood> |smlckz| So what'snot clear about the definition?
[06:28:37] <vdamewood> I'm keeping that typo.
[06:29:26] <|smlckz|> oldlaptop: that's an example, we have to give an example after the definition..
[06:29:39] *** Joins: arahael (~arahael@27-32-144-20.tpgi.com.au)
[06:30:03] *** Quits: llh (~llh@user/llh) (Quit: :::: ( UPP ) ::::)
[06:31:32] <|smlckz|> i want to include the notion of 'counter' in the definition, that this variable is changing in each iteration of the loop as it progresses towards its final value..
[06:32:42] <oldlaptop> On further reflection I do think vdamewood's definition is too broad, in that it would arguably include things like flags.
[06:32:58] <oldlaptop> while (keep_looping) { keep_looping = predicate(); }
[06:33:36] *** Joins: godSend23 (~godsend@2600:1700:e840:6c30:b1eb:54f8:8bdf:7346)
[06:33:37] <godSend23> hey all
[06:33:56] *** Joins: llh (~llh@user/llh)
[06:34:45] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:35:59] *** Joins: password (~password8@user/password2)
[06:38:02] *** Quits: akevinhuang (~thekevinh@user/thekevinhuang) (Ping timeout: 252 seconds)
[06:41:31] <|smlckz|> oldlaptop: when our teacher asked which is the loop counter (with the vdamewood definition) in `for (i = 1; i <= n; i++)`, everyone except me answered `n`.. i asked the teacher to clarify the definition, but he didn't (''don't be diplomatic in your answer, this is not a political meeting.. choose: i or n..''), i knew he meant `i` because ''counter''.. but still it bothers me..
[06:42:44] <godSend23> is reverse engineering a form of cracking?
[06:45:23] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[06:45:33] <oldlaptop> godSend23: Not necessarily.
[06:45:44] <godSend23> ooh ok
[06:45:54] <vdamewood> The thing is, there's no guarantee that n is a variable. i *must* be a variable however.
[06:46:36] <oldlaptop> Analogy: Wearing a ski mask is not necessarily a means of hiding one's identity while perpetrating bank robbery.
[06:47:12] <godSend23> you're right oldlaptop 
[06:47:37] <godSend23> is there any way i can figure out how someone cracked a given software via looking at the resulting files?
[06:48:24] <godSend23> aka reverse engineer ironicaly what they did to get there?
[06:49:56] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[06:50:00] <oldlaptop> That sounds like too general a question for any real answer.
[06:51:00] <godSend23> ooh alright
[06:51:09] <godSend23> i was hoping for elaboration
[06:51:16] <godSend23> since it's my new foray into the field
[06:57:10] *** Joins: hans (~hans@36.84-48-255.nextgentel.com)
[06:57:50] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 252 seconds)
[06:59:54] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:00:39] *** Quits: hans (~hans@36.84-48-255.nextgentel.com) (Client Quit)
[07:00:51] *** Quits: vin (~vin@user/crash) (Quit: WeeChat 2.8)
[07:01:52] <|smlckz|> so, any idea on how to succinctly include the notion of 'counter' in the definition of 'loop counter'? it seems like i don't know enough english..
[07:04:18] *** Joins: [smlckz] (3329f5a75b@user/smlckz)
[07:05:54] <oldlaptop> "A variable that is incremented by a loop to control how many times it is executed" might be a start?
[07:06:07] <oldlaptop> I don't know how much other jargon you want to use (e.g. "increment")
[07:07:04] <|smlckz|> well, we have decrement as well..
[07:07:07] *** Joins: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca)
[07:08:21] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Ping timeout: 276 seconds)
[07:08:59] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[07:09:34] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 256 seconds)
[07:09:43] <|smlckz|> is there a word for ''change a little towards the goal'' or something like that which includes the meaning of both increment and decrement?
[07:09:59] *** Joins: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de)
[07:09:59] *** Quits: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de) (Changing host)
[07:09:59] *** Joins: resamvi (~resamvi@user/resamvi)
[07:10:34] *** Quits: godSend23 (~godsend@2600:1700:e840:6c30:b1eb:54f8:8bdf:7346) (Quit: Leaving)
[07:11:24] <flakland> can you have negative count of iterations?
[07:13:17] <arahael> It's not uncommon to decrement until zero.
[07:13:34] <flakland> your iteration count would still be positive
[07:14:31] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 252 seconds)
[07:15:41] *** Joins: Nex6 (~Nex6@cpe-45-51-244-112.socal.res.rr.com)
[07:15:46] *** Quits: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca) (Ping timeout: 256 seconds)
[07:24:52] *** Quits: jarthur_ (~jarthur@cpe-70-114-198-37.austin.res.rr.com) (Ping timeout: 256 seconds)
[07:25:41] *** Joins: anecdotal (~anas@2604:3d09:6a83:e00::beb0)
[07:26:31] *** Joins: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca)
[07:27:05] *** Joins: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de)
[07:27:06] *** Quits: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de) (Changing host)
[07:27:06] *** Joins: resamvi (~resamvi@user/resamvi)
[07:27:11] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-f5ee-2791-688d-e316.res6.spectrum.com)
[07:27:33] *** Quits: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca) (Client Quit)
[07:27:42] *** Quits: zaher (~zaher@37.48.152.170) (Ping timeout: 256 seconds)
[07:27:43] *** Quits: maxzor (~maxzor@2a01cb04054faa002934748502e5b064.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[07:29:13] *** Quits: anecdotal (~anas@2604:3d09:6a83:e00::beb0) (Quit: WeeChat 3.3)
[07:31:54] *** snake is now known as S_N_A_K_E
[07:34:27] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[07:34:37] *** Joins: stagas (~stagas@2a02:587:c40e:fc00:13ec:9701:7e1b:60f9)
[07:35:31] *** S_N_A_K_E is now known as snake
[07:37:23] <novns> the iteration count is irrelevant.  who needs to count iterations when you are decrementing the counter?
[07:38:27] <novns> like  while (counter--) {};
[07:38:59] <d3x0r> counter--; jb done; {}
[07:39:15] *** Quits: okt (~okt@user/okt) (Remote host closed the connection)
[07:39:16] *** Joins: maxzor (~maxzor@2a01cb04054faa00d4331c96a1ec51df.ipv6.abo.wanadoo.fr)
[07:41:50] *** Quits: Nex6 (~Nex6@cpe-45-51-244-112.socal.res.rr.com) (Quit: Leaving)
[07:42:01] <flakland> what is there to count if it's already been counted?
[07:42:09] *** Joins: Nex6 (~Nex6@cpe-45-51-244-112.socal.res.rr.com)
[07:42:38] <flakland> you're using counter as an index?
[07:42:55] *** Joins: sheepduck (~sheepduck@user/sheepduck)
[07:43:24] *** Quits: Nex6 (~Nex6@cpe-45-51-244-112.socal.res.rr.com) (Client Quit)
[07:43:41] *** Joins: Nex6 (~Nex6@cpe-45-51-244-112.socal.res.rr.com)
[07:44:23] *** Quits: Nex6 (~Nex6@cpe-45-51-244-112.socal.res.rr.com) (Client Quit)
[07:44:29] *** Joins: Nex6 (~Nex6@cpe-45-51-244-112.socal.res.rr.com)
[07:45:06] <novns> yes, for example  while (counter--) { free(something[counter - 1]); }
[07:45:13] *** Joins: Nex6|Orc (~Nex6@cpe-45-51-244-112.socal.res.rr.com)
[07:45:20] *** Quits: Nex6 (~Nex6@cpe-45-51-244-112.socal.res.rr.com) (Remote host closed the connection)
[07:45:21] *** Parts: KillerWasp (KillerWasp@user/killerwasp) (YOU KIDDING ME?? YOU KIDDING MEEE???? (PC drinking beer) *kernel panic!*)
[07:45:51] <novns> you can do it with for (int i = 0; i < counter; i++)  but it's just more verbose
[07:47:10] *** Joins: Nex6 (~Nex6@cpe-45-51-244-112.socal.res.rr.com)
[07:47:25] *** Quits: Nex6|Orc (~Nex6@cpe-45-51-244-112.socal.res.rr.com) (Client Quit)
[07:47:47] *** Quits: Nex6 (~Nex6@cpe-45-51-244-112.socal.res.rr.com) (Remote host closed the connection)
[07:48:04] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[07:49:09] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[07:51:57] <novns> so the iteration count is something you don't care about, and you decrement the counter in the most humiliating way
[07:53:17] <novns> and it can be negative too
[07:53:20] *** Joins: sjue (~sjue@cpeac202e0695f3-cmac202e0695f0.cpe.net.cable.rogers.com)
[07:53:24] <flakland> preposterous
[07:53:34] <novns> while (--counter + 1) { free(something[counter]); }
[07:54:28] *** Quits: maroloccio (~marolocci@151.53.155.184) (Quit: WeeChat 3.0)
[07:54:44] <flakland> i'd rather call it a position then
[07:55:31] <flakland> or frame? anything else
[07:55:42] <novns> offset
[07:56:20] <|smlckz|> mmm..
[07:56:44] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Quit: Leaving)
[07:59:26] *** Quits: hoochmonger (~hoochmong@user/hoochmonger) (Ping timeout: 252 seconds)
[08:08:38] *** Joins: okt (~okt@user/okt)
[08:09:36] *** Quits: Guest14 (~Guest14@pool-96-253-74-73.rcmdva.fios.verizon.net) (Ping timeout: 256 seconds)
[08:10:39] *** Quits: sbodin (~sbodin@185.12.224.251) (Quit: Leaving)
[08:14:23] *** Quits: skepta (~eric@36.70.44.228) (Quit: Leaving.)
[08:14:46] *** Joins: skepta (~eric@36.70.44.228)
[08:15:49] *** Quits: password (~password8@user/password2) (Ping timeout: 256 seconds)
[08:20:13] <smallville7123> how would i go about re-writing a data stream for serialization when a member is of a different length? for example, the position member of the input may be 2 int's long but the position member of the output may be 3 int's long, while all other members may or may not differ in length as well
[08:21:55] *** Joins: sweety (~Administr@113.26.39.103)
[08:27:46] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 256 seconds)
[08:30:54] <d3x0r> write it in json base 10 and let variable string cover it :)
[08:31:12] <d3x0r> prefix it with word/bytecount
[08:31:31] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 252 seconds)
[08:33:33] *** z0ite is now known as justache
[08:33:38] *** Quits: sweety (~Administr@113.26.39.103) (Read error: Connection reset by peer)
[08:34:01] *** Joins: sweety (~Administr@113.26.39.103)
[08:36:15] *** Quits: kennyd (~bc8165b6@cerf.good1.com) (Quit: CGI:IRC (Session timeout))
[08:44:26] *** Joins: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca)
[08:44:55] *** Joins: emeka (~emeka@197.210.84.108)
[08:45:38] *** Joins: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de)
[08:45:39] *** Quits: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de) (Changing host)
[08:45:39] *** Joins: resamvi (~resamvi@user/resamvi)
[08:50:13] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 252 seconds)
[08:50:54] <smallville7123> this is what i currently have https://wandbox.org/permlink/8YE1nW4tqt1VeGE1
[08:50:57] <bayaz> Title: [Wandbox]三へ( へ՞ਊ ՞)へ ﾊｯﾊｯ 
[08:56:37] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[09:01:03] *** Joins: img (~img@user/img)
[09:01:54] *** Joins: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de)
[09:01:55] *** Quits: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de) (Changing host)
[09:01:55] *** Joins: resamvi (~resamvi@user/resamvi)
[09:02:02] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[09:02:50] *** Joins: arcatech_ (~arcatech@user/arcatech)
[09:04:31] *** Quits: arcatech (~arcatech@user/arcatech) (Ping timeout: 245 seconds)
[09:06:13] *** Quits: arcatech_ (~arcatech@user/arcatech) (Client Quit)
[09:06:18] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 256 seconds)
[09:09:33] *** Joins: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de)
[09:10:01] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:10:35] *** Joins: Themis3000 (~Thunderbi@user/themis3000)
[09:10:48] *** Quits: emeka (~emeka@197.210.84.108) (Ping timeout: 256 seconds)
[09:12:48] *** Quits: novns (~novns@user/novns) (Quit: ZNC 1.8.2 - https://znc.in)
[09:13:18] *** Joins: novns (~novns@user/novns)
[09:17:41] *** Joins: ejjfunky (~ejjfunky@125.164.23.81)
[09:17:49] *** Quits: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca) (Quit: Client closed)
[09:18:27] *** Quits: CodeSpelunker (~CodeSpelu@user/codespelunker) (Ping timeout: 252 seconds)
[09:19:06] *** Joins: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de)
[09:19:07] *** Quits: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de) (Changing host)
[09:19:07] *** Joins: resamvi (~resamvi@user/resamvi)
[09:19:37] *** Quits: maxzor (~maxzor@2a01cb04054faa00d4331c96a1ec51df.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[09:20:52] *** Joins: maxzor (~maxzor@2a01cb04054faa0038a157caf128e2a5.ipv6.abo.wanadoo.fr)
[09:23:36] *** Joins: jazzy2 (~jaziz@user/jaziz)
[09:26:09] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[09:27:38] <smallville7123> https://wandbox.org/permlink/IW0HcPRyp8k9Lsnl *
[09:27:40] <bayaz> Title: [Wandbox]三へ( へ՞ਊ ՞)へ ﾊｯﾊｯ 
[09:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:30:31] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:31:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:34:33] *** Joins: CodeSpelunker (~CodeSpelu@user/codespelunker)
[09:36:39] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[09:40:36] *** Quits: echoreply (~echoreply@2001:19f0:9002:1f3b:5400:ff:fe6f:8b8d) (Quit: WeeChat 2.8)
[09:42:24] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[09:42:36] *** Quits: soapsudsxx (~soapsudsx@209.221.40.158) (Remote host closed the connection)
[09:48:41] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[09:49:08] *** Quits: CodeSpelunker (~CodeSpelu@user/codespelunker) (Quit: CodeSpelunker)
[09:49:28] *** Joins: chomwitt (~chomwitt@2a02:587:dc16:f200:12c3:7bff:fe6d:d374)
[09:50:21] *** Quits: xff0x (~xff0x@2001:1a81:530d:ee00:3ffa:7a4c:8a0a:d168) (Ping timeout: 245 seconds)
[09:51:28] *** Joins: xff0x (~xff0x@2001:1a81:530d:ee00:3669:3c5b:65c3:3f53)
[10:03:40] *** Joins: vysn (~vysn@user/vysn)
[10:04:39] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[10:05:23] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 252 seconds)
[10:07:42] *** Quits: jazzy2 (~jaziz@user/jaziz) (Read error: Connection reset by peer)
[10:08:06] *** Joins: jazzy2 (~jaziz@user/jaziz)
[10:09:57] *** Joins: pizdets (~pizdets@183.182.110.245)
[10:12:05] *** Quits: martums (~martums@user/martums) (Read error: Connection reset by peer)
[10:12:30] *** Joins: martums (~martums@user/martums)
[10:13:05] *** Quits: xff0x (~xff0x@2001:1a81:530d:ee00:3669:3c5b:65c3:3f53) (Ping timeout: 252 seconds)
[10:13:39] *** Joins: xff0x (~xff0x@2001:1a81:530d:ee00:fdea:9bb5:abe4:a159)
[10:14:24] *** Pixi_ is now known as Pixi
[10:15:50] *** Quits: maxzor (~maxzor@2a01cb04054faa0038a157caf128e2a5.ipv6.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[10:16:09] <norias> "The reader is assumed to have had the basic three-semester sequence of calculus"
[10:16:14] <norias> Big assumption, there.
[10:17:59] *** Joins: jwillia3 (~jwillia3_@205.178.41.133)
[10:18:55] *** Quits: resamvi (~resamvi@user/resamvi) (Quit: resamvi)
[10:21:53] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[10:21:56] <smallville7123> for some reason my program is aborting when i set outputData[0][index] to any value when processing the tex members  https://wandbox.org/permlink/UrPUS6YtIvBYl6gp
[10:21:58] <bayaz> Title: [Wandbox]三へ( へ՞ਊ ՞)へ ﾊｯﾊｯ 
[10:22:08] <smallville7123> norias: lol
[10:23:03] <norias> smallville7123: i am currently being mind raped by topology
[10:23:15] <smallville7123> XD
[10:23:19] *** Quits: Ilyu (~quassel@gateway/vpn/pia/ilyu) (Ping timeout: 256 seconds)
[10:23:26] <norias> like wtf is this?
[10:23:53] <norias> i think i'm one of the few people out there that yells at math books 
[10:23:59] <norias> like my dad yells at football games
[10:24:10] <norias> reading along, "Oh.... what the fuuuuuuck?"
[10:26:02] *** Joins: trace987 (~trace@ip5b429834.dynamic.kabel-deutschland.de)
[10:26:11] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Client Quit)
[10:26:56] *** Joins: qbt (~qbt@user/edun)
[10:27:03] *** Parts: qbt (~qbt@user/edun) ()
[10:27:21] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[10:29:33] *** Quits: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net) (Ping timeout: 256 seconds)
[10:30:16] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[10:30:17] *** Joins: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net)
[10:30:48] <nomagno> Someone once showed me a joke about their age written in extremely domain specific topological mathematical expressions
[10:30:53] <nomagno> I've wanted to figure it out ever since
[10:31:56] *** Joins: Guest3140 (~vit@chello085216193138.chello.sk)
[10:33:00] *** Joins: user51 (~user51@176.228.151.30)
[10:34:41] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:38:06] *** Quits: davros (~davros@host86-185-99-134.range86-185.btcentralplus.com) (Remote host closed the connection)
[10:42:14] *** Joins: maxzor (~maxzor@2a01cb04054faa0038a157caf128e2a5.ipv6.abo.wanadoo.fr)
[10:42:42] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[10:45:37] *** Joins: Burgundy (~yomon@79.115.213.171)
[10:46:29] <smallville7123> if i have a serialized stream of data lengths [2, 3, 2] , and i want to convert it to a serialized stream of of data lengths [3, 3, 2],    how would i do so? im basically trying to get it to look like this https://gist.github.com/mgood7123/68d6b013985fe54407b0f4904151b302
[10:46:30] <bayaz> Title: gist:68d6b013985fe54407b0f4904151b302 
[10:50:00] <flakland> add one column?
[10:50:19] *** Joins: swp (~swp@143.176.249.0)
[10:51:21] <flakland> i'm going with `for loop`  
[10:52:15] <flakland> unless the processor has a memset instruction that has variable stride, or some kind of masking
[10:52:21] <Square> GOD, i hate the dumbification of the industry. Many of the major apps im forced to use these days are Electron bloat shit.   
[10:52:38] *** Joins: Redsuit (~Redsuit@068-186-121-067.biz.spectrum.com)
[10:52:48] <Square> Slack right now has allocated 20GB virtual memory. Fair for a dumb chat client 
[10:53:51] *** Quits: maxzor (~maxzor@2a01cb04054faa0038a157caf128e2a5.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[10:54:07] <Square> Oh, spotify have 29GB.
[10:54:11] *** Joins: hololeap (~hololeap@user/hololeap)
[10:54:20] <Square> ...also electron
[10:54:47] <norias> what is electron?
[10:54:54] <arahael> Square: Virtual memory really is fine, it's not a problem in the slightest.
[10:55:23] <arahael> Square: You have 2^48 bytes of virtual memory.  It's fine.
[10:55:41] <Square> why do they even make claims on that? 
[10:55:43] <arahael> (And that's *per application*)
[10:55:49] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[10:56:02] *** Joins: flakland (~flaknet99@32.211.211.39)
[10:56:18] <Square> Well, after starting up those were top CPU hoggers too. 
[10:56:31] <Square> for a music player and dumb chat
[10:56:41] <arahael> Square: That's not related to the virtual memory, but yeah, I'll agree that those apps are hogs.
[10:59:19] <Square> Just felt i had to rage some 
[11:00:02] <Square> i wonder how many nuclear / coal plants we could shut down if it wasnt allowed to deliver bloatware.
[11:00:44] <arahael> Shuting down this blockchain hype would do more than anything else.
[11:03:48] <Square> yeah, that should be banned. 
[11:03:55] <Square> https://imgur.com/a/XyiJVSI
[11:05:57] *** Quits: sjue (~sjue@cpeac202e0695f3-cmac202e0695f0.cpe.net.cable.rogers.com) (Quit: Client closed)
[11:09:54] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 260 seconds)
[11:11:20] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[11:12:41] *** Joins: palasso (~palasso@user/palasso)
[11:18:41] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[11:18:58] *** Joins: mickey8 (~user@user/mickey)
[11:19:28] *** Joins: ixil (~ixil@82.197.178.137)
[11:20:30] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:21:17] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[11:21:20] *** Joins: jazzy3 (~jaziz@user/jaziz)
[11:22:48] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[11:23:46] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi)
[11:23:47] *** Joins: kennyd (~bc8165b6@83.167.180.121)
[11:25:50] *** Quits: jwillia3 (~jwillia3_@205.178.41.133) (Quit: Leaving)
[11:26:54] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:33:35] *** Quits: motherr (~motherr@user/motherr) (Ping timeout: 256 seconds)
[11:34:29] *** Quits: jstoker (~jstoker@user/jstoker) (Remote host closed the connection)
[11:36:11] *** Joins: inky_ (~inky@5.77.221.133)
[11:36:27] *** Joins: motherr (~motherr@user/motherr)
[11:37:34] *** Joins: jstoker (~jstoker@user/jstoker)
[11:37:58] *** Joins: Ilyu (~quassel@gateway/vpn/pia/ilyu)
[11:38:20] *** Quits: _inky (~inky_@46.36.112.226) (Ping timeout: 252 seconds)
[11:38:29] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[11:39:51] *** Joins: img (~img@user/img)
[11:40:10] *** Joins: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk)
[11:40:10] *** Quits: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk) (Changing host)
[11:40:10] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[11:40:31] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[11:40:46] *** Joins: LucaTM (~LucaTM@user/lucatm)
[11:42:39] *** Quits: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[11:44:21] <xcombelle> somebody doing advent of code ?
[11:44:52] *** Joins: mrig (~AdiIRC@user/mrig)
[11:44:54] <GeDaMo> A few people have mentioned it in the past couple of days
[11:45:23] <GeDaMo> There's an #adventofcode channel
[11:46:45] <DnzAtWrk> is it possible to disable copying styles into the clipboard globally in windows
[11:46:49] <DnzAtWrk> I NEVER EVER EVER EVER want it
[11:47:42] <deniska> that's why I keep a notepad window around at all time, you can use it to cleanse copied text off styles
[11:48:14] <deniska> Among all other stuff notepad is unironically useful for
[11:48:29] <DnzAtWrk> I Know I can do that
[11:48:33] <GeDaMo> I found this http://www.stevemiller.net/puretext/
[11:48:34] <DnzAtWrk> but it's just one extra pointless step
[11:48:34] <bayaz> Title: PureText 
[11:48:50] <DnzAtWrk> and obviously not notepad
[11:48:53] <DnzAtWrk> but geany
[11:49:55] <vdamewood> DnzAtWrk: Isn't there a 'paste and match style' option?
[11:50:34] <Stryyker> In Windows, the program adding stuff to the clipboard applies some meta information. The application reading the clipboard says what it can accept
[11:50:53] <DnzAtWrk> it's awful almost all of the time
[11:51:00] <DnzAtWrk> copying rich text was never useful
[11:51:30] <DnzAtWrk> people who think it's useful are probably the same kind of people who think WYSIWYG editors produce nice code
[11:51:37] <deniska> well, it's typically useful when copying text within a single program
[11:51:47] <DnzAtWrk> okay, that's the one exception
[11:51:51] <DnzAtWrk> ie, word and excel
[11:52:02] *** Joins: pulse (~pulse@user/pulse)
[11:52:13] <deniska> but then a program doesn't have a good way to know where the styled text originated in
[11:52:20] <deniska> so they just default to copying styles
[11:53:52] <Stryyker> DnzAtWrk: https://docs.microsoft.com/en-us/windows/win32/dataxchg/using-the-clipboard
[11:53:53] <bayaz> Title: Using the Clipboard - Win32 apps 
[11:54:17] *** Quits: inky_ (~inky@5.77.221.133) (Ping timeout: 252 seconds)
[11:55:18] *** Joins: absc (~absc@81.31.144.28)
[11:55:29] <DnzAtWrk> uff
[11:55:43] <DnzAtWrk> too much work. Should have been an option in windows
[11:56:21] <Stryyker> If you're pasting rich text, then the program has said it accepts rich text
[11:58:33] *** Quits: Redsuit (~Redsuit@068-186-121-067.biz.spectrum.com) (Quit: Leaving)
[11:59:52] <pyzozord> huh, does that mean that notepad understands rich text, and just chooses not to print the rich part?
[11:59:53] <pulse> I pasted all my pasta
[12:01:10] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:01:19] <arahael> DnzAtWrk: Could've been worse - could've been *linux* clipboards. :)
[12:01:43] <DnzAtWrk> or right-click paste
[12:01:46] <DnzAtWrk> the most stupid idea ever invented
[12:01:48] <pulse> We need clippy to help with the clipboard management
[12:01:48] <deniska> pyzozord: notepad doesn't understand rich text, app which does the copying makes both rich and non-rich (and maybe more) variants
[12:01:59] <arahael> DnzAtWrk: Well, that's another clipboard in linux. :)
[12:02:03] <pulse> DnzAtWrk, No, the stupidest idea is middle-click paste
[12:02:06] <arahael> Linux has at least 3 clipboards.
[12:02:30] *** Quits: Valware (~val@Valeyard/Developer/Valware) (Remote host closed the connection)
[12:02:34] <deniska> I like having two distinct clipboards for c-C c-V and select-middle-click
[12:02:38] <DnzAtWrk> what is your favorite 3d model repository?
[12:03:33] <deniska> DnzAtWrk: /home/denis/.local/share/Steam/steamapps :D
[12:03:35] *** Joins: Valware (~val@2001:41d0:800:2e90:2304:86cf:d60c:1)
[12:03:49] *** Joins: Buttercat (~Buttercat@user/buttercat)
[12:04:22] <Stryyker> Windows 10 has the clipboard history so you can copy multiple things to it and use win+v to select which to paste
[12:04:25] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[12:05:40] <DnzAtWrk> I see lots of people recommend https://free3d.com/
[12:05:48] <DnzAtWrk> but with a name like free3d, I'm highly suspicious
[12:05:54] <DnzAtWrk> I'm highly suspect?
[12:06:02] <DnzAtWrk> if I was suspicious I would be suspicious
[12:06:09] <DnzAtWrk> what is the verb
[12:06:20] <DnzAtWrk> no, it's an adjective
[12:06:43] *** Quits: Themis3000 (~Thunderbi@user/themis3000) (Quit: Themis3000)
[12:06:43] *** Quits: mrig (~AdiIRC@user/mrig) (Remote host closed the connection)
[12:06:45] *** Joins: jaysicks (~jaysicks@94-21-138-235.pool.digikabel.hu)
[12:06:57] *** Joins: mrig (~AdiIRC@user/mrig)
[12:08:22] <pyzozord> ooh that's interesting that means I might tinker around the xorg and maybe figure out a way to disable rich text completely
[12:08:36] *** aoei is now known as Stella
[12:08:43] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[12:08:48] <pyzozord> I also never ever want rich text copy. I usually use browser address bar to make the text poor
[12:08:50] *** Stella is now known as stella
[12:09:49] <arahael> pyzozord: Developers are not normal people, though.
[12:11:17] *** Quits: chomwitt (~chomwitt@2a02:587:dc16:f200:12c3:7bff:fe6d:d374) (Quit: Leaving)
[12:11:44] *** Joins: inky_ (~inky@31.7.162.99)
[12:12:10] *** Quits: Ilyu (~quassel@gateway/vpn/pia/ilyu) (Ping timeout: 256 seconds)
[12:12:15] <vdamewood> Eat the rich text.
[12:13:39] *** Joins: DevAntoine (~DevAntoin@pop.92-184-112-51.mobile.abo.orange.fr)
[12:14:28] <arahael> pyzozord: Example, vdamewood here.  Unlike most normal people, he consumes rich text for nutrition. ;)
[12:16:05] <Stryyker> I have poor text
[12:16:30] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[12:17:25] *** Joins: mobidrop (~mobidrop@user/mobidrop)
[12:17:28] <mrig> It is said that if you arrange poor text into just the right combination, it will bring you great wealth!
[12:17:41] <mrig> any old ascii will do!
[12:18:08] <mrig> couldbe superstition though.
[12:18:21] *** Quits: inky_ (~inky@31.7.162.99) (Ping timeout: 256 seconds)
[12:18:33] <GeDaMo> "There's an infinite number of monkeys outside who want to talk to us about this script for 'Hamlet' they've worked out"
[12:18:55] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[12:19:09] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[12:19:33] <pulse> I like middle income text copy myself
[12:19:58] <mrig> heh
[12:21:56] *** Joins: Ilyu (~quassel@78.202.228.230)
[12:22:04] <Stryyker> Why are we using monkeys? Chimps are smarter
[12:22:19] *** Quits: Ilyu (~quassel@78.202.228.230) (Client Quit)
[12:23:30] <mrig> Stryyker their random number generation is not as good, because they thing that they are clever, it all goes bananas.
[12:23:48] <Stryyker> How about bonobos?
[12:24:02] <mrig> to busy doing other things.
[12:24:26] <Stryyker> how about rats? we can breed them up fast. They can live fast, die young
[12:25:20] *** Joins: aradesh (~aradesh@user/aradesh)
[12:26:58] *** Joins: swensson (~swensson@host-90-235-21-244.mobileonline.telia.com)
[12:27:03] <mrig> Oh I think you could be onto something there, ratrand publications at the very least they could nail tabloid.
[12:28:18] <mrig> I didn't know that linux has several clipboards, will have to investigate further.
[12:30:10] <user51> i just realized why the math textbook is dumb
[12:30:39] <user51> instead of using all that fancy words and terminology, they could have just done it in excel
[12:30:51] <mrig> I use xclip in a program at the moment, it would be nice to remove the dependency possibly even with something more cross platform.
[12:31:23] <mrig> user51 to what ends, what is the goal?
[12:32:01] <user51> mrig: it's a textbook about set theory. but it's kind of abstract, a bit too much for my taste.
[12:32:33] *** Joins: the_lanetly_052 (~the_lanet@185.30.89.222)
[12:32:58] <arahael> user51: You shouldn't be eating it. Read it instead. ;)
[12:33:16] *** Quits: the_lanetly_052 (~the_lanet@185.30.89.222) (Max SendQ exceeded)
[12:33:33] <user51> forget reading, at this point i feel like i could rewrite it.
[12:33:40] <mrig> ah, right, could use php and a database sort of thing, to give easy to grok explanations that don't involve learning a symbolic language before starting to read?
[12:33:46] *** Joins: the_lanetly_052 (~the_lanet@185.30.89.222)
[12:33:53] <mrig> arahael hah, rich and spicy text!
[12:34:31] *** Quits: the_lanetly_052 (~the_lanet@185.30.89.222) (Max SendQ exceeded)
[12:34:48] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[12:35:01] *** Joins: the_lanetly_052 (~the_lanet@185.30.89.222)
[12:35:42] *** Quits: the_lanetly_052 (~the_lanet@185.30.89.222) (Max SendQ exceeded)
[12:36:15] *** Joins: the_lanetly_052 (~the_lanet@185.30.89.222)
[12:36:17] <user51> mrig: i think you got it. but really what i'm thinking about is notation.
[12:36:45] <user51> here's a question i failed at first: cartesian product of a non-empty set and an empty set.
[12:36:47] <mrig> user51 so why not, If you can express it in a way which has some intrinsic value to some?
[12:37:09] *** Quits: the_lanetly_052 (~the_lanet@185.30.89.222) (Max SendQ exceeded)
[12:37:18] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[12:37:27] <mrig> there are more than one ways to skin a cat, as the adage goes. Sorry cat lovers.
[12:37:29] *** Quits: nrl^ (~nrl@68.101.58.90) (Remote host closed the connection)
[12:37:44] *** Joins: the_lanetly_052 (~the_lanet@185.30.89.222)
[12:38:24] <user51> sadly, `skin cat` doesn't work..
[12:38:31] *** Quits: the_lanetly_052 (~the_lanet@185.30.89.222) (Max SendQ exceeded)
[12:38:56] <GeDaMo> cat skin would if there was a file called skin :P
[12:39:00] *** Joins: the_lanetly_052 (~the_lanet@185.30.89.222)
[12:39:40] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[12:39:55] *** Quits: the_lanetly_052 (~the_lanet@185.30.89.222) (Max SendQ exceeded)
[12:42:49] *** Quits: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net) (Quit: Going offline, see ya! (www.adiirc.com))
[12:43:20] *** Quits: tomathy (~jenova@user/quetzl) (Ping timeout: 256 seconds)
[12:45:17] <vdamewood> I will implement a program called skin that scans $PATH and says yes or no whether a program exists. Like which, but yes/no instead of displaying the path to the one that would be run.
[12:45:44] <vdamewood> then you can have skin cat, skin man, skin zip, skin unzip, skin tar, skin bash, skin finger, etc.
[12:46:12] <user51> only if we get an 'unskin' command.
[12:46:26] <vdamewood> user51: What would it do?
[12:47:23] <user51> opposite of skin. but i imagine skin is destructive.
[12:47:25] <vdamewood> skin less
[12:48:47] *** Quits: b0o (~maddy@2600:2100:0:8010:7285:c2ff:feb7:f02b) (Quit: WeeChat 3.3)
[12:48:51] <vdamewood> skin bison!
[12:49:34] *** Joins: b0o (~maddy@2600:2100:0:8010:7285:c2ff:feb7:f02b)
[12:51:48] *** Quits: swensson (~swensson@host-90-235-21-244.mobileonline.telia.com) (Ping timeout: 256 seconds)
[12:52:20] *** Quits: b0o (~maddy@2600:2100:0:8010:7285:c2ff:feb7:f02b) (Client Quit)
[12:52:27] *** Joins: b0o (~maddy@2600:2100:0:8010:7285:c2ff:feb7:f02b)
[12:55:12] <mrig> skin a mesh is constructive thou surely?
[12:55:33] <mrig> seems that some postfix grammar could come in handy here :)
[12:55:50] <user51> does recursion have an opposite?
[12:55:56] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[12:56:03] <d3x0r> linear?
[12:56:05] <arahael> user51: What's an "opposite" in this case?
[12:56:09] <mrig> skin Shirley.
[12:56:22] <mrig> user51 top down bottom up.
[12:56:29] <arahael> user51: I mean, you could argue that iterative loops are the opposite.
[12:56:43] <mrig> are those not juxtaposed some how?
[12:56:45] <d3x0r> no loop at all?
[12:57:46] <d3x0r> work queue?   if you do FILO instead of FIFO ?
[12:57:50] <user51> like say, i have a square. i could recursively split it into squares.
[12:58:21] <mrig> is that a zoom or an expansion?
[12:58:25] <d3x0r> then the opposite is recursively combine
[12:58:34] <mrig> there are already two types of the same thing
[12:59:28] <mrig> one recursion acting upon a dimension in one of two directions.
[12:59:44] <mrig> love this kind of thought.
[13:00:19] <user51> i just realized i don't know the definition of recursion.
[13:00:41] *** Quits: b0o (~maddy@2600:2100:0:8010:7285:c2ff:feb7:f02b) (Quit: WeeChat 3.3)
[13:00:46] <GeDaMo> Smething which is defined in terms of itself
[13:00:50] *** Joins: b0o (~maddy@2600:2100:0:8010:7285:c2ff:feb7:f02b)
[13:00:55] *** Quits: ixil (~ixil@82.197.178.137) (Remote host closed the connection)
[13:00:58] <Raziel> something which shits on your stack
[13:01:12] *** Joins: loganlee (~Thunderbi@user/loganlee)
[13:01:19] <user51> GeDaMo: i like it
[13:01:19] <GeDaMo> Recursion doesn't have to use a stack :P
[13:01:58] <smallville7123> yup
[13:02:10] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi)
[13:02:17] *** Joins: foufa (~Kobi@197.238.77.222)
[13:04:32] <mrig> Im always a little suspicious of rabbits, they seem to be some kind of recursive Fibonacci virus; Far to fluffy and cute to have evolved naturally.
[13:04:47] *** Quits: mestre (~mestre@191.177.175.57) (Quit: Lost terminal)
[13:05:00] <mrig> sorry, I'm not quite sure what has gotten into me today ...
[13:05:26] <user51> they aren't cute at all when you realize their dietary habits.
[13:05:39] <mrig> Why so?
[13:05:48] <mrig> eating all my darned crops you mean?
[13:06:01] <user51> they eat their food. recursively.
[13:06:20] <mrig> just send them to Australia, what could possibly go wrong?
[13:06:32] *** Joins: the_lanetly_052 (~the_lanet@194.135.152.219)
[13:06:53] <user51> mrig: trolled by cockatoos
[13:06:55] <user51> https://www.youtube.com/watch?v=Lx78TqH0HIE
[13:06:57] <bayaz> Title: Meanwhile in Australia, cockatoos are biting tails of kangaroos and stealing their food 
[13:07:02] <mrig> user51 oh!
[13:07:53] <mrig> Ha!
[13:08:31] *** Joins: sjue (~sjue@cpeac202e0695f3-cmac202e0695f0.cpe.net.cable.rogers.com)
[13:09:25] <mrig> There is a real twist of Hitchcock to that tail!
[13:10:56] *** Quits: foufa (~Kobi@197.238.77.222) (K-Lined)
[13:10:57] *** Joins: dsrt^ (~dsrt@68.101.58.90)
[13:12:47] *** Quits: b0o (~maddy@2600:2100:0:8010:7285:c2ff:feb7:f02b) (Quit: WeeChat 3.3)
[13:13:49] *** Joins: b0o (~maddy@2600:2100:0:8010:7285:c2ff:feb7:f02b)
[13:15:10] *** Quits: b0o (~maddy@2600:2100:0:8010:7285:c2ff:feb7:f02b) (Client Quit)
[13:15:19] *** Joins: b0o (~maddy@2600:2100:0:8010:7285:c2ff:feb7:f02b)
[13:17:11] <user51> mrig: top-down bottom-up isn't a bad way either
[13:17:26] <user51> a bit like rather than going down the binary tree, going up.
[13:18:09] *** Quits: b0o (~maddy@2600:2100:0:8010:7285:c2ff:feb7:f02b) (Client Quit)
[13:18:18] *** Joins: b0o (~maddy@2600:2100:0:8010:7285:c2ff:feb7:f02b)
[13:21:51] *** Joins: ixil (~ixil@82.197.178.137)
[13:22:24] <GeDaMo> "Functional Programming with Bananas, Lenses, Envelopes and Barbed Wire" https://ris.utwente.nl/ws/portalfiles/portal/6142049/meijer91functional.pdf
[13:22:24] <bayaz> Type: application/pdf 
[13:22:41] *** Joins: inky_ (~inky@31.7.162.99)
[13:23:29] *** Quits: inky_ (~inky@31.7.162.99) (Remote host closed the connection)
[13:23:46] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[13:24:48] <merijn> Word of warning, that paper is *brutal* >.>
[13:25:01] *** Quits: b0o (~maddy@2600:2100:0:8010:7285:c2ff:feb7:f02b) (Quit: WeeChat 3.3)
[13:25:19] *** Joins: b0o (~maddy@2600:2100:0:8010:7285:c2ff:feb7:f02b)
[13:25:32] <pyzozord> Erik Meijer is great
[13:25:34] <GeDaMo> Don't put people off! :P
[13:25:59] <DnzAtWrk> That's bananas!
[13:26:17] <merijn> I think I tried reading that paper about 4 times and I still only grok, like, 10% of it
[13:26:19] <pyzozord> oh yeah I scrolled down a bit and saw the symbols, I'm probably not ready for that
[13:26:57] *** Quits: b0o (~maddy@2600:2100:0:8010:7285:c2ff:feb7:f02b) (Client Quit)
[13:27:25] <pyzozord> is this like a principa mathematica for functional programming?
[13:27:41] *** Joins: xkuru (~xkuru@user/xkuru)
[13:27:54] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[13:28:06] *** Quits: DrMax (~DrMax@node-1w7jra94757g2dk2zboeelft3.ipv6.telus.net) (Remote host closed the connection)
[13:29:14] <user51> nice typesetting
[13:29:18] *** Joins: DrMax (~DrMax@node-1w7jra94757g2aife07d72ffo.ipv6.telus.net)
[13:30:02] <merijn> pyzozord: Not really, this is more like the "GOTO considered harmful" of functional programming
[13:30:27] <pyzozord> oh ok
[13:30:39] <pyzozord> yeah i also noticed typesetting
[13:30:53] <DnzAtWrk> I wonder if goto would be less harmful if we used editors capable of showing the program flow
[13:31:06] <merijn> It's basically arguing "manually writing recursive functions is too easy to fuckup, we should have general recursion patterns that you can use"
[13:31:07] <DnzAtWrk> such as little arrows on the left showing possible paths
[13:31:24] <merijn> So basically "map" and "fold" are better than manual recursion, is the argument
[13:31:25] <mrig> Love the name, Squiggol
[13:31:48] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[13:31:49] <merijn> Except it's inventing a whole bunch of other recursion patterns besides map and fold (and scan aka unfold)
[13:32:23] <GeDaMo> I thought scan was prefix scan, not unfold
[13:33:14] *** Joins: b0o_ (~maddy@2600:2100:0:8010:7285:c2ff:feb7:f02b)
[13:33:50] <arahael> merijn: When I read that paper, I have to get the dictionary. Hmm, what's a 'catamorphism'? Nah, scratch that, what's a "calculus" again? ;)
[13:34:05] <mrig> I used to play a game called squiggol with a fellow student in class whilst alleviating the boredom; We called it squiggle, you had to scribble on the other persons work very rapidly, it was then their challenge to transform that squiggle in to something humorous. 
[13:34:11] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[13:34:40] <merijn> GeDaMo: hmm, tbh, I rarely use them so I always forget :p
[13:34:56] *** Joins: hololeap (~hololeap@user/hololeap)
[13:35:28] <pyzozord> i think goto is harmful because there is no way of showing the program flow without executing the program, and even then there is no way to account for all inputs
[13:35:29] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[13:35:53] <pyzozord> s/got is harmful/"goto is harmful"/
[13:36:55] <merijn> Dijkstra never even wrote "goto is harmful", that title was the editor attempting the world's first clickbait >.>
[13:37:03] *** Lord_of_Life_ is now known as Lord_of_Life
[13:37:04] <deniska> pyzozord: no, you can show control flow without executing a program, it's just a flow like that is deemed too messy to deal with
[13:37:09] <pyzozord> those things map/fold/scan etc, those are haskell ideas right? or some more generic functional programming stuff?
[13:37:19] <merijn> pyzozord: Those predate Haskell by decades
[13:37:21] *** Quits: ixil (~ixil@82.197.178.137) (Remote host closed the connection)
[13:37:30] <merijn> Lisp/Scheme use a lot those too
[13:37:56] <deniska> pyzozord: the main difference between goto and any other control flow is that other kinds of control flow always return to where they originated
[13:38:21] <pyzozord> deniska: yeah given infinite time and space we can show all possible flows, but it's not something we humans can wrap our minds around anyway
[13:38:28] <merijn> deniska: hah
[13:38:35] <deniska> 'if' always ends with something like 'endif', 'for' always ends with 'endfor' etc
[13:38:37] <merijn> deniska: How about longjump? :p
[13:38:50] <deniska> merijn: that's shenanigans
[13:39:19] <pyzozord> the goto an address in variable I think is the shenaniganiest
[13:39:40] <deniska> pyzozord: well, if you want to show all possible paths a program can take, it gets really hard really quickly with any non-trivial program
[13:39:48] <deniska> no matter with or without goto
[13:40:02] <GeDaMo> Calling a function is essentially the same as inlining it
[13:40:45] <pyzozord> that's a good way to think about it
[13:41:10] *** Quits: dre (~dre@2001:8003:c932:c301:1276:3400:25a9:855) (Ping timeout: 268 seconds)
[13:41:32] *** Joins: freakazoid12345 (~matt@2603-9000-cf0f-80e3-0ca4-2f26-b042-b2f1.inf6.spectrum.com)
[13:41:49] <pyzozord> i suppose that's why they call ifs branches
[13:42:14] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Read error: No route to host)
[13:42:22] <pulse> All you need to stop a robot uprising is a bit of snow https://i.imgur.com/JigoYYA.mp4
[13:42:22] <bayaz> Type: video/mp4 Size: 3.7 MB 
[13:42:38] <deniska> and with goto it just… goes, it never returns, at least not via way visible directly from the syntax
[13:42:54] *** Joins: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net)
[13:44:02] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:ca4:2f26:b042:b2f1) (Ping timeout: 240 seconds)
[13:44:59] *** Joins: inky_ (~inky@5.77.129.119)
[13:46:28] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[13:50:25] <user51> all we need is a goback, then.
[13:51:24] *** Quits: b0o_ (~maddy@2600:2100:0:8010:7285:c2ff:feb7:f02b) (Quit: WeeChat 3.3)
[13:52:48] *** Joins: Klinda (~superleag@user/klinda)
[13:54:41] *** Quits: sh1r4s3 (~sh1r4s3@109.252.75.9) (Ping timeout: 256 seconds)
[13:54:59] *** Joins: _inky (~inky_@46.36.112.226)
[13:55:09] *** Joins: b0o (~maddy@2600:2100:0:8010:7285:c2ff:feb7:f02b)
[13:57:47] *** Quits: b0o (~maddy@2600:2100:0:8010:7285:c2ff:feb7:f02b) (Client Quit)
[13:59:36] *** Joins: dre (~dre@2001:8003:c932:c301:3452:4883:fbcf:635)
[14:00:08] <deniska> user51: that's what gosub/return was :)
[14:00:50] <deniska> besides not giving you proper local variables and arguments, it was… nicer than a bare goto :)
[14:02:25] *** Joins: b0o_ (~maddy@2600:2100:0:8010:7285:c2ff:feb7:f02b)
[14:02:32] <DnzAtWrk> all you need to stop the robot uprising is a dead man's switch
[14:02:41] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[14:02:46] <DnzAtWrk> I wonder why they didn't use one at aparture labs
[14:02:53] <deniska> but guess what, this switch is a robot too, and joins uprising
[14:03:04] <DnzAtWrk> naw, it's a dumb switch with metal plates
[14:03:13] *** Quits: b0o_ (~maddy@2600:2100:0:8010:7285:c2ff:feb7:f02b) (Client Quit)
[14:03:14] <DnzAtWrk> what are the odds that the robot will catch it faster enough
[14:03:19] <DnzAtWrk> fast*
[14:03:34] *** Joins: brabrax (~brabrax@user/brabrax)
[14:05:07] *** Quits: hololeap (~hololeap@user/hololeap) (Read error: Connection reset by peer)
[14:06:23] *** Joins: hololeap (~hololeap@user/hololeap)
[14:07:36] <pulse> Wtf https://www.youtube.com/watch?v=9cNmUNHSBac :D
[14:07:38] <bayaz> Title: Most People Don't Know How Bikes Work 
[14:08:23] <mrig> Is there a way to negate goto in a turing machine, some sort of heap type clausal navigation scheme?
[14:08:41] <mrig> if you have enough space for it.
[14:09:11] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[14:09:34] <pyzozord> pulse: interesting that video
[14:09:52] <pulse> Amazing how Veritasium always succeeds in blowing my mind
[14:10:04] *** Joins: brabrax (~brabrax@user/brabrax)
[14:10:11] <pulse> I get it now but I really never thought about it. To steer a bike left you first turn right, lol
[14:10:29] <pulse> You have to counter the force so you can lean correctly
[14:10:34] <pulse> Weird
[14:10:35] <d3x0r> its a LOT more notable on a motorcycle
[14:10:49] <mrig> this is standard fair for a motorcyclist though
[14:10:55] <d3x0r> you actually have to push the handlebars away... if you turn right push right
[14:11:25] <pyzozord> what's also interesting is that bikes have built-in autopilot, the physics
[14:11:33] <pulse> I've never actually considered that. If you ride a bike you just do it automatically
[14:12:34] <mrig> on a motor bike it is exhilarating to get push yourself into a corner..
[14:13:24] <mrig> One of the greatest differences between race motorcyclists and road riders is how fast they slam themselves into corners :)
[14:13:42] <arahael> d3x0r: That's not only due to the wheel-spinning effects, but also because of the angle of the steering column, I suspect.
[14:14:04] <d3x0r> and gyroscopic motion has more effect much heavier wheels
[14:14:21] <arahael> d3x0r: Well, that's what I meant by wheel-spinning. :)
[14:14:28] <mrig> yes balancing the steering on bikes is a really big thing.
[14:14:32] <d3x0r> ahh ya 
[14:14:51] <mrig> Its the geometry of the wheel and which part contacts the ground I think.
[14:15:15] <d3x0r> not so much... wheel shape has little to do with it
[14:15:16] <mrig> you can create a shorter radius by pushing out.
[14:16:06] <mrig> the angle of the steering column to the vertical I guess.
[14:16:21] <d3x0r> you didn't see the video?
[14:16:22] <user51> regex question: is the question mark equivalent to or with empty string? e.g '(string)?' == 'string|""'
[14:16:38] <d3x0r> 0 or 1
[14:16:39] <mrig> no I've not watched it
[14:17:04] <d3x0r> the end has a summary of arrows for autopilot - angles and stuff
[14:17:21] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[14:17:39] *** Joins: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au)
[14:17:54] *** Joins: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf)
[14:18:19] *** Quits: sjue (~sjue@cpeac202e0695f3-cmac202e0695f0.cpe.net.cable.rogers.com) (Quit: Client closed)
[14:18:53] *** Joins: peteyboy_ (~peteyboy1@95.169.232.161)
[14:19:14] <pyzozord> I was thought yesterday about preprocessor languages. And about a way of programming that leans much much more on the preprocessor. Programmer would spend essentially majority of their time coding preprocessor to generate right wasm instructions.
[14:19:44] <d3x0r> sounds like typescript ;)
[14:19:46] <merijn> pyzozord: THat sounds like you're trying to reinvent meta programming :p
[14:19:59] <merijn> and/or staged compilation (which, I guess, is a form of meta programming)
[14:20:05] <pyzozord> I started checking what language would be best suited for such a preprocessor, and it kind of looked like perl was the best programming for that. Do you guys have any other recommendations?
[14:20:25] <merijn> eh, scheme :p
[14:20:26] <d3x0r> C worked for me
[14:20:32] <deniska> pyzozord: notice how wasm wat syntax is basically s-expressions
[14:20:39] <deniska> so something lispy
[14:20:40] <pyzozord> oh
[14:20:47] <pyzozord> that is a good observation indeed
[14:20:51] *** Quits: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf) (Remote host closed the connection)
[14:20:57] *** Joins: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf)
[14:21:34] <pyzozord> especially that lisp is extra powerful, and it's shortcomings of performance and dynamism are not going to be present in the final output which will be only wasm
[14:22:28] <pyzozord> although I don't think it really matters, those wasm s expressions are never deeply nested
[14:22:33] *** Quits: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf) (Remote host closed the connection)
[14:22:40] *** Joins: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf)
[14:23:17] <mrig> you could initiate the turn using what is called 'peg riding' using the body weight.
[14:23:39] *** Joins: RazielZ (~Raziel@user/raziel)
[14:24:18] <mrig> could be that it is the weight on a push bike but the steering geometry is also a factor, the way the forks sweep forwards plays a part in balancing the effect.
[14:24:26] *** Quits: Raziel (~Raziel@user/raziel) (Ping timeout: 252 seconds)
[14:27:01] <pyzozord> I'm thinking that this kind of heavy code generation style that generates a very static code, might be something interesting to explore
[14:29:23] *** Quits: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf) (Remote host closed the connection)
[14:29:31] *** Joins: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf)
[14:30:21] <mrig> meta programming+
[14:30:22] <mrig> ?
[14:30:51] <pyzozord> yeah essentially
[14:30:55] <mrig> go uses this quite a lot, for generics.
[14:31:09] <pyzozord> it's just a program that just generates text which happens to be another program really
[14:31:18] <mrig> I should say, some go programmers do.
[14:31:37] <mrig> C to from what Casey's says on his video series.
[14:31:43] <phogg> the line gets blurry pretty quickly
[14:32:09] <phogg> where does your metaprogramming/macro language end and the "real" language begin?
[14:32:31] <phogg> as long as you can reason about it as one thing I don't think it really matters
[14:32:37] <pyzozord> phogg: at least in my idea the line is very clear: compile time vs run time
[14:32:53] <phogg> sounds great until you have JIT and scripts
[14:33:08] <pyzozord> not sure I understand
[14:33:10] <phogg> the implementation still has to care, but it's hard to tell from a user POV
[14:34:00] <mrig> Yes, I've still not make the conceptual leap of thinking in generated code. Seems quite a tricky step to take. I've a project in which I need to do this, but it is on hold until my brain lets me do it.
[14:34:10] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[14:34:16] <pyzozord> in my mind there is no jit, preprocessor is purly interpreted and the generated code is purly compiled
[14:34:38] *** Joins: Twipply (~Twipply@user/twipply)
[14:37:54] <pyzozord> i think the trick would be to make such a preprocessor language that allows easily for creating languages
[14:37:57] <pyzozord> a language to make languages
[14:38:09] <pyzozord> but that's also general purpose
[14:38:17] <pyzozord> yeah that sounds lispy
[14:38:21] <phogg> mrig: never used C? Macros are generating code, or possibly generating code removal (think #ifdef). If you've ever used #define to create a snippet of code then you're already doing it.
[14:39:10] <phogg> pyzozord: to me everything sounds like Raku (-:
[14:39:13] *** Quits: kennyd (~bc8165b6@83.167.180.121) (Quit: CGI:IRC (Ping timeout))
[14:39:19] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:39:28] <mrig> oh sure yes, just admiring how useful macros can be for some things when used diligently.
[14:39:40] <mrig> But still wet behind the ears :|
[14:39:49] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[14:39:53] *** Joins: kennyd (~bc8165b6@cerf.good1.com)
[14:40:02] <pyzozord> you never get dry behind the ears :P
[14:40:03] <mrig> An area to explore still :)
[14:40:15] <pyzozord> you just grow bigger ears
[14:40:22] <mrig> pyzozord dang, a new born with every new subject !
[14:40:39] <mrig> earear!
[14:40:40] <GeDaMo> In Forth, you can run code at compile time and compile code at run time :P
[14:41:18] <mrig> That's a whole other level!
[14:41:27] * phogg has never even looked at Forth
[14:41:30] <pyzozord> forth has compiler built into it's runtime?
[14:41:35] <GeDaMo> Yes
[14:41:42] <d3x0r> so's JS :)
[14:41:44] <pyzozord> isn't that heavy?
[14:41:46] <phogg> so does C#
[14:41:52] <phogg> (and of course Raku)
[14:42:10] <mrig> I thought raku were a type of Pot? \o/
[14:42:26] <pyzozord> oh right, so does lisp
[14:42:35] <pyzozord> well i guess that's just called jit
[14:42:38] <mrig> or of a specific firing technique at least.
[14:43:08] <GeDaMo> Forth is often threaded code so it's just a case of storing the addresses of the called words
[14:43:41] <phogg> mrig: that is a mere coincidence
[14:43:53] <smallville7123> i thought my notification said    "Your Mac will sleep soon unless plugged into a power plant"
[14:44:13] <mrig> phogg oh I was wondering if the perhaps author was Japanese or some such.
[14:44:56] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[14:45:01] <phogg> mrig: the derivation of the name is a bit complicated and fuzzy. The compiler was already called Rakudo when they renamed it, which was a strong influence.
[14:45:10] <mrig> are languages authored or created, written or made?
[14:46:03] <phogg> mrig: yes, yes, yes, and yes.
[14:46:29] <phogg> authored, created, written, and then made.
[14:46:31] <mrig> Ah ok, an abbreviation could well be manga influence too I suppose.
[14:48:26] <davve> are you guys high?
[14:48:33] <phogg> I wish.
[14:50:04] *** Quits: job (~job@wikimedia-commons/pandakekok9) (Remote host closed the connection)
[14:50:06] <DnzAtWrk> are semantics just semantics?
[14:50:41] <edgar-rft> davve: you'll wonder how low we can go
[14:55:55] <phogg> DnzAtWrk: Sometimes.
[14:56:08] <phogg> "A rose by any other name..." and all that.
[14:57:03] *** Quits: kron (~weechat@user/qaph) (Quit: kron)
[14:57:07] *** Quits: kennyd (~bc8165b6@cerf.good1.com) (Quit: CGI:IRC (Error))
[14:57:17] *** Quits: droid3 (~fffd@071-010-228-178.res.spectrum.com) (Remote host closed the connection)
[14:57:30] *** Joins: droid3 (~fffd@071-010-228-178.res.spectrum.com)
[14:57:42] <DnzAtWrk> Roses are red, violets are blue, your mom is hot as sure as the sky is blue
[14:57:59] *** Joins: kennyd (~bc8165b6@83.167.180.121)
[14:58:04] <DnzAtWrk> oh no, rhymed the same word with itself. I'm sorry rapper Jesus
[14:58:19] <phogg> The longer I do this programming thing the more everything starts to look like everything else and the more interchangeable everything becomes.
[14:58:27] <DnzAtWrk> as it should
[14:58:29] <phogg> that said it sure is handy to pretend that things are different
[14:58:41] <DnzAtWrk> there are only a few major paradigm shifts
[14:58:45] <DnzAtWrk> they are generally
[14:58:49] *** Quits: kennyd (~bc8165b6@83.167.180.121) (Client Quit)
[14:58:53] <DnzAtWrk> object oriented vs functional programming
[14:58:58] <DnzAtWrk> composition vs inheritance
[14:59:09] <phogg> but inheritance is really just composition!
[14:59:16] <DnzAtWrk> not quite
[14:59:16] <phogg> and functional programming can be used to make OO!
[14:59:19] <DnzAtWrk> composition is horizontal
[14:59:25] <DnzAtWrk> inheritance is vertical
[14:59:27] <phogg> not necessarily
[14:59:29] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[14:59:34] <phogg> the latter is true, the former is not
[14:59:38] *** Joins: kennyd (~bc8165b6@cerf.good1.com)
[14:59:52] <pyzozord> it's all syntactic sugar all the way down to electrons
[14:59:59] <phogg> this is what I took from learning my OO from Perl: it really is all the same, but it's easier to think about it if it doesn't seem like it's the same
[15:00:11] <DnzAtWrk> if you want to try something entirely new
[15:00:17] <DnzAtWrk> https://openscad.org/
[15:00:19] <bayaz> Title: OpenSCAD 
[15:00:38] <phogg> programming shapes in meatspace?
[15:01:03] <DnzAtWrk> yes. If you make a model in openscad you can also upload it to sites like thingiverse, and allow users to customize their objects on their website
[15:01:04] <DnzAtWrk> for 3d printing
[15:01:23] <mrig> It's all just sculpting in memory space :)
[15:01:39] *** Quits: skepta (~eric@36.70.44.228) (Ping timeout: 252 seconds)
[15:01:42] <phogg> I have thought about learning to drive a lathe before... it's scary when bugs can start to DO things.
[15:01:44] <mrig> just give me a hunk of memory to sculpt and I'll be happy.
[15:01:57] <pyzozord> although I don't know if it truly is all the same or not
[15:02:23] <phogg> I'm happier to keep it all in the abstract where impossible structures can exist and the worst case scenario is I fry a hard disk.
[15:02:59] *** Joins: sjue (~sjue@cpeac202e0695f3-cmac202e0695f0.cpe.net.cable.rogers.com)
[15:03:35] <pyzozord> that sounds like the kind of philosophy that doctors of cs philosophy should be better to think about
[15:03:59] <phogg> Anyway, inheritance is just a special case of composition. Glue two things together (composition) where one is the"parent" and one is the "child", the rules you use for resolving collisions gives you the "verticality." You can use other rules and have a vertical-like outcome.
[15:04:43] <DnzAtWrk> one thing I rarely see people discuss in regards to inheritance, and which I use a lot, is to use inheritance for making things self-documenting
[15:04:55] <DnzAtWrk> I use it to logically seperate code which do single tasks
[15:04:58] <phogg> DnzAtWrk: "A is a B" and the like?
[15:05:03] <DnzAtWrk> into different levels of inheritance
[15:05:22] <DnzAtWrk> such as, GameObject -> Collidable -> Humanoid -> Player
[15:05:26] <phogg> inheritance is for sharing *implementation* more than anything
[15:05:37] <phogg> otherwise there's not much value
[15:05:52] <DnzAtWrk> I know people get all up in arms regarding deep inherithance
[15:05:53] <phogg> unless your language lacks interfaces
[15:06:05] <DnzAtWrk> but I find it makes the code much easier to maintain
[15:06:11] <DnzAtWrk> and quite beautiful
[15:06:20] <phogg> deep inheritance is not *by itself* a problem, but I am suspicious of it since it often is caused by *bad program design*
[15:06:21] <DnzAtWrk> down to the very folder structure
[15:06:52] *** Joins: kron (~weechat@user/qaph)
[15:06:54] <phogg> the key thing to remember is that *a class is not an interface* and should never be used as one
[15:07:23] <DnzAtWrk> Interfaces are overrated
[15:07:29] <phogg> in an ideal world you make an interface for every single class you define and very *very* rarely type check against a class name
[15:07:37] <DnzAtWrk> How often do you just need an interface, without having an explicit implementation to go with it
[15:07:39] <phogg> a class is a poor man's interface
[15:07:45] <phogg> DnzAtWrk: Literally always.
[15:07:46] <DnzAtWrk> how often do you use an inteface just because you "should" use one
[15:07:48] <mrig> Inheritance seems to be linked to dependency injection and inversion of control too, the scoping of variables into a local regional space.
[15:07:53] *** Quits: zwr (~zwr@2804:d45:b966:fb00:3e37:1000:411e:c48c) (Ping timeout: 252 seconds)
[15:07:55] <DnzAtWrk> but you always end up with a single implementation
[15:08:03] <mrig> how to harness scope.
[15:08:08] <phogg> DnzAtWrk: You don't always end up with a single implementation, *especially* over time.
[15:08:16] <DnzAtWrk> I find that's not true
[15:08:47] <phogg> DnzAtWrk: how many times have you renamed 'class foo' to 'class foo_implementation' and then created 'interface foo' so you can apply it to some *other* class so you can keep the rest of your code the way it is but now do something new?
[15:08:50] <DnzAtWrk> Whatever you do, don't become Java
[15:08:55] <DnzAtWrk> Java is what happens when you take OOP too far
[15:08:57] <phogg> at least on that we can agree
[15:09:02] <DnzAtWrk> Java is impractical OOP
[15:09:18] <phogg> Java is the cult of OOP taken to its most insane extreme
[15:09:33] <phogg> the fact that they resist all forms of metaproamming *very hard* does not help
[15:09:44] <mrig> This seems to interface or interact with complexity nicely when you have a lot of objects, if you catch my literal drift.
[15:10:00] <phogg> "we could infer this type information at compile time, but YOU HAVE TO SPECIFY IT ANYWAY" -- Java, being Java.
[15:10:28] <DnzAtWrk> IFactoryFactory
[15:10:56] <pyzozord> how would you describe in more concrete words the problem that java has?
[15:11:00] <DnzAtWrk> I've grown to like dependency injection
[15:11:03] <pyzozord> the IFactoryFactory problem?
[15:11:05] <DnzAtWrk> I find it to be very pragmatic
[15:11:41] <DnzAtWrk> I would say pyzozord, they create interfaces/classes for very abstract things
[15:11:43] <DnzAtWrk> too abstract
[15:11:44] <DnzAtWrk> too many
[15:11:46] <phogg> DnzAtWrk: https://github.com/Hello-World-EE/Java-Hello-World-Enterprise-Edition
[15:11:47] <bayaz> Title: GitHub - Hello-World-EE/Java-Hello-World-Enterprise-Edition 
[15:11:49] *** Joins: zaher (~zaher@37.48.158.137)
[15:12:14] <pyzozord> this problem relates to inhertiance, no?
[15:12:20] <DnzAtWrk> not neccesarily
[15:12:21] <phogg> only in part
[15:12:40] <DnzAtWrk> let's see, what's a good example
[15:12:43] <DnzAtWrk> some kind of gui framework I'm sure
[15:13:02] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[15:13:17] <pyzozord> I think this is the canonial caricature https://github.com/EnterpriseQualityCoding/FizzBuzzEnterpriseEdition
[15:13:18] <bayaz> Title: GitHub - EnterpriseQualityCoding/FizzBuzzEnterpriseEdition: FizzBuzz Enterprise Edition is a no-nonsense implementation of FizzBuzz made by serious businessmen for serious business purposes. 
[15:13:51] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[15:13:53] <pyzozord> But I can't right now to put it in words and I don't see how exactly it relates to inheritance
[15:13:54] <DnzAtWrk> https://www.oreilly.com/library/view/borland-jbuildertm-developers/067232427X/067232427X_ch11lev1sec3_image01.gif
[15:13:55] <bayaz> Type: image/gif Size: 24.1 kB 
[15:13:58] <DnzAtWrk> this isn't a very extreme example
[15:14:03] <DnzAtWrk> but it kinda gets the point across
[15:14:13] <phogg> this is what Java developers tend to do. It's not the language, it's the culture
[15:14:17] <DnzAtWrk> Component, Container, JComponent
[15:14:18] <DnzAtWrk> Why
[15:14:38] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[15:14:43] <pyzozord> yeah that
[15:14:55] <pyzozord> inheritance kind of encourages that style if taken to the extreme
[15:15:05] *** Quits: RazielZ (~Raziel@user/raziel) (Read error: Connection reset by peer)
[15:15:17] <DnzAtWrk> yes. That's why I personally argue to keep it practical and human readable
[15:15:30] *** Joins: skepta (~eric@203.27.106.164)
[15:15:38] <DnzAtWrk> Object -> Widget -> Button
[15:15:54] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:16:23] <phogg> You can get in to similar trouble in relational databases with the ever-present normalization debate.
[15:16:29] <phogg> Third or fourth normal form?
[15:16:38] <phogg> There isn't a better, there's only a series of tradeoffs.
[15:16:51] <DnzAtWrk> god I haven't studied normal forms in quite some time. I've just being doing common sense design for sql
[15:16:57] <DnzAtWrk> it's fairly self-explanatory :P
[15:17:10] <DnzAtWrk> don't repeat things
[15:17:10] <phogg> With highly inherited OO you get some benefits for sure, but there are also drawbacks. There is no one right choice.
[15:17:31] <pyzozord> need to rewatch this, I forgot it's arguments https://www.youtube.com/watch?v=QM1iUe6IofM
[15:17:31] <phogg> But, if there were, I would say it's on the "don't try it" side. Just because it's harder to get yourself in trouble that way.
[15:17:32] <bayaz> Title: Object-Oriented Programming is Bad 
[15:18:01] *** Joins: akronymus (~akronymus@217.29.158.240)
[15:18:09] <DnzAtWrk> As per usual, I disagree. Some programs are inherently easier to make with OOP, such as games
[15:18:18] <akronymus> Anyone done the AoC day 1 yet.
[15:18:18] <DnzAtWrk> some programs are easier with FP, such as statistical computing
[15:18:24] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[15:18:28] *** Parts: skepta (~eric@203.27.106.164) ()
[15:18:32] <akronymus> Should've been a question mark
[15:18:40] <phogg> I like to make simple, neat rules that you can follow in all cases. Rules like "Don't use inheritance." But, I also have a (secret) zeroth rule: know when to ignore your own rules. Sometimes you should.
[15:18:41] <akronymus> Found it to be a nice warmup
[15:18:46] <pulse> UIs are naturally a fit for OOP
[15:18:54] <pulse> UIs in FP would be an ungodly mess I think
[15:18:56] <akronymus> I'd disagree
[15:19:08] <DnzAtWrk> there is FP UIs, such as ImGui
[15:19:13] <DnzAtWrk> which are technically stateless I believe
[15:19:30] <DnzAtWrk> you have bound the GUI to the very data that produces it
[15:19:37] <pulse> Imgui is immediate mode though
[15:19:40] <phogg> sounds like fun to me
[15:19:41] <DnzAtWrk> you create the gui in the main loop
[15:19:47] <DnzAtWrk> it's... good for simple stuff
[15:19:49] <akronymus> Elmish is pretty amazing to work with.
[15:19:56] <pulse> Maybe it's easier to generalize immediate mode to FP
[15:19:58] <pulse> But idk
[15:20:24] <akronymus> https://adventofcode.com/2021
[15:20:25] <bayaz> Title: Advent of Code 2021 
[15:20:36] <DnzAtWrk> I need to buy another lego advent calender
[15:20:40] <akronymus> The second part of day 1 definitely threw me off a bit.
[15:20:41] <DnzAtWrk> wonder if the new star wars one is here
[15:20:47] <phogg> ah! It's December already?!
[15:20:52] <akronymus> Yeah
[15:21:05] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[15:21:10] <akronymus> No spoilers, obviously.
[15:21:48] <pulse> I would buy a LEGO pirate ship if they still made good ones
[15:22:31] *** Joins: Raziel (~Raziel@user/raziel)
[15:23:31] <DnzAtWrk> the last big lego thing I bought was a lego star destroyed
[15:23:34] <DnzAtWrk> man that thing is massive
[15:23:39] <DnzAtWrk> destroyer*
[15:23:58] <DnzAtWrk> too bad disney screwed up the star wars canon, and now it's kinda boring
[15:26:17] <DnzAtWrk> incidentally, I have lego mindstorms running on java
[15:26:55] *** Joins: RenAdjest (~RenAdjest@user/renadjest)
[15:26:58] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:28:24] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[15:28:32] *** Joins: TCZ (~tcz@91.150.178.124)
[15:28:49] <pulse> I have a collection of set from early 90s but I have nowhere to display them
[15:29:03] <pulse> Gotta get one of those display racks with glass
[15:29:13] <pulse> Otherwise they just get dusty over time and it's a pain in the butt to clean them
[15:29:29] <pulse> s/set/sets/
[15:30:57] *** Quits: Tabmow (~tabmow@user/tabmow) (Ping timeout: 268 seconds)
[15:31:20] <DnzAtWrk> https://www.thingiverse.com/thing:3320729
[15:31:21] <bayaz> Title: Hexagon Shelf Connectors by TonyH0612 
[15:32:12] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[15:32:31] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:32:38] <pulse> Hexagonal displays are always nice
[15:32:52] <pulse> But they need a glass cover
[15:33:54] <CalimeroTeknik> the only noscript tag in the page is for google tracking :[
[15:34:18] *** Joins: job (~job@wikimedia-commons/pandakekok9)
[15:34:33] <CalimeroTeknik> also page is blank, it just has scripts
[15:36:09] <CalimeroTeknik> the efforts on these things, meh
[15:37:13] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[15:38:12] <DnzAtWrk> https://www.thingiverse.com/thing:3678942
[15:38:13] <bayaz> Title: Elevator Box by CreatorD 
[15:38:14] <DnzAtWrk> create my thing!
[15:38:44] <pyzozord> ah I know why I can't connect inheritance to "oop is bad". In the video he basically says "inheritance is so bad that I didn't even mention here why it's bad"
[15:38:45] *** Joins: KillerWasp (KillerWasp@user/killerwasp)
[15:38:53] <KillerWasp> hello random picasso guys
[15:39:13] <DnzAtWrk> I love that when people complain about inheritance, they always complain about the strawman of "x can't be both y and z at the same time"
[15:39:34] <DnzAtWrk> I can tell you that after doing OOP for some 15 or so years, that is never an issue
[15:40:12] <DnzAtWrk> inheritance chains tend to come naturally
[15:40:14] <pyzozord> akronymus: I'm planning to look at AoC today after work
[15:41:03] *** Quits: sjue (~sjue@cpeac202e0695f3-cmac202e0695f0.cpe.net.cable.rogers.com) (Quit: Client closed)
[15:41:07] <merijn> Interface inheritance is fine
[15:41:12] <merijn> Everything else is shite >.>
[15:41:26] *** Quits: jazzy3 (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[15:41:33] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[15:42:44] <pyzozord> nah, I've been writing interfaces past 5 years and the declarative/functional approach of react is less complex
[15:43:06] <CalimeroTeknik> pyzozord, the fundamental problem of OOP is one of strong coupling (conceptually)
[15:43:08] <pyzozord> it's not really functional, it's more "procedural with pure functions and light fp stuff"
[15:43:43] <CalimeroTeknik> pyzozord, this means that you will necessarily end up breaking the encapsulation principle if you do OOP
[15:43:46] <merijn> tbh, I think the fundamental problem of OOP is far more fundamental than coupling
[15:43:51] <beaky> nice i like object oriented programming
[15:44:15] <pyzozord> i do think that inheritance is basically syntax sugar on composition
[15:44:23] <merijn> The main problem in programming is "reasoning about possible states your program can be in", the more possible states, the harder it is to reason about correctness, behaviour, and debugging it
[15:44:56] <merijn> The number of possible states increases *superlinearly* with the number of mutable variables in a program.
[15:45:24] <pyzozord> yeah also the creator of OOP argues to give up the absolute control of the system, and instead learn system theory and start "arguing" with the system
[15:45:25] <merijn> OO encourages every class keeps its state internally as hidden, mutable, state. Exploding the number of potential states of your program
[15:46:32] <pyzozord> the OO as envicioned by Alan Kay, is strongly bazaar. But Java people are trying very hard to fit it into a Cathedral.
[15:46:35] <pyzozord> THAT!
[15:46:38] <pyzozord> that is the problem
[15:46:41] *** Joins: qbt (~qbt@user/edun)
[15:47:01] <pyzozord> That's how you get IFactoryFactories
[15:47:15] <pyzozord> by trying to control something that was fundamentally designed not to be controlled
[15:47:34] <pyzozord> i almost could feel two dots connecting in my head just now
[15:48:49] <pyzozord> does it make sense to anyone else? or am i being crazy again
[15:49:47] <akronymus> The ONLY thing unique to modern OOP and not other paradigms as well is inheritance.
[15:50:22] *** Quits: qbt (~qbt@user/edun) (Client Quit)
[15:50:29] *** Joins: qbt (~qbt@user/edun)
[15:51:44] <merijn> Accurate summary of why modern OOP is terrible :p
[15:51:44] *** Quits: qbt (~qbt@user/edun) (Client Quit)
[15:51:56] <merijn> The only good/unique bit of it, is that bit that's the worst part :p
[15:53:15] *** Joins: mrig_ (~AdiIRC@amarseille-658-1-164-72.w86-198.abo.wanadoo.fr)
[15:54:04] <pyzozord> although one thing doesn't add up in my mind. Why is Alan Kay arguing for giving up control and at the same time about engineering and quality of work
[15:54:19] <pyzozord> I wish I could ask him
[15:54:54] <pyzozord> Hmm, maybe I can send him an email? Do you think if he would mind if uneducated noone asked him a question randomly?
[15:55:04] <CalimeroTeknik> no, I'd say it's encapsulation
[15:55:13] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[15:55:26] <GeDaMo> pyzozord: the worst that could happen is he sends you to the spam folder :P
[15:55:49] <merijn> keep in mind that, when Alan Kay was saying these things, nobody knew what the fuck they were doing
[15:55:53] <akronymus> Encapsulation isn't unique to OOP calcmandan
[15:55:57] *** Quits: mrig (~AdiIRC@user/mrig) (Ping timeout: 256 seconds)
[15:55:59] *** Quits: Lazenca (Lazenca@user/lazenca) (Remote host closed the connection)
[15:56:00] <akronymus> CalimeroTeknik i meant
[15:56:17] <merijn> He had a project for 2 master students to, effectively, solve computer vision in one summer vacation
[15:56:29] <merijn> Turns out, computer vision is slightly harder than that :p
[15:56:36] *** Joins: maxzor (~maxzor@2a01cb04054faa007596d3216757778c.ipv6.abo.wanadoo.fr)
[15:57:21] <merijn> Alan Kay is a smart man, who has a lot of deep insights and understands a lot, but he's not, like, an infallible god when it comes to programming OR enginering
[15:57:35] <TCZ> haha
[15:57:54] <CalimeroTeknik> to begin with, "messages" in OOP cannot send *references* to state, they can only carry information *about* state, but how are you going to send a message to an object without holding a reference to it? consequence: an object can only send messages to objects that are part of its private state (if we respect encapsulation)
[15:58:23] <akronymus> Not necessarily
[15:58:27] <snake> nice i like OOP
[15:58:29] <akronymus> It can send it out to everyone
[15:58:32] <pyzozord> Yes, I think I will send him an email if I can find his email.
[15:58:43] <mrig_> CalimeroTeknik pop it into a queue
[15:58:44] <snake> OOP gives me good vibes
[15:58:44] <CalimeroTeknik> send what to everyone?
[15:58:51] <akronymus> The message
[15:59:01] <akronymus> And only those that can do something with it, bother to ingest it
[15:59:02] <CalimeroTeknik> how are you going to do that?
[15:59:11] <akronymus> A shared message bus?
[15:59:13] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[16:00:00] <CalimeroTeknik> is that an object?
[16:00:08] *** Joins: ixil (~ixil@mpp-cp1-natpool-2-265.ethz.ch)
[16:00:20] <vdamewood> Oh yay, another OOP discussion. Has everyone agreed to a definition of OOP?
[16:00:30] <akronymus> I like alan kays definition
[16:00:39] <KillerWasp> vdamewood: no.
[16:00:46] <akronymus> I find modern "OOP" to be essentially the worst paradigm out there.
[16:01:15] <mrig_> vdamewood: yes, we need to add an S at the end :)
[16:01:20] *** Quits: _inky (~inky_@46.36.112.226) (Read error: Connection reset by peer)
[16:01:22] <akronymus> Even more spaghetti than extreme amounts of goto.
[16:01:23] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[16:01:28] <akronymus> In most cases
[16:02:15] <vdamewood> akronymus: Alan Kay's idefinition is the Smalltalk/Objective C kind, right?
[16:02:36] *** Quits: RenAdjest (~RenAdjest@user/renadjest) (Ping timeout: 250 seconds)
[16:02:48] <snake> io find that most people criticizing OOP don't really know what they're talking about but they are on a superiority trip writing C and using linux
[16:02:51] <KillerWasp> all definitions are always so different.
[16:02:51] <vdamewood> Hmm... Alan Kay, known forr: Smalltalk... so probably.
[16:03:00] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi)
[16:03:19] <akronymus> snake I know OOP quite well.
[16:03:27] <akronymus> The hatred for it developed over time.
[16:03:30] <snake> akronymus, sure ya do
[16:03:43] <pyzozord> vdamewood: this time it is actually a really good discussion
[16:03:43] <akronymus> Well, modern "oop" that is
[16:04:04] <akronymus> I mostly gravitate towards FP nowadays.
[16:04:08] <pyzozord> with great points, and no egos
[16:04:17] <CalimeroTeknik> akronymus, do you have a definition of "modern" oop?
[16:04:19] <vdamewood> Well, crap. Now I need to figure out a label for the other (old) definition of OOP.
[16:04:29] <TCZ> akronymus, Dont you think its too mainstream to be functional programmer
[16:04:47] <akronymus> CalimeroTeknik Everything having to have bundled behaviour and data not being allowed to exist as just data.
[16:05:04] <akronymus> TCZ why should I care about how mainstream it is?
[16:05:05] <CalimeroTeknik> sounds like encapsulation!
[16:05:24] <akronymus> But often times, data is JUST data.
[16:05:27] <snake> encapsulation into a class can also just clarify what is happening, and reduce if statements
[16:05:31] <mrig_> oh simula had objects prior to smalltalk.
[16:05:33] <kennyd> akronymus, often called ravioli or lasagna code when referring to OOP :P. https://en.wikipedia.org/wiki/Spaghetti_code#Related_phrases
[16:05:33] <bayaz> Title: Spaghetti code - Wikipedia 
[16:05:36] <snake> you just instantiate the work you're doing and do it
[16:05:38] <akronymus> snake modules can do that as well
[16:05:42] <mrig_> was considered OOP
[16:05:51] <snake> akronymus, that is build time difference
[16:06:00] <snake> run-time difference is important
[16:06:15] <TCZ> hmmm
[16:06:29] <akronymus> I prefer to have much more generic code.
[16:06:39] <akronymus> Stuff like map, filter and reduce, for example.
[16:06:42] <snake> well, yes that's the point
[16:06:45] <akronymus> (In JS terms)
[16:06:53] <snake> less code, more clear, does more
[16:06:53] <akronymus> Those functions are standalone.
[16:07:10] <akronymus> And not part of the data.
[16:07:14] <snake> redoing a module for each subcondition you want to handle is monsterous xD
[16:07:48] <pulse> The benefit of OOP is when a system is designed well, things work implicitly. You can extend the class Dog and immediately use it in your system because the whole system is "aware" of how to handle both Dog and Animal
[16:08:01] <pulse> It's a time saving paradigm when it boils down
[16:08:14] *** Quits: immibis (~hexchat@62.156.144.218) (Remote host closed the connection)
[16:08:18] <akronymus> OOP has the pits of failure though.
[16:08:23] <akronymus> The easy way is the wrong way.
[16:08:32] <snake> idk, i rarely ever use inheritance
[16:08:37] *** Joins: immibis (~hexchat@62.156.144.218)
[16:08:43] <akronymus> snake yeah a module for each subcondition would be stupid.
[16:08:59] <vdamewood> snake: In most cases, when people use inheritance, really what they want is a common interface.
[16:09:08] <vdamewood> s/most/many/
[16:09:18] <snake> yeah i have used interfaces
[16:09:26] <vdamewood> It's gotten to the point that people are actually using a common interface instead now.
[16:09:30] *** Quits: mrig_ (~AdiIRC@amarseille-658-1-164-72.w86-198.abo.wanadoo.fr) (Quit: Going offline, see ya! (www.adiirc.com))
[16:09:30] <snake> actually i lied, i did use inheritance once, it was a huge mistake
[16:09:41] <akronymus> I mostly use modules to group related things. Stuff like all the functions that are specific to some kind of thing. For example, everything related to the drawing of an UI is part of the same module.
[16:09:50] <vdamewood> Well, I'm using 'interface' in the general English term. Not in the Java (and other languages) usage of the term.
[16:09:55] <snake> i had a separate class for each report to generate and upload to the national union data store
[16:10:05] <pulse> Inheritance is great when used correctly. It's very bad when used incorrectly
[16:10:12] <pulse> For the most part shallow inheritance is all you need
[16:10:13] <akronymus> Mind the "related" not being "part of"
[16:10:15] *** Joins: mrig (~AdiIRC@user/mrig)
[16:10:15] <vdamewood> Though, Java-style interfaces are a way to implement a shared (general-English) interface
[16:10:21] <pulse> But some problems (such as UI systems) benefit greatly from deep inheritance trees
[16:10:37] <snake> turns out its easier to make a Report object, with an UploadService
[16:10:39] <akronymus> I wouldn't say so.
[16:10:51] <akronymus> In pretty much all cases you can do it with composition
[16:10:52] <snake> and then configure it to work at runtime
[16:10:53] *** Joins: chomwitt (~chomwitt@2a02:587:dc0d:6d00:12c3:7bff:fe6d:d374)
[16:11:17] <mrig> pulse there are other ways though, of mapping state, than linked lists and gotos.
[16:11:17] <vdamewood> pulse: For me, one case I can think of where I feel inheritance is the right thing is when implementing Windows in a GUI. derriving from a base Window type gives you all of the boilerplate code to draw and move the window.
[16:11:28] <akronymus> for example, have a function that takes two views and returns a new view that has both of them besides each other.
[16:11:37] <mrig> you could just use a stack of states.
[16:11:41] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[16:11:47] <mrig> one for each thing I suppose.
[16:11:49] <pulse> vdamewood, and Window is also a Container which is also a Control
[16:11:55] <pulse> It all comes together very neatly
[16:12:05] <dTal> vdamewood: I don't really see why you need inheritance for that. Traditionally one might solve that sort of problem with a "library"
[16:12:12] <pulse> I feel people who have irrational hatred of inheritance haven't really grasped its full potential
[16:12:21] <snake> good code is just code written with effort and care in it, OOP or not
[16:12:27] <pulse> snake++
[16:12:28] <akronymus> For example, I wrote a function in elmish recently-ish that converts a table to two tables, each with half the width, besides each other.
[16:12:44] <vdamewood> dTal: That's libraries are orthogonal to what I'm talking about. Most GUI libraries provide a Window class.
[16:12:50] <akronymus> No inheritance needed.
[16:12:53] <CalimeroTeknik> merijn, pyzozord, when I say the fatal mistake of OOP is coupling, I mean between types and behaviours (within its own paradigm)
[16:12:54] <vdamewood> s/That's l/L/
[16:12:58] <akronymus> Just manipulating data.
[16:13:12] <dTal> vdamewood: how is it orthogonal? "boilerplate code to draw and move the window." describes a library
[16:13:16] <akronymus> And funnily enough, that function worked with most collection based stuff.
[16:13:26] <akronymus> Even stuff like dropdowns, for example.
[16:13:49] <vdamewood> dTal: It's orthogonal because I'm talking about how one might interact with a library.
[16:13:58] <dTal> why does it help to define a special data type for your special window?
[16:14:24] <vdamewood> dTal: Because my special Window has special functionality that's different from other windows.
[16:14:25] <akronymus> It isn't a special data type though.
[16:14:35] <akronymus> Oh nvm, you talked to vdam
[16:14:42] <dTal> Looks like you disagree...
[16:15:11] <akronymus> Just write some functions that take a window and do the special functionality on it?
[16:15:21] <dTal> akronymus: a class is a data type. Inheritance is the creation of a new type.
[16:15:41] <akronymus> I mean, the special window can be just a window.
[16:15:43] *** Quits: chomwitt (~chomwitt@2a02:587:dc0d:6d00:12c3:7bff:fe6d:d374) (Ping timeout: 252 seconds)
[16:15:53] <akronymus> But you just use the specialized function and pass it that window
[16:15:57] <dTal> Right, that's what I'm saying
[16:16:19] <dTal> I don't really see what inheritance gets you that win = CreateWindow() doesn't
[16:16:20] *** Quits: viaSanctus (~viaSanctu@user/viasanctus) (Quit: Leaving)
[16:16:45] <akronymus> Oh, I am arguing that inheritance is not needed, too.
[16:16:49] *** Quits: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au) (Ping timeout: 252 seconds)
[16:17:16] <pulse> Personally I feel inheritance is a great paradigm that's abused way too often
[16:17:25] <dTal> <pulse> The benefit of OOP is when a system is designed well, things work implicitly. You can extend the class Dog and immediately use it in your system because the whole system is "aware" of how to handle both Dog and Animal
[16:17:37] <dTal> I feel like this describes Julia's multiple dispatch well
[16:17:48] *** Quits: TCZ (~tcz@91.150.178.124) (Remote host closed the connection)
[16:17:52] <dTal> and I've never seen an OOP system compose as well as that
[16:17:54] *** Joins: chomwitt (~chomwitt@2a02:587:dc0d:6d00:12c3:7bff:fe6d:d374)
[16:18:11] <mrig> I still think that nomenclature is a nicer way to differentiate scope though, the more logically and well named things are the easier it is to grok. The less syntactic sugar there is the faster it is to compile and the easier it is to build tools for.
[16:18:17] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Ping timeout: 252 seconds)
[16:18:21] *** Joins: Payam (~Payam@138.106.57.131)
[16:18:22] *** Joins: TCZ (~tcz@91.150.178.124)
[16:18:27] *** Joins: probableUser (~probableU@2a02:8388:1a08:4680:80f4:78d1:d774:5047)
[16:18:28] <akronymus> Mind you, I think objects can be amazing.
[16:18:28] <CalimeroTeknik> traits do just as well what pulse was saying
[16:18:33] *** Joins: _inky (~inky_@46.36.114.168)
[16:18:50] <akronymus> I REALLY don't think "everything should be an object with bundled data and functionality" is a good thing at all.
[16:18:57] <dTal> this is the problem with OOP - ask a bunch of people what it is and what the advantages are, and you'll get a bunch of different answers. That's a bit of red flag
[16:19:10] <mrig> An interesting thought came up the other day, the notion that classes or structs are an n^2 solution to n^2 problems, I thought that was a pretty awesome way of looking at it.
[16:19:22] <dTal> it makes it seem like more of a religion than a definite organizing principle
[16:19:27] <probableUser> do you think AI will someday, after extincting humans, go to mine ore to sustain itself?
[16:19:41] <akronymus> Probably not.
[16:19:43] <dTal> ask people what the point of functional programming is, and they'll all say the same thing
[16:19:48] *** Quits: TCZ (~tcz@91.150.178.124) (Remote host closed the connection)
[16:19:53] <vdamewood> dTal: Yeah, I don't talk about OOP much anymore because of that. I focus on the specifics, such as inheritance.
[16:20:10] *** Joins: TCZ (~tcz@91.150.178.124)
[16:20:12] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[16:20:30] <akronymus> Point of FP is IMO at its core to use generic data structures you can manipulate with many different functions.
[16:20:48] <akronymus> Rather than having many specialized structures you manipulate with few functions.
[16:20:54] <pyzozord> vdamewood: that's a good point, making the discussion more concrete is often a good idea
[16:21:08] <snake> so you take issue with the ADT?
[16:21:34] <akronymus> a as in algebraic or abstract?
[16:21:40] <snake> abstract
[16:21:49] <dTal> akronymus: I'd say that's a consequence of the core of FP, which is avoiding mutable state
[16:21:55] <akronymus> Don't really see how it could be construed as such.
[16:21:56] <snake> i thought this was a term most programmers would know...
[16:22:12] *** Joins: viaSanctus (~viaSanctu@d5152c2f0.static.telenet.be)
[16:22:13] *** Quits: viaSanctus (~viaSanctu@d5152c2f0.static.telenet.be) (Changing host)
[16:22:13] *** Joins: viaSanctus (~viaSanctu@user/viasanctus)
[16:22:14] *** Quits: ixil (~ixil@mpp-cp1-natpool-2-265.ethz.ch) (Remote host closed the connection)
[16:22:18] *** Joins: trafficjam (~trafficja@2001:ac8:28:91::a13e)
[16:22:18] <CalimeroTeknik> dTal, vdamewood, I don't think one gets OOP without encapsulation
[16:22:19] <pyzozord> i consider ADT more like standards, like POSIX
[16:22:22] <mrig> snake abstract was abstracted away by the sandbox.
[16:22:29] <pyzozord> just descrives the behaviour without internal details
[16:22:43] <dTal> CalimeroTeknik: doesn't that just mean "abstraction"
[16:22:46] <vdamewood> CalimeroTeknik: So, You'd say Python doesn't support OOP?
[16:22:46] <phogg> CalimeroTeknik: I don't think encapsulation is required.
[16:23:02] <kennyd> snake in the context of discussing functional programming it isn't unreasonable to think that ADT may refer to algebraic data type
[16:23:14] <snake> vdamewood, yes, and along with that, C DOES support OOP LOL
[16:23:22] <pyzozord> ADT is not necessiarly somthing you should have in your code. I think in the code you should have concrete implementations of ADT
[16:23:29] <CalimeroTeknik> vdamewood, sure it does, but I assume you refer to the fact that it is not enforced
[16:23:51] *** Joins: plastico (~plastico@neomutt/plastico)
[16:24:04] <snake> kennyd, we weren't talking about algebra lol
[16:24:18] <snake> anyways
[16:24:24] *** Joins: mattallmill (~mattallmi@ip68-103-132-187.ks.ok.cox.net)
[16:24:25] <vdamewood> CalimeroTeknik: There's a convention, I'd say a convention isn't really support, plus I can access the __dict__ property to get a dict of everything, even the stuff that's supposed to be hidden.
[16:24:33] <kennyd> snake https://en.wikipedia.org/wiki/Algebraic_data_type
[16:24:34] <bayaz> Title: Algebraic data type - Wikipedia 
[16:25:02] <snake> in C you can have your CRUD functions work with a typedef that is defined on a pointer to some static struct that can't be used by the client code
[16:25:19] <snake> so in that sense, C is OOP (if we just go based on encapsulation alone)
[16:25:25] <vdamewood> snake: 'static' struct?
[16:25:25] <snake> which i do like to use encapsulation
[16:25:44] <snake> vdamewood, yup, only visible in the file it is defined in
[16:25:51] <vdamewood> snake
[16:25:57] <vdamewood> dammit, finger slipped
[16:25:57] <phogg> all languages are OO languages, some just make it easier than others
[16:26:11] <akronymus> snake ADT's are by their very definition very generic.
[16:26:53] <akronymus> A function that can manipulate lists, can do it with a list of x, y, z and all the rest.
[16:26:58] <vdamewood> snake: You can't really call that static though.
[16:27:06] <mrig> I have heard it said that C had perfect encapsulation until that was broken by C++
[16:27:15] <snake> vdamewood, why not? that is what static means in C
[16:27:24] <snake> you know that im sure
[16:27:25] <vdamewood> snake: 'static' in that sense has more to do with symbol availability and name lookup.
[16:27:36] <akronymus> You can do encapsulation in c.
[16:27:47] <akronymus> It's gonna suck, you are able to break it and such.
[16:27:49] <akronymus> But you can do it.
[16:28:09] <snake> vdamewood, yup, you know exactly what i mean
[16:28:12] <snake> thanks for clarifying
[16:28:59] <snake> you can do typedef struct mystaticstructtype *StructADT; to make it available as an object kinda
[16:29:01] <CalimeroTeknik> vdamewood, well, Python clearly allows you to do encapsulation, but doesn't allow you to enforce it… is that "supporting"? (not fully?)
[16:29:44] <CalimeroTeknik> and the obvious question to answer and contrast here is: does Python support OOP?
[16:29:53] <vdamewood> snake: I also wouldn't do that. (define a pointer in a typedef. Struct Foo; typedef Struct Foo Foo; suffices for the encapsulation.)
[16:29:54] <akronymus> Modules can do encapsulation.
[16:30:01] <akronymus> But that doesn't really make them OOP
[16:30:04] *** Joins: jkk (~jkk@213.180.39.162)
[16:30:07] <jkk> :)
[16:30:31] <vdamewood> CalimeroTeknik: I would say that if it's not enforced, it's not supported.
[16:30:33] <akronymus> Ecnapsulation is orthogonal to OOP
[16:30:40] <snake> vdamewood, hm, the uni professor on the unsw videos said to do that
[16:30:43] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[16:30:53] <snake> anyways i gtg
[16:31:05] <akronymus> Wish you a good day
[16:31:15] <[itchyjunk]> Wish you a mediocre day
[16:31:16] <vdamewood> snake: Slurp slurp.
[16:32:11] <akronymus> Sooooo....
[16:32:20] <akronymus> Anyone of you read "Structured programming"?
[16:32:29] <pyzozord> I am planning to
[16:32:34] <vdamewood> read?
[16:32:36] <pyzozord> (as with many books)
[16:32:38] *** Joins: xkuru (~xkuru@user/xkuru)
[16:32:45] <vdamewood> Like with my eyes?
[16:32:45] <pyzozord> yeah it's a whole book by Dijkstra
[16:32:52] <jkk> wish you nothing :)
[16:33:00] <akronymus> Well, there are 3 authors actually.
[16:33:13] <vdamewood> I wish I could just load it into my brain.
[16:33:17] <pyzozord> I bet it's Dijkstra and his students
[16:33:23] <akronymus> Altough, that is more 3 smaller ones smushed together.
[16:33:42] <[itchyjunk]> Is node red any good? Do people who already know js use node red?
[16:33:48] <[itchyjunk]> I keep hearing about it
[16:33:59] <CalimeroTeknik> Dijkstra? you have my attention.
[16:34:39] *** Joins: src (~src@user/src)
[16:35:18] <pyzozord> [itchyjunk]: lol I don't think that tool has anything to do with js beside sharing the name "node" and being written in js
[16:35:37] <akronymus> Dahl, dijkstra and hoare
[16:35:43] <akronymus> https://dl.acm.org/doi/book/10.5555/1243380
[16:35:45] <bayaz> Title: Structured programming | Guide books 
[16:35:56] <pyzozord> oh Hoare is also an author of that book? That changes things
[16:36:05] <akronymus> You don't like hoare?
[16:36:06] <pyzozord> I'm not familiar with Dahl
[16:36:15] <pyzozord> no, it changes things even more to "must read"
[16:36:17] <CalimeroTeknik> seems like IBM marketingware https://dl.acm.org/doi/book/10.5555/1243380
[16:36:17] <bayaz> Title: Structured programming | Guide books 
[16:36:21] <CalimeroTeknik> oops
[16:36:27] <CalimeroTeknik> https://en.wikipedia.org/wiki/Node-RED
[16:36:27] <bayaz> Title: Node-RED - Wikipedia 
[16:36:55] <akronymus> https://en.wikipedia.org/wiki/Ole-Johan_Dahl
[16:36:56] <bayaz> Title: Ole-Johan Dahl - Wikipedia 
[16:37:05] <akronymus> Just one of the fathers of simula pyzozord
[16:37:31] <pyzozord> Turing Award reciver... Simula... Ok I need to get familiar with him
[16:37:38] <[itchyjunk]> oh, google said it's used to create js functions
[16:37:42] <[itchyjunk]> in visual way
[16:37:43] *** Quits: maxzor (~maxzor@2a01cb04054faa007596d3216757778c.ipv6.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[16:38:37] <vdamewood> pyzozord: FWIW if someone uses a definition of OOP different from Kay's, they're using Dahl's.
[16:38:42] <pyzozord> it seems to be affiliated with somethign called OpenJS Foundation, so maybe it does have a bit more to do with js
[16:38:58] <pyzozord> vdamewood: oh that's interesting
[16:39:01] <akronymus> https://www.mn.uio.no/ifi/english/about/ole-johan-dahl/
[16:39:03] <bayaz> Title: Tribute to Ole-Johan Dahl - Department of Informatics 
[16:39:14] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[16:39:38] <jkk> dahl looks smart
[16:39:39] *** Joins: zwr (~zwr@2804:d45:b966:fb00:e8f3:9015:4194:f553)
[16:41:29] <vdamewood> I guess you could say the two styles of classical OOP are Dahl/Nygaard-style, and Kay-style.
[16:41:39] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[16:41:48] <pyzozord> does hardware engineering use a lot of formal methods? Dahl was researching formal methods and I got interested in what is that really
[16:42:13] <pyzozord> I know software doesn't really use a lot of formal methods, at least not in the areas I know about
[16:42:34] <jkk> vdamewood, what's the difference?
[16:43:18] <vdamewood> jkk: That stuff about message passing and such in Kay's definition.
[16:43:48] <jkk> is there a more specific definition?
[16:44:06] <akronymus> vdamewood I'd disagree.
[16:44:12] <jkk> now that someone mention dahl I understand why i like OOP
[16:44:13] <jkk> :)
[16:44:19] <akronymus> The dahl nygaard style is more towards concatenating stuff.
[16:44:24] <pyzozord> jkk: http://lists.squeakfoundation.org/pipermail/squeak-dev/1998-October/017019.html
[16:44:24] <bayaz> Title: prototypes vs classes was: Re: Sun's HotSpot 
[16:44:25] <jkk> it was made by a sexy looking man Xd
[16:44:30] <akronymus> Aka composition
[16:45:09] <vdamewood> akronymus: I'm actually not sure I'd disagree with you there.
[16:45:31] <vdamewood> akronymus: I think you're just better articulating something I failed to.
[16:45:42] <vdamewood> err s/just //
[16:45:57] <akronymus> Not better at articulating
[16:46:14] *** Quits: jaysicks (~jaysicks@94-21-138-235.pool.digikabel.hu) (Quit: Leaving)
[16:46:17] <vdamewood> at, probably no. Doing it right now, yes.
[16:46:21] <akronymus> Just a bigger list of wordings that I read somewhere and probably stuck.
[16:47:17] <vdamewood> Actually, I should clarify the above. I didn't say you were better at it, just that you're doing it right now with this one thing.
[16:47:51] <akronymus> Are you saying I suck at articulating?
[16:47:52] <akronymus> :p
[16:48:19] <jkk> i want pizza lol
[16:48:25] <vdamewood> akronymus: Saying? No. Denying, also no. :P
[16:48:34] *** Joins: Hylden (~Hylden@user/hylden)
[16:48:57] <vdamewood> Besides, it's still possible to not as good as me at something and still be great.
[16:49:06] <vdamewood> s/not as/not be as/
[16:50:10] <jkk> youtube - people dramatise to get views, people get distorted view of reality :)
[16:50:29] <jkk> like people who dont travel much and watch youtube about other countries
[16:50:41] <akronymus> https://www.youtube.com/watch?v=k6DA_WwO90c jkk
[16:50:42] <bayaz> Title: Gimme Pizza 
[16:51:05] *** Joins: pulse_ (~pulse@user/pulse)
[16:51:24] <TCZ> bye
[16:51:27] *** Quits: TCZ (~tcz@91.150.178.124) (Quit: Leaving)
[16:52:39] <pyzozord> right yeah, the discussion has suddenly dropped in quality, time to get back to work for now I guess :P
[16:52:55] <mrig> pizza should be tasted in italy, to really be appreciated :)
[16:53:01] <TheLinuxNerd> yeah, go back to work, you no-good workers :-D
[16:53:31] <jkk> mrig, yes
[16:53:47] <akronymus> mrig https://www.youtube.com/watch?v=czTksCF6X8Y
[16:53:48] <bayaz> Title: Spider-Man 2: The Game Pizza Theme 
[16:54:07] <mrig> non of these armchair pizza connoisseurs really know what pizza is :)
[16:54:21] <akronymus> Flammkuchen > pizza anyways.
[16:54:21] *** Quits: kennyd (~bc8165b6@cerf.good1.com) (Quit: CGI:IRC (Ping timeout))
[16:54:22] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Ping timeout: 256 seconds)
[16:54:23] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[16:54:40] *** pulse_ is now known as pulse
[16:54:43] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[16:54:43] <mrig> just the idea of a pizza type, that has been applied to some local concoction.
[16:55:00] <pizza> mrig: what is real pizza, please tell me
[16:55:36] <mrig> thin crusty and has salad ontop too, particularly rocket, should really be tasted in Naples.
[16:55:43] <jkk> Milan :)
[16:55:51] <mrig> mozzarella does not travel either.
[16:55:51] <akronymus> I'd say any dough based base, with a sauce and toppings.
[16:55:55] *** Joins: getynge (~getynge@2601:702:80:2fc0::a0a3)
[16:56:19] <mrig> the idea of mozzarella and some curious type of industrial rubber does though :P
[16:56:21] <akronymus> Where all parts are baked together
[16:56:35] <akronymus> Or whatever the term is.
[16:56:40] <jkk> mrig, trying too hard to be smart :P
[16:56:50] <jkk> in usa you can buy top quality stuff
[16:57:02] <mrig> pizza you are of course also pizza ;)
[16:57:23] <pulse> You know pizza is so good it's recursive. Pizza makes a great topping for a pizza
[16:57:49] <getynge> I just offered to add something to documentation that was already in the docs and I just didn't realize it
[16:58:06] <getynge> I was just trying to be helpful but I guess I got a little to eager at the idea of finally having a real contribution to make to something lol
[16:58:20] <mrig> pulse is that a calzone?
[16:58:33] <pulse> Isn't calzone a pocket pizza
[16:58:34] <mrig> could be some French invention that though, I'm not to sure.
[16:58:48] <mrig> yes one that is folded up.
[16:59:11] <mrig> I was pondering your recursive pizza and that popped into mind.
[16:59:25] <mrig> dang this is making me feel hungry now.l
[17:00:35] <akronymus> IS it folded before or after being cooked?
[17:01:22] <mrig> before cooking, chauson or slipper is another name for those.
[17:01:36] <akronymus> Then it's a calzone.
[17:01:46] <akronymus> Otherwise it'd just be folded pizza.
[17:01:53] <mrig> sure, that is what I called it firstl
[17:02:31] <getynge> calzones are just folded pizzas for people that don't want to admit that's all they want
[17:02:34] <getynge> change my mind
[17:02:35] <mrig> I think folding after the fact it is just a technique for putting more into your mouth at once without getting sauce all over you face.
[17:03:34] <mrig> looks a lot like a cornish pasty, those were made like that to make them portable.
[17:03:55] <pulse> Excellent little calzone you've got there Costanza
[17:04:18] <pulse> https://www.youtube.com/watch?v=aTRbCX2-xMI
[17:04:19] <bayaz> Title: eggplant 
[17:05:09] <mrig> I cant believe that you had a link to that to hand :D
[17:05:23] <mrig> Soo resourceful!
[17:05:42] <pulse> I'm pretty sure I've memorized every scene in Seinfeld
[17:05:52] *** Joins: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com)
[17:05:57] <pulse> I could recreate the whole series with sock puppets
[17:06:22] <[itchyjunk]> are you trying ot be a vetralaquest?
[17:06:30] <jkk> :)
[17:06:39] <akronymus> getynge calzones are pizzas that have been folded before being cooked
[17:07:14] <[itchyjunk]> what do you call pizza that's folded after they are cooked?
[17:07:23] <akronymus> A pretty noticeable difference in texture/flavour
[17:07:34] <akronymus> [itchyjunk] folded pizza
[17:07:59] <akronymus> Calzones are a subset of folded ones
[17:08:13] <mrig> pulse there could be a market for that!
[17:08:57] <mrig> [itchyjunk] diligent source management.
[17:09:27] <[itchyjunk]> what about those mini pizzas?
[17:09:31] <[itchyjunk]> pizza bites?
[17:09:46] <[itchyjunk]> they taste nothing like pizza
[17:09:55] <[itchyjunk]> yet they are supposidly mini pizzas
[17:10:18] <akronymus> You mean the baguettes with pizza toppings?
[17:10:22] <jkk> https://www.youtube.com/watch?v=TKLPH8qgMFM - youtube bs again - using teflon coated forms and even most of the teflon is gone :)
[17:10:24] <bayaz> Title: Spontini - The most famous Italian Pizza outlet in Milano | 4K Travel 
[17:10:25] *** Joins: rtypo (~alex@user/rtypo)
[17:10:29] <pyzozord> pulse: hah a pizza stack
[17:11:07] <jkk> pizza ough to be made in a wood fired brick oven :)
[17:11:22] <jkk> on a grill mesh not some teflon forms :)
[17:11:29] <[itchyjunk]> no nothing is exposed
[17:11:33] <[itchyjunk]> it'scalled pizza bites
[17:11:49] <[itchyjunk]> it has pizza sauce, cheest and toppings in it
[17:12:02] <akronymus> jkk whatcha think about deep dish pizza? :p
[17:12:21] <[itchyjunk]> its great if you really love the pizza sauce
[17:13:17] <akronymus> So, for people who ask for the sauce to be spread to the edge
[17:13:39] *** Quits: probableUser (~probableU@2a02:8388:1a08:4680:80f4:78d1:d774:5047) (Read error: Connection reset by peer)
[17:13:58] <[itchyjunk]> people who order 3 pizza but only one base
[17:14:19] <pyzozord> w
[17:14:20] <mrig> https://www.youtube.com/watch?v=09lHimcKN2U
[17:14:21] <bayaz> Title: Les meilleures pizzas de Naples ? 
[17:14:27] <pyzozord> oh damn sorry, this was :w for vi
[17:14:47] <akronymus> >not using :q!
[17:15:01] <akronymus> (and no, I didn't forget a letter)
[17:15:08] <pizza> frenchies talking about pizza? oo la la
[17:15:11] <mrig> the simple margaritas
[17:15:18] <pyzozord> I keep forgetting but in vi you can actualy ZZ in normal mode
[17:15:20] <jkk> akronymus, its like meeting a cool girl and asking her to change her clothes, style etc unlike a girl pizza can't run away and becomes a deep pan 
[17:15:27] <mrig> pyzozord did you just save the chat log? :)
[17:15:41] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[17:16:00] *** Joins: ravan (~ravan@user/ravan)
[17:17:23] <pyzozord> forgot the command for global replace in vi
[17:18:03] <pyzozord> i wanted to replace all mirgs in chat with something
[17:18:13] <pyzozord> I think it starts with :g but I'm not sure
[17:19:41] <mrig> on thats argdo %s/mrig/somethingElse/e
[17:20:01] <mrig> dont forget to argue :P
[17:20:06] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[17:20:11] <mrig> and ignore errors.
[17:20:22] <pyzozord> oh yeach could be %s
[17:20:24] <jkk> deep dish is too soft, bottom is overpowered by cheese overload in so many ways lol
[17:20:30] <pyzozord> I keep forgetting things I don't use often
[17:20:38] <mrig> % is current file
[17:20:41] <pyzozord> % stands for "entire file"
[17:20:47] <mrig> the current file
[17:20:53] <mrig> argdo is a list of files :)
[17:20:55] *** Joins: brabrax (~brabrax@user/brabrax)
[17:21:41] <mrig> iterate over the list of args, which are files. Not sure if they can be anything else, I suppose so.
[17:21:48] <pyzozord> I think I'll tryo to do AoC today in python instead of javascript
[17:22:06] <pyzozord> i get so little chances to do anything in python
[17:22:14] <mrig> ah, a change being as good as a holiday and all :)
[17:22:24] *** Joins: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net)
[17:23:14] <mrig> jkk did you see those pizza from naples, very thin but the dough makes really nice bubbles when its just right.
[17:23:26] <mrig> To my tummy that is a pizza :)
[17:24:32] <ejjfunky> Is it still a pizza if you don't use tomato sauce?
[17:24:53] <akronymus> Yes
[17:25:44] <inhahe> aoc? alexandria ocasio cortez? axiom of choice?
[17:25:58] <ejjfunky> I'm thinking to use ketchup if I don't have tomato sauce. But I think it'll be much sweeter.
[17:26:30] <akronymus> >Ketchup
[17:26:33] <akronymus> Worst condiment
[17:26:49] <ejjfunky> even with fries?
[17:27:07] <akronymus> Ketchup can be workable when used as a base.
[17:27:16] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[17:27:20] <akronymus> But ketchup by itself? Disgusting
[17:27:54] <ejjfunky> mayo combined with ketchup for burger.
[17:28:09] <akronymus> Yes that one is decent.
[17:28:18] <akronymus> But ketchup is just an ingredient for that
[17:28:39] *** Joins: ixil (~ixil@mpp-cp1-natpool-1-093.ethz.ch)
[17:28:47] <ejjfunky> add some mustard for a kick.
[17:29:08] <akronymus> Add some onions and tumeric
[17:29:16] <akronymus> And you have an awesome condiment.
[17:29:20] <ejjfunky> yea, that'll work
[17:29:43] * vdamewood puts straight ketchup on his scrambled eggs.
[17:29:53] <akronymus> https://en.wikipedia.org/wiki/Bosna_(sausage)
[17:29:53] <bayaz> Title: Bosna (sausage) - Wikipedia 
[17:30:00] <akronymus> vdamewood that doesn't scare me
[17:30:10] <akronymus> A, former, friend of mine put ketchup onto rice
[17:30:20] <akronymus> Or sugar onto pancakes.
[17:30:31] <akronymus> As in crystalline sugar and nothing else
[17:30:42] <vdamewood> That really sounds like an American thing.
[17:30:50] *** Joins: qbt (~qbt@user/edun)
[17:30:50] <akronymus> Actually, pancake isn't the right word.
[17:30:59] <mrig> ejjfunky quite common to use creamblanche in france
[17:31:16] <akronymus> https://en.wikipedia.org/wiki/Palatschinke those
[17:31:17] <bayaz> Title: Palatschinke - Wikipedia 
[17:31:20] <vdamewood> cream, or crème?
[17:31:55] *** Quits: ixil (~ixil@mpp-cp1-natpool-1-093.ethz.ch) (Remote host closed the connection)
[17:32:05] <vdamewood> akronymus: Oh, that's just weird.
[17:32:24] <akronymus> Yeah
[17:32:29] <mrig> some dairy product, I think ricotta cheese would be the more appropriate variant.
[17:32:47] <beaky> nice i like cheese
[17:32:52] <mrig> creme if you can get it failing that cream.
[17:32:58] <akronymus> cottage cheese? /s mrig
[17:33:00] <ejjfunky> is cream blanche sour cream?
[17:33:02] *** Quits: nitro_ (~nitro_@c-73-165-183-88.hsd1.pa.comcast.net) (Remote host closed the connection)
[17:33:05] <jkk> ricotta is lovely
[17:33:16] <mrig> akronymus I'd be up for tasting that if you are cooking!
[17:33:23] *** Joins: nitro_ (~nitro_@c-73-165-183-88.hsd1.pa.comcast.net)
[17:33:29] <akronymus> I suck at cooking.
[17:33:54] <jkk> who cares if he wants to eat it
[17:33:55] <jkk> :)
[17:34:03] <ejjfunky> "the main difference being that crème fraîche is fattier and thicker, and sour cream is tangier, lower in fat, and has a more liquid texture."  https://www.masterclass.com/articles/creme-fraiche-vs-sour-cream#:~:text=In%20industrial%20settings%2C%20both%20cr%C3%A8me,has%20a%20more%20liquid%20texture.
[17:34:43] <jkk> sour cream on dumplings
[17:35:24] <ejjfunky> sour cream, chives, and bacon!
[17:36:38] *** Quits: swinnenb (~swinnenb@user/swinnenb) (Quit: This is the hidden truth, the world between the lines.)
[17:36:53] *** Quits: viaSanctus (~viaSanctu@user/viasanctus) (Quit: Leaving)
[17:37:29] <mrig> that sounds like the secret recipe for the famous reign blanch pizza!
[17:37:59] <jkk> italians love their food
[17:38:03] <jkk> well older italians :)
[17:38:19] <jkk> in no time most food in italy will be average too
[17:39:35] *** Joins: lcfr (~lcfr@dh207-56-169.xnet.hr)
[17:39:42] <Teckla> pyzozord: I didn't recomend curcumin and pepper, I recommended turmeric and black pepper -- are those the same thing?
[17:39:46] <lcfr> hello
[17:40:58] <pyzozord> Teckla: I think they are
[17:41:32] <lcfr> i am trying to run spyder on my system but i cant get it to work. keep getting the same message: The 'jupyter-client<7,>=5.3.4' distribution was not found and is required by spyder-kernels'
[17:41:55] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[17:42:17] <lcfr> can someone help me?
[17:43:03] *** Quits: peteyboy_ (~peteyboy1@95.169.232.161) (Ping timeout: 256 seconds)
[17:43:21] <ejjfunky> tumeric and black pepper ... i heard that black pepper makes it so the body can absorb the tumeric up to 1000x!
[17:43:23] *** Quits: trafficjam (~trafficja@2001:ac8:28:91::a13e) (Quit: Client closed)
[17:44:28] <ejjfunky> lcfr, can't you just install the jupyter-client?
[17:44:53] <lcfr> ejjfunky, i tried but it didn't help.
[17:45:04] <jkk> ejjfunky, emm
[17:45:41] <ejjfunky> easiest way is to create new environment and install there
[17:45:42] <lcfr> i installed everything regarding jupyter and python (extensions) and i still get the same message
[17:45:45] <Square> Isnt jupyter python? 
[17:45:55] <lcfr> isnt spyder...?
[17:46:18] <Square> i have no clue
[17:46:30] <Square> i thought you might better help on #python
[17:47:08] <lcfr> i#ll try thnx
[17:47:14] <ejjfunky> check out python's virtual environment.
[17:47:26] <lcfr> how do i do that?
[17:47:30] <jkk> ejjfunky, However, a study published in 2012 by a group of researchers from Boston University (Volak 2012) clearly shows that the amount of free curcumin, ie the active form, is not detected in the blood with a daily intake of 3g of curcumin with or without piperine (24mg). Therefore, adding black pepper to turmeric powder does not increase the absorption of the free, or active, curcumin in the body. :P
[17:47:40] <pyzozord> Teckla: I think turmeric is a part of curcumin or something like that
[17:48:18] <ejjfunky> jkk, ohh.. ok. i didn't know that. thanks.
[17:49:02] *** Quits: mattallmill (~mattallmi@ip68-103-132-187.ks.ok.cox.net) (Ping timeout: 252 seconds)
[17:49:46] <ejjfunky> " research shows that piperine can increase the bioavailability of curcumin by 2000%" https://rainuk.com/posts/why-you-should-take-turmeric-with-black-pepper
[17:49:48] <bayaz> Title: Why You Should Take Turmeric With Black Pepper | Rain Nutrience Ltd 
[17:51:23] <ejjfunky> research* refers to this. https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5664031/
[17:51:31] <ejjfunky> Curcumin: A Review of Its’ Effects on Human Health
[17:52:22] <pyzozord> I'm going to eat shit ton of curcumin
[17:52:41] <pyzozord> well not more than recommended though
[17:52:41] <jkk> ejjfunky, well you know it all Xd
[17:52:58] <pyzozord> but it seems well studied that it has major anit-inflamatory and anti-viral properties
[17:53:28] *** Joins: tom (~tom@2a01:cb1c:56f:a200:25ed:a2da:a455:9ad7)
[17:53:31] <mrig> yum, I love curry.
[17:53:47] <mrig> herbs and spices are awesome-
[17:53:53] <ejjfunky> yea, curry is great. i haven't tried golden milk though.
[17:54:17] <mrig> gold top milk, with all the cream left in?
[17:54:40] *** Quits: lcfr (~lcfr@dh207-56-169.xnet.hr) (Quit: Leaving)
[17:54:47] <ejjfunky> dunno. i don't think you use the cream though.
[17:54:52] *** tom is now known as Guest7460
[17:55:02] <ejjfunky> but if you like it, i don't see the harm.
[17:55:05] *** Quits: tomtomgps (~tom@2a01:cb1c:56f:a200:25ed:a2da:a455:9ad7) (Ping timeout: 252 seconds)
[17:55:06] <mrig> That is awesome too, best to try locally though, so much more flavour than that crap that is sold in shops.
[17:55:13] <pyzozord> are there vegetarian curries, there must be right?
[17:55:39] <mrig> The flavour changes with the season, depending on what is being eaten by the cows.
[17:55:46] <mrig> pyzozord most of them are.
[17:55:59] <akronymus> Curry is pretty much always vegetarian
[17:56:11] <akronymus> And quite often even vegan.
[17:56:14] <mrig> eating veg with spices makes it somewhat more interesting :)
[17:56:14] <jkk> akronymus, in which town?
[17:56:19] <akronymus> Most of india.
[17:56:27] <jkk> in thailand many curries are both veg and meat :)
[17:56:31] <mrig> vega is a long way away :|
[17:56:34] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[17:56:39] <ejjfunky> btw, curry is an English invention. it's not indian.
[17:56:44] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 252 seconds)
[17:56:47] <jkk> ejjfunky, nopes
[17:56:59] <jkk> curry existed way before it appear in UK
[17:57:12] <mrig> sure it is from Ayurvedic practices
[17:57:14] <jkk> japanese eat curry
[17:57:20] <jkk> nothing do with india perhaps too :)
[17:57:38] <pyzozord> I'm not like against meat, but I feel it's making me overweight and also generally I heard that human diet is mostly vegies with meat only when you manage to hunt it down which is not always
[17:57:39] <jkk> just people liked warm thick soup
[17:57:42] <mrig> such as eating anti inflammatorys.
[17:57:59] <jkk> pyzozord, in usa meat is full of hormones
[17:58:04] <akronymus> While it may not be called curry, the kinda dishes we call curry have existed for a LONG time.
[17:58:07] <pyzozord> also carbon emission of meat is much higher than other food so always feel good about doing that
[17:58:09] <ejjfunky> "The British lumped all sauce-based dishes under the generic name 'curry'." https://en.wikipedia.org/wiki/Curry
[17:58:10] <bayaz> Title: Curry - Wikipedia 
[17:58:17] <pyzozord> but mostly it's very selfish reasons to limit meat
[17:58:24] <akronymus> pyzozord you seen the latest kurzgesagt yet?
[17:58:24] <mrig> You appreciate it a lot more when it is a rare treat.
[17:58:26] *** Quits: stagas (~stagas@2a02:587:c40e:fc00:13ec:9701:7e1b:60f9) (Remote host closed the connection)
[17:58:33] <pyzozord> akronymus: yes :D that's exactly what I am referring to
[17:58:48] *** Joins: stagas (~stagas@2a02:587:c40e:fc00:13ec:9701:7e1b:60f9)
[17:58:50] <jkk> most of our food now is crap meat no meat :)
[17:59:01] <jkk> unless you happen to be a farmer
[17:59:11] <pyzozord> mrig: yes :) I'm not going to say not to an occasional flavour chunks
[17:59:15] <akronymus> Haha, european food standards go brrrrr.
[17:59:31] <jkk> lived in thailand most food in supermarkets is crap
[17:59:34] <akronymus> Fun fact: You can't sell european eggs in the USA and vice versa.
[17:59:37] <jkk> including vegetables and fruit
[17:59:46] <pyzozord> akronymus: why not?
[17:59:55] <akronymus> Different and incompatible standards
[18:00:09] <akronymus> In the US the eggs have to be washed and stored refrigerated.
[18:00:10] *** Joins: mikrosis (~mikrosis@dynamic-046-114-169-041.46.114.pool.telefonica.de)
[18:00:16] <mrig> oh the endian issue?
[18:00:18] <mrig> :P
[18:00:25] <akronymus> In europe, they don't wash eggs.
[18:00:26] <ejjfunky> Thailand, i love tom yum soup!
[18:00:48] <akronymus> https://www.youtube.com/watch?v=neJGE3Fy3PE
[18:00:49] <bayaz> Title: Why Do Americans Refrigerate Their Eggs and Most Other Countries Don't? 
[18:00:52] <ejjfunky> akronymus, egg war. lol
[18:01:08] <akronymus> I find it stupid to wash away the protective layer of eggs.
[18:01:21] <akronymus> And then spend a lot of energy on keeping it from spoiling.
[18:01:51] <akronymus> Just a rinse is probably more than good enough.
[18:01:51] <vdamewood> akronymus: There's a bacteria that's spread in the US that hasn't in Europe.
[18:02:08] <akronymus> That's not the actual reason though
[18:02:11] *** Joins: zaher_ (~zaher@37.48.184.113)
[18:02:23] <akronymus> in the US they have to wash the eggs with bleached water
[18:02:24] <jkk> vdamewood, wel why does it spread in usa alone?
[18:02:33] <jkk> I eat raw eggs
[18:02:40] <akronymus> This destroys a protective layer of the egg.
[18:02:44] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:02:54] <vdamewood> jkk: Because eggs aren't imported/exported?
[18:02:56] <jkk> akronymus, yep
[18:03:00] <merijn> vdamewood: salmonella? that's in the EU too
[18:03:39] <merijn> The main reason, afaict, is the US consumers can't handle there occasionally being a tiny bit of chicken shit on an egg
[18:03:41] *** Parts: xSavitar (~xSavitar@user/xsavitar) (Leaving...)
[18:03:51] <jkk> merijn, lolol
[18:04:05] <vdamewood> merijn: I could swear it was something else, but a quick google says it is.
[18:04:12] <akronymus> https://eggsafety.org/us-refrigerate-eggs-countries-dont/
[18:04:12] <bayaz> Title: Why do we refrigerate eggs and other countries don't? - Egg Safety Center 
[18:04:15] *** Quits: zaher (~zaher@37.48.158.137) (Ping timeout: 252 seconds)
[18:04:16] *** Quits: tangy (~tangy@user/tangy) (Remote host closed the connection)
[18:04:34] <akronymus> merijn no, the main reason is that it is the law.
[18:04:48] *** zaher_ is now known as zaher
[18:04:51] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[18:05:06] <pyzozord> oh cool, europe is taking more elegant engineering approach taking advantage of the natural egg protection
[18:05:24] <ejjfunky> "In Europe, it's illegal to wash eggs and instead, farms vaccinate chickens against salmonella." https://www.businessinsider.com/why-europeans-dont-refrigerate-their-eggs-2018-4#:~:text=Without%20the%20cuticle%2C%20eggs%20must,cause%20mildew%20growth%20and%20contamination.
[18:05:24] <bayaz> Title: Why Europeans don't refrigerate their eggs 
[18:05:35] <akronymus> ejjfunky some farms*
[18:05:40] <ejjfunky> so, other than eggs, you will also be eating chicken vaccines
[18:05:43] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[18:05:46] <merijn> vdamewood: I mean, salmonella is a thing here too, but: 1) it's not that dangerous, 2) it's only a risk if you use eggs raw (since cooking/frying kills salmonella), and 3) can be trivially solved by just quickly washing the eggs yourself before you use them for raw dishes
[18:06:01] <jkk> ejjfunky, food is crap in nearly all countries :)
[18:06:17] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[18:06:27] <jkk> in eu however in some countries it is still nice ish
[18:06:33] <jkk> france and italy
[18:06:52] *** Quits: Payam (~Payam@138.106.57.131) (Ping timeout: 256 seconds)
[18:07:27] <jkk> Most people recover without specific treatment and should not take antibiotics 
[18:07:56] <jkk> maybe eating small amount of eggs with salmonella can build immunity to it
[18:08:28] *** Quits: dsrt^ (~dsrt@68.101.58.90) (Remote host closed the connection)
[18:09:22] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[18:09:53] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[18:10:13] <pyzozord> it just made me realize that keeping things in fridge just slows down the development of bacteria and stuff
[18:10:29] <merijn> pyzozord: Well, yes
[18:10:40] <pyzozord> so all food I eat has bacteria in some stage of development, hopefull most of it is early enough that it can't cause any trouble
[18:10:44] <merijn> As does covering it in tons of salt, sugar, acid, and variou other things :p
[18:10:58] <merijn> pyzozord: actually, the bacteria aren't even really the issue
[18:11:14] <mrig> you need to eat bacteria to remain healthy.
[18:11:16] <merijn> bacteria themselves pose little risk to your immune system even IF they survive your stomach
[18:11:17] *** Joins: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au)
[18:11:19] <mrig> germs get a bad rap
[18:11:34] <merijn> The problem is that growing bacteria produce waste products that are (potentially) toxic
[18:11:57] <merijn> pyzozord: So you gotta eat products before the concentration of bacterial waste products hits dangerous levels
[18:12:29] <mrig> the nice blue part in cheese is mould.
[18:12:34] <pyzozord> it's amazing how problem solving and engineering approaches can be applied to many aspects of life
[18:13:01] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:13:47] <pyzozord> the european egg engineering seems much more elegant to me, the american one is brute force
[18:14:13] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[18:14:40] <pyzozord> I just checked my eggs, they look very clean
[18:14:40] <vdamewood> merĳn: Yes, I know those things. What I meant is that I thought there was a valid reason, and it appears there isn't.
[18:14:57] <pyzozord> they have like brown spots that look more like the eggs are slightly ginger more than anything else
[18:15:36] <mrig> The best eggs still have a little chicken poop and straw on them :)
[18:15:49] <mrig> It is all better tasting when fresh and local
[18:15:55] <pyzozord> i never realized it, it was always natural to me that eggs aren't 100% perfectly clean. I never even thought about it
[18:15:57] <mrig> many times over.
[18:16:05] <Twix> i would say, these are two different ways to handle the problem. You have to decide for one for your whole country to make it work
[18:16:26] <mrig> We have the tec to manage it now.
[18:16:37] <mrig> man we did not invent this stuff for nothing.
[18:16:40] * vdamewood never buys unpasteurized dog feces.
[18:16:57] <mrig> certainly not to concentrate goodies all in one place.
[18:17:23] <mrig> I read that wolves eat feces for heath reasons. I gather that cats do it too.
[18:17:33] <jkk> vdamewood, do it before you die :P
[18:17:38] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[18:17:41] <mrig> fecial implants for free :)
[18:17:51] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[18:17:53] <vdamewood> jkk: I plan to live forever. So far, so good.
[18:17:59] <mrig> share and share alike :DD
[18:18:18] <jkk> vdamewood, immortal people need not to be scared of salmonella xD
[18:18:23] <mrig> vdamewood sounds pretty tedious :|
[18:18:39] * pyzozord hands vdamewood some rocks
[18:18:46] <mrig> never getting to see your grandchildren grow up.
[18:19:00] <vdamewood> mrig: It's like maintaining a tamagotchi but the tamagotchi is me.
[18:19:17] * mrig scurries off to lookup tamagotchi
[18:19:18] <jkk> human bodies are like  grass grow and decompose :)
[18:19:48] <pyzozord> my tamagotchi always died :(
[18:19:51] *** Joins: Elzington (~Elzington@static-68-235-44-28.cust.tzulo.com)
[18:19:51] <mrig> vdamewood lol Yes!
[18:20:08] <akronymus> Finally getting back to here.
[18:20:17] <akronymus> Got distracted by actual work.
[18:20:19] <mrig> It a glance that looks like one of those keyrings that beeps when you whistle at it.
[18:20:20] <pyzozord> amazing that I can still hold together somewhat
[18:20:27] <akronymus> Anyways: Food poisoning isn't THAT bad.
[18:20:31] <akronymus> Still sucks
[18:20:34] <mrig> must be a more modern incarnation of the same thing.
[18:20:48] <ejjfunky> food poisoning, suck when you got it
[18:20:51] <jkk> i think while eating bacteria can be good, current onslaught of medicine flushed + bizzare fertilisers make bacteria more agressive
[18:20:52] <jkk> )
[18:21:26] <pyzozord> that thing about ingesting a bit of the bacteria/virus etc to take advantage of the immune system reminds me heavily of the book Antifragile by Nassim Taleb
[18:21:36] <pyzozord> great book, very worth reading
[18:21:49] <jkk> Bacterial toxins, typically the culprits of “food poisoning,
[18:23:20] <jkk> Disinfectants: May contain any of several toxic chemicals, including formaldehyde, cresols, ammonia, phenols, and chlorine bleach, all of which should be kept away from the skin and some of which can be hazardous to internal organs and the central nervous system. Also may contain triclosan, which may create resistant bacteria.
[18:24:34] <jkk> https://www.scientificamerican.com/article/strange-but-true-antibacterial-products-may-do-more-harm-than-good/
[18:24:35] <bayaz> Title: Strange but True: Antibacterial Products May Do More Harm Than Good 
[18:24:42] <jkk> tons of idiots are at it Xd
[18:25:33] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Ping timeout: 256 seconds)
[18:26:43] <merijn> better of using high proof alcohol :p
[18:27:40] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[18:28:22] <jkk> merijn, yes -- however we don't live alone so we are all co 'exposed' to effect of each other 'actions Xd
[18:29:42] *** Quits: mikrosis (~mikrosis@dynamic-046-114-169-041.46.114.pool.telefonica.de) (Quit: Connection closed)
[18:30:17] *** Quits: freakazoid12345 (~matt@2603-9000-cf0f-80e3-0ca4-2f26-b042-b2f1.inf6.spectrum.com) (Read error: Connection reset by peer)
[18:31:02] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:ca4:2f26:b042:b2f1)
[18:36:22] <jkk> with qr codes etc less people go to eat here - food is left on for ages and re heated - they should offer free garlic Xd
[18:37:12] *** Quits: qbt (~qbt@user/edun) (Quit: Leaving.)
[18:38:35] *** Quits: justache (~justache@user/justache) (Ping timeout: 256 seconds)
[18:40:01] <jkk> https://www.youtube.com/watch?v=m_MQYyJpIjg
[18:40:02] <bayaz> Title: Fundamental Concepts of Object Oriented Programming 
[18:40:05] <jkk> seems nice
[18:40:52] *** Quits: akronymus (~akronymus@217.29.158.240) (Ping timeout: 256 seconds)
[18:41:13] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[18:45:28] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[18:45:36] <pyzozord> that seems useful for a begginner but not really related to the discussion we had earlier
[18:46:41] <jkk> well the more people will get it right at the start the less bugs later
[18:48:37] *** Quits: rtypo (~alex@user/rtypo) (Read error: Connection reset by peer)
[18:49:02] <jkk> yes many people code, however how many have crystal clear conceptual understading?
[18:49:45] *** Joins: justache (~justache@user/justache)
[18:51:11] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) ()
[18:51:55] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[18:52:27] *** Joins: rtypo (~alex@user/rtypo)
[18:53:08] *** Quits: Dreg- (~Dreg@fr33project.org) (Read error: Connection reset by peer)
[18:53:13] *** Joins: Dreg (~Dreg@fr33project.org)
[18:54:30] *** Quits: justache (~justache@user/justache) (Ping timeout: 256 seconds)
[18:55:05] *** Joins: quartz (~quartz@user/quartz)
[18:55:12] *** Joins: password2 (~password8@user/password2)
[18:55:23] *** Quits: sheb (~sheb@31.223.228.71) (Quit: Leaving)
[18:55:45] <pyzozord> nah, sounds like standard pitch in every textbook that introduces oop
[18:56:25] <jkk> from 100 restaurants offering a very good pizza 1,2 may have  it :P
[18:56:26] <pyzozord> really really basic stuff, simple definition what is object, abstraction, class, encapsulation, inheritance and polymorphism
[18:57:14] <jkk> ok maybe in some cases, over thinking happens lol
[18:57:35] *** Joins: maxzor (~maxzor@2a01cb04054faa007596d3216757778c.ipv6.abo.wanadoo.fr)
[18:57:40] *** Joins: skepta (~eric@36.70.44.228)
[18:57:43] <pyzozord> I mean I don't have anything against that, if you someone just learns what OOP is for the first time, that's great
[18:58:24] <pyzozord> but really I think these terms are mostly clear to most everyone who coded for more than a month
[18:58:44] *** Joins: akronymus (~akronymus@217.29.158.240)
[18:58:45] *** Joins: justache (~justache@user/justache)
[18:58:49] <pyzozord> except you can then get deep into things and discover that polymorphism is not what they told at first, and has multiple forms
[18:58:54] <pyzozord> and stuff like that
[18:59:06] <akronymus> Welp, seems like my laptop didn't keep the connection alive
[18:59:59] <pyzozord> maybe change month to year to be more realistic
[19:00:25] <jkk> pyzozord, well what is a polymorphism?
[19:00:40] <pyzozord> lets you swap things
[19:00:47] <jkk> that is what video said
[19:01:03] <pyzozord> yeah but presents it in the context of OOP
[19:01:15] <pyzozord> polymorphism lets you swap things OOP or not-OOP
[19:01:19] <jkk> it is a video about OOP :)
[19:01:24] <pyzozord> yep
[19:01:28] <snake> You guys are still debating oop
[19:01:36] <merijn> For people with a functional language background polymorphism generally means "parametric polymorphism" (i.e. generics), whereas in many OO contexts people tend to explain polymorphism as subtyping, which is weird, imo
[19:01:37] <snake> Oop isnt even real
[19:01:38] <pyzozord> no we just came back to it for a moment
[19:01:51] <KillerWasp> who's OOP???
[19:02:30] *** Quits: job (~job@wikimedia-commons/pandakekok9) (Remote host closed the connection)
[19:02:32] <snake> People are either adamantly against oop, or … just neutral
[19:02:40] <snake> Get the job done, do it well
[19:02:41] <jkk> merijn, surely people background does not prevent them to use multiple approaches
[19:02:44] *** Joins: sh1r4s3 (~sh1r4s3@109.252.75.9)
[19:02:51] <pyzozord> there are oop fanatics too, it's a whole spectrum
[19:02:54] <jkk> be if function, oop or something else
[19:02:58] <snake> Dont create a fake argument to boost your ego
[19:03:28] <KillerWasp> SHUT UP!!!!!
[19:03:43] <jkk> snake, hmm why would people be against oop it is fairly popular at the moment 
[19:03:44] <snake> Many non oop programmers a shit with programming. Look at gnu, look at linux distros
[19:04:02] <snake> Git literally stands for “goddamn idiotic truckload of shit”
[19:04:04] *** Joins: job (~job@wikimedia-commons/pandakekok9)
[19:04:24] <snake> Jkk: to boost their superiority facade
[19:04:26] <KillerWasp> is what they usually tell you when you get annoyed, or with a densely boring topic that lasts longer than 10 minutes.
[19:04:41] <jkk> snake, makes sense
[19:05:00] <merijn> jkk: Because most of the stuff that's good isn't limited to "OO" and the stuff that is unique to "OO" is bad :p
[19:05:02] <pyzozord> snake: meh, or because they don't like to work harder than they have to
[19:05:19] *** Joins: cation21 (cation@user/cation)
[19:05:22] *** Quits: dermato (~dermatobr@cpe-70-114-219-76.austin.res.rr.com) (Quit: WeeChat 3.1)
[19:05:33] <akronymus> pyzozord what do you mean? Of course an address should have 50 methods.
[19:05:38] <snake> Pyzozord: you can take it easy in oop
[19:05:40] <pyzozord> :D
[19:05:50] *** Quits: cation (cation@user/cation) (Ping timeout: 256 seconds)
[19:06:06] <snake> No need to make an abstract bean factory machine interface pump martialler for each ticket
[19:06:07] <snake> Gtg
[19:06:25] <jkk> snake, some people like to add unnecessary complexity  to 'protect' their field wages lol
[19:06:36] <akronymus> If you need to send some mail, do you go mal.send(address) or address.send(mail) ?
[19:07:28] <pyzozord> I feel like some people like to add complexity not because it's a concious job-safety thing, but because they feel smarter when they do it
[19:07:55] <akronymus> And some feel like it is future proofing their code for future exapnsion.
[19:07:57] <pyzozord> as in "look how big and complex a machinery I have created"
[19:08:13] *** Joins: D1nger (~Booster2o@host-109-88-247-43.dynamic.voo.be)
[19:08:29] <merijn> Why not just "send(mail, address)" >.>
[19:08:31] *** Joins: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca)
[19:08:42] *** cation21 is now known as cation
[19:08:47] <akronymus> That looks like non OOP merijn
[19:08:50] *** Quits: job (~job@wikimedia-commons/pandakekok9) (Remote host closed the connection)
[19:08:57] <jkk> pyzozord, when they argue with wife Xd
[19:08:57] <merijn> Why would that functionality be tied to either mail OR the address >.>
[19:09:23] <jkk> code unnecessary complexity rises lol
[19:09:24] <akronymus> Oh, so it should be a mailDistributor?
[19:09:39] <akronymus> distributor.send(mail, address)
[19:09:44] *** Joins: newbie (~Booster2o@host-78-129-56-66.dynamic.voo.be)
[19:09:53] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Ping timeout: 252 seconds)
[19:10:01] <akronymus> Because according to modern OOP it has to be tied to some object/class.
[19:10:59] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Ping timeout: 252 seconds)
[19:11:51] *** Quits: justache (~justache@user/justache) (Read error: Connection reset by peer)
[19:11:52] <akronymus> On an entirely unrelated note: Do you prefer using decimals or hexadecimals for flags?
[19:11:54] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[19:12:28] *** Joins: lilgopher (~textual@2601:241:8000:38f0:80d2:5d75:881a:25e6)
[19:12:28] *** Joins: justache (~justache@user/justache)
[19:12:40] <akronymus> 0xFF vs 255 to set all bits in 1 byte that is used for storing flags, for example.
[19:12:41] <sonny> hex
[19:13:02] <akronymus> https://en.wikipedia.org/wiki/Chain-of-responsibility_pattern
[19:13:02] <bayaz> Title: Chain-of-responsibility pattern - Wikipedia 
[19:13:07] <akronymus> Look at the c# section
[19:13:11] *** Quits: D1nger (~Booster2o@host-109-88-247-43.dynamic.voo.be) (Ping timeout: 252 seconds)
[19:13:29] <snake> Back
[19:13:46] <snake> Jkk: yeah ive seen that even in js with god functions
[19:13:52] <snake> No objects
[19:14:01] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[19:14:13] <akronymus> Long functions aren't necessarily bad.
[19:14:20] <akronymus> Usually they are.
[19:14:31] <akronymus> But its not intrinsic to long functions that they are bade
[19:14:33] <akronymus> bad*
[19:14:58] <nomagno> akronymus: If the data is made sense of bitwise, I prefer binary literals. Of course, they aren't always avilable. In that case I definitely prefer hexadecimal, per-nibble relation to the data is better than no relation at all
[19:15:12] <snake> Akronymus: i would make a mail sender that takes the message or something
[19:15:13] <nomagno> If I have to use decimal or even octal, oh well, suck it up
[19:15:20] <snake> Depending on the situation
[19:15:43] <akronymus> For me, using hex, at least, makes it much clearer that the actual bits matter.
[19:16:12] <pyzozord> right, time to take a look at advent of code
[19:16:15] *** Joins: qbt (~qbt@user/edun)
[19:16:23] *** Parts: qbt (~qbt@user/edun) ()
[19:16:26] <akronymus> pyzozord it wasn't hard.
[19:16:47] <akronymus> But the second part has shown me some bad design choices
[19:16:54] <CalimeroTeknik> akronymus, the question is indeed not whether it's long, but it's rather whether the way you put it is really the most tractable (and curiously I've never seen anything get long if you do that)
[19:17:04] <snake> Akronymus: the address and the message are more likely to just be data transfer objects that just read and write to database
[19:17:13] <MrMobius> octal makes the bits clear too
[19:17:21] <snake> So i wouldnt add code to send the message there at all
[19:17:33] <akronymus> snake but according to OOP zero behaviour objects are bad
[19:17:37] <MrMobius> sometimes BIT0, BIT1, etc are defined in the C headers
[19:17:43] <akronymus> as taught by schools*
[19:17:54] <GeDaMo> For flags, I also use things like 1 << 6 rather than 0x40 or even 0b01000000
[19:17:57] <CalimeroTeknik> so for some reason, apparently decoupling, tractable ways to formulate programs result in small units with short and clear names
[19:18:09] <akronymus> MrMobius octal has the problem that it doesn't map neatly to byte sizes.
[19:18:10] <snake> Akronymus: its not zero behavior. Its a record in the db so you can insert update look up etc
[19:18:12] <CalimeroTeknik> (therefore short functions)
[19:18:18] * pyzozord puts fingers in the ears
[19:18:20] <pyzozord> LALALA
[19:18:34] <akronymus> Wait, the address should have a .saveToDB method?
[19:18:35] <snake> Also following all the rules perfectly is not ideal. 
[19:18:51] <jkk> rules are a staring point :)
[19:18:58] <akronymus> CalimeroTeknik too many small functions can lead to harder to parse code
[19:19:05] <akronymus> Because more contexts to keep track of.
[19:19:12] <CalimeroTeknik> akronymus, how is this *relevant*?
[19:19:22] <snake> Akronymus: yeah cause eg. at my last job, we had email address on a gym member record
[19:19:27] <CalimeroTeknik> right, but the point is to not have to keep track of any context in another
[19:19:32] <merijn> See, I simply reject "modern" OOP and then all these problems disappear :p
[19:19:41] <CalimeroTeknik> contexts MUST be self-contained
[19:19:45] <pyzozord> lets agree to talk about advent of code problems only day after, ok?
[19:19:51] <MrMobius> akronymus, how do you mean? 377 octal is 0xFF. just as easy to pick out the bits yourself
[19:20:05] <akronymus> CalimeroTeknik sometimes you have a lot of relevant information and with many small functions you'd have to pass most of that around all the time.
[19:20:09] <snake> I miss the old 2lb-programming
[19:20:20] <akronymus> 777 for example MrMobius
[19:20:25] <akronymus> That'd be 9 bits
[19:20:40] <CalimeroTeknik> akronymus, now that's a better metric! "are you passing around a bunch of stuff"
[19:20:57] <CalimeroTeknik> the number or smallness of functions is completely irrelevant by contrast with that
[19:21:10] *** Quits: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca) (Quit: Client closed)
[19:21:17] <MrMobius> akronymus, hehe, no functional difference but i guess it doesnt look as pretty :P
[19:21:29] <akronymus> For example, in a quicksort, I have to track at least the start, end, advancing pointer, comparison value and advancing from the other side pointer.
[19:21:49] <akronymus> No real good way to split it up into smaller functions.
[19:21:50] <CalimeroTeknik> in fact, if you can have small functions *with exceedingly clear, unambiguous, short names* and short implementations, you're extremely well off
[19:21:59] *** Quits: tesuji (~quassel@2a02:908:180:9500:f5e8:aae6:d52b:d22b) (Ping timeout: 252 seconds)
[19:22:09] <CalimeroTeknik> even if they're numerous, checking whether the entire thing is correct equates checking each in isolation
[19:22:11] <CalimeroTeknik> awesome
[19:22:39] <CalimeroTeknik> the only thing that limits this is that it makes no sense to achieve that at any cost
[19:22:40] <akronymus> Well, that is if they are referentially transparent.
[19:22:59] <CalimeroTeknik> functions cannot be anything but referentially transparent
[19:23:11] <CalimeroTeknik> otherwise they fall in the superset of routines
[19:23:18] <merijn> CalimeroTeknik: Good luck convincing the average programmer off that :p
[19:23:37] <snake> Is rust functional or oop?
[19:23:39] <akronymus> functions as most people understand the term*
[19:23:42] <merijn> snake: Neither
[19:23:46] <CalimeroTeknik> merijn, I just write "pure functions" in case someone comes from ECMAScript3.1 and we're good :p
[19:23:47] <snake> Is functional opposed to oop
[19:23:48] <akronymus> snake both, kinda
[19:23:56] <akronymus> orthogonal
[19:23:57] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[19:24:02] <akronymus> You can combine them
[19:24:08] <CalimeroTeknik> akronymus, "functions" as people with previous exposure to JS understand the term :p ?
[19:24:20] <akronymus> functions as taught in school
[19:24:28] <akronymus> And not in maths class
[19:24:43] <jkk> snake no :)
[19:24:44] <CalimeroTeknik> drat, you specified :p
[19:24:51] <jkk> they are complimentary
[19:24:51] <mickey8> what hash would you use for cache map? doesnt have to be secure or whatever, just unique and fast
[19:24:51] <pyzozord> eh I think I'll give up and just do it in js
[19:24:59] <pyzozord> although python would be much more fun
[19:25:15] <merijn> mickey8: That depends on the values you expect
[19:25:26] <pyzozord> well no, I refuse. I will do it in python.
[19:25:28] <akronymus> .toString().length() mickey8
[19:25:35] <akronymus> Obviously /s
[19:25:41] <jkk> CalimeroTeknik, a function is a function
[19:25:54] <jkk> there is no 10 different understand of it :)
[19:26:06] <jkk> understanding
[19:26:13] <CalimeroTeknik> yes, there are 3 at least
[19:26:16] <CalimeroTeknik> but not 10
[19:26:19] <jkk> such as?
[19:26:33] <mickey8> what do you mean?
[19:26:33] <mickey8> i expect to throw in arbitrary data that represents a unique request to an api server, and i expect it to output a unique string that is shorter :o
[19:26:37] <jkk> function simply operates as per its design
[19:26:39] <snake> Idk i like using classes and i like data hiding
[19:26:44] <akronymus> >but not 10
[19:26:48] <pyzozord> uh can someone remind me, do I write def __main__(): in python?
[19:26:49] <akronymus> Actually there are.
[19:26:59] <akronymus> Just not in decimal
[19:27:03] <jkk> function - a set of logical rules
[19:27:04] *** Quits: wildo (~lain6141@119.224.72.222) (Quit: leaving)
[19:27:06] <akronymus> Dunno which base though
[19:27:14] <snake> What if you want to change the way something is stored? Linux distros have issues with changing apis all the time which beeaks things upstream
[19:27:14] <mickey8> akronymus no idea whyd you assume anyone would be writing something like that in js, but that's irrelevant
[19:27:26] <snake> Linux could benefit from data hiding greatly
[19:27:30] <akronymus> mickey8 its a fast hash
[19:27:35] <GeDaMo> pyzozord: https://docs.python.org/3.8/library/__main__.html
[19:27:35] <bayaz> Title: __main__ — Top-level script environment — Python 3.8.12 documentation 
[19:27:39] <akronymus> and its the one that php used to use
[19:27:41] <jkk> snake,  OOP abstraction is nice :)
[19:27:47] <snake> I agree
[19:28:02] <pyzozord> oh right it's a value for __name__, I can just start writing my logic at the top level
[19:28:12] <akronymus> https://news.ycombinator.com/item?id=6919216
[19:28:17] <akronymus> And no, I am not kidding
[19:28:23] <snake> I havent used linux for desktop in like 3 years
[19:28:31] <jkk> snake, what do you use?
[19:28:34] <snake> Bc im fed up with the bugs
[19:28:40] <snake> Jkk: winblows :(
[19:28:45] <jkk> well bugs are full of protein lol
[19:28:51] <snake> Lol
[19:29:04] <akronymus> Im gonna say something controversial: Booleans can pretty much always be replaced by better typing.
[19:29:24] <merijn> That's hardly controversial
[19:29:26] <akronymus> (assuming you don't care about performance)
[19:29:28] <jkk> snake, windows have bugs too
[19:29:34] <akronymus> merijn it isn't?
[19:29:35] <jkk>  Linux distros have issues with changing apis all the time how come?
[19:29:41] <snake> Jkk: yeah but less
[19:30:03] <merijn> akronymus: If you google "boolean blindness" you will find a bazillion functional programming articles/blog posts about why boolean are almost always bad :p
[19:30:09] *** Quits: _inky (~inky_@46.36.114.168) (Ping timeout: 256 seconds)
[19:30:09] <jkk> snake, more eyes on top linux disto to discover bugs fast?
[19:30:11] <snake> Jkk: people want to improve how something is done or how it is stored in libraries that are dynamically linked
[19:30:22] <akronymus> merijn TIL that term
[19:30:25] <merijn> akronymus: IMO the main reason people use them so much in mainstream languages is because defining a custom datatype is too verbose/too much work in most languages
[19:30:25] <bjs> merijn: booleans aren't bad, or good, they're just...
[19:30:29] <bjs> uh I can't represent how they are 
[19:30:43] <vdamewood> bjs: true or false.
[19:30:45] <snake> Then packagr managers refuse to allow static linking so that things just work
[19:30:52] <vdamewood> ;P
[19:30:52] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[19:30:58] *** Joins: ixil (~ixil@mpp-cp1-natpool-1-093.ethz.ch)
[19:31:10] <CalimeroTeknik> jkk, "a routine that optionally takes input and produces exclusively one output", "a routine that optionally takes input and produces exclusively several outputS", "a routine that optionally takes input, can perform effects, and has potentially an output", "(same as the previous) with several outputs"
[19:31:12] <CalimeroTeknik> that's 4
[19:31:32] <CalimeroTeknik> but I count 3 because I'm nice
[19:31:35] <merijn> The boolean blindness comes from the fact that boolean generally represent a specific proposition and by only having True/False you forget what that proposition was and why it has the value it does
[19:32:05] <bjs> merijn: this is a systemic problem in "pipeline programming" techniques
[19:32:09] <bjs> where as you go down the pipeline you lose information
[19:32:13] <akronymus> isValidEmail vs "email" and "validEmail"?
[19:32:15] <jkk> CalimeroTeknik, replace , with and and it is 1 :)
[19:32:34] *** justache is now known as justSleigh
[19:32:37] <akronymus> Where the former is a bool and the latter two are types
[19:32:48] <CalimeroTeknik> jkk, so in your definition, function = routine
[19:32:50] <vdamewood> merĳn: That reminds me of how CMake considers the strings "No", "Off", and "False" as false, while "Yes", "On", and "True" are all true.
[19:33:01] <merijn> The ML-style functional approach argues "you shouldn't have 'bool validEmail' that is true or false, you should have 'data EmailValidity = Valid | Invalid'"
[19:33:13] <jkk> we all know what function is :)
[19:33:30] <vdamewood> merĳn: So, you get situations like: ENABLE_BARFING=Off
[19:33:36] <merijn> Arguably maybe the constructors should be ValidEmail/InvalidEmail, I guess
[19:33:55] <CalimeroTeknik> we all have a more or less defined notion of it, jkk, but I don't see yours being very clear
[19:33:56] <akronymus> vdamewood hahahahahahahaaha
[19:33:58] <nomagno> merijn: I'm sorry but that doesn't seem to make any sense
[19:34:11] <akronymus> merijn i guess email/verifiedEmail makes more sense
[19:34:26] <nomagno> If you need to check if an email is invalid or valid, you want a boolean
[19:34:30] <nomagno> it's literally what they're fore
[19:34:30] <merijn> nomagno: It does when you say "MyConstructor(true, true, false)" and wonder WTF is going on
[19:34:33] <jkk> mine mine - what you posted replace comma with and and it works :)
[19:34:34] <bjs> merijn: I don't think the example is very good because it's still exactly 1 bit of information
[19:34:35] <akronymus> What about having other languages be booleans too?
[19:34:38] <akronymus> https://docs.progress.com/bundle/openedge-abl-reference-117/page/LOGICAL-function.html vdamewood
[19:34:39] <bayaz> Title: 
[19:34:48] <merijn> nomagno: You can trivially check vs Valid/Invalid too
[19:34:53] <nomagno> mrijn: Typedefs
[19:34:53] *** Joins: nvmd (~nvmd@user/nvmd)
[19:34:56] <smallvil_> wep i got a simple `<< printf(...)` working :)    https://gist.github.com/e676b87f43ac74b053ad9ea443581aef
[19:34:57] <bayaz> Title: printf 
[19:34:57] <merijn> nomagno: Unless you have a shitty language (like most of them)
[19:35:04] <akronymus> Yeah valid was the wrong example
[19:35:10] <akronymus> Verified is a MUCH better one
[19:35:19] <nomagno> I don't even know what you mean by shitty language
[19:35:20] <bjs> merijn: a much better example would be to make it `Valid | Invalid Reason` or something
[19:35:38] <akronymus> For example, there are many cases where you want to only do something with verified emails
[19:36:01] <akronymus> While still allowing certain actions with all emails.
[19:36:04] <merijn> bjs: Sure, that'd be even better
[19:36:05] <nomagno> The word 'shitty' is always wrong without context. Except when referring to poop.
[19:36:07] <CalimeroTeknik> jkk, formally that means you say functions don't exist, because the definitions I proposed were incompatible
[19:36:15] <merijn> nomagno: Any language without ADTs and pattern matching, tbh
[19:36:17] <jkk> in which way? :)
[19:36:33] *** Joins: tomathy (~jenova@user/quetzl)
[19:36:35] <CalimeroTeknik> jkk, but I'll assume you mean functions can be any of what I defined, you take the widest definition, don't you?
[19:36:41] <CalimeroTeknik> which is the definition of… a routine.
[19:36:43] <tomathy> how do you get comfortable before you read a book?
[19:36:46] <merijn> I just don't understand why no mainstream imperative language has added those, it'd trivial to implement and gain so much power
[19:36:51] <tomathy> i find it very hard to read books
[19:37:00] <akronymus> > A character expression that evaluates to a valid logical format, such as "si/no", or "da/nyet". This argument is ignored unless expression is of CHARACTER type. Also, this argument is only needed if expression evaluates to something other than the usual TRUE or FALSE, or YES or NO values.
[19:37:09] <jkk> pls learn to read
[19:37:14] <nomagno> merijn: Well you don't necessarily need to understand. Implement them yourself!
[19:37:35] <tomathy> i can read
[19:37:45] <merijn> nomagno: I have. In both languages I implemented for fun
[19:37:50] <tomathy> i just find it hard to enjoy it
[19:37:52] <GeDaMo> tomathy: I usually read in bed just before I go to sleep
[19:38:09] *** Quits: mobidrop (~mobidrop@user/mobidrop) (Remote host closed the connection)
[19:38:10] <jkk> extra options are not contradictory
[19:38:12] <jkk> they are exta
[19:38:24] <jkk> sum of all extra is what function can do :)
[19:38:25] <jkk> haha
[19:38:31] <nomagno> Best programming book I've read before going to sleep is Eugene Onegin!
[19:38:31] <CalimeroTeknik> it is contradictory to say "has effects" AND "has no effects"
[19:38:32] <vdamewood> akronymus: What about "はい/いいえ"?
[19:38:43] <nomagno> Ooops, this is not #peopleprogramming, my bad
[19:38:48] <pyzozord> I want to download input from advent of code programatically, but I'm getting 400, I think that's because of authorisation stuff, any idea how to do it easily?
[19:38:49] <nomagno> ba dum tsss
[19:38:54] <jkk> in one implementation has effects and in another no effects Xd
[19:38:55] <akronymus> vdamewood probably works.
[19:39:05] <akronymus> Oh wait, no
[19:39:09] <akronymus> It only deals in ascii
[19:39:11] <CalimeroTeknik> vdamewood, there's actually interesting background behind answering a negative question with はい/いいえ (like yea/yes and nay/no historically)
[19:39:12] <akronymus> Not unicode
[19:39:25] <nomagno> pyzozord: Advent of Code REQUIRES verification, which is in my opinion both dumb and unreasonable.
[19:39:28] *** Joins: exvicesindaco_ (~exvicio@host-82-52-114-119.retail.telecomitalia.it)
[19:39:38] <akronymus> nomagno it kinda makes sense
[19:39:52] <akronymus> It generates test cases for you
[19:39:53] <nomagno> Let people anonymously solve the puzzles offline
[19:39:56] <tomathy> vdamewood: how do you motivate yourself to read before bed?
[19:39:57] <nomagno> That's the only use I want out of you TBH
[19:39:58] *** Joins: mickey84 (~user@user/mickey)
[19:40:08] <nomagno> s/you/it/
[19:40:08] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[19:40:08] *** mickey84 is now known as mickey8
[19:40:10] <akronymus> Its so that you don't just copy the result from someone else
[19:40:11] <CalimeroTeknik> jkk, yes so you define function = routine. right. why do we have two words then, for you?
[19:40:18] <tomathy> vdamewood: do you read in the bed, or outside of the bed?
[19:40:31] <vdamewood> tomathy: Outside.
[19:40:37] <tomathy> ok
[19:40:37] <jkk> CalimeroTeknik, I am going with a text you provided, it is good :P
[19:40:46] <nomagno> akronymus: it can force you to verify if you want to submit results
[19:40:50] <pyzozord> I guess I can send my cookie from the browser, wonder if I can pass the cookie to urllib.request.urlopen somehow
[19:40:55] <vdamewood> I only read on my bed if I just happen to be using my bed as a place to sit.
[19:40:56] <CalimeroTeknik> jkk, what? you're not answering the question.
[19:40:59] <tomathy> is your logic that because it's a quiet time it's best to read then?
[19:41:00] <nomagno> But I just wanted a set of nice christmas programming adventures, dammit!
[19:41:04] <akronymus> But how would you get test cases?
[19:41:20] <jkk> CalimeroTeknik, if you dont understand what is function well
[19:41:25] <jkk> just ask here
[19:41:29] <vdamewood> I usually just stay up until I'm sleepy.
[19:41:30] <nomagno> you get a copy of the test case generator source code
[19:41:40] <nomagno> Attached to the puzzle
[19:41:40] <vdamewood> Then I go to bed and fall asleep near instantly.
[19:41:53] <nomagno> Kids these dayz don't know how to write portable C, smh
[19:41:58] <jkk> I already said replace commas with and and it makes sense Xd
[19:42:02] <CalimeroTeknik> I'm saying that the definition you picked is also that of "a routine", jkk, and I'd like your input on this coincidence
[19:42:06] <akronymus> nomagno that sounds easy to exploit
[19:42:31] <CalimeroTeknik> jkk, also it's not that I "don't know", it's that everyone decides on a definition since there's no central authoritative definition, and mine is the same as function in mathematics
[19:42:48] <nomagno> akronymus: I explicitly said it's a possible, if farfetched, solution without verification. If you don't verify, you obviously don't get to submit scores
[19:42:53] <nomagno> I'm just rambling anyways
[19:42:54] <CalimeroTeknik> if you keep just not answering and playing dumb, it just means you don't even care for what words mean
[19:43:11] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Ping timeout: 256 seconds)
[19:43:17] *** Parts: skepta (~eric@36.70.44.228) ()
[19:43:19] <akronymus> CalimeroTeknik I got taught that a function is anything that does something
[19:43:23] *** Joins: _inky (~inky_@141.136.77.0)
[19:43:24] <nomagno> This is more of a web design rant with a popular punching bag than a request for Advent of Code to change
[19:43:33] *** Joins: exvicesindaco__ (~exvicio@host-82-52-114-119.retail.telecomitalia.it)
[19:43:33] *** exvicesindaco__ is now known as exvicesindaco
[19:43:35] <vdamewood> CalimeroTeknik: So history?
[19:43:36] <akronymus> With procedures, methods and such being more constrained subgroups
[19:43:50] <akronymus> categories*
[19:43:52] <CalimeroTeknik> what about routines, akronymus?
[19:43:58] <akronymus> Those too
[19:44:05] <akronymus> Just a subgroup
[19:44:06] *** Quits: exvicesindaco (~exvicio@host-82-52-114-119.retail.telecomitalia.it) (Read error: Connection reset by peer)
[19:44:07] <CalimeroTeknik> can you draw a Venn diagram?
[19:44:12] <akronymus> Not really
[19:44:17] <akronymus> Because the definition sucks
[19:44:17] <CalimeroTeknik> routines are a *subgroup* of functions? :o
[19:44:27] <jkk> CalimeroTeknik, re read the answer
[19:44:43] <akronymus> yet it is what I got taught
[19:44:48] <CalimeroTeknik> jkk, that's just, like, your opinion, you understand?
[19:44:53] <nomagno> Coroutines are the general-est case of functions
[19:45:06] <jkk> CalimeroTeknik, what else can be ? you are asking me lol
[19:45:06] <CalimeroTeknik> finally someone who knows what it's all about, thanks nomagno
[19:45:06] <nomagno> a coroutine is any piece of code that can get inputs and yield something
[19:45:40] *** Joins: NEYi (~NEYi@109.251.216.38)
[19:46:03] <CalimeroTeknik> it's in French but here is *my* Venn diagram based exclusively on information from wikimedia, akronymus https://oremilac.tk/vrac/routines.png
[19:46:04] <bayaz> Type: image/png Size: 375.9 kB 
[19:46:18] <CalimeroTeknik> the words will be transparent to you
[19:46:39] <nomagno> Coroutines are also kinda a generalization over linear instructions with conditional jumps and lots of boilerplate
[19:46:54] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[19:47:05] <nomagno> which is an abstraction over the clusterfrick that modern CPUs are
[19:47:10] <CalimeroTeknik> the French wikionary/wikipedia is extremely clear about each of these definitions, at least
[19:47:27] <jkk> CalimeroTeknik, there are many ways to define what is an apple or a pear :)
[19:47:32] <jkk> yet we all know
[19:47:43] *** Quits: exvicesindaco_ (~exvicio@host-82-52-114-119.retail.telecomitalia.it) (Ping timeout: 256 seconds)
[19:48:04] <CalimeroTeknik> jkk, do you know what a routine is?
[19:48:11] <jkk> it can mean many things
[19:48:20] <CalimeroTeknik> tell me all of them then
[19:48:24] <jkk> why :P
[19:48:27] <nomagno> CalimeroTeknik: My Spanish skillz and my 3-year baby-level French course tell me your diagram seems correct
[19:48:27] <jkk> go and learn
[19:48:38] <akronymus> CalimeroTeknik I was conveying what I got taught
[19:48:46] *** Joins: Nex6 (~Nex6@cpe-45-51-244-112.socal.res.rr.com)
[19:48:58] <akronymus> I didn't put any actual thought into it until now
[19:49:14] <jkk> function can be described by what it can do :)
[19:49:16] <CalimeroTeknik> I already did, I'm just checking whether a troll like you agrees with the definition I got, jkk. this is my last message to you unless you actually contribute to the discussion after it
[19:49:17] <jkk> also a way
[19:49:28] <jkk> CalimeroTeknik, name calling is silly 
[19:49:52] <jkk> I I I 
[19:49:55] <CalimeroTeknik> akronymus, teachers right?
[19:50:01] *** Joins: Tabmow (~tabmow@user/tabmow)
[19:50:15] <akronymus> Hey, a teacher said FP = procedural programming
[19:50:21] <jkk> it is better to simply talk about function not I I I  you you :)
[19:50:26] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[19:50:30] <[itchyjunk]> On a written exam, i can imagine simple "write method x" or "define class Y with some fields"
[19:50:31] <akronymus> If you dont cut it in the industry, you become a teacher.
[19:50:32] <akronymus> IME
[19:50:35] <[itchyjunk]> what else could there be?
[19:50:40] <[itchyjunk]> technical jargon is my guess
[19:50:46] <jkk> akronymus, well CalimeroTeknik likes to teach here
[19:50:50] <CalimeroTeknik> akronymus, that's… interesting, "procedural" starts with an F now? :p
[19:50:50] <[itchyjunk]> but it's supposeed to be hour or more long exam
[19:50:54] <nomagno> akronymous: Functional Programming is pretty much conceptually opposite to Procedural Programming 
[19:51:19] <akronymus> Both use functions
[19:51:23] <akronymus> therefore they are the same
[19:51:27] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[19:51:29] <akronymus> That was literally the reasoning
[19:51:29] <jkk> nomagno, simply different ways of doing things
[19:51:31] <CalimeroTeknik> procedural uses procedures, precisly
[19:51:38] <CalimeroTeknik> ah right
[19:51:42] <jkk> different does not equal oppose
[19:51:46] *** Joins: akevinhuang (~thekevinh@user/thekevinhuang)
[19:51:55] <[itchyjunk]> what are the major types of programming?
[19:51:58] <CalimeroTeknik> well, the instant function() {} in JS defines what a "function" can be, we're screwed indeed
[19:52:02] <[itchyjunk]> FP,OOP,procedural, what else?
[19:52:12] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[19:52:21] <CalimeroTeknik> [itchyjunk], I like to think it's imperative, declarative and logic
[19:52:24] <CalimeroTeknik> the end
[19:52:33] <akronymus> functional, procedural, set based stuff (SQL), imperative, OOP
[19:52:45] <akronymus> Those are the ones I can think of the top of my head
[19:52:46] <vdamewood> CalimeroTeknik: Your diagram isn't a Venn diagram.
[19:52:53] <CalimeroTeknik> oh, it isn't?
[19:53:01] *** Quits: BravoSlo (BravoSlo@gateway/vpn/airvpn/bravoslo) (Quit: Leaving)
[19:53:06] <[itchyjunk]> hmm idk what imperative vs procedural is.. i think i googled it before but can't remember :(
[19:53:08] <CalimeroTeknik> what property is not right?
[19:53:15] <[itchyjunk]> SQL is set based? in what sense?
[19:53:18] <vdamewood> CalimeroTeknik: A ven diagram shows all possible combinations of the sets shown.
[19:53:21] <nomagno> Procedural is an imperative paradigm based on mathematical procedures, or linear chunks of code possibly with side effects. Functional is a declarative paradigm based on mathematical functions, or abstracted away code that returns values in a side-effect-free manner. It's like the difference between the Turing Machine and the black box, more or less.
[19:53:22] <[itchyjunk]> oh like take unions or intersections?
[19:53:22] <vdamewood> Venn
[19:53:28] <[itchyjunk]> interesting, never thought about it that way before
[19:53:33] <[itchyjunk]> but it does make sense
[19:53:37] <[itchyjunk]> hmmmmmmmmmmmmmmmmmm
[19:53:38] <vdamewood> CalimeroTeknik: What you have is an Euler Diagram.
[19:53:39] <CalimeroTeknik> indeed vdamewood, thanks for the correction
[19:53:53] *** Quits: DevAntoine (~DevAntoin@pop.92-184-112-51.mobile.abo.orange.fr) (Ping timeout: 252 seconds)
[19:54:04] <akronymus> Imperative: You jump all around the code.
[19:54:21] <nomagno> Functions in the programming term doesn't seem to have anything to do with functions in the mathematical sense
[19:54:26] <akronymus> Procedural: You have self contained procedures that do soemthing in a structured way
[19:54:40] <nomagno> so, paradigms use computer science jargon, and programming language keywords use programming jargon
[19:54:43] <nomagno> so there's a difference
[19:55:00] <nomagno> Which is why functional doesn't mean 'uses functions'
[19:55:09] <akronymus> Basically, in imperative you'd jump to the relevant code piece
[19:55:25] <[itchyjunk]> hmm i can't tell if haskell is procedural? sine you follow one function to the next
[19:55:26] <akronymus> While in procedural you'd call the procedure that has its own context
[19:55:39] <akronymus> Haskell is the best procedural language
[19:55:49] <[itchyjunk]> so assembly is imperative because i can jump to label
[19:55:53] <[itchyjunk]> oh
[19:55:58] <nomagno> akronymus: Haskell is not procedural at all
[19:56:02] <CalimeroTeknik> [itchyjunk], what is usually called "structured" programming means using if/for/while structures, it's an extension/variant of imperative programming; same goes for procedural: it's just cutting the imperative program in chunks: procedures
[19:56:05] <akronymus> https://old.reddit.com/r/haskell/comments/o3cokx/is_haskell_the_best_procedural_language/
[19:56:06] <bayaz> Title: Too Many Requests 
[19:56:22] <akronymus> nomagno you can make it VERY closely resemble procedural
[19:56:23] <nomagno> Haskell is a functional programming language
[19:56:34] <nomagno> functions are mathematical input->output magical thingies
[19:56:41] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[19:56:45] <nomagno> C is a procedural programming language
[19:57:06] <[itchyjunk]> wait, how is C procedural?
[19:57:09] <nomagno> procedures are a subset of subroutines, which are a subset of coroutines
[19:57:11] *** Joins: reumeth (~reumeth@user/reumeth)
[19:57:22] <nomagno> [itchyjunk]: It uses procedures, which is what C calls 'functions'
[19:57:31] <nomagno> It's basically an I->O subset of subroutines
[19:57:31] *** Joins: rsx (~dummy@ppp-188-174-159-13.dynamic.mnet-online.de)
[19:57:41] <user51> t
[19:57:42] <[itchyjunk]> java is imparative ? i can label loops and jump to labels
[19:57:43] <jkk> nomagno, a function is a formula
[19:57:43] <CalimeroTeknik> [itchyjunk], C has routines, which you can make to return nothing and take no parameters, thus being procedures
[19:57:45] <nomagno> https://en.wikipedia.org/wiki/Procedural_programming
[19:57:45] <bayaz> Title: Procedural programming - Wikipedia 
[19:57:59] <[itchyjunk]> hmmmm
[19:58:08] <[itchyjunk]> the distinctions aren't obvious to me for some reason
[19:58:13] <nomagno> jkk: Functions in programming jargon are different from functions in mathematics. How many times have I said this again? A lot
[19:58:32] <CalimeroTeknik> [itchyjunk], you can do imperative (structured, because no "goto") programming in Java all right
[19:58:41] <[itchyjunk]> a function isn't a formula in math either , depending on how you mean it
[19:58:41] <nomagno> Functions in the context of C are subroutines. Functions in the context of Haskell are pure I->O boxes
[19:59:04] <akronymus> In haskell you can write a function that interprets data that looks like procedural/imperative code.
[19:59:18] <CalimeroTeknik> formulas you can code directly in most languages are just "expressions"
[19:59:29] <nomagno> That's because programming languages aren't magical, and they can allow for more than one paradigm at once if you force them
[19:59:31] <smallvil_> and now `XLog("%s %s\n", "hello", "world!");` is the same as `printf("%s %s\n", "hello", "world!");` :)      (except with less implemented % args)
[19:59:32] <akronymus> https://stackoverflow.com/questions/6622524/why-is-haskell-sometimes-referred-to-as-best-imperative-language
[19:59:33] <bayaz> Title: Why is Haskell (sometimes) referred to as "Best Imperative Language"? 
[19:59:40] <CalimeroTeknik> yeah, hopefully Haskell allows other paradigms than purely functional
[19:59:42] <smallvil_> so you can do `XLog("%s %s\n", "hello", "world!");` or `XLog() << "[start printf string] " << XLog::Printf("%s %s", "hello", "world!") << " [end printf string]\n";
[19:59:43] <akronymus> It seems I misremembered imperative for procedural
[19:59:44] <[itchyjunk]> yeah "formulas" in mat is called "expressions" too
[19:59:45] *** Joins: kennyd (~bc8165b6@cerf.good1.com)
[19:59:47] <smallvil_> (not sure why someone may want to mix printf with stream << but you can :D )
[20:00:01] <nomagno> C is geared towards Procedural programming, and Haskell towards Functional programming
[20:00:03] <edgar-rft> I'd say everything that functions is a function
[20:00:06] <nomagno> doesn't mean you can't program one in the other
[20:00:40] <jkk> this is just stupid lol
[20:00:45] <akronymus> nomagno look at the SO link I posted
[20:00:56] <CalimeroTeknik> akronymus, I insist that procedural (according to wikimedia definitions) is just cutting an imperative program into chunks to avoid repeating yourself: the chunks are made into blocks called procedures
[20:01:01] <CalimeroTeknik> with a name
[20:01:09] <merijn> Haskell is super geared to imperative programming, tbh. It's just optional
[20:01:09] <nomagno> I took a look. It says exactly the same thing I do, just with a different framing
[20:01:18] <akronymus> CalimeroTeknik its not about repetition.
[20:01:24] <akronymus> Its about giving each part its own context
[20:01:25] <CalimeroTeknik> sure, it's a side benefit
[20:01:34] <[itchyjunk]> CalimeroTeknik, so writing a "helper method" in java is procedural programming?
[20:01:35] <akronymus> so that you don't have to keep in mind EVERYTHING
[20:01:41] <nomagno> Haskell is just as imperative as C is declarative: By default, barely. If you force it, why do you ask?
[20:01:47] <merijn> nomagno: It does not, because your phrasing implies Haskell is bad/inconvenient for imperative programming.
[20:02:03] <merijn> Hard disagree on that last statement, tbh
[20:02:12] <nomagno> marijn: That's literally what the top answer says, that it's akward
[20:02:24] <akronymus> You can make code that basically looks like C.
[20:02:30] <CalimeroTeknik> [itchyjunk], procedural means you can cut off a bit from an imperative program and give it a name; so really if your method is actually a pure function, it doesn't enter that idea
[20:02:32] <akronymus> But has type safety and such from haskell
[20:02:34] <smallvil_> also not sure if this helps but << XLog::Printf(...) is evaluating itself in the << operator instead of the Printf constructor in order to ensure type-safety can still be done (with %? format) :)
[20:02:47] <merijn> Well, I disagree with that top answer too :)
[20:02:57] <[itchyjunk]> hmmmmmmmmm
[20:03:01] * [itchyjunk] still not sure
[20:03:13] <nomagno> you can force any language to do anything
[20:03:15] <[itchyjunk]> but looks like no one is so we are all winners!
[20:03:24] <CalimeroTeknik> [itchyjunk], you can use several paradigms in the same program (if the language allows) and it's actually a proper idea
[20:03:26] <nomagno> Paradigms don't limit what you can do
[20:03:27] <akronymus> do notation is some POWERFUL shit
[20:03:34] *** Joins: paravida (~myChateau@user/paravida)
[20:03:46] <nomagno> they are just a way of describing what language designers intended
[20:03:50] <akronymus> ```do let printBoth s = putStrLn s >> hPutStrLn stderr s
[20:03:50] <akronymus>    printBoth "Hello"
[20:03:51] <akronymus>    -- Some other code
[20:03:51] <akronymus>    printBoth "Goodbye"```
[20:04:00] <[itchyjunk]> CalimeroTeknik, okay that makes sense. just like there is no pure OOP language, there is no pure imparative or procedural language
[20:04:10] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.3)
[20:04:10] <akronymus> Looks very much like imperative
[20:04:12] <[itchyjunk]> or was it declarative? i can't remember the things we mentioned
[20:04:44] <CalimeroTeknik> [itchyjunk], actually I did use a purely imperative language at school
[20:04:49] <nomagno> You will find NO language that doesn't let you imperatively order stuff around to be executed in sequence. Similarly, it's really hard to find any language that doesn't let you recursively call code you treat as a black box
[20:04:55] <[itchyjunk]> @_@
[20:05:05] <nomagno> Paradigms are just orientative
[20:05:08] <CalimeroTeknik> it only had instructions, that executed one after another, and you could jump conditionally
[20:05:17] <akronymus> nomagno you don't even need to have recursion
[20:05:30] <akronymus> y combinator for the win
[20:05:31] <CalimeroTeknik> you could literally not write anything outside of imperative in that dubious language (specific to a machine with blinking leds)
[20:05:32] <[itchyjunk]> CalimeroTeknik, almost like qbasic but those that subroutines or something
[20:05:43] <nomagno> CalimeroTeknik: Hey! That's what the assembly for my custom instruction sets lets you do!
[20:05:57] <CalimeroTeknik> nomagno, I bet :)
[20:06:02] <akronymus> Hell, you can write your own stack management
[20:06:12] <CalimeroTeknik> sure
[20:06:16] <nomagno> Just 12 instructions, and 3 pseudo-instructions the assembler prepocesses to let you simulate subrouines
[20:06:17] <akronymus> And implement recursion/stack inside a purely imperative language
[20:06:20] <nomagno> No stack management either
[20:06:34] <nomagno> :D
[20:06:39] <akronymus> ALL paradigms are equivalent.
[20:06:46] <[itchyjunk]> this SQL being "set like" is interesting idea too
[20:06:49] <pyzozord> ok, did the advent of code, problem was trivial, but the python gave me some resistance... I did it like this, any feedback? https://ideone.com/BbjIMM
[20:06:52] <bayaz> Title: Ideone.com 
[20:06:55] <nomagno> akronymus: That's a given, it's all different ways of describing the same thing
[20:07:08] <[itchyjunk]> is SQL intepreter different than other language interpreter in any special way?
[20:07:18] <akronymus> pyzozord yeah I had some problems too, because of the sheer size of the sample data
[20:07:18] <CalimeroTeknik> [itchyjunk], just imagine some BASIC without any ability to define routines yes, just IF and GOTO and other than that, commands that do things
[20:07:19] *** Quits: sweety (~Administr@113.26.39.103) (Read error: Connection reset by peer)
[20:07:27] <CalimeroTeknik> that's imperative at its purest
[20:07:29] <nomagno> If a paradigm says 'This paradigm can only write hello world programs', it's not a paradigm
[20:07:33] <akronymus> did you do part 2 as well? pyzozord
[20:07:42] <[itchyjunk]> okay, i kinda understand imparative i think
[20:07:44] *** Joins: sweety (~Administr@118.77.10.3)
[20:07:50] <merijn> [itchyjunk]: SQL is based pretty directly on relational calculus
[20:07:55] <akronymus> Assembly is imperative
[20:08:00] <merijn> [itchyjunk]: Which, indeed, uses sets rather heavily
[20:08:04] <[itchyjunk]> :O never heard of relational calculus
[20:08:08] <nomagno> My assembly is extremely imperative
[20:08:12] <nomagno> let me get an example
[20:08:14] <akronymus> You have a LONG list of instructions
[20:08:29] <akronymus> And thats literally all there is
[20:08:36] <nomagno> https://gitea.com/Nomagno/Half-World/src/branch/master/src/core/iset/test.c#L50
[20:08:43] <CalimeroTeknik> [itchyjunk], structured is just syntactic sugar (if, for, while, etc) over the basic definition of imperative
[20:08:44] <kennyd> while some procedural operations are a bit clunky in haskell, there are also some upsides. you can write control structures, such as loops, as just plain functions, without messing around with metaprogramming or wrapping everything in lambdas
[20:08:52] <nomagno> Yup, that's a test for my CPU. That's the most complex kind of logic you can write!
[20:08:59] <[itchyjunk]> assembly + macros = procedural then?
[20:08:59] <merijn> [itchyjunk]: oh, wait, relational calculus is different from relational algebra, mixed them up
[20:09:02] <merijn> [itchyjunk]: https://en.wikipedia.org/wiki/Relational_algebra
[20:09:02] <bayaz> Title: Relational algebra - Wikipedia 
[20:09:06] <[itchyjunk]> "macros" feels like procedures?
[20:09:08] <CalimeroTeknik> [itchyjunk], C is basically macros over assembly, indeed
[20:09:13] <akronymus> CalimeroTeknik structured is different in that you can read off of the shape of the code where entry/exit points are
[20:09:19] <CalimeroTeknik> sure
[20:09:34] <akronymus> It may seem trivial but is a HUGE difference
[20:09:34] <[itchyjunk]> oh so C is procedural because of that, we could say
[20:09:39] <[itchyjunk]> oaky , i kinda get it for now
[20:09:45] <[itchyjunk]> i'll forget in an hour though
[20:09:50] <CalimeroTeknik> [itchyjunk], I'd still call that *structured* imperative (if, for, while …)
[20:10:00] <akronymus> So, instead of guard clauses at the beginning that are just if (something) return; you'd have if (something) return; else
[20:10:30] <CalimeroTeknik> [itchyjunk], repeat (take notes, I won't tell you every day): procedural is the ability to put a bunch of instructions inside a block and give it a name
[20:10:34] <akronymus> The else conveys that the rest only happens if "something" didn't happen
[20:10:58] <Thedarkb1-Deskto> Having used a macro assembler, I think saying that is doing C a disservice.
[20:11:00] <CalimeroTeknik> [itchyjunk], don't confuse calling a block that you could have copy/pasted in place, and replacing GOTO soup by a while loop!
[20:11:08] <akronymus> Structured isn't just about avoiding gotos
[20:11:13] <[itchyjunk]> i should take note but can't righ now, i'll right it down later after i get home
[20:11:23] <akronymus> Hence: https://dl.acm.org/doi/book/10.5555/1243380
[20:11:24] <bayaz> Title: Structured programming | Guide books 
[20:11:26] <akronymus> Go read it
[20:11:30] <akronymus> IMO a must read
[20:11:38] <akronymus> Like, one of the VERY few must reads
[20:11:50] <CalimeroTeknik> yeah, this is "structured" in general, not just "imperative flow control structures"
[20:12:10] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[20:12:13] <CalimeroTeknik> I already binged all the stuff Dijkstra wrote and that is included in this monograph :)
[20:12:22] <akronymus> Often structured gets treated as only 1 return.
[20:12:29] <akronymus> Which, is just wrong
[20:12:40] <CalimeroTeknik> what is "only 1 return"?
[20:12:56] <akronymus> Only 1 return statement per procedure, for example.
[20:13:06] <CalimeroTeknik> that's just expression-based
[20:13:10] <akronymus> Which is a complete misapplication of what dijkstra said.
[20:13:13] <CalimeroTeknik> it says nothing else
[20:13:19] <akronymus> No not even that
[20:13:30] <CalimeroTeknik> oh… damn, I see what you mean
[20:13:44] <CalimeroTeknik> I have read Dijkstra so yeah, complete mischaracterization
[20:13:57] <akronymus> It means that with the control flow you always arrive at exactly 1 return.
[20:14:03] <akronymus> It doesn't always have to be the same
[20:14:08] <CalimeroTeknik> but that's horrible! people read Dijkstra and manage to get it even wronger
[20:14:10] <akronymus> But that there can't be confusion about it
[20:14:19] <akronymus> Spoiler: they didnt
[20:14:27] <CalimeroTeknik> oh.
[20:15:01] <akronymus> They just get it taught like that
[20:15:07] *** Quits: rany (~rany@user/rany) (Remote host closed the connection)
[20:15:16] <akronymus> from teachers who got taught a slightly less wrong definition and so on
[20:15:28] <CalimeroTeknik> I have a few memories of searching for the actual source when a teacher said something, and the source contradicted what he said
[20:15:58] *** Quits: nvmd (~nvmd@user/nvmd) (Quit: Later, nerds.)
[20:16:02] <CalimeroTeknik> my logic programming teacher was focusing on prolog's execution model/evaluation order instead of teaching us logic purity
[20:16:12] <CalimeroTeknik> he was doing loops with print statements and such
[20:16:34] <CalimeroTeknik> the bible on logic programming purity is https://www.metalevel.at/prolog by the way
[20:16:36] <bayaz> Title: The Power of Prolog 
[20:17:13] *** Joins: poww0wmus1c (~poww0wmus@gateway/tor-sasl/poww0wmus1c)
[20:17:33] <CalimeroTeknik> that's why I say that the three categories of programming are imperative (with all of its variations, bells and whistles such as procedural), functional (pure, for those who had a doubt), and logic
[20:17:52] <akronymus> Declarative?
[20:18:05] <[itchyjunk]> reading book is too hard
[20:18:12] <CalimeroTeknik> functional and logic are declarative
[20:18:14] <[itchyjunk]> i have ~200 books i really need to read
[20:18:18] *** Joins: rany (~rany@user/rany)
[20:18:21] <akronymus> Kinda kinda not IMO
[20:18:42] <akronymus> Altough, I guess SQL is separate from imperative/declarative and such
[20:18:59] <CalimeroTeknik> it's actually a limited logic programming language I think
[20:19:25] <akronymus> (sometimes I feel like I am one of very few people who actually like sql)
[20:19:26] <CalimeroTeknik> it just only allows constructive paths to the solution, instead of allowing general queries where time complexity gets out of hand without noticing
[20:19:49] <CalimeroTeknik> I do like SQL, you should see what one can do with postgresql function inlining
[20:19:51] *** Quits: absc (~absc@81.31.144.28) (Quit: Leaving)
[20:19:57] <merijn> akronymus: SQL is, like, peak declarative...
[20:20:00] <kennyd> one other thing "normal" languages can't do as elegantly, treat effects as first class values: sequence_ (intersperse (putStrLn "") (map someProcedure list)).  this will call someProcedure (which pressumably contains some sideeffects) on each element of the list, then insert "print empty line" effect between every element of that list, and only then execute a list of those effects (or more precisely, combine all those effects into a single effect)
[20:20:24] <CalimeroTeknik> write your filter condition outside of the function; it's as efficient as if it were inside with the query optimizer
[20:20:44] <CalimeroTeknik> merijn, peak declarative is pure logic programming relations!
[20:20:52] <CalimeroTeknik> I don't know of anything above that
[20:20:57] <GeDaMo> "Unifying Tables, Objects and Documents" https://www.microsoft.com/en-us/research/wp-content/uploads/2003/08/XS.pdf
[20:20:58] <bayaz> Type: application/pdf Size: 207.4 kB 
[20:22:30] <akronymus> There are some REALLY dangerous things though.
[20:22:43] <akronymus> Joining either on x or on y table, for example.
[20:22:57] <jkk> <akronymus> Which is a complete misapplication of what dijkstra said. and why it is misapplied?
[20:23:05] <akronymus> http://www.sqlnuggets.com/blog/performance-problem-when-using-or-in-a-join/
[20:23:19] <akronymus> jkk only one exit statement per procedure
[20:23:35] *** gitesh is now known as iamfuckedip
[20:23:37] <akronymus> It should be one exit per path.
[20:23:55] <akronymus> For example a if without else implies the execution continues afterwards.
[20:23:56] *** iamfuckedip is now known as iamfuckedup
[20:24:08] <akronymus> So, you can't put a return in there.
[20:24:56] <akronymus> Similarily a top level if with an else implies a return in both paths.
[20:25:03] <jkk> yep ok
[20:25:11] *** Quits: simon323 (~simon323@2409:8a34:468:83d0:793b:4721:5b34:60ac) (Quit: simon323)
[20:25:12] <nomagno> You can put a return inside an if
[20:25:34] <akronymus> I was talking about structured programming
[20:25:41] <akronymus> Specifically single entry/exit
[20:25:55] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:6113:19c1:4341:bd44) (Read error: Connection reset by peer)
[20:26:08] <nomagno> You still have a single entry and exit per execution path like that
[20:26:22] <akronymus> But it implies something else
[20:26:33] <nomagno> An if statement implicitly makes everything NOT inside it the else
[20:26:36] <jkk> implies = ambiguity
[20:27:03] <akronymus> if (value < 0) {value = -value;}
[20:27:15] *** iamfuckedup is now known as tigerHighway
[20:27:39] <CalimeroTeknik> abs(value)
[20:27:45] <akronymus> Well, yes.
[20:27:45] *** tigerHighway is now known as gitesh
[20:27:48] <akronymus> It was an example
[20:28:10] <akronymus> To illustrate how not all ifs imply everything else being else
[20:28:11] <jkk> Structured programming is a programming paradigm aimed at improving the clarity, quality, and development time of a computer program
[20:28:18] <CalimeroTeknik> my daily job consists in finding ways to rewrite inline stuff to clear and general functions like that
[20:28:18] <nomagno> Go put something after the if statement.
[20:28:22] <nomagno> That's the same as putting something both in the else and the if
[20:28:33] <CalimeroTeknik> which I then task the programmer I was proofreading the code of, to implement
[20:29:01] <nomagno> You can definitely refactor out HUGE chunks of code by having a good eye and thinky thinking
[20:29:04] <CalimeroTeknik> gradually they learn to see what functions that exist or don't exist in the stdlib they could use to write their thing
[20:29:28] <akronymus> Ok, that makes more sense
[20:29:42] <CalimeroTeknik> it's primarily a question of asking "what's your intention here" and writing the intention as though a myriad of functions existed
[20:29:47] <CalimeroTeknik> if they didn't, then implement them
[20:30:14] <CalimeroTeknik> but if a word exists in the English language and it's so clear in context that nobody asks to see the implementation of that function, I've succeeded
[20:30:17] <akronymus> nomango in most cases that works quite well.
[20:30:33] <CalimeroTeknik> you didn't ask what I meant by abs()
[20:30:41] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[20:30:43] <jkk> maybe programming is an art
[20:30:53] <CalimeroTeknik> magic explained becomes science
[20:30:56] <nomagno> Everything is an art
[20:31:19] <jkk> yes
[20:31:21] <akronymus> ifs without elses are indeed a code smell in structured programming.
[20:31:27] <nomagno> Doing stuff gud is an art and a science onto itself
[20:32:05] <CalimeroTeknik> akronymus, funnily enough, when I did include an explicit else, most people who do the usual imperative whatever soup programming told me "that dangling else is a smell"
[20:32:14] <nomagno> akronymus: I don't understand why, honestly. There are many situations where I might want to do a passing check for something without making the entire function a bracket sandwich
[20:32:15] <CalimeroTeknik> and I told them "it's the novice that has the right idea"
[20:32:21] *** Quits: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:55f1:210:90cf:cd28) (Read error: Connection reset by peer)
[20:32:53] <akronymus> nomagno yeah, the bracket sandwich is annoying.
[20:33:17] <jkk> when something like programming allows multiple ways to implement one intent it is an art :)
[20:33:21] <akronymus> well, if there is nothing in the else, it indeed feels like code smell.
[20:33:31] <nomagno> int isbroke(int input){ if(input == 5) return BROKE; return 43+input; }
[20:33:32] <akronymus> Which would make me question the if as well
[20:33:48] <nomagno> Make the part after the else much larger
[20:33:53] <nomagno> s/else/if/
[20:34:03] <akronymus> > int isbroke(int input){ if(input == 5) return BROKE; return 43+input; }
[20:34:09] <jkk> all attempts to mechanise coding more and more run into a simple fact that intellect is not fully mechanical
[20:34:10] <akronymus> Yeah, that ain't structured
[20:34:17] <kennyd> akronymus, eh? if (shouldBeep) { beep(); }
[20:34:20] <akronymus> Because you can't read off of the shape where the returns may be.
[20:34:23] <nomagno> Returns specifically ARE the termination of execution of the function
[20:34:38] <nomagno> akronymous: this is IRC, I don't want to flood
[20:34:50] <akronymus> if(something) somecode; return;+
[20:35:09] <akronymus> Can you tell if it has a return in "someCode"?
[20:35:26] <nomagno> You look at it
[20:35:40] <nomagno> returns specifically aborts the function
[20:35:43] <CalimeroTeknik> nomagno, really though, int isbroke(int input){ return if input == 5 then BROKE else 43+input end; }
[20:35:45] <akronymus> The entire point of structured programming is that you just have to look at the shape/control flow
[20:36:13] <jkk> akronymus, in general perhaps people of course use someone else models to star with and then improvise?
[20:36:14] <CalimeroTeknik> I borrowed the SQL if-then-selse here
[20:36:20] <CalimeroTeknik> 'cause ternary is meh
[20:36:21] <jkk> *start
[20:36:47] <CalimeroTeknik> also return is meh, functions should be specifiable as an expression directly
[20:36:55] <akronymus> Statements are meh.
[20:37:01] <akronymus> Expressions are amazing.
[20:37:04] <jkk> science at very least admits evolution - what seems smart today may be obsolete fast
[20:37:09] *** Quits: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au) (Ping timeout: 252 seconds)
[20:37:18] <nomagno> Everything is meh if you get purist enough
[20:37:22] <CalimeroTeknik> int isbroke(int input) if input == 5 then BROKE else 43+input end;
[20:37:27] <CalimeroTeknik> this looks like ok syntax
[20:37:37] <akronymus> Expression based languages automatically enforce structured programming.
[20:37:48] <akronymus> Because it always has to become some value at the end.
[20:37:56] <jkk> nomagno, the purism sometimes is fine if its about expressing oneself clearly in a way that can be understood 
[20:37:57] <kennyd> Calimero that's almost haskell. isbroke input = if input == 5 then BROKE; else 43 + input
[20:38:01] <KillerWasp> +++[>+++[>+++[>+++>+++>+++<<<-]<-]<-]>>>-.>>>>+++[<+++[<+++<++<++>>>-]>-]<<<<-.>>++.<.<.>>---.<++.
[20:38:03] <nomagno> I wrote my code in C, not pseudo-optitrioggles++
[20:38:04] *** Joins: Themis3000 (~Thunderbi@user/themis3000)
[20:38:21] <kennyd> a more idiomatic way would be isbroke 5 = BROKE\nisbroke x = 43 + x
[20:38:40] <CalimeroTeknik> pattern matching, right
[20:38:45] <CalimeroTeknik> or partial definitions?
[20:38:59] <CalimeroTeknik> same mechanism overall
[20:39:24] <kennyd> that is pattern matching, yes
[20:39:33] <merijn> Meanwhile I just solved the general case of FizzBuzz instead: https://gist.github.com/merijn/cd0e7918a96fe913cf7d66833e8da354 :p
[20:39:34] <bayaz> Title: Generalised FizzBuzz 
[20:40:20] <CalimeroTeknik> looking good, though I can't read Haskell
[20:40:23] <merijn> for all possible predicates, all possible inputs and all possible outputs xD
[20:40:42] *** Quits: ixil (~ixil@mpp-cp1-natpool-1-093.ethz.ch) (Remote host closed the connection)
[20:40:45] <merijn> CalimeroTeknik: Easily solved: https://haskell-for-readers.nomeata.de/
[20:40:45] <bayaz> Title: Haskell for Readers 
[20:41:10] <jkk> merijn, ty 
[20:41:22] <akronymus> forall is such a powerful notation
[20:41:37] <merijn> akronymus: It's mostly there so I can write type annotations on the where clause :p
[20:41:45] <CalimeroTeknik> merijn, thanks, I'll keep that, but my issue is that the names in the standard library of Haskell are bad (they are notational metaphors rather than actually the semantic notions)
[20:41:56] <merijn> via ScopedTypeVariables
[20:42:23] <CalimeroTeknik> when it's not jargon unique to Haskell, to category theory, or people's names :x
[20:42:33] <nomagno> KillerWasp: That brainfuck is BASIC. it doesn't even calculate 60 digits of Pi!
[20:43:23] <KillerWasp> brainfuck != BASIC
[20:43:26] <jkk> nomagno, that is why its called basic :P
[20:43:45] <nomagno> smh
[20:43:55] <KillerWasp> brainfuck == FUCK
[20:44:02] <nomagno> Brainfuck is very basic, just not very BASIC
[20:44:11] <KillerWasp> ok, yes
[20:44:27] <KillerWasp> is very basic, but not's BASIC
[20:44:36] *** Joins: independent56 (~independe@85.255.233.45)
[20:45:11] <akronymus> Anyways, g2g
[20:45:17] <KillerWasp> the idea is make a text for brainfuck by funny
[20:45:20] *** Quits: akronymus (~akronymus@217.29.158.240) (Quit: Client closed)
[20:45:20] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[20:45:39] *** Joins: Macuser (~Macuser@216.30.159.201)
[20:45:50] <independent56> I have tried, but in JS, how do  i find the character at a numbered place? Something like [x] in arrays, but for strings?
[20:45:51] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[20:46:02] <KillerWasp> I'm sure it can be a lot more fun to create a brainfuck compiler whose job it is to create the most optimized code possible.
[20:46:05] <independent56> All i get is indexof(), which does the exact opposite
[20:46:09] *** Joins: mickey8 (~user@user/mickey)
[20:46:50] <KillerWasp> What kind of smart algorithm would be capable of generating the best possible brainfuck code?
[20:47:10] *** Quits: newbie (~Booster2o@host-78-129-56-66.dynamic.voo.be) (Quit: Lost the game...)
[20:47:23] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[20:47:26] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[20:47:59] <GeDaMo> independent56: can't you just index with []?
[20:48:11] <independent56> Oh, that works?! wow!
[20:48:12] <GeDaMo> "abc"[1] -> "b"
[20:48:18] *** Joins: ixil (~ixil@mpp-cp1-natpool-1-093.ethz.ch)
[20:48:22] <independent56> Makes sense!
[20:48:31] <nomagno> one the machine itself generates every nanosecond, because the fastest brainfuck code might depend on loading a region of memory that contains the wanted output
[20:48:46] <KillerWasp> GeDaMo: 'b'*
[20:48:54] <nomagno> The FuckBrainfuckFucker ISA
[20:49:05] <GeDaMo> My JS console said "b" and who am I to argue? :P
[20:49:23] <CalimeroTeknik> 1["abc"] → 'b'
[20:49:27] <KillerWasp> JS is broken
[20:49:30] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Client Quit)
[20:49:48] <nomagno> it is like any ISA, but has an instruction "fuckbrainfuckup" that generates a custom super-efficient Brainfuck compiler that is valid for precisely one nanosecond
[20:49:55] <CalimeroTeknik> #include <stdio.h> int main(void) { printf("%c\n", 1["abc"]); }
[20:50:14] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[20:50:44] <KillerWasp> nomagno: i mean by size, no by speed.
[20:51:05] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:51:11] <KillerWasp> by speed is very imprecise
[20:53:11] <independent56> Do any of you use GoogleAppscript? I use it for JS coding at school, where it is not blocked. It's how i spend some breaktimes.
[20:53:17] *** Quits: the_lanetly_052 (~the_lanet@194.135.152.219) (Ping timeout: 252 seconds)
[20:53:20] <independent56> (We use chromebooks)
[20:53:32] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi)
[20:54:10] <pyzozord> Here is how I did second part https://ideone.com/AcqIPQ, wdyt?
[20:55:06] *** Joins: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de)
[20:55:06] *** Quits: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de) (Changing host)
[20:55:06] *** Joins: resamvi (~resamvi@user/resamvi)
[20:56:05] <KillerWasp> who can say what i put here from brainfuck code? mmmm....
[20:56:30] <KillerWasp> strange.... nobody here said anything....
[20:56:35] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 252 seconds)
[20:56:53] <KillerWasp> pyzozord: what's?
[20:57:31] <pyzozord> that's second part of day one of Advent of Code
[20:57:43] <KillerWasp> AoC.
[20:58:08] <KillerWasp> brainfuck is all my AoC.
[21:00:32] *** Joins: DevAntoine (~DevAntoin@pop.92-184-112-49.mobile.abo.orange.fr)
[21:01:39] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:01:49] *** Joins: Daemonick (~Daemonick@46.246.199.138.dsl.dyn.forthnet.gr)
[21:02:10] <Daemonick> hi programers
[21:02:44] <pyzozord> I'm not very happy with that python code, I feel it's not very pythonic
[21:03:04] *** Quits: jkk (~jkk@213.180.39.162) (Remote host closed the connection)
[21:03:04] *** Joins: _kimchi (~kimchi@87.247.123.112)
[21:05:56] <Daemonick> I had an idea of making a P/L with the feature of the typed font style to have a meaning in syntax
[21:06:50] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[21:07:01] *** Quits: DrMax (~DrMax@node-1w7jra94757g2aife07d72ffo.ipv6.telus.net) (Ping timeout: 268 seconds)
[21:07:06] *** Joins: mickey8 (~user@user/mickey)
[21:07:18] <Daemonick> As an example: blue means integer data type variable, red means float and so on
[21:08:02] <Thedarkb1-Deskto> ColorForth uses colours to delineate different structures, and that's an actual language that's been used in production by a few companies.
[21:08:30] <GeDaMo> Semantic colouring
[21:08:52] <Daemonick> Thedarkb1-Deskto how about fonts?
[21:09:19] <Daemonick> and their sizes too
[21:10:06] <KillerWasp> pyzozord: the python code seem like JS
[21:10:43] <KillerWasp> it frightens me.
[21:11:03] <pyzozord> does it?
[21:11:09] <pyzozord> i am not sure how much i trust you :P
[21:11:37] <KillerWasp> yes, i hate JS.
[21:11:46] <pyzozord> what's js about it?
[21:11:51] <xcombelle> pyzozord: maybe more pythonic https://dpaste.org/PQ0J 
[21:12:20] <GeDaMo> https://code.visualstudio.com/api/language-extensions/semantic-highlight-guide
[21:12:20] <bayaz> Title: Semantic Highlight Guide 
[21:12:56] <pyzozord> xcombelle: thanks
[21:13:57] <pyzozord> xcombelle: there is an interestling list comprehension in line 3 and 6 and line 11 is very fp
[21:14:40] <pyzozord> generally it's very fp because it produces a list of deltas
[21:14:41] *** Joins: gitgood (~gitgood@85.210.185.0)
[21:16:08] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[21:16:53] <merijn> xcombelle: Pretty close to my Haskell version :p
[21:17:10] <merijn> (with the exception of mine being way more verbose due to my "no unhandled errors" policy)
[21:17:16] <pyzozord> interesting creating an inline tuple in an comprehention out of zip of the list and list shifted by one and then delta 
[21:17:42] <merijn> spoilers, obviously: https://github.com/merijn/AdventOfCode/blob/master/Day1.hs
[21:17:43] <bayaz> Title: AdventOfCode/Day1.hs at master · merijn/AdventOfCode 
[21:17:51] *** Quits: _inky (~inky_@141.136.77.0) (Ping timeout: 252 seconds)
[21:17:58] <pyzozord> yeah it's very fp in general this approach, but it does uses python features
[21:18:17] <pyzozord> merijn: oh wow, really? that's a lot of code
[21:18:28] <pyzozord> especially compared to that python snippet
[21:18:56] <merijn> pyzozord: I mean, you can do it in a few lines if you do the same as the python (i.e. zero error handling)
[21:19:16] <merijn> This version handles all possible errors (missing files, incorrect/corrupt input, etc.)
[21:19:25] <pyzozord> ah I don't even see what this code does, so maybe most of it is error handling and other stuff
[21:19:56] <merijn> The actual solution is only line 22-39 and that even contains 2 separate sliding window implementations
[21:20:20] <merijn> 22-33 for the entire solution if you don't include the 2nd sliding window one
[21:20:29] <merijn> The rest is input validation and IO
[21:20:57] <merijn> So, that's 11 lines vs xcombelle's python version which is also 11 lines :p
[21:21:54] <pyzozord> xcombelle's stuff is not a full program though, input stuff is missing
[21:21:59] *** Quits: rsx (~dummy@ppp-188-174-159-13.dynamic.mnet-online.de) (Quit: rsx)
[21:22:53] <pyzozord> my stuff is indended to have lazy computation so that it can handle arbitrary size inputs
[21:22:58] *** Joins: Akuli (~Akuli@213.216.211.96)
[21:23:03] *** Quits: ProperN[out] (~holyShizn@user/propernoun) (Ping timeout: 268 seconds)
[21:23:09] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[21:23:18] *** Joins: RPNX (RPNX@gateway/vpn/protonvpn/rpnx)
[21:23:39] <RPNX> Do different GPUs from the same vendor have different machine languages?
[21:23:49] <KillerWasp> ++++[>+++[>+++[>+>+++>+++<<<-]<-]<-]>>>---->-->>++[<<-->>-]<+++<+.>..<---.<.>.---.>>>++[<++[<+++>-]>-]<<--.
[21:24:40] <KillerWasp> ++++[>+++[>+++[>+>+++>+++<<<-]<-]<-]>>>---->-->>++[<<-->>-]<+++<+.>..<---.<.>.---.>++++++++++.
[21:24:45] <KillerWasp> more short...
[21:25:52] <pyzozord> xcombelle's stuff builds out full arrays, so it needs O(n) space. I guess that idea works better in haskell where you everything is lazily evaluated, although I think you can turn his stuff into generators to make it evaluate on demand
[21:27:29] *** Joins: _inky (~inky_@141.136.79.85)
[21:28:06] *** Joins: Inline (~Inline@aftr-37-201-240-100.unity-media.net)
[21:28:07] <arkanoid> hello! I have to parse tables from large files that really are copy/paste from a pdf. It's a dirty job, as the structure is not machine readable but somewhat still doable with some work. What would be your approach to this? Any suggestion?
[21:28:24] *** Joins: raj_ (uid72176@user/raj)
[21:28:35] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[21:30:00] *** Quits: Pixi (~Pixi@user/pixi) (Quit: Leaving)
[21:30:08] *** Quits: Guest3140 (~vit@chello085216193138.chello.sk) (Ping timeout: 252 seconds)
[21:30:13] *** raj_ is now known as raj
[21:30:22] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[21:33:06] *** Joins: Pixi (~Pixi@user/pixi)
[21:33:20] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[21:33:39] *** Joins: nkrth (~nkrth@103.210.42.179)
[21:34:21] *** Quits: paravida (~myChateau@user/paravida) (Ping timeout: 252 seconds)
[21:35:05] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 252 seconds)
[21:35:41] <CalimeroTeknik> KillerWasp, and to think you could hide rowhammer in this
[21:36:05] <KillerWasp> CalimeroTeknik: what?
[21:36:42] <CalimeroTeknik> https://en.wikipedia.org/wiki/Rowhammer exploit in BF, that would be quite something
[21:36:42] <bayaz> Title: Row hammer - Wikipedia 
[21:41:03] *** Quits: independent56 (~independe@85.255.233.45) (Quit: Client closed)
[21:42:37] <pyzozord> it sounds like some spectre/meltdown variant
[21:42:44] <pyzozord> because of the caches
[21:44:59] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 252 seconds)
[21:46:43] <Thedarkb1-Deskto> How expensive is it to create/join Posix threads?
[21:46:46] <xcombelle> rowhammer was before spectre/meltdown if I'm correct (maybe the first of this kind of attack)
[21:47:00] <Thedarkb1-Deskto> Like, should I be creating and joining threads multiple times per frame?
[21:47:55] *** Quits: DevAntoine (~DevAntoin@pop.92-184-112-49.mobile.abo.orange.fr) (Ping timeout: 252 seconds)
[21:49:01] <pulse> That sounds like a bad idea
[21:49:25] *** Quits: Hylden (~Hylden@user/hylden) (Quit: Hylden)
[21:49:36] *** Joins: paravida (~myChateau@23.31.187.1)
[21:49:48] *** Quits: paravida (~myChateau@23.31.187.1) (Changing host)
[21:49:48] *** Joins: paravida (~myChateau@user/paravida)
[21:50:07] <d3x0r> definitely not
[21:50:50] <GeDaMo> Maybe create a thread pool
[21:51:07] <d3x0r> it's expensive in that it has to build a mapping table and allocate some physical memory forit somwehere
[21:51:29] <d3x0r> copying handles, lots of housekeeping stuff that's not intense but takes time
[21:51:46] <pyzozord> I heard having more threads than logical hardware threads is counter productive
[21:52:34] <GeDaMo> You can have green / user level threads
[21:52:50] <d3x0r> depends on what the threads are doing; if they are compute bound there's no percentage
[21:52:57] <d3x0r> if they are IO bound certainly 
[21:53:07] *** Joins: Guest1723 (~Guest17@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[21:53:11] <d3x0r> if they are IO bound it's not counter productive
[21:53:26] *** Joins: vit (~vit@chello085216193138.chello.sk)
[21:53:50] *** vit is now known as Guest4367
[21:54:17] <Thedarkb1-Deskto> How do I deal with the helper threads when there's nothing for them to do, spinlock them?
[21:54:31] *** Guest4367 is now known as freeworld
[21:54:32] <phogg> burn the CPU!
[21:54:52] <Thedarkb1-Deskto> Or perhaps have a global "sleep until the next frame" variable.
[21:54:53] *** Joins: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca)
[21:55:21] <Thedarkb1-Deskto> If it's non-zero and there's no work to do, it'll sleep for the number of milliseconds left before the next frame should be rendered.
[21:55:33] <KillerWasp> burn the WEB!
[21:55:39] *** Quits: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net) (Quit: Leaving)
[21:56:32] <KillerWasp> i must understand that rowhammer is the child of spectre and meltdown.
[21:56:33] *** Joins: DevAntoine (~DevAntoin@pop.92-184-112-49.mobile.abo.orange.fr)
[21:56:52] <KillerWasp> a fork*
[21:58:23] <pyzozord> i'm not sure if they are related, i just understand that it's about checking how fast you can get data, and if it's fast enough that means it was in cache means someone else used it
[21:59:25] *** Quits: Buttercat (~Buttercat@user/buttercat) (Remote host closed the connection)
[22:00:08] *** fling is now known as ciphersalad
[22:00:09] *** Joins: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net)
[22:00:58] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Quit: rickybob)
[22:01:46] <KillerWasp> https://github.com/google/rowhammer-test
[22:01:47] <bayaz> Title: GitHub - google/rowhammer-test: Test DRAM for bit flips caused by the rowhammer problem 
[22:01:51] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[22:03:00] <KillerWasp> seem like a short cycle of read and flush in the memory.
[22:03:49] *** Joins: tessio (~weechat@141.226.73.54)
[22:03:51] <KillerWasp> i really don't understand how to work in the memory, even read in the wiki...
[22:03:55] <tessio> hi GeDaMo 
[22:04:01] <GeDaMo> Hi tessio :)
[22:04:11] *** Parts: tessio (~weechat@141.226.73.54) (WeeChat 3.2)
[22:05:14] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[22:06:44] *** ciphersalad is now known as fling
[22:07:18] <KillerWasp> this problem affect only to VMs
[22:07:42] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[22:08:17] <KillerWasp> Like all big corporations like google and amazon, it's pretty screwed up using VMs.
[22:09:08] <KillerWasp> Otherwise no one would give a damn cucumber about these types of vulnerabilities.
[22:09:09] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:10:51] <jelly> rowhammer is not related to spectre/meltdown class of attacks, and is useful on bare metal
[22:11:30] <KillerWasp> jelly: bare metal?
[22:12:56] <jelly> right.  The opposite of VM
[22:13:56] *** Quits: duchess (~duchess@24.109.185.150) (Quit: Client closed)
[22:14:09] <nomagno> You have to specify what you mean by VM
[22:14:28] <jelly> KillerWasp, an OS runs on "bare metal" when is running on a physical machine, without a hypervisor, not in a VM
[22:14:32] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[22:14:49] <nomagno> stuff running on hypervisor, isolated from main OS? Or completely emulated CPUs?
[22:14:53] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:15:09] <nomagno> Ah, without a hypervisor
[22:15:29] <nomagno> well yeah of course it is still useful. If you want to disrupt memory you don't have access to, for whatever evil purpose, you can use thi
[22:15:30] <KillerWasp> jelly: yes, now understand, thanks.
[22:16:17] <jelly> nomagno, the "evil" attribute does not have to apply.  Maybe you want to root and control your own device.
[22:16:36] <KillerWasp> it can work fine if you already enter by a first exploit in the remote machine. But with VMs like the corporation who offer hosting/web/cloud/etc services send you a easy access in the remote machine
[22:19:05] <KillerWasp> jelly: really? is more easy reinstall the so instead of use rowhammer for recover your device. :/
[22:20:11] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[22:20:31] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:23:00] *** Joins: mjbatty (~mjbatty@82.2.17.205)
[22:23:27] <tomathy> https://www.youtube.com/watch?v=PE1lzqJCeJ0
[22:23:29] <bayaz> Title: Philip Oakey & Giorgio Moroder - Together in Electric Dreams (Official Video) 
[22:25:16] *** Quits: Guest1723 (~Guest17@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Ping timeout: 256 seconds)
[22:25:19] <tomathy> yo
[22:25:21] *** Joins: tane (~tane@dslb-002-201-234-166.002.201.pools.vodafone-ip.de)
[22:25:22] *** Quits: tane (~tane@dslb-002-201-234-166.002.201.pools.vodafone-ip.de) (Changing host)
[22:25:22] *** Joins: tane (~tane@user/tane)
[22:25:31] <tomathy> imagine if you make a good fold in poker you earn imaginary money, complex money
[22:25:44] <tomathy> and somehow eventually it becomes real
[22:25:47] <tomathy> like jesus
[22:25:52] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[22:26:15] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:26:23] <nomagno> Complex money doesn't sound very easy to pay with
[22:26:29] <KillerWasp> money * i
[22:26:50] <KillerWasp> all money is fake, very imaginary. :/
[22:26:52] <nomagno> 'Oh yeah, I don't have 24 dollaroos, I only have 24+6i dollaroos'
[22:27:34] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 256 seconds)
[22:28:50] <pyzozord> ah nevermind, rowhammer is abour ram cache, not cpu cache
[22:29:23] *** Quits: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net) (Read error: Connection reset by peer)
[22:30:34] *** Quits: nkrth (~nkrth@103.210.42.179) (Quit: Client closed)
[22:30:40] *** Joins: quartz (~quartz@user/quartz)
[22:31:01] *** Joins: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net)
[22:31:17] *** Joins: peteyboy_ (~peteyboy1@95.169.232.161)
[22:31:32] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[22:31:55] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Ping timeout: 252 seconds)
[22:31:59] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:32:54] *** Quits: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca) (Quit: Ping timeout (120 seconds))
[22:34:44] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[22:34:49] *** Joins: nvmd (~nvmd@user/nvmd)
[22:35:31] *** Joins: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca)
[22:36:26] *** Joins: tesuji (~quassel@2a02:908:180:9500:ed81:4afc:8e41:e7c1)
[22:36:41] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[22:37:12] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[22:37:25] *** Joins: mrig (~mrig@user/mrig)
[22:37:51] *** Quits: hololeap (~hololeap@user/hololeap) (Ping timeout: 276 seconds)
[22:37:54] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:38:00] *** Joins: zaher_ (~zaher@37.48.183.146)
[22:38:21] *** Joins: hololeap (~hololeap@user/hololeap)
[22:40:21] *** Quits: zaher (~zaher@37.48.184.113) (Ping timeout: 252 seconds)
[22:42:55] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[22:43:37] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:43:44] <user51> good evening
[22:44:55] *** Joins: tangy (~tangy@user/tangy)
[22:45:06] *** Quits: Haxxa (~Haxxa@125-63-20-105.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:47:18] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[22:48:34] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Read error: Connection reset by peer)
[22:48:47] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[22:49:03] *** Quits: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca) (Quit: Ping timeout (120 seconds))
[22:49:16] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:51:08] *** Joins: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca)
[22:53:30] *** Quits: motherr (~motherr@user/motherr) (Quit: motherr)
[22:53:54] *** Joins: Satin (uid193953@id-193953.ilkley.irccloud.com)
[22:54:18] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:54:39] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[22:54:52] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:55:09] <KillerWasp> user51: good ev... i forget it, no matter...
[22:55:56] <vdamewood> What is mind? No matter. What is matter? Nevermind.
[22:56:19] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[22:57:02] <pyzozord> Mind over matter.
[22:57:37] <GeDaMo> "The mind is a muscle which can move the world"
[22:57:59] <psystemupdate> anyone know what os the Tesla Piphone uses?
[22:58:06] <user51> i had some success butterflying chicken breast today
[22:58:11] <user51> pretty proud of it.
[22:58:30] <vdamewood> For what it's worth, I stile that line from a show called The Tracy Ullman show. It was from a series of animated skits.
[22:58:35] <vdamewood> stole*
[22:58:49] *** Quits: _kimchi (~kimchi@87.247.123.112) (Quit: Leaving)
[22:59:24] <vdamewood> https://youtu.be/pUwH-P3Iz0Y
[22:59:25] <bayaz> Title: The Simpsons - "What is the mind?" - The Tracey Ullman Show 
[22:59:59] <vdamewood> Dammit, bayaz, you spoiled the name of the series of animated skits.
[23:00:23] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[23:00:31] <KillerWasp> "The mind is a muscle which can move the world" -GeDaMo
[23:00:31] <user51> bayaz: good bot
[23:00:36] <pulse> Those are some creepy bizarro world Simpsons
[23:00:37] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:01:25] *** Joins: superdupond (~Kev@2a01cb0400149f00f03b899acc615d4e.ipv6.abo.wanadoo.fr)
[23:02:07] <GeDaMo> Actually, I think it's from Stephen King :P
[23:02:24] <GeDaMo> Possibly Firestarter
[23:03:29] <KillerWasp> i never see the short of the simpsons... nevermind...
[23:03:55] <nomagno> psystemupdate: I have no doubt that if it exists, it's running Android with more DRM than usual
[23:04:10] *** gitesh is now known as g1t3sh
[23:04:30] <psystemupdate> i can make money flashing lineageOS on them, who kknows what people would pay for one
[23:04:40] <nomagno> Because 1. There's no other viable mobile OS that doesn't get you criticized and 2. It's Tesla, the company that requires internet connection to boot up their cars
[23:04:59] <nomagno> So, Android with a lot of DRM
[23:05:52] *** g1t3sh is now known as gitesh
[23:06:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[23:06:23] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:07:50] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[23:09:14] *** Quits: mjbatty (~mjbatty@82.2.17.205) (Quit: Leaving)
[23:11:43] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[23:11:59] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:13:15] *** Quits: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca) (Quit: Client closed)
[23:13:35] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[23:14:19] *** Joins: mfiano (~mfiano@li1282-157.members.linode.com)
[23:15:56] *** Joins: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca)
[23:17:23] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[23:17:35] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:18:25] *** Quits: mfiano (~mfiano@li1282-157.members.linode.com) (Client Quit)
[23:20:13] *** Quits: nitro_ (~nitro_@c-73-165-183-88.hsd1.pa.comcast.net) (Ping timeout: 256 seconds)
[23:20:18] *** Joins: mfiano (~mfiano@li1282-157.members.linode.com)
[23:21:01] *** Quits: DevAntoine (~DevAntoin@pop.92-184-112-49.mobile.abo.orange.fr) (Remote host closed the connection)
[23:21:36] *** Joins: DevAntoine (~DevAntoin@pop.92-184-112-49.mobile.abo.orange.fr)
[23:21:48] *** Joins: Auron (Auron956@user/auron)
[23:22:53] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[23:23:02] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[23:23:11] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:23:37] *** Quits: password2 (~password8@user/password2) (Ping timeout: 256 seconds)
[23:23:45] *** Joins: Thedarkb-Desktop (~Thedarkb@2001:bb6:b403:e042:880d:65a8:d656:32cc)
[23:24:11] *** Quits: Thedarkb1-Deskto (~Thedarkb@2001:bb6:b403:e042:50c0:a5a0:d348:3603) (Read error: Connection reset by peer)
[23:24:54] *** Joins: nitro_ (~nitro_@c-73-165-183-88.hsd1.pa.comcast.net)
[23:25:49] *** Quits: DevAntoine (~DevAntoin@pop.92-184-112-49.mobile.abo.orange.fr) (Ping timeout: 252 seconds)
[23:25:53] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[23:26:39] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[23:33:09] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[23:34:42] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:35:32] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 252 seconds)
[23:36:09] *** Quits: nitro_ (~nitro_@c-73-165-183-88.hsd1.pa.comcast.net) (Ping timeout: 256 seconds)
[23:37:15] *** Joins: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de)
[23:37:15] *** Quits: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de) (Changing host)
[23:37:15] *** Joins: resamvi (~resamvi@user/resamvi)
[23:37:58] *** Joins: nitro_ (~nitro_@c-73-165-183-88.hsd1.pa.comcast.net)
[23:39:00] *** Joins: wedr_ (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net)
[23:39:01] *** Quits: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net) (Ping timeout: 252 seconds)
[23:39:55] *** Quits: wedr_ (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net) (Remote host closed the connection)
[23:40:07] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[23:40:27] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:41:07] *** Joins: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net)
[23:41:45] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 256 seconds)
[23:41:51] <wovixo> Hey, what are all the cool kids using for local dev environment management these days? Still Puppet/Vagrant with some containers thrown in?
[23:42:34] *** Joins: CaCode (~CaCode@user/cacode)
[23:45:20] <deniska> I'm an old fart, I just install dev environment natively directly on the OS
[23:45:24] *** Joins: jabster28 (~jabster28@81.111.217.63)
[23:45:34] <deniska> (I know, like a caveman)
[23:45:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[23:46:15] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:48:35] <Daemonick> Linus said there is no any other P/L like C for his suggestion.
[23:49:45] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[23:49:56] <Daemonick> And this is true. I accept his recommendation since C has memory address manipulation.
[23:50:12] *** Quits: Themis3000 (~Thunderbi@user/themis3000) (Quit: Themis3000)
[23:50:44] <InPhase> Daemonick: Linus made his programming language commitments sometime at least 28 years ago.  The language field has changed enormously since then.
[23:51:24] <Daemonick> InPhase, oh!
[23:51:29] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[23:51:48] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:52:06] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[23:52:20] <edgar-rft> let's develop like apes
[23:52:22] <mspe> wovixo: how about using a crafted live os, with proper native dedicated tools, having thought about it beforehand? no ansible/puppet nonsense, no terraform/vagrant resource hog, no docker/lxc/podman/singularity neverending hipster bullshit… ^^
[23:53:33] *** Joins: audiobirb (~audio@user/audio)
[23:54:14] <pyzozord> wovixo: as far as i ca tell docker is the way to go now
[23:54:54] <pyzozord> I'm still a millenial, millenials are still the cool kids, right? Right?
[23:55:01] <Daemonick> The most difficult part in modern P/L is that they are not linear in the execution order
[23:55:31] <InPhase> Neither is a modern performant program.
[23:55:36] <Daemonick> You must make a chart flow
[23:56:15] *** Joins: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de)
[23:56:16] *** Quits: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de) (Changing host)
[23:56:16] *** Joins: resamvi (~resamvi@user/resamvi)
[23:56:42] <Daemonick> Informatics are to computers like astronomy is to telescopes - Dikjstra
[23:56:59] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[23:57:21] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:58:26] <mspe> pyzozord: people have been mindlessly using docker since at least 2014, doesn't sound like the latest hipster thing to throw everywhere
[23:58:38] *** Joins: pierino (~piero@host-95-237-132-254.retail.telecomitalia.it)
[23:59:23] <pyzozord> that's the latest shiny I am aware of
[23:59:43] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
