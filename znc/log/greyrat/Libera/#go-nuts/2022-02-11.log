[00:00:51] *** Quits: tiferrei (~tiferrei@user/tiferrei) (Ping timeout: 276 seconds)
[00:00:52] *** Joins: tiferrei2000 (~tiferrei@user/tiferrei)
[00:08:49] *** Joins: rcernin (~rcernin@124.190.132.36)
[00:10:01] *** Quits: rcernin (~rcernin@124.190.132.36) (Client Quit)
[00:10:15] *** Joins: rcernin (~rcernin@124.190.132.36)
[00:13:14] *** Joins: bluedust_ (~bluedust@89.45.90.48)
[00:13:56] *** Joins: bluedus__ (~bluedust@103.160.233.28)
[00:14:04] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[00:16:21] *** Quits: bluedust (~bluedust@103.160.233.28) (Ping timeout: 250 seconds)
[00:17:15] *** Joins: mnx|aw (~nabromov@92.40.255.115.threembb.co.uk)
[00:17:25] *** Quits: bluedust_ (~bluedust@89.45.90.48) (Ping timeout: 250 seconds)
[00:17:49] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2895-9d6c-4909-5f81.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[00:19:56] *** Quits: dr0n (~nabromov@92.40.255.115.threembb.co.uk) (Ping timeout: 245 seconds)
[00:20:21] *** Joins: ItsNotGoodName03 (~ItsNotGoo@c-73-83-144-140.hsd1.wa.comcast.net)
[00:30:02] *** Quits: zunk (~zunk@user/zunk) (Remote host closed the connection)
[00:38:48] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 268 seconds)
[00:40:47] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[00:42:14] *** Quits: bluedus__ (~bluedust@103.160.233.28) (Remote host closed the connection)
[00:57:09] *** Quits: et (~et@user/et) (Ping timeout: 256 seconds)
[00:57:55] *** Joins: et (~et@user/et)
[00:59:50] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[01:01:31] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[01:02:32] *** Quits: roshanavand (~roshanava@185.213.155.232) (Ping timeout: 240 seconds)
[01:05:17] *** Joins: connor_k3 (~connor_k@ip68-102-25-198.ks.ok.cox.net)
[01:06:27] *** Quits: connor_k (~connor_k@ip68-102-25-198.ks.ok.cox.net) (Ping timeout: 256 seconds)
[01:06:27] *** connor_k3 is now known as connor_k
[01:11:48] *** Quits: someone235 (uid419897@id-419897.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:19:07] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[01:22:29] *** Joins: roshanavand (~roshanava@185.213.155.232)
[01:23:08] *** Quits: marius_m (~marius_m@84.211.92.9) (Quit: WeeChat 3.4)
[01:23:42] *** Joins: crashrep (~crashrep@user/crashrep)
[01:25:01] *** Quits: noarb (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[01:26:06] *** Joins: blinux (~blinux@pool-108-48-11-122.washdc.fios.verizon.net)
[01:29:11] *** Joins: noarb (~noarb@user/noarb)
[01:32:27] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 268 seconds)
[01:34:11] *** Joins: KainAlive (~KainAlive@ip5f5bd0bf.dynamic.kabel-deutschland.de)
[01:37:22] *** Quits: blinux (~blinux@pool-108-48-11-122.washdc.fios.verizon.net) (Quit: WeeChat 3.3)
[01:38:11] *** Quits: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[01:39:07] *** Quits: rcernin (~rcernin@124.190.132.36) (Ping timeout: 250 seconds)
[01:39:52] *** Joins: qrpnxz (~qrpnxz@user/qrpnxz)
[01:42:13] *** Quits: strubbl891941988 (~strubbl@ipbcc1859d.dynamic.kabel-deutschland.de) (Quit: The Lounge - https://thelounge.github.io)
[01:43:31] *** Joins: strubbl891941988 (~strubbl@ipbcc1859d.dynamic.kabel-deutschland.de)
[01:48:52] <b0nn> hmm, it's been bugging me that the term "declaration" was used, when it's a function call
[01:50:20] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:52:01] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[01:54:18] *** Joins: fikran (~fikran@user/fikran)
[01:57:01] *** Quits: KainAlive (~KainAlive@ip5f5bd0bf.dynamic.kabel-deutschland.de) (Quit: leaving)
[02:01:25] *** Quits: crashrep (~crashrep@user/crashrep) (Remote host closed the connection)
[02:01:34] *** Joins: borrougagnou (~borrougag@91.134.153.132)
[02:01:46] *** Joins: crashrep (~crashrep@user/crashrep)
[02:06:34] *** Quits: qrpnxz (~qrpnxz@user/qrpnxz) (Quit: Gateway shutdown)
[02:11:02] *** Joins: llorllale (~llorllale@198.98.119.85)
[02:11:09] *** Parts: borrougagnou (~borrougag@91.134.153.132) ()
[02:11:49] *** Joins: borrougagnou (~borrougag@91.134.153.132)
[02:12:02] *** Quits: Praise (~Fat@user/praise) (Ping timeout: 240 seconds)
[02:12:47] *** Joins: Praise (~Fat@user/praise)
[02:14:17] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:655c:94b:918d:9e34) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[02:15:58] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 250 seconds)
[02:16:02] *** Quits: epony (~epony@user/epony) (Ping timeout: 240 seconds)
[02:16:57] *** Quits: eXtr3m0_ (~eXtr3m0@p4fd3a0d7.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[02:18:34] *** Quits: roshanavand (~roshanava@185.213.155.232) (Remote host closed the connection)
[02:18:58] <borrougagnou> Hello, I have a little problem... I have a code, but... but ! IDK how can I debug that, I don't have any variable... : https://i.imgur.com/g5Jbrl9.png
[02:19:35] <borrougagnou> and this is my message error: "Expirator Error: EOF" : https://i.imgur.com/xjAMOAC.png
[02:20:10] <b0nn> borrougagnou: pasteEpirator.ErrorChannel is a channel that you are reading
[02:20:35] <b0nn> you will need to find what is writing to that channel to discover where the error is being generated
[02:21:05] <KirkMcDonald> Not to mention, a lot of the time, EOF shouldn't be considered an actual "error."
[02:21:49] *** Quits: connor_k (~connor_k@ip68-102-25-198.ks.ok.cox.net) (Ping timeout: 240 seconds)
[02:21:57] <borrougagnou> yes, and I looking for how can I see what is written
[02:22:41] <b0nn> my /guess/ is that it's a fan in which is going to be painful
[02:23:03] *** Parts: rk4 (~r@user/rk4) ()
[02:23:47] <borrougagnou> KirkMcDonald sure, but I want to debug this code, I don't have this bug in old golang version, that's why
[02:26:34] *** Quits: Asgaroth (~Asgaroth@93.107.191.92) (Quit: Leaving)
[02:26:37] *** Quits: shka (~herr@109.231.0.226) (Ping timeout: 240 seconds)
[02:27:05] *** Joins: connor_k (~connor_k@ip68-102-25-198.ks.ok.cox.net)
[02:31:46] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e5ab:a286:27f1:6ff2)
[02:33:37] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[02:33:51] *** Joins: mickey8 (~user@user/mickey)
[02:34:09] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[02:35:33] *** Quits: mug3n_ (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 276 seconds)
[02:36:00] *** Joins: mug3n_ (~mugen@gateway/tor-sasl/mugen)
[02:38:13] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 240 seconds)
[02:40:00] *** Joins: admin123 (~harrymore@47.23.53.26)
[02:43:03] *** Joins: bluedust (~bluedust@103.160.233.28)
[02:44:19] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Ping timeout: 250 seconds)
[02:45:17] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Quit: WeeChat 3.4)
[02:47:33] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[02:47:49] *** Quits: bluedust (~bluedust@103.160.233.28) (Ping timeout: 240 seconds)
[02:51:08] *** Joins: rcernin (~rcernin@124.190.132.36)
[02:51:19] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[02:51:56] *** Quits: connor_k (~connor_k@ip68-102-25-198.ks.ok.cox.net) (Quit: So long!)
[02:53:06] *** Joins: epony (epony@user/epony)
[02:54:08] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[02:54:30] *** Joins: connor_k (~connor_k@ip68-102-25-198.ks.ok.cox.net)
[02:54:56] *** Quits: khyr0n (~khyr0n@2806:2f0:9140:74dd:96ca:88f8:f549:5799) (Ping timeout: 245 seconds)
[02:57:19] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[03:03:48] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[03:10:53] *** Quits: rcernin (~rcernin@124.190.132.36) (Ping timeout: 256 seconds)
[03:12:36] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 2.8)
[03:16:13] *** Quits: cation (cation@user/cation) (Ping timeout: 256 seconds)
[03:19:00] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[03:20:27] *** Joins: cation (cation@user/cation)
[03:25:38] *** Joins: khyr0n (~khyr0n@200.68.159.114)
[03:27:50] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[03:27:54] *** Quits: adip (~adip@crd88.neoplus.adsl.tpnet.pl) (Ping timeout: 250 seconds)
[03:28:05] *** Joins: mickey8 (~user@user/mickey)
[03:32:43] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[03:36:04] *** Quits: acohn (~acohn@wikipedia/alex-cohn) (Quit: TTFN)
[03:37:44] *** Joins: acohn (acohn@wikipedia/alex-cohn)
[03:39:37] *** Joins: rcernin (~rcernin@124.190.132.36)
[03:43:25] *** Quits: admin123 (~harrymore@47.23.53.26) (Ping timeout: 256 seconds)
[03:46:57] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 250 seconds)
[03:51:43] *** Joins: xiongxin (~Thunderbi@223.104.63.186)
[04:01:33] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[04:02:08] <moldorcoder7_> what is the best way to convert a []interface{} to []string ?
[04:02:14] <moldorcoder7_> is it possible in 1 line ?
[04:03:38] <A_Dragon> why do you have a []interface{}?
[04:03:39] *** Joins: fikran (~fikran@user/fikran)
[04:03:48] <b0nn> you can only 'convert' it via type assertion, and you'd have to loop over every interface{}
[04:04:09] <b0nn> each interface{} can be anything, including a []string{} itself
[04:05:32] <moldorcoder7_> b0nn, ok thanks
[04:05:44] <moldorcoder7_> A_Dragon, lib output
[04:05:53] <A_Dragon> is it a lib you can change?
[04:07:12] <b0nn> bob:=[]string{}; for _, iface := range []interface{} {if t, ok := iface.(string); ok { bob = append(bob, t)}}}
[04:07:29] <b0nn> That will skip over any that aren't strings
[04:07:50] <moldorcoder7_> ok nice
[04:07:58] <moldorcoder7_> A_Dragon, no it is gojq
[04:08:12] <A_Dragon> wolfdale: does it have a place to... not do that?
[04:10:17] *** Quits: hgl (hgl@user/hgl) (Quit: Bye)
[04:12:00] <borrougagnou> there are a "tostring" function in golang?
[04:12:11] <borrougagnou> *back again,
[04:12:17] <b0nn> Stringer interface
[04:12:45] <b0nn> So, a Type can implement the Stringer interface, and have a String method attached, but it's not /required/
[04:13:07] <b0nn> What are you trying to do?
[04:13:20] <b0nn> Sometimes fmt can help out
[04:15:55] <borrougagnou> also I try to found something similar to "dir" in python https://docs.python.org/3/library/functions.html#dir
[04:16:13] <borrougagnou> something to list function/variable related to an object
[04:16:54] <borrougagnou> so, I thought try convert everything in "tostring" to make everything more "visible"
[04:17:21] <b0nn> The /easiest/ id fmt.Printf("%#v\n", t)
[04:17:53] <b0nn> that's a print to stdout of the type with field names and values (if a map/struct
[04:18:09] <b0nn> I'm assuming this is a debugging isuue
[04:18:34] <borrougagnou> "%#v" ???
[04:18:48] <borrougagnou> @b0
[04:19:16] <borrougagnou> b0nn, seem like something I try to looking for :), I'll test that
[04:19:23] <b0nn> https://pkg.go.dev/fmt
[04:19:36] <borrougagnou> because I have an object, who depend about another object, who depend about another object...
[04:19:51] <b0nn> There's a list of all the 'verbs' that can be used in a fmt statement (some fmt calls don't like any verbs though)
[04:20:20] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[04:24:38] *** Quits: rcernin (~rcernin@124.190.132.36) (Ping timeout: 260 seconds)
[04:25:06] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e5ab:a286:27f1:6ff2) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[04:27:00] *** Joins: pmcnabb2 (~pmcnabb@user/pmcnabb)
[04:27:09] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (Read error: Connection reset by peer)
[04:27:10] *** pmcnabb2 is now known as pmcnabb
[04:35:12] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Read error: Connection reset by peer)
[04:36:20] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[04:38:56] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[04:39:39] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:46:01] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:47:25] *** Quits: khyr0n (~khyr0n@200.68.159.114) (Ping timeout: 240 seconds)
[04:47:36] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:47:37] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 240 seconds)
[04:49:39] *** Joins: girafe2 (~girafe@176-147-142-235.abo.bbox.fr)
[04:51:14] *** Joins: blinux (~blinux@pool-108-48-11-122.washdc.fios.verizon.net)
[04:52:37] *** Quits: girafe (~girafe@176-147-142-235.abo.bbox.fr) (Ping timeout: 240 seconds)
[04:52:53] *** Quits: xiongxin (~Thunderbi@223.104.63.186) (Remote host closed the connection)
[05:03:09] *** Joins: connor_k6 (~connor_k@ip68-102-25-198.ks.ok.cox.net)
[05:05:23] *** Quits: connor_k (~connor_k@ip68-102-25-198.ks.ok.cox.net) (Ping timeout: 250 seconds)
[05:05:23] *** connor_k6 is now known as connor_k
[05:06:35] <moldorcoder7_> what is the process that allow a lvalue of := operator on map to be   x := mymap or x, ok := mymap
[05:06:46] <moldorcoder7_> this is just because it is a builtin type ?
[05:07:46] <b0nn> yeah that looks like a parser says "if two, then it's assigning from the maps contents, and if one it's assigning the map itself
[05:09:47] <moldorcoder7_> ok understood
[05:10:53] *** A_Dragon is now known as [
[05:10:59] *** [ is now known as A_Dragon
[05:20:37] *** Quits: itsalexjones (~itsalexjo@82.4.99.241) (Read error: Connection reset by peer)
[05:28:50] *** Joins: treeford (~charleste@user/treeford)
[05:32:26] *** Quits: wkalt (~wkalt@user/wkalt) (Ping timeout: 245 seconds)
[05:33:00] *** Joins: wkalt (~wkalt@user/wkalt)
[05:33:21] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 256 seconds)
[05:34:22] *** Quits: krux02 (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de) (Remote host closed the connection)
[05:38:03] <moldorcoder7_> is there any somple way to convert a primitive.M from mongo into
[05:38:16] <moldorcoder7_> a map[string]{interface}
[05:39:17] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 240 seconds)
[05:41:56] *** Joins: califax- (~califax@user/califx)
[05:44:13] <moldorcoder7_> ok map[string]interface{}() actually works
[05:46:39] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[05:46:39] *** califax- is now known as califax
[05:48:18] *** Joins: xiongxin (~Thunderbi@2409:8955:3850:4ca2:dc9b:8c36:4d00:3b8d)
[05:48:52] *** Quits: xiongxin (~Thunderbi@2409:8955:3850:4ca2:dc9b:8c36:4d00:3b8d) (Client Quit)
[05:50:14] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:55:08] *** Quits: aidalgol (~aidalgol@user/aidalgol) (Ping timeout: 256 seconds)
[05:58:44] *** Joins: adtac (~adtac@192.159.181.180)
[05:59:08] *** Quits: adtac (~adtac@192.159.181.180) (Client Quit)
[05:59:25] *** Joins: adtac (~adtac@192.159.181.180)
[06:01:08] *** Quits: justGhost (~justache@user/justache) (Remote host closed the connection)
[06:02:41] *** Joins: justGhost (~justache@user/justache)
[06:08:00] *** Quits: blinux (~blinux@pool-108-48-11-122.washdc.fios.verizon.net) (Quit: WeeChat 3.4)
[06:08:54] *** Joins: blinux (~blinux@pool-108-48-11-122.washdc.fios.verizon.net)
[06:10:49] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[06:13:00] *** Joins: fikran (~fikran@user/fikran)
[06:18:18] *** Quits: meinside (uid24933@id-24933.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[06:23:19] *** Quits: salem (~salem@pool-98-111-206-141.pitbpa.fios.verizon.net) (Quit: ZNC 1.8.2 - https://znc.in)
[06:25:09] *** Joins: salem (~salem@pool-98-111-206-141.pitbpa.fios.verizon.net)
[06:47:27] *** Quits: nattiestnate (~nate@2001:448a:4063:1cc8:3706:7ea7:62f5:aeaf) (Quit: WeeChat 3.4)
[06:49:10] *** Joins: aidalgol (~aidalgol@user/aidalgol)
[06:49:25] *** Joins: girafe3 (~girafe@176-147-142-235.abo.bbox.fr)
[06:49:43] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[06:52:41] *** Quits: girafe2 (~girafe@176-147-142-235.abo.bbox.fr) (Ping timeout: 256 seconds)
[06:53:57] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 240 seconds)
[07:00:47] <Church> Possibly stupid question, there a known way to vendor packages repositores such as "golang.org/" for offline(lan) only use? Ideally looking to be able to serve them up from a web server at home to my own dev devices when needed
[07:14:23] *** novns_ is now known as novns
[07:19:50] *** Joins: bluedust (~bluedust@103.160.233.28)
[07:23:02] <b0nn> Church: I don't understand why you need to vendor golang.org - as they're part of the distribution
[07:23:49] <b0nn> I suspect that there's  more to your question, though, so it might help people wanting to help if you expand a bit and explain what you are trying to do, and what problems you are facing
[07:25:10] <Church> Sigh... okay so that's a misunderstanding on my part then, I thought golan.org namespaced packages weren't bundle with a golang release. Reason for asking is I'll be out camping for a few weeks but still want to do some development when time permits despite the lack of net connection.
[07:26:18] <b0nn> I mean, you can git clone and use that if you need
[07:26:28] <b0nn> but you will have to sort your local DNS out
[07:27:35] <b0nn> oh, hmm, I think that you mean everything you can find on golang.org
[07:27:47] <b0nn> I was thinking that you just mean standard library
[07:28:05] <b0nn> meant*
[07:30:35] <b0nn> Church: I think that you will need to know in advance what 3rd party things you will be using
[07:39:41] *** Quits: bluedust (~bluedust@103.160.233.28) (Remote host closed the connection)
[07:41:51] *** Quits: R2robot (~R2robot@user/r2robot) (Quit: Pull the lever, Kronk.  Wrong leverrrrrrr!)
[07:44:07] *** Joins: R2robot (~R2robot@user/r2robot)
[07:48:47] *** Quits: adtac (~adtac@192.159.181.180) (Ping timeout: 256 seconds)
[07:50:24] *** Quits: crashrep (~crashrep@user/crashrep) (Remote host closed the connection)
[07:50:49] *** Joins: crashrep (~crashrep@user/crashrep)
[07:53:44] *** Quits: crashrep (~crashrep@user/crashrep) (Client Quit)
[07:59:01] *** Joins: nattiestnate (~nate@2001:448a:4063:1cc8:3706:7ea7:62f5:aeaf)
[08:05:52] *** Joins: rcernin (~rcernin@124.190.132.36)
[08:18:40] *** Joins: adip (~adip@crd88.neoplus.adsl.tpnet.pl)
[08:20:21] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[08:22:21] *** Joins: fikran (~fikran@user/fikran)
[08:39:23] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[08:41:28] *** Joins: hanzo (uid532183@user/hanzo)
[08:46:13] *** Joins: bluedust (~bluedust@103.160.233.28)
[08:49:04] *** Quits: bluedust (~bluedust@103.160.233.28) (Remote host closed the connection)
[08:49:32] *** Joins: ghost08 (~ghost08@adsl-dyn-18.95-102-48.t-com.sk)
[08:59:20] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 252 seconds)
[09:05:51] *** Joins: k8yun (~k8yun@user/k8yun)
[09:08:45] *** Joins: gevreeen (~gevreeen@2001:470:67:326:2018:6312:3f96:2bea)
[09:08:46] *** Joins: catbeard (~noise@user/catbeard)
[09:20:57] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Ping timeout: 240 seconds)
[09:27:25] *** Joins: ekathva (~ekathva@2001:999:50:cab1:c9df:9caf:a34b:ef34)
[09:33:58] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[09:34:30] *** Quits: normen (~normen@p200300d717235c002cdbf8256f049097.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[09:41:27] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[09:45:36] *** Quits: nattiestnate (~nate@2001:448a:4063:1cc8:3706:7ea7:62f5:aeaf) (Quit: WeeChat 3.4)
[09:48:23] *** Quits: pepee (~pepee@user/pepee) (Quit: WeeChat 2.8)
[09:49:56] *** Joins: caracul0 (~caracul0@user/caracul0)
[09:50:04] <caracul0> yo
[09:51:18] *** Parts: caracul0 (~caracul0@user/caracul0) ()
[09:58:53] *** Quits: rcernin (~rcernin@124.190.132.36) (Ping timeout: 256 seconds)
[09:59:23] *** Joins: rcernin (~rcernin@124.190.132.36)
[10:00:37] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[10:01:59] *** Joins: normen (~normen@p200300d717235c00e1115fcbd10ae48b.dip0.t-ipconnect.de)
[10:08:32] *** Quits: rcernin (~rcernin@124.190.132.36) (Ping timeout: 240 seconds)
[10:08:37] <Church> b0nn: Realizing I just want to set up a go modules proxy heh
[10:15:10] *** Joins: khyr0n (~khyr0n@2806:2f0:9140:74dd:96ca:88f8:f549:5799)
[10:21:37] <b0nn> Church: heh, phew, I was worried I had set you up with bad advice, and you'd get out in the middel of nowhere - try to do some coding, and... err b0nn told me!!!!
[10:23:54] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:bda0:c15:70c8:55a9)
[10:24:20] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 250 seconds)
[10:25:32] <Church> Haha
[10:29:31] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[10:29:43] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[10:31:42] *** Joins: fikran (~fikran@user/fikran)
[10:32:32] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 240 seconds)
[10:42:43] *** Joins: jcajka (~jcajka@89-24-144-111.customers.tmcz.cz)
[10:49:50] *** Joins: bluedust (~bluedust@103.160.233.28)
[10:54:39] *** Quits: bluedust (~bluedust@103.160.233.28) (Ping timeout: 256 seconds)
[10:57:50] *** Joins: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de)
[11:06:54] *** Quits: lechner (~lechner@debian/lechner) (Ping timeout: 260 seconds)
[11:10:40] *** Joins: mrig (~mrig@user/mrig)
[11:13:30] *** Joins: bkircher (~bkircher@2001:a61:24c9:9301:1a3a:3a9f:5d9f:ccbb)
[11:16:19] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:bda0:c15:70c8:55a9) (Ping timeout: 250 seconds)
[11:18:36] *** Joins: shka (~herr@109.231.0.226)
[11:20:29] *** Joins: caimeo (uid540603@id-540603.lymington.irccloud.com)
[11:21:07] *** Parts: caimeo (uid540603@id-540603.lymington.irccloud.com) ()
[11:21:18] *** Joins: caimeo (uid540603@id-540603.lymington.irccloud.com)
[11:22:16] *** Parts: caimeo (uid540603@id-540603.lymington.irccloud.com) ()
[11:27:11] *** Joins: Ergo^ (~ergo@91.238.59.144)
[11:29:17] *** Joins: saschagrunert (~saschagru@46.128.124.48)
[11:29:23] *** Joins: absc (~absc@81.31.144.28)
[11:29:24] *** Quits: saschagrunert (~saschagru@46.128.124.48) (Remote host closed the connection)
[11:33:31] *** Joins: saschagrunert (~saschagru@46.128.124.48)
[11:40:57] *** Joins: xsteadfastx (~marv@94.31.99.245)
[11:43:57] *** Joins: fef (~thedawn@user/thedawn)
[11:46:46] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[11:49:55] *** Quits: Ergo^ (~ergo@91.238.59.144) (Quit: WeeChat 2.8)
[11:50:39] *** Joins: rendar (~rendar@user/rendar)
[11:51:16] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[11:53:17] *** Quits: jhulten_ (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[11:58:40] *** Joins: yagamilito (~yagamilit@2601:642:4600:34b0:eca3:e8ef:dc44:7c0)
[12:01:15] <yagamilito> hello
[12:01:15] <yagamilito> i am trying to run this in aws lambda
[12:01:16] <yagamilito> https://go.dev/play/p/gQvso5rOJ_T
[12:01:16] <yagamilito> but lambda keep failing
[12:01:17] <yagamilito> with error
[12:01:17] <yagamilito> `Runtime exited with error: exit status 1`
[12:01:18] <yagamilito> i think code is running till line 90 because it is printing the username in log
[12:01:18] <yagamilito> when i google the error it says memory leak
[12:01:19] <yagamilito> i am not sure what it is
[12:01:19] <yagamilito> how can i fix this
[12:01:20] <yagamilito> Thanks
[12:09:49] *** Quits: jack_rabbit (~knusbaum@23.249.37.254) (Ping timeout: 240 seconds)
[12:17:40] *** Joins: dr0n (~nabromov@92.40.255.115.threembb.co.uk)
[12:18:15] *** Joins: knusbaum (~knusbaum@23.249.37.254)
[12:21:06] *** Quits: mnx|aw (~nabromov@92.40.255.115.threembb.co.uk) (Ping timeout: 260 seconds)
[12:25:25] *** Joins: marius2 (~marius_m@80.91.33.151)
[12:25:25] <zutt> yagamilito: I'm just guessing here, but I'm guessing the problem is with the aws session
[12:26:14] <zutt> use `var sess = session.Must(session.NewSession())` instead to create the session (.New is deprecated, it fails when you try to use it, but not before - Newsession will fail if its incorrect when you create it)
[12:26:16] <zutt> https://pkg.go.dev/github.com/aws/aws-sdk-go/aws/session#Must
[12:26:44] *** marius2 is now known as marius_m
[12:28:06] *** Parts: dr0n (~nabromov@92.40.255.115.threembb.co.uk) ()
[12:28:17] *** Joins: dr0n (~nabromov@92.40.255.115.threembb.co.uk)
[12:30:13] *** Joins: arinov_ (~arinov@213.194.126.155)
[12:31:38] *** Joins: leonarth (~leonarth@user/leonarth)
[12:32:40] *** Quits: yagamilito (~yagamilit@2601:642:4600:34b0:eca3:e8ef:dc44:7c0) (Quit: Client closed)
[12:36:55] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[12:37:14] *** Quits: popey (~popey@ubuntu/member/popey) (Quit: Ping timeout (120 seconds))
[12:37:35] *** Joins: popey (~popey@ubuntu/member/popey)
[12:51:33] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e5ab:a286:27f1:6ff2)
[12:54:47] *** Quits: flughafen (~flughafen@p57969651.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[13:00:45] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[13:01:06] *** Joins: mickey8 (~user@user/mickey)
[13:07:24] *** Joins: flughafen (~flughafen@p2e55d144.dip0.t-ipconnect.de)
[13:16:50] *** Joins: shtirlic (~shtirlic@95-55-121-47.dynamic.avangarddsl.ru)
[13:27:51] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[13:38:53] *** Joins: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net)
[13:39:52] *** Quits: willow (~willow@user/willow) (Quit: willow)
[13:41:25] *** Quits: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net) (Client Quit)
[13:50:15] *** Joins: dingdreher (~dingdrehe@2a02:aa08:401e:fff2:35f4:c0a:127c:c6a0)
[13:52:50] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[14:02:35] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e5ab:a286:27f1:6ff2) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[14:19:49] *** Joins: masoudd (~masoudd@user/masoudd)
[14:28:37] *** Joins: krux02 (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de)
[14:29:52] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e5ab:a286:27f1:6ff2)
[14:30:43] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8)
[14:33:33] *** Quits: dingdreher (~dingdrehe@2a02:aa08:401e:fff2:35f4:c0a:127c:c6a0) (Quit: dingdreher)
[14:35:36] *** Joins: bluedust (~bluedust@103.160.233.28)
[14:46:32] <mickey8> when using csv.NewReader(), can I somehow make it recognize the file as having BOM (i.e. the \ufeff in the beginning of the file)? because right now it reads it with it and corrupting my column name
[14:49:51] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[14:52:50] *** Quits: phylaz (~phylaz@82.51-174-55.customer.lyse.net) (Remote host closed the connection)
[14:54:36] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Read error: Connection reset by peer)
[14:57:57] *** Joins: Midjak2 (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[14:59:16] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[15:00:43] <bookworm> mickey8: add another reader that wraps the file and removes the BOM marker
[15:03:17] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 240 seconds)
[15:03:28] <huf> github.com/dimchansky/utfbom ?
[15:05:01] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Quit: Leaving)
[15:06:54] *** Joins: aLeSD (~aLeSD@139.47.114.114)
[15:07:01] <aLeSD> hi all
[15:07:53] <aLeSD> is it possible to make aa attribute of a type of an external library to not be marshaled ?
[15:08:04] *** Quits: masoudd (~masoudd@user/masoudd) (Quit: Leaving)
[15:08:07] *** Joins: phylaz (~phylaz@82.51-174-55.customer.lyse.net)
[15:09:06] <aLeSD> for example I have a type A struct { B string; C string } ... how I could make C not marshaled without modify the definition of the type
[15:09:56] <ikke> Attributes
[15:11:29] <bookworm> the point here is external though
[15:12:03] <bookworm> and in that case, you need to wrap the type and add your own marshaler I think
[15:13:28] *** Quits: ghost08 (~ghost08@adsl-dyn-18.95-102-48.t-com.sk) (Quit: WeeChat 3.4)
[15:20:44] *** Quits: Midjak2 (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: Leaving)
[15:21:22] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[15:26:05] *** Quits: arinov_ (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[15:31:57] *** Quits: gevreeen (~gevreeen@2001:470:67:326:2018:6312:3f96:2bea) (Ping timeout: 240 seconds)
[15:34:54] *** Joins: masoudd (~masoudd@user/masoudd)
[15:36:17] *** Quits: shtirlic (~shtirlic@95-55-121-47.dynamic.avangarddsl.ru) (Ping timeout: 256 seconds)
[15:38:04] *** Joins: ar324 (~ar324@user/ar324)
[15:39:39] *** Quits: saschagrunert (~saschagru@46.128.124.48) (Remote host closed the connection)
[15:47:09] *** Quits: bluedust (~bluedust@103.160.233.28) (Remote host closed the connection)
[15:54:02] *** Quits: henry40408 (~henry4040@123-204-141-191.adsl.dynamic.seed.net.tw) (Ping timeout: 240 seconds)
[15:56:14] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8) (Ping timeout: 252 seconds)
[15:56:28] *** Joins: bluedust (~bluedust@103.160.233.28)
[15:57:11] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8)
[15:58:33] *** Quits: ar324 (~ar324@user/ar324) (Quit: Client closed)
[15:59:41] *** Joins: bluedust_ (~bluedust@185.248.85.42)
[16:00:09] *** Quits: ugjka (~ugjka@ugjka.net) (Quit: Rabooting the server https://ugjka.net)
[16:01:18] *** Joins: ugjka (~ugjka@ugjka.net)
[16:02:37] *** Quits: bluedust (~bluedust@103.160.233.28) (Ping timeout: 240 seconds)
[16:03:01] <aLeSD> bookworm ok thanks
[16:03:06] *** Joins: shtirlic (~shtirlic@95-55-121-47.dynamic.avangarddsl.ru)
[16:07:00] *** Joins: henry40408 (~henry4040@123-204-141-191.adsl.dynamic.seed.net.tw)
[16:33:23] *** Joins: beholders_eye (~weechat@2804:1b3:70c0:dd0f:af2e:17ab:1d93:8cb0)
[16:34:36] *** Joins: tg (~tg@rockylinux/infra/tg)
[16:37:58] *** Quits: mrig (~mrig@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[16:46:21] *** Joins: Everything (~Everythin@37.115.210.35)
[16:47:34] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-9959-7557-180e-ce0c.res6.spectrum.com)
[16:51:44] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8) (Ping timeout: 250 seconds)
[16:52:17] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8)
[16:56:14] *** Joins: arkurious (~arkurious@user/arkurious)
[17:02:01] *** Quits: shtirlic (~shtirlic@95-55-121-47.dynamic.avangarddsl.ru) (Ping timeout: 245 seconds)
[17:03:11] *** Joins: schugdev (~schugdev@62.156.151.9)
[17:03:50] *** Joins: ar324 (~ar324@user/ar324)
[17:13:32] *** Joins: mrig (~mrig@user/mrig)
[17:14:18] *** Joins: shtirlic (~shtirlic@95-55-121-47.dynamic.avangarddsl.ru)
[17:14:52] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e5ab:a286:27f1:6ff2) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[17:21:20] *** Joins: iptable (~iptable@host-80-41-139-172.as13285.net)
[17:28:30] *** Joins: bluedust (~bluedust@103.160.233.28)
[17:32:01] *** Quits: bluedust_ (~bluedust@185.248.85.42) (Ping timeout: 245 seconds)
[17:37:14] *** Quits: henry40408 (~henry4040@123-204-141-191.adsl.dynamic.seed.net.tw) (Quit: The Lounge - https://thelounge.chat)
[17:46:07] *** Quits: ekathva (~ekathva@2001:999:50:cab1:c9df:9caf:a34b:ef34) (Quit: Leaving)
[17:46:54] *** Quits: epony (epony@user/epony) (Read error: Connection reset by peer)
[17:47:11] *** Quits: xsteadfastx (~marv@94.31.99.245) (Ping timeout: 256 seconds)
[17:49:17] *** Joins: treeford (~charleste@user/treeford)
[17:50:45] *** Quits: schugdev (~schugdev@62.156.151.9) (Quit: Connection closed)
[17:59:04] *** Quits: ar324 (~ar324@user/ar324) (Quit: Client closed)
[18:02:29] *** Joins: schugdev (~schugdev@62.156.151.9)
[18:08:10] *** Quits: Techcable (~Techcable@168.235.93.147) (Remote host closed the connection)
[18:08:18] *** Joins: Techcable (~Techcable@168.235.93.147)
[18:08:47] *** Quits: beholders_eye (~weechat@2804:1b3:70c0:dd0f:af2e:17ab:1d93:8cb0) (Quit: WeeChat 3.3)
[18:10:51] *** Joins: fikran (~fikran@user/fikran)
[18:14:39] *** Joins: bluedust_ (~bluedust@59.99.180.71)
[18:14:56] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[18:15:07] *** Joins: pepee (~pepee@user/pepee)
[18:17:47] *** Quits: bluedust (~bluedust@103.160.233.28) (Ping timeout: 256 seconds)
[18:18:03] *** Quits: mug3n_ (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 276 seconds)
[18:22:43] <sailorCat> .Ð´ÑˆÑ‹Ðµ
[18:23:07] <sailorCat> ^^^ignore it ,please
[18:24:15] <pyzozord> hey, is there an elegant way to do f123 = fold([f1, f2, f3]) // same as f123(args) { return f3(f2(f1(...args) }
[18:25:42] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e5ab:a286:27f1:6ff2)
[18:26:01] *** Parts: gnoirzox1 (~gnoirzox@178.170.103.136) ()
[18:26:44] *** Joins: gnoirzox (~gnoirzox@178.170.103.136)
[18:28:38] <since_> i thought fold does something different
[18:28:59] <pyzozord> i might be using wrong name
[18:29:07] <ikke> fold is reduce
[18:29:19] <ikke> Seems you meant currying
[18:29:52] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e5ab:a286:27f1:6ff2) (Client Quit)
[18:31:08] <since_> function composition
[18:31:32] <since_> ikke: currying would be different
[18:33:13] <pyzozord> whatver the name is
[18:34:37] <bookworm> as long as the functions have the same signature, yes else not really
[18:34:47] <pyzozord> yes, same signature
[18:36:58] <bookworm> https://github.com/justinas/alice
[18:37:02] <bookworm> for instance
[18:37:09] <bookworm> (the pattern, not the lib)
[18:38:56] *** Joins: neurocyte0917090 (~neurocyte@IP-045010063119.dynamic.medianet-world.de)
[18:38:56] *** Quits: neurocyte0917090 (~neurocyte@IP-045010063119.dynamic.medianet-world.de) (Changing host)
[18:38:56] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[18:39:49] <bookworm> you can of course simplify that considerably if you can guarantee that you get all functions in the constructor
[18:39:56] <since_> pyzozord: https://go.dev/play/p/5pVwfKL2hob
[18:41:15] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Read error: Connection reset by peer)
[18:42:01] *** Joins: neurocyte0917090 (~neurocyte@IP-045010063119.dynamic.medianet-world.de)
[18:42:01] *** Quits: neurocyte0917090 (~neurocyte@IP-045010063119.dynamic.medianet-world.de) (Changing host)
[18:42:01] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[18:42:15] <pyzozord> ok so it's a DIY situation?
[18:42:28] <bookworm> welcome to go
[18:42:39] <bookworm> and it's 4 lines of code... so
[18:42:51] *** Quits: flughafen (~flughafen@p2e55d144.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[18:43:06] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8) (Ping timeout: 250 seconds)
[18:43:08] <since_> pyzozord: i would just write f3(f2(f1(x))) if i was you :D
[18:43:22] *** Joins: henry40408 (~henry4040@123-204-141-191.adsl.dynamic.seed.net.tw)
[18:43:25] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8)
[18:43:48] *** Joins: epony (epony@user/epony)
[18:44:10] <since_> bookworm: 4 lines * 100 types :D
[18:44:56] <bookworm> go doesn't really do functional style... if you want that why on eart are you using go? Elixir or Erlang might be better suited then
[18:45:38] <bookworm> so chances are you don't need it for 100 types in go
[18:45:46] *** Quits: teasea (~teasea@user/teasea) (Quit: teasea)
[18:45:57] <bookworm> but only in very specific cases (see middlewares in http handlers)
[18:46:18] <bookworm> and with generics you can even write it once as well
[18:46:49] *** Joins: teasea (~teasea@user/teasea)
[18:47:15] *** Quits: llorllale (~llorllale@198.98.119.85) (Ping timeout: 256 seconds)
[18:48:13] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 240 seconds)
[18:48:58] *** Quits: teasea (~teasea@user/teasea) (Client Quit)
[18:50:06] *** Quits: schugdev (~schugdev@62.156.151.9) (Quit: Connection closed)
[18:50:16] <since_> pyzozord: go does not prefer unneccessary abstraction. makes cleaner and faster code that says what you are doing
[18:50:52] *** Joins: teasea (~teasea@user/teasea)
[18:51:57] *** Joins: schugdev (~schugdev@62.156.151.9)
[18:54:14] *** Quits: jcajka (~jcajka@89-24-144-111.customers.tmcz.cz) (Quit: Leaving)
[18:55:52] *** Joins: xsteadfastx (~marv@p200300d2df05c90008996ad6daaaf248.dip0.t-ipconnect.de)
[18:55:55] *** Joins: flughafen (~flughafen@p57969549.dip0.t-ipconnect.de)
[18:59:06] *** Joins: k8yun (~k8yun@user/k8yun)
[19:04:51] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[19:06:32] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[19:07:28] <pyzozord> how can I make in go type that is either struct or false?
[19:09:31] *** Quits: henry40408 (~henry4040@123-204-141-191.adsl.dynamic.seed.net.tw) (Quit: The Lounge - https://thelounge.chat)
[19:10:26] <fizzie> Not really a thing. Two conventional alternatives are either adding a `Valid bool` field, or using a pointer (either pointing to a struct or nil).
[19:11:12] <pyzozord> hmm but then that affects how I must model my javascript schema
[19:11:23] <pyzozord> I don't my language to affect my external data type
[19:11:42] <pyzozord> *json
[19:11:58] <pyzozord> what do people do in go when they need to handle json that can either be an object or a false?
[19:12:13] <bookworm> just translate between the js type and go when it comes in and when it goes somewhere else again
[19:12:14] <fizzie> A custom marshaller/unmarshaller, perhaps.
[19:13:05] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8) (Ping timeout: 256 seconds)
[19:14:45] *** Joins: yoonkn (~user@175.197.208.79)
[19:14:46] <fizzie> I kind of suspect encoding/json's default handling can not successfully unmarshal "object or false" into anything else than an interface{}.
[19:15:21] <fizzie> (Although are you sure you don't want "object or null" in the JSON too? Kind of sounds more natural for something that's either an object or the absence of an object.)
[19:15:39] <pyzozord> very sure I want "false"
[19:16:19] <bookworm> why?
[19:16:39] <bookworm> im js land null is just as falsey as false
[19:16:43] <bookworm> in*
[19:16:53] <pyzozord> those jsons are user interface, they are user facing configuration files expected to be editied manually
[19:17:05] <seebs> if something is being done in a language that has sum types, it makes sense for it to want a javascript file that has either struct-or-false, but Go doesn't do sum types
[19:17:17] <pyzozord> "corsOptions: false" makes sense "corsOptions: null" does not
[19:17:35] <pyzozord> I really want "falsy" value there
[19:17:47] <pyzozord> but if I can't get falsey value, I want false
[19:18:03] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8)
[19:18:13] *** Joins: henry40408 (~henry4040@123-204-141-191.adsl.dynamic.seed.net.tw)
[19:19:36] <fizzie> Personally as an alleged human I think "corsOptions: false" doesn't make any more sense than "corsOptions: null". For the former, my first thought is "it's 'options' plural, how can it be just 'false'?" And neither makes as much sense as just omitting the whole thing if there's nothing to say about it.
[19:20:26] <fizzie> But in any case, a type with a custom MarshalJSON/UnmarshalJSON method might be the closest.
[19:21:49] *** Quits: shokohsc (~shokohsc@lfbn-idf2-1-1472-129.w92-169.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[19:22:05] *** Quits: xsteadfastx (~marv@p200300d2df05c90008996ad6daaaf248.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[19:22:38] <pyzozord> btw what are those backticks next to struct fields?
[19:22:43] <pyzozord> those look like annotations
[19:24:10] *** Joins: shokohsc (~shokohsc@lfbn-idf2-1-1472-129.w92-169.abo.wanadoo.fr)
[19:24:32] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[19:24:48] <pyzozord> struct { field type `json:"foo"` }
[19:25:05] <pyzozord> does the default json unmarshaler use those?
[19:25:21] *** Joins: ikeaviking (~ikeavikin@caffeine.packetghost.com)
[19:25:40] *** Joins: gpeskens (~gpeskens@2001:985:7aa4:1:f4f7:e256:f206:c040)
[19:25:58] <fizzie> They're called tags, and it does.
[19:28:19] <pyzozord> how does it do it, via the reflection api?
[19:28:35] <bookworm> yes
[19:29:13] <pyzozord> I found that default json package has tag `json:"foo,omitempty"`, I think maybe I'll use that
[19:29:59] <fizzie> It can also convert numbers to strings, and skip fields entirely, that's I think the extent of what you can do to encoding/json via tags.
[19:30:11] <bookworm> rename
[19:30:34] <fizzie> I was kind of counting that under the foo half of the "foo,omitempty" example.
[19:31:01] *** Joins: xsteadfastx (~marv@p200300d2df05c90008996ad6daaaf248.dip0.t-ipconnect.de)
[19:33:59] *** Quits: ikeaviking (~ikeavikin@caffeine.packetghost.com) (Quit: The Lounge - https://thelounge.chat)
[19:36:12] *** Joins: tg_ (~tg@rockylinux/infra/tg)
[19:37:15] *** Quits: xsteadfastx (~marv@p200300d2df05c90008996ad6daaaf248.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[19:38:22] *** Quits: tg (~tg@rockylinux/infra/tg) (Ping timeout: 260 seconds)
[19:39:17] <pyzozord> need much more go practice
[19:39:33] <pyzozord> it's a very cool language and I kind of forgot what I learned already :(
[19:40:18] <pyzozord> like I don't remember how slices work, when do they expand?
[19:40:37] <pyzozord> there was something like it's length and it's capacity, I forgot all that
[19:40:46] <seebs> when an append requires them to, although to be picky, a slice never expands, it's just that sometimes you get a new slice back from append
[19:41:12] *** Joins: ikeaviking (~ikeavikin@caffeine.packetghost.com)
[19:42:18] *** Joins: crashrep (~crashrep@user/crashrep)
[19:42:22] *** Joins: epony (epony@user/epony)
[19:43:35] *** Quits: ikeaviking (~ikeavikin@caffeine.packetghost.com) (Read error: Connection reset by peer)
[19:45:28] <pyzozord> ooh neat
[19:45:34] <pyzozord> I didn't know that
[19:46:02] <pyzozord> and it has some fibonacci strategy for increasing capacity, or something like that, last I checked, right?
[19:46:22] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Remote host closed the connection)
[19:46:52] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[19:47:02] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[19:47:41] <fizzie> Not quite a Fibonacci one, it's just "2x for small slices, 1.25x for large ones".
[19:48:07] <fizzie> https://cs.opensource.google/go/go/+/master:src/runtime/slice.go;l=188-211;drc=d588f487703e773ba4a2f0a04f2d4141610bff6b
[19:48:43] *** Quits: marius_m (~marius_m@80.91.33.151) (Ping timeout: 250 seconds)
[19:48:44] <fizzie> (And of course that specific detail is not part of the specification, just the part where `append` will only grow it when necessary.)
[19:49:45] <pyzozord> I assumed that won't be part of the spec, but was curious about it's current strategy anyway
[19:52:41] *** Joins: epony (epony@user/epony)
[19:53:50] *** Joins: ikeaviking (~ikeavikin@caffeine.packetghost.com)
[19:59:47] *** Quits: ikeaviking (~ikeavikin@caffeine.packetghost.com) (Ping timeout: 256 seconds)
[20:02:37] *** Quits: shtirlic (~shtirlic@95-55-121-47.dynamic.avangarddsl.ru) (Ping timeout: 240 seconds)
[20:03:08] *** Quits: atstefan (~stefan@99-41-248-215.lightspeed.rcsntx.sbcglobal.net) (Remote host closed the connection)
[20:06:22] *** Joins: ikeaviking (~ikeavikin@caffeine.packetghost.com)
[20:06:26] *** Joins: shtirlic (~shtirlic@95-55-121-47.dynamic.avangarddsl.ru)
[20:09:58] *** Quits: yoonkn (~user@175.197.208.79) (Remote host closed the connection)
[20:11:37] *** Quits: ikeaviking (~ikeavikin@caffeine.packetghost.com) (Ping timeout: 240 seconds)
[20:14:48] *** Quits: bluedust_ (~bluedust@59.99.180.71) (Remote host closed the connection)
[20:17:38] *** Joins: Compy (~compy@user/compy)
[20:18:30] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[20:20:12] *** Joins: fikran (~fikran@user/fikran)
[20:21:09] *** Joins: ikeaviking (~ikeavikin@caffeine.packetghost.com)
[20:26:39] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 250 seconds)
[20:26:59] *** Quits: ikeaviking (~ikeavikin@caffeine.packetghost.com) (Ping timeout: 256 seconds)
[20:27:53] *** Quits: slowtyper (~slowtyper@user/slowtyper) (Ping timeout: 256 seconds)
[20:28:58] *** Joins: treeford (~charleste@user/treeford)
[20:29:12] *** Joins: slowtyper (~slowtyper@user/slowtyper)
[20:33:04] *** Quits: schugdev (~schugdev@62.156.151.9) (Quit: Connection closed)
[20:35:33] *** Quits: absc (~absc@81.31.144.28) (Quit: Leaving)
[20:36:15] *** Quits: iptable (~iptable@host-80-41-139-172.as13285.net) (Quit: Textual IRC Client: www.textualapp.com)
[20:40:11] *** Joins: beholders_eye (~weechat@2804:1b3:70c0:dd0f:af2e:17ab:1d93:8cb0)
[20:43:40] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 256 seconds)
[20:45:00] <lungaro_> does anyone know if there is a sqlite over http lib out there?
[20:45:29] <lungaro_> could be interesting for a specific use case where I publish a large blob of data but only care about a little bit of it for each node
[20:54:53] *** Quits: shtirlic (~shtirlic@95-55-121-47.dynamic.avangarddsl.ru) (Ping timeout: 252 seconds)
[20:55:43] *** Joins: yaraju (~yaraju@user/yaraju)
[20:58:53] *** Joins: slowtype- (~slowtyper@79.103.56.56.dsl.dyn.forthnet.gr)
[20:59:06] *** Joins: k8yun (~k8yun@user/k8yun)
[20:59:47] *** Quits: slowtyper (~slowtyper@user/slowtyper) (Ping timeout: 250 seconds)
[21:00:04] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[21:00:12] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[21:03:27] *** Quits: shokohsc (~shokohsc@lfbn-idf2-1-1472-129.w92-169.abo.wanadoo.fr) (Quit: The Lounge - https://thelounge.chat)
[21:07:42] *** Joins: slowtyper (~slowtyper@user/slowtyper)
[21:07:47] *** Quits: slowtype- (~slowtyper@79.103.56.56.dsl.dyn.forthnet.gr) (Ping timeout: 256 seconds)
[21:10:18] *** Quits: 074AAILK5 (Rhys@help.lux.melted.me) (Quit: R.I.P)
[21:11:03] *** Joins: treeford (~charleste@user/treeford)
[21:14:51] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[21:15:24] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 256 seconds)
[21:15:55] <A_Dragon> how about just send a blob rather than trying to share an entire databse
[21:16:00] <A_Dragon> database*
[21:19:39] *** Joins: shokohsc (~shokohsc@lfbn-idf2-1-1472-129.w92-169.abo.wanadoo.fr)
[21:21:36] *** Parts: pyzozord (pyzozord@user/pyzozord) ()
[21:21:56] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[21:24:30] *** Joins: treeford (~charleste@user/treeford)
[21:27:53] *** Quits: slowtyper (~slowtyper@user/slowtyper) (Ping timeout: 252 seconds)
[21:28:03] *** Joins: slowtype- (~slowtyper@79.103.227.82.dsl.dyn.forthnet.gr)
[21:28:33] *** Joins: bluedust (~bluedust@59.99.180.71)
[21:37:31] *** Joins: shtirlic (~shtirlic@95-55-121-47.dynamic.avangarddsl.ru)
[21:37:35] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[21:38:56] <lungaro_> it is my understanding that there is a way to use http range requests. I've done "send the blob" before
[21:39:08] <lungaro_> it's a little bit easier but is slower to update
[21:40:32] *** Quits: avemestr (~avemestr@2a01:4f8:121:228f::2) (Ping timeout: 252 seconds)
[21:44:57] *** Quits: k8yun (~k8yun@user/k8yun) (Ping timeout: 240 seconds)
[21:45:11] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 256 seconds)
[21:49:07] *** Joins: k8yun (~k8yun@user/k8yun)
[21:51:03] *** Joins: k8yun_ (~k8yun@user/k8yun)
[21:54:49] *** Quits: k8yun (~k8yun@user/k8yun) (Ping timeout: 250 seconds)
[21:56:26] *** Quits: k8yun_ (~k8yun@user/k8yun) (Quit: Leaving)
[21:58:23] *** Quits: faceonkeyboard (~faceonkey@anquietas.itsh.dev) (Quit: Bridge terminating on SIGTERM)
[22:00:12] *** Joins: faceonkeyboard (~faceonkey@anquietas.itsh.dev)
[22:03:08] *** Quits: bkircher (~bkircher@2001:a61:24c9:9301:1a3a:3a9f:5d9f:ccbb) (Quit: Leaving)
[22:09:46] *** Quits: bluedust (~bluedust@59.99.180.71) (Remote host closed the connection)
[22:09:50] *** Joins: solifugus_ (~solifugus@2603-7080-7a07-ac2a-96e2-638b-14fc-7419.res6.spectrum.com)
[22:10:07] *** Joins: bluedust (~bluedust@59.99.180.71)
[22:10:14] *** Quits: bluedust (~bluedust@59.99.180.71) (Read error: Connection reset by peer)
[22:11:27] *** Joins: treeford (~charleste@user/treeford)
[22:12:06] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[22:12:36] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[22:13:17] *** Quits: solifugus (~solifugus@2603-7080-7a07-ac2a-5541-a26a-085c-2ff8.res6.spectrum.com) (Ping timeout: 240 seconds)
[22:15:38] *** Quits: acosta (~acosta@163.172.62.165) (Quit: Ping timeout (120 seconds))
[22:18:14] *** Joins: acosta (~acosta@163.172.62.165)
[22:19:00] *** Quits: treeford (~charleste@user/treeford) (Quit: WeeChat 3.3)
[22:20:37] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e5ab:a286:27f1:6ff2)
[22:23:48] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Read error: Connection reset by peer)
[22:26:32] *** Quits: shtirlic (~shtirlic@95-55-121-47.dynamic.avangarddsl.ru) (Ping timeout: 240 seconds)
[22:26:59] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[22:27:41] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[22:28:32] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[22:29:33] *** Joins: fikran (~fikran@user/fikran)
[22:30:24] *** Joins: crashrep (~crashrep@user/crashrep)
[22:30:54] *** Joins: epony (epony@user/epony)
[22:32:51] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[22:34:40] *** Joins: califax (~califax@user/califx)
[22:35:27] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[22:38:14] *** Joins: k8yun (~k8yun@user/k8yun)
[22:38:38] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e5ab:a286:27f1:6ff2) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[22:40:58] *** Quits: slowtype- (~slowtyper@79.103.227.82.dsl.dyn.forthnet.gr) (Ping timeout: 256 seconds)
[22:41:26] *** Joins: slowtyper (~slowtyper@user/slowtyper)
[22:41:31] *** Joins: jpw (~jpw@user/jpw)
[22:41:58] *** Joins: marius_m (~marius_m@84.211.92.9)
[22:43:30] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: upps gotta get outta the universe atm)
[22:47:12] *** Quits: marius_m (~marius_m@84.211.92.9) (Ping timeout: 256 seconds)
[22:47:12] *** Joins: slowtype- (~slowtyper@2a02:214c:8635:c300:db7f:8a50:4683:57fa)
[22:47:57] *** Quits: slowtyper (~slowtyper@user/slowtyper) (Ping timeout: 240 seconds)
[22:54:02] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[22:57:05] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[23:00:15] *** Quits: normen (~normen@p200300d717235c00e1115fcbd10ae48b.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[23:00:41] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8) (Ping timeout: 250 seconds)
[23:01:20] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8)
[23:09:57] *** Joins: normen (~normen@pd9eec481.dip0.t-ipconnect.de)
[23:16:51] *** Joins: eXtr3m0 (~eXtr3m0@p4fd3ac5e.dip0.t-ipconnect.de)
[23:21:49] *** Joins: nornweave (~nornweave@h-213-136-39-104.A165.priv.bahnhof.se)
[23:23:43] <nornweave> alright what's the deal with the gopher and when will be finally be rid of it?
[23:25:32] <smlavine> gemini fan are you
[23:26:16] *** Quits: nornweave (~nornweave@h-213-136-39-104.A165.priv.bahnhof.se) (Quit: leaving)
[23:26:22] <foobaz> the deal is, rob pike married renee french
[23:29:22] <seebs> why would we want to be rid of the gopher
[23:30:09] <b0nn> I can't tab-complete the nick, so assumed it was just a hit and run troll
[23:30:38] *** Joins: nornweave (~nornweave@h-213-136-39-104.A165.priv.bahnhof.se)
[23:34:27] *** Joins: neurocyte0917090 (~neurocyte@IP-045010063119.dynamic.medianet-world.de)
[23:34:27] *** Quits: neurocyte0917090 (~neurocyte@IP-045010063119.dynamic.medianet-world.de) (Changing host)
[23:34:27] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[23:51:11] *** Joins: epony (epony@user/epony)
[23:56:37] *** Joins: slowtyper (~slowtyper@user/slowtyper)
[23:56:57] *** Quits: slowtype- (~slowtyper@2a02:214c:8635:c300:db7f:8a50:4683:57fa) (Ping timeout: 240 seconds)
[23:59:50] *** Quits: girafe3 (~girafe@176-147-142-235.abo.bbox.fr) (Read error: Connection reset by peer)
