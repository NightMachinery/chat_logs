[00:01:23] *** Joins: zeromule (~eric@2601:602:8d80:4e50:1527:dcc4:b220:1646)
[00:01:45] *** Joins: Pixi (~Pixi@user/pixi)
[00:03:40] <Decker> *shrug* https://d3x0r.github.io/STFRPhysics/  was really slow, and it's not really doing all that much math per pixel... https://d3x0r.github.io/STFRPhysics/3d/index.html this was much faster though and showed a lot more information
[00:03:54] *** Quits: sidj (~sidj@user/sidj) (Ping timeout: 260 seconds)
[00:04:08] <Decker> 800x600 can be fast enough - but that's not evne a 2k reoslution... forget 4k animations for canvas - at a putImageData level
[00:04:13] <Donitz> https://codepen.io/Donitz/pen/dyMZQMW
[00:04:16] <Donitz> yeah
[00:07:29] <systemfault> AFAIK, there are no serious JS games on the web...
[00:07:56] <systemfault> The closest thing to it are C++/C# games compiled to WASM so they can run in the browser.
[00:08:02] <earendel> its fast but. limited. for faster graphics you will need to run off browsers. and then it gets boring quicly i guess
[00:08:21] <Donitz> you can pre-render tons of stuff
[00:08:24] <Donitz> you can go really far with canvas
[00:08:29] <Donitz> making just about any type of 2d game
[00:08:46] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:09:31] *** Joins: sebastorama (~sebastora@190.83.56.68)
[00:09:32] <earendel> thats what i mean with yo can set the color of each pixel. allowing to render complex animations with 60fps on avarage machines.
[00:09:58] <earendel> but complex is still not as complex as modern high-end games run bare metal.
[00:10:24] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[00:10:50] <earendel> every child knows. that. so if there's some point to it, its that browsergraphics are - surprisingly - fast.
[00:11:08] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:8d40:e10d:37be:4ec7) (Ping timeout: 256 seconds)
[00:11:17] <earendel> protip: don't say you expected this.
[00:11:19] <earendel> (:
[00:11:28] <Donitz> and you can easily make stuff like this from just drawing shapes
[00:11:29] <Donitz> https://donitz.itch.io/noau
[00:12:40] *** Quits: Guest87 (~Guest87@46.109.76.104) (Quit: Connection closed)
[00:16:09] *** Joins: shokohsc868 (~shokohsc@179.106.23.93.rev.sfr.net)
[00:17:02] *** Joins: audiobirb (~audio@user/audio)
[00:17:11] *** Quits: shokohsc86 (~shokohsc@175.196.23.93.rev.sfr.net) (Ping timeout: 264 seconds)
[00:17:12] *** shokohsc868 is now known as shokohsc86
[00:18:11] *** Joins: dfip^ (~dfip@h50.174.139.63.static.ip.windstream.net)
[00:18:59] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 264 seconds)
[00:19:16] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[00:19:30] *** Joins: ThePhilgrim (~thephilgr@151.41.185.44)
[00:19:52] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:20:10] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:2588:c16b:466c:c93c)
[00:22:07] *** Joins: sidj (~sidj@78.192.48.242)
[00:23:19] *** Quits: sidj (~sidj@78.192.48.242) (Client Quit)
[00:24:03] *** Joins: teut (~teut@182.64.62.109)
[00:24:14] *** Joins: sidj (~sidj@78.192.48.242)
[00:24:14] *** Quits: sidj (~sidj@78.192.48.242) (Changing host)
[00:24:14] *** Joins: sidj (~sidj@user/sidj)
[00:28:28] *** Joins: tar_xvf (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com)
[00:30:54] *** Quits: eXistenZ (~biskit@2001:4df4:20b3:400:b4ba:1da6:a890:81fd) (Quit: Leaving)
[00:32:43] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:8d40:e10d:37be:4ec7)
[00:34:19] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[00:34:42] <stenno> consider the following:
[00:35:11] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[00:35:33] <stenno> const stream = await fetch('https://example.com/really/big/file', { method: 'GET' }).then(resp => resp.body);
[00:35:50] *** Quits: iffraff (~quassel@136.49.178.170) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:36:01] <stenno> is it correct that i get stream as soon as the download starts, not when the download is finished?
[00:37:26] *** Joins: sebastorama (~sebastora@190.83.56.68)
[00:39:43] <ljharb> stenno: huh? no
[00:39:50] <ljharb> stenno: the `await` means that the fetch has to finish first
[00:39:50] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 260 seconds)
[00:40:23] <stenno> ljharb: wait so how do i do file streaming in the client then
[00:42:16] <Alexendoo> fetch() itself doesn't wait for the body so that would be fine
[00:42:44] <stenno> hmm but the .then cb does..?
[00:43:33] <stenno> i thought resp.body would return a readablestream which is streaming the response data
[00:43:58] *** Joins: teut65 (~teut@182.64.62.109)
[00:44:28] <Alexendoo> body isn't a promise so the then isn't doing anything there, could just as well be const response = await fetch("..."); .. use response.body
[00:45:05] <stenno> oh you are right
[00:45:49] <stenno> got confused by this example https://developer.mozilla.org/en-US/docs/Web/API/Response/body#example
[00:46:20] <Alexendoo> That is a lot of thens
[00:47:58] *** Quits: teut (~teut@182.64.62.109) (Ping timeout: 256 seconds)
[00:48:43] *** Quits: sidj (~sidj@user/sidj) (Ping timeout: 250 seconds)
[00:49:21] <ljharb> stenno: not with fetch
[00:49:35] <stenno> so _does_ it wait for the body or doesn't it?
[00:49:42] *** Joins: pavonia (~user@user/siracusa)
[00:51:00] <Alexendoo> It doesn't, that's why response.json/text/etc() return a promise
[00:51:03] <ljharb> right
[00:51:45] <stenno> ok so i can do it with cancel() the readablestream of body and AbortController
[00:51:48] <stenno> er sorry
[00:52:13] <stenno> so my goal is to fetch a resource, read the first few bytes and then cancel the download
[00:52:18] <stenno> (if neccessary)
[00:53:01] <stenno> i don't care if more bytes than those first few are getting read, i just want to abort as soon as i know i don't need to handle that file
[00:53:20] <stenno> actually i will TIAS, bbiab
[00:56:27] *** Joins: sidj (~sidj@78.192.48.242)
[00:56:27] *** Quits: sidj (~sidj@78.192.48.242) (Changing host)
[00:56:27] *** Joins: sidj (~sidj@user/sidj)
[00:57:35] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[01:00:06] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Read error: Connection reset by peer)
[01:02:00] *** Quits: teut65 (~teut@182.64.62.109) (Quit: Client closed)
[01:02:40] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 256 seconds)
[01:02:53] *** Joins: teut (~teut@182.64.62.109)
[01:09:05] <lantech19446> I have this desire to just wake up one morning and be able to pump this stuff out like it was nothing. Ah the stuff dreams are made of
[01:10:35] *** Quits: nomic (~nomic@185.192.69.224) (Quit: Leaving)
[01:10:46] *** Quits: sebastorama (~sebastora@190.83.56.68) (Read error: Connection reset by peer)
[01:11:36] *** Joins: sebastorama (~sebastora@190.83.56.68)
[01:14:36] *** Quits: silly (~silly@user/silly) (Ping timeout: 265 seconds)
[01:16:32] *** Quits: pmercado_ (~pmercado@186.107.40.51) (Ping timeout: 265 seconds)
[01:18:05] *** Joins: diamondbond (~diamondbo@175.157.52.20)
[01:18:36] *** Quits: diamondbond (~diamondbo@175.157.52.20) (Read error: Connection reset by peer)
[01:20:49] *** Joins: irrgit (~irrgit@192.241.175.183)
[01:27:35] *** Quits: zacts (~zacts@user/zacts) (Quit: leaving)
[01:27:51] *** Joins: zacts (~zacts@user/zacts)
[01:28:22] *** Joins: nitrospectide (~Adium@38.65.76.76)
[01:30:14] *** Quits: qswz (~caub@89-80-20-125.abo.bbox.fr) (Quit: leaving)
[01:30:33] *** Joins: zebrag (~chris@user/zebrag)
[01:32:09] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[01:32:33] *** Joins: ziddey (ziddey@coffeelake.home.ijib.com)
[01:34:35] *** Joins: stagas_ (~stagas@2a02:587:c418:44b1:738f:5594:2c8c:ff0a)
[01:34:37] *** Quits: teut (~teut@182.64.62.109) (Quit: Client closed)
[01:36:40] *** Quits: siyb1 (~siyb@h081217185055.dyn.cm.kabsi.at) (Ping timeout: 256 seconds)
[01:36:56] *** Joins: siyb1 (~siyb@h081217185055.dyn.cm.kabsi.at)
[01:37:14] *** Quits: stagas (~stagas@athedsl-385702.home.otenet.gr) (Ping timeout: 256 seconds)
[01:40:34] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[01:40:59] *** Quits: matbia (~matbia@87-205-163-55.adsl.inetia.pl) (Changing host)
[01:41:00] *** Joins: matbia (~matbia@user/matbia)
[01:42:17] *** Quits: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Read error: Connection reset by peer)
[01:44:42] *** Joins: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[01:45:04] *** Quits: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Read error: Connection reset by peer)
[01:45:55] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 250 seconds)
[01:50:41] *** Quits: mimmy (~mimmy@72.142.88.18) (Ping timeout: 250 seconds)
[01:51:59] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Quit: Leaving)
[01:53:15] *** Quits: silverdust (~silverdus@user/silverdust) (Quit: leaving)
[01:53:34] *** Quits: taupiqueur (~taupiqueu@31.106.204.77.rev.sfr.net) (Ping timeout: 260 seconds)
[01:55:54] *** Quits: kogepan (~kogepan@user/kogepan) (Ping timeout: 260 seconds)
[01:58:27] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:59:12] *** Joins: sebastorama (~sebastora@190.83.56.68)
[02:00:53] *** Quits: ThePhilgrim (~thephilgr@151.41.185.44) (Remote host closed the connection)
[02:01:15] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:02:26] *** Quits: OnkelBlade (~OnkelTem@user/onkeltem) (Ping timeout: 260 seconds)
[02:03:26] *** Joins: peterhil__ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[02:04:26] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[02:07:04] *** Joins: quazimodo (~quazimodo@n1-40-235-47.bla1.nsw.optusnet.com.au)
[02:07:43] *** Joins: OnceMe (~stefan@user/onceme)
[02:08:14] <OnceMe> my = new MyObj(); my = Object.assign([], ...myObjectsArray)
[02:08:26] <OnceMe> my.length is 0, but myObjectsArray.length is 1, what is happening?
[02:08:54] <ljharb> OnceMe: don't use Object.assign on arrays
[02:09:07] <OnceMe> how to copy array of objects?
[02:09:12] <ljharb> OnceMe: `.slice()`?
[02:09:17] <OnceMe> ?
[02:09:21] <ljharb> OnceMe: what are you trying to actually do
[02:09:27] <ljharb> JS doesn't really copy anything
[02:09:42] <OnceMe> top copy all objects from one object array to another
[02:09:54] <OnceMe> shallow copy I would say
[02:10:06] <ljharb> OnceMe: right but for that you can just clone the array. using `arr.slice()`
[02:10:20] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[02:10:31] <ljharb> OnceMe: cloning the objects would only matter if you were mutating them somewhere else, and you shouldn't ever mutate
[02:10:52] <OnceMe> I am mutating
[02:10:53] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[02:11:14] *** Joins: mimmy (~mimmy@72.142.88.18)
[02:11:29] <ljharb> OnceMe: ok well, don't do that, mutating is bad
[02:12:14] <ljharb> OnceMe: but to answer your question, `arr.map(x => ({ ...x }))`
[02:13:27] *** Joins: systemctl (~systemctl@user/systemctl)
[02:15:43] *** Quits: src (~src@user/src) (Read error: Connection reset by peer)
[02:15:59] *** Quits: mimmy (~mimmy@72.142.88.18) (Ping timeout: 265 seconds)
[02:17:04] <OnceMe> ljharb: that doesnt work
[02:17:20] <OnceMe> if I have arr1 and arr2, how would I copy it so that .length is correct?
[02:17:33] <OnceMe> currently with Object.assign, its copied but length is wrong
[02:19:27] *** Joins: mikey__ (~mikey__@user/mikey/x-6463285)
[02:19:30] <ljharb> OnceMe: it definitely does work.
[02:19:35] <ljharb> OnceMe: make a jsfiddle and i'll prove it.
[02:20:14] *** Joins: gehn (~gehn@user/gehn)
[02:22:45] *** Joins: daoudr (~daoudr@xdsl-31-164-222-159.adslplus.ch)
[02:23:29] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:25:52] <daoudr> Can I have tips on how to deal with this? I will get back to your suggestions when I wake up https://pastebin.com/mJSndWJH
[02:30:01] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:32] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:30:54] *** Joins: src (~src@user/src)
[02:32:40] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[02:32:46] *** Quits: pizdets_ (~pizdets@183.182.110.150) (Ping timeout: 250 seconds)
[02:33:43] *** Joins: pizdets (~pizdets@183.182.115.47)
[02:34:03] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[02:35:45] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 250 seconds)
[02:40:57] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:41:10] *** Quits: epolanski (uid312403@helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[02:42:15] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 250 seconds)
[02:43:33] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 250 seconds)
[02:45:16] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Quit: !be back soon)
[02:45:28] *** Quits: Fault (~Fault@150.230.39.7) (Quit: Quit.)
[02:45:36] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[02:45:43] *** Quits: zeromule (~eric@2601:602:8d80:4e50:1527:dcc4:b220:1646) (Ping timeout: 250 seconds)
[02:46:40] *** Joins: WishBoy (~WishBoy@user/wishboy)
[02:48:15] *** Joins: Fault (~Fault@150.230.39.7)
[02:49:14] *** Quits: sagax (~sagax_nb@user/sagax) (Excess Flood)
[02:49:59] *** Quits: systemctl (~systemctl@user/systemctl) (Quit: Client closed)
[02:51:05] *** Joins: zeromule (~eric@2601:602:8d80:4e50:1527:dcc4:b220:1646)
[02:51:59] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[02:56:55] <stenno> omfg i think it worked
[02:56:59] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[02:57:12] <ash_worksi> where does "I'm a ..." come from in this? https://webcomponents.dev/edit/collection/d5hmXU6Oq1awvGniAMlo/D0lic4qM2r0x0vf9XmeM/src/index.js?branch=master
[02:59:55] *** Joins: sickdyd (~sickd@FL1-122-135-172-49.tky.mesh.ad.jp)
[03:00:44] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[03:00:53] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 250 seconds)
[03:01:56] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:02:14] *** Parts: matbia (~matbia@user/matbia) (WeeChat 3.2.1)
[03:04:48] *** Quits: zeromule (~eric@2601:602:8d80:4e50:1527:dcc4:b220:1646) (Ping timeout: 265 seconds)
[03:05:25] <prussian> OnceMe: lodash cloneDeep
[03:05:29] <prussian> Is probably what you want
[03:05:57] <prussian> Or you can do the JSON.stringify and JSON.parse
[03:06:02] <prussian> Thing lma
[03:07:42] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 265 seconds)
[03:09:39] *** Quits: gehn (~gehn@user/gehn) (Quit: Leaving)
[03:10:12] *** Quits: hax (~hax@user/hax) (Remote host closed the connection)
[03:11:18] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[03:12:18] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:d1ec:e4ac:744a:8e08)
[03:22:26] <ljharb> cloning is a code smell
[03:22:33] <ljharb> and a JSON round trip will break on a bunch of stuff
[03:23:54] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[03:23:54] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[03:23:54] *** Joins: wroathe (~wroathe@user/wroathe)
[03:25:43] <earendel> ash_worksi: what is the 'ash' in your nick a reference to?
[03:28:09] *** Joins: g2anj (~v@58.227.244.56)
[03:29:46] <stenno> b> AsyncIterator.from
[03:29:48] <jellobot> (fail) ReferenceError: AsyncIterator is not defined
[03:30:05] <stenno> b> Iterator.from
[03:30:09] <jellobot> (fail) ReferenceError: Iterator is not defined
[03:30:17] <stenno> oh right
[03:30:34] <ljharb> it's not stage 3 yet
[03:31:39] *** Joins: duds- (~duds-@gateway/tor-sasl/duds)
[03:32:05] *** stagas_ is now known as stagas
[03:32:50] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:d1ec:e4ac:744a:8e08) (Ping timeout: 265 seconds)
[03:36:54] *** Joins: OnkelBlade (~OnkelTem@user/onkeltem)
[03:39:43] *** Quits: OnceMe (~stefan@user/onceme) (Quit: Konversation terminated!)
[03:41:15] *** Quits: peterhil__ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[03:41:35] *** Quits: Fault (~Fault@150.230.39.7) (Quit: Quit.)
[03:41:43] *** Joins: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[03:42:32] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[03:42:36] *** Joins: nomic (~nomic@185.192.69.224)
[03:44:30] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[03:44:47] *** Quits: Cyp (~cyp@192038135092.mbb.telenor.dk) (Read error: Connection reset by peer)
[03:45:25] *** Joins: Cyp (~cyp@192038135092.mbb.telenor.dk)
[03:47:37] *** Joins: zeromule (~eric@2601:602:8d80:4e50:c4a4:1919:79bb:d861)
[03:48:55] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[03:49:39] <lockdown> ljharb: as opposed to copying? what's the difference?
[03:50:28] <ljharb> lockdown: explicit copying is often a smell too, but at least it’s explicit
[03:51:31] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[03:54:11] *** Quits: Cyp (~cyp@192038135092.mbb.telenor.dk) (Read error: Connection reset by peer)
[03:54:36] *** Joins: Cyp (~cyp@192038135092.mbb.telenor.dk)
[03:54:42] <lockdown> like not using spreads and stuff like that?
[03:56:32] <ljharb> lockdown: i think maybe it'd be clearer if you had a specific question :-)
[03:57:06] *** Joins: EdFletcher (~PKD@user/edfletcher)
[03:57:20] *** Joins: matbia (matbia@user/matbia)
[03:58:25] <lockdown> ljharb: since you were talking avoid mutation before, how do you achieve it without cloing/copying?
[03:59:36] <lockdown> *about avoiding
[04:00:10] <ljharb> lockdown: it's fine to copy when you're producing a different object
[04:00:30] <ljharb> lockdown: for example, `{ ...x, newProperty: true }` or `const { omit, ...x } = orig` or something
[04:00:40] <ljharb> lockdown: but copying without addition, change, or removal is a code smell
[04:01:05] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[04:02:06] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:e4cb:5a57:fd6e:e655)
[04:03:36] <stenno> n> const ary = new Uint8Array([64,65,66,67,68,69]); new Uint32Array(ary.buffer,2,1)
[04:03:37] <jellobot> (fail) RangeError: start offset of Uint32Array should be a multiple of 4
[04:04:39] *** Joins: riotz (~riotz@user/riotz)
[04:05:07] <stenno> n> const ary = new Uint8Array([64,65,66,67,68,69]); const bla = new DataView(ary.buffer,2,4); bla.getUint32(0)
[04:05:07] <jellobot> (okay) 1111704645
[04:05:13] *** Quits: zeromule (~eric@2601:602:8d80:4e50:c4a4:1919:79bb:d861) (Ping timeout: 265 seconds)
[04:05:24] <stenno> sucks a bit but i guess thats what dataviews are for
[04:07:30] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 260 seconds)
[04:07:46] <lockdown> ljharb: I guess I see what you mean now, you are not advocating for real immutability but more like be careful and discipline about what your functions do
[04:08:27] <lockdown> since your examples are shallow copies
[04:09:02] *** Joins: mimmy_ (~mimmy@2607:fea8:6e0:7f90:20d6:2b3a:ce41:e0b6)
[04:10:23] *** Joins: matbia22 (matbia@user/matbia)
[04:11:10] *** Quits: matbia22 (matbia@user/matbia) (Client Quit)
[04:11:12] <ljharb> lockdown: you don't need real immutability if you never do the dumb thing of mutating :-)
[04:11:24] *** Quits: matbia (matbia@user/matbia) (Ping timeout: 256 seconds)
[04:11:24] <ljharb> stenno: what are you trying to do
[04:11:47] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:e4cb:5a57:fd6e:e655) (Ping timeout: 264 seconds)
[04:12:10] <stenno> read a Uint32 from a uint8Array with arbitrary offset
[04:12:15] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:12:17] <ljharb> right but why
[04:12:45] <stenno> reading binary headers
[04:13:10] <ljharb> ew
[04:13:41] <stenno> in the end i will properly streamify this anyway but i just wanted to try out some things for now
[04:14:02] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Quit: Goodbye.)
[04:14:21] <stenno> its super amazing that it works so far
[04:14:36] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[04:14:44] *** Joins: mven` (~mven@ip68-104-39-54.lv.lv.cox.net)
[04:15:10] <stenno> i am using gzip DecompressionStream to unpack a foo.gz File stream and it Just Works
[04:15:50] <stenno> this is the kind of thing i expected to spend days with, but i got it running in a few hours
[04:15:51] *** Quits: riotz (~riotz@user/riotz) (Ping timeout: 250 seconds)
[04:16:18] <stenno> now that i got it running, i can sexify it
[04:16:53] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:fc41:a35f:792:b57c)
[04:17:16] <stenno> single line:
[04:18:11] <stenno> const { value, done } = fileInput.files[0].stream().pipeThrough(new DecompressionStream('gzip')).getReader().read();
[04:18:19] <stenno> const { value, done } = await fileInput.files[0].stream().pipeThrough(new DecompressionStream('gzip')).getReader().read();
[04:18:20] *** Quits: \mSg (mSg@user/msg/x-0285936) ()
[04:18:27] *** Quits: mimmy_ (~mimmy@2607:fea8:6e0:7f90:20d6:2b3a:ce41:e0b6) (Ping timeout: 250 seconds)
[04:19:13] <stenno> and value is an Uint8Array with the gunzipped values
[04:19:23] <stenno> gunzipped file data
[04:22:19] <lockdown> ljharb: easier said than done when some function in some module that you don't control deep down the stack doesn't do the "correct" thing but sure ;)
[04:22:46] <ljharb> lockdown: sure, that's the main time you need to copy things
[04:23:04] <ljharb> lockdown: doesn't mean it's not a smell, it means the smell is appropriate, and it indicates you should be replacing that bad module
[04:23:08] *** Joins: sagax (~sagax_nb@user/sagax)
[04:26:55] *** Joins: hax (~hax@69.165.175.67)
[04:26:55] *** Quits: hax (~hax@69.165.175.67) (Changing host)
[04:26:55] *** Joins: hax (~hax@user/hax)
[04:29:18] *** Joins: riotz (~riotz@user/riotz)
[04:38:17] *** Joins: zeromule (~eric@2601:602:8d80:4e50:c4a4:1919:79bb:d861)
[04:39:05] *** Quits: fweht (uid404746@lymington.irccloud.com) (Quit: Connection closed for inactivity)
[04:40:31] *** Joins: kalen- (~kalen@gateway/vpn/pia/kalen)
[04:41:24] *** Quits: Linkandzelda (~Linkandze@cloudirc.laz.li) (Quit: Cya)
[04:42:32] *** Quits: src (~src@user/src) (Ping timeout: 256 seconds)
[04:47:55] *** Quits: kalen- (~kalen@gateway/vpn/pia/kalen) (Ping timeout: 250 seconds)
[04:48:57] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[04:50:20] *** Joins: EdFletcher (~PKD@user/edfletcher)
[04:52:05] *** Quits: zeromule (~eric@2601:602:8d80:4e50:c4a4:1919:79bb:d861) (Ping timeout: 268 seconds)
[04:56:27] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 265 seconds)
[05:00:40] *** Quits: X-Scale (~ARM@31.22.167.45) (Ping timeout: 256 seconds)
[05:01:07] *** Joins: X-Scale` (~ARM@165.201.137.78.rev.vodafone.pt)
[05:01:14] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 256 seconds)
[05:02:29] *** X-Scale` is now known as X-Scale
[05:03:26] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[05:03:31] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 250 seconds)
[05:08:29] *** Quits: nitrospectide (~Adium@38.65.76.76) (Quit: Leaving.)
[05:08:43] *** Quits: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[05:09:13] *** Joins: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[05:09:20] *** Quits: paule32 (~paule32@user/paule32) (Read error: Connection reset by peer)
[05:09:23] *** Joins: EdFletcher (~PKD@user/edfletcher)
[05:09:27] <lockdown> ljharb: cool, was curious about your meaning on your past comments to others users about mutation, view clarified
[05:13:04] *** Joins: c4017w (~c4017@209.52.68.8)
[05:17:10] *** Joins: mimmy_ (~mimmy@2607:fea8:6e0:7f90:ec1e:7b74:9028:2102)
[05:17:43] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:fc41:a35f:792:b57c) (Ping timeout: 265 seconds)
[05:22:39] <ljharb> np
[05:23:20] *** Joins: zeromule (~eric@2601:602:8d80:4e50:c4a4:1919:79bb:d861)
[05:25:38] *** Joins: diamondbond (~diamondbo@175.157.52.20)
[05:26:11] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[05:29:05] *** Quits: g2anj (~v@58.227.244.56) (Ping timeout: 250 seconds)
[05:29:19] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 265 seconds)
[05:29:46] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[05:29:58] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[05:30:25] *** Quits: nomic (~nomic@185.192.69.224) (Quit: Leaving)
[05:30:42] *** Joins: nomic (~nomic@185.192.69.224)
[05:30:46] *** Joins: EdFletcher (~PKD@user/edfletcher)
[05:31:22] *** Joins: g2anj (~v@39.112.227.198)
[05:34:06] *** Quits: OnkelBlade (~OnkelTem@user/onkeltem) (Ping timeout: 256 seconds)
[05:34:38] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 265 seconds)
[05:40:54] *** Quits: brentaarnold (~brentaarn@32.132.115.46) (Ping timeout: 256 seconds)
[05:41:28] *** Joins: brentaarnold (~brentaarn@32.132.115.46)
[05:41:53] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[05:42:41] *** Joins: summersault (~summersau@179.221.251.16)
[05:45:34] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[05:45:34] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[05:45:34] *** Joins: wroathe (~wroathe@user/wroathe)
[05:46:25] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 250 seconds)
[05:46:25] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 250 seconds)
[05:46:28] *** Quits: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[05:46:56] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[05:48:04] *** Quits: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[05:48:39] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[05:48:39] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[05:49:00] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:4fe:2e55:2875:30e0) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:50:01] *** Quits: baakeydow (~baake@2001:bc8:65c:2601::1) (Quit: baakeydow)
[05:50:35] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 265 seconds)
[05:52:33] *** Joins: keypusher (keypusher@user/keypusher)
[05:56:23] *** Joins: i0e (~is0ke3@user/is0ke3)
[05:56:48] *** Quits: Guest45 (~Guest45@p200300c8cf21a30002601f60eb21690e.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[06:03:15] *** Joins: keypushe- (keypusher@user/keypusher)
[06:03:45] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 250 seconds)
[06:04:14] *** Quits: zeromule (~eric@2601:602:8d80:4e50:c4a4:1919:79bb:d861) (Ping timeout: 268 seconds)
[06:05:22] *** Joins: zeromule (~eric@2601:602:8d80:4e50:a5a8:4f00:b2f9:2c63)
[06:06:00] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:2588:c16b:466c:c93c) (Quit: you are feeeling very sleeeeeepyy......)
[06:06:18] *** Joins: diamondbond_ (~diamondbo@175.157.52.20)
[06:06:28] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:2588:c16b:466c:c93c)
[06:06:30] *** keypushe- is now known as keypusher
[06:06:47] *** Quits: diamondbond (~diamondbo@175.157.52.20) (Ping timeout: 250 seconds)
[06:07:01] *** Quits: mimmy_ (~mimmy@2607:fea8:6e0:7f90:ec1e:7b74:9028:2102) (Ping timeout: 265 seconds)
[06:08:23] *** Joins: sebastorama (~sebastora@138-122-140-10.netwaytelecon.com.br)
[06:09:31] *** Joins: mimmy_ (~mimmy@185.244.215.86)
[06:12:36] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Quit: Leaving)
[06:17:36] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (Ping timeout: 245 seconds)
[06:17:53] *** Joins: deadmund (~quassel@c-174-54-31-116.hsd1.pa.comcast.net)
[06:18:39] *** Parts: mikey__ (~mikey__@user/mikey/x-6463285) (WeeChat 3.3)
[06:19:02] *** Quits: mimmy_ (~mimmy@185.244.215.86) (Ping timeout: 268 seconds)
[06:19:18] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[06:19:26] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[06:21:43] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: WeeChat 3.3)
[06:22:51] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[06:24:13] *** Joins: mimmy_ (~mimmy@185.244.215.86)
[06:26:04] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[06:30:11] <de-facto> is there a library to perform (user defined) math expressions on csv timeseries?
[06:31:04] <theskillwithin> idk what that means, but sheetjs might
[06:31:05] <de-facto> something like result[t] = series1[t] * series2[t-7*days]
[06:31:20] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 256 seconds)
[06:31:30] <sheetjs> there may be but it's easy to roll your own
[06:32:12] <de-facto> i load csv data into arrays (covid data et al) and want the user to be able to specify their own functions for graphing
[06:32:32] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[06:33:27] <de-facto> but it would need to be able to have timeshifts (e.g. hospitalizations[t] / infecitons[t-10*days] etc)
[06:33:55] <sheetjs> so you want some DSL or just use eval?
[06:34:12] <de-facto> what does DSL stand for?
[06:34:19] <sheetjs> domain specific language
[06:34:30] <sheetjs> how are they specifying functions?
[06:34:38] *** Quits: deadmund (~quassel@c-174-54-31-116.hsd1.pa.comcast.net) (Remote host closed the connection)
[06:35:03] <de-facto> hmm not sure yet, i guess they would put a formula into an <input> or such?
[06:35:43] <de-facto> the source is tsv and the graph is plotly.js
[06:36:07] <sheetjs> yeah if you make hospitalizations and infections named arrays
[06:36:14] <sheetjs> then you can just eval that thing
[06:36:46] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[06:36:56] <de-facto> yeah but the user could input all kinds of weird things then
[06:37:08] <de-facto> i would prefer a math library for that
[06:38:11] <sheetjs> math.js has a thing for that
[06:38:15] <de-facto> but then i am not sure how to implement that timeshifting
[06:38:19] <de-facto> yeah i have seen that one
[06:38:26] <de-facto> https://mathjs.org/docs/expressions/parsing.html
[06:38:29] *** Joins: n00b101 (uid448161@lymington.irccloud.com)
[06:38:55] *** Quits: riotz (~riotz@user/riotz) (Ping timeout: 265 seconds)
[06:39:25] *** Joins: pluri (~pluri@user/pluri)
[06:40:25] <lantech19446> If I'm creating a function that takes one parameter such as name, am I correct in thinking that I need to initialize name as a local variable in order for that function to return any result for name?
[06:40:39] <n00b101> i was learning JS . i wanted to get index number of a word and apprently got upto this https://plnkr.co/edit/Hk0tqoWDHFGylZwl <-- this works except it never starts from zero on a new line. Can i set the counter to start from ZERO on every new line rather than continuing from the start?
[06:41:20] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 265 seconds)
[06:43:20] <de-facto> maybe a math library (for parsing time series expressions) that also got some numeric (least square) fit methods would be neat
[06:45:30] <sheetjs> surprisingly there arent any good autocovariance libraries
[06:46:09] <sheetjs> should just write one from scratch de-facto
[06:46:29] <de-facto> it would be neat to have the user input a "guess" for a data fit function and then let it do least squares on variables to interpolate
[06:46:55] <lantech19446> y'all can ignore my question I figured it out
[06:47:01] <sheetjs> start from basic single variate online algorithms
[06:47:08] <theskillwithin> lantech19446 not sure what you mean
[06:47:11] <sheetjs> like a mean or std
[06:47:55] *** Joins: reallymemorable (~reallymem@pool-108-46-75-178.nycmny.fios.verizon.net)
[06:47:56] <de-facto> i hoped someone already did that :)
[06:48:27] <sheetjs> do it better
[06:48:45] <sheetjs> and while you're at it, also support iterators
[06:48:47] <lantech19446> I had to create a function with the parameter name which I could do no problem but for some reason alert(name); wasn't working so I thought I had to make name a variable but then I realized that when I passed a parameter to it as i called the function I needed to include quotation marks of some sort so that js knew it was a string
[06:48:53] <lantech19446> now it works
[06:49:05] <de-facto> thats too much time i have to use on other parts of the project
[06:49:40] <sheetjs> if arbitrary user-specified functions aren't important, don't bother
[06:50:21] *** Joins: Rockwood (~Rocky@user/rocky)
[06:52:32] <theskillwithin> n00b101 if its a from to range, then that doesn't make sense, what if they select the from on a different line
[06:53:08] <n00b101> theskillwithin: that is where i'm confused
[06:53:25] <Rockwood> theskillwithin, o/
[06:53:55] <theskillwithin> area.value.split(/\r?\n/)  theres that, but idk if that helps
[06:54:18] <theskillwithin> o/
[06:54:48] *** Quits: diamondbond_ (~diamondbo@175.157.52.20) (Ping timeout: 268 seconds)
[06:55:30] *** Quits: monokrome (~monokrome@50.215.11.140) (Quit: WeeChat 3.1)
[06:55:43] *** Quits: pluri (~pluri@user/pluri) (Quit: Textual IRC Client: www.textualapp.com)
[06:56:46] <n00b101> theskillwithin: where should `area.value.split(/\r?\n/)` come in that plnkr note i pasted above
[06:57:14] <theskillwithin> im still not sure what your trying to accomplish
[06:57:19] *** Quits: reallymemorable (~reallymem@pool-108-46-75-178.nycmny.fios.verizon.net) (Remote host closed the connection)
[06:59:12] <n00b101> i'm sorry. i hope you saw the code https://plnkr.co/edit/Hk0tqoWDHFGylZwl -- we select any word and it'll give us index number. but it is giving  index number counting from the start. where i want it to set the counter from ZERO on every new line and count forwards..is that possible?
[07:00:19] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[07:03:40] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:8d40:e10d:37be:4ec7) (Ping timeout: 256 seconds)
[07:04:30] <de-facto> hmm maybe something like http://tom-alexander.github.io/regression-js/ ?
[07:05:01] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 265 seconds)
[07:11:50] <n00b101> theskillwithin: i guess i can tell it `startrange` on a newline?
[07:12:30] *** Quits: mimmy_ (~mimmy@185.244.215.86) (Quit: WeeChat 3.3)
[07:17:16] <theskillwithin> n00b101 startrange?  idk i don't have a lot of experience with selection events
[07:17:32] <theskillwithin> n00b101 path im thinking of going down with this one https://plnkr.co/edit/ZVftGkwByftIUzFO
[07:18:42] <theskillwithin> I didn't get too far tho
[07:20:44] <n00b101> theskillwithin: its okay! i'm looking to this If nothing is selected, or we use equal start and end in setRangeText, then the new text is just inserted, nothing is removed.
[07:20:47] <theskillwithin> from there to calculate the lineOffset, find the index of the line where first is less than it with everything before it added to it in the array,  but greater than all the ones before it.  then its removing the char length of the prev lines
[07:21:00] <n00b101> this -> https://javascript.info/selection-range#selection-methods
[07:21:25] <n00b101> this should have something to to with it.. let me look
[07:21:44] *** Joins: Gumshoe (~whoa@cpe-107-184-42-236.socal.res.rr.com)
[07:22:17] *** Quits: Gumshoe (~whoa@cpe-107-184-42-236.socal.res.rr.com) (Client Quit)
[07:22:47] <theskillwithin> and then in theory if you find that lineOffset, i probably really poorly explained.  you subtract the start value  and the end value by it for final results for start and end
[07:26:51] <n00b101> theskillwithin:
[07:26:56] <n00b101> from.value = area.selectionStart;
[07:26:56] <n00b101>     to.value = area.selectionEnd=;
[07:27:15] <n00b101> `from.value = area.selectionStart="START";`
[07:27:42] <n00b101> the START can take a value. also the selectionEnd= also takes a value
[07:28:09] <n00b101> can i say start from new line and end on end of a line?
[07:29:32] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[07:29:32] <theskillwithin> not that i know of
[07:30:25] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[07:30:25] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[07:30:25] *** Joins: wroathe (~wroathe@user/wroathe)
[07:30:25] <theskillwithin> you can calculate it after tho
[07:30:34] *** Joins: EdFletcher (~PKD@user/edfletcher)
[07:32:30] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:8d40:e10d:37be:4ec7)
[07:35:31] *** Joins: i0e (~is0ke3@user/is0ke3)
[07:36:45] *** Quits: i0e (~is0ke3@user/is0ke3) (Client Quit)
[07:38:41] *** Parts: zzz (~z@user/zero) ()
[07:43:44] *** Joins: i0e (~is0ke3@user/is0ke3)
[07:46:02] *** Joins: forgotmynick (uid24625@hampstead.irccloud.com)
[07:49:55] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[07:49:58] *** Quits: stagas (~stagas@2a02:587:c418:44b1:738f:5594:2c8c:ff0a) (Ping timeout: 265 seconds)
[07:52:15] *** Joins: ckeshav (~keshavcha@user/ckeshav)
[07:54:31] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: WeeChat 3.3)
[08:00:12] *** Joins: thiras (~thiras@user/thiras)
[08:06:49] *** Joins: baakeydow (~baake@163.172.145.178)
[08:07:33] <theskillwithin> n00b101 https://plnkr.co/edit/ZVftGkwByftIUzFO   bug in there tho atm
[08:07:35] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[08:08:10] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[08:08:33] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 250 seconds)
[08:09:14] *** Joins: \mSg (mSg@user/msg/x-0285936)
[08:09:18] *** Quits: zeromule (~eric@2601:602:8d80:4e50:a5a8:4f00:b2f9:2c63) (Ping timeout: 265 seconds)
[08:09:27] <n00b101> theskillwithin: thanks, but this is still starting the index from beginning of the line.. i need the index count to start from every new line
[08:09:27] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[08:09:38] <n00b101> its okay, thanks for your wonderful time
[08:10:30] <theskillwithin> yes its attempting to do that,  but theres a bug
[08:11:26] *** Quits: nomic (~nomic@185.192.69.224) (Quit: Leaving)
[08:13:09] <n00b101> theskillwithin: here should be a way https://javascript.info/selection-range
[08:13:18] <n00b101> we donot need much hassle ig
[08:13:36] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[08:13:40] <n00b101> i'm trying everything one by one
[08:13:46] *** Joins: EdFletcher (~PKD@user/edfletcher)
[08:14:08] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 265 seconds)
[08:14:54] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:2588:c16b:466c:c93c) (Quit: you are feeeling very sleeeeeepyy......)
[08:15:32] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:2588:c16b:466c:c93c)
[08:17:29] <theskillwithin> i don't think so, thats about selection itself,  not logic ud want to accomplish this
[08:30:15] *** Quits: montybanksnyc (~montybank@pool-108-5-238-57.nwrknj.fios.verizon.net) (Read error: Connection reset by peer)
[08:38:17] <theskillwithin> n00b101 basically split by newline and just subtract the lengths of the the previous lines
[08:40:12] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:40:38] *** Quits: quazimodo (~quazimodo@n1-40-235-47.bla1.nsw.optusnet.com.au) (Read error: Connection reset by peer)
[08:42:06] *** Joins: zeromule (~eric@2601:602:8d80:4e50:a5a8:4f00:b2f9:2c63)
[08:42:24] *** Joins: silly (~silly@user/silly)
[09:01:04] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[09:01:32] *** Joins: i0e (~is0ke3@user/is0ke3)
[09:02:07] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:8d40:e10d:37be:4ec7) (Quit: Client closed)
[09:02:22] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:8d40:e10d:37be:4ec7)
[09:02:37] *** Quits: i0e (~is0ke3@user/is0ke3) (Client Quit)
[09:06:02] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 256 seconds)
[09:11:23] *** Quits: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com) (Ping timeout: 250 seconds)
[09:17:58] *** Joins: i0e (~is0ke3@user/is0ke3)
[09:17:59] *** Joins: stagas (~stagas@2a02:587:c418:44b1:45ad:8e18:e721:e91c)
[09:18:02] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[09:19:16] *** Quits: i0e (~is0ke3@user/is0ke3) (Client Quit)
[09:22:13] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 250 seconds)
[09:22:52] *** Joins: i0e (~is0ke3@user/is0ke3)
[09:32:09] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[09:34:19] *** Joins: EdFletcher (~PKD@user/edfletcher)
[09:36:21] *** Quits: zeromule (~eric@2601:602:8d80:4e50:a5a8:4f00:b2f9:2c63) (Read error: Connection reset by peer)
[09:40:32] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[09:45:03] *** Quits: DrJ (~asdf@user/drj) ()
[09:50:00] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:50:48] *** Joins: x-x (~x@user/x-x)
[09:51:47] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 268 seconds)
[09:53:19] *** Joins: i0e (~is0ke3@user/is0ke3)
[09:53:25] *** Quits: JohnDoe2 (~johndoe2@2001:470:1f07:89::dead:bead) (Quit: bye)
[09:54:47] *** Quits: pizdets (~pizdets@183.182.115.47) (Quit: pizdets)
[09:55:27] *** Joins: pizdets (~pizdets@183.182.115.47)
[09:59:21] *** Quits: ziddey (ziddey@coffeelake.home.ijib.com) (Remote host closed the connection)
[09:59:42] *** Quits: recyclehero (~alistar@ec2-3-127-140-208.eu-central-1.compute.amazonaws.com) (Quit: leaving)
[09:59:50] *** Quits: forgotmynick (uid24625@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[10:00:57] *** Quits: sidj (~sidj@user/sidj) (Ping timeout: 265 seconds)
[10:02:54] *** Joins: ziddey (ziddey@coffeelake.home.ijib.com)
[10:05:23] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[10:07:14] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[10:10:06] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 260 seconds)
[10:10:25] *** Quits: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Remote host closed the connection)
[10:10:25] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[10:11:25] *** Joins: zeromule (~eric@2601:602:8d80:4e50:a5a8:4f00:b2f9:2c63)
[10:14:20] *** Joins: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[10:17:01] *** Joins: JohnDoe2 (~johndoe2@2001:470:1f07:89::dead:bead)
[10:17:11] *** Quits: zeromule (~eric@2601:602:8d80:4e50:a5a8:4f00:b2f9:2c63) (Ping timeout: 264 seconds)
[10:22:34] *** Joins: ThePhilgrim (~thephilgr@151.41.185.44)
[10:24:23] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 264 seconds)
[10:25:29] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[10:26:05] <no_gravity> Is there a code search engine somewhere, where you can search for something like "class car" and it will only return code (for example on GitHub) that contains this exact string?
[10:26:33] *** Joins: jetchisel (jetchisel@user/jetchisel)
[10:26:47] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:8d40:e10d:37be:4ec7) (Quit: Client closed)
[10:27:00] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[10:31:22] <n00b101> i have asked in Stackoverflow more precise https://stackoverflow.com/q/69984677/6655469
[10:36:00] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:8d40:e10d:37be:4ec7)
[10:37:20] *** Quits: cisme_ (~cisme_@user/cisme/x-1186982) (Remote host closed the connection)
[10:37:25] *** Joins: zeromule (~eric@2601:602:8d80:4e50:a5a8:4f00:b2f9:2c63)
[10:40:56] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:2588:c16b:466c:c93c) (Quit: you are feeeling very sleeeeeepyy......)
[10:42:49] *** Joins: teut (~teut@182.64.62.109)
[10:43:49] *** Joins: cisme_ (~cisme_@2600:1700:d980:1a40:b6e8:aaa3:d221:5fe9)
[10:44:57] *** Joins: tex (~super@user/dix)
[10:45:52] *** Quits: sebastorama (~sebastora@138-122-140-10.netwaytelecon.com.br) (Read error: Connection reset by peer)
[10:46:12] <teut> https://jsfiddle.net/rqL7wx39/4/
[10:46:45] <teut> why do I get "failed" alert even after submitting with correct email pattern?
[10:47:53] <teut> https://jsfiddle.net/rqL7wx39/8/   this link
[10:48:38] <theskillwithin> teut multi line if else needs brackets
[10:49:02] <teut> where multiline?
[10:49:28] <teut> https://ibb.co/Lgzy2wm
[10:49:33] <teut> are we seeing different things?
[10:50:04] *** Joins: cismee (~cisme_@2600:1700:d980:1a40:b6e8:aaa3:d221:5fe9)
[10:50:06] *** Quits: cisme_ (~cisme_@2600:1700:d980:1a40:b6e8:aaa3:d221:5fe9) (Read error: Connection reset by peer)
[10:50:34] *** Quits: cismee (~cisme_@2600:1700:d980:1a40:b6e8:aaa3:d221:5fe9) (Max SendQ exceeded)
[10:51:15] *** Joins: cismee (~cisme_@2600:1700:d980:1a40:b6e8:aaa3:d221:5fe9)
[10:52:52] *** Quits: cismee (~cisme_@2600:1700:d980:1a40:b6e8:aaa3:d221:5fe9) (Read error: Connection reset by peer)
[10:53:01] <theskillwithin> teut https://jsfiddle.net/theskillwithin/gu7r0j8L/
[10:53:14] *** Joins: cismee (~cisme_@2600:1700:d980:1a40:b6e8:aaa3:d221:5fe9)
[10:53:16] *** Quits: x-x (~x@user/x-x) (Quit: leaving)
[10:54:50] *** Quits: cismee (~cisme_@2600:1700:d980:1a40:b6e8:aaa3:d221:5fe9) (Remote host closed the connection)
[10:55:02] *** Joins: cismee (~cisme_@2600:1700:d980:1a40:b6e8:aaa3:d221:5fe9)
[10:55:09] <teut> oh fk , I used .textcontent on email '=D
[10:55:26] <teut> textContent, thats y it wasnt working
[10:56:04] <teut> so the form is submitted after you close the "submitted" alert?
[10:57:04] <teut> hey but where did your email variable came from?
[10:57:33] <teut> I like when I was trying to make this code work , used .textContent
[10:57:42] <theskillwithin> I was going to ask you the same question, teut i just forked from yours
[10:58:07] <teut> but yours is working
[10:58:20] <OhTheCode> what is 'email'?
[10:58:34] <teut> form's email field
[10:58:46] <theskillwithin> teut it seems to work, but idk why, cuz email shouldn't be defined
[10:58:56] <teut> I think I wrote a queryselector but I deleted that line
[10:59:22] <OhTheCode> i tested the regex quickly, it seems to work for normal cases
[10:59:32] <teut> "<a class='gotoLine' href='#179:8'>179:8</a> TypeError: e.submit is not a function"
[10:59:40] <teut> submit is not a function
[11:00:00] <teut> ya I copied the regex
[11:02:02] *** Quits: Drgonz0 (Drgonz0@107-179-254-222.cpe.teksavvy.com) ()
[11:03:46] *** Quits: ThePhilgrim (~thephilgr@151.41.185.44) (Remote host closed the connection)
[11:05:03] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:8d40:e10d:37be:4ec7) (Quit: Client closed)
[11:05:19] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[11:07:42] <teut> https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/formdata_event I think formData has to be used to change keys
[11:07:48] <teut> validate*
[11:10:15] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:10:25] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Quit: Client closed)
[11:14:32] *** Quits: netameta (~netameta@2a00:a040:193:50fe:25eb:6ff9:c847:c22f) (Ping timeout: 246 seconds)
[11:16:55] *** Joins: fweht (uid404746@lymington.irccloud.com)
[11:16:56] *** Joins: fahrradToken (~fahrradTo@212.7.190.34)
[11:18:47] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 250 seconds)
[11:20:48] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Quit: Leaving)
[11:22:42] *** Joins: kalen- (~kalen@gateway/vpn/pia/kalen)
[11:23:24] <teut> better is to just set button type as button , onclick check field , select form and .submit()
[11:23:58] *** Joins: thiras (~thiras@user/thiras)
[11:24:41] <theskillwithin> or button with type submit, and on form element you have onsubmit handler
[11:25:26] *** Quits: kalen (~kalen@gateway/vpn/pia/kalen) (Ping timeout: 256 seconds)
[11:25:34] *** kalen- is now known as kalen
[11:28:00] *** Joins: Akimb (~Akimb@82-135-197-171.static.zebra.lt)
[11:28:12] <teut> ya that also I noticed now
[11:29:21] <teut> https://dpaste.org/gikH
[11:29:34] <teut> this is the best way, no confusion at all
[11:30:24] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[11:31:27] *** Joins: EdFletcher (~PKD@user/edfletcher)
[11:32:40] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:182b:e35a:d509:199b)
[11:33:05] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 250 seconds)
[11:33:25] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:182b:e35a:d509:199b) (Client Quit)
[11:35:12] *** Joins: OnkelBlade (~OnkelTem@user/onkeltem)
[11:35:19] <theskillwithin> ljharb wtf https://jsfiddle.net/theskillwithin/b6tys7mn/
[11:46:00] *** Joins: gitesh (uid423739@ilkley.irccloud.com)
[11:46:31] *** Quits: zeromule (~eric@2601:602:8d80:4e50:a5a8:4f00:b2f9:2c63) (Ping timeout: 250 seconds)
[11:46:31] *** Quits: JohnDoe2 (~johndoe2@2001:470:1f07:89::dead:bead) (Quit: bye)
[11:48:15] *** Quits: ziddey (ziddey@coffeelake.home.ijib.com) (Ping timeout: 250 seconds)
[11:49:07] *** Quits: ircuser-1 (~Johnny@71.63.241.168) (Ping timeout: 250 seconds)
[11:49:43] *** Joins: ircuser-1 (~Johnny@71.63.241.168)
[11:50:52] <teut> my friend had a test for RetailIQ
[11:51:06] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:10b0:1262:7a8a:4c1)
[11:51:09] <teut> they asked to create that UI and validate the email
[11:57:56] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 246 seconds)
[11:58:28] <theskillwithin> https://www.xverify.com/
[11:58:44] <teut> whats that?
[11:59:27] <theskillwithin> if you want to do deeper validation after just regex
[11:59:37] <teut> like you can send a response to the server and wait for it to tell you, why avail this service?
[11:59:52] <teut> I dont need anything, the test said to do it
[12:00:11] <teut> they gave 3 hrs, but this was a better approach to take tests
[12:05:39] *** Quits: ckeshav (~keshavcha@user/ckeshav) (Ping timeout: 265 seconds)
[12:07:42] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[12:08:01] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[12:16:56] *** Joins: JohnDoe2 (~johndoe2@2001:470:1f07:89::dead:bead)
[12:17:08] *** Joins: zeromule (~eric@2601:602:8d80:4e50:a5a8:4f00:b2f9:2c63)
[12:20:14] *** Quits: vqueiroz (uid340368@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[12:20:45] *** Joins: pagnol (~user@014198154145.ctinets.com)
[12:21:34] *** Joins: Naan (~Naan@user/naan)
[12:22:40] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[12:24:46] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:25:29] *** Joins: Naan` (~Naan@user/naan)
[12:26:46] *** Quits: Naan` (~Naan@user/naan) (Client Quit)
[12:29:31] *** Joins: kogepan (~kogepan@user/kogepan)
[12:29:34] *** Joins: taupiqueur (~taupiqueu@66.144.204.77.rev.sfr.net)
[12:38:52] *** Joins: qswz (~caub@89-80-20-125.abo.bbox.fr)
[12:51:00] *** Joins: Guest45 (~Guest45@p200300c8cf21a300be9e8e319d0d5c8b.dip0.t-ipconnect.de)
[12:53:42] <silly> theskillwithin, https://2ality.com/2012/08/ids-are-global.html
[12:53:59] <silly> https://html.spec.whatwg.org/multipage/window-object.html#named-access-on-the-window-object
[12:54:49] <theskillwithin> silly thats the only conclusion, but that just sounds insane
[12:55:15] <silly> it's some strange standard for decades now
[12:55:32] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-567343-143.dhcp.inet.fi)
[12:55:33] <silly> probably from internet explorer
[12:56:03] <silly> "As a general rule, relying on this will lead to brittle code. Which IDs end up mapping to this API can vary over time, as new features are added to the web platform, for example. Instead of this, use document.getElementById() or document.querySelector()."
[12:59:23] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[12:59:55] <silly> some history on this issue https://stackoverflow.com/a/54546151/3108881
[13:00:56] <no_gravity> Funny. In my code, when I do this: "console.log(steps); console.log(steps.length);" I get an array with two elements and the value 0.
[13:01:01] *** Joins: amcsi (~amcsi@1F2E381A.catv.pool.telekom.hu)
[13:01:03] <no_gravity> What on earth is going on?
[13:01:04] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[13:01:27] <silly> !code @no_gravity
[13:01:27] <jellobot> no_gravity, Show some code, but don't paste it on the channel. You can provide a test case we can run and help you with your problem with http://jsfiddle.net , http://jsbin.com , or http://requirebin.com . Sites like http://gist.github.com/ and http://bpaste.net are cool too.
[13:02:19] <no_gravity> silly: Hard to do as this is a giant codebase.
[13:03:23] *** Joins: D4mned (~Dmnd@212.101.253.85)
[13:03:31] <silly> replace `console.log(steps);` with `debugger;`
[13:04:18] <silly> and look around...
[13:04:43] <no_gravity> silly: Then I see the steps variable containing the two elements.
[13:05:26] <silly> are these maybe object properties instead of array items?
[13:06:02] <silly> n> x=[]; x.test=1; x.foo=2; [x, x.length]
[13:06:03] <jellobot> (okay) [ [ test: 1, foo: 2 ], 0 ]
[13:06:38] <silly> n> x=[1,2,3]; x.test=1; x.foo=2; [x, x.length]
[13:06:38] <jellobot> (okay) [ [ 1, 2, 3, test: 1, foo: 2 ], 3 ]
[13:07:09] <silly> if so, then fix it, js is not php
[13:08:05] *** Quits: n00b101 (uid448161@lymington.irccloud.com) (Quit: Connection closed for inactivity)
[13:08:30] <no_gravity> x=[]; x.test=1; x.foo=2; [x, x.length, typeof x]
[13:08:34] <no_gravity> n> x=[]; x.test=1; x.foo=2; [x, x.length, typeof x
[13:08:35] <jellobot> (fail) SyntaxError: Unexpected end of input
[13:08:42] <no_gravity> n> x=[]; x.test=1; x.foo=2; [x, x.length, typeof x]
[13:08:43] <jellobot> (okay) [ [ test: 1, foo: 2 ], 0, 'object' ]
[13:09:33] <silly> n> x=[]; x.test=1; x.foo=2; [x, x.length, typeof x, Array.isArray(x)]
[13:09:34] <jellobot> (okay) [ [ test: 1, foo: 2 ], 0, 'object', true ]
[13:09:58] *** Joins: vysn (~vysn@user/vysn)
[13:10:02] <no_gravity> n> x=[]; typeof x;
[13:10:03] <jellobot> (okay) 'object'
[13:10:04] <no_gravity> Meh
[13:10:30] <no_gravity> n> x=[]; x.test=1; x.foo=2; [x, x.length, x.isArray()]
[13:10:31] <jellobot> (fail) TypeError: x.isArray is not a function
[13:10:37] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[13:10:43] <no_gravity> n> x=[]; x.test=1; x.foo=2; [x, x.length, Array.isArray(x)]
[13:10:44] <jellobot> (okay) [ [ test: 1, foo: 2 ], 0, true ]
[13:10:51] <no_gravity> Pfff
[13:10:58] <silly> n> x=""; y=new String(); [typeof x, typeof y]
[13:10:58] <jellobot> (okay) [ 'string', 'object' ]
[13:11:43] <silly> rule of thumb, if it's not a primitive, it's an object
[13:12:24] <silly> n> typeof null
[13:12:24] <jellobot> (okay) 'object'
[13:12:27] *** Quits: vysn (~vysn@user/vysn) (Client Quit)
[13:12:35] <silly> except maybe ^
[13:12:44] *** Joins: vysn (~vysn@user/vysn)
[13:13:31] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[13:14:25] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-567343-143.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:14:29] <no_gravity> Funny, I can for the life of me not reproduce it in a minimal fashion.
[13:15:26] <silly> you still insist it's an array with two items and length 0?
[13:15:51] <no_gravity> That is what the console shows when I do "console.log(steps);console.log(steps.length);"
[13:15:53] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0c0-17.dhcp.inet.fi)
[13:16:32] <silly> if you're still in the debugger breakpoint, you can probably search the callstack for the definition of the steps variable
[13:17:14] <silly> you can also set a watch for the variable
[13:17:37] <silly> then it breaks when the value is being changed
[13:17:54] <no_gravity> Ah! I am getting closer to it!
[13:18:16] <no_gravity> The console actually shows "Array [] 0
[13:18:17] <no_gravity> "
[13:18:28] <no_gravity> But when I click on "Array []" it shows 2 elements.
[13:18:49] <no_gravity> I guess it is because the array gets filled *after* the console.log
[13:18:50] <silly> console.log() is also async
[13:18:50] *** Joins: gas51627 (uid91066@helmsley.irccloud.com)
[13:19:07] <no_gravity> And console.log is not storing the data but a pointer to the array.
[13:19:11] <silly> and not a snapshot of the value at a given point in time
[13:19:17] <no_gravity> Mistery solved.
[13:19:58] <silly> you can circumvent with console.log(JSON.stringify(steps)) or better yet, use the debugger and break
[13:20:08] *** Quits: amcsi (~amcsi@1F2E381A.catv.pool.telekom.hu) (Remote host closed the connection)
[13:20:09] <no_gravity> Nice. Thanks.
[13:20:31] *** Joins: amcsi (~amcsi@1F2E381A.catv.pool.telekom.hu)
[13:20:31] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0c0-17.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:21:47] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-567343-143.dhcp.inet.fi)
[13:23:05] <teut> https://ibb.co/0VSg1MP  how to fix this?
[13:23:55] <silly> teut, how do you create those links?
[13:24:07] <silly> ctrl+c ctrl+v?
[13:24:10] <teut> you got that space problem again?
[13:24:18] <silly> not again, but still
[13:24:29] <teut> yes  that way only
[13:24:37] <teut> on web.libera.chat
[13:24:59] <silly> copy from browsers address bar and paste into webchat?
[13:25:10] <silly> weird
[13:26:31] <silly> https://styled-components.com/docs/tooling#usage
[13:26:36] <teut> https://ibb.co/0VSg1MP
[13:26:44] <teut> https://styled-components.com/docs/tooling#usage
[13:26:56] <silly> have you done both steps? npm install and include in your .babelrc?
[13:27:06] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[13:27:31] <teut> oh so thats causing it , ok I ll fix it
[13:27:34] <teut> thanks
[13:28:11] <silly> i don't know anything of next.js
[13:28:18] <silly> how do you build your project?
[13:29:02] <teut> I am following a Wes Bos tutorial
[13:29:32] <teut> he has done all this weird things in  package.json
[13:29:37] *** Joins: nomic (~nomic@185.192.69.224)
[13:29:51] <teut> these*
[13:30:11] <silly> ah, https://nextjs.org/docs/advanced-features/customizing-babel-config
[13:30:49] <teut> there's a config.js
[13:31:14] <teut>   "extends": "next/core-web-vitals"
[13:31:14] *** Quits: pagnol (~user@014198154145.ctinets.com) (Ping timeout: 260 seconds)
[13:31:28] <teut> and this in .eslintrc.json
[13:37:03] <teut> in this server side rendering, is that the react code runs on host's server and generated html, css, js is given to them?
[13:37:11] <teut> given to user *
[13:37:13] <cthulchu> safe chaining is not in es6, right? it's in es7 though?
[13:39:47] *** Joins: nomic2 (~nomic@185.192.69.224)
[13:39:56] *** Quits: qswz (~caub@89-80-20-125.abo.bbox.fr) (Remote host closed the connection)
[13:40:05] *** Joins: ThePhilgrim (~thephilgr@151.41.185.44)
[13:42:25] *** Quits: nomic (~nomic@185.192.69.224) (Ping timeout: 268 seconds)
[13:45:07] <silly> cthulchu, https://kangax.github.io/compat-table/es2016plus/
[13:45:16] <silly> optional chaining is in es2020
[13:46:13] <silly> that would be like es11
[13:46:45] <cthulchu> damn
[13:47:05] <sheetjs> use a transpiler
[13:47:07] <cthulchu> that's the only thing I lack in JS
[13:47:21] <cthulchu> nah
[13:47:31] <cthulchu> I'll keep using && for now
[13:47:39] <sheetjs> ?. is supported in Chrome 80
[13:47:52] <cthulchu> it's not supported in es6
[13:47:59] <sheetjs> does it matter?
[13:48:02] <cthulchu> yes
[13:48:10] <sheetjs> what is your browser support surface ?
[13:48:22] <cthulchu> I don't have it.
[13:48:30] <cthulchu> all I have is the es6 limitation for now
[13:48:43] <sheetjs> according to caniuse 91.81%
[13:48:44] <cthulchu> well, it's still es5 for damned GTM
[13:48:47] <sheetjs> https://caniuse.com/?search=optional%20chaining
[13:49:11] <cthulchu> it's not about browsers in my case
[13:49:17] <cthulchu> I write code in GTM and Launch mostly
[13:49:22] <sheetjs> you can use a transpiler with an ES6 target
[13:49:24] <cthulchu> they bestow the limits
[13:49:33] <cthulchu> yeah, I know, but it's even more annoying
[13:49:37] <sheetjs> so newer features are transpiled down to ES6 while ES6-native features are preserved
[13:50:00] *** Joins: ziddey (ziddey@coffeelake.home.ijib.com)
[13:50:01] <cthulchu> it would be cool had they supported git, but there's no git and I'm not copying code back and forth
[13:50:09] <silly> what are gtm and launch?
[13:50:24] <cthulchu> tag management systems
[13:50:28] <sheetjs> google tag manager
[13:51:59] <silly> "Google Tag Manager is a tag management system that includes the same features as global site tags, and lets you configure and instantly deploy tags on your website or mobile app from an easy to use web-based user interface. In addition, Tag Manager features support for third-party tags, organization features, version control, and enterprise collaboration and security features."
[13:52:09] <silly> ok... til... nothing
[13:53:23] *** nomic2 is now known as nomic
[13:53:48] <sheetjs> start from https://en.wikipedia.org/wiki/Tag_management_system
[13:53:56] <sheetjs> then https://support.google.com/tagmanager/answer/6102821?hl=en silly
[13:53:56] <cthulchu> it's a tool that is aimed to bridge marketing and web-dev. Basically what it does is it allows martech developers deploy arbitrary JS on a site instantly with no involvement from devops/it/FE teams whatsoever. Lol. Sounds awful, but that's what it is.
[13:54:49] <silly> oic
[13:55:00] <sheetjs> do you have an m1 mac out of curiosity?
[13:55:16] <cthulchu> what's an m1 mac?
[13:55:24] <sheetjs> mac with an m1 processor as opposed to intel
[13:55:26] *** Joins: va5c0 (~vasco.nun@173.247.63.94.rev.vodafone.pt)
[13:55:48] *** Quits: va5c0 (~vasco.nun@173.247.63.94.rev.vodafone.pt) (Client Quit)
[13:55:49] <cthulchu> nah, I'm a PC user. I use mac only as a remote machine to build ios apps.
[13:56:47] *** Quits: zeromule (~eric@2601:602:8d80:4e50:a5a8:4f00:b2f9:2c63) (Ping timeout: 264 seconds)
[13:57:24] *** Joins: zeromule (~eric@2601:602:8d80:4e50:a5a8:4f00:b2f9:2c63)
[13:58:09] <teut> all of react's code is javascript so how can you generate a html page from js?
[13:58:22] <teut> which happens in ssr
[13:58:58] <silly> n> "test".link("/path")
[13:58:59] <jellobot> (okay) '<a href="/path">test</a>'
[13:59:16] <silly> there are ways to create html with js...
[13:59:16] <teut> is that babel instead of compiling to React.createElements compiles to html and css?
[13:59:42] <silly> no babel does js to js only
[13:59:51] <silly> or mostly?
[14:00:08] <silly> i think it does jsx to js too
[14:01:16] <silly> ok, I DON'T KNOW
[14:01:41] <sheetjs> babel and plugins support a variety of languages
[14:01:45] <silly> but i don't think it's babel that does ssr
[14:02:17] <Decker> there's probably a plugin for that
[14:02:30] *** Joins: jim87 (~quassel@93.55.249.30)
[14:03:22] <stenno> jsx gets transpiled by babel to React.createElement
[14:08:46] *** Quits: teut (~teut@182.64.62.109) (Quit: Client closed)
[14:08:47] <austincheney> so what problem does the virtual dom actually solve?
[14:09:00] <austincheney> the idea sounds extremely inefficient to me
[14:10:19] <Decker> it's probably not the VDOM layer that's the solution - merely one of the things needed to enable a higher level page composition
[14:10:38] <Decker> with association between controls and code more...knowable
[14:10:54] *** Quits: shuvarek (~shuvarek@staticline-31-182-169-28.toya.net.pl) (Remote host closed the connection)
[14:11:49] <sheetjs> take a step back
[14:12:22] <sheetjs> babel just does jsx -> browser friendly JS
[14:12:41] <sheetjs> SSR is an independent concept
[14:13:00] <sheetjs> and virtual dom is independent from transpilation and ssr
[14:13:36] <sheetjs> austincheney: virtual dom solves the problem that DOM manipulation is slow
[14:14:31] <silly> oh, good point
[14:14:59] <sheetjs> maintaining a pure JS representation and computing diffs is much faster than interacting with the DOM, even if you are just removing and re-adding the same content
[14:15:26] <austincheney> sheetjs, DOM access is the speed of your CPU and the manipulation is the speed of your gpu.  You can get billions of ops per second on a micro benchmark for various forms of dom access
[14:15:33] <austincheney> I am not sure how a virtual dom would make that faster
[14:15:38] <sheetjs> DOM manipulation
[14:15:53] <sheetjs> removing nodes, adding nodes aren't that simple
[14:16:11] <austincheney> appendChild, removeChild are pretty simple
[14:16:14] <silly> and not all css modifications are done in the gpu
[14:16:16] <stenno> yeah vdom is just _really_ smart about updating the dom
[14:16:50] <sheetjs> (not so humble brag) this is how we accidentally contributed to react
[14:17:04] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[14:17:07] <silly> who's we?
[14:17:10] <stenno> vdom is made by sheetjs?
[14:17:36] <sheetjs> no, god no.  how do you determine something changed?
[14:17:49] <stenno> comparing diffs
[14:17:58] <stenno> or creating diffs even
[14:18:00] <sheetjs> comparing values
[14:18:10] <austincheney> people claim there is a performance benefit to vdom, but I don't see it
[14:18:12] <stenno> right
[14:18:21] <sheetjs> sure, but for long text strings you can either do a per-character comparison or compute a hash
[14:19:11] <austincheney> hashing is much slower than dom manipulation
[14:19:16] <sheetjs> hashing text?
[14:19:32] <Decker> but - ti's already hashed
[14:19:33] <sheetjs> dom manipulation is far slower than any sort of comparable-sized text or binary manipulation
[14:19:41] <Decker> checking a hash is faster than dom manip
[14:19:54] <sheetjs> austincheney: just to add a node to the DOM, a bunch of events are triggered
[14:20:30] <Decker> ya; but in the end that node has to be added to the DOM....
[14:20:32] <austincheney> sheetjs, hashing is two operations 1) reading the input, 2) executing the algorithm.  The algorithm execution is much slower than adding a removing a node from the dom
[14:20:36] <Decker> so those events are still triggered...
[14:21:01] <sheetjs> right austincheney hence the sheetjs contribution to react
[14:21:48] <silly> if you already have thousands of elements, triggering a reflow with one new element can be a monster
[14:21:51] <austincheney> sheetjs, a bunch of events shouldn't be executing on appendChild or removeChild unless you are creating custom events.  There is not a native "addChild" event.
[14:21:54] <sheetjs> https://github.com/facebook/react/pull/4400 so they were actually using a similar hashing algorithm
[14:21:57] <austincheney> even accounting for bubbling
[14:23:03] <sheetjs> there's a spec specifically for that
[14:23:08] <sheetjs> https://www.w3.org/TR/DOM-Level-3-Events/#events-mutationevents
[14:23:40] <sheetjs> including DOMNodeInserted DOMNodeInsertedIntoDocument DOMSubtreeModified
[14:24:36] <sheetjs> creating a node isn't free, adding to the document isn't free, even modifying an existing node isn't free thanks to the obvious
[14:25:20] <sheetjs> for the simple case of <span>text</span> changing the text content potentially changes the document layout
[14:25:30] <austincheney> I get that you are modifying an existing tree and there are costs to that, but those costs do not qualify the expense of a diff
[14:26:39] <silly> i thought that not only dom manipulation wasn't free, it's quite the opposite, it's a really heavy operation
[14:27:02] <austincheney> ah layout, not the same thing, but incidental.  There is a rendering cost to layout change, but that isn't the same as the cost to modifying the dom
[14:27:06] <sheetjs> DOM manipulation is costly
[14:28:48] <sheetjs> you see the same sort of effect when talking about SVG vs CANVAS for drawing charts
[14:28:53] <austincheney> you can easily get millions of ops per second on dom modification is layout is not changed, even on older hardward, so long as you are using a relatively modern browser
[14:29:25] <silly> oic
[14:29:54] *** Quits: ziddey (ziddey@coffeelake.home.ijib.com) (Ping timeout: 268 seconds)
[14:30:09] <austincheney> a good example is opacity.  Changes to opacity do not modify layout and so it can be animated very efficiently even as a dom change.
[14:30:37] <sheetjs> the typical use case for react involves changing the text content or actual subtree
[14:31:41] <austincheney> a better performance example is a node set to display:none with many descendants.  You can perform many changes to that DOM tree without impacting layout and they are all as fast as your hardware allows
[14:31:56] <austincheney> no change to layout
[14:33:20] <austincheney> there is a performance bottleneck to the dom though, which is that there is only one document object and all asynchronous DOM instructions can only access that object one at a time
[14:33:28] <austincheney> that is why they created document fragments
[14:34:02] <austincheney> but most DOM implementations through frameworks and libraries are so slow now (and the browsers are so fast) that there is no reason to bother with document fragments
[14:34:47] <sheetjs> you just defer the penalty
[14:38:09] <austincheney> really, with performance at the 10 of millions - billions of ops/s the biggest performance killers are event listeners and inefficient DOM access.  Layout inefficients stop mattering if the code is garbage (unless you have extreme hardware video processing limitations)
[14:38:28] <austincheney> *inefficiencies
[14:39:07] <sheetjs> you're still talking past the point, which is that dom manipulation is costlier than other approaches like virtual dom
[14:39:35] <sheetjs> its not about whether the absolute performance is acceptable
[14:39:51] <sheetjs> on the fundamentals and in practice, dom ops are slower
[14:40:00] <austincheney> i am not sure how that is possible since vdom is nonstandard and requires dom manipulation at some point.  Maybe the goal is to reduce the frequence of mutations?
[14:40:21] <austincheney> frequency
[14:40:26] <austincheney> i cannot spell this early
[14:40:32] <sheetjs> for the same reason, charts aiming to show many data points use canvas rather than svg
[14:41:13] <austincheney> yes, canvas is much faster to render because it is binary where as svg is interpreted from an xml tree
[14:43:45] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 250 seconds)
[14:44:55] <sheetjs> too early in the morning to think
[14:47:19] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[14:47:19] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-567343-143.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:48:33] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0c0-17.dhcp.inet.fi)
[14:49:30] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 265 seconds)
[14:49:58] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[14:50:34] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[14:51:25] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:301e:cfcd:47ee:8af2)
[14:52:08] *** Joins: lind{at}yahoo (uid486956@tinside.irccloud.com)
[14:52:49] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0c0-17.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:54:04] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-567343-143.dhcp.inet.fi)
[15:02:15] *** Joins: stenno (~stenno@user/stenno)
[15:04:30] *** Joins: JohnComputation2 (~JohnCompu@gateway/tor-sasl/johncomputation)
[15:04:39] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Ping timeout: 276 seconds)
[15:11:31] *** Quits: nomic (~nomic@185.192.69.224) (Quit: Leaving)
[15:17:27] *** Quits: amcsi (~amcsi@1F2E381A.catv.pool.telekom.hu) (Remote host closed the connection)
[15:22:22] *** Joins: amcsi (~amcsi@1F2E381A.catv.pool.telekom.hu)
[15:23:37] *** Quits: kmh (~kmh@2a00:6020:5004:6800:593f:3225:4960:5d69) (Quit: Leaving)
[15:24:10] *** Quits: dfip^ (~dfip@h50.174.139.63.static.ip.windstream.net) (Remote host closed the connection)
[15:27:26] *** Quits: amcsi (~amcsi@1F2E381A.catv.pool.telekom.hu) (Ping timeout: 260 seconds)
[15:30:22] *** Joins: kmh (~kmh@2a00:6020:5004:6800:47a3:5ba7:9e21:e0c)
[15:30:36] *** Quits: cebor (~cebor@user/cebor) (Quit: bye!)
[15:30:55] *** Joins: cebor (~cebor@user/cebor)
[15:31:43] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[15:31:46] *** Quits: ThePhilgrim (~thephilgr@151.41.185.44) (Remote host closed the connection)
[15:32:18] *** Joins: ThePhilgrim (~thephilgr@151.41.185.44)
[15:33:59] *** Joins: pmercado_ (~pmercado@186.107.40.51)
[15:35:52] *** Joins: jellobot3 (~jellobot@li334-26.members.linode.com)
[15:35:52] *** ChanServ sets mode: +v jellobot3
[15:35:52] *** jellobot is now known as Guest564
[15:35:52] *** Quits: Guest564 (~jellobot@li334-26.members.linode.com) (Killed (lead.libera.chat (Nickname regained by services)))
[15:35:52] *** jellobot3 is now known as jellobot
[15:36:09] *** Quits: Cyp (~cyp@192038135092.mbb.telenor.dk) (Remote host closed the connection)
[15:36:34] *** Joins: Cyp (~cyp@192038135092.mbb.telenor.dk)
[15:36:37] *** Quits: ThePhilgrim (~thephilgr@151.41.185.44) (Ping timeout: 250 seconds)
[15:43:24] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[15:49:29] *** Quits: Guest45 (~Guest45@p200300c8cf21a300be9e8e319d0d5c8b.dip0.t-ipconnect.de) (Quit: Client closed)
[15:49:39] *** Joins: Guest45 (~Guest45@p200300c8cf21a300be9e8e319d0d5c8b.dip0.t-ipconnect.de)
[15:57:43] *** Joins: diamondbond (~diamondbo@175.157.52.20)
[15:58:10] *** Joins: Assault (~Assault@176-93-249-121.bb.dnainternet.fi)
[15:58:11] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Remote host closed the connection)
[15:58:36] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[16:02:11] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 264 seconds)
[16:04:14] *** Quits: Guest45 (~Guest45@p200300c8cf21a300be9e8e319d0d5c8b.dip0.t-ipconnect.de) (Quit: Client closed)
[16:04:21] *** Quits: jim87 (~quassel@93.55.249.30) (Ping timeout: 250 seconds)
[16:04:23] *** Joins: Guest45 (~Guest45@p200300c8cf21a300be9e8e319d0d5c8b.dip0.t-ipconnect.de)
[16:04:55] *** Joins: ThePhilgrim (~thephilgr@151.41.185.44)
[16:11:32] *** Joins: tlf (~tlf@mobile-166-170-20-57.mycingular.net)
[16:12:30] <gde33> replacing the entire page with a string quickly gets faster than n dom manipulations where n is surprisingly small
[16:12:35] *** Quits: X-Scale (~ARM@165.201.137.78.rev.vodafone.pt) (Ping timeout: 250 seconds)
[16:12:42] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Ping timeout: 260 seconds)
[16:12:57] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:13:54] <gde33> but moving rendered things in and out of the view port is amazingly fast
[16:14:10] *** Joins: X-Scale` (~ARM@46.50.0.92)
[16:14:16] <gde33> (x,y moving)
[16:15:07] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[16:15:12] <stenno> gotoxy
[16:15:32] *** X-Scale` is now known as X-Scale
[16:15:39] *** Joins: amcsi (~amcsi@1F2E381A.catv.pool.telekom.hu)
[16:16:26] <gde33> I wonder how much influence a 100 mb comment at the end of a document has. :P
[16:16:36] <gde33> I bet its almost zero
[16:23:57] *** Quits: kogepan (~kogepan@user/kogepan) (Quit: Leaving)
[16:24:04] *** Joins: kalen- (~kalen@gateway/vpn/pia/kalen)
[16:25:18] *** Joins: kogepan (~kogepan@user/kogepan)
[16:28:20] *** Joins: jim87 (~quassel@93.55.249.30)
[16:28:36] *** Joins: harpia (~harpia@2804:2aec:205:1400:1a8b:e47a:9188:7f77)
[16:29:30] *** Quits: diamondbond (~diamondbo@175.157.52.20) (Ping timeout: 260 seconds)
[16:31:17] *** Joins: Akimbas (~Akimb@82-135-197-171.static.zebra.lt)
[16:32:24] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-567343-143.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:33:48] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0c0-17.dhcp.inet.fi)
[16:34:44] *** Joins: diamondbond (~diamondbo@175.157.52.20)
[16:36:34] *** Joins: han-solo (~hanish@user/han-solo)
[16:36:53] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Remote host closed the connection)
[16:37:18] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[16:37:39] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[16:39:18] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0c0-17.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:40:39] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-567343-143.dhcp.inet.fi)
[16:41:33] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[16:41:50] *** Joins: mickey8 (~user@user/mickey)
[16:43:28] *** Quits: shokohsc86 (~shokohsc@179.106.23.93.rev.sfr.net) (Read error: Connection reset by peer)
[16:46:40] *** Joins: shokohsc86 (~shokohsc@179.106.23.93.rev.sfr.net)
[16:46:54] <austincheney> gde33, i would be interested in your results of testing that
[16:47:38] *** Joins: diamondbond_ (~diamondbo@175.157.52.20)
[16:48:54] *** Quits: diamondbond_ (~diamondbo@175.157.52.20) (Client Quit)
[16:50:08] *** Quits: diamondbond (~diamondbo@175.157.52.20) (Ping timeout: 256 seconds)
[16:50:09] *** Joins: shokohsc861 (~shokohsc@22.199.23.93.rev.sfr.net)
[16:51:13] *** Quits: shokohsc861 (~shokohsc@22.199.23.93.rev.sfr.net) (Read error: Connection reset by peer)
[16:51:35] *** Quits: shokohsc86 (~shokohsc@179.106.23.93.rev.sfr.net) (Ping timeout: 250 seconds)
[16:51:44] *** Quits: zeromule (~eric@2601:602:8d80:4e50:a5a8:4f00:b2f9:2c63) (Ping timeout: 268 seconds)
[16:52:27] *** Joins: shokohsc861 (~shokohsc@22.199.23.93.rev.sfr.net)
[16:56:43] *** Quits: Flonk (~Flonk@vps-zap441517-1.zap-srv.com) (Remote host closed the connection)
[17:02:51] *** Quits: amcsi (~amcsi@1F2E381A.catv.pool.telekom.hu) (Ping timeout: 250 seconds)
[17:10:07] <gde33> austincheney: accessing it is a bit of a puzzle
[17:10:52] <gde33> perhaps as 1 mb dom nodes
[17:11:08] *** Joins: amcsi (~amcsi@1F2E381A.catv.pool.telekom.hu)
[17:12:16] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-567343-143.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:12:27] <gde33> I have a search engine that uses a giant comment, it uses indexOf, then gets a sub string
[17:13:21] *** Joins: src (~src@user/src)
[17:13:36] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0c0-17.dhcp.inet.fi)
[17:15:10] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:301e:cfcd:47ee:8af2) (Ping timeout: 268 seconds)
[17:15:45] <austincheney> I was using a comment to store state in my application and then fetching it via the DOM.  now I am using input type hidden instead of the big comment.
[17:16:24] <gde33> austincheney: ah that should also be very cheap
[17:17:58] <austincheney> I made that change as a micro performance improvement.  Custom DOM traversal proved slow at about 2000 ops/s on my computer where getElementsByTagName can run at about 800,000,000 ops/second
[17:18:30] <austincheney> on Firefox, at least
[17:19:07] <austincheney> DOM traversal maxes out at about 40,000,000 ops/s on chrome best case scenario
[17:19:16] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0c0-17.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:20:31] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-567343-143.dhcp.inet.fi)
[17:21:07] <austincheney> on my laptop I can get 1.2 billion ops/second for stuff like getElementById or getElementsByTagName in firefox because the CPU has a higher clock rate.  Some people on HN have reported upwards of 4.5b ops/s with really good hardware like a 4ghz threadripper
[17:21:40] <gde33> Its usually about slow machines for me
[17:22:39] *** Joins: n00b101 (uid448161@lymington.irccloud.com)
[17:22:45] <n00b101> I have an HTML page where when we select a word from textbox, it alerts it saying, "you choose this word". That I've used Js onmouseup(). Can I pass the variable containing the word to my backend flask app? I don't have any submit or any such buttons.
[17:22:46] <n00b101> In short, after selecting the word, it'll alert, also pass word (return of my selected ()  to my backend flask app
[17:23:42] <austincheney> n00b101, you can transmit a value but not a variable.  Its just a string
[17:23:50] <gde33> n00b101: you can post using js or make some other request like an image with the word appended to it example.com/foo.php?word=banana
[17:25:25] <n00b101> There is a  functions responsible for  returning the word which is selected. I only need to pass what the function returns.. yes not variable
[17:25:56] *** Joins: pulse (~pulse@user/pulse)
[17:26:33] <n00b101> gde33: I don't get you. Also I'm not a js dev. I'm working only with flask. This is my first exposure to js although I know basics
[17:26:50] <gde33> ok
[17:28:24] <n00b101> My wordselect() does all the work. Only case is to pass the return value of This function whenever select process is done a.k.a with onmouseup event
[17:28:48] <n00b101> So, there's no POST I guess..🤔
[17:29:14] *** Quits: taupiqueur (~taupiqueu@66.144.204.77.rev.sfr.net) (Ping timeout: 260 seconds)
[17:29:35] <silly> !fetch @n00b101
[17:29:35] <jellobot> n00b101, window.fetch - a standard way to make HTTP requests, say bye to XHR and get a Promise http://mdn.io/Using_Fetch. For older browsers (IE*) see !polyfill
[17:30:01] <gde33> n00b101: the right solution is to make a post with js but something hackish like this should work too: <img src="blank.png" id="myImage"> then do   document.querySelector('#myImage').src="backend.php?word=banana"
[17:30:42] <gde33> n00b101: then it changes the img src to "backend.php?word=banana"
[17:31:06] <gde33> n00b101: the browser will then attempt to load the image
[17:32:58] <gde33> n00b101: what is suppose to happen after the word is submitted?
[17:34:43] <n00b101> jellobot: you're saying to make an http request to flask endpoint with the values?
[17:34:58] *** Quits: happymeal (~happymeal@user/happymeal) (Quit: https://www.endofthelinegaming.com -- A Team Fortress 2 community!)
[17:35:38] <n00b101> gde33: I'll show you my small code. It's a simple html text box with text It
[17:36:11] *** Joins: happymeal (~happymeal@user/happymeal)
[17:38:10] *** Joins: thiras (~thiras@user/thiras)
[17:39:21] *** Joins: voltage_ (voltage@user/voltage)
[17:43:58] *** Quits: leviathan (~leviathan@2600:1700:dad0:9870:80b1:a424:8406:6eea) (Remote host closed the connection)
[17:44:17] *** Joins: leviathan (~leviathan@2600:1700:dad0:9870:61d7:b5a0:3e02:7a50)
[17:47:03] <n00b101> https://bpa.st/LMUA
[17:48:19] *** Quits: leviathan (~leviathan@2600:1700:dad0:9870:61d7:b5a0:3e02:7a50) (Remote host closed the connection)
[17:50:34] *** Joins: hemstock (~hemstock@68.71.244.6)
[17:50:59] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[17:51:17] *** Joins: mickey8 (~user@user/mickey)
[17:52:46] <gde33> n00b101: sry was making coffee
[17:53:12] <gde33> n00b101: you have    var text = document.getElementById("area");  just add  var image = document.getElementById("image");  to the end....
[17:53:14] <n00b101> sorry for late post..
[17:53:33] <gde33> n00b101: then can do image.src = "whatever url you want to load"
[17:54:12] <n00b101> here you go https://jsfiddle.net/krcLtmo3/
[17:54:27] <n00b101> please note console.log
[17:54:46] <n00b101> simply put some words in text area and select it
[17:55:03] <n00b101> it'll console log the selected text
[17:56:03] <n00b101> https://imgur.com/gTlAfWV.png
[17:56:29] <n00b101> these 2 values is what the JS will return. i simply want to pass it to backend flask
[17:57:12] *** Joins: Rockwood (~Rocky@user/rocky)
[17:58:25] <n00b101> gde33: just add  var image = document.getElementById("image");  to the end....
[17:58:30] *** Quits: gas51627 (uid91066@helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[17:58:34] <n00b101> i still dont get the idea
[17:59:27] <gde33> n00b101: that will select an image in the dom by id
[17:59:43] <gde33> n00b101: if you change the url of the image it will try load it from the server
[17:59:51] <Rockwood> or you can use class name too
[18:00:09] <gde33> n00b101: the server then receaves the request
[18:00:31] <gde33> n00b101: if you put a few words behind the url like ?foo=bar&baz=barbar
[18:00:44] <gde33> n00b101: you can retreave it on the back end
[18:01:00] <gde33> as a normal GET
[18:01:07] *** Joins: shokohsc8618 (~shokohsc@6.199.23.93.rev.sfr.net)
[18:01:47] *** Quits: shokohsc861 (~shokohsc@22.199.23.93.rev.sfr.net) (Ping timeout: 250 seconds)
[18:01:48] *** shokohsc8618 is now known as shokohsc861
[18:02:25] <gde33> n00b101: you do need an image on the page to make it work of course. Give it an id that matches the getElementById thingy
[18:02:46] <n00b101> can you show an example?
[18:03:06] <gde33> n00b101: you understand this? <img src="blank.png" id="dinosaur">
[18:03:13] <n00b101> yes
[18:03:30] <gde33> and this?   document.getElementById("dinosaur");
[18:03:39] <n00b101> this too..yes
[18:03:40] <gde33> that will return a reference to the image on the page
[18:03:45] <n00b101> but why we need this
[18:04:08] <n00b101> i don't get your idea for using an image
[18:04:08] <gde33> so you can do  document.getElementById("dinosaur").src ="blank.php"
[18:04:29] <n00b101> backend is not php
[18:04:30] <gde33> or myImage =  document.getElementById("dinosaur");    then   myImage.src ="blank.php"
[18:04:42] <gde33> n00b101: doesn't matter, just some url on your backend
[18:04:45] <n00b101> only single route (/)
[18:04:54] <gde33> oh I dont know flask
[18:06:20] <gde33> n00b101: https://pythonbasics.org/flask-http-methods/
[18:06:33] *** Quits: Assault (~Assault@176-93-249-121.bb.dnainternet.fi) (Ping timeout: 250 seconds)
[18:07:07] <n00b101> it needs a submit kinda button to POST stuff
[18:07:35] <n00b101> which is what i dont have/dont need
[18:07:40] <gde33> n00b101: you know the difference between POST and GET?
[18:08:03] <n00b101> POST -> from front to back/ a forum
[18:08:17] *** Quits: Akimbas (~Akimb@82-135-197-171.static.zebra.lt) (Quit: Leaving)
[18:08:18] <n00b101> GET is usually used in back to get stuff from front
[18:08:26] *** Quits: Akimb (~Akimb@82-135-197-171.static.zebra.lt) (Read error: Connection reset by peer)
[18:08:28] <n00b101> usually using an id
[18:08:42] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:08:42] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[18:08:42] *** Joins: wroathe (~wroathe@user/wroathe)
[18:08:43] <gde33> GET is pretty much the same only it appends the data to the url
[18:08:57] <gde33> that way you have a link that can be used again
[18:10:06] <gde33> but I don't know how flask end point work
[18:10:37] <gde33> maybe just use fetch, its a somewhat less ugly solution
[18:12:31] <gde33> n00b101: is it important the page doesn't change?
[18:13:05] <n00b101> it should not reload, else text in textbox will disappear
[18:14:00] *** Joins: nomic (~nomic@185.192.69.224)
[18:14:18] *** Joins: vysn (~vysn@user/vysn)
[18:15:05] *** Joins: shokohsc8611 (~shokohsc@220.19.23.93.rev.sfr.net)
[18:15:31] <D4mned> are you talking about a form ?
[18:16:01] <D4mned> you can preventDefault() to prevent it from reloading the page
[18:16:05] *** Quits: shokohsc861 (~shokohsc@6.199.23.93.rev.sfr.net) (Ping timeout: 250 seconds)
[18:16:15] *** shokohsc8611 is now known as shokohsc861
[18:17:42] <n00b101> yes, ig ithis is something else
[18:17:51] <n00b101> this*
[18:17:55] <D4mned> oh alright
[18:19:34] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[18:20:28] *** Joins: reallymemorable (~reallymem@pool-108-46-75-178.nycmny.fios.verizon.net)
[18:21:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[18:26:49] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[18:28:42] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[18:30:08] *** Joins: wovixo (~wovixo@128.104.205.49)
[18:30:26] *** Quits: fahrradToken (~fahrradTo@212.7.190.34) (Ping timeout: 256 seconds)
[18:36:37] *** Quits: wovixo (~wovixo@128.104.205.49) (Read error: Connection reset by peer)
[18:37:53] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[18:37:55] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:37:55] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[18:37:55] *** Joins: wroathe (~wroathe@user/wroathe)
[18:38:47] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 264 seconds)
[18:40:03] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[18:40:56] *** Joins: mimmy (~mimmy@146.70.75.156)
[18:42:05] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[18:42:08] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:43:47] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[18:44:18] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[18:45:11] *** Joins: Akimb (~Akimb@86.100.13.100)
[18:45:31] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[18:47:25] *** Quits: kalen- (~kalen@gateway/vpn/pia/kalen) (Quit: Leaving)
[18:50:09] *** Joins: pulse (~pulse@user/pulse)
[18:52:18] *** Joins: riotz (~riotz@user/riotz)
[18:53:42] *** Quits: Nitrousoxide (~msdos@user/nitrousoxide) (Ping timeout: 260 seconds)
[18:56:58] *** Joins: Nitrousoxide (~msdos@user/nitrousoxide)
[18:58:25] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 265 seconds)
[18:59:28] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[18:59:33] <rustyshackleford> I want to pretty print an object sorted by key name
[18:59:51] <rustyshackleford> json.stringify chokes when I have nested objects
[19:00:12] <rustyshackleford> there's utils.inspect. Is there anything else I can use?
[19:00:26] *** Joins: mat001_ (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[19:01:12] *** Joins: summersault (~summersau@179.221.251.16)
[19:01:20] <hassoon> 'afternoon
[19:02:00] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[19:02:40] *** Joins: Kobaz (~libera@its.kobaz.net)
[19:02:48] <Kobaz> anyone know if there's a blockly chat somewhere?
[19:03:00] <Kobaz> the google groups doesn't have much activity
[19:03:44] *** Quits: riotz (~riotz@user/riotz) (Ping timeout: 265 seconds)
[19:03:59] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 264 seconds)
[19:04:39] <stenno> no clue
[19:12:21] *** Joins: summersault (~summersau@179.221.251.16)
[19:14:18] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[19:14:23] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[19:15:26] *** Quits: nomic (~nomic@185.192.69.224) (Quit: Leaving)
[19:16:18] *** Joins: nortoh (~nortoh@user/nortoh)
[19:22:51] *** Quits: shokohsc861 (~shokohsc@220.19.23.93.rev.sfr.net) (Read error: Connection reset by peer)
[19:25:00] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 265 seconds)
[19:26:01] *** Joins: shokohsc861 (~shokohsc@223.107.23.93.rev.sfr.net)
[19:29:19] *** Quits: Nitrousoxide (~msdos@user/nitrousoxide) (Ping timeout: 250 seconds)
[19:31:35] *** Joins: leviathan (~leviathan@199-83-221-152.PUBLIC.monkeybrains.net)
[19:32:19] *** Joins: i0e (~is0ke3@user/is0ke3)
[19:32:37] *** Joins: Nitrousoxide (~msdos@user/nitrousoxide)
[19:34:07] *** Joins: salad (~cucumber@82-77-99-119.cable-modem.hdsnet.hu)
[19:35:36] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 256 seconds)
[19:36:47] *** Quits: harpia (~harpia@2804:2aec:205:1400:1a8b:e47a:9188:7f77) (Quit: harpia)
[19:37:03] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[19:37:37] *** Joins: zebrag (~chris@user/zebrag)
[19:38:12] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[19:39:13] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[19:39:15] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[19:39:18] *** Joins: cythrawll (sid384410@ilkley.irccloud.com)
[19:40:08] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[19:41:05] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[19:41:19] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[19:41:27] <renlo> rustyshackleford: traverse the object
[19:41:47] <renlo> also, JSON.stringify "choking" probably means cycles in your object?
[19:42:05] <rustyshackleford> one of the properties is an array of objects
[19:42:09] *** Quits: earendel (uid498179@user/earendel) (Quit: Connection closed for inactivity)
[19:42:21] <rustyshackleford> it will stringify that array like this: "[ {}, {} ]"
[19:44:00] *** Joins: eXistenZ (~biskit@2001:4df4:20b3:400:d1bc:52d2:15c8:768e)
[19:44:43] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[19:47:10] *** Joins: Guest87 (~Guest87@46.109.76.104)
[19:47:29] *** Quits: kogepan (~kogepan@user/kogepan) (Ping timeout: 268 seconds)
[19:48:33] *** Joins: obimod (~obimod@gateway/vpn/pia/obimod)
[19:49:34] *** Joins: riotz (~riotz@user/riotz)
[19:54:58] *** Quits: riotz (~riotz@user/riotz) (Ping timeout: 265 seconds)
[20:00:43] *** Joins: tlf_other (~tlf@mobile-166-170-20-57.mycingular.net)
[20:03:11] *** Quits: tlf (~tlf@mobile-166-170-20-57.mycingular.net) (Ping timeout: 265 seconds)
[20:04:35] *** Quits: shokohsc861 (~shokohsc@223.107.23.93.rev.sfr.net) (Ping timeout: 264 seconds)
[20:05:49] *** Joins: shokohsc861 (~shokohsc@223.107.23.93.rev.sfr.net)
[20:07:15] *** Quits: ThePhilgrim (~thephilgr@151.41.185.44) (Remote host closed the connection)
[20:07:36] *** Joins: ThePhilgrim (~thephilgr@151.41.185.44)
[20:10:08] *** Joins: vqueiroz (uid340368@hampstead.irccloud.com)
[20:10:48] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.2)
[20:11:29] *** Quits: Guest45 (~Guest45@p200300c8cf21a300be9e8e319d0d5c8b.dip0.t-ipconnect.de) (Quit: Client closed)
[20:11:32] <renlo> rustyshackleford: you'd need to convert to an object. there's gotta be some lib out there which does the sorted stringify
[20:11:56] <vqueiroz> What is this crap about libsass being deprecated? kids these days apparently can't stop the urge to migrate all their libraries to a new language whenever a new language is released.
[20:12:36] <systemfault> If at least it was a language that people used or had any advantage...
[20:12:58] <systemfault> It had to be the stupid Java-lite that is Dart
[20:13:43] <vqueiroz> systemfault: PLUS ONE
[20:14:00] <vqueiroz> I'd even accept Rust! And, believe me, I hate Rust
[20:14:10] *** Joins: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com)
[20:16:49] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Read error: No route to host)
[20:17:12] *** Joins: kogepan (~kogepan@user/kogepan)
[20:19:40] *** Joins: Drgonz0 (~Drgonz0@107-179-254-222.cpe.teksavvy.com)
[20:19:44] *** Joins: Guest45 (~Guest45@p200300c8cf21a300be9e8e319d0d5c8b.dip0.t-ipconnect.de)
[20:21:12] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[20:21:45] *** Quits: lind{at}yahoo (uid486956@tinside.irccloud.com) (Quit: Connection closed for inactivity)
[20:23:35] *** Joins: praet (~dev@user/praet)
[20:26:07] <praet> anyone work with ReadableStream?
[20:27:34] <hassoon> what's that
[20:28:48] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 268 seconds)
[20:30:06] <praet> actually scrtach that, i have two arrays, whats a clean way to read a slice spanning both without combining into a single array. they are very large files
[20:30:44] *** Quits: kogepan (~kogepan@user/kogepan) (Ping timeout: 265 seconds)
[20:32:44] <praet> I have to skip over some parts of the file, like head = [0,0,0,0,0]; tail = [1,1,1,1,0,0,0,0,0,0,...]; data = slice(3, 6) should be [0,0,0]
[20:34:17] <systemfault> praet: Define: Large
[20:34:22] <systemfault> 1MB? :)
[20:35:35] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[20:35:55] *** Quits: kmh (~kmh@2a00:6020:5004:6800:47a3:5ba7:9e21:e0c) (Quit: Leaving)
[20:36:01] <praet> 2 1GB files
[20:36:13] <ljharb> theskillwithin: wtf what, that's DOM0
[20:36:44] <praet> reading in chunks, but i need to grab a slice of what would be the combined stream
[20:37:30] *** Quits: stagas (~stagas@2a02:587:c418:44b1:45ad:8e18:e721:e91c) (Ping timeout: 265 seconds)
[20:37:35] *** Joins: WishBoy (~WishBoy@user/wishboy)
[20:38:31] *** Joins: stagas (~stagas@2a02:587:c418:44b1:72:b594:1fce:19bf)
[20:40:43] *** Joins: kmh (~kmh@2a00:6020:5004:6800:d071:7f46:ac12:b504)
[20:45:00] *** Joins: lind{at}yahoo (uid486956@tinside.irccloud.com)
[20:45:04] <Rockwood> systemfault, hi
[20:45:39] <Rockwood> return () => setTimeout(() => {clearErrors()}, 2000); oops not works
[20:46:10] <Rockwood> https://gist.github.com/Cyberiaaxis/340dd5e1357427fd4be90d3d216bdf26
[20:46:12] *** Joins: pinpil (~pinpil@p57a76ac2.dip0.t-ipconnect.de)
[20:46:39] <Rockwood> idk why it not sensing timeout
[20:47:39] <systemfault> Rockwood: hi
[20:48:03] *** Quits: kmh (~kmh@2a00:6020:5004:6800:d071:7f46:ac12:b504) (Read error: Connection reset by peer)
[20:48:14] *** Joins: kmh (~kmh@2a00:6020:5004:6800:d071:7f46:ac12:b504)
[20:48:29] *** Quits: reallymemorable (~reallymem@pool-108-46-75-178.nycmny.fios.verizon.net) (Remote host closed the connection)
[20:49:04] *** Joins: reallymemorable (~reallymem@pool-108-46-75-178.nycmny.fios.verizon.net)
[20:49:15] <systemfault> praet: do you want to process the whole file or you're just reading at specific offsets?
[20:49:40] <praet> systemfault: just offsets
[20:49:49] <hassoon> Rockwood: you should store the setTimeout function in a variable for a later clearing when need, the way you're using it as a return of an arrow function is not right
[20:50:12] <Rockwood> ah okay
[20:50:30] <silly> the arrow function returns undefined, that's ok
[20:50:43] <hassoon> Rockwood: e.g var myTimeOut = setTimeout(()=>{/*whatever*/}, durationInMs);
[20:50:56] <Rockwood> okay
[20:51:07] <Rockwood> i got your point
[20:51:20] <systemfault> praet: then maybe that a stream is not what you want.. maybe that manual read or even using memory-mapped files would be better
[20:51:29] <hassoon> Rockwood: you can just call the setTimeout(()=>{whatever}, duration) and that's it, you might not want the timeout id anyway
[20:51:53] *** Quits: reallymemorable (~reallymem@pool-108-46-75-178.nycmny.fios.verizon.net) (Remote host closed the connection)
[20:52:11] *** Joins: reallymemorable (~reallymem@pool-108-46-75-178.nycmny.fios.verizon.net)
[20:52:17] <silly> yes you do
[20:52:30] <systemfault> praet: Hmm, for some reason, I thought I was in the node channel... Sorry if you're doing browser stuff
[20:52:31] <silly> and you should return a function that clears the timeout
[20:53:10] <Rockwood>         const timeout  = setTimeout(() => {clearErrors()}, 1000); return () => timeout;
[20:53:12] <hassoon> what silly said in fact.., clearing when needed
[20:53:14] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:53:15] <Rockwood> is the correct?
[20:53:23] <hassoon> ya his statement is better
[20:53:32] <Rockwood> i wanna clear error after generate
[20:53:41] <silly> return a cleanup function from your useEffect callbac
[20:54:04] <hassoon> i don't understand what he is up to
[20:54:13] <silly> but i don't lol... ^
[20:54:24] <hassoon> :p
[20:54:41] *** Quits: shokohsc861 (~shokohsc@223.107.23.93.rev.sfr.net) (Ping timeout: 250 seconds)
[20:54:47] *** Joins: shokohsc861 (~shokohsc@223.107.23.93.rev.sfr.net)
[20:55:13] <silly> const timeout  = setTimeout(() => {clearErrors()}, 1000); return () => clearTimeout(timeout);
[20:55:36] <silly> i don't know what clearErrors is good for
[20:56:00] <hassoon> what about the return statement? was all of that written inside a function ?
[20:56:09] <hassoon> whose return is the one written here ?
[20:56:17] <silly> from me?
[20:56:26] <hassoon> meh from whatever
[20:56:27] <hassoon> ?
[20:56:29] <hassoon> ahah
[20:56:45] <silly> useEffect(() => {const timeout  = setTimeout(() => {clearErrors()}, 1000); return () => clearTimeout(timeout);}, []);
[20:56:54] <hassoon> Rockwood: you might want to paste a whole meaningful code snippet, instead of this
[20:57:09] <silly> https://gist.github.com/Cyberiaaxis/340dd5e1357427fd4be90d3d216bdf26
[20:57:14] <silly> there there
[20:57:29] <Rockwood> silly, hassoon actually clearErrors() is the function from react-hook-form
[20:57:32] <hassoon> jsx? ewww react
[20:57:37] <Rockwood> yes
[20:57:42] <silly> lol
[20:58:37] <hassoon> crap white web pages' light is getting increasingly annoying for my eyes lately
[20:59:09] <hassoon> that's better https://i.imgur.com/vkVS0ew.png
[20:59:12] <silly> have you started wearing glasses for small letters yet?
[20:59:42] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[20:59:51] <hassoon> silly: nah, i can see fine, just the light feels annoying on my eyes, i might have overused them the last few years
[21:00:22] *** Quits: n00b101 (uid448161@lymington.irccloud.com) (Quit: Connection closed for inactivity)
[21:00:29] <silly> what drove you away from dark reader?
[21:01:30] <hassoon> it was disabled since it was daytime earlier, night time just came in
[21:01:48] <hassoon> and i often use the laptop outdoors
[21:03:54] <hassoon> silly: typical outdoor usage https://imgur.com/gallery/ZTdhose
[21:03:55] *** Quits: D4mned (~Dmnd@212.101.253.85) (Read error: Connection reset by peer)
[21:04:20] <hassoon> silly: this too :p https://imgur.com/gallery/gjR2eOQ
[21:04:27] <silly> https://codesandbox.io/s/react-hook-form-v7-clearerrors-w5tl6
[21:04:32] <silly> so, there's that
[21:05:00] <silly> Rockwood, doesn't it delete all errors after 2 seconds?
[21:05:09] <daoudr> ```Factory Pattern``` Use a function to create the object. Mainly used for `DRY` purposes. Like the constructor pattern but without inheritance. Methods are copied to all ‘instances’, therefore it is not memory efficient.
[21:05:10] <daoudr> `what DRY means?`
[21:05:16] <Rockwood> not deleting
[21:05:30] <praet> systemfault: ya its browser stuff :(
[21:06:31] <ash_worksi> where does "I'm a ..." come from in this? https://webcomponents.dev/edit/collection/d5hmXU6Oq1awvGniAMlo/D0lic4qM2r0x0vf9XmeM/src/index.js?branch=master
[21:06:45] <Rockwood> silly, yes setTimeout not works for me
[21:06:57] *** Joins: ckdCreations (~ckdCreati@147.55.133.136)
[21:07:30] <silly> hassoon, #css
[21:07:55] <hassoon> silly: what about #css
[21:08:14] <silly> on the 2nd picture
[21:08:22] <silly> on your notebook
[21:08:29] <silly> 'seen it
[21:08:47] <silly> Rockwood, it should
[21:09:03] <hassoon> silly: ah right, re-hi then
[21:09:13] <silly> put a console.log alongside it
[21:09:52] <silly> i'd love to go outside like you
[21:10:04] <Rockwood> oops
[21:10:13] *** ruel is now known as lvlinux
[21:10:41] <silly> but a) displays are unreadable b) displays are too small c) outside is covid
[21:11:34] <hassoon> silly: ah come one, a 14' anti glare screen laptop is pretty serviceable
[21:11:42] <hassoon> let alone a 15' one
[21:12:04] <hassoon> 14' are more portable, that's why i prefer them and own a 14' one too
[21:12:18] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 265 seconds)
[21:12:25] <Rockwood> silly, problem is some where
[21:12:43] <silly> uh... there's tons of bigger displays on my desk
[21:13:16] <hassoon> silly: concerning covid it's alright, you can just sit in an outdoor space of a coffeshop away from groups of otehr people, preferably a coffeeshop in a semi-rural less-populated area
[21:13:17] <Rockwood> i think its calculating time from some where else
[21:13:43] <hassoon> or just sit somewhere alone in the nature
[21:14:33] *** Joins: earendel (uid498179@user/earendel)
[21:15:05] *** Joins: sebastorama (~sebastora@2804:d59:5cbc:4700:1089:6c44:4276:5411)
[21:17:08] *** Quits: amcsi (~amcsi@1F2E381A.catv.pool.telekom.hu) (Ping timeout: 265 seconds)
[21:17:25] <silly> also this https://youtu.be/8SbUC-UaAxE
[21:17:25] <skillbot> YouTube Title: Guns N' Roses - November Rain
[21:17:58] <silly> are you somewhere on the southern hemisphere?
[21:18:23] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:18:37] <hassoon> silly: northern
[21:19:44] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:19:55] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[21:21:18] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:21:24] <silly> https://codesandbox.io/s/react-hook-form-v7-clearerrors-w5tl6
[21:21:46] <silly> woof... Something went wrongRequest failed with status code 404
[21:22:20] <silly> Rockwood, i guess you'll have to create your own sandbox ¯\_(ツ)_/¯
[21:22:37] <Rockwood> silly, works now
[21:22:46] <Rockwood> i missed there only focus
[21:22:59] <silly> oic
[21:23:40] <Rockwood> i have to clear after generating instead of onload
[21:23:57] *** Joins: silverdust (~silverdus@user/silverdust)
[21:25:01] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 250 seconds)
[21:27:06] *** Joins: zzz (~z@user/zero)
[21:28:15] *** Quits: sebastorama (~sebastora@2804:d59:5cbc:4700:1089:6c44:4276:5411) (Ping timeout: 265 seconds)
[21:28:15] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-567343-143.dhcp.inet.fi) (Read error: Connection reset by peer)
[21:31:26] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[21:31:58] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[21:34:15] *** Joins: epolanski (uid312403@helmsley.irccloud.com)
[21:35:58] *** Quits: reallymemorable (~reallymem@pool-108-46-75-178.nycmny.fios.verizon.net) (Remote host closed the connection)
[21:36:16] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Read error: Connection reset by peer)
[21:36:18] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 256 seconds)
[21:36:33] *** Joins: reallymemorable (~reallymem@pool-108-46-75-178.nycmny.fios.verizon.net)
[21:36:57] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 265 seconds)
[21:37:29] *** Quits: ckdCreations (~ckdCreati@147.55.133.136) (Read error: Connection reset by peer)
[21:37:47] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[21:38:28] *** Joins: stenno (~stenno@user/stenno)
[21:40:38] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[21:41:10] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[21:41:18] *** Quits: reallymemorable (~reallymem@pool-108-46-75-178.nycmny.fios.verizon.net) (Ping timeout: 265 seconds)
[21:41:36] *** Joins: Axy (~Axy@user/axy)
[21:43:40] *** Joins: nomic (~nomic@185.192.69.224)
[21:44:12] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[21:44:52] *** Joins: kogepan (~kogepan@user/kogepan)
[21:45:16] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:c4db:fc61:f9b:e1d0)
[21:45:29] *** Quits: Guest45 (~Guest45@p200300c8cf21a300be9e8e319d0d5c8b.dip0.t-ipconnect.de) (Quit: Ping timeout (120 seconds))
[21:45:52] *** Joins: howdoi (uid224@lymington.irccloud.com)
[21:45:55] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[21:46:42] *** Joins: Guest45 (~Guest45@p200300c8cf21a300be9e8e319d0d5c8b.dip0.t-ipconnect.de)
[21:48:23] *** Quits: pinpil (~pinpil@p57a76ac2.dip0.t-ipconnect.de) (Quit: Client closed)
[21:48:51] *** Quits: daniel-k (~daniel-k@fsf/emeritus/daniel-k) (Quit: Ping timeout (120 seconds))
[21:49:06] *** Joins: daniel-k (~daniel-k@fsf/emeritus/daniel-k)
[21:49:32] *** Joins: feoh2 (~feoh@137.184.104.30)
[21:50:02] *** Quits: prime (~prime@user/prime) (Ping timeout: 260 seconds)
[21:50:56] *** Quits: eldritch (~eldritch@user/eldritch/x-9272577) (Ping timeout: 245 seconds)
[21:51:02] *** Quits: irrgit (~irrgit@192.241.175.183) (Ping timeout: 256 seconds)
[21:51:02] *** Quits: feoh (~feoh@137.184.104.30) (Ping timeout: 240 seconds)
[21:51:27] *** Quits: salad (~cucumber@82-77-99-119.cable-modem.hdsnet.hu) (Ping timeout: 250 seconds)
[21:52:00] *** Joins: prime (~prime@user/prime)
[21:52:09] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[21:52:29] *** Joins: irrgit (~irrgit@192.241.175.183)
[21:53:00] *** Joins: salad (~cucumber@82-77-99-119.cable-modem.hdsnet.hu)
[21:54:03] *** feoh2 is now known as feoh
[21:54:20] *** Joins: sebastorama (~sebastora@2804:d59:5cbc:4700:1089:6c44:4276:5411)
[21:54:54] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[21:55:11] *** Joins: eldritch_ (~eldritch@user/eldritch/x-9272577)
[21:57:05] *** Quits: mimmy (~mimmy@146.70.75.156) (Ping timeout: 250 seconds)
[22:00:53] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[22:01:25] *** Quits: Axy (~Axy@user/axy) (Ping timeout: 250 seconds)
[22:02:12] *** Joins: Axy (~Axy@user/axy)
[22:05:49] *** Joins: node1 (~node1@user/node1)
[22:07:24] *** Quits: sebastorama (~sebastora@2804:d59:5cbc:4700:1089:6c44:4276:5411) (Ping timeout: 265 seconds)
[22:07:42] *** Joins: inomoz (~inomoz@176.59.125.26)
[22:11:46] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: WeeChat 3.3)
[22:12:25] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[22:13:59] *** Joins: summersault (~summersau@179.221.251.16)
[22:16:41] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[22:17:01] *** Quits: tlf_other (~tlf@mobile-166-170-20-57.mycingular.net) (Ping timeout: 250 seconds)
[22:19:00] *** Quits: saltrocklamp[m] (~elementio@2001:470:69fc:105::5065) (Changing host)
[22:19:00] *** Joins: saltrocklamp[m] (~elementio@user/hexology)
[22:20:37] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[22:21:01] *** Quits: saltrocklamp[m] (~elementio@user/hexology) (Quit: Reconnecting)
[22:21:14] *** Joins: summersault (~summersau@179.221.251.16)
[22:21:17] *** Joins: saltrocklamp[m] (~hexology@user/hexology)
[22:21:22] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[22:23:12] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[22:24:16] *** Joins: mimmy (~mimmy@146.70.75.158)
[22:24:52] *** Joins: summersault (~summersau@179.221.251.16)
[22:26:54] *** Quits: salad (~cucumber@82-77-99-119.cable-modem.hdsnet.hu) (Quit: salad)
[22:28:38] *** Joins: Assault (~Assault@176-93-249-121.bb.dnainternet.fi)
[22:28:45] <austincheney> anybody have any idea why Firefox would send an empty payload on a websocket.send(myData) operation?
[22:29:00] *** Quits: mimmy (~mimmy@146.70.75.158) (Ping timeout: 256 seconds)
[22:29:10] <Decker> because myData is "" ?
[22:31:35] <ash_worksi> where does "I'm a ..." come from in this? https://webcomponents.dev/edit/collection/d5hmXU6Oq1awvGniAMlo/D0lic4qM2r0x0vf9XmeM/src/index.js?branch=master
[22:31:48] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[22:34:39] *** Quits: src (~src@user/src) (Quit: Leaving)
[22:35:10] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[22:35:25] *** Joins: summersault (~summersau@179.221.251.16)
[22:38:08] <Alexendoo> ash_worksi: index.html
[22:39:06] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[22:39:59] *** Joins: src (~src@user/src)
[22:40:20] *** Quits: arthurpbs (~arthurpbs@168.121.98.23) (Ping timeout: 256 seconds)
[22:43:34] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Remote host closed the connection)
[22:43:53] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 264 seconds)
[22:43:58] <ash_worksi> Alexendoo: oh geez, I guess that panel was closed when I was looking last time; thank you
[22:44:00] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[22:44:10] *** Joins: mimmy (~mimmy@146.70.75.158)
[22:44:46] *** Joins: shokohsc8615 (~shokohsc@161.251.23.93.rev.sfr.net)
[22:44:47] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[22:45:06] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[22:45:07] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[22:45:37] *** Quits: shokohsc861 (~shokohsc@223.107.23.93.rev.sfr.net) (Ping timeout: 250 seconds)
[22:45:37] *** shokohsc8615 is now known as shokohsc861
[22:47:40] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[22:48:23] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 264 seconds)
[22:48:57] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[22:49:54] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[22:51:19] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[22:52:48] <daoudr> ```// ! Caveat: Arrow function doesn't care about our rules, and it
[22:52:48] <daoudr> / ! takes the value of "this" from right before the function
[22:52:48] <daoudr> / ! was defined```
[22:52:48] <daoudr> ```can I have an example ?```
[22:53:36] *** Quits: kogepan (~kogepan@user/kogepan) (Remote host closed the connection)
[22:53:37] <ljharb> daoudr: please don't paste multiple lines. also i have no idea what you're asking
[22:53:43] <ljharb> daoudr: have you read eloquent?
[22:54:00] *** Joins: arthurpbs (~arthurpbs@168.121.98.197)
[22:54:22] <daoudr> yes
[22:55:05] *** Parts: ash_worksi (~ash_m@user/ash-m/x-3292451) ()
[22:55:24] <daoudr> this and arrow function got problems. maybe an example can help
[22:56:05] <daoudr> eloquent needs another eloquent for the unrealistic examples used in it..
[22:58:37] *** Quits: jim87 (~quassel@93.55.249.30) (Ping timeout: 250 seconds)
[23:00:29] <ljharb> it doesn't "got problems"
[23:00:33] <ljharb> !this @ daoudr
[23:00:34] <jellobot> daoudr, A function call of the form `a.b()` calls the function with `this` being the value of `a`; in a call of the form `f()`, `this` will be `undefined`, which is turned into the global object if the function wasn't defined in strict mode. Note that arrow functions and functions produced by `Function.prototype.bind` ignore the passed `this` value. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this
[23:01:42] *** Parts: Guest45 (~Guest45@p200300c8cf21a300be9e8e319d0d5c8b.dip0.t-ipconnect.de) ()
[23:03:07] <daoudr> so this in arrow function might refer to the window object?
[23:04:45] <ljharb> daoudr: sure, if it referred to the window object in the scope where the arrow function was defined
[23:04:56] *** Joins: defjam (~eb0t@90.209.246.132)
[23:05:20] *** Joins: velix (~velix@user/velix)
[23:05:35] <daoudr> ok thanks. I hope I got it correct. time will say
[23:05:35] <velix> silly: Do you've got an idea, why my fetch fails? https://bpa.st/RZMA
[23:06:18] <velix> silly: funny, NOW it works :D
[23:06:40] <velix> silly: now it doesn't again...
[23:07:11] <velix> My FormData {} is empty :(
[23:07:36] <silly> oh
[23:07:38] <velix> I hate fetch :( ... XML was so nice.
[23:07:42] <velix> XMR*
[23:07:47] <silly> does it navigate?
[23:08:04] <velix> navigate?
[23:08:07] *** Joins: shokohsc8618 (~shokohsc@63.16.23.93.rev.sfr.net)
[23:08:17] <velix> netscape navigator :D
[23:08:19] <silly> navigate away
[23:08:25] <silly> to a new page
[23:08:47] <velix> silly: No. it fails because formData is empty sometimes.
[23:08:50] <silly> does it add an '#' in your address bar
[23:09:01] *** Quits: shokohsc861 (~shokohsc@161.251.23.93.rev.sfr.net) (Ping timeout: 250 seconds)
[23:09:03] *** shokohsc8618 is now known as shokohsc861
[23:09:14] <velix> TypeError: Failed to fetch
[23:09:21] <silly> there's no evt.preventDefault()
[23:09:26] <silly> i'm not sure if you need it
[23:10:16] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[23:10:23] <velix> silly: but why? there's no "submit".
[23:10:29] *** Joins: mickey8 (~user@user/mickey)
[23:10:47] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[23:11:40] <austincheney> firefox in my VM is sending malformed web socket frames and I am not sure why?  The websocket frame indicates a text payload (its actually a JSON string) and indicates the payload size is 1455 bytes, but the total frame data is only 8 bytes which is just large enough for the header: 2 bytes for control, 2 bytes for extended length, and 4 bytes for mask key
[23:11:49] <silly> buttons inside <form> are default submitters
[23:11:54] <silly> and yes... seems so
[23:11:59] <velix> Hereis a live version: https://jsfiddle.net/vfac7nyb/
[23:11:59] <austincheney> I am running the same scenario from chrome on the same VM without this problem
[23:12:06] <velix> silly: Oh, didn't know that.
[23:12:12] <silly> try adding
[23:12:16] <silly> https://jsfiddle.net/hLnaje85/ :P
[23:12:38] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[23:12:44] <austincheney> list
[23:13:11] *** Joins: Melodi_bug (~Melodi_bu@49.2.97.144)
[23:13:24] <velix> silly: what did you change?
[23:13:40] <silly> nothing so far
[23:13:57] <silly> damn, evt.preventDefault()  doesn't worx wtf
[23:14:29] <silly> ah, you need one more eventListener
[23:15:36] <silly> https://jsfiddle.net/m62wxgLa/
[23:16:11] <silly> the thing in line 8, try adding that to your thing
[23:17:18] *** Joins: kogepan (~kogepan@user/kogepan)
[23:18:04] <velix> silly: thanks!
[23:18:28] <velix> Does it make sense to put it in a "form" tag at all?
[23:18:33] <velix> sematics, yeah...
[23:18:41] <velix> but it doesn't have anything to do with HTML1.0 form
[23:18:54] <silly> yo...
[23:18:59] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 250 seconds)
[23:19:15] <velix> y
[23:20:55] *** Joins: reallymemorable (~reallymem@pool-108-46-75-178.nycmny.fios.verizon.net)
[23:22:53] *** Quits: Melodi_bug (~Melodi_bu@49.2.97.144) (Ping timeout: 250 seconds)
[23:22:53] *** Quits: shokohsc861 (~shokohsc@63.16.23.93.rev.sfr.net) (Read error: Connection reset by peer)
[23:22:55] *** Joins: montybanksnyc (~montybank@pool-108-5-238-57.nwrknj.fios.verizon.net)
[23:25:22] *** Quits: cebor (~cebor@user/cebor) (Quit: bye!)
[23:25:42] *** Joins: cebor (~cebor@user/cebor)
[23:25:56] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:25:58] *** Joins: shokohsc861 (~shokohsc@63.16.23.93.rev.sfr.net)
[23:29:55] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[23:30:12] *** Quits: mat001_ (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[23:34:19] *** Joins: ziddey (ziddey@coffeelake.home.ijib.com)
[23:35:02] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[23:35:04] *** Joins: ttys000 (~ttys000@user/ttys000)
[23:37:24] *** Joins: pinpil (~pinpil@p57a76ac2.dip0.t-ipconnect.de)
[23:39:48] *** Quits: Akimb (~Akimb@86.100.13.100) (Read error: Connection reset by peer)
[23:42:09] *** Joins: comatory (~ondrejsyn@8.152.broadband3.iol.cz)
[23:42:22] *** Joins: sebastorama (~sebastora@2804:d59:5cbc:4700:1089:6c44:4276:5411)
[23:42:23] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 264 seconds)
[23:44:22] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 256 seconds)
[23:48:10] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[23:48:45] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[23:48:46] *** Quits: eXistenZ (~biskit@2001:4df4:20b3:400:d1bc:52d2:15c8:768e) (Quit: Leaving)
[23:48:49] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[23:48:58] *** Joins: mickey8 (~user@user/mickey)
[23:50:36] *** Joins: kill (~killown@user/killown)
[23:52:17] *** Quits: mimmy (~mimmy@146.70.75.158) (Ping timeout: 265 seconds)
[23:54:07] *** Quits: reallymemorable (~reallymem@pool-108-46-75-178.nycmny.fios.verizon.net) (Remote host closed the connection)
[23:54:38] *** Joins: jim87 (~quassel@93.55.249.30)
[23:54:46] *** Joins: reallymemorable (~reallymem@pool-108-46-75-178.nycmny.fios.verizon.net)
[23:55:21] *** Quits: reallymemorable (~reallymem@pool-108-46-75-178.nycmny.fios.verizon.net) (Read error: Connection reset by peer)
[23:55:56] *** Joins: reallymemorable (~reallymem@pool-108-46-75-178.nycmny.fios.verizon.net)
[23:56:00] *** Quits: sebastorama (~sebastora@2804:d59:5cbc:4700:1089:6c44:4276:5411) (Ping timeout: 268 seconds)
[23:56:15] *** Quits: Assault (~Assault@176-93-249-121.bb.dnainternet.fi) (Ping timeout: 250 seconds)
[23:57:15] *** Quits: reallymemorable (~reallymem@pool-108-46-75-178.nycmny.fios.verizon.net) (Remote host closed the connection)
[23:57:30] *** Joins: reallymemorable (~reallymem@pool-108-46-75-178.nycmny.fios.verizon.net)
[23:58:30] *** Joins: pavonia (~user@user/siracusa)
