[00:00:01] <Svitkona> essentially
[00:00:04] <jokoon> ok
[00:00:17] <Svitkona> (async-await makes it a bit cleaner, but it's just syntactic sugar for a Promise chain)
[00:00:22] <systemfault> jokoon: Pretty much... but Promises can make things nicer... and when you have promises, you can use async/await
[00:01:08] *** Quits: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br) (Remote host closed the connection)
[00:01:21] *** Joins: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br)
[00:01:42] <systemfault> Everything works with callbacks in JS.... DOM event handlers, timers, http requests... etc
[00:02:15] <jokoon> some call (haha) this the callback hell
[00:02:44] *** Joins: jamea97 (~jamea77@189.237.100.235)
[00:03:17] <systemfault> That term was mostly for "old-style" callbacks... not promise chains or async/await
[00:03:35] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[00:03:50] <robertmaxrees> ^ and for cases where you use a bunch of anonymous functions for those callbacks.
[00:05:06] <jokoon> Such fine engineering, milord
[00:05:56] <jokoon> We shall embark and construct very well proper organized software application data routing sorters with this fine stuff, mmmmh yes
[00:06:30] *** Quits: jamea (~jamea77@200.68.140.25) (Ping timeout: 272 seconds)
[00:06:46] <jokoon> I can't wait to reprogram entire satellite link, space shuttles, android microcontrollers and other robots AI with this javascript thing
[00:06:52] <jokoon> Let's begin, sir!
[00:07:18] <systemfault> A few years back... I would have read that and just laughed...
[00:07:32] <systemfault> Now... I believe that to be true...
[00:09:02] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 272 seconds)
[00:10:24] *** Quits: onosendi (~onosendi@user/onosendi) (Ping timeout: 252 seconds)
[00:11:45] <ELFrederich> damn, I accidently put an alert(); call in my draw() function of my p5js editor.  Now Chrome is essentially frozen.  Every time I dismiss the alert a new one comes up.  Anyway to kill this from the console?
[00:12:07] <earendel> jokoon: XMLHttpRequest provides events you can subscribe to. i bet u found out, im backlogging
[00:13:27] *** Quits: Heraes (~Heraes@user/romarain) (Quit: Leaving)
[00:18:30] <systemfault> ELFrederich: If you can still use the console..... maybe window.alert = function() {} ?
[00:23:44] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[00:25:42] *** Joins: summersault (~summersau@179.221.251.16)
[00:27:18] *** Quits: Akimb (~Akimb@86.100.13.100) (Ping timeout: 258 seconds)
[00:28:09] *** Joins: onosendi1 (~onosendi@user/onosendi)
[00:30:27] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 265 seconds)
[00:32:31] *** Joins: deviantfero (~deviantfe@190.150.27.58)
[00:32:48] *** Quits: onosendi1 (~onosendi@user/onosendi) (Ping timeout: 268 seconds)
[00:40:18] *** Quits: fedorafan (~fedorafan@user/fedorafan) (Remote host closed the connection)
[00:42:59] *** Joins: summersault (~summersau@179.221.251.16)
[00:43:09] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[00:45:30] *** Joins: velix (~velix@user/velix)
[00:45:34] *** Joins: fedorafan (~fedorafan@user/fedorafan)
[00:45:37] <velix> silyslux: are you here?
[00:45:40] <velix> deadbeat: okay, sorry :(
[00:47:00] <velix> LoL - is HTML table back in design space?? https://imgur.com/a/kx3zNDC :-)
[00:47:07] <velix> Seems like svelte is using it
[00:47:15] <velix> Yipee. HTML tables are back :-)
[00:48:02] *** Joins: silly (~silly@user/silly)
[00:51:28] *** Quits: ELFrederich (~ELFrederi@siemens-industry-software-inc-216-196-155-202.static.fuse.net) (Quit: Leaving)
[01:00:15] <OhTheCode> i want to make a masthead that is 100% the height of the screen even if the screen size changes, i've done some simple code but I don't know if its production ready - https://pastiebin.com/60de2597e71ae
[01:02:07] *** Quits: Booster2ooo (~Booster2o@host-213-189-163-54.dynamic.voo.be) (Read error: Connection reset by peer)
[01:04:16] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 256 seconds)
[01:06:26] <diophantoz> we want tables
[01:10:17] *** Joins: jamea (~jamea77@200.68.140.25)
[01:10:38] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[01:11:47] <banana_> imo unless you have to display tabular data don't use tables
[01:12:10] <banana_> think of the blind people with screen readers
[01:12:58] *** Joins: jazzy (~jaziz@2600:380:4542:186:f862:a412:d266:3c8e)
[01:13:19] *** Quits: jamea97 (~jamea77@189.237.100.235) (Ping timeout: 256 seconds)
[01:23:35] *** Joins: Akimb (~Akimb@86.100.13.100)
[01:24:07] *** Quits: Akimb (~Akimb@86.100.13.100) (Read error: Connection reset by peer)
[01:26:13] *** Quits: optimist (~optimist@110.227.116.207) (Remote host closed the connection)
[01:29:04] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[01:33:01] <entuland> nowadays you can not only have grid layout (which is way more flexible than tables), you can also make non-table elements behave for all practical purposes as tables (CSS display property)
[01:34:54] *** Joins: summersault (~summersau@179.221.251.16)
[01:35:14] *** Quits: Cyp (~cyp@213.237.83.38) (Excess Flood)
[01:35:39] *** Joins: Cyp (~cyp@213.237.83.38)
[01:39:06] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 240 seconds)
[01:43:24] *** Quits: YaknotiS (~YaknotiS@user/yaknotis) (Ping timeout: 272 seconds)
[01:45:39] <GreenJello> entuland, I recently used table markup and tbody, thead, tr { display: contents; } and then used css grid for the actual layout
[01:45:43] <banana_> yeah but idk i think for tabular data you benefit from using a table for screenreader reasons
[01:46:29] <entuland> indeed, tables are still the elements to be used if you have tabular data
[01:46:53] <entuland> that's still what they're are for, that is what they always have been for
[01:47:07] *** Joins: Celeo (~Celeo@user/celeo)
[01:47:48] <entuland> GreenJello, nice, sounds good
[01:49:01] <velix> is there also BlueJello?
[01:49:39] <entuland> there definitely is a YellowJello :P
[01:51:02] *** Quits: Jigsy (~Jigsy@user/jigsy) (Read error: Connection reset by peer)
[01:51:26] *** Joins: summersault (~summersau@179.221.251.16)
[01:51:28] *** Quits: acid (~acid@user/acid) (Read error: Connection reset by peer)
[01:51:36] *** Joins: acid (~acid@user/acid)
[01:52:42] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 240 seconds)
[01:52:46] *** Joins: Jigsy (~Jigsy@user/jigsy)
[01:52:59] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:2425:8f63:f53:2bd) (Ping timeout: 256 seconds)
[01:55:50] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[01:55:53] *** Quits: jokoon (~eio@2a01:e0a:542:e160:6dad:fc1f:a95a:61b0) (Quit: Leaving)
[01:56:15] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[01:56:52] *** Quits: skillbot (~skillbot@user/skillbot) (Remote host closed the connection)
[01:57:09] *** Joins: skillbot (~skillbot@user/skillbot)
[01:57:09] *** ChanServ sets mode: +v skillbot
[02:00:07] *** Joins: optimist (~optimist@110.227.116.207)
[02:01:31] *** Quits: muley (~muley@76-245-68-99.lightspeed.iplsin.sbcglobal.net) (Remote host closed the connection)
[02:02:31] *** Joins: muley (~muley@76-245-68-99.lightspeed.iplsin.sbcglobal.net)
[02:03:07] *** Quits: optimist (~optimist@110.227.116.207) (Client Quit)
[02:10:23] *** Joins: l__q (~modinfo@user/modinfo)
[02:13:29] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 258 seconds)
[02:25:02] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:4d8e:9dc8:8270:3ec1) (Quit: WeeChat 3.2)
[02:25:45] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 258 seconds)
[02:30:02] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:28] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:31:04] *** Quits: Intelo (~Intelo@88.246.73.216) (Ping timeout: 246 seconds)
[02:32:03] *** Quits: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br) (Quit: Leaving)
[02:35:15] *** Quits: earendel (uid498179@user/earendel) (Quit: Connection closed for inactivity)
[02:36:48] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:2425:8f63:f53:2bd)
[02:44:08] <banana_> yo
[02:44:24] <banana_> do you guys ever put "Arr" as a suffix in your variable name
[02:45:28] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[02:45:49] <GreenJello> I'd recommend making the name plural instead
[02:45:55] *** Joins: matsaman_ (~matsaman@user/matsaman)
[02:45:58] <banana_> Thanks dad
[02:46:12] <banana_> yeah that's the thing sometimes I dont have a good name for it
[02:46:21] <banana_> the only noun I can think of is "data"
[02:46:28] <banana_> but data is plural/singular obscure
[02:47:32] *** Quits: matsaman (~matsaman@user/matsaman) (Killed (NickServ (GHOST command used by matsaman_)))
[02:47:36] *** matsaman_ is now known as matsaman
[02:47:53] <banana_> GreenJello: do you ever put a suffix "Arr"
[02:48:04] <banana_> like linkDataArr or something like that
[02:49:43] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[02:49:47] <banana_> also related to Array.prototype.map, do you create a variable its the callback or a variable with a function expression that takes in an extire array and that function expression calls .map(...)
[02:50:06] <GreenJello> I don't think I use that naming convention, no
[02:50:29] <OhTheCode> i use Hungarian notation sometimes - for strings i use eg strName, array arrNumbers
[02:50:33] <GreenJello> as far as I can tell, that should be called 'links'
[02:50:40] <OhTheCode> it's handy for untyped languages
[02:51:25] <matsaman> so verbose :/
[02:52:11] <matsaman> and doesn't actually ensure strName is a string, no?
[02:52:17] <banana_> the other question was this
[02:52:42] <OhTheCode> no, its for me to help read the code
[02:53:14] <GreenJello> banana_, with the map thing, if you need to do those for code reuse or because it makes some other code easier to follow, then that sounds fine
[02:53:20] <OhTheCode> since it's untyped , 6 months later its just a little easier to read
[02:53:24] <GreenJello> there's nothing inherently wrong with moving the logic elsewhere
[02:53:53] <banana_> const persons = [{ name: 'Paddy', height: 5 }, { name: 'John', height: 99 }]; mapFuncLikeThis(persons) ... persons.map(orLikeThis) ... ?
[02:54:18] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 252 seconds)
[02:55:38] <matsaman> all the biggest companies in the world sell tape
[02:55:39] <banana_> I like using functions more than methods for some reason
[02:56:03] <banana_> matsaman: was that a witty joke?
[02:56:09] *** Joins: summersault (~summersau@179.221.251.16)
[02:56:45] <matsaman> no, wrong channel
[02:56:56] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[02:58:18] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:2425:8f63:f53:2bd) (Ping timeout: 240 seconds)
[02:58:18] *** Quits: dan01 (~dan01@2a02:2f0f:3017:4e00:2455:d44b:61b4:2a0e) (Ping timeout: 240 seconds)
[03:00:59] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 256 seconds)
[03:01:00] *** Quits: diverdude (~undodre@176-21-102-230-cable.dk.customer.tdc.net) (Read error: Connection reset by peer)
[03:01:56] *** Joins: ferdna (~ferdna@user/ferdna)
[03:04:34] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 252 seconds)
[03:06:41] *** Joins: rifl (~user@user/rifl)
[03:06:50] <banana_> GreenJello: what's your naming convention for factory functions
[03:06:57] <banana_> i.e. a function that returns a function.
[03:07:29] <matsaman> function steve() { }
[03:09:06] <GreenJello> banana_, I'm not sure I have a convention for that
[03:10:16] <matsaman> funcReturn_funcSomethin
[03:10:19] <matsaman> but please no
[03:10:49] <banana_> damn
[03:10:52] <rifl> Record havent been like that just Record
[03:11:08] <banana_> what you gonna say next you never make functions that return functions
[03:11:31] <GreenJello> I do, but that's rarely the most interesting thing about them
[03:11:32] <banana_> lol jk GreenJello it's all good
[03:11:33] <matsaman> just please don't name things like that =P
[03:12:21] <banana_> isn't that like the best thing about js though for all you js masters
[03:12:43] <GreenJello> sometimes I'll name them something like fooToPredicate
[03:12:52] <banana_> that you can pass around functions so kinda funny factory functions dont have a convention.
[03:12:55] <GreenJello> if it's a function like (value) => boolean
[03:13:06] <banana_> ah ok. wait dumb question is "foo" a name of a type?
[03:13:14] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[03:13:14] <banana_> i'm not that good so had to ask.
[03:14:37] <matsaman> foo is the most famous placeholder name/string/etc.
[03:15:01] <matsaman> https://en.wikipedia.org/wiki/Foobar
[03:15:08] <matsaman> so yeah, if he's doing hungarian
[03:15:49] <banana_> yeah I'll have to look that up
[03:15:52] <banana_> hungarian ayy
[03:21:48] *** Quits: trevors_ (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Ping timeout: 252 seconds)
[03:27:54] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 272 seconds)
[03:30:36] *** Joins: summersault (~summersau@179.221.251.16)
[03:32:58] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[03:35:30] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 272 seconds)
[03:36:11] *** Joins: Crassus (~Crassus@user/crassus)
[03:46:30] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:3143:bedd:63c4:72b6) (Quit: Leaving)
[03:46:47] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:3143:bedd:63c4:72b6)
[03:47:07] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[03:47:39] *** Joins: summersault (~summersau@179.221.251.16)
[03:47:50] <simon816> I discovered today that "rest parameters" seem to cause strict mode to get enabled. couldn't find a reference to this in documentation on a brief look
[03:50:31] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[03:53:49] <GreenJello> simon816, what tools are you using?
[03:53:52] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[03:54:28] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[03:55:40] <simon816> this was just in the browser console. (function() { arguments.callee })() works, (function(...args) { arguments.callee })() doesn't
[03:55:46] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 272 seconds)
[03:55:57] *** Quits: mud (~mud@user/kadoban) (Ping timeout: 256 seconds)
[04:01:23] *** Joins: pulse (~pulse@user/pulse)
[04:01:45] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[04:10:15] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[04:10:27] *** Joins: summersault (~summersau@179.221.251.16)
[04:11:19] <entuland> what is that code supposed to do? per se it doesn't produce any output
[04:11:41] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[04:12:00] <entuland> or was it just to check whether it would trigger strict mode?
[04:13:57] <simon816> first one does nothing, the other throws an error
[04:14:08] <entuland> yes, I've seen that
[04:14:18] <simon816> yeah just to show that strict mode is enabled
[04:14:22] <entuland> ok
[04:17:35] *** Joins: drew (~drew@user/drew)
[04:19:13] <simon816> hmm I guess it's something special with arguments.callee (which is how I spotted this), rather than strict mode
[04:19:28] <simon816> (function(...args){a = 1})() seems to work, but wouldn't under strict mode
[04:20:01] <entuland> the error may be misleading and kinda be a "catch all" for a class of errors
[04:20:26] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[04:20:46] <entuland> there _is_ something special with functions having rest parameters (such as, you can't put a "use strict" inside of such a function)
[04:25:54] *** Quits: dandaman (~Adium@c-76-120-70-146.hsd1.co.comcast.net) (Quit: Leaving.)
[04:29:32] *** Joins: onosendi1 (~onosendi@user/onosendi)
[04:30:36] *** Quits: drew (~drew@user/drew) (Ping timeout: 272 seconds)
[04:31:54] *** Joins: bambanxx (~bambanx@181-163-32-112.baf.movistar.cl)
[04:32:04] *** Joins: mud (~mud@user/kadoban)
[04:32:16] *** Joins: ktwo_ (~ktwo@200116b826ce85007711e6fd53b10207.dip.versatel-1u1.de)
[04:33:55] *** Quits: onosendi1 (~onosendi@user/onosendi) (Ping timeout: 256 seconds)
[04:35:03] *** Quits: ktwo__ (~ktwo@200116b8266bab0072a4586271c99e97.dip.versatel-1u1.de) (Ping timeout: 256 seconds)
[04:37:00] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 268 seconds)
[04:37:33] *** Joins: summersault (~summersau@179.221.251.16)
[04:38:28] *** Quits: mexen (uid495612@user/mexen) ()
[04:38:36] <bambanxx> i hear some guys say , let for primitives and const for objects, what do you think of that?
[04:39:47] *** Joins: silly_ (~silly@user/silly)
[04:41:19] *** Quits: jamea (~jamea77@200.68.140.25) (Ping timeout: 268 seconds)
[04:42:16] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 265 seconds)
[04:42:24] <systemfault> Sounds arbitrary
[04:42:46] <systemfault> Why not use var for variables starting with the letter z?
[04:42:52] *** Quits: iffraff (~quassel@136.49.178.170) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[04:43:33] *** Quits: silly (~silly@user/silly) (Ping timeout: 256 seconds)
[04:45:37] <tcsc> so, the unthinkable has happened and i once again find myself needing to publish a JS package. It's small — trivial even. the last time I did this was probably about 5 years ago, and I have hardly touched js in that time period.
[04:45:59] <tcsc> i'd like to have it usable from typescript and js, but am unsure the best way to do this
[04:46:25] <tcsc> should i just publish two versions? or should i publish a .d.ts file with it?
[04:46:32] <falafel> tcsc, anything that's usable in JS is usable in TS
[04:46:37] <tcsc> yeah but type defs
[04:46:45] <tcsc> i mean, i'd like it to be nice to use from typescript as well
[04:46:49] <tcsc> not full of anys
[04:46:52] <falafel> publish the types along with your package yes
[04:47:09] <tcsc> so i'd have an `index.js` and `index.d.ts`?
[04:47:25] <falafel> https://www.typescriptlang.org/docs/handbook/declaration-files/publishing.html
[04:47:33] <tcsc> ah thank you
[04:47:39] <systemfault> Yes... but usually, the index.d.ts is generated from the index.ts file...
[04:48:03] <systemfault> You only need to generate the .d.ts file yourself if you're "wrapping" a JS lib (writing a type definition file)
[04:49:09] <falafel> yeah, I don't usually complicate it, create index.ts, `tsc --init` the project and gitignore js files
[04:49:25] <tcsc> right, so i wrote this first in JS, and then converted it to TS for a friend. i wasn't sure if i should somehow publish both — i suspected this was dumb, so i'm here
[04:50:02] <systemfault> If you have the TS version, you just generate the JS version and the .d.ts files from them
[04:50:03] <tcsc> again this is like 3 functions, getting them correct is fairly subtle (involves color math), but the signatures are essentially trivial
[04:50:06] <falafel> tcsc, it's a fine question. I would publish the JS compiled from the TS along with the declaration files as they reommend in the documentation
[04:50:07] <tcsc> okay
[04:50:10] *** Joins: drew (~drew@user/drew)
[04:51:18] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[04:55:38] <theskillwithin> tcsc do you mean on npm?  be careful, I think after like 24 hours or something like that you cannot delete it
[04:55:50] <theskillwithin> but u can of course push a new version
[04:55:51] <tcsc> i do mean to npm
[04:55:57] <tcsc> why would i want to delete it?
[04:56:11] <tcsc> i'm being sarcastic by saying the unthinkable has happened
[04:56:16] <theskillwithin> lol
[04:56:17] <theskillwithin> oh
[04:56:25] *** Joins: onosendi1 (~onosendi@user/onosendi)
[04:56:34] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 272 seconds)
[04:56:46] *** onosendi1 is now known as onosendi
[04:57:36] *** Joins: mexen (uid495612@user/mexen)
[04:57:42] <tcsc> most of the code i write is rust which doesn't let you delete stuff from the package repo (crates.io) at all so it's not a big deal. this code has been up in a gist for a while anyway
[05:01:42] *** Quits: leptonix_ (~leptonix@a83-163-17-196.adsl.xs4all.nl) (Ping timeout: 268 seconds)
[05:01:46] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 258 seconds)
[05:06:17] *** Quits: drew (~drew@user/drew) (Read error: Connection reset by peer)
[05:07:27] *** Joins: drew (~drew@user/drew)
[05:11:00] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:3143:bedd:63c4:72b6) (Quit: Leaving)
[05:11:18] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:3143:bedd:63c4:72b6)
[05:11:58] *** Joins: summersault (~summersau@179.221.251.16)
[05:13:23] *** Joins: leptonix (~leptonix@a83-163-17-196.adsl.xs4all.nl)
[05:16:20] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 258 seconds)
[05:19:08] *** Joins: dandaman (~Adium@c-76-120-70-146.hsd1.co.comcast.net)
[05:21:30] *** Quits: drew (~drew@user/drew) (Ping timeout: 240 seconds)
[05:23:30] *** Quits: dandaman (~Adium@c-76-120-70-146.hsd1.co.comcast.net) (Ping timeout: 240 seconds)
[05:26:42] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 240 seconds)
[05:30:46] *** Joins: ktwo__ (~ktwo@200116b826dd010034293495701d790c.dip.versatel-1u1.de)
[05:31:29] *** Joins: irthewinner (~null@bzq-79-180-153-70.red.bezeqint.net)
[05:33:06] *** Quits: ktwo_ (~ktwo@200116b826ce85007711e6fd53b10207.dip.versatel-1u1.de) (Ping timeout: 240 seconds)
[05:34:25] *** Joins: matsaman (~matsaman@user/matsaman)
[05:36:58] *** Joins: jamea (~jamea77@177.239.87.231)
[05:40:24] *** Quits: l__q (~modinfo@user/modinfo) (Quit: interet cut off, write me memo! it will be send to my mail!)
[05:40:30] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[05:45:08] *** Joins: summersault (~summersau@179.221.251.16)
[05:46:08] *** Quits: PenguinMan98 (~Guest73@65.153.38.250) (Quit: Client closed)
[05:48:58] *** Quits: pulse (~pulse@user/pulse) (Read error: Connection reset by peer)
[05:52:07] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[05:53:15] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[05:57:10] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 268 seconds)
[06:01:18] <theskillwithin> https://i.redd.it/c2ak6kwe9o871.jpg
[06:02:12] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:02:46] *** Quits: bambanxx (~bambanx@181-163-32-112.baf.movistar.cl) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[06:02:57] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Remote host closed the connection)
[06:03:16] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[06:06:24] *** Joins: Rockwood (~Rocky@user/rocky)
[06:06:52] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 272 seconds)
[06:08:21] *** Joins: xse (~xse@user/xse)
[06:11:32] *** Quits: rawgreaze (~rawgreaze@user/rawgreaze) (Quit: ZNC 1.8.2 - https://znc.in)
[06:14:20] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[06:14:28] *** Quits: peteyboy1 (~peteyboy1@95.169.229.12) (Ping timeout: 272 seconds)
[06:18:45] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 256 seconds)
[06:20:48] *** Joins: summersault (~summersau@179.221.251.16)
[06:21:22] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[06:22:33] <onosendi> theskillwithin: lol, I connected well with that one.
[06:25:17] *** Joins: gggp (~textual@36.112.128.143)
[06:25:34] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 256 seconds)
[06:27:04] *** Quits: tnsi (~tnsi@024-247-183-183.res.spectrum.com) (Quit: ZNC - https://znc.in)
[06:27:29] *** Quits: Deide (~Deide@user/deide) (Quit: Seeee yaaaa)
[06:27:49] *** Joins: tnsi (~tnsi@024-247-183-183.res.spectrum.com)
[06:28:18] *** Quits: debsan_ (~debsan@2800:810:471:2ee::1000) (Ping timeout: 240 seconds)
[06:28:19] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.1)
[06:28:39] *** Joins: dandaman (~Adium@c-76-120-70-146.hsd1.co.comcast.net)
[06:29:00] *** Quits: gggp (~textual@36.112.128.143) (Client Quit)
[06:29:03] <wroathe> I wrote my own regex implementation a while back: https://github.com/JustinChristensen/parser_gen/tree/master/libs/regex
[06:29:37] <wroathe> (no, it doesn't handle unicode)
[06:31:46] *** Joins: summersault (~summersau@179.221.251.16)
[06:33:12] *** Quits: dandaman (~Adium@c-76-120-70-146.hsd1.co.comcast.net) (Ping timeout: 252 seconds)
[06:34:58] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[06:35:17] *** Joins: debsan_ (~debsan@2800:810:471:2ee::1000)
[06:46:15] *** Quits: Crassus (~Crassus@user/crassus) (Quit: Textual IRC Client: www.textualapp.com)
[06:47:55] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:f527:554d:5c5e:c4de)
[06:49:59] *** Joins: Turn_Left (~Matthew@31.124.100.228)
[06:52:16] *** Quits: Left_Turn (~Matthew@31.124.100.228) (Ping timeout: 252 seconds)
[06:53:13] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[06:57:46] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 252 seconds)
[06:59:25] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[07:06:00] <Maxdamantus> Looks like it should handle UTF-8. It's just that `.` means "any byte" rather than "any code point" or "any grapheme cluster" or something else.
[07:06:14] <Maxdamantus> but imo `.` for byte is fine.
[07:06:21] <Maxdamantus> That's how it works in JS.
[07:06:30] <theskillwithin> 😮
[07:06:42] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[07:06:58] <Maxdamantus> n> /^..$/.test("💩");
[07:06:59] <jellobot> (okay) true
[07:07:19] <theskillwithin> 🎆
[07:07:36] <Maxdamantus> (in JS, strings are made of 16-bit units rather than 8-bit units)
[07:10:32] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[07:12:18] *** Joins: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com)
[07:13:27] *** Joins: bambanxx (~bambanx@181-163-32-112.baf.movistar.cl)
[07:13:51] *** Joins: summersault (~summersau@179.221.251.16)
[07:14:32] *** Joins: matsaman (~matsaman@user/matsaman)
[07:14:54] *** Joins: onosendi (~onosendi@user/onosendi)
[07:15:12] *** paule32_ is now known as paule32
[07:19:49] *** Quits: bambanxx (~bambanx@181-163-32-112.baf.movistar.cl) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[07:20:09] *** Quits: deviantfero (~deviantfe@190.150.27.58) (Quit: WeeChat 3.2)
[07:22:42] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 240 seconds)
[07:24:03] <onosendi> Say you have an invoice, and it's able to be saved as a draft (where data is null). When you view the draft and everything is null, it looks blah without data. There's data headings without content, etc. Would it be weird to `faker` data in there, and lower the opacity exponentially?
[07:26:02] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[07:27:23] *** Quits: wintersky (uid453465@id-453465.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[07:29:27] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[07:32:54] <theskillwithin> that does sound wierd
[07:33:08] <robertmaxrees> you mean, like, placeholders?
[07:33:29] <theskillwithin> that would be the proper term
[07:34:16] *** Joins: rawgreaze (~rawgreaze@c-73-89-208-53.hsd1.ma.comcast.net)
[07:34:16] *** Quits: rawgreaze (~rawgreaze@c-73-89-208-53.hsd1.ma.comcast.net) (Changing host)
[07:34:16] *** Joins: rawgreaze (~rawgreaze@user/rawgreaze)
[07:38:26] <theskillwithin> if somethings blank, theres no problem having it be blank =]
[07:38:41] <onosendi> robertmaxrees: yeah
[07:38:49] <onosendi> Here's another solution: https://imgur.com/a/edMtoQY
[07:40:20] <theskillwithin> ahh, hmm
[07:40:51] *** Quits: greggerz (~greggerzm@2001:470:69fc:105::da2) (Read error: Connection reset by peer)
[07:40:52] *** Quits: WillPittenger (~willpitte@2001:470:69fc:105::1bf) (Read error: Connection reset by peer)
[07:40:52] *** Quits: kadoban (~kadoban@user/kadoban) (Read error: Connection reset by peer)
[07:40:54] *** Quits: nicoty[m] (~nicoty@user/nicoty) (Write error: Connection reset by peer)
[07:40:54] *** Quits: Cork[m] (~corkmatri@2001:470:69fc:105::3458) (Read error: Connection reset by peer)
[07:40:54] *** Quits: paulcarroty (~paulcarro@2001:470:69fc:105::216) (Write error: Connection reset by peer)
[07:40:55] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Write error: Connection reset by peer)
[07:41:05] *** Quits: Kamui (~kamui-ren@2001:470:69fc:105::f74) (Write error: Connection reset by peer)
[07:41:06] *** Quits: repo[m] (~repo@user/repo) (Read error: Connection reset by peer)
[07:41:31] *** Quits: inkbottle[m] (~inkbottle@2001:470:69fc:105::2ff5) (Write error: Connection reset by peer)
[07:41:38] <theskillwithin> ya that might work
[07:41:48] *** Joins: paulcarroty (~paulcarro@2001:470:69fc:105::216)
[07:42:17] <onosendi> theskillwithin: this is what it looks like blank: https://imgur.com/a/pHQKtHc
[07:42:18] *** Joins: WillPittenger (~willpitte@2001:470:69fc:105::1bf)
[07:42:19] <onosendi> no bueno
[07:42:22] *** Joins: Kamui (~kamui-ren@2001:470:69fc:105::f74)
[07:42:33] *** Joins: repo[m] (~repo@user/repo)
[07:42:45] *** Joins: greggerz (~greggerzm@2001:470:69fc:105::da2)
[07:42:45] *** Joins: nicoty[m] (~nicoty@user/nicoty)
[07:42:45] *** Joins: inkbottle[m] (~inkbottle@2001:470:69fc:105::2ff5)
[07:42:45] *** Joins: kadoban (~kadoban@user/kadoban)
[07:42:57] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[07:42:57] *** Joins: Cork[m] (~corkmatri@2001:470:69fc:105::3458)
[07:43:26] <theskillwithin> my first instinct would be to have the view draft and edit draft be the same, so it would be just empty inputs.   but that might look odd with this design
[07:44:36] <theskillwithin> so ya, the <> stuff might be good
[07:45:22] <onosendi> cool, thanks
[07:46:01] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 256 seconds)
[07:46:21] *** Joins: stenno (~stenno@user/stenno)
[07:46:50] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[07:47:36] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.1)
[07:47:48] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[07:48:57] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:3143:bedd:63c4:72b6) (Quit: Leaving)
[07:51:07] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 256 seconds)
[07:53:41] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[07:56:18] <sickdyd> I have a website that displays a country flag based on the IP of the request; how reliable is a VPN to verify that it works? I'm getting weird results
[07:56:33] <sickdyd> I wonder if an actual average user connecting from X country would be more likely to see the correct flag compared to a request done through a VPN
[07:58:47] <theskillwithin> good question
[07:58:54] <matsaman> about as reliable as your information on the VPN I guess
[07:58:58] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 272 seconds)
[07:59:08] *** Parts: average (uid473595@user/average) ()
[07:59:24] <theskillwithin> at the end of the day, ud want the user to be able to control that by providing them some sort of setting prob
[08:00:18] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 240 seconds)
[08:00:25] <theskillwithin> like more common is prob time zone,  idk if iv ever worked on a site that used ip location for the users time zone instead of just asking the user what their time zone is
[08:01:42] <theskillwithin> maxmind or wtver ip location service your using is great for making those ad's that say hot singles in your area
[08:03:08] *** Quits: kadoban (~kadoban@user/kadoban) (Quit: node-irc says goodbye)
[08:03:18] <GreenJello> there are easier ways to infer the timezone
[08:03:32] *** Quits: nicoty[m] (~nicoty@user/nicoty) (Quit: node-irc says goodbye)
[08:03:35] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 268 seconds)
[08:03:35] *** Quits: paulcarroty (~paulcarro@2001:470:69fc:105::216) (Quit: node-irc says goodbye)
[08:03:48] *** Joins: kadoban (~kadoban@user/kadoban)
[08:04:23] *** Quits: inkbottle[m] (~inkbottle@2001:470:69fc:105::2ff5) (Quit: node-irc says goodbye)
[08:04:49] <theskillwithin> oops, ya that was a bad example
[08:04:54] *** Joins: paulcarroty (~paulcarro@2001:470:69fc:105::216)
[08:05:01] *** Quits: Kamui (~kamui-ren@2001:470:69fc:105::f74) (Quit: node-irc says goodbye)
[08:05:13] *** Joins: nicoty[m] (~nicoty@user/nicoty)
[08:05:14] *** Joins: inkbottle[m] (~inkbottle@2001:470:69fc:105::2ff5)
[08:05:54] *** Quits: repo[m] (~repo@user/repo) (Quit: node-irc says goodbye)
[08:06:02] *** Quits: greggerz (~greggerzm@2001:470:69fc:105::da2) (Quit: node-irc says goodbye)
[08:06:21] <theskillwithin> from what i can tell with maxmind is it usually gets ur state correct, but sometimes it can be off by a city or two in distance
[08:06:24] *** Joins: Kamui (~kamui-ren@2001:470:69fc:105::f74)
[08:06:24] *** Quits: kakashiA1 (~kakashi@ip-37-201-198-196.hsi13.unitymediagroup.de) (Read error: Connection reset by peer)
[08:06:34] *** Quits: Cork[m] (~corkmatri@2001:470:69fc:105::3458) (Quit: node-irc says goodbye)
[08:06:40] *** Joins: repo[m] (~repo@user/repo)
[08:06:40] *** Joins: pavonia_ (~user@user/siracusa)
[08:06:41] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[08:06:49] *** Joins: kakashiA1 (~kakashi@ip-37-201-198-196.hsi13.unitymediagroup.de)
[08:07:02] *** Joins: greggerz (~greggerzm@2001:470:69fc:105::da2)
[08:07:15] *** Joins: Cork[m] (~corkmatri@2001:470:69fc:105::3458)
[08:07:35] *** Quits: pavonia (~user@user/siracusa) (Read error: Connection reset by peer)
[08:07:38] *** pavonia_ is now known as pavonia
[08:07:41] <theskillwithin> we don't use that for i18n tho
[08:08:05] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Max SendQ exceeded)
[08:08:06] *** Joins: saulosilva (~saulosilv@189-127-182-082.linknetinternet.com.br)
[08:09:01] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[08:09:15] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 256 seconds)
[08:09:18] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[08:11:06] <saulosilva> im on arch and on the package manager and npm isn't a dependence to nodejs and i just will use yarn anyway, do i need to have npm installed to use yarn?
[08:11:22] <theskillwithin> is there like a locale to flag package, idk if thats a thing
[08:14:20] <theskillwithin> saulosilva how did you install nodejs?  did you use apt?
[08:14:34] <theskillwithin> hmmm https://nodejs.org/en/download/package-manager/#arch-linux
[08:14:44] <saulosilva> arch linux "pacman"
[08:14:55] <saulosilva> i already saw that
[08:15:10] <saulosilva> but i just want to use yarn
[08:15:24] <saulosilva> do i need npm?
[08:15:39] <theskillwithin> idk
[08:15:45] <theskillwithin> try and see
[08:17:28] <theskillwithin> npm install -g yarn
[08:17:42] <theskillwithin> 🙃
[08:19:06] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: node-irc says goodbye)
[08:19:34] *** Quits: WillPittenger (~willpitte@2001:470:69fc:105::1bf) (Quit: node-irc says goodbye)
[08:20:49] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[08:22:33] <systemfault> It's probably possible to install yarn without NPM... The problem is that some distros, like Arch, sometimes do weird shit... like unbundling things that are officially bundled together, like node and npm
[08:23:05] <theskillwithin> my old NAS was arch I think, and ya it was a pain in the ass
[08:23:34] <systemfault> Arch is great generally...
[08:23:46] <theskillwithin> saulosilva if no one knows in here later might be worth asking in #node.js
[08:23:48] <systemfault> As a power user distro, I don't think there's any better.
[08:25:16] <theskillwithin> part of my problems may have been due to it was a ReadyNAS specific thing,  now I use unraid and i love it
[08:25:30] *** Joins: dunkeln_ (~dunkeln@188.70.10.165)
[08:25:46] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[08:25:53] *** Joins: x00 (~x00@ool-44c1b49b.dyn.optonline.net)
[08:26:30] <saulosilva> arch is great but i sure that t recomended for a nas
[08:26:30] *** Quits: kadoban (~kadoban@user/kadoban) (Quit: node-irc says goodbye)
[08:26:34] *** Quits: paulcarroty (~paulcarro@2001:470:69fc:105::216) (Quit: node-irc says goodbye)
[08:26:41] *** Quits: inkbottle[m] (~inkbottle@2001:470:69fc:105::2ff5) (Quit: node-irc says goodbye)
[08:26:45] *** Quits: nicoty[m] (~nicoty@user/nicoty) (Quit: node-irc says goodbye)
[08:26:51] *** Quits: Kamui (~kamui-ren@2001:470:69fc:105::f74) (Quit: node-irc says goodbye)
[08:26:55] <theskillwithin> i threw that old nas in the trash and built my own
[08:26:57] *** Quits: repo[m] (~repo@user/repo) (Quit: node-irc says goodbye)
[08:26:58] *** Quits: greggerz (~greggerzm@2001:470:69fc:105::da2) (Quit: node-irc says goodbye)
[08:27:16] <saulosilva> the last thing u want on a nas is a rolling release
[08:28:52] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 268 seconds)
[08:29:08] <theskillwithin> i think even the distro was specific to readynas on that thing, it was bad
[08:29:41] <theskillwithin> esp for me cuz im not that great at linux
[08:31:36] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Quit: neshpion)
[08:32:44] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 252 seconds)
[08:35:56] <ljharb> saulosilva: why would you want to use yarn
[08:36:00] <ljharb> saulosilva: yarn 1 is EOL and yarn 2 breaks things
[08:36:05] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[08:36:18] <ljharb> saulosilva: either way, npm comes with node, so yes, you'd always have it installed.
[08:37:51] <saulosilva> EOL?
[08:38:35] <theskillwithin> hes exaggerating a bit
[08:38:39] <theskillwithin> end of life
[08:39:20] <saulosilva> oh lol
[08:39:50] <theskillwithin> yarn 1 is still the latest release.   yarn 2 is still in rc  so yarn 1 can't be at EOL
[08:40:11] *** Joins: Dorward (~dorward@daviddorward.plus.com)
[08:40:12] <theskillwithin> yarn 2 kinda scares me
[08:40:29] *** Joins: stenno (~stenno@user/stenno)
[08:40:35] *** Quits: Dorward_ (~dorward@daviddorward.plus.com) (Ping timeout: 268 seconds)
[08:40:37] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[08:40:43] <theskillwithin> im still on npm 6,  next week maybe ill try upgrading to npm 7.   but only if i can do it without that legacy flag bs
[08:41:16] <theskillwithin> my gut feeling is with npm 7,  but i know nothing
[08:41:16] <saulosilva> every post and article i read about pkg mng said to use yarn
[08:41:44] <ljharb> i'm not exaggerating really
[08:41:46] <saulosilva> faster, safer, offline install
[08:41:53] <systemfault> The only thing yarn 1.x is better than NPM at the moment is for workspace support... if you don't use monorepos, you don't need workspaces.
[08:41:54] <ljharb> theskillwithin: yarn 1 is not receiving any feature updates
[08:42:03] <ljharb> theskillwithin: short of security bugs, yarn 1 is basically frozen
[08:42:16] <ljharb> npm 7 workspaces is fast approaching yarn's
[08:42:27] <ljharb> theskillwithin: that "flag bs" is npm telling you your dep graph is invalid
[08:42:37] <ljharb> theskillwithin: iow, your app is broken whether you use a package manager that warns you about it or not
[08:42:56] <saulosilva> hahaha
[08:43:01] <ljharb> theskillwithin: btw see the "about" line on https://github.com/yarnpkg/yarn
[08:43:22] <ljharb> yarn 2 isn't rc or anything, it's the fully bonafide latest version.
[08:43:31] <ljharb> they just don't mark it as "latest" on npm, but they also don't want you installing it via npm.
[08:43:33] <theskillwithin> ljharb its never my app, its the dependencys i use,  like gatsby,  then gatsby has a dependency that breaks it
[08:43:47] <ljharb> theskillwithin: sure. that doesn't change that your app is broken, it just means the reason it's broken is someone else
[08:43:57] <theskillwithin> i know
[08:43:59] <ljharb> theskillwithin: which means either gatsby will fix it, or you shouldn't use gatsby anyways
[08:44:02] <theskillwithin> which is why im waiting
[08:45:06] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[08:45:13] <ljharb> right but then you *should* use the legacy flag and npm 7
[08:45:22] <ljharb> npm 6 is also EOL
[08:45:31] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 256 seconds)
[08:45:40] <ljharb> the legacy flag is just "what npm 6 does"
[08:45:48] <ljharb> ie, allowing your app to remain broken
[08:45:58] <ljharb> you can configure the flag in `.npmrc`, you don't need it on every command.
[08:46:00] <theskillwithin> ljharb do you use sentry.io?
[08:46:01] <saulosilva> do u know any good article about pkg mng, npm vs yarn vs berry, pnpm npx... etc
[08:47:15] <ljharb> saulosilva: no, but i'm not sure what you're looking for. the best advice is to just use npm. if you need a feature yarn has that npm doesn't, and the caveats are worth it, then use yarn
[08:47:16] <theskillwithin> ljharb im just giving it time to breath, if a lot of well established things break,  why not give it a few more months
[08:47:26] <ljharb> theskillwithin: virtually none break
[08:47:33] <ljharb> saulosilva: pnpm causes all the problems of yarn 2, without any of the popularity or community support
[08:47:41] <ljharb> saulosilva: and npx is part of npm.
[08:48:11] <systemfault> NPM is part of the official Node distribution, might as well use it
[08:48:47] <ljharb> yup
[08:49:42] <saulosilva> and should i be using pacman to install node and npm?
[08:49:57] <systemfault> I'd use nvm
[08:50:02] <saulosilva> (arch pkg mng)
[08:50:09] <ljharb> saulosilva: AUR has nvm too.
[08:50:39] <ljharb> i'd prefer arch users didn't use the one on AUR, but since arch seems to have a bunch of weird shit going on, and the guy maintaining the AUR package is good at working with me, i think it's fine
[08:51:09] <theskillwithin> ljharb im just not going to do legacy flags in all my ci for 10 projects at once when i can just stay on 6 for a bit.   but its been a bit so ill try it again next week
[08:51:11] <ljharb> saulosilva: node, however, is only officially distributed on the website, so either install direct from there, or use something like nvm that does it for you
[08:51:32] <ljharb> theskillwithin: sure but npm 7 is much faster than npm 6, and has lots of bugfixes, so it's still the better bet
[08:51:56] <theskillwithin> hehe you don't have to convince me of that,  im eager for npm 7
[08:51:59] <saulosilva> hmm
[08:52:33] <saulosilva> ok
[08:52:43] <theskillwithin> the outdated packages prob got updated by now anyways
[08:52:54] <saulosilva> thanks
[08:54:01] *** Quits: debsan_ (~debsan@2800:810:471:2ee::1000) (Ping timeout: 256 seconds)
[08:54:04] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Read error: Connection reset by peer)
[08:54:30] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[08:57:37] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:59:08] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 252 seconds)
[09:08:17] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[09:11:34] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[09:11:46] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[09:16:07] *** Joins: Akimb (~Akimb@86.100.13.100)
[09:16:14] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 272 seconds)
[09:17:57] *** Joins: gggpkm (~gggpkm@60.10.194.47)
[09:19:23] *** Quits: Akimb (~Akimb@86.100.13.100) (Read error: Connection reset by peer)
[09:21:51] *** Quits: litharge (litharge@libera/bot/litharge) (Quit: upgrades)
[09:22:14] *** Joins: litharge (litharge@libera/bot/litharge)
[09:23:25] *** Joins: Akimb (~Akimb@86.100.13.100)
[09:23:49] *** Quits: Akimb (~Akimb@86.100.13.100) (Read error: Connection reset by peer)
[09:24:21] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 258 seconds)
[09:27:34] *** Quits: saulosilva (~saulosilv@189-127-182-082.linknetinternet.com.br) (Ping timeout: 246 seconds)
[09:34:34] *** Joins: stenno (~stenno@user/stenno)
[09:41:03] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 256 seconds)
[09:41:40] *** Quits: Cork[m] (~corkmatri@2001:470:69fc:105::3458) (Quit: node-irc says goodbye)
[09:42:43] *** Joins: Akimb (~Akimb@82-135-197-171.static.zebra.lt)
[09:49:33] *** Quits: cismee (~cisme_@user/cisme/x-1186982) (Ping timeout: 256 seconds)
[09:50:29] *** Joins: cisme_ (~cisme_@108-218-190-101.lightspeed.frsnca.sbcglobal.net)
[09:52:55] *** Joins: wintersky (uid453465@id-453465.brockwell.irccloud.com)
[09:55:04] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[09:55:17] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[09:55:18] *** Quits: Jigsy (~Jigsy@user/jigsy) (Remote host closed the connection)
[09:55:42] *** Joins: Jigsy (~Jigsy@user/jigsy)
[09:55:43] *** Joins: Celeo (~Celeo@user/celeo)
[10:00:00] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 252 seconds)
[10:04:07] *** Joins: gggpkm_ (~gggpkm@60.10.194.47)
[10:06:31] *** Quits: Akimb (~Akimb@82-135-197-171.static.zebra.lt) (Ping timeout: 258 seconds)
[10:06:54] *** Quits: gggpkm (~gggpkm@60.10.194.47) (Ping timeout: 272 seconds)
[10:15:43] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[10:16:47] *** Joins: fef (~thedawn@user/thedawn)
[10:19:01] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 256 seconds)
[10:20:39] *** Joins: dan01 (~dan01@86.125.234.121)
[10:25:51] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[10:28:57] *** Joins: stenno (~stenno@user/stenno)
[10:33:30] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[10:33:30] *** Quits: gggpkm_ (~gggpkm@60.10.194.47) (Ping timeout: 272 seconds)
[10:33:37] *** Joins: gggpkm (~gggpkm@60.10.194.47)
[10:34:09] *** Joins: stenno (~stenno@user/stenno)
[10:36:40] *** Quits: Northwoods (~Northwood@223.130.30.189) (Ping timeout: 272 seconds)
[10:37:13] *** Joins: Akimb (~Akimb@82-135-197-171.static.zebra.lt)
[10:50:36] *** Quits: x00 (~x00@ool-44c1b49b.dyn.optonline.net) (Ping timeout: 252 seconds)
[10:51:01] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[10:54:03] *** Joins: tfe (~tfe@213.195.125.255)
[10:54:29] *** Joins: gggpkm_ (~gggpkm@60.10.23.171)
[10:56:22] *** Joins: gggp (~textual@60.10.194.47)
[10:56:56] *** Quits: gggpkm (~gggpkm@60.10.194.47) (Ping timeout: 272 seconds)
[10:57:16] *** Joins: Cyp_ (~cyp@192038130124.mbb.telenor.dk)
[10:57:34] *** Quits: jamea (~jamea77@177.239.87.231) (Ping timeout: 272 seconds)
[10:57:54] *** Quits: dunkeln_ (~dunkeln@188.70.10.165) (Ping timeout: 240 seconds)
[11:01:22] *** Quits: Cyp (~cyp@213.237.83.38) (Ping timeout: 272 seconds)
[11:02:53] *** Quits: gggp (~textual@60.10.194.47) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:03:20] *** Joins: sillyslux__ (~silly@user/silly)
[11:03:30] *** Quits: Woet (~me@irc.woet.me) (Ping timeout: 240 seconds)
[11:05:14] *** Quits: gggpkm_ (~gggpkm@60.10.23.171) (Remote host closed the connection)
[11:05:37] *** Joins: gggpkm_ (~gggpkm@60.10.194.47)
[11:07:00] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 265 seconds)
[11:07:52] *** Joins: gggpkm (~gggpkm@60.10.194.47)
[11:10:23] *** Quits: gggpkm_ (~gggpkm@60.10.194.47) (Ping timeout: 265 seconds)
[11:16:21] *** Joins: audgirka (~audgirka@2402:e280:3e16:e48:d5ba:7034:2ac9:4275)
[11:19:44] *** Quits: klysm (~mdasoh@show.op8.us) (Quit: Lost terminal)
[11:26:12] *** Joins: dunkeln_ (~dunkeln@188.70.10.165)
[11:29:10] *** Joins: dandaman (~Adium@c-76-120-70-146.hsd1.co.comcast.net)
[11:31:55] *** Joins: Northwoods (~Northwood@223.130.30.189)
[11:33:32] *** Quits: dandaman (~Adium@c-76-120-70-146.hsd1.co.comcast.net) (Ping timeout: 258 seconds)
[11:34:29] *** Quits: dunkeln_ (~dunkeln@188.70.10.165) (Ping timeout: 268 seconds)
[11:35:26] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[11:36:33] *** Joins: klysm (~mdasoh@show.op8.us)
[11:37:27] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:42:07] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 244 seconds)
[11:42:50] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[11:46:24] *** Joins: YaknotiS (~YaknotiS@user/yaknotis)
[11:48:55] *** Joins: dodobrain_ (~dodobrain@user/dodobrain)
[11:50:14] *** Joins: gggpkm_ (~gggpkm@36.112.135.215)
[11:52:32] *** Joins: Mumulhl (~Mumulhl@user/mumulhl)
[11:52:55] *** Quits: gggpkm (~gggpkm@60.10.194.47) (Ping timeout: 265 seconds)
[11:52:56] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 252 seconds)
[11:53:16] *** Joins: earendel (uid498179@user/earendel)
[11:54:34] *** Joins: dodobrain__ (~dodobrain@user/dodobrain)
[11:55:13] *** dodobrain__ is now known as dodobrain
[11:55:17] *** Joins: paulcarroty (~paulcarro@2001:470:69fc:105::216)
[11:56:55] *** Joins: WillPittenger (~willpitte@2001:470:69fc:105::1bf)
[11:56:55] *** Joins: Kamui (~kamui-ren@2001:470:69fc:105::f74)
[11:56:55] *** Joins: repo[m] (~repo@user/repo)
[11:56:56] *** Joins: nicoty[m] (~nicoty@user/nicoty)
[11:56:56] *** Joins: kadoban (~kadoban@user/kadoban)
[11:56:56] *** Joins: inkbottle[m] (~inkbottle@2001:470:69fc:105::2ff5)
[11:56:56] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[11:57:05] *** Joins: greggerz (~greggerzm@2001:470:69fc:105::da2)
[11:57:08] *** Joins: Cork[m] (~corkmatri@2001:470:69fc:105::3458)
[11:57:42] *** Quits: dodobrain_ (~dodobrain@user/dodobrain) (Ping timeout: 252 seconds)
[12:01:35] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 256 seconds)
[12:02:06] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 265 seconds)
[12:03:21] *** Quits: leptonix (~leptonix@a83-163-17-196.adsl.xs4all.nl) (Read error: No route to host)
[12:04:12] *** gggpkm_ is now known as gggpkm
[12:09:25] *** Joins: dunkeln (~dunkeln@188.70.10.165)
[12:09:36] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[12:15:30] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 240 seconds)
[12:15:59] *** Quits: kadoban (~kadoban@user/kadoban) (Quit: Client limit exceeded: 20000)
[12:16:20] *** Quits: dunkeln (~dunkeln@188.70.10.165) (Ping timeout: 250 seconds)
[12:16:30] *** Quits: WillPittenger (~willpitte@2001:470:69fc:105::1bf) (Quit: Client limit exceeded: 20000)
[12:16:32] *** Quits: nicoty[m] (~nicoty@user/nicoty) (Quit: Client limit exceeded: 20000)
[12:16:33] *** Quits: paulcarroty (~paulcarro@2001:470:69fc:105::216) (Quit: Client limit exceeded: 20000)
[12:16:42] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[12:17:51] *** Quits: inkbottle[m] (~inkbottle@2001:470:69fc:105::2ff5) (Quit: Client limit exceeded: 20000)
[12:17:55] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Client limit exceeded: 20000)
[12:18:07] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Max SendQ exceeded)
[12:18:56] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[12:19:38] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[12:19:59] *** Quits: Kamui (~kamui-ren@2001:470:69fc:105::f74) (Quit: Client limit exceeded: 20000)
[12:23:21] *** Quits: greggerz (~greggerzm@2001:470:69fc:105::da2) (Quit: Client limit exceeded: 20000)
[12:23:59] *** Quits: Cork[m] (~corkmatri@2001:470:69fc:105::3458) (Quit: Client limit exceeded: 20000)
[12:25:24] *** Joins: Booster2ooo (~Booster2o@91.183.83.5)
[12:28:31] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[12:28:44] *** Quits: repo[m] (~repo@user/repo) (Read error: Connection reset by peer)
[12:29:50] *** Joins: paulcarroty (~paulcarro@2001:470:69fc:105::216)
[12:31:35] *** Joins: WillPittenger (~willpitte@2001:470:69fc:105::1bf)
[12:31:35] *** Joins: repo[m] (~repo@user/repo)
[12:31:35] *** Joins: kadoban (~kadoban@user/kadoban)
[12:31:35] *** Joins: Kamui (~kamui-ren@2001:470:69fc:105::f74)
[12:31:35] *** Joins: inkbottle[m] (~inkbottle@2001:470:69fc:105::2ff5)
[12:31:35] *** Joins: nicoty[m] (~nicoty@user/nicoty)
[12:31:35] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[12:31:40] *** Joins: greggerz (~greggerzm@2001:470:69fc:105::da2)
[12:31:47] *** Joins: Cork[m] (~corkmatri@2001:470:69fc:105::3458)
[12:33:10] *** Joins: gggpkm_ (~gggpkm@60.10.194.47)
[12:33:51] *** Joins: dunkeln (~dunkeln@188.70.10.165)
[12:34:27] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 256 seconds)
[12:35:22] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[12:35:28] *** Quits: gggpkm (~gggpkm@36.112.135.215) (Ping timeout: 252 seconds)
[12:35:55] *** Quits: Mumulhl (~Mumulhl@user/mumulhl) (Quit: Quit)
[12:36:39] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:38:57] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:43:30] *** Quits: audgirka (~audgirka@2402:e280:3e16:e48:d5ba:7034:2ac9:4275) (Ping timeout: 240 seconds)
[12:46:25] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[12:50:23] *** Quits: kadoban (~kadoban@user/kadoban) (Quit: Client limit exceeded: 20000)
[12:50:47] *** Quits: WillPittenger (~willpitte@2001:470:69fc:105::1bf) (Quit: Client limit exceeded: 20000)
[12:50:53] *** Quits: paulcarroty (~paulcarro@2001:470:69fc:105::216) (Quit: Client limit exceeded: 20000)
[12:50:54] *** Quits: nicoty[m] (~nicoty@user/nicoty) (Quit: Client limit exceeded: 20000)
[12:51:58] *** Quits: inkbottle[m] (~inkbottle@2001:470:69fc:105::2ff5) (Quit: Client limit exceeded: 20000)
[12:52:17] *** Joins: Crassus (~Crassus@user/crassus)
[12:52:20] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Client limit exceeded: 20000)
[12:53:29] *** Quits: repo[m] (~repo@user/repo) (Quit: Client limit exceeded: 20000)
[12:54:08] *** Quits: Kamui (~kamui-ren@2001:470:69fc:105::f74) (Quit: Client limit exceeded: 20000)
[12:55:13] *** Joins: jonifen (~jonifen@user/jonifen)
[12:55:24] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Remote host closed the connection)
[12:55:48] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[12:57:08] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Max SendQ exceeded)
[12:57:49] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[12:58:07] *** Quits: greggerz (~greggerzm@2001:470:69fc:105::da2) (Quit: Client limit exceeded: 20000)
[12:58:41] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[12:58:52] *** Quits: Cork[m] (~corkmatri@2001:470:69fc:105::3458) (Quit: Client limit exceeded: 20000)
[13:00:18] *** Quits: dunkeln (~dunkeln@188.70.10.165) (Ping timeout: 240 seconds)
[13:03:08] *** Joins: paulcarroty (~paulcarro@2001:470:69fc:105::216)
[13:04:53] *** Joins: WillPittenger (~willpitte@2001:470:69fc:105::1bf)
[13:04:54] *** Joins: repo[m] (~repo@user/repo)
[13:04:54] *** Joins: Kamui (~kamui-ren@2001:470:69fc:105::f74)
[13:04:54] *** Joins: kadoban (~kadoban@user/kadoban)
[13:04:54] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[13:04:54] *** Joins: inkbottle[m] (~inkbottle@2001:470:69fc:105::2ff5)
[13:04:54] *** Joins: nicoty[m] (~nicoty@user/nicoty)
[13:04:55] *** Joins: greggerz (~greggerzm@2001:470:69fc:105::da2)
[13:05:06] *** Joins: Cork[m] (~corkmatri@2001:470:69fc:105::3458)
[13:07:19] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 256 seconds)
[13:07:56] *** Joins: dunkeln_ (~dunkeln@188.70.10.165)
[13:08:23] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[13:08:59] *** Quits: Northwoods (~Northwood@223.130.30.189) (Ping timeout: 258 seconds)
[13:10:24] *** Quits: Cork[m] (~corkmatri@2001:470:69fc:105::3458) (Remote host closed the connection)
[13:10:24] *** Quits: kadoban (~kadoban@user/kadoban) (Read error: Connection reset by peer)
[13:10:24] *** Quits: WillPittenger (~willpitte@2001:470:69fc:105::1bf) (Write error: Connection reset by peer)
[13:10:25] *** Quits: inkbottle[m] (~inkbottle@2001:470:69fc:105::2ff5) (Read error: Connection reset by peer)
[13:10:25] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Read error: Connection reset by peer)
[13:10:25] *** Quits: paulcarroty (~paulcarro@2001:470:69fc:105::216) (Read error: Connection reset by peer)
[13:10:26] *** Quits: repo[m] (~repo@user/repo) (Remote host closed the connection)
[13:10:26] *** Quits: nicoty[m] (~nicoty@user/nicoty) (Read error: Connection reset by peer)
[13:10:26] *** Quits: Kamui (~kamui-ren@2001:470:69fc:105::f74) (Read error: Connection reset by peer)
[13:10:27] *** Quits: greggerz (~greggerzm@2001:470:69fc:105::da2) (Remote host closed the connection)
[13:16:52] *** Parts: em-bee (~eMBee@realss.com) ()
[13:30:28] *** Joins: Dorward_ (~dorward@daviddorward.plus.com)
[13:30:44] *** Joins: dandaman (~Adium@c-76-120-70-146.hsd1.co.comcast.net)
[13:31:18] *** Joins: Heraes (~Heraes@user/romarain)
[13:32:55] *** Joins: Lope (~lope@user/lope)
[13:33:05] <Lope> is Y2K38 a problem with Date.now() ?
[13:33:23] *** Quits: Dorward (~dorward@daviddorward.plus.com) (Ping timeout: 256 seconds)
[13:34:01] <wallbroken> any freelancers to help me?
[13:35:12] *** Quits: dandaman (~Adium@c-76-120-70-146.hsd1.co.comcast.net) (Ping timeout: 250 seconds)
[13:35:40] <Lope> Oh, I see JavaScript's number for Date.now() can go up to the year 287396
[13:35:49] *** Joins: paulcarroty (~paulcarro@2001:470:69fc:105::216)
[13:36:31] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[13:37:08] <Lope> console.log(Number.MAX_SAFE_INTEGER / 1000 / 60 / 60 / 24 / 365)
[13:37:09] *** Joins: WillPittenger (~willpitte@2001:470:69fc:105::1bf)
[13:37:09] *** Joins: Kamui (~kamui-ren@2001:470:69fc:105::f74)
[13:37:09] *** Joins: repo[m] (~repo@user/repo)
[13:37:21] *** Joins: greggerz (~greggerzm@2001:470:69fc:105::da2)
[13:37:21] *** Joins: nicoty[m] (~nicoty@user/nicoty)
[13:37:21] *** Joins: kadoban (~kadoban@user/kadoban)
[13:37:21] *** Joins: inkbottle[m] (~inkbottle@2001:470:69fc:105::2ff5)
[13:37:23] <Cork> n> new Date(new Date(2080, 1,1,1,1).getTime())
[13:37:24] <jellobot> (okay) 2080-02-01T01:01:00.000Z
[13:37:31] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[13:37:32] <Cork> n> new Date(2080, 1,1,1,1).getTime()
[13:37:33] <jellobot> (okay) 3473974860000
[13:37:33] *** Joins: Cork[m] (~corkmatri@2001:470:69fc:105::3458)
[13:40:11] *** Quits: dunkeln_ (~dunkeln@188.70.10.165) (Ping timeout: 256 seconds)
[13:47:19] *** Quits: gggpkm_ (~gggpkm@60.10.194.47) (Remote host closed the connection)
[13:47:37] *** Joins: gggpkm_ (~gggpkm@60.10.194.47)
[13:47:58] *** Joins: gggp (~textual@60.10.194.47)
[13:48:59] *** Joins: sQVe (~sQVe@user/sqve)
[13:51:54] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 240 seconds)
[13:52:02] *** Quits: sQVe (~sQVe@user/sqve) (Quit: Bye!)
[13:53:02] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[13:53:46] *** Joins: gggpkm (~gggpkm@60.10.194.47)
[13:54:18] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[13:54:43] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 265 seconds)
[13:54:43] *** Quits: gggpkm_ (~gggpkm@60.10.194.47) (Ping timeout: 265 seconds)
[13:55:33] *** Joins: rifl` (~user@user/rifl)
[13:55:48] *** Joins: Woet (~me@irc.woet.me)
[13:56:28] *** Joins: gggp (~textual@60.10.23.171)
[13:56:44] *** Joins: thiras (~thiras@user/thiras)
[13:57:11] *** Quits: rifl (~user@user/rifl) (Ping timeout: 256 seconds)
[13:57:19] <theskillwithin> btw sheetjs is a fucking badass.
[13:58:01] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[13:58:53] *** Quits: gggp (~textual@60.10.23.171) (Client Quit)
[14:04:24] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[14:06:52] *** Joins: sQVe (~sQVe@c80-217-97-80.bredband.tele2.se)
[14:07:33] *** Quits: sQVe (~sQVe@c80-217-97-80.bredband.tele2.se) (Client Quit)
[14:07:43] *** Joins: dunkeln_ (~dunkeln@188.70.10.165)
[14:16:02] *** Joins: sQVe (~sQVe@user/sqve)
[14:16:30] *** Quits: sQVe (~sQVe@user/sqve) (Client Quit)
[14:20:52] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 272 seconds)
[14:21:08] *** Joins: sQVe (~sQVe@user/sqve)
[14:28:02] *** Quits: Lope (~lope@user/lope) (Ping timeout: 252 seconds)
[14:35:19] *** Quits: dunkeln_ (~dunkeln@188.70.10.165) (Ping timeout: 265 seconds)
[14:36:51] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 256 seconds)
[14:37:12] *** Quits: xsperry (~as@user/xsperry) (Remote host closed the connection)
[14:41:35] *** Joins: audgirka (~audgirka@2402:e280:3e16:e48:d5ba:7034:2ac9:4275)
[14:45:45] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[14:55:05] *** Joins: g00fy (~g00fy@user/g00fy)
[14:57:02] <cthulchu> folks, we can listen to array/object changes, right?
[14:57:11] <cthulchu> in a better way than polling
[15:08:41] *** Joins: rifl`` (~user@user/rifl)
[15:09:53] <Maxdamantus> cthulchu: you can define a setter on an object, but you shouldn't generally use that as a way to structure your code.
[15:10:24] <Maxdamantus> cthulchu: if something is meant to happen, define a function.
[15:10:54] *** Quits: rifl` (~user@user/rifl) (Ping timeout: 272 seconds)
[15:10:55] <Maxdamantus> functions/methods are the usual thing to use in JS for effects.
[15:11:06] *** Joins: stennowork (~stenno@p57800156.dip0.t-ipconnect.de)
[15:11:53] <cthulchu> nah
[15:12:09] <cthulchu> I'm wondering how tag management systems listen to their datalayers.
[15:13:35] <cthulchu> and by overriding the setter is probably exactly how...
[15:16:09] *** Joins: gggpkm_ (~gggpkm@60.10.194.47)
[15:16:13] *** Joins: johtso (~johtso@37.120.143.90)
[15:17:28] *** Joins: dunkeln_ (~dunkeln@188.70.10.165)
[15:18:11] *** Quits: stennowork (~stenno@p57800156.dip0.t-ipconnect.de) (Changing host)
[15:18:11] *** Joins: stennowork (~stenno@user/stenno)
[15:18:33] *** Quits: gggpkm (~gggpkm@60.10.194.47) (Ping timeout: 258 seconds)
[15:19:58] *** Joins: entuland (~entuland@user/entuland)
[15:20:48] *** Quits: incognito (~relativit@user/incognito) (Remote host closed the connection)
[15:25:19] *** Joins: pulse (~pulse@user/pulse)
[15:26:38] <paulcarroty> lol, github deleted all my secrets which starts from "github"
[15:26:43] <paulcarroty> they are crazy
[15:27:15] *** Quits: dan01 (~dan01@86.125.234.121) (Read error: Connection reset by peer)
[15:27:52] *** Joins: Lope (~lope@user/lope)
[15:29:57] <entuland> deleted all your secrets?
[15:30:54] <thekingofbandit> you mean some sort of API key?
[15:32:40] *** Quits: rifl`` (~user@user/rifl) (Remote host closed the connection)
[15:32:49] *** Joins: rifl`` (~user@user/rifl)
[15:38:53] *** Joins: xsperry (~as@user/xsperry)
[15:40:25] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:e4c1:6db1:76db:ec36)
[15:48:15] *** Quits: dunkeln_ (~dunkeln@188.70.10.165) (Ping timeout: 256 seconds)
[15:56:16] *** Joins: n00b101 (uid448161@id-448161.tooting.irccloud.com)
[15:59:58] *** Joins: dunkeln (~dunkeln@188.70.10.165)
[16:01:00] *** Joins: peteyboy1 (~peteyboy1@95.169.229.12)
[16:01:39] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[16:09:16] *** Quits: Joel (~jjshoe@user/joel) (Ping timeout: 246 seconds)
[16:09:34] *** Quits: dunkeln (~dunkeln@188.70.10.165) (Ping timeout: 265 seconds)
[16:11:58] *** Quits: tfe (~tfe@213.195.125.255) (Remote host closed the connection)
[16:24:58] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[16:34:21] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[16:35:11] *** Joins: daniel-k8 (~daniel-k@192.241.135.211)
[16:35:30] *** Joins: mdel1 (~mdel@user/mdel)
[16:36:20] *** Joins: Zwei (~Zweihande@znc.ext.zweihander.me)
[16:37:02] *** Quits: mdel (~mdel@user/mdel) (Ping timeout: 272 seconds)
[16:37:02] *** mdel1 is now known as mdel
[16:37:40] *** Quits: daniel-k (~daniel-k@192.241.135.211) (Ping timeout: 272 seconds)
[16:37:40] *** Quits: PigDude (~PigDude@159.203.16.199) (Ping timeout: 272 seconds)
[16:37:40] *** Quits: Zweihander (~Zweihande@znc.ext.zweihander.me) (Ping timeout: 272 seconds)
[16:37:40] *** daniel-k8 is now known as daniel-k
[16:37:48] *** Joins: PigDude (~PigDude@159.203.16.199)
[16:38:12] *** Joins: dunkeln (~dunkeln@188.70.10.165)
[16:38:38] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Read error: Connection reset by peer)
[16:41:40] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[16:44:42] *** Quits: jazzy (~jaziz@2600:380:4542:186:f862:a412:d266:3c8e) (Ping timeout: 240 seconds)
[16:47:10] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 272 seconds)
[16:58:58] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[17:04:33] *** Joins: gggpkm (~gggpkm@60.10.194.47)
[17:06:48] *** Quits: gggpkm_ (~gggpkm@60.10.194.47) (Ping timeout: 272 seconds)
[17:09:03] *** Joins: debsan_ (~debsan@2800:810:471:2ee::1000)
[17:19:00] *** Joins: dan01 (~dan01@2a02:2f0f:3017:4e00:b969:1c34:a8e1:514b)
[17:19:33] *** Joins: jamea (~jamea77@187.185.190.209)
[17:23:21] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[17:25:39] *** Quits: Akimb (~Akimb@82-135-197-171.static.zebra.lt) (Read error: Connection reset by peer)
[17:32:05] *** Joins: dandaman (~Adium@c-76-120-70-146.hsd1.co.comcast.net)
[17:36:30] *** Quits: dandaman (~Adium@c-76-120-70-146.hsd1.co.comcast.net) (Ping timeout: 252 seconds)
[17:42:37] *** Joins: gggpkm_ (~gggpkm@60.10.194.47)
[17:44:09] *** Joins: wovixo (~wovixo@128.104.205.49)
[17:44:34] *** Quits: cisme_ (~cisme_@108-218-190-101.lightspeed.frsnca.sbcglobal.net) (Changing host)
[17:44:34] *** Joins: cisme_ (~cisme_@user/cisme/x-1186982)
[17:45:17] *** Joins: NeoCron (~NeoCron@ip4-45-158-175-19.dyn.netcomnetz.de)
[17:45:26] *** Quits: gggpkm (~gggpkm@60.10.194.47) (Ping timeout: 272 seconds)
[17:50:00] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 250 seconds)
[17:54:55] *** gggpkm_ is now known as gggpkm
[17:56:55] *** Quits: sQVe (~sQVe@user/sqve) (Quit: Bye!)
[17:57:11] *** Joins: gggpkm_ (~gggpkm@60.10.194.47)
[17:59:45] *** Joins: CiaoSen (~Jura@p200300c95722a400dbe4133b387f39b9.dip0.t-ipconnect.de)
[17:59:46] *** Quits: gggpkm (~gggpkm@60.10.194.47) (Ping timeout: 265 seconds)
[18:01:16] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 272 seconds)
[18:03:20] *** Quits: dan01 (~dan01@2a02:2f0f:3017:4e00:b969:1c34:a8e1:514b) (Read error: Connection reset by peer)
[18:04:55] *** Quits: dunkeln (~dunkeln@188.70.10.165) (Ping timeout: 258 seconds)
[18:05:30] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[18:08:07] *** Joins: gggpkm (~gggpkm@60.10.194.47)
[18:10:03] *** Joins: Atum_ (~IRC@user/atum/x-2392232)
[18:10:08] *** Quits: gggpkm_ (~gggpkm@60.10.194.47) (Ping timeout: 272 seconds)
[18:10:25] *** Joins: pulse (~pulse@user/pulse)
[18:11:07] *** Joins: gggpkm_ (~gggpkm@60.10.194.47)
[18:12:20] *** Quits: audgirka (~audgirka@2402:e280:3e16:e48:d5ba:7034:2ac9:4275) (Quit: Leaving)
[18:13:56] *** Quits: gggpkm (~gggpkm@60.10.194.47) (Ping timeout: 272 seconds)
[18:19:58] *** Joins: dunkeln (~dunkeln@188.70.10.165)
[18:22:10] *** Joins: dandaman (~Adium@c-76-120-70-146.hsd1.co.comcast.net)
[18:22:11] *** Quits: CiaoSen (~Jura@p200300c95722a400dbe4133b387f39b9.dip0.t-ipconnect.de) (Quit: CiaoSen)
[18:23:05] *** Joins: dan01 (~dan01@2a02:2f0f:3017:4e00:6dfa:53c9:2384:234)
[18:23:29] *** Parts: dan01 (~dan01@2a02:2f0f:3017:4e00:6dfa:53c9:2384:234) ()
[18:23:52] *** Joins: gggpkm (~gggpkm@60.10.194.47)
[18:25:52] *** Quits: gggpkm_ (~gggpkm@60.10.194.47) (Ping timeout: 265 seconds)
[18:30:18] *** Quits: YaknotiS (~YaknotiS@user/yaknotis) (Remote host closed the connection)
[18:30:35] *** Quits: xse (~xse@user/xse) (Remote host closed the connection)
[18:31:00] *** Joins: xse (~xse@user/xse)
[18:31:56] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[18:32:30] *** Joins: YaknotiS (~YaknotiS@user/yaknotis)
[18:32:37] *** Joins: Akimb (~Akimb@86.100.13.100)
[18:35:12] *** Joins: gggpkm_ (~gggpkm@60.10.194.47)
[18:37:22] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 272 seconds)
[18:38:00] *** Quits: gggpkm (~gggpkm@60.10.194.47) (Ping timeout: 272 seconds)
[18:39:25] *** Joins: jamea97 (~jamea77@200.68.140.31)
[18:40:32] *** Quits: jamea (~jamea77@187.185.190.209) (Ping timeout: 272 seconds)
[18:43:07] *** Joins: gggpkm (~gggpkm@60.10.194.47)
[18:43:36] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[18:43:39] *** Quits: yte3 (~0@151.15.46.204) (Quit: Textual IRC Client: www.textualapp.com)
[18:44:20] *** Quits: gggpkm_ (~gggpkm@60.10.194.47) (Ping timeout: 272 seconds)
[18:45:15] *** Joins: gggpkm_ (~gggpkm@60.10.194.47)
[18:48:08] *** Quits: gggpkm (~gggpkm@60.10.194.47) (Ping timeout: 272 seconds)
[18:51:59] *** Quits: Akimb (~Akimb@86.100.13.100) (Read error: Connection reset by peer)
[18:52:13] *** Joins: CiaoSen (~Jura@p200300c95722a400dbe4133b387f39b9.dip0.t-ipconnect.de)
[18:57:14] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[18:57:42] *** Joins: jamea (~jamea77@187.185.190.209)
[18:58:44] *** Quits: jamea97 (~jamea77@200.68.140.31) (Ping timeout: 265 seconds)
[18:59:24] *** Quits: stennowork (~stenno@user/stenno) (Quit: Leaving)
[18:59:57] *** Joins: Joel (~jjshoe@user/joel)
[19:02:11] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 268 seconds)
[19:02:12] *** Joins: x00 (~x00@ool-44c1b49b.dyn.optonline.net)
[19:02:24] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[19:03:42] *** Joins: onosendi (~onosendi@user/onosendi)
[19:09:25] *** Joins: gggpkm (~gggpkm@60.10.194.47)
[19:09:59] *** Quits: Joel (~jjshoe@user/joel) (Ping timeout: 256 seconds)
[19:11:17] *** Joins: Joel (~jjshoe@user/joel)
[19:11:34] *** Quits: gggpkm_ (~gggpkm@60.10.194.47) (Ping timeout: 272 seconds)
[19:12:20] *** Joins: mei (~mei@user/mei)
[19:13:42] *** Quits: fedorafan (~fedorafan@user/fedorafan) (Remote host closed the connection)
[19:15:12] *** Joins: gggpkm_ (~gggpkm@60.10.194.47)
[19:18:04] *** Quits: gggpkm (~gggpkm@60.10.194.47) (Ping timeout: 265 seconds)
[19:19:19] *** Quits: gggpkm_ (~gggpkm@60.10.194.47) (Remote host closed the connection)
[19:19:40] *** Joins: gggpkm_ (~gggpkm@60.10.194.47)
[19:20:24] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Lost terminal)
[19:23:22] *** Joins: gggpkm (~gggpkm@60.10.194.47)
[19:25:30] *** Quits: gggpkm_ (~gggpkm@60.10.194.47) (Ping timeout: 272 seconds)
[19:25:37] *** Joins: gggpkm_ (~gggpkm@60.10.194.47)
[19:26:11] *** Quits: Lope (~lope@user/lope) (Ping timeout: 258 seconds)
[19:28:40] *** Quits: gggpkm (~gggpkm@60.10.194.47) (Ping timeout: 272 seconds)
[19:29:00] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[19:31:01] *** Quits: earendel (uid498179@user/earendel) (Quit: Connection closed for inactivity)
[19:35:28] *** Quits: gggpkm_ (~gggpkm@60.10.194.47) (Ping timeout: 265 seconds)
[19:38:27] *** Quits: dunkeln (~dunkeln@188.70.10.165) (Ping timeout: 258 seconds)
[19:39:26] *** Joins: stenno (~stenno@user/stenno)
[19:39:48] *** Quits: jamea (~jamea77@187.185.190.209) (Ping timeout: 268 seconds)
[19:40:33] *** Joins: hendursaga (~weechat@user/hendursaga)
[19:40:35] *** Joins: dunkeln (~dunkeln@188.70.10.165)
[19:42:31] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[19:43:55] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[19:46:15] *** Joins: qswz (~caub@91-175-196-225.subs.proxad.net)
[19:46:57] <qswz> n> function f(){throw new Error('foo');} try {f()} catch(e) { e.message += ' bar'; throw e}
[19:46:58] <jellobot> (fail) Error: foo bar
[19:47:07] <qswz> bad or good?
[19:47:34] <qswz> guess it's cleaner to create a new Error to wrap the message
[19:48:10] <qswz> n> function f(){throw new Error('foo');} try {f()} catch(e) { throw new Error(`${e.message} bar`) }
[19:48:11] <jellobot> (fail) Error: foo bar
[19:48:28] <qswz> yea, seems better, sry I'm losing neurons those times
[19:48:51] <qswz> probably the sun that hits hard on the head
[19:51:05] <qswz> damn, we're using this silly axios lib there
[19:53:10] <qswz> n> function f(){throw Object.assign(new Error('foo'),{errors:[1,2]});} try {f()} catch(e) { throw Object.assign(new Error(`${e.message} bar`),e) }
[19:53:11] <jellobot> (fail) Error: foo bar
[19:54:46] <qswz> I need to make a proposal for new Error(msg, other props)
[19:55:01] <Kirjava> n> [...0xAAAAAAAAAAAA.toString(2)].map(n=>(String.fromCharCode(0x27cb+n*2))).join``.link``.slice(0xA + !!'snake')
[19:55:02] <jellobot> (okay) '⟍⟋⟍⟋⟍⟋⟍⟋⟍⟋⟍⟋⟍⟋⟍⟋⟍⟋⟍⟋⟍⟋⟍⟋⟍⟋⟍⟋⟍⟋⟍⟋⟍⟋⟍⟋⟍⟋⟍⟋⟍⟋⟍⟋⟍⟋⟍⟋</a>'
[19:55:15] <qswz> calm down there
[19:55:32] *** Joins: Haren4E (~Haren4E@186.6.139.76)
[19:55:46] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[19:56:10] *** Joins: skunk (~skunk@pool-70-104-163-4.norf.east.verizon.net)
[19:56:49] <Kirjava> if you can think of a better way to draw a snake I'd like to hear it
[19:57:20] *** Parts: skunk (~skunk@pool-70-104-163-4.norf.east.verizon.net) ()
[19:57:28] <theskillwithin> you mean a danger noodle?
[19:57:55] <qswz> on linux I see mostly squares
[19:58:07] <qswz> I guess my OS font are missing those unicodes
[19:58:21] <Kirjava> https://imgur.com/3yQcOy1.png
[19:58:56] <qswz> oh nice ok
[19:59:02] <ashnur> i am on windows hexchat and i see https://imgur.com/a/ASewwXP
[19:59:08] <theskillwithin> n> Array(16).join('yay' -1) + ' Batman!'
[19:59:09] <jellobot> (okay) 'NaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaN Batman!'
[19:59:26] <ashnur> interesting snake, all the numbers and letters clearly readable on its scales
[19:59:45] <qswz> _|‾|_|‾|_|‾
[20:00:56] <onosendi> qswz: what distro are you using?
[20:00:58] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Ping timeout: 252 seconds)
[20:01:03] <qswz> n> "◡◠".repeat(20)
[20:01:04] <jellobot> (okay) '◡◠◡◠◡◠◡◠◡◠◡◠◡◠◡◠◡◠◡◠◡◠◡◠◡◠◡◠◡◠◡◠◡◠◡◠◡◠◡◠'
[20:01:10] <qswz> onosendi: lubuntu 18.04
[20:01:13] <Kirjava> lmao
[20:01:15] <Kirjava> cheat
[20:01:46] <qswz> n> "◡◠".repeat(20)+'🐸'
[20:01:48] <jellobot> (okay) '◡◠◡◠◡◠◡◠◡◠◡◠◡◠◡◠◡◠◡◠◡◠◡◠◡◠◡◠◡◠◡◠◡◠◡◠◡◠◡◠🐸'
[20:01:50] <qswz> mutant snake
[20:01:54] <Kirjava> n> '~'.repeat(20).link().slice(11)
[20:01:55] <jellobot> (okay) 'defined">~~~~~~~~~~~~~~~~~~~~</a>'
[20:02:01] <Kirjava> er
[20:02:07] <Kirjava> n> '~'.repeat(20).link``.slice(11)
[20:02:08] <jellobot> (okay) '~~~~~~~~~~~~~~~~~~~~</a>'
[20:02:11] <Kirjava> awful
[20:02:12] <qswz> your snake looks like a broken anchor
[20:02:17] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[20:02:18] <Kirjava> yeah
[20:02:22] <Kirjava> ill leave it how it was
[20:02:55] <qswz> n> "/\/\/▸"
[20:02:56] <jellobot> (okay) '///▸'
[20:03:06] <qswz> damn escaping got me
[20:03:20] <qswz> n> "/\\/\\/\\-▸"
[20:03:21] <jellobot> (okay) '/\\/\\/\\-▸'
[20:03:28] <qswz> I suck
[20:03:33] <qswz> told ya I'm missing neurons
[20:04:25] <Kirjava> rip
[20:04:38] <qswz> they'll regrow
[20:05:12] *** Joins: Northwoods (~Northwood@223.130.30.189)
[20:08:31] <Kirjava> n> [...Array(30)].map((_,i) => '‾|_'[(Math.sin(++i)*2|0)+1]).join``.link``.slice(0xB
[20:08:32] <jellobot> (fail) SyntaxError: missing ) after argument list
[20:08:33] <Kirjava> augh
[20:08:36] <Kirjava> n> [...Array(30)].map((_,i) => '‾|_'[(Math.sin(++i)*2|0)+1]).join``.link``.slice(0xB)
[20:08:37] <jellobot> (okay) '__|‾‾|__|‾‾‾|__|‾‾|__|‾‾|__|‾‾</a>'
[20:08:40] <qswz> n> console.log('\\/\\/\/\\\/')
[20:08:40] <stenno> 🐍
[20:08:41] <jellobot> (okay) \/\//\/
[20:08:53] <qswz> snake emoji looks like a duck
[20:09:05] <qswz> from far away at least
[20:09:17] <Kirjava> quack
[20:09:34] <qswz> n> console.log('\\/\\/\/\\/\\-▸')
[20:09:35] <jellobot> (okay) \/\//\/\-▸
[20:09:38] <stenno> if it looks like a duck, ...
[20:09:46] <qswz> n> console.log('\\/\\/\\/\\/\\-▸')
[20:09:47] <jellobot> (okay) \/\/\/\/\-▸
[20:09:59] <qswz> ducks quacks, snakes tssisses
[20:10:25] <stenno> related http://bash.org/?400459
[20:10:28] *** Quits: dunkeln (~dunkeln@188.70.10.165) (Ping timeout: 272 seconds)
[20:10:46] <qswz> hah
[20:10:56] <qswz> someone speaks Javanese here?
[20:11:12] <Kirjava> nap!
[20:11:58] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Quit: leaving)
[20:13:54] *** Joins: skunk1 (~skunk@192.145.116.191)
[20:14:18] *** Quits: CiaoSen (~Jura@p200300c95722a400dbe4133b387f39b9.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[20:14:46] <systemfault> System.out.println("Nope"); // Lulz.
[20:14:48] *** Parts: skunk1 (~skunk@192.145.116.191) ()
[20:14:49] *** Joins: skunk1 (~skunk@192.145.116.191)
[20:14:57] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Ping timeout: 268 seconds)
[20:15:54] <theskillwithin> everyone gets a ⭐️ for their snake
[20:16:00] *** Joins: rifl``` (~user@user/rifl)
[20:17:06] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[20:17:47] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[20:17:50] *** Quits: rifl`` (~user@user/rifl) (Ping timeout: 252 seconds)
[20:18:46] <theskillwithin> i love that joke i heard captian phill harris used to make.  "do you know how to make a duck fart"  (the alcoholic drink).  punchline:  you squeeze it
[20:19:02] <theskillwithin> meh it doesn't work over text
[20:19:20] <qswz> n> process.write('nop')
[20:19:21] <jellobot> (fail) TypeError: process.write is not a function
[20:19:32] <qswz> n> process.stdoutwrite('nop')
[20:19:33] <jellobot> (fail) TypeError: process.stdoutwrite is not a function
[20:19:43] <qswz> n> process.stdout.write('nop')
[20:19:44] <jellobot> (okay) noptrue
[20:19:50] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[20:19:56] <Kirjava> theskillwithin: you just have to read it write
[20:20:30] <qswz> I read from left
[20:20:36] <Kirjava> n> pricess.stdout.write(String.fromCharCode(0x13))
[20:20:37] <jellobot> (fail) ReferenceError: pricess is not defined
[20:20:41] <Kirjava> pricess? lmao
[20:20:45] <Kirjava> n> process.stdout.write(String.fromCharCode(0x13))
[20:20:46] <jellobot> (okay) true
[20:20:46] <qswz> princess
[20:21:25] <stenno> priceless princess process
[20:21:39] *** Joins: rifl```` (~user@user/rifl)
[20:21:55] *** Joins: earendel (uid498179@user/earendel)
[20:21:57] <theskillwithin> n> proccess.version
[20:21:58] <jellobot> (fail) ReferenceError: proccess is not defined
[20:22:05] <theskillwithin> n> process.version
[20:22:06] <jellobot> (okay) 'v15.12.0'
[20:22:30] <theskillwithin> an odd version of node, tsk tsk
[20:22:57] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[20:23:46] *** Quits: rifl``` (~user@user/rifl) (Ping timeout: 272 seconds)
[20:23:47] <lmat> I'm using React and I have a useState pretty high in the component tree. That piece of state, the orderObject, has several properties about the order whose contents this part of the web app is designed to fill out. orderObject and setOrderObject are being passed to several components.
[20:24:23] <lmat> The issue I'm thinking about is in useEffect(..., [someProperty, orderObject]); With this dependency array, useEffect on all components runs any time any component changes at all.
[20:25:17] <lmat> useEffect(()=>{setOrderObject({...orderObject, thePropICareAbout});}, [thePropICareAbout, orderObject);
[20:25:19] <qswz> so pass order.someProp
[20:25:33] <qswz> the ones that maytter
[20:25:47] <theskillwithin> wait won't that be an infinite loop imat?
[20:26:08] <theskillwithin> ur setting orderObject,  and orderObject is a dependency
[20:26:21] <qswz> instead of whole object
[20:26:24] <lmat> theskillwithin: No, it works out...I don't remember why.
[20:26:45] <theskillwithin> also ur missing a ]  there but i think that part was just a typo
[20:26:56] <lmat> qswz: Then react says that I need to add orderObject to my dependency array because in "...orderObject", I'm actually using every property of orderObject.
[20:27:02] <lmat> theskillwithin: yes, typo, sorry!
[20:27:41] <lmat> qswz: You and I know that even if orderObject changes, useEffect shouldn't run, but react doesn't seem to know it.
[20:28:12] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 272 seconds)
[20:28:38] *** Quits: rifl```` (~user@user/rifl) (Remote host closed the connection)
[20:28:46] *** Joins: rifl```` (~user@user/rifl)
[20:29:40] <qswz> eslint, not reactù
[20:29:54] <qswz> but do what makes sense, all i can say
[20:30:09] <theskillwithin> btw ur allowed to do this, which is better:  lmat:      setOrderObject((curr) => ({ ...curr, thePropICareAbout })
[20:30:31] <theskillwithin> )
[20:31:08] <lmat> theskillwithin: Maybe that won't rely on orderObject then...
[20:31:22] *** Quits: onosendi (~onosendi@user/onosendi) (Ping timeout: 272 seconds)
[20:31:30] <theskillwithin> i still think its odd ur setting something thats in the dependency array, it feels like would cause infinite loop to me.  but not sure
[20:31:37] *** Quits: qswz (~caub@91-175-196-225.subs.proxad.net) (Quit: leaving)
[20:32:26] *** Parts: skunk1 (~skunk@192.145.116.191) ()
[20:32:47] <lmat> theskillwithin: Yeah, I understand what you're saying. In fact, I'm starting to think I'm doing it wrong. Whatever changes thePropICareAbout should just call setOrderObject directly rather than letting the useEffect function run, right?
[20:33:03] *** Joins: Doraemon (~NeoCron@ip4-45-158-175-19.dyn.netcomnetz.de)
[20:35:55] *** Quits: NeoCron (~NeoCron@ip4-45-158-175-19.dyn.netcomnetz.de) (Ping timeout: 268 seconds)
[20:36:05] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Quit: Must not waste too much time here...)
[20:37:39] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[20:38:46] *** Quits: Booster2ooo (~Booster2o@91.183.83.5) (Read error: Connection reset by peer)
[20:42:45] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:e4c1:6db1:76db:ec36) (Quit: Leaving)
[20:48:06] <ashnur> stenno> 🐍 this worked
[20:51:58] *** Joins: jamea (~jamea77@189.231.126.229)
[20:52:02] *** Joins: dunkeln_ (~dunkeln@188.70.10.165)
[20:53:20] *** Joins: Deide (~Deide@wire.desu.ga)
[20:53:20] *** Quits: Heraes (~Heraes@user/romarain) (Read error: Connection reset by peer)
[20:53:20] *** Quits: Deide (~Deide@wire.desu.ga) (Changing host)
[20:53:20] *** Joins: Deide (~Deide@user/deide)
[20:56:19] *** niko is now known as o
[20:57:09] *** Joins: onosendi (~onosendi@user/onosendi)
[20:57:13] *** Quits: Haren4E (~Haren4E@186.6.139.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:57:30] *** Quits: dunkeln_ (~dunkeln@188.70.10.165) (Ping timeout: 268 seconds)
[20:57:51] *** Joins: xse_ (~xse@user/xse)
[21:00:36] *** Joins: Vooloo (~Vooloo@195-252-44-117-no2400.tbcn.telia.com)
[21:01:37] *** Quits: onosendi (~onosendi@user/onosendi) (Ping timeout: 256 seconds)
[21:01:46] *** Quits: xse (~xse@user/xse) (Ping timeout: 272 seconds)
[21:05:12] *** Joins: summersault (~summersau@179.221.251.16)
[21:05:52] *** CoJaBo is now known as CoJaBo-gone2lib3
[21:05:58] *** CoJaBo-gone2lib3 is now known as CoJaBo
[21:07:45] *** Joins: dunkeln (~dunkeln@188.70.10.165)
[21:09:26] *** Joins: xse__ (~xse@user/xse)
[21:10:13] *** Quits: jonifen (~jonifen@user/jonifen) (Quit: Leaving)
[21:11:41] *** Quits: Crassus (~Crassus@user/crassus) (Ping timeout: 268 seconds)
[21:12:41] *** Joins: pavonia (~user@user/siracusa)
[21:12:59] *** Joins: Rockwood (~Rocky@user/rocky)
[21:13:06] *** Quits: xse_ (~xse@user/xse) (Ping timeout: 265 seconds)
[21:13:56] *** Joins: onosendi (~onosendi@user/onosendi)
[21:17:00] *** Joins: Heraes (~Heraes@119.12.203.77.rev.sfr.net)
[21:17:00] *** Quits: Heraes (~Heraes@119.12.203.77.rev.sfr.net) (Changing host)
[21:17:00] *** Joins: Heraes (~Heraes@user/romarain)
[21:18:52] *** Quits: onosendi (~onosendi@user/onosendi) (Ping timeout: 272 seconds)
[21:27:13] *** Quits: Heraes (~Heraes@user/romarain) (Quit: Leaving)
[21:27:16] *** Joins: onosendi (~onosendi@user/onosendi)
[21:28:42] *** Quits: chonkbit (~chonkbit@2600:1700:2150:1d40:86c5:a6ff:fe3b:ae7a) (Ping timeout: 240 seconds)
[21:28:46] *** Quits: Doraemon (~NeoCron@ip4-45-158-175-19.dyn.netcomnetz.de) (Remote host closed the connection)
[21:34:06] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[21:36:08] *** Quits: johtso (~johtso@37.120.143.90) (Quit: Client closed)
[21:38:37] *** Joins: johtso (~johtso@37.120.143.90)
[21:39:35] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Quit: Must not waste too much time here...)
[21:42:26] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[21:44:40] *** Joins: Betal (~Beta@user/betal)
[21:45:19] *** Quits: rifl```` (~user@user/rifl) (Remote host closed the connection)
[21:49:08] *** Quits: jamea (~jamea77@189.231.126.229) (Ping timeout: 252 seconds)
[21:58:31] *** Joins: SebastianM (~seba@user/sebastianm)
[22:02:15] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[22:06:22] *** Joins: han-solo (~hanish@user/han-solo)
[22:07:11] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 268 seconds)
[22:13:00] *** Joins: zzz (~yin@user/yin)
[22:14:12] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.1)
[22:17:41] <zzz> so i just found out that setTimeout() only accepts 32bit signed ints, so up to 2**31 milliseconds, excluding. i just made this wrapper: https://paste.jrvieira.com/1625248048382
[22:19:44] <zzz> how ridiculous is this?
[22:20:22] <entuland> quite a bit
[22:21:25] *** Joins: chonkbit (~chonkbit@2600:1700:2150:1d40:86c5:a6ff:fe3b:ae7a)
[22:21:26] <entuland> but hey, before you could only say "your page has been running for 24 days", now you can warn people beyond one full month
[22:22:29] <han-solo> :D
[22:22:52] *** ktwo__ is now known as ktwo
[22:23:55] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[22:26:15] <Donitz> do sets have an internal capacity
[22:26:53] <Donitz> if I fill a set with 1 million elements and clear it over and over, does it keep changing size in memory
[22:29:35] <ljharb> the language has no concept of memory
[22:29:42] <ljharb> each individual implementation decides its own limits there
[22:30:01] <ljharb> and you have zero guarantees that won't change from version to version, or based on heuristics you can't control
[22:30:10] <ljharb> zzz: not?
[22:30:29] <ljharb> zzz: a number of APIs in JS and the web only work on 32-bit signed ints
[22:30:34] <ljharb> zzz: also, bitwise operations
[22:31:28] <ljharb> zzz: why are you using setTimeout for something more than 24 days out?? your process shouldn't rely on sitting around that long
[22:32:08] <Donitz> maybe not memory
[22:32:13] <Donitz> but the concept of capacity probably exists
[22:32:17] <Donitz> oh well
[22:32:24] <Donitz> it's not exposed and depends on implementation
[22:33:29] <ljharb> it does not exist in the language, and yes, as you said
[22:34:12] *** Joins: Haren4E (~Haren4E@186.6.139.76)
[22:34:16] <Donitz> I see no reason why capacity would not exist internally
[22:34:21] <Donitz> would be downright strange if it didn't
[22:34:21] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:f4a7:4437:c45b:fd73)
[22:34:51] <zzz> ljharb: it's a stupid telegram bot made for a group of friends
[22:34:52] <ljharb> in the implementation, of course it does
[22:34:55] <ljharb> but not in the language
[22:35:05] <ljharb> zzz: sure but you expect it to stay running that long?
[22:35:19] <ljharb> zzz: when its memory is filling with weeks-long setTimeouts?
[22:35:35] <zzz> yes before today it has been running for over a year
[22:35:38] <ljharb> Donitz: eg, in the language, strings can be of infinite length
[22:35:47] <Donitz> https://vigneshsrao.github.io/posts/play-with-spidermonkey/
[22:35:47] <Donitz> hmm
[22:36:10] <wintersky> stop spying on me
[22:37:28] <zzz> ljharb: my function only creates a timeout after clearing the previous. it's equivalent to having only one timeout per call, right?
[22:37:44] <ljharb> zzz: so there's only one reminder for the entire app? or one per person
[22:37:51] <ljharb> zzz: i agree your wrapper is fine
[22:38:49] <zzz> people say /remind 10d 5h 12m or whatver and the bot reminds that person at the target time
[22:38:59] <ljharb> and can i have multiple reminders?
[22:39:05] *** Quits: chonkbit (~chonkbit@2600:1700:2150:1d40:86c5:a6ff:fe3b:ae7a) (Ping timeout: 256 seconds)
[22:39:14] <zzz> yes, but we are not spamming the bot with reminders :D
[22:39:20] <ljharb> lol k
[22:39:28] <zzz> i expect the app to handle a much larger limit that we need
[22:39:40] <zzz> *than
[22:40:46] <entuland> there is an important limitation in your setReminder() function, zzz, you can't cancel it (but you can cancel a timeout if you keep track of the ID)
[22:40:48] <zzz> of course i should store a timestamp and check periodically if it's time for reminder instead, but it's friday and im watchiing the game
[22:42:07] *** Joins: FabioP (~fabio@151.24.113.98)
[22:42:14] <zzz> entuland: yup i know, not important. also there was a bug but i corrected it. the setTimeout should be 2**31-1, not 2**31
[22:42:33] <entuland> aye, I guessed the cancel feature wasn't important
[22:44:15] *** Quits: SebastianM (~seba@user/sebastianm) (Quit: Bye)
[22:46:49] *** Joins: Lope (~lope@user/lope)
[22:46:52] *** Quits: mei (~mei@user/mei) (Quit: Client closed)
[22:49:48] *** Joins: mei (~mei@user/mei)
[22:59:45] *** Joins: lilmonkey`` (~lilmonkey@user/lilmonkey)
[23:01:03] <Donitz> can a ES6 class be created without object as prototype?
[23:02:18] <systemfault> n> class Foo extends null {} Object.getPrototypeOf(new Foo())
[23:02:19] <jellobot> (fail) TypeError: Super constructor null of Foo is not a constructor
[23:02:25] <systemfault> Hmm
[23:02:43] <Donitz> hmm
[23:02:49] <Donitz> I guess not
[23:02:51] *** Joins: Celeo (~Celeo@user/celeo)
[23:03:22] *** Quits: lilmonkey` (~lilmonkey@user/lilmonkey) (Ping timeout: 272 seconds)
[23:03:38] <Donitz> n> class Blah {}; Blah.prototype = null;
[23:03:39] <jellobot> (okay) null
[23:03:47] <Donitz> n> class Blah {}; Blah.prototype = null; new Blah().toString();
[23:03:49] <jellobot> (okay) '[object Object]'
[23:04:29] <GreenJello> n> class Null {}; Object.setPrototypeOf(Null.prototype, null); class C extends Null { }; new C().hasOwnProperty
[23:04:30] <jellobot> (okay) undefined
[23:04:48] <Donitz> ah
[23:05:32] <Donitz> why prototype of Null.prototype?
[23:06:17] *** Parts: wintersky (uid453465@id-453465.brockwell.irccloud.com) ()
[23:07:16] <GreenJello> I guess you could just do Null.prototype = null
[23:07:36] <Donitz> n> class Blah {}; Blah.prototype = null; new Blah().toString();
[23:07:37] <jellobot> (okay) '[object Object]'
[23:07:39] <Donitz> didn't work
[23:08:03] <GreenJello> oh, hmm
[23:08:09] <ljharb> Donitz: you’re supposed to be able to extends null, but it’s broken and we don’t know how to fix it yet
[23:08:21] <Donitz> ah. Well if its unreliable, better not
[23:08:31] <farn> Donitz: Null.prototype, not Blah.prototype
[23:08:59] <Donitz> though ljharb would not at all agree with what I was going to do
[23:09:24] <Donitz> you know
[23:09:49] <ljharb> lol making your options object?
[23:09:56] <Donitz> hah, yeah
[23:10:06] <Donitz> Well, Utility.getOption(options, name, default) will have to do
[23:10:54] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:e4c1:6db1:76db:ec36)
[23:11:09] <ljharb> you already know all the ways this is a terrible approach ¯\_(ツ)_/¯
[23:11:21] <ljharb> but in general yeah you should be able to class extends null, it sucks that you can't
[23:11:23] <Donitz> I mean, it wouldn't be if it didn't have the object prototype
[23:11:29] <ljharb> it still would be
[23:11:33] <ljharb> just use a regular object
[23:11:46] <Donitz> would be easier with option.get instead of importing another module each time I need it
[23:11:59] <Donitz> plus I wouldn't have to keep remembering to using Object.create(null for options
[23:12:17] <Donitz> as it would be implicit in new Options
[23:12:19] <Donitz> eh, whatevs
[23:12:36] *** Joins: onosendi (~onosendi@user/onosendi)
[23:12:43] <ljharb> n> class C extends null { constructor() { const o = Object.create(null); Object.setPrototype(o, C.prototype); return o; } } Object.setPrototype(C.prototype, null); new C() instanceof Object @ Donitz
[23:12:44] <jellobot> Donitz, TypeError: Object.setPrototype is not a function
[23:12:50] <ljharb> n> class C extends null { constructor() { const o = Object.create(null); Object.setPrototypeOf(o, C.prototype); return o; } } Object.setPrototypeOf(C.prototype, null); new C() instanceof Object @ Donitz
[23:12:51] <jellobot> Donitz, false
[23:12:53] <ljharb> there we go
[23:13:47] <ljharb> n> class C extends null { x() {} constructor() { const o = Object.create(null); Object.setPrototypeOf(o, C.prototype); return o; } } Object.setPrototypeOf(C.prototype, null); var c = new C(); [c instanceof Object, Object.getPrototypeOf(c) === C.prototype, typeof c.x, c instanceof C]
[23:13:48] <jellobot> (okay) [ false, true, 'function', true ]
[23:13:50] <ljharb> checks out
[23:14:08] <ljharb> n> class C extends null { x() {} constructor() { const o = Object.create(null); Object.setPrototypeOf(o, C.prototype); return o; } } Object.setPrototypeOf(C.prototype, null); var c = new C(); [c instanceof Object, Object.getPrototypeOf(c) === C.prototype, typeof c.x, c instanceof C, c.constructor]
[23:14:10] <jellobot> (okay) [ false, true, 'function', true, [class C] ]
[23:14:23] <ljharb> Donitz: there you go ^ go make your eldritch horror
[23:14:44] <Donitz> ah, thank you. I will probably keep using the Utility method if you think this is a bad idea
[23:14:48] <Donitz> if null is unreliable
[23:15:02] <ljharb> i mean, the bad idea is "not using regular objects"
[23:15:10] <Donitz> without a prototype
[23:15:19] <ljharb> you can use a null object for that
[23:15:28] <ljharb> using a class, with or without a null prototype, is equally bad
[23:15:45] <Donitz> probably. Not sure what the implications could be in the future for that
[23:15:52] <Donitz> what nonsense classes get
[23:16:01] <ljharb> they get .constructor by default
[23:16:06] <ljharb> but i think that's it
[23:16:38] <ljharb> in general tho it's just not a useful pattern. options are best and simplest when they're a flat object.
[23:16:59] <Donitz> regards the utility method for getting an option. I find it to be useful to console.debug log if you try to use the same default value as the option value
[23:17:01] <ljharb> and having a null prototype only really matters if the Object.prototype builtins are viable option names, which they almost never are
[23:17:02] <Donitz> it makes it easy to clean up code
[23:17:19] <Donitz> regarding*
[23:17:22] <ljharb> is that really a frequent problem you have?
[23:17:26] <Donitz> yes
[23:17:31] <Donitz> you can remove a lot of unneccesary properties
[23:17:39] <ljharb> you have that many options, i mean
[23:17:56] <Donitz> not that many, but keeping track of defaults can be a bit hard
[23:18:00] <ljharb> (also, imo it's a good practice to always explicitly specify the defaults - that way you're protected against them changing)
[23:18:10] <Donitz> sometimes there simply can not be a default
[23:18:14] <Donitz> when something MUST be set
[23:18:17] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 265 seconds)
[23:18:23] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[23:18:28] <ljharb> right but i mean, i try to treat every option as required
[23:20:04] <Donitz> I use too many options than I really need
[23:20:12] <Donitz> usually I just leave most of them on default :P
[23:20:17] <Donitz> but I like having them tere
[23:20:19] <Donitz> there*
[23:26:00] *** Quits: n00b101 (uid448161@id-448161.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[23:26:31] *** Quits: edk (edk@libera/staff/edk) (Read error: Connection reset by peer)
[23:29:13] *** Joins: federico_it (~textual@151.51.82.235)
[23:31:52] *** Quits: lilmonkey`` (~lilmonkey@user/lilmonkey) (Ping timeout: 272 seconds)
[23:32:50] *** Joins: edk (edk@libera/staff/edk)
[23:35:45] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 256 seconds)
[23:37:44] *** Joins: lilmonkey`` (~lilmonkey@user/lilmonkey)
[23:38:01] *** Joins: keypusher (keypusher@user/keypusher)
[23:39:33] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Ping timeout: 265 seconds)
[23:41:45] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[23:42:35] *** Joins: ninjabanjo_ (~ninjabanj@107.150.45.163)
[23:42:45] *** Quits: jess (~jess@libera/staff/jess) ()
[23:43:28] *** Quits: ninjabanjo (~ninjabanj@107.150.45.163) (Read error: Connection reset by peer)
[23:45:35] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[23:45:57] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 256 seconds)
[23:51:00] *** Joins: jamea (~jamea77@10.189-202-213.bestelclientes.com.mx)
[23:57:20] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
