[00:00:03] *** Joins: rond_ (~rond_@90.254.208.190)
[00:00:45] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:906:2a58:dc2c:ac0e)
[00:00:53] *** Quits: DangerWabbit (~DangerWab@217.146.83.146) (Ping timeout: 256 seconds)
[00:00:59] *** Quits: schumaml (~schumaml@p200300e2ef02330053c1821a43d17d29.dip0.t-ipconnect.de) (Quit: WeeChat 3.4)
[00:01:15] *** Joins: LordVan (~lordvan@gentoo/developer/lordvan)
[00:01:56] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[00:02:17] *** Quits: amo (~amogorkon@user/amogorkon) (Ping timeout: 250 seconds)
[00:02:31] *** Joins: PaterTemporalis (~woooopsie@dsl-79-30.bl27.telepac.pt)
[00:02:31] *** Quits: amogorkon (~amogorkon@user/amogorkon) (Ping timeout: 250 seconds)
[00:03:45] *** Joins: Jonopoly (~Jonopoly@user/jonopoly)
[00:03:49] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[00:04:43] *** Joins: Oddity (~Oddity@user/oddity)
[00:05:33] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[00:05:56] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:7b0d:2ec5:6e99:1987) (Quit: pvergain)
[00:05:58] *** Joins: c4017w__ (~c4017@209.52.68.8)
[00:07:18] *** Quits: paul424 (~tom@ip-5-172-237-23.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[00:07:43] *** Joins: parv (~quass@user/parv)
[00:08:18] <zamba> what is it called when you map certain control characters to their corresponding keyboard key value?
[00:08:24] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:e06e:9350:6765:d579) (Quit: Textual IRC Client: www.textualapp.com)
[00:08:38] *** Joins: waxfire (~waxfire@65.119.2.240)
[00:08:46] <zamba> for instance i have the following: 30: 1, 31: 2, 32: 3, 33: 4, 34: 5, 35: 6, 36: 7, 37: 8, 38: 9, 39: 0
[00:09:00] <zamba> it's a blast from the 90s.. i believe we used to rely on stuff like that then
[00:09:12] <zamba> keycode? keymap?
[00:09:18] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[00:11:23] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-855f-50e7-28b4-6a40.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[00:11:48] *** Quits: yacatuco (~yacatuco@188.127.182.162) (Quit: Leaving)
[00:12:30] *** Quits: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:13:23] *** Joins: tj123_ (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[00:13:26] *** Quits: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[00:15:55] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[00:16:20] *** Quits: Enitin (~Enitin@5.180.62.230) (Ping timeout: 252 seconds)
[00:17:11] *** Quits: rond_ (~rond_@90.254.208.190) (Quit: Client closed)
[00:18:49] *** Joins: ttree (~ttree0@c-24-17-16-242.hsd1.wa.comcast.net)
[00:19:31] *** Quits: xaxas (~quassel@aurata.jtopia.org) (Quit: Leaving)
[00:19:33] *** Joins: Enitin (~Enitin@5.180.62.230)
[00:19:34] *** Quits: ivii (~ivan@user/ivii) (Ping timeout: 260 seconds)
[00:19:37] *** Quits: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:e514:4282:7ac7:5ad8) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[00:19:55] *** Joins: xaxas (~quassel@aurata.jtopia.org)
[00:20:11] *** Joins: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:e514:4282:7ac7:5ad8)
[00:20:30] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[00:21:58] *** Joins: jpn (~jpn@user/jpn)
[00:22:06] *** Quits: jpn (~jpn@user/jpn) (Client Quit)
[00:22:38] *** Joins: Guts71 (~Guts71@41.104.23.185)
[00:24:07] *** Quits: wattux (~wattux@2a02:238:f014:472:254a:a07f:d097:49ec) (Ping timeout: 256 seconds)
[00:24:59] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[00:25:07] *** Joins: korg815 (~korg815@user/korg815)
[00:25:50] <pragmaticenigma> zamba: most commonly, I believe they're referred to as key codes... though usually written as 0x30, 0x31 as they are usually hexadecimal values provided by the keyboard controller
[00:25:51] *** Joins: bahamas (~lucian@84.232.140.158)
[00:27:02] *** Quits: Msandoy (~Msandoy@telia-590832-38.connect.netcom.no) (Read error: Connection reset by peer)
[00:28:05] *** Quits: magla (~gelignite@55d44736.access.ecotel.net) (Quit: Stay safe!)
[00:28:07] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:39fe:6a9b:6533:77e)
[00:28:15] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[00:28:19] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:39fe:6a9b:6533:77e) (Client Quit)
[00:28:24] *** Joins: daedw (~daedw@cpe-172-113-121-232.socal.res.rr.com)
[00:28:40] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:39fe:6a9b:6533:77e)
[00:29:01] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[00:29:35] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[00:29:41] *** Joins: fling (~fling@user/fling)
[00:30:15] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[00:30:42] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 268 seconds)
[00:31:29] *** Quits: Guts71 (~Guts71@41.104.23.185) (Ping timeout: 256 seconds)
[00:32:00] *** Quits: LWAI (~lwai@168.70.90.61) (Remote host closed the connection)
[00:32:38] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 260 seconds)
[00:33:55] *** Quits: TheCat (~TheCat@user/z-cat) (Ping timeout: 250 seconds)
[00:34:12] *** Quits: enyc_ (~enyc@user/enyc) (Ping timeout: 240 seconds)
[00:34:20] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[00:34:47] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[00:35:10] *** Joins: jpn (~jpn@user/jpn)
[00:35:35] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 240 seconds)
[00:35:37] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 240 seconds)
[00:35:43] *** Quits: MasterK (~MK@86.126.51.228) (Remote host closed the connection)
[00:36:38] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[00:36:49] *** Joins: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[00:36:53] *** Joins: DangerWabbit (~DangerWab@109.70.150.164)
[00:37:17] *** Quits: cassepipe_ (~cassepipe@amontsouris-654-1-97-220.w90-44.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[00:37:52] *** Quits: naranja (~orange@user/orangeboxcutter) (Changing host)
[00:37:52] *** Joins: naranja (~orange@gateway/tor-sasl/orangeboxcutter)
[00:38:03] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:ddcf:4aad:3c6:b791) (Ping timeout: 256 seconds)
[00:38:14] *** Joins: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[00:38:16] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[00:38:19] *** Joins: cassepipe_ (~cassepipe@amontsouris-654-1-97-220.w90-44.abo.wanadoo.fr)
[00:38:40] *** Joins: enyc (~enyc@user/enyc)
[00:38:40] *** Quits: cassepipe_ (~cassepipe@amontsouris-654-1-97-220.w90-44.abo.wanadoo.fr) (Client Quit)
[00:39:56] *** naranja is now known as orangeboxcutter
[00:39:57] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[00:40:15] *** Joins: Viewday115 (~Viewday@user/viewday)
[00:40:17] *** Quits: leshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Ping timeout: 240 seconds)
[00:41:29] *** Joins: doubletwist (~doubletwi@user/doubletwist)
[00:41:57] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[00:43:03] *** Joins: plastico (~plastico@neomutt/plastico)
[00:43:05] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[00:45:30] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 252 seconds)
[00:45:43] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[00:46:02] *** Joins: icsdi (~icsdi@net-5-94-129-68.cust.vodafonedsl.it)
[00:46:03] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 250 seconds)
[00:46:15] *** Quits: icsdi (~icsdi@net-5-94-129-68.cust.vodafonedsl.it) (Client Quit)
[00:46:51] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[00:47:03] *** Joins: lalitmee (~lalitmee@180.94.33.114)
[00:47:50] *** Joins: Xardas (~Xardas@149.233.51.127)
[00:47:51] *** Quits: orangeboxcutter (~orange@gateway/tor-sasl/orangeboxcutter) (Quit: AFK)
[00:48:09] *** Joins: naranja_ (~orange@gateway/tor-sasl/orangeboxcutter)
[00:50:46] *** Quits: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net) (Ping timeout: 245 seconds)
[00:51:54] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:52:06] *** kostkon_ is now known as kostkon
[00:52:52] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[00:54:01] *** Parts: doubletwist (~doubletwi@user/doubletwist) ()
[00:54:13] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[00:54:27] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[00:54:41] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[00:54:45] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[00:54:48] *** Joins: caliave (~caliave@2600:1700:eda0:1ae0:60b2:3a96:2962:6a9d)
[00:55:22] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[00:55:23] *** Quits: marcello42 (~mp@p5084bed4.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[00:55:37] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[00:55:58] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 260 seconds)
[00:56:11] *** Joins: marcello42 (~mp@p5084bed4.dip0.t-ipconnect.de)
[00:56:45] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[00:56:50] *** Quits: naranja_ (~orange@gateway/tor-sasl/orangeboxcutter) (Quit: AFK)
[00:57:39] *** Joins: naranja (~naranja@gateway/tor-sasl/orangeboxcutter)
[00:57:53] *** Joins: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net)
[00:58:31] *** Parts: caliave (~caliave@2600:1700:eda0:1ae0:60b2:3a96:2962:6a9d) (WeeChat 2.8)
[00:58:55] *** Quits: aslicedbanjo (~aslicedba@host31-48-144-107.range31-48.btcentralplus.com) (Read error: Connection reset by peer)
[00:58:57] *** Quits: naranja (~naranja@gateway/tor-sasl/orangeboxcutter) (Client Quit)
[00:59:07] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[00:59:13] *** Quits: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt) (Quit: leaving)
[00:59:21] *** Joins: aslicedbanjo (~aslicedba@host31-48-144-107.range31-48.btcentralplus.com)
[01:00:01] *** Quits: tup (~tup@cpc84029-pool15-2-0-cust183.15-1.cable.virginm.net) (Quit: Leaving)
[01:00:23] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[01:00:32] *** Quits: WantToHe1p (~WantToHel@user/wanttohelp) (Ping timeout: 272 seconds)
[01:01:01] *** Quits: Enitin (~Enitin@5.180.62.230) (Ping timeout: 240 seconds)
[01:01:10] *** Joins: Enitin (~Enitin@5.180.62.230)
[01:01:26] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[01:04:19] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[01:04:28] <zamba> pragmaticenigma: do you know of a library to convert that?
[01:04:36] <zamba> short of having to implement it myself
[01:05:45] *** Quits: Myst3 (~Myst@user/myst) (Quit: Bye!)
[01:05:59] <pragmaticenigma> zamba: Why are you looking at keycodes exactly? there are lots of libraries, but it all depends on what you're trying to do
[01:06:22] *** Joins: icsdi (~icsdi@net-5-94-129-68.cust.vodafonedsl.it)
[01:06:27] *** Joins: c4017w_ (~c4017@209.52.68.8)
[01:06:30] *** Joins: Nivlac (~gabriel@179.105.178.29)
[01:07:01] <zamba> pragmaticenigma: i'm writing some code to read magnetic cards from a reader
[01:07:10] <zamba> which emulates a keyboard
[01:07:20] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Quit: CodePoint struts into the sunset on the beach.)
[01:08:05] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[01:08:07] *** Joins: Myst3 (~Myst@user/myst)
[01:08:08] <pragmaticenigma> zamba: that should all be handled by the OS... I've worked with those devices, the OS should see that as a HID/Keyboard. You just need to provide a place to put the capture
[01:08:34] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[01:08:41] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[01:09:35] <zamba> pragmaticenigma: yes, but the problem is that i'm running with a norwegian keyboard layout
[01:09:42] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[01:09:56] <zamba> pragmaticenigma: so the magnetic card information is interpreted as such
[01:10:40] *** Quits: marcello42 (~mp@p5084bed4.dip0.t-ipconnect.de) (Quit: WeeChat 3.4)
[01:10:44] <zamba> so i'm converting from norwegian to english and then swiping the card and then mapping it in the code
[01:11:10] <zamba> it works, but there could be odd characters i haven't picked up.. and i rather pick it up now instead of after i'm in production
[01:11:51] *** Joins: cdown (~cdown@cpe-98-15-154-102.hvc.res.rr.com)
[01:12:21] *** Quits: icsdi (~icsdi@net-5-94-129-68.cust.vodafonedsl.it) (Quit: Leaving)
[01:12:28] <pragmaticenigma> zamba: there's no need to translate it. What you see on the screen is not what is in the datastream. The OS is translating the ASCII character codes to your local language setting.
[01:12:51] <zamba> pragmaticenigma: i know.. but i need to translate this in my code
[01:13:02] <pragmaticenigma> I'm saying you don't
[01:13:08] <zamba> pragmaticenigma: ok? :)
[01:13:25] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[01:13:28] <zamba> so this is readable: https://bpa.st/KXYA ?
[01:13:38] <zamba> that's the "raw" output
[01:14:06] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[01:14:06] <pragmaticenigma> You're all the way down into the hardware layer I assume?
[01:14:19] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 256 seconds)
[01:14:22] <ali1234> those look like HID reports
[01:14:33] <zamba> do you know of a python library that hooks into magnetic card readers?
[01:14:37] <zamba> ali1234: correct
[01:14:51] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[01:14:54] <ali1234> then maybe this helps: https://pypi.org/project/hid/
[01:14:58] <pragmaticenigma> zamba: I'm saying again, you don't need one... treat the input as if it was coming from a keyboard...
[01:15:15] <ali1234> although it is probably linux only
[01:15:16] *** Joins: KnowledgeShark (~Knowledge@50.34.198.222)
[01:15:27] <pragmaticenigma> I've worked with those devices for over 20 years... never needed a library to work with the swipe data
[01:15:31] *** Joins: djhankb (~djhankb@208.113.164.68)
[01:15:44] *** Joins: icsdi (~icsdi@net-5-94-129-68.cust.vodafonedsl.it)
[01:15:49] <ali1234> you don't need low level access if you are using the device as intended, but not everybody is doing that
[01:15:55] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 240 seconds)
[01:16:01] <zamba> pragmaticenigma: ok, but which library should i be using?
[01:16:04] *** Joins: mug3n_ (~mugen@gateway/tor-sasl/mugen)
[01:16:15] <pragmaticenigma> zamba: None
[01:16:36] *** Quits: zenstoic (uid461840@id-461840.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[01:16:39] <zamba> https://bpa.st/CIXQ
[01:16:43] <zamba> pragmaticenigma: ok, you make no sense
[01:16:48] <ali1234> what do you actually want to do?
[01:16:57] <zamba> pragmaticenigma: i need to be able to "hook into" the usb device somehow
[01:17:09] <zamba> if not, then the output is just printed directly on screen
[01:17:20] *** Joins: hyiltiz (~quassel@31.220.5.250)
[01:17:34] <ali1234> the hid library i linked above is the appropriate thing for that if you are using linux
[01:17:39] <ali1234> don't try to do raw USB
[01:17:41] *** Quits: lalitmee (~lalitmee@180.94.33.114) (Remote host closed the connection)
[01:17:41] <zamba> and i can't let this be handled as keyboard input, because the data will be different if i have my keyboard set to english vs norwegian layout
[01:17:51] <ali1234> HID is a layer above that and raw USB will just make it 100x more complicated
[01:17:53] *** Joins: Xano_ (~Xano@143.244.41.77)
[01:17:56] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[01:18:05] <zamba> ali1234: i attempted using HID.. but that was futile
[01:18:06] <pragmaticenigma> zamba: that is incorrect... the keyboard and displayed languages are two entirely different things
[01:18:09] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[01:18:11] *** Quits: aslicedbanjo (~aslicedba@host31-48-144-107.range31-48.btcentralplus.com) (Quit: Leaving.)
[01:18:17] <zamba> ali1234: it has a .read(), but i have no idea how much to read
[01:18:21] <zamba> ali1234: so it just broke down
[01:18:30] *** Quits: Nivlac (~gabriel@179.105.178.29) (Quit: leaving)
[01:18:36] *** Quits: mug3n (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 240 seconds)
[01:18:46] <pragmaticenigma> zamba: go the command line  and use the >>> val = input("Swipe card here: ")
[01:18:51] <ali1234> well yes, you have to examine the HID descriptors to find out how much to read
[01:18:54] <ali1234> that is what they are for
[01:19:05] <zamba> ali1234: any idea how to do that?
[01:19:25] *** Quits: Enitin (~Enitin@5.180.62.230) (Ping timeout: 268 seconds)
[01:19:29] <ali1234> yes, but it is complicated
[01:19:44] <zamba> ali1234: exactly.. and that's exactly why it's easier to just do raw usb instead :)
[01:19:46] <ali1234> you have to get the descriptors and parse them. they are effectively a struct declaration
[01:19:57] <zamba> pragmaticenigma: you're missing he point
[01:20:03] <ali1234> raw USB just gives you the same data but with an additional layer of wrapping
[01:20:21] <zamba> pragmaticenigma: that means that i have to have the python script in focus all the time.. this should work in the background
[01:20:36] *** Joins: sagax (~sagax_nb@user/sagax)
[01:20:45] <pragmaticenigma> well ... for starters... you didn't state that... so you know.. .important details are missing here for context
[01:21:05] *** Quits: icsdi (~icsdi@net-5-94-129-68.cust.vodafonedsl.it) (Quit: Leaving)
[01:21:15] *** Quits: Xano (~Xano@2a00:23c4:4204:700:6e4f:895e:2b9e:c094) (Ping timeout: 252 seconds)
[01:21:22] <ali1234> anyway HID descriptors are essentially struct declarations
[01:21:25] <zamba> pragmaticenigma: and i just attempted what you said.. didn't work.. since my keyboard layout is set to norwegian, some of the special characters are "translated" into norwegian
[01:21:40] *** Quits: greedom (~greedom@p200300de674e4000732a5aa4c48760a6.dip0.t-ipconnect.de) (Remote host closed the connection)
[01:21:48] <ali1234> a list of fields, with the size of each field, and a nominal tag indicating what it is "supposed" to mean
[01:22:20] <ali1234> for devices that act like keyboards this will be fairly standard, but it is also possible to make crazy devices that defy categorization and often those lie about what the reports mean
[01:22:35] <ali1234> for those you just have to experiment and figure it out
[01:22:47] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[01:23:01] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:23:07] *** Joins: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt)
[01:23:11] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[01:23:13] <zamba> pragmaticenigma: https://bpa.st/EE6A
[01:23:20] <zamba> pragmaticenigma: this is what happens..
[01:23:27] <zamba> the first one is just wrong
[01:23:27] <ali1234> you will also need to unbind the device at kernel level before you can use it through HID
[01:23:32] *** Joins: bitkiller (~bitkiller@user/bitkiller)
[01:23:35] <zamba> ali1234: yeah, i got that part working
[01:24:05] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[01:24:10] *** Joins: Mat1010 (~Mat1010@168.181.209.34)
[01:24:51] <pragmaticenigma> zamba: I see the exact layout for both... and if that's a credit card, I recommend you delete that paste and cancel the account
[01:26:04] <zamba> pragmaticenigma: i obfuscated it :)
[01:26:12] *** Joins: wakeup (~wakeup@user/wakeup)
[01:26:25] *** Joins: bart__ (~Xano@2a00:23c4:4204:700:2334:ca84:dd46:fe85)
[01:26:44] <zamba> pragmaticenigma: but what do you mean by that you see the exact layout for both?
[01:26:45] <ali1234> to start with i like to use a website like this to parse the descriptors to make sure i'm going in the right direction: https://eleccelerator.com/usbdescreqparser/
[01:26:57] *** Joins: Enitin (~Enitin@5.180.62.232)
[01:27:43] <ali1234> the USB HID layer is unfortunately a giant mess
[01:27:53] <ali1234> they had this idea that they would be able to codify any type of interface
[01:28:10] <ali1234> so the spec is like 3000 pages
[01:28:23] <zamba> ali1234: well, i'd love to use HID for this, but unfortunately the library you linked to is very undocumented.. so i'm not getting anywhere
[01:28:31] <ali1234> and it a) failed to account for every possible interface and b) was so complicated that nobody uses it properly anyway
[01:28:42] <zamba> and that thing you just pasted? what's that for?
[01:28:45] <ali1234> the library is undocumented because it is just a wrapper around an existing interface
[01:28:56] *** Quits: wolfshappen (~waff@irc.furworks.de) (Quit: later)
[01:29:00] <ali1234> for the documentation of that interface, check the kernel docs and the HID spec (but it is 3000 pages)
[01:29:22] <zamba> i see there's something called get_feature_report(), but it wants a report_id and size
[01:29:24] <ali1234> the last link i pasted is a HID descriptor decoder
[01:29:25] <zamba> and i have no idea
[01:29:34] *** Quits: Xano_ (~Xano@143.244.41.77) (Ping timeout: 260 seconds)
[01:29:37] *** Quits: w4ld0 (w4ld0@gateway/vpn/protonvpn/w4ld0) (Ping timeout: 250 seconds)
[01:29:43] <zamba> well.. do you expect me to read 3000 pages or just hook into the raw usb? :)
[01:29:47] <ali1234> you get the descriptors, decode them, and it tells you what report numbers are available and the sizes of them
[01:29:47] *** Joins: wolfshappen (~waff@irc.furworks.de)
[01:30:03] <ali1234> when you use raw USB you get the same data
[01:30:08] <pragmaticenigma> zamba: For starters here, Python isn't the best language for this approach. Those USB card readers are really crappy (and against PCI/VISA/MasterCard regulations). When I've worked with them, it's been a frontend interface to which I just "hide" a user input off the viewport that gets focus when it comes time to swipe a card. From there, the values go straight to the card processor.
[01:30:29] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::4) (Quit: Leaving)
[01:30:32] *** Quits: LordVan (~lordvan@gentoo/developer/lordvan) (Remote host closed the connection)
[01:30:41] *** Quits: bart__ (~Xano@2a00:23c4:4204:700:2334:ca84:dd46:fe85) (Ping timeout: 250 seconds)
[01:30:52] <zamba> pragmaticenigma: that may be.. but i've gotten a working implementation in python.. and it's working perfectly
[01:31:02] <ali1234> HID is part of the USB standard, so if you want to use raw USB you'll not only have to read 3000 pages of HID spec, but also an additional 3000 pages of USB spec
[01:31:09] <pragmaticenigma> zamba: if it is working perfectly... why are you here?
[01:31:19] *** Quits: parv (~quass@user/parv) (Ping timeout: 256 seconds)
[01:31:22] <zamba> pragmaticenigma: because i'm looking for a complete key page "conversion table"
[01:31:38] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[01:31:39] <zamba> https://bpa.st/CIXQ
[01:31:44] <zamba> see that code ^
[01:31:51] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[01:31:55] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[01:31:59] <zamba> that's what i've mapped out so far
[01:32:23] <ali1234> like this? https://gist.github.com/MightyPork/6da26e382a7ad91b5496ee55fdc73db2
[01:33:21] <zamba> ali1234: yeah, that looks like it :)
[01:33:23] <zamba> thanks!
[01:33:29] *** Joins: Thanatos (~Thanatos@105.112.30.185)
[01:33:40] <zamba> scan codes, yes
[01:33:46] *** Joins: fling (~fling@user/fling)
[01:34:02] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Quit: WeeChat 3.4.1)
[01:34:06] <ali1234> ultimately that information comes from here: https://www.usb.org/sites/default/files/documents/hut1_12v2.pdf
[01:34:30] <zamba> seems like the usb raw device is outputting this as decimal
[01:34:47] <ali1234> usb transmits bytes
[01:34:48] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[01:35:11] <ali1234> although USB does often used BCD
[01:35:21] <ali1234> usually not for stuff like this though
[01:35:40] <zamba> array('B', [0, 0, 51, 0, 0, 0, 0, 0])
[01:35:49] <zamba> index 2 is 51
[01:35:54] *** Joins: dsrt^ (~dsrt@96-67-120-105-static.hfc.comcastbusiness.net)
[01:35:56] <ali1234> well yeah when python prints values it will use decimal by default
[01:36:03] <zamba> so that's 0x33
[01:36:17] <zamba> and ';'
[01:36:25] <ali1234> "array('B', [0, 0, 51, 0, 0, 0, 0, 0])" is a repr string, it is not the transmitted data
[01:36:25] <zamba> but cool.. this is what i need
[01:36:27] *** Joins: LordVan (~lordvan@gentoo/developer/lordvan)
[01:36:39] *** Quits: sagax (~sagax_nb@user/sagax) (Ping timeout: 256 seconds)
[01:36:44] <ali1234> it is a human-readable representation of it
[01:36:45] *** Quits: wolfshappen (~waff@irc.furworks.de) (Ping timeout: 250 seconds)
[01:36:59] *** Joins: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net)
[01:37:05] <zamba> did you look at my code?
[01:37:09] <ali1234> yes
[01:37:13] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[01:37:17] <zamba> L122 does the "conversion"
[01:37:28] <zamba> i'm not sure how to handle it otherwise
[01:37:53] <ali1234> this is probably the simplest way
[01:37:56] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[01:38:04] <zamba> sweet.. thanks :)
[01:38:10] *** Quits: NeoCore (~neocore@89.40.183.136) (Quit: Leaving)
[01:38:31] <zamba> i'll leave it at that, then
[01:38:43] <zamba> thanks for the gist, that'll help me complete this
[01:38:50] <ali1234> in hidapi you would use hid_read instead. you would get pretty much the same data
[01:38:56] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[01:39:10] <ali1234> you would still have to decode it. the library probably has a function for that
[01:39:35] <zamba> ali1234: i attempted, but that just gave me gibberish
[01:39:56] <zamba> and .read() also requires a length, and i have no idea how much to read
[01:40:11] <ali1234> 8 bytes
[01:40:30] <anddam> Repiphany, jinsun__ : https://termbin.com/0r6u
[01:40:52] <zamba> b' \x00.\x00\x00\x00\x00\x00'
[01:41:05] <zamba> meaning gibberish
[01:41:13] <zamba> and also.. when do i know when i'm _done_ reading..
[01:41:20] <zamba> 8 bytes will be the first "report"
[01:41:21] <ali1234> you are never done reading
[01:41:33] <ali1234> this program runs in the background
[01:41:48] *** justAstache is now known as justOkay
[01:41:55] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Ping timeout: 240 seconds)
[01:42:00] <zamba> well, i'm not sure how to interpret this data
[01:42:12] <anddam> zamba: "mostly zero"
[01:42:20] <zamba> anddam: exactly
[01:42:22] <zamba> https://bpa.st/ZTFQ
[01:42:40] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.4)
[01:43:16] <anddam> jinsun__: I do not like that "and" condition, any will parse the whole found list anyway since I cannot know the list is sorted and it has to shortcircuit once threshold is surpassed
[01:43:22] <anddam> Repiphany: ^
[01:43:25] <zamba> hm.. well.. ok.. i see i'm getting the same here
[01:43:35] <ali1234> the same way as you do in the existing code
[01:43:45] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[01:44:01] <zamba> ali1234: yeah, i just realized
[01:44:29] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[01:45:08] <zamba> this is cleaner, i have to admit
[01:45:26] *** Joins: Everything (~Everythin@37.115.210.35)
[01:46:21] *** Quits: antranigv (~antranigv@37.252.78.252) (Quit: ZNC 1.8.2 - https://znc.in)
[01:46:31] *** Joins: louis_deboot (~louis_deb@132.235.96.6)
[01:47:18] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:48:25] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[01:48:29] *** Joins: antranigv (~antranigv@37.252.78.252)
[01:49:18] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:906:2a58:dc2c:ac0e) (Ping timeout: 252 seconds)
[01:49:48] <jinsun__> anddam: yeah that threshold calculation is not helping here, the list would be sorted though, so you could binary search the index where it crosses the threshold and loop only till that index
[01:50:49] <zamba> ali1234: thanks .)
[01:50:50] *** Quits: LordVan (~lordvan@gentoo/developer/lordvan) (Quit: Leaving)
[01:52:03] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[01:53:02] *** Joins: BrokenCog (~BrokenCog@88.sub-174-194-133.myvzw.com)
[01:53:06] <jinsun__> anddam: but as I said before, majority of the numbers are not prime, so the any would return value before reaching the threshold anyway, and this threshold stuff is just extra unnecessary calculation, so overall that could be fast enough even if you don't do the threshold check
[01:53:48] *** Quits: src (~src@user/src) (Quit: leaving)
[01:54:01] <jinsun__> but should measure it, just to be sure
[01:54:27] *** Parts: louis_deboot (~louis_deb@132.235.96.6) (Leaving...)
[01:54:30] *** Quits: blei (~blei@user/blei) (Quit: Client closed)
[01:54:47] *** Quits: Xardas (~Xardas@149.233.51.127) (Ping timeout: 256 seconds)
[01:56:18] *** Quits: file_ (~Username@p54966810.dip0.t-ipconnect.de) (Remote host closed the connection)
[01:58:08] *** Quits: takezo (~takezo@gateway/vpn/pia/takezo) (Quit: Leaving)
[01:58:21] <BrokenCog> hellos, I'm using pdb in Pyton 3, when I set a breakpoint and try to output 'args.start' (an arg defined via parser.add_argument() and 'args.parser.parse_args() ), I get nothing.  If I do 'args' I also get nothing, but type(args) shows "class 'argparse.Namespace'> " ... any idea why I can't inspect args.start or args ??
[01:58:22] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:58:31] *** Joins: wolfshappen (~waff@irc.furworks.de)
[01:58:34] *** Quits: antranigv (~antranigv@37.252.78.252) (Quit: ZNC 1.8.2 - https://znc.in)
[01:58:43] <BrokenCog> if I include  a print() in the script ... it outputs correctly.
[01:59:49] <BrokenCog> I'm passing python script.py --start=2022-03-10 ... but, have a 'default=datetime.now()' in the add_argument().
[02:00:09] <BrokenCog> s/but,/but, also/
[02:01:09] *** Joins: antranigv (~antranigv@37.252.78.252)
[02:02:07] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:02:27] *** Joins: akk (~akk@75-161-61-130.albq.qwest.net)
[02:02:33] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[02:02:40] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[02:02:51] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[02:03:02] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[02:03:35] *** Joins: Xano (~Xano@host86-157-207-90.range86-157.btcentralplus.com)
[02:03:54] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[02:04:29] *** Quits: Donitz (~Donitz4@88-115-149-215.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[02:04:39] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:05:06] <bjs> BrokenCog: can you show us what you're doing and where the breakpoints are and what "nothing" looks like?
[02:05:15] <BrokenCog> yeah.
[02:05:39] <BrokenCog> https://termbin.com/mva6
[02:06:28] * aclark .oO(breakpoint()?)
[02:06:48] * aclark .oO(breakpoint() == import pdb;pdb.set_trace()?)
[02:07:00] *** Joins: c4017w__ (~c4017@209.52.68.8)
[02:07:07] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[02:07:07] <jinsun__> anddam: so I tried timing the different ways, and looks like the binary search way I mentioned is much faster actually (at least for 10001'th prime) https://bpa.st/3FAA
[02:07:09] <BrokenCog> https://termbin.com/t8it
[02:07:15] *** Quits: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net) (Ping timeout: 256 seconds)
[02:07:26] <bjs> BrokenCog: `p args` and `p args.start` works for me
[02:07:31] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 268 seconds)
[02:07:31] <bjs> oh you forgot the p
[02:07:40] <bjs> p is the pdb "print" command
[02:07:40] <BrokenCog> hm.  never needed that before.
[02:07:41] <BrokenCog> okay.
[02:07:58] <BrokenCog> I guess because it's a different namespace than the global.
[02:08:02] <BrokenCog> thanks.
[02:08:05] <bjs> BrokenCog: no it's because `args` is also a pdb command
[02:08:09] *** Joins: Donitz (~Donitz4@88-115-149-215.elisa-laajakaista.fi)
[02:08:13] <BrokenCog> lol.  ahhh.
[02:08:16] <aclark> Huh, https://peps.python.org/pep-0553/
[02:08:26] *** Joins: Xardas (~Xardas@149.233.51.127)
[02:08:41] *** Joins: Jong (~Jong@2620:10d:c090:400::5:7a46)
[02:08:49] <jinsun__> yep it has been available since 3.7, so 4 years ago
[02:09:06] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[02:10:44] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[02:15:01] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:15:23] *** Quits: Mat1010 (~Mat1010@168.181.209.34) (Quit: Client closed)
[02:15:39] *** Parts: kaste (~kaste@user/kaste) (WeeChat 3.2)
[02:16:01] *** Joins: white2 (~mahengrui@user/mahengrui1)
[02:16:19] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:17:24] *** Quits: dreamon (~dreamon@pd9503763.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[02:18:54] *** Joins: Xano_ (~Xano@2a00:23c4:4204:700:8d9c:33a8:551b:6c06)
[02:19:57] *** Joins: pyevery__ (~pyeveryth@c-73-38-4-158.hsd1.ma.comcast.net)
[02:20:11] *** Joins: Mat1010 (~Mat1010@168.181.209.34)
[02:21:11] *** Quits: Xano (~Xano@host86-157-207-90.range86-157.btcentralplus.com) (Ping timeout: 245 seconds)
[02:21:18] *** Joins: Barones (~Barones@user/Barones)
[02:21:45] *** Quits: Mat1010 (~Mat1010@168.181.209.34) (Client Quit)
[02:23:07] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 250 seconds)
[02:23:24] *** Quits: subopt (~subopt@2603-8081-2302-459a-0961-9e40-5148-f3a4.res6.spectrum.com) (Ping timeout: 240 seconds)
[02:24:01] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[02:24:39] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:2241:6d94:7716:4be7) (Quit: Konversation terminated!)
[02:24:53] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[02:25:34] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 260 seconds)
[02:26:09] *** Quits: pyevery__ (~pyeveryth@c-73-38-4-158.hsd1.ma.comcast.net) (Ping timeout: 252 seconds)
[02:26:17] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:27:48] *** Joins: hiroshi_ (~freedom@151.35.209.214)
[02:28:50] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[02:29:49] *** Quits: pragmaticenigma (~pragmatic@user/pragmaticenigma) (Quit: Leaving)
[02:31:05] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[02:31:36] *** Joins: sudoRoot (~sudoRoot@gateway/vpn/pia/sudoroot)
[02:33:01] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[02:33:07] * arcaile COME ON DOWN TO EFNET #BIRDNEST DONT BE A LITTLE BITCH, COME ON DOWN OR ELSE IRC.EFNET.ORG/6697 #BIRDNEST BEST MOTHERFUCKING BIRD PERCH
[02:33:34] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[02:34:02] *** Quits: Enitin (~Enitin@5.180.62.232) (Ping timeout: 268 seconds)
[02:34:02] *** Joins: Roey (~Roey@user/Roey)
[02:34:19] *** Quits: antranigv (~antranigv@37.252.78.252) (Quit: ZNC 1.8.2 - https://znc.in)
[02:34:55] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 240 seconds)
[02:35:03] *** Joins: Enitin (~Enitin@82.180.145.227)
[02:35:41] *** Quits: fling (~fling@user/fling) (Remote host closed the connection)
[02:35:59] *** Joins: antranigv (~antranigv@37.252.78.252)
[02:36:02] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:ddcf:4aad:3c6:b791)
[02:36:36] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[02:36:40] *** Joins: fling (~fling@user/fling)
[02:37:00] *** Joins: ThanatosJ (~Thanatos@105.112.182.105)
[02:38:16] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[02:38:18] *** Quits: arcaile (~arcaile@188.126.94.49) (K-Lined)
[02:38:31] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 250 seconds)
[02:38:35] <anddam> that still took 5 minutes
[02:38:58] *** Quits: daedw (~daedw@cpe-172-113-121-232.socal.res.rr.com) (Ping timeout: 268 seconds)
[02:39:33] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[02:39:50] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[02:39:52] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[02:40:05] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[02:40:13] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Read error: Connection reset by peer)
[02:40:15] *** Quits: Thanatos (~Thanatos@105.112.30.185) (Ping timeout: 250 seconds)
[02:40:19] <jinsun__> what took 5 minutes?
[02:40:27] *** Quits: bitkiller (~bitkiller@user/bitkiller) (Ping timeout: 256 seconds)
[02:40:27] *** Quits: driib2 (~driib@185.65.135.252) (Quit: Ping timeout (120 seconds))
[02:41:04] *** Joins: pyeverything (~pyeveryth@64-18-153-56.starry-inc.net)
[02:41:45] <SnoopJ> the k-line, presumably
[02:41:46] *** Quits: white2 (~mahengrui@user/mahengrui1) (Remote host closed the connection)
[02:42:10] *** Joins: white2 (~mahengrui@user/mahengrui1)
[02:42:19] <jinsun__> ah okay finally
[02:42:54] *** Joins: PopularMechanic (~desk@206.214.54.192)
[02:43:29] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[02:43:45] *** Quits: ravan__ (~ravan@user/ravan) (Ping timeout: 252 seconds)
[02:44:12] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[02:44:20] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:44:26] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[02:45:33] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[02:45:44] *** Joins: ravan (~ravan@42.201.198.151)
[02:45:44] *** Quits: ravan (~ravan@42.201.198.151) (Changing host)
[02:45:44] *** Joins: ravan (~ravan@user/ravan)
[02:46:08] *** Joins: driib2 (~driib@185.65.135.252)
[02:46:13] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:47:29] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[02:47:33] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[02:47:36] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[02:48:02] <anddam> yep
[02:48:08] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[02:48:13] <anddam> I hate that for this https://projecteuler.net/problem=8
[02:48:23] *** Joins: arcaile (~arcaile@143.244.54.137)
[02:48:25] <anddam> I came up with    max(math.prod(map(lambda x: int(x), data[pos:pos+13])) for pos in range(len(data)-12))
[02:48:50] *** Joins: crashrep (~crashrep@user/crashrep)
[02:49:56] <anddam> what's the "proper" way to have a moving window of length N over an iterable?
[02:50:47] *** Quits: arcaile (~arcaile@143.244.54.137) (K-Lined)
[02:50:53] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[02:51:51] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[02:52:00] *** Quits: nolan_ (~nolan_@user/nolan/x-2434303) (Ping timeout: 252 seconds)
[02:52:00] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:52:32] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[02:52:59] *** Quits: driib2 (~driib@185.65.135.252) (Quit: Ping timeout (120 seconds))
[02:53:03] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:54:01] <jinsun__> you can use more_itertools.windowed https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.windowed
[02:54:11] <jinsun__> or https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.sliding_window
[02:54:36] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:55:09] <anddam> can I have that a little less stdlib and little more "what would a Lisper do"?
[02:55:17] *** Quits: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2) (Ping timeout: 240 seconds)
[02:55:29] *** Joins: blackout69 (~blackout6@37.183.198.248)
[02:55:46] *** Joins: rje (~textual@50.35.241.164)
[02:55:46] <anddam> btw I stumbled on hy, I wanted to check CL out for a while, maybe this can reduce the barrier to entry
[02:56:24] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[02:56:38] *** Joins: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[02:56:44] *** Joins: blei (~blei@user/blei)
[02:57:13] <blei> type hints aren't used to speed things up?
[02:57:47] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[02:57:48] <jinsun__> I dunno, python doesn't have many nice functional features, so the way lispers would do would not be too pythonic I imagine
[02:58:06] <phy1729> nope they're ignored at runtime by python
[02:58:19] <blei> i can't believe that made it in
[02:58:31] <jinsun__> there is mypyc, but it kinda sucks
[02:58:33] <bjs> blei: why can't you believe it?
[02:58:39] <jinsun__> only used for compiling mypy
[02:58:46] *** Quits: ThanatosJ (~Thanatos@105.112.182.105) (Read error: Connection reset by peer)
[02:58:55] <blei> because they are distracting
[02:59:01] <blei> and nothing more?!
[02:59:09] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[02:59:18] <bjs> blei: many people seem to disagree and think static type annotations are useful
[02:59:29] <blei> was this intended to support an ecosystem of contractual programming libs
[02:59:47] <blei> or perhaps they mistakenly believe the language uses them to make their code faster
[02:59:49] <bjs> blei: well they were primarily added so that typecheckers can read them, yeah.
[02:59:53] *** Quits: rje (~textual@50.35.241.164) (Read error: Connection reset by peer)
[02:59:59] <SnoopJ> https://peps.python.org/pep-0484/#rationale-and-goals
[03:00:05] <bjs> blei: who is "they" here?
[03:00:09] *** Joins: rje (~textual@65.141.156.170)
[03:00:16] *** Joins: driib2 (~driib@185.65.135.252)
[03:00:29] <blei> the latent population of people arduously documenting types in a duck-typed language
[03:00:32] <SnoopJ> blei, mistaken beliefs do seem to be a big factor, here.
[03:01:08] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:01:11] <bjs> blei: I don't know if people are doing it because they think their code will go faster,  but there is certainly a large number of people that use the annotations in combination with something like mypy (a static type checker for Python)
[03:01:16] *** Joins: sgen (~sgen@2607:fea8:7ce1:c8e0:a992:a734:d5e:8b54)
[03:01:32] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[03:01:49] <jinsun__> I think most people who are using type hints know that it doesn't speed up code, or at least I hope they know that
[03:01:54] <SnoopJ> even if no tool consumed annotations at all, they could be useful to declare intent
[03:02:23] <tdsmith> in a lot of cases you type the expected types into a docstring anyway; you may as well put that in your code and let your computer give you feedback about it
[03:02:36] <bjs> SnoopJ: well I think the counter argument to that is that they existed for a long time before there was tooling to check them,  and it's pretty clear nobody really used them for that purpose alone
[03:02:40] <blei> if type hinting is the prime mover then supporting future interpreter optimizations was the goal
[03:02:42] <bjs> I guess it's too much work for too little gain
[03:03:03] <bjs> blei: the goal for who?
[03:03:09] <SnoopJ> blei, this seems like argument for argument's sake, mostly.
[03:03:10] *** Quits: baltazar (~baltazar@84-236-97-135.pool.digikabel.hu) (Remote host closed the connection)
[03:03:43] <blei> no i don't think so. most languages use comments and don't have language features that get parsed without consequence
[03:03:45] *** Joins: Zeturic (~Orimendix@50.26.218.162)
[03:03:50] *** Quits: blackout69 (~blackout6@37.183.198.248) (Quit: Leaving.)
[03:04:03] <SnoopJ> "without consequence" is verifiably false
[03:04:14] <bjs> blei: you don't think what?  I mean the reason why we have annotations in Python is clear,  it was written down at the time when it was proposed :)
[03:04:22] *** Quits: kickingvegas (~cchoi@c-73-170-198-193.hsd1.ca.comcast.net) (Quit: leaving)
[03:04:31] <blei> "type hints" ~= speed.
[03:04:33] <SnoopJ> perhaps you don't *like* the consequences very much, but they do exist
[03:04:42] <bjs> blei: you keep saying that,  but that was never one of the arguments for it
[03:05:01] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[03:05:15] <bjs> and isn't part of the proposal to add them, nor part of any of the work of any of the major typecheckers.  It is *one* possible thing you can do with annotations (and some tools do try to do that) but it was never a big part of the rationale of adding annotations
[03:06:15] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[03:06:17] *** Joins: baltazar (~baltazar@84-236-97-135.pool.digikabel.hu)
[03:06:44] <blei> i'm pretty sure that its a joke
[03:06:46] <bjs> and you certainly don't need type annotations to do optimizations,  see PyPy for example (which is an alternative implementation of Python focused on trying to do as many optimizations as they can do)
[03:06:48] <bjs> blei: what is?
[03:07:02] <blei> "Non Goals: [...]Â  Using type hints for performance optimizations is left as an exercise for the reader."
[03:07:08] *** Quits: Midjak (~Midjak@82.66.147.146) (Quit: This computer has gone to sleep)
[03:07:12] <blei> give the guy some credit
[03:07:17] *** Joins: c4017w_ (~c4017@209.52.68.8)
[03:07:31] <bjs> blei: well yes it's a mild joke,  to be read as "we're not doing this and we don't really expect anyone to do it seriously"
[03:07:33] *** Quits: upsala (~zcb@185.209.196.134) (Quit: WeeChat 3.4.1)
[03:07:38] <blei> not at all.
[03:07:44] <bjs> Yes.
[03:07:46] <blei> its a CTA.
[03:07:50] <bjs> No it's not
[03:08:02] <blei> you may want to get your sense of humor checked out
[03:08:11] <SnoopJ> blei, is there a goal to this line of inquiry? Do you intend to stop others from using a language feature they find useful?
[03:08:20] <bjs> blei: I must admit, it's failing to detect your jokes so far
[03:08:27] <blei> i'm not the one who told the joke.
[03:08:35] <blei> 'twas the BDFL
[03:09:03] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[03:09:13] <blei> what makes the joke funny is evident; the potential seems to be lost on many
[03:09:33] <SnoopJ> topical
[03:09:50] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:8815:158b:b37a:1ff5)
[03:10:15] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[03:10:42] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[03:10:43] *** Quits: white2 (~mahengrui@user/mahengrui1) (Ping timeout: 256 seconds)
[03:11:15] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 240 seconds)
[03:13:39] <jinsun__> if you want 4x-5x speed up you can try https://github.com/mypyc/mypyc
[03:13:54] *** Joins: monkeyPlus (~monkeyPlu@2001:8a0:6cc5:7e01:5f9:70aa:2117:a957)
[03:14:01] <jinsun__> but they recommend avoiding some useful python features for speed like https://github.com/python/mypy/wiki/Code-Conventions#features-to-avoid
[03:14:38] <monkeyPlus> hello..so i have a list with [ (1,1,1),29 , (1,2,1),40 , and i want to get the tuple that has the maxmimum value ..how can i do this ?? max(list) doesant work
[03:14:45] <jinsun__> and it doesn't support many typing features that even mypy supports (which already lags behind)
[03:15:00] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[03:15:05] <bjs> monkeyPlus: you have a list with tuples and random integers too?
[03:15:12] *** Joins: korg815 (~korg815@user/korg815)
[03:15:23] <blei> nice
[03:15:48] <bjs> monkeyPlus: or are those 29 and 40 integers supposed to be part of the tuples as well, or are they something else?
[03:15:58] <monkeyPlus> nope
[03:16:06] <bjs> monkeyPlus: nope to which?
[03:16:06] <monkeyPlus> they arent part of the tuples
[03:16:13] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[03:16:28] <monkeyPlus> my list is = [ (1,1,1),213 ,  (1,2,1),542 , (1,3,1),900 ]...
[03:16:35] <bjs> monkeyPlus: so you have a list both integers and tuples of integers? You want the max() to ignore the integers?
[03:16:47] *** Quits: BrokenCog (~BrokenCog@88.sub-174-194-133.myvzw.com) (Read error: Connection reset by peer)
[03:16:57] <bjs> Do those numbers matter? You just want (1,3,1) from that?
[03:17:11] <monkeyPlus> numbers matter yes
[03:17:17] <monkeyPlus> so ..i could just sort
[03:17:19] <monkeyPlus> right?
[03:17:25] *** Quits: blddk (~blddk@user/blddk) (Ping timeout: 240 seconds)
[03:17:36] <monkeyPlus> numbers matter....i need the max of them
[03:17:44] <jinsun__> no you can't sort, it will have the same problem as max
[03:17:47] <bjs> monkeyPlus: oh you don't want (1,3,1) but you want 900 ?
[03:17:53] <monkeyPlus> want both
[03:18:10] <bjs> monkeyPlus: okay, so your list is like [tuple0, value0, tuple1, value1, tuple2, value2, ... etc] ?
[03:18:14] <monkeyPlus> yeah
[03:18:24] *** Quits: kujo2 (~kujo@188.166.12.52) (Ping timeout: 252 seconds)
[03:18:27] <bjs> monkeyPlus: have you heard of dictionaries?  It might be easier to turn that into a dict, and find the key with the largest value
[03:18:32] *** Quits: acidsys_ (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[03:18:40] <monkeyPlus> mm ok..good..didn't thoguth about it
[03:18:40] <hogarius> monkeyPlus: yo want te maximuminteger, and the associated tuple?
[03:18:44] <monkeyPlus> yeah
[03:19:05] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[03:19:09] <monkeyPlus> well what i did was save number to list, get max, and then get the values onanother cycle
[03:19:16] <monkeyPlus> two cycles :/
[03:19:58] <cyphase> i happened to glance and see "have you heard of dictionaries?" and thought someone was being sacastic. then i realized i was in #python :)
[03:20:49] *** Joins: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is)
[03:20:52] <monkeyPlus> bjs, there are several items on dicitoanry (im using dictionaries)..so i want to get the item that are maxmium?
[03:21:25] <bjs> cyphase: it's hard to phrase things that are encouraging for a beginner while not being too condescending for someone more intermediate/advanced when you don't know which they are
[03:21:30] <bjs> and we get a lot of both here
[03:21:36] *** Joins: alex11 (~alex11@user/alex11)
[03:21:51] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 250 seconds)
[03:22:04] <cyphase> bjs, oh i know; i was having that thought before i even remembered which channel it was. my brain thought it was referring to dictionaries that give definitons of words :)
[03:22:16] *** Joins: kujo2 (~kujo@188.166.12.52)
[03:22:30] <cyphase> in this channel i don't think that was an inappropriate question in the slightest
[03:22:43] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[03:22:47] *** Quits: slav0nic_ (slav0nic@python.su) (Ping timeout: 252 seconds)
[03:23:05] <bjs> monkeyPlus: if you had something like `d = {tuple0: v0, tuple1: v1, tuple2: v2, etc}` then `max_key = max(d.keys(), key=max)`
[03:23:35] <bjs> monkeyPlus: then you can print(max(max_key), max_key, d[max_key]) to get "3 (1,3,1) 900"
[03:23:39] <monkeyPlus> mm i see
[03:24:04] <blei> condensation is a serious problem for some people
[03:24:06] <monkeyPlus> ok thanks ...can i use that or?
[03:24:12] <bjs> Generally max(..., key=...) is what lets you get the maximum using some other metric
[03:24:16] <cyphase> monkeyPlus, also, as a general principle, even if for some reason a dictionary is inappropriate or unneeded, it would be better to have a list of tuples, where each tuple is (inner_tuple, value), or whatever. basically, the result of list(the_dict_version_of_this.items())
[03:24:18] <bjs> monkeyPlus: what or?
[03:24:30] <monkeyPlus> or you mind?
[03:24:45] <cyphase> instead of a mixed list where you have to keep track of which values go together
[03:25:11] *** Joins: blddk (~blddk@user/blddk)
[03:25:26] <cyphase> or even if it wasn't a mixed list; ['a', 'b', 'c', 'd'] vs [('a', 'b'), ('c', 'd')]
[03:25:31] <bjs> monkeyPlus: if you're asking if you can copy the code, sure.  But you'd want to restructure your inputs a bit so it's not a mixed up list
[03:25:39] <monkeyPlus> ok thks
[03:26:10] <cyphase> we have the technology :)
[03:26:35] *** Quits: shodan45 (~quassel@107.161.22.155) (Ping timeout: 256 seconds)
[03:26:39] *** Quits: redkrieg (~redkrieg@user/redkrieg) (Ping timeout: 252 seconds)
[03:26:53] *** Joins: Mat1010 (~Mat1010@168.181.209.34)
[03:27:06] *** Quits: tapeworm (~tapeworm@188.168.50.119) (Quit: Leaving)
[03:27:35] <bjs> monkeyPlus: just be careful that my solution here doesn't take into account the possibility of the same tuple appearing many times with different values, so if you might have that you might have to slightly change the code a bit
[03:27:51] <monkeyPlus> i see
[03:28:55] *** Quits: pyeverything (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[03:29:43] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:29:56] *** Joins: pyeverything (~pyeveryth@64-18-153-56.starry-inc.net)
[03:30:10] *** Joins: Xano (~Xano@2a00:23c4:4204:700:2e0e:f274:1254:b6b4)
[03:30:16] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[03:30:28] *** Quits: bloody (~bloody@user/bloody) (Quit: okluvyabubye)
[03:30:43] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[03:31:19] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[03:31:56] *** Joins: bloody (~bloody@user/bloody)
[03:32:42] *** Quits: Xano_ (~Xano@2a00:23c4:4204:700:8d9c:33a8:551b:6c06) (Ping timeout: 252 seconds)
[03:34:06] *** Quits: SoniEx2 (~quassel@autistic.space) (Ping timeout: 245 seconds)
[03:34:25] <marduk> how about `max((i if isinstance(i, tuple) else (i, i)) for i in lst)`
[03:34:31] *** Quits: pyeverything (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 256 seconds)
[03:34:35] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Ping timeout: 240 seconds)
[03:35:25] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 256 seconds)
[03:36:02] <bjs> marduk: well that's not quite what i understood monkeyPlus wanted.  But yes max() is very versatile and you can do lots of different kinds of calculations with it
[03:36:33] *** Quits: MJ (~mjpieters@zopatista.plus.com) (Ping timeout: 252 seconds)
[03:38:22] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[03:38:42] *** Joins: matsaman (~matsaman@user/matsaman)
[03:39:00] *** Joins: MJ (~mjpieters@zopatista.plus.com)
[03:39:52] *** Quits: fling (~fling@user/fling) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[03:40:29] *** Joins: fling (~fling@user/fling)
[03:41:24] *** Quits: akk (~akk@75-161-61-130.albq.qwest.net) (Quit: +++)
[03:43:50] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[03:44:02] *** Quits: grimvar (~grimvar@i5C75F732.versanet.de) (Ping timeout: 240 seconds)
[03:44:09] *** Quits: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net) (Ping timeout: 256 seconds)
[03:44:48] *** Quits: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 252 seconds)
[03:45:32] *** Quits: hiroshi_ (~freedom@151.35.209.214) (Quit: hiroshi_)
[03:45:45] *** Joins: grimvar (~grimvar@i5C75F597.versanet.de)
[03:46:45] *** Quits: Mat1010 (~Mat1010@168.181.209.34) (Quit: Client closed)
[03:46:57] *** Joins: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[03:49:26] *** eldritch_ is now known as eldritch
[03:49:34] *** Quits: Forsaken87 (~quassel@ip-037-201-193-116.um10.pools.vodafone-ip.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:49:54] *** Joins: acalbaza (~acalbaza@pool-108-52-30-98.phlapa.fios.verizon.net)
[03:51:21] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[03:51:34] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[03:52:09] <monkeyPlus> ok thks let me  try
[03:52:17] <acalbaza> hey, i'm using vscode and have a project that uses virtual envs... is there any way to get vscode to recognize imports when installing packages?
[03:52:51] <matsaman> pretty sure, get thee to a search engineery
[03:52:54] *** Quits: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net) (Quit: leaving)
[03:53:50] <SnoopJ> acalbaza, yes, VSCode can be told "use such and such Python" https://code.visualstudio.com/docs/python/environments
[03:54:02] <SnoopJ> matsaman, perhaps you could upgrade from "pretty sure" to sure with help of same
[03:54:15] <acalbaza> right, i did target the right interpreter and still does not change the behavior
[03:54:39] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[03:54:48] <SnoopJ> acalbaza, that should be all you really need to do, can you elaborate on what "recognize imports when installing packages" means?
[03:54:50] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[03:54:56] *** Quits: eldritch (~eldritch@user/eldritch/x-9272577) (Changing host)
[03:54:56] *** Joins: eldritch (~eldritch@user/eldritch)
[03:55:48] *** Quits: cdown (~cdown@cpe-98-15-154-102.hvc.res.rr.com) (Ping timeout: 252 seconds)
[03:55:57] <monkeyPlus> sorry thats not it ..:/
[03:56:52] <acalbaza> sure.Â  if i addÂ and import who's package is not installed, i get "import cannot be resolved" as expected.Â  if i install the package, it still shows that it cannot be resolved even though it has been installed.
[03:57:15] <SnoopJ> acalbaza, install it how?
[03:57:41] <SnoopJ> That kind of thing is usually a sign that you're installing and attempting to import a package in two different environments
[03:57:57] <acalbaza> within the virtual environment, using pip
[03:58:26] <SnoopJ> acalbaza, have you confirmed that the package is installed in the venv with `path/to/venv/bin/python3 -m pip show thepkg` ?
[03:58:53] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[03:59:07] *** Quits: pythonoob (~thelounge@om126166154220.28.openmobile.ne.jp) (Ping timeout: 250 seconds)
[03:59:24] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:59:35] <KnowledgeShark> How would I go about turning this: dir_path = r'' into a working directory path? before I started upgrading my program i had manually /home/brandon/path/; now I just want "the working directory I fired the script off from" in there... traceback says : FileNotFoundError: [Errno 2] No such file or directory: '' (any way around this?)
[03:59:36] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[03:59:47] <KnowledgeShark> Afternoon/evening everyone...
[03:59:54] *** Joins: ymwm (~yingmanwu@27.153.164.29)
[04:00:02] <matsaman> SnoopJ: yeah I mean I believe in possibilities
[04:00:06] <blei> obf http://www.math.sci.hiroshima-u.ac.jp/m-mat/MT/MT2002/CODES/mt19937ar.c
[04:00:33] <acalbaza> yes, i verified using pip list in the venv, ran the code successfully, and ran pip show <pkg>
[04:00:59] *** Quits: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 268 seconds)
[04:01:24] <SnoopJ> acalbaza, assuming that `pip` actually points at the venv's pip (I really don't like relying on this, hence `path/to/python3 -m pip`) then this probably indicates a problem on the VSCode side.
[04:01:57] <jinsun__> KnowledgeShark: pathlib.Path.cwd()
[04:02:13] <acalbaza> hmm... it's like it doesn't want to refresh.
[04:02:49] <KnowledgeShark> jinsun__ can I place that inside, like this dir_path = r'pathlib.Path.cwd()' ? And thank you!
[04:03:02] *** Joins: hanzo (uid532183@user/hanzo)
[04:03:38] <jinsun__> KnowledgeShark: get rid of the r and the quotes, just  dir_path = pathlib.Path.cwd()
[04:03:41] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb)
[04:03:53] <KnowledgeShark> jinsun__ 10-4; Ty Sir!
[04:03:57] *** Joins: hams (~hams@73.232.205.0)
[04:03:57] *** Quits: hams (~hams@73.232.205.0) (Changing host)
[04:03:57] *** Joins: hams (~hams@user/hams)
[04:03:59] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[04:04:39] *** Joins: Soni (~quassel@autistic.space)
[04:04:46] <jinsun__> acalbaza: have to tried reload window yet? a lot of bad behavior of vscode is solved by that
[04:04:59] <jinsun__> s/to/you
[04:05:36] <SnoopJ> worth a try; I've found VSCode a little inscrutable here, so I usually just ignore these features
[04:05:56] *** Quits: bomb-on (~bomb-on@user/bomb-on) (Quit: aÐ»Ð»Ð¸Ð»Ñ¹Ñ–Ð°!)
[04:06:36] <acalbaza> hmm... if i select another interpreter and switch back to the venv one, it refreshes.
[04:07:01] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 245 seconds)
[04:07:14] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[04:07:37] *** Joins: c4017w__ (~c4017@209.52.68.8)
[04:07:51] <acalbaza> figured this would be a common use case
[04:08:47] <SnoopJ> well, it is. I don't understand why the IDE either nails it or whiffs, but it seems like a bit of hold-handing gets it back in line when it goes astray
[04:08:59] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 252 seconds)
[04:09:27] *** Joins: arcaile (~arcaile@194.32.122.57)
[04:09:35] *** Joins: djapo (~archangel@user/djapo)
[04:09:46] *** Joins: pyeverything (~pyeveryth@64-18-153-56.starry-inc.net)
[04:11:02] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[04:13:59] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[04:14:11] *** Quits: pyeverything (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 256 seconds)
[04:14:11] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-f0f2-5be8-40b8-72bd.res6.spectrum.com) (Read error: Connection reset by peer)
[04:14:30] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[04:20:34] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[04:20:51] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[04:23:46] *** Quits: sobkas (~sobkas@95.175.17.217) (Quit: sobkas)
[04:23:55] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[04:26:39] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[04:26:40] *** Quits: Jonopoly (~Jonopoly@user/jonopoly) (Quit: WeeChat 3.0)
[04:27:13] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:27:22] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb) (Ping timeout: 260 seconds)
[04:28:36] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 240 seconds)
[04:28:57] *** Quits: cs (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Ping timeout: 240 seconds)
[04:29:31] *** Joins: BrokenCog (~BrokenCog@88.sub-174-194-133.myvzw.com)
[04:30:28] *** Joins: Wulf (~Wulf@user/wulf)
[04:30:57] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[04:31:49] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[04:32:37] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[04:32:59] *** Quits: rje (~textual@65.141.156.170) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[04:34:28] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[04:34:40] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:38:06] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[04:38:13] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4.1)
[04:38:19] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:ddcf:4aad:3c6:b791) (Ping timeout: 256 seconds)
[04:38:29] *** Joins: rje (~textual@50.35.241.164)
[04:39:13] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[04:39:15] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[04:39:33] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[04:40:08] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[04:40:18] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[04:41:50] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:41:53] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[04:42:12] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Quit: ZNC - https://znc.in)
[04:44:01] <KnowledgeShark> My program has the requirement to count the # of *.json files in current working directory. I am only getting results of total # of files in this code block: https://dpaste.com/FZ5X7YXVV | Any ideas for remedy?
[04:44:55] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[04:44:56] <matsaman> KnowledgeShark: I don't see anywhere where you're specifying .json only
[04:45:15] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 240 seconds)
[04:45:21] *** Quits: Timrit (~scott@047-012-066-084.res.spectrum.com) (Ping timeout: 256 seconds)
[04:45:29] <KnowledgeShark> matsaman: Very true. I am a major beginner. Any point of reference you could point me to that I could learn how to?
[04:45:39] <SnoopJ> KnowledgeShark, I would spell that as: `len(list(Path().glob("*.json")))` personally
[04:46:03] <KnowledgeShark> SnoopJ: Thank you; I will give this a shot! Much appreciated!
[04:46:06] *** Joins: fling (~fling@user/fling)
[04:46:09] <KnowledgeShark> matsaman: Thank you also.
[04:46:32] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[04:46:37] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[04:46:42] <SnoopJ> KnowledgeShark, does it make sense?
[04:46:44] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[04:47:13] <KnowledgeShark> SnoopJ: I just pulled up my terminal. Not 100% yet...
[04:47:27] *** Joins: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net)
[04:47:35] <Pi-sistance> hi, hows the coding going
[04:48:10] <KnowledgeShark> SnoopJ: You're right. I'm lost. How do I implement that?
[04:48:12] <SnoopJ> KnowledgeShark, the glob() method lets you specify a pattern that can include wildcards, the list() makes a list of all matches, and len() takes the length of that.
[04:48:23] <SnoopJ> (it might make more sense if you split it across multiple lines)
[04:48:45] <Pi-sistance> also how did yall manage to bully the admins into letting this be like the only room with just 1 # lol
[04:49:04] <BrokenCog> matsaman: did he mean "count the number of json files?"
[04:49:15] <BrokenCog> not the hashes [in] json files ?
[04:49:37] <KnowledgeShark> BrokenCog: Yes; total # of .json files (no content needed) -- already extracted w/ SQLAlchemy.
[04:49:51] <KnowledgeShark> SnoopJ: Thank you for explaining.
[04:49:54] <matsaman> BrokenCog: that's how I read it <shrug>
[04:50:02] <BrokenCog> yeah.  it was obtuse.
[04:50:27] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[04:51:11] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[04:51:17] <SnoopJ> Pi-sistance, there was no bullying involved, single # channels are 'on-topic' in line with Libera network policy. This is pretty much the same policy as it was on Freenode. https://libera.chat/chanreg/
[04:51:26] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[04:52:44] <BrokenCog> SnoopJ: I thought "##" channels were "official"?
[04:52:48] <matsaman> BrokenCog: what my reading?
[04:52:56] <BrokenCog> matsaman: no, the writing.
[04:53:03] <matsaman> mmm
[04:53:18] <SnoopJ> BrokenCog, from the link I just shared: "Channels that begin with two # characters are informal channels."
[04:53:33] <Pi-sistance> SnoopJ i dont see the distinction between a community and unoffical channel
[04:53:42] <matsaman> it's a dumb old rule that Libera isn't even sticking to
[04:53:47] <SnoopJ> Pi-sistance, okay. You can ask in #libera if you want clarification.
[04:54:00] <Pi-sistance> also its much funnier to think bullying was involve, aw.
[04:54:09] <matsaman> bullying _is_ pretty funny
[04:54:31] <SnoopJ> matsaman, oh, is that why you do it?
[04:54:34] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[04:54:36] <matsaman> do what?
[04:54:41] <SnoopJ> bullying
[04:54:46] *** Quits: arcaile (~arcaile@194.32.122.57) (Quit: leaving)
[04:54:46] <Pi-sistance> it is if it was involving such a trivial thing lol
[04:54:49] <matsaman> bullying?
[04:55:11] <matsaman> do you feel I've bullied you, SnoopJ?
[04:55:15] <SnoopJ> no
[04:55:20] <matsaman> mmm
[04:56:26] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:56:28] <BrokenCog> re: Pandas pbdate_range ... I want to count by business days in increments of one (business days) week at a time: so, March 7-11 then March 14-18 ... can bdate_range() or date_range() be made to do this??
[04:57:12] <Pi-sistance> freenode and libera have been pretty good. only 1 tame i even came to close to being bullied was when I was a math noob and someone tseemed to take offense on behalf of "the numbers" that I was butchering. I found it hilarious personally.
[04:57:39] <matsaman> I mean, one shouldn't take everyone on the internet so seriously
[04:57:56] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[04:58:00] <matsaman> but there are some pretty mean folks out there
[04:58:15] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[04:58:37] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[04:58:41] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 250 seconds)
[04:58:52] <SnoopJ> All the more reason not to bring it in here
[05:00:22] <KnowledgeShark> SnoopJ: I appreciate that code line and the breakdown of it. I'm struggling to understand how to implement it.
[05:01:14] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[05:02:15] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 240 seconds)
[05:02:17] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:02:21] *** Joins: driib29 (~driib@185.195.233.157)
[05:02:39] <SnoopJ> KnowledgeShark, I don't really know what you mean by "implement," the code I gave you is complete if the Path class is in your current scope. https://bpa.st/FBGA
[05:02:55] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[05:04:10] <KnowledgeShark> SnoopJ: oh wow! Thank you. I didn't know it worked stand-alone.
[05:04:33] *** Quits: driib2 (~driib@185.65.135.252) (Ping timeout: 252 seconds)
[05:04:33] *** driib29 is now known as driib2
[05:04:45] *** Joins: Nei_ (~ailin@openSUSE/member/ailin-nemui)
[05:04:52] <SnoopJ> KnowledgeShark, one thing I didn't point out before: if you construct a Path object without arguments, you get an object that represents the current working directory
[05:05:00] *** Quits: nochi_ (~nochi@static.216.66.130.94.clients.your-server.de) (Ping timeout: 240 seconds)
[05:05:00] *** Quits: Nei (~ailin@openSUSE/member/ailin-nemui) (Ping timeout: 240 seconds)
[05:05:10] *** Quits: Iolo_ (~iolo@user/Iolo) (Quit: Leaving)
[05:05:19] *** Joins: mbrndtgn6 (~mbrndtgn@undecidable.de)
[05:06:02] <KnowledgeShark> SnoopJ: Great to know! Much obliged!
[05:06:08] *** Joins: nochi (~nochi@static.216.66.130.94.clients.your-server.de)
[05:06:12] *** Quits: Lartza (lartza@user/lartza) (Ping timeout: 240 seconds)
[05:06:15] *** Joins: Lartza_ (lartza@user/lartza)
[05:06:36] *** Quits: simplici1y (~yti@user/simplicity) (Ping timeout: 240 seconds)
[05:06:36] *** Quits: noent (~quassel@user/sven/x-0967695) (Ping timeout: 240 seconds)
[05:06:53] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[05:07:00] *** Quits: mbrndtgn (~mbrndtgn@undecidable.de) (Ping timeout: 240 seconds)
[05:07:00] *** mbrndtgn6 is now known as mbrndtgn
[05:07:13] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[05:07:25] *** Joins: noent (~quassel@squint.a-oben.org)
[05:07:25] *** Quits: noent (~quassel@squint.a-oben.org) (Changing host)
[05:07:25] *** Joins: noent (~quassel@user/sven/x-0967695)
[05:08:07] *** Joins: c4017w_ (~c4017@209.52.68.8)
[05:08:29] *** Joins: simplicity (~yti@user/simplicity)
[05:08:47] *** Nei_ is now known as Nei
[05:08:57] *** Quits: Xano (~Xano@2a00:23c4:4204:700:2e0e:f274:1254:b6b4) (Ping timeout: 252 seconds)
[05:11:42] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[05:12:07] <deltab> BrokenCog: freq='W-MON' ?
[05:12:38] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[05:12:44] <BrokenCog> that only give me the Mondays.
[05:13:07] <deltab> I'm not clear on what you wanted
[05:13:54] <deltab> the default freq='B' will give you all the business days
[05:13:55] <BrokenCog> for day in pd.date_range(start,end) give me all the business days, which is probably what I was originally asking for ... but, what I would like is day to be a list of one week's of b-days at a time, rather than one day at a time.
[05:14:29] <BrokenCog> bdate_range is an alias for date_range(freq='B') ...
[05:14:40] *** Quits: oriba (~oriba@dynamic-077-183-072-090.77.183.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[05:15:02] <deltab> do you want nested sequences?
[05:15:07] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[05:15:35] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[05:15:45] <BrokenCog> I think that would be fine.
[05:18:04] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 268 seconds)
[05:19:20] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[05:20:20] <deltab> I can think of a few ways of doing it: 1) generate all the days then group them into fives; 2) generate the Mondays, then generate the days of the week starting with each Monday
[05:20:32] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 268 seconds)
[05:20:42] *** Joins: frmlof (~frmlof@70.243.238.191)
[05:21:07] <KnowledgeShark> SnoopJ: How would I bring my Python Variable on line 10 "wd_json_count" into line 12 properly? My dpaste is: https://dpaste.com/8JANW9XW7 (It's quite possible I now have line 12 started incorrectly...)
[05:21:08] <deltab> 3) generate the weeks (using period_range?) then generate the business days of each week
[05:21:11] *** Joins: zenstoic (uid461840@id-461840.hampstead.irccloud.com)
[05:22:09] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[05:23:00] <BrokenCog> ah.  (2) would probably be simpler, but, I'll use (3) because some monday's will be holidays and then I'll need to edge case them.  Thanks for the suggestion.
[05:23:34] <BrokenCog> or maybe I wouldn't ... let me see if requesting days after a holiday returnsthe rest o the week.  probably does.
[05:24:29] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[05:25:16] *** Quits: frmlof (~frmlof@70.243.238.191) (Client Quit)
[05:25:29] *** Quits: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[05:29:34] *** Joins: CodePoint (~CodePoint@2607:fb90:25d7:94f4:f8a5:ce83:a3cc:e16d)
[05:30:53] *** Joins: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp)
[05:30:55] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[05:32:01] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[05:32:07] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb)
[05:32:46] <ColdKeyboard> Any recommendation for a Python framework geared towards testing firmware+hardware?
[05:33:13] *** Quits: p-i-_ (~Ohmu@mx-ll-183.89.28-57.dynamic.3bb.co.th) (Remote host closed the connection)
[05:33:43] *** Joins: p-i- (~Ohmu@mx-ll-183.89.28-57.dynamic.3bb.co.th)
[05:35:20] *** Quits: CodePoint (~CodePoint@2607:fb90:25d7:94f4:f8a5:ce83:a3cc:e16d) (Ping timeout: 252 seconds)
[05:36:18] <SnoopJ> KnowledgeShark, you could replace lines 10-13 of that paste with: `count = len(pth for pth in Path().glob("*.json") if pth.is_file())`
[05:36:45] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:90dc:6b82:6352:8639)
[05:37:26] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[05:37:34] <nedbat> ColdKeyboard: pytest works for that.  Brian Okken wrote a book on pytest, and his day job is testing hardware with it.
[05:37:56] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[05:41:03] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:41:40] <SnoopJ> pytest would be my first thought as well. Even if you need specialization, the plugin ecosystem is great, and it's admirably extensible
[05:42:32] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[05:43:15] <KnowledgeShark> SnoopJ: Thank you.
[05:43:17] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[05:44:15] <SnoopJ> nedbat, I saw dinghy in this week's issue of a Python newsletter, by the way :)
[05:44:37] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[05:45:21] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[05:46:54] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 252 seconds)
[05:47:42] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[05:47:55] *** Joins: J` (~J@user/j/x-4069704)
[05:48:35] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[05:48:54] <ColdKeyboard> Awesome, I'll take a look at pytest. Thanks!
[05:49:23] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[05:49:32] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[05:49:52] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[05:50:09] *** Joins: fling (~fling@user/fling)
[05:50:15] *** Quits: phaisedArray (~phaise@gateway/tor-sasl/phaise) (Ping timeout: 240 seconds)
[05:51:25] *** Quits: DangerWabbit (~DangerWab@109.70.150.164) (Remote host closed the connection)
[05:52:16] *** Joins: ymwm_ (~yingmanwu@240e:37a:40e4:9e00:71aa:8953:b0de:ee76)
[05:52:57] *** Joins: phaisedArray (~phaise@gateway/tor-sasl/phaise)
[05:54:11] *** Joins: Xano (~Xano@2a00:23c4:4204:700:39c3:3f76:91c4:daaf)
[05:54:49] *** Quits: ymwm (~yingmanwu@27.153.164.29) (Ping timeout: 256 seconds)
[05:55:11] <KnowledgeShark> SnoopJ: I am getting a traceback error of "TypeError: object of type 'generator' has no len()" updated code block dpaste: https://dpaste.com/AA5P55EW6 & traceback dpaste: https://dpaste.com/2SVAAUH4K
[05:55:50] <SnoopJ> KnowledgeShark, oops, indeed, it should be `len([...])`, sorry about that
[05:57:23] <KnowledgeShark> SnoopJ: no worries. I sure appreciate this! You guys seriously rock #python irc.libera.chat :) Sorry if I seem like I am not good enough to understand so much just yet. My python obligations require me to level up my skills and learn from all of you.
[05:57:54] <SnoopJ> No need to apologize, that's why this place exists :)
[05:57:56] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (Quit: ZNC - https://znc.in)
[05:58:06] <KnowledgeShark> SnoopJ: 100% :)
[05:58:19] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:59:27] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[05:59:39] <KnowledgeShark> SnoopJ: count = len([pth for pth in Path().glob("*.json") if pth.is_file()]) <---- Is that right?
[05:59:55] <SnoopJ> looks good to me
[06:00:18] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[06:00:20] <KnowledgeShark> Awesome; it worked!
[06:00:28] * KnowledgeShark high fives SnoopJ 
[06:02:51] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[06:03:46] *** Quits: p-i- (~Ohmu@mx-ll-183.89.28-57.dynamic.3bb.co.th) (Read error: Connection reset by peer)
[06:04:21] *** Joins: p-i- (~Ohmu@183.89.28.57)
[06:04:38] *** Quits: sudoRoot (~sudoRoot@gateway/vpn/pia/sudoroot) (Quit: Leaving)
[06:05:11] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[06:05:40] *** Joins: dre (~dre@2001:8003:c932:c301:6340:c00d:1602:9f)
[06:06:01] <dre> hey guys, is there a way to use PYTHONSTARTUP with pdb ?
[06:06:35] *** Joins: weibullguy (~weibullgu@024-236-222-047.res.spectrum.com)
[06:07:11] *** Quits: weibullguy (~weibullgu@024-236-222-047.res.spectrum.com) (Client Quit)
[06:07:59] <dre> if I were to try and run my file with the following: `PYTHONSTARTUP=startup.py python3 test.py` -- with a breakpoint() in the test.py, i get to the debugger, but the items within the startup file isn't included
[06:08:01] *** Quits: rje (~textual@50.35.241.164) (Quit: Textual IRC Client: www.textualapp.com)
[06:08:21] *** Joins: rje (~textual@65.141.156.170)
[06:08:40] <dre> I'm really actually trying to use this for pytest but the example above is something else as well.... could it be that PYTHONSTARTUP isn't imported unless it's interactive or something?
[06:08:52] *** Joins: c4017w__ (~c4017@209.52.68.8)
[06:09:02] <SnoopJ> dre, I believe it's explicitly for interactive mode, yes
[06:09:46] <dre> hmm, and there's no way to import that when pdb (or pdbpp or ipdb) is triggered?
[06:10:29] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[06:11:06] *** Quits: zlg (~zlg@user/zlg) (Ping timeout: 252 seconds)
[06:12:23] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[06:14:51] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4.1)
[06:14:52] <SnoopJ> dre, I don't think so. What kind of code are you wanting to execute on debugger startup?
[06:15:37] <dre> basically just auto-imports and 1-2 custom functions.
[06:15:48] *** Quits: hodapp (~mawson@user/hodapp) (Ping timeout: 240 seconds)
[06:16:35] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[06:16:55] *** Quits: cincoswim (~cincoswim@cm-72-241-33-17.buckeyecom.net) (Ping timeout: 256 seconds)
[06:17:02] *** Quits: monkeyPlus (~monkeyPlu@2001:8a0:6cc5:7e01:5f9:70aa:2117:a957) (Remote host closed the connection)
[06:18:43] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[06:19:06] *** Quits: blei (~blei@user/blei) (Quit: Client closed)
[06:19:30] *** Quits: BrokenCog (~BrokenCog@88.sub-174-194-133.myvzw.com) (Quit: leaving)
[06:22:18] <SnoopJ> dre, looks like .pdbrc can be made to do this, although it appears to execute twice for some reason in my test: https://bpa.st/P25Q
[06:22:39] *** Joins: white2 (~mahengrui@user/mahengrui1)
[06:22:43] <SnoopJ> oh, possibly because my sys.path extension includes the file itself, not its location (oops)
[06:23:25] *** Quits: vakera_pingveno (~dan@2600:1700:21f9:b150::10) (Ping timeout: 250 seconds)
[06:23:54] <SnoopJ> hm, no, changing that doesn't matter. Anyway, may not be a big deal in practice
[06:24:00] <dre> oh interesting, thanks
[06:24:01] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[06:24:33] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:28:32] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 240 seconds)
[06:29:23] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[06:30:11] *** Joins: icy_hot (~icy_hot@1.214.31.43)
[06:31:02] *** Quits: zaz\ (~zaz@poneybl.eu) (Quit: bye)
[06:31:27] *** Joins: zaz\ (~zaz@poneybl.eu)
[06:31:31] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[06:31:42] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:31:54] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[06:33:59] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[06:36:01] *** Quits: ymwm_ (~yingmanwu@240e:37a:40e4:9e00:71aa:8953:b0de:ee76) (Quit: Leaving)
[06:36:13] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:ddcf:4aad:3c6:b791)
[06:36:25] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[06:37:29] <dre> SnoopJ, that seems to work; you can't "def" things in .pdbrc but you can just import everything from the startup file like you did.
[06:37:51] <dre> neat! saved the day Snoopy Jay
[06:38:03] <dre> snoop and dre back at it again. time for lunch ~~
[06:39:41] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[06:39:42] <SnoopJ> you can define functions but apparently they have to be on a single line
[06:39:50] <SnoopJ> (this part of pdb.py seems weird)
[06:40:30] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[06:41:04] <SnoopJ> i.e. it executes the lines from the rc file one at a time, which leads to nonsense in a multi-line function definition: https://github.com/python/cpython/blob/main/Lib/pdb.py#L302-L319
[06:42:45] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[06:48:14] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[06:50:18] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[06:52:00] *** Quits: fling (~fling@user/fling) (Remote host closed the connection)
[06:52:31] *** Joins: fling (~fling@user/fling)
[06:53:14] *** Joins: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net)
[06:54:07] *** Joins: jazzy (~jaziz@user/jaziz)
[06:57:21] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:58:36] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[06:58:59] <mdq> hello, i'm new to python, and i am having trouble updating the variable playerXP. after calling the combat function, playerXP is not updating: https://pastebin.com/57rVVuJJ
[07:01:29] <matsaman> How're you calling it?
[07:02:15] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:02:23] *** Quits: kr0nk (~kr0nk@user/kr0nk) (Quit: leaving)
[07:02:25] <mdq> the same way is it written the definition statement, minus def
[07:02:50] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:02:56] <matsaman> but what values are you providing?
[07:03:17] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[07:03:48] <mdq> here, i'll reupload with the whole program, sec
[07:04:02] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:04:02] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[07:04:02] *** finn_elija is now known as FinnElija
[07:04:20] *** Joins: frost (~frost@user/frost)
[07:04:26] <mdq> new pastebin: https://pastebin.com/NtnM7frm
[07:04:42] *** Joins: saroy (~Sandipan@45.249.73.234)
[07:07:04] *** Joins: adeliktas6 (~adeliktas@i59F5FD1E.versanet.de)
[07:07:26] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[07:07:53] *** Quits: icy_hot (~icy_hot@1.214.31.43) (Quit: WeeChat 3.4.1)
[07:08:22] <matsaman> I chose (q)uest and it updated for me.
[07:08:42] <matsaman> mdq: try using 'breakpoint()' to assess variable values at any given point
[07:08:43] *** Quits: adeliktas (~adeliktas@i59F5F671.versanet.de) (Ping timeout: 256 seconds)
[07:08:43] *** adeliktas6 is now known as adeliktas
[07:08:57] <mdq> xp updated for you!? lol!!
[07:09:12] <matsaman> yeah
[07:09:13] *** Joins: c4017w_ (~c4017@209.52.68.8)
[07:09:18] <matsaman> from 0 to 6
[07:09:35] <mdq> https://i.imgur.com/NhNww3I.png
[07:09:42] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:10:00] <matsaman> oooh okay
[07:10:08] <matsaman> so what updated for me was the value of playerXP
[07:10:12] <matsaman> the output does still say XP: 0
[07:10:13] <mdq> oh, weird, that didn't upload. for me it will show i gain XP, but the character's xp constant does not update
[07:10:18] <matsaman> so let's find where that is read from
[07:11:09] *** Joins: kr0nk (~kr0nk@user/kr0nk)
[07:11:16] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[07:11:28] <matsaman> it could be that the global variable isn't getting updated, only within the function
[07:11:50] <mdq> but shouldn't it? i passed it as an argument to the function
[07:11:55] *** Joins: pyeverything (~pyeveryth@64-18-153-56.starry-inc.net)
[07:12:26] <matsaman> no I wouldn't think it would or should update the global variable
[07:12:41] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Ping timeout: 256 seconds)
[07:12:42] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[07:13:17] <matsaman> you'd probably have to use 'global' to do that
[07:13:32] <matsaman> and this is where someone will want to talk about not using global variables
[07:14:04] <matsaman> the 'global' keyword, that is
[07:14:14] <mdq> right, i guess i'll just have to return the value then adjust the constant
[07:14:17] <mdq> thank you
[07:14:21] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[07:14:54] <matsaman> now that you know the issue is that it's not making it out of the function, I'm sure you'll be able to figure it out, yeah
[07:15:08] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[07:16:02] *** Quits: p-i- (~Ohmu@183.89.28.57) (Quit: Leaving...)
[07:16:13] *** Quits: pyeverything (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 240 seconds)
[07:17:08] <TML> mdq: I find your use of the phrase "adjust the constant" to be troubling :)
[07:17:23] <matsaman> heheh
[07:17:30] *** Quits: bloody (~bloody@user/bloody) (Quit: okluvyabubye)
[07:18:09] <mdq> let's get pedantic after i finish a few books -____- too early for that
[07:18:17] <TML> mdq: :)
[07:18:26] <mdq> thanks for your help guys, i'm gonna try to fix this
[07:19:51] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[07:20:13] <deltab> mdq: the computer will be way more pedantic than we are :-)
[07:21:33] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[07:21:54] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[07:23:34] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:24:22] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:24:22] *** Quits: rje (~textual@65.141.156.170) (Read error: Connection reset by peer)
[07:25:01] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[07:25:34] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[07:25:43] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 268 seconds)
[07:25:55] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 240 seconds)
[07:27:23] <dba> How do I frame 2 for looks in a list comprehension https://bpa.st/2UGA ?
[07:27:32] <dba> loops*
[07:27:49] *** Quits: zenstoic (uid461840@id-461840.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[07:28:46] *** Joins: rje (~textual@65.141.156.170)
[07:28:51] <Repiphany> You write the loops in the same order, just with the final expression first [ele for list_ in lists for ele in list_]
[07:28:55] <Repiphany> dba:
[07:29:01] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Ping timeout: 240 seconds)
[07:30:06] *** Quits: AlpineLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:30:17] <dba> Repiphany: Thanks
[07:32:31] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[07:32:36] *** Quits: fluter (~fluter@user/fluter) (Read error: Connection reset by peer)
[07:36:52] <mdq> deltab: that's trueeee. i meant no slight to TML. as it is a language, vocab and syntax are crucial to get right.
[07:37:09] <TML> mdq: I took no offense :)
[07:37:22] <TML> I was just poking a little fun anyway
[07:37:24] *** Joins: ravan_ (~ravan@42.201.198.151)
[07:37:24] *** Quits: ravan_ (~ravan@42.201.198.151) (Changing host)
[07:37:24] *** Joins: ravan_ (~ravan@user/ravan)
[07:37:25] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[07:37:27] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[07:37:30] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:39fe:6a9b:6533:77e) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[07:37:40] <mdq> matsaman: returning the value from the function as a tuple then adding it to the variable outside of the scope worked :thumbs_up:
[07:38:02] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[07:40:12] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 252 seconds)
[07:42:35] *** Joins: djapo (~archangel@user/djapo)
[07:42:59] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[07:43:29] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[07:43:36] *** Quits: t2mkn_ (~t2mkn@user/t2mkn) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[07:43:44] <matsaman> nice
[07:43:51] *** Joins: sixpiece (~brainz3sl@static.61.104.203.116.clients.your-server.de)
[07:43:51] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[07:43:57] <sixpiece> can I get help with django here?
[07:44:29] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[07:44:41] <daddy> maybe but there's also #django which may be able to help more
[07:45:13] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[07:45:44] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[07:45:45] *** Joins: t2mkn (~t2mkn@user/t2mkn)
[07:47:09] <dba> These leetcode problem really gets me scratching my head. What is  `ListNode` doesnt get treated like normal `list`?
[07:47:55] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[07:48:53] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[07:49:09] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 268 seconds)
[07:49:30] *** Joins: fluter (~fluter@user/fluter)
[07:50:05] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[07:50:36] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Remote host closed the connection)
[07:50:39] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[07:50:58] *** Joins: blei (~blei@user/blei)
[07:51:21] <Repiphany> They give you the effective definition of the ListNode class
[07:51:44] *** Quits: blei (~blei@user/blei) (Client Quit)
[07:51:47] *** Quits: acalbaza (~acalbaza@pool-108-52-30-98.phlapa.fios.verizon.net) (Ping timeout: 256 seconds)
[07:52:18] *** Quits: Zeturic (~Orimendix@50.26.218.162) (Ping timeout: 252 seconds)
[07:52:32] <dba> Doing some reading on the topic never dealt or heard of listnode
[07:53:25] <Repiphany> The singly linked list has nodes with values and a pointer to the next node (or to None if it's the end)
[07:53:36] <deltab> dba: my guess is that it's an element in a linked list, which is somewhat different from what Python calls list
[07:55:40] <dba> Repiphany, how do I append element to a listnode like  list.append()? Also how to iterate?
[07:55:51] <Repiphany> You don't
[07:56:07] *** Quits: fling (~fling@user/fling) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[07:56:24] *** Joins: fling (~fling@user/fling)
[07:56:40] <Repiphany> The point is to understand the data structure without all of the frills of standard python objects
[07:58:25] <deltab> the list you have isn't a normal python list, it's a much simpler thing
[07:58:55] <Repiphany> You can for example walk to the end of a linked list with something like `while node is not None: node = node.next`
[07:59:01] <deltab> anything you want to do it you will have to implement
[07:59:55] <dba> Yeah I guess `node.text` would get me the value of the node
[08:01:33] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:01:41] *** Joins: otiose (~otiose@154.21.212.102)
[08:02:01] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[08:02:28] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[08:07:48] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[08:10:02] *** Joins: c4017w__ (~c4017@209.52.68.8)
[08:11:24] *** Quits: Merinorus (~Merinorus@lfbn-mar-1-707-11.w90-118.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[08:12:31] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[08:12:47] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:6956:5418:1fbd:b478)
[08:13:39] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[08:13:42] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[08:14:07] *** Joins: WantToHelp (~WantToHel@96.77.40.70)
[08:17:50] *** Joins: joshbaptiste (~josh@2001:470:1f07:4d5:24::c2b5)
[08:20:34] <mdq> is leetcode good? i like gameified learning
[08:21:34] *** Quits: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[08:21:44] *** Joins: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[08:23:58] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:25:27] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:25:34] *** Joins: parv (~quass@user/parv)
[08:26:30] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[08:26:41] *** Quits: sreve (~quassel@p54a71b7a.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[08:26:59] *** Joins: sreve (~quassel@p4ff44c5a.dip0.t-ipconnect.de)
[08:31:48] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[08:32:56] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[08:32:59] *** Quits: Giovanni (~Giovanni@45.128.199.65) (Ping timeout: 250 seconds)
[08:34:09] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[08:36:17] *** Quits: montpol (montpol@fine.mouses.xyz) (Quit: The Lounge - hosted by mouses.xyz)
[08:37:21] *** Joins: zlg (~zlg@user/zlg)
[08:37:24] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[08:37:29] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[08:39:03] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[08:39:06] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:ddcf:4aad:3c6:b791) (Ping timeout: 245 seconds)
[08:39:26] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[08:40:10] *** Joins: Merinorus (~Merinorus@lfbn-mar-1-707-11.w90-118.abo.wanadoo.fr)
[08:42:46] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[08:43:13] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[08:47:52] *** Joins: p|q (~plq@94.54.154.86)
[08:50:12] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Ping timeout: 240 seconds)
[08:50:33] *** Quits: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net) (Quit: because)
[08:51:15] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[08:51:33] <sixpiece> is there a command or way to upgrade python in freebsd?
[08:52:27] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[08:52:51] *** Quits: joshbaptiste (~josh@2001:470:1f07:4d5:24::c2b5) (Ping timeout: 245 seconds)
[08:53:12] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[08:54:16] <matsaman> sixpiece: yes, but maybe you should look into pyenv instead
[08:55:49] *** Quits: PaterTemporalis (~woooopsie@dsl-79-30.bl27.telepac.pt) (Ping timeout: 240 seconds)
[08:56:09] *** Joins: amo (~amogorkon@user/amogorkon)
[08:56:09] *** Joins: amogorkon (~amogorkon@user/amogorkon)
[08:56:47] <sixpiece> well I am trying to upgrade django that's why
[08:56:53] <sixpiece> and it keeps saying I have python 3.7
[08:57:02] <sixpiece> but I installed python 3.9.91
[08:57:16] <matsaman> installed how?
[08:57:17] <deltab> how did you install it, and where?
[08:57:46] <matsaman> if you have a virtualenv for your django install, you might need only to recreate it, using python 3.7 instead
[08:58:00] <sixpiece>  pkg install python-3.9-91 or whatever it is
[08:58:11] <matsaman> or python 3.9 instead
[08:58:47] <matsaman> and if you don't have a virtualenv, might just go ahead and make one
[08:58:57] *** Quits: noteness (~noteness@user/noteness) (Remote host closed the connection)
[08:59:20] *** Joins: joshbaptiste (~josh@2001:470:1f07:4d5:24::c2b5)
[08:59:33] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[09:00:17] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[09:00:55] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[09:01:14] *** Joins: noteness (~noteness@user/noteness)
[09:01:35] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb) (Ping timeout: 252 seconds)
[09:02:16] <matsaman> keep in mind that there is no version of Django 4 yet released that is LTS
[09:02:23] <matsaman> 3.2 should be happy with python 3.7
[09:02:30] *** Joins: fling (~fling@user/fling)
[09:04:51] *** Seto_Kaiba is now known as Hunterkll
[09:05:21] *** Quits: tijuco (~tijuco@user/tijuco) (Ping timeout: 245 seconds)
[09:07:00] *** Quits: amo (~amogorkon@user/amogorkon) (Quit: just use()!)
[09:07:50] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[09:09:57] <sixpiece> thank you
[09:10:30] *** Joins: c4017w_ (~c4017@209.52.68.8)
[09:12:49] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[09:13:57] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[09:16:39] *** Joins: kts (~kts@103.73.237.62)
[09:19:13] *** Quits: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:e514:4282:7ac7:5ad8) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[09:19:41] *** Joins: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:f939:34d5:7362:6adf)
[09:20:32] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[09:20:41] *** Quits: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:f939:34d5:7362:6adf) (Client Quit)
[09:20:58] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[09:21:00] *** Joins: humanBird (~humanBird@2603-8001-7000-3642-897b-ea6d-3a67-30c3.res6.spectrum.com)
[09:21:54] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:23:33] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[09:24:29] *** Quits: Forty-Bot (~kvirc@pool-108-18-137-133.washdc.fios.verizon.net) (Ping timeout: 256 seconds)
[09:25:57] *** Quits: sixpiece (~brainz3sl@static.61.104.203.116.clients.your-server.de) (Quit: Leaving)
[09:27:04] *** Joins: han-solo (~han-solo@user/han-solo)
[09:30:12] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[09:30:43] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[09:31:58] *** Joins: takezo (~takezo@gateway/vpn/pia/takezo)
[09:32:01] *** Joins: dvx (~dvx@5.181.92.64)
[09:32:13] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[09:32:30] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[09:34:55] *** Quits: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr) (Ping timeout: 240 seconds)
[09:36:15] *** Quits: phaisedArray (~phaise@gateway/tor-sasl/phaise) (Remote host closed the connection)
[09:37:02] *** Joins: phaisedArray (~phaise@gateway/tor-sasl/phaise)
[09:38:49] *** Joins: Forty-Bot (~kvirc@pool-108-18-137-133.washdc.fios.verizon.net)
[09:39:18] *** Joins: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr)
[09:40:58] *** Quits: toxictrash (~toxictras@host-91-237-158-49.anfa.net.pl) (Quit: leaving)
[09:41:03] *** Quits: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Read error: Connection reset by peer)
[09:41:14] *** Joins: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[09:42:05] *** Joins: toxictrash (~toxictras@host-91-237-158-49.anfa.net.pl)
[09:43:45] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[09:46:17] *** Joins: loki_val (~crabbedha@user/crabbedhaloablut)
[09:46:49] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[09:47:14] *** Quits: KnowledgeShark (~Knowledge@50.34.198.222) (Ping timeout: 252 seconds)
[09:47:14] *** Quits: spawnmc (~spawnmc@user/spawnmc) (Quit: Client closed)
[09:47:35] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Ping timeout: 240 seconds)
[09:48:12] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[09:48:23] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:48:26] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[09:50:38] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[09:51:21] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[09:53:18] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[09:54:07] *** Joins: relight (~relight@user/relight)
[09:55:53] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[09:56:22] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 240 seconds)
[09:56:55] *** Quits: nomic (~nomic@185.198.243.249) (Quit: Leaving)
[09:57:02] *** Quits: kts (~kts@103.73.237.62) (Quit: Konversation terminated!)
[09:57:56] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[10:00:40] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[10:00:59] *** Joins: daedw (~daedw@cpe-70-95-200-209.san.res.rr.com)
[10:01:50] *** Joins: christinebabe (~christine@223.233.64.78)
[10:04:35] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[10:06:03] *** Joins: Indecisive (~chaz@wsip-98-171-200-135.om.om.cox.net)
[10:06:27] *** Joins: fling (~fling@user/fling)
[10:07:25] *** Quits: b10n1k (~iob@dynamic-2a00-1028-8390-9e8a-0000-0000-0000-92cb.ipv6.o2.cz) (Ping timeout: 240 seconds)
[10:07:53] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:9b5d:d48c:37b6:5982)
[10:07:55] <Indecisive> Why are the quit and exit functions not included in the builtin functions documentation?
[10:09:04] <KirkMcDonald> Indecisive: They're weird. https://docs.python.org/3/library/constants.html#constants-added-by-the-site-module
[10:09:24] <KirkMcDonald> Indecisive: As a general rule, use sys.exit() instead in real code.
[10:10:48] *** Joins: c4017w__ (~c4017@209.52.68.8)
[10:13:11] <Indecisive> huh. Ok that explains it, thanks.
[10:13:17] *** Quits: daedw (~daedw@cpe-70-95-200-209.san.res.rr.com) (Ping timeout: 250 seconds)
[10:13:24] *** Joins: thelounge1091 (59cbd47b@67.205.143.82)
[10:14:41] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 268 seconds)
[10:14:45] *** Joins: kts (~kts@103.73.237.62)
[10:14:57] *** Quits: saroy (~Sandipan@45.249.73.234) (Read error: Connection reset by peer)
[10:14:59] *** Joins: sandipan (~Sandipan@45.249.73.234)
[10:15:29] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[10:16:27] *** Quits: thelounge1091 (59cbd47b@67.205.143.82) (Client Quit)
[10:16:30] *** Joins: kaiseisei1 (~Thunderbi@user/kaiseisei)
[10:16:53] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[10:16:53] *** Joins: palasso (~palasso@user/palasso)
[10:17:12] *** Joins: pro_z_ (~pro_z@37.214.63.146)
[10:17:51] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 250 seconds)
[10:18:02] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Ping timeout: 252 seconds)
[10:18:02] *** kaiseisei1 is now known as kaiseisei
[10:18:02] *** Joins: squid_game (~squid_gam@194-218-10-152.customer.telia.com)
[10:18:43] *** Joins: mexen_ (uid495612@user/mexen)
[10:19:04] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[10:19:07] <squid_game> I am using subprocess.popen() in a few place as an example         iw_info = subprocess.Popen(["/sbin/iw", self.interface_name, "info"], stdout=subprocess.PIPE).stdout.read() but pylint says that use it "with".         with subprocess.Popen(["/sbin/iw", self.interface_name, "info"], stdout=subprocess.PIPE).stdout.read() as iw_info: pass is an error. How can I use popen with "with"?
[10:19:07] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[10:19:09] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[10:20:42] *** mexen_ is now known as mexen_wfh
[10:21:21] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[10:21:58] *** Joins: lpapp (~lpapp@ec2-35-158-255-21.eu-central-1.compute.amazonaws.com)
[10:23:02] <lpapp> hi, my pytest run crashes in my library, but then I do not seem to get the debug prints from C++ or even print functions from python to the stdout. If I comment out the offending python statement in my test code, I get the debug print to my console. Is there a way to make sure it is seen even if my library crashes while the pytest based test code tests that?
[10:24:39] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[10:24:59] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[10:25:25] *** Joins: carl-- (~carl-@185.103.188.130)
[10:25:58] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[10:26:15] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 256 seconds)
[10:27:12] <lpapp> this is basically before getting to any fail/success.
[10:27:51] *** Joins: manti7 (~manti7@176.10.104.94)
[10:30:06] *** Joins: dreamon (~dreamon@pd9503ce4.dip0.t-ipconnect.de)
[10:30:53] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[10:31:14] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[10:31:49] *** Quits: Enitin (~Enitin@82.180.145.227) (Ping timeout: 240 seconds)
[10:33:10] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[10:33:37] <BrenBarn> do you mean you have a C++ library that crashes when your python code calls it?
[10:33:45] *** Joins: jpodivin (~jpodivin@cgnat44-pool3-71-160.poda.cz)
[10:33:48] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[10:33:50] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[10:33:51] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[10:34:14] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[10:35:02] <BrenBarn> you could try turning off pytests output capturing
[10:35:48] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:ddcf:4aad:3c6:b791)
[10:35:57] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[10:36:27] *** Quits: emerent (~quassel@p200300cd5743c31fba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[10:36:37] *** Joins: emerent (~quassel@p200300cd5743c3adba27ebfffed28a59.dip0.t-ipconnect.de)
[10:36:46] *** Quits: carl-- (~carl-@185.103.188.130) (Quit: Leaving)
[10:36:51] *** Quits: loki_val (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[10:37:04] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[10:39:53] *** Quits: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net) (Quit: leaving)
[10:41:37] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[10:42:51] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[10:42:54] *** Quits: mexen_wfh (uid495612@user/mexen) ()
[10:44:47] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:45:28] *** Joins: kosh (~kosh@user/kosh)
[10:46:43] *** Joins: gusto (~Augustus@109.255.100.54)
[10:47:12] *** Quits: Neoon (~Neoon@2607:5300:60:23a5::1111) (Ping timeout: 252 seconds)
[10:47:33] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[10:47:45] *** Joins: Neoon (~Neoon@2607:5300:60:23a5::1111)
[10:49:26] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[10:50:15] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[10:50:33] *** Quits: sandb0y (~pirate@user/sandb0y) (Quit: Time for another great escape)
[10:51:12] *** Joins: ice9 (~ice9@user/ice9)
[10:51:25] *** Quits: dre (~dre@2001:8003:c932:c301:6340:c00d:1602:9f) (Ping timeout: 240 seconds)
[10:52:15] *** Joins: millido (~millido@84.210.150.128)
[10:52:37] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[10:54:10] *** Joins: mrwick (~mrwick@user/mrwick)
[10:54:38] *** Quits: DaPinkOne (~Dap@user/dap) (Remote host closed the connection)
[10:54:39] *** Quits: LogicAside (~LogicAsid@user/logicaside) (Quit: That's a thinker...)
[10:54:46] *** Quits: ttree (~ttree0@c-24-17-16-242.hsd1.wa.comcast.net) (Ping timeout: 268 seconds)
[10:55:43] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 256 seconds)
[10:57:32] <lpapp> BrenBarn: I have a python wrapper for the library, yeah.
[10:57:47] *** Joins: DaPinkOne (~Dap@user/dap)
[10:58:15] *** Joins: LogicAside (~LogicAsid@user/logicaside)
[10:58:23] <lpapp> what do you mean by turning off capturing? stdout gets the print fine without the crash. This would indicate to me that pytest does not swallow necessarily
[11:00:26] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:00:38] <jinsun__> pytest captures stdout by default, you have to run pytest --capture=no or pytest -s or change your config to turn that off
[11:00:42] *** Quits: humanBird (~humanBird@2603-8001-7000-3642-897b-ea6d-3a67-30c3.res6.spectrum.com) (Quit: Client closed)
[11:01:17] *** Quits: jpodivin (~jpodivin@cgnat44-pool3-71-160.poda.cz) (Quit: Leaving)
[11:01:33] *** Joins: jpodivin (~jpodivin@cgnat44-pool3-71-160.poda.cz)
[11:01:37] *** Quits: christinebabe (~christine@223.233.64.78) (Quit: Client closed)
[11:01:45] *** Joins: luigibu (~luigi@93.176.153.88)
[11:02:39] *** Joins: jmd (~user@de.cellform.com)
[11:02:42] *** Joins: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be)
[11:02:46] <jinsun__> but if you were getting print outputs while it was running then maybe you have done that already, then maybe it is not printing when it crashes because it crashes before reaching any part of the code that prints?
[11:04:21] <lpapp> no, it crashes after.
[11:04:35] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[11:05:21] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[11:07:00] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Quit: Leaving)
[11:08:11] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[11:08:34] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:08:55] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[11:09:31] *** Joins: fling (~fling@user/fling)
[11:09:36] *** Joins: upsala (~zcb@185.209.196.134)
[11:10:16] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:10:43] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 250 seconds)
[11:11:07] *** Joins: c4017w_ (~c4017@209.52.68.8)
[11:11:20] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[11:11:21] *** Joins: Enitin (~Enitin@82.102.22.86)
[11:11:51] *** Joins: MajorBiscuit (~MajorBisc@c-001-013-060.client.tudelft.eduvpn.nl)
[11:12:09] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:ddcf:4aad:3c6:b791) (Ping timeout: 256 seconds)
[11:13:17] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 256 seconds)
[11:13:27] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-9cc7-b2df-6523-fde2.res6.spectrum.com)
[11:13:36] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[11:14:42] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[11:15:47] *** Quits: squid_game (~squid_gam@194-218-10-152.customer.telia.com) (Ping timeout: 256 seconds)
[11:16:07] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-887b-6e2d-8199-f3a8.res6.spectrum.com) (Ping timeout: 256 seconds)
[11:17:00] *** Quits: dreamon (~dreamon@pd9503ce4.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[11:17:49] *** Joins: squid_game (~squid_gam@194-218-10-152.customer.telia.com)
[11:21:52] *** Joins: andreasbuhr (~quassel@p549db851.dip0.t-ipconnect.de)
[11:21:52] *** Quits: andreasbuhr (~quassel@p549db851.dip0.t-ipconnect.de) (Client Quit)
[11:25:28] *** Joins: carl- (~carl-@185.103.188.130)
[11:26:03] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:28:22] *** Joins: rendar (~rendar@user/rendar)
[11:29:41] *** Joins: Forsaken87 (~quassel@ip-037-201-193-116.um10.pools.vodafone-ip.de)
[11:30:46] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[11:30:57] *** Parts: muniv[m] (~uztojemat@2001:470:69fc:105::20fb) ()
[11:31:00] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[11:32:22] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[11:32:48] *** Joins: piscvau (~odile@lfbn-gre-1-323-48.w90-112.abo.wanadoo.fr)
[11:32:49] *** Joins: grooverman (~grooverma@152.250.149.49)
[11:32:55] *** Joins: KnowledgeShark (~Knowledge@50.34.198.222)
[11:34:08] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[11:34:17] *** Quits: grooverman_ (~grooverma@189.110.77.226) (Ping timeout: 240 seconds)
[11:34:26] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[11:34:43] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:34:43] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[11:35:17] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[11:36:12] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[11:37:50] *** Joins: jmd (~user@de.cellform.com)
[11:37:54] *** Quits: kts (~kts@103.73.237.62) (Quit: Konversation terminated!)
[11:38:42] *** Quits: Jimmy2027 (~hendrik@142.47.3.213.static.wline.lns.sme.cust.swisscom.ch) (Read error: Connection reset by peer)
[11:39:00] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 240 seconds)
[11:39:35] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[11:40:08] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[11:40:24] *** Joins: Yuzu02 (~Yuzu02@190.80.246.109)
[11:41:01] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 268 seconds)
[11:41:40] *** Joins: placeb0 (uid283215@id-283215.lymington.irccloud.com)
[11:41:51] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[11:42:44] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[11:43:12] <placeb0> hello, is there a way to write this https://bpa.st/QLTQ if I'm forbidden to use for and while loops?
[11:43:41] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[11:44:11] *** Joins: a1eaiactaest (~a1eaiacta@user/a1eaiactaest)
[11:44:32] <Repiphany> `list(map(lambda x:x**2, range(10, 100)))`
[11:44:38] <Repiphany> But you're just hiding the loop in map
[11:44:59] *** Quits: AlanMD (~AlanMD@86.124.30.89) (Remote host closed the connection)
[11:45:36] *** Joins: AlanMD (~AlanMD@86.124.30.89)
[11:45:49] <a1eaiactaest> is using type hints a common practice in production?
[11:46:51] <placeb0> I guess it works as long as the for isn't visible
[11:47:00] <placeb0> thanks Repiphany
[11:47:16] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:47:50] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[11:48:17] *** Joins: dreamon (~dreamon@ppp-88-217-83-128.dynamic.mnet-online.de)
[11:49:13] *** Joins: Jonopoly (~Jonopoly@user/jonopoly)
[11:49:38] <jinsun__> a1eaiactaest: not as common as I would like, but it is getting more and more common with time
[11:50:15] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[11:50:25] *** Joins: stockholm (~Andreas@p200300d2c70950005cd4d7a5705027a3.dip0.t-ipconnect.de)
[11:50:27] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[11:50:38] <a1eaiactaest> ok, so you would recommend using type hints
[11:50:40] <jinsun__> and actually outisde of scientific packages, my experience with type hints or stubs in open source packages has been mostly good lately
[11:51:00] <a1eaiactaest> yeah it increases readabilty a lot
[11:51:29] *** Quits: Yuzu02 (~Yuzu02@190.80.246.109) (Ping timeout: 256 seconds)
[11:51:30] <a1eaiactaest> in my experience
[11:51:32] *** Joins: PJBoy (~PJBoy@user/pjboy)
[11:51:33] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[11:52:37] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[11:53:34] <jinsun__> yeah use them, and enforce strict mode too if the libraries that you use have good type hints or stubs
[11:53:49] *** Quits: PopularMechanic (~desk@206.214.54.192) (Ping timeout: 250 seconds)
[11:54:13] <a1eaiactaest> what is a strict mode?
[11:54:16] *** Joins: desk (~desk@206.214.54.192)
[11:54:20] <jinsun__> if they don't, then strict mode will be a bit of a pain, so use the default basic mode
[11:54:41] <jinsun__> mypy and pyright both have a strict mode and a basic mode
[11:54:52] <a1eaiactaest> so it enforces usage of libraries that use typing?
[11:54:54] *** Quits: The-Compiler (~compiler@2001:41d0:2:3b68::1) (Ping timeout: 260 seconds)
[11:55:26] <jinsun__> without any configuration they run in basic mode, but you can configure them to run in strict mode
[11:55:56] <jinsun__> they will complain a lot about un-annotated functions and methods in strict mode even if coming from other libraries
[11:56:20] <jinsun__> in basic mode they'll treat those as Any and won't do any type checking
[11:56:37] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:57:03] <a1eaiactaest> ok thanks for clearing that up
[11:57:44] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:59:53] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[12:00:03] *** Joins: vladoski (~vladoski@2001:b07:add:d406:763a:3f6c:5375:ce91)
[12:01:18] *** Quits: otiose (~otiose@154.21.212.102) (Remote host closed the connection)
[12:01:32] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[12:01:54] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[12:02:14] *** Joins: Maxt3r_ (~Maxt3r@128-76-167-194-static.dk.customer.tdc.net)
[12:02:17] *** Quits: squid_game (~squid_gam@194-218-10-152.customer.telia.com) (Remote host closed the connection)
[12:02:36] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 268 seconds)
[12:03:46] *** Joins: greedom (~greedom@p200300de67110e003e89986c4a4c4c52.dip0.t-ipconnect.de)
[12:03:57] *** Quits: Maxt3r (~Maxt3r@128-76-167-194-static.dk.customer.tdc.net) (Ping timeout: 256 seconds)
[12:06:03] *** Joins: control (~v1@user/control)
[12:06:55] *** Joins: gusto (~Augustus@109.255.100.54)
[12:07:40] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[12:08:01] <control> hello, im trying to print numbers in range by calling a function https://bpa.st/4KSQ . im only getting the last number. what im doing wrong?
[12:08:36] <a1eaiactaest> jinsun__: are there any exceptions when type of __init__ should be different than None
[12:08:36] *** Quits: widp (~widp@124.123.106.12) (Read error: Connection reset by peer)
[12:08:44] <a1eaiactaest> *?
[12:08:54] *** Joins: widp (~widp@124.123.106.12)
[12:09:39] *** Joins: han-solo (~han-solo@user/han-solo)
[12:09:39] *** Quits: widp (~widp@124.123.106.12) (Read error: Connection reset by peer)
[12:10:02] <jinsun__> no it should always be None
[12:10:14] <a1eaiactaest> control: that is because you are assigning "i" value to "fi" variable
[12:10:17] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 240 seconds)
[12:10:26] *** Joins: widp (~widp@124.123.106.12)
[12:10:30] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Quit: kaiseisei)
[12:10:51] <jinsun__> mypy has a stupid limitation though, if you don't take any parameters in __init__ and you run strict mode then it will ask you to annotate the return type as None
[12:11:00] <a1eaiactaest> control: you either have to yield "i" value or add it to earlier declared array and then return the array
[12:11:17] <a1eaiactaest> jinsun__: thanks a lot!
[12:11:26] *** Joins: c4017w__ (~c4017@209.52.68.8)
[12:12:17] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[12:12:47] *** Quits: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[12:12:47] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[12:12:50] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[12:13:12] <jinsun__> control: or you could just print inside the function in the for loop, if the goal is to just print, so print(i) instead of fi = i
[12:13:27] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[12:13:44] *** Quits: Jong (~Jong@2620:10d:c090:400::5:7a46) (Quit: Textual IRC Client: www.textualapp.com)
[12:14:02] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[12:14:04] <a1eaiactaest> control: you could do https://bpa.st/LEUQ or https://bpa.st/6CKA
[12:14:19] <a1eaiactaest> it should be correct
[12:14:25] <wyre> do you recommend me python-av or python-ffmpeg?
[12:14:27] <a1eaiactaest> didn't test tho
[12:14:34] *** Joins: rsx (~dummy@ppp-188-174-139-8.dynamic.mnet-online.de)
[12:14:51] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[12:14:58] *** Quits: raym (~raym@user/raym) (Quit: kernel update, rebooting...)
[12:14:59] *** Joins: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net)
[12:15:29] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Client Quit)
[12:15:44] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[12:16:27] *** Joins: raym (~raym@user/raym)
[12:17:12] *** Joins: chele (~chele@user/chele)
[12:17:46] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[12:19:36] *** Joins: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[12:22:23] *** Quits: Maxt3r_ (~Maxt3r@128-76-167-194-static.dk.customer.tdc.net) (Quit: WeeChat 3.4)
[12:22:33] *** Quits: control (~v1@user/control) (Quit: leaving)
[12:23:49] *** Quits: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[12:24:30] *** Quits: coldmountain (sid484352@id-484352.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[12:24:58] *** Joins: sawk (~quassel@151.81.118.116)
[12:25:16] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[12:29:17] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[12:29:47] *** Quits: p|q (~plq@94.54.154.86) (Ping timeout: 256 seconds)
[12:29:49] *** Lartza_ is now known as Lartza
[12:29:50] *** Joins: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[12:31:42] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Ping timeout: 252 seconds)
[12:31:47] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[12:33:28] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Quit: kaiseisei)
[12:33:32] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[12:33:44] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[12:33:59] *** Quits: piscvau (~odile@lfbn-gre-1-323-48.w90-112.abo.wanadoo.fr) (Quit: Leaving)
[12:34:12] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[12:34:12] *** Quits: elastic_dog (~elastic_d@ary77.neoplus.adsl.tpnet.pl) (Ping timeout: 240 seconds)
[12:34:14] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (Quit: ZNC 1.8.2 - https://znc.in)
[12:34:22] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[12:34:47] *** Joins: Noisytoot (~noisytoot@sourcehut/user/noisytoot)
[12:36:42] *** Quits: greedom (~greedom@p200300de67110e003e89986c4a4c4c52.dip0.t-ipconnect.de) (Remote host closed the connection)
[12:37:42] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:38:00] *** Joins: califax (~califax@user/califx)
[12:38:18] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[12:41:03] *** Quits: enamon (~enamon@2604:a880:cad:d0::2f:9001) (Ping timeout: 250 seconds)
[12:41:07] *** Quits: meph (~mepholic@flux.hxx.in) (Ping timeout: 256 seconds)
[12:41:10] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[12:42:02] *** Joins: meph (~mepholic@flux.hxx.in)
[12:42:48] *** Joins: enamon (~enamon@2604:a880:cad:d0::2f:9001)
[12:44:27] *** Joins: shad (~shad@user/shad)
[12:44:29] *** Joins: marcello42 (~mp@p200300dfaf10fe018edad6997a9398b1.dip0.t-ipconnect.de)
[12:44:46] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:46:29] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[12:47:21] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[12:47:33] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[12:49:05] *** Joins: Iolo (~iolo@user/Iolo)
[12:49:14] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[12:49:36] *** SallyAhaj_ is now known as SallyAhaj
[12:49:49] *** Joins: The-Compiler (~compiler@2001:41d0:2:3b6f:fcb3:9651:355f:f3ad)
[12:52:25] *** Joins: dthpulse (~quassel@podciarou.sk)
[12:54:41] *** Joins: mav`rik (~unknown@ec2-54-171-126-99.eu-west-1.compute.amazonaws.com)
[12:56:50] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[12:59:35] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[13:00:51] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:01:01] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[13:02:41] *** Quits: fredrikhl (~fhl@myrsnipa.uio.no) (Quit: leaving)
[13:03:40] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Quit: kaiseisei)
[13:04:26] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 260 seconds)
[13:04:34] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[13:05:31] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Client Quit)
[13:06:23] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[13:07:06] *** Joins: fredrikhl (~fhl@129.240.202.34)
[13:08:00] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[13:09:29] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:11:09] *** Joins: ivii (~ivan@user/ivii)
[13:11:41] *** Joins: c4017w_ (~c4017@209.52.68.8)
[13:13:02] <velix> Nice... I've saved 0.6 to XML and it gives me fill-opacity="0.59999999999999998" ;)
[13:13:37] <velix> sed -i 's|0.5999999...|0.6' *.xml
[13:14:02] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[13:14:45] *** Quits: The-Compiler (~compiler@2001:41d0:2:3b6f:fcb3:9651:355f:f3ad) (Ping timeout: 268 seconds)
[13:14:51] <jmd> velix: You need to escape the first '.'
[13:15:08] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[13:15:09] *** Joins: The-Compiler (~compiler@the-compiler.org)
[13:15:12] <velix> jmd: sure. Actually I should use an XML parser to fix this ;)
[13:15:15] <velix> xmltool*
[13:15:31] *** Joins: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[13:15:32] <velix> Perhaps xmllint already fixes this.
[13:15:36] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[13:16:56] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[13:16:59] *** Joins: plastico (~plastico@neomutt/plastico)
[13:17:00] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 240 seconds)
[13:20:18] *** Quits: Xano (~Xano@2a00:23c4:4204:700:39c3:3f76:91c4:daaf) (Ping timeout: 268 seconds)
[13:20:42] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: I'm a quit message virus. Please replace your old line with this line and help me take over the world. <screw you aloo_shu my old line was better and more creative!>)
[13:22:49] *** Joins: slav0nic (slav0nic@python.su)
[13:23:27] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[13:25:00] *** Joins: paul424 (~tom@ip-5-172-234-230.multi.internet.cyfrowypolsat.pl)
[13:25:30] *** Joins: Thanatos (~Thanatos@105.112.182.163)
[13:26:04] *** Joins: ThanatosJ (~Thanatos@105.112.182.163)
[13:26:26] *** Quits: milesrout (ce261f06ff@2604:bf00:561:2000::257) (Changing host)
[13:26:26] *** Joins: milesrout (ce261f06ff@user/milesrout)
[13:26:44] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:27:00] *** Joins: cosimone (~user@93-44-187-176.ip98.fastwebnet.it)
[13:27:18] <rendar> is ok to use a function inside an f-string? e.g. f"{my_var.lower()}/.../..." ?
[13:27:36] *** Quits: Thanatos (~Thanatos@105.112.182.163) (Read error: Connection reset by peer)
[13:27:39] <grawity> depends on how readable the result is, IMO
[13:28:18] <grawity> if it's literally just {my_var.lower()} then maybe, though I'd probably create a separate variable, to sort of document why the .lower is even there
[13:28:20] *** Joins: Pickchea (~private@user/pickchea)
[13:28:44] <grawity> like instead of "{customer_name.lower()}/foo" I'd use `customer_subdir = customer_domain.lower()`
[13:29:06] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[13:29:30] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[13:29:46] <KirkMcDonald> I think it's fine, if it's just a simple empty method call like that.
[13:30:12] <grawity> but the longer it gets, the less fine it is
[13:31:08] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[13:31:09] <davor> are there tools for easier drawing stuff/writing text onto video frames than opencv's puttext? for instance, I would like to place 10 counters for various parameters in the format of "counter1: 0". something where I could define a box and the library would automatically position, center, justify, break apart into new column, stuff like that, without me having to specify all the coords manually?
[13:31:42] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[13:32:26] <rendar> i see
[13:32:44] *** Quits: cursey_ (~cursey@user/cursey) (Quit: bye)
[13:32:45] *** Quits: a1eaiactaest (~a1eaiacta@user/a1eaiactaest) (Ping timeout: 252 seconds)
[13:34:21] *** Quits: Jonopoly (~Jonopoly@user/jonopoly) (Quit: WeeChat 3.0)
[13:37:05] *** Joins: Xano (~Xano@2a00:23c4:4204:700:f1ca:70f5:1259:dd57)
[13:37:09] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:493b:d7a3:16ee:b2cf)
[13:37:46] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[13:37:47] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 256 seconds)
[13:37:51] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:38:41] *** Quits: relight (~relight@user/relight) (Ping timeout: 250 seconds)
[13:38:49] *** Joins: TheCat (~TheCat@user/z-cat)
[13:39:16] *** Quits: boris_ (m-vwhg2g@152.70.163.76) (Remote host closed the connection)
[13:39:36] *** Joins: relight (~relight@user/relight)
[13:40:35] *** Joins: boris_ (m-vwhg2g@152.70.163.76)
[13:41:18] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[13:42:14] *** Quits: saribro (~swinnenb@user/swinnenb) (Quit: This is the hidden truth, the world between the lines.)
[13:42:42] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[13:42:55] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[13:44:30] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[13:44:44] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[13:44:49] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[13:44:56] *** Joins: p|q (~plq@94.54.154.86)
[13:45:24] *** Joins: jpn (~jpn@user/jpn)
[13:45:27] *** Joins: a1eaiactaest (~a1eaiacta@user/a1eaiactaest)
[13:45:30] *** Parts: velix (~velix@user/velix) (Leaving)
[13:45:31] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[13:45:54] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[13:47:22] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[13:48:13] *** Joins: rsrx (~rsrx@79-101-167-192.dynamic.isp.telekom.rs)
[13:48:15] *** Joins: cursey (~cursey@user/cursey)
[13:48:25] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[13:48:30] <rsrx> i have a tuple that is anywhere between 1 and 4 elements long
[13:49:00] <rsrx> how can I unpack this tuple to four variables, so that None gets assigned to the vars if tuple is too short
[13:49:02] <rsrx> i.e.:
[13:49:08] <rsrx> a, b, c, d = t
[13:49:15] <rsrx> this works if tuple is 4 elements long, but not for less than 4
[13:49:38] <rsrx> wonder if itertools has some helper method
[13:50:27] *** Joins: jpn_ (~jpn@user/jpn)
[13:51:11] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 245 seconds)
[13:51:40] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[13:52:29] <The-Compiler> rsrx: best I can come up with is   a, b, c, d = t + tuple([None] * (4 - len(t)))
[13:52:30] <wyre> are actually https://pypi.org/project/av/ and https://pypi.org/project/ffmpeg-python/ alternatives? ðŸ¤” I think ffmpeg-python looks like a ffmpeg wrapper while PyAV is actually a pythonic binding for ffmpeg libraries ...
[13:52:54] <rsrx> The-Compiler, cool
[13:53:18] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[13:53:19] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[13:53:52] *** Joins: han-solo (~han-solo@103.82.184.219)
[13:53:52] *** Quits: han-solo (~han-solo@103.82.184.219) (Client Quit)
[13:54:11] <The-Compiler> wyre: what's the difference between "a ffmpeg wrapper" and "binding for ffmpeg libraries"?
[13:54:12] *** Joins: han-solo (~han-solo@user/han-solo)
[13:54:22] <Repiphany> a, b, c, d, *_ = t + (None,)*4
[13:54:27] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[13:54:38] <The-Compiler> Repiphany: neat
[13:55:08] <wyre> The-Compiler, I'm not sure, ffmpeg for example relies on libx264 for h264 ... though I'm not sure if libx264 actually owns ffmpeg ðŸ¤”
[13:55:28] <wyre> I mean in the other way; I'm not sure if ffmpeg owns libx264
[13:55:34] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[13:56:11] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:56:25] *** Joins: daoudr (~daoudr@xdsl-31-164-222-159.adslplus.ch)
[13:56:27] *** Quits: hams (~hams@user/hams) (Ping timeout: 250 seconds)
[13:57:30] *** Joins: Elliria (~littlegir@cpe-66-24-84-219.stny.res.rr.com)
[13:58:35] *** Joins: kts (~kts@103.73.237.88)
[13:58:54] *** Joins: jpn (~jpn@user/jpn)
[13:59:07] <mav`rik> rsrx: typically a tuple is a stand-in for a struct or other fixed-size structure where each element at a given index has a defined type. This is what differentiates structs from lists. A list should have all elements bearing the same type, but be of varying length, a tuple has fixed elements of known types at each index (hence "named tuples"). Where does your tuple come from?
[13:59:08] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[13:59:29] <davor> is there a way to do a["item"] if a is a class instance and has a dict of items in it?
[13:59:30] <rsrx> its an auth fixture passed to method
[13:59:37] <rsrx> Tuple[username, password, private_key, public_key]
[13:59:41] <rsrx> where only first param is required
[13:59:53] <mav`rik> rsrx: Could the others not be None by default?
[14:00:15] <han-solo> davor: you can implement the `__getitem__`
[14:00:15] <rsrx> if they're passed as None in tuple, auth method will attempt to retrieve them
[14:00:22] <davor> thanks han-solo
[14:00:49] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[14:01:35] *** Quits: jpn_ (~jpn@user/jpn) (Ping timeout: 256 seconds)
[14:02:36] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[14:02:53] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[14:02:55] *** Joins: al_ (~al@134.17.36.147)
[14:04:18] *** Joins: zacts (~zacts@user/zacts)
[14:04:42] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 268 seconds)
[14:04:55] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[14:06:21] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[14:06:43] *** Joins: crashrep (~crashrep@user/crashrep)
[14:07:32] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[14:08:49] *** Joins: darksun (~darksun@user/darksun)
[14:08:52] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:09:33] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[14:09:55] *** Joins: quhar (~quhar@192.162.148.48)
[14:10:52] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Ping timeout: 268 seconds)
[14:11:24] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[14:11:26] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:11:32] *** Joins: soju-test-user (~soju-test@lfbn-idf2-1-1140-121.w90-92.abo.wanadoo.fr)
[14:11:47] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[14:12:00] *** Joins: c4017w__ (~c4017@209.52.68.8)
[14:12:29] *** Quits: fling (~fling@user/fling) (Remote host closed the connection)
[14:12:47] *** Joins: fling (~fling@user/fling)
[14:13:11] *** Quits: kts (~kts@103.73.237.88) (Quit: Konversation terminated!)
[14:13:24] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[14:15:38] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[14:15:44] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:15:47] *** Quits: sokan (~sokan@2a02:587:9e19:4700:227:eff:fe16:865d) (Quit: Reality.is.a.lie)
[14:16:29] *** Quits: rvalue (~rvalue@user/rvalue) (Quit: ZNC - https://znc.in)
[14:16:40] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[14:16:41] *** Joins: rvalue (~rvalue@user/rvalue)
[14:17:00] *** Quits: parv (~quass@user/parv) (Ping timeout: 240 seconds)
[14:17:47] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[14:18:32] <Elliria> Hey there, I'm working with a string as input for a recent_date_time variable that contains a date and a time separated by a space. I parse that string into separate recent_date and recent_time string variables, but am getting unsupported operand types when I try to do math with those strings since they're strings. When I try converting them to ints, I get the "ValueError: invalid literal for int() with base 10:" error and when I try
[14:18:32] <Elliria> converting them to floats, I get the "ValueError: could not convert string to float:" error. I'm hoping there a way that I can parse the recent_date_time value to give me date and time values in a format that I can do math on. I've got a small snippet of sample code if you'd like to see it and, if so, where would you like me to put it?
[14:18:45] *** Quits: Coniass (~quassel@2a03:4000:57:afc:5883:e3ff:fee1:8fee) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:19:21] *** Joins: Coniass (~quassel@2a03:4000:57:afc:5883:e3ff:fee1:8fee)
[14:19:23] *** Quits: LAVBoy (~LAVBoy@85.249.46.8) (Ping timeout: 256 seconds)
[14:19:41] <grawity> generally a date string isn't an int, it's 3 ints stuck together, so it doesn't make sense to directly do int("2002-02-02") anyway
[14:19:53] <grawity> you need to parse it even further to year/day/month
[14:20:13] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[14:20:49] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:21:09] <Elliria> The format I'm receiving it in from a CSV file is: 2022/03/21 04:48
[14:21:17] <Elliria> It's defeating me.
[14:21:22] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[14:21:44] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[14:21:46] <Repiphany> datetime module
[14:21:53] <grawity> well, if you want 3 integers, `year, month, day = recent_date.split("/")`
[14:22:30] <grawity> though datetime.datetime.strptime() would give you a datetime object that has .year etc as separate fields *and* supports operations
[14:22:33] <Elliria> Can I paste my code somewhere to show you what I'm trying to do? If I break it into three separate integers, my code will have to become way more complex.
[14:22:44] <grawity> what *is* your code trying to do?
[14:22:46] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
[14:23:04] <grawity> i.e. what math do you want to do on the date
[14:23:26] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[14:23:39] <Elliria> I split that date at the space into two separate strings, so then I have the date as one variable and the time as another. I'd like to compare the date with another date that gets fed to me from another source and will be in the same format, and likewise with the time.
[14:23:45] <KirkMcDonald> Elliria: There is a paste site in the channel topic.
[14:24:04] <grawity> ok, so where does the math come in
[14:24:06] <Elliria> Okay, thank you, KirkMcDonald. I'll go look at that and get this pasted.
[14:25:24] *** Joins: veew (~rashomon@blackhat.expert)
[14:25:25] *** Quits: Coniass (~quassel@2a03:4000:57:afc:5883:e3ff:fee1:8fee) (Ping timeout: 240 seconds)
[14:25:50] <veew> hi, i'm looking to hire up a python developer for a very small project. i pay crypto w/ no KYC
[14:25:57] <veew> quick easy work
[14:26:03] <veew> anyone looking for wire?
[14:26:06] <veew> work*
[14:27:04] *** Joins: wakeup (~wakeup@user/wakeup)
[14:27:25] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[14:27:44] <Elliria> Here it is: https://bpa.st/N4SA
[14:28:05] <grawity> ok, so it really doesn't make sense to do any math on "2022/03/21" as a single number
[14:28:34] <Elliria> In a perfect world, I'd not only like to do what's in that script, but I'd also like to be able to do math on the recent_date_time variable with other variables with a similar structure, or at least I'd like to compare a complete date AND time with another date and time.
[14:28:57] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[14:28:57] <grawity> though it can be converted *to* a representation that's just a single number, like "epoch time" (number of seconds since X)
[14:28:59] <Elliria> If I only compare times, then my script won't know which day they occurred on and may not know which came first.
[14:29:11] <grawity> then you can do math on those timestamps as integers, and convert back to number of days, etc
[14:29:13] <Elliria> I'd be happy with that.
[14:29:21] *** Joins: vantage|work (~vantage@ip-193-121-152-141.dsl.scarlet.be)
[14:29:22] <Repiphany> Datetimes are ordered
[14:29:30] <grawity> but datetime() objects already support subtraction and give you a timedelta() as a result, I think
[14:29:34] <grawity> so that might be even easier
[14:30:17] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[14:30:20] <Elliria> All I really care about is what happened before what and how much of a difference there was (in either minutes or days, hours, and minutes if it's greater than just minutes).
[14:30:41] *** Joins: Proxysna (~Proxysna@62.119.254.142)
[14:30:44] *** Joins: marenz (~marenz@dynamic-077-191-215-088.77.191.pool.telefonica.de)
[14:30:44] <Elliria> But I may need to work with just minutes or just dates, so those need to be stored in separate variables and be available for math as well.
[14:30:51] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[14:31:05] <Elliria> I've been fighting with this for hours.
[14:31:26] <jinsun__> Elliria: you can use strptime to convert strings to datetime, see https://docs.python.org/3/library/datetime.html#datetime.datetime.strptime and https://docs.python.org/3/library/datetime.html#strftime-strptime-behavior
[14:31:45] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[14:31:54] <jinsun__> once you have datetime objects you can just subtract them like you were doing and get timedeltas
[14:32:02] <grawity> ok, so how about this https://paste.rs/9Ob
[14:32:04] <Elliria> My Google-foo must be pretty bad, because all of the StackExchange and other similar pages have been showing me how to do everything but what I'm trying to do.
[14:32:09] *** Joins: thorbw (~tw@46.230.130.50)
[14:32:18] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:6956:5418:1fbd:b478) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[14:32:21] <jinsun__> or even easier than strptime would be dateutil.parser.parse
[14:32:33] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[14:32:38] <grawity> either you use time.strptime() to convert the date+time *directly* to epoch timestamps (which are just integers measuring seconds)
[14:32:39] *** Quits: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be) (Ping timeout: 250 seconds)
[14:32:45] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[14:33:09] <grawity> or you use datetime.datetime.strptime() â€“ or yes dateutil.parser â€“ to convert it to python 'datetime' objects (which can be subtracted and give you days etc)
[14:33:16] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:33:24] *** Joins: alius (~adrien@2001:861:4444:49c0:228f:af36:174f:3ca3)
[14:34:08] <Elliria> Oh, thank you. I will check those out.
[14:34:54] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[14:34:58] <Elliria> That would be perfect, and I'd have no problem creating additional variables to temporarily hold those.
[14:35:01] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 240 seconds)
[14:35:13] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:35:15] *** Quits: mxp (~mxp@185.16.205.131) (Ping timeout: 256 seconds)
[14:35:21] *** Joins: hesse (~TheHerman@gateway/tor-sasl/thehermann)
[14:35:27] *** Quits: vantage|work (~vantage@ip-193-121-152-141.dsl.scarlet.be) (Ping timeout: 252 seconds)
[14:36:07] <Elliria> I'm not sure I can use strptime on there. I tried using it earlier today and it kept yelling at me that it requires TWO arguments and I was only feeding it one.
[14:36:13] *** Joins: pyeverything (~pyeveryth@64-18-153-56.starry-inc.net)
[14:36:23] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Ping timeout: 256 seconds)
[14:36:31] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[14:36:43] <grawity> the 2nd argument is the format, because otherwise it doesn't know if it's y/m/d or m/d/y or d/m/y or what
[14:36:55] <grawity> see the pastebin for an example of the strptime format
[14:37:58] <Elliria> Ah, okay.
[14:38:12] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[14:38:34] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[14:39:35] *** Joins: capn (~capn@user/capn)
[14:40:00] *** Joins: kts (~kts@103.73.237.88)
[14:40:06] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[14:40:13] *** Joins: Coniass (~quassel@2a03:4000:57:afc:5883:e3ff:fee1:8fee)
[14:40:17] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[14:40:46] *** Quits: pyeverything (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 245 seconds)
[14:40:57] <lpapp> rburton: late reply, sorry. Thanks. --verbose does not seem to work for ninja.
[14:41:03] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:41:08] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[14:41:45] *** Joins: bitkiller (~bitkiller@user/bitkiller)
[14:42:09] *** Joins: mxp (~mxp@185.16.205.131)
[14:42:54] *** Quits: stockholm (~Andreas@p200300d2c70950005cd4d7a5705027a3.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[14:43:55] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 250 seconds)
[14:44:33] *** Quits: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 250 seconds)
[14:44:56] *** Joins: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[14:45:29] <Elliria> Oh, my. That paste is glorious, grawity.
[14:45:39] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[14:45:47] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[14:46:13] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[14:47:44] <Elliria> The epoch time is in seconds?
[14:47:55] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 240 seconds)
[14:48:01] <grawity> yes
[14:48:12] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[14:48:31] <grawity> more specifically seconds since 1970-01-01 UTC (https://en.wikipedia.org/wiki/Unix_time)
[14:48:41] <Elliria> So if I wanted to know minutes or hours or days, I could do some quick multiplication to come up with those and wouldn't need anything more than those epoch times as my base. That's a thing of beauty.
[14:49:25] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[14:50:07] <Elliria> Okay, good to know. That's perfect. Thank you so much. I've been turning myself inside and out trying to figure this out.
[14:50:11] <grawity> sure, though it gets harder with months and years (them being uneven length), that's part of what datetime.datetime handles behind the scenes
[14:50:22] <grawity> leap years etc
[14:50:30] *** Joins: audiobirb (~audio@user/audio)
[14:50:36] <Elliria> Now it's just a matter of taking this and bolting it into the huge script I need it for that's already badly using what I had in it and will need to have some precision surgical excision done to it to get those out.
[14:50:52] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[14:51:21] <grawity> but if all you need is hours, then yeah, one_hour_later = now + 3600
[14:51:41] <Elliria> The data-set I'll be working with is no more than five years worth of data and we'll be feeding it data in one-week chunks, but I need to be able to distinguish the times and dates within that week and it looks like this can do it.
[14:51:50] *** Joins: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net)
[14:52:34] <Elliria> I'll definitely need minutes, but may need hours or days as well, depending on how long something occurs for. I also ran into the baffling problem of crossing the midnight bridge so that the date changes and having to make sure the script knew that that had happened. This should also take care of that.
[14:53:42] <Elliria> We're tracking events at they occur and making decisions about what to do and not do based on when those events occurred and whether they need to be compared with when previous events occurred.
[14:55:55] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[14:56:11] *** Joins: Enitin (~Enitin@82.102.22.86)
[14:56:14] *** Quits: kts (~kts@103.73.237.88) (Quit: Konversation terminated!)
[14:56:31] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[14:56:47] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:58:22] *** Quits: fredrikhl (~fhl@129.240.202.34) (Quit: leaving)
[14:59:03] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 256 seconds)
[15:00:58] *** Joins: jpn (~jpn@user/jpn)
[15:01:33] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[15:01:59] *** Joins: _xor (~xor@74.215.35.24)
[15:03:01] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[15:03:09] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:39fe:6a9b:6533:77e)
[15:03:34] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[15:04:31] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:493b:d7a3:16ee:b2cf) (Ping timeout: 245 seconds)
[15:04:35] *** Quits: a1eaiactaest (~a1eaiacta@user/a1eaiactaest) (Ping timeout: 252 seconds)
[15:04:36] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[15:05:42] *** xcombelle1 is now known as xcombelle
[15:06:12] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[15:06:14] *** Joins: sokan (~sokan@85.73.229.195)
[15:06:14] *** Joins: a1eaiactaest (~a1eaiacta@user/a1eaiactaest)
[15:06:35] *** Joins: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be)
[15:07:56] *** Quits: widp (~widp@124.123.106.12) (Remote host closed the connection)
[15:09:01] *** Quits: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 256 seconds)
[15:09:34] *** Joins: widp (~widp@2406:7400:73:b5f5:6c27:71b7:9c16:508e)
[15:09:38] *** Quits: paul424 (~tom@ip-5-172-234-230.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[15:10:05] *** Quits: greknod (~grek@120.88.171.98) (Quit: Ping timeout (120 seconds))
[15:10:26] *** Joins: greknod (~grek@120.88.171.98)
[15:10:54] *** Quits: a1eaiactaest (~a1eaiacta@user/a1eaiactaest) (Ping timeout: 260 seconds)
[15:10:55] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[15:11:24] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[15:12:00] *** Joins: a1eaiactaest (~a1eaiacta@user/a1eaiactaest)
[15:12:18] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 252 seconds)
[15:12:19] *** Quits: rsrx (~rsrx@79-101-167-192.dynamic.isp.telekom.rs) (Quit: Leaving)
[15:12:35] *** Joins: c4017w_ (~c4017@209.52.68.8)
[15:13:02] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[15:15:49] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[15:16:14] <Elliria> Thank you all for the help. You're angels. I'm off to code like crazy. Have fun. Hugs to all.
[15:16:29] *** Quits: Elliria (~littlegir@cpe-66-24-84-219.stny.res.rr.com) (Quit: *POOF*)
[15:17:15] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[15:18:54] *** Joins: fling (~fling@user/fling)
[15:19:32] *** Quits: Coniass (~quassel@2a03:4000:57:afc:5883:e3ff:fee1:8fee) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[15:19:52] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[15:19:53] *** Joins: Coniass (~quassel@2a03:4000:57:afc:5883:e3ff:fee1:8fee)
[15:20:50] *** Joins: tarel2 (~tarel2@139.28.216.244)
[15:21:19] <tarel2> Have any of you coded python on Android ?
[15:21:39] *** Quits: shad (~shad@user/shad) (Ping timeout: 252 seconds)
[15:22:15] *** Quits: spithash (~spithash@user/spithash) (Ping timeout: 240 seconds)
[15:22:17] *** Joins: LAVBoy (~LAVBoy@85.249.46.8)
[15:25:13] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[15:26:09] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Ping timeout: 250 seconds)
[15:26:16] *** Joins: mIk3_09 (~Thunderbi@user/mik3-08/x-2852566)
[15:26:35] *** Joins: jug (~jug@user/jug)
[15:28:35] *** mIk3_09 is now known as mIk3_08
[15:28:35] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[15:31:55] *** Quits: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net) (Ping timeout: 256 seconds)
[15:32:05] *** Quits: nickodd (~nickodd@user/nickodd) (Ping timeout: 252 seconds)
[15:33:18] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[15:33:20] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[15:34:26] *** Joins: spithash (~spithash@user/spithash)
[15:34:32] <celphi> how do i initialize an empty python list
[15:34:35] *** Joins: hodapp (~mawson@user/hodapp)
[15:34:50] <celphi> with like 10 slots
[15:35:15] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Ping timeout: 240 seconds)
[15:35:29] <bjs> celphi: what do you mean by "slots"? empty would imply nothing in it
[15:35:38] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[15:36:15] <celphi> so i dont get out of range
[15:36:20] *** Joins: vulpes_vulpes (~vulpes_vu@62-64-207-88.dynamic.dial.as9105.com)
[15:36:23] <bjs> celphi: well then make it not be empty
[15:36:44] <bjs> celphi: e.g. `my_list = [None, None, None, None, ...]`  (or `my_list = [None]*10` as a shorthand)
[15:37:00] <celphi> shorthand works ty
[15:37:11] <bjs> that will get you a list with 10 things in it
[15:37:23] <celphi> ill show you example sec
[15:38:22] *** Joins: han-solo (~han-solo@user/han-solo)
[15:38:56] <celphi> bjs: i was trying to achieve this - https://bpa.st/NARA
[15:39:06] <celphi> so my description was incorrection
[15:39:14] <celphi> *incorrect
[15:40:02] <grawity> for that particular example it would be easier to use a dict
[15:40:08] <grawity> instead of pretending you're writing C
[15:40:25] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[15:40:27] *** Joins: shodan45 (~quassel@107.161.22.155)
[15:40:29] <celphi> example?
[15:40:35] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[15:40:37] *** Quits: widp (~widp@2406:7400:73:b5f5:6c27:71b7:9c16:508e) (Ping timeout: 240 seconds)
[15:40:37] <celphi> im not familiar with python
[15:40:41] <grawity> even a collections.defaultdict(int) maybe
[15:40:46] <celphi> cant use library
[15:40:48] <bjs> celphi: are you just trying to count the number of times a character appears?
[15:40:52] <celphi> yes
[15:41:19] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[15:41:33] <jinsun__> you can just use collections.Counter for that
[15:41:59] <celphi> my last amazon interview i ran out of time using C. so im trying to learn python. when i did the interview they said no libraries allowed
[15:42:05] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[15:42:12] *** Quits: nicoz (nicoz@nicoz.letz.dev) (Changing host)
[15:42:12] *** Joins: nicoz (nicoz@ubuntu/member/nicoz)
[15:42:14] <lesshaste> is there a python ide other than ipython you can install with pip install?
[15:42:14] <bjs> celphi: well if you can't use collections you can just make a dict manually. `counter = {}` then for each character in string you can `counter[c] += 1`,  but perhaps setting counter[c] = 0 if it doesn't exist first
[15:42:15] <grawity> https://bpa.st/2Z4A
[15:42:22] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[15:42:38] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[15:42:48] <grawity> you could argue that `collections` is stdlib, but it doesn't hurt to know the manual way as well
[15:42:48] <bjs> celphi: have you read the Python tutorial or anything? if you do an interview with Python it'd be expected you're comfortable using dicts
[15:43:08] *** Quits: grooverman (~grooverma@152.250.149.49) (Read error: Connection reset by peer)
[15:43:08] *** Joins: sprout_ (~quassel@2a02:a467:ccd6:1:f9b9:c2d3:ad62:759d)
[15:43:30] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[15:43:35] <celphi> ill check it out. im familiar with javascript so im  assuming it's same?
[15:43:45] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[15:43:57] *** Joins: widp (~widp@2406:7400:73:b5f5:6c27:71b7:9c16:508e)
[15:44:00] <bjs> well javascript is a different language, so no it's not the same.  But it's similar.  A key/value store (a hashmap)
[15:44:13] <celphi> is it sorted?
[15:44:17] <celphi> by key
[15:44:17] <jinsun__> lesshaste: you can try https://pypi.org/project/jupyterlab/
[15:44:17] <bjs> no it's a hashmap
[15:44:20] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[15:44:21] <grawity> a python dict is like a javascript Map()
[15:44:23] <celphi> k
[15:44:45] <bjs> celphi: I highly recommend going through the official Python tutorial,  it'll cover the basics like what a dict is and how to use them
[15:44:49] <lesshaste> jinsun__, thanks
[15:44:50] <grawity> though in javascript, people just use objects the same way python uses dicts
[15:44:58] <lesshaste> jinsun__,  I guess it needs a browser
[15:44:58] <grawity> so you could still say it's the same
[15:45:25] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Client Quit)
[15:45:25] <jinsun__> lesshaste: yes, there is also https://pypi.org/project/spyder/ but they recommend not to pip install but use anaconda
[15:45:40] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[15:45:41] <lesshaste> jinsun__, ah... I only have pip install at work
[15:45:48] <bjs> celphi: https://docs.python.org/3/ start with the Tutorial ("start here");  it's designed for people who have some experience with a language like C to get a feel for Python
[15:46:01] <celphi> great ty
[15:46:08] <lesshaste> jinsun__, it does say pip install spyder in the top left in large letters
[15:46:19] <jinsun__> lesshaste: well it can be pip installed too, but they won't support you if it doesn't work well
[15:46:28] <lesshaste> jinsun__, fair enough
[15:46:35] <lesshaste> I am not sure I ever feel supported by software :)
[15:47:04] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:dc5b:897:dfbc:2d30) (Ping timeout: 268 seconds)
[15:48:07] *** Quits: thorbw (~tw@46.230.130.50) (Read error: Connection reset by peer)
[15:48:14] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[15:48:41] <SnoopJ> lesshaste, the relatively new (and relatively simple) Mu editor can be installed with pip: https://codewith.mu/en/howto/1.1/install_with_python
[15:48:56] *** Joins: grooverman (~grooverma@152.250.149.217)
[15:48:59] <celphi> bjs: is there a equiv to php's ?? in python?
[15:49:34] <celphi> or javascripts ||
[15:49:49] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[15:49:53] <lesshaste> SnoopJ, oooh... !
[15:49:56] <lesshaste> thanks
[15:50:13] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[15:51:01] <jinsun__> celphi: depending on what those do, `or` might be the equivalent
[15:51:16] <celphi> yeah i tried didnt work
[15:51:24] <celphi> `    hashmap[x] = (hashmap[x] or 0) + 1`
[15:51:58] <jinsun__> if hashmap is a dict, then you want .setdefault
[15:52:00] *** Quits: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 268 seconds)
[15:52:16] <jinsun__> hashmap.setdefault(x, 0) += 1
[15:52:20] <celphi> ok ill look into that
[15:53:07] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[15:53:13] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Ping timeout: 256 seconds)
[15:53:15] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[15:53:32] <jinsun__> oh no can't assign like that, but you want .get here
[15:53:37] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[15:53:50] *** Quits: slavfox (~slavfox@93.158.232.111) (Ping timeout: 260 seconds)
[15:53:50] *** Quits: slav0nic (slav0nic@python.su) (Remote host closed the connection)
[15:53:54] <jinsun__> hashmap[x] = hashmap.get(x, 0) + 1
[15:54:10] *** Joins: slav0nic (slav0nic@python.su)
[15:54:45] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[15:54:52] <celphi> cool
[15:54:56] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:55:15] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[15:55:17] *** Joins: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[15:55:32] *** Joins: shuck (~shuck@user/shuck)
[15:55:45] <mav`rik> Or, y'know, use the stdlib, that's what it's there for. I suspect the "don't use libraries" really means "don't use third-party code".
[15:56:18] <celphi> he said to use loops only no libraries
[15:56:44] <celphi> so im assuming that meant nothing that requires from... import ect
[15:56:46] <mav`rik> celphi: For the C interview?
[15:56:58] <celphi> amazon interview
[15:57:04] <celphi> i chose to use C language
[15:57:10] <celphi> horrible idea btw
[15:57:16] <celphi> just not enough time
[15:57:22] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[15:57:31] <mav`rik> celphi: right, but was this requirement (use no libraries) when they knew about you using C?
[15:57:37] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[15:57:48] <celphi> he made the statement before i chose language
[15:57:55] <Xano> Is there a type hint that indicates *the current instance*? Like Self, but actually referring to self rather than type(self)?
[15:58:17] <grym> Xano: "ClassName" ?
[15:58:40] <celphi> Xano: https://stackoverflow.com/questions/33533148/how-do-i-type-hint-a-method-with-the-type-of-the-enclosing-class
[15:58:52] <mav`rik> Xano: https://peps.python.org/pep-0673/
[15:59:21] <The-Compiler> Xano: I don't follow - type hints refer to types and not instances, so how would such a type work?
[15:59:21] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[15:59:24] <bjs> Xano: no
[15:59:48] <Xano> The-Compiler, it would indicate both type as well as identity. It exists in some other languages.
[16:00:01] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[16:00:04] <Xano> bjs, Thanks for ripping off the bandaid :D
[16:00:22] <mav`rik> Xano: However, this is about the _type_, not the instance. Python's development practices generally suggest that an object which mutates an object should return None, so if something returns "type of self" then it likely shouldn't return the same instance it's passed.
[16:00:26] <Xano> The-Compiler, Primarily useful for daisy-changing
[16:00:29] <Xano> *chaining
[16:00:44] <mav`rik> No.
[16:01:22] *** Joins: Midjak (~Midjak@82.66.147.146)
[16:01:24] <jinsun__> Xano: why would Self not work for that?
[16:02:28] <mav`rik> jinsun__: Because that's "type of self", not "this is the same instance", which is a narrower definition - and bad practice
[16:02:31] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[16:03:14] <jinsun__> but why would you care that it is the same object, you just want something of the same type being returned
[16:03:20] <bjs> jinsun__: if it's mutable
[16:03:36] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[16:04:26] <jinsun__> like to prevent making copies?
[16:04:39] <bjs> jinsun__: no to annotate that "this function returns the thing you gave it"
[16:05:05] <jinsun__> so Self is enough for that I think
[16:05:09] <bjs> but there's no way to do that,  the closest you can get is "this function returns something of the same type as the thing you gave it"
[16:05:40] <bjs> well Self isn't quite the same thing
[16:05:52] <Xano> jinsun__, Because Self doesn't indicate it's the same instance. This is not purely about making the types match up.
[16:06:22] <Xano> jinsun__, Some people care about more expressiveness and some type systems facilitate that
[16:06:48] *** Joins: mfisher (mfisher@shell.themfishers.com)
[16:06:59] <Xano> Daisy chaining, often in builder patterns, are the go-to example for this kind of 'type' expression
[16:06:59] <bjs> but methods that mutate + return self are generally an anti-pattern and so the typing stuff doesn't care too much about trying to capture it
[16:07:11] <jinsun__> okay I'm not seeing the usecase, but then yeah python doesn't have it, you can put that info in the docstring and use Self
[16:07:47] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:08:25] <bjs> jinsun__: well the point is, your type system cannot detect the difference between "this function takes an object and returns the same object" and "this function takes an object and returns something that is the same type as that object",  and it matters a lot if the object is mutable
[16:08:43] *** Joins: b10n1k (~iob@nat1.prg.suse.com)
[16:08:48] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[16:09:15] *** Quits: hesse (~TheHerman@gateway/tor-sasl/thehermann) (Ping timeout: 240 seconds)
[16:09:19] <bjs> `new = f(old)` if I mutate `old` does `new` change?  there is no way to write a type signature that distinguishes these cases.  But in-general in Python it's an anti-pattern to make `new is old`,  instead in Python functions like this usually return None
[16:09:47] <Xano> bjs, It is often used for getter and setter methods in languages that do not have magic getters and setters, so it's a lot less necessary in Python, that's true
[16:09:48] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 240 seconds)
[16:10:02] <Xano> bjs, jinsun__ Anyway, thanks for confirming :)
[16:10:54] <jinsun__> yeah that seems like a weird thing to want, normally you want to use the new thing that is rerturned only and just throw away the old one when doing method chaining
[16:11:38] <mav`rik> jinsun__: Xano is suggesting that it's not a "new" thing that's being returned, but as if the method had `return self` at the end of it
[16:11:41] <jinsun__> so it doesn't matter much is new and old are the same object or not
[16:12:02] <jinsun__> s/is/if
[16:13:20] *** Joins: c4017w__ (~c4017@209.52.68.8)
[16:13:37] *** Quits: b10n1k (~iob@nat1.prg.suse.com) (Ping timeout: 240 seconds)
[16:13:48] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[16:13:53] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[16:14:13] <bjs> jinsun__: in Python sure,  but in other languages functions that mutate-and-return self are common, and the fact it's returning a mutable reference to the original thing rather than a new one is important
[16:14:30] <bjs> but you don't see this pattern in Python, so there was no incentive for typing stuff to try capture it
[16:15:01] *** Joins: b10n1k (~iob@nat1.prg.suse.com)
[16:15:51] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[16:15:52] <Xano> bjs, In fact, many context managers return self, wichh is where a type like this would be fitting in Pythonic code
[16:16:41] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[16:17:01] *** Quits: widp (~widp@2406:7400:73:b5f5:6c27:71b7:9c16:508e) (Ping timeout: 256 seconds)
[16:17:48] *** Joins: tWqaq (~tWqaq@240e:389:5d41:5900:18e6:77c5:eb82:540c)
[16:17:52] *** Joins: Elzington (~Elzington@87.249.134.39)
[16:18:00] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:18:40] *** Joins: kts (~kts@103.73.237.88)
[16:20:00] <jinsun__> bjs: ah okay, hmm, but that would need more features than just being able to say same instance to be actually useful I think
[16:20:12] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:20:14] *** Joins: Tajan (~Tajan@user/Tajan)
[16:21:08] <Tajan> hello, I would like to make an online certification for python data science skills. is there any particular one that you would recommend in terms of assessment, reputation etc..?
[16:21:14] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[16:21:48] *** Joins: bahamas (~lucian@86.120.77.115)
[16:21:54] <lesshaste> in ipython I have mistakenly typed from sklearn.datasets import fetch_california_housinghousing = fetch_california_housing() . How do I split the line ? If I go to the h of housing and press enter it executes the line
[16:22:19] *** Joins: shad (~shad@user/shad)
[16:22:42] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[16:23:27] <jinsun__> you can put a semi-colon before the h
[16:23:45] *** Joins: widp (~widp@124.123.106.12)
[16:23:51] <jinsun__> that will still execute it, but it won't be syntaxerror at least
[16:24:47] *** Joins: yates (~user@fv-nc-f7af8b91e1-234237-1.tingfiber.com)
[16:25:00] *** Joins: wakeup (~wakeup@user/wakeup)
[16:25:39] <jinsun__> or just copy the part starting from h, then delete it from that line, then enter and paste it back
[16:26:43] *** Quits: kts (~kts@103.73.237.88) (Quit: Konversation terminated!)
[16:27:01] *** Quits: b10n1k (~iob@nat1.prg.suse.com) (Ping timeout: 245 seconds)
[16:28:20] <yates> if i have a class D that "inherits" from a base class B: "def class D(B):", and B has a method "BFunction()", how do I invoke B.BFunction() in a member function of D?
[16:29:13] <Tajan> I know this certification and stuff is marketing shit. but if you know one of those better than the others, I will be glad to know
[16:29:18] *** Joins: b10n1k (~iob@nat1.prg.suse.com)
[16:29:22] <Tajan> as well
[16:29:40] *** Joins: _h4x0r_ (~till@user/till/x-8616149)
[16:29:50] <lesshaste> jinsun__, ok. I tried shift enter but that didn't split it
[16:30:04] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[16:30:06] *** Joins: Msandoy (~Msandoy@telia-590850-1.connect.netcom.no)
[16:30:21] <bjs> yates: super().BFunction()
[16:30:32] <Repiphany> yates: self.BFunction() (or super.BFunction() if you're reimplementing it)
[16:30:48] <Repiphany> super().
[16:31:19] <bjs> Yeah, yates: it's far more common just to self.BFunction();  super() is useful when you're writing D.BFunction
[16:31:32] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:32:48] <bjs> yates: https://bpa.st/TSWQ  this works as expected,  with d_func calling b_func
[16:32:53] *** Quits: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 256 seconds)
[16:33:09] <yates> ok, thank you, folks
[16:34:45] *** Joins: jay-m1262 (~jay-m@129.0.205.131)
[16:35:23] *** Joins: revolve_ (~u0_a227@82-132-236-148.dab.02.net)
[16:35:26] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[16:36:07] *** Joins: nickodd (~nickodd@user/nickodd)
[16:36:15] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[16:36:42] *** Quits: _h4x0r_ (~till@user/till/x-8616149) (Quit: leaving)
[16:37:02] *** Joins: jpn (~jpn@user/jpn)
[16:37:06] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[16:37:33] *** Quits: MeanEYE (~Mladen@87.116.162.168) (Read error: Connection reset by peer)
[16:38:12] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[16:38:31] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 250 seconds)
[16:38:37] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[16:38:53] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[16:39:15] *** Joins: txtsd (~txtsd@user/txtsd)
[16:39:20] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[16:39:33] *** Quits: theprophet (~theprophe@212.58.102.155) (Quit: Client closed)
[16:40:38] *** Joins: PaterTemporalis (~woooopsie@168.182.232.78)
[16:41:07] *** Quits: madduck (~madduck@user/madduck) (Remote host closed the connection)
[16:41:36] *** Quits: shad (~shad@user/shad) (Ping timeout: 245 seconds)
[16:41:37] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 256 seconds)
[16:41:56] <zamba> i have the following code: https://bpa.st/NHDA
[16:42:11] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 256 seconds)
[16:42:21] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[16:42:34] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[16:42:39] <zamba> the problem is that the on_release function is outside the scope of the main function.. so it can't access the clf object.. how should i best rewrite this code to allow for the on_release function to be able to use that?
[16:43:15] <bjs> zamba: probably by writing a class and make these methods
[16:43:19] <bjs> then you can have self.clf
[16:43:34] *** Joins: betuxy (~betuxy@p579adb74.dip0.t-ipconnect.de)
[16:43:40] *** Joins: jay-m1263 (~jay-m@41.205.30.141)
[16:44:09] *** Quits: zmotaj (~zmotaj@user/zmotaj) (Quit: ZNC - https://znc.in)
[16:44:20] *** Joins: tgamblin (~tgamblin@2607:fea8:c29f:f340:cfbf:d57d:b0f7:eb51)
[16:44:20] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Read error: Connection reset by peer)
[16:44:27] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[16:45:11] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:45:24] <betuxy> Hey guys, I have trouble with grabbing info from a local animal shelter for a new website project. I use lxml and get the image elemtent, however have no idea how to extract a spefic portion of the img tag. am I using the right tool, and if so what am I doing wrong? https://termbin.com/w6bb
[16:47:36] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[16:47:59] <zamba> bjs: like an NFC call?
[16:48:01] <zamba> class*
[16:48:19] <zamba> bjs: and all those on_-functions as functions/methods inside the class?
[16:48:36] <bjs> zamba: sure
[16:49:16] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:6469:70ea:b962:2f9)
[16:49:23] <zamba> bjs: hm, but i'm not sure how to do this
[16:49:25] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[16:49:31] <zamba> and what should be done where
[16:49:48] <zamba> should i have a .run method inside the class?
[16:49:48] <orbisvicis> does python have a tool to print the library search path required by ld for linking python modules?
[16:49:59] *** Quits: shuck (~shuck@user/shuck) (Remote host closed the connection)
[16:50:00] <bjs> zamba: no
[16:50:21] <zamba> bjs: because i have a main loop here.. but that's inside a context manager
[16:50:31] <bjs> zamba: sure you can make the instance inside the context manager
[16:51:11] *** Joins: stockholm (~Andreas@p200300d2c709500004b60d0de4ff27de.dip0.t-ipconnect.de)
[16:51:15] <zamba> bjs: this is not something i'm able to wrap my head around
[16:51:16] <bjs> zamba: `nfc_handler = NFC(clf); rdwr_options = {"on-startup": nfc_handler.on_startup, ...}` etc
[16:51:47] *** Joins: ivanf (~ivan@user/ivanf)
[16:52:11] *** Quits: frost (~frost@user/frost) (Quit: Client closed)
[16:52:53] *** Quits: quhar (~quhar@192.162.148.48) (Quit: WeeChat 3.3)
[16:53:29] *** Quits: a1eaiactaest (~a1eaiacta@user/a1eaiactaest) (Ping timeout: 250 seconds)
[16:54:43] <zamba> what about that targets-key?
[16:55:38] <bjs> zamba: what about it
[16:55:50] <bjs> it wouldn't change?
[16:55:56] *** Joins: dclxvi (~dclxvi@2a02:8084:84:4100:f1b1:13fd:3a83:cd37)
[16:57:03] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[16:57:51] *** Quits: bahamas (~lucian@86.120.77.115) (Ping timeout: 245 seconds)
[16:58:04] <zamba>     target.sensf_req = bytearray.fromhex("0012FC0000")
[16:58:06] <zamba> AttributeError: 'str' object has no attribute 'sensf_req'
[16:58:13] *** Joins: madduck (~madduck@user/madduck)
[16:58:37] <zamba> oh, nevermind.. got it working
[16:58:40] *** Joins: bahamas (~lucian@86.120.77.115)
[16:59:15] *** Joins: shad (~shad@user/shad)
[16:59:45] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[16:59:50] *** kujo2 is now known as kujo
[17:00:06] *** Quits: dreamon (~dreamon@ppp-88-217-83-128.dynamic.mnet-online.de) (Ping timeout: 252 seconds)
[17:00:18] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[17:00:47] *** Joins: hesse (~TheHerman@gateway/tor-sasl/thehermann)
[17:00:57] *** Quits: hesse (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[17:01:15] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[17:01:41] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 268 seconds)
[17:02:01] *** Quits: foul_owl (~kerry@23.82.193.89) (Ping timeout: 256 seconds)
[17:02:12] *** Joins: jpn (~jpn@user/jpn)
[17:03:53] *** Quits: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net) (Quit: Client closed)
[17:04:02] *** Joins: Blankspace (~Blankspac@user/blankspace)
[17:04:21] *** Quits: soju-test-user (~soju-test@lfbn-idf2-1-1140-121.w90-92.abo.wanadoo.fr) (Remote host closed the connection)
[17:04:31] *** Joins: soju-test-user (~soju-test@lfbn-idf2-1-1140-121.w90-92.abo.wanadoo.fr)
[17:05:54] *** Joins: wovixo (~wovixo@128.104.205.49)
[17:06:39] *** Quits: revolve_ (~u0_a227@82-132-236-148.dab.02.net) (Read error: Connection reset by peer)
[17:07:15] *** Quits: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is) (Quit: Client closed)
[17:08:26] *** Joins: revolve (~u0_a227@82-132-238-170.dab.02.net)
[17:08:27] *** Quits: joshbaptiste (~josh@2001:470:1f07:4d5:24::c2b5) (Quit: WeeChat 3.4)
[17:08:31] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[17:11:05] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 256 seconds)
[17:11:21] *** Quits: mkoskar (~mkoskar@user/mkoskar) (Quit: mkoskar)
[17:12:55] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[17:13:57] *** Joins: c4017w_ (~c4017@209.52.68.8)
[17:14:53] *** Joins: mkoskar (~mkoskar@user/mkoskar)
[17:14:57] *** Joins: exarkun (~exarkun@user/exarkun)
[17:15:10] *** Joins: Thanattt (~Thanatos@105.112.16.248)
[17:15:13] *** Joins: foul_owl (~kerry@23.82.193.87)
[17:15:38] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[17:15:47] <exarkun> How do I write a test for an `async def` that has an assertion for state before an `await` inside the `async def` as well as after it?  using, say, unittest.
[17:17:05] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[17:17:19] *** Joins: baffodoro (~raffaem@95.74.70.148)
[17:17:19] *** Joins: bloody (~bloody@user/bloody)
[17:17:26] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 245 seconds)
[17:18:13] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[17:18:15] *** Quits: ThanatosJ (~Thanatos@105.112.182.163) (Ping timeout: 252 seconds)
[17:18:15] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:efcc:cbb3:7f2a:6dff) (Ping timeout: 252 seconds)
[17:18:15] <SnoopJ> exarkun, can you elaborate on what that before/after state is? That sounds like you need some way to signal the state of this coroutine, not sure what the best option would be though.
[17:19:40] <exarkun> The before and after state is arbitrary stuff inside a SQLite3 database.  The test is for a function whose job is to do transaction management - open it for an `async def` and then commit it or roll it back afterwards, as appropriate.
[17:20:09] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:ddae:668a:ead9:844e)
[17:20:11] *** Quits: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br) (Ping timeout: 268 seconds)
[17:20:20] *** Joins: cren (cren@tilde.team)
[17:20:32] <exarkun> Here's the not-correct attempt I have so far, https://gist.github.com/exarkun/c2790adff99e25d08092f4c14ee51909
[17:20:39] *** Joins: robert_ (~robert_@47.203.169.95)
[17:21:01] *** Joins: jpn (~jpn@user/jpn)
[17:21:13] <cren> is it OK to use `requests` with async/await? A lot of places seem to be pointing me to `grequests` which uses something called Gevent, instead
[17:21:24] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[17:21:32] <exarkun> I'm used to Twisted so I imagined `async_func` would run up to the `await` without me doing anything special - but as I understand it, "coroutines" don't start until explicitly started (as a Task or Future or by a loop, maybe?  I'm not really sure)
[17:21:36] <mav`rik> cren: Better to use something like aiohttp I think
[17:21:42] <sco1> Or httpx
[17:21:47] <mav`rik> sco1: indeed
[17:21:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[17:22:17] <cren> Thing is, we're already using requests in a lot of places and I don't want to introduce a new dependency that nobody else but me is using
[17:22:33] <sco1> So change to httpx, which has both sync and async apis
[17:22:39] <exarkun> cren: `requests` just doesn't operate asynchronously, so there's no meaningful way to combine it with async/await.
[17:22:53] <mav`rik> cren: If you're writing async code, then the requests call will be blocking unless you add a threaded await, which just adds awkward complexity
[17:22:53] *** Quits: cuanim (~cuanim@user/cuanim) (Read error: Connection reset by peer)
[17:23:06] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[17:23:08] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[17:23:21] <cren> ah, okay, that makes sense. Thanks.
[17:23:22] *** Joins: codificat (~pep@90.167.86.255)
[17:23:24] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[17:23:42] *** Quits: soju-test-user (~soju-test@lfbn-idf2-1-1140-121.w90-92.abo.wanadoo.fr) (Remote host closed the connection)
[17:23:43] *** Joins: pyeverything (~pyeveryth@64-18-153-56.starry-inc.net)
[17:23:49] *** Joins: soju-test-user (~soju-test@lfbn-idf2-1-1140-121.w90-92.abo.wanadoo.fr)
[17:23:53] *** Quits: bahamas (~lucian@86.120.77.115) (Ping timeout: 256 seconds)
[17:24:09] *** Joins: dreamon (~dreamon@153.100.179.3)
[17:24:24] <exarkun> Maybe I should create a loop, set it as the global loop, then use create_task on my coroutine.  Then the coroutine will run in the loop while I can proceed (cooperatively) to do other stuff in the test method.
[17:25:03] *** Joins: slavfox (~slavfox@93.158.232.111)
[17:26:32] <mav`rik> exarkun: is there a reason not to use fixtures in pytest, such that you can have your setup/teardown of your state in its own function, and the `async def my_async_test(some, fixtures):` as its own thing?
[17:26:46] <exarkun> mav`rik: primarily that I'm not using pytest in this project
[17:27:08] <exarkun> but also ... the setup and teardown of the state is not a fixture, it's part of the application logic of the test
[17:27:44] <mav`rik> exarkun: what's the test testing? It kinda feels like multiple things at once given my interpretation of your earlier lines
[17:27:58] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[17:28:08] *** Quits: pyeverything (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 252 seconds)
[17:28:10] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[17:28:21] <exarkun> mav`rik: It tests that `call_if_empty` commits the transaction after the coroutine `async_func` returns is complete
[17:29:11] *** Quits: soju-test-user (~soju-test@lfbn-idf2-1-1140-121.w90-92.abo.wanadoo.fr) (Remote host closed the connection)
[17:29:24] *** Quits: death916 (~death916@user/death916) (Ping timeout: 240 seconds)
[17:29:28] <mav`rik> exarkun: are you using Python 3.8+?
[17:29:29] *** Joins: soju-test-user (~soju-test@lfbn-idf2-1-1140-121.w90-92.abo.wanadoo.fr)
[17:29:33] <exarkun> yes
[17:29:46] <mav`rik> exarkun: consider https://docs.python.org/3.8/library/unittest.html#unittest.IsolatedAsyncioTestCase
[17:30:10] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[17:30:21] *** Quits: dreamon (~dreamon@153.100.179.3) (Ping timeout: 252 seconds)
[17:30:54] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[17:30:55] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Remote host closed the connection)
[17:31:07] *** Quits: Blankspace (~Blankspac@user/blankspace) (Quit: Client closed)
[17:32:16] <exarkun> okay.  basically, run an event loop and await the awaitable returned by the test method.
[17:32:32] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[17:32:34] *** Quits: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:32:39] <exarkun> then use create_task to start the `call_if_empty` coroutine concurrently with the rest of the test code
[17:32:51] *** Joins: SaltHillStroller (~SaltHillS@199.249.111.186)
[17:33:16] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[17:33:52] <mav`rik> exarkun: you shouldn't need to use create_task, you just await your call like you would when it's called in code.
[17:34:00] *** Joins: crashrep (~crashrep@user/crashrep)
[17:34:13] <exarkun> If I await it, I can't observe state
[17:34:38] *** Joins: SaltHilStroller_ (~SaltHillS@206.223.160.26)
[17:34:57] *** Joins: death916 (~death916@c-73-220-87-102.hsd1.ca.comcast.net)
[17:34:58] *** Quits: death916 (~death916@c-73-220-87-102.hsd1.ca.comcast.net) (Changing host)
[17:34:58] *** Joins: death916 (~death916@user/death916)
[17:35:01] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[17:35:16] <exarkun> `await ...` won't complete until line 29
[17:35:25] <exarkun> lines 24-27 have to happen before it completes
[17:35:38] *** Joins: ocramoi (~ocramoi@143.107.231.30)
[17:35:43] <exarkun> So I think create_task is necessary
[17:35:51] *** Quits: baffodoro (~raffaem@95.74.70.148) (Ping timeout: 252 seconds)
[17:36:01] *** Quits: jay-m1262 (~jay-m@129.0.205.131) (Ping timeout: 256 seconds)
[17:36:35] *** Joins: wakeup (~wakeup@user/wakeup)
[17:36:35] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[17:37:19] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-f0f2-5be8-40b8-72bd.res6.spectrum.com)
[17:37:45] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[17:37:59] *** Joins: jay-m1262 (~jay-m@154.72.163.96)
[17:38:02] *** Quits: SaltHillStroller (~SaltHillS@199.249.111.186) (Ping timeout: 252 seconds)
[17:38:39] <exarkun> But I also have no idea what ordering guarantees asyncio has ... Does it have any?>
[17:38:51] <mav`rik> exarkun: this feels like you're testing implementation rather than outcome? It may be that if your logic has this form that you can't use the functionality as I suggested, I do worry that you're going to end up needing to manage concurrency manually.
[17:39:21] *** Quits: soju-test-user (~soju-test@lfbn-idf2-1-1140-121.w90-92.abo.wanadoo.fr) (Remote host closed the connection)
[17:39:28] *** Joins: soju-test-user (~soju-test@lfbn-idf2-1-1140-121.w90-92.abo.wanadoo.fr)
[17:39:42] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[17:39:55] *** Quits: ocramoi (~ocramoi@143.107.231.30) (Client Quit)
[17:40:42] *** Joins: frmlof (~frmlof@70.243.238.191)
[17:41:37] *** Joins: vakera_pingveno (~dan@2600:1700:21f9:b150::10)
[17:42:01] *** Joins: cdown (~cdown@cpe-98-15-154-102.hvc.res.rr.com)
[17:42:09] *** Joins: redkrieg (~redkrieg@user/redkrieg)
[17:42:51] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 245 seconds)
[17:43:30] <exarkun> Part of the idea here is that the test carefully arranges for a certain order of execution so that the complete test suite can demonstrate that all possible orders work - so that application code using the API doesn't have to concern itself with those details.
[17:47:14] *** Quits: mud (~mud@user/kadoban) (Quit: quit)
[17:47:26] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[17:48:47] *** Joins: magla (~gelignite@d5363125.access.ecotel.net)
[17:48:51] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Client Quit)
[17:49:04] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[17:50:45] *** Joins: shuck (~shuck@user/shuck)
[17:53:01] *** Quits: p|q (~plq@94.54.154.86) (Quit: Leaving)
[17:53:27] *** Quits: b10n1k (~iob@nat1.prg.suse.com) (Ping timeout: 252 seconds)
[17:54:49] <mav`rik> exarkun: isn't that kinda what transactions are supposed to avoid?
[17:55:15] *** Joins: mud (~mud@user/kadoban)
[17:55:28] *** Quits: widp (~widp@124.123.106.12) (Remote host closed the connection)
[17:55:41] <exarkun> mav`rik: Maybe?  I'm not sure what you mean - but the point is this is a test for my Python code that starts and commits transactions.  Indeed, I assume SQLite3 transactions work correctly - but I don't assume my Python code for managing them is correct.
[17:56:29] *** Joins: dman777 (~dman777@76-253-74-225.lightspeed.austtx.sbcglobal.net)
[17:56:47] <exarkun> So far my test is telling me that my Python code /isn't/ correct because in-db state is not visible at the times I would expect it to be visible.
[17:56:51] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[17:57:55] *** Joins: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br)
[17:58:08] *** Quits: lindsay (~lindsay@user/LindsayZhou) (Quit: WeeChat 3.4)
[17:58:08] <mav`rik> exarkun: if you're using transactions, and you only commit after the method has completed, then the in-db state wouldn't be updated until the transaction had been committed, which imho is a _good_ thing. Am I misunderstanding your concern/issue?
[17:58:16] *** Quits: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br) (Max SendQ exceeded)
[17:58:40] <exarkun> mav`rik: With my latest attempt, I don't see the state even after the coroutine finishes.
[17:58:40] *** Joins: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br)
[17:59:01] *** Quits: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br) (Max SendQ exceeded)
[17:59:16] <mav`rik> exarkun: you pass a cursor in to the method, when do you commit?
[17:59:25] *** Joins: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br)
[17:59:29] <exarkun> mav`rik: in a `finally` block around the call to that method
[17:59:33] <exarkun> well
[17:59:49] <exarkun> no sorry - there's a `with connection:` around that call, the finally is something else
[17:59:53] *** Quits: librenaut (~librenaut@user/librenaut) (Quit: Lost terminal)
[18:00:03] *** Quits: dsrt^ (~dsrt@96-67-120-105-static.hfc.comcastbusiness.net) (Ping timeout: 252 seconds)
[18:00:43] *** Quits: stockholm (~Andreas@p200300d2c709500004b60d0de4ff27de.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[18:00:52] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[18:01:17] <exarkun> maybe synchronous context managers don't play nicely with `await` in their blocks ... or maybe `return` in the coroutine is synchronously jumping back to the test method and the `__exit__` hasn't had a chance to run yet
[18:01:45] <exarkun> probably that
[18:02:28] *** Joins: wge^ (~wge@96-67-120-105-static.hfc.comcastbusiness.net)
[18:02:33] *** Quits: tarel2 (~tarel2@139.28.216.244) (Quit: Client closed)
[18:02:52] <exarkun> yea, reversing the order of those pieces helped
[18:03:07] <mav`rik> exarkun: oh, ugh, your code is async, but your connection is synchronous, I just noticed. Might I suggest you use aiosqlite instead?
[18:03:50] *** Parts: lpapp (~lpapp@ec2-35-158-255-21.eu-central-1.compute.amazonaws.com) ()
[18:04:25] <exarkun> mav`rik: That might be interesting, eventually, to help improve responsiveness of the main thread.  It seems like a pretty big change though and responsiveness isn't my main issue at the moment.
[18:04:34] <exarkun> Thanks for pointing it out, I was not aware.
[18:04:46] *** Joins: akk (~akk@75-161-61-130.albq.qwest.net)
[18:04:52] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[18:04:56] <exarkun> (Also the Twisted/asyncio integration is still really primitive and I'm not sure it is up to dealing with something as complex as aiosqlite yet)
[18:05:07] <mav`rik> exarkun: The library (other than the use of `await` and `async with`) has a very similar API to the stdlib sqlite3
[18:05:46] <exarkun> still, switching a basic API from sync to async while there's a lot of application logic on top of it that assumes it is sync is a lot of work
[18:06:13] <exarkun> I ended up with this passing test, fwiw - https://gist.github.com/exarkun/4f4ac08bd9df2f3525a0872256a83539
[18:06:57] *** Quits: revolve (~u0_a227@82-132-238-170.dab.02.net) (Read error: Connection reset by peer)
[18:07:21] <csm3105> Hi guys, I'v been reading this article https://fastapi.tiangolo.com/tutorial/sql-databases/#create-a-sessionlocal-class and I don't understand the use of SessionLocal class args
[18:08:17] <csm3105> In particular autocommit and autoflush, with bind I have no problem
[18:08:54] <csm3105> I have also had a look at the official SQLAlchemy documentation but I still don't understant it well
[18:08:56] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:1a76:2017:77ff:dd44) (Quit: Leaving)
[18:09:14] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[18:09:27] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[18:09:29] *** Joins: sonnie (~sonnie@105.112.180.72)
[18:09:31] <zamba> i have the following code: https://bpa.st/NVIA .. but if i want to call a different function, apart from just print(), then the main while loop exists
[18:09:33] *** Joins: stockholm (~Andreas@p200300d2c709500004b60d0de4ff27de.dip0.t-ipconnect.de)
[18:10:06] <zamba> i've tried to do this as a separate function (send_to_proxy) or in the on_connect or the on_release functions, but this means it breaks out of the main loop
[18:10:31] *** Joins: widp (~widp@124.123.106.12)
[18:11:10] *** Joins: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[18:11:24] *** Joins: aclark (~aclark@nif.nimh.nih.gov)
[18:11:29] <zamba> it seems like clf.connect() returns False if i do
[18:13:17] *** Quits: carl- (~carl-@185.103.188.130) (Ping timeout: 240 seconds)
[18:13:39] *** Quits: mud (~mud@user/kadoban) (Quit: quit)
[18:13:52] *** Joins: Barones (~Barones@user/Barones)
[18:14:00] <celphi> is this not valid syntax? `hashmap[most_letter] = hashmap[most_letter] -= 1` ?
[18:14:12] *** Joins: mud (~mud@user/kadoban)
[18:14:21] *** Joins: c4017w__ (~c4017@209.52.68.8)
[18:14:26] *** Quits: mud (~mud@user/kadoban) (Client Quit)
[18:14:31] <celphi> nvm
[18:14:36] <celphi> i must be still asleep
[18:14:39] <celphi> lol
[18:16:47] *** Joins: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com)
[18:16:49] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[18:17:00] *** Joins: mud (~mud@user/kadoban)
[18:17:57] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[18:19:06] *** Joins: jcsteele (~j@user/jcsteele)
[18:21:05] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[18:21:21] *** Quits: jay-m1262 (~jay-m@154.72.163.96) (Ping timeout: 256 seconds)
[18:22:15] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[18:23:08] *** Quits: grooverman (~grooverma@152.250.149.217) (Ping timeout: 252 seconds)
[18:23:08] *** Joins: jay-m1262 (~jay-m@129.0.205.131)
[18:23:43] *** Joins: hiroshi_ (~freedom@151.43.57.208)
[18:25:52] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Quit: Client closed)
[18:25:59] *** Joins: mad_moses (~ps@2a02:810b:f3f:f0d0:d250:99ff:fe86:b052)
[18:26:32] <gitesh> Can a view have more than a model in django?
[18:26:45] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[18:26:49] <mad_moses> Hi, I use aws lambda with python and want to upload from aws lambda a file from a s3 bucket to my personal rest endpoint over https. Which libary would you recommend for sending data up to 30mb?
[18:27:52] <Xano> I've run into another Protocol limitation it seems: https://peps.python.org/pep-0544/#covariant-subtyping-of-mutable-attributes. Is there another way to express types to allow for attribute covariance?
[18:28:39] *** Quits: Tajan (~Tajan@user/Tajan) (Ping timeout: 252 seconds)
[18:30:13] *** Joins: dreamon (~dreamon@ppp-88-217-83-128.dynamic.mnet-online.de)
[18:30:30] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[18:31:07] *** Quits: WantToHelp (~WantToHel@96.77.40.70) (Changing host)
[18:31:07] *** Joins: WantToHelp (~WantToHel@user/wanttohelp)
[18:31:22] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[18:31:31] <zen_coder> how many subprocess.popen calls can I make in parallel?
[18:31:36] *** Quits: crashrep (~crashrep@user/crashrep) (Remote host closed the connection)
[18:31:58] <SnoopJ> zen_coder, the library itself imposes no limit that I'm aware of
[18:32:05] <SnoopJ> (your operating system might)
[18:32:07] <bjs> zen_coder: as many as the OS will let you
[18:32:19] *** Joins: crashrep (~crashrep@user/crashrep)
[18:33:20] *** Quits: soju-test-user (~soju-test@lfbn-idf2-1-1140-121.w90-92.abo.wanadoo.fr) (Remote host closed the connection)
[18:33:33] *** Joins: soju-test-user (~soju-test@lfbn-idf2-1-1140-121.w90-92.abo.wanadoo.fr)
[18:34:21] *** Joins: fredrikhl (~fhl@myrsnipa.uio.no)
[18:35:05] *** Quits: vakera_pingveno (~dan@2600:1700:21f9:b150::10) (Ping timeout: 250 seconds)
[18:36:02] *** Quits: soju-test-user (~soju-test@lfbn-idf2-1-1140-121.w90-92.abo.wanadoo.fr) (Remote host closed the connection)
[18:36:12] *** Joins: soju-test-user (~soju-test@lfbn-idf2-1-1140-121.w90-92.abo.wanadoo.fr)
[18:37:47] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[18:37:48] *** Joins: cloux (~cloux@user/cloux)
[18:38:01] *** Joins: minto (~mintograd@47.201.5.61)
[18:38:43] *** Quits: soju-test-user (~soju-test@lfbn-idf2-1-1140-121.w90-92.abo.wanadoo.fr) (Remote host closed the connection)
[18:38:51] *** Joins: soju-test-user (~soju-test@lfbn-idf2-1-1140-121.w90-92.abo.wanadoo.fr)
[18:39:26] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[18:40:21] *** Quits: bitkiller (~bitkiller@user/bitkiller) (Ping timeout: 268 seconds)
[18:40:52] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[18:40:57] *** Quits: minto_ (~mintograd@47.201.5.61) (Ping timeout: 250 seconds)
[18:41:00] <han-solo> zen_coder: though you might want to keep it under the number of cores you have
[18:41:19] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[18:44:17] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Remote host closed the connection)
[18:44:26] *** Quits: aclark (~aclark@nif.nimh.nih.gov) (Quit: Client closed)
[18:44:58] *** Joins: Staunch (~Staunch@137.83.202.220)
[18:45:25] *** Quits: jay-m1262 (~jay-m@129.0.205.131) (Ping timeout: 240 seconds)
[18:45:42] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[18:45:52] *** Quits: sonnie (~sonnie@105.112.180.72) (Quit: Client closed)
[18:46:01] *** Joins: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net)
[18:46:26] *** Joins: fef (~thedawn@user/thedawn)
[18:46:28] *** Joins: kadobanana (~mud@user/kadoban)
[18:46:45] *** Quits: hiroshi_ (~freedom@151.43.57.208) (Quit: hiroshi_)
[18:46:52] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[18:46:57] *** Quits: mud (~mud@user/kadoban) (Read error: Connection reset by peer)
[18:47:10] <Wooble> well, depends what you're doing; if the processes are mostly IO bound the number of cores might not matter...
[18:47:11] *** Quits: jancoow (~jancoow@user/jancoow) (Quit: Ping timeout (120 seconds))
[18:47:20] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[18:47:25] *** Quits: sentriz (~sentriz@109.255.139.98) (Ping timeout: 240 seconds)
[18:47:35] *** Joins: howdoi (uid224@id-224.lymington.irccloud.com)
[18:47:35] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 240 seconds)
[18:47:39] *** Joins: sentriz (~sentriz@109.255.139.98)
[18:47:40] <han-solo> mm
[18:47:50] <Wooble> (and even if they're CPU-bound, probably your OS's scheduler is better at scheduling them than your own code is :) )
[18:47:52] *** Joins: jancoow (~jancoow@user/jancoow)
[18:50:30] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[18:52:04] *** Joins: flea (nosoul@gateway/vpn/protonvpn/nosoul)
[18:52:11] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[18:52:14] *** Quits: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net) (Quit: Client closed)
[18:52:49] *** Joins: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net)
[18:54:15] <anddam> jinsun__: I watched a couple presentation from older pycons, the author(s) seem pretty excited by its lispiness
[18:54:29] *** Quits: cdown (~cdown@cpe-98-15-154-102.hvc.res.rr.com) (Ping timeout: 252 seconds)
[18:54:33] <anddam> jinsun__: I have onestly no ground to judge
[18:54:48] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[18:54:57] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:f5bb:fecb:2a5a:41b8)
[18:54:57] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:f5bb:fecb:2a5a:41b8) (Changing host)
[18:54:57] *** Joins: skapata (~Skapata@user/skapata)
[18:55:02] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 252 seconds)
[18:56:04] *** Joins: grooverman (~grooverma@152.250.149.49)
[18:57:16] <han-solo> Wooble: yeah, i guess if it's won't take too much memory, then the cpu bound issue may not be problem i guess
[18:58:05] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[18:58:19] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[18:59:36] *** Joins: OP-0 (~pca290122@adsl-d146.84-47-79.t-com.sk)
[19:00:10] *** Quits: OP-0 (~pca290122@adsl-d146.84-47-79.t-com.sk) (Client Quit)
[19:00:30] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[19:01:18] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[19:02:13] *** Joins: kickingvegas (~cchoi@c-73-170-198-193.hsd1.ca.comcast.net)
[19:02:22] *** Quits: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 260 seconds)
[19:02:30] <ChrisWarrick> mad_moses: boto3, probably
[19:03:21] *** Quits: Techcable (~Techcable@168.235.93.147) (Remote host closed the connection)
[19:05:36] *** Joins: Techcable (~Techcable@168.235.93.147)
[19:07:08] *** Quits: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be) (Ping timeout: 252 seconds)
[19:07:09] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:07:24] *** Joins: djapo (~archangel@user/djapo)
[19:07:25] *** Quits: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[19:07:49] *** Joins: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[19:09:22] <mad_moses> ChrisWarrick: boto3 to send from lambda to my person rest outside of aws?
[19:09:52] <ChrisWarrick> mad_moses: oh, sorry, youâ€™re not uploading to s3
[19:09:58] <ChrisWarrick> mad_moses: then any http library will do
[19:11:33] *** Quits: djapo (~archangel@user/djapo) (Remote host closed the connection)
[19:12:37] *** Quits: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[19:12:48] *** Joins: wlemuel (~wlemuel@210.22.124.110)
[19:14:22] *** Joins: Tajan (~Tajan@user/Tajan)
[19:15:01] *** Joins: c4017w_ (~c4017@209.52.68.8)
[19:16:27] *** Joins: djapo (~archangel@user/djapo)
[19:16:31] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[19:16:44] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[19:17:12] <audiobirb> can anyone help? https://stackoverflow.com/questions/71560266/how-can-i-make-a-mel-spectrogram-into-a-numpy-array-without-making-it-an-image-f
[19:18:25] <ChrisWarrick> audiobirb: you might get more help if you include your current code that gives you an image
[19:18:39] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[19:18:39] *** Quits: stockholm (~Andreas@p200300d2c709500004b60d0de4ff27de.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[19:19:37] *** Quits: drew (~drew@user/drew) (Ping timeout: 240 seconds)
[19:20:09] *** Joins: pyeverything (~pyeveryth@dhcp-wifi-8021x-155-41-36-185.bu.edu)
[19:23:25] <ChrisWarrick> audiobirb: â€¦and by not deleting questions
[19:23:41] <audiobirb> ChrisWarrick, i figured out librosa already does this by default
[19:23:55] <audiobirb> problem solved
[19:23:57] *** Joins: joshbaptiste (~josh@2001:470:1f07:4d5:24::c2b5)
[19:24:17] *** Quits: pyeverything (~pyeveryth@dhcp-wifi-8021x-155-41-36-185.bu.edu) (Ping timeout: 240 seconds)
[19:24:33] <ChrisWarrick> on SO, you should post an answer in that case instead of deleting the question
[19:26:13] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[19:26:30] *** Quits: luigibu (~luigi@93.176.153.88) (Quit: WeeChat 3.4.1)
[19:26:57] <TML> audiobirb: answering your own question on SO is considered a great thing to do
[19:27:06] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Read error: Connection reset by peer)
[19:27:09] *** Joins: spikhoff (~spikhoff@8ab7-fe8e-44ff-127b-2180-4880-07d0-2001.sta.estpak.ee)
[19:27:11] *** drizztbsd is now known as timothy
[19:28:22] <audiobirb> ChrisWarrick, TML i figured it was so mind-numblingly dumb that i should just delete it. a numpy array is the default output of the function which generates mel spectrograms
[19:29:29] <TML> audiobirb: :shrug: If you had the question, someone else might some day as well; but I didn't actually see the question.
[19:29:37] *** Joins: drew (~drew@user/drew)
[19:31:21] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[19:31:36] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[19:31:57] *** Joins: Barones (~Barones@user/Barones)
[19:33:33] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:ddae:668a:ead9:844e) (Ping timeout: 252 seconds)
[19:33:46] *** Joins: k` (~weechat@about/web/empty)
[19:33:48] <k`> sup
[19:33:58] <k`> would anyone help me get python running on my mac? i've got permission issues and PATH issues and im lost
[19:34:38] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 252 seconds)
[19:34:52] <ChrisWarrick> k`: what did you try doing?
[19:35:05] *** Joins: crashrep (~crashrep@user/crashrep)
[19:35:08] <ChrisWarrick> k`: the easiest way to get python on a mac would be homebrew
[19:35:08] <k`> hello! thanks so much for responding. Well, right now if i python version its 2.7
[19:35:15] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[19:35:25] <k`> i'd like to have the newest version... and i'd also like to install PIP and get that going
[19:35:39] <k`> i've had to use sudo for the installs and its now throwing me major perm errors
[19:36:03] *** Joins: Elzington_ (~Elzington@37.19.210.26)
[19:36:09] <k`> it looks like i've installed version 3 under homebrew but I think the paths are wrong or something?
[19:36:09] <audiobirb> TML, "how do i convert mp3 to mel spectrogram numpy arrays"
[19:36:16] <ChrisWarrick> k`: https://brew.sh/
[19:36:21] <audiobirb> TML, the function in librosa that does this does it by default
[19:36:24] <k`> was hoping we could just start from the beginning with a walkthrough
[19:36:34] *** Quits: shuck (~shuck@user/shuck) (Remote host closed the connection)
[19:36:39] <k`> yeah, i have homebrew already installed
[19:36:58] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Read error: Connection reset by peer)
[19:36:58] *** Joins: shuck (~shuck@user/shuck)
[19:37:12] <ChrisWarrick> k`: brew install python@3.10
[19:37:13] <ChrisWarrick> k`: thatâ€™s all
[19:37:19] *** Quits: alius (~adrien@2001:861:4444:49c0:228f:af36:174f:3ca3) (Quit: Konversation terminated!)
[19:37:20] <k`> okay, i've done that
[19:37:24] <k`> but the path's aren't linked
[19:37:29] <k`> if i open up a terminal under MAC
[19:37:46] <k`> and type in.... python --version
[19:37:52] <k`> it lists Python 2.7.16
[19:38:11] <ChrisWarrick> k`: changing that can break stuff
[19:38:14] <k`> if i type in python3 i get tele'd into it
[19:38:18] <ChrisWarrick> k`: you should be running python3
[19:38:27] <k`> ahh okay
[19:38:31] <k`> so i need to install pandas with pip
[19:38:32] <ChrisWarrick> k`: if you want python to point to python3, you can add this to $PATH: $(brew --prefix)/opt/python@3.10/libexec/bin
[19:38:46] *** Quits: Elzington (~Elzington@87.249.134.39) (Ping timeout: 260 seconds)
[19:38:46] <k`> but you told me i shouldn't do that.. because it could break things, correct?
[19:39:13] <ChrisWarrick> k`: if you know what youâ€™re doing, you can change this (and it shouldnâ€™t break too much these days)
[19:39:24] <ChrisWarrick> k`: as for installing stuff with pip, you should use venv: https://chriswarrick.com/blog/2018/09/04/python-virtual-environments/
[19:39:24] <k`> well, i don't really know what i'm doing! =p
[19:39:26] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[19:40:05] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[19:40:05] <k`> so if i pip install pandas
[19:40:07] <k`> https://pastebin.com/Y3ePjN7L
[19:40:09] <k`> here's what i get
[19:40:31] *** JavaGeek is now known as CodeGeek
[19:40:38] <ChrisWarrick> k`: your pip is pointing the dead python
[19:40:45] *** Joins: ecraven (ecraven@user/nex)
[19:40:48] <ChrisWarrick> k`: you should be using venvs
[19:41:00] <k`> what about pypi?
[19:41:08] <k`> i already have that installed
[19:41:32] <ecraven> hello ;) Is __init__ of a class in any way special regarding `import'? I can import apt_pkg fine in my file, but if I import it inside __init__ of a class, I get a ModuleNotFoundError :-/
[19:42:03] *** Joins: cdown (~cdown@cpe-98-15-154-102.hvc.res.rr.com)
[19:43:04] <ChrisWarrick> k`: pypi is not something you install
[19:43:35] <ChrisWarrick> ecraven: no, it shouldnâ€™t be special, show your full code in both cases?
[19:43:46] <k`> oh i see venvs are virutal environments
[19:43:48] *** Joins: bahamas (~lucian@84.232.140.158)
[19:44:02] <k`> ugh i would love to uninstall everything i've already done
[19:44:05] <k`> and just set this up properly
[19:44:15] <ChrisWarrick> k`: thatâ€™s not easy, in general
[19:44:18] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[19:44:22] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[19:44:27] <ChrisWarrick> k`: but you can declare dead python a nuclear wasteland and avoid touching it
[19:45:11] *** Joins: MasterK (~MK@86.120.52.156)
[19:45:22] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[19:46:05] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[19:46:29] *** Quits: muffin_storm_ (~muffin_st@50-233-189-146-static.hfc.comcastbusiness.net) (Quit: Leaving)
[19:47:17] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:efcc:cbb3:7f2a:6dff)
[19:48:13] *** Quits: dreamon (~dreamon@ppp-88-217-83-128.dynamic.mnet-online.de) (Ping timeout: 240 seconds)
[19:48:20] *** Joins: muffin_storm (~muffin_st@50-233-189-146-static.hfc.comcastbusiness.net)
[19:48:20] *** Quits: muffin_storm (~muffin_st@50-233-189-146-static.hfc.comcastbusiness.net) (Changing host)
[19:48:20] *** Joins: muffin_storm (~muffin_st@user/muffin-storm/x-3740471)
[19:48:38] *** Joins: Betal (~Betal@user/betal)
[19:49:04] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[19:49:55] *** Joins: fling (~fling@user/fling)
[19:50:34] *** Quits: widp (~widp@124.123.106.12) (Remote host closed the connection)
[19:51:47] *** Quits: mickey (~user@user/mickey) (Quit: mickey)
[19:51:57] <deltab> ecraven: importing within a function will make it local to that function
[19:52:14] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 252 seconds)
[19:52:35] *** Joins: spawnmc (~spawnmc@user/spawnmc)
[19:52:43] *** Joins: splora (~splora@user/splora)
[19:52:46] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[19:52:50] *** Joins: FluffyMask (~masque@user/fluffymask)
[19:52:53] *** Joins: bitkiller (~bitkiller@user/bitkiller)
[19:52:54] <deltab> ecraven: shouldn't affect whther the module is found though
[19:56:15] *** Joins: mickey (~user@user/mickey)
[19:56:22] *** Joins: widp (~widp@2406:7400:73:b5f5:edb2:4f46:902f:1f0e)
[19:57:07] *** Quits: kadobanana (~mud@user/kadoban) (Ping timeout: 256 seconds)
[19:57:07] *** Quits: Merinorus (~Merinorus@lfbn-mar-1-707-11.w90-118.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[19:57:37] <spawnmc> I wish I could do something like this: user = f"username={os.environ('USER')}"
[19:57:49] *** Joins: shuck_ (~shuck@user/shuck)
[19:58:03] *** Joins: Pickchea (~private@user/pickchea)
[19:58:24] *** Joins: Roey (~Roey@user/Roey)
[19:58:48] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[19:58:49] <mav`rik> spawnmc: You can, user = f"username={os.environ['USER']}" or user = f"username={os.getenv('USER')}"
[19:58:54] *** Quits: shuck (~shuck@user/shuck) (Read error: Connection reset by peer)
[19:59:33] <spawnmc> Ahhh... thought I had square brackets in there, thanks
[19:59:37] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[20:01:06] *** Quits: mav`rik (~unknown@ec2-54-171-126-99.eu-west-1.compute.amazonaws.com) (Quit: leaving)
[20:01:21] <spawnmc> what's the difference between using environ and getenv?
[20:01:32] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[20:02:10] <ChrisWarrick> spawnmc: environ is a dict, getenv is a function
[20:02:11] <bjs> spawnmc: getenv == os.environ.get
[20:02:21] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[20:02:30] *** Joins: paul424 (~tom@apn-95-40-79-101.dynamic.gprs.plus.pl)
[20:02:33] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 256 seconds)
[20:02:40] <spawnmc> oh cool
[20:02:47] <ecraven> ChrisWarrick: have to get a minimal example, it's quite long at the moment :-/ I've printed sys.modules, it even contains the relevant module, so I don't understand the error :-/
[20:03:22] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[20:03:34] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[20:03:58] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Ping timeout: 260 seconds)
[20:04:01] <graingert[m]> nedbat: I have a reproducer! https://gist.github.com/graingert/f5e81264dd3c3ab8a705809096fcc283#file-demo-py-L27
[20:04:45] <graingert[m]> hmm it doesn't seem to happen a second time...
[20:05:03] *** Quits: tetravus1 (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[20:05:39] *** Joins: martums594 (~martums@user/martums)
[20:06:09] *** Joins: zebrag (~chris@user/zebrag)
[20:07:01] *** Quits: martums59 (~martums@user/martums) (Ping timeout: 240 seconds)
[20:07:01] *** martums594 is now known as martums59
[20:08:13] *** Joins: jmd (~user@de.cellform.com)
[20:09:56] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[20:09:57] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[20:10:54] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[20:11:14] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[20:11:37] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[20:12:02] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[20:13:35] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[20:13:52] *** Quits: [RiFo] (~RiFo@user/rifo) (Read error: Connection reset by peer)
[20:15:01] *** Quits: marcello42 (~mp@p200300dfaf10fe018edad6997a9398b1.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[20:15:34] *** Joins: c4017w__ (~c4017@209.52.68.8)
[20:15:52] *** Quits: sandipan (~Sandipan@45.249.73.234) (Remote host closed the connection)
[20:18:21] *** Quits: shuck_ (~shuck@user/shuck) (Quit: I'm leaving)
[20:18:38] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[20:19:29] <Wooble> your reproducer isn't reproducible?
[20:22:57] *** Joins: Enitin (~Enitin@82.180.145.230)
[20:23:37] *** Quits: widp (~widp@2406:7400:73:b5f5:edb2:4f46:902f:1f0e) (Remote host closed the connection)
[20:24:44] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[20:25:02] *** Joins: vicfred (~vicfred@user/vicfred)
[20:25:23] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[20:26:03] *** Joins: src (~src@user/src)
[20:26:52] *** Quits: paul424 (~tom@apn-95-40-79-101.dynamic.gprs.plus.pl) (Remote host closed the connection)
[20:27:18] *** Joins: widp (~widp@2406:7400:73:b5f5:edb2:4f46:902f:1f0e)
[20:27:42] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:27:56] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[20:28:36] *** Joins: stockholm (~Andreas@p200300d2c709500004b60d0de4ff27de.dip0.t-ipconnect.de)
[20:28:53] *** Joins: purple_cthulhu (~rax@188.214.96.37)
[20:29:26] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[20:30:30] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[20:31:14] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[20:31:26] *** Joins: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net)
[20:32:52] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[20:33:46] *** Quits: Elzington_ (~Elzington@37.19.210.26) (Quit: Leaving)
[20:34:35] *** Quits: white2 (~mahengrui@user/mahengrui1) (Ping timeout: 252 seconds)
[20:34:43] *** Joins: tortal (~tortal@user/tortal)
[20:34:43] *** Joins: Elzington (~Elzington@static-68-235-44-30.cust.tzulo.com)
[20:34:53] *** Quits: spikhoff (~spikhoff@8ab7-fe8e-44ff-127b-2180-4880-07d0-2001.sta.estpak.ee) (Quit: Leaving)
[20:35:22] *** Quits: tWqaq (~tWqaq@240e:389:5d41:5900:18e6:77c5:eb82:540c) (Quit: Leaving)
[20:36:47] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 256 seconds)
[20:37:36] *** Quits: sunny93 (~sunny93@wireguard/tunneler/sunny93) (Quit: Ping timeout (120 seconds))
[20:37:52] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[20:38:00] *** Joins: sunny93 (~sunny93@wireguard/tunneler/sunny93)
[20:39:15] *** Quits: Msandoy (~Msandoy@telia-590850-1.connect.netcom.no) (Remote host closed the connection)
[20:41:05] *** Quits: spawnmc (~spawnmc@user/spawnmc) (Quit: Client closed)
[20:41:33] *** Joins: ELFrederich (~ELFrederi@siemens-industry-software-inc-216-196-155-202.static.fuse.net)
[20:42:17] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[20:42:37] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[20:43:03] *** Quits: magla (~gelignite@d5363125.access.ecotel.net) (Read error: Connection reset by peer)
[20:43:17] *** Joins: qlixed (~qlixed@181.44.129.13)
[20:43:34] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[20:43:51] *** Quits: Korra (~textual@216.15.105.161) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[20:43:53] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[20:44:17] *** Joins: magla (~gelignite@d5363125.access.ecotel.net)
[20:47:01] *** Quits: idontnee_ (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Ping timeout: 240 seconds)
[20:49:54] *** Joins: acresearch (~acresearc@user/acresearch)
[20:50:03] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[20:50:17] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[20:51:28] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[20:51:44] *** Joins: b10n1k (~iob@dynamic-2a00-1028-8390-9e8a-0000-0000-0000-92cb.ipv6.o2.cz)
[20:52:47] *** Joins: fef (~thedawn@user/thedawn)
[20:52:57] *** Joins: hackers (~self@user/hackers)
[20:53:18] *** Quits: rje (~textual@65.141.156.170) (Read error: Connection reset by peer)
[20:55:15] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Ping timeout: 256 seconds)
[20:55:16] *** Joins: wakeup (~wakeup@user/wakeup)
[20:55:24] *** Quits: wakeup (~wakeup@user/wakeup) (Client Quit)
[20:55:58] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[20:56:16] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[20:56:29] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[20:56:30] *** Quits: ravan_ (~ravan@user/ravan) (Remote host closed the connection)
[20:56:33] <graingert> nope it is reproducible it just takes a few minutes
[20:57:09] *** Joins: ravan_ (~ravan@user/ravan)
[20:57:17] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[20:57:36] <ska> Were trying to redirect logs from Ray.io per https://docs.ray.io/en/latest/ray-observability/ray-logging.html#redirecting-ray-logs-to-stderr, but we're not sure how to grab those logs interatively and handle them. We want to handle each log messages as it output. Do we use io.StringIO or some other method?
[20:58:01] *** Quits: ravan_ (~ravan@user/ravan) (Remote host closed the connection)
[20:58:08] <ska> The ray process is long running.
[20:58:08] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[20:58:23] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[20:58:38] *** Quits: jpn (~jpn@user/jpn) (Quit: Lost terminal)
[20:59:14] *** Joins: rje (~textual@65.141.156.170)
[20:59:15] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Client Quit)
[21:00:02] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[21:00:04] *** Joins: jpn (~jpn@user/jpn)
[21:00:15] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[21:00:27] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Client Quit)
[21:00:49] *** fikran_ is now known as fikran
[21:00:57] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[21:01:14] *** Joins: Atque (~Atque@user/atque)
[21:02:24] *** Joins: dreamon (~dreamon@pd9503ce4.dip0.t-ipconnect.de)
[21:02:38] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[21:03:12] *** Joins: matsaman (~matsaman@user/matsaman)
[21:04:07] *** Quits: djapo (~archangel@user/djapo) (Remote host closed the connection)
[21:04:50] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:9b5d:d48c:37b6:5982) (Quit: pvergain)
[21:04:53] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 256 seconds)
[21:05:01] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[21:05:04] *** Joins: jpn (~jpn@user/jpn)
[21:05:15] *** Joins: djapo (~archangel@user/djapo)
[21:05:41] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[21:06:00] *** Joins: ba (~ba@86.18.4.28)
[21:06:33] *** Quits: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 250 seconds)
[21:06:42] *** Joins: marcello42 (~mp@p5084bed4.dip0.t-ipconnect.de)
[21:07:26] *** Quits: _xor (~xor@74.215.35.24) (Ping timeout: 260 seconds)
[21:08:08] <ska> Whats confusing is that if we use a "with" statement, as per https://docs.ray.io/en/latest/ray-observability/ray-logging.html#redirecting-ray-logs-to-stderr , we cant process each log individually.
[21:08:30] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[21:08:43] <graingert[m]> can anyone else reproduce https://gist.github.com/graingert/f5e81264dd3c3ab8a705809096fcc283?permalink_comment_id=4105304#file-demo-py-L27 ? (the breakpoint gets hit)
[21:08:46] <ska> We are using Python >= 3.7
[21:09:15] <graingert[m]> running python3.10.3 `coverage run --source=. demo.py`
[21:09:35] *** Joins: _xor (~xor@74.215.232.169)
[21:09:42] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[21:10:13] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Ping timeout: 256 seconds)
[21:10:26] <nedbat> graingert[m]: i'm missing context here
[21:11:48] <graingert[m]> I'm looking into an intermittent crash on dask.distributed.profile when running under coverage on py3.10: https://github.com/dask/distributed/pull/5952/files#r830207503
[21:12:02] <graingert[m]> I think the f.f_lineno should not be None in this case
[21:13:29] *** Quits: marcello42 (~mp@p5084bed4.dip0.t-ipconnect.de) (Quit: WeeChat 3.4)
[21:13:33] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[21:14:08] *** Joins: Atque (~Atque@user/atque)
[21:14:34] *** Joins: XV8 (~XV8@2601:5cb:c001:50:f138:1e1a:7095:9508)
[21:14:41] *** jiggawatt is now known as coprolalic
[21:15:01] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[21:15:21] *** Joins: pyeveryt_ (~pyeveryth@dot1x-155-41-160-40.bumc.bu.edu)
[21:15:26] *** dcaro is now known as dcaro_away
[21:15:39] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[21:15:50] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[21:16:16] *** Quits: belphegor666 (~satan@user/belphegor666) (Quit: WeeChat 3.4)
[21:16:47] *** Quits: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 256 seconds)
[21:16:54] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:17:16] <jinsun__> graingert[m]: works here too I tried once (after waiting for like 2-3 minutes)
[21:17:18] *** Joins: mud (~mud@user/kadoban)
[21:17:35] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[21:17:42] <graingert[m]> jinsun__: as it the `breakpoint()` was never hit?
[21:17:45] <graingert[m]> s/it/in/
[21:18:01] *** Quits: dave2F (~dave@78-56-248-37.static.zebra.lt) (Remote host closed the connection)
[21:18:05] <jinsun__> no, it was hit after 2-3 miinutes
[21:18:13] <graingert[m]> oh nice
[21:18:21] <jinsun__> and at the same place f.f_lineno=None f.f_lasti=52 f.f_code.co_name='callHandlers' f.f_code.co_filename='/home/ss/.pyenv/versions/3.10.3/lib/python3.10/logging/__init__.py'
[21:18:23] *** Joins: ckdCreations (~ckdCreati@147.55.133.139)
[21:18:23] <graingert[m]> what was your python version and coverage version?
[21:18:29] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 256 seconds)
[21:18:39] *** Quits: dclxvi (~dclxvi@2a02:8084:84:4100:f1b1:13fd:3a83:cd37) (Quit: dclxvi)
[21:18:43] <graingert[m]> yeah something odd about JUMP_ABSOLUTE happened in 3.10
[21:18:49] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[21:18:49] *** Joins: ravan (~ravan@user/ravan)
[21:19:19] *** Joins: dave2F (~dave@78-56-248-37.static.zebra.lt)
[21:19:38] <jinsun__> same as yours 3.10.3 and 6.3.2
[21:19:45] *** Joins: belphegor666 (~satan@ip-046-223-002-003.um13.pools.vodafone-ip.de)
[21:19:51] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[21:20:11] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[21:20:15] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 240 seconds)
[21:20:25] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[21:20:25] *** Quits: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net) (Ping timeout: 256 seconds)
[21:21:06] *** carbolymer_ is now known as carbolymer
[21:21:14] <graingert[m]> jinsun__: Ah amazing can you paste your info on the gist
[21:21:41] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[21:22:29] *** Quits: dvx (~dvx@5.181.92.64) (Remote host closed the connection)
[21:23:09] *** Joins: Atque (~Atque@user/atque)
[21:23:49] *** Quits: jochum (~quassel@user/jochum) (Ping timeout: 256 seconds)
[21:24:16] *** Joins: jochum (~quassel@user/jochum)
[21:24:37] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 240 seconds)
[21:24:41] *** Joins: vakera_pingveno (~dan@2600:1700:21f9:b150::10)
[21:25:13] *** Quits: Thanattt (~Thanatos@105.112.16.248) (Read error: Connection reset by peer)
[21:25:45] *** Quits: codificat (~pep@90.167.86.255) (Ping timeout: 252 seconds)
[21:25:56] *** Joins: Thanatos (~Thanatos@105.112.16.248)
[21:26:38] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[21:27:11] *** Joins: andyewen (~andyewen@91.110.2.87)
[21:27:23] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 252 seconds)
[21:27:30] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[21:28:33] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[21:29:09] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:30:02] *** Quits: k` (~weechat@about/web/empty) (Quit: WeeChat 3.0)
[21:30:19] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[21:31:04] <sumi80m> is your pussy exploding?
[21:32:00] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[21:33:13] *** Quits: rje (~textual@65.141.156.170) (Ping timeout: 256 seconds)
[21:33:27] *** Quits: marenz (~marenz@dynamic-077-191-215-088.77.191.pool.telefonica.de) (Ping timeout: 256 seconds)
[21:33:42] <jinsun__> graingert[m]: github didn't like 300k character comment :D and that was like the last 10% of the history only, let me cut it down more
[21:34:47] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[21:35:43] *** Joins: kia (~kia@user/kia)
[21:36:05] *** Quits: kia (~kia@user/kia) (Remote host closed the connection)
[21:36:16] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[21:36:17] *** Quits: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 256 seconds)
[21:36:21] *** Quits: flea (nosoul@gateway/vpn/protonvpn/nosoul) (Quit: Leaving)
[21:37:04] *** Joins: Zeturic (~Orimendix@50.26.218.162)
[21:37:30] *** Joins: Klinda (~superleag@user/klinda)
[21:37:30] *** Joins: rje (~textual@50.35.241.164)
[21:37:51] *** Quits: magla (~gelignite@d5363125.access.ecotel.net) (Quit: Stay safe!)
[21:38:12] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[21:39:01] *** Quits: Tajan (~Tajan@user/Tajan) (Ping timeout: 240 seconds)
[21:39:07] *** Joins: paul424 (~tom@ip-5-172-234-87.multi.internet.cyfrowypolsat.pl)
[21:39:15] <graingert[m]> oh I just noticed a bug - I don't add 1000 handlers at all to callHandler
[21:39:38] *** Joins: flea (nosoul@gateway/vpn/protonvpn/nosoul)
[21:40:01] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[21:41:17] *** Quits: mud (~mud@user/kadoban) (Quit: quit)
[21:41:23] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[21:41:48] *** Quits: widp (~widp@2406:7400:73:b5f5:edb2:4f46:902f:1f0e) (Ping timeout: 240 seconds)
[21:41:51] <graingert[m]> and it reproduces without coverage for me
[21:41:53] <graingert[m]> just takes longer
[21:42:19] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[21:42:31] *** Joins: xcombelle (~xavie@176-139-252-198.abo.bbox.fr)
[21:44:16] <lesshaste> this is driving me crazy. I have copied a function and changed its name but it gives a different answer! Could someone please save me! bpa.st/EJLQ
[21:44:49] <lesshaste> objective3 is the same function as objective4 isn't it??
[21:45:15] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Ping timeout: 240 seconds)
[21:45:16] <Wooble> lesshaste: you changes bytree to bylevel
[21:45:21] <Wooble> changed*
[21:45:27] <lesshaste> no way!!
[21:45:29] <lesshaste> argh!
[21:45:30] <lesshaste> and thank you
[21:46:17] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[21:47:49] *** Quits: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 240 seconds)
[21:47:50] *** Joins: widp (~widp@124.123.106.12)
[21:48:31] *** Quits: betuxy (~betuxy@p579adb74.dip0.t-ipconnect.de) (Quit: Connection closed)
[21:48:36] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[21:48:57] <Barones> Guys, Im trying to sync two remote machines virtualenv directory
[21:49:06] *** Joins: mud (~mud@user/kadoban)
[21:49:06] <Barones> but I get no permission error
[21:49:17] <Barones> anyone tried this setup?
[21:49:19] *** Quits: pro_z_ (~pro_z@37.214.63.146) (Ping timeout: 256 seconds)
[21:49:21] <matsaman> Barones: well, you're going to need permission
[21:49:30] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[21:49:57] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:50:04] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[21:50:56] <SnoopJ> Barones, can you explain what you mean by "sync?"
[21:52:35] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[21:52:50] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[21:53:17] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 256 seconds)
[21:53:29] *** Joins: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net)
[21:53:43] *** Joins: bahamas (~lucian@84.232.140.158)
[21:53:46] *** Joins: newpy (~newpy@2601:280:4381:1390:c31c:7c32:bc2a:a52e)
[21:53:49] <Barones> Hi SnoopJ , Im trying to make virtualenv created in one machine be usable in a remote machine, both machines has same mkvirtualenv setup, but when I try to work on virtualenv on remote machine, I get no permisson error to a preactivate file
[21:54:05] <ELFrederich> How should I check if a variable is integer-like?  I've been told isinstance(something, int) is bad
[21:54:18] *** Quits: daoudr (~daoudr@xdsl-31-164-222-159.adslplus.ch) (Quit: Leaving)
[21:54:42] *** Parts: splora (~splora@user/splora) ()
[21:55:16] <SnoopJ> Barones, virtual environments are not designed to be moved, this probably wouldn't work out even if you weren't getting a permission problem. Can you recreate the environment on one of the machines? (i.e. by running `pip freeze > requirements.txt` on the other and then installing that requirements file)
[21:55:24] <SnoopJ> ELFrederich, what does "integer-like" mean?
[21:55:56] <ELFrederich> SnoopJ, meaning, I don't care if it's exactly int.  Isn't the new way to use something from abc?
[21:56:13] <SnoopJ> ELFrederich, that doesn't really clear anything up for me
[21:56:39] *** Joins: han-solo (~han-solo@user/han-solo)
[21:57:15] *** Quits: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 250 seconds)
[21:57:15] <ELFrederich> SnoopJ, I don't care if it's an int, or a subclass, or something that behaves like an int
[21:57:31] *** Joins: quhar (~quhar@staticline-31-182-243-70.toya.net.pl)
[21:57:34] <SnoopJ> ELFrederich, we seem to be getting locked into a loop here. My question is: what behaviors are you interested in?
[21:57:49] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Ping timeout: 256 seconds)
[21:58:15] *** Quits: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net) (Client Quit)
[21:58:22] <SnoopJ> isinstance(obj, int) will cover both int and subclasses thereof
[21:58:35] <SnoopJ> (I have no idea why someone told you that's "bad")
[21:58:36] <ELFrederich> SnoopJ, I have a function that accepts a project path or a project id using the same variable.  I want to do something like if isinstance(path_or_id, int): ...
[21:59:06] <ELFrederich> I remember in the past using isinstance is probably always wrong.
[21:59:17] <SnoopJ> Why?
[21:59:27] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[21:59:46] <hodapp> what integer-like property are you relying on?
[22:00:11] <ELFrederich> I don't remember... perhaps something like just write your code as if it were the type you expected.  Otherwise people couldn't use subclasses or adapters or whatever.  Should check for behavior rather than concrete classes
[22:00:26] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[22:00:30] <SnoopJ> If you expect the object to be of type `int` or a subtype, isinstance() is correct and legible.
[22:00:41] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[22:01:04] <SnoopJ> (and if you want something outside of that, see hodapp's question)
[22:01:16] *** Joins: daoudr (~daoudr@xdsl-31-164-222-159.adslplus.ch)
[22:01:32] <ELFrederich> hodapp, there is a shortcut you can do with python-gitlab.  Save an API call by doing gitlab.v4.objects.Project(gitlab.projects, {"id": project_id}) to construct a Project object without making an API call if you already know the ID
[22:01:50] <hodapp> the integer-like-but-not-int types you're liable to receive are also pretty sparse, I think; numpy's uint/int 8/16/32/64 are all I can think of for that
[22:02:03] <ELFrederich> perhaps I could just try doing int(project_path_or_id) and see if it fails.
[22:02:18] *** Joins: sshine (~simon@zhen.eta.solutions)
[22:02:18] *** Joins: Neeknaim (~Neeknaim@77.139.140.101)
[22:02:22] <SnoopJ> that will accept floats, FWIW
[22:02:30] <Neeknaim> Hello
[22:02:34] <ELFrederich> SnoopJ, damn...
[22:02:40] <hodapp> why not just check if it's a string, and if it's not, just pass the value through as "id" and let the API holler at you if it's wrong?
[22:02:52] <ELFrederich> what about isinsance(project_path_or_id, numbers.Integral) instead of using int?
[22:02:55] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:6d0c:3ed5:99e5:49fe)
[22:03:46] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[22:03:52] <SnoopJ> ELFrederich, we couldn't tell you without an answer to the question we've asked several times now about what you need for types that aren't directly related to `int`
[22:04:13] <SnoopJ> Integral *might* be what you want, depending on that answer
[22:04:27] <ELFrederich> I just want to know if it's string-like or int-like
[22:04:33] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4.1)
[22:04:40] <SnoopJ> so you've said
[22:04:40] <hodapp> or, have separate path and ID arguments and make it explicit in the docs that ID should be an integer, and that it overrides 'path' if given
[22:04:41] <Neeknaim> I'm trying to do an exercise in kaggle and use the imputer on the X_test df that was supplied, but whenever I try to run my model-predict it fails saying that there are NaNs. And it is right, there are several NaNs in X_test even after I ran my imputer over it. What am I missing here?
[22:04:46] <ELFrederich> because in one case I'd take the shortcut and in the other case I'd use an API call
[22:04:54] *** Quits: acresearch (~acresearc@user/acresearch) (Remote host closed the connection)
[22:05:24] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[22:05:31] <SnoopJ> Neeknaim, are you asking "where did these NaNs come from?"
[22:05:40] <SnoopJ> or "what should I do about them?"
[22:05:52] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[22:06:07] <Neeknaim> SnoopJ: No, I'm asking why when I'm using an imputer on them they're still there and not being replaced.
[22:06:56] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 268 seconds)
[22:07:11] <SnoopJ> I don't have enough context to do more than speculate that the imputer isn't designed to do that.
[22:07:14] *** Joins: squirrel (uid529456@user/squirrel)
[22:07:27] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[22:07:29] *** Joins: oaulakh (~oaulakh@106.204.192.199)
[22:07:57] *** Joins: Atque (~Atque@user/atque)
[22:07:57] *** Quits: vladoski (~vladoski@2001:b07:add:d406:763a:3f6c:5375:ce91) (Remote host closed the connection)
[22:08:28] <Neeknaim> SnoopJ: I was under the impression that the simple imputer should replace NaNs with the mean value
[22:08:36] <hodapp> imputation can take many forms
[22:08:51] <SnoopJ> Neeknaim, you're talking about sklearn.impute.SimpleImputer, or..?
[22:10:00] <oaulakh> can anyone help with this traceback https://bpa.st/FEJA, and here is the code https://bpa.st/ZYXA
[22:10:10] <Neeknaim> SnoopJ: Yes
[22:10:11] *** Joins: l4yer (~l4yer@user/l4yer)
[22:10:27] <Neeknaim> https://privatebin.net/?63f09d3a0c9c9d0b#CLNjzMzr4nMtnyDT8Jww5MPmVBCCxUugKtyXAwvUNA4N
[22:10:37] *** Quits: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 256 seconds)
[22:11:24] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 240 seconds)
[22:11:34] <Neeknaim> wait. sorry
[22:11:43] <SnoopJ> Neeknaim, that appears to be what the default would do, yes
[22:12:06] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[22:12:07] <Neeknaim> I see I didn't put the right df in model.predict()
[22:12:34] <SnoopJ> that could explain it :)
[22:13:18] *** Quits: soju-test-user (~soju-test@lfbn-idf2-1-1140-121.w90-92.abo.wanadoo.fr) (Remote host closed the connection)
[22:14:00] <squirrel> hello. i have a module `foo` and tests that import `foo` and test it. i'm trying to use tox to run tests. how do i make `foo` importable with pytest? i'm normally using poetry so i have a pyproject.toml but i'm not sure if i should use poetry with tox?
[22:14:13] *** Joins: Syzygy (~Syzygy@2001:871:265:1cdc:d51:72bc:2a08:c00)
[22:14:49] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[22:15:39] <sco1> tox handles pyproject.toml just fine
[22:16:19] *** Joins: aslicedbanjo (~aslicedba@host86-168-244-104.range86-168.btcentralplus.com)
[22:16:35] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[22:16:57] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[22:17:22] <jinsun__> oaulakh: which python version? and  it looks like that traceback is for a different code, it says line 29
[22:17:26] <squirrel> i mean, something like running `poetry install` will screw up the tox environment
[22:17:35] <squirrel> so i don't suppose i should do it
[22:17:44] *** Joins: BrokenCog (~BrokenCog@c-73-92-151-140.hsd1.ca.comcast.net)
[22:18:05] <BrokenCog> any Emacs users?  does python-mode indent-region work correctly/"as expected" for you??
[22:18:50] <squirrel> or perhaps there's something like `poetry install-but-ignore-dependencies-already-in-tox`? or.. i don't know
[22:19:23] <sco1> Why do you need poetry install?
[22:19:24] <squirrel> (`foo` depends on `bar` and i want to test `foo` against different versions of `bar`)
[22:19:28] *** Joins: Payam95 (~Payam@138.106.57.131)
[22:19:36] <SnoopJ> squirrel, if you run pytest as `python3 -m pytest path_containing_foo` it should be importable because the CWD is added to the path in that case
[22:19:51] <sco1> https://tox.wiki/en/latest/example/package.html#poetry there is no magic required
[22:20:05] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[22:20:35] *** Joins: magla (~gelignite@d5363125.access.ecotel.net)
[22:20:35] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:20:55] <squirrel> sco1: `poetry install` will make `foo` available, for one
[22:21:00] <oaulakh> jinsun__, i hide the other ocde, which was not usefull
[22:21:08] *** Joins: kostkon_ (~androirc@athedsl-393845.home.otenet.gr)
[22:21:16] <sco1> tox installs your project
[22:21:17] <squirrel> SnoopJ: is that the recommended way?..
[22:21:21] <sco1> You don't need to also execute poetry install
[22:21:23] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:21:39] <oaulakh> jinsun__, i am using 3.10 python
[22:21:50] <squirrel> sco1: it doesn't for me
[22:21:58] <sco1> Then show the configuration that doesn't work
[22:22:09] <sco1> We can't answer questions you don't ask
[22:22:21] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzzâ€¦)
[22:22:37] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[22:23:14] <jinsun__> ouemt: okay so python version is not the problem probably, dunno about the code
[22:23:57] <SnoopJ> squirrel, the pytest docs don't make a recommendation one way or another, but do point out the difference in the sys.path you end up with: https://docs.pytest.org/en/6.2.x/pythonpath.html#invoking-pytest-versus-python-m-pytest
[22:24:33] <TML> oaulakh: What is line 29?
[22:25:37] <oaulakh> TML, its with socket.socket
[22:26:54] *** Quits: djapo (~archangel@user/djapo) (Read error: Connection reset by peer)
[22:27:21] *** Joins: Atque (~Atque@user/atque)
[22:27:22] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.4)
[22:27:27] *** Joins: djapo (~archangel@user/djapo)
[22:27:38] *** Joins: Tempesta (~Tempesta@user/tempesta)
[22:28:01] <Syzygy> I've had a database running on a kubernetes cluster for a while now, at the same time I have an API strapped in front of that database. However that API started failing tonight due to a weakly referenced object. The DB cursor in line 46 of this https://bpa.st/MT2Q
[22:28:19] <Syzygy> or rather, the context inside that cursor.
[22:28:19] *** Quits: aphysically (~aphysical@user/aphysically) (Quit: aphysically)
[22:28:36] <Syzygy> But shouldn't my _ensure_connection function ensure that those things stay alive?
[22:29:01] <TML> oaulakh: Doesn't seem right, that shouldn't throw an error in Python 3.10 - is there any chance you've invoked the wrong python interpreter on that code?
[22:29:05] *** Quits: MajorBiscuit (~MajorBisc@c-001-013-060.client.tudelft.eduvpn.nl) (Ping timeout: 250 seconds)
[22:29:14] *** Joins: Auron (Auron956@user/auron)
[22:29:19] <squirrel> SnoopJ: i see. this will work i guess, thanks! in any case i don't think i need that env for anything but running that one command
[22:29:42] *** hackers is now known as remote
[22:29:44] <squirrel> sco1: well, here's the gist of the setup https://bpa.st/IVGQ
[22:29:52] <SnoopJ> it can be slightly janky but I've found it helpful to invoke pytest this way in a past project that uses poetry (which I regret for reasons like this)
[22:29:56] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 245 seconds)
[22:30:16] <SnoopJ> although I guess now that pip can do editable installs with pyproject.toml the pain is lessened
[22:30:56] <TML> Syzygy: I can definitely see a path through your code where _ensure_connection() fails to establish a connection and that gets bubbled right back up to your cursor.execute
[22:31:00] *** Quits: sreve (~quassel@p4ff44c5a.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[22:31:11] *** Quits: flea (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 252 seconds)
[22:31:13] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[22:32:14] *** Quits: wlemuel (~wlemuel@210.22.124.110) (Read error: Connection reset by peer)
[22:33:03] *** Quits: rsx (~dummy@ppp-188-174-139-8.dynamic.mnet-online.de) (Quit: rsx)
[22:33:51] *** Quits: BrokenCog (~BrokenCog@c-73-92-151-140.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[22:34:12] *** Quits: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 240 seconds)
[22:34:19] *** Joins: sreve (~quassel@p4ff44c5a.dip0.t-ipconnect.de)
[22:34:26] *** Joins: gambl0re (~gambl0re@45.72.213.26)
[22:34:37] *** Quits: gambl0re (~gambl0re@45.72.213.26) (Read error: Connection reset by peer)
[22:34:47] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[22:35:27] *** Quits: anddam (~anddam@user/anddam) (Quit: WeeChat 3.4)
[22:35:56] *** Joins: wlemuel (~wlemuel@210.22.124.110)
[22:36:05] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[22:36:13] <Syzygy> TML, true, but we
[22:36:52] <Syzygy> consider communication within the same kubernetes cluster and within googles internal network to be fairly stable
[22:36:55] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 256 seconds)
[22:36:57] <sco1> squirrel: Still not sure what issue we're trying to reproduce, but e.g. this configuration works fine: https://github.com/sco1/flake8-annotations/blob/main/tox.ini#L27-L53
[22:37:24] *** ChanServ sets mode: +o The-Compiler
[22:37:30] *** The-Compiler sets mode: +b *!*@39.191.202.62.dynamic.cgnat.res.cust.swisscom.ch
[22:37:31] *** sumi80m was kicked by The-Compiler (sumi80m)
[22:37:32] *** Joins: codificat (~pep@90.167.94.92)
[22:37:36] *** The-Compiler sets mode: -o The-Compiler
[22:38:15] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 240 seconds)
[22:39:01] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[22:39:04] <Syzygy> plus, when it happens, one request fails, while the next request should then try to establish another connection. that's acceptable.
[22:39:29] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[22:40:00] *** Joins: humanBird (~humanBird@2603-8001-7000-3642-dceb-bf7e-650a-7ef8.res6.spectrum.com)
[22:40:16] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[22:40:36] *** Quits: ST47 (~ST47@wikimedia/st47) (Ping timeout: 240 seconds)
[22:40:43] <graingert[m]> nedbat: ok I have an actual reproducer where I just get the bad event: https://gist.github.com/graingert/f5e81264dd3c3ab8a705809096fcc283#file-settrace_demo-py
[22:40:48] *** Joins: gambl0re (~gambl0re@45.72.213.26)
[22:40:53] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[22:41:10] *** Joins: BrokenCog (~BrokenCog@c-73-92-151-140.hsd1.ca.comcast.net)
[22:41:47] *** Joins: Oddity (~Oddity@user/oddity)
[22:41:59] <squirrel> sco1: seems they are calling pytest via `python -m pytest`, that's what SnoopJ suggested. i guess this is an official workaround then!
[22:42:27] <SnoopJ> you could munge sys.path yourself if you wanted to invoke it by other means, of course
[22:42:30] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[22:42:45] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:1b6b:8479:90d3:db91)
[22:42:49] *** Joins: jazzy (~jaziz@user/jaziz)
[22:43:42] *** Quits: daoudr (~daoudr@xdsl-31-164-222-159.adslplus.ch) (Quit: Leaving)
[22:43:49] *** Joins: spawnmc (~spawnmc@user/spawnmc)
[22:44:06] *** Quits: gambl0re (~gambl0re@45.72.213.26) (Read error: Connection reset by peer)
[22:44:46] *** Joins: jpn (~jpn@user/jpn)
[22:44:47] *** Parts: ecraven (ecraven@user/nex) (Bye)
[22:45:05] *** Quits: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:05] <spawnmc> I don't understand why in https://bpa.st/3DCQ , line is empty when printing outside the loop
[22:45:30] <Neeknaim> A question about modeling: Lets say I have an X df and a X_test df (the X_test is the one that I need to use at the end to predict the results). I take the X df and split it to train and valid dfs. I check which model looks best and then run the model on the whole of X (which used to be split to train and valid) and then use this model on X_test. Is that legitimate? Or should I have just stayed with the model from the train_test_split (train vs valid)
[22:45:32] <Neeknaim> and use that on X_test?
[22:45:42] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Quit: Leaving)
[22:46:32] <exarkun> spawnmc: What do you think it should be?
[22:46:33] <oaulakh> TML, yes it is from different python from micropython 1.18
[22:46:33] <Neeknaim> *I check which model looks best and then run the model --> I check which model looks best and then fit the model on the whole of X
[22:46:39] *** Quits: tortal (~tortal@user/tortal) (Read error: Connection reset by peer)
[22:47:04] <Repiphany> spawnmc: You're reusing `line` in the for loop in line 1 as well as the assignment in line 4
[22:47:26] *** Joins: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com)
[22:47:45] <Repiphany> If the re.search is None (e.g. for an empty line) on the last iteration of that loop, then line 4 isn't run
[22:48:01] <TML> oaulakh: That use of socket.socket as a context manager is pretty new to Python 3, it seems like micropython may not have backported that
[22:48:21] <TML> oaulakh: https://stackoverflow.com/questions/16772465/how-to-use-socket-in-python-as-a-context-manager has some suggestions
[22:48:52] <spawnmc> Ah
[22:48:58] <spawnmc> silly me
[22:49:03] <spawnmc> ty
[22:49:53] *** Quits: quhar (~quhar@staticline-31-182-243-70.toya.net.pl) (Ping timeout: 252 seconds)
[22:50:11] *** Joins: gambl0re (~gambl0re@45.72.213.26)
[22:50:48] *** Quits: gambl0re (~gambl0re@45.72.213.26) (Read error: Connection reset by peer)
[22:51:17] <spawnmc> I suppose I could have either used a break or assigned it to a different var :D
[22:51:19] <oaulakh> TML, let me try
[22:51:32] <graingert[m]> nedbat: https://bugs.python.org/issue47085
[22:51:57] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[22:52:27] *** Joins: ngp (~ngp@199.180.249.183)
[22:53:23] *** Joins: greedom (~greedom@p200300de67110e003e89986c4a4c4c52.dip0.t-ipconnect.de)
[22:53:55] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 256 seconds)
[22:55:39] *** Joins: KombuchaKip (~kip@192.252.230.5)
[22:56:15] *** Joins: quhar (~quhar@staticline-31-182-243-70.toya.net.pl)
[22:56:15] *** Joins: zmt00 (~zmt00@user/zmt00)
[22:57:09] *** Joins: Msandoy (~Msandoy@telia-59080e-89.connect.netcom.no)
[22:57:32] *** Joins: gambl0re (~gambl0re@45.72.228.31)
[22:57:41] <orbisvicis> I have this autogenerated python file:
[22:57:42] <orbisvicis> https://bpa.st/CTSQ
[22:57:46] *** Joins: bahamas (~lucian@84.232.140.158)
[22:57:56] <orbisvicis> Is there anything strange about this? Line 8 is an import error / permission denied
[22:58:16] *** Quits: relight (~relight@user/relight) (Ping timeout: 245 seconds)
[22:58:34] *** Joins: relight (~relight@user/relight)
[22:58:40] *** Joins: djapo (~archangel@user/djapo)
[22:59:12] *** Quits: greedom (~greedom@p200300de67110e003e89986c4a4c4c52.dip0.t-ipconnect.de) (Remote host closed the connection)
[22:59:41] *** Joins: ST47 (~ST47@wikimedia/st47)
[23:00:02] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[23:00:07] <bjs> orbisvicis: well permission denied suggests the thing exists but you just didn't have permission to access it
[23:00:36] *** Quits: Msandoy (~Msandoy@telia-59080e-89.connect.netcom.no) (Client Quit)
[23:02:17] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:8815:158b:b37a:1ff5) (Quit: Textual IRC Client: www.textualapp.com)
[23:02:18] *** Joins: acresearch (~acresearc@user/acresearch)
[23:02:26] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[23:03:14] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[23:03:46] *** Quits: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[23:03:55] *** Joins: Pickchea (~private@user/pickchea)
[23:04:04] *** Joins: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[23:04:05] <orbisvicis> could it be a * import before __all__? (and possible recursion?)
[23:04:12] <orbisvicis> https://bpa.st/XVJA
[23:04:15] *** Joins: wakeup (~wakeup@user/wakeup)
[23:04:45] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 252 seconds)
[23:04:53] <bjs> orbisvicis: well what is the actual error you are getting?
[23:05:06] <zamba> what's the fastest/best way of going from binascii.hexlify() to a decimal representation of the hex value?
[23:05:17] <zamba> and maybe also skip binascii altogether?
[23:05:18] <orbisvicis> huh
[23:05:25] <orbisvicis> I'm not getting it anymore
[23:05:38] *** Joins: daoudr_ (~daoudr@xdsl-31-164-222-159.adslplus.ch)
[23:06:18] <exarkun> zamba: list()
[23:06:57] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[23:06:59] <orbisvicis> it was this: https://bpa.st/NTHA
[23:07:13] <zamba> exarkun: list?
[23:07:21] <bjs> orbisvicis: was?
[23:07:26] <bjs> orbisvicis: so it's gone now?  did you fix the permissions?
[23:07:28] *** Joins: parv (~quass@user/parv)
[23:07:36] <exarkun> zamba: this is what you want right?
[23:07:37] <exarkun> >>> list(b"hello world")
[23:07:39] <exarkun> [104, 101, 108, 108, 111, 32, 119, 111, 114, 108, 100]
[23:07:40] <orbisvicis> I didn't do anything
[23:07:52] *** Quits: bitkiller (~bitkiller@user/bitkiller) (Quit: bitkiller)
[23:08:34] <orbisvicis> bjs, oops, the error is still there, I just ran the interpreter from the build directory so it imported from the wrong location
[23:08:57] <zamba> exarkun: for instance.. given xD578112B, i want 3581415723
[23:09:04] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[23:09:07] <exarkun> zamba: Ah.
[23:09:10] <exarkun> zamba: Well, int, then.
[23:09:50] <exarkun> zamba: int("D578112B", 16) == 3581415723.  also, int("0x3581415723", 16) does too.
[23:10:03] *** Quits: LucaTM (~LucaTM@user/lucatm) (Ping timeout: 250 seconds)
[23:10:17] <zamba> exarkun: but how can i skip going "through" the hex value first?
[23:10:21] <exarkun> zamba: ...
[23:10:23] <exarkun> zamba: list()
[23:10:27] <Syzygy> Any idea why my cursor._cnx might be garbage collected when my database is active? to be fair the mysql cursor itself might have been fairly old
[23:10:30] <SnoopJ> zamba, you want to convert bytes to an integer?
[23:10:36] <zamba> SnoopJ: yes
[23:10:45] <SnoopJ> zamba, int.from_bytes()
[23:10:49] *** Joins: cuanim (~cuanim@31.215.207.104)
[23:10:49] *** Quits: cuanim (~cuanim@31.215.207.104) (Changing host)
[23:10:49] *** Joins: cuanim (~cuanim@user/cuanim)
[23:10:57] <zamba> ah, yes
[23:11:01] <zamba> i remember that one
[23:11:08] *** Parts: exarkun (~exarkun@user/exarkun) (WeeChat 3.3)
[23:11:17] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[23:11:21] <SnoopJ> and if you have multiple such values, struct.unpack()
[23:11:23] <TML> Syzygy: Are you sure it was garbage collected and not just that the database connection was closed?
[23:12:04] *** Joins: quhar_ (~quhar@188.146.102.227.nat.umts.dynamic.t-mobile.pl)
[23:12:27] *** Joins: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:f939:34d5:7362:6adf)
[23:12:43] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[23:13:56] <purple_cthulhu> Hi, A question: Why does int.to_bytes() use literal "big" and "little" string values to specify the byte order? Why not using bool flags?
[23:14:27] *** Joins: Atque (~Atque@user/atque)
[23:14:44] <bjs> purple_cthulhu: which would be True and which would be False?
[23:15:01] <bjs> :P
[23:15:32] *** Quits: quhar (~quhar@staticline-31-182-243-70.toya.net.pl) (Ping timeout: 240 seconds)
[23:15:39] *** Joins: ubert (~Thunderbi@p200300ecdf1588ca0b7aa2fbaa2d0440.dip0.t-ipconnect.de)
[23:15:42] <TML> Syzygy: One example of what I was talking about earlier that comes to mind for me is that if the k8s cluster needs to restart the pod where the mysql service lives between your creation of self.db_cursor and your call to self.db_cursor.execute
[23:16:39] <purple_cthulhu> bjs, Yes, or using int flags (e.g.: LITTLE = 1, BIG = 2)
[23:16:55] <bjs> purple_cthulhu: "Yes" isn't an answer to which should be which
[23:17:01] <TML> purple_cthulhu: Why would that be any better?
[23:17:03] <orbisvicis> hmm, it might require a cygwin rebase
[23:17:12] <bjs> purple_cthulhu: and why would an int (or indeed a boolean) be better than the strings it has at the moment
[23:17:38] <purple_cthulhu> To prevent calling an extra strncmp()?
[23:17:40] <orbisvicis> can I load a c module directly without importing it? dlopen?
[23:17:48] <bjs> purple_cthulhu: this isn't C
[23:18:30] *** Joins: Elzington_ (~Elzington@87.249.134.24)
[23:20:03] <purple_cthulhu> bjs, I mean when we can do the stuff with bools/ints, why to use strings?
[23:20:12] <orbisvicis> right, ctypes.CDLL(...) fails on the opencv dll but not a numpy dll
[23:20:19] <bjs> purple_cthulhu: I ask the same question, we can do things with strings, why use ints and bools that are completely opaque
[23:20:45] <bjs> "little" is obvious and clear and works fine,  what motivation is there to change it to be some random boolean or integer instead
[23:20:46] <TML> purple_cthulhu: Because strings generally convey more meaning to most human brains than magic numbers whose mapping you have to remember over time
[23:20:46] *** Quits: Elzington (~Elzington@static-68-235-44-30.cust.tzulo.com) (Ping timeout: 245 seconds)
[23:20:53] *** Joins: LucaTM (~LucaTM@user/lucatm)
[23:21:23] <TML> purple_cthulhu: I will happily give up a *lot* of CPU cycles just to not have to remember/lookup whether 1 is big or little endian
[23:21:41] *** Joins: funhouse (~funhouse@user/funhouse)
[23:21:54] <TML> CPU cycles are far cheaper than my brain cycles are, and much easier to scale
[23:22:09] <bjs> I don't even want to think about how many cycles are involved in comparing ints anyway
[23:22:19] <bjs> I'd not be surprised if the string comparison was faster due to interning
[23:22:21] *** Quits: tmart (~tmart@47-220-166-159.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 252 seconds)
[23:22:55] <Repiphany> struct.unpack '@=<>!'
[23:23:16] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[23:23:25] *** Quits: mud (~mud@user/kadoban) (Ping timeout: 240 seconds)
[23:24:43] *** Joins: tmart (~tmart@47-220-166-159.gtwncmkt04.res.dyn.suddenlink.net)
[23:25:43] *** Joins: oriba (~oriba@dynamic-089-014-152-127.89.14.pool.telefonica.de)
[23:25:51] <pyeveryt_> how can i get the index of dataframe row when this condition is met? if sample in shuffled_balanced['Sample ID']:  so I can set shuffled_balanced['name'] = sample ?
[23:25:53] <Barones> SnoopJ, I could actually make it work, some environment files need execution by user and mega.nz overwrite file permission across machines, I just fixed it and now I can sync Virtual Environmnets btw remote machines
[23:26:38] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:687b:b58d:cf7d:aae5)
[23:26:38] *** Joins: hams (~hams@73.232.205.0)
[23:26:38] *** Quits: hams (~hams@73.232.205.0) (Changing host)
[23:26:38] *** Joins: hams (~hams@user/hams)
[23:27:00] *** Quits: vulpes_vulpes (~vulpes_vu@62-64-207-88.dynamic.dial.as9105.com) (Remote host closed the connection)
[23:27:07] *** Joins: anddam (~anddam@user/anddam)
[23:27:35] *** Joins: bomb-on (~bomb-on@user/bomb-on)
[23:27:41] <spawnmc> any tips on determining if a single, specific file in a linux filesystem is older than 2 hours?
[23:27:49] *** Quits: oaulakh (~oaulakh@106.204.192.199) (Quit: Leaving)
[23:28:52] *** Quits: paul424 (~tom@ip-5-172-234-87.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[23:28:59] <FreeBDSM> hi. I have a function that clones dashboards. Dashboards have 2 properties: ids and names. How to return both? Or should I instead return 1 dict with keys being dashboard ids and values being dashboard names?
[23:29:22] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[23:29:47] *** Joins: ttree (~ttree0@c-24-17-16-242.hsd1.wa.comcast.net)
[23:30:14] *** Quits: Balzy (~Balzy@host-82-60-90-210.retail.telecomitalia.it) (Ping timeout: 260 seconds)
[23:30:20] <TML> spawnmc: touch --data="2 hours ago" /tmp/myfile && find /path -newer /tmp/myfile
[23:30:30] <TML> spawnmc: Err - --date, not --data
[23:30:50] *** Quits: plastico (~plastico@neomutt/plastico) (Remote host closed the connection)
[23:30:54] <spawnmc> thanks but I'm looking to do this the python way
[23:30:58] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[23:31:03] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:2d9d:c5e:10d5:ddbf)
[23:31:13] <TML> Oh - then os.stat
[23:31:22] *** Joins: plastico (~plastico@neomutt/plastico)
[23:31:34] <purple_cthulhu> bsj, Actually, it's my problem! :/ I look at everything from a low-level perspective!
[23:31:45] *** Joins: marderIII (~MarderIII@86.88.74.111)
[23:32:43] *** Joins: Balzy (~Balzy@host-79-25-209-211.retail.telecomitalia.it)
[23:33:45] *** Quits: Payam95 (~Payam@138.106.57.131) (Quit: Client closed)
[23:34:09] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[23:34:36] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[23:36:59] *** Quits: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[23:37:21] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[23:37:45] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[23:37:51] *** Quits: acresearch (~acresearc@user/acresearch) (Quit: WeeChat 2.8)
[23:38:07] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[23:38:17] *** Joins: jpn (~jpn@user/jpn)
[23:38:53] *** Joins: marderII1 (~MarderIII@86.88.74.111)
[23:39:09] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:2d9d:c5e:10d5:ddbf) (Quit: Textual IRC Client: www.textualapp.com)
[23:40:10] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:40:41] *** Joins: wakeup (~wakeup@user/wakeup)
[23:40:57] *** Quits: LAVBoy (~LAVBoy@85.249.46.8) (Ping timeout: 256 seconds)
[23:41:03] <SnoopJ> Barones, as long as you know that using a virtual environment anywhere other than where it was created is a very bad idea, even if it works
[23:42:45] *** Joins: qlixed (~qlixed@152.170.45.16)
[23:44:34] *** Joins: greedom (~greedom@p200300de67110e003e89986c4a4c4c52.dip0.t-ipconnect.de)
[23:45:28] *** Quits: slav0nic (slav0nic@python.su) (Remote host closed the connection)
[23:45:47] *** Joins: slav0nic (slav0nic@python.su)
[23:46:44] *** Joins: Atque (~Atque@user/atque)
[23:46:51] *** Joins: mud (~mud@user/kadoban)
[23:47:25] *** Quits: cuanim (~cuanim@user/cuanim) (Read error: Connection reset by peer)
[23:47:51] *** Quits: toxictrash (~toxictras@host-91-237-158-49.anfa.net.pl) (Quit: leaving)
[23:49:25] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[23:49:49] *** Joins: zmt01 (~zmt00@user/zmt00)
[23:49:50] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[23:49:51] *** Quits: qlixed (~qlixed@152.170.45.16) (Quit: That's all folks!!)
[23:50:06] *** Joins: qlixed (~qlixed@152.170.45.16)
[23:50:37] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[23:50:48] *** Joins: Intelo (~Intelo@user/Intelo)
[23:50:50] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[23:50:59] <Intelo> OK to talk about non-python?
[23:51:06] <Barones> why would be bad SnoopJ ?
[23:51:07] <grym> Intelo: Just ask your question. It's the best way to know if anyone can help.
[23:51:10] <Intelo> Can anyone pick one for the web and one for the OS programming?  clojure,Lisp, Go, Rust, Haskel, APL, Scala
[23:51:15] <Intelo> grym ^
[23:51:20] <ChrisWarrick> Intelo: python
[23:51:25] *** Joins: toxictrash (~toxictras@host-91-237-158-49.anfa.net.pl)
[23:51:50] <Intelo> ChrisWarrick no in list :)
[23:52:03] <ChrisWarrick> Intelo: thatâ€™s the only on-topic answer in this channel though
[23:52:26] <SnoopJ> Barones, because it's very very easy to break them this way
[23:52:27] *** Joins: bomb (~bomb@user/bomb)
[23:52:32] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[23:52:35] <SnoopJ> (because they are *not* designed to do this, pretty much the opposite)
[23:52:36] *** Joins: jpn_ (~jpn@user/jpn)
[23:52:53] <Intelo> ChrisWarrick lol ok :)
[23:53:22] <Intelo> SnoopJ well what is the list good for then?
[23:53:34] <SnoopJ> Intelo, list?
[23:53:52] <bjs> Intelo: why are you asking in #python if you want an answer other than "Python" :P
[23:53:55] *** Joins: subopt (~subopt@2603-8081-2302-459a-f140-9a7b-333f-c9b1.res6.spectrum.com)
[23:54:21] <OMGOMG> since python is a dialect of lisp, that seems like the obvious answer
[23:54:32] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 240 seconds)
[23:54:40] <SnoopJ> OMGOMG, who says it's a dialect of Lisp?
[23:54:48] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 252 seconds)
[23:54:51] <Intelo> bjb because most nice people are in #python ?
[23:54:57] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[23:55:01] <Swayze> lol @ dialect of lisp
[23:55:14] <Intelo> this list SnoopJ clojure,Lisp, Go, Rust, Haskel, APL, Scala
[23:55:22] <SnoopJ> Intelo, I was not responding to your question.
[23:55:29] <Intelo> SnoopJ ok
[23:55:39] <OMGOMG> SnoopJ: i thought everybody knew that
[23:55:48] *** Joins: wakeup (~wakeup@user/wakeup)
[23:55:49] <SnoopJ> OMGOMG, I didn't, I've never heard that before.
[23:55:56] <supakeen> Sigh.
[23:56:33] *** Joins: crashrep (~crashrep@user/crashrep)
[23:56:34] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[23:56:40] <deltab> Intelo: Rust and Go are the most obvious choices for an OS, though Lisp has been used too
[23:57:05] <grym> OMGOMG: norvig said once that python felt very lispy to him, but that's about as far as it goes.
[23:57:10] <Intelo> deltab what about web?
[23:57:17] <Barones> you are right SnoopJ, I dont have another solution to work on same project on two different machines
[23:57:25] <deltab> sever-side?
[23:57:27] <escherial> hey, this might be an awful question, but is there a way to convert python code into an AST, do some operations on it, then convert it back to source? i just want to remove a few class definitions in a file
[23:57:29] <grym> (in 2002)
[23:57:53] <bomb> Intelo "The Web Was Done by Amateurs"
[23:57:58] <SnoopJ> Barones, if you run `pip freeze > requirements.txt` in one environment, it will create a file that contains all the packages in that environment which you can use to recreate it on another system with the same version of Python.
[23:58:13] <Swayze> https://norvig.com/python-lisp.html
[23:58:17] <Intelo> bomb ya and we have to live with it
[23:58:18] <Swayze> 0.0
[23:58:19] <Barones> I would have to freeze and pip install -r constantly
[23:58:25] <SnoopJ> escherial, there's `ast.unparse` since 3.9
[23:58:46] <Intelo> delarge server side and client side
[23:59:07] <SnoopJ> (it's not guaranteed to be a round-trip in terms of formatting, but it should respect the source's semantics)
