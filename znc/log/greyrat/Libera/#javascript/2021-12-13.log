[00:01:12] <velix> Is classList.contains() "expensive"?
[00:01:39] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[00:02:12] <Alexendoo> velix: unless your element has like a million classes no
[00:02:24] <velix> Alexendoo: damn ;)
[00:02:59] <Alexendoo> Though even then it's possible it would be still be fast, would be down to the implementation
[00:03:54] *** Joins: reezoh (~reezoh@2600:1702:3cf0:2e00:30e1:ed5f:a3a0:fd59)
[00:03:59] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[00:05:33] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[00:09:15] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 268 seconds)
[00:11:11] *** Tobbi__ is now known as Tobbi
[00:20:49] *** Joins: onosendi (~onosendi@user/onosendi)
[00:21:34] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[00:21:34] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[00:21:34] *** Joins: wroathe (~wroathe@user/wroathe)
[00:21:39] *** Joins: wombawomba (~andre@89-253-80-164.customers.ownit.se)
[00:22:34] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[00:25:39] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[00:26:19] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[00:27:39] *** Quits: daoudr (~daoudr@2a02:1205:c690:ca10:843a:6e21:9631:a11f) (Quit: Leaving)
[00:28:54] *** Quits: wombawomba (~andre@89-253-80-164.customers.ownit.se) (Ping timeout: 256 seconds)
[00:29:26] *** Joins: wombawomba (~andre@89-253-80-164.customers.ownit.se)
[00:34:43] *** Joins: junebug (~junebug@2600:1700:3db0:2540:1bc2:b6e8:b3fd:1f4a)
[00:35:13] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.3)
[00:35:22] *** Quits: jellobot (~jellobot@li334-26.members.linode.com) (Remote host closed the connection)
[00:35:30] *** Joins: jellobot (~jellobot@li334-26.members.linode.com)
[00:35:31] *** ChanServ sets mode: +v jellobot
[00:35:32] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[00:35:41] *** Joins: taupiqueur (~taupiqueu@63.145.204.77.rev.sfr.net)
[00:36:16] *** Quits: wombawomba (~andre@89-253-80-164.customers.ownit.se) (Ping timeout: 256 seconds)
[00:36:30] *** Joins: skillbot2 (~skillbot@li1200-69.members.linode.com)
[00:36:30] *** Quits: skillbot2 (~skillbot@li1200-69.members.linode.com) (Changing host)
[00:36:30] *** Joins: skillbot2 (~skillbot@user/skillbot)
[00:36:30] *** ChanServ sets mode: +v skillbot2
[00:38:15] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[00:38:16] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[00:38:16] *** Joins: wroathe (~wroathe@user/wroathe)
[00:38:33] <velix> muhaha, the IT department just sent a message via teams ... the ticketsystem had to be shut down because of ...
[00:38:39] <velix> silly: guess it
[00:38:56] <ThePendulum> spontaneous human combustion
[00:39:29] *** Quits: voltage_ (voltage@user/voltage) (Read error: Connection reset by peer)
[00:40:01] *** Quits: taupiqueur (~taupiqueu@63.145.204.77.rev.sfr.net) (Ping timeout: 250 seconds)
[00:40:13] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 250 seconds)
[00:40:36] *** Joins: voltage_ (voltage@user/voltage)
[00:40:42] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 268 seconds)
[00:41:32] *** Quits: skillbot (~skillbot@user/skillbot) (Ping timeout: 252 seconds)
[00:42:33] <velix> log4js
[00:42:35] <velix> oops -s
[00:42:50] <Pajus> :d
[00:42:56] <Pajus> zero day
[00:43:03] <velix> nah 2 days ago
[00:43:13] <velix> But ... our IT guys ... need to get out of bed first.
[00:43:20] <velix> scratch scrotum, pee etc.
[00:43:22] <velix> takes 2 days
[00:44:02] <velix> even our government gave a warning 2 days ago. And the government has LOTS of scrotum scratchers and egg shakers.
[00:44:19] *** Joins: sam_1 (~sam_1@87.51.251.118)
[00:49:57] *** Joins: wombawomba (~andre@89-253-80-164.customers.ownit.se)
[00:50:53] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (Ping timeout: 252 seconds)
[00:52:10] <BaggersIO> That reminds me of my former employer
[00:53:13] <hassoon> wth canan object key be an array ? :o
[00:53:33] <hassoon> * can *
[00:54:25] *** Parts: re (~user@user/re) (ERC 5.4.1 (IRC client for GNU Emacs 29.0.50))
[00:56:05] <Alexendoo> hassoon: If you do like obj[[1, 2, 3]] = "val"; you're getting a string key "1,2,3", rather than an actual array
[00:56:29] *** Quits: wombawomba (~andre@89-253-80-164.customers.ownit.se) (Ping timeout: 250 seconds)
[00:56:29] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 250 seconds)
[00:57:29] *** Quits: junebug (~junebug@2600:1700:3db0:2540:1bc2:b6e8:b3fd:1f4a) (Ping timeout: 252 seconds)
[00:58:59] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[01:00:14] *** Joins: wombawomba (~andre@89-253-80-164.customers.ownit.se)
[01:02:36] *** Quits: pulse (~pulse@user/pulse) (Quit: Join our gamedev community https://indiedevs.net/)
[01:04:05] *** Quits: BaggersIO (~BaggersIO@2a02:810d:983f:b088:3d49:7e22:bc04:92ab) (Ping timeout: 252 seconds)
[01:04:25] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:04:38] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:05:35] *** Joins: BaggersIO (~BaggersIO@2a02:810d:983f:b088:3d49:7e22:bc04:92ab)
[01:05:44] *** Quits: wombawomba (~andre@89-253-80-164.customers.ownit.se) (Ping timeout: 256 seconds)
[01:07:24] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[01:10:26] *** Quits: BaggersIO (~BaggersIO@2a02:810d:983f:b088:3d49:7e22:bc04:92ab) (Ping timeout: 260 seconds)
[01:11:12] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[01:12:36] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 265 seconds)
[01:13:23] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[01:15:01] *** Quits: sbrothy (~sbrothy@192038130020.mbb.telenor.dk) (Ping timeout: 265 seconds)
[01:17:38] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[01:18:19] <hassoon> hell yeah, screw hosting services
[01:18:24] <hassoon> i'll count on git
[01:18:24] <hassoon> <3
[01:18:37] <ThePendulum> are walls screw hosting services
[01:18:48] <hassoon> wha t?
[01:20:06] <stenno> hassoon: regarding arrays for object keys, you can do that with Map, but you have to keep the key instance unless its a primitive
[01:20:17] <stenno> hassoon: here is where records and tuples come into play
[01:20:28] <stenno> b> #[1,2,3]
[01:20:31] <jellobot> (okay) Tuple { '0': 1, '1': 2, '2': 3 }
[01:21:15] <stenno> n> const foo = new Map(); foo.set(#[1,2,3], 'hello'); foo.get(#[1,2,3]);
[01:21:16] <jellobot> (fail) SyntaxError: Invalid or unexpected token
[01:21:24] <stenno> b> const foo = new Map(); foo.set(#[1,2,3], 'hello'); foo.get(#[1,2,3]);
[01:21:25] <jellobot> (okay) 'hello'
[01:21:52] <stenno> keeping the instance in vanilla:
[01:22:10] <stenno> n> const foo = new Map(); const ary = [1,2,3]; foo.set(ary, 'hello'); foo.get(ary);
[01:22:11] <jellobot> (okay) 'hello'
[01:22:27] *** Joins: onosendi (~onosendi@user/onosendi)
[01:23:40] <stenno> n> const foo = new Map(); let ary = [1,2,3]; foo.set(ary, 'hello'); ary.push(4); foo.get(ary);
[01:23:41] <jellobot> (okay) 'hello'
[01:24:47] <stenno> records/tuples and map/sets are best buddies
[01:25:16] <ljharb> velix: serves you right for having a system running on java
[01:26:04] <onosendi> lol
[01:26:19] *** Joins: c4017 (~c4017@2604:3d08:747f:7c90:bdf6:8e80:3874:783f)
[01:26:27] <hassoon> stenno: saw it in an api call prototype, and i was like what the heck
[01:27:05] <hassoon> stenno: e.g whatever.request("method url", {files:{["fileName"]: {"fileContent"}}})
[01:27:19] <stenno> huh thats something different
[01:27:41] <stenno> this is dynamic property access (is it called like that lol)
[01:28:10] <stenno> n> const key = 'foo'; const bla = {[key]: 23}; bla @ hassoon
[01:28:11] <jellobot> hassoon, { foo: 23 }
[01:29:14] <hassoon> stenno: yep https://i.imgur.com/ANbaWxx.png
[01:29:19] *** Joins: junktext_ (~junktext@gateway/vpn/pia/junktext)
[01:29:21] <hassoon> stenno: used in gist api
[01:29:35] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[01:29:35] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[01:29:35] *** Joins: wroathe (~wroathe@user/wroathe)
[01:29:48] <stenno> hassoon: just to clarify again, this is not an array as object key
[01:29:55] <stenno> even though it looks like it
[01:29:58] <hassoon> then what is it ?
[01:30:14] <stenno> well see the last line i executed
[01:30:18] <stenno> n> const key = 'foo'; const bla = {[key]: 23}; bla @ hassoon
[01:30:20] <jellobot> hassoon, { foo: 23 }
[01:30:33] *** Joins: BaggersIO (~BaggersIO@2a02:810d:983f:b088:3d49:7e22:bc04:92ab)
[01:30:52] <stenno> https://www.samanthaming.com/tidbits/37-dynamic-property-name-with-es6/
[01:30:59] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[01:31:07] <hassoon> ah i see, thanks
[01:31:17] <stenno> here is a more proper docs https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Object_initializer#computed_property_names
[01:31:28] <stenno> Computer Property Names is what it is
[01:31:41] <stenno> or Object Initializer
[01:32:01] <hassoon> stenno: intereting
[01:32:15] <stenno> super useful for all sort of things
[01:32:35] <hassoon> ya very nicely dynamic/flexible
[01:33:36] *** Joins: wombawomba (~andre@89-253-80-164.customers.ownit.se)
[01:33:50] <stenno> n> const tf = (char) => char.toUpperCase(); ['a','b','c'].reduce((a, c) => ({ ...a, [c]: tf(c) }), {})
[01:33:51] <jellobot> (okay) { a: 'A', b: 'B', c: 'C' }
[01:34:21] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[01:34:42] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[01:34:52] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[01:36:21] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[01:36:46] <Alexendoo> I'd say Object.fromEntries is clearer for that sort of thing
[01:36:47] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[01:37:04] <stenno> yeah it was not the best example, more for demonstration purposes
[01:38:01] <stenno> n> Object.fromEntries(['a','b','c'].map((c) => [c, c.toUpperCase()]))
[01:38:02] <jellobot> (okay) { a: 'A', b: 'B', c: 'C' }
[01:38:26] *** Quits: wombawomba (~andre@89-253-80-164.customers.ownit.se) (Ping timeout: 260 seconds)
[01:39:04] *** Joins: wombawomba (~andre@89-253-80-164.customers.ownit.se)
[01:39:05] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[01:41:56] *** Joins: comatory (~ondrejsyn@185.51.250.206)
[01:43:14] *** Joins: Larzen (~textual@2604:3d09:1f7f:d490:e125:787d:dd61:bfcf)
[01:43:32] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 240 seconds)
[01:43:41] *** Quits: BaggersIO (~BaggersIO@2a02:810d:983f:b088:3d49:7e22:bc04:92ab) (Ping timeout: 252 seconds)
[01:44:14] *** Quits: wombawomba (~andre@89-253-80-164.customers.ownit.se) (Ping timeout: 268 seconds)
[01:46:42] *** Quits: comatory (~ondrejsyn@185.51.250.206) (Ping timeout: 268 seconds)
[01:47:13] *** Joins: tmm88 (~tmm88@user/tmm88)
[01:48:30] *** Joins: wombawomba (~andre@89-253-80-164.customers.ownit.se)
[01:48:36] *** Joins: sbrothy (~sbrothy@192038130020.mbb.telenor.dk)
[01:49:40] *** Joins: pavonia (~user@user/siracusa)
[01:51:03] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[01:54:25] *** Joins: obimod (~obimod@gateway/vpn/pia/obimod)
[01:59:23] * velix throws
[01:59:37] *** Joins: lara99 (~lara99@212-124-171-143.dyn.eolo.it)
[02:04:07] <velix> Okay, that's it. I hope I did anything right: https://jsfiddle.net/m7y89w2o/
[02:06:56] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[02:08:09] <velix> Sorry, THIS ONE is the right one: https://jsfiddle.net/jnLd7g25/
[02:10:44] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Ping timeout: 268 seconds)
[02:10:48] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[02:11:33] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 252 seconds)
[02:13:29] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[02:14:27] *** Joins: xvx (~s@185.48.63.106)
[02:15:00] *** Quits: Larzen (~textual@2604:3d09:1f7f:d490:e125:787d:dd61:bfcf) (Quit: My iMac has gone to sleep. ZZZzzz…)
[02:17:20] *** Joins: BaggersIO (~BaggersIO@2a02:810d:983f:b088:3d49:7e22:bc04:92ab)
[02:17:54] <velix> The browser isn't smart enough to use the cache for GET a/b/c.png?timestamp=1234 and GET a/b/c.png?timestamp=4567, is it? Can I make it that smart?
[02:18:05] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:81db:767f:9ed7:8882) (Quit: WeeChat 3.3)
[02:19:12] *** Quits: tmm88 (~tmm88@user/tmm88) (Quit: Lost terminal)
[02:19:37] *** Quits: pmercado (~pmercado@186.107.43.43) (Ping timeout: 252 seconds)
[02:20:37] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[02:21:32] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 240 seconds)
[02:23:50] <Alexendoo> velix: I don't think you can, timestamps like that are usually added explicitly to cache bust
[02:24:29] <pavonia> The browser is smart enough to not make the mistake to cache those two requests
[02:24:30] <velix> Alexendoo: okay, so using the header is best?
[02:25:51] <Alexendoo> velix: Which header?
[02:26:10] *** Joins: Larzen (~textual@2604:3d09:1f7f:d490:58e4:4878:8935:5cc)
[02:26:11] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 250 seconds)
[02:28:21] <velix> Alexendoo: timestamp=1234
[02:28:22] *** Quits: BaggersIO (~BaggersIO@2a02:810d:983f:b088:3d49:7e22:bc04:92ab) (Ping timeout: 260 seconds)
[02:28:25] <velix> Alexendoo: timestamp=4567
[02:28:32] <velix> or are those also different requests?
[02:29:17] <pavonia> If the server yields the same image, why is the timestamp even needed?
[02:29:31] <velix> pavonia: sigh. it just was an example.
[02:29:43] <velix> pavonia: anything=rnd()
[02:30:02] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:12] <Alexendoo> velix: Oh I see. I'm not sure on that one
[02:30:15] *** Joins: mud (~mud@user/kadoban)
[02:30:29] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:32:15] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[02:33:45] *** Joins: pizdets_ (~pizdets@183.182.111.164)
[02:34:10] *** Quits: pizdets (~pizdets@183.182.110.248) (Ping timeout: 268 seconds)
[02:36:27] <Alexendoo> velix: I think one of those could fulfil the other there, would have to use Vary otherwise. But it's something you'd want to confirm
[02:38:27] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:39:29] *** Joins: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au)
[02:40:25] *** Quits: Larzen (~textual@2604:3d09:1f7f:d490:58e4:4878:8935:5cc) (Quit: My iMac has gone to sleep. ZZZzzz…)
[02:44:34] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[02:45:19] *** Joins: serj2990 (~sergiu@2a02:2f08:e00f:6200::48b)
[02:45:23] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[02:46:59] *** Quits: kogepan (~kogepan@user/kogepan) (Ping timeout: 250 seconds)
[02:49:01] *** Joins: BaggersIO (~BaggersIO@2a02:810d:983f:b088:3d49:7e22:bc04:92ab)
[02:49:10] *** Joins: Larzen (~textual@2604:3d09:1f7f:d490:281f:5f40:9dc3:2a13)
[02:49:47] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 250 seconds)
[02:49:47] *** Quits: wombawomba (~andre@89-253-80-164.customers.ownit.se) (Ping timeout: 250 seconds)
[02:54:54] *** Joins: junebug (~junebug@2600:1700:3db0:2540:b62f:6f3c:5a3b:e2c2)
[03:00:54] *** Quits: Larzen (~textual@2604:3d09:1f7f:d490:281f:5f40:9dc3:2a13) (Quit: My iMac has gone to sleep. ZZZzzz…)
[03:01:15] <velix> Interesting. Latest Chrome doesn't seem to allow "{cache: "force-cache"}"
[03:01:19] <velix> or use*
[03:03:15] *** Quits: BaggersIO (~BaggersIO@2a02:810d:983f:b088:3d49:7e22:bc04:92ab) (Ping timeout: 252 seconds)
[03:03:46] *** Quits: Pabc1 (~Pabc1@2001:19f0:6c01:74e:5400:3ff:fe60:e5d6) (Read error: Connection reset by peer)
[03:03:47] <velix> Alexendoo: good news.
[03:04:00] <velix> When changing the header "auth: 1234" to "auth: 4567", disk cache is being used.
[03:04:03] <velix> At least in chrome.
[03:05:43] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.3)
[03:08:09] *** Quits: jmft2_ (~jmft2@222.158.115.87.dyn.plus.net) (Read error: Connection reset by peer)
[03:08:26] *** Joins: jmft2_ (~jmft2@222.158.115.87.dyn.plus.net)
[03:09:05] *** Quits: jmft2 (~jmft2@222.158.115.87.dyn.plus.net) (Ping timeout: 265 seconds)
[03:11:18] *** Joins: optimist (~optimist@106.212.72.36)
[03:12:16] *** Joins: wombawomba (~andre@89-253-80-164.customers.ownit.se)
[03:16:38] *** Quits: wombawomba (~andre@89-253-80-164.customers.ownit.se) (Ping timeout: 256 seconds)
[03:19:11] *** Quits: audio (~audio@user/audio) (Ping timeout: 268 seconds)
[03:20:33] *** Quits: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au) (Ping timeout: 250 seconds)
[03:20:55] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[03:20:56] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[03:20:56] *** Joins: wroathe (~wroathe@user/wroathe)
[03:25:02] <velix> Does anyone know an example service returning json or something?
[03:25:15] *** Quits: kakashiAL (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de) (Ping timeout: 252 seconds)
[03:25:47] *** Joins: crazyhorse (~crazyhors@193-115-124-81.tpgi.com.au)
[03:25:49] *** Joins: wombawomba (~andre@89-253-80-164.customers.ownit.se)
[03:25:53] *** Joins: optimist_ (~optimist@106.212.72.36)
[03:25:53] *** Joins: SoF3 (~skius@user/skius)
[03:25:59] *** Quits: shailangsa (~shailangs@host86-186-127-128.range86-186.btcentralplus.com) (Ping timeout: 252 seconds)
[03:26:12] <velix> https://api.ipify.org?format=json
[03:26:14] *** Quits: SoF (~skius@user/skius) (Killed (NickServ (GHOST command used by SoF3)))
[03:26:14] *** SoF3 is now known as SoF
[03:26:43] *** Quits: optimist (~optimist@106.212.72.36) (Ping timeout: 252 seconds)
[03:27:01] <crazyhorse> ugh... so i've been trying to get root require working across Jest/Webpack/Node .. and it's a nightmare (i.e. require('@/bla/bla.js) where @ is the root of the current package
[03:27:05] *** Quits: erry (~erry@errietta.me) (Ping timeout: 252 seconds)
[03:27:13] <crazyhorse> none of the proposed solutions seem to work
[03:27:31] *** Quits: sbrothy (~sbrothy@192038130020.mbb.telenor.dk) (Quit: leaving)
[03:29:22] *** Joins: erry (~erry@errietta.me)
[03:30:14] *** Quits: wombawomba (~andre@89-253-80-164.customers.ownit.se) (Ping timeout: 256 seconds)
[03:30:42] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[03:30:57] <velix> silly: are you still awake?
[03:31:28] <velix> I'm really stuck here. I want to fetch an API every "n" seconds in background and paste the result to console. I don't get, why it's such hard. https://jsfiddle.net/re4sjg7t/
[03:32:21] <decker> there's only one Settimeout - so it's after n seconds it does it
[03:32:26] <decker> but not every
[03:33:12] <crazyhorse> setInterval
[03:33:28] <decker> another setTimeout when you get the result
[03:33:32] <velix> I think I'll post this as freelancer.com - I'm stuck and no frontend develper.
[03:33:38] <decker> then drop the first one and just call the function once
[03:34:45] <velix> decker: thanks for your ideas, but I don't have the smallest clue, how to write this in code.
[03:34:57] <velix> I'm working for 5 hours on this now :D
[03:35:26] <crazyhorse> velix: https://developer.mozilla.org/en-US/docs/Web/API/setInterval
[03:35:39] *** Joins: BaggersIO (~BaggersIO@2a02:810d:983f:b088:3d49:7e22:bc04:92ab)
[03:35:44] <velix> crazyhorse: Yes, I know the single components, but I cannot mesh them up.
[03:35:50] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 268 seconds)
[03:36:43] <crazyhorse> call you function with setInterval instead of setTimeout
[03:36:46] <crazyhorse> your*
[03:39:54] <velix> crazyhorse: ok. I think I also need to use another fetch example. This one is blocked by the client.
[03:39:57] <velix> don't know why :(
[03:40:07] <velix> maybe a firewall of my modem?
[03:42:52] <velix> crazyhorse: Seems to work now, thanks.
[03:42:59] <velix> Is it right to use async here?
[03:44:45] <velix> anyone of you 500 people interested in javascript? or only read-only users? :(
[03:45:16] <velix> It's funny, 98% of the people in this channel have never posted a message :D
[03:45:32] <wroathe> velix: Is this your first time on IRC? :P
[03:45:44] <velix> wroathe: nope. I'm around since 1998.
[03:45:52] <wroathe> velix: It's pretty standard for most channels to have a significant portion of bots and lurkers
[03:45:52] <velix> But at this time, channels had like 4k users.
[03:46:02] <wroathe> Or people  that are just active from time to time
[03:46:08] <velix> nowerdays, most of them are either bots, deads, or read-only fappers
[03:46:22] <wroathe> The people that actively chat day-to-day are relatively rare
[03:46:23] <velix> oh, and lurkers, yeah ;)
[03:47:14] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 256 seconds)
[03:47:18] <wroathe> I myself have been logged in but mostly silent on IRC for a few months now, and that'll likely continue for some time
[03:47:27] <velix> I just wonder if it's a fetish to stay on channels or just some kind of "collector" hobby.
[03:47:44] <velix> I'm closing a channel, when i'm not active in there.
[03:47:51] <velix> I've just left #hardware because the discussion was over.
[03:48:08] *** Joins: wombawomba (~andre@89-253-80-164.customers.ownit.se)
[03:48:11] <wroathe> velix: Most IRC clients will reliably let you connect and reconnect if you leave them open
[03:48:21] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 252 seconds)
[03:48:23] <wroathe> velix: I just start irssi, and then never really close it
[03:48:27] <velix> wroathe: I think free traffic is the problem these days ;)
[03:48:45] <velix> I'm running a ZNC bouncer. But I'm leaving the channels I'm not interested in.
[03:48:50] <velix> And Hexchat and ZNC allow this.
[03:48:59] <wroathe> velix: It sounds to me like you're just frustrated that you've got a problem to solve that no one is jumping to help you with :P
[03:49:02] <velix> Dunno about irssi, but seems to be a bad tool :)
[03:49:22] <velix> wroathe: Please don't try to project the bad design of IRC by attacking me now.
[03:49:51] <velix> And of course I'm angry that nobody helps in a 500 user channel ;)
[03:49:57] <velix> okay, let's say, a 50 user channel.
[03:50:12] <wroathe> There's always Discord
[03:50:39] <velix> is it better there? ;)
[03:50:45] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[03:51:08] <systemfault> For better help, one option would be to pay better.
[03:51:11] <decker> in JS sincs 98 can can't move a line of code?  people just make up shit all the time 'I'm a PHD in such and such' and then some other channel can't add 1+1 in that field.
[03:51:21] <velix> decker: IRC.
[03:51:55] <velix> decker: I also got a diploma, bachelor and master's degree ... but this doesn't change a thing ;)
[03:52:06] <velix> Okay, master's degree is loading at 93%
[03:52:13] <wroathe> systemfault: I've already tried explaining that
[03:52:35] <systemfault> wroathe: I guess it's too complicated to understand...
[03:52:44] <velix> systemfault: I'm doing this all the time. freelancer.com is very helpful, but it's soo annoying to filter out most of the users.
[03:52:51] *** Quits: wombawomba (~andre@89-253-80-164.customers.ownit.se) (Ping timeout: 250 seconds)
[03:52:51] *** Quits: BaggersIO (~BaggersIO@2a02:810d:983f:b088:3d49:7e22:bc04:92ab) (Ping timeout: 250 seconds)
[03:53:00] <velix> systemfault: I've spent 3740 USD on freelancer.com in 2020/2021
[03:53:09] <systemfault> Congratulations!
[03:53:14] <systemfault> I've spent 0 so far
[03:53:43] <velix> systemfault: what a nice conversation. thanks a lot.
[03:53:53] <wroathe> I bought a sandwhich yesterday
[03:53:57] <wroathe> Cost me $12
[03:54:24] <wroathe> But it was an organic free-range sandwhich
[03:54:37] <systemfault> wroathe: But was it gluten-free?
[03:54:53] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[03:55:00] <wroathe> systemfault: No, there was gluten, but the gluten was allowed to roam free on a range.
[03:55:14] <systemfault> Haha
[03:55:16] <wroathe> Where it was certified by the allies of the rainforest.
[03:55:28] *** Joins: va5c0 (~vasco.nun@2001:818:e35b:6300:f89:16da:7c3d:c2c4)
[03:55:57] *** Quits: va5c0 (~vasco.nun@2001:818:e35b:6300:f89:16da:7c3d:c2c4) (Client Quit)
[03:56:20] *** Joins: va5c0 (~vasco.nun@2001:818:e35b:6300:f89:16da:7c3d:c2c4)
[03:56:26] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[03:56:41] <crazyhorse> velix: it's expected that you've done some basic javascript courses and are willing to hack stuff out by yourself... no one is going to help you debug every line of code
[03:56:44] *** Joins: wombawomba (~andre@89-253-80-164.customers.ownit.se)
[03:57:44] <crazyhorse> So for root package alias.. i'm guessing there is not a solution that works properly?
[03:58:03] *** Joins: Pabc1 (~Pabc1@2001:19f0:6c01:74e:5400:3ff:fe60:e5d6)
[03:58:18] <crazyhorse> it's annoying because I've tried to solve that problem every 2 years since 2013
[03:58:36] <decker> I've not found one that works across the board it'll work for node - or for the browser and rarely both
[03:59:07] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[03:59:22] <crazyhorse> decker: yeah.. i tried module-alias.. didn't work in webpack
[03:59:34] <crazyhorse> and then i read in the document that the aliases are universal
[03:59:42] <crazyhorse> so completely useless
[04:00:02] *** Quits: optimist_ (~optimist@106.212.72.36) (Remote host closed the connection)
[04:00:02] <decker> you'd probably have to move to babel directly
[04:00:22] <crazyhorse> babel solves it?
[04:00:53] <decker> well it's got a ton of plugins, I'm pretty certain you can build a chain that would work ... it's not dependancy light though :)
[04:01:11] *** Quits: wombawomba (~andre@89-253-80-164.customers.ownit.se) (Ping timeout: 252 seconds)
[04:01:16] <crazyhorse> ugh.. yeah i'm not using babel at all at the moment
[04:01:16] *** Joins: summersault (~summersau@179.221.251.16)
[04:01:34] <crazyhorse> it's weird this is not just built into all the package management tools
[04:01:45] *** Joins: shailangsa_ (~shailangs@host86-186-127-128.range86-186.btcentralplus.com)
[04:01:51] *** Quits: va5c0 (~vasco.nun@2001:818:e35b:6300:f89:16da:7c3d:c2c4) (Quit: WeeChat 3.0)
[04:02:42] *** Joins: optimist (~optimist@106.212.72.36)
[04:03:12] <crazyhorse> also testing it's actually kinda tricky... test in node with some complex examples.. then test in jest.. then require it in another package then test in that.  Then get a client side project... require the package.. npm run build.. then load the built version and see if that works
[04:05:14] <velix> crazyhorse: Actually I didn't want help with debugging. My question was if I need aync here.
[04:05:22] <velix> asnc*
[04:06:07] *** Joins: BaggersIO (~BaggersIO@2a02:810d:983f:b088:3d49:7e22:bc04:92ab)
[04:07:23] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[04:09:18] <crazyhorse> yes because fetch is async
[04:10:07] <decker> don't really need async on the outer - the inner async is where the await is
[04:10:27] <decker>  unless you did await fetch instead of fetch().then()
[04:10:33] <velix> That's so confusing. There are many examples on the web where they also put it on the outer. Okay, thanks.
[04:10:52] <crazyhorse> Promise chains are so much less confusing
[04:11:02] <crazyhorse> every time you see the word async
[04:11:08] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Quit: Leaving)
[04:11:32] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[04:11:32] <wroathe> velix: async/await are just a syntactical convenience for working with promises. Fetch is async in a generic sense, but doesn't require that you use async/await
[04:11:44] <crazyhorse> think of it as    function whatever() { return new Promise(function(resolve, reject) { yourfunctioncode })
[04:11:54] <crazyhorse> think of it as    function whatever() { return new Promise(function(resolve, reject) { yourfunctioncode }
[04:12:15] <wroathe> velix: Instances of Promise have a "then" method that you can use to register a callback that should be executed as soon as the promise's value resolves
[04:12:29] <crazyhorse> I actually never use async/await because promise chains give you greater control
[04:12:29] *** Joins: de-facto_ (~de-facto@user/de-facto)
[04:12:45] <crazyhorse> + are easier to debug / understand IMO
[04:13:45] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 276 seconds)
[04:15:42] <Donitz> made another pure js demo
[04:15:45] <Donitz> https://donitz.itch.io/the-infinite-armada
[04:16:05] <Donitz> prototyping stuff in js is so so so fast compared to other languages
[04:16:28] <decker> nice :)
[04:16:33] *** Quits: BaggersIO (~BaggersIO@2a02:810d:983f:b088:3d49:7e22:bc04:92ab) (Ping timeout: 268 seconds)
[04:16:59] *** de-facto_ is now known as de-facto
[04:17:33] *** Quits: junebug (~junebug@2600:1700:3db0:2540:b62f:6f3c:5a3b:e2c2) (Quit: Leaving)
[04:18:25] *** Quits: junktext_ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 252 seconds)
[04:20:34] <wroathe> velix: Does it need to be precisely every N seconds, or is the time allowed to slide depending on how long the request tkaes?
[04:20:46] *** Quits: serj2990 (~sergiu@2a02:2f08:e00f:6200::48b) (Quit: WeeChat 3.3)
[04:21:09] <velix> wroathe: I know this discussion. For preceisly, I'd neet setTimeout. For sliding, setInterval is enough. I'd like to try both.
[04:21:59] *** Joins: jazzy (~jaziz@user/jaziz)
[04:22:22] *** Joins: serj2990 (~sergiu@2a02:2f08:e00f:6200::48b)
[04:22:34] <wroathe> velix: No, setInterval wasn't what I was getting at. I was getting at whether or not you need to keep track of how much time has elapsed since the last request started, or if you're good to just hardcode N seconds into a setTimeout
[04:23:07] <wroathe> velix: Generally speaking I stay away from setInterval. It's semantics are very rarely what you want.
[04:23:12] <velix> wroathe: Ah okay, I thought you were taking about that: https://developer.mozilla.org/en-US/docs/Web/API/setInterval#ensure_that_execution_duration_is_shorter_than_interval_frequency
[04:23:28] <velix> wroathe: Actually, I haven't designed the exact auth routine now. I'm just playing with the possibilities.
[04:25:09] <wroathe> velix: Well, this kind of a problem lends itself to recursion if you're allowed to do it the naive way: const pollAThing = () => fetch(...).then(() => setTimeout(pollAThing, 5000));
[04:25:45] <systemfault> Or async/await and a while loop
[04:26:44] *** Quits: serj2990 (~sergiu@2a02:2f08:e00f:6200::48b) (Client Quit)
[04:26:47] *** Joins: jazzy2 (~jaziz@user/jaziz)
[04:27:02] *** Joins: serj2990 (~sergiu@2a02:2f08:e00f:6200::48b)
[04:27:55] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[04:28:37] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[04:29:05] *** Joins: BaggersIO (~BaggersIO@2a02:810d:983f:b088:3d49:7e22:bc04:92ab)
[04:29:41] *** Joins: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com)
[04:30:31] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[04:32:24] <velix> wroathe: Like this? But this doesn't do anything. https://jsfiddle.net/x4p6m9s3/
[04:32:42] <decker> call pollAthing() once
[04:33:01] <velix> ah :D
[04:33:05] *** Quits: obimod (~obimod@gateway/vpn/pia/obimod) (Ping timeout: 252 seconds)
[04:33:13] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[04:33:14] <decker> then it just keeps itself ticking after that
[04:33:51] <decker> unless there's an error - it will stop then
[04:34:04] <velix> yeah
[04:35:13] <systemfault> https://jsfiddle.net/e8Lwk3gd/
[04:35:17] <wroathe> velix: There's not really a point to chaining two separate .then calls there. Just do .then(response => { console.log(...); setTimeout(...); });
[04:39:32] <velix> wroathe: Sorry, this gives me "[object Promise] { ... }" now. I'm feeling so ashamed. Let me do some reading about this.
[04:40:27] *** Quits: serj2990 (~sergiu@2a02:2f08:e00f:6200::48b) (Quit: WeeChat 3.3)
[04:40:37] *** Joins: serj2990 (~sergiu@2a02:2f08:e00f:6200::48b)
[04:42:15] *** Quits: BaggersIO (~BaggersIO@2a02:810d:983f:b088:3d49:7e22:bc04:92ab) (Ping timeout: 252 seconds)
[04:42:23] *** Quits: shailangsa_ (~shailangs@host86-186-127-128.range86-186.btcentralplus.com) ()
[04:43:01] * wroathe grumbles about having to do everything
[04:43:03] <wroathe> velix: https://jsfiddle.net/gqbwn1cp/2/
[04:43:35] <velix> yeah, separated it works
[04:43:36] * decker tosses wrothe a biscuit. Good boy :)
[04:43:41] *** Quits: CiaoSen (~Jura@p200300c957347b002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[04:43:46] <velix> wroathe: thanks.
[04:43:54] <velix> decker: or girl.
[04:47:39] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[04:48:28] *** Quits: The_Tablet (~tablet@user/the-tablet) (Quit: cya~ ❀ only time will tell if i make myself someday / the stage is mine, music is my destiny~ ☆💎✨)
[04:49:08] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:51:47] *** Quits: stagas (~stagas@2a02:587:c40e:fc00:ef0f:2a21:213e:4f3e) (Ping timeout: 250 seconds)
[04:52:19] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[04:52:34] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 260 seconds)
[04:57:55] *** Joins: zebrag (~chris@user/zebrag)
[04:59:06] *** Quits: serj2990 (~sergiu@2a02:2f08:e00f:6200::48b) (Quit: WeeChat 3.3)
[04:59:16] *** Quits: src (~src@user/src) (Quit: Leaving)
[05:00:55] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[05:04:22] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:38d0:a1a2:5189:934b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:06:05] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 252 seconds)
[05:06:12] *** Quits: dsrt^ (~dsrt@wsip-98-188-240-142.mc.at.cox.net) (Remote host closed the connection)
[05:06:14] *** Joins: pmercado (~pmercado@186.107.43.43)
[05:06:31] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[05:07:27] *** Quits: lara99 (~lara99@212-124-171-143.dyn.eolo.it) (Quit: Client closed)
[05:09:26] *** Quits: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net) (Ping timeout: 265 seconds)
[05:10:15] *** Joins: BaggersIO (~BaggersIO@2a02:810d:983f:b088:3d49:7e22:bc04:92ab)
[05:10:36] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Quit: ThePhilgrim)
[05:10:36] *** Joins: audio (~audio@user/audio)
[05:11:55] *** Joins: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net)
[05:12:14] *** Quits: xvx (~s@185.48.63.106) (Ping timeout: 256 seconds)
[05:16:43] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[05:17:50] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[05:18:03] *** Joins: xvx (~s@185.48.63.106)
[05:18:51] *** Joins: shailangsa (~shailangs@host86-186-127-128.range86-186.btcentralplus.com)
[05:21:27] *** Quits: BaggersIO (~BaggersIO@2a02:810d:983f:b088:3d49:7e22:bc04:92ab) (Ping timeout: 250 seconds)
[05:22:19] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 250 seconds)
[05:22:32] *** Joins: kakashiAL (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de)
[05:22:33] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[05:26:35] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[05:26:53] *** Quits: kakashiAL (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de) (Ping timeout: 250 seconds)
[05:27:27] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[05:31:46] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 268 seconds)
[05:34:58] *** Joins: BaggersIO (~BaggersIO@2a02:810d:983f:b088:3d49:7e22:bc04:92ab)
[05:38:38] *** Joins: jazzy3 (~jaziz@user/jaziz)
[05:41:01] *** Quits: hackers (~self@user/hackers) (Ping timeout: 268 seconds)
[05:41:39] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[05:43:39] *** Joins: comatory (~ondrejsyn@185.51.250.206)
[05:44:51] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:656e:27bd:c2cd:f6e1)
[05:45:04] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[05:46:19] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:47:11] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[05:48:30] *** Quits: comatory (~ondrejsyn@185.51.250.206) (Ping timeout: 256 seconds)
[05:49:13] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[05:49:37] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 250 seconds)
[05:50:34] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[05:51:38] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Client Quit)
[05:53:05] *** Joins: The_Tablet (~tablet@user/the-tablet)
[05:54:10] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 256 seconds)
[05:58:57] *** Joins: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au)
[06:00:11] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[06:01:12] *** Quits: optimist (~optimist@106.212.72.36) (Quit: Leaving...)
[06:02:58] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[06:05:40] *** Joins: haniaF (~haniaF@83.24.213.124.ipv4.supernova.orange.pl)
[06:05:59] *** Quits: haniaF_ (~haniaF@83.24.213.124.ipv4.supernova.orange.pl) (Ping timeout: 265 seconds)
[06:07:12] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[06:10:23] *** Joins: Rockwood (~Rocky@user/rocky)
[06:16:16] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[06:19:58] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[06:20:55] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[06:22:21] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 252 seconds)
[06:25:11] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:656e:27bd:c2cd:f6e1) (Quit: Client closed)
[06:25:54] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 260 seconds)
[06:28:09] *** Joins: junebug (~junebug@2600:1700:3db0:2540:f028:88b8:1db1:5d22)
[06:28:19] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[06:33:18] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[06:33:18] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[06:33:18] *** Joins: wroathe (~wroathe@user/wroathe)
[06:33:23] *** Quits: xvx (~s@185.48.63.106) (Ping timeout: 250 seconds)
[06:35:26] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[06:36:02] *** Joins: df00z (~df00z@rrcs-24-103-144-59.nys.biz.rr.com)
[06:36:56] <df00z> Javascript Map operations are atomic, right?  If an update happens inside of a promise function, and then outside that something is looking for a key that was set inside the promise, it would always return right?
[06:37:06] <df00z> Like adding a key and value to a Map is atomic
[06:38:02] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[06:39:54] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[06:40:39] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Ping timeout: 276 seconds)
[06:45:02] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 260 seconds)
[06:45:56] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[06:45:56] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[06:45:56] *** Joins: wroathe (~wroathe@user/wroathe)
[06:47:02] <systemfault> There's no multithreading in JS
[06:49:30] <wroathe> Technically there is web workers and worker threads though
[06:50:20] <wroathe> (not part of the JS spec)
[06:50:30] <Rockwood> what should be correct for administrator? like fix id or any thing else?
[06:50:51] <Rockwood> i wanna define rules for everone
[06:50:58] <Rockwood> in my app
[06:52:22] <df00z> Ok, I figured out part of the problem, needed to use map.set and map.get.   Can I get at the promise result inside of a function without returning?  Documentation says resolve() causes a return
[06:52:27] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[06:52:39] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[06:53:28] <df00z> I see there's PromiseResult
[06:54:21] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[06:58:07] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 268 seconds)
[06:59:32] <buu> df00z: what
[06:59:51] <buu> df00z: Two functions can't run at the same time
[07:00:01] <buu> If you want line 2 to run you need to finish line 1
[07:00:20] <buu> (Pretty sure webworkers don't share maps)
[07:00:38] <df00z> https://pastebin.com/0wuuaKmQ
[07:01:04] <df00z> I'm adding something to a map, in the code where I am doing it, it is an expected Texture.   What is added to the map is a fulfilled promise.  I can't make heads or tails of that.
[07:01:15] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Quit: Leaving...)
[07:02:02] <buu> df00z: because tl.load returns a promise?
[07:02:37] <df00z> I'm setting it in the function that resolves the promise though
[07:02:43] <df00z> and in there it's a Texture
[07:03:01] <buu> df00z: you're setting texture = tl.load
[07:03:04] <df00z> Unless it's only resolved after a call to resolve()
[07:03:07] <buu> df00z: what does tl.load return?
[07:03:15] <df00z> A promise
[07:03:44] <buu> then why do you expect `texture` to change its value?
[07:04:03] <df00z> It's a "texture" inside that onLoad function though, I thought it's done at that point
[07:04:07] <df00z> That's where my confusion is
[07:04:23] <df00z> can I get the result before calling resolve() ?
[07:04:26] <buu> df00z: er, no, you aren't changing the value, you only assign to texture in oneplace
[07:05:34] <buu> df00z: resolve() sets what your promise contains at some point, for lack of a better word
[07:05:51] <buu> df00z: but it's setting the value of the 'new Promise' you create on line 8
[07:05:58] <buu> It has nothing to do with tl.load
[07:07:10] *** Joins: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation)
[07:07:19] <buu> And the threejs docs are broken
[07:07:20] <buu> great
[07:07:54] *** Quits: gustik (~gustik@2a01:c844:242f:ba20:72e:7030:46bf:1353) (Quit: Leaving)
[07:08:00] <df00z> Hm?
[07:08:55] <theskillwithin> buu are you sure?
[07:09:33] <theskillwithin> buu should contribute to the docs if you know how to fix
[07:10:06] <df00z> I just cant do what I want I guess
[07:10:45] <buu> <a onclick="window.parent.setUrlFragment('Function')" title="Function">onLoad</a>
[07:10:56] <buu> Nothing happens when I click
[07:12:08] <Rockwood> theskillwithin, o/
[07:12:35] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:12:40] <buu> It has some wierd frameset horribleness
[07:12:55] <buu> Not to mention the awful fragment navigation
[07:14:20] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[07:15:46] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[07:16:01] <buu> df00z: what you want is something like this: new Promise( (resolve,reject) => { tl.load(path, (texture) => { self.resMap.set(path, texture); resolve(texture) } }
[07:16:39] <buu> df00z: what you want is something like this: new Promise( (resolve,reject) => { tl.load(path, (texture) => { self.resMap.set(path, texture); resolve(texture) }, undefined, err => reject(err) ) }
[07:17:15] <buu> You don't really need the loadingmanager here
[07:18:49] *** Joins: JohnComputation2 (~JohnCompu@gateway/tor-sasl/johncomputation)
[07:19:00] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Ping timeout: 276 seconds)
[07:19:33] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 252 seconds)
[07:24:17] <df00z> https://pastebin.com/7tck8Qwe   There, I wrapped my function -
[07:24:21] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[07:24:38] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[07:24:57] <df00z> But it's still returning a promise which makes 0 sense.
[07:25:23] <theskillwithin> o/
[07:25:35] <EdFletcher> async functions _always_ return a Promise
[07:25:48] <EdFletcher> if you return a non-promise, it'll get wrapped in one
[07:26:27] <df00z> Oh yikes.  So it's going to return before searching the map, despite no await?
[07:27:03] <df00z> It's being executed in a constructor which cant have an await, and is pulling from the map...
[07:27:05] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[07:27:17] <df00z> Or, how do you get the not-promise result?
[07:27:36] <EdFletcher> to resolve a promise into it's final value, you await or .then it
[07:27:42] <df00z> you said something aboe let me look at it...
[07:27:56] <EdFletcher> also, don't do work in a constructor. it causes problems, as you've already learned 😃
[07:29:04] <df00z> Ugh, it's just so goofy I need to basically have setup() like functions for stuff that does not need to happen async
[07:29:22] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 260 seconds)
[07:29:49] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 252 seconds)
[07:29:56] *** Quits: hmw[at] (~hmw@80-108-56-158.cable.dynamic.surfer.at) (Ping timeout: 245 seconds)
[07:31:07] <EdFletcher> Yup an explicit setup() or init() function is the way to go. Make it semantically obvious when that work is done, not magically in the constructor
[07:31:42] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[07:31:43] <df00z> I guess.   I already did work in another init() function
[07:32:12] <df00z> so I was hoping I wasn't going to have to have every single class that is using async functions that already had their work done have an init() function
[07:32:17] <df00z> I guess too bad
[07:33:02] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Quit: Leaving)
[07:35:42] *** Joins: hmw[at] (~hmw@80-108-56-158.cable.dynamic.surfer.at)
[07:39:11] *** audio is now known as audiocat
[07:39:25] *** Quits: JohnComputation2 (~JohnCompu@gateway/tor-sasl/johncomputation) (Remote host closed the connection)
[07:41:19] *** Joins: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation)
[07:41:32] *** Quits: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net) (Quit: because)
[07:42:16] <buu> df00z: that's what the loadermanager is for
[07:42:20] <buu> df00z: This exact situation
[07:45:08] <buu> You register all your assets that load then you display a loading bar using onprogress
[07:45:15] <buu> Then you continue with main from done
[07:45:15] <theskillwithin> Rockwood I guess use role based permissions?
[07:45:24] <df00z> If I wrap the function in another function it's at least adding the right object to the map, not a promise
[07:45:46] <df00z> I can just use that in a non-constructor and use await
[07:46:13] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[07:47:47] <buu> df00z: this cannot possibly be right
[07:47:57] <df00z> ?
[07:50:03] <df00z> You basically said there's no way to resolve a promise in a constructor even if it's going to return immediately
[07:50:23] <df00z> and that async functions always return a promise wrapping the result
[07:51:26] <df00z> People use factories that call a constructor and an init() function, that's even uglier than calling init() manually
[07:52:10] <df00z> The point is I have a resource manager that has resources loaded already.   I could I guess have a dedicated function that is not async to just pull already loaded resources, that also seems ugly
[07:52:16] *** Quits: voltage_ (voltage@user/voltage) (Read error: Connection reset by peer)
[07:52:31] <df00z> Since the resources are already loaded I ideally should just be able to use them in a constructor
[07:53:56] <df00z> Maybe my function can be non-async and return a promise
[07:55:25] <df00z> No...because then I wont be able to set the map...I hate this
[07:55:44] <df00z> I'll try your code above
[07:56:03] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[07:56:30] <Rockwood> theskillwithin, yes
[07:57:08] *** Joins: stagas (~stagas@2a02:587:c40e:fc00:7ea8:53b7:13:e6db)
[07:57:12] *** Joins: wombawomba (~andre@89-253-80-164.customers.ownit.se)
[07:57:41] *** Quits: junebug (~junebug@2600:1700:3db0:2540:f028:88b8:1db1:5d22) (Ping timeout: 252 seconds)
[07:58:25] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[07:59:40] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[08:01:06] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 256 seconds)
[08:01:40] *** Quits: wombawomba (~andre@89-253-80-164.customers.ownit.se) (Ping timeout: 256 seconds)
[08:07:13] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[08:08:47] <df00z> https://pastebin.com/5h2bTUaM got it.  I dont think I need to use resource manager anymore.
[08:09:22] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Remote host closed the connection)
[08:09:33] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[08:09:33] <theskillwithin> like canCreateItems,  setting the CRUD where they can Create and Read the items table,  but only Update or Delete the items they have created/own.  or if they have canManageItems then they can do the entire CRUD
[08:10:57] <df00z> Buu: thanks
[08:11:08] <theskillwithin> I don't normally do backend but keystoneJS ftw
[08:11:10] *** Joins: taupiqueur_ (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[08:11:29] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Read error: Connection reset by peer)
[08:15:13] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[08:15:14] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[08:15:14] *** Joins: wroathe (~wroathe@user/wroathe)
[08:15:48] *** Quits: taupiqueur_ (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[08:16:54] *** Quits: df00z (~df00z@rrcs-24-103-144-59.nys.biz.rr.com) (Ping timeout: 256 seconds)
[08:20:07] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[08:27:46] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[08:28:09] *** Joins: df00z (~df00z@2607:fb90:aa80:8dad:1533:93ee:be1f:e27)
[08:32:50] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 256 seconds)
[08:35:32] <Rockwood> theskillwithin, yes i am working on policies with gates
[08:35:47] <Rockwood> and admin will be usages 2FA
[08:35:59] <Rockwood> theskillwithin, ^^
[08:36:12] <Rockwood> bye cya
[08:36:53] <theskillwithin> goodnight
[08:36:59] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[08:39:10] <df00z> buu: thanks earlier, all good.  Gotcha was async functions always return promises.  Can await on a promise tho outside if needed.  Non async functions can return promises.
[08:47:33] <buu> df00z: Good to hear
[08:49:09] *** Joins: JohnComputation2 (~JohnCompu@gateway/tor-sasl/johncomputation)
[08:50:39] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Ping timeout: 276 seconds)
[08:59:27] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[09:01:16] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[09:03:01] *** Joins: szutt (~szutt@116.37.2.145)
[09:04:02] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 240 seconds)
[09:05:43] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[09:06:19] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:1c1b:bf57:442d:a12f)
[09:11:06] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:1c1b:bf57:442d:a12f) (Ping timeout: 260 seconds)
[09:11:27] *** Joins: randomxusr (~randomusr@c-73-242-70-183.hsd1.mn.comcast.net)
[09:15:17] *** Joins: Larzen (~textual@2604:3d09:1f7f:d490:5516:e283:93a8:8665)
[09:16:04] <theskillwithin> buu idk threejs but it does seem to be popular
[09:18:59] <buu> theskillwithin: it does.. graphicy things
[09:19:10] <buu> and has really obnoxious documentation that uses hashbang navigation like it's 2010
[09:19:12] <theskillwithin> also iv never seen  window.parent.setUrlFragment
[09:19:28] <buu> That was a bit of a surprise
[09:19:51] <theskillwithin> haha i remember when react used hash routing, ugh
[09:20:27] *** Quits: stagas (~stagas@2a02:587:c40e:fc00:7ea8:53b7:13:e6db) (Remote host closed the connection)
[09:21:01] *** Joins: stagas (~stagas@2a02:587:c40e:fc00:7ea8:53b7:13:e6db)
[09:22:51] <ljharb> hashbangs, oof
[09:22:56] <ljharb> always was a crappy idea, from day one
[09:23:07] <buu> I can see how you end up using them at that point in time, but.. yeah
[09:23:08] <theskillwithin> buu if doing onclick id rather use a button type button instead of anchor tag.  but thats not the issue
[09:23:40] <buu> theskillwithin: I'm pretty sure it's using framesets so if you come in via google you don't have the surrounding frame and all the links break
[09:23:55] <buu> Although it turns out that particular link wasn't very useful anyway
[09:24:02] <buu> Not sure how else you end up with a window.parent
[09:24:34] <buu> It has like, a .load() method that's a hyperlink so you click on it and it takes you to a thing that says ".load is a method"
[09:24:38] <buu> Thanks!
[09:24:40] <silly> but hashbang with anchortags is ok right`
[09:25:10] *** Quits: Larzen (~textual@2604:3d09:1f7f:d490:5516:e283:93a8:8665) (Quit: My iMac has gone to sleep. ZZZzzz…)
[09:25:18] <buu> https://threejs.org/docs/#api/en/loaders/TextureLoader.load
[09:25:41] <buu> Like look at the .load section.. it's a link.. that takes you to the same place.. except you can't even like, right click it as a link because it's an onclick thing
[09:25:51] *** Joins: mexen (uid495612@user/mexen)
[09:26:20] <buu> hmph
[09:27:14] <silly> yea, links better be links
[09:31:01] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[09:35:50] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 260 seconds)
[09:37:51] <ljharb> silly: if it's just for scrolling, to server-rendered content, yes
[09:41:23] <silly> puh, for a moment there, i thought i've missed something
[09:41:53] *** Quits: df00z (~df00z@2607:fb90:aa80:8dad:1533:93ee:be1f:e27) (Ping timeout: 256 seconds)
[09:43:29] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[09:45:13] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[09:45:29] *** Quits: audiocat (~audio@user/audio) (Ping timeout: 252 seconds)
[09:47:41] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[09:57:27] *** Joins: wombawomba (~andre@89-253-80-164.customers.ownit.se)
[09:59:27] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) ()
[10:00:03] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[10:00:17] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[10:00:50] *** Joins: Akiva (~Akiva@user/Akiva)
[10:00:50] *** Quits: reezoh (~reezoh@2600:1702:3cf0:2e00:30e1:ed5f:a3a0:fd59) (Read error: Connection reset by peer)
[10:01:48] *** Quits: wombawomba (~andre@89-253-80-164.customers.ownit.se) (Ping timeout: 256 seconds)
[10:02:52] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[10:06:21] *** Joins: tarek58 (~tarek58@user/tarek58)
[10:06:46] *** Quits: crazyhorse (~crazyhors@193-115-124-81.tpgi.com.au) (Remote host closed the connection)
[10:08:02] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 256 seconds)
[10:08:25] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:14:17] *** Quits: randomxusr (~randomusr@c-73-242-70-183.hsd1.mn.comcast.net) (Quit: Leaving)
[10:15:58] *** Quits: pmercado (~pmercado@186.107.43.43) (Ping timeout: 260 seconds)
[10:18:09] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[10:22:46] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[10:34:34] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[10:36:19] *** Joins: joakimk (~joakimk@ti0004q160-3453.bb.online.no)
[10:37:29] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[10:39:30] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 268 seconds)
[10:39:36] <joakimk> I've got some functions to process some arrays, and I'm trying to reuse same setup for a different set of variables. They should all be arrays though, but still I'm getting different results (errors) on the other use case.
[10:40:28] <joakimk> The problem seems to be resulting from the helper methods somehow getting different structure/types, after all. The error is "keys.includes is not a function"
[10:41:11] *** Joins: hudo (~hhudo_@mail.allm-elektro.de)
[10:41:53] <ljharb> joakimk: where does `keys` come from
[10:42:06] <ljharb> joakimk: obv it's not an array, or you're using an old node that doesn't have includes
[10:42:06] <joakimk> however, if I do this: `console.log('isarray?', Array.isArray(keys), keys.hasOwnProperty('includes'));` then I get `true, false`
[10:42:18] <ljharb> arrays don't have any of their methods as own properties
[10:42:22] <ljharb> try `'includes' in keys`
[10:42:30] <ljharb> joakimk: what node version? includes is old
[10:42:47] <joakimk> 14.15.1
[10:44:19] <ljharb> that's new enough
[10:44:37] <joakimk> it's hard to make an extract of the code causing the problem (I might try later) but strange thing is, this doesn't crash for the other use case -- where "same" but other variables run through just fine
[10:44:44] <joakimk> which I know gives you no information here :D
[10:45:07] <joakimk> however, I thought this test (isArray + hasOwnPr) might give some info?
[10:45:13] <joakimk> isn't it odd?
[10:46:03] <ljharb> joakimk: it's not odd, as i said, methods are on the prototype, and are never own properties
[10:46:12] <ljharb> joakimk: but if it says it's an array it should have `.includes` accessible on it
[10:46:29] <joakimk> ah sorry
[10:46:55] <joakimk> but it's on `keys.includes` that this crashes
[10:47:06] <joakimk> even though keys is an array
[10:47:18] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[10:48:10] <ljharb> joakimk: so try console logging `'includes' in keys`
[10:48:16] <ljharb> joakimk: and `typeof keys.includes`
[10:49:02] <joakimk> gotcha!
[10:50:12] *** Joins: sam_1 (~sam_1@87.51.251.118)
[10:50:32] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[10:54:36] <joakimk> In the first use (my old, working part) it gives true/function, but on this new use I -- for some reason -- sometimes get false/undefined
[10:54:47] <joakimk> thing is, this is React + typescript, so it renders a couple of times
[10:54:58] <joakimk> sometimes the new use does give true/function
[10:55:25] *** Quits: pkx (~pkx@user/pkx) (Quit: leaving)
[10:55:54] <ljharb> joakimk: so it's crashing when it gives false, obviously
[10:55:57] <joakimk> but suddenly, false/undefined. I have checks in the helper method to return before trying include() etc, but these aren't catching this new "data set"
[10:55:57] <ljharb> joakimk: make a codesandbox
[10:55:58] <joakimk> well yes
[10:56:33] <joakimk> I'll see if I manage. It's a bit convoluted, with code in context etc
[10:56:41] <joakimk> ^ data in context
[10:58:19] *** Joins: xvx (~s@185.48.63.106)
[10:58:31] <ljharb> maybe fix that problem first :-)
[10:58:34] <ljharb> that it's convoluted, i mean
[10:58:55] *** Quits: xvx (~s@185.48.63.106) (Client Quit)
[10:59:55] <joakimk> but what we see so far, at least, is the problem is that the data (keys) is sometimes not an array
[11:00:09] *** Joins: comatory (~ondrejsyn@185.176.138.241)
[11:00:20] <joakimk> which does not happen (apparently) for the other use-case, the existing functionality which does not crash
[11:01:16] <joakimk> and I think I know why there is a difference in the data sets. I just couldn't check verify properly that this was indeed the case (not an array) using isArray
[11:02:56] <joakimk> strike that last part; isArray = false when it's not an array :)  Thanks for the help!
[11:03:20] <joakimk> so keys is not an array, I need to figure out why
[11:06:04] *** Joins: xardas (~xardas@149.233.51.127)
[11:06:50] *** Quits: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com) (Ping timeout: 260 seconds)
[11:09:02] *** Joins: SteveR (~SteveR@192.146.154.3)
[11:09:40] <joakimk> `if (!Array.isArray(keys)) return [];` seems to be a good start
[11:09:56] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[11:10:57] <joakimk> I have some checks in the helper from before, but these apparently need to be extended... They used to be stuff like, `if (!keys || keys.length === 0) return obj;`
[11:11:52] <joakimk> the method here, btw, is a helper method to "remove" fields from a key/value object, on some given keys to remove
[11:12:53] <joakimk> but the real issue is why data is not an array to begin with (should always be an array, or at least [] )
[11:12:54] <buu> always worrying
[11:13:49] *** Parts: SteveR (~SteveR@192.146.154.3) ()
[11:14:18] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[11:16:18] *** Joins: summersault (~summersau@179.221.251.16)
[11:18:39] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[11:20:34] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 256 seconds)
[11:24:49] *** Joins: kakashiAL (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de)
[11:25:13] *** Quits: eht (~eht@user/eht) (Ping timeout: 252 seconds)
[11:26:00] *** Joins: eht (~eht@user/eht)
[11:27:41] *** Joins: taupiqueur (~taupiqueu@231.245.204.77.rev.sfr.net)
[11:30:03] *** Quits: kakashiAL (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de) (Ping timeout: 268 seconds)
[11:30:03] *** Joins: i0e (~is0ke3@user/is0ke3)
[11:31:31] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 250 seconds)
[11:35:36] <theskillwithin> sometimes im watching tv and I glance over at code I have open, and im just like oh god that beautiful i love my job
[11:39:08] <systemfault> That must be fun...
[11:39:59] <systemfault> Most of the time I'm like.... well, it's acceptable, I could do better but I don't have the time.
[11:40:29] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[11:40:37] *** Quits: taupiqueur (~taupiqueu@231.245.204.77.rev.sfr.net) (Ping timeout: 252 seconds)
[11:41:04] <theskillwithin> of course
[11:43:23] *** Joins: reallymemorable (~reallymem@91.75.74.154)
[11:46:13] <theskillwithin> systemfault sometimes good to take step back and be like dang what i do is pretty cool
[11:46:28] *** Joins: nabaiste^ (~nabaiste@wsip-98-188-240-142.mc.at.cox.net)
[11:55:18] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:55:22] <theskillwithin> systemfault I think you are really cool
[12:01:30] *** Joins: stenno (~stenno@user/stenno)
[12:02:10] <theskillwithin>  s/think/know
[12:05:52] *** Quits: reallymemorable (~reallymem@91.75.74.154) (Remote host closed the connection)
[12:06:06] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 260 seconds)
[12:06:52] *** Joins: D4mned (~D1mned@212.101.253.143)
[12:09:31] *** Joins: reallymemorable (~reallymem@91.75.74.154)
[12:09:31] *** Quits: reallymemorable (~reallymem@91.75.74.154) (Read error: Connection reset by peer)
[12:12:55] *** Joins: taupiqueur (~taupiqueu@231.245.204.77.rev.sfr.net)
[12:17:32] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 268 seconds)
[12:19:28] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:26:03] *** Joins: stenno (~stenno@user/stenno)
[12:26:47] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[12:31:46] *** Joins: jazzy (~jaziz@user/jaziz)
[12:31:58] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[12:32:09] *** Joins: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[12:32:19] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 252 seconds)
[12:32:49] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[12:33:50] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:34:12] *** Joins: wombawomba (~andre@89-253-80-164.customers.ownit.se)
[12:34:50] *** Joins: kogepan (~kogepan@user/kogepan)
[12:34:53] *** Quits: jazzy3 (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[12:38:25] *** Joins: iomari891 (~iomari891@197.210.71.83)
[12:39:45] *** Quits: Flannel (~flannel@user/flannel) (Ping timeout: 268 seconds)
[12:40:28] *** Quits: mat001 (~mat001@c-69-181-153-135.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[12:51:03] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 250 seconds)
[12:52:40] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[12:53:18] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:53:32] <silly> theskillwithin, https://you-are-beautiful.com/
[12:53:50] <silly> i mean it!
[12:54:32] <theskillwithin> https://www.poetryfoundation.org/poems/45479/when-i-heard-the-learnd-astronomer
[12:54:45] *** Quits: kogepan (~kogepan@user/kogepan) (Read error: Connection reset by peer)
[12:54:54] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi)
[12:55:58] *** Joins: kogepan (~kogepan@user/kogepan)
[13:03:47] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[13:04:38] <epolanski> hey all I have a normal create react app, and some e2e tests with playwright. How can I write a command that: a) runs npm run start, b) when it's completed launching the server launched the test suite
[13:05:21] *** Quits: iomari891 (~iomari891@197.210.71.83) (Ping timeout: 250 seconds)
[13:08:04] *** Joins: iomari891 (~iomari891@197.210.70.19)
[13:09:37] *** Joins: jazzy2 (~jaziz@user/jaziz)
[13:12:39] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[13:13:34] *** Joins: reallymemorable (~reallymem@91.75.74.154)
[13:14:28] *** Joins: Flannel (~flannel@cpe-76-175-193-181.socal.res.rr.com)
[13:14:38] *** Quits: kogepan (~kogepan@user/kogepan) (Read error: Connection reset by peer)
[13:15:10] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 260 seconds)
[13:15:38] *** Joins: jazzy3 (~jaziz@user/jaziz)
[13:16:51] *** Quits: xardas (~xardas@149.233.51.127) (Quit: Client closed)
[13:16:59] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:19:15] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[13:19:59] *** Quits: jazzy3 (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[13:26:00] *** Joins: kakashiAL (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de)
[13:28:18] *** Joins: kogepan (~kogepan@user/kogepan)
[13:28:56] *** Joins: jazzy (~jaziz@user/jaziz)
[13:30:34] *** Quits: kakashiAL (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de) (Ping timeout: 260 seconds)
[13:30:58] *** Joins: teut (~teut@106.215.11.94)
[13:31:06] *** Joins: jazzy2 (~jaziz@user/jaziz)
[13:31:32] *** Quits: taupiqueur (~taupiqueu@231.245.204.77.rev.sfr.net) (Ping timeout: 240 seconds)
[13:32:08] *** Joins: ravindUwU (~ravindUwU@user/ravinduwu)
[13:32:40] <ravindUwU> Hiyaa!!!
[13:34:09] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 250 seconds)
[13:34:46] <ravindUwU> I've got @react-native-community/hooks ^2.6.0 installed in my project. The latest version of this package on NPM is 2.8.1.
[13:35:00] <ravindUwU> Running `yarn upgrade-interactive --latest` doesn't show me 2.8.1 for some reason; thoughts on why this is?
[13:35:04] *** Quits: reallymemorable (~reallymem@91.75.74.154) (Remote host closed the connection)
[13:37:09] *** Joins: sQVe (~sQVe@user/sqve)
[13:37:13] <ravindUwU> Nvm that; looks like 2.8.1 is within the range ^2.6.0. The lockfile confirms that 2.8.1 is being resolved.
[13:37:20] *** Quits: sQVe (~sQVe@user/sqve) (Client Quit)
[13:42:46] *** Joins: taupiqueur (~taupiqueu@64.197.204.77.rev.sfr.net)
[13:44:47] *** Joins: reallymemorable (~reallymem@91.75.74.154)
[13:48:00] *** Joins: kill (~killown@user/killown)
[13:48:24] *** Joins: ya12983 (~ya12983@193.40.120.146)
[13:49:07] *** Quits: reallymemorable (~reallymem@91.75.74.154) (Ping timeout: 250 seconds)
[13:50:02] *** Joins: nomic (~nomic@51.52.78.152)
[13:50:10] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[13:50:43] <ya12983> Hey chatroom fans......... Please check out my new type of communication place ----> http://internationalchat.atwebpages.com/ !!!!!!!!!!!!!!!
[13:51:16] <silly> /o\
[13:52:01] <silly> spmmrs be banned
[13:52:23] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:52:39] *** Parts: ya12983 (~ya12983@193.40.120.146) ()
[13:52:47] <D4mned> thats blinding
[13:53:05] <D4mned> i hope your not minning crypto in my browser now
[13:53:45] <silly> they're gone... you actually clicked that?
[13:54:17] <D4mned> i couldnt help myself :(
[13:54:40] <silly> that's ok, but you should at least pretend you didn't
[13:55:16] <D4mned> lol
[13:55:22] <D4mned> next time!
[13:56:16] *** Joins: peteyboy1 (~peteyboy1@98.red-95-123-127.staticip.rima-tde.net)
[13:58:06] *** Quits: eht (~eht@user/eht) (Ping timeout: 256 seconds)
[13:59:03] *** Joins: eht (~eht@user/eht)
[14:00:49] *** Quits: kill (~killown@user/killown) (Ping timeout: 250 seconds)
[14:01:02] *** Quits: ravindUwU (~ravindUwU@user/ravinduwu) (Quit: KTHXBAI)
[14:04:05] *** Quits: pavonia (~user@user/siracusa) (Read error: Connection reset by peer)
[14:04:35] <since_> hi
[14:04:50] <D4mned> hi since_
[14:04:59] <since_> is the get and set within object declarations only syntactic sugar?
[14:05:20] <D4mned> probably
[14:05:22] <D4mned> lol
[14:05:58] <since_> so it just means i can leave away the () when calling "getter" function?
[14:06:36] *** Quits: taupiqueur (~taupiqueu@64.197.204.77.rev.sfr.net) (Ping timeout: 256 seconds)
[14:06:42] *** Quits: iomari891 (~iomari891@197.210.70.19) (Ping timeout: 268 seconds)
[14:07:06] <D4mned> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/get
[14:07:16] <D4mned> yup
[14:07:47] *** Joins: iomari891 (~iomari891@197.210.70.19)
[14:11:14] <since_> Ok thanks. Coming from Go i always get a bit angry when there is "useless" (new) stuff in a language. That only increases complexity and costs people time.
[14:11:56] *** Joins: pavonia (~user@user/siracusa)
[14:12:33] <theskillwithin> silly I will ban spammers
[14:12:52] <D4mned> you are welcome boss!
[14:18:49] *** Joins: re (~user@user/re)
[14:19:22] <theskillwithin> join part leave thats sketchy
[14:20:07] <D4mned> did you click the link ?
[14:20:09] *** Joins: taupiqueur (~taupiqueu@64.197.204.77.rev.sfr.net)
[14:20:29] <theskillwithin> no
[14:20:34] <D4mned> damn it :(
[14:20:40] <D4mned> its only me who did
[14:20:48] <theskillwithin> D4mned what was it?
[14:20:56] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[14:21:30] <D4mned> some blinding colors with some uncentered text and some inputs
[14:22:04] <D4mned> i then realized my mistake and closed it quickly
[14:22:05] <D4mned> lol
[14:22:45] <stenno> don't click any spam links wtf are you doing lol
[14:22:57] <D4mned> i knoww :(
[14:23:01] <D4mned> haha
[14:23:01] <theskillwithin> seems sketch, but ill wait for another occurrence before i ban to be sure.  let me know if you see again
[14:23:02] <stenno> do you send money to nigerian princes too
[14:23:11] <D4mned> hahaha
[14:23:19] <stenno> it is 100% spam or malicious
[14:23:32] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:24:03] <silly> lol theskillwithin "shoot me twice"
[14:25:15] <theskillwithin> ehh i like to have a light touch, but well ok
[14:25:26] *** ChanServ sets mode: +o theskillwithin
[14:25:36] *** theskillwithin sets mode: +b ya12983!*@*
[14:25:38] <silly> they're gone...
[14:25:44] <silly> long ago
[14:25:51] *** ChanServ sets mode: -o theskillwithin
[14:26:00] *** Quits: kogepan (~kogepan@user/kogepan) (Read error: Connection reset by peer)
[14:26:15] <stenno> banning spam accounts is still good
[14:26:24] <stenno> however i think they will just change their username
[14:27:14] <stenno> always a bit difficult if they don't authenticate, thats why stuff like ozone exists
[14:27:34] *** ChanServ sets mode: +o theskillwithin
[14:28:23] *** theskillwithin sets mode: +b *!*@193.40.120.146
[14:28:54] *** ChanServ sets mode: -o theskillwithin
[14:29:21] *** Joins: nomic2 (~nomic@51.52.78.152)
[14:30:16] <D4mned> well if it was a decent spammer he would be using open proxies
[14:30:55] <stenno> fn/libera really got the spamming problem under control generally, it used to be terrible
[14:30:56] <D4mned> probably with some irc script that scans for proxies and join rooms to spam
[14:31:09] *** Quits: moldorcoder7 (~moldorcod@37.120.143.28) (Quit: %bye mirc%)
[14:31:11] <D4mned> then it changes everytime
[14:31:31] <stenno> but nowadays, apart from the occasional message like above, its relatively quiet
[14:31:38] <D4mned> cool
[14:32:01] *** Quits: nomic (~nomic@51.52.78.152) (Ping timeout: 250 seconds)
[14:32:06] *** nomic2 is now known as nomic
[14:32:31] *** Joins: moldorcoder7 (~moldorcod@37.120.143.28)
[14:32:43] <stenno> spam mitigation is super complex
[14:33:34] <D4mned> spamming is useless
[14:33:46] <stenno> unfortunately its not
[14:33:46] <D4mned> its not like anyone is going to click open the links
[14:33:48] <D4mned> um
[14:33:49] <D4mned> lol
[14:33:53] <stenno> yeah right :P
[14:33:57] <D4mned> hahaha
[14:38:57] <silly> ok,now, can we please take it to our offtopic channel or maybe to #spam or so?
[14:40:55] *** Joins: voltage_ (voltage@user/voltage)
[14:41:40] <theskillwithin> off topic is technically allowed here, within reason.  spam isn't
[14:42:40] *** Quits: iomari891 (~iomari891@197.210.70.19) (Ping timeout: 265 seconds)
[14:43:16] <theskillwithin> silly im going to pass out soon, if you see further spam report it to stenno
[14:43:34] *** Joins: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[14:43:36] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Quit: elastic_dog)
[14:43:36] *** Joins: iomari891 (~iomari891@102.91.4.225)
[14:44:25] <D4mned> whats your offtopic channel called ?
[14:44:35] <theskillwithin> we don't have one
[14:44:37] <D4mned> lol
[14:45:02] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi)
[14:45:14] <theskillwithin> off topic is okay, but this is a support channel, so if someone asks a question then all off topic stops there and its support only
[14:45:42] <D4mned> alright
[14:47:32] *** Quits: comatory (~ondrejsyn@185.176.138.241) (Ping timeout: 240 seconds)
[14:50:32] *** Quits: BaggersIO (~BaggersIO@2a02:810d:983f:b088:3d49:7e22:bc04:92ab) (Ping timeout: 240 seconds)
[14:50:32] <silly> this means: support me!
[14:51:20] *** Joins: comatory (~ondrejsyn@185.176.138.241)
[14:51:22] *** Quits: iomari891 (~iomari891@102.91.4.225) (Ping timeout: 256 seconds)
[14:52:08] *** Joins: iomari891 (~iomari891@197.210.71.83)
[14:55:58] *** Quits: comatory (~ondrejsyn@185.176.138.241) (Ping timeout: 260 seconds)
[14:57:33] *** Quits: jazzy2 (~jaziz@user/jaziz) (Quit: Beddie bye-bye)
[14:57:44] *** Joins: thiras (~thiras@user/thiras)
[14:58:04] *** Quits: iomari891 (~iomari891@197.210.71.83) (Remote host closed the connection)
[14:59:15] <theskillwithin> if we didn't allow any off topic, the channel would be way less active
[14:59:40] *** Joins: iomari891 (~iomari891@197.210.70.19)
[15:07:47] *** Quits: iomari891 (~iomari891@197.210.70.19) (Ping timeout: 252 seconds)
[15:09:12] *** Joins: iomari891 (~iomari891@102.91.5.163)
[15:09:16] *** Joins: comatory (~ondrejsyn@185.176.138.241)
[15:09:38] *** Joins: src (~src@user/src)
[15:12:03] *** Quits: peteyboy1 (~peteyboy1@98.red-95-123-127.staticip.rima-tde.net) (Ping timeout: 268 seconds)
[15:12:55] *** Joins: BaggersIO (~BaggersIO@2a02:810d:983f:b088:3d49:7e22:bc04:92ab)
[15:14:02] *** Quits: comatory (~ondrejsyn@185.176.138.241) (Ping timeout: 256 seconds)
[15:15:13] *** Joins: kakashiAL (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de)
[15:15:14] *** Quits: iomari891 (~iomari891@102.91.5.163) (Remote host closed the connection)
[15:17:08] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[15:17:09] *** Joins: iomari891 (~iomari891@197.210.71.83)
[15:19:04] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[15:19:06] *** Joins: comatory (~ondrejsyn@185.176.138.241)
[15:19:38] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[15:19:40] *** Joins: CiaoSen (~Jura@p200300c957347b002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[15:20:03] *** Joins: kristijonas (~kristijon@78-56-32-39.static.zebra.lt)
[15:23:09] *** Quits: wombawomba (~andre@89-253-80-164.customers.ownit.se) (Ping timeout: 250 seconds)
[15:28:35] *** Quits: iomari891 (~iomari891@197.210.71.83) (Ping timeout: 265 seconds)
[15:30:20] *** Joins: iomari891 (~iomari891@197.210.71.83)
[15:35:20] *** Joins: pmercado (~pmercado@186.107.34.136)
[15:37:49] *** Quits: shailangsa (~shailangs@host86-186-127-128.range86-186.btcentralplus.com) ()
[15:38:03] *** Quits: D4mned (~D1mned@212.101.253.143) (Quit: Leaving)
[15:41:06] *** Joins: petril (~petril@user/petril)
[15:42:04] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[15:42:04] *** Joins: Naan (~Naan@user/naan)
[15:42:49] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[15:42:54] *** Joins: ravindUwU (~ravindUwU@user/ravinduwu)
[15:43:19] <ravindUwU> Any idea why IntelliSense include `undefined` in this union type: https://i.imgur.com/wwijeT1.png ?
[15:43:42] <ravindUwU> `setInitialValue` isn't used anywhere 💁‍♀️
[15:46:18] <ravindUwU> Figure it out lol; useState<X> with no arguments includes undefined. With a default argument, doesn't 😅.
[15:46:23] <ravindUwU> *figured
[15:46:59] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 250 seconds)
[15:47:26] *** Joins: benni (~benni@ipbcc30b18.dynamic.kabel-deutschland.de)
[15:49:17] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[15:51:08] *** Joins: pulse (~pulse@user/pulse)
[15:59:26] *** Joins: teut49 (~teut@2402:3a80:96e:6f8b:2dbf:97fa:c970:9778)
[16:00:34] *** Quits: iomari891 (~iomari891@197.210.71.83) (Remote host closed the connection)
[16:00:56] *** Quits: arthur-_ (~arthur@2a01:e0a:af:2bd0:c88c:3dde:87f6:cc9b) (Remote host closed the connection)
[16:01:08] *** Joins: arthur-_ (~arthur@2a01:e0a:af:2bd0:7540:f39f:bdfc:5999)
[16:01:32] *** Joins: iomari891 (~iomari891@197.210.70.19)
[16:02:08] *** Quits: teut (~teut@106.215.11.94) (Ping timeout: 256 seconds)
[16:06:03] *** Joins: kogepan (~kogepan@user/kogepan)
[16:07:11] *** Quits: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au) (Ping timeout: 252 seconds)
[16:11:13] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 252 seconds)
[16:13:37] *** Joins: neverfindme (~hayden@158.123.160.43)
[16:16:34] *** Quits: joakimk (~joakimk@ti0004q160-3453.bb.online.no) (Quit: Client closed)
[16:16:53] *** Quits: iomari891 (~iomari891@197.210.70.19) (Ping timeout: 250 seconds)
[16:17:31] *** Quits: neverfindme (~hayden@158.123.160.43) (Remote host closed the connection)
[16:17:45] *** Quits: ravindUwU (~ravindUwU@user/ravinduwu) (Quit: KTHXBAI)
[16:17:53] *** Joins: neverfindme (~hayden@158.123.160.43)
[16:18:59] *** Joins: iomari891 (~iomari891@197.210.70.206)
[16:19:30] *** Quits: nomic (~nomic@51.52.78.152) (Remote host closed the connection)
[16:20:12] *** Joins: Guest31 (~Guest31@mail.bfc-net.de)
[16:22:00] *** Joins: RealKiller (~RealKille@59-102-36-225.tpgi.com.au)
[16:24:06] <RealKiller> hey, has anyone used azure with javascript?  https://docs.microsoft.com/en-us/javascript/api/overview/azure/service-bus-readme?view=azure-node-latest. how can i completeMessage
[16:24:08] <RealKiller> https://pastebin.com/jZMnPkrx
[16:24:25] <RealKiller> i am receiving message here but unable to get it out of queue
[16:25:00] *** Quits: iomari891 (~iomari891@197.210.70.206) (Remote host closed the connection)
[16:25:59] *** Joins: iomari891 (~iomari891@197.210.70.19)
[16:32:30] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[16:34:43] <FlorianBad> Let's say that I'm doing some kind of "push" notification system and I use XMLHttpRequest() as the server waits 30s before returning a response (or less if anything to push).
[16:34:45] <FlorianBad> Is that a problem to have the response callback call itself forever? It will handle the response, then start another request with another callback, and if you think about it, there are nested callbacks to infinity. Is that fine or is there another way to design that?
[16:34:57] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@46.109.136.184)
[16:36:35] *** Joins: wombawomba (~andre@89-253-80-164.customers.ownit.se)
[16:38:01] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[16:38:24] *** Joins: mat001 (~mat001@c-71-202-248-112.hsd1.ca.comcast.net)
[16:38:56] *** Joins: teut (~teut@2401:4900:1c30:1de4:919b:82a3:cf8:ac12)
[16:38:58] *** Quits: teut49 (~teut@2402:3a80:96e:6f8b:2dbf:97fa:c970:9778) (Ping timeout: 256 seconds)
[16:39:28] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[16:39:39] *** Quits: benni (~benni@ipbcc30b18.dynamic.kabel-deutschland.de) (Quit: Client closed)
[16:45:46] *** Quits: teut (~teut@2401:4900:1c30:1de4:919b:82a3:cf8:ac12) (Ping timeout: 256 seconds)
[16:50:13] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@46.109.136.184) (Quit: Connection closed)
[16:52:36] *** Joins: jim87 (~quassel@93.55.249.30)
[16:52:47] *** Joins: reallymemorable (~reallymem@91.75.74.154)
[16:53:53] *** Quits: kmh (~kmh@2a00:6020:5004:6800:1518:689e:f31f:c3c5) (Quit: Leaving)
[16:56:09] <Alexendoo> FlorianBad: That's fine, it's like recursive setTimeout, it's called indirectly so you're not at risk of exceeding the call stack size
[16:56:22] *** Joins: teut (~teut@2401:4900:1c30:1de4:919b:82a3:cf8:ac12)
[16:56:29] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@46.109.136.184)
[16:57:10] *** Quits: reallymemorable (~reallymem@91.75.74.154) (Ping timeout: 256 seconds)
[16:57:46] <FlorianBad> Alexendoo: by "indirectly" you mean that since it's a callback of XMLHttpRequest() that will call my function again (which creates another XMLHttpRequest() object) then it actually continues execution without really nesting?
[16:58:13] <Alexendoo> FlorianBad: Yeah
[16:58:29] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@46.109.136.184) (Client Quit)
[16:58:36] <FlorianBad> ok, I just realized that after asking my question, by brainstorming a little more:)  Thanks!
[16:59:45] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@46.109.136.184)
[17:00:05] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[17:02:19] *** Joins: kmh (~kmh@2a00:6020:5004:6800:6500:bc30:b0fd:c100)
[17:04:23] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 252 seconds)
[17:07:40] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[17:07:47] *** Quits: kakashiAL (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de) (Ping timeout: 250 seconds)
[17:10:49] <FlorianBad> it seems that clearInterval() doesn't stop the execution in the middle of the setInterval() code, is that guaranteed behavior I can count on, or might it interrupt the code in the middle in some case?
[17:11:42] <Cork> FlorianBad: setInterval does just like setTimeout and adds the function to the end of the execution stack
[17:12:20] <Cork> FlorianBad: warning though it takes no consideration if the function is complete or not so if the execution takes more time then the interval you will have a constantly running function
[17:12:22] <FlorianBad> cork: so internally clearInterval only removes from that stack?
[17:12:32] <Cork> no
[17:12:36] <Cork> it only appends
[17:12:54] <FlorianBad> hmm, so it might kill the execution then?
[17:12:59] <Cork> so if set interval runs 3 times before the stack ends you have the function in it three times
[17:13:03] <Cork> no
[17:13:10] <Cork> i'm not sure what your talking about
[17:13:18] <Cork> setInterval is queueing an function call
[17:13:21] <Cork> not killing things
[17:13:37] <FlorianBad> but my question is about clearInterval
[17:13:50] <Cork> -_-'
[17:13:53] <Cork> sorry read as set
[17:14:07] <Cork> clearInterval does the same as clearTimeou and just stopps the system timer
[17:14:13] <Cork> so what is in stack stays in stack
[17:14:46] <FlorianBad> ok, so I can count on the fact that it's a clean stop where the execution will finish?
[17:15:11] <Cork> you can count on clearing it won't affect if things run or not
[17:15:30] <Cork> only future queueing won't happen
[17:15:30] <FlorianBad> ok
[17:15:45] <FlorianBad> ok, cool
[17:15:47] <FlorianBad> thank you
[17:15:52] *** Joins: akorbi (~akorbi@nat-66-vlan-266.univ-fcomte.fr)
[17:16:02] <Cork> so if you have say 3 calls in queue cause of execution time clearInterval will still have it execute 3 times before it is done
[17:16:09] <Cork> but there  won't be a fourth one
[17:16:20] *** Quits: akorbi (~akorbi@nat-66-vlan-266.univ-fcomte.fr) (Client Quit)
[17:16:32] <Cork> if the server stops of pages is left or so on will still kill those though
[17:16:44] <FlorianBad> yeah, sure
[17:16:56] <FlorianBad> or if there's a power outage too ;)
[17:17:15] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@46.109.136.184) (Quit: Connection closed)
[17:17:19] <Cork> ya, but note it is normally much better to use setTimeout then setInterval
[17:17:24] *** Quits: RealKiller (~RealKille@59-102-36-225.tpgi.com.au) (Quit: Client closed)
[17:17:26] <FlorianBad> or a nuke attack
[17:17:46] <FlorianBad> hmm, why?
[17:18:39] <Cork> function call() { /* do things that takes 1sec */ }; setInterval(call, 100) <-- will queue 10 for every one executed
[17:18:59] <Cork> function call() { /* do things that takes 1sec */ setTimeout(call, 100) }; setTimeout(call, 100) <-- will ever only queue one
[17:19:43] <Cork> and that "i don't care how long it takes to execute" is a tripping poing many have fallen on
[17:21:12] <Cork> especially if the function does network calls
[17:21:52] <FlorianBad> oh but here it calls itself, not another function. I would always put that in another function
[17:22:18] <FlorianBad> the problem is not setInterval vs setTimeout, it's that setInterval should never call itself
[17:22:18] <Cork> FlorianBad: the setTimeout is how you make an interval loop without setInterval
[17:22:49] <Cork> the point is with setTimeout you wait for the last call to finnish before queing the next one
[17:23:21] *** Joins: mimmy (~mimmy@72.142.88.18)
[17:23:21] <Cork> while setInterval don't care, so if the execution takes too long time the delay between execution wil shrink and shrink until it runs continuesly
[17:24:07] <FlorianBad> But isn't that also the case if I do    function start_calls(){ setInterval(call, 100); call() } function call { ... }    ?
[17:24:42] <FlorianBad> (well, call() before the setInterval probably)
[17:24:46] <Cork> FlorianBad: yes, first you execute call directly and then every 100 ms you queue the call again
[17:24:53] <Cork> nomatter if the last call is done or note
[17:24:57] <Cork> *not
[17:25:09] <Cork> FlorianBad: the order doesn't matter
[17:25:24] <Cork> setInterval can't execute the function until the current stack ends anyway
[17:27:09] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[17:27:37] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[17:30:19] *** Joins: summersault (~summersau@179.221.251.16)
[17:30:42] *** Joins: csmiga1 (~Thunderbi@96-87-248-1-static.hfc.comcastbusiness.net)
[17:32:02] *** Quits: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com) (Quit: csmiga)
[17:32:02] *** csmiga1 is now known as csmiga
[17:32:28] *** Joins: csmiga1 (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com)
[17:32:36] *** Joins: reallymemorable (~reallymem@91.75.74.154)
[17:32:40] *** Quits: csmiga1 (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com) (Client Quit)
[17:33:15] *** Joins: Colt (~Colt@user/colt)
[17:33:43] <FlorianBad> ok
[17:35:42] *** Quits: neverfindme (~hayden@158.123.160.43) (Remote host closed the connection)
[17:36:06] *** Joins: neverfindme (~hayden@158.123.160.43)
[17:36:32] *** Quits: szutt (~szutt@116.37.2.145) (Quit: Ping timeout (120 seconds))
[17:36:55] *** Joins: szutt (~szutt@116.37.2.145)
[17:37:19] *** Quits: kristijonas (~kristijon@78-56-32-39.static.zebra.lt) (Quit: Client closed)
[17:38:50] *** Joins: Deneb (~johnch@30.125.7.51.dyn.plus.net)
[17:40:11] *** Parts: Kingsy (~chris@kingsy.co.uk) ()
[17:41:07] *** Quits: re (~user@user/re) (Remote host closed the connection)
[17:41:40] *** Joins: Trieste_ (T@user/pilgrim)
[17:41:55] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 268 seconds)
[17:43:11] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[17:43:49] *** Quits: neverfindme (~hayden@158.123.160.43) (Ping timeout: 240 seconds)
[17:43:57] *** Joins: shailangsa (~shailangs@host86-186-127-128.range86-186.btcentralplus.com)
[17:45:03] *** Quits: JohnComputation2 (~JohnCompu@gateway/tor-sasl/johncomputation) (Remote host closed the connection)
[17:45:09] *** Trieste_ is now known as Trieste
[17:45:18] *** Joins: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation)
[17:48:08] *** Joins: tccki (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795)
[17:57:24] *** Joins: neverfindme (~hayden@158.123.160.43)
[18:01:06] *** Quits: reallymemorable (~reallymem@91.75.74.154) (Remote host closed the connection)
[18:01:46] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[18:03:49] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:03:50] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[18:03:50] *** Joins: wroathe (~wroathe@user/wroathe)
[18:04:54] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[18:04:55] *** Joins: reallymemorable (~reallymem@91.75.74.154)
[18:08:37] *** Quits: mimmy (~mimmy@72.142.88.18) (Ping timeout: 240 seconds)
[18:09:00] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[18:09:58] *** Joins: mimmy (~mimmy@72.142.88.18)
[18:12:20] *** Joins: han-solo (~hanish@user/han-solo)
[18:15:25] *** Quits: nabaiste^ (~nabaiste@wsip-98-188-240-142.mc.at.cox.net) (Remote host closed the connection)
[18:18:59] *** Joins: Guest35 (~Guest35@173-26-39-109.client.mchsi.com)
[18:19:09] *** Quits: kogepan (~kogepan@user/kogepan) (Quit: Leaving)
[18:19:38] *** Parts: Guest35 (~Guest35@173-26-39-109.client.mchsi.com) ()
[18:20:08] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[18:20:59] *** Quits: reallymemorable (~reallymem@91.75.74.154) (Remote host closed the connection)
[18:26:48] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[18:27:22] *** Quits: comatory (~ondrejsyn@185.176.138.241) (Ping timeout: 260 seconds)
[18:29:42] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[18:29:51] *** Joins: mimmy_ (~mimmy@37.19.212.189)
[18:31:16] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[18:32:05] *** Quits: mimmy (~mimmy@72.142.88.18) (Ping timeout: 250 seconds)
[18:33:06] *** Quits: iomari891 (~iomari891@197.210.70.19) (Ping timeout: 268 seconds)
[18:33:25] <fweht> does anybody herer use three.js?  i see that there is react-three-fiber, which seems to be great for using three-js in react, but all my webgl work consist of custom shaders, so my question, does three.js also do something for those of us who bring their own shaders or is it overkill?
[18:33:43] <fweht> (i ask because using my own shaders in react seems a bit cumbersome)
[18:34:05] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: WeeChat 3.3)
[18:38:41] *** Quits: neverfindme (~hayden@158.123.160.43) (Quit: Leaving)
[18:43:18] *** Joins: Larzen (~textual@2604:3d09:1f7f:d490:a81e:a437:9ee9:5b81)
[18:44:18] *** Quits: Larzen (~textual@2604:3d09:1f7f:d490:a81e:a437:9ee9:5b81) (Client Quit)
[18:46:09] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[18:46:54] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:46:54] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[18:46:54] *** Joins: wroathe (~wroathe@user/wroathe)
[18:47:05] *** Joins: re (~user@user/re)
[18:51:35] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[18:52:32] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 240 seconds)
[18:55:45] *** Joins: reallymemorable (~reallymem@91.75.74.154)
[18:56:32] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:59:49] *** Quits: reallymemorable (~reallymem@91.75.74.154) (Ping timeout: 240 seconds)
[19:03:03] *** Quits: wombawomba (~andre@89-253-80-164.customers.ownit.se) (Ping timeout: 250 seconds)
[19:06:58] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi)
[19:07:28] *** Quits: Guest31 (~Guest31@mail.bfc-net.de) (Quit: Client closed)
[19:08:09] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[19:08:21] *** Joins: Rockwood (~Rocky@user/rocky)
[19:10:59] *** Joins: kakashiAL (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de)
[19:12:33] *** Joins: yolo (~xxiao@159.89.184.51)
[19:12:51] <yolo> npm install -S --- what does -S mean, could not find any info about this flag
[19:13:40] <yolo> found it, it's now the default -save
[19:14:30] *** Quits: mimmy_ (~mimmy@37.19.212.189) (Ping timeout: 260 seconds)
[19:15:17] *** Quits: cismee (~cisme_@2600:1700:d980:1a40:653f:dc66:4e88:91a5) (Ping timeout: 252 seconds)
[19:16:33] *** Joins: cisme_ (~cisme_@108-218-190-101.lightspeed.frsnca.sbcglobal.net)
[19:16:56] *** Joins: mimmy_ (~mimmy@37.19.212.190)
[19:20:15] *** Joins: sam_1 (~sam_1@87.51.251.118)
[19:20:21] *** Quits: Deneb (~johnch@30.125.7.51.dyn.plus.net) (Quit: Leaving)
[19:22:28] *** Quits: cebor (~cebor@user/cebor) (Quit: bye!)
[19:22:50] *** Joins: cebor (~cebor@user/cebor)
[19:23:11] *** Quits: cebor (~cebor@user/cebor) (Remote host closed the connection)
[19:23:41] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[19:23:54] *** Joins: cebor (~cebor@user/cebor)
[19:26:02] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[19:26:32] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 240 seconds)
[19:27:29] *** Joins: iomari891 (~iomari891@102.91.5.185)
[19:31:16] *** Joins: kogepan (~kogepan@user/kogepan)
[19:37:52] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[19:41:34] *** Joins: hackers (~self@user/hackers)
[19:42:58] *** Quits: CiaoSen (~Jura@p200300c957347b002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[19:44:06] *** Joins: zebrag (~chris@user/zebrag)
[19:47:19] *** Joins: enoq_ (~enoq@2a05:1141:1f5:5600:c134:6a7a:9835:f219)
[19:53:16] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[19:55:15] *** Quits: mimmy_ (~mimmy@37.19.212.190) (Ping timeout: 252 seconds)
[19:58:02] *** Joins: jmdaemon (~anon@user/jmdaemon)
[19:58:53] *** Quits: APic (~apic@apic.name) (Quit: [TLS] Client upgrade)
[19:59:05] *** Quits: jmdaemon (~anon@user/jmdaemon) (Client Quit)
[19:59:17] *** Joins: APic (apic@apic.name)
[19:59:27] *** Joins: jmdaemon (~anon@142.207.63.60)
[20:00:23] *** Joins: nomic (~nomic@51.52.78.152)
[20:02:17] *** Joins: comatory_ (~ondrejsyn@185.51.250.206)
[20:02:28] *** Quits: kakashiAL (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de) (Quit: WeeChat 3.1)
[20:03:43] *** Quits: jmdaemon (~anon@142.207.63.60) (Client Quit)
[20:04:19] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[20:04:20] *** Joins: jmdaemon (~anon@142.207.63.60)
[20:04:51] *** Quits: jmdaemon (~anon@142.207.63.60) (Client Quit)
[20:05:07] *** Joins: jmdaemon (~anon@142.207.63.60)
[20:06:08] *** Quits: re (~user@user/re) (Remote host closed the connection)
[20:07:00] *** Quits: jmdaemon (~anon@142.207.63.60) (Client Quit)
[20:07:25] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[20:09:35] *** Quits: comatory_ (~ondrejsyn@185.51.250.206) (Ping timeout: 250 seconds)
[20:09:36] *** Joins: mimmy_ (~mimmy@37.19.212.189)
[20:09:58] <sybariten> would anyone be so kind as to explain the second code example here? https://www.codegrepper.com/code-examples/javascript/javascript+check+if+array+is+subset+of+another   the four line one
[20:10:14] *** Quits: mimmy_ (~mimmy@37.19.212.189) (Client Quit)
[20:10:48] <sybariten> why are they making a new set on line three for instance
[20:11:07] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:11:17] *** Joins: jmdaemon (~anon@142.207.63.60)
[20:11:25] <systemfault> sybariten: A Set cannot contain duplicates, so if you add elements from set B to set A and its length doesn't change then it means that set A already contained all the elements of set B
[20:11:45] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 250 seconds)
[20:12:38] <sybariten> AAAAAaaaaa thats genious
[20:12:39] <systemfault> So, it's doing that, but instead of mutating set A, it creates a new one
[20:13:05] <sybariten> that becomes a failproof method of discovering if B is a (so called?) "true" subset of A then?
[20:13:22] <systemfault> Yeah
[20:13:40] <sybariten> and the == is shorthand for a test that would in this case create a boolean
[20:13:41] <systemfault> It just works for primitives though...
[20:13:55] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[20:14:08] <sybariten> Yeah well i
[20:14:51] <sybariten> Yeah well i'm doing exactly this in a school exercise so it's perfect, thanks systemfault .
[20:15:14] *** Quits: jmdaemon (~anon@142.207.63.60) (Client Quit)
[20:15:32] *** Joins: jmdaemon (~jmdaemon@142.207.63.60)
[20:15:33] <sybariten> I must say i am confused by the set adding though, i've been doing that in earlier exercises but got the impression that i needed to use an .add metod or something, not that i could just do C=A,B ... i must check what i did there
[20:15:59] <systemfault> sybariten: There's a possible problem with the snippet though... its starts with arrays
[20:16:06] *** Quits: jmdaemon (~jmdaemon@142.207.63.60) (Changing host)
[20:16:06] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[20:16:07] <systemfault> Which can contain duplicates
[20:16:23] <systemfault> So, if it does then it doesn't work.
[20:16:40] <systemfault> So maybe those arrays should be Sets too
[20:17:17] *** Quits: enoq_ (~enoq@2a05:1141:1f5:5600:c134:6a7a:9835:f219) (Quit: enoq_)
[20:18:19] <systemfault> sybariten: Like this https://jsfiddle.net/gv2ekt54/
[20:20:01] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Client Quit)
[20:20:36] *** Joins: jmdaemon (~jmdaemon@142.207.63.60)
[20:21:05] *** Joins: sam_1 (~sam_1@87.51.251.118)
[20:23:52] *** Joins: powftw (uid448161@id-448161.lymington.irccloud.com)
[20:24:48] *** Quits: jmdaemon (~jmdaemon@142.207.63.60) (Client Quit)
[20:25:10] *** Joins: TheAthlete (~TheAthlet@176.96.230.85)
[20:25:10] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[20:25:12] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Client Quit)
[20:25:32] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 240 seconds)
[20:25:39] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[20:25:48] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu)
[20:27:12] <Rockwood> systemfault, o/
[20:27:46] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 265 seconds)
[20:28:58] <systemfault> o/
[20:30:56] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:31:53] <fweht> is there a javascript library which can perform this transformation to svg paths?  i dont need the shading part, just a clean outline around the whole thing... https://usercontent.irccloud-cdn.com/file/aXEyNC2o/%20
[20:35:55] <sybariten> systemfault: i see
[20:36:02] *** Joins: comatory_ (~ondrejsyn@185.51.250.206)
[20:38:02] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[20:39:02] *** Joins: austincheney (~austinche@2600:1700:1220:76c8:19b0:f1e9:cf17:9c15)
[20:46:13] *** Quits: comatory_ (~ondrejsyn@185.51.250.206) (Ping timeout: 252 seconds)
[20:46:14] *** Quits: nomic (~nomic@51.52.78.152) (Quit: Leaving)
[20:46:33] *** Joins: nomic (~nomic@51.52.78.152)
[20:48:25] *** Quits: taupiqueur (~taupiqueu@64.197.204.77.rev.sfr.net) (Ping timeout: 252 seconds)
[20:50:46] *** Joins: comatory_ (~ondrejsyn@185.51.250.206)
[20:50:59] <sybariten> systemfault: this is me trying to create a union between two sets. I'm also adding sets. Am i using an un-practical approach? https://pastebin.com/qcmFct5V
[20:51:33] *** Joins: sam_1 (~sam_1@87.51.251.118)
[20:52:35] <han-solo> `unionOfAB = new Set([...A, ...B])`
[20:53:42] <EdFletcher> not to give you something to shortcut the work with, but as a way to check your work (nicely done sybariten, you got it!), MDN has a comprehensive set of implementations for basic Set operations (why they're still not just part of Set's interface is baffling, but whatever...):
[20:53:42] <EdFletcher> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set#implementing_basic_set_operations
[20:54:08] *** Joins: dalek-caan (~Thunderbi@109-252-124-86.nat.spd-mgts.ru)
[20:55:23] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[20:58:23] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi)
[20:58:37] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 268 seconds)
[20:58:55] <sybariten> EdFletcher: thank you. Well in my program (education) that wouldn't really be cheating, we're learning programming in general and maths (!) specifically right now, but they typically want us to use MDN sources anyhow  :)
[20:59:12] *** Joins: Betal (~Betal@user/betal)
[21:01:11] <han-solo> wise
[21:01:46] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[21:01:55] <banana_> yo
[21:02:13] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 240 seconds)
[21:02:51] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[21:03:43] *** Joins: reallymemorable (~reallymem@91.75.74.154)
[21:03:55] <banana_> about to partake in a refactor
[21:04:38] <banana_> with some crappy code, gonna move the crappy code inside a component
[21:04:41] <sybariten> i like the cut of your nick, banana man
[21:04:59] *** Quits: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[21:05:29] <banana_> https://www.youtube.com/watch?v=qAkZT_4vL_Y
[21:05:29] <skillbot2> YouTube Title: Tom Waits - What's He Building
[21:05:33] *** Joins: jim87_ (~quassel@93.55.249.30)
[21:06:25] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[21:06:47] <banana_> what crappy component is he building?
[21:07:05] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: WeeChat 3.3)
[21:08:05] *** Quits: reallymemorable (~reallymem@91.75.74.154) (Ping timeout: 250 seconds)
[21:08:33] *** Quits: jim87_ (~quassel@93.55.249.30) (Client Quit)
[21:08:46] *** Quits: jim87 (~quassel@93.55.249.30) (Ping timeout: 256 seconds)
[21:09:31] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:f159:de3a:6832:71fa)
[21:09:42] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[21:10:05] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Client Quit)
[21:10:43] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[21:10:45] *** Joins: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[21:10:54] *** Quits: dalek-caan (~Thunderbi@109-252-124-86.nat.spd-mgts.ru) (Quit: dalek-caan)
[21:10:59] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Read error: Connection reset by peer)
[21:12:33] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:3961:4cf9:16b:5bf0)
[21:13:21] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Remote host closed the connection)
[21:13:27] *** Quits: szutt (~szutt@116.37.2.145) (Quit: Client closed)
[21:13:37] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[21:15:28] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[21:17:23] *** Joins: qswz (~caub@89-80-20-125.abo.bbox.fr)
[21:17:32] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[21:18:53] *** Joins: taupiqueur (~taupiqueu@64.197.204.77.rev.sfr.net)
[21:20:06] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[21:20:06] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[21:20:06] *** Joins: wroathe (~wroathe@user/wroathe)
[21:20:18] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[21:21:24] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[21:21:49] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi) (Read error: Connection reset by peer)
[21:23:17] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi)
[21:23:17] *** Quits: taupiqueur (~taupiqueu@64.197.204.77.rev.sfr.net) (Ping timeout: 268 seconds)
[21:23:24] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:5c9b:338b:bb4b:5779)
[21:24:04] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi) (Read error: Connection reset by peer)
[21:31:26] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[21:35:44] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: WeeChat 3.3)
[21:36:03] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[21:36:06] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Client Quit)
[21:36:25] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[21:36:27] *** Quits: PowaBanga (~PowaBanga@user/powabanga) (Quit: Ciao)
[21:37:53] <hackers> how do you configure yarn to authenticate to a repository?
[21:38:53] <hackers> I can make it auth by using the equivalent npm configuration in ~/.npmrc but really can't find what the equivalent for yarn configuration is, only results of people having trouble configuring yarn to authenticate against private repositories
[21:39:17] *** Joins: PowaBanga (~PowaBanga@user/powabanga)
[21:39:40] <hackers> so really, the only step I need to do in NPM is to set the repo's authToken in ~/.npmrc with `npm config set \\<registry>:authToken=<token>'
[21:39:55] <hackers> all other config I can migrate to yarn but this one
[21:41:12] *** Joins: i0e (~is0ke3@user/is0ke3)
[21:41:17] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[21:41:52] *** Quits: i0e (~is0ke3@user/is0ke3) (Client Quit)
[21:41:58] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[21:42:36] <qswz> just keep npm
[21:43:14] <qswz> you won't look more as a hacker bad boy by using yarn
[21:43:38] *** Joins: wombawomba (~andre@89-253-80-164.customers.ownit.se)
[21:45:04] *** Joins: nomic2 (~nomic@51.52.78.152)
[21:46:32] *** Quits: nomic (~nomic@51.52.78.152) (Ping timeout: 240 seconds)
[21:48:01] *** nomic2 is now known as nomic
[21:48:45] *** Joins: CiaoSen (~Jura@p200300c957347b002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[21:48:55] *** Quits: wombawomba (~andre@89-253-80-164.customers.ownit.se) (Ping timeout: 252 seconds)
[21:49:53] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: WeeChat 3.3)
[21:50:13] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[21:50:40] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Client Quit)
[21:51:11] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[21:51:33] *** Joins: cantelope_9 (~cantelope@cantelope.org)
[21:51:40] *** cantelope_9 is now known as c4ntelope
[21:51:46] *** Quits: qswz (~caub@89-80-20-125.abo.bbox.fr) (Quit: leaving)
[21:52:29] *** Joins: hackers_ (~self@user/hackers)
[21:52:49] *** Quits: hackers_ (~self@user/hackers) (Client Quit)
[21:53:08] *** Parts: c4ntelope (~cantelope@cantelope.org) ()
[21:55:54] *** Joins: AtomicInteger (~primamate@p200300ee170add0079599a87190787bf.dip0.t-ipconnect.de)
[21:55:54] <supay> what's an easy way to generate 'featured-images' wherein i take some base image, and overlay text on it? is there a library that can help do this?
[21:57:17] <supay> qswz, the reason hackers asks is probably because of actual hackers that do dependency confusion attacks.
[21:58:33] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[21:58:33] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[21:58:33] *** Joins: wroathe (~wroathe@user/wroathe)
[22:00:31] *** Quits: AtomicInteger (~primamate@p200300ee170add0079599a87190787bf.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[22:02:49] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:f159:de3a:6832:71fa) (Quit: Textual IRC Client: www.textualapp.com)
[22:02:51] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[22:03:07] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[22:04:23] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[22:04:36] *** Joins: audiocat (~audio@user/audio)
[22:09:16] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 265 seconds)
[22:09:38] *** Joins: taupiqueur (~taupiqueu@64.197.204.77.rev.sfr.net)
[22:09:51] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:10:33] *** Joins: sbrothy (~sbrothy@192038129024.mbb.telenor.dk)
[22:13:15] *** Quits: sbrothy (~sbrothy@192038129024.mbb.telenor.dk) (Client Quit)
[22:13:28] *** Joins: sbrothy (~sbrothy@192038129024.mbb.telenor.dk)
[22:13:33] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[22:13:51] *** Quits: taupiqueur (~taupiqueu@64.197.204.77.rev.sfr.net) (Ping timeout: 252 seconds)
[22:16:06] *** Quits: sbrothy (~sbrothy@192038129024.mbb.telenor.dk) (Client Quit)
[22:16:12] *** Quits: comatory_ (~ondrejsyn@185.51.250.206) (Ping timeout: 256 seconds)
[22:17:59] *** hackers is now known as remote
[22:18:30] *** Joins: wombawomba (~andre@89-253-80-164.customers.ownit.se)
[22:22:39] *** Joins: Naan` (~Naan@user/naan)
[22:22:48] *** Joins: sbrothy (~sbrothy@192038129024.mbb.telenor.dk)
[22:23:17] *** Quits: wombawomba (~andre@89-253-80-164.customers.ownit.se) (Ping timeout: 265 seconds)
[22:26:48] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 268 seconds)
[22:27:03] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 252 seconds)
[22:30:00] *** Quits: sbrothy (~sbrothy@192038129024.mbb.telenor.dk) (Quit: leaving)
[22:32:34] *** Joins: sbrothy (~sbrothy@192038129024.mbb.telenor.dk)
[22:32:49] *** Joins: cantelope2 (~cantelope@cantelope.org)
[22:33:11] *** Quits: cantelope2 (~cantelope@cantelope.org) (Client Quit)
[22:36:52] *** Quits: sbrothy (~sbrothy@192038129024.mbb.telenor.dk) (Client Quit)
[22:37:16] *** Joins: wombawomba (~andre@89-253-80-164.customers.ownit.se)
[22:39:04] *** Joins: harriet_tubman (~harriet_t@209.202.223.146)
[22:45:03] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[22:45:10] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[22:45:47] *** Joins: AMPed (~user@ip70-175-68-208.tc.ph.cox.net)
[22:47:11] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[22:47:11] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[22:49:53] *** Joins: onosendi (~onosendi@user/onosendi)
[22:51:02] <AMPed> How do you re-apply an event listener to a reloaded element? I seem to be losing one that intercepts the 'submit' button when a form reloads asynchronously.
[22:51:45] *** Joins: sbrothy (~sbrothy@192038129024.mbb.telenor.dk)
[22:51:51] <silly> you seem to be setting innerHTML somewhere
[22:53:58] *** Joins: dsrt^ (~dsrt@wsip-98-188-240-142.mc.at.cox.net)
[22:54:44] *** Joins: df00z (~df00z@rrcs-50-75-26-170.nys.biz.rr.com)
[22:55:27] *** Joins: taupiqueur (~taupiqueu@64.197.204.77.rev.sfr.net)
[22:56:09] *** Joins: CoderGuy2 (~CoderGuy@2601:644:102:2820:8dcd:55e0:e024:64ff)
[22:56:21] <hax> supay, imagemagick or gd
[22:57:11] <hax> https://www.npmjs.com/package/node-gd
[22:58:37] *** Joins: reallymemorable (~reallymem@91.75.74.154)
[23:00:03] *** Quits: CoderGuy (~CoderGuy@user/coderguy) (Ping timeout: 252 seconds)
[23:00:47] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[23:00:53] *** Joins: Akiva (~Akiva@user/Akiva)
[23:01:28] <df00z> Does this channel have chatlogs anywhere?
[23:01:34] *** Joins: iffraff (~quassel@2605:a601:aae0:4a00:64d6:2e1a:7bf3:85f0)
[23:01:58] <sybariten> so, i am trying this one: https://pastebin.com/YRSKYYkM     and that doesn't really work, i get 2 as the .size . I am guessing i am not creating the sets correctly?
[23:02:41] <hax> because mixedSet has 2 items
[23:03:34] <df00z> I think you are creating a set of two sets
[23:03:43] <df00z> not a set of all the items inside those sets
[23:04:05] <df00z> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set
[23:04:11] <df00z> There's some examples of how to do unions
[23:04:21] <sybariten> yeah that's what i figured too :)
[23:05:23] <AMPed> silly: was your last comment directed at me?
[23:05:40] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 268 seconds)
[23:06:38] <silly> yes
[23:07:45] *** Joins: junktext_ (~junktext@gateway/vpn/pia/junktext)
[23:07:48] <sybariten> df00z: thanks! Yeah, they have a union example they seem to actually be using the .add method, which i did in an earlier exercise. Maybe i need to do like that then.
[23:08:04] <AMPed> that is true, I am rewriting some html (inner or otherwise). Is there a way to re-apply a listener to something that's been created that way?
[23:10:02] <sybariten> but , is calling a new set _union a typical javascript thing? I mean the underscore.
[23:10:17] <silly> AMPed, after writing to innerHTML or similar, all elements inside are new, so there's no re-applying. you apply event listeners the same way you did with the old elements
[23:15:54] <supay> hax, cool, thanks!
[23:16:01] <AMPed> silly: okay, I guess I just have to manually call them again
[23:16:23] *** Joins: comatory_ (~ondrejsyn@185.51.250.206)
[23:17:04] <ljharb> sybariten: naming things with an underscore is a bad idea.
[23:17:09] <ljharb> sybariten: it's a convention, but a bad one
[23:17:59] *** Joins: Croran (~Croran@71.231.214.173)
[23:18:26] <Croran> why can't I use setAttribute to set 'preserveAspectRatio' on an svg element?
[23:18:56] <systemfault> There's usually no reason to use setAttribute... like, ever.
[23:19:26] <systemfault> If an attribute exists, usually... there's a matching property on the node
[23:19:50] <Croran> ah interesting
[23:19:53] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[23:20:58] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[23:21:05] <sybariten> ljharb: gotcha. I havent really seen it much like that, i mean not in the front of the variable
[23:21:17] *** Quits: TheAthlete (~TheAthlet@176.96.230.85) (Quit: Connection closed)
[23:21:48] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[23:21:52] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:18f3:9df5:7902:bfc2)
[23:22:32] <systemfault> Croran: I've never used that specific one, maybe it's read-only? (I don't know)
[23:23:12] <sybariten> uh, sorry to harp on, but is this really the correct comparision? let isSubset = mixedSet.size == superSet.length   why do i check the .length of one and the .size of the other?
[23:24:44] <ljharb> sybariten: arrays have length, sets/maps have size
[23:25:01] <sybariten> in your jsfiddle for me earlier systemfault , you were using size and size
[23:25:28] <sybariten> ljharb: but i think this is supposed to be all sets
[23:25:43] <Croran> systemfault: what if i'm using a helper function to set all my attributes in a one liner?
[23:25:56] <onosendi> sybariten: it's a Python thing. `_foo` denotes a private variable/function/method etc. I see it every once and a while in JavaScript.
[23:26:01] <Croran>      function setAttributes(el, attrs) { for(var key in attrs) { el.setAttribute(key, attrs[key]); } }
[23:26:36] <sybariten> onosendi: hmm ok. I "should" know that....
[23:26:42] <systemfault> Croran: That's called "Object.assign"
[23:26:46] <Croran> and then something like setAttributes(tag,{"width": "400px", "id": "svgTest","style": "shape-rendering: crispEdges;","viewBox": "0 0 400 125"});
[23:26:46] <systemfault> Hmm
[23:26:50] <systemfault> Nevermind...
[23:27:02] <systemfault> But why do you want to set attributes?
[23:27:09] <systemfault> Set properties instead.
[23:27:17] <Croran> setting attributes on my svg shapes?
[23:27:26] <systemfault> But sure, that helper function will probably work.
[23:27:33] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 252 seconds)
[23:27:33] <Croran> properties seems like a longer syntax?
[23:30:36] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[23:31:12] <Croran> ok thanks systemfault. i figured it out. apparently the property and the attribute have different names.
[23:31:37] <Croran> property is preserveAspectRatio, attribute is SVGPreserveAspectRatio
[23:31:42] <ljharb> sybariten: onosendi but it's harmful because `_` doesn't mean anything. something's only private if it's unreachable, and it's harmful to pretend something public is private.
[23:32:24] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:34:15] *** Quits: teut (~teut@2401:4900:1c30:1de4:919b:82a3:cf8:ac12) (Quit: Client closed)
[23:34:18] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Read error: Connection reset by peer)
[23:36:30] *** Joins: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se)
[23:41:03] *** Quits: taupiqueur (~taupiqueu@64.197.204.77.rev.sfr.net) (Ping timeout: 250 seconds)
[23:43:42] *** Quits: Cyp (~cyp@213.237.85.9) (Remote host closed the connection)
[23:43:52] <onosendi> ljharb: agreed
[23:44:03] *** Quits: audiocat (~audio@user/audio) (Ping timeout: 252 seconds)
[23:44:08] *** Joins: Cyp (~cyp@213.237.85.9)
[23:46:29] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[23:48:04] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Quit: Client closed)
[23:51:29] <Croran> if i want to dynamically generate a bunch of elements on a page, but i don't know how many, what's the best way to do that?
[23:51:36] <Croran> make an array and keep adding elements to it?
[23:52:00] <Croran> or... if I put it all within a function can I just re-use a single variable over and over?
[23:52:01] *** Joins: taupiqueur (~taupiqueu@64.197.204.77.rev.sfr.net)
[23:53:16] <ljharb> Croran: use react.
[23:59:49] <CoderCharmander> Croran: Agreeing with ljharb, some templating framework is probably the best choice. For something lightweight, you can try Alpine.js
