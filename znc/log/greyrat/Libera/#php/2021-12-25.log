[00:01:21] *** Joins: vlm (~vlm@user/vlm)
[00:05:59] *** Joins: NakedKing (~NakedKing@user/nakedking)
[00:06:14] <HvszrStykp> Yes. Honestly it should have been clear to me that this was the problem since it was a recursive that is intended to have two return statements, and I was getting an empty return value, which could not have been coming from the return statement that was there that I was looking at.
[00:06:38] <HvszrStykp> but I haven't programmed PHP in a while
[00:08:45] <da_wunder> psalm and phpstan could help you with that kind of issues
[00:09:48] <HvszrStykp> Thanks
[00:10:45] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Quit: Never put off till tomorrow, what you can do the day after tomorrow)
[00:12:36] <__adrian> indeed
[00:14:24] *** Joins: DevAntoine (~DevAntoin@2a01cb0d804099dcbda43fe2046f4d8a.ipv6.abo.wanadoo.fr)
[00:15:02] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[00:19:21] *** Quits: DevAntoine (~DevAntoin@2a01cb0d804099dcbda43fe2046f4d8a.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[00:34:34] *** Quits: UsbSick (~UsbSick@2600:6c48:757f:e654:a863:efc5:fd1:1de4) (Remote host closed the connection)
[00:36:40] *** Quits: MrBlue (~stephan@24.114.94.228) (Read error: Connection reset by peer)
[00:37:37] *** Quits: lall- (~alek@2403:6200:8862:eb0e:79b9:192:d0c9:43a5) (Ping timeout: 240 seconds)
[00:39:19] *** Joins: WishBoy (~WishBoy@user/wishboy)
[00:41:45] *** Quits: ge (~g@37.214.57.116) (Remote host closed the connection)
[00:42:13] *** Quits: junktext__ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 240 seconds)
[01:00:57] *** Quits: robotkittenscat (~robotkitt@user/robotkittenscat) (Quit: Bridge terminating on SIGTERM)
[01:06:16] *** Joins: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com)
[01:15:47] *** Quits: ms49434 (~ms49434@user/ms49434) (Quit: Leaving)
[01:26:37] *** Quits: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com) (Ping timeout: 240 seconds)
[01:42:32] *** Joins: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com)
[01:47:54] *** Joins: stenno (~stenno@user/stenno)
[01:49:32] *** Joins: Nekomander (~BadAdvice@user/badadvicecat)
[01:50:02] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 240 seconds)
[01:52:13] *** Quits: CyberCr33p (~chris@bnc.cretaforce.gr) (Read error: Connection reset by peer)
[02:01:01] *** Joins: CyberCr33p (~chris@bnc.cretaforce.gr)
[02:03:06] *** Quits: CyberCr33p (~chris@bnc.cretaforce.gr) (Read error: Connection reset by peer)
[02:14:11] *** Joins: CyberCr33p (~chris@bnc.cretaforce.gr)
[02:21:04] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[02:21:27] *** Quits: Nekomander (~BadAdvice@user/badadvicecat) (Ping timeout: 268 seconds)
[02:23:45] *** Quits: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com) (Remote host closed the connection)
[02:32:18] *** Quits: Albright (~Albright@149.28.13.173) (Quit: ZNC 1.8.2 - https://znc.in)
[02:33:08] *** Joins: Albright (~Albright@2001:19f0:8001:ca4:b680:a467:38a8:2e2f)
[02:36:17] *** Quits: NakedKing (~NakedKing@user/nakedking) (Ping timeout: 240 seconds)
[02:40:10] <chazy> i have 2 arrays of objects, there's only 1 relation between these 2, a property, i need to know from the first array which are not included in the second array
[02:40:21] <chazy> my question is: are there built-in functions in php for that?
[02:40:39] <chazy> or do i need to manually do this nesting foreach?
[02:41:21] <__adrian> https://php.net/array_udiff
[02:46:28] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:49:56] <chazy> __adrian: hmm it's more complicated than i thought, not sure if it's what i need
[02:50:31] <__adrian> sounds pretty much exactly what you asked about - can you clarify?
[02:51:45] <chazy> i have a list of users that requested rewards, and another list with rewards that have been already handed out, i need to know if we already gave users from the first list their rewards by comparing with the second list
[02:52:25] <chazy> both lists are arrays of objects
[02:52:51] <__adrian> ok
[02:54:07] <__adrian> what's different/complicated?
[02:54:15] <__adrian> that still sounds spot on
[02:55:01] <__adrian> (though it also sounds like something you ought to be doing in the DB, if you're using one)
[02:55:39] <chazy> what should the callback do? i was already trying to compare using if $obj1->prop === $obj2->prop then continue, but i just realized that doesn't work
[02:56:06] <chazy> i can't use the db, one of the list comes from an API
[02:56:15] <__adrian> it should return -1,0,1 if the two objects should be considered <,=,>
[02:57:21] <__adrian> ah... ok
[02:57:27] <__adrian> er no
[02:57:57] <__adrian> wait. two lists of objects, you just want the objects from the first list that aren't in the second. right?
[02:58:07] <stenno> sounds more like sorting
[02:58:17] <__adrian> and no, not ===. <=>
[02:58:19] <stenno> with the -1,0,1
[02:58:30] <__adrian> stenno: it uses the same algo internally
[02:58:35] <stenno> interesting
[02:58:47] <chazy> yes, if the address from the first list is in the second, then we already send the reward
[02:58:57] *** Quits: bandit_za (~bandit@185.195.232.173) (Ping timeout: 240 seconds)
[02:59:02] *** Quits: DaNeenjah (~jake@adsl-74-230-8-166.hsv.bellsouth.net) (Quit: WeeChat 3.4)
[02:59:07] <__adrian> chazy: so yeah, sounds spot-on
[02:59:20] <__adrian> fn ($a, $b) => $a->prop <=> $b->prop
[03:00:01] <__adrian> assuming $prop is scalar (e.g., a user id)
[03:01:58] <chazy> you mean if it's unique?
[03:02:41] <__adrian> meaning int, string, bool, etc.
[03:02:58] <chazy> yes, strings
[03:05:42] <chazy> does the spaceship operator work with strings?
[03:05:47] <__adrian> yes
[03:05:55] <chazy> specifically hashes, what does it do?
[03:06:05] <__adrian> hashes are not special
[03:06:15] <__adrian> they're just strings
[03:06:27] <chazy> i mean, how does it determine which side is greater?
[03:07:22] <__adrian> lexically
[03:07:22] <TinoDidriksen> Binary string comparison of each char value - also known as ASCIIbetical.
[03:07:40] <__adrian> https://php.net/language.operators.comparison
[03:08:26] <chazy> hmm ok, so if the result is not 0 what does array_udiff do? not add the value to the new array?
[03:08:30] <__adrian> though in your case it doesn't really matter, as you only care whether they're the same/different
[03:08:58] <__adrian> you get the value if it's in the first array, but not in the second
[03:09:06] <__adrian> *second/others
[03:09:17] <__adrian> 0 = same
[03:10:34] <chazy> ok, one last thing the arrow function, i didn't know it was avaiable in php, how do i use it?
[03:10:50] <chazy> fn ($a, $b) => $a->prop <=> $b->prop ?
[03:11:18] <__adrian> fn ($args) => $return_value
[03:11:42] <chazy> fn is the function name?
[03:11:46] <__adrian> no
[03:11:55] <__adrian> it's an anonymous function
[03:12:02] <__adrian> literal token  fn
[03:13:01] <__adrian> (you could use a regular anon function also; arrow function syntax was just shorter)
[03:13:17] <__adrian> both syntaxes produce a Closure instance
[03:13:32] <chazy> it's fine, i just don't know where to put it, as the third argument for array_udiff?
[03:13:59] <__adrian> the last argument, yes. $value_compare_func
[03:28:32] <chazy> hmm why is array_udiff comparing elements from the first array?
[03:29:11] <__adrian> because that's what it's supposed to do?
[03:29:43] <chazy> i thought it compared elements from the first array with elements from the second array?
[03:30:16] <chazy> i mean i don't see the elements from the second array in the callback
[03:30:31] <chazy> why would i want to compare the elments from the same array with each other?
[03:30:37] <__adrian> did you define both args?
[03:30:56] <chazy> yes: dd(array_udiff($list, $result2, fn ($a, $b) => $a[0]->from <=> $b->to));
[03:31:46] <chazy> i mean i passed a normal function just to make sure and function compare($a, $b) { dd($a); }
[03:31:50] <__adrian> aren't both arrays similar (arrays of objects)?
[03:31:53] <stenno> so $list -
[03:31:55] <stenno> that
[03:32:29] <chazy> i did dd($a) and dd($b) and they're elements from the first array, i thought $b would be an element from the second array?
[03:33:23] <chazy> why would i want to compare 2 elements from the same array?
[03:33:45] <chazy> is that the expected behaviour?
[03:33:50] <__adrian> "chazy>  $a[0]->from <=> $b->to"  // is $a an array? you said each array was an array of objects.
[03:34:09] <__adrian> $a is item from first array, $b is item from second
[03:34:35] <__adrian> from what you said i would expect both to be (the same type of) objects
[03:34:45] <__adrian> e.g., https://3v4l.org/1J21e
[03:36:13] <chazy> hmm is that how array_udiff works? why did it return only Guy->id(1)?
[03:36:28] <chazy> what about 3 and 4? they're not in $have_reward
[03:36:41] <__adrian> my example? it returned 1,3,4
[03:36:56] <chazy> oh sorry, the scroll, i'm blind
[03:37:39] <__adrian> $a will be from array #1, $b will be from array #2. order is not guaranteed. do not try to outsmart the algo.
[03:38:10] <chazy> if it does what it did in your example, then that's all i need
[03:38:48] <chazy> thanks
[03:38:52] <__adrian> np
[03:47:01] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[04:03:06] *** Quits: skyroveRR (~skyroveRR@user/skyroverr) (Quit: skyroveRR)
[04:03:34] *** Joins: skyroveRR (~skyroveRR@user/skyroverr)
[04:05:24] *** Quits: guido (~guido@host-79-42-250-104.retail.telecomitalia.it) (Quit: WeeChat 3.4)
[04:23:57] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 240 seconds)
[04:30:35] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[04:38:57] *** Quits: bobdobbs (~user@2406:5a00:4434:4c00:305b:3c06:2e13:bb0d) (Ping timeout: 240 seconds)
[04:43:28] *** Joins: magla (~gelignite@55d49e3c.access.ecotel.net)
[04:43:30] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[05:04:25] *** Quits: magla (~gelignite@55d49e3c.access.ecotel.net) (Quit: Stay safe!)
[05:05:42] <chazy> __adrian: is this the "weighted" thingy you were talking about earlier today? https://github.com/irfaardy/php-gacha/blob/master/src/Roulette/Roulette.php#L45
[05:05:47] <chazy> or is there a better way?
[05:10:04] <__adrian> looks like it's meant to be... but seems specialized for a specific usage. and i'm not sure how well it's done.
[05:10:31] <__adrian> i generally don't trust things where they can't manage to spell the name of their own tool at least consistently
[05:10:51] <chazy> ugliness aside, isn't the code just wrong? like $item outside the foreach, and a return after a throw, wow...
[05:11:07] <__adrian> yeah that part was funny.
[05:11:27] <chazy> well, as long as that's the way to have a gacha like lottery system
[05:12:03] <__adrian> does this work? maybe
[05:12:19] <__adrian> would i use it, even long enough to find out whether it works? no
[05:12:26] <chazy> passing an array with item name => percentage and it returns one based on probability, how to achive that 1 out of 10?
[05:13:16] <__adrian> 1/10 = 10%
[05:13:38] <chazy> yes, but there are many items with difference probabilities
[05:14:21] <chazy> different*
[05:14:42] <__adrian> ...right? use the percentage you want for each
[05:15:42] <__adrian> note, for this code... i don't know. but in general, this approach of weighting doesn't require _percentages_, per se. i.e., the weights don't need to add up to 100%
[05:16:20] <chazy> right, i don't think the numbers i have add up to 100%, they're just chosen based on the rarity/value of the item
[05:17:08] <chazy> so, if i just replace that break with the return $item, it should work, right?
[05:17:26] <__adrian> yes, that's equivalent
[05:18:14] <chazy> but that way it should return items with 10% probability at the 10th pull?
[05:18:21] <chazy> (as an example)
[05:18:52] <__adrian> > should it  // no; that's not how "random" works
[05:19:07] <__adrian> consecutive runs are not related
[05:19:12] <chazy> hmm so then it's not 1 out of 10
[05:19:24] <__adrian> no; that's not how random / probability works
[05:19:25] <chazy> unless i take into account past pulls?
[05:19:29] <__adrian> no; that's not how random / probability works
[05:19:53] <__adrian> if something has a 10% chance, then _each time_ you try you have a 10% chance of getting that one.
[05:19:58] <chazy> ok, so that's how "luck" is created, huh?
[05:20:10] <__adrian> you MIGHT get it 1/10 times, you MIGHT get it every time, you MIGHT never get it.
[05:20:17] <__adrian> or anything in between
[05:20:35] <__adrian> you'll PROBABLY get it 1/10 times, or close to that.
[05:20:46] <chazy> yeah, i've been confusing this for a long time...
[05:21:00] <__adrian> and this is the correct behavior. lots of people don't understand this.
[05:21:22] <chazy> yeah, also that's why some games implement a pity system, to pity those with bad luck lol
[05:21:45] <__adrian> "you'll probably ..."  well, you probably won't, actually  ;)  but you'll probably get close.
[05:22:06] <__adrian> "a pity system"  // you mean, it's rigged?
[05:22:34] <chazy> not rigged, just a promise to get a rare item after a certain # of pulls without getting a rare one
[05:22:49] <__adrian> you're saying it's rigged
[05:23:05] <__adrian> rigged-for-good is not different than rigged-for-bad
[05:23:15] <chazy> it's rigged for those who have bad luck and don't get any rare item after a many tries
[05:23:30] <__adrian> "chazy> it's rigged"  // right, WIS
[05:24:03] <__adrian> just for awareness, depending on how you present it, you can get yourself into serious legal trouble making asystem like this
[05:24:05] <chazy> you think it's bad to offer a pity (rigged) system?
[05:24:12] <__adrian> see above
[05:24:21] <chazy> many games have a pity system
[05:24:21] <__adrian> but generally, yes. i would not trust your system at all.
[05:24:49] * __adrian shrugs
[05:24:54] <__adrian> just something you should be aware of
[05:25:02] <chazy> you don't trust that after, for example, 89 pulls without a rare item, you're guaranteed a rare item on the 90th?
[05:25:16] <__adrian> i wouldn't trust that it's fair the rest of the time
[05:25:32] <chazy> if everyone has the same rules why wouldn't it be fair?
[05:25:48] <__adrian> not talking about other players. talking about your system.
[05:26:08] <chazy> oh ok
[05:26:16] <chazy> yeah, well it's impossible to know
[05:26:28] *** Quits: Colt (~Colt@user/colt) (Remote host closed the connection)
[05:26:30] <chazy> some get more than 1 in a row, some have to wait 89 pulls
[05:26:39] <__adrian> e.g., first thought would probably be like "if they guarantee a win after 100 tries, then they're just going to make me lose 100 times because it's cheaper than letting me maybe win three times."
[05:26:40] <chazy> that's the way it is
[05:27:04] *** Joins: Colt (~Colt@user/colt)
[05:27:17] <__adrian> the guarantee only casts doubt. it's BS designed to fool people into not suing you.
[05:27:22] <chazy> well, it's not like you're not allowed to share the results of the system, so it's just "luck"
[05:28:04] <__adrian> i don't see how one is related to the other
[05:28:12] <chazy> but i know what you mean, i get frustrated when i spend money on gacha games and most of the time is just a waste of money
[05:28:51] <chazy> i meant that for a given game, you can see how some users get lucky even though you don't
[05:28:57] <__adrian> k... had to go look up wth "gacha" is
[05:29:35] <chazy> yeah, i don't recommend you going that route unless you have self control lol
[05:30:23] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:29] <__adrian> not even self-control in my case... i just can't see past "yeah that's stacked"
[05:47:08] *** Joins: ferdna (~ferdna@user/ferdna)
[05:52:58] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[05:56:43] <chazy> so, uhm, does the order of the items in the array affect the result? https://gist.github.com/ChazyTheBest/7924ba4531c33f915e36d491eb28ebd5
[05:58:51] <chazy> in case i should order them by rarity
[06:00:01] *** Quits: JohnDoe2 (~johndoe2@2001:470:1f07:89::dead:bead) (Quit: bye)
[06:01:15] *** Joins: JohnDoe2 (~johndoe2@2001:470:1f07:89::dead:bead)
[06:26:17] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 240 seconds)
[06:38:32] *** Joins: Rockwood (~Rocky@user/rocky)
[07:00:14] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[07:02:42] *** Quits: chazy (~chazy@2a0c:5a84:d102:5200:1ac0:4dff:fe96:16ad) (Quit: WeeChat 3.3)
[07:03:22] <Rockwood> Xmas all
[07:04:07] <Rockwood> i am facing a error message first time at composer update of my project
[07:04:08] <Rockwood> Package swiftmailer/swiftmailer is abandoned, you should avoid using it. Use symfony/mailer instead
[07:14:27] <Blondie101010> the first thing to do when you get an error message is to READ it
[07:15:46] <Rockwood> yeah
[07:15:52] <Rockwood> another issue
[07:15:55] <Rockwood> PHP Parse error:  syntax error, unexpected character 0x1B, expecting end of file in /var/www/api.rockwood.test/artisan on line 54
[07:19:07] <Rockwood> i don't hows the code is changed in file
[07:19:13] <Rockwood> i correct it now
[07:19:34] <Rockwood> error solve
[07:19:40] <Rockwood> now another error
[07:19:56] <Rockwood> i touched after a while PHP code
[07:20:06] <Rockwood> so error comes
[07:20:08] <Rockwood> Class App\Model\Jail located in ./app/Models/Jail.php does not comply with psr-4 autoloading standard. Skipping.
[07:20:57] <Rockwood> looks fine ./app/Models/Jail.php and even namespace too
[07:23:24] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[07:27:43] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[07:52:03] *** Quits: Smeef (~deathonat@user/smeef) (Read error: Connection reset by peer)
[07:59:19] *** Quits: echoSMILE (uid504326@user/echosmile) (Quit: Connection closed for inactivity)
[08:00:37] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 240 seconds)
[08:08:55] <relipse> Merry Christmas
[08:20:11] *** Joins: Alex8532 (~Alex8532@user/alex8532)
[08:25:01] *** Parts: Alex8532 (~Alex8532@user/alex8532) ()
[08:31:35] <relipse> no. now it is Christmas
[08:31:39] <relipse> Merry Christmas
[08:31:50] <relipse> and if you don't celebrate Christmas then Happy Holidays
[08:37:17] *** Joins: Alex8532[m] (uid501196@user/alex8532)
[08:49:17] *** Joins: AsenMx (~AsenMx@user/asenmx)
[08:58:23] *** Joins: Rockwood (~Rocky@user/rocky)
[08:59:34] *** Joins: Rockwood_ (~Rocky@user/rocky)
[09:01:37] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 240 seconds)
[09:02:13] *** Joins: AsenMx (~AsenMx@user/asenmx)
[09:02:37] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 240 seconds)
[09:12:29] *** Joins: bandit_za (~bandit@192.145.144.178)
[09:15:26] *** Quits: Rockwood_ (~Rocky@user/rocky) (Quit: The Time is Over)
[09:37:37] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 240 seconds)
[10:18:39] *** Joins: fef (~thedawn@user/thedawn)
[10:39:14] *** Joins: guido (~guido@host-87-20-248-225.retail.telecomitalia.it)
[11:14:54] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[11:36:05] *** Joins: sambauer64 (~sambauer@84.232.209.233)
[11:36:09] <sambauer64> Hi. Merry Christmas to all. Is it possible to have PHP overloading my server? Because in two sepparate ocations I have run a code that does 'SUM(quantity*price) FROM products' and computer froze
[11:36:32] <sambauer64> there are about 500 products in there and doesn't seem much
[11:50:55] *** Quits: Alex8532[m] (uid501196@user/alex8532) (Quit: Connection closed for inactivity)
[12:17:44] *** Quits: CyberCr33p (~chris@bnc.cretaforce.gr) (Read error: Connection reset by peer)
[12:27:38] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 268 seconds)
[12:39:28] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[12:49:08] *** Quits: novns (~novns@user/novns) (Quit: ZNC 1.8.2 - https://znc.in)
[12:49:11] *** Joins: ge (~g@37.214.57.116)
[13:00:39] *** Joins: magla (~gelignite@55d48f64.access.ecotel.net)
[13:14:56] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:39:08] *** Quits: onichomp (~onichomp@2806:264:4404:8137:4879:515b:55e6:5a91) (Ping timeout: 252 seconds)
[13:46:48] *** Joins: onichomp (~onichomp@177.231.43.15)
[13:53:32] *** Joins: onichomp666 (~onichomp@177.231.43.15)
[13:54:57] *** Quits: onichomp (~onichomp@177.231.43.15) (Ping timeout: 240 seconds)
[13:58:05] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[14:31:31] *** Quits: relipse (sid16131@id-16131.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[14:44:31] *** Quits: sambauer64 (~sambauer@84.232.209.233) (Quit: leaving)
[15:04:59] *** Quits: shokohsc (~shokohsc@lfbn-idf2-1-630-171.w86-246.abo.wanadoo.fr) (Quit: The Lounge - https://thelounge.chat)
[15:08:18] *** Joins: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com)
[15:30:51] *** Joins: keypusher (keypusher@user/keypusher)
[15:33:03] *** Joins: shokohsc (~shokohsc@lfbn-idf2-1-630-171.w86-246.abo.wanadoo.fr)
[15:37:04] *** Quits: AsenMx (~AsenMx@user/asenmx) (Remote host closed the connection)
[15:39:30] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[15:39:42] *** Joins: de-facto (~de-facto@user/de-facto)
[15:51:37] *** Quits: bandit_za (~bandit@192.145.144.178) (Ping timeout: 240 seconds)
[15:52:17] *** Quits: guido (~guido@host-87-20-248-225.retail.telecomitalia.it) (Ping timeout: 240 seconds)
[15:54:27] *** Joins: guido (~guido@host-95-238-251-215.retail.telecomitalia.it)
[16:04:32] *** Quits: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com) (Ping timeout: 240 seconds)
[16:15:46] *** Joins: bandit_za (~bandit@192.145.144.178)
[16:18:08] *** Joins: hans (uid529825@id-529825.helmsley.irccloud.com)
[16:47:06] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[17:05:41] *** Quits: tercaL (~tercaL@user/tercal) (Quit: enter the Tekken!)
[17:14:43] *** Quits: bandit_za (~bandit@192.145.144.178) (Ping timeout: 256 seconds)
[17:18:55] *** Quits: de-facto (~de-facto@user/de-facto) (Quit: See you around. 💤)
[17:22:22] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[17:24:02] *** Quits: JohnDoe2 (~johndoe2@2001:470:1f07:89::dead:bead) (Quit: bye)
[17:25:13] *** Joins: JohnDoe2 (~johndoe2@2001:470:1f07:89::dead:bead)
[17:33:37] *** Quits: LuKaRo_ (~LuKaRo@p5dedaa53.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[17:36:26] *** Joins: DrowningElysium (uid190788@user/drowningelysium)
[17:49:29] *** Joins: LuKaRo (~LuKaRo@p5dedaa53.dip0.t-ipconnect.de)
[17:50:57] *** Quits: magla (~gelignite@55d48f64.access.ecotel.net) (Quit: Stay safe!)
[17:54:57] *** Quits: HvszrStykp (~X@81.171.62.82) (Ping timeout: 256 seconds)
[18:04:54] *** Joins: NakedKing (~NakedKing@user/nakedking)
[18:06:29] *** Joins: WishBoy (~WishBoy@user/wishboy)
[18:17:14] *** Joins: onichomp (~onichomp@177.231.43.15)
[18:18:57] *** Quits: onichomp666 (~onichomp@177.231.43.15) (Ping timeout: 240 seconds)
[18:29:25] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 240 seconds)
[18:37:36] *** Joins: velix (~velix@user/velix)
[18:38:06] <velix> Does someone know a library to directly deliver a mail into a mailserver?
[18:39:11] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[18:40:50] <TinoDidriksen> mail() does that, but IMAP can also put mails directly into folders if that's what you mean.
[18:41:14] <velix> TinoDidriksen: oh okay. I thought it needs an smtp. Thanks, I'll try.
[18:41:19] <velix> smtp or mta*
[18:41:52] <TinoDidriksen> Define mail server, though?
[18:42:42] <velix> I want to connect to the socket to the other side's mailserver and transmit a mail.
[18:42:53] <velix> I wrote this some years ago, it worked perfect, but I cannot find the code :D
[18:43:24] <TinoDidriksen> Sounds like you want an SMTP library.
[18:43:36] <TinoDidriksen> PHPMailer works nicely.
[18:43:57] <velix> PHPMailer doesn't allow direct submitting without MTA or extern SMTP
[18:45:52] <TinoDidriksen> So...you want an MTA in PHP? You can do that.
[18:46:34] <velix> TinoDidriksen: Yeah. I had this already, but I can't find my code anymore.
[18:46:37] <TinoDidriksen> But these days security is higher, so you risk getting a lot of rejected mails if you don't do it properly.
[18:47:05] <velix> TinoDidriksen: I know, I don't want to do mass stuff or spamming etc.
[18:47:20] <velix> but it seems like setting up a exim4 is faster than rewriting the code.
[18:47:39] <TinoDidriksen> Even personal mails need to pass SPF or DKIM or similar.
[18:48:22] <velix> yeah, that's no problem for me.
[18:48:27] <velix> SPF is set, PHPMailer can do DKIM.
[19:04:25] <AllenJB> Have you considered what happens if the destination mail server temporarily can't be contacted or rejects/defers mail (eg. greylisting) for any reason?
[19:05:43] <velix> AllenJB: That's no problem in my case. It's not system critical.
[19:06:00] <velix> AllenJB: But I've already started to set up exim4 and/or sendmail ;)
[19:06:09] <velix> Then this problem is also covered.
[19:06:21] <velix> I just thought, there's a "fire and forget" class/library.
[19:07:01] *** Joins: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com)
[19:08:44] *** Quits: JohnDoe2 (~johndoe2@2001:470:1f07:89::dead:bead) (Quit: bye)
[19:09:59] <AllenJB> MTAs are the fire and forget "library" =D
[19:10:13] *** Joins: JohnDoe2 (~johndoe2@2001:470:1f07:89::dead:bead)
[19:12:00] *** Quits: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com) (Quit: ThePhilgrim)
[19:12:19] *** Joins: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com)
[19:13:33] <velix> oooh, endgame on German TV.
[19:13:47] <velix> AllenJB: Actually, they also handle bouncing.
[19:13:52] <stenno> whats endgame?
[19:14:25] <velix> stenno: The second most successful movies of all times.
[19:14:44] <stenno> avengers: endgame ?
[19:14:46] <stenno> i see
[19:14:57] <stenno> isn't that just another superhero action movie
[19:15:12] <stenno> popularity does not make a statement about quality
[19:15:16] <velix> stenno: Then don't watch the new Spiderman. it might overwhelm your superhero amount.
[19:15:21] <stenno> or 'success' in that regard
[19:15:28] <stenno> i watched 'the watchmen' which was great
[19:15:47] <stenno> also the movie with the racoon, the first part was great
[19:16:34] <stenno> also 'the dark knight' was very good
[19:16:47] <stenno> and sin city
[19:17:05] <stenno> oh sorry this is #php, not #phpc
[19:17:10] <stenno> sorry for offtopic
[19:17:15] <velix> Right. And, a hint: You do NOT sound as you don't like superhero movies ;)
[19:33:45] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Remote host closed the connection)
[19:34:04] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[19:34:25] *** Joins: Rockwood (~Rocky@user/rocky)
[19:36:52] *** Quits: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com) (Quit: ThePhilgrim)
[19:37:08] *** Joins: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com)
[19:37:26] *** Quits: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com) (Client Quit)
[19:38:09] *** Joins: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com)
[19:38:31] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Ping timeout: 256 seconds)
[19:38:36] *** Quits: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com) (Client Quit)
[19:39:43] *** Joins: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com)
[19:39:57] *** Quits: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com) (Client Quit)
[19:41:54] *** Quits: JohnDoe2 (~johndoe2@2001:470:1f07:89::dead:bead) (Quit: bye)
[19:42:38] *** Joins: onichomp666 (~onichomp@2806:264:4404:81d9:604e:48fe:c10c:4320)
[19:43:05] *** Joins: JohnDoe2 (~johndoe2@2001:470:1f07:89::dead:bead)
[19:43:57] *** Quits: onichomp (~onichomp@177.231.43.15) (Ping timeout: 240 seconds)
[19:45:19] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[19:47:26] *** Quits: hans (uid529825@id-529825.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[19:51:05] *** Joins: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com)
[19:51:14] *** Quits: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com) (Client Quit)
[19:51:37] <Rockwood> o/
[19:52:19] *** Joins: Alex8532 (~Alex8532@user/alex8532)
[20:06:49] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Remote host closed the connection)
[20:07:08] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[20:08:26] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[20:08:38] *** Quits: Alex8532 (~Alex8532@user/alex8532) (Quit: Going offline, see ya! (www.adiirc.com))
[20:09:34] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[20:10:31] <BadAdviceCat> Happy decorate your pine tree day!
[20:11:23] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Ping timeout: 256 seconds)
[20:16:07] <Rockwood> lol
[20:16:32] <Rockwood> cheers bro happy everything
[20:24:12] *** Joins: chazy (~chazy@2a0c:5a84:d102:5200:1ac0:4dff:fe96:16ad)
[20:26:09] <chazy> hi, there's something weird going on, i have this array with user ids, and in a foreach i'm checking if the array being iterated, if each item has a user_id that's inside the array with user ids, if so, i populate another array, the problem is there are only 103 user ids in the array haystack, but the array being populated has a count of 104 items instead of 103, what's going on?
[20:26:17] *** Joins: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com)
[20:27:41] *** Quits: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com) (Client Quit)
[20:28:05] <NakedKing> chazy, did you check first and last elements for whats goin on there?
[20:31:19] <chazy> i am checking now
[20:32:56] <Blondie101010> don't explain the faulty code, show it
[20:33:08] *** Joins: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com)
[20:33:20] <chazy> this is the faulty code https://gist.github.com/ChazyTheBest/7924ba4531c33f915e36d491eb28ebd5
[20:33:22] <Blondie101010> I wonder if you're using foreach in there
[20:33:27] <chazy> i am
[20:35:03] <Blondie101010> yeah, your description in no way ressembles your code
[20:35:29] <chazy> well, $users_staking is an array with user_id as key, was that the difference?
[20:36:05] <chazy> i don't understand how is it possible for $list2 to have 104 elements if $users_staking only has 103
[20:36:19] <Blondie101010> you described it as if it was a plain list you were copying over and it definitely isn't, and your source of confusion
[20:36:42] <chazy> isn't the problem array_key_exists()?
[20:36:47] <__adrian> how is that related? you're not iterating $users_staking to build $list2. you're iterating $list.
[20:37:11] <chazy> yes, but the condition for filling up list2 is $users staking
[20:37:17] <__adrian> so?
[20:37:38] <chazy> the condition is failing
[20:37:42] <Blondie101010> chazy:  var_dump/var_export($list2)
[20:37:50] <__adrian> you're obviously iterating at least 104 times, which means there are at least 104 items in $list.
[20:38:08] <chazy> there are only 103 items inside $users_staking, it's impossible for $list2 to have more than 103, it should be =<103
[20:38:13] <Blondie101010> there are duplicates
[20:38:16] <__adrian> no. that's not correct.
[20:38:21] <Blondie101010> and I don't see the data
[20:38:46] <chazy> duplicate keys? $users_staking[$staking->user_id] = 0;
[20:38:49] <Blondie101010> look at your data
[20:39:08] <chazy> that's why i put user_id as key so there are no duplicates
[20:39:12] <NakedKing> chazy, check first and last iteration for whats wrong there
[20:39:12] <da_wunder> your `$list` is having duplicates
[20:39:13] <__adrian> $a = [1]; $b = [1,1]; $c = []; foreach ($b as $n) { if (in_array($n, $a)) { $c[] = $n; } }
[20:39:27] <__adrian> checking $a prevents nothing
[20:39:27] <Blondie101010> or to get further help, include it in a test case WE can use
[20:39:49] <__adrian> *count of $a determines/limits nothing
[20:40:10] <__adrian> also curious why you dropped array_udiff()
[20:40:30] <chazy> what i don't understand is how it is possible for array_key_exists to evalute true more than 103 times if there are only 103 ids in the haystack
[20:40:42] <da_wunder> two totally different lists $stakings and $list - your example doesn't show _how_ those are related to each other
[20:40:42] <chazy> i'm still using array_udiff, but elsewhere
[20:40:48] <__adrian> because you're calling array_key_exists() > 103 times
[20:41:01] <Blondie101010> fore sure
[20:41:07] <Blondie101010> *for sure
[20:41:09] <__adrian> how many items are in the haystack doesn't limit anything
[20:41:16] <chazy> oh ok so if there are duplicates in $list, ok
[20:41:27] <Blondie101010> obviously
[20:41:58] <Blondie101010> as I said, the problem is not like you described it initially at all...  you apparently don't know your data or structure
[20:42:33] <chazy> i just didn't take into account that there could be duplicates in $list
[20:42:44] <Blondie101010> ok
[20:42:58] <__adrian> btw you can index lists with array_column()
[20:43:00] <Blondie101010> now I can't know what is intended
[20:44:00] <Blondie101010> looking at that code gives me shivers as I'm thinking of users that might complain
[20:44:56] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 245 seconds)
[20:44:56] *** Joins: Nekomander (~BadAdvice@user/badadvicecat)
[20:45:00] <__adrian> also i don't see how this is different than what you explained last night (i mean, maybe it's not literally the same feature, but it seems like the same logic)
[20:45:06] <chazy> this code is only to get a list and running it elsewhere, because i'm working with the code of someone who was working in the project and suddenly left, leaving me with his bs
[20:45:11] <__adrian> s/logic/goal/
[20:46:15] <Blondie101010> chazy:  if you just want to make a unique user list, do that
[20:46:31] <__adrian> ^ array_column()
[20:46:59] <Blondie101010> well not sure...  you may know their specs more than me
[20:47:05] <chazy> but the user_id is a property, there are 2 objects with the same user_id in the array
[20:47:15] <Blondie101010> since relevant data comes from properties, it could be anything
[20:47:24] <__adrian> so is user_id supposed to be unique?
[20:47:54] <__adrian> if so, then those two objects are logically the same object. do the have the same properties? sounds like an upstream bug.
[20:48:08] <da_wunder> ^
[20:48:42] <Blondie101010> note: you can check object instances as: if ($obj1 === $obj2)
[20:48:56] <chazy> no, now that i'm thinking it was possible for some users to be 2 times in that list
[20:49:02] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[20:49:15] * Blondie101010 nods
[20:49:31] <da_wunder> so if you want unique users fix that first
[20:49:39] <Blondie101010> and you built a list seemingly to make it unique, but putting the unique condition on the wrong array
[20:50:29] <__adrian> "$obj1 === $obj2"  // this would answer if they're _literally_ the same object (in code), not if they're logically the same object (represent the same conceptual entity)
[20:50:43] <chazy> i was wrong, user_id can't be unique
[20:50:59] <Blondie101010> ugh
[20:51:02] <chazy> it's just that there was only 1 case where a user is 2 times
[20:51:02] <__adrian> that seems reallyweird but yeah... ok, then you can't filter on that
[20:51:12] <Blondie101010> oh well, you seem to be learning your design
[20:51:16] <chazy> because they decided to be 2 times in that list
[20:51:28] <__adrian> is that significant/sensible?
[20:51:31] <__adrian> or is it a bug?
[20:51:38] <chazy> it's not my design, i'm fixing someone elses mistake
[20:51:43] <__adrian> question stands
[20:51:49] <da_wunder> ^
[20:51:54] <Blondie101010> it looks like an investment thing, so yeah people can invest more than once :/
[20:52:17] <__adrian> if that ^ is the case, then you shouldn't be dealing with "users" at all
[20:52:28] <__adrian> you should be looking at "investments" or whatever
[20:52:39] <chazy> the previous dev made the choice to give users 2 choices, to withdraw or to stake, and some users had 2 purchases, so seems like one of them choose to stake their 2 purchases, that's the only explanation
[20:52:50] <__adrian> k
[20:53:07] <chazy> seems like all is good
[20:53:08] <__adrian> is that sensible/valid (to stake more than one purchase)?
[20:53:14] <chazy> yes
[20:53:25] <__adrian> then look at "stakes," NOT at "users"
[20:55:35] <Rockwood> __adrian, hi how are you respected sir?
[20:56:11] <__adrian> https://getyarn.io/yarn-clip/3696bea4-8dae-4a52-bd32-e11175e1a542
[21:08:52] *** Joins: de-facto (~de-facto@user/de-facto)
[21:32:54] *** Joins: sambauer64 (~sambauer@84.232.209.233)
[21:47:42] <sambauer64> when I added a 3rd argument to my function join_product_table( $productCategorie, $productLocation, $searchname
[21:48:34] <sambauer64> I get SQL errors as first and second are not being passed anymore. I can see the sql query and clearly missing
[21:52:20] <Blondie101010> so fix the  join_product_table() function
[21:58:53] <Rockwood> __adrian, hi how are you sir?
[21:58:59] <AllenJB> sambauer64: If you want us to help, you'll need to show us the current code (of join_product_table) and the full error message
[21:59:52] <Rockwood> AllenJB, why don't rel question like you ve to think
[22:00:35] <Rockwood> AllenJB, what you real question in life
[22:00:53] <AllenJB> Rockwood: Go home, you're drunk.
[22:01:17] <Rockwood> AllenJB, wht?
[22:03:06] <sambauer64> AllenJB: https://pastebin.com/DjbQTG1b here is recent code. I managed to get the 'selected' to the dropdowns but still using bad sql queries...
[22:03:47] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[22:05:19] *** Joins: Rockwood (~Rocky@user/rocky)
[22:05:28] <Blondie101010> sambauer64:  your error message indicates that you pass a single parameter to a function that expects 3
[22:05:47] <Blondie101010> that doesn't even match up to your question which mentioned going from 2 to 3 parameters
[22:06:14] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[22:06:25] <AllenJB> sambauer64: I believe your problem is on line 48 of your pastebin. You're passing all the $_POST values as a single argument (and as a boolean). There should be commas between each argument. See again my previous example I gave you (lines 5-8): https://gist.github.com/AllenJB/7e86ca12bf8fe81b7c60d33b985fe603
[22:08:27] <sambauer64> AllenJB: thank you for the explanation. yes, it works now. I had no idea I'm passing all as a single argument
[22:08:37] *** Joins: Rockwood_ (~Rocky@user/rocky)
[22:10:20] <sambauer64> next, how should I make a live search, where typing a letter or more will search automatically? I used AJAX for that but now I am looking for a simpler alternative
[22:10:53] <Blondie101010> "simpler" is definitely a bad criteria
[22:11:14] <sambauer64> Blondie101010: what would be a better criteria then?
[22:11:29] <Blondie101010> the first alternative that comes to mind involves having the full list in the front end, which is NOT guaranteed to be better, depending on the data
[22:11:37] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 268 seconds)
[22:13:01] <sambauer64> depending on the data as it would not be ok to expose it to the user?
[22:13:26] *** Joins: novns (~novns@user/novns)
[22:14:10] <Blondie101010> or to need to have the full DB in the front end
[22:14:47] <Blondie101010> you made it sound like you have a working solution, so if that works, there's nothing to fix
[22:19:44] *** Joins: stenno (~stenno@user/stenno)
[22:19:58] <sambauer64> Blondie101010: i already ditched the AJAX calls
[22:20:14] <sambauer64> i was using them for the dropdown values
[22:21:02] <Blondie101010> well frankly, the code I saw looks very disorganized, so I can imagine that it was probably very messy
[22:24:52] <Rockwood_> Blondie101010, sorry
[22:26:23] *** Quits: novns (~novns@user/novns) (Quit: ZNC - https://znc.in)
[22:27:14] *** Joins: novns (~novns@user/novns)
[22:27:28] *** Joins: MrBlue (~MrBlue@89.47.234.188)
[22:28:16] *** Quits: NakedKing (~NakedKing@user/nakedking) (Quit: Leaving)
[22:28:24] <sambauer64> Blondie101010: even messier than you think
[22:28:50] <Blondie101010> unlikely :)
[22:31:48] *** Quits: Rockwood_ (~Rocky@user/rocky) (Quit: The Time is Over)
[22:33:27] <sambauer64> Blondie101010: second dropdown won't pass it's value to the sql query anymore. could you please have a look over my code?
[22:33:38] *** Parts: velix (~velix@user/velix) (Leaving)
[22:34:14] <sambauer64> i think this one is not being passed AND location_id=$productLocation"
[22:34:57] <Blondie101010> use traces
[22:37:35] <sambauer64> how
[22:37:54] <Blondie101010> echo "variableX: $variableX"
[22:38:10] <Blondie101010> echo "condition A is true"
[22:38:39] *** Joins: MrBlue_ (~MrBlue@5.181.233.5)
[22:38:59] <Nekomander> Debugging code involves verifying that EACH variable contains the correct value, and also the condition valuates correctly. For example:
[22:39:38] <Nekomander> var_dump($variableX); and var_dump($variableX === 'Some Other value goes here');
[22:39:55] <Nekomander> evaluates*
[22:40:16] <Nekomander> Code should function correctly as intended, not by accident.
[22:41:01] *** Parts: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com) ()
[22:41:07] *** Joins: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com)
[22:41:13] *** Quits: MrBlue (~MrBlue@89.47.234.188) (Ping timeout: 268 seconds)
[22:42:15] <chazy> when i nest 2 foreach, does it matter if i put an array in the first or second foreach?
[22:42:22] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 260 seconds)
[22:42:28] <TinoDidriksen> No
[22:42:50] <chazy> what's the difference?
[22:43:19] <chazy> if i need to compare the same property?
[22:43:22] <Blondie101010> you did not show code
[22:43:31] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[22:43:39] <Blondie101010> we're guessing on it
[22:43:57] <BadAdviceCat> sambauer64, Debugging code involves verifying that EACH variable contains the correct value, and also the condition evaluates correctly. For example: var_dump($variableX); and var_dump($variableX === 'Some Other value goes here');
[22:43:58] <Togra> I'm not sure what the issue is, just keep track of both foreach's as you work through it and you should be set- obviously this can often be harder than it sounds
[22:44:01] <BadAdviceCat> Code should function correctly as intended, not by accident.
[22:44:26] <chazy> https://gist.github.com/ChazyTheBest/360351fcf51bfba5ab2ac163d48852d9
[22:45:01] *** Quits: Nekomander (~BadAdvice@user/badadvicecat) (Ping timeout: 240 seconds)
[22:45:17] <chazy> is there a difference?
[22:46:24] <Blondie101010> that depends on your data
[22:46:26] *** Quits: novns (~novns@user/novns) (Quit: ZNC - https://znc.in)
[22:46:33] <Blondie101010> look at your data!
[22:46:55] <chazy> same data for both cases
[22:46:56] <Blondie101010> the top level loop will drive the process
[22:47:01] <Blondie101010> you don't get it!
[22:47:28] <Blondie101010> if $payments has records that $result doesn't or the other way around, there will be differences
[22:47:57] <chazy> are you 100% sure?
[22:48:03] *** Joins: novns (~novns@user/novns)
[22:48:06] <Blondie101010> just try it
[22:48:15] <Blondie101010> do both give the same result or not?
[22:48:29] <Blondie101010> I almost hope they don't to make your brain light go on
[22:48:36] <BadAdviceCat> chazy, you can use var_dump() to test the differences of each result.
[22:48:40] *** Joins: MrBlue__ (~MrBlue@5.181.233.20)
[22:48:41] <chazy> a quick test would be to count the # of elements?
[22:48:49] <chazy> or that won't change?
[22:48:57] <Blondie101010> try it
[22:49:04] <TinoDidriksen> # shouldn't change. Order might.
[22:49:13] <Blondie101010> that too
[22:49:18] <Blondie101010> but the contents could change
[22:49:28] <TinoDidriksen> Not in this case.
[22:50:48] <TinoDidriksen> Hash implies a 1:1 correlation. If it's not 1:1, then sure things could change.
[22:50:57] *** Quits: MrBlue_ (~MrBlue@5.181.233.5) (Ping timeout: 240 seconds)
[22:50:59] <Blondie101010> how do you know that all $payments refer to every $result?
[22:51:03] <Blondie101010> and vice versa
[22:51:16] <BadAdviceCat> TinoDidriksen is a psychic.
[22:51:23] <TinoDidriksen> There doesn't need to be one for each.
[22:51:34] <chazy> hashes are globally unique
[22:51:40] <Blondie101010> that is NOT the point
[22:51:58] <BadAdviceCat> :P
[22:52:02] <Blondie101010> do you understand the difference between a left and right join?
[22:52:09] <Blondie101010> that is exactly the difference here!
[22:52:20] <TinoDidriksen> This is an inner join.
[22:52:26] <Blondie101010> no
[22:52:34] <Blondie101010> but damn we need some real data!
[22:52:50] <chazy> ok, the point is to verify that the payments (db) are valid, by checking with an api (json result)
[22:52:50] <TinoDidriksen> Hell, it's even a natural join.
[22:53:11] <Blondie101010> it could be a left vs middle join though
[22:53:20] <Blondie101010> we don't know
[22:53:50] *** MrBlue__ is now known as MrBlue
[22:54:08] <chazy> this is to verify the contents of the table, it should be inner join
[22:54:09] <Blondie101010> his main problem is that he tries to magically guess the output before looking at data
[22:54:34] <TinoDidriksen> I do question why it's being done in PHP, though. And strtolower() should not be necessary - normalize in the DB so that natural join will just work.
[22:54:52] <Blondie101010> definitely 2 good points
[22:55:07] <BadAdviceCat> Speaking of "real" data, https://generatedata.com/generator I love this site.
[22:55:12] <chazy> yeah well, i'm just trying to fix this mess that was thrown at me
[22:55:31] <Blondie101010> chazy:  how you got in the situaton is NOT important
[22:55:39] <Blondie101010> now you need to learn how it operates
[22:55:48] <Blondie101010> read the data and follow it with the code you see
[22:56:54] <BadAdviceCat> (I've heard that using var_dump() is too overpowered for problem solving and it should get a nerf.)
[22:57:51] <Blondie101010> I only var_dump() when it's required...  otherwise I just echo until then
[22:59:41] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Remote host closed the connection)
[23:00:01] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[23:01:15] *** justSleigh is now known as justIrresolute
[23:01:22] <BadAdviceCat> Yeah, hashes of all things should've been normalized from the get-go.
[23:04:13] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Ping timeout: 256 seconds)
[23:09:00] *** Joins: stenno (~stenno@user/stenno)
[23:15:57] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[23:22:38] *** Joins: stenno (~stenno@user/stenno)
[23:27:17] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[23:30:59] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 256 seconds)
[23:31:45] *** Joins: ms49434 (~ms49434@user/ms49434)
[23:32:33] *** Joins: magla (~gelignite@55d48f64.access.ecotel.net)
[23:49:45] *** Joins: hans (uid529825@id-529825.helmsley.irccloud.com)
[23:52:32] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Quit: Life without danger is a waste of oxygen)
