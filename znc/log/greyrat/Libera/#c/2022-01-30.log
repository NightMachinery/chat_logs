[00:00:17] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[00:00:52] *** Joins: HaMsTeRs (~Thunderbi@210.3.213.4)
[00:00:56] <G001> It's not for transmitting, it's the in-memory representation (embedded, very little memory available and this is a requirement)
[00:01:32] <G001> Fortunately speed is not of the essence here, but it would be nice if there's a solution that's reasonably fast
[00:01:33] *** Quits: Lyude (~lyudess@pool-96-230-100-15.bstnma.fios.verizon.net) (Quit: WeeChat 3.3)
[00:02:17] *** Quits: bnchs___ (~bnchs@105.157.163.28) (Ping timeout: 240 seconds)
[00:02:19] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[00:02:35] <G001> ##c on freenode is pretty much dead right?
[00:02:53] *** Joins: Lyude (~lyudess@pool-96-230-100-15.bstnma.fios.verizon.net)
[00:04:54] <pragma-> "freenode" is a hostile network
[00:05:18] <G001> Yeah I heard :)
[00:05:25] <sham1> Anathema
[00:05:47] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[00:05:50] <G001> weird if nobody has written a packed-int array library, gotta go hunt
[00:05:50] <Rounin> WHo knows what's happening there at this point... The last I head was that everyone's usernames and passwords were deleted
[00:06:01] <G001> oof
[00:06:23] <sham1> G001: how constrained a device are you working with, may I ask
[00:06:56] <G001> very constrained, I don't have exact specs yet but it's too much data and too little memory haha
[00:07:20] <sham1> I'd probably try to have the data processed in some less constrained environment if at all possible
[00:07:30] <sham1> Like connecting to some external device for actual computation
[00:07:44] <sham1> Although just doing bitshifts and such will work for you
[00:08:04] <G001> yeah I don't think there's a way around this packed array thing. I'll figure something out.
[00:08:06] <Rounin> Is it a large collection of mirrors located in space?
[00:08:06] <fizzie> Another consideration is whether your width is constant or not. Because it's pretty straight-forward to write code to pack, e.g., 8 3-bit numbers into 3 8-bit bytes, in the logical layout of [00011122] [23334445] [55666777]. You just do (i>>3)*3 to find the offset of the first of the three bytes, and switch on (i&7) to handle the 8 cases (2 and 5 being more code than the others).
[00:08:40] <G001> There will be a handful of arrays of integeres, ranging from 3 to 19 bits
[00:08:59] <fizzie> But doing it for any width generally while still keeping it simple probably equals having the code do a bit-by-bit thing.
[00:09:09] <G001> right
[00:09:15] *** Joins: elves-upstate (~elves-ups@129-2-180-39.wireless.umd.edu)
[00:11:58] *** Joins: cust (amaama@2607:f2c0:f00f:2500::3)
[00:12:38] *** Quits: aradesh (~aradesh@user/aradesh) (Read error: Connection reset by peer)
[00:14:46] *** Joins: aradesh (~aradesh@user/aradesh)
[00:15:24] <G001> sham1 about efficiency, there's also the question of cache. I assume the more complex (slow) instructions could be offset by the fact that less memory is touched? IOW, densely packed seems like it should be more cache friendly. Just conjecture :)
[00:15:53] <sham1> Well one also needs to keep in mind the instruction cache
[00:16:00] <sham1> It's hard to say however just with this
[00:17:30] <G001> Good point
[00:19:12] *** Quits: joilerv (~joilerv@135.129.250.144) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:19:51] *** Quits: v8IbXNTl (~v8IbXNTl@host-204-118-069-229.dhcp.fewpb.net) (Quit: v8IbXNTl)
[00:23:05] *** Quits: elves-upstate (~elves-ups@129-2-180-39.wireless.umd.edu) (Remote host closed the connection)
[00:23:22] *** Joins: elves-upstate (~elves-ups@129-2-180-39.wireless.umd.edu)
[00:24:19] *** Quits: elves-upstate (~elves-ups@129-2-180-39.wireless.umd.edu) (Remote host closed the connection)
[00:27:41] *** Quits: justGhost (~justache@user/justache) (Remote host closed the connection)
[00:27:53] *** Joins: alioui (~medeva293@197.244.235.231)
[00:28:13] <G001> Find some promising code I can adapt. Should be no endian issues here right? https://bpa.st/MKGA
[00:28:21] *** Joins: justGhost (~justache@user/justache)
[00:28:41] <G001> Keeping in mind that the data is in-memory only, never transmitted between different archs or anything
[00:33:00] *** Quits: magla (~gelignite@55d45b98.access.ecotel.net) (Read error: Connection reset by peer)
[00:33:02] *** Joins: geli (~gelignite@55d45b98.access.ecotel.net)
[00:33:34] *** Joins: JarbonFeh (~JarbonFeh@41.227.33.185)
[00:33:37] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[00:34:06] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 250 seconds)
[00:36:08] *** Quits: slidercrank (~slidercra@user/slidercrank) (Read error: Connection reset by peer)
[00:36:15] *** Quits: JarbonFeh (~JarbonFeh@41.227.33.185) (Client Quit)
[00:36:30] *** Joins: JarbonFeh (~JarbonFeh@41.227.33.185)
[00:39:02] *** Quits: alioui (~medeva293@197.244.235.231) (Ping timeout: 260 seconds)
[00:39:25] *** Joins: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net)
[00:41:39] *** Joins: pert (~pert@fsf/member/pert)
[00:42:57] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[00:43:43] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:b145:6efe:44b7:516c)
[00:44:00] *** Joins: bnchs___ (~bnchs@105.155.72.121)
[00:46:36] *** Quits: bnchs__ (~bnchs@41.143.76.120) (Ping timeout: 245 seconds)
[00:47:33] <sebag> My libresolv.so is missing function res_query() so I cannot build GLib2. What can be the cause? From where to get a better library or some extension lib to patch the gap? My OS is PCLinuxOS
[00:51:38] *** Quits: zer0bitz (~zer0bitz@2001:2003:f444:a000:f8f2:a6ee:f8f:27a0) (Ping timeout: 260 seconds)
[00:53:17] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 240 seconds)
[00:56:56] *** Joins: pucara (~i@host14.181-1-101.telecom.net.ar)
[00:57:13] *** Joins: slidercrank (~slidercra@user/slidercrank)
[00:57:53] <nitrix> The issue was fixed 12 years ago. https://trac.macports.org/ticket/20301
[00:57:55] <candide> Title of nitrix's link: #20301 (glib2-devel 2.21.3: build fails with link error (needs -lresolv)) – MacPorts
[00:59:26] <nitrix> I'm afraid you'll need a time machine.
[01:00:31] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[01:00:57] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 240 seconds)
[01:01:38] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[01:01:43] <nitrix> Jokes asides, use your search engine, look on bug trackers, git histories, figure out what went wrong.
[01:02:23] *** Joins: skipper (~whatsupbo@user/scobydoo)
[01:02:35] *** Quits: bnchs___ (~bnchs@105.155.72.121) (Remote host closed the connection)
[01:03:01] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[01:06:49] <nomagno> Is a cast from unsigned to signed int guaranteed to be safe, if unsigned_var >= 0?
[01:06:50] *** Joins: auk (auk@gateway/vpn/protonvpn/auk)
[01:07:17] <sham1> Well it's more like 0 <= unsigned_var <= INT_MAX
[01:07:18] <nomagno> Well, 'safe'... defined
[01:07:29] <sham1> So you need to keep that in mind
[01:07:52] <sham1> And an unsigned_var is >= 0 by definition
[01:07:58] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 260 seconds)
[01:08:17] <nomagno> Well, the opposite actually
[01:08:18] <nomagno> cast from signed to unsigned
[01:08:30] <nomagno> if signed_var >= 0
[01:08:32] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[01:08:39] <nomagno> I got it backwards
[01:08:41] <fizzie> That's *always* safe-as-in-defined.
[01:08:52] <fizzie> It may not be safe-as-in-what-you-want, but it's defined.
[01:09:06] *** Joins: seninha (~seninha@user/seninha)
[01:09:33] <nomagno> well, is there any situation where (signed)2 would give something other than two?
[01:09:56] <fizzie> Now you're back to converting *to* a signed type.
[01:10:47] <fizzie> In any case, when converting between integer types (no matter their signedness), if the value can be represented by the new type, it is unchanged (C11 6.3.1.3p1).
[01:11:09] <G001> what's the C trick to set the N least significant bits to 1 ?
[01:11:42] <sham1> val | ((1 << N) - 1)
[01:11:54] <sham1> Not really a C trick as such, but it works
[01:11:55] <fizzie> As long as it doesn't need to work for the full width of the type.
[01:12:27] <G001> nice
[01:12:48] <fizzie> There's easy expressions that work for 0..N-1 or 1..N, but it's hard to find an elegant way that'd work for 0..N. Fortunately often you can rule out either 0 or N as a possibility.
[01:13:25] <G001> hm, it does need to work on the full width, but 0 is not a possibility here. I guess I can special-case N.
[01:13:58] <sham1> Are you working with bytes
[01:14:03] <sham1> Like packing and unpacking with bytes
[01:14:29] <G001> yeah
[01:14:52] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[01:15:25] <G001> I'm want to get this to work for N bits instead of hard coding to 14 bits haha: https://bpa.st/MKGA
[01:15:43] <G001> So I need to compute the mask rather than use 0x3FFF
[01:15:56] <sham1> (1 << N) - 1
[01:16:05] <sham1> That's the formula for the mask. It was also used above
[01:16:18] <fizzie> Which, again, does not work if N equals the width of the type.
[01:16:25] <G001> right, i need that
[01:16:40] <sham1> fizzie: for a byte?
[01:16:41] <fizzie> (Well, is not guaranteed to work. It might.)
[01:16:53] <sham1> ,cc (1 << 8) - 1
[01:16:56] <candide> sham1: no output: (1 << 8) - 1 = 255
[01:17:04] <G001> to be clear N can be larger than 8
[01:17:29] <sham1> Well sure, but since you're working in bytes, you need to do the subtractions when (un)packing
[01:17:41] <sham1> So you split your N bits across your bytes
[01:17:51] <G001> see the link for the approach I found
[01:18:03] <G001> all I need is to inject that mask. I'll play around with it.
[01:19:12] <fizzie> If your maximum width is 16, you can of course just use a larger integer type when making the mask.
[01:19:25] *** Quits: jx0 (~jx0@199.229.250.145) (Quit: poof!)
[01:19:31] <G001> maximum is 19
[01:19:49] <G001> I have to change the code a bit to handle that
[01:20:01] <G001> so 32 bit mask then
[01:20:03] <fizzie> Yeah, was going to say, uint16_t isn't big enough for that.
[01:20:08] <G001> indeed
[01:20:32] <fizzie> For a 32-bit mask with a maximum width of 19, the ((uint32_t) 1 << N) - 1 thing is fine.
[01:21:34] <G001> excellent, thanks guys
[01:21:46] *** Quits: Trashlord (~trash@user/trashlord) (Ping timeout: 250 seconds)
[01:22:26] <pragma-> ,bithacks
[01:22:26] <candide> bithacks is http://graphics.stanford.edu/~seander/bithacks.html
[01:22:36] *** Quits: alch (~alch@151.38.56.177) (Ping timeout: 256 seconds)
[01:24:33] *** Joins: alch (~alch@pa-18-187-10.service.infuturo.it)
[01:24:52] <fizzie> It's definitely the simplest one. `uint32_t mask = (uint32_t) -1 >> (32-N)` is an alternative that works for values of N from 1 to 32 but not 0.
[01:25:02] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[01:25:04] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Remote host closed the connection)
[01:25:39] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[01:26:31] <sham1> I find it interesting that this doesn't have an instruction in the AMD64 ISA: https://godbolt.org/z/7r5fjese3
[01:26:40] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:b145:6efe:44b7:516c) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:26:42] <sham1> Or at least, clang isn't finding it
[01:27:14] *** Joins: Trashlord (~trash@user/trashlord)
[01:27:24] *** Quits: j-james (~apropos@dhcp-206-87-158-226.ubcsecure.wireless.ubc.ca) (Ping timeout: 250 seconds)
[01:27:32] *** Joins: reset (~reset@user/reset)
[01:28:06] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[01:28:48] *** Joins: j-james (~apropos@dhcp-206-87-158-226.ubcsecure.wireless.ubc.ca)
[01:29:45] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[01:29:57] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[01:33:07] *** Joins: Oddity (~Oddity@user/oddity)
[01:33:45] <fizzie> There's an "find the most significant set bit" instruction (bsr, lzcnt; available in GCC/Clang as __builtin_clz) that that operation could be based on, though it still needs some extra fiddling after.
[01:36:37] <sham1> Well I suppose that clang and gcc think this is faster than doing essentially (UINT32_C(1) << (__builtin_clz(v) + 1)), or maybe some safety things
[01:37:17] *** Quits: diophantoz (~diophanto@user/diophantoz) (Ping timeout: 240 seconds)
[01:39:04] *** Joins: inlight (~thomas@157.42.234.143)
[01:39:04] *** Quits: inlight (~thomas@157.42.234.143) (Changing host)
[01:39:04] *** Joins: inlight (~thomas@user/inlight)
[01:40:52] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[01:45:17] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[01:45:49] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[01:46:27] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[01:46:43] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[01:47:25] *** Joins: ncrowl (~ncrowl@c-fda770d5.022-170-6c756e3.cust.ownit.se)
[01:47:59] *** Quits: ncrowl (~ncrowl@c-fda770d5.022-170-6c756e3.cust.ownit.se) (Client Quit)
[01:49:52] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[01:52:03] *** Joins: ncrowl (~ncrowl@c-fda770d5.022-170-6c756e3.cust.ownit.se)
[01:52:14] *** Quits: Filystyn (~piotr@user/filystyn) (Quit: Lost terminal)
[01:52:35] <nightstrike> is strlen() defined if the input string is a null pointer?
[01:52:37] *** Quits: JarbonFeh (~JarbonFeh@41.227.33.185) (Ping timeout: 240 seconds)
[01:53:13] *** Quits: HaMsTeRs (~Thunderbi@210.3.213.4) (Quit: HaMsTeRs)
[01:53:13] <nightstrike> nvm, " The behavior is undefined if str is not a pointer to a null-terminated byte string."  found it on cppreference, not in the man pages
[01:54:31] *** Quits: inlight (~thomas@user/inlight) (Quit: leaving)
[01:54:33] <sham1> I would imagine that a "common" behaviour for libcs would be to just make it return 0. Might as well
[01:54:47] <sham1> But yeah, don't rely on that being the case ofc
[01:55:31] *** Joins: JarbonFeh (~JarbonFeh@41.227.33.185)
[01:55:42] *** Quits: JarbonFeh (~JarbonFeh@41.227.33.185) (Client Quit)
[01:56:16] <nightstrike> optimization might screw with that
[01:56:25] <sham1> Although at least musl doesn't
[01:56:36] <sham1> In fact, I'd say that musl is disappointingly complicated in terms of the code
[01:56:38] <sham1> https://git.musl-libc.org/cgit/musl/tree/src/string/strlen.c
[01:56:39] <nightstrike> like how when glibc changed memcpy to copy in reverse, and now restrict started to matter, breaking 547835794387548953 packages everywhere
[01:57:38] <sham1> And glibc of course does horrible things: https://sourceware.org/git/?p=glibc.git;a=blob;f=string/strlen.c;h=0b8aefb81281a7a020351864ab21ddbcfe0f3ebb;hb=HEAD
[01:57:49] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[01:59:42] <fizzie> It's pretty much the same thing as musl's __GNUC__ option, except without the unrolled loop for finding which byte was actually zero.
[01:59:58] <nightstrike> sham1: I'm curious is fancy code like that in glibc strlen is still more efficient today now that compilers are awesome
[02:00:48] <fizzie> In particular, the `ONES` and `HIGHS` macros in the musl code are the equivalents of glibc's `lomagic` and `himagic`, respectively, except using a fancy size-agnostic construction rather than glibc's fixed 32-or-64-bits thing.
[02:00:49] <nightstrike> as opposed to just for (...) if c[i] == 0....   or whatever simple 3 liner that would be easily vectorized or something
[02:00:51] <sham1> I mean that code isn't even used on glibc for example, since they use this instead. Well, on AMD64 anyway, other instruction have similarly cryptic stuff going on: https://sourceware.org/git/?p=glibc.git;a=blob;f=sysdeps/x86_64/multiarch/strlen-vec.S;h=42b6124dfddae28ddf1a4a8d53a54b1dd75fc4e0;hb=HEAD
[02:01:55] <nightstrike> interesting
[02:02:07] *** Quits: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740) (Remote host closed the connection)
[02:02:53] *** Joins: Techcable (~Techcable@168.235.93.147)
[02:02:56] <sham1> But yeah, if we look at what `size_t strlen(const char *s) { const char *a = s; for (; *s; ++s); return s - a;}` gives with nice optimisation: https://godbolt.org/z/zdPTjqYPP
[02:02:58] *** Joins: p0g0 (~p0g0@23.252.182.13)
[02:03:47] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[02:03:50] <sham1> And adding the NULL check doesn't make it that much worse
[02:04:15] <sham1> It just takes a fast path
[02:04:57] *** Quits: p0g0_ (~p0g0@23.252.179.5) (Ping timeout: 240 seconds)
[02:04:58] <nightstrike> well, it's not vectorize
[02:05:00] *** Joins: ic3blx_ (~ic3blx___@87.116.178.2)
[02:05:00] *** Quits: ic3blx_ (~ic3blx___@87.116.178.2) (Changing host)
[02:05:00] *** Joins: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740)
[02:05:04] <nightstrike> but it's terse
[02:05:16] <nightstrike> and I bet the cpu instruction predictor would handle it very well
[02:05:33] <nightstrike> the glibc version tries to use SSE to make it faster
[02:05:43] <sham1> Yeah
[02:05:44] *** Quits: derpadmin (~Anonymous@homebase.200013.net) (Quit: Lost terminal)
[02:06:15] <nightstrike> that's always the hard tradeoff. I's not a matter of just saying "count up the cycles of each instruction" to see if it's faster
[02:06:17] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[02:06:32] <nightstrike> prefetching is mindbogglingly effective
[02:06:37] <sham1> But yeah, this should be very nicely branch predicted
[02:07:08] <nightstrike> isn't there a website that benchmarks code snippets?
[02:07:12] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[02:07:26] <nightstrike> like godbolt or ideone or cppsh or whatever, but with timing tests
[02:10:10] *** Joins: joilerv (~joilerv@135.129.250.144)
[02:10:26] *** Joins: strajder (~strajder@user/strajder)
[02:12:20] <G001> quick-bench maybe
[02:12:54] <nitrix> nightstrike, See C11 7.1.4p1 (Use of library functions), "Each of the following statements applies unless explicitly stated [...]: If an argument to a function has an invalid value [...] a null pointer [...] the behavior is undefined."
[02:12:54] <nightstrike> looks like that's c++ only
[02:13:05] <nightstrike> nitrix: thanks
[02:13:05] *** Joins: simpl_e (~user@user/simpl-e/x-8589812)
[02:14:59] *** Joins: Guest17 (~Guest17@2601:196:8702:2380:c94e:41b8:7f0e:a352)
[02:16:10] *** Quits: Guest17 (~Guest17@2601:196:8702:2380:c94e:41b8:7f0e:a352) (Client Quit)
[02:17:06] *** Quits: joilerv (~joilerv@135.129.250.144) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:17:31] *** Joins: joilerv (~joilerv@135.129.250.144)
[02:17:45] *** Quits: joilerv (~joilerv@135.129.250.144) (Client Quit)
[02:20:14] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[02:22:41] *** Joins: alioui (~medeva293@102.158.69.166)
[02:24:01] *** Joins: elves-upstate (~elves-ups@129-2-180-39.wireless.umd.edu)
[02:26:14] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[02:31:11] *** Quits: NEYi (~NEYi@109.251.216.38) (Remote host closed the connection)
[02:31:36] *** Joins: NEYi (~NEYi@109.251.216.38)
[02:31:41] <nomagno> How common is it to make interfaces go through a function pointer, to allow for switching implementations on-the-fly?
[02:32:18] <nomagno> so, declare extern (*myfunc)(type_signature); in a header, instead of an actual function
[02:32:53] *** Quits: pizdets (~pizdets@183.182.114.249) (Ping timeout: 250 seconds)
[02:32:53] *** Quits: pert (~pert@fsf/member/pert) (Quit: pert)
[02:32:53] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:b145:6efe:44b7:516c)
[02:32:59] <nomagno> and then do define a basic init function
[02:33:11] *** Joins: pert (~pert@fsf/member/pert)
[02:33:40] *** Quits: j-james (~apropos@dhcp-206-87-158-226.ubcsecure.wireless.ubc.ca) (Quit: leaving)
[02:33:53] *** Joins: pizdets (~pizdets@183.182.115.245)
[02:34:57] *** Quits: asdflkj_sh (asdflkj@user/asdflkj-sh/x-6013523) (Ping timeout: 240 seconds)
[02:36:04] *** Joins: asdflkj_sh (asdflkj@bsdforall.org)
[02:36:07] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: Disconnecting)
[02:39:21] *** Joins: jx0 (~jx0@199.229.250.145)
[02:39:22] *** Quits: luckyxxl (~luckyxxl@185.209.196.143) (Quit: bye)
[02:39:27] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[02:44:36] *** Joins: pretty_d1 (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[02:44:39] *** Quits: pretty_d1 (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[02:45:03] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[02:45:46] *** Joins: pretty_d1 (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[02:45:46] *** Quits: alioui (~medeva293@102.158.69.166) (Ping timeout: 245 seconds)
[02:45:57] *** Quits: Alhazred (~Alhazred@86.106.74.43) (Ping timeout: 240 seconds)
[02:45:57] *** Quits: pretty_d1 (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[02:46:14] *** Joins: pretty_d1 (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[02:46:23] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[02:46:26] *** Quits: pretty_d1 (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[02:47:02] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 256 seconds)
[02:51:03] <CodeAgain> Heyy, could anyone help me to "mentally parse" a code? There's a struct with a pointer member char *__nextchar, and it was pointed (I'm debugging it) to a \0 char... After it there's a "-m", forming a "\0-m"
[02:51:32] <CodeAgain> So in: char c = *d->__nextchar++; c is supposed to become '-', right?
[02:51:52] <CodeAgain> If so, how it became 'm'?
[02:53:49] *** Quits: steve__ (~steve@ool-182c2b80.dyn.optonline.net) (Ping timeout: 240 seconds)
[02:53:57] *** Quits: Dotz0cat (~Dotz0cat@h184.231.187.173.dynamic.ip.windstream.net) (Ping timeout: 240 seconds)
[02:55:01] <fizzie> If `d->__nextchar` pointed at the '\0' initially, then `char c = *d->__nextchar++;` would initialize `c` to 0, not to the byte comes after (that the pointer would be left pointing to).
[02:57:17] <CodeAgain> Ohhh indeed, the ++ is at the end
[02:57:34] <CodeAgain> Is it possible that my debugger has part of the code hidden?
[02:58:21] <CodeAgain> I'm running gdb, it downloaded somehow the code from a library I'm using
[02:58:30] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[02:58:35] *** Joins: vartan (~vartan@137-025-007-151.res.spectrum.com)
[03:03:36] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 250 seconds)
[03:04:00] *** Quits: G001 (~G001@ti0111q160-4567.bb.online.no) (Quit: Client closed)
[03:05:36] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[03:05:37] *** Quits: vartan (~vartan@137-025-007-151.res.spectrum.com) (Ping timeout: 240 seconds)
[03:07:09] <CodeAgain> Here's what I got before and after that line: (gdb) p *d->__nextchar@10 -> $87 = "\000-m\000-l\000--p" |--> (gdb) n |--> (gdb) p *d->__nextchar@4 -> $88 "\000-l"
[03:08:14] <nitrix> nomagno, I have seen libraries do this to control the allocator or have various callbacks, but they're usually part of a context struct that is passed explicitly to all functions or done via the preprocessor with an #ifndef default.
[03:09:11] *** Joins: vartan (~vartan@137-025-007-151.res.spectrum.com)
[03:09:17] <nitrix> An extern symbol seems a bit stinky to me as you now have something that can change dynamically during runtime but completely hidden implicitly.
[03:10:06] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[03:10:54] <nomagno> nitrix: Well the idea is to use it to be able to swap implementations of a physics engine.
[03:11:55] *** Quits: finalriposte (~finalripo@2403-5802-74-2-20c-29ff-fe7c-2548.ip6.aussiebb.net) (Quit: Quitting)
[03:12:02] <nomagno> Hm... maybe have a global struct that contains an enum as tagging, and a function pointer?
[03:12:42] *** Quits: elves-upstate (~elves-ups@129-2-180-39.wireless.umd.edu) (Remote host closed the connection)
[03:12:52] <nitrix> The interface can be a struct with function pointers, then the implementations can provide a compound literal macro that initializes the members with its own functions, it emulates OOP.
[03:14:01] <nomagno> Hm, yeah I guess
[03:14:30] <nitrix> struct renderer { void *custom; void (*render_func)(struct renderer *r, struct scene *s); };
[03:14:53] <nitrix> void opengl_renderer_init(struct renderer *r);
[03:15:19] *** Joins: riposte (~finalripo@2403-5802-74-2-20c-29ff-fe7c-2548.ip6.aussiebb.net)
[03:15:23] <nitrix> void vulkan_renderer_init(struct renderer *r);
[03:15:51] <nitrix> Then you use it r->render(); the same way, without caring whether it's opengl or vulkan.
[03:16:27] *** Joins: Dotz0cat (~Dotz0cat@75.117.198.55)
[03:17:59] <nomagno> Yeah I think I get it, but in this case I can definitely just provide a gobal function pointer and leave it up to the implementation to #define CHOOSE_FUNC(param) ...
[03:19:18] <nitrix> What happens if you ever have to work with two instances of the physic engine simultanously, with different implementations?
[03:20:00] *** Joins: notzmv (~zmv@user/notzmv)
[03:20:00] <nitrix> Anything set globally is always a pain because you lose your ability of instancing it. You're stuck with one singleton for the whole application.
[03:20:34] <nomagno> I just don't like having to do callbacks...
[03:20:38] *** Quits: Guest501 (~Murray@89.109-247-180.customer.lyse.net) (Quit: leaving)
[03:20:51] *** Quits: Akuli (~Akuli@82-203-163-88.bb.dnainternet.fi) (Quit: Akuli)
[03:20:56] <nomagno> Don't have a solid reason, just general architecturing of the project up until this point
[03:21:06] <nomagno> I've gone by without any global variables either, mind you
[03:21:20] <nitrix> Oh I remember you.
[03:21:26] <nitrix> You're on your own, I can't help you.
[03:21:41] <nomagno> Why is that?
[03:22:59] <nomagno> I have a lot of valid options to solve the interface design problem at hand. Any suggestions are appreciated
[03:23:46] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:23:52] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[03:27:06] *** Quits: soul-bw (~uknown@2a02-a456-85ad-1-bc35-14cb-5d4d-a24d.fixed6.kpn.net) (Read error: No route to host)
[03:27:19] *** Joins: constxd_ (~brad@142.167.170.88)
[03:28:03] *** Joins: soul-bw (~uknown@2a02-a456-85ad-1-c8b8-f530-6f8f-f31f.fixed6.kpn.net)
[03:28:50] *** Joins: vimart (~ketiv@cpc148896-sgyl44-2-0-cust233.18-2.cable.virginm.net)
[03:30:02] *** Quits: ntwk (~ntwk@user/ntwk) (Ping timeout: 240 seconds)
[03:30:54] *** Quits: asdflkj_sh (asdflkj@bsdforall.org) (Ping timeout: 250 seconds)
[03:39:15] *** Quits: vartan (~vartan@137-025-007-151.res.spectrum.com) (Ping timeout: 268 seconds)
[03:43:29] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[03:45:15] *** Joins: vartan (~vartan@137-025-007-151.res.spectrum.com)
[03:45:43] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[03:46:28] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[03:46:44] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[03:47:05] *** Quits: alex_ (~alex11@user/alex11) (Read error: Connection reset by peer)
[03:47:26] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[03:48:28] *** Joins: kurahaupo_ (~kurahaupo@pa49-182-42-180.pa.qld.optusnet.com.au)
[03:48:37] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[03:49:18] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[03:50:34] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[03:50:46] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[03:50:46] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[03:50:46] *** Joins: wroathe (~wroathe@user/wroathe)
[03:50:57] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 240 seconds)
[03:51:56] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:b145:6efe:44b7:516c) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:51:57] *** Quits: vartan (~vartan@137-025-007-151.res.spectrum.com) (Ping timeout: 240 seconds)
[03:53:49] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[03:53:50] *** Quits: graywolf (~wolf@user/graywolf) (Quit: WeeChat 3.4)
[03:55:57] *** Quits: Burgundy (~NA@86.121.143.206) (Ping timeout: 240 seconds)
[03:56:06] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:58:32] *** Joins: Murray7501 (~Murray@89.109-247-180.customer.lyse.net)
[03:59:07] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Quit: Leaving)
[04:11:17] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 240 seconds)
[04:11:49] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 240 seconds)
[04:13:11] *** Joins: Wulf (~Wulf@user/wulf)
[04:14:06] *** Joins: SachieW (~SachieW@240e:e8:f00f:e8cb:7968:b03f:876b:5995)
[04:17:01] *** Quits: SachieW (~SachieW@240e:e8:f00f:e8cb:7968:b03f:876b:5995) (Remote host closed the connection)
[04:20:22] *** Quits: geli (~gelignite@55d45b98.access.ecotel.net) (Read error: Connection reset by peer)
[04:20:36] *** Joins: magla (~gelignite@55d45b98.access.ecotel.net)
[04:21:08] *** Quits: magla (~gelignite@55d45b98.access.ecotel.net) (Remote host closed the connection)
[04:23:12] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[04:24:03] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[04:24:42] *** Joins: vartan (~vartan@137-025-007-151.res.spectrum.com)
[04:27:26] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 245 seconds)
[04:27:58] *** Quits: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740) (Remote host closed the connection)
[04:30:22] *** Joins: System_Error (~SystemErr@user/systemerror)
[04:30:50] *** Joins: ic3blx_ (~ic3blx___@87.116.163.2)
[04:30:50] *** Quits: ic3blx_ (~ic3blx___@87.116.163.2) (Changing host)
[04:30:50] *** Joins: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740)
[04:31:53] *** Quits: freep (~freepppp@46.246.189.172.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[04:36:27] *** rcf is now known as obese
[04:37:37] *** Quits: vartan (~vartan@137-025-007-151.res.spectrum.com) (Ping timeout: 240 seconds)
[04:40:31] *** obese is now known as rcf
[04:40:44] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[04:40:55] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[04:43:17] *** Quits: EtherNet (~ethernet@user/ethernet) (Quit: WeeChat 3.5-dev)
[04:43:21] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[04:43:34] *** Joins: vartan (~vartan@137-025-007-151.res.spectrum.com)
[04:45:30] *** Joins: crashrep (~crashrep@user/crashrep)
[04:46:27] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Client Quit)
[04:47:57] *** Quits: vartan (~vartan@137-025-007-151.res.spectrum.com) (Ping timeout: 240 seconds)
[04:50:23] *** Joins: vartan (~vartan@137-025-007-151.res.spectrum.com)
[04:52:40] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Quit: WeeChat 3.4)
[04:56:14] *** Quits: kurahaupo_ (~kurahaupo@pa49-182-42-180.pa.qld.optusnet.com.au) (Ping timeout: 256 seconds)
[04:58:48] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:1181:18a7:7b4:f540)
[04:59:21] *** Quits: vartan (~vartan@137-025-007-151.res.spectrum.com) (Remote host closed the connection)
[04:59:44] *** Joins: vartan (~vartan@137-025-007-151.res.spectrum.com)
[05:01:57] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:b145:6efe:44b7:516c)
[05:03:40] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[05:04:17] *** Quits: vartan (~vartan@137-025-007-151.res.spectrum.com) (Ping timeout: 240 seconds)
[05:06:24] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:1181:18a7:7b4:f540) (Quit: Quit)
[05:07:10] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[05:08:37] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 240 seconds)
[05:09:43] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[05:10:10] <Feuermagier> What actually happens on a free(NULL); ?
[05:10:21] <fizzie> Nothing.
[05:10:31] <Feuermagier> is that defined behaviour?
[05:10:36] <fizzie> Yes.
[05:10:57] <fizzie> C11 7.22.3.3p2: "The `free` function -- If `ptr` is a null pointer, no action occurs."
[05:11:02] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[05:11:15] <Feuermagier> interesting. thx!
[05:11:41] <fizzie> Likewise, `realloc(NULL, size)` is equivalent to `malloc(size)`.
[05:13:28] *** Joins: figrita (~figrita@2603-7080-9801-332f-5813-eeaf-976d-830a.res6.spectrum.com)
[05:17:58] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[05:20:24] *** Joins: asdflkj_sh (asdflkj@bsdforall.org)
[05:20:26] *** Quits: alch (~alch@pa-18-187-10.service.infuturo.it) (Read error: Connection reset by peer)
[05:23:37] *** Joins: steve__ (~steve@ool-182c2b80.dyn.optonline.net)
[05:24:56] *** Joins: alch (~alch@151.82.217.181)
[05:25:36] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[05:32:45] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[05:36:37] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[05:38:47] *** Joins: vartan (~vartan@047-028-106-153.res.spectrum.com)
[05:47:14] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[05:51:15] *** Joins: EtherNet (~ethernet@user/ethernet)
[05:51:55] *** Quits: pyook (~pyook@user/puke) ()
[05:56:52] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[05:57:37] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 240 seconds)
[06:00:14] *** Joins: kexec (~kexec@user/kexec)
[06:08:39] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[06:09:22] *** Joins: ickk (~ickk@user/ickk)
[06:15:33] *** Joins: epony (epony@user/epony)
[06:16:57] *** Quits: vartan (~vartan@047-028-106-153.res.spectrum.com) (Ping timeout: 240 seconds)
[06:27:26] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[06:27:43] *** Quits: freakazoid343 (~matt@2603:9000:cf03:86c3:142e:beda:d724:cf20) (Quit: Leaving)
[06:27:48] *** Joins: AdmiralBumbleBee (~AdmiralBu@47.203.174.105)
[06:28:49] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Remote host closed the connection)
[06:29:07] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[06:34:50] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 256 seconds)
[06:35:37] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-37-70-24-250-178.dsl.bell.ca) (Ping timeout: 240 seconds)
[06:36:15] *** Joins: freakazoid333 (~matt@2603:9000:cf03:86c3:3dd6:1688:6b13:2003)
[06:39:07] *** Joins: chenqisu12 (~chenqisu1@183.217.200.249)
[06:40:49] *** Quits: kexec (~kexec@user/kexec) (Quit: Client closed)
[06:41:10] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Ping timeout: 260 seconds)
[06:41:38] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 256 seconds)
[06:42:52] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[06:42:57] *** Quits: jx0 (~jx0@199.229.250.145) (Ping timeout: 240 seconds)
[06:43:20] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-46-67-70-100-72.dsl.bell.ca)
[06:44:47] *** Joins: jx0 (~jx0@199.229.250.139)
[06:46:10] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:3db3:b1d2:4da9:9983) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[06:46:17] *** Quits: pert (~pert@fsf/member/pert) (Quit: pert)
[06:46:28] *** Joins: pert (~pert@fsf/member/pert)
[06:46:31] *** Quits: pert (~pert@fsf/member/pert) (Remote host closed the connection)
[06:47:08] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[06:52:22] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[06:59:59] *** Quits: symb0l (~symb0l@user/symb0l) (Quit: The Lounge - https://thelounge.chat)
[07:01:34] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[07:06:37] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 240 seconds)
[07:09:44] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[07:11:15] *** Quits: boB_K7IQ (~boB_K7IQ@ip68-109-146-217.ph.ph.cox.net) (Read error: Connection reset by peer)
[07:12:37] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 240 seconds)
[07:20:08] *** Joins: boB_K7IQ (~boB_K7IQ@ip68-109-146-217.ph.ph.cox.net)
[07:20:31] <|smlckz|> suggestions welcome: http://sprunge.us/eBfmps
[07:22:17] *** Quits: boB_K7IQ (~boB_K7IQ@ip68-109-146-217.ph.ph.cox.net) (Read error: Connection reset by peer)
[07:24:02] *** Parts: jahway603[m] (~jahway603@2001:470:69fc:105::1:c35) ()
[07:24:42] *** Joins: ferdna (~ferdna@user/ferdna)
[07:24:57] *** Quits: Charadon (~Charadon@155.138.164.183) (Ping timeout: 240 seconds)
[07:27:13] *** Quits: AmR (~AmREiSa@156.207.146.251) (Quit: Konversation terminated!)
[07:29:13] *** Joins: nicode (~nic@45.72.195.35)
[07:30:57] *** Quits: foul_owl (~kerry@94.140.8.105) (Read error: Connection reset by peer)
[07:31:40] *** Quits: nmat[m] (~nmatm]@2001:470:69fc:105::1:5553) (K-Lined)
[07:31:40] *** Quits: silkut42[m] (~silkutmat@2001:470:69fc:105::1:6530) (K-Lined)
[07:31:40] *** Quits: Bazsalanszky[m] (~bazsalans@2001:470:69fc:105::6fe) (K-Lined)
[07:31:41] *** Quits: mattmurr[m] (~mattmurrm@2001:470:69fc:105::1:5ea0) (K-Lined)
[07:31:41] *** Quits: explosion-mental (~explosion@2001:470:69fc:105::dac2) (K-Lined)
[07:31:41] *** Quits: f33d1[m] (~g0nkstead@2001:470:69fc:105::1:320b) (K-Lined)
[07:31:41] *** Quits: kolmogorov[m] (~kolmogoro@2001:470:69fc:105::e03b) (K-Lined)
[07:31:41] *** Quits: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4) (K-Lined)
[07:31:41] *** Quits: dalz (~dalz@2001:470:69fc:105::2ea) (K-Lined)
[07:31:41] *** Quits: nopenope[m] (~repmovsb@2001:470:69fc:105::1:274e) (K-Lined)
[07:31:41] *** Quits: archdark[m] (~ryonagana@2001:470:69fc:105::fd27) (K-Lined)
[07:31:41] *** Quits: dlozeve[m] (~dlozevema@2001:470:69fc:105::1:1c58) (K-Lined)
[07:31:41] *** Quits: milia[m] (~mlliarmma@2001:470:69fc:105::1:4631) (K-Lined)
[07:31:41] *** Quits: aura[m] (~aurabindo@2001:470:69fc:105::4204) (K-Lined)
[07:31:42] *** Quits: skyeto[m] (~skyetosky@2001:470:69fc:105::c2fe) (K-Lined)
[07:31:42] *** Quits: M101donutman[m] (~M101donut@2001:470:69fc:105::d51) (K-Lined)
[07:31:42] *** Quits: carrot98[m] (~carrot98m@2001:470:69fc:105::1:5fcc) (K-Lined)
[07:31:42] *** Quits: Irvise (~irvise@2001:470:69fc:105::84c) (K-Lined)
[07:31:42] *** Quits: james[m]123456 (~jamesjame@2001:470:69fc:105::1:5aa1) (K-Lined)
[07:31:42] *** Quits: spokojni[m] (~spokojnio@2001:470:69fc:105::1:3fb2) (K-Lined)
[07:31:42] *** Quits: Akawama[m] (~akawama@user/akawama) (K-Lined)
[07:31:42] *** Quits: hussam (~hussam@user/hussam) (K-Lined)
[07:31:42] *** Quits: anomalous_creato (~anomalous@2001:470:69fc:105::6ed1) (K-Lined)
[07:31:42] *** Quits: mphojele (~mphojelem@2001:470:69fc:105::35ab) (K-Lined)
[07:31:42] *** Quits: not_a_robot[m] (~notarobot@2001:470:69fc:105::dd37) (K-Lined)
[07:31:42] *** Quits: lupin592[m] (~lupin592m@2001:470:69fc:105::1:6718) (K-Lined)
[07:31:43] *** Quits: ormaaj (~ormaaj@user/ormaaj) (K-Lined)
[07:31:43] *** Quits: slact[m] (~slact@2001:470:69fc:105::1:5ee3) (K-Lined)
[07:31:43] *** Quits: Sohaib[m] (~smalinux@2001:470:69fc:105::31b5) (K-Lined)
[07:31:43] *** Quits: magicalegg[m] (~magicaleg@2001:470:69fc:105::1:52e9) (K-Lined)
[07:31:43] *** Quits: randy408[m] (~randy408m@2001:470:69fc:105::2f5e) (K-Lined)
[07:31:43] *** Quits: atulu (~atulum]@2001:470:69fc:105::d50c) (K-Lined)
[07:31:43] *** Quits: flashd[m] (~flashdmat@2001:470:69fc:105::1:3d0b) (K-Lined)
[07:31:43] *** Quits: nomagno (~nomagno@2001:470:69fc:105::c1f0) (K-Lined)
[07:31:43] *** Quits: jinsun_ (~jinsun@user/jinsun) (K-Lined)
[07:31:43] *** Quits: NRK[m] (~nrkmatrix@2001:470:69fc:105::4e30) (K-Lined)
[07:31:43] *** Quits: Neui[m] (~neuimatri@2001:470:69fc:105::745) (K-Lined)
[07:31:43] *** Quits: psydroid (~psydroid@user/psydroid) (K-Lined)
[07:31:43] *** Quits: go4godvin (~go4godvin@user/go4godvin) (K-Lined)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:33] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[07:38:05] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[07:45:17] *** Quits: freakazoid333 (~matt@2603:9000:cf03:86c3:3dd6:1688:6b13:2003) (Quit: Leaving)
[07:45:37] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[07:45:40] *** Quits: ka80 (~ka80@111.60.138.34.bc.googleusercontent.com) (Ping timeout: 256 seconds)
[07:48:56] *** Joins: foul_owl (~kerry@174-21-143-101.tukw.qwest.net)
[07:59:16] *** Quits: chenqisu12 (~chenqisu1@183.217.200.249) (Ping timeout: 256 seconds)
[08:00:36] <|smlckz|> hmm?
[08:01:18] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[08:04:25] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 268 seconds)
[08:04:37] *** Joins: darwin (d@fsf/member/darwin)
[08:09:47] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[08:09:47] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[08:09:47] *** Joins: wroathe (~wroathe@user/wroathe)
[08:13:18] *** Joins: karthy (~karthy@162.216.143.148)
[08:14:30] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[08:15:25] *** Joins: the_lanetly_052_ (~the_lanet@185.30.90.57)
[08:21:21] *** Joins: archdark[m] (~ryonagana@2001:470:69fc:105::fd27)
[08:21:21] *** Joins: dalz (~dalz@2001:470:69fc:105::2ea)
[08:21:21] *** Joins: lupin592[m] (~lupin592m@2001:470:69fc:105::1:6718)
[08:21:21] *** Joins: hussam (~hussam@user/hussam)
[08:21:22] *** Joins: james[m] (~jamesjame@2001:470:69fc:105::1:5aa1)
[08:21:24] *** Joins: psydroid (~psydroid@user/psydroid)
[08:21:30] *** Joins: anomalous_creato (~anomalous@2001:470:69fc:105::6ed1)
[08:21:30] *** Joins: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4)
[08:21:30] *** Joins: atulu (~atulum]@2001:470:69fc:105::d50c)
[08:21:30] *** Joins: randy408[m] (~randy408m@2001:470:69fc:105::2f5e)
[08:21:30] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[08:21:30] *** Joins: dlozeve[m] (~dlozevema@2001:470:69fc:105::1:1c58)
[08:21:30] *** Joins: mattmurr[m] (~mattmurrm@2001:470:69fc:105::1:5ea0)
[08:21:30] *** Joins: jinsun_ (~jinsun@user/jinsun)
[08:21:30] *** Joins: spokojni[m] (~spokojnio@2001:470:69fc:105::1:3fb2)
[08:21:30] *** Joins: Bazsalanszky[m] (~bazsalans@2001:470:69fc:105::6fe)
[08:21:30] *** Joins: magicalegg[m] (~magicaleg@2001:470:69fc:105::1:52e9)
[08:21:31] *** Joins: kolmogorov[m] (~kolmogoro@2001:470:69fc:105::e03b)
[08:21:31] *** Joins: nomagno (~nomagno@2001:470:69fc:105::c1f0)
[08:21:31] *** Joins: not_a_robot[m] (~notarobot@2001:470:69fc:105::dd37)
[08:21:31] *** Joins: nopenope[m] (~repmovsb@2001:470:69fc:105::1:274e)
[08:21:31] *** Joins: f33d1[m] (~g0nkstead@2001:470:69fc:105::1:320b)
[08:21:31] *** Joins: milia[m] (~mlliarmma@2001:470:69fc:105::1:4631)
[08:21:31] *** Joins: slact[m] (~slact@2001:470:69fc:105::1:5ee3)
[08:21:31] *** Joins: silkut42[m] (~silkutmat@2001:470:69fc:105::1:6530)
[08:21:31] *** Joins: nmat[m] (~nmatm]@2001:470:69fc:105::1:5553)
[08:21:31] *** Joins: flashd[m] (~flashdmat@2001:470:69fc:105::1:3d0b)
[08:21:31] *** Joins: mphojele (~mphojelem@2001:470:69fc:105::35ab)
[08:21:31] *** Joins: go4godvin (~go4godvin@user/go4godvin)
[08:21:31] *** Joins: Akawama[m] (~akawama@user/akawama)
[08:21:31] *** Joins: M101donutman[m] (~M101donut@2001:470:69fc:105::d51)
[08:21:35] *** Joins: skyeto[m] (~skyetosky@2001:470:69fc:105::c2fe)
[08:21:36] *** Joins: aura[m] (~aurabindo@2001:470:69fc:105::4204)
[08:21:42] *** Joins: NRK[m] (~nrkmatrix@2001:470:69fc:105::4e30)
[08:21:43] *** Joins: Neui[m] (~neuimatri@2001:470:69fc:105::745)
[08:21:43] *** Joins: explosion-mental (~explosion@2001:470:69fc:105::dac2)
[08:21:44] *** Joins: carrot98[m] (~carrot98m@2001:470:69fc:105::1:5fcc)
[08:21:45] *** Joins: Sohaib[m] (~smalinux@2001:470:69fc:105::31b5)
[08:22:03] *** Quits: f33d1[m] (~g0nkstead@2001:470:69fc:105::1:320b) (Quit: Client limit exceeded: 20000)
[08:22:05] *** Quits: mattmurr[m] (~mattmurrm@2001:470:69fc:105::1:5ea0) (Quit: Client limit exceeded: 20000)
[08:22:12] *** Quits: go4godvin (~go4godvin@user/go4godvin) (Quit: Client limit exceeded: 20000)
[08:22:55] *** Quits: milia[m] (~mlliarmma@2001:470:69fc:105::1:4631) (Quit: Client limit exceeded: 20000)
[08:23:14] *** Quits: flashd[m] (~flashdmat@2001:470:69fc:105::1:3d0b) (Quit: Client limit exceeded: 20000)
[08:23:49] *** Quits: james[m] (~jamesjame@2001:470:69fc:105::1:5aa1) (Quit: Client limit exceeded: 20000)
[08:24:41] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[08:26:52] *** Joins: Cleverness (~Clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[08:28:22] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Client limit exceeded: 20000)
[08:28:32] *** Quits: psydroid (~psydroid@user/psydroid) (Quit: Client limit exceeded: 20000)
[08:28:33] *** Quits: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4) (Quit: Client limit exceeded: 20000)
[08:29:08] <|smlckz|> please provide suggestions: http://sprunge.us/eBfmps
[08:29:17] *** Joins: Irvise (~irvise@2001:470:69fc:105::84c)
[08:29:17] *** Joins: james[m] (~jamesjame@2001:470:69fc:105::1:5aa1)
[08:29:18] *** Joins: psydroid (~psydroid@user/psydroid)
[08:29:18] *** Joins: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4)
[08:29:18] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[08:29:19] *** Joins: mattmurr[m] (~mattmurrm@2001:470:69fc:105::1:5ea0)
[08:29:19] *** Joins: f33d1[m] (~g0nkstead@2001:470:69fc:105::1:320b)
[08:29:19] *** Joins: milia[m] (~mlliarmma@2001:470:69fc:105::1:4631)
[08:29:19] *** Joins: flashd[m] (~flashdmat@2001:470:69fc:105::1:3d0b)
[08:29:19] *** Joins: go4godvin (~go4godvin@user/go4godvin)
[08:29:20] *** Quits: archdark[m] (~ryonagana@2001:470:69fc:105::fd27) (Quit: Client limit exceeded: 20000)
[08:29:30] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[08:29:54] *** Joins: Echoz (~chris@user/echoz)
[08:32:42] *** Quits: Cleverness (~Clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Quit: Leaving)
[08:33:50] *** Quits: asdflkj_sh (asdflkj@bsdforall.org) (Ping timeout: 256 seconds)
[08:34:07] *** Joins: Red (~Red@41.92-221-233.customer.lyse.net)
[08:35:02] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[08:36:44] <Feuermagier> Does there exist any (size, cur_entry->num) combination, so that the check passes but bytes_to_alloc is too small to fit size*num bytes?: https://i.imgur.com/kixFyZr.png
[08:36:57] *** Joins: archdark[m] (~ryonagana@2001:470:69fc:105::fd27)
[08:37:05] <Feuermagier> without the check it'd be a simple overflow bug
[08:39:01] <dave0> it's a tricky check
[08:39:51] <Feuermagier> I can choose size and num freely (both are size_t)
[08:40:10] <dave0> i'd write it a bit more verbose...   if(num == 0 || cur_entry->size == 0 || bytes_to_alloc / cur_entry->size != num)
[08:42:33] <Feuermagier> dave0, ah, cur_entry->size can not be 0 (but good suggestion ofc)
[08:42:43] *** Joins: freakazoid333 (~matt@2603:9000:cf03:86c3:ec54:cd88:99c3:2b2f)
[08:43:42] <dave0> it looks okay to me
[08:44:41] <ChoHag> Overflow in the second line will result in undefined behaviour.
[08:45:04] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 250 seconds)
[08:46:07] <Feuermagier> ChoHag, will it? - Is there an overflow that passes the check after?
[08:46:18] *** Quits: mahmutov (~mahmutov@37.155.41.218) (Ping timeout: 256 seconds)
[08:46:21] <ChoHag> No. Once the overflow has happened all bets are off.
[08:47:31] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[08:47:35] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[08:47:39] <ChoHag> Most optimisers will remove the 'bytes / size != num' check as, since overflow cannot happen, that can never be false.
[08:47:46] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[08:47:51] <Feuermagier> interesting
[08:48:53] <dave0> no, the multiply is fine
[08:49:18] <dave0> size_t is unsigned, num is unsigned, the multiply is fine
[08:49:32] <ChoHag> https://cvsweb.openbsd.org/src/lib/libc/stdlib/reallocarray.c?rev=1.3
[08:50:02] <ChoHag> That is how you do it.
[08:50:26] <Feuermagier> hmm, maybe I can get an un-even number out of the division
[08:50:28] <dave0> all that arithmetic is unsigned, so there is no overflow
[08:50:47] <Feuermagier> I mean a number that has a remainder after the division
[08:51:43] <dave0> the division is fine too, and you checked for 0 which handles the case where   bytes_to_alloc < cur_entry->size
[08:54:06] <Feuermagier> dave0, could I somehow get bytes_to_accoc == 15, size==8 and num==1?
[08:54:13] <Feuermagier> (or something similar)
[08:54:55] <dave0> no, size is even so bytes_to_alloc will never be odd from your multiply
[08:55:38] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:56:18] <ChoHag> Oh is it signed with the undefined behaviour?
[08:56:31] <dave0> yeah signed overflow is U.B.
[08:56:42] *** Joins: missogra (~missogra@dynamic-077-008-236-046.77.8.pool.telefonica.de)
[08:56:44] <Feuermagier> size_t is unsigned though
[08:56:51] <dave0> unsigned doesn't overflow.. if the result is too large it's reduced mod 2**n
[08:57:10] <ChoHag> It does overflow but it wraps around and does so in a defined way.
[08:57:57] <ChoHag> The overflow flag in the cpu is set and subsequently ignored.
[08:58:21] <ChoHag> See https://gcc.gnu.org/onlinedocs/gcc/Integer-Overflow-Builtins.html
[08:59:04] <dave0> Feuermagier: i have code that correctly catches signed overflow if you want.. it has add, subtract, and multiply
[08:59:30] <ChoHag> clang supports those. Not sure about other compilers.
[08:59:42] <Feuermagier> dave0, this from a CTF. I thought there was a bug in there, but maybe it's somewhere else
[08:59:55] <dave0> what's ctf?
[09:00:08] <Feuermagier> Capture The Flag
[09:00:16] <Feuermagier> you get a program and have to hack it
[09:00:18] <dave0> oh ok
[09:00:23] <Feuermagier> usually gain remote-code-execution
[09:01:04] <ChoHag> Unchecked overflow is a good place to find holes to exploit.
[09:01:18] <ChoHag> Apparently not in this case though if there's no UB.
[09:01:28] <Feuermagier> ChoHag, they usually are, that's why I was so suspicious here
[09:02:58] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[09:03:25] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[09:06:53] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[09:09:39] <karthy> maybe some race condition bug is there
[09:15:23] *** Quits: missogra (~missogra@dynamic-077-008-236-046.77.8.pool.telefonica.de) (Quit: Leaving)
[09:16:36] *** Quits: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740) (Quit: Leaving)
[09:18:27] *** Joins: Everything (~Everythin@37.115.210.35)
[09:21:30] *** Quits: alch (~alch@151.82.217.181) (Read error: Connection reset by peer)
[09:22:04] *** Joins: tv3n (~tv3n@2601:647:8101:e370::5b75)
[09:22:35] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[09:25:19] *** Joins: alch (~alch@pa-18-171-129.service.infuturo.it)
[09:34:56] *** Joins: lleo (~leo@31-161-227-69.mobile.kpn.net)
[09:35:36] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Ping timeout: 256 seconds)
[09:41:56] *** Quits: lleo (~leo@31-161-227-69.mobile.kpn.net) (Quit: institute budget)
[09:46:15] *** Joins: oxfuxxx (~oxfuxxx@10.177.181.107.wiredns.net)
[09:52:21] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[09:52:41] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[09:53:10] *** Quits: oxfuxxx (~oxfuxxx@10.177.181.107.wiredns.net) (Ping timeout: 256 seconds)
[09:53:25] *** Joins: oxfuxxx (~oxfuxxx@89.40.183.139)
[09:58:56] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[09:59:32] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[10:00:42] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[10:01:16] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[10:01:45] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[10:02:51] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: AdiIRC is updating to v4.2 Beta Build (2022/01/28 UTC) 64 Bit)
[10:03:09] *** Joins: Tempesta (~Tempesta@user/tempesta)
[10:03:39] *** Joins: vartan (~vartan@047-028-106-153.res.spectrum.com)
[10:06:00] *** Joins: fe23 (~fe23@2409:8a34:477:2010:d9de:c826:f9b6:c8bb)
[10:06:35] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[10:07:00] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[10:08:28] *** Quits: oxfuxxx (~oxfuxxx@89.40.183.139) (Ping timeout: 256 seconds)
[10:09:05] *** Quits: robyn (~robyndrak@user/robyndrake) (Read error: Connection reset by peer)
[10:11:05] *** Quits: vartan (~vartan@047-028-106-153.res.spectrum.com) (Quit: Leaving)
[10:13:18] *** Joins: Atque (~Atque@user/atque)
[10:13:34] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[10:14:20] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[10:15:07] *** Quits: Jong (~Jong@2620:10d:c090:400::5:6a53) (Read error: Connection reset by peer)
[10:23:32] *** Quits: auk (auk@gateway/vpn/protonvpn/auk) (Quit: Leaving)
[10:23:54] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[10:33:52] *** Joins: bbju (~bbju@103.144.149.220)
[10:37:45] *** Quits: jx0 (~jx0@199.229.250.139) (Quit: poof!)
[10:38:47] *** Quits: mad_enz (~mad_enz@lnsm3-torontoxn-142-116-106-108.internet.virginmobile.ca) (Ping timeout: 250 seconds)
[10:40:28] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[10:40:32] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[10:40:37] *** Quits: pucara (~i@host14.181-1-101.telecom.net.ar) (Quit: Lost terminal)
[10:46:28] *** Quits: ickk (~ickk@user/ickk) (Ping timeout: 260 seconds)
[10:55:33] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Quit: WeeChat 3.4)
[10:59:06] *** Quits: kolmogorov[m] (~kolmogoro@2001:470:69fc:105::e03b) (Quit: Client limit exceeded: 20000)
[11:03:37] *** Quits: Haxxa (~Haxxa@125-253-30-155.ip4.superloop.com) (Ping timeout: 240 seconds)
[11:05:09] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[11:06:23] *** Joins: oxfuxxx (~oxfuxxx@208.78.41.80)
[11:11:07] *** Joins: Rounin (~david@84.212.130.215)
[11:11:49] *** Joins: Burgundy (~NA@86.121.143.206)
[11:13:01] *** Quits: oxfuxxx (~oxfuxxx@208.78.41.80) (Ping timeout: 250 seconds)
[11:15:32] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[11:17:02] *** Quits: adip (~adip@crd88.neoplus.adsl.tpnet.pl) (Ping timeout: 256 seconds)
[11:20:14] *** Quits: tv3n (~tv3n@2601:647:8101:e370::5b75) (Quit: WeeChat 2.8)
[11:20:28] *** Joins: oxfuxxx (~oxfuxxx@208.78.41.80)
[11:21:00] *** Quits: m0shbear (~nope@205.185.119.231) (Ping timeout: 256 seconds)
[11:21:14] *** Joins: Atque (~Atque@user/atque)
[11:21:23] *** Joins: aradesh (~aradesh@user/aradesh)
[11:23:40] *** Joins: freep (~freepppp@46.246.189.172.dsl.dyn.forthnet.gr)
[11:24:21] *** Joins: chenqisu12 (~chenqisu1@183.217.200.249)
[11:27:14] *** Quits: oxfuxxx (~oxfuxxx@208.78.41.80) (Ping timeout: 260 seconds)
[11:31:13] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Remote host closed the connection)
[11:31:52] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[11:31:56] *** Joins: mahmutov (~mahmutov@37.155.41.218)
[11:34:05] *** Quits: tomboy64 (~tomboy64@user/tomboy64) (Ping timeout: 268 seconds)
[11:34:30] *** Joins: boB_K7IQ (~boB_K7IQ@ip70-162-114-20.ph.ph.cox.net)
[11:34:38] *** Joins: oxfuxxx (~oxfuxxx@208.78.41.80)
[11:35:17] *** Quits: oxfuxxx (~oxfuxxx@208.78.41.80) (Client Quit)
[11:38:05] *** Joins: joilerv (~joilerv@host86-191-93-41.range86-191.btcentralplus.com)
[11:40:06] *** Joins: adip (~adip@crd88.neoplus.adsl.tpnet.pl)
[11:41:26] *** Quits: paulo (paulo@paulo.jujube.ircnow.org) (Changing host)
[11:41:26] *** Joins: paulo (paulo@user/paulo/x-9032687)
[11:45:44] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:b145:6efe:44b7:516c) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:47:58] *** Joins: tomboy64 (~tomboy64@user/tomboy64)
[11:47:59] *** Joins: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com)
[11:50:44] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[11:51:36] *** Quits: mahmutov (~mahmutov@37.155.41.218) (Ping timeout: 256 seconds)
[11:52:18] *** Quits: hussam (~hussam@user/hussam) (Quit: Client limit exceeded: 20000)
[11:57:05] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[11:58:46] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[12:00:05] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[12:03:32] *** Joins: meator (~meator@user/meator)
[12:03:58] *** Quits: tomboy64 (~tomboy64@user/tomboy64) (Ping timeout: 250 seconds)
[12:05:21] *** Joins: joilerv_ (~joilerv@host86-191-93-41.range86-191.btcentralplus.com)
[12:06:40] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[12:07:25] *** Quits: joilerv (~joilerv@host86-191-93-41.range86-191.btcentralplus.com) (Ping timeout: 250 seconds)
[12:07:45] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[12:08:31] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[12:09:21] *** Joins: diophantoz (~diophanto@user/diophantoz)
[12:12:08] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[12:13:05] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[12:14:31] *** Joins: ugeek (~geek@p200300c05713e80002248cfffed393ac.dip0.t-ipconnect.de)
[12:19:41] *** Quits: magicalegg[m] (~magicaleg@2001:470:69fc:105::1:52e9) (Quit: Client limit exceeded: 20000)
[12:22:05] *** Joins: tomboy64 (~tomboy64@user/tomboy64)
[12:25:33] *** Quits: anomalous_creato (~anomalous@2001:470:69fc:105::6ed1) (Quit: Client limit exceeded: 20000)
[12:28:22] *** Quits: silkut42[m] (~silkutmat@2001:470:69fc:105::1:6530) (Quit: Client limit exceeded: 20000)
[12:32:47] *** Quits: ugeek (~geek@p200300c05713e80002248cfffed393ac.dip0.t-ipconnect.de) (Quit: Leaving)
[12:34:08] *** Joins: bebyx (~Thunderbi@user/bebyx)
[12:35:01] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[12:41:30] *** Joins: oxfuxxx (~oxfuxxx@139.28.218.189)
[12:44:09] <meator> Hello. I'm compiling a program with -fsanitize=address and it shows this error: https://termbin.com/2blk. Where's the problem? The log doesn't show a single reference to the program I'm compiling, just some glibc functions. Can I make it more verbose?
[12:44:10] *** Joins: hussam (~hussam@user/hussam)
[12:44:10] *** Joins: anomalous_creato (~anomalous@2001:470:69fc:105::6ed1)
[12:44:10] *** Joins: kolmogorov[m] (~kolmogoro@2001:470:69fc:105::e03b)
[12:44:10] *** Joins: magicalegg[m] (~magicaleg@2001:470:69fc:105::1:52e9)
[12:44:22] *** Joins: silkut42[m] (~silkutmat@2001:470:69fc:105::1:6530)
[12:45:21] *** Joins: RicardasSim (~RicardasS@78-63-172-44.static.zebra.lt)
[12:45:37] *** Quits: oxfuxxx (~oxfuxxx@139.28.218.189) (Ping timeout: 240 seconds)
[12:45:56] *** Quits: joilerv_ (~joilerv@host86-191-93-41.range86-191.btcentralplus.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:46:55] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[12:48:01] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:3db3:b1d2:4da9:9983)
[12:48:14] *** Joins: slidercrank (~slidercra@user/slidercrank)
[12:48:42] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[12:49:42] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:51:01] <vimart> Hello World
[12:52:07] *** Joins: oxfuxxx (~oxfuxxx@139.28.218.188)
[12:52:08] *** Joins: alocer (~alocer@2.69.51.79.mobile.tre.se)
[12:54:57] <nitrix> meator, -O0 -g ?
[12:55:45] *** Quits: oxfuxxx (~oxfuxxx@139.28.218.188) (Client Quit)
[12:55:54] <meator> nitrix: gcc -O0 -ggdb -fsanitize=address main.c -o main
[12:56:17] <nitrix> Mhhh, I'm puzzled too then.
[12:56:25] <alocer> meator, how did u came by that knowledge? reading man gcc ?
[12:57:13] <meator> alocer: What knowledge?
[12:57:16] *** Joins: loganlee (~Thunderbi@user/loganlee)
[12:57:59] <alocer> -fsanitize thing added as an argument to gcc @meator
[12:58:58] <nitrix> meator, Can you try with -fno-omit-frame-pointer see if that's related with function frames?
[12:59:48] *** Quits: soapsudsxx (~soapsudsx@209.221.40.147) (Remote host closed the connection)
[13:00:22] <nitrix> Also, `ASAN_OPTIONS=fast_unwind_on_malloc=0 ./main` to run it with this environment variable could help isolate the defect on your platform.
[13:02:39] <alocer> It's two week i started Computer Science and C programming, now I have reached compilers. Does any one have published material for easy read about gcc and clang or llvm and these stuff to make my life easier ?
[13:06:12] *** Joins: maharshipatel (~maharship@2405:205:c927:e2d9:f8fb:77fa:159c:2204)
[13:06:32] *** Parts: maharshipatel (~maharship@2405:205:c927:e2d9:f8fb:77fa:159c:2204) ()
[13:06:54] <meator> nitrix: ASAN_OPTIONS=fast_unwind_on_malloc=0 shows where the problem is. Thanks!
[13:09:04] <nitrix> meator, For reference https://github.com/google/sanitizers/wiki/AddressSanitizer#faq the bullet point "Q: My malloc stacktraces are too short or do not make sense?".
[13:09:36] *** Quits: alocer (~alocer@2.69.51.79.mobile.tre.se) (Quit: Connection closed)
[13:09:46] <nitrix> meator, My understanding is that it's a performance optimization and some distros like Fedora have/had a lot of troubles with it.
[13:12:06] *** Joins: bnchs (~bnchs@196.89.7.84)
[13:12:18] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 276 seconds)
[13:18:37] *** Quits: constxd_ (~brad@142.167.170.88) (Ping timeout: 240 seconds)
[13:21:44] *** Quits: alch (~alch@pa-18-171-129.service.infuturo.it) (Read error: Connection reset by peer)
[13:23:01] *** Quits: vboykox (~user@95.134.24.13) (Ping timeout: 240 seconds)
[13:24:59] *** Joins: vboykox (~user@9-54-134-95.pool.ukrtel.net)
[13:25:38] *** Joins: alch (~alch@151.82.206.184)
[13:27:26] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:29:12] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[13:30:38] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 250 seconds)
[13:32:39] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[13:32:49] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[13:35:04] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[13:35:39] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[13:38:44] *** Joins: SymbioticFemale (~Symbiotic@user/SymbioticFemale)
[13:40:47] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:8c0e:5374:183d:34e2)
[13:41:01] *** Quits: bbju (~bbju@103.144.149.220) (Quit: Client closed)
[13:41:02] *** Quits: fwg (~fwg@user/fwg) (Ping timeout: 250 seconds)
[13:41:20] *** Joins: kish` (~aqua@user/aqua)
[13:41:38] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[13:42:00] *** Joins: kish` (~aqua@user/aqua)
[13:42:32] *** Joins: fwg (~fwg@user/fwg)
[13:44:26] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[13:44:28] <meator> nitrix: Thanks!
[13:48:21] *** Joins: ickk (~ickk@user/ickk)
[13:51:18] *** Quits: SymbioticFemale (~Symbiotic@user/SymbioticFemale) (Ping timeout: 276 seconds)
[13:51:18] *** Quits: System_Error (~SystemErr@user/systemerror) (Ping timeout: 276 seconds)
[13:51:46] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[13:51:55] *** Quits: fwg (~fwg@user/fwg) (Quit: .oO( zzZzZzz ...)
[13:58:32] *** Quits: jason1236 (~fltk@thunix.net) (Quit: Lost terminal)
[14:02:18] *** Quits: soul-bw (~uknown@2a02-a456-85ad-1-c8b8-f530-6f8f-f31f.fixed6.kpn.net) (Read error: Connection reset by peer)
[14:04:47] *** Joins: SymbioticFemale (~Symbiotic@user/SymbioticFemale)
[14:12:09] *** Joins: mahmutov (~mahmutov@5.176.34.32)
[14:15:31] *** Joins: strajder (~strajder@user/strajder)
[14:16:55] *** Joins: plastico (~plastico@neomutt/plastico)
[14:20:21] *** Joins: soul-d (~uknown@user/soul-d)
[14:20:57] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:21:18] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[14:21:34] *** Joins: pingpongball (~pingpongb@43.228.192.108)
[14:21:38] <pingpongball> Hey c
[14:21:42] <pingpongball> https://haxx.in/files/blasty-vs-pkexec.c
[14:21:46] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[14:22:16] *** Lord_of_Life_ is now known as Lord_of_Life
[14:22:30] <pingpongball> Anybody tell me what that program does, without looking to google? :)
[14:22:33] <pingpongball> Lord_of_Life
[14:23:19] *** Quits: pingpongball (~pingpongb@43.228.192.108) (Client Quit)
[14:23:47] *** Joins: nun (~nun@178.115.236.156.static.drei.at)
[14:27:56] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:3db3:b1d2:4da9:9983) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[14:30:00] <sham1> I just love it when people leave
[14:30:50] <pnbeast> You ready, sham1?  I'm gonna help you out.
[14:30:53] *** Quits: pnbeast (~pnbeast@2601:140:4280:6ce0::1) (Quit: WeeChat 2.7.1)
[14:31:03] <sham1> Help with what
[14:31:24] <dave0> is it just me, or is branchless coding really hard to read?
[14:31:39] <sham1> It is hard to read
[14:32:14] <dave0> i'm reading this from hackernews: https://blog.reverberate.org/2020/05/29/hoares-rebuttal-bubble-sorts-comeback.html
[14:32:23] <dave0> it's pretty nasty
[14:34:14] *** Quits: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[14:34:32] *** Joins: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[14:37:04] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[14:40:20] *** Joins: fwg (~fwg@user/fwg)
[14:49:37] *** Joins: magla (~gelignite@55d4f325.access.ecotel.net)
[14:49:38] *** Joins: mahmutov_ (~mahmutov@5.176.50.233)
[14:50:22] *** Quits: mahmutov (~mahmutov@5.176.34.32) (Ping timeout: 250 seconds)
[14:57:35] *** Quits: coruja (~coruja@user/coruja) (Quit: WeeChat 3.4)
[14:58:21] *** Joins: coruja (~coruja@user/coruja)
[14:59:34] *** Joins: bnchs__ (~bnchs@105.154.81.147)
[15:02:00] *** Quits: bnchs (~bnchs@196.89.7.84) (Ping timeout: 256 seconds)
[15:02:13] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:3db3:b1d2:4da9:9983)
[15:02:35] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[15:03:07] *** Quits: meator (~meator@user/meator) (Ping timeout: 250 seconds)
[15:06:02] *** Joins: Windshield (~Windshiel@120.20.120.248)
[15:09:22] *** Quits: chenqisu12 (~chenqisu1@183.217.200.249) (Ping timeout: 256 seconds)
[15:10:34] *** Quits: Windshield (~Windshiel@120.20.120.248) (Read error: No route to host)
[15:11:34] *** Joins: pingpongball (~pingpongb@43.228.192.108)
[15:11:39] *** Joins: Windshield (~Windshiel@120.20.120.248)
[15:13:20] *** Quits: Windshield (~Windshiel@120.20.120.248) (Read error: No route to host)
[15:14:40] *** Joins: Windshield (~Windshiel@120.20.120.248)
[15:15:52] *** Joins: Klinda (~superleag@user/klinda)
[15:19:50] *** Quits: zwr (~zwr@2804:d45:b966:fb00:d3a7:44f8:3616:d9d) (Ping timeout: 250 seconds)
[15:23:34] *** Quits: tomboy64 (~tomboy64@user/tomboy64) (Remote host closed the connection)
[15:24:19] *** Joins: tomboy64 (~tomboy64@user/tomboy64)
[15:25:09] *** Joins: MarcoFe (~marcofe@93-36-164-204.ip61.fastwebnet.it)
[15:25:56] *** Quits: MarcoFe (~marcofe@93-36-164-204.ip61.fastwebnet.it) (Remote host closed the connection)
[15:26:13] *** Joins: MarcoFe (~marcofe@93-36-164-204.ip61.fastwebnet.it)
[15:26:13] *** Parts: pingpongball (~pingpongb@43.228.192.108) ()
[15:31:02] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:31:51] *** Joins: random-nick (~random-ni@87.116.181.150)
[15:32:47] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:33:32] *** Joins: csrf (~csrf@user/csrf)
[15:34:02] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:1181:18a7:7b4:f540)
[15:34:21] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:33] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:07] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[15:38:29] *** Joins: Sadale (~Sadale@user/sadale)
[15:39:20] *** Quits: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de) (Quit: Leaving)
[15:40:21] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[15:40:23] *** Joins: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de)
[15:40:40] *** Quits: Windshield (~Windshiel@120.20.120.248) (Quit: Leaving)
[15:41:15] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[15:41:16] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[15:41:49] *** Joins: Sadale (~Sadale@user/sadale)
[15:42:52] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[15:43:29] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[15:44:38] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[15:45:06] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[15:48:14] *** Joins: constxd_ (~brad@142.167.170.88)
[15:48:34] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[15:48:50] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[15:50:32] *** Joins: oxfuxxx (~oxfuxxx@185.156.174.4)
[15:51:01] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[15:52:29] *** Joins: System_Error (~SystemErr@user/systemerror)
[15:55:07] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[15:57:28] *** Joins: chenqisu12 (~chenqisu1@183.217.200.249)
[15:58:27] *** Joins: alex11 (~alex11@user/alex11)
[16:02:46] *** Joins: robyndrake (~robyndrak@154.16.118.240)
[16:02:52] *** Quits: robyndrake (~robyndrak@154.16.118.240) (Changing host)
[16:02:52] *** Joins: robyndrake (~robyndrak@user/robyndrake)
[16:05:14] *** robyndrake is now known as robyn
[16:08:53] *** Joins: meator (~meator@user/meator)
[16:10:23] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[16:13:12] <pflanze> Following up on the VEC_FOR_EACH discussion yesterday, I realized that clang 11.0.1 refuses incidental struct declarations in `for`;
[16:13:52] <pflanze> i.e.  for (struct { ... } foo = { ... };;)  is giving "error: declaration of non-local variable in 'for' loop"
[16:14:07] <pflanze> The 3y old discussion here goes into it: https://stackoverflow.com/questions/53468223/declare-structure-within-for
[16:14:20] <pflanze> I haven't checked yet whether newer clang accepts it now.
[16:15:24] <pflanze> Bummer. I'll really have to go with an END_FOR_EACH after all.
[16:16:31] <pflanze> (And I really want a better macro system.)
[16:17:44] <pflanze> (Full example here: https://bpa.st/X35A)
[16:19:42] *** Quits: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com) (Remote host closed the connection)
[16:22:12] *** Joins: shivesh (~shivesh@user/shivesh)
[16:27:59] *** Joins: joilerv (~joilerv@135.129.250.144)
[16:28:24] <pflanze> (Or would taking the body as a macro argument be viable?  VEC_FOR_EACH(v, vs, ({ printf("%i", v); ... }))
[16:30:48] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[16:31:12] *** Joins: pulse (~pulse@user/pulse)
[16:31:38] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[16:31:53] *** Quits: robyn (~robyndrak@user/robyndrake) (Read error: Connection reset by peer)
[16:33:26] *** Quits: Sadale (~Sadale@user/sadale) (Quit: tawa pona!)
[16:33:34] *** Quits: RicardasSim (~RicardasS@78-63-172-44.static.zebra.lt) (Quit: Leaving)
[16:33:39] *** Joins: Sadale (~Sadale@user/sadale)
[16:33:51] *** Joins: mahmutov (~mahmutov@37.155.60.25)
[16:33:53] *** Joins: robyndrake (~robyndrak@154.16.118.240)
[16:33:55] *** Quits: mahmutov_ (~mahmutov@5.176.50.233) (Ping timeout: 250 seconds)
[16:34:01] *** Quits: robyndrake (~robyndrak@154.16.118.240) (Changing host)
[16:34:01] *** Joins: robyndrake (~robyndrak@user/robyndrake)
[16:34:05] *** robyndrake is now known as robyn
[16:36:42] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[16:40:16] *** Joins: Sadale (~Sadale@user/sadale)
[16:43:06] *** Joins: balkanguy (~agent@91.218.173.105)
[16:43:26] *** Quits: constxd_ (~brad@142.167.170.88) (Ping timeout: 256 seconds)
[16:44:18] *** Quits: Sadale (~Sadale@user/sadale) (Client Quit)
[16:44:22] <balkanguy> hello. How can you make C program for android but without using the fancy IDEs like android studio xamarin react native and similar
[16:44:33] *** Joins: Sadale (~Sadale@user/sadale)
[16:44:48] <balkanguy> can i just use vim with some java and then C
[16:46:51] <fizzie> Sure, if you like. There's a separate "command-line tools only" download for the Android SDK, and then it's just a matter of using Gradle + CMake ("by default") to build things.
[16:48:17] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[16:48:36] *** Joins: Sadale (~Sadale@user/sadale)
[16:50:24] *** Quits: reset (~reset@user/reset) (Quit: reset)
[16:51:13] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[16:51:44] *** Quits: fwg (~fwg@user/fwg) (Quit: .oO( zzZzZzz ...)
[16:53:26] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 250 seconds)
[16:53:43] *** Quits: chenqisu12 (~chenqisu1@183.217.200.249) (Quit: Leaving)
[16:54:06] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[16:55:04] *** Quits: joilerv (~joilerv@135.129.250.144) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:58:30] *** Joins: reset (~reset@user/reset)
[16:59:08] <balkanguy> do you need gradle for just java
[17:01:05] <fizzie> Using the Android Gradle plugin is the easiest way to build an APK, that's all. Sometimes people try to make do with the lower-level tools, and it's not *impossible*, but it's also hardly documented at all and all the examples I've seen are pretty stale.
[17:01:57] <fizzie> (Or you could build with Bazel, but if the goal is to avoid "big things" I imagine that's not desirable either.)
[17:04:59] <balkanguy> god i love c
[17:06:56] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[17:07:45] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:3db3:b1d2:4da9:9983) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:08:26] *** Joins: missogra (~missogra@dynamic-077-008-236-046.77.8.pool.telefonica.de)
[17:09:45] *** Joins: fwg (~fwg@user/fwg)
[17:09:49] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[17:11:26] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[17:12:11] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[17:12:35] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[17:14:52] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[17:15:18] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[17:16:52] *** Quits: oxfuxxx (~oxfuxxx@185.156.174.4) (Ping timeout: 256 seconds)
[17:18:31] <pflanze> What's a good way to make use of _Generic? I.e. I'll want to auto-generate the macros with the _Generic inside, from all the methods in use that belong together.
[17:19:20] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[17:19:37] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[17:20:57] *** Quits: alch (~alch@151.82.206.184) (Read error: Connection reset by peer)
[17:21:00] *** Joins: AmR (~AmREiSa@156.207.146.251)
[17:21:36] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[17:22:18] <pflanze> The difficulty here is how to generate it for exactly those methods used (how to make the generator know of the types used, best via the includes, and then how to generate it via the make process).
[17:23:15] *** Joins: oxfuxxx (~oxfuxxx@pop.92-184-110-249.mobile.abo.orange.fr)
[17:24:07] <pflanze> (Again something that could be solved in part by having the ability to output macros/processing instructions from macros.)
[17:25:03] *** Joins: alch (~alch@bo-18-133-122.service.infuturo.it)
[17:27:57] *** Quits: missogra (~missogra@dynamic-077-008-236-046.77.8.pool.telefonica.de) (Ping timeout: 240 seconds)
[17:32:28] *** Joins: badsektor (~badsektor@user/badsektor)
[17:36:45] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[17:36:56] *** Quits: bnchs__ (~bnchs@105.154.81.147) (Quit: Leaving)
[17:37:47] *** Quits: balkanguy (~agent@91.218.173.105) (Quit: leaving)
[17:38:33] *** Quits: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net) (Remote host closed the connection)
[17:39:38] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 260 seconds)
[17:41:16] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[17:42:27] *** sdk_- is now known as sdk_
[17:45:37] *** Quits: koffeinfriedhof (~koffeinfr@ubuntuusers/moderation/koffeinfriedhof) (Ping timeout: 240 seconds)
[17:47:18] *** Joins: ugeek (~geek@p200300c05713e80002248cfffed393ac.dip0.t-ipconnect.de)
[17:47:37] *** Parts: ugeek (~geek@p200300c05713e80002248cfffed393ac.dip0.t-ipconnect.de) ()
[17:47:55] *** Joins: koffeinfriedhof (~koffeinfr@ubuntuusers/moderation/koffeinfriedhof)
[17:48:02] *** Quits: oxfuxxx (~oxfuxxx@pop.92-184-110-249.mobile.abo.orange.fr) (Ping timeout: 256 seconds)
[17:49:05] *** Joins: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net)
[17:54:03] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:8c0e:5374:183d:34e2) (Read error: Connection reset by peer)
[17:54:59] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[17:55:00] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[17:56:28] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[18:01:38] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[18:06:18] *** Quits: badsektor (~badsektor@user/badsektor) (Quit: Leaving)
[18:06:37] *** Quits: meator (~meator@user/meator) (Ping timeout: 240 seconds)
[18:07:12] *** Joins: meator (~meator@user/meator)
[18:07:36] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[18:09:13] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[18:14:03] *** Quits: Neutron7 (~stillnoob@96.73.191.185) (Quit: Leaving)
[18:18:52] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:1181:18a7:7b4:f540) (Quit: Quit)
[18:19:12] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[18:22:13] *** Joins: ZedHedTed (~ZedHedTed@user/zedhedted)
[18:25:12] *** Quits: ickk (~ickk@user/ickk) (Ping timeout: 260 seconds)
[18:25:22] *** Joins: bick (~kotaman@94.46.203.147)
[18:25:28] *** Joins: Klinda (~superleag@user/klinda)
[18:26:43] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[18:28:31] *** Joins: irek (~irek@public-gprs206216.centertel.pl)
[18:30:06] *** Joins: ic3blx_ (~ic3blx___@87.116.163.73)
[18:30:06] *** Quits: ic3blx_ (~ic3blx___@87.116.163.73) (Changing host)
[18:30:06] *** Joins: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740)
[18:30:26] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[18:30:30] *** Quits: sr20det (~sr20det@user/sr20det) (Ping timeout: 250 seconds)
[18:35:46] *** Joins: sr20det (~sr20det@user/sr20det)
[18:43:17] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:7d8e:cf48:737f:ec3)
[18:50:36] *** Joins: geranim0 (~geranim0@d-132-204-221-88.res.umontreal.ca)
[18:52:39] *** Quits: geranim0 (~geranim0@d-132-204-221-88.res.umontreal.ca) (Client Quit)
[18:53:52] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[18:54:19] *** Quits: bick (~kotaman@94.46.203.147) (Ping timeout: 250 seconds)
[18:54:55] *** Joins: EtherNet_ (~ethernet@user/ethernet)
[18:55:02] *** Quits: EtherNet_ (~ethernet@user/ethernet) (Client Quit)
[18:55:28] *** Joins: immibis_ (~hexchat@62.156.144.218)
[18:56:13] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[18:56:18] *** Quits: EtherNet (~ethernet@user/ethernet) (Quit: WeeChat 3.4)
[18:57:24] *** Joins: bick (~kotaman@94.46.203.147)
[18:57:32] *** Quits: immibis (~hexchat@62.156.144.218) (Ping timeout: 240 seconds)
[18:57:57] *** Joins: bbju (~bbju@103.144.149.220)
[18:58:13] *** Joins: EtherNet (~ethernet@user/ethernet)
[18:59:53] *** Joins: crankslider (~slidercra@user/slidercrank)
[19:00:50] *** Quits: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it) (Ping timeout: 250 seconds)
[19:08:59] *** Quits: karthy (~karthy@162.216.143.148) (Quit: Client closed)
[19:10:49] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[19:12:13] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[19:12:13] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[19:12:13] *** Joins: wroathe (~wroathe@user/wroathe)
[19:16:17] *** Quits: vimart (~ketiv@cpc148896-sgyl44-2-0-cust233.18-2.cable.virginm.net) (Quit: WeeChat 3.3)
[19:16:25] *** Quits: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740) (Ping timeout: 250 seconds)
[19:19:26] *** Joins: pucara (~i@host14.181-1-101.telecom.net.ar)
[19:21:09] *** Joins: notzmv (~zmv@user/notzmv)
[19:22:26] *** Quits: mormue (~mormue@static.29.186.130.94.clients.your-server.de) (Write error: Connection reset by peer)
[19:22:36] *** Quits: TVH767 (~TVH7@containerhost01.de01-nbg01.dev.ti-more.net) (Read error: Connection reset by peer)
[19:22:52] *** Joins: TVH767 (~TVH7@containerhost01.de01-nbg01.dev.ti-more.net)
[19:22:57] *** Quits: katsuragi (katsuragi@tilde.institute) (Ping timeout: 240 seconds)
[19:22:58] *** Joins: mormue (~mormue@static.29.186.130.94.clients.your-server.de)
[19:23:18] *** Joins: katsuragi (katsuragi@tilde.institute)
[19:25:26] *** Joins: Guest24 (~Guest24@171.113.205.223)
[19:26:44] *** Quits: Guest24 (~Guest24@171.113.205.223) (Client Quit)
[19:26:59] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Quit: WeeChat 3.3)
[19:27:42] *** Joins: the_lanetly_052 (~the_lanet@194.135.155.67)
[19:29:28] *** Quits: the_lanetly_052_ (~the_lanet@185.30.90.57) (Ping timeout: 256 seconds)
[19:35:22] *** Joins: remavas (~Remavas@user/remavas)
[19:35:41] *** Quits: remavas (~Remavas@user/remavas) (Client Quit)
[19:36:36] *** Joins: zwr (~zwr@2804:d45:b966:fb00:9fc4:4e83:5c60:86bb)
[19:39:42] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:3db3:b1d2:4da9:9983)
[19:40:42] *** Quits: System_Error (~SystemErr@user/systemerror) (Remote host closed the connection)
[19:44:12] *** Joins: ic3blx_ (~ic3blx___@87.116.177.49)
[19:44:12] *** Quits: ic3blx_ (~ic3blx___@87.116.177.49) (Changing host)
[19:44:12] *** Joins: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740)
[19:44:31] *** Quits: bick (~kotaman@94.46.203.147) (Ping timeout: 245 seconds)
[19:46:57] *** Quits: clamiax (~clamiax@net-93-144-125-193.cust.dsl.teletu.it) (Ping timeout: 240 seconds)
[19:48:54] *** Quits: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740) (Ping timeout: 260 seconds)
[19:51:31] *** Joins: mad_enz (~mad_enz@lnsm3-torontoxn-142-116-106-108.internet.virginmobile.ca)
[19:51:37] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 240 seconds)
[19:51:49] *** Joins: bick (~kotaman@94.46.203.147)
[19:52:57] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[19:53:38] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[19:53:50] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[19:58:54] *** Quits: sr20det (~sr20det@user/sr20det) (Ping timeout: 250 seconds)
[19:59:58] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41)
[20:04:09] *** Joins: sr20det (~sr20det@user/sr20det)
[20:12:08] *** Joins: Sadale (~Sadale@user/sadale)
[20:12:08] *** Quits: Sadale (~Sadale@user/sadale) (Remote host closed the connection)
[20:15:02] *** Joins: zmt01 (~zmt00@user/zmt00)
[20:15:24] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[20:15:27] *** Quits: magla (~gelignite@55d4f325.access.ecotel.net) (Quit: Stay safe!)
[20:16:02] *** Quits: fmlatghor (~lcoogan@2601:5cd:8100:2890::6) (Quit: WeeChat 3.2)
[20:16:17] *** Joins: fmlatghor (~lcoogan@2601:5cd:8100:2890::6)
[20:18:42] *** Quits: SymbioticFemale (~Symbiotic@user/SymbioticFemale) (Ping timeout: 276 seconds)
[20:20:10] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[20:20:55] *** Joins: Sadale (~Sadale@user/sadale)
[20:21:31] *** Joins: soapsudsxx (~soapsudsx@209.221.40.147)
[20:26:13] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:26:14] *** Quits: bick (~kotaman@94.46.203.147) (Ping timeout: 260 seconds)
[20:26:44] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[20:27:57] *** Joins: owensjrw (~owensjrw1@2600:1700:b5b0:6380::41)
[20:28:02] <owensjrw> Hello all.
[20:28:32] <owensjrw> Can you tell me why the output of this is 33 and not 4. https://onlinegdb.com/sVRZYPoVI
[20:29:29] <owensjrw> When I follow it on paper I show after 7 passes of fun "return b" would be invoked thereby making "z" 4.
[20:30:29] *** Joins: badsektor (~badsektor@user/badsektor)
[20:30:47] *** Quits: badsektor (~badsektor@user/badsektor) (Remote host closed the connection)
[20:30:49] <ChoHag> What are you expecting the first recursive call to fun to do?
[20:31:12] <ChoHag> What it actually does is call it with a & b halved, but then discard the result.
[20:32:34] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[20:32:49] <ChoHag> So the call in main simply becomes fun(x++-1, ++y+1) or fun(x-1, y+2) so I think you'll get 24.
[20:33:23] <owensjrw> I am following that -->  fun(13, 7), fun(12, 9), fun(6, 4), fun(3, 2), fun(2, 4), fun(1, 2), fun(0, 4) where retun b should be invoked.
[20:34:11] <ChoHag> Not fun(6,4)
[20:34:14] <ChoHag> That is called but ignored.
[20:34:38] *** Quits: Jenna16bit (~j16bit@c-73-228-39-16.hsd1.nm.comcast.net) (Ping timeout: 256 seconds)
[20:34:48] <ChoHag> fun(13,7) -> fun(12,9) -> fun(11, 11) -> fun(10, 13) -> ...
[20:34:56] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:35:37] <ChoHag> put printf("fun(%d,%d)\n", a, b); at the top of the function.
[20:36:23] *** Joins: Narrat (~omnius@p200300df5f4d4df406ea56fffe2e7cdc.dip0.t-ipconnect.de)
[20:38:22] <owensjrw> I like that printf idea, but it came up with my numbers and kept cycling through after return b should have invoked.
[20:39:21] <ChoHag> If you remove the second if block and its call to fun then, apart from less output if you've included that printf, your result will be the same.
[20:40:13] <ChoHag> It's quite likely that the optimiser has removed it itself.
[20:40:19] <owensjrw> https://www.onlinegdb.com/fork/sVRZYPoVI#
[20:40:56] <owensjrw> It was a question from another group to explain it, I do not know how to.
[20:41:16] <ChoHag> Well you can start by removing lines 6-9 because they have no effect at all.
[20:41:51] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[20:42:01] <ChoHag> Then that return line is unnecessarily confusing because x++ or ++x are used to *change* x, but since you're about to return how a or b are changed is irrelevant.
[20:42:25] <ChoHag> It is functionally equivalent to return fun(a - 1, b + 2);
[20:43:06] <ChoHag> Remove lines 6-9 and change line 11 and it should become clearer.
[20:43:08] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[20:43:08] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[20:43:08] *** Joins: wroathe (~wroathe@user/wroathe)
[20:43:12] *** Joins: argonautx (~argonautx@i5E867211.versanet.de)
[20:43:27] <ChoHag> Note that your compiler almost certainly does so itself.
[20:43:32] *** Joins: System_Error (~SystemErr@user/systemerror)
[20:43:42] *** Quits: meator (~meator@user/meator) (Ping timeout: 256 seconds)
[20:45:09] <owensjrw> lines 6 - 9 were cutting a and b in integer half if a mod 2 is equal to zero, there are three passes where that was true.
[20:45:10] <ChoHag> You can remove noise in main by replacing it in its entirety with return printf("%d\n", fun(13, 7));
[20:45:17] <ChoHag> They are not doing that.
[20:45:17] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 240 seconds)
[20:45:32] <ChoHag> They are calling fun with some numbers and throwing away the result.
[20:45:49] <fizzie> Because there's no `return` statement in the `if (a%2==0)` condition.
[20:46:00] <ChoHag> If you did fun(a /= 2, b /= 2) then a and b would be halved in-place.
[20:46:15] <ChoHag> Or yeah, return the result.
[20:46:39] *** Joins: crashrep (~crashrep@user/crashrep)
[20:47:19] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:1181:18a7:7b4:f540)
[20:47:28] *** Joins: imm_ (~imm_@user/imm/x-3405860)
[20:48:03] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[20:48:09] <owensjrw> If i run it with the printf statement is shows fun(13, 7) > fun(12, 9) > fun(6, 4) > fun(3, 2) > fun(2, 4) > fun(1, 2) > fun(0, 4) > fun(1, 6) ... fun(0,33) and returns 33.
[20:48:43] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41) (Ping timeout: 250 seconds)
[20:48:44] *** Quits: bbju (~bbju@103.144.149.220) (Quit: Client closed)
[20:48:49] *** Quits: clockworkgirl (sophie@user/clockworkgirl) (Quit: leaving)
[20:49:12] *** Joins: clockworkgirl (sophie@funkykitty.net)
[20:49:12] *** Quits: clockworkgirl (sophie@funkykitty.net) (Changing host)
[20:49:12] *** Joins: clockworkgirl (sophie@user/clockworkgirl)
[20:49:32] <fizzie> Reasonable enough.
[20:49:34] <owensjrw> I just cannot explain the why, I don't think the author wants the program changed, he or she is wondering why.
[20:50:07] <fizzie> See, when `a%2==0`, the function will recurse *twice*.
[20:50:16] *** Quits: clockworkgirl (sophie@user/clockworkgirl) (Client Quit)
[20:50:24] *** Joins: clockworkgirl (sophie@funkykitty.net)
[20:50:24] *** Quits: clockworkgirl (sophie@funkykitty.net) (Changing host)
[20:50:24] *** Joins: clockworkgirl (sophie@user/clockworkgirl)
[20:50:39] *** Joins: jx0 (~jx0@199.229.250.139)
[20:50:50] *** Joins: Jenna16bit (~j16bit@c-73-228-39-16.hsd1.nm.comcast.net)
[20:50:50] <fizzie> First from the call to fun(a/2, b/2), and when that (eventually) returns, from the call at the end of the function.
[20:50:54] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Ping timeout: 250 seconds)
[20:51:04] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:a9ca:f4c8:c996:a5a2)
[20:51:04] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:a9ca:f4c8:c996:a5a2) (Changing host)
[20:51:04] *** Joins: skapata (~Skapata@user/skapata)
[20:51:46] <fizzie> So for fun(12, 9), there's first the call fun(6, 4) (and all the calls it makes), followed by a call to fun(11, 11).
[20:52:37] <owensjrw> So it goes until both calls where a == 0?
[20:52:43] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[20:53:57] <ChoHag> owensjrw: The why is because assumptions are wrong.
[20:54:05] <fizzie> Well, try a smaller example first if it's still unclear. fun(3, 0) for example.
[20:54:10] <ChoHag> There is an assumption that lines 6-9 have an effect. They do not.
[20:54:35] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[20:54:53] <ChoHag> They cause the CPU to spin until the actually-effective line 11 can return its obscured result.
[20:55:15] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[20:55:32] <ChoHag> Or, rather, they cause the compiler's optimiser to throw them away.
[20:55:45] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[20:55:51] *** Quits: jx0 (~jx0@199.229.250.139) (Quit: poof!)
[20:56:03] <ChoHag> (Unless you include a printf statement since the compiler knows that has side-effects it can't disregard)
[20:56:57] <fizzie> fun(3, 0) calls fun(2, 2); fun(2, 2) first { calls fun(1, 1), which calls fun(0, 3), which returns 3 }, discards the resulting 3, then calls fun(1, 4), which calls fun(0, 6), which returns 6.
[20:57:02] *** Joins: crashrep (~crashrep@user/crashrep)
[20:58:21] <owensjrw> Because everytime fun(a/2, b/2) gets called its another function on the stack and they all have to be processed, am I getting there?
[20:58:55] <ChoHag> owensjrw: When I suggested changing the code I didn't mean in order to present the changes to whomever has given you this, but to demonstrate that post-change there was no difference in outcome.
[20:59:27] <ChoHag> No. fun(a/2, b/2) is in every way it is possible to be irrelevant, irrelevant.
[20:59:47] <ChoHag> How many ways can I say it?
[21:00:08] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:3db3:b1d2:4da9:9983) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:00:30] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293)
[21:01:21] <owensjrw> That was pretty cool ChoHag it did come up to 33 commenting out those lines.
[21:02:12] <ChoHag> So then remove them from your view so that they're not cluttering your thinking.
[21:02:33] <ChoHag> They're there in the original code but since they have no effect on the outcome they are not part of the reason why the outcome is what it is.
[21:02:54] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[21:02:54] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[21:02:54] *** Joins: wroathe (~wroathe@user/wroathe)
[21:04:26] <ChoHag> Then if you comment out the original line-11 return statement and replace it with 'return fun(a - 1, b + 2)' you can verify that the output is still the same.
[21:04:42] *** Joins: indicozy (~indicozy@87.243.17.61)
[21:04:48] *** Quits: fe23 (~fe23@2409:8a34:477:2010:d9de:c826:f9b6:c8bb) (Quit: fe23)
[21:05:58] <ChoHag> I think it is. I'd never combine ++x or x++ with other maths without enclosing it in () so I'm not 100% certain there are no edge cases here. C loves its edge cases.
[21:06:34] <owensjrw> I was following the a++-1 and ++b+1 being equal to a -1 and b +1
[21:06:48] <ChoHag> b + *2*
[21:07:07] <owensjrw> I think the author put it in there just to make it more confusing.
[21:07:09] *** Joins: Akuli (~Akuli@82-203-161-27.bb.dnainternet.fi)
[21:07:10] <ChoHag> (a++ => a) but (++a => a+1)
[21:07:15] <owensjrw> Yes fat finger +2
[21:08:05] <ChoHag> Definitely. Nobody writes code like that unless they're trolling.
[21:09:36] <owensjrw> That is new to me.. what is trolling in this context?
[21:09:56] <ChoHag> Writing code that is deliberately obfuscated.
[21:10:10] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:b145:6efe:44b7:516c)
[21:10:54] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[21:10:58] <ChoHag> The whole point of a++ and ++b is to change a and b, but they're not used any more after that statement so changing them is not important.
[21:11:23] <ChoHag> Their presence is to showcase the difference between post-increment and pre-increment.
[21:11:33] <ChoHag> And try to throw you off-track.
[21:11:55] <owensjrw> What would be the purpose to write obscure, unclear, or unintelligible code? Yes I had to look your work up.
[21:12:20] <ChoHag> To make noobs work for their knowledge.
[21:12:26] <owensjrw> **word**
[21:12:50] <ChoHag> Your teacher found it hard to learn and so you should too.
[21:13:00] <owensjrw> In that case I guess it worked, I want to know the why as well ;-)
[21:13:38] <ChoHag> The why of what?
[21:13:45] <owensjrw> As always you all are great. I appreciate the help.
[21:14:02] <owensjrw> Always want to know the why of how it works.
[21:14:27] *** Joins: magla (~gelignite@55d4f325.access.ecotel.net)
[21:14:57] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Ping timeout: 240 seconds)
[21:15:14] <ChoHag> Funny. I recall a discussion the other day on one of the techbro websites where people were adamant that nobody wants to know how stuff works under the hood in order to learn it, or that doing so was even useful or practical.
[21:15:18] <owensjrw> The world is my teacher :-) I am an old man close to retirement, just learning.
[21:16:37] <owensjrw> I am really horrible at this programming compared to you all but I want to know more about it so I've started reading books on assembly.
[21:16:52] <ChoHag> owensjrw: Don't look at it that way.
[21:17:06] <ChoHag> This stuff is easy to learn when you're young so some of us did it without thinking.
[21:17:41] <ChoHag> Looking back, the amount of mind-numbing shit I had to go through to learn this ... only a kid could possibly put up with it.
[21:18:42] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[21:18:44] <ChoHag> The trick to learning programming is to never give up because that would mean admitting that you are, quite literally, dumber than a rock.
[21:18:58] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[21:19:36] <owensjrw> My head does make a lot of racket when I shake it, kinda like a box of something, but I forge forward. :-)
[21:19:57] <owensjrw> You all are great thanks for the conversation, and help.
[21:20:08] <owensjrw> May be back later today.
[21:20:45] *** Quits: alch (~alch@bo-18-133-122.service.infuturo.it) (Read error: Connection reset by peer)
[21:22:43] *** Joins: bick (~kotaman@94.46.203.147)
[21:24:42] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 250 seconds)
[21:25:24] *** Joins: alch (~alch@ca-18-219-104.service.infuturo.it)
[21:25:41] *** Joins: kspalaiologos (~kspalaiol@user/kspalaiologos)
[21:25:52] <owensjrw> Cho ever spend any time on a Aircraft carrier?
[21:26:25] <ChoHag> I have not.
[21:26:27] <ChoHag> Sounds fun.
[21:29:32] <owensjrw> Seen someone on linkedin that resembled you. I had a few Navy years back in the early 90's.
[21:30:50] *** Quits: bick (~kotaman@94.46.203.147) (Quit: Lost terminal)
[21:32:57] <owensjrw> Time to start the wings. You all are invited as long as you are rooting for the KC Cheifs and the SF 49ers.
[21:33:11] <owensjrw> Have a great day.
[21:35:08] <ChoHag> I'm on the other side of the pond.
[21:36:58] *** Quits: the_lanetly_052 (~the_lanet@194.135.155.67) (Ping timeout: 256 seconds)
[21:37:01] *** Joins: badsektor (~badsektor@user/badsektor)
[21:37:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[21:39:03] *** Quits: dangrenier83 (~nil@user/dangrenier83) (Read error: Connection reset by peer)
[21:40:27] *** Quits: owensjrw (~owensjrw1@2600:1700:b5b0:6380::41) (Quit: Leaving)
[21:43:00] *** Quits: baltazar (~baltazar@84-236-21-114.pool.digikabel.hu) (Quit: rebooting)
[21:44:48] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:3db3:b1d2:4da9:9983)
[21:45:13] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[21:45:13] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[21:45:13] *** Joins: wroathe (~wroathe@user/wroathe)
[21:45:40] *** Joins: cosimone` (~user@93-34-132-136.ip49.fastwebnet.it)
[21:46:02] *** Joins: mahmutov_ (~mahmutov@5.176.40.6)
[21:47:26] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 260 seconds)
[21:47:44] *** Quits: mahmutov (~mahmutov@37.155.60.25) (Ping timeout: 256 seconds)
[21:48:08] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[21:50:15] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[21:51:18] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:b145:6efe:44b7:516c) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:51:41] *** Quits: pulse (~pulse@user/pulse) (Read error: Connection reset by peer)
[21:52:05] *** Joins: pulse (~pulse@user/pulse)
[21:53:06] *** Joins: baltazar (~baltazar@84-236-21-114.pool.digikabel.hu)
[21:54:06] *** Quits: cosimone` (~user@93-34-132-136.ip49.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[21:54:28] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[21:54:46] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:b145:6efe:44b7:516c)
[21:56:09] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[21:56:14] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 256 seconds)
[22:03:04] *** Quits: badsektor (~badsektor@user/badsektor) (Quit: Leaving)
[22:07:47] *** Joins: Cleverness (~Clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[22:09:23] *** Joins: karakedi (~eAC53C340@user/karakedi)
[22:10:35] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Quit: WeeChat 3.3)
[22:10:57] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Ping timeout: 240 seconds)
[22:11:48] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[22:13:43] *** Quits: indicozy (~indicozy@87.243.17.61) (Quit: indicozy)
[22:16:22] *** Quits: carlavilla (~carlavill@2a0c:5a84:320d:6900:21f:16ff:fe0f:275a) (Ping timeout: 260 seconds)
[22:16:23] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[22:17:39] *** Quits: System_Error (~SystemErr@user/systemerror) (Ping timeout: 276 seconds)
[22:18:06] *** Quits: nmat[m] (~nmatm]@2001:470:69fc:105::1:5553) (Quit: Bridge terminating on SIGTERM)
[22:18:07] *** Quits: slact[m] (~slact@2001:470:69fc:105::1:5ee3) (Quit: Bridge terminating on SIGTERM)
[22:18:07] *** Quits: Irvise (~irvise@2001:470:69fc:105::84c) (Quit: Bridge terminating on SIGTERM)
[22:18:08] *** Quits: dalz (~dalz@2001:470:69fc:105::2ea) (Quit: Bridge terminating on SIGTERM)
[22:18:08] *** Quits: not_a_robot[m] (~notarobot@2001:470:69fc:105::dd37) (Quit: Bridge terminating on SIGTERM)
[22:18:08] *** Quits: M101donutman[m] (~M101donut@2001:470:69fc:105::d51) (Quit: Bridge terminating on SIGTERM)
[22:18:09] *** Quits: randy408[m] (~randy408m@2001:470:69fc:105::2f5e) (Quit: Bridge terminating on SIGTERM)
[22:18:10] *** Quits: mphojele (~mphojelem@2001:470:69fc:105::35ab) (Quit: Bridge terminating on SIGTERM)
[22:18:10] *** Quits: Bazsalanszky[m] (~bazsalans@2001:470:69fc:105::6fe) (Quit: Bridge terminating on SIGTERM)
[22:18:11] *** Quits: nomagno (~nomagno@2001:470:69fc:105::c1f0) (Quit: Bridge terminating on SIGTERM)
[22:18:11] *** Quits: lupin592[m] (~lupin592m@2001:470:69fc:105::1:6718) (Quit: Bridge terminating on SIGTERM)
[22:18:11] *** Quits: jinsun_ (~jinsun@user/jinsun) (Quit: Bridge terminating on SIGTERM)
[22:18:11] *** Quits: spokojni[m] (~spokojnio@2001:470:69fc:105::1:3fb2) (Quit: Bridge terminating on SIGTERM)
[22:18:11] *** Quits: dlozeve[m] (~dlozevema@2001:470:69fc:105::1:1c58) (Quit: Bridge terminating on SIGTERM)
[22:18:11] *** Quits: nopenope[m] (~repmovsb@2001:470:69fc:105::1:274e) (Quit: Bridge terminating on SIGTERM)
[22:18:11] *** Quits: NRK[m] (~nrkmatrix@2001:470:69fc:105::4e30) (Quit: Bridge terminating on SIGTERM)
[22:18:11] *** Quits: Neui[m] (~neuimatri@2001:470:69fc:105::745) (Quit: Bridge terminating on SIGTERM)
[22:18:11] *** Quits: go4godvin (~go4godvin@user/go4godvin) (Quit: Bridge terminating on SIGTERM)
[22:18:11] *** Quits: skyeto[m] (~skyetosky@2001:470:69fc:105::c2fe) (Quit: Bridge terminating on SIGTERM)
[22:18:11] *** Quits: explosion-mental (~explosion@2001:470:69fc:105::dac2) (Quit: Bridge terminating on SIGTERM)
[22:18:12] *** Quits: f33d1[m] (~g0nkstead@2001:470:69fc:105::1:320b) (Quit: Bridge terminating on SIGTERM)
[22:18:12] *** Quits: milia[m] (~mlliarmma@2001:470:69fc:105::1:4631) (Quit: Bridge terminating on SIGTERM)
[22:18:12] *** Quits: Sohaib[m] (~smalinux@2001:470:69fc:105::31b5) (Quit: Bridge terminating on SIGTERM)
[22:18:12] *** Quits: flashd[m] (~flashdmat@2001:470:69fc:105::1:3d0b) (Quit: Bridge terminating on SIGTERM)
[22:18:12] *** Quits: mattmurr[m] (~mattmurrm@2001:470:69fc:105::1:5ea0) (Quit: Bridge terminating on SIGTERM)
[22:18:12] *** Quits: james[m] (~jamesjame@2001:470:69fc:105::1:5aa1) (Quit: Bridge terminating on SIGTERM)
[22:18:12] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Bridge terminating on SIGTERM)
[22:18:12] *** Quits: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4) (Quit: Bridge terminating on SIGTERM)
[22:18:12] *** Quits: psydroid (~psydroid@user/psydroid) (Quit: Bridge terminating on SIGTERM)
[22:18:12] *** Quits: archdark[m] (~ryonagana@2001:470:69fc:105::fd27) (Quit: Bridge terminating on SIGTERM)
[22:18:12] *** Quits: hussam (~hussam@user/hussam) (Quit: Bridge terminating on SIGTERM)
[22:18:12] *** Quits: kolmogorov[m] (~kolmogoro@2001:470:69fc:105::e03b) (Quit: Bridge terminating on SIGTERM)
[22:18:12] *** Quits: carrot98[m] (~carrot98m@2001:470:69fc:105::1:5fcc) (Quit: Bridge terminating on SIGTERM)
[22:18:12] *** Quits: silkut42[m] (~silkutmat@2001:470:69fc:105::1:6530) (Quit: Bridge terminating on SIGTERM)
[22:18:12] *** Quits: aura[m] (~aurabindo@2001:470:69fc:105::4204) (Quit: Bridge terminating on SIGTERM)
[22:18:12] *** Quits: magicalegg[m] (~magicaleg@2001:470:69fc:105::1:52e9) (Quit: Bridge terminating on SIGTERM)
[22:18:14] *** Quits: atulu (~atulum]@2001:470:69fc:105::d50c) (Quit: Bridge terminating on SIGTERM)
[22:18:16] *** Quits: Akawama[m] (~akawama@user/akawama) (Quit: Bridge terminating on SIGTERM)
[22:18:17] *** Quits: anomalous_creato (~anomalous@2001:470:69fc:105::6ed1) (Quit: Bridge terminating on SIGTERM)
[22:20:54] *** Quits: MrC (Ben@mrbenc.net) (Quit: Reboot, Updating ZNC, or Switching servers.)
[22:22:04] *** Joins: Irvise (~irvise@2001:470:69fc:105::84c)
[22:23:26] *** Joins: System_Error (~SystemErr@user/systemerror)
[22:24:46] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 260 seconds)
[22:25:12] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[22:27:26] *** Joins: inlight (~thomas@157.35.3.148)
[22:27:26] *** Quits: inlight (~thomas@157.35.3.148) (Changing host)
[22:27:26] *** Joins: inlight (~thomas@user/inlight)
[22:28:23] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[22:29:51] *** Joins: Atque (~Atque@user/atque)
[22:30:39] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:7d8e:cf48:737f:ec3) (Read error: Connection reset by peer)
[22:30:53] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[22:32:44] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:50b5:b57f:7251:ce23)
[22:32:47] *** Joins: tech_exorcist_ (txrcst@user/tech-exorcist/x-0447479)
[22:34:12] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Ping timeout: 256 seconds)
[22:34:20] *** Joins: meator (~meator@user/meator)
[22:36:54] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 260 seconds)
[22:37:59] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[22:39:22] *** Quits: kspalaiologos (~kspalaiol@user/kspalaiologos) (Quit: Leaving)
[22:41:28] *** Quits: clockworkgirl (sophie@user/clockworkgirl) (Quit: leaving)
[22:41:37] *** Joins: clockworkgirl (sophie@funkykitty.net)
[22:41:37] *** Quits: clockworkgirl (sophie@funkykitty.net) (Changing host)
[22:41:37] *** Joins: clockworkgirl (sophie@user/clockworkgirl)
[22:42:23] *** Joins: ramiroencinas (~ramiroenc@60.red-81-38-117.dynamicip.rima-tde.net)
[22:44:49] *** Quits: clockworkgirl (sophie@user/clockworkgirl) (Client Quit)
[22:44:59] *** Joins: clockworkgirl (sophie@funkykitty.net)
[22:44:59] *** Quits: clockworkgirl (sophie@funkykitty.net) (Changing host)
[22:44:59] *** Joins: clockworkgirl (sophie@user/clockworkgirl)
[22:45:05] *** Quits: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:22] *** Joins: Nutte35 (~Nutte@202.153.80.2)
[22:46:31] *** Joins: constxd_ (~brad@142.167.170.88)
[22:47:02] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 250 seconds)
[22:47:10] *** Joins: cart_man (~rynot@host-78-144-125-214.as13285.net)
[22:47:44] *** Quits: ramiroencinas (~ramiroenc@60.red-81-38-117.dynamicip.rima-tde.net) (Quit: Connection closed)
[22:48:29] *** Joins: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com)
[22:49:38] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[22:49:53] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[22:54:33] <constxd_> kings
[22:54:50] *** Joins: archdark[m] (~ryonagana@2001:470:69fc:105::fd27)
[22:55:03] *** Joins: skyeto[m] (~skyetosky@2001:470:69fc:105::c2fe)
[22:55:17] *** Joins: aura[m] (~aurabindo@2001:470:69fc:105::4204)
[22:55:17] *** Joins: dalz (~dalz@2001:470:69fc:105::2ea)
[22:55:17] *** Joins: hussam (~hussam@user/hussam)
[22:55:17] *** Joins: lupin592[m] (~lupin592m@2001:470:69fc:105::1:6718)
[22:55:17] *** Joins: james[m]1 (~jamesjame@2001:470:69fc:105::1:5aa1)
[22:55:17] *** Joins: NRK[m] (~nrkmatrix@2001:470:69fc:105::4e30)
[22:55:17] *** Joins: psydroid (~psydroid@user/psydroid)
[22:55:30] *** Joins: Neui[m] (~neuimatri@2001:470:69fc:105::745)
[22:55:30] *** Joins: anomalous_creato (~anomalous@2001:470:69fc:105::6ed1)
[22:55:30] *** Joins: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4)
[22:55:30] *** Joins: atulu (~atulum]@2001:470:69fc:105::d50c)
[22:55:30] *** Joins: randy408[m] (~randy408m@2001:470:69fc:105::2f5e)
[22:55:30] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[22:55:30] *** Joins: kolmogorov[m] (~kolmogoro@2001:470:69fc:105::e03b)
[22:55:31] *** Joins: dlozeve[m] (~dlozevema@2001:470:69fc:105::1:1c58)
[22:55:31] *** Joins: mattmurr[m] (~mattmurrm@2001:470:69fc:105::1:5ea0)
[22:55:31] *** Joins: Bazsalanszky[m] (~bazsalans@2001:470:69fc:105::6fe)
[22:55:31] *** Joins: jinsun_ (~jinsun@user/jinsun)
[22:55:31] *** Joins: spokojni[m] (~spokojnio@2001:470:69fc:105::1:3fb2)
[22:55:31] *** Joins: magicalegg[m] (~magicaleg@2001:470:69fc:105::1:52e9)
[22:55:31] *** Joins: nomagno (~nomagno@2001:470:69fc:105::c1f0)
[22:55:32] *** Joins: Sohaib[m] (~smalinux@2001:470:69fc:105::31b5)
[22:55:32] *** Joins: not_a_robot[m] (~notarobot@2001:470:69fc:105::dd37)
[22:55:32] *** Joins: nopenope[m] (~repmovsb@2001:470:69fc:105::1:274e)
[22:55:45] *** Joins: explosion-mental (~explosion@2001:470:69fc:105::dac2)
[22:55:45] *** Joins: f33d1[m] (~g0nkstead@2001:470:69fc:105::1:320b)
[22:55:45] *** Joins: milia[m] (~mlliarmma@2001:470:69fc:105::1:4631)
[22:55:46] *** Joins: slact[m] (~slact@2001:470:69fc:105::1:5ee3)
[22:55:58] *** Joins: carrot98[m] (~carrot98m@2001:470:69fc:105::1:5fcc)
[22:55:58] *** Joins: silkut42[m] (~silkutmat@2001:470:69fc:105::1:6530)
[22:55:58] *** Quits: Nutte35 (~Nutte@202.153.80.2) ()
[22:55:58] *** Joins: nmat[m] (~nmatm]@2001:470:69fc:105::1:5553)
[22:55:58] *** Joins: flashd[m] (~flashdmat@2001:470:69fc:105::1:3d0b)
[22:55:59] *** Joins: Akawama[m] (~akawama@user/akawama)
[22:55:59] *** Joins: mphojele (~mphojelem@2001:470:69fc:105::35ab)
[22:56:00] *** Quits: nopenope[m] (~repmovsb@2001:470:69fc:105::1:274e) (Quit: Client limit exceeded: 20000)
[22:56:00] *** Quits: dlozeve[m] (~dlozevema@2001:470:69fc:105::1:1c58) (Quit: Client limit exceeded: 20000)
[22:56:06] *** Joins: go4godvin (~go4godvin@user/go4godvin)
[22:56:06] *** Joins: M101donutman[m] (~M101donut@2001:470:69fc:105::d51)
[22:56:12] *** Joins: Nutte35 (~Nutte@202.153.80.2)
[22:56:13] *** Quits: f33d1[m] (~g0nkstead@2001:470:69fc:105::1:320b) (Quit: Client limit exceeded: 20000)
[22:56:33] *** Quits: NRK[m] (~nrkmatrix@2001:470:69fc:105::4e30) (Quit: Client limit exceeded: 20000)
[22:56:48] *** Quits: magicalegg[m] (~magicaleg@2001:470:69fc:105::1:52e9) (Quit: Client limit exceeded: 20000)
[22:56:48] *** Joins: dlozeve[m] (~dlozevema@2001:470:69fc:105::1:1c58)
[22:56:49] *** Joins: nopenope[m] (~repmovsb@2001:470:69fc:105::1:274e)
[22:56:59] *** Joins: f33d1[m] (~g0nkstead@2001:470:69fc:105::1:320b)
[22:57:01] *** Joins: magicalegg[m] (~magicaleg@2001:470:69fc:105::1:52e9)
[22:57:05] *** Joins: NRK[m] (~nrkmatrix@2001:470:69fc:105::4e30)
[22:58:14] *** Joins: strajder (~strajder@user/strajder)
[22:58:34] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[22:58:56] *** Quits: anomalous_creato (~anomalous@2001:470:69fc:105::6ed1) (Quit: Client limit exceeded: 20000)
[22:58:58] *** Quits: mattmurr[m] (~mattmurrm@2001:470:69fc:105::1:5ea0) (Quit: Client limit exceeded: 20000)
[22:59:17] *** Quits: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de) (Remote host closed the connection)
[22:59:26] *** Quits: kolmogorov[m] (~kolmogoro@2001:470:69fc:105::e03b) (Quit: Client limit exceeded: 20000)
[22:59:28] *** Quits: edk (edk@libera/staff/edk) (Read error: Connection reset by peer)
[22:59:43] *** Quits: milia[m] (~mlliarmma@2001:470:69fc:105::1:4631) (Quit: Client limit exceeded: 20000)
[22:59:53] *** Joins: edk (edk@libera/staff/edk)
[23:00:12] *** Joins: forester (~forester@188.170.80.22)
[23:00:37] <NRK[m]> is candide down again?
[23:01:33] *** Joins: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de)
[23:02:11] <NRK[m]> alocer: wdym "about gcc/clang" ? as in their internal workings?
[23:02:26] <NRK[m]> novns: clarity: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=104288 when ahead and opened the bug report myself
[23:02:28] *** Quits: nmat[m] (~nmatm]@2001:470:69fc:105::1:5553) (Quit: Client limit exceeded: 20000)
[23:02:55] <novns> NRK[m], thank you
[23:03:01] <NRK[m]> s/when/went/
[23:03:01] *** Joins: anomalous_creato (~anomalous@2001:470:69fc:105::6ed1)
[23:03:02] *** Joins: kolmogorov[m] (~kolmogoro@2001:470:69fc:105::e03b)
[23:03:02] *** Joins: mattmurr[m] (~mattmurrm@2001:470:69fc:105::1:5ea0)
[23:03:02] *** Joins: milia[m] (~mlliarmma@2001:470:69fc:105::1:4631)
[23:03:05] <novns> NRK[m], I'be got some covid
[23:03:17] *** Joins: nmat[m] (~nmatm]@2001:470:69fc:105::1:5553)
[23:03:31] *** Quits: Dotz0cat (~Dotz0cat@75.117.198.55) (Ping timeout: 268 seconds)
[23:03:36] <novns> and was busy with putting things in order
[23:03:49] <novns> *I've
[23:04:15] *** Joins: jx0 (~jx0@199.229.250.139)
[23:04:18] *** Quits: clockworkgirl (sophie@user/clockworkgirl) (Quit: leaving)
[23:04:28] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[23:04:30] *** Joins: oxfuxxx (~oxfuxxx@139.28.218.189)
[23:04:39] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[23:05:42] *** Joins: Torr (~Torr@user/torr)
[23:05:48] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[23:06:39] *** Joins: clockworkgirl (~clockwork@funkykitty.net)
[23:06:39] *** Quits: clockworkgirl (~clockwork@funkykitty.net) (Changing host)
[23:06:39] *** Joins: clockworkgirl (~clockwork@user/clockworkgirl)
[23:07:05] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[23:07:37] *** Joins: Dotz0cat (~Dotz0cat@h55.84.187.173.dynamic.ip.windstream.net)
[23:08:16] *** Quits: forester (~forester@188.170.80.22) (Ping timeout: 250 seconds)
[23:08:30] <novns> life is hard sometimes :)
[23:08:53] *** Quits: oxfuxxx (~oxfuxxx@139.28.218.189) (Ping timeout: 250 seconds)
[23:10:34] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[23:11:38] *** Joins: oxfuxxx (~oxfuxxx@208.78.41.80)
[23:13:08] *** Quits: clockworkgirl (~clockwork@user/clockworkgirl) (Quit: leaving)
[23:13:17] *** Joins: clockworkgirl (sophie@funkykitty.net)
[23:13:17] *** Quits: clockworkgirl (sophie@funkykitty.net) (Changing host)
[23:13:17] *** Joins: clockworkgirl (sophie@user/clockworkgirl)
[23:15:55] *** Joins: MrC (Ben@mrbenc.net)
[23:16:02] *** Joins: bingulo (~carlos@2804:431:e7c8:1e13:6aa5:f04b:2b75:a55b)
[23:19:31] *** Quits: constxd_ (~brad@142.167.170.88) (Ping timeout: 245 seconds)
[23:21:13] *** Joins: FreedomConvoy (~FreedomCo@bras-base-lchtpq0202w-grc-14-174-91-187-149.dsl.bell.ca)
[23:21:24] *** Quits: cart_man (~rynot@host-78-144-125-214.as13285.net) (Quit: Konversation terminated!)
[23:22:44] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[23:23:11] *** Quits: oxfuxxx (~oxfuxxx@208.78.41.80) (Ping timeout: 250 seconds)
[23:26:08] *** Quits: inlight (~thomas@user/inlight) (Quit: Lost terminal)
[23:26:26] *** Joins: fcresende_ (fcresende@2605:6400:20:434:64d1:2b97:ef75:bc59)
[23:27:39] *** Joins: oxfuxxx (~oxfuxxx@87.101.92.69)
[23:29:44] *** Quits: MarcoFe (~marcofe@93-36-164-204.ip61.fastwebnet.it) (Ping timeout: 256 seconds)
[23:33:18] *** Joins: lainon (~lainon@2600:381:2200:2ed8:40ff:47c:65dc:db2)
[23:33:55] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[23:34:42] *** Quits: retroid_ (~retro@2e40edd9.skybroadband.com) (Ping timeout: 250 seconds)
[23:34:46] *** Quits: oxfuxxx (~oxfuxxx@87.101.92.69) (Ping timeout: 260 seconds)
[23:35:03] *** Joins: Charadon (~Charadon@155.138.164.183)
[23:35:05] *** Joins: Hansuke[m] (~hansukema@2001:470:69fc:105::1:86bb)
[23:36:19] *** Quits: lainon (~lainon@2600:381:2200:2ed8:40ff:47c:65dc:db2) (Remote host closed the connection)
[23:37:14] *** Quits: xrj (~av@2a01:4f8:c17:7cba::1) (Read error: Connection reset by peer)
[23:38:23] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[23:40:07] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[23:40:22] *** Joins: oxfuxxx (~oxfuxxx@87.101.92.120)
[23:40:36] *** Quits: oxfuxxx (~oxfuxxx@87.101.92.120) (Client Quit)
[23:41:49] *** Joins: NEYi (~NEYi@109.251.216.38)
[23:43:37] *** Quits: Nutte35 (~Nutte@202.153.80.2) (Read error: Connection reset by peer)
[23:44:18] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[23:45:10] *** Joins: Betal (~Betal@user/betal)
[23:47:16] *** Quits: FreedomConvoy (~FreedomCo@bras-base-lchtpq0202w-grc-14-174-91-187-149.dsl.bell.ca) (K-Lined)
[23:49:37] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[23:49:56] *** Joins: MarcoFe (~marcofe@93-36-164-204.ip61.fastwebnet.it)
[23:54:30] *** Parts: Torr (~Torr@user/torr) ()
[23:55:01] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[23:55:13] *** Joins: forester (~forester@188.170.73.169)
[23:56:11] *** Joins: Atque (~Atque@user/atque)
[23:56:45] <forester> Hullo. There are 3 version of gcc on the PC. How to choose a version for compilation? (to compile linux kernel). make HOSTCC=gcc-12 bindeb-pkg ?   Or maybe make bindeb-pkg HOSTCC=gcc-12?   Or somehow different?
[23:57:46] *** Joins: constxd_ (~brad@142.167.170.88)
[23:58:18] *** Quits: Rounin (~david@84.212.130.215) (Remote host closed the connection)
[23:58:20] *** Quits: tech_exorcist_ (txrcst@user/tech-exorcist/x-0447479) (Quit: Disconnecting)
[23:58:52] *** Quits: argonautx (~argonautx@i5E867211.versanet.de) (Quit: Leaving)
[23:59:16] *** Joins: vysn (~vysn@user/vysn)
