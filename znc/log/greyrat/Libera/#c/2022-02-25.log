[00:00:46] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 245 seconds)
[00:00:47] *** Quits: nb-ben (~ben@user/nb-ben) (Remote host closed the connection)
[00:01:31] *** Joins: Alhazred (~Alhazred@86.106.74.42)
[00:02:26] *** Quits: the_lanetly_052 (~the_lanet@194.135.168.16) (Ping timeout: 256 seconds)
[00:04:16] <fizzie> Fun fact: you could argue ?: doesn't really have a single specific precedence level, because `a ? b = c : d` is `a ? (b = c) : d`, but `a ? b : c = d` is (the invalid) `(a ? b : c) = d`.
[00:04:56] <NRK> so messed up man...
[00:05:22] <ChoHag> You could argue that.
[00:05:24] <caze> NRK: Also this:
[00:05:26] <ChoHag> But only over drinks.
[00:05:31] <ChoHag> It's not allowed in the repository.
[00:05:56] *** Joins: ben_ (~ben@135.125.147.53)
[00:06:17] <caze> ,cc int a = 1; char b = 0; long long int c = 1; sizeof a ? b : c;
[00:06:20] <candide> caze: illegal backslash escape sequence in string, at character offset 18 (before "\\\x{0}'\\n"}") at /usr/local/bin/guest-gdb line 148, <GEN1> line 123.
[00:06:30] <NRK> lol
[00:06:34] <caze> umm
[00:06:55] <caze> pragma?
[00:07:08] *** Joins: suss` (~user@user/suss)
[00:07:13] <NRK> it's pragma's doing
[00:07:19] <pragma-> ,cc puts("hi");
[00:07:20] <caze> ,cc int a = 1; char b = 0; long long int c = 1; printf("%zu\n", sizeof (a ? b : c));
[00:07:21] <candide> pragma-: hi
[00:07:23] <candide> caze: illegal backslash escape sequence in string, at character offset 17 (before "\\\x{0}'\\n"}") at /usr/local/bin/guest-gdb line 148, <GEN1> line 118.
[00:07:41] <pragma-> Hm.
[00:07:48] *** Quits: Alhazred (~Alhazred@86.106.74.42) (Ping timeout: 240 seconds)
[00:07:49] <caze> ,cc paste
[00:07:52] <candide> caze: https://0x0.st/oKV9.txt
[00:08:37] *** Quits: suss (~user@user/suss) (Ping timeout: 240 seconds)
[00:08:38] <pragma-> I guess I should drop what I'm doing and fix this now.
[00:09:03] <caze> NRK: https://ideone.com/haE9KG
[00:09:22] <goodfella> caze: nice :-)
[00:09:27] <goodfella> mine was crap compare to this
[00:09:33] <goodfella> and longer
[00:09:47] *** Joins: Alhazred (~Alhazred@ool-18b829c5.dyn.optonline.net)
[00:09:59] <goodfella> why did you useed size_t in columns ?
[00:10:32] <pragma-> OH
[00:10:53] <caze> Well it doesn't really matter since it never gets bigger than LEN + 1, but typically you use size_t for things that contain sizes of objects.
[00:11:36] <pragma-> it's happening in the `info locals`! I was not expecting that. http://ix.io/3QEy
[00:12:02] <fizzie> Another fun ?: operator fact is that `0 ? (void *) 0 : (int *) 0` has different type than `0 ? (void *){0} : (int *) 0`.
[00:12:49] <fizzie> (Also one of those cases GDB ptype gets wrong.)
[00:13:03] <pragma-> GDB GETS A LOT WRONG!
[00:13:20] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[00:13:29] *** Quits: heineken (~i.am@user/heineken) (Quit: a pentium 100 "running" windows 11 trying to play Last of Us II at ps4emu... that's my brain trying understand 0->R->R->R/2R->0)
[00:13:42] * pragma- is annoyed that it's printing '\000' for 0 if the type is char.
[00:13:53] <pragma-> ,cc char c = 1;
[00:13:55] <candide> pragma-: illegal backslash escape sequence in string, at character offset 17 (before "\\\x{1}'\\n"}") at /usr/local/bin/guest-gdb line 148, <GEN1> line 114.
[00:14:00] <pragma-> fucking gdb.
[00:14:14] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[00:14:50] <pragma-> switching to GDB/MI has been an annoyance more than a boon.
[00:15:26] <fizzie> But it sounds fancy. Short of MACHINE INTELLIGENCE, perhaps.
[00:15:28] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[00:19:10] <pragma-> ,cc char c = 1
[00:19:12] <candide> pragma-: no output: c = 1
[00:19:29] <pragma-> ,cc int a = 1; char b = 0; long long int c = 1; printf("%zu\n", sizeof (a ? b : c));
[00:19:32] <candide> pragma-: 8
[00:19:41] <pragma-> ,cc puts("»Ø –Ø üòÄ");
[00:19:43] <candide> pragma-: »Ø –Ø üòÄ
[00:19:43] <NRK> ,cc int n; char c; for (n = 0; (c = n["( ¬¥-œâÔΩ•)Ô∏ª‚îª‚î≥‚ïê‚ïê‚îÅ‰∏Ä"]); ++n) putchar(c);
[00:19:45] <candide> NRK: ( ¬¥-œâÔΩ•)Ô∏ª‚îª‚î≥‚ïê‚ïê‚îÅ‰∏Ä
[00:19:51] <pragma-> okay
[00:19:58] <NRK> finally!
[00:20:32] <caze> goodfella: Do you know why I do column += column <= LEN; instead of just column++?
[00:20:47] *** Quits: fstd (~fstd@xdsl-78-34-125-135.nc.de) (Read error: Connection reset by peer)
[00:20:57] <goodfella> not really
[00:21:25] <caze> goodfella: Do you know what column += column <= LEN does?
[00:21:30] *** Joins: goepsilongo_ (~goepsilon@2603-7000-ab00-62ed-708c-1d1a-7204-62e1.res6.spectrum.com)
[00:21:33] <pragma-> ,cc char c = 7
[00:21:35] <candide> pragma-: no output: c = 7 '\a'
[00:21:42] * pragma- nods
[00:21:49] <pragma-> okay seems good now
[00:21:51] <goodfella> +=  == column = column + column
[00:21:54] *** Joins: fstd (~fstd@xdsl-78-34-125-135.nc.de)
[00:22:02] <goodfella> <=  == less than or equal to
[00:22:23] <goodfella> but since += is happen first i don't know what <= is doing here
[00:22:35] <caze> ,paren column += column <= LEN;
[00:22:37] <candide> caze: column += (column <= LEN)
[00:22:55] <caze> goodfella: += happens last
[00:23:08] <goodfella> oh right my bad
[00:23:18] <goodfella> i read the order of precedence wrong lol
[00:23:41] <goodfella> so yeah it's clear now
[00:23:51] <caze> What does it do?
[00:24:01] *** Quits: goepsilongo (~goepsilon@2603-7000-ab00-62ed-4d3a-5004-9503-0c7b.res6.spectrum.com) (Ping timeout: 256 seconds)
[00:24:14] *** Joins: crashrep (~crashrep@user/crashrep)
[00:24:18] <goodfella> adding column with column and assign to column
[00:24:30] <caze> No.
[00:24:39] <Inline__> what does a comparison give ?
[00:24:44] <Inline__> true or false
[00:24:55] <Inline__> what's true or false in number context ?
[00:25:01] <caze> Adding column with column would be the same as multiplying column by 2. That is not the desired effect.
[00:25:07] <Inline__> int 1, int 0 ?
[00:25:23] *** Quits: Livio (~livio@user/livio) (Ping timeout: 256 seconds)
[00:25:23] <caze> The desired effect is to increment column by 1, for each character that is read.
[00:25:37] <caze> Normally this would be done with just column++.
[00:26:12] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 240 seconds)
[00:26:45] <apotheon> I'd probably use parentheses there, to make the intent clearer.
[00:27:15] <apotheon> Precedence between += and <= is too easy to forget late in a brain-intensive day.
[00:27:31] *** Inline__ is now known as Inline
[00:27:38] <caze> But because I want to deal with infinitely long lines, there is a problem with just doing column++;
[00:28:14] <caze> Mainly, for a long enough line, the value stored in size_t can wrap around back to 0.
[00:28:50] <caze> apotheon: Interesting. Would you use parenthesis for column = column <= LEN?
[00:29:04] <Inline> i would
[00:29:26] <goodfella> continue caze
[00:30:08] <caze> goodfella: An insight into this particular problem is that once the line length has been determined to be longer than LEN, you actually no longer care how many characters you've seen.
[00:30:23] <caze> goodfella: You just print everything you see until you see '\n'.
[00:30:53] <caze> goodfella: So once column hits the value LEN + 1, there is no longer any need to increment it, and possibly cause a wrap around back to 0 later on.
[00:32:29] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:900:7185:187d:5b4e) (Ping timeout: 252 seconds)
[00:33:05] <caze> goodfella: So, by writing column = column + (column <= LEN), the expression (column <= LEN) has the value 1 if column is less than or equal to LEN. As long as column is less than or equal to 1, column gets incremented by 1.
[00:33:10] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[00:33:57] <caze> goodfella: But if column is greater than LEN, the expression (column <= LEN) evaluates to 0. In this case, the assignment becomes column = column + 0;
[00:34:08] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 252 seconds)
[00:34:45] <goodfella> i reall appreciate the explanation caze
[00:34:47] <goodfella> really
[00:35:13] <caze> goodfella: In summary, if column is <= LEN, then the expression column += column <= LEN is the same as column += 1;
[00:35:33] <caze> But when column is > LEN, the assignment becomes column += 0;
[00:36:17] <NRK> ,cc printf("%d -- %d", 5 > 1, 5 < 1);
[00:36:19] <candide> NRK: 1 -- 0
[00:36:40] <NRK> once you realize this, you can do some really cool stuff
[00:36:42] <apotheon> I might actually be tempted to just use this: if (column <= LEN) column++;
[00:36:52] <apotheon> . . . though I wonder if it should be < instead of <=.
[00:37:05] <apotheon> I might have missed some context that explains why it's <=.
[00:37:11] *** Quits: oxfuxxx (~oxfuxxx@195.47.194.46) (Read error: Connection reset by peer)
[00:37:48] <caze> It's possible.
[00:37:56] <caze> (that you missed the context)
[00:37:56] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[00:38:00] <apotheon> right
[00:38:08] <caze> apotheon: https://ideone.com/UFAqo1
[00:39:07] <apotheon> Oh, I think I see.
[00:39:18] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 250 seconds)
[00:39:48] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[00:39:49] <fizzie> The way I tend to write that thing is https://ideone.com/vxx63w -- depending on your tastes, the two separate loops may be less appealing than the single getchar loop. But at least there's no question about keeping a column count.
[00:39:56] <apotheon> LEN isn't the total length limit.
[00:41:15] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[00:41:17] <caze> I don't think chapter 1 has seen fgets yet.
[00:41:32] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 240 seconds)
[00:41:53] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[00:42:29] <fizzie> Fair enough. Or `strchr`, for that matter.
[00:43:54] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[00:44:17] <pragma-> I'd have expected fputc instead of putchar given the use of fputs instead of puts
[00:44:25] <pragma-> consistency!
[00:44:37] <fizzie> puts adds a newline. I'd've'd to get rid of it to use puts.
[00:44:52] <pragma-> oh
[00:45:16] <fizzie> V. annoyed that gets (back when we still had it) didn't remove a newline, for consistency with puts.
[00:46:43] *** Joins: oxfuxxx (~oxfuxxx@195.47.194.46)
[00:50:15] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[00:51:32] *** Joins: rgrinberg (~textual@187.223.124.14)
[00:51:50] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[00:52:39] *** Joins: crashrep (~crashrep@user/crashrep)
[00:53:24] <caze> I'd've'd
[00:54:08] *** Quits: xel (~xel@user/xel) (Quit: Leaving)
[00:54:28] *** Quits: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:b579:336d:9a22:79d7) (Ping timeout: 250 seconds)
[00:57:58] <apotheon> You would have would?
[00:58:06] <apotheon> You would have did?
[00:58:08] <apotheon> What is that?
[00:58:18] <apotheon> You would have had?
[00:58:52] <caze> Are you mocking me or fizzie?
[00:59:23] <twkm> uh, it does.
[01:00:26] *** Joins: Dsee4 (~DSee@198.147.22.136)
[01:00:32] <fizzie> "I would have had", yes.
[01:00:37] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[01:01:30] <fizzie> Oh, it does? I've been annoyed at that unnecessarily, then.
[01:01:38] <fizzie> Not that it's a reason to use gets, but still.
[01:04:46] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 268 seconds)
[01:10:15] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[01:12:25] *** Quits: kuber (~kuber@75-172-87-88.tukw.qwest.net) (Ping timeout: 256 seconds)
[01:12:26] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[01:13:00] *** Quits: Akuli (~Akuli@82-203-167-218.bb.dnainternet.fi) (Quit: Akuli)
[01:13:53] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[01:14:15] *** Joins: kuber (~kuber@75-172-6-223.tukw.qwest.net)
[01:14:37] *** Dsee4 is now known as DSee
[01:15:30] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[01:17:07] *** Joins: crashrep (~crashrep@user/crashrep)
[01:20:08] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[01:20:27] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[01:20:32] *** Quits: chasmo77 (~chas77@c-71-193-246-4.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[01:21:03] *** Joins: chasmo77 (~chas77@c-71-193-246-4.hsd1.or.comcast.net)
[01:21:24] *** Quits: Rynn (~rynn@216.30.158.198) (Quit: Textual IRC Client: www.textualapp.com)
[01:26:23] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: Disconnecting)
[01:26:47] *** Joins: xel (~xel@user/xel)
[01:27:15] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[01:29:21] *** Joins: joilerv (~joilerv@145.224.65.2)
[01:35:15] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[01:36:33] *** Quits: DSee (~DSee@198.147.22.136) (Quit: Quit)
[01:36:56] <pragma-> I think it's absurd that it's still possible to compile code wtih gets()
[01:37:07] *** Quits: Torr (~Torr@user/torr) ()
[01:37:27] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[01:37:35] *** Joins: Guest9678 (~Guest@181.91.159.186)
[01:37:40] *** Quits: endidragon (~elle@cpe-76-167-67-22.natsow.res.rr.com) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[01:38:34] <sham1> It does depends, for example IIRC OpenBSD straight up removed gets when C2011 hit and removed it from the standard
[01:38:52] <pragma-> as it should be
[01:39:04] *** Quits: singularity00 (~singulari@236.lan-hi1-2.static.rozabg.com) (Quit: The true sign of intelligence is not knowledge but imagination.)
[01:40:41] *** Quits: Jong (~Jong@184-99-74-148.boid.qwest.net) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[01:41:47] <DarkUranium> Honestly, it's absurd that gets() *ever* existed.
[01:42:24] <pragma-> it was a different time. back when you could leave your doors unlocked and your windows open
[01:42:36] *** Joins: hashfunc1160 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96)
[01:43:17] <twkm> posix effectively requires it.
[01:43:29] <pragma-> still?
[01:43:39] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[01:43:39] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[01:43:39] *** Joins: wroathe (~wroathe@user/wroathe)
[01:43:43] <twkm> still uses c99 as a base.
[01:45:22] <pragma-> there hasn't been a posix update to c11 or newer as of yeT?
[01:45:57] *** Joins: endidragon (~elle@cpe-76-167-67-22.natsow.res.rr.com)
[01:46:05] * pragma- checks current year again
[01:46:37] *** Quits: joilerv (~joilerv@145.224.65.2) (Quit: Textual IRC Client: www.textualapp.com)
[01:46:42] <sham1> I do wonder if Austin group has any kind of a rationale for this or if they've just not had the time yet
[01:46:55] <pragma-> there ought to be at least a minor posix update that removes gets() one would think
[01:46:59] <sham1> Time/arsed enough to change it
[01:47:48] *** Quits: arinov_ (~arinov@5.24.108.1) (Quit: Konversation terminated!)
[01:47:56] <koollman> maybe not remove. just allow a compliant implementation to implement gets as exit(0) :)
[01:48:09] *** Joins: arinov_ (~arinov@5.24.108.1)
[01:48:28] <koollman> although my man page says "POSIX.1-2008 marks gets() obsolescent"
[01:48:44] <sham1> "Use of gets() shall be undefined behaviour"
[01:49:16] <koollman> well, I guess it can already be implemented as always returning NULL and be posix compliant
[01:49:19] <koollman> pretty safe
[01:49:52] <koollman> it is also not guaranteed to return so ... exit is already valid :)
[01:52:44] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 272 seconds)
[01:53:22] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 272 seconds)
[01:54:02] *** Joins: Charadon (~Charadon@155.138.164.183)
[01:54:19] *** Quits: Charadon (~Charadon@155.138.164.183) (Remote host closed the connection)
[01:56:01] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[01:58:17] <pinheadmz> when debugger lists a frame something like this: `comm_timer_create + 40  what does that 40 mean?
[01:58:26] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[01:58:29] <pinheadmz> offset in bytes? or something i can use to reference inthe source code itself?
[02:02:03] <fizzie> I'd assume bytes if there's no other context.
[02:05:58] *** Quits: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net) (Quit: b1101)
[02:06:43] *** Joins: Torr (~Torr@user/torr)
[02:07:56] *** Quits: arinov_ (~arinov@5.24.108.1) (Ping timeout: 272 seconds)
[02:08:57] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Quit: Goodbye.)
[02:10:17] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[02:10:30] *** Quits: hashfunc1160 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96) (Remote host closed the connection)
[02:12:16] *** Quits: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net) (Quit: This computer has gone to sleep)
[02:12:55] *** Quits: rgrinberg (~textual@187.223.124.14) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[02:14:57] *** Joins: rgrinberg (~textual@2806:101e:7:79ba:11ea:9b9c:df34:d74e)
[02:16:10] *** Quits: goodfella (~archer@user/tessio) (Ping timeout: 272 seconds)
[02:18:44] *** Quits: kaph (~kaph@net-109-116-117-37.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[02:19:44] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[02:20:43] *** Quits: enhwohrom^ (~enhwohrom@50-202-219-146-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[02:22:17] *** Joins: kaph (~kaph@net-109-116-117-37.cust.vodafonedsl.it)
[02:24:30] *** Joins: pert (~pert@fsf/member/pert)
[02:26:14] *** Joins: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net)
[02:26:15] *** Quits: beepbooptheory (~miker2049@2001:470:69fc:105::1:c9d5) (Quit: Reconnecting)
[02:26:30] *** Joins: beepbooptheory (~miker2049@2001:470:69fc:105::1:c9d5)
[02:26:38] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[02:27:46] *** Quits: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net) (Client Quit)
[02:29:03] <pert> This is kind of off-topic, but that's why I'd appreciate being directed elsewhere. Some functions, like (posix_)madvise, often require the memory to be allocated on page boundaries. Can anyone recommend reading on what pages are, virtual memory, and what kernels do and don't do memory-wise?
[02:29:38] <pert> I'd like to be able to understand what's special about memory on page boundaries, for example
[02:30:26] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[02:31:41] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 2.8)
[02:31:45] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[02:32:38] *** Quits: LucaTM (~LucaTM@user/lucatm) (Ping timeout: 272 seconds)
[02:33:25] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Client Quit)
[02:33:29] *** Quits: bgs (~bgs@cpe-212-85-160-171.cable.telemach.net) (Ping timeout: 252 seconds)
[02:33:44] *** Quits: pizdets_ (~pizdets@183.182.111.116) (Ping timeout: 256 seconds)
[02:34:14] *** Joins: pizdets (~pizdets@183.182.111.223)
[02:34:16] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[02:34:33] *** Joins: bgs (~bgs@cpe-212-85-160-171.cable.telemach.net)
[02:35:00] *** Quits: beepbooptheory (~miker2049@2001:470:69fc:105::1:c9d5) (Quit: Reconnecting)
[02:35:11] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[02:35:15] *** Joins: beepbooptheory (~miker2049@2001:470:69fc:105::1:c9d5)
[02:36:54] *** Joins: shailangsa (~shailangs@host109-152-9-189.range109-152.btcentralplus.com)
[02:37:45] *** Joins: eepbooptheoryb (~mik@c-73-13-112-194.hsd1.pa.comcast.net)
[02:38:43] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[02:39:58] <fizzie> The really short version is that a page is the granularity at which a virtual memory mapping system operates at, because it'd be complicated (read: expensive and slow) to make something that can work in terms of arbitrarily sized ranges at arbitrary positions. But I don't have a good reference to point at. Maybe one of the OS books?
[02:41:07] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[02:42:42] *** Quits: wovixo (~wovixo@128.104.205.49) (Read error: Connection reset by peer)
[02:42:45] <nitrix> pert, I don't have a particular resource, but a simplistic intuition to get you going is that modern computers uses virtual memory as an abstraction to the physical memory. If you look at the ELF/PE headers of an executable, you will see that it asks the loader of the operating system to copy the program at a specific location in memory because there are instructions with hardcoded pointer addresses and jumps (they can't always be relative).
[02:43:05] *** Joins: wovixo (~wovixo@128.104.205.49)
[02:43:23] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Quit: Goodbye.)
[02:43:40] <fizzie> There's Tanenbaum & Bos, Modern Operating Systems, I think that's a well-known and not incredibly ancient OS book that would cover the general principles if not specific hardware. (Although putting "modern" in a book title is always a bit of a risky move.)
[02:45:03] <nitrix> pert, You obviously cannot have multiple programs at the same place in memory, plus, there is also the long standing problem of fragmented physical memory. Finding a large enough contiguous regions of physical memory for whatever allocation is needed is problematic, as the longer the system runs, the more pieces are left around with often no way of moving it around. Hence, indirection with virtual memory.
[02:46:12] *** Quits: cyphics (~cyphix@user/cyphics) (Ping timeout: 256 seconds)
[02:46:12] *** Quits: Xeha (~Xeha@dynamic-82-220-88-142.ftth.solnet.ch) (Ping timeout: 256 seconds)
[02:46:24] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[02:46:34] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 272 seconds)
[02:49:23] <nitrix> pert, Virtual memory is done with hardware. There's a MMU unit that remaps ranges of virtual memory to ranges of physical memory. Obviously, a tradeoff is needed for how many ranges and how big the ranges can be, imagine storing 2^64 ranges of each 1 byte, you'd need basically need another a whole RAM system just to store your mappings.
[02:50:18] *** Joins: cyphics (~cyphix@user/cyphics)
[02:51:28] *** Parts: beepbooptheory (~miker2049@2001:470:69fc:105::1:c9d5) ()
[02:51:35] *** Joins: Xeha (~Xeha@dynamic-82-220-88-142.ftth.solnet.ch)
[02:51:51] *** Joins: andi__ (~andi@2a02:908:4b26:5a40:81a2:4fb4:283c:f82)
[02:51:57] <nitrix> pert, So instead, you're allowed to remap just a few ranges and the ranges always have a fixed size, this way it doesn't need to be stored either. And that's a page.
[02:53:40] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
[02:54:11] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:602a:2cae:7652:6a22) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[02:54:43] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[02:55:11] <nitrix> pert, When you do void *p2 = realloc(p1, new_size); to grow a buffer, the operating system doesn't have to actually find a region new_size large, it can just find unused pages, stitch them side-by-side with virtual memory and your program will think they're actually contiguous.
[02:55:26] *** Quits: cherrry9 (~jan@ded246.neoplus.adsl.tpnet.pl) (Ping timeout: 272 seconds)
[02:58:38] *** Quits: andi__ (~andi@2a02:908:4b26:5a40:81a2:4fb4:283c:f82) (Quit: Leaving)
[03:00:05] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Ping timeout: 256 seconds)
[03:00:46] <nitrix> Then everything cascades from that principle. If the address of large allocations are properly aligned at the start of a page instead of somewhere in the middle, it avoid wasting a page needlessly (padding at the front and back).
[03:03:18] <nitrix> And then there's cache lines, doubling fetches when a read overlap two pages, etc...
[03:03:53] *** Quits: rgrinberg (~textual@2806:101e:7:79ba:11ea:9b9c:df34:d74e) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[03:05:19] *** eepbooptheoryb is now known as beepbooptheory
[03:05:19] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:06:23] *** Quits: Ranhir (~Ranhir@157.97.53.139) (Read error: Connection reset by peer)
[03:09:26] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[03:10:21] *** Joins: hiroshi_ (~freedom@151.35.52.24)
[03:12:00] *** Joins: ferdna (~ferdna@user/ferdna)
[03:12:52] *** Joins: Jong (~Jong@184-99-74-148.boid.qwest.net)
[03:21:15] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[03:21:19] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Quit: ERC (IRC client for Emacs 27.1))
[03:21:43] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[03:25:24] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[03:30:09] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:358d:3a29:7d14:a6d)
[03:31:30] *** Joins: JanC_ (~janc@user/janc)
[03:31:40] *** JanC is now known as Guest6602
[03:31:40] *** JanC_ is now known as JanC
[03:33:04] *** Quits: Guest6602 (~janc@user/janc) (Ping timeout: 250 seconds)
[03:33:31] *** Joins: ericson2314 (~ericson23@2001:470:69fc:105::70c)
[03:34:54] *** Joins: Thedarkb (~Thedarkb@82.3.80.190)
[03:36:38] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Quit: Goodbye.)
[03:37:57] *** Quits: chasmo77 (~chas77@c-71-193-246-4.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[03:40:37] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[03:43:17] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 240 seconds)
[03:45:00] *** Quits: pert (~pert@fsf/member/pert) (Read error: Connection reset by peer)
[03:45:18] *** Joins: Wulf (~Wulf@user/wulf)
[03:45:18] *** Joins: pert (~pert@fsf/member/pert)
[03:45:19] *** Quits: pert (~pert@fsf/member/pert) (Remote host closed the connection)
[03:45:25] *** Joins: Satin (uid193953@user/Seten)
[03:45:51] *** Quits: pulse (~pulse@user/pulse) (Quit: Look behind you, a three headed monkey!)
[03:45:57] *** Quits: oxfuxxx (~oxfuxxx@195.47.194.46) (Ping timeout: 240 seconds)
[03:46:36] *** Quits: hiroshi_ (~freedom@151.35.52.24) (Quit: hiroshi_)
[03:46:47] <ericson2314> Clang says `char const (*)[]` is an incomplete type
[03:46:56] <ericson2314> but....how?
[03:47:09] <ericson2314> (I am on an adventure to see how much one can avoid doing array pointer decay)
[03:47:14] <fizzie> It's not. It's a pointer to an incomplete type, though.
[03:47:27] <ericson2314> ah yes that sorry
[03:47:36] <ericson2314> how is the pointee incomplete?
[03:47:48] *** Joins: Inline__ (~Inline@2a02:908:1252:7a80::175)
[03:47:48] *** Quits: Inline (~Inline@2a02:908:1252:7a80::175) (Ping timeout: 240 seconds)
[03:47:56] <fizzie> An array of unspecified size is an incomplete type pretty much from the definition of /incomplete type/.
[03:48:12] *** Quits: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8) (Ping timeout: 240 seconds)
[03:48:37] <fizzie> C11 6.2.5p1: "At various points within a translation unit an object type may be /incomplete/ (lacking sufficient information to determine the size of objects of that type) or /complete/ (having sufficient information)."
[03:48:55] <fizzie> Without the size specifier, it's clearly lacking sufficient information to determine the size of objects of that type.
[03:49:06] <ericson2314> fair enough
[03:49:29] <ericson2314> subscripting a pointer of that type doesn't work
[03:49:30] *** Quits: AmR (~AmREiSa@156.199.47.115) (Quit: Konversation terminated!)
[03:49:37] *** Joins: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8)
[03:49:41] <ericson2314> with clang at least
[03:49:52] <fizzie> It wouldn't, no. Because you'd need to know the size to know how far of p+1 is from p.
[03:49:57] <ericson2314> it's almost touching, I have convinced C to compile time bounds check my array access!
[03:50:09] *** Quits: bgs (~bgs@cpe-212-85-160-171.cable.telemach.net) (Read error: Connection reset by peer)
[03:50:13] <ericson2314> ah
[03:50:15] <fizzie> If you're trying to index the *array* that it points at, though, you wouldn't subscript the pointer.
[03:50:22] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[03:50:28] *** Joins: bgs (~bgs@cpe-212-85-160-171.cable.telemach.net)
[03:50:34] <fizzie> `(*p)[1]` *is* allowed (I think), and accesses element 1 of the pointed-to array.
[03:50:34] <ericson2314> right I would neeedto do (*p)[]
[03:50:40] <ericson2314> makes sense
[03:54:13] *** Joins: crashrep (~crashrep@user/crashrep)
[03:55:41] *** Joins: chasmo77 (~chas77@c-71-193-246-4.hsd1.or.comcast.net)
[03:56:26] *** Joins: Inline (~Inline@2a02:908:1252:7a80::175)
[03:56:37] *** Quits: Inline__ (~Inline@2a02:908:1252:7a80::175) (Ping timeout: 240 seconds)
[03:59:30] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[03:59:49] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[04:00:17] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[04:00:47] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Quit: Goodbye.)
[04:03:08] *** Quits: trycatch (~tc@user/trycatch) (Quit: Leaving)
[04:04:12] *** Quits: analognoise (~analognoi@212.102.45.103) (Quit: Leaving)
[04:06:05] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[04:08:44] *** Joins: trycatch (~tc@user/trycatch)
[04:09:23] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Client Quit)
[04:11:05] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[04:11:50] *** Joins: DSee (~DSee@198.147.22.136)
[04:18:59] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[04:18:59] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[04:18:59] *** Joins: wroathe (~wroathe@user/wroathe)
[04:20:36] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:358d:3a29:7d14:a6d) (Ping timeout: 240 seconds)
[04:21:20] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[04:29:33] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[04:30:37] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[04:31:50] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[04:31:50] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Client Quit)
[04:32:27] *** Joins: cation21 (cation@user/cation)
[04:33:05] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[04:33:35] *** Quits: cation (cation@user/cation) (Ping timeout: 256 seconds)
[04:35:46] *** cation21 is now known as cation
[04:36:49] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Client Quit)
[04:37:06] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[04:38:32] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Remote host closed the connection)
[04:41:31] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[04:41:35] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Remote host closed the connection)
[04:43:07] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Quit: Goodbye.)
[04:43:47] *** Joins: Pentode (~Pentode@mobile-166-177-56-138.mycingular.net)
[04:45:12] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[04:48:04] *** Joins: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com)
[04:49:36] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[04:50:25] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[04:51:07] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[04:51:22] *** Quits: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[04:53:23] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[04:53:48] *** Quits: tetravus (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[04:55:59] *** Joins: tetravus (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net)
[04:56:36] *** Quits: random-nick (~random-ni@87.116.179.129) (Ping timeout: 240 seconds)
[04:59:25] *** Quits: cation (cation@user/cation) (Ping timeout: 240 seconds)
[05:00:29] *** Joins: masoudd (~masoudd@user/masoudd)
[05:02:03] *** Joins: cation (cation@user/cation)
[05:06:28] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[05:06:44] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[05:07:01] *** Quits: DSee (~DSee@198.147.22.136) (Quit: Quit)
[05:14:41] *** Quits: s1b1 (~s1b1@user/s1b1) (Read error: Connection reset by peer)
[05:15:34] *** Joins: MsPoop (~MsPoop@S01069050ca4e3573.cg.shawcable.net)
[05:19:09] *** Quits: Guest9678 (~Guest@181.91.159.186) (Remote host closed the connection)
[05:22:22] *** Quits: useretail (~useretail@185.132.19.151) (Ping timeout: 272 seconds)
[05:24:16] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 272 seconds)
[05:28:21] *** Joins: zer0x_ (~zer0x@42.113.143.168)
[05:29:07] *** Joins: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net)
[05:33:04] <Akawama[m]> Which language do I need for using GLFW, C or CPP?
[05:36:41] *** Joins: gco (~gco@2601:647:4c00:50e0:7dfe:b7a3:3c0b:5aa5)
[05:38:37] <dave0> Akawama[m]: i managed it in c, this lists some language bindings.. https://www.glfw.org/community
[05:39:04] *** Joins: j-james (~apropos@dhcp-206-87-154-232.ubcsecure.wireless.ubc.ca)
[05:42:59] *** Joins: soapsudsxx (~soapsudsx@209.221.40.142)
[05:43:45] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220219201334])
[05:45:12] *** Joins: frost (~frost@user/frost)
[05:46:46] *** Joins: hanzo (uid532183@user/hanzo)
[05:49:14] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[05:54:36] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 240 seconds)
[05:56:12] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:fdaa:179b:adf9:7fb4)
[05:58:48] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[05:59:43] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 256 seconds)
[06:00:13] *** Quits: Torr (~Torr@user/torr) (Quit: leaving)
[06:00:22] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[06:00:33] *** lukedashjr is now known as luke-jr
[06:03:19] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Read error: Connection reset by peer)
[06:03:27] *** Quits: satanist (~satanist@bureaucracy.bureaucracy.de) (Ping timeout: 256 seconds)
[06:03:28] *** Joins: goepsilongo (~chacho@2603-7000-ab00-62ed-0000-0000-0000-0bd0.res6.spectrum.com)
[06:04:40] *** Joins: diamondbond_ (~diamondbo@175.157.92.206)
[06:06:14] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[06:07:58] *** Quits: llh (~UPP@user/llh) (Quit: :::: ( UPP ) ::::)
[06:08:04] *** Quits: justAstache (~justache@user/justache) (Read error: Connection reset by peer)
[06:08:42] *** Joins: justAstache (~justache@user/justache)
[06:11:09] *** Joins: s1b1 (~s1b1@user/s1b1)
[06:11:24] *** Quits: diamondbond_ (~diamondbo@175.157.92.206) (Ping timeout: 240 seconds)
[06:14:44] *** Quits: mad_enz (~mad_enz@lnsm4-toronto12-50-101-118-206.internet.virginmobile.ca) (Ping timeout: 256 seconds)
[06:15:04] *** Joins: llh (~UPP@user/llh)
[06:15:11] *** Joins: sudoer (~username@c-73-4-114-202.hsd1.ma.comcast.net)
[06:15:14] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 260 seconds)
[06:15:19] *** Joins: mad_enz (~mad_enz@lnsm4-toronto12-50-101-118-206.internet.virginmobile.ca)
[06:16:04] *** Joins: Ranhir (~Ranhir@157.97.53.139)
[06:16:13] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:350b:c716:fa56:ddbc)
[06:16:39] *** Joins: diamondbond_ (~diamondbo@175.157.92.206)
[06:16:46] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:350b:c716:fa56:ddbc) (Client Quit)
[06:18:24] *** Quits: j-james (~apropos@dhcp-206-87-154-232.ubcsecure.wireless.ubc.ca) (Quit: rebooting...)
[06:19:57] *** Joins: AmR (~AmREiSa@156.199.47.115)
[06:20:19] *** Quits: llh (~UPP@user/llh) (Quit: :::: ( UPP ) ::::)
[06:20:49] *** Quits: diamondbond_ (~diamondbo@175.157.92.206) (Client Quit)
[06:20:50] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[06:20:58] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[06:23:44] *** Quits: MsPoop (~MsPoop@S01069050ca4e3573.cg.shawcable.net) (Quit: Client closed)
[06:26:26] *** Quits: pretty_d1 (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[06:26:43] *** Joins: j-james (~apropos@dhcp-206-87-154-232.ubcsecure.wireless.ubc.ca)
[06:26:53] *** Quits: sebbu (~sebbu@user/sebbu) (Read error: Connection reset by peer)
[06:29:12] *** Joins: sebbu (~sebbu@user/sebbu)
[06:30:15] *** Joins: llh (~UPP@user/llh)
[06:31:22] *** Quits: drbeco (~beco@2804:351c:dd01:f000:a19e:a89a:e0cb:cec7) (Quit: Leaving)
[06:34:00] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 256 seconds)
[06:39:26] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[06:40:03] *** Quits: Echoz (~chris@user/echoz) (Quit: WeeChat 3.4)
[06:40:33] *** Quits: j-james (~apropos@dhcp-206-87-154-232.ubcsecure.wireless.ubc.ca) (Quit: leaving)
[06:40:51] *** Joins: Echoz (~chris@user/echoz)
[06:42:10] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2509-567d-d519-decb.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[06:42:51] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[06:42:58] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Remote host closed the connection)
[06:43:22] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[06:49:25] *** Joins: ixokani (~swinnenb@user/swinnenb)
[06:52:36] *** Quits: saribro (~swinnenb@user/swinnenb) (Ping timeout: 240 seconds)
[06:52:52] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[07:06:27] *** Quits: de-facto (~de-facto@user/de-facto) (Quit: See you around. üí§)
[07:07:18] *** Joins: fe23 (~fe23@2409:8a34:46c:f80:1d18:327:a99c:3a5e)
[07:07:39] *** Joins: Azem (~haise01@user/haise01)
[07:07:52] *** Joins: de-facto (~de-facto@user/de-facto)
[07:11:19] *** Quits: Emet-Selch (~haise01@user/haise01) (Ping timeout: 272 seconds)
[07:12:54] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[07:17:35] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[07:18:17] *** Quits: AmR (~AmREiSa@156.199.47.115) (Quit: Konversation terminated!)
[07:20:36] *** Quits: oscurochu (~oscurochu@2603-9000-c202-1034-ecbc-c4db-21c9-0a46.inf6.spectrum.com) (Ping timeout: 240 seconds)
[07:22:01] *** suss` is now known as suss
[07:22:13] *** Quits: adip (~adip@den37.neoplus.adsl.tpnet.pl) (Ping timeout: 240 seconds)
[07:22:36] *** Quits: adip_ (~adip@den37.neoplus.adsl.tpnet.pl) (Ping timeout: 240 seconds)
[07:22:44] *** Quits: malina (~malina@user/malina) (Quit: malina)
[07:23:17] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Ping timeout: 240 seconds)
[07:24:33] *** Joins: adip (~adip@den37.neoplus.adsl.tpnet.pl)
[07:25:40] *** Joins: Guest8467 (~Guest@181.91.159.164)
[07:25:45] *** Quits: skapate (~Skapata@user/skapata) (Remote host closed the connection)
[07:29:24] *** Joins: adip_ (~adip@den37.neoplus.adsl.tpnet.pl)
[07:34:22] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[07:35:36] <Akawama[m]> dave0 I'm taking the c route as well, thanks.
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:38:24] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[07:38:32] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[07:40:11] <Akawama[m]> Is there a way to list all available C headers? I just installed glfw in linux, but when I try to use it as header I get file not found error.
[07:43:44] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Remote host closed the connection)
[07:43:59] *** Quits: sudoer (~username@c-73-4-114-202.hsd1.ma.comcast.net) (Ping timeout: 256 seconds)
[07:44:35] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[07:45:27] *** Quits: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu) (Ping timeout: 250 seconds)
[07:46:17] <suss> Akawama[m] is glfw the standard way of doing such thing that it describes?
[07:47:24] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 272 seconds)
[07:49:11] <Akawama[m]> > Akawama is glfw the standard way of doing such thing that it describes?
[07:49:11] <Akawama[m]> I'm following the glfw tutorial, it says to #include <GLFW/glfw3.h> but I get file not found error when I do that.
[07:56:36] *** Quits: boB_K7IQ (~boB_K7IQ@184-98-165-139.phnx.qwest.net) (Ping timeout: 240 seconds)
[08:00:09] *** Joins: hinata (~hinata@2409:4042:2d11:cfb3:1419:21da:6540:1401)
[08:03:30] *** Quits: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net) (Quit: b1101)
[08:04:20] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:27:26] *** Joins: dom2 (~dom2@c-65-96-173-68.hsd1.ma.comcast.net)
[08:30:30] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[08:41:27] <ChoHag> You almost certainly need only install the correct package. On a debian-like apt-file search GLFW/glfw3.h will tell you which one.
[08:41:34] <dave0> Akawama[m]: try    /usr/include/GLFW/   or    /usr/local/include/GLFW/
[08:41:46] *** Joins: boB_K7IQ (~boB_K7IQ@ip72-201-138-188.ph.ph.cox.net)
[08:41:56] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[08:42:10] <ChoHag> "A computer you can turn on and get straight to hacking? COMPICATE ALL THE THINGS!"
[08:42:24] <ChoHag> Bah.
[08:42:57] <dave0> Akawama[m]: c headers on a unix-y system is in /usr/include/ sometimes /usr/local/include/
[08:43:09] <dave0> you can always    find / -name GLFW
[08:43:22] <ChoHag> That will be very noisy.
[08:44:01] <ChoHag> At least you'd want to limit it to /usr/{local/,}include.
[08:44:49] <jamesmartinez> dave0: maw
[08:44:57] <jamesmartinez> dave0: do you like fizzy drinks?
[08:45:40] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 272 seconds)
[08:46:26] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[08:46:35] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[08:46:47] <dave0> jamesmartinez: sure!
[08:46:52] *** Quits: dom2 (~dom2@c-65-96-173-68.hsd1.ma.comcast.net) (Quit: Lost terminal)
[08:52:35] *** Joins: soapsudsxx_ (~soapsudsx@209.221.40.142)
[08:53:15] *** Quits: soapsudsxx (~soapsudsx@209.221.40.142) (Read error: Connection reset by peer)
[08:57:54] *** Joins: MsPoop (~MsPoop@S01069050ca4e3573.cg.shawcable.net)
[09:00:38] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Remote host closed the connection)
[09:00:56] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[09:03:53] *** Quits: soapsudsxx_ (~soapsudsx@209.221.40.142) (Ping timeout: 256 seconds)
[09:04:47] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[09:05:18] *** Quits: joev (~joev@user/joev) (Ping timeout: 256 seconds)
[09:05:35] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[09:05:53] *** Joins: joev (~joev@user/joev)
[09:10:19] *** Quits: koffeinfriedhof (~koffeinfr@ubuntuusers/moderation/koffeinfriedhof) (Quit: WeeChat 3.4)
[09:11:18] *** Joins: koffeinfriedhof (~koffeinfr@ubuntuusers/moderation/koffeinfriedhof)
[09:12:26] *** Joins: unlink2 (~unlink@p200300ebcf147a00a0c5a97c70c72521.dip0.t-ipconnect.de)
[09:17:55] *** Quits: gco (~gco@2601:647:4c00:50e0:7dfe:b7a3:3c0b:5aa5) (Quit: ZZZzzz‚Ä¶)
[09:17:59] *** Joins: goodfella (~archer@user/tessio)
[09:20:32] *** Quits: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2) (Quit: Leaving)
[09:22:01] *** Quits: zer0x_ (~zer0x@42.113.143.168) (Ping timeout: 256 seconds)
[09:23:08] <suss> do find with filtering /proc, /tmp or other dirs is faster?
[09:25:11] <goodfella> good morning
[09:26:30] <MsPoop> good morn
[09:29:40] *** Quits: steve__ (~steve@ool-182c2b80.dyn.optonline.net) (Ping timeout: 256 seconds)
[09:29:46] *** Joins: soapsudsxx (~soapsudsx@209.221.40.142)
[09:33:23] *** Joins: slidercrank (~slidercra@user/slidercrank)
[09:34:21] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:fdaa:179b:adf9:7fb4) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[09:36:49] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:fdaa:179b:adf9:7fb4)
[09:39:44] *** Joins: eroux (~eroux@102-65-85-242.ftth.web.africa)
[09:41:15] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[09:41:42] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[09:43:51] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:fdaa:179b:adf9:7fb4) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[09:45:24] *** Quits: Alhazred (~Alhazred@ool-18b829c5.dyn.optonline.net) (Ping timeout: 240 seconds)
[09:45:32] *** Joins: Alhazred (~Alhazred@45.129.56.151)
[09:46:35] *** Quits: Guest8467 (~Guest@181.91.159.164) (Remote host closed the connection)
[09:46:58] *** Joins: epony (epony@user/epony)
[09:48:14] <Akawama[m]> seems I installed the wrong package ^_^
[09:51:13] <suss> wondering why  you do have a [m] suffixed in your nick, is it special meaning?
[09:53:22] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[09:58:16] *** Quits: soapsudsxx (~soapsudsx@209.221.40.142) (Remote host closed the connection)
[10:00:34] *** Joins: eddybilley (~freddieti@2a02-a454-7f89-1-c938-420c-2f90-55af.fixed6.kpn.net)
[10:00:50] <ChoHag> Extra magic.
[10:03:28] *** ixokani is now known as swinnenb
[10:04:36] <pragma-> suss: it means he's connecting from matrix.org
[10:04:37] *** Quits: eddybilley (~freddieti@2a02-a454-7f89-1-c938-420c-2f90-55af.fixed6.kpn.net) (Ping timeout: 240 seconds)
[10:04:40] <pragma-> over the matrix.org bridge
[10:05:07] <suss> pragma- see
[10:07:29] *** Joins: kts (~kts@103.73.237.191)
[10:09:18] *** Quits: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:4d2e:385:779a:d7c4) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[10:11:03] *** Quits: MsPoop (~MsPoop@S01069050ca4e3573.cg.shawcable.net) (Quit: Client closed)
[10:11:13] *** Quits: uniquepointer (~uniquepoi@190.218.240.164) (Quit: Leaving)
[10:12:49] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[10:18:51] *** Joins: lichliu_ (~lichliu@219.142.145.152)
[10:20:53] *** Quits: lichliu (~lichliu@219.142.145.152) (Read error: Connection reset by peer)
[10:22:34] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:24:27] <dave0> suss: not doing something is always faster than doing something
[10:24:48] <dave0> suss: if it has to search less files, it will take less time
[10:26:20] <suss> i was attempting to do `find / -name "emacs"' recusively  with filtering out the /proc, /tmp, /dev.
[10:26:25] *** Joins: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2)
[10:27:09] <ChoHag> (if bash: shopt -s extglob then) find /!(run|proc|sys|kitchen-sink) -name ...
[10:27:22] <ChoHag> I lost track of the amount of crap linux sticks in / these days.
[10:28:23] *** Joins: lichliu__ (~lichliu@219.142.145.152)
[10:30:42] *** Joins: gry (~kvirc@botters/gry)
[10:31:26] *** Quits: lichliu_ (~lichliu@219.142.145.152) (Ping timeout: 272 seconds)
[10:34:02] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[10:36:55] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[10:38:20] *** Joins: the_lanetly_052 (~the_lanet@194.135.168.16)
[10:39:06] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Ping timeout: 245 seconds)
[10:43:14] *** Joins: iomari891 (~iomari891@105.112.138.38)
[10:43:35] *** Joins: satanist (~satanist@bureaucracy.bureaucracy.de)
[10:45:57] *** Quits: defjam (~eb0t@90.196.141.185) (Ping timeout: 250 seconds)
[10:46:09] *** Joins: bebyx (~Thunderbi@user/bebyx)
[10:47:51] *** Joins: defjam (~eb0t@90.210.89.170)
[10:48:43] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[10:52:15] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 240 seconds)
[10:52:54] *** Joins: de-facto (~de-facto@user/de-facto)
[10:54:11] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:602a:2cae:7652:6a22)
[11:02:11] *** Joins: arinov_ (~arinov@176.236.130.138)
[11:06:06] *** Joins: mrig (~mrig@user/mrig)
[11:10:15] *** Quits: nitrix (~nitrix@user/nitrix) (Ping timeout: 256 seconds)
[11:10:29] *** Joins: nitrix (~nitrix@user/nitrix)
[11:10:32] *** Quits: hinata (~hinata@2409:4042:2d11:cfb3:1419:21da:6540:1401) (Quit: Leaving)
[11:12:26] *** Joins: zer0x_ (~zer0x@42.113.143.168)
[11:12:36] *** Quits: Alhazred (~Alhazred@45.129.56.151) (Ping timeout: 272 seconds)
[11:13:26] *** Joins: hashfunca51 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96)
[11:13:26] *** Quits: kaph (~kaph@net-109-116-117-37.cust.vodafonedsl.it) (Ping timeout: 260 seconds)
[11:13:57] *** Quits: gry (~kvirc@botters/gry) (Ping timeout: 240 seconds)
[11:14:12] *** Joins: Alhazred (~Alhazred@ool-18b829c5.dyn.optonline.net)
[11:14:57] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[11:24:06] *** Joins: cherrry9 (~jan@ded246.neoplus.adsl.tpnet.pl)
[11:26:35] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[11:28:48] *** Joins: gry (~kvirc@botters/gry)
[11:31:01] <goodfella> hi dave0 :)
[11:32:28] *** Joins: Klinda (~superleag@user/klinda)
[11:32:58] *** Joins: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:4d2e:385:779a:d7c4)
[11:37:11] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[11:38:35] *** Quits: arinov_ (~arinov@176.236.130.138) (Ping timeout: 272 seconds)
[11:39:22] *** Joins: aradesh (~aradesh@user/aradesh)
[11:42:11] *** Joins: arinov_ (~arinov@176.236.130.138)
[11:43:55] <dave0> maw goodfella
[11:44:50] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[11:46:09] *** Joins: Rounin (~david@84.212.130.215)
[11:46:15] *** Quits: hashfunca51 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96) (Remote host closed the connection)
[11:59:12] *** Quits: dexter0 (~dexter0@c-69-181-126-161.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[12:02:23] *** Joins: dexter0 (~dexter0@c-69-181-126-161.hsd1.ca.comcast.net)
[12:05:15] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 240 seconds)
[12:07:32] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[12:07:32] *** Joins: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr)
[12:07:47] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[12:09:38] *** Joins: jellie (~luv_panda@user/jellie)
[12:10:29] *** Joins: tiotags (~tiotags@user/tiotags)
[12:12:16] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[12:13:14] *** Joins: cadmio (~cadmio@151.35.67.155)
[12:14:03] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[12:21:25] *** Joins: zmt00 (~zmt00@user/zmt00)
[12:21:25] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[12:22:03] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[12:23:57] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[12:25:29] <cadmio> when I try to save a file https://paste.gnome.org/p1bi3ymfi#line-107 I get this on opening https://imgur.com/DD9sLFR.png if you know any possible cause let me know
[12:27:53] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[12:27:55] *** Quits: SymbioticFemale (~Symbiotic@user/SymbioticFemale) (Ping timeout: 240 seconds)
[12:28:36] *** Quits: kts (~kts@103.73.237.191) (Quit: Konversation terminated!)
[12:32:24] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:602a:2cae:7652:6a22) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[12:34:40] *** Joins: savolla (~quassel@95.10.204.117)
[12:42:59] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[12:45:37] *** Joins: cart_ (~cart@185.191.86.4)
[12:47:06] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:47:07] *** Joins: hinata (~hinata@2409:4042:2d11:cfb3:1419:21da:6540:1401)
[12:51:09] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[12:52:09] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Remote host closed the connection)
[12:53:15] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[12:55:46] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 245 seconds)
[12:57:39] *** Joins: SymbioticFemale (~Symbiotic@user/SymbioticFemale)
[12:59:38] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:602a:2cae:7652:6a22)
[13:00:13] *** Joins: arinov (~arinov@5.24.108.1)
[13:02:44] *** Quits: arinov_ (~arinov@176.236.130.138) (Ping timeout: 256 seconds)
[13:03:02] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 240 seconds)
[13:03:28] *** Joins: kts (~kts@103.73.237.191)
[13:04:06] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[13:04:30] *** Joins: mrig (~mrig@user/mrig)
[13:05:17] <cadmio> I've this issue https://paste.gnome.org/pttio2dv4 with this code at that point litos->fileSaved[page] should be TRUE; but instead is FALSE
[13:05:40] *** Joins: kish` (~aqua@user/aqua)
[13:06:50] <cadmio> uhh I used == instead of =
[13:08:35] *** Joins: plastico (~plastico@neomutt/plastico)
[13:09:55] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 240 seconds)
[13:13:54] *** Joins: kish` (~aqua@user/aqua)
[13:14:07] *** Quits: fe23 (~fe23@2409:8a34:46c:f80:1d18:327:a99c:3a5e) (Ping timeout: 256 seconds)
[13:17:48] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:602a:2cae:7652:6a22) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[13:20:35] *** Quits: SymbioticFemale (~Symbiotic@user/SymbioticFemale) (Ping timeout: 240 seconds)
[13:23:24] <dave0> bummer
[13:23:32] <dave0> cadmio: i feel for you :-(
[13:25:29] *** Joins: SymbioticFemale (~Symbiotic@user/SymbioticFemale)
[13:26:32] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:350b:c716:fa56:ddbc)
[13:28:07] *** Joins: lightningwright (~lightning@user/lightningwright)
[13:28:55] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[13:32:12] *** Joins: MarderIII (~MarderIII@2001:985:e889:1:3546:d0af:71c1:9571)
[13:35:24] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 240 seconds)
[13:37:56] *** Quits: Jck_true (~jcktrue@user/jck-true/x-0200799) (Quit: The Lounge - https://thelounge.chat)
[13:38:08] *** Joins: Jck_true (~jcktrue@user/jck-true/x-0200799)
[13:40:08] *** Quits: beepbooptheory (~mik@c-73-13-112-194.hsd1.pa.comcast.net) (Ping timeout: 256 seconds)
[13:40:53] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[13:43:32] *** Quits: gry (~kvirc@botters/gry) (Ping timeout: 256 seconds)
[13:45:24] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[13:48:34] *** Quits: malloy (~jimery@116.30.220.175) (Quit: WeeChat 3.0)
[13:49:04] <chiselfuse> is an unsigned short guaranteed to be 16 bits? and if it is, then what would be the conceptual difference between using unsigned short vs uint16_t?
[13:49:53] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:3546:d0af:71c1:9571) (Ping timeout: 250 seconds)
[13:50:11] <dave0> unsigned short is at least 16 bits, uint16_t is exactly 16 bits
[13:50:52] <shiroyasha> cadmio: A line like that triggers a clang warning for -Wunused-comparison which seems to be enabled by default.
[13:50:59] <chiselfuse> dave0: oki thx
[13:51:24] <cadmio> I'm using this to compile "CFLAGS = -std=c99 -W -Wextra -Wall -Wshadow -Wconversion -ggdb3"
[13:51:25] <NRK> and afaik uintN_t types aren't guaranteed to exist
[13:52:12] <NRK> no -Wpedantic ?
[13:52:39] <chiselfuse> NRK: then what would i use instead?
[13:53:00] <NRK> for what?
[13:53:24] <chiselfuse> if i wanted to deal with chunks of N bits
[13:53:40] <NRK> sure you can use uint16_t
[13:53:43] <sham1> You have things like uint_least16_t which you may use as well
[13:53:56] <NRK> or uint_least16_t
[13:54:05] <chiselfuse> NRK: but you said it's not guaranteed to exist
[13:54:18] <NRK> pretty much every platform has them
[13:54:23] <chiselfuse> :)
[13:54:31] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[13:54:34] <sham1> You'd just need to do something like `x & 0xFFFF` or `x % (1 << 16)` anytime you do something with them because uint_least16_t is at least 16 bits but for arithmetic you need to make sure that only the bottom 16 are used
[13:54:35] *** Joins: MarderIII (~MarderIII@2001:985:e889:1:3546:d0af:71c1:9571)
[13:54:37] <dave0> chiselfuse: you don't have to sacrifice all for portability
[13:54:46] <NRK> so if you're targetting platform that doesn't have exact 16bit, i think you'd know taht
[13:54:47] <NRK> as it's rare
[13:55:03] <dave0> some of your shining jewels of a program may not be portable
[13:55:10] <chiselfuse> so what's the difference between uint_least16_t and short unsigned then?
[13:55:29] <dave0> chiselfuse: uint_least16_t is stupider
[13:55:31] <chiselfuse> unsigned short*
[13:55:34] <NRK> most C programs aren't portable due to libraries and deps
[13:55:36] <sham1> They're the same, although uint_least16_t is more semantically clear
[13:55:41] <NRK> not because they used uint16_t
[13:55:41] <dave0> how awful it is to read and write
[13:55:52] <chiselfuse> i agree with sham1
[13:55:53] <sham1> dave0: that's why we invented autocompletion
[13:56:22] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[13:56:31] <dave0> autocomplete my butt
[13:56:32] <chiselfuse> i mean, unsigned short makes me look up its width, at least me
[13:56:38] <dave0> it's awful to read
[13:57:12] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[13:57:28] <NRK> me? i personally use ushort
[13:57:32] <chiselfuse> #define unsigned_int_compromised_of_at_least_16_bits_type uint_least16_t
[13:58:13] <sham1> I just use u16
[13:58:15] * sham1 runs
[13:58:20] <chiselfuse> wait what?
[13:58:36] <chiselfuse> is there u16 really?
[13:58:54] <NRK> if you typedef it
[13:58:57] <sham1> If you define it, sure
[13:59:11] <chiselfuse> like in holyc?
[13:59:11] <NRK> typedef uint16_t u16;
[13:59:24] *** Parts: cadmio (~cadmio@151.35.67.155) (WeeChat 3.0)
[13:59:39] <NRK> holyc ints are not even compareable to C afaik
[13:59:51] <dave0> https://github.com/WebAssembly/design/blob/main/Rationale.md   ‚Ä¢Smaller types (such as i8 and i16) are usually no more efficient and in languages like C/C++ are only semantically meaningful for memory accesses since arithmetic get widened to i32 or i64
[14:00:10] <dave0> memory access
[14:00:12] <chiselfuse> NRK: why so?
[14:00:12] <NRK> you can do shit like `I64 i; i.u8[0]` to get the least significant byte of `i`
[14:00:15] *** Joins: random-nick (~random-ni@87.116.179.129)
[14:00:23] <NRK> all the ints in holyc are actually "unions"
[14:00:46] <chiselfuse> that's interesting
[14:01:24] *** Joins: m4r35n357 (~m4r35n357@host-78-151-108-203.as13285.net)
[14:01:32] <chiselfuse> but in memory that's stored the same
[14:01:38] <shiroyasha> ,cc typedef uint8_t u8; printf(u8"Test.\n");
[14:01:41] <candide> shiroyasha: Test.
[14:01:48] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[14:01:52] <shiroyasha> Hmm.
[14:02:09] <dave0> i use posix, and if i need low level memory access i cut&paste some inline functions i wrote long ago that read and write big/little endian fixed size integers
[14:02:14] <sham1> shiroyasha: there's of course a difference between the u8-string literal and u8
[14:02:56] <chiselfuse> shiroyasha: i don't understand the syntax of what that is in printf
[14:02:58] <dave0> along the lines of    struct inline int in16le(const unsigned ptr[2]) { return ptr[0] << 8 | ptr[1]; }
[14:03:09] <dave0> everything else i use int
[14:03:39] <dave0> i got my function wrong because i didn't copy&paste that
[14:03:43] <dave0> oh well
[14:03:44] <chiselfuse> a u8-string literal?
[14:03:51] <sham1> Yes
[14:04:57] <dave0> oh sometimes using a smaller type saves memory, but it's got to be a big saving
[14:07:42] <chiselfuse> for (int i = nbytes; i > 1; i -= 2) {
[14:08:01] *** Joins: heineken (~i.am@user/heineken)
[14:08:02] <chiselfuse> this spacing looks so ugly but it's consistent, can someone suggest me something better?
[14:08:24] <chiselfuse> consistent with how the rest of the code is written
[14:09:04] <NRK> that spacing looks fine to me
[14:09:28] *** Joins: nostoi (~nostoi@7.red-79-148-200.dynamicip.rima-tde.net)
[14:09:33] <sham1> That's the normal spacing
[14:09:37] <chiselfuse> hmm, maybe
[14:09:39] <chiselfuse> alrighty
[14:09:43] <chiselfuse> i'm convinced
[14:15:09] *** Quits: nostoi (~nostoi@7.red-79-148-200.dynamicip.rima-tde.net) (Quit: Verlassend)
[14:23:07] *** Quits: joev (~joev@user/joev) (Remote host closed the connection)
[14:23:31] *** Joins: joev (~joev@user/joev)
[14:25:17] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 240 seconds)
[14:27:17] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[14:28:45] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[14:33:20] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[14:33:51] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[14:34:20] *** Joins: banc- (banc@gateway/vpn/airvpn/banc)
[14:34:54] *** Joins: oxfuxxx (~oxfuxxx@195.47.194.46)
[14:35:23] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 256 seconds)
[14:36:45] *** Joins: eddybilley (~freddieti@2a02-a454-7f89-1-ed6c-71bb-23cc-5eac.fixed6.kpn.net)
[14:36:49] *** Quits: tiotags (~tiotags@user/tiotags) (Quit: Leaving)
[14:39:02] *** Quits: arinov (~arinov@5.24.108.1) (Ping timeout: 240 seconds)
[14:41:26] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[14:41:36] *** Quits: banc- (banc@gateway/vpn/airvpn/banc) (Ping timeout: 272 seconds)
[14:47:34] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[14:51:49] *** Quits: m4r35n357 (~m4r35n357@host-78-151-108-203.as13285.net) (Quit: Leaving)
[14:52:30] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[14:53:07] *** Quits: savolla (~quassel@95.10.204.117) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:53:54] *** Joins: savolla (~quassel@95.10.204.117)
[14:55:13] *** Quits: oxfuxxx (~oxfuxxx@195.47.194.46) (Ping timeout: 256 seconds)
[14:56:29] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[14:58:50] *** Quits: joev (~joev@user/joev) (Ping timeout: 260 seconds)
[15:00:50] *** Joins: joev (~joev@user/joev)
[15:05:10] *** Joins: seninha (~chatzilla@user/seninha)
[15:07:48] *** Quits: eddybilley (~freddieti@2a02-a454-7f89-1-ed6c-71bb-23cc-5eac.fixed6.kpn.net) (Ping timeout: 240 seconds)
[15:09:23] *** Quits: dld (~davidlowr@98.217.187.57) (Ping timeout: 256 seconds)
[15:11:18] *** Joins: cadmio (~cadmio@151.35.67.155)
[15:12:02] <cadmio> I'm getting these warnings I'd like to remove https://paste.gnome.org/pxyznj10h
[15:12:04] *** Quits: suss (~user@user/suss) (Ping timeout: 268 seconds)
[15:12:57] <cadmio> https://paste.gnome.org/pwhmjxalp#line-51
[15:14:36] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (Ping timeout: 240 seconds)
[15:15:15] <NRK> you could explicitly cast
[15:15:57] <cadmio> I copied the code from here https://developer.gnome.org/documentation/tutorials/beginners/getting_started/opening_files.html
[15:18:07] *** Joins: nostoi (~nostoi@7.red-79-148-200.dynamicip.rima-tde.net)
[15:19:38] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:fc98:bb5f:7d17:fcbd)
[15:22:55] *** Quits: nostoi (~nostoi@7.red-79-148-200.dynamicip.rima-tde.net) (Client Quit)
[15:23:06] *** Joins: DPA (~DPA@94.16.128.75)
[15:25:15] <cadmio> ok I casted it
[15:25:38] *** Joins: gargus (~user@27-32-195-30.static.tpgi.com.au)
[15:25:57] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[15:27:12] *** Joins: Darkcoal (~user@user/Darkcoal)
[15:27:31] *** Joins: oscurochu (~oscurochu@2603-9000-c202-1034-ecbc-c4db-21c9-0a46.inf6.spectrum.com)
[15:30:17] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:30:41] <cadmio> I've noticed this issue: the first word in the saved file is not encoded in utf8 but the rest of the text is
[15:31:04] *** Joins: csrf (~csrf@user/csrf)
[15:32:37] *** Quits: cherrry9 (~jan@ded246.neoplus.adsl.tpnet.pl) (Ping timeout: 256 seconds)
[15:33:01] *** Quits: unlink2 (~unlink@p200300ebcf147a00a0c5a97c70c72521.dip0.t-ipconnect.de) (Remote host closed the connection)
[15:35:18] <chiselfuse> https://bpa.st/57LQ
[15:35:21] *** Quits: cadmio (~cadmio@151.35.67.155) (Quit: WeeChat 3.0)
[15:35:36] <chiselfuse> can someone explain to me why not just       sum += *(u_char*)ptr;   on line 15?
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:52] <chiselfuse> raw: https://bpa.st/raw/57LQ
[15:38:50] *** Joins: Dsee4 (~DSee@198.147.22.136)
[15:39:21] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[15:41:25] <ChoHag> I think somebody was defensively cargo culting.
[15:41:58] <chiselfuse> are you talking about the code i sent? and what is cargo culting?
[15:42:23] *** Joins: ymwm (~yingmanwu@27.153.164.47)
[15:42:53] <novns> chiselfuse, portability, different byte order on some architectures
[15:43:00] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 240 seconds)
[15:43:38] *** Quits: Dsee4 (~DSee@198.147.22.136) (Client Quit)
[15:43:56] <ChoHag> I don't think it will achieve that.
[15:44:08] <chiselfuse> novns: byte order being endianness?
[15:44:13] <novns> yes
[15:44:50] <chiselfuse> i think this was ripped from kernel code, if it hints at anything
[15:45:10] <chiselfuse> or parts of it at least
[15:45:18] *** Joins: Darkcoal (~user@user/Darkcoal)
[15:45:22] <chiselfuse> i *think*...
[15:45:34] <ChoHag> novns: That's a compelling argument. You've convinced me.
[15:45:56] <novns> chiselfuse, you can test yourself with different endianness
[15:45:57] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:46:00] *** Quits: gargus (~user@27-32-195-30.static.tpgi.com.au) (Quit: Leaving)
[15:46:16] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:46:52] <chiselfuse> could you explain how or at least where exactly the different endianness-depending behavior would occur?
[15:46:53] *** Joins: jellie (~luv_panda@user/jellie)
[15:47:03] <ChoHag> The memory at ptr is accessed in the same way regardless. What's happening here is that the value's upgraded to a short first and then to a long.
[15:47:03] <chiselfuse> novns: is there an easy way to test that?
[15:48:03] <ChoHag> That might help in some weird edge cases but I can't see how.
[15:49:10] <ChoHag> Maybe that char->short step does something odd.
[15:49:28] <ChoHag> It is an odd byte after all.
[15:49:58] *** Joins: DSee (~DSee@198.147.22.136)
[15:49:59] <chiselfuse> pun intended?
[15:50:12] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 240 seconds)
[15:50:43] <ChoHag> Punning is not a good idea in C.
[15:50:56] <chiselfuse> :P
[15:51:09] <rcf> ChoHag: it ensures that the low byte (in memory) is set in oddbyte without needing to know the specific byte ordering. sum += *(u_char*)ptr would always add it as the least significant byte.
[15:51:34] <novns> chiselfuse, https://godbolt.org/ possibly
[15:51:39] *** Joins: Darkcoal (~user@user/Darkcoal)
[15:52:55] *** Joins: cherrry9 (~jan@ded246.neoplus.adsl.tpnet.pl)
[15:53:10] *** Quits: lightningwright (~lightning@user/lightningwright) (Ping timeout: 272 seconds)
[15:54:17] <ChoHag> So on some architectures it's effectively (val<<8)?
[15:54:41] *** Joins: useretail (~useretail@185.132.19.151)
[15:55:32] *** Quits: DSee (~DSee@198.147.22.136) (Quit: Quit)
[15:56:16] <chiselfuse> now i don't understand why assuming ptr points to a buffer of bytes, it would be safe to cast them by groups of two to unsigned shorts and sum them up without considering endianness
[15:56:17] <dave0> it's being too clever
[15:56:56] <chiselfuse> on line 9 that is
[15:57:21] <ChoHag> That reads a short (two bytes) from memory because ptr is a short pointer.
[15:57:37] <ChoHag> Line 15 reads 1 because (u_char*)ptr is a u_char pointer.
[15:57:42] <chiselfuse> i know, i'm asking why that's safe to do
[15:57:55] <chiselfuse> reading shortss that is
[15:58:08] * ChoHag shrugs
[15:58:14] <ChoHag> That's what the checksum algorithm demands.
[15:58:17] <rcf> chiselfuse: if you got it from the kernel it's because they disabled aliasing rules so you can do whatever you want.
[15:58:35] *** Joins: cosimone` (~user@93-34-132-33.ip49.fastwebnet.it)
[15:58:53] <dave0> chiselfuse: what is the call to   csum()   ?
[15:59:02] <rcf> Don't ever assume what you see there is safe in your own real C project.
[15:59:37] *** Quits: seninha (~chatzilla@user/seninha) (Ping timeout: 240 seconds)
[15:59:47] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:3546:d0af:71c1:9571) (Ping timeout: 252 seconds)
[15:59:56] <dave0> this gives different answers on big/little endian, but if you compare answer to some unsigned short field, it probably works
[15:59:58] <rcf> chiselfuse: strictly speaking you are only ever allowed to access arbitrary data through character types, this is not allowed by the standard but MUH SPEED so people do it anyway.
[16:00:10] <dave0> yeah this is a speedup hack
[16:00:17] <chiselfuse> this is the whole thing, idk where the guy got it from: https://github.com/seifzadeh/c-network-programming-best-snipts/blob/master/Programming%20raw%20udp%20sockets%20in%20C%20on%20Linux
[16:00:29] <chiselfuse> dave0: ^
[16:00:30] <dave0> plus linux kernel isn't standard c... it's gnu c... a different language
[16:00:34] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Ping timeout: 250 seconds)
[16:00:39] <rcf> It's not even GNU C.
[16:00:54] <rcf> GNU C makes use of strict aliasing optimizations.
[16:02:20] <chiselfuse> char *pseudogram; is what is being passed
[16:02:22] *** Quits: goodfella (~archer@user/tessio) (Quit: WeeChat 3.4)
[16:02:35] *** Quits: SymbioticFemale (~Symbiotic@user/SymbioticFemale) (Ping timeout: 240 seconds)
[16:02:45] <dave0> chiselfuse: it's too clever for it's own good.. bad example to learn from
[16:02:53] <chiselfuse> i think i should just rewrite it from the rfc at this point
[16:03:13] <rcf> Better that you understand it now and then optimize later.
[16:03:28] <chiselfuse> well i'm trying to understand it
[16:03:46] <chiselfuse> char *pseudogram is being passed to csum()
[16:03:49] <dave0> if it's doing some checksum on a udp packet, yeah go to the source and read the rfc
[16:04:13] <dave0> it looks like a 1's complement checksum
[16:04:34] <dave0> the rfc will tell you the algorithm
[16:04:36] <chiselfuse> so firstly, how would that be endianness-safe to cast stuff from a char * as unsigned shorts
[16:05:40] <chiselfuse> dave0: i'm just giving a shot at understanding it one more time because rcf told to
[16:05:47] <dave0> chiselfuse: it will produce a different result per endian, but the test may be swapped and cancel it out
[16:06:04] <rcf> In the case of a UDP checksump you will have the data in big endian by the time you compute the checksum
[16:06:15] <dave0> it may add up byte-swapped shorts, but the test is also byte-swapped so it compares equal
[16:06:49] <chiselfuse> is this the same that rcf said?
[16:07:49] <dave0> it looks like they went to much effort to optimize this.. i'd consider writing it in assembly :-)
[16:08:32] *** Joins: SymbioticFemale (~Symbiotic@user/SymbioticFemale)
[16:08:38] *** Joins: seninha (~chatzilla@user/seninha)
[16:08:53] <chiselfuse> at the cost of clarity.. but is it maybe peak clarity to someone more used to c?
[16:09:26] *** Joins: constxd (~brad@142.134.79.191)
[16:09:29] <constxd> hey kings!
[16:09:36] <chiselfuse> hey king
[16:09:54] <dave0> chiselfuse: no, it looks like it depend on endianess which raises a red flag
[16:10:00] <ChoHag> chiselfuse: rcf and I debated it for a bit. dave0 immediately rejected it. YMMV.
[16:10:28] <rcf> chiselfuse: also I mean it is better to implement this yourself from your understanding of the RFC.
[16:10:38] *** Joins: freakazoid343 (~matt@2603:9000:cf03:86c3:1939:d42:288:3891)
[16:10:40] *** Quits: DonRichie (~DonRichie@ricl.de) (Quit: bye)
[16:11:05] <ChoHag> The more I get to know C the more verbose and explicit I want the code to be.
[16:11:20] <rcf> You may optimize as is necessary later on, but that's easier if you know what the code actually does.
[16:11:27] <constxd> so i have this socket listening on localhost:3000 right, and i open up my browser and point it there. but for some reason it seems to make a connection, do the HTTP request, then that connection is closed, and then it makes another connection but doesn't send any data
[16:11:45] <chiselfuse> rcf: i probably will but i'm just trying to understand this code for the sake of it now
[16:11:46] <constxd> so my server just sits there in the read() call waiting
[16:11:53] <rcf> constxd: which HTTP version
[16:11:56] <constxd> 1.1
[16:12:08] <constxd> is my browser being weird or am i doing something wrong
[16:12:09] <chiselfuse> rcf or for the sake of idk, learning something
[16:12:23] <chiselfuse> even if it might be bad code
[16:12:40] <fizzie> Adding byte-swapped shorts and then byte-swapping the result doesn't mean it will all just "work out".
[16:13:14] <dave0> fizzie: it looks like it will in this case
[16:13:14] <fizzie> If you add the 16-bit values "ff 00" and "01 00", the result is either "00 00" or "00 01" depending on endianness.
[16:13:16] *** Quits: freakazoid333 (~matt@2603:9000:cf03:86c3:1939:d42:288:3891) (Ping timeout: 245 seconds)
[16:13:26] <dave0> fizzie: 1's complement arithmetic
[16:13:54] <dave0> the code is subtle and something something dragons
[16:15:09] *** Joins: MarderIII (~MarderIII@2001:985:e889:1:3546:d0af:71c1:9571)
[16:15:11] <dave0> it's terrible code
[16:15:11] *** Joins: lightningwright (~lightning@user/lightningwright)
[16:15:51] <dave0> it should come with a page-long comment explaining why it works when it looks so bad
[16:16:51] <fizzie> Mhm, right. It uses a longer-than-16 bit type to do that. I guess I could be convinced it works out for that special case. Just don't walk away with the idea that it's always an okay thing to do.
[16:16:52] <constxd> rcf: the browser asked me to keep the connection alive but i closed it, is that why it might open a new connection right away?
[16:17:03] <chiselfuse> does anyone know where the udp checksum algorithm is in the linux kernel? i tried looking around here: https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/net/ipv4/udp.c
[16:17:19] <rcf> constxd: that would make sense
[16:18:01] *** Joins: evexor (~user@176.217.239.55)
[16:18:16] <evexor> hello guys, I'm trying to hook a golang function, I found this on github https://github.com/brahma-adshonor/gohook
[16:18:23] <evexor> but when I tried injecting it using a dll into my golang binary it failed to hook the golang binary.
[16:18:28] <evexor> it gave me an error: jmp instruction in body overflow.
[16:18:30] *** Joins: Warkruid (~MarderIII@enneman.demon.nl)
[16:18:32] <evexor> Do you guys know how I can hook a golang binary method programatically?
[16:18:34] <chiselfuse> there's some pseudoheader/csum identifier there but i can't make out of it anything
[16:19:22] *** Joins: Guest36 (~Guest36@176.217.239.55)
[16:19:30] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[16:19:44] *** Quits: kts (~kts@103.73.237.191) (Quit: Konversation terminated!)
[16:19:51] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[16:20:22] <fizzie> chiselfuse: `csum_tcpudp_magic`, I believe. There's architecture-specific implementations for it.
[16:20:30] *** Quits: figrita (~figrita@2603-7080-9801-332f-5813-eeaf-976d-830a.res6.spectrum.com) (Remote host closed the connection)
[16:20:32] <evexor> j
[16:20:42] *** Quits: Guest36 (~Guest36@176.217.239.55) (Client Quit)
[16:20:45] <fizzie> https://elixir.bootlin.com/linux/latest/C/ident/csum_tcpudp_magic
[16:20:47] <candide> Title of fizzie's link: csum_tcpudp_magic identifier - Linux source code (v5.16.11) - Bootlin
[16:20:49] *** Joins: figrita (~figrita@2603-7080-9801-332f-5813-eeaf-976d-830a.res6.spectrum.com)
[16:21:33] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:3546:d0af:71c1:9571) (Ping timeout: 250 seconds)
[16:24:16] <chiselfuse> fizzie: and that goes down to inline assembly, right?
[16:24:31] *** Joins: yingmanwumen (~yingmanwu@27.153.164.47)
[16:24:44] <fizzie> chiselfuse: Yes. Also that one's specifically for the fixed-length header bits. I think the one for an arbitrary-sized buffer is (for x86-64) is `csum_partial` here, but...: https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/x86/lib/csum-partial_64.c#n35
[16:25:01] <fizzie> Not the place to look for portable code.
[16:25:14] <chiselfuse> heh
[16:27:55] *** Quits: joev (~joev@user/joev) (Ping timeout: 256 seconds)
[16:28:49] *** Joins: joev (~joev@user/joev)
[16:31:35] *** Quits: SymbioticFemale (~Symbiotic@user/SymbioticFemale) (Ping timeout: 240 seconds)
[16:31:59] *** Joins: yingmanwumen_ (~yingmanwu@110.85.66.170)
[16:31:59] *** Quits: hinata (~hinata@2409:4042:2d11:cfb3:1419:21da:6540:1401) (Remote host closed the connection)
[16:32:11] *** Joins: yingmanwumen__ (~yingmanwu@110.85.66.170)
[16:32:18] *** Joins: hinata (~hinata@2409:4042:2d11:cfb3:2482:e1dc:a2e1:9586)
[16:32:34] *** Quits: yingmanwumen_ (~yingmanwu@110.85.66.170) (Client Quit)
[16:32:56] *** Quits: yingmanwumen__ (~yingmanwu@110.85.66.170) (Remote host closed the connection)
[16:33:16] *** Joins: yingmanwumen_ (~yingmanwu@110.85.66.170)
[16:34:22] *** Joins: drbeco (~beco@2804:351c:dd01:f000:a19e:a89a:e0cb:cec7)
[16:34:35] *** Joins: SymbioticFemale (~Symbiotic@user/SymbioticFemale)
[16:34:36] *** Quits: yingmanwumen (~yingmanwu@27.153.164.47) (Ping timeout: 240 seconds)
[16:34:58] *** Quits: ymwm (~yingmanwu@27.153.164.47) (Ping timeout: 272 seconds)
[16:35:08] *** Quits: yingmanwumen_ (~yingmanwu@110.85.66.170) (Max SendQ exceeded)
[16:35:38] *** Joins: yingmanwumen_ (~yingmanwu@110.85.66.170)
[16:38:13] *** Quits: lightningwright (~lightning@user/lightningwright) (Quit: Leaving)
[16:39:24] *** Quits: joev (~joev@user/joev) (Ping timeout: 240 seconds)
[16:39:59] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[16:40:25] *** Joins: joev (~joev@user/joev)
[16:41:35] *** Quits: SymbioticFemale (~Symbiotic@user/SymbioticFemale) (Ping timeout: 240 seconds)
[16:41:56] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 272 seconds)
[16:42:03] *** Parts: yingmanwumen_ (~yingmanwu@110.85.66.170) ()
[16:44:43] *** Quits: z14 (~alzee@user/alzee) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[16:45:10] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 2.8)
[16:46:02] *** Joins: ymwm (~yingmanwu@110.85.66.170)
[16:49:35] *** Joins: SymbioticFemale (~Symbiotic@user/SymbioticFemale)
[16:49:58] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[16:51:07] *** Joins: fe23 (~fe23@2409:8a34:46c:f80:f5cf:c25c:bb7d:516c)
[16:52:08] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[16:52:29] *** Joins: z14 (~alzee@user/alzee)
[16:53:05] *** Joins: brad_mssw (~bhouse@2601:344:4100:b490:3469:9fdc:2fe3:47dc)
[16:54:47] *** Joins: HaMsTeRs (~Thunderbi@210.3.213.4)
[16:55:07] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[16:55:17] *** Quits: drbeco (~beco@2804:351c:dd01:f000:a19e:a89a:e0cb:cec7) (Read error: Connection reset by peer)
[16:56:58] *** Joins: hiroshi_ (~freedom@151.43.11.126)
[16:58:02] *** Quits: tetravus (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[16:58:16] *** Joins: not_not (~not_not@193.178.220.11)
[16:58:33] *** Joins: MarderIII (~MarderIII@2001:985:e889:1:3546:d0af:71c1:9571)
[16:58:55] *** Quits: SymbioticFemale (~Symbiotic@user/SymbioticFemale) (Ping timeout: 240 seconds)
[16:59:19] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[17:00:07] *** Joins: SymbioticFemale (~Symbiotic@user/SymbioticFemale)
[17:00:17] *** Joins: tetravus (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net)
[17:01:45] *** Joins: kts (~kts@103.73.237.100)
[17:05:17] *** Quits: hinata (~hinata@2409:4042:2d11:cfb3:2482:e1dc:a2e1:9586) (Quit: Leaving)
[17:05:43] *** Joins: Tempesta (~Tempesta@user/tempesta)
[17:06:35] *** Joins: drbeco (~beco@2804:351c:dd01:f000:a19e:a89a:e0cb:cec7)
[17:08:23] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:b5ed:7ad4:d3ea:f759)
[17:08:23] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:b5ed:7ad4:d3ea:f759) (Changing host)
[17:08:23] *** Joins: skapata (~Skapata@user/skapata)
[17:09:24] <constxd> kings
[17:09:56] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[17:10:11] <constxd> if i call close() on a fd is it automatically removed from any epolls that it's in
[17:10:19] <constxd> can't remember
[17:11:13] *** Quits: zer0x_ (~zer0x@42.113.143.168) (Ping timeout: 256 seconds)
[17:11:23] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[17:14:05] <constxd> nvm found the man page where it's explained
[17:14:16] *** Joins: pulse (~pulse@user/pulse)
[17:14:35] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[17:14:58] *** Quits: herrhotzenplotz (~herrhotze@user/herrhotzenplotz) (Quit: Segmentation fault (core dumped))
[17:15:07] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[17:15:16] *** Joins: herrhotzenplotz (~herrhotze@user/herrhotzenplotz)
[17:18:43] *** Joins: oxfuxxx (~oxfuxxx@185.156.174.5)
[17:19:40] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[17:19:45] *** Joins: perro (~perro@072-191-245-069.res.spectrum.com)
[17:19:52] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[17:21:07] *** Joins: gproto23 (~gproto23@user/gproto23)
[17:21:23] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[17:21:25] *** Parts: perro_ (~perro@072-191-245-069.res.spectrum.com) (WeeChat 3.0.1)
[17:21:47] *** Joins: gproto23 (~gproto23@user/gproto23)
[17:25:55] *** Joins: Burger (~textual@user/burger)
[17:25:57] *** Quits: joev (~joev@user/joev) (Ping timeout: 256 seconds)
[17:26:43] *** Quits: evexor (~user@176.217.239.55) (Read error: Connection reset by peer)
[17:26:57] *** Joins: joev (~joev@user/joev)
[17:28:08] *** Joins: evexor (~user@176.217.239.55)
[17:28:49] *** Joins: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[17:29:04] *** flooded is now known as _flood
[17:29:14] *** Quits: hiroshi_ (~freedom@151.43.11.126) (Quit: hiroshi_)
[17:33:09] *** Joins: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder)
[17:34:12] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 240 seconds)
[17:34:44] *** Quits: oxfuxxx (~oxfuxxx@185.156.174.5) (Remote host closed the connection)
[17:35:35] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[17:36:32] *** Joins: VoidSync (~sync@user/voidsync)
[17:36:57] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[17:40:11] *** Quits: brad_mssw (~bhouse@2601:344:4100:b490:3469:9fdc:2fe3:47dc) (Quit: This computer has gone to sleep)
[17:40:35] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[17:41:59] *** Joins: brad_mssw (~bhouse@2601:344:4100:b490:4877:2fef:88be:cfc3)
[17:42:39] *** Joins: soapsudsxx (~soapsudsx@209.221.40.142)
[17:42:42] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[17:43:27] *** Joins: strajder (~strajder@user/strajder)
[17:44:06] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[17:45:04] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Client Quit)
[17:46:18] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Remote host closed the connection)
[17:47:40] *** Quits: soapsudsxx (~soapsudsx@209.221.40.142) (Remote host closed the connection)
[17:48:22] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[17:50:17] *** Joins: suss (~user@user/suss)
[17:50:23] *** Joins: gildasio (~gildasio@gateway/tor-sasl/gildasio)
[17:50:47] *** Joins: kamarat (~kamarat@81.161.60.198)
[17:51:03] *** Quits: kubrickdave_ (~kubrickda@80-121-15-46.adsl.highway.telekom.at) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[17:51:46] *** Joins: kubrickdave (~kubrickda@80-121-15-46.adsl.highway.telekom.at)
[17:52:34] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[17:52:55] *** Quits: SymbioticFemale (~Symbiotic@user/SymbioticFemale) (Ping timeout: 240 seconds)
[17:53:15] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Ping timeout: 240 seconds)
[17:54:25] *** Joins: beepbooptheory (~mik-wsl@50.216.98.94)
[17:54:58] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[17:54:59] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[17:55:51] *** Joins: SymbioticFemale (~Symbiotic@user/SymbioticFemale)
[17:56:10] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[17:57:42] *** Joins: dld (~davidlowr@2601:197:600:1210:ed7b:e2c7:ff84:e953)
[17:59:23] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[17:59:46] *** Joins: kish` (~aqua@user/aqua)
[18:00:03] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[18:00:23] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[18:01:19] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[18:02:15] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Ping timeout: 240 seconds)
[18:06:17] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:06:17] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:06:17] *** Joins: wroathe (~wroathe@user/wroathe)
[18:11:35] *** Joins: mrig (~mrig@user/mrig)
[18:14:10] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[18:16:55] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[18:19:25] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 240 seconds)
[18:19:48] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[18:20:21] *** Joins: sidy (~sidy@user/sidy)
[18:22:18] *** Joins: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[18:22:32] *** flooded is now known as _flood
[18:26:11] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:26:11] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:26:11] *** Joins: wroathe (~wroathe@user/wroathe)
[18:27:46] *** Joins: smol-hors (sid524992@smol/hors)
[18:28:51] *** Joins: the_lanetly_052_ (~the_lanet@194.135.167.86)
[18:29:32] *** Parts: smol-hors (sid524992@smol/hors) ()
[18:30:41] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[18:31:25] *** Quits: the_lanetly_052 (~the_lanet@194.135.168.16) (Ping timeout: 256 seconds)
[18:32:51] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[18:34:15] *** Quits: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[18:35:15] *** Quits: SymbioticFemale (~Symbiotic@user/SymbioticFemale) (Ping timeout: 240 seconds)
[18:37:07] *** Joins: SymbioticFemale (~Symbiotic@user/SymbioticFemale)
[18:37:55] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Ping timeout: 240 seconds)
[18:40:00] *** Joins: gildasio (~gildasio@gateway/tor-sasl/gildasio)
[18:40:07] *** Joins: Maaaanu (~manuel@ip5b429007.dynamic.kabel-deutschland.de)
[18:41:06] *** Quits: not_not (~not_not@193.178.220.11) (Read error: Connection reset by peer)
[18:45:10] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 260 seconds)
[18:46:17] *** Joins: mrig (~mrig@user/mrig)
[18:51:55] *** Quits: HaMsTeRs (~Thunderbi@210.3.213.4) (Quit: HaMsTeRs)
[18:52:07] *** Joins: jellie (~luv_panda@user/jellie)
[18:55:46] *** Joins: oscurochu2 (~oscurochu@94.140.11.72)
[18:56:22] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:3546:d0af:71c1:9571) (Ping timeout: 260 seconds)
[18:56:37] *** Quits: Warkruid (~MarderIII@enneman.demon.nl) (Ping timeout: 256 seconds)
[18:58:12] *** Quits: oscurochu (~oscurochu@2603-9000-c202-1034-ecbc-c4db-21c9-0a46.inf6.spectrum.com) (Ping timeout: 240 seconds)
[18:58:27] *** Joins: mocky-j (~Thunderbi@27.156.206.152)
[18:58:44] *** Quits: joev (~joev@user/joev) (Ping timeout: 272 seconds)
[18:59:05] *** Parts: mocky-j (~Thunderbi@27.156.206.152) ()
[18:59:10] *** Joins: joev (~joev@user/joev)
[19:00:15] *** Quits: SymbioticFemale (~Symbiotic@user/SymbioticFemale) (Ping timeout: 240 seconds)
[19:01:56] *** Quits: FragByte (~christian@user/fragbyte) (Quit: Quit)
[19:03:54] *** Joins: FragByte (~christian@user/fragbyte)
[19:06:24] *** Joins: SymbioticFemale (~Symbiotic@user/SymbioticFemale)
[19:07:37] *** Quits: ymwm (~yingmanwu@110.85.66.170) (Ping timeout: 272 seconds)
[19:08:35] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[19:08:51] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[19:09:56] *** Joins: dom2 (~dom2@c-65-96-173-68.hsd1.ma.comcast.net)
[19:13:10] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Remote host closed the connection)
[19:13:29] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[19:13:35] *** Quits: SymbioticFemale (~Symbiotic@user/SymbioticFemale) (Ping timeout: 240 seconds)
[19:13:55] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[19:14:13] *** Quits: joev (~joev@user/joev) (Ping timeout: 240 seconds)
[19:14:21] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[19:15:29] *** Joins: joev (~joev@user/joev)
[19:16:18] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:5bf7:7723:bd1c:6732)
[19:17:28] *** Joins: MarderIII (~MarderIII@2001:985:e889:1:3546:d0af:71c1:9571)
[19:17:30] *** Joins: Warkruid (~MarderIII@2001:985:e889:1:3546:d0af:71c1:9571)
[19:19:43] *** Joins: SymbioticFemale (~Symbiotic@user/SymbioticFemale)
[19:21:51] *** Joins: enneman__ (~MarderIII@enneman.demon.nl)
[19:24:51] *** Quits: Warkruid (~MarderIII@2001:985:e889:1:3546:d0af:71c1:9571) (Ping timeout: 250 seconds)
[19:24:51] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:3546:d0af:71c1:9571) (Ping timeout: 250 seconds)
[19:25:14] *** Joins: MarderIII (~MarderIII@enneman.demon.nl)
[19:26:30] *** Joins: fordcars (~fordcars@38.23.224.120)
[19:26:35] *** Quits: anshupatia (uid29854@id-29854.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[19:29:00] <fordcars> Hi! I am having an issue with execlp and pipes on Linux; My program hangs on one of my execlp as if it is awaiting input on its STDIN, but I do not understand why.
[19:29:01] <fordcars> https://pastebin.com/GjV7XwSF
[19:29:52] <fordcars> It seems to hang on line 40; if I use the normal STDIN instead of a pipe for 'cmd', I am able to get it working in the console. It just looks like one of the pipes isn't working as expected.
[19:30:56] <fordcars> Or perhaps I do not understand the usage of 'wait' in this case...
[19:31:24] <beastie> fordcars: without looking at the code I'd guess you have not closed the unused file descriptors in the pipes.
[19:32:12] <fordcars> When I'm done writing to the pipe, I have to close it^
[19:32:46] <beastie> nope... you need to close the unused file descriptors in the parent and the child.....
[19:32:57] <beastie> I'm about to see the code.... 1min.
[19:36:08] <beastie> when you dup pipe1[0] to act as STDIN you need to close pipe1[0] because you are not using it.
[19:36:33] <beastie> and the same to all the other pipe[12][]....
[19:37:03] <beastie> if you don't close the writer side of a pipe, the reader never sees EOF from its reading side.
[19:37:17] *** Joins: oscurochu_ (~oscurochu@2603:9000:c202:1034:fd35:dd8:8bf7:a17b)
[19:37:38] <beastie> and think that always you fork() (and you do it a lot of times) you dup() all file descriptors you have open.
[19:38:36] <beastie> if you create a fork() to send info to a child, you need (as the parent) to close the read side of the fifo, and the child needs to close the write sicde of the fifo, as they are not u sing them.
[19:39:12] <fordcars> Hmm, what do you mean by "if you don't close the writer side of a pipe, the reader never sees EOF from its reading side." Would this mean that if I dup a pipe without closing the "old" pipe, EOF will never be written?
[19:39:41] *** Quits: oscurochu2 (~oscurochu@94.140.11.72) (Ping timeout: 256 seconds)
[19:39:50] <beastie> if you don't (and you don't) then some process ends waiting for input while some other process is waiting (in wait()) waiting for the child to end.
[19:40:38] <beastie> the reader of a pipe only gets an EOF  condition, when all writers (all descriptors of the pipe opened for writing) do close() it.
[19:42:16] <fordcars> Oh wow, that's good to know; I'll try that out!
[19:42:19] <beastie> when you make the pipe() syscall, you receive both descriptors, the writing side, and the reading side... when you later fork() both descriptors are dupped in the child.... and only then, the parent must close one end (leaving the other to use it) and the child must close the other end, leaving the other side to comunicate....
[19:42:33] *** Quits: Cienisty (Cienisty@user/cienisty) (Quit: Error 606 | Demon not found)
[19:43:18] *** Joins: Cienisty (Cienisty@user/cienisty)
[19:43:37] *** Joins: alch (~alch@151.44.33.92)
[19:44:02] <beastie> fordcars: this is the most common error with io redirection in unix.... that was the reason i toold you "without looking at your code"
[19:44:40] <fordcars> This is what we've come up with: https://pastebin.com/33xnejt6
[19:45:26] <fordcars> beastie: that makes sense. Our teacher's assistant was absolutely not help what so ever, and simply stated that he would skip over the problem during correction because he couldn't figure it out himself.
[19:45:42] <beastie> for example...  you do dup2(pipe1[1], STDOUT_FILENO); in line 29.
[19:46:05] *** Quits: SymbioticFemale (~Symbiotic@user/SymbioticFemale) (Remote host closed the connection)
[19:46:06] <beastie> you must do close(pipe1[1]); before doing the execlp() in line 30....
[19:47:20] <beastie> and so in the parent, closing the pipe1[0] descriptor.... because you are going to use pipe1[1] to send info to the child.... (if yoou are not using it in the parent, but you have used pipes just to connect subprocesses, then you need to close both descriptors in the parent.
[19:48:21] <beastie> and in the above example, you are leaving without close() a writing side of a pipe.... :)
[19:48:44] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[19:55:42] *** Quits: thesemic1lons (~thesemico@user/thesemicolons) (Remote host closed the connection)
[19:56:48] <fordcars> beastie: great I believe I got it working:) ¬†thank you! That was the explanation I was missing
[19:56:58] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) ()
[19:57:16] *** Joins: DSee (~DSee@198.147.22.136)
[19:57:51] *** Joins: otty1 (~otty@2402:8100:3925:d800:fbfe:87b8:583c:a817)
[19:57:58] <beastie> it's a very common mistake....
[19:58:19] <beastie> I think I have answered that question in SO at least 6 or 7 times.
[19:59:06] *** Joins: cadmio (~cadmio@151.47.78.80)
[19:59:17] <cadmio> when creating a file I'm getting "The document is not UTF-8 valid"
[19:59:50] <beastie> have you checked it is UTF-8 ?
[19:59:53] <twkm> consult the documentation for the tool that reports that.
[20:00:29] <beastie> normally that happens if you break a multicharacter sequence.
[20:00:39] <cadmio> I think in the file there could be few non utf-8 characters
[20:00:54] <beastie> that's normally the problem.
[20:01:02] <twkm> so there you go.
[20:02:11] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:02:15] <cadmio> but I don't know what's the cause
[20:02:30] * pragma- squints at "multicharacter sequence"
[20:02:36] <pragma-> surely you mean multibyte
[20:02:39] <twkm> there's non utf-8 characters present.
[20:03:14] <twkm> that is what you said, and what it doesn't seem to like.
[20:03:24] <cadmio> yes but what's including it? I suspect the problem could be in the buffer creation https://paste.gnome.org/pmklxxsz4
[20:03:47] *** Joins: ymwm (~yingmanwu@110.85.66.170)
[20:03:50] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[20:04:18] *** Quits: ymwm (~yingmanwu@110.85.66.170) (Max SendQ exceeded)
[20:04:22] <twkm> try debugging.
[20:04:40] <cadmio> what should I look for?
[20:04:47] *** Joins: ymwm (~yingmanwu@110.85.66.170)
[20:04:54] *** Quits: chasmo77 (~chas77@c-71-193-246-4.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[20:05:04] <beastie> multibyte sequences in utf-8 all have the high bit on (all the bytes) the number of ones in the first byte (the highest significand bits) indicate how many bytes follow, so there must be those many bytes with the high bit on... if for some reason that is not true... a multibyte sequence is broken.
[20:05:22] *** Joins: chasmo77 (~chas77@c-71-193-246-4.hsd1.or.comcast.net)
[20:06:11] <twkm> sheesh, why do you keep repeating cadmio, LOOK FOR NON-UTF8.
[20:06:58] <beastie> read the utf-8 encoding specification and write a parser in C, it should be easy to do that.
[20:07:06] <twkm> you say there might be some, so find where you allow them to be added.
[20:08:14] <cadmio> if I give you the txt file could you be able to find the char?
[20:08:50] * pragma- snorts
[20:09:48] <beastie> yes, but why did you come here? utf-8 parsing is not C related question
[20:09:49] *** Quits: otty1 (~otty@2402:8100:3925:d800:fbfe:87b8:583c:a817) (Ping timeout: 240 seconds)
[20:09:51] <pragma-> i wouldn't be surprised if there's a website that can do that
[20:09:53] *** Joins: Guest34 (~Guest34@181.225.236.170)
[20:10:50] *** Quits: Guest34 (~Guest34@181.225.236.170) (Client Quit)
[20:12:12] *** Joins: otty1 (~otty@49.15.128.144)
[20:13:44] <cadmio> what's the specific channel for that?
[20:14:13] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
[20:15:21] *** Joins: HaMsTeRs (~Thunderbi@210.3.213.4)
[20:17:55] <pinheadmz> is there ever a reason to declare a static function in a header file ?
[20:18:12] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Read error: Connection reset by peer)
[20:18:28] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[20:19:00] <twkm> so other tu's can't "see" it.
[20:19:31] <twkm> thus many can have functions by the same name that are peculiar to that unit.
[20:19:42] <pinheadmz> whats tu mean ?
[20:20:05] <twkm> translation unit.
[20:20:16] <pinheadmz> aha thanks
[20:20:43] *** Quits: freakazoid343 (~matt@2603:9000:cf03:86c3:1939:d42:288:3891) (Read error: Connection reset by peer)
[20:20:49] <pinheadmz> wait but wouldnt adding the declaration to the header file mean other units CAN "see" it ?
[20:20:58] <pinheadmz> but since its static, other units cant use it ... ?
[20:23:13] *** Joins: magla (~gelignite@d5362c15.access.ecotel.net)
[20:25:58] *** Quits: brad_mssw (~bhouse@2601:344:4100:b490:4877:2fef:88be:cfc3) (Quit: Leaving)
[20:27:57] *** Quits: ymwm (~yingmanwu@110.85.66.170) (Quit: Leaving)
[20:28:35] *** Joins: ymwm (~yingmanwu@110.85.66.170)
[20:29:00] *** Quits: otty1 (~otty@49.15.128.144) (Ping timeout: 240 seconds)
[20:30:18] <cadmio> I foung a glib function that could be fit for the purpose g_utf8_make_valid
[20:30:35] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Quit: WeeChat 3.3)
[20:32:36] <pragma-> now we just need a g_fix_all_bugs
[20:32:48] <cadmio> https://paste.gnome.org/pevrvtybb#line-31
[20:32:52] *** Joins: angelacrust (~angelacru@171.50.165.251)
[20:33:05] <cadmio> in practice I get the whole string as non utf8
[20:33:48] <angelacrust> The program is not working as expected. The behaviour is reversed. https://bpa.st/YAZQ
[20:36:18] *** Joins: analognoise (~analognoi@45.83.89.205)
[20:36:40] <pragma-> angelacrust: reverse the program
[20:36:56] <angelacrust> Yes, but why is this happening?
[20:37:58] <pragma-> argv[0] is usually the program name rather than the first argument
[20:38:03] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[20:38:08] <angelacrust> Oh
[20:38:36] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[20:39:38] <angelacrust> If I change it to `argv[1]` it's reporting `segmentation fault`
[20:40:19] <angelacrust> oh wait, it's a 2D array right
[20:40:40] *** Parts: cadmio (~cadmio@151.47.78.80) (WeeChat 3.0)
[20:41:05] <masoudd> ,english char *argv[];
[20:41:07] <candide> masoudd: error: array size missing in 'argv'
[20:41:14] <masoudd> ,english char *argv[10];
[20:41:15] <candide> masoudd: Declare `argv` as an array of 10 elements of pointer to char.
[20:41:46] <angelacrust> I'm using a `string` type from a library
[20:42:23] <masoudd> doesn't matter what you use. argv is that
[20:42:24] <angelacrust> So I don't really have to worry about the declaring it as `char *`
[20:42:53] <angelacrust> The boilerplate code already had this given
[20:43:30] *** Quits: kts (~kts@103.73.237.100) (Quit: Konversation terminated!)
[20:43:47] <pragma-> ,cc puts(argv[0]);
[20:43:49] <candide> pragma-: /home/vm/3833/prog
[20:43:58] <pragma-> ,cc puts(argv[0]);
[20:44:00] <candide> pragma-: /home/vm/3864/prog
[20:44:05] <angelacrust> ,cc puts(argv[0][1])
[20:44:06] <candide> angelacrust: [warning: passing argument 1 of 'puts' makes pointer from integer without a cast [-Wint-conversion] note: expected 'const char *' but argument is of type 'char']  Program received signal SIGSEGV, Segmentation fault in __strlen_sse2 () called by main (argc=1, argv=0x7fffffffe428) at statement: puts(argv[0][1])
[20:44:13] *** Quits: cart_ (~cart@185.191.86.4) (Quit: Konversation terminated!)
[20:44:16] <pragma-> ,cc putchar(argv[0][1]);
[20:44:19] <candide> pragma-: h
[20:44:34] *** Joins: meator (~meator@user/meator)
[20:45:00] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[20:46:14] *** Quits: DSee (~DSee@198.147.22.136) (Quit: Quit)
[20:46:23] <sham1> ,cc printf("%s", argv[0]);
[20:46:25] <candide> sham1: /home/vm/3982/prog
[20:47:48] *** Joins: Akiva (~Akiva@user/Akiva)
[20:47:57] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Ping timeout: 240 seconds)
[20:48:32] <angelacrust> ,cc printf("%s", argv[1])
[20:48:34] <candide> angelacrust: (null)
[20:48:57] <pragma-> ,cc -args="hello world" puts(argv[1]);
[20:48:59] <candide> pragma-: hello
[20:49:09] <pragma-> ,cc -args="'hello world'" puts(argv[1]);
[20:49:11] <candide> pragma-: hello world
[20:49:29] *** Joins: strajder (~strajder@user/strajder)
[20:49:32] <angelacrust> hm
[20:49:43] <angelacrust> I think I know what the problem is
[20:49:56] <angelacrust> It is should be `argc != 2`
[20:50:10] <angelacrust> If argv[0] is the name of the program
[20:50:36] <angelacrust> *should be
[20:51:05] <constxd> ,grab angelacrust expected + pragma-
[20:51:05] <candide> Quote grabbed: 2148: <aÔªøngelacrust> The program is not working as expected. The behaviour is reversed. https://bpa.st/YAZQ <pÔªøragma-> ,cc -args="'hello world'" puts(argv[1]);
[20:51:16] <pragma-> smh
[20:51:21] <pragma-> ,delq 2148
[20:51:22] <candide> Deleted 2148: <aÔªøngelacrust> The program is not working as expected. The behaviour is reversed. https://bpa.st/YAZQ <pÔªøragma-> ,cc -args="'hello world'" puts(argv[1]);
[20:51:28] <angelacrust> ?
[20:51:33] <constxd> ,grab angelacrust expected + pragma- reverse
[20:51:34] <candide> Quote grabbed: 2148: <aÔªøngelacrust> The program is not working as expected. The behaviour is reversed. https://bpa.st/YAZQ <pÔªøragma-> angelacrust: reverse the program
[20:51:41] <BUTTS> pls no hax
[20:51:43] <angelacrust> what are you doing?
[20:51:45] <constxd> why doesn't it search forward
[20:51:54] <constxd> from the previous message
[20:51:54] <pragma-> search forward?
[20:51:56] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[20:51:57] <constxd> yes
[20:52:05] <pragma-> oh, from the previous message.
[20:52:14] <pragma-> interesting.
[20:52:54] <masoudd> ,delq 2150
[20:53:15] <angelacrust> constxd what were doing with the bot?
[20:53:29] <constxd> saving that quote because it's funny
[20:53:34] <pragma-> he thought the conversation was amusing and he stored it to be recalled later
[20:53:49] <angelacrust> lol
[20:54:29] <constxd> i hope the next version of the IRC spec has support for reacting to messages with emojis
[20:54:56] <sham1> IRCv3 actually does have some reaction stuff and I hate it
[20:55:07] <constxd> lmao
[20:55:25] <sham1> Well, it has that stuff under consideration
[20:55:29] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[20:55:48] *** Quits: raym (~raym@user/raym) (Quit: laptop battery died :()
[20:56:28] <angelacrust> there is no option to edit messages on IRC (?)
[20:57:04] <masoudd> nope
[20:57:08] <ChoHag> Which type is guaranteed to be the largest signed integer an implementation can handle?
[20:57:15] <sham1> No. Although I think that's also under consideration
[20:57:16] <constxd> intmax_t
[20:57:59] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Max SendQ exceeded)
[20:58:25] *** Joins: nehsou^ (~nehsou@50-202-219-146-static.hfc.comcastbusiness.net)
[20:58:35] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[20:59:33] *** Quits: angelacrust (~angelacru@171.50.165.251) (Quit: Client closed)
[21:01:01] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[21:01:29] <sham1> constxd: https://ircv3.net/specs/client-tags/react for more information
[21:01:30] <candide> Title of sham1's link: `react` client tÔªøag - IRCv3
[21:02:02] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:4d9c:b9bc:cc6f:7844)
[21:02:12] <fizzie> There's a C23 proposal to make (u)intptr_t mandatory, but as a concession allow them (as well as extended types wider than `long long`) to be larger than (u)intmax_t, since it's hard‚Ñ¢ to do ABI changes that would resize (u)intmax_t, but easy‚Ñ¢ to provide new types.
[21:02:31] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[21:04:31] <sham1> Not having an integer the size of a void* seems silly so that's good
[21:04:43] <sham1> Well, size of void* being mandatory
[21:04:47] *** Quits: riposte (~finalripo@119-17-138-70.77118a.mel.static.aussiebb.net) (Ping timeout: 272 seconds)
[21:07:27] *** Joins: angelacrust (~angelacru@171.50.165.251)
[21:08:13] *** Joins: unlink2 (~unlink@p200300ebcf147a00a0c5a97c70c72521.dip0.t-ipconnect.de)
[21:08:27] <angelacrust> Are there any standard flaws in this program? https://bpa.st/XGXQ
[21:09:30] *** Joins: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net)
[21:09:38] <fizzie> `scanf` might return 0 if there were no errors, but the input wasn't numeric. In which case you probably also want to exit.
[21:10:00] <sham1> I'd consider the use of scanf to be a flaw but that's just me
[21:10:03] <fizzie> Returning -1 as a status code is slightly weird. 1 is more common. EXIT_FAILURE is the portable one.
[21:10:14] *** Joins: hiroshi_ (~freedom@151.43.14.122)
[21:10:21] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[21:10:26] <angelacrust> Okay
[21:10:34] <fizzie> getchar() might return the macro EOF, in which case `s[getchar() % 10]++` would be invalid.
[21:10:35] *** Quits: oscurochu_ (~oscurochu@2603:9000:c202:1034:fd35:dd8:8bf7:a17b) (Ping timeout: 250 seconds)
[21:10:37] <sham1> On POSIX I tend to return -errno when applicable
[21:10:48] <fizzie> (But I guess that's the user's fault arguably.)
[21:11:15] *** Joins: wingsorc (~wingsorc@user/wingsorc)
[21:11:25] <angelacrust> fizzie: yeah, but the test cases are already defined in a given range
[21:11:38] <fizzie> The "\n" in the scanf format string will consume all whitespace, including that from the beginning of the next line, in case that matters for you.
[21:11:54] <fizzie> And I prefer not to use \n in scanf formats since it doesn't mean a newline.
[21:12:36] <angelacrust> Yeah, I think it's a mistake on my end. I don't use `\n` inside `scanf()`
[21:13:41] *** Quits: joev (~joev@user/joev) (Ping timeout: 245 seconds)
[21:13:53] *** Joins: ckdCreations (~ckdCreati@147.55.133.137)
[21:14:48] *** Joins: joev (~joev@user/joev)
[21:14:55] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[21:15:22] *** Joins: vicfred (~vicfred@user/vicfred)
[21:18:31] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[21:18:39] *** Joins: cruncher (~cruncher@90.68.118.49)
[21:19:28] *** Joins: tiotags (~tiotags@user/tiotags)
[21:19:35] *** Joins: riposte (~finalripo@119-17-138-70.77118a.mel.static.aussiebb.net)
[21:20:00] *** Joins: Akuli (~Akuli@82-203-161-20.bb.dnainternet.fi)
[21:20:22] *** Quits: fordcars (~fordcars@38.23.224.120) (Quit: Client closed)
[21:21:51] *** Quits: bebyx (~Thunderbi@user/bebyx) (Quit: bebyx)
[21:22:05] <angelacrust> ¬†If I don't want to include the newlines in the buffer using `getchar()`,¬† should I write `\n` inside `scanf()`?
[21:22:38] <pragma-> generally you shouldn't mix scanf and getchar. just fgets the whole line and then sscanf on it
[21:23:26] <angelacrust> https://bpa.st/6MGQ is the new code
[21:23:29] <angelacrust> Oh
[21:25:05] <angelacrust> btw, if I don't include the `\n` in scanf(), I'm getting the wrong result
[21:25:10] *** Joins: freakazoid333 (~matt@35.136.233.205)
[21:26:15] <constxd> yes
[21:26:53] <constxd> but putting the \n in scanf you will also consume any leading whitespace in the subsequent input though
[21:26:57] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Ping timeout: 272 seconds)
[21:27:21] <constxd> if you just want to read the integer and then a single newline character, you can use scanf("%d") and then getchar()
[21:27:24] <angelacrust> ```
[21:27:25] <angelacrust> 4
[21:27:25] <angelacrust> Icosahedron
[21:27:26] <angelacrust> Cube
[21:27:26] <angelacrust> Tetrahedron
[21:27:27] *** ChanServ sets mode: +o candide
[21:27:27] <angelacrust> Dodecahedron
[21:27:27] *** candide sets mode: +b *!~angelacru@171.50.*
[21:27:46] <constxd> lol
[21:28:28] *** candide sets mode: -b *!~angelacru@171.50.*
[21:28:34] *** Joins: freakazoid343 (~matt@35.136.233.205)
[21:28:57] *** Joins: bebyx (~Thunderbi@user/bebyx)
[21:29:22] *** Quits: rany (~rany@user/rany) (Quit: The Lounge - https://thelounge.chat)
[21:29:35] *** Joins: rany (~rany@user/rany)
[21:31:23] *** Quits: freakazoid333 (~matt@35.136.233.205) (Ping timeout: 250 seconds)
[21:31:33] *** Joins: pucara (~i@host14.181-1-101.telecom.net.ar)
[21:33:19] *** Quits: ymwm (~yingmanwu@110.85.66.170) (Ping timeout: 256 seconds)
[21:36:09] *** Joins: freakazoid333 (~matt@2603-9000-cf03-86c3-b5a4-a7e7-7857-050c.inf6.spectrum.com)
[21:36:26] *** Quits: freakazoid343 (~matt@35.136.233.205) (Ping timeout: 272 seconds)
[21:37:32] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[21:37:46] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220219201334])
[21:37:52] <chiselfuse> spacing:
[21:37:55] <chiselfuse> x = (int*)counter;      or      x = (int *)counter      ?
[21:38:15] <chiselfuse> oof, semicolon
[21:38:20] <pragma-> x = (int *) counter;
[21:38:27] *** Quits: eroux (~eroux@102-65-85-242.ftth.web.africa) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[21:38:31] <masoudd> i n t
[21:38:49] <chiselfuse> pragma-: ehhh, too much space in that
[21:38:50] *** Quits: alch (~alch@151.44.33.92) (Read error: Connection reset by peer)
[21:38:57] <pragma-> fuck'd you ask me for then
[21:39:04] <chiselfuse> XD
[21:39:10] <ChoHag> I agree with pragma-.
[21:39:13] <ioxzev1z> x   =   ( int * )    counter;
[21:39:41] <ioxzev1z> or x = ((((int *)))) counter;
[21:39:42] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:4d9c:b9bc:cc6f:7844) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[21:40:12] <chiselfuse> x   =   (      (    (  ( ((int *)) )  )    )      ) counter;
[21:40:16] <masoudd> is counter void*? because then x = counter; :))
[21:40:35] *** Quits: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net) (Read error: No route to host)
[21:41:06] *** Joins: brad_mssw (~bhouse@2601:344:4100:b490:190c:d2cf:ee88:db3e)
[21:41:10] <chiselfuse> masoudd: it's pseudo c just to talk about cast spacing :P
[21:41:57] <angelacrust> Is the `for` loop faster than the `while` loop?
[21:41:57] <angelacrust> `while`: https://bpa.st/YYWQ Execution time: 31 ms.`for`: https://bpa.st/QHDA Execution time: 30 ms.
[21:42:07] <masoudd> no
[21:42:25] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[21:42:37] *** Joins: alch (~alch@151.44.47.142)
[21:42:50] <chiselfuse> angelacrust: i'd check assembly output for each and see where it's different and why, depends on a lot of factors in your code, didn't check link btw
[21:43:04] *** Joins: raym (~raym@user/raym)
[21:43:12] <ioxzev1z> angelacrust, I doubt it, but even if it was your compiler would optimize it out
[21:43:27] <chiselfuse> i think you'd "measure" by instructions, not by time
[21:43:29] <ChoHag> They'll be implemented from the same primitives.
[21:43:35] <ioxzev1z> Also 1ms between runs is not close to important
[21:43:35] *** Quits: begriffs (~begriffs@user/begriffs) (Remote host closed the connection)
[21:43:46] <angelacrust> I see
[21:43:48] <ChoHag> for (x; y; z) ... ~= x; while (y) { ...; z; }
[21:43:49] <ioxzev1z> It would be a different issue if it was like 45ms v 30ms
[21:43:57] *** Joins: begriffs (~begriffs@user/begriffs)
[21:44:32] <ChoHag> It was probably exactly that in early C compilers.
[21:45:08] *** Quits: hiroshi_ (~freedom@151.43.14.122) (Quit: hiroshi_)
[21:45:14] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[21:45:32] <chiselfuse> oh does angelacrust mean compilation time?
[21:45:38] <angelacrust> nope
[21:46:02] <chiselfuse> execution? i don't get it why nobody is just looking at generated assembly then
[21:46:07] <ioxzev1z> angelacrust, run each code 100k times, take the average of each, then compare. if you still get 31ms over 30ms then you have no problem
[21:46:27] <constxd> (int *)counter
[21:46:28] <angelacrust> 100k is a lot man...
[21:46:30] <ioxzev1z> It's not unreasonable to lose 1ms on a single run for some other reason
[21:46:36] <ioxzev1z> angelacrust, you can use a tool for that...
[21:46:52] <constxd> do you write x = ! y? how about x = ++ y? no? so why put a space when using any other unary prefix operator?
[21:47:20] <constxd> pragma- OWNED by FACTS and LOGIC
[21:47:51] <chiselfuse> yea pragma- explain this ^
[21:48:09] <ChoHag> constxd: Context.
[21:48:24] <ChoHag> constxd OWNED by AESTHETICS.
[21:49:06] <ChoHag> Only GNU would consider writing that, because it is ugly.
[21:49:23] <chiselfuse> beauty is subjective
[21:49:25] <pragma-> A E S T H E T I C S
[21:49:57] <Inline> ?
[21:49:58] <ChoHag> √Üsthetics.
[21:50:03] <NRK> personally i like `AS(int) x`
[21:50:10] <NRK> #define AS
[21:50:21] *** Joins: not_not (~not_not@193.178.220.11)
[21:50:38] *** Quits: angelacrust (~angelacru@171.50.165.251) (Quit: Client closed)
[21:50:38] <constxd> ok that's lowkey based ong
[21:50:47] <chiselfuse> pragma-: hmf.. more like excuses to make your files larger sizes with useless spaces so you get extra cookies by cheating
[21:50:56] <NRK> i was trolling...
[21:51:01] <constxd> too late
[21:51:12] <constxd> replacing all casts in my codebase with that
[21:51:23] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[21:52:09] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Remote host closed the connection)
[21:52:36] *** Joins: skapate (~Skapata@2804:14c:87b0:9d2e:84a:9755:adea:aaf7)
[21:52:36] *** Quits: skapate (~Skapata@2804:14c:87b0:9d2e:84a:9755:adea:aaf7) (Changing host)
[21:52:36] *** Joins: skapate (~Skapata@user/skapata)
[21:52:57] <not_not> Is_is
[21:53:21] <chiselfuse> well what about  *(int *)counter;
[21:53:30] <chiselfuse> if i put a space there it looks retarded
[21:53:36] <not_not> Yes
[21:53:39] <chiselfuse> *(int *) counter;
[21:53:51] <not_not> Oh god
[21:53:58] <chiselfuse> and if i make an exception, it won't be consistent
[21:53:58] <not_not> Stop it
[21:54:15] <NRK> ((int *)counter)[0]
[21:54:27] <not_not> NRK ahhhh
[21:54:34] <not_not> Thats it
[21:55:02] <chiselfuse> not_not: divorce when?
[21:55:06] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 260 seconds)
[21:55:06] <chiselfuse> now?
[21:55:52] <not_not> Chisefuse well after we marry
[21:56:25] <not_not> Ur lucky ill be Rich come the ides of march
[21:56:43] *** Joins: oscurochu_ (~oscurochu@2603:9000:c202:1034:fd35:dd8:8bf7:a17b)
[21:56:47] <chiselfuse> wut
[21:57:08] <not_not> Selling off 2 of my 3 startups
[21:57:22] <not_not> And at the loony bon for arson
[21:57:34] <not_not> Loony bin
[21:57:54] <chiselfuse> :(
[21:57:57] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[21:58:23] *** Joins: Atque (~Atque@user/atque)
[21:58:31] <not_not> So i have no access to drugs only thing to pass time is coffe eat and programming
[21:58:49] <not_not> Fuck me
[21:58:52] <chiselfuse> i don't believe you
[21:59:00] <pragma-> coffee is technically a drug
[21:59:10] <chiselfuse> you're in solitary and they allow you to connect to irc?
[21:59:16] <chiselfuse> if i understood correctly
[21:59:23] <not_not> Yes it fucked me up way more than amp
[21:59:41] <not_not> Nah im not in a padded room
[22:00:10] <not_not> But doors Are locked
[22:00:40] <chiselfuse> i had worries
[22:00:51] <chiselfuse> that some day i'm gonna end up locked up for some stupid shit
[22:00:54] <fizzie> My solution to the dereference-and-cast dilemma (since I did switch to the the "space after a cast" camp, and agree that `*(T *) x` looks like nonsense) is to just avoid it, and instead assign to a variable with a name (`T *t = x; ... *t ...`, or `T *t = (T *) x; ... *t ...` for the rare case that requires a cast) instead.
[22:01:08] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[22:01:10] <not_not> Chisel give it time
[22:01:11] <chiselfuse> not_not: how'd you convice them to let you use internet?
[22:01:43] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 250 seconds)
[22:01:51] <not_not> We all get to have phone here but
[22:02:06] <ChoHag> not_not: That's the best place for a programmer.
[22:02:14] <not_not> Yes
[22:02:16] <chiselfuse> indeed
[22:02:32] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 240 seconds)
[22:02:43] <not_not> Well wish i had 10 2mg clonazepam
[22:02:45] <chiselfuse> fizzie: so you prefer to use an extra identifier?
[22:02:57] <ChoHag> You shouldn't have burned shit down then eh?
[22:03:05] <fizzie> Yes. I've got the premium plan for identifiers, I don't have to pay extra for each.
[22:03:07] *** Joins: kts (~kts@103.73.237.100)
[22:03:09] <chiselfuse> not_not: how long are you in for?
[22:03:10] <ChoHag> ENICKED
[22:03:22] <not_not> Chisel just dont do meth at ur parents house
[22:03:32] *** Quits: vicfred (~vicfred@user/vicfred) (Ping timeout: 240 seconds)
[22:03:34] <ChoHag> Or don't do meth.
[22:03:37] <ChoHag> There are better drugs.
[22:03:39] <not_not> Or
[22:03:51] <not_not> Ye but
[22:03:53] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[22:04:07] <not_not> Its not for fun
[22:04:31] <not_not> Chisel 3 months at arkham
[22:04:31] <fizzie> I was at a R&D kind of a place one summer, and you couldn't get out of the stairwell (as in, to exit the building) without a keycard, which I think is probably a fire code violation of some sort.
[22:04:45] *** Quits: zlg (~zlg@user/zlg) (Ping timeout: 256 seconds)
[22:05:01] <not_not> Oh ye ur right
[22:05:24] *** Quits: fe23 (~fe23@2409:8a34:46c:f80:f5cf:c25c:bb7d:516c) (Quit: fe23)
[22:05:30] <ChoHag> fizzie: Try harder.
[22:05:44] <not_not> Well i dont recognize the ssh key to my server som .....
[22:05:54] <not_not> So
[22:06:03] <ChoHag> So don't type a password at it.
[22:06:11] <not_not> Hacking myself out
[22:06:12] *** Quits: oscurochu_ (~oscurochu@2603:9000:c202:1034:fd35:dd8:8bf7:a17b) (Ping timeout: 240 seconds)
[22:06:17] <fizzie> It's possible there would have been special "in case of fire" unlock buttons somewhere in there. It's been a while.
[22:06:24] <not_not> Hot af nurses
[22:06:24] <ChoHag> Key exchange or GTFO.
[22:06:36] <not_not> And they like me
[22:06:45] <chiselfuse> i'm stuck in a desert with ~20kbps internet, this forces me to code and irc, nothing else you can really do
[22:06:48] *** Joins: bebyx (~Thunderbi@user/bebyx)
[22:06:53] <ChoHag> Can you bang them for the ssh keys?
[22:07:14] <not_not> Idk im gay
[22:07:19] *** Quits: meator (~meator@user/meator) (Ping timeout: 256 seconds)
[22:07:27] <not_not> Atm
[22:07:32] <chiselfuse> then ho do you find them hot?
[22:07:34] <ChoHag> chiselfuse: Never internetted on a 14k4?
[22:07:35] <chiselfuse> how*
[22:08:09] <chiselfuse> what even is that? you see, i can't even google stuff out, or irc cuts out and takes 2 minutes for a google page to load
[22:08:15] <ChoHag> We used to *browse the web* on less.
[22:08:17] <ChoHag> Can you believe it?
[22:08:26] <chiselfuse> and people on irc channels think i don't want to rtfm when in fact i can't :P
[22:08:33] *** Joins: scoobydoob (~scooby@user/scoobydoo)
[22:08:33] <not_not> Sexual orientation is 10 percent Choice
[22:08:37] <chiselfuse> ChoHag: web was better back then
[22:08:55] <not_not> 40 percent placebo effect
[22:09:08] <ChoHag> Of course you can rtfm.
[22:09:13] <not_not> And 50 percent hypocondria shit
[22:09:20] <ChoHag> And if you don't, well, you won't know what it says.
[22:09:59] <chiselfuse> wut? i can't google stuff, well, barly, best i can do is live off of some posix manuals on my system
[22:10:08] <chiselfuse> barely*
[22:10:29] <ChoHag> Get a system with better manuals.
[22:10:43] <not_not> God i hate modern web
[22:10:45] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 256 seconds)
[22:10:50] *** scoobydoob is now known as scoobydoo
[22:11:05] <twkm> if you have posix man pages you should have other man pages too.
[22:11:06] <chiselfuse> i'm on arch, is it good enough? manpages aren't good for everything
[22:11:12] <chiselfuse> not_not: me too
[22:11:43] <fizzie> Top tip: if you tweak your UA, you'll probably get a lighter-weight Google page. `curl -s https://www.google.com/ | wc -c` => 14051, `curl -s -A "<chrome UA>" https://www.google.com/` => 171444.
[22:11:45] <not_not> Concluded its ok to kull people for making ads
[22:11:45] <twkm> man pages won't teach you the language, but all the api's should be documentedd.
[22:11:49] <chiselfuse> twkm: like what? idk what the distinction is, gnu, linux, bsd blah, yeah i have some and some
[22:11:57] <ChoHag> chiselfuse: Use a system which comes with its own source and you won't even need manual pages.
[22:12:14] <not_not> Kill *
[22:12:24] <twkm> the source can take a while to understand.
[22:12:33] <chiselfuse> ChoHag: and what system comes with its own source?
[22:12:54] <ChoHag> All the BSDs do afaik.
[22:12:56] <twkm> any api you use chiselfuse.
[22:12:59] <ChoHag> Open/net do.
[22:13:13] <ChoHag> OpenBSD also has excellent documentation.
[22:13:29] <Jong> If there's a C programming language, why isn't there a B language or an A language? Why straight to C?
[22:13:34] <twkm> all bsd's potentially come with full source, most don't want that not even most developers.
[22:13:37] <pragma-> there was a B
[22:13:38] <not_not> Lol i think ill Try to get some LSD in here
[22:13:44] <chiselfuse> ChoHag: wait, so in bsd i can look for source of say, printf, in my system directly?
[22:13:48] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[22:13:50] <chiselfuse> isn't that a lot of space?
[22:13:53] <BUTTS> I think there was a B
[22:13:59] <chiselfuse> fizzie: i'll try it
[22:14:06] <twkm> potentially a lot of space, yes.
[22:14:06] <chiselfuse> i also try lynx
[22:14:16] <BUTTS> https://en.wikipedia.org/wiki/B_(programming_language)
[22:14:17] <fizzie> The sequence goes CPL ‚Üí BCPL ‚Üí B ‚Üí NB ‚Üí C.
[22:14:32] <ChoHag> -rw-r--r--  1 ChoHag  wsrc  1949 Aug 31  2015 /usr/src/lib/libc/stdio/printf.c
[22:14:47] <ChoHag> chiselfuse: Yes.
[22:14:51] <fizzie> (Leading to jokey suggestions about C's successor being P.)
[22:15:07] *** Joins: steve__ (~steve@ool-182c2b80.dyn.optonline.net)
[22:15:20] <ChoHag> fizzie: Perl. .b -> .c -> .pl.
[22:15:22] <twkm> i've seen nc too.
[22:15:30] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[22:15:47] <not_not> Wait P AS in bf without io commands?
[22:16:02] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[22:16:09] <fizzie> No, that's P‚Ä≤‚Ä≤.
[22:16:20] <not_not> Ahh my bad
[22:16:26] <twkm> as in the letter after the c in bcpl.
[22:16:30] <fizzie> https://www.bell-labs.com/usr/dmr/www/chist.html is one of the usual links re how C came along.
[22:16:37] <chiselfuse> i'm considering *BSD more and more
[22:16:38] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[22:16:44] <ChoHag> chiselfuse: Linux is shit.
[22:16:53] <ChoHag> The clowns took over years ago.
[22:16:55] *** Joins: hashfunc1818 (~user@2601:5c0:c280:7090:8c1e:afa3:b36b:39be)
[22:16:59] <twkm> please not platform zealotry.
[22:17:09] <pragma-> Some Linux are better than othe... nm.
[22:17:10] <chiselfuse> is that what its name is for? BSD as abbreviation of BaSeD?
[22:17:27] <ChoHag> Berkely System ... Division?
[22:17:28] <twkm> berkeley software distribution.
[22:17:37] <chiselfuse> oh well
[22:17:55] <not_not> Chisel nah but god
[22:18:03] <ChoHag> When in doubt, use the source Luke.
[22:18:22] <not_not> Bsd is based sfuck
[22:18:51] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Ping timeout: 250 seconds)
[22:19:13] <twkm> please, no platform zealotry.
[22:19:15] <chiselfuse> OpenBaSeD
[22:19:21] *** Joins: Betal (~Betal@user/betal)
[22:19:37] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Ping timeout: 240 seconds)
[22:20:09] <masoudd> no we must fight until one os remains
[22:20:17] <chiselfuse> yes
[22:20:35] <not_not> Kill the others
[22:20:35] <BUTTS> I vote for windows 2000 derivate
[22:20:42] <chiselfuse> shut up
[22:20:43] <not_not> Same
[22:20:51] <not_not> Ntkernel
[22:20:56] <chiselfuse> reactos
[22:20:59] <chiselfuse> ^
[22:21:10] <chiselfuse> if we're talking nt
[22:21:23] <pragma-> spoken like a bunch of noobs who couldn't find the burning bush in templeos
[22:21:24] <BUTTS> 2035 will be year of ReactOS desktop
[22:21:28] *** Quits: fstd (~fstd@xdsl-78-34-125-135.nc.de) (Read error: Connection reset by peer)
[22:21:29] <chiselfuse> but *nix is better
[22:21:30] <ChoHag> We all know it's going to be AmigaDOS.
[22:21:36] *** Joins: fstd (~fstd@xdsl-78-34-125-135.nc.de)
[22:21:43] <ChoHag> It's not dead yet.
[22:21:55] <chiselfuse> actually
[22:21:58] <BUTTS> ARoS
[22:22:02] <chiselfuse> it's temple all the way
[22:22:06] <chiselfuse> best os
[22:22:06] <BUTTS> ARouSe
[22:22:11] <chiselfuse> all others are shit
[22:22:15] <not_not> Pragma Dont U meant niggers who couldt find the burning Bush?
[22:22:15] *** candide sets mode: +b $a:not_not
[22:22:15] *** not_not was kicked by candide ($a:not_not banned in #c for 7 days)
[22:22:16] <chiselfuse> and we kill them
[22:22:18] <chiselfuse> oki?
[22:22:24] <pragma-> imagine.
[22:22:51] <BUTTS> so, it's an autokick on word nigger?
[22:22:52] *** candide sets mode: +b $a:catbutts
[22:22:52] *** BUTTS was kicked by candide ($a:catbutts banned in #c for 7 days)
[22:23:09] <chiselfuse> lmao
[22:23:10] <pragma-> spring cleaning
[22:23:11] <ChoHag> Actually I tell a lie. That DNAOS has some serious staying power.
[22:23:33] <ChoHag> But AmigaDOS comes a close second.
[22:23:49] *** Quits: joev (~joev@user/joev) (Ping timeout: 240 seconds)
[22:24:05] <chiselfuse> candide: which is the best OS?
[22:24:13] <candide> cÔªøhiselfuse, Do I look like I care?
[22:24:29] <chiselfuse> you don't have to
[22:24:47] <chiselfuse> candide: TempleOS or ReactOS?
[22:24:48] <ChoHag> The best OS is the one which people will pay me the most for doing the least work to maintain.
[22:25:09] *** Joins: joev (~joev@user/joev)
[22:25:57] <pragma-> candide: pick a b c
[22:25:57] <candide> a
[22:26:01] <pragma-> a is the best os.
[22:26:17] *** Quits: Pentode (~Pentode@mobile-166-177-56-138.mycingular.net) (Ping timeout: 256 seconds)
[22:26:39] <twkm> chiselfuse: this isn't an c issue.
[22:28:09] <ChoHag> That feeling when your code compiles and you don't know why...
[22:28:33] <chiselfuse> twkm: an c?
[22:28:57] <chiselfuse> is that correct according to the standardan
[22:29:01] <chiselfuse> an c
[22:29:03] <masoudd> ISO what you did there
[22:29:05] <ChoHag> Shorthand. We're all about ANSI C in here.
[22:30:19] <twkm> chiselfuse: sorry, an n crept in.
[22:30:48] <chiselfuse> twkm: why don't you put the same effort in breaking apart wars between countries?
[22:30:52] <chiselfuse> just tell them
[22:30:55] <twkm> sigh.
[22:31:02] <chiselfuse> please, no war zealotry.
[22:31:08] <chiselfuse> or something
[22:31:16] <ChoHag> chiselfuse: Typing a few IRC commands ain't going to fix that one.
[22:31:26] <twkm> you brought it up.  so don't drag that in here either.
[22:31:32] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[22:31:32] <ioxzev1z> ...
[22:32:43] <chiselfuse> change /topic to "Dark mode vs Light mode: The ultimate conclusion"
[22:34:20] *** Joins: asdfsdffsdf (~root@62.83.93.185.dyn.user.ono.com)
[22:37:21] *** Quits: bebyx (~Thunderbi@user/bebyx) (Quit: bebyx)
[22:37:35] *** Joins: bebyx (~Thunderbi@user/bebyx)
[22:38:59] *** Joins: superboot (~agentgasm@user/superboot)
[22:41:25] *** Joins: rgrinberg (~textual@200.68.171.127)
[22:49:49] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 240 seconds)
[22:49:54] *** Quits: joev (~joev@user/joev) (Ping timeout: 272 seconds)
[22:50:19] *** Joins: meator (~meator@user/meator)
[22:50:27] *** Joins: joev (~joev@user/joev)
[22:52:17] <kurahaupo> fizzie: re c23 and (u)intptr_t‚Ä¶ wtf is anyone doing using (u)intmax_t in an ABI definition; surely an ABI should use (u)int128_t or whatever?
[22:52:31] *** Quits: kamarat (~kamarat@81.161.60.198) (Quit: Leaving)
[22:52:55] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[22:53:02] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[22:54:27] <ioxzev1z> kurahaupo, imo (u)intX_t should go up to 512 in doubles
[22:57:01] *** Joins: oscurochu_ (~oscurochu@2603:9000:c202:1034:fd35:dd8:8bf7:a17b)
[22:57:50] <constxd> kings
[22:58:07] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[22:58:21] <ChoHag> Peasant.
[22:58:35] <constxd> is epoll based or cringe
[22:58:49] <ChoHag> I don't speak this language.
[22:59:01] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 240 seconds)
[22:59:07] <constxd> let's say u want to make a single-threaded http server that can handle concurrent connections -- u using epoll?
[22:59:17] <ChoHag> I would use libhttpd
[22:59:27] <chiselfuse> ChoHag: would you smash epoll or pass?
[22:59:38] <ioxzev1z> constxd, u use epoll if u want gud codez fur srv
[22:59:56] <ChoHag> ioxzev1z: You speak his language?
[23:00:01] *** Joins: bebyx (~Thunderbi@user/bebyx)
[23:00:05] <ioxzev1z> ChoHag, I can understand like 70%
[23:00:12] <pragma-> Stewardess, I speak Jive.
[23:00:19] <chiselfuse> language of peasants
[23:00:22] <fizzie> kurahaupo: No, an ABI is what defines what an `uintmax_t` is. Otherwise programs/libraries couldn't use the type in their structures (across boundaries, anyway).
[23:00:29] *** Quits: enneman__ (~MarderIII@enneman.demon.nl) (Quit: Leaving)
[23:00:43] <fizzie> Like, the same way the ABI defines an `int` is (e.g.) 32 bytes, it also has to define an `uintmax_t` is (e.g.) 64.
[23:00:47] *** Quits: MarderIII (~MarderIII@enneman.demon.nl) (Quit: Leaving)
[23:01:05] <constxd> ChoHag: no libraries that's cheating
[23:01:29] <sham1> ,cc printf("%zu", sizeof(intmax_t));
[23:01:31] <candide> sham1: 8
[23:01:37] <ChoHag> Of course it's cheating.
[23:01:48] <ChoHag> What kind of crappy developer doesn't cheat?
[23:01:59] *** Quits: meator (~meator@user/meator) (Ping timeout: 256 seconds)
[23:02:00] <kurahaupo> fizzie: My point is that the only ABI that should define intmax_t is libc; everyone else should have to recompile all the modules if they use it
[23:02:34] <kurahaupo> Treat it as 'subject to change without notice'
[23:02:35] <sham1> Why should you need to have a glibc and musl-specific compilation for applications
[23:02:40] *** Quits: mbarbar (~mbarbar@oak.xen.prgmr.com) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[23:02:48] <kurahaupo> for printf %jd
[23:02:55] *** Joins: mbarbar (~mbarbar@oak.xen.prgmr.com)
[23:04:07] <kurahaupo> Allowing types wider that intmax_t is exactly the insanity that intmax_t was invented to get away from
[23:05:39] <fizzie> Eh, it'd be kind of crummy that you couldn't use `intmax_t` arguments in your library's interface. Since you couldn't then have a function that works for "any integer type".
[23:06:24] <ChoHag> intalephmax_t
[23:08:35] <kurahaupo> fizzie: I don't have a problem with using it in a library interface; I do have a problem using it in an ABI. Recompile the library alongside your program if it communicates using intmax_t
[23:08:44] <fizzie> That's kind of not how it works.
[23:08:46] <fizzie> The only reason you *can* use a type in your interface is because there's an ABI somewhere that guarantees its size (and specifies how it's passed in a function call, and returned, and so on) so that two separately compiled pieces of software can interoperate.
[23:09:00] <constxd> kings how do u signal the end of an HTTP response without closing the connection
[23:09:11] <fizzie> You can't say "just recompile all software in your system" because some software is, for example, closed-source.
[23:09:16] <sham1> We have this thing called "shared libraries" and having to compile all of them with the same compiler version would be eugh
[23:09:47] <ioxzev1z> constxd, have you even read the http standard?
[23:09:55] <constxd> no it's scary
[23:10:19] <kurahaupo> Sure, but then you get a different compiled image for each compiler setting. Like i386 vs x86_64
[23:10:20] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:350b:c716:fa56:ddbc) (Quit: Quit)
[23:10:49] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[23:10:57] <ChoHag> constxd: They're very simple.
[23:11:03] <ioxzev1z> constxd, big book, many word?
[23:11:10] <constxd> ioxzev1z: indeed
[23:11:15] <ChoHag> https://datatracker.ietf.org/doc/html/rfc2616/
[23:11:16] <constxd> many many word :c
[23:11:16] <kurahaupo> fizzie: If it's frigging closed source then it can gtfo about using intmax_t and expecting it to remain a fixed size
[23:11:38] <ChoHag> Fuck everything google did since then. It's bullshit.
[23:11:43] <constxd> Ok here we go Persistent Connections
[23:11:53] <constxd> based
[23:12:41] *** Quits: asdfsdffsdf (~root@62.83.93.185.dyn.user.ono.com) (Quit: leaving)
[23:14:48] *** Quits: rgrinberg (~textual@200.68.171.127) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[23:15:02] <fizzie> Well, be that as it may, existing platforms *do* treat intmax_t as a type of a specific size, and it's hard to change, and that's the motivation of the proposal to exempt it.
[23:15:56] <fizzie> It also quotes that as the reason why GCC's 128-bit integer type is the half-supported __int128_t and not a fully featured extended integer type with a <stdint.h> `int128_t` definition.
[23:16:01] *** Quits: bebyx (~Thunderbi@user/bebyx) (Read error: Connection reset by peer)
[23:16:17] *** Joins: crashrep (~crashrep@user/crashrep)
[23:16:18] *** Joins: bebyx (~Thunderbi@user/bebyx)
[23:16:56] <fizzie> (If it was a real integer type, intmax_t would have to grow.)
[23:17:43] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:18:09] *** Quits: joev (~joev@user/joev) (Ping timeout: 256 seconds)
[23:18:14] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[23:18:43] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[23:18:46] *** Joins: joev (~joev@user/joev)
[23:20:30] *** Lord_of_Life_ is now known as Lord_of_Life
[23:20:51] <kurahaupo> Next we'll be seeing intmaxmax_t and printf %jjd,  aaargh!
[23:21:35] <fizzie> intrealmax_t.
[23:22:00] *** Quits: jkotra (~jkotra@117.98.201.12) (Ping timeout: 252 seconds)
[23:22:02] <kurahaupo> Surely when intmax_t changes, you just recompile everything "and taddah, you're done".
[23:22:05] <ioxzev1z> intdoesntgetbiggerthanthis_t
[23:23:07] <kurahaupo> I'm sure crypto nerds will find uses for int16384_t and more
[23:23:27] <ChoHag> intbiggerthandoesntgetbiggerthanthis_t
[23:24:10] <ioxzev1z> kurahaupo, I think after 64 you just use char x[16], etc
[23:25:02] <kurahaupo> what's wrong with ¬´int x:65536;¬ª ?
[23:25:25] <ioxzev1z> I'd actually love to see a system like that
[23:25:35] <ioxzev1z> Assuming you mean bytes
[23:25:55] <ioxzev1z> kurahaupo, but if you mean bits, I'd also like to see that in C
[23:26:16] <kurahaupo> of course it means bits, like it always has
[23:26:22] <fizzie> FTR, the proposals in question are http://www.open-std.org/jtc1/sc22/wg14/www/docs/n2889.htm and http://www.open-std.org/jtc1/sc22/wg14/www/docs/n2888.htm -- 2889 makes (u)intptr_t mandatory, and 2888 requires an implementation to publish (u)intN_t whenever it offers a type of width N (previously that was special-cased to N=8/16/32/64), and both except their additions from (u)intmax_t.
[23:26:23] <candide> Title of fizzie's link: Require exact-width integer type interfaces
[23:26:24] <candide> Title of fizzie's link: Pointers and integer types
[23:26:43] <ioxzev1z> kurahaupo, was unsure because we're talking big numberoonies
[23:27:28] *** candide sets mode: -o candide
[23:28:00] <constxd> so
[23:28:00] *** Quits: ckdCreations (~ckdCreati@147.55.133.137) (Read error: Connection reset by peer)
[23:28:11] *** Joins: mongrel (uid508343@id-508343.ilkley.irccloud.com)
[23:28:23] <fizzie> Also the syntax for the (accepted?) C23 proposal for *that* (`int x:65536;`) is `_BitInt(65536) x;`. http://www.open-std.org/jtc1/sc22/wg14/www/docs/n2763.pdf
[23:28:31] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[23:28:31] <constxd> when i load localhost:3000 chrome opens two different TCP connections instead of just one -- why?
[23:28:51] <sham1> Did you try to read from both what it wants?
[23:28:59] <sham1> It might want your favicon
[23:29:05] <constxd> it doesn't want anything from the second one
[23:29:12] <constxd> asks for / and /favicon.ico on connection 1
[23:29:16] <constxd> connection 2 just sits there
[23:29:33] <ioxzev1z> constxd, nc on 3000 and point chrome to it, see what you recv
[23:29:35] <fizzie> (At least N2867 says both the N-bit integers one and the standard overflow-checking arithmetic one are "accepted".)
[23:30:46] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[23:33:48] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[23:34:08] <constxd> ioxzev1z: well nc just sits there with the first connection open
[23:34:37] *** Joins: ckdCreations (~ckdCreati@147.55.133.133)
[23:34:55] *** Joins: thd (~user@45.76.37.129)
[23:35:06] <ioxzev1z> constxd, so nc listens, gets a req on connect but there is a second connection open?
[23:35:27] <constxd> how would i know?
[23:35:37] <constxd> nc won't accept the second one until the first is closed
[23:35:52] <constxd> idk how to get it to close the first one
[23:36:29] <tiotags> connection:close ?
[23:37:39] *** Joins: pendarsoheil (~pendarsoh@63.238.189.98)
[23:37:54] <pendarsoheil> Is it possible to dereference a pointer to a struct and then access its members?
[23:38:01] <Betal> constxd: what happens if you do another request? it uses connection 2?
[23:38:04] <ioxzev1z> pendarsoheil, foo->member
[23:38:15] <ioxzev1z> Or (*foo).member
[23:38:23] <kurahaupo> This talk of "ABI freeze" as a rationale for exempting mandatory integral types (from coverage by intmax_t) is disingenuous. GCC already supports multiple ABIs. As wider types are added, that makes a new ABI that's a superset of the old one, so that only the libraries that make use of the new wider types need to be recompiled.
[23:38:25] <ioxzev1z> foo being the pointer to struct
[23:38:56] <constxd> Betal: you mean if i refresh the page? it just makes brand new connections
[23:39:57] <kurahaupo> (sure it gets slightly messy having 3 or 4 compiled versions of libc on a system, but in the long run that's preferable to permitting standard types wider than intmax_t)
[23:39:57] *** Joins: phrix (~phrix@185.76.176.47)
[23:40:36] <pendarsoheil> ioxzev1z, thanks is there a way to create a variable of that struct? I have.... struct Structy structy = (struct Structy) *structyPtr;
[23:40:52] <pendarsoheil> but accessing its members gives me a core dump
[23:41:00] *** Quits: heineken (~i.am@user/heineken) (Quit: a pentium 100 "running" windows 11 trying to play Last of Us II at ps4emu... that's my brain trying understand 0->R->R->R/2R->0)
[23:41:18] <pendarsoheil> nvmd
[23:41:32] <ioxzev1z> pendarsoheil, struct foo  *foo = &muh_foo;
[23:41:32] <kurahaupo> pendarsoheil: How did you initialise the pointer?
[23:41:35] <caze> You're doing it wrong.
[23:41:37] <pendarsoheil> new question would be why does c core dump before a line is called
[23:42:00] <ChoHag> C does't really. Your kernel does.
[23:42:14] <ChoHag> C tries to do something it's not supposed to and the kernel says no.
[23:42:15] <kurahaupo> pendarsoheil: Core dump is an example of undefined behaviour. Undefined behaviour may be retrospective
[23:42:22] <caze> Core dump is a manifestation of undefined behavior.
[23:42:25] <ioxzev1z> pendarsoheil, struct foo { int x; }; struct foo foo; struct foo_ptr = &foo; foo_ptr->x;
[23:42:35] *** Joins: meator (~meator@user/meator)
[23:42:44] <caze> Also why do you have the cast?
[23:42:53] <ioxzev1z> Uh, that should be *foo_ptr above
[23:43:21] <pendarsoheil> ok thanks
[23:43:29] <kurahaupo> The point about "undefined behaviour" is that it applies to the entire program, not just the code at the point the invalid operation is performed
[23:43:55] *** Quits: boB_K7IQ (~boB_K7IQ@ip72-201-138-188.ph.ph.cox.net) (Ping timeout: 256 seconds)
[23:44:40] *** Joins: boB_K7IQ (~boB_K7IQ@ip72-201-138-188.ph.ph.cox.net)
[23:44:46] <kurahaupo> caze: "manifestation" is a better word, thankyou
[23:45:37] <Betal> constxd: how did you test using nc? looks it only open for first connection
[23:46:14] <constxd> nc -lkv 3000
[23:47:27] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 250 seconds)
[23:47:33] <Betal> I guess you are not using gnu netcat, I don't have -k
[23:47:41] *** Joins: eddybilley (~freddieti@2a02-a454-7f89-1-ed6c-71bb-23cc-5eac.fixed6.kpn.net)
[23:49:43] <constxd> BSD netcat i think
[23:49:48] *** Quits: oscurochu_ (~oscurochu@2603:9000:c202:1034:fd35:dd8:8bf7:a17b) (Ping timeout: 240 seconds)
[23:51:58] <chiselfuse> ChoHag novns rcf dav0 fizzie
[23:52:02] <chiselfuse> ok so i think i found the reason that code from earlier: https://bpa.st/57LQ   has   `*((u_char*)&oddbyte) = *(u_char*)ptr;`   on line 15.   Check here: http://www.faqs.org/rfcs/rfc1071.html   and Ctrl-F the line that has "odd count of bytes, respectively."
[23:52:03] <candide> Title of chiselfuse's link: RFC 1071 - Computing the Internet checksum (RFC1071)
[23:52:08] <chiselfuse> it shows that in case of an odd number of bytes (not forming the last octet), you should *pad* the last zeroes
[23:52:13] <chiselfuse> which means that the line    `*((u_char*)&oddbyte) = *(u_char*)ptr;`   somehow puts the contents of ptr in the most significant part of oddbyte
[23:52:22] <rcf> Indeed
[23:52:42] *** Quits: eddybilley (~freddieti@2a02-a454-7f89-1-ed6c-71bb-23cc-5eac.fixed6.kpn.net) (Ping timeout: 260 seconds)
[23:53:15] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[23:53:20] <chiselfuse> the question is why does it work that way though
[23:53:38] <fizzie> It puts it in whatever the lowest addressed byte of `oddbyte` is.
[23:53:40] <novns> because it was designed this way
[23:53:42] <chiselfuse> and is it irrespective of the endianness?
[23:54:12] <fizzie> It's as irrespective of endianness as the rest of it.
[23:54:36] <fizzie> As in, not very, but it happens to work out right due to the specific algorithm in question.
[23:55:16] <fizzie> It's really no different than would be padding the *input* buffer by one extra 0 byte, except of course you can't generally do that because someone might be using that byte.
[23:55:52] <chiselfuse> so whether i do it with [Z,0] (padding at the end) or [0,Z] (padding in front) it results in the same?
[23:56:14] <fizzie> Or put differently, it's endian-specific but in the same way the *rest* of the code is, unlike adding `*(u_char*)ptr` would be.
[23:56:22] <ioxzev1z> chiselfuse, hashes and checksums usually need padding for alignment and so on
[23:57:10] <fizzie> Because that would convert the byte to a short and use it as the least significant byte (irrespective of platform endianness), while doing it the way it's doing will always use the lowest-addressed byte (as it would if it was just reading from the input buffer like the earlier loop).
[23:58:59] <fizzie> Like, if your input buffer is the four bytes [aa bb cc dd], the loop will read [aa bb] and [cc dd] in whatever the native endianness is. If the buffer is instead the three bytes [aa bb cc], the loop will read [aa bb] in the native endianness, and then you want it to behave as if it had read [cc 00] in the native endianness too, so you must write 'cc' to the lowest-addressed byte of a `short`, not the
[23:59:01] <fizzie> least-significant byte (in case there's a difference).
[23:59:11] <chiselfuse> fizzie: i understant most of what you said, until you say "lowest-addressed byte", a you sure you don't mean "most signi
[23:59:14] <chiselfuse> fuck
[23:59:20] <chiselfuse> "most significant byte"
[23:59:22] <chiselfuse> anyway
[23:59:25] <fizzie> No, I mean lowest-addressed.
[23:59:27] <chiselfuse> most, not least
[23:59:29] <chiselfuse> huh?
[23:59:33] <chiselfuse> ok wait
[23:59:52] <chiselfuse> 0xaabbccddeeff
