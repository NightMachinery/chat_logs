[00:00:31] *** Joins: hseg (~hseg@IGLD-84-228-239-165.inter.net.il)
[00:07:30] *** Joins: a0z (~a0z@87.75.186.171)
[00:12:46] *** Quits: hseg (~hseg@IGLD-84-228-239-165.inter.net.il) (Quit: Client closed)
[00:13:42] <tar_xvf> you may want to use this filter Bertl https://www.ffmpeg.org/ffmpeg-filters.html#toc-bwdif
[00:14:25] *** Joins: intrac (~intracube@user/intracube)
[00:16:01] <Bertl> hmm, it seems that this does some interpolation which is probably not what I want
[00:19:06] *** Joins: durandal_1707 (~computer@212.15.177.19)
[00:19:19] <durandal_1707> Bertl: weave/doubleweave filter?
[00:21:16] *** Quits: durandal11707 (~computer@95.168.121.89) (Ping timeout: 252 seconds)
[00:21:20] <Bertl> yes, that sounds like it should work for the combining
[00:22:01] <Bertl> now any chance that I can save the data as .MLV or other container as bayer pattern?
[00:22:30] <durandal_1707> bayer is not supported for conversion
[00:22:31] <durandal_1707> so no
[00:22:48] <Bertl> that's bad ... okay, another question
[00:22:57] <durandal_1707> except if you interpet bayer as gray
[00:23:25] <Bertl> is there a way to 'mark' frames as top/bottom based on the content, specifically the first pixel?
[00:23:31] <durandal_1707> nope
[00:23:39] <aphysically> I guess I should be setting format_whitelist and codec_whitelist on my SRT ingest server
[00:24:33] <Bertl> durandal_1707: so what would I need to change/add to ffmpeg to be able to mark frames based on content? would that be a simple thing or quite complex?
[00:24:45] <aphysically> listing all the hardware decoders for codec_whitelist is a bit annoying but that's okay I guess
[00:25:05] <aphysically> since I'm just stream copying the audio right now I probably don't even have to list the audio decoders
[00:25:18] <durandal_1707> Bertl: isnt .mlv about compressed bayer stuff?
[00:25:54] <Bertl> yes, MLV is the magic lantern format which can store raw bayer data
[00:26:41] <Bertl> but I think there is no write support for MLV (yet) in ffmpeg
[00:27:48] <durandal_1707> yes, mainly because its closer format
[00:27:51] <durandal_1707> no?
[00:28:00] <Bertl> closer?
[00:28:18] <durandal_1707> closed
[00:28:28] *** Joins: stevenliu (~stevenliu@ffmpeg/developer/stevenliu)
[00:28:41] <Bertl> nah, the format is open, there is even an open source library to read and write it
[00:28:53] *** Quits: stevenliu (~stevenliu@ffmpeg/developer/stevenliu) (Remote host closed the connection)
[00:29:09] <durandal_1707> where?
[00:29:21] *** Joins: stevenliu (~stevenliu@ffmpeg/developer/stevenliu)
[00:29:25] <durandal_1707> with all closer source compressions?
[00:29:31] <durandal_1707> *closed
[00:29:48] <Bertl> https://github.com/ilia3101/LibMLV
[00:31:29] <Bertl> it is a container format which supports raw data (no compression) and LJ92
[00:32:28] *** Quits: stevenliu (~stevenliu@ffmpeg/developer/stevenliu) (Read error: Connection reset by peer)
[00:33:33] *** Joins: jkwnki (~jkwnki@p4ff31b54.dip0.t-ipconnect.de)
[00:33:47] <durandal_1707> Bertl: it uses liblj92 or implements own version?
[00:35:26] <Bertl> seems to use liblj92 at least that is in the repo
[00:35:27] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[00:36:56] <durandal_1707> yes
[00:37:15] <durandal_1707> is there some cmd app that make use of this libmlv code?
[00:37:32] <Bertl> they have an example reader and writer
[00:37:40] <durandal_1707> in same lib?
[00:37:41] <Bertl> as well as some raw2mlv
[00:37:48] <durandal_1707> cool
[00:38:02] <Bertl> yep, under programs
[00:38:06] <durandal_1707> ffmpeg supports files produced by it or not?
[00:38:29] <Bertl> according to the ffmpeg web pages, reading MLV is supported
[00:38:45] <Bertl> it can even be debayered by ffmpeg AFAIK
[00:40:26] <durandal_1707> but what about lj92?
[00:40:28] <aphysically> huh I see a lot of people setting -flush_packets 0 when streaming with SRT, and someone claimed it was to reduce latency or something
[00:40:47] <aphysically> not sure what's really going on there...
[00:40:48] *** Joins: andy_ (~andy___@97-113-36-26.tukw.qwest.net)
[00:42:07] <Bertl> durandal_1707: not sure it is supported in ffmpeg, if that's the question (but probably it is)
[00:42:43] <aphysically> see https://github.com/Haivision/srt/issues/86#issuecomment-329991675
[00:42:51] <aphysically> and e.g. https://wiki.archlinux.org/title/SRT_Live_Server#Using_FFmpeg
[00:43:19] <aphysically> what would that actually help with? why would that decrease latency?
[00:45:00] <durandal_1707> Bertl: its some jpeg thing that lj92
[00:45:51] <Bertl> yes, that is basically JPEG92 (lossless)
[00:47:27] *** Joins: anotheruser (~user@192.121.245.180)
[00:47:59] <andy_> Howdy everyone! I am trying to redirect an RTP stream to the system audio on my linux machine. The RTP stream is only sent when the sending device is unmuted. This is causing a lot of problems with timeouts, that I haven't been able to solve with ffmpeg cli options. I can, of course, provide a lot more information, but I am curious if anyone has initial thoughts on the approach and whether it is possible?
[00:49:04] <andy_> I have attempted to write a simple application with libav to accomplish the same task. I seem to have solved the timeout issues, but unfortunately I must be doing something wrong in the transcoding process, because the audio sounds extremely choppy (like a really weak FM radio signal)
[00:49:25] <andy_> (the audio quality is fine using FFMPEG)
[00:51:12] *** Quits: someuser (~user@102.43.175.235) (Ping timeout: 268 seconds)
[00:54:07] *** Joins: auth (~auth@user/auth)
[00:59:12] *** Quits: durandal_1707 (~computer@212.15.177.19) (Read error: No route to host)
[01:00:06] *** Joins: linext_ (~linext@pool-108-53-128-199.nwrknj.fios.verizon.net)
[01:00:19] <linext_> can ffmpeg be used to save an MP3 stream to MP3 files?
[01:00:33] <tar_xvf> yes
[01:01:56] <tar_xvf> you could try something like `ffmpeg -f mp3 -i <direct url to audio> -b:a 310k <output>.mp3`, for example
[01:02:10] <tar_xvf> the tricky thing is you have to specify `-f mp3` for the input stream.
[01:02:31] <tar_xvf> btw, using `-c:a copy` may or may not work, but if not you will have to re-encode, but audio encoding is super fast so that should be no problem.
[01:02:52] <DeHackEd> what type of stream? maybe a more mundane tool could serve instead
[01:03:02] <BtbN> There is zero reason to re-encode an mp3 stream to mp3
[01:03:18] <BtbN> if it's just http... just wget it
[01:03:32] <linext_> what about separating songs
[01:03:54] <tar_xvf> you can download one long audio track and cut it afterwards
[01:03:57] <BtbN> mp3 gives no such info
[01:04:23] <linext_> https://www.radiom.fr/
[01:04:27] <tar_xvf> you can find when the metadata switches on a stream but that would require something like periodically running ffprobe on the same stream every few seconds or so
[01:04:35] <linext_> the station shows the song that's playing
[01:04:39] <linext_> maybe it's in the mp3 stream/
[01:04:56] *** Quits: intrac (~intracube@user/intracube) (Quit: Konversation terminated!)
[01:05:14] *** Joins: intrac (~intracube@user/intracube)
[01:05:25] <BtbN> I don't think mp3 in itself supports that. Probably some proprietary signaling for those on the website
[01:06:08] *** Joins: stevenliu (~stevenliu@ffmpeg/developer/stevenliu)
[01:06:58] <Bertl> got another question: I'm using an (USB) HDMI digitizer to capture a stream and the stream comes in two sizes, 1920x1080@60 and 2048x1080@60, now when I capture the 1920x1080 version, ffmpeg is happy but when I try to capture the 2048x1080 version, I get tons of:
[01:07:11] <Bertl> PTS 726548510340, next:12716158 invalid dropping st:0
[01:07:11] <Bertl> DTS 726548528700, next:12732824 st:0 invalid dropping
[01:07:38] <Bertl> any idea what this means?
[01:08:17] <BtbN> Calling a HDMI capture card digitizer is quite interesting :D
[01:08:39] <Bertl> yeah, I agree, let's call it capture card ;)
[01:08:41] <linext_> hmmm
[01:08:49] <linext_> winamp can get the current title playing
[01:08:54] <Bertl> well, more precisely, capture USB dongle :)
[01:09:08] <BtbN> USB might just not have the bandwidth for the higher res? Or the card doesn't.
[01:09:16] *** Joins: klaxa (~klaxa@static.175.17.76.144.clients.your-server.de)
[01:09:18] <BtbN> Those generic HDMI to USB dongles are usually quite crap
[01:09:29] <linext_> https://i.ibb.co/hZTGD0s/winamp-o-Xq-WIJr-Sij.png
[01:09:44] <linext_> so if winamp can get the song metadata, can ffmpeg?
[01:09:59] <DeHackEd> the CLI tool has limits
[01:10:10] <BtbN> Even if ffmpeg can get it via id3 tags or something, I'm fairly confident it has zero support for dynamically changing id3 tags mid stream
[01:10:12] <Bertl> BtbN: in this case, it's a Magewell Capture HDMI Gen 2, but I'm not saying that it isn't an USB limitation
[01:10:12] <another> icecast metadata
[01:10:15] <DeHackEd> you could probably do it with a custom app that monitored for metadata updates
[01:10:34] <BtbN> Magewell is very good stuff, I'd expect it to work with that
[01:10:43] <BtbN> The the res is quite odd, it might plain not support it
[01:11:58] <Bertl> according to Magewell, it does support resolutions up to 2048x2160
[01:12:52] <Bertl> and I can ffplay the image with no (visible) problems
[01:13:00] <BtbN> that's also a very odd res
[01:13:02] <Bertl> s/image/stream/
[01:13:40] <Bertl> yes, I know that the resolution is odd, but I generate it myself, so it's not that unexpected ;)
[01:14:59] <Bertl> the question here is more, do I hit an ffmpeg limitation here or some v4l2 problems or is it just a bandwidth problem?
[01:15:14] <Bertl> not sure what the ffmpeg messages are telling me here ...
[01:20:02] <Bertl> btw, is there an option to ffplay to show the frame rate or number of dropped frames, etc?
[01:26:25] *** Quits: Narrat (~omnius@p200300df5f13e73906ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[01:30:10] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[01:33:44] *** Quits: minimalist (~minimal@user/minimal) (Quit: Leaving)
[01:36:24] <furq> linext_: shoutcast/icecast send metadata updates out of band
[01:36:31] <furq> it's not supported by ffmpeg yet
[01:36:52] <linext_> ok
[01:37:07] <linext_> i guess i'll just download an hour at a time in separate files using a Task
[01:38:08] <furq> if you want to split by time then use the segment muxer
[01:39:34] <furq> to be clear the ICY metadata stuff is supported but there's no way to get ffmpeg to do anything useful with it other than set it once
[01:39:47] <furq> you can't split based on it changing and you can't write multiple sets of tags into mp3 anyway
[01:40:19] <furq> you'd have to write your own api client for that
[01:41:23] *** Quits: ivanich (~ivanich@45-140-123-239.broadband.tenet.odessa.ua) (Quit: Konversation terminated!)
[01:46:43] <aphysically> eh I guess I'll just do -flush_packets 0 cause I see a lot of other people doing it with udp and srt
[01:55:51] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[02:01:49] *** Quits: stevenliu (~stevenliu@ffmpeg/developer/stevenliu) (Read error: Connection reset by peer)
[02:10:25] *** Joins: ttys000 (~ttys000@user/ttys000)
[02:15:28] *** Joins: pong (~beaver@user/pong)
[02:15:47] *** Quits: Buster_ (~Buster@buster-net.ru) (Ping timeout: 240 seconds)
[02:16:07] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Quit: elastic_dog)
[02:16:17] *** Joins: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[02:16:20] *** Quits: wyatt8750 (~wyatt8740@148.72.133.252) (Ping timeout: 260 seconds)
[02:16:46] *** pong is now known as beaver
[02:17:06] *** Quits: iive (~iive@87.119.101.204.client.entry.bg) (Quit: They came for me...)
[02:18:11] *** Joins: wyatt8740 (~wyatt8740@185.240.244.228)
[02:18:17] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[02:18:31] *** Quits: __nick__ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 252 seconds)
[02:18:47] *** ChanServ sets mode: +o BtbN
[02:20:21] *** BtbN sets mode: -bbbb $a:NoWontWork $a:WontWork4 $a:WontWork3 $a:WontWork2
[02:20:22] *** BtbN sets mode: -bbbb $a:WontWork *!*@*.ace24.pl *!*@*.archer-soft.com *!*@196.92.2.10
[02:20:22] *** BtbN sets mode: -bbbb *!*uid421025@tooting.irccloud.com *!bac1b774@* *!*@67.205.143.82 *!bac1b774@*.mibbit.com
[02:20:22] *** BtbN sets mode: -bbbb *!*@186.193.183.116.jupiter.com.br *!*@188.26.223.193 *!*@d14-69-224-89.try.wideopenwest.com *!*@delta.telelan.com.ua
[02:20:22] *** BtbN sets mode: -bbbb *!*@14.207.117.217 *!*@186-88-236-80.genericrev.cantv.net *!*@112.165.45.240 *!*@node-inf.pool-125-26.dynamic.totinternet.net
[02:20:24] *** BtbN sets mode: -bbb *!*@211.206.34.253 *!*@2a02:587:8033:5e00:3424:f16e:dba3:bda3 *!*@61-223-187-40.dynamic-ip.hinet.net
[02:20:30] *** BtbN sets mode: -o BtbN
[02:22:58] *** Quits: jkwnki (~jkwnki@p4ff31b54.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[02:32:01] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[02:34:13] *** Quits: tar_xvf (~tar@ec2-3-136-243-174.us-east-2.compute.amazonaws.com) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[02:35:10] *** Joins: tar_xvf (~tar@ec2-3-136-243-174.us-east-2.compute.amazonaws.com)
[02:35:57] *** Joins: nillyhan1 (~00000000@user/nillyhan)
[02:37:34] *** Joins: theracermaster0 (~theracerm@52.79.209.35.bc.googleusercontent.com)
[02:37:40] *** Quits: theracermaster (~theracerm@52.79.209.35.bc.googleusercontent.com) (Read error: Connection reset by peer)
[02:37:40] *** theracermaster0 is now known as theracermaster
[02:38:10] *** Quits: nillyhan (~00000000@user/nillyhan) (Ping timeout: 252 seconds)
[02:38:10] *** nillyhan1 is now known as nillyhan
[02:38:24] <andy_> Anybody have tips for using libav to output to an audio device?
[02:45:17] *** Quits: auth (~auth@user/auth) (Ping timeout: 268 seconds)
[02:50:44] <DeHackEd> have you checked ffplay ? it's a crude video player, but it works
[02:54:17] <andy_> sorry, is that to me?
[02:56:10] <andy_> I am trying to transcode an RTP stream to an audio device. ffmpeg works great for transcoding and outputting to an alsa device, but the RTP stream is only present when the sending device is unmuted, and ffmpeg times out.
[02:56:53] <BtbN> What do you mean, the sending device is unmuted?
[02:57:32] <andy_> It's basically a walkie talkie, where when you push the button out, it sends out a multicast rtp stream.
[02:57:42] <andy_> but when you don't push the button down, it doesn't send anything out at all
[02:58:08] <BtbN> that sounds pretty broken to me
[03:02:47] <andy_> Well, it certainly doesn't act the way ffmpeg expects an RTP stream to act. So I started writing an application using libav. The libav application seems to be receiving and demuxing the RTP stream reliably. av_read_frame times out if nothing is being sent, but I can just ignore that.
[03:03:45] <andy_> Ignoring the RTP aspect, I can use the same application to open a different kind of file, like a wav. I know I must be doing something wrong, because if I give it a 48khz sample rate, 2 audio channel, pcm16le encoded input, it plays out fine over alsa
[03:03:47] <BtbN> You could just call ffmpeg in a loop or something to deal with it, and set sensible timeouts
[03:04:55] <andy_> I briefly investigated doing that, but it felt a bit hacky. I suppose it's probably time to look back into it :)
[03:05:19] <BtbN> I mean, you're going to be implementing pretty much that same logic, just in code
[03:11:20] <andy_> I guess it feels a bit less hacky when I do it in code, instead of a bash while loop
[03:11:50] <andy_> But thanks a lot for the suggestion. I just tried it, and it seems to be working pretty well.
[03:23:06] *** Quits: s0berage (~s0berage@135-23-213-77.cpe.pppoe.ca) (Quit: Leaving)
[03:23:52] *** Quits: softworkz (~softworkz@user/softworkz) (Ping timeout: 252 seconds)
[03:24:54] *** Joins: softworkz (~softworkz@user/softworkz)
[03:29:52] *** Quits: witchcraft (~witch@user/witch) (Ping timeout: 252 seconds)
[03:31:05] *** Joins: witchcraft (~witch@88-106-213-156.dynamic.dsl.as9105.com)
[03:31:06] *** Quits: witchcraft (~witch@88-106-213-156.dynamic.dsl.as9105.com) (Changing host)
[03:31:06] *** Joins: witchcraft (~witch@user/witch)
[03:34:42] *** Bertl is now known as Bertl_oO
[03:46:40] *** Joins: stevenliu (~stevenliu@ffmpeg/developer/stevenliu)
[03:46:48] *** Quits: andy_ (~andy___@97-113-36-26.tukw.qwest.net) (Read error: Connection reset by peer)
[03:48:00] *** Quits: stevenliu (~stevenliu@ffmpeg/developer/stevenliu) (Read error: Connection reset by peer)
[04:09:02] *** Joins: nate_ (~natethegr@2600:1700:8c28:28c0:73e7:7a66:39e6:960f)
[04:10:23] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 246 seconds)
[04:10:53] <nate_> Any idea why ffmpeg would spit `unable to find a suitable output format for 'rtmp://x.x.x.x/foobar'` out at me when in a bash for loop?
[04:13:34] <nate_> mhh, ignore me apparently my command itself is wrong... which is odd.
[04:17:39] <tar_xvf> did you specify `-f flv` or another format?
[04:18:54] <tar_xvf> nate_: ^
[04:23:49] *** Joins: stevenliu (~stevenliu@ffmpeg/developer/stevenliu)
[04:25:00] *** Quits: stevenliu (~stevenliu@ffmpeg/developer/stevenliu) (Read error: Connection reset by peer)
[04:30:23] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[04:34:32] <nate_> that was indeed my issue, I copy / pasted from somewhere else and missed that section.
[04:34:39] *** Joins: vlm (~vlm@user/vlm)
[04:37:56] *** Joins: witchc (~witch@88-106-213-156.dynamic.dsl.as9105.com)
[04:40:38] *** Quits: witchcraft (~witch@user/witch) (Ping timeout: 260 seconds)
[04:42:31] *** Joins: demon__ (~user@102.43.175.235)
[04:45:56] *** Quits: anotheruser (~user@192.121.245.180) (Ping timeout: 245 seconds)
[04:49:44] *** Joins: stevenliu (~stevenliu@ffmpeg/developer/stevenliu)
[04:51:43] *** Quits: stevenliu (~stevenliu@ffmpeg/developer/stevenliu) (Read error: Connection reset by peer)
[05:21:05] *** Quits: pntaylor (~quassel@101.113.230.249) (Ping timeout: 264 seconds)
[05:21:18] *** Joins: stevenliu (~stevenliu@ffmpeg/developer/stevenliu)
[05:23:30] *** Joins: pntaylor (~quassel@101.113.66.201)
[05:26:07] *** Quits: a0z (~a0z@87.75.186.171) (Quit: Leaving)
[05:30:11] *** Quits: jerome- (~jerome@78.193.84.130) (Remote host closed the connection)
[05:31:53] *** Joins: jerome- (~jerome@78.193.84.130)
[05:33:29] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[05:58:29] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[06:04:09] *** Joins: someuser (~user@41.46.246.23)
[06:05:21] *** Quits: someuser (~user@41.46.246.23) (Remote host closed the connection)
[06:05:40] *** Joins: someuser (~user@41.46.246.23)
[06:06:22] *** Quits: demon__ (~user@102.43.175.235) (Ping timeout: 250 seconds)
[06:06:51] *** Quits: someuser (~user@41.46.246.23) (Remote host closed the connection)
[06:07:12] *** Joins: someuser (~user@41.46.246.23)
[06:08:21] *** Quits: someuser (~user@41.46.246.23) (Remote host closed the connection)
[06:08:39] *** Joins: someuser (~user@41.46.246.23)
[06:10:21] *** Quits: someuser (~user@41.46.246.23) (Remote host closed the connection)
[06:10:44] *** Joins: someuser (~user@41.46.246.23)
[06:11:32] *** Joins: Ashley43 (~Guest47@173.169.238.53)
[06:11:51] *** Quits: someuser (~user@41.46.246.23) (Remote host closed the connection)
[06:12:15] *** Joins: someuser (~user@41.46.246.23)
[06:13:02] <Ashley43> Hi, I am trying to take a .webm with alpha layeer and combine audio and retain the alpha layer - but I'm not getting audio for some reason what am I missing? ffmpeg -c:v libvpx-vp9 -y -i video.webm -i audio.mp3 -pix_fmt yuva420p  final-video.webm
[06:13:56] <tar_xvf> is `-c:v libvpx-vp9` meant to be an input or output codec?
[06:14:16] <Ashley43> I think that's output for the alpha layer
[06:14:26] <tar_xvf> Also, you could try adding `-map "0:v:0" -map "1:a:0" before `final-video.webm`
[06:14:27] <Ashley43> It does keep the alpha layer I'm just not getting the audio combined
[06:14:37] <tar_xvf> i would recommend move that to after the inputs
[06:15:59] <tar_xvf> ok so that all works with the codec put there, i got you
[06:16:31] <tar_xvf> try adding the maps and see if that works. Otherwise, look into the output and for the output streams see if there is a video and audio stream
[06:17:11] <tar_xvf> if you can find a line that looks like this: `Stream #0:0(und): Video: h264 (avc1 / 0x31637661), yuv420p(progressive), 1280x720 [SAR 1545:1544 DAR 1030:579], q=2-31, 59.96 fps, 11992 tbn (default)`
[06:17:22] <tar_xvf> and another one `Stream #0:1(und): Audio:`
[06:19:03] <Ashley43> Well I ran: ffmpeg -y -i stinger.webm -i audio.mp3 -map 0:v:0 -map 1:a:0 -c:v libvpx-vp9 -pix_fmt yuva420p  stinger-audio.webm -- I got audio now but the alpha transparency was lost now
[06:19:41] <Ashley43>   Stream #0:0(eng): Video: vp9, yuva420p(tv, progressive), 1920x1080 [SAR 1:1 DAR 16:9], q=2-31, 60 fps, 1k tbn (default)
[06:19:52] <tar_xvf> ok, try putting the -c:v coded back to where it was before, that probably takes care of the alpha, and with specifying what to map to the output, the audio will likely be taken care of
[06:20:29] *** Quits: someuser (~user@41.46.246.23) (Ping timeout: 252 seconds)
[06:22:24] <Ashley43> YAY! ffmpeg -c:v libvpx-vp9 -y -i stinger.webm -i audio.mp3 -map 0:v:0 -map 1:a:0 -pix_fmt yuva420p  stinger-audio2.webm did the trick
[06:22:32] <Ashley43> Thank you so much I've been fighting this for like 2hours
[06:22:37] <tar_xvf> awesome, glad you could get that to work :)
[06:27:02] *** Quits: Ashley43 (~Guest47@173.169.238.53) (Quit: Client closed)
[06:27:58] *** Quits: jos1 (~jos3@dyndsl-091-248-051-063.ewe-ip-backbone.de) (Ping timeout: 265 seconds)
[06:39:28] <furq> tar_xvf: the lavc vp9 decoder doesn't handle alpha
[06:40:33] *** Joins: jos1 (~jos3@dyndsl-178-142-071-112.ewe-ip-backbone.de)
[07:02:03] *** Joins: JibStyle (~user@c-71-198-134-61.hsd1.ca.comcast.net)
[07:10:26] *** Quits: keypusher (keypusher@user/keypusher) (Remote host closed the connection)
[07:16:52] *** Joins: auth (~auth@user/auth)
[07:41:48] *** Quits: stevenliu (~stevenliu@ffmpeg/developer/stevenliu) (Remote host closed the connection)
[07:43:34] *** Quits: auth (~auth@user/auth) (Ping timeout: 260 seconds)
[07:45:41] *** Quits: NaviTheFairy (~Squirrel@user/navithefairy) (Ping timeout: 264 seconds)
[07:49:03] *** Joins: NaviTheFairy (~Squirrel@user/navithefairy)
[07:52:18] *** Quits: beaver (~beaver@user/pong) (Remote host closed the connection)
[07:54:07] *** Joins: beaver (~beaver@user/pong)
[08:02:43] *** Quits: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu) (Ping timeout: 252 seconds)
[08:12:12] *** Joins: stevenliu (~stevenliu@ffmpeg/developer/stevenliu)
[08:14:23] *** Quits: stevenliu (~stevenliu@ffmpeg/developer/stevenliu) (Read error: Connection reset by peer)
[08:25:21] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[08:26:58] *** Quits: beaver (~beaver@user/pong) (Quit: leaving)
[08:41:00] *** Quits: rpthms (~rpthms@user/rpthms) (Remote host closed the connection)
[08:41:14] *** Joins: beaver (~beaver@user/pong)
[08:47:50] *** Joins: rpthms (~rpthms@user/rpthms)
[08:49:39] *** Joins: stevenliu (~stevenliu@ffmpeg/developer/stevenliu)
[08:51:42] *** Quits: stevenliu (~stevenliu@ffmpeg/developer/stevenliu) (Read error: Connection reset by peer)
[08:53:53] *** Quits: beaver (~beaver@user/pong) (Remote host closed the connection)
[08:56:00] *** Joins: beaver (~beaver@user/pong)
[09:04:21] *** Joins: stevenliu (~stevenliu@ffmpeg/developer/stevenliu)
[09:06:40] *** Joins: kib (~kib@user/kib)
[09:10:50] <aphysically> oh that reminds me I still didn't set a decoder whitelist for my API endpoint
[09:11:47] *** Quits: darkapex- (~darkapex@user/darkapex) (Ping timeout: 240 seconds)
[09:12:48] *** Joins: darkapex (~darkapex@user/darkapex)
[09:13:43] <aphysically> the idea of running ffmpeg on untrusted input is kinda weird so I'm glad the exercise is mostly academic
[09:15:09] <aphysically> I find it kinda weird a lot of places seem to treat docker as a security sandboxing tool but I always thought it wasn't appropriate to consider it as such
[09:22:13] *** Quits: Atsuko_ (~x@94.242.250.86) (Remote host closed the connection)
[09:25:08] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[09:25:29] *** Joins: Coleev (i.am@c-98-224-12-69.hsd1.ca.comcast.net)
[09:27:39] *** Joins: Atsuko (~x@94.242.250.86)
[09:33:35] *** Joins: stevenli_ (~stevenliu@162.219.34.244)
[09:33:37] *** Joins: thebombzen_ (~thebombze@587232355.guest.umich.net)
[09:33:38] *** Quits: thebombzen_ (~thebombze@587232355.guest.umich.net) (Remote host closed the connection)
[09:34:04] *** Joins: JibStyle` (~user@c-71-198-134-61.hsd1.ca.comcast.net)
[09:34:11] *** Quits: Coleev (i.am@c-98-224-12-69.hsd1.ca.comcast.net) ()
[09:34:29] *** Joins: ossifrage_ (~ossifrage@pool-72-78-189-30.phlapa.fios.verizon.net)
[09:34:41] *** Quits: JibStyle` (~user@c-71-198-134-61.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[09:35:08] *** Joins: iNKa (~NoBody@2002:95ca:ed03::95ca:ed03)
[09:35:08] *** Quits: iNKa (~NoBody@2002:95ca:ed03::95ca:ed03) (Changing host)
[09:35:08] *** Joins: iNKa (~NoBody@user/brocker)
[09:35:51] *** Joins: Mister_Magister_ (~Mister_Ma@user/mister-magister/x-2636733)
[09:36:17] *** Joins: pit (~quassel@v22016102921539034.goodsrv.de)
[09:36:51] *** Joins: wolfshappen_ (~waff@irc.furworks.de)
[09:37:24] *** Joins: rhys| (~rhys@mill.in.net)
[09:37:26] *** Joins: simoneb_ (~simone@static.39.20.203.116.clients.your-server.de)
[09:37:39] *** Joins: PaulePan1er (~paul@mail.gw90.de)
[09:38:25] *** Joins: klotzhauer_ (~klotzhaue@gibtesnochklopapier.de)
[09:38:59] *** Joins: fjmorazan_ (~quassel@user/fjmorazan)
[09:39:27] *** Joins: colona_ (~colona@grunt.ycc.fr)
[09:39:48] *** Joins: Retr0id5 (~Retr0id@user/retr0id)
[09:40:01] *** Joins: nobody (~nobody@ec2-18-182-239-10.ap-northeast-1.compute.amazonaws.com)
[09:40:54] *** Joins: wacko_ (~wacko@77.235.228.7)
[09:40:55] *** Quits: wacko_ (~wacko@77.235.228.7) (Changing host)
[09:40:55] *** Joins: wacko_ (~wacko@wireguard/tunneler/wacko)
[09:41:30] *** Joins: Buster_ (~Buster@buster-net.ru)
[09:41:34] *** Joins: unlord_ (~nathan@c-76-114-254-99.hsd1.va.comcast.net)
[09:42:44] *** Joins: r0dn3y (~rodney@static.100.168.251.148.clients.your-server.de)
[09:44:18] *** Quits: scoobydoo (~scooby@user/scoobydoo) (*.net *.split)
[09:44:18] *** Quits: stevenliu (~stevenliu@ffmpeg/developer/stevenliu) (*.net *.split)
[09:44:18] *** Quits: rpthms (~rpthms@user/rpthms) (*.net *.split)
[09:44:18] *** Quits: JibStyle (~user@c-71-198-134-61.hsd1.ca.comcast.net) (*.net *.split)
[09:44:18] *** Quits: jerome- (~jerome@78.193.84.130) (*.net *.split)
[09:44:18] *** Quits: Rodn3y (~rodney@user/rodn3y) (*.net *.split)
[09:44:18] *** Quits: wolfshappen (~waff@irc.furworks.de) (*.net *.split)
[09:44:19] *** Quits: rhys- (~rhys@mill.in.net) (*.net *.split)
[09:44:19] *** Quits: Retr0id (~Retr0id@user/retr0id) (*.net *.split)
[09:44:19] *** Quits: thebombzen (~thebombze@587232355.guest.umich.net) (*.net *.split)
[09:44:19] *** Quits: unlord (~nathan@c-76-114-254-99.hsd1.va.comcast.net) (*.net *.split)
[09:44:19] *** Quits: Mysteria4 (~Mysteria@v2202107139540158951.bestsrv.de) (*.net *.split)
[09:44:19] *** Quits: fjmorazan (~quassel@user/fjmorazan) (*.net *.split)
[09:44:19] *** Quits: Brocker (~NoBody@user/brocker) (*.net *.split)
[09:44:19] *** Quits: pit_ (~quassel@v22016102921539034.goodsrv.de) (*.net *.split)
[09:44:19] *** Quits: nitram (~nitram@superblob.com) (*.net *.split)
[09:44:19] *** Quits: dustinm` (~dustinm@static.38.6.217.95.clients.your-server.de) (*.net *.split)
[09:44:19] *** Quits: klotzhauer (~klotzhaue@gibtesnochklopapier.de) (*.net *.split)
[09:44:19] *** Quits: Mister_Magister (~Mister_Ma@user/mister-magister/x-2636733) (*.net *.split)
[09:44:19] *** Quits: xlei (akans@pool-68-129-84-118.nycmny.fios.verizon.net) (*.net *.split)
[09:44:20] *** Quits: PaulePanter (~paul@mail.gw90.de) (*.net *.split)
[09:44:20] *** Quits: thomas_25 (thomas_25@pls.just.stfu-kthx.bnc4you.xyz) (*.net *.split)
[09:44:20] *** Quits: Silicium (~Silicium@95.216.156.84) (*.net *.split)
[09:44:20] *** Quits: hwm4rgs (~hwm4rgs@user/hwm4rgs) (*.net *.split)
[09:44:20] *** Quits: ossifrage (~ossifrage@pool-72-78-189-30.phlapa.fios.verizon.net) (*.net *.split)
[09:44:20] *** Quits: wacko (~wacko@wireguard/tunneler/wacko) (*.net *.split)
[09:44:20] *** Quits: simoneb (~simone@static.39.20.203.116.clients.your-server.de) (*.net *.split)
[09:44:20] *** Quits: colona (~colona@grunt.ycc.fr) (*.net *.split)
[09:44:20] *** Quits: nickster (~nickster@67.207.91.6) (*.net *.split)
[09:44:20] *** Quits: youmustrust (~nobody@ec2-18-182-239-10.ap-northeast-1.compute.amazonaws.com) (*.net *.split)
[09:44:20] *** Quits: auri (~quassel@fsf/member/auri) (*.net *.split)
[09:44:20] *** Quits: crashmatrix (~hatseflat@hatsuseno.rootaccess.nl) (*.net *.split)
[09:44:20] *** Mister_Magister_ is now known as Mister_Magister
[09:44:21] *** Retr0id5 is now known as Retr0id
[09:45:24] *** Joins: thomas_25 (thomas_25@pls.just.stfu-kthx.bnc4you.xyz)
[09:46:09] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[09:46:10] *** Joins: jerome- (~jerome@78.193.84.130)
[09:46:20] *** Joins: nitram (~nitram@superblob.com)
[09:46:27] *** Joins: crashmatrix (~hatseflat@hatsuseno.rootaccess.nl)
[09:46:27] *** Joins: Silicium (~Silicium@95.216.156.84)
[09:46:27] *** Joins: dustinm` (~dustinm@static.38.6.217.95.clients.your-server.de)
[09:46:27] *** Joins: xlei (akans@pool-68-129-84-118.nycmny.fios.verizon.net)
[09:47:20] *** Joins: auri (~quassel@fsf/member/auri)
[09:47:27] *** Joins: rpthms (~rpthms@user/rpthms)
[09:47:54] *** Quits: BtbN (btbn@ffmpeg/developer/btbn) (Ping timeout: 250 seconds)
[09:48:03] *** Joins: BtbN_ (btbn@ffmpeg/developer/btbn)
[09:49:15] *** BtbN_ is now known as BtbN
[09:52:48] *** wacko_ is now known as wacko
[09:53:20] *** Quits: softworkz (~softworkz@user/softworkz) (Ping timeout: 252 seconds)
[09:53:55] *** Joins: softworkz (~softworkz@user/softworkz)
[09:55:51] *** Quits: bencoh_ (~bencoh@nautica.notk.org) (Changing host)
[09:55:51] *** Joins: bencoh_ (~bencoh@user/bencoh)
[09:55:57] *** bencoh_ is now known as bencoh
[09:57:00] *** Quits: dustinm` (~dustinm@static.38.6.217.95.clients.your-server.de) (Quit: Leaving)
[09:57:04] *** Quits: xlei (akans@pool-68-129-84-118.nycmny.fios.verizon.net) (Ping timeout: 252 seconds)
[09:57:58] *** Joins: dustinm` (~dustinm@static.38.6.217.95.clients.your-server.de)
[09:59:34] *** Quits: Vonter_ (~Vonter@user/vonter) (Read error: Connection reset by peer)
[10:00:56] *** Quits: iNKa (~NoBody@user/brocker) (Read error: Connection reset by peer)
[10:01:11] *** Joins: Brocker (~NoBody@2002:95ca:ed03::95ca:ed03)
[10:01:11] *** Quits: Brocker (~NoBody@2002:95ca:ed03::95ca:ed03) (Changing host)
[10:01:11] *** Joins: Brocker (~NoBody@user/brocker)
[10:01:35] *** Quits: Buster_ (~Buster@buster-net.ru) (Ping timeout: 252 seconds)
[10:02:20] *** Joins: Vonter (~Vonter@user/vonter)
[10:04:12] *** Joins: xlei (akans@pool-68-129-84-118.nycmny.fios.verizon.net)
[10:06:51] *** Joins: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e)
[10:07:18] *** Quits: stevenli_ (~stevenliu@162.219.34.244) (Remote host closed the connection)
[10:07:32] *** PaulePan1er is now known as PaulePanter
[10:08:20] *** Bertl_oO is now known as Bertl_zZ
[10:13:36] *** Quits: beaver (~beaver@user/pong) (Remote host closed the connection)
[10:14:06] *** Joins: durandal_1707 (~computer@212.15.177.19)
[10:16:41] *** Joins: stevenliu (~stevenliu@ffmpeg/developer/stevenliu)
[10:16:48] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[10:23:16] *** Joins: beaver (~beaver@user/pong)
[10:24:01] *** Joins: durandal11707 (~computer@212.15.177.19)
[10:25:48] *** Joins: crashmat1ix (~hatseflat@hatsuseno.rootaccess.nl)
[10:26:47] *** Quits: crashmatrix (~hatseflat@hatsuseno.rootaccess.nl) (Ping timeout: 252 seconds)
[10:26:47] *** Quits: Silicium (~Silicium@95.216.156.84) (Ping timeout: 252 seconds)
[10:26:47] *** Joins: Silicium (~Silicium@95.216.156.84)
[10:26:47] *** Quits: durandal_1707 (~computer@212.15.177.19) (Read error: Connection reset by peer)
[10:33:14] *** Quits: Vonter (~Vonter@user/vonter) (Read error: Connection reset by peer)
[10:33:45] *** Joins: Vonter (~Vonter@user/vonter)
[10:40:48] *** Quits: theracermaster (~theracerm@52.79.209.35.bc.googleusercontent.com) (Quit: Ping timeout (120 seconds))
[10:40:57] *** Joins: therobin_ (~UserNick@2607:f2c0:9510:9e00:5d28:c9c0:a490:f840)
[10:41:10] *** Joins: theracermaster (~theracerm@52.79.209.35.bc.googleusercontent.com)
[10:42:18] *** Quits: softworkz (~softworkz@user/softworkz) (Read error: Connection reset by peer)
[10:42:35] *** Joins: softworkz (~softworkz@user/softworkz)
[10:42:50] *** Quits: PaulePanter (~paul@mail.gw90.de) (Ping timeout: 252 seconds)
[10:42:50] *** Quits: therobin (~UserNick@45.72.211.155) (Ping timeout: 252 seconds)
[10:42:53] *** therobin_ is now known as therobin
[10:44:31] *** Joins: PaulePanter (~paul@mail.gw90.de)
[10:51:12] *** Quits: berndj (~berndj@ns2.linksynergy.co.za) (Remote host closed the connection)
[10:51:12] *** Quits: spaam_ (johan@i19.se) (Ping timeout: 252 seconds)
[10:51:14] *** Joins: spaam (johan@i19.se)
[10:52:14] *** Quits: therobin (~UserNick@2607:f2c0:9510:9e00:5d28:c9c0:a490:f840) (Ping timeout: 252 seconds)
[10:52:21] *** Joins: Guest6 (~Guest6@ip-213-127-5-177.ip.prioritytelecom.net)
[10:52:47] *** Quits: [R]x (~Positive@user/rx/x-1245542) (Ping timeout: 252 seconds)
[10:52:47] *** Quits: jab416171 (~jab416171@c-174-52-53-66.hsd1.ut.comcast.net) (Ping timeout: 252 seconds)
[10:52:49] *** Joins: berndj (~berndj@ns1.linksynergy.co.za)
[10:53:38] *** Joins: [R]x (~Positive@user/rx/x-1245542)
[10:55:41] *** Joins: therobin (~UserNick@45.72.211.155)
[10:55:44] *** Joins: woky (~woky@li1651-31.members.linode.com)
[10:55:49] *** Joins: jab416171 (~jab416171@c-174-52-53-66.hsd1.ut.comcast.net)
[10:56:38] *** Joins: tp_ (~tp@unreal.dk)
[10:57:02] *** Quits: APic (apic@apic.name) (Ping timeout: 252 seconds)
[10:57:02] *** Quits: tp (~tp@unreal.dk) (Ping timeout: 252 seconds)
[10:57:03] *** Quits: woky_ (~woky@li1651-31.members.linode.com) (Ping timeout: 252 seconds)
[10:57:04] *** tp_ is now known as tp
[10:57:11] *** Joins: EPic_ (apic@apic.name)
[10:59:57] *** Joins: ocrete4 (~ocrete@23.88.108.134)
[10:59:58] *** Quits: ocrete (~ocrete@23.88.108.134) (Read error: Connection reset by peer)
[10:59:58] *** ocrete4 is now known as ocrete
[11:00:09] *** Joins: Volgaar (~volgaar@gw.lipn.univ-paris13.fr)
[11:03:13] *** Joins: Henry151_ (~bishop@user/henry151)
[11:04:43] *** Quits: Henry151 (~bishop@user/henry151) (Ping timeout: 252 seconds)
[11:04:43] *** Quits: MatrixTravelerbo (~voyagert2@2001:470:69fc:105::22) (Ping timeout: 252 seconds)
[11:05:27] *** Joins: MatrixTravelerb4 (~voyagert2@2001:470:69fc:105::22)
[11:11:08] *** Joins: auth (~auth@user/auth)
[11:12:03] *** Joins: rsx (~dummy@ppp-188-174-153-249.dynamic.mnet-online.de)
[11:15:12] *** Quits: justache (~justache@user/justache) (Ping timeout: 250 seconds)
[11:15:21] *** Quits: SpeakerToMeat (~Speaker@user/speakertomeat) (Ping timeout: 250 seconds)
[11:15:26] *** Joins: justache (~justache@user/justache)
[11:15:47] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Ping timeout: 250 seconds)
[11:15:56] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[11:16:10] *** Joins: SpeakerToMeat (~Speaker@user/speakertomeat)
[11:17:54] *** Quits: Hackerpcs_1 (~user@user/hackerpcs) (Quit: Hackerpcs_1)
[11:19:19] *** Joins: Hackerpcs (~user@user/hackerpcs)
[11:24:41] *** Quits: darkstardevx (~darkstard@2601:1c2:300:c8a0::f2b6) (Ping timeout: 264 seconds)
[11:24:57] *** Quits: af (~af@awalgarg.me) (Remote host closed the connection)
[11:25:18] *** Joins: af (~af@awalgarg.me)
[11:29:57] *** Quits: Vonter (~Vonter@user/vonter) (Read error: Connection reset by peer)
[11:30:39] *** Joins: Vonter (~Vonter@user/vonter)
[11:32:40] *** Quits: af (~af@awalgarg.me) (Remote host closed the connection)
[11:32:42] *** Joins: darkstardevx (~darkstard@c-24-21-53-33.hsd1.or.comcast.net)
[11:33:32] *** Joins: ivanich (~ivanich@45-140-123-239.broadband.tenet.odessa.ua)
[11:34:58] *** Quits: Volgaar (~volgaar@gw.lipn.univ-paris13.fr) (Ping timeout: 252 seconds)
[11:38:20] *** Joins: af (~af@awalgarg.me)
[11:55:15] *** Joins: crmur__ (~crm@70.120.0.94)
[11:56:30] *** Quits: itok (sid418430@id-418430.ilkley.irccloud.com) (Ping timeout: 252 seconds)
[11:56:30] *** Quits: bencc1 (~bencc1@2a00:a040:197:3af:f149:3ecd:2c90:198a) (Read error: Connection reset by peer)
[11:56:47] *** Joins: itok (sid418430@id-418430.ilkley.irccloud.com)
[11:56:48] *** Joins: bencc1 (~bencc1@2a00:a040:197:3af:9b9c:97ad:bd45:b1ad)
[11:57:44] *** Joins: jarainf- (~jarainf@citizien.eu)
[11:58:42] *** Joins: fsphil_ (fsphil@ursa.sanslogic.co.uk)
[11:58:58] *** Quits: jarainf (~jarainf@citizien.eu) (Ping timeout: 252 seconds)
[11:58:58] *** Quits: fsphil (fsphil@ursa.sanslogic.co.uk) (Ping timeout: 252 seconds)
[11:58:58] *** Quits: roxlu (~roxlu@2a01:7c8:aac0:286:8c3a:b01c:3830:245b) (Ping timeout: 252 seconds)
[11:58:58] *** Quits: crm (~crm@70.120.0.94) (Ping timeout: 252 seconds)
[11:58:58] *** Quits: jschwart (~quassel@2001:985:2c6e:0:b00b:32ff:fe28:5567) (Ping timeout: 252 seconds)
[11:59:02] *** Joins: jschwart_ (~quassel@2001:985:2c6e:0:b00b:32ff:fe28:5567)
[11:59:13] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (Ping timeout: 252 seconds)
[11:59:13] *** Quits: Stalker (~Stalker@89.201.5.246) (Ping timeout: 252 seconds)
[11:59:23] *** Joins: Stalker (~Stalker@89.201.5.246)
[11:59:26] *** Joins: roxlu (~roxlu@2a01:7c8:aac0:286:8c3a:b01c:3830:245b)
[12:00:19] *** Quits: graphitemaster (~graphitem@user/graphitemaster) (Ping timeout: 252 seconds)
[12:02:03] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[12:02:23] *** Joins: graphitemaster (~graphitem@user/graphitemaster)
[12:03:32] *** Joins: unmanbearpig (~unmanbear@45.76.95.141)
[12:04:51] *** fsphil_ is now known as fsphil
[12:04:59] *** Quits: unmanbearpig (~unmanbear@45.76.95.141) (Changing host)
[12:04:59] *** Joins: unmanbearpig (~unmanbear@user/unmanbearpig)
[12:05:17] *** Quits: unmanbearpig (~unmanbear@user/unmanbearpig) (Client Quit)
[12:05:53] *** Joins: unmanbearpig (~unmanbear@45.76.95.141)
[12:06:03] *** Quits: unmanbearpig (~unmanbear@45.76.95.141) (Changing host)
[12:06:03] *** Joins: unmanbearpig (~unmanbear@user/unmanbearpig)
[12:08:22] *** Quits: unmanbearpig (~unmanbear@user/unmanbearpig) (Client Quit)
[12:08:41] *** Joins: unmanbearpig (~unmanbear@user/unmanbearpig)
[12:10:06] *** Joins: meepmeep_ (meepmeep@end.of.cylind.re)
[12:10:21] *** Quits: stevenliu (~stevenliu@ffmpeg/developer/stevenliu) (Read error: Connection reset by peer)
[12:10:21] *** Quits: meepmeep (meepmeep@end.of.cylind.re) (Read error: Connection reset by peer)
[12:10:29] *** Joins: stevenliu (~stevenliu@ffmpeg/developer/stevenliu)
[12:10:55] *** Quits: ullbeking (sid5364@2a03:5180:f:3::14f4) (Ping timeout: 252 seconds)
[12:10:57] *** Joins: ullbeking_ (sid5364@id-5364.ilkley.irccloud.com)
[12:11:19] *** Quits: nyuszika7h (nyuszika7h@lykos/dev/nyuszika7h) (Ping timeout: 252 seconds)
[12:11:51] *** Quits: meepmeep_ (meepmeep@end.of.cylind.re) (Client Quit)
[12:12:29] *** Quits: c_14 (~c_14@2a01:4f8:c17:6b43::c:14) (Ping timeout: 252 seconds)
[12:12:30] *** Quits: wcpan (~quassel@2400:8902::f03c:91ff:fee0:f952) (Ping timeout: 252 seconds)
[12:12:30] *** Quits: strudl (~strudl@user/strudl) (Ping timeout: 252 seconds)
[12:12:30] *** Quits: eqw (~eqw@31.134.178.99) (Ping timeout: 252 seconds)
[12:12:30] *** Quits: Naleksuh (sid454423@wikimedia/naleksuh) (Ping timeout: 252 seconds)
[12:12:41] *** Joins: wcpan (~quassel@2400:8902::f03c:91ff:fee0:f952)
[12:12:45] *** Joins: nyuszika7h (nyuszika7h@lykos/dev/nyuszika7h)
[12:12:48] *** Joins: nillyhan5 (~00000000@user/nillyhan)
[12:12:50] *** Joins: meepmeep (meepmeep@end.of.cylind.re)
[12:12:51] *** Quits: nillyhan (~00000000@user/nillyhan) (Read error: Connection reset by peer)
[12:12:52] *** nillyhan5 is now known as nillyhan
[12:12:57] *** Quits: daemon (znc@about/web/TheBeardedBSDer) (Read error: Connection reset by peer)
[12:12:58] *** Quits: theracermaster (~theracerm@52.79.209.35.bc.googleusercontent.com) (Ping timeout: 252 seconds)
[12:12:58] *** Quits: jos1 (~jos3@dyndsl-178-142-071-112.ewe-ip-backbone.de) (Ping timeout: 252 seconds)
[12:12:58] *** Quits: root1 (root@2600:3c02::f03c:92ff:fe1a:c779) (Ping timeout: 252 seconds)
[12:13:02] *** Joins: eqw (~eqw@31.134.178.99)
[12:13:12] *** Joins: daemon (znc@about/web/TheBeardedBSDer)
[12:13:14] *** Joins: jos1 (~jos3@dyndsl-178-142-071-112.ewe-ip-backbone.de)
[12:13:15] *** Joins: root1 (root@2600:3c02::f03c:92ff:fe1a:c779)
[12:13:21] *** Joins: theracermaster (~theracerm@52.79.209.35.bc.googleusercontent.com)
[12:13:45] *** Joins: strudl (~strudl@user/strudl)
[12:14:04] *** Quits: pntaylor (~quassel@101.113.66.201) (Ping timeout: 252 seconds)
[12:14:11] *** Joins: c_14 (~c_14@2a01:4f8:c17:6b43::c:14)
[12:15:18] *** Joins: pntaylor (~quassel@101.113.66.201)
[12:26:53] *** Joins: Naleksuh (sid454423@wikimedia/naleksuh)
[12:29:14] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[12:36:55] *** Joins: ivanich_ (~ivanich@45-140-123-239.broadband.tenet.odessa.ua)
[12:37:15] *** Joins: Silicium_ (~Silicium@95.216.156.84)
[12:37:35] *** Quits: Silicium (~Silicium@95.216.156.84) (Ping timeout: 252 seconds)
[12:37:35] *** Quits: ivanich (~ivanich@45-140-123-239.broadband.tenet.odessa.ua) (Read error: Connection reset by peer)
[12:38:26] *** Quits: therobin (~UserNick@45.72.211.155) (Ping timeout: 252 seconds)
[12:38:26] *** Quits: softworkz (~softworkz@user/softworkz) (Ping timeout: 252 seconds)
[12:39:00] *** Joins: therobin (~UserNick@45.72.211.155)
[12:41:29] *** Joins: berndj-blackout (~berndj@ns2.linksynergy.co.za)
[12:43:49] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[12:44:39] *** Quits: berndj (~berndj@ns1.linksynergy.co.za) (Ping timeout: 252 seconds)
[12:45:59] *** berndj-blackout is now known as berndj
[12:50:09] *** Quits: darkstardevx (~darkstard@c-24-21-53-33.hsd1.or.comcast.net) (Remote host closed the connection)
[12:50:31] *** Joins: darkstardevx (~darkstard@2601:1c2:300:c8a0::f2b6)
[12:58:03] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[13:11:30] *** Quits: beaver (~beaver@user/pong) (Remote host closed the connection)
[13:12:14] *** Joins: beaver (~beaver@user/pong)
[13:16:46] *** Quits: durandal11707 (~computer@212.15.177.19) (Quit: leaving)
[13:23:41] *** EPic_ is now known as APic
[13:24:46] *** Joins: tinyweasel (~weasel@wg-01.offsite.wg.underserver.net)
[13:25:23] <tinyweasel> Hello, I'm having trouble using ffmpeg under OpenWRT while trying to re-encode an MP4 file into a webm/mpeg file under OpenWRT. I'm getting "[h264_v4l2m2m @ 0x77e73410] Could not find a valid device" and "Error while opening decoder for input stream #0:0 : Invalid argument"
[13:25:59] <arkanoid> I've a script that takes 4 streams and combines them in a matrix. It works but I have to make it resilient to source disconnections and stuff, so I've it run in a loop. Problem is that there's one kind of error that locks ffmpeg and won't let it crash/close "fifo0: Invalid data found when processing input"
[13:32:50] *** Joins: Volgaar (~volgaar@gw.lipn.univ-paris13.fr)
[13:33:47] *** Joins: durandal_1707 (~computer@95.168.118.28)
[13:36:07] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (Remote host closed the connection)
[13:41:04] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[13:41:10] <tinyweasel> anyway, I've patched the openwrt makefile and added the option to not use H/W acceleration... I'll see if that fixes it
[13:47:57] *** Quits: stevenliu (~stevenliu@ffmpeg/developer/stevenliu) (Remote host closed the connection)
[13:48:30] *** Quits: Guest6 (~Guest6@ip-213-127-5-177.ip.prioritytelecom.net) (Quit: Client closed)
[13:51:54] *** Joins: stevenliu (~stevenliu@ffmpeg/developer/stevenliu)
[13:53:34] *** Quits: Volgaar (~volgaar@gw.lipn.univ-paris13.fr) (Ping timeout: 252 seconds)
[14:12:59] *** Quits: pntaylor (~quassel@101.113.66.201) (Ping timeout: 252 seconds)
[14:15:28] *** Joins: pntaylor (~quassel@101.112.15.145)
[14:18:55] *** Quits: BUSY (~BUSY@user/busy) (Ping timeout: 252 seconds)
[14:19:57] *** Joins: BUSY (~BUSY@user/busy)
[14:23:43] *** Quits: stevenliu (~stevenliu@ffmpeg/developer/stevenliu) (Quit: Leaving...)
[14:34:33] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (Ping timeout: 276 seconds)
[14:35:10] *** Quits: rsx (~dummy@ppp-188-174-153-249.dynamic.mnet-online.de) (Quit: rsx)
[14:36:36] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[14:38:22] *** Joins: softworkz (~softworkz@user/softworkz)
[15:10:07] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 240 seconds)
[15:10:32] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[15:13:02] <bencc1> does a 3.4GHz cpu transcode roughly 3.4/2.5 faster than a 2.5GHz cpu?
[15:13:32] <bencc1> I'm trying to think if I should buy two AMD Ryzen™ 9 5950X or one AMD EPYC™ 7502P
[15:17:31] *** another is now known as another|
[15:32:57] <BtbN> that's impossible to tell
[15:34:27] <BtbN> Specially since both those CPUs will happily boost themselves to the moon as much as they can
[15:37:07] <bencc1> are you talking about turbo boost?
[15:37:19] <BtbN> hm?
[15:37:28] <BtbN> All modern CPUs automatically boost as much as thermals allow
[15:37:51] <bencc1>  AMD EPYC™ 7502P has 32 cores vs AMD Ryzen™ 9 5950X with 16 cores
[15:38:05] <bencc1> but the price of the 7520p is a bit better
[15:38:24] <bencc1> and I don't have a way to test before I buy
[15:40:49] <BtbN> x264 does not scale to even 16 cores anyway, so I'd expect both those CPUs to perform very similar
[15:41:21] <BtbN> also, the price of an EPYC being a bit better is meaningless, if you need a tenfold more expensive platform to run it on
[15:42:19] *** Bertl_zZ is now known as Bertl
[15:42:27] <bencc1> what platform?
[15:43:11] <bencc1> I mostly run gui apps in docker containers and record the virtual screen buffer with ffmpeg
[15:43:23] <bencc1> so I'll be running several of theses at the same time
[15:45:57] <BtbN> The one you plug the chip into...
[15:46:29] <BtbN> I'm really not sure what you're asking. You buy the CPU that best fits your usecase.
[15:47:59] <bencc1> I know what usecase I have
[15:48:04] <bencc1> not sure what CPU I should get
[15:50:11] *** Joins: cmp23 (~cmp@lfbn-ren-1-1450-25.w90-27.abo.wanadoo.fr)
[15:51:16] <BtbN> So you don't know your usecase then?
[15:51:26] <BtbN> Not sure what to tell you really.
[15:52:16] *** Quits: gnoo (gnoo@user/gnoo) (Remote host closed the connection)
[15:54:57] <bencc1> I said the opposite to what you are saying :)
[15:56:54] *** Quits: pntaylor (~quassel@101.112.15.145) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[16:00:07] <BtbN> Well, what is your usecase then?
[16:00:35] <BtbN> If you want to have a single x264 encode go as fast as possible, you want a low-ish core count CPU with max boost. Intel could potentially even win there.
[16:01:05] <BtbN> iirc x264 does not scale beyond 8 threads, and not even sure how it behaves up to 8
[16:02:34] *** Joins: pntaylor (~quassel@101.112.15.145)
[16:05:20] <furq> it's more than 8 although you'll almost certainly start to hit diminishing returns before 96 or whatever the 7520p would default to
[16:05:30] <furq> there's a formula for it based on vertical resolution that i forget now
[16:06:26] <furq> if you're running a bunch of 1080p encodes in parallel then more cores is probably better
[16:09:41] *** Quits: myon98 (~myon98@user/myon98) (Quit: Bouncer maintainance...)
[16:11:18] <DeHackEd> it is worth noting that the epyc has crazy levels of L3 cache and has 8 channel memory. that could help immensely
[16:13:16] *** Joins: Volgaar (~volgaar@gw.lipn.univ-paris13.fr)
[16:19:57] <furq> i'm pretty sure you'll never utilise more than 32 threads for 1080p
[16:21:28] <furq> even with some incredible uarch that can utilise them all fully you're roughly capped to height/40 for frame threading
[16:21:42] <furq> and slice threading is even worse in every regard
[16:22:48] *** Quits: softworkz (~softworkz@user/softworkz) (Remote host closed the connection)
[16:23:15] *** Joins: softworkz (~softworkz@user/softworkz)
[16:30:41] <BtbN> https://github.com/mirror/x264/blob/master/doc/threads.txt has some numbers. And at 720p apparently more than 4~8, depdnding on preset, threads yields no speed benefit. And going higher has a quality impact even.
[16:32:52] <furq> that is on a dual nehalem box though
[16:38:17] *** Joins: minimal (~minimal@user/minimal)
[16:43:32] <DeHackEd> nevertheless I don't think the hardware generation is going to affect scaling of the software very much. my concern is if that document is still accurate after.. that's nearly a decade old CPU architecture isn't it?
[16:44:17] *** Joins: omegatron (~some@p54849842.dip0.t-ipconnect.de)
[16:44:32] <furq> 2009
[16:44:59] <furq> i saw someone did benchmarks of this but i can't find it now
[16:45:05] <furq> more recently i mean
[16:50:43] *** Quits: softworkz (~softworkz@user/softworkz) (Ping timeout: 252 seconds)
[16:51:19] *** Joins: softworkz (~softworkz@user/softworkz)
[16:56:59] <furq> also it's not the generation so much as the fact that dual nehalem is 2x 4c/4t
[16:57:18] <furq> so they stop at 12 threads because that's all the box will do anyway
[16:57:57] <furq> also it's 2010 vintage multiprocessor stuff which isn't ideal
[16:58:48] *** Quits: Brocker (~NoBody@user/brocker) (Quit: ZNC 1.8.2 - https://znc.in)
[16:59:00] *** Joins: Brocker (~NoBody@2002:95ca:ed03::95ca:ed03)
[16:59:00] *** Quits: Brocker (~NoBody@2002:95ca:ed03::95ca:ed03) (Changing host)
[16:59:00] *** Joins: Brocker (~NoBody@user/brocker)
[17:06:22] *** Quits: kib (~kib@user/kib) (Ping timeout: 268 seconds)
[17:08:04] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 250 seconds)
[17:08:08] *** Joins: kib (~kib@user/kib)
[17:10:03] *** Joins: Vonter (~Vonter@user/vonter)
[17:13:59] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[17:14:21] *** Joins: gnoo (gnoo@user/gnoo)
[17:21:31] *** Quits: upekkha (~Advanced@2a01:4f8:1c0c:49df::1) (Quit: upekkha)
[17:21:42] *** Joins: upekkha (~Advanced@2a01:4f8:1c0c:49df::1)
[17:24:47] *** Joins: Guest53 (~Guest53@192.140.221.135)
[17:25:49] <Guest53> Hi, has anyone tried the -threads option with ffmpeg. How does it decide the number of threads to use if we don't specify -threads option.
[17:26:24] <Guest53> We are having an issue with our ffmpeg containers where its consuming high cpu and want to limit that
[17:27:10] <Guest53> But not sure how to set the -threads option. Tried with a few videos without options and ffmpeg picks 8 threads for some and 12 threads for some
[17:27:43] <Guest53> So not sure on the correct setting for -threads that would limit cpu usage but also at the same time have not much performance impact
[17:27:55] <Guest53> Using ffmpeg 4.3.2
[17:28:07] <Guest53> with H264 format
[17:28:32] <BtbN> That's a really old version and you should update.
[17:28:49] <BtbN> The default for threads usually is however many processors the system reports.
[17:30:35] <Guest53> wansmt ffmpeg 4.3 released in 2020 and the current 4.4
[17:30:45] <znf> BtbN, has your build failed today with isl: download failed ?
[17:30:55] <BtbN> Yeah
[17:31:00] <BtbN> fixed it already though
[17:31:34] <Guest53> Also does setting -threads impact quality or just performance?
[17:31:41] <znf> thanks
[17:31:46] <znf> Guest53, just performance
[17:31:57] <BtbN> Guest53, depends on the encoder. x264 does lose quality the more slice threads you use
[17:32:22] <BtbN> pure frame threading does not normally cost quality. Slice threading very much can
[17:32:32] <furq> frame threading impacts quality slightly
[17:32:35] <furq> not enough to worry about though
[17:32:51] <Guest53> okay
[17:33:33] <Guest53> problem with us is ffmpeg is maxing out on cpu utilization. We run it serially in docker on k8 and restrict usage to 5 cores
[17:33:35] <furq> also x264 should always use the same number of threads if you don't set -threads
[17:33:42] <furq> it defaults to logical core count * 1.5
[17:34:07] <znf> I mean, you'll obviously maxx CPU usage if you're encoding...
[17:34:08] <Guest53> But it ends up using approx 500%, hitting limits and resulting in throttling and timeouts for pods
[17:34:17] <znf> 5 cores = 500%
[17:34:47] <znf> what are you actually trying to accomplish?
[17:34:47] <Guest53> Yes so wanted to try to cap the usage. Not sure if we increase the cpu cores it won't max out
[17:34:52] <furq> run it with nice
[17:35:13] <znf> I'm assuming those containers are one-shot?
[17:35:36] <znf> if so, why don't you cgroup those processes to 1 CPU core?
[17:35:41] <Guest53> Yes wanted to but apparantely we use python ffmpeg library to call ffmpeg. So seeting nice would need changes in code
[17:36:00] <furq> child process inherit niceness
[17:36:01] <Guest53> We have cgroup set via kubernetes. restrcited to 5 cores max
[17:36:05] <furq> so you could just run python with nice
[17:36:06] <Guest53> yes
[17:36:18] <znf> so restrict to 1 core
[17:36:32] *** witchc is now known as ff
[17:36:37] <znf> or are you restricting the whole group to 5 cores and it's every-pid for himself?
[17:36:41] *** ff is now known as witchcraft
[17:36:43] *** Quits: witchcraft (~witch@88-106-213-156.dynamic.dsl.as9105.com) (Changing host)
[17:36:43] *** Joins: witchcraft (~witch@user/witch)
[17:37:03] <Guest53> Whole k8 pod via kubernetes resource limits
[17:37:04] <another|> not sure what the problem is. you set it to 5 cores and it uses 5 cores
[17:37:45] <znf> yeah, I don't get it either
[17:37:54] <Guest53> see we use python to call ffmpeg and k8s calls python to check liveliness via liveliness probe
[17:38:04] *** witchcraft is now known as witchc
[17:38:16] <znf> so... assign different limits to the ffmpeg containers
[17:38:31] <another|> and?
[17:38:46] <Guest53> But when ffmpeg utilizes the entire cpu cores it leaves no room for python to respond to probes and hence k8 thinks its unhealthy and restarts it
[17:39:02] <Guest53> python and ffmpeg binary are on the same container
[17:39:16] <BtbN> Sounds like an issue with that system. ffmpeg is doing exactly what you told it to do.
[17:39:19] <Guest53> So was thinking of restricting ffmpeg via -threads
[17:39:34] <znf> uhm, sure, use -threads 1
[17:39:37] <another|> what does your cmdline look like?
[17:39:42] <Guest53> Yes but the soft limits is 1 core and hard limit is 5 cores
[17:39:53] *** Quits: omegatron (~some@p54849842.dip0.t-ipconnect.de) (Quit: What happened? You quit!)
[17:40:10] <znf> also... why can you edit the -threads argument but you can not nice it?
[17:41:02] <Guest53> Yes since we can pass arguments to the python ffmpeg library. The excutable is hardcoded in the library
[17:42:13] <Guest53> Also on my local system when i try to repro the issue, i end up with 8 threads  for some videos and 12 threads  for some without the -threads option
[17:43:10] <Guest53> So not sure how many threads i should set for my containers since if its variable. Not want to impact quality or get threads too narrow to impact performance
[17:43:45] *** Joins: keypusher (keypusher@user/keypusher)
[17:44:54] <Guest53> another| command generate via the ffmpeg python library is something like this :
[17:44:55] <Guest53> ffmpeg -c:v h264 -i <input-file> -hide_banner -y -c:a aac -ar 48000 -c:v h264 -profile:v baseline -crf 20 -sc_threshold 0 -pix_fmt yuv420p -hls_time 10 -strict -2 -vsync 2 -t 5400 -vf scale=w='min(1280,iw)':h=-2 -b:v 2800k -maxrate 2996k -bufsize 4200k -b:a 128k -hls_time 10 -f hls -hls_list_size 0 /<output-file>/720p.m3u8
[17:45:03] <Guest53> without the threads option
[17:46:03] <BtbN> the first -c:v is quite pointless
[17:46:12] <BtbN> and for the output one you probably want libx264, not generic h264
[17:46:25] <BtbN> And why are you using baseline profile? That will heavily impact quality.
[17:46:43] <furq> i don't think any device exists that will play back 720p but only baseline
[17:46:54] <another|> BtbN: damn! you are too fast. I was gonna say the same
[17:47:00] <BtbN> By now, every device out there should support high even
[17:47:16] <furq> even ancient devices that could only do baseline wouldn't play 720p anyway
[17:47:29] <another|> main at minimum
[17:47:57] <Guest53> No 720 is just an example. We convert from 480 to 1080 formats
[17:48:15] <furq> sure but there's no point at all using baseline for >480p
[17:48:17] <BtbN> That makes the argument stronger even
[17:48:18] <furq> and you probably shouldn't in general
[17:48:42] <another|> also: why `-strict -2`
[17:49:02] <another|> aac hasn't been exp for a long time
[17:49:57] <Guest53> I'm bit new to ffmpeg. This was set previous to me. I've just taken over and new to ffmpeg. Also this setup was working as is until we started facing frequent restarts
[17:50:37] <BtbN> Still sounds mostly like an issue with your hypervisor more than anything
[17:50:41] <another|> That's not a good excuse not to fix it
[17:50:51] <BtbN> if it kills VMs that actually use the CPUs they got assigned, it's misconfigured
[17:51:07] <Guest53> Yes i want to but with caution
[17:51:44] <Guest53> No i mean we have assgined max cpu cores of 5 for kubernetes pods and ffmpeg maxs them out
[17:52:12] <another|> of course it does. if it's available
[17:52:23] <Guest53> This causes cpu throttling and k8s liveness probe time out
[17:52:30] <BtbN> ffmpeg will make use of all available cores by default
[17:52:33] <Guest53> causing restart
[17:52:56] <BtbN> So, your hypervisor gives you 5 cores. But kill you if you use 5 cores. Sounds like a hypervisor problem to me.
[17:53:16] <Guest53> Yes hence was trying out few things like setting up nice or -threads to restrict and leave some room for python to respond to k8 probes
[17:54:10] <BtbN> I've never had issues with the system becoming unresponsive even with ffmpeg hammering all my cores
[17:54:13] <BtbN> that sounds very odd
[17:54:16] <Guest53> Not it does not kill. We use kubernetes. ffmpeg is run via python in docker container in a kubernetes pod. Python on basis of messages from a queue calls ffmpeg for processing
[17:54:26] <BtbN> Usually the scheduler is good enough at its job to give some time to other processes
[17:54:47] *** Quits: Vonter (~Vonter@user/vonter) (Read error: Connection reset by peer)
[17:55:07] <Guest53> And we have set resources with soft as 1 and hard as 5 in kubernetes for our pod
[17:55:16] <another|> you mentioned something about a soft limit. maybe look into that?
[17:55:24] *** Joins: Vonter (~Vonter@user/vonter)
[17:55:30] <BtbN> that does not sound like a good config for a VM that will constantly peg all available CPU cores
[17:56:07] <BtbN> If you heavily over-subscribe the host CPUs, and then have all those VMs run ffmpeg, you will run into issues
[17:56:51] <Guest53> No no, we don't use vms. We rrun on kubernetes pods and restric cpu usage via resource limits. eg: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#resource-units-in-kubernetes
[17:57:19] <Guest53> kubernetes would throttle cpu usage if it reaches max configured
[17:57:22] <BtbN> I have no idea what that means or does. But in the end it's still just a VM with a host that has physical cores and VMs that use them.
[17:59:00] <Guest53> We get throttled on cpu limits once we reach max usage, causing health probe timeouts
[17:59:18] <Guest53> Hence was trying out -threads and nice as options
[18:00:08] <Guest53> But not sure on what should be the accurate value for threads as with different videos i get different thread usage without the -threads option
[18:01:10] <another|> BtbN: VM != container
[18:01:39] <BtbN> You can't run docker in a container, so has to be a VM.
[18:01:51] <Guest53> Yes docker on a VM
[18:01:52] <another|> but essentially still correct
[18:03:21] <another|> A VM was not mentioned up until now. AFAIK kubernetes is just managing containers and it seems to be kubernetes that kill them
[18:03:40] <BtbN> What do you mean? It was mentioned right from the get go.
[18:03:42] <Guest53> Yes kubernetes kills them
[18:03:52] <BtbN> VMs that run docker in them
[18:04:04] <BtbN> You can't run a container that runs docker inside by principle.
[18:04:11] *** unlord_ is now known as unlord
[18:04:20] <Guest53> I mean kuberntetes worker nodes are VM that run docker containers
[18:04:38] <Guest53> BtbN you can with dind
[18:04:47] <another|> BtbN: errr.. I can't find whatever you're refering to
[18:05:23] <BtbN> Whatever fancy new word you want to call your VMs/Containers/Pods/Kubernetes: Your hypervisor is misbehaving, not ffmpeg.
[18:05:51] <BtbN> ffmpeg does what it's supposed to. If you want it to use a set amount of threads, instead of however much it can grab, you need to tell it to do so.
[18:06:19] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[18:06:57] <Guest53> How does ffmpeg decides on threads? On my local desktop without -threads it used 12 threads for some videos and 8 threads for some
[18:07:02] <another|> Yeah, in this context it's pretty much bikeshedding
[18:07:22] <Guest53> @bt
[18:07:42] <another|> I think that might depend on the codecs
[18:07:49] <BtbN> basically, it does the equivalent of what nproc does, and uses that, plus some factor, depending on specific encoder
[18:08:02] <another|> maybe even on the content
[18:08:09] <Guest53> BtbN hypervisor or kubernetes in our case is correct. Since we reach the max limits it would start throttling
[18:08:09] <BtbN> Generally, it will try to use however many cores it can get
[18:08:26] <BtbN> So if it sees 5 CPUs, it will make use of them
[18:09:08] <BtbN> If the content and filters/encoder can make use of however many CPUs are available, is a whole other story. But it will make them all available for use.
[18:09:12] <Guest53> In my local system with 8 cores for certain videos with the same codec it uses 8 threads whereas for some it uses 12
[18:09:25] <Guest53> So guessing its based on content as well
[18:09:33] <BtbN> Not really, no
[18:09:46] <BtbN> ffmpeg does not evaluate any video content to then at runtime modify the thread count
[18:10:33] <Guest53> I am checking the resulting videos via mediainfo and it shows 8 for some and 12 for some
[18:10:49] <BtbN> 8 or 12 what?
[18:10:52] <another|> Wait what?
[18:10:56] <Guest53> threads
[18:11:03] <another|> Where are you getting that from?
[18:11:06] <BtbN> that's... not something you can see on the resulting file
[18:11:21] <BtbN> You can see the slice count, but that's about it
[18:11:41] *** Quits: softworkz (~softworkz@user/softworkz) (Remote host closed the connection)
[18:11:42] <another|> Are you talking about x264's SEI info?
[18:11:50] <Guest53> No wait,  i read it on a blog
[18:11:56] <Guest53> Let me pull that out
[18:11:57] *** Quits: Rhys (Rhys@help.lux.melted.me) (Killed (zirconium.libera.chat (Nickname regained by services)))
[18:11:57] *** rhys| is now known as rhys
[18:12:10] *** Joins: Rhvs (Rhys@help.lux.melted.me)
[18:12:26] *** Joins: softworkz (~softworkz@user/softworkz)
[18:13:23] <Guest53> BtbN please have a look at this : https://streaminglearningcenter.com/blogs/ffmpeg-command-threads-how-it-affects-quality-and-performance.html
[18:14:01] <BtbN> That's an insanely long article. And it seems to repeat most of what was said here in the last hour.
[18:14:48] <Guest53> Just hover to "What Does FFmpeg Do if You Don’t Specify a Threads Value?"
[18:15:05] <Guest53> Here you can see how we get the used threads value from mediainfo
[18:15:37] <Guest53> snippet output from media info
[18:15:45] <BtbN> No idea where mediainfo is supposed to pull that info from. FFmpeg writes no such info.
[18:15:56] <Guest53> Encoding settings                        : cabac=0 / ref=3 / deblock=1:0:0 / analyse=0x1:0x111 / me=hex / subme=7 / psy=1 / psy_rd=1.00:0.00 / mixed_ref=1 / me_range=16 / chroma_me=1 / trellis=1 / 8x8dct=0 / cqm=0 / deadzone=21,11 / fast_pskip=1 / chroma_qp_offset=-2 / threads=12 / lookahead_threads=2 / sliced_threads=0 / nr=0 / decimate=1 /
[18:15:57] <Guest53> interlaced=0 / bluray_compat=0 / constrained_intra=0 / bframes=0 / weightp=0 / keyint=250 / keyint_min=25 / scenecut=0 / intra_refresh=0 / rc_lookahead=40 / rc=crf / mbtree=1 / crf=20.0 / qcomp=0.60 / qpmin=0 / qpmax=69 / qpstep=4 / vbv_maxrate=5350 / vbv_bufsize=7500 / crf_max=0.0 / nal_hrd=none / filler=0 / ip_ratio=1.40 / aq=1:1.00
[18:16:11] <BtbN> That's x264 stuff, not ffmpeg.
[18:16:18] <Guest53> I tested with -threads option and mediainfo shows then correctly
[18:16:37] <Guest53> Yes, correct x264, my apologies
[18:16:47] <another|> this could very well depend on resolution
[18:17:07] <znf> You're telling a person that knows most of the ins and outs of ffmpeg, which he personally wrote at least some of them, to check an article written by someone else on the topic...
[18:17:10] <znf> Just saying :)
[18:17:46] <Guest53> What i'm trying to understand is if x264 would choose different default threads based on content or so?
[18:17:47] <another|> by Ozer of all people...
[18:17:55] <BtbN> If you do not specify -threads, for x264, it will default to X264_THREADS_AUTO. Which is a "magic value" (It's just 0 it seems) that let's x264 figure the thread count out internally.
[18:18:26] <Guest53> znf no my apologies. I was just trying to show how i was pulling the thread info
[18:18:29] <BtbN> I doubt x264 has any means to runtime-adjust thread count. So it can't base it on content.
[18:18:41] <BtbN> Best it can do is base it on metadata like resolution
[18:18:42] <Guest53> Or size?
[18:18:56] <BtbN> And system core count, obviously
[18:19:11] <Guest53> Yes system core count is constand
[18:19:16] <Guest53> *constant
[18:19:19] <BtbN> If you don't want it to go do some automagic thread detection, specify a hard value
[18:25:11] <Guest53> Yes since the default threads are variable based on content perhaps, i'm a bit skeptical on choosing the optimal size as don't have a prior hand knowledge on the content that would be uploaded
[18:26:12] <Guest53> Lets say if we restrict to 5 cores then would it be a good assumption to restict threads to 3?
[18:27:03] <BtbN> Ideally, you'd just leave it on auto and fix your environment to not kill you if something actually makes use of the CPUs it offers.
[18:27:05] <Guest53> On my local system i tried with a small video and 8 cores is consuming close to ~450% cpu. 3 cores stabilizes it to around 300%
[18:27:47] <BtbN> CPU percentages over 100% are pretty meaningless.
[18:28:47] <BtbN> It'll do its best to use all CPUs. If the workload is too light, it just can't.
[18:28:57] <Guest53> BtbN its not killing it. I've seen sometime ffmpeg crosses 600% as well on the allowed 500% limit. Kubernetes won't kill it but throttle cpu utilization. With throttling python process which calls ffmpeg isn't able to respond to health calls
[18:29:08] <BtbN> "300% CPU use" can now mean that 3 cores are at 100%, the rest idle
[18:29:13] <BtbN> of all of them are at medium load
[18:29:23] <Guest53> And kubernetes assumes it to be unhealthy and tries restarting
[18:29:24] <BtbN> *or
[18:29:54] <BtbN> Yeah, that sounds like an issue with that environment to me. There's not much ffmpeg can do to help with that.
[18:30:12] <Guest53> Yes or it utilizes all cores but max till 300%
[18:30:13] <kepstin> with video encoding, you want to use all of the cpu that is available
[18:31:10] <Guest53> kepstin yes we want to but we are kubernetes and have all other pods running, Allowing unrestricted access could starve other apps
[18:31:23] <kepstin> if you want ffmpeg to be limited in cpu, then you need to apply the cpu limit from outside ffmpeg
[18:31:43] <Guest53> Yes its applied outside via kubernetes resource limits
[18:31:59] <kepstin> so throttling the container to use max 3 cores at 100% each for example would work
[18:32:34] <kepstin> i assume kubernetes stuff is using cgroups cpu throughput controller for this
[18:32:42] <Guest53> kepstin we throttle the container to max 5 cores
[18:32:49] <Guest53> Yes k8s uses cgroups
[18:32:50] <kepstin> so that's 500%
[18:33:21] <Guest53> But the thing is as soon as ffmpeg reaches 500% it starts throttling
[18:33:39] <kepstin> yes? that's expected. the kernel should be keeping it from using more than 500%
[18:33:53] <Guest53> And we call ffmpeg via python process which polls a queue and gets data for ffmpeg
[18:34:11] <kepstin> the scheduler still runs per normal inside the container, of course, so multiple processes inside the container shouldn't be an issue.
[18:34:37] <Guest53> The python process is responsible to answer to kubernetes health probes
[18:34:58] <kepstin> sounds like you need to be talking to a kubernetes expert then, not an ffmpeg expert.
[18:35:00] <Guest53> But we are facing frequent restarts as the health probes times out
[18:35:05] <kepstin> because everything should be working
[18:35:15] <kepstin> unless the "cpu throttling" you're talking about is misconfigured
[18:35:44] <BtbN> Either it's horribly misconfigured, or the host is horribly oversubscribed
[18:35:59] <Guest53> kepstin no cpu throttling is working fine. It starts throttling as soon as ffmpeg maxs out at 500% which it does mostly
[18:36:02] <kepstin> if it is, as i'd hope it would be, a cpu throughput limit, then there should be no issue with other applications in the container having latency problems.
[18:36:07] *** Quits: MightyBOB (~MightyBOB@76.99.21.35) (Ping timeout: 240 seconds)
[18:36:34] <kepstin> since the linux cpu scheduler still handles portioning out the available cpu throughput between processes in the cgroup fairly
[18:36:41] <another|> IIRC x264 starts all threads nice
[18:36:59] <Guest53> python and ffmpeg run in the same container. Python calls ffmpeg with data from the queue. Also its reponsible to ansiwer the health probes
[18:37:11] <kepstin> x264 does weird things with thread priorities to improve throughput, you can mostly ignore that
[18:37:35] <BtbN> Are you sure it's not just poor python code that gets blocked in IO wait if ffmpeg is busy crunching on input?
[18:37:47] <another|> just saying that it should yield to processes with higher priotity
[18:37:49] <kepstin> Are you sure you don't just have a bug in your python script where it's synchronously waiting (blocked) for ffmpeg to finish, so it can't respond to the health probes?
[18:37:53] <Guest53> So with ffmpeg at 500% it leaves no room for python to answer probes and kuberntes assumes the containers to be unhealthy and restats
[18:37:55] *** Quits: softworkz (~softworkz@user/softworkz) (Ping timeout: 252 seconds)
[18:38:08] <Guest53> No. its a flask app
[18:38:18] <BtbN> What does that mean?
[18:38:22] <kepstin> because your problem doesn't make sense, that's not how cpu scheduling works
[18:38:24] <BtbN> Even with ffmpeg at 10000%, the OS scheduler should give time to other processes
[18:38:29] *** Joins: softworkz (~softworkz@user/softworkz)
[18:39:55] <Guest53> I've manually sshe'd into the container and tried to run the health probe. It works out just fine even when ffmpeg is running
[18:40:08] <Guest53> So there is not blocking for ffmpeg
[18:40:10] <kepstin> yep, that's expected
[18:40:25] <kepstin> so you have a bug in your python app where it's not responding to health probes while waiting for ffmpeg
[18:41:39] <Guest53> kepstin i manually hit the python we endpoint when ffmpeg is running and it replies back. So i'm assuming it would also reply back to a health probe call
[18:42:53] <BtbN> Well, given that it keeps getting killed, that seems not to be the case.
[18:43:00] <Guest53> And calling ffmpeg and web endpoint run in separate threads
[18:43:37] <kepstin> We can't really help you further here; your problem is either with kubernetes or your app and not something with ffmpeg.
[18:43:38] <Guest53> Also the killing is not consistent. If it was waiting it would continuously do so
[18:43:57] <Guest53> Its infrequent but happens couple of times in a day
[18:44:00] <kepstin> ffmpeg in this context is equivalent to any cpu hungry process, and would have to be handled the same way
[18:44:29] <another|> have you tried limiting ffmpeg with -threads to make sure it's not your flask app?
[18:44:41] *** Quits: Volgaar (~volgaar@gw.lipn.univ-paris13.fr) (Ping timeout: 252 seconds)
[18:45:14] <Guest53> Yes that's i want to try. And hence wanted to understand how should i configure -threads so that it does not affect quality or performance
[18:45:41] <Guest53> On my local setup sometimes it uses default 8 and for some videos 12 threads
[18:45:42] <BtbN> The moment you lower the thread count, it will naturally reduce performance.
[18:45:59] *** Joins: jkwnki (~jkwnki@p4ff31b54.dip0.t-ipconnect.de)
[18:46:04] <Guest53> So i am not sure what should be the ideal value for threads
[18:46:27] <another|> That is not what I said.
[18:46:55] <another|> s/said/meant/
[18:47:21] <another|> just limit it to 4 so you should have 1 core unutilised
[18:47:27] <Guest53> No what i meant is without threads its using a variable default threads. So not sure what -threads value should i set that would not affect performance
[18:48:01] <another|> *sigh* You're going in circles
[18:48:20] <another|> You cannot limit thread usage and not affect performance.
[18:48:20] <Guest53> cool, let me try with 4 threads
[18:48:59] <Guest53> I meant not to affect performance drastically
[18:50:37] *** Quits: jkwnki (~jkwnki@p4ff31b54.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[18:51:13] <another|> If the problem persists it is more likely your python code
[18:51:24] *** Joins: rsx (~dummy@ppp-188-174-153-249.dynamic.mnet-online.de)
[18:52:00] <Guest53> Yes, just wanted to be sure i'm not messing with wrong -threads settings
[18:52:09] <Guest53> So i came here to check with experts :)
[18:52:26] <another|> define "wrong"
[18:52:30] <Guest53> Thanks for all the help another| BtbN kepstin
[18:52:40] <kepstin> wrong experts, you need to talk to a kubernetes expert about what their cpu throttling is doing :/
[18:53:11] <Guest53> another| with wrong i meant a setting too lower or too upper
[18:53:14] <kepstin> because ffmpeg and libx264 are doing just fine, just using as much cpu as available to them due to external limiting.
[18:54:12] <Guest53> Sorry just one more question
[18:54:14] <another|> too low? too low for what?
[18:54:42] <Guest53> another| too low to not utilize available cpu and too high not to max out
[18:55:04] <another|> ...
[18:55:21] <Guest53> What does -threads do in case of cpus with multi thread support
[18:55:51] <Guest53> In my local setup with 8 cores, for some videos its using default 8 and for some 12 threads
[18:56:00] <another|> I think you might lack the understanding of what threads are.
[18:56:23] <another|> Guest53: We've been over that multiple times
[18:56:26] <Guest53> 1 core uses 2 threads right?
[18:56:29] <another|> no
[18:57:08] <kepstin> in the context of kubernetes, you're usually talking about 'vcpus' which are sometimes a single hyperthread, but might be less than that in the case of an oversubscribed system
[18:57:36] <Guest53> yes vcpus with 100m per core
[18:57:40] <Guest53> *1000m
[18:57:53] <kepstin> all i've learned from this conversation is that kubernetes is a terrible platform for building cpu-intensive workloads on :/
[18:58:38] <Guest53> '=D
[18:58:38] <another|> kepstin: I wouldn't draw this conclusion. It might very well be a L8 problem
[18:59:38] <kepstin> well, my current system is a processing queue that runs on bare VMs, and adding an extra layer of indirection between the VM and the running processes seems like more of a pain then it's worth :)
[19:00:17] <BtbN> More a pain than it's worth is generally summing up all those "Docker/... got too complex, let's add another layer on top that's hyper complex" solutions
[19:01:35] <another|> in any case: limiting an application to less threads than logical CPUs available will lead to that application not fully utilizing all available CPU resources
[19:08:41] *** Quits: auth (~auth@user/auth) (Quit: Leaving)
[19:15:14] *** Quits: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Quit: elastic_1)
[19:15:32] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[19:24:54] <GenTooMan> hmm is there a way to find scene change time references in ffmpeg? I need to find a specific frame in a video and it's the start of a specific part of the video
[19:28:00] <c_14> check the scdet filter
[19:45:41] *** Joins: Narrat (~omnius@p200300df5f13e7a606ea56fffe2e7cdc.dip0.t-ipconnect.de)
[19:46:22] *** Quits: Guest53 (~Guest53@192.140.221.135) (Quit: Client closed)
[19:51:59] *** Quits: cmp23 (~cmp@lfbn-ren-1-1450-25.w90-27.abo.wanadoo.fr) (Quit: Connection closed)
[20:14:04] *** Quits: kib (~kib@user/kib) (Quit: WeeChat 3.2.1)
[20:23:04] *** Joins: itt788 (~itt788@117.246.29.11)
[20:25:46] <itt788> i have two .mp4 video files, i want to resample their audio, and get only a .opus file being the concatenation of the two resampled audio segments.
[20:28:08] <itt788> i tried this: ffmpeg -i v1.mp4 -i v2.mp4 -filter_complex '[0:1] [1:1] concat=n=2:a=1 [a]' -c:a libopus -b:a 24k  output.opus
[20:28:25] <itt788> that does not work
[20:30:40] <znf> define "does not work"
[20:30:51] <znf> also, where are you "resampling"?
[20:31:30] <itt788> Stream specifier ':1' in filtergraph description [0:1] [1:1] concat=n=2:a=1 [a] matches no streams
[20:31:52] <itt788> this is the error output by ffmpeg
[20:32:46] <znf> your 2nd video file doesn't have a :1 track
[20:33:04] <itt788> the '-b:a 24k' is what i usually do when i have only one input file
[20:33:37] <znf> that just sets the audio bitrate to 24k of the resulting file
[20:34:13] <itt788> yes
[20:34:56] <znf> I'm still not sure where you are "resampling"
[20:35:59] <znf> let me rephrase: I'm still not sure where YOU THINK you are resampling
[20:36:10] <itt788> actially in [0:0] i'm not sure which one is the segment index, and which one is the track index
[20:36:54] *** Quits: beaver (~beaver@user/pong) (Quit: test)
[20:36:56] <c_14> opus is always 48kHz so it doesn't matter anyway
[20:37:06] <znf> oh it is?
[20:37:14] <c_14> , and you might want to use 0:a:0 and 1:a:0 instead of 0:1 etc itt788
[20:37:33] <c_14> it's file:track
[20:38:38] <itt788> i want the output file being a 24k opus file and the concatenation of the audio tracks of the input files.
[20:39:13] <c_14> do you want the bitrate or the sample rate to be 24k/
[20:39:15] <c_14> ?
[20:39:30] <c_14> 24kHz or 24kBit/s
[20:39:33] <itt788> should both segments be first resampled and then concatenated, or vice versa, it's not a problem for me
[20:39:46] <itt788> 24kbps/s
[20:40:13] <itt788> i think the audio bw is about 16kHz
[20:40:14] <c_14> that's not resampling, it's reencoding hence the confusion
[20:40:28] <itt788> i see
[20:40:37] *** Joins: beaver (~beaver@user/pong)
[20:40:43] *** ossifrage_ is now known as ossifrage
[20:40:47] <c_14> ffmpeg -i v1.mp4 -i v2.mp4 -filter_complex '[0:a:0] [1:a:0] concat=n=2:a=1 [a]' -c:a libopus -b:a 24k  output.opus
[20:40:53] <c_14> ^that should work
[20:44:48] <itt788> it still says "Stream specifier ':a:0' in filtergraph description [0:a:0] [1:a:0] concat=n=2:a=1 [a] matches no streams
[20:44:51] <itt788> "
[20:46:18] <c_14> then your second file doesn't have an audio track
[20:46:31] <c_14> check ffprobe v2.mp4
[20:46:43] *** Joins: iive (~iive@87.119.101.204.client.entry.bg)
[20:49:13] <itt788> both have
[20:49:17] <itt788> Stream #0:1(eng): Audio: aac (LC) (mp4a / 0x6134706D), 16000 Hz, mono, fltp, 69 kb/s (default)
[20:49:33] <itt788> for both it says it
[20:49:47] *** Quits: rsx (~dummy@ppp-188-174-153-249.dynamic.mnet-online.de) (Quit: rsx)
[20:52:14] *** Joins: Buster_ (~Buster@46.160.36.66)
[20:52:27] <c_14> oh
[20:52:37] <c_14> concat=n=2:a=1:v=0
[20:52:45] <c_14> v is set to 1 by default iirc
[20:54:34] <itt788> "Filter concat has an unconnected output"
[20:57:22] *** jschwart_ is now known as jschwart
[21:00:22] <c_14> add -map '[a]' before the output file after the input files
[21:00:42] <kepstin> right now you're specifying a named output pad '[a]', you can either map that explicitly, or remove the name and let it work implicitly
[21:09:05] *** Joins: someuser (~user@41.46.246.23)
[21:10:35] <itt788> i removed the [a] and it worked.
[21:11:05] <itt788> thanks guys
[21:11:11] *** Quits: itt788 (~itt788@117.246.29.11) (Quit: leaving)
[21:16:41] *** Quits: durandal_1707 (~computer@95.168.118.28) (Read error: Connection reset by peer)
[21:18:40] *** Joins: durandal_1707 (~computer@212.15.177.19)
[21:20:13] *** Quits: pntaylor (~quassel@101.112.15.145) (Ping timeout: 252 seconds)
[21:20:46] *** Joins: pntaylor (~quassel@101.113.233.11)
[21:22:08] *** CounterPillow is now known as CounterPumpkin
[21:27:08] *** Quits: beaver (~beaver@user/pong) (Remote host closed the connection)
[21:30:00] *** Henry151_ is now known as Henry151
[21:30:04] *** Quits: softworkz (~softworkz@user/softworkz) (Ping timeout: 252 seconds)
[21:30:10] *** Joins: softworkz (~softworkz@user/softworkz)
[21:30:11] *** Joins: beaver (~beaver@user/pong)
[21:31:19] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (Remote host closed the connection)
[21:31:58] *** Quits: Fohsap (~Muimi@2001:19f0:6001:e4d:5400:3ff:fe41:8d5b) (Ping timeout: 250 seconds)
[21:35:36] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[21:37:26] *** Quits: jess (~jess@libera/staff/jess) (Quit: Lost terminal)
[21:40:49] *** Joins: Volgaar (~volgaar@104.66.13.93.rev.sfr.net)
[21:52:51] *** Joins: jess (~jess@libera/staff/jess)
[21:55:11] *** Quits: durandal_1707 (~computer@212.15.177.19) (Read error: Connection reset by peer)
[21:59:41] *** Joins: durandal_1707 (~computer@212.15.177.19)
[22:00:26] *** Quits: durandal_1707 (~computer@212.15.177.19) (Read error: Connection reset by peer)
[22:02:13] *** Joins: filaris (~filaris@46.159.237.220)
[22:03:40] *** Quits: nillyhan (~00000000@user/nillyhan) (Ping timeout: 252 seconds)
[22:03:48] *** Joins: durandal_1707 (~computer@212.15.177.19)
[22:03:59] *** Joins: nillyhan (~00000000@user/nillyhan)
[22:07:43] *** Quits: af (~af@awalgarg.me) (Quit: WeeChat 3.2.1)
[22:07:55] *** Joins: af (~af@awalgarg.me)
[22:08:58] *** Joins: s0berage (~s0berage@135-23-213-77.cpe.pppoe.ca)
[22:09:46] <filaris> i'm trying to stream by sending frames to stdin of ffmpeg
[22:11:14] <filaris> problem is about FFmpeg is encode frames as fast as they come in
[22:13:03] <filaris> is there option to make actual encoding speed same as defined FPS ? (sure, I can limit speed of sending frames to fffmpeg, but curious if I miss option for ffmpeg for this)
[22:13:23] <filaris> ffmpeg -y -f  rawvideo -vcodec rawvideo -r 10 -s %dx%d -pix_fmt gray -i -  -c:v libx264 -preset veryfast -crf 20 -g 20 -f flv %s
[22:13:52] <filaris> this is command line i use
[22:20:17] <furq> filaris: add -re before -i
[22:21:53] <filaris> i remember there was something, but can't make right question for Google to find it again
[22:22:00] <filaris> okay, let me check ...
[22:26:02] <filaris> seems its whats i need, thanks
[22:54:33] *** Quits: durandal_1707 (~computer@212.15.177.19) (Quit: leaving)
[22:58:08] <bencc1> if I have 1 CPU core with 2 hyperthreads, can several instances of ffmpeg share the same hyperthread?
[22:58:25] <bencc1> does it hurt performance instead of 1 ffmpeg instance per hyperthread?
[22:58:42] <bencc1> each ffmpeg instance will use 1 pid and 1 or more threads?
[23:05:18] <BtbN> x264 usually profits quite nicely from hyperthreading
[23:05:30] <BtbN> All the other stuff cannot sensibly be answered
[23:05:39] <DeHackEd> there is a bit of a performance hit because CPU caches will be less effective when jumping between instances. not sure how bad it actually is...
[23:06:02] <DeHackEd> the "core scheduling" feature of the newest linux kernesl catches my interest there..
[23:08:27] <bencc1> I'm trying to decide between few faster cores and more slower cores
[23:08:46] <bencc1> I'm encoding in real time and trying to do as much as possible in parallel
[23:09:19] <bencc1> I'm currenty using 8vCPU (8 hyperthreads) machine and can encode 3 videos at the same time
[23:09:57] *** Joins: TheSHAD0W (~TheSHADOW@70.37.249.19)
[23:10:05] <bencc1> if I'll use 4 hyperthreads with faster and newer cores, can it let me encode more videos?
[23:10:16] <bencc1> or will context switching between videos might cause more harm?
[23:11:09] <TheSHAD0W> Howdy.  I've got a complicated request...  I'd like to take a 4K video live stream as input, and both re-encode it as 1080p and stream it out, and also split the stream into quarters and stream each quarter out at 1080p.
[23:11:27] <TheSHAD0W> Has anyone done this insanity before?  What sort of hardware do I need to accomplish it?
[23:11:31] <JEEB> well your first filter is split
[23:12:04] <JEEB> that splits your input to 1x 1080p scaled, and then the other bit that will then get quarter'd
[23:12:15] <DeHackEd> that is technically doable. CPU permitting, my biggest concern is the streaming aspect. one slow or stuck stream will kill the whole thing. startup tends to be an issue in particular
[23:12:17] <JEEB> not sure what's the best way of doing the quarter'ing
[23:12:35] <JEEB> DeHackEd: seems like it's a single 2160p input
[23:12:42] <DeHackEd> with 5 outputs
[23:12:52] <JEEB> then split into one output that is just scale=w=1920:h=1080
[23:12:53] <TheSHAD0W> Correct.
[23:13:04] <JEEB> and another that is the quarters thing
[23:13:14] <TheSHAD0W> Gee, fancy meeting you here.  ^__^
[23:13:16] <DeHackEd> 4 crop commands works, but is there something better
[23:13:22] <DeHackEd> yeah I know
[23:13:30] <DeHackEd> I'm here a LOT actually
[23:13:42] <JEEB> not sure if anything better than crop, at least from the top of my head
[23:13:48] <JEEB> ffmpeg-filters might give hints
[23:13:48] <TheSHAD0W> How much CPU do I need?  Or would I need a GPU to do this?
[23:13:52] <JEEB> http://ffmpeg.org/ffmpeg-filters.html
[23:14:03] <JEEB> TheSHAD0W: you don't know before you test
[23:14:12] <TheSHAD0W> Hah.
[23:14:14] <JEEB> first test by just decoding your input
[23:14:19] <DeHackEd> A GPU can help, but image quality of GPU encoding is almost universally worse than CPU encoding (unless you set the CPU mode to a very fast preset).
[23:14:21] <JEEB> then add the scale
[23:14:38] <DeHackEd> also, for nVidia specifically, they kneecap it to 2 streams per system without the high end Quadro cards
[23:14:45] <JEEB> then add the additional splitting+crop or whatever the optimum way is
[23:15:10] <TheSHAD0W> If I do a simple crop I'll have 1080p out of that, correct?
[23:15:30] <JEEB> basically in theory you could do split to five
[23:15:37] <JEEB> then one is just normal scale to 1080
[23:15:44] <TheSHAD0W> Mmm.
[23:15:47] <JEEB> then the four others crop different bits of the image
[23:15:49] <DeHackEd> the main issue I'm worried about is having 4 instances of cropping 4k to 1080p. feels less than ideal. lot of data moving around there
[23:15:58] <JEEB> sure
[23:15:59] * TheSHAD0W nods
[23:16:07] <JEEB> but at least cropping is just throwing the data out, in theory
[23:16:22] <JEEB> as in, doable by just adjusting offsets and width/height
[23:16:47] <JEEB> whether you prefer memcpy or the adjustments depends on the case of course
[23:17:04] <JEEB> anyways, it's something testable so you can get a grasp on how fast you can do it :P
[23:17:23] <DeHackEd> kinda wish the encoder could do an internal crop by just selecting an offset from the input frame, even with limits like multiples of 2 pixels
[23:17:34] <TheSHAD0W> As DeHackEd says that's still basically having 4X uncompressed 4K streams running through memory simultaneously before the crop occurs.
[23:17:42] <JEEB> you could do that with the API
[23:17:50] <TheSHAD0W> Mmm.
[23:17:54] <JEEB> as long as offsets are OK and you make sure the encoder isn't rtrying to free your buffers
[23:18:08] <DeHackEd> well the good news is the `split` filter doesn't actually do any duplication. internally it's thread-safe reference counting..
[23:18:22] <TheSHAD0W> Oh cool.
[23:18:33] <DeHackEd> cropoping, however, would be a lot of memcpy() work
[23:18:57] <TheSHAD0W> Not as bad as memcpying the whole thing before cutting it down.
[23:19:07] <DeHackEd> or is it... ...
[23:19:36] <TheSHAD0W> It probably is.
[23:19:59] <DeHackEd> actually I'm looking at the source.. AVFrame->crop_top etc fields exist..
[23:20:02] <TheSHAD0W> If it's reeally smart it could feed split-up data to the encoder but it's such a special case.
[23:22:52] <DeHackEd> well TIL. av_frame_apply_cropping() is a thing and just offsets the memory pointers without actually modifying anything
[23:22:58] <DeHackEd> this might actually do pretty well
[23:23:06] <TheSHAD0W> Huh.
[23:23:24] <TheSHAD0W> So it's just the cost of decoding the stream, and encoding all five streams.
[23:23:41] <DeHackEd> well there's a resampling of 4k to 1080p which is gonna be noticable
[23:24:04] <TheSHAD0W> True.
[23:24:16] <DeHackEd> but with multi-threaded encoding this should be quite doable.
[23:24:22] <TheSHAD0W> Okay.
[23:24:32] <JEEB> test it step by step tho :P
[23:24:43] <JEEB> not "oh I stuck all the bits together and it's too slow"
[23:24:43] <DeHackEd> start by outputting to files on disk, for example.
[23:24:50] <JEEB> first decoding
[23:24:53] <JEEB> then the scale
[23:25:06] <JEEB> then the quarters
[23:25:12] <JEEB> then scale and quarters together
[23:25:18] <JEEB> then finally encoders at the end
[23:25:34] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[23:26:43] *** Quits: SpeakerToMeat (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[23:28:01] <TheSHAD0W> Mmm.
[23:28:33] <TheSHAD0W> I can throw up to a 2nd gen threadripper at it if I have to.
[23:29:02] <TheSHAD0W> 48 threads ought to do it.  :-P
[23:34:18] *** Joins: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net)
[23:35:22] <DeHackEd> oh that'll take care of it no problem
[23:35:38] <DeHackEd> I have weaker machines doing more work. :)
[23:36:00] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (Remote host closed the connection)
[23:36:11] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[23:38:22] *** Quits: Volgaar (~volgaar@104.66.13.93.rev.sfr.net) (Quit: WeeChat 3.2.1)
[23:39:31] *** Quits: filaris (~filaris@46.159.237.220) (Quit: Connection closed)
[23:39:31] <TheSHAD0W> Stupid question, what's the specs of one of those machines?
[23:40:03] <DeHackEd> E5-2698 v4, two on a motherboard
[23:40:40] <TheSHAD0W> Not sure I'd call that weaker.
[23:40:56] <TheSHAD0W> 64 threads vs 48, even if it's at a lower clock.
[23:41:25] <DeHackEd> oh, I'm looking at a per-CPU instance. I realize threadripper is single-socket. my jobs are NUMA aware because... well, performance.
[23:41:29] <TheSHAD0W> ?Ah.
[23:41:41] <DeHackEd> also it's 40 threads per CPU
[23:41:58] <TheSHAD0W> Not 32?
[23:42:10] * TheSHAD0W looked it up, 16 core, 32 thread
[23:42:18] <DeHackEd> v4 ?
[23:42:22] <TheSHAD0W> Oh, no.
[23:42:40] <TheSHAD0W> I see.  I was looking at v3.
[23:43:09] <TheSHAD0W> Wonder why Gewgol put v3 above v4.
[23:43:27] <DeHackEd> intel server CPUs lag pretty far behind consumer. the architecture is equivalent to a 5000 series core i7
[23:43:50] <DeHackEd> which is why I give threadripper a lot of credit here
[23:43:59] <TheSHAD0W> Aha.
[23:44:11] <TheSHAD0W> Well I'd prefer to go smaller if possible.
[23:45:05] *** Joins: SpeakerToMeat (~Speaker@user/speakertomeat)
[23:46:10] <BtbN> Hm? Didn't Intels Server CPUs hit 10nm quite a bit ahead of Desktop?
[23:46:20] <BtbN> Ice Lake or what it's called
[23:46:54] <TheSHAD0W> This v4 appears to be Broadwell.
[23:46:56] <DeHackEd> umm.. I'm not sure. but e5-2600 v4 is based on broadwell which looks like 5000 series desktop CPUs.
[23:47:37] <BtbN> that's just quite old of a CPU
[23:47:46] <TheSHAD0W> Anyhow, we'll play.  Thank you.
[23:48:08] <TheSHAD0W> This is a lot of effort to pipe some security camera output over the network.  :-P
[23:48:17] <BtbN> https://ark.intel.com/content/www/us/en/ark/products/212287/intel-xeon-platinum-8380-processor-60m-cache-2-30-ghz.html that's the current top end server chip
[23:50:17] <TheSHAD0W> Oh - and it might be as low as 4K15, so...
[23:50:50] <BtbN> I'd rather grab a 3.6GHz 32 core though
[23:51:07] * TheSHAD0W nods
[23:51:21] <BtbN> Or a Zen3 Epyc :D
[23:51:34] <TheSHAD0W> It's just that I have the 2970s.  Got them on sale.  Got some cheap mobos too.
[23:51:48] <BtbN> Really the only time I'd buy Intel right now would be if the AVX-512 really made a difference
[23:53:00] <AMM> They deprecated 512, didn't they?
[23:53:20] *** Joins: gawd (~gawd@5.29.48.222)
[23:53:28] <BtbN> what?
[23:53:38] <BtbN> Why would they deprecate their major selling argument
[23:56:08] <AMM> https://www.anandtech.com/show/16881/a-deep-dive-into-intels-alder-lake-microarchitectures/5
[23:56:24] <AMM> I haven't read deeply into this but some words I found after searching
[23:56:40] <AMM> (heard people talk about it when the news broke)
[23:56:50] <furq> is avx512 really a major selling point
[23:56:53] <furq> let alone the major selling point
[23:57:11] <AMM> https://twitter.com/InstLatX64/status/1428360125832581120
[23:57:38] <furq> that tweet is just the second paragraph of the article you linked
[23:57:44] <BtbN> furq, yes
[23:57:51] <BtbN> it's the only thing differentiating them from AMD
[23:58:03] <furq> sure but how many people care about it
[23:58:18] <BtbN> I know plenty of people, specially in HPC, that bought otherwise slower Intel Xeons, just because AVX-512 made such a major difference in performance
[23:58:30] <furq> is hpc a big segment of the market
[23:58:48] <furq> also that article says they're keeping it for server cpus
[23:58:49] <BtbN> The HPC guys are the oney that go any buy 2000 CPUs or more in one go
[23:58:52] <BtbN> so I'd say, yeah
[23:58:58] <BtbN> *ones
[23:59:12] <furq> they're not doing that very often though
[23:59:24] <BtbN> That's just how Server CPUs go
[23:59:52] <BtbN> And I can assure you Intel Marketing will do their best to highlight the benefits of it for every possible usecase
