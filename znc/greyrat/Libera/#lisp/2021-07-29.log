[00:00:03] *** Joins: srhm (~ascii@user/srhm)
[00:01:05] *** Quits: madage (~madage@user/madage) (Remote host closed the connection)
[00:01:19] *** Joins: madage (~madage@user/madage)
[00:06:21] *** Joins: Avichi (~Avichi@i186060.upc-i.chello.nl)
[00:08:51] *** Joins: anticrisis (~anticrisi@user/anticrisis)
[00:14:18] *** Joins: asarch (~asarch@2806:10ae:7:ea36:8b01:efac:f019:c887)
[00:16:15] *** Quits: sander (~sander@user/sander) (Ping timeout: 265 seconds)
[00:17:34] *** Quits: cmsimon (cmsimon@gateway/vpn/protonvpn/cmsimon) (Ping timeout: 256 seconds)
[00:18:22] *** Joins: sander (~sander@user/sander)
[00:19:51] *** Quits: Guest9 (~Guest9@43.241.144.38) (Quit: Connection closed)
[00:20:37] *** Quits: Avichi (~Avichi@i186060.upc-i.chello.nl) (Ping timeout: 246 seconds)
[00:26:02] *** Joins: mtreis (~mtreis@ip68-9-89-162.ri.ri.cox.net)
[00:26:18] *** Joins: agentofuser (~agentofus@191.184.206.193)
[00:26:31] *** Quits: hhdave (~hhdave@ip212.ip-193-70-71.eu) (Ping timeout: 250 seconds)
[00:33:53] *** Quits: silasfox (~sbv@2001-4dd6-abca-0-de39-b264-6870-a7ee.ipv6dyn.netcologne.de) (Ping timeout: 250 seconds)
[00:36:09] *** Quits: pranavats (3fba1d1b34@jabberfr.org) (Ping timeout: 252 seconds)
[00:37:32] <makomo> mfiano: what happened to your common-lisp-sly layer for spacemacs? is it still available somewhere, and what's the best way of installing sly for spacemacs?
[00:38:05] *** Joins: cmsimon (cmsimon@gateway/vpn/protonvpn/cmsimon)
[00:39:26] *** Joins: dsk (~dsk@user/dsk)
[00:42:44] *** Joins: casaca (~casaca@user/casaca)
[00:42:50] *** Quits: cmsimon (cmsimon@gateway/vpn/protonvpn/cmsimon) (Ping timeout: 265 seconds)
[00:46:04] *** Joins: silasfox (~sbv@2001-4dd6-abca-0-de39-b264-6870-a7ee.ipv6dyn.netcologne.de)
[00:51:46] *** Quits: asarch (~asarch@2806:10ae:7:ea36:8b01:efac:f019:c887) (Quit: Leaving)
[00:53:04] *** Quits: agentofuser (~agentofus@191.184.206.193) (Read error: Connection reset by peer)
[00:59:31] <mfiano> It's been broken and unmaintained for a few years now, due to Spacemacs introducing too many breaking changes for me to continue using it. I would recommend Doom Emacs where Sly is built-in
[01:01:27] <wasamasa> > One of the greatest hacking programming languages, LISP was the go-to solution for crafting innovative solutions to software problems among old-school hackers. Although the language has lost most of its appeal due to its somewhat complicated programming style and the emergence of verbose languages like Python and Ruby, those who know LISP are the most respected in the hacker community.
[01:01:27] <wasamasa> > It is the best programming language for hacking into complex networks and will also earn you notoriety among fellow hackers.
[01:01:48] *** Joins: cmsimon (cmsimon@gateway/vpn/protonvpn/cmsimon)
[01:01:57] <wasamasa> not the kind of lisp endorsement I expected, most likely written by a marketing drone
[01:02:19] <wasamasa> claims that macros help with writing exploits
[01:02:57] <wasamasa> > The scheme offers delayed evaluation, meaning you can develop asynchronous software with it pretty easily.
[01:05:45] <wasamasa> source: https://www.ubuntupit.com/best-programming-languages-for-hacking/
[01:09:51] *** Joins: giammi_ (~giammi@62-167-236-20.static.adslpremium.ch)
[01:15:07] *** Quits: lad (~lad@user/lad) (Ping timeout: 245 seconds)
[01:15:25] *** Quits: letto (~letto@188.27.118.171) (Quit: Konversation terminated!)
[01:17:30] *** Joins: letto (~letto@188.27.118.171)
[01:33:14] *** Quits: giammi_ (~giammi@62-167-236-20.static.adslpremium.ch) (Ping timeout: 252 seconds)
[01:33:58] <mdhughes> And weirdly keeps using "the Scheme" throughout.
[01:34:18] <mdhughes> "The scheme emphasizes functional programming and recursive algorithms, making it a suitable choice for forging high-tech hacking programs. "
[01:36:19] <mdhughes> What I always think of: https://youtu.be/ylwMWpbv5Fk
[01:36:20] *** Quits: emacsomancer (~emacsoman@136.60.128.68) (Ping timeout: 256 seconds)
[01:36:34] <mdhughes> timestamp: https://youtu.be/ylwMWpbv5Fk?t=40
[01:39:44] <pjb> :-)
[01:41:09] *** Joins: v0|d (~user@ns1.core.gen.tr)
[01:41:25] <makomo> mfiano: ah i see. guess i'll just install it manually :D
[01:42:29] *** jackhill is now known as KM4MBG
[01:51:24] *** Joins: derelict (~derelict@user/derelict)
[01:53:37] *** Quits: cmsimon (cmsimon@gateway/vpn/protonvpn/cmsimon) (Ping timeout: 250 seconds)
[01:55:05] *** Quits: meraz_1 (~meraz_1@190.92.33.253) (Quit: meraz_1)
[01:57:40] <wasamasa> a man, a plan, a scheme
[01:57:49] <wasamasa> not the joker
[01:59:08] <dash[m]> ... emehcsanalpanama!
[02:01:22] <mdhughes> Scheme backwards is almost emacs.
[02:03:02] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 245 seconds)
[02:08:53] *** Joins: cmsimon (cmsimon@gateway/vpn/protonvpn/cmsimon)
[02:13:04] <aeth> emacs backwards is almost scam
[02:18:48] *** Joins: lad (~lad@user/lad)
[02:19:51] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[02:20:19] *** Joins: emacsomancer (~emacsoman@c-98-202-136-109.hsd1.ut.comcast.net)
[02:20:21] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[02:20:44] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[02:25:07] *** Quits: casaca (~casaca@user/casaca) (Remote host closed the connection)
[02:27:15] *** Parts: cmsimon (cmsimon@gateway/vpn/protonvpn/cmsimon) ()
[02:35:35] *** Joins: paravida_ (~myChateau@71.215.86.34)
[02:37:06] *** Joins: casaca (~casaca@user/casaca)
[02:37:26] *** Quits: ukari (~ukari@user/ukari) (Remote host closed the connection)
[02:37:32] *** Quits: paravida (~myChateau@user/paravida) (Ping timeout: 256 seconds)
[02:38:33] *** Joins: ukari (~ukari@user/ukari)
[02:43:27] *** Quits: casaca (~casaca@user/casaca) (Remote host closed the connection)
[02:51:08] *** Quits: paravida_ (~myChateau@71.215.86.34) (Quit: Leaving)
[03:06:02] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:60a6:d0c5:4d01:36c6) (Remote host closed the connection)
[03:08:58] *** Joins: xiews (~wxie@101.93.23.227)
[03:09:49] *** Joins: zacts (~zacts@user/zacts)
[03:13:09] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Ping timeout: 265 seconds)
[03:14:02] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[03:16:18] *** Quits: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1) (Ping timeout: 240 seconds)
[03:27:04] *** Quits: frgo (~frgo@p200300deef181d008872ccea77bb1081.dip0.t-ipconnect.de) (Remote host closed the connection)
[03:27:31] *** Joins: frgo (~frgo@p200300deef181d0048b2436ea3a4b169.dip0.t-ipconnect.de)
[03:34:31] *** Quits: zacts (~zacts@user/zacts) (Ping timeout: 246 seconds)
[03:38:57] *** Quits: dhil (~dhil@195.213.192.47) (Ping timeout: 268 seconds)
[03:40:06] *** Joins: emacsoma1 (~emacsoman@136.60.128.68)
[03:42:12] *** Quits: emacsomancer (~emacsoman@c-98-202-136-109.hsd1.ut.comcast.net) (Ping timeout: 276 seconds)
[03:46:45] *** Quits: taiju (~taiju@240b:253:ec40:2400:4582:f12e:efff:b6a0) (Ping timeout: 276 seconds)
[03:47:25] *** Joins: taiju (~taiju@M014013236064.v4.enabler.ne.jp)
[03:48:45] *** Joins: renzhi (~xp@142.184.90.63)
[03:49:19] *** Joins: pegaso (~reis-r@131.72.121.113)
[03:49:46] *** Quits: dsk (~dsk@user/dsk) (Ping timeout: 240 seconds)
[03:53:38] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-10-70-54-112-49.dsl.bell.ca)
[03:59:22] *** Joins: zacts (~zacts@user/zacts)
[04:01:04] *** Quits: zacts (~zacts@user/zacts) (Client Quit)
[04:01:26] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[04:05:00] *** Quits: renzhi (~xp@142.184.90.63) (Ping timeout: 258 seconds)
[04:13:50] <Josh_2> The append method combination is very nice for applying CSS to webpages
[04:22:57] *** Joins: renzhi (~xp@142.184.90.63)
[04:27:18] <Josh_2> I think this is the first time I have used anything other than the default 
[04:51:43] *** Quits: xiews (~wxie@101.93.23.227) (Ping timeout: 268 seconds)
[04:52:15] *** Joins: xiews (~wxie@2409:891f:1826:18e:be3:8a5b:e636:aa90)
[05:03:38] *** Quits: wxie (~Thunderbi@222.64.216.101) (Remote host closed the connection)
[05:04:01] *** Joins: wxie (~Thunderbi@222.64.216.101)
[05:05:32] *** Quits: random-nick (~random-ni@87.116.182.181) (Ping timeout: 252 seconds)
[05:06:32] *** Joins: dmiles (dmiles@c-98-232-203-68.hsd1.wa.comcast.net)
[05:06:32] *** dmiles is now known as dmiles_afk
[05:08:49] <jcowan> TinyScheme actually is used for writing malware
[05:09:24] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[05:11:13] *** Quits: kopiyka (~user@2001:983:fe8b:1:b26e:bfff:fe2b:503f) (Remote host closed the connection)
[05:11:35] *** Joins: kopiyka (~user@2001:983:fe8b:1:b26e:bfff:fe2b:503f)
[05:16:46] *** Quits: renzhi (~xp@142.184.90.63) (Ping timeout: 272 seconds)
[05:18:14] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 268 seconds)
[05:21:52] *** Quits: xiews (~wxie@2409:891f:1826:18e:be3:8a5b:e636:aa90) (Read error: Connection reset by peer)
[05:22:26] *** Quits: peterhil (~peterhil@mobile-access-5d6aaf-196.dhcp.inet.fi) (Ping timeout: 258 seconds)
[05:22:53] *** Joins: xiews (~wxie@2409:891f:1826:18e:be3:8a5b:e636:aa90)
[05:24:23] *** Joins: cjb (~cjb@user/cjb)
[05:24:52] *** Joins: mewfree[m] (~mewfreema@2001:470:69fc:105::c904)
[05:29:45] <moon-child> huh, I bet it's easier to write malware in interpreted languages
[05:29:48] <moon-child> harder for antivirus to catch
[05:31:25] <edgar-rft> master quiz question: tell a computer language that has never being used for writing malware
[05:31:51] <aeth> moon-child: easier to decompile, though
[05:32:24] <moon-child> not appreciably, if you precompile to bytecode
[05:32:32] <moon-child> might actually be harder in that case; fewer RE tools than for native
[05:33:33] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[05:34:40] <edgar-rft> there might exist computer languages that are malware by design :-)
[05:35:11] *** Quits: yitzi (~yitzi@173-27-106-188.client.mchsi.com) (Quit: Leaving)
[05:38:23] <dash[m]> let's theorize a category of software called "goodware" that always does what the user wants
[05:39:23] <aeth> a lisp would be really hard to decompile because you might get the source, but you don't get the macros that generated that source
[05:39:33] <aeth> which can be arbitrarily complex
[05:40:03] <dash[m]> that's also true of javascript though
[05:40:19] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-10-70-54-112-49.dsl.bell.ca) (Remote host closed the connection)
[05:41:29] <edgar-rft> javascriupt is even harder to decompile since left-pad doesn't exist anymore
[05:47:46] *** Quits: lad (~lad@user/lad) (Ping timeout: 240 seconds)
[05:58:16] *** Joins: dsk (~dsk@user/dsk)
[06:03:23] *** Joins: mister_m (~user@c-73-110-154-209.hsd1.il.comcast.net)
[06:06:24] *** Quits: mister_m (~user@c-73-110-154-209.hsd1.il.comcast.net) (Remote host closed the connection)
[06:06:34] <edgar-rft> let's use HolyC to write sacred programs
[06:06:50] *** Quits: Sheilong (uid293653@id-293653.charlton.irccloud.com) ()
[06:07:44] <jcowan> moon-child: It is indeed easier and quicker, which is important in the mal-adware business.
[06:19:54] *** Quits: xiews (~wxie@2409:891f:1826:18e:be3:8a5b:e636:aa90) (Ping timeout: 240 seconds)
[06:20:26] *** Joins: xiews (~wxie@222.64.216.101)
[06:43:20] *** Quits: pegaso (~reis-r@131.72.121.113) (Quit: Leaving)
[06:53:55] *** Quits: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net) (Ping timeout: 250 seconds)
[07:08:41] *** Joins: prxq_ (~quassel@x4db512e7.dyn.telefonica.de)
[07:12:53] *** Quits: prxq (~quassel@x4db50dbf.dyn.telefonica.de) (Ping timeout: 265 seconds)
[07:18:42] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 240 seconds)
[07:29:51] *** Joins: ytc (~ytc@user/ytc)
[07:30:57] *** Quits: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (Ping timeout: 245 seconds)
[07:32:08] *** Joins: oxum (~oxum@106.203.221.241)
[07:33:30] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 240 seconds)
[07:34:05] *** Quits: fmlatghor (~lcoogan@2601:5cd:8100:2890::1) (Remote host closed the connection)
[07:35:05] *** Joins: derelict (~derelict@user/derelict)
[07:36:44] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 256 seconds)
[07:38:40] *** Quits: oxum (~oxum@106.203.221.241) (Remote host closed the connection)
[07:40:44] *** Joins: oxum (~oxum@106.203.221.241)
[07:51:04] *** Quits: oxum (~oxum@106.203.221.241) (Remote host closed the connection)
[07:51:46] *** Quits: xiews (~wxie@222.64.216.101) (Ping timeout: 240 seconds)
[07:51:46] *** Quits: lottaquestions (~nick@2607:fa49:5040:a300:d5df:d412:bed6:9ef6) (Read error: Connection reset by peer)
[07:52:01] *** Joins: lottaquestions (~nick@2607:fa49:5040:a300:d5df:d412:bed6:9ef6)
[07:53:39] *** Joins: cmsimon (cmsimon@gateway/vpn/protonvpn/cmsimon)
[07:53:58] *** Joins: xiews (~wxie@222.64.216.101)
[07:55:29] *** Joins: oxum (~oxum@106.203.221.241)
[07:56:53] *** Quits: oxum (~oxum@106.203.221.241) (Remote host closed the connection)
[07:57:05] *** Joins: oxum (~oxum@106.203.221.241)
[07:57:24] *** Quits: Fare (~fare@2601:184:4a7f:995c:8cb5:3c64:8b2b:5a1) (Remote host closed the connection)
[08:00:26] *** Quits: oxum (~oxum@106.203.221.241) (Remote host closed the connection)
[08:05:11] *** Joins: Fare (~fare@2601:184:4a7f:995c:8cb5:3c64:8b2b:5a1)
[08:10:24] *** Quits: xiews (~wxie@222.64.216.101) (Ping timeout: 265 seconds)
[08:12:06] <Josh_2> edgar-rft: the only C worth knowing
[08:12:12] *** Quits: Josh_2 (~user@37.25.47.130) (Remote host closed the connection)
[08:13:00] *** Joins: xiews (~wxie@222.64.216.101)
[08:16:58] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 256 seconds)
[08:18:45] *** Parts: cmsimon (cmsimon@gateway/vpn/protonvpn/cmsimon) ()
[08:32:32] *** Quits: derelict (~derelict@user/derelict) (Quit: WeeChat 3.2)
[08:33:51] *** Joins: oxum (~oxum@106.203.221.241)
[08:38:47] *** Quits: cjb (~cjb@user/cjb) (Ping timeout: 256 seconds)
[08:40:36] *** Joins: meraz_1 (~meraz_1@190.92.33.253)
[08:42:19] *** Joins: notzmv (~zmv@user/notzmv)
[08:46:32] *** Joins: cjb (~cjb@user/cjb)
[08:48:10] *** Quits: xiews (~wxie@222.64.216.101) (Ping timeout: 240 seconds)
[09:00:01] *** Quits: Fare (~fare@2601:184:4a7f:995c:8cb5:3c64:8b2b:5a1) (Remote host closed the connection)
[09:02:19] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[09:06:24] *** Quits: ytc (~ytc@user/ytc) (Quit: ERC (IRC client for Emacs 28.0.50))
[09:10:02] *** Quits: oxum (~oxum@106.203.221.241) (Remote host closed the connection)
[09:11:21] *** Joins: oxum (~oxum@106.203.221.241)
[09:11:50] *** Quits: cjb (~cjb@user/cjb) (Quit: rcirc on GNU Emacs 28.0.50)
[09:14:47] *** Joins: cjb (~cjb@user/cjb)
[09:15:32] *** KM4MBG is now known as jackhill
[09:18:04] *** Quits: trufas (~trufas@177.240.218.218) (Ping timeout: 265 seconds)
[09:18:29] *** Joins: trufas (~trufas@177.240.218.218)
[09:30:37] *** Quits: cjb (~cjb@user/cjb) (Quit: rcirc on GNU Emacs 28.0.50)
[09:34:04] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[09:39:35] *** Joins: rain3 (~rain3___@2a02:2f09:d30b:1300:a270:4060:876f:9f40)
[09:39:59] *** Joins: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1)
[09:57:10] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[09:57:44] *** Joins: thomasb06 (~thomasb06@leat141.unice.fr)
[09:57:44] *** Quits: rain3 (~rain3___@2a02:2f09:d30b:1300:a270:4060:876f:9f40) (Read error: Connection reset by peer)
[09:57:55] *** Joins: rain3 (~rain3___@2a02:2f09:d30b:1300:a270:4060:876f:9f40)
[09:59:44] <xaltsc> wasamasa: which is the reason why we us l 
[10:07:20] *** Joins: cjb (~cjb@user/cjb)
[10:12:21] *** Quits: oxum (~oxum@106.203.221.241) (Remote host closed the connection)
[10:13:43] *** Joins: dhil (~dhil@195.213.192.47)
[10:15:03] *** Joins: oxum (~oxum@106.203.221.241)
[10:17:03] *** Quits: oxum (~oxum@106.203.221.241) (Remote host closed the connection)
[10:23:18] *** Quits: silasfox (~sbv@2001-4dd6-abca-0-de39-b264-6870-a7ee.ipv6dyn.netcologne.de) (Ping timeout: 272 seconds)
[10:23:36] *** Joins: silasfox (~sbv@xdsl-87-78-183-74.nc.de)
[10:25:57] *** Joins: Qwnavery (~Qwnavery@61-68-186-232.tpgi.com.au)
[10:32:55] *** Joins: oxum (~oxum@106.203.221.241)
[10:38:48] *** Joins: giammi_ (~giammi@62-167-236-20.static.adslpremium.ch)
[10:39:29] *** Quits: wxie (~Thunderbi@222.64.216.101) (Remote host closed the connection)
[10:39:58] *** Joins: giammi (~giammi@62-167-236-20.static.adslpremium.ch)
[10:41:40] *** Quits: meraz_1 (~meraz_1@190.92.33.253) (Remote host closed the connection)
[10:42:23] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[10:44:21] *** Joins: hendursaga (~weechat@user/hendursaga)
[10:46:47] *** Quits: giammi (~giammi@62-167-236-20.static.adslpremium.ch) (Ping timeout: 245 seconds)
[10:49:58] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[10:50:07] *** Quits: giammi_ (~giammi@62-167-236-20.static.adslpremium.ch) (Ping timeout: 245 seconds)
[10:50:34] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 258 seconds)
[10:51:12] *** Lord_of_Life_ is now known as Lord_of_Life
[10:53:56] *** Quits: oxum (~oxum@106.203.221.241) (Remote host closed the connection)
[10:56:11] *** Joins: wxie (~Thunderbi@222.64.216.101)
[10:59:52] *** Joins: oxum (~oxum@106.203.221.241)
[11:03:01] <pjb> moon-child: not really. run-time antiviruses just look at the accesses (they trap some syscall, etc). They don't care how the program does it, just what it does.  static antiviruses would have it just as easy analysing the source than the binary.  The only thing is that perhaps they don't bother analysing the sources, notably of "scripting" languages that need to be executed to determine 100% of the semantic.
[11:04:48] *** Quits: oxum (~oxum@106.203.221.241) (Ping timeout: 268 seconds)
[11:05:40] *** Joins: oxum (~oxum@106.203.221.241)
[11:05:50] <wasamasa> moon-child: I mean, any custom malware goes undetected at first
[11:06:03] <wasamasa> moon-child: needs a certain critical mass to get the attention of malware analysts
[11:13:27] *** Quits: slyrus_ (~slyrus@135.180.166.51) (Quit: Leaving)
[11:18:19] *** Joins: Avichi (~Avichi@i186060.upc-i.chello.nl)
[11:28:26] *** Quits: oxum (~oxum@106.203.221.241) (Remote host closed the connection)
[11:30:06] *** Joins: oxum (~oxum@106.203.221.241)
[11:32:07] *** Joins: selwyn (~selwyn@user/selwyn)
[11:33:06] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[11:33:41] *** Quits: oxum (~oxum@106.203.221.241) (Remote host closed the connection)
[11:46:08] *** Joins: oxum (~oxum@106.203.221.241)
[11:46:26] *** Joins: cmsimon (cmsimon@gateway/vpn/protonvpn/cmsimon)
[11:48:42] *** Quits: oxum (~oxum@106.203.221.241) (Remote host closed the connection)
[11:51:17] *** Quits: cmsimon (cmsimon@gateway/vpn/protonvpn/cmsimon) (Ping timeout: 265 seconds)
[11:52:33] *** Joins: oxum (~oxum@106.203.221.241)
[11:52:55] *** Quits: Avichi (~Avichi@i186060.upc-i.chello.nl) (Ping timeout: 246 seconds)
[11:56:50] *** Quits: dsk (~dsk@user/dsk) (Ping timeout: 256 seconds)
[11:59:59] *** Joins: peterhil (~peterhil@mobile-access-5d6aaf-196.dhcp.inet.fi)
[12:01:22] *** Quits: oxum (~oxum@106.203.221.241) (Remote host closed the connection)
[12:29:46] *** Joins: heisig (~heisig@p57942813.dip0.t-ipconnect.de)
[12:30:49] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[12:33:52] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 245 seconds)
[12:35:09] *** Joins: oxum (~oxum@106.203.221.241)
[12:35:24] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:38:38] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:40:06] *** Quits: oxum (~oxum@106.203.221.241) (Ping timeout: 265 seconds)
[12:40:38] *** Joins: kayprish (~kayprish@cable-188-2-229-172.dynamic.sbb.rs)
[12:41:45] *** Quits: Qwnavery (~Qwnavery@61-68-186-232.tpgi.com.au) (Quit: WeeChat 3.2)
[12:53:37] *** Joins: giammi (~giammi@gw6.ff3l.net)
[13:00:07] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Ping timeout: 268 seconds)
[13:00:23] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[13:06:51] *** Joins: giammi_ (~giammi@gw6.ff3l.net)
[13:08:45] *** Quits: giammi (~giammi@gw6.ff3l.net) (Ping timeout: 250 seconds)
[13:13:46] *** Quits: anticrisis (~anticrisi@user/anticrisis) (Read error: Connection reset by peer)
[13:16:41] *** Quits: cjb (~cjb@user/cjb) (Quit: rcirc on GNU Emacs 28.0.50)
[13:18:50] *** Joins: oxum (~oxum@106.203.221.241)
[13:23:48] *** Quits: oxum (~oxum@106.203.221.241) (Ping timeout: 272 seconds)
[13:27:54] *** Joins: Qwnavery (~Qwnavery@61-68-186-232.tpgi.com.au)
[13:27:57] <Qwnavery> join #commonlisp
[13:29:26] *** Quits: Qwnavery (~Qwnavery@61-68-186-232.tpgi.com.au) (Quit: WeeChat 3.2)
[13:30:05] *** Joins: Qwnavery (~Qwnavery@61-68-186-232.tpgi.com.au)
[13:36:04] *** Joins: Qwnavery_ (~Qwnavery@61-68-186-232.tpgi.com.au)
[13:36:42] *** Quits: Qwnavery_ (~Qwnavery@61-68-186-232.tpgi.com.au) (Client Quit)
[13:37:19] *** Quits: Qwnavery (~Qwnavery@61-68-186-232.tpgi.com.au) (Ping timeout: 258 seconds)
[13:58:51] *** Joins: makomo (~makomo@user/makomo)
[14:11:34] *** Quits: dmiles_afk (dmiles@c-98-232-203-68.hsd1.wa.comcast.net) (Read error: No route to host)
[14:14:57] *** Quits: peterhil (~peterhil@mobile-access-5d6aaf-196.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:15:19] *** Joins: peterhil (~peterhil@mobile-access-5d6aaf-196.dhcp.inet.fi)
[14:22:21] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Remote host closed the connection)
[14:22:40] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[14:25:42] *** Joins: tfeb (~tfb@88.98.95.237)
[14:27:59] *** Quits: tfeb (~tfb@88.98.95.237) (Client Quit)
[14:33:45] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:a5ab:8555:d9e0:dbd2)
[14:38:20] *** Quits: heisig (~heisig@p57942813.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[14:47:20] *** Quits: wxie (~Thunderbi@222.64.216.101) (Remote host closed the connection)
[14:59:17] *** Quits: giammi_ (~giammi@gw6.ff3l.net) (Ping timeout: 245 seconds)
[15:06:40] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Bridge terminating on SIGTERM)
[15:06:40] *** Quits: Mrtn[m] (~mrtn@2001:470:69fc:105::1f44) (Quit: Bridge terminating on SIGTERM)
[15:06:40] *** Quits: HDurer[m] (~hdurer@2001:470:69fc:105::cc4) (Quit: Bridge terminating on SIGTERM)
[15:06:40] *** Quits: siraben (~siraben@user/siraben) (Quit: Bridge terminating on SIGTERM)
[15:06:40] *** Quits: kadoban (~kadoban@user/kadoban) (Quit: Bridge terminating on SIGTERM)
[15:06:40] *** Quits: loke[m] (~loke@2001:470:69fc:105::237) (Quit: Bridge terminating on SIGTERM)
[15:06:40] *** Quits: Irvise (~irvise@2001:470:69fc:105::84c) (Quit: Bridge terminating on SIGTERM)
[15:06:40] *** Quits: dieggsy (~dieggsy@2001:470:69fc:105::91f) (Quit: Bridge terminating on SIGTERM)
[15:06:41] *** Quits: infra_red[m] (~infraredm@2001:470:69fc:105::849) (Quit: Bridge terminating on SIGTERM)
[15:06:41] *** Quits: anodae[m] (~anodaemat@2001:470:69fc:105::400a) (Quit: Bridge terminating on SIGTERM)
[15:06:42] *** Quits: punnie (~punniemat@2001:470:69fc:105::1193) (Quit: Bridge terminating on SIGTERM)
[15:06:42] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (Quit: Bridge terminating on SIGTERM)
[15:06:42] *** Quits: cammy[m] (~cchatweho@2001:470:69fc:105::b979) (Quit: Bridge terminating on SIGTERM)
[15:06:45] *** Quits: dash[m] (~washortgr@2001:470:69fc:105::8d8) (Quit: Bridge terminating on SIGTERM)
[15:06:46] *** Quits: mewfree[m] (~mewfreema@2001:470:69fc:105::c904) (Quit: Bridge terminating on SIGTERM)
[15:06:50] *** Quits: happy-dude (~happy-dud@2001:470:69fc:105::b4d7) (Quit: Bridge terminating on SIGTERM)
[15:06:51] *** Quits: alexeimatveev[m] (~alexeimat@2001:470:69fc:105::c84c) (Quit: Bridge terminating on SIGTERM)
[15:08:13] *** Quits: kayprish (~kayprish@cable-188-2-229-172.dynamic.sbb.rs) (Remote host closed the connection)
[15:09:06] *** Joins: loke[m] (~loke@2001:470:69fc:105::237)
[15:10:24] *** Joins: dieggsy (~dieggsy@2001:470:69fc:105::91f)
[15:10:24] *** Joins: anodae[m] (~anodaemat@2001:470:69fc:105::400a)
[15:10:24] *** Joins: Irvise (~irvise@2001:470:69fc:105::84c)
[15:10:24] *** Joins: HDurer[m] (~hdurer@2001:470:69fc:105::cc4)
[15:10:24] *** Joins: infra_red[m] (~infraredm@2001:470:69fc:105::849)
[15:10:24] *** Joins: punnie (~punniemat@2001:470:69fc:105::1193)
[15:10:24] *** Joins: dash[m] (~washortgr@2001:470:69fc:105::8d8)
[15:10:24] *** Joins: kadoban (~kadoban@user/kadoban)
[15:10:24] *** Joins: Mrtn[m] (~mrtn@2001:470:69fc:105::1f44)
[15:10:24] *** Joins: mewfree[m] (~mewfreema@2001:470:69fc:105::c904)
[15:10:24] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[15:10:24] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[15:10:24] *** Joins: siraben (~siraben@user/siraben)
[15:10:24] *** Joins: happy-dude (~happy-dud@2001:470:69fc:105::b4d7)
[15:10:36] *** Joins: cammy[m] (~cchatweho@2001:470:69fc:105::b979)
[15:10:37] *** Joins: alexeimatveev[m] (~alexeimat@2001:470:69fc:105::c84c)
[15:15:27] *** Quits: peterhil (~peterhil@mobile-access-5d6aaf-196.dhcp.inet.fi) (Ping timeout: 258 seconds)
[15:19:09] *** Joins: oxum (~oxum@106.203.221.241)
[15:19:33] *** Quits: oxum (~oxum@106.203.221.241) (Remote host closed the connection)
[15:19:45] *** Joins: oxum (~oxum@106.203.221.241)
[15:23:40] *** Quits: oxum (~oxum@106.203.221.241) (Remote host closed the connection)
[15:26:07] *** Quits: frgo (~frgo@p200300deef181d0048b2436ea3a4b169.dip0.t-ipconnect.de) (Remote host closed the connection)
[15:26:35] *** Joins: frgo (~frgo@p200300deef181d0048b2436ea3a4b169.dip0.t-ipconnect.de)
[15:27:19] *** Joins: oxum (~oxum@106.203.221.241)
[15:32:06] *** Quits: oxum (~oxum@106.203.221.241) (Ping timeout: 252 seconds)
[15:41:39] *** Joins: shka (~herr@109.231.62.239)
[15:41:55] *** Joins: oxum (~oxum@106.203.221.241)
[15:44:14] *** Joins: random-nick (~random-ni@87.116.165.220)
[15:44:38] *** Joins: yitzi (~yitzi@173-27-106-188.client.mchsi.com)
[15:45:12] *** Quits: nirnam (~nirnam@1.46.6.121) (Read error: Connection reset by peer)
[15:47:32] *** Joins: treflip (~user@95.79.32.99)
[16:00:12] *** Quits: mtreis (~mtreis@ip68-9-89-162.ri.ri.cox.net) (Ping timeout: 265 seconds)
[16:00:27] *** Joins: mtreis (~mtreis@2607:fb90:f803:ab:d280:181d:df8c:58dd)
[16:01:11] *** Quits: oxum (~oxum@106.203.221.241) (Remote host closed the connection)
[16:03:20] *** Joins: oxum (~oxum@106.203.221.241)
[16:11:34] *** Joins: giammi_ (~giammi@gw6.ff3l.net)
[16:12:44] *** Quits: oxum (~oxum@106.203.221.241) (Remote host closed the connection)
[16:13:24] *** Joins: oxum (~oxum@106.203.221.241)
[16:19:03] *** Quits: oxum (~oxum@106.203.221.241) (Remote host closed the connection)
[16:26:48] *** Joins: yitzi_ (~yitzi@173-27-106-188.client.mchsi.com)
[16:28:16] *** Joins: yoonkn (~user@175.197.208.79)
[16:28:38] *** Joins: nirnam (~nirnam@1.46.6.121)
[16:29:23] *** Quits: yitzi (~yitzi@173-27-106-188.client.mchsi.com) (Ping timeout: 250 seconds)
[16:34:28] *** Joins: homonyms (~evls@183.11.28.158)
[16:37:12] *** Quits: homonyms (~evls@183.11.28.158) (Remote host closed the connection)
[16:44:24] *** Quits: yitzi_ (~yitzi@173-27-106-188.client.mchsi.com) (Remote host closed the connection)
[16:45:15] *** Joins: yitzi (~yitzi@173-27-106-188.client.mchsi.com)
[17:04:59] *** Joins: heisig (~heisig@p57942813.dip0.t-ipconnect.de)
[17:10:30] *** prxq_ is now known as prxq
[17:15:35] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[17:18:46] *** Quits: mtreis (~mtreis@2607:fb90:f803:ab:d280:181d:df8c:58dd) (Ping timeout: 272 seconds)
[17:21:57] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-10-70-54-112-49.dsl.bell.ca)
[17:23:12] *** Quits: frgo (~frgo@p200300deef181d0048b2436ea3a4b169.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[17:36:54] *** Joins: poldy (~dbane@78.18.26.78)
[17:40:15] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 265 seconds)
[17:51:19] *** Joins: Lycurgus (~juan@cpe-45-46-140-49.buffalo.res.rr.com)
[17:53:55] *** Joins: makomo (~makomo@user/makomo)
[18:01:02] <nirnam> doas sbcl load sbcl when using --script?
[18:03:00] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi)
[18:03:43] <nirnam> sbclrc*
[18:04:34] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[18:04:38] <nirnam> I had sbclrc load quicklisp in there, it worked fine wtih --load, but no --script complain about there's no ql package
[18:07:06] <poldy> According to http://www.sbcl.org/manual/index.html#Toplevel-Options , "--script" implies "--no-userinit --no-sysinit", so it isn't loaded.
[18:07:17] *** Joins: mtreis (~mtreis@ip68-9-89-162.ri.ri.cox.net)
[18:08:29] <nirnam> I see, that part about --no-userinit isn't in man page tho, just --disable-ldb --lose-on-corruption --end-runtime-options
[18:09:02] <nirnam> I should issue this
[18:11:00] <poldy> It's confusing to me too, but "--script" is documented in two places, once under "Runtime Options" and once under "Toplevel Options". Different implied options are listed in both places, I presume what is really used is the union of the two sets.
[18:12:44] <nirnam> ah you're right, I didn't even see the other part, I never read document where a flags behavior is descript in two seperate section before
[18:14:19] *** Joins: frgo (~frgo@i59F4B048.versanet.de)
[18:16:17] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[18:16:49] *** Joins: hendursaga (~weechat@user/hendursaga)
[18:18:46] *** Quits: frgo (~frgo@i59F4B048.versanet.de) (Ping timeout: 256 seconds)
[18:20:28] *** Joins: nij- (~jin@2001-48F8-9021-806-0-0-0-EC96-dynamic.midco.net)
[18:21:31] <nij-> In this essay, PG ranted much about CL, and kept saying that the "older lisps" are better. I'm too a noob to understand. But as a CL lover, I'd really like to know its limit. So if someone can tell me something more, I'd be glad. Thank you =) http://paulgraham.com/popular.html
[18:26:18] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[18:28:03] *** Joins: tfeb (tfb@gateway/vpn/protonvpn/tfb)
[18:28:08] <dash[m]> I doubt there's much more to it than 1) common lisp was a committee effort and 2) didn't have the same kind of community behind it as its predecessors
[18:29:40] <wasamasa> going by raw numbers, elisp is the most popular lisp on github
[18:29:46] <wasamasa> but then, there's tons of duplication
[18:29:57] <wasamasa> code search results are pretty much useless for that reason
[18:30:45] <wasamasa> because everyone and their dog just check in every single package they've installed
[18:39:11] <dash[m]> of course, even that's a sign of popularity in itself
[18:39:46] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[18:40:08] <nij-> dash[m]: yeah.. but what's a concrete feature that CL lacks of?
[18:40:26] <dash[m]> not sure, maybe it doesn't spark joy
[18:41:07] <nij-> I
[18:41:27] <nij-> Sorry^  -- I'm curious particularly b/c he'd spent much time on writing books for CL.
[18:41:40] <dash[m]> his bit in "Hackability" might be a good example
[18:41:40] <wasamasa> maybe the rant is more about CL not panning out
[18:41:56] <dash[m]> lack of generic iteration over structs is a concrete example
[18:42:16] <dash[m]> "older lisps let you get at everything, CL limits you to these interfaces"
[18:42:57] <dash[m]> personally I don't think that's better or worse, the more implementation details you expose the harder optimization is
[18:43:18] <mariari> I find CL package system lacking, I tried making module functors out of it, in a very bad attempt
[18:43:22] <mariari> the racket guys have done a better job at it
[18:43:26] <dash[m]> (efforts to optimize the Python language have starkly demonstrated this)
[18:44:13] <nij-> mariari: would you elaborate?
[18:44:34] <nij-> what is a module functor?
[18:44:49] *** Quits: Lycurgus (~juan@cpe-45-46-140-49.buffalo.res.rr.com) (Quit: Exeunt)
[18:44:57] <mariari> a module functor can be viewed as a function from a module to a module. So we could imagine we have a heap module, and it takes another module with some type t, and a comparison operator. If you send in Int into the heap module, you get a max heap
[18:45:05] <mariari> however if you were to flip the comparison function, you'd get a min heap
[18:45:13] <dash[m]> parameterized modules like ML's or "units" in racket
[18:45:20] <mariari> ^
[18:45:53] <mariari> it encourages regular module structure, which is good for big code bases
[18:46:18] <mariari> It's one of the features I miss, as I do sometimes pass modules around in CL as I like the style
[18:50:08] <nij-> mariari: do you mean (if (> x 0) (import max-heap) (import min-heap))?
[18:51:37] <mariari> no, not quite
[18:51:42] <mariari> more like imagine we had an int moulde
[18:52:02] <mariari> (mod int (defun compare #'>))
[18:52:20] <nij-> I dunno what mod means.
[18:52:33] <mariari> (module int (defun compare #'>))
[18:52:47] <mariari> (module max-heap (heap int))
[18:53:26] <dash[m]> anyway, hackability is fun, but lack of hackability is crucial in many contexts
[18:53:41] <mariari> (module min-heap (heap (module min-int (defun compare (x y) (int:compare y x)))))
[18:53:57] <nij-> Is this scheme syntax?
[18:53:57] <mariari> it's a bit compressed here on irc, I had an actual working version of this somewhere
[18:54:13] <mariari> psuedo CL
[18:54:20] <nij-> I read CL and elisp. But not scheme nor racket.
[18:54:25] <nij-> Hmm what is module then?
[18:54:35] <mariari> you can view it as a package in CL parlance
[18:55:49] <mariari> I have a horrible attempt here in CL https://github.com/mariari/bindle it's very bad
[18:55:59] <mariari> but the racket guys did it properly
[18:56:31] <mariari> if it went better I would have made data structure examples
[18:56:44] <mariari> as it's nicer to do it that way than with methods in many cases
[18:57:46] <mariari> (the main issue is that of symbol resolution happening at read time which I found limiting)
[19:00:53] <nij-> Still having a hard time understanding xD
[19:01:03] <nij-> But you can extend CL in any way right? including this
[19:01:15] <nij-> I mean, you have written a partial solution to that.
[19:01:17] <mariari> depends. if you want to integrate it with the rest of the language, not really
[19:01:24] <mariari> my solution is heavily flawed
[19:01:29] <nij-> What's blocking you from doing that?
[19:02:21] <mariari> how packages get resolved in CL. Ideally it'd just integrate where you write a form and it does the right thing. I'm also ignorant of a way to talk about defining forms properly in CL, so I had issues trying to deal with closure captruing
[19:02:29] <mariari> which is why my solution in particular is quite bad
[19:02:32] <dash[m]> you can extend the language however you like, but getting your extended language to cooperate with code anyone else wrote is a different challenge....
[19:03:42] <mariari> CLOS is a much easier addition, as it's own contained system that doesn't have to live with trying to support everything else to fit the new model
[19:04:29] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:a01b:4fd:a402:83e9)
[19:04:29] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:a01b:4fd:a402:83e9) (Changing host)
[19:04:29] *** Joins: skapata (~Skapata@user/skapata)
[19:06:12] <mariari> I should look into how the racket guys did it, they have some advantages in how their macro system works I think and probably having a better thought out module system
[19:06:53] <dash[m]> welllll
[19:06:58] *** Quits: tfeb (tfb@gateway/vpn/protonvpn/tfb) (Quit: died)
[19:07:05] <dash[m]> racket modules and racket units don't directly get along either
[19:07:19] <dash[m]> there's a little bit of a compat layer though
[19:07:19] <mariari> really? That's a shame
[19:07:36] <dash[m]> I just mean that they're two separate systems, though they don't really clash
[19:07:40] <mariari> I never used it, Only ever seen it from a distance, always a CLer at heart
[19:07:41] *** Joins: dlowe (~dlowe@user/dlowe)
[19:10:43] <nij-> i see
[19:10:51] <nij-> So it's about the community?
[19:11:12] <nij-> I could be wrong, but if you are willing to hack the lower-level reader macros, you can change almost anything...
[19:11:33] <nij-> By the way, this should apply to elisp too, right?
[19:11:37] <nij-> wasamasa might know this
[19:11:57] <wasamasa> I still maintain that it's a social problem first and foremost
[19:12:08] <nij-> wasamasa, do you think we can hack elisp reader to solve its lack of namespace/packaging issue ?
[19:12:13] <dlowe> The usual experience is that by the time you are skilled enough to change almost anything, you no longer want to
[19:12:35] <wasamasa> nij-: there's been lengthy discussion about this on emacs-devel, only the CL faction believes it's a good idea
[19:12:57] <nij-> wasamasa: I know. I'm just wondering if it's possible theoretically..
[19:13:15] <dash[m]> of course it's possible
[19:13:22] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[19:13:24] <nij-> I see
[19:13:25] <dash[m]> the question is, how would namespaces make elisp better
[19:13:41] <nij-> Well.. then I don't have to write long names everytime ..
[19:13:52] <dash[m]> emacs has excellent autocompletion
[19:14:36] <nij-> agree
[19:15:28] <nirnam> emacs has excellent everything for anything lisp really, as a newbie it seemed to be THE ONLY thing anybody else is used doing lisp
[19:16:22] *** Joins: selwyn (~selwyn@user/selwyn)
[19:16:37] *** Joins: Josh_2 (~user@37.25.47.130)
[19:16:37] *** Quits: selwyn (~selwyn@user/selwyn) (Remote host closed the connection)
[19:16:58] <dlowe> lots of autocad still out there
[19:17:02] *** Joins: selwyn (~selwyn@user/selwyn)
[19:18:50] *** Joins: Sheilong (uid293653@id-293653.charlton.irccloud.com)
[19:28:36] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 272 seconds)
[19:29:29] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[19:29:53] *** Joins: selwyn (~selwyn@user/selwyn)
[19:30:45] *** Quits: lisp123__ (~lisp123@45.130.83.181) (Remote host closed the connection)
[19:31:08] *** Quits: selwyn (~selwyn@user/selwyn) (Remote host closed the connection)
[19:31:14] *** Quits: dlowe (~dlowe@user/dlowe) (Remote host closed the connection)
[19:32:10] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:a01b:4fd:a402:83e9)
[19:32:10] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:a01b:4fd:a402:83e9) (Changing host)
[19:32:10] *** Joins: skapata (~Skapata@user/skapata)
[19:32:27] *** Joins: lisp123_ (~lisp123@45.130.83.181)
[19:36:42] *** Quits: lisp123_ (~lisp123@45.130.83.181) (Ping timeout: 240 seconds)
[19:37:11] *** Joins: zacts (~zacts@user/zacts)
[19:39:58] *** Vultyre_ is now known as Vultyre
[19:40:26] *** Joins: mister_m (~user@c-73-110-154-209.hsd1.il.comcast.net)
[19:40:38] *** Joins: monkey_ (~user@190.104.116.134)
[19:42:15] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi) (Ping timeout: 258 seconds)
[19:45:00] *** Joins: oxum (~oxum@106.203.221.241)
[19:45:17] *** Joins: dlowe (~dlowe@user/dlowe)
[19:47:50] *** Joins: peterhil (~peterhil@mobile-access-5d6aaf-196.dhcp.inet.fi)
[19:49:32] *** Quits: oxum (~oxum@106.203.221.241) (Ping timeout: 258 seconds)
[19:52:15] *** Quits: dlowe (~dlowe@user/dlowe) (Remote host closed the connection)
[19:56:00] *** Quits: nij- (~jin@2001-48F8-9021-806-0-0-0-EC96-dynamic.midco.net) (Quit: Using Circe, the loveliest of all IRC clients)
[19:56:48] *** Quits: peterhil (~peterhil@mobile-access-5d6aaf-196.dhcp.inet.fi) (Ping timeout: 256 seconds)
[19:58:15] *** Quits: ees (~ees@pool-108-18-30-46.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[19:58:33] *** Joins: ees (~ees@pool-108-18-30-46.washdc.fios.verizon.net)
[19:59:30] *** Quits: mtreis (~mtreis@ip68-9-89-162.ri.ri.cox.net) (Ping timeout: 258 seconds)
[20:04:18] *** Quits: heisig (~heisig@p57942813.dip0.t-ipconnect.de) (Quit: Leaving)
[20:06:53] *** Quits: yoonkn (~user@175.197.208.79) (Read error: Connection reset by peer)
[20:07:27] *** Joins: lisp123_ (~lisp123@45.130.83.181)
[20:08:26] *** Joins: selwyn (~selwyn@user/selwyn)
[20:09:48] *** Joins: JoshYoshi (~user@37.25.47.130)
[20:10:19] *** Quits: JoshYoshi (~user@37.25.47.130) (Remote host closed the connection)
[20:10:39] *** Joins: JoshYoshi (~user@37.25.47.130)
[20:10:39] *** Quits: JoshYoshi (~user@37.25.47.130) (Remote host closed the connection)
[20:11:05] *** Quits: nirnam (~nirnam@1.46.6.121) (Read error: Connection reset by peer)
[20:12:10] *** Joins: tfeb (tfb@gateway/vpn/protonvpn/tfb)
[20:12:44] *** Joins: JoshYoshi (~user@37.25.47.130)
[20:12:59] *** Quits: Josh_2 (~user@37.25.47.130) (Ping timeout: 265 seconds)
[20:13:08] *** Quits: JoshYoshi (~user@37.25.47.130) (Client Quit)
[20:13:28] *** Joins: Josh_2 (~user@37.25.47.130)
[20:23:33] <waleee> and https://www.emacswiki.org/emacs/EmacsAsDaemon
[20:23:58] <waleee> oops wrong buffer
[20:25:57] *** Quits: lisp123_ (~lisp123@45.130.83.181) (Ping timeout: 245 seconds)
[20:30:24] *** Joins: lad (~lad@user/lad)
[20:30:54] *** Quits: mister_m (~user@c-73-110-154-209.hsd1.il.comcast.net) (Remote host closed the connection)
[20:33:04] *** Quits: giammi_ (~giammi@gw6.ff3l.net) (Ping timeout: 256 seconds)
[20:33:44] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[20:35:36] *** Quits: Josh_2 (~user@37.25.47.130) (Quit: ERC (IRC client for Emacs 27.1))
[20:35:55] *** Joins: Josh_2 (~user@37.25.47.130)
[20:42:55] *** Quits: tfeb (tfb@gateway/vpn/protonvpn/tfb) (Quit: died)
[20:43:02] *** Quits: poldy (~dbane@78.18.26.78) (Ping timeout: 245 seconds)
[20:43:56] *** Quits: thomasb06 (~thomasb06@leat141.unice.fr) (Remote host closed the connection)
[20:50:07] *** Joins: giammi (~giammi@178.197.221.99)
[20:57:49] *** Joins: nirnam (~nirnam@1.46.6.121)
[21:03:09] *** Joins: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net)
[21:03:17] *** Joins: mattil (~mattilinn@87-92-17-82.bb.dnainternet.fi)
[21:03:31] *** Quits: monkey_ (~user@190.104.116.134) (Ping timeout: 258 seconds)
[21:07:07] *** Joins: zacts (~zacts@user/zacts)
[21:15:30] *** Quits: giammi (~giammi@178.197.221.99) (Ping timeout: 240 seconds)
[21:19:49] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[21:30:27] *** Joins: oxum (~oxum@106.203.221.241)
[21:32:46] *** Quits: oxum (~oxum@106.203.221.241) (Remote host closed the connection)
[21:33:38] *** Joins: giammi (~giammi@178.197.221.99)
[21:37:26] *** Joins: monkey_ (~user@190.104.116.134)
[21:38:12] *** Joins: oxum (~oxum@106.203.221.241)
[21:43:22] *** Quits: oxum (~oxum@106.203.221.241) (Ping timeout: 265 seconds)
[21:44:49] *** Quits: giammi (~giammi@178.197.221.99) (Ping timeout: 265 seconds)
[21:48:04] *** Joins: lisp123_ (~lisp123@45.130.83.181)
[21:48:22] *** Joins: Guest9 (~Guest9@103.240.170.208)
[21:53:34] *** Joins: oxum (~oxum@106.203.221.241)
[21:57:48] *** Quits: oxum (~oxum@106.203.221.241) (Remote host closed the connection)
[22:00:25] *** Joins: oxum (~oxum@106.203.221.241)
[22:02:26] *** Quits: oxum (~oxum@106.203.221.241) (Remote host closed the connection)
[22:04:57] *** Joins: derelict (~derelict@user/derelict)
[22:06:24] *** Joins: oxum (~oxum@106.203.221.241)
[22:09:06] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 240 seconds)
[22:11:22] *** Quits: zacts (~zacts@user/zacts) (Ping timeout: 246 seconds)
[22:13:12] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:a5ab:8555:d9e0:dbd2) (Remote host closed the connection)
[22:14:30] *** Quits: nirnam (~nirnam@1.46.6.121) (Quit: Lost terminal)
[22:15:03] *** Joins: nirnam (~nirnam@1.46.6.121)
[22:17:03] *** Joins: tfeb (~tfb@88.98.95.237)
[22:19:49] *** Joins: aidenw (~Aiden@156.57.146.89)
[22:23:15] *** Joins: zacts (~zacts@user/zacts)
[22:30:45] *** Joins: selwyn (~selwyn@user/selwyn)
[22:38:00] *** Joins: christophergray (~christoph@190.148.52.48)
[22:38:11] *** Quits: oxum (~oxum@106.203.221.241) (Remote host closed the connection)
[22:43:19] <jcowan> "Another view is that a programming language really isn't a programming language unless it's also the scripting language of something."  Ergo, C and Haskell are not programmimng languages.
[22:47:21] <wasamasa> but PG claims C is the scripting language of unix
[22:47:21] <wasamasa> I love executing C functions in gdb on the fly
[22:47:31] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-10-70-54-112-49.dsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
[22:51:41] <jcowan> IMO "scripting language" is just a term for "programming language I can't get paid enough if I write in it"
[22:52:36] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[22:53:15] *** Joins: oxum (~oxum@106.203.221.241)
[22:57:35] <dash[m]> "scripting language" may be a bit fuzzy but we definitely can distinguish "command language" as an idea, a top-level interface to a system 
[22:57:36] <lisp123_> SICP says "(In fact, most language processors contain, deep within them, a little ``Lisp'' evaluator.) "
[22:57:39] <lisp123_> Is this true?
[22:58:08] *** Quits: oxum (~oxum@106.203.221.241) (Ping timeout: 258 seconds)
[22:58:10] <dash[m]> lisp123_: less true than when it was written
[22:58:33] <tfeb> lisp123_: more true
[22:58:44] <dash[m]> some of lisp's ideas have spread so much that they're not recognized as lisp distinctives anymore, relaly
[22:58:47] <lisp123_> which one is right lol
[22:58:57] <dash[m]>  * some of lisp's ideas have spread so much that they're not recognized as lisp distinctives anymore, really
[22:59:43] <dash[m]> unless you're going to call javascript, perl, python, C#, etc lisps
[23:00:05] <tfeb> It's more true but people have forgotten that what they are doing is 10% of a lisp.
[23:00:19] <lisp123_> dash[m]: but the question is whether the language processor has an embedded lisp
[23:00:22] <tfeb> dash[m]: I think we agree...
[23:00:28] <lisp123_> vs. the paradigms of lisp going to other languages
[23:00:37] <mariari> depends what you count as lisp, if you count some form of eval/apply then ML languages implement this for fast currying
[23:00:49] <mariari> (rather than push/enter way of doing such things which is more forth like)
[23:00:51] <lisp123_> i.e. do people use lisp to bootstrap other languages?
[23:00:56] <dash[m]> lisp123_: it doesn't, it's more like "most language processors share common designs, historically, with lisp implementations"
[23:01:12] <lisp123_> dash[m]: oh okay, thanks for clarifying
[23:02:08] <lisp123_> so they follow similar processes, but not necessarily have an embedded lisp interpretor
[23:02:13] <dash[m]> Rarely. The only example I can think of currently is Julia being built on top of femtolisp
[23:02:39] <dash[m]> oh uh, picolisp
[23:02:41] <mariari> caml/caml-light used to be built upon some minimal lisp, these days they have an s-expression IR at some layer
[23:02:50] <dash[m]> off by 10x
[23:03:33] *** Joins: oxum (~oxum@106.203.221.241)
[23:04:10] *** Parts: mattil (~mattilinn@87-92-17-82.bb.dnainternet.fi) (Leaving)
[23:07:00] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[23:08:32] <aeth> two different "scripting language" meanings
[23:08:53] <aeth> one is "script Unix" (i.e. POSIX shell replacement sort of thing, or at least part of a Unix pipeline... see e.g. Perl)
[23:08:55] *** Quits: oxum (~oxum@106.203.221.241) (Ping timeout: 265 seconds)
[23:08:58] *** Joins: tfb (~tfb@88.98.95.237)
[23:09:02] <aeth> the other is "embed in a [probably C++] application", e.g. JavaScript or lua
[23:09:06] <aeth> both are 'scripting'
[23:10:31] *** Joins: nature (~nature@mail.blazebone.com)
[23:15:31] *** Quits: tfeb (~tfb@88.98.95.237) (Quit: died)
[23:22:36] *** Joins: tyson2 (~user@toroon12-3096782363.sdsl.bell.ca)
[23:23:34] <dash[m]> those aren't that different
[23:25:09] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[23:27:28] *** Joins: giammi_ (~giammi@62-167-236-20.static.adslpremium.ch)
[23:28:25] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 258 seconds)
[23:32:13] *** Quits: aidenw (~Aiden@156.57.146.89) (Remote host closed the connection)
[23:32:30] *** Joins: aidenw (~Aiden@156.57.146.89)
[23:42:51] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Quit: WeeChat 3.2)
[23:43:29] *** Joins: voidengineer (~ultrables@186.11.99.94)
[23:46:41] <jcowan> I had the first in mind
[23:47:26] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[23:51:18] *** Joins: srhm (~ascii@user/srhm)
[23:51:38] *** Quits: treflip (~user@95.79.32.99) (Remote host closed the connection)
[23:52:51] *** Joins: miniluv (~user@192.173.32.241)
[23:53:06] *** Quits: rain3 (~rain3___@2a02:2f09:d30b:1300:a270:4060:876f:9f40) (Ping timeout: 256 seconds)
[23:55:35] *** Joins: giammi (~giammi@62-167-236-20.static.adslpremium.ch)
[23:59:58] *** Joins: miasuji (~miasuji@75-166-103-152.hlrn.qwest.net)
