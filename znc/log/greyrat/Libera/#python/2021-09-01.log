[00:00:04] <rud0lf> hold on
[00:00:04] <mefistofeles> Inge: that's a nice project
[00:00:34] <Inge> mefistofeles: yeah and should be pretty easy to get going - but a Pi v4 would suck that juice sooo fast
[00:00:44] *** Joins: mmalter (~mmalter@88.171.43.194)
[00:00:49] <rud0lf> bjs: that's the error (repeated forever) https://dpaste.com//H6LG3DJV8
[00:01:12] <rud0lf> Inge: https://wiki.seeedstudio.com/ReSpeaker_2_Mics_Pi_HAT_Raspberry/
[00:01:13] *** Quits: regreg (~regreg@2a02:2f09:531a:c700:cc36:efa2:81ec:6cc) (Ping timeout: 252 seconds)
[00:01:24] <Inge> rud0lf: I was considering something simple like this https://www.adafruit.com/product/3367
[00:01:26] <rud0lf> it's easy to set up
[00:01:38] <rud0lf> oh okay
[00:01:51] <rud0lf> i have bought another microphone
[00:01:55] <rud0lf> I2C or something
[00:02:01] <rud0lf> it's tiny and solderable
[00:02:11] <rud0lf> i would send it to you if you lived in poland :)
[00:02:16] <bjs> rud0lf: broken pipe is a very generic error,  probably a queue got destroyed before it was finished or something
[00:02:31] <bjs> rud0lf: as for repeating forever that doesn't sound like something multiprocessing would do,  does your code have a loop in it?
[00:02:40] <rud0lf> yes it has a loop
[00:02:47] <rud0lf> i wonder why on raspberry pi zero but not on my pc
[00:02:58] <rud0lf> i was maybe misled that it was tested with 4 cores minimum
[00:03:01] <bjs> rud0lf: is your PC Windows and/or Mac
[00:03:08] <rud0lf> and said it won't work on raspberry with just 2 cores
[00:03:12] <rud0lf> it's PC AMD
[00:03:16] <rud0lf> with xubuntu
[00:03:35] <rud0lf> hmmm i just thought of it
[00:03:43] <rud0lf> it may spawn a lot of processes
[00:03:46] <rud0lf> like 100s
[00:03:47] *** Joins: Dotz0cat (~Dotz0cat@h168.196.117.75.dynamic.ip.windstream.net)
[00:03:49] <rud0lf> or even more
[00:03:59] <rud0lf> and poor raspberry can't handle it
[00:04:13] <raxor2k> bjs: i hope u can save me: https://bpa.st/UWYA
[00:04:17] <bjs> rud0lf: can you share the program? It sounds more likely you have a bug in your program than the multiprocessing module doesn't work on dual core machines and nobody has noticed
[00:04:27] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[00:04:34] <rud0lf> bjs: it was for python2, i adapted it for python3
[00:04:39] <bjs> rud0lf: that might be why,  perhaps the memory got out of hand and one of the processes got killed (OOM)
[00:04:46] <bjs> rud0lf: you definitely should have logs if that happened.
[00:04:49] <rud0lf> it's quite a big project, i don't want to mess your time analyzing it
[00:04:52] <rud0lf> mess - waste
[00:05:05] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[00:05:06] <rud0lf> bjs: how can i check logs please?
[00:05:45] <bjs> rud0lf: uh, yay for linux systems being totally inconsistent but probably dmesg will have it
[00:06:43] <rud0lf> hmm dmesg shows me boot time
[00:06:46] <bjs> raxor2k: okay i'm still not quite getting what you're trying to do
[00:06:49] *** Joins: jess (~jess@libera/staff/jess)
[00:07:41] <raxor2k> bjs: im simply trying to merge that avg_dict into the exercises_dict
[00:08:11] <bjs> raxor2k: the one created by test?
[00:08:59] <raxor2k> bjs: not necessarily, but yes
[00:09:03] <bjs> raxor2k: okay you say you get a key error,  what line do you get the key error on and why do you get the key error
[00:09:06] <raxor2k> that code inside test yes
[00:10:15] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[00:10:17] *** Joins: smlavine (~smlavine@sourcehut/user/smlavine)
[00:10:41] <raxor2k> bjs: look, there i something wrong here: https://bpa.st/TNWA
[00:11:41] <rud0lf> bjs: hmm shouldn't python "say" there was an error, and then print traceback?
[00:11:51] <rud0lf> it doesn't show any error, just the traceback
[00:12:36] <bjs> rud0lf: well it might show somewhere, but OOM is the OS not Python
[00:12:48] <rud0lf> hm
[00:12:56] *** Quits: colorado (~fluiD@161.97.231.145) (Read error: Connection reset by peer)
[00:13:06] <bjs> if the OS just outright killed a process to save memory then your system might break, but yeah there should be messages
[00:13:23] <bjs> usually a message will go the terminal if it's attached to a terminal but a message will definitely go into a log if that had happened
[00:13:56] <bjs> raxor2k: hmm okay,  I don't really understand why you're trying to merge the avg_dict with every exercises dict, is the avg per excercise dict or what?
[00:14:06] <raxor2k> bjs: now you should understand what im trying to do: https://bpa.st/PBRA
[00:14:37] <pyeveryt_> so i was told if i do a small change in a custom resnet 18 architecture, I should be able to still run it with no problem but I get missing key in state_dict error https://stackoverflow.com/questions/69004513/changing-aa-custom-resnet-18-architecture-subtly-and-still-use-it-in-pre-trained any idea how I can make small changes in my custom resnet 18 architecture without having to train from scratch every time? I am
[00:14:37] <pyeveryt_> using PyTorch library.
[00:14:43] <bjs> raxor2k: well for a start your problem is that there is only 1 self.avg_dict,  maybe you want a list or dict of average dicts
[00:14:56] <bjs> that's why you're struggling so much
[00:15:08] <rud0lf> bjs: maybe it's one of "ulimits"?
[00:15:20] <rud0lf> like 8 * 512 on pipe size
[00:15:48] <raxor2k> bjs: i tried everything, my head is bleeding right now
[00:15:50] <bjs> rud0lf: yes if you go over the ulimit it'll also get killed,  again presumably that'll get logged somewhere in dmesg if it happens.
[00:16:04] <bjs> raxor2k: have you tried making a list of avg_dicts
[00:16:28] <raxor2k> bjs: yes. one sec and i update the bpaste
[00:16:28] <bjs> raxor2k: because at the moment you're going `for ... in ...: self.avg_dict = ...`  and you can see this is just overwriting self.avg_dict each time
[00:16:34] <raxor2k> yes yes
[00:16:35] <raxor2k> one second
[00:17:40] <raxor2k> bjs: line 5 and 24:
[00:17:41] <raxor2k> https://bpa.st/HTRA
[00:18:03] <rud0lf> i cannot stand how slow rpi zero is comparing to modern pc grrr
[00:18:32] <luisqa> its pretty small tho
[00:19:01] <rud0lf> hmmm just noticed mmap() failed: Cannot allocate memory
[00:19:18] <rud0lf> i think i just browse through code, understand the idea, and reimplement it
[00:19:32] <bjs> raxor2k: "didn't help"?  Come on...  what happens...
[00:19:34] <rud0lf> it's just fft with some matching
[00:21:12] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[00:21:32] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[00:22:09] <raxor2k> bjs: look : https://bpa.st/ZY2A
[00:22:15] <raxor2k> they are still not sorted together
[00:22:21] *** Joins: nomic (~nomic@185.217.117.169)
[00:22:31] <InPhase> grym: Yes, L.count('@') would have been much smarter.  I went with the first thing to pop into mind.
[00:22:44] <bjs> raxor2k: well this is just printing out the exercise_points_collection,  which will contain each exercise and the averages
[00:22:58] <bjs> raxor2k: have you tried making a list of the avg_dicts
[00:23:29] *** Joins: hudo (~hudo@62.68.27.70)
[00:23:35] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 244 seconds)
[00:23:46] *** Quits: y1n (~y1n@84-115-64-195.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[00:23:47] <bjs> and then... doing whatever you need with that list, merging it with the others somehow or whatever.  You're trying to skip over so many steps at once here.  Just make a list of all the averages and then a list of all the other things and then do whatever you need to merge them or combine them or build new lists or whatever
[00:24:01] <raxor2k> bjs: you mean like this? https://bpa.st/BRNA
[00:24:10] *** Quits: montybanksnyc (~montybank@pool-71-127-199-18.nwrknj.fios.verizon.net) (Ping timeout: 240 seconds)
[00:24:15] <bjs> raxor2k: sure,  are you just learning classes or something?
[00:24:25] <raxor2k> no ?'
[00:24:47] <bjs> raxor2k: your code is just weird,  with so many random instance attributes
[00:24:58] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[00:25:02] *** Quits: n00b101 (uid448161@id-448161.tooting.irccloud.com) (Quit: Updating details, brb)
[00:25:11] *** Joins: n00b101 (uid448161@id-448161.tooting.irccloud.com)
[00:25:15] <bjs> raxor2k: okay now you have all the averages in avg_points_collection, and all the exercises in exercise_points_collection,  what do you want to do now?
[00:25:26] <raxor2k> bjs: merge them together :)
[00:25:33] <raxor2k> into a collection
[00:25:38] <bjs> raxor2k: what kind of collection?
[00:25:48] <raxor2k> dict
[00:25:52] <raxor2k> preferrably
[00:26:15] <bjs> raxor2k: you want to put all of the averages and all of the exercises merged into a single big dict?
[00:26:27] <raxor2k> like i showed in the previous paste, yes
[00:26:35] <raxor2k> so then later i can do calculations
[00:26:39] <bjs> raxor2k: ... the previous paste had multiple dicts
[00:26:43] *** Quits: FatDarrell (~textual@68.91.156.229) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[00:27:02] *** Quits: n00b101 (uid448161@id-448161.tooting.irccloud.com) (Client Quit)
[00:27:12] *** Joins: n00b101 (uid448161@id-448161.tooting.irccloud.com)
[00:28:31] <bjs> raxor2k: so you have a list of average dicts,  possibly multiple for each exercise_ID and you have a list of exercises (but probably only 1 dict per exercise_ID?).  What do you want to do with all of these dicts.
[00:28:56] <raxor2k> bjs: just forget it
[00:29:01] <bjs> raxor2k: forget what?
[00:29:01] <raxor2k> i will find another solution
[00:29:08] <bjs> raxor2k: why?
[00:29:14] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[00:29:37] <raxor2k> bjs: im just over-complicating things
[00:29:43] <raxor2k> i know there is a much simpler solution
[00:30:09] <bjs> raxor2k: this is your problem,  instead of just doing the simple thing you know how to do (make lists for each of them then make a new list and loop over and all that) you're trying to find a simple "clever" solution
[00:30:58] <raxor2k> and your suggestion is ?
[00:31:10] <bjs> raxor2k: i don't really understand how you ended up with random exercise dicts and what are these average dicts anyway and why do you want to merge them and how come your average dicts have two different values for exercise_ID 1
[00:31:18] <bjs> and 2
[00:31:29] <raxor2k> bjs: its from different tables in the DB
[00:33:04] <bjs> raxor2k: so, you read from one table into one list and from the other table into another list and then write some code to "merge" the two into a shared thing
[00:33:15] <bjs> raxor2k: why is that over-complicating it?  isn't that the simple/obvious way.
[00:33:32] <bjs> Isn't one of the benefits of databases to be able to do this stuff for you? e.g. SQL JOIN
[00:33:39] <raxor2k> bjs: i will figure this out myself, and i will send you over the code once im finished
[00:33:42] <raxor2k> and then you will understand
[00:34:21] <bjs> raxor2k: I recommend making little examples from this, make a blank file and some lists containing the average dicts and a list containing the exercise dicts and then write code to try merge them
[00:34:35] <bjs> so you can kind of forget about the rest of the code and focus just on the thing you're trying to do
[00:34:45] <raxor2k> bjs: yes. thats what im doing now
[00:34:50] <raxor2k> writing the code again from scratch
[00:34:53] <raxor2k> and in a easier way
[00:35:07] *** Parts: smlavine (~smlavine@sourcehut/user/smlavine) ()
[00:35:09] <ens> thanks for all the help so far folks, i think i'm on a home run now
[00:35:24] *** Quits: luisqa (~Guest92@186.151.92.13) (Quit: Client closed)
[00:35:30] <raxor2k> ens: much love <3
[00:35:41] *** Joins: y1n (~y1n@84-115-64-195.wifi.dynamic.surfer.at)
[00:35:47] <bjs> raxor2k: I don't necessarily mean from scratch all of it, I mean do something like https://bpa.st/QW4A and fill in the ...
[00:35:53] <ens> if i want to alter the first and last char of a string i can't seem to do var[0] = "*" and var[-1] = "*"
[00:36:07] <ens> wondering what the correct thing i'm looking for is
[00:36:17] <bjs> ens: correct,  Python strings are immutable.  You have to create a new string with those characters different
[00:36:40] <bjs> ens: like `new_var = "*" + old_var[1:-1] + "*"`
[00:36:48] <raxor2k> bjs: just a simple question, this is not a dict, is it? : {'exercise_ID': 2, 'avg_rep_percent': 3.0}, and if not, can i convert it somehow?
[00:36:58] <ens> oh nice. i see now. thanks bjs
[00:36:59] <bjs> raxor2k: yes it is, why do you think it's not
[00:37:03] <raxor2k> oh sorry
[00:37:06] <raxor2k> again
[00:37:09] <raxor2k> my head is gone
[00:37:35] <bjs> raxor2k: the first list is your `avg_points_collection` list and the other is your `exercise_points_collection` list isn't it?
[00:37:39] <bjs> from your paste.
[00:37:44] <raxor2k> bjs: yes
[00:37:47] <raxor2k> ok i got it know
[00:37:50] <raxor2k> i know what to do
[00:38:36] *** Joins: makyaVeljan (~makyaVelj@user/mikanjuice)
[00:38:37] *** Quits: rakoon (~rakoon@2a02:2149:824f:5900:6306:9e8e:486d:1293) (Ping timeout: 252 seconds)
[00:38:39] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[00:39:03] <bjs> raxor2k: I really recommend taking that latest paste and just adding the code there:  you won't have to worry about databases and tables or anything and can just focus on the Python dict/list/whatever manipulation and creation
[00:39:04] <no_gravity> Good evening! Which web server are you guys using for python web applications in production?
[00:39:37] *** Joins: rakoon (~rakoon@2a02:2149:824f:5900:bf8d:97e3:c4db:3804)
[00:41:27] *** Parts: makyaVeljan (~makyaVelj@user/mikanjuice) ()
[00:41:55] *** Quits: cedric (~cedric@2a01:cb11:867:c200:905f:203:c0a:84b7) (Quit: Konversation terminated!)
[00:44:06] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[00:44:13] <rud0lf> bjs: guess what? it was because of failed porting to python3... it runs fine in python2
[00:44:22] <rud0lf> i forgot it was an option *sigh(
[00:44:32] <rud0lf> i thought newest raspbian won't have p2
[00:45:04] <akk> no_gravity: apache (ducking while everybody else in the channel throws things at me)
[00:45:05] *** Quits: Haxxa (~Haxxa@122.199.45.213) (Quit: Haxxa flies away.)
[00:46:00] <raxor2k> bjs: yes ur right
[00:46:39] <no_gravity> akk: Interesting. I also consider using Apache. How does it work for you?
[00:47:22] *** Joins: Haxxa (~Haxxa@122.199.45.213)
[00:47:25] <akk> no_gravity: Seems to work fine. I should note my sites are fairly easy, no high-volume e-commerce or anything.
[00:47:52] *** Quits: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl) (Ping timeout: 244 seconds)
[00:48:19] <raxor2k> bjs: i just need a simple "if"
[00:48:22] <akk> no_gravity: Sometimes version upgrades make me scramble to find the new way to enable things, but it's been a few years since that happened last.
[00:48:36] <raxor2k> "if exercise_ID" from that list, and if exercise_ID from the other list == merge them
[00:48:54] *** Quits: ATAD (~ATAD@user/atad) (Ping timeout: 244 seconds)
[00:49:06] <no_gravity> akk: I see. I have good experiences with Apache running PHP applications. Have served tens of millions of users over the last years, sometimes up to 250k in a single day, all on a cheap $20/Month box.
[00:49:55] <akk> no_gravity: If you're already using apache (like I was), I don't know of any good reason not to use it for python WSGI apps as well.
[00:50:10] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 252 seconds)
[00:50:13] <no_gravity> akk: Great. I will give it a try.
[00:50:46] <raek> no_gravity: I've been using nginx for TLS termination, reverse-proxying to a gunicorn server running a flask app. (some low-traffic signage stuff for a non-profit orgianization)
[00:51:42] <no_gravity> raek: I see. Isn't it nicer to have the webserver do both (TSL and serving the requests)?
[00:51:45] *** Quits: MaximB (~MaximB@87.68.164.220) (Quit: Client closed)
[00:51:55] *** Joins: ATAD (~ATAD@user/atad)
[00:52:38] *** Quits: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Remote host closed the connection)
[00:55:29] *** Joins: jmft2 (~jmft2@81.149.115.87.dyn.plus.net)
[00:56:34] *** Joins: Naan (~naan@user/naan)
[00:57:55] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:a42a:d885:f714:cef7)
[01:04:16] *** Quits: magla (~gelignite@55d413e5.access.ecotel.net) (Quit: Stay safe!)
[01:05:01] *** Quits: rakoon (~rakoon@2a02:2149:824f:5900:bf8d:97e3:c4db:3804) (Ping timeout: 252 seconds)
[01:05:33] <raxor2k> bjs: are you here
[01:06:03] *** Quits: verified_human (~verified_@user/verified-human/x-8819513) (Quit: WeeChat 2.8)
[01:07:33] <bjs> raxor2k: hi
[01:08:38] <raxor2k> so i still need a way to merge them together: https://bpa.st/UCLQ
[01:08:41] <raxor2k> but still have no clue why
[01:08:44] <raxor2k> how
[01:09:35] <foo> I'm needing to check if an email follows a valid format. I can A) whip together some regex or B) install a package to validate if an email follows the proper format, I imagine A) is preferred for something so simple - eh?
[01:10:19] <grym> emails, it turns out, are not so simple
[01:10:26] <grym> i'd make someone else test that one, and use a library :)
[01:10:28] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[01:10:48] <foo> grym: ha! Fair enough. :)
[01:11:13] *** Joins: ikus060 (~ikus060@96.127.228.230)
[01:11:18] <grym> there is a semi-canonical email-regex-of-doom out there
[01:11:21] <grym> it's not short ;)
[01:11:40] *** Joins: MDP87900 (~SKI8040@177.12.40.77)
[01:12:01] <grym> foo: https://pypi.org/project/py3-validate-email/ looks promising but i haven't used it
[01:12:26] <foo> grym: thanks was just looking at https://github.com/karolyi/py3-validate-email - looks like it's throwing a build error
[01:12:43] <foo> It does appear to be actively maintained, though
[01:12:43] *** Joins: fikran (~fikran@user/fikran)
[01:13:34] <foo> grym: in this specific use case, I can probably even test if "@" exists in the string - really basic check is ok (for this) - since it's either an email or a username (not email). Apparently this API allows for both email and regular names (non-email) for usernames ... meh.
[01:16:22] <bjs> raxor2k: take my paste and start there, start at the end and write out exactly what you want the final output to be
[01:16:47] <MDP87900> i wonder if there's a bitstream example for simply reading a file
[01:17:04] <MDP87900> instead of writing a file and then reading it
[01:18:36] <bjs> MDP87900: bitstream?
[01:18:36] <nedbat> foo: https://nedbatchelder.com/blog/200908/humane_email_validation.html  just use r"^[^@ ]+@[^@ ]+\.[^@ ]+$"
[01:18:36] <MDP87900> yes
[01:18:36] <MDP87900> exactly
[01:18:36] <bjs> MDP87900: no I mean, what do you mean
[01:18:36] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::4433) (Quit: Konversation terminated!)
[01:18:53] <MDP87900> i want an example script in which it reads parts of the file using bitstream as a library
[01:18:55] <kosh> email validation, send email and see if it bounces
[01:19:06] <bjs> MDP87900: is "bitstream" a library of some kind?
[01:19:17] <MDP87900> i mean
[01:19:18] <MDP87900> yeah
[01:19:19] <MDP87900> https://pypi.org/project/bitstream/
[01:19:20] <kosh> which is probably why so many places send you an email to click on a link to validate your account
[01:20:16] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[01:20:26] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[01:20:38] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[01:21:07] <bjs> MDP87900: oh,  okay,  the library seems to have some documentation https://boisgera.github.io/bitstream/
[01:21:10] <foo> nedbat: thank you.
[01:21:21] <MDP87900> bjs: yeah i saw it
[01:21:33] <stwange> Thanks phy1729 (delayed, I know)
[01:21:39] <raxor2k> bjs: i do it tomorrow. Im sorry for taking your time
[01:21:44] <raxor2k> i need a good sleep now
[01:22:03] <foo> kosh: assuming your email comments were related to my thread, I needed an answer before sending an email. I also need basic syntax check, not if an actual email is deliverable.
[01:22:04] *** Quits: the-mask (~the-mask@user/the-mask) (Ping timeout: 252 seconds)
[01:22:10] <bjs> raxor2k: make sure you save the current state as bpaste will forget it
[01:22:17] <MDP87900> bjs: yeah i saw it
[01:22:19] <bjs> my paste that is
[01:22:36] <foo> Odd, if I set a variable in a for loop - it looks like it persists throughout the entire for loop and not only the iteration it exists in. Is this to be expected?
[01:22:49] *** Quits: p-i- (~Ohmu@2403:6200:8870:cca9:980e:ef50:735d:2516) (Read error: Connection reset by peer)
[01:23:11] <bjs> MDP87900: i quickly looked, it doesn't seem to know about files at all it just has this BitStream object
[01:23:23] *** Joins: p-i- (~Ohmu@2403:6200:8870:cca9:c4fe:784:743e:4d3a)
[01:23:25] *** Joins: matsaman (~matsaman@user/matsaman)
[01:23:34] <bjs> foo: yes
[01:23:40] *** Quits: y1n (~y1n@84-115-64-195.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[01:23:42] <raxor2k> bjs: thanks for help anyways <3 appreciate
[01:23:51] <bjs> foo: in general `for` and `if` and things like that do not have their own scope
[01:24:13] <MDP87900> from what i've managed to read from the documentation, it deals with you "creating a stream", adding data to it and then reading it
[01:24:25] <foo> bjs: ahhh, good to know. Thanks
[01:24:32] <bjs> MDP87900: that is what I understand from reading the docs too, yes
[01:24:36] <MDP87900> it doesn't have any examples that deal with you "creating a stream" so you can just read it
[01:24:50] <MDP87900> no i'm not talking about "creating data" first
[01:25:01] <bjs> MDP87900: where would the data come from that you are reading
[01:25:11] <MDP87900> from a file
[01:25:14] <MDP87900> an already-existing file
[01:26:22] <bjs> MDP87900: are you trying to avoid reading the file into memory?
[01:27:01] <MDP87900> uhhh
[01:27:02] <MDP87900> wel
[01:27:04] <MDP87900> yeah
[01:27:18] <MDP87900> i want to read parts of the file, not the whole thing
[01:27:19] <bjs> MDP87900: maybe I should be broader,  what are you trying to do where you want/need this bitstream library
[01:28:05] <MDP87900> a file decompressor
[01:28:30] <bjs> MDP87900: can't you just read the part of the file you want and then pass it to the BitStream object?
[01:28:38] <MDP87900> well
[01:28:42] <MDP87900> i can do that
[01:28:47] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:5e6:167:440a:5f89) (Quit: Textual IRC Client: www.textualapp.com)
[01:29:45] *** Joins: zepolen (~zepolen@2a02:587:2954:f4c5:f494:8595:cec8:5868)
[01:31:33] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[01:33:45] *** Quits: hudo (~hudo@62.68.27.70) (Quit: Leaving)
[01:35:10] *** Joins: hudo (~hudo@62.68.27.70)
[01:35:34] *** Quits: Akuli (~Akuli@82-203-166-202.bb.dnainternet.fi) (Quit: Leaving)
[01:35:52] *** Quits: dld (~davidlowr@2620:6e:6000:2900:3d0a:b99:963f:cf07) (Ping timeout: 245 seconds)
[01:36:25] *** Joins: y1n (~y1n@84-115-64-195.wifi.dynamic.surfer.at)
[01:37:07] *** Quits: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838) (Ping timeout: 245 seconds)
[01:37:10] *** Quits: gitly (~gitly@148.252.133.219) (Ping timeout: 250 seconds)
[01:38:10] *** Quits: zepolen (~zepolen@2a02:587:2954:f4c5:f494:8595:cec8:5868) (Ping timeout: 240 seconds)
[01:39:07] *** Quits: moldorcoder7 (~moldorcod@37.120.143.28) (Ping timeout: 240 seconds)
[01:39:07] *** Joins: gitly (~gitly@148.252.132.125)
[01:41:06] *** Quits: mickey (~user@user/mickey) (Remote host closed the connection)
[01:41:33] *** Joins: mickey (~user@user/mickey)
[01:42:22] *** Quits: raxor2k (~raxor2k@78.158.252.74) ()
[01:44:27] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[01:44:37] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 245 seconds)
[01:44:50] *** Joins: supakeen (~user@python/site-packages/supakeen)
[01:47:47] *** Quits: newpy (~newpy@2601:280:4381:1390:d8a2:4368:1fe2:a8e3) (Quit: Leaving)
[01:48:07] *** Joins: jamer05 (~jamer05@user/jamer05)
[01:48:42] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:b961:fa09:3947:432e)
[01:48:53] *** Joins: rsrx (~rsrx@103.225.150.81)
[01:50:44] <stewie925> just a question - I consider myself as an "almost intermediate" when it comes to python knowledge.   Been searching for python work and got some interview questions - and its about that big O notation :((
[01:51:30] <grym> stewie925: read https://nedbatchelder.com/text/bigo/bigo.html ?
[01:51:33] <hodapp> what about it?
[01:52:26] <stewie925> hodapp: I just need a good understandable link to read about and understand it
[01:52:31] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[01:52:38] <stewie925> oh thanks gyrm
[01:52:57] <stewie925> grym:  thank you - I will check that out
[01:53:08] *** Quits: waynew (~wayne@user/waynew) (Quit: WeeChat 2.9)
[01:53:52] <grym> stewie925: should get you the high level stuff, and then enough context (hopefully!) to translate back into weirdo interview language
[01:54:12] <stewie925> grym: thank you
[01:54:39] <stewie925> just makes me feel like I don't even know half of python , which is not the case lol
[01:57:08] <InPhase> Big-O notation is mostly language independent.  It comes from the study of algorithm analysis and data structures.
[01:57:46] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[01:58:06] <stewie925> so understanding the Big O notation makes me code more efficiently?
[01:58:27] <InPhase> Which also means you wouldn't normally pick it up just from learning a specific language.  But it's hugely important for designing efficient code that scales well.
[01:58:39] *** Joins: travaldo (~travaldo@159.203.88.148)
[01:59:05] <grym> stewie925: knowing how to look at code and say "that's not going to change speed if the data gets huge" and "that's going to take 400 years to run if the data gets huge" is often useful
[01:59:23] <InPhase> Or you could just wait 400 years to find out.
[01:59:27] *** Joins: i0e (~is0ke3@user/is0ke3)
[01:59:28] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 252 seconds)
[02:00:11] <stewie925> InPhase:  I just felt I aged 5 years after reading your comment
[02:00:34] *** Quits: khrbt (~znc@user/khrbt) (Ping timeout: 252 seconds)
[02:00:44] <stewie925> grym: inPhase:  appreciate your comments though - yeah I need to really understand it internally
[02:00:52] <InPhase> I did end up with a calculation running during my postdoc that was going to take 30 years to finish.  I decided to stop it a little early.  It would not have finished yet by now.
[02:00:54] <hodapp> it's a good idea to study up on what the asymptotic complexity is of some common operations - e.g. linear search of a list, binary search, common sorting algorithms, hash table, matrix multiply
[02:01:19] <hodapp> I doubt they'll expect you to understand amortized complexity, but they might
[02:01:24] <InPhase> I was doing some symbolic algebra that got a little out of hand and did not scale well.
[02:01:53] <hodapp> InPhase: it's fine, sometime when I was around 18 I wrote an algorithm that scaled with something like O(n^(n!))
[02:02:16] <grym> are we playing scott aaronson's favorite game now :)
[02:02:22] <stewie925> wow hodapp you're a wiz kid
[02:02:34] <stewie925> you guys are all master wizards
[02:02:45] <hodapp> stewie925: for writing a shitty algorithm when I was 18? nah :P
[02:02:52] <grym> stewie925: more like semi-grizzled rangers, really
[02:03:08] <grym> you learn how to duck after a while :D
[02:03:29] <stewie925> if only I could pick your brains
[02:03:37] <hodapp> you can ask us what you want :P
[02:04:25] <stewie925> hahaha.... I wish this  were a zoom session lol.  ... oh I need to put my shirt on
[02:05:09] <hodapp> nooo I hate zoom calls
[02:05:11] * hodapp hides
[02:06:38] <stewie925> lol
[02:07:46] *** Quits: dbristow (~dbristow@user/dbristow) (Read error: Connection reset by peer)
[02:07:52] *** Quits: nomic (~nomic@185.217.117.169) (Quit: Leaving)
[02:08:03] *** Quits: mcglk (~mcglk@131.191.49.120) (Read error: Connection reset by peer)
[02:08:06] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[02:08:11] *** Joins: dbristow (~dbristow@user/dbristow)
[02:08:42] *** Joins: mcglk_ (~mcglk@131.191.49.120)
[02:08:49] *** Joins: mei (~mei@user/mei)
[02:09:04] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:09:33] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 276 seconds)
[02:09:49] *** Joins: c4017w__ (~c4017@209.52.68.8)
[02:10:10] *** Joins: khrbt (~znc@user/khrbt)
[02:10:10] *** Quits: Socra (~Socra@206.217.216.27) (Read error: Connection reset by peer)
[02:10:58] *** Quits: Vision (~Vision@024-178-231-173.res.spectrum.com) (Ping timeout: 252 seconds)
[02:11:05] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 250 seconds)
[02:13:00] *** Quits: rsrx (~rsrx@103.225.150.81) (Quit: Leaving)
[02:13:10] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[02:14:33] *** Joins: Socra (~Socra@206.217.216.27)
[02:15:03] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[02:15:24] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[02:15:54] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[02:16:13] *** Quits: pacbard (~pacbard@user/pacbard) (Quit: ZNC 1.8.2 - https://znc.in)
[02:17:19] *** Joins: Cypris (uid511277@user/cypris)
[02:17:37] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 252 seconds)
[02:17:39] *** Joins: pacbard (~pacbard@user/pacbard)
[02:17:39] *** Joins: theelous3 (~theelous3@109.255.56.189)
[02:17:52] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[02:18:07] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[02:18:10] *** Quits: mei (~mei@user/mei) (Ping timeout: 252 seconds)
[02:18:20] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[02:19:03] *** Joins: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[02:19:06] <ens> thanks for all the help folks, learned a boatload of python today!
[02:20:07] <matsaman> that's a lot
[02:20:53] <ens> it really is
[02:23:22] *** Joins: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838)
[02:23:40] *** Quits: y1n (~y1n@84-115-64-195.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[02:24:40] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[02:27:05] *** Joins: ppw (~ppw@user/ppw)
[02:27:07] <ppw> hey
[02:27:16] <ppw> what does it mean for a value to be returned in the form 0.xx% ?
[02:28:04] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 252 seconds)
[02:28:36] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:5122:6ba2:db85:592)
[02:29:06] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[02:29:33] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[02:30:23] *** Joins: nomic (~nomic@185.217.117.169)
[02:30:38] *** Quits: WayToDoor (~WayToDoor@user/waytodoor) (Quit: See you later :))
[02:30:57] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 245 seconds)
[02:32:43] *** Quits: nomic (~nomic@185.217.117.169) (Client Quit)
[02:33:51] *** Quits: grnman_ (~gandalf@c-73-49-209-161.hsd1.fl.comcast.net) (Quit: leaving)
[02:34:18] *** Quits: czuk_cza (~mist@188.147.99.19.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 244 seconds)
[02:36:56] *** Joins: nomic (~nomic@185.217.117.169)
[02:37:19] *** Joins: y1n (~y1n@84-115-64-195.wifi.dynamic.surfer.at)
[02:37:25] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 252 seconds)
[02:37:38] *** Joins: sysRPL (~sysRPL@ec2-3-17-180-170.us-east-2.compute.amazonaws.com)
[02:37:57] *** Quits: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838) (Ping timeout: 245 seconds)
[02:38:48] *** Quits: nomic (~nomic@185.217.117.169) (Client Quit)
[02:40:10] *** Quits: Samian (~Sami@2620:10d:c091:480::1:8938) (Ping timeout: 252 seconds)
[02:40:41] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[02:40:42] *** Quits: n00b101 (uid448161@id-448161.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[02:41:13] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[02:42:47] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:43:59] *** Quits: jamer05 (~jamer05@user/jamer05) (Quit: WeeChat 2.8)
[02:44:33] *** Quits: montxero (~user@149.167.149.74) (Read error: Connection reset by peer)
[02:44:54] *** Joins: montxero (~user@149.167.149.74)
[02:45:59] *** Joins: masoudd (~masoudd@user/masoudd)
[02:48:09] <nedbat> ppw: can you give us more context?
[02:49:12] <ppw> sure, ned. no problem. I'm referring to this https://www.backtrader.com/docu/analyzers-reference/#drawdown
[02:49:32] *** Joins: masoudd_ (~masoudd@user/masoudd)
[02:50:02] <nedbat> ppw: that is confusing.
[02:50:20] <ppw> yeah. tell me about it.
[02:50:46] <nedbat> ppw: seems like a percentage, but does drawdown=.23 mean .23%? or 23%?  Or should you use drawdown=23 and that means .23%?
[02:51:22] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[02:51:24] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:51:27] *** Quits: luna-is-here (~quassel@2a02:908:f761:2a3c::a) (Ping timeout: 240 seconds)
[02:51:37] *** Joins: masoudd__ (~masoudd@user/masoudd)
[02:51:40] <KirkMcDonald> I'd interpret that as returning a value between 0 and 1, representing a percentage.
[02:51:40] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 252 seconds)
[02:52:11] <nedbat> ppw: you could look for clues in the code: https://github.com/mementum/backtrader/blob/master/backtrader/analyzers/drawdown.py
[02:52:16] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 256 seconds)
[02:52:55] <ppw> r.drawdown = drawdown = 100.0 * moneydown / self._maxvalue ... huh
[02:53:04] <ppw> so it's already in percentage form?
[02:53:15] *** Joins: Atque (~Atque@user/atque)
[02:53:16] <KirkMcDonald> Ah, so it's a value between 0 and 100.
[02:53:28] <KirkMcDonald> That documentation is not clear at all.
[02:54:25] <ppw> glad we got it sorted out. thanks Ned
[02:54:40] *** Quits: reset (~reset@user/reset) (Quit: reset)
[02:55:01] *** Quits: masoudd_ (~masoudd@user/masoudd) (Ping timeout: 252 seconds)
[02:55:33] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[02:55:41] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:56:07] *** Quits: blingrang_ (~blingrang@user/blingrang) (Ping timeout: 252 seconds)
[02:56:40] *** Quits: masoudd__ (~masoudd@user/masoudd) (Ping timeout: 252 seconds)
[02:57:01] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Ping timeout: 250 seconds)
[02:57:43] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[02:58:12] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[02:58:20] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[02:59:49] *** Joins: masoudd (~masoudd@user/masoudd)
[03:00:57] *** Joins: masoudd_ (~masoudd@user/masoudd)
[03:04:00] *** masoudd is now known as Guest1069
[03:04:00] *** Quits: Guest1069 (~masoudd@user/masoudd) (Killed (sodium.libera.chat (Nickname regained by services)))
[03:04:00] *** masoudd_ is now known as masoudd
[03:04:07] *** Joins: zepolen (~zepolen@athedsl-4550038.home.otenet.gr)
[03:04:09] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[03:06:16] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:07:10] *** Joins: shawwwn (uid6132@id-6132.helmsley.irccloud.com)
[03:07:48] <shawwwn> Hello! I have a tricky question that you might find interesting: https://twitter.com/theshawwn/status/1432834346000560130
[03:07:49] *** Joins: rsrx (~rsrx@103.225.150.81)
[03:08:55] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 244 seconds)
[03:08:55] *** Quits: jack__d (~jack__d@pool-98-109-145-13.nwrknj.fios.verizon.net) (Ping timeout: 244 seconds)
[03:10:41] *** Quits: oprypin (~irc@pryp.in) (Quit: Bye)
[03:10:52] *** Joins: oprypin (~irc@pryp.in)
[03:11:05] *** Joins: jack__d (~jack__d@pool-98-109-145-13.nwrknj.fios.verizon.net)
[03:11:30] <KirkMcDonald> shawwwn: A while loop with a try/except in.
[03:11:43] <shawwwn> Thank you! Awesome idea.
[03:12:22] <KirkMcDonald> Which, it seems like someone already responded with.
[03:14:17] <shawwwn> I honestly didn't expect a response so quickly. (They responded about 30 seconds after I posted it here.) It seemed harder than that
[03:14:33] <shawwwn> so I wanted to thank you for giving a correct answer too. :)
[03:17:31] *** Joins: WayToDoor (~WayToDoor@user/waytodoor)
[03:17:50] *** Quits: wender (~Wender@189.37.67.41) (Quit: Leaving)
[03:18:03] <pyeveryt_> is anyone here familiar with adding layers to a custom resnet architecture in pytorch? could you please have a look at this and help me? https://stackoverflow.com/questions/69006025/adding-a-simple-attention-layer-to-a-custom-resnet-18-architecture-causes-error
[03:18:26] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[03:19:30] *** Roey is now known as AbradolfLinkler
[03:20:19] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[03:22:05] *** Joins: fikran (~fikran@user/fikran)
[03:22:12] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[03:22:15] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:b961:fa09:3947:432e) (Ping timeout: 256 seconds)
[03:22:28] *** Joins: P1ro (~quassel@user/p1ro)
[03:23:37] *** Quits: y1n (~y1n@84-115-64-195.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[03:23:39] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3-dev)
[03:23:45] *** AbradolfLinkler is now known as Roey
[03:24:11] *** Joins: Samian (~Sami@163.114.130.5)
[03:24:20] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[03:25:00] <aphysically> huh, the pytype failure on my code is odd
[03:25:49] *** Quits: P1ro_ (~quassel@user/p1ro) (Ping timeout: 252 seconds)
[03:25:58] <aphysically> File "/home/gregory/Documents/projects/pyffstream/src/pyffstream/config.py", line 2, in <module>: Can't find module 'typing.Final'. [import-error]
[03:26:36] *** Quits: rinwa (~user@141.226.14.13) (Remote host closed the connection)
[03:27:52] <pyeveryt_> do you know how to fix or debug RuntimeError: Given groups=1, weight of size [2, 2, 3, 3], expected input[256, 64, 28, 28] to have 2 channels, but got 64 channels instead for F.conv2d in Pytorch?
[03:28:13] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[03:29:16] *** Quits: zepolen (~zepolen@athedsl-4550038.home.otenet.gr) (Remote host closed the connection)
[03:29:47] <aphysically> ehh pytype doesn't support the | annotations when I import future yet anyway it seems
[03:30:05] <aphysically> I'll just stick to mypy then with tox
[03:30:05] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[03:30:25] *** Joins: henbruas (~henbruas@ti0003a400-3211.bb.online.no)
[03:31:17] *** Quits: theelous3 (~theelous3@109.255.56.189) (Read error: Connection reset by peer)
[03:31:39] *** Joins: SystemFFan (~SystemFFa@188.71.213.184)
[03:33:07] *** Quits: luva (~luva@178.239.173.200) (Ping timeout: 240 seconds)
[03:33:25] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Ping timeout: 250 seconds)
[03:34:45] *** Joins: zepolen (~zepolen@2a02:587:2954:f4c5:9edb:a404:e37d:5d0f)
[03:34:52] *** Quits: de-facto (~de-facto@user/de-facto) (Read error: Connection reset by peer)
[03:35:05] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[03:35:14] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[03:35:47] *** Joins: y1n (~y1n@84-115-65-210.wifi.dynamic.surfer.at)
[03:36:49] *** Joins: de-facto (~de-facto@user/de-facto)
[03:37:51] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[03:39:18] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[03:41:34] *** Joins: luva (~luva@178.239.173.201)
[03:42:57] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[03:44:26] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[03:46:40] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 240 seconds)
[03:46:41] <gloin> Hey, I'm having trouble accessing a nested dict entry from a get() method. Here's an example of what works/doesn't - I feel like I'm formatting the query improperly: https://bpa.st/E5EA
[03:47:28] <gloin> The carat on the resulting syntax error happens right at the opening paren "get(device"
[03:48:26] <nedbat> gloin: interfaces.get accepts a name parameter, not a general navigation into the depths of the data.
[03:49:08] *** Joins: Gamara (~Gamara@66-203-186-167.ded.execulink.com)
[03:49:12] <Gamara> Hey just say I have an object (A) that takes in a interface object (B) (Strategy pattern). If I write tests for A in unitest (also have pytest installed) how do I run the same tests for multiple implementations of B?
[03:49:18] <gloin> nedbat: so I just sort of lucked into it by choosing "name" as the first parameter?
[03:49:30] <nedbat> gloin: that is my guess
[03:49:44] *** Joins: qlixed (~qlixed@181.44.129.13)
[03:49:59] <Gamara> I saw something about parameterization but  it didn't seem right for this cas
[03:50:00] <Gamara> e
[03:50:01] <gloin> At any rate, I really need to scope the interfaces.get to only devices associated with the instant device_id
[03:50:06] <nedbat> Gamara: with pytest you could use @pytest.mark.parametrize to supply B implementation classes
[03:50:58] <gloin> that whole bit about device['id] = host_id is mandatory as there can/will be a great many hosts with interfaces named "eth0" for example
[03:51:10] *** Quits: zepolen (~zepolen@2a02:587:2954:f4c5:9edb:a404:e37d:5d0f) (Ping timeout: 240 seconds)
[03:51:39] <Gamara> ok thank you nedbat
[03:51:50] <Gamara> I will trythe mark parameterization
[03:51:57] <nedbat> gloin: you might have to do that filtering yourself
[03:52:10] <nedbat> gloin: or, that function might have the ability. find the docs
[03:52:42] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[03:52:52] <gloin> pynetbox works well but the docs for it are a pain point
[03:53:18] *** Joins: Atque (~Atque@user/atque)
[03:53:19] <gloin> I guess I could do something like build a list of interfaces matching that name and then for loop to find the one with the right host_id entry
[03:53:35] <gloin> seems pretty inefficient though :(
[03:54:45] *** Joins: theelous3 (~theelous3@109.255.56.189)
[03:55:31] *** Quits: emerent (~quassel@p200300cd5701a160ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[03:55:43] *** Joins: emerent (~quassel@p200300cd5701a16dba27ebfffed28a59.dip0.t-ipconnect.de)
[03:59:02] *** Quits: y1n (~y1n@84-115-65-210.wifi.dynamic.surfer.at) (Ping timeout: 244 seconds)
[03:59:11] <gloin> there's got to be a way to access this object
[03:59:37] *** Quits: rsrx (~rsrx@103.225.150.81) (Quit: Leaving)
[04:00:41] *** Joins: stewie925 (~stewie925@76-216-148-100.lightspeed.sntcca.sbcglobal.net)
[04:01:34] *** Quits: emika (~emika@185.207.249.78) (Ping timeout: 252 seconds)
[04:01:42] *** Joins: emika (~emika@83.136.182.141)
[04:02:17] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[04:04:40] *** Quits: Axy (~Axy@user/axy) (Ping timeout: 240 seconds)
[04:06:09] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:5497:7c0b:3757:33fc)
[04:06:15] *** Joins: nomic2 (~nomic@185.217.117.169)
[04:06:21] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:5497:7c0b:3757:33fc) (Client Quit)
[04:06:25] *** Quits: nomic2 (~nomic@185.217.117.169) (Client Quit)
[04:06:42] *** Joins: nomic (~nomic@185.217.117.169)
[04:07:13] *** Quits: nomic (~nomic@185.217.117.169) (Client Quit)
[04:08:11] *** Joins: lessless (~lessless@ip.82.144.211.11.stat.volia.net)
[04:08:11] *** Joins: ice9 (~ice9@user/ice9)
[04:08:57] *** Quits: Gurkenglas (~Gurkengla@dslb-088-075-022-191.088.075.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[04:10:12] *** Joins: heco (~redrum@user/redrum88)
[04:13:01] *** Joins: blackop (~ocloud@user/blackop)
[04:14:03] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[04:14:06] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Remote host closed the connection)
[04:16:11] *** Joins: masoudd (~masoudd@user/masoudd)
[04:17:20] *** Quits: Fedorasan (~fedorasan@user/fedorasan) (Quit: Going offline, see ya! (www.adiirc.com))
[04:21:08] *** Joins: y1n (~y1n@84-115-65-26.wifi.dynamic.surfer.at)
[04:21:23] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[04:21:24] *** Joins: sysopch (~sysopch@2001:b07:6469:cc5f:ed9a:f7a6:c2e5:54ff)
[04:21:50] *** Joins: audiocat (~audio@2603-8081-1801-3bb5-6f81-efc3-489b-3fbb.res6.spectrum.com)
[04:23:15] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[04:23:39] *** Quits: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Remote host closed the connection)
[04:24:55] *** Joins: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[04:24:59] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[04:26:01] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[04:26:25] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[04:27:39] *** Quits: sysopch (~sysopch@2001:b07:6469:cc5f:ed9a:f7a6:c2e5:54ff) (Remote host closed the connection)
[04:30:03] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[04:30:08] <aphysically> among pyre/pyright/pytype they all seem to either have problems with some stuff in 3.9 or be a bit worse at catching on to type narrowing than mypy
[04:30:26] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[04:30:40] *** Joins: sysopch (~sysopch@2001:b07:6469:cc5f:914b:c960:faf2:650e)
[04:32:34] *** Joins: stealth_ (~stelath_@216-197-160-97.regn.static.sasknet.sk.ca)
[04:32:55] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 252 seconds)
[04:32:55] *** Quits: Kvothe (~weechat@user/elodin) (Ping timeout: 252 seconds)
[04:33:24] <stewie925> I went through the O notation documentation and kinda struggling with it, but I get the gist
[04:34:05] *** Quits: zuQe8 (~zuQe8@cpc105068-sgyl40-2-0-cust196.18-2.cable.virginm.net) (Quit: Bye)
[04:34:33] *** Joins: midnite (~human@user/midnightlantern)
[04:34:34] *** Joins: zuQe8 (~zuQe8@cpc105068-sgyl40-2-0-cust196.18-2.cable.virginm.net)
[04:34:49] *** Quits: theelous3 (~theelous3@109.255.56.189) (Read error: Connection reset by peer)
[04:35:03] <midnite> Hi. I'd like to iterate through a dictionary, and delete all key:value pairs where the value is False, without knowing the keys. How can I accomplish this?
[04:35:36] *** Joins: nomic (~nomic@185.217.117.169)
[04:35:38] *** Joins: veek (~veek@117.192.16.4)
[04:35:58] *** Quits: nomic (~nomic@185.217.117.169) (Client Quit)
[04:37:10] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Ping timeout: 240 seconds)
[04:37:32] <midnite> ah, suprisingly, google was able to find me some solutions
[04:37:37] *** Quits: stewie925 (~stewie925@76-216-148-100.lightspeed.sntcca.sbcglobal.net) (Quit: stewie925)
[04:38:07] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:1512:4f3f:2a72:233c)
[04:39:21] <stealth_> midnite, `new_dict = {key: value for key, value in other_dict.items() if value is not False}`
[04:40:16] <stealth_> midnite, could also use `if not value` i am not sure how specific you want to be
[04:40:49] <midnite> I tried to delete in place, and I got: "RuntimeError: dictionary changed size during iteration"
[04:40:54] <nedbat> stewie925: do you have any specific questions?
[04:40:59] <midnite> so I'll try your method of making a new dict
[04:41:10] <stewie925> hi nedbat!
[04:41:33] <stewie925> I read your document on O notation - I do kinda get the gist of it
[04:41:42] <nedbat> stewie925: that's good!
[04:42:03] <stewie925> but I have this question from a code assessment "practice test"
[04:42:47] <stewie925> return _0ne smallest positive integer :  Write an efficient algorithm for the following assumptions = N is an integer within the range [1..100,000];
[04:45:11] <nedbat> stewie925: is that the whole thing?
[04:46:21] *** Joins: nomic (~nomic@185.217.117.169)
[04:46:32] *** Joins: Kvothe (~weechat@user/elodin)
[04:47:39] *** Joins: Atque (~Atque@user/atque)
[04:49:07] *** Quits: qpdb (~qpdb@user/qpdb) (Ping timeout: 240 seconds)
[04:49:50] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[04:50:40] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:398e:7ab8:d74e:d9a5) (Ping timeout: 240 seconds)
[04:51:06] *** Joins: elkclone (~elkclone@user/elkclone)
[04:52:07] *** Quits: Kvothe (~weechat@user/elodin) (Ping timeout: 252 seconds)
[04:53:17] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 244 seconds)
[04:53:24] <stewie925> sorry nedbat got distracted here
[04:54:50] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 244 seconds)
[04:54:56] *** Quits: nomic (~nomic@185.217.117.169) (Quit: Leaving)
[04:55:24] *** Joins: attackthemoon (~attackthe@097-088-068-145.res.spectrum.com)
[04:55:27] *** Quits: philipp64|work (~philipp64@174.27.28.163) (Ping timeout: 240 seconds)
[04:55:27] <stewie925> nedbat - I just copied and paste the complete question - here is the screenshot https://imgur.com/a/iCNRasQ
[04:56:05] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[04:57:21] *** Joins: odoood (~odoood@2601:c8:c003:a550::7)
[04:57:27] *** Quits: MDP87900 (~SKI8040@177.12.40.77) (Quit: Client closed)
[04:58:05] *** Joins: MDP87900 (~SKI8040@177.12.40.77)
[04:58:53] <stewie925> sorry, I didt mean to ask for the solution
[04:59:06] <stewie925> did not mean to
[05:01:03] <aphysically> it seems everybody uses pytest in lieu of solely unittest
[05:01:04] <stewie925> so I suppose the most efficient way is to sort the list and do a search
[05:01:23] *** Joins: philipp64|work (~philipp64@174.27.28.163)
[05:01:49] <stewie925> I used unittest in my job
[05:02:32] *** Quits: veek (~veek@117.192.16.4) (Ping timeout: 245 seconds)
[05:02:32] *** Joins: qpdb (~qpdb@user/qpdb)
[05:03:07] *** Quits: Praise (~Fat@user/praise) (Ping timeout: 252 seconds)
[05:03:27] <stealth_> aphysically, ya its better (in terms of usability) plus what software you use for test is extra and not a dependency for your software.
[05:03:30] *** Joins: Praise (~Fat@user/praise)
[05:03:43] *** Quits: OPK (~OPK@user/opk) (Ping timeout: 252 seconds)
[05:03:50] <matsaman> plus it starts with 'py' =P
[05:03:52] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[05:05:13] *** Quits: montxero (~user@149.167.149.74) (Read error: Connection reset by peer)
[05:05:33] *** Joins: montxero (~user@149.167.149.74)
[05:05:53] *** Joins: Kvothe (~weechat@user/elodin)
[05:06:15] <stewie925> Ive been away from a job for a year and getting familiar with python again
[05:07:22] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[05:07:34] *** Quits: y1n (~y1n@84-115-65-26.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[05:07:39] <blackop> hi
[05:07:47] <blackop> is 32bit python necessary?
[05:08:17] <blackop> i mean aren't many devices already 64bit?
[05:08:42] *** Quits: Ivyy (~Ivyy@2001:a62:483:bf01:e971:c165:d1b4:5a85) (Remote host closed the connection)
[05:09:06] *** Joins: nomic (~nomic@185.217.117.169)
[05:10:15] <midnite> if you don't have a use for 32-bit python, then maybe don't use it
[05:10:42] <blackop> i just wanna learn why separated versions
[05:10:43] <midnite> presumably, there are people out there who download and install it, and so they keep it as an option
[05:11:14] <blackop> i mean if i develop an app via 32bit, is it being 32bit app?
[05:11:24] <blackop> what is the difference technically?
[05:12:11] <midnite> I'd assume it's a version of the python interpreter that can run on 32-bit systems, but I may be wrong.
[05:12:55] <domhnall> blackop: it will still just be a python app
[05:12:59] <stealth_> 32bit is more of a limited resources and how much data can be processed at one given time.
[05:14:07] *** Quits: travaldo (~travaldo@159.203.88.148) (Quit: travaldo)
[05:14:07] <stealth_> if your software doesn't use a lot of resources, it matter if its running on 32/64bit
[05:14:29] <midnite> also, I'd assume python is run on more than just people's desktops and laptops. maybe things like embedded systems as well
[05:14:36] <stealth_> *doesn't matter
[05:14:43] <blackop> i see
[05:15:04] <midnite> so those embedded systems could be old 32-bit devices
[05:16:02] <midnite> x86 is definiely not the strangest platform Python is supported on: https://www.python.org/download/other/
[05:17:15] <stealth_> blackop, also on 32bit you are technically limited to 4GB of ram (not that you will get to use it)
[05:17:30] *** Quits: jkl (~jkl@user/jkl) (Quit: Gone.)
[05:17:44] <domhnall> afaik, anything that requires Python as a build/run-time dep, doesn't specify x86 vs x64, only the version is mentioned. i.e >=3.6
[05:18:34] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Ping timeout: 252 seconds)
[05:18:52] *** Joins: jkl (~jkl@user/jkl)
[05:19:12] *** Joins: Fiji (~Fiji@user/fiji)
[05:19:16] *** Joins: y1n (~y1n@84-115-65-26.wifi.dynamic.surfer.at)
[05:20:29] <blackop> well app which requires more than 4gb is not efficient i guess :p
[05:20:43] <blackop> only windows is using 4gb of ram nowadays
[05:21:55] <stealth_> if you run games and such, you notice those use lot of ram
[05:22:34] <Gamara> Hey just say I have an object (A) that takes in a interface object (B) (Strategy pattern). If I write tests for A in unitest (also have pytest installed) how do I run the same tests for multiple implementations of B? I tried this: https://pastebin.com/KtD6GsVQ and it is giving me the error:  TypeError: test_1_init_test() missing 1 required
[05:22:34] <Gamara> positional argument: 'simulation'
[05:22:36] *** Joins: masoudd_ (~masoudd@user/masoudd)
[05:22:43] <Gamara> anyone able to let me know what I am doing wrong
[05:22:58] <Gamara> the documentation isn't really clear to me mabye I am dumb
[05:23:19] *** Joins: minip (minip@user/minip)
[05:23:40] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-c005-d117-11eb-28f3.res6.spectrum.com) (Read error: Connection reset by peer)
[05:24:40] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 240 seconds)
[05:25:02] <Gamara> I checked stack overflow and what I am doing is what it suggested but it still doesnt work
[05:25:20] *** Quits: nomic (~nomic@185.217.117.169) (Quit: Leaving)
[05:25:20] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[05:25:40] *** Joins: nomic (~nomic@185.217.117.169)
[05:28:50] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[05:28:56] *** Quits: masoudd_ (~masoudd@user/masoudd) (Ping timeout: 244 seconds)
[05:29:19] *** Joins: mickey (~user@user/mickey)
[05:29:31] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[05:30:30] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:36] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[05:30:40] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:5122:6ba2:db85:592) (Ping timeout: 252 seconds)
[05:31:26] *** Joins: fikran (~fikran@user/fikran)
[05:32:32] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 245 seconds)
[05:33:05] *** Quits: SystemFFan (~SystemFFa@188.71.213.184) (Remote host closed the connection)
[05:33:12] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[05:33:31] *** Joins: henbruas (~henbruas@ti0003a400-3211.bb.online.no)
[05:34:28] *** Joins: vlm (~vlm@user/vlm)
[05:36:03] *** Joins: Hanii (~textual@host86-171-71-229.range86-171.btcentralplus.com)
[05:36:27] *** Joins: acegallagher (~Ace@71-33-218-237.hlrn.qwest.net)
[05:36:32] *** Parts: midnite (~human@user/midnightlantern) ()
[05:39:41] <nedbat> Gamara: i;m not sure parametrize works with UnitTest classes
[05:39:52] <nedbat> Gamara: you don't need to inherit from TestCase if you are using pytet
[05:40:32] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[05:41:45] *** Joins: frost (~frost@59.71.240.119)
[05:42:03] *** Quits: akk (~akk@174-28-98-206.albq.qwest.net) (Quit: +++)
[05:44:57] *** Quits: Kvothe (~weechat@user/elodin) (Ping timeout: 244 seconds)
[05:46:25] *** Joins: Kvothe (~weechat@user/elodin)
[05:46:36] *** Quits: devcpu (~rusty@104.243.107.236) (Quit: leaving)
[05:47:02] *** Joins: sharperguy_ (~sharpergu@2001:16b8:5c38:4f00:8d27:e7b:d16b:14f9)
[05:47:22] *** Joins: devcpu (~rusty@104.243.107.236)
[05:48:28] *** Quits: nomic (~nomic@185.217.117.169) (Quit: Leaving)
[05:48:33] *** Joins: rancurt2 (~rancurt2@75-172-26-41.tukw.qwest.net)
[05:49:48] *** Quits: sharperguy (~sharpergu@2001:16b8:5c88:6b00:e48:efb5:82f0:c768) (Ping timeout: 250 seconds)
[05:50:09] *** Quits: Gamara (~Gamara@66-203-186-167.ded.execulink.com) (Ping timeout: 256 seconds)
[05:54:16] *** Quits: d0ku (~d0ku@178.43.56.75.ipv4.supernova.orange.pl) (Ping timeout: 252 seconds)
[05:56:28] *** Quits: southey (~foxtrot@user/foxtrot) (Ping timeout: 252 seconds)
[05:56:59] *** Joins: southey (~foxtrot@user/foxtrot)
[05:58:10] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[06:00:41] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Client Quit)
[06:01:01] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:1512:4f3f:2a72:233c) (Quit: Client closed)
[06:01:08] *** Joins: nomic (~nomic@185.217.117.169)
[06:01:25] *** Quits: Kvothe (~weechat@user/elodin) (Ping timeout: 252 seconds)
[06:03:32] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[06:07:31] *** Quits: y1n (~y1n@84-115-65-26.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[06:09:18] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 250 seconds)
[06:12:18] *** ormaaj is now known as ormaaj2
[06:13:46] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:16:13] *** Quits: stoneware (uid515661@user/stoneware) ()
[06:20:20] *** Quits: rancurt2 (~rancurt2@75-172-26-41.tukw.qwest.net) (Quit: Leaving)
[06:20:51] *** Joins: dez (uid92154@user/dez)
[06:22:14] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[06:24:22] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:24:34] *** Quits: nergar (~Nergar@177.225.152.16) (Ping timeout: 252 seconds)
[06:24:35] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 250 seconds)
[06:24:45] *** brabrax_ is now known as brabrax
[06:25:07] *** Joins: Linux77 (~Linux7_7@237-182-233-186.raimax.com.br)
[06:28:48] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[06:29:16] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[06:30:14] *** Quits: c4017 (~c4017@S0106c0943583f893.vf.shawcable.net) (Remote host closed the connection)
[06:30:32] *** Joins: c4017 (~c4017@2604:3d08:747f:7c90:89b:e62c:4ef0:d5ca)
[06:30:36] *** Quits: driib (~driib@185.195.233.162) (Read error: Connection reset by peer)
[06:30:53] *** Joins: driib (~driib@185.195.233.162)
[06:32:51] *** Quits: jmft2 (~jmft2@81.149.115.87.dyn.plus.net) (Quit: This computer has gone to sleep)
[06:33:22] *** Quits: nyah (~nyah@bcdcb6e3.skybroadband.com) (Ping timeout: 252 seconds)
[06:34:31] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[06:35:59] *** Joins: bn_work (uid268505@id-268505.highgate.irccloud.com)
[06:37:32] *** Quits: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:37:43] *** Quits: hudo (~hudo@62.68.27.70) (Ping timeout: 252 seconds)
[06:38:14] *** Joins: Atque (~Atque@user/atque)
[06:39:43] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 244 seconds)
[06:40:00] *** Joins: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[06:43:49] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 252 seconds)
[06:44:46] *** Joins: Kvothe (~weechat@user/elodin)
[06:45:29] *** Quits: BUSY (~BUSY@user/busy) (Read error: Connection reset by peer)
[06:45:31] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:45:56] *** Joins: regreg (~regreg@2a02:2f09:531a:c700:5cc8:6d3e:c41b:4102)
[06:46:48] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[06:48:43] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Ping timeout: 252 seconds)
[06:48:43] *** shokohsc8 is now known as shokohsc
[06:48:51] *** Joins: jazzy (~jaziz@172.58.38.189)
[06:51:12] *** Joins: Elodin (~weechat@user/elodin)
[06:51:56] *** Quits: sysopch (~sysopch@2001:b07:6469:cc5f:914b:c960:faf2:650e) (Read error: Connection reset by peer)
[06:52:09] *** Joins: sysopch (~sysopch@2001:b07:6469:cc5f:914b:c960:faf2:650e)
[06:53:43] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Quit: Leaving)
[06:54:10] *** Quits: Kvothe (~weechat@user/elodin) (Ping timeout: 240 seconds)
[06:55:02] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[06:55:55] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 252 seconds)
[06:59:02] *** Quits: attackthemoon (~attackthe@097-088-068-145.res.spectrum.com) (Read error: Connection reset by peer)
[07:00:46] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[07:01:09] *** Joins: CombatVet (~c4@user/combatvet)
[07:03:04] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2)
[07:08:57] *** Joins: Elodin (~weechat@user/elodin)
[07:09:50] *** Joins: quik (~x@awknode.com)
[07:10:48] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[07:13:06] *** Joins: diamondbond (~diamondbo@112.134.170.180)
[07:13:46] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.2)
[07:15:10] *** Quits: odoood (~odoood@2601:c8:c003:a550::7) (Ping timeout: 240 seconds)
[07:19:58] *** Quits: quik (~x@awknode.com) (K-Lined)
[07:20:07] *** Quits: Samian (~Sami@163.114.130.5) (Ping timeout: 252 seconds)
[07:21:47] *** Quits: Linux77 (~Linux7_7@237-182-233-186.raimax.com.br) (Remote host closed the connection)
[07:24:06] *** Quits: minip (minip@user/minip) (Remote host closed the connection)
[07:25:10] *** Quits: kevinlc (~kevinalh@2800:200:e8d0:20b::4) (Ping timeout: 240 seconds)
[07:25:18] *** Joins: kevinlc (~kevinalh@89.45.90.135)
[07:30:07] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[07:31:20] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[07:34:14] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[07:35:51] *** Quits: sturmmann (~sturmmann@user/sturmmann) (Ping timeout: 276 seconds)
[07:36:41] *** Joins: Tat (~Tat@137-025-218-069.res.spectrum.com)
[07:38:13] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 252 seconds)
[07:38:45] *** Quits: srhm (~srhm@user/srhm) (Quit: Konversation terminated!)
[07:38:46] *** Joins: GenTooMan (~cyberman@c-73-214-106-63.hsd1.pa.comcast.net)
[07:38:49] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[07:39:15] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[07:39:24] *** Quits: clarjon_1 (~clarjon1@user/clarjon1) (Read error: Connection reset by peer)
[07:40:48] *** Joins: fikran (~fikran@user/fikran)
[07:41:54] *** Joins: black_13 (~jjosb@209.221.58.169)
[07:42:07] *** Quits: diamondbond (~diamondbo@112.134.170.180) (Ping timeout: 252 seconds)
[07:42:18] <black_13> is there a way to show all xml nodes
[07:42:24] <black_13> or node types
[07:44:19] *** Quits: regreg (~regreg@2a02:2f09:531a:c700:5cc8:6d3e:c41b:4102) (Ping timeout: 252 seconds)
[07:46:07] *** Joins: Kvothe (~weechat@user/elodin)
[07:46:31] *** Quits: Pandadub (~Barones@177.133.26.175) (Ping timeout: 252 seconds)
[07:46:56] <foo> This is sloppy and doesn't work... but. Does anyone see what I'm trying to do here? aa = {}; bb = [1,2,3,4,5]; {aa[b]: b for b in bb} ... I'm trying to iterate through the loop and set a key/value pair in the aa dict. Is this possible?
[07:47:04] <foo> I may need to do a more traditional for loop and not shorthand it
[07:47:32] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 245 seconds)
[07:48:00] <black_13> dictionary comprehension
[07:49:08] <foo> https://bpa.st/HIBA -> this does what I want, for the record.
[07:49:16] <foo> I was wondering if there's a shorter way of doing this?
[07:49:25] <foo> oh, there is. I see it.
[07:49:48] *** Joins: Gerula_ (~Gerula@user/gerula)
[07:49:48] *** Quits: Gerula (~Gerula@user/gerula) (Killed (cadmium.libera.chat (Nickname regained by services)))
[07:49:48] *** Gerula_ is now known as Gerula
[07:50:04] <foo> bb = [1,2,3,4,5]; aa = {b: b for b in bb} works...
[07:50:19] <foo> Although I have a pre-existing dict. I'll just do this and merge it with another
[07:50:47] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[07:51:04] <stealth_> foo, https://bpa.st/E4WQ
[07:51:06] <foo> aa.update(bb) ... yup, that's easy enough
[07:51:20] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[07:51:22] *** Joins: sgn (~sgn@user/sgn)
[07:51:28] *** Quits: Kvothe (~weechat@user/elodin) (Ping timeout: 252 seconds)
[07:51:30] <foo> stealth_: ha, thanks, my dict isn't so simple but I always like a good refresher on zip(). I don't use it often enough. :)
[07:51:36] *** Quits: Cyberg33k (~Cybergeek@91.216.101.170) (Quit: This computer has gone to sleep)
[07:51:44] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[07:52:05] <stealth_> foo, its handy
[07:52:05] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:52:24] *** Joins: Kvothe (~weechat@user/elodin)
[07:52:33] <foo> I could do something like: aa.update({b: b for b in bb}) ... and that'll solve what I want too
[07:52:50] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[07:53:18] <stealth_> ya or just `.aa.update(zip(bb, bb))`
[07:53:40] <foo> stealth_: thanks!
[07:54:05] *** Joins: ArBoy (~ArBoy@2001:16a2:7751:1300:be7f:7488:7163:f053)
[07:54:22] <aphysically> ./src/pyffstream/ffmpeg.py:46:5: A003 class attribute "format" is shadowing a python builtin
[07:54:24] <aphysically> no it's not :D
[07:54:25] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[07:54:35] <aphysically> I guess I should report this upstream
[07:55:02] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[07:55:30] <aphysically> (it's a typeddict https://bpa.st/AO4A )
[07:55:53] *** Parts: ArBoy (~ArBoy@2001:16a2:7751:1300:be7f:7488:7163:f053) (Leaving)
[07:56:40] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 240 seconds)
[07:56:50] *** Joins: thiras (~thiras@user/thiras)
[07:59:38] *** Joins: Linux77 (~Linux7_7@237-182-233-186.raimax.com.br)
[08:01:26] <stealth_> aphysically, https://docs.python.org/3/library/functions.html#format
[08:02:01] *** Joins: m33k (dexter@user/m33k)
[08:02:05] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 250 seconds)
[08:02:07] <aphysically> I'm not shadowing it
[08:02:16] <aphysically> it's a typeddict, it's a dict key
[08:02:50] <aphysically> and, moreover, one that's typing json I'm processing from ffmpeg, so I'm not even control of the "format" name of the key
[08:02:57] <aphysically> in control*
[08:03:00] *** Quits: c4017 (~c4017@2604:3d08:747f:7c90:89b:e62c:4ef0:d5ca) (Read error: Connection reset by peer)
[08:04:36] <stealth_> aphysically, what python version? i am not getting error on 3.10
[08:04:47] <aphysically> it's a flake8 plugin not a python error
[08:04:51] <aphysically> python is fine with it
[08:05:13] <aphysically> (a plugin that complains if you're using names of builtins)
[08:05:27] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 245 seconds)
[08:06:21] <stealth_> aphysically, o, well i am using flake8 as well, i don't get that error though! maybe you need to upgrade?
[08:06:50] <aphysically> it's the uhhh, flake8-builtins plugin
[08:07:30] <aphysically> I think this might be redundant to other things that already do this, I'm mostly just trying out various linters on and off right now since it's easy with tox
[08:09:05] *** Quits: Fiji (~Fiji@user/fiji) (Quit: Leaving)
[08:10:01] *** Joins: Izem (~Izem@bras-base-london1483w-grc-30-74-12-157-86.dsl.bell.ca)
[08:10:02] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Quit: WeeChat 2.8)
[08:10:18] <aphysically> yes pylint already does this
[08:11:17] *** Joins: odoood (~odoood@2601:c8:c003:a550:fbdc:f2fe:53fa:f37f)
[08:11:54] <stealth_> aphysically, so the error was correct, no?
[08:12:20] <aphysically> stealth_: for the typeddict?
[08:12:37] <stealth_> aphysically, "class attribute "format" is shadowing a python builtin"
[08:12:49] <aphysically> it's not actually a class attribute though
[08:13:21] *** Quits: Mikaela (~sid12355@Feneas/Mikaela) (Remote host closed the connection)
[08:13:41] *** Joins: Mikaela (~sid12355@Feneas/Mikaela)
[08:15:40] <aphysically> stealth_: I guess you could look at this as a problem with the standard they chose as the notation for typed dicts
[08:15:41] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[08:15:59] <aphysically> since it can confuse static analysis tools
[08:15:59] *** Joins: Samian (~Sami@2620:10d:c091:480::1:5b3a)
[08:16:17] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:16:25] <stealth_> aphysically, `format(string)` calls `string.__format__`, ...
[08:16:25] <aphysically> this is such an edge case it warrants ignoring with a noqa though
[08:16:56] <stealth_> it has nothing to do with typed dict, its more of a name `format` being same as builtin it warning/raising that error
[08:17:42] *** Parts: domhnall (~developer@user/domhnall/x-2887755) ()
[08:18:00] <aphysically> I don't understand, what's wrong with using builtins for dict keys?
[08:18:44] <stealth_> aphysically, nothing, that linter is set to be more strict, thus its letting you know
[08:18:50] *** Parts: Izem (~Izem@bras-base-london1483w-grc-30-74-12-157-86.dsl.bell.ca) (Closing Window)
[08:19:35] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[08:20:28] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 244 seconds)
[08:26:47] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[08:27:07] <jaggz> bb=list(range(0,10)); aa=[1,3];  aa in bb
[08:27:13] *** Quits: emika (~emika@83.136.182.141) (Ping timeout: 252 seconds)
[08:27:18] <jaggz> how do you use any() to check if 1 or 3 is in bb?
[08:27:42] *** Quits: kevinlc (~kevinalh@89.45.90.135) (Ping timeout: 244 seconds)
[08:27:47] *** Joins: emika (~emika@185.207.249.151)
[08:27:49] *** Joins: kevinlc (~kevinalh@2800:200:e8d0:20b::4)
[08:28:28] <jaggz> any([a in bb for a in aa])
[08:28:30] <jaggz> hm
[08:29:52] *** Joins: X4 (~Fernandos@2a02:908:178:1900:acb6:b168:a371:48b8)
[08:29:58] <X4> hi
[08:31:10] <stealth_> jaggz, if they were both `set`, you could do `aa & bb`, since its in `list` you have to manually check it
[08:31:27] <X4> I've tried a lot, but the code I have doesn't seem to properly verify that a request object in flask isn't missing, empty or invalid. Here's my minimal example: https://ideone.com/LZQfRy
[08:31:37] *** Quits: realies (~realies@user/realies) (Quit: ~)
[08:31:51] <stealth_> jaggz, `set(aa) & set(bb)`
[08:32:38] <X4> Is there a better or more efficient way? I don't understand the intrinsics of python3's resource efficiency regarding loops within objects/dicts
[08:34:28] <X4> Also most people use a line per import, I don't know if it's degrading performance or creating async race conditions when importing all in prarallel. I suppose Python imports serially regardless how you write it.
[08:35:37] <X4> funny enough, I also tried: inKeys = True if for key,validate in req.items(): if(key) else False
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:07] *** Joins: jazzy2 (~jaziz@172.58.38.189)
[08:36:09] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[08:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:36:32] *** Quits: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Remote host closed the connection)
[08:37:00] *** Quits: khrbt (~znc@user/khrbt) (Ping timeout: 244 seconds)
[08:37:10] <X4> but that obviously looked like a bad code smell. putting too much logic into a single line maybe, or at least to many logic keywords. Unlike APL or functional programming it's different in python :)
[08:37:39] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:38:52] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[08:39:00] <stealth_> X4, you can check if all keys exist `inKeys = not validate - req.keys()`
[08:39:16] *** Quits: jazzy (~jaziz@172.58.38.189) (Ping timeout: 252 seconds)
[08:39:29] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:39:50] <stealth_> X4, if `validate` key is in `req`
[08:39:57] *** Joins: realies (~realies@user/realies)
[08:40:04] <X4> stealth_ that looks amazingly concise, wow! What does the dash do?
[08:40:17] <stealth_> X4, subtract!
[08:40:27] <X4> hahaha, good one! hahah
[08:40:35] <stealth_> :D'
[08:41:01] *** Joins: Mija (~Mija@user/mija)
[08:41:13] <X4> ahhh, now I get it! You sir, surely are one who also write recursive code at the first try ;)
[08:41:20] *** Joins: khrbt (~znc@user/khrbt)
[08:41:25] <jaggz> how do you make a dict from a list comprehension?
[08:41:31] <jaggz> return [{s: i} for i,s in enumerate(class_dirs)]
[08:41:49] <jaggz> I want that to return a dict, not a list
[08:41:59] <stealth_> jaggz, `dict(zip(enumerate(class_dirs))`
[08:42:01] <jaggz> so foo{s} == i
[08:42:32] *** Quits: andi_ (~andi@user/andi/x-3467420) (Quit: WeeChat 3.1)
[08:42:38] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:43:14] <stealth_> X4, for your `isNotNone` and `isValidKey` you know all the data you get are going to be "string" so you can't check `None` or anything else unless you actually convert it
[08:43:18] <jaggz> stealth_, i almost missed that
[08:44:14] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 244 seconds)
[08:44:22] <stealth_> x4 or is it json data you are getting?
[08:44:45] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 244 seconds)
[08:45:40] <X4> stealth_ oh, I really didn't know that. I tought that request.items() would return dicts with the correct type, or at least the type transmitted via json. I tried checking req.json(), but that didn't work, because it would require parsing json before probably
[08:47:00] <jaggz> stealth_, hm
[08:47:02] <jaggz> aa=['a','b','c','d']; dict(zip(enumerate(aa)))
[08:47:07] *** Quits: odoood (~odoood@2601:c8:c003:a550:fbdc:f2fe:53fa:f37f) (Ping timeout: 245 seconds)
[08:47:09] <stealth_> X4, just do `print(req, type(req))` to see wat data you get and type
[08:47:13] <jaggz> dictionary update sequence element #0 has length 1; 2 is required
[08:47:28] <jaggz> aa=['a','b','c','d']; dict(enumerate(aa)) -> {0: 'a', 1: 'b', 2: 'c', 3: 'd'}
[08:47:37] *** Joins: regreg (~regreg@2a02:2f09:531a:c700:5cc8:6d3e:c41b:4102)
[08:47:56] <stealth_> jaggz, `enumerate(a, 1)`
[08:48:25] <jaggz> ?
[08:48:49] <stealth_> jaggz, you want it `1: 'a'` right?
[08:49:03] <X4> stealth_ that returns a <class 'dict'> with the values within the dict I filled in the example.
[08:49:03] <jaggz> stealth_, I .. right.. no I want 'a': 0
[08:49:35] <jaggz> I want a reverse mapping of a list .. so foo[num]==string    foo_invers[string] == num
[08:50:04] <stealth_> jaggz, o, then you would have to `dict(v: k for k, v in enumerate(aa))`
[08:50:41] <stealth_> X4, o, even int as int? then something must already convert the values
[08:50:43] <stealth_> types
[08:51:09] <jaggz> thanks stealth_  :)
[08:51:14] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:51:39] <jaggz> invalid syntax at that :
[08:52:13] <stealth_> jaggz, `{v: k for k, v in enumerate(aa)}`
[08:52:18] <jaggz> dict({v, k} for k, v in enumerate(aa))
[08:52:24] <jaggz> hm
[08:52:35] <jaggz> okay that works too
[08:52:37] <jaggz> thanks :)
[08:52:48] <jaggz> (oh wait, mine didn't work)
[08:52:53] <jaggz> yours does. thanks
[08:52:59] <X4> stealth_ you're right indeed. I think req = request.data already loops over the incoming request and converts the types. However the dict that I set manually also has types, as far as I can tell.
[08:53:10] <stealth_> jaggz, you can write is like this as well `dict((v, k) for k, v in enumerate(aa))`
[08:53:36] *** Quits: sysRPL (~sysRPL@ec2-3-17-180-170.us-east-2.compute.amazonaws.com) (Remote host closed the connection)
[08:55:06] <stealth_> X4, `isValidKey` is really not needed the `inKeys` already matches or else it will give you wrong result, even upper case will be error!
[08:55:51] <stealth_> X4, `req.items().strip()` is probably an error
[08:55:53] *** Joins: jinsun (~quassel@user/jinsun)
[08:56:15] <aphysically> huh, I guess I never thought about this before
[08:56:41] <aphysically> I can avoid nesting in some places by raising the error first instead of in an else
[08:56:56] <X4> stealth_ the reason for `req.items().strip()` was to verify if an empty string was passed.
[08:57:21] <X4> I'll try that with `inKeys`
[08:57:35] <stealth_> x4 `AttributeError: 'dict_items' object has no attribute 'strip'`
[08:58:18] <stealth_> x4 `dict` does not have `.strip()` method, `"string".strip()` has it
[08:58:21] <k_sze> Hmm, PDM seems to be this new kid on the block regarding dependency management.
[08:59:10] *** Joins: nergar (~Nergar@177.225.152.16)
[08:59:12] <k_sze> Does anybody have first-hand experience using it? Thoughts? I think I've only been able to find an article written by the author themself so far.
[08:59:34] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.2)
[08:59:47] <stealth_> aphysically, raising error should be and end game scenario, not a replacement for if/else statement.
[09:01:07] <aphysically> let me show you what i mean
[09:01:45] *** Joins: odoood (~odoood@2601:c8:c003:a550::7)
[09:02:07] *** Quits: MDP87900 (~SKI8040@177.12.40.77) (Quit: Client closed)
[09:02:22] *** Joins: theprophet (~theprophe@85.114.228.184)
[09:03:21] <aphysically> stealth_: https://bpa.st/CXQA
[09:03:50] *** Joins: shugo (~shugo@user/shugo)
[09:04:14] <aphysically> I can avoid the nesting in the second example by reordering
[09:04:15] <stealth_> aphysically, what am i looking at?
[09:04:26] <aphysically> two identical methods, one that reorders like I'm trying to say
[09:04:34] *** Parts: shugo (~shugo@user/shugo) ()
[09:04:46] <aphysically> in particular note the raised exception placement
[09:04:46] *** Quits: nomic (~nomic@185.217.117.169) (Quit: Leaving)
[09:04:53] <aphysically> I'm not sure which way is better "style"
[09:06:14] <stealth_> aphysically, i am not sure why you call `match.group` twice
[09:06:37] <X4> stealth_ are you sure the logic for `inKeys = not validate - req.keys()` is correct? Because all values are set, exist in validate dict and req dict, but still produces `Not in Keys`
[09:06:55] *** Joins: rakoon (~rakoon@2a02:2149:824f:5900:a10c:1151:267d:ea07)
[09:07:03] <X4> the link again for comfort: https://ideone.com/fork/LZQfRy
[09:07:51] <aphysically> stealth_: I could use an assignment expression I guess but I figured it doesn't really matter
[09:08:45] <stealth_> aphysically, i like the bottom one, if you catch `match.group` and check for error before running other code
[09:09:14] <aphysically> right, I hadn't considered structuring my code like that before
[09:09:35] <stealth_> aphysically, its a lot cleaner and better to debug in the future
[09:11:05] *** Joins: hudo (~hudo@62.68.27.70)
[09:11:56] <stealth_> x4 could you update to current code and where the error is, so i know what you are trying
[09:12:32] <stealth_> X4, you know `validate` does not account for "order_type" and "order_link_id" right?
[09:13:30] <X4> stealth_ yes I'm on it, sorry. Correct, those two values and any other values shouldn't be checked, to see if validate works only on a whitelist
[09:16:21] *** Joins: shugo (~shugo@user/shugo)
[09:17:58] <jaggz> what's a good algorithm for returning clusters from a list, only if they are more than a certain amount together?
[09:18:16] <jaggz> I'm gathering classified audio samples -- only getting the ones classified as "noise"
[09:19:12] <jaggz> currently I do something like:  if isnoise(buf[i]) and isnoise(buf[i+1]): keepsamples.append(buf[i]); keepsamples.append(buf[i+1]);
[09:19:21] <jaggz> then I use set() to remove duplicates
[09:19:33] <jaggz> (actually I just keep the i (indexes) and set() that)
[09:20:11] <X4> stealth_ here's the updated code: https://ideone.com/nDaAmM
[09:20:15] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:20:30] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[09:20:34] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 252 seconds)
[09:21:02] <stealth_> X4, `isNotNone = ` is wrong though
[09:21:36] <stealth_> x4 `validate in req.items` you already checked for this in `inKeys`
[09:21:55] <X4> You mean I don't need isValidKey and isNotNone because of inKeys checking already for both?
[09:22:18] <X4> that'd be amazing and beyond what I thought it'd do!
[09:22:32] *** Quits: odoood (~odoood@2601:c8:c003:a550::7) (Ping timeout: 245 seconds)
[09:23:11] *** Joins: djapo (~archangel@user/djapo)
[09:23:16] <stealth_> X4, you already checked if keys like "side", "qty", ... exists, now maybe you want to check its value? like `req["qty"] == 100` i dono, whatever you want to check
[09:23:49] *** Quits: Atrillox (~bigguy@219.137.141.84) (Ping timeout: 252 seconds)
[09:24:21] <X4> yes, exactly. I wanted to check if a valid license is provided, if the side is buy or sell and if a leverage is set
[09:25:03] <X4> but before comparing for a specific value I wanted to check if the values provided aren't empty or none
[09:25:17] <stealth_> X4, you don't need `isNotNone`
[09:25:22] *** Quits: A_Dragon (A_D@doom-tower.awesome-dragon.science) (Ping timeout: 240 seconds)
[09:26:08] <X4> at least not empty, none for the whitelist in validate. hmm, yeah due to inKeys already doing the existance check
[09:26:24] <stealth_> x4 now you will have to do stuff like `if req['license'] is not in list_of_keys: abort(400, 'No License')`
[09:26:31] <stealth_> so on ....
[09:26:37] *** Quits: khrbt (~znc@user/khrbt) (Ping timeout: 252 seconds)
[09:26:54] <X4> stealth_ but are values in validate checked for emptyness?
[09:26:55] *** Quits: dhch (~dhch@185.213.154.168) (Read error: Connection reset by peer)
[09:27:00] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[09:27:19] <stealth_> typo: `if req['license'] not in list_of_keys: abort(400, 'No License')`
[09:27:22] <X4> not sure if emptyness would convert to false implicitly
[09:27:47] *** Joins: dhch (~dhch@185.213.154.168)
[09:28:03] <stealth_> x4 ya, don't need to check if empty cause if that license doesn't exist its error anyways, including empty license key
[09:29:02] *** Joins: A_Dragon (A_D@doom-tower.awesome-dragon.science)
[09:29:19] *** Joins: stranac (~stranac@195.29.239.126)
[09:29:45] <X4> stealth_ what if qty, side or another value I don't individually check, but just pass is empty though?
[09:29:58] <X4> except side, that requires a check of course
[09:30:21] <stealth_> X4, you probably want to check all of it `if .. elif ... `
[09:31:56] *** Joins: Wulf (~Wulf@user/wulf)
[09:32:27] <stealth_> X4, what if `"qty": -100` ? now you might be refunding them free $$$ so you gota check stuff like that. make sure `qty >= 1`
[09:33:46] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[09:34:20] <X4> stealth_ I've an ip_whitelist, hsts and the trading algo goes long/short, meaning -100 would only work on short and could be a correct value. But you're right. I should definitely define save upper/lower bounds depending on the balance.
[09:34:30] <Payam> Hi goog morning
[09:34:40] <X4> safe
[09:34:50] <stealth_> mhmm
[09:36:19] *** Joins: khrbt (~znc@user/khrbt)
[09:37:30] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[09:37:49] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[09:38:54] <X4> stealth_ currently I'm accepting signals from tradingview and from my point of view it's of course mediocre. But my trader is a 'professional' and trading coach, but not 'wallstreet professional'. I was working on a deep-learning algorithm which deals better than state-of-art than current time-series analyis, but realized the dimensions compared
[09:38:55] <X4> are too shallow and the model needs more spatial data per trade.
[09:39:07] *** Quits: Elzington (~Elzington@68.235.43.133) (Quit: Leaving)
[09:39:43] *** Parts: apteryx (~maxim@dsl-153-61.b2b2c.ca) ()
[09:40:20] *** Parts: shugo (~shugo@user/shugo) ()
[09:40:46] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:41:29] <X4> However my python is really not good enough. I need urgently need to ready "learning python the hard way". But was thinking of porting the code to julia/nim and parts of the core in ballerina. I wish to have a data-flow view traders, investors and clients can understand and manipulate.
[09:42:17] <X4> stealth_ are you up for work, if that's not rude to ask for. :)
[09:45:34] <stealth_> X4, well i am in the market to job but i am looking for full time type of job, also something i actually want to do.
[09:47:47] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 244 seconds)
[09:47:59] <aphysically> huh, apparently some people are strongly against pyproject.toml for tools
[09:48:24] <X4> stealth_ We're hiring full-time jobs soon too. No relocation needed, we're currently holding back investors. Just a small, but well connected startup :)
[09:48:44] <evidlo> aphysically: I don't like it either
[09:48:54] <stealth_> aphysically, in what way?
[09:49:00] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-55ae-d7d8-7bcf-ce25.res6.spectrum.com) (Ping timeout: 250 seconds)
[09:49:25] <stealth_> x4 cool
[09:49:33] <evidlo> I don't remember the details, but for my project it meant that I had multiple configuration files instead of a single setup.py
[09:49:49] <evidlo> it's been about a year since I looked at it
[09:50:03] <jinsun> many people are pro putting everything in pyproject.toml too, that is why almost all projects are supporting it (only flake8 still doesn't)
[09:50:10] *** Joins: fikran (~fikran@user/fikran)
[09:50:31] <aphysically> the flake8/pre-commit person seemed very strongly against it
[09:50:51] <jinsun> I like to dump everything in pyproject.toml instead of littering my project folder with small files for each linter i use
[09:51:05] <stealth_> whats there to hate? its just a file
[09:51:13] <evidlo> and wasn't there something about 'pip -e' not working with pyproject.toml?
[09:51:18] <aphysically> right now I have it all in pyproject except tox and flake8
[09:51:21] <jinsun> alteat flake8 supports setup.cfg, so I stuff its config there
[09:51:47] <aphysically> I don't mind the tox one, but they do say they plan to support flake8 eventually
[09:52:00] *** Joins: ihristov (~ihristov@85.187.46.226)
[09:52:04] <aphysically> support pyrpoject.toml eventually I mean
[09:52:24] <jinsun> you can put flake8 config in tox.ini too I think
[09:52:40] *** Quits: hudo (~hudo@62.68.27.70) (Ping timeout: 240 seconds)
[09:52:44] <aphysically> which I guess is fine if it's the only place I plan to run it
[09:53:00] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[09:53:27] <aphysically> stealth_: something about pyproject.toml existing breaks pip in a way that can't be fixed, or something or another
[09:53:38] <aphysically> the discussion was way too long and I stopped caring about half way through
[09:53:38] <jinsun> no it will read from tox.ini even if you don't use tox
[09:53:49] <aphysically> oh, well then I'll switch to that and remove .flake8 then
[09:54:03] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-405a-c628-91bb-f055.res6.spectrum.com)
[09:54:08] <jinsun> but obviosly flake8's own config will get preference
[09:54:14] <jinsun> if both are there
[09:54:27] <evidlo> so now I have to have both a setup.cfg and pyproject.toml, and this new method doesn't support editable installs.  no thanks
[09:54:28] <aphysically> stealth_: https://github.com/PyCQA/flake8/issues/234
[09:54:35] <stealth_> aphysically, hmm i use it for simple stuff like having to install an software before installing my software, works fine for me
[09:54:54] <aphysically> (that's the discussion I'm referencing, if you're interested)
[09:57:25] *** Quits: Samian (~Sami@2620:10d:c091:480::1:5b3a) (Ping timeout: 252 seconds)
[09:57:41] *** Joins: djangoaddict (~djangoadd@2601:8c:c100:6820:6981:ff88:fe4b:fcf1)
[09:58:33] *** Joins: upsala (~zcb@185.213.155.160)
[09:58:38] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[10:00:13] <aphysically> pytest is an entire rabbit hole
[10:00:59] <stealth_> aphysically, if you stick with basics its pretty simple, learn advanced stuff as you need it.
[10:02:34] *** Parts: tuxifreund (tuxifreund@ubuntuusers/wikiteam/tuxifreund) (WeeChat 3.2)
[10:04:29] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Quit: WeeChat 3.3-dev)
[10:05:28] <meejah> +1 pytest
[10:05:50] *** Joins: Axy (~Axy@user/axy)
[10:08:07] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[10:15:13] <aphysically> right now I'm using flit with the pep-621 style config since I don't even have any non-stdlib dependencies yet
[10:15:33] *** Quits: baltazar (~baltazar@178-164-251-227.pool.digikabel.hu) (Ping timeout: 250 seconds)
[10:15:55] <aphysically> idk I might be a hipster and do poetry; eventually poetry and such will probably add pep 621 too
[10:16:39] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[10:17:23] *** Joins: baltazar (~baltazar@188-143-71-54.pool.digikabel.hu)
[10:17:29] <jinsun> poetry does already support pep 621 no?
[10:17:40] <jinsun> only setuptools is behind I thought
[10:19:24] <aphysically> no, not yet
[10:19:55] <aphysically> poetry can be configured in pyproject.yaml, but not yet with pep 621 for static metadata
[10:20:17] <aphysically> https://github.com/python-poetry/poetry/issues/3332
[10:20:42] *** Quits: damonlynch (~ngaio@2601:245:c700:2c06:89dd:5c9f:10c0:59f) (Quit: Leaving)
[10:22:05] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Read error: Connection reset by peer)
[10:22:23] <jinsun> ah ok I didn't read pep 621 properly
[10:24:13] *** Joins: damonlynch (~ngaio@2601:245:c700:2c06:9cce:d33f:1775:33d)
[10:26:40] *** jazzy2 is now known as jazzy
[10:26:47] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[10:29:59] *** Quits: djangoaddict (~djangoadd@2601:8c:c100:6820:6981:ff88:fe4b:fcf1) (Quit: Client closed)
[10:31:31] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[10:33:15] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Quit: Bridge terminating on SIGTERM)
[10:34:51] *** Joins: kaos02 (~kaos02@12.186.233.220.static.exetel.com.au)
[10:38:41] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[10:39:53] *** Quits: jazzy (~jaziz@172.58.38.189) (Read error: Connection reset by peer)
[10:40:14] *** Joins: jazzy (~jaziz@172.58.38.189)
[10:43:09] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (Quit: leaving)
[10:43:39] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[10:45:37] *** Quits: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net) (Read error: Connection reset by peer)
[10:45:55] *** Joins: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net)
[10:46:27] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:46:57] *** Joins: seednode (~seednode@user/seednode)
[10:48:55] *** Quits: visl (visl@user/visl) (Ping timeout: 250 seconds)
[10:50:09] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[10:50:25] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Client Quit)
[10:52:22] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 252 seconds)
[10:52:56] *** Joins: greedom (~greedom@2001:16b8:2e2b:7d00:f91b:9923:636c:9526)
[10:53:10] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[10:55:05] *** Joins: gusto (~Augustus@109.255.100.54)
[10:55:25] *** Joins: AlanMD (~AlanMD@188.27.5.247)
[10:57:39] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[10:58:03] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 244 seconds)
[10:58:14] *** Joins: Gurkenglas (~Gurkengla@dslb-088-075-022-191.088.075.pools.vodafone-ip.de)
[11:01:56] *** Joins: jazzy2 (~jaziz@172.58.38.189)
[11:02:16] <aphysically> is there some recommended cross platform way for setting up multi-version python environments for tox
[11:02:31] <aphysically> it's not really a problem on my current linux distribution (and I'm also only supporting py3.9 right now anyway)
[11:02:44] <aphysically> is that normally just up to every enduser to set up?
[11:03:10] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:04:27] *** Joins: visl (visl@user/visl)
[11:05:01] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 252 seconds)
[11:05:53] <stealth_> aphysically, i feel like you might be over thinking things.. don't you want to get your project done first?
[11:06:10] *** Quits: jazzy (~jaziz@172.58.38.189) (Ping timeout: 252 seconds)
[11:06:10] *** Quits: regreg (~regreg@2a02:2f09:531a:c700:5cc8:6d3e:c41b:4102) (Ping timeout: 252 seconds)
[11:06:36] *** Joins: carl- (~carl-@185.103.188.130)
[11:06:48] <aphysically> my code is already maybe 95% feature complete to the bash script, there's some stuff being in python could allow me to add, but I'm not particularly concerned about it
[11:07:18] <aphysically> it's only ~3k LOC, which is just complicated enough to make unit testing and stuff interesting I guess
[11:07:40] *** Quits: kevinlc (~kevinalh@2800:200:e8d0:20b::4) (Ping timeout: 240 seconds)
[11:08:08] <aphysically> but without being so long that it's a chore for learning :P
[11:08:09] <The-Compiler> aphysically: on Windows you'd usually just use the python.org installers, on macOS Homebrew has different versions, on Ubuntu there's the deadsnakes PPA - and finally, https://github.com/pyenv/pyenv is pretty nice for macOS/Linux in general (not to be confused with venv)
[11:08:12] *** Quits: k_sze (~k_sze@mail2.kalunite.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:08:13] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[11:08:36] *** Joins: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[11:08:37] *** Joins: zepolen (~zepolen@athedsl-4550038.home.otenet.gr)
[11:08:41] *** Joins: k_sze (~k_sze@mail2.kalunite.net)
[11:09:16] *** Quits: sysopch (~sysopch@2001:b07:6469:cc5f:914b:c960:faf2:650e) (Quit: Leaving)
[11:10:58] *** Quits: carl- (~carl-@185.103.188.130) (Ping timeout: 244 seconds)
[11:11:56] <deniska> Don't forget to remove deadsnakes python when upgrading ubuntu to the next release though
[11:12:19] <deniska> Or you'll have to familiarize yourself with darker corners of apt
[11:12:31] *** Quits: AlanMD (~AlanMD@188.27.5.247) (Ping timeout: 244 seconds)
[11:12:38] *** jazzy2 is now known as jazzy
[11:13:16] <stealth_> deniska, doesn't the package-manager handle removing what isn't supported?
[11:13:26] <aphysically> right now I mostly stick to gentoo on desktop/workstation and debian on servers
[11:13:29] <The-Compiler> I think the upgrader asks you to disable PPAs, yeah - but it's been a while since I used Ubuntu
[11:13:35] <deniska> also '/usr/lib/python3/dist-packages' is in the default sys.path of a python from deadsnakes which isâ€¦ debatable decision
[11:13:47] <The-Compiler> btw I use Archlinux (or something)
[11:13:56] <aphysically> but I'm a bit unsatisfied with debian, I always find myself getting peeved with needing dependencies that are too new about 6 months before a new debian release
[11:14:02] <stealth_> deniska, o wow
[11:14:36] <aphysically> so I might switch to something with a bit of a faster release cycle than 2.5 years or whatever debian ends up with realistically
[11:14:49] <The-Compiler> as a developer of a somewhat popular Python project (qutebrowser), Debian and Ubuntu LTS are a pain, yeah
[11:15:21] <stealth_> rolling release are the best!!!
[11:15:28] <deniska> stealth_: so, imagine you're on ubuntu which uses python3.6 and have python3.8 installed from deadsnakes. You upgrade to ubuntu which uses python3.8. The package manager compares python3.8 version you have already installed to the version from the new release, deadsnakes is newer, so it keeps it
[11:15:40] *** Joins: kosh (~kosh@user/kosh)
[11:15:41] *** Quits: greedom (~greedom@2001:16b8:2e2b:7d00:f91b:9923:636c:9526) (Remote host closed the connection)
[11:15:54] *** Joins: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838)
[11:16:00] <stealth_> deniska, no way, i use https://manjaro.org/
[11:16:06] <deniska> stealth_: and then few months later you notice that tkinter isn't installed and trying to install it makes apt really unhappy :)
[11:16:07] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[11:16:16] <aphysically> I like the stable distributions for a web server in particular, the long release cycle just tends to be a teeeeeny bit too slow for me
[11:16:20] <stealth_> deniska, package-manager is smart enough to auto remove whats not supported
[11:16:34] *** Joins: greedom (~greedom@2001:16b8:2e2b:7d00:f91b:9923:636c:9526)
[11:16:54] <deniska> so now you have to convince apt to basically downgrade python3.8 without removing the whole system
[11:17:18] <stealth_> deniska, that does suck, I also don't use os python enough! i just custom compile my working copy, this way there is no conflict
[11:17:36] <deniska> pyenv doesn't have this problem, but I'm too lazy
[11:19:05] <stealth_> deniska, you are asking for pain :p
[11:20:10] *** Joins: slav0nic (slav0nic@python.su)
[11:20:54] <aphysically> I've always wanted to try arch, particularly since it has a heavier user base/AUR and such
[11:21:05] <aphysically> but I have the sunk cost fallacy with gentoo
[11:21:13] <theprophet> when talking about iterables, does idea of looping is also automaticly included? or iterables can iterate without looping?
[11:22:08] <theprophet> like if i dont use , for in, or while or if else, does iterable is still iterable? or iteration looses its meaning without looping it?
[11:22:10] *** Quits: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838) (Ping timeout: 240 seconds)
[11:22:23] <stealth_> theprophet, what you mean by looping? like 1, 2, 3, 1, 2, 3,  ... ?
[11:22:29] <theprophet> yes
[11:22:44] <deniska> theprophet: iterables are often used in loops, but it's not the only way to use them
[11:22:53] <theprophet> i see
[11:23:06] <stealth_> theprophet, iterator can go on for as long as there is a stop to it
[11:23:09] <The-Compiler> theprophet: it's still an iterable, and there are ways to consume it without explicitly looping over it - for example, list(it) would turn it into a list (by iterating over it internally)
[11:23:12] <deniska> theprophet: for example you can do list(iterable) and it will construct a list with items iterable returned
[11:23:16] *** Joins: ilmais1n (~il@irc.oh1cgn.fi)
[11:23:21] <The-Compiler> hehe :)
[11:23:22] <theprophet> so it will just iterate one time without loops is that correct?
[11:23:30] <stealth_> theprophet, this could be list with 10 items or infinity loops
[11:23:52] <theprophet> got it
[11:24:03] *** Joins: mei (~mei@user/mei)
[11:24:14] <deniska> theprophet: if we get technical about it, iterable is something you can call iter() over and it will return an iterator. Iterator is something you can call next() on to get the next item out of it (or exception if there's no more items)
[11:24:21] <theprophet> so if there are 1000 items, it will iterate for every piece of them and then stop?
[11:24:42] *** Joins: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838)
[11:24:44] <stealth_> theprophet, what if you have `while True: yield 1` now you can `next()` without a stop!
[11:25:31] <theprophet> ok, but can while loop affect non iterables?
[11:25:46] <theprophet> that has no method __next__ inside
[11:26:27] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-405a-c628-91bb-f055.res6.spectrum.com) (Quit: jarthur)
[11:26:32] <theprophet> oh ook i get its not related
[11:27:12] *** Quits: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838) (Remote host closed the connection)
[11:27:17] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[11:27:24] *** Joins: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838)
[11:28:16] <theprophet> ok thanks guys, i still need to analyze this, i need to fully understand
[11:29:04] *** Joins: y1n (~y1n@84-115-64-28.wifi.dynamic.surfer.at)
[11:30:14] *** Quits: WhizzWr (Whizz@s-o-m-e.h-o-s-t.name) (Quit: Bye!)
[11:30:40] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Ping timeout: 240 seconds)
[11:32:07] *** Joins: palasso (~palasso@user/palasso)
[11:32:59] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[11:33:48] *** Joins: andi_ (~andi@user/andi/x-3467420)
[11:34:12] *** Quits: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838) (Ping timeout: 245 seconds)
[11:35:29] *** Joins: sandb0y (pirate@user/sandb0y)
[11:35:53] *** Joins: varaindemian (uid73404@id-73404.charlton.irccloud.com)
[11:38:56] <jinsun> aphysically: btw for your TypedDict problem you can use the functional form instead of class syntax, see https://bugs.python.org/issue44915
[11:40:00] <aphysically> ah
[11:40:06] *** Joins: slavaqq (~slavaqq@sdmail.sdserver.cz)
[11:40:17] <aphysically> a bit less readable, but not bad for my case anyway
[11:41:35] <jinsun> although you were just "shadowing" a built in, so it was just linter warning not syntax eror
[11:41:39] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[11:41:47] <jinsun> so just disabling the linter warning also works in your case
[11:41:55] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 252 seconds)
[11:42:19] <jinsun> but in case of keywords as dict keys, the functional form is the only way
[11:42:36] <aphysically> it looks like the functional form doesn't support inheritance and some other stuff
[11:42:49] <aphysically> a bit awkward but probably fine for most cases
[11:43:58] *** Quits: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com) (Read error: Connection reset by peer)
[11:44:40] <jinsun> this is again where pydantic is much better
[11:45:38] <aphysically> yeah
[11:45:43] *** Joins: dvx (~dvx@185.63.97.64)
[11:45:48] <jinsun> you can do `format_: str  = Field(alias="format")` in the class declaration in pydantic
[11:46:56] *** Joins: jmft2 (~jmft2@81.149.115.87.dyn.plus.net)
[11:49:41] *** Quits: greedom (~greedom@2001:16b8:2e2b:7d00:f91b:9923:636c:9526) (Remote host closed the connection)
[11:50:10] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[11:57:19] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[11:57:59] *** Quits: jazzy (~jaziz@172.58.38.189) (Ping timeout: 244 seconds)
[11:59:32] *** Joins: fikran (~fikran@user/fikran)
[12:01:05] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 244 seconds)
[12:02:57] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[12:04:36] *** Joins: jazzy (~jaziz@172.58.36.50)
[12:04:49] <supakeen> ok, this is a new one even for me: https://bpa.st/raw/7SVA
[12:05:02] <supakeen> i'm familiar with the message but have never seen it *on* an `await`, someone shed some light? :)
[12:06:44] *** Joins: appinv (~appinv@102.118.99.190)
[12:07:11] <stealth_> supakeen, more code?
[12:09:03] <theprophet> can iterables be infinite without python loop functions?
[12:09:58] *** Joins: raxor2k (~raxor2k@78.158.252.74)
[12:09:59] <stealth_> theprophet, sure if you pass `iter` a callback function
[12:10:03] *** Joins: WhizzWr (Whizz@s-o-m-e.h-o-s-t.name)
[12:10:29] <theprophet> can you please show me code example? if thats not too much to ask
[12:10:36] <Payam> Does any one know hot to add a task to a running loop from a regular function in Asyncio?
[12:10:42] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[12:11:02] *** Joins: rendar (~rendar@user/rendar)
[12:11:24] <deniska> theprophet: https://bpa.st/W7PQ
[12:11:44] <theprophet> deniska ty
[12:12:12] <theprophet> oh ok this is for I example
[12:12:12] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[12:12:28] <theprophet> i meant without python loop functions
[12:12:38] <theprophet> like for in , or while and etc
[12:12:42] <supakeen> stealth_: Here's an MWE https://bpa.st/YDHA but it's not about the code it's the reasoning behind a non-awaited coro on a line that *is* awaiting
[12:12:49] <supakeen> specifically, that message
[12:12:53] <supakeen> it happens on some signals
[12:13:16] <deniska> theprophet: for loop is there to demonstrate it working, the iterable itself doesn't involve loops
[12:13:37] <deniska> theprophet: or I'm not quite getting what you want an example of
[12:13:49] <raxor2k> what would people say benefits are using sqlAlchemy instead of pymysql and opposite ?
[12:14:22] <theprophet> thats exactly what i was asking., if iterable is able to be infinite without loop functions and now you answered
[12:14:26] <deniska> raxor2k: sqlalchemy is two things, core and orm
[12:14:27] <theprophet> deniska
[12:14:49] <stealth_> supakeen, hmm isn't that an infinity loop?
[12:14:55] <theprophet> deniska iterables itself dont invovle loops
[12:15:21] *** Joins: desophos (~desophos@c-24-14-63-128.hsd1.il.comcast.net)
[12:15:26] <raxor2k> deniska: meaning ?
[12:15:53] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[12:15:54] <Payam> Actually I want to run a async function from a regular function. The async function should add tasks to runing loop. Any help?
[12:16:20] <theprophet> once iterable returns all the arguments it invovles, it stops
[12:16:42] <deniska> raxor2k: I mean, by sqlalchemy people may mean two different parts of sqlalchemy library, the core which is a connection manager, query builder etc, and orm which is object relational mapping
[12:17:06] *** Quits: appinv (~appinv@102.118.99.190) (Ping timeout: 244 seconds)
[12:18:13] <deniska> raxor2k: the benefit of using the core is that you can more easily switch between various connectors and databases, with query builder it's easier to correctly generate queries, especially if queries themselves are dynamic
[12:18:41] <deniska> raxor2k: now whether to use an orm is a more loaded question because it will heavily influence the structure of your program
[12:20:21] *** Quits: p-i- (~Ohmu@2403:6200:8870:cca9:c4fe:784:743e:4d3a) (Remote host closed the connection)
[12:20:44] *** Joins: czuk_cza (~mist@188.147.99.19.nat.umts.dynamic.t-mobile.pl)
[12:21:01] *** Joins: p-i- (~Ohmu@2403:6200:8870:cca9:bcb1:c491:2ad:ec64)
[12:21:05] *** Joins: shad (~shad@user/shad)
[12:21:50] <stealth_> theprophet, https://bpa.st/NLOQ
[12:22:44] <theprophet> stealth_ got it,, thanks man
[12:22:49] <stealth_> theprophet, https://bpa.st/BC4Q
[12:23:27] <theprophet> stealth_ nice
[12:23:31] <stealth_> theprophet, :)
[12:23:42] *** Joins: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com)
[12:23:47] <raxor2k> deniska: i see :)
[12:23:56] <stealth_> is it just me or there are things you know, that you don't even you knew!
[12:24:29] <theprophet> lol
[12:27:01] *** Quits: y1n (~y1n@84-115-64-28.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[12:28:47] *** Joins: ice9 (~ice9@user/ice9)
[12:29:20] *** Quits: sus (zero@user/zeromomentum) (Quit: the lounge - https://webirc.envs.net)
[12:29:50] *** Joins: sus (zero@user/zeromomentum)
[12:30:52] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 252 seconds)
[12:31:23] <desophos> hi, i'm having a peculiar issue with runpy. i'm using runpy.run_module to run a 3rd-party package's __main__.py, which uses subprocess.Popen to launch an executable. the issue is that the executable refuses to exit by any means short of a forced "end task" until my app is closed. my app needs to open and close this other exe during its operations. i was using subprocess.run with `python -m ...`, which worked fine, but bundling my
[12:31:23] <desophos> app into an exe means the python interpreter is unavailable. i know this is a niche and complicated issue, but i would really appreciate any clues! thanks :) relevant code: https://bpa.st/2GSQ
[12:31:34] *** Joins: zisu8 (~textual@p200300eab73b6c0091ec8bd4d3a901ba.dip0.t-ipconnect.de)
[12:32:10] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[12:34:10] *** Quits: Payam (~Payam@c188-150-219-9.bredband.tele2.se) (Ping timeout: 252 seconds)
[12:35:21] *** Joins: hendursaga (~weechat@user/hendursaga)
[12:35:46] <supakeen> stealth_: yes, it is and it's supposed to but is it related?
[12:36:26] <desophos> the only thing i can think of is that it's some interaction between runpy and subprocess that's causing the issue. maybe patching sys.argv is also causing problems? i've tried everything i can think of but i haven't gotten any closer to figuring out what's going wrong
[12:36:39] *** dcaro_away is now known as dcaro
[12:36:41] <stealth_> supakeen, could be a glitch!
[12:37:10] <jinsun> desophos: why the mock.patch?
[12:37:27] *** Joins: b3z (~b3z@user/b3z)
[12:38:27] <desophos> jinsun, because this module is CLI-only and runpy.run_module has no way to pass in argv that i could find
[12:38:32] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[12:38:41] <b3z> Anyone knowing a good library for converting grib2 files to json? (No, the java grib2json which apparently everyone on the internet seems to be using is not working in my case)
[12:39:07] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[12:39:15] *** Joins: y1n (~y1n@84-115-64-28.wifi.dynamic.surfer.at)
[12:39:24] *** Quits: hendursa1 (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[12:39:46] *** Joins: Norore (~weechat@balder.ens.fr)
[12:39:57] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[12:40:16] *** Joins: henbruas (~henbruas@ti0003a400-3211.bb.online.no)
[12:40:30] <desophos> i might actually just end up refactoring that package to allow usage via function calls instead of this convoluted nonsense
[12:41:39] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[12:41:39] <stealth_> supakeen, did the error happen when you stopped or killed the process?
[12:42:32] <supakeen> no
[12:42:44] <supakeen> it happens spuriously during normal operation every now and then
[12:42:53] <supakeen> i see these in my logs a few times per day or so
[12:43:04] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi)
[12:43:07] *** Joins: d0ku (~d0ku@178.43.56.75.ipv4.supernova.orange.pl)
[12:44:01] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Client Quit)
[12:44:28] <deniska> supakeen: maybe something else doesn't await the function this await is in?
[12:44:47] <supakeen> it's just weird, i haven't seen the message in a context like this before :)
[12:45:10] *** Quits: zepolen (~zepolen@athedsl-4550038.home.otenet.gr) (Ping timeout: 252 seconds)
[12:45:20] <deniska> but I can't see either how that could happen, but it's probably cursed
[12:46:35] *** Quits: zisu8 (~textual@p200300eab73b6c0091ec8bd4d3a901ba.dip0.t-ipconnect.de) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[12:47:06] *** Joins: darksun (~darksun@user/darksun)
[12:49:07] *** Joins: zisu8 (~textual@p200300eab73b6c0091ec8bd4d3a901ba.dip0.t-ipconnect.de)
[12:49:08] *** Joins: lordrishav (~LordRisha@user/lordrishav)
[12:49:46] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:50:24] <stealth_> supakeen, did you past a link to your code?
[12:51:27] <supakeen> yes
[12:51:32] <supakeen> you even commented on it
[12:52:00] <stealth_> ya i lost it
[12:52:08] <supakeen> 07:42:42     supakeen | stealth_: Here's an MWE https://bpa.st/YDHA but it's not about the code it's the reasoning behind a non-awaited coro on a line that *is* awaiting
[12:52:33] *** Quits: cow0w (~user@bzq-11-168-31-138.red.bezeqint.net) (Quit: Leaving)
[12:53:01] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[12:53:45] *** Joins: emika5 (~emika@83.136.182.244)
[12:53:58] *** Quits: emika (~emika@185.207.249.151) (Ping timeout: 252 seconds)
[12:53:58] *** emika5 is now known as emika
[12:53:59] <stealth_> supakeen, can you recreate the error?
[12:54:06] *** Joins: legola (~legola@46.235.100.27)
[12:55:11] <supakeen> it happens sporadically as the process(es) run, it hasn't stopped happening
[12:57:46] *** Joins: PJBoy (~PJBoy@user/pjboy)
[12:57:56] <stealth_> supakeen, change to `print(message, flush=True)` and it should print something like '' or b'', before error!
[12:58:30] *** Joins: Naan (~Naan@user/naan)
[12:59:50] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::4433)
[13:00:05] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[13:00:08] <supakeen> The print call is *after* the line that emits the warning.
[13:00:18] <supakeen> So I don't really follow :)
[13:00:54] *** Joins: YaknotiS (~YaknotiS@user/yaknotis)
[13:00:55] <stealth_> supakeen, i am just thinking it returning too fast, `await` shouldn't be that fast, there needs to be a wait/sleep time for socket.recv
[13:01:37] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[13:01:38] *** Joins: szymon (~ugh@staticline-31-183-186-12.toya.net.pl)
[13:03:19] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 252 seconds)
[13:04:05] <stealth_> supakeen, when you `if message is None` you should either exit or `await sleep(0.001)` this is not efficient, this should have been implemented in `get_message` but its returning `None` or whatever
[13:04:24] <stealth_> supakeen, also look at your CPU usage while you are running this
[13:05:22] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[13:05:47] <supakeen> You are confusing me, I don't call 'socket.recv'; I get a warning that I am not awaiting a coroutine. How does this relate to being too fast?
[13:06:30] <stealth_> supakeen, https://aioredis.readthedocs.io/en/latest/getting-started/#pubsub-mode you bypassed the `async with async_timeout.timeout(1):` and `await asyncio.sleep(0.01)` in your code!
[13:06:50] *** Joins: hudo_ (~hhudo_@37.24.178.194)
[13:07:15] <supakeen> Yes, because I don't want to listen for messages for only one second.
[13:07:17] *** Joins: plastico (~plastico@neomutt/plastico)
[13:07:57] <stealth_> supakeen, you are waiting 1ms between messages
[13:08:17] *** Joins: PaddyF (~PaddyF@user/paddyf)
[13:08:25] <stealth_> or you are are rapid firing it like crazy! lol CPU must be at 100%
[13:08:30] *** Joins: p-i-_ (~Ohmu@2403:6200:8870:cca9:c4fe:784:743e:4d3a)
[13:08:43] <stealth_> it even broke `await` from triggering! lol
[13:08:46] <supakeen> "you bypassed the `async with async_timeout.timeout(1):` and `await asyncio.sleep(0.01)` in your code" the `async with async_timeout.timeout()` means to cancel after 1 second, the `await asyncio.sleep(...)`, sure but I feel like that's a misguided save point
[13:08:55] <supakeen> my cpu is not at a 100%, no
[13:09:08] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[13:09:30] <stealth_> supakeen, ya, just have `await asyncio.sleep(0.001)` at the very least.
[13:09:48] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 244 seconds)
[13:10:28] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:10:37] <DnzAtWrk> jesus google
[13:10:37] <supakeen> how does not having this 'break await from triggering'?
[13:10:47] <DnzAtWrk> What is the command for opening a jupyter notebook directly via terminal
[13:10:56] <DnzAtWrk> can't be that bloody hard
[13:11:10] *** Quits: p-i- (~Ohmu@2403:6200:8870:cca9:bcb1:c491:2ad:ec64) (Ping timeout: 240 seconds)
[13:11:27] <stealth_> supakeen, i don't know why it does, but it does, maybe someone else can tell you or ask python-dev, maybe they know.
[13:12:17] *** Joins: Henryx (~ebianchi@2a01:4f8:1c0c:76ad::1)
[13:12:38] *** Joins: mrwick (~mrwick@user/mrwick)
[13:12:48] <DnzAtWrk> jupyter notebook notebook.ipynb
[13:12:51] <DnzAtWrk> jeez
[13:12:59] <supakeen> well then, does anyone else know why awaiting a coroutine in a loop breaks an await from triggering?
[13:14:24] *** Joins: nomic (~nomic@185.217.117.169)
[13:14:52] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 252 seconds)
[13:15:35] *** Joins: gggp (~textual@111.63.14.115)
[13:16:59] *** Quits: jmft2 (~jmft2@81.149.115.87.dyn.plus.net) (Quit: This computer has gone to sleep)
[13:17:10] *** Quits: gggp (~textual@111.63.14.115) (Client Quit)
[13:18:12] <deniska> supakeen: does the worning say where the coroutine was created?
[13:18:16] <deniska> warning*
[13:18:47] *** Quits: palasso (~palasso@user/palasso) (Ping timeout: 245 seconds)
[13:19:13] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[13:19:17] *** Joins: palasso (~palasso@user/palasso)
[13:20:08] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:20:51] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[13:21:01] <stealth_> supakeen, btw, i wasn't laughing at you, thought it was funny cause it has happened to me so many times, it drove me off the wall... why i know how to fix it.
[13:21:46] <theprophet> can somebody please explain what map() is? and how it works?
[13:21:57] *** Joins: Naan` (~Naan@user/naan)
[13:22:02] *** Joins: mozgalom (~mozgalom@ipnet-gw.157.157.97.111.simnet.is)
[13:23:38] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[13:23:52] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[13:23:54] <supakeen> deniska: it points to the line only, nothing more :)
[13:24:11] <jinsun> theprophet: https://docs.python.org/3/library/functions.html#map
[13:24:13] *** Quits: nergar (~Nergar@177.225.152.16) (Quit: Leaving)
[13:24:15] <supakeen> theprophet: `map` applies a function to an iterable and gives you a new iterable of those values.
[13:24:16] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 244 seconds)
[13:24:27] <supakeen> Basically `[f(x) for x in L]` -> `map(f, L)`.
[13:25:09] <theprophet> what you mean by new iterable?
[13:25:16] *** Joins: gggp (~textual@111.63.14.115)
[13:25:28] *** Quits: mozgalom (~mozgalom@ipnet-gw.157.157.97.111.simnet.is) (Read error: Connection reset by peer)
[13:25:38] <supakeen> Something you can iterate over.
[13:25:44] <stealth_> theprophet, `ints = list(map(int, '123'.split()))`  # takes '1' uses `int('1')` give you `[1, ...]`
[13:26:00] <supakeen> And the terminology is probably that it returns an iterator, but eh.
[13:26:14] <theprophet> stealth_ ahh i see
[13:26:18] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[13:26:24] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[13:26:36] <theprophet> @steal
[13:26:42] *** Quits: y1n (~y1n@84-115-64-28.wifi.dynamic.surfer.at) (Ping timeout: 245 seconds)
[13:26:43] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:26:47] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2)
[13:26:59] <theprophet> stealth_ thanks
[13:28:20] <stealth_> you don't need to use `.split()` there but w/e over engineered
[13:28:26] <deniska> supakeen: well, if a program gets interrupted somehow, chances are it will get interrupted after coroutine was created but before it was updated
[13:28:31] <deniska> s/updated/awaited/
[13:28:38] <theprophet> stealth_ so it can be done with each of the arguments?
[13:29:00] <deniska> supakeen: are you sure a program/thread just doesn't get interrupted/restarted once in a while?
[13:29:12] <stealth_> theprophet, yes, values needs to be iterable
[13:29:57] <theprophet> stealth_ in other words map() is cloning whats inside the list and gives another list?
[13:30:07] <supakeen> deniska: ah, that's a good hint since there is some signals involved, yes
[13:30:19] *** Joins: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[13:30:32] <lesshaste> is that an automated way to get rid of walrus operators in python code?
[13:30:36] <lesshaste> is there
[13:31:33] <theprophet> stealth_ is that correct ?
[13:31:49] <lesshaste> are they equivalent to code without the walrus in a simple way?
[13:31:59] <stealth_> theprophet, its basically wrapping the `int` function with each values. `list(map(int, '123'))` is same as `[int(i) for i in '123']`
[13:32:39] *** Joins: sharperguy__ (~sharpergu@2001:1438:4010:3101:10a::3133)
[13:32:52] <supakeen> deniska: and it makes a bunch more sense than going 'too fast' there's probably sequence points all over
[13:32:55] <varaindemian> https://www.irccloud.com/pastebin/HV6GOWvR/
[13:33:19] <deniska> supakeen: I'd be surprised if python had such aâ€¦ mechanical problem :)
[13:33:25] <varaindemian> internal bookmark = inside the doc? external url = any url?
[13:33:35] <supakeen> same, thanks bud
[13:34:07] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Ping timeout: 252 seconds)
[13:35:26] *** Quits: sharperguy_ (~sharpergu@2001:16b8:5c38:4f00:8d27:e7b:d16b:14f9) (Ping timeout: 256 seconds)
[13:35:39] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[13:35:44] *** Naan` is now known as Naan
[13:36:36] <stealth_> supakeen, deniska it clearly is a bug in `await` or `.send()` co-routine, finding it will be hard and it needs to properly recreated to file a bug report! even if you do, they will most likely way why are not waiting/sleeping in between? ...
[13:37:30] <stealth_> why i said it was a glitch, its rare to see in python, but it does exist.
[13:38:28] *** Quits: lordrishav (~LordRisha@user/lordrishav) (Quit: WeeChat 2.8)
[13:39:42] *** Quits: nomic (~nomic@185.217.117.169) (Quit: Leaving)
[13:40:06] <deniska> stealth_: if a coroutine which was never awaited gets garbage collected, runtime makes a warning, creating a warning if it isn't the case would be a bug
[13:40:12] *** Joins: y1n (~y1n@84-115-65-53.wifi.dynamic.surfer.at)
[13:40:46] <deniska> stealth_: and coroutines can be in never awaited state even if there's `await` right in front of them when the code is interrupted
[13:41:07] <deniska> our working hypothesis is that code does get interrupted
[13:41:09] <DnzAtWrk> can you make a loop cover multiple cells in jupyter?
[13:41:42] <stealth_> deniska, till you sit down and actually find that to be the case it would be an assumption at the best.
[13:41:52] *** Joins: sazawal (~sazawal@122.162.80.16)
[13:42:30] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[13:42:45] <deniska> stealth_: run this code a few times and kill it using ctrl+c, you'll see a warning sometimes: https://bpa.st/6ZIQ
[13:45:23] <stealth_> deniska, ya looks like that killing my system
[13:45:50] *** Joins: debnet (sid330295@python/afpy/debnet)
[13:46:17] <stealth_> deniska, file a bug report
[13:47:44] <desophos> lesshaste, have you seen https://github.com/pybpc/walrus ?
[13:49:30] *** Joins: computeiro (~Wender@189.37.69.185)
[13:50:06] <stealth_> deniska, could be some kind of lock blocking? there has to be some kind of bookkeeping
[13:51:06] *** Joins: maharg101 (~maharg101@savoy.force9.co.uk)
[13:52:10] *** Quits: audiocat (~audio@2603-8081-1801-3bb5-6f81-efc3-489b-3fbb.res6.spectrum.com) (Ping timeout: 240 seconds)
[13:52:26] <deniska> stealth_: doesn't seem like a bug to me
[13:53:11] <deniska> stealth_: python never promised not to interrupt an expression
[13:53:22] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 252 seconds)
[13:53:26] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[13:54:20] <deniska> if you want cleaner termination it's up to you to register signal handlers and such
[13:54:38] *** Quits: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Read error: Connection reset by peer)
[13:55:48] <stealth_> deniska, i figured you would get some weird answer like that. Though it is a bug cause a code like that shouldn't break out of python with error, sure it should totally fly your process but still..
[13:56:15] <stealth_> processor*
[13:56:18] *** Quits: gggp (~textual@111.63.14.115) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[13:57:03] <stealth_> its a valid code.
[13:57:19] <deniska> stealth_: it doesn't break with the error, it gets interrupted by the outside world if you press ctrl+c
[13:58:07] <stealth_> deniska, in your recreation, but supakeen was having that issue, and i have dealt with it many times as well.
[13:59:39] <deniska> maybe the logging system doesn't mark program terminations clearly enough, or maybe multiple threads are involved
[13:59:57] *** Quits: Jigsy (~Jigsy@user/jigsy) (Remote host closed the connection)
[14:00:18] <stealth_> deniska, in my case it was single process, no thread
[14:00:21] *** Joins: Jigsy (~Jigsy@user/jigsy)
[14:01:58] *** Quits: stwange (~j@82.21.202.140) (Quit: This computer has gone to sleep)
[14:02:39] *** Joins: dev0 (~dev0@user/deepspace-link)
[14:03:05] *** Joins: jamer05 (~jamer05@user/jamer05)
[14:04:27] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[14:07:07] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[14:08:01] *** Joins: Enitin (~Enitin@82.102.22.85)
[14:08:05] <bjs> supakeen: `await foo()` is kind of like `yield from foo()` so the generator-ish thing should begin execution of `foo` immediately without going back to asyncio/whatever
[14:08:10] <DnzAtWrk> regex groups could really benefit with some type of typecasting :P
[14:08:54] *** Joins: fikran (~fikran@user/fikran)
[14:13:11] *** Quits: zisu8 (~textual@p200300eab73b6c0091ec8bd4d3a901ba.dip0.t-ipconnect.de) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[14:15:00] *** b0nn is now known as rust
[14:15:11] *** rust is now known as b0nn
[14:16:20] *** Joins: Atque (~Atque@user/atque)
[14:16:36] *** Joins: lericson (~lericson@user/lericson)
[14:17:16] <lericson> can I, in python, say "this method returns (None, Exception) or (ResultType, None)" without writing an uwieldy Union[Tuple[RT, None], Tuple[None, Exception]]?
[14:17:40] <lericson> i would be fine with a factory or something
[14:17:59] <FunkyBob> you can, but I'll hate you for it...
[14:18:01] <Tat> Regex groups can kind of be typecasted. I mean if it matches [-+]?[0-9]*\.?[0-9]+(?:[eE][-+]?[0-9]+)? it's a floating point number. etc.
[14:18:09] <FunkyBob> why would you return an exception, instead of raising it?
[14:18:26] <lericson> because sometimes you want to return an error, not break control flow
[14:18:32] <Tat> def get_exception() ?
[14:19:11] <FunkyBob> i've seen this pattern encroach from other languages that don't have exceptions, or cheap exception handling...
[14:19:40] <lericson> it's a design choice, deal with it
[14:19:57] <stealth_> lericson, `Tuple[Optional[RT], Optional[Exception]]`
[14:20:01] <lericson> errors and exceptions are /not/ the same
[14:20:27] <lericson> stealth_: I want it to be mutually exclusive, so maybe defining something like a MutexTuple or something?
[14:20:54] <lericson> iow both cannot be none simultaneously
[14:21:30] <The-Compiler> lericson: with 3.10 (or IIRC 3.7 if you do from __future__ import annotations),  tuple[RT, None] | tuple[None, Exception]
[14:21:52] *** Joins: i0e (~is0ke3@user/is0ke3)
[14:22:22] <lericson> oh no way, you can do that to get the builtin-types-as-typevars
[14:22:52] <The-Compiler> yeah, because the annotations don't get evaluated at runtime, so it doesn't matter if "invalid" things are in there (from the POV of Python)
[14:23:00] *** Joins: jmft2 (~jmft2@81.149.115.87.dyn.plus.net)
[14:23:00] <stealth_> lericson, is it worth having a complex return type?
[14:23:02] <lericson> sadly it turns out i have 3.6.9 in this env
[14:23:14] <lericson> stealth_: i think if the idea is to tell the user what i return, this will be helpful
[14:23:42] <The-Compiler> really looking forward to this once I drop 3.6 support early next year \o/
[14:24:06] <lericson> yeah i would have upgraded but dependencies rely on old tensorflows and yada yada yada
[14:24:20] <stealth_> lericson, why not `Optional[Union[Exception, ResultType]]`
[14:24:33] <lericson> that means either you return both or None?
[14:24:36] <stealth_> lericson, return 1 result and deal with it that way?
[14:24:51] <stealth_> Exception | ResultType | None
[14:24:57] <lericson> oh union
[14:25:13] <lericson> eh not in love with testing the return for exceptionness
[14:25:55] <lericson> FunkyBob: i think one particular place where using an exception for this becomes annoying is if it's intended to be used in comprehensions
[14:26:02] *** Joins: odinsbane (~mbs@pat-pool-138.crick.ac.uk)
[14:26:13] <lericson> with this pattern, you can do [x for x, err := transform(z) for z in L if err is None] for example
[14:26:19] <odinsbane> I'm having a bit of trouble with Flask on a legacy app.
[14:26:37] <lericson> but without the stroke in the middle
[14:26:55] *** Quits: y1n (~y1n@84-115-65-53.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[14:26:59] <lericson> ah there's a way to do that anyway
[14:27:17] *** Joins: lordrishav (~LordRisha@user/lordrishav)
[14:27:21] <stealth_> not sure why you are doing that in the first place! but its easy to check `if result is Exception: # elif result is None: # ... else: # ResultType
[14:27:40] <odinsbane> My webhost changed the way I need to deploy so now when I requestion www.org/url/40 my flask app tries to route it to /40 but it should be routed to /url/40
[14:27:42] <lericson> no, you would have to if isinstance(result, Exception)
[14:27:48] <FunkyBob> lericson: ok, that makes more sense
[14:27:49] <lericson> which is very not nice
[14:28:16] <stealth_> lericson, `is` in this case works.
[14:28:33] <lericson> it does not
[14:28:43] <lericson> >>> Exception() is Exception
[14:28:43] <lericson> False
[14:28:51] *** Quits: jamer05 (~jamer05@user/jamer05) (Ping timeout: 244 seconds)
[14:29:22] <stealth_> why are you returning Exception()?
[14:30:19] *** Quits: rud01f (rud0lf@user/rud0lf) (Read error: Connection reset by peer)
[14:30:23] <FunkyBob> indeed, if you need only a sentinel, any class would do...
[14:30:32] <FunkyBob> however, an instance can carry more detail
[14:31:49] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:31:55] *** Joins: rud01f (rud0lf@user/rud0lf)
[14:32:37] *** Quits: slavaqq (~slavaqq@sdmail.sdserver.cz) (Ping timeout: 256 seconds)
[14:32:44] <lericson> looking into the code again i see the real reason, the original programmer wanted _actual_ exceptions to interrupt the program, i.e. crash, so returned errors in the normal control flow
[14:33:00] <lericson> i guess the proper fix is to wrap expected exceptions in some exception subclass and only catch those
[14:33:10] <The-Compiler> sounds reasonable, yeah
[14:33:26] <odinsbane> Hmm, ok, I just mangled the PATH_INFO wsgi parameter.
[14:33:59] <The-Compiler> lericson: if you need some inspiration, I have something like that here: https://github.com/qutebrowser/qutebrowser/blob/v2.3.1/qutebrowser/misc/sql.py#L116-L168
[14:34:00] *** Joins: gggp (~textual@111.63.14.115)
[14:34:32] *** Quits: gggp (~textual@111.63.14.115) (Client Quit)
[14:36:03] <arseru> Hello! is there a matplotlib colormap with more than 12 colors?
[14:37:03] *** Quits: desophos (~desophos@c-24-14-63-128.hsd1.il.comcast.net) (Quit: Leaving)
[14:37:21] <lericson> i'll have a look,  see
[14:38:24] <lericson> ha The-Compiler
[14:38:29] <lericson> how do you know what you don't know
[14:38:38] *** mozgalom is now known as bomb-on
[14:40:09] *** Joins: y1n (~y1n@84-115-65-53.wifi.dynamic.surfer.at)
[14:41:46] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 252 seconds)
[14:42:32] *** Joins: Enitin (~Enitin@82.102.22.86)
[14:43:56] *** Joins: zepolen (~zepolen@athedsl-4550038.home.otenet.gr)
[14:45:12] *** Joins: zisu8 (~textual@p200300eab73b6c0071e3bbf6e2603221.dip0.t-ipconnect.de)
[14:46:43] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 252 seconds)
[14:47:43] *** Joins: aslicedbanjo (~aslicedba@host86-148-108-161.range86-148.btcentralplus.com)
[14:55:54] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[14:57:03] <The-Compiler> lericson: I don't understand :)
[14:58:47] *** Joins: Abrax- (~Abrax@user/abrax)
[14:58:49] <k162> poop
[14:59:53] *** Quits: Abrax (~Abrax@user/abrax) (Ping timeout: 248 seconds)
[15:00:16] *** Joins: gggp (~textual@111.63.14.115)
[15:01:30] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[15:04:05] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[15:05:05] *** Abrax- is now known as Abrax
[15:10:00] *** Quits: Kratos (~Kratos@user/abrax) (Quit: WeeChat 3.0)
[15:10:04] *** Quits: lordrishav (~LordRisha@user/lordrishav) (Quit: WeeChat 2.8)
[15:11:13] *** Joins: regreg (~regreg@2a02:2f09:531a:c700:5cc8:6d3e:c41b:4102)
[15:11:25] *** Quits: Gurkenglas (~Gurkengla@dslb-088-075-022-191.088.075.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[15:13:17] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 244 seconds)
[15:13:38] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[15:14:04] *** Joins: Kratos (~Kratos@user/abrax)
[15:14:26] *** Joins: Payam (~Payam@c188-150-219-9.bredband.tele2.se)
[15:14:37] *** Quits: jmft2 (~jmft2@81.149.115.87.dyn.plus.net) (Quit: This computer has gone to sleep)
[15:17:31] *** Quits: gggp (~textual@111.63.14.115) (Ping timeout: 252 seconds)
[15:19:23] *** Joins: gggp (~textual@111.63.14.115)
[15:21:32] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[15:24:08] *** Quits: gggp (~textual@111.63.14.115) (Ping timeout: 244 seconds)
[15:24:40] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 252 seconds)
[15:25:30] *** Joins: icebeard (~icebeard@pool-108-26-57-69.syrcny.fios.verizon.net)
[15:27:14] *** AndrewYu is now known as Andrew
[15:27:25] *** Quits: y1n (~y1n@84-115-65-53.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[15:29:04] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[15:29:26] *** Quits: icebeard (~icebeard@pool-108-26-57-69.syrcny.fios.verizon.net) (Client Quit)
[15:29:51] *** Joins: lordrishav (~LordRisha@user/lordrishav)
[15:30:43] *** Quits: shad (~shad@user/shad) (Ping timeout: 252 seconds)
[15:31:52] *** Joins: reset (~reset@user/reset)
[15:33:41] *** Joins: besnn (~besnn@user/besnn)
[15:34:48] <The-Compiler> k162: huh?
[15:35:26] *** Quits: stealth_ (~stelath_@216-197-160-97.regn.static.sasknet.sk.ca) (Quit: Leaving)
[15:36:17] <jinsun> lericson: have a look at https://github.com/dbrgn/result
[15:36:59] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[15:37:34] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 244 seconds)
[15:37:48] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[15:39:50] *** Joins: y1n (~y1n@84-115-65-223.wifi.dynamic.surfer.at)
[15:40:47] <Payam> How do I get the thread name that asyncio is running on?
[15:40:58] *** Joins: Slimgin (~quassel@097-071-159-126.biz.spectrum.com)
[15:43:42] *** Quits: dev0 (~dev0@user/deepspace-link) ()
[15:46:15] *** Joins: verified_human (~verified_@user/verified-human/x-8819513)
[15:46:33] *** Joins: Fedorasan (~fedorasan@user/fedorasan)
[15:46:47] <rakoon> Does it make sense to create a global requests.Session for the lifetime of a lets say flask application? I know that using the "with requests.Session" will close the connection, but if i use it as a global then theoritically the connection will never close?
[15:47:05] *** Quits: portalrat (~portalrat@user/portalrat) (Read error: Connection reset by peer)
[15:47:15] *** Joins: portalrat (~portalrat@user/portalrat)
[15:48:14] <rakoon> The .close puts the connection back to the pool but does it make sense to have a pool for the entire lifetime of the flask app or i should close it after my endpoint returns?
[15:48:27] <rakoon> (im not sure my question makes sense :|)
[15:49:34] <shlomif> Payam: threading.current_thread().name? https://docs.python.org/3/library/threading.html
[15:49:57] <Payam> Thanks
[15:50:45] <shlomif> Payam: note that i'm not sure of this.
[15:51:24] <Payam> it should be currentThread
[15:52:19] <shlomif> Payam: what is that?
[15:52:40] <Payam> so I all I call start_thread first then get_info_regular , what thread will get_info be running on?
[15:53:04] *** Quits: black_13 (~jjosb@209.221.58.169) (Ping timeout: 244 seconds)
[15:53:18] *** Quits: zisu8 (~textual@p200300eab73b6c0071e3bbf6e2603221.dip0.t-ipconnect.de) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[15:53:48] <jinsun> rakoon: the connection can still close because of timeout
[15:53:59] *** Quits: p-i-_ (~Ohmu@2403:6200:8870:cca9:c4fe:784:743e:4d3a) (Remote host closed the connection)
[15:54:44] *** Joins: p-i- (~Ohmu@2403:6200:8870:cca9:d54:b9f9:59eb:3eb3)
[15:55:21] *** Joins: LucaTM (~LucaTM@user/lucatm)
[16:00:23] <rakoon> jinsun: thanks, is it bad to let it "die" like this?
[16:00:34] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Remote host closed the connection)
[16:00:58] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[16:02:10] <Payam> anyone?
[16:02:31] <Slimgin> Sorry man, way above my knowledge level :(
[16:05:43] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:06:51] <jinsun> rakoon: not sure, I also don't bother with closing Session many times, nothing bad really happened, but that was for client code that ran only for few minutes or hours at max, not for long running server process
[16:07:11] <shlomif> Payam: where did you place the get_info_regular() call?
[16:07:55] <Payam> I wan to be able to put everything in asyncio loop
[16:08:06] <Payam> but mainthread is the answer to ur question
[16:11:10] *** Quits: rakoon (~rakoon@2a02:2149:824f:5900:a10c:1151:267d:ea07) (Ping timeout: 240 seconds)
[16:12:15] *** Joins: rakoon (~rakoon@2a02:2149:824f:5900:90ce:81f9:37d3:fcfd)
[16:13:04] *** Joins: shangxiao (~davids@124.182.71.141)
[16:14:33] *** Joins: Amadiro (~Amadiro@84.209.11.12)
[16:14:53] <shlomif> Amadiro: hi, sup?
[16:15:05] *** Joins: shad (~shad@user/shad)
[16:15:53] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[16:16:19] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 244 seconds)
[16:16:24] *** Joins: emika6 (~emika@83.136.182.32)
[16:16:52] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[16:18:15] <Amadiro> shlomif, not much, writing some AWS lambdas in python to automate some random tasks (like diffing interest rates on my loans etc), you?
[16:18:16] *** Joins: fikran (~fikran@user/fikran)
[16:18:34] *** Quits: emika (~emika@83.136.182.244) (Ping timeout: 252 seconds)
[16:18:34] *** emika6 is now known as emika
[16:18:56] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[16:18:57] *** Joins: i0e (~is0ke3@user/is0ke3)
[16:19:25] *** Quits: i0e (~is0ke3@user/is0ke3) (Client Quit)
[16:20:33] *** Joins: dez (uid92154@user/dez)
[16:20:57] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi)
[16:21:57] *** Quits: Sky_Net (~Sky_Net@176.14.213.85) (Quit: Leaving)
[16:23:05] *** Joins: Ecophobia (~Ecophobia@mobile-access-2e840c-136.dhcp.inet.fi)
[16:23:31] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[16:23:59] <shlomif> Amadiro: i've been thinking about https://projecteuler.net/problem=753
[16:24:27] *** Joins: u4t (~chat@78.ip-139-99-236.net)
[16:24:34] * u4t waves
[16:25:05] <u4t> is there a way to tell what --enables were sent to ./configure when building an installed python binary?
[16:25:24] <shlomif> Amadiro: i also got github actions to pass o a few
[16:25:24] <u4t> e.g. if --enable-optimizations was used
[16:25:48] <shlomif> Amadiro: i also got github actions to pass on a few projects
[16:25:50] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[16:26:13] *** Joins: dthpulse (~quassel@podciarou.sk)
[16:26:13] *** Quits: dthpulse (~quassel@podciarou.sk) (Client Quit)
[16:27:04] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[16:27:22] *** Quits: y1n (~y1n@84-115-65-223.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[16:27:35] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[16:27:37] <Amadiro> u4t, import sysconfig
[16:27:48] <Amadiro> and then the info is in there somewhere
[16:28:11] *** Joins: dthpulse (~quassel@podciarou.sk)
[16:28:18] <u4t> neato
[16:28:27] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[16:29:16] <Amadiro> python -msysconfig -e 'print(sysconfig.get_config_vars())' | grep enable-optimizations
[16:29:17] *** Quits: verified_human (~verified_@user/verified-human/x-8819513) (Quit: WeeChat 2.8)
[16:29:32] <u4t> ty
[16:29:47] <u4t> sysconfig.get_config_vars()['CONFIG_ARGS']
[16:29:51] <u4t> just what i'm looking for (:
[16:30:30] <Amadiro> shlomif, ah, I haven't looked at GH actions yet
[16:31:13] *** Quits: lordrishav (~LordRisha@user/lordrishav) (Quit: WeeChat 2.8)
[16:31:53] *** Joins: emika4 (~emika@185.207.249.62)
[16:32:16] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-58c384-213.dhcp.inet.fi)
[16:32:27] <shlomif> Amadiro++
[16:32:52] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[16:33:22] *** Quits: emika (~emika@83.136.182.32) (Ping timeout: 252 seconds)
[16:33:22] *** emika4 is now known as emika
[16:35:04] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:37:30] *** Joins: emika1 (~emika@185.207.249.73)
[16:39:24] *** Joins: y1n (~y1n@84-115-65-177.wifi.dynamic.surfer.at)
[16:39:34] *** Quits: emika (~emika@185.207.249.62) (Ping timeout: 244 seconds)
[16:39:34] *** emika1 is now known as emika
[16:40:52] *** Joins: Roey (~Roey@user/Roey)
[16:41:08] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[16:42:30] *** Quits: Amadiro (~Amadiro@84.209.11.12) (Remote host closed the connection)
[16:43:03] <bionade24> When doing threading in Python, what's the best way to implement a blocker of a function part that doesn't lock itself but waits if the lock is aqquired?
[16:43:29] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[16:43:31] *** Quits: JanC (~janc@user/janc) (Read error: Connection reset by peer)
[16:44:19] *** Joins: luva6 (~luva@178.239.173.201)
[16:44:35] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[16:45:11] <shlomif> bionade24: do you want a readers/writer lock?
[16:46:49] <bionade24> shlomif: I want threading during write, but not during dispatching and creation of a new message.
[16:46:59] *** Joins: JanC (~janc@user/janc)
[16:47:07] *** Quits: luva (~luva@178.239.173.201) (Ping timeout: 252 seconds)
[16:47:07] *** luva6 is now known as luva
[16:47:53] *** Joins: Amadiro (~Amadiro@84.209.11.12)
[16:50:11] *** Quits: Ecophobia (~Ecophobia@mobile-access-2e840c-136.dhcp.inet.fi) (Quit: WeeChat 2.8)
[16:51:34] *** Quits: y1n (~y1n@84-115-65-177.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[16:53:06] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[16:54:20] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:55:25] <DnzAtWrk> I have a waveform plot
[16:55:30] <DnzAtWrk> which I wish to summerize
[16:55:41] <DnzAtWrk> how do I fill an area inside a min and a max line?
[16:55:44] <DnzAtWrk> with matplotlib
[16:56:52] *** Quits: ELFrederich (~ELFrederi@134.244.29.70) (Remote host closed the connection)
[16:57:01] <DnzAtWrk> great, there is a fill_between function
[16:57:09] <DnzAtWrk> why the hell is google not helping me find stuff anymore :P
[16:57:38] <Slimgin> Maybe try DuckDuckGo...
[16:58:40] *** Quits: luva (~luva@178.239.173.201) (Ping timeout: 252 seconds)
[16:58:44] *** Joins: luva (~luva@178.239.167.169)
[16:58:50] *** Quits: Mija (~Mija@user/mija) (Quit: Mija)
[16:59:17] *** Joins: Fiji (~Fiji@user/fiji)
[16:59:26] <shlomif> DnzAtWrk: thanks for sharing the solution
[17:01:49] *** Quits: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com) (Quit: Blackpajamas)
[17:03:01] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[17:04:18] *** Quits: raxor2k (~raxor2k@78.158.252.74) ()
[17:05:24] *** Quits: zepolen (~zepolen@athedsl-4550038.home.otenet.gr) (Ping timeout: 244 seconds)
[17:08:43] *** Joins: manti7 (~manti7@176.10.104.94)
[17:09:42] *** Joins: swinnenb (~swinnenb@user/swinnenb)
[17:09:49] <bjs> bionade24: that sounds like a reader/writer lock,  which Python doesn't have natively
[17:10:17] <bjs> but thankfully they're not too complicated an idea
[17:10:27] *** Joins: pragmaticenigma (~pragmatic@user/pragmaticenigma)
[17:10:51] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[17:11:40] *** Joins: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net)
[17:12:13] <lericson> bjs: i was looking for that
[17:12:44] <lericson> seems like a nice lock mechanism to have
[17:15:45] <AhmedAmerican> how to remove HTML entities such as that https://bpa.st/SP2A
[17:16:04] *** Quits: ikus060 (~ikus060@96.127.228.230) (Quit: Leaving)
[17:20:33] *** Joins: hajo (~hajo@2a01:c23:8c1d:6900:821f:2ff:feef:dabf)
[17:22:20] *** Quits: legola (~legola@46.235.100.27) (Remote host closed the connection)
[17:22:33] *** Quits: BinarySavior (~BinarySav@user/binarysavior) (Quit: BinarySavior has dropped the mic)
[17:22:43] <hajo> Hi, i want to read the NAT config from a cisco ASA config file and want to convert the NAT lines into Juniper SRX syntax. Before i start to write a long parser: Is there something out there, that does this already?
[17:23:06] *** Quits: twofingersneat_ (~twofinger@174-080-036-228.res.spectrum.com) (Quit: Leaving)
[17:23:25] *** Joins: legola (~legola@46.235.100.27)
[17:23:40] *** Joins: twofingersneat (~twofinger@174-080-036-228.res.spectrum.com)
[17:23:42] *** Joins: Enitin (~Enitin@82.102.22.84)
[17:23:51] <AhmedAmerican> hajo: https://pypi.org/project/ciscoconfparse/
[17:24:10] <pragmaticenigma> AhmedAmerican: Yes, it's call a string replacement. You will either need to write a regex replace object, or simple .replace on the value stored in x
[17:24:56] <AhmedAmerican> pragmaticenigma: am aware about replacing using `\xad` but i thought that w3lib might have a function to strip entities
[17:25:12] <hajo> AhmedAmerican: Thanks. i'll have a look.
[17:25:49] <pragmaticenigma> AhmedAmerican: why would you think that? that'd be someone reinventing something that already exists elsewhere
[17:27:57] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Quit: leaving)
[17:28:20] *** Quits: legola (~legola@46.235.100.27) (Ping timeout: 256 seconds)
[17:28:21] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[17:28:25] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[17:29:49] *** Joins: legola (~legola@46.235.100.27)
[17:29:59] <pragmaticenigma> AhmedAmerican: The closest you would come is using BeautifulSoup's prettify method on the object, but you have to supply the formatter that would strip out the undesired characters/strings
[17:30:22] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:30:38] <AhmedAmerican> pragmaticenigma: that's what i was looking for, may you show me how you can do that with bs4?
[17:31:21] *** Quits: elkclone (~elkclone@user/elkclone) (Quit: Leaving)
[17:33:54] <pragmaticenigma> AhmedAmerican: https://stackoverflow.com/a/15138705
[17:35:32] *** Joins: p-i-_ (~Ohmu@2403:6200:8870:cca9:c4fe:784:743e:4d3a)
[17:35:55] <AhmedAmerican> pragmaticenigma: thank you.
[17:38:52] *** Quits: p-i- (~Ohmu@2403:6200:8870:cca9:d54:b9f9:59eb:3eb3) (Ping timeout: 252 seconds)
[17:39:45] *** Joins: Ellipsis753 (~Ellipsis7@89.238.130.71)
[17:39:48] *** Joins: timkofu (~timkofu@user/timkofu)
[17:40:22] *** Parts: Luyin (~daisy@user/luyin) (bye bye)
[17:40:32] *** Quits: jazzy (~jaziz@172.58.36.50) (Ping timeout: 244 seconds)
[17:40:33] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[17:41:22] <Ellipsis753> Hi. Is there a module that could do some HTTP server mocking/spoofing? I'd love to be able to write Server("127.0.0.1:5000").expect_get("/", "example response") so that my client code could make real HTTP requests to the local mock server?
[17:41:38] <Ellipsis753> Would also be useful for Twilio webhook tests, etc.
[17:42:10] *** Quits: regreg (~regreg@2a02:2f09:531a:c700:5cc8:6d3e:c41b:4102) (Ping timeout: 252 seconds)
[17:42:14] <pragmaticenigma> Ellipsis753: Python has a built in webserver. But if you're looking to just mock connections, there are better options
[17:42:32] *** Quits: hendursaga (~weechat@user/hendursaga) (Quit: hendursaga)
[17:42:32] *** Joins: regreg (~regreg@2a02:2f09:531a:c700:5d8c:ecfe:741:2bba)
[17:42:58] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:43:05] <pragmaticenigma> Ellipsis753: Why are you unit testing a connection?
[17:43:17] <Ellipsis753> pragmaticenigma: The built in server is useful. But I'm really just looking to expect one request then give a response. Then continue.
[17:44:41] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[17:44:44] <Ellipsis753> pragmaticenigma: For unit tests that use external webhook API it'd be useful just to set the next server response then wait until the request comes in.
[17:45:15] <Ellipsis753> I want to have the local server respond "reject" then run test1(). Then set the local server to respond "accept" then run test2(). Etc.
[17:45:27] <Ellipsis753> I can do it with Flask, but it's not really built for it.
[17:45:58] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 252 seconds)
[17:47:47] *** Quits: Skyfire (~pyon@user/pyon) (Ping timeout: 240 seconds)
[17:48:27] *** Quits: rakoon (~rakoon@2a02:2149:824f:5900:90ce:81f9:37d3:fcfd) (Ping timeout: 245 seconds)
[17:48:32] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[17:49:19] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 244 seconds)
[17:49:37] *** Quits: frost (~frost@59.71.240.119) (Quit: Connection closed)
[17:49:59] *** Joins: besnn (~besnn@user/besnn)
[17:51:23] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 244 seconds)
[17:51:42] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[17:52:21] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[17:54:35] *** Quits: somlis (~somlis@user/somlis) (Read error: Connection reset by peer)
[17:55:31] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 244 seconds)
[17:56:03] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::4433) (Quit: Konversation terminated!)
[17:58:02] *** Joins: nyah (~nyah@bcdcb6e3.skybroadband.com)
[17:59:50] *** Joins: Hey (~Guest88@2607:fea8:3220:59b0:4cb1:fb18:2739:6fd6)
[18:00:30] *** Quits: noctavian_ (~noctavian@gateway/tor-sasl/noctavian) (Ping timeout: 276 seconds)
[18:00:53] <pragmaticenigma> Ellipsis753: I write mock "services" for that sort of testing. I don't use a webserver because it becomes too difficult to know if the test failed due to the code being tested, or the web service failing for some unknown reeason. Instead, for classes that talk to APIs I pass in a "request" object that does the connections to the service. That way in my unit tests, I can write a mock "request" class that issues an expected response.
[18:00:59] <Hey> Hi there, I am having issues installing aws-adfs
[18:01:10] <Hey> Here is the output I get
[18:01:11] *** Quits: Fiji (~Fiji@user/fiji) (Quit: Leaving)
[18:01:20] <Hey> https://pastebin.com/5aQLHj8X
[18:01:50] *** Joins: cth (~Cthulchu@193.194.107.250)
[18:01:52] <Hey> not sure where to begin to solve this one.
[18:02:26] <pragmaticenigma> Ellipsis753: That approach eliminates the need for an active web server/service and I can have 100% certainty that my expected result is not being influnced by a mistake in the temporary stand up web service
[18:02:57] <theprophet> @hey Check the logs for full command output.
[18:03:59] *** Quits: koolazer (~koo@user/koolazer) (Ping timeout: 250 seconds)
[18:04:00] <Ellipsis753> pragmaticenigma: Thank you for the suggestion. Sounds like the correct way usually, but unfortunately because I have to work with a real external API it doesn't really work for me here. Thanks anyway.
[18:04:16] <Ellipsis753> It looks like pytest-httpserver may be able to do what I need however.
[18:04:40] <Hey> @theprophet where might I find that?
[18:04:46] <Hey> I didn't realize I was logging that
[18:05:13] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[18:05:48] <theprophet> @hey clang: error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'
[18:05:48] <theprophet>     error: command '/usr/bin/clang' failed with exit code 1
[18:06:40] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:08:52] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[18:09:29] *** Joins: TinoDidriksen (~TinoDidri@tinodidriksen.com)
[18:09:36] *** Parts: TinoDidriksen (~TinoDidri@tinodidriksen.com) ()
[18:10:45] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[18:11:42] <Hey> @theprophet, honestly, I don't know how to solve this.
[18:12:00] <Hey> I know I have some version conflict, and missing dependecies
[18:12:38] <theprophet> Hey check this out.. https://stackoverflow.com/questions/41233594/installing-pip-on-macos-sierra/46464921
[18:12:40] <Hey> Kinda wondering how do I  restart and do a  clean dependency for python 3
[18:13:00] <pragmaticenigma> @Hey: might also be a good idea to be doing this in a venv instead, while you get things figured out. Then you'd be able to just wipe the directory and start over by creating a new venv
[18:13:17] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:13:24] <Hey> yeah.. I discovered that later.lol.
[18:14:04] *** Quits: kenoba (~kenoba@user/kenoba) (Quit: The Lounge - https://thelounge.chat)
[18:15:07] *** Joins: kenoba (~kenoba@user/kenoba)
[18:15:23] *** Joins: Blackpajamas (~Blackpaja@167.167.46.2)
[18:15:30] <Hey> I amy have pooched this thign.
[18:15:32] <Hey> *thing
[18:15:35] <theprophet> Hey try to install directly from ide ur using. not from the command prompt
[18:15:47] <Hey> ok
[18:15:57] *** Joins: blingrang_ (~blingrang@user/blingrang)
[18:16:29] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[18:16:47] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi)
[18:17:14] *** Joins: Elzington (~Elzington@static-68-235-44-10.cust.tzulo.com)
[18:17:23] *** Quits: blingrang_ (~blingrang@user/blingrang) (Client Quit)
[18:18:33] <Hey> easy_install has Syntax: invalid syntax
[18:18:45] <Hey> I have too many python versions installed
[18:18:49] <Hey> I need to clean up
[18:19:08] <theprophet> @hey do that yes
[18:19:25] <Hey> Is it simply a matter of uninstalling?
[18:19:35] <Hey> is there a best practice or good method for this?
[18:19:53] <grym> Hey: python3 -m venv somevenv; somevenv/bin/python -m pip install somepackage
[18:19:54] <theprophet> @hey sometimes it is, i am not sure if its your case
[18:20:10] *** Quits: czuk_cza (~mist@188.147.99.19.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 240 seconds)
[18:20:40] <grym> (then tell your IDE where somevenv/bin/python is
[18:21:39] *** Joins: Ecophobia (~Ecophobia@mobile-access-2e840c-136.dhcp.inet.fi)
[18:21:39] <Hey> Here is what I have
[18:21:41] <Hey> python            python-config     python2           python2.7         python2.7-config  python3           python3-config    python3.9         python3.9-config  pythonw           pythonw2.7
[18:21:51] *** Joins: dld (~davidlowr@2601:197:600:1210:3d0a:b99:963f:cf07)
[18:22:37] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Ping timeout: 250 seconds)
[18:22:42] *** Quits: shawwwn (uid6132@id-6132.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[18:23:15] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[18:24:23] *** Joins: rancurt2 (~rancurt2@75-172-26-41.tukw.qwest.net)
[18:24:31] *** Quits: kenoba (~kenoba@user/kenoba) (Quit: The Lounge - https://thelounge.chat)
[18:24:40] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[18:25:06] *** Joins: kenoba (~kenoba@user/kenoba)
[18:25:07] <theprophet> @hey wait,why do you need so many python versions?
[18:25:24] <supakeen> There's only two there.
[18:25:29] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 244 seconds)
[18:25:39] <grym> theprophet: that's not so many :)
[18:25:58] <theprophet> ok i lost him, you guys help him
[18:26:03] <grym> i appear to have 11 base interpreters installed today
[18:26:30] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[18:26:31] <Soni> how do we print the stdin (as-is)?
[18:26:52] <supakeen> Soni: sys.stdin.buffer is a file-like that provides the bytes as they are.
[18:27:00] *** Quits: kenoba (~kenoba@user/kenoba) (Client Quit)
[18:27:23] *** Joins: VaniaPy (~VaniaPy@46.12.6.159.dsl.dyn.forthnet.gr)
[18:27:35] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[18:27:38] *** Joins: fikran (~fikran@user/fikran)
[18:27:46] *** Joins: kenoba (~kenoba@user/kenoba)
[18:28:01] <VaniaPy> Hello, is there a function that stops the convertion of dates to nano in a dataframe?
[18:28:05] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[18:28:33] *** Quits: kenoba (~kenoba@user/kenoba) (Client Quit)
[18:28:35] *** Quits: lethu (~lethu@user/lethu) (Ping timeout: 244 seconds)
[18:29:00] <Soni> supakeen: uh how do you just... read the whole thing? .-.
[18:29:00] *** Joins: lethu (~lethu@user/lethu)
[18:29:09] *** Joins: kenoba (~kenoba@user/kenoba)
[18:29:11] <varaindemian> https://www.irccloud.com/pastebin/ORfBh2U6/
[18:29:15] <supakeen> Soni: `sys.stdin.buffer.read()` -> gives the bytes of stdin :)
[18:29:17] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[18:29:29] <Soni> ohh, right
[18:29:40] *** Joins: mickey (~user@user/mickey)
[18:29:41] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-347a-2581-fcf8-c1f7.res6.spectrum.com)
[18:29:41] *** Quits: kenoba (~kenoba@user/kenoba) (Remote host closed the connection)
[18:29:43] <varaindemian> not sure if I use correctly the function on line 36
[18:29:46] <varaindemian> `docx_search_and_add_hyperlink(user_docx, prog, 'www.google.com')`
[18:30:02] <Soni> (uhh how long has it been since last time we were here >.<)
[18:30:27] <grym> mmm, RISTs
[18:30:42] <hajo> AhmedAmerican: ciscoconfparse is not a perfect fit to my task...
[18:32:05] <Soni> (we kinda don't remember *anything* about python except maybe the syntax lol)
[18:32:10] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[18:32:29] <Soni> (and we struggle with the python reference manual as always)
[18:32:40] <supakeen> Soni: 12th of August, 2021.
[18:32:59] <Soni> supakeen: before that. that was the "using python with git" one.
[18:33:11] <Soni> (using git with python? eh w/e, but anyway)
[18:33:18] <supakeen> 7th of July, 2021.
[18:33:22] *** Joins: pyeveryt_ (~pyeveryth@c-73-38-4-158.hsd1.nh.comcast.net)
[18:33:27] <Soni> huh, only that long?
[18:33:50] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[18:33:59] *** Joins: saribro (~swinnenb@user/swinnenb)
[18:34:13] <supakeen> Yep :) (and the 24th of June before that) but that's enough log grepping.
[18:34:24] <varaindemian> anyone can help me hre?
[18:34:40] *** Quits: cth (~Cthulchu@193.194.107.250) (Ping timeout: 240 seconds)
[18:34:58] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 252 seconds)
[18:36:24] *** Joins: tbcr (~tbcr@user/tbcr)
[18:36:32] <Soni> python docs don't really come with an index the same way rust/java/etc do, which is an issue for us :/
[18:36:46] *** Joins: noctavian (~noctavian@gateway/tor-sasl/noctavian)
[18:36:55] *** Quits: swinnenb (~swinnenb@user/swinnenb) (Ping timeout: 250 seconds)
[18:37:15] *** Joins: Naan (~Naan@user/naan)
[18:37:16] <shangxiao> varaindemian: i mean, without reading too much code it looks like it's being called as intended
[18:37:19] *** Joins: kenoba (~kenoba@user/kenoba)
[18:37:37] <grym> Soni: zeal's nice
[18:38:09] <Soni> (there's no e.g. "read in RawIOBase" when you search for "read". it does show "io - Core tools for working with streams" but it's not as immediately obvious)
[18:38:25] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[18:38:34] *** Joins: fanis30 (~anon@adsl-180.37.6.1.tellas.gr)
[18:38:36] *** Joins: besnn (~besnn@user/besnn)
[18:38:53] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:38:55] <Soni> grym: what's zeal?
[18:39:14] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[18:40:37] <grym> https://zealdocs.org/
[18:41:34] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-d0e3-c6c5-b443-1364.res6.spectrum.com)
[18:41:44] *** Quits: kenoba (~kenoba@user/kenoba) (Client Quit)
[18:42:04] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-f53f-9536-c646-bcb2.res6.spectrum.com)
[18:42:07] *** Parts: ppw (~ppw@user/ppw) ()
[18:42:07] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-347a-2581-fcf8-c1f7.res6.spectrum.com) (Ping timeout: 252 seconds)
[18:42:59] *** Joins: shla (~root@user/shla)
[18:43:04] *** Joins: kenoba (~kenoba@user/kenoba)
[18:43:34] <shla> hi, can I somehow import built-in math in math.py?
[18:44:01] <shangxiao> shla: hmm?
[18:44:06] <bjs> shla: not if you're running it like `python math.py`
[18:44:18] <bjs> (or similar)
[18:44:29] <bjs> shla: i would just rename math.py to something else
[18:44:46] <shla> ok, that's what I thought
[18:44:48] <shla> thanks
[18:44:51] <nedbat> Soni: Python docs index? https://docs.python.org/3/genindex-all.html
[18:44:54] *** Parts: VaniaPy (~VaniaPy@46.12.6.159.dsl.dyn.forthnet.gr) ()
[18:45:35] <bjs> nedbat: tbh, the io stuff especially is kind of hard to follow through the docs
[18:46:13] <bjs> eventually you reach the actual docs for sys.stdin or whatever and all it says is that it's a "file" and that its interface can be found in "io"
[18:46:26] <varaindemian> shangxiao:
[18:46:27] <varaindemian> yeah
[18:46:40] *** Joins: pyevery__ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[18:46:40] <varaindemian> can I give a private message
[18:46:41] <varaindemian> ?
[18:47:16] <Soni> nedbat: oh huh
[18:47:38] <Soni> bjs: yep .-.
[18:47:42] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Ping timeout: 244 seconds)
[18:47:54] <Soni> nedbat: why's the search feature so painfully bad then?
[18:49:23] <varaindemian> shangxiao: this thing fails for some reason: 		docx_search_and_add_hyperlink(user_docx, re.compile(r'plain'), r'www.google.com')
[18:49:46] *** Quits: pyeveryt_ (~pyeveryth@c-73-38-4-158.hsd1.nh.comcast.net) (Ping timeout: 244 seconds)
[18:50:21] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[18:51:14] *** Quits: kenoba (~kenoba@user/kenoba) (Quit: The Lounge - https://thelounge.chat)
[18:51:32] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[18:52:23] <hajo> I have a string with braces () and want to extract whats inside the braces, but re.sub always includes the () in the output.
[18:52:36] *** Joins: kenoba (~kenoba@user/kenoba)
[18:52:49] <hajo> re.sub(r'^nat (.*) source .*$', r'\1', line).strip() -> '(outside1,outside1)'
[18:53:23] <lericson> hajo: \((.*)\)
[18:53:29] <deniska> hajo: () has a special meaning in regex, you need to escape them if you want them literally
[18:53:32] <lericson> () means something special
[18:54:07] <hajo> damn, so easy!
[18:54:21] <hajo> Thank you all three.
[18:54:36] <lericson> there are only two of us
[18:54:44] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[18:54:57] <hajo> ;-) Thank you two!
[18:55:05] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[18:55:12] <nedbat> bjs: i won't claim the docs are perfect, there's plenty of room for improvement.
[18:55:20] *** saribro is now known as swinnenb
[18:55:57] <nedbat> Soni: fwiw, I use google to search the Python docs. with site:docs.python.org
[18:58:37] *** Quits: ihristov (~ihristov@85.187.46.226) (Ping timeout: 252 seconds)
[18:59:04] *** Quits: d3sync (~d3sync@130.43.80.239.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[18:59:05] *** Joins: syrius (syrius@titan.stormtek.net)
[18:59:27] <jaggz> hajo, not in all regex are ()'s "magic"
[18:59:58] <jaggz> sometimes they are magic only if you put the \( on them
[19:00:11] *** Joins: cth (~Cthulchu@193.194.107.250)
[19:00:24] *** Quits: X4 (~Fernandos@2a02:908:178:1900:acb6:b168:a371:48b8) (Quit: Client closed)
[19:00:28] <jaggz> but in python it uses the system where () are magic and \ makes them not-magic
[19:00:37] *** Joins: srhm (~srhm@user/srhm)
[19:01:46] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[19:02:11] *** Joins: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838)
[19:02:12] *** Joins: marjinal1st (~Thunderbi@178.251.45.235)
[19:02:22] *** Quits: rmm (~rmm@user/rmm) (Ping timeout: 250 seconds)
[19:02:49] *** Joins: rmm (~rmm@user/rmm)
[19:03:01] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[19:03:30] *** Quits: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com) (Quit: Leaving)
[19:03:43] *** Joins: iflema (~ian@user/iflema)
[19:04:41] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 248 seconds)
[19:05:03] *** Joins: srhm (~srhm@user/srhm)
[19:06:08] *** Joins: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com)
[19:06:30] *** Joins: jetchisel (jetchisel@user/jetchisel)
[19:06:38] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[19:06:52] *** Quits: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838) (Ping timeout: 252 seconds)
[19:07:04] *** Joins: srhm (~srhm@user/srhm)
[19:08:06] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[19:08:22] *** Quits: jasper_ (~user@styria.daemonized.org) (Quit: jasper_)
[19:08:33] *** Joins: sharperguy_ (~sharpergu@2001:16b8:5c38:4f00:8d27:e7b:d16b:14f9)
[19:11:16] *** Quits: sharperguy__ (~sharpergu@2001:1438:4010:3101:10a::3133) (Ping timeout: 252 seconds)
[19:12:10] *** Joins: Gurkenglas (~Gurkengla@dslb-088-075-022-191.088.075.pools.vodafone-ip.de)
[19:12:20] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:14:04] *** Quits: timkofu (~timkofu@user/timkofu) (Read error: Connection reset by peer)
[19:16:34] *** Joins: akaWolf (~akaWolf@akawolf.org)
[19:17:57] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[19:18:08] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[19:18:14] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[19:20:34] *** Joins: Everything (~Everythin@37.115.210.35)
[19:21:05] <u4t> function decorators are sexy (:
[19:22:32] <Pilate> love me a good decorator
[19:23:42] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[19:23:44] *** Joins: junktext (~junktext@77.247.181.216)
[19:24:46] <hodapp> something something metaclass
[19:25:10] <u4t> sssh
[19:25:56] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[19:26:28] *** Quits: Blackpajamas (~Blackpaja@167.167.46.2) (Remote host closed the connection)
[19:26:37] *** Quits: pacbard (~pacbard@user/pacbard) (Ping timeout: 252 seconds)
[19:27:08] <aphysically> that reminds me I need to convert one of my classes to a dataclass
[19:27:09] *** Joins: Blackpajamas (~Blackpaja@167.167.46.2)
[19:27:56] *** Quits: Blackpajamas (~Blackpaja@167.167.46.2) (Remote host closed the connection)
[19:28:31] *** Joins: Blackpajamas (~Blackpaja@167.167.46.2)
[19:28:47] <pragmaticenigma> sounds like a regression
[19:29:00] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[19:29:19] *** Joins: Barones (~Barones@2804:7f3:8987:bc1e:2fa4:b907:6e4c:8567)
[19:29:29] <u4t> i probably need to turn my function decorator into part of a class decorator
[19:29:57] *** Quits: Ecophobia (~Ecophobia@mobile-access-2e840c-136.dhcp.inet.fi) (Quit: WeeChat 2.8)
[19:30:28] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[19:30:57] *** Quits: Falcon| (andreas@user/falcon/x-0540249) (Quit: Falcon|)
[19:30:58] <aphysically> I still need to split into some more modules
[19:31:50] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[19:32:01] *** Joins: Falcon| (~falcon@user/falcon/x-0540249)
[19:32:20] <aphysically> I'm also not entirely convinced on the way I organized it
[19:32:41] <u4t> i know that feeling (:
[19:32:44] <pragmaticenigma> I don't think anyone ever is
[19:34:40] *** Joins: ayusta (Thunderbir@gateway/vpn/protonvpn/ayustae)
[19:35:19] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[19:36:01] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 252 seconds)
[19:36:01] *** ayusta is now known as ayustae
[19:36:25] *** Joins: pro_z (~pro_z@37.214.79.197)
[19:36:30] *** Quits: Cypris (uid511277@user/cypris) (Quit: Connection closed for inactivity)
[19:37:15] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[19:37:39] *** Joins: lastshell (~lastshell@user/lastshell)
[19:37:48] <gitesh> does python have polymorphism or encapsulation or other things like Java?
[19:37:54] <bjs> gitesh: of course
[19:38:21] <shlomif> gitesh: yes, it does
[19:38:46] *** Quits: cth (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[19:38:50] <gitesh> in this specialization they teach 'inheritance' only
[19:38:58] *** Quits: fanis30 (~anon@adsl-180.37.6.1.tellas.gr) (Quit: WeeChat 3.2)
[19:39:05] *** Quits: p-i-_ (~Ohmu@2403:6200:8870:cca9:c4fe:784:743e:4d3a) (Remote host closed the connection)
[19:39:32] <gitesh> are they advanced concepts and so not taught in beggining classes
[19:39:45] *** Joins: d3sync (~d3sync@130.43.80.239.dsl.dyn.forthnet.gr)
[19:39:52] *** Quits: srhm (~srhm@user/srhm) (Ping timeout: 252 seconds)
[19:39:57] *** Joins: p-i- (~Ohmu@2403:6200:8870:cca9:1dbd:757d:5f84:a0aa)
[19:39:57] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[19:40:08] <bjs> gitesh: maybe,  or maybe your resource just doesn't use the same words
[19:41:06] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[19:43:50] <theprophet> @gitesh i have passed those subjects in python like 4 days ago.
[19:43:50] *** Quits: francis (francis@user/francis) (Quit: rb)
[19:44:19] *** Joins: bulletsquid (~bulletsqu@user/bulletsquid)
[19:44:24] <gitesh> theprophet: cool
[19:44:32] <theprophet> @gitesh both subjects are easy ass hell in reality, but google makes it super confused.
[19:44:34] <u4t> "like java"? not exactly, but it can do the same things (and more)
[19:45:28] <theprophet> @gitesh not google directly,but all those geekfor geeks and programiz and etc.
[19:45:40] <gitesh> theprophet: lol
[19:45:49] <grym> i really would like a "never show me results from ..." option
[19:46:15] <theprophet> @grym amen
[19:46:28] <u4t> pretty sure google's search syntax does let you do that
[19:46:35] *** Joins: LuxuryMode (uid91005@id-91005.charlton.irccloud.com)
[19:46:35] <grym> u4t: manually, yes
[19:46:44] <gitesh> google should implement 'like' button like facebook to rate the sites
[19:46:45] <grym> (it's the - operator, iirc)
[19:47:24] *** Quits: rancurt2 (~rancurt2@75-172-26-41.tukw.qwest.net) (Quit: Leaving)
[19:47:54] <u4t> gitesh: well, a per-user "preferred site" list maybe
[19:48:04] <theprophet> @gitesh oh and one more thing, dont watch Bro Code's tutorials. on youtube. he will misslead you in everyway.
[19:48:15] *** Joins: LuksNuke (~LuksNuke@2001:7e8:c00d:2800:5632:a48d:a3f2:8471)
[19:48:25] <u4t> https://ahrefs.com/blog/google-advanced-search-operators/
[19:48:27] <bulletsquid> If I do `import package`, where package is the name of a module I have locally in the project directory and also the name of a globally installed python package. Which one gets imported?
[19:48:49] *** Joins: francis (francis@user/francis)
[19:49:05] <u4t> theprophet: ooh that sounds fun
[19:49:14] <u4t> theprophet: you got an example?
[19:49:19] <gitesh> what is the difference between package and module
[19:49:35] <theprophet> @u4t oh jesus i cant even count
[19:49:40] <u4t> (:
[19:49:41] <bulletsquid> good question, I dont know lol
[19:49:45] <The-Compiler> gitesh: a package is a folder (with an __init__.py), a module is a Python file
[19:50:19] <The-Compiler> gitesh: though sometimes package is also used to refer to a package as something you install via pip from PyPI
[19:50:21] <gitesh> I have to look up now what does `__init__.py` file do in the folder
[19:50:26] <u4t> packages are a special case of modules
[19:50:35] <gitesh> i have seen that file when i install and run django project
[19:50:38] *** Joins: MarderIII (~MarderIII@2001:985:e889:1:91dd:369e:8b04:c6be)
[19:50:43] <u4t> basically a bunch of related modules, for more modularity (:
[19:50:50] *** Joins: lordrishav (~LordRisha@user/lordrishav)
[19:51:15] <theprophet> @u4t first of all he dont care that you dont know what he is doing, he wont even explai it properly, for example he will tell you 10% of the information out of 100% and even that 10% is wrong, and you gotta go and google everylitle thing to specify what the hell this guy was telling or doing in his tutorial.
[19:51:35] <u4t> interesting
[19:51:49] <grym> gitesh: it makes that directory a package! :) (it can be a completely empty file)
[19:52:09] <bjs> gitesh: when you `import package` in Python it reads `package/__init__.py`
[19:52:49] <theprophet> @u4t interesting? more like torture
[19:53:17] *** Quits: LuksNuke (~LuksNuke@2001:7e8:c00d:2800:5632:a48d:a3f2:8471) (Remote host closed the connection)
[19:53:21] <u4t> that too (:
[19:53:21] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Ping timeout: 256 seconds)
[19:53:44] <theprophet> @u4t especialy when ur starting and you feel like wow thats so good 12 hour tutorial.
[19:53:58] <u4t> oh dear
[19:54:15] <theprophet> and after 1 week you realize how much you missed
[19:54:25] <theprophet> and you gotta go back to start
[19:55:54] *** Quits: mteo (francis@user/francis) (Quit: rb)
[19:55:54] *** Joins: operational (~operation@imgonnaf.art)
[19:56:47] *** Quits: lordrishav (~LordRisha@user/lordrishav) (Quit: WeeChat 2.8)
[19:57:03] <operational> wondering if someone can link to a resource on troubleshooting a messed up python install.. one of my Kali boxes seems to think that there are no modules installed, but according to pip and pip3, the modules are installed
[19:57:11] *** Joins: mteo (francis@user/francis)
[19:57:19] <operational> not sure where to start
[19:58:13] <nedbat> operational: use "python3 -m pip" instead of "pip" to see if it gives a different answer
[19:58:37] <theprophet> operational same thing happened to me, i just went and instaled modules from ide.
[19:59:04] <operational> nedbat: "No module named pip" yikes!
[19:59:24] <nedbat> operational: what do "which python3" and "which pip3" show you?
[19:59:50] <operational> "/home/[user]/bin/python3"
[19:59:58] <operational> /usr/bin/pip3
[20:00:25] <operational> hm.. on my functioning box, python is in /user/bin/python3
[20:00:38] <grym> operational: ok, so python3's not the python that pip3 knows about
[20:00:58] <grym> operational: what's `type -a python3` (that'll show you all of them)
[20:01:33] *** Quits: lethu (~lethu@user/lethu) (Remote host closed the connection)
[20:01:37] <operational> grym: /home/[user]/bin/python3, /usr/bin/python3, /bin/python3
[20:01:53] * nedbat must remember the "type -a" thing is better than the "where" thing
[20:03:30] <grym> operational: so i bet /usr/bin/python3 -m pip list will show you the things pip3 thinks are installed
[20:04:23] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[20:05:00] *** Joins: jmft2 (~JMFT@82.3.54.26)
[20:05:00] <operational> yep and a module i need is there grym
[20:05:16] <operational> how do i fix this without having to prepend the path everywhere?
[20:05:52] *** Joins: lazy1 (~tebeka@bzq-109-67-135-144.red.bezeqint.net)
[20:06:09] *** Joins: czuk_cza (~mist@188.147.99.19.nat.umts.dynamic.t-mobile.pl)
[20:06:19] <aphysically> this is the class that really needs to be a dataclass..and reorganized https://bpa.st/DAEA
[20:06:44] <aphysically> and then a separate constructor for initializing it from input arguments I guess
[20:08:23] *** Joins: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:118e:c9c6:5d52:3b82)
[20:08:52] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[20:09:24] <CrtxReavr> MS is previewing a web-based VScode.
[20:10:14] <CrtxReavr> https://www.theregister.com/2021/09/01/microsoft_previews_free_visual_studio/
[20:10:29] *** Joins: trilochan (~trilochan@202.51.76.54)
[20:10:45] *** Parts: trilochan (~trilochan@202.51.76.54) ()
[20:13:20] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:14:09] *** Joins: verified_human (~verified_@user/verified-human/x-8819513)
[20:14:26] <vvdaiwrw> they're trying hard to canibalize in the coding landscape. Seems like going back to fierce M$/Borland competition times.
[20:15:47] <vvdaiwrw> All this code pilot stuff, buying github, embedding linux, etc.
[20:16:15] <vvdaiwrw> it is.... fearful.
[20:17:25] <jaggz> How can I retain only sequential sequences from a list?
[20:17:46] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 252 seconds)
[20:17:51] <jaggz> [1,3,4,5,8,100,101,102,103,108]
[20:18:29] <jaggz> if I want sequences of 3+ long, the final list should be [3,4,5,100,101,102,103]
[20:18:38] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 244 seconds)
[20:18:43] <jaggz> if I want 4+ long, only the [100,101,102,103] should be spit out
[20:18:47] <jaggz> (retained)
[20:21:02] <mefistofeles> jaggz: you would have to do it manually, got through the elements, check the next m elements are in a sequence, if not, go to element i+m or something like that and check again
[20:21:15] <mefistofeles> *go
[20:21:32] *** Joins: goldfish (~goldfish@user/goldfish)
[20:21:34] *** Parts: bulletsquid (~bulletsqu@user/bulletsquid) (WeeChat 2.8)
[20:21:56] <mefistofeles> might want to kinda monkey patch an index error there, for a lack of a better solution in this quick way I'm suggesting
[20:22:08] <mefistofeles> a try-except could do that
[20:22:24] <kosh> vvdaiwrw, github would not exist right now without microsoft, they where going bankrupt and nobody else wanted to buy them
[20:22:45] <pyevery__> hi can someone help me with this question? https://discuss.pytorch.org/t/how-to-stack-adaptiveavgpool2d-and-softmax/130866 I am not sure what exact argument dimension needs to be passed to Softmax that is stacked to AdaptiveAvgPool2D
[20:22:58] <grym> CrtxReavr: kick open a github repo and press '.'
[20:23:46] *** Joins: p-i-_ (~Ohmu@2403:6200:8870:cca9:c4fe:784:743e:4d3a)
[20:23:47] <jaggz> mefistofeles, yeah it's irritating.. this is what i'm working on right now: https://paste.debian.net/1209940/
[20:23:54] <mefistofeles> CrtxReavr: yes, that's kinda old new, tbf :P
[20:24:10] *** Joins: Enitin (~Enitin@82.102.22.86)
[20:24:15] <jaggz> similar.  going through indices, and for each, counting up..
[20:24:16] <mefistofeles> jaggz: my ISP blocks paste.debian.net... :/
[20:24:19] <phy1729> jaggz: https://gist.github.com/phy1729/afe8ee9ffed60a1c90111d586a5c47d1
[20:24:48] *** Quits: verified_human (~verified_@user/verified-human/x-8819513) (Quit: WeeChat 2.8)
[20:25:07] <jaggz> phy1729, examining
[20:25:11] <jaggz> mefistofeles, you in china??
[20:25:16] <mefistofeles> phy1729: that only retains the sequential ones, but you cannot limit by size with that code
[20:25:20] <mefistofeles> jaggz: no
[20:25:39] <jaggz> who in the world blocks a pastebin site
[20:25:52] <phy1729> Change the 3s to an argument if needed
[20:26:16] *** Quits: p-i- (~Ohmu@2403:6200:8870:cca9:1dbd:757d:5f84:a0aa) (Ping timeout: 256 seconds)
[20:26:25] <mefistofeles> phy1729: ok... I don't like it, though, but if it works, it works xD
[20:26:28] <jaggz> yeah I can assemble a bunch of mini-serieses
[20:26:28] <grym> jaggz: many people
[20:26:30] <jaggz> hrm
[20:26:48] <jaggz> I don't like the idea though
[20:27:06] <jaggz> (currently this particular process is rate limited so it wouldn't be an issue)
[20:27:19] <jaggz> it's for gathering background noise samples
[20:27:27] <phy1729> It feels like there should be a pretty functional/list comp way, but it doesn't come to mind
[20:27:41] <jaggz> and due to the unreliability of the audio-snippet classification, I want to ensure it gets bundles of samples of a minimum length
[20:27:56] *** Joins: nergar (~Nergar@177.225.152.16)
[20:29:29] *** Quits: marjinal1st (~Thunderbi@178.251.45.235) (Ping timeout: 244 seconds)
[20:29:45] *** Joins: ravan (~ravan@user/ravan)
[20:31:22] <CrtxReavr> mefistofeles, get a better ISP.
[20:31:30] <mefistofeles> CrtxReavr: it's my company's... :/
[20:31:34] <CrtxReavr> Or maybe just use better DNS.
[20:31:47] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:1084:3dd6:ee9c:22f5)
[20:31:48] <jaggz> maybe a counter
[20:31:54] <jaggz> phy1729, did you just write that up??
[20:31:54] <mefistofeles> not much I can do other than a VPN or something like that
[20:31:55] <jaggz> so fast
[20:31:59] <mefistofeles> but I don't really want the hussle
[20:32:12] <CrtxReavr> I think you mean "hassle."
[20:32:17] <mefistofeles> right
[20:33:33] <jaggz> mefistofeles, what paste site's your overlord allow?
[20:33:51] <CrtxReavr> s/\'//
[20:33:53] <mefistofeles> the one suggested in this channel's topic works
[20:34:44] *** Quits: pragmaticenigma (~pragmatic@user/pragmaticenigma) (Quit: Leaving)
[20:34:44] <grym> as it happens it's also a good one
[20:35:02] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[20:35:05] <jaggz> okay I'm trying a counter.. https://bpa.st/OH7Q
[20:35:13] <grym> i was quite pleased when my editor became able to paste files or highlighted regions to it
[20:35:35] <jaggz> (it's buggy.. don't rely on it. I'm not incrementing counter there.. oops)
[20:35:42] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[20:36:00] <CrtxReavr> emacs couldn't do ``:r file``?
[20:36:04] <CrtxReavr> Or similar?
[20:36:31] *** Quits: shlomif (~shlomif@87.68.240.100.adsl.012.net.il) (Ping timeout: 252 seconds)
[20:36:46] *** dcaro is now known as dcaro_away
[20:37:00] *** Joins: fikran (~fikran@user/fikran)
[20:37:36] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[20:37:44] *** Joins: zepolen (~zepolen@athedsl-4550038.home.otenet.gr)
[20:37:50] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[20:38:07] <grym> as usual there are like 12 ways, but wiring bpa.st into them happened semi-recently
[20:38:09] *** Joins: Sheilong (uid293653@id-293653.charlton.irccloud.com)
[20:38:10] *** Quits: lazy1 (~tebeka@bzq-109-67-135-144.red.bezeqint.net) (Ping timeout: 252 seconds)
[20:38:32] <CrtxReavr> Oh - mistook what you meant.
[20:38:34] <vvdaiwrw> kosh: I don't get this point. Are you glad they "saved" them for "us"? That sounds like that. I myself don't care for github, git isn't going bankrupt, and that's what matters, git as a service competition is here to stay, if the died, git as a service would still be here, and possibly less concentrated, which is not M$ aim, that's why they bought it in the first place, to dominate. When I pointed
[20:38:35] <vvdaiwrw> the github buy out, I wasn't excluding they were bankrupting or not.
[20:39:03] *** Joins: Pixi_ (~Pixi@user/pixi)
[20:39:07] <CrtxReavr> I know a guy who's on the github autopilot team.
[20:39:18] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[20:39:32] <vvdaiwrw> and?
[20:39:34] <CrtxReavr> I teased him mercilously about that 40% security flaw rate.
[20:40:12] <vvdaiwrw> hmm, I ignore what that is.
[20:40:59] *** Joins: rakoon (~rakoon@2a02:2149:824f:5900:99c3:d365:425:4e9d)
[20:41:28] *** Quits: Pixi (~Pixi@user/pixi) (Ping timeout: 252 seconds)
[20:41:57] *** Quits: Norore (~weechat@balder.ens.fr) (Quit: WeeChat 1.9.1)
[20:42:13] <kosh> vvdaiwrw, I am happy that github did not go bankrupt, there are not many good alternatives
[20:42:41] <vvdaiwrw> sure there's
[20:43:10] <vvdaiwrw> I myself self-host with gitea on a rpi, miles better :D
[20:45:03] *** Joins: raxor2k (~raxor2k@78.158.252.74)
[20:45:05] <raxor2k> bjs: are you here
[20:45:11] *** Quits: Blackpajamas (~Blackpaja@167.167.46.2) (Quit: Blackpajamas)
[20:45:11] <bjs> raxor2k: hi
[20:45:19] <raxor2k> bjs: i solved that thing from yesterday
[20:45:19] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 252 seconds)
[20:45:24] <hodapp> the alternatives I've used are fine, even the lightweight ones (especially the lightweight ones)
[20:45:31] *** Joins: keir (~keir@user/keir)
[20:45:35] <bjs> raxor2k: good! :)
[20:45:41] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:46:37] *** Joins: jdwidari (~jdwidari@2001:420:c0c4:1006::35f)
[20:46:40] <raxor2k> not only that, but i cleaned my code as well
[20:46:43] <raxor2k> all i needed was a good long sleep
[20:47:10] *** Quits: Barones (~Barones@2804:7f3:8987:bc1e:2fa4:b907:6e4c:8567) (Remote host closed the connection)
[20:47:23] *** Joins: Barones (~Barones@2804:7f3:8987:bc1e:2fa4:b907:6e4c:8567)
[20:47:30] *** Quits: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[20:48:24] <grym> consolidation helps
[20:50:12] *** Joins: ckdcreation (~ckdCreati@147.55.130.32)
[20:50:38] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 256 seconds)
[20:51:13] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[20:51:44] *** Joins: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte)
[20:52:37] *** Joins: newpy (~newpy@2601:280:4381:1390:fc7d:b965:6587:3eef)
[20:53:24] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 276 seconds)
[20:53:34] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[20:54:47] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:55:55] *** Quits: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte) (Client Quit)
[20:56:47] *** Quits: ckdcreation (~ckdCreati@147.55.130.32) (Quit: Leaving)
[20:57:06] *** Joins: ckdCreations (~ckdCreati@147.55.130.32)
[20:59:10] *** Quits: ravan (~ravan@user/ravan) (Read error: Connection reset by peer)
[20:59:20] *** Joins: Akuli (~Akuli@82-203-162-232.bb.dnainternet.fi)
[20:59:33] <raxor2k> bjs: but of course i have another issue i have to solve
[20:59:37] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 252 seconds)
[20:59:38] <raxor2k> when i finally thought i reached the goal ..
[21:00:01] <theprophet> guys what exactly is epoch in python?
[21:00:23] <bjs> theprophet: is there some context, where did you see the word "epoch" be used in relation with
[21:00:28] <bjs> raxor2k: well that's programming
[21:00:32] <grym> theprophet: without context, the term doesn't have a special meaning
[21:01:05] <theprophet> in time module for python
[21:01:18] <raxor2k> bjs: https://bpa.st/QB6A
[21:01:27] *** Joins: emika0 (~emika@212.102.44.59)
[21:01:28] <theprophet> when i check ctime it says 1970
[21:01:33] <grym> theprophet: seconds since 00:00:00 UTC on 1 January 1970
[21:01:40] *** Quits: emika (~emika@185.207.249.73) (Ping timeout: 240 seconds)
[21:01:40] *** emika0 is now known as emika
[21:01:42] <grym> https://en.wikipedia.org/wiki/Unix_time
[21:01:46] *** Quits: d0ku (~d0ku@178.43.56.75.ipv4.supernova.orange.pl) (Remote host closed the connection)
[21:01:55] <bjs> theprophet: in English the word "epoch" just means a span of time, (or a particular point in time).  On computers we often refer to midnight 1st jan 1970 as "the epoch" from which we start counting to get the time
[21:02:34] <theprophet> ok thanks
[21:02:45] *** Joins: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9)
[21:02:46] <ChkDigit> ^^ not forget midnight UTC!
[21:02:56] <bjs> raxor2k: this seems weird,  you're merging everything into one dict?
[21:03:16] <bjs> raxor2k: don't you want like, different dicts for each ID ?
[21:03:17] *** Joins: srhm (~srhm@user/srhm)
[21:03:43] <raxor2k> bjs: no
[21:03:45] <raxor2k> i dont that
[21:04:00] <raxor2k> i dont want that
[21:04:28] *** Joins: FatDarrell (~textual@2601:644:200:cf00:ac17:7e04:2b95:c880)
[21:04:57] <bjs> raxor2k: really?
[21:05:10] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[21:05:12] <bjs> like are you really really sure you only want 1 dict?
[21:05:13] *** Joins: ravan (~ravan@user/ravan)
[21:05:23] <raxor2k> bjs: do you understand what im trying to do here?
[21:05:33] <bjs> raxor2k: well yes and no, that's why I ask questions
[21:05:41] <bjs> raxor2k: tell me what you *Want* print(super_list) to output
[21:06:17] <Akuli> the classic mutable aliasing bug :)
[21:06:25] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (Ping timeout: 250 seconds)
[21:06:38] <raxor2k> exercise1 has x Points in 1 table(db), but in another table exercise1 has X points,  now i am able to get all the points from each table, ase you can see, but now i want to the the total point for each ex_ID by merging them together
[21:06:52] <bjs> raxor2k: just type to me what you want that print to output
[21:07:12] <raxor2k> ok
[21:07:23] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:08:02] <jaggz> phy1729, mefistofeles: finally https://bpa.st/4QLA
[21:08:40] <jaggz> I bet there's some clever way of doing this but oh well
[21:08:59] <jaggz> recursion maybe :}
[21:09:14] <raxor2k> bjs: line 81,82,83 : https://bpa.st/P3GQ
[21:09:20] *** Quits: FatDarrell (~textual@2601:644:200:cf00:ac17:7e04:2b95:c880) (Client Quit)
[21:09:33] <bjs> raxor2k: isn't that a list with 3 different dicts in it?
[21:09:41] <bjs> one dict for each ID ?
[21:09:55] <raxor2k> bjs: it shouldnt be
[21:09:59] <raxor2k> because i am merging it ?
[21:09:59] <Akuli> jaggz, so you want to find the parts of allsamps having more than 1 consecutive number?
[21:10:09] <bjs> raxor2k: ... the output there, lines 81 82 and 83
[21:10:16] <raxor2k> i swear python dicts is gonna be the death of me one day
[21:10:17] <bjs> each line has a different dicgt
[21:10:22] <raxor2k> im stating to get ill of this
[21:10:27] <raxor2k> well ok
[21:10:34] <raxor2k> then it mean the code above doesnt work then ?
[21:10:42] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[21:10:52] <bjs> raxor2k: the code you had created 1 dict, but this output has 3 different dicts in it
[21:10:54] <bjs> one dict for each ID
[21:11:25] <raxor2k> bjs: well. fine
[21:11:29] <bjs> raxor2k: well what?
[21:11:33] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[21:12:04] *** Joins: white_shadow (~white_sha@user/white-shadow/x-1132694)
[21:12:15] <raxor2k> but if you look at line 32,33,34, the dicts are inside list1(correct), and 2 dicts inside another list(correct), now how do i merge them together?
[21:12:20] <raxor2k> into a big dict/list ?
[21:12:24] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[21:12:33] <bjs> raxor2k: make a dict, for each ID
[21:12:49] <raxor2k> bjs: please give an example ?
[21:12:56] <bjs> raxor2k: {} is a dictr
[21:13:22] <raxor2k> i know
[21:13:24] <bjs> raxor2k: when you merge, just make a new dictionary for each ID
[21:13:50] *** Joins: SystemFFan (~SystemFFa@188.70.6.7)
[21:13:56] <Akuli> raxor2k, to say it more clearly, "new dictionary for each id" means you put "new_dict = {}" inside the loop, not before the loop where it runs only once
[21:13:57] <raxor2k> bjs: give me a second
[21:14:02] <bjs> raxor2k: then if you try to "merge" a dict for an ID you've already seen, you merge it with that dict
[21:14:12] *** Parts: justsomeguy (~justsomeg@user/justsomeguy) (WeeChat 3.2)
[21:14:22] <raxor2k> but you see im updating "new_dict" inside that loop ?
[21:14:26] <bjs> raxor2k: but it's the same dict
[21:14:30] *** Quits: mxp (~mxp@82.98.30.69) (Ping timeout: 276 seconds)
[21:14:39] <bjs> and you never look at the IDs of anything
[21:14:55] <bjs> (well not where you do the update)
[21:15:06] <raxor2k> hmm okei
[21:15:21] <Akuli> raxor2k, here's a simpler program showing your problem https://dpaste.com/CW6M25PCL
[21:15:23] <Akuli> what do you think it prints?
[21:16:09] *** Joins: mxp (~mxp@45.152.181.180)
[21:16:44] <raxor2k> akuli: no idea
[21:16:48] <raxor2k> my head is gone again
[21:16:56] *** Quits: aslicedbanjo (~aslicedba@host86-148-108-161.range86-148.btcentralplus.com) (Quit: Leaving.)
[21:16:58] <Akuli> maybe you should take a break from programming and continue later?
[21:17:05] <raxor2k> yep
[21:17:13] *** Quits: Ellipsis753 (~Ellipsis7@89.238.130.71) (Ping timeout: 252 seconds)
[21:17:20] <raxor2k> i might need to smoke that thing and calm down alittle bit
[21:17:26] <white_shadow> Akuli is this even possible...
[21:17:32] <Akuli> raxor2k, feel free to ping me if i'm still back, i can finish explaining what's going on in this example and why it doesn't print what you would expect
[21:17:52] <Akuli> white_shadow, is what possible? :)
[21:18:16] <Akuli> this is a classic gotcha with python, and with most other programming languages that have mutable objects that get passed around by reference
[21:18:18] <white_shadow> i thought someone was gonna take a long break from programming
[21:18:50] *** Joins: Samian (~Sami@2620:10d:c091:480::1:15b6)
[21:19:58] <raxor2k> bjs: you know what pisses me off? that this kind of exmapled worked perfectly earlier today
[21:20:38] *** Quits: mxp (~mxp@45.152.181.180) (Ping timeout: 244 seconds)
[21:20:41] <bjs> raxor2k: probably you were trying to do something different, but are trying to do it the same way
[21:21:05] *** Quits: A_Dragon (A_D@doom-tower.awesome-dragon.science) (Changing host)
[21:21:05] *** Joins: A_Dragon (A_D@libera/staff/dragon)
[21:21:32] *** Quits: white_shadow (~white_sha@user/white-shadow/x-1132694) (Read error: Connection reset by peer)
[21:21:42] *** Joins: mxp (~mxp@37.19.217.34)
[21:22:01] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[21:22:35] <raxor2k> whoever found up dicts in python, i dont wish them anything good in life
[21:22:55] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[21:23:31] <zware> raxor2k: Once the pieces click into place you'll love them :)
[21:23:32] *** Joins: brylie (~Thunderbi@81-197-199-179.elisa-laajakaista.fi)
[21:23:43] <jaggz> Akuli, got it working and into a generalized function:
[21:23:43] <bjs> raxor2k: if i'm honest the problem here is not the dicts
[21:23:44] <jaggz> https://bpa.st/PIXQ
[21:23:49] *** Quits: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 252 seconds)
[21:24:07] <bjs> raxor2k: it's your lack of experience,  and there's nothing special about Python here,  Python dicts are not special to Python nor are they Python specific nor did Python invent them or anything like that
[21:24:15] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 244 seconds)
[21:24:21] <jaggz> Akuli, yeah, keeping only spans of N consecutive numbers
[21:24:26] <bjs> raxor2k: every language has a map of this kind and they are found everywhere,  you just need to keep working at it and getting more experience
[21:24:37] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 245 seconds)
[21:25:11] *** Joins: matsaman (~matsaman@user/matsaman)
[21:25:12] *** Joins: cedric (~cedric@2a01:cb11:867:c200:74fc:70ff:77d9:f09d)
[21:25:15] <jaggz> Akuli, mefistofeles phy1729: So, I mentioned briefly what this is for, but in case you're wondering or it wasn't clear or you had me on ignore:
[21:25:21] <Akuli> jaggz, i would solve this by first making a function to find a prefix list of consecutive integers, like [2, 3, 6, 7] --> [2, 3], and then calling that repeatedly until i arrive at the end of the list
[21:25:49] <jaggz> I'm classifying audio samples at home.  Part of this process is to repeat a patient's voice so it will be more clear, louder, and generally audible to caregivers (in particular her aging mother)
[21:26:38] <jaggz> at present it accuratly, using a neural net, recognizes her voice, and I have it repeating her.  But now I want to clean up the audio, since I designed this to be ultra-convenient, so it just uses a room mic, which can be pretty far from her
[21:27:15] <jaggz> so this step is for noise reduction -- I want to automatically gather background noise samples and use those for the noise-profile
[21:27:16] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi) (Read error: Connection reset by peer)
[21:27:22] <raxor2k> bjs: now tell me why this is not working? https://bpa.st/LRLQ
[21:27:25] <raxor2k> doesnt make sense..
[21:27:41] <jaggz> since my neural net already does classification, and already distinguishes between "noise" and "patient" and "other" (it does a lot more, but I simplified it right now)
[21:27:51] <jaggz> then I can just grab those noise samples and generate a noise profile from them
[21:28:06] <Akuli> raxor2k, you are looking for dicts that have the same primary and secondary id
[21:28:12] <Akuli> maybe that's not what you intended?
[21:28:26] <zware> raxor2k: As a general suggestion, using names that describe the object you're naming will usually help make the code understandable, to you and to others
[21:28:28] <jaggz> but for increased reliability, I want to make sure I get sequential spans of noise.  There are plenty of random 1-off misclassifications, and I don't want to suddenly call those things noise
[21:28:38] <raxor2k> akuli: yes? thats exactly what i want
[21:28:43] <raxor2k> merging the points together :)
[21:28:43] <jaggz> if there are multiple ones in a row, that's more reliable
[21:28:47] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 245 seconds)
[21:28:50] <bjs> raxor2k: I mean this isn't merging anything at all, it's just putting everything from primary_muscle_collection_list and secondary_muscle_collection_list into another_useless_list
[21:29:04] *** Joins: Enitin (~Enitin@82.102.22.85)
[21:29:15] <bjs> raxor2k: I can guess what you see and it probably would make perfect sense to me,
[21:29:44] <jaggz> Akuli, hm?  yeah, phy172* was making multiple smaller lists then assembling
[21:30:08] *** Quits: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net) (Quit: See you on the flip side.)
[21:30:11] *** Quits: wolfgang (~wolfgang@101.174.6.197) (Remote host closed the connection)
[21:30:24] <raxor2k> see ya later guys, i need a break for now
[21:30:28] <Akuli> :)
[21:30:31] *** Quits: brylie (~Thunderbi@81-197-199-179.elisa-laajakaista.fi) (Quit: brylie)
[21:30:33] <jaggz> there's more overhead to the creation and destruction of those lists though; and this software's going to need to do a bunch of other processing that I can't avoid
[21:30:45] *** Quits: bomb-on (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:30:56] *** Quits: raxor2k (~raxor2k@78.158.252.74) ()
[21:30:58] *** Quits: bn_work (uid268505@id-268505.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[21:31:06] <jaggz> so, while the noise gathering will be periodic, I wanted to make this function general and efficient in case it's used/abused for other purposes
[21:31:18] * bjs raxor2k: think about something like https://bpa.st/UBLA
[21:31:21] <bjs> oh they're gone
[21:31:22] *** Joins: Betal (~Betal@user/betal)
[21:31:45] *** A_Dragon is now known as ad
[21:31:45] *** Joins: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte)
[21:31:49] *** Parts: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte) ()
[21:31:51] <jaggz> why was he so upset?
[21:31:54] *** ad is now known as A_Dragon
[21:31:55] <jaggz> he got dict() envy?
[21:32:06] *** A_Dragon is now known as A_D
[21:32:41] *** A_D is now known as ad
[21:32:49] *** ad is now known as A_Dragon
[21:33:59] *** Joins: duszek (~duszek@adkz151.neoplus.adsl.tpnet.pl)
[21:34:23] <matsaman> jaggz: yeeeow!
[21:34:34] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:35:30] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[21:35:40] *** Quits: jarthur_ (~jarthur@2603-8080-1540-002d-f53f-9536-c646-bcb2.res6.spectrum.com) (Ping timeout: 240 seconds)
[21:36:51] *** Joins: mago (~mago@93.176.175.73)
[21:37:01] *** Quits: regreg (~regreg@2a02:2f09:531a:c700:5d8c:ecfe:741:2bba) (Ping timeout: 252 seconds)
[21:37:41] *** Quits: czuk_cza (~mist@188.147.99.19.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 244 seconds)
[21:38:05] <jaggz> ?
[21:38:14] <_moep_> !
[21:38:19] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[21:39:25] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-b495-e64a-b23b-4c53.res6.spectrum.com)
[21:40:05] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[21:40:21] *** Quits: p-i-_ (~Ohmu@2403:6200:8870:cca9:c4fe:784:743e:4d3a) (Remote host closed the connection)
[21:40:58] *** Joins: p-i- (~Ohmu@2403:6200:8870:cca9:f825:5b7c:ffbd:3cfd)
[21:41:05] *** Quits: NoImNotNineVolt (~fdsa@c-73-248-207-98.hsd1.nj.comcast.net) (Ping timeout: 250 seconds)
[21:42:50] *** Joins: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte)
[21:44:34] *** Joins: FatDarrell (~textual@68.91.156.229)
[21:45:33] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[21:45:40] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[21:45:58] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[21:46:45] *** Quits: FatDarrell (~textual@68.91.156.229) (Client Quit)
[21:47:07] *** Quits: duszek (~duszek@adkz151.neoplus.adsl.tpnet.pl) (Quit: Leaving)
[21:51:57] <mefistofeles> jaggz: well, it does sound that you overall architecture might need to be redefined if you care for performance... think about something that can be reduced to linear algebra operations, if that helps
[21:52:17] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[21:52:25] *** Quits: pgib (~textual@173.38.117.72) (Ping timeout: 252 seconds)
[21:52:45] <mefistofeles> jaggz: for example, instead of having the lists as that, maybe you want 1s and 0s and use that as a mask into something else, and such
[21:53:06] *** Joins: besnn (~besnn@user/besnn)
[21:53:13] *** Joins: theprophet (~theprophe@85.114.228.184)
[21:54:58] *** Joins: regreg (~regreg@2a02:2f09:531a:c700:4d81:badf:1ba0:7182)
[21:57:26] *** Quits: p-i- (~Ohmu@2403:6200:8870:cca9:f825:5b7c:ffbd:3cfd) (Ping timeout: 252 seconds)
[21:57:59] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 252 seconds)
[21:58:07] *** Joins: magla (~gelignite@55d4b5be.access.ecotel.net)
[21:58:36] *** Joins: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com)
[21:58:42] *** Joins: Enitin (~Enitin@82.102.22.84)
[22:02:44] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[22:05:07] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 245 seconds)
[22:05:08] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[22:05:51] *** Joins: Enitin (~Enitin@82.102.22.84)
[22:05:52] *** Joins: Cyberg33k (~Cybergeek@91.216.101.170)
[22:08:45] *** Joins: Sky_Net (~Sky_Net@176.14.213.85)
[22:11:28] *** Joins: Shanzem (~Shanzem@86.31.109.147)
[22:13:09] *** Quits: DerpGusta (~quassel@user/derpgusta) (Ping timeout: 250 seconds)
[22:13:47] *** Joins: Pickchea (~private@user/pickchea)
[22:13:55] <mago> Hello
[22:14:20] <mago> I am running computer vision scripts in google colab, running into trouble with cv2.imshow()
[22:14:33] <mago> Im trying workaround but the end result is something like that:
[22:14:34] <mago> <PIL.Image.Image image mode=RGB size=800x600 at 0x7FBABB839AD0>
[22:15:06] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Read error: Connection reset by peer)
[22:15:15] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[22:15:16] *** Quits: PaddyF (~PaddyF@user/paddyf) (Quit: WeeChat 3.2)
[22:15:30] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[22:16:06] <mago> I tried with a custome function ant the end result was similar..
[22:16:12] *** Quits: Shanzem (~Shanzem@86.31.109.147) (Ping timeout: 256 seconds)
[22:17:29] *** Quits: Tat (~Tat@137-025-218-069.res.spectrum.com) (Ping timeout: 250 seconds)
[22:18:04] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[22:19:54] *** Joins: ub (~Thunderbi@91.141.71.52.wireless.dyn.drei.com)
[22:19:58] *** Joins: heco (~redrum@user/redrum88)
[22:20:03] <grym> mago: well, that's a pillow image not a cv2 image
[22:21:25] <mago> Mmm, ok. I tried with a custom method and i get:
[22:21:27] <mago> <Figure size 1600x1200 with 1 Axes>
[22:21:34] <mago> How do I display that in colab?
[22:21:56] <grym> matplotlib.pyplot.show
[22:22:10] *** Joins: techsurvivor (~don@89.46.114.124)
[22:24:29] <mago> I have matploitlib.pyplot.imshow in the custom method..? Do you think?
[22:25:14] <grym> worth a shot
[22:25:15] *** Joins: Shanzem (~Shanzem@86.31.109.147)
[22:25:25] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[22:25:34] *** Quits: varaindemian (uid73404@id-73404.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[22:25:39] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[22:25:53] <mago> No, it breaks it.. The other way at least I get: <Figure size 1600x1200 with 1 Axes>
[22:28:06] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Read error: Connection reset by peer)
[22:28:43] *** Quits: ub (~Thunderbi@91.141.71.52.wireless.dyn.drei.com) (Ping timeout: 252 seconds)
[22:29:41] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[22:29:49] *** Quits: Shanzem (~Shanzem@86.31.109.147) (Ping timeout: 252 seconds)
[22:31:34] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:31:34] <mago> Thats the code im trying to run in colab:
[22:31:34] <mago> https://pastebin.com/2TQdNntN
[22:31:34] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[22:31:34] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:33:07] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:33:22] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:34:17] *** Quits: Masklin_Gurder (~joel@89-233-200-127.cust.bredband2.com) (Ping timeout: 248 seconds)
[22:36:37] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[22:38:08] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 244 seconds)
[22:38:21] *** Quits: srhm (~srhm@user/srhm) (Quit: Konversation terminated!)
[22:38:45] *** Joins: srhm (~srhm@user/srhm)
[22:39:11] *** Joins: Enitin (~Enitin@82.102.22.84)
[22:40:11] *** Joins: qlixed (~qlixed@181.44.129.13)
[22:40:55] <Payam> hi, I can not remember how to have only one log file for multiple classes
[22:41:01] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[22:41:02] <Payam> anyone has a ready example?
[22:41:19] <bjs> Payam: like a single logger for multiple classes?
[22:41:27] <Payam> ja
[22:41:35] <bjs> Payam: just define the logger outside of the classes
[22:41:46] <Payam> in a __init__.py?
[22:42:12] <bjs> Payam: if you want sure.  It's pretty normal to have a logger per file
[22:42:21] <bjs> but you can make as many or as few as you want
[22:42:53] *** Quits: keir (~keir@user/keir) (Quit: keir)
[22:43:04] *** Joins: keir (~keir@user/keir)
[22:43:15] <Payam> yes. I use it when I running scripts. But Now I wana package an application and want only one file
[22:43:25] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:99ce:79ef:4cbc:5e88)
[22:43:33] <bjs> Payam: I mean you can have many loggers that all have the same "handler"
[22:43:38] *** Joins: BinarySavior (~BinarySav@user/binarysavior)
[22:43:56] <Payam> and all of the logs will end up in one file at the end?
[22:44:03] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[22:44:07] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[22:44:08] <bjs> Payam: if that's what you configure it to do then yes
[22:44:10] *** Joins: Auron (Auron956@user/auron)
[22:44:24] <Payam> Do you have an example?
[22:44:28] <stewie925> hello all, is there a way to time execution of a python program when I run 'python <program_name>.py from the shell?
[22:44:47] <bjs> stewie925: unix has the time command,  `time python program.py`
[22:44:59] <bjs> Payam: https://docs.python.org/3/howto/logging.html should have examples of how to do various things, if you're using the `logging` library
[22:45:00] <stewie925> bjs: thanks!
[22:45:08] *** Joins: czuk_cza (~mist@188.147.99.19.nat.umts.dynamic.t-mobile.pl)
[22:45:18] <Payam> stewie925, time in terminal.
[22:45:21] <Payam> ah
[22:45:28] <Payam> sorry. bjs already answered
[22:45:33] <Payam> bjs, thanks. will look now
[22:45:57] *** Quits: regreg (~regreg@2a02:2f09:531a:c700:4d81:badf:1ba0:7182) (Ping timeout: 245 seconds)
[22:45:58] <stewie925> thanks Payam as well
[22:46:22] *** Joins: fikran (~fikran@user/fikran)
[22:46:28] <stewie925> so this is my result :  `
[22:46:29] <stewie925> python3 prime2.py  0.01s user 0.00s system 93% cpu 0.016 total`  - does it mean python is eating up 93% of my CPU?
[22:46:44] <stewie925> so this is my result :  `
[22:46:45] <stewie925> `python3 prime2.py  0.01s user 0.00s system 93% cpu 0.016 total`  - does it mean python is eating up 93% of my CPU?
[22:46:54] *** Joins: zebrag (~chris@user/zebrag)
[22:48:16] <stewie925> sorry I think 93% is the idle time - just checked the Activiy Monitor...
[22:48:43] <bjs> stewie925: to be honest the numbers are so low it's probably not very accurate
[22:48:51] <bjs> it's just telling you how much of the time was spent on the cpu
[22:48:55] *** Joins: seoul_man (~meh@user/seoul-man/x-5066766)
[22:49:57] <stewie925> oh thank you again bus - reason I asked is because I am trying to run a codility program 'find the least positive number' O notation test :)
[22:50:49] <bjs> stewie925: codility?
[22:51:02] <stewie925> its some code interview thing
[22:51:04] <bjs> oh google thinks some kind of coding test website
[22:51:20] <stewie925> yeah :)
[22:51:23] <bjs> stewie925: oh this website gave you a program that does something and it's asking you to work out the complexity?
[22:53:00] <stewie925> yeah trying to share the screenshot hehe
[22:54:09] *** Joins: somlis (~somlis@user/somlis)
[22:54:21] <stewie925> bjs:  https://imgur.com/ozJLIXA
[22:54:46] <stewie925> and that's just a DEMO test...  how much harder can others be
[22:54:57] *** Joins: user_ (~user@bzq-11-168-31-138.red.bezeqint.net)
[22:55:36] *** Quits: A_Dragon (A_D@libera/staff/dragon) (Quit: ZNC - https://znc.in)
[22:55:54] *** Joins: A_Dragon (A_D@libera/staff/dragon)
[22:56:39] <pyevery__> do you know how to fix this PyTorch error? everything is unchanged expect I am using a new version of PyTorch https://github.com/mvasil/fashion-compatibility/issues/25   File "mtrand.pyx", line 905, in numpy.random.mtrand.RandomState.choice  TypeError: 'dict_keys' object cannot be interpreted as an integer
[22:57:52] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 252 seconds)
[22:57:52] <user_> Hi, I have a pandas dataframe (small example in https://ibb.co/r3BZSg), how can I set another column for each row, that is called 'endtime' that would be the 'asctime' of 'Done biosensing' ?
[22:58:48] *** Quits: A_Dragon (A_D@libera/staff/dragon) (Remote host closed the connection)
[22:58:48] *** Quits: Hey (~Guest88@2607:fea8:3220:59b0:4cb1:fb18:2739:6fd6) (Quit: Client closed)
[22:59:01] *** Joins: wolfgang (~wolfgang@101.174.6.197)
[22:59:02] *** Joins: A_Dragon (A_D@libera/staff/dragon)
[22:59:03] <jinsun> user_: That page doesn't exist
[22:59:20] *** Quits: srhm (~srhm@user/srhm) (Quit: Konversation terminated!)
[22:59:41] <bjs> stewie925: ah, it wants you to solve it.  Sounds like fun
[22:59:45] <pyevery__> or is this not a PyTorch problem and is numpy problem? Literally I haven't changed any code
[22:59:55] *** Joins: srhm (~srhm@user/srhm)
[23:00:46] <stewie925> bjs: honestly I just understood O notation after seeing that question and googled nedbat's O notation article
[23:00:50] *** Quits: BinarySavior (~BinarySav@user/binarysavior) (Quit: BinarySavior has dropped the mic)
[23:01:07] *** Joins: BinarySavior (~BinarySav@user/binarysavior)
[23:01:22] <user_> jinsun, ow sorry, uploaded again https://ibb.co/r3BZSgY
[23:01:28] <stewie925> so a for loop within a for loop is O(N^2)
[23:01:46] *** Quits: zepolen (~zepolen@athedsl-4550038.home.otenet.gr) (Quit: Konversation terminated!)
[23:01:47] <stewie925> but its two separate for loops its just O(2N) or O(N)
[23:01:53] <stewie925> hope I got that right
[23:01:54] *** Joins: djapo (~archangel@user/djapo)
[23:01:57] *** Joins: sarayourfriend (~sarayourf@174-21-144-133.tukw.qwest.net)
[23:02:57] <sarayourfriend> Hi there! Is anyone around who could chat with me about `pipenv` and monorepos (repositories with multiple `Pipenv` files per Python project)? I outlined the general problem I'm having in this issue as a comment, if it's helpful we can move the discussion there: https://github.com/pypa/pipenv/issues/4126
[23:03:25] *** Joins: elgraz (~elgraz@151.65.9.160)
[23:03:55] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[23:04:28] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Ping timeout: 252 seconds)
[23:05:39] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (Quit: The Lounge - https://thelounge.chat)
[23:05:50] *** Quits: frozensoil (~ddhanak@bras-base-lnglpq1516w-grc-01-74-12-204-141.dsl.bell.ca) (Quit: Lost terminal)
[23:06:07] *** Joins: Enitin (~Enitin@82.102.22.84)
[23:06:10] *** Joins: pmcnabb (~pmcnabb@user/pmcnabb)
[23:09:16] <matsaman> "I'm struggling to find any guidance or best practises on how or if pipenv should be used in a monorepo. Is the only way to use pipenv to have module specific pipenv files? Are there any tools that would facilitate running tests, creating the required pipenvs (virtualenvs) and then running them and on success creating packages across all modules in a repo?"
[23:09:35] *** Joins: travaldo (~travaldo@159.203.88.148)
[23:09:51] <jinsun> user_: is the column MultiIndex? seems like that from the different heights of the headers in the two columns
[23:09:54] <bjs> stewie925: nice,  you're a quick learner. just keep at it
[23:10:12] <user_> jinsun, just the asctime is the index
[23:10:28] <user_> a DatetimeIndex
[23:10:31] <jinsun> user_: oh then it is better
[23:11:20] *** Quits: srhm (~srhm@user/srhm) (Quit: Konversation terminated!)
[23:11:36] <user_> that's good haha;x I'm very new to work with pandas.. and I can't figure out how do do something like this:|
[23:11:44] *** Joins: srhm (~srhm@user/srhm)
[23:12:00] *** Joins: nomic (~nomic@185.217.117.169)
[23:12:30] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:13:10] *** Quits: techsurvivor (~don@89.46.114.124) (Ping timeout: 240 seconds)
[23:13:16] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[23:13:37] *** Joins: Narrat (~omnius@p200300df5f00d3ea06ea56fffe2e7cdc.dip0.t-ipconnect.de)
[23:13:45] *** Quits: ShorTie (~ShorTie@205.sub-72-105-247.myvzw.com) (Ping timeout: 248 seconds)
[23:14:17] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:99ce:79ef:4cbc:5e88) (Quit: Client closed)
[23:14:22] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 252 seconds)
[23:15:11] <jinsun> user_: probably `df["endtime"] = df[df.message ==  "Done biosensing"].index[0]`, assuming  'Done biosensing' will be there at least once in the message column
[23:15:37] <Payam> bjs, this is my __init__ in the directory. So I want to log stuff in classes in the same directory. I only need to do a import logging and then logger=logging.getLogger(__name__) and start logging right?
[23:15:41] <Payam> bjs, https://bpa.st/Q7CA
[23:17:11] <bjs> Payam: so the way "real" libraries usually do this is that each file goes something like `logger = logging.getLogger(__name__)`
[23:17:45] <Payam> yes. and it will pick up the setting in __init__ right?
[23:17:51] <user_> jinsun, this seems close, but I just gave a few lines from the dataframe, there are many more lines like these with different timing,  so for every sensing line, need to next 'done biosensing' asctime date
[23:17:52] <Payam> automatically?
[23:17:53] <bjs> Payam: sort of, logging is smart and will automatically build a parent/child hierarchy
[23:17:55] <user_> not just the first one
[23:18:04] <Payam> awesom bjs thanks
[23:18:13] <bjs> Payam: if the logger doesn't have explicit configuration it'll use the "parent" configuration instead
[23:18:30] *** Joins: ShorTie (~ShorTie@205.sub-72-105-247.myvzw.com)
[23:18:43] *** Quits: computeiro (~Wender@189.37.69.185) (Quit: Leaving)
[23:20:01] <foo> If I want to compare (short, 1-3 items) lists and see if their equal, but not care about the order, any suggestions? eg. I want something like this to return true: [1,2,3] == [1,3,2]
[23:20:09] <foo> I suppose I could sort them both
[23:20:16] *** Quits: legola (~legola@46.235.100.27) (Remote host closed the connection)
[23:20:19] <bjs> Payam: usually libraries don't configure the loggers at all (it's usually considered the applications job)
[23:20:30] <matsaman> foo: see if they have the same number of items, and the same exact items if sorted?
[23:20:45] <Payam> bjs, thank you. I will do some experimentation now :D
[23:20:50] <bjs> Payam: but either way, you can add the desired handler to the parent logger and it'll be used for all child loggers
[23:20:50] <bjs> sure
[23:21:12] <matsaman> foo: I wonder if set should be exploited
[23:21:18] *** Joins: raxor2k (~raxor2k@78.158.252.74)
[23:21:19] <foo> matsaman: sounds about right, ok, I can do that. Thank you.
[23:21:20] *** Joins: legola (~legola@46.235.100.27)
[23:21:31] <foo> matsaman: I thought about that, although I don't think I care about uniqueness. I think that would be the primary value of set() unless I'm missing something
[23:21:46] <foo> *actually* It can't hurt, now that I think about it.
[23:21:56] <foo> matsaman: is that the primary value of set?
[23:22:01] <bjs> Payam: here's an example of doing stuff in a real library, https://github.com/urllib3/urllib3/blob/main/src/urllib3/__init__.py#L45
[23:22:28] <matsaman> foo: people do use set a lot for getting unique items only
[23:22:44] <matsaman> but it also consequently makes the order irrelevant
[23:22:45] <grym> uniquification is handy
[23:22:50] <matsaman> set([1,2,3]) == set([1,3,2]) # True
[23:22:53] <bjs> Payam: it by default has a NullHandler (do nothing on log) and the library exposes a function to install a "log to stderr" handler on the libraries logger(s).  Presumably you'd do something similar
[23:22:53] <foo> matsaman: oh, I didn't realize that.
[23:22:56] <grym> sets are extremely useful for existence testing
[23:23:09] <foo> matsaman: in that case, I think I can use set() instead of a len() and .sort() - agree?
[23:23:16] *** Quits: nomic (~nomic@185.217.117.169) (Quit: Leaving)
[23:23:19] <matsaman> I think so, it just depends on what you're up to
[23:23:30] <matsaman> will [1,3,3,2] ever occur (and matter)?
[23:23:31] <grym> foo: `x in my_set` is in general substantially faster than `x in mylist`
[23:23:51] <matsaman> perhaps you should be using sets at the outset instead of lists <shrug>
[23:23:54] <grym> (which is also a very useful fact)
[23:24:03] <foo> matsaman: actually, since I'm dealing with emails, if there is a duplicate email, it's fine.
[23:24:03] *** Joins: deviantfero (~deviantfe@190.150.27.58)
[23:24:22] <matsaman> emails huh?
[23:24:23] <foo> grym: thanks, that's good to know. set() faster than list()
[23:24:30] <matsaman> you want to know if one list of emails is equivalent to another?
[23:24:31] <foo> matsaman: meh, this API I'm dealing with is a mess of data. yes.
[23:24:38] <matsaman> does sound messy =)
[23:25:00] <matsaman> and then what? Will you process the missing email items?
[23:25:26] <foo> matsaman: I can be more specific: a user account has emails dict. I'm syncing from a live system to my system. A user changed their email and it broke in our system.
[23:25:38] <foo> matsaman: the emails dict is coming from the API
[23:25:45] <foo> matsaman: it's important we have the latest/accurate email
[23:25:54] *** Quits: legola (~legola@46.235.100.27) (Ping timeout: 256 seconds)
[23:26:04] <foo> matsaman: ... so, I want to compare the user's emails in their live account with their emails in our local account to ensure it's in sync
[23:26:06] *** Quits: Samian (~Sami@2620:10d:c091:480::1:15b6) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:26:47] <matsaman> hrmmm
[23:27:05] <matsaman> I guess you could save some time by comparing the whole sets at once before doing individual processing <shrug>
[23:27:44] <acegallagher>  /part
[23:27:46] *** Parts: acegallagher (~Ace@71-33-218-237.hlrn.qwest.net) ()
[23:27:47] <user_> jinsun, ;d?
[23:28:49] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[23:29:24] *** Joins: Roey (~Roey@user/Roey)
[23:30:02] *** Joins: DerpGusta (~quassel@user/derpgusta)
[23:30:11] *** Quits: elgraz (~elgraz@151.65.9.160) (Remote host closed the connection)
[23:30:15] <jinsun> user_: hmm that is possible, but you will have to add more columns to your df which need two more operations, seeing if I can one-liner it :D (if not I'll paste somewhere)
[23:30:18] <Payam> bjs, to use exc_info = True in logging.exception , do you have to have except Exception `as e` ? Do you have to have `as something`?
[23:30:27] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[23:30:30] <bjs> Payam: no
[23:30:34] <Payam> to be able to use exc_info
[23:30:38] <Payam> okey thanks
[23:30:51] <Payam> and by exc_info you get the traceback right?
[23:30:53] <user_> jinsun, nice, looking forward to see it;o
[23:31:03] *** Joins: djhankb (~djhankb@208.113.164.68)
[23:31:32] *** Joins: MrAwesomeRocks (~MrAwesome@user/mrawesomerocks)
[23:31:41] <Payam> no it should be sinfo right?
[23:31:48] <user_> (also could you explain: "add mode columns" part for this task?, I'm not even sure where do begin with this)
[23:32:07] *** Quits: MrAwesomeRocks (~MrAwesome@user/mrawesomerocks) (Client Quit)
[23:32:28] <bjs> Payam: stack_info you mean, and that's different
[23:32:46] *** Joins: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl)
[23:33:17] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aÐ»Ð»Ð¸Ð»Ñ¹Ñ–Ð°!)
[23:33:53] *** Joins: zisu8 (~textual@p200300eab73b6c0034fa57a2fb0b7021.dip0.t-ipconnect.de)
[23:34:05] *** Joins: greedom (~greedom@2001:16b8:2e2b:7d00:f91b:9923:636c:9526)
[23:34:11] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[23:34:15] *** Joins: Xano (~Xano@2a00:23c4:4200:a00:7e3c:7672:42c3:cbec)
[23:34:28] <jinsun> user_: more not mode, I mean you just wanted entime column, but I can only think of a solution that needs to add 2 more columns other than endtime, before calculating endtime
[23:35:11] <bjs> Payam: see https://bpa.st/ES2A
[23:35:49] <Xano> Is there an equivalent to asyncio.BaseEventLoop.run_until_complete() that 1) is itself synchronous 2) can be used with a running loop?
[23:35:55] *** Quits: besnn (~besnn@user/besnn) (Read error: Connection reset by peer)
[23:36:06] <bjs> Payam: this outputs two stacktraces,  one for the exception's traceback (from exc_info) and the current stack trace (since stack_info=True)
[23:36:12] <bjs> Xano: are you not just describing `await` ?
[23:36:20] *** Joins: MaximB (~MaximB@87.68.164.81)
[23:36:23] *** Quits: LuxuryMode (uid91005@id-91005.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[23:36:27] <Payam> what is stack trace?
[23:36:32] <Xano> bjs await itself does not work on a synchronous context
[23:36:35] <bjs> Payam: like, the current stack, like call stack
[23:36:36] <Xano> *in
[23:36:53] <bjs> Xano: when you say with a current running loop do you mean just block the loop and run the thing
[23:37:06] <Payam> bjs, stack like in stack memory?
[23:37:20] <bjs> Payam: yes,  the stack of function calls
[23:37:39] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[23:38:11] <Xano> bjs I guess I do. I'm trying to see if there's a way around the function color problem
[23:38:12] <Payam> bjs, stack means like the current scope. like in this function right?
[23:38:18] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:38:31] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 252 seconds)
[23:38:54] <bjs> Payam: like most other languages Python has a call stack,  every time you call a function a new frame is pushed on that stack.  That's where the traceback comes from
[23:39:11] <bjs> Payam: stack_info is like "a traceback to -here-"
[23:39:19] <Payam> aah. i get it now. and how is it differ from exc_info
[23:40:03] <bjs> Payam: look at my example and think about how the traceback for the exception and the traceback at the error() call might be different
[23:40:08] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 244 seconds)
[23:40:22] <Payam> thanks :)
[23:40:42] <bjs> Xano: hmm it doesn't really get around the problem since you can't have the running event loop keep running while the other thing ran
[23:41:00] *** Quits: BinarySavior (~BinarySav@user/binarysavior) (Quit: BinarySavior has dropped the mic)
[23:41:00] *** Joins: Enitin (~Enitin@82.102.22.84)
[23:41:17] *** Joins: BinarySavior (~BinarySav@user/binarysavior)
[23:41:19] <bjs> Xano: you can start a thread with a brand new loop in it and run_until_complete in it,  completely isolated from the current one and wait for it to finish,  is probably the closest you can get.
[23:41:44] <jinsun> user_: okay so I couldn't one-liner it, try something like this https://bpa.st/ZMYQ, maybe it could be done more efficiently too, but I don't care usually unless the data is too much
[23:44:18] <jinsun> user_: and you get those extra "group" and "timestamp" columns, just del those if you don't want them later
[23:45:47] <Xano> bjs, That does confirm my suspicions. Thanks! :)
[23:45:49] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[23:46:13] <user_> this idd seems close, but the endtime is now points to the asctime of the 'Biosensing well', and not the 'Done biosensing'
[23:46:16] *** Quits: pro_z (~pro_z@37.214.79.197) (Ping timeout: 252 seconds)
[23:46:46] *** Joins: hudo (~hudo@62.68.27.70)
[23:47:19] *** Quits: zware (~zach@python/psf/zware) (Ping timeout: 252 seconds)
[23:47:24] <jinsun> ah yes it stops at just the previos row
[23:48:14] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[23:50:02] *** Joins: zware (~zach@python/psf/zware)
[23:50:59] <jinsun> user_: well you could just shift the whole thing down, and assuming that the first row will not have "Done biosensing" fill it with False
[23:51:40] *** Quits: szymon (~ugh@staticline-31-183-186-12.toya.net.pl) (Ping timeout: 240 seconds)
[23:52:11] <jinsun> user_: so change the second line in that paste to `df["group"] = (df.message == "Done biosensing").shift(1).fillna(False).cumsum()`
[23:56:59] *** Joins: rexizzzer (~rexizzzer@89-109-48-86.dynamic.mts-nn.ru)
[23:57:11] *** Quits: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl) (Ping timeout: 244 seconds)
[23:58:06] *** Quits: rexizzzer (~rexizzzer@89-109-48-86.dynamic.mts-nn.ru) (Client Quit)
[23:58:20] <user_> Thanks jinsun ;p need to tryin' to understand now what it does..
[23:58:53] *** Joins: Shanzem (~Shanzem@86.31.109.147)
[23:59:14] *** Joins: ioistired (~ioistired@signald/ioistired)
[23:59:41] <ioistired> are "".join(random.choices(string.digits, k=5)) and format(random.randrange(100000), '05') equivalent?
