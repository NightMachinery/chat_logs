[00:00:38] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[00:01:00] *** Joins: wyclif (~wyclif@user/wyclif)
[00:01:05] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:02:46] *** Quits: iomari891 (~iomari891@129.205.113.2) (Ping timeout: 268 seconds)
[00:04:54] <acresearch> if i have a function that returns a value, can i run it through multiprocess and have it also return values? or is it not possible?
[00:05:22] <Henry151> howdy folks
[00:06:04] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[00:06:07] *** Joins: GadgetNerd (GadgetNerd@user/gadgetnerd)
[00:06:11] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[00:06:25] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[00:06:33] *** Joins: wyclif (~wyclif@user/wyclif)
[00:07:06] <Henry151> I'm working on a project where we're using flask to serve up a website that presents us with a bunch of information from a database. The databse is pretty big (something like ~5M rows and ~300 columns or thereabouts) and in addition to having different pages that display certain information from the database, we also have a "search bar" that allows us to find specific rows from that database, searching
[00:07:12] <Henry151> all the columns together
[00:07:18] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[00:07:44] <Henry151> currently the search is set up with custom SQL queries written in sqlalchemy
[00:08:22] <Henry151> i am wondering about projects like lucene or solr or xapian or elasticsearch or what-have-you, and wondering if people have advice about implementing using one of those types of things instead of the custom search
[00:08:28] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[00:08:38] *** Gustavo6046_ is now known as Gustavo6046
[00:08:46] <Henry151> just general advice as far as which of the many projects like that might be easiest to use or most effective in a circumstance like mine
[00:09:07] <Henry151> or, if maybe sticking to custom sql searches may be wiser
[00:09:20] *** Quits: op0x0f05 (uid512716@id-512716.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[00:09:46] *** Quits: ferz (~ferz@93-39-143-181.ip76.fastwebnet.it) (Ping timeout: 268 seconds)
[00:11:30] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[00:12:01] *** Joins: wyclif (~wyclif@user/wyclif)
[00:12:18] <eblip> thanks Wooble ..i ended up doing exactly that.... i did it inside the function and outside of the function call
[00:12:28] *** Joins: darksun (~darksun@user/darksun)
[00:14:00] *** Quits: Deneb (~johnch@86.111.189.80.dyn.plus.net) (Remote host closed the connection)
[00:14:23] *** Joins: pr3d4t0r (~zhenya01@user/pr3d4t0r)
[00:16:24] *** Quits: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d) (Quit: WeeChat 3.2)
[00:16:33] *** Quits: pro_z (~pro_z@37.214.66.151) (Ping timeout: 268 seconds)
[00:16:40] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[00:16:51] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 276 seconds)
[00:17:34] *** Joins: wyclif (~wyclif@user/wyclif)
[00:20:06] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 256 seconds)
[00:20:37] *** Joins: Ben10 (~Ben10@197.220.169.146)
[00:20:59] *** Quits: LuksNuke (~LuksNuke@ip-146-0-191-111.dyn.luxfibre.pt.lu) (Remote host closed the connection)
[00:21:02] *** Quits: adder (~adder@user/adder) (Quit: Leaving)
[00:22:37] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[00:25:07] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 252 seconds)
[00:26:24] *** Quits: Batzy (~Batzy@user/batzy) (Quit: lata)
[00:27:28] *** Joins: Batzy (~Batzy@user/batzy)
[00:28:14] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[00:28:31] *** Joins: wyclif (~wyclif@user/wyclif)
[00:29:24] *** Joins: Ergo^ (~ergo@91.238.59.144)
[00:29:25] *** Quits: Batzy (~Batzy@user/batzy) (Client Quit)
[00:30:27] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[00:32:30] *** Joins: Batzy (~Batzy@user/batzy)
[00:32:32] *** Joins: Nact (~l@2a02:a03f:c0b0:f600:3253:5994:1b4f:e854)
[00:33:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[00:33:54] *** Quits: Ben10 (~Ben10@197.220.169.146) (Quit: Client closed)
[00:34:01] *** Joins: wyclif (~wyclif@user/wyclif)
[00:34:56] *** Joins: Ben10 (~Ben10@197.220.169.146)
[00:36:13] *** whaley is now known as porksoda
[00:37:02] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 260 seconds)
[00:37:43] <BinarySavior> can you pass a pd.Series to assertAlmostEqual?
[00:38:45] <sco1> Not sure, but Pandas provides testing helpers: https://pandas.pydata.org/docs/reference/api/pandas.testing.assert_series_equal.html
[00:39:01] *** Joins: sedeki (~textual@user/sedeki)
[00:39:03] *** Joins: Ben1065 (~Ben10@197.220.169.146)
[00:39:55] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:41:04] *** Quits: Ben10 (~Ben10@197.220.169.146) (Ping timeout: 256 seconds)
[00:41:17] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[00:41:30] *** Ben1065 is now known as Ben10
[00:41:33] <grym> BinarySavior: maybe, but you can also myseries.values to get the ndarray
[00:41:51] *** Quits: HurricaneHarry (~quassel@84-85-122-182.fixed.kpn.net) (Read error: Connection reset by peer)
[00:43:07] *** Quits: sedeki (~textual@user/sedeki) (Client Quit)
[00:43:38] *** Quits: magla (~gelignite@55d4261d.access.ecotel.net) (Quit: Stay safe!)
[00:44:02] *** Quits: KernelPanic (~KernelPan@user/kernelpanic) (Ping timeout: 260 seconds)
[00:44:18] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[00:44:36] *** Quits: dharrigan (~dharrigan@user/dharrigan) (Quit: ZNC - https://znc.in)
[00:45:02] *** Joins: wyclif (~wyclif@user/wyclif)
[00:45:08] *** Quits: Haxxa (~Haxxa@122.199.45.213) (Quit: Haxxa flies away.)
[00:45:20] *** Quits: zln (~zln@c80-217-230-193.bredband.tele2.se) (Ping timeout: 265 seconds)
[00:45:31] *** Joins: HurricaneHarry (~quassel@2a02-a455-9d06-1-3034-34ba-9e09-f533.fixed6.kpn.net)
[00:46:26] <vimart> Guys where could I had for some projects to do to grow portfolio etc So far I've done only some own project ideas but I think I'm stuck and no ideas.
[00:47:40] <llanhmod> vimart: done an ticker tracking system yet?
[00:47:47] <llanhmod> er, ticket*
[00:48:29] *** Joins: dharrigan (~dharrigan@user/dharrigan)
[00:48:42] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[00:49:12] <vimart> llanhmod: nah, I didn't I guess you mean a web app?
[00:49:44] <llanhmod> could be a web app, or an api.
[00:49:49] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[00:50:33] *** Joins: wyclif (~wyclif@user/wyclif)
[00:50:34] *** Joins: Haxxa (~Haxxa@122.199.45.213)
[00:50:44] <vimart> llanhmod: My github is kinda sad yet, I think I'll get on to that Ticket Tracker, seems cool idea.
[00:50:52] *** Quits: acresearch (~acresearc@user/acresearch) (Ping timeout: 268 seconds)
[00:51:16] <llanhmod> even cooler with functional/unit testing.
[00:52:45] *** Joins: Auron (Auron956@user/auron)
[00:52:56] <vimart> I bet so lol more brain draining. Have you done those llanhmod ?
[00:53:17] <llanhmod> vimart: or, find a real-world problem and try solving it. I am doing one now actually.
[00:53:42] <llanhmod> having some db issues but...so far so good.
[00:55:42] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[00:56:03] *** Joins: wyclif (~wyclif@user/wyclif)
[00:56:28] *** Quits: Praise (~Fat@user/praise) (Ping timeout: 252 seconds)
[00:57:04] *** Joins: zebrag (~chris@user/zebrag)
[00:59:37] <skylite> can someone explain to me what this code does? https://github.com/dropbox/sqlalchemy-stubs/issues/76#issuecomment-595839159
[00:59:39] <BinarySavior> hi, in the last line on this paste I am calling .max(), but when I call that it's only giving me the numerical max.  How can I also return the `native-country` associated with the max percent?  (pandas)  https://bpa.st/JPBA
[01:00:07] <skylite> I've never seen this syntax before: BaseModel: DeclarativeMeta = db.Model what the heck is this?
[01:00:14] <foo> pip is installing from cache it seems, anyway to force it not to do this?
[01:00:28] <foo> In a brand new venv
[01:01:18] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[01:01:32] <foo> Can I delete everything in pip cache dir ?
[01:01:35] *** Joins: wyclif (~wyclif@user/wyclif)
[01:01:37] <foo> Maybe?
[01:01:47] <foo> ah, pip cache purge
[01:02:26] <foo> oh, I see the issue. heh.
[01:02:35] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 268 seconds)
[01:03:34] <vimart> llanhmod: what do you mean by saying real world problem...? lol
[01:03:42] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 265 seconds)
[01:04:17] *** Quits: Ben10 (~Ben10@197.220.169.146) (Ping timeout: 256 seconds)
[01:04:25] <llanhmod> vimart: just something like a issue tracker for a local startup or anything that might make a developer/user's life easier. too many to mention.
[01:05:01] <llanhmod> vimart: in short, somthing where someone says 'I wish there was a way to...'
[01:05:01] <jinsun> skylite: BaseModel is the variable name, DeclarativeMeta is the type annotation, and db.Model is the value assinged to it
[01:05:28] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[01:05:28] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[01:06:08] <llanhmod> vimart: it's often the type of problems that lead to new programming languages or libraries.
[01:06:13] *** Joins: sniperwolf (~sniperwol@91.230.98.1)
[01:06:19] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[01:06:25] <llanhmod> i.e missing functionality
[01:07:40] *** Quits: bilb_ono (~alexmarsh@ip68-6-90-72.sb.sd.cox.net) (Quit: bilb_ono)
[01:07:47] *** Joins: GenTooMan (~cyberman@c-73-214-106-63.hsd1.pa.comcast.net)
[01:08:02] <vimart> llanhmod: it's defo over my knowledge I believe, so far I've done standard python projects
[01:08:06] *** Joins: Auron (Auron956@user/auron)
[01:08:16] <llanhmod> vimart: I would offer to pair-program with you, what tzone are you in?
[01:08:29] <skylite> jinsun: thanks I was able to find more writings about this now
[01:08:36] *** Joins: bilb_ono (~alexmarsh@ip68-6-90-72.sb.sd.cox.net)
[01:08:54] <vimart> llanhmod: Scotland.
[01:08:58] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[01:08:59] <llanhmod> vimart: gotta step out of that comfort zone sometime.
[01:09:09] <vimart> llanhmod: https://github.com/Viteac that's my git bro
[01:09:11] <llanhmod> oh okay, Norway for e.
[01:09:19] <llanhmod> ok
[01:09:22] <vimart> so same I think
[01:09:23] *** Joins: Praise (~Fat@user/praise)
[01:10:25] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Client Quit)
[01:11:03] <vimart> Ok, I need go. See ya guys
[01:11:09] <vimart> thx llanhmod
[01:11:45] *** Quits: vimart (~vimart@239.218-30-62.static.virginmediabusiness.co.uk) (Quit: WeeChat 2.8)
[01:11:50] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[01:12:35] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[01:12:35] *** Joins: wyclif (~wyclif@user/wyclif)
[01:12:44] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[01:12:52] <llanhmod> U+1F44D
[01:12:55] *** Quits: Kvothe (~weechat@user/elodin) (Ping timeout: 252 seconds)
[01:13:17] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Ping timeout: 268 seconds)
[01:13:30] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[01:14:11] *** Quits: shawwwn (uid6132@id-6132.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[01:14:15] *** Quits: Tashtari (~tashtari@user/tashtari) (Quit: Tashtari)
[01:17:43] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[01:18:07] *** Joins: wyclif (~wyclif@user/wyclif)
[01:21:44] <anddam> howdy, I have a package MyPackage setup.py specifying a install_requires dependency over a package foo, foo provides a binary "foo" that is installed in bin/foo in the virtualenv. I a custom cmdclass for install that after install.run() runs bin/foo
[01:22:10] <BinarySavior> assertalmostequals means it needs to be accurate within 7 decimal places, right?
[01:22:22] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[01:22:34] <grym> BinarySavior: should honor the relative and absolute tolerances you specify
[01:22:35] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[01:22:54] <grym> (7 is the default)
[01:23:01] <anddam> pip is able to install this without wheels, but fails when trying to build MyPackage wheel since it is not able to find bin/foo. In my augmented install I listed the content of bin_dir and in fact it does have nothing but ['python3', 'python', 'easy_install', 'easy_install-3.8', 'Activate.ps1', 'activate', 'activate.csh', 'activate.fish', 'pip', 'pip3', 'pip3.8', 'wheel']
[01:23:09] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[01:23:09] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 268 seconds)
[01:23:32] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[01:23:36] *** Joins: wyclif (~wyclif@user/wyclif)
[01:24:01] <BinarySavior> well the unit test written by the freecodecamp.org for their certificate challenges does not specify (so it's default of 7) but then their expected value is rounded to 1 decimal place. My answer is more accurate, but it fails the unit test
[01:24:24] <BinarySavior> nowhere in the directions does it specify to round to the nearest decimal
[01:24:35] <anddam> if I manually inspect the venv I see bin/foo is there, I figure this could be because I am augmenting install whereas the wheel is calling some other target, bdist_wheel AFAICT
[01:25:02] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[01:25:50] *** Quits: brelod (~me@90.244.150.142) (Quit: leaving)
[01:26:00] <grym> anddam: it's a bit odd to me, architecturally, that you list a dependency in install_requires so that you can subprocess its entry point.  why not just import foo and do stuff?
[01:26:40] *** Quits: vats (~vats@103.70.83.191) (Ping timeout: 252 seconds)
[01:27:01] *** Joins: Tashtari (~tashtari@user/tashtari)
[01:27:16] <anddam> grym: I have reasons, that are twofold
[01:27:33] <anddam> grym: I inherited the setup.py and I do not know any better (so far)
[01:28:19] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[01:28:25] *** Joins: The_Iron_Pig (~tip@2601:642:c000:6d9:4744:e4bd:a1a6:9012)
[01:29:08] *** Joins: wyclif (~wyclif@user/wyclif)
[01:29:18] *** Joins: cheater (~Username@user/cheater)
[01:29:35] <anddam> grym: I see the point in importing the package TBH, but this frail setup is *almost* working (right now is broken since I addedd wheel to the mixture), so to be honest I'd rather figure why the wheel target is looking at a clean venv/bin/ directory than rework the logic
[01:30:05] <anddam> and notice that in that sentence I was honest twice
[01:30:08] *** Quits: The_Iron_Pig (~tip@2601:642:c000:6d9:4744:e4bd:a1a6:9012) (Client Quit)
[01:30:31] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[01:31:04] *** Quits: nergar (~Nergar@177.225.152.16) (Ping timeout: 252 seconds)
[01:31:53] *** Joins: The_Iron_Pig (~tip@2601:642:c000:6d9:4744:e4bd:a1a6:9012)
[01:32:42] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 265 seconds)
[01:33:07] *** Quits: sniperwolf (~sniperwol@91.230.98.1) (Quit: Client closed)
[01:33:23] *** Joins: qlixed (~qlixed@152.170.36.244)
[01:33:30] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[01:33:48] *** Joins: Ivii (~Ivyy@2001:a61:1329:3e01:da86:1615:8300:4b13)
[01:33:49] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[01:33:56] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[01:34:39] *** Joins: wyclif (~wyclif@user/wyclif)
[01:34:56] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:34:56] <foo> dist/ dir is likely included in a git repo, correct? I think so
[01:35:28] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 252 seconds)
[01:35:33] *** Joins: fikran (~fikran@user/fikran)
[01:36:24] <grym> foo: no
[01:36:33] <foo> grym: ok, so that's in .gitignore, thanks. :)
[01:36:35] <grym> foo: https://www.toptal.com/developers/gitignore/api/python
[01:36:53] <foo> grym: uh, that's awesome, thank you.
[01:37:00] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::4433) (Quit: Konversation terminated!)
[01:37:02] <foo> Actually, I've seen this before but didn't know where it came from. Thank you.
[01:37:27] <grym> gitignore.io is rad
[01:37:35] <grym> it's even more rad when your editor can query it :)
[01:37:46] <foo> grym: are you calling my vim dumb?
[01:37:48] <anddam> grym: I just tried to manually run    python setup.py bdist_wheel   and it shows the correct bin/ content (I printed it to sys.stderr in my augmented install phase), I think I am missing the overall workflow (i.e. what targets get called and in what order) when there's wheel in the venv
[01:38:17] <anddam> grym: and what editor is that?
[01:38:21] <grym> foo: no, there's gotta be a plugin
[01:38:34] <deniska> 'env.bak/' <- oddly specific
[01:38:43] <foo> grym: thank you, I guess I'll tell the vim army to stand down.
[01:38:47] <grym> https://github.com/davinche/gitignore.io.vim  e.g.
[01:39:11] <grym> anddam: i suspect you can find plugins for most major featureful editors
[01:40:48] *** Quits: gbear605 (~gbear605@user/gbear605) (Quit: ZNC 1.7.4+deb0+bionic0 - https://znc.in)
[01:41:07] *** Quits: nurupo (~nurupo.ga@user/nurupo) (Quit: nurupo.ga)
[01:41:13] *** Joins: gbear605 (~gbear605@user/gbear605)
[01:41:17] *** Quits: mikebald (~mikebald@159.203.185.106) (Quit: ZNC 1.8.2 - https://znc.in)
[01:41:20] *** Joins: nurupo (~nurupo.ga@user/nurupo)
[01:41:20] <b0nn> No! Vim is fine!
[01:42:40] *** Quits: el_kevino (~mote@2604:a880:400:d1::901:5001) (Ping timeout: 252 seconds)
[01:42:46] *** Quits: InPhase (~InPhase@openscad/inphase) (Ping timeout: 250 seconds)
[01:43:35] <control> howto make print output of the loop in one line rather than repeating in console?
[01:43:37] *** Joins: mikebald (~mikebald@159.203.185.106)
[01:43:42] *** Joins: el_kevino (~mote@2604:a880:400:d1::901:5001)
[01:43:47] <aphysically> I have way too many garbage commits in my repo from figuring out github actions CI for everything :D
[01:44:23] <dodo> aphysically: sounds like something that should happen on a temp branch
[01:44:34] *** Joins: upsala (~zcb@185.213.155.160)
[01:44:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[01:44:55] <aphysically> in retrospect yes
[01:45:31] *** Quits: stdout (~stdout@216.163.21.11) (Quit: Leaving)
[01:45:37] <nedbat> control: print(your_thing, end="")
[01:45:37] *** Joins: wyclif (~wyclif@user/wyclif)
[01:46:59] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[01:47:31] <space-ghost> nedbat: does print(*l) only work on lists?
[01:48:06] <nedbat> space-ghost: it works on anything iterable.
[01:48:10] <space-ghost> kk
[01:48:22] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:48:25] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[01:48:29] *** Joins: InPhase (~InPhase@openscad/inphase)
[01:49:03] *** Quits: Spiney (~Spiney@2604:a880:400:d0::1d82:b001) (Ping timeout: 268 seconds)
[01:49:17] *** Quits: johncc3 (~johncc3@181.93.22.149) (Quit: Leaving)
[01:50:03] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:50:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[01:51:11] *** Joins: wyclif (~wyclif@user/wyclif)
[01:51:18] <control> still cant get it to work
[01:51:53] *** Joins: Steeve (~steve@user/steeve)
[01:51:55] <dodo> control: can you show some code? see /topic for pastebin
[01:52:24] <nedbat> control: a good short-cut is to always provide the code when seeking help.
[01:52:40] <control> i have few prints in for loop. when the loop starts, it keeps repeating the prints
[01:52:53] <control> i just want to flush everytime after ebey loop and see one print
[01:52:55] <grym> sometimes, when i `shutil.rmtree(something)` i get `OSError: [Errno 39] Directory not empty:`
[01:53:00] <grym> why is this an error?
[01:53:07] <grym> rmtree exists to remove non-empty directories
[01:53:10] *** Joins: teut (~teut@182.68.241.120)
[01:53:30] <deniska> grym: what if something creates a file in a directory before it gets deleted?
[01:54:03] <teut> https://bpa.st/JEJA
[01:54:09] <grym> deniska: panik.jpg.  i don't _think_ that's what is happening, because we're reasonably single-threaded here
[01:54:11] <teut> why is that output like that?
[01:54:13] <aphysically> dodo: I guess I can squash
[01:54:19] <grym> deniska: but man is that unpleasant to remember
[01:54:21] *** Joins: Auron956 (Auron956@user/auron)
[01:54:34] <dodo> aphysically: if nobody has pulled the code, sure
[01:54:34] <grym> teut: because strings are iterable too
[01:54:49] *** Quits: dalan623 (~dalan@14-201-78-173.static.tpgi.com.au) (Quit: dalan623)
[01:55:08] <aphysically> I don't think anyone has ever pulled the code period
[01:55:10] <deniska> grym: doesn't have to be you, might be a thumbnail generator or something
[01:55:20] *** Joins: Spiney (~Spiney@2604:a880:400:d0::1d82:b001)
[01:55:27] <teut> no no , why the string got split into characters
[01:55:42] <teut> which part did that?
[01:56:09] <bjs> teut: if you split the code up into multiple lines with multiple variables, you could print each variable out and then see which line did it
[01:56:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[01:56:38] *** Joins: wyclif (~wyclif@user/wyclif)
[01:56:47] <teut> but if you could quickly tell then just plz
[01:57:01] <bjs> teut: I can't quickly tell, I'd need to do what I said above
[01:57:28] *** Quits: Auron (Auron956@user/auron) (Ping timeout: 268 seconds)
[01:57:28] <teut> ok ok doing that
[01:57:41] *** Joins: ferz (~ferz@93-39-143-224.ip76.fastwebnet.it)
[01:58:28] <teut> >>> sorted([(sum([ord(j) ** 3 for j in i]), i) for i in strs])       [(3414761, 'bat'), (3503870, 'ate'), (3503870, 'eat'), (3503870, 'tea'), (3804569, 'nat'), (3804569, 'tan')]
[01:59:07] *** Joins: umamisoup (uid511883@id-511883.hampstead.irccloud.com)
[01:59:10] <teut> now I just need a list of strings after the sort
[01:59:30] *** Quits: litharge (litharge@libera/bot/litharge) (Remote host closed the connection)
[01:59:35] <grym> deniska: figure it's safe to pass ignore_errors=True
[01:59:36] *** Joins: litharge (litharge@libera/bot/litharge)
[01:59:47] <control> i did this by putting clearConsole() at the top of all prints
[02:00:27] <phy1729> teut: why not use sorted's key argument?
[02:00:29] <teut> k[1] should do it, it looked clear, I can move to itemgetter but its weird why this list("mystring") kind of thing is happening here
[02:00:34] *** ChanServ sets mode: +o litharge
[02:00:45] <teut> I just wanted to do it one liner because
[02:01:05] *** Quits: Auron956 (Auron956@user/auron) (Remote host closed the connection)
[02:01:24] <bjs> teut: where is "here" exactly?  Where does that "Output" come from
[02:01:25] <teut> and how would you use that?  key = l[?]
[02:01:44] <teut> that output is of the function
[02:02:07] <teut> and the input is of the function
[02:02:10] <bjs> teut: you should make it multiple lines first, and make it work. -then- turn it into a one liner if it works
[02:02:30] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:02:37] <bjs> if you try go straight to the one-liner you get it wrong, or get confused about something
[02:03:16] <teut> oh sorted gives an iterator
[02:03:27] <teut> maybe thats where the problem lies
[02:03:51] <bjs> teut: huh?  is that just a total guess
[02:03:53] <teut> no no , I know I knew enough facts about python know , but I m always wrong
[02:04:07] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:04:16] <bjs> teut: try work backwards, you had this "Output" line you showed us. You wanted to know why it looked like what it did
[02:04:21] <bjs> the first question is *where* did it come from?
[02:04:21] <teut> looks like a good one to me, I can try it
[02:04:26] <teut> leetcode?
[02:04:36] <bjs> teut: okay but what did leetcode do exactly?
[02:04:38] <teut> why is that a concern/.
[02:04:39] <teut> ?
[02:04:48] <bjs> teut: ... because you're not the one printing it out
[02:04:54] <bjs> what if leetcode is the one list("string")ing it
[02:04:55] <teut> thats true
[02:05:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[02:05:11] <teut> that is a possibilty
[02:05:24] <bjs> teut: infact your code is kind of weird because the function says `-> List[List[str]]` but you return a `List[str]`
[02:05:41] <teut> ah right
[02:05:56] <teut> I forgot that part totally
[02:06:02] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[02:06:06] *** Quits: odoood (~odoood@2601:c8:c003:a550::1) (Ping timeout: 268 seconds)
[02:06:13] <bjs> teut: ... so probably leetcode is just printing out your output thinking it's a List[List[str]] :)
[02:06:15] <teut> cool, I need to read the type hints
[02:06:26] <bjs> teut: so we've gone from "wy is that a concern" to "oh that is why" :)
[02:06:42] <teut> lol, everytime problem with my questions
[02:06:47] <teut> sorry
[02:06:49] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[02:06:51] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[02:07:01] *** Joins: Naan (~naan@user/naan)
[02:07:12] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:07:50] <teut> thanks for the help bjs
[02:09:28] *** Gustavo6046_ is now known as Gustavo6046
[02:09:40] <newdimension> I'm trying to catch a selenium error and I'm getting TypeError: catching classes that do not inherit from BaseException is not allowed
[02:09:45] <teut> is there anything in python that converts   [(1, 2), (1, 3), (2, 2), (2, 7), (3, 1)]  to   {1:[2, 3], 2:[2, 7], 3:[1]}?
[02:09:54] <newdimension> except 'selenium.common.exceptions.NoSuchElementException'
[02:10:09] *** Quits: Akuli (~Akuli@213.216.209.132) (Quit: Leaving)
[02:10:12] <bjs> teut: yes, a dictionary and a for loop :)
[02:10:19] *** Quits: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net) (Quit: See you on the flip side.)
[02:10:32] <teut> :]  sure
[02:11:04] <bjs> teut: see also: defaultdict(list)
[02:11:13] <bjs> which makes the for loop slightly simpler
[02:11:44] *** Joins: wyclif (~wyclif@user/wyclif)
[02:12:15] <Repiphany> You could make something convoluted with itertools.groupby
[02:12:32] <teut> https://docs.python.org/3/library/collections.html#defaultdict-examples  nice
[02:12:39] <teut> thanks for it
[02:12:49] *** Joins: junktext (~junktext@77.247.181.209)
[02:12:57] <teut> groupby, well can be used
[02:13:38] <Repiphany> `{k:list(zip(*v))[1] for k, v in itertools.groupby(pairs, key = lambda x : x[0])}`
[02:13:58] <teut> X)
[02:14:18] <teut> my code was enough nasty
[02:14:40] *** Joins: Auron (Auron956@user/auron)
[02:15:18] <dude-x> newdimension selenium exceptions don't inherit exception?
[02:15:27] <dude-x> that sounds like a bug. also i haven't seen that
[02:15:33] *** Joins: y1n (~y1n@046125250106.public.t-mobile.at)
[02:15:43] <Repiphany> Non-itertools, `{k:[v[1] for v in pairs if v[0] == k] for k in set(list(zip(*pairs))[0])}`
[02:16:03] <newdimension> dude-: It's my fault. I wrote it as a string when I should have imported it from selenium
[02:16:27] <jmcantrell> I'm trying to write something that implements the sway bar protocol (https://man.archlinux.org/man/swaybar-protocol.7.en). This requires that data is continuously written to stdout, while also being read from stdin. I started looking into multiprocessing, thinking that I would use one process to just block on sys.stdin.readline() while another does the writing to stdout. Is this the right approach?
[02:16:29] <Fieldy> i'm using 3.9(.7 i think), i've got some output from a file being read. it has newlines and is literally showing "\n" as well as things like "\'" which just looks messy. is there a way i can effectively use sed on this?
[02:16:48] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[02:16:51] *** Quits: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263) (Quit: WeeChat 3.2)
[02:17:15] *** Joins: wyclif (~wyclif@user/wyclif)
[02:18:44] <teut> that looks cleaner  Repiphany  , thanks
[02:19:09] <Fieldy> i was close. 3.9.6 :P
[02:19:25] <grym> deniska: yeah i think it's toctou :(
[02:19:54] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:21:30] *** Quits: teut (~teut@182.68.241.120) (Quit: Connection closed)
[02:22:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[02:22:46] *** Joins: wyclif (~wyclif@user/wyclif)
[02:24:51] *** Joins: _SKiTZO (~dark@96.89-11-161.nextgentel.com)
[02:25:47] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[02:26:06] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[02:26:09] <yitz> Is it poor practice to use local variable names that shadow builtin functions?
[02:26:22] <grym> usualy
[02:27:11] <_SKiTZO> yitz, yes because sometimes depending on the keyword things will start behaving unexpectedly
[02:27:24] <_SKiTZO> put a underscore in front or after, or simply avoid it
[02:27:54] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[02:27:58] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:27:58] <yitz> Is there any style guides or PEPs or linters or anything that call that out?
[02:28:09] <phy1729> pylint does iirc
[02:28:19] *** Joins: wyclif (~wyclif@user/wyclif)
[02:28:36] <yitz> Thank you
[02:28:38] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[02:29:00] <phy1729> W0622: Redefining built-in 'map' (redefined-builtin)
[02:29:18] <yitz> Thanks!
[02:30:44] *** Quits: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net) (Quit: Leaving.)
[02:30:54] *** Joins: djhankb (~djhankb@208.113.164.68)
[02:31:18] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[02:31:27] *** Joins: Pilate (~pilate@pilate.io)
[02:31:27] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[02:32:13] *** Quits: System123 (~System123@ec2-52-61-197-79.us-gov-west-1.compute.amazonaws.com) (Ping timeout: 268 seconds)
[02:33:27] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[02:33:48] *** Joins: wyclif (~wyclif@user/wyclif)
[02:34:05] *** Parts: control (~v1@user/control) ()
[02:35:10] *** Quits: Steeve (~steve@user/steeve) (Quit: end)
[02:35:52] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-3c73-8987-2114-b53a.res6.spectrum.com) (Read error: Connection reset by peer)
[02:36:00] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:36:22] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[02:38:43] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[02:39:18] *** Quits: Nact (~l@2a02:a03f:c0b0:f600:3253:5994:1b4f:e854) (Ping timeout: 260 seconds)
[02:39:19] *** Joins: wyclif (~wyclif@user/wyclif)
[02:39:58] *** Joins: Nact (~l@109.130.159.80)
[02:44:00] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[02:44:28] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[02:45:22] *** Quits: Nact (~l@109.130.159.80) (Ping timeout: 252 seconds)
[02:45:33] *** Joins: besnn (~besnn@user/besnn)
[02:46:59] *** Joins: ASTOM (~yigit@212.253.112.28)
[02:47:17] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:47:24] *** Parts: ASTOM (~yigit@212.253.112.28) ()
[02:47:30] *** Joins: ASTOM (~yigit@212.253.112.28)
[02:48:15] <ASTOM> hello
[02:49:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[02:49:45] *** Joins: Elodin (~weechat@user/elodin)
[02:50:17] *** Joins: wyclif (~wyclif@user/wyclif)
[02:50:58] *** Quits: moto (~moto@user/moto) (Ping timeout: 260 seconds)
[02:51:39] *** Parts: ASTOM (~yigit@212.253.112.28) ()
[02:52:17] *** Joins: ASTOM (~yigit@212.253.112.28)
[02:52:19] *** Parts: ASTOM (~yigit@212.253.112.28) ()
[02:52:23] *** Joins: ASTOM (~yigit@212.253.112.28)
[02:53:22] <ASTOM> this is a testing can anybody read my message ?!
[02:53:30] <rama> ASTOM: ya
[02:53:48] <ASTOM> I finaly joined the server
[02:54:36] *** Joins: dalan6236 (~dalan@110-175-157-10.tpgi.com.au)
[02:55:19] *** Joins: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9)
[02:55:25] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[02:55:38] <ASTOM> what I should do after my udemy course finish ? I want to improve my coding skills
[02:56:13] *** Parts: ASTOM (~yigit@212.253.112.28) ()
[02:56:17] *** Joins: ASTOM (~yigit@212.253.112.28)
[02:56:23] *** Parts: ASTOM (~yigit@212.253.112.28) ()
[02:57:01] *** Joins: System123 (~System123@84.16.238.77)
[02:57:51] *** Lando-SpacePimp is now known as CRUNK-b0t
[02:58:03] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[03:00:35] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[03:00:46] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[03:01:17] *** Joins: wyclif (~wyclif@user/wyclif)
[03:01:32] <drew> I am writing a mouse and keyboard macro with pyautogui and I would like to highlihgt items on the screen as I am doing stuff. Is there a good library for drawing on the screen in this way?
[03:02:23] <rama> ASTOM you should work on some type of project, something that you can relate to.
[03:02:48] *** Joins: moto (~moto@user/moto)
[03:02:49] *** Joins: System12_ (~System123@203-134-35-213.sta.estpak.ee)
[03:03:08] *** Quits: System12_ (~System123@203-134-35-213.sta.estpak.ee) (Remote host closed the connection)
[03:03:29] *** Joins: djapo (~archangel@user/djapo)
[03:03:45] *** Joins: System12_ (~System123@203-134-35-213.sta.estpak.ee)
[03:03:53] *** Joins: stealth_ (~stealth_@216-197-160-97.regn.static.sasknet.sk.ca)
[03:04:15] <aphysically> okay I finally got github actions building a windows exe so I don't have to goof around with building it in WINE anymore
[03:04:40] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[03:05:06] *** Joins: nergar (~Nergar@177.225.152.16)
[03:06:02] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[03:06:28] *** Quits: System123 (~System123@84.16.238.77) (Ping timeout: 265 seconds)
[03:07:38] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[03:08:42] *** Joins: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net)
[03:08:42] *** Quits: System12_ (~System123@203-134-35-213.sta.estpak.ee) (Ping timeout: 260 seconds)
[03:08:51] *** Quits: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9) (Quit: Leaving)
[03:10:43] *** dfch is now known as yandere_dfch
[03:11:38] <ska> is there a reliable way to determine "this module" name on the cli?
[03:11:57] *** Quits: dub_a (~dub_a@2601:1c2:4e00:3b3::cb2) (Quit: WeeChat 3.2)
[03:12:57] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Quit: WeeChat 2.8)
[03:13:20] <drew> ok I found that I don't want to "draw on the screen," what I really want is a fullscreen transparent PyQt5 window that I can draw on. Is it possible to have a window be fullscreen and 'pinned' to the front but not focused with PyQt5?
[03:14:01] <BtbN> That's not gonna end up to work well
[03:14:05] *** yandere_dfch is now known as dfch
[03:14:29] <BtbN> you will block interaction with much about everything
[03:15:02] *** Quits: someguy123 (~someguy@user/someguy123) (Quit: someguy123)
[03:15:19] *** Joins: linux-phaedrus (~linux-sis@104.36.253.60)
[03:15:52] *** Quits: eightysix (~eightysix@2600:1700:bf32:3410:58e7:9d70:4c72:8958) (Quit: My iMac has gone to sleep. ZZZzzz…)
[03:17:08] <drew> Is there a different way to "draw over" other applications?
[03:18:45] <BtbN> I don't think there is. That'd be super dangerous and would open pishing attacks quite some doors
[03:19:03] <jmcantrell> How can I get the sys.stdin.readline call to block in a subprocess? https://paste.rs/1Qc
[03:19:06] <stealth_> drew what would be the point of doing such a thing? if you can explain what it is you are trying to do maybe there is a better way to go about it.
[03:19:38] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[03:19:59] <stealth_> jmcantrell, if you want it to block why run it in a subprocess?
[03:20:01] *** Joins: Elodin (~weechat@user/elodin)
[03:20:07] *** Quits: Jimmy2027 (~hendrik@2001:1620:2018:38:dde3:1b0f:dc57:eb0f) (Ping timeout: 252 seconds)
[03:20:23] <drew> sure. I'm writing a mouse and keyboard macro and I would like to highlihgt objects on the screen that are important for both debugging and for decoration
[03:20:50] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[03:21:03] <drew> like pyautogui.getpixel(x,y) if isRight: turnItBrightGreen()
[03:21:07] <jmcantrell> stealth_: i want to only do work when there is something available to read from stdin, and do some other work concurrently in another process
[03:21:23] <BtbN> drew, if that was possible, it seems like a security issue. So I doubt it.
[03:21:41] <drew> why would it be a security issue?
[03:21:49] *** Joins: Jimmy2027 (~hendrik@2001:1620:2018:38:dde3:1b0f:dc57:eb0f)
[03:21:53] *** Joins: computeiro (~Wender@189.37.66.42)
[03:21:58] <BtbN> Because you could do wild things in other apps and persuade the user to do bad things
[03:22:30] <stealth_> jmcantrell, o you mean you want it to be non-blocking
[03:23:18] *** Quits: linux-phaedrus (~linux-sis@104.36.253.60) (Quit: Leaving)
[03:23:26] <stealth_> jmcantrell, look into https://docs.python.org/3/library/asyncio-subprocess.html
[03:24:01] <jmcantrell> stealth_: no, i want the loop that reads from stdin to block until there is something to read, but i want it to be in a separate process so that other work can be going on elsewhere
[03:25:01] <_SKiTZO> ASTOM, welcome on board! I would recommend creating a small open source project that you find particularly interresting and then develop on that. Maybe it is just me, but having a project gives you a steady stream of useful challenges that are not "made up" but real world useful skills
[03:25:02] *** Joins: linux-phaedrus (~linux-sis@104.36.253.60)
[03:25:23] *** Quits: linux-phaedrus (~linux-sis@104.36.253.60) (Client Quit)
[03:25:40] *** Joins: linux-phaedrus (~linux-sis@104.36.253.60)
[03:26:10] *** Quits: webmind (~webmind@user/webmind) (Ping timeout: 252 seconds)
[03:27:42] <drew> ok that makes sense
[03:29:32] *** Joins: Polyinsecure (~Polyinsec@180.244.135.66)
[03:29:55] <mat001> Hey. Can OR condition for these two variables be done like so: if (client, config) is None?
[03:30:35] <nedbat> mat001: if client is None or config is None:
[03:31:18] <Repiphany> `if any(var is None for var in var_list):` for longer condition lists
[03:31:30] <mat001> nedbat: yes, that's what I'm trying to write more concisely. So parentheses capture parameters and apply or
[03:31:54] <nedbat> mat001: your parens don't do what you want
[03:31:59] *** Quits: Dantali0n (~Dantali0n@251-228-138-45.connected.by.freedominter.net) (Quit: Bye)
[03:32:05] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[03:32:33] <mat001> nedbat: uh? So I have to write each condition separately like you wrote?
[03:32:41] <Repiphany> `if None in (client, config):` even
[03:32:54] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:32:56] <nedbat> mat001: i would recommend it, yes
[03:33:07] <jmcantrell> stealth_: i don't see how asyncio will allow me to block on readline and also do other work
[03:33:20] <mat001> nedbat: TY
[03:33:51] *** Joins: pizdets (~pizdets@183.182.115.177)
[03:33:58] *** Joins: ASTOM (~yigit@212.253.112.28)
[03:33:58] *** Quits: pizdets_ (~pizdets@183.182.111.138) (Ping timeout: 250 seconds)
[03:34:24] *** Parts: ASTOM (~yigit@212.253.112.28) ()
[03:34:24] <stealth_> jmcantrell, isn't it already doing the block on subprocess though?
[03:34:52] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 252 seconds)
[03:35:13] <jmcantrell> stealth_: no, that's the issue. it blocks normally, but doesn't when run in a subprocess
[03:36:44] <stealth_> jmcantrell, could be you are not seeing it! i am not sure what the flush/buffering is set, but something like this should do block till it can read more https://bpa.st/J2FQ
[03:36:59] <Yhg1s> jmcantrell: you mean 'in a multiprocessing worker'. The multiprocessing worker is quite different from a regular process. For one thing, it doesn't have easy access to stdin.
[03:37:38] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 260 seconds)
[03:38:10] <jmcantrell> Yhg1s: ah, good to know. I'm guessing that's what I'm seeing.
[03:38:21] *** Joins: Dantali0n (~Dantali0n@2a10:3781:15ed::2000)
[03:38:22] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 265 seconds)
[03:38:33] <stealth_> o, ha, was thinking it was thread process
[03:38:34] *** Quits: The_Iron_Pig (~tip@2601:642:c000:6d9:4744:e4bd:a1a6:9012) (Ping timeout: 260 seconds)
[03:38:52] <Yhg1s> jmcantrell: I'm explicitly saying that's what you're seeing, yes :)
[03:39:04] *** Joins: webmind (~webmind@user/webmind)
[03:39:16] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[03:39:45] <jmcantrell> I didn't realize, sorry.
[03:40:06] *** Joins: Guddu (~Guddu@190.84.88.92)
[03:40:21] <jmcantrell> Maybe I could do the blocking read in the main process and do the other work in a multiprocessing worker?
[03:40:41] *** Quits: Ivii (~Ivyy@2001:a61:1329:3e01:da86:1615:8300:4b13) (Remote host closed the connection)
[03:41:07] <jmcantrell> Yhg1s: is writing to stdout an issue in a multiprocessing worker?
[03:41:22] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:43:01] <stealth_> jmcantrell, multiprocessing is probably wrong tool for the this job, thread is normally what ppl use to read io
[03:43:14] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[03:44:02] <Yhg1s> jmcantrell: I wouldn't recommend it, no. I don't remember if it's expected to work or not. (I'm not a particular fan of multiprocessing to start with. It has a _lot_ of surprise if you don't understand how it works.)
[03:44:55] *** Joins: fikran (~fikran@user/fikran)
[03:44:56] <jmcantrell> It seems to work, but I'm open to other suggestions.
[03:45:32] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[03:45:58] <Yhg1s> jmcantrell: trio, twisted, asyncio.
[03:45:58] *** Joins: hendursaga (~weechat@user/hendursaga)
[03:46:03] <jmcantrell> Well, looks like i need to detect EOF on stdin
[03:46:34] <stealth_> jmcantrell, as for multiprocessing https://bholley.net/blog/2015/must-be-this-tall-to-write-multi-threaded-code.html
[03:47:27] <jmcantrell> Give up. Good advice.
[03:49:26] *** Joins: NeilRG_ (~NeilRG@192.222.196.111)
[03:49:52] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[03:49:58] *** Quits: Polyinsecure (~Polyinsec@180.244.135.66) (Quit: Leaving)
[03:50:14] *** Joins: chenxuezhao (~chenxuezh@120.244.238.69)
[03:50:18] *** Quits: chenxuezhao (~chenxuezh@120.244.238.69) (Read error: Connection reset by peer)
[03:50:18] *** Joins: Elodin (~weechat@user/elodin)
[03:51:17] *** Quits: nuala (~nuala@user/nuala) (Ping timeout: 245 seconds)
[03:51:22] *** Quits: rigid (~rigid@user/rigid) (Ping timeout: 252 seconds)
[03:52:03] *** Quits: waynew (~wayne@user/waynew) (Quit: WeeChat 2.9)
[03:53:22] *** Joins: nawcom (~nawcom@bulldadachat.com)
[03:53:28] <bilb_ono> has anyone used the attrs library? I am having trouble figuring out how a list attribute gets initialized. https://bpa.st/7VZQ It seems to be a _CountingAttr rather than a list
[03:53:30] *** Quits: moto (~moto@user/moto) (Ping timeout: 260 seconds)
[03:53:40] *** Quits: NeilRG_ (~NeilRG@192.222.196.111) (Ping timeout: 240 seconds)
[03:53:50] *** Joins: cheater (~Username@user/cheater)
[03:54:50] *** Quits: besnn (~besnn@user/besnn) (Read error: Connection reset by peer)
[03:55:53] *** Joins: nuala (~nuala@user/nuala)
[03:56:24] <bilb_ono> I probably need to learn how attrs works generally before using it
[03:57:23] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Quit: leaving)
[03:57:54] *** Joins: WanderingGlitch (~Wandering@aha/hacker/wanderingglitch)
[03:58:04] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[03:58:11] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 265 seconds)
[03:59:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[03:59:29] <stealth_> bilb_ono, maybe you need `if len(self.location_ids):`
[03:59:36] *** Joins: Wulf (~Wulf@user/wulf)
[03:59:40] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[03:59:57] *** Joins: wyclif (~wyclif@user/wyclif)
[04:00:19] <bilb_ono> TypeError: object of type '_CountingAttr' has no len()
[04:00:21] <Yhg1s> bilb_ono: what you have should work.
[04:00:30] <Yhg1s> bilb_ono: however, you didn't paste enough of the code to see if you're using it right.
[04:00:35] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:04:55] <Yhg1s> bilb_ono: oh, I see. You forgot to apply the @attr.s decorator to Locations.
[04:05:19] <bilb_ono> ohh even though its a subclass of an attr’d class
[04:05:21] <bilb_ono> ok
[04:05:26] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 265 seconds)
[04:05:43] <Yhg1s> yes. Decorators aren't inherited. If you don't apply the attr.s decorator, it won't process the new attr.ib's.
[04:06:57] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[04:08:18] *** Joins: Retr0id3 (~Retr0id@user/retr0id)
[04:10:10] *** Quits: Retr0id (~Retr0id@user/retr0id) (Ping timeout: 252 seconds)
[04:10:10] *** Retr0id3 is now known as Retr0id
[04:11:43] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Ping timeout: 265 seconds)
[04:12:01] *** Quits: mjh4386 (~mjh4386@165.22.53.231) (Excess Flood)
[04:12:06] *** Joins: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br)
[04:12:25] *** Joins: elkclone (~elkclone@user/elkclone)
[04:12:42] *** Quits: Elodin (~weechat@user/elodin) (Quit: WeeChat 3.2)
[04:13:28] *** Quits: stoneware (~stoneware@user/stoneware) (Ping timeout: 252 seconds)
[04:14:10] *** Joins: roxfan2 (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[04:14:40] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[04:14:58] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Ping timeout: 252 seconds)
[04:15:26] <bilb_ono> hmm https://bpa.st/K76A
[04:15:34] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[04:15:36] <bilb_ono> ValueError: No mandatory attributes allowed after an attribute with a default value or factory.
[04:16:07] <bilb_ono> oh are you not allowed to do inheritance with attrs?
[04:16:13] <bilb_ono> Ive read they’re against it
[04:17:26] <Yhg1s> that's not what the error is about, no. The error means that you're making location_ids a required argument for the class, but it comes after the arguments from the parent class that are not required. You can't have a required argument after an optional one.
[04:18:15] <Yhg1s> you either have to make the arguments in the parent class required (or make them non-init attributes so they aren't arguments to the class), or make location_ids optional by giving it a default or a factory (or making it non-init)
[04:19:13] *** Joins: eightysix (~eightysix@2600:1700:bf32:3410:402c:b882:d03e:2f5a)
[04:19:56] <harpia> I'm following the packaging guide on python.org to upload my package to PyPI. I have packages under src/*, and a script at the project root dir that imports and executes them. This script is used to call the program from the shell and pass arguments via stdin. Is that a bad pattern? What do I need to do to build the wheel properly in this case?
[04:20:08] <rama> bilb_ono: we use inherited classes w/ attrs in production code
[04:20:10] <rama> works fine
[04:20:40] <grym> harpia: the script at the root dir ought to be named "setup.py" and use setuptools
[04:20:50] <Yhg1s> harpia: as long as it's not importing the package as 'src.packagename', it's fine. You can also replace the script with an entry point.
[04:20:58] <grym> harpia: expose command line entry points with entry points, is also nice
[04:21:15] <Yhg1s> harpia: if you want the script to be installed, it should be mentioned appropriately in whatever you're using to describe the package (pyproject.toml, setup.cfg, setup.py)
[04:21:16] *** Quits: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net) (Quit: Leaving.)
[04:21:51] <harpia> The guide says I should avoid setup.py unless absolutely necessary. What is this entry point thing?
[04:22:03] <grym> https://chriswarrick.com/blog/2014/09/15/python-apps-the-right-way-entry_points-and-scripts/
[04:22:15] *** Joins: mjh4386 (~mjh4386@165.22.53.231)
[04:22:17] <Yhg1s> harpia: that's why I mentioned two things before setup.py.
[04:22:18] <grym> you can specify them in setup.cfg or pyproject.toml too
[04:22:49] *** Quits: computeiro (~Wender@189.37.66.42) (Quit: Leaving)
[04:23:54] *** Quits: jkl (~jkl@user/jkl) (Quit: Gone.)
[04:24:17] *** Joins: jazzy (~jaziz@2600:380:865d:911b:314a:6024:eb18:305e)
[04:24:39] <grym> (language requiring __main__.py is also more or less out of date; you can point an entry point at any callable)
[04:24:55] *** Quits: eightysix (~eightysix@2600:1700:bf32:3410:402c:b882:d03e:2f5a) (Quit: My iMac has gone to sleep. ZZZzzz…)
[04:25:09] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Read error: Connection reset by peer)
[04:25:16] *** Joins: jkl (~jkl@user/jkl)
[04:26:42] *** Quits: jiffe (~jiffe@mail.nsab.us) (Ping timeout: 265 seconds)
[04:26:59] *** Joins: trashcatt (~trashcatt@znc.trashcat.xyz)
[04:27:11] *** Quits: qlixed (~qlixed@152.170.36.244) (Ping timeout: 265 seconds)
[04:27:28] *** Joins: jiffe (~jiffe@mail.nsab.us)
[04:27:30] *** Joins: akimbo (~akimbo@customer-145-40-27-9.stosn.net)
[04:27:44] <theprophet> grym can you help me? i am trying to write a program where you can hear certain hip hop artists rhyiming styles. and i want to include a sound under the certain rapper., do you know which module is better for this?
[04:29:23] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[04:29:26] *** Quits: y1n (~y1n@046125250106.public.t-mobile.at) (Ping timeout: 260 seconds)
[04:30:05] *** Quits: cdown (~cdown@194.207.141.245) (Ping timeout: 265 seconds)
[04:30:17] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:30:24] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 268 seconds)
[04:30:50] <amosbird> Hello! When I link with libpython.a, the final stripped ELF binary contains public symbols like Py_IsInitialized. Is there a way to get rid of them? like some linking options?
[04:31:12] <bilb_ono> Yhg1s: thanks that makes sense (and fixes it)
[04:31:16] <grym> theprophet: nothing comes to mind. that's a little under-specified
[04:31:20] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[04:31:52] *** Joins: Elzington_ (~Elzington@static-68-235-44-74.cust.tzulo.com)
[04:32:01] *** Quits: gitly (~gitly@185.69.144.142) (Ping timeout: 265 seconds)
[04:33:32] *** Joins: gitly (~gitly@185.69.145.133)
[04:33:45] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[04:33:51] <Yhg1s> amosbird: no, because doing so would break extension modules, like the ones that are part of the standard library.
[04:35:33] *** Quits: Elzington (~Elzington@68.235.43.62) (Ping timeout: 268 seconds)
[04:35:37] <harpia> Entry points it is, then. Thanks, I found the docs: https://setuptools.readthedocs.io/en/latest/userguide/entry_point.html
[04:35:40] *** Joins: zln (~zln@c80-217-230-193.bredband.tele2.se)
[04:36:17] <amosbird> Yhg1s: Interesting. But why these symbols cannot be resolved at linking time?
[04:37:08] <Yhg1s> amosbird: they are. extension modules are .so's. They're dynamically linked objects.
[04:37:27] <Yhg1s> harpia: I would probably read https://packaging.python.org/guides/distributing-packages-using-setuptools/#scripts and the sections that follow it instead, really.
[04:38:15] <jmcantrell> Yhg1s: i know you don't like multiprocessing, but do you see anything wrong with this? https://paste.rs/YKG
[04:38:58] <amosbird> Yhg1s: Well, ldd <final_elf> doesn't show any suspicious .so dependencies
[04:40:00] <Yhg1s> amosbird: the extension modules aren't dependencies of Python. They are separate .so's. They are loaded on demand, by 'import'. They use symbols from Python. The symbols have to exist, and be exported by whatever linked libpython.a.
[04:40:27] <Yhg1s> jmcantrell: as I mentioned before, I don't know if you can rely on stdout being sensible in multiprocessing workers.
[04:40:57] <jmcantrell> ok
[04:43:41] <jmcantrell> Yhg1s: sorry to be a nag, but can you point me to something that would indicate why it's a problem?
[04:44:34] *** Joins: NeilRG_ (~NeilRG@192.222.196.111)
[04:44:55] <Yhg1s> jmcantrell: other than the design of multiprocessing and the intricacies of processes and stdio, nope.
[04:45:05] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[04:45:13] <amosbird> Yhg1s: I see. Thanks
[04:45:44] <amosbird> Don't we have static libs for extension modules?
[04:45:53] <amosbird> at least for the standard libraries
[04:46:13] <Yhg1s> amosbird: I don't know who 'we' is. You *can* make the stdlib extension modules statically linked, but it's not normally the case.
[04:46:30] <Yhg1s> and that doesn't help any third-party modules.
[04:47:06] *** Joins: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net)
[04:47:21] *** Quits: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net) (Client Quit)
[04:48:13] *** Joins: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net)
[04:48:16] *** Quits: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net) (Client Quit)
[04:49:02] *** Quits: NeilRG_ (~NeilRG@192.222.196.111) (Ping timeout: 260 seconds)
[04:50:14] *** Quits: bilb_ono (~alexmarsh@ip68-6-90-72.sb.sd.cox.net) (Quit: bilb_ono)
[04:50:15] *** Joins: gravy (~gravy@60-242-96-144.tpgi.com.au)
[04:50:15] *** Joins: moto (~moto@user/moto)
[04:50:36] *** Joins: bandithijo (~bandithij@fedora/bandithijo)
[04:51:13] <eblip> hey i managed to find  a way to get my comma seperated list into *args.... i originally wrote lots of code to try and do it and it didnt work ...then finally i did this Yhg1s
[04:51:13] *** Quits: linux-phaedrus (~linux-sis@104.36.253.60) (Quit: Leaving)
[04:51:19] <eblip> fls = workcsv.MergeCsv(out, *files.split(','))
[04:51:32] <Yhg1s> eblip: or you could just not have taken *args.
[04:51:58] <eblip> i think i needed *args because sometimes i am merging 2 files..and other times i am merging 20
[04:52:25] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Quit: Soupy Twist!)
[04:52:30] *** Joins: rigid (~rigid@user/rigid)
[04:52:32] <eblip> so i needed a way to merge any number and *args seemed like a good method
[04:52:37] <Yhg1s> eblip: that's not a reason to make them all positional arguments, no.
[04:52:40] <grym> eblip: or pass a list
[04:52:45] <Yhg1s> eblip: you can just take a list as a single argument.
[04:53:34] <eblip> ah ..ha ha ..yes maybe i could have done that, but i was learning about *args and **kwargs
[04:54:41] *** Quits: drjp (jeanpaul@112-54-174-82.ftth.glasoperator.nl) (Ping timeout: 252 seconds)
[04:55:31] *** Joins: eightysix (~eightysix@2600:1700:bf32:3410:402c:b882:d03e:2f5a)
[04:55:58] *** Joins: leahey (~leahey@static.36.0.217.95.clients.your-server.de)
[04:56:13] *** Quits: moto (~moto@user/moto) (Ping timeout: 252 seconds)
[04:56:19] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:56:45] <eblip> hey so what is the point in *args if you can , as far as i know ALWAYS use a list
[04:57:03] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:57:04] <Yhg1s> eblip: because sometimes it *is* more convenient to have separate positional arguments.
[04:57:16] <eblip> ah ok, thanks
[04:57:32] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 268 seconds)
[05:01:59] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 265 seconds)
[05:03:01] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[05:04:17] *** Joins: System123 (~System123@203-134-35-213.sta.estpak.ee)
[05:06:33] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[05:08:51] *** Quits: System123 (~System123@203-134-35-213.sta.estpak.ee) (Ping timeout: 268 seconds)
[05:11:26] <harpia> Do you really need to check if __name__ == __main__ inside a __main__.py script? Isn't __main__.py made for this purpose already?
[05:11:54] <grym>  harpia: if i have entrypoints, i typically don't have that check
[05:12:15] *** Joins: qlixed (~qlixed@181.44.129.13)
[05:12:26] <grym> (and i don't anticipate users running individual files of my package directly)
[05:12:47] <grym> __main__.py is so you can python -m yourpackagename
[05:12:48] <eightysix> grym what are entrypoints?
[05:12:51] <grym> which i also don't do
[05:13:18] <grym> eightysix: how you make your package act like a cli program
[05:13:41] <eightysix> grym that sounds very useful, how do you do it?
[05:14:05] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[05:14:13] <harpia> I'm reading this: https://setuptools.readthedocs.io/en/latest/userguide/entry_point.html
[05:14:28] <grym> eightysix: in your setup.py/cfg / pyproject.toml, you can map strings to callables
[05:16:06] *** Quits: nergar (~Nergar@177.225.152.16) (Ping timeout: 260 seconds)
[05:16:30] <eightysix> I use poetry, what should I google to look into this? Just entrypoints and poetry?
[05:17:02] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[05:17:03] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2.1)
[05:17:04] <grym> eightysix: https://tildegit.org/grym/oxo/src/branch/master/pyproject.toml#L43
[05:17:07] <grym> that's how you'd do it
[05:17:26] <grym> tomlkeynameofcliprogram = "package.module:callable"
[05:17:28] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[05:18:00] *** Joins: moto (~moto@user/moto)
[05:19:39] <eightysix> grym thank you. I'm looking through this file to try to find it.
[05:19:52] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 265 seconds)
[05:20:33] <eightysix> [tool.poetry.scripts]
[05:20:33] <eightysix> oxo = "oxo.__main__:app"
[05:20:45] <eightysix> That?
[05:20:46] <grym> eightysix: i linked you to the correct line
[05:20:51] <grym> L43, 44
[05:20:59] <eightysix> You did, sorry about that.
[05:21:17] <eightysix> Very, very cool. Thank you!
[05:21:42] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[05:21:49] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[05:21:54] <grym> sure thing!
[05:22:03] <grym> incidentally you can have more than one of them
[05:22:17] <eightysix> Right I figured. That's awesome thank you.
[05:22:34] <eightysix> Is OXO your project?
[05:22:42] <grym> all 50 lines of it, yeah
[05:22:48] <grym> the service it calls, no
[05:24:23] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[05:25:11] *** Quits: qpdb_ (~qpdb@user/qpdb) (Ping timeout: 265 seconds)
[05:27:01] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[05:27:48] *** Quits: nomic (~nomic@185.217.117.156) (Quit: Leaving)
[05:27:55] *** Joins: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net)
[05:28:50] *** Quits: brachamh (~brachamh@user/brachamh) (Ping timeout: 260 seconds)
[05:29:23] *** Joins: brachamh (~brachamh@user/brachamh)
[05:30:24] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:40] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[05:31:39] <aphysically> okay, today I set up CI to automatically lint and stuff and to build releases for platforms :)
[05:31:55] <aphysically> I definitely didn't need 25 commits to figure it out that I later squashed and pretended it didn't happen
[05:32:07] *** Joins: Gudddu (~Guddu@190.84.88.92)
[05:32:11] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[05:32:34] <grym> aphysically: company record for beating jenkins into shape is in the low hundreds
[05:35:20] *** Quits: Guddu (~Guddu@190.84.88.92) (Ping timeout: 265 seconds)
[05:35:30] *** Joins: vlm (~vlm@user/vlm)
[05:35:37] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[05:35:39] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:38:16] *** Joins: qpdb_ (~qpdb@user/qpdb)
[05:38:34] *** Quits: umamisoup (uid511883@id-511883.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[05:40:54] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[05:42:28] <aphysically> I believe it
[05:43:03] *** Quits: zrsm (~mrrobot@173.171.254.123) (Quit: BitchX-1.2.1-419-geaf6456 -- just do it.)
[05:43:04] *** Joins: frost (~frost@59.71.242.61)
[05:43:54] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[05:44:56] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[05:45:23] *** Quits: Vision (~Vision@024-178-231-173.res.spectrum.com) (Read error: Connection reset by peer)
[05:46:31] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[05:46:45] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[05:47:50] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[05:52:19] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[05:52:25] *** Quits: ferz (~ferz@93-39-143-224.ip76.fastwebnet.it) (Ping timeout: 268 seconds)
[05:53:46] *** Joins: Vision (~Vision@024-178-231-173.res.spectrum.com)
[05:53:48] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[05:54:25] *** Joins: fikran (~fikran@user/fikran)
[05:54:45] *** Quits: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net) (Quit: Leaving.)
[05:54:55] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[05:55:32] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[05:56:50] *** Joins: Kvothe (~weechat@user/elodin)
[05:57:34] *** Quits: stealth_ (~stealth_@216-197-160-97.regn.static.sasknet.sk.ca) (Quit: Leaving)
[05:57:40] *** Joins: tg_ (~tg@rockylinux/infra/tg)
[05:57:58] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 268 seconds)
[05:58:01] *** Quits: Kvothe (~weechat@user/elodin) (Client Quit)
[05:58:40] *** Joins: Elodin (~weechat@user/elodin)
[06:01:05] *** Joins: cheater (~Username@user/cheater)
[06:01:16] *** Quits: tg (~tg@rockylinux/infra/tg) (Ping timeout: 268 seconds)
[06:02:03] *** Joins: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net)
[06:04:19] *** Quits: zaquest (~notzaques@5.128.210.178) (Quit: Leaving)
[06:08:36] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:09:14] *** Quits: lastshell (~lastshell@user/lastshell) (Remote host closed the connection)
[06:09:14] *** Joins: ferz (~ferz@93-39-143-224.ip76.fastwebnet.it)
[06:10:18] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 268 seconds)
[06:10:18] *** brabrax_ is now known as brabrax
[06:11:43] *** Joins: Ben10 (~Ben10@197.220.169.146)
[06:12:22] *** Quits: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net) (Quit: Leaving.)
[06:12:26] *** Joins: zaquest (~notzaques@5.128.210.178)
[06:13:59] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[06:14:11] *** Joins: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net)
[06:14:13] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.2)
[06:15:20] *** Joins: srhm (~srhm@user/srhm)
[06:15:22] *** Quits: CRUNK-b0t (~Lando@user/lando-spacepimp) (Ping timeout: 260 seconds)
[06:15:53] <Ben10> Hello
[06:16:24] <Ben10> Which Anaconda distribution include python 3.7.1 as its defaults python version?
[06:16:28] *** Joins: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net)
[06:17:53] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[06:19:33] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 268 seconds)
[06:20:19] *** Joins: gggp (~textual@60.10.23.160)
[06:20:44] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:21:06] *** Joins: srhm (~srhm@user/srhm)
[06:21:29] *** Joins: Ben1038 (~Ben10@154.160.26.23)
[06:22:25] *** Ben1038 is now known as loop
[06:22:26] *** Joins: ckdCreations (~ckdCreati@147.55.130.34)
[06:23:52] *** loop is now known as james007
[06:23:54] *** Quits: Ben10 (~Ben10@197.220.169.146) (Ping timeout: 256 seconds)
[06:25:06] *** Joins: cellofellow (~user@166.70.50.58)
[06:25:07] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 265 seconds)
[06:25:44] *** Quits: Joel (~jjshoe@user/joel) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[06:26:13] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[06:26:41] *** Joins: srhm (~srhm@user/srhm)
[06:28:59] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 265 seconds)
[06:29:08] *** Quits: gggp (~textual@60.10.23.160) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:29:54] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[06:29:57] *** Quits: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net) (Ping timeout: 265 seconds)
[06:30:24] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[06:30:39] *** Quits: KeiraT (~k@lulzsec.co.uk) (Ping timeout: 268 seconds)
[06:30:44] *** Quits: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net) (Ping timeout: 256 seconds)
[06:30:55] *** Joins: djhankb (~djhankb@208.113.164.68)
[06:31:18] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[06:31:22] *** Quits: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br) (Quit: Leaving)
[06:31:38] *** Joins: srhm (~srhm@user/srhm)
[06:31:51] *** Quits: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net) (Quit: Leaving.)
[06:32:26] *** Joins: Elodin (~weechat@user/elodin)
[06:33:06] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 260 seconds)
[06:33:13] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[06:33:15] *** Joins: bilb_ono (~alexmarsh@ip68-6-90-72.sb.sd.cox.net)
[06:33:47] *** Quits: deltab (~deltab@user/deltab) (Ping timeout: 240 seconds)
[06:35:10] *** Parts: justsomeguy (~justsomeg@user/justsomeguy) (WeeChat 3.2)
[06:38:06] *** Joins: KeiraT (~k@lulzsec.co.uk)
[06:39:02] *** Joins: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net)
[06:39:30] *** Joins: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net)
[06:40:07] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[06:40:26] *** Quits: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net) (Client Quit)
[06:40:33] *** Joins: wyclif (~wyclif@user/wyclif)
[06:40:47] *** Joins: Joel (~jjshoe@user/joel)
[06:41:20] *** Quits: eightysix (~eightysix@2600:1700:bf32:3410:402c:b882:d03e:2f5a) (Quit: My iMac has gone to sleep. ZZZzzz…)
[06:41:47] *** Joins: gggp (~textual@60.10.194.43)
[06:42:02] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[06:42:23] *** Joins: semeion (~semeion@user/semeion)
[06:43:31] *** Joins: deltab (~deltab@user/deltab)
[06:44:18] *** Joins: ranu (~ranu@2804:14c:6583:6e67::b5ac)
[06:44:32] *** Joins: cashew (~cashugh@user/cashew)
[06:44:47] <ranu> Hello, is there any way to parse only the data of a .png image and encrypt it, rendering the result of the encryption?
[06:45:01] *** Joins: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net)
[06:45:01] <ranu> I'm encrypting the hole file and as you can imagine there's nothing to see
[06:45:05] <ranu> whole*
[06:45:51] <tumbleweed> encrypted data won't be a valid PNG image
[06:46:14] <tumbleweed> it'll look like random bytes
[06:47:15] *** Quits: ZedHedTed (~ZedHedTed@user/zedhedted) (Quit: leaving)
[06:47:20] <ranu> yep, I assumed that
[06:47:27] <james007> Which Anaconda distribution include python 3.7.1 as its defaults python version?
[06:47:41] <ranu> but are some samples in the web showing the results  of an encrypted image
[06:48:20] <tumbleweed> ranu: I think the best way to recreate that sort of visualization is a raw image format
[06:48:43] <ranu> A bitmap of sorts?
[06:48:45] <tumbleweed> yeah
[06:49:19] *** semeion is now known as mnemonic
[06:50:07] <ranu> tumbleweed ok, I'll try that
[06:50:24] <ranu> https://media.discordapp.net/attachments/880230423085600868/887523126697664582/crypto.png
[06:50:29] <ranu> that's the kind of result I'm after
[06:51:00] <aphysically> for a second I thought this meant the start_time on streams and I got nervous https://github.com/FFmpeg/FFmpeg/commit/6b08ed9f956408e9d5ef0339a51258cb2a648042
[06:52:39] *** Quits: gggp (~textual@60.10.194.43) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:52:40] *** Quits: fr_sleepy (~fr_sleepy@209.94.138.128) (Remote host closed the connection)
[06:53:22] <tumbleweed> ranu: most bitmaps have a very simple header that you can strip before encrypting and prefix to the cipher text to display it
[06:53:44] <ranu> that's a better idea, I'm using png currently
[06:54:28] *** Joins: akoana (~ah@user/akoana)
[06:54:53] <Repiphany> ranu: Presumably you read your png into a w*l*3 array of bytes and your encrypted data would be the same shape
[06:55:15] *** Joins: grys (~quassel@botters/gry)
[06:55:28] <ranu> l = length?
[06:55:39] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[06:55:39] <ranu> that's quite nice Repiphany
[06:55:51] <Repiphany> width/length of the image and 3 color channels (or 4 with alpha)
[06:56:01] <ranu> ok
[06:56:04] <ranu> thanks
[06:56:19] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[06:56:34] *** Parts: akoana (~ah@user/akoana) ()
[06:56:53] <Repiphany> I'm asking what you're doing, because directly encrypting the png file won't get you a readable image out
[06:57:04] <k_sze> docs.python.org is down?
[06:57:40] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Quit: I'm tired, have a good time!)
[06:57:50] <ranu> Repiphany that's exactly what I'm doing. Didn't notice the question
[06:57:56] <ranu> sorry
[06:58:26] *** Lando-SpacePimp is now known as CRUNK-b0t
[07:00:04] <ranu> So Repiphany, I'm directly reading a png image from a file, without striping its header or any information off of it
[07:02:02] <Repiphany> What are you using to read the data
[07:02:11] *** Quits: ircuser-1 (~Johnny@71.63.241.168) (Quit: because)
[07:02:12] <Repiphany> PIL/numpy?
[07:02:33] <james007> Any Anaconda users here?
[07:03:58] *** Joins: Macuser (~Macuser@216.30.159.201)
[07:04:06] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[07:04:08] *** Quits: james007 (~Ben10@154.160.26.23) (Quit: Client closed)
[07:04:25] *** Joins: ircuser-1 (~Johnny@71.63.241.168)
[07:04:36] *** Joins: Ben10 (~Ben10@154.160.26.23)
[07:05:10] *** Ben10 is now known as james007
[07:05:50] *** Joins: System123 (~System123@203-134-35-213.sta.estpak.ee)
[07:08:16] *** Quits: zln (~zln@c80-217-230-193.bredband.tele2.se) (Ping timeout: 268 seconds)
[07:08:59] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[07:09:14] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Quit: Ping timeout (120 seconds))
[07:09:38] *** Joins: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net)
[07:10:13] <Cheaterman> I friggin love async :-) trio-flavored in particular
[07:10:20] *** Quits: System123 (~System123@203-134-35-213.sta.estpak.ee) (Ping timeout: 268 seconds)
[07:10:33] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 265 seconds)
[07:10:50] *** Quits: james007 (~Ben10@154.160.26.23) (Quit: Client closed)
[07:10:51] <Cheaterman> I did some "full stack" Python today in some sort of weird way... uasyncio using micropython on ESP32, talking to trio on laptop
[07:11:35] *** Joins: jetchisel (jetchisel@user/jetchisel)
[07:11:35] <Cheaterman> Sockets and hardware and stuff :) fun times
[07:11:40] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Remote host closed the connection)
[07:11:54] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[07:12:00] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[07:12:46] *** Quits: tokerboker (~tokerboke@c-73-71-182-125.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[07:12:48] *** Joins: audio (~audio@2603-8081-1800-6a6f-b618-6529-ea8e-90bb.res6.spectrum.com)
[07:13:15] <ranu> Repiphany, read the image from disk directly
[07:13:23] <ranu> reading*
[07:13:35] <ranu> using a handler and reading it
[07:13:53] *** Quits: cellofellow (~user@166.70.50.58) (Remote host closed the connection)
[07:14:51] <Repiphany> You need to decompress the png to get the bitmap data somehow though
[07:15:47] *** Joins: Ben10 (~Ben10@154.160.26.23)
[07:16:18] *** Ben10 is now known as james007
[07:16:44] *** Quits: kantlivelong (~kantlivel@cpe-67-250-125-43.hvc.res.rr.com) (Changing host)
[07:16:44] *** Joins: kantlivelong (~kantlivel@octoprint/kantlivelong)
[07:18:51] *** Quits: Elzington_ (~Elzington@static-68-235-44-74.cust.tzulo.com) (Quit: Leaving)
[07:21:33] <ranu> I will try to load the image with PIL and get some data from it
[07:24:34] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[07:24:48] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:27:16] <ranu> Well, weird. Calling getcolors or getpalette from a loaded image returns None
[07:27:43] *** Joins: acresearch (~acresearc@user/acresearch)
[07:27:56] <acresearch> if i have a function that returns a value, can i run it through multiprocess and have it also return values? or is it not possible?
[07:28:27] *** Quits: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net) (Quit: Leaving.)
[07:28:34] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 252 seconds)
[07:30:07] <ranu> acresearch, yes.
[07:30:11] <ranu> that's a critical region
[07:30:18] <ranu> just make sure to not have any sort of racing condition over that data
[07:30:40] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[07:31:10] <acresearch> what do you mean a criterion region?
[07:31:51] <ranu> https://en.wikipedia.org/wiki/Critical_section
[07:34:10] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Remote host closed the connection)
[07:34:29] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[07:34:32] *** Quits: bandithijo (~bandithij@fedora/bandithijo) (Quit: WeeChat 3.2)
[07:34:35] *** Joins: KombuchaKip (~kip@192.252.230.5)
[07:37:41] *** Quits: bilb_ono (~alexmarsh@ip68-6-90-72.sb.sd.cox.net) (Quit: bilb_ono)
[07:40:40] *** Joins: Jainly (~Jainly@46-10-99-49.ip.btc-net.bg)
[07:40:58] <Jainly> hi anyone alive
[07:41:09] <vdamewood> Nope. All dead.
[07:41:25] *** Joins: et_ (~et@user/et)
[07:41:44] <Jainly> i mean online not real dead you know
[07:42:01] <Jainly> :D
[07:42:19] *** Quits: et (~et@user/et) (Ping timeout: 252 seconds)
[07:42:19] *** et_ is now known as et
[07:42:40] *** Quits: james007 (~Ben10@154.160.26.23) (Ping timeout: 256 seconds)
[07:45:38] <Jainly> Need some help with python
[07:45:46] <Jainly> python3 -c 'import sys;print("".join([chr(int(i, 16)) for i in sys.argv[1:]]))' 48 65 78 20 65 6e
[07:46:05] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:46:51] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[07:47:12] <Jainly> need something like that but to decode binary : 0110011001 instead hexadecimal this one working and very well
[07:48:04] *** Joins: et_ (~et@user/et)
[07:48:15] <Jainly> like this
[07:48:18] <Jainly> int("010110011", 2)
[07:48:23] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:48:30] <Jainly> how to configure the syntax?
[07:49:11] *** Quits: et (~et@user/et) (Ping timeout: 268 seconds)
[07:49:11] *** et_ is now known as et
[07:50:35] <Repiphany> Decode to what
[07:50:42] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[07:50:49] <Jainly> binary
[07:51:02] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 268 seconds)
[07:51:07] <Jainly> string r text
[07:52:49] <Repiphany> Do you know if your binary string is valid as text
[07:53:00] <Jainly> of course
[07:53:26] <Jainly> its has a purpose, its a specific message
[07:54:23] *** Quits: tg_ (~tg@rockylinux/infra/tg) (Quit: tg_)
[07:55:08] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[07:55:14] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:55:23] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[07:55:42] <Repiphany> int(binary_string, 2).to_bytes(math.ceil(len(binary_string)/8), 'big').decode()
[07:56:09] *** Joins: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net)
[07:56:12] *** Quits: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net) (Client Quit)
[07:56:23] <Jainly> what is that may i ask
[07:56:33] <Jainly> sorry
[07:56:40] *** Joins: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br)
[07:57:26] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 265 seconds)
[07:58:09] <Repiphany> You're reading the binary string as an int, converting it to bytes and then decoding the bytestring as utf-8
[07:59:58] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[08:00:10] <Jainly> how to execute it in shell
[08:00:26] <Jainly> not to save it as file
[08:01:00] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[08:01:01] *** Quits: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net) (Ping timeout: 252 seconds)
[08:01:50] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[08:01:55] *** Quits: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net) (Ping timeout: 268 seconds)
[08:02:08] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[08:02:12] <Jainly> binary_int = int("11000010110001001100011", 2)
[08:02:12] <Jainly> byte_number = binary_int.bit_length() + 7 // 8
[08:02:13] <Jainly> binary_array = binary_int.to_bytes(byte_number, "big")
[08:02:13] <Jainly> ascii_text = binary_array.decode()
[08:02:14] <Jainly> print(ascii_text)
[08:02:14] <Jainly> OUTPUT
[08:02:15] <Jainly> abc
[08:02:32] *** Quits: KeiraT (~k@lulzsec.co.uk) (Ping timeout: 268 seconds)
[08:02:43] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[08:03:36] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[08:03:54] *** Joins: fikran (~fikran@user/fikran)
[08:04:45] <junktext> Well, you can do this, Jainly: In ASCII, the letter "r" is 01110010, so you can prefix the binary number with "0b", and then do:
[08:04:47] <junktext> chr(0b01110010)
[08:04:58] <junktext> Output is: r
[08:07:41] <Jainly> how to do it as a function or program as script
[08:07:42] *** Joins: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net)
[08:07:43] *** Joins: KeiraT (~k@lulzsec.co.uk)
[08:08:05] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 268 seconds)
[08:08:22] <Jainly> lets say put my binary there and to print output text
[08:08:27] <Jainly> in zsh
[08:09:04] *** Quits: ShorTie (~ShorTie@71.sub-72-108-78.myvzw.com) (Remote host closed the connection)
[08:11:45] *** Quits: Aye (jeda@hellomouse/dev/cryb.jeda) (Quit: //System Offline//)
[08:12:51] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Quit: Leaving...)
[08:13:51] *** Joins: Aye (jeda@hellomouse/dev/cryb.jeda)
[08:13:52] <junktext> You may need to know how the binary text was encoded. Like, ASCII is easier, but Unicode is weirder due to UTF-8, UTF-16, UTF-32 forms.
[08:14:20] *** Joins: Ben10 (~Ben10@154.160.26.23)
[08:15:06] <junktext> Like, you need to know which portions of the binary numbers delimit a particular character (e.g., a letter, number, punctuation).
[08:15:21] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:15:32] *** Ben10 is now known as jamess007
[08:16:29] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[08:16:47] <Jainly> its get complicated, how to do that
[08:16:49] *** Joins: fdan (~fdan@192.146.154.3)
[08:17:11] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[08:17:22] *** Joins: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net)
[08:17:38] <Jainly> ok lets say it is ASCII
[08:17:51] *** Quits: roxfan2 (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[08:18:27] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[08:19:25] <fdan> i want a function to get a number and print something like this 10 5 0 5 10
[08:19:45] <Jainly> yes mee 2
[08:19:50] <junktext> Then for standard ASCII, 0-127 in decimal, with 127 being 0111 1111, then you know that each ASCII character is delimited by 8 bits.
[08:20:38] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 268 seconds)
[08:21:08] <junktext> So, you could loop my technique to carve up each portion of a binary string into 8 bits, converting each into an ASCII character.
[08:21:14] <Jainly> it wont work
[08:21:31] <junktext> What do you mean?
[08:21:36] *** Quits: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br) (Quit: Leaving)
[08:21:56] <twb> Jainly: is this homework?
[08:22:04] <Jainly> i mean i have no idea whats going on
[08:22:16] <Jainly> twb:No
[08:22:41] *** Quits: acresearch (~acresearc@user/acresearch) (Quit: WeeChat 2.8)
[08:23:03] <hogarius> Jainly:  Why do you even need to worry about converting the ascii values to and from binary?
[08:23:04] <InPhase> twb: Can you imagine the homework solution submitted as python3 -c 'import ...'  lol
[08:23:56] <twb> InPhase: well my homework submissions used to be auto-graded by a procmail script running on a solaris server, so...
[08:24:07] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[08:24:25] <Jainly> hogarius: my code its not sure that is ascii, i just say lets say (imagine) that is ASCII ok
[08:25:28] <InPhase> Jainly: If this a learning exercise or a real problem?  If a real problem, is your input a text file of 1s and 0s?  If so, how did this happen?  (It's important to avoid xy problems.)
[08:26:38] *** Joins: totenkoph (~scythe@user/totenkoph)
[08:26:44] <Jainly> it is not for learning, I am not python programmer i need to decode binary with python. thats all :)
[08:26:48] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 268 seconds)
[08:26:57] <InPhase> Jainly: Do you have a "binary file"?
[08:27:02] <Jainly> yes
[08:27:35] <InPhase> Jainly: When you open it with a text editor, like notepad, or vim, or text edit, do you see 1s and 0s, or do you see cryptic stuff you can't decipher?
[08:28:11] <Jainly> i have pure binary not encrypted code
[08:28:24] <Jainly> just what to convert it to text
[08:28:33] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:28:44] <InPhase> Jainly: But in the text editor, do you see 1s and 0s, or things that look like strange characters?
[08:28:56] <twb> Jainly: what is the name of this file?
[08:31:06] <Jainly> inPhase i see machine code binary 1nes and 0zeros!
[08:31:32] <Jainly> twb: there is no file name or typr
[08:32:30] <Jainly> inphase: if were strange character would be encrypted or unicode for sure.
[08:33:06] <InPhase> Jainly: To be clear, I'm not trying to be difficult with this line of questioning.  Some of the words you're using make me concerned you're asking the wrong questions to get to the end goal you're looking for.  Can you show a screenshot of what you're calling "machine code binary 1nes and 0zeros"?  imgur.com will accept screenshot uploads.
[08:33:19] <twb> Jainly: you have a "binary file", but the file has "no file name" at all?  How do you address it?
[08:33:22] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 268 seconds)
[08:33:28] *** Joins: jamer05 (~jamer05@user/jamer05)
[08:34:34] <fdan> i want a function to get a number and print something like this 10 5 0 5 10
[08:34:35] <hogarius> jainly: Where are the 1s and 0s coming from?
[08:34:49] <Jainly> No! No No. I have 010011 01001110 10001001 10001001 010101 10101011
[08:34:49] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 268 seconds)
[08:35:14] <Jainly> but that is not real value
[08:35:47] <Jainly> python3 -c 'import sys;print("".join([chr(int(i, 16)) for i in sys.argv[1:]]))' 48 65 78 20 65 6e
[08:35:58] <Jainly> this very simple thing
[08:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2.1)
[08:36:02] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:36:12] *** Joins: Gurkenglas (~Gurkengla@dslb-002-207-014-195.002.207.pools.vodafone-ip.de)
[08:36:28] <Jainly> covert it to text from hexadecimal
[08:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:36:52] *** Quits: Gurkenglas (~Gurkengla@dslb-002-207-014-195.002.207.pools.vodafone-ip.de) (Read error: Connection reset by peer)
[08:36:57] <Jainly> i want the same but with 101010101
[08:37:10] *** Joins: Gurkenglas (~Gurkengla@dslb-002-207-014-195.002.207.pools.vodafone-ip.de)
[08:37:15] *** Joins: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[08:37:19] <Jainly> a_binary_string = "01100001 01100010 01100011"
[08:37:19] <Jainly> ascii_string = "".join([chr(int(binary, 2)) for binary in a_binary_string.split(" ")])
[08:37:20] <Jainly> # ascii_string = "abc"
[08:37:54] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 268 seconds)
[08:38:02] *** Quits: tbcr (~tbcr@user/tbcr) (Ping timeout: 265 seconds)
[08:38:06] <fdan> could anyone help. i have a simple usecase with that
[08:40:10] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[08:40:53] <hogarius> Jainly: those two lines of code should produce the result in the third line, I think.
[08:41:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[08:41:43] *** Quits: gitly (~gitly@185.69.145.133) (Ping timeout: 252 seconds)
[08:42:26] *** Joins: wyclif (~wyclif@user/wyclif)
[08:42:32] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[08:42:49] <Jainly> ok this probably work but i cant define the syntax im not python programmer as i mention above :)
[08:42:52] *** Quits: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net) (Ping timeout: 265 seconds)
[08:43:15] *** Joins: karstensrage (~karstensr@user/karstensrage)
[08:43:18] *** Quits: KeiraT (~k@lulzsec.co.uk) (Ping timeout: 260 seconds)
[08:43:23] *** Joins: MattWThomas (~macravin@161.38.68.34.bc.googleusercontent.com)
[08:43:23] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[08:43:41] *** Quits: fdan (~fdan@192.146.154.3) (Quit: Client closed)
[08:43:46] *** Quits: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net) (Ping timeout: 260 seconds)
[08:43:51] *** Joins: gitly (~gitly@185.69.144.134)
[08:44:13] *** MattWThomas is now known as mwt
[08:45:42] *** Quits: LiftLeft (~LiftLeft@172.98.80.53) (Ping timeout: 268 seconds)
[08:45:46] *** Quits: deltab (~deltab@user/deltab) (Ping timeout: 265 seconds)
[08:46:26] <hogarius> Jainly: do you have experience in any other programming language?
[08:46:48] <Jainly> yes
[08:48:02] *** Joins: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net)
[08:48:29] *** Parts: karstensrage (~karstensr@user/karstensrage) (Leaving)
[08:48:36] *** Joins: KeiraT (~k@lulzsec.co.uk)
[08:49:13] <hogarius> Jainly: Which language?  How would you write what you want in that other language?
[08:52:42] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[08:52:50] *** Joins: Atque (~Atque@user/atque)
[08:53:01] *** Joins: wyclif (~wyclif@user/wyclif)
[08:53:59] *** Quits: Gudddu (~Guddu@190.84.88.92) (Quit: Leaving)
[08:54:02] <Jainly> well for some language the libraries does the half job
[08:55:08] <InPhase> Definitely different from Python then.  Here the libraries typically do 90% of the job.  :)
[08:56:21] *** Joins: deltab (~deltab@user/deltab)
[08:57:48] *** Joins: zopsi (zopsi@2600:3c00::f03c:91ff:fe14:551f)
[08:58:09] *** Joins: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net)
[08:58:10] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 240 seconds)
[08:58:52] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 268 seconds)
[08:59:37] <hogarius> Jainly: I honestly don't know Python well enough to do this, but I could look up the functions and such at  https://docs.python.org/3/tutorial/index.html
[09:00:03] <Jainly> SyntaxError: unexpected EOF while parsing
[09:00:10] *** Joins: gggp (~textual@111.63.44.4)
[09:00:30] <Jainly> im doing this right now and failing :D
[09:01:49] <jinsun> keep double quotes outside and single quotes inside
[09:02:44] <jinsun> though i have no idea why one way works on my machiine and not the other
[09:04:06] <jinsun> oh I see why now, at least on my machine, powershell converting "" to "
[09:04:12] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:def0:6996:2bb9:77) (Ping timeout: 268 seconds)
[09:04:28] <jinsun> but it leaves '' as it is
[09:07:02] *** Quits: gggp (~textual@111.63.44.4) (Ping timeout: 265 seconds)
[09:09:13] *** Quits: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[09:11:43] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:15:17] <Jainly> Shit, im out f****. Im so angry nothings gonna work. Finally i do the job with binary translator :(
[09:16:01] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:def0:6996:2bb9:77)
[09:16:29] <Jainly> at least it has all types coding
[09:18:01] *** Quits: grnman_ (~gandalf@c-73-49-209-161.hsd1.fl.comcast.net) (Ping timeout: 252 seconds)
[09:19:18] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[09:19:37] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[09:19:39] *** Joins: grnman_ (~gandalf@c-73-49-209-161.hsd1.fl.comcast.net)
[09:21:04] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:1521:be1f:e03b:19b2) (Read error: Connection reset by peer)
[09:21:59] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:22:57] *** Quits: jamess007 (~Ben10@154.160.26.23) (Ping timeout: 256 seconds)
[09:26:06] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[09:26:14] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[09:26:26] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[09:30:31] *** Joins: jetchisel (jetchisel@user/jetchisel)
[09:30:52] *** Joins: stranac (~stranac@195.29.239.126)
[09:32:40] *** Joins: gggp (~textual@114.245.105.139)
[09:34:06] *** Quits: mnemonic (~semeion@user/semeion) (Ping timeout: 265 seconds)
[09:34:15] *** Quits: EgonX (~EgonX@2601:2c6:47f:9c18:ec5e:fd8:129f:12a6) (Quit: Textual IRC Client: www.textualapp.com)
[09:35:01] <jim> how do I format a 2-digit integer, if it's actually 1 digit, as space-digit, or two-digit as digit-digit?
[09:36:37] <grawity> space padding is the default when you specify a width
[09:36:50] <grawity> so ("%2d" % digit) for %-formatting, f"{x:2}" for f-string formatting, etc
[09:36:51] *** Joins: ubert (~Thunderbi@178.165.181.26.wireless.dyn.drei.com)
[09:37:22] *** Joins: emerent_ (~quassel@p200300cd5701a1ceba27ebfffed28a59.dip0.t-ipconnect.de)
[09:37:22] *** emerent is now known as Guest1871
[09:37:22] *** emerent_ is now known as emerent
[09:37:30] *** Quits: Guest1871 (~quassel@p200300cd5701a1e7ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[09:37:49] <jim> grawity, ok thanks:)
[09:39:11] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[09:39:32] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[09:43:24] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:43:35] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[09:44:30] *** Quits: junktext (~junktext@77.247.181.209) (Ping timeout: 268 seconds)
[09:45:26] <twb> grawity: you forgot the d in f'{x:2d}', for consistency?
[09:45:40] <grawity> hmm yeah
[09:45:41] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[09:45:54] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[09:46:11] <grawity> I'm still only slowly migrating from % everywhere to basic f"{foo} bar"
[09:46:29] *** Joins: mnemonic (~semeion@user/semeion)
[09:48:09] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[09:48:35] *** Joins: EgonX (~EgonX@2601:2c6:47f:9c18:a8fc:d3a6:2ee:edc4)
[09:49:01] *** Quits: Jainly (~Jainly@46-10-99-49.ip.btc-net.bg) (Ping timeout: 256 seconds)
[09:51:24] *** Joins: upsala (~zcb@185.213.155.160)
[09:51:30] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:51:53] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[09:51:53] *** Quits: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com) (Read error: Connection reset by peer)
[09:52:15] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:52:35] *** Joins: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com)
[09:52:45] *** Joins: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net)
[09:53:41] <twb> definitely improved my quality of life
[09:53:55] <twb> finally getting something close to CL's path objects, also
[09:54:13] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[09:54:54] *** lockywolf is now known as locky
[10:02:01] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[10:02:18] *** Quits: gggp (~textual@114.245.105.139) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:03:57] *** Quits: Abrax (~Abrax@user/abrax) (Quit: Leaving)
[10:04:02] *** Joins: resmo (~resmo@2a00:d420:9:8a00:b057:1711:f03d:a2aa)
[10:04:04] *** Quits: mnemonic (~semeion@user/semeion) (Ping timeout: 265 seconds)
[10:07:11] *** Joins: Abrax (~Abrax@user/abrax)
[10:08:06] *** domhnall is now known as llanhmod
[10:09:50] *** Quits: kiska (~kiska@user/kiska) (Remote host closed the connection)
[10:11:19] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[10:11:58] *** Quits: eblip (~eb0t@90.209.54.144) (Ping timeout: 260 seconds)
[10:12:01] *** Quits: CRUNK-b0t (~Lando@user/lando-spacepimp) (Read error: Connection reset by peer)
[10:12:15] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Ping timeout: 268 seconds)
[10:12:24] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[10:13:15] *** Joins: fikran (~fikran@user/fikran)
[10:13:18] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[10:13:58] *** Joins: eblip (~eb0t@90.199.241.57)
[10:14:03] *** Quits: Omega037 (~Omega037@047-024-168-024.res.spectrum.com) ()
[10:14:11] *** Joins: kiska (~kiska@user/kiska)
[10:14:23] *** Joins: control (~v1@user/control)
[10:15:05] *** Quits: Abrax (~Abrax@user/abrax) (Quit: Leaving)
[10:15:14] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Read error: Connection reset by peer)
[10:15:26] <control> hello, i have a list of 20 words. how can i make permutations with itertools with all of these words, but make a list of 5 words
[10:16:07] *** Joins: mnemonic (~semeion@user/semeion)
[10:16:24] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[10:16:44] <twb> control: as in, "20 Choose 5" ?
[10:17:12] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[10:17:16] <control> i mean make a group of 5
[10:17:40] <control> 'word1 word2 word3 word4 word5' but loop all the 20 words
[10:17:58] <twb> control: so you end up wih 4 groups of 5 words each, and no word appears more than once?
[10:18:43] *** Parts: twb (~twb@159-196-230-25.9fc4e6.mel.nbn.aussiebb.net) (Changed major mode)
[10:18:50] *** Joins: twb (~twb@159-196-230-25.9fc4e6.mel.nbn.aussiebb.net)
[10:18:59] <twb> That's not how I start python in my IRC window!
[10:19:19] <Repiphany> itertools.permutations(words, 5)
[10:19:34] <control> random.sample(words, 5) - currently it randomly selects 5 words and does permutations with 5 words. but i want to do it with 20 words
[10:19:42] <control> by keeping the words group of 5
[10:20:35] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[10:20:40] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[10:20:50] *** Quits: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[10:20:52] *** Joins: gggp (~textual@111.63.14.118)
[10:21:01] <control> Repiphany: thank you! thats what i was looking for
[10:21:48] <twb> Weird.  I tried that and the iterable it emitted never terminated
[10:22:18] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[10:22:50] <twb> Correction.  It terminated eventually.  somewords = pathlib.Path('/usr/share/dict/words').read_text().splitlines()[:20]; len(list(itertools.permutations(somewords, 5)))
[10:22:54] *** Joins: resmo_ (~resmo@2a00:d420:9:8a00:987b:4353:866b:28ea)
[10:22:58] <twb> ==> 1860480
[10:23:00] <themill> 1860480 is rather a lot of them
[10:24:13] *** Joins: ihristov (~ihristov@217.145.94.71)
[10:24:45] *** Joins: Abrax (~Abrax@user/abrax)
[10:25:10] *** Quits: resmo (~resmo@2a00:d420:9:8a00:b057:1711:f03d:a2aa) (Ping timeout: 252 seconds)
[10:25:32] *** Joins: nomic (~nomic@185.217.117.156)
[10:26:47] *** Quits: gggp (~textual@111.63.14.118) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:27:14] *** Joins: howdoi (uid224@id-224.lymington.irccloud.com)
[10:27:45] *** Quits: ubert (~Thunderbi@178.165.181.26.wireless.dyn.drei.com) (Ping timeout: 265 seconds)
[10:27:57] <howdoi> what is the use-case for Array.count method? [Like how many times in your production code have you used it and where?]
[10:28:45] <twb> themill: yeah it should be something like 20!
[10:29:13] <twb> or is it something like (20-5)!/5!  --- my memory of high school mathematics is pretty hazy
[10:29:17] <Repiphany> Usually I'd go with collections.Counter if I wanted to count something
[10:29:19] *** Joins: dvx (~dvx@185.63.97.64)
[10:29:27] <Repiphany> 20!/(20-5)!
[10:30:08] *** Quits: resmo_ (~resmo@2a00:d420:9:8a00:987b:4353:866b:28ea) (Ping timeout: 268 seconds)
[10:30:26] <twb> I was close!
[10:31:47] *** Joins: resmo (~resmo@135-58-239-77.dyn.cable.fcom.ch)
[10:31:49] <themill> twb: yes, I spotted your high school maths coming through there :) ... in the universal language of maths, there's a lot of regionalism in this bit. "choose" is very en_AU and I've not found it in other places. (similarly around notation for this)
[10:33:07] *** Joins: gggp (~textual@111.63.44.4)
[10:33:29] <twb> themill: I only wrote "choose" because I thought ₙCᵣ was too obscures
[10:33:51] <twb> I don't think I've ever seen it actually written "choose"
[10:34:26] *** Joins: Zweimer (~Zweimer@2a02:908:d20:26e0:28ee:ef76:6d15:8be0)
[10:34:56] <twb> https://en.wikipedia.org/wiki/nCr  knows about that, at least
[10:35:11] <themill> "pronounced" more than "written" indeed
[10:35:18] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 260 seconds)
[10:35:21] *** Quits: redgloboli (~redglobol@user/redgloboli) (Quit: ...enter the matrix...)
[10:35:49] *** Quits: resmo (~resmo@135-58-239-77.dyn.cable.fcom.ch) (Read error: Connection reset by peer)
[10:35:50] *** Joins: resmo_ (~resmo@2a00:d420:9:8a00:53b8:3217:4953:41a8)
[10:35:53] *** Quits: earthbreaker (earthbreak@2600:3c03::f03c:91ff:fece:9070) (Quit: I Break D Ert)
[10:36:13] *** Quits: resmo_ (~resmo@2a00:d420:9:8a00:53b8:3217:4953:41a8) (Remote host closed the connection)
[10:36:14] <twb> themill: sometimes I think a lot of LaTeX could have been avoided by forcing mathematicians to use typerwriters instead of slates
[10:36:49] *** Quits: zepolen (~zepolen@2a02:587:8611:2428:1141:e764:dbdc:24dd) (Ping timeout: 252 seconds)
[10:37:32] *** Joins: shlomif (~shlomif@87.68.240.100.adsl.012.net.il)
[10:38:01] * themill hands twb a superscript n for that
[10:39:55] *** Quits: p-i- (~Ohmu@mx-ll-223.206.145-156.dynamic.3bb.co.th) (Remote host closed the connection)
[10:40:32] *** Joins: p-i- (~Ohmu@198.8.80.18)
[10:42:56] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[10:44:21] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Quit: Bridge terminating on SIGTERM)
[10:44:37] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[10:46:24] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:46:42] *** Joins: vats (~vats@103.70.83.191)
[10:46:58] *** Joins: seednode (~seednode@user/seednode)
[10:48:44] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[10:49:09] *** Joins: roped (~lonely_@user/roped)
[10:51:58] *** Joins: greknod25 (~grek@114-198-46-246.dyn.iinet.net.au)
[10:53:58] *** Quits: greknod2 (~grek@114-198-44-89.dyn.iinet.net.au) (Ping timeout: 268 seconds)
[10:53:58] *** greknod25 is now known as greknod2
[10:54:25] *** Joins: brelod (~me@90.244.150.142)
[10:58:23] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[10:59:17] *** Quits: Zweimer (~Zweimer@2a02:908:d20:26e0:28ee:ef76:6d15:8be0) (Ping timeout: 256 seconds)
[10:59:46] *** Joins: Zweimer (~Zweimer@2a02:908:d20:26e0:8199:4210:f155:881)
[11:00:04] *** Joins: earthbreaker (earthbreak@2600:3c03::f03c:91ff:fece:9070)
[11:01:10] <Zweimer> I have a dataframe table with the following columns: "Datetime", "Tray", "Slot" and "Error" and would like to implement to following logic: A Tray has 16 Positions, there are 16 Trays. Whenever a datetime exists, check what tray id's where in use and check if any of the positions on the trays are missing. If so, add the row and set the error-column
[11:01:10] <Zweimer> to 1. It is hard to explain, maybe my code makes it slightly clearer: https://bpa.st/2WDQ
[11:01:34] *** Joins: chele (~chele@user/chele)
[11:02:27] *** Joins: origamiGerbil (~user@2601:1c2:1b80:ef10::fdc)
[11:02:28] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:03:23] <Zweimer> My question is now: How do I fill in the missing rows?
[11:03:31] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 265 seconds)
[11:03:31] <twb> Zweimer: in like a dict?
[11:03:49] <twb> Zweimer: you want defaultdict.  Or mydict.get('field', fallbackvalue)
[11:04:17] <aphysically> src/pyffstream/cli.py:41:0: C0413: Import "from . import config as defaults" should be placed at the top of the module (wrong-import-position)
[11:04:19] <aphysically> :(
[11:04:30] *** Quits: gggp (~textual@111.63.44.4) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:04:31] <aphysically> feels silly disabling this but I don't really have a choice here
[11:04:41] <roped> how to detect if a method is called from the method with the same name of a subclass? pseudocode here: https://dpaste.org/CNCD
[11:04:45] <twb> Zweimer: I don't recognize .unique() there.  I tend to implement uniqueness by just passing through set()
[11:04:46] <aphysically> I need logging.config.dictConfig({"version": 1, "disable_existing_loggers": True}) above my project-local imports
[11:06:15] <Zweimer> twb, I am slightly lost. Can you pick me up? I am not sure where the defaultdict is coming from. Also, in the end, I still need it as a dataframe.
[11:06:38] <twb> Zweimer: oh "dataframe" is a pandas thing
[11:06:43] <twb> Zweimer: I don't know anything about pandas, sorry
[11:07:00] <twb> Zweimer: https://docs.python.org/library/collections.html#collections.defaultdict
[11:07:04] <Zweimer> dang! ok. Thank you anyway :)
[11:07:30] *** Quits: jamer05 (~jamer05@user/jamer05) (Ping timeout: 260 seconds)
[11:10:00] *** Quits: reset (~reset@user/reset) (Quit: reset)
[11:10:21] *** Joins: manti7 (~manti7@176.10.104.94)
[11:10:28] <aphysically> I guess I can avoid configuring the root logger but it's annoying to configure attach a handler to *every* project-local module I import
[11:10:35] <aphysically> configure and* attach
[11:12:09] *** Joins: pycode (~pycode@2001:b07:5d28:551:fc7a:1e1e:1647:101a)
[11:15:18] *** Joins: Yion (~Yion@pd95caa88.dip0.t-ipconnect.de)
[11:16:53] <aphysically> I'll just disable the propagation on the loggers I don't want outputting to the CLI debugging
[11:20:07] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[11:20:27] *** Joins: srhm (~srhm@user/srhm)
[11:21:08] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[11:21:55] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Client Quit)
[11:22:03] *** Joins: kosh (~kosh@user/kosh)
[11:22:52] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[11:24:30] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[11:24:34] *** Joins: palasso (~palasso@user/palasso)
[11:26:04] *** Quits: dba_ (uid502594@id-502594.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[11:26:04] *** Quits: dba (uid502594@id-502594.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[11:28:15] *** Joins: gggp (~textual@111.63.14.118)
[11:28:21] *** Quits: gggp (~textual@111.63.14.118) (Client Quit)
[11:28:38] *** Joins: pspiagicw (~user@123.136.198.48)
[11:29:19] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[11:29:21] <no_gravity> Good Morning
[11:29:51] *** Joins: fdan (~fdan@192.146.154.3)
[11:30:13] <fdan> https://dpaste.org/Hxbh#L18
[11:30:19] <fdan> how to solve this error
[11:30:47] *** Joins: djapo (~archangel@user/djapo)
[11:31:11] <no_gravity> fdan: Can you make an example on online-python.com?
[11:31:58] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.3-dev)
[11:33:49] <roped> your first item is probably "" rather than "IP TIME"
[11:34:00] <roped> print your lines in a loop
[11:34:22] *** Joins: pradhvan (~pradhvan@dgplug/pradhvan)
[11:34:33] <Repiphany> fdan: line 11 should be `x, y = i.split(' ')`
[11:36:04] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[11:36:11] *** Joins: zln (~zln@c80-217-230-193.bredband.tele2.se)
[11:36:18] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[11:37:59] <fdan> Repiphany why not x,y = (s for s in i.split(' '))
[11:38:02] <fdan> why this doesnt work?
[11:38:25] <twb> fdan: unnecessary
[11:38:54] <grawity> both of them work (or don't work) the same way
[11:39:02] <grawity> only the 'for..in' is completely redundant and useless
[11:39:16] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[11:39:35] <Repiphany> I don't see why that exact code would raise an error though, regardless
[11:39:45] <grawity> I'm going to guess like script is failing on the last line, which is an *empty* line and therefore split(' ') doesn't return 2 items on that
[11:40:16] *** Quits: srhm (~srhm@user/srhm) (Quit: Konversation terminated!)
[11:40:16] <grawity> hm, no, splitlines() chops that off, so no
[11:40:22] <Repiphany> splitlines shouldn't give any empty string though
[11:40:23] <grawity> but does it
[11:40:29] *** Joins: ub (~Thunderbi@178.165.181.26.wireless.dyn.drei.com)
[11:40:37] *** Joins: srhm (~srhm@user/srhm)
[11:40:46] <grawity> easy way to find out: print(repr(i), repr(i.split(' '))) before doing the x,y assingment
[11:41:31] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:41:51] <Repiphany> https://docs.python.org/3/library/stdtypes.html#str.splitlines
[11:42:37] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[11:42:54] *** ub is now known as ubert
[11:44:45] *** Quits: gitly (~gitly@185.69.144.134) (Ping timeout: 268 seconds)
[11:46:10] *** Joins: gitly (~gitly@85.255.235.113)
[11:49:01] *** Joins: ExeciN (~ExeciN@user/nicexe)
[11:50:13] *** Joins: gusto (~Augustus@109.255.100.54)
[11:52:01] *** Quits: origamiGerbil (~user@2601:1c2:1b80:ef10::fdc) (Remote host closed the connection)
[11:52:28] *** Joins: y1n (~y1n@84-115-65-213.wifi.dynamic.surfer.at)
[11:54:44] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[11:59:10] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[11:59:11] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[11:59:17] *** Quits: yitz (~yitz@exercism/yitz) (Ping timeout: 245 seconds)
[11:59:25] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[11:59:57] *** Quits: ubert (~Thunderbi@178.165.181.26.wireless.dyn.drei.com) (Ping timeout: 268 seconds)
[12:00:45] *** Joins: dob1_ (~dob1@user/dob1)
[12:01:02] *** Quits: dob1 (~dob1@user/dob1) (Ping timeout: 265 seconds)
[12:03:02] *** Joins: yitz (~yitz@exercism/yitz)
[12:03:03] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[12:03:17] *** Joins: rsx (~dummy@ppp-188-174-153-247.dynamic.mnet-online.de)
[12:04:04] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[12:06:57] *** Quits: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 268 seconds)
[12:12:02] *** Parts: Gurkenglas (~Gurkengla@dslb-002-207-014-195.002.207.pools.vodafone-ip.de) (Leaving)
[12:12:30] *** Quits: baltazar (~baltazar@84-236-21-130.pool.digikabel.hu) (Ping timeout: 260 seconds)
[12:14:28] *** Joins: baltazaar (~baltazar@178-164-190-59.pool.digikabel.hu)
[12:15:01] *** baltazaar is now known as baltazar
[12:15:26] *** Joins: raxor2k (~raxor2k@78.158.248.203)
[12:15:43] <pycode> hello i am trying to compile a module (cython) i have problem during the import
[12:15:45] <pycode> i have https://bpa.st/KFQQ
[12:15:58] <pycode> then
[12:15:58] <pycode>  ext_modules = cythonize(ext_modules) # , build_dir="build"
[12:16:18] <pycode> i compile it doing python setup.py build_ext
[12:16:33] <pycode> but when i do from test.fast import my_func
[12:16:55] <pycode> i get ModuleNotFoundError: No module named 'test.fast'
[12:17:03] <pycode> it only works if i add --inpplace
[12:17:06] <pycode> --inplace
[12:17:16] <pycode> on build_ext command
[12:17:41] *** Quits: roped (~lonely_@user/roped) (Quit: Leaving)
[12:18:40] *** Quits: visl (visl@user/visl) (Ping timeout: 268 seconds)
[12:18:53] *** Joins: Mattiasl_ (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[12:19:38] *** Joins: damonlynch (~ngaio@2601:245:c700:2c06:7912:3d2c:ae10:8f8b)
[12:19:53] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Ping timeout: 265 seconds)
[12:20:21] <pycode> if i do not add --inplace it creates a build folder and it puts everything there
[12:20:28] <pycode> but i get that problem during import
[12:20:46] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[12:21:45] *** Parts: no_gravity (~no_gravit@user/no-gravity/x-5639427) ()
[12:22:37] *** Joins: fikran (~fikran@user/fikran)
[12:23:07] *** Joins: p-i-_ (~Ohmu@45.74.54.2)
[12:27:08] *** Quits: p-i- (~Ohmu@198.8.80.18) (Ping timeout: 265 seconds)
[12:27:55] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Ping timeout: 268 seconds)
[12:28:15] *** Quits: MrMobius (~MrMobius@208.58.206.154) (Read error: Connection reset by peer)
[12:28:29] *** Joins: iomari891 (~iomari891@129.205.113.2)
[12:28:59] *** Joins: iflema (~ian@user/iflema)
[12:29:56] *** Joins: jetchisel (jetchisel@user/jetchisel)
[12:31:10] *** Joins: shad (~shad@user/shad)
[12:31:54] *** Quits: pspiagicw (~user@123.136.198.48) (Remote host closed the connection)
[12:32:45] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:33:28] *** Quits: Mattiasl_ (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Ping timeout: 268 seconds)
[12:34:35] *** Quits: fsg (zzzzz@2600:3c00::f03c:92ff:fec6:da18) (Remote host closed the connection)
[12:34:55] *** Quits: y1n (~y1n@84-115-65-213.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[12:35:29] <pycode> should i run build_ext or just python setup.py install?
[12:37:06] <pycode> i noticed that i need to go outside the project and run again from test.fast import myfunc, if i go outside it works properly, hmm why?
[12:37:26] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[12:37:43] <pycode> the problem is that use that import inside my main project i get moduleimport error
[12:38:15] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[12:40:10] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[12:40:40] *** Quits: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[12:41:03] *** Quits: pradhvan (~pradhvan@dgplug/pradhvan) (Read error: Connection reset by peer)
[12:41:24] *** Quits: swinnenb (~swinnenb@user/swinnenb) (Quit: This is the hidden truth, the world between the lines.)
[12:45:05] <pycode> a small recap, i have project/test then i have project/test/fast.pyx when i do setup.py install it install everything then when i go outside project/test and try to do from test.fast import my_func, it works, if i do it inside project/test it doesnot not works, and it seems right because there is a fast.py inside /test project
[12:45:21] <pycode> but inside my project (test) i need that import so how can i do?
[12:46:06] *** Joins: Meteorhead (~Meteorhea@165.225.205.32)
[12:47:12] <deniska> pycode: one advice for dealing with import problems like that is to never actually run your project directly from the source code tree, keep it installed in a venv, and to not having to type `pip install .` after each edit you may use `pip install -e .`
[12:47:14] *** Joins: y1n (~y1n@84-115-65-213.wifi.dynamic.surfer.at)
[12:48:35] <pycode> deniska, yes you are right, if i run that inside my venv and OUTSIDE the project tree it works, the import works (using a python shell)
[12:48:54] <pycode> but my problem now is that there is a module inside project/test/my_new_module
[12:49:02] <pycode> that is trying to import from test.fast import my_func
[12:49:18] <pycode> so inside the package i need to use that cython func
[12:49:45] <deniska> pycode: it should probably be `from project.test.fast …` assuming your top level package is called "project"
[12:50:21] <pycode> deniska,
[12:50:22] <pycode> https://bpa.st/2FSQ
[12:50:40] <pycode> the project is called "test"
[12:50:44] <deniska> ah
[12:50:52] <pycode> so i always import doing from test.something import ...
[12:50:55] <pycode> and it works
[12:51:04] <pycode> the problem is with this cython myfunction
[12:51:10] <pycode> i have fast.pyx
[12:51:10] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[12:51:21] <pycode> so i suppose when python trying to import it does not find fast.py
[12:51:29] *** Quits: fdan (~fdan@192.146.154.3) (Quit: Client closed)
[12:51:44] <pycode> but if i see inside site-packages
[12:52:06] <pycode> the installer creates https://bpa.st/EYMA
[12:52:10] <pycode> on fast.py
[12:52:16] *** Quits: vats (~vats@103.70.83.191) (Ping timeout: 265 seconds)
[12:52:33] <pycode> so as i wrote calling it from outside the tree it works, but i need to use that function inside the test project too
[12:53:34] *** Quits: p-i-_ (~Ohmu@45.74.54.2) (Read error: Connection reset by peer)
[12:53:42] *** Joins: p-i- (~Ohmu@223.206.145.156)
[12:54:06] <pycode> deniska, ^
[12:54:41] *** Quits: p-i- (~Ohmu@223.206.145.156) (Remote host closed the connection)
[12:55:00] *** Joins: Polyinsecure (~Polyinsec@180.244.135.66)
[12:55:17] *** Joins: p-i- (~Ohmu@84.247.49.162)
[12:56:03] <deniska> pycode: how are you launching the program?
[12:56:28] *** Joins: waxfire2 (~waxfire@65.119.2.240)
[12:56:59] <pycode> in a shell i am on the same level on setup.py
[12:57:00] <pycode> then i do
[12:57:19] <pycode> python -m test.my_module
[12:57:31] <pycode> and from this "my_module" i do from test.fast import myfunc
[12:57:33] <Affliction> I periodically bulk import a large dataset into sqlite from gzipped json. I'd estimate ~30% of the time is spent reading. I use most of the obvious tricks on the sqlite side - no journal, no syncrhonus, large pages, etc. I'm looking to squeeze a bit more speed out of this process. Would I get much of a speedup by moving gzip/json into another threaad, feeding a queue for the sqlite ingest?
[12:58:05] <Affliction> Presumably sqlite and gzip are both C modules, but I'm not sure how the GIL interacts with them.
[12:58:34] *** Quits: waxfire (~waxfire@65.119.2.240) (Ping timeout: 260 seconds)
[12:58:34] *** waxfire2 is now known as waxfire
[12:58:56] <pycode> deniska, ^ as i wrote the code is working just that import is having problem
[13:00:02] <Affliction> I do use transactions in batches of 100k, and sqlite does spend a noticible amount of the loop time on COMMIT, naturally reading/decompress/deserialisation also takes some time, so it would be nice if that could be overlapped.
[13:00:36] <Mocramis> Affliction: One way to check is to load the whole dataset at once in memory (if possible) and then try to inject it and mesure the time it takes for sqlite to handle it. If it is not significantly shorter, then the optimisation is pointless
[13:00:38] <deniska> pycode: hm, not really sure, I didn't work with cython in… probably previous 10 years
[13:00:56] <Affliction> Mocramis: dataset is ~150 gigs, not really practical
[13:01:03] *** Joins: rendar (~rendar@user/rendar)
[13:01:10] *** Joins: plastico (~plastico@neomutt/plastico)
[13:01:17] <deniska> Affliction: have you profiled the code?
[13:01:26] <Affliction> yes
[13:01:41] *** Quits: mnemonic (~semeion@user/semeion) (Quit: WeeChat 3.2)
[13:01:43] <Affliction> as hinted, sqlite spends a fair bit of time committing each batch
[13:02:06] <Affliction> so, if I could overlap that time by reading the upcoming data
[13:02:15] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[13:02:36] *** Quits: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Remote host closed the connection)
[13:02:44] <Affliction> Ultimately the question is - does sqlite release the GIL?
[13:02:47] <pycode> deniska, i do not think it is a cython problem i mean...if i install that package on a venv and then trying to import it from another location the import is good because inside the sites-packages in my test folder i see that python creates fast.py with this code(https://bpa.st/EYMA) and it works, but as i wrote i need to use that fast module with a func inside it
[13:02:50] <pycode> from the test package
[13:02:57] <pycode> so i think cython is not a problem here
[13:03:00] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[13:03:14] <pycode> it is something wrong with my setup maybe? https://bpa.st/2FSQ
[13:03:18] *** Joins: fdan (~fdan@192.146.154.3)
[13:03:48] <pycode> do i need to run python setup.py build_ext?
[13:04:03] <pycode> because if i add --inplace everything works properly, but i wonder wh
[13:04:05] <pycode> why
[13:04:27] <Affliction> And additionally even going by disk I/O, the "read", "insert" and  "commit" phases all somewhat stand out.
[13:04:38] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 260 seconds)
[13:04:58] *** MelMalik is now known as LxGHTNxNG
[13:05:32] *** Quits: dalan6236 (~dalan@110-175-157-10.tpgi.com.au) (Quit: Ping timeout (120 seconds))
[13:06:41] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Remote host closed the connection)
[13:06:54] *** Joins: Polyinsecure_ (~Polyinsec@180.244.135.66)
[13:06:55] *** Joins: dalan6236 (~dalan@110-175-157-10.tpgi.com.au)
[13:06:55] *** Quits: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (Quit: No Ping reply in 180 seconds.)
[13:07:17] <deniska> Affliction: https://github.com/python/cpython/blob/3.9/Modules/_sqlite/connection.c#L433 seems like it does
[13:07:21] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[13:07:38] *** Quits: Polyinsecure_ (~Polyinsec@180.244.135.66) (Client Quit)
[13:07:43] *** Quits: grys (~quassel@botters/gry) (Remote host closed the connection)
[13:07:55] *** Quits: launchd (examknow@bitbot/launchd) (Ping timeout: 252 seconds)
[13:08:11] *** Joins: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[13:08:26] *** Joins: launchd (examknow@bitbot/launchd)
[13:08:58] *** Joins: grys (~quassel@botters/gry)
[13:09:03] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 276 seconds)
[13:09:07] *** Quits: mdk (~mdk@python/psf/mdk) (Quit: WeeChat 3.2)
[13:09:46] *** Quits: Polyinsecure (~Polyinsec@180.244.135.66) (Ping timeout: 260 seconds)
[13:09:59] *** Joins: fassl (~fassl@2a02:8388:1987:9380:c4ee:81c5:625a:a215)
[13:10:02] *** Joins: murr4y (ali@user/murr4y)
[13:10:05] <Affliction> deniska: nice, I'll hack up the import code and see if it helps on a smaller dataset.
[13:10:14] *** Joins: mdk (~mdk@python/psf/mdk)
[13:10:24] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[13:10:42] <murr4y> Hey, Flask question: if an @app.before_request function raises an exception, should one expect an errorhandler for that exception to be called?
[13:11:47] *** Joins: gggp (~textual@111.63.14.118)
[13:12:21] *** Quits: kosh (~kosh@user/kosh) (Read error: Connection reset by peer)
[13:14:19] *** Quits: gggp (~textual@111.63.14.118) (Client Quit)
[13:16:25] *** Quits: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[13:16:51] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[13:17:26] *** Joins: Ergo^ (~ergo@91.238.59.144)
[13:18:11] *** Joins: Nact (~l@2a02:a03f:c0b0:f600:3253:5994:1b4f:e854)
[13:18:27] *** Quits: raxor2k (~raxor2k@78.158.248.203) ()
[13:18:28] *** Joins: shad (~shad@user/shad)
[13:19:39] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[13:20:20] *** Quits: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 268 seconds)
[13:21:16] *** Quits: pizdets (~pizdets@183.182.115.177) (Ping timeout: 265 seconds)
[13:22:22] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[13:22:48] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[13:22:52] <pycode> deniska, i am created another .py file outside the package tree, and from this .py file i am importing the module that has the "from test.fast import myfunc"
[13:22:56] <pycode> that way ti works
[13:23:01] <pycode> it*
[13:23:09] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[13:23:22] <pycode> so it seems like that python -m test.my_module
[13:23:29] <pycode> (my_module has that import i wrote above)
[13:23:37] <pycode> so the -m way is not working
[13:24:42] <pycode> so as far i have understood it correctly, when i do python -m test.my_module if i am running it pointing to the code of the package it does not works because it is using the "not compiled" version (i do not know how to explain it better)...
[13:25:07] <pycode> instead...if i use it from outside importing my_module that is importing from test.fast import myfunc, is ok
[13:25:10] <pycode> does it  make sense?
[13:25:16] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 268 seconds)
[13:27:09] *** Joins: sp0fp12 (~sp0f.p12@user/sp0fp12)
[13:29:12] *** Joins: sedeki (~textual@user/sedeki)
[13:31:48] *** Joins: jetchisel (jetchisel@user/jetchisel)
[13:32:02] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::4433)
[13:34:10] *** Joins: PaddyF_ (~PaddyF@user/paddyf)
[13:34:57] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:34:58] *** Quits: y1n (~y1n@84-115-65-213.wifi.dynamic.surfer.at) (Ping timeout: 260 seconds)
[13:35:13] *** Quits: jetchisel (jetchisel@user/jetchisel) (Read error: Connection reset by peer)
[13:37:36] *** Quits: PaddyF (~PaddyF@user/paddyf) (Ping timeout: 268 seconds)
[13:37:46] *** Quits: ravish0007 (~quassel@ec2-65-0-45-121.ap-south-1.compute.amazonaws.com) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[13:37:50] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[13:37:50] <Affliction> damn, threaded version is a fraction of a % slower it seems.
[13:37:56] <Affliction> Ah well, thanks for your help
[13:38:44] *** Joins: srhm (~srhm@user/srhm)
[13:38:52] *** Joins: ravish0007 (~quassel@ec2-65-0-45-121.ap-south-1.compute.amazonaws.com)
[13:39:38] *** Quits: sedeki (~textual@user/sedeki) (Quit: Textual IRC Client: www.textualapp.com)
[13:42:47] *** PaddyF_ is now known as PaddyF
[13:43:36] *** Quits: sp0fp12 (~sp0f.p12@user/sp0fp12) (Quit: WeeChat 3.2.1)
[13:43:45] *** Joins: Anorak (~Anorak@dynamic-046-114-142-058.46.114.pool.telefonica.de)
[13:46:03] *** Quits: iomari891 (~iomari891@129.205.113.2) (Read error: Connection reset by peer)
[13:46:27] <Affliction> or... I ran the old code twice, heh
[13:46:31] *** Joins: iomari891 (~iomari891@129.205.113.2)
[13:47:00] *** Joins: swinnenb (~swinnenb@user/swinnenb)
[13:47:50] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[13:48:01] *** Joins: y1n (~y1n@84-115-64-68.wifi.dynamic.surfer.at)
[13:50:16] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[13:51:57] *** Joins: diamondbond (~diamondbo@175.157.245.77)
[13:52:59] <Affliction> Yeah, threading version is quite a bit slower
[13:53:34] *** Quits: ferz (~ferz@93-39-143-224.ip76.fastwebnet.it) (Ping timeout: 252 seconds)
[13:53:42] *** Joins: Fluxx (~Fluxx@user/fluxx)
[13:54:34] *** Joins: mrwick (~mrwick@user/mrwick)
[13:55:02] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[13:55:29] *** Joins: cdown (~cdown@194.207.141.245)
[13:55:30] *** Joins: ferz (~ferz@93-39-143-224.ip76.fastwebnet.it)
[13:56:15] *** Joins: kosh (~kosh@user/kosh)
[13:58:45] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2)
[13:59:12] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[13:59:35] *** Joins: codificat (~pep@187.red-83-46-128.dynamicip.rima-tde.net)
[14:00:21] *** Joins: mtg (~mtg@209.250.241.226)
[14:01:05] *** Joins: p-i-_ (~Ohmu@84.247.49.162)
[14:04:07] *** Quits: Fluxx (~Fluxx@user/fluxx) (Ping timeout: 268 seconds)
[14:04:14] *** Quits: Anorak (~Anorak@dynamic-046-114-142-058.46.114.pool.telefonica.de) (Quit: Igloo IRC: https://iglooirc.com)
[14:04:24] *** Joins: p-i-__ (~Ohmu@mx-ll-223.206.145-156.dynamic.3bb.co.th)
[14:04:50] *** Quits: p-i- (~Ohmu@84.247.49.162) (Ping timeout: 260 seconds)
[14:05:36] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 276 seconds)
[14:07:40] *** Quits: p-i-_ (~Ohmu@84.247.49.162) (Ping timeout: 265 seconds)
[14:10:17] *** Quits: y1n (~y1n@84-115-64-68.wifi.dynamic.surfer.at) (Ping timeout: 268 seconds)
[14:12:01] *** Joins: m4r35n357 (~m4r35n357@host-92-20-120-36.as13285.net)
[14:12:32] *** Quits: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Read error: Connection reset by peer)
[14:12:38] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[14:13:57] *** Quits: zln (~zln@c80-217-230-193.bredband.tele2.se) (Ping timeout: 265 seconds)
[14:14:17] <graingert[m]> where are the tuple cmp methods documented? https://docs.python.org/3/library/stdtypes.html#tuple
[14:15:39] <graingert[m]> there's some stuff here https://docs.python.org/3/howto/sorting.html#the-old-way-using-decorate-sort-undecorate
[14:15:51] *** Joins: Fluxx (~Fluxx@user/fluxx)
[14:16:50] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[14:16:53] *** Quits: diamondbond (~diamondbo@175.157.245.77) (Read error: No route to host)
[14:17:12] *** Joins: eightysix (~eightysix@2600:1700:bf32:3410:48cf:bfb4:e69f:63ef)
[14:17:41] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Remote host closed the connection)
[14:18:00] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[14:18:07] <graingert[m]> it's referenced here:
[14:18:07] <graingert[m]> > order: If true (the default is False), __lt__(), __le__(), __gt__(), and __ge__() methods will be generated. These compare the class as if it were a tuple of its fields, in order. Both instances in the comparison must be of the identical type. If order is true and eq is false, a ValueError is raised.
[14:18:17] <graingert[m]> https://docs.python.org/3/library/dataclasses.html#dataclasses.dataclass
[14:19:42] *** Joins: vaucouleur (~vaucouleu@176.124.42.130)
[14:20:25] *** Quits: earthbreaker (earthbreak@2600:3c03::f03c:91ff:fece:9070) (Quit: I Break D Ert)
[14:20:44] *** Joins: earthbreaker (earthbreak@2600:3c03::f03c:91ff:fece:9070)
[14:22:24] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 268 seconds)
[14:22:50] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[14:22:52] *** Joins: Falc (~Falc@193.191.206.243)
[14:23:32] *** Joins: Vonter (~Vonter@user/vonter)
[14:28:11] <pycode> ... anyone?
[14:29:48] *** Quits: cdown (~cdown@194.207.141.245) (Ping timeout: 268 seconds)
[14:30:01] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[14:30:51] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[14:31:22] *** Joins: djhankb (~djhankb@208.113.164.68)
[14:32:00] *** Joins: fikran (~fikran@user/fikran)
[14:32:40] *** Joins: y1n (~y1n@213162073161.public.t-mobile.at)
[14:35:27] *** Quits: EgonX (~EgonX@2601:2c6:47f:9c18:a8fc:d3a6:2ee:edc4) (Quit: Textual IRC Client: www.textualapp.com)
[14:36:59] *** Joins: Anorak (~Anorak@dynamic-046-114-136-117.46.114.pool.telefonica.de)
[14:38:50] <Falc> Does anyone know of a diff-style library that is made for comparing strings, and not whole texts? Difflib is of the second kind and it's making things a lot harder than needed...
[14:39:03] *** Quits: nomic (~nomic@185.217.117.156) (Quit: Leaving)
[14:39:20] *** Joins: nomic (~nomic@185.217.117.156)
[14:39:49] *** Joins: redgloboli (~redglobol@user/redgloboli)
[14:39:51] *** Joins: gggp (~textual@111.63.44.4)
[14:39:51] <KirkMcDonald> Falc: difflib can operate on any sequences, not just strings.
[14:40:15] <KirkMcDonald> Falc: But, I'm unclear on the distinction you're drawing between "strings" and "whole texts."
[14:41:11] <Falc> KirkMcDonald: when I tried, difflib took my string and treated it as a sequence of individual characters...
[14:41:57] <KirkMcDonald> Falc: As opposed to a sequence of lines?
[14:42:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[14:43:28] *** Quits: gggp (~textual@111.63.44.4) (Client Quit)
[14:44:11] *** Joins: wyclif (~wyclif@user/wyclif)
[14:49:14] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[14:49:41] *** Joins: wyclif (~wyclif@user/wyclif)
[14:50:57] *** Quits: wisefriday (wisefriday@sempiternity.club) (Ping timeout: 245 seconds)
[14:52:30] *** Quits: Anorak (~Anorak@dynamic-046-114-136-117.46.114.pool.telefonica.de) (Remote host closed the connection)
[14:54:07] <kosh> KirkMcDonald, probably an issue where if one additional character is added even if all the other words are the same it moves them all out of alignment
[14:55:02] *** Quits: gravy (~gravy@60-242-96-144.tpgi.com.au) (Read error: Connection reset by peer)
[14:56:25] *** Quits: iomari891 (~iomari891@129.205.113.2) (Ping timeout: 252 seconds)
[14:57:25] *** Quits: Nact (~l@2a02:a03f:c0b0:f600:3253:5994:1b4f:e854) (Ping timeout: 252 seconds)
[15:01:11] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[15:01:18] *** Joins: iomari891 (~iomari891@105.112.138.38)
[15:01:29] <rendar> if i'm correct, asyncio.wait() wants only tasks (passing coroutines is deprecated and will be removed), it means that at *every cycle* of a while True i have to create a new Task with event.wait() coroutine inside it, isn't this overkill?
[15:02:21] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[15:02:44] *** Quits: ranu (~ranu@2804:14c:6583:6e67::b5ac) (Quit: Ping timeout (120 seconds))
[15:05:30] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 260 seconds)
[15:09:28] *** Quits: y1n (~y1n@213162073161.public.t-mobile.at) (Ping timeout: 252 seconds)
[15:10:06] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[15:10:10] <pycode> i have a local package that i need to use inside another project i have installed it doing pip install local_path (local_path is basically where i have the setup.py) i am in dev mode so i often change things, instead of incrementing version how can i update the package with the new code?
[15:10:34] <pycode> i think doing pip install local_path will check the version inside the setup.py if equals nothing changes
[15:11:15] *** Joins: wyclif (~wyclif@user/wyclif)
[15:11:56] <Repiphany> pip install -e
[15:12:35] *** Joins: EgonX (~EgonX@2601:2c6:47f:9c18:f959:fe3e:374f:5cb2)
[15:12:39] *** Joins: BillyZane2 (~BillyZane@91.196.220.173)
[15:13:39] *** Quits: Warped (~Warped@user/warped) (Quit: We Gone! Bye Bye)
[15:14:24] *** Quits: BillyZane (~BillyZane@152.89.204.151) (Killed (NickServ (GHOST command used by BillyZane2!~BillyZane@91.196.220.173)))
[15:14:31] *** BillyZane2 is now known as BillyZane
[15:16:13] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[15:16:44] *** Joins: wyclif (~wyclif@user/wyclif)
[15:17:14] <pycode> Repiphany, pardon? pip install -e my_local_package ?
[15:17:48] *** Joins: wisefriday (wisefriday@sempiternity.club)
[15:18:01] <pycode> pip install -e project/path in my case where there is the setup.py file of that project i need to use
[15:18:34] <Repiphany> Installs in editable mode so changes in the folder are reflected immediately
[15:21:17] <pycode> Repiphany, wait i have package1 and package2 from package2 i need the package1 can i call pip install -e from package1 folder? where i have the virtualenv ?
[15:21:46] <pycode> https://bpa.st/JJ6Q
[15:21:57] <pycode> so pip install -e project1_path
[15:21:58] <pycode> right?
[15:22:04] <Repiphany> Yes
[15:22:24] *** Joins: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br)
[15:22:41] *** Quits: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br) (Client Quit)
[15:24:15] *** Quits: ckdCreations (~ckdCreati@147.55.130.34) (Read error: Connection reset by peer)
[15:24:31] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[15:25:29] *** Joins: gulzar (~gulzar@123.201.116.103)
[15:25:37] <gulzar>  Hi. I have a weird question. This is the pandas df https://paste.debian.net/1211827/ ,  see the column "res_num" . It has some repeated numbers, which are sort of groups. I need to reset these numbers from 1-N .  So all three 9320 will be 1 , 9831 -> 2 and so on. Order doesn't matter so even last one can be labelled as 1.  How to do this kind of stuff?
[15:25:38] *** Joins: theprophet (~theprophe@85.114.228.184)
[15:26:17] <pycode> thanks Repiphany
[15:28:10] <Repiphany> gulzar: https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.replace.html in place, maybe
[15:28:16] <Yhg1s> gulzar: do you just want to subtract 9319 from them all?
[15:28:27] <Yhg1s> oh, I guess you don't.
[15:28:41] <Repiphany> Could make a replacement dictionary with like {v:i for i, v in enumerate(set(res_num))} or whatever
[15:28:43] <gulzar> Yhg1s: may or may not work.
[15:30:06] <gulzar> Repiphany: oh, good idea. A dict mapping can be used with replace
[15:30:54] <audio> is it dumb to ever use super().__init__() to initialize superclass variables?
[15:31:59] <Yhg1s> audio: no, it's usually a mistake not to.
[15:32:01] <gulzar> Yhg1s: the order is not same. I have missing values inbetween. Imagine 100 points randomly between 1-1000000.
[15:32:09] <gulzar> Repiphany: Thank You
[15:32:15] <audio> Yhg1s, ok great, thanks
[15:33:14] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[15:33:39] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[15:33:58] <rendar> if i'm correct, asyncio.wait() wants only tasks (passing coroutines is deprecated and will be removed), it means that at *every cycle* of a while True i have to create a new Task with event.wait() coroutine inside it, isn't this overkill?
[15:34:42] *** Joins: hendursaga (~weechat@user/hendursaga)
[15:35:30] <Yhg1s> rendar: only if you're already creating a new coroutine each time through the loop as well. And no, it's not overkill.
[15:37:42] <kosh> there is no such thing as overkill ;)
[15:38:09] <rendar> Yhg1s,  thanks
[15:38:44] <rendar> Yhg1s, basically yes, i'm creating a new coroutine each time because i'm waiting an asyncio.Event, so every time i have to call self.event.wait() which basically creates a new coroutine, right?
[15:39:07] <Yhg1s> rendar: not unless you're doing something very strange, no.
[15:40:02] <rendar> Yhg1s, huh? every time i call a coroutine function, which event.wait() it, a new coroutine will be created, and then i can await that coroutine until the event is set with event.set()
[15:40:35] *** Joins: Everything (~Everythin@37.115.210.35)
[15:40:52] <rendar> my point is that at every event.set() a new event.wait() will be called in turn, so a new coroutine will be created by the event.wait() coroutine function
[15:40:59] <Yhg1s> rendar: I don't know how event.wait() comes into play, sorry. But if you *are* creating a new coroutine each time, and you're not just awaiting it, creating a task for it is not overkill. It's necessary.
[15:41:18] <rendar> Yhg1s, ok
[15:41:18] <Yhg1s> rendar: creating tasks mostly happens automatically. Sometimes it doesn't. It's hard to tell what you're doing.
[15:41:26] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 265 seconds)
[15:41:26] <molt> i'm trying to parse specific data from a pretty large & complex JSON file in Python. I know the basics -- i.e. import json, new_variable = json.loads(variable_containing_json-data)  -- but am having a difficult time parsing out the info I need. If anyone could help that would be great. I could provide the json file via pastebin
[15:41:28] <rendar> Yhg1s, i can show you
[15:41:47] <rendar> Yhg1s, https://bpa.st/BQYQ
[15:43:01] *** Quits: shad (~shad@user/shad) (Ping timeout: 252 seconds)
[15:43:26] <Yhg1s> rendar: all this, and you're worried about that one asyncio.create_task() call?
[15:44:12] <rendar> yes
[15:44:25] *** Quits: pycode (~pycode@2001:b07:5d28:551:fc7a:1e1e:1647:101a) (Ping timeout: 268 seconds)
[15:44:33] <molt> This is the JSON content: https://pastebin.com/PcjM0R43  -- I need to pull out all the URLs under "share": { "publicUrl": ... }
[15:44:37] <Yhg1s> okay: don't worry about it. The overhead of practically everything else in your program is way, way higher.
[15:45:05] <rendar> Yhg1s, ok
[15:45:49] *** Quits: EgonX (~EgonX@2601:2c6:47f:9c18:f959:fe3e:374f:5cb2) (Ping timeout: 252 seconds)
[15:46:29] *** Joins: zepolen (~zepolen@2a02:587:8611:f562:d100:78de:5594:56fb)
[15:46:30] <Yhg1s> molt: from a quick glance it would be your_dict['store']['page']['data']['scores'][0]['share']['publicUrl'] for the first one.
[15:46:41] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[15:46:55] <Yhg1s> molt: your_dict['store']['page']['data']['scores'] is a list, so you probably want to loop over it to get each dict in it (which would have 'share' as a key, etc.)
[15:47:25] <molt> aha - right, right. thanks! been staring at this for too long :)
[15:49:34] *** Quits: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 268 seconds)
[15:50:02] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[15:54:22] *** Joins: besnn (~besnn@user/besnn)
[15:57:25] *** Joins: vats (~vats@103.70.83.191)
[15:58:12] *** Quits: rapier (~marcos@170.233.159.1) (Read error: Connection reset by peer)
[15:58:41] *** Joins: jetchisel (jetchisel@user/jetchisel)
[16:02:26] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[16:04:18] *** Quits: vats (~vats@103.70.83.191) (Ping timeout: 260 seconds)
[16:04:50] *** Quits: fdan (~fdan@192.146.154.3) (Quit: Client closed)
[16:06:56] <gitesh> I want to be writing test cases master probably i don't know
[16:07:11] <gitesh> do you always write test cases before you write any function or code
[16:07:39] *** Quits: p-i-__ (~Ohmu@mx-ll-223.206.145-156.dynamic.3bb.co.th) (Remote host closed the connection)
[16:08:08] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[16:08:15] *** Joins: p-i- (~Ohmu@mx-ll-223.206.145-156.dynamic.3bb.co.th)
[16:08:26] *** Joins: lively_sparkle (~v_iskra@mm-106-247-57-86.leased.line.mgts.by)
[16:08:52] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[16:09:10] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[16:10:11] *** Quits: lively_sparkle (~v_iskra@mm-106-247-57-86.leased.line.mgts.by) (Client Quit)
[16:12:10] *** Joins: astiak (~astiak@ownage.biz)
[16:12:20] *** Joins: daex (~daex@user/daex)
[16:13:27] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0f7-64.dhcp.inet.fi)
[16:16:14] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 265 seconds)
[16:18:04] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[16:18:41] *** Joins: DXR (~lyrical@213.16.170.112.dsl.dyn.forthnet.gr)
[16:21:45] <Falc> gitesh: usually not. That's not to say it's a bad approach, it's just that it's not the one single good approach
[16:23:09] *** Joins: legola (~legola@46.235.100.27)
[16:23:17] *** Joins: georgios (~georgios@user/georgios)
[16:23:40] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[16:23:45] *** porksoda is now known as whaley
[16:26:34] *** Joins: ionelmc (uid20175@id-20175.helmsley.irccloud.com)
[16:27:19] <gordonjcp> whaley: porksoda huh?  Primus sucks!
[16:28:52] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[16:29:51] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[16:30:22] *** Quits: audio (~audio@2603-8081-1800-6a6f-b618-6529-ea8e-90bb.res6.spectrum.com) (Ping timeout: 252 seconds)
[16:31:21] *** Joins: p-i-_ (~Ohmu@223.206.145.156)
[16:32:10] *** Quits: vaucouleur (~vaucouleu@176.124.42.130) (Ping timeout: 240 seconds)
[16:33:01] *** Joins: EgonX (~EgonX@2601:2c6:47f:9c18:7cea:9f56:123b:7cd2)
[16:34:43] *** Quits: p-i- (~Ohmu@mx-ll-223.206.145-156.dynamic.3bb.co.th) (Ping timeout: 252 seconds)
[16:34:43] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 252 seconds)
[16:35:49] *** Quits: elkclone (~elkclone@user/elkclone) (Ping timeout: 268 seconds)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2.1)
[16:36:24] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[16:36:25] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[16:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:36:51] *** Joins: iomari891 (~iomari891@197.210.53.202)
[16:36:57] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[16:38:53] <control> what is the fastest way to read large text files in python? should i convert it to binary or what can you suggest?
[16:39:07] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[16:39:57] *** Joins: lxer (~lx@ip5f5bf666.dynamic.kabel-deutschland.de)
[16:40:13] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 252 seconds)
[16:40:37] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[16:41:22] *** Joins: fikran (~fikran@user/fikran)
[16:42:49] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Quit: Leaving)
[16:43:08] <Yhg1s> control: do you just want to read them, or do you want to do something with the contents?
[16:43:13] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Ping timeout: 268 seconds)
[16:43:49] <control> currently it read().split() 's. i want to check if the string exists in the large text file
[16:44:01] *** Joins: Gurkenglas (~Gurkengla@dslb-002-207-014-195.002.207.pools.vodafone-ip.de)
[16:44:22] <Yhg1s> control: file.read().split() is probably not the most efficient route, but it depends on how large you mean by 'large', and how much memory you're okay with the program using.
[16:44:40] <Yhg1s> control: it will be more efficient to read it in binary mode if you're looking for specific bytes, if you don't care about the encoding.
[16:44:41] <control> its 5-10mb
[16:44:48] <Yhg1s> okay, that's not that large.
[16:44:52] <control> i dont care about the encoding
[16:44:57] <Repiphany> Call grep with subprocess
[16:45:13] <Gurkenglas> Can I have a natural number in place of a type argument without going "0 is a type, any type + 1 is a type"?
[16:45:22] <Gurkenglas> int is fine.
[16:45:42] <lxer> I'm using Requests, and want to overwrite request.body, because I need it in a different format before returning. However, it is a attribute, not a @property, so How could I do that? is it possible to subclass and then make a @property from it (so I can modify the getter) ?
[16:45:50] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[16:45:51] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Read error: Connection reset by peer)
[16:46:27] <Yhg1s> lxer: what do you mean by 'overwriting' it?
[16:46:52] *** Joins: ub (~Thunderbi@178.165.181.26.wireless.dyn.drei.com)
[16:46:52] *** Quits: dulanic (~dulanic@47.187.144.163) (Read error: Connection reset by peer)
[16:47:02] <Yhg1s> lxer: generally speaking, don't subclass the Request class, or any class that isn't in your entire control. You may want to wrap it in a class of your own.
[16:47:14] *** Joins: dulanic (~dulanic@47.187.144.163)
[16:48:37] <control> Repiphany: im on windows
[16:50:00] *** ub is now known as ubert
[16:50:02] *** Joins: pycode (~pycode@2001:b07:5d28:551:5b41:887:1a7b:6952)
[16:50:48] *** Quits: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net) (Quit: Textual IRC Client: www.textualapp.com)
[16:52:03] *** Joins: Polyinsecure (~Polyinsec@180.244.135.66)
[16:52:07] <lxer> Ygh1s, I mean, if use myrequest.body , I would like it to return some modified version. I could create some myrequest.get_body() method, but thats a bit ugly.
[16:52:34] *** Quits: Meteorhead (~Meteorhea@165.225.205.32) (Quit: Client closed)
[16:52:49] <lxer> if it was my own module I would use a @property.
[16:52:53] <Yhg1s> lxer: that's fine. Define your myrequest class however you want. *Do not make it a requests subclass*. Make it a class of your own.
[16:53:54] *** Joins: Meteorhead (~Meteorhea@165.225.205.32)
[16:54:29] *** Joins: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net)
[16:54:44] *** Joins: ExeciN (~ExeciN@user/nicexe)
[16:55:04] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Ping timeout: 252 seconds)
[16:55:43] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:55:51] *** Joins: zln (~zln@c80-217-230-193.bredband.tele2.se)
[16:56:42] *** Joins: shad (~shad@user/shad)
[16:56:43] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[16:58:03] <lxer> I'm not sure what you mean..
[17:00:20] *** Quits: jdmark (~jdmark@67.8.137.130) (Read error: Connection reset by peer)
[17:00:46] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[17:02:08] *** Quits: Polyinsecure (~Polyinsec@180.244.135.66) (Quit: Leaving)
[17:02:42] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[17:02:47] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Client Quit)
[17:03:05] *** Quits: Zweimer (~Zweimer@2a02:908:d20:26e0:8199:4210:f155:881) (Ping timeout: 256 seconds)
[17:03:22] *** Quits: Fluxx (~Fluxx@user/fluxx) (Ping timeout: 252 seconds)
[17:04:45] *** Joins: Warped (~Warped@user/warped)
[17:07:55] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[17:08:42] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[17:08:42] *** Joins: computeiro (~Wender@189.37.66.63)
[17:09:44] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[17:11:08] <Yhg1s> lxer: I'm not sure how to put it differently, sorry.
[17:11:35] *** Quits: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net) (Quit: See you on the flip side.)
[17:12:49] *** Quits: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 268 seconds)
[17:12:57] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 245 seconds)
[17:13:17] *** Joins: y1n (~y1n@84-115-65-216.wifi.dynamic.surfer.at)
[17:14:00] *** Quits: legola (~legola@46.235.100.27) (Remote host closed the connection)
[17:14:31] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[17:14:35] *** Joins: Macuser (~Macuser@216.30.159.201)
[17:14:36] *** Quits: Macuser (~Macuser@216.30.159.201) (Client Quit)
[17:14:55] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 252 seconds)
[17:15:04] *** Quits: gulzar (~gulzar@123.201.116.103) (Ping timeout: 268 seconds)
[17:17:31] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[17:19:20] *** Quits: el_kevino (~mote@2604:a880:400:d1::901:5001) (Quit: WeeChat 3.2.1)
[17:19:30] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[17:19:59] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[17:20:09] *** Joins: herme5 (~mote@2604:a880:400:d1::901:5001)
[17:20:18] *** herme5 is now known as el_kevino
[17:20:23] *** Joins: wender (~Wender@189.37.66.63)
[17:20:32] *** Joins: NeoCore (~neocore@93.177.75.188)
[17:21:16] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[17:23:10] *** Quits: computeiro (~Wender@189.37.66.63) (Ping timeout: 252 seconds)
[17:23:42] <control> should i try to replace m.read().split() with mmap.mmap(m, length=0, access=mmap.ACCESS_READ)?
[17:25:25] <control> add = mmap.mmap(m.fileno(), length=0, access=mmap.ACCESS_READ)   this got me slower
[17:25:56] *** Joins: computeiro (~Wender@189.37.66.63)
[17:26:19] <supakeen> Well yes, mmap is generally 'faster' for smaller files that are read a lot; not for large files without fadvise
[17:26:28] <supakeen> and even then usually not the best I think
[17:26:28] *** Quits: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 252 seconds)
[17:27:34] *** Quits: wender (~Wender@189.37.66.63) (Ping timeout: 252 seconds)
[17:27:41] <control> still looking for a solution
[17:28:43] <space-ghost> https://stackoverflow.com/questions/3893885/cheap-way-to-search-a-large-text-file-for-a-string
[17:28:48] <space-ghost> whats wrong with this?
[17:29:05] *** Joins: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br)
[17:30:17] <Soni> how would one parse something like b"soupault 3.1.0\n[garbage we don't care about]"?
[17:30:18] *** Quits: dalan6236 (~dalan@110-175-157-10.tpgi.com.au) (Quit: dalan6236)
[17:30:35] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[17:30:40] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:30:52] *** Joins: dalan6236 (~dalan@110-175-157-10.tpgi.com.au)
[17:30:58] <phy1729> non-unicode garbage or unicode garbage? Either decode and split or split and decode
[17:31:09] *** Joins: djhankb (~djhankb@208.113.164.68)
[17:31:21] <Yhg1s> control: a solution for what problem?
[17:31:21] <supakeen> Or just split on b"\n".
[17:31:41] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:31:52] <jinsun> .splitlines()[0].decode()
[17:32:29] <Soni> python's byte strings have stringy methods?
[17:34:00] <supakeen> Well, yes. They support most of the string methods but with bytes as arguments.
[17:34:29] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[17:35:30] *** Quits: iomari891 (~iomari891@197.210.53.202) (Ping timeout: 265 seconds)
[17:35:52] *** Quits: nomic (~nomic@185.217.117.156) (Quit: Leaving)
[17:37:06] *** Joins: iomari891 (~iomari891@105.112.138.38)
[17:37:17] *** Joins: JanC_ (~janc@user/janc)
[17:38:01] *** Quits: Falc (~Falc@193.191.206.243) (Quit: Leaving)
[17:38:34] *** Quits: JanC (~janc@user/janc) (Ping timeout: 252 seconds)
[17:39:40] *** Joins: System123 (~System123@x590feea0.dyn.telefonica.de)
[17:39:41] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[17:41:41] <Soni> hmm
[17:41:46] <Soni> how do you parse semver with python?
[17:42:21] <phy1729> Split into a tuple[int, int, int]
[17:42:27] *** Joins: Julian (~tos9@python/site-packages/Julian)
[17:44:20] <harpia> Is this how you specify runtime dependencies for the wheel? https://packaging.python.org/guides/distributing-packages-using-setuptools/#install-requires
[17:44:34] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 252 seconds)
[17:44:51] <harpia> that will be installed along with your project when you run pip install <project_name>
[17:45:07] <harpia> like a composer.json, or package.json
[17:45:35] <Yhg1s> harpia: so, a data file? Then no. You would use package_data for that.
[17:46:08] *** Quits: upsala (~zcb@185.213.155.160) (Ping timeout: 265 seconds)
[17:46:31] <harpia> my project depends on youtube-dl, for example. But when I install it from PyPi, it doesn't install youtube-dl with it
[17:46:36] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[17:46:59] <harpia> when I install my project, it doesn't bring in the dependencies
[17:47:17] <shad> harpia: what about pip install -r requirements.txt ?
[17:47:35] <harpia> that's the build requirements, right? what about production requirements?
[17:47:36] *** Quits: ubert (~Thunderbi@178.165.181.26.wireless.dyn.drei.com) (Read error: Connection reset by peer)
[17:47:38] <Yhg1s> harpia: install_requires would take care of dependencies when you install the package, yes.
[17:47:54] <Yhg1s> harpia: I'm not sure how that's "like a composer.json, or package.json" though.
[17:47:55] *** Joins: ubert (~Thunderbi@178.165.181.26.wireless.dyn.drei.com)
[17:48:04] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:49:00] <harpia> yeah, I come from a PHP background, so I'm a little confused with how things work in Python
[17:49:05] <shad> run your project in a virtualenv: `python -m virtualenv .venv/`, activate it `source .venv/bin/activate`, install any dependencies needed by the project `pip install ...` then freeze deps `pip freeze > requirements.txt`. Commit the requirements.txt file to your git repository, use it to install deps on different hosts with `pip install -r requirements.txt`
[17:49:10] <shad> Something like that
[17:49:14] <jinsun> Soni: https://packaging.pypa.io/en/latest/version.html
[17:49:38] *** Joins: SassuWunnu (~sh1n0bi@90.205.242.229)
[17:49:42] <Yhg1s> shad: your package should still declare its dependencies, however.
[17:52:35] *** Quits: ubert (~Thunderbi@178.165.181.26.wireless.dyn.drei.com) (Ping timeout: 260 seconds)
[17:53:38] *** Joins: upsala (~zcb@185.213.155.160)
[17:56:31] *** Quits: EgonX (~EgonX@2601:2c6:47f:9c18:7cea:9f56:123b:7cd2) (Read error: Connection reset by peer)
[17:56:46] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Ping timeout: 260 seconds)
[17:57:20] <Soni> jinsun: that's not semver tho
[17:57:50] *** Quits: ferz (~ferz@93-39-143-224.ip76.fastwebnet.it) (Ping timeout: 268 seconds)
[17:59:21] *** Joins: EgonX (~EgonX@2601:2c6:47f:9c18:7cea:9f56:123b:7cd2)
[17:59:45] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[17:59:53] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[17:59:56] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[18:00:31] *** Joins: upsala (~zcb@185.213.155.160)
[18:00:37] <harpia> Something like this: https://stackoverflow.com/a/65326220/9811172, so you declare your "top-level third-party dependencies."
[18:01:00] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[18:01:15] <harpia> that's a more precise description
[18:01:44] <harpia> so I guess it's really "install_requires"
[18:04:52] <pycode> hello is this stupid? i mean...i should create a list of modules because then i need to load their things in a second step i think is better to assign a module a name that wait instead of doing importlib.import_module(...) etc no?
[18:04:57] <pycode> https://bpa.st/RZ7A <--
[18:05:56] <jinsun> Soni: hmm yeah it is pep 440 version, a subset of semver is compatible ith that, if you care about the differences then probably there is a semver specific library (I havent used)
[18:08:56] *** Quits: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it) (Ping timeout: 268 seconds)
[18:09:11] *** Joins: howdoi (uid224@id-224.lymington.irccloud.com)
[18:09:39] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:10:20] *** Joins: Aknip (~Aknip@user/aknip)
[18:10:38] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-3c73-8987-2114-b53a.res6.spectrum.com)
[18:10:49] <Aknip> how hard is programming in mython
[18:10:55] <Aknip> python
[18:11:06] <dreamer> extremely hard, don't try it
[18:11:27] <grym> harpia: it's install_requires, yes
[18:11:58] *** Joins: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it)
[18:12:07] *** Quits: y1n (~y1n@84-115-65-216.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[18:12:14] <dreamer> I'm trying to find a ways in which one could embed python into a c/c++ project. is there a way to do this statically, so that one does not have to rely on system libraries and such?
[18:12:20] <dreamer> can't seem to find anything relevant to the topic
[18:12:32] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:12:42] <A_Dragon> note that if you do it statically you need to be quite careful with licences
[18:12:44] *** Quits: Aknip (~Aknip@user/aknip) (Quit: Client closed)
[18:12:46] *** Joins: togusaa (~togusa@user/togusa)
[18:12:54] <Nei> why not embed lua?
[18:12:54] *** Joins: ferz (~ferz@93-39-143-224.ip76.fastwebnet.it)
[18:13:00] <A_Dragon> ^
[18:13:06] <A_Dragon> lua is a far better lang for embedding
[18:13:09] <Soni> supakeen: any idea why bpa.st would be nullrouted for us?
[18:13:19] <grym> lua's more or less designed explicitly for embedding
[18:13:28] <A_Dragon> more more than less
[18:13:35] <A_Dragon> its entire point was embedding in C
[18:13:36] <grym> you can embed python, though: blender does it, righ
[18:13:42] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[18:13:45] <A_Dragon> hexchat technically does too :P
[18:13:56] <Nei> most often python is embedded as a shared object
[18:13:59] <A_Dragon> ironpython can be embedded into .net easily
[18:14:05] <Nei> but I guess you might be able to get it statically
[18:14:05] <Gurkenglas> Is there a function that'll run a python program with every function or perhaps every line pre- or perhaps post-processed by a callback of mine?
[18:14:33] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[18:14:35] <A_Dragon> python is compiled to an ast, theres nothing quite that fine grained, check out sys.audit_hooks though
[18:14:46] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[18:14:50] <Nei> --> the starting point would be pkg-config --static --libs python-3.8-embed
[18:14:58] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Remote host closed the connection)
[18:15:09] <Nei> then you need to see if you can compile a libpython3.x.a
[18:15:16] <supakeen> Soni: No, perhaps something marks it as spam or malware for some reason.
[18:16:33] *** Quits: togusaa (~togusa@user/togusa) (Quit: Leaving)
[18:18:28] *** JanC_ is now known as JanC
[18:18:28] <harpia> ~=2.1.0 is equivalent to ^2.1.0, right? - I think there's no ^ in python.
[18:18:51] <A_Dragon> harpia: what is your expectation of the operator?
[18:18:52] <harpia> from 2.1.0 upwards, but excluding 3 and beyond
[18:19:09] <A_Dragon> that would depend on the module and how it implemented the operator
[18:19:19] <A_Dragon> or do you mean in requirements :D
[18:19:23] <A_Dragon> in which case not sure
[18:19:40] <harpia> i'm specifying this in setup.cfg,  install_requires
[18:19:49] <harpia> requests~=2.26.0
[18:19:59] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[18:20:26] <harpia> I want requests v2 and any later minor upgrade. Never v3
[18:20:36] <A_Dragon> https://www.python.org/dev/peps/pep-0440/#version-specifiers ?
[18:20:56] <harpia> ah, thanks, that's it
[18:22:02] <pycode> when you need to hold a "link" to a module is this a good approach? https://bpa.st/RZ7A
[18:22:25] <A_Dragon> what problem are you trying to solve with this?
[18:23:04] *** Joins: jdmark (~jdmark@67.8.137.130)
[18:23:49] <pycode> A_Dragon, me? not a specific problem i basically have a list of modules that i need to "load" because i need to get some variables inside them i have the "name"
[18:23:56] <pycode> so i thought about a name -> module
[18:24:00] <pycode> in a dictionary
[18:24:45] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 268 seconds)
[18:24:56] *** Joins: tracey (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[18:25:21] <A_Dragon> you can hold references to modules fine (though from . import x may or may not be an actual module), you could also access them via globals() if you really want to. As you're not runtime importing them thats about as good as it gets afaik
[18:25:42] <A_Dragon> (and runtime importing them via importlib would still give you the module object anyway)
[18:25:49] *** Joins: y1n (~y1n@84-115-65-216.wifi.dynamic.surfer.at)
[18:26:15] <pycode> ok
[18:26:15] <pycode> thanks
[18:26:24] *** Joins: daoudr_ (~daoudr@178.197.217.245)
[18:27:26] *** Joins: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net)
[18:27:28] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[18:27:34] *** Quits: ihristov (~ihristov@217.145.94.71) (Quit: Connection closed)
[18:27:56] *** Joins: iomari891 (~iomari891@197.210.53.101)
[18:30:10] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[18:30:14] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[18:31:42] <Fieldy> hello! how can i "normalizse" text like this? or really, i'm thinking sed-like approach where i'd like to simply replace \n with |, and don't escape other things. example: random gibberish as soon as they\'re triggered.\n\nThat\'s partly because humans
[18:32:09] <Yhg1s> Fieldy: s.replace('\n', '|')
[18:32:43] <Fieldy> Yhg1s: okay, where "s" is whatever has the text? (noobish)
[18:32:57] <Yhg1s> Fieldy: the string you want to do the replace on, yes. str.replace returns a new string.
[18:33:02] <Fieldy> ok
[18:33:10] <Fieldy> will give it a shot
[18:33:26] *** Quits: besnn (~besnn@user/besnn) (Read error: Connection reset by peer)
[18:33:44] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[18:34:00] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Quit: azidhaka)
[18:35:10] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (Ping timeout: 252 seconds)
[18:37:22] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Ping timeout: 260 seconds)
[18:38:31] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Ping timeout: 252 seconds)
[18:38:58] *** Joins: mav`rik (~unknown@ec2-54-171-126-99.eu-west-1.compute.amazonaws.com)
[18:40:30] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[18:43:20] *** Joins: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com)
[18:43:43] *** Joins: legola (~legola@46.235.100.27)
[18:43:49] *** Quits: System123 (~System123@x590feea0.dyn.telefonica.de) (Remote host closed the connection)
[18:45:06] *** Quits: iomari891 (~iomari891@197.210.53.101) (Ping timeout: 268 seconds)
[18:45:23] *** Joins: wender (~Wender@189.37.66.63)
[18:45:32] *** Joins: wodim (~zzz@2605:6400:30:f3cc:fa83:71b3:af31:d023)
[18:45:43] *** Quits: lethu (~lethu@user/lethu) (Ping timeout: 268 seconds)
[18:46:10] <wodim> im using configparser and i understand changes are stored automatically when the context manager is left but is there a way to flush to the file manually?
[18:46:21] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[18:47:12] <wodim> ah wait it does not save to file automatically, i have to use write(). great
[18:47:21] <wodim> idk what gave me that impression
[18:47:33] * space-ghost munches pop-corn
[18:47:40] *** Joins: murd0c (~murd0c@user/murd0c)
[18:47:46] *** Joins: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net)
[18:47:51] *** Quits: eightysix (~eightysix@2600:1700:bf32:3410:48cf:bfb4:e69f:63ef) (Quit: My iMac has gone to sleep. ZZZzzz…)
[18:48:04] <murd0c> hi, python has in-built unit testing modules?
[18:48:11] <murd0c> *built-in
[18:48:24] *** Quits: computeiro (~Wender@189.37.66.63) (Ping timeout: 268 seconds)
[18:48:25] <sco1> Yes, called unittest
[18:48:25] <grym> murd0c: unittest
[18:48:34] <grym> murd0c: when'
[18:48:36] *** Quits: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net) (Client Quit)
[18:48:48] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[18:48:55] <grym> murd0c: when/if you need more than unittest can provide, the third party module pytest exists (and can run unittest-style tests)
[18:49:05] *** Joins: iomari891 (~iomari891@197.210.77.160)
[18:49:26] <murd0c> awesome
[18:49:33] <murd0c> thanks! sco1 grym
[18:49:38] *** Joins: ub (~Thunderbi@178.165.161.81.wireless.dyn.drei.com)
[18:50:45] *** Joins: fikran (~fikran@user/fikran)
[18:50:48] *** Joins: computeiro (~Wender@189.37.66.63)
[18:51:29] <pycode> another stupid question (pardon) :) at the moment i have a logics.py and rules/ packages i should rename rules/ into logics because those are logics instead of rules but i think namiding the folder that way will create a king of conflict no?
[18:51:34] <pycode> king/kind
[18:51:36] <pycode> :)
[18:52:16] *** Quits: wender (~Wender@189.37.66.63) (Ping timeout: 252 seconds)
[18:52:58] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[18:53:23] <pycode> or... move the code inside logics.py into the __init__ of the logics/ folder?
[18:53:28] <pycode> sounds better?
[18:55:34] *** Quits: iomari891 (~iomari891@197.210.77.160) (Ping timeout: 252 seconds)
[18:56:14] *** ub is now known as ubert
[18:58:22] *** Quits: frost (~frost@59.71.242.61) (Ping timeout: 260 seconds)
[18:58:43] *** Joins: Auron (Auron956@user/auron)
[19:00:28] *** Quits: ubert (~Thunderbi@178.165.161.81.wireless.dyn.drei.com) (Ping timeout: 252 seconds)
[19:00:42] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[19:01:10] *** Quits: y1n (~y1n@84-115-65-216.wifi.dynamic.surfer.at) (Ping timeout: 260 seconds)
[19:02:12] <Soni> hmm there's no easy way to check that a semver is > some triplet without parsing the thing, is there?
[19:02:57] <grym> Soni: have you found https://packaging.pypa.io/en/latest/version.html#packaging.version.parse
[19:03:16] <grym> version.parse("2.3.1") < version.parse("10.1.2") evaluates correctly, for example
[19:04:00] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[19:04:49] <Soni> grym: that's not semver
[19:05:08] <grym> it'll evaluate properly anyway
[19:07:40] *** Quits: Haxxa (~Haxxa@122.199.45.213) (Ping timeout: 240 seconds)
[19:08:13] *** Joins: iomari891 (~iomari891@197.210.52.221)
[19:08:39] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[19:08:50] *** Quits: litharge (litharge@libera/bot/litharge) (Quit: restarting)
[19:09:13] *** Joins: litharge (litharge@libera/bot/litharge)
[19:11:12] *** Quits: litharge (litharge@libera/bot/litharge) (Client Quit)
[19:11:55] <Soni> meh
[19:12:29] <Soni> does python have a big-integer-equivalent of C's sscanf("%u")?
[19:13:08] *** Joins: litharge (litharge@libera/bot/litharge)
[19:13:26] *** ChanServ sets mode: +o litharge
[19:13:37] <hexnewbie> Soni: int(x)?
[19:13:48] <Soni> hexnewbie: prefix, not whole
[19:14:54] <BtbN> Isn't %u just 32bit unsigned int?
[19:15:18] <BtbN> On the vast majority of platforms at least
[19:15:43] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[19:15:48] <kosh> python has a long int which is effectively unlimited in size
[19:15:51] <supakeen> Correct, they both read the same but their destination is different :)
[19:15:55] <kosh> it is bounded by the memory you have
[19:16:02] *** Quits: iomari891 (~iomari891@197.210.52.221) (Ping timeout: 265 seconds)
[19:16:05] <supakeen> Soni: What do you want to achieve?
[19:16:06] <hexnewbie> You can raise it to 64 bit with scanf(s, "%Lu", val), still does the same as val = int(s)
[19:16:28] <hexnewbie> sscanf
[19:16:30] <BtbN> Python int does not have a realistic limit
[19:16:42] <Soni> supakeen: check that a semver is > 3.1.0
[19:16:44] <kosh> for exact control over numerical type use numpy
[19:16:46] <pycode> is there a way to create a class without repeating itself? i mean if i try to create a set doing x = {A(),A(),A()} i will have a set with three elements
[19:16:55] <Soni> and yes, we do mean strictly >
[19:17:05] <pycode> is that possible to create on time the class if i initialize it with the same parameters
[19:17:06] <pycode> ?
[19:17:13] <anddam> pycode: you are not creating any class there
[19:17:36] <supakeen> As in, (4, 0, 5) > (3, 1, 0)? You can split both and turn them into int tuples and do the comparison like that.
[19:17:40] <pycode> anddam, i am creating the instance of the class A() i am saying it it possible to return the same instance instead of creating new one?
[19:17:50] <supakeen> Perhaps with some sanity checks on length of tuple?
[19:17:57] <anddam> pycode: [A()] * 3
[19:18:05] <grym> pycode: you can make singletons, but .. you probably don't want t
[19:18:18] <pycode> anddam, yes ok but not the point i am asking if i can return the same instance
[19:18:20] <pycode> grym, why?
[19:18:31] <grym> pycode: why would you want to
[19:18:36] <kosh> BtbN, yeah it does not have a realstic limit because the numbers of digits you can fit is ridiculously huge on pretty much any machine
[19:18:42] <sco1> Do you want the same instance or do you want them to hash the same?
[19:18:57] <kosh> I wonder how many digits you would get on a machine with 64GB of ram before python failed with a memory problem
[19:19:14] <anddam> pycode: yes, store the first instance initialization and return that in __init__
[19:19:14] <pycode> because inside this calss i need to initialize some indicators if i initialize many time i will recalculate the indicators without any reason if i already have their values
[19:19:15] <BtbN> Pretty sure it would fail at something else way before the memory runs out
[19:19:24] *** Joins: iomari891 (~iomari891@197.210.52.221)
[19:19:26] <pycode> o
[19:19:27] <pycode> k
[19:20:02] <hexnewbie> pycode: You can create a class method decorated with @functools.cache that simply calls the main constructor
[19:20:29] <Soni> we basically just need to check a semver, we'd do it in C using if ((2 == sscanf(version, "3.%u.%u", &min, &patch)) && (min > 1 || patch > 0)) {ok} else {error}, but we're not sure how to do it in python
[19:20:30] <hexnewbie> Though I'm not sure if the two decorators will cooperate perfectly
[19:20:30] <pycode> interesting
[19:20:31] <kosh> BtbN, it would expect it to run out of memory doing intermediate operations
[19:20:40] <anddam> hexnewbie: memoize all the way
[19:20:59] <anddam> hexnewbie: how does .cache() relate to lru_cache?
[19:21:18] <hexnewbie> anddam: It's lru_cache without size limit
[19:21:19] <anddam> hexnewbie: oh, from docs "Returns the same as lru_cache(maxsize=None), " so kinda the same
[19:21:24] *** Quits: UselessCourage (~UselessCo@gateway/tor-sasl/uselesscourage) (Remote host closed the connection)
[19:21:25] <anddam> yes, my bad
[19:21:57] *** Joins: UselessCourage (~UselessCo@gateway/tor-sasl/uselesscourage)
[19:22:24] <anddam> grym: I am thinking about my "odd" setup from yesterday, where I was declaring an install_requires on package 'foo' and then trying to call a Popen on a binary provided by package foo
[19:22:44] <anddam> grym: does it ring a bell?
[19:22:48] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[19:23:29] <grym> anddam: yes
[19:24:45] *** Joins: Haxxa (~Haxxa@116-255-6-75.ip4.superloop.com)
[19:25:20] *** Quits: iomari891 (~iomari891@197.210.52.221) (Remote host closed the connection)
[19:25:28] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[19:25:37] <anddam> grym: if the package isn't the venv when bdist_wheel is run, how am I going to import it?
[19:25:48] *** Joins: iomari891 (~iomari891@197.210.53.58)
[19:26:06] <grym> anddam: i still think you're better served by importing the library you require, instead of subprocessing to its binary
[19:26:57] *** Quits: daoudr_ (~daoudr@178.197.217.245) (Remote host closed the connection)
[19:27:12] <anddam> grym: I left as it was since I was already profiting by wheel, meaning the requirements were being pulled from cache and just the "current" package was failing at build wheel but succeeding at the fallback plain install
[19:27:18] *** Quits: KeiraT (~k@lulzsec.co.uk) (Ping timeout: 260 seconds)
[19:27:43] <anddam> so I got cache for deps and my package installed with install, the only drawback is some error lines in the build log
[19:27:58] <anddam> but the whole process completes ok due to the install fallback
[19:28:13] <jinsun> Soni: if the version is just 3.1.0 (Major.Minor.Patch), then pep 440 version is compatible with semver and you can just use https://packaging.pypa.io/en/latest/version.html, https://www.python.org/dev/peps/pep-0440/#semantic-versioning
[19:29:05] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 265 seconds)
[19:29:15] <Soni> jinsun: nah, it may have - + etc
[19:29:28] <Soni> the idea is to ignore those ofc
[19:30:20] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[19:30:28] <jinsun> so strip them?
[19:30:43] *** Quits: iomari891 (~iomari891@197.210.53.58) (Ping timeout: 252 seconds)
[19:30:55] <anddam> grym: but the thing has been bothering me, especially since it seems that at bdist_wheel phase the requirements are not there. I do not know enough about pip internals but I figured install is still called from the command building a wheel, right?
[19:31:00] *** Joins: Elodin (~weechat@user/elodin)
[19:31:08] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:31:55] <PublicWiFi> so I'm trying to save a bunch of dictionaries to a file then import it to use them since they won't ever change
[19:31:59] <PublicWiFi> like... 50ish dictionaries lol
[19:32:04] <PublicWiFi> but
[19:32:15] *** Joins: iomari891 (~iomari891@197.210.53.58)
[19:32:24] <PublicWiFi> "from . import file" doesn't work.. I get this error "attempted relative import with no known parent package"
[19:32:33] <PublicWiFi> I remember with py2 I could just "import file" without issue
[19:32:34] *** Joins: frozensoil (~frozensoi@bras-base-lnglpq1516w-grc-01-74-12-204-141.dsl.bell.ca)
[19:32:51] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[19:33:11] *** Quits: ionelmc (uid20175@id-20175.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[19:33:16] <anddam> PublicWiFi: and why are you not using "import file" now?
[19:33:27] <PublicWiFi> it straight up doesn't find it
[19:33:42] <PublicWiFi> after a quick google it says this functionality was changed in py3 but im not sure
[19:33:57] <frozensoil> hi all, I have a project with huey tasks that are running, when upgrading huey to the latest version, 2 additional positional arguments are added. Now the issue I have is when I launch my worker again, the worker is expecting tasks with 11 positional arguments but 13 are given.
[19:34:48] <anddam> PublicWiFi: shows an example, what you said worksforme
[19:34:52] <anddam> PublicWiFi:    ~$ echo "print('FOO')" > bar.py; echo "import bar" > foo.py; python foo.py
[19:34:54] <anddam> FOO
[19:34:59] <jinsun> PublicWiFi: if you cd to the folder where file.py is saved you can import it
[19:35:29] <pycode> guys do you usually call a class with a singular name? right? but if i need to hold logics inside something like MyClassLogics: and then inside the class logic1() logic2() logic3() and so on...how should i call that class? i mean what is the most common way to name it ?
[19:35:31] <PublicWiFi> yeah im in the dir when I try to launch my main script
[19:35:45] <PublicWiFi> hmmm
[19:35:54] <pycode> MyClassLogicsList ?
[19:36:07] *** Joins: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net)
[19:36:12] *** Quits: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net) (Client Quit)
[19:36:49] <PublicWiFi> yall
[19:36:51] <PublicWiFi> disregard me
[19:36:55] <PublicWiFi> christ, it was in the wrong dir
[19:36:59] *** Joins: lastshell (~lastshell@user/lastshell)
[19:37:05] <pycode> MyClass(LogicsList)
[19:37:06] <PublicWiFi> man I need more coffee lol, thanks for the help ^^
[19:37:06] <pycode> :)
[19:37:24] *** Joins: int3l (~int3l@78-83-124-208.spectrumnet.bg)
[19:37:47] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 265 seconds)
[19:39:24] *** Joins: Atque (~Atque@user/atque)
[19:39:35] <Soni> hmm yay for needing to support python 3.8
[19:39:53] <grym> then you get f'{myvar=}'
[19:39:56] <grym> hurray!
[19:40:02] <grym> and walruses, of course
[19:40:04] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[19:42:11] *** Joins: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net)
[19:42:14] *** Quits: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net) (Client Quit)
[19:42:28] <pycode> it seems there is no "convention" for class names: https://www.python.org/dev/peps/pep-0008/#class-names
[19:42:30] <pycode> no?
[19:42:38] <pycode> wrong page to check ?
[19:43:13] <sco1> You might be overthinking it
[19:43:57] <pycode> sco1, i just want follow conventions
[19:44:28] *** Quits: iomari891 (~iomari891@197.210.53.58) (Ping timeout: 252 seconds)
[19:44:51] <grym> pycode: classes are CamelCase
[19:45:10] <pycode> grym, yes but what about singular/plural?
[19:45:22] *** Joins: wender (~Wender@189.37.66.63)
[19:45:25] <grym> pycode: collections are plural, everything else is singular
[19:45:58] <grym> my_things = [thing1, SomeClass(), thing2]
[19:46:01] <pycode> if i have to define a class that has a list of logics inside should i call it MyClassLogics? MyClass(Logics) <-- obviously if i have to use that Logics for other classes too or MyClassLogicsList ?
[19:46:10] <grym> no
[19:46:24] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[19:46:30] <pycode> grym, no... for what name? :)
[19:46:31] <grym> the instance attribute could be named `logics` though
[19:46:49] *** Quits: georgios (~georgios@user/georgios) (Ping timeout: 252 seconds)
[19:46:52] <mav`rik> pycode: what are the actions that the class offers via its methods? Is the object iterable? etc. Naming is hard.
[19:47:16] <grym> LogicContainer(logics=[Logic(), Logic()]) or something
[19:47:29] <space-ghost> there is a getmembers() function @ mav`rik
[19:47:38] <space-ghost> https://docs.python.org/3/library/inspect.html
[19:47:40] <jinsun> pycode: does it just hold the values? then why not use builin collections like lists or dicts
[19:47:46] *** Quits: computeiro (~Wender@189.37.66.63) (Ping timeout: 252 seconds)
[19:47:46] <Soni> grym: aren't those 3.9?
[19:47:54] <pycode> hard to explain but i basically have a list of classes and a list of methods inside those classes, based on a specific algorithm i need to call specific methods
[19:47:56] <Soni> str.removeprefix is 3.9 it seems
[19:47:57] <grym> Soni: aren't which
[19:48:02] <mav`rik> pycode: Your class provides (or should) some kind of functionality... what does it _do_ other than hold "Logic" instances
[19:48:14] <pycode> yeah those hold indicators values
[19:48:23] <Soni> grym: f'' and :=
[19:48:38] <grym> Soni: no
[19:48:40] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Ping timeout: 240 seconds)
[19:48:53] <grym> Soni: f-strings came in 3.6, the {var=} is 3.8, walrus is 3.8
[19:48:56] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[19:49:07] <Soni> ah
[19:49:20] <Soni> okay, so it just lacks removeprefix then
[19:49:35] <grym> 3.9 had minor additions afaik; 3.10 has (match ... )
[19:49:36] <grym> >:)
[19:49:39] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[19:49:43] *** Joins: qlixed (~qlixed@181.44.129.13)
[19:50:34] <Soni> anyway, how's this? https://bpa.st/SY2A
[19:50:56] *** Quits: p-i-_ (~Ohmu@223.206.145.156) (Read error: Connection reset by peer)
[19:51:02] <phy1729> 3.9 has subscriptable list, dict, set, tuple which is quite nice
[19:51:09] <jinsun> the major thing about 3.9 is the type hinting generics like list[str], without importing stuff from typing
[19:51:09] <mav`rik> grym: 3.9 provided union operators on dict, some quality of life improvements for typing, changes to strings (prefix/suffix stuff so people don't mess up with "strip"), and a load of quite cool stuff under the covers.
[19:51:25] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[19:51:28] *** Joins: computeiro (~Wender@189.37.66.63)
[19:51:45] <grym> mav`rik: ah, gotcha.  yeah, it seems like a "quietly tidy up" release that's more substantive under the covers than it appears
[19:52:01] *** Quits: murd0c (~murd0c@user/murd0c) (Read error: Connection reset by peer)
[19:52:35] *** Joins: p-i- (~Ohmu@223.206.145.156)
[19:52:44] <jinsun> another major thing is that it doesn't work on windows 7 :D
[19:52:44] *** Joins: ham5urg (~ham5urg@p200300d167414700ae675dfffe1eec6d.dip0.t-ipconnect.de)
[19:52:58] *** Quits: wender (~Wender@189.37.66.63) (Ping timeout: 260 seconds)
[19:53:59] <mav`rik> grym: yeah, a lot of it might be seen as "paving the way" (esp. the interpreter improvements) for future changes because it uses the PEG-based parser. There's some future speedups too which is nice. The zoneinfo TZ db _finally_ makes for maybe better datetime handling by people
[19:53:59] <ham5urg> When I need some constants, shared between multiple .py files inside one subdirectory (/src/sub/*.py), what is the most common way of doing that?
[19:54:13] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[19:54:31] <grym> ham5urg: MY_CONSTANT = 5 # please no touchy! , then later, `from blah import MY_CONSTANT`
[19:54:47] <grym> ham5urg: if that gives you the willies, i also like frozen attrs classes
[19:55:43] <ham5urg> grym, I see. Thanks
[19:55:54] *** Joins: jeho2 (~jehoshaph@user/jehoshaphat)
[19:56:33] *** Joins: odoood (~odoood@2601:c8:c003:a550::1)
[19:56:38] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 268 seconds)
[19:56:52] *** Quits: p-i- (~Ohmu@223.206.145.156) (Remote host closed the connection)
[19:56:55] *** Joins: LiftLeft (~LiftLeft@172.98.92.110)
[19:57:03] <Ennea> not necessarily python, just some language/naming help: assume i write a function that takes an integer as an input and returns an integer that is either the input, or the bounds of a range if the input exceeds those. what do i call that?
[19:58:09] <grym> Ennea: that's like the inverse of a clip
[19:58:31] *** Joins: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net)
[19:58:31] *** Quits: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net) (Client Quit)
[19:58:34] *** Joins: p-i- (~Ohmu@192.210.143.50)
[19:58:37] <daex> I've seen it called clamp().
[19:58:47] <Ennea> ah, clamp. that's what's been on my tongue, i've seen that somewhere before
[19:58:57] <Ennea> thanks you two
[19:59:16] <grym> clamp would work
[19:59:26] <Yhg1s> Ennea: 'bounded' is what I've seen it called, although in Python you'd use min(), max() or a combination of min and max.
[19:59:32] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 265 seconds)
[19:59:44] <Ennea> yea, the implementation is not an issue. already using min and max. but naming things is hard ;)
[19:59:49] <grym> (clamp always gives me happy memories of patch clamping)
[20:00:05] <grym> (which actually has very little to do with this operation)
[20:00:19] *** Joins: Omega037 (~Omega037@047-024-168-024.res.spectrum.com)
[20:00:40] *** Joins: upsala (~zcb@185.213.155.160)
[20:01:30] *** Quits: lastshell (~lastshell@user/lastshell) (Remote host closed the connection)
[20:01:49] *** Joins: brylie (~Thunderbi@81-197-199-179.elisa-laajakaista.fi)
[20:02:37] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:02:42] *** Joins: pro_z (~pro_z@37.214.66.151)
[20:03:11] *** Joins: iomari891 (~iomari891@197.210.77.124)
[20:03:50] *** Quits: fassl (~fassl@2a02:8388:1987:9380:c4ee:81c5:625a:a215) (Quit: Leaving)
[20:06:44] *** Joins: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[20:06:53] <lesshaste> cypari is confusing. There is this page https://pypi.org/project/cypari/ but the link to the homepage is broken. there is also cypari2 https://github.com/sagemath/cypari2 but pip install cypari2 doesn't work
[20:06:56] <Soni> how's this for parsing a semver? https://bpa.st/SY2A
[20:07:03] <lesshaste> anyone have any idea where the source for cypari is?
[20:07:07] *** Joins: lastshell (~lastshell@user/lastshell)
[20:07:26] *** Joins: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net)
[20:08:00] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[20:08:33] *** Joins: heco (~redrum@user/redrum88)
[20:08:36] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[20:08:40] *** Quits: iomari891 (~iomari891@197.210.77.124) (Ping timeout: 240 seconds)
[20:09:38] *** Joins: iomari891 (~iomari891@197.210.52.221)
[20:10:26] <mav`rik> lesshaste: https://github.com/3-manifolds/cypari maybe?
[20:10:42] *** Quits: odoood (~odoood@2601:c8:c003:a550::1) (Ping timeout: 260 seconds)
[20:10:42] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[20:10:44] *** Quits: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br) (Quit: harpia)
[20:14:25] <lesshaste> mav`rik,  thanks!
[20:14:44] *** jeho2 is now known as jeho
[20:17:10] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[20:17:25] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 265 seconds)
[20:18:06] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[20:19:17] *** Quits: portalrat (~portalrat@user/portalrat) (Quit: Leaving)
[20:19:32] *** Joins: shad (~shad@user/shad)
[20:19:34] *** Joins: portalrat (~portalrat@user/portalrat)
[20:19:45] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:21:28] *** Quits: joo (~joo@fsf/member/joo--) (Ping timeout: 252 seconds)
[20:21:45] *** Quits: justache (~justache@user/justache) (Read error: Connection reset by peer)
[20:23:13] *** Quits: Praise (~Fat@user/praise) (Quit: No Ping reply in 180 seconds.)
[20:23:14] *** Joins: justache (~justache@user/justache)
[20:24:39] *** Parts: ham5urg (~ham5urg@p200300d167414700ae675dfffe1eec6d.dip0.t-ipconnect.de) (Leaving)
[20:24:43] *** Joins: Praise (~Fat@user/praise)
[20:26:49] *** Joins: magga (magga@ti0036a400-1042.bb.online.no)
[20:29:43] *** Joins: fdan (~fdan@192.146.154.3)
[20:30:15] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Read error: Connection reset by peer)
[20:30:36] *** Quits: sejow (~sejow@193.29.106.190) (Remote host closed the connection)
[20:32:11] *** Joins: nomic (~nomic@185.217.117.156)
[20:32:13] <Fieldy> hello, i have two programs that pass data back and forth. one gets some input text, writes to a file, then the second one inputs that files contents, and outputs to another text file, then the first program picks that up. i'm currently doing all of that manually. what do i need to read about to learn to automate that?
[20:32:30] *** Joins: ham5urg (~ham5urg@p200300d167414700ae675dfffe1eec6d.dip0.t-ipconnect.de)
[20:32:37] *** Joins: Atque (~Atque@user/atque)
[20:32:39] <ham5urg> I have a local file const.py, in another file a.py in the same directory I can do "from . import const", which works. But I can't do "import const". Why?
[20:32:53] *** Quits: iomari891 (~iomari891@197.210.52.221) (Ping timeout: 265 seconds)
[20:32:57] <grym> ham5urg: `import .const`
[20:33:01] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 268 seconds)
[20:33:11] <grym> because imports outside of packages are bothersome and you're encouraged not to do them by the language
[20:34:32] <ham5urg> In subdir/ I have multiple files which share some consts, which I wanted to pack into subdir/const.py. Is this the wrong way?
[20:34:40] <ham5urg> thanks, grym
[20:34:48] *** Joins: iomari891 (~iomari891@105.112.138.38)
[20:35:33] *** Joins: ToAruShiroiNeko (~eva@user/toarushiroineko)
[20:35:34] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[20:35:54] <ToAruShiroiNeko> So I am trying to unbreak pip.
[20:36:01] <grym> ham5urg: that's fine, just give subdir an empty __init__.py and then it's a package
[20:36:16] <grym> and imports will be more sensible.
[20:36:26] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[20:36:27] <ToAruShiroiNeko> It broke while I was trying to perform an uninstall of requirements.txt
[20:36:39] <grym> ToAruShiroiNeko: do you have a venv or no
[20:36:41] *** Joins: holgersson (~quassel@user/holgersson)
[20:36:49] <ToAruShiroiNeko> pip cannot work without the certifi it iseems.
[20:36:57] *** Joins: KeiraT (~k@lulzsec.co.uk)
[20:37:06] <ToAruShiroiNeko> This is on windows so I suspect not.
[20:37:17] <ToAruShiroiNeko> This thing has Anaconda3 flavor of python.
[20:37:23] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0f7-64.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:38:04] *** Joins: daoudr_ (~daoudr@178.197.217.245)
[20:38:08] <grym> ToAruShiroiNeko: worst case, then, you can just blow it all away and start over
[20:38:15] <grym> (which is what i was going to recommend for a venv too)
[20:38:19] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[20:38:24] <grym> conda envs and/or venvs work fine on windows, by the way
[20:39:37] *** Joins: mukul (~mukul@209.49.55.10)
[20:40:42] *** Joins: p-i-_ (~Ohmu@223.206.145.156)
[20:40:56] *** Joins: teut (~teut@122.162.88.202)
[20:41:10] *** Quits: Praise (~Fat@user/praise) (Read error: Connection reset by peer)
[20:41:12] *** Joins: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net)
[20:41:18] <teut> https://bpa.st/GYDQ
[20:41:21] *** Joins: Praise (~Fat@user/praise)
[20:41:32] <teut> does python saves memory in case of ints too?
[20:42:08] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[20:42:39] <jinsun> try numbers larger than 256
[20:42:52] *** Joins: rapha (~jrs@user/rapha)
[20:42:59] <InPhase> teut: Save memory?  Each int reference takes up a lot more space than an int.
[20:43:15] <InPhase> teut: If you want to tight-pack ints, you need numpy.
[20:43:37] <teut> jinsun, is it the same thing like   small string,  medium size string and long strings?
[20:43:52] *** Joins: INeedAHandle (~INeedAHan@192.111.134.213)
[20:43:58] <teut> in c++ smal strings are of <=25 characters
[20:44:00] *** Quits: p-i- (~Ohmu@192.210.143.50) (Ping timeout: 265 seconds)
[20:44:08] <teut> so they do not use malloc
[20:44:28] *** Quits: Yion (~Yion@pd95caa88.dip0.t-ipconnect.de) (Quit: Client closed)
[20:44:29] *** Quits: mukul (~mukul@209.49.55.10) (Ping timeout: 265 seconds)
[20:44:45] <teut> InPhase ya I missed it that its an int Object
[20:44:52] <teut> not that primitive
[20:45:44] <jinsun> dunno about C++ strings, it is just some optimization though, so fun fact i guess, but useless in actual programs
[20:46:19] <teut> even id(78)   is even same , I know  a is like a c++ reference to the "78 " object
[20:46:38] <teut> so whats the way to overwrite at that memory location?
[20:47:11] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[20:47:31] *** Joins: nergar (~Nergar@177.225.152.145)
[20:47:43] <Fieldy> what do i need to read about to learn how to monitor specific files for changes (modified time is fine), and then take actions?
[20:47:44] <teut> all rules of cpython should be bottlenecked by C , thats for sure and  c and old c++ were similar
[20:48:04] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[20:48:58] <teut> Uploaded file: https://uploads.kiwiirc.com/files/758a390f1f546e83925f0f8e8ff63c26/pasted.txt
[20:49:40] *** Joins: stealth_ (~stealth_@216-197-160-97.regn.static.sasknet.sk.ca)
[20:49:51] *** Quits: computeiro (~Wender@189.37.66.63) (Quit: Leaving)
[20:50:12] *** Quits: Meteorhead (~Meteorhea@165.225.205.32) (Quit: Client closed)
[20:50:58] *** Joins: eightysix (~eightysix@2600:1700:bf32:3410:182f:5fb1:c666:1474)
[20:52:43] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[20:54:16] <mav`rik> teut: Short answer, you can't (without some quite involved unpleasantry) "overwrite at that memory location". Python doesn't support the idea of "taking a reference" to something and then later updating said content via that address. Whya re you wanting to do this?
[20:54:47] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:55:05] <teut> in c  it always makes copies of the struct/ int etc
[20:55:36] <mav`rik> teut: Python does not, ever. Copying is something you must do yourself.
[20:56:10] <teut> yes, understood
[20:56:48] <teut> I was just trying to understand the language a li'l better
[20:57:02] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Quit: Leaving...)
[20:57:30] <mav`rik> teut: Ned Batchelder has a really great presentation on how Python names work - http://bit.ly/pynames1
[20:58:02] <mav`rik> Unless what you were wanting to understand is mechanism (how the interpreter itself works)?
[20:58:05] <teut> thats the old one , seen it a lot of times
[20:58:13] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[20:58:38] <teut> I thing you create  a PyObject  78 , and store it in your global dict
[20:58:47] <teut> think*
[20:59:11] *** Joins: ent681 (~kieran@pool-96-244-184-85.bltmmd.fios.verizon.net)
[20:59:12] <teut> is that what you do?  and check if such an object exists
[21:00:07] *** Joins: fikran (~fikran@user/fikran)
[21:00:17] <teut> with the id
[21:00:23] <teut> id will be the key
[21:00:31] <mav`rik> teut: Small numbers (because they're so frequently used), and likewise several small strings, have a cache of sorts by the interpreter. Partially to avoid churn, and also to minimise time taken to allocate a new instance. This is possible/useful because strings and numbers are immutable
[21:00:40] *** Quits: jazzy (~jaziz@2600:380:865d:911b:314a:6024:eb18:305e) (Ping timeout: 240 seconds)
[21:00:59] *** Quits: ent681 (~kieran@pool-96-244-184-85.bltmmd.fios.verizon.net) (Quit: Leaving.)
[21:01:10] <teut> ya so 78 is a small number
[21:01:18] <teut> why arent you duplicating it?
[21:01:46] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[21:01:51] <teut> for bigger numbers you may require cache
[21:02:30] *** Joins: ent681 (~kieran@pool-96-244-184-85.bltmmd.fios.verizon.net)
[21:03:01] *** Quits: ent681 (~kieran@pool-96-244-184-85.bltmmd.fios.verizon.net) (Client Quit)
[21:03:03] <orbisvicis> i have an asyncio loop in a child thread, and I want to use an Event to communicate between threads, and await the event in the asyncio loop
[21:03:25] *** Joins: ent681 (~ent681@pool-96-244-184-85.bltmmd.fios.verizon.net)
[21:03:41] *** Joins: ub (~Thunderbi@178.165.161.81.wireless.dyn.drei.com)
[21:03:58] <mav`rik> teut: the interpreter interns all numbers from -5 to 256 I think at startup. Any reference to those in the bytecode will be references to the interned values. These small numbers are chosen in particular due to the commonality of their use (-1 for "end of sequence" references, all the 8 bit values for various purposes, etc.)
[21:04:16] <orbisvicis> asyncio.Event isn't threadsafe but I can't wait on threading.Thread, so what should I do?
[21:04:56] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[21:05:17] <graingert[m]> orbisvicis: you can use `loop.call_soon_threadsafe(event.set)`
[21:05:36] *** Joins: Sky_Net (~Sky_Net@176.14.213.149)
[21:05:50] <teut> -5 to 256, that would be weird because you can store them in 8 bits, so what kind of optimization will that give
[21:05:55] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[21:05:57] <teut> cant*
[21:06:01] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 252 seconds)
[21:06:05] <graingert[m]> orbisvicis: https://anyio.readthedocs.io/en/stable/threads.html#calling-synchronous-code-from-a-worker-thread has a nice example
[21:06:11] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[21:06:25] *** Quits: ub (~Thunderbi@178.165.161.81.wireless.dyn.drei.com) (Client Quit)
[21:06:36] <supakeen> teut, this has very little to do with the size of those objects; they just get used a lot so it's better to not have to recreate them every time
[21:06:43] *** Joins: ub (~Thunderbi@178.165.161.81.wireless.dyn.drei.com)
[21:06:46] *** Joins: sejow (~sejow@193.29.106.206)
[21:07:01] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[21:07:09] <graingert[m]> anyio.from_thread and anyio.to_thread are nice because they cooperate to pass the loop around so you don't need to find it for loop.call_soon_threadsafe
[21:07:33] <mav`rik> teut: on top of what supakeen says, plus "sys.getsizeof(0) == 24"
[21:07:48] *** Joins: murd0c (~Murdoc@user/murd0c)
[21:07:49] <teut> https://leanpub.com/insidethepythonvirtualmachine   will this book answer all my curiosity?
[21:08:17] <teut> sizeof(0) 24 , yikes thats too much for 0
[21:08:20] <supakeen> teut, i can suggest https://realpython.com/products/cpython-internals-book/
[21:08:26] *** Quits: legola (~legola@46.235.100.27) (Remote host closed the connection)
[21:08:35] <teut> I dont like realpython that much
[21:09:24] <teut> I only have read the free blogs yet but not the books yet
[21:09:33] <bjs> teut: “too much” for 0?
[21:09:37] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 265 seconds)
[21:09:49] <teut> 24 bits all 0 s?
[21:09:53] <bjs> how many bytes is the right number of bytes for the Python object 0
[21:10:13] <teut> if depends on your calculations
[21:10:20] <pycode> Is there a way to access dictionary with dot notation ?
[21:10:21] <bjs> teut: no, it’s a Python object. it has lots of object-y bits
[21:10:25] <teut> what kind of number model you wantto use
[21:10:26] <pycode> one.two.three
[21:10:33] <pycode> with nested objects
[21:10:36] <bjs> like refcounts and the type and int-specific data
[21:10:43] <teut> object-y?
[21:11:17] <bjs> teut: all Python objects are at least tens of bytes because that’s how many bytes you need to store the information that exists on all Python objects
[21:11:27] <mav`rik> pycode: "yes, but..." you could add a getattr hook to your object to return the dictionary value based on the dotted access, but that's quite quite awful.
[21:11:38] <pycode> ok
[21:12:04] <teut> for an int you may have some implementation in form of array or primitives of assembly
[21:12:20] <teut> then the various methods , the id etc
[21:13:05] <teut> primitives in *
[21:13:32] <teut> and you use the BigNum library
[21:13:43] <teut> oh so thaat stuff is abstracted too
[21:14:18] <teut> doesnt look like I can understand it without digging deep for an year workiing 10 krs a dat
[21:14:25] <teut> hrs *  day*
[21:14:46] <mav`rik> teut: why is the low level important to you at this point?
[21:15:02] <teut> just for the sake of curiosity
[21:16:07] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[21:16:57] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Ping timeout: 256 seconds)
[21:17:04] *** Joins: clarkk (~clarkk@host86-164-233-103.range86-164.btcentralplus.com)
[21:17:59] *** Joins: bilb_ono (~alexmarsh@ip68-6-90-72.sb.sd.cox.net)
[21:19:39] *** Joins: Zeturic (~Orimendix@50-25-46-156.krmtcmta02.res.dyn.suddenlink.net)
[21:21:07] *** Quits: ub (~Thunderbi@178.165.161.81.wireless.dyn.drei.com) (Ping timeout: 268 seconds)
[21:21:08] <InPhase> teut: Oh good, you want to override an int location?  Here's one of my favorite python abominations.  https://bpa.st/ALNA
[21:21:12] *** Quits: Sky_Net (~Sky_Net@176.14.213.149) (Quit: Leaving)
[21:22:01] <Fieldy> what do i need to read about to learn how to monitor specific files for changes (modified time is fine), and then take actions?
[21:23:09] <teut> oh  , so you  used a  wrapper
[21:23:10] <stealth_> watchdog
[21:23:17] <stealth_> Fieldy, ^
[21:23:21] <Fieldy> stealth_: thanks!
[21:23:24] <teut> memset , memcpy
[21:23:42] <teut> I dont remember this much c but can ctypes is just that
[21:23:55] <fdan> how to add a dictionary as the value to another dictionary
[21:23:55] <teut> can observe*
[21:24:36] <mav`rik> fdan: somedict["key"] = other_dict
[21:25:25] *** Quits: SassuWunnu (~sh1n0bi@90.205.242.229) (Quit: leaving)
[21:25:28] <orbisvicis> graingert[m], and for call_soon_threadsafe, it doesn't matter if its called from the main thread or a child thread?
[21:25:39] *** Joins: Deneb (~johnch@86.111.189.80.dyn.plus.net)
[21:25:48] <orbisvicis> yeah, passing the loop around is nice
[21:25:49] <foo> Can't believe in year 5 I just learned about ipython. So much nicer than the normal python shell.
[21:25:52] <fdan> mav`rik i have some problem here 5yEO
[21:25:57] <fdan> https://dpaste.org/5yEO
[21:25:59] <fdan> how to resolve
[21:26:11] <graingert[m]> orbisvicis: ?
[21:26:31] <graingert[m]> Why would you can it from the main (event loop( thread?
[21:26:37] <graingert[m]> s/(/)/
[21:26:43] <fdan> i want to get {123 :{100, 'java' }
[21:27:15] <orbisvicis> graingert[m], my use case is a bit backwards, the child thread is the event loop, the main thread isn't
[21:27:44] <mav`rik> fdan: your first and last lines in that string are empty.
[21:27:46] <graingert[m]> Why not just not do that?
[21:28:11] <rendar> graingert[m], you are an expert of anyio, if i have a command prompt to fire new tasks, should i use a new task group for each command?
[21:28:11] <stealth_> fdan, most likely the end of file is causing that problem, so add a `if i: ...`
[21:28:49] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[21:29:00] <graingert[m]> rendar: Depends, if you don't want background tasks then you don't need a task group at all
[21:29:19] <graingert[m]> If you do want background tasks then you need one for the entire console run loop
[21:29:27] <rendar> i want background tasks, i want to fire new tasks like unix shell with &
[21:29:44] <fdan> mav`rik that works but this is the output i get {'122': {'bash', '20'}, '123': {'100', 'java'}, '321': {'80', 'python'}, '856': {'perl', '44'}, '356': {'gcc', '99'}, '854': {'55', '
[21:29:44] <fdan> go'}, '294': {'12', 'df'}, '529': {'top', '01'}}
[21:30:08] <rendar> graingert[m], but i can't have a single task group for the entire console group!! because if a task raises an exception everything will cancel!
[21:30:10] <fdan> the first item i get is {'122': {'bash', '20'}.. shouldnt it be {'122': {'20', 'bash'}
[21:30:19] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[21:30:28] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:30:49] <bjs> rendar: an unhandled exception*
[21:30:51] <mav`rik> fdan: you're using sets (by using the {} parens), if order/structure is important then use () for a tuple, or [] for a list
[21:31:00] <rendar> bjs, yes
[21:31:08] <bjs> that doesn’t apply if the task catches it and handles it itself
[21:31:11] *** Quits: wolfgang (~wolfgang@101.174.6.197) (Remote host closed the connection)
[21:31:13] <fdan> fdan where am i using sets?
[21:31:22] <rendar> bjs, but the task doesn't do that
[21:31:45] <bjs> rendar: maybe it should, then your questions of taskgroup-per-command go away
[21:32:01] <bjs> if each command task handles command-related exceptions
[21:32:04] <stealth_> fdan `{y,z}` is `set` use `(y, z)`
[21:32:20] <mav`rik> fdan: the type of {y, z} is a set, I suspect you probably want either (y, z) for a tuple, or [y, z] for a list
[21:32:23] <rendar> bjs, only if catches BaseException, and what about a command raises a string? i don't want that, because a malicious code will block everything
[21:32:30] <stealth_> fdan, `set` does not maintain its position
[21:32:41] <bjs> rendar: how do you “raise a string”
[21:32:43] <rendar> bjs, you must consider that this command prompt will run whatever code the user puts into that
[21:32:50] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[21:32:53] <rendar> bjs: `raise "hello"`
[21:33:08] <bjs> rendar: have you actually tried running that
[21:33:12] <bjs> before using it as an example
[21:33:17] <stealth_> rendar, `raise ValueError('hello')`
[21:33:43] <rendar> stealth_, nope, my example is that you can raise some object that is NOT a BaseException derived class
[21:33:52] <fdan> mav`rik i dont want a tuple but i want a dictionary
[21:33:56] <bjs> rendar: but have you actually ran your example?
[21:34:04] <rendar> nope
[21:34:10] <bjs> maybe you should try
[21:34:24] <rendar> ok, TypeError: exceptions must derive from BaseException
[21:34:50] <stealth_> ^ ya
[21:34:50] <fdan> {'122': (20, 'bash')}
[21:35:02] <fdan> here 20 and bash are elements of a tuple
[21:35:05] <rendar> but another thing: my books says that catching BaseException is usually a thing you don't want: you may only want to catch errors you know, and let others you don't know to flow to the hierarchy of try/catch blocks
[21:35:06] <fdan> but i want as a dictioanry
[21:35:16] *** Joins: vats (~vats@103.70.83.191)
[21:35:33] <stealth_> fdan, `d[x] = {z: y}`
[21:35:36] <mav`rik> fdan: you said "shouldnt it be {'122': {'20', 'bash'}", do you want "{'122': {'20': 'bash'}"?
[21:35:53] <bjs> rendar: okay but this is an interpreter right? so the “arbitrary code” is another command in the language
[21:36:26] <rendar> bjs, yes, but since i don't write the arbitrary code, i don't want that a malicious function can stop the entire loop
[21:36:39] <bjs> bjs: maybe all exceptions coming -from the command language- should be their own exception type and should all be handled. a non-CommandError exception would be a bug in your code
[21:36:41] <bjs> for example
[21:36:44] <fdan> mav`rik thats fine
[21:36:51] <fdan> i want elements to be consistent
[21:36:55] <bjs> oops I meant to highlight rendar there
[21:36:57] <fdan> stealth_ isnt that not a set?
[21:37:27] <stealth_> fdan, thats a `dict`
[21:37:59] <rendar> bjs,  i already have that
[21:38:06] <stealth_> fdan, `set` = {1, 2, 3}` `dict` = {'a': 1, 'b': 2, 'c': 3}`
[21:38:11] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[21:38:15] <mav`rik> fdan: if you want a dict of dicts then you have to actually _create_ a dict, rather than a set. sets and dicts (sadly) use the same parens for construction, so as stealth_ has shown, the use of the colon : makes the construction realise that you're using key and value, rather than a sequence of values
[21:38:21] <fdan> aah got it
[21:38:44] <fdan> also how to add. a dictionary to another dictionary.. any other ways?
[21:38:56] <bjs> rendar: so then why do you want to catch BaseExceotion? just catch CommandError or whatever in each Command task
[21:39:01] *** Quits: Balzy (~Balzy@host-95-251-241-144.retail.telecomitalia.it) (Ping timeout: 252 seconds)
[21:39:04] *** Joins: Sky_Net (~Sky_Net@176.14.213.149)
[21:39:14] <bjs> there’s something I’m not getting
[21:39:29] *** Quits: eightysix (~eightysix@2600:1700:bf32:3410:182f:5fb1:c666:1474) (Quit: My iMac has gone to sleep. ZZZzzz…)
[21:39:30] *** Quits: mav`rik (~unknown@ec2-54-171-126-99.eu-west-1.compute.amazonaws.com) (Quit: leaving)
[21:39:39] *** Joins: y1n (~y1n@84-115-65-157.wifi.dynamic.surfer.at)
[21:40:03] <rendar> bjs, because if a coroutine connected to the console commands raises an unhandled exception, everything blocks!
[21:40:14] <rendar> since the user can connect whatever code he wants..
[21:40:20] <rendar> he can raise something that is not handled!
[21:40:24] *** Joins: Balzy (~Balzy@host-79-45-149-51.retail.telecomitalia.it)
[21:40:24] <rendar> and he can block the console loop
[21:40:38] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[21:40:45] <stealth_> fdan, `a = {'a': 1, 'b': 2}; b = {'c': 3}; a.update(b)`
[21:41:02] <bjs> rendar: how can he? if every Command *only* raises CommandError then how can the Command do that?
[21:41:32] <stealth_> fdan, you can also do `c = {**a, **b}` this creates a new dict
[21:41:49] <bjs> if I’m writing some script in your shell, those get turned into Command’s and executing them might generate an exception, if you just make sure the exceptions are all CommandError() exceptions or whatever then what’s the issue?
[21:41:59] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[21:42:55] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 268 seconds)
[21:43:11] *** Joins: locrian9 (~mike@99-153-255-194.lightspeed.irvnca.sbcglobal.net)
[21:44:04] <rendar> bjs, nope, the console lets you to connect coroutines to commands, so the user can connect any coroutine he writes, and since he writes that, he can add raise WhatEver
[21:45:34] <fdan> stealth_ thanks
[21:45:39] *** Quits: teut (~teut@122.162.88.202) (Quit: Connection closed)
[21:45:39] <bjs> rendar: why not, when you make a CoroWrappedCommand you automatically convert all exceptions into CommandError’s
[21:45:39] <fdan> how can i convert dict_keys([20]) <class 'dict_keys'>
[21:45:43] <fdan> 20 into integer
[21:46:02] <stealth_> any coroutine? if you have a event-manger shouldn't the event be defined
[21:46:20] <rendar> bjs, that's equivalent to catch BaseException, more or less
[21:46:22] <stealth_> fdan, `int(that_value)`
[21:46:22] <bjs> rendar: I still think that any exception coming from the command that is happening because of the “normal” command execution should be handled
[21:46:37] <orbisvicis> graingert[m], I'm not sure if signal/io will still work if moved to a child thread. Any reason not run the asyncio loop in a child thread?
[21:47:07] <bjs> rendar: yes, for those special coros only? if one fails it shouldn’t kill everything, it should just be some kind of “error” in the terminal
[21:47:25] <rendar> bjs, exactly
[21:47:41] <rendar> bjs, ok i get your point
[21:48:11] <orbisvicis> well, a good reason would be if call_soon_threadsafe didn't work in the main thread
[21:49:15] <bjs> but you wouldn’t do that for all Commands, if a normal Command raised a ValueError or something then probably the whole terminal is going to be broke.
[21:49:34] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[21:49:42] <bjs> (or a whole Console or whatever level of abstraction — that’s what your TaskGroups should be)
[21:49:59] <fdan> stealth_ any idea what i am doing wrong?
[21:50:00] <fdan> https://dpaste.org/kE4w
[21:50:25] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[21:50:29] *** Joins: fellipe (~fellipe@2804:14c:65c2:4cc0::1000)
[21:50:51] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[21:50:59] *** Joins: LuksNuke (~LuksNuke@ip-146-0-191-111.dyn.luxfibre.pt.lu)
[21:51:04] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[21:51:08] <stealth_> fdan, `.keys()` is like `[1, 2, 3, ...]` you are comparing it with `if that_list > 0:` thus error
[21:51:13] *** Joins: zebrag (~chris@user/zebrag)
[21:51:19] *** Joins: georgios (~georgios@user/georgios)
[21:51:20] *** Quits: j0be_ (~j0be@user/j0be) (Ping timeout: 250 seconds)
[21:51:37] *** Quits: LuksNuke (~LuksNuke@ip-146-0-191-111.dyn.luxfibre.pt.lu) (Remote host closed the connection)
[21:51:38] <fdan> i see. what would be the solution
[21:52:25] <fellipe> Hi everyone, how to convert the string 45.000.00 to float?
[21:52:46] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[21:52:48] <Repiphany> Don't use . as a thousands separator
[21:53:15] <stealth_> fdan, maybe another for loop inside the first for loop, to compare?
[21:53:22] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[21:53:47] <fellipe> Repiphany how would be the correct format?
[21:54:18] <Repiphany> You can use _ as a separator if you really want
[21:54:53] <fellipe> Repiphany I'm trying to convert pt_BR currency to float
[21:55:01] *** Joins: LuksNuke (~LuksNuke@ip-146-0-191-111.dyn.luxfibre.pt.lu)
[21:55:18] *** Joins: singularity00 (~singulari@85.187.64.126.client.entry.bg)
[21:55:55] <graingert[m]> <orbisvicis> "graingert, I'm not sure if..." <- For signal handling!
[21:56:10] <stealth_> fdan, https://dpaste.org/iEJb
[21:56:15] <graingert[m]> What signals are you handling on the non event loop thread?
[21:56:27] <graingert[m]> Handle them with asyncio instead
[21:56:51] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 276 seconds)
[21:57:26] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[21:57:42] <stealth_> fdan, i just made that up, so adapt it to your problem.
[21:57:57] *** Quits: y1n (~y1n@84-115-65-157.wifi.dynamic.surfer.at) (Ping timeout: 265 seconds)
[21:58:07] <fdan> yes i have this https://dpaste.org/LMY9
[21:58:23] <fdan> how can i print 123 as well
[21:58:31] <graingert[m]> https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.loop.add_signal_handler
[21:59:25] <stealth_> fdan, look at that example i posted again, its in there
[22:01:29] <fdan> for example 123 is the process id that consumes most cpu, i want to print 123 as well
[22:01:30] <fdan> https://dpaste.org/oqVp
[22:01:52] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[22:02:31] *** Quits: loworder1it (~dave@s0106e81cba1736ea.ss.shawcable.net) (Ping timeout: 252 seconds)
[22:03:49] *** Quits: runelind (~runelind@user/runelind) (Quit: ZNC 1.8.2 - https://znc.in)
[22:04:27] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (Read error: Connection reset by peer)
[22:04:37] *** Quits: singularity00 (~singulari@85.187.64.126.client.entry.bg) (Quit: The true sign of intelligence is not knowledge but imagination.)
[22:04:38] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[22:04:54] *** Joins: singularity00 (~singulari@85.187.64.126.client.entry.bg)
[22:05:05] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[22:05:09] <fdan> nvm got it
[22:05:28] *** Quits: fellipe (~fellipe@2804:14c:65c2:4cc0::1000) (Quit: Client closed)
[22:05:46] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[22:05:50] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[22:06:10] <orbisvicis> graingert[m], true, but is there any technical reason the async loop needs to run in the main thread?
[22:06:44] <stealth_> fdan, are you using psutils by any chance?
[22:06:52] <fdan> no i am not
[22:06:52] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[22:07:03] *** Joins: runelind (~runelind@user/runelind)
[22:07:06] *** Joins: j0be (~j0be@user/j0be)
[22:07:08] *** Quits: shlomif (~shlomif@87.68.240.100.adsl.012.net.il) (Ping timeout: 265 seconds)
[22:07:27] <graingert[m]> orbisvicis: mainly because asyncio needs to be to handle signals, eg for subprocess support
[22:07:31] <stealth_> fdan, that might already do what you want
[22:07:32] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[22:07:39] <graingert[m]> * mainly because asyncio needs to be able to handle signals, eg for subprocess support
[22:07:41] <fdan> aah
[22:07:48] <orbisvicis> graingert[m], ahh ok
[22:07:56] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:08:16] *** Joins: srhm (~srhm@user/srhm)
[22:08:18] *** Joins: reset (~reset@user/reset)
[22:08:48] *** Joins: skali (~skali@46.191.137.79)
[22:10:07] *** Quits: R0b0t1 (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net) (Quit: WeeChat 3.3-dev)
[22:10:21] *** Joins: R0b0t1 (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net)
[22:11:18] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[22:11:54] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[22:12:02] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 260 seconds)
[22:12:22] *** Joins: adder (~adder@user/adder)
[22:13:49] <orbisvicis> since there is less refactoring, I can just do: In child thread, passing the main thread loop => loop.run_until_complete() => event.set(). In the main thread: loop.call_soon_threadsafe(event.set)
[22:13:59] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[22:14:00] <orbisvicis> and in the future rewrite the main thread to use asyncio
[22:15:30] *** Joins: mdemo (~mdemo@c-73-40-53-74.hsd1.wv.comcast.net)
[22:17:25] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[22:18:10] *** mozgalom is now known as bomb-on
[22:18:34] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[22:18:35] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:18:57] *** Quits: brylie (~Thunderbi@81-197-199-179.elisa-laajakaista.fi) (Quit: brylie)
[22:19:28] *** skali is now known as skali_
[22:19:28] *** Quits: skali_ (~skali@46.191.137.79) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:19:36] *** Quits: Rain4 (~Rain@li958-238.members.linode.com) (Quit: The Lounge - https://thelounge.chat)
[22:20:40] *** Quits: Deneb (~johnch@86.111.189.80.dyn.plus.net) (Quit: Leaving)
[22:21:32] *** Joins: skali (~skali@46.191.137.79)
[22:21:56] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[22:22:28] *** Joins: Rain4 (~Rain@li958-238.members.linode.com)
[22:22:51] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[22:23:03] <veegee> Is there any clean way to map JSON data to and from objects? In Go, you have struct annotations which specify the JSON field name so the serializer/deserializer knows how to map data
[22:23:31] <veegee> Because if in every request handler I need to return a JSON response, I need to deep copy my template response dict
[22:23:55] <veegee> That doesn't feel right, having to deep copy my global response dict and modify the specific parts
[22:24:45] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[22:24:49] <veegee> It would be much nicer to have my data model as a class and be able to properly serialize/deserialize create new instances of it in each request handler
[22:24:52] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[22:25:13] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[22:26:02] *** Quits: skali (~skali@46.191.137.79) (Ping timeout: 260 seconds)
[22:26:30] <veegee> While also naturally supporting nested classes which also serialize/deserialize naturally
[22:27:53] *** Quits: magga (magga@ti0036a400-1042.bb.online.no) (Remote host closed the connection)
[22:28:10] <space-ghost> https://realpython.com/python-json/
[22:28:17] <space-ghost> have you read this link veegee, it might contain what you need
[22:28:51] <space-ghost> it seems to me to be a simple matter to load (de) or serialize python objects to json
[22:29:13] <space-ghost> are you saying the fields have different names and you want some kind of 'mapping' functionality
[22:29:29] *** Joins: vimart (~vimart@239.218-30-62.static.virginmediabusiness.co.uk)
[22:30:02] *** bomb-on is now known as le_koober
[22:30:19] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[22:30:45] *** Joins: Elodin (~weechat@user/elodin)
[22:30:46] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[22:31:56] *** Joins: briian (uid321220@id-321220.uxbridge.irccloud.com)
[22:32:29] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Quit: Leaving)
[22:33:16] *** Quits: pycode (~pycode@2001:b07:5d28:551:5b41:887:1a7b:6952) (Ping timeout: 268 seconds)
[22:33:40] *** Quits: fdan (~fdan@192.146.154.3) (Quit: Client closed)
[22:34:22] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[22:35:10] <cluelessperson> veegee, what do you mean map?
[22:35:25] <cluelessperson> I think you're describing object serialization
[22:35:37] <veegee> That's one part, yes
[22:35:42] <control> is it possible to read 100mb text file contents into memory and go through it looking for containing string?
[22:36:16] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[22:36:33] <control> couse currently it goes all over the loop by opening file and decreases the speed
[22:36:45] <veegee> Right now, I have a template dict with some nested data and several fields. So in each response handler, I deep copy that dict, modify the specific section pertaining to the specific request handler, then send the response
[22:36:51] *** Joins: goatish (~geclark@19.60.188.35.bc.googleusercontent.com)
[22:37:01] <veegee> That feels kind of awkward though, having to deep copy a response dict in every response handler
[22:37:15] <veegee> I feel like there should be a better, more standard way
[22:37:36] <veegee> Like instantiating a class and serializing that
[22:38:07] <veegee> I know about __dict__ and all that, I've used python for more than a decade, but I've written application servers in Go mostly
[22:38:10] *** Joins: Betal (~Betal@user/betal)
[22:38:26] <veegee> In Go, you just instantiate your struct in the response handler and serialize that
[22:38:58] <sco1> Why a dictionary over a class?
[22:39:22] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[22:41:28] *** Joins: Julian (~tos9@python/site-packages/Julian)
[22:41:34] *** Joins: Atque (~Atque@user/atque)
[22:45:01] *** Joins: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net)
[22:46:25] <bilb_ono> is there a way to do something like this? https://bpa.st/OKMA. I have a bunch of objects and I am trying to build a default state out of them. Each one has a different format for its contribution to the default state. But I don’t know how to reference that in a dictionary constructor. You can’t do what I am doing on lines 5 and 11 right. but isnt that what would go in the dictionary constructor?
[22:46:47] <bilb_ono> oh wait 1 sec
[22:47:41] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[22:47:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[22:48:10] <bilb_ono> ok updated it. https://bpa.st/AKFQ same question
[22:48:19] <lxer> veegaa, your question doesnt make much sense. ofc it depends on the model, how you serialize it, etc. And what do you mean by 'copy template response dict' or 'global response'?
[22:48:35] <bilb_ono> and added ( ) around the things but its stil a syntax error
[22:49:15] *** Joins: wyclif (~wyclif@user/wyclif)
[22:49:34] *** Quits: NeoCore (~neocore@93.177.75.188) (Quit: Leaving)
[22:49:38] *** Joins: cdown (~cdown@194.207.141.245)
[22:50:09] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[22:50:18] <orbisvicis> graingert[m], what about shared locks between asyncio/threads?
[22:50:31] *** Quits: adder (~adder@user/adder) (Quit: Leaving)
[22:54:02] <lxer> bilb_ono: you come from a different language right?
[22:54:53] <bilb_ono> Ive been doing python a while but yeah never used staticmethods and class variables - always instance stuff until now
[22:55:12] <bilb_ono> for this particular thing Im making, storing a bunch of data in a class is really useful though.
[22:55:44] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[22:55:50] <lxer> don't use staticmethods. there is almost no reason to use them.
[22:56:34] <rama> bilb_ono: https://bpa.st/Q3FA
[22:56:37] <bilb_ono> what I pasted was a minimum example but the actual thing is each of the classes are fetch objects. each fetch object refers to a different api endpoint and keeps track of its own state - how many of the items at that api endpoing have been fetched, what the replication field could be, etc
[22:57:13] <graingert[m]> <orbisvicis> "graingert, what about shared..." <- You can use an asyncio.Lock
[22:57:14] <rama> not sure if this is what you were looking for, but i think your idea of `states` is kinda messed up
[22:57:24] *** Joins: ExeciN (~ExeciN@user/nicexe)
[22:57:26] <bilb_ono> lxer: what if I don’t want to have to instantiate the class before accessing the attributes
[22:57:34] <graingert[m]> And use run_coroutine_threadsafe or anyio.from_thread.run
[22:57:41] <rama> why even have a default state? just use a constructor...
[22:58:08] <bilb_ono> rama: the state I am referring to comes from this https://github.com/singer-io Im trying to make a “tap” with singer
[22:58:30] <bilb_ono> so the overall state for the tap is constructed from contributions with each of the various fetch objects
[22:58:34] <lxer> bilb_ono: classmethods. But the real question is why use a class in such a situation ?
[22:58:36] <bilb_ono> customers, invoices, etc
[22:58:55] <graingert[m]> <orbisvicis> "graingert, what about shared..." <- Not sure why you'd need a lock though just run small chunks of sync code
[22:59:20] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[22:59:40] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[22:59:54] *** Joins: wolfgang (~wolfgang@101.174.6.197)
[23:00:12] *** Joins: wyclif (~wyclif@user/wyclif)
[23:00:12] <lxer> bilb_ono: why not just use __init__ and instantiate?
[23:00:28] <bilb_ono> lxer: I am storing basically configuration in the class. For instance, some api endpoints are location specific. It has to run a fetch for each location. Others arent. So one of the attributes I would like to be a class method is whether this fetch object is “location specific” or not?
[23:00:37] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[23:01:01] *** Quits: le_koober (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: SO LONG SUCKERS!)
[23:01:41] <bilb_ono> lxer: should I need to instatiate the object just to determine if its gonna be a location specific endpoint?
[23:01:48] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[23:01:50] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[23:02:08] <bilb_ono> I guess what I really need is like a data structure - a collection of attributes and endpoint strings, etc
[23:02:30] <bilb_ono> Im basically just using this class to store the functions associated with each endpoint
[23:02:32] <orbisvicis> graingert[m]: is that asyncio.Lock with call_soon_threadsafe in the non-asyncio thread?
[23:02:53] *** Joins: magla (~gelignite@55d43f3e.access.ecotel.net)
[23:03:02] <orbisvicis> graingert[m], one thread is the main sync program, the other an asyncio control server
[23:03:06] *** Quits: dvx (~dvx@185.63.97.64) (Remote host closed the connection)
[23:03:08] <graingert[m]> orbisvicis: run_coroutine_threadsafe
[23:03:23] <stealth_> orbatos[m], asyncio.Lock != thread lock
[23:04:00] <bilb_ono> I could also put all of those variables in a file associated with the object. so use the file as the “fetch object” instead
[23:05:03] <lxer> or a dictionary?
[23:05:16] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[23:05:37] *** Quits: cdown (~cdown@194.207.141.245) (Ping timeout: 265 seconds)
[23:05:46] *** Joins: wyclif (~wyclif@user/wyclif)
[23:05:50] <bilb_ono> yeah. I find it hard to keep track when the dictioanry gets too big
[23:05:52] <bilb_ono> but maybe that
[23:06:13] *** Joins: rapier (~marcos@170.233.159.1)
[23:06:20] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:06:35] *** Quits: locrian9 (~mike@99-153-255-194.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 265 seconds)
[23:07:01] *** Quits: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC) (Ping timeout: 252 seconds)
[23:07:22] <lxer> perhaps NemdTuple + default value
[23:07:25] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[23:07:31] <rapier>  /join #javascript
[23:07:40] <lxer> (or dataclasses)
[23:07:42] <rapier> i'm so sorry
[23:07:50] <bilb_ono> also I hate doing object[‘thing’] rather than object.thing
[23:07:56] *** Quits: rsx (~dummy@ppp-188-174-153-247.dynamic.mnet-online.de) (Quit: rsx)
[23:08:22] <bilb_ono> yeah I was reading about dataclasses. maybe ill try that
[23:08:51] <orbisvicis> ah, asyncio.Event.set is not a coroutine
[23:08:51] <foo> I'm expecting f=None; while f is not None: print("hi") - to be an infinite loop, but it's not. Can someone explain this?
[23:09:13] <lxer> bilb_ono: what it adds is the __init__ function, what is missing from your code
[23:09:25] <lxer> *in
[23:09:32] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[23:09:33] *** Joins: fikran (~fikran@user/fikran)
[23:09:36] <phy1729> foo: while f is None  (note the missing not)
[23:09:43] <bilb_ono> lxer: so does that allow me to do classmethods? or class variables?
[23:09:49] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[23:10:04] <foo> phy1729: facepalm. Is there an undo button here so this doesn't get associated with my list of dumb questions? :) Thank you.
[23:10:43] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Read error: Connection reset by peer)
[23:10:51] <anddam> foo: luckily there's no "undo" on IRC
[23:11:06] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[23:11:19] <foo> anddam: it would have helped my self-confidence if you said "luckily there's no dumb question on IRC" ... but perhaps I'm being idealistic. :P
[23:11:34] *** Joins: wyclif (~wyclif@user/wyclif)
[23:11:54] *** Quits: vats (~vats@103.70.83.191) (Ping timeout: 265 seconds)
[23:12:11] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[23:12:32] *** Quits: vimart (~vimart@239.218-30-62.static.virginmediabusiness.co.uk) (Quit: WeeChat 2.8)
[23:13:01] *** Quits: daoudr_ (~daoudr@178.197.217.245) (Remote host closed the connection)
[23:15:10] <control> what is wrong with this code? https://bpa.st/VZ4A ? its just keeps reading only the first line of the database
[23:16:22] <foo> Hmm, pretty sure asyncio.sleep(5) didn't sleep. I probably need await asyncio.sleep(5)
[23:16:28] <foo> I want to pause my script for 5 seconds
[23:16:39] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[23:17:05] <rama> control: https://docs.python.org/3/library/mmap.html#mmap.mmap.readline
[23:17:06] *** Joins: wyclif (~wyclif@user/wyclif)
[23:17:15] <lxer> bilb_ono: tbh, I don't undertand what you try to do
[23:17:39] <control> how can i go through all lines?
[23:17:47] *** Parts: ham5urg (~ham5urg@p200300d167414700ae675dfffe1eec6d.dip0.t-ipconnect.de) (Leaving)
[23:20:24] <lxer> is it just a file?
[23:20:31] *** Joins: sandb0y (pirate@user/sandb0y)
[23:21:27] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[23:21:35] *** Joins: califax (~califax@user/califx)
[23:21:50] <ramblebamble> A/quit
[23:21:52] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: WeeChat 3.2)
[23:22:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[23:22:37] *** Joins: wyclif (~wyclif@user/wyclif)
[23:23:08] <lxer> control:   for line in f:
[23:23:50] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 268 seconds)
[23:24:10] *** Quits: pro_z (~pro_z@37.214.66.151) (Ping timeout: 240 seconds)
[23:25:47] <anddam> how does this kind of shot get its way into pypi?
[23:25:56] <anddam> https://pypi.org/project/recursive_package
[23:26:51] *** Joins: Julian (~tos9@python/site-packages/Julian)
[23:27:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[23:27:51] <anddam> its homepage is "https://github.com" the author is randomguy@microsoft.com, the tarball has sourcecode that does nothing apart pulling sklearn "flit_callable" running flit_callable.flit_callable_foo
[23:28:07] *** Joins: wyclif (~wyclif@user/wyclif)
[23:28:37] <sco1> It's not like there's a gate
[23:31:19] *** Joins: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263)
[23:33:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[23:33:26] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[23:33:39] *** Joins: wyclif (~wyclif@user/wyclif)
[23:34:57] *** Quits: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net) (Quit: See you on the flip side.)
[23:36:04] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[23:36:57] <bilb_ono> lxer: you see here: https://github.com/singer-io/tap-adroll/blob/138fc92dc4fb17c4b9446a3cf998b34b288b3e4a/tap_adroll/streams.py how they are using the classes to store the attributes of that object like the endpoint, stream_id, etc.
[23:37:06] <bilb_ono> I was trying to do that with staticmethods
[23:37:33] *** Joins: greedom (~greedom@2001:16b8:2e0f:a200:1ea4:5b9f:ffc0:3d20)
[23:37:55] <bilb_ono> it sounds like thats basically a dataclass?
[23:38:13] <bilb_ono> Im not sure yet whether you must instantiate the dataclass in order to access its variables though
[23:38:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[23:39:04] *** Quits: LuksNuke (~LuksNuke@ip-146-0-191-111.dyn.luxfibre.pt.lu) (Remote host closed the connection)
[23:39:11] *** Joins: wyclif (~wyclif@user/wyclif)
[23:39:38] *** Quits: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263) (Quit: WeeChat 3.2)
[23:39:51] *** Joins: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263)
[23:40:14] *** Joins: eightysix (~eightysix@71-147-46-132.lightspeed.livnmi.sbcglobal.net)
[23:40:54] *** Quits: fabs (~fabs@2607:fb60:2501:2805:dea6:32ff:fed8:2af3) (Read error: Connection reset by peer)
[23:41:27] <skylite> can I reference the class itself in a class variable?
[23:42:26] <anddam> skylite: in a method or classmethod you could access it via the first argument
[23:42:59] <skylite> that one is clear but I can't find a way to access it when declaring a class variable
[23:43:07] <skylite> the class name is not defined there
[23:43:15] *** Joins: Pickchea (~private@user/pickchea)
[23:46:42] <eblip> hey what is the directory /__pycache__ and who created it
[23:47:17] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[23:47:32] <sco1> https://www.python.org/dev/peps/pep-3147/
[23:47:44] <grym> eblip: the interpreter created it when you ran your code.
[23:47:54] <grym> eblip: you can ignore it; it should not be versioned
[23:48:03] <eblip> ah ok ..can i delete it grym
[23:48:13] <grym> eblip: sure, but it'll come back every time
[23:48:20] <eblip> ah thanks for the explanation
[23:49:20] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[23:49:37] <lxer> bilb_ono: just learn how to use class attributes
[23:49:54] <lxer> https://docs.python.org/3/tutorial/classes.html#class-objects
[23:49:57] <bilb_ono> lxer: rather than classmethods?
[23:50:10] *** Joins: wyclif (~wyclif@user/wyclif)
[23:51:55] *** Joins: Atque (~Atque@user/atque)
[23:52:38] *** Joins: skali (~skali@46.191.137.79)
[23:54:11] <lxer> I have no idea what you're asking
[23:54:33] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[23:55:24] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[23:55:42] *** Joins: wyclif (~wyclif@user/wyclif)
[23:55:50] *** Quits: fengshaun (~fengshaun@S010680615f0c2c0a.cg.shawcable.net) (Quit: bibi!)
[23:56:44] *** Quits: singularity00 (~singulari@85.187.64.126.client.entry.bg) (Ping timeout: 268 seconds)
[23:57:21] *** Quits: skali (~skali@46.191.137.79) (Ping timeout: 268 seconds)
[23:59:34] *** Quits: EgonX (~EgonX@2601:2c6:47f:9c18:7cea:9f56:123b:7cd2) (Quit: Textual IRC Client: www.textualapp.com)
