[00:00:05] * gilberth still likes XaW and wonders when that look will get chic again.
[00:00:07] <aeth> no offense to the OpenBSD or Solaris people here
[00:00:14] <aeth> but working everywhere isn't too important
[00:00:35] <aeth> it's unlikely to actually work, anyway, unless you have a machine with that niche OS to test on
[00:01:40] <gilberth> And I never liked the Motif-look. Don't ask me why I imitated that look with McCLIM.
[00:02:11] <aeth> the Win 9x look (as seen in Win 2k) is what I'd copy
[00:02:26] <aeth> I guess people didn't copy it too much back in the day because they were afraid of Microsoft's lawyers and these days it's out of style
[00:02:45] <gilberth> Well, Win 9x is a copy of the Motif look.
[00:02:53] <aeth> the Win 9x look makes 90s Unix UIs look really cheap and amateur imo
[00:03:06] <aeth> especially Motif
[00:03:24] <aeth> Motif looks more Win 3.x
[00:03:37] <aeth> maybe even like a non-tiling Win 1.x/2.x
[00:03:57] <aeth> this sort of thing looked outdated even in the late 90s. https://upload.wikimedia.org/wikipedia/commons/4/44/Debian_Motif_MWM_Default.png
[00:04:20] <aeth> thick edges, cryptic icons, not a lot of color
[00:04:29] <aeth> strangely, if you replace the gray with white, it looks more modern because modern is minimalist
[00:04:36] <aeth> for the vector-style icons, anyway.
[00:04:55] <aeth> the lack of color made them look cheap back in the day, but the vectorness makes them look less cheap than the contemporary Windows icons now
[00:05:11] <gilberth> Nah, I don't believe so. Begins with that dialog background were white with Win 3.1 and not with Motif.
[00:06:29] <gilberth> With Win 3.1 text input fields have no 3d-ish border. They have with Motif.
[00:07:00] <aeth> https://upload.wikimedia.org/wikipedia/en/c/c6/Windows_2000_Server.png
[00:07:18] <aeth> ignore that it's scaled down for fair use
[00:07:23] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Quit: Leaving)
[00:07:26] <aeth> that just... looks so much better than today's UIs
[00:07:35] <aeth> you can tell that buttons are buttons. There's some nice, crisp 3Dish
[00:07:44] <aeth> but what I really, really like from the Win 9x style is the scroll bar
[00:08:04] <aeth> every other scroll bar I've ever seen, including all of the modern ones, look awful and are less accessible (usually with no buttons at all these days)
[00:08:22] <selwyn> the fake vaporwave windows aesthetic gets me https://i.ytimg.com/vi/gxRHaEwztk0/maxresdefault.jpg
[00:08:23] <aeth> you can see it here. https://upload.wikimedia.org/wikipedia/en/8/8c/Windows_2000_Explorer.png
[00:08:47] <selwyn> i have native scrollbars on my windows emacs but they seem to get in the way some how
[00:08:54] <aeth> I think there were some variations (maybe Win XP classic theme? or application-specific like Office?) that had more than two buttons on the scroll bar, too
[00:09:11] <aeth> selwyn: I disable scroll bars and menu bars in Emacs
[00:09:21] <aeth> It just... makes a lot more sense as just a buffer of text imo
[00:09:30] <selwyn> mm
[00:09:34] <gilberth> I don't want to have any buttons at scroll bars. And I want them on the left-hand side. (There is an option in McCLIM to do that). I like the Xaw scrollbars also for their behaviour.
[00:09:43] <aeth> you do lose some usability by only seeing the percentage rather than a visual progress indicator, which also gives you the size of the file
[00:09:55] <aeth> I don't like LHS scroll bars
[00:10:30] <aeth> maybe because they're easier to ignore (until you need them) when they're on the right
[00:10:57] <aeth> maybe would make sense if you're using an RTL language
[00:11:09] <aeth> so you do need to support it for that use case, anyway
[00:21:14] <Alfr> aeth, compromise? Place them right in the middle?
[00:23:47] <aeth> Alfr: that's almost as bad as putting the Start Button in the middle
[00:23:58] <aeth> basic UI design says you need to care about edges and corners
[00:24:04] <gilberth> aeth: What do you mean by a visual progress indicator? Xaw scrollbars are proportional in size.
[00:24:05] <aeth> so it's easier to target quickly
[00:24:46] <gilberth> And I can consitently click anywhere with Mouse-M to scroll to that relative position without needing to grab the scrollbar.
[00:24:51] <aeth> gilberth: I mean that if you turn off the scroll bars in Emacs, you lose some information. You can still see how far you are as a percent (but not visually)... but that doesn't also tell you how large the document is, too
[00:25:05] <Alfr> aeth, I never said it's in anyway good, but this way none of you two will be at an disadvantage. :)
[00:25:06] <aeth> I suppose you could combine that with the current line number, which Emacs also tells you, but nobody's doing the math in their head for that
[00:25:39] <kakuhen> i dislike the trend of rounded window corners because it makes snapshots of windows harder to do; i dont mind the title bar with rounded corners, but the frame of the window should be rectangular
[00:26:01] <gilberth> Well, with Emacs I like scrollbars turned off. I am not interested in that information with regard a source file. This is a different story with documents, web pages, etc.
[00:26:23] <aeth> yes
[00:26:56] <gilberth> And I like the scrollbar left, because we write left to right and thus my eyes, when scrolling in search for a spot or header, do need to jump less back and forth.
[00:28:38] <selwyn> return to βουστροφηδόν
[00:29:08] <gilberth> So much for UNIX versus Win 3.1. Drag-scrolling with the mouse button depressed and the scrollbar and document just following was standard with X11, not so with Win 3.1. Same for window movement, opaque move was an option with twm while with Win 3.1 you moved a wire-frame.
[00:30:54] <gilberth> At these days, X11 was snappier than Win 3.1. The latter seemed primitive in comparision.
[00:32:11] <aeth> Windows 95 was when Windows won
[00:32:23] <aeth> although it did get refined a few times, and probably peaked at either 2k or the classic mode of XP, as I said earlier
[00:33:05] <gilberth> I can't tell. I steered clear of Windows as best as I could.
[00:37:21] <shka> https://youtu.be/lYvQNon4aLg
[00:37:23] <gilberth> Actually Win 3.1 is the newest Windows, I actually used for more than launching games.
[00:37:44] <shka> didn't knew about the state of Colorado river
[00:37:52] <aeth> XP was the last Windows I used as my main OS, although my old laptop dual booted Vista and Fedora until the Vista partition broke
[00:38:59] *** Joins: ixelp (~ixelp@p5b157756.dip0.t-ipconnect.de)
[00:38:59] *** ChanServ sets mode: +o ixelp
[00:39:18] <gilberth> I never used Windows as my main OS.
[00:40:29] <gilberth> I had a copy of XENIX for my 386 and ported X11 to it. This was before Linux existed.
[00:40:40] <selwyn> when was the last time you used it
[00:41:22] <aeth> Linux was problematic to use until the 2010s
[00:41:37] <aeth> I suppose commercial Unixes that came with their own workstations wouldn't have as many issues with compatibility
[00:41:46] <aeth> you'd just shift the issue to software compatibility issues, though
[00:41:50] <gilberth> Problematic? No.
[00:42:00] <aeth> I say this as someone who switched to desktop Linux around 2006
[00:42:03] <aeth> yes, it was problematic
[00:42:20] <gilberth> selwyn: Windows? Must have been '93 or so.
[00:42:54] <aeth> the final desktop usability issues didn't get fixed until Valve (mostly) fixed them in 2013 with their Steam-for-Linux effort.
[00:43:04] <aeth> although Canonical fixed most of them (even if you never used Ubuntu or their Unity DE)
[00:43:10] <gilberth> aeth: What was problematic with Linux? I'd say the reverse is true, it became problematic with Gnome. I won't use that or KDE. What for?
[00:43:21] <aeth> s/fixed most of them/fixed most of them by 2008/
[00:44:31] <aeth> gilberth: (1) the software wasn't there until HTML5 (and only then if you prefer browser apps), (2) graphics drivers were problematic until 2013+ when Valve made graphics vendors start caring
[00:44:49] <aeth> (3) random hardware compatibility issues mattered more before things consolidated, especially behind USB, sometime in the later '00s
[00:44:52] <drakonis> is it weird that gcl has such an extensive documentation manual for the entire language?
[00:44:58] <drakonis> its usable.
[00:45:07] <aeth> (4) CD/DVD DRM was an issue for a while and probably still is with Blu-Ray (and streaming video!).
[00:45:39] <aeth> (5) you couldn't really trust OS upgrades not to break things until the early '10s, when it became rare (at least with Fedora... I think the last time something broke was when they moved everything into /usr)
[00:45:53] <aeth> (they then turned /bin, etc., into symlinks)
[00:46:14] *** Joins: v3ga (~v3ga@2603-6080-5204-3b35-0000-0000-0000-18ad.res6.spectrum.com)
[00:46:37] <drakonis> i generated a pdf with gcl's current documentation and dear god it has 1133 pages
[00:46:44] <aeth> In the '90s, you gave up a lot for Unix/Linux, especially in the brief era in the mid 90s when everything was on CDs (Encarta, not Wikipedia) before the web took over the world
[00:47:03] <aeth> In the '00s, you still did, especially in the IE6 monopoly era. You didn't even have the web unless it supported Mozilla Suite
[00:47:06] <aeth> (pre-Firefox)
[00:47:17] <gilberth> Funny, my Nvidia drivers were fine, my Emacs was fine, my Netscape was fine, and Lisp was happy. All the time. Never had issues with CD-ROM drives.
[00:47:32] <aeth> DVDs were an issue for a while.
[00:47:56] <aeth> CD-ROMs weren't really an issue because the software never supported your OS in the first place (-:
[00:48:09] <aeth> music CDs sometimes had DRM, which was controversial back then
[00:48:55] <selwyn> shka: the colorado river is alive even in fallout new vegas
[00:48:57] <selwyn> bit ominous that
[00:49:07] <aeth> these days, you can probably pull up wine or DOSBOX or, worst case scenario, a legacy Windows VM... and run the old CD-ROM software better than modern Windows
[00:49:09] <MichaelRaskin> Happy times when Russinovich called Sony's DRM malware (for good reasons) and the accusation actually stuck
[00:49:27] <aeth> MichaelRaskin: right, these days, most popular MP video games have similar rootkit level malware, but nobody cares
[00:49:45] <aeth> those are generally the only Windows games you can't run under Linux
[00:49:49] <aeth> they'll block both wine and VMs
[00:50:03] <gilberth> Well, you name problems, that I never experienced. And I say the reverse is true, with time Linux became more troublesome not better. As with all software.
[00:50:07] <aeth> all because gamedevs can't do proper network programming (only trust the server, not the client)
[00:50:12] <drakonis> there's work on wine and linux to let you run these
[00:50:15] <MichaelRaskin> I mean, by the standards of 2005, Google Chrome is malicious spyware, not space for doubts, really
[00:50:15] <drakonis> but not the rootkits
[00:50:25] <drakonis> thanks valve.
[00:50:58] <aeth> MichaelRaskin: by the standards of 2005, Google Chrome is malicious because we're back to the IE6 monopoly stagnation era, with the main difference that Google forces through its Chrome design documents as web standards before (or after!) implementing them
[00:51:01] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:fd9c:24e7:5ea:6f47) (Ping timeout: 240 seconds)
[00:51:50] <MichaelRaskin> That's monopoly abuse, which is true and not new; spyware status is a degradation.
[00:52:04] <gilberth> Well, you seem to complain that Windows software doesn't run with Linux. Or sth similar. When you want Windows, use Windows. But I am odd. I do not want or need some desktop environment for instance.
[00:52:25] <aeth> MichaelRaskin: Microsoft would have done the same with IE had they not focused on Silverlight for the similar role (to also keep people on Windows)
[00:52:44] <aeth> circa 2009 or so, lots of Flash videos also required Silverlight, just for the DRM, which prevented other OSes from running the video even when they otherwise could have
[00:53:05] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:58c5:6207:2988:1b06)
[00:53:17] <MichaelRaskin> Well, Windows 10 overall is probably spyware by 2005 standards, regardless of whether IE is used
[00:53:27] <drakonis> 11 is even worse in that regard
[00:53:55] <aeth> MichaelRaskin: they started with XP, though, so it's not surprising. Maybe the last SP
[00:54:15] <aeth> the whole "your OS is unlicensed even if it's licensed and it's a false positive; now let's ruin your desktop background" thing
[00:54:22] <aeth> happened to my XP VM eventually :-)
[00:55:20] <MichaelRaskin> Yeah, WG«A»
[00:56:00] <aeth> once they started that, everything else is just an iteration on the same concept
[00:57:57] <aeth> the thing that would surprise someone from 2005 is that Google is evil, uncool, and with terrible search results
[00:58:10] <aeth> pretty much everyone who wasn't obsessed with privacy loved Google in 2005
[00:59:25] <MichaelRaskin> To be fair, in 2005 Google was a bit better at being selfish only with pretty understandable motivations, less of the inscrutable evil impression of nowadays
[00:59:37] *** Quits: shka (~herr@109.231.0.226) (Ping timeout: 256 seconds)
[00:59:54] <aeth> well, Google back then was basically just a place where everything was $0 and they actually cared about niche OSes like Linux
[01:01:25] <MichaelRaskin> 2005 was probably even before Google breaking explicit promises to antimonopoly regulators
[01:01:30] <aeth> of course, their inability to make money outside of advertising (which has to get more annoying and indistinguishable from content over time because of "ad blindness" as people subconsciously adapt to the current level of annoyance) and their unwillingness to have a real human involved in almost any process (leading to quite a few false positives that became more "evil" over time as its monopoly positions 
[01:01:36] <aeth> increased in places like streaming video) were fairly clear back then
[01:02:14] <selwyn> the clue was that if you have to remind yourself 'don't be evil' you may not be good
[01:02:26] <aeth> once Google stopped exclusively doing those text banner ads that tried to somewhat blend into the theme of the website, the writing was on the wall for its ad business being evil
[01:02:39] <aeth> which they already were doing in the late '00s
[01:03:27] <aeth> and 'relevant ads' created a culture of paranoia because non-technical people seem to think that the only way that ads can be creepy relevant is if it's listening to them through their mic even though that sort of thing is way, way harder than things like smartphone location tracking
[01:03:48] <MichaelRaskin> Well, _late_ 2000's include their breaking commitments on treatment of DoubleClick
[01:03:54] <aeth> right
[01:03:58] <aeth> that was the first domino, probably
[01:05:25] <drakonis> lol oops, gcl just uses the cl spec in texinfo form
[01:05:39] <drakonis> what a bummer
[01:05:45] <aeth> you can only be so ethical if you're The Ad Company, especially if the premise of your ads requires widespread tracking (rather than just matching the content of the current site).
[01:05:47] <drakonis> but then, it sgood.
[01:06:14] <aeth> to be fair, though, Google could be way worse, especially if they banned people who used adblockers
[01:06:19] <MichaelRaskin> Switching from «relevant-for-the-request» to «relevant-to-the-user» was an impressive act of burning the commons towards all three counterparty sides
[01:06:21] <aeth> imagine getting banned from Gmail, YouTube, etc.
[01:06:47] <aeth> you can't even view some YouTube videos without logging in and some of the workarounds for that no longer work, unfortunately.
[01:06:47] <MichaelRaskin> Loook, I have actually got a «banned in Google Search» screen
[01:06:59] <aeth> it's annoying to have one video flagged as mature in a 20 part series. At that point, I'm not going to not watch it
[01:07:07] <aeth> so then I have to use it logged in but with watch history paused
[01:07:16] <aeth> because I'm out of workarounds that used to work
[01:07:30] <aeth> of course, it's all automated, so it's not any more mature than the other videos in the series
[01:07:42] <aeth> (and even if they had human review, complaining would flag all of them)
[01:07:43] <MichaelRaskin> Whenever I tried to create a Google account and actually use it, it got banned
[01:07:59] <aeth> probably because you block too much tracking
[01:08:41] <MichaelRaskin> And have cookies auto-nuked in numerous and interesting ways
[01:08:41] <aeth> when I use Firefox Account Containers, I have to actually answer captchas (which have been easier for machines than for humans for 5+ years) because there are two internets: the internet for those currently logged into a Google account and the internet for those who aren't
[01:09:12] <MichaelRaskin> Yeah, and ReCaptcha has an actually evil mode.
[01:09:27] <aeth> Google's captchas are, of course, micro-slave-labor in a very literal sense because you're doing unpaid work for one of the world's largest corporations for a few minutes (probably longer if you use something like tor)
[01:09:45] <MichaelRaskin> (the one with fading images, which is a problem for a human but not for a _parallelising bot farm)
[01:10:41] <aeth> (and not everything hidden behind a captcha is something that's... optional. I've even faced a captcha for a mailing list unsub... well, RIP that mailing list's legitimacy because I didn't do the captcha and now they're auto-spam because I guess the email app knows that clicking on the unsub link was unsuccessful)
[01:10:47] <MichaelRaskin> Given they are clearly optimised for annoyance, it is not even _useful_ work
[01:11:26] <aeth> audio captchas, which they kind of have to do for accessibility, are way easier these days
[01:11:58] <aeth> however... doing audio captchas and having to transcribe hard to understand transcripts of (phone?) conversations makes me wonder if they were even intentionally recorded or not because it's easy to accidentally wind up being recorded
[01:12:14] <aeth> when you do this, there is one word that you won't be able to understand, of course
[01:12:50] <aeth> It's the same thing with YouTube's auto-generated closed captioning. If you turn it on and it's auto-generated, it will (probably) flawlessly transcribe the parts you understand, and fail to understand the word you couldn't hear, either
[01:14:07] <MichaelRaskin> I wouldn't be sure about the first part… anyway I thought they are mainly for the case where bad transcription is better than _any_ audio
[01:15:04] <aeth> amusingly, you can use a speech recognition API (including Google's own API, unless they patched that) to answer their audio captchas
[01:15:13] <aeth> of course, I wouldn't try because I'm not trying to look like a bot
[01:28:47] * hayley been there done that.
[01:42:15] <phoe> (defstruct exception) (catch 'this (throw 'this (make-exception)))
[01:42:18] <phoe> look ma
[01:42:23] <phoe> i implemented stack unwinding in cl
[01:43:57] <gilberth> Hmm, (catch 'this (make-exception)) ;Look ma, I broke it.
[01:43:57] <selwyn> NoSuchExceptionException
[01:44:13] <phoe> gilberth: oh no u crashed it!
[01:44:14] <hayley> http://ryanhileman.info/posts/lib43 guys guys guys guys
[01:44:15] -ixelp- C Runtime Overhead
[01:45:05] <moon-child> guys libgcc is slowing me down is there any way to write c but ACTUALLY with no runtime?
[01:45:42] <gilberth> moon-child: libgcc isn't exactly a runtime.
[01:46:00] <moon-child> gilberth: what's the difference between libgcc and a runtime?
[01:46:15] <moon-child> fwiw clang's version of libgcc is even called 'compiler-rt'
[01:47:45] <gilberth> Well, libgcc is for primitives which gcc likes to have in functions. I won't call a multiply routine, say, a "run time".
[01:48:38] <moon-child> what do you consider a runtime?
[01:49:58] <gilberth> Good question. I would consider things like memory management, exception handling, etc. a runtime. Granted, the distinction is blurred.
[01:50:51] <gilberth> What I don't like about gcc however is, that there is no libgcc written in C.
[01:51:07] <moon-child> I see.  I think of a runtime as a library implementing certain aspects of a language; those might include memory management or exception handling, but also multiplication
[01:51:21] <moon-child> I think parts of libgcc are in c; those that are in asm are in asm for speed
[01:52:05] <moon-child> actually looks like most of it is in c
[01:52:11] <gilberth> And when you don't like libgcc, just don't use the C primitives, that gcc needs it for. Depending on the machine, bring your own multiply routine, if needed. Or say long long arithmetic.
[01:52:35] <moon-child> indeed.  It wasn't a serious complaint :P
[01:52:45] <gilberth> moon-child: Yes, Parts that is the trouble. There is no fallback C only implementation.
[01:53:50] <moon-child> well, there can't be.  How can you know, for a given platform, what is the subset of c that can be efficiently compiled to it directly, and what is the subset of c that must turn into runtime library calls
[01:54:18] <gilberth> I ported GCC for my 32-bit TTL RISC design. That was the easy part, gcc is quite flexible in that regard. I was stuck at writing all those routines, like mentioned. A portable C implementation would have helped.
[01:54:21] <moon-child> so, when you port gcc to a new architecture, you must add a couple of things: code generation, and figure out what runtime routines codegen for this particular platform requires
[01:56:06] <gilberth> moon-child: There could be for porting purposes a somewhat common set of routines, to get started. Like say a multiply routine. I don't think that you would need an addition routinue for two 'int's.
[01:56:58] <moon-child> fair enough
[01:57:02] <gilberth> And don't be tricked. There are a lot of things written in C, which however are stubs to let the vendor compiler figure it out. It's like saying (defun car (x) (car x)).
[02:02:58] *** Joins: dra (~dra@2a04:4540:6415:6700:4d97:d40b:359e:eb21)
[02:03:02] <dra> Hello!
[02:03:13] <hayley> Hello!
[02:04:17] <hayley> moon-child: https://twitter.com/geofflangdale/status/1476489507675377666
[02:04:45] *** Joins: vms14 (~user@114.red-79-153-195.dynamicip.rima-tde.net)
[02:07:19] *** Quits: dra (~dra@2a04:4540:6415:6700:4d97:d40b:359e:eb21) (Client Quit)
[02:07:26] <gilberth> moon-child: You're right. What libgcc is, was traditionally called libcrt.
[02:13:09] *** Quits: vms14 (~user@114.red-79-153-195.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[02:18:29] *** Joins: djuber (~user@65.79.128.64)
[02:25:08] <Aurora_v_kosmose> It's strange how hard it is to find a copy of the CL standard
[02:25:36] <gilberth> dpANS not good enough for you?
[02:26:29] <Aurora_v_kosmose> I didn't know of it. In any case, I meant to save a local copy just for archival purposes (so far, anyway).
[02:26:59] <gilberth> Well, the TeX sources are available.
[02:27:24] <Aurora_v_kosmose> Those are the sources to the draft. Does it differ from the published version?
[02:28:10] <pl> gilberth: your mention of multiply routine reminded me of Multics PL/I
[02:28:57] <pl> which apparently used threaded code generation a lot, so it had tons of such routines in shared memory block linked from user blocks
[02:31:00] <gilberth> Aurora_v_kosmose: Most say that they don't differ. When in doubt buy a copy from ANSI. ;)
[02:31:49] <Aurora_v_kosmose> https://web.archive.org/web/20140711172606/http://symbo1ics.com/blog/?p=431 ANSI is about as reputable a body as you'd expect from someone who profiteers off standards that should be open.
[02:32:21] <gilberth> I presume that the Hyperspec or Franz' rendering, both of which I believe are poor, may be done with the final TeX. I don't know. I'll know, when I continue with my own work to grok the TeX sources of the draft and could run a diff.
[02:32:24] <Aurora_v_kosmose> There's an interesting comment on the page.
[02:36:53] <gilberth> pl: The initial C implementation used threaded code, too.
[02:38:14] <hayley> > <stassats> Quadrescence: you could contact me, i would scan clhs and add watermarks for only 20$
[02:41:20] *** Joins: vms14 (~user@114.red-79-153-195.dynamicip.rima-tde.net)
[02:41:21] * gilberth offers to TeX dpANS, print it and scan it at fax quality for $200 only. A PDF version with <https://ctan.net/graphics/pgf/contrib/coffeestains/coffeestains-en.pdf> is $50 extra.
[02:42:20] <vms14> gilberth: you're rich already
[02:43:30] <gilberth> vms14: I won't call myself rich.
[02:43:47] <gilberth> The plain text varsion <http://clim.rocks/gilbert/tex/dpans.0.txt> I offer for free.
[02:43:49] <vms14> I'm roch in vitamines
[02:44:23] <hayley> "Occasional Guest Editors: Sandra Loosemore              self"
[02:44:28] <hayley> Sandra Loosemore from Self?
[02:46:20] *** Joins: dra (~dra@2a04:4540:6415:6700:7175:599:d6b8:58a1)
[02:46:35] <hayley> "Fonts are used in this document to convey information." Well, shit.
[02:46:49] <gilberth> Development your personality: Loose more self!
[02:47:20] <gilberth> hayley: Use your imagination.
[02:49:17] * hayley now wonders how to spot a loop in a grepping DFA.
[02:50:08] <gilberth> .oO(By looking at it?)
[02:50:10] <hayley> Loops of length 1 are easy, but you need a few more tests for loops of length 2.
[02:50:45] <gilberth> Milady, your question is not serious, is it?
[02:51:02] <hayley> I'm serious, I haven't written a loop detection pass before.
[02:51:06] <vms14> this is lispcafe
[02:51:18] <vms14> it's were we make the world better
[02:51:26] <vms14> where*
[02:51:42] <hayley> ...but, to be fair, it gets more hairy to generate SIMD code for detecting (ab)* since you need to make sure the #\a is in one position, and the #\b in another. And don't get me started on (abc)*
[02:52:01] <gilberth> hayley: Just traversing the DFA is not good enough for you?
[02:52:31] <hayley> I would be traversing the DFA, yes, but I need to detect a very specific set of edges and nodes.
[02:53:08] <hayley> Best just stick with loops with just one node, since those are probably the most common.
[02:54:24] <gilberth> I mean start at state Q and mark it with distance=0, then traverse each state reachable from that and mark it by distance+1 and so on. When a node^Wstate already has a distance take the minimum. Rinse and repeat.
[02:57:00] <hayley> Yes, I can identify a loop like that. But AIUI I need to find a submachine for e.g. grep[(ab)*] which has a few more transitions than a loop.
[02:57:09] <hayley> grep[ab] rather...
[02:57:41] <gilberth> What is a "few more"?
[02:57:47] <hayley> i.e. ab -> b [a], ab -> ab [~a], b -> ab [~ab], b -> b [a], b -> ε [b]
[02:59:31] <gilberth> What kind of notation is that?
[02:59:42] <hayley> A shit one.
[02:59:51] <gilberth> I noticed.
[03:02:02] * hayley uploaded an image: (102KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/DsvPSQLOwkizYLHEOKiKHsoy/blah.png >
[03:04:40] <dra> https://news.ycombinator.com/item?id=29775619
[03:04:41] -ixelp- When I first started writing asm code, it was accepted to write self-modifying c... | Hacker News
[03:04:55] <dra> I'm not sure that person knows what metaprogramming is.
[03:05:11] <pl> dra: no, they do not yet, and they are trying to learn
[03:05:28] <pl> it doesn't help them that "macro" is a bit overloaded term
[03:05:37] *** Quits: vms14 (~user@114.red-79-153-195.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[03:05:44] <dra> True.
[03:05:45] <Aurora_v_kosmose> https://www.robweir.com/blog/2010/09/recipe-for-open-standards.html#comment-132465 And a nice example of how standards should be open and can actively endanger people when they aren't.
[03:05:46] -ixelp- The Recipe for Open Standards (and Why ISO Can’t Cook)
[03:05:57] *** Joins: vms14 (~user@114.red-79-153-195.dynamicip.rima-tde.net)
[03:06:48] <Aurora_v_kosmose> The example might seem trite, but photosensitivity means you have stronger requirements than most and the information should be readily available.
[03:07:08] <hayley> gilberth: What I mean is that, in order to vectorise the prefix "[0-9] for this DFA, I need to detect that specific arrangement of transitions, which is a little more than just a loop.
[03:08:06] <gilberth> Sure, but can you be more precise what that arrangement is?
[03:08:52] * hayley uploaded an image: (25KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/MwnqcyWzGAxQNwnLnQVySeKt/grep.png >
[03:08:53] <hayley> This, more or less.
[03:10:03] <gilberth> ok, I see.
[03:11:57] <gilberth> That's tricky, indeed. Isn't this about "ab" leading to a win and all else throwing you back to the initial state?
[03:12:13] <hayley> Right.
[03:12:35] *** Joins: mrmr (~mrmr@user/mrmr)
[03:14:02] <hayley> Hence why I say identifying a loop with one node is easy, and a larger one not.
[03:14:39] <hayley> But if I want to subsume the olde prefix match code, then I either need to make the prefix scanner work with grep machines, or identify larger loops.
[03:15:42] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:39a4:4154:9964:3167) (Remote host closed the connection)
[03:15:54] <gilberth> hayley: Can you show me abc and abcd? For visualization. I need to see a pattern there.
[03:16:17] <hayley> Here is abcd.
[03:16:17] * hayley uploaded an image: (58KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/jGAKsbdTGSUnGFkzWJOhKrAY/abcd.png >
[03:16:38] <hayley> I'd also suspect e.g. abad messes with the pattern too.
[03:16:57] <gilberth> Ouch.
[03:17:41] <hayley> But I am also totally fine with the idea of limiting to 2 characters, since it is not fun to match a repetition of 3 characters in a vectorised loop.
[03:18:35] <gilberth> I wonder if we could use RE algebra to isolate the prefix we are looking for. I assume you want to isolate it, don't you?
[03:19:16] <hayley> Right. But ideally my move here is that I identify loops in the DFA, and not necessarily the prefix.
[03:19:40] <gilberth> hayley: Yeah, you could perhaps write a specialized recognition routine for a two char prefix.
[03:19:42] <hayley> e.g. for olde [0-9]+x[0-9]+ I want to jump over either [0-9]+ with vectorised scanning.
[03:21:00] <gilberth> Don't you want to skip over the "complement"?
[03:21:32] <hayley> For prefixes, yes.
[03:21:34] <gilberth> Which is not really the complement. More "anything not ending in [0-9]+".
[03:21:53] <Alfr> hayley, you're not looking for a longest cycle, correct?
[03:22:12] <hayley> Not a longest cycle, just a cycle of either size 1 or 2.
[03:22:20] <gilberth> Anyhow, I need to get used to my girl-role and attend to the kitchen. bbl.
[03:23:29] <gilberth> And not a cycle as in a loop. More a sub-DFA of certain nature. Somewhat recursively defined. I need to ponder that.
[03:23:43] <Alfr> hayley, good. Because you can reduce finding a hamilton cycle to the general problem in polynomial time.
[03:25:20] <hayley> Hm, I should just start with having the 1-loop analysis be "default" with SIMD enabled, since I already have the best performance when there is a decent prefix already.
[03:25:23] <gilberth> I believe identifying Hamilton cycles isn't suffice.
[03:26:01] <hayley> "11.2GB/s is enough for everyone." - me
[03:27:00] <gilberth> .oO(Gosh, those grepers wading through hay again!)
[03:27:39] <Alfr> gilberth, no. I mean, when you set all edge weights to 1, then if you can find longest cycles efficiently, then if you find one with weight #vertices, you'll have found a Hamiltonian cycle in the graph.
[03:27:55] <hayley> Well, aren't you lucky that you get to barf an error when you miss a match.
[03:28:13] <gilberth> Alfr: Sure. But that won't do for us.
[03:28:23] <Alfr> gilberth, if you don't have one with weight #vertices, then the graph doesn't have a Hamiltonian cycle as well.
[03:29:21] <Alfr> gilberth, yeah, just wanted to note that in case you two wanted to spend time looking for one.
[03:30:14] <Alfr> gilberth, I mean, hell, if you can find a polynomial time solution for it, I'd be the last one to stop you. ;)
[03:30:26] <vms14> i like the thispersondoesnotexist.com site
[03:30:38] <vms14> it's a google bot creating fake images
[03:31:03] <vms14> I want to have several fake accounts for when I have a service to promote
[03:31:38] <vms14> you make x thing and then go to several sites like quora reddit and ask for the x best service with some account
[03:31:38] <gilberth> Alfr: Ok. I assumed that identifying Hamilton cycles is a solved problem. We need to identify what I called "throw you back".
[03:32:36] <vms14> then you go with another account to reply to that question and tell how your service has helped a lot as if you were a customer
[03:33:16] <Alfr> gilberth, verifying one, sure is easy. Finding one, not so much.
[03:33:38] <gilberth> And in the "ab" example, the initial state is self-looping [^a]. Easy. The tricky part is the next state looking for "b" to throw back to where we came from on [^b]. A circle, too, granted.
[03:34:03] <vms14> then whoever sees this has not only seen your service, but also seen good feedback which is what someone looks for before getting in
[03:34:46] <hayley> n.b. again it's just messy to match repetitions of multiple characters, especially if your sequence isn't a power of 2. And as longer sequences are less likely to be matched, we will eventually be slower using vectorisation than branching.
[03:35:03] <gilberth> Alfr: Still a solved problem, I don't need to ponder that. I could pick up a text book anytime to read about faster algorithms.
[03:35:58] <vms14> the nice thing is that website gives you a lot of random people and you can say "this is the ceo, this is a customer..." xd
[03:36:24] <gilberth> These circles nest in a certain way and I can't formulate that. The transitions are key.
[03:36:37] <Alfr> gilberth, define "solved".
[03:37:17] <gilberth> Alfr: Solved means: Someone, somewhen, wrote about it and proposed an algorithm.
[03:37:17] *** Quits: dra (~dra@2a04:4540:6415:6700:7175:599:d6b8:58a1) (Ping timeout: 240 seconds)
[03:37:57] <Alfr> gilberth, yes.
[03:38:58] <gilberth> And given, that I could test any path, whether it's (1) a valid path and (2) is a circle and (3) enumerate any path, this is "solved" enough for me right now. I am not concerned about the complexity at the moment.
[03:40:10] <gilberth> I have trouble to even formulate a condition to test something for the properties hayley is looking for.
[03:41:14] <gilberth> I'm not even sure about the exact properties.
[03:41:49] <gilberth> Cleaning kitchens and cooking is easier. I'll momentarily switch professions.
[03:42:51] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Remote host closed the connection)
[03:50:08] <hayley> Someone told me that a log-linear plot for performance/string length would be funnier. So here's one.
[03:50:16] * hayley uploaded an image: (22KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/usgbltQQbCScWnnDphliZTqY/loglinear-re.svg >
[03:51:14] <sm2n> lol
[03:53:32] * gilberth has trouble telling which curve is which engine.
[03:54:06] <hayley> From top to bottom: OMRN, PCRE2 with JIT, CL-PPCRE, PCRE2 without JIT, Rust regex, glibc
[03:55:29] <gilberth> Oh, are we really that much faster?
[03:55:33] <hayley> Yes.
[03:56:04] <hayley> ...at least when it comes to (aa|a)* for which no one has any tricks.
[03:56:26] <gilberth> I mean all but the nightmare and the JITed don't cross 100M/s even.
[03:56:47] <hayley> Yep.
[03:57:08] <gilberth> That is what? 30\tau per byte?
[03:57:21] <hayley> Close enough.
[03:57:50] <hayley> But it is amusing that CL-PPCRE barely is fastest of the interpreters.
[03:58:21] <hayley> I guess log-linear is more dramatic than log-log <https://applied-langua.ge/posts/images/re-graph.png> but you simply can't see anything in log-linear.
[03:58:34] <gilberth> And I thought my 7\tau per character for a scanner I measured is poor.
[03:58:57] <hayley> The top performance is more like 60 Mchar/s.
[03:59:09] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[04:00:38] <gilberth> Gosh. We should be rich by now. I was not aware. But then, I tested against lex(1).
[04:01:10] <moon-child> huh, why does rust drop off around 1e5?
[04:01:46] <hayley> AIUI there is a cache of states, and at some point the cache goes too large, and the engine gives up and falls back to a slower machine.
[04:01:55] <moon-child> oh I see
[04:02:03] <gilberth> lol
[04:02:32] <hayley> ...well, a DFA is out of the question with submatches, unless you're us, so IIRC it must be from the Pike VM to a more general backtracking engine.
[04:05:12] <hayley> Also note that PCRE2 and CL-PPCRE stop early because they blow the stack, or something else that they don't want to blow.
[04:06:35] * hayley should re-benchmark, now that the generate code is somewhat less shit.
[04:07:49] <hayley> Nope, doesn't help here.
[04:11:52] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[04:13:03] <moon-child> https://news.ycombinator.com/item?id=29777336
[04:13:04] -ixelp- You can do that in almost any language, though. There was a furry who worked as ... | Hacker News
[04:19:32] <hayley> If <https://www.youtube.com/watch?v=_jX-hKvUQDU> turns out to be any good, I might replace my Zen 1 chip from 4.5 years ago. More stuff to wait on.
[04:19:33] -ixelp- AMD 2022 Product Premiere - YouTube
[04:22:26] <drakonis> oh woah
[04:22:28] <drakonis> this is a thing
[04:22:54] <White_Flame> moon-child: I, too, have been entirely too adjacent to the muck communities in the workplace :-P
[04:23:12] <drakonis> i've been meaning to replace my cpu for a while now
[04:23:16] <hayley> Right, time to spend €6000 on a new machine, so that I can build Rust regex faster. Not.
[04:23:20] <drakonis> lol
[04:23:54] <hayley> Best I can tell, I'm the only one who is not a furry in #cal-coop:matrix.org (on Matrix)
[04:24:44] <drakonis> i wonder when amd intends to release their hybrid cpu architecture
[04:25:12] <moon-child> all I want is avx512
[04:25:14] <moon-child> that's it
[04:25:33] <selwyn> in which furries demonstrate their power
[04:25:46] <hayley> moon-child wants to replicate <https://www.youtube.com/watch?v=7uBNCN6v_gk>?
[04:25:47] -ixelp- Cooking with Intel Ep1 - A Demonstration on CPU Heat - YouTube
[04:26:08] <hayley> Alternately, if you spent all your money on AVX-512: https://www.youtube.com/watch?v=yNWdB1_nGos
[04:26:09] -ixelp- Cooking with Intel 7 - Pentium D 820 Ramen Noodles! - YouTube
[04:27:22] <selwyn> rookie numbers
[04:27:29] <selwyn> i can do 100 hot dogs a day with my workstation
[04:28:33] <moon-child> ideal water cooling sertup
[04:28:35] <moon-child> setup
[04:30:39] <gilberth> hayley: The stack is blown?
[04:30:46] <hayley> Yes.
[04:31:04] <moon-child> there's a pun somewhere in there.  Maybe related to 'stacked'
[04:31:08] <gilberth> Hayley! Pillow!
[04:31:27] <hayley> Recall that CL-PPCRE makes a chain of closures, and only one "continuation" function can be tail-called.
[04:31:29] * hayley passes pillow
[04:31:47] * gilberth 's desk is spared.
[04:32:38] <hayley> selwyn: "I recommend the following three step program. 1) Cook 18 eggs in a pot for 3 minutes. 2) Convince yourself that throughput == latency. 3) Throw away your original eggs, cook another egg for 10 seconds and bon appétit!"
[04:32:45] <gilberth> hayley: Right. Still, what do they hope to backtrack to?
[04:33:07] <hayley> I'd guess ambiguity in submatches that can't be resolved immediately?
[04:33:24] <hayley> i.e. should a step consume aa or just a?
[04:33:49] *** Quits: random-nick (~random-ni@87.116.180.98) (Ping timeout: 256 seconds)
[04:34:35] <gilberth> Right. Yes, depth first search, PCRE semantics even. I forgot.
[04:35:52] <gilberth> Fun: Let (aa|a)*b match on a million 'a's followed by 'ab'.
[04:42:22] * hayley never tried that on Rust. Let's see if it really runs in linear time, eh?
[04:42:59] <hayley> But, just a thought, could I generate a non-grep DFA, do my analysis there, and then produce a grep DFA? The procedure would be a bit like NFA -> DFA conversion.
[04:46:54] <hayley> I get some fun with (aa|a)*$ on CL-PPCRE and aaaaa..b.
[04:50:04] <hayley> Nothing with Rust regex though. Oh well.
[04:51:37] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[04:54:28] *** Quits: djuber (~user@65.79.128.64) (Remote host closed the connection)
[04:57:59] <drakonis> https://twitter.com/jwz/status/1478022085737803776 wow what the fuck mozilla?
[05:02:09] <hayley> https://twitter.com/stylewarning/status/1478173643372843008
[05:03:53] <drakonis> lmao
[05:07:58] <pl> ahahahahahaha
[05:08:47] *** Quits: Catie (~user@user/catie) (Quit: Going home)
[05:09:41] <gilberth> hayley: Could work. I mean, you're after an initial SIMD loop through hay at this point only, aren't you?
[05:10:25] <hayley> Right, I just cleared the initial SIMD loop.
[05:10:54] <drakonis> well fuck it, time to install chrome lmao
[05:10:58] <drakonis> or just use nyxt idk
[05:13:57] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 240 seconds)
[05:14:37] <Alfr> moon-child, continuing from #lisp: If you can't distinguish the things to begin with, it doesn't matter anyway. But for conses you could simply enumerate all you have and discriminate by that, same for symbols, and for strings you could additionally compare characters.
[05:15:10] <White_Flame> HNY = Happy NFT Year!
[05:15:24] <White_Flame> 2022 will be the year of NFT on the desktop!
[05:15:52] <drakonis> im gonna just run chrome now
[05:15:53] <drakonis> fuck it
[05:15:54] *** Joins: aeth (~aeth@user/aeth)
[05:17:38] <semz> drakonis, I can't resist to ask: Why is THIS of all things the last straw?
[05:17:42] <White_Flame> at least do chromium instead of chrome if you're going to go that way
[05:17:43] <Alfr> moon-child, so for all those things that one can represent in memory and distinguish, one certainly can partition them and thereby define that relation.
[05:17:48] <White_Flame> or get one of the firefox forks
[05:17:50] <drakonis> i mean
[05:17:51] * hayley watches someone assemble a fan on Discord and tries to avoid OnlyFans-related puns
[05:18:06] <drakonis> i ran firefox because it was the only browser with sliding tabs left :V
[05:18:14] <drakonis> among other features
[05:18:14] <moon-child> Alfr: the question is not how how you generate a list of elements, the question is how you test for membership.  Obvious thing to do is to distinguish with EQ (or perhaps EQL).  But you still have to decide that that's what you're doing
[05:18:20] <drakonis> but it has visibly gotten worse
[05:19:26] <moon-child> for instance: (f x) vs (let ((y x)) (f y)) it is possible to distinguish between those two usages using e.g. a (compiler) macro.  It is not an _interesting_ distinction, but it is there
[05:20:17] <hayley> https://twitter.com/MushroomMaxxie/status/1478030971798700034 getting more ass than English students
[05:20:41] <Alfr> moon-child, sorry, I don't know how to decide whether two functions are equivalent.
[05:21:21] <moon-child> Alfr: sorry, that was not super clear; question was whether you can distinguish x and y given they have the same value
[05:21:43] <hayley> https://i.redd.it/i1yuvldw67h51.jpg
[05:22:21] <Alfr> moon-child, and the context earlier was some universal equivalence notion, as I understood it.
[05:24:06] <Alfr> moon-child, what I said is not about whether we can, but whether we want to in a situation.
[05:24:24] <moon-child> Alfr: I have to run some errands now, ttyl
[06:15:18] <pl> https://twitter.com/bigdsenpai/status/1476795714072190977 ...
[06:15:28] <pl> (just in case, DO NOT WATCH "Boku no Pico")
[06:17:22] <vms14> pl: why you are forcing me to watch it?
[06:17:52] <pl> vms14: I'm not. I'm really, really not
[06:22:24] <pl> https://twitter.com/koush/status/1478161940727750656 <--- start of the thread, especially after just a few days ago people went on how @pmarca being for web3 but not investing in Theranos is evidence for cryptocoin scams being good :D
[06:22:49] <vms14> https://web.archive.org/web/20160303170740/http://www.pico.bz/top.html
[07:02:45] *** Quits: vms14 (~user@114.red-79-153-195.dynamicip.rima-tde.net) (Remote host closed the connection)
[07:09:40] *** Joins: notzmv (~zmv@user/notzmv)
[07:25:12] <sm2n> Man I had a weird dream
[07:25:41] <sm2n> In which I found a page on the wayback machine with henry baker's obituary
[07:25:56] <sm2n> I might need to take a break from the computer
[07:37:55] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[07:38:30] <dave0> maw
[07:42:02] *** Quits: semz (~none@user/semz) (Ping timeout: 240 seconds)
[07:46:07] <moon-child> sm2n: :/
[07:49:17] <moon-child> hayley: 'I learned about lisp from https://buildyourownlisp.com, but the implementation shown in that book doesn't seem to use references for any values, which seems quite slow'
[07:49:18] -ixelp- Learn C • Build Your Own Lisp
[07:54:24] <hayley> What the fuck did you just bring upon this cursed land
[07:54:41] <gilberth> moon-child: Is that a quote or a joke?
[07:54:47] *** Joins: semz (~none@user/semz)
[07:55:36] <moon-child> gilberth: legit quote
[07:55:42] <moon-child> https://redd.it/rvi3io
[07:55:43] -ixelp- Garbage Collection Implementation in Lisp Interpreter : ProgrammingLanguages
[07:57:44] <gilberth> That's not even funny any more.
[08:01:19] <hayley> Should I link DBYOL?
[08:02:51] <gilberth> Milady, what do we need to do to get DBYOL the number one Google hit for "Build your own Lisp"? This book is dangerous.
[08:03:22] <moon-child> the main thing that gets me is
[08:03:24] <moon-child> 'while evaluating a quoted expression, I am performing allocations'
[08:03:53] <White_Flame> go on tor browser, search for "build your own lisp", click dbyol, new identity, rinse and repeat
[08:04:16] <White_Flame> worked for some of my stuff
[08:04:23] <gilberth> White_Flame: Yep.
[08:05:02] <gilberth> Also: "Build your own Lisp" click on the book and return real quick back to the search results.
[08:05:40] <gilberth> You didn't stay on that page => The page is not relevant to the search term.
[08:06:37] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 240 seconds)
[08:12:08] <hayley> I better put it on applied-langua.ge rather than github too.
[08:12:39] <moon-child> why?
[08:12:45] <moon-child> bet github has better seo than you
[08:12:52] <gilberth> That's duplicate content and Google does not like that at all. And if you do: Make sure there a "canonical" <LINK> in there.
[08:13:34] <sm2n> something I never thought I'd see: #lispcafe doing seo
[08:13:37] <gilberth> hayley: If you're unlucky this would make applied-langua.ge rank shit.
[08:21:31] <gilberth> About duplicate content: This can happen quick. I host the HTML version of the CLX manual I once did at <http://bauhh.de/clxman/> Then mirrors appeared, now you don't find my initial version.
[08:21:31] -ixelp- CLX Manual
[08:23:36] <moon-child> seems you are on page 45
[08:23:38] <moon-child> err
[08:23:40] <moon-child> page 4
[08:24:22] <hayley> Also n.b. BYOL makes all objects the same size, and doesn't even bother to use a union for the slots. Ergo every object is fucking huge.
[08:24:30] <hayley> And IIRC no cons cells, of course.
[08:24:50] <gilberth> Yes, you can hide a dead body on page 2, no one will notice.
[08:24:56] <moon-child> hayley stop
[08:25:18] <hayley> gilberth: I guess so.
[08:25:48] <hayley> But I had good results extracting The Lisp Curse Redemption Arc from my book...of course, that's a PDF and not another website.
[08:27:16] <moon-child> and even if it was indexed, same domain
[08:28:42] <hayley> I should make the object layout is mentioned it in DBYOL.
[08:29:21] * hayley needs to make summaries for the writeup index. "Lisp hackers take potshots at a shit book"?
[08:31:07] <hayley> moon-child: https://github.com/orangeduck/BuildYourOwnLisp/blob/master/src/q_expressions.c#L26-L33
[08:31:07] -ixelp- BuildYourOwnLisp/q_expressions.c at master · orangeduck/BuildYourOwnLisp · GitHub
[08:39:13] <hayley> Oh, even worse: https://github.com/orangeduck/BuildYourOwnLisp/blob/master/src/functions.c#L36-L53
[08:39:14] -ixelp- BuildYourOwnLisp/functions.c at master · orangeduck/BuildYourOwnLisp · GitHub
[08:42:14] <hayley> I count 88 bytes per object. Congratulations!
[08:43:36] <hayley> "As I said in my post, I'm aware that design in that book is questionable. I mostly was looking at the book to see how it described lisp, actually; since it's aimed at beginners it was easy to understand"
[08:43:52] <moon-child> I only get 80.  10 words at 8 bytes each
[08:44:28] * moon-child spots another firefox bug
[08:44:36] <hayley> Ah, I then found the code for the string chapter, which has another word for a C string.
[08:44:50] <moon-child> d'ah
[08:44:53] <hayley> Great use of version control btw. Imagine if you fucked something up in Chapter 4 and had to fix up all the programs.
[08:45:20] <moon-child> that's what rebase is for, no?
[08:45:25] <moon-child> can apply such patches automatically
[08:45:42] <hayley> I meant that you'd have to do the same fix to all the programs in the repository.
[08:46:04] <moon-child> oh.  I thought it was like a commit per chapter or something
[08:46:16] <hayley> It's a file per chapter, with huge redundancies.
[08:46:26] <moon-child> T_T
[08:47:49] <hayley> Two other things I want to say, but idk if they are kosher: 1. When in doubt, use Boehm GC 2. If one is new to how Lisp works, they should learn it before trying to implement it?
[08:48:11] <Aurora_v_kosmose> Why are so many media decoders written in C when CL & Ada exist...
[08:48:31] <moon-child> I can not argue with either of those... ¯\_(ツ)_/¯
[08:48:55] <moon-child> somebody in anotehr channel not long ago, well meaning, but said 'I want to implement lisp in python!  No, wait, rust!  What's a cons cell again?'
[08:49:30] <moon-child> Aurora_v_kosmose: abi?
[08:49:51] <Aurora_v_kosmose> moon-child: Both of them can export a C-compatible API.
[08:50:32] <moon-child> ada maybe.  Lisp it's more complicated
[08:50:38] <moon-child> and didn't ada have licensing problems for a while?
[08:51:07] <Aurora_v_kosmose> I don't quite know. I mostly mentioned it since it's the poster child of older Safe languages.
[08:53:54] <hayley> .oO("Tracing everything on the stack won't work if I have C code" "Haha Cheney on the MTA goes choo-choo")
[08:54:53] <Aurora_v_kosmose> We really need a better ABI than C... :/ 
[08:58:05] <gilberth> Well, would I write a book about how to implement a Lisp, I would start by talking about evaluation, and s-expressions. First C code perhaps would be a simple variant^Wunion^Wenum^Wunion to represent s-expressions, cons, car, cdr, maknam, and then perhaps a printer. No idea, if I would have a reader or eval first. Then work from there.
[08:59:14] <hayley> Well, DBYOL is on page 1 of search results for me. Hooray!
[08:59:47] <hayley> Ditto for the Redemption Arc, but both are nearer to the bottom of the page.
[08:59:49] <gilberth> Then I would apply a trick: For a proper GC you need some form of value stack. You need that value stack for either a BC interpreter or a proper tail-recursive eval() function, too. So perhaps I would do that first and postpone the GC. And then, surprise, we have our stack already in place, once we get to GC.
[09:00:45] <gilberth> hayley: You are aware that each user of Google gets different results, aren't you?
[09:00:52] <hayley> Yes.
[09:02:44] <gilberth> Actually I believe a good book on that topic might be a nice thing. And for that I will probably also go the BC route. Yet (1) I can't write and (2) don't have the patience (3) would need to mention over and over again, that this is not how you would actually build a Lisp.
[09:05:28] <hayley> That book and everything around it is an exercise in how not to do things. - "Errors in C programs cause you to crash. Source: trust me bro" - Shit FEXPRs - Copying everything and mutating in weird ways - Horrid formatting style - Huge objects, because of no use of UNION - Dynamic scoping - Indirectly got me dumped
[09:06:23] <gilberth> People are uneducated and don't understand Lisp at all. They all should read the JMC paper. They don't get s-expressions and throw overly complicated parsers at READ. Perhaps coming from "classical" languages, where programs have no defined internal representation a Lisp function could reason upon.
[09:07:10] <moon-child> https://bernsteinbear.com/blog/lisp/  as I recall this was ok.  It's a compiler, though it still uses c
[09:07:10] -ixelp- Lisp implementations | Max Bernstein
[09:07:48] <gilberth> hayley: And what's the single root cause of this? Not getting s-expressions. This is why I would start from there.
[09:08:39] <moon-child> hm, but jmc uses mexprs, no? :)
[09:08:43] <gilberth> moon-child: I spot a chapter called AST.
[09:08:57] <epony> havent seen C-language developers upping their mood on calling Lisp defective by design ;-) other than compiler in-house jokes about Lisp not having anything to offer for reliable compilations
[09:09:33] <gilberth> moon-child: JMC uses m-expressions to write an s-expression evaluator and defines a clear mapping of m-expressions to s-expressions.
[09:09:54] <moon-child> gilberth: what is wrong with asts?  Sicl has one
[09:10:12] <gilberth> Example programs to evaluate are given in s-expression notation.
[09:12:01] <gilberth> moon-child: Well. But you would not start by talking about ASTs, when implementing a toy Lisp interpreter, would you? Lisp is just not defined on ASTs. It's defined on s-expressions.
[09:12:01] <epony> it's still a myst why plan9 was not written in CL though
[09:12:08] <moon-child> sure
[09:12:32] <epony> had to wait all those years for a true Rustic OS ;-)
[09:13:54] <epony> can't believe the VMs came from UNIX companies
[09:14:05] <epony> (out of Pascal)
[09:14:19] <gilberth> When hacking a serious compiler it makes perfect sense to have something which you could stick information to, like source locations, type information, usage information, the lexical environment this form appeared in, alpha conversion, you name it. I won't call that a VHLIR rather than an abstract syntax tree.
[09:14:54] <gilberth> * I would call it a VHLIR
[09:15:04] <sm2n> Is Phillip Greenspun, of greenspun's tenth rule/greenspunning fame actually a lisper? I can't find anothing to confirm or deny
[09:15:07] <epony> yeah, weird but fun C and Pascal did it, with ASM inline code.. Lisp waits for the proper VM to get global domination ;-)
[09:16:05] <epony> what'ya gonna do, GC in a GC guest on a GC kernel.. sounds like tripple stars for bravery
[09:17:21] <sm2n> oh, and I should confess: I actually did read (and follow) build your own lisp when I was starting out to learn to program
[09:17:22] <epony> wait till the invention of the process and program to program data isolation, probably
[09:17:42] <sm2n> predictably, it did not go very well
[09:18:07] <sm2n> I quit around when they introduced the random parser library
[09:18:15] <gilberth> sm2c: It even is a very bad C book.
[09:18:30] <sm2n> yup, as I found out later
[09:19:26] <gilberth> It begins with the explanation of pointers as it states that you append a "*" to a type name to have a pointer to that type. Wrong. Wrong. Wrong. You prepend a "*" to the identifier.
[09:19:31] * epony yawns, keep up the good work people, no time wasted on pointless structure
[09:19:42] <hayley> Somehow I think that is not the worst part.
[09:19:45] <sm2n> it's remarkable that the book has persisted so long as something people recommend despite all of its flaws
[09:20:02] <hayley> IIRC the author mentions it, but believes his wrong explanation is simpler.
[09:20:25] <hayley> ...which is why most of the book exists, to be fair.
[09:20:30] <epony> just remember, if one day you start finding piece of "machine" models in your abstractions, you've done it all wrong and have to start again, with modelling the machine precisely from machine code upwards
[09:20:33] <sm2n> lol
[09:21:23] <epony> and the machine changes a lot, where your platform is not a platform, but a SoC..
[09:21:28] <gilberth> hayley: I won't do so in an introduction. People learning by that will write "const char* p" and wonder that 'p' is not a constant.
[09:21:47] <epony> so why not just target the MMIX instead ;-)
[09:22:01] <epony> at least you'll have a chance
[09:22:48] <hayley> Seems I imagined that part, sadly. But "author believes his wrong explanation is simpler, despite 50 years to the contrary" is basically the theme of the book
[09:24:01] <epony> the modern computers are more like 40 years
[09:24:19] <gilberth> hayley: readline() has the first buffer underflow. Type something not terminated by \n at the program and it writes a char where none belongs. Fail. All bets are off. Congrats! I'll stop now. I am bored.
[09:24:44] <hayley> Don't even bother typing anything; they'll all crash if you send EOF.
[09:25:29] <epony> in historical context the symbolic and other lisp machines were notoriously unreliable, just as much as the mini-computers of the time
[09:25:53] <epony> turned out, you can't immitate languages with hardware ;-)
[09:34:34] <gilberth> Anyhow and sorry, this misconception of how C declarations work is getting my nerves. I hate it when I see 'char* s' instead of 'char *s' and I hate it more so when the latter is autocorrected to the former. And once you need more complicated types with qualifiers like 'const', 'volatile', 'restrict', you're lost when you were taught this the wrong way. Throw in arrays and function pointers and you're dead in the water.
[09:37:11] <gilberth> I recognize that "teach the simple to get lie first and then correct that" is a strategy you often find in teaching. I personally hate that. Don't lie to me in the first place. It can be oversimplified at first, but it shouldn't be wrong.
[09:44:21] <epony> picked the wrong book ;-)
[09:44:36] <epony> textbooks don't do that
[09:45:52] <epony> neither do standard specifications or manual pages
[09:47:10] <epony> people get annoyed much more why c++ is not taught along with c and assembler at the same time
[09:47:49] <epony> life is too short for 15 crappy commercial books each getting it wrong for one particular sub-language
[09:59:23] <hayley> It's more insulting when you have to write an interpreter for each wrong model (per DBYOL). On the contrary, SICP only has you write an interpreter (and a compiler of sorts) after you've been given the actual model of Scheme.
[10:10:41] <epony> and the model of the machine?
[10:11:14] <gilberth> I am tired, hayley. I am tired of language wars, I am tired of people without a clue, I am tired of people just believing things, I am tired of the stupid, I am tired of the silly. This will never stop as each day an armada of guys being afraid of thinking is born. In all areas, not just in hacking.
[10:27:52] <epony> who said privatisation of education was a good idea..
[10:29:24] <epony> when the system is "wired wrong".. textbooks to the people at no cost and practical courses might bring up fresh meat (focus on the practical)
[10:31:19] <epony> or just go berserk mode with s2s translation
[10:43:09] <pjb> gilberth: yes.  This is something that should be teached way more early: people are idiots.  A kind of reverse Dunning–Kruger principle: people with high ability generally overestimate the ability of other people.  The earlier this is understood, the better for the mental health of able people…
[10:44:11] <gilberth> pjb: Yep, that is very true. I needed my time to fully accept that.
[10:44:21] <pjb> gilberth: why stop at source location? We should also label objects with higher level tracking information: analysis elements, specification items, etc.
[10:45:44] <gilberth> What do you mean by specification items?
[10:45:50] <hayley> Does it make anyone happier that the author of BYOL apparently has a PhD and works for games at an AAA studio?
[10:47:28] <moon-child> wait, the byol guy is also the cello guy?
[10:47:42] <pjb> gilberth: the reason why some code exist.
[10:48:01] <gilberth> hayley: Why would that make me happier? Having an PhD does not stop you to write about things you have no clue about. But what do I know? I don't have a PhD. Listen to pjb, he is right.
[10:48:11] <hayley> moon-child: Yes.
[10:48:16] <hayley> gilberth: It wouldn't, that's the joke.
[10:48:44] <moon-child> has pjb a phd?
[10:48:48] <pjb> nope.
[10:48:58] <pjb> perhaps I could have.
[10:49:03] <gilberth> pjb: What are you talking about? The AST which I would call an immediate representation rather? Yes, you could stick whatever useful information there, as you see fit.
[10:50:52] <pjb> gilberth: here I'm just complaining that tracking information (about design, analysis, specifications, user requirememts), is only kept by the CASE tool if at all.  The best you can hope in general, is indeed pointers from binary to source code.  But the rest is often lost (if not inexistent in the first place).
[10:51:44] <gilberth> pjb is right about the inverse Dunning-Kruger effect. And he is right that the sooner you accept that, the saner you keep. I am at the process to do just that. Also with regard to anti-vaxxers and our local "Green" party.
[10:51:55] <moon-child> pjb: I would rather associate such information with source, and follow it from the binary's pointers to the source
[10:52:21] <pjb> for example, if you consider a lisp image, you can have the binary, and if you track it, the source code (lisp forms) stored in the image.  But why not also have stored in the image the design, analysis specifications, user requirement documents too?
[10:52:54] <pjb> Then if you find such an self-contained image in 1000 years, you can track back to the user requiements, and if your requirements changed, track forward to all the items that need an update.
[10:53:30] <moon-child> (and, I do not think requirements should be tied directly to the source.  As requirements are a property of an interface, not an implementation.  A weak pointer could be appropriate, though)
[10:54:27] <pjb> moon-child: I'm saying that, from an image-based point of view.
[10:55:09] <pjb> Of course, if you work in a burst environment like unix, you assume those links are kept externally.
[10:55:49] <gilberth> Well, that would imply moving away from a file system and rather have pointers (hyperlinks) to documents. And make that distributed and have hyperlinks please, that is: links that work both ways. Xanadu, anyone?
[10:56:01] <pjb> Then you have to perform archeology to retrieve the old documents, to maintain the systems. (or some people just patch binary cobol programs because they've lost the sources, and all the documentation).
[10:56:04] * hayley wants to complain
[10:56:10] <moon-child> yes, I understand.  Well, I guess it depends on what exactly you call an image.  But: I would like to be able to consider separately the design desiderata behind the CLIM specification, and the implementations of mcclim, freeclim, lispworks, allegro, etc.
[10:57:03] <pjb> Of course, there can be structure and modularity in all levels of software development.
[10:57:40] <gilberth> moon-child: I would, too. However in my code you often find pointers to the spec, at times I also quote a passage. In a comment.
[10:57:42] <pjb> Perhaps I should not talk software with a picture of a spaceship in orbit around a strange planet in a strange solar system…
[10:58:01] <pjb> gilberth: exactly. At best we have a few comments. But this could be systematic.
[10:58:06] <moon-child> gilberth: but, those pointers must be interpreted by a human.  I would rather a first-class representation which can be interpreted by a machine
[10:58:27] <moon-child> where I can press some key and go to the relevant point in the specification.  See where some other clim implementation points to the same part of the specification
[11:00:27] <gilberth> moon-child: Well, then you want hyperlinks. Persisted even over time. And yes, I at times put hyperlinks in there too. I often cite (also other sources), just because we have no proper hyperlinks. Begins with that we don't have hyperlinks to a specific spot or passage of a document.
[11:01:07] <ck_> ( pjb) gilberth: yes.  This is something that should be teached way more early: people are idiots. 
[11:01:19] <ck_> pjb: it's "taught". sorry, couldn't resist
[11:02:03] <pjb> ck_: thank you. I'm just awaking, so my English is still sleepy.
[11:02:05] <gilberth> moon-child: Ok. I see. Perhaps what we have is still not better than classical references like "Peter Blah wrote in 'Thoughts on Quux', chapter 3: Blah, blah to the Quux." Where prior to the internet you would need to hit a library.
[11:06:03] *** Joins: sunset_NOVA (~sunset_NO@p200300f0870ab9008967795cd8053430.dip0.t-ipconnect.de)
[11:08:05] <gilberth> So how about a world-wide fully versioned, persistent document-store? With hyperlinks? The kind that is both ways. You will however face a very human problem: Spam and trolling. As with fully backwards links, everyone could comment on everything.
[11:08:21] <contrapunctus> gilberth: sounds like Freenet
[11:08:42] <contrapunctus> the two-way links would have to be added, though
[11:08:42] <moon-child> pjb: out of curiosity, do you know of any tools for doing image-based development in cl?  (Aside from interlisp.)  I see ibcl, but that is not an editing environment
[11:08:49] <moon-child> gilberth: sounds like netfarm :P
[11:10:14] <gilberth> contrapunctus: Yep, I was just about to ask about the two way links. I once contemplated to have a P2P (no central authority) facility to allow people to annotate every bit and piece of what they find on the WWW. This is not exactly backwards links, but has the same consequence.
[11:10:34] <moon-child> anyway, easy solution: only invite people you know
[11:10:45] <moon-child> (well, wot does not work, but)
[11:11:43] <gilberth> My idea was to have the program plug into your browser and each time you read sth you could also see annotations by others. This was in 2000 or so.
[11:12:15] <gilberth> At that time, it could have been just a proxy you run locally.
[11:13:04] <gilberth> However I would love to have that just for personal or closed group use. This is inspired by the annotation support in my HTML rendering of the clim-spec.
[11:13:34] <contrapunctus> gilberth: I see two-way links as creating more problems than they solve
[11:13:37] <gilberth> For large scale use, you would need sth like spam filters and some kind of reputation system of sorts.
[11:14:03] <contrapunctus> Why are they useful anyway? 🤔️
[11:14:44] <gilberth> contrapunctus: The problems I named are spam and other malicious "annotations". That are human problems.
[11:15:45] <gilberth> contrapunctus: moon-child gave an example: You read a section of a spec and then want to see what other documents refer to just that. Could be other implementations, an article, a paper, a blog, whatever. That would be useful.
[11:17:44] <gilberth> Annotation support would also be useful. You read some spec, and scratch your head, how that should be interpreted. Others previously had the very same questions and might have taught about that. Why not share that?
[11:21:39] <sm2n> the current iteration of the annotation thing lives on in hypothes.is
[11:21:42] <contrapunctus> gilberth: I've had very few situations where I'd want to see what documents refer to some content, but putting that aside...the spec could change. You'd need something like fine-grained identifiers within a document to keep backlinks from breaking...
[11:21:50] <sm2n> I've seen people use it
[11:22:26] <sm2n> Backlinks are very useful and have come back into vogue for personal use with Roam Research and derivatives
[11:23:15] <sm2n> It turns out they are a very expressive primitive for structuring information in a way that people can explore it with high levels of serendipity
[11:23:27] <moon-child> contrapunctus: there is so much chaff.  Wouldn't it be nice to see who cites henry baker or eugene mcdonnell?  They are probably worth reading
[11:25:05] *** Joins: shka (~herr@109.231.0.226)
[11:25:42] <sm2n> But yeah, you would probably want some form of content-addressed networking
[11:26:39] <sm2n> I guess ipfs is popular now, but there exists more fundamental work
[11:26:48] <gilberth> Well, I find that very useful, e.g. Tarn Burton mentions sth about stream columns, I never thought about. <http://clim.rocks/clim-spec/15-1.html#_769> I am grateful for that note. Somebody else may come across that and say "Nah, that's false, blah blah". It would have been even better when this comment would be point to the Gray Stream protocol, too. Imagine reading the latter and having this clim-spec comment available.
[11:26:49] -ixelp- CLIM 2 Specification — 15.1 Basic Output Streams
[11:27:08] <sm2n> such as Named Data Networking
[11:28:38] <gilberth> With my clim-spec however I am safe wrt to spam and trolling, just because my audience is very small. And there is a spam filter installed already.
[11:29:25] <gilberth> I mean anybody could annotate the clim-spec, no registration or anything required. Bots like to scribble spam there.
[11:29:41] <moon-child> how does the filter work?
[11:30:19] *** Quits: rogersm (~rogersm@90.166.180.250) (Ping timeout: 256 seconds)
[11:30:20] <gilberth> The first line of defense is (SEARCH "http" COMMENT).
[11:30:29] <moon-child> haha
[11:30:36] <moon-child> I thought you like hyperlinks?
[11:30:48] <moon-child> 🤔
[11:30:55] <gilberth> lol, but not to child porn or funny pills.
[11:33:37] <gilberth> And certainly not on my site with jurisdiction as it is. Especially not in Hamburg.
[11:37:51] <moon-child> are you responsible for the things you link to?
[11:39:12] <gilberth> Under jurisdiction by the local court you are held responsible for the content on a site you link to, yes. Completely nuts.
[11:40:51] <gilberth> My site also lacks an imprint. Sue me, if you wish.
[11:41:37] <gilberth> And my annotation support has no filter for copyright infringements. Sue me again.
[11:43:01] <gilberth> moon-child: Placing the text http;//example.com/ on your site is safe. Wrap <A HREF=..> </A> around and you're bust. Makes sense? Makes sense!
[11:44:51] <kakuhen> is there something like cl-who but for css
[11:44:57] <kakuhen> dumb question that randomly occurred to me
[11:45:39] <moon-child> gilberth: well, there are sumb dumb laws I have heard of.  But that is one of the weirder ones
[11:46:13] <sm2n> kakuhen: There are many. I can personally recommend css-lite as one I have used
[11:46:13] *** Quits: OlCe (~user@lfbn-nic-1-122-111.w2-15.abo.wanadoo.fr) (Remote host closed the connection)
[11:46:17] <moon-child> kakuhen: no idea.  But I would just write css by hand.  It is not a terrible syntax, and there is less call to make it dynamic vs html
[11:46:36] <gilberth> kakuhen: You can work from <http://clim.rocks/gilbert/css.lisp>, if you wish. Never used that and not considered done or anything.
[11:46:43] <kakuhen> moon-child: yeah I am currently writing css by hand but I also want to make theming my site a bit easier, and CSS doesn't have notion of variables AFAIK
[11:47:02] <sm2n> moon-child: heresy! s-expressions or bust
[11:47:07] <gilberth> And I don't like cl-who. I like to build a document tree proper and then just dump it.
[11:47:41] <gilberth> kakuhen: m4 exists. scnr
[11:47:54] <moon-child> gilberth: I do the same thing.  Goal is to be able to easily render tex/whatever from the same source.  Though I have not bothered to make the nodes generic yet
[11:48:11] <sm2n> I think that's what plump does, which I've seen people recommending recently. Can't say I've used it though.
[11:48:26] <kakuhen> gilberth: well ideally i want something in CL because I am very stubborn and want to be consistently using CL for templating my website
[11:48:35] <moon-child> (that said I also do not like things like cl-who because they are syntactically heavyweight.  Need reader macros)
[11:49:00] <sm2n> moon-child: I don't recall cl-who needing reader macros
[11:49:04] <gilberth> The mentioned clim-spec works that way. Each time you request a page, a document tree is generated and dumped. There are no HTML files harmed.
[11:49:08] <kakuhen> I'm gonna take a look at css-lite for now. Thanks for recommendation, sm2n.
[11:49:12] <sm2n> it does use macrolet though
[11:49:28] <moon-child> sm2n: cl-who does not have reader macros.  I need them, though, because I do not want to have to write quotation marks around literal text
[11:49:37] <sm2n> heh
[11:50:01] <sm2n> What does that look like?
[11:50:43] <moon-child> [p this [em is] some [if cond (concatenate 'string "te" "xt") "bullshit"]]
[11:50:52] <moon-child> p and em are names the parser knows about
[11:50:58] <moon-child> so it reads bare names as strings
[11:51:08] <sm2n> also re: render tex/whatever. I use racket's pollen package for my (very much unfinished) website, which works similarly
[11:51:15] <moon-child> if is one it does not.  So the contents there are read as a list to be evaluated according to the normal rules
[11:51:25] <sm2n> Ah, looks like rebol, evaluates like pollen
[11:51:25] <moon-child> so you could as easily say [concatenate 'string "te" "xt"]
[11:51:42] <gilberth> I was lazy. I use a single macro called $ and just write ($ :p "Please refer to " ($ :a :href "http://example.org/" "the example organziation") " for more information.") But then there is very little verbatim text in what I do. I just like to use MAPxyz and LOOP to generate these trees.
[11:51:54] <moon-child> I am annoyed that , is not first class.  So I can not compose: `[foo ,bar].  But that is minor
[11:52:23] <moon-child> (others have complained similarly that you cannot say `#C(,x 5))
[11:52:36] <sm2n> Yeah, that is kind of awful
[11:53:07] <moon-child> gilberth: so you do not write documentation for your code? :)
[11:53:10] <gilberth> Oh. I have a second macro @ for splicing. ($ :ul (@ (mapcar (lambda (s) ($ :tt (string s))) (apropos-list "FOO")))
[11:53:31] <moon-child> gilberth: and, did I not hear you were making some markdown derivative?
[11:53:55] <moon-child> re splicing, I simply allow lists and then flatten them.  That is one advantage of using standard objects for nodes rather than lists, as it would be ambiguous otherwise
[11:54:23] <gilberth> moon-child: Not in s-expression notation. I use my now own variation of markdown for that. However the tool uses above mentioned macros to construct a document tree to be rendered as HTML.
[11:54:57] <hayley> https://www.youtube.com/watch?v=1G-YVPtA3GQ
[11:54:57] -ixelp- Gary Numan Complex - YouTube
[11:55:06] <sm2n> Man, this conversation is making me realize how many wheels are reinvented constantly
[11:55:28] <moon-child> I thought we had agreed on sexp supremacy? :/
[11:55:36] <moon-child> sm2n: yea but see the thing is
[11:55:41] <moon-child> my wheel is _actually_ better
[11:55:43] <moon-child> :^)
[11:55:46] <gilberth> moon-child: My stuff is ancient. I came up with that along with Closure and with that it would just have been `(:A :HREF "whatever" "blah"). Having $ and @ macros is the first step to a proper node data type for that.
[11:55:59] <sm2n> Sure, keep telling yourself that
[11:56:54] <gilberth> Well, I came up with (:A :HREF "http://example.com" "click me") and called it LML in like '95 or so. I perhaps was first. :-p
[11:57:06] <moon-child> in my defense, I was not born yet
[11:57:18] <sm2n> same
[11:58:07] * moon-child gestures broadly towards naggum xml rant
[11:58:35] <sm2n> I thought ranting about xml is passé now
[11:58:43] *** Joins: rogersm (~rogersm@90.166.180.250)
[11:58:44] <gilberth> I had my first baby browser in CL at the same time frame.
[11:59:17] <sm2n> We live in the JSON^WProtobuf^WgRPC era
[12:00:10] <gilberth> Well as White_Flame put it: We are at a fashion industry.
[12:00:22] <moon-child> still living up the XmlHttpRequest life
[12:00:38] <moon-child> XMLHttpRequest?  WHy do they capitalize the one but not the other??
[12:01:27] <gilberth> WhyDoTheyWriteThatFunnyAnyWay? Or is it Anyway?
[12:01:31] <sm2n> that is not very async of you
[12:01:35] <sm2n> it's all Fetch now
[12:02:01] <sm2n> I don't know how people keep up with web trends
[12:02:25] <pjb> There's a secret RSS feed with all the new trends pushed on.
[12:02:42] <moon-child> I still don't _really_ know how (say) 2007 web works.  I am vaguely aware that it is a box-based layout model, and javascript has coroutines.  But I do not know the details
[12:02:53] * sm2n gestures broadly towards alan kay pop culture rant
[12:03:04] <moon-child> (nor do I care to)
[12:03:19] <gilberth> coroutines? Nah, event handlers.
[12:03:40] <sm2n> pjb: I would ask where it is, but it is probably too high-volume for sane human consumption
[12:04:01] <hayley> pjb: http://reddit.com/r/webdev.rss by chance?
[12:05:15] <kakuhen> sm2n: you don't
[12:05:18] <pjb> It was a joke. Indeed, such a feed would be to high-volume.
[12:05:36] <hayley> Well, The Poverty of Post Open Source has shit SEO, as it appears approximately nowhere in search results for "post open source"
[12:05:49] <kakuhen> that's why in making my website I have copies of the html 4.01 and css 2.1 specifications
[12:05:50] <pjb> Like we should ask youtube for a playback speed x 100 or something like that to be able to watch all the videos that are uploaded on youtube…
[12:06:09] <moon-child> gilberth: well.  One event handler can suspend itself, and another will be able torun, right?  That's a coroutine in mhy book
[12:06:12] <kakuhen> modern web "standards" get updated daily and so do modern frameworks
[12:06:25] <kakuhen> so i just stick with what seems to have stayed stuck in time
[12:06:31] <sm2n> hayley: It appears that your budding career as a content marketer has been nipped in the bud
[12:06:33] <epony> mailing lists 1 : 0 webshit
[12:06:50] <hayley> Random guess, POS is a relatively recent phenomenon, and most results after the first are just "open source" without the "post" part.
[12:06:58] <gilberth> moon-child: Suspend? No, all you could do is to have another function been called on a certain event.
[12:07:31] <hayley> async/await?
[12:07:59] <gilberth> hayley: Is that call/cc?
[12:08:02] <moon-child> isn't there something like 'await'?
[12:08:04] <moon-child> and 'Promise':
[12:08:06] <moon-child> ?
[12:08:16] <hayley> I dunno, probably not.
[12:08:18] <gilberth> Certainly didn't exist in 2007.
[12:08:28] <sm2n> yes, those are recent additions
[12:08:29] <hayley> Some sort of single-shot delimited continuation.
[12:08:51] <sm2n> async/await is post-2015 at least I think
[12:09:15] <sm2n> Yeah, ECMAscript 2017 added async/await
[12:09:35] <epony> processes when?
[12:09:38] <kakuhen> ES6 yeah
[12:10:08] <kakuhen> modern javascript looks quite different from what I recall seeing a decade ago
[12:10:13] <kakuhen> people seem to be obsessed with closures and async stuff now
[12:10:16] <sm2n> There are web browser analogs to processes already — they are called Web Workers
[12:10:41] <kakuhen> like instead of writing `expression` you now have `var expression = () => actualexpression();`
[12:10:53] <kakuhen> idk why ppl do this but they do
[12:11:06] <ck_> why the last pair of parens?
[12:11:30] <sm2n> That's not exactly right, but there is an idiom like that
[12:11:36] <gilberth> Ok. that is new to me. Can a regular function call a "async" function? And why does a function need to be declared "async"? /me shrugs.
[12:11:46] <sm2n> They call them IIFE (Immediately Evaluated Function Expression)
[12:12:00] <sm2n> It's a workaround for the funky scoping rules
[12:12:32] <gilberth> Web Workers are not very useful.
[12:12:59] <kakuhen> yeah that's right sm2n; i never knew they had that name
[12:13:08] <kakuhen> it's just something i see very often in modern javascript code
[12:13:13] <kakuhen> to steal wikipedia's example `(() => { /* ... */ })();`
[12:13:29] <epony> https://en.wikipedia.org/wiki/Operating_system#Components
[12:13:37] <moon-child> gilberth: read 'what colour is your function'?
[12:13:44] * hayley gets a segfault while playing a game.
[12:13:49] <moon-child> https://journal.stuffwithstuff.com/2015/02/01/what-color-is-your-function/  this guy
[12:13:50] -ixelp- What Color is Your Function? – journal.stuffwithstuff.com
[12:13:52] <gilberth> kakuhen: Yeah, that's just new syntax.
[12:14:14] <kakuhen> yaeh i dont think it existed before es6
[12:14:15] <gilberth> moon-child: That answers my question. Thanks.
[12:14:19] <ck_> my functions are the same colour as the boat house at hereford
[12:14:50] <gilberth> Don't they say that red code runs faster? I pick red then.
[12:15:06] <moon-child> lol
[12:15:32] <sm2n> brb, changing my syntax highlighting
[12:15:56] <ck_> gives a new meaning to the term "flame graph"
[12:16:35] * gilberth realizes that his comments are of redish-orange shade.
[12:17:19] *** Joins: OlCe (~user@lfbn-nic-1-122-111.w2-15.abo.wanadoo.fr)
[12:17:41] <moon-child> mine are blue, like you
[12:17:56] <sm2n> That reminds me, I need to report a bug to heisig
[12:18:04] <sm2n> might as well do that now
[12:21:10] <contrapunctus> Can anyone say why `merge-pathnames` might be called with NIL (which results in an error) in this function? `file` is a string... https://paste.rs/NeC
[12:23:00] <ck_> don't you want format nil?
[12:23:09] <sm2n> ^
[12:23:11] <contrapunctus> lol, just realized that xD
[12:23:38] <contrapunctus> thanks ^^
[12:23:38] <gilberth> And why using FORMAT anyway, when we have pathname objects?
[12:25:27] <gilberth> How about (setf file (make-pathname :name (format nil "~a-~d" name count) :defaults file))?
[12:26:56] <gilberth> I mean, how this is right now it breaks with a host or directory or version present.
[12:34:40] <moon-child> contrapunctus: won't that loop forever?
[12:34:47] <moon-child> oh, no, I missed the WHILE
[12:35:13] <contrapunctus> gilberth: thanks, updated
[12:35:18] <gilberth> My take: <http://termbin.com/sa5g5>
[12:36:55] <moon-child> hmm, would be cool if the 'then' were right-aligned with the =
[12:37:18] <moon-child> wonder if any prettyprinter does it like that
[12:37:52] <gilberth> I invite you to fix Emacs. There is a reason I still do not like LOOP.
[12:38:49] <kakuhen> fixing emacs is too much effort
[12:39:09] <sm2n> It is called emacs-ng
[12:39:11] <moon-child> the reasons I do not like loop have more to do with missing features.  I want at least to be able to COLLECT into an array and to not have to write  'finally (return ...)'
[12:39:13] <kakuhen> i appreciate the thankless work that gets put into IMEs when I decided to try out the Japanese IME in Emacs
[12:39:42] <moon-child> well, I could snatch sicl loop and add those.  But
[12:39:42] <kakuhen> most conversions are wrong and the suggestions are placed in the echo box...
[12:40:57] <kakuhen> the echo box is a natural choice, but it has the limitation of the contents going away the moment you push any key
[12:41:01] <gilberth> Old school: <http://termbin.com/hso5j>
[12:41:12] <moon-child> no PROG?
[12:41:18] <sm2n> Another deficiency is that loop does not have a good way to skip iterations
[12:42:21] <moon-child> also there is no counterpart to FINALLY.  Why not (loop initially collect 5 into x)
[12:42:22] <contrapunctus> Uhm...why does dexador:fetch not mention the possible values for :if-exists anywhere in its documentation :\
[12:42:57] <kakuhen> your first mistake was assuming fukamachi documents anything
[12:43:00] <contrapunctus> lol
[12:43:21] <contrapunctus> ah, it's the same as `with-open-file`
[12:43:34] <sm2n> moon-child: what would that do?
[12:44:29] <gilberth> moon-child: <http://termbin.com/9x58>
[12:45:21] <moon-child> sm2n: the INITIALLY clauses are run before the first loop iteration.  In that case, you would be able to collect things into x in the body of the loop, but x would start off with x in it
[12:45:51] <sm2n> you can do that though, it's just awkward
[12:45:53] <moon-child> note if you say (loop with x = (list 5)) you can not collect things into x
[12:46:06] <sm2n> oh, you can't?
[12:46:12] <moon-child> indeed
[12:46:15] <sm2n> That's awful
[12:46:19] <gilberth> FOR K FROM 0 WHEN (ZEROP K) COLLECT X ;would do. I guess.
[12:46:49] <gilberth> Or use the program feature.
[12:46:59] <moon-child> gilberth: I think sbcl does not have conditional constant propagation :)
[12:47:17] <moon-child> but regardless that's really ugly.  I would prefer to do the math myself.  Or cons the element onto the front at the end.  Or w/e
[12:47:47] <contrapunctus> gilberth: ಠ_ಠ
[12:48:00] <gilberth> FOR INITIAL = T THEN NIL WHEN INITIAL COLLECT X ;Like this, perhaps?
[12:49:25] <gilberth> Well I use this FOR K FROM 0 for printing something separated by a separator. Like (loop for x in list for k from 0 do (unless (zerop k) (princ ",")) (print x))
[12:50:13] <gilberth> So I won't need INITIALLY but NOT-INITIALLY or whatever would be a better name.
[12:51:00] <moon-child> what about: (loop for x in list for #:dummy = nil then (princ ",") do (print c))
[12:52:05] <contrapunctus> I want to dispatch to different handler functions based on the URL passed (its domain, path, and so on)...would that be a task for a web framework? 🤔️
[12:52:16] <gilberth> You can say FOR NIL = NIL THEN (PRINC ","), even.
[12:52:23] <moon-child> right
[12:52:36] <moon-child> though I would prefer (), because it emphasizes that it is the empty (de)structure
[12:53:13] <moon-child> contrapunctus: 'uri parser', probably
[12:53:33] <moon-child> contrapunctus: https://github.com/fukamachi/quri  since you are already using fukamachi-ware
[12:53:33] -ixelp- GitHub - fukamachi/quri: Yet another URI library for Common Lisp
[12:53:57] <sm2n> contrapunctus: That is conventionally called a url router
[12:54:06] <kakuhen> that reminds me, when drafting build instructions for some software im making with a friend
[12:54:35] <gilberth> Then that would be FOR () = () THEN (PRINC ",") and would not be the empty destructure. As (destructuring-bind () (princ ",") ...) would fail.
[12:54:53] <kakuhen> wait I forgot I shouldn't post here because IRC would send each line as a separate instruction
[12:55:03] <kakuhen> but let's just say the last step was ??? and my friend jokingly asked if I took inspiration from fukamachi
[12:55:06] <moon-child> gilberth: no, I mean FOR () = nil
[12:55:18] <moon-child> nil is the null object.  () is the empty destructure
[12:55:24] <kakuhen> s/last/pentultimate 
[12:55:27] <gilberth> And THEN?
[12:55:28] <moon-child> and, the destructuring forms of loop are different from those of destructuring-bind
[12:55:46] <moon-child> gilberth: good point.  If you really care about clarity, you should do (progn (princ ",") nil)
[12:56:25] <gilberth> moon-child: Exactly. NIL is for "just ignore this" not "match ()". So I would prefer NIL. To be somewhat analogous to destructuring-bind.
[12:57:05] <gilberth> moon-child: Too much to type. ;-)
[12:57:41] <gilberth> And shouldn't it be (progn (princ ",") '()), then? /me shrugs.
[12:58:08] <moon-child> gilberth: the destructure (x y) requires a parameter which has at least two elements.  The destructure (x) requires a parameter which has at least one element.  The destructure () requires a parameter and does not care about how many elements it has.  Or: the () in the destructure (x . ()) matches everything, so why can it also match everything in another context?
[12:58:37] <moon-child> gilberth: I am apparently alone in this, but I do not like '().  The ' in '(x . y) applies to the ., not to the ().  () by themselves do not need a '
[12:59:29] <sm2n> moon-child: I agree! But 't or t?
[12:59:34] <moon-child> why do we not write '1 or '"hello" or '#(1 2 3)?
[13:00:26] <gilberth> Well, I would use NIL as "match anything, don't bother if it's a list even." a wildcard. Like in for (nil x) = ...
[13:00:40] <gilberth> moon-child: I don't write '() ever.
[13:00:41] <moon-child> I would write for (() x) = ...
[13:00:53] <moon-child> (actually, schemers must write '#(1 2 3).  And '().  I pity them.)
[13:01:59] <gilberth> CL once was like that. For vectors at least. IIRC.
[13:02:18] <sm2n> moon-child: I just opened guile and that's not true
[13:02:24] <sm2n> #(1 2 3) works fine
[13:02:35] <gilberth> moon-child: Ok. I just don't read "wildcard" when I see (). I do when I see NIL, which is a symbol after all.
[13:02:52] <sm2n> It seems that is correct in chez though
[13:02:57] <moon-child> sm2n: it is not portable.  Or perhaps it is, but only in a newer version.  The details escape me, but '#() is definitely a thing
[13:02:58] <sm2n> Classic scheme
[13:03:06] <gilberth> sm2n: Try CLtL1. Could also have been structures not self-evaluating.
[13:03:09] <sm2n> Seems so
[13:03:28] <sm2n> Where do I get a CLtL1 implementation?
[13:03:44] <moon-child> would be neat if there were more general destructing.  for #(x) = ....
[13:03:49] <moon-child> for #S(... x ...) = ...
[13:04:05] <gilberth> sm2n: Try the CMU AI repo. :-)
[13:04:16] <sm2n> moon-child: I think that is incompatible with an extensible reader
[13:04:58] <sm2n> gilberth: Maybe next time I am in the mood for some software archeaology
[13:05:26] <moon-child> sm2n: why so?
[13:05:49] <moon-child> #(x) is just a vector of symbol x
[13:06:10] <moon-child> #S(some-struct :x y) is just an instance of some-struct the value of whose slot x is symbol y
[13:06:30] <sm2n> I suppose that is true
[13:07:30] <contrapunctus> So do I use something like quri in conjuction with CLOS?
[13:07:50] <sm2n> contrapunctus: What exactly are you trying to do?
[13:09:02] <moon-child> contrapunctus: if you like
[13:09:17] <moon-child> contrapunctus: I just used a hash table
[13:10:31] <contrapunctus> sm2n: writing a web scraper
[13:11:08] <sm2n> Oh
[13:11:17] <sm2n> That is definitely one way to do it then
[13:13:14] <sm2n> Honestly, you could probably finagle snooze to do what you want
[13:13:40] <sm2n> It is essentially a polished version of quri + hash table + clos
[13:14:29] <sm2n> https://github.com/joaotavora/snooze
[13:14:30] -ixelp- GitHub - joaotavora/snooze: Common Lisp RESTful web development
[13:14:37] <moon-child> isn't that a server
[13:14:43] <sm2n> No, it's a router
[13:14:51] <moon-child> ok
[13:14:51] <sm2n> You can hook it up to a server though
[13:15:22] <sm2n> But nothing is stopping you from calling HANDLE-REQUEST with your url, and using DEFROUTE to write your scraper
[13:16:07] <sm2n> https://github.com/joaotavora/snooze/blob/master/api.lisp#L274 This is the entire server part
[13:16:08] -ixelp- snooze/api.lisp at master · joaotavora/snooze · GitHub
[13:16:30] <sm2n> (oh no! progv)
[13:19:10] <sm2n> Anyway moon-child, I just checked and iterate does your collect sequence type thing
[13:19:44] <sm2n> you can do (iterate (for i from 1 to 10) (collect i result-type 'vector))
[13:20:19] <moon-child> cool
[13:21:23] <moon-child> (another thing I want is a version of collect which produces a lazy sequence.  Did not bother to implement that yet in my loop thing.  But should not be too hard)
[13:21:41] <moon-child> I also want to be able to collect major cells of a multi-dimensional array
[13:21:45] <hayley> https://www.youtube.com/watch?v=E7SKt6cfH44
[13:21:45] -ixelp- How Die Hard Uses Beethoven For Hans & Why It's Amazing - YouTube
[13:22:26] <moon-child> admittedly these are really just vanity features
[13:22:28] <moon-child> but
[13:22:50] <sm2n> major cells?
[13:23:29] <sm2n> Is that like conformal array slicing?
[13:23:45] <moon-child> you can think of an n-dimensional array as an vector of n-1-dimensional arrays, which are major cells
[13:24:04] <sm2n> oh
[13:24:51] <moon-child> *a.  It appears that for my lost ' I have a surplus of n.  Not worth it
[13:25:23] <sm2n> I don't understand
[13:25:35] <moon-child> I wrote 'an vector'.  The 'n' was superfluous
[13:25:43] <sm2n> oh
[13:26:55] <sm2n> have you played with SERIES?
[13:27:04] <moon-child> no
[13:27:36] <moon-child> I think I have heard of it, though
[13:29:30] <moon-child> my recollection is their docs say 'in principle, we should be able to generate super beautiful amazing code.  But we don't yet.'
[13:29:54] <sm2n> It apparently works in the common case
[13:32:41] <sm2n> They have some fancy algorithm detailed in the docs for how it works
[13:44:57] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[13:45:28] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[13:50:18] <sm2n> oh huh, iterate has an generic accumulate clause that takes an initial value
[13:50:28] <hayley> gilberth: https://branchfree.org/2019/02/28/paper-hyperscan-a-fast-multi-pattern-regex-matcher-for-modern-cpus/ apparently beat me to it: "when it’s possible to check that an automata, whether NFA or DFA, can’t leave its local neighborhood of current states without seeing easily detected ‘event’, it’s possible to use SIMD to scan for that event."
[13:50:28] -ixelp- Paper: Hyperscan: A Fast Multi-pattern Regex Matcher for Modern CPUs – Branch Free
[13:50:42] <hayley> "For example, the pattern fragment /[^\n]*foo/ can scan for a newline, which breaks out of the \n state, or an ‘f’, which may commence the start of a ‘foo’."
[14:08:24] <dave0> nite all
[14:08:55] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[14:09:42] <hayley> https://www.youtube.com/watch?v=mcio_lL0iDk
[14:09:42] -ixelp- When The Machines Rock (Remastered) - YouTube
[14:35:48] <hayley> Hm, what if the loop analysis for DFAs detected what you had to provide in order to get stuck in an infinite loop (or not)?
[14:36:28] <hayley> Then we'd do be doing a bit of interpretation (if you can call it that) rather than matching DFA structure.
[14:56:21] <hayley> https://old.reddit.com/r/KingCrimsonCircleJerk/comments/rvj685/breaking_english_musician_robert_fripp_dined/
[14:56:22] -ixelp- [BREAKING] English musician, Robert Fripp dined peacefully in his home this morning aged 75. He had Cat Food : KingCrims [...]
[14:58:57] *** Quits: Alfr (~Alfr@user/alfr) (Ping timeout: 240 seconds)
[15:10:38] <contrapunctus> ,shoot hayley 
[15:12:37] * hayley dies
[15:14:07] * contrapunctus looks in confusion at the flag hanging out of the barrel saying "Bang!"
[15:28:04] <hayley> I can't just get any ole artist to draw up a cover for a zine, can I? They probably should be somewhat familiar with the subject.
[15:28:48] <moon-child> gah!  Now my loops are being indented in a way which is downright misleading
[15:35:02] <selwyn> hayley: why not
[15:35:07] <selwyn> whats the subject
[15:36:11] <hayley> "The poverty of post open source: what to do about the Left's foray into intellectual property"
[15:36:39] <selwyn> if you are specific about what you want to see i don't see a problem
[15:37:21] <selwyn> consider that artists working for commission probably have to do stuff all the time for which they don't know much about the subject matter
[15:38:45] <ck_> that sounds like almost any "artist's impression" in any scientific article
[15:39:36] <hayley> I'm not sure what I want to see though. My initial guess was to make an ironic depiction of some tech company building, but with the corporate symbology replaced.
[15:40:03] <selwyn> https://www.youtube.com/watch?v=v-NH6TGZTcc
[15:40:04] -ixelp- Kirk draws Dignity (The Simpsons) - YouTube
[15:45:39] <hayley> But it feels clichéd to me, even though I don't know if anyone drew that.
[15:50:29] <moon-child> whaaat
[15:50:35] <moon-child> gilberth pls explain
[15:50:41] <moon-child> or kakuhen idk somebody who knows about browsers
[15:50:47] <moon-child> why can't I say <p><ul></ul></p>
[15:51:28] <hayley> You're putting an unordered list into a paragraph?
[15:51:43] <moon-child> can't I?
[15:52:03] <hayley> I'm pretty sure HTML is supposed to have an idea of, say, "top level forms" and P and UL are some.
[15:52:52] <moon-child> but, I can say <span><ul></ul></span> and nobody seems to mind
[15:53:01] <hayley> https://www.w3.org/TR/html401/struct/text.html#h-9.3.1 "block-level elements" rather.
[15:53:02] -ixelp- Paragraphs, Lines, and Phrases
[15:53:57] <moon-child> what a pain.  I can have a p inside of a span, and a span inside of a p, but never a p inside of a span inside of a p
[15:53:58] <hayley> DIV and SPAN just group, they don't have any semantic meaning like a "paragraph" does.
[15:54:01] <moon-child> what sort of composability is this?
[15:54:53] <hayley> A weird sort.
[15:55:17] <hayley> But having a P transitively in a P is considered weird.
[15:56:20] <hayley> https://www.w3.org/html/wg/wiki/FlowContentInObject#For_block_content_as_children_of_object_as_children_of__p claims it's so that auto-closing P isn't more complicated.
[15:56:21] -ixelp- FlowContentInObject - HTML WG Wiki
[15:56:47] <moon-child> hmm.  I guess the problem is that they are conflating content with presentation
[15:57:27] <moon-child> hayley: auto-closing p is not until html5, though, no?
[15:57:29] <hayley> How stupid to auto close, still. Surely we can afford to, I dunno, not make broken documents?
[15:57:44] <moon-child> and: this is what I tried to resolve with <p><span><p></p></span></p>.  SHould not be hard to figure that out
[15:57:58] <hayley> I don't know what sorts of auto-closing is done, sorry.
[15:59:19] <moon-child> 'Surely we can afford to, I dunno, not make broken documents?'  that ship has sailed, with xhtml
[15:59:26] <moon-child> quirks mode?  Ha!
[16:07:55] <selwyn> i thought <p> always autoclosed, at least back in the day when nothing conformed anyway
[16:24:55] *** Quits: OlCe (~user@lfbn-nic-1-122-111.w2-15.abo.wanadoo.fr) (Read error: Connection reset by peer)
[16:26:39] <selwyn> though perhaps i was not familiar with best practice at age 10
[16:30:33] *** Joins: random-nick (~random-ni@87.116.167.125)
[16:32:41] <ck_> the parsing code of the earlier browsers must be a fun read
[16:33:02] <ck_> well, the current one as well I guess. I think there was an article on how the Internet Explorer legacy still can be found
[16:36:13] <selwyn> legends never die
[16:36:33] <ck_> <marquee>Yes.</marquee>
[16:43:11] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: -now)
[16:46:51] <ck_> newsline just scrolled past, informing me that 48.000 .eu-domains, previously owned by britains, have been um.. "repo'd" ?
[16:47:08] <selwyn> more national tech news
[16:47:13] <selwyn> i need to keep a list
[16:47:59] <ck_> the article links to https://eurid.eu/en/register-a-eu-domain/brexit-notice/
[16:48:00] -ixelp- Brexit notice - EURid
[16:48:09] <ck_> I hadn't even considered things like that. What a strange timeline
[16:48:11] <selwyn> by far the most popular eu domain was the main brexit site leave.eu
[16:48:33] <ck_> don't think I've ever visited that tld at all
[16:48:54] <selwyn> now that they won, they don't have to give a shit about their domain
[16:49:12] <selwyn> and the pro-europeans who established websites will have to give them up lmao
[16:49:45] <selwyn> iirc there was going to be a rule that you could establish a domain name if it had something to do with 'the european project'
[16:51:22] <ck_> whatever that means
[16:51:34] <selwyn> well, its clearly not the case now
[16:53:09] <selwyn> despite being free of brussels' control, shinmera has registered a .eu domain name
[16:56:16] <selwyn> > It follows Leave.EU’s reported failed attempt to keep hold of the domain by moving its registered office to Waterford, Ireland.
[16:56:18] <selwyn> lol
[16:57:01] <epony> the "leave an island" is not as easy as you think
[16:57:51] <epony> you can always swim to the nearby "mudland"
[16:58:06] <epony> but going back.. takes a lot more
[16:58:48] <pl> Shinmera has a company in EU
[16:59:09] <pl> As well as Switzerland being now more tightly bound to EU than UK
[16:59:58] * selwyn remembers when we were promised that we would be free like switzerland
[17:00:10] <selwyn> instead, we get to be even more free :p
[17:00:12] <pl> Well, you're more free 
[17:00:14] <selwyn> yes
[17:00:19] <pl> Free to suffer 
[17:00:35] <pl> FWIW EU treats its client states better than third countries 
[17:01:08] <selwyn> what's a client state in this context? eea? or greece or sth
[17:01:33] <epony> to some countries, EU is just some nutjobs in BE and NL in 1-2 buildings
[17:01:38] <pl> Switzerland, Norway, probably few more 
[17:02:13] <epony> but to me, EU is a unification that should have preceded the 20th century
[17:03:00] <epony> too bad the information epoch came so late, blame the religion for suppressing education and technology
[17:03:30] <pl> Greece is a full member, it gets more say than either Norway or Switzerland, and a lot more say than increasingly cut off Isle in the north sea known as UK 
[17:04:05] <selwyn> there is a theory that yugoslavia was a great idea that would have been extremely successful, had it been implemented some decades earlier
[17:04:06] <epony> we think of Greece as a domionion state of England
[17:04:15] <selwyn> well
[17:04:54] <shka> selwyn: yugoslavia was a fairly successful country honestly 
[17:04:59] <shka> short lived perhaps
[17:05:03] <selwyn> i agree 
[17:05:20] <shka> and had a cool emblem
[17:05:25] <selwyn> i mean successful in the sense of lasting a long time
[17:05:46] <epony> blame the surrounding "hungry" and "tormenting" empires of the latin, germanic and greko-turkic region
[17:06:50] <selwyn> a visiting greek academic chided some of us for pro-eu positions, yet he thought that leaving the eu was dumb and lamented that there weren't any european leaders with vision like the old days
[17:06:52] <epony> when you're surrounded by animalistic hostiles, you get torn apart
[17:07:22] <epony> which "old days" were those?
[17:07:22] <pl> Well, Greeks got a bit burnt by complexities of euro 
[17:07:24] <selwyn> that's what made me conclude that the eu will lumber on regardless
[17:07:45] <pl> Doesn't help that the Austrian/Chicago economics kinda took root at th. Time 
[17:08:05] <ck_>  did you read this? http://news.bbc.co.uk/2/hi/uk_news/england/tyne/2974083.stm
[17:08:05] -ixelp- BBC NEWS | UK | England | Tyne/Wear | Guillotine death was suicide
[17:08:31] <epony> BBC is not what the video searches return most of the time ;-)
[17:08:40] <selwyn> the people who really have a right to be pissed off (s europe) in practice don't form the kind of embittered, militant minority that can destroy a political union/empire/whatever
[17:08:55] <selwyn> and the opposition that you do get (poland/hungary) appears to be of the meme variety from a distance
[17:09:15] <epony> Poland is a strong member, Hungary is a former half of the central empire
[17:09:25] <pl> Poland and Hungary aren't really opposition 
[17:09:27] <epony> they get a much stronger say than.. say Belgium
[17:09:43] <epony> correct, PL and HU are pro-EU
[17:09:56] *** Joins: Alfr (~Alfr@user/alfr)
[17:09:58] <epony> as are most of the former eastern block
[17:10:03] <pl> More pocket despots trying to replicate Putin 
[17:10:26] <epony> "intellectual dwarves" ;-)
[17:10:45] <pl> Orban at least seems somewhat competent in being a despot 
[17:10:53] <epony> are just "on payroll" politicians paid to pretend to be some "position" which is betrayal of the people
[17:11:24] <epony> the real opposition are former older members
[17:12:02] <epony> who install pseudo opision mini-groups in lead on new members and controls them on a leash to be "guilty" for not receiving the funding that is supposed to go to them
[17:12:24] <epony> that's how the old members separate the "union" into two groups much more economically, than politically
[17:12:38] <epony> through "substitute" on a leash fake-politicians
[17:12:49] <epony> and some of these take the role too much to heart ;-)
[17:12:51] <selwyn> will never get over hungary joining the turkic council (presumably to own the libs)
[17:13:15] <epony> there are probably 1-2 turks in Hungary
[17:13:18] <pl> Poland's Law and Justice is more... Meme-worthy 
[17:13:27] <epony> Poland rocks!
[17:13:53] <epony> it's far ahead of the new members and is a large economic power
[17:14:09] <epony> it's like a Germany done better
[17:15:17] <selwyn> well
[17:16:16] <epony> at any rate, the brexit seems to affect mostly the poor countries' immigrants to the UK where they were having problems working legally due to bureaucratic and abusive legal framework
[17:16:17] <selwyn> they remind me of erdogan more than putin, but whatever
[17:16:20] <epony> so, fuck that
[17:16:47] <epony> it's as useful as going to work in Sicily or Cyprus
[17:17:37] <selwyn> extracting economic concessions from the eu by causing a nuisance, stoking baseless public sentiment and general annoyance
[17:19:15] <epony> the GB education system is financialised banking indebtment and then you can't work and can't settle and can't buy property, and can't pay rent at astro-rates, the UK is just not worth going to, for all the advertisements it's no oil, no fuel, no food, no shelter, no protection.. and you get "dissident kills" as economic tooling
[17:19:16] <shka> pl: exactly, incompetent authoritarian 
[17:19:22] <selwyn> as for brexit, i think that many people have long since accepted that it will make us poorer
[17:19:23] <epony> great "nothing'
[17:19:51] <selwyn> but otoh there are more trade restrictions to be introduced soon
[17:19:51] <pl> selwyn: also, Law&Justice is held in thrall of phantom pains and phobias of some critical MPs 
[17:20:28] <pl> And for huge part of it, EU is external concern and they don't really seem to grok foreign affairs 
[17:20:52] <epony> btw Yugo was doomed the moment it exited the Russian sphere in '61 the US marked it for cancellation and bombing
[17:21:17] <shka> this is honestly funny
[17:21:39] <epony> it's true
[17:21:49] <shka> because in Poland, current wave of covid was not met with new sets of regulations
[17:22:22] <pl> Well, it's funny like WW2
[17:22:30] <pl> At some point you better laugh than cry 
[17:22:38] <selwyn> hm
[17:22:43] <epony> the funny mention of WW2, did you know that US funded DE before and during the wars?
[17:22:47] <shka> and the main reason is that there are a couple of MPs that would not stand it, and the Party can't allow for revolt of a single member because the majority is simply not there 
[17:23:16] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[17:23:27] <shka> so the government is not only  incompetent, it is also paralyzed 
[17:23:46] <shka> which is honestly maybe for the better xD
[17:23:58] <pl> Not to mentioned all the crap we find out from hacked personal email of certain minister 
[17:24:02] <epony> (and then US went on to "defend" Germany, and capture it's document and technical base as trophey so it's not in the other "allies")
[17:24:46] <pl> (they reused post Iran-Contra GOP playbook of using private emails) 
[17:24:57] <epony> (US can't allow DE to be split without it having a piece to buffer their CH deposits)
[17:26:04] <pl> Also they are paralysed by their own ideological need to fight 
[17:26:18] <pl> Which results in ridiculous fines for Turów power plant 
[17:27:10] <epony> you mean DE installs carbon tax on your coal, after it decided its coal deposits are exhausted and it will not be importing any more, so you should not have any power generation as an advantage, while you have deposits..
[17:27:20] <pl> Why there are fines? Ultimately, because polish govt didn't want to pay less than 1/10 of current fines level to fix water access for a bunch of villages on Czech side 
[17:27:22] <epony> DE controls PL ;-) not a surprise
[17:27:26] <epony> DE own CZ
[17:28:11] <selwyn> tbh poland not being able to do foreign policy explains a lot
[17:28:44] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[17:28:51] <epony> Western members expand east through Latinisation and economic and military domination.
[17:29:09] <epony> for the last couple of centuries, before that.. mudslide
[17:29:38] <pl> It's a bit like Conservatives and Daily Mail using EU for scapegoat for everything 
[17:29:57] <pl> Except we also got legitimate pushback from EU on various crap that was pulled internally 
[17:30:25] <pl> Except a bunch of politicians going "but why are we finding out, we just fucked around" 
[17:30:27] <epony> the Benelux "non-countries" use any pretence to deny funding which participating members pay yearly in order to be part of this Union.
[17:31:11] <epony> so they cancel mostly the new members and territories that are transit to their drugs and goods delivery from the middle east route
[17:31:33] <epony> the Luxors snort a lot!
[17:31:41] <epony> and then do stupid things ;-)
[17:32:03] <pl> You know, they are outraged for being put to consequences when they neutralised all internal brakes
[17:32:15] <pl> ... And the consequences are for said neutralisation 
[17:32:48] <selwyn> mm
[17:33:09] <epony> The reality is, avg salary in Luxembourgh is 25-30x that of the poor new members.
[17:33:17] <selwyn> i think that most of the people who pushed for brexit are happy with what they achieved though
[17:33:31] <epony> does not matter ;-)
[17:33:48] <epony> GB is an terrorist island.
[17:34:07] <selwyn> while i imagine that being involved in a long lasting battle with the commission (as poland is) is increasingly not fun even for the earnest polish participants
[17:34:49] <shka> selwyn: honestly, it is not about being "fine"
[17:34:59] <shka> it is about flag rallying 
[17:34:59] <pl> Well, they find themselves unarmed in a battle of wits, like British brexit negotiation team 
[17:35:28] <selwyn> lol
[17:35:36] <shka> selwyn: the thing is, there is no legitimate desire to solve those conflicts
[17:35:52] <pl> Yep
[17:35:54] <selwyn> well
[17:35:58] <selwyn> it does sound like brexit then
[17:36:05] <shka> because they are used as flag rallying method
[17:36:14] <shka> "EU did Poland dirty"
[17:36:15] <shka> or
[17:36:22] <pl> Rumours of polexit are going onf for a long time 
[17:36:26] <shka> "EU wants to mender in the Polish system"
[17:36:40] <pl> But recent fuck up with finances might be unable to be swept under the rug 
[17:37:42] <shka> selwyn: i think that the modern right wing nutjobs are very similar  
[17:37:44] <pl> Personally the new rules for me mean possibly 250€ more in interest payments a month, plus loss of around 4k eur a year compared to last year's rules 
[17:38:07] <shka> leverage identity, identify enemy, avoid responsibility 
[17:38:11] <shka> sounds familiar?
[17:39:02] <shka> it is the bread and butter of all modern less-then-democratic political forces
[17:39:15] <pl> And zi still haven't counted all losses new fiscal plan gives me 
[17:39:47] <selwyn> shka: it does sound familiar
[17:39:48] <shka> pl: personally i was not even tracking this all that well, but holy shit, that new system is just devilishly complex
[17:40:23] <selwyn> but the hyper individualist strain in anglo right wing thought doesn't seem to have an equivalent in central europe
[17:40:30] <selwyn> and its a big difference imo
[17:40:34] <shka> selwyn: well, they are just using the tribal instincts to rule the post-industrial society 
[17:40:37] <pl> I did just basic calcs for the job I'm starting on 17th 
[17:41:01] <shka> selwyn: have you ever seen the "Confederation" party?
[17:41:06] <shka> it is hilarious :D
[17:41:07] <pl> Under last years rules, with same basic assumptions, I'd get 17k more a year (post tax) 
[17:41:20] <selwyn> for example, hungary's pro natalist policies, which appear to be popular, could never be done in the uk, because it would involve the conservatives giving money to the undeserving poor
[17:41:35] <selwyn> shka: you mentioned them once
[17:41:41] <shka> for a reason
[17:41:46] <selwyn> all i can picture is the 'confederate states of europe'
[17:42:03] <shka> those tendencies are present here as well, just on a lesser scale 
[17:42:08] <selwyn> oh
[17:42:09] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:19df:3c96:615a:7101)
[17:42:13] <selwyn> ok
[17:42:24] <shka> but among younger people they are more prevalent 
[17:42:46] <epony> there is no such thing as "plexit" ;-)
[17:43:12] <shka> thing is, they had to form this weird coalition of hyper-individualistic with nationalistic stupid and religious fanatic
[17:43:13] <pl> Well, they tend to recruit from those who rode the economic high and are seduced by supposed "good economical thought" 
[17:43:17] <epony> majority of German exports are made in Poland
[17:43:31] <shka> and that is "confederation"
[17:43:40] <pl> shka: there's nothing weird there. Korwin and Nazis were always close 
[17:43:42] <epony> the other majority is of German exports are made in China
[17:44:04] <epony> also Germany exports fuels made in Russia
[17:44:06] <shka> pl: sure, but still, what a mutilated abomination
[17:44:18] <epony> US is pissed ;-)
[17:44:48] <pl> It's selection by shared attribute of being an asshole 
[17:45:18] <pl> Also, majority of politicians in Poland are acting as dumb populista 
[17:45:26] <pl> *populists 
[17:45:44] <pl> As in, they don't really have anything solid past populism to get the seat 
[17:45:55] <epony> US wants it to sell LNG to Germany and the Northern European from the GB territories of Sweden shelf
[17:47:08] <epony> so US tries whatever through puppet states like BE and others to break any direct fuel projects between EU countries and fuel deposits
[17:47:31] <pl> And ruling party is full of imaginary trauma and resentment and doesn't want to give up power ever 
[17:47:55] <pl> With added benefit that the capo do tutti capi is dissociated from reality 
[17:47:58] <epony> that's why US wants PL to be "rejected" their role in EU, which is not happening
[17:48:47] <pl> He makes Rees-Mogg look like a pub regular in Northern England 
[17:49:01] <epony> it's all about fuel and exports and imports ;-) the politics are fake theatrics
[17:49:23] <epony> energy and stock / resource exchanges
[17:51:20] <epony> you don't just enter world wars for a couple of villages and stone halls
[17:51:50] <epony> US is GB's dog in the CE dogfight
[17:52:42] <epony> so, think about brexit as a US mandated political choice
[17:54:04] <epony> cables are between US and GB (on the ocean bed)
[17:55:25] <epony> the others are Holland (Benelux region) and France ;-)
[17:56:22] <selwyn> i managed to go quite a while without thinking about rees mogg 
[17:57:05] <epony> just "disregard politicians" and look "global realpolitik"
[17:57:42] <ck_> I don't know who that is. Am I winning?
[17:57:59] <epony> none of those "influencers" matter (s/flu/sars/g)
[17:58:59] <selwyn> he is ultra catholic, yet he gets on well with the irish unionists who are so racist they wouldn't let catholics in their swimming pool
[17:59:20] <selwyn> utter reactionary with no shred of genuine identity
[17:59:43] <selwyn> ck: he is a conservative brexit man
[17:59:49] <pl> Also a classical rich daft cunt 
[18:00:31] <pl> Including a fucking top hat 
[18:00:36] <selwyn> well
[18:00:48] <epony> GB/UK/GCHQ still thinks it cunt-trolls the entire world as it did during the imperial colonial epoch..
[18:00:49] <selwyn> it is said to be fake, and an act of great cope
[18:00:57] <epony> "nobody cares" ;-)
[18:01:04] <selwyn> as he is not genuinely upper class
[18:01:16] <selwyn> but wishes he was
[18:01:53] <selwyn> his father edited the times, which is not an aristocrat thing to do
[18:01:56] <epony> they are gonna be in and out of EU at least 2 more times
[18:02:03] <epony> like the did step out and in again
[18:02:19] <epony> and previously again during the 20th century wars
[18:02:29] <pl> He is not nobility in any way, but he is closer to old money than age would say?
[18:02:45] <epony> and many more times historically with France and the Luxors
[18:04:14] <selwyn> pl: i am not sure
[18:04:36] <epony> efectively have demoted themselves from playing the global monarchy and imperial control.. to a dominion island playing with its membership and affiliation to the economic large from their small point
[18:04:46] <pl> Well, he is not proper old money 
[18:04:47] <epony> "eff"ectively
[18:05:01] <pl> But also doesn't fit with standard nouveau riche
[18:05:08] <selwyn> no
[18:05:46] <selwyn> i would say that he is upper middle class, but very aspirational, which is why he bothers to do the whole top hat thing
[18:06:01] <selwyn> which appears to predate his political career anyway
[18:06:20] <epony> and since US is "independent" (jokingly) and pre-occupied with Asian wars.. it's up to GB nuclear submarines again to feck off the African and Australlian seas (protecting their colonies from China investments)
[18:06:39] <epony> "nobody cares about GB politicians"
[18:07:10] <epony> they are hoteliers and small estate buttlers anyway
[18:07:55] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[18:09:05] <epony> the fact is, brexit is just GB trolling the EU, which does not matter, EU is fine without UK
[18:09:41] <epony> but the UK will see weapons deployed on their own turf
[18:09:59] <epony> cause, you know, France is a super-nuclear power
[18:10:20] <epony> and Germany needs protection from seagulls
[18:10:39] <epony> (the Dutch acid shit gulls)
[18:12:01] *** Quits: sunset_NOVA (~sunset_NO@p200300f0870ab9008967795cd8053430.dip0.t-ipconnect.de) (Quit: Leaving)
[18:12:06] <epony> UK/GB is in decline due to lack of fuels, land and colonies, and due to increased consumption in the dominion territories it used to control and rob
[18:12:35] <epony> not because it is politically incorrect or hereditary gene pool depleted
[18:13:51] <epony> that spells doom for the immigrants, you can't house that many population with such poor land production (it's not able to sustain its population without importing grain and fuel)
[18:14:19] <epony> so, more KOЯN will be had
[18:15:07] <epony> and more robbing will be happening of hunger haunted poor colonies
[18:15:40] <selwyn> pl: i would say that people of his background are usually very understated in their appearance/behaviour
[18:15:45] <epony> you'll get Indian and Pakistani leaders and African minorities rising to seek representation
[18:16:16] <epony> "conservatism" will be forgotten like an incident on the tea party last year
[18:16:58] <epony> UK will try to recapture IE again
[18:17:16] <epony> expect "bombings" and stupid newspaper lies
[18:18:42] <epony> and a couple of Brentries and Brexits again ;-)
[18:19:15] <epony> "so don't cancel your homeland passports yet"
[18:20:57] <epony> populism is just "false" theatre to justify realpolitik choices and confuse the populace some "soap personality / group on a leash" did cause the troubles they are in, while the royalties fart pretentiously on global matters and express concern over the new problems of their peasantry
[18:22:33] <epony> while the people just want some decent life without trolling influencers and some predictable future, regardless better or worse
[18:23:14] <epony> "someone has to be guilty, let's blame Iransomewhere"  --the prince
[18:25:28] <epony> https://en.wikipedia.org/wiki/Realpolitik#Europe
[18:26:30] <epony> "surprise yourself with what is possible"  --Merkel
[18:29:57] <epony> https://en.wikipedia.org/wiki/International_relations_of_the_Great_Powers_(1814-1919)
[18:31:19] <epony> also known as the rise of fascism ^ "Important themes include the rapid industrialization and growing power of Great Britain, the United States, France, Prussia/Germany, and, later in the period, Italy, and Japan. This led to imperialist and colonialist competitions for influence and power throughout the world"
[18:31:52] <epony> "brexit.. hahahahahaha"
[18:35:37] *** Quits: iamFIREcracker (~iamFIREcr@user/iamfirecracker) (Read error: Connection reset by peer)
[18:36:45] <epony> "Aberdeen played a central role in winning the Opium Wars against China, gaining control of Hong Kong in the process." (British policies)
[18:44:51] *** Quits: shka (~herr@109.231.0.226) (Read error: Connection reset by peer)
[18:46:02] *** Joins: cranium (~cranium@user/cranium)
[18:48:36] *** Joins: shka (~herr@109.231.0.226)
[18:56:46] <selwyn> elizabeth holmes found guilty
[18:58:36] <shka> good
[19:00:37] <selwyn> might get decades
[19:00:55] <waleee> that get-a-kid-move really backfired
[19:00:59] <selwyn> reminds me a bit of shkreli, in that you may face serious time for medical fraud
[19:01:27] <selwyn> if and only if you fuck up and get exiled from other rich people
[19:01:33] *** Joins: iamFIREcracker (~iamFIREcr@user/iamfirecracker)
[19:05:37] <shka> selwyn: struck down for imitating the steven jobs
[19:05:55] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:19df:3c96:615a:7101) (Remote host closed the connection)
[19:07:09] <selwyn> hubris the ultimate sin
[19:18:37] <pl> Even having war criminal on board of directors didn't help 
[19:18:44] <selwyn> pl: lol
[19:19:19] <pl> selwyn: and that's the light assessment 
[19:19:42] <pl> Personally I'd vote for the label "hostis humani generis" 
[19:22:55] <shka> pl: "American hero, mr Oliver North
[19:22:57] <shka> American heroes Colonel Oliver North
[19:22:59] <shka> Everybody says he was just doing his job
[19:23:00] <shka> Arms for the hostages, it's plain to see
[19:23:02] <shka> Why the very next day they bombed Tripoli
[19:23:21] <shka> Terrorists were everywhere
[19:23:22] <shka> Blowing Greenpeace ships right in the air
[19:23:24] <shka> Wall Street crashed and the hurricane
[19:23:25] <shka> Tore the trees from their roots, derailed the trains
[19:23:39] <pl> shka: I was thinking of Henry Kissinger for the hostis humani generis bit 
[19:23:41] <shka> London twon ground to a halt
[19:23:43] <shka> And everybody said it wasn't our fault
[19:23:50] <shka> pl: yeah, i know, but i had to :P
[19:23:56] <pl> Who, yes, was on board of directors of Theranos 
[19:23:59] <selwyn> waleee: indeed
[19:24:42] <shka> pl: I am honestly impressed by how Oliver North managed to stay on top
[19:25:37] <shka> Americans love some war crimes
[19:25:56] <shka> as for the lyrics https://www.youtube.com/watch?v=KK8NUABVW2Y
[19:25:57] -ixelp- Stay One Jump Ahead (2007 Digital Remaster) - YouTube
[19:26:31] <pl> Not many people talk about what White House wanted from Contras in exchange for support 
[19:26:42] <pl> Like priority targeting of primary schools 
[19:27:55] <shka> it is also funny how F-14s got shred to pieces 
[19:28:15] <shka> partly because, i think, of that whole situation
[19:29:55] <pl> Nope, it was much later thing, more related to long campaign for manufacturing a war in Iran 
[19:30:11] <selwyn> tony blair is getting canonised rn
[19:30:57] <pl> With reasoning being to prevent Iran getting parts for their F-14s 
[19:31:19] <selwyn> sounds like a dumb plan
[19:32:05] <pl> Mind you, all F-14 air to air victories were by Islamic Republic of Iran XD
[19:32:25] <shka> pl: yes, but i think that this plan was put in place because of the Contra-Iran made obvious that F-14 parts are a hazard
[19:33:18] <pl> shka: the people who ordered the shredding would find themselves perfectly fine as members of Iran-Contra team 
[19:33:31] <shka> riiight
[19:34:01] <shka> still, F-14 cool jet
[19:34:06] <pl> So I'd rather link it to par of the constant drumbeat of "we need to bomb Iran" 
[19:34:26] <pl> shka: especially once they re engined it back with the proper engine 
[19:34:38] <shka> Iran did that?
[19:34:56] <pl> shka: no, USN did, don't remember if in A or B variant 
[19:35:01] <shka> oh
[19:35:03] <shka> ok
[19:35:41] <selwyn> i wonder if they will just buy russian planes now
[19:35:43] <pl> Some bean counter decided that they can switch to tf-30 engines which caused numerous deaths 
[19:36:12] <shka> i wonder if navy would want some replacement for F-14
[19:36:22] <shka> because hypersonic missiles are a thing now
[19:36:24] <pl> The famous death scene in Top Gun is based on more than one such accident all due to bean counters 
[19:36:37] <pl> Hypersonic missiles were a thing for 30 years 
[19:36:56] <shka> pl: Chinese hypersonic missiles 
[19:37:00] <shka> to be specific
[19:37:21] <pl> The problem is that with removal of dedicated tankers and removal of F-14, the combat radius of USN carriers dropped A LOT
[19:38:00] <pl> And F-35C has, iirc, smaller combat radius than F-18 and its variants 
[19:38:20] <shka> J-20 could be a massive problem for the USNAVY
[19:38:56] <shka> once it gets fully developed, doubly so
[19:39:24] <pl> They now have a problem of Chinese missiles utilising Soviet naval doctrine... Having higher range from land than a carrier group 
[19:40:05] <shka> yeah, but they are working on that refueling drone 
[19:40:21] <pl> Meaning that other than sneaking a sub closer, USN doesn't get to hit before it's hit 
[19:40:52] *** Quits: Mandus (~aasmundo@0.51-175-33.customer.lyse.net) (Quit: WeeChat 3.3)
[19:42:34] <pl> The refueling drone might not be enough though 
[19:43:19] <selwyn> refueling drone sounds flammable
[19:45:28] *** Joins: Mandus (~aasmundo@85.112.154.250)
[19:49:16] <pl> And hackable 
[19:59:02] *** Quits: scymtym (~user@ip-94-114-248-79.unity-media.net) (Remote host closed the connection)
[19:59:32] <epony> ICBMs are 12-15K km
[19:59:38] <epony> (submarine launched)
[20:00:15] <epony> Australlia just got a bunch of those from US and GB instead of FR, so FR is pissed!
[20:00:26] *** Quits: cranium (~cranium@user/cranium) (Quit: Leaving)
[20:00:31] <epony> nuclear submarines
[20:01:14] <epony> check out trident 2
[20:02:32] <epony> https://en.wikipedia.org/wiki/Submarine-launched_ballistic_missile#Types
[20:03:11] <epony> https://en.wikipedia.org/wiki/Icbm#Specific_ICBMs
[20:03:29] <epony> checkout titan 2
[20:06:02] <shka> it is a concern, yes
[20:06:43] <shka> regardless, i think that navy aircraft groups are on the verge of obsolescence 
[20:07:59] <shka> Americans probably should consider building less of the Ford class carriers 
[20:12:14] <epony> the hell they are.. with up to 100 fighter and tactical jets aboard, and sailing in groups of 4-5 near China
[20:12:41] <epony> escorting the tankers and the nuclear payloads
[20:13:12] <epony> someone is confused a ship is built to be in service 5 years ;-) like a fake politician
[20:13:43] <epony> those are nuclear reactor ships and are designed to be in service 50-75 years
[20:13:57] <epony> (typically 100 years)
[20:15:07] <epony> https://en.wikipedia.org/wiki/Supercarrier#United_States
[20:40:38] <epony> "The United States Navy has 11 large nuclear-powered fleet carriers—carrying around 80 fighters each—the largest carriers in the world; the total combined deck space is over twice that of all other nations combined."
[20:43:06] <epony> https://en.wikipedia.org/wiki/Nimitz-class_aircraft_carrier#Accidents_and_incidents "On 26 May 1981, an EA-6B Prowler crashed on the flight deck of Nimitz, killing 14 crewmen and injuring 45 others. Forensic testing of the personnel involved showed that several tested positive for marijuana."
[20:44:01] *** Joins: Catie (~user@user/catie)
[20:45:47] <epony> paranoid schizoid nuclear war carriers "As a result of the use of nuclear power, the ships are capable of operating for over 20 years without refueling and are predicted to have a service life of over 50 years."
[20:46:13] <epony> "nimitz" means german, mute, one who can not speak (common) languages
[20:48:38] <epony> (what star trek talks about is.. supercarriers on missions to the foreign seas)
[20:49:13] <epony> (what star wars talks about is.. ww2 dogfight and naval warfare)
[20:49:47] <epony> you've been filled with "war propaganda" washed in soap bubbles and rainbow farts
[20:52:37] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[20:59:37] <epony> people always think "wars are won with super-jet combat" while they are won with hunger, fuel exhaustion, casualties and bio-weapons
[21:05:36] <epony> https://en.wikipedia.org/wiki/Criticism_of_capitalism "Prominent among critiques of capitalism are accusations that capitalism is inherently exploitative, alienating, unstable, unsustainable, and creates massive economic inequality, commodifies people, and is anti-democratic and leads to an erosion of human rights while it incentivises imperialist expansion and war."
[21:08:12] <epony> https://en.wikipedia.org/wiki/Socialism_for_the_rich_and_capitalism_for_the_poor - The term corporate welfare is widely used to describe the bestowal of favorable treatment to big business (particular corporations) by the government. One of the most commonly raised forms of criticism are statements that the capitalist political economy toward large corporations allows them to "privatize profits and socialize losses."
[21:09:41] <epony> https://en.wikipedia.org/wiki/Total_war#Present_day "During the Yugoslav Wars, NATO conducted strikes against the electrical grid in enemy territory using graphite bombs. NATO claimed that the objective of their strikes was to disrupt military infrastructure and communications."
[21:09:56] <epony> (depleted uranium)
[21:10:01] <epony> (and plutonium)
[21:12:09] *** Quits: Mandus (~aasmundo@85.112.154.250) (Ping timeout: 256 seconds)
[21:12:18] <epony> Serbia is rich in Lithium deposits, the real purpose of the destruction of the country, so it can be forced to export that cheaply to electric car manufacturing battery plants.
[21:12:58] <epony> (and for a reprisal of latin-muslim domination of the Balkans)
[21:13:46] *** Joins: Mandus (~aasmundo@0.51-175-33.customer.lyse.net)
[21:14:12] <epony> Afghanistan is the #1 (90% and more) of the total world production of heroine and morphine derived opiates and canabinoids, it also has very rich deposits of Lithium and diamonds at shallow depth.
[21:15:47] <contrapunctus> It's awfully silent in this room today.
[21:16:07] <epony> The "social" system countries sought to stop production of narcotics and prevent fundamental islamism.  The "capitalist" system countries sought to take over the transport of narcotics to destroy further China and feed their own domestic consumption, and take over the mineral deposits and reinstate fundamentalist terrorists in power.
[21:16:27] <contrapunctus> Where's that epony ? Haven't heard from them in a while.
[21:18:53] <epony> https://en.wikipedia.org/wiki/Military-industrial_complex#Third_(current)_era "In the current era, the military–industrial complex is seen as a core part of American policy-making. The American domestic economy is now tied directly to the success of the MIC which has led to concerns of repression as Cold War-era attitudes are still prevalent among the American public."
[21:19:41] <epony> "China stroke first"  --USA.
[21:21:50] *** Joins: scymtym (~user@ip-94-114-248-79.unity-media.net)
[21:24:18] <shka> dunno, i have the guy on the ignore list
[21:24:53] <ck_> you know that one ship parked at the restaurant at the end of the galaxy, with black on black instrumentation?
[21:25:02] <ck_> I can recommend that highlighting scheme for certain applications
[21:30:52] <epony> "In Imperialism, the Highest Stage of Capitalism (1916), Vladimir Lenin further developed Marxist theory and argued that capitalism necessarily led to monopoly capitalism and the export of capital—which he also called "imperialism"—to find new markets and resources, representing the last and highest stage of capitalism."
[21:31:17] <epony> (forced labour and consumption by war)
[21:31:52] <epony> "Near the start of the 20th century, Vladimir Lenin wrote that state use of military power to defend capitalist interests abroad was an inevitable corollary of monopoly capitalism.[107][108] He argued that capitalism needs imperialism to survive.[109] According to Lenin, the export of financial capital superseded the export of commodities; banking and industrial capital merged to form large financial cartels and trusts in which production and distribution are 
[21:31:52] <epony> highly centralized; and monopoly capitalists influenced state policy to carve up the world into spheres of interest. These trends led states to defend their capitalist interests abroad through military power."
[21:32:49] <epony> He was absolutely correct with these predictions from real world observations.
[21:33:24] <epony> "In the early 20th century, Vladimir Lenin argued that state use of military power to defend capitalist interests abroad was an inevitable corollary of monopoly capitalism.[136]"
[21:37:01] <epony> https://en.wikipedia.org/wiki/Criticisms_of_corporations#Analogy_with_totalitarian_regime "Corporations, which previously had been considered artificial entities with no rights, were accorded all the rights of persons, and far more, since they are "immortal persons", and "persons" of extraordinary wealth and power. Furthermore, they were no longer bound to the specific purposes designated by State charter, but could act as they choose, with few constraints." 
[21:37:01] <epony> --Chomsky
[21:37:44] <epony> the bicentennial man is not a robot -> it is imperial monarcho-fascist capitalism (IMFC)
[21:38:12] <Gnuxie> so epony is back
[21:38:18] <epony> there is your real artifical "superintelligence" ^
[21:38:55] <epony> Gnuxie, it was a minor "tangent" due to "interesting" mentions of modern day politics ;-)
[21:38:59] <shka> :(
[21:39:14] <Gnuxie> lwl
[21:39:21] <epony> go on, as if "nothing happened" (that's what you can do best of all)
[21:39:48] * epony flashes the neuraliser briefly
[21:39:59] <epony> contrapunctus, wsup dawg?
[21:48:35] <Gnuxie> so is processed/stressed meat really really bad for you? 
[21:48:49] <Gnuxie> how come so much of western diet is centered around eating this ? 
[21:48:52] <epony> Are you by any chance protesting against England and Turkey being called the worst things that happened to Europe in the last 1000 years after the Arab and Norse invasions?  Or did you want to say something like "US is a peaceful country that only defended it's own territory and it's own history and culture, after killing an entire continent of natives and fighting about 250 years of total war?
[21:49:17] <epony> "
[21:49:27] <epony> "its"
[21:51:09] <sm2n> pl: Wow, I thought you meant james mattis
[21:51:41] <sm2n> how many war criminals did theranos have on its board anyway?
[21:52:41] <shka> not enough
[21:53:16] <epony> "have to see which island system has been peaceful towards the mainland near it" (approximately zero / none)
[21:54:31] <shka> they should also include crew of that Apache helicopter from the wikileaks
[21:54:32] <contrapunctus> Gnuxie: that's similar to what I ask myself when I see pseudo-scientific "vegetarian diets baaaad" blog posts - "How come so much of middle-class India is centered around a vegetarian diet?"
[21:55:02] <epony> cows are expensive for poor people.
[21:55:12] <Gnuxie> well i'm saying this because it probably really is bad 
[21:55:17] <Gnuxie> the meat 
[21:55:17] <epony> so they drink the milk and eat the animal as a last resort
[21:55:25] <epony> the cow meat stinks bad
[21:55:41] <epony> there is no middle-class in india
[21:56:08] <epony> there are caste systems and genetic inequality
[21:56:25] <epony> it's a form of internal racism
[21:56:49] <epony> similar systems exist in all asian and arab and african tribal countries
[21:57:32] <epony> it's part of the religious (military) and social doctrines of abrahamic religions too (middle east)
[21:58:07] <Gnuxie> bruh
[21:58:14] <Gnuxie> you're talking to someone who lives in india 
[21:58:37] <Gnuxie> (contrapunctus not me)
[21:58:53] <contrapunctus> lel
[21:59:28] <sm2n> lol
[21:59:32] <epony> and you claim there is middle class in the group of 50 people you know out of almost 1.4 billion people there?
[22:00:08] <epony> not enough meat
[22:00:13] <Gnuxie> idk 50 is greater than 0
[22:00:17] <epony> (what middle class?)
[22:01:24] <ck_> even lexicographically
[22:02:09] <epony> there is the same problem in China, not enough pigs to eat
[22:02:40] <epony> (warmer climates eat cows as there is nothing for the pigs to eat on grass and sand)
[22:03:35] <epony> so the cow eating belt are brown and islamic people (hinduism is a form of islam too)
[22:03:40] <epony> any questions?
[22:06:40] <sm2n> yes, actually
[22:06:45] <sm2n> what are you smoking?
[22:08:18] <shka> did that Russian movie with scenes on the ISS was already released?
[22:08:42] <Catie> Hold up, like they filmed for a movie on the ISS? The actual ISS?
[22:08:52] <shka> Catie: just some scenes 
[22:09:09] <Catie> Good lord, that's nuts
[22:09:18] <shka> it is about a doctor sent into ISS to perform surgery on a astronaut
[22:09:24] <epony> sm2n, that's not a question, that's your idea of "unable to process" (what you typed was ] SYNTAX ERROR? so you're just "signing the petition of people who pretend to not understand")
[22:09:52] <shka> which is actually pretty interesting scenario honestly 
[22:10:04] <shka> but i don't know if it was already released
[22:10:16] <shka> i totally want to watch it because, yes, that's nuts
[22:10:47] <Catie> Isn't that the joke about how they hired some director to fake the moon landing? He agreed, but insisted they film on location?
[22:11:06] <Catie> They actually filmed on location. In space. That's bonkers
[22:11:26] <shka> https://www.youtube.com/watch?v=bkjuYvr8-qU
[22:11:26] -ixelp- Russian film to be the first shot in space - YouTube
[22:11:56] <ck_> there was at least a music video shot there previously
[22:11:56] <epony> do you know that Russian module is from the MIR station, and that it was damaged intentionally by a cargo ship docking maneuvres because it was too expensive to support it and the US was not paying their contractual deals (the richest country in the world) so it was part of the "research" in catastrophic events..?
[22:12:21] <shka> also, actress is just a stunhing beauty 
[22:12:29] <epony> so the core of the ISS is built on top of the Russian modules
[22:14:05] <shka> which is another reason to watch the movie for me 
[22:14:13] <Catie> ck_: That music video was shot by an astronaut though, wasn't it?
[22:14:30] <ck_> Catie: yes, I didn't realize the particulars of this story
[22:14:31] <epony> sm2n, the typical response would be "ur membrain" but that would be much lower "impact" ;-)
[22:14:36] <sm2n> chris hadfield iirc
[22:14:58] <ck_> yes
[22:15:08] <epony> so now you know that asking questions gives the "full capacity in the hand of the responder"
[22:21:42] <lagash> epony: sounds like Russian propaganda! :P
[22:34:54] <epony> well, if it's not Russian, at least it's not American
[22:35:51] * epony wHistles "we're all living in warmerica, wunderbra"
[22:37:23] <epony> proper-ghandism comes from.. the liberation struggles of captured states
[22:42:58] <gilberth> moon-child: What you call auto-close is older than HTML even. It's a feature of SGML and always was well specified. HTML initially was an SGML application. And this comes with a content model, which is useful. This is the DTD, a kind of grammar. In Lisp it doesn't make sense to say (defun foo ((loop for k below 10 collect k)) ...) And with HTML e.g. it doesn't make any sense to have a P inside a B, or a P inside a P. Or an LI outside an 
[22:43:50] <gilberth> And this makes perfect sense. A TABLE is a list an optional THEAD, some TBODYs, an optional TFOOTER, each having a list of TRs which each are TDs. What the DTD specified is, that a <TBODY> is optional, as well as a </TD> e.g. <TABLE><TR><TD>hi<TD>there</TABLE> is read as <TABLE><TBODY><TR><TD>hi</TD><TD>there</TD></TR></TBODY></TABLE>. Hence also opening tags could be optional. This also happens with <P>foo<P>bar which is <P>foo</P><P>ba
[22:44:22] <gilberth> Trouble was that Mosaic didn't use an SGML parser and didn't build an AST (DOM) either. Those tags were implemented like instructions. E.g. <B> turning on bold, and </B> turning it off. It was happy with "<B><P>foo<P>bar</B>baz". Which is not a valid HTML$n, with n < 5, document. For Mosaic^WNetscape this was a major trouble when implementing CSS, which needs a DOM.
[22:44:45] <gilberth> And I had my fun to deduce what Netscape did and emulate that with Closure. What happened though is, that HTML5 now finally specified the state machine that was implemented with Netscape. And, surprise, the HTML5 rules are just like the fix-ups I implemented for Closure.
[22:46:35] <gilberth> And this "<P>foo<P>bar" always was a valid HTML document being equivalent to "<P>foo</P><P>bar</P>". Nothing new.
[22:46:54] <gilberth> Good morning #lispcafe, btw.
[22:48:12] <semz> gilberth, your client seems to truncate messages slightly when breaking up lines.
[22:48:17] <semz> and good morning
[22:48:46] <semz> I get "Or an LI outside an " followed by "And this makes"
[22:49:05] <gilberth> semz: Oh dear. there is some 512 octet limit with IRC. And my client is not aware of that. :-(
[22:49:22] <epony> "How come so much of middle-class India is centered around a vegetarian diet?" https://www.abc.net.au/radionational/programs/archived/encounter/aghoris/3360380 (warning do not read the text and do not open the link, unless your nick is contrapunctus / gnuxie)
[22:50:44] <gilberth> semz: Thanks for telling me; it says "Or an LI outside an UL or OL. Or a TD outside a TR."
[22:53:26] <epony> Gnuxie, https://en.wikipedia.org/wiki/Aghori :flesh eaters: is a safer link
[23:02:07] *** Joins: notzmv (~zmv@user/notzmv)
[23:19:44] <Gnuxie> Cool 
[23:38:54] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[23:42:42] <GreaseMonkey> reminder that the reason that images are not <img href="some url">alt text</img> is because Mosaic implemented it a certain way and after some debate decided to... stick to what they implemented
