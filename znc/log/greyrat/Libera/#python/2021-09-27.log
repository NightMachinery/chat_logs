[00:00:28] <braxas> teut: on_message triggers for every message, what it is is saying is, that messages you send, are also messages, and will thus also trigger on_message
[00:00:36] <braxas> I actually don't quite get what about this is surprising
[00:01:04] <teut> sorry, it was telegram which was made by microsoft
[00:01:10] <braxas> It may be sometime people overlook when writing their logic, but I don't see why it is surprising that all messages trigger on_message, or that messages your bot sends is also included in the set of all messages
[00:01:18] <braxas> teut: also not factual
[00:01:37] <braxas> microsoft did not make telegram
[00:01:51] <braxas> https://en.wikipedia.org/wiki/Telegram_(software)#History
[00:02:10] <braxas> Maybe best to not focus on irrelevant details
[00:02:17] <nedbat> teut: you can do these searches just like we did....
[00:02:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[00:03:04] <teut> agreed , my box of wrong info never gonna empty if I continue like before
[00:03:11] *** Joins: wyclif (~wyclif@user/wyclif)
[00:03:23] <braxas> brabrax: and the service discord offers (whoever owns them), is that they provide and API, and the API allows  you to react on every message, and that when you send a message, it is also a message, thus one of the messages in the set of every message
[00:03:31] <braxas> sorry, meant at teut
[00:04:02] <teut> but to host that api they are providing free servers
[00:04:22] <braxas> Their revenue model is their problem
[00:04:25] <teut> thousands of users are using their free api , and what are they getting
[00:04:31] <teut> ok
[00:04:43] <sveinse> whats the relationship to python again?
[00:05:06] <braxas> teut: https://www.cbinsights.com/research/report/how-discord-makes-money/
[00:05:22] <jinsun> sveinse: only that teut is using discordpy library to interact with discord :D
[00:06:20] <sveinse> :D <3 "anything Python is on-topic"
[00:06:28] <jinsun> but the actual discussion seems to be less related to discordpy and more related to discord
[00:06:30] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[00:06:41] <braxas> indeed
[00:06:52] <teut> just got carried away by the thought , sorry
[00:07:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[00:08:09] <teut> thanks for the info
[00:08:29] <sveinse> teut: I'm not a moderator, and we can all get lost on a tangent once in a while, but there is #python-offtopic too (if you can get your fellow debatants with you).
[00:08:43] *** Joins: wyclif (~wyclif@user/wyclif)
[00:09:02] <sveinse> I feel like police here.. meant as friendly as I can say it
[00:09:34] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 252 seconds)
[00:10:05] <teut> ya ya, I know all that, I had been long enough here just now doing a lot of c++  for interviews, will be more active here if my job will be related to python which has very less probability
[00:11:36] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Ping timeout: 256 seconds)
[00:12:10] *** Quits: ubert (~Thunderbi@77.119.164.7.wireless.dyn.drei.com) (Remote host closed the connection)
[00:12:47] <sveinse> jep, I understand and I know. I stepped up as manager a year ago, and I don't see that much python any more. Try to keep it at bay with my hobbies
[00:13:18] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[00:13:27] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[00:14:14] *** Joins: wyclif (~wyclif@user/wyclif)
[00:16:22] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[00:16:55] <teut> yes sure, django is still a thing which few companies are using but they are startups and paying lesser
[00:19:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[00:19:05] <gry> teut: you're welcome to join #c and #c++ as well
[00:19:38] <sveinse> Python is strong as language for prototyping, concept work, data analysis, AI and works. So its getting a stronger foothold with us as a part of product development. Yet its other languages in use for the more low-level stuff. Esp. on embedded.
[00:19:45] *** Joins: wyclif (~wyclif@user/wyclif)
[00:19:51] <gry> teut: (also ##programming and #learnprogramming and #cs probably)
[00:20:36] <gry> teut: (P.S. a free/libre irc chat app such as hexchat might interest you; it may make irc chat easier)
[00:20:49] <teut> make api in c++ and create a python wrapper
[00:21:11] *** Quits: qpdb_ (~qpdb@user/qpdb) (Ping timeout: 252 seconds)
[00:21:36] <teut> that mostly I find , ya tensorflow and stuff use it agreed
[00:21:57] <sveinse> teut: That is actually how I arrived at Python some 20 years ago: It was the simplest interpreted language that had the best C/C++ integration. Almost trivial. Used py since.
[00:21:59] *** Quits: dd_ (dd_@gateway/vpn/protonvpn/dd/x-95652672) (Quit: Leaving)
[00:22:47] <teut> ya , after some experience I can do open source, after all the goal of a good programmer is to create a good api
[00:22:48] <sveinse> Well, "best" is subjective -- it wasn't that much work
[00:23:12] <teut> no problems with that
[00:23:27] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Remote host closed the connection)
[00:24:16] *** Quits: Hax0r (~Hax0r@87.101.192.39) (Quit: Leaving)
[00:24:19] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[00:24:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[00:25:16] *** Joins: wyclif (~wyclif@user/wyclif)
[00:25:21] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[00:25:27] *** Quits: Yasumoto (~Yasumoto@136.152.37.118) (Remote host closed the connection)
[00:26:26] *** Joins: georgios (~georgios@user/georgios)
[00:26:28] <sveinse> AI, ML and Data Science is extremely popular (dear I say hyped?) these days. I see it in almost every candidate's resym√© these days. Sometimes you only need someone who can program well...
[00:26:51] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[00:27:16] <sveinse> As in, using tensorflow in or out of jupyter doesn't necessarily make you a good python programmer
[00:28:18] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[00:28:26] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2.1)
[00:28:28] *** Quits: jdmark (~jdmark@097-102-095-007.res.spectrum.com) (Quit: Leaving)
[00:29:33] *** Joins: zeromule (~eric@2601:602:8d80:4e50:4d8c:8c6b:5341:6a51)
[00:29:52] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[00:30:19] <gordonjcp> sveinse: I liked python from about 20 years ago too, mostly because it was all so intuitively understandable
[00:30:27] <teut> ya, and the pay is less and my friends who are data scientists are using softwares instead of python
[00:30:42] <gordonjcp> sveinse: the source code is just pseudocode with proper indentation, and the compiled bytecode is just very very terse Forth :-D
[00:30:48] *** Joins: wyclif (~wyclif@user/wyclif)
[00:31:02] <sveinse> gordonjcp: :D ah, memories
[00:31:29] <teut> I only attended a azure workshop at college, they were using drag drop for AI , really irritating
[00:31:35] <teut> I once*
[00:31:46] <gordonjcp> can't remember what the first version of Python I used was, but it was in about 2000
[00:31:54] <teut> I opened a jupyter notebook, they said close it
[00:31:55] <gordonjcp> whatever Slackware packaged back then
[00:32:11] <sveinse> gordonjcp: same here
[00:32:39] <gordonjcp> sveinse: it was also packaged for NetBSD on MIPS so it all worked on my DECStation 3100
[00:32:58] *** Quits: ali1234 (~al@user/ali1234) (Remote host closed the connection)
[00:33:00] <gordonjcp> actually I had that in ~97isdh
[00:33:02] <gordonjcp> *ish
[00:33:24] *** Joins: ali1234 (~al@user/ali1234)
[00:33:47] <sveinse> teut: but that said, working on a data set in say Pandas, has much the same operations as working with the same data in PowerBI -- so its more about the tools and language semantics than it is the methodologies themselves
[00:34:07] <aphysically> hmmmm, I guess with some of my code where I'm decoding and encoding utf-8 I really don't need to be since I can work directly on bytes strings
[00:34:23] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[00:35:44] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[00:35:54] <teut> ya it is but in the company they train to use tableau, power bi etc . In the job description they write impressive stuff and in interview they ask python but when it comes to use, its all a lie
[00:36:17] *** Joins: wyclif (~wyclif@user/wyclif)
[00:36:21] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:36:50] *** Joins: thewrath007 (~mikea_mqt@c-69-138-6-64.hsd1.md.comcast.net)
[00:37:09] *** Joins: white_magic (~white_mag@185.202.221.44)
[00:37:35] <white_magic> anyone here use Tiangolo's SqlModel library? I was wondering if there's a complete code example of its usage somewhere
[00:38:26] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: WeeChat 3.2.1)
[00:39:17] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[00:39:24] *** Joins: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz)
[00:39:43] *** Joins: diamondbond (~diamondbo@175.157.220.188)
[00:40:01] <thewrath007> i am tryign to use a regular python variable to be the placeholder for the value of a particular entry in the data frame
[00:40:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[00:41:05] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[00:41:50] *** Joins: wyclif (~wyclif@user/wyclif)
[00:41:57] *** Quits: teut (~teut@182.69.68.230) (Quit: Client closed)
[00:42:06] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[00:42:07] *** Joins: jscrapps (~jscrapps@2601:603:c80:4b90::7672)
[00:42:46] *** Joins: djapo (~archangel@user/djapo)
[00:43:12] <nedbat> thewrath007: are you later using "regular_python_variable = new_value" to update the data frame?
[00:43:28] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 265 seconds)
[00:43:33] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[00:43:53] *** Lord_of_Life_ is now known as Lord_of_Life
[00:45:06] <thewrath007> TestPopulation = AACountyPop[(AACountyPop.Category == "Total") & (AACountyPop.Jurisdiction == "Anne Arundel County")]
[00:45:39] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[00:46:35] *** Joins: schumaml (~schumaml@dslb-092-074-000-199.092.074.pools.vodafone-ip.de)
[00:46:51] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[00:47:18] *** Joins: wyclif (~wyclif@user/wyclif)
[00:47:21] <nedbat> thewrath007: are you looking for help with this? is something going wrong?
[00:49:18] <thewrath007> nedbat:  it is showing up as blank .... stand by 1
[00:50:58] *** Joins: Linux77 (~Linux7_7@186.233.182.243)
[00:51:52] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[00:51:52] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Ping timeout: 252 seconds)
[00:52:23] <thewrath007> nedbat: code is here - https://pastebin.com/KDaK1pnT
[00:52:48] *** Joins: wyclif (~wyclif@user/wyclif)
[00:52:50] <thewrath007> nedbat: the results are as followings:
[00:52:51] <thewrath007> C:\Users\mikea_mqtgjzb\PycharmProjects\COVID\venv\Scripts\python.exe C:/Users/mikea_mqtgjzb/PycharmProjects/COVID/Mike.py
[00:52:53] <thewrath007> County Population selected is:               Jurisdiction  Year Category    0-4  ...  75-79  80-84   85+   Total
[00:52:54] <thewrath007> 2433  Anne Arundel County  2020    Total  34637  ...  16466   9545  9512  573231
[00:52:56] <thewrath007> [1 rows x 22 columns]
[00:52:57] <nedbat> thewrath007: not here
[00:52:57] <thewrath007> Process finished with exit code 0
[00:52:58] *** Joins: moto (~moto@user/moto)
[00:53:56] <nedbat> thewrath007: you can put the code and the output in one page at gist.github.com, or https://bpa.st
[00:53:57] <thewrath007> sorry nedbat
[00:54:03] <nedbat> thewrath007: you have to also explain what's wrong here
[00:54:41] <thewrath007> https://bpa.st/FGCA
[00:54:46] <thewrath007> the issue is that it prints out blank
[00:55:20] <thewrath007> the value is blank
[00:55:50] *** Joins: cyphase (~cyphase@user/cyphase)
[00:55:52] <jinsun> doesn't look like it is printing blank from that paste, you get 1 row and 22 columns
[00:56:31] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[00:57:04] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[00:57:17] *** Joins: jaggz (~jaggz@user/jaggz)
[00:57:22] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[00:57:54] <jaggz> is there a python module that lets you work with video containers?  I'm interested in replacing I-frame data with different data (similar to datamosh'ing, although usually they remove the I-frames, whereas I want to be able to remove them)
[00:58:20] *** Joins: wyclif (~wyclif@user/wyclif)
[00:58:21] <jaggz> The module can't re-encode the stuff (except perhaps whatever compression it does on the single I-frame)
[00:58:24] <cluelessperson> jaggz, loosely related but there are definitely python bindings for ffmpeg
[00:58:39] <sveinse> jaggz: there exists a ffmpeg python binding
[00:58:53] <jaggz> hmm. people do use ffmpeg commandline to get lists of frames
[00:58:56] <thewrath007> jinsun: oh yea it is printing the entire data frame
[00:58:59] <jaggz> i'll ask in ffmpeg how I'd go about replacing them
[00:59:09] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[00:59:47] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Quit: WeeChat 2.8)
[01:00:15] <jaggz> (for what it's worth, the point of it is to utilize the motion vectors, resulting from the encoding, to prepare movement of more-clear image markers, for motion tracking)
[01:00:16] <jaggz> https://www.youtube.com/watch?v=VLGKFk3wIL4
[01:00:18] <jaggz> like that
[01:00:20] <sveinse> jaggz: its been a while since I'v worked with multimedia (but I have), if memory serves, swapping I-frames is a part of the video stream, which is atomic and not just a container question IIRC. You'll probably need to transcode the stream
[01:00:35] *** Joins: ikus060 (~ikus060@96.127.228.230)
[01:02:18] <djapo> why does some_list.remove('') remove all strings and not just an empty string
[01:02:19] <djapo> ?
[01:02:20] *** Joins: white5moke (~pi0xxdmqj@ip72-219-109-30.oc.oc.cox.net)
[01:02:48] <jaggz> djapo, does it?
[01:03:17] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[01:03:26] <jaggz> djapo, it should error
[01:03:34] <jaggz> (if there's no '' item in the list)
[01:03:49] *** Joins: wyclif (~wyclif@user/wyclif)
[01:03:57] *** Quits: white_magic (~white_mag@185.202.221.44) (Quit: Client closed)
[01:04:12] <thewrath007> jinsun: there has to be 1 sinmple thing i am missing here
[01:04:13] <jaggz> sveinse, hmm.. I'm not familiar enough with it to know.
[01:04:31] <jaggz> Not sure what transcoding would imply here
[01:04:55] <jaggz> I'd want the image data removed, then the other frames (b-frames or whatever) end up "moving" that stuff according to motion vectors
[01:04:57] <djapo> jaggz: yes it does. re.split(';|,',',9999,split; value').remove('')
[01:04:57] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[01:05:01] <jaggz> that video shows it really nicely
[01:05:06] <jaggz> but his process is tedious
[01:05:07] <jinsun> thewrath007: what did you expect it to print?
[01:05:21] <thewrath007> jinsun: just hte value of the one "cell" of the dataframe
[01:05:38] <thewrath007> the value that is in the total column where jurisdiction is anne arundel county
[01:05:44] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[01:05:45] <jaggz> djapo, no.. your list is modified in-place
[01:06:10] <jaggz> foo=re.split(';|,',',9999,split; value'); print(foo); foo.remove(''); print(foo)
[01:06:34] <jaggz> foo.remove() doesn't return a new list
[01:06:53] <jinsun> thewrath007: okay then you have to to filter the columns in your code also, you have just filtered the rows
[01:06:54] <jaggz> "The remove() doesn't return any value (returns None)."
[01:07:04] <jaggz> https://www.programiz.com/python-programming/methods/list/remove
[01:07:09] *** Quits: schumaml (~schumaml@dslb-092-074-000-199.092.074.pools.vodafone-ip.de) (Quit: WeeChat 3.3)
[01:07:12] <thewrath007> jinsun: i did that on line 24
[01:07:25] *** Joins: fikran (~fikran@user/fikran)
[01:07:27] *** Joins: schumaml (~schumaml@dslb-092-074-000-199.092.074.pools.vodafone-ip.de)
[01:08:12] <sveinse> jaggz: yeah, as I said, been a while. Not sure there are any libs that allow you to interact with individual frames like this in encoded (I/B) format, they usually simply decode. But YMMW - best of luck
[01:08:14] *** Joins: mdemo (~mdemo@c-73-40-53-74.hsd1.va.comcast.net)
[01:08:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[01:08:31] <jaggz> :)
[01:08:54] <thewrath007> jinsun: https://pastebin.com/KDaK1pnT
[01:09:08] *** Quits: Akuli (~Akuli@82-203-167-98.bb.dnainternet.fi) (Quit: Leaving)
[01:09:21] *** Joins: wyclif (~wyclif@user/wyclif)
[01:11:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[01:11:43] *** Joins: stevea (~stevea@user/stevea)
[01:13:01] <jinsun> thewrath007: those conditions are jusut for filtering the rows, you need to also specify that you want only the "Total" column, try chaning line 24 to`TestPopulation = AACountyPop["Total"][(AACountyPop.Category == "Total") & (AACountyPop.Jurisdiction == "Anne Arundel County")]`
[01:14:24] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[01:14:52] *** Joins: wyclif (~wyclif@user/wyclif)
[01:14:59] *** Joins: zeden (~zeden@user/zeden)
[01:15:00] *** Quits: zeden (~zeden@user/zeden) (Client Quit)
[01:15:38] <thewrath007> jinsun:  that is good and it will always print out the line number?
[01:16:01] <jinsun> line number?
[01:16:39] <jinsun> ah you mean the index?
[01:17:17] <thewrath007> yes
[01:17:19] *** Quits: yaalon (~yaalon@2603-8081-7002-fce2-695c-5d2f-4e6a-6267.res6.spectrum.com) (Read error: Connection reset by peer)
[01:17:20] <jinsun> since the filter can give more than one result, the output is also a dataframe/Series, so it will have the index
[01:18:02] <jinsun> if you want only the first result (and ok with throwing errors) you can put a `.iat[0]` at the end in that line
[01:18:51] <jinsun> it will throw error if there was nothing left after the filtering
[01:18:58] *** Quits: jscrapps (~jscrapps@2601:603:c80:4b90::7672) (Ping timeout: 260 seconds)
[01:19:43] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[01:20:22] *** Joins: wyclif (~wyclif@user/wyclif)
[01:20:28] <thewrath007> jinsun:  thank you. i knew it has ot be something simple
[01:20:53] <thewrath007> the index will probably okay i will have to check lol. and i will have to do some more resaarch on the last item you said about iat[0]
[01:21:34] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[01:22:12] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::2612) (Quit: Konversation terminated!)
[01:22:16] <jinsun> thewrath007: https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.iat.html
[01:24:35] *** Joins: Samian (~Sami@user/samian)
[01:25:31] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[01:25:53] *** Joins: wyclif (~wyclif@user/wyclif)
[01:26:53] *** Joins: ShinyCyril (~ShinyCyri@50-204-92-20-static.hfc.comcastbusiness.net)
[01:29:42] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:4be:6ac2:4e73:585e) (Quit: Konversation terminated!)
[01:30:40] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[01:33:30] *** Quits: ShinyCyril (~ShinyCyri@50-204-92-20-static.hfc.comcastbusiness.net) (Quit: ShinyCyril)
[01:34:02] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[01:34:31] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[01:35:49] *** Quits: wodim (~zzz@2605:6400:30:f3cc:fa83:71b3:af31:d023) (Quit: leaving)
[01:38:06] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 260 seconds)
[01:38:43] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[01:40:23] *** Quits: thewrath007 (~mikea_mqt@c-69-138-6-64.hsd1.md.comcast.net) (Ping timeout: 252 seconds)
[01:40:25] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[01:40:33] *** Quits: white5moke (~pi0xxdmqj@ip72-219-109-30.oc.oc.cox.net) (Remote host closed the connection)
[01:41:05] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[01:41:09] *** Joins: white5moke (~pi0xxdmqj@ip72-219-109-30.oc.oc.cox.net)
[01:43:43] *** Quits: stevea (~stevea@user/stevea) (Quit: Either I or my computer has gone to sleep. ZZZzzz‚Ä¶)
[01:43:53] *** Quits: mjh4386 (~mjh4386@165.22.53.231) (Quit: ZNC 1.6.6+deb1ubuntu0.2 - http://znc.in)
[01:44:24] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[01:44:53] *** Joins: mjh4386 (~mjh4386@165.22.53.231)
[01:46:27] *** Quits: Narrat (~omnius@p200300df5f13ccd506ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[01:48:01] *** Joins: thewrath007 (~mikea_mqt@c-69-138-6-64.hsd1.md.comcast.net)
[01:50:10] *** Quits: diamondbond (~diamondbo@175.157.220.188) (Quit: Leaving)
[01:50:17] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[01:50:46] *** Joins: ShinyCyril (~ShinyCyri@50-204-92-20-static.hfc.comcastbusiness.net)
[01:51:48] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[01:54:28] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Quit: Leaving)
[01:54:45] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[01:55:45] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[01:57:17] *** Joins: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net)
[01:57:19] *** Joins: Naan (~naan@user/naan)
[02:01:07] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[02:01:43] *** Quits: codeswhite (~codeswhit@user/codeswhite) (Ping timeout: 252 seconds)
[02:02:01] *** Joins: cjb (~cjb@user/cjb)
[02:03:01] *** Quits: m1n10n (~r41d1n@cpe-76-184-204-251.tx.res.rr.com) (Quit: GoodBye)
[02:13:55] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[02:14:22] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[02:17:31] *** Joins: m1n10n (~r41d1n@cpe-76-184-204-251.tx.res.rr.com)
[02:17:57] *** Quits: Samian (~Sami@user/samian) (Quit: Textual IRC Client: www.textualapp.com)
[02:18:57] *** Joins: Samian (~Sami@user/samian)
[02:19:57] *** Quits: brelod (~me@90.244.150.142) (Quit: leaving)
[02:19:58] *** Joins: gggp (~textual@125.33.92.174)
[02:22:47] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[02:23:10] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[02:24:18] *** Quits: ikus060 (~ikus060@96.127.228.230) (Quit: Leaving)
[02:24:53] *** Joins: djapo (~archangel@user/djapo)
[02:26:35] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[02:26:36] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Client Quit)
[02:26:51] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[02:30:34] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[02:30:37] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Quit: No Ping reply in 180 seconds.)
[02:31:02] *** Joins: djhankb (~djhankb@208.113.164.68)
[02:31:32] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[02:31:52] <TML> killall -9 'Google Chrome'
[02:32:12] <TML> oops, focus was not where I thought it was
[02:32:39] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[02:33:03] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[02:33:18] *** Quits: Samian (~Sami@user/samian) (Ping timeout: 250 seconds)
[02:33:30] *** Joins: srhm (~srhm@user/srhm)
[02:34:22] <nedbat> TML: my browser died!
[02:35:08] *** Joins: Yasumoto (~Yasumoto@136.152.37.118)
[02:35:09] <TML> nedbat: LOL - that has absolutely TERRIFYING implications, if your computer executes the commands I type in IRC ;)
[02:35:21] <nedbat> i knew it was a bad idea to set that up... :)
[02:35:23] *** Quits: gitly (~gitly@85.255.235.18) (Ping timeout: 252 seconds)
[02:36:37] <TML> that was one of those "my eyes went to the other monitor but I forgot to click to focus the terminal" errors
[02:36:45] <TML> Or maybe those only happen to me
[02:37:18] *** Joins: gitly (~gitly@148.252.129.25)
[02:37:27] <nedbat> TML: i have many times typed somethng, and never found out where it went!
[02:38:04] *** Parts: justsomeguy (~justsomeg@user/justsomeguy) (WeeChat 3.2)
[02:39:14] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[02:43:12] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[02:43:27] *** Joins: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it)
[02:43:31] *** Quits: y1n (~y1n@178.115.43.165.wireless.dyn.drei.com) (Ping timeout: 252 seconds)
[02:43:49] *** Joins: srhm (~srhm@user/srhm)
[02:45:46] *** Quits: zeromule (~eric@2601:602:8d80:4e50:4d8c:8c6b:5341:6a51) (Ping timeout: 252 seconds)
[02:47:25] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[02:48:35] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 252 seconds)
[02:49:42] *** Joins: tim__ (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[02:50:13] *** Joins: Wulf (~Wulf@user/wulf)
[02:53:58] *** Quits: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (Ping timeout: 252 seconds)
[02:54:11] *** Quits: gggp (~textual@125.33.92.174) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[02:54:23] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: a–ª–ª–∏–ª—π—ñ–∞!)
[02:55:08] *** Quits: int33l (~int3l@78-83-116-167.spectrumnet.bg) (Quit: WeeChat 3.3)
[02:55:23] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[02:55:53] *** Joins: jdmark (~jdmark@097-102-095-007.res.spectrum.com)
[02:56:41] *** Joins: brookesy66 (~will@202.168.59.59)
[02:56:44] *** Quits: bfortified (~bfortifie@172.83.243.94) (Quit: ZNC 1.8.2 - https://znc.in)
[02:58:01] *** Joins: bfortified (~bfortifie@172.83.243.94)
[02:58:22] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 260 seconds)
[03:00:41] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[03:01:23] *** Joins: humberto1 (~humbertow@2806:107e:f:2338:38c9:c2c7:4eb4:63ee)
[03:04:32] *** Quits: humbertowoody (~humbertow@187.202.213.176) (Ping timeout: 252 seconds)
[03:04:57] *** Quits: R0b0t1 (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net) (Read error: Connection reset by peer)
[03:05:43] *** Joins: dre (~dre@2001:8004:4430:7fc7:86e5:778f:714b:303f)
[03:07:00] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:07:30] *** Quits: eem (~eem@user/eem) (Quit: WeeChat 3.3)
[03:09:56] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:318c:fd22:f816:f42d)
[03:10:31] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[03:11:02] *** Joins: R0b0t1 (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net)
[03:13:41] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:14:55] *** Quits: bewees (~bewees@user/bewees) (Remote host closed the connection)
[03:14:59] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[03:16:08] <stewie925> hi pythonistas
[03:16:09] *** Quits: white5moke (~pi0xxdmqj@ip72-219-109-30.oc.oc.cox.net) (Remote host closed the connection)
[03:16:10] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[03:16:30] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[03:16:45] *** Joins: fikran (~fikran@user/fikran)
[03:17:11] <stewie925> could someone help look at this - https://bpa.st/YMBA -   my function is working properly, but the function always returns None  instead of an expected list - thank you!
[03:18:15] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[03:18:39] <stewie925> please ignore the period in line # 21 - that was automatically inserted by the bpaste editor.
[03:19:45] <stewie925> and ignore that period in line 27 for the same reason (bpaste)
[03:19:56] *** Quits: thewrath007 (~mikea_mqt@c-69-138-6-64.hsd1.md.comcast.net) (Ping timeout: 252 seconds)
[03:20:24] <dodo> line 18 result is probably falsy? like []
[03:20:46] <dodo> hm, never mind
[03:21:11] <stewie925> :)
[03:21:12] <dodo> oh, list.sort() mutates
[03:21:26] <dre> ^
[03:21:28] <stewie925> oh
[03:21:33] <dre> you want sorted(result)
[03:21:39] <stewie925> ahhhh
[03:22:01] <stewie925> dodo: and dre:  thanks !
[03:22:12] <stewie925> dre: let me try real quick
[03:22:45] <stewie925> dre: yes!!!! it worked!  thank you so much
[03:23:21] <stewie925> I am going to take a hacker rank code test for a prospective job tonight , so I ve been practicing
[03:23:37] <jeho> good luck
[03:23:54] <dodo> yeah, good luck
[03:23:54] <stewie925> jeho: thank you
[03:24:02] <stewie925> dodo: thank you
[03:24:06] <jeho> I've been working hackerrank problems for a couple months now
[03:24:13] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 252 seconds)
[03:24:28] <dre> stewie925, good luck. don't be afraid to write out proper var names, like "number_array' and "target" - it will help with readability.
[03:24:41] <dre> people want to see how you got to the answer, not just the answer :D
[03:24:42] <stewie925> so we should never use result.sort() in a return statement then
[03:24:56] <dre> just know what they do
[03:24:59] <stewie925> hi dre, yeah duly noted :)
[03:25:15] <jeho> you shouldn't do result.sort() in a return statement anyway because it doesn't return anything
[03:25:50] <stewie925> jeho, how is that?
[03:26:11] <jeho> sorted() returns a sorted list.. result.sort() sorts in lplace
[03:26:46] <stewie925> ohhhh
[03:26:51] <jeho> =)
[03:26:57] *** Joins: etbcf (~etbcf@2001:8a0:7b3a:dd01:9ce7:d6cb:f209:ba21)
[03:27:22] <stewie925> what would be your advice if the coding question is very hard and I couldn't finish it
[03:28:03] <stewie925> can I just do pseudocode just to show them my train of thought (if I could not finish on time)
[03:28:21] <jeho> my suggestion would be to shoot for the naive approach to solving rather than getting hung up in how to find the optimal solution if it's not immediately obvious to you how to get it
[03:28:38] <stewie925> jeho: you mean the brute force approach
[03:29:24] <stewie925> right?  I assume that's what you mean....
[03:29:26] <jeho> if you're spending a lot of time trying to figure out how to get your solution to O(n).. you may not have enough time left to complete the rest of the problems
[03:29:51] <jeho> but in the rare case wehre the O(n) solution is obvious to you.. go for it
[03:30:13] <stewie925> that's what happened to me with my previous coding test - never got to finish
[03:30:26] *** Parts: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it) ()
[03:30:29] <jeho> better to get all the problems done even if they're O(n^2).. than to get one done and the timer expires
[03:30:29] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi) (Read error: Connection reset by peer)
[03:30:46] <jeho> that happened to me too
[03:30:48] <stewie925> jeho: good idea....
[03:31:23] <stewie925> I just hope they don't throw some linked list or binary tree question my way (sigh)
[03:31:28] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[03:31:29] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 252 seconds)
[03:31:32] <jeho> they could
[03:31:46] <stewie925> ugh
[03:31:49] <jeho> just prioritize the questions.. attack the ones that aren't hard first
[03:32:05] <stewie925> true
[03:32:06] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[03:32:44] *** Quits: brachamh (~brachamh@user/brachamh) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[03:32:44] <jeho> i think people only get good at these sorts of problems from working problems for a long time.. real world work experience doesn't help
[03:33:00] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[03:33:10] <stewie925> jeho: so true
[03:33:17] <jeho> these tests are, in my opinion, and unfair barrier to employment.. it can block out a lot of talented engineers
[03:33:25] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[03:34:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[03:34:08] <stewie925> which is why I have been practicing for the past 3 weeks
[03:34:15] <stewie925> and will continue to do so
[03:34:40] *** Joins: brachamh (~brachamh@user/brachamh)
[03:34:57] <jeho> yeah.. after I did miserably on one of these tests for a job. I just committed to working problems every week and to keep that in my routine even after I get a job
[03:34:57] *** Joins: wyclif (~wyclif@user/wyclif)
[03:35:03] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:35:39] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[03:36:48] <stewie925> yeah, practice makes perfect and keeps our minds sharp...
[03:36:52] <jeho> i've probably done around 200 hacker rank problems so far
[03:37:32] <jeho> most of the problems left to do are medium to expert level
[03:37:44] *** Joins: redrum88 (~redrum88@user/redrum88)
[03:37:50] <jeho> i've knocked out several ones rated hard and a few expert
[03:37:52] <stewie925> oh man I am still struggling with some of the medium ones
[03:37:59] <stewie925> awesome, jeho!
[03:38:54] <jeho> the medium to expert level questions often involve applying some algorithm that you wouldn't be able to think up on your own.. you just have to be familiar with a lot of the CS algorithms out there and know how to adapt them
[03:39:30] <jeho> do you know how to do things like apply "counting sort" to some problems?
[03:40:08] <mattf> [Flask Login] Why doesn't remember set to true doesn't work on safari but works on Firefox And Chrome? When I close safari and reopen it is logged out. It can't keep permanent cookies?
[03:40:10] <stewie925> ugh
[03:40:12] <jeho> binary indexed trees are another useful tool..
[03:40:31] <stewie925> Im struggling to understand the binary tree
[03:40:44] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Quit: Leaving)
[03:41:01] <aphysically> this might be the most ridiculous bug/limitation I've had to implement a workaround for https://bpa.st/SWOQ
[03:41:16] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[03:41:19] <jeho> another tool to have in your skills toolbox would be - prefix sums
[03:42:51] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[03:43:26] *** Joins: brabrax_ (~brabrax@user/brabrax)
[03:43:50] *** Joins: califax- (~califax@user/califx)
[03:44:26] *** Quits: ShinyCyril (~ShinyCyri@50-204-92-20-static.hfc.comcastbusiness.net) (Quit: ShinyCyril)
[03:45:32] <stewie925> thanks jeho -  I hope you nail the next code interview
[03:45:34] <nedbat> jeho: i don't know what prefix sums are
[03:45:49] *** Quits: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net) (Remote host closed the connection)
[03:45:56] <stewie925> hi there nedbat, the big O guru :)
[03:46:19] <nedbat> stewie925: hardly a guru, just someone that thinks it can be explained without a lot of math
[03:46:52] <jeho> in real world practical programming that's true.. but these coding challenges can be a bit unreal
[03:47:23] <stewie925> nedbat: your YouTube video explaining big O helped me
[03:47:34] <nedbat> stewie925: that's good to hear
[03:47:52] *** Joins: cjb87253 (~cjb@user/cjb)
[03:48:00] *** Quits: cjb (~cjb@user/cjb) (Ping timeout: 260 seconds)
[03:48:13] <stewie925> :)
[03:48:16] *** cjb87253 is now known as cjb
[03:48:48] *** Quits: dre (~dre@2001:8004:4430:7fc7:86e5:778f:714b:303f) (Quit: Leaving)
[03:50:49] <jeho> I haven't ever found a good page that has all the tricks and tools needed for coding challenge problems that also explained things in a straightforward way
[03:51:06] *** Joins: ShinyCyril (~ShinyCyri@50-204-92-20-static.hfc.comcastbusiness.net)
[03:51:43] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[03:53:01] *** Joins: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net)
[03:53:32] *** Joins: dumbsharka (~amirvince@user/amirvincent64)
[03:55:24] <stewie925> jeho: that is hard to find indeed
[03:55:46] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 260 seconds)
[03:55:50] <stewie925> there are some YouTube videos explaining Codility and HackerRank prelims and solutions
[03:55:58] <stewie925> *problems
[03:57:07] <stewie925> trying to solve this "medium" problem - https://leetcode.com/problems/3sum/
[03:57:13] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:5d10:8850:6285:4e0e)
[03:58:09] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[04:00:19] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[04:00:31] *** Joins: arinov (~arinov@213.194.126.155)
[04:02:21] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[04:03:08] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[04:03:26] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:04:39] <jeho> the naive approach to that would be 3 nested loops
[04:05:14] *** Joins: dba (uid502594@id-502594.hampstead.irccloud.com)
[04:05:47] <jeho> i have a couple ideas for a more efficient solution
[04:06:08] *** Quits: Leonarbro_ (~Leonet@user/leonarbro) (Ping timeout: 252 seconds)
[04:06:14] <stewie925> yeah, I tried the brute approach first, its not looking good
[04:06:22] <jeho> did you get it working?
[04:06:28] <stewie925> Given an integer array nums, return all the triplets [nums[i], nums[j], nums[k]] such that i != j, i != k, and j != k, and nums[i] + nums[j] + nums[k] == 0.
[04:06:51] *** Joins: nbao (~nbao@187.20.181.193)
[04:07:03] <stewie925> so I just basically had three loops, I, j, and k... oh I guess I see where I did wrong
[04:07:28] <jeho> the nested loops would attempt all combinations
[04:07:30] <stewie925> the I should start with index 0, j start with index 1, and k start with index 2 I believe
[04:07:50] <jeho> yeah.. that can reduce the number of operations a little bit
[04:08:01] <jeho> but that will still be O(n^3)
[04:08:15] <klu_> gonna memoize
[04:08:31] <stewie925> as long as I can get a correct result for now.... but I am not lol
[04:08:35] <klu_> trade space for time
[04:09:42] <jeho> you want a hint
[04:09:44] <jeho> ?
[04:09:57] <stewie925> for this array [-1,0,1,2,-1,-4],  the expected answers are [-1,0,1] and [-1,-1,2] but my result is [-1,0,-1] ugh
[04:10:11] <stewie925> and that's using the brute force approach
[04:10:27] <stewie925> jeho: yeah :)
[04:10:34] <jeho> sort the input data first
[04:10:44] <stewie925> yes, I did sort them
[04:10:47] <jeho> oh
[04:10:54] *** Joins: lastshell (~lastshell@user/lastshell)
[04:11:17] <jeho> also, use a set to get the 3rd number
[04:11:17] <stewie925> here are my loops
[04:11:35] *** Quits: klu_ (~klu@user/klu) (Quit: .)
[04:12:45] <stewie925> `for i in range(len(A)-2)` then `for j in range(len(A)-1)` and `for k in range(len(A))`
[04:12:49] *** Joins: klu (~klu@user/klu)
[04:12:54] <jeho> if they're sorted, then you dont' have to scan through all the values.. you stop once they start getting too big, and you can also not have to start at the beginning all the time
[04:13:43] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 252 seconds)
[04:14:16] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[04:14:39] *** Joins: djapo (~archangel@user/djapo)
[04:14:44] <jeho> if you add two numbers, then you know what the 3rd value has to be.. and you can check a `set` for that
[04:15:16] <stewie925> ohhh hmmm
[04:16:17] <stewie925> jeho, shouldn't [-1,0,-1] be valid?
[04:16:27] <stewie925> -1 + 0 = -1
[04:16:35] *** Joins: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net)
[04:16:51] <stewie925> but -1 + -1 = -2
[04:17:05] <jeho> no
[04:17:13] <jeho> -1 + -1 = 2
[04:17:19] <jeho> er.. yeah. -2
[04:17:26] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Remote host closed the connection)
[04:17:32] <stewie925> tricky question, I know
[04:17:47] <stewie925> the sample output doesn't look correct
[04:17:51] <jeho> the example has [-1, 0, 1]
[04:18:14] <jeho> you add all the numbers
[04:18:19] <stewie925> but -1, 0, -1 should be there right?
[04:18:26] <stewie925> or we don't add negative numbers together
[04:18:37] <jeho> -1 + 0 + -1 = -2
[04:18:52] <jeho> -1 + 0 + 1 = 0
[04:18:56] <stewie925> but it has [-1,-1,2]
[04:19:02] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 265 seconds)
[04:19:06] <jeho> -1 + -1 + 2 = 0
[04:19:36] <stewie925> ahhh the sum should equal to 0 !!!
[04:19:49] <stewie925> I missed that
[04:20:32] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[04:20:45] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[04:21:05] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Client Quit)
[04:23:24] *** Quits: Grace (uid33812@id-33812.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[04:27:28] *** Quits: flokuehn (~flokuehn@muedsl-82-207-236-122.citykom.de) (Ping timeout: 252 seconds)
[04:28:09] <Widdershins> it's O(n^2) for n distinct numbers
[04:28:10] *** Joins: Shanzem (~Shanzem@86.31.109.147)
[04:28:36] <jeho> if you use a set to get the 3rd
[04:28:41] <Widdershins> why wouldn't you
[04:28:50] <jeho> not everyone thinks of it
[04:28:56] <Widdershins> that's part of solving the problem
[04:29:14] *** Quits: akk (~akk@75.161.146.115) (Quit: +++)
[04:29:28] *** Joins: flokuehn (~flokuehn@i577bc614.versanet.de)
[04:29:53] <jeho> each time you form a set of 3, they're removed from the input data.. so it shrinks quickly.. so i'm not sure if it's strictly O(n^2)
[04:29:57] <Widdershins> also (-1, -1, 2) isn't a solution because they are not distinct
[04:30:28] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[04:30:30] <Widdershins> no, they're not removed from the set. a number can participate in multiple triplets
[04:30:40] *** Quits: ShinyCyril (~ShinyCyri@50-204-92-20-static.hfc.comcastbusiness.net) (Quit: ShinyCyril)
[04:30:47] <jeho> i, j, and k are the indices
[04:31:01] <jeho> so -1, -1, 2 is valid because they're at different indices
[04:31:23] <stewie925> jeho I think I have an idea.... let me test it out and share with you
[04:31:23] <Widdershins> ah yeah you're right about that one
[04:31:48] <stewie925> Widdershins: there are two -1's in the array
[04:31:54] *** Joins: thewrath007 (~mikea_mqt@pool-173-64-92-193.bltmmd.fios.verizon.net)
[04:32:03] <Widdershins> yes i am well aware of that
[04:32:06] <stewie925> you just cannot use the same element (in the same position) twice
[04:32:12] <Widdershins> we just clarified this
[04:32:40] <stewie925> ok, brb, let me test out my theory :D
[04:34:05] <jeho> let us know it turns out mr. knuth
[04:34:59] *** Quits: gitly (~gitly@148.252.129.25) (Ping timeout: 265 seconds)
[04:36:01] *** Joins: ShinyCyril (~ShinyCyri@50-204-92-20-static.hfc.comcastbusiness.net)
[04:36:37] *** Joins: gitly (~gitly@85.255.235.17)
[04:38:41] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[04:41:30] *** Quits: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net) (Remote host closed the connection)
[04:42:09] *** Joins: wyclif (~wyclif@user/wyclif)
[04:43:36] <jeho> I found an O(n) solution to a problem once that everyone else was posting O(n log n) solutions to. And even the challenge author had an O(n log n) solution in their discussion on the problem.
[04:44:07] <jeho> involved set theory
[04:46:43] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[04:48:30] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:5d10:8850:6285:4e0e) (Ping timeout: 260 seconds)
[04:48:32] <jeho> the string oriented challenges I found to be fun, and a good opportunity to learn some amazing standard algorithms like suffix arrays.
[04:48:34] *** Joins: sydbarret (~anton@static-186-121-195-63.acelerate.net)
[04:48:40] *** Parts: sydbarret (~anton@static-186-121-195-63.acelerate.net) ()
[04:49:47] *** Joins: CodePoint (~BitShift@2600:1700:3070:3790::29)
[04:50:06] <Lando-SpacePimp> jeho, were they impressed?
[04:50:09] *** Joins: wyclif (~wyclif@user/wyclif)
[04:50:18] <jeho> nah
[04:50:47] <jeho> people post their solutions after solving the challenges.. and pretty much hardly anyone ever comments on them anymore on hackerrank
[04:51:01] <jeho> but it made me feel good
[04:51:12] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[04:51:13] <Lando-SpacePimp> yeah, but the skills to Google an O(n) solution while everyone else was only able to Google an O(n log n) solution
[04:51:16] <Lando-SpacePimp> that's impressive
[04:51:30] <jeho> it took more than googling
[04:51:32] <Lando-SpacePimp> :P
[04:51:35] <jeho> =)
[04:52:19] <jeho> i wish I could just google up the solutions for these things; then I'd do better on the challenges companies are using these days to screen candidates
[04:55:52] <Widdershins> what in the flying hell is wrong with leetcode's code environment
[04:56:00] <Widdershins> you can't call other functions in your solution. like at all
[04:56:08] <Widdershins> this is abysmal
[04:56:14] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 252 seconds)
[04:58:49] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 252 seconds)
[04:59:21] *** Joins: frost (~frost@59.71.244.36)
[04:59:48] <cluelessperson> Widdershins, huh? I thought you could.
[05:00:57] *** Joins: califax| (~califax@user/califx)
[05:01:04] <jeho> now I have to try it
[05:01:16] *** Joins: califax^ (~califax@user/califx)
[05:01:17] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[05:01:35] <jeho> hmm.. i can call other functions
[05:02:06] <orbisvicis> how long should python's test_asyncio 26/425 last?
[05:02:08] *** Joins: brabrax- (~brabrax@user/brabrax)
[05:02:10] <jeho> have to have a premium account to use their debugger.. figures
[05:02:15] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[05:02:16] *** califax| is now known as califax
[05:02:18] <Widdershins> jeho: other functions you defined?
[05:02:22] <jeho> yes
[05:02:24] <jeho> c++
[05:02:29] <Widdershins> i'm not using c++
[05:02:32] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 265 seconds)
[05:02:32] *** brabrax- is now known as brabrax
[05:02:35] <jeho> Python?
[05:02:37] *** Joins: brabrax| (~brabrax@user/brabrax)
[05:02:42] * Widdershins looks at channel name
[05:02:47] *** Quits: brabrax_ (~brabrax@user/brabrax) (Ping timeout: 252 seconds)
[05:02:59] <jeho> so.. rust right?
[05:03:12] <SnoopJ> no, that's #python-offtopic
[05:03:19] <leduyquang753> Are you trying to troll or what?
[05:03:33] *** Quits: califax- (~califax@user/califx) (Ping timeout: 276 seconds)
[05:03:50] <leduyquang753> Widdershins So what happens when you try
[05:04:44] <jeho> yeah. I can call my other python methods/functions
[05:04:53] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[05:05:28] <jeho> do you have any extensions installed in your browser that would inhibit javascript?
[05:05:42] <Widdershins> what does javascript in the browser have to do with anything
[05:05:58] <Widdershins> the test cases are queued and run on their backend
[05:06:12] <jeho> i know this
[05:06:38] <stewie925> I got a partial solution to the threesum - not copied from someone else - but it only returns one result not all combinations - https://bpa.st/3J3A
[05:06:40] <jeho> alright.. well. environment is working fine on my side.
[05:07:15] <dba> is it possible to start from the end of the list when calling join() ?
[05:07:54] <KirkMcDonald> dba: "".join(reversed(foo))
[05:08:21] <dba> Thanks KirkMcDonald
[05:08:43] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 252 seconds)
[05:09:47] *** Quits: nyah (~nyah@bcdcb6e3.skybroadband.com) (Ping timeout: 265 seconds)
[05:09:52] *** Joins: vlm (~vlm@user/vlm)
[05:10:34] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[05:10:41] <jeho> i don't know how you're managing to get even one result with the code in that bpaste
[05:11:33] <jeho> oh i see there's a return in the middle of get_two_sum()
[05:11:47] <jeho> so stewie925. when did you say you had to take this test?
[05:12:37] <stewie925> before Monday - but I will ask them to let me finish it before Monday EOD
[05:12:53] <jeho> so tomorrow?
[05:13:05] <jeho> or following monday
[05:13:07] <stewie925> yeah, Im going to email them and say tomorrow
[05:13:14] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 260 seconds)
[05:13:20] <jeho> how many questions do they throw at you?
[05:13:47] <stewie925> oh, I hope Im not confusing you - this threesum is NOT part of their questions
[05:14:34] <jeho> no. i understood this was just practice
[05:14:35] <stewie925> I haven't opened the link yet, so I don't know how many questions, but I was told they'll give me two hours
[05:14:52] <stewie925> two hours for the test
[05:14:58] *** Quits: nomic (~nomic@85.203.36.16) (Quit: Leaving)
[05:15:03] <jeho> what's your level of confidence?
[05:15:23] <Widdershins> leetcode quiz style interviews are bad
[05:15:28] <jeho> agreed
[05:15:29] <stewie925> honestly,  3 out of 5
[05:15:45] <stewie925> mine is going to be hackerrank
[05:15:52] <Widdershins> if the only thing they do to assess how good you are at making software is give you brainteasers the company is probably not hiring good people
[05:15:52] <stewie925> I was told in advance
[05:15:58] <Widdershins> that's too bad
[05:16:03] <jeho> they aren't a true test of a developer's ability, and frankly they're kind of rude to be honest and dehumanizing
[05:16:21] <Widdershins> unfortunately that's also not a terrible sign because everyone does this
[05:16:35] <Widdershins> software interviews are 99% cargo cult
[05:16:45] <CodePoint> those tests are stupid.
[05:16:52] <stewie925> I read from Quora that some interviewers accept pseudocode -  I dunno
[05:16:59] <CodePoint> if you can pass one you should just start your own business instead
[05:17:09] <stewie925> like, they want to get your thought process
[05:17:45] <jeho> If I were in charge of hiring with a company that used these for screening.. I would pick easy ones, and then I'd have someone see if they could solve them to make sure they were realistic to give to candidates for screening
[05:18:10] <Widdershins> a lot of questions are pseudocodeable. that's what a whiteboard interview is in the first place originally, there's no runtime
[05:18:14] * SnoopJ greatly prefers to evaluate process, not product
[05:18:30] <Widdershins> actually live coding can show how familiar the person is with debugging, in a hostile and unfamiliar environment
[05:18:34] <jeho> yeah.. unfortunately with these automated tests, you can't pseudocode your way through it or get a partial solution
[05:18:35] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[05:18:47] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[05:18:49] <jeho> companies that use these go by the output of the tests
[05:19:01] <Widdershins> if someone asked me to solve fizzbuzz i would refuse
[05:19:48] <jeho> another consolation is, if a company is using these to screen and that's how they understood developer skills to work.. then maybe they aren't a good company to work for
[05:21:23] <Widdershins> unfortunately you can't screen them by this because basically every company does this anyway
[05:21:41] <Widdershins> if they *only* screen by this then yes it's not much to miss out on
[05:21:53] <stewie925> I got laid off in the middle of COVID in 2020 and been out of commission for a year, so I have been furiously studying to play catch up to prepare for the interviews.  This coding interview certainly threw me a curved ball
[05:22:01] <Widdershins> in either case most companies are not good to work for, and most companies rely heavily on coding brainteasers to interview
[05:22:50] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[05:23:19] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 265 seconds)
[05:24:08] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[05:24:14] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[05:24:16] <jeho> i hate to say it, but you may not do well on the tests tomorrow. so my advice is to take it in stride, and move on to the next interview
[05:24:19] *** Joins: white5moke (~pi0xxdmqj@ip72-219-109-30.oc.oc.cox.net)
[05:25:02] <SnoopJ> I would consider it meaningful signal if a potential employer made an effort to get around some of the inanity behind technical evaluation (enough that I could notice it), but probably not otherwise.
[05:25:03] *** Quits: CodePoint (~BitShift@2600:1700:3070:3790::29) (Quit: Never gonna give you up, never gonna let you down...)
[05:25:25] <Widdershins> yeah
[05:26:06] *** Joins: fikran (~fikran@user/fikran)
[05:27:09] <jeho> it makes sense to test people just out of college.. because they don't have the years of work experience, so they have to demonstrate some value.. but old-timers with years of experience should be given a more traditional tech interview
[05:27:58] <orbisvicis> I'm running test_cancel_process_wait (test_subprocess.SubprocessSafeWatcherTests) ... on python 3.9.7 and that test hangs
[05:28:05] *** Quits: gitly (~gitly@85.255.235.17) (Ping timeout: 252 seconds)
[05:28:23] <orbisvicis> is that, err, normal?
[05:28:36] *** Joins: zebrag (~chris@user/zebrag)
[05:28:51] <Widdershins> probably not but we also probably would need to know almost everything about the rest of your computer to diagnose it
[05:29:08] <SnoopJ> at a guess just from the name, it may be "hanging" because it's wait()ing on the process
[05:29:14] <grym> jeho: coming from a world where absolutely *none* of this is normal... the whole game seems very weird
[05:29:39] <SnoopJ> grym, yea, academic interviews make you come up with the questions *and* the answers
[05:29:57] *** Joins: redrum88_ (~redrum88@user/redrum88)
[05:30:04] *** Joins: gitly (~gitly@148.252.129.25)
[05:30:55] <grym> SnoopJ: yeah, "let me tell you what my answers were to some questions i had 3 years ago, and we'll find out together if you like them and how i tell you about them!  Then, donuts."
[05:31:01] *** Quits: zaz\ (~zaz@poneybl.eu) (Quit: bye)
[05:31:16] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 252 seconds)
[05:31:23] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Remote host closed the connection)
[05:31:31] *** Joins: zaz\ (~zaz@poneybl.eu)
[05:33:56] <jeho> I was given a postman's optimal route style question one one of these automated screening tests. ugh.
[05:34:01] *** Quits: redrum88 (~redrum88@user/redrum88) (Ping timeout: 252 seconds)
[05:34:35] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[05:34:45] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[05:35:11] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[05:35:16] <Widdershins> jeho: you mean like TSP?
[05:35:24] *** Quits: redrum88_ (~redrum88@user/redrum88) (Ping timeout: 265 seconds)
[05:36:03] <SnoopJ> tough schlep: postal
[05:36:19] <grym> canine confounds
[05:36:19] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[05:36:30] <Widdershins> that's one of those things that really shouldn't be offered in a coding interview like that. if it is just write the stupidest brute force that still eventually produces a result in theory
[05:36:47] <Widdershins> if you ever need to actually solve that problem just put it down and go find a state of the art library that's actually designed to do it
[05:37:18] <SnoopJ> I was given a mazegen problem in my technical and I have pretty mixed feelings about it as an experience!
[05:37:35] <Widdershins> recognizing when a problem is NP-complete is one of the more difficult aspects of these sorts of interviews. i've found some really bizarre ones
[05:37:38] *** Quits: aead (~aead@user/aead) (Killed (NickServ (GHOST command used by aeadio)))
[05:37:59] *** Joins: aeadio (~aead@user/aead)
[05:38:04] <Widdershins> maze generation is a really interesting problem that's way too nuanced to properly solve in a coding interview imho
[05:38:05] <SnoopJ> The task I think I am against, it's just kinda too big for the time. But the person who administered it had a great follow-up question about how to be sure the maze was soluble
[05:38:10] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:38:17] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:38:28] <Widdershins> i mean it's solvable if you make sure that it's a spanning tree, as most mazes are
[05:39:02] <Widdershins> but unbiased or not-too-biased spanning tree sampling is not a trivial task
[05:39:23] <SnoopJ> I mentioned minimal spanning trees in my thinking-aloud while working the problem, and said "yea, so I don't have time for that, so okey doke, one dumb right-and-down mover coming right up!"
[05:39:34] <jeho> yeah.. like TSP
[05:40:05] <Widdershins> jeho: yeah if someone asks me to solve TSP i will just write a catastrophically slow brute force solution and call it a day
[05:40:29] *** Joins: mistery (~mistery@96.59.174.9)
[05:40:47] <SnoopJ> malicious compliance option: ask about underspecified constraints
[05:40:49] <jeho> it was bad.. and on top of that there was another equally obscure graph related problem
[05:41:01] <jeho> the tests chosen for me were unrealistic
[05:41:24] <SnoopJ> it's not uncommon that asymptotically superior solutions are just abysmal for *typical* instantiations of a problem
[05:41:49] * grym scrawls '5050' on a chalkboard.  there it lies!
[05:42:00] <Widdershins> SnoopJ: you know the "find the contiguous sublist of numbers with the largest sum" problem
[05:42:09] <grym> (one of my top five favorite mathemetician stories, that one)
[05:42:39] <SnoopJ> Widdershins, I don't think I do, actually
[05:43:21] <Widdershins> you just keep a running nonnegative sum and a maximum that number reaches and it's linear time O(1) space
[05:43:30] <Widdershins> anyway i was asked an extension of this and thought it was for generalized subsets of a grid or graph (turns out he just wanted it for rectangles) but he was interested in seeing my approach to it
[05:43:48] <Widdershins> i thought about it a lot and couldn't make a lot of headway and looked it up later and it's NP-complete
[05:43:52] <Widdershins> https://arxiv.org/abs/1409.5308
[05:44:32] <grym> if i keep clicking links i'm going to wind up browsing OEIS all night, aren't i
[05:44:36] <Widdershins> like you're basically asking for some kind of optimal slime mold feeding network style solution to net-positive n-way bridges between positive islands in an arbitrary graph, turns out that's expensive
[05:45:02] <SnoopJ> Widdershins, hot take: simplex optimization works in more places than it's given credit for
[05:45:20] <jeho> when you're stressing and self conscious about your performance solving a problem that could mean employment with the company you want.. the wording of these problems makes them seem crazy hard for the first few minutes just trying to read them and get what they want you to do
[05:45:35] <Widdershins> i'm sure it'd be practical but the bounded cost for a guaranteed optimal solution is still nonpolynomial :P
[05:45:44] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.2.1)
[05:45:58] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[05:46:40] *** Quits: white5moke (~pi0xxdmqj@ip72-219-109-30.oc.oc.cox.net) (Remote host closed the connection)
[05:47:25] <grym> jeho: it's certainly a bias towards my own approach to these things, but i feel like as an interviewer, i'd look really favorably on someone who talked out the problem with me at length before just wading in ...
[05:48:07] *** Joins: aead (~aead@user/aead)
[05:48:46] <jeho> working out a table showing how the input data influences the output is often helpful
[05:49:01] *** Quits: flyback (~flyback@2601:540:8201:1e60:a5ea:e77f:ee1d:6a16) (Quit: Leaving)
[05:49:19] *** Joins: flyback (~flyback@2601:540:8201:1e60:1d56:68fc:5bc4:158a)
[05:49:29] <grym> jeho: in my mechanics courses in undergrad i used to think of drawing out the free body diagram as my equivalent of mise en place
[05:49:42] <grym> same deal here, i think
[05:50:00] <grym> (and one should respect a chef who has decent mise!)
[05:50:06] <stewie925> grym: very well said on that "talking out the problem before wading in"
[05:51:02] <jeho> yes.. definitely try talking to your computer screen tomorrow =)
[05:51:06] <grym> stewie925: if you have deep logs, you can tally the number of times here that someone's asked a question Q and i've quickly answered Q' instead and then had to eat my shoes
[05:51:09] <grym> again
[05:51:17] <grym> so like, practice what i preach :D
[05:51:29] <grym> that tally is ... not zero.
[05:52:03] *** Joins: tm007 (uid287041@id-287041.uxbridge.irccloud.com)
[05:53:05] <stewie925> grym: so you interviewed prospective python developers/engineers?
[05:53:26] <grym> stewie925: i've done it a few times
[05:53:34] <tm007> whos hiring?
[05:53:34] <stewie925> grym: nice
[05:53:50] <jeho> i've interviewed quite a few developers
[05:53:53] <grym> stewie925: caveat: ML/science heavy team, so YMMV
[05:54:10] <stewie925> yeah who's hiring lol - Im in the US of A near Silicon Valley
[05:54:24] <stewie925> googling YMMV
[05:54:31] <SnoopJ> "your mileage may vary"
[05:54:46] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[05:54:49] <jeho> once I had candidates complete some basic tasks with visual studio like create a simple DLL project, and a console project then link them.
[05:55:03] <stewie925> SnoopJ: HAHA yeah got it  thanks
[05:55:08] <jeho> one guy just started seating bullets
[05:55:10] <jeho> *sweating
[05:55:24] <jeho> it was agonizing just to watch him. I felt bad
[05:55:30] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[05:55:37] <tm007> lol
[05:55:39] <grym> jeho: next time, just end it
[05:55:42] <grym> kindly
[05:55:48] <tm007> turn on the cooler
[05:55:52] <jeho> heh
[05:55:55] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9971-ce5a-c805-3e08.res6.spectrum.com) (Quit: Leaving)
[05:56:11] <tm007> all you guys in ML?
[05:56:18] <jeho> my manager saw him come out and asked me, "what did you do to that guy!?"
[05:56:40] <stewie925> ok what is ML - sorry to interject
[05:56:55] <tm007> Machine Learning
[05:56:59] <tm007> I meant
[05:57:06] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[05:57:16] <stewie925> yeah.. ML ... that is HEAVY stuff
[05:57:20] <tm007> Are you guys working as DS/AI/ML Engineers?
[05:57:34] <SnoopJ> stewie925, it sounds a lot more impressive than it is
[05:57:36] <tm007> I am just a poor old backend web developer
[05:57:45] *** Quits: aead (~aead@user/aead) (Quit: ZNC - https://znc.in)
[05:57:52] <tm007> don't make me sweat
[05:58:15] <stewie925> "web developer" at least you got a lot going for you
[05:58:47] <stewie925> so many web developer jobs out there
[05:58:59] *** Joins: aead (~aead@user/aead)
[05:59:05] *** Quits: Leonarbro_ (~Leonet@user/leonarbro) (Ping timeout: 265 seconds)
[05:59:46] <stewie925> Im just poor....
[06:00:56] <jeho> bots
[06:01:32] <grym> ml is also 'meta-language', which i assure you is a lot heavier than machine learning
[06:01:50] *** Joins: XV8 (~XV8@2601:5cb:c001:50:b1fc:daf5:89c3:87be)
[06:01:57] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[06:03:02] *** Joins: Fiji (~Fiji@user/fiji)
[06:03:37] *** Quits: rud0lf (rud0lf@user/rud0lf) (Read error: Connection reset by peer)
[06:03:49] *** Quits: ShinyCyril (~ShinyCyri@50-204-92-20-static.hfc.comcastbusiness.net) (Quit: ShinyCyril)
[06:04:00] <XV8> How does one inspect the built-in len function? I have tried a few methods, such as print(inspect.getsource(len)), but I get a type error when I try to inspect.
[06:04:01] *** Joins: rud0lf (rud0lf@user/rud0lf)
[06:04:19] <KirkMcDonald> XV8: It's written in C.
[06:04:28] <jeho> github
[06:04:49] <XV8> That makes sense. Thank you
[06:05:09] <stewie925> Im just grateful we have an IRC where python wizards share their knowledge with lowly people like us
[06:05:28] <stewie925> *like me, not us
[06:05:46] <KirkMcDonald> XV8: It's not a very interesting function: https://github.com/python/cpython/blob/main/Python/bltinmodule.c#L1671
[06:06:38] *** Quits: Barones (~Barones@177.132.237.5) (Remote host closed the connection)
[06:06:51] <SnoopJ> stewie925, why do you say lowly? One of the best things about the Python community in my experience is the rejection of hierarchy.
[06:07:48] <stewie925> SnoopJ:  I was just teasing on the lowly part, but I honestly do appreciate this chat.
[06:07:52] <stewie925> this chat room
[06:09:20] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 252 seconds)
[06:10:19] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 252 seconds)
[06:10:40] *** Joins: brnwx (~brnwx@cpe-74-71-226-69.nyc.res.rr.com)
[06:10:48] *** Quits: brentaarnold (~brentaarn@32.132.115.46) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[06:11:32] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[06:11:34] *** Quits: etbcf (~etbcf@2001:8a0:7b3a:dd01:9ce7:d6cb:f209:ba21) (Ping timeout: 260 seconds)
[06:11:38] *** Joins: brentaarnold (~brentaarn@32.132.115.46)
[06:11:55] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:13:17] <stewie925> threesum exercise update - I passed some test and failed some - https://bpa.st/YLJQ
[06:14:45] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[06:22:30] *** Quits: XV8 (~XV8@2601:5cb:c001:50:b1fc:daf5:89c3:87be) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[06:25:04] *** Joins: XV8 (~XV8@2601:5cb:c001:50:b1fc:daf5:89c3:87be)
[06:25:17] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 252 seconds)
[06:25:27] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[06:25:39] *** Quits: brnwx (~brnwx@cpe-74-71-226-69.nyc.res.rr.com) (Quit: Leaving)
[06:26:05] *** Joins: brnwx (~brnwx@cpe-74-71-226-69.nyc.res.rr.com)
[06:26:19] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 252 seconds)
[06:26:38] *** Quits: brabrax| (~brabrax@user/brabrax) (Ping timeout: 265 seconds)
[06:27:24] *** Quits: califax^ (~califax@user/califx) (Ping timeout: 276 seconds)
[06:27:52] *** Joins: brabrax (~brabrax@user/brabrax)
[06:28:03] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:28:12] *** Joins: califax (~califax@user/califx)
[06:28:17] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:29:39] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[06:30:03] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[06:30:24] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:30:33] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[06:32:01] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[06:35:39] *** Parts: nickodd (~nickodd@user/nickodd) ()
[06:37:46] *** Joins: califax- (~califax@user/califx)
[06:39:01] <stewie925> a quick python question guys - based on https://bpa.st/YLJQ
[06:39:55] <stewie925> why is it that the variables in line #3  are not accessible by function get_two_sums() ?
[06:40:30] <stewie925> my understanding is that any variables declared before the function should be accessible?
[06:41:01] <stewie925> very close to fixing the threesum, but am stumped with that problem
[06:41:27] <Widdershins> stewie925: get_two_sum doesn't access those variables?
[06:42:01] <stewie925> Widdershins: get_two_sum cannot access them
[06:42:02] <stewie925> weird
[06:42:15] <Widdershins> it doesn't try to. they are not named inside that function
[06:42:41] <stewie925> oh, so I should declare them as global to be able to
[06:42:53] <Widdershins> no
[06:43:05] *** Quits: subopt (~subopt@2603-8081-2302-459a-c44d-4137-d2af-3bba.res6.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[06:43:06] <Widdershins> what are you trying to do? your question doesn't make any sense
[06:43:20] <stewie925> I was hoping to use that variable for get_two_sum
[06:43:26] <stewie925> use those variables
[06:43:34] <Widdershins> use them how
[06:43:59] *** Quits: lethu (~lethu@user/lethu) (Ping timeout: 252 seconds)
[06:44:05] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:44:38] <deltab> stewie925: what happens when you try?
[06:45:04] *** Quits: hsv (~unknown@user/hsv) (Remote host closed the connection)
[06:45:07] <stewie925> Widdershins:  m trying to get line numbers 25-28 to be executed in get_two_sum instead
[06:45:14] *** Quits: brnwx (~brnwx@cpe-74-71-226-69.nyc.res.rr.com) (Quit: Leaving)
[06:45:29] <Widdershins> there's no reason you can't do that
[06:45:44] <stewie925> deltab, vscode complains that the variables are not accessible
[06:46:01] <Widdershins> you would need to declare "result" to be non-local if you actually want to assign it like that, but currently there is no reason for this to be declared where it is
[06:46:03] *** Joins: lethu (~lethu@user/lethu)
[06:46:19] <Widdershins> have you tried running the code
[06:46:36] *** Joins: philipp64|work (~philipp64@174.27.28.163)
[06:46:40] <Widdershins> what is the exact error it says
[06:46:52] <stewie925> the code in bpaste link is working
[06:47:10] <stewie925> but I need to change the return statement
[06:47:16] <Widdershins> which is exactly why it's so difficult to help you: you aren't providing code that shows what you are asking about
[06:47:19] <stewie925> in the get_two_sum()
[06:47:49] *** Quits: califax- (~califax@user/califx) (Remote host closed the connection)
[06:47:50] *** Quits: brabrax_ (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[06:48:04] <stewie925> Widdershins: sorry, bear with me...
[06:48:07] <stewie925> https://bpa.st/YLJQ
[06:48:28] <Widdershins> this is the exact same link
[06:48:41] *** Joins: califax- (~califax@user/califx)
[06:48:50] <stewie925> ohhhhh.. sorry I see what you mean
[06:49:02] <stewie925> hold on.... let me upload it...
[06:49:09] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:50:00] *** Joins: zhangjingqiang (~zhangjing@p8239-ipngn9501marunouchi.tokyo.ocn.ne.jp)
[06:50:04] <orbisvicis> !topic
[06:51:11] *** Quits: zhangjingqiang (~zhangjing@p8239-ipngn9501marunouchi.tokyo.ocn.ne.jp) (Quit: Client closed)
[06:51:41] *** Quits: thewrath007 (~mikea_mqt@pool-173-64-92-193.bltmmd.fios.verizon.net) (Ping timeout: 252 seconds)
[06:52:14] *** Joins: DrBrownBear (~DrBrownbe@2600:1700:9aa1:6bc0:8494:80ad:ef10:49c8)
[06:54:02] *** Quits: califax- (~califax@user/califx) (Remote host closed the connection)
[06:54:03] *** Quits: brabrax_ (~brabrax@user/brabrax) (Client Quit)
[06:54:47] <orbisvicis> this is from 3.9.5-3.9.7 of Lib/test/test_asyncio/test_subprocess.SubprocessThreadedWatcherTests.test_close_dont_kill_finished
[06:54:50] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:54:51] <orbisvicis> https://bpa.st/VAGA
[06:54:59] *** Joins: califax- (~califax@user/califx)
[06:55:38] <orbisvicis> only the 2nd assertion fails on ubuntu/3.9.5 and cygwin/3.8.10, which I find unusual
[06:56:29] <Widdershins> orbisvicis: is this taken from the cpython test suite? i have no idea where this code is from
[06:56:41] <orbisvicis> Widdershins, yes
[06:56:50] <Widdershins> can you link to the original
[06:57:09] <orbisvicis> just realized I forgot to run it on my cygwin/3.9.7 build, where it hangs.
[06:57:11] *** Quits: DerpGusta (~quassel@user/derpgusta) (Ping timeout: 252 seconds)
[06:57:25] <orbisvicis> ...and I just did, and this excerpt doesn't hang
[06:57:38] <orbisvicis> https://github.com/python/cpython/blob/main/Lib/test/test_asyncio/test_subprocess.py#L500
[06:57:58] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[07:03:07] <Widdershins> is this failing for you specifically, or in a CI? is this related to another bug you are seeing, or are you just running the tests yourself?
[07:04:00] *** Joins: Samian (~Sami@user/samian)
[07:04:51] <orbisvicis> it is failing for me - my build - specifically, but I'm not yet sure why
[07:06:05] <orbisvicis> the main issue being that test hanging forever
[07:07:56] *** Joins: djapo (~archangel@user/djapo)
[07:08:54] <Widdershins> how long is forever? it takes ~40 seconds to finish on the CI
[07:11:45] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[07:12:48] <orbisvicis> heh, I misread that 2nd assertion
[07:12:53] <orbisvicis> Widdershins: pretty sure
[07:12:59] <orbisvicis> I left it running for about 10 minutes
[07:13:11] <orbisvicis> though locally the pasted excerpt runs much faster
[07:13:33] <Widdershins> well i surely can't talk about how flaky cpython's tests are. no idea
[07:13:53] *** Joins: y1n (~y1n@178.115.56.21.wireless.dyn.drei.com)
[07:16:36] *** ExpiredKebab is now known as ExpiredKebab|afk
[07:17:22] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 260 seconds)
[07:20:10] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 260 seconds)
[07:22:01] <orbisvicis> hmm, may not be that specific test. I've run it 3 times, had 3 different asyncio subprocess tests hang
[07:24:02] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:318c:fd22:f816:f42d) (Quit: Ping timeout (120 seconds))
[07:24:49] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:318c:fd22:f816:f42d)
[07:25:42] <stewie925> jeho: I finally got my code running for threesum - but the efficiency is abysmal:  https://leetcode.com/submissions/detail/561624622/
[07:25:46] <SnoopJ> I don't think cygwin is a high-priority environment per se for running the suite.
[07:29:13] *** Joins: Croves (~Croves@2804:14c:578b:9102:45cd:bdc3:6927:4033)
[07:29:14] *** Parts: Croves (~Croves@2804:14c:578b:9102:45cd:bdc3:6927:4033) ()
[07:29:33] <stewie925> Widdershins:  I was finally able to fix my code and get it to run with no more errors - thank you
[07:29:36] *** Joins: Croves (~Croves@2804:14c:578b:9102:45cd:bdc3:6927:4033)
[07:30:02] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.4-dev)
[07:30:55] *** Joins: djhankb (~djhankb@208.113.164.68)
[07:31:26] *** Joins: Sky_Net (~Sky_Net@176.14.213.149)
[07:31:47] <stewie925> although I know it looks kinda ugly, especially with lines 21 and 34 - the same 'return <variable>' code  - https://bpa.st/GJZQ
[07:32:12] *** Joins: KombuchaKip (~kip@192.252.230.5)
[07:33:02] *** Joins: saroy (~Sandipan@45.249.73.179)
[07:33:49] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[07:34:06] *** Joins: dre (~dre@2001:8003:c932:c301:a6ae:89a3:2bc6:7303)
[07:34:32] *** Joins: r3m (~launch@user/r3m)
[07:35:25] *** Joins: fikran (~fikran@user/fikran)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:17] *** Quits: dhill (dhill@modemcable103.217-80-70.mc.videotron.ca) (Ping timeout: 246 seconds)
[07:37:58] <Widdershins> why are you appending to the captured `results_array` and then also returning it
[07:38:11] <Widdershins> and then assigning it to itself?
[07:38:38] <stewie925> yeah, it looks horrendous
[07:38:40] <Widdershins> you should decide what get_two_sum is supposed to actually do and then have it do that
[07:39:31] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[07:39:57] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Client Quit)
[07:41:51] <deltab> stewie925: hat's it meant to do?
[07:42:02] *** Quits: LiftLeft (~LiftLeft@172.98.92.24) (Ping timeout: 265 seconds)
[07:44:26] *** Quits: dmr (~rdumitru@user/dmr) (Ping timeout: 260 seconds)
[07:50:15] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 265 seconds)
[07:50:54] *** Joins: audio (~audio@cpe-24-27-99-134.tx.res.rr.com)
[07:51:33] *** Quits: XV8 (~XV8@2601:5cb:c001:50:b1fc:daf5:89c3:87be) (Quit: Textual IRC Client: www.textualapp.com)
[07:51:54] *** Quits: audiobirb (~audio@2603-8081-1800-b44d-869e-11b0-904e-fa1b.res6.spectrum.com) (Ping timeout: 260 seconds)
[07:54:43] *** Joins: djapo (~archangel@user/djapo)
[07:56:03] *** Quits: audio (~audio@cpe-24-27-99-134.tx.res.rr.com) (Ping timeout: 265 seconds)
[08:00:16] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[08:01:25] *** Quits: zmt00 (~zmt00@user/zmt00) (Read error: Connection reset by peer)
[08:01:47] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Client Quit)
[08:02:30] *** Quits: Croves (~Croves@2804:14c:578b:9102:45cd:bdc3:6927:4033) (Ping timeout: 256 seconds)
[08:02:35] *** Joins: jscrapps (~jscrapps@2601:603:c80:4b90::7672)
[08:03:04] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 252 seconds)
[08:04:38] *** Joins: zmt00 (~zmt00@user/zmt00)
[08:04:43] *** Quits: brabrax_ (~brabrax@user/brabrax) (Ping timeout: 252 seconds)
[08:04:52] *** Quits: Sky_Net (~Sky_Net@176.14.213.149) (Read error: Connection reset by peer)
[08:04:54] *** Quits: califax- (~califax@user/califx) (Ping timeout: 276 seconds)
[08:04:54] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[08:05:48] *** Joins: califax (~califax@user/califx)
[08:05:50] *** Joins: califax- (~califax@user/califx)
[08:06:03] *** Joins: brabrax (~brabrax@user/brabrax)
[08:06:06] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:06:39] *** Joins: brabrax_ (~brabrax@user/brabrax)
[08:08:28] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:09:49] <orbisvicis> Widdershins, the hang was in close_loop and it affects the official cygwin 3.8.10 build as well
[08:10:02] <orbisvicis> (in tearDown)
[08:10:03] <orbisvicis> https://github.com/python/cpython/blob/main/Lib/test/test_asyncio/utils.py#L510
[08:14:06] *** Quits: nbao (~nbao@187.20.181.193) (Quit: leaving)
[08:14:58] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[08:15:43] *** Quits: sandb0y (pirate@user/sandb0y) (Quit: WeeChat 3.2.1)
[08:15:57] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Remote host closed the connection)
[08:16:22] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[08:16:38] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[08:17:51] <orbisvicis> specifically in joining the watcher threads
[08:18:36] *** Joins: Yion (~Yion@pd95caa88.dip0.t-ipconnect.de)
[08:19:07] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[08:21:07] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:318c:fd22:f816:f42d) (Quit: Ping timeout (120 seconds))
[08:24:19] *** Quits: Shanzem (~Shanzem@86.31.109.147) (Quit: sudo Shanzem -lol -updoot -karma -gold >/dev/lies)
[08:25:06] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[08:26:15] *** Quits: Samian (~Sami@user/samian) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[08:26:43] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[08:27:04] *** Joins: Samian (~Sami@user/samian)
[08:27:09] *** Quits: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) (Remote host closed the connection)
[08:27:40] *** Joins: emf (~emf@2601:600:104:1fb:1448:b25b:b518:8649)
[08:28:16] *** Quits: emf (~emf@2601:600:104:1fb:1448:b25b:b518:8649) (Client Quit)
[08:28:17] *** Joins: wyclif (~wyclif@user/wyclif)
[08:28:38] *** Joins: stranac (~stranac@195.29.239.126)
[08:29:31] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Quit: I'm tired, have a good time!)
[08:29:44] *** Joins: emf_ (~emf@2601:602:9401:b660:47d:d5f4:4143:7c05)
[08:32:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[08:33:37] *** Joins: emf__ (~emf@2620:10d:c090:400::5:5f6f)
[08:33:45] *** Joins: wyclif (~wyclif@user/wyclif)
[08:34:09] <orbisvicis> does this warrant a bug report?
[08:34:22] *** Quits: emf_ (~emf@2601:602:9401:b660:47d:d5f4:4143:7c05) (Ping timeout: 260 seconds)
[08:35:09] *** Quits: cjb (~cjb@user/cjb) ()
[08:35:32] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:16fd:7b14:dc8d:ba37)
[08:37:56] *** Quits: iflema (~ian@user/iflema) (Remote host closed the connection)
[08:38:13] <rakoon> Is there a way to control the number of parallel requests being made by httpx? Is it the max_connections in a pool limit configuration? I get rate limited, i am allowed to have 4 parallel requests and I don't know how to enforce it
[08:38:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[08:39:14] *** Joins: wyclif (~wyclif@user/wyclif)
[08:39:18] <rakoon> There is also the max_keep_alive_connections option
[08:39:33] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 265 seconds)
[08:41:58] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[08:44:35] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:45:17] *** Joins: DaleNa9g (~igloo@071-093-142-189.res.spectrum.com)
[08:45:32] <rakoon> I am also trying to find a way to measure how many requests per second I am firing at the API because i get rate limited on that as well (100/second)
[08:48:03] <rakoon> i just found trimiter but it is not ready for production :/
[08:48:55] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[08:49:10] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:49:12] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[08:51:04] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:51:28] *** Parts: jaggz (~jaggz@user/jaggz) (Leaving)
[08:52:56] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:b423:2116:b870:efc8) (Read error: Connection reset by peer)
[08:53:23] *** Joins: emf (~emf@2620:10d:c090:400::5:5f6f)
[08:54:04] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[08:54:26] *** Quits: DrBrownBear (~DrBrownbe@2600:1700:9aa1:6bc0:8494:80ad:ef10:49c8) (Ping timeout: 260 seconds)
[08:55:02] *** Joins: iflema (~ian@user/iflema)
[08:55:05] *** Joins: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net)
[08:55:22] *** Quits: emf__ (~emf@2620:10d:c090:400::5:5f6f) (Ping timeout: 260 seconds)
[08:55:31] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Client Quit)
[08:57:29] *** Quits: zmt00 (~zmt00@user/zmt00) (Read error: Connection reset by peer)
[08:57:58] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Quit: Leaving)
[08:58:04] *** Quits: AlanMD (~AlanMD@86.121.179.183) (Ping timeout: 252 seconds)
[08:58:24] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[09:00:26] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[09:05:20] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[09:05:34] *** Joins: emf_ (~emf@2620:10d:c090:400::5:5f6f)
[09:05:49] *** Quits: emf (~emf@2620:10d:c090:400::5:5f6f) (Ping timeout: 252 seconds)
[09:06:11] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[09:08:31] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:318c:fd22:f816:f42d)
[09:08:40] *** Joins: emf (~emf@2620:10d:c090:400::5:5f6f)
[09:11:56] *** Quits: DaleNa9g (~igloo@071-093-142-189.res.spectrum.com) (Ping timeout: 252 seconds)
[09:12:10] *** Quits: emf_ (~emf@2620:10d:c090:400::5:5f6f) (Ping timeout: 260 seconds)
[09:13:01] <aphysically> I realized I should be doing some cleanup in a try..finally statement and wondered why I hadn't run into this before
[09:13:06] *** Quits: brentaarnold (~brentaarn@32.132.115.46) (Ping timeout: 260 seconds)
[09:13:12] <aphysically> as far as I can tell most of the cases where I would want it already have nice built-in context managers :)
[09:13:30] <aphysically> (that I was already using)
[09:17:24] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[09:17:48] *** Joins: dre_ (~dre@2001:8004:4430:58d:7c07:dfdd:439:9f82)
[09:17:49] *** Joins: ano (~ano@user/ano)
[09:18:33] *** Quits: apollo13 (apollo13@django/moderator/apollo13) (*.net *.split)
[09:18:33] *** Quits: push-f (~martin@push-f.com) (*.net *.split)
[09:18:33] *** Quits: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net) (*.net *.split)
[09:18:33] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (*.net *.split)
[09:18:33] *** Quits: neil (~kneel@rockylinux/infra/neil) (*.net *.split)
[09:18:33] *** Quits: mboehn (mathias@hh1.nuxis.org) (*.net *.split)
[09:18:33] *** Quits: cyberjunkie (~cyberjunk@wireguard/tunneler/cyberjunkie) (*.net *.split)
[09:18:34] *** Quits: thm (~thomas@fedora/thm) (*.net *.split)
[09:18:34] *** Quits: uhu (~uhu@2a01:4f9:c010:1087::2) (*.net *.split)
[09:18:34] *** Quits: fredrikhl (~fhl@myrsnipa.uio.no) (*.net *.split)
[09:18:34] *** Quits: skreech (skreech@user/skreech) (*.net *.split)
[09:18:34] *** Quits: jbe (~hellother@lysator/root/jbe) (*.net *.split)
[09:18:34] *** Quits: lericson (~lericson@user/lericson) (*.net *.split)
[09:18:34] *** Quits: streety (~streety@li761-24.members.linode.com) (*.net *.split)
[09:18:34] *** Quits: lithammer (~lithammer@arch-vps.cloud.tilaa.com) (*.net *.split)
[09:18:34] *** Quits: raek (~raek@2001:9b1:efe:3200:d250:99ff:fec0:e153) (*.net *.split)
[09:18:34] *** Quits: CalimeroTeknik (~calimero@user/calimeroteknik) (*.net *.split)
[09:18:34] *** Quits: Darkfoe1 (~chuck@drunk.serverfail.party) (*.net *.split)
[09:18:34] *** Quits: ilmais1n (~il@irc.oh1cgn.fi) (*.net *.split)
[09:18:34] *** Quits: zopsi (zopsi@2600:3c00::f03c:91ff:fe14:551f) (*.net *.split)
[09:18:34] *** Quits: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net) (*.net *.split)
[09:18:34] *** Quits: Anarchic (~Anarchic@getlegit.co.uk) (*.net *.split)
[09:18:34] *** Quits: cole (~cole@user/cole) (*.net *.split)
[09:18:34] *** Quits: Ennea (~Ennea@user/ennea) (*.net *.split)
[09:18:34] *** Quits: tumbleweed (~stefanor@ubuntu/member/tumbleweed) (*.net *.split)
[09:18:34] *** Quits: ikwyl6 (~ikwyl6@2.58.44.226) (*.net *.split)
[09:18:34] *** Quits: woky (~woky@li1651-31.members.linode.com) (*.net *.split)
[09:18:34] *** Quits: IceMichael (~IceMichae@2a0d:5940:6:163::ad7e) (*.net *.split)
[09:18:43] *** Joins: jbe (~hellother@lysator/root/jbe)
[09:18:45] *** Joins: lericson (~lericson@user/lericson)
[09:18:48] *** Joins: skreech (skreech@user/skreech)
[09:18:49] *** Joins: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net)
[09:18:49] *** Joins: fredrikhl (~fhl@myrsnipa.uio.no)
[09:18:57] *** Joins: Ennea (~Ennea@user/ennea)
[09:19:00] *** Joins: push-f (~martin@push-f.com)
[09:19:04] *** Joins: thm (~thomas@fedora/thm)
[09:19:04] *** Joins: Anarchic (~Anarchic@getlegit.co.uk)
[09:19:06] *** Joins: ilmais1n (~il@irc.oh1cgn.fi)
[09:19:10] *** Joins: cyberjunkie (~cyberjunk@wireguard/tunneler/cyberjunkie)
[09:19:11] *** Joins: woky (~woky@li1651-31.members.linode.com)
[09:19:12] *** Joins: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net)
[09:19:23] *** Joins: ikwyl6 (~ikwyl6@2.58.44.226)
[09:19:24] *** Joins: mcfrdy (~mcfrdy@user/mcfrdy)
[09:19:38] *** ilmais1n is now known as Guest8130
[09:19:57] *** Joins: raek (~raek@2001:9b1:efe:3200:d250:99ff:fec0:e153)
[09:19:57] *** Joins: Darkfoe1 (~chuck@drunk.serverfail.party)
[09:20:05] *** Quits: dre_ (~dre@2001:8004:4430:58d:7c07:dfdd:439:9f82) (Remote host closed the connection)
[09:20:08] *** Joins: neil (~kneel@rockylinux/infra/neil)
[09:20:34] *** Quits: dre (~dre@2001:8003:c932:c301:a6ae:89a3:2bc6:7303) (Ping timeout: 260 seconds)
[09:20:47] *** Joins: cole (~cole@user/cole)
[09:22:53] *** Joins: hid3 (~arnoldas@78.157.71.116)
[09:23:48] *** Joins: brentaarnold (~brentaarn@32.132.115.46)
[09:24:41] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (*.net *.split)
[09:24:41] *** Quits: launchd (examknow@bitbot/launchd) (*.net *.split)
[09:24:41] *** Quits: grys (~quassel@botters/gry) (*.net *.split)
[09:24:41] *** Quits: gry (~quassel@botters/gry) (*.net *.split)
[09:24:41] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::81de) (*.net *.split)
[09:24:41] *** Quits: WhizzWr (Whizz@s-o-m-e.h-o-s-t.name) (*.net *.split)
[09:24:41] *** Quits: shutnoshut (~shutnoshu@ec2-52-29-68-122.eu-central-1.compute.amazonaws.com) (*.net *.split)
[09:24:41] *** Quits: Scarecr0w (scarecr0w@user/scarecr0w) (*.net *.split)
[09:24:42] *** Quits: dcaro_away (~dcaro@user/dcaro) (*.net *.split)
[09:24:42] *** Quits: rwb (~augh@theguntretort.com) (*.net *.split)
[09:24:42] *** Quits: tnez (~el@user/tnez) (*.net *.split)
[09:24:42] *** Quits: sirn (~sirn@user/sirn) (*.net *.split)
[09:24:42] *** Quits: pacbard (~pacbard@user/pacbard) (*.net *.split)
[09:24:42] *** Quits: ulif (~nick@user/ulif) (*.net *.split)
[09:24:42] *** Quits: achilleas (ach@user/achilleas) (*.net *.split)
[09:24:42] *** Quits: or4n (~or4n@gerbera.qkka.org) (*.net *.split)
[09:24:42] *** Quits: jkl (~jkl@user/jkl) (*.net *.split)
[09:24:42] *** Quits: dharrigan (~dharrigan@user/dharrigan) (*.net *.split)
[09:24:42] *** Quits: adium (adium@user/adium) (*.net *.split)
[09:24:42] *** Quits: bryce (~bryce@ool-457dd6ac.dyn.optonline.net) (*.net *.split)
[09:24:42] *** Quits: eldritch_ (~eldritch@user/eldritch/x-9272577) (*.net *.split)
[09:24:42] *** Quits: dab21 (~dab21@pistis.amyanddavid.net) (*.net *.split)
[09:24:42] *** Quits: mpmc (~mpmc@user/mpmc) (*.net *.split)
[09:24:42] *** Quits: PamiPetteri (leet@user/pamipetteri) (*.net *.split)
[09:24:42] *** Quits: astiak (~astiak@ownage.biz) (*.net *.split)
[09:24:42] *** Quits: zegalch (~zegalch@178.128.75.133) (*.net *.split)
[09:24:42] *** Quits: utunbu_ (~utunbu@user/utunbu) (*.net *.split)
[09:24:42] *** Quits: rtur (~weechat@mail.rtur.org) (*.net *.split)
[09:24:42] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (*.net *.split)
[09:24:42] *** Quits: sus (zero@user/zeromomentum) (*.net *.split)
[09:24:42] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (*.net *.split)
[09:24:42] *** Quits: nigelb (~nigel@zeus.nigelb.me) (*.net *.split)
[09:24:42] *** Quits: Spydar007 (~spydar007@user/spydar007) (*.net *.split)
[09:24:42] *** Quits: Tips|Cloud (sid62231@id-62231.ilkley.irccloud.com) (*.net *.split)
[09:24:42] *** Quits: dh (dh@bsd.ee) (*.net *.split)
[09:24:42] *** Quits: ironfroggy (sid495156@id-495156.lymington.irccloud.com) (*.net *.split)
[09:24:42] *** Quits: ormiret (sid314108@id-314108.lymington.irccloud.com) (*.net *.split)
[09:24:42] *** Quits: TallonRain (sid214799@user/tallonrain) (*.net *.split)
[09:24:42] *** Quits: supbo (~kenan@li227-215.members.linode.com) (*.net *.split)
[09:24:42] *** Quits: ATAD (~ATAD@user/atad) (*.net *.split)
[09:24:42] *** Quits: SoF (~skius@user/skius) (*.net *.split)
[09:24:42] *** Quits: energizer (~energizer@user/energizer) (*.net *.split)
[09:24:42] *** Quits: _janus (~janus@blotter.ld-linux.so) (*.net *.split)
[09:24:42] *** Quits: poorboy (~poorboy@159.89.189.144) (*.net *.split)
[09:24:42] *** Quits: connor_goodwolf (~connor@user/connor-goodwolf/x-2615606) (*.net *.split)
[09:24:42] *** Quits: kantlivelong (~kantlivel@octoprint/kantlivelong) (*.net *.split)
[09:24:42] *** Quits: dartmouthed (~blackunsp@li761-35.members.linode.com) (*.net *.split)
[09:24:42] *** Quits: gerty (~gerty@user/gerty) (*.net *.split)
[09:24:43] *** Quits: CuriousErnestBro (~CuriousEr@user/curiousernestbro) (*.net *.split)
[09:24:43] *** Quits: harleypig (thelounge@harleypig.com) (*.net *.split)
[09:24:43] *** Quits: SeeM (~SeeM@153.ip-54-38-53.eu) (*.net *.split)
[09:24:43] *** Quits: mwilson (~mwilson@li159-72.members.linode.com) (*.net *.split)
[09:24:43] *** Quits: Fieldy (~no@user/fieldy) (*.net *.split)
[09:24:43] *** Quits: adamchainz (~adamj@51.15.34.126) (*.net *.split)
[09:24:43] *** Quits: ario (~ario@159.65.220.102) (*.net *.split)
[09:24:43] *** Quits: Nothing4You (N4Y@nothing4you.w.tf-w.tf) (*.net *.split)
[09:24:43] *** Quits: duracrisis (~kkh@user/duracrisis) (*.net *.split)
[09:24:43] *** Quits: kevr (~kevr@user/kevr) (*.net *.split)
[09:24:43] *** Quits: notevil (~notevil@user/notevil) (*.net *.split)
[09:24:43] *** Quits: fleabag (~sirpengi@li587-65.members.linode.com) (*.net *.split)
[09:24:43] *** Quits: amosbird (~amosbird@13.75.119.182) (*.net *.split)
[09:24:43] *** Quits: ThomasJ (~ThomasJ@user/thomasj) (*.net *.split)
[09:24:43] *** Quits: catbeard (~noise@user/catbeard) (*.net *.split)
[09:24:43] *** Quits: ablegreen (~ablegreen@tsunami.ocf.berkeley.edu) (*.net *.split)
[09:24:43] *** Quits: ripdog (~quassel@user/ripdog) (*.net *.split)
[09:24:43] *** Quits: maxpowa (~maxpowa@brought.to.you.by.maxpowa.us) (*.net *.split)
[09:24:43] *** Quits: CrtxReavr (crtxreavr@shodan.trioptimum.com) (*.net *.split)
[09:24:43] *** Quits: dTal (quassel@dragonbox/wizzard/dtal) (*.net *.split)
[09:24:43] *** Quits: beanzilla (beanzilla@user/beanzilla) (*.net *.split)
[09:24:43] *** Quits: Fossil (~Fossil@2a03:b0c0:0:1010::398:b001) (*.net *.split)
[09:24:43] *** Quits: znf (~ibm86@toaster.linge-ma.ro) (*.net *.split)
[09:24:43] *** Quits: upekkha (~Advanced@2a01:4f8:1c0c:49df::1) (*.net *.split)
[09:24:43] *** Quits: remedan (~remedan@balak.me) (*.net *.split)
[09:24:43] *** Quits: olspookishmagus (~pookie@snf-137798.vm.okeanos.grnet.gr) (*.net *.split)
[09:24:43] *** Quits: ebb (ebb@user/ebb) (*.net *.split)
[09:24:43] *** Quits: n-st (~n-st@user/n-st) (*.net *.split)
[09:24:43] *** Quits: drmessano (drmessano@user/drmessano) (*.net *.split)
[09:24:43] *** Quits: Titore (Titore@user/titore) (*.net *.split)
[09:24:43] *** Quits: yolk (~yolk@2600:1f16:f4a:2100:77f5:a0ec:35f:147b) (*.net *.split)
[09:24:43] *** Quits: jor (~jor@jor.link) (*.net *.split)
[09:24:43] *** Quits: Kabouik (~Kabouik@user/kabouik) (*.net *.split)
[09:24:43] *** Quits: dragonmaster (dragonmast@user/dragonmaster) (*.net *.split)
[09:24:43] *** Quits: Wegge (~wegge@user/wegge) (*.net *.split)
[09:24:43] *** Quits: Henryx (~ebianchi@2a01:4f8:1c0c:76ad::1) (*.net *.split)
[09:24:43] *** Quits: Juhaz (juhaz@hilla.kapsi.fi) (*.net *.split)
[09:24:43] *** Quits: vishwin (~brioux@2001:470:1f07:302::1) (*.net *.split)
[09:24:49] *** Joins: nigelb (~nigel@zeus.nigelb.me)
[09:24:49] *** Joins: Juhaz (juhaz@hilla.kapsi.fi)
[09:24:53] *** Joins: SeeM (~SeeM@153.ip-54-38-53.eu)
[09:24:54] *** Joins: Wegge (~wegge@user/wegge)
[09:24:54] *** Joins: upekkha (~Advanced@2a01:4f8:1c0c:49df::1)
[09:24:57] *** Joins: adamchainz (~adamj@51.15.34.126)
[09:25:00] *** Joins: ario (~ario@159.65.220.102)
[09:25:16] *** Joins: dTal (quassel@dragonbox/wizzard/dtal)
[09:25:18] *** Joins: drmessano (drmessano@user/drmessano)
[09:25:20] *** Joins: harleypig (thelounge@harleypig.com)
[09:25:27] *** Joins: mwilson (mwilson@2600:3c01::f03c:92ff:fe7f:1149)
[09:25:27] *** Joins: notevil (~notevil@user/notevil)
[09:25:32] *** Joins: sus (zero@user/zeromomentum)
[09:25:40] *** Joins: beanzilla (beanzilla@user/beanzilla)
[09:25:40] *** Joins: gry (~quassel@botters/gry)
[09:25:58] *** Joins: Tips|Cloud (sid62231@id-62231.ilkley.irccloud.com)
[09:26:08] *** Joins: yolk (~yolk@2600:1f16:f4a:2100:77f5:a0ec:35f:147b)
[09:26:11] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[09:26:13] *** Joins: utunbu_ (~utunbu@user/utunbu)
[09:26:16] *** Joins: duracrisis (~kkh@user/duracrisis)
[09:26:17] *** Joins: kevr (~kevr@user/kevr)
[09:26:19] *** Joins: poorboy (~poorboy@159.89.189.144)
[09:26:20] *** Joins: connor_goodwolf (~connor@user/connor-goodwolf/x-2615606)
[09:26:23] *** Joins: pacbard (~pacbard@user/pacbard)
[09:26:24] *** Joins: Fossil (~Fossil@2a03:b0c0:0:1010::398:b001)
[09:26:25] *** Joins: Scarecr0w (scarecr0w@user/scarecr0w)
[09:26:25] *** Joins: ATAD (~ATAD@user/atad)
[09:26:26] *** Joins: CuriousErnestBro (~CuriousEr@user/curiousernestbro)
[09:26:27] *** Joins: _janus (~janus@blotter.ld-linux.so)
[09:26:29] *** Joins: dharrigan (~dharrigan@user/dharrigan)
[09:26:31] *** Joins: ripdog (~quassel@user/ripdog)
[09:26:32] *** Joins: achilleas (ach@user/achilleas)
[09:26:32] *** Joins: dcaro (~dcaro@user/dcaro)
[09:26:32] *** Joins: rwb (~augh@theguntretort.com)
[09:26:32] *** Joins: ebb (ebb@user/ebb)
[09:26:32] *** Joins: n-st (~n-st@user/n-st)
[09:26:33] *** Joins: kantlivelong (~kantlivel@octoprint/kantlivelong)
[09:26:34] *** Joins: vishwin (~brioux@2001:470:1f07:302::1)
[09:26:34] *** Joins: remedan (~remedan@balak.me)
[09:26:35] *** Joins: jkl (~jkl@user/jkl)
[09:26:35] *** Joins: grys (~quassel@botters/gry)
[09:26:36] *** Joins: dab21 (~dab21@pistis.amyanddavid.net)
[09:26:36] *** Joins: eldritch_ (~eldritch@user/eldritch/x-9272577)
[09:26:37] *** Joins: catbeard (~noise@user/catbeard)
[09:26:37] *** Joins: jor (~jor@jor.link)
[09:26:37] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[09:26:38] *** Joins: sirn (~sirn@user/sirn)
[09:26:38] *** Joins: Nothing4You (N4Y@nothing4you.w.tf-w.tf)
[09:26:41] *** Joins: zegalch (~zegalch@178.128.75.133)
[09:26:46] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[09:26:54] *** Joins: DaleNa9g (~DaleNa9g@071-093-142-189.res.spectrum.com)
[09:26:58] *** Joins: Spydar007 (~spydar007@user/spydar007)
[09:27:05] *** Joins: Titore (Titore@user/titore)
[09:27:27] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Ping timeout: 276 seconds)
[09:27:57] *** Joins: znf (~ibm86@toaster.linge-ma.ro)
[09:28:03] *** Joins: mpmc (~mpmc@user/mpmc)
[09:28:28] *** Joins: ThomasJ (~ThomasJ@user/thomasj)
[09:28:53] *** Joins: energizer (~energizer@user/energizer)
[09:29:56] *** Joins: or4n (~or4n@gerbera.qkka.org)
[09:29:56] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[09:30:02] *** Quits: DaleNa9g (~DaleNa9g@071-093-142-189.res.spectrum.com) (Client Quit)
[09:30:10] *** Joins: launchd (examknow@bitbot/launchd)
[09:30:41] *** Joins: DaleNa9g (~DaleNa9g@071-093-142-189.res.spectrum.com)
[09:32:43] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[09:33:17] *** Joins: adium (adium@user/adium)
[09:33:23] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Ping timeout: 252 seconds)
[09:33:39] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[09:34:07] *** Joins: nickodd (~nickodd@user/nickodd)
[09:34:15] *** Joins: lithammer (~lithammer@arch-vps.cloud.tilaa.com)
[09:35:02] *** Quits: humberto1 (~humbertow@2806:107e:f:2338:38c9:c2c7:4eb4:63ee) (Ping timeout: 260 seconds)
[09:35:34] *** Joins: WhizzWr (Whizz@s-o-m-e.h-o-s-t.name)
[09:35:35] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[09:35:58] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 260 seconds)
[09:36:28] *** Joins: manti7 (~manti7@176.10.104.94)
[09:39:14] *** Quits: Samian (~Sami@user/samian) (Ping timeout: 260 seconds)
[09:39:24] *** Joins: humberto1 (~humbertow@2806:107e:f:2338:880a:ed74:bfb6:2e99)
[09:39:37] *** Quits: DaleNa9g (~DaleNa9g@071-093-142-189.res.spectrum.com) (Ping timeout: 268 seconds)
[09:39:46] *** Joins: arijit (~arijit@59.144.137.162)
[09:41:05] *** Joins: Plyht (uid433484@user/plyht)
[09:42:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[09:44:45] *** Joins: fikran (~fikran@user/fikran)
[09:44:50] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[09:46:35] *** Quits: dumbsharka (~amirvince@user/amirvincent64) (Ping timeout: 252 seconds)
[09:46:46] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[09:47:24] *** Joins: seednode (~seednode@user/seednode)
[09:48:28] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:318c:fd22:f816:f42d) (Ping timeout: 256 seconds)
[09:48:59] *** Joins: DaleNa9g (~DaleNa9g@071-093-142-189.res.spectrum.com)
[09:49:36] *** Joins: xon (~xon@host-8-net-64-160-119.mobilinkinfinity.net.pk)
[09:49:47] *** Quits: xon (~xon@host-8-net-64-160-119.mobilinkinfinity.net.pk) (Client Quit)
[09:52:14] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[09:52:24] *** Joins: Vonter (~Vonter@user/vonter)
[09:53:02] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[09:53:19] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[09:54:14] *** Quits: DaleNa9g (~DaleNa9g@071-093-142-189.res.spectrum.com) (Quit: Igloo IRC: https://iglooirc.com)
[09:54:40] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[09:55:04] *** Quits: Plyht (uid433484@user/plyht) ()
[09:55:31] *** Joins: onurcan19772 (~onurcan19@195.174.238.40)
[09:55:33] *** Joins: carl- (~carl-@185.103.188.130)
[09:55:52] <onurcan19772> Hi
[09:56:38] <onurcan19772> Is there someone who could maintain development of a software which is written in Python + GTK3?
[09:56:40] *** Joins: alguien (~alguien@user/alguien)
[09:56:49] *** Joins: dre (~dre@2001:8003:c932:c301:4390:76e3:18b:dad4)
[09:59:11] <cluelessperson> onurcan19772, depends on what that means
[09:59:35] *** Joins: kosh (~kosh@user/kosh)
[10:00:13] <onurcan19772> Sorry for my English
[10:00:48] <energizer> onurcan19772: are you asking for help with it, or do you want to hire somebody to do paid work?
[10:01:07] <onurcan19772> no, neither
[10:01:14] <onurcan19772> wait please
[10:01:44] <energizer> if you're just asking "Is there someone who could maintain development of a software which is written in Python + GTK3?" then the answer is "yes, there is someone who could"
[10:01:55] <onurcan19772> A friend of mine wants to hand on his work.
[10:02:20] <energizer> then your friend can come here and ask questions about the code
[10:03:01] *** Quits: emf (~emf@2620:10d:c090:400::5:5f6f) (Ping timeout: 252 seconds)
[10:03:31] <energizer> i haven't seen a lot of conversation about gtk3 in here to be honest, but there are a bunch of python experts in here
[10:03:34] <onurcan19772> He doesn't want to deal it anymore
[10:03:55] <onurcan19772> He wants to give the development responsibility
[10:04:08] <energizer> what is the project url?
[10:05:20] *** Quits: manuel_ (~manuel198@2a02:1748:dd5c:f290:894b:df66:de34:69) (Quit: Leaving)
[10:05:22] *** Joins: nomic (~nomic@85.203.36.16)
[10:05:29] <onurcan19772> Can I paste the link?
[10:05:48] <onurcan19772> https://kod.pardus.org.tr/Hakan/system-monitoring-center
[10:06:38] *** Joins: ExeciN (~ExeciN@user/nicexe)
[10:06:58] <energizer> looks nice
[10:07:14] *** Quits: humberto1 (~humbertow@2806:107e:f:2338:880a:ed74:bfb6:2e99) (Ping timeout: 260 seconds)
[10:07:25] <onurcan19772> Thank you
[10:07:53] <onurcan19772> Sorry for my English
[10:08:00] <energizer> your english is fine
[10:08:11] <energizer> there are a bunch of similar tools so i kinda doubt that somebody would take the project on https://www.slant.co/topics/4741/~system-monitors-for-linux
[10:08:43] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[10:09:02] *** Joins: gusto (~Augustus@109.255.100.54)
[10:09:04] <onurcan19772> So there are stronger opponents
[10:09:33] *** Joins: pycode (~pycode@2001:b07:5d28:551:3ac0:90d7:6436:61)
[10:09:37] <energizer> i haven't tried them all. i only use a couple of them
[10:10:13] <energizer> does the project have many users?
[10:10:49] <onurcan19772> It's recently added to Debian packages
[10:11:07] <onurcan19772> He says.
[10:11:11] *** Joins: Plyht (uid433484@user/plyht)
[10:11:13] *** Quits: rapier (~marcos@170.233.159.1) (Ping timeout: 252 seconds)
[10:12:34] <onurcan19772> And has some bugs.
[10:13:01] <energizer> tbh it's midnight in usa and early in UK so there are not many people here right now
[10:13:19] <energizer> s/midnight/late/
[10:13:24] <onurcan19772> ah good night
[10:13:46] *** Quits: jazzy (~jaziz@2600:380:854a:af07:358e:f55f:33dd:e809) (Ping timeout: 260 seconds)
[10:13:51] <onurcan19772> Here it's 9:43 in Turkey
[10:15:04] <energizer> you could ask again in a few hours when europe and usa are at work
[10:15:24] <onurcan19772> Ok. Thanks a lot.
[10:15:30] <energizer> if the repo gets transferred to someone else, please make sure the new owner is an ethical operator. otherwise it can be a security problem.
[10:15:59] *** Joins: vm (~vm@user/ansible)
[10:16:00] *** Joins: streety (~streety@li761-24.members.linode.com)
[10:16:07] <onurcan19772> Allright
[10:16:12] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[10:17:35] <vm> hi all. could anyone help me modify this regex to a non-greedy one, so that the matched selection ends where the next `my_pattern` is found? https://regex101.com/r/x4JuIx/1/
[10:18:08] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[10:19:36] <energizer> vm just add a ? after the +
[10:20:08] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[10:20:52] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[10:20:54] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Remote host closed the connection)
[10:20:55] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[10:21:01] <vm> boom! thanks a lot. that worked
[10:21:09] *** Joins: ubert (~Thunderbi@178.115.58.211.wireless.dyn.drei.com)
[10:21:13] *** Parts: onurcan19772 (~onurcan19@195.174.238.40) ()
[10:21:53] *** Joins: wyclif (~wyclif@user/wyclif)
[10:24:57] *** Joins: chele (~chele@user/chele)
[10:26:27] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[10:26:52] *** Quits: Plyht (uid433484@user/plyht) ()
[10:27:22] *** Joins: wyclif (~wyclif@user/wyclif)
[10:32:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[10:32:21] *** Joins: upsala (~zcb@185.213.155.160)
[10:32:52] *** Joins: wyclif (~wyclif@user/wyclif)
[10:34:18] *** Quits: upsala (~zcb@185.213.155.160) (Client Quit)
[10:35:40] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.2.1)
[10:36:05] *** Quits: elibrokeit (eschwartz@archlinux/bugwrangler/eschwartz) (Quit: A random quit message)
[10:36:41] *** Joins: elibrokeit (eschwartz@archlinux/bugwrangler/eschwartz)
[10:37:37] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[10:37:53] *** Joins: elgraz (~elgraz@151.65.9.160)
[10:38:23] *** Joins: wyclif (~wyclif@user/wyclif)
[10:38:55] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:40:47] *** Quits: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[10:41:06] *** Quits: raph_ael (~raphael@user/raph-ael/x-7806685) (Quit: WeeChat 3.1)
[10:41:14] *** Joins: raph_ael (~raphael@user/raph-ael/x-7806685)
[10:41:52] *** Joins: dumbsharka (~amirvince@user/amirvincent64)
[10:42:18] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[10:43:01] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[10:43:52] *** Joins: wyclif (~wyclif@user/wyclif)
[10:45:14] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[10:45:15] *** Quits: dba (uid502594@id-502594.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[10:46:05] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[10:48:44] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[10:49:28] *** Joins: wyclif (~wyclif@user/wyclif)
[10:53:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[10:55:00] *** Joins: wyclif (~wyclif@user/wyclif)
[10:59:35] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[10:59:58] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1)
[11:00:29] *** Joins: wyclif (~wyclif@user/wyclif)
[11:02:11] *** Joins: humberto1 (~humbertow@2806:107e:f:2338:a44f:9ac4:f9ae:6b9e)
[11:03:06] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Ping timeout: 265 seconds)
[11:05:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[11:05:37] *** Quits: jscrapps (~jscrapps@2601:603:c80:4b90::7672) (Remote host closed the connection)
[11:06:01] *** Joins: jscrapps (~jscrapps@2601:603:c80:4b90::7672)
[11:06:01] *** Joins: wyclif (~wyclif@user/wyclif)
[11:06:49] *** Quits: humberto1 (~humbertow@2806:107e:f:2338:a44f:9ac4:f9ae:6b9e) (Ping timeout: 252 seconds)
[11:09:15] *** Joins: brelod (~me@90.244.150.142)
[11:09:33] *** Joins: rendar (~rendar@user/rendar)
[11:10:44] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[11:10:59] *** Joins: falk689_ (~falk689-q@gateway/tor-sasl/falk689)
[11:11:31] *** Joins: wyclif (~wyclif@user/wyclif)
[11:13:18] *** Quits: Neoon (~Neoon@2607:5300:60:23a5::1111) (Ping timeout: 250 seconds)
[11:13:24] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 276 seconds)
[11:14:03] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[11:14:03] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Ping timeout: 276 seconds)
[11:16:17] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[11:17:01] *** Joins: wyclif (~wyclif@user/wyclif)
[11:17:08] *** Quits: y1n (~y1n@178.115.56.21.wireless.dyn.drei.com) (Remote host closed the connection)
[11:17:23] *** Joins: amosbird (~amosbird@13.75.119.182)
[11:18:50] <amosbird> Hello! What's wrong with this f-string code? http://oracle.wentropy.com/f18d229b6ce64b29   it says f-string: expressions nested too deeply
[11:20:34] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:20:41] <amosbird> ah, I see
[11:20:56] *** Quits: jscrapps (~jscrapps@2601:603:c80:4b90::7672) (Ping timeout: 245 seconds)
[11:21:15] <Repiphany> f"{{}}" if you want the braces in the string
[11:21:44] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[11:22:32] *** Joins: wyclif (~wyclif@user/wyclif)
[11:23:48] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[11:24:55] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Quit: I'm tired, have a good time!)
[11:26:29] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[11:27:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[11:28:02] *** Joins: wyclif (~wyclif@user/wyclif)
[11:30:58] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[11:31:29] *** Joins: djhankb (~djhankb@208.113.164.68)
[11:32:13] *** Quits: falk689_ (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[11:32:25] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[11:32:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[11:33:33] *** Joins: wyclif (~wyclif@user/wyclif)
[11:33:54] *** Joins: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it)
[11:34:42] *** Joins: bandit_za (~bandit_za@185.195.232.173)
[11:37:18] *** Joins: shad (~shad@user/shad)
[11:37:34] *** Quits: gitly (~gitly@148.252.129.25) (Ping timeout: 252 seconds)
[11:38:01] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[11:39:03] *** Joins: wyclif (~wyclif@user/wyclif)
[11:39:42] *** Joins: gitly (~gitly@185.69.144.35)
[11:40:19] <cluelessperson> I'm working on a piece of software and I'm wondering how I should connect a gui element to  something that would use that data.
[11:40:39] <cluelessperson> I have a table, and when a cell is updated, I get an event for row, column.
[11:41:25] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[11:41:39] *** Joins: n00b101 (uid448161@id-448161.lymington.irccloud.com)
[11:41:39] <cluelessperson> I need to grab and verify data from the columns in the row and hten use them later when something else occurs.
[11:41:58] <cluelessperson> I think I need to make an object that accepts the values, stores them, does the checking, and responds if they're valid.
[11:42:10] <cluelessperson> and use that object to handle the later events in relation to that dat.
[11:42:13] <cluelessperson> data. D:
[11:42:39] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[11:43:49] *** Joins: stevea (~stevea@user/stevea)
[11:45:27] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[11:46:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[11:48:09] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[11:50:36] *** Joins: SoF (~skius@user/skius)
[11:51:09] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Remote host closed the connection)
[11:51:12] *** Joins: humberto1 (~humbertow@2806:107e:f:2338:a44f:9ac4:f9ae:6b9e)
[11:51:31] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[11:52:32] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[11:53:31] *** Joins: upsala (~zcb@185.213.155.160)
[11:53:34] *** Joins: wyclif (~wyclif@user/wyclif)
[11:54:05] *** Joins: fikran (~fikran@user/fikran)
[11:54:13] *** Joins: eem (~eem@user/eem)
[11:55:06] *** Quits: gitly (~gitly@185.69.144.35) (Ping timeout: 245 seconds)
[11:55:13] *** Quits: stevea (~stevea@user/stevea) (Quit: Either I or my computer has gone to sleep. ZZZzzz‚Ä¶)
[11:55:31] *** Quits: humberto1 (~humbertow@2806:107e:f:2338:a44f:9ac4:f9ae:6b9e) (Ping timeout: 245 seconds)
[11:56:25] *** Joins: waxfire4 (~waxfire@65.119.2.240)
[11:57:01] *** Joins: gitly (~gitly@185.69.145.201)
[11:57:22] *** Quits: waxfire (~waxfire@65.119.2.240) (Ping timeout: 252 seconds)
[11:57:22] *** waxfire4 is now known as waxfire
[11:58:13] *** Joins: raxor2k (~raxor2k@78.158.232.147)
[11:58:20] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[11:58:49] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:58:59] <raxor2k> when i add "imbalanced_learn" into my requiremens.in file, and then i run command "pip-compile --generate-hashes"  i get the error: pip._internal.exceptions.DistributionNotFound: No matching distribution found for imbalanaced_learn==
[11:59:04] *** Joins: wyclif (~wyclif@user/wyclif)
[11:59:10] <raxor2k> how can solve this ?
[11:59:58] *** Joins: stevea (~stevea@user/stevea)
[12:00:14] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 252 seconds)
[12:01:38] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[12:02:08] <varaindemian> any idea why the output of this code is not a pdf file? I think there is a problem with the header but I am not sure how to fix it. Here is the code and the template I use as input:
[12:02:15] <The-Compiler> raxor2k: "imbalanced_learn" != "imbalanaced_learn"
[12:02:24] <varaindemian> https://www.irccloud.com/pastebin/MjM373vt/
[12:02:59] <varaindemian> template: https://github.com/thinkst/canarytokens/blob/master/templates/template.pdf
[12:03:15] <The-Compiler> varaindemian: I don't see you writing anything to PDF_OUTPUT
[12:03:26] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[12:03:31] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[12:03:53] <varaindemian> with open(PDF_OUTPUT, 'w') as f:
[12:03:59] <raxor2k> The-compiler: thanks. but this is strange as i copy pasted from another file, how could it be a typo error there..
[12:04:09] <rapha> hi all!
[12:04:15] <varaindemian> The-Compiler: ah wait
[12:04:31] *** Joins: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net)
[12:04:36] *** Joins: wyclif (~wyclif@user/wyclif)
[12:05:06] <The-Compiler> varaindemian: yeah, you open it, but never write anything to it
[12:05:37] *** Joins: johnau (~johnau@202.172.127.116)
[12:05:38] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:06:08] *** Joins: plastico (~plastico@neomutt/plastico)
[12:06:25] <rapha> has anyone here ever worked with text (fragment) classification and could recommend a way to get started? i have index entries of a few hundred library catalogs which consist of names/titles on one hand and class marks on the other, but there's not enough stringency in the patterns for regexes to be useful for telling the names/titles apart from the class marks.
[12:07:18] *** Quits: bandit_za (~bandit_za@185.195.232.173) (Ping timeout: 256 seconds)
[12:07:31] *** Joins: vladoski (~vladoski@2001:b07:add:d406:2f48:e2fd:a922:6ffd)
[12:08:06] *** Joins: PJBoy (~PJBoy@user/pjboy)
[12:09:11] *** Quits: belphegor666 (~satan@user/belphegor666) (Quit: WeeChat 3.2.1)
[12:09:16] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[12:09:42] *** Joins: belphegor666 (~satan@user/belphegor666)
[12:10:06] *** Joins: wyclif (~wyclif@user/wyclif)
[12:10:13] <varaindemian> The-Compiler: ` f.write(make_canary_pdf("..."))`  fixed it :D
[12:12:11] *** Joins: xcombelle (~xavie@176-139-252-198.abo.bbox.fr)
[12:12:25] *** Joins: gusto (~Augustus@109.255.100.54)
[12:13:32] *** Quits: vm (~vm@user/ansible) (Ping timeout: 256 seconds)
[12:14:16] *** Quits: eem (~eem@user/eem) (Ping timeout: 245 seconds)
[12:14:31] *** Joins: AutomatedTester (uid395371@selenium/developer/AutomatedTester)
[12:14:41] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[12:14:52] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[12:15:36] *** Joins: wyclif (~wyclif@user/wyclif)
[12:19:29] <varaindemian> https://www.irccloud.com/pastebin/ewk3mJ0G/
[12:19:33] <varaindemian> this is weird
[12:20:04] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[12:20:43] <varaindemian> https://www.irccloud.com/pastebin/kkWULRPw/
[12:21:33] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[12:25:40] <The-Compiler> varaindemian: how so? Your line 63 converts new_contents to a str, don't do that
[12:26:31] <The-Compiler> it's a bytes object, and str() on it won't do anything useful, str(b'abc') will be a literal b'abc'
[12:27:16] <varaindemian> hmm
[12:29:16] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[12:29:52] <varaindemian> that was it!
[12:29:57] <varaindemian> The-Compiler: Thank you so much!
[12:30:04] *** Joins: Antioch (~Antioch@185.253.163.11)
[12:30:20] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[12:30:31] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[12:30:59] *** Joins: djhankb (~djhankb@208.113.164.68)
[12:32:14] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[12:32:37] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 252 seconds)
[12:33:03] *** Joins: nomic2 (~nomic@185.192.69.180)
[12:35:26] *** Quits: nomic (~nomic@85.203.36.16) (Ping timeout: 252 seconds)
[12:35:29] *** Joins: legola (~legola@46.235.100.27)
[12:39:01] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[12:40:01] *** Joins: humberto1 (~humbertow@2806:107e:f:2338:a44f:9ac4:f9ae:6b9e)
[12:40:18] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 260 seconds)
[12:41:12] *** Joins: eem (~eem@user/eem)
[12:41:14] *** Joins: slav0nic (slav0nic@python.su)
[12:41:19] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[12:41:20] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1) (Remote host closed the connection)
[12:42:01] *** nomic2 is now known as Nomic
[12:42:06] *** Nomic is now known as nomic
[12:42:30] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1)
[12:43:32] *** Quits: nomic (~nomic@185.192.69.180) (Quit: Leaving)
[12:43:37] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:44:10] *** Quits: humberto1 (~humbertow@2806:107e:f:2338:a44f:9ac4:f9ae:6b9e) (Ping timeout: 252 seconds)
[12:44:10] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[12:46:40] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:47:53] *** Quits: luna-is-here (~quassel@2a02:908:f761:2a3c::a) (Quit: luna-is-here)
[12:48:57] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 265 seconds)
[12:51:06] <doosboox> I'm having a problem with parsing timestamps. It looks like '  time.strptime("2021-09-27T13:12:21+08:00", "%Y-%m-%dT%H:%M:%S%z")  ' doesn't give a tuple that includes a timezone
[12:51:28] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[12:51:36] *** Quits: slav0nic (slav0nic@python.su) (Remote host closed the connection)
[12:51:54] *** Joins: slav0nic (slav0nic@python.su)
[12:52:12] *** Joins: Proxysna (~Proxysna@62.119.254.142)
[12:52:48] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[12:53:18] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 265 seconds)
[12:53:56] <doosboox> Oh. There's no timezone field in the time_struct...
[12:55:20] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[12:57:34] <lericson> is there a file object tee?
[12:57:40] <vimart> Mine english sucks can you help me with a description for the challenge. What the code is supposed to do? https://github.com/Viteac/Python-Examples/blob/main/consecutive/Python_find_concetitive_pair_in_string.py
[12:57:45] <lericson> s.t. f.write() calls f0.write and f1.write
[12:57:55] *** Quits: schumaml (~schumaml@dslb-092-074-000-199.092.074.pools.vodafone-ip.de) (Quit: WeeChat 3.3)
[12:59:31] <jinsun> doosboox: use datetime.datetime.strptime instead of time.strptime
[13:00:19] *** Joins: arseru (uid515527@user/arseru)
[13:00:20] *** Quits: lethu (~lethu@user/lethu) (Remote host closed the connection)
[13:00:50] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::2612)
[13:00:52] <arseru> Hi! I was wondering which library do you people use instead of marshmallow: desert, pydantic or attrs?
[13:01:38] <lericson> is it nowadays safe to write `class K:` and get a newstyle class?
[13:02:08] <Wulf> lericson: yes.
[13:02:09] <supakeen> arseru: Well, marsmallow describes object serialization; I don't think pydantic/attrs do that? Though things exist for them as well (cattrs, etc).
[13:02:27] <jinsun> lericson: it has been safe since python 3.0 I think, only python 2 had the problem
[13:02:35] <lericson> jinsun: i see
[13:05:40] *** Joins: lethu (~lethu@user/lethu)
[13:10:22] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[13:11:03] *** Joins: schumaml (~schumaml@dslb-092-074-000-199.092.074.pools.vodafone-ip.de)
[13:11:38] <lericson> https://bpa.st/KA4A i made a file tee
[13:11:42] *** Quits: frojnd (~frojnd@user/frojnd) (Quit: WeeChat 2.3)
[13:11:51] <lericson> like /usr/bin/tee
[13:14:52] <arseru> supakeen: what about desert? I'm looking for a marshmallow replacement to avoid having to create both the schema and the model
[13:15:04] <supakeen> I am unfamiliar with desert :)
[13:15:21] <doosboox> jinsun: thank you! Got it working perfectly now
[13:15:28] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[13:16:44] <supakeen> At first glance desert seems to do what you want and I'm going to try it, especially as altendky works on it :)
[13:17:27] *** Joins: RougeR (~rougex250@user/rouger)
[13:18:11] *** Joins: dragonmaster (dragonmast@user/dragonmaster)
[13:18:28] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[13:18:43] <RougeR> stupid question
[13:18:45] <RougeR> is this okay to do
[13:19:00] <RougeR> now = dt.now()
[13:19:04] <RougeR> x = y = now
[13:19:18] <RougeR> i never use this syntax...
[13:20:28] *** Joins: WhiteKarura (~WhiteKaru@117.214.100.59)
[13:21:14] *** Parts: WhiteKarura (~WhiteKaru@117.214.100.59) ()
[13:21:42] <lericson> why not
[13:21:49] <lericson> but als owhy not x = y = now = dt.now()
[13:23:18] *** Joins: masta_ (oyster@user/masta/x-2645138)
[13:23:20] *** Parts: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it) ()
[13:24:01] *** Joins: thiras (~thiras@user/thiras)
[13:25:22] *** Joins: WhiteKarura (~WhiteKaru@117.214.100.59)
[13:25:39] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[13:26:00] <RougeR> ahh now is a variable passed to the function
[13:26:04] <RougeR> was more for demonstration
[13:26:19] <RougeR> thanks for confirmation though, was just having one of those monday morning moments
[13:26:38] <RougeR> demonstration? confirmation** brain please
[13:26:41] *** Joins: han-solo (~hanish@user/han-solo)
[13:27:08] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Ping timeout: 265 seconds)
[13:27:08] *** masta_ is now known as masta``
[13:27:42] *** Joins: humberto1 (~humbertow@2806:107e:f:2338:a44f:9ac4:f9ae:6b9e)
[13:28:04] <jinsun_> if now is an argument to a function, and you are giving dt.now() as default value then it is probably bad, not doing what you want
[13:28:14] *** Quits: dre (~dre@2001:8003:c932:c301:4390:76e3:18b:dad4) (Ping timeout: 265 seconds)
[13:29:47] <RougeR> actual code for clarity
[13:29:48] <RougeR> from_date = to_date = kwargs['start_date']
[13:30:00] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[13:30:24] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[13:30:25] *** Quits: RougeR (~rougex250@user/rouger) (Quit: Leaving)
[13:31:46] *** Quits: humberto1 (~humbertow@2806:107e:f:2338:a44f:9ac4:f9ae:6b9e) (Ping timeout: 245 seconds)
[13:31:47] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[13:31:51] <jinsun_> okay that seems fine
[13:32:08] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[13:32:35] *** Quits: eem (~eem@user/eem) (Ping timeout: 265 seconds)
[13:34:02] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 265 seconds)
[13:34:06] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[13:34:09] *** Parts: WhiteKarura (~WhiteKaru@117.214.100.59) ()
[13:39:46] *** Joins: lnkr (~lnkr@84.51.84.7)
[13:41:06] *** Quits: raxor2k (~raxor2k@78.158.232.147) ()
[13:41:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[13:43:13] *** Joins: wyclif (~wyclif@user/wyclif)
[13:47:55] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[13:48:42] *** Joins: wyclif (~wyclif@user/wyclif)
[13:49:01] *** Joins: ub (~Thunderbi@77.119.200.198.wireless.dyn.drei.com)
[13:49:14] *** Joins: WhiteKarura (~WhiteKaru@user/whitekarura)
[13:50:14] *** Quits: vimart (~vimart@85.255.234.169) (Quit: WeeChat 2.8)
[13:50:57] *** Quits: ubert (~Thunderbi@178.115.58.211.wireless.dyn.drei.com) (Ping timeout: 265 seconds)
[13:50:57] *** ub is now known as ubert
[13:51:53] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[13:51:55] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[13:52:13] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[13:52:27] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[13:53:12] *** Joins: Hackerpcs (~user@user/hackerpcs)
[13:53:25] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[13:53:52] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[13:54:12] *** Joins: wyclif (~wyclif@user/wyclif)
[13:55:40] *** Quits: WhiteKarura (~WhiteKaru@user/whitekarura) (Quit: Client closed)
[13:55:40] *** Joins: lacrymology (~lacrymolo@static-228-78-25-46.ipcom.comunitel.net)
[13:58:12] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[13:58:17] *** Joins: WhiteKarura (~WhiteKaru@user/whitekarura)
[13:58:20] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[13:58:35] *** Joins: arinov (~arinov@213.194.126.155)
[13:59:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[13:59:38] *** Joins: betuxy (~betuxy@158.181.77.59)
[13:59:43] *** Joins: wyclif (~wyclif@user/wyclif)
[13:59:48] *** dcaro is now known as dcaro_lunch
[14:00:15] *** Joins: fdan (~fdan@103.215.168.1)
[14:00:50] *** Parts: WhiteKarura (~WhiteKaru@user/whitekarura) ()
[14:01:13] *** Joins: eem (~eem@user/eem)
[14:01:21] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[14:01:26] <betuxy> Hi, i want to convert camelCase to snake_case: but my words have two capital letters in them (the first one and one for each word). is it possible to skip the first one without going through each char in a loop, with regex maybe?
[14:01:46] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[14:03:25] *** Joins: fikran (~fikran@user/fikran)
[14:03:26] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[14:03:53] *** Joins: cdown_ (~cdown@163.114.131.1)
[14:04:19] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:06:36] *** Joins: WhiteKarura (~WhiteKaru@user/whitekarura)
[14:06:37] *** Quits: cdown (~cdown@89.32.122.5) (Ping timeout: 252 seconds)
[14:06:43] *** cdown_ is now known as cdown
[14:07:16] *** Joins: audio (~audio@2603-8081-1800-1546-12eb-42ac-a233-9cf7.res6.spectrum.com)
[14:07:47] *** Joins: RougeR (~rougex250@user/rouger)
[14:07:59] *** Quits: RougeR (~rougex250@user/rouger) (Remote host closed the connection)
[14:08:22] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: SO LONG SUCKERS!)
[14:08:49] *** Joins: pathrocle (~pathrocle@79.114.142.111)
[14:08:51] <daex> betuxy: I mean, a regex will be going through each char internally anyway, but you could use '.[A-Z]'.
[14:09:01] *** Parts: WhiteKarura (~WhiteKaru@user/whitekarura) ()
[14:09:29] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[14:10:07] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:10:45] <pathrocle> hi, i have a Flask app where i receive some json via POST requests, i want after 10 seconds have passed since the last request to run a function. how can i do that?
[14:11:16] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[14:11:34] <niluje> pathrocle: there are several ways to so do, but usually you want to have a background worker
[14:11:39] <niluje> see flask-rq for example
[14:12:02] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[14:12:34] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[14:13:45] <pathrocle> niluje, thank you
[14:13:52] *** Quits: cyberpear (uid364019@fedora/cyberpear) (Quit: Connection closed for inactivity)
[14:14:05] <niluje> it doesn't seem possible to natively schedule a job in the future with rq
[14:14:12] <niluje> https://github.com/rq/rq-scheduler some alternatives exist
[14:14:24] <niluje> you can also use celery which supports a "countdown" parameter
[14:15:18] <niluje> but basically the idea is: you receive the request, send a task to a worker, and return the response immediately. The worker is a background process which listens for new events, and process it asynchronously.
[14:15:27] <niluje> s/it/them
[14:15:28] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[14:15:32] <nedbat> pathrocle: how "serious" is this web application? where are you hosting it?
[14:15:58] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:16:46] *** Quits: audio (~audio@2603-8081-1800-1546-12eb-42ac-a233-9cf7.res6.spectrum.com) (Ping timeout: 245 seconds)
[14:16:51] *** Quits: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[14:17:18] <pathrocle> so i have it on a raspberry pi... which is connected to an rfid scanner
[14:17:45] <pathrocle> the rfid sends the requests of what is scanned but it doesn't send them all at once
[14:17:52] <pathrocle> it sends like 3-4 requests
[14:18:00] <pathrocle> i save them in a global variable
[14:18:22] <pathrocle> and i want to process them all, after the rfid stopped seding them
[14:18:44] *** Joins: humberto1 (~humbertow@2806:107e:f:2338:a44f:9ac4:f9ae:6b9e)
[14:19:43] *** Quits: vladoski (~vladoski@2001:b07:add:d406:2f48:e2fd:a922:6ffd) (Remote host closed the connection)
[14:20:56] *** Quits: johnau (~johnau@202.172.127.116) (Read error: Connection reset by peer)
[14:21:24] *** Quits: saroy (~Sandipan@45.249.73.179) (Remote host closed the connection)
[14:21:42] *** Joins: saroy (~Sandipan@45.249.73.179)
[14:21:44] *** Joins: johnau (~johnau@202.172.127.116)
[14:22:22] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[14:22:50] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[14:23:10] *** Quits: humberto1 (~humbertow@2806:107e:f:2338:a44f:9ac4:f9ae:6b9e) (Ping timeout: 252 seconds)
[14:23:38] <nedbat> pathrocle: and you can't change how the rfid works? Or have it send another request when it's done?
[14:24:57] <nedbat> pathrocle: you could start a thread in your flask app to do this work, or have a separate process that just pings the flask app once every ten seconds
[14:26:14] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[14:26:28] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[14:26:43] *** Quits: martums (~martums@user/martums) (Read error: Connection reset by peer)
[14:27:07] <pathrocle> nedbat, well i don't know how many requests or time it takes for the reader to finish
[14:27:31] *** Joins: martums (~martums@user/martums)
[14:27:59] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:28:20] <nedbat> pathrocle: each data-post would record when it happened.  then the periodic task (either thread or externally caused) would check if it had been 10 seconds since the last data post.  If not, it does nothing.
[14:28:24] <pathrocle> nedbat, i taught i could try create a background task and just run delay 10 seconds every time a new request had been received...
[14:28:59] <nedbat> pathrocle: that would cause 3 or 4 background tasks, and only one should actually do the work, right?
[14:29:31] *** Quits: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl) (Quit: ZNC 1.8.2 - https://znc.in)
[14:29:50] *** Joins: slavfox (~slavfox@93.158.232.111)
[14:29:50] *** Quits: frost (~frost@59.71.244.36) (Quit: Ping timeout (120 seconds))
[14:29:52] <pathrocle> nedbat, hmm ok... so whats the best approach?
[14:30:28] <lericson> async would do this easily
[14:31:01] <nedbat> lericson: how would async handle it?
[14:31:20] *** Joins: Barones (~Barones@177.132.237.5)
[14:31:24] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[14:31:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[14:32:24] <lericson> i wsgi is a poor fit
[14:32:27] <lericson> i guess wsgi
[14:32:42] *** Joins: wyclif (~wyclif@user/wyclif)
[14:32:53] <lericson> since it requires your handler to return
[14:33:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[14:33:39] <nedbat> pathrocle: i would keep as much as possible within the one flask process.  global variables can track when the last data post happened, and a thread can check it periodically.
[14:33:50] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:34:13] <lericson> you could have a processing task that wakes up after T_last_request + 10 seconds, checks if time-out is reached, if so, processes
[14:34:19] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[14:34:35] <lericson> thus keeping wsgi outside of the whole batching task setup
[14:34:40] <pathrocle> lericson, i don't send them back to the rfid i just use a keyboard emulator and type them via usb
[14:35:19] *** Joins: ormiret (sid314108@id-314108.lymington.irccloud.com)
[14:35:35] *** Joins: codeswhite (~codeswhit@user/codeswhite)
[14:36:35] *** Joins: dhill (dhill@modemcable103.217-80-70.mc.videotron.ca)
[14:37:17] <pathrocle> nedbat, yeah ok, but where do you start the thread at runtime?
[14:37:25] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[14:37:53] <nedbat> pathrocle: i'm not sure how best to do that with Flask, but you could do it as a top-level statement in your code.
[14:38:12] *** Quits: betuxy (~betuxy@158.181.77.59) (Quit: Connection closed)
[14:38:19] *** Quits: pycode (~pycode@2001:b07:5d28:551:3ac0:90d7:6436:61) (Ping timeout: 265 seconds)
[14:38:20] *** Quits: alxndr (~alexander@ybti.net) (Ping timeout: 246 seconds)
[14:38:26] *** Joins: wyclif (~wyclif@user/wyclif)
[14:38:32] *** Joins: alxndr (~alexander@ybti.net)
[14:39:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[14:40:11] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:40:41] *** Quits: samuelbernardo (~samuelber@nata02.lip.pt) (Quit: ZNC 1.8.2 - https://znc.in)
[14:40:52] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[14:41:39] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[14:43:01] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[14:43:55] *** Joins: wyclif (~wyclif@user/wyclif)
[14:45:05] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 265 seconds)
[14:45:31] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[14:45:58] *** Joins: Vonter (~Vonter@user/vonter)
[14:46:11] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[14:46:13] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:46:31] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[14:46:41] *** Joins: samuelbernardo (~samuelber@nata02.lip.pt)
[14:48:08] *** Joins: frost (~frost@59.71.244.36)
[14:48:49] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[14:49:25] *** Joins: wyclif (~wyclif@user/wyclif)
[14:51:07] *** Quits: n00b101 (uid448161@id-448161.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[14:51:32] <lericson> i think with this you can accomplish it
[14:51:33] <lericson> https://docs.aiohttp.org/en/stable/web_advanced.html#application-runners
[14:51:43] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[14:52:07] <lericson> https://docs.aiohttp.org/en/stable/web_advanced.html#background-tasks actually this is probably the better thing to read
[14:52:17] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:53:46] *** Joins: Elodin (~weechat@user/elodin)
[14:53:51] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[14:54:55] *** Joins: wyclif (~wyclif@user/wyclif)
[14:56:00] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[14:59:16] *** Quits: lnkr (~lnkr@84.51.84.7) (Ping timeout: 245 seconds)
[14:59:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[15:00:26] *** Joins: wyclif (~wyclif@user/wyclif)
[15:00:56] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 245 seconds)
[15:03:48] *** Joins: rambleba1 (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[15:05:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[15:05:58] *** Joins: wyclif (~wyclif@user/wyclif)
[15:06:21] *** Joins: humberto1 (~humbertow@2806:107e:f:2338:a44f:9ac4:f9ae:6b9e)
[15:06:21] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Ping timeout: 265 seconds)
[15:10:28] *** Quits: humberto1 (~humbertow@2806:107e:f:2338:a44f:9ac4:f9ae:6b9e) (Ping timeout: 252 seconds)
[15:10:34] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 265 seconds)
[15:10:42] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[15:11:27] *** Joins: wyclif (~wyclif@user/wyclif)
[15:11:38] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[15:11:59] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[15:12:02] *** Seto_Kaiba is now known as Hunterkll
[15:12:41] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[15:12:41] *** Joins: Tempesta (~Tempesta@user/tempesta)
[15:13:43] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[15:16:02] <trace987> what are good alternatives to "hash()" ?
[15:16:18] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Read error: Connection reset by peer)
[15:16:30] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[15:16:57] <altendky> trace987: it depends on what you are looking to do, but there's https://docs.python.org/3/library/hashlib.html
[15:16:57] <Yhg1s> trace987: that depends on what you were incorrectly using hash() for.
[15:16:58] *** Joins: wyclif (~wyclif@user/wyclif)
[15:17:01] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[15:17:17] <trace987> I want something similar very simple to use
[15:17:31] <trace987> hash() bring different results for pypy3 vs python3
[15:18:41] <altendky> trace987: it also gives different results each time you run python...
[15:18:56] <trace987> oh
[15:18:57] *** Quits: ubert (~Thunderbi@77.119.200.198.wireless.dyn.drei.com) (Quit: ubert)
[15:19:03] <trace987> and with hashlib?
[15:19:10] <altendky> trace987: but knowing what you want to use a hash function for might be relevant.
[15:19:33] <trace987> I want a hash that brings for pypy3 and python3 always the same hash result
[15:19:45] <trace987> and that is most simple to use
[15:19:49] <altendky> arseru: supakeen: i think pydantic does do [de]serialization.  attrs doesn't really itself, but there is cattrs.  desert uses marshmallow behind the scenes and works on top of type hint based classes written either with dataclasses or attrs.  it generates the marshmallow schema for you.  i wouldn't say i "work on it", but i have done some stuff there and did intend to use it instead of my old incomplete graham lib that i had
[15:19:49] <altendky> used.
[15:20:00] <altendky> trace987: what are you going to do with the hash?
[15:20:11] <altendky> and what are you hashing
[15:20:30] <trace987> using it for a sort algorithm that shall not bring a good order, but the same order for pypy3 vs. python3
[15:21:06] *** Quits: NineBAR (~NineBAR@c-107-5-176-200.hsd1.mi.comcast.net) (Remote host closed the connection)
[15:21:23] *** Quits: pathrocle (~pathrocle@79.114.142.111) (Ping timeout: 246 seconds)
[15:21:33] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:21:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[15:22:29] *** Joins: wyclif (~wyclif@user/wyclif)
[15:22:50] *** Joins: pycode (~pycode@2001:b07:5d28:551:5dc6:c035:927e:2797)
[15:23:14] <altendky> trace987: you are writing a sort that doesn't sort?  what is being sorted?  what is the use of a not-sorting sort function?
[15:23:27] <arseru> altendky: desert looks really neat and I think will be a nice marshmallow replacement, so thanks for that :)
[15:23:33] <trace987> this could do it https://stackoverflow.com/questions/35205702/calculating-crc16-in-python
[15:23:55] <nedbat> trace987: use hashlib
[15:24:06] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 265 seconds)
[15:24:13] <trace987> I want to sort a list, that contains in every element 2 rational numbers (Module Fraction)
[15:24:41] <jinsun> why is hash needed to sort?
[15:24:53] <trace987> yes, I want to do that, because I told so and the use is as I also told, to have the same order in pypy3 as it is in python3
[15:25:08] *** Joins: cyberpear (uid364019@fedora/cyberpear)
[15:25:17] <altendky> trace987: you said it "shall not bring a good order".  are you looking for a 'random' order?  but consistent between runs and interpreters?
[15:25:19] <trace987> jinsun, because it is simpler to program that that way for comparision
[15:25:33] <trace987> yes
[15:25:41] *** Joins: audio (~audio@2603-8081-1800-1546-0986-0c97-4dae-9395.res6.spectrum.com)
[15:25:51] <Yhg1s> trace987: comparing things directly is _much_ simpler than calculating a hash and then comparing.
[15:25:53] <Repiphany> Are fractions not directly comparable anyway
[15:26:29] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: a–ª–ª–∏–ª—π—ñ–∞!)
[15:26:35] <altendky> trace987: what is the use case for it being not sorted?  does it need to order the same even if there is an extra element?
[15:26:46] <trace987> Yhg1s, for me it is very simple to code: hash(str(fraction1, fraction2)) > hash(str(fraction2, fraction3))
[15:26:53] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[15:27:10] <nedbat> trace987: how about:  str(f1, f2) > str(f2, f3)   ?
[15:27:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[15:27:21] <trace987> altendky, the use case is to have the same order for python3 as it is in pypy3
[15:27:22] <Yhg1s> trace987: str(fraction1, fraction2) would be an error.
[15:27:35] <trace987> nedbat, ahh this could work
[15:27:38] <Yhg1s> trace987: how about fraction1 < fraction 2?
[15:27:39] *** Joins: paul424 (~tom@apn-77-112-199-6.dynamic.gprs.plus.pl)
[15:27:41] <Yhg1s> eh, fraction2.
[15:27:50] <nedbat> trace987: what type is fraction1?
[15:27:52] <altendky> trace987: then just sort?  then the order is really unrelated to python at all
[15:28:00] *** Joins: wyclif (~wyclif@user/wyclif)
[15:28:01] <trace987> nedbat, yes it works, great
[15:28:29] <trace987> Yhg1s, this does not work, because there are two of it, so I would need to compare 4
[15:28:43] <Repiphany> Tuples of things can be compared
[15:28:49] <nedbat> trace987: how about this:  (f1, f2) < (f3, f4)
[15:28:53] <altendky> it's not clear to me what is wrong with `sorted(the_fractions)`
[15:28:54] <trace987> type is "from fractions import Fraction"
[15:28:54] <paul424> Hello, there is one thing I don't get it with GVR tutorial : the mangling of private variables  ( probably to poor English ) , is this something important at the beginning ? Can you rephrase what that tut is trying to say >?
[15:28:54] <Repiphany> (fraction1, fraction2) < (fraction3, fraction4)
[15:29:11] <nedbat> paul424: skip that part
[15:29:23] <trace987> Repiphany, but their comparison give different results by both interpreters
[15:29:42] <altendky> trace987: can you give an example where that happens?
[15:29:44] <Repiphany> Can you show an example
[15:29:44] <nedbat> trace987: can you show us the actual code, and how the comparisons are different?
[15:29:46] <trace987> altendky, I also do not know why both interpreters give different results
[15:29:54] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[15:30:19] <Yhg1s> trace987: what different result? Are you still talking about hash()?
[15:30:24] *** Quits: codeswhite (~codeswhit@user/codeswhite) (Read error: Connection reset by peer)
[15:30:28] *** Joins: Plyht (uid433484@user/plyht)
[15:30:43] *** Joins: codeswhite (~codeswhit@user/codeswhite)
[15:30:56] <trace987> Repiphany, (Fraction(1,2), Fraction(2,3)) > (Fraction(2,3), Fraction(5, 7))
[15:30:57] *** Joins: djhankb (~djhankb@208.113.164.68)
[15:31:29] <Repiphany> Is that giving True for one and False for the other
[15:31:49] <trace987> Yhg1s, I have a list of elements having 2 Fraction numbers and they shall become the same order in python3 as in pypy3
[15:32:11] <nedbat> trace987: I get False for both Python 3.9.7 and pypy3 7.3.4
[15:32:25] <Yhg1s> trace987: please show us the fractions that are sorting differently.
[15:32:33] <trace987> Repiphany, they shall become the same true or false, doesnt matter for python3 as it is for pypy3
[15:32:36] *** Quits: audio (~audio@2603-8081-1800-1546-0986-0c97-4dae-9395.res6.spectrum.com) (Ping timeout: 245 seconds)
[15:32:43] <Repiphany> You
[15:32:51] <nedbat> trace987: we're still trying to understand where you are seeing different results
[15:33:08] <Repiphany> (accidentally pressed enter early but ^)
[15:33:21] <trace987> I am testing, wait
[15:34:19] *** Joins: nomic (~nomic@185.192.69.180)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:10] <trace987> I found a problem
[15:36:13] *** Joins: humberto1 (~humbertow@2806:107e:f:2338:a44f:9ac4:f9ae:6b9e)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:46] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[15:36:53] *** Joins: dez (uid92154@user/dez)
[15:37:04] <trace987> sometimes variable 1 and 2 are differnt order in each element
[15:37:26] <Yhg1s> trace987: Please *show us the list*. Just print the list you get, and show us the output.
[15:37:46] *** Quits: codeswhite (~codeswhit@user/codeswhite) (Ping timeout: 265 seconds)
[15:38:09] *** dcaro_lunch is now known as dcaro
[15:38:44] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 265 seconds)
[15:38:46] *** Joins: codeswhite (~codeswhit@user/codeswhite)
[15:40:01] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-b04858-237.dhcp.inet.fi)
[15:40:36] *** Joins: ELFrederich (~ELFrederi@134.244.29.70)
[15:41:05] <trace987> solvet it
[15:41:49] <ELFrederich> Where can I find a solid "best practice" argparse example where there's a main() function invoked if __name__ == "__main__", etc.  All the examples in the official docs just run everything at the top level of the module
[15:42:05] *** Parts: rambleba1 (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (WeeChat 3.2.1)
[15:42:30] *** Joins: arinov (~arinov@213.194.126.155)
[15:45:19] *** Joins: lnkr (~lnkr@212.69.113.173)
[15:46:09] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[15:46:12] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[15:46:27] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[15:47:02] <paul424> https://docs.python.org/3/tutorial/classes.html#iterators How would you rewrite this example , so for char in rev alwaays works ( not only at the first time ) ...
[15:47:23] *** Quits: Code_Bleu (~Code_Bleu@user/code-bleu/x-6939963) (Ping timeout: 252 seconds)
[15:47:29] <altendky> ELFrederich: i consider `if __name__` to be mostly a bad thing so...  `:]`
[15:47:38] <altendky> (then again, i also use click)
[15:47:42] *** Joins: Code_Bleu (~Code_Bleu@user/code-bleu/x-6939963)
[15:47:44] *** Quits: lnkr (~lnkr@212.69.113.173) (Client Quit)
[15:48:01] <Yhg1s> paul424: that's not what iterators do. The way to avoid that would be to not use an iterator.
[15:48:24] <paul424> Yhg1s, ohh really what's the point
[15:48:55] *** Quits: BillyZane (~BillyZane@91.196.220.173) (Ping timeout: 252 seconds)
[15:49:08] <Yhg1s> paul424: the point is that iterators contain the iteration state. So you can stop and continue it at will. If you don't want them to have that state, you wouldn't use iterators.
[15:49:18] <jinsun> ELFrederich: just do def main(argv=None): if argv is None: argv = sys.argv[:1], and then later args = parser.parse_args(argv)
[15:49:26] *** Quits: metaace_ (~metaace@user/metaace) (Remote host closed the connection)
[15:49:41] *** Joins: metaace (~metaace@user/metaace)
[15:49:48] <altendky> `sys.argv[1:]`
[15:50:04] <jinsun> yes, s/sys.argv[:1]/sys.argv[1:]
[15:50:08] *** Quits: Leonarbro_ (~Leonet@user/leonarbro) (Ping timeout: 252 seconds)
[15:50:29] *** Joins: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net)
[15:50:40] <paul424> Yhg1s, now I added self.index = len(data) before rise StopIteration
[15:50:45] <paul424> and it works  as I wanted
[15:50:58] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::81de)
[15:51:07] *** Quits: elkclone (~elkclone@user/elkclone) (Quit: Leaving)
[15:52:10] *** Joins: BillyZane (~BillyZane@91.196.220.174)
[15:52:37] <lericson> hm, how do you use np.errstate in numba?
[15:52:42] *** Quits: kenoba (~kenoba@user/kenoba) (Quit: The Lounge - https://thelounge.chat)
[15:53:17] *** Joins: kenoba (~kenoba@user/kenoba)
[15:53:34] *** Quits: eem (~eem@user/eem) (Quit: WeeChat 3.3)
[15:53:58] *** Joins: eem (~eem@user/eem)
[15:54:19] *** Joins: CrtxReavr (crtxreavr@shodan.trioptimum.com)
[15:54:24] <paul424> also sorry to ask that here : but what is the smallest text editor with python support ? on Linux ( including libraries ) ... I have little space on hdd
[15:55:23] <Yhg1s> paul424: what kind of python support are you looking for? Practically all editors have syntax highlighting and auto-indentation.
[15:55:40] *** Joins: resmo (~resmo@2a00:d420:9:8a00:17d7:ae82:b739:257b)
[15:55:42] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[15:56:00] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 265 seconds)
[15:56:17] <paul424> Yhg1s,  not leafpad neither mousepad
[15:56:27] *** Joins: nyah (~nyah@bcdcb6e3.skybroadband.com)
[15:56:43] <paul424> syntax highlighting is what I want
[16:00:01] *** Quits: Plyht (uid433484@user/plyht) ()
[16:00:49] <paul424> naah ok gedit fine
[16:03:20] <rapha> noone here who ever did any text classification?
[16:03:35] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[16:04:31] *** Joins: hyperknot (~hyperknot@2a02:3033:404:89ad:bc79:ce4:73f0:1903)
[16:05:15] *** Joins: Aron999 (~Aron@62.205.127.181)
[16:05:54] *** Quits: nomic (~nomic@185.192.69.180) (Quit: Leaving)
[16:06:02] <paul424> https://docs.python.org/3/tutorial/errors.html#handling-exceptions why this code snippet uses break ? the tut doesn't mention why it is here
[16:06:30] <Yhg1s> paul424: in order to stop the loop. That's what 'break' does.
[16:06:31] <Wulf> paul424: try the code with and without the break.
[16:06:31] <Repiphany> Breaking out of the `while True:` loop
[16:06:45] <paul424> aha me stupido thanks :D
[16:07:17] <paul424> yeah now everytyhing makes sense
[16:08:19] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:08:29] *** Joins: kib_ (~kib@user/kib)
[16:10:32] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[16:10:50] *** Joins: daoudr_ (~daoudr@37.19.198.5)
[16:11:02] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[16:11:07] *** Quits: rjwiii (~mr-rich@idlerpg/player/mr-rich) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[16:12:45] *** Joins: fikran (~fikran@user/fikran)
[16:13:08] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[16:13:23] *** Joins: daoudr__ (~daoudr@91.90.122.8)
[16:13:43] *** Quits: daoudr (~daoudr@2a02:1205:c681:1650:2213:cc7f:a040:3a92) (Ping timeout: 252 seconds)
[16:14:01] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[16:14:20] <Aron999> Why are guards not all not allowed in nested patterns (PEP 622)?
[16:14:45] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[16:15:12] <sveinse> I have an embedded target where `python3 -mvenv venv` didn't create venv/bin/activate scripts. What package might be missing? py3.9.5
[16:15:23] <paul424> https://docs.python.org/3/tutorial/errors.html#exception-chaining what is exception chaining , another topic begging for correction  ...
[16:15:26] *** Joins: Pandadub (~Barones@earth.ps5.com.br)
[16:15:31] <Yhg1s> Aron999: you want to read PEP 634/635/636 instead.
[16:15:43] <Yhg1s> paul424: correction?
[16:15:47] *** Quits: daoudr_ (~daoudr@37.19.198.5) (Ping timeout: 240 seconds)
[16:15:59] <Yhg1s> paul424: exception chaining is an exception getting raised while handling a different exception.
[16:16:06] <paul424> mhm
[16:16:33] *** Joins: xiongxin (~quassel@113.116.33.5)
[16:16:38] <Yhg1s> paul424: perhaps you would be happier reading a better tutorial, something that doesn't assume as much experience as that tutorial does.
[16:16:48] <Aron999> Yhg1s thx!
[16:17:19] <paul424> Yhg1s, it's just not something that happens in c++
[16:17:30] <Yhg1s> paul424: yes, Python is very, very different from C++.
[16:17:43] <paul424> yeap
[16:18:04] *** Quits: Barones (~Barones@177.132.237.5) (Ping timeout: 252 seconds)
[16:18:05] *** Quits: falx (~falx@user/falx) (Ping timeout: 264 seconds)
[16:18:05] <Yhg1s> Aron999: in any case, guards have to be at the end of the case because they're not about whether a particular pattern matches, but whether the whole case matches. They're executed after the pattern matches.
[16:18:06] *** Quits: dhellmann_ (~dhellmann@097-081-099-073.res.spectrum.com) (Remote host closed the connection)
[16:18:07] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[16:18:58] *** Joins: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com)
[16:19:00] <sveinse> answer: The system lacked python3-pip :D
[16:21:44] *** Joins: etbcf (~etbcf@2001:8a0:7b3a:dd01:33f:b260:4263:5d2)
[16:23:59] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[16:24:24] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[16:24:30] <Aron999> yhg1s: I guess the best I could do is check which pattern it matched in the guard.
[16:26:14] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[16:26:26] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[16:26:50] *** Quits: fdan (~fdan@103.215.168.1) (Ping timeout: 256 seconds)
[16:27:06] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Remote host closed the connection)
[16:28:05] *** Quits: Warped (~Warped@user/warped) (Ping timeout: 252 seconds)
[16:28:52] *** Joins: togusa (~togusa@user/togusa)
[16:29:14] *** Quits: Cyp (~cyp@192038129207.mbb.telenor.dk) (Ping timeout: 252 seconds)
[16:29:46] *** Quits: elgraz (~elgraz@151.65.9.160) (Remote host closed the connection)
[16:31:34] *** Quits: etbcf (~etbcf@2001:8a0:7b3a:dd01:33f:b260:4263:5d2) (Quit: WeeChat 2.8)
[16:31:43] *** Quits: NIXKnight (~NIXKnight@198.98.57.76) (Quit: bye)
[16:31:53] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[16:32:59] *** Joins: NIXKnight (~NIXKnight@198.98.57.76)
[16:33:40] *** Joins: littlepython (~littlepyt@103.215.168.1)
[16:34:16] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[16:34:33] *** Joins: Cyp (~cyp@192038129207.mbb.telenor.dk)
[16:34:37] <littlepython> Hi there. could someone give me an example of recursive requests to Directory API(url)
[16:35:01] *** Joins: wyclif (~wyclif@user/wyclif)
[16:35:04] *** Joins: Fiji (~Fiji@user/fiji)
[16:36:41] <paul424> try:...     func()... except IOError as exc:...     raise RuntimeError('Failed to open database') from exc
[16:37:07] <littlepython> what is that
[16:37:12] <paul424> I almost understand exception handling but what for on earth is "as exec" and "from exec "
[16:37:24] <paul424> exception chaining*
[16:37:59] *** Quits: codeswhite (~codeswhit@user/codeswhite) (Ping timeout: 252 seconds)
[16:38:14] <paul424> heh, I read your nickname as littleponny :D
[16:38:28] *** Joins: codeswhite (~codeswhit@user/codeswhite)
[16:39:38] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[16:39:48] *** Quits: NIXKnight (~NIXKnight@198.98.57.76) (Quit: bye)
[16:40:33] *** Joins: wyclif (~wyclif@user/wyclif)
[16:40:39] <Yhg1s> paul424: https://docs.python.org/3/tutorial/errors.html#handling-exceptions explains the 'as exc' part of 'except IOError as exc'. https://docs.python.org/3/tutorial/errors.html#exception-chaining explains the 'from esc' part of 'raise RuntimeError(...) from exc'.
[16:40:53] *** Joins: NIXKnight (~NIXKnight@198.98.57.76)
[16:42:51] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[16:44:35] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[16:45:19] *** Quits: frost (~frost@59.71.244.36) (Quit: Connection closed)
[16:45:26] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[16:45:50] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[16:46:00] *** Joins: wyclif (~wyclif@user/wyclif)
[16:46:29] <paul424> Yhg1s, looks like exc is some kind of least common denominator for both IOError and RunTimeError , right ? it doesn't explain it explictly one has to guess up what it says ... but seems I have guessed up correctly
[16:46:34] *** Quits: hyperknot (~hyperknot@2a02:3033:404:89ad:bc79:ce4:73f0:1903) (Quit: Textual IRC Client: www.textualapp.com)
[16:47:46] *** Joins: DaNeenjah (~jake@adsl-74-230-6-204.hsv.bellsouth.net)
[16:48:20] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.2)
[16:48:41] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 265 seconds)
[16:48:43] <paul424> it;s like variable for which exception is substituted , so one can rethrow and replug another exception "under " exc
[16:49:26] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[16:50:10] *** Quits: Aron999 (~Aron@62.205.127.181) (Quit: Client closed)
[16:50:20] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Remote host closed the connection)
[16:50:45] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[16:51:01] <Yhg1s> paul424: no, 'exc' is just a variable name. It's the name the exception instance gets assigned to.
[16:51:14] <paul424> yeah I see
[16:51:30] *** Joins: wyclif (~wyclif@user/wyclif)
[16:52:19] <paul424> so can you have a scenario where as ... and from .... uses diffrent variables ?
[16:52:43] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 252 seconds)
[16:53:28] <Yhg1s> paul424: sure. You can raise a new exception 'from' any existing exception. Or from None.
[16:54:06] *** Joins: qlixed (~qlixed@181.44.129.13)
[16:54:11] <paul424> aha that would make sense
[16:54:51] <azidhaka> Could someone please recommend simple Windows GUI library for Python, i want to display some data in a table. Bonus if it's easy to make it sortable by clicking the column headers
[16:55:23] *** Quits: legola (~legola@46.235.100.27) (Remote host closed the connection)
[16:55:28] *** Joins: Deknos (~someone@user/menace)
[16:56:13] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[16:56:33] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[16:57:01] *** Joins: wyclif (~wyclif@user/wyclif)
[16:59:14] <jamwil> QT for Python is great but there's a bit of a learning curve, especially with tables. If your needs are fairly simple, take a look at Toga.
[16:59:27] *** Quits: dumbsharka (~amirvince@user/amirvincent64) (Ping timeout: 265 seconds)
[16:59:53] <jamwil> azidhaka: Sorry, forgot to tag you ^
[17:00:24] *** Joins: Roey (~Roey@user/Roey)
[17:00:43] <azidhaka> jamwil: thank you, i'll look up Toga
[17:01:00] <newdimension> Is there any conventions about epoch time? I'm looking at job posting data from linkedin and the listedAt variable is 1631219591000 which python is translating as so ctime(1631219591000) =>
[17:01:00] <newdimension> 'Sat Apr 16 11:03:20 53661'
[17:01:34] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[17:01:44] <Yhg1s> newdimension: it's probably milliseconds, so divide by 1000.
[17:01:55] <Yhg1s> azidhaka: or, HTML.
[17:02:33] *** Joins: wyclif (~wyclif@user/wyclif)
[17:02:39] <newdimension> Yhg1s: that did it, thank you. Any idea why they would have it in milliseconds? Is this a common practice?
[17:02:50] <azidhaka> Yhg1s: that's an option too
[17:03:27] <Yhg1s> newdimension: not in Python, but perhaps in other libraries. Python just uses floats instead.
[17:03:31] <Yhg1s> eh, other languages, rather.
[17:03:37] *** Joins: legola (~legola@46.235.100.27)
[17:04:17] <newdimension> Understood, thank you again!
[17:05:24] *** Joins: daoudr_ (~daoudr@2a02:1205:c681:1650:2213:cc7f:a040:3a92)
[17:05:27] *** Quits: Deknos (~someone@user/menace) (Quit: Deknos)
[17:06:46] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 245 seconds)
[17:06:46] *** Joins: white5moke (~pi0xxdmqj@ip72-219-109-30.oc.oc.cox.net)
[17:07:40] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[17:07:44] *** Quits: Antioch (~Antioch@185.253.163.11) (Quit: The Lounge - https://thelounge.chat)
[17:08:03] *** Joins: wyclif (~wyclif@user/wyclif)
[17:08:06] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[17:08:09] *** Quits: daoudr__ (~daoudr@91.90.122.8) (Ping timeout: 265 seconds)
[17:08:24] *** Joins: drogas (~drogas@jump2.jet.uk)
[17:08:44] *** Quits: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[17:10:03] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[17:10:40] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[17:10:59] *** Joins: LiftLeft (~LiftLeft@66.115.145.213)
[17:11:21] *** Quits: humberto1 (~humbertow@2806:107e:f:2338:a44f:9ac4:f9ae:6b9e) (Ping timeout: 245 seconds)
[17:12:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[17:13:33] *** Joins: wyclif (~wyclif@user/wyclif)
[17:13:37] *** Joins: hyperknot (~hyperknot@2a02:3033:404:89ad:bc79:ce4:73f0:1903)
[17:14:38] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Remote host closed the connection)
[17:14:57] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[17:15:14] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Client Quit)
[17:15:36] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[17:15:44] *** Joins: node1 (~node1@user/node1)
[17:15:59] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Client Quit)
[17:16:08] <drogas> `            if WordInLine[1] == '"Static_Force"' and (WordInLine[3] == str(timestemp) or WordInLine[3] == int(str(timestemp))):`
[17:16:12] <drogas> would that work
[17:16:17] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[17:17:02] <drogas> or do I need to write, if A=B or A=C
[17:17:38] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-d80f-6fe9-a798-c762.res6.spectrum.com)
[17:17:53] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[17:18:01] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[17:18:25] *** Joins: vm (~vm@user/ansible)
[17:18:28] *** Quits: togusa (~togusa@user/togusa) (Quit: Leaving)
[17:18:54] *** Quits: PublicWiFi (~PublicWiF@user/publicwifi) (Ping timeout: 260 seconds)
[17:19:04] *** Joins: wyclif (~wyclif@user/wyclif)
[17:19:09] <han-solo> is this csv you are parsing ?
[17:19:20] *** Quits: infobob (~infobob@python/bot/infobob) (Ping timeout: 246 seconds)
[17:19:23] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:20:07] <drogas> hmmm what do you mean?
[17:20:11] <newdimension> I'd like to format a time like so strftime("%Y-%m-%d %H:%M:%S", 1633780924) but strftime wants a tuple or struct_time. Not sure if I'm going about this the right way
[17:20:41] <han-solo> drogas: never mind
[17:20:51] *** Joins: computeiro (~Wender@189.37.67.138)
[17:20:52] <MikachuPi> newdimension: you need first to convert your int to a python date :)
[17:20:53] <Yhg1s> newdimension: don't bother with the time module. Use datetime.datetime.fromtimestamp.
[17:23:08] *** Joins: humberto1 (~humbertow@2806:107e:f:2338:a44f:9ac4:f9ae:6b9e)
[17:23:38] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[17:23:53] <newdimension> Got it. I'm curious is there another way to covert int to python date other than datetime?
[17:23:57] <newdimension> *convert
[17:24:32] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[17:24:34] *** Joins: wyclif (~wyclif@user/wyclif)
[17:24:51] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[17:25:47] *** Joins: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[17:26:07] <newdimension> Also, is this pythonic?  In terms of doing a bunch of things in one line       listed_at = datetime.fromtimestamp(job['listedAt'] / 1000).strftime("%Y-%m-%d %H:%M:%S")
[17:27:05] <lericson> it's a pretty long line yeah
[17:27:21] <lericson> i wouldn't care but other people do
[17:27:28] <grym> newdimension: i might assign timestamp=job['listedAt']/1000 and then datetime.fromtimestamp(timestamp).strftime
[17:27:38] <Yhg1s> newdimension: I would probably put it in a function.
[17:27:46] *** Quits: humberto1 (~humbertow@2806:107e:f:2338:a44f:9ac4:f9ae:6b9e) (Ping timeout: 260 seconds)
[17:28:58] *** Quits: arseru (uid515527@user/arseru) (Quit: Connection closed for inactivity)
[17:29:13] *** Joins: Tireos (~Tireos@91.223.118.131)
[17:29:34] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[17:29:59] *** Quits: Spiney (~Spiney@2604:a880:400:d0::1d82:b001) (Ping timeout: 250 seconds)
[17:30:04] *** Joins: wyclif (~wyclif@user/wyclif)
[17:30:07] *** Quits: tim__ (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (Ping timeout: 252 seconds)
[17:31:54] *** Joins: briian (uid321220@id-321220.uxbridge.irccloud.com)
[17:32:31] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[17:32:33] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[17:32:36] *** Quits: shad (~shad@user/shad) (Ping timeout: 245 seconds)
[17:33:12] *** Joins: PublicWiFi (~PublicWiF@user/publicwifi)
[17:35:13] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[17:35:27] *** Quits: Pandadub (~Barones@earth.ps5.com.br) (Ping timeout: 240 seconds)
[17:35:35] *** Joins: wyclif (~wyclif@user/wyclif)
[17:36:02] <rendar> if multiple wait() or wait_for() are waiting a task, what is the first wait that will return?
[17:37:50] *** Joins: Spiney (~Spiney@2604:a880:400:d0::1d82:b001)
[17:39:02] *** Quits: paul424 (~tom@apn-77-112-199-6.dynamic.gprs.plus.pl) (Remote host closed the connection)
[17:39:08] *** Joins: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net)
[17:39:41] *** Joins: minip (~minip@user/minip)
[17:39:45] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[17:39:55] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[17:40:06] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[17:40:13] *** Joins: drogas (~drogas@jump2.jet.uk)
[17:40:38] *** Quits: drogas (~drogas@jump2.jet.uk) (Client Quit)
[17:41:04] *** Joins: drogas (~drogas@jump2.jet.uk)
[17:41:05] *** Joins: wyclif (~wyclif@user/wyclif)
[17:41:47] *** Joins: sp0fp12 (~LENOVO@user/sp0fp12)
[17:42:05] *** Quits: computeiro (~Wender@189.37.67.138) (Quit: Leaving)
[17:42:23] <sp0fp12> How to make a notification pop up in windows using python?
[17:42:39] *** Joins: ballingt (sid190590@id-190590.helmsley.irccloud.com)
[17:43:09] *** Joins: odoood (~odoood@2601:c8:c003:a550::2)
[17:43:22] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[17:44:00] *** Joins: iomari891 (~iomari891@105.112.138.38)
[17:44:49] *** Joins: shad (~shad@user/shad)
[17:45:07] <jinsun> sp0fp12: https://github.com/jithurjacob/Windows-10-Toast-Notifications maybe
[17:45:31] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[17:46:27] <altendky> rendar: even if defined, i wouldn't want to depend on the order.  and it mostly i would expect to just not get in that situation.  what's going on that you need this?
[17:46:36] *** Joins: wyclif (~wyclif@user/wyclif)
[17:47:31] <rendar> altendky, i have a scheduler-like class which manages tasks, so it will wait ALL tasks and will get the first completed to save result and manage its internals, then this class will have also methods to expose the waiting of a single task, give an integer task id
[17:47:55] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-b04858-237.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:48:08] <rendar> so basically it is waiting 2 times, one for internal management and the second is the user of that class that may want to wait to one or more pending tasks
[17:48:18] *** Joins: arseru (uid515527@user/arseru)
[17:48:23] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[17:49:12] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-b04858-237.dhcp.inet.fi)
[17:50:09] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[17:51:21] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[17:51:46] *** Quits: Spiney (~Spiney@2604:a880:400:d0::1d82:b001) (Ping timeout: 245 seconds)
[17:52:05] *** Joins: Spiney (~Spiney@2604:a880:400:d0::1d82:b001)
[17:52:26] <rendar> altendky, any ideas?
[17:52:43] <rendar> maybe i could use an asyncio.Event() to sync the 2 things
[17:52:59] <altendky> rendar: i'm trying to think through the setup here.  what kind of scheduling is done?
[17:53:18] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-b04858-237.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:54:00] *** Joins: akk (~akk@75.161.146.115)
[17:54:26] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 252 seconds)
[17:54:41] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[17:56:19] *** Joins: wyclif (~wyclif@user/wyclif)
[17:56:45] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[17:57:56] *** Quits: hyperknot (~hyperknot@2a02:3033:404:89ad:bc79:ce4:73f0:1903) (Ping timeout: 265 seconds)
[17:58:00] <rendar> altendky, basically it's a TaskGroup class like the anyio's one
[17:58:20] <rendar> the only difference is that in this class if a task throws an exception, other tasks are not cancelled
[17:59:17] *** Joins: jscrapps (~jscrapps@2603:3023:a8d:3000:dd99:6a3b:8792:b57a)
[17:59:29] *** Quits: jscrapps (~jscrapps@2603:3023:a8d:3000:dd99:6a3b:8792:b57a) (Remote host closed the connection)
[18:00:29] *** Joins: hyperknot (~hyperknot@2a02:3033:406:1ec9:5f4:44c0:5278:3800)
[18:01:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[18:01:49] *** Quits: srhm (~srhm@user/srhm) (Quit: Konversation terminated!)
[18:01:49] *** Joins: wyclif (~wyclif@user/wyclif)
[18:02:34] *** Joins: ValentynOG-MWE (~ValentynO@31.40.105.59)
[18:02:44] <bjs> rendar: if they're all waiting they'll all return, but the order isn't defined.
[18:03:13] *** Joins: madprops (~hj8oijo@user/madprops)
[18:03:32] <madprops> how can I read and process every output line made by a blocking command ?
[18:03:47] *** Quits: ValentynOG-MWE (~ValentynO@31.40.105.59) (Client Quit)
[18:04:12] *** sgn_ is now known as sgn
[18:04:29] <SnoopJ> madprops, it's hard to tell what you're asking from that description. If you have some code, show it to us, otherwise tell us a little more about what you're working on.
[18:05:08] <madprops> SnoopJ, I have no code yet. Basically I want to run a program that outputs some stuff once in a while, and I want to react to it, using a python script
[18:05:26] <grym> madprops: pexpect can be helpful for that
[18:05:31] <altendky> rendar: giving them something else to wait on that you control seems maybe good
[18:05:47] <SnoopJ> madprops, do you want to run the other program from Python?
[18:05:51] *** Joins: tim__ (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[18:06:00] *** Quits: vm (~vm@user/ansible) (Ping timeout: 256 seconds)
[18:06:04] *** Joins: Fiji (~Fiji@user/fiji)
[18:06:06] <madprops> SnoopJ, yeah the python script would start the program
[18:06:38] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[18:06:42] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Quit: elastic_dog)
[18:06:44] <SnoopJ> madprops, I think you want the `subprocess` module in the standard library: https://docs.python.org/3/library/subprocess.html
[18:07:20] *** Joins: wyclif (~wyclif@user/wyclif)
[18:07:41] <rendar> altendky, ok
[18:07:42] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[18:07:59] <SnoopJ> madprops, if you use the subprocess.Popen() approach here, you'll get back an object representing the process, and you can monitor the stdout/stderr of the process with the object's communicate() method. The docs should have some more detailed examples
[18:08:14] <madprops> ok thanks
[18:09:29] *** Joins: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com)
[18:09:35] *** Quits: Yion (~Yion@pd95caa88.dip0.t-ipconnect.de) (Quit: Client closed)
[18:10:01] *** Quits: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (Ping timeout: 265 seconds)
[18:10:38] <sp0fp12> jinsun: Ok thanks
[18:10:38] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1) (Quit: Leaving)
[18:10:56] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 252 seconds)
[18:11:35] <grym> madprops: pexpect is handy primarily when you want to talk back to the subprocess a lot
[18:11:40] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Quit: azidhaka)
[18:11:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[18:12:02] <madprops> grym, preferably i'd prefer no 3rd party modules for this, but good to know
[18:12:16] *** Joins: humberto1 (~humbertow@2806:107e:f:2338:a44f:9ac4:f9ae:6b9e)
[18:12:21] *** Quits: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[18:12:38] <bjs> rendar: why does the order matter?
[18:12:40] <littlepython> how to use isinstance with a dictionray
[18:12:49] *** Joins: wyclif (~wyclif@user/wyclif)
[18:12:54] <bjs> littlepython: what do you mean?
[18:13:03] <bjs> isinstance is a function,  what does the dictionary have to do with it?
[18:13:27] <littlepython> can you tell me what it has to do?
[18:13:35] <littlepython> does it check if a key is present in the dictionary?
[18:13:37] <rendar> bjs, because the managing function sets something into the task, e.g. task._tg_result = MyData()
[18:13:44] <bjs> littlepython: no, it's nothing to do with dictionaries
[18:13:58] <bjs> littlepython: isinstance(obj, SomeClass) returns True if obj is an instance of SomeClass
[18:14:02] <sp0fp12> How to change background in windows? using python?
[18:14:03] <SnoopJ> littlepython, you test if a key is in a dictionary `d` as: `key in d`
[18:14:56] <altendky> rendar: given this is like anyio but not quite, have you discussed this with gronholm?
[18:15:11] *** Quits: tim__ (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (Read error: Connection reset by peer)
[18:15:20] <Swayze> https://stackoverflow.com/questions/1977694/how-can-i-change-my-desktop-background-with-python
[18:15:28] *** Joins: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[18:15:28] <Swayze> i googled it for you
[18:15:31] <rendar> altendky, not yet
[18:15:31] *** Joins: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net)
[18:16:46] *** Quits: humberto1 (~humbertow@2806:107e:f:2338:a44f:9ac4:f9ae:6b9e) (Ping timeout: 260 seconds)
[18:16:49] <sp0fp12> Swa
[18:16:55] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[18:17:26] <sp0fp12> Swayze: I've seen that post before, its not working for me well
[18:17:45] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[18:18:20] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:18:20] *** Joins: wyclif (~wyclif@user/wyclif)
[18:18:31] <madprops> how can I react to every communicate line here? https://bpa.st/67RQ
[18:18:51] *** Joins: UnnamedBeer (~UnnamedBe@231.red-83-41-235.dynamicip.rima-tde.net)
[18:19:13] <bjs> madprops: you don't want communicate() probably,  but instead to pass stdout=PIPE to Popen and then read lines from the pipe directly
[18:19:44] <bjs> communicate() waits until the subprocess has finished before it returns,  if you want to read a line and do something while the program is still running you need to not use communicate()
[18:20:10] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[18:20:25] <SnoopJ> clarification: you can give communicate() a timeout, too, so it's not necessarily block-forever
[18:22:05] *** Joins: fikran (~fikran@user/fikran)
[18:22:36] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[18:24:41] *** Quits: jpic (~jpic@82.142.3.250) (Ping timeout: 252 seconds)
[18:24:43] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:25:25] <zln> ls
[18:25:30] <zln> oops :D
[18:26:40] <braxas> if I want to access version info from within a package itself, is the best approach __version__.py?
[18:26:46] <braxas> or is _version.py more standard?
[18:27:11] *** Quits: shad (~shad@user/shad) (Ping timeout: 245 seconds)
[18:27:57] <SnoopJ> braxas, it depends a little on what "best" means to you. There are really sophisticated ways to do it (versioneer et al.) and dead-simple ways to do it (have a VERSION file and read that)
[18:28:37] *** Quits: Tireos (~Tireos@91.223.118.131) (Quit: Leaving)
[18:28:43] <braxas> well I want poetry-dynamic-versioning to be updating a __version__ variable, but if I put it in __init__.py, I guess it is not ideal for using from within the package itself
[18:29:09] *** Joins: ham5urg_ (~ham5urg@2a04:4540:680c:d300:fca2:a72d:edfc:75db)
[18:29:10] <SnoopJ> in a recent $work project I do: `try: __version__ = importlib.metadata.version(__name__);; except importlib.metadata.PackageNotFoundError: __version__ = "UNKNOWN"`
[18:29:23] <SnoopJ> (it's also a poetry project, FWIW)
[18:29:42] *** Joins: Ivii (~Ivyy@2001:a61:1329:3e01:a333:5e71:7d2d:495a)
[18:30:07] <braxas> I have for example foopkg/cli.py, and I want to read it from there, and if I have it in foopkg/__init__.py then I dunno, kind of import the package itself, it would work but I don't like it that much.
[18:30:16] <braxas> poetry-dynamic-versioning will update the __version__ variable
[18:30:23] <braxas> the placeholder
[18:30:32] <braxas> the question is more just where to put the placeholder
[18:30:48] <braxas> I will go with __version.__.py for now, but I will consider this importlib.metadata also
[18:30:50] <SnoopJ> between those two options, I would probably prefer _version.py
[18:30:50] <ham5urg_> Is it possible for module csv to throw an exception if a control character is found in the input?
[18:30:51] *** Quits: Strom (strom@fedora/strom) ()
[18:31:03] <braxas> okay, let me go for that, I guess it does make more sense
[18:31:32] <SnoopJ> braxas, it's not a strong preference, but __version__.py looks to my eye a little too much like something the runtime cares about
[18:32:27] *** Joins: Strom (strom@fedora/strom)
[18:32:44] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[18:33:08] *** Joins: Fiji (~Fiji@user/fiji)
[18:33:11] <jinsun> technically __version__ is reserved for the interpreter and stdlib, and using it might break your code in the future https://docs.python.org/3/reference/lexical_analysis.html#reserved-classes-of-identifiers
[18:33:46] <jinsun> but since it is a bit too common convention, it won't happen for __version__ probably
[18:33:49] *** Joins: wyclif (~wyclif@user/wyclif)
[18:34:40] *** Joins: humberto1 (~humbertow@2806:107e:f:2338:a44f:9ac4:f9ae:6b9e)
[18:38:26] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[18:39:20] *** Joins: wyclif (~wyclif@user/wyclif)
[18:40:05] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[18:40:36] <SnoopJ> I guess my preference isn't even consistent since I use the dunder identifier, but not the filename :)
[18:43:51] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[18:44:16] *** Joins: shad (~shad@user/shad)
[18:44:51] *** Joins: wyclif (~wyclif@user/wyclif)
[18:45:13] *** Joins: mokulus (~mokulus@user/mokulus)
[18:45:35] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (Ping timeout: 252 seconds)
[18:45:40] *** Joins: FluffyMask (~masque@user/fluffymask)
[18:46:25] *** Quits: k_sze (~k_sze@mail2.kalunite.net) (Quit: ZNC 1.8.2 - https://znc.in)
[18:46:47] <altendky> pyinstaller doesn't do metadata as i recall so you have to do extra there if needed.  we're just not there yet.
[18:48:19] *** Joins: k_sze (~k_sze@mail2.kalunite.net)
[18:48:36] *** Joins: FastZ (~FastZ@pool-72-83-101-219.washdc.east.verizon.net)
[18:48:37] *** Quits: mokulus (~mokulus@user/mokulus) (Read error: Connection reset by peer)
[18:49:16] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[18:50:21] *** Joins: wyclif (~wyclif@user/wyclif)
[18:51:50] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[18:52:43] *** Joins: Plyht (uid433484@user/plyht)
[18:53:06] *** Joins: x4rchimedes (~archimed3@host-92-26-25-144.as13285.net)
[18:54:19] *** Joins: emf (~emf@2620:10d:c090:400::5:a68f)
[18:54:27] *** Joins: mokulus (~mokulus@user/mokulus)
[18:54:56] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[18:55:54] *** Joins: wyclif (~wyclif@user/wyclif)
[18:56:29] *** Joins: Warped (~Warped@user/warped)
[18:56:41] *** Joins: jazzy (~jaziz@2600:380:8510:f0e0:6066:bbe2:cc25:8e64)
[18:57:47] *** Joins: magla (~gelignite@55d4442a.access.ecotel.net)
[18:58:29] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[18:58:44] *** Joins: betuxy (~betuxy@158.181.77.59)
[18:58:50] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:5d10:8850:6285:4e0e)
[18:59:23] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[19:00:29] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[19:00:38] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[19:00:44] *** Joins: Deknos (~someone@user/menace)
[19:00:47] <madprops> what's the best way to stop a python script by name? (linux) for instance "empris.py autopause"
[19:01:24] *** Joins: wyclif (~wyclif@user/wyclif)
[19:01:36] <madprops> pkill "empris.py autopause" doesn't work
[19:01:44] *** Quits: lastshell (~lastshell@user/lastshell) (Remote host closed the connection)
[19:01:53] <bjs> madprops: that is not a default feature of Python,  but Linux lets you send SIGSTOP to a process to stop executing it until you send a signal to continue later
[19:04:09] *** Joins: seoul_man (~meh@user/seoul-man/x-5066766)
[19:04:50] *** Quits: emf (~emf@2620:10d:c090:400::5:a68f) (Ping timeout: 260 seconds)
[19:06:26] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[19:06:54] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Quit: Konversation terminated!)
[19:06:55] *** Joins: wyclif (~wyclif@user/wyclif)
[19:07:01] <madprops> having some weird issue where I still get subprocess output after killing the process
[19:07:29] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[19:07:47] <madprops> or maybe it's some other thing
[19:08:02] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:08:02] <madprops> ah yeah, nvm
[19:08:17] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[19:08:50] <madprops> yeah the command spawned with subprocess.Popen remains after pkill -f the command
[19:09:01] <madprops> the script*
[19:09:59] *** Joins: Ergo^ (~ergo@91.238.59.144)
[19:10:47] *** Joins: node1 (~node1@user/node1)
[19:10:55] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[19:11:38] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[19:11:45] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[19:12:23] *** Joins: wyclif (~wyclif@user/wyclif)
[19:12:41] *** Quits: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net) (Quit: leaving)
[19:13:56] *** Joins: reset (~reset@user/reset)
[19:13:58] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:5d10:8850:6285:4e0e) (Quit: Leaving)
[19:15:21] *** Joins: maxpowa (~maxpowa@107.150.39.146)
[19:16:42] *** Joins: subopt (~subopt@2603-8081-2302-459a-5423-ed59-3c4f-3049.res6.spectrum.com)
[19:17:00] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[19:17:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[19:17:47] *** Joins: tim__ (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[19:17:54] *** Joins: wyclif (~wyclif@user/wyclif)
[19:17:55] *** Quits: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (Ping timeout: 252 seconds)
[19:18:10] *** Quits: ham5urg_ (~ham5urg@2a04:4540:680c:d300:fca2:a72d:edfc:75db) (Ping timeout: 265 seconds)
[19:18:19] *** Joins: randall (~randall@user/randall)
[19:19:05] *** Joins: Narrat (~omnius@p200300df5f10518806ea56fffe2e7cdc.dip0.t-ipconnect.de)
[19:19:17] *** Quits: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com) (Read error: Connection reset by peer)
[19:19:42] *** Quits: xiongxin (~quassel@113.116.33.5) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:20:00] *** Joins: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com)
[19:21:57] *** Quits: EgonX (~EgonX@2601:2c6:47f:9c18:e5f0:1d1f:5f5:3dca) (Quit: Textual IRC Client: www.textualapp.com)
[19:23:11] *** Joins: philectro (~quassel@2a02:2788:9a4:9f0:34f:9af9:3664:df68)
[19:26:16] *** Joins: stealth[] (~stealth]@200116b824a62f00e92facdf35ce44fc.dip.versatel-1u1.de)
[19:26:25] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[19:26:51] <madprops> what's the easiest way to have an async timeout like javascript ?
[19:28:28] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[19:28:54] *** Quits: UnnamedBeer (~UnnamedBe@231.red-83-41-235.dynamicip.rima-tde.net) (Quit: WeeChat 2.3)
[19:29:15] *** Quits: hyperknot (~hyperknot@2a02:3033:406:1ec9:5f4:44c0:5278:3800) (Quit: Textual IRC Client: www.textualapp.com)
[19:29:26] *** Joins: EgonX (~EgonX@2601:2c6:47f:9c18:bc5b:5840:fcda:9327)
[19:29:38] <InPhase> madprops: Perhaps look up asyncio.wait_for?
[19:30:31] *** Quits: johnau (~johnau@202.172.127.116) (Ping timeout: 245 seconds)
[19:30:43] *** Joins: lastshell (~lastshell@user/lastshell)
[19:31:46] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[19:32:35] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:32:36] *** Quits: odoood (~odoood@2601:c8:c003:a550::2) (Ping timeout: 245 seconds)
[19:33:50] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[19:33:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[19:34:04] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[19:34:05] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:34:30] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[19:35:03] *** Joins: wyclif (~wyclif@user/wyclif)
[19:35:51] *** Joins: Deneb (~johnch@86.111.189.80.dyn.plus.net)
[19:37:17] *** Joins: grooverman (~grooverma@179.99.120.247)
[19:37:34] <grooverman> Good morning.
[19:37:48] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[19:39:26] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[19:39:55] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[19:40:09] *** dcaro is now known as dcaro_away
[19:40:35] *** Joins: wyclif (~wyclif@user/wyclif)
[19:40:38] *** Joins: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c)
[19:41:28] *** Joins: KombuchaKip (~kip@192.252.230.5)
[19:42:45] *** Quits: dbristow (~dbristow@user/dbristow) (Quit: Leaving)
[19:43:17] *** Joins: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[19:43:46] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 252 seconds)
[19:45:23] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[19:45:43] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[19:46:06] *** Joins: wyclif (~wyclif@user/wyclif)
[19:47:11] *** Quits: tim__ (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (Ping timeout: 252 seconds)
[19:47:46] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[19:48:08] *** Joins: Macuser (~Macuser@216.30.159.201)
[19:48:11] *** Quits: irrgit (~irrgit@192.241.175.183) (Remote host closed the connection)
[19:49:32] *** Joins: WantToHelp (~dale@user/wanttohelp)
[19:50:12] *** Quits: mokulus (~mokulus@user/mokulus) (Quit: WeeChat 3.2.1)
[19:50:17] *** Parts: Plyht (uid433484@user/plyht) ()
[19:50:29] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 252 seconds)
[19:50:41] *** Joins: emf (~emf@2620:10d:c090:400::5:4ff3)
[19:50:56] *** Quits: Warped (~Warped@user/warped) (Ping timeout: 245 seconds)
[19:51:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[19:51:36] *** Joins: wyclif (~wyclif@user/wyclif)
[19:54:09] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[19:54:25] *** Quits: emf (~emf@2620:10d:c090:400::5:4ff3) (Client Quit)
[19:54:50] *** Joins: dbristow (~dbristow@user/dbristow)
[19:54:51] *** Joins: emf (~emf@2620:10d:c090:400::5:4ff3)
[19:56:09] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:5d10:8850:6285:4e0e)
[19:56:21] *** Quits: pycode (~pycode@2001:b07:5d28:551:5dc6:c035:927e:2797) (Ping timeout: 265 seconds)
[19:56:47] *** Joins: Deneb^ (~johnch@86.111.189.80.dyn.plus.net)
[19:57:48] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[19:58:09] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 265 seconds)
[19:58:51] *** Joins: wyclif (~wyclif@user/wyclif)
[20:00:49] *** Quits: sp0fp12 (~LENOVO@user/sp0fp12) (Read error: Connection reset by peer)
[20:03:26] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[20:04:22] *** Joins: wyclif (~wyclif@user/wyclif)
[20:04:28] *** Quits: Fiji (~Fiji@user/fiji) (Quit: Leaving)
[20:05:06] *** Quits: saroy (~Sandipan@45.249.73.179) (Ping timeout: 245 seconds)
[20:05:20] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Ping timeout: 252 seconds)
[20:06:28] *** Quits: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c) (Remote host closed the connection)
[20:06:56] *** Joins: irrgit (~irrgit@192.241.175.183)
[20:07:27] *** Joins: nomic (~nomic@185.192.69.180)
[20:08:19] *** Quits: llua (~llua@zsh/developer/llua) (Quit: <Rudolph> shell code is what greycat reads to kids when he tucks them in)
[20:08:58] *** Quits: arseru (uid515527@user/arseru) (Quit: Connection closed for inactivity)
[20:09:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[20:09:53] *** Joins: wyclif (~wyclif@user/wyclif)
[20:10:10] *** Quits: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[20:10:17] *** Quits: x4rchimedes (~archimed3@host-92-26-25-144.as13285.net) (Ping timeout: 252 seconds)
[20:11:28] *** Joins: Warped (~Warped@user/warped)
[20:12:24] *** Quits: grooverman (~grooverma@179.99.120.247) (Quit: bye)
[20:12:34] *** Joins: llua (~llua@zsh/developer/llua)
[20:12:42] *** Joins: grooverman (~grooverma@179.99.120.247)
[20:12:59] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[20:14:41] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[20:15:03] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[20:15:09] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[20:15:21] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[20:15:23] *** Joins: wyclif (~wyclif@user/wyclif)
[20:15:47] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 252 seconds)
[20:15:59] *** Joins: imakestuff (~imakestuf@197.156.107.70)
[20:17:38] *** Joins: tim__ (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[20:18:02] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[20:18:33] <orbisvicis> for running the python test suite, can I mark a test failed if it exceeds a timeout, rather than failing the entire suite?
[20:19:48] *** Quits: FastZ (~FastZ@pool-72-83-101-219.washdc.east.verizon.net) (Remote host closed the connection)
[20:19:56] *** Quits: lethu (~lethu@user/lethu) (Remote host closed the connection)
[20:20:06] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[20:20:22] *** Joins: FastZ (~FastZ@pool-72-83-101-219.washdc.east.verizon.net)
[20:20:45] *** Joins: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c)
[20:20:54] *** Joins: wyclif (~wyclif@user/wyclif)
[20:21:50] *** Quits: Narrat (~omnius@p200300df5f10518806ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[20:21:55] *** Joins: p-i- (~Ohmu@mx-ll-223.206.69-118.dynamic.3bb.co.th)
[20:21:58] *** Quits: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (Ping timeout: 265 seconds)
[20:22:09] *** Joins: Narrat (~omnius@p200300df5f10518806ea56fffe2e7cdc.dip0.t-ipconnect.de)
[20:24:13] <p-i-> Suppose I have many triples of this form: https://bpa.st/3ZWQ ... Can anyone suggest a neat syntax for constructing them?  each triple looks like this: _thing = tdjson.thing; _thing.restype = (e.g.) c_char_p; _thing.argtypes = (e.g.) [c_int, c_char_p]
[20:24:25] *** Quits: littlepython (~littlepyt@103.215.168.1) (Quit: Client closed)
[20:24:27] *** Joins: Akuli (~Akuli@82-203-166-24.bb.dnainternet.fi)
[20:24:53] <p-i-> I'd like to do: _thing = form(thing, [c_int, c_char_p] -> c_char_p)
[20:24:59] *** Joins: Samian (~Sami@user/samian)
[20:25:09] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[20:25:31] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[20:25:41] *** Quits: FastZ (~FastZ@pool-72-83-101-219.washdc.east.verizon.net) (Ping timeout: 252 seconds)
[20:25:47] <p-i-> Can I somehow pass in a lambda with type-hints into a function which can extract the name, arg-list and return-type of the lambda?
[20:26:00] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Client closed)
[20:26:24] *** Joins: wyclif (~wyclif@user/wyclif)
[20:26:25] *** Joins: stealth_ (~stealth_@216-197-160-97.regn.static.sasknet.sk.ca)
[20:27:49] *** Joins: lethu (~lethu@user/lethu)
[20:27:58] *** Joins: INeedAHandle (~INeedAHan@39.124.72.106)
[20:28:13] <bjs> p-i-: why not make that `form(thing, [c_int, c_char_p], c_char_p)`  then you can just write it
[20:28:18] *** Joins: FastZ (~FastZ@pool-72-83-101-219.washdc.east.verizon.net)
[20:28:26] <bjs> (write the function I mean)
[20:29:16] *** Joins: agustin1819 (~Guest68@2802:8001:6658:100:a441:6778:c305:cef4)
[20:29:25] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[20:29:26] <agustin1819> Hi
[20:29:32] *** Joins: int3l (~int3l@78-83-126-36.spectrumnet.bg)
[20:29:48] <agustin1819> Can we ask career questions here? Thansk
[20:29:50] <agustin1819> Thanks*
[20:30:10] *** Joins: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[20:30:41] *** Joins: raxor2k (~raxor2k@78.158.232.147)
[20:30:47] <p-i-> bjs: yup that's the best I can see. I was just wondering if it's possible to do something elegant with -> operator...
[20:30:56] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[20:31:04] <bjs> p-i-: the problem is there is no "-> operator",  it's just some special-cased part of the `def` syntax
[20:31:25] *** Joins: fikran (~fikran@user/fikran)
[20:31:27] *** Joins: sandb0y (~pirate@user/sandb0y)
[20:31:47] <raxor2k> people here got experience with running python APIs with machine learning/AI using docker? is there anything
[20:31:47] <raxor2k> i need to be caferul/worry about in terms of performance?
[20:31:48] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Quit: FinnElija)
[20:31:48] <briian> Is there a python module that can create a "histogram" with ranges e.g. if I have a list of integers and I want to bucket from 1-5, 6-10, etc? Not sure how this would look as a data structure, I guess keyed by the range and then maps to int. Wondering if that exists or would be easier to create from scratch
[20:31:55] *** Joins: wyclif (~wyclif@user/wyclif)
[20:31:56] <p-i-> goddit
[20:32:26] <agustin1819> just create a function lol
[20:32:29] <p-i-> briian: matplotlib has a hist
[20:33:02] <SnoopJ> (it's basically numpy.histogram() though)
[20:33:23] <briian> gotcha, I would go agustin1819 route too, someone else asking me
[20:34:08] <agustin1819> Do you know any websites to freelance as a Data Scientist or get a remote job while living in 3rd world? lol
[20:34:32] *** Quits: tim__ (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (Ping timeout: 265 seconds)
[20:34:37] <p-i-> agustin1819: where you live shouldn't make any difference if you have good creds
[20:34:49] <agustin1819> I have 6 months exp. as a data scientist
[20:35:19] <p-i-> Stack Overflow Careers is decent, UpWork is maybe a better launchpad until you've built rep.
[20:35:22] *** Quits: codeswhite (~codeswhit@user/codeswhite) (Read error: Connection reset by peer)
[20:35:30] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[20:35:42] *** Joins: codeswhite (~codeswhit@user/codeswhite)
[20:35:50] <agustin1819> I'm proficient in Python (pandas, sklearn, etc), SQL and some experience with Google Cloud
[20:36:06] <agustin1819> I'm still a Junior, though
[20:36:09] <Wulf> agustin1819: you're from Argentina (says whois)? That's not really 3rd world.
[20:36:30] <agustin1819> It's not, we have a stable internet connection and live in a capital with lots of resources
[20:36:57] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[20:37:23] <agustin1819> But we are more underpaid than neighbor countries
[20:37:30] *** Joins: wyclif (~wyclif@user/wyclif)
[20:38:07] *** Joins: tim__ (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[20:38:48] *** Joins: pycode (~pycode@2001:b07:5d28:551:10e7:bc99:babe:a1c5)
[20:38:49] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[20:39:36] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[20:39:56] <mh_le> when I install Qiskit 0.30, pyCharm tells me that are package requirements, among those qiskit 0.29. How can I fix this?
[20:40:56] <SnoopJ> mh_le, can you share the complete output on bpaste? https://bpa.st/+python+pytb
[20:41:37] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[20:42:37] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[20:42:45] *** Quits: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (Ping timeout: 265 seconds)
[20:42:45] *** Quits: kib_ (~kib@user/kib) (Ping timeout: 265 seconds)
[20:42:58] *** Quits: agustin1819 (~Guest68@2802:8001:6658:100:a441:6778:c305:cef4) (Ping timeout: 256 seconds)
[20:42:59] *** Joins: wyclif (~wyclif@user/wyclif)
[20:43:02] *** Joins: zeden (~zeden@user/zeden)
[20:43:28] <mh_le> SnoopJ: screenshot at https://cloud.eccentric.dk/s/gszpdeqesjziX94
[20:43:51] *** Joins: semeion (~semeion@user/semeion)
[20:44:20] *** Joins: kib_ (~kib@user/kib)
[20:45:05] *** Joins: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[20:46:55] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1)
[20:47:03] <SnoopJ> mh_le, what does your requirements.txt look like?
[20:47:08] *** Quits: legola (~legola@46.235.100.27) (Remote host closed the connection)
[20:47:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[20:47:50] *** Quits: stevea (~stevea@user/stevea) (Quit: Either I or my computer has gone to sleep. ZZZzzz‚Ä¶)
[20:48:07] *** Joins: stevea (~stevea@user/stevea)
[20:48:17] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[20:48:30] *** Joins: wyclif (~wyclif@user/wyclif)
[20:48:36] *** Quits: stevea (~stevea@user/stevea) (Client Quit)
[20:48:40] *** Quits: gitly (~gitly@185.69.145.201) (Ping timeout: 252 seconds)
[20:48:53] *** Joins: stevea (~stevea@user/stevea)
[20:49:16] *** Quits: tim__ (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (Ping timeout: 245 seconds)
[20:49:16] *** Quits: betuxy (~betuxy@158.181.77.59) (Quit: Connection closed)
[20:49:22] *** Quits: stevea (~stevea@user/stevea) (Client Quit)
[20:49:53] <mh_le> SnoopJ: how do I check?
[20:50:23] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: SO LONG SUCKERS!)
[20:50:26] *** Joins: stevea (~stevea@user/stevea)
[20:50:48] *** Joins: gitly (~gitly@185.69.145.221)
[20:50:54] *** Quits: stevea (~stevea@user/stevea) (Client Quit)
[20:51:21] *** Quits: Narrat (~omnius@p200300df5f10518806ea56fffe2e7cdc.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[20:51:41] *** Joins: uhu (~uhu@2a01:4f9:c010:1087::2)
[20:51:48] *** Joins: Robin_Jadoul (~Robin_Jad@152.67.64.160)
[20:51:58] *** Joins: stevea (~stevea@user/stevea)
[20:52:27] *** Quits: stevea (~stevea@user/stevea) (Client Quit)
[20:52:45] *** Joins: stevea (~stevea@user/stevea)
[20:53:01] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[20:53:14] *** Quits: stevea (~stevea@user/stevea) (Client Quit)
[20:53:32] *** Joins: stevea (~stevea@user/stevea)
[20:53:41] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[20:54:00] *** Quits: stevea (~stevea@user/stevea) (Client Quit)
[20:54:00] *** Joins: wyclif (~wyclif@user/wyclif)
[20:54:18] *** Joins: stevea (~stevea@user/stevea)
[20:54:48] *** Quits: stevea (~stevea@user/stevea) (Client Quit)
[20:55:05] *** Joins: stevea (~stevea@user/stevea)
[20:55:34] *** Quits: stevea (~stevea@user/stevea) (Client Quit)
[20:56:37] *** Joins: stevea (~stevea@user/stevea)
[20:57:06] *** Quits: stevea (~stevea@user/stevea) (Client Quit)
[20:57:24] *** Joins: stevea (~stevea@user/stevea)
[20:57:52] *** Quits: stevea (~stevea@user/stevea) (Client Quit)
[20:58:41] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[20:58:55] *** Joins: stevea (~stevea@user/stevea)
[20:59:24] *** Quits: stevea (~stevea@user/stevea) (Client Quit)
[20:59:31] *** Joins: wyclif (~wyclif@user/wyclif)
[20:59:42] *** Joins: stevea (~stevea@user/stevea)
[21:00:03] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:00:11] *** Quits: stevea (~stevea@user/stevea) (Client Quit)
[21:01:15] <foo> Is this frowned upon?  for _, value in something: ... - specifically the _ as a variable name? I haven't seen that before.
[21:01:30] <Wooble> foo: it's a sign you don't plan to use that value.
[21:01:42] *** Joins: The_Loko (~The_Loko@79.116.4.121)
[21:01:48] <foo> Wooble: ok, so it's as simple as that, and it's acceptable - it sounds like?
[21:01:54] <phy1729> Though if this is a dict, you might consider .values() instead of .items()
[21:01:55] <Wooble> foo: it will break horribly if you use gettext, but it's a convention.
[21:02:20] <foo> phy1729: thanks
[21:02:41] <foo> phy1729: I believe your comment was directed towards me. Thank you, I like that - too.
[21:03:19] *** Joins: tim__ (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[21:03:34] *** Quits: EgonX (~EgonX@2601:2c6:47f:9c18:bc5b:5840:fcda:9327) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[21:04:12] <energizer> Wooble: how's that?
[21:04:16] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[21:04:44] <hexnewbie> energizer: _ is the name commonly used for the function used to translate strings with gettext
[21:04:55] <energizer> oh right
[21:05:01] *** Joins: wyclif (~wyclif@user/wyclif)
[21:05:17] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 252 seconds)
[21:05:20] <Wooble> having 2 conflicting conventions is fun! :)
[21:05:46] <energizer> i've seen `gt` used for that function
[21:05:57] <bjs> energizer: but why would text be greater-than something :P
[21:06:07] <bjs> names are hard
[21:06:09] <energizer> bjs: that is a very good question
[21:06:25] <Wooble> probably don't do `from operator import *`? :)
[21:06:56] <hexnewbie> Yeah, one can definitely use tr = gttrans.gettext, instead of _ = gttrans.gettext
[21:06:58] *** Joins: MTecknology (~Mike@user/mtecknology)
[21:07:11] *** Quits: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (Ping timeout: 245 seconds)
[21:07:19] <SnoopJ> mh_le, open the file requirements.txt and examine what's inside of it.
[21:07:28] <SnoopJ> or share it on bpaste and we can take a look
[21:07:47] <hexnewbie> And I've never used gttrans.install() myself, it makes much more sense to pull those from a module of my own
[21:07:50] *** Joins: rolo (~rolo@2a02:8108:8d80:7aa4:1364:5ea5:36c3:3691)
[21:08:29] *** Joins: famubu (~famubu@user/famubu)
[21:08:38] <hexnewbie> presuming gttrans = gettext.GNUTranslations()
[21:08:45] *** Parts: famubu (~famubu@user/famubu) ()
[21:08:57] <mh_le> SnoopJ: ah I just saw it
[21:09:01] *** Quits: FastZ (~FastZ@pool-72-83-101-219.washdc.east.verizon.net) (Quit: Bye now!)
[21:09:06] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[21:09:27] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[21:09:29] *** Joins: Narrat (~omnius@p200300df5f1a789406ea56fffe2e7cdc.dip0.t-ipconnect.de)
[21:09:39] *** Quits: emf (~emf@2620:10d:c090:400::5:4ff3) (Quit: emf)
[21:09:56] *** Joins: emf (~emf@2620:10d:c090:400::5:4ff3)
[21:10:00] <mh_le> SnoopJ: https://bpa.st/JSHA
[21:10:19] *** Joins: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[21:10:31] *** Joins: wyclif (~wyclif@user/wyclif)
[21:11:08] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:1c17:3734:ae15:a712)
[21:12:45] *** Quits: nickodd (~nickodd@user/nickodd) (Ping timeout: 268 seconds)
[21:14:23] *** Joins: arinov (~arinov@31.142.23.241)
[21:14:39] *** Quits: tim__ (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (Ping timeout: 265 seconds)
[21:14:45] *** Joins: nickodd (~nickodd@user/nickodd)
[21:15:06] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Remote host closed the connection)
[21:15:37] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[21:16:02] *** Joins: wyclif (~wyclif@user/wyclif)
[21:17:14] <stewie925> hi all, this code segment seems simple, but I am getting a formatting error message in line 13 - https://bpa.st/ARSA
[21:17:24] <SnoopJ> mh_le, nothing amiss there, not sure where PyCharm got the qiskit==0.29.0 constraint from.
[21:18:04] <mh_le> I've submitted a support ticket at jetbrains
[21:18:09] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[21:18:13] <mh_le> SnoopJ: thanks for taking a look
[21:18:17] <stealth_> stewie925, your error is on line:11
[21:18:27] *** Joins: semeion (~semeion@user/semeion)
[21:18:36] *** Joins: junktext (~junktext@109.201.152.179)
[21:18:46] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:18:51] <stewie925> oh because it is expecting just one integer instead of three?
[21:18:52] <SnoopJ> It doesn't look like a bug, probably some other feature in the IDE getting in the way, or maybe that package is already installed in the environment (is it used in any of the assignments for previous weeks, perhaps?)
[21:18:55] <stealth_> stewie925, you are mixing int/str on line: 4 and 6
[21:20:03] <stealth_> stewie925, not sure why you are using % formating! you can just print it as is
[21:20:08] <SnoopJ> stewie925, it would fail for a tuple, but you're not returning a tuple anyway in multiply(), you return a string in the bottom of the conditional
[21:20:13] <stealth_> stewie925, `print(res)`
[21:20:17] <stewie925> stealth_: the logic is basically saying I need to print  a message with the a, b, and bound variables if bound is > a*b
[21:20:31] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[21:20:34] *** Quits: lastshell (~lastshell@user/lastshell) (Ping timeout: 252 seconds)
[21:20:59] <stewie925> oh its an exercise in hacker rank, I should leave the main function intact and only do the coding in the multiply function
[21:21:32] *** Joins: wyclif (~wyclif@user/wyclif)
[21:22:01] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[21:22:10] <stealth_> stewie925, none the less if you do need to use formating, the new way is to `return f'{a}, {b}, {bound}'`
[21:23:01] *** Quits: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (Ping timeout: 245 seconds)
[21:23:07] <stealth_> stewie925, if you need tuple like SnoopJ mention, then `return a, b, bound`
[21:23:21] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 265 seconds)
[21:23:35] <jinsun> it is expecting you to raise a ValueError(that_String) probably instead of that string
[21:23:50] <jinsun> instead of returning that sring
[21:23:52] <stewie925> so simple and I failed in it
[21:24:36] <stewie925> jinsun:  yeah
[21:24:37] <jinsun> based on the except ValueError in the main block
[21:25:34] *** Joins: lastshell (~lastshell@user/lastshell)
[21:25:34] <stewie925> hacker rank condition says if bound is > a*b then print "multiply <a value> with <b value> yields lower number than <bound value>"
[21:26:15] *** Quits: Leonarbro_ (~Leonet@user/leonarbro) (Ping timeout: 265 seconds)
[21:26:21] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[21:26:26] <stewie925> and I was struggling on how to send a correct return statement so the print won't fail
[21:26:44] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[21:27:02] *** Joins: wyclif (~wyclif@user/wyclif)
[21:27:23] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:29:09] *** Quits: kib_ (~kib@user/kib) (Ping timeout: 265 seconds)
[21:29:26] <briian> was talking in here last week about creating more complex Click cli applications, I'm trying to figure out how the callback works to pass commands in with callbacks instead of doing all my logic in cli.py
[21:29:29] *** Quits: Robin_Jadoul (~Robin_Jad@152.67.64.160) (Ping timeout: 252 seconds)
[21:30:39] <briian> but if I create a cli.py where I have `@click.command("commandname", callback=myfunc)`and call my script I get `click.core.Command() got multiple values for keyword argument 'callback'` why is that?
[21:30:59] <briian> it's supposed to take `name` first and can take `callback` as a separate kwarg
[21:31:22] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 260 seconds)
[21:31:42] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[21:31:48] <stewie925> jinsun: you are right, it is expected to route to the ValueError because I am sending a string message containing the a, b, and bound values
[21:32:03] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[21:32:10] <stealth_> briian, https://docs.python.org/3/library/functools.html#functools.partial is normally used,  `callback=[function, *args, **kwargs]`
[21:32:34] *** Joins: wyclif (~wyclif@user/wyclif)
[21:32:46] <jinsun> stewie925: cool, so did you get it to pass now?
[21:32:55] <stewie925> but I believe doing a `return f"{a} {b} {c"`  should be returning a string though
[21:32:57] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[21:33:24] <stewie925> I mean  `return f"{a} {b} {}"`
[21:33:32] *** Quits: rolo (~rolo@2a02:8108:8d80:7aa4:1364:5ea5:36c3:3691) (Quit: WeeChat 3.3)
[21:33:41] <jinsun> yes so don't return, raise
[21:34:37] <stewie925> when I try raise - it says "exceptions must derive from BaseException"
[21:35:18] <jinsun> don't raise the_string, raise ValueError(the_string)
[21:35:21] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:35:48] *** Joins: EgonX (~EgonX@2601:2c6:47f:9c18:bc5b:5840:fcda:9327)
[21:36:30] *** Quits: emf (~emf@2620:10d:c090:400::5:4ff3) (Ping timeout: 260 seconds)
[21:36:44] <stewie925> oh dang
[21:37:03] <stewie925> Thank you - that worked
[21:37:04] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[21:38:05] *** Joins: wyclif (~wyclif@user/wyclif)
[21:38:37] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[21:38:41] *** Joins: aikocro (~Guest7@2a03:e600:100::20)
[21:38:51] *** Quits: Samian (~Sami@user/samian) (Ping timeout: 245 seconds)
[21:38:56] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[21:38:58] <p-i-> I think I'm about halfway to making a tidy wrapper for a c-lib: https://bpa.st/MQZA ... can I tidy it up further? Each call I pass in a JSON object that gets serialized to bytes, invokes the underyling C function, converts the response back to Json.
[21:39:13] <p-i-> I think I can tidy it up further with a decorator, but not quite sure how to do it
[21:39:26] <briian> stealth_: eh.. i just dont get it, and i cant find any examples of the cli.py->commands.py type of structure anywhere online
[21:40:07] <mh_le> SnoopJ: let me check
[21:40:51] *** Joins: Samian (~Sami@user/samian)
[21:41:05] *** Joins: emf (~emf@2620:10d:c090:400::5:4ff3)
[21:41:21] <stealth_> briian, o, i thought you were implementing your own click like feature
[21:41:28] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[21:41:52] <mh_le> SnoopJ: this was our first programming assignment, and I've deleted and made a new virtual environment
[21:42:02] *** Quits: zaquest (~notzaques@5.128.210.178) (Remote host closed the connection)
[21:42:20] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-544b-b972-a6f4-ec7d.res6.spectrum.com)
[21:42:41] *** Quits: pycode (~pycode@2001:b07:5d28:551:10e7:bc99:babe:a1c5) (Ping timeout: 265 seconds)
[21:42:58] <briian> stealth_: nope.. just trying to clean up this project we have as its quite messy, having click logic in a `cli.py` was recommended to me and then having program logic in `main.py`, with callbacks as the way `main.py` is called, but i cant figure it out
[21:43:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[21:43:28] *** Joins: zaquest (~notzaques@5.128.210.178)
[21:43:35] *** Joins: wyclif (~wyclif@user/wyclif)
[21:44:02] <SnoopJ> p-i-, using lambdas like that is an antipattern, so that would be a big improvement in terms of "tidy". Otherwise I don't see much in the way of changes.
[21:44:16] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[21:44:33] <SnoopJ> (you can write a normal `def` on a single line, if for some reason your editor charges you by the line)
[21:46:35] <mh_le> SnoopJ: solved it, there was a requirements file in my home root
[21:48:01] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[21:48:05] <stealth_> briian, what can't you figure out? if you ask specific question with code, ppl can normally help you out.
[21:49:05] *** Joins: wyclif (~wyclif@user/wyclif)
[21:49:37] <SnoopJ> mh_le, aha, glad it was a straightforward constraint problem
[21:50:06] *** Quits: The_Loko (~The_Loko@79.116.4.121) (Ping timeout: 245 seconds)
[21:51:00] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Read error: Connection reset by peer)
[21:51:20] *** Quits: arinov (~arinov@31.142.23.241) (Quit: WeeChat 3.1)
[21:51:34] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[21:52:55] *** Quits: raxor2k (~raxor2k@78.158.232.147) ()
[21:53:06] <energizer> briian: https://bpa.st/WZLA
[21:53:26] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[21:53:51] <stealth_> briian, there is `click.command` and `click.Command` <- this one has `callback`
[21:54:36] *** Joins: wyclif (~wyclif@user/wyclif)
[21:54:37] <aphysically> for strict mypy I should just annotate *args/**kwargs in decorators with Any I guess until paramspec in 3.10?
[21:54:38] <stealth_> briian, https://click.palletsprojects.com/en/8.0.x/api/#click.Command
[21:57:04] *** Joins: arinov (~arinov@31.142.23.241)
[21:57:25] *** Quits: aikocro (~Guest7@2a03:e600:100::20) (Quit: Client closed)
[21:58:05] *** Quits: arinov (~arinov@31.142.23.241) (Client Quit)
[21:58:23] *** Joins: arinov (~arinov@31.142.23.241)
[21:58:50] <briian> stealth_: wow, thats aggravating lol
[21:59:04] <stealth_> briian, yep
[21:59:16] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[22:00:07] *** Joins: wyclif (~wyclif@user/wyclif)
[22:00:18] *** Quits: arinov (~arinov@31.142.23.241) (Client Quit)
[22:00:33] *** Joins: arinov (~arinov@31.142.23.241)
[22:01:16] *** Quits: arinov (~arinov@31.142.23.241) (Client Quit)
[22:01:33] *** Joins: arinov (~arinov@31.142.23.241)
[22:01:44] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz‚Ä¶)
[22:02:25] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[22:03:36] <briian> onto the next error lol
[22:04:02] *** Joins: The_Loko (~The_Loko@79.116.4.121)
[22:05:16] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[22:05:38] *** Joins: wyclif (~wyclif@user/wyclif)
[22:06:52] *** Quits: arinov (~arinov@31.142.23.241) (Remote host closed the connection)
[22:07:08] *** Joins: arinov (~arinov@31.142.23.241)
[22:07:15] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.2.1)
[22:08:23] <briian> stealth_: ah ok, so `class Command`is actually the same or similar to the decorator version `@click.command`, tahts where my confusion stemmed from, there is no decorator `@click.Command`, so since we're calling things by decorators we'd have to use the decorated function as the callbakc and if I want to call something else I'd  have to do it manually
[22:09:41] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[22:09:50] <stealth_> briian, did you look at the example code energizer provided  you?
[22:10:05] *** Quits: arinov (~arinov@31.142.23.241) (Client Quit)
[22:10:30] *** Joins: arinov (~arinov@31.142.23.241)
[22:10:43] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[22:11:08] *** Joins: wyclif (~wyclif@user/wyclif)
[22:11:54] *** Joins: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it)
[22:15:41] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 264 seconds)
[22:15:44] *** Quits: arinov (~arinov@31.142.23.241) (Quit: WeeChat 3.1)
[22:15:56] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[22:16:38] *** Joins: wyclif (~wyclif@user/wyclif)
[22:16:58] <MTecknology> I'm trying to write a "helper library" for $work to deal with some script cleanup. This move to a unified set of libraries is pulling in a few languages so I'm trying to find the most sensible way to keep it easily distributed and easy to import/use.    I know I /could/ keep it in it's current form (in a repo as helpers/py3utils.py) and then use sys.path.append('path/to/helpers');
[22:17:04] <MTecknology> import py3utils, but I suspect that's not terribly sane for reasons I'm currently unaware of.  Any chance I could get some advice on this? (better methods, problems with this, search terms)
[22:17:21] *** Quits: codeswhite (~codeswhit@user/codeswhite) (Ping timeout: 265 seconds)
[22:18:20] <energizer> MTecknology: are the scripts currently using any installed libraries or only the stdlib?
[22:18:46] <MTecknology> All stdlib
[22:20:05] <energizer> MTecknology: there are several options. sys.path.append; sitecustomize; pip install --user; venv
[22:21:25] *** Joins: vm (~vm@user/ansible)
[22:21:47] *** Joins: pycode (~pycode@2001:b07:5d28:551:f03d:bd49:5e80:5553)
[22:22:04] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[22:22:04] <energizer> oh and PYTHONPATH
[22:22:32] <energizer> MTecknology: sitecustomize and pip install --user make whatever you install available to all scripts. sys.path.append, PYTHONPATH, venv are more targeted.
[22:23:05] <energizer> ie they can be made specific to each particular script
[22:23:12] <energizer> or invocation
[22:23:27] <vm> hi everyone. could anyone help me with this regex? I want the match to only start at `my_pattern: host2` instead of host1 too. https://regex101.com/r/Ch3ZB8/1/ I'm looking to only select a block of text relevant for each host, individually
[22:23:32] <energizer> MTecknology: people can get religious about this topic
[22:23:52] <energizer> MTecknology: particularly venv advocates
[22:24:10] *** Joins: akmod (~akmod@c-24-10-154-68.hsd1.ut.comcast.net)
[22:24:21] <MTecknology> lol... you keep answering additional questions before I ask them. :P
[22:24:32] *** Joins: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d)
[22:24:38] <MTecknology> Is there any summary of religion against sys.path.append() [...]  <- one of them
[22:24:39] <p-i-> The inability to inline functions is the one thing in Python that drives me crazy. Half of my code is backwards on account of it. I'm constantly having to predeclare a function before passing it into a function.
[22:25:05] *** Joins: KombuchaKip (~kip@192.252.230.5)
[22:25:13] *** Parts: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it) ()
[22:25:18] <ssbr> p-i-: I don't understand what you mean.
[22:25:32] <MTecknology> energizer: Thank-you!! That's opening up my searches a lot as well. :D
[22:25:34] <energizer> MTecknology: if you go the venv route you'll need to write a setup.py for the helper package so it can be installed
[22:26:09] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Quit: Leaving)
[22:26:23] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[22:26:51] <ssbr> MTecknology: if the scripts are intended for end users, those people won't know how to use PYTHONPATH, and might not evne know how to use venvs etc., and so it may be worthwhile to package the whole thing in a binary and make helpers/py3utils.py available however the packaging tool thinks is acceptable
[22:27:18] <MTecknology> This is more of an attempt to clean up a general distributed clusterfuck by taking a bunch of commonly repeated functions/actions and shoving them into a single location that I can wrap in a butt load of unit testing. I'm hoping that I can actually keep it generic enough to work with py2 as well, but ehm... whatever if I can't.
[22:27:32] <energizer> oh good point ssbr, apt/dnf/brew/whatever is another option
[22:27:38] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:28:06] <energizer> MTecknology: is there only one computer this code will live on?
[22:28:10] <MTecknology> sis.path.append() seems like the cleanest approach in this case, letting me add the append(); import; up top and then just swap out broken functions with fixed ones.
[22:28:15] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:28:38] <MTecknology> energizer: hundreds
[22:29:10] <energizer> MTecknology: how do you get code onto them?
[22:29:50] <MTecknology> Most of everything getting cleaned up is git repos that are dropped onto the file system via saltstack
[22:30:36] <MTecknology> The shell version of this effort is just being dropped onto the file system the same way
[22:31:11] <MTecknology> I like the idea of eventually turning it into something that could be installed via pip.
[22:31:30] *** Quits: pycode (~pycode@2001:b07:5d28:551:f03d:bd49:5e80:5553) (Ping timeout: 265 seconds)
[22:31:35] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[22:32:13] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[22:32:13] <energizer> in that case i'd make a package with https://python-poetry.org/  and install it either with --user or into a venv
[22:32:44] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[22:33:58] <MTecknology> Yep, that looks like a neat toy to play with. :)
[22:34:15] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[22:34:34] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:34:45] <MTecknology> Thanks again! :)
[22:35:09] <energizer> if you want to make a binary, pex (doesnt include the python executable) or pyinstaller (bad name - not an installer, does incldue the python executable) are reasonable options
[22:35:46] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[22:35:51] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[22:36:25] *** Joins: wyclif (~wyclif@user/wyclif)
[22:37:12] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Ping timeout: 276 seconds)
[22:38:45] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[22:40:45] *** Joins: fikran (~fikran@user/fikran)
[22:40:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[22:41:11] *** Joins: kib_ (~kib@user/kib)
[22:41:34] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1) (Quit: Leaving)
[22:41:56] *** Joins: wyclif (~wyclif@user/wyclif)
[22:42:41] <Swayze> p-i-: hav eu tried anonymous functions?
[22:43:05] <Swayze> https://www.programiz.com/python-programming/anonymous-function
[22:43:27] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Remote host closed the connection)
[22:44:09] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[22:44:15] *** Joins: fellipe (~fellipe@2804:14c:65c2:4cc0::1001)
[22:44:38] *** Quits: humberto1 (~humbertow@2806:107e:f:2338:a44f:9ac4:f9ae:6b9e) (Ping timeout: 260 seconds)
[22:45:18] <MTecknology> so, ehm... good thing to note... 'git clean -fxd' *DOES* *NOT* belong in a Makefile!!!
[22:45:37] *** Quits: jabberwock (~jessy@user/jabberwock) (Quit: ZNC 1.9.x-git-111-f2cdc3db - https://znc.in)
[22:45:50] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[22:45:53] *** Parts: fellipe (~fellipe@2804:14c:65c2:4cc0::1001) ()
[22:45:54] * MTecknology pouts and opens a clean vim session
[22:46:03] *** Quits: EgonX (~EgonX@2601:2c6:47f:9c18:bc5b:5840:fcda:9327) (Quit: Textual IRC Client: www.textualapp.com)
[22:46:13] <grym> MTecknology: not even a defensive -n
[22:46:16] <grym> horrors
[22:46:33] *** Joins: humberto1 (~humbertow@2806:107e:f:2338:29f8:c08:f592:7635)
[22:46:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[22:47:26] *** Joins: wyclif (~wyclif@user/wyclif)
[22:47:31] <MTecknology> That got triggered from 'make docs'
[22:47:50] *** Joins: EgonX (~EgonX@c-98-194-169-75.hsd1.tx.comcast.net)
[22:48:09] *** Joins: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[22:48:21] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Quit: Leaving)
[22:49:20] <MTecknology> I got lucky and vim just saved my butt. This was an interesting lesson learned. :P
[22:50:14] <braxas> why is there not more funding for python :/
[22:50:32] <braxas> why do people fund stupid scams on internet instead of python :\
[22:50:42] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[22:51:24] <MTecknology> I got tricked into one of those kickstarter things. I'm not sure if I'll ever see that money again.
[22:51:38] <ssbr> braxas: Python seems adequately funded to me.
[22:51:58] <ssbr> people will of course send lots of money to scams on the internet, but that's life
[22:52:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[22:52:17] <braxas> ssbr: I dunno, from this I thought not: https://github.com/sponsors/python
[22:52:31] <braxas> > The capacity of the Python Software Foundation to support the development of CPython, the reference implementation of Python, hasn't kept pace with the growth in popularity of the programming language. CPython is developed and maintained largely by volunteers, and has accrued a large backlog of open issues (>7,500 open bugs http://bugs.python.org/) and unmerged code contributions (>1,200 open pull requests
[22:52:31] <braxas> https://github.com/python/cpython/pulls). Additionally, there are many R&D requests from users that we need to address.
[22:52:32] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[22:52:36] <energizer> python has, what, 2 full time devs, recently up from 1?
[22:52:51] *** Joins: ubert (~Thunderbi@91.141.58.84.wireless.dyn.drei.com)
[22:52:58] <braxas> Not sure I would call this adequately funded
[22:52:58] <ssbr> braxas: that's a compelling argument! :)
[22:53:20] *** Joins: wyclif (~wyclif@user/wyclif)
[22:53:35] <ChrisWarrick> braxas: then there‚Äôs also https://www.python.org/psf/sponsorship/sponsors/ ‚Äî and all the other donations outside of github sponsors
[22:53:36] <ssbr> braxas: anyway, if you want the real nonironic answer to your question, I'd say something like "Python is a public good"
[22:53:54] <ssbr> ( https://en.wikipedia.org/wiki/Public_good_(economics) )
[22:54:11] <energizer> yup https://en.wikipedia.org/wiki/Tragedy_of_the_commons
[22:55:12] *** Joins: betelgeuse8 (~betelgeus@94-225-47-8.access.telenet.be)
[22:55:15] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[22:55:15] *** betelgeuse8 is now known as betelgeuse
[22:55:35] <ssbr> energizer: technically a different thing, the commons is a rivalrous non-excludable good, vs a public good which is non-rivalrous
[22:55:52] *** Joins: pycode (~pycode@2001:b07:5d28:551:574:b265:6d34:fd4f)
[22:56:02] <ssbr> ooh, the wikipedia page has a matrix: https://en.wikipedia.org/wiki/Public_good_(economics)#Definition_matrix
[22:56:34] <ssbr> (which, incidentally, directly names open source software as a public good :O)
[22:56:53] *** Joins: rolo (~rolo@2a02:8108:8d80:7aa4:1364:5ea5:36c3:3691)
[22:57:47] *** Quits: rolo (~rolo@2a02:8108:8d80:7aa4:1364:5ea5:36c3:3691) (Client Quit)
[22:58:01] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[22:58:26] <energizer> ssbr +1
[22:58:53] *** Joins: wyclif (~wyclif@user/wyclif)
[22:59:56] <energizer> tbh i dont think this is the whole story tho, given the success of bigco languages
[23:00:48] <energizer> go, typescript, maybe rust
[23:01:13] *** Joins: retlo (~retlo@172.245.134.89)
[23:01:20] *** Quits: junktext (~junktext@109.201.152.179) (Ping timeout: 265 seconds)
[23:01:26] *** Joins: d00gy (~d00gy@user/d00gy)
[23:01:45] <retlo> are there any pop songs that mention python?
[23:01:49] *** Quits: ubert (~Thunderbi@91.141.58.84.wireless.dyn.drei.com) (Ping timeout: 252 seconds)
[23:02:30] <Wooble> "pop"? I doubt it. nerdcore? probably.
[23:02:34] *** Joins: arseru (uid515527@user/arseru)
[23:02:43] <ssbr> energizer: bigcos presumably only invest to the extent that it makes sense for them, ignoring benefits to society at large. So it's sorta like pollution, except good.
[23:03:12] *** Quits: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c) (Remote host closed the connection)
[23:03:19] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[23:03:45] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[23:04:03] <ssbr> i wish i had pursued a minor in economics :'(
[23:04:04] <energizer> ssbr: i suspect they invest less than that
[23:04:24] *** Joins: wyclif (~wyclif@user/wyclif)
[23:04:31] <energizer> into python
[23:04:44] <grym> ssbr: and all of dotnoet
[23:04:47] <grym> dotnet*
[23:04:50] <ssbr> energizer: probably. I remember being really annoyed that my Python 20% project wasn't a funded thing. I should propose it
[23:05:22] *** Joins: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c)
[23:05:49] *** Quits: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (Ping timeout: 265 seconds)
[23:06:34] *** Joins: jabberwock (~jessy@user/jabberwock)
[23:09:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[23:09:57] *** Joins: wyclif (~wyclif@user/wyclif)
[23:12:54] *** Quits: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c) (Remote host closed the connection)
[23:13:56] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[23:15:00] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[23:15:09] *** Joins: Auron (~Auron956@user/auron)
[23:15:27] *** Joins: wyclif (~wyclif@user/wyclif)
[23:15:29] *** Quits: califax- (~califax@user/califx) (Remote host closed the connection)
[23:15:30] *** Quits: brabrax_ (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[23:15:39] <retlo> thanks woobie, i havent really googled, but is there a channel fav
[23:17:59] *** Quits: Samian (~Sami@user/samian) (Read error: Connection reset by peer)
[23:19:09] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[23:20:19] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[23:21:02] *** Joins: wyclif (~wyclif@user/wyclif)
[23:21:47] *** Quits: stealth[] (~stealth]@200116b824a62f00e92facdf35ce44fc.dip.versatel-1u1.de) (Quit: Leaving)
[23:24:55] *** Quits: nomic (~nomic@185.192.69.180) (Quit: Leaving)
[23:25:12] *** Quits: carl- (~carl-@185.103.188.130) (Ping timeout: 250 seconds)
[23:25:32] *** Joins: neilthereildeil (~neilthere@204.115.183.4)
[23:26:07] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[23:26:31] *** Joins: wyclif (~wyclif@user/wyclif)
[23:26:50] *** Quits: Deneb^ (~johnch@86.111.189.80.dyn.plus.net) (Ping timeout: 246 seconds)
[23:28:15] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:e01f:4e2b:c803:177a)
[23:28:33] <neilthereildeil> hey guys
[23:28:43] <neilthereildeil> im having trouble installing m2crypto in a venv using python2
[23:28:50] *** Quits: akk (~akk@75.161.146.115) (Ping timeout: 252 seconds)
[23:29:03] <neilthereildeil> Failed to build m2crypto
[23:29:36] *** Joins: Elzington (~Elzington@66.63.167.167)
[23:30:27] *** Joins: Deneb^ (~johnch@86.111.189.80.dyn.plus.net)
[23:30:31] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[23:30:52] *** Joins: ham5urg_ (~ham5urg@2a04:4540:680c:d300:608f:449f:e7b9:29ba)
[23:31:01] *** Joins: djhankb (~djhankb@208.113.164.68)
[23:31:28] <grym> neilthereildeil: pastebin the error and traceback
[23:31:35] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[23:31:44] *** Quits: Linkandzelda (~Linkandze@cloudirc.laz.li) (Quit: Cya)
[23:32:02] *** Joins: wyclif (~wyclif@user/wyclif)
[23:32:25] <neilthereildeil> wait i think it was just that version
[23:32:26] *** Quits: masta`` (oyster@user/masta/x-2645138) (Quit: Going offline, see ya! (www.adiirc.com))
[23:32:30] <neilthereildeil> when i removed the version it seemed to work
[23:32:42] *** ExpiredKebab|afk is now known as ExpiredKebab
[23:34:06] *** Quits: emf (~emf@2620:10d:c090:400::5:4ff3) (Ping timeout: 260 seconds)
[23:36:14] <briian> stealth_: energizer sorry, didnt see you tagged me - that makes more sense, once i realized @click.command vs click.Command things clicked
[23:36:36] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[23:36:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[23:37:32] *** Joins: wyclif (~wyclif@user/wyclif)
[23:39:43] *** Joins: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c)
[23:40:46] *** Quits: Linux77 (~Linux7_7@186.233.182.243) (Quit: Leaving)
[23:40:58] *** Quits: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net) (Remote host closed the connection)
[23:41:13] *** kib_ is now known as kib
[23:42:28] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[23:43:01] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 252 seconds)
[23:43:03] *** Joins: wyclif (~wyclif@user/wyclif)
[23:45:07] *** Quits: Haxxa (~Haxxa@116-255-6-75.ip4.superloop.com) (Quit: Haxxa flies away.)
[23:45:11] <neilthereildeil> im trynna install egghatch pip package
[23:45:22] <neilthereildeil> but im getting "ERROR: Could not find a version that satisfies the requirement egghatch"
[23:45:25] *** Quits: magla (~gelignite@55d4442a.access.ecotel.net) (Quit: Stay safe!)
[23:45:26] <neilthereildeil> how can i solve this?
[23:45:39] *** Quits: ham5urg_ (~ham5urg@2a04:4540:680c:d300:608f:449f:e7b9:29ba) (Remote host closed the connection)
[23:45:48] <neilthereildeil> i tried "pip install egghatch"
[23:45:52] *** Joins: ham5urg_ (~ham5urg@2a04:4540:680c:d300:361c:8955:8ada:206e)
[23:46:36] *** Joins: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net)
[23:47:09] *** Quits: ham5urg_ (~ham5urg@2a04:4540:680c:d300:361c:8955:8ada:206e) (Remote host closed the connection)
[23:47:22] *** Joins: ham5urg_ (~ham5urg@2a04:4540:680c:d300:c4e2:b97c:37d2:85b9)
[23:47:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[23:48:01] <bjs> neilthereildeil: that probably means either there is no egghatch package or that the only versions pip can find are incompatible
[23:48:08] *** Joins: jinsun (~quassel@user/jinsun)
[23:48:16] <neilthereildeil> how can i view the available versions?
[23:48:26] <bjs> neilthereildeil: the pypi.org webpage can show you
[23:48:34] *** Joins: wyclif (~wyclif@user/wyclif)
[23:48:37] *** Joins: Haxxa (~Haxxa@116-255-6-75.ip4.superloop.com)
[23:49:06] <neilthereildeil> is there a command i can run in the venv?
[23:49:21] <bjs> neilthereildeil: e.g. https://pypi.org/project/egghatch/ is the package you're looking for?  Last release 2018, supported Python 2.7 only
[23:49:28] <neilthereildeil> yea
[23:49:30] <neilthereildeil> thats what i want
[23:49:37] <bjs> neilthereildeil: are you using Python 2?
[23:50:06] *** Joins: nomic (~nomic@185.192.69.180)
[23:50:13] <neilthereildeil> ya
[23:50:30] *** Joins: Linux77 (~Linux7_7@186.233.182.243)
[23:50:41] <Yhg1s> neilthereildeil: what does 'pip --version' say, then?
[23:50:47] <bjs> neilthereildeil: what does `pip --version` output?
[23:50:48] <bjs> ah
[23:50:57] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[23:51:08] <neilthereildeil> oops it says python 3.9
[23:51:09] *** Quits: ham5urg_ (~ham5urg@2a04:4540:680c:d300:c4e2:b97c:37d2:85b9) (Remote host closed the connection)
[23:51:16] <neilthereildeil> i must have misconfigured something
[23:51:22] <neilthereildeil> its supposed to be python 2.7.....
[23:51:22] *** Joins: ham5urg_ (~ham5urg@2a04:4540:680c:d300:e26b:d97e:616b:9560)
[23:51:30] <neilthereildeil> how can i set it to 2.7?
[23:51:51] *** Quits: Linux77 (~Linux7_7@186.233.182.243) (Client Quit)
[23:52:23] <Yhg1s> neilthereildeil: run python2.7 -m pip. Also, don't use Python 2.7.
[23:52:27] *** Quits: dman777 (~dman777@76-253-74-225.lightspeed.austtx.sbcglobal.net) (Quit: Lost terminal)
[23:52:50] <neilthereildeil> how can i configure this venv for 2.7?
[23:52:51] *** Joins: EgonX_ (~EgonX@2601:2c6:47f:9c18:f9d6:48b1:5c28:31fb)
[23:52:56] <bjs> neilthereildeil: if you're in a venv it probably means you created a python3 venv, so you might want to delete it and re-make it with python2
[23:52:58] <Yhg1s> neilthereildeil: you would need to create it with Python 2.
[23:53:03] <neilthereildeil> how?
[23:53:13] <Yhg1s> neilthereildeil: the same way as you created it with Python 3, but with Python 2 instead.
[23:53:21] <bjs> neilthereildeil: delete it then e.g. `python2 -m venv` rather than `python3 -m venv`
[23:53:28] <neilthereildeil> ok
[23:53:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[23:53:36] <Yhg1s> 'python2 -m virtualenv' probably.
[23:53:48] <neilthereildeil>  /usr/bin/python2: No module named venv
[23:53:51] <grym> since when did py2 have venv
[23:53:59] <grym> wasn't it 3.3 or 3.4
[23:54:04] *** Joins: wyclif (~wyclif@user/wyclif)
[23:54:10] <bjs> uh yeah sorry
[23:54:16] *** Quits: jazzy (~jaziz@2600:380:8510:f0e0:6066:bbe2:cc25:8e64) (Ping timeout: 245 seconds)
[23:54:36] <neilthereildeil> i used the virtualenv  command
[23:54:39] <bjs> grym: i think the set {things python2 didn't have} has fallen out of my head :(
[23:54:39] <neilthereildeil> is that wrong?
[23:55:30] <grym> bjs: i think that's a win :)
[23:55:34] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:e01f:4e2b:c803:177a) (Quit: Textual IRC Client: www.textualapp.com)
[23:55:53] *** Joins: Linux77 (~Linux7_7@187-126-71-30.user3p.veloxzone.com.br)
[23:56:13] <neilthereildeil> how can i create the venv with python 2?
[23:56:17] <neilthereildeil> that -m command didnt work
[23:56:19] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[23:56:21] <neilthereildeil> i have th evirtualenv command
[23:56:31] <bjs> neilthereildeil: sorry I meant virtualenv.  `python2 -m virtualenv`  (assuming you have virtualenv installed)
[23:56:52] <neilthereildeil>  bjs: /usr/bin/python2: No module named virtualenv
[23:57:09] *** Quits: Deneb^ (~johnch@86.111.189.80.dyn.plus.net) (Quit: Leaving)
[23:57:13] <bjs> neilthereildeil: well how did you install these pythons and how did you get virtualenv for the other one?
[23:57:36] <neilthereildeil> i think i just install edvirtualenv
[23:57:43] <ChrisWarrick> installed how?
[23:57:51] <neilthereildeil> i think using pip
[23:57:55] <neilthereildeil> but i think pip is for python 3
[23:57:58] <ChrisWarrick> i think?
[23:58:16] <ChrisWarrick> I‚Äôd just recommend using https://virtualenv.pypa.io/en/latest/installation.html#via-zipapp instead of guessing
[23:58:51] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[23:59:12] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[23:59:35] *** Joins: wyclif (~wyclif@user/wyclif)
[23:59:36] *** Joins: mickey (~user@user/mickey)
[23:59:39] *** Joins: CodePoint (~CodePoint@2600:1700:3070:3790:b4dc:3bf:e70e:8e25)
