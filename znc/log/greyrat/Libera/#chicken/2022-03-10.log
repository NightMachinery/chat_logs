[00:20:13] <vandusen> [eggs] Error fetching CHICKEN 4 .release-info file for the following eggs: pwdb, magic-pipes, bokbok, banterpixra
[00:21:10] <vandusen> [eggs] Error fetching CHICKEN 5 .release-info file for the following eggs: edn, awful-sse
[00:29:25] *** Quits: m455 (~m455@user/m455) (Quit: WeeChat 3.0)
[00:29:42] *** Joins: m455 (~m455@user/m455)
[00:34:15] *** Joins: ublx (~ublx@user/ublx)
[01:12:20] <vandusen> [eggs] Error fetching CHICKEN 5 .release-info file for the following eggs: edn, awful-sse
[02:12:24] <vandusen> [eggs] Error fetching CHICKEN 5 .release-info file for the following eggs: edn, awful-sse
[02:17:33] *** Quits: crumpo (~crumpo@user/crumpo) (Quit: Buh bye)
[02:21:38] *** Quits: klovett_ (~klovett@107.116.92.161) (Quit: ZZZzzz…)
[03:12:15] <vandusen> [eggs] Error fetching CHICKEN 5 .release-info file for the following eggs: edn, awful-sse
[03:14:05] *** Joins: Guest35 (~Guest35@2600:1700:9758:430:5373:f62d:18f3:63d2)
[03:14:33] *** Quits: Guest35 (~Guest35@2600:1700:9758:430:5373:f62d:18f3:63d2) (Client Quit)
[03:24:50] *** Joins: s-liao (~s-liao@101.86.96.21)
[03:41:43] *** Joins: mdhughes_ (mdhughes@user/mdhughes)
[03:45:15] *** Quits: mdhughes (mdhughes@user/mdhughes) (Ping timeout: 256 seconds)
[04:12:29] <vandusen> [eggs] Error fetching CHICKEN 5 .release-info file for the following eggs: edn, awful-sse
[04:44:10] *** Joins: klovett (~klovett@107.116.92.161)
[04:50:38] *** Quits: klovett (~klovett@107.116.92.161) (Ping timeout: 250 seconds)
[04:50:47] *** Joins: klovett_ (~klovett@107.116.92.161)
[05:12:25] <vandusen> [eggs] Error fetching CHICKEN 5 .release-info file for the following eggs: edn, awful-sse
[05:19:35] *** Joins: mewd (~user@2600:1700:9758:430:5373:f62d:18f3:63d2)
[05:36:20] *** Quits: mewd (~user@2600:1700:9758:430:5373:f62d:18f3:63d2) (Remote host closed the connection)
[05:37:25] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:5a9:1bfd:dfd5:df91)
[05:37:25] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:5a9:1bfd:dfd5:df91) (Changing host)
[05:37:25] *** Joins: skapata (~Skapata@user/skapata)
[05:48:13] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[06:12:18] <vandusen> [eggs] Error fetching CHICKEN 5 .release-info file for the following eggs: edn, awful-sse
[06:50:50] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[07:12:27] <vandusen> [eggs] Error fetching CHICKEN 5 .release-info file for the following eggs: edn, awful-sse
[07:49:52] *** Joins: megane (~megane@chicken/developer/megane)
[07:51:09] *** Joins: mdhughes (mdhughes@user/mdhughes)
[07:54:20] *** Quits: mdhughes_ (mdhughes@user/mdhughes) (Ping timeout: 256 seconds)
[08:11:55] *** Joins: s-liao (~s-liao@101.86.102.167)
[08:12:17] <vandusen> [eggs] Error fetching CHICKEN 5 .release-info file for the following eggs: edn, awful-sse
[09:12:20] <vandusen> [eggs] Error fetching CHICKEN 5 .release-info file for the following eggs: edn, awful-sse
[09:18:52] *** Quits: s-liao (~s-liao@101.86.102.167) (Quit: Client closed)
[09:39:51] *** Joins: mdhughes_ (~mdhughes@user/mdhughes)
[09:40:14] *** Quits: mdhughes (mdhughes@user/mdhughes) (Killed (NickServ (GHOST command used by mdhughes_!~mdhughes@user/mdhughes)))
[09:40:17] *** mdhughes_ is now known as mdhughes
[09:48:30] *** Joins: clacke (88d96f2df3@knopi.disroot.org)
[10:12:20] <vandusen> [eggs] Error fetching CHICKEN 5 .release-info file for the following eggs: edn, awful-sse
[10:26:40] *** Quits: klovett_ (~klovett@107.116.92.161) (Quit: ZZZzzz…)
[10:53:01] *** Joins: s-liao (~s-liao@101.86.102.167)
[11:03:17] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (Ping timeout: 256 seconds)
[11:12:39] <vandusen> [eggs] Error fetching CHICKEN 5 .release-info file for the following eggs: edn, awful-sse
[11:18:38] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[11:39:08] *** Quits: s-liao (~s-liao@101.86.102.167) (Quit: Client closed)
[11:56:16] <vandusen> [chicken-core branch master (da35cadb, by felix)]: Make type spec for "make-abolute-pathname" more specific. (Patch by "siiky")
[12:12:23] <vandusen> [eggs] Error fetching CHICKEN 5 .release-info file for the following eggs: edn, awful-sse
[12:37:55] *** Joins: jackhill_ (~jackhill@kalessin.dragonsnail.net)
[12:37:59] *** Quits: jackhill (~jackhill@kalessin.dragonsnail.net) (Remote host closed the connection)
[12:38:12] <vandusen> SPAM! SPAM! SPAM! by freeee
[12:39:42] *** Joins: crumpo (~crumpo@user/crumpo)
[12:53:03] *** Joins: some02 (~cat@h-98-128-128-173.A351.priv.bahnhof.se)
[12:53:03] *** Quits: some02 (~cat@h-98-128-128-173.A351.priv.bahnhof.se) (Changing host)
[12:53:03] *** Joins: some02 (~cat@user/sudden)
[12:54:13] *** Quits: sudden (~cat@user/sudden) (Ping timeout: 240 seconds)
[13:12:25] <vandusen> [eggs] Error fetching CHICKEN 5 .release-info file for the following eggs: edn, awful-sse
[13:37:37] *** Quits: tazjin (~quassel@polyanka.tazj.in) (Quit: Byeee)
[13:37:51] *** Joins: tazjin (~quassel@polyanka.tazj.in)
[13:39:02] *** Quits: tazjin (~quassel@polyanka.tazj.in) (Client Quit)
[13:39:28] *** Joins: tazjin (~quassel@polyanka.tazj.in)
[13:43:15] <vandusen> SPAM! SPAM! SPAM! by freee
[13:44:48] *** Quits: tazjin (~quassel@polyanka.tazj.in) (Quit: Byeee)
[13:45:14] *** Joins: tazjin (~quassel@polyanka.tazj.in)
[13:56:17] <elflng> glerg.
[13:59:59] <sjamaan> blarf
[14:02:47] <teiresias> Bleh.
[14:12:19] <vandusen> [eggs] Error fetching CHICKEN 5 .release-info file for the following eggs: edn, awful-sse
[14:36:36] *** Quits: ublx (~ublx@user/ublx) (Quit: ublx)
[15:12:21] <vandusen> [eggs] Error fetching CHICKEN 5 .release-info file for the following eggs: edn, awful-sse
[15:24:47] *** Quits: tazjin (~quassel@polyanka.tazj.in) (Quit: No Ping reply in 180 seconds.)
[15:25:58] *** Joins: tazjin (~quassel@polyanka.tazj.in)
[15:50:54] *** Quits: tazjin (~quassel@polyanka.tazj.in) (Quit: Byeee)
[16:12:27] <vandusen> [eggs] Error fetching CHICKEN 5 .release-info file for the following eggs: edn, awful-sse
[16:22:02] *** Joins: s-liao (~s-liao@101.86.102.167)
[17:12:17] <vandusen> [eggs] Error fetching CHICKEN 5 .release-info file for the following eggs: edn, awful-sse
[17:16:03] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:c42a:2dad:bcf1:880f)
[17:16:03] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:c42a:2dad:bcf1:880f) (Changing host)
[17:16:03] *** Joins: skapata (~Skapata@user/skapata)
[17:16:10] *** Quits: idstam (~idstam@185.176.247.102) (Ping timeout: 268 seconds)
[17:37:03] <zilti[m]> Blurg.
[17:41:54] <sjamaan> Anyone here on MacOS and would like to try josh's patch on chicken-users?
[17:42:03] <sjamaan> eh, chicken-hackers
[17:42:11] <sjamaan> https://lists.gnu.org/archive/html/chicken-hackers/2022-03/msg00000.html
[17:42:28] <sjamaan> Even if you do have XCode, would be even better to ensure that it still works there
[17:46:46] *** Quits: s-liao (~s-liao@101.86.102.167) (Quit: Client closed)
[17:58:38] *** Joins: klovett (~klovett@107.116.92.161)
[18:18:46] *** Joins: tazjin (~quassel@polyanka.tazj.in)
[18:26:57] *** Quits: tazjin (~quassel@polyanka.tazj.in) (Quit: Byeee)
[18:27:20] *** Joins: tazjin (~quassel@polyanka.tazj.in)
[18:56:06] *** Joins: klf (~fkl@66.220.197.183)
[18:58:48] <klf> I wish I had found this channel earlier as I need to write a type-checker for a Racket-to-C compiler for a compiler course.  I have several questions that I can't figure out and so let me get right to them.
[19:01:20] <klf> What is a reasonable expression type that we should assign to a function call for weakly-typed languages?
[19:01:55] <klf> (define foo 
[19:01:55] <klf>  (lambda (x) (if (even? x)
[19:01:55] <klf>               "string"
[19:01:58] <klf>               1)))
[19:03:19] <klf> How is it even possible to determine the return type of foo without evaulation?
[19:03:19] *** Quits: klovett (~klovett@107.116.92.161) (Quit: ZZZzzz…)
[19:06:37] *** Joins: klovett (~klovett@107.116.92.161)
[19:06:43] <klf> Hello.
[19:06:44] *** Quits: klovett (~klovett@107.116.92.161) (Client Quit)
[19:18:23] <klf> I have a file containing one line: (print "hello world!")
[19:19:03] <klf> `csc test.scm` yields the following error messages:
[19:19:12] <klf> test.scm(1,8): error CS1022: Type or namespace definition, or end-of-file expected
[19:19:15] <klf> test.scm(1,8): error CS1026: ) expected
[19:20:34] <klf> (FYI: I installed Chicken Scheme by installing the 'chicken' package in the official Arch repo using: pacman -S chicken)
[19:37:13] *** Quits: C-Keen (cckeen@pestilenz.org) (Quit: nyaa~)
[19:37:21] *** Joins: C-Keen (cckeen@pestilenz.org)
[19:54:52] <Bunny351> klf: foo would have a set of types as possible result
[19:55:27] <Bunny351> you walk the expression and conditionals ("if") merge the result types of the two branches
[19:56:05] <Bunny351> klf: is "csc" really the chicken scheme compiler driver?
[19:56:20] <Bunny351> there is an obscure language compiler also called "csc"...
[19:56:39] <Bunny351> perhaps there is a "chicken-csc", give it a try
[19:58:37] *** Joins: klovett (~klovett@107.116.92.161)
[19:59:36] <klf> Hello Bunny351.
[19:59:40] <klf> What do you mean by "
[19:59:53] <klf> "merge the result types of the two branches"?
[20:02:13] <Bunny351> typeof (if x A B) => (or A B)
[20:02:56] <Bunny351> actually (or <type of A> <type of B>)
[20:03:22] <Bunny351> or you must require that both branches have the same result type, but that makes your language stricter
[20:05:55] <klf> Bunny351: I understand your first solution: typeof (if x A B) => (or A B)
[20:05:56] <klf> O dpm
[20:06:07] <klf> I don't quite understand the second
[20:06:54] <klf> Bunny351: btw, using typeof macro is a great idea.
[20:07:32] <klf> as that doesn't make the input language stricter, nor does it perform evaluation.
[20:07:44] <Bunny351> depending on the type system you are implementing (if that is what you are trying to do), you must either require both branches of the "if" to have the same type or support sets of types (I think "sum types" is the proper word here)
[20:09:26] <Bunny351> well, not really proper
[20:09:46] <Bunny351> or a set of alternative possibilities
[20:10:02] <Bunny351> I mean: "more" a set of alternative possibilities
[20:11:15] <klf> Bunny351: please elaborate on "not really proper".  What's wrong with `typeof (if x A B) => (or A B)`?
[20:18:14] <klf> actually, on a second thought, since `typeof (if x A B) => (or A B)` would not work.  I almost lost sight that I am writing a type-checker to ensure that the compiler can generate valid c code
[20:19:08] <klf> Can you explain '(or <type of A> <type of B>)' again?
[20:21:04] <klf> How does handle this?
[20:21:33] <klf> (define foo
[20:21:33] <klf>  (lambda (x) (if (even? x)
[20:21:33] <klf>               "string"
[20:21:33] <klf>               1)))
[20:21:34] <klf> (foo 3)
[20:42:13] <klf> err... How does *CHICKEN* handle this?
[20:53:41] <Bunny351> chicken allows these "or" types, since the underlying runtime type system is dynamic.
[20:54:52] <Bunny351> if you write a checker, and compile directly to C, then you either have to force (require) both branches to have the same type or allow handling values that represent values of multiple types
[20:55:30] <Bunny351> not proper sum types, I meant, I was just refering to the term "sum type"
[20:59:53] *** Joins: lambdart (~lambdart@189.4.79.12)
[21:00:11] *** Quits: lambdart (~lambdart@189.4.79.12) (Client Quit)
[21:00:30] *** Joins: lambdart (~lambdart@189.4.79.12)
[21:00:30] *** Parts: lambdart (~lambdart@189.4.79.12) ()
[21:02:57] <klf> Bunny351: no evaluation occurs during the type-checking stage.  So i understand you correctly, allow handling of sum types during the type checking phase --- effectively delaying the resolution at a later stage?
[21:03:19] <klf> errr... "So if I understand you correctly..."
[21:03:51] <Bunny351> for example
[21:04:30] <Bunny351> but if you are writing a Racket-to-C compiler, I assume you require values to be of primitive C types, yes?
[21:04:47] <klf> yes.
[21:05:05] <Bunny351> so you have no runtime type checking?
[21:06:24] <klf> Let's just say no.  because that's too much work and my prof is okay with me making the input language stricter, though I am exploring feasible solutions that don't force me to butcher the language too much.
[21:08:06] <Bunny351> so what you will have to do then is to restrict the types. "if" will require that every condition will return the same type
[21:08:33] <Bunny351> so, your type checker has to check that A and B in "(if ... A B)" have the same type
[21:09:19] <klf> Bunny351: okay.  that's not too difficult to do, as I already have the code in PLY (Python Lex and Yacc) that traverses the syntax tree
[21:10:34] <klf> I also maintain of stack of SymbolTables which I can look up the types
[21:10:45] <klf> maintain a* stack
[21:14:29] <klf> That's what I am going to do.  require both branches of the "if" to have the same type.
[21:31:37] *** Quits: crumpo (~crumpo@user/crumpo) (Ping timeout: 240 seconds)
[21:32:41] *** Joins: idstam (~idstam@194.103.157.17)
[21:37:40] <klf> Bunny351: http://wiki.call-cc.org/man/5/Types
[21:38:14] <klf> but I won't go down that rabbit hole
[21:48:28] *** Joins: crumpo (~crumpo@user/crumpo)
[21:50:35] *** Joins: mewd (~user@2600:1700:9758:430:94ff:6a41:c970:bdc8)
[21:50:46] *** Quits: mewd (~user@2600:1700:9758:430:94ff:6a41:c970:bdc8) (Remote host closed the connection)
[23:54:23] *** Joins: mewd (~user@2600:1700:9758:430:7c0a:338c:923c:f320)
