[00:00:24] *** Quits: keir (~keir@user/keir) (Quit: keir)
[00:00:26] *** Joins: Samian (~Sami@2600:380:4a39:a7bc:1cb3:6124:1357:3114)
[00:00:56] *** Quits: nvmd (~nvmd@user/nvmd) (Ping timeout: 250 seconds)
[00:01:52] *** Joins: elf_fortrez (~elf_fortr@adsl-64-237-239-250.prtc.net)
[00:02:37] *** Quits: austin987 (~null@100.42.98.196) (Ping timeout: 245 seconds)
[00:02:37] *** Quits: christall (~christall@dyn-4-36.myactv.net) (Read error: Connection reset by peer)
[00:03:35] *** Quits: elf_fortrez (~elf_fortr@adsl-64-237-239-250.prtc.net) (Client Quit)
[00:04:40] *** Quits: Samian (~Sami@2600:380:4a39:a7bc:1cb3:6124:1357:3114) (Ping timeout: 240 seconds)
[00:13:28] *** Quits: lgc (~lgc@user/lgc) (Quit: WeeChat 3.2-dev)
[00:15:04] *** Joins: austin987 (~null@172.58.99.188)
[00:15:12] *** Quits: Darkfoe1 (~chuck@drunk.serverfail.party) (Ping timeout: 276 seconds)
[00:17:05] *** Joins: Darkfoe1 (~chuck@drunk.serverfail.party)
[00:17:18] *** Joins: absc (~absc@dynamic-adsl-94-34-168-146.clienti.tiscali.it)
[00:21:20] *** Quits: Helmholtz (~leibnizma@2001:470:69fc:105::3124) (Changing host)
[00:21:20] *** Joins: Helmholtz (~leibnizma@user/helmholtz)
[00:24:35] *** Joins: XV8 (~XV8@2601:5cb:c001:50:7c79:4e14:5357:7ce1)
[00:30:52] *** Joins: keir (~keir@user/keir)
[00:36:16] *** Joins: jazzy (~jaziz@172.58.35.41)
[00:40:07] *** Quits: rahl (~rahl@102.114.29.38) (Ping timeout: 252 seconds)
[00:41:49] *** Joins: rahl (~rahl@102.114.28.115)
[00:41:49] *** Quits: austin987 (~null@172.58.99.188) (Ping timeout: 252 seconds)
[00:44:36] *** Joins: christall (~christall@dyn-4-36.myactv.net)
[00:47:26] *** Quits: christall (~christall@dyn-4-36.myactv.net) (Read error: Connection reset by peer)
[00:47:58] *** Joins: christall (~christall@dyn-4-36.myactv.net)
[00:53:22] *** Quits: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net) (Read error: Connection reset by peer)
[00:55:25] *** Joins: austin987 (~null@rrcs-71-40-74-150.sw.biz.rr.com)
[00:59:10] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[01:01:37] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 252 seconds)
[01:05:31] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:12:40] *** Joins: theoceaniscool (~theoceani@119.12.232.133)
[01:14:16] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com) (Ping timeout: 252 seconds)
[01:15:41] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[01:17:56] *** Joins: oriba (~oriba@dynamic-089-014-102-014.89.14.pool.telefonica.de)
[01:18:12] *** Quits: subopt (~subopt@2603-8081-2302-459a-b9cd-3b94-49b4-ec38.res6.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:18:41] *** Joins: subopt (~subopt@2603-8081-2302-459a-88fa-805f-1e34-502d.res6.spectrum.com)
[01:19:10] *** Quits: austin987 (~null@rrcs-71-40-74-150.sw.biz.rr.com) (Ping timeout: 240 seconds)
[01:19:55] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[01:21:14] *** Quits: humanface (~humanface@20014C4E1C473D00044785C62325C109.dsl.pool.telekom.hu) (Quit: Client closed)
[01:21:17] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 245 seconds)
[01:21:17] *** Lord_of_Life_ is now known as Lord_of_Life
[01:24:05] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:27:12] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:27:31] *** Quits: tmz (~tmz@fedora/tmz) (Quit: Leaving)
[01:27:52] *** Joins: tmz (~tmz@fedora/tmz)
[01:29:27] *** Quits: keir (~keir@user/keir) (Quit: keir)
[01:32:05] *** Joins: austin987 (~null@cpe-173-174-99-192.austin.res.rr.com)
[01:33:22] *** Quits: travaldo (~travaldo@159.203.88.148) (Ping timeout: 245 seconds)
[01:38:25] *** Joins: humanface (~humanface@20014C4E1C473D00044785C62325C109.dsl.pool.telekom.hu)
[01:38:34] *** Quits: christall (~christall@dyn-4-36.myactv.net) (Remote host closed the connection)
[01:38:36] *** Joins: Bayes (~Bayes@ics177-97.icsincorporated.com)
[01:39:12] *** Quits: Bayes (~Bayes@ics177-97.icsincorporated.com) (Changing host)
[01:39:12] *** Joins: Bayes (~Bayes@user/bayes)
[01:39:49] *** Joins: christall (~christall@dyn-4-36.myactv.net)
[01:41:18] *** Quits: madewokherd (~urk@comcast.codeweavers.com) (Quit: If your computer stops responding for a long time, turn it off and then back on.)
[01:45:10] *** Quits: srinidhi (~srinidhi@49.206.4.186) (Ping timeout: 244 seconds)
[01:49:25] *** Quits: aniruddha (uid340443@id-340443.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[01:52:21] *** Joins: jazzy2 (~jaziz@172.58.35.41)
[01:52:34] *** jazzy is now known as Guest9803
[01:52:48] *** jazzy2 is now known as jazzy
[01:53:43] *** Quits: jazzy (~jaziz@172.58.35.41) (Read error: Connection reset by peer)
[01:54:02] *** Joins: jazzy (~jaziz@172.58.35.41)
[01:55:30] *** Quits: Guest9803 (~jaziz@172.58.35.41) (Ping timeout: 256 seconds)
[01:59:55] *** Quits: austin987 (~null@cpe-173-174-99-192.austin.res.rr.com) (Ping timeout: 252 seconds)
[02:03:45] *** Quits: absc (~absc@dynamic-adsl-94-34-168-146.clienti.tiscali.it) (Remote host closed the connection)
[02:06:12] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[02:06:12] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:06:12] *** Quits: nik (~nik777@vpn-users-dip-pool164.dip.cf.ac.uk) (Quit: Leaving)
[02:07:04] *** Quits: theoceaniscool (~theoceani@119.12.232.133) (Ping timeout: 252 seconds)
[02:09:25] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Quit: The Lounge - https://thelounge.chat)
[02:10:38] *** Joins: theoceaniscool (~theoceani@119.12.232.133)
[02:10:50] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[02:11:58] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[02:12:02] *** Quits: junktext (~junktext@77.247.181.216) (Ping timeout: 244 seconds)
[02:12:45] *** Joins: austin987 (~null@100.42.98.196)
[02:13:16] *** Gustavo6046_ is now known as Gustavo6046
[02:15:02] *** Quits: humanface (~humanface@20014C4E1C473D00044785C62325C109.dsl.pool.telekom.hu) (Quit: Client closed)
[02:15:41] *** Joins: humanface (~humanface@20014C4E1C473D00044785C62325C109.dsl.pool.telekom.hu)
[02:16:54] *** Quits: oriba (~oriba@dynamic-089-014-102-014.89.14.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:17:48] *** Quits: christall (~christall@dyn-4-36.myactv.net) (Remote host closed the connection)
[02:18:00] *** Joins: christall (~christall@dyn-4-36.myactv.net)
[02:19:39] *** Quits: jwillikers (~jwilliker@ics141-1.icsincorporated.com) (Remote host closed the connection)
[02:20:43] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[02:21:08] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[02:21:52] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[02:24:29] *** Joins: madewokherd (~urk@65-128-179-49.mpls.qwest.net)
[02:26:21] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[02:27:06] *** Quits: Bayes (~Bayes@user/bayes) (Quit: Connection closed)
[02:28:14] *** Joins: cliluw (~cliluw@47.147.80.149)
[02:34:52] *** Quits: furrymcgee (~devuan@31.179.186.66) (Quit: leaving)
[02:37:13] *** Quits: Lunatrius (~Lunatrius@77.38.92.228) (Read error: Connection reset by peer)
[02:37:28] *** Joins: Lunatrius (~Lunatrius@77.38.92.228)
[02:38:03] *** Quits: christall (~christall@dyn-4-36.myactv.net) (Remote host closed the connection)
[02:38:32] *** Joins: christall (~christall@dyn-4-36.myactv.net)
[02:38:49] *** Joins: odoood (~odoood@2601:c8:c003:a550::7)
[02:38:58] *** Quits: theoceaniscool (~theoceani@119.12.232.133) (Ping timeout: 252 seconds)
[02:39:35] *** Joins: humanface56 (~humanface@20014C4E1C473D00044785C62325C109.dsl.pool.telekom.hu)
[02:41:21] *** Quits: humanface (~humanface@20014C4E1C473D00044785C62325C109.dsl.pool.telekom.hu) (Ping timeout: 256 seconds)
[02:42:37] *** Quits: christall (~christall@dyn-4-36.myactv.net) (Ping timeout: 245 seconds)
[02:43:34] *** Joins: arktnld_ (~arktnld@179.186.101.144.dynamic.adsl.gvt.net.br)
[02:44:20] *** arktnld_ is now known as arktnld
[02:45:23] *** Quits: arktnld (~arktnld@179.186.101.144.dynamic.adsl.gvt.net.br) (Client Quit)
[02:45:53] *** Joins: arktnld (~arktnld@179.186.101.144.dynamic.adsl.gvt.net.br)
[02:50:49] *** Joins: arcatech (~arcatech@user/arcatech)
[02:51:18] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 244 seconds)
[02:51:38] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[02:54:58] *** Joins: hbautista_ (~hbautista@187.171.69.204)
[02:55:24] *** tang^ is now known as DoofusCanadensis
[03:02:09] *** Joins: BitsNBytes (~BitsNByte@ip59-131-15-186.ct.co.cr)
[03:02:43] *** Quits: Narrat (~omnius@p200300df5f00d3ea06ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[03:07:40] *** Joins: jwillikers (~jwilliker@ics141-1.icsincorporated.com)
[03:08:07] *** Quits: odoood (~odoood@2601:c8:c003:a550::7) (Ping timeout: 252 seconds)
[03:09:55] *** Joins: christall (~christall@dyn-4-36.myactv.net)
[03:10:55] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[03:18:38] *** Joins: arcatech (~arcatech@user/arcatech)
[03:18:39] *** Quits: BlessJah (~BlessJah@user/blessjah) (Ping timeout: 250 seconds)
[03:19:29] *** Joins: hubble (~hubble@user/hubble)
[03:20:25] *** Joins: BlessJah (~BlessJah@user/blessjah)
[03:21:25] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[03:23:54] *** Quits: christall (~christall@dyn-4-36.myactv.net) (Ping timeout: 256 seconds)
[03:33:40] *** Quits: jiffe (~jiffe@mail.nsab.us) (Ping timeout: 244 seconds)
[03:33:49] *** Joins: pizdets_ (~pizdets@183.182.114.199)
[03:33:50] *** Quits: pizdets (~pizdets@183.182.114.170) (Ping timeout: 245 seconds)
[03:36:30] *** Joins: jiffe (~jiffe@mail.nsab.us)
[03:39:43] *** Quits: hubble (~hubble@user/hubble) (Ping timeout: 256 seconds)
[03:40:24] *** Joins: hubble (~hubble@user/hubble)
[03:48:41] *** Quits: xx (~xx@user/xx) (Quit: xx)
[03:49:39] *** Joins: christall (~christall@dyn-4-36.myactv.net)
[03:50:33] *** Joins: jazzy2 (~jaziz@172.58.35.41)
[03:50:41] *** Quits: jazzy (~jaziz@172.58.35.41) (Read error: Connection reset by peer)
[03:51:03] *** Quits: hubble (~hubble@user/hubble) (Ping timeout: 256 seconds)
[03:55:48] *** jazzy2 is now known as jazzy
[03:56:49] *** Joins: sh4 (~sh4@user/sh4)
[03:57:13] <sh4> when trying to checkout master i get: fatal: 'master' matched multiple (2) remote tracking branches
[03:57:26] <sh4> where can i change that to remove whatever the second master is ?
[03:58:20] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[04:00:29] *** Quits: christall (~christall@dyn-4-36.myactv.net) (Remote host closed the connection)
[04:01:02] <DoofusCanadensis> you have more than one remote
[04:01:14] <DoofusCanadensis> so you have to be specific about which remote your master is tracking
[04:01:51] *** Joins: hubble (~hubble@user/hubble)
[04:01:54] <sh4> can i just tell it "use origin/master whenever i say master"
[04:02:18] <DoofusCanadensis> yes
[04:02:23] <DoofusCanadensis> man git checkout
[04:02:23] <gitinfo> the git-checkout manpage is available at https://gitirc.eu/git-checkout.html
[04:02:32] <DoofusCanadensis> with specifics on --track
[04:03:59] *** Quits: BitsNBytes (~BitsNByte@ip59-131-15-186.ct.co.cr) (Quit: Leaving)
[04:04:08] <sh4> aha, that's what git suggested - hint:     git checkout --track origin/<name>
[04:04:27] <sh4> though it didn't tell me that "from then on origin/master will be master"
[04:04:48] *** Joins: christall (~christall@dyn-4-36.myactv.net)
[04:06:21] *** Joins: arcatech (~arcatech@user/arcatech)
[04:06:41] <DoofusCanadensis> unless you delete your local master branch
[04:06:53] <DoofusCanadensis> then you have to tell it to track all over again
[04:07:07] <DoofusCanadensis> neat trick? your local branch name does not have to match the remote branch name
[04:07:32] <DoofusCanadensis> I have a master that tracks origin/master and a staging-master that tracks staging/master in one of my repos
[04:08:01] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 252 seconds)
[04:09:41] *** Joins: Wulf (~Wulf@user/wulf)
[04:09:42] <sh4> having multiple masters sounds like a recipe for confusion
[04:09:43] *** Quits: christall (~christall@dyn-4-36.myactv.net) (Ping timeout: 252 seconds)
[04:10:13] <DoofusCanadensis> both origin and staging and upstream (all, not both) have a master branch
[04:10:28] <DoofusCanadensis> would you normally check all of them out into different branches normally? probably not
[04:11:13] <sh4> well, i'd ask contributors to use feature branches for work, but if one of them would push to his master regardless, i'd use git merge foobar/master
[04:11:29] *** Quits: humanface56 (~humanface@20014C4E1C473D00044785C62325C109.dsl.pool.telekom.hu) (Quit: Client closed)
[04:12:25] *** Quits: Gurkenglas (~Gurkengla@dslb-088-075-022-191.088.075.pools.vodafone-ip.de) (Ping timeout: 244 seconds)
[04:14:10] *** Quits: dob1 (~dob1@user/dob1) (Ping timeout: 240 seconds)
[04:15:23] *** Joins: hubble88 (~hubble@user/hubble)
[04:15:57] *** Quits: igemnace (~ian@user/igemnace) (Ping timeout: 245 seconds)
[04:18:15] *** Joins: dob1 (~dob1@user/dob1)
[04:19:23] *** Quits: hubble (~hubble@user/hubble) (Ping timeout: 256 seconds)
[04:19:48] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[04:20:02] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[04:22:01] *** Quits: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch) (Read error: Connection reset by peer)
[04:22:07] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 245 seconds)
[04:23:45] *** Quits: pyevery__ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Remote host closed the connection)
[04:23:55] *** Joins: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch)
[04:24:21] *** Joins: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[04:25:42] *** Joins: travaldo (~travaldo@159.203.88.148)
[04:26:25] *** Quits: natrys (~natrys@user/natrys) (Quit: natrys)
[04:27:21] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[04:28:16] *** Joins: AsenMx (~AsenMx@78.90.248.234)
[04:28:58] *** Quits: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Ping timeout: 252 seconds)
[04:29:20] *** Joins: arcatech (~arcatech@user/arcatech)
[04:31:27] *** Joins: igemnace (~ian@user/igemnace)
[04:31:53] *** Quits: arcatech (~arcatech@user/arcatech) (Client Quit)
[04:32:53] *** Joins: arcatech (~arcatech@user/arcatech)
[04:33:28] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[04:34:07] *** Joins: christall (~christall@dyn-4-36.myactv.net)
[04:34:34] *** Quits: jwillikers (~jwilliker@ics141-1.icsincorporated.com) (Remote host closed the connection)
[04:45:28] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 252 seconds)
[04:48:35] *** Quits: christall (~christall@dyn-4-36.myactv.net) (Ping timeout: 244 seconds)
[04:49:17] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 245 seconds)
[04:49:49] *** Quits: Tobbi_ (~Thunderbi@62.214.69.130) (Ping timeout: 252 seconds)
[04:50:38] *** Joins: Brain (~brain@cpc143398-mfl22-2-0-cust11.13-1.cable.virginm.net)
[04:51:28] <Brain> can someone please give me a command to forcibly, non-interactively, rebase ALL commits on master into one commit? I know this sounds harmful an destructive -- it is! i want to use it to periodically clean up automatic commits made to my github pages repository from an autobuild script.
[04:51:49] <Brain> ive done some searching but most rebase examples seem to be interactive or know that you want to rebase the last 'n' commits
[04:53:23] *** Quits: rkta (~kt@62.113.246.111) (Read error: Connection reset by peer)
[04:53:32] *** Joins: rkta (~kt@62.113.246.111)
[04:59:45] *** Joins: Xenguy (~Xenguy@devuan/developer/Xenguy)
[05:02:13] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[05:02:42] *** Joins: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[05:06:16] *** Joins: christall (~christall@dyn-4-36.myactv.net)
[05:07:02] *** Joins: muscularduckling (~musculard@h124.68.188.173.dynamic.ip.windstream.net)
[05:07:14] *** Joins: arcatech (~arcatech@user/arcatech)
[05:08:32] *** Joins: audiocat (~audio@2603-8081-1801-3bb5-0258-933a-d6c3-bfc1.res6.spectrum.com)
[05:10:46] *** Quits: christall (~christall@dyn-4-36.myactv.net) (Ping timeout: 252 seconds)
[05:11:38] *** Quits: CommunistWolf (~gulag@user/communistwolf) (Ping timeout: 250 seconds)
[05:12:09] *** Quits: cation (cation@user/cation) (Ping timeout: 248 seconds)
[05:15:06] *** Quits: XV8 (~XV8@2601:5cb:c001:50:7c79:4e14:5357:7ce1) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:15:17] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[05:16:11] *** Joins: cation (cation@user/cation)
[05:17:18] *** Joins: XV8 (~XV8@2601:5cb:c001:50:1cbe:c42c:230b:545e)
[05:17:45] *** Quits: hubble88 (~hubble@user/hubble) (Ping timeout: 256 seconds)
[05:19:35] *** Joins: CommunistWolf (~gulag@user/communistwolf)
[05:20:56] <circuitbone> https://github.com/stevenjack/cig
[05:21:06] <circuitbone> please post any extra tools you find good value
[05:21:42] *** Quits: XV8 (~XV8@2601:5cb:c001:50:1cbe:c42c:230b:545e) (Ping timeout: 245 seconds)
[05:23:50] *** Quits: reset (~reset@user/reset) (Quit: reset)
[05:25:45] *** Joins: christall (~christall@dyn-4-36.myactv.net)
[05:28:09] *** Joins: arcatech (~arcatech@user/arcatech)
[05:28:24] *** Quits: arcatech (~arcatech@user/arcatech) (Client Quit)
[05:32:05] *** Joins: arcatech (~arcatech@user/arcatech)
[05:35:05] *** Quits: muscularduckling (~musculard@h124.68.188.173.dynamic.ip.windstream.net) (Ping timeout: 244 seconds)
[05:35:22] *** Quits: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Remote host closed the connection)
[05:35:38] *** Joins: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[05:40:07] *** Quits: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Ping timeout: 245 seconds)
[05:43:10] *** Quits: christall (~christall@dyn-4-36.myactv.net) (Ping timeout: 240 seconds)
[05:47:39] <nedbat> Brain: you could create a branch from your first commit, then when you want to squash, "git reset THATBRANCH" then "git add"; "git commit"
[05:50:07] *** Quits: arktnld (~arktnld@179.186.101.144.dynamic.adsl.gvt.net.br) (Quit: arktnld)
[06:00:37] *** Quits: travaldo (~travaldo@159.203.88.148) (Quit: travaldo)
[06:01:40] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[06:01:55] *** Quits: mei (~mei@user/mei) (Ping timeout: 252 seconds)
[06:02:28] *** Quits: nyah (~nyah@bcdcb6e3.skybroadband.com) (Ping timeout: 244 seconds)
[06:11:43] *** Joins: vysn (~vysn@user/vysn)
[06:17:47] *** Joins: muscularduckling (~musculard@2001:470:69fc:105::e896)
[06:19:50] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[06:20:10] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[06:21:41] *** Joins: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[06:22:07] *** Quits: qpdb (~qpdb@user/qpdb) (Ping timeout: 245 seconds)
[06:23:21] *** Quits: dmc (~dmc@archlinux/trusteduser/polyzen) (Quit: WeeChat 3.2)
[06:23:45] *** Joins: qpdb (~qpdb@user/qpdb)
[06:32:23] *** Joins: ferdna (~ferdna@user/ferdna)
[06:35:09] *** Quits: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net) (Read error: Connection reset by peer)
[06:35:37] *** Joins: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net)
[06:37:46] *** Joins: vicfred (~vicfred@user/vicfred)
[06:39:57] *** Joins: arcatech (~arcatech@user/arcatech)
[06:40:13] *** Joins: gast0n (~g4570n@user/gast0n)
[06:40:42] *** Quits: dsrt^ (~dsrt@wsip-98-188-244-188.mc.at.cox.net) (Ping timeout: 244 seconds)
[06:41:22] *** Joins: Stanley (~stanley@d162-156-50-3.bchsia.telus.net)
[06:42:14] *** Quits: thiago (~thiago@2601:1c0:4501:635c:8cfd:2032:b1b3:19da) (Ping timeout: 256 seconds)
[06:42:15] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 244 seconds)
[06:42:41] <Stanley> Hey all. Solo dev working on my own project. I made a bunch of commits and pushed them. Then I decided to revert, so I reverted back to the last commit before the currenet batch of changes. When I tried to git push it said that I was behind and had to git pull, but I didn't want to pull back the changes again, so I did a git push --force
[06:43:13] <Stanley> it went through fine but now my deployment system is asking who I am and telling me to run git config --global user.name "whatewver", did I break something>
[06:44:18] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:47:44] <Stanley> if I log into the server and run git status it says
[06:47:44] <Stanley> Your branch and 'origin/master' have diverged, and have 1 and 1 different commits each, respectively.
[06:51:13] *** gabin is now known as gabin__
[06:51:26] *** gabin__ is now known as gabin_
[06:59:49] <twb> Stanley: if you don't care about the version on the server you can "git push --force".
[07:00:04] <twb> Stanley: this is usually considered Bad Practice, but for a solo dev it's less important
[07:00:42] <twb> "which repos/branches can I push -f to" is a big part of multi-dev workflow design
[07:01:22] <twb> Stanley: you can also do something like "git diff main origin/main" to check how they differ before you push
[07:01:46] *** Joins: thiago (~thiago@2601:1c0:4501:635c:8cfd:2032:b1b3:19da)
[07:02:42] *** Joins: gabin (~gabin@user/gabin)
[07:03:36] *** Joins: psyc0ld (~psyc0ld@192.222.194.121)
[07:14:18] <Stanley> thanks1
[07:14:19] <Stanley> !
[07:17:59] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[07:19:48] *** Joins: arcatech (~arcatech@user/arcatech)
[07:20:33] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[07:25:34] *** Quits: gabin_ (~gabin@user/gabin) (Quit: gabin_)
[07:26:56] *** Joins: euouae (~euouae@user/euouae)
[07:27:18] *** Joins: kyshoc (~kyshoc@adsl-99-93-208-248.dsl.mtry01.sbcglobal.net)
[07:27:18] *** Quits: kyshoc (~kyshoc@adsl-99-93-208-248.dsl.mtry01.sbcglobal.net) (Changing host)
[07:27:18] *** Joins: kyshoc (~kyshoc@user/kyshoc)
[07:28:47] *** Quits: aidalgol (~aidalgol@user/aidalgol) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[07:28:49] *** Joins: cdown_ (~cdown@163.114.131.1)
[07:32:04] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 252 seconds)
[07:32:10] *** cdown_ is now known as cdown
[07:33:05] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[07:33:46] *** kevr is now known as scumbag
[07:33:54] *** Quits: jazzy (~jaziz@172.58.35.41) (Read error: Connection reset by peer)
[07:34:19] *** Joins: jazzy (~jaziz@172.58.35.41)
[07:35:45] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[07:36:11] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[07:37:24] *** Joins: arcatech (~arcatech@user/arcatech)
[07:40:12] *** Joins: christall (~christall@dyn-4-36.myactv.net)
[07:52:22] *** Joins: pulse (~pulse@user/pulse)
[08:01:40] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:03:10] *** Quits: mw_ (~mw@catv-86-101-13-145.catv.broadband.hu) (Ping timeout: 240 seconds)
[08:03:28] *** Quits: christall (~christall@dyn-4-36.myactv.net) (Ping timeout: 252 seconds)
[08:03:47] *** Joins: aidalgol (~aidalgol@user/aidalgol)
[08:07:08] *** Joins: mw_ (~mw@catv-86-101-13-145.catv.broadband.hu)
[08:12:16] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 252 seconds)
[08:13:47] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[08:17:19] *** Joins: eschwartz (~eschwartz@archlinux/bugwrangler/eschwartz)
[08:19:05] *** Quits: psyc0ld (~psyc0ld@192.222.194.121) (Remote host closed the connection)
[08:19:42] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:22:14] <eschwartz> is there a git plumbing command to list submodules by path? The only thing I can think of is parsing the output of git config --file .gitmodules -l
[08:23:19] <eschwartz> (and once there I can pass submodule paths to git diff-index --quiet to see if they have changed in any way)
[08:23:40] *** Joins: arunkumar413 (~arunkumar@45.117.66.2)
[08:26:33] *** Quits: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Remote host closed the connection)
[08:26:34] <eschwartz> the general goal here is to write a program that uses git archive HEAD to export a dist tarball of a project, and then merge it with git archive foreach submodule too, warning the user along the way if there are uncommitted changes
[08:26:49] *** Joins: gnoo (~gnoo@user/gnoo)
[08:27:35] *** Quits: gabin (~gabin@user/gabin) (Quit: "")
[08:28:12] *** Quits: gnoo (~gnoo@user/gnoo) (Client Quit)
[08:28:15] *** Joins: gabin (~gabin@user/gabin)
[08:28:47] *** Quits: gabin (~gabin@user/gabin) (Remote host closed the connection)
[08:29:41] *** Joins: gnoo (~gnoo@user/gnoo)
[08:32:49] *** Joins: gabin (~gabin@user/gabin)
[08:32:51] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[08:33:47] *** Quits: gast0n (~g4570n@user/gast0n) (Ping timeout: 245 seconds)
[08:34:05] *** Joins: gast0n (~g4570n@user/gast0n)
[08:34:18] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[08:35:38] <thiago> there is one: git submodule
[08:36:21] <thiago> as for that script, I have it somewhere
[08:36:23] <twb> git submodule | sort -k2 ?
[08:36:38] <twb> -k2, I suppose
[08:36:38] <thiago> remind me when I am in the office tomorrow (that is, in 12 hours) and I'll get it for you
[08:36:52] <thiago> sorting is unnecessary
[08:37:16] <twb> thiago: they asked for "by path"; I misread that as "sorted"
[08:37:46] <thiago> they don't need the paths. They need to run git archive in each submodule. So... what they really need is git submodule foreach
[08:37:49] <twb> eschwartz: SO MANY people want git archive + git submodule :/
[08:37:58] <twb> thiago: yeah I agree, I hadn't read properly
[08:38:07] *** Quits: gabin (~gabin@user/gabin) (Quit: "")
[08:38:17] <thiago> unfortunately, GNU tar isn't a format that is concatenable via pipes
[08:38:33] <twb> Actually I was wondering about that
[08:39:08] *** Joins: gabin (~gabin@user/gabin)
[08:39:19] <twb> https://gitlab.mister-muffin.de/josch/mmdebstrap/src/branch/main/tarfilter  isn't quite that
[08:40:33] <eschwartz> I'm one of the maintainers of the mesonbuild.com build system, written in python. The current janky implementation uses "git clone the project into a temporary directory, then init and update all submodules, then delete all files/directories beginning with .git* and tar up the results"
[08:40:41] <thiago> my solution is to create a .tar file and then use tar -A (--concatenate) into it multiple times
[08:40:49] <twb> And https://gitlab.mister-muffin.de/josch/mmdebstrap/src/branch/main/mmdebstrap#L5483
[08:40:54] <thiago> so, no pipe streaming
[08:41:06] <twb> thiago: yeah that's what I resorted to but it's not scalable because it needs temporary disk space
[08:41:12] <eschwartz> this has several flaws, including not supporting submodules with relative paths e.g. ../otherproject.git which should clone from the original github remoteor some such, and not supporting gitattributes
[08:41:22] <thiago> twb: indeed
[08:41:32] <thiago> I don't see a way out
[08:41:38] <eschwartz> I would like to replace that by git archive, but handling submodules is a complicated topic
[08:42:08] *** Joins: saroy (~Sandipan@45.249.73.249)
[08:42:11] <thiago> git archive --submodules should just DTRT
[08:42:15] <thiago> but that isn't implemented
[08:42:34] <twb> So #L5610 you can see it generates a dev.tar stream by hand from raw bits, THEN runs "tar" program to append additional flies
[08:42:53] <twb> This might be relying on the consumer being GNU tar compatible
[08:43:44] <twb> { tar c x; tar c y z; } | tar t  # definitely doesn't work
[08:44:29] <thiago> --format=pax
[08:44:43] <twb> { tar --format=pax -c x; tar --format=pax -c y z; } | tar --format=pax -t
[08:44:47] <twb> ...also doesn't DTRT
[08:45:03] <thiago> no, not concatenable
[08:45:07] <thiago> just tried that too
[08:45:26] <twb> I thought maybe mmdebstrap was writing the opening header itself and then telling tar "don't write an opening header"
[08:45:50] <eschwartz> it is acceptable to untar them all into a staging directory and tar the final results back up
[08:45:56] <twb> Maybe it's not writing a footer and then relying on GNU to write the footer.  It's doing a more limited case of a single catenation
[08:46:07] <twb> eschwartz: maybe for you, but I hate it :-)
[08:46:10] <thiago> cpio is also not concatenable. I've tried that too
[08:46:22] <twb> thiago: and git archive --format=zip is obviously not
[08:46:40] <thiago> zip is never a good idea
[08:47:03] <eschwartz> ... in fact, now that I think about it, for the specific use case of meson it will need to untar and re-tar anyway, because users can add custom post-process scripts that can modify the source tree before the final dist tarball is created
[08:47:07] <thiago> if you're producing content for windows, use 7z
[08:47:45] <eschwartz> git archive --subprojects would, of course, solve everyone's problems...
[08:48:04] <twb> As far as I'm concerned, the goal is to produce a source tarball without writing any intermediary streams to disk or to RAM
[08:48:19] <thiago> right
[08:48:24] <thiago> I don't know of a solution to that
[08:48:28] <twb> Have to start with "git archive" because otherwise you need an intermediary "git checkout"
[08:48:31] <eschwartz> that's a good goal, anything else one would want could be added on after that anyway
[08:48:37] <thiago> like I said, the best I could come up with was tar --concatenate
[08:48:41] <thiago> I can give you the script tomorrow
[08:48:42] <twb> Which means the streams begin life as either tar or zip
[08:49:27] <eschwartz> is `git submodule` a stable (plumbing-worthy) output format?
[08:49:36] <thiago> I think git get-tar-commit-id still works
[08:49:51] <thiago> eschwartz: like I said above, you actually want git submodule foreach
[08:50:02] <eschwartz> seems like the general format is '{plus-if-modified}{current_commit} {path} ({decorated_name})'
[08:50:27] <twb> eschwartz: TIL
[08:52:57] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[08:52:57] <thiago> git submodule foreach --recursive 'git archive --prefix=$sm_path $sha1 | tar --concatenaate output.tar -' or something like that
[08:53:24] <eschwartz> git submodule foreach git archive --prefix '$sm_path/' HEAD -o '$sm_path'.tar.gz if you don't want to rely on gnu tar, I suppose
[08:53:55] <twb> http://ix.io/3xHy
[08:54:08] <thiago> I always forget the / too
[08:54:12] <thiago> I wonder why it's necessary
[08:54:21] <thiago> it's not like I want my configure script name changed...
[08:55:13] *** Joins: christall (~christall@dyn-4-36.myactv.net)
[08:55:17] <eschwartz> --prefix should probably really be --directory-prefix, indeed
[08:55:32] <eschwartz> > $sha1 is the commit as recorded in the immediate superproject
[08:55:55] <eschwartz> hmm, so this is the one committed, not the one manually checked out and marking the index as dirty?
[08:56:07] <thiago> yes
[08:56:46] <thiago> once concatenated, xz -7
[08:57:49] <eschwartz> that conveniently solves the problem of not using HEAD and having to warn on uncommitted changes...
[08:57:54] <thiago> -9 if you don't mind the extra time, but in my experience -7 is the sweet spot
[08:58:25] *** Joins: dmc (~dmc@archlinux/trusteduser/polyzen)
[08:59:41] *** Quits: christall (~christall@dyn-4-36.myactv.net) (Ping timeout: 244 seconds)
[09:01:46] *** Quits: jazzy (~jaziz@172.58.35.41) (Ping timeout: 252 seconds)
[09:03:50] <twb> thiago: something along these lines  http://ix.io/3xHz
[09:03:56] <eschwartz> git submodule foreach only affects currently inited submodules, which, well, doesn't seem like something to feasibly work around. *logging a warning*, at least, is probably a good thing, but this gets back to "how to list submodules" and submodule status doesn't. I'm thinking git config --file .gitmodules might still be the only way to figure out a list of submodules for comparison to the ones that
[09:03:58] <eschwartz> are actually inited
[09:04:29] <twb> python and golang have streamable tar; perl doesn't
[09:05:21] <thiago> submodule status lists uninited modules
[09:05:43] *** Joins: homura (root@2605:6400:c847:1486::6841)
[09:06:23] <eschwartz> ... right, I'm dumb. foreach won't operate on them, but status will sure list them
[09:06:26] <twb> Yeah that's also a huge open problem in my mockup
[09:06:34] <twb> if it's a bare repo how do you access the submodules at all
[09:06:47] <twb> Really my #1 preferred answer here is "don't use submodules"
[09:07:14] <thiago> you need to know how to access a local clone of the repository
[09:07:16] <ikke> You clone it, and on that clone, you can work with submodules
[09:07:21] <thiago> .gitmodules only contains URLs
[09:07:23] <eschwartz> unfortunately not in a truly parseable format, since you cannot just split on "{sha1} {path}" due to the end containing git describe bits
[09:07:38] *** Quits: subopt (~subopt@2603-8081-2302-459a-88fa-805f-1e34-502d.res6.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:07:54] <eschwartz> but only sometimes!
[09:07:55] <thiago> yeah, don't use spaces in paths
[09:08:25] <eschwartz> I personally would not, but people can be crazy and when you try to make a build system for general consumption, someone will probably do it...
[09:08:53] <eschwartz> fortunately .gitmodules inherently refuses those clowns who skip spaces and jump straight to newline chars
[09:08:58] *** Quits: MrMagic (elrond@2607:f8f8:790:5::1:1) (Ping timeout: 240 seconds)
[09:09:35] *** Joins: aniruddha (uid340443@id-340443.charlton.irccloud.com)
[09:09:35] <thiago> it could get a -0 option
[09:10:30] <twb> Note that you also need to know which commit each submodule is pointing at, which is in the main repo's tree
[09:11:07] *** Quits: hbautista_ (~hbautista@187.171.69.204) (Ping timeout: 252 seconds)
[09:11:27] <eschwartz> the `submodule status` does list that
[09:11:34] <twb> ah k
[09:12:54] <eschwartz> $ git submodule
[09:12:56] <eschwartz>  fb2bd257f6089ed9890264bc4ef5ef96eaa2ef98 submod (heads/master)
[09:13:19] <eschwartz> $ git submodule deinit submod && git submodule
[09:13:21] <eschwartz> -fb2bd257f6089ed9890264bc4ef5ef96eaa2ef98 submod
[09:14:46] *** Joins: rnkn (~user@120.22.211.208)
[09:15:57] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 245 seconds)
[09:19:05] <thiago> I had noticed it before because all of mine are prefixed with +
[09:20:10] *** Quits: arunkumar413 (~arunkumar@45.117.66.2) (Ping timeout: 240 seconds)
[09:20:27] *** Joins: MrMagic (elrond@2607:f8f8:790:5::1:1)
[09:20:53] <twb> This is the point where I go "can git just get a --format=json for literally every command please"
[09:22:50] <ikke> https://lore.kernel.org/git/CACPiFCLzsiUjx-vm-dcd=0E8HezMWkErPyS==OQ7OhaXqR6CUA@mail.gmail.com/
[09:23:30] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[09:23:39] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[09:25:55] <rnkn> anyone know a good way I can keep a work tree on a separate device without a repo?
[09:26:36] <ikke> did you look at git worktree?
[09:26:45] <rnkn> I have a writing device that does not handle lots of files well (e.g. a git repo)
[09:26:49] *** Quits: MrMagic (elrond@2607:f8f8:790:5::1:1) (Quit: ZNC 1.8.2 - https://znc.in)
[09:26:55] <ikke> man git worktree
[09:26:55] <gitinfo> the git-worktree manpage is available at https://gitirc.eu/git-worktree.html
[09:26:56] <rnkn> ikke: as in git --work-tree=PATH ?
[09:27:33] *** Joins: MrMagic (elrond@2607:f8f8:790:5::1:1)
[09:28:10] <rnkn> ah yes, I did, so I'd like that workflow, but with the caveat that sometimes the device worktree and the local worktree could contain conflicting changes
[09:28:19] <thiago> you want a checkout without a .git dir?
[09:28:23] <thiago> that's a git archive
[09:28:53] <rnkn> I thought git archive was for creating tarball releases?
[09:29:00] <thiago> "device that does not handle lots of files well" does not sound like a sensible choice for a repository
[09:29:08] <thiago> git archive | tar -x
[09:29:48] <thiago> I am assuming you're not going to use git in the extracted sources
[09:30:09] <thiago> if you are, I really, really advise you to reconsider your choice of devices and filesystems
[09:31:19] <rnkn> thiago: correct, I want to avoid having a repo on the device
[09:31:33] <rnkn> I want a work tree on the device, while keeping the repo on my local machine
[09:31:57] <thiago> then use git archive and immediately extract onto the device
[09:32:16] <ikke> does the local repo require a worktree?
[09:32:17] <rnkn> yeah that's not a good way
[09:32:27] <thiago> no, git archive works on bare repositories
[09:32:29] <rnkn> ikke: preferably
[09:33:21] <ikke> then git-worktree is your best option
[09:33:27] <thiago> I think it's not
[09:33:39] <thiago> how are you accessing the device's storage from your work machine?
[09:33:45] <rnkn> ikke: okay cool
[09:35:04] <rnkn> I've been trying to build got (gameoftrees) on macOS as it's designed for separate work-tree and repo, but alas no luck
[09:35:55] <rnkn> uses a .got dir to track the work-tree's commit
[09:38:42] *** Quits: filePeter (~filePeter@user/filepeter) (Quit: leaving)
[09:40:25] <eschwartz> what does "keeping the repo on my local machine" mean?
[09:40:45] <rnkn> eschwartz: on my laptop
[09:41:04] <eschwartz> given the reference to gameoftrees supporting separate worktree and "repo", I'm assuming you actually do mean "worktree and --git-dir"
[09:41:15] <eschwartz> so... what is wrong with man git-worktree
[09:41:15] <gitinfo> the git-worktree manpage is available at https://gitirc.eu/git-worktree.html
[09:41:36] <eschwartz> it does exactly what you say this gameoftrees thing does
[09:41:59] <rnkn> eschwartz: not quite, it handles conflicts between multipe worktrees
[09:42:06] <eschwartz> also for clarity, please feel free to start saying "git-dir" instead of "repo"
[09:43:00] *** Joins: mei (~mei@user/mei)
[09:43:16] <eschwartz> what does "conflicts between multiple worktrees" *mean*, and what does it have to do with your initial question which was "I have a writing device that does not handle lots of files well" and "anyone know a good way I can keep a work tree on a separate device"
[09:43:18] <rnkn> e.g. I check out a worktree on the dumb device, alter file foo.txt, then also happen to edit foo.txt on my laptop's worktree
[09:43:30] *** Quits: mei (~mei@user/mei) (Client Quit)
[09:43:51] <eschwartz> then the dumb device and the laptop's live worktree are on different branches, so there is no conflict whatsoever
[09:44:04] <eschwartz> OR
[09:44:07] <thiago> git worktree can do that, so long as they have checked out different branches
[09:44:19] <thiago> however, mind what I said about git not being forgiving of dumb filesystems
[09:44:24] <eschwartz> you could have a bare clone on your laptop, and a worktree on the dumb device
[09:44:25] <thiago> I advised you to rethink
[09:44:27] <eschwartz> only one worktree
[09:45:11] <rnkn> eschwartz: yeah I was wondering that, I like the idea of this separate bare repo workflow
[09:46:25] <rnkn> but say I have that, how best do I deal with the foo.txt scenario?
[09:47:16] <rnkn> or did you mean to not have a worktree on the laptop?
[09:47:38] *** Quits: homura (root@2605:6400:c847:1486::6841) (Changing host)
[09:47:38] *** Joins: homura (root@user/homura)
[09:47:50] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! 👋)
[09:48:19] <mackerman> One .git  dir per device.  Zero or one worktrees per device.
[09:48:49] <mackerman> As they are different repos, remote workflows apply.  commit, push, fetch, merge.
[09:49:28] <rnkn> whoa wait, I have been confusing git-worktree with git --work-tree=PATH
[09:50:13] *** Joins: mei (~mei@user/mei)
[09:50:51] <eschwartz> incidentally, referring back to my earlier question about git archive + submodules
[09:51:01] <eschwartz> my current WIP rewrite https://paste.xinu.at/HcbgJs/ :D
[09:51:15] <twb> rnkn: in what way does the device suck?  Is it eMMC, or JFFS2, or what
[09:51:46] <eschwartz> so much less terrible already :D
[09:52:07] <rnkn> twb: seeing you outside of #emacs makes me uncomfortable
[09:52:40] * twb puts pants on
[09:53:02] <rnkn> twb: it's this: https://www.kingjim.co.jp/pomera/dm30/
[09:53:30] <rnkn> it gets noticably slower with git repos on board
[09:54:10] <twb> OK so yeah almost certainly eMMC
[09:54:18] <twb> i.e. basically an SD card solderde onto the mainboard
[09:55:00] <twb> rnkn: can you control what filesystem it uses?
[09:55:19] <rnkn> likely, but also I think the OS is only built to handle small text files of limited number
[09:55:27] *** Quits: durham (~durham@2620:10d:c090:400::5:529e) (Ping timeout: 245 seconds)
[09:55:29] <rnkn> nope, FAT32
[09:55:34] <twb> If so, try JFF- OK
[09:55:50] <twb> Yeah the problem there is simply that eMMC sucks and FAT32 doesn't work around that
[09:55:52] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 245 seconds)
[09:56:17] *** Joins: durham (~durham@2620:10d:c090:400::5:529e)
[09:56:58] <rnkn> it's okay, I am pretty sure git-worktree is the panacea I want
[09:59:56] <rnkn> thank you ikke and sorry for not fully investigating git-worktree (i.e. not --work-tree=)
[10:00:17] <twb> rnkn: that is a pretty cool unit
[10:00:58] <rnkn> twb: it does seem to be a cafe conversation starter
[10:01:40] <twb> I remember homeless people asking about my 7" EeePC
[10:01:49] <twb> That was back bfeore smartphones existed
[10:05:55] <thiago> I'm rewatching Leverage right now (2008, 2009) and it's funny to see flip phones and phones with physical keyboards
[10:09:01] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[10:15:39] *** Joins: tristan__ (~tristan@223.38.29.207)
[10:15:58] *** Quits: rnkn (~user@120.22.211.208) (Read error: Connection reset by peer)
[10:19:24] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[10:19:52] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[10:21:18] *** Joins: Samian (~Sami@2620:10d:c091:480::1:86be)
[10:22:37] *** Joins: madewokherd` (~urk@65-128-179-49.mpls.qwest.net)
[10:23:53] <Samian> Hello magnificent minds of #git. How can I search a repo to find the first commit to contain a specific string in a file?
[10:24:40] *** Quits: madewokherd (~urk@65-128-179-49.mpls.qwest.net) (Ping timeout: 240 seconds)
[10:24:41] <Samian> like the first commit that has in file x.py the string. "torch.ops.fb.split_embedding_codegen"
[10:24:42] <twb> Samian: git log --reverse -1 -G'Underpants.*Gnomes'
[10:24:57] *** Joins: rnkn (~user@120.22.211.208)
[10:25:05] <twb> Samian: not exactly what you asked for, but close
[10:25:06] *** Joins: LACampbell (~lewis@granite-phrase.bnr.la)
[10:26:20] <Samian> underpants?
[10:26:33] <bookworm> South Park?
[10:26:54] <LACampbell> I'm looking at a branch called "foo" on gitlab. gitlab tells me to do 'git checkout -b "foo" "origin/foo". git tells me "origin/foo" is not a commit
[10:27:40] <twb> bookworm: normally my example variables are fuck/duck/cluck/suck but since I'm not a regular here I was trying to be clean
[10:28:44] <LACampbell> I know git is just graph theory but we didn't cover "checkouts" at all in undergrad math
[10:30:27] *** Quits: gabin (~gabin@user/gabin) (Ping timeout: 245 seconds)
[10:30:39] <bookworm> you are in a clone from the gitlab repo?
[10:30:52] <twb> LACampbell: are you completely new to git?
[10:31:14] <bookworm> or in a newly initiated repo that isn't actually linked to the one in gitlab?
[10:31:29] <LACampbell> twb: been using it for 6 years or so. does it ever get any easier?
[10:31:36] <bookworm> yes
[10:31:59] <twb> LACampbell: OK, sorry, it sounded like a super noob question
[10:32:05] <LACampbell> I rm -rf'd the whole directory, cloned it again, and everything works
[10:32:14] <twb> LACampbell: ah OK never mind then
[10:32:17] <LACampbell> twb: yeah I suck at git hard. I don't know why. I just can't wrap my head around it
[10:32:25] <twb> LACampbell: I would have checked "git remote -v", and "git fetch --all"
[10:32:35] <twb> LACampbell: are you a haskell person?
[10:32:53] <twb> LACampbell: if so check out hstorage which is a straight port of git's content-oriented filesystem
[10:33:04] <LACampbell> I'm not bad at FP, haskell makes more sense than git
[10:33:08] <twb> LACampbell: that's how I first "got" git, coming from a background of RCS and darcs
[10:33:26] <LACampbell> I guess I don't understand 'checkout'
[10:33:30] <LACampbell> it does so many different things
[10:33:55] <bookworm> https://imgs.xkcd.com/comics/git.png
[10:33:57] *** Quits: euouae (~euouae@user/euouae) (Ping timeout: 256 seconds)
[10:34:07] <twb> checkout does stuff to the working tree.  checkout -b also tells "git branch" to do stuff.
[10:34:20] *** Quits: envex (~envex@cpe-173-91-189-33.neo.res.rr.com) (Remote host closed the connection)
[10:34:30] <LACampbell> is it normal to just delete your directory from time to time? is it kind of like old school windows where you need to defrag
[10:34:33] *** Joins: gabin (~gabin@user/gabin)
[10:34:34] <bookworm> you can use switch instead if that is any easier for you
[10:34:40] <bookworm> absolutely not
[10:34:43] *** Joins: envex (~envex@cpe-173-91-189-33.neo.res.rr.com)
[10:35:00] <twb> LACampbell: no, defrag is callde "git gc"; it runs automatically as needed
[10:35:23] <bookworm> that means you have no idea how to use git... you never need a fresh clone, you have the history right there
[10:35:28] <twb> I only "delete and start over" when I've done something deeply broken.
[10:35:45] <twb> I did it more often when I was using rcs, darcs, git, hg, and monotone at the same time
[10:35:54] <twb> Now I use only git it's easier to keep it in my head
[10:35:59] <eschwartz> https://xkcd.com/1597/
[10:36:03] <bookworm> reflog, and if you've messed that up what on earth did you do?
[10:36:14] <twb> Oh the other time I would "delete and start over" is when I didn't have enough RAM to "git gc"
[10:36:23] <bookworm> eschwartz: to late ;P scroll up
[10:36:24] <twb> So e.g. linux.git on a 1GB RAM system
[10:36:28] <bookworm> too*
[10:36:36] <eschwartz> aw, man...
[10:36:46] <LACampbell> why would the same command tell me "origin/foo" is not a commit, then after I fresh clone, do something else? Is it a commit or isn't it? and i wanted a branch not a commit. why is it telling me about a commit with the -b flag?
[10:37:03] <eschwartz> I was only looking at comments *after* the question
[10:37:25] <eschwartz> ( you *could* delete it periodically, but then you're the noob from the comic who has no clue how git works )
[10:38:00] <eschwartz> LACampbell: perhaps the remote is not called "origin"?
[10:38:17] <LACampbell> I used the exact same command, it had the exact same name both times
[10:38:32] <bookworm> LACampbell: you nuked it so now we'll never know. Alas checkout does many things so depending how you name stuff you might need to be more specific
[10:39:03] <bookworm> and tell git which of the two things that are applicable you actually mean
[10:39:17] <eschwartz> because you literally get that exact message when "origin/foo" is not a valid man gitrevisions
[10:39:17] <gitinfo> the gitrevisions manpage is available at https://gitirc.eu/gitrevisions.html
[10:39:19] <LACampbell> so what's the thing to do in that scenario then? "i have a super weird error". git status and go from there?
[10:39:23] <LACampbell> if you never need to nuke it
[10:40:01] <eschwartz> if "origin/foo" is a valid remote_name/branch_name then it *resolves* to a commit, and git checkout works
[10:40:05] <eschwartz> if not, then it doesn't
[10:40:30] <eschwartz> "when doesn't it resolve" -> generally, when you accidentally have the remote named something else
[10:40:57] <bookworm> status first, then depending on what you are doing look at it. git remote -v / git branch -r  stuff like that
[10:41:27] <LACampbell> so in got the concept of a branch is really just a single commit. there's no higher abstraction
[10:41:40] <eschwartz> if you git checkout -b "foo" <TAB> then tab completion should list all the valid possibilities and you can eyeball those for sanity
[10:41:45] <bookworm> ^
[10:42:00] <bookworm> a branch is not a commit, it points to one
[10:42:14] <Samian> if I search on google: "oss install" github
[10:42:17] <eschwartz> to be more accurate, a branch is not a commit, it's just a moving label pointing at a commit
[10:42:17] <Samian> a lot of stuff comes up
[10:42:22] <Samian> what does OSS mean?
[10:42:36] <eschwartz> the commit it points to is "the most recent commit on that branch"
[10:42:37] <bookworm> open source software?
[10:42:42] <LACampbell> so when you commit to a branch, you are moving that branches label to the thing you just comitted
[10:42:49] <eschwartz> right
[10:42:50] <bookworm> strange way to google though
[10:43:10] <LACampbell> so that's why checkout is used for branches and commits. because git reduces them down to being the same thing
[10:43:18] <LACampbell> ok, that kinda helps. I'll try tab completion next time
[10:43:22] <bookworm> and files
[10:43:30] <LACampbell> at least briefly, before I nuke it
[10:43:35] <thiago> well, kinda. They're also different enough that we now have git switch
[10:43:37] <eschwartz> any/all git revisions are either: 1) a commit, 2) a pointer to a commit, 3) an annotated tag blob
[10:43:37] <Samian> bookworm  aaahhh! open source software!
[10:43:38] <Samian> thanks!
[10:43:41] <bookworm> and other things :D again checkout is heavily overloaded
[10:43:49] <Samian> next q. What's the diff between HEAD and trunk?
[10:43:52] <eschwartz> and 3 doubles as pointing to a commit
[10:43:57] <Samian> are they synonyms?
[10:44:04] <eschwartz> HEAD is a special reference to the current branch
[10:44:09] <bookworm> Samian: there is no trunk in git vocabulary as such
[10:44:17] <eschwartz> trunk means nothing, though in some repos it might be a branch name
[10:44:27] <thiago> anyway, I good analogy for a branch is that it's a place where you stick post-it notes with the SHA-1 of the commit
[10:44:29] <bookworm> there's trunk based development, if that's what you mean
[10:44:49] <thiago> to commit is to write a new post-it note with the SHA-1
[10:45:02] <bookworm> thiago: wrong order, the branch is the sticky note and you attach it to wherever
[10:45:05] <thiago> to checkout a new branch is to move the pen that is pointing to the currently checked out one
[10:45:08] <eschwartz> trunk is the traditional name for other VCS software, i.e. subversion, to name the default branch
[10:45:16] <thiago> no, the commit is the sticky note because of the reflog
[10:45:21] <eschwartz> (not that subversion can really be said to have true branches)
[10:45:25] <thiago> you can inspect the notes below it
[10:45:44] <bookworm> you do you
[10:47:06] <eschwartz> thiago: I got you with "you post sticky notes to the branch", I got lost when you suggested the commit is, itself, the sticky note
[10:47:21] <thiago> not the commit itself
[10:47:26] <thiago> the branch is the note
[10:47:37] <eschwartz> > no, the commit is the sticky note
[10:47:42] <thiago> $ cat .git/refs/heads/main
[10:47:42] <thiago> b72cc01f793fc9ba474b38780e116de6011f1016
[10:48:05] <thiago> the analogy is not very good, of course
[10:48:17] <eschwartz> the reflog contains old sticky notes which used to be the topmost sticky note on the branch, fair enough
[10:48:33] <thiago> if you're sticking notes on your whiteboard, the branch is the section and you probably wrote the name on top
[10:48:34] <bookworm> doesn't work for me
[10:48:42] <thiago> the notes are entries in the reflog, with the topmost being the current
[10:49:28] <bookworm> in my world commits and branches are an actual tree, there's no white board
[10:49:46] <thiago> there's no tree in git
[10:49:58] <thiago> in git commits, I mean
[10:50:01] <bookworm> graph / tree 🤷‍♂️
[10:50:03] <thiago> thre is of course the tree object
[10:50:15] <thiago> sure, but that's a different discussion
[10:50:21] <thiago> yes, the commits form a DAG
[10:50:26] <bookworm> it's really not
[10:50:39] <thiago> but you don't need branches to do that. You could write the output of git commit-tree in post-it notes
[10:51:19] <bookworm> the nice thing with analogies is that they only need to make sense intuitively, how it actually works under the hood isn't that important as long as the behavior matches
[10:51:34] <thiago> right
[10:51:42] <thiago> I find my analogy is helpful when trying to explain the reflog
[10:51:43] <bookworm> and what works for you doesn't necessarily work for anyone else
[10:51:50] <thiago> which wasn't the topic here, so it may be unnecessarily complex
[10:52:00] <bookworm> I never use sticky notes the way you are suggesting
[10:52:18] <bookworm> a reflog is just a list of things you've done, a list
[10:52:29] <bookworm> there's no sticky notes involved
[10:52:39] <bookworm> conceptually at least
[10:52:49] *** Quits: sh4 (~sh4@user/sh4) (Ping timeout: 252 seconds)
[10:52:57] <bookworm> it's easily explained as simple "history"
[10:53:06] <bookworm> everyone can understand that concept
[10:53:29] <eschwartz> the real problem here is that physical sticky notes would be way too slow to implement an actually performant VCS
[10:53:31] <thiago> the reflog file is actually a queue, not a stack like the post it note analogy
[10:53:40] <thiago> entries are always added on top and are expired from the bottom
[10:54:40] <thiago> eschwartz: well, but would it be faster than git push over Avian Carriers?
[10:55:18] <thiago> I discovered today a colleague had never heard of April Fools RFCs...
[10:55:20] <eschwartz> birds can fly faster than people can find the right post-it note in a messy pile
[10:55:42] <bookworm> (or read my handwriting, future me included)
[10:55:43] <eschwartz> so it depends on how organized you are... :)
[10:56:21] <eschwartz> bookworm: oh dear, the latency of correcting your handwriting when avian roundtripping is required to send corrections
[10:56:24] <thiago> in my experience, people who use post-it notes aren't very organised
[10:56:43] <eschwartz> thiago: that was my leading assumption, yeah
[10:56:47] <thiago> they use them to keep themselves somewhat organised, with varying levels of success
[11:03:40] *** Quits: thiago (~thiago@2601:1c0:4501:635c:8cfd:2032:b1b3:19da) (Ping timeout: 240 seconds)
[11:06:18] *** Joins: Guest3026 (~Guest30@175.138.81.253)
[11:06:44] *** Quits: Guest3026 (~Guest30@175.138.81.253) (Client Quit)
[11:11:01] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 252 seconds)
[11:11:38] *** tristan__ is now known as gtristan
[11:19:29] *** Joins: christall (~christall@dyn-4-36.myactv.net)
[11:20:14] *** Joins: lesihctej (jetchisel@user/jetchisel)
[11:20:23] *** Quits: jetchisel (jetchisel@user/jetchisel) (Read error: Connection reset by peer)
[11:22:08] *** Joins: theoceaniscool (~theoceani@119.12.232.133)
[11:23:24] *** Joins: Hax0r (~Hax0r@51.252.26.81)
[11:24:26] *** Quits: christall (~christall@dyn-4-36.myactv.net) (Ping timeout: 256 seconds)
[11:26:06] *** Joins: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[11:30:32] *** Joins: rtur (~weechat@mail.rtur.org)
[11:30:33] *** Quits: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Ping timeout: 244 seconds)
[11:31:24] *** Joins: furrymcgee (~devuan@31.179.186.66)
[11:32:06] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 244 seconds)
[11:32:22] *** Joins: Gurkenglas (~Gurkengla@dslb-088-075-022-191.088.075.pools.vodafone-ip.de)
[11:35:46] *** Quits: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:42:50] *** Joins: srinidhi (~srinidhi@49.206.4.186)
[11:43:34] *** Quits: furrymcgee (~devuan@31.179.186.66) (Quit: Reconnecting)
[11:43:42] *** Joins: furrymcgee (~devuan@31.179.186.66)
[11:46:07] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[11:58:58] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 244 seconds)
[12:02:35] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[12:07:23] *** Joins: roadie (~user@2a02:8108:ec0:1427:252f:4598:e0c7:f561)
[12:09:46] *** Joins: christall (~christall@dyn-4-36.myactv.net)
[12:11:07] *** Joins: ishutin_ (~ishutin@92-249-150-146.static.digikabel.hu)
[12:14:33] *** Quits: ishutin (~ishutin@178-164-206-57.pool.digikabel.hu) (Ping timeout: 248 seconds)
[12:18:44] *** Quits: christall (~christall@dyn-4-36.myactv.net) (Ping timeout: 252 seconds)
[12:20:09] *** Quits: LiENUS (~quake@108-242-135-2.lightspeed.btrgla.sbcglobal.net) (Ping timeout: 244 seconds)
[12:31:54] *** Quits: V (~v@anomalous.eu) (Ping timeout: 250 seconds)
[12:35:44] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[12:37:21] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:39:40] *** Quits: durham (~durham@2620:10d:c090:400::5:529e) (Ping timeout: 240 seconds)
[12:40:59] *** Joins: feep[work] (~mathis@217.64.163.97)
[12:41:05] <feep[work]> hi, I have a weird situation.
[12:41:12] *** Joins: poebel (~poebel@user/poebel)
[12:41:19] <feep[work]> I have a repo that I'm trying to merge with another repo
[12:41:46] <feep[work]> I've copied all the files from the other repo into the current repo, made a commit, *then* did a merge. this is the wrong order and I'm trying to rebase them into one commit
[12:42:07] <feep[work]> is there any way to squash a merge while keeping it a merge? Ie. I'm trying to turn the previous commit into the "real merge"
[12:45:43] *** Parts: rnkn (~user@120.22.211.208) (ERC (IRC client for Emacs 28.0.50))
[12:46:56] *** Parts: ecraven (ecraven@user/nex) (Bye)
[12:51:35] <feep[work]> nm got it using lots of copying files elsewhere and copying them back
[12:51:45] <feep[work]> "easy merge"
[12:53:12] *** Parts: feep[work] (~mathis@217.64.163.97) ()
[13:01:46] *** Joins: oxymoron93 (~oxymoron9@212.62.38.106)
[13:03:57] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:04:53] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:08:10] *** Quits: LuKaRo_ (~LuKaRo@p57b15425.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[13:08:31] *** Quits: Spydar007 (~spydar007@user/spydar007) (Remote host closed the connection)
[13:08:53] *** Joins: Spydar007 (~spydar007@user/spydar007)
[13:11:06] *** Joins: LuKaRo (~LuKaRo@p4fc334cf.dip0.t-ipconnect.de)
[13:15:59] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:22:22] *** Quits: Samian (~Sami@2620:10d:c091:480::1:86be) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:23:01] *** Joins: Dev0n (~Dev0n@user/dev0n)
[13:23:35] *** Joins: Samian (~Sami@163.114.130.5)
[13:28:47] *** Quits: Samian (~Sami@163.114.130.5) (Ping timeout: 245 seconds)
[13:29:44] *** Parts: NeatNit (NeatNit@powered.by.jay2k1.com) ()
[13:30:56] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2)
[13:31:36] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Remote host closed the connection)
[13:31:59] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[13:32:12] *** Joins: xx (~xx@user/xx)
[13:34:34] *** Joins: cousteau (~cousteau@user/cousteau)
[13:35:11] *** Joins: keypusher (keypusher@user/keypusher)
[13:36:53] <cousteau> There was a way to have multiple branches "active" at the same time, in different folders, right?
[13:37:12] *** Quits: gtristan (~tristan@223.38.29.207) (Remote host closed the connection)
[13:37:30] *** Joins: gtristan (~tristan@223.38.29.207)
[13:38:05] <cousteau> I'm thinking of possible ways to perform this whole "use git to track a remote software project that isn't git" idea
[13:39:18] <cousteau> ("isn't git" used to be "is a thing called Perforce", but now I'm encountering a project that doesn't use any SCM)
[13:39:58] *** Joins: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net)
[13:42:27] <cousteau> My current situation is: there's a project that I needed to copy to a folder and modify a couple of files for it to work (mostly due to the use of absolute paths instead of relative).  Now it was modified, and I don't want to go over again modifying all the files, so I thought that git might be able to help me as a merging tool
[13:43:55] *** Joins: xa_ (~NesLs@176.54.204.222)
[13:47:36] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[13:50:44] *** Quits: roadie (~user@2a02:8108:ec0:1427:252f:4598:e0c7:f561) (Quit: ERC (IRC client for Emacs 25.3.50.1))
[13:51:26] *** Quits: xa_ (~NesLs@176.54.204.222) (Quit: Leaving)
[13:57:09] *** Joins: daoudr (~daoudr@178.197.197.112)
[13:58:59] *** Quits: momomo (~momomo@user/momomo) (Read error: Connection reset by peer)
[13:59:43] *** Joins: momomo (~momomo@user/momomo)
[13:59:52] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 252 seconds)
[13:59:52] *** Quits: austin987 (~null@100.42.98.196) (Ping timeout: 244 seconds)
[14:01:03] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Ping timeout: 276 seconds)
[14:02:46] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:03:03] *** Quits: oxymoron93 (~oxymoron9@212.62.38.106) (Ping timeout: 256 seconds)
[14:05:57] *** Quits: momomo (~momomo@user/momomo) (Ping timeout: 245 seconds)
[14:07:21] <avar> Is there no way to merge two branches and resolve & record a conflict with rerere that not only conflicts in file A, but requires an addition in file B only present in one of the two branches?
[14:07:59] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[14:08:37] *** Joins: momomo (~momomo@user/momomo)
[14:09:07] <avar> I don't think there is, have been trying to make it do it. I've got a merge where branch X has changed file A, but branch Y has moved the relevant function from file A to B. When I get a conflict I can just resolve/record the resolution to A, but changing the relevant thing in file B & doing "git merge --continue" with rerere.enabled=true & rerere.autoUpdate=true will just record the resolution to A, not B.
[14:10:10] *** Joins: Guest77 (~Guest77@2405:201:2012:e03c:3505:fd9e:1db7:5c7d)
[14:10:34] *** Quits: Guest77 (~Guest77@2405:201:2012:e03c:3505:fd9e:1db7:5c7d) (Client Quit)
[14:11:07] <cousteau> ...ah, "git worktree" is what I was looking for
[14:12:51] *** Joins: natrys (~natrys@user/natrys)
[14:13:26] *** Joins: austin987 (~null@cpe-173-174-99-192.austin.res.rr.com)
[14:15:56] *** Joins: christall (~christall@dyn-4-36.myactv.net)
[14:16:55] *** Joins: oxymoron93 (~oxymoron9@212.62.38.106)
[14:18:59] *** Quits: gtristan (~tristan@223.38.29.207) (Ping timeout: 244 seconds)
[14:27:15] *** Quits: AsenMx (~AsenMx@78.90.248.234) (Ping timeout: 244 seconds)
[14:30:01] *** Joins: dsrt^ (~dsrt@wsip-98-188-244-188.mc.at.cox.net)
[14:34:59] *** Joins: vysn (~vysn@user/vysn)
[14:35:04] *** Quits: audiocat (~audio@2603-8081-1801-3bb5-0258-933a-d6c3-bfc1.res6.spectrum.com) (Ping timeout: 252 seconds)
[14:35:11] *** Joins: Masklin_Gurder (~joel@89-233-200-127.cust.bredband2.com)
[14:36:36] *** Joins: lgc (~lgc@user/lgc)
[14:38:01] *** Quits: bin101 (~bin101@user/bin101) (Quit: goodbye)
[14:38:40] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[14:40:01] *** Quits: lesihctej (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[14:40:25] *** Joins: bin101 (~bin101@user/bin101)
[14:41:00] *** Joins: lgc_ (~lgc@user/lgc)
[14:42:37] *** Quits: daoudr (~daoudr@178.197.197.112) (Quit: Leaving)
[14:42:40] *** Quits: lgc (~lgc@user/lgc) (Ping timeout: 240 seconds)
[14:44:12] *** Quits: christall (~christall@dyn-4-36.myactv.net) (Ping timeout: 245 seconds)
[14:48:40] *** Lysergsaeure is now known as acidsys
[14:49:43] *** Joins: xa_ (~NesLs@176.54.248.155)
[14:53:58] *** Joins: jetchisel (jetchisel@user/jetchisel)
[14:57:23] *** Joins: reset (~reset@user/reset)
[15:03:44] *** Joins: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[15:07:36] *** Joins: AsenMx (~AsenMx@78.90.248.234)
[15:08:04] *** Quits: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Ping timeout: 252 seconds)
[15:12:57] *** Joins: Ecophobia (~Ecophobia@mobile-access-2e840c-136.dhcp.inet.fi)
[15:13:39] *** Quits: Hax0r (~Hax0r@51.252.26.81) (Remote host closed the connection)
[15:20:36] *** Joins: Hax0r (~Hax0r@51.252.26.81)
[15:20:40] *** Quits: Hax0r (~Hax0r@51.252.26.81) (Max SendQ exceeded)
[15:22:35] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[15:24:20] *** Joins: spuz (~spuz@213.129.88.97)
[15:24:51] <spuz> I would like to push a local git repo to a remote server via SSH. The repository does not yet exist on the remote server. How can I do this?
[15:25:30] <ikke> spuz: git does not support pushing to no-existing repositories, it needs to be created first
[15:25:45] <ikke> ssh <remote> 'git init repo.gi'
[15:25:56] <spuz> ok thanks
[15:29:15] *** Joins: rfuentess (~rfuentess@static-5-51-117-151.ftth.abo.bbox.fr)
[15:31:47] *** Quits: momomo (~momomo@user/momomo) (Quit: Textual IRC Client: www.textualapp.com)
[15:36:40] *** Quits: Lunatrius (~Lunatrius@77.38.92.228) (Ping timeout: 252 seconds)
[15:37:29] <cousteau> Curious; will that implicitly create a bare repo (since a dir name ending in .git was specified)?  or not unless you explicitly add --bare?
[15:38:01] <ikke> oh, no it won't
[15:38:04] <ikke> forgot --bare
[15:38:08] <cousteau> (I would guess if you do this you probably want the remote repo to be bare)
[15:38:23] *** Joins: goldfish (~goldfish@user/goldfish)
[15:38:29] <ikke> you are right
[15:38:58] <cousteau> I remember there were some restrictions when pushing to non bare repos but I don't remember them
[15:41:36] <spuz> I actually don't want a bare repo but I think I figured out the right configuration. I just ran "git init my-project" which created "myproject/.git" then "cd my-project; git config receive.denyCurrentBranch ignore". Then from my local machine, "git push --all my-remote". Then finally on the remote server "git reset --hard master"
[15:42:05] *** Quits: AnapodoPsalidaki (~AnapodoPs@2a02:587:2910:6a35:382b:6c9c:a727:95f9) (Quit: Leaving)
[15:46:19] *** Joins: Lunatrius (~Lunatrius@77.38.92.228)
[15:47:46] <cousteau> It'd be easier with a bare repo, though.  But if that works for you...
[15:47:51] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 244 seconds)
[15:48:57] <cousteau> That'll only be useful if you want the the file tree to be available in the remote computer.  Usually the remote computer just keeps a bare repo which other computers clone.
[15:49:36] *** Quits: xa_ (~NesLs@176.54.248.155) (Read error: Connection reset by peer)
[15:51:01] *** Quits: avar (avar@vm.nix.is) (Quit: leaving)
[15:51:10] *** Quits: lasr[m] (~lasrhalog@2001:470:69fc:105::c875) (Quit: You have been kicked for being idle)
[15:55:44] *** Joins: nyah (~nyah@bcdcb6e3.skybroadband.com)
[15:56:25] *** Joins: jwillikers (~jwilliker@ics141-1.icsincorporated.com)
[15:57:03] *** Joins: xa_ (~NesLs@176.54.248.155)
[15:57:13] *** Joins: keir (~keir@user/keir)
[15:59:17] *** Quits: Ecophobia (~Ecophobia@mobile-access-2e840c-136.dhcp.inet.fi) (Quit: WeeChat 2.8)
[16:02:30] *** Quits: wdouglass (~user@72.22.26.2) (Ping timeout: 250 seconds)
[16:03:29] <eschwartz> ikke, spuz: some servers are running software that auto-creates the repo for you on demand, though
[16:08:03] <spuz> cousteau: the remote server needs a local file tree. It's not a build server but something like that
[16:10:59] *** Quits: xa_ (~NesLs@176.54.248.155) (Quit: Leaving)
[16:12:25] *** Quits: AsenMx (~AsenMx@78.90.248.234) (Ping timeout: 252 seconds)
[16:12:47] *** Joins: AsenMx (~AsenMx@212-5-158-182.ip.btc-net.bg)
[16:14:39] *** Joins: jrofd (~test@185.192.69.211)
[16:15:18] *** Joins: Hax0r (~Hax0r@51.252.26.81)
[16:15:26] *** Joins: xa_ (~NesLs@176.54.248.155)
[16:16:19] *** Joins: dimi1947 (~dimi1947@2a02:1388:8c:182a:555e:42c8:636e:a3d)
[16:16:29] *** Quits: dimi1947 (~dimi1947@2a02:1388:8c:182a:555e:42c8:636e:a3d) (Read error: Connection reset by peer)
[16:19:38] *** Joins: AnapodoPsalidaki (~AnapodoPs@2a02:587:2910:6a35:4eb6:11ba:423b:5179)
[16:20:35] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[16:20:59] *** Quits: Hax0r (~Hax0r@51.252.26.81) (Quit: Leaving)
[16:28:13] *** Quits: jrofd (~test@185.192.69.211) (Remote host closed the connection)
[16:29:30] <cousteau> I see
[16:31:54] <cousteau> Then an "elegant" (actually quite ugly) approach would be to have a bare repo on the server AND a clone of that repo also on the server, so that you push to the server and then pull to the clone.  But that doesn't seem to provide any benefit over the solution you proposed (push to the server and then reset master)
[16:33:01] <cousteau> OK I'm gonna go crazy with this whole "track an external project so that it looks like it was made with git" idea
[16:35:31] *** Joins: roadie (~user@2a02:8108:ec0:1427:252f:4598:e0c7:f561)
[16:36:09] *** Joins: tristan__ (~tristan@223.38.30.100)
[16:41:10] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 240 seconds)
[16:41:22] *** Joins: christall (~christall@dyn-4-36.myactv.net)
[16:42:47] *** Quits: AsenMx (~AsenMx@212-5-158-182.ip.btc-net.bg) (Remote host closed the connection)
[16:43:14] *** Joins: AsenMx (~AsenMx@212-39-89-182.ip.btc-net.bg)
[16:44:23] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:9488:1a92:bf74:981a)
[16:44:23] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:9488:1a92:bf74:981a) (Changing host)
[16:44:23] *** Joins: skapata (~Skapata@user/skapata)
[16:44:27] *** Quits: AsenMx (~AsenMx@212-39-89-182.ip.btc-net.bg) (Max SendQ exceeded)
[16:44:55] *** Joins: AsenMx (~AsenMx@212-5-158-182.ip.btc-net.bg)
[16:45:16] *** Joins: stpa (~stpa@2001:67c:1560:8007::aac:c380)
[16:46:57] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[16:49:20] *** Quits: AsenMx (~AsenMx@212-5-158-182.ip.btc-net.bg) (Ping timeout: 244 seconds)
[16:49:45] *** Joins: AsenMx (~AsenMx@78.90.248.234)
[16:50:02] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[16:51:35] *** Quits: _Mocramis (~mocramis@dalaran.sceen.net) (Quit: WeeChat 2.3)
[16:51:57] *** Joins: jrofd (~test@cpc127052-lewi23-2-0-cust30.2-4.cable.virginm.net)
[16:54:27] *** Joins: ppang (~ppang@user/ppang)
[16:58:41] *** Joins: avar (avar@vm.nix.is)
[16:59:37] *** Joins: Bayes (~Bayes@ics177-97.icsincorporated.com)
[16:59:50] *** Quits: Bayes (~Bayes@ics177-97.icsincorporated.com) (Changing host)
[16:59:50] *** Joins: Bayes (~Bayes@user/bayes)
[17:01:17] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 245 seconds)
[17:02:06] *** Quits: tchan (~tchan@c-98-206-141-238.hsd1.il.comcast.net) (Read error: No route to host)
[17:02:18] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[17:02:47] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[17:03:31] *** Quits: lgc_ (~lgc@user/lgc) (Quit: WeeChat 3.2-dev)
[17:04:07] *** Joins: lgc (~lgc@user/lgc)
[17:04:39] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[17:07:58] *** Quits: christall (~christall@dyn-4-36.myactv.net) (Ping timeout: 252 seconds)
[17:11:13] *** Quits: LordLion (sid31081@user/ktllo) ()
[17:11:29] *** Joins: LordLion (sid31081@user/ktllo)
[17:17:17] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:18:42] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[17:21:10] *** Quits: roadie (~user@2a02:8108:ec0:1427:252f:4598:e0c7:f561) (Ping timeout: 240 seconds)
[17:21:51] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[17:23:05] *** Joins: momomo (~momomo@user/momomo)
[17:23:28] *** Joins: christall (~christall@dyn-4-36.myactv.net)
[17:25:51] *** Joins: hackinghorn (~hackingho@user/hackinghorn)
[17:26:12] *** Joins: jazzy2 (~jaziz@172.58.36.54)
[17:29:55] *** Quits: hwrd (sid64402@tooting.irccloud.com) ()
[17:30:10] *** Joins: hwrd (sid64402@id-64402.lymington.irccloud.com)
[17:31:21] *** Quits: Xenguy (~Xenguy@devuan/developer/Xenguy) (Quit: Leaving)
[17:32:43] *** Quits: stpa (~stpa@2001:67c:1560:8007::aac:c380) (Ping timeout: 252 seconds)
[17:33:37] *** Joins: stpa (~stpa@p200300c93f0c74001be6c90b4cf83531.dip0.t-ipconnect.de)
[17:33:46] *** Joins: stefanct (ameno@user/stefanct)
[17:38:03] *** stpa is now known as spampel
[17:39:52] <stefanct> afaict git diff replaces tabs with spaces (unlike format-patch for example). i can see why this might be done but is there a way around this?
[17:41:00] *** Quits: spampel (~stpa@p200300c93f0c74001be6c90b4cf83531.dip0.t-ipconnect.de) (Quit: Leaving)
[17:41:23] *** Joins: onizu (uid373383@id-373383.highgate.irccloud.com)
[17:43:34] *** Quits: gjnoonan_ (sid95422@id-95422.tooting.irccloud.com) ()
[17:43:54] *** Joins: gjnoonan_ (sid95422@id-95422.lymington.irccloud.com)
[17:44:37] *** Quits: keir (~keir@user/keir) (Ping timeout: 244 seconds)
[17:45:22] *** Quits: CalimeroTeknik (~calimero@user/calimeroteknik) (Remote host closed the connection)
[17:46:34] *** Joins: CalimeroTeknik (~calimero@185.13.36.50)
[17:47:06] *** Joins: humanface (~humanface@20014C4E1C473D00A4E67DD8C63A3FAF.unconfigured.pool.telekom.hu)
[17:48:15] *** Joins: keir (~keir@user/keir)
[17:50:43] *** Quits: CalimeroTeknik (~calimero@185.13.36.50) (Changing host)
[17:50:43] *** Joins: CalimeroTeknik (~calimero@user/calimeroteknik)
[17:50:49] *** Quits: frobnic (fb@b2b-130-180-11-14.unitymedia.biz) (Ping timeout: 252 seconds)
[17:52:23] *** Joins: frobnic (fb@b2b-130-180-11-14.unitymedia.biz)
[17:52:53] *** Quits: jazzy2 (~jaziz@172.58.36.54) (Ping timeout: 244 seconds)
[17:54:54] *** Joins: tchan (~tchan@c-98-206-141-238.hsd1.il.comcast.net)
[17:55:27] *** Quits: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net) (Quit: Ping timeout (120 seconds))
[17:56:20] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[17:57:57] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:01:51] *** Joins: computeiro (~Wender@189.37.65.197)
[18:01:53] *** Quits: keir (~keir@user/keir) (Quit: keir)
[18:02:54] *** Joins: keir (~keir@user/keir)
[18:09:28] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Remote host closed the connection)
[18:10:08] *** Quits: hsiktas (sid224847@tooting.irccloud.com) ()
[18:10:23] *** Joins: hsiktas (sid224847@id-224847.lymington.irccloud.com)
[18:12:05] *** Joins: alfredb (CUcMowgLJK@84-72-75-16.dclient.hispeed.ch)
[18:17:44] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[18:20:37] *** Joins: roadie (~user@2a02:8108:ec0:1427:252f:4598:e0c7:f561)
[18:21:18] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 244 seconds)
[18:22:21] <cousteau> stefanct: you sure that's not your terminal emulator doing funny things?
[18:22:36] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[18:22:53] *** Quits: keir (~keir@user/keir) (Quit: keir)
[18:23:05] *** Joins: keir (~keir@user/keir)
[18:23:14] <ikke> must be, if you do git diff | base64, the tabs are preserved
[18:23:47] *** Quits: oxymoron93 (~oxymoron9@212.62.38.106) (Quit: Client closed)
[18:24:32] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:25:33] *** Quits: humanface (~humanface@20014C4E1C473D00A4E67DD8C63A3FAF.unconfigured.pool.telekom.hu) (Quit: Client closed)
[18:26:02] *** Quits: lgc (~lgc@user/lgc) (Quit: WeeChat 3.2-dev)
[18:26:08] <cousteau> I was thinking git diff | hd, or git diff >patch.diff
[18:26:25] *** Joins: lgc (~lgc@user/lgc)
[18:27:24] <cousteau> OK I can confirm that git diff >git.diff uses TABS, and doesn't convert them to spaces
[18:27:44] *** Quits: roadie (~user@2a02:8108:ec0:1427:252f:4598:e0c7:f561) (Ping timeout: 256 seconds)
[18:28:01] <ikke> The patches would be corrupt otherwise
[18:28:24] <cousteau> BUT, if I copy-paste the output of git diff from the git bash (Windows) to a text editor, I do get spaces.  But that's the terminal emulator, not git
[18:28:39] <ikke> correct
[18:29:10] <cousteau> Well, git does some magic with CRLF, maybe there's an option to do it with tabs as well and they accidentally toggled it on
[18:29:25] <cousteau> But yeah it shouldn't happen
[18:30:46] *** Quits: ppang (~ppang@user/ppang) (Quit: Leaving)
[18:32:33] *** Joins: gnit (~gnit@60-57-112-123f1.osk2.eonet.ne.jp)
[18:36:06] *** Joins: humanface (~humanface@20014C4E1C473D00A4E67DD8C63A3FAF.dsl.pool.telekom.hu)
[18:36:17] <stefanct> it's the pager apparently
[18:36:29] <stefanct> (less in my case)
[18:36:48] <cousteau> Oooh
[18:36:50] <ikke> aaaaah
[18:37:05] <ikke> so git --no-pager diff should have tabs then
[18:37:29] <ikke> or git diff | cat
[18:38:21] <cousteau> Hmmm nope, I tried `git diff | cat` and still got spaces when I copied from the terminal.  Or it might be both.
[18:39:13] <stefanct> cat is fine too for me
[18:39:53] *** Quits: keir (~keir@user/keir) (Quit: keir)
[18:40:25] *** Joins: keir (~keir@user/keir)
[18:40:43] <cousteau> So the terminal emulator I'm using ALSO replaces tabs with spaces, apparently
[18:40:52] *** Quits: keir (~keir@user/keir) (Client Quit)
[18:41:02] *** Joins: wender (~Wender@179.104.244.105)
[18:41:02] *** Joins: Torr (~Torr@user/torr)
[18:41:17] *** Joins: keir (~keir@user/keir)
[18:41:47] <cousteau> printf 'a\tb\n' # also prints spaces
[18:42:00] *** Joins: ajfriesen0 (~ajfriesen@cable-89-1-117-98.nc.de)
[18:42:05] *** Quits: ajfriesen (~ajfriesen@cable-89-1-117-98.nc.de) (Read error: Connection reset by peer)
[18:42:05] *** ajfriesen0 is now known as ajfriesen
[18:42:51] <cousteau> But `printf 'a\tb\n' | wc -c` says 4 so it should be fine.
[18:43:13] <cousteau> Moral of the story: don't copy from the terminal.
[18:43:40] *** Quits: computeiro (~Wender@189.37.65.197) (Ping timeout: 252 seconds)
[18:44:16] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[18:45:27] <cousteau> OK, I think I've figured out the proper way to "fake a proper use of git merge"
[18:47:29] <cousteau> Ideal situation: someone goes into the git repo I'm using, pushes their changes from the "official external repo" on top of master (which contains an older version of the external repo), then merges my devel branch into master, and copies the result to the external repo
[18:47:32] *** Quits: keir (~keir@user/keir) (Quit: keir)
[18:47:51] *** Joins: keir (~keir@user/keir)
[18:49:19] <cousteau> Actual situation: someone goes into the git repo I'm using, copies a bunch of files I modified into the external repo, add some changes of their own, and then expect my git to continue making sense.
[18:50:58] <mehwork> trying to pull changes made on a remote branch with `git pull origin feature/ticket-431` but getting: `:fatal: Not possible to fast-forward, aborting`. Any idea why?
[18:51:40] <cousteau> Possible solution: if I want my git to look as if "ideal situation" happened, I need to (1) merge the commits they should have merged into master, and (2) replace my repo with the content of the external one.
[18:51:42] <mehwork> do i have to just add --no-ff
[18:52:42] <stefanct> my moral is quite different...  git --no-pager diff ftw
[18:54:27] <cousteau> mehwork: maybe someone pushed to that branch and you need to merge manually
[18:54:30] *** Quits: mteo (francis@user/francis) (Remote host closed the connection)
[18:55:49] <mehwork> cousteau: git pull --rebase ?
[18:57:12] <mehwork> First, rewinding head to replay your work on top of it..
[18:57:15] <cousteau> I'd do a fetch and a merge, just in case
[18:57:38] <mehwork> isn't that what git pull does
[18:58:17] *** Quits: gnit (~gnit@60-57-112-123f1.osk2.eonet.ne.jp) (Ping timeout: 256 seconds)
[18:58:31] <cousteau> That's what I thought, but I would have sworn that git fetch will freely move remote branches without complaining
[18:59:19] <cousteau> Apparently you get that error if someone rewinds the branch on the server
[19:03:40] *** Quits: Lunatrius (~Lunatrius@77.38.92.228) (Ping timeout: 240 seconds)
[19:03:42] <cousteau> Hmm nope, I tried to do that with two local repos and it did the merge right away
[19:04:35] *** Joins: Lunatrius (~Lunatrius@77.38.92.228)
[19:05:16] *** Joins: sh4rm4^bnc (~sh4rm4@sabo.xyz)
[19:05:27] *** Joins: Tobbi_ (~Thunderbi@212.23.159.130)
[19:06:45] *** sh4rm4^bnc is now known as sh4
[19:07:44] *** Quits: sh4 (~sh4rm4@sabo.xyz) (Changing host)
[19:07:44] *** Joins: sh4 (~sh4rm4@user/sh4)
[19:08:38] <cousteau> mehwork: which git version do you have?  Maybe this is something that happened in older versions
[19:09:13] <cousteau> (if someone has a better idea of what is happening feel free to suggest)
[19:10:25] <homura> gitgud.io
[19:11:08] *** Joins: subopt (~subopt@2603-8081-2302-459a-88fa-805f-1e34-502d.res6.spectrum.com)
[19:11:35] *** Joins: thiago (~thiago@2601:1c0:4501:635c:8cfd:2032:b1b3:19da)
[19:17:57] *** Parts: homura (root@user/homura) ()
[19:20:26] *** Quits: sh4 (~sh4rm4@user/sh4) (Quit: ZNC - http://znc.in)
[19:20:38] *** Joins: sh4 (~sh4@sabo.xyz)
[19:21:04] *** Quits: sh4 (~sh4@sabo.xyz) (Changing host)
[19:21:04] *** Joins: sh4 (~sh4@user/sh4)
[19:21:31] *** Joins: mteo (francis@user/francis)
[19:23:53] *** Quits: poebel (~poebel@user/poebel) (Quit: Leaving)
[19:24:16] *** Joins: Tobbi_1 (~Thunderbi@62.214.69.130)
[19:25:32] *** Quits: Tobbi_ (~Thunderbi@212.23.159.130) (Ping timeout: 256 seconds)
[19:25:32] *** Tobbi_1 is now known as Tobbi_
[19:29:31] *** Quits: keir (~keir@user/keir) (Quit: keir)
[19:31:10] *** Quits: Pent (sid313808@tooting.irccloud.com) ()
[19:31:30] *** Joins: Pent (sid313808@id-313808.lymington.irccloud.com)
[19:32:17] *** Parts: anddam (~anddam@user/anddam) (WeeChat 3.2)
[19:32:41] *** Joins: junktext (~junktext@109.201.152.173)
[19:32:44] *** Joins: WishBoy (~WishBoy@user/wishboy)
[19:32:47] *** Parts: WishBoy (~WishBoy@user/wishboy) ()
[19:33:00] *** Joins: lantech19446 (sid237550@id-237550.helmsley.irccloud.com)
[19:33:39] <lantech19446> hey everyone, I just signed up for github and created my first repo and now I want to push all my working files to my repo, can I use git add . ?
[19:34:07] *** Joins: WishBoy (~WishBoy@user/wishboy)
[19:34:14] *** Parts: WishBoy (~WishBoy@user/wishboy) ()
[19:34:38] *** Parts: stefanct (ameno@user/stefanct) (Leaving)
[19:36:23] *** Joins: roadie (~user@2a02:8108:ec0:1427:252f:4598:e0c7:f561)
[19:38:40] *** Quits: tristan__ (~tristan@223.38.30.100) (Ping timeout: 240 seconds)
[19:41:36] *** Quits: cyberpear (uid364019@fedora/cyberpear) ()
[19:41:51] *** Joins: cyberpear (uid364019@fedora/cyberpear)
[19:43:04] *** Quits: tchan (~tchan@c-98-206-141-238.hsd1.il.comcast.net) (Ping timeout: 252 seconds)
[19:43:52] *** Joins: tchan (~tchan@c-98-206-141-238.hsd1.il.comcast.net)
[19:44:17] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[19:44:18] *** Joins: Guest25 (~Guest25@45.116.114.125)
[19:44:24] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.2)
[19:47:13] *** Guest25 is now known as samuelrajan747
[19:47:32] <mehwork> cousteau: 2.24.3
[19:48:07] *** Joins: ChmEarl (~chmearl@user/chmearl)
[19:51:05] *** Quits: hackinghorn (~hackingho@user/hackinghorn) (Quit: Leaving)
[19:53:40] *** Joins: durham (~durham@2620:10d:c090:400::5:b501)
[19:56:20] *** Quits: alfredb (CUcMowgLJK@84-72-75-16.dclient.hispeed.ch) (Quit: leaving)
[20:01:33] *** Joins: neltraus_ (~neltraus@supernova.neltraus.de)
[20:02:19] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 252 seconds)
[20:02:47] *** Quits: starfarer (~quassel@v22017084888652747.happysrv.de) (Ping timeout: 240 seconds)
[20:02:47] *** Quits: neltraus (~neltraus@supernova.neltraus.de) (Ping timeout: 240 seconds)
[20:02:57] *** Joins: jinsun (~quassel@user/jinsun)
[20:03:53] *** Quits: push-f (~martin@push-f.com) (Ping timeout: 248 seconds)
[20:04:02] *** Quits: ajfriesen (~ajfriesen@cable-89-1-117-98.nc.de) (Ping timeout: 252 seconds)
[20:04:37] *** Joins: push-f (~martin@push-f.com)
[20:05:06] *** Joins: ajfriesen (~ajfriesen@cable-89-1-117-98.nc.de)
[20:05:37] <j416> lantech19446: that's a good start indeed.
[20:05:55] <j416> lantech19446: commit would be next, and then github will have instructions on how to add a remote and push your commit.
[20:05:58] <lantech19446> I just got it done, I found an article online that walked me through it
[20:06:02] <j416> nice.
[20:06:05] *** Joins: starfarer (~quassel@v22017084888652747.happysrv.de)
[20:06:09] <lantech19446> the hardest part was the damn PAT they're forcing you to use now
[20:06:15] <j416> what's that
[20:06:23] <lantech19446> personal access token
[20:06:31] <j416> use ssh, make your life simpler™
[20:06:59] <lantech19446> I'm ssh into my server but I don't even know how to connect to my repo via ssh
[20:07:06] <j416> ssh to github.
[20:07:55] <lantech19446> ok i'll have to look up info for it because i just cloned the repo to my computer so I can work in my IDE and then push it so it wouldn't be very hard to do now
[20:08:00] <j416> you'll find instructions on github on how to set it up. tl;dr create a keypair if you don't have one already, give github your public key, then use the ssh URL foryour repo instead of https.
[20:08:11] *** Quits: pupskuchen (~pupskuche@user/pupskuchen) (Quit: ZNC 1.7.5 - https://znc.in)
[20:08:36] <lantech19446> I thought they said I had to do it over https now
[20:08:45] <j416> if they did, they are lying
[20:08:51] <lantech19446> ok
[20:09:20] <j416> unless of course "they" is your company that has a firewall or such that blocks ssh.
[20:09:22] <lantech19446> I have to say this is some really amazing technology I mean seconds to rebuild my entire site and it works
[20:09:27] *** Joins: pupskuchen (~pupskuche@user/pupskuchen)
[20:09:40] <lantech19446> j416: I'm the one who would be configuring the firewall anyway lol
[20:09:44] <j416> :)
[20:10:01] <lantech19446> I'm actually a sys admin learning html /css/js to help out with our website since the guy who was helping left
[20:10:15] <j416> sounds like great fun
[20:10:32] <lantech19446> I'm loving it I think I actually want to transition to webdev next
[20:10:41] <j416> haha. good for you.
[20:10:45] <lantech19446> would you like to see the site I've built?
[20:10:50] <j416> nope
[20:10:52] <j416> (sorry)
[20:11:00] <lantech19446> it's ok you aren't obligated too
[20:11:20] *** Joins: ajfriesen9 (~ajfriesen@cable-89-1-117-98.nc.de)
[20:11:53] *** Quits: g2anj (~v@58.227.244.56) (Ping timeout: 248 seconds)
[20:12:36] <lantech19446> one more question though, once i update a file on my computer and push it to the repo how do I update the files on the server, I don't have to reclone every time i assume
[20:12:45] *** Joins: g2anj (~v@58.227.244.56)
[20:13:23] <j416> !deploy
[20:13:23] <gitinfo> Git is not a deployment tool, but you can build one around it (in simple environments) or use it as an object store(for complex ones). Here are some options/ideas to get you started: http://gitolite.com/deploy.html
[20:13:25] *** Quits: ajfriesen (~ajfriesen@cable-89-1-117-98.nc.de) (Ping timeout: 244 seconds)
[20:13:25] *** ajfriesen9 is now known as ajfriesen
[20:14:14] <lantech19446> there must be some functionality to keep the files in sync though so that when i start working from another location i'm working on the newest files
[20:14:34] <j416> man git-push
[20:14:35] <gitinfo> the git-push manpage is available at https://gitirc.eu/git-push.html
[20:14:36] <j416> man git-fetch
[20:14:36] <gitinfo> the git-fetch manpage is available at https://gitirc.eu/git-fetch.html
[20:15:09] *** Quits: humanface (~humanface@20014C4E1C473D00A4E67DD8C63A3FAF.dsl.pool.telekom.hu) (Quit: Client closed)
[20:15:41] <j416> you would typically push to a bare repo (such as one on github or your own host). You can fetch from both bare and non-bare (ones that have work dirs) repos.
[20:15:59] <j416> a bare repo is just the .git directory.
[20:16:59] <lantech19446> yea it looks like fetch is what I want I'm gonna test it in a moment
[20:17:17] <j416> !book explains in more detail
[20:17:17] <gitinfo> There are several good books available about git; 'Pro Git' is probably the best: https://git-scm.com/book but also look at !bottomup !cs !gcs !designers !gitt !vcbe and !parable
[20:18:40] <lantech19446> ok cool
[20:19:41] <lantech19446> huh I just ran into something you probably know the answer too I added a directory to my repo on my computer and did git add test and then git status and it tells me there's nothing to commit, does it automatically take the directory with the files or something?
[20:20:05] <imMute> lantech19446: is test/ empty?
[20:20:10] <lantech19446> yes
[20:20:34] <imMute> lantech19446: git tracks files not directories.  so you can have empty directories stored in git.  a common work around is putting a .gitkeep file in the folder.
[20:20:48] <lantech19446> ok
[20:20:50] <imMute> note that ".gitkeep" is not special - any name will work - it's just a common name used for this purpose
[20:23:03] <lantech19446> ok so that worked and I did a commit but it's not showing up in my repo so I'm assuming I have to do git push after commit?
[20:23:14] *** Quits: rfuentess (~rfuentess@static-5-51-117-151.ftth.abo.bbox.fr) (Remote host closed the connection)
[20:23:33] <imMute> yes, commit is local.  you need to push to share it elsewhere
[20:24:38] <lantech19446> ok cool, i'm going to remember this it's going to become very useful to me
[20:25:31] <lantech19446> I wonder how it'll deal with our bigger site, the guy who built it used a ton of symlinks and it's always been a bitch to back up or transfer
[20:29:41] <lantech19446> ok it seems like I actually wanted git pull it might be replacing all the files i'm not sure but it updates the repo which is all i really need
[20:30:36] <cousteau> mehwork: that should be new enough
[20:39:48] *** Joins: Samian (~Sami@163.114.130.5)
[20:41:40] *** Quits: roadie (~user@2a02:8108:ec0:1427:252f:4598:e0c7:f561) (Ping timeout: 240 seconds)
[20:43:48] *** Joins: roadie (~user@2a02:8108:ec0:1427:252f:4598:e0c7:f561)
[20:44:40] *** Quits: Samian (~Sami@163.114.130.5) (Ping timeout: 240 seconds)
[20:49:10] *** Quits: saroy (~Sandipan@45.249.73.249) (Quit: Leaving)
[20:54:45] *** Quits: Dotz0cat (~Dotz0cat@h168.196.117.75.dynamic.ip.windstream.net) (Ping timeout: 244 seconds)
[20:58:28] *** Quits: spuz (~spuz@213.129.88.97) (Quit: Client closed)
[21:01:40] *** Quits: bdeferme1 (~bdeferme@i.ctrl86.com) (Read error: Connection reset by peer)
[21:01:58] *** Joins: bdeferme1 (~bdeferme@i.ctrl86.com)
[21:03:32] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:03:41] *** Quits: christall (~christall@dyn-4-36.myactv.net) (Remote host closed the connection)
[21:04:20] *** Joins: christall (~christall@dyn-4-36.myactv.net)
[21:04:58] *** Joins: guest8765 (~Thunderbi@27.58.6.230)
[21:06:16] *** Parts: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) ()
[21:06:36] <guest8765> came here to ask for public bug tracker to search for some issues.. found it in the topic desc! (:
[21:06:54] *** Quits: christall (~christall@dyn-4-36.myactv.net) (Remote host closed the connection)
[21:08:58] *** Joins: christall (~christall@dyn-4-36.myactv.net)
[21:13:21] *** Quits: christall (~christall@dyn-4-36.myactv.net) (Ping timeout: 244 seconds)
[21:15:29] *** Parts: guest8765 (~Thunderbi@27.58.6.230) ()
[21:19:38] <lantech19446> ok I successfully pushed my 2nd site to a new repo everything succeeded but when I tried to clone it to my desktop i get clone succeeded but checkout failed and when i run git status it has deleted every single file even though it only objected to 1 or 2 so I just downloaded the zip and i'm extracting it to my repo but will this get me around my issue?
[21:26:19] *** Quits: wgrant (~wgrant@ubuntu/member/wgrant) (Ping timeout: 250 seconds)
[21:26:31] *** Joins: humanface (~humanface@20014C4E1C473D00A4E67DD8C63A3FAF.dsl.pool.telekom.hu)
[21:27:18] *** Joins: roadie` (~user@2a02:8108:ec0:1427:4590:7bfa:9a55:881c)
[21:28:12] *** Joins: wgrant (~wgrant@ubuntu/member/wgrant)
[21:28:59] <cousteau> lantech19446: shot in the dark: are you on Windows?  Maybe the files have forbidden names
[21:29:45] <mackerman> lantech19446: Sure,  "git archive" or similar extraction of one version of the tree is useful.  Especially for deployment or release workflows.
[21:29:51] <cousteau> (Also, do you have enough space on your drive?  You wouldn't believe how often that's caused trouble for me...)
[21:30:34] <cousteau> Does it mention WHY checkout failed?
[21:30:35] <lantech19446> cousteau: I am on windows not a forbidden name it's chucky.jpg and chucky.png and I have 3Tib free
[21:30:46] *** Quits: roadie (~user@2a02:8108:ec0:1427:252f:4598:e0c7:f561) (Ping timeout: 256 seconds)
[21:30:47] *** Joins: christall (~christall@dyn-4-36.myactv.net)
[21:30:54] <lantech19446> it's trying to say invalid path for chucky.jpg
[21:30:56] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[21:31:14] <cousteau> OK, assuming neither of those files are more than 3 TiB in size...
[21:31:26] <lantech19446> they're like Kib
[21:31:30] <mackerman> Did you not clone into a new directory?  clone is for grabbing the first copy of a remote.
[21:31:41] <lantech19446> I did
[21:31:46] * cousteau once had trouble with files named "aux.whatever"
[21:31:58] <lantech19446> yea i saw that when i was googling around for the error
[21:32:02] *** Joins: goldfish (~goldfish@user/goldfish)
[21:32:10] <cousteau> Apparently aux.c is not a valid file name on Windows.
[21:33:29] *** Joins: meator (~meator@user/meator)
[21:33:40] <cousteau> What's the path for this chucky.jpg?  Is it on the root of the repo or on some subfolder?
[21:34:12] <lantech19446> images\chucky.jpg
[21:35:11] *** Joins: Samian (~Sami@163.114.130.5)
[21:35:55] <cousteau> What git are you using?  The one that comes with a "git bash" console?  Or some fancy program with git built into it?
[21:35:55] <lantech19446> great and now that i downloaded the repo it wants to add all of them instead of just the new file. I've gotta get this working
[21:36:06] <lantech19446> I'm just using git on powershell
[21:36:15] <lantech19446> I could try it on git bash i'm familiar with bash
[21:36:31] <cousteau> I recommend using git bash
[21:36:57] <lantech19446> any chance of it getting me past this issue?
[21:37:38] <cousteau> Although I would expect it to work in powershell if git supports that
[21:37:53] <lantech19446> it was one of their recommended ways
[21:38:03] *** Quits: goldfish (~goldfish@user/goldfish) (Quit: Leaving)
[21:38:51] <cousteau> Honestly I have no idea, it's just that that's how I use it on Windows, and I've noticed that drifting away from bash tends to cause trouble
[21:39:10] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[21:39:27] <lantech19446> same error and git restore fails too
[21:39:36] <cousteau> Huh
[21:40:29] *** Joins: Betal (~Betal@user/betal)
[21:40:31] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:40:50] *** Quits: ninjin (~ninjin@user/ninjin) (Remote host closed the connection)
[21:41:09] *** Joins: ninjin (~ninjin@user/ninjin)
[21:41:14] <cousteau> Honestly I don't think I can help here
[21:41:24] <lantech19446> error: invalid path 'images/chucky.jpg?_subject_uid=7888084&w=AAAfmveVu2oZofBbzRKou625rHOAD9ztRtM1Jyrs4Xh3Bw'
[21:41:24] <lantech19446> fatal: unable to checkout working tree
[21:41:46] <cousteau> Oh
[21:42:37] <cousteau> Yeah that file isn't called "chucky.jpg" but "chucky.jpg?_subject_uid=blahblah"
[21:42:53] <lantech19446> I wonder if it's even used on the site
[21:42:55] <cousteau> File names can't contain "?" on Windows
[21:44:26] <cousteau> That looks like someone downloaded an image from a site using some script and the downloaded file name includes the '?xxx=yyy&zzz=ttt' part of the URL
[21:44:42] <cousteau> You won't be able to have such a file in your PC
[21:44:45] <lantech19446> they don't even seem to be legitimate files on the server i'm not sure what the hell they're used for
[21:46:04] <cousteau> Your best bet would be to rename those files from Linux or similar, maybe amend the commit if possible.  Try to figure out why those files are there, maybe you can even delete them
[21:46:15] <lantech19446> official word from my boss we don't need them anymore
[21:46:53] <lantech19446> and if for some reason he decides we do i'll still have the first version on github because the push succeeded from the server
[21:47:27] <cousteau> If they were accidentally added you might even want to take them out of git's history by amending/rebasing commits
[21:48:01] <cousteau> Or just delete them (using an OS/platform that supports those files) and commit
[21:48:14] <lantech19446> that's what i'm doing right now
[21:48:25] <cousteau> Or, instead of deleting them, rename them
[21:48:26] *** Quits: digilink (~digilink@user/digilink) (Quit: WeeChat 3.2)
[21:48:37] <cousteau> Take out the ?... part
[21:49:00] <cousteau> That way you can easily recover them, even on Windows
[21:50:06] <lantech19446> they were from back in 2019 we did a fundraiser with chucky cheese, if I don't delete them now i'm gonna delete them  in 2mos when i'm getting rid of all the shit no longer used on the site
[21:50:26] *** Quits: Strom (strom@fedora/strom) ()
[21:51:35] <lantech19446> goddamnit it found another one of those files
[21:52:00] *** Joins: Strom (strom@fedora/strom)
[21:54:54] *** Quits: cousteau (~cousteau@user/cousteau) (Quit: Quit)
[21:54:57] <lantech19446> those images aren't even valid on linux, I have no fucking idea how they ever got displayed on our site
[21:57:16] *** Quits: Samian (~Sami@163.114.130.5) (Ping timeout: 244 seconds)
[22:00:10] *** Quits: ninjin (~ninjin@user/ninjin) (Remote host closed the connection)
[22:00:13] *** Quits: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net) (Quit: The Lounge - https://thelounge.chat)
[22:00:25] *** Joins: ninjin- (~ninjin@user/ninjin)
[22:03:19] *** Quits: roadie` (~user@2a02:8108:ec0:1427:4590:7bfa:9a55:881c) (Ping timeout: 252 seconds)
[22:03:42] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-7-12.prtc.net)
[22:03:57] *** Joins: roadie` (~user@2a02:8108:ec0:1427:4590:7bfa:9a55:881c)
[22:04:21] <lantech19446> hazzah I have accomplished the task
[22:07:43] *** Quits: meator (~meator@user/meator) (Ping timeout: 252 seconds)
[22:08:41] *** Quits: samuelrajan747 (~Guest25@45.116.114.125) (Ping timeout: 256 seconds)
[22:10:00] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[22:12:56] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[22:17:31] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[22:19:27] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-7-12.prtc.net) (Ping timeout: 256 seconds)
[22:19:49] *** Quits: ajfriesen (~ajfriesen@cable-89-1-117-98.nc.de) (Ping timeout: 252 seconds)
[22:24:56] *** Quits: gnoo (~gnoo@user/gnoo) (Quit: gnoo)
[22:25:06] *** Joins: meator (~meator@user/meator)
[22:27:36] *** Joins: koolazer (~koo@user/koolazer)
[22:28:37] *** Quits: meator (~meator@user/meator) (Remote host closed the connection)
[22:29:03] *** Joins: meator (~meator@user/meator)
[22:29:41] <lantech19446> I got the error error: src refspec master does not match any I added the files committed the files and got that error when I tried to push the files now it says my working tree is clean and won't let me add them and the changes didn't push
[22:30:09] *** Joins: Brumaire (~quassel@81-64-14-121.rev.numericable.fr)
[22:32:27] *** Quits: meator (~meator@user/meator) (Remote host closed the connection)
[22:32:46] *** Joins: meator (~meator@user/meator)
[22:35:56] <lantech19446> never mind when I used git push # instead of -u origin master it worked
[22:37:10] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 240 seconds)
[22:39:36] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[22:40:52] *** Quits: Vooch (~iovoo@096-038-011-034.biz.spectrum.com) (Quit: Konversation terminated!)
[22:42:15] *** Joins: sniperwolf (~sniperwol@91.230.98.1)
[22:45:50] *** Joins: FabioP (~fabio@80.82.3.194)
[22:52:56] *** Joins: hbautista_ (~hbautista@187.171.69.204)
[22:53:31] *** Joins: txtsd (~txtsd@user/txtsd)
[22:54:54] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[22:58:29] <lantech19446> so apparently some of my changes still didn't propagate
[22:58:37] <lantech19446> I don't get what the issue is
[23:01:06] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[23:03:27] *** Quits: roadie` (~user@2a02:8108:ec0:1427:4590:7bfa:9a55:881c) (Ping timeout: 245 seconds)
[23:03:57] *** Joins: Samian (~Sami@163.114.130.5)
[23:09:12] *** Joins: roadie` (~user@2a02:8108:ec0:1427:4590:7bfa:9a55:881c)
[23:10:00] *** Joins: zumba_addict (~zumba_add@2601:240:4500:8320:dde8:210d:8bb2:f9ad)
[23:10:10] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:10:41] * j416 serves lantech19446 some tea. there there.
[23:11:15] <j416> triggered by profanity
[23:11:55] *** Quits: tmz (~tmz@fedora/tmz) (Quit: Leaving)
[23:12:14] *** Joins: tmz (~tmz@fedora/tmz)
[23:12:52] <lantech19446> thank you j416 I just managed to get all the issues resolved now if my blood pressure would come down a little bit I'll be just fine
[23:13:03] *** Joins: absc (~absc@dynamic-adsl-94-34-168-146.clienti.tiscali.it)
[23:17:46] *** Quits: meator (~meator@user/meator) (Remote host closed the connection)
[23:18:05] *** Joins: meator (~meator@user/meator)
[23:19:10] *** Quits: APic (apic@apic.name) (Ping timeout: 240 seconds)
[23:20:33] *** Joins: alfredb (RBDYvWThXI@84-72-75-16.dclient.hispeed.ch)
[23:21:26] *** Joins: Hax0r (~Hax0r@128.127.222.236)
[23:27:28] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (Ping timeout: 252 seconds)
[23:35:29] *** Quits: alfredb (RBDYvWThXI@84-72-75-16.dclient.hispeed.ch) (Quit: leaving)
[23:37:55] *** Quits: meator (~meator@user/meator) (Remote host closed the connection)
[23:38:13] *** Joins: meator (~meator@user/meator)
[23:38:37] *** Joins: odoood (~odoood@2601:c8:c003:a550::7)
[23:41:48] <Torr> Where in the <.git> folder are commit messages stored?
[23:42:52] <imMute> Torr: .git/objects/   all objects are in there (commits, tags, trees, blobs, etc)
[23:43:07] *** Quits: kyshoc (~kyshoc@user/kyshoc) (Quit: ZNC 1.8.2 - https://znc.in)
[23:43:22] *** Joins: kyshoc (~kyshoc@adsl-99-93-208-248.dsl.mtry01.sbcglobal.net)
[23:43:22] *** Quits: kyshoc (~kyshoc@adsl-99-93-208-248.dsl.mtry01.sbcglobal.net) (Changing host)
[23:43:22] *** Joins: kyshoc (~kyshoc@user/kyshoc)
[23:46:46] <Torr> In which binary format are they stored?
[23:46:47] *** Quits: rahl (~rahl@102.114.28.115) (Ping timeout: 252 seconds)
[23:46:47] <imMute> Torr: https://git-scm.com/book/en/v2/Git-Internals-Git-Objects
[23:46:48] <Torr> Thank you
[23:51:15] *** Joins: bradyt (~bradyt@user/bradyt)
[23:51:59] <bradyt> i don't really feel like mentioning some other project's "master" in my code. is there another reference like "bleeding edge", "HEAD", etc?
[23:52:10] <bradyt> er, HEAD isn't right either
[23:52:37] <imMute> "main branch"?
[23:52:58] <ikke> "The branch which shall not be named"
[23:53:04] <bradyt> yeah basically
[23:53:10] <DoofusCanadensis> upstream
[23:53:22] *** Joins: Dotz0cat (~Dotz0cat@h210.68.213.151.dynamic.ip.windstream.net)
[23:53:30] <DoofusCanadensis> but that usually refers to the entire repository no any specific branch
[23:53:39] <another|> you-know-which-branch
[23:53:41] <bradyt> i feel like i accidentally used the term "upstream" when it's actually a completely different repo, only same ecosystem
[23:54:08] <bradyt> these don't have any commits in common, if that makes sense
[23:54:19] <bradyt> "bleeding edge of your client breaks my client"
[23:54:56] <bradyt> i like that #git is not above humor, i thought lighter moods were more rare on irc
[23:55:14] <bradyt> *humour
[23:56:28] <eschwartz> bradyt: "the branch used by those racist people"
[23:56:56] <bradyt> i mean, it's now amusing that a project /hasn't/ switched to main
[23:57:03] <eschwartz> why?
[23:57:09] <bradyt> like, you're not that good of a programmer?
[23:57:22] *** Joins: Dotz0cat_ (~Dotz0cat@h176.117.90.75.dynamic.ip.windstream.net)
[23:57:26] <bradyt> not the "you" "you"
[23:57:35] <eschwartz> assuming one wants to switch, who in their right mind would ever use "main"?
[23:57:39] *** Quits: Dotz0cat (~Dotz0cat@h210.68.213.151.dynamic.ip.windstream.net) (Ping timeout: 244 seconds)
[23:57:40] <eschwartz> consider e.g. "trunk"
[23:57:48] *** Parts: Torr (~Torr@user/torr) ()
[23:57:50] <DoofusCanadensis> it's what github settled on
[23:57:54] <bradyt> i noticed "trunk" somewhere in docs
[23:58:08] <bradyt> i think github offers "main", "trunk" and something else
[23:58:10] *** Dotz0cat_ is now known as Dotz0cat
[23:58:14] <bradyt> as ideas
[23:58:23] <eschwartz> $ cd git-git/; git log origin/main<TAB> -> origin/maint
[23:58:41] <bradyt> origin/roller-coaster
[23:58:42] <twb> eschwartz: I thought they were D/s people
[23:59:51] <bradyt> hmm, can't find that list of alternatives to "master"
