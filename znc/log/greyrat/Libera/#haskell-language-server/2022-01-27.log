[00:49:09] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[01:13:37] *** Quits: myShoggoth (~myShoggot@97-120-67-120.ptld.qwest.net) (Ping timeout: 240 seconds)
[01:13:57] *** Joins: myShoggoth (~myShoggot@97-120-67-120.ptld.qwest.net)
[01:34:04] *** Quits: cdsmith (~cdsmithma@2001:470:69fc:105::284) (Quit: Client limit exceeded: 20000)
[01:48:37] *** Quits: myShoggoth (~myShoggot@97-120-67-120.ptld.qwest.net) (Ping timeout: 240 seconds)
[01:56:43] *** Joins: myShoggoth (~myShoggot@97-120-67-120.ptld.qwest.net)
[01:58:03] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Quit: coot)
[02:08:32] *** Joins: Guest68 (~Guest68@185.253.183.120)
[02:09:43] *** Quits: Guest68 (~Guest68@185.253.183.120) (Client Quit)
[03:06:17] *** Quits: shapr (~user@pool-100-36-247-68.washdc.fios.verizon.net) (Remote host closed the connection)
[03:07:06] *** Joins: shapr (~user@pool-100-36-247-68.washdc.fios.verizon.net)
[04:59:57] *** Quits: myShoggoth (~myShoggot@97-120-67-120.ptld.qwest.net) (Ping timeout: 240 seconds)
[06:41:26] *** Joins: myShoggoth (~myShoggot@97-120-67-120.ptld.qwest.net)
[07:44:11] *** Joins: leungbk (~user@2603-8000-1201-2dd2-79d4-db3d-bfd4-b037.res6.spectrum.com)
[07:51:46] *** Quits: leungbk (~user@2603-8000-1201-2dd2-79d4-db3d-bfd4-b037.res6.spectrum.com) (Quit: ERC 5.4 (IRC client for GNU Emacs 28.0.91))
[07:54:10] *** Joins: leungbk (~user@2603-8000-1201-2dd2-79d4-db3d-bfd4-b037.res6.spectrum.com)
[07:57:17] *** Quits: myShoggoth (~myShoggot@97-120-67-120.ptld.qwest.net) (Ping timeout: 240 seconds)
[08:08:10] *** Quits: leungbk (~user@2603-8000-1201-2dd2-79d4-db3d-bfd4-b037.res6.spectrum.com) (Read error: Connection reset by peer)
[11:58:26] *** Joins: coot (~coot@213.134.190.95)
[12:19:45] *** Joins: kokobd (~kokobd@120.238.186.130)
[12:40:37] *** Joins: kokobd_ (~ubuntu@119.91.200.28)
[12:41:41] *** Quits: kokobd (~kokobd@120.238.186.130) (Quit: kokobd)
[12:42:00] *** Quits: kokobd_ (~ubuntu@119.91.200.28) (Client Quit)
[12:42:17] *** Joins: kokobd (~ubuntu@119.91.200.28)
[12:44:43] *** Joins: fendor (~fendor@77.119.174.56.wireless.dyn.drei.com)
[13:19:39] *** Joins: PaulTheNeko (~PaulTheNe@apn-37-7-216-65.dynamic.gprs.plus.pl)
[13:24:13] <PaulTheNeko> Is it considered good form to report issues for very minor writing mistakes? Or should I submit a patch with the fix instead?
[13:24:13] *** Joins: cdsmith (~cdsmithma@2001:470:69fc:105::284)
[13:24:57] <PaulTheNeko> Cause Ghc.Core's documentation says "[...] typesÂ  for use by for the [...]"
[13:25:33] <PaulTheNeko> Oh, my apologies, this seems to be wrong server *facepalm*
[13:28:16] *** Quits: PaulTheNeko (~PaulTheNe@apn-37-7-216-65.dynamic.gprs.plus.pl) (Quit: Client closed)
[13:59:26] <fendor[m]> can I use opentelemetry with gch 8.10.4 or does this require a newer ghc version?
[13:59:54] <fendor[m]> s/gch/ghc/
[14:07:41] *** Quits: mjrosenb (~mjrosenb@pool-108-54-97-96.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[14:07:49] *** Joins: mjrosenb (~mjrosenb@pool-108-54-97-96.nycmny.fios.verizon.net)
[14:10:23] *** Quits: coot (~coot@213.134.190.95) (Quit: coot)
[14:10:54] *** Joins: coot (~coot@213.134.190.95)
[15:04:49] <wz1000> fendor[m]: you should be able to
[15:35:47] <fendor[m]> yeah, I just passed arguments to the wrapper instead of the executable and was wondering why the eventlog is empty <_<
[16:40:55] *** Joins: fendor_ (~fendor@77.119.199.145.wireless.dyn.drei.com)
[16:43:54] *** Quits: fendor (~fendor@77.119.174.56.wireless.dyn.drei.com) (Ping timeout: 268 seconds)
[16:47:46] <fendor[m]> what could be broken if the shake queue isn't being processed any more? I am not sure any thread could have died silently since they should be restarted once the shake run is cancelled, right?
[18:01:19] *** Quits: coot (~coot@213.134.190.95) (Quit: coot)
[18:01:57] *** Joins: coot (~coot@213.134.190.95)
[18:20:50] <mpickering> Isn't there only one consumer for the shake queue?
[18:20:55] <mpickering> so the consumer is not taking anymore
[18:21:00] <mpickering> add traces
[18:30:55] *** Quits: coot (~coot@213.134.190.95) (Quit: coot)
[18:35:25] <fendor[m]> I thought so as well, the only consumer ought to be `pumpActionThread` which eventually stops running (e.g. no more traces), but for no apparent reason
[18:35:45] *** Joins: coot (~coot@213.134.190.95)
[18:36:05] <fendor[m]> I looked at the action names of the last time `pumpActionThread` is invoked, but no pattern stands out. Sometimes `ParentTC`, sometimes `getParsedModule`
[18:36:09] *** Joins: arrowd (~arr@2.93.163.158)
[18:43:05] <fendor[m]> What does `shakeRunDatabaseForKeys` roughly do? Run the actual actions? If we give a list of actions, they should be executed in parallel, right? If none of the actions make any progress, does that either entail there is no parallelisation or all of these actions get stuck for the same reason?
[18:47:33] *** Quits: shapr (~user@pool-100-36-247-68.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[18:49:44] *** Joins: shapr (~user@pool-100-36-247-68.washdc.fios.verizon.net)
[19:15:49] *** Joins: myShoggoth (~myShoggot@97-120-67-120.ptld.qwest.net)
[21:05:18] *** Quits: myShoggoth (~myShoggot@97-120-67-120.ptld.qwest.net) (Ping timeout: 250 seconds)
[21:34:40] *** Joins: myShoggoth (~myShoggot@97-120-67-120.ptld.qwest.net)
[22:21:42] *** Quits: coot (~coot@213.134.190.95) (Quit: coot)
[22:22:13] *** Joins: coot (~coot@213.134.190.95)
[22:22:52] *** Quits: coot (~coot@213.134.190.95) (Read error: Connection reset by peer)
[22:23:10] *** Joins: coot (~coot@213.134.190.95)
[23:01:05] *** Quits: arrowd (~arr@2.93.163.158) ()
[23:34:57] *** Quits: juhp (~juhp@128.106.188.82) (Ping timeout: 240 seconds)
[23:37:49] *** Joins: juhp (~juhp@128.106.188.82)
[23:43:41] *** Quits: coot (~coot@213.134.190.95) (Quit: coot)
[23:44:15] *** Joins: coot (~coot@213.134.190.95)
[23:47:26] *** Quits: myShoggoth (~myShoggot@97-120-67-120.ptld.qwest.net) (Ping timeout: 260 seconds)
[23:48:37] *** Quits: coot (~coot@213.134.190.95) (Ping timeout: 240 seconds)
