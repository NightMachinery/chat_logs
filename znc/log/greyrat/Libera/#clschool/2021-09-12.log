[00:02:01] *** Quits: lisp123 (~lisp123@5.30.23.247) (Quit: Leaving...)
[00:17:15] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 265 seconds)
[00:26:41] <White_Flame> edgar-rft: (let ((a 1)) ...) tends to put a fixnum in a register :-P
[00:37:56] <aeth> not just a fixnum, a bit
[00:38:06] <pjb> or even not in a register.
[00:38:26] <aeth> right, (let ((a 1)) ...) could get rid of A at compile time
[00:38:29] <aeth> And probably will
[01:23:15] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[01:58:40] *** Quits: vats (~vats@103.70.83.191) (Ping timeout: 260 seconds)
[03:08:57] *** Quits: White_Flame (~quassel@user/white-flame/x-6930243) (Remote host closed the connection)
[03:09:16] *** Quits: hendursaga (~weechat@user/hendursaga) (Write error: Connection reset by peer)
[03:10:11] *** Joins: White_Flame (~quassel@user/white-flame/x-6930243)
[04:15:49] *** Quits: random-nick (~random-ni@87.116.165.220) (Ping timeout: 252 seconds)
[04:56:23] *** Joins: Oladon (~olad@98.43.81.226)
[06:08:38] *** Quits: Josh_2 (~user@37.25.47.130) (Quit: ERC (IRC client for Emacs 27.1))
[07:10:10] *** Quits: sts-q (~sts-q@91.200.108.249) (Ping timeout: 260 seconds)
[07:21:41] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[07:25:32] *** Joins: sts-q (~sts-q@212.53.219.229)
[07:33:50] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 260 seconds)
[07:41:08] *** Quits: abrantesasf (abrantesas@gateway/vpn/protonvpn/abrantesasf) (Quit: Leaving)
[08:16:04] *** Joins: Oladon (~olad@98.43.81.226)
[08:27:28] *** Joins: hendursaga (~weechat@user/hendursaga)
[09:24:22] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[09:55:55] <seok> Am I using reduce wrong ?
[09:55:56] <seok> https://pastebin.com/wUA8TCB4
[09:56:05] <seok> the first function works but not the second one
[09:59:43] <beach> I can't figure out what you want to do, but reduce is used on a function, say f, and a list of object, say a, b, c, d, ...  when you want to compute (f ... (f (f (f a b) c) d)...)
[10:00:19] <beach> So if the result of applying f to two arguments is not an acceptable argument to f, then you are using it wrong.
[10:00:32] <seok> yeah that's what I'm trying to do
[10:01:33] <beach> Are you sure?
[10:01:35] <seok> yeah
[10:01:54] <seok> I'm trying to remove duplicates of lists produced by collectwzobj
[10:01:56] <beach> So what is the nature of the elements in (contents folder)?
[10:02:27] <seok> it is a list of xml classes
[10:02:42] <seok> https://pastebin.com/491PEG3J
[10:03:05] <beach> Oops, urgent stuff.  I'll be back later.
[10:03:10] <seok> ok !
[10:19:27] <beach> So you can apply collectwzobj to an XML class.  And that gives you a set.  
[10:19:42] <beach> Then you can take the union of two sets, and that is what your function returns.
[10:20:08] <seok> yes
[10:20:20] <beach> But, what the function returns must be an acceptable argument to the function like I said.
[10:20:35] <beach> So the function must return an XML class, or it won't work.
[10:20:53] <seok> the method is defined for a list also
[10:21:57] <seok> calling the function with funcall works, but not with reduce
[10:22:01] <seok> I can't figure out why
[10:23:21] <beach> Try the following.  Define (defun my-reduce (a b) (reduce a b)) and then trace my-reduce.
[10:23:41] *** Joins: shka (~herr@109.231.62.239)
[10:24:23] <seok> same error
[10:24:34] <seok> actually the error occurs in the 2nd xml object
[10:24:41] <beach> I mean, you should check the arguments and see if they are reasonable. 
[10:24:44] <seok> There is no applicable method for the generic function
[10:24:45] <seok>   #<STANDARD-GENERIC-FUNCTION MS::COLLECTWZOBJ (3)>
[10:24:45] <seok> when called with arguments
[10:24:45] <seok>   ("int").
[10:24:54] <seok> but i don't get this error when I use funcall
[10:25:07] <seok> or when I try (collectwzobj '("int"))
[10:26:09] <seok> wait does that mean collectwzobj is being called with '("int") or "int" ?
[10:26:59] <beach> I think you can figure it out.  
[10:27:27] <seok> If it's '("int") it shouldn't be signalling an error
[10:30:09] <seok> https://pastebin.com/wz3wK06j
[10:30:31] <seok> Well I got it working with just iterate, I still can't figure out why reduce won't work
[10:34:52] <beach> Oh, sorry, I meant define your function as a named function (defun ff (a b) (union...)) and then trace it.
[10:35:11] <beach> You should then see that it is called with the wrong kinds of arguments. 
[10:36:05] <beach> Yes, it gets called with "int".
[10:37:22] <seok> hm, why is the first method and the second method different ?
[10:37:24] <seok> in the paste
[10:37:35] <seok> I thought they are equivalent
[10:37:58] *** Joins: st_iron (uid370243@id-370243.highgate.irccloud.com)
[10:39:04] <beach> I'm sorry, I am still distracted with other stuff.  
[10:40:50] <beach> I'll be back a bit later.
[10:45:19] <beach> They are not equivalent.  In the REDUCE case, you call collectwzobj again on the result.
[10:45:42] <seok> ohh
[10:45:44] <seok> I see
[10:46:51] <seok> So it should look like this
[10:46:53] <seok> https://pastebin.com/RWU1CBmg
[10:47:00] <seok> It is working ^^
[10:47:47] <beach> Great!
[10:49:18] <seok> thank you !
[10:49:34] <beach> Sure.  Sorry I was so distracted.
[10:50:06] <seok> Npnp ! take your time
[10:50:07] <seok> no rush
[11:02:18] <st_iron> good morning
[11:03:18] <beach> Hello st_iron.
[12:12:57] *** Joins: treflip (~user@95.79.32.99)
[12:19:03] *** Joins: ln43 (~ln43@user/ln43)
[12:20:49] *** Parts: treflip (~user@95.79.32.99) (ERC (IRC client for Emacs 27.2))
[12:36:10] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:39:15] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[12:41:46] <pjb> seok: if you have long lists or a lot of them, you could consider (remove-duplicates (reduce #'nconc (contents folder) :key #'copy-list) :test 'equal) and benchmark it against reduce union…
[12:51:37] <ln43> is it normal that loading a binary file there are not completions using Slime with ctrl-. at a point ?
[12:51:52] <ln43> i'm forced to load .lisp sources to have them ...
[12:52:07] <ln43> ok, is it not a big issue but just for curiosity
[13:13:33] <seok> pjb oh that is an alternative, nice
[13:13:57] <seok> the result lists aren't very big (<10) so it will probably not be that different
[13:14:15] <seok> does remove-duplicates perform better on some occasions than union ?
[13:16:15] <mfiano> I would think that depends on the data structures of the algorithms of the CL implementation on some particular piece hardware
[13:16:25] <mfiano> piece of*
[13:24:35] <ln43> seok, maybe this is a case where profiling could help
[13:25:14] <ln43> i was trying to read the sbcl docs to understand how to use the statistical profiler but up to now really i never used it
[13:27:49] <ln43> but is it possible maybe (should be so) to show also total time
[13:52:11] <seok> Can I inherit lisp datatypes with defclass? like (def xstring (string) (...))
[13:52:25] <seok> (defclass ...)*
[13:53:25] <beach> Typically not, no.
[13:53:55] <beach> seok: Anything labeled as a "type" or a "system class" in the Common Lisp HyperSpec can not be extended like that.
[13:54:15] <seok> ok :c
[13:54:46] <beach> http://www.lispworks.com/documentation/HyperSpec/Body/t_string.htm
[13:54:57] <beach> Notice that it says "system class".
[13:55:42] <beach> And the glossary says: system class n. a class that may be of type built-in-class in a conforming implementation and hence cannot be inherited by classes defined by conforming programs. 
[13:56:52] <pjb> seok: yes, remove-duplicate should be O(n), while reduce+union will be O(n²) at least.
[13:56:53] <beach> Notice the "may be".  In some implementations, or at least one (SICL), STRING is a standard class, so you could do that.
[13:57:21] *** Quits: ln43 (~ln43@user/ln43) (Quit: Connection closed)
[13:57:51] <beach> pjb: REMOVE-DUPLICATES an be O(n) only if the :TEST is such that a hash table can be used, no?
[13:58:02] <beach> s/an be/can be/
[13:58:22] <pjb> beach: correct.
[14:49:01] *** Joins: random-nick (~random-ni@87.116.165.220)
[15:19:11] <seok> can i define (defmethod equal (class)) for clos ?
[15:21:09] <mfiano> No
[15:21:18] <seok> yeah just tried it :c
[15:21:37] <mfiano> Methods are defined for generic functions.
[15:22:06] <seok> how do i define equality for two object of same class ?
[15:22:20] <seok> can it only be in a custom predicate function
[15:22:34] <mfiano> That largely depends on how you define equality. There are many definitions
[15:25:28] <mfiano> Consider also why there is no deep copying in Common Lisp. #'copy-tree will only descend into the conses, not any aggregate types contained in them.
[15:26:09] <mfiano> KMP has a relevant article on all of this. beach can probably point it out
[15:42:03] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[16:36:58] <pjb> seok: see CDR#08 https://common-lisp.net/project/cdr/document/8/index.html
[16:37:54] <pjb> seok: if you insist on the name, you can always (shadow 'equal) (defmethod equal (a b) (cl:equal a b)) (defmethod equal ((a your-class) (b your-class)) (eql a b))
[16:38:27] <pjb> seok: (equal? (make-instance 'person :name "Seok") (make-instance 'person :name "Seok")) ???
[16:38:56] <pjb> Please read: http://www.nhplace.com/kent/PS/EQUAL.html
[16:59:46] <mfiano> Ah yes, that was the article.
[17:03:22] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[17:03:57] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:28:23] <seok> ah that is true
[19:09:03] *** Joins: thrig (~thrig@70.97.65.251)
[20:12:31] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[20:30:07] *** Joins: dra (~dra@2a04:4540:641e:b500:ece8:867a:9e59:aae8)
[20:31:59] *** Quits: thrig (~thrig@70.97.65.251) (Remote host closed the connection)
[21:07:42] *** Quits: st_iron (uid370243@id-370243.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[21:39:32] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Quit: WeeChat 3.2)
[21:42:11] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[21:44:55] *** Joins: Oladon (~olad@98.43.81.226)
[22:06:37] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 265 seconds)
[22:39:53] *** Joins: vats (~vats@103.70.83.191)
[23:50:30] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
