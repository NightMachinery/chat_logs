[00:02:11] <v`> back in five, hunting sharks with a pair of pliers
[00:05:40] <Yaakov> Mosh is great, I don't know why it took me so long to find out about it. It replaces all sorts of stuff I cobbled together and does more. Everyone on the planet should be using it.
[00:05:47] <gordonfish> v`: needle nose?
[00:06:51] *** Quits: PlayerOne (~PlayerOne@user/playerone) (Quit: Client closed)
[00:07:14] <gordonfish> Yaakov: Are you talking about the shell?
[00:07:24] <Yaakov> I am.
[00:07:46] *** Joins: PapaChub (~PapaChub@vzw-54.parabon.com)
[00:07:53] <gordonfish> https://mosh.org/ <- looks interesting
[00:07:53] <Paperbot> Link title(s): [ Mosh: the mobile shell ]
[00:08:04] <Yaakov> It has made using IRC and editing in vim mcuh more pleasant.
[00:08:18] <Yaakov> much, too.
[00:09:33] *** Quits: habamax (~habamax@user/habamax) (Quit: leaving)
[00:09:33] <vague> I love perl, had to pretty-print a license file that was on one line and included nested json data, perl -MMojo::JSON=decode_json -MMojo::File=path -MData::Dumper -E 'say Dumper decode_json decode_json(path(shift)->slurp)->{LicenseCertificateFileSerialized}' novacura.json ❤ ❤ 
[00:10:26] <Yaakov> I supppose my extended absence from all but the most mandatory sysadminating kept me out of the loop on new tools.
[00:11:28] <Yaakov> I'd written some shell scripts long ago to do some of mosh, and used screen, but... this is far better.
[00:11:40] * GumbyPAN CPAN Upload: Crypt-Passphrase-Argon2-0.003 by LEONT https://metacpan.org/release/LEONT/Crypt-Passphrase-Argon2-0.003
[00:12:22] <Grinnz> vague: have I got news for you
[00:12:37] <vague> Don't u do it
[00:12:55] *** Joins: PlayerOne (~root@user/playerone)
[00:13:27] <Grinnz> perl -Mojo -E'say r j j(f(shift)->slurp)->{LicenseCertificateFileSerialized}'
[00:14:17] <vague> PlayerOne, don't irc as root, it's bad practise and you put yourself at risk needlessly
[00:14:43] <PlayerOne> vague, it was a default nick on current IRC client
[00:14:47] <vague> I did think of ojo but I've never done anything with it so had no idea what it can do :)
[00:14:47] <PlayerOne> I changed a client
[00:15:16] <vague> It's your username, so that would imply you started your client as root
[00:15:19] <PlayerOne> Why would I even try to authenticate as root on public server where it's obviously not free
[00:15:43] <PlayerOne> window up
[00:15:47] <PlayerOne> Oops
[00:16:07] <Yaakov> Grinnz: I have a simple regex to do it but unfortunately there is not enough room in this IRC channel to show it.
[00:16:27] <Grinnz> Yaakov: oh no
[00:16:28] <vague> PlayerOne, it's good if you didn't start the client as root :)
[00:16:48] <Grinnz> vague: mostly you just ctrl+F on https://metacpan.org/pod/ojo until you find the right letters to use :P
[00:16:49] <Paperbot> Link title(s): [ ojo - Fun one-liners with Mojo - metacpan.org ]
[00:17:27] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[00:18:42] <vague> *nod* looking at it now :)
[00:19:53] <vague> The problem is, I'd have to look up the letters each time, basically, where each time is once in a blue moon, so it's faster to use the tools I remember how to use, or can faster refresh my memory
[00:28:52] *** Joins: xenial-user5 (~androirc@20014C4C17E1D200B5325C74942B8C8A.catv.pool.telekom.hu)
[00:31:24] *** Quits: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi) (Quit: C-x C-c)
[00:31:34] *** Quits: Gin (~Gin@172.104.48.83) (Quit: Client closed)
[00:32:17] *** Joins: hendursaga (~weechat@user/hendursaga)
[00:32:35] *** Joins: Judabuda (~ok@user/judabuda)
[00:34:26] *** Joins: Judabuda_ (~ok@user/judabuda)
[00:37:12] *** Quits: Judabuda (~ok@user/judabuda) (Read error: Connection reset by peer)
[00:39:43] *** Joins: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi)
[00:43:29] *** Quits: magla (~gelignite@55d4f5e7.access.ecotel.net) (Quit: Stay safe!)
[00:46:17] *** Joins: riceandbeans (~zach@user/riceandbeans)
[00:46:53] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[00:47:34] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 245 seconds)
[00:49:28] *** Joins: pj (~pj@ghettoforge/pj)
[00:50:37] *** Quits: jabberwok (~wlindley@75.105.20.104) (Ping timeout: 268 seconds)
[00:51:44] * GumbyPAN CPAN Upload: Webservice-OVH-0.45 by JEGADE https://metacpan.org/release/JEGADE/Webservice-OVH-0.45
[00:51:51] *** Quits: xenial-user5 (~androirc@20014C4C17E1D200B5325C74942B8C8A.catv.pool.telekom.hu) (Ping timeout: 268 seconds)
[00:52:11] <xq> what's a good way to keep track of what was deployed where, when and by whom when deploying using Rex ?
[00:53:00] <xq> specifically to answer 2 questions: 1) which version of $software is currently deployed (using Rex) to server X ? 2) who deployed this and when ?
[00:53:33] <xq> assuming multiple versions of $software, multiple users, multiple servers
[00:54:38] *** Quits: Shaeto (~Shaeto@94.25.234.141) (Ping timeout: 272 seconds)
[00:55:18] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[00:58:44] *** Joins: feriman (~feriman@188.163.113.127)
[01:03:07] *** Quits: ufobat__ (~martin@dynamic-095-117-092-027.95.117.pool.telefonica.de) (Ping timeout: 272 seconds)
[01:07:32] *** Joins: jabberwok (~wlindley@75.105.20.104)
[01:09:21] *** Quits: diskin (~diskin@ec2-18-158-74-148.eu-central-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[01:10:38] *** Joins: diskin (~diskin@87.117.49.217)
[01:11:47] *** Quits: feriman (~feriman@188.163.113.127) (Ping timeout: 272 seconds)
[01:16:19] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[01:18:24] <buu> mmmhmm
[01:20:30] *** Joins: Soltis (~anon@c-73-3-82-11.hsd1.ut.comcast.net)
[01:20:53] <buu> Anyone know a cute gui system info tool for ubuntu, mobo, ram speed, gpu, etc
[01:20:54] <Yaakov> HELLO BUU
[01:21:22] <xq> the 'cute gui' is the hard part
[01:21:36] <xq> I find TUIs cute personally
[01:21:36] <buu> OMG YAAKOV
[01:21:50] *** Quits: tcohen (~tcohen@192.141.149.54) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:21:51] <Yaakov> WHERE HAVE YOU BEEN?!
[01:22:09] <buu> THE RIVER
[01:22:13] <buu> xq: https://ostechnix.com/wp-content/uploads/2013/01/Find-Hardware-Specifications-On-Linux-using-lshw-gtk-1.png cuter than this
[01:22:28] <Yaakov> I live on the river and I haven't seen you.
[01:22:35] <xq> yes absolutely
[01:24:04] <buu> Yaakov: hmmm.. what if.. there are more than one river?
[01:24:05] *** Joins: tcohen (~tcohen@192.141.149.51)
[01:24:12] <Yaakov> buu: Are you still a horrible troll?
[01:24:18] <buu> =[
[01:24:29] <Yaakov> buu: More than one river?! Well... I Suppose there could be.
[01:24:35] <Yaakov> buu: Just checking.
[01:24:35] <buu> Yaakov: Only when politics is involved
[01:24:43] <genio> I really dislike that Slack doesn't recognize "y'all" is a real word
[01:24:53] <buu> That sounds like a pretty major failure.
[01:25:11] <Adura> yn't'all
[01:25:15] <Yaakov> buu: You recall that you trolled the daylights out of me, or attempted to.
[01:25:18] <genio> take your little red squiggly line of typos elsewhere
[01:25:21] <Yaakov> HELLO GENIO
[01:25:29] <genio> HOW GOES IT YAAKOV?!
[01:25:32] <buu> Yaakov: That was 15 years ago!
[01:25:56] <buu> I plead the 15th
[01:26:01] <Yaakov> Ça va, how 'bout y'all?
[01:26:15] <Yaakov> buu: As I said, just checking.
[01:26:50] <buu> Well, I never got permanently banned from the perl community
[01:26:52] <Yaakov> buu: Actually, you mostly reformed by the end there.
[01:26:53] <buu> heh heh heh
[01:27:24] <genio> Ça va bien. ma femme est partie aujourd'hui, donc je suis seul à la maison pendant 2 semaines.
[01:27:46] <Grinnz> one consequence of moving to libera was losing our best trolls
[01:28:58] <Yaakov> Ah. Eh bien, je suis à la retraite avec deux petits-enfants maintenant.
[01:28:58] <genio> I guess I should put that into context; she was finally able to go visit her family in France. She hasn't seen them in quite some time
[01:29:19] <Yaakov> genio: Just stay out of trouble.
[01:29:38] <zgu> something about "with two small children now"
[01:29:42] <genio> Always. Just me and the dog
[01:29:51] <genio> "retired with two grand kids"
[01:29:56] <zgu> ohh
[01:29:59] <zgu> right
[01:31:38] <Yaakov> I've been away a few years...
[01:32:51] *** Quits: Judabuda_ (~ok@user/judabuda) (Read error: Connection reset by peer)
[01:33:25] *** Joins: Judabuda (~ok@user/judabuda)
[01:35:48] *** Quits: tcohen (~tcohen@192.141.149.51) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:41:49] * GumbyPAN CPAN Upload: Mojolicious-Plugin-Authentication-1.37 by JJATRIA https://metacpan.org/release/JJATRIA/Mojolicious-Plugin-Authentication-1.37
[01:42:51] *** Quits: gryphn (~gryphon@191.96.106.193) (Quit: kthxbye)
[01:45:00] <leont> genio: I'm always surprised when I can actually understand French, I guess I paid more attention in high school than my teacher gave me credit for :-p
[01:51:00] <ether> https://semgrep.dev/ -- we need to get perl support in here. PPI support for modern syntax needed too
[01:51:00] <Paperbot> Link title(s): [ Semgrep ]
[01:55:06] *** Quits: Guest97 (~Guest9@43.241.144.108) (Quit: Connection closed)
[01:57:27] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 252 seconds)
[02:01:23] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:01:52] * GumbyPAN CPAN Upload: Mac-Pasteboard-0.099_01 by WYANT https://metacpan.org/release/WYANT/Mac-Pasteboard-0.099_01
[02:10:57] *** Quits: Judabuda (~ok@user/judabuda) (Quit: Gone.)
[02:12:30] *** Quits: Xe (~cadey@tailscale/xe) (Quit: WeeChat 3.1)
[02:12:44] *** Joins: Xe (~cadey@tailscale/xe)
[02:15:13] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[02:29:37] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:31:13] *** Joins: plujon (~user@24.16.249.105)
[02:32:31] *** Joins: KnoP (~KnoP@p57b1920f.dip0.t-ipconnect.de)
[02:36:01] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 272 seconds)
[02:37:36] *** Quits: KnoP (~KnoP@p57b1920f.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[02:42:21] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 272 seconds)
[02:46:18] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[02:49:32] *** Joins: pj (~pj@ghettoforge/pj)
[02:51:20] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 264 seconds)
[02:56:38] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[02:58:16] *** Joins: gast0n (~g4570n@user/gast0n)
[03:00:16] *** Quits: Adura (~Adura@user/adura) (Quit: Quit)
[03:01:58] * GumbyPAN CPAN Upload: Bitcoin-Crypto-0.997 by BRTASTIC https://metacpan.org/release/BRTASTIC/Bitcoin-Crypto-0.997
[03:02:36] *** Quits: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[03:02:52] *** Quits: choroba (~E_Choroba@89-101-243-80.cust.centrio.cz) (Quit: Leaving)
[03:02:54] *** Joins: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[03:04:31] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[03:06:56] *** Parts: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de) ()
[03:08:57] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 252 seconds)
[03:13:39] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[03:13:47] <Grinnz> oh my lord https://github.com/Perl/perl5/issues/18877
[03:13:48] <Paperbot> Link title(s): [ [feature] my $@%a · Issue #18877 · Perl/perl5 · GitHub ]
[03:15:52] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:17:12] <veesh> are you able to block people on github?
[03:18:18] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 252 seconds)
[03:18:24] <xenu> people used to complain that p5p doesn't have anyone with programming language design expertise
[03:18:29] <xenu> now we have him and you still aren't satistified
[03:18:47] <xenu> satisfied*
[03:18:51] <veesh> maybe if he would do something productive, like remove grandfather from all source code...
[03:18:54] <Yaakov> That's a... non optimal feature request.
[03:20:57] <v`> https://lkml.org/lkml/2021/6/10/957
[03:20:57] <Paperbot> Link title(s): [ LKML: Linus Torvalds: Re: Maintainers / Kernel Summit 2021 planning kick-off ]
[03:21:11] *** Joins: tcohen (~tcohen@192.141.149.54)
[03:21:53] <xenu> v`: i was on the fence with vaccines, but now that linus torvalds endorsed them i have no doubts
[03:22:37] <xenu> although, just to be sure, i must check what pewdiepie thinks about them
[03:22:46] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[03:22:54] *** Quits: tcohen (~tcohen@192.141.149.54) (Client Quit)
[03:22:59] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 245 seconds)
[03:27:53] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 268 seconds)
[03:28:24] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[03:28:41] <leont> Grinnz: the heredoc inside regexes feature suggestion is also amazing
[03:30:18] *** Quits: samcv (~samcv@194.233.102.77) (Ping timeout: 264 seconds)
[03:31:32] *** Quits: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi) (Ping timeout: 264 seconds)
[03:31:53] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[03:33:49] *** Joins: samcv (~samcv@194.233.102.77)
[03:34:21] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[03:36:27] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 252 seconds)
[03:37:02] * GumbyPAN CPAN Upload: WebService-Mattermost-0.25 by MIKEJONES https://metacpan.org/release/MIKEJONES/WebService-Mattermost-0.25
[03:39:40] <veesh> ether: i'm on it. Apparently, someone's actively working on a tree-sitter parser for perl, so that's  a start
[03:41:00] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[03:43:57] *** Joins: Su-Shee_ (~Susanne@p4ffc7b62.dip0.t-ipconnect.de)
[03:44:47] *** Joins: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi)
[03:45:41] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 272 seconds)
[03:46:19] *** Quits: Su-Shee (~Susanne@p4ffc7740.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[03:53:54] <genio> wow
[03:54:31] <simcop2387> veesh: that could enable things like rperl to actually be workable in the long term, neat
[03:54:57] <simcop2387> leont: i'm not sure i can visualize that, can't wait for the recordings
[03:55:07] <veesh> i don't know much about rperl, please expound
[03:55:23] <Yaakov> HELLO SUSHEE
[03:56:33] <simcop2387> veesh: i forget who it is (one of the facebook perl community runners) but it's a restricted perl subset to make writing a perl compiler/jit possible
[03:56:54] <veesh> oooh, a JIT you say
[03:57:09] <veesh> is there some canonical source with examples of the issues with parsing perl?
[03:57:16] <simcop2387> one of the biggest issues with doing it is the general problem with perl, i.e. only perl can parse perl, because parsing perl requires running perl.
[03:57:20] *** Quits: PapaChub (~PapaChub@vzw-54.parabon.com) (Quit: Leaving)
[03:58:21] <simcop2387> no canonical list that i'm aware of but Mithaldu would probably be the resident expert
[03:58:55] <Mithaldu> there's no real canonical list, yeah
[03:59:00] <Mithaldu> but the two worst examples
[03:59:15] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[03:59:34] *** Quits: Dreadnaught (Kulrak@n122-109-33-182.rdl1.qld.optusnet.com.au) (Ping timeout: 272 seconds)
[04:00:29] *** Joins: deadmarshal (~deadmarsh@95.38.113.167)
[04:00:44] <simcop2387> veesh: i think Acme::Bleach would be a good example of it, and other source filters.  but i'm sure there are real legitimate examples of "normal" perl that'd break.
[04:01:02] <Mithaldu> fuck, i can't quite remember the exact details of this example, but
[04:01:26] <Mithaldu> depending on whether a function has a () or a ($) prototype, / after the function name is parsed differently
[04:01:30] <simcop2387> Mithaldu: sorry, didn't mean to summon you to create a brain worm
[04:01:55] <Mithaldu> and uh
[04:01:59] <Mithaldu> with the new signatures
[04:02:11] <veesh> oh yes, prototypes. that's code which affects parsing
[04:02:36] <veesh> tree-sitter supports external C parsers, so there's yet hope (to just hook up a limited perl interpreter to it, lol)
[04:02:37] <simcop2387> and then you've got BEGIN blocks that can load modules dynamically that have stuff with prototypes...
[04:02:43] <Mithaldu> it's literally impossible to determine whether parens in a sub declaration are a prototype or a signature, because every valid signature declaration is also a valid prototype delcaration
[04:03:20] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[04:03:41] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 244 seconds)
[04:04:39] *** Quits: deadmarshal (~deadmarsh@95.38.113.167) (Ping timeout: 245 seconds)
[04:04:55] <Grinnz> not every, but several
[04:05:07] <Mithaldu> whatever  / 25 ; # / ; die "this dies!";
[04:05:11] <simcop2387> s/several/enough/
[04:05:24] <simcop2387> Grinnz: oh god.  a signature of ($@)
[04:05:27] <Mithaldu> Grinnz: nah, you can have literally arbitrary text in prototypes
[04:05:38] <Grinnz> well yeah but some of them at least will die
[04:05:52] <Grinnz> like if you name any of the variables
[04:06:43] <simcop2387> veesh: yea tree-sitter parsers are rather nifty.  one should be able to get to the 99% or better that PPI just can't really deal with, makes me think i really must get my fucking full cpan tester stuff working so i could run it against every cpan module.
[04:07:29] <veesh> Mithaldu: that's the one I recall being the canonical proof that only perl can parse perl
[04:07:35] <simcop2387> enabling a complete rperl and a complete proper language server would be cool
[04:08:01] <Mithaldu> Grinnz: only when you try and call the function
[04:08:03] <aquanight> hypothetical: do the parsing phase like normal, in theory now everything is in the form of CVs with structured optrees
[04:08:20] <Grinnz> Mithaldu: arguably something the parser could reject, but yeah
[04:08:23] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[04:08:27] <aquanight> in theory these CVs can be "compiled" into native sroutines
[04:08:27] <Mithaldu> this does not die
[04:08:28] <Mithaldu> perl -e 'sub meep (Now, this is a story all about how) {}'
[04:08:50] <veesh> aquanight: but you run code during parsing, like BEGIN blocks
[04:08:55] <aquanight> yers
[04:09:01] <aquanight> those have to run un-JIT'd
[04:09:04] <Grinnz> Mithaldu: also your ambiguous case also works for *, +, and - because those all have unary variants as well
[04:09:11] <aquanight> but not much you can do about that and in theory BEGIN-time stuff is up front
[04:09:16] <Mithaldu> Grinnz: yay
[04:09:25] <aquanight> how often do you re-enter "BEGIN" state once main execution has begun
[04:09:42] *** Quits: Pali (~pali@user/pali) (Ping timeout: 272 seconds)
[04:09:42] <veesh> i thought perl doesn't translate well to a proper AST
[04:09:54] <Mithaldu> aquanight: everytime you use something
[04:09:55] <simcop2387> aquanight: while (1) {require 'foo.pl'}
[04:10:06] <aquanight> Mithaldu: use statements run at BEGIN time
[04:10:09] <veesh> i'm thinking mainly about static parsing, personally, b/c semgrep really looks cool
[04:10:11] <Mithaldu> veesh: it straightup doesn't
[04:10:18] <Mithaldu> aquanight: eval 'use Config'
[04:10:22] <aquanight> simcop2387: yes require/do/string eval are edge cases
[04:10:34] <Mithaldu> they're not edge cases
[04:10:40] <Mithaldu> they're ubiquitous and integral
[04:10:46] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: Textual IRC Client: www.textualapp.com)
[04:10:47] <Grinnz> aquanight: um
[04:10:56] <Grinnz> aquanight: which BEGIN time?
[04:10:59] <Mithaldu> they are used by everything all the time everywhere
[04:10:59] <simcop2387> string eval isn't quite ubiquitous but it happens often enough
[04:11:18] <Grinnz> aquanight: every compilation unit has its own parsing phase
[04:11:30] <simcop2387> don't forget CHECK{} and END{}
[04:11:32] <aquanight> Grinnz: ${^GLOBAL_PHASE}
[04:11:44] <Grinnz> so the answer is then "a lot"
[04:11:45] <simcop2387> and INIT{} i think right?
[04:11:52] <aquanight> once you get to "RUN" how often does BEGIN stuff happen after that point
[04:11:58] <Grinnz> every time you load a module
[04:12:08] <aquanight> only if you load it via runtime require or do
[04:12:17] <aquanight> if you loaded it by use you already did it
[04:12:17] <Grinnz> that's how loading happens at runtime, yes
[04:12:18] <veesh> i think what he means is that the value of a JIT is for long running processes
[04:12:31] <Grinnz> that module will then load other modules which have their own parsing phase
[04:12:38] <veesh> and therefore BEGIN time and friends aren't as relevant performance-wise
[04:12:45] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 252 seconds)
[04:12:48] <veesh> ^aquanight: did i get you?
[04:12:52] <aquanight> yes. JIT would be at its best for something that's going to load all of its shit once and then run for months
[04:13:02] <Grinnz> that's only half of the use cases for perl
[04:13:23] <simcop2387> yea, it should be possible to JIT some subset of perl at least in theory.  actually building a jit that's faster is another problem
[04:13:24] <veesh> how much JIT can you do for a short running process?
[04:13:25] <Grinnz> and most of those have runtime requires for one reason or another
[04:14:49] <veesh> i imagine a JIT would inline hot subroutines or something? or cache method lookups maybe
[04:15:15] <veesh> not really sure what it would do other than be a buzzword for perl 7
[04:15:19] <veesh> technical ignorance here
[04:15:59] <Grinnz> i mean, if we want to write a JIT, we'd be writing another raku
[04:16:16] <Grinnz> it's really not a good time to make people think about that
[04:17:07] <simcop2387> it wouldn't have to be another raku, but it'd likely go that way
[04:17:35] <veesh> Grinnz: b/c the internals would need to change so much?
[04:17:52] <Grinnz> because compatibility is impossible, so it would just be another new language
[04:18:08] <Grinnz> maybe they wouldn't decide to start from scratch again, but it's irrelevant
[04:18:24] <veesh> why is compat impossible?
[04:18:29] <simcop2387> it'd break a lot of XS stuff almost certainly which would be the problem
[04:18:33] <Grinnz> all XS stuff*
[04:18:37] <veesh> goootcha
[04:19:03] <simcop2387> in the long future that might be something reasonable to think about but it'd kill everything right now
[04:19:25] <Grinnz> and we've just spent a year resolving the perl 7 squabble after years spent resolving the raku squabble
[04:19:30] <Grinnz> that's the "not a good time" part
[04:19:54] <veesh> i wasn't thinking far enough ahead to realize that internals would change so much as to break extant code
[04:20:06] <veesh> i started this discussion b/c i wanna do static analysis
[04:20:08] <Grinnz> unfortunately, XS is just metastasized internals
[04:20:16] <veesh> XS: the best cancer
[04:20:47] <veesh> and people rely on undocumented APIs also, right
[04:20:48] <Grinnz> it's how it's so efficient at things, but it's a huge restriction
[04:21:10] <Grinnz> yeah, but that isn't always their fault, sorting what is "the API" is still an ongoing process
[04:21:38] <simcop2387> cpython has a similar issue with breaking numpy and such
[04:22:00] <veesh> at least we're not alone
[04:22:01] <simcop2387> less so that it's metastizied internals and more that any significant changes mean nobody will ever upgrade
[04:22:11] <veesh> it'd be like python3 all over again
[04:22:34] <simcop2387> it'd be worse because people would just fork python3 this time
[04:22:44] <simcop2387> there'd be a lot of "not this again"
[04:22:47] *** Quits: superherointj (~superhero@189-113-69-2.static.sumicity.net.br) (Quit: Leaving)
[04:23:59] *** Quits: zakame (~zakame@user/zakame) (Ping timeout: 268 seconds)
[04:25:46] <veesh> dang, it's three am and i'm too tired to go to sleep
[04:25:49] *** Joins: zakame (~zakame@user/zakame)
[04:26:38] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[04:27:41] <veesh> well, g'night all
[04:31:16] <waltman> I decided to be non-lazy for once and submit a PR for the bug I was complaining about last night! https://github.com/perl5-dbi/DBD-mysql/pull/330
[04:31:17] <Paperbot> Link title(s): [ accept 4031 as a valid return code when connection closed by waltman · Pull Request #330 · perl5-... ]
[04:31:32] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 264 seconds)
[04:33:39] *** Joins: SincereFox (uid337158@user/sincerefox)
[04:35:30] <Grinnz> waltman++, hope they will do the bare minimum and merge it
[04:35:51] <waltman> We shall see!
[04:36:08] <waltman> If they don't, at least the next person who comes along will have a patch.
[04:36:23] <waltman> Wait, does this mean I'm the new maintainer?
[04:36:45] <Grinnz> heh
[04:44:53] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[04:47:48] *** Joins: laidback_01 (~laidback_@206.214.235.7)
[04:47:57] *** Joins: laidback_01_ (~laidback_@206.214.235.7)
[04:48:11] *** Quits: laidback_01_ (~laidback_@206.214.235.7) (Client Quit)
[04:48:11] *** Quits: laidback_01 (~laidback_@206.214.235.7) (Client Quit)
[04:48:46] *** Joins: laidback_01 (~laidback_@206.214.235.7)
[04:49:14] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 245 seconds)
[04:49:20] *** Quits: laidback_01 (~laidback_@206.214.235.7) (Client Quit)
[04:49:30] *** Joins: laidback_01 (~laidback_@206.214.235.7)
[04:54:01] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[04:59:08] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 264 seconds)
[05:00:19] <genio> blkid
[05:00:26] <genio> gah. 
[05:01:02] *** Quits: brtastic (~Thunderbi@185.24.91.138) (Ping timeout: 244 seconds)
[05:06:18] *** Joins: Gin (~Gin@2001:250:4000:822d:7c6e:284b:bec5:e)
[05:07:16] <Gin> Hi, I wonder what ./configure is for in a project
[05:07:59] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 245 seconds)
[05:08:01] <Gin> Does it have a specific protocol about its behavior?
[05:08:28] <Gin> And I also notice something like ./autogen.sh
[05:10:18] <Gin> I assume the Makefile on those project are generated instead of hand-written, because I failed to understand those files and the original repo doesn't have a Makefile but a Makefile.am instead.
[05:12:15] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[05:16:44] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 245 seconds)
[05:20:08] <simcop2387> Gin: not quite a perl question.  they're usually generated by a program called "autoconf" though that is all written in perl and M4
[05:20:27] <simcop2387> Gin: https://www.gnu.org/software/autoconf/
[05:20:28] <Paperbot> Link title(s): [ Autoconf - GNU Project - Free Software Foundation ]
[05:20:53] *** Joins: pj (~pj@ghettoforge/pj)
[05:21:22] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[05:21:43] <simcop2387> it's a suite of programs with names like, aclocal, autoconf, and automake.  the project creates Makefile.am and configure.in (and some others) and the programs generate the full thing.  that way you don't have to write the code to detect everything about the platform yourself, you just declare what you want tested
[05:21:48] <simcop2387> in theory anyway
[05:22:08] *** Joins: leitz (~LeamHall@072-182-158-173.res.spectrum.com)
[05:22:28] <ology> aclocalics anonymous
[05:22:30] <Gin> simcop2389: But I've seen some guys just write a configure script in Perl.
[05:22:54] <Gin> simcop2387
[05:23:02] <Gin> Sorry for the typo
[05:23:45] <simcop2387> no worries, my client hilights on a bunch of those.  yea some people will do it, but that's not common.  they usually all function similarly though.
[05:23:57] <ology> waltman++ PR
[05:24:16] <simcop2387> perl itself has a Configure script, but it's not in perl but POSIX shell so it can run in places without perl
[05:24:53] <Gin> Have you ever seen a Makefile.PL before?
[05:25:00] <Gin> simcop2387
[05:25:12] <ology> Never!
[05:25:24] <simcop2387> I've written them.  Those are usually using a perl module called ExtUtils::MakeMaker to build perl modules and install them
[05:25:30] <simcop2387> it makes a makefile
[05:25:50] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 244 seconds)
[05:26:06] <Gin> Wait, let me check on that file for the module you provided.
[05:26:27] <simcop2387> there is also Module::Install but please ignore that it exists
[05:26:48] *** Joins: pucara (~i@181.94.141.25)
[05:26:50] <Gin> use inc::Module::Install;
[05:26:55] <Gin> Oops
[05:27:11] <Gin> Why do you recommend I ignore it?
[05:27:15] <Gin> simcop2387
[05:27:45] <simcop2387> it has many bugs, and many fundamental problems and isn't actively maintained so they won't be fixed
[05:28:26] <simcop2387> There's also Build.PL but those are using Module::Build instead.  it's an alternative to ExtUtils::MakeMaker that does everything in pure perl.
[05:29:05] <simcop2387> And there's also Module::Build::Tiny that handles the 90% of cases that most people ever have
[05:29:15] *** Joins: theorbcloud (uid212150@id-212150.brockwell.irccloud.com)
[05:29:31] <Gin> simcop2387: Thanks! I will check on that later.
[05:35:51] *** Joins: Su-Shee (~Susanne@p4ff497d1.dip0.t-ipconnect.de)
[05:37:38] <simcop2387> for anyone who wants to watch chaos, someone put a badly secured evalbot on another network, here's some logs.  nsfw.  https://perl.bot/raw/231myi
[05:39:06] *** Quits: Su-Shee_ (~Susanne@p4ffc7b62.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[05:39:36] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[05:43:33] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[05:44:42] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 272 seconds)
[05:48:44] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[05:52:46] <xenu>  /w 3
[05:53:13] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 244 seconds)
[05:57:51] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[06:00:43] *** Joins: deadmarshal (~deadmarsh@95.38.113.167)
[06:02:31] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 244 seconds)
[06:05:04] *** Quits: deadmarshal (~deadmarsh@95.38.113.167) (Ping timeout: 245 seconds)
[06:06:58] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[06:10:32] *** Quits: leitz (~LeamHall@072-182-158-173.res.spectrum.com) (Ping timeout: 264 seconds)
[06:11:44] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 264 seconds)
[06:16:01] *** Joins: mattil (~mattil@87-92-46-97.bb.dnainternet.fi)
[06:17:08] *** Joins: Blu-ray (~Blu-ray@user/zapdos)
[06:17:10] *** Joins: leitz (~LeamHall@072-182-158-173.res.spectrum.com)
[06:20:48] *** Quits: mattil (~mattil@87-92-46-97.bb.dnainternet.fi) (Ping timeout: 272 seconds)
[06:25:12] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[06:25:38] *** Quits: RandalSchwartz (~Adium@c-73-221-215-233.hsd1.wa.comcast.net) (Quit: Leaving.)
[06:30:18] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 272 seconds)
[06:34:19] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[06:36:24] *** Quits: Gin (~Gin@2001:250:4000:822d:7c6e:284b:bec5:e) (Quit: Client closed)
[06:38:49] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 245 seconds)
[06:43:29] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[06:48:20] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 264 seconds)
[06:53:17] *** Quits: SincereFox (uid337158@user/sincerefox) (Quit: Connection closed for inactivity)
[06:54:27] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 268 seconds)
[07:01:14] *** Quits: zakame (~zakame@user/zakame) (Quit: WeeChat 2.9)
[07:01:35] *** Joins: zakame (~zakame@user/zakame)
[07:01:42] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[07:04:05] *** FinnElija is now known as Guest9778
[07:04:05] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:04:05] *** Quits: Guest9778 (~finn_elij@user/finn-elija/x-0085643) (Killed (tin.libera.chat (Nickname regained by services)))
[07:04:05] *** finn_elija is now known as FinnElija
[07:04:17] *** Joins: tg (~tg@rockylinux/infra/tg)
[07:06:33] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 252 seconds)
[07:07:39] *** Joins: pj (~pj@ghettoforge/pj)
[07:10:50] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[07:15:56] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 264 seconds)
[07:29:06] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[07:34:19] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 272 seconds)
[07:38:13] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[07:40:46] *** Joins: EvanCarroll (~ecarroll@c-76-30-156-101.hsd1.tx.comcast.net)
[07:43:08] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 272 seconds)
[07:45:20] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 264 seconds)
[07:47:22] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[07:50:44] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 264 seconds)
[07:51:12] *** Quits: leitz (~LeamHall@072-182-158-173.res.spectrum.com) (Quit: nappy time)
[07:51:35] *** Joins: leitz (~LeamHall@072-182-158-173.res.spectrum.com)
[07:51:55] *** Quits: Rubin (~rubin@2001:470:69fc:105::17e) (Ping timeout: 264 seconds)
[07:51:55] *** Quits: demostanis[m] (~demostani@2001:470:69fc:105::2c2) (Ping timeout: 264 seconds)
[07:52:15] *** Quits: BigRedS[m] (~bigredsma@2001:470:69fc:105::ec0) (Ping timeout: 244 seconds)
[07:52:15] *** Quits: latk (~latk@2001:470:69fc:105::255) (Ping timeout: 244 seconds)
[07:52:15] *** Quits: gordonfish[m] (~gordonfis@2001:470:69fc:105::31) (Ping timeout: 244 seconds)
[07:52:31] *** Quits: roy[m] (~roybitnex@2001:470:69fc:105::93b) (Ping timeout: 264 seconds)
[07:52:31] *** Quits: ilmari_ (~ilmari@user/ilmari) (Ping timeout: 264 seconds)
[07:52:38] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 272 seconds)
[07:56:01] *** Joins: Martchus_ (~martchus@2a01:c22:7a46:7900:d250:99ff:fe49:3cce)
[07:56:19] *** Quits: Martchus (~martchus@2a01:c22:6e60:8800:d250:99ff:fe49:3cce) (Ping timeout: 245 seconds)
[07:56:29] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[08:00:50] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 244 seconds)
[08:05:36] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[08:06:38] *** Joins: Adura (~Adura@user/adura)
[08:09:49] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 244 seconds)
[08:14:43] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[08:17:31] <zgu> why did it take c++ so long to add a simple contains() method to std::map
[08:18:05] <zgu> that stupid find() != end() dance is the most confusing thing ever
[08:18:57] <PlayerOne> Oh dear
[08:19:01] <PlayerOne> Hey all ^^
[08:19:07] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 244 seconds)
[08:19:35] <PlayerOne> The issue is in returning the removed character's pos on the line, but..
[08:19:54] <PlayerOne> It resets every time because the previous one was already removed
[08:20:29] <PlayerOne> so like s/a// and then $-[0] won't work if multiple 'a's appear on the line
[08:20:46] <PlayerOne> And 'aaa' would result in 0, 0, 0 positions of removed
[08:21:09] <PlayerOne> while (s/a//) print $-[0] I meant
[08:21:50] <PlayerOne> Is it possible to somehow return the actual position of the removed charater relatively to the initial value?
[08:21:58] *** Quits: ericlee (~ericlee@2601:647:4681:3420::1) (Remote host closed the connection)
[08:22:48] <PlayerOne> I think of some variable of position of the previously removed char + difference between new and previous etc, but it hasn't work so far...
[08:29:06] <PlayerOne> Example: https://l.perl.bot/p/3i7a5w
[08:29:06] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[08:29:12] *** Quits: leitz (~LeamHall@072-182-158-173.res.spectrum.com) (Quit: nappy time)
[08:29:55] <PlayerOne> $-[0] is reset for continued matches
[08:30:11] <PlayerOne> Which is understandable, but I don't really get how to track it
[08:32:57] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[08:37:34] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 245 seconds)
[08:39:07] *** Quits: Adura (~Adura@user/adura) (Killed (NickServ (GHOST command used by Adurah!~Adura@142.126.117.177)))
[08:39:21] *** Joins: Adura (~Adura@user/adura)
[08:40:51] *** Quits: jabberwok (~wlindley@75.105.20.104) (Quit: Leaving.)
[08:42:05] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[08:55:58] *** Joins: LuksNuke (~LuksNuke@94.242.245.63)
[08:58:45] *** Quits: riceandbeans (~zach@user/riceandbeans) (Ping timeout: 252 seconds)
[09:01:36] * GumbyPAN CPAN Upload: SPVM-0.9006 by KIMOTO https://metacpan.org/release/KIMOTO/SPVM-0.9006
[09:08:37] *** Quits: theorbcloud (uid212150@id-212150.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[09:11:23] *** Joins: zephyr_ (~zephyr@59.88.25.191)
[09:14:08] *** Joins: deadmarshal (~deadmarsh@95.38.113.167)
[09:20:29] *** Joins: riceandbeans (~zach@dev07.raasta.org)
[09:20:29] *** Quits: riceandbeans (~zach@dev07.raasta.org) (Changing host)
[09:20:29] *** Joins: riceandbeans (~zach@user/riceandbeans)
[09:21:17] *** Quits: thunder (~thunder@user/thunder) (Killed (zirconium.libera.chat (Nickname regained by services)))
[09:21:33] *** Joins: thunder (~thunder@user/thunder)
[09:28:21] *** Quits: deadmarshal (~deadmarsh@95.38.113.167) (Ping timeout: 244 seconds)
[09:36:11] *** Joins: grovershor_ (~groversho@193.36.225.184)
[09:36:19] *** Quits: grovershor (~groversho@193.36.225.184) (Ping timeout: 264 seconds)
[09:39:57] *** Quits: LuksNuke (~LuksNuke@94.242.245.63) (Remote host closed the connection)
[09:45:20] *** Quits: jpmh (uid445439@id-445439.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[09:47:17] *** Joins: ufobat__ (~martin@dynamic-095-117-092-027.95.117.pool.telefonica.de)
[09:48:00] *** Joins: deadmarshal (~deadmarsh@95.38.113.167)
[09:49:48] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 272 seconds)
[09:51:28] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[09:52:23] *** Joins: jplesnik_ (~jplesnik@83.240.60.17)
[09:54:14] *** Quits: Linux77 (~kvirc@186.235.105.225) (Ping timeout: 272 seconds)
[09:54:38] *** Joins: Linux77 (~kvirc@186.235.105.225)
[09:55:44] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 244 seconds)
[09:58:22] *** Joins: brtastic (~Thunderbi@185.24.91.138)
[10:00:35] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[10:02:07] *** Quits: thunder (~thunder@user/thunder) (Remote host closed the connection)
[10:05:38] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 272 seconds)
[10:06:00] *** Joins: horsepatat (~horsepata@212.3.198.119)
[10:08:49] *** Joins: brtastic1 (~Thunderbi@ec2-35-176-113-228.eu-west-2.compute.amazonaws.com)
[10:09:26] *** Quits: brtastic (~Thunderbi@185.24.91.138) (Ping timeout: 272 seconds)
[10:09:26] *** brtastic1 is now known as brtastic
[10:09:43] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[10:14:30] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 272 seconds)
[10:18:50] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[10:19:24] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! 👋)
[10:19:33] *** Joins: thunder (~thunder@185.163.110.73)
[10:19:44] *** Quits: thunder (~thunder@185.163.110.73) (Changing host)
[10:19:44] *** Joins: thunder (~thunder@user/thunder)
[10:21:18] *** jplesnik_ is now known as jplesnik
[10:21:28] *** Quits: Linux77 (~kvirc@186.235.105.225) (Ping timeout: 272 seconds)
[10:21:29] *** Quits: horsepatat (~horsepata@212.3.198.119) (Read error: Connection reset by peer)
[10:22:58] *** Joins: Linux77 (~kvirc@186.235.105.225)
[10:23:26] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 244 seconds)
[10:27:19] *** Joins: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de)
[10:27:58] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[10:28:05] *** Quits: riceandbeans (~zach@user/riceandbeans) (Quit: rebooting)
[10:28:24] *** Quits: Linux77 (~kvirc@186.235.105.225) (Ping timeout: 245 seconds)
[10:28:48] *** Joins: Linux77 (~kvirc@186.235.105.225)
[10:32:52] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 272 seconds)
[10:34:14] *** Quits: Linux77 (~kvirc@186.235.105.225) (Ping timeout: 245 seconds)
[10:34:54] *** Joins: mattil (~mattil@83.145.199.6)
[10:35:16] *** Joins: riceandbeans (~zach@user/riceandbeans)
[10:37:04] <Botje-> zgu: because it saves a lookup call in the positive case.
[10:37:05] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[10:37:23] *** Quits: Manderson_ (~manderson@c-24-1-11-40.hsd1.il.comcast.net) (Read error: Connection reset by peer)
[10:38:02] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[10:38:51] *** Quits: EvanCarroll (~ecarroll@c-76-30-156-101.hsd1.tx.comcast.net) (Ping timeout: 252 seconds)
[10:40:15] <Botje-> PlayerOne: uh, I'm not sure what you expected
[10:40:42] <Botje-> given 'xxxaaa', the first iteration will remove an a at offset 3
[10:41:02] <Botje-> PlayerOne: the second iteration sees 'xxxaa' and will remove an a *also* at offset 3.
[10:41:12] *** Quits: mattil (~mattil@83.145.199.6) (Ping timeout: 244 seconds)
[10:41:19] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 245 seconds)
[10:41:30] <Botje-> PlayerOne: step back and tell us what you're trying to achieve
[10:41:44] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[10:42:17] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:42:19] *** Quits: mattil (~mattil@helsinki.portalify.com) (Read error: Connection reset by peer)
[10:42:31] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:43:24] *** Quits: deadmarshal (~deadmarsh@95.38.113.167) (Ping timeout: 245 seconds)
[10:43:34] *** Joins: Manderson (~manderson@c-24-1-11-40.hsd1.il.comcast.net)
[10:43:46] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[10:44:23] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:44:29] <Botje-> zgu: if (auto it = map.find(key); it != end(map)) { // do something with *it } else { // insert? bail? }
[10:45:42] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[10:46:10] *** Joins: Gin (~Gin@172.104.48.83)
[10:46:12] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[10:46:23] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:46:41] *** Joins: horsepatat (~horsepata@212.3.198.119)
[10:47:43] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[10:48:20] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:49:39] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[10:50:16] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:50:30] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 244 seconds)
[10:51:08] *** thunder is now known as Guest4448
[10:51:09] *** Joins: thunder (~thunder@user/thunder)
[10:51:41] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[10:52:22] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:53:08] *** Quits: diskin (~diskin@87.117.49.217) (Killed (NickServ (GHOST command used by diskin_!~diskin@ec2-18-158-74-148.eu-central-1.compute.amazonaws.com)))
[10:53:08] *** Joins: diskin_ (~diskin@ec2-18-158-74-148.eu-central-1.compute.amazonaws.com)
[10:53:36] *** Quits: Guest4448 (~thunder@user/thunder) (Ping timeout: 244 seconds)
[10:53:47] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[10:54:24] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:55:19] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[10:55:43] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[10:56:20] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:57:39] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[10:58:20] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:59:35] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[10:59:39] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 245 seconds)
[11:00:12] *** Joins: mattil (~mattil@helsinki.portalify.com)
[11:01:31] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[11:01:55] <Grinnz> perlbot: search freenode
[11:01:59] <perlbot> Grinnz: [This is an automated message, due to the recent political issues on the freenode network we have decided to move (with most of the freenode staff) to irc.libera.chat #perl.] [freenode ops is thrig paladin kitchen bod pink_mist Chris62vw khisanth tybalt89 simcop2387 sili tag BinGOs beth mst dhoss hobbs jaye tm604 geck Botje | /raw stats p | /msg Ch... [Output truncated. http://perl.bot/p/18984c ]
[11:02:00] *** Joins: mattil (~mattil@helsinki.portalify.com)
[11:02:10] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[11:02:22] <Grinnz> perlbot: forget This
[11:02:22] <perlbot> Grinnz: Forgot This
[11:02:53] <Grinnz> perlbot: raku =~ s/freenode/libera/
[11:02:53] <perlbot> Grinnz: Stored raku as a language in the same family as perl5. It is not meant to replace or succeed perl5. perl5 continues to be updated and maintained as usual since the raku release. an introduction to raku: https://raku.guide/ the raku irc channel on libera is #raku. Formerly known as perl6
[11:02:59] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[11:03:15] <Grinnz> perlbot: netsplit =~ s/freenode/libera/
[11:03:15] <perlbot> Grinnz: Stored netsplit as http://en.wikipedia.org/wiki/Netsplit - libera is many servers. When one disconnects, that's a netsplit.
[11:03:31] *** Joins: mattil (~mattil@airio.portalify.com)
[11:04:26] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[11:05:22] *** Joins: EvanCarroll (~ecarroll@c-73-32-86-244.hsd1.tx.comcast.net)
[11:05:56] *** thunder is now known as Guest9668
[11:06:02] *** Joins: thunder (~thunder@user/thunder)
[11:06:33] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[11:08:04] *** Quits: Guest9668 (~thunder@user/thunder) (Ping timeout: 244 seconds)
[11:09:06] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 244 seconds)
[11:12:12] *** Quits: thunder (~thunder@user/thunder) (Ping timeout: 244 seconds)
[11:13:34] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[11:14:24] *** Joins: Michelle (~michelle@203.206.128.220)
[11:17:59] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 245 seconds)
[11:18:55] *** Joins: Judabuda (~ok@user/judabuda)
[11:22:41] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[11:27:58] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 272 seconds)
[11:31:48] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[11:35:35] *** Joins: seand (~seand@69.54.136.33)
[11:36:17] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 244 seconds)
[11:38:32] *** Joins: deadmarshal (~deadmarsh@95.38.113.167)
[11:40:55] *** Quits: randir (~randir@95-25-113-192.broadband.corbina.ru) (Remote host closed the connection)
[11:40:55] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[11:42:45] *** Joins: huf_ (~huf@45.95.44.141)
[11:43:03] *** Quits: deadmarshal (~deadmarsh@95.38.113.167) (Ping timeout: 268 seconds)
[11:45:29] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 245 seconds)
[11:49:29] *** Joins: feriman (~feriman@188.163.113.127)
[11:50:02] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[11:51:32] *** Quits: markgrad_ (~markgrady@204.246.246.254) (Remote host closed the connection)
[11:52:10] *** Joins: markgrady (~markgrady@204.246.246.254)
[11:53:53] *** Joins: gordonfish[m] (~gordonfis@2001:470:69fc:105::31)
[11:54:46] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 268 seconds)
[11:58:05] *** Joins: ilmari_ (~ilmari@user/ilmari)
[11:58:05] *** Joins: latk (~latk@2001:470:69fc:105::255)
[11:58:05] *** Joins: BigRedS[m] (~bigredsma@2001:470:69fc:105::ec0)
[11:58:05] *** Joins: Rubin (~rubin@2001:470:69fc:105::17e)
[11:58:05] *** Joins: demostanis[m] (~demostani@2001:470:69fc:105::2c2)
[11:58:10] *** Joins: Pali (~pali@user/pali)
[11:58:17] *** Joins: roy[m] (~roybitnex@2001:470:69fc:105::93b)
[11:59:09] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[12:00:16] *** Quits: feriman (~feriman@188.163.113.127) (Quit: WeeChat 3.1)
[12:00:37] *** Joins: art1 (~romeyke@p200300ccdf086700484ac29144f6087d.dip0.t-ipconnect.de)
[12:03:40] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 244 seconds)
[12:06:26] *** Joins: habamax (~habamax@user/habamax)
[12:06:31] *** Quits: horsepatat (~horsepata@212.3.198.119) (Read error: Connection reset by peer)
[12:07:16] *** Joins: horsepatat (~horsepata@212.3.198.119)
[12:07:25] *** Quits: matt (~matt@user/matt) (Quit: Lost terminal)
[12:08:16] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[12:12:59] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 252 seconds)
[12:13:34] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 272 seconds)
[12:17:47] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[12:18:32] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[12:18:52] *** Quits: Judabuda (~ok@user/judabuda) (Read error: Connection reset by peer)
[12:18:58] *** Joins: randir (~randir@93.159.239.42)
[12:19:24] *** Joins: Judabuda (~ok@user/judabuda)
[12:22:30] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 264 seconds)
[12:24:22] *** Joins: choroba (~E.Choroba@89-101-243-80.cust.centrio.cz)
[12:26:31] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[12:31:03] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 244 seconds)
[12:35:40] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[12:37:36] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:39:40] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 252 seconds)
[12:40:29] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 252 seconds)
[12:44:46] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[12:49:30] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 264 seconds)
[12:53:54] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[12:56:09] <Altreus> salut
[12:56:21] <huf_> servus
[12:56:25] <Altreus> shan't
[12:56:28] <BinGOs> bore da
[12:56:43] <lopid> nikto
[12:57:02] * GumbyPAN CPAN Upload: POE-Component-Server-NSCA-0.12 by BINGOS https://metacpan.org/release/BINGOS/POE-Component-Server-NSCA-0.12
[12:58:26] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 244 seconds)
[12:59:51] *** Quits: zephyr_ (~zephyr@59.88.25.191) (Quit: leaving)
[13:01:57] <Altreus> Anyone catch LeoNerd's talk? he came across so confident!
[13:02:08] <Altreus> Also I forget how interesting parsing stuff is
[13:02:18] <Altreus> I need to invent a grammar so I can make Raku parse it
[13:02:31] <lopid> attractively so?
[13:02:32] <Yaakov> LeoNerd has confidence oozing out of every crevice.
[13:02:41] <Altreus> ok well Yaakov is back
[13:02:42] *** Joins: KnoP (~KnoP@p57b1920f.dip0.t-ipconnect.de)
[13:02:49] <Yaakov> And yet he *still* refuses to see a specialist...
[13:02:50] <Altreus> lopid: well I mean I
[13:02:54] <lopid> :)
[13:03:02] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[13:03:21] <Altreus> There was humour in the talk that was not in the script, that's for sure
[13:03:40] <Yaakov> Altreus: Is it a good thing that Ya'akov is back?
[13:04:07] <Altreus> perlbot: 8ball Is it a good thing that Ya'akov is back?
[13:04:08] <perlbot> Altreus: Cannot predict now
[13:04:13] <Altreus> psh
[13:04:26] <Altreus> Of course it is!
[13:04:37] <Yaakov> I find that eing prepared and knowing what you are talking about are really helpful concerning confidence.
[13:04:38] <Altreus> Who else will make us uncomfortable with apparently benign words?
[13:05:15] <Altreus> Yaakov: While I agree with that, personally I find that I cannot be more prepared in my command of my native language, and yet I forget how to use it at short notice
[13:05:16] <Yaakov> I discomfit you, Altreus?
[13:05:26] <Altreus> Yes, but since you spelled it right I'm going to let you off
[13:05:36] <Altreus> I remain unfazed
[13:05:56] <Yaakov> I have no idea... I hve to think about this...
[13:06:31] <Altreus> What I'm saying is that you can prepare as much as you like but to do things off-the-cuff takes confidence in acting off-the-cuff, which you can't really study
[13:06:52] <Yaakov> Make that, "had no idea".
[13:07:05] <Yaakov> Though many would testify the former is true.
[13:07:12] <Altreus> I think I'm getting better, though, and although I don't have a huge audience I thing I can attribute it to my streams
[13:07:16] <Altreus> s/thing/think/
[13:08:06] *** Quits: Shaeto (~Shaeto@94.25.234.158) (Ping timeout: 264 seconds)
[13:08:13] <Yaakov> Altreus: It's true that preparation and expertise are necessary but insufficient for confidence. And, in the extreme case, some are confident without having anything to say and no clue, so...
[13:08:39] <Altreus> Ah!
[13:08:44] <Altreus> Those are full-time streamers :D
[13:09:54] <Yaakov> Altreus: Some time ago, I had to start speaking to groups. Then, one of my classes at a trade show went from 30 people in the room when proposed to 330. I figured out that I just needed to be Ya'akov and talk about what I know the way I talk about stuff to succeed.
[13:10:05] <Altreus> yepyep
[13:10:19] <Altreus> well personally I find I do far better on discussions than on presentations
[13:10:29] <Altreus> So honestly I think I would welcome questions in chat
[13:10:53] <Yaakov> Altreus: But when I was teaching two-day seminars, I'd done it so many times it was a kind of autopilot even though it was actually me speaking and I even varied the content for the audience.
[13:11:11] <Yaakov> Altreus: You could structure your talks to resemble disucssions.
[13:11:45] <Yaakov> perlbot: Yaakov
[13:11:45] <perlbot> Yaakov: יעקב
[13:11:49] <Yaakov> Trye.
[13:11:53] <Yaakov> True, too.
[13:12:19] <Yaakov> But my terminal has that backwards. :(
[13:14:05] *** Joins: pj (~pj@ghettoforge/pj)
[13:14:20] <Yaakov> I wonder how to fix the right-to-left thing with this terminal.
[13:16:12] <Altreus> I don't know whether it is backwards for me!
[13:16:19] <Altreus> Also I don't have anything to talk about
[13:16:33] <Altreus> HOWEVER I am vaguely considering starting a coding section on my twitch channel
[13:16:42] <Altreus> If nothing else, to get me to work on my own projects!
[13:16:54] <Altreus> That's basically a talk structured like a discussion, right?
[13:17:23] <Yaakov> Altreus: the י should be on the right.
[13:17:34] <Altreus> nah it was first
[13:17:46] <Altreus> maybe there's no RTL in the factoid?
[13:18:04] <Yaakov> The same text pasted into a web browser properly renders.
[13:18:10] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 272 seconds)
[13:18:16] *** Quits: EvanCarroll (~ecarroll@c-73-32-86-244.hsd1.tx.comcast.net) (Ping timeout: 244 seconds)
[13:18:59] <Altreus> I find this interesting largely because it implies an RTL mark got copied
[13:18:59] *** Quits: Judabuda (~ok@user/judabuda) (Read error: Connection reset by peer)
[13:19:07] <Yaakov> Altreus: It could be, you could also use constrained questions to the audience to create interaction and give you some touchpoints to work with. Open qwuerstions from the audience will probably fragment the talk.
[13:19:23] <Yaakov> But you could ask what they do about X, or the like, and use that.
[13:19:25] *** Joins: Judabuda (~ok@user/judabuda)
[13:20:01] <Gin> Does "qr/STRING" just wrap the string into a regex?
[13:20:30] <Gin> "qr/STRING/" or "qr/STRING"?
[13:20:42] <choroba> qr/STRING/
[13:20:55] <choroba> or qr(STRING) or qr{STRING} or ...
[13:21:10] <Gin> What is the syntax for // here?
[13:21:33] <Gin> Intuitively I can come up with a expr qr(STRING)
[13:21:50] <choroba> https://perldoc.pl/perlop#qr
[13:21:52] <Paperbot> Link title(s): [ perlop - Perl operators and precedence - Perldoc Browser ]
[13:24:22] <Yaakov> Altreus: Did you try it?
[13:26:33] <Yaakov> Erp! I have to get going on my workout! BBL perlish folks
[13:26:52] <Altreus> workout? That sounds like self-discipline
[13:26:55] <Altreus> We'll have none of that here
[13:27:08] <Altreus> Yaakov: try what? Pasting it? I try now ...
[13:27:23] <Altreus> Yaakov: pastes correctly in slack
[13:28:14] *** Joins: Ovid (~Ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[13:29:17] *** Joins: _DaTa (~DaTa@user/data)
[13:29:40] <Altreus> Gin: not sure if your question got answered cos I'm not sure what the question was :D
[13:29:59] *** Quits: DaTa (~DaTa@user/data) (Ping timeout: 252 seconds)
[13:29:59] *** _DaTa is now known as DaTa
[13:34:10] *** Quits: pucara (~i@181.94.141.25) (Quit: Lost terminal)
[13:39:54] *** Joins: deadmarshal (~deadmarsh@95.38.113.167)
[13:40:29] <Gin> What is the difference between "my $a, $b, $c" and "my ($a, $b, $c)"? 
[13:40:46] <Gin> Does the parenthesis mean the scope of "my" ?
[13:40:52] <Altreus> yes basically
[13:40:54] <lopid> it groups the list
[13:41:05] <Altreus> the other is (my $a), $b, $c, which is an error
[13:41:15] <Altreus> (although you shouldn't use $a and $b)
[13:42:07] <Gin> Oops! My bad
[13:42:13] <Gin> I forgot the predefined vars
[13:42:28] <Altreus> It's less bad recently, but it's still advisable not to
[13:42:56] <Altreus> I think it's at least OK for examples :)
[13:43:03] <Gin> Why is "(my $hello), $world" an error?
[13:43:15] <Altreus> cos you haven't declared $world!
[13:43:17] <Altreus> :D
[13:43:33] <Gin> I thought it might be declared as a global var.
[13:43:38] <Gin> without initialization
[13:44:04] <Altreus> no such thing, really
[13:44:24] <Altreus> If you use it without first 'my', then it tries to look up the variable and it doesn't exist
[13:44:37] <Gin> $world = 'abc';
[13:44:38] <Altreus> You can also use 'our', but it's not "global", it's "package"
[13:44:40] <Gin> is this correct
[13:44:44] *** Quits: deadmarshal (~deadmarsh@95.38.113.167) (Ping timeout: 264 seconds)
[13:44:53] <Altreus> only if you first have my $world;
[13:45:01] <Altreus> or do the whole thing: my $world = 'abc';
[13:45:02] <Gin> I got it.
[13:45:22] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[13:45:26] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Read error: Connection reset by peer)
[13:45:33] *** Quits: mattil (~mattil@airio.portalify.com) (Read error: Connection reset by peer)
[13:45:52] <Gin> I remember I have seen something saying declaring a var without any scope keyword preceding it.
[13:46:06] *** Joins: mattil (~mattil@airio.portalify.com)
[13:46:18] <Gin> It might just be some nonsense in my mind though.
[13:46:28] <Altreus> not under "use strict"
[13:46:54] <Altreus> If you don't "use strict" then the var is just undef until you use it, but this is silly, because you want the computer to tell you if you've made a mistake
[13:47:05] <Altreus> s/until you use it/until you set it/
[13:47:07] * GumbyPAN CPAN Upload: Feed-Find-0.10 by DAVECROSS https://metacpan.org/release/DAVECROSS/Feed-Find-0.10
[13:47:13] <Altreus> (assign to it)
[13:47:26] <Altreus> eval: $world = 'abc'; say $world
[13:47:28] <perlbot> Altreus: abc 
[13:47:31] <Altreus> sweval: $world = 'abc'; say $world
[13:47:32] <Gin> Altreus: Thanks! I will check on that later
[13:47:33] <perlbot> Altreus: ERROR: Global symbol "$world" requires explicit package name (did you forget to declare "my $world"?) at (IRC) line 1. Global symbol "$world" requires explicit package name (did you forget to declare "my $world"?) at (IRC) line 1. 
[13:47:47] <Altreus> simcop2387: how come it errors twice? ^
[13:48:06] <Altreus> in fact it says ERROR once but gives it twice
[13:48:16] <huf_> two worlds?
[13:48:31] <Gin> How come the first one is correct?
[13:48:36] <huf_> i think you get the error twice because that's how perl is written :D
[13:48:38] <Altreus> Does it keep trying to parse more errors?
[13:48:50] <huf_> Gin: because strict isnt on
[13:48:51] <Altreus> Gin: because I didn't tell perl to use strict :)
[13:48:54] <huf_> and then it's just snot
[13:49:00] <huf_> you can smear it around
[13:49:02] <Altreus> Gin: sweval = strict+warnings eval
[13:49:07] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[13:49:33] <Gin> I previously thought that meant software eval. :-)
[13:50:02] <Altreus> :)
[13:50:25] <Gin> What does "bot" in "Perlbot" mean?
[13:50:31] <huf_> "bot"
[13:50:35] <LeoNerd> As opposed to that fancy hardware eval you get on some fancy SPARCs
[13:50:42] <Altreus> ya
[13:50:42] <huf_> it's like a robot, but it hasnt got arms
[13:50:45] <huf_> only a network connection
[13:50:55] *** Joins: txtsd (~txtsd@user/txtsd)
[13:50:58] <Gin> Cool!
[13:51:00] <Adura> Gin, one of these guys: https://zelda.fandom.com/wiki/Bot
[13:51:01] <Paperbot> Link title(s): [ Bot - Zelda Wiki ]
[13:51:16] <huf_> legends say it also means "stick"
[13:51:20] <huf_> but only legends
[13:51:51] <Altreus> bits and bots
[13:53:03] *** Quits: mattil (~mattil@airio.portalify.com) (Ping timeout: 272 seconds)
[13:53:12] <Gin> huf: Thanks! That is fun.
[13:53:19] <Gin> bits?
[13:54:01] <huf_> very naughty bits indeed
[13:54:10] <Altreus> according to that article, bits don't jump
[14:01:59] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[14:02:36] *** Joins: mattil (~mattil@helsinki.portalify.com)
[14:13:02] *** Quits: grovershor_ (~groversho@193.36.225.184) (Ping timeout: 244 seconds)
[14:13:11] *** Joins: grovershor (~groversho@193.36.225.171)
[14:17:10] * GumbyPAN CPAN Upload: App-Acmeman-3.08 by SGRAY https://metacpan.org/release/SGRAY/App-Acmeman-3.08
[14:19:07] *** Quits: Judabuda (~ok@user/judabuda) (Read error: Connection reset by peer)
[14:19:25] *** Joins: Judabuda (~ok@user/judabuda)
[14:28:56] *** Joins: Shaeto (~Shaeto@94.25.234.158)
[14:29:54] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[14:33:06] *** Quits: Gin (~Gin@172.104.48.83) (Quit: Client closed)
[14:45:52] *** Joins: feriman (~feriman@188.163.113.127)
[14:53:58] *** Joins: Gin (~Gin@139.177.184.26)
[14:56:26] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 244 seconds)
[14:57:03] <Yaakov> Altreus: I wonder what's up with that RTL thingy...
[15:00:11] <Altreus> obvious assumption is that the terminal is not capable of it
[15:00:27] <Altreus> which of my many virtual terminal things that could be due to, I don't know
[15:00:40] <LeoNerd> RTL ?
[15:01:06] <Yaakov> LeoNerd: Right To Left
[15:01:19] <Yaakov> Resistor Transistor Logic
[15:01:30] <Yaakov> No, the first.
[15:01:54] <Yaakov> Altreus: Yes, I did mean the bit that was causing it to fail.
[15:02:04] <LeoNerd> Yes I know how the acronym expands. I was hoping for more detail
[15:02:47] <Yaakov> Oh, this: 
[15:02:53] <Yaakov> perlbot: yaakov
[15:02:53] <perlbot> Yaakov: יעקב
[15:03:14] <Yaakov> The י should be on the right.
[15:04:07] <Yaakov> My terminal shows it backwards but cut-and-paste into something that handles RTL properly shows it right.
[15:04:10] <xenu> try copying it and pasting it in something that isn't a terminal, that should tell you where is the problem
[15:04:21] <xenu> ah, you already did it
[15:04:48] <Yaakov> I always try the obvious, it's my special talent.
[15:05:00] <LeoNerd> Oh, ... yeah. Unicode's RTL doesn't really play at all well with terminal models
[15:06:56] <Yaakov> I could have sworn I had it working. But I am using mosh now, so that's another layer...
[15:07:14] <Yaakov> But mosh is brilliant and I rarely need RTL, so...
[15:10:50] *** Joins: Su-Shee_ (~Susanne@p4ffc76bd.dip0.t-ipconnect.de)
[15:11:06] <xenu> hmm... considering how broken RTL in terminals is, i wonder how people speaking those languages are using irc
[15:11:40] <Yaakov> xenu: They fight to get a working configuration. It can be made to work, I've done it.
[15:11:49] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[15:11:52] *** Quits: Blu-ray (~Blu-ray@user/zapdos) (Quit: Connection closed)
[15:11:55] <Yaakov> It breaks easily if you start adding stuff in.
[15:12:24] <huf_> maybe they just type in ascii?
[15:12:31] <huf_> like we all used to do in the bad old days
[15:13:26] *** Quits: Su-Shee (~Susanne@p4ff497d1.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[15:15:54] *** Quits: grovershor (~groversho@193.36.225.171) (Ping timeout: 264 seconds)
[15:16:36] *** Quits: KnoP (~KnoP@p57b1920f.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[15:18:03] *** Quits: feriman (~feriman@188.163.113.127) (Quit: WeeChat 3.1)
[15:19:21] *** Quits: Judabuda (~ok@user/judabuda) (Read error: Connection reset by peer)
[15:19:32] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 264 seconds)
[15:19:56] *** Joins: Judabuda (~ok@user/judabuda)
[15:24:48] *** Joins: Masklin_Gurder (~joel@93.182.183.85)
[15:29:47] *** Joins: azed (~azed@160.159.122.89)
[15:31:28] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 252 seconds)
[15:34:24] *** Quits: huf_ (~huf@45.95.44.141) (Remote host closed the connection)
[15:34:40] <Gin> Will "my $hello, $world, $abc;" result in errors if $world and $abc have been declared before?
[15:35:02] <Gin> I mean I am considering something like comma expr in C
[15:35:09] *** Quits: kixx (~kixx@user/kixx) (Read error: Connection reset by peer)
[15:36:20] <Yaakov> Gin: What happens when you try it?
[15:38:10] <Gin> It doesn't return any errors.
[15:38:43] <choroba> now try with my ($hello, $world, $abc);
[15:39:05] <Yaakov> If you omit the () you will get errors.
[15:39:21] <Yaakov> But if you don't, you will not get errors.
[15:39:52] <Gin> my ($world, $abc) = (1,2);
[15:40:00] <Gin> my $hello = 0, $world, $abc;
[15:40:12] <Gin> The above doesn't return any error.
[15:40:21] <xenu> sweval: my $hello = 0, $world, $abc;
[15:40:22] <perlbot> xenu: ERROR: Global symbol "$world" requires explicit package name (did you forget to declare "my $world"?) at (IRC) line 1. Global symbol "$abc" requires explicit package name (did you forget to declare "my $abc"?) at (IRC) line 1. 
[15:40:30] <haj> You should safeguard against this with 'use strict'
[15:40:30] <xenu> eval: my $hello = 0, $world, $abc;
[15:40:31] <perlbot> xenu: No output.
[15:40:55] <vague> sweval: my $world; my $hello = 0, $world;
[15:40:56] <perlbot> vague: No output.
[15:41:04] <vague> Think he meant that
[15:41:09] <Yaakov> I did assume you were using strict. My mistake.
[15:41:09] <Gin> "use strict" is enabled in my code
[15:41:18] * GumbyPAN CPAN Upload: Text-Amuse-Compile-1.64 by MELMOTHX https://metacpan.org/release/MELMOTHX/Text-Amuse-Compile-1.64
[15:41:29] <Yaakov> Gin: Do you use perl on the command line to test code?
[15:41:30] *** Joins: clf59 (~clf59@user/clf59)
[15:41:48] <Gin> I just execute my code with shebang
[15:42:03] <xenu> ah yes, vague is right
[15:42:12] <xenu> anyway, it indeed isn't an error
[15:42:14] <Yaakov> Gin: When you have qeustions like this, perl -e is your friend.
[15:42:26] <xenu> i'm surprised it doesn't warn though
[15:43:03] <Gin> my ($world, $abc) = (1, 2);
[15:43:15] <Gin> my ($hello, $world, $abc) = (0, 1, 2);
[15:43:21] <Gin> That what I have tried.
[15:43:27] <Yaakov> Gin: You can answer many of your own questions, or get better qeustions to ask, if you get into the habit of using perl -e to test code.
[15:43:36] <Gin> Okay
[15:43:42] <xenu> wait, it *does* warn
[15:43:50] <Gin> Yaakov: I'll try it out.
[15:43:54] <xenu> it's just the fact that perlbot doesn't execute the code in void context
[15:44:19] <xenu> sweval: my $world; my $hello = 0, $world; "";
[15:44:21] <perlbot> xenu: Useless use of private variable in void context at (IRC) line 1. 
[15:45:09] <haj> To test syntax with perl -e, I recommend perl -Mstrict -E ...; 
[15:45:19] <Yaakov>  yaakov$ perl -e 'use strict; use warnings;my ($world, $abc) = (1, 2); my ($hello, $world, $abc) = (0, 1, 2);'
[15:45:22] <Yaakov> "my" variable $world masks earlier declaration in same scope at -e line 1.
[15:45:23] <Yaakov> "my" variable $abc masks earlier declaration in same scope at -e line 1.
[15:46:12] <xenu> anyway, assuming that $foo and $bar are already declared: my($foo, $bar); redeclares them which effectively means that it undefs them
[15:46:27] <xenu> my $foo, $bar otoh redeclares $foo, but it doesn't do anything with $bar
[15:46:35] <xenu> it parses as my($foo), $bar
[15:47:45] <Gin> Shouldn't my last snippet result in a error about redeclaration?
[15:47:58] <xenu> warning, not an error
[15:48:08] *** Joins: huf_ (~huf@45.95.44.141)
[15:48:50] <Gin> It doesn't even pop out a warning on my server. :-)
[15:48:58] <xenu> do you have 'use warnings' in your code?
[15:49:02] <Gin> yes
[15:49:12] <Yaakov> Gin: See my one-liner above.
[15:49:25] <Yaakov> If you have use warnings; it will warn.
[15:50:34] <Gin> Yep
[15:50:44] <xenu> i thought that maybe it's about perl version but apparently even perl 5.6 has that warning: https://perl.bot/p/nwbab8
[15:50:45] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[15:50:46] <Gin> It does pop out warnings when using "perl -e"
[15:50:59] <Gin> my version is v5.16.3
[15:51:37] <Gin> But when I run my code as an executable, no warning comes out.
[15:51:49] <xenu> paste your whole code
[15:52:50] <Gin> use strict; use warnings; my ($world, $abc) = (1,2); my ($hello, $world, $abc) = (0, 1, 2);
[15:53:05] <Gin> Just the same code as Yaakov provided above.
[15:53:28] *** Joins: kixx (~kixx@2a02:2f09:341d:a000:c469:2560:f735:1f67)
[15:53:29] *** Quits: kixx (~kixx@2a02:2f09:341d:a000:c469:2560:f735:1f67) (Changing host)
[15:53:29] *** Joins: kixx (~kixx@user/kixx)
[15:53:54] <xenu> weird
[15:54:06] <xenu> are you sure you're running the right file? :P
[15:54:18] <Gin> yep
[15:54:28] <Gin> perl -e 'use strict; use warnings; my $a = 1; my $b = 2; print $a'
[15:54:40] <Gin> And there is no warning when I run this in CLI.
[15:55:12] <Gin> sweval: use strict; use warnings; my $a = 1; my $b = 2; print $a
[15:55:14] <perlbot> Gin: 1
[15:55:16] <xenu> why would this warn?
[15:55:32] <Gin> Oops
[15:55:34] <Gin> It's a typo
[15:55:36] <Gin> sorry
[15:55:50] <Gin> Oh, there is warning now. :-)
[15:57:35] <choroba> Also, don't use "my" with "$a" and "$b", they are special variables used in "sort"
[15:57:45] <choroba> lexicalising them can break sorting
[16:00:32] <Gin> choroba: Oh I see. The reason why my previous snippet doesn't result in warnings is because I use predefined variables "$a" and "$b".
[16:01:03] <gustaf> yeha those are special
[16:02:10] <Gin> That is so weird.
[16:02:51] <Gin> When I run my snippet using "perl -e", there will be warnings.
[16:03:10] <Gin> When I run it with an executable which contains a shebang, there is no warning.
[16:05:30] *** Quits: clf59 (~clf59@user/clf59) (Quit: Textual IRC Client: www.textualapp.com)
[16:07:35] *** Joins: Su-Shee (~Susanne@p4ffc7165.dip0.t-ipconnect.de)
[16:09:05] *** Quits: Su-Shee_ (~Susanne@p4ffc76bd.dip0.t-ipconnect.de) (Ping timeout: 244 seconds)
[16:11:21] * GumbyPAN CPAN Upload: Mojolicious-Plugin-Obrazi-0.11 by BEROV https://metacpan.org/release/BEROV/Mojolicious-Plugin-Obrazi-0.11
[16:19:30] *** Quits: Judabuda (~ok@user/judabuda) (Read error: Connection reset by peer)
[16:19:56] *** Joins: Judabuda (~ok@user/judabuda)
[16:22:28] *** Joins: jabberwok (~wlindley@75.105.20.104)
[16:23:00] <simcop2387> Altreus: it prefixes each STDERR line with ERROR: not sure why it was doubled up really though
[16:24:47] <simcop2387> perlbot: netsplit =~ s/libera/IRC/
[16:24:47] <perlbot> simcop2387: Stored netsplit as http://en.wikipedia.org/wiki/Netsplit - IRC is many servers. When one disconnects, that's a netsplit.
[16:24:59] <simcop2387> no reason for that one to be network specific
[16:26:08] *** Quits: azed (~azed@160.159.122.89) (Ping timeout: 244 seconds)
[16:30:47] *** Quits: Judabuda (~ok@user/judabuda) (Read error: Connection reset by peer)
[16:31:25] *** Joins: Judabuda (~ok@user/judabuda)
[16:32:26] *** Joins: deadmarshal (~deadmarsh@95.38.113.167)
[16:34:29] *** Quits: zakame (~zakame@user/zakame) (Read error: Connection reset by peer)
[16:35:42] *** Quits: Zubi[n] (~rubin@ender.afternet.org) (Ping timeout: 264 seconds)
[16:38:11] *** Joins: tcohen (~tcohen@192.141.149.51)
[16:39:46] <Altreus> simcop2387: huf pointed out that perl probably keeps going to report as many errors as it can
[16:39:58] *** Joins: zakame (~zakame@user/zakame)
[16:40:04] <simcop2387> yea it can, and likely is what happened
[16:41:44] *** Quits: deadmarshal (~deadmarsh@95.38.113.167) (Ping timeout: 264 seconds)
[16:43:15] *** Joins: tg (~tg@rockylinux/infra/tg)
[16:49:55] *** Joins: Zubin (rubin@2600:3c02::f03c:91ff:fe70:4a45)
[16:50:57] *** Joins: deadmarshal (~deadmarsh@95.38.113.167)
[16:56:00] *** Quits: tcohen (~tcohen@192.141.149.51) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:56:58] *** Quits: Nei (~ailin@user/nei) (Quit: killed)
[16:57:09] *** Joins: Nei (~ailin@user/nei)
[16:57:28] *** Joins: tcohen (~tcohen@192.141.149.81)
[17:02:31] *** Quits: deadmarshal (~deadmarsh@95.38.113.167) (Ping timeout: 265 seconds)
[17:04:44] *** Joins: Adoi (~Adoi@user/adoi)
[17:08:51] *** Quits: horsepatat (~horsepata@212.3.198.119) (Read error: Connection reset by peer)
[17:09:19] *** Joins: azed (~azed@160.159.122.89)
[17:12:59] *** Joins: Adois (~Adoi@user/adoi)
[17:16:19] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 245 seconds)
[17:18:47] *** Quits: garo (~garo@ptr-1pln5puxqxmejxq9kws.18120a2.ip6.access.telenet.be) (Ping timeout: 252 seconds)
[17:19:35] *** Quits: Judabuda (~ok@user/judabuda) (Read error: Connection reset by peer)
[17:19:56] *** Joins: Judabuda (~ok@user/judabuda)
[17:21:40] *** Quits: azed (~azed@160.159.122.89) (Read error: Connection reset by peer)
[17:23:56] *** Joins: feriman (~feriman@188.163.113.127)
[17:26:00] *** Joins: magla (~gelignite@55d47962.access.ecotel.net)
[17:39:11] *** Joins: Linux77 (~kvirc@186.235.105.225)
[17:39:44] *** Quits: habamax (~habamax@user/habamax) (Ping timeout: 272 seconds)
[17:48:07] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 268 seconds)
[17:49:05] *** Quits: magla (~gelignite@55d47962.access.ecotel.net) (Quit: Stay safe!)
[17:59:44] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 264 seconds)
[18:00:16] *** Joins: deadmarshal (~deadmarsh@95.38.113.167)
[18:00:40] *** Joins: azed (~azed@160.159.122.89)
[18:00:54] *** Joins: txtsd (~txtsd@user/txtsd)
[18:01:37] *** Joins: jetchisel (jetchisel@user/jetchisel)
[18:07:24] *** Quits: Adois (~Adoi@user/adoi) (Ping timeout: 244 seconds)
[18:09:24] *** Joins: RandalSchwartz (~Adium@c-73-221-215-233.hsd1.wa.comcast.net)
[18:16:06] *** Joins: argento (~argent0@168-227-96-53.ptr.westnet.com.ar)
[18:16:11] *** Quits: brtastic (~Thunderbi@ec2-35-176-113-228.eu-west-2.compute.amazonaws.com) (Ping timeout: 244 seconds)
[18:16:33] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[18:18:02] <Altreus> I do like it when I've gone to the extent of recording a macro in vim because whoever wrote the code at no point had the thought "I've written this several times... maybe I should turn it into a method"
[18:19:57] *** Quits: Judabuda (~ok@user/judabuda) (Read error: Connection reset by peer)
[18:20:25] *** Joins: Judabuda (~ok@user/judabuda)
[18:21:21] *** Joins: gryphn (~gryphon@191.96.106.193)
[18:25:23] *** Quits: feriman (~feriman@188.163.113.127) (Quit: WeeChat 3.1)
[18:25:57] *** Joins: Su-Shee_ (~Susanne@p4ff49646.dip0.t-ipconnect.de)
[18:28:05] *** Quits: Su-Shee (~Susanne@p4ffc7165.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[18:29:45] *** Joins: kylese (~kylese@p5dd8b8c2.dip0.t-ipconnect.de)
[18:32:38] *** Joins: Adoi (~Adoi@user/adoi)
[18:42:12] <Gin> I wonder if "q/STRING/" is equivalent to "q!STRING!"?
[18:42:36] <Gin> The backslash following 'q' can be any delimiter, right?
[18:42:49] <ology> Gin: Tias!
[18:42:56] <ology> perl -E'...
[18:43:07] <Gin> I have run the code
[18:44:03] <Gin> But I failed to find concrete official docs about that.
[18:44:11] <integral> https://perldoc.pl/perlop#Quote-and-Quote-like-Operators
[18:44:13] <Paperbot> Link title(s): [ perlop - Perl operators and precedence - Perldoc Browser ]
[18:44:47] <integral> The special stuff some characters are bracketing delimiters.  And ' retains the non-interpolating behaviour for stuff like qx, m, etc (but not qq''
[18:44:56] <integral> *stuff is
[18:45:38] <ology> In a code review qq'' or q"" would get the evil-eye.
[18:46:38] * GumbyPAN CPAN Upload: App-Greple-8.45 by UTASHIRO https://metacpan.org/release/UTASHIRO/App-Greple-8.45
[18:46:38] * GumbyPAN CPAN Upload: App-csv2tsv-0.581 by TULAMILI https://metacpan.org/release/TULAMILI/App-csv2tsv-0.581
[18:46:41] * GumbyPAN CPAN Upload: App-expandtab-0.011 by TULAMILI https://metacpan.org/release/TULAMILI/App-expandtab-0.011
[18:47:13] <integral> I don't think I've even needed to use m''.
[18:48:21] <integral> eval: "A1" =~ m'[\x41\d]+'; [qr'\x41\d', $&]
[18:48:22] <perlbot> integral: [qr/\x41\d/u,"A1"]
[18:49:31] *** Joins: jess (~jess@libera/staff/jess)
[18:50:29] *** Joins: Bossi (~quassel@p4fc22308.dip0.t-ipconnect.de)
[18:54:05] *** Quits: jplesnik (~jplesnik@83.240.60.17) (Quit: Leaving)
[18:58:25] *** Quits: vrurg (~vrurg@45.74.95.181) (Quit: Leaving...)
[19:07:39] <greyrat> how does perl's performance hold up against ripgrep? `perl -lne '/x/ && !/y/ && print'` vs `rg 'x' | rg -v 'y'`
[19:08:11] <lopid> you tell us
[19:08:28] <lopid> maybe you don't need -l there
[19:08:42] *** Quits: huf_ (~huf@45.95.44.141) (Ping timeout: 252 seconds)
[19:08:48] *** Joins: ufobat_ (~martin@dynamic-077-009-122-047.77.9.pool.telefonica.de)
[19:09:33] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[19:11:15] <integral> you've stubbed out the regex, but the two programs use different regex engines.  No idea what kind of filesystem you're searching on - that might dominate performance even!
[19:11:46] *** Joins: kensanata (~user@user/kensanata)
[19:11:53] *** Quits: talexb (~tab@bras-base-toroon0335w-grc-24-174-95-206-118.dsl.bell.ca) (Quit: Leaving)
[19:12:11] *** Quits: ufobat__ (~martin@dynamic-095-117-092-027.95.117.pool.telefonica.de) (Ping timeout: 244 seconds)
[19:12:18] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 264 seconds)
[19:12:21] *** Joins: Guest5698 (~Guest56@utdpat242097.utdallas.edu)
[19:12:27] *** Joins: EvanCarroll (~ecarroll@c-73-32-86-244.hsd1.tx.comcast.net)
[19:14:51] *** Joins: monkey_ (~user@190.104.116.134)
[19:15:20] <perlbot> Guest5698 pasted a new file at https://l.perl.bot/p/h6vttm - 
[19:16:00] <Altreus> I wonder whether perl internally optimises /x/ as index $_, 'x' >= 0
[19:16:22] <Guest5698> I have been trying to execute a perl program on linux terminal that requires usage of PerlX::Window, but keep getting the pasted error message
[19:18:03] <integral> Altreus: aiui/afaicr perl picks out a fixed string from regex if possible and then does something like boyer-moore to find the possible locations of the fixed string, then only runs the full engine at those locations
[19:18:31] <jabberwok> in Camel 4thEd it says "If the opening delimiter is an opening parenthesis, bracket, brace, or angle bracket..." but perlop now says "brackets (round, angle, square, curly)" ...ugh... when and why did those irritating new names for characters gain currency?
[19:19:15] <lopid> it's political correctness gone mad
[19:19:36] *** Quits: azed (~azed@160.159.122.89) (Quit: WeeChat 3.1)
[19:19:43] *** Quits: Judabuda (~ok@user/judabuda) (Read error: Connection reset by peer)
[19:20:25] *** Joins: Judabuda (~ok@user/judabuda)
[19:20:51] <Altreus> perlbot: utf8 <
[19:20:52] <perlbot> Altreus: U+003C (3c): LESS-THAN SIGN [<] 
[19:20:56] <Altreus> heh
[19:21:02] <Altreus> of course they're not really balanced delimiters
[19:21:11] <Altreus> perlbot: utf8 <<
[19:21:11] <perlbot> Altreus: U+003C (3c): LESS-THAN SIGN [<] U+003C (3c): LESS-THAN SIGN [<] 
[19:21:13] <Altreus> oops
[19:21:16] <Altreus> perlbot: utf8 «
[19:21:16] <perlbot> Altreus: U+00AB (c2 ab): LEFT-POINTING DOUBLE ANGLE QUOTATION MARK [«] 
[19:21:39] <integral> it's UK versus US english AIUI. (eg. https://separatedbyacommonlanguage.blogspot.com/2006/08/parentheses-and-brackets.html)
[19:21:39] <Adura> perlbot: utf8 ₫
[19:21:39] <perlbot> Adura: U+20AB (e2 82 ab): DONG SIGN [₫] 
[19:21:40] <Paperbot> Link title(s): [ Separated by a Common Language: parentheses and brackets ]
[19:22:00] <Altreus> Guest5698: I have no idea what could cause that, but you have not been ignored :)
[19:22:10] <Altreus> Hopefully someone with a better idea will come along
[19:23:42] <Altreus> My brain was asploded recently when an English course (GCSE or earlier, I think) called commas parentheses
[19:23:59] <Altreus> But, said I, parentheses are specific characters!
[19:24:21] <Altreus> Negative. It refers to anything that surrounds parenthetical - injected - clauses
[19:24:36] <integral> - !!! -
[19:24:50] *** Joins: pj (~pj@ghettoforge/pj)
[19:25:45] <Altreus> ⸘
[19:25:48] <Altreus> ‽
[19:27:08] *** Joins: gast0n (~g4570n@user/gast0n)
[19:27:35] <greyrat> lopid: I did one naive test, and perl was almost 3x faster. :)) https://github.com/BurntSushi/ripgrep/issues/1889#issuecomment-859635595
[19:27:37] <Paperbot> Link title(s): [ Add `perl` to the benchmarks · Issue #1889 · BurntSushi/ripgrep · GitHub ]
[19:28:11] <lopid> \o/
[19:28:43] <Altreus> greyrat: there's only one perl process in your thing... can ripgrep perform both tests in the same process?
[19:29:09] <greyrat> Altreus: As of now, no. But boolean patterns are an open FR on their repo.
[19:29:34] <Altreus> Also that is *very* close
[19:29:47] *** Joins: adherzog (uid387168@id-387168.tooting.irccloud.com)
[19:29:51] <greyrat> Well, I wouldn't mind even if perl was slower
[19:29:53] <lopid> maybe use a negative lookahead in it, if it can
[19:30:05] <greyrat> I just wanted to see if it's not *that* slower
[19:30:17] <integral> i thought the point of ripgrep was to do better than Ack?  ie recursive matching in directory trees?  Your perl example isn't doing anything very complex really in comparison
[19:30:51] <greyrat> integral: I am not very experienced with these. Please create better benchmarks.
[19:31:14] <Altreus> You must construct additional benchmarks
[19:31:42] <Altreus> anyway if rg weren't required to read each line twice it would probably be way faster
[19:31:56] <integral> I don't have a use-case where I use ripgrep because it's faster.  I tend to find myself searching with online stuff like github's search more :-/
[19:31:59] <Altreus> but yeah perl is not significantly slower *and* has a pre-built turing complete language
[19:32:05] <greyrat> Altreus: just divide its time in two, it would still be slower than perl in this test.
[19:32:13] <Altreus> yeah I don't even use ack any more: just git grep :D
[19:32:35] <greyrat> ack doesn't have anything oover ripgrep, does it? 
[19:33:01] <greyrat> What is good about perl is `a pre-built turing complete language`
[19:33:55] <Altreus> no hang on I'm confused
[19:34:02] <Altreus> What are the actual values output by time :P
[19:34:30] <Altreus> 4.32s vs 2.21s, what are these
[19:34:54] <Altreus> that's how long you, as a human, waited, surely
[19:35:00] <greyrat> Altreus: The exact docs are:
[19:35:02] <greyrat> TIMEFMT="%J  %U user %S system %P cpu %*E total; max RSS %M"
[19:35:02] <greyrat> # See TIMEFMT in zshall
[19:35:35] <gordonfish> zshall not pass?
[19:36:10] <greyrat> But the important value is `1:11.19 total`, which is its total time (1 minute and 11 seconds)
[19:36:23] <greyrat> gordonfish: `man zshall`
[19:37:20] <greyrat> (So no, I realy waited a minute. That directory is huge.)
[19:37:28] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:38:41] <Altreus> total = wall
[19:38:58] <Altreus> I never understood the term wall time, until I realised where clocks tend to be
[19:39:13] <Altreus> So many clocks: this is the one on the wall
[19:39:18] <xenu> what the hell is 'arr0'
[19:39:30] <gordonfish> greyrat: Ah, forgot that actually existed. Felt like a typo for a moment :)
[19:40:27] <Altreus> xenu: Richard Nixon in Futurama?
[19:40:30] <gordonfish> xenu: Isn't that what scooby do often says?
[19:40:46] <Altreus> hehe
[19:40:46] <gordonfish> Altreus: Well, his head at least
[19:40:53] <Altreus> :)
[19:41:18] <gordonfish> Did they ever explain how all those heads can speak without lungs?
[19:41:41] <greyrat> xenu: arr0 () {
[19:41:41] <greyrat> 	print -nr -- "${(pj.\0.)@}"
[19:41:41] <greyrat> }
[19:41:43] <Altreus> the collar they wear is sufficiently advanced technology
[19:41:59] * Altreus applies clue-stick to greyrat
[19:42:11] <Altreus> also wtf does any of that mean
[19:42:30] * gordonfish wonders how one wears a collar when they have no neck
[19:42:32] <Altreus> people call perl executable line noise and then write shell
[19:42:33] <lucerne> Altreus: It just outputs its ARGV separated by the null char
[19:42:39] <Altreus> gordonfish: they have a bit of neck!
[19:42:52] <gordonfish> Hmm, I guess they could have a stub, yeah
[19:43:07] <Altreus> And it's not so much a collar as a cap
[19:43:24] <Altreus> But caps already relate to heads and would give the wrong impression
[19:43:56] <gordonfish> end cap
[19:44:13] <gordonfish> (like on a pipe)
[19:44:28] <Altreus> yeah
[19:44:34] <greyrat> I just tested it with just the first `rg` process. The time didn't change much for rg: `arr0 * | time (xargs -0 rg 'time.?loop\b' | cat)`  
[19:44:34] <greyrat>  
[19:44:34] <greyrat> 2.51s user 13.45s system 23% cpu 1:08.77 total; max RSS 8384
[19:45:51] *** Joins: vrurg (~vrurg@45.74.95.181)
[19:46:17] <Altreus> surprised ls doesn't have a -0
[19:46:44] *** Quits: deadmarshal (~deadmarsh@95.38.113.167) (Ping timeout: 245 seconds)
[19:51:44] * GumbyPAN CPAN Upload: App-DBBrowser-2.265 by KUERBIS https://metacpan.org/release/KUERBIS/App-DBBrowser-2.265
[19:51:44] * GumbyPAN CPAN Upload: Term-TablePrint-0.136 by KUERBIS https://metacpan.org/release/KUERBIS/Term-TablePrint-0.136
[19:52:02] *** Quits: Ovid (~Ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Read error: Connection reset by peer)
[19:52:18] *** Joins: Ovid_ (~Ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[19:56:25] *** Quits: Ovid_ (~Ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Read error: Connection reset by peer)
[19:57:36] *** Joins: LuksNuke (~LuksNuke@94.242.245.63)
[19:58:12] *** Quits: monkey_ (~user@190.104.116.134) (Ping timeout: 252 seconds)
[19:59:51] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[20:00:10] *** Joins: john_parr (~chatzilla@pool-100-0-196-181.bstnma.fios.verizon.net)
[20:05:48] *** Joins: fb61 (~Frank@ip-109-40-131-214.web.vodafone.de)
[20:15:18] *** Parts: art1 (~romeyke@p200300ccdf086700484ac29144f6087d.dip0.t-ipconnect.de) ()
[20:19:56] *** Quits: Judabuda (~ok@user/judabuda) (Read error: Connection reset by peer)
[20:20:25] *** Joins: Judabuda (~ok@user/judabuda)
[20:24:29] *** Quits: lopid (~lopid@user/lopid) (Quit: WeeChat 3.1)
[20:24:32] <Gin> Here doc cannot be used with print in recent version?
[20:26:39] <haarg> heredocs can be used in the same places they always have been able to be used
[20:27:03] <Gin> print <<"EOC";
[20:27:06] <Gin> abc
[20:27:09] <Gin> hello
[20:27:10] <Gin> EOC
[20:27:25] *** Quits: argento (~argent0@168-227-96-53.ptr.westnet.com.ar) (Ping timeout: 244 seconds)
[20:27:30] <Gin> My Perl version is 5.16.3.
[20:27:46] <Gin> Can't find string terminator "_END_" anywhere before EOF at ./hello_world.pl line 209.
[20:27:58] <zgu> then why are you talking about recent versions?
[20:28:08] <Gin> This is the error perl spits out.
[20:28:11] <revhippie> Gin: any whitespace around your _END_ ?
[20:28:13] <Adura> Anything after 5.8 is recent, of course.
[20:28:30] <Gin> revhippie: No
[20:28:42] <Altreus> but the string terminator is EOC
[20:28:45] <Altreus> not _END_
[20:28:48] <Altreus> also, no pasting
[20:28:50] <Gin> If I use 5.006
[20:29:00] <xenu> you keep showing us different code than you're actually running
[20:29:11] <ether> No pasting, paste to https://l.perl.bot/#perl
[20:29:12] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[20:29:20] <gordonfish> Gin: You can call your self a paleontologist
[20:29:27] <Adura> That wasn't pasting, that was typing... seemingly, hah.
[20:29:44] <zgu> yeah it was too slow to be a paste
[20:30:15] <Gin> Not a paste at all...
[20:30:26] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Read error: Connection reset by peer)
[20:30:46] <Gin> After "use 5.006", no error any more.
[20:30:50] <alh> The code you provided above works perfectly fine 
[20:30:54] <alh> You need to show all of the relevant code 
[20:31:15] *** Joins: deadmarshal (~deadmarsh@95.38.113.167)
[20:32:07] <revhippie> Also, if your hello_world.pl is >200 lines... :)
[20:32:49] <Altreus> "paste" is shortcut for "Put code in channel and then send more messages so it keeps moving"
[20:33:17] <zgu> paste in the figurative sense
[20:33:42] <zgu> well even more figurative than the usual sense, which doesn't involve any literal adhesive gels
[20:34:21] <Adura> Basically, keep it to one-liners as this is #perl.
[20:34:40] <Gin> revhippie: I have moved my code into a separate file.
[20:34:45] <Altreus> not even one
[20:34:52] <Altreus> If it's going to move it shouldn't be relevant
[20:34:58] <zgu> sub-liners
[20:35:16] <integral> hrm, do heredocs even work in -e
[20:35:17] <Gin> The error remains if I use version 5.16.3
[20:35:32] <alh> Gin: Please share the code
[20:35:35] <zgu> integral: i was wondering that. or if perlbot's eval could handle them somehow
[20:35:36] *** Quits: deadmarshal (~deadmarsh@95.38.113.167) (Ping timeout: 252 seconds)
[20:35:39] <Altreus> I guess it depends whether -e keeps newlines
[20:36:07] <Altreus> it does
[20:36:09] <Altreus> works fine
[20:36:12] <Gin> How am I supposed to share the code?
[20:36:16] <Altreus> perlbot: paste
[20:36:17] <perlbot> Altreus: Paste your code to the new https://l.perl.bot/#perl or http://paste.scsys.co.uk/ or https://gist.github.com/ | see allowpaste plugin as an op to control the pastebin in your channel
[20:36:19] <Altreus> Gin: ^
[20:36:22] <Gin> Since you have blamed me for pasting
[20:36:39] <Altreus> it is also in the topic if you need it later
[20:36:55] <zgu> or the link that ether sent earlier. or the first thing in the topic, yeah
[20:36:57] <rewt> and it was also mentioned earlier
[20:37:02] *** Joins: lopid (~lopid@user/lopid)
[20:37:37] <integral> yes, perl supports lines in -e! perl -e'system("perl","-e","print<<END;\nfoo\nEND\ndie")'
[20:38:09] <huf> the commandline args of a program are strings, yes
[20:38:14] <perlbot> Anonymous pasted a new file at https://l.perl.bot/p/ekpd35 - 
[20:38:15] <huf> strings can contain newlines
[20:38:42] <revhippie> I think EOC might need a newline after it.
[20:38:54] <huf> yep
[20:38:59] <Gin> And I need to share the link to my code, right?
[20:39:00] <Gin> Altreus:
[20:39:01] <huf> \nTOKEN\n IIRC
[20:39:24] <revhippie> Gin: you can, but the bot already shared it in here for you.
[20:39:34] <Gin> Cool!
[20:40:03] *** Joins: argento (~argent0@168-227-96-53.ptr.westnet.com.ar)
[20:40:56] <Gin> I have tried 5.34 and it turns out just fine.
[20:41:18] <Adura> The solution was provided for your version.
[20:41:20] <Gin> Then I changed to Perl 5.16.3, and the error pops out.
[20:41:40] <huf> are you sure it's that and not that you sometimes add the final newline and sometimes not?
[20:41:48] <Gin> no
[20:41:52] <huf> some shit editors actually forget to end the last line with a newline
[20:41:58] <Gin> You can change my code in the link
[20:42:12] <Gin> huf: Try it yourself.
[20:42:30] <huf> works for me
[20:42:33] <Gin> You can change to Perl 5.16.3 and see what will happen
[20:42:40] <Adura> https://l.perl.bot/p/8wbz5r It's fine.
[20:42:41] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[20:42:54] <alh> Yeah on 5.16.3 it fails for me, so perhaps a bugfix later 
[20:43:04] <huf> ah, you dont actually mean use 5.16.3 but an actual old perl
[20:43:23] <revhippie> neat.  5.16.3 -- "Can't find string terminator..."  5.18 -- works.
[20:43:44] <huf> if you add in the final newline, it works on all of them
[20:43:49] <revhippie> right.
[20:43:53] <huf> looks like eof got special handling at some point?
[20:45:14] <haarg> https://perldoc.perl.org/perl5180delta#Selected-Bug-Fixes first item
[20:45:15] <Paperbot> Link title(s): [ perl5180delta - what is new for perl v5.18.0 - Perldoc Browser ]
[20:45:19] <alh> Wow, 5.18.0 included a ton of heredoc fixes
[20:45:43] *** Joins: mattil (~mattil@87-92-46-97.bb.dnainternet.fi)
[20:45:49] <Gin> huf: newline seems to be the solution
[20:46:53] *** Quits: Gin (~Gin@139.177.184.26) (Quit: Client closed)
[20:49:36] <integral> if your editor likes eating terminal newlines, you could end with __END__ after the heredoc
[20:50:00] *** Joins: monkey_ (~user@190.104.116.134)
[20:50:04] *** Quits: mattil (~mattil@87-92-46-97.bb.dnainternet.fi) (Ping timeout: 245 seconds)
[20:50:17] <huf> or just leave a random number of newlines at the end of the file
[20:50:24] <huf> especially if you have a coworker who hates that
[20:51:32] <zgu> better yet use the number of newlines to encode some metadata about the file
[20:52:05] <huf> :)
[20:52:16] *** Joins: Luks_Nuke (~LuksNuke@94.242.245.63)
[20:52:16] *** Joins: mns_ (~mns@c-73-119-178-157.hsd1.ma.comcast.net)
[20:52:41] *** Joins: Nei_ (~ailin@user/nei)
[20:52:54] *** Joins: markgrad_ (~markgrady@204.246.246.254)
[20:53:07] *** Joins: Shells (~michelle@203.206.128.220)
[20:53:57] *** Joins: a6502 (~wieger@stofzuiger.a6502.net)
[20:54:35] *** Joins: haj1 (~haj@95.91.235.66)
[20:54:52] *** Joins: eldritch__ (~eldritch@134.209.221.71)
[20:56:02] *** Quits: kensanata (~user@user/kensanata) (Ping timeout: 252 seconds)
[20:56:12] *** Joins: confuseA1at (~confuseAc@h2728883.stratoserver.net)
[20:56:39] *** Joins: argento_ (~argent0@168-227-96-53.ptr.westnet.com.ar)
[20:56:52] *** Joins: gerikson_ (~gerikson@user/gerikson)
[20:57:11] *** Joins: Bossi_ (~quassel@p4fc22308.dip0.t-ipconnect.de)
[21:01:00] *** Quits: argento (~argent0@168-227-96-53.ptr.westnet.com.ar) (*.net *.split)
[21:01:00] *** Quits: LuksNuke (~LuksNuke@94.242.245.63) (*.net *.split)
[21:01:00] *** Quits: Bossi (~quassel@p4fc22308.dip0.t-ipconnect.de) (*.net *.split)
[21:01:00] *** Quits: jess (~jess@libera/staff/jess) (*.net *.split)
[21:01:00] *** Quits: tcohen (~tcohen@192.141.149.81) (*.net *.split)
[21:01:00] *** Quits: Nei (~ailin@user/nei) (*.net *.split)
[21:01:00] *** Quits: Rubin (~rubin@2001:470:69fc:105::17e) (*.net *.split)
[21:01:00] *** Quits: demostanis[m] (~demostani@2001:470:69fc:105::2c2) (*.net *.split)
[21:01:00] *** Quits: markgrady (~markgrady@204.246.246.254) (*.net *.split)
[21:01:00] *** Quits: Michelle (~michelle@203.206.128.220) (*.net *.split)
[21:01:00] *** Quits: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de) (*.net *.split)
[21:01:00] *** Quits: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net) (*.net *.split)
[21:01:00] *** Quits: schelcj (~schelcj@096-035-119-047.res.spectrum.com) (*.net *.split)
[21:01:00] *** Quits: metabot (~metabot@perlbot/bot/metabot) (*.net *.split)
[21:01:00] *** Quits: hquirinosmith (~hquirinos@hqs.rocks) (*.net *.split)
[21:01:00] *** Quits: spammy (~pihahirot@user/spammy) (*.net *.split)
[21:01:00] *** Quits: jlaire (~asdfgasf@kapsi.fi) (*.net *.split)
[21:01:00] *** Quits: a6502___ (~wieger@stofzuiger.a6502.net) (*.net *.split)
[21:01:00] *** Quits: LeoNerd (~leo@genoa.dictatorshipcake.co.uk) (*.net *.split)
[21:01:00] *** Quits: eldritch_ (~eldritch@134.209.221.71) (*.net *.split)
[21:01:00] *** Quits: confuseAcat (~confuseAc@h2728883.stratoserver.net) (*.net *.split)
[21:01:00] *** Quits: gustaf (~gerikson@user/gerikson) (*.net *.split)
[21:01:01] *** Nei_ is now known as Nei
[21:07:25] *** Joins: schelcj (~schelcj@096-035-119-047.res.spectrum.com)
[21:07:51] *** Joins: deadmarshal (~deadmarsh@95.38.113.167)
[21:09:41] *** Joins: brtastic (~Thunderbi@185.24.91.138)
[21:10:12] <jabberwok> use Acme::Bleach; while (<DATA>) {…};
[21:12:24] *** Quits: deadmarshal (~deadmarsh@95.38.113.167) (Ping timeout: 265 seconds)
[21:14:04] *** Joins: jess (~jess@libera/staff/jess)
[21:17:35] *** choroba is now known as choroba_
[21:17:57] *** Joins: choroba (~E_Choroba@89-101-243-80.cust.centrio.cz)
[21:18:05] *** Quits: choroba_ (~E.Choroba@89-101-243-80.cust.centrio.cz) (Quit: Leaving)
[21:18:22] <Grinnz> having no code after a heredoc is generally pretty useless anyway
[21:18:55] *** Quits: argento_ (~argent0@168-227-96-53.ptr.westnet.com.ar) (Ping timeout: 272 seconds)
[21:19:23] *** Quits: RandalSchwartz (~Adium@c-73-221-215-233.hsd1.wa.comcast.net) (Quit: Leaving.)
[21:20:07] *** Quits: Judabuda (~ok@user/judabuda) (Read error: Connection reset by peer)
[21:20:25] *** Joins: Judabuda (~ok@user/judabuda)
[21:21:07] *** Joins: hquirinosmith (~hquirinos@hqs.rocks)
[21:21:18] *** Joins: metabot (~metabot@perlbot/bot/metabot)
[21:23:23] *** jess is now known as j
[21:23:37] *** Joins: habamax (~habamax@broadband-109-173-44-6.ip.moscow.rt.ru)
[21:23:37] *** Quits: habamax (~habamax@broadband-109-173-44-6.ip.moscow.rt.ru) (Changing host)
[21:23:37] *** Joins: habamax (~habamax@user/habamax)
[21:26:54] * GumbyPAN CPAN Upload: WWW-Correios-CEP-1.043 by RENTOCRON https://metacpan.org/release/RENTOCRON/WWW-Correios-CEP-1.043
[21:29:12] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[21:32:55] *** j is now known as jess
[21:35:45] *** mns_ is now known as mns
[21:36:04] *** Quits: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net) (Quit: Quit)
[21:37:27] *** Joins: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net)
[21:38:27] *** Quits: randir (~randir@93.159.239.42) (Remote host closed the connection)
[21:45:48] *** Joins: KnoP (~KnoP@p57b1920f.dip0.t-ipconnect.de)
[21:58:30] *** Joins: randir (~randir@95-25-113-192.broadband.corbina.ru)
[21:59:07] *** Joins: Rubin (~rubin@2001:470:69fc:105::17e)
[21:59:51] *** Joins: demostanis[m] (~demostani@2001:470:69fc:105::2c2)
[22:03:58] *** Quits: averell- (~averell@user/averell) (Remote host closed the connection)
[22:06:10] *** Quits: Guest5698 (~Guest56@utdpat242097.utdallas.edu) (Ping timeout: 250 seconds)
[22:14:27] *** Joins: averell (~averell@user/averell)
[22:15:49] <jdv> does abigail have a decent point...  are there any sufficient reasons to think Perl would increase in mindshare ever again?
[22:16:58] <choroba> Reason can't explain popularity of programming languages.
[22:17:01] <Grinnz> i don't think it's worth speculating
[22:17:15] <Grinnz> and i don't think anyone should hedge their bets on Perl becoming mainstream again
[22:17:23] <Grinnz> but also I don't think anyone should assume it will die
[22:17:31] <huf> when the elves return, they'll recognise that perl is superior
[22:17:40] <Grinnz> we can't predict the future and all of these things are highly external factors
[22:17:48] <huf> but that will not be until the great faring forth
[22:18:09] <alh> No that's when Forth returns
[22:18:18] <Adura> Perl needs a cryptocurrency and it'll be popular again...!
[22:18:18] <Grinnz> assuming we don't try the "break perl" thing a third time, then you can go ahead and predict its death
[22:18:19] <huf> forth will never return
[22:18:25] <jdv> i'm kinda with him in that the eternal "perl is dying - we can and need to fix it" might be worth abandoning
[22:18:39] <Grinnz> yes, i never subscribed to that
[22:18:47] <Grinnz> we just need to do what we can
[22:18:56] <Grinnz> perl will be perl
[22:19:00] <jdv> yeah
[22:19:39] *** Parts: fb61 (~Frank@ip-109-40-131-214.web.vodafone.de) ()
[22:19:49] *** Joins: gareppa (~gareppa@user/gareppa)
[22:20:27] <rewt> "perl is bad" is too mainstream for perl to be popular again
[22:20:54] <Grinnz> if it can be fixed, it will be by entropy. not by any one drastic action.
[22:22:20] <jdv> i never plan on getting a job again because i "know perl".  but i still whip it out all the time...
[22:23:18] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[22:24:33] *** Joins: deadmarshal (~deadmarsh@95.38.113.167)
[22:24:50] *** dionysos is now known as Guest0815
[22:25:04] *** Guest0815 is now known as Guest4711
[22:25:24] *** Guest4711 is now known as dionysos
[22:25:57] *** Joins: jpmh (uid445439@id-445439.stonehaven.irccloud.com)
[22:27:00] * GumbyPAN CPAN Upload: MooX-TaggedAttributes-0.10 by DJERIUS https://metacpan.org/release/DJERIUS/MooX-TaggedAttributes-0.10
[22:28:50] *** Quits: deadmarshal (~deadmarsh@95.38.113.167) (Ping timeout: 244 seconds)
[22:32:13] <leont> Popularity is not a well-defined thing, really
[22:32:39] <leont> Perl is unlikely to become a hype again, and we will never repeat what happened to Perl in the late 90s. And that's fine.
[22:34:57] <pragma-> I see this sentiment echoed more and more frequently lately: https://old.reddit.com/r/perl/comments/npupug/should_perl_die_gracefully/h08cwa1/
[22:34:58] <Paperbot> Link title(s): [ latkde comments on Should Perl die gracefully? ]
[22:35:24] *** Quits: KnoP (~KnoP@p57b1920f.dip0.t-ipconnect.de) (Quit: ChatZilla 0.9.94 [SeaMonkey 2.53.1/20200222231854])
[22:35:51] <pragma-> (latkde's comment, not the phoenixtrap post)
[22:36:40] <zgu> i like how he managed to use the wrong "it's" then correct himself later in the same sentence
[22:37:19] <Adura> All that's needed id Perlcoin...!
[22:37:23] <Grinnz> the problem is that, everyone with that sentiment has different "things they care about"
[22:38:18] <latk> zgu: thank you, edited
[22:39:22] <Grinnz> people who don't think perl needs to change are just people whose needs are already met
[22:39:34] <Grinnz> of course we must always continue to improve perl. but it's a judgment call every time
[22:39:36] *** Joins: deadmarshal (~deadmarsh@95.38.113.167)
[22:39:54] <Grinnz> the nice thing is that i think the steering council we have now makes those much more possible
[22:39:57] <pragma-> yeah, I wasn't referring to the blog post itself but rather to latkde's comment about the current state of perl 5.
[22:40:47] <pragma-> latkde is advocating for adding the basic things we expect of a modern language as first-class features in perl 5 so we don't have to write "pure perl" boilerplate to do those things, which is slow and verbose.
[22:40:51] <zgu> try/catch and maybe signatures are the only things there that i'd find really useful
[22:40:58] <Grinnz> pragma-: yes. but what are those basic things?
[22:41:08] <Grinnz> everyone has different basic things
[22:41:28] <jdv> its not realistic - perl wouln't be perl or it would be raku:)
[22:41:33] <Grinnz> there are plenty of people who think try/catch is a mistake
[22:41:36] <jdv> types, concurency, etc
[22:41:42] <Grinnz> i disagree, but they're there
[22:41:46] *** Joins: Guest37 (~Guest37@2a01:c22:d091:4f00:946:58f3:fa51:5c86)
[22:42:47] <Grinnz> but like i said, the steering council model lets us be able to make this judgment call with some appearance of legitimacy
[22:44:01] <zgu> "The challenge had to do with whether perl should abandon the goal of backwards compatibility, which is arguably one of the things that it got right from the beginning." see python 3
[22:45:21] <Grinnz> yeah. python 3 and in some ways raku are cautionary tales, not guides
[22:45:50] <Grinnz> perl does not have the mindshare to survive what happened to python
[22:48:09] <gryphn> does mindshare get drawn in by a "killer" functional-sphere? 90s perl was web. python seems to be ai/data. ?
[22:48:13] *** Quits: adherzog (uid387168@id-387168.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[22:49:06] <pragma-> i understood zgu's comment the other way. as in "it was a rough period but now python 3 is stable and people have migrated. python no longer has to worry about python 2's cruft and technical debt any more."
[22:50:32] <pragma-> if anything, python 3 may have strengthened python's popularity.
[22:51:32] *** Quits: monkey_ (~user@190.104.116.134) (Ping timeout: 252 seconds)
[22:52:03] <vanfanel64> Seems python3 greated a large divide in of python users
[22:52:25] <pragma-> for a while, yes.
[22:52:39] <pragma-> but that hill is fading in the rearview mirror
[22:52:47] <zgu> yeah, i saw way too many python-based projects that didn't bother to switch to 3 until way too late
[22:53:04] <zgu> don't the build systems in every major web browser still need python 2?
[22:53:31] <vanfanel64> well many slowly slithered to the 3.x side, but I see many projects still asking for 2.x
[22:54:07] *** Quits: ufobat_ (~martin@dynamic-077-009-122-047.77.9.pool.telefonica.de) (Ping timeout: 272 seconds)
[22:54:18] <zgu> GIMP is still python 2 AFAIK (also partly tied to still using GTK 2 in released versions so far, which is kind of ironic)
[22:54:26] <Grinnz> pragma-: i don't think it strengthened its popularity. i think it caused some, but also caused moves off of it or deepened animosity. i think it is losing to node.js for other reasons, but the python 3 move didn't help there
[22:54:47] <pragma-> perhaps so
[22:55:49] <Grinnz> the effects will be felt for a while, as projects that are not maintained but still used continue to pop up needing python2
[22:55:55] *** Quits: Guest37 (~Guest37@2a01:c22:d091:4f00:946:58f3:fa51:5c86) (Quit: Client closed)
[22:55:57] <vanfanel64> python 3 transitition could have been so much better. Too many changes at once is a problem and they expected everyone to just go with it cold turkey
[22:56:00] <pragma-> indeed
[22:56:07] <zgu> yeah
[22:56:25] <zgu> everyone just ignored python 3 for the better part of a decade
[22:56:33] <zgu> then SURPRISE! 2 is EOL
[22:56:44] <vanfanel64> python3 would have been far better if it was properly compatible with 2.x
[22:56:44] <zgu> well not everyone
[22:57:09] <Grinnz> vanfanel64: i dunno if that would have been possible, while fixing the things it did. but i certainly think it could have been done better
[22:57:18] <vanfanel64> I can run really old perl programs still on very new perl versions.
[22:57:32] <zgu> instead they backported some forward compatibility to 2, but i don't think enough people paid attention enough to use any of it
[22:57:41] <latk> it took a while for both Python 3.x and 2.x to add the necessary features so that you could write code that could run under either – very useful for gradual migration
[22:58:03] <vanfanel64> Grinnz: How about a flag, as well as run modes based on binary name (like busybot does with binarys symlinked to it)
[22:59:14] <vanfanel64> zgu, this is why running different depending on the binary name using symlinks, like busy or bash does, would have helped
[22:59:15] <Grinnz> those are interface bandaids, the same suggestions came up for perl 7 and i think it would cause more confusion than it solves for a programming language
[22:59:46] <Grinnz> etiher you can support the old "language" forever, in which case why not just stay that, or you can't, in which case the bandaid is a lie
[23:00:05] <Grinnz> either way it means context-free code snippets are now ambiguous
[23:00:22] <Grinnz> i think that's a much bigger problem for perl than it was for python
[23:00:47] <vanfanel64> if /usr/bin/perl7 is a symlink to /usr/bin/perl and it acts as perl 7 when used as perl7, that means the user desires perl7 mode, otherwise would use #!/usr/bin/perl
[23:01:04] <Grinnz> you can already do that yourself
[23:01:14] <vanfanel64> Oh that exists?
[23:01:22] <Grinnz> https://metacpan.org/pod/App::MyPerl
[23:01:23] <Paperbot> Link title(s): [ App::MyPerl - Your very own set of perl defaults, on a global or per project basis - metacpan.org ]
[23:01:32] <Grinnz> also an older thing called sitecustomize
[23:01:36] <vanfanel64> weeeeeeeeeee
[23:01:45] <Grinnz> but sitecustomize doesn't give you a new binary, so it's pretty gross
[23:02:46] <Grinnz> but yeah, i think it's a bad idea for perl core to do that for you, for the reasons i stated above
[23:03:03] <Grinnz> and ive been arguing that for a year so its pretty tiring
[23:03:16] <vanfanel64> With python, I do not believe they even hada period of "this is decrated and will be removed, use this instead"
[23:04:08] <Grinnz> perl does have a well-defined deprecation policy, it just is inconsistently used
[23:04:10] <tm604> "acts as perl 7" has been suggested quite a few times, but I don't think there's been a realistic proposal that doesn't end up as "changes the behaviour of all your CPAN modules", or "only affects the script.pl and silently drops back to perl5 behaviour on your lib/*.pm code"
[23:04:30] <Grinnz> right, App::MyPerl is the right way to do that
[23:04:39] <vanfanel64> sda4444ggbtjkll;ljhgk,
[23:04:50] <vanfanel64> sorry iguana on keyboard
[23:05:05] <Adura> Herp derped.
[23:05:06] <tm604> indeed, and the nice thing about App::MyPerl is that it's available right now and quite easy to extend/customise/turn off
[23:11:25] *** Joins: Gin (~Gin@172.104.48.83)
[23:12:03] <Gin> I wonder if autobox  is builtin or a module.
[23:12:55] <Gin> I have tried a snippet without "use autobox", and it succeeded. But the subroutine was declared by myself.
[23:13:02] <revhippie> Adura++
[23:13:31] <Adura> On the herp joke? heh
[23:13:33] *** Quits: habamax (~habamax@user/habamax) (Ping timeout: 272 seconds)
[23:13:35] <Gin> When I try to call predefined functions using autobox, it didn't work.
[23:16:27] <perlbot> Gin pasted a new file at https://l.perl.bot/p/kr6slc - 
[23:17:48] <perlbot> Gin pasted a new file at https://l.perl.bot/p/5rjm8q - 
[23:18:42] <Gin>  The first one works fine, but the second one resulted in an error.
[23:20:26] *** Quits: Judabuda (~ok@user/judabuda) (Read error: Connection reset by peer)
[23:20:55] *** Joins: Judabuda (~ok@user/judabuda)
[23:21:33] <Grinnz> yes, you have to actually use autobox for it to work
[23:21:51] <Adura> Despite the auto in the name.
[23:21:55] <Grinnz> the first one is not a method call, you just made a coderef
[23:23:09] <Gin> Grinnz: But that snippet makes use of autobox, right?
[23:23:15] <Grinnz> no
[23:23:35] <Grinnz> sweval: my $sub = sub { 42 }; 'this can be anything'->$sub
[23:23:37] <perlbot> Grinnz: 42
[23:23:41] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 272 seconds)
[23:23:45] <Grinnz> thats just how coderefs work
[23:24:04] <Gin> Is there a builtin feature named autobox anyway.
[23:24:05] <Gin> ?
[23:24:15] <Grinnz> no
[23:24:21] <Grinnz> there is a cpan module named autobox
[23:24:30] <Gin> I've seen that snippet from a blog, but not sure about that.
[23:25:04] <Grinnz> the coderef behavior is not autoboxing, it's just a different way to write $sub->('whatever')
[23:25:24] <Grinnz> it's used by some modules like https://metacpan.org/pod/Safe::Isa to provide an interface that looks like method calls
[23:25:24] <Paperbot> Link title(s): [ Safe::Isa - Call isa, can, does and DOES safely on things that may not be objects - metacpan.org ]
[23:26:02] <Gin> But in my first snippet, how does the subroutine automatically capture the string as its argument?
[23:26:09] <Grinnz> anyway, autobox slows everything down and isn't commonly used, so i would avoid it
[23:26:18] <Grinnz> because that's how ->$coderef works
[23:26:44] <Grinnz> when the item on the right side of -> is a coderef, it no longer matters what the item on the left is, that will just be passed as the first argument
[23:27:45] <Gin> Grinnz: Is this feature officially called coderef?
[23:27:50] *** Quits: Luks_Nuke (~LuksNuke@94.242.245.63) (Ping timeout: 252 seconds)
[23:28:00] <Grinnz> it's just one thing the arrow operator does
[23:28:05] <huf> eval: ref sub {} 
[23:28:06] <perlbot> huf: CODE
[23:28:09] <huf> see?
[23:28:10] <Grinnz> references to subroutines are coderefs
[23:28:20] <huf> it's a reference and ref() returns 'CODE'
[23:28:24] <huf> so of course it's a coderef
[23:29:06] <Gin> huf: What is the syntax here?
[23:29:10] <Grinnz> if the thing on the right side of the arrow operator is a bareword, then the thing on the left needs to be an object or a class name, and its inheritance tree will be searched for the method
[23:29:17] <Gin> I got confused again :-)
[23:29:19] <huf> Gin: ref(sub{})
[23:29:19] <Grinnz> this is a normal method call
[23:29:37] <Gin> huf: Oh I understand now
[23:30:12] <Gin> ref() is an explicit way to return a reference, right?
[23:30:15] <huf> no
[23:30:20] <huf> sub {} returns the reference
[23:30:45] <Grinnz> just like [] returns a reference to an unnamed array, or {} returns a reference to an unnamed hash, sub {} returns a reference to an unnamed subroutine
[23:30:59] <Gin> What does ref() mean here?
[23:31:05] <huf> perldoc -f ref
[23:31:05] <perlbot> huf: Your documentation is available at: https://perldoc.perl.org/functions/ref
[23:31:08] <Grinnz> ref is a function that tells you what a reference returns to
[23:31:11] <Grinnz> er
[23:31:17] <Grinnz> what a reference references*
[23:31:18] <huf> eval: sub {}
[23:31:19] <perlbot> huf: sub { "DUMMY" }
[23:31:21] <revhippie> eval: $x = []; $y = {}; [ ref($x), ref($y) ]
[23:31:21] <huf> eh.
[23:31:23] <perlbot> revhippie: ["ARRAY","HASH"]
[23:31:24] <huf> eval: ''.sub {}
[23:31:26] <perlbot> huf: CODE(0x55be05441e20)
[23:31:33] <huf> this is how a coderef stringifies
[23:31:37] <huf> it's a thing
[23:32:52] <Gin> So ref() tells you what type of variable a reference points to?
[23:33:15] <Gin> If it is a hash, it will tells you it is a reference to a hash.
[23:34:23] <Grinnz> right
[23:34:34] <Gin> Thank you all for the patience!
[23:35:10] <Gin> I just haven't seen ref() before :-)
[23:35:34] <Grinnz> i suggest using the perldoc.perl.org search on any syntax you don't recognize
[23:36:05] *** Joins: pj (~pj@ghettoforge/pj)
[23:36:41] <Gin> But when I encounter the syntax, I just fail to come up with a name of that syntax :-)
[23:37:10] <huf> you can search for sub and ref really easily though
[23:37:15] <huf> for example
[23:37:49] <huf> ->$foo might also be tricky, dunno
[23:40:46] *** Joins: magla (~gelignite@55d4f9ee.access.ecotel.net)
[23:41:11] <huf> eh, it's there in perlop
[23:43:34] <Grinnz> operator search is still something i want to have
[23:43:42] <Grinnz> but it's much more difficult
[23:44:32] <huf> cant we put some metadata in the docs to make it easier to look up operators?
[23:44:48] <Grinnz> there are index markers i could use
[23:44:53] <Grinnz> that only helps a little
[23:45:08] <Grinnz> the labeling and organization of perlop is a mess even for manual scans
[23:46:00] *** Joins: LuksNuke (~LuksNuke@94.242.245.63)
[23:50:44] *** Joins: garo (~garo@ptr-1pln5puxqxmejxq9kws.18120a2.ip6.access.telenet.be)
[23:51:38] <Gin> I have checked on perlop and perlobj already, but I just got more confused so I turned to you guys for advice.
[23:52:13] <Gin> Grinnz: Yep, search by operators will be really splendid.
[23:54:34] <Gin> perlobj just mentions the difference between method and subroutine.
[23:58:23] <Gin> perlop mentions that when the right side of "->" is a reference to subroutine or a method name, the left side must be an object or a class name.
[23:59:52] <Gin> But why "hello"->shift() doesn't work?
