[00:00:47] *** Joins: schmudde (~schmudde@2001:b07:ae6:7d19:ad4d:23c:7101:4648)
[00:02:55] *** Joins: matty_ma1 (~matt@135.129.244.71)
[00:07:49] *** Quits: matty_ma1 (~matt@135.129.244.71) (Ping timeout: 256 seconds)
[00:33:28] *** Joins: narendraj9 (~user@2a02:8109:b63f:ff7c::57b2)
[00:41:51] *** Quits: egli (~user@193-47-178-139-pool.fiber.fcom.ch) (Quit: ERC (IRC client for Emacs 27.1))
[00:43:57] *** Joins: struchu (~struchu@staticline-31-183-169-131.toya.net.pl)
[00:56:45] *** Quits: cmiles74 (~miles@068-184-030-013.res.spectrum.com) (Ping timeout: 252 seconds)
[00:57:22] *** Quits: narendraj9 (~user@2a02:8109:b63f:ff7c::57b2) (Remote host closed the connection)
[01:01:47] *** Joins: matty_ma1 (~matt@135.129.244.71)
[01:06:11] *** Quits: matty_ma1 (~matt@135.129.244.71) (Ping timeout: 256 seconds)
[01:07:28] *** Quits: struchu (~struchu@staticline-31-183-169-131.toya.net.pl) (Quit: WeeChat 3.3)
[01:28:09] *** Joins: geenvoud (~geenvoud@user/geenvoud)
[01:28:35] *** Joins: libertyprime (~libertypr@118-92-79-43.dsl.dyn.ihug.co.nz)
[01:30:10] *** Joins: AlaskanEmily (~AlaskanEm@user/alaskanemily)
[01:34:44] *** Quits: geenvoud (~geenvoud@user/geenvoud) (Quit:  )
[01:36:10] *** Joins: matty_ma1 (~matt@135.129.244.71)
[01:36:49] *** Quits: yewscion (~yewscion@72-21-196-64.amazon.com) (Quit: Connection closed)
[01:40:45] *** Quits: matty_ma1 (~matt@135.129.244.71) (Ping timeout: 252 seconds)
[01:45:54] *** Quits: RendySurvage (~rendysurv@64.72.216.39) (Ping timeout: 256 seconds)
[01:50:43] *** Joins: mrmanner (29a724a13e@user/mrmanner)
[01:52:51] *** Quits: mrmanner (29a724a13e@user/mrmanner) (Remote host closed the connection)
[01:52:59] *** Joins: mrmanner (29a724a13e@user/mrmanner)
[01:57:00] <EdwardIII> [spoilers] just taking a look at the advent of code. my first implementation was the partition/reduce, but then i tried doing it in a loop instead and as expected it's quite a bit faster: https://gist.github.com/EdwardIII/fbbfc9a18a69472d4c969503f4e46c24 
[01:57:48] <EdwardIII> for the advent of code, who cares, either is fine, but i'm a bit curious. would going for a loop be an idiomatic approach here? or there's some other way i'm not thinking of?  
[01:59:12] <aphyr> EdwardIII: I did it like so: https://gist.github.com/aphyr/95fb0a788658a6e289a54abd80298aa2
[01:59:22] <aphyr> (not at all caring about performance)
[02:00:11] <EdwardIII> aphyr: that's very tidy
[02:02:58] <aphyr> Tons of intermediate allocations though, I bet
[02:03:36] <EdwardIII> if you cared, i wonder if transducers would help with that
[02:03:38] <aphyr> I think I'd do a loop like yours if I were going for speed--and how much I pulled into the loop would depend on what the profiler told me and how much modularity I wanted
[02:03:55] <EdwardIII> yes ofc, no optimisation without measuring first
[02:03:56] <aphyr> I should probably *learn* transducers at some point haha
[02:04:05] <aphyr> been... what, seven years?
[02:04:19] <EdwardIII> that is nice though, very pipeliney-rxjs-fpish feeling
[02:04:30] <aphyr> Typically when I have performance-sensitive reductions I use https://github.com/aphyr/tesser
[02:04:38] <EdwardIII> compared to recursive eye-soup in my example
[02:05:51] <aphyr> so transducers have sort of fallen in this weird in-between space where like... seqs handle the slow stuff, I write loop/recur for fast stuff, and transducers for medium-fast-but-also-parallel
[02:06:01] <aphyr> Er, tesser for medium-fast-but-also-parallel
[02:06:25] <EdwardIII> i've got 48 cores in my desktop computer
[02:06:29] <EdwardIII> i wish
[02:06:39] <EdwardIII> i'd switch to gentoo just for the giggles
[02:06:59] <aphyr> Honestly if I could get more cores I probably would haha
[02:07:07] <aphyr> Routinely saturate this box
[02:07:17] <EdwardIII> you've got to get a threadripper like linus
[02:07:43] <aphyr> I feel like the next step is probably to learn Rust and start writing faster programs period haha
[02:08:13] <aphyr> I'm trying to do all this perf-sensitive stuff in Clojure and while I love the language there's just no getting around the JVM's extra memory indirection
[02:09:19] <EdwardIII> what kind of thing are you working on?
[02:09:34] <EdwardIII> also did you make tesser before transducers existed? i see it's pretty old
[02:10:50] <aphyr> After transducers, but many of the same ideas
[02:11:12] <aphyr> "Transducers, but parallel, and you can ship them out to reduce over clusters if you want"
[02:12:12] <aphyr> https://github.com/jepsen-io/elle does a bunch of reductions to build dependency graphs and search for cycles in transactional histories
[02:13:52] <aphyr> and https://github.com/jepsen-io/maelstrom uses tesser internally to compute statistics over all the messages exchanged in its virtual "network"--it'll read something like 350K messages/sec off of disk if you've got the cores for it.
[02:14:08] <EdwardIII> is this the sort of task you'd like to try in rust?
[02:14:30] <aphyr> Honestly just writing Elle in the first place was so hard that I don't know how I'd rewrite it in another language haha
[02:14:45] <EdwardIII> heh that makes sense :D it looks hard!
[02:14:47] <aphyr> But yeah, someday, I hope a clever person takes all of that and makes it Faster (TM)
[02:15:40] <EdwardIII> -XX:UseAllTheCores
[02:16:39] <aphyr> yesssss, it's so satisfying to watch them all go
[02:18:02] <EdwardIII> i recently switched to an M1 so i need to make these cores sweat
[02:19:19] <aphyr> How are you liking the M1? Everyone I've asked says they're fantastic machines
[02:19:56] <EdwardIII> blown away. my last machine was a 2019 mbp and it was just a total piece of crap, unfit for purpose. purely a youtube and docs writing machine
[02:20:16] <EdwardIII> i was very pleasantly surprised by how much of the toolchain supports m1 already
[02:20:42] <EdwardIII> (i mostly do js/ts/docker stuff at work)
[02:26:43] <EdwardIII> hmm if you want to use partition-all with a step, and get a transducer back, how can you do that? (partition-all 2) works, but if you say (partition-all 2 2) it assumes you mean "partition with n = 2, and here's your collection, it's the number 2 <police sirens>"
[02:30:14] <EdwardIII> did i just disgustingly flood the channel with hundreds of lines?
[02:31:37] <rovanion> Don't think so.
[02:31:37] <aphyr> Nope
[02:32:28] <EdwardIII> phew, something weird happened in my erc buffer heh. i wanted to ask - is it OK to just do this, or is this the wrong thing? (partial partition-all 2 1)
[02:34:14] <rovanion> EdwardIII: Looks all well and good.
[02:35:16] *** Quits: seschwar (~seschwar@user/seschwar) (Quit: :wq)
[02:36:01] <rovanion> Man, I can't figure out how to include my production built cljs-file into a resource folder of my uberjar. I seem to be doing what everyone else is doing: 1. add a prep-task that runs the cljs compiler, 2. add the output folder to :resource-paths. My project.clj looks like: https://dpaste.com//8DH7WQBS7
[02:46:51] <EdwardIII> sorry man, i know i did go through this a while ago on my toy proj but can't even recall if it got it working or not
[02:50:01] *** Joins: RendySurvage (~rendysurv@64.72.216.39)
[02:50:14] *** Quits: libertyprime (~libertypr@118-92-79-43.dsl.dyn.ihug.co.nz) (Ping timeout: 252 seconds)
[02:51:20] *** Quits: schmudde (~schmudde@2001:b07:ae6:7d19:ad4d:23c:7101:4648) (Ping timeout: 252 seconds)
[02:55:28] <rovanion> Its one of those things you do once and then immediately supress the memory of because it seems so arbitrary.
[02:56:07] <EdwardIII> looks like my plan was going to be to just cp resources/* along with my uberjar
[02:59:43] <EdwardIII> rovanion: are you trying to get the resources actually inside the uberjar?
[03:01:52] <rovanion> EdwardIII: I'm trying to get the single file main.js into the uberjar. At least I think that is the single output of an advanced cljs compilation that I need to bring with me.
[03:02:47] <rovanion> I mean, if I copy the file to resources/public it ends up in the uberjar.
[03:03:08] <EdwardIII> oh is your problem that your js files don't get output to resources/public in the first place?
[03:04:46] <EdwardIII> rovanion: could you dpaste your prod.cljs.edn file too?
[03:04:48] *** Joins: libertyprime (~libertypr@203.97.185.98)
[03:06:22] <EdwardIII> disregard that, is it related to this? https://figwheel.org/config-options#target-dir i notice this is something i changed in my build: https://github.com/EdwardIII/imjur/blob/main/figwheel-main.edn
[03:06:58] <rovanion> EdwardIII: That is another way of solving it. With the following prod.cljs.edn I got the compilation into the public dir, but not into the uberjar: http://dpaste.com//3KZ9NUYAN
[03:07:26] <EdwardIII> if i unzip my uberjar i can see resources/public in there, and my js + css are there too
[03:07:31] <rovanion> But if i copied the js-file into public it came through. Probably because the CLJS compilation happens aftre the uberjar is built.
[03:08:34] <rovanion> Can't figure out why the CLJS compilation happens after the uberjar is assembled...
[03:10:37] <rovanion> So my resources/public/js/ gets cleaned before the build, then the uberjar is assembled, then the CLJS is compiled.
[03:10:57] *** Quits: libertyprime (~libertypr@203.97.185.98) (Ping timeout: 252 seconds)
[03:19:07] <EdwardIII> hmm looks like (partial partition-all 2 1) is no good as a transducer. and there's a ticket on it too: https://clojure.atlassian.net/browse/CLJ-1858
[03:28:41] <neirac> which framework is being used more for a simple webapp (one page with one image)?
[03:29:27] <EdwardIII> neirac: i found compojure pretty good
[03:29:58] <EdwardIII> you can get up and running with 1 page and 1 image pretty quickly, but it can grow with you if you need to do more advanced stuff down the line
[03:30:17] <neirac> EdwardIII great!, I'll read the docs and get started
[03:31:42] <neirac> EdwardIII it uses hiccup?
[03:31:57] <EdwardIII> neirac: not if you don't need that yet. you can just have a plain html page
[03:35:49] *** Joins: libertyprime (~libertypr@203.211.78.24)
[03:37:29] <EdwardIII> neirac: in this example, i just slurp in a flat html file and replace one variable: https://github.com/EdwardIII/imjur/blob/main/src/imjur/core.clj#L24
[03:37:37] *** Joins: matty_ma1 (~matt@135.129.244.71)
[03:43:57] *** Quits: matty_ma1 (~matt@135.129.244.71) (Ping timeout: 252 seconds)
[03:45:34] *** pflanze_ is now known as pflanze
[03:45:37] <neirac> EdwardIII thank you very much!
[03:45:54] <EdwardIII> no problem!
[03:46:31] *** pflanze is now known as pflanze_
[03:47:19] *** pflanze_ is now known as pflanze
[03:57:11] *** Joins: matty_ma1 (~matt@135.129.244.71)
[04:02:28] *** Quits: matty_ma1 (~matt@135.129.244.71) (Ping timeout: 256 seconds)
[04:04:35] *** Joins: cmiles74 (~miles@068-184-030-013.res.spectrum.com)
[04:10:21] *** Quits: libertyprime (~libertypr@203.211.78.24) (Ping timeout: 252 seconds)
[04:10:55] *** Quits: cmiles74 (~miles@068-184-030-013.res.spectrum.com) (Ping timeout: 256 seconds)
[04:34:31] *** Quits: neirac (~neirac@pc-122-191-45-190.cm.vtr.net) (Ping timeout: 245 seconds)
[05:51:47] *** Quits: RedNifre (~michael@dslb-002-205-008-196.002.205.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[05:53:51] *** Joins: RedNifre (~michael@dslb-088-073-104-024.088.073.pools.vodafone-ip.de)
[05:56:19] *** Joins: matty_ma1 (~matt@135.129.244.71)
[06:03:41] *** Quits: matty_ma1 (~matt@135.129.244.71) (Ping timeout: 256 seconds)
[06:10:40] *** Joins: shiranaihito (~textual@123-192-192-149.dynamic.kbronet.com.tw)
[06:16:33] *** Quits: unyu (~pyon@user/pyon) (Quit: WeeChat 3.3)
[06:22:26] *** Quits: dadinn (~dadinn@cpc87065-finc18-2-0-cust67.4-2.cable.virginm.net) (Ping timeout: 256 seconds)
[06:23:59] *** Joins: dadinn (~dadinn@cpc87065-finc18-2-0-cust67.4-2.cable.virginm.net)
[06:28:30] *** Joins: matty_ma1 (~matt@135.129.244.71)
[06:32:59] *** Quits: matty_ma1 (~matt@135.129.244.71) (Ping timeout: 252 seconds)
[07:01:45] *** Joins: matty_ma1 (~matt@135.129.244.71)
[07:06:38] *** Quits: matty_ma1 (~matt@135.129.244.71) (Ping timeout: 256 seconds)
[07:18:47] *** Joins: libertyprime (~libertypr@222-154-245-111.adsl.xtra.co.nz)
[07:19:35] *** Quits: libertyprime (~libertypr@222-154-245-111.adsl.xtra.co.nz) (Client Quit)
[07:37:19] *** Quits: azimut_ (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[07:37:46] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[07:59:53] *** Joins: matty_ma1 (~matt@135.129.244.71)
[08:00:13] *** Joins: libertyprime (~libertypr@203.211.78.24)
[08:02:49] *** Quits: dadinn (~dadinn@cpc87065-finc18-2-0-cust67.4-2.cable.virginm.net) (Ping timeout: 252 seconds)
[08:04:23] *** Quits: matty_ma1 (~matt@135.129.244.71) (Ping timeout: 256 seconds)
[08:05:21] *** Joins: matty_ma1 (~matt@135.129.244.71)
[08:10:03] *** Quits: matty_ma1 (~matt@135.129.244.71) (Ping timeout: 256 seconds)
[08:12:08] *** Joins: matty_ma1 (~matt@135.129.244.71)
[08:22:01] *** Quits: theruran_ (uid11305@id-11305.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[08:25:45] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 265 seconds)
[08:31:03] *** Quits: RedNifre (~michael@dslb-088-073-104-024.088.073.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[08:33:03] *** Joins: RedNifre (~michael@dslb-188-100-021-036.188.100.pools.vodafone-ip.de)
[08:35:26] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[08:44:50] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[08:45:11] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[08:52:19] *** Quits: libertyprime (~libertypr@203.211.78.24) (Ping timeout: 252 seconds)
[08:52:34] *** Joins: libertyprime (~libertypr@203.211.78.24)
[08:52:45] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 276 seconds)
[08:53:32] *** Quits: ToxicFrog (~ToxicFrog@198-200-100-178.cpe.distributel.net) (Ping timeout: 240 seconds)
[08:53:52] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[08:56:32] *** Joins: ToxicFrog (~ToxicFrog@198-200-100-178.cpe.distributel.net)
[09:28:49] *** Quits: lazr (~lazr@45.76.248.123) (Ping timeout: 256 seconds)
[09:39:23] *** Joins: xulfer (uid452788@id-452788.ilkley.irccloud.com)
[10:16:57] *** Quits: AlaskanEmily (~AlaskanEm@user/alaskanemily) (Remote host closed the connection)
[10:25:43] *** Joins: zakora (~zakora@dzd6d6yhqy025k7ptt0dt-3.rev.dnainternet.fi)
[10:35:52] <wink> good morning, if I have like 5 (:require [foo.bar1 :as bar1]) for 1...5 how could I reasonably go about dispatching those? i.e. I'm running (time (bar1/run ...) and don't want to write that out several times.
[10:36:09] *** Quits: zakora (~zakora@dzd6d6yhqy025k7ptt0dt-3.rev.dnainternet.fi) (Quit: Konversation terminated!)
[10:36:30] *** Joins: zakora (~zakora@dzd6d6yhqy025k7ptt0dt-3.rev.dnainternet.fi)
[10:37:23] *** Quits: matty_ma1 (~matt@135.129.244.71) (Ping timeout: 256 seconds)
[10:39:36] <wink> or maybe I am thinking too complicated and can just use (name (str "bar" num)) as a function name to call
[10:54:21] <wink> it's (resolve (symbol (str "full-ns.bar" num "/run")))
[11:07:35] *** Quits: shiranaihito (~textual@123-192-192-149.dynamic.kbronet.com.tw) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[11:19:57] *** Joins: atw (~user@151.24.221.92)
[11:21:23] *** Joins: shiranaihito (~textual@219.85.171.130)
[11:50:59] *** Joins: schmudde (~schmudde@2001:b07:ae6:7d19:4875:265e:4d5e:393c)
[11:55:55] *** Joins: matty_ma1 (~matt@135.129.244.71)
[12:00:07] *** Quits: matty_ma1 (~matt@135.129.244.71) (Ping timeout: 256 seconds)
[12:02:26] *** Quits: drbobbeaty (~drbob@c-24-14-127-107.hsd1.il.comcast.net) (Ping timeout: 252 seconds)
[12:04:25] *** Joins: drbobbeaty (~drbob@c-24-14-127-107.hsd1.il.comcast.net)
[12:12:46] *** Joins: atw` (~user@151.24.221.92)
[12:14:21] *** Quits: atw (~user@151.24.221.92) (Ping timeout: 256 seconds)
[12:19:02] *** Quits: shiranaihito (~textual@219.85.171.130) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:33:25] *** Joins: shiranaihito (~textual@219.85.167.152)
[12:39:06] *** Quits: xulfer (uid452788@id-452788.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[12:41:29] *** Quits: drbobbeaty (~drbob@c-24-14-127-107.hsd1.il.comcast.net) (Ping timeout: 252 seconds)
[12:50:31] *** Joins: drbobbeaty (~drbob@c-24-14-127-107.hsd1.il.comcast.net)
[13:08:07] *** Quits: atw` (~user@151.24.221.92) (Ping timeout: 256 seconds)
[13:29:05] *** Quits: etiago (~etiago@user/etiago) (Ping timeout: 256 seconds)
[13:32:10] *** Joins: hiepph (~hiepph@wifinat-225.polito.it)
[13:33:03] *** Quits: zakora (~zakora@dzd6d6yhqy025k7ptt0dt-3.rev.dnainternet.fi) (Quit: Konversation terminated!)
[13:33:06] *** Parts: hiepph (~hiepph@wifinat-225.polito.it) ()
[13:34:39] *** Joins: struchu (~struchu@62.87.192.114)
[13:35:17] *** Joins: etiago (~etiago@user/etiago)
[13:42:49] *** Quits: struchu (~struchu@62.87.192.114) (Quit: WeeChat 3.3)
[13:43:00] *** Joins: struchu (~struchu@62.87.192.114)
[13:44:43] *** Quits: struchu (~struchu@62.87.192.114) (Client Quit)
[13:45:03] <rovanion> Man, I've never experienced having to wait for document ready when using reagent before but apparently I'm reaching it now because the div#app I want to attach to does not exist when my mount-fn runs, but if I put it on a timeout of a second its there.
[13:50:21] *** Joins: to-hu (~Thunderbi@p200300e9af32e70065274094840a3233.dip0.t-ipconnect.de)
[13:51:07] *** Joins: struchu (~struchu@62.87.192.114)
[13:55:45] <rovanion> Have you ever had to add (js/window.addEventListener "DOMContentLoaded" mount) to your cljs-app?
[14:00:38] <ridcully> i usually just use the time honoured tradition and add the script tag at the end of the body
[14:00:45] <shiranaihito> rovanion yeah you should probably use "DOMContentLoaded" (or whatever variation of that is appropriate these days)
[14:02:53] <shiranaihito> rovanion yep, as ridcully implied, the main point is just to have the JS you want to use loaded, before you call it. That can be achieved with the "on loaded" callback, or just by arranging your JS to load in an order where everything is loaded when called
[14:03:08] *** Quits: struchu (~struchu@62.87.192.114) (Quit: WeeChat 3.3)
[14:03:19] *** Joins: struchu (~struchu@62.87.192.114)
[14:03:34] <shiranaihito> the way JS sources are arranged to load can/will affect the perceived responsiveness of your app, of course
[14:03:57] *** Quits: struchu (~struchu@62.87.192.114) (Client Quit)
[14:04:34] <shiranaihito> so generally you'd use the "on loaded" callback if you first load some "minimum necessary" scripts, show the page, and then load the rest (and finally start your app for real in the "on loaded" callback)
[14:04:35] <rovanion> Putting the JS at the end must be what I've always done. But now I'm for the first time making a website that's a mix of server-side rendered pages and SPA so the JS ended up inside the "content" of the page instead.
[14:06:32] <shiranaihito> hmm.. i'm not sure what you're referring to with "content", but with a SPA, you probably don't have much JS sprinkled in the DOM document. 
[14:06:33] <rovanion> Well. I'll be going with the "on loaded" callback then.
[14:06:54] <shiranaihito> alrighty :)
[14:07:49] <rovanion> shiranaihito: The web server will deliver a static set of header, nav and footer tags and the "SPA" (which is not a SPA) will mount inside that.
[14:07:50] <shiranaihito> (so for example, you might want to load React with a script tag at the top of the page, maybe some shared library or something, and then the rest of your code at the bottom of the source)
[14:08:05] <shiranaihito> ok
[14:08:48] <shiranaihito> in case your app is meant to grow considerably, you might want to render the header, nav and everything with React (instead of leaving parts of it in the DOM/HTML content)
[14:09:27] <rovanion> But I think it should still be possible to override the click/url-change events for pages that are part of the React page so that a page reload does not happen.
[14:10:22] *** Joins: struchu (~struchu@62.87.192.114)
[14:10:32] *** Quits: to-hu (~Thunderbi@p200300e9af32e70065274094840a3233.dip0.t-ipconnect.de) (Remote host closed the connection)
[14:10:49] <shiranaihito> you'll probably need some kind of "router" code on the client side, that calls whatever component is meant to correspond to whatever the browser's "location" is
[14:11:03] <rovanion> Yeah
[14:11:21] *** Quits: struchu (~struchu@62.87.192.114) (Client Quit)
[14:11:36] <shiranaihito> (and it might be a decent idea to write it yourself, instead of picking up some JS library by some random author of questionable competence :))
[14:12:04] *** Joins: to-hu (~Thunderbi@p200300e9af32e700f58dc90be76e3aed.dip0.t-ipconnect.de)
[14:12:23] <rovanion> shiranaihito: I'm probably going with reitit given that I use it on the backend.
[14:12:24] <shiranaihito> IIRC the most popular "React router" was infamous for breaking backwards compatibility several times, rewriting the library over and over again
[14:12:47] <shiranaihito> ok, judging by the name, it's made by some f
[14:12:50] <shiranaihito> Finnish guy :P
[14:12:54] <rovanion> Yeah I once wrote a JS/TS webapp, pain.
[14:13:03] <shiranaihito> let's hope he's not a typical front-end goof :P
[14:13:07] <rovanion> shiranaihito: Yeah, its from Metosin.
[14:13:13] <rovanion> (the company)
[14:13:16] <shiranaihito> ok
[14:13:45] <rovanion> Sadly you have to speak and understand finnish to work with them.
[14:14:02] <shiranaihito> oh? otherwise you'd like to work there?
[14:14:35] <shiranaihito> btw, as a Finn, i can't imagine that would be a strict requirement
[14:15:05] <shiranaihito> i work for a Finnish company with people from all around the world and everything is handled in English
[14:15:06] <rovanion> I have thought about it, yes.
[14:15:29] <shiranaihito> so if you're serious about working for Metosin, i doubt not knowing Finnish would be a problem
[14:16:25] <shiranaihito> we're a small nation that no one gives a shit about outside of Finland, so we all grow up understanding that we need to learn English at the very least, to be able to function in the world :) 
[14:16:26] <rovanion> Okey, guess I'll put them back on the list of "interesting companies to look into after this project is done".
[14:16:52] <shiranaihito> ok
[14:17:37] <shiranaihito> and even if they don't have any official openings, they'll probably appreciate receiving an open application from a random competent developer out there
[14:17:41] <opqdonut> rovanion: btw I work for Metosin
[14:17:44] <rovanion> shiranaihito: The chances of me knowing swedish being a plus are slim though right?
[14:18:03] <rovanion> opqdonut: Oh shit, well hi!
[14:18:05] <shiranaihito> rovanion you might be able to snacka svenska with some of your colleagues :)
[14:19:21] *** Quits: shiranaihito (~textual@219.85.167.152) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[14:20:56] <rovanion> I'll say noni, they'll say joo, and that will be the end of our respective vocabulary :D
[14:21:52] <opqdonut> that's like 99% of finnish right there already
[14:22:36] *** Quits: to-hu (~Thunderbi@p200300e9af32e700f58dc90be76e3aed.dip0.t-ipconnect.de) (Remote host closed the connection)
[14:25:37] *** Joins: to-hu (~Thunderbi@p200300e9af32e700771ef5ac6ddd61d7.dip0.t-ipconnect.de)
[14:28:28] <rovanion> Hah, right, I was thinking of joo in swedish but of course its finnish too.
[14:29:57] *** Joins: struchu (~struchu@62.87.192.114)
[15:01:13] *** Joins: rwv (~user@rwv.connected.by.freedominter.net)
[15:01:23] <rwv> hi
[15:03:21] *** Joins: neirac (~neirac@pc-122-191-45-190.cm.vtr.net)
[15:42:47] <rovanion> rwv: Yello!
[15:44:38] *** Quits: schmudde (~schmudde@2001:b07:ae6:7d19:4875:265e:4d5e:393c) (Ping timeout: 252 seconds)
[15:51:10] *** Joins: unyu (~pyon@user/pyon)
[15:52:46] <Para> rovanion:Oh, Swedes have adopted "joo" as well? I've lately heard of few words Swedes use which are directly from Finnish and they seem so...mundane words to adapt :) Which is nice.
[15:54:00] <Para> also: torille
[15:54:18] <Para> but only your local one due to social distancing
[16:05:01] *** Quits: neirac (~neirac@pc-122-191-45-190.cm.vtr.net) (Quit: ZNC 1.8.2 - https://znc.in)
[16:05:45] *** Joins: neirac (~neirac@pc-122-191-45-190.cm.vtr.net)
[16:06:37] *** Joins: matty_ma1 (~matt@135.129.244.71)
[16:08:02] <rovanion> Para: Well there are variations of it in different dialects for sure. Here is one example from my "native" skelleftemål, three joo in a short sequence: https://www.youtube.com/watch?v=ooCLe66ewEk&t=100s And a jää in the next sentence.
[16:10:32] <rovanion> Para: Wiktionary claims torille is derived from swedish torg which in turn is from old east slavic tŭrgŭ. Did I guess the right word?
[16:12:17] *** Quits: matty_ma1 (~matt@135.129.244.71) (Ping timeout: 256 seconds)
[16:12:48] <Para> rovanion: Yes, tori as in torg as in town/böle common marketplace.
[16:13:26] <Para> https://knowyourmeme.com/memes/torilla-tavataan
[16:14:15] <rovanion> Haha nice! I named my company after a böle not far from Skellefte, Hjoggböle.
[16:19:34] *** Joins: zakora (~zakora@dzd6d6ydx05jj4m87rg1t-3.rev.dnainternet.fi)
[16:26:20] *** Joins: shiranaihito (~textual@2001-b011-4000-3c43-402b-8952-bf5f-4586.dynamic-ip6.hinet.net)
[16:26:50] *** Joins: matty_ma1 (~matt@135.129.244.71)
[16:27:46] *** Quits: zakora (~zakora@dzd6d6ydx05jj4m87rg1t-3.rev.dnainternet.fi) (Quit: Konversation terminated!)
[16:32:20] *** Joins: Ilyu (~quassel@78.202.228.230)
[16:40:03] *** Quits: matty_ma1 (~matt@135.129.244.71) (Ping timeout: 256 seconds)
[16:43:07] *** Quits: etiago (~etiago@user/etiago) (Ping timeout: 252 seconds)
[16:50:21] *** Joins: schmudde (~schmudde@2001:b07:ae6:7d19:1d50:5417:24c1:578f)
[16:50:53] *** Joins: shiranaihito_ (~textual@123-192-192-149.dynamic.kbronet.com.tw)
[16:52:50] *** Quits: shiranaihito (~textual@2001-b011-4000-3c43-402b-8952-bf5f-4586.dynamic-ip6.hinet.net) (Ping timeout: 252 seconds)
[17:16:34] *** Joins: etiago (~etiago@user/etiago)
[17:16:50] *** Joins: cmiles74 (~miles@068-184-030-013.res.spectrum.com)
[18:08:28] *** Joins: matty_ma1 (~matt@135.129.244.71)
[18:50:08] *** Parts: neirac (~neirac@pc-122-191-45-190.cm.vtr.net) (Leaving)
[18:59:53] *** Quits: etiago (~etiago@user/etiago) (Ping timeout: 252 seconds)
[19:00:45] *** Joins: etiago (~etiago@user/etiago)
[19:05:41] *** Quits: matty_ma1 (~matt@135.129.244.71) (Ping timeout: 256 seconds)
[19:05:57] <ToxicFrog> Why does string/trim consider 0x1D GROUP SEPARATOR to be whitespace :(
[19:07:35] <EdwardIII> my day 2 solutions, roast me: https://gist.github.com/EdwardIII/faeea5e1b6ec2f1d447cbdaac3b54ac6
[19:09:54] <opqdonut> EdwardIII: I love how you just casually process the input twice instead of reusing the result
[19:10:22] <wink> oh keywords, fancy
[19:10:31] <wink> are strings not GOOD enough?
[19:11:20] <wink> there are definitely parts I like more than my own
[19:11:30] <opqdonut> EdwardIII: you destructure [pattern amount] in parse but not in the reduces
[19:15:48] <EdwardIII> wink: get out of here with your aldi "using-strings-for-keys"! :D
[19:16:28] <wink> I have a strong HTTP background. everything is a string until proven otherwise
[19:16:41] <EdwardIII> opqdonut: yeah it started to feel a bit action-at-a-distancy in the reduce, i did think about using destructure there too (if i wrap it in a let i mean)
[19:20:29] <EdwardIII> but wait...
[19:21:35] <EdwardIII> i don't need a let to destructure there: https://gist.github.com/EdwardIII/faeea5e1b6ec2f1d447cbdaac3b54ac6
[19:23:18] <opqdonut> indeed
[19:23:49] <opqdonut> next code golf: (update :horizontal + amount)
[19:24:52] <EdwardIII> not golf :) more like tidying up the house
[19:26:19] <aphyr> hmm, okay! Here's mine! https://gist.github.com/aphyr/310121a66dfd934ed07d8a077aad646d
[19:28:50] <aphyr> EdwardIII: You can drop the #(+ ...) fns and just write (update acc :depth + amount)
[19:29:06] <aphyr> Oh, derp, opqdonut already got there :)
[19:29:28] <opqdonut> aphyr: fancy man uses with-open in one-off scripts
[19:29:50] <EdwardIII> hey our solutions are not a million miles apart this time aphyr 
[19:29:57] <aphyr> so much of my life involves leaking filehandles hahahaha
[19:30:07] <opqdonut> aphyr: I'm kinda disappointed though, I was expecting something more along your technical interview stuff ;)
[19:30:19] <EdwardIII> makes me feel like i'm actually getting somwhere :)
[19:30:27] <aphyr> opqdonut: hahaha, oh, yeah, those are intentionally baroque, my normal code is muuuuch more readable
[19:30:38] <opqdonut> never meet your idols they say... :(
[19:30:41] <EdwardIII> technical interview stuff?
[19:30:54] <aphyr> EdwardIII: Yeah, I was just about to say, I think we landed on exactly the same track here--reduce + case
[19:31:11] *** Quits: libertyprime (~libertypr@203.211.78.24) (Ping timeout: 256 seconds)
[19:31:49] <opqdonut> EdwardIII: oh you're in for a treat! https://aphyr.com/posts/340-reversing-the-technical-interview
[19:32:02] <aphyr> For small bits of state contained in a single reduce, I'll often prefer using vector destructuring for the accumulator instead of map destructuring, just cuz it's a little faster and not a huge hit to composability
[19:32:03] <opqdonut> better link: https://aphyr.com/tags/interviews
[19:32:05] <EdwardIII> i can already tell this is going to be perverse
[19:32:10] <aphyr> EdwardIII: oh they're FUN :D
[19:32:27] <EdwardIII> aphyr: yes, and it's a bit less noise over all too i see
[19:32:42] <aphyr> Yeah, but I'd say your approach is definitely defensible.
[19:32:54] <EdwardIII> ol' hash boy
[19:32:57] <aphyr> If that state got used anywhere else I'd be making a map out of it too
[19:33:42] <aphyr> `next (apply *)` is totally a code-golf hack, and I dunno if I'd do that in "real" code
[19:34:16] <aphyr> Your decomposition into course-with-aim and solving doing the multiplication separately makes a lot of sense
[19:35:14] <EdwardIII> (cons 1 (cons 2 (cons 3 nil))) haha, this is taking me back to the (non-joke) DAS video on lambda calculus
[19:35:42] <EdwardIII> aphyr: i sometimes find clojure a bit opaque so i have to break things down a lot so my unfamiliar mind can grasp the code
[19:36:15] <aphyr> EdwardIII: I'd say your solution shows a pretty fluent command of the language!
[19:36:48] <EdwardIII> great, so other than the useless use of #() i've passed the interview!
[19:42:36] <EdwardIII> i understand point-free (he says) but i don't quite get how '+ amount' works. if i did that anywhere else i'd have to use partial right? does update do that behind the scenes? gonna take a peep at the src as the documentation is not that clear to me: (update m k f x y z & more)
[19:43:11] <aphyr> update and swap both have this trick--they invoke your function f with the object being changed, THEN x y z as further args.
[19:44:09] <aphyr> So you can write things like (swap! counter + 2) to increment a counter by 2, or (update cats :ms-mittens assoc :fuzzy? true)
[19:44:09] <EdwardIII> riiight ok
[19:45:01] <aphyr> this tends to work prety often because most "transform-a-thing" functions take the thing as their first arg
[19:45:29] <aphyr> (breaks down for sequence functions though--if you want to update something with `map f`, you've gotta use either partial or a fn literal
[19:50:25] <EdwardIII> hm
[20:02:57] *** Quits: Ilyu (~quassel@78.202.228.230) (Ping timeout: 252 seconds)
[20:05:06] *** Joins: Ilyu (~quassel@78.202.228.230)
[20:05:12] *** Quits: uncleyear (~ian@pppoe.178-66-156-44.dynamic.avangarddsl.ru) (Read error: Connection reset by peer)
[20:05:30] *** Joins: uncleyear (~ian@pppoe.178-66-156-44.dynamic.avangarddsl.ru)
[20:06:27] *** Quits: uncleyear (~ian@pppoe.178-66-156-44.dynamic.avangarddsl.ru) (Remote host closed the connection)
[20:07:26] *** Joins: uncleyear (~ian@pppoe.178-66-156-44.dynamic.avangarddsl.ru)
[20:10:59] *** Joins: seschwar (~seschwar@user/seschwar)
[20:12:29] *** Quits: struchu (~struchu@62.87.192.114) (Quit: WeeChat 3.3)
[20:14:08] *** Quits: rwv (~user@rwv.connected.by.freedominter.net) (Ping timeout: 252 seconds)
[20:26:52] *** Quits: Ilyu (~quassel@78.202.228.230) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[20:40:07] <leah2> funny how similar our solutions are
[20:42:06] <wink> aphyr: that's better commented than most of the production code I read. :|
[20:44:55] <wink> pushed my clojure solutions now as well: https://github.com/winks/adventofcode/blob/master/2021/clojure/src/aoc/day02.clj#L28
[20:48:06] <EdwardIII> neat
[20:48:48] <wink> (disregard the recursion with an index, I wanteed to try it out and it is slow, I guess too many (count lines))
[20:49:40] *** Quits: to-hu (~Thunderbi@p200300e9af32e700771ef5ac6ddd61d7.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[20:49:54] <aphyr> wink: Do you know about (recur)?
[20:50:12] <aphyr> I think this solution consumes a stack frame for every line
[20:50:47] <wink> aphyr: I heard about it but I don't remember using it
[20:51:06] * wink should put an ascii art bucket of salt inside the code
[20:51:11] <wink> didn't write clojure for so long.
[20:51:19] <leah2> wink is used languages with tco now :)
[20:51:24] <leah2> *used to
[20:51:47] <wink> wink's life has been "fix it with bash" for too long to be honest
[20:52:17] *** Quits: uncleyear (~ian@pppoe.178-66-156-44.dynamic.avangarddsl.ru) (Ping timeout: 256 seconds)
[20:53:05] <wink> is "10 years of not knowing clojure" some kind of badge of honor? :P
[20:58:49] *** Joins: uncleyear (~ian@pppoe.178-66-158-195.dynamic.avangarddsl.ru)
[21:02:26] *** Joins: ozzymcduff (~mathieu@81-234-151-21-no94.tbcn.telia.com)
[21:11:09] *** Joins: to-hu (~Thunderbi@p57b5aa80.dip0.t-ipconnect.de)
[21:21:14] * manicennui hasn't known COBOL for over 40 years.
[21:25:20] *** Joins: matty_ma1 (~matt@135.129.244.71)
[21:29:51] *** Quits: matty_ma1 (~matt@135.129.244.71) (Ping timeout: 252 seconds)
[21:30:35] *** Quits: schmudde (~schmudde@2001:b07:ae6:7d19:1d50:5417:24c1:578f) (Ping timeout: 252 seconds)
[21:36:08] *** Joins: schmudde (~schmudde@2001:b07:ae6:7d19:1d50:5417:24c1:578f)
[21:54:05] *** Joins: neirac (~neirac@pc-122-191-45-190.cm.vtr.net)
[22:10:14] <neirac> I'm slurping an html page, but the img is not showing, if I see the same html generated it works on my browser but not through the ring instance, do I need a config on lein to make the directory where the image is available?
[22:11:38] <Para> If it's a JavaScript based web page, you need to somehow evaluate the page first, just slurping the raw html won't do the trick.
[22:15:32] <ridcully> could also be a problem with the image being relative.  check your dev-tools to find out where the browser looks (there should be 404).  then check the logs on the server side
[22:16:06] <ridcully> but if you just have added a route to where the handler slurps the html, you most likely also need a route to slurp the image?
[22:17:21] <ridcully> and the default place, that lein uses for additional stuff, that ends up in the classpath is `resources`
[22:18:52] <neirac> Para is just html, ridcully yes the img is relative but works just using the browser, on my compojure route I see the page without the image
[22:21:50] <ridcully> check your dev-console and find out what is wrong.  eliminate the guesswork
[22:27:22] <neirac> ridcully just checked, the image comes from the same path, compojure route does not show it but opening the html on the browser shows it
[22:30:06] <ridcully> it's to guess what you are after.  the fact, that it works in your browser when you server it from somewhere else does not help that much.  do you generate the html, or do you really slurp it in your own handler, or do you use a static resource handler? 
[22:30:34] <ridcully> *it's hard to guess
[22:32:18] <ridcully> neirac: https://stackoverflow.com/questions/57367826/serve-static-resources-using-clojures-ring - maybe this helps.  it's full example with a similar problem (css for html)
[22:40:56] <EdwardIII> neirac: also are you using site-defaults? like this (wrap-defaults #'app-routes site-defaults) - from https://github.com/ring-clojure/ring-defaults ?
[22:42:31] *** Quits: schmudde (~schmudde@2001:b07:ae6:7d19:1d50:5417:24c1:578f) (Ping timeout: 268 seconds)
[22:49:49] <neirac> thanks I'll check those links
[22:59:26] <mwnaylor> I have a Clojure library project. It compiles correctly and correctly builds an uberjar in the target directory. I don't know how to deploy it to 𝘫𝘶𝘴𝘵 my ~/.m2 diretory or how to properly set dependencies for other projects to use it. I cloned the lein repository and am reading the *.md doc files, but I don't understand how to configure my project.clj files properly.
[23:01:12] <mwnaylor> I understand the high level theory of tools like lein, gradle, sbt, etc, but tend to get lost in the implementation details.
[23:01:23] <ridcully> `lein install` should put it in your .m2 dir
[23:02:57] <neirac> ridcully, EdwardIII thanks the site-defaults did the trick
[23:03:31] <mwnaylor> `lein install` worked.
[23:08:02] <mwnaylor> Now, how do I set the dependencies in a project to pull only from my .m2 dir?
[23:10:12] <ridcully> add it as a dep like any other.  use the group/artifact version from the install
[23:10:37] <ridcully> if you have to do that often because you are developing the lib in question, there are shortcuts to do so
[23:22:03] *** Quits: op2 (~op2@user/op2) (Ping timeout: 252 seconds)
[23:30:40] *** Joins: narendraj9 (~user@2a02:8109:b63f:ff7c::57b2)
[23:33:23] <mwnaylor> Do I need to set the group/artifact in the project.clj in my library project? Or does lein determine that from the directory? I admit to not understanding group and artifact. I'm used to pasting the dependency clause given in the webpage describing a package.
[23:34:56] <mwnaylor> My only experience in publishing to local .m2 was in Scala via sbt, and that was a bit more than five years ago.
[23:37:19] <mwnaylor> I've been learning Clojure bit by bit on my own. I'd love to be a junior in a Clojure shop to have someone get me over intialial configurations issues. Don't have that going for me, so I'm doing it the hard way.
[23:37:41] <aphyr> lein derives the group and artifact from the project name--the thing immediately following `defproject`
[23:38:22] *** Quits: cmiles74 (~miles@068-184-030-013.res.spectrum.com) (Quit: WeeChat 2.8)
[23:41:20] <mwnaylor> Ok, defproject. Mine has several dot (.) separators. Is the artifact the last one in the projectname? ie. if name is aaa.bbb.ccc.ddd, aaa.bbb.ccc is the group and ddd is the artifact?
[23:42:36] *** Joins: cmiles74 (~miles@068-184-030-013.res.spectrum.com)
[23:43:57] <ridcully> in theory it should work to use what is in project right after the defproject.  the group usually would be separated with a slash
[23:44:27] <ridcully> so without a group this end up in the same group as the artifact and lein does not insist on it... iirc?
[23:46:11] <ridcully> if in doubt, you can look at the generated pom.xml or if totally unsure you can try to `find ~/.m2/repository -name $JAR` where the lein install showed the name of the jar while building
[23:48:30] *** Joins: struchu (~struchu@staticline-31-183-169-131.toya.net.pl)
[23:49:38] <ridcully> mwnaylor: yeah just use aaa.bbb.ccc.ddd "thversion" like in the lib project.clj in your other project
[23:50:44] <mwnaylor> re: pom.xml. Leads me to think I did something wrong when I created the project. The groupId and the artifactId are identical.
[23:52:41] <ridcully> i guess that is the slash missing
[23:52:55] <ridcully> it still works though
[23:53:23] <ridcully> if you use aaa.bbb.ccc/ddd as project name you will get the group/artifact more to your liking
[23:55:25] *** Quits: struchu (~struchu@staticline-31-183-169-131.toya.net.pl) (Quit: WeeChat 3.3)
[23:56:56] *** Joins: struchu (~struchu@staticline-31-183-169-131.toya.net.pl)
