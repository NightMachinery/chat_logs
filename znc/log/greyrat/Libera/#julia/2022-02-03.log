[00:41:32] *** Quits: adigitoleo (~adigitole@2001:8003:1d19:4500:a4cd:653f:d208:2b8e) (*.net *.split)
[00:41:33] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (*.net *.split)
[00:41:34] *** Quits: lunik1 (~lunik1@37.205.14.203) (*.net *.split)
[00:41:35] *** Quits: kmh_ (~kmh@94.31.106.215) (*.net *.split)
[00:41:36] *** Quits: krjst (~krjst@2604:a880:800:c1::16b:8001) (*.net *.split)
[00:41:36] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (*.net *.split)
[00:41:36] *** Quits: ^[ (~user@user//x-8473491) (*.net *.split)
[00:41:36] *** Quits: Erutuon (~Erutuon@user/erutuon) (*.net *.split)
[00:41:37] *** Quits: kir0ul (~kir0ul@89.234.141.147) (*.net *.split)
[00:41:37] *** Quits: yosafbridge (~yosafbrid@static.38.6.217.95.clients.your-server.de) (*.net *.split)
[00:41:37] *** Quits: sherlock_95 (~sherlock_@static.131.42.161.5.clients.your-server.de) (*.net *.split)
[00:41:37] *** Quits: ermo (~ermo@user/ermo) (*.net *.split)
[00:41:38] *** Quits: ouemt (~quassel@user/ouemt) (*.net *.split)
[00:41:38] *** Quits: NightMonkey (~NightMonk@user/nightmonkey) (*.net *.split)
[00:41:39] *** Quits: Inst (~delicacie@2601:6c4:4080:3f80:40a0:b50a:e8ed:d1eb) (*.net *.split)
[00:41:39] *** Quits: mikko (~mikko@2a02:7b40:d418:6a61::1) (*.net *.split)
[00:41:39] *** Quits: bsilvereagle3 (~bsilverea@osuosc/bsilvereagle) (*.net *.split)
[00:41:39] *** Quits: energizer (~energizer@user/energizer) (*.net *.split)
[00:41:39] *** Quits: seds (sid492514@user/seds) (*.net *.split)
[00:41:40] *** Quits: dTal (~quassel@dragonbox/wizzard/dtal) (*.net *.split)
[00:41:40] *** Quits: Ekho (~Ekho@user/ekho) (*.net *.split)
[00:41:40] *** Quits: cp--- (~cp-@b157153.ppp.asahi-net.or.jp) (*.net *.split)
[00:41:40] *** Quits: mrmonday (~robert@octarineparrot.com) (*.net *.split)
[00:41:41] *** Quits: eco (~ubuntu@ec2-54-201-230-197.us-west-2.compute.amazonaws.com) (*.net *.split)
[00:41:42] *** Quits: averell (~averell@user/averell) (*.net *.split)
[00:41:42] *** Quits: mht-wtf (~mht@2a03:b0c0:3:e0::1e2:c001) (*.net *.split)
[00:41:42] *** Quits: kiwiroy (sid374179@id-374179.lymington.irccloud.com) (*.net *.split)
[00:41:42] *** Quits: wrycode (~wrycode@168.235.110.39) (*.net *.split)
[00:41:43] *** Quits: edm (sid147314@id-147314.hampstead.irccloud.com) (*.net *.split)
[00:41:43] *** Quits: mzan (~quassel@mail.asterisell.com) (*.net *.split)
[00:41:43] *** Quits: cln (sid336875@id-336875.ilkley.irccloud.com) (*.net *.split)
[00:41:43] *** Quits: karthik (~karthik@user/karthik) (*.net *.split)
[00:41:43] *** Quits: notzmv (~zmv@user/notzmv) (*.net *.split)
[00:41:45] *** Quits: greenbagels (~gb@user/greenbagels) (*.net *.split)
[00:44:07] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[00:44:07] *** Joins: NightMonkey (~NightMonk@user/nightmonkey)
[00:44:07] *** Joins: ouemt (~quassel@user/ouemt)
[00:44:07] *** Joins: ermo (~ermo@user/ermo)
[00:44:07] *** Joins: greenbagels (~gb@user/greenbagels)
[00:44:07] *** Joins: kiwiroy (sid374179@id-374179.lymington.irccloud.com)
[00:44:07] *** Joins: mht-wtf (~mht@2a03:b0c0:3:e0::1e2:c001)
[00:44:07] *** Joins: averell (~averell@user/averell)
[00:44:07] *** Joins: eco (~ubuntu@ec2-54-201-230-197.us-west-2.compute.amazonaws.com)
[00:44:07] *** Joins: sherlock_95 (~sherlock_@static.131.42.161.5.clients.your-server.de)
[00:44:07] *** Joins: yosafbridge (~yosafbrid@static.38.6.217.95.clients.your-server.de)
[00:44:07] *** Joins: kir0ul (~kir0ul@89.234.141.147)
[00:44:07] *** Joins: Erutuon (~Erutuon@user/erutuon)
[00:44:07] *** Joins: notzmv (~zmv@user/notzmv)
[00:44:07] *** Joins: wrycode (~wrycode@168.235.110.39)
[00:44:07] *** Joins: mrmonday (~robert@octarineparrot.com)
[00:44:07] *** Joins: cp--- (~cp-@b157153.ppp.asahi-net.or.jp)
[00:44:07] *** Joins: Ekho (~Ekho@user/ekho)
[00:44:07] *** Joins: dTal (~quassel@dragonbox/wizzard/dtal)
[00:44:14] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Max SendQ exceeded)
[00:44:27] *** Joins: adigitoleo (~adigitole@2001:8003:1d19:4500:a4cd:653f:d208:2b8e)
[00:44:31] *** Joins: lunik1 (~lunik1@37.205.14.203)
[00:44:31] *** Joins: kmh_ (~kmh@94.31.106.215)
[00:44:31] *** Joins: krjst (~krjst@2604:a880:800:c1::16b:8001)
[00:44:31] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[00:44:31] *** Joins: ^[ (~user@user//x-8473491)
[00:44:39] *** Joins: dostoyevsky2 (~sck@static.251.39.47.78.clients.your-server.de)
[00:44:49] *** Joins: Inst (~delicacie@2601:6c4:4080:3f80:40a0:b50a:e8ed:d1eb)
[00:44:49] *** Joins: mikko (~mikko@2a02:7b40:d418:6a61::1)
[00:44:49] *** Joins: bsilvereagle3 (~bsilverea@osuosc/bsilvereagle)
[00:44:49] *** Joins: energizer (~energizer@user/energizer)
[00:44:49] *** Joins: seds (sid492514@user/seds)
[00:45:17] *** Joins: edm (sid147314@id-147314.hampstead.irccloud.com)
[00:45:17] *** Joins: mzan (~quassel@mail.asterisell.com)
[00:45:17] *** Joins: cln (sid336875@id-336875.ilkley.irccloud.com)
[00:45:17] *** Joins: karthik (~karthik@user/karthik)
[00:47:13] *** Quits: dostoyevsky2 (~sck@static.251.39.47.78.clients.your-server.de) (Client Quit)
[00:47:27] *** Joins: dostoyevsky2 (~sck@static.251.39.47.78.clients.your-server.de)
[00:48:04] *** Quits: dostoyevsky2 (~sck@static.251.39.47.78.clients.your-server.de) (Client Quit)
[00:48:22] *** Joins: dostoyevsky2 (~sck@static.251.39.47.78.clients.your-server.de)
[01:03:29] *** Quits: dostoyevsky2 (~sck@static.251.39.47.78.clients.your-server.de) (Quit: leaving)
[01:03:41] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[01:12:54] *** Joins: harwiltz (~harwiltz@modemcable206.243-202-24.mc.videotron.ca)
[01:13:16] *** Quits: harwiltz (~harwiltz@modemcable206.243-202-24.mc.videotron.ca) (Client Quit)
[01:31:04] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17)
[02:03:57] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 240 seconds)
[02:07:15] *** Joins: Erutuon (~Erutuon@user/erutuon)
[02:30:46] *** Quits: Inst (~delicacie@2601:6c4:4080:3f80:40a0:b50a:e8ed:d1eb) (Ping timeout: 245 seconds)
[04:12:45] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[05:08:36] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[05:10:13] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:29:41] *** Quits: adigitoleo (~adigitole@2001:8003:1d19:4500:a4cd:653f:d208:2b8e) (Quit: adigitoleo)
[05:33:41] *** Joins: cul8r (~cul8r@2601:8c3:4000:b0d0::f2bf)
[05:54:43] *** Joins: adigitoleo (~adigitole@2001:8003:1d19:4500:a4cd:653f:d208:2b8e)
[06:22:49] *** Quits: cul8r (~cul8r@2601:8c3:4000:b0d0::f2bf) (Quit: abducted by aliens)
[06:48:04] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[06:50:55] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[06:57:01] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[07:03:21] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[07:13:33] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[07:16:28] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[07:41:00] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[07:42:51] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[09:17:37] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 250 seconds)
[09:34:51] *** Joins: notzmv (~zmv@user/notzmv)
[10:16:12] *** Joins: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net)
[10:52:39] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17)
[11:22:58] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[11:27:45] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 256 seconds)
[11:29:10] *** Joins: MajorBiscuit (~MajorBisc@c-001-015-052.client.tudelft.eduvpn.nl)
[11:54:54] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:24:57] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17)
[12:41:23] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[12:49:17] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 240 seconds)
[12:52:33] *** Joins: Erutuon (~Erutuon@user/erutuon)
[12:55:22] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:43:56] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:09:37] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 240 seconds)
[14:12:38] *** Quits: kmh_ (~kmh@94.31.106.215) (Quit: Leaving)
[14:27:54] *** Joins: kmh (~kmh@2a00:6020:5004:6800:460a:ef03:e89d:7820)
[14:31:55] *** Quits: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[15:12:00] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17)
[15:41:57] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 240 seconds)
[15:53:58] <adigitoleo> best way to pass slices around? typeof([:,:,1]) is Vector{Any}, docs says something about using Base.Slice but I can't find much info about it
[15:59:37] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[16:00:04] <adigitoleo> guess I'll just have to use type annotations to ensure Vector{Union{Colon,Int}}
[16:10:52] <MajorBiscuit> adigitoleo: I can't answer your question but you might try the Julia Slack or the Julia Zulip. They have many more people there and I'm sure someone will be able to answer
[16:17:54] <adigitoleo> Didn't know about Zulip, interesting. I wonder what people think about bridging it: https://zulip.com/integrations/doc/irc
[16:20:43] <mikko> can you be more specific about what you mean by slices? like, what are you actually trying to do?
[16:21:10] <adigitoleo> have to dynamically create the slice, pass it to another method
[16:23:07] <adigitoleo> data dimensions can vary, data is coming from a more specific method into a more general method that doesn't know about dimensions
[16:23:28] <adigitoleo> so I thought I'll just have a "slice" object as an arg
[16:24:38] <adigitoleo> can't take the slice beforehand because I still need to reference some other data in the same dataset
[16:25:27] <adigitoleo> dataset is from NetCDF, kind of like a dict
[16:26:50] <mikko> i see, so using @view is probably not feasible
[16:28:27] *** Joins: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net)
[16:29:25] <mikko> looks like in getindex(A::AbstractArray, I...) the indices are not annotated, and it calls to_indices(A, I) on it
[16:29:26] <adigitoleo> yeah the actual data is loaded lazily, so it's only read when extracted with [:] or similar
[16:44:41] <mikko> i can't make any sense of this Base.Slice either :D
[16:46:48] <adigitoleo> tried for "fun" with CartesianIndices, got this https://x0.at/pt1_.txt
[16:47:04] <adigitoleo> ot exactly intuitive imho
[16:47:11] <adigitoleo> s/on/not
[16:48:28] <adigitoleo> bleh whatever Indices = Union{Colon,Int,AbstractRange} seems like the way to go for now
[16:52:25] <mikko> technically you can also index with vectors, not sure if that's relevant for your use case
[16:52:52] <mikko> (and maybe other things too...)
[16:53:18] <adigitoleo> shh don't tell me :)
[16:59:53] <adigitoleo> does CSV.jl fail to precompile for anyone else (on julia 1.7)?
[17:19:21] <adigitoleo> nevermind fixed it
[17:27:43] *** Quits: kmh (~kmh@2a00:6020:5004:6800:460a:ef03:e89d:7820) (Quit: Leaving)
[17:34:23] *** Quits: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[17:55:48] *** Joins: kmh (~kmh@2a00:6020:5004:6800:9881:9737:5341:5446)
[18:05:35] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[18:09:03] <mikko> i get all kinds of precompilation errors using the distro provided packages (both arch and opensuse), but the official binary (or julia-bin from AUR) is reliable
[18:09:34] <adigitoleo> yeah I'm on julia-bin, too many issues otherwise
[18:57:04] *** Joins: jdarnold (~jdarnold@static-98-118-34-170.bstnma.fios.verizon.net)
[19:24:23] *** Joins: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net)
[19:27:40] <ninjin> Last time I looked at Arch’s source build I pretty much ran away screaming. It had mismatching versions of dependencies and I doubt it would even pass the test suite.
[19:31:21] *** Quits: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[20:28:41] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17)
[20:36:52] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[21:31:29] *** Quits: MajorBiscuit (~MajorBisc@c-001-015-052.client.tudelft.eduvpn.nl) (Ping timeout: 250 seconds)
[21:38:27] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:38:41] *** Joins: neshpion_ (~neshpion@gateway/tor-sasl/neshpion)
[21:38:41] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Killed (NickServ (GHOST command used by neshpion_)))
[21:38:50] *** neshpion_ is now known as neshpion
[22:44:46] *** Joins: Guest25 (~Guest25@85-76-18-16-nat.elisa-mobile.fi)
[22:50:07] <Guest25> Hello. I am a complete beginner with Julia language. I have a problem that i'm trying to solve, but i'm stuck. I have a device behind a serial port. I need to scan the device, because i do not know if it's functional and what the ID and speed of communication is. I got as far as making the whole scanning, it sends a message with different IDs and
[22:50:08] <Guest25> speeds based on the libSerialport manual, but testing with a functional device, it doesn't react to the response (or perhaps there is a problem with sending even though it looks ok). When i manually send the message, i get the correct response.
[22:51:10] <Guest25> manually i mean with a terminal program
[22:56:20] <Guest25> I am using the LibSerialPort.set_read_timeout and the example code of that. I have 3 response possibilities, which i made strings of and use the readuntil-function with 3 lines and strings of the responses, but i don't know where to try to see what response i get if any
[22:59:06] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17)
[23:04:11] *** Joins: Erutuon (~Erutuon@user/erutuon)
[23:24:40] *** Joins: c0sroe (~c0sroe@host86-181-35-135.range86-181.btcentralplus.com)
[23:30:28] *** Quits: c0sroe (~c0sroe@host86-181-35-135.range86-181.btcentralplus.com) (Quit: leaving)
[23:36:33] *** Quits: Guest25 (~Guest25@85-76-18-16-nat.elisa-mobile.fi) (Quit: Client closed)
[23:36:57] *** Joins: Guest25 (~Guest25@85-76-18-16-nat.elisa-mobile.fi)
[23:41:55] <Guest25> Any ideas? Perhaps the carriage return on the end of both message and reply causes some sort of issue
[23:48:11] *** Quits: Guest25 (~Guest25@85-76-18-16-nat.elisa-mobile.fi) (Quit: Client closed)
[23:51:38] *** Joins: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net)
[23:54:31] *** Joins: Guest25 (~Guest25@85-76-18-16-nat.elisa-mobile.fi)
[23:55:25] <Guest25> No, the sending is correct for the first 9 IDs, then something goes wrong and its garbage, but the working device has ID 01, so something is wrong with the reply thing.
