[00:00:05] *** Quits: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net) (Ping timeout: 264 seconds)
[00:00:22] *** Joins: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net)
[00:02:30] *** Quits: Null_A (~null_a@2601:645:8700:2290:2108:e73c:fa5c:78e) (Remote host closed the connection)
[00:03:30] *** Quits: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net) (Client Quit)
[00:03:45] *** Joins: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net)
[00:08:45] *** Joins: Null_A (~null_a@2601:645:8700:2290:2108:e73c:fa5c:78e)
[00:16:17] *** Quits: Null_A (~null_a@2601:645:8700:2290:2108:e73c:fa5c:78e) (Ping timeout: 264 seconds)
[00:18:13] *** Joins: Pickchea (~private@user/pickchea)
[00:23:55] *** Joins: Null_A_ (~null_a@2601:645:8700:2290:a969:7066:ab00:d0f1)
[00:29:59] *** Quits: Null_A_ (~null_a@2601:645:8700:2290:a969:7066:ab00:d0f1) (Ping timeout: 246 seconds)
[00:33:41] *** Quits: ngz (~ngz@user/ngz) (Ping timeout: 264 seconds)
[00:42:48] *** Joins: Null_A (~null_a@2601:645:8700:2290:2cad:b1e0:101a:8137)
[00:49:57] *** Quits: Null_A (~null_a@2601:645:8700:2290:2cad:b1e0:101a:8137) (Remote host closed the connection)
[00:50:10] *** Joins: Null_A (~null_a@2601:645:8700:2290:2cad:b1e0:101a:8137)
[00:56:56] *** Quits: Null_A (~null_a@2601:645:8700:2290:2cad:b1e0:101a:8137) (Ping timeout: 246 seconds)
[00:58:41] *** Joins: Null_A (~null_a@2601:645:8700:2290:dc8f:40ba:7f6f:b65c)
[00:58:50] *** Quits: eddof13 (~textual@200.52.90.50) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:00:04] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.2.1)
[01:01:06] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[01:02:38] *** Joins: ur5us (~ur5us@2406:e002:6bd3:6701:534f:b327:a77f:88b3)
[01:11:57] *** Quits: ur5us (~ur5us@2406:e002:6bd3:6701:534f:b327:a77f:88b3) (Quit: Leaving)
[01:13:54] *** Joins: jab (~user@72.12.220.132)
[01:21:48] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[01:22:52] *** Joins: hendursaga (~weechat@user/hendursaga)
[01:29:42] *** Joins: ur5us (~ur5us@2406:e002:6bd3:6701:ed2b:d166:a5fd:8ce5)
[01:29:55] *** Quits: natrys (~natrys@user/natrys) (Quit: natrys)
[01:31:04] *** Quits: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net) (Quit: WeeChat 3.2.1)
[01:36:56] *** Quits: seschwar (~seschwar@user/seschwar) (Quit: :wq)
[01:39:09] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[01:46:29] *** Quits: Null_A (~null_a@2601:645:8700:2290:dc8f:40ba:7f6f:b65c) (Remote host closed the connection)
[01:48:25] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[01:49:00] *** Joins: Null_A (~null_a@2601:645:8700:2290:dc8f:40ba:7f6f:b65c)
[01:58:55] *** Quits: Null_A (~null_a@2601:645:8700:2290:dc8f:40ba:7f6f:b65c) (Remote host closed the connection)
[02:06:53] *** Joins: Null_A (~null_a@2601:645:8700:2290:dc8f:40ba:7f6f:b65c)
[02:32:40] *** Quits: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net) (Read error: Connection reset by peer)
[02:35:16] *** Joins: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net)
[02:39:57] *** Quits: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net) (Client Quit)
[02:51:41] *** Quits: jab (~user@72.12.220.132) (Remote host closed the connection)
[02:52:15] *** Quits: umaxtu (~umaxtu@znc.umaxtu.space) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[02:55:06] *** Joins: umaxtu (~umaxtu@znc.umaxtu.space)
[03:14:50] *** Joins: jab (~user@72.12.220.132)
[04:16:15] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 265 seconds)
[04:18:34] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[04:21:48] *** Quits: Null_A (~null_a@2601:645:8700:2290:dc8f:40ba:7f6f:b65c) (Remote host closed the connection)
[04:23:02] *** Quits: srhm (~srhm@user/srhm) (Ping timeout: 252 seconds)
[04:23:52] *** Joins: Null_A (~null_a@2601:645:8700:2290:dc8f:40ba:7f6f:b65c)
[04:23:57] *** Joins: srhm (~srhm@user/srhm)
[04:26:24] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 265 seconds)
[04:29:35] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[04:35:07] *** Joins: Guest75 (~Guest75@cpc115328-walt25-2-0-cust130.13-2.cable.virginm.net)
[04:35:08] *** Quits: Null_A (~null_a@2601:645:8700:2290:dc8f:40ba:7f6f:b65c) (Remote host closed the connection)
[04:35:41] *** Joins: Null_A (~null_a@2601:645:8700:2290:dc8f:40ba:7f6f:b65c)
[04:36:49] <Guest75> Is org.gpg good place to store passwords? I use MacOS and there is a key manager, so after I open one org.gpg I can open others without typing gpg password. Is it secure?
[04:36:54] *** Joins: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net)
[04:37:55] <Guest75> Or should I rather use KeePass
[04:44:34] *** Quits: Guest75 (~Guest75@cpc115328-walt25-2-0-cust130.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[04:44:46] *** Quits: jab (~user@72.12.220.132) (Ping timeout: 265 seconds)
[04:52:07] <selfsymmetric-mu> I suddenly have dots in my left fringe in org mode and I have no idea why.
[04:52:48] <selfsymmetric-mu> Normally I'd do `describe-face` to figure out where it's from but I can't put point on the fringe.
[04:56:39] *** Quits: Null_A (~null_a@2601:645:8700:2290:dc8f:40ba:7f6f:b65c) (Remote host closed the connection)
[05:00:48] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[05:01:27] *** Joins: srhm (~srhm@user/srhm)
[05:04:59] *** Joins: Nahra (~user@static.161.95.99.88.clients.your-server.de)
[05:07:18] *** Joins: garjola_ (~garjola@148.110.141.77.rev.sfr.net)
[05:08:02] *** Quits: garjola (~garjola@user/garjola) (Ping timeout: 260 seconds)
[05:27:58] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[06:11:50] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.2.1)
[06:42:56] *** Quits: jealousmonk (~user@2804:431:e7c4:4247:75cd:c27b:296a:fb0f) (Remote host closed the connection)
[06:48:56] *** Parts: pranavats (3fba1d1b34@jabberfr.org) (Disconnected: Replaced by new connection)
[06:49:08] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[07:20:51] *** Quits: dragestil_ (~quassel@user/dragestil) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[07:37:22] *** Quits: vsync (~vsync@50-250-0-97-static.hfc.comcastbusiness.net) (Ping timeout: 260 seconds)
[07:48:25] *** Joins: benin036932301 (~benin@183.82.179.112)
[08:03:34] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[08:14:28] *** Quits: jtgd (~jtgd@068-186-050-156.res.spectrum.com) (Quit: WeeChat 3.2.1)
[08:17:21] *** Joins: jtgd (~jtgd@068-186-050-156.res.spectrum.com)
[08:19:47] *** Quits: jtgd (~jtgd@068-186-050-156.res.spectrum.com) (Client Quit)
[08:20:27] *** Joins: jtgd (~jtgd@068-186-050-156.res.spectrum.com)
[08:20:57] *** Quits: jtgd (~jtgd@068-186-050-156.res.spectrum.com) (Client Quit)
[08:28:11] *** Joins: jtgd (~jtgd@068-186-050-156.res.spectrum.com)
[09:34:18] *** Joins: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net)
[09:35:56] *** Joins: vsync (~vsync@50-250-0-97-static.hfc.comcastbusiness.net)
[10:27:37] *** Joins: sjbutler (~simon@193.11.98.26)
[10:38:14] *** Quits: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net) (Quit: ZNC 1.8.2 - https://znc.in)
[10:42:01] *** Joins: madix (~madix@april/staff/madix)
[10:44:22] <pjb> The advantage of keeping your password in a org file, is that it's very portable: you don't lose your passwords when you change of system (even if you thought about backuping OS specific files such as ~/Application\ Support/, you won't have the programs to decode those files on a new OS!)
[10:45:39] <pjb> On the other hand integrated password managers are cool to use, since they make creating and using the numerous web passwords easy.
[10:46:09] <pjb> There should be a command to export passwords from password manager to text files…
[10:57:06] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[11:13:46] *** Quits: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net) (Ping timeout: 252 seconds)
[11:19:26] *** Joins: ur5us_ (~ur5us@2406:e002:6bd3:6701:534f:b327:a77f:88b3)
[11:20:29] *** Quits: ur5us (~ur5us@2406:e002:6bd3:6701:ed2b:d166:a5fd:8ce5) (Ping timeout: 264 seconds)
[11:21:10] *** Quits: sjbutler (~simon@193.11.98.26) (Remote host closed the connection)
[11:24:10] *** Quits: ur5us_ (~ur5us@2406:e002:6bd3:6701:534f:b327:a77f:88b3) (Ping timeout: 268 seconds)
[11:29:14] *** Joins: Guest75 (~Guest75@cpc115328-walt25-2-0-cust130.13-2.cable.virginm.net)
[11:29:27] <Guest75> Is org.gpg good place to store passwords? I use MacOS and there is a key manager, so after I open one org.gpg I can open others without typing gpg password. Is it secure? Or should I rather use KeePass or similar?
[11:35:40] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:38:27] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:39:00] *** Joins: esel (~user@217.140.106.13)
[11:41:52] <Demosthenex> emacs and org wasn't designed to hold secrets. opening an encrypted file keeps the contents plaintext in memory, the gpg only secures it on disk
[11:42:28] <Demosthenex> if i were shopping for a password manager, the lighter, smaller, and more security conscious the better. unfortunately that means doing without things like browser integration or cross device syncing
[11:43:12] <Demosthenex> i use pwsafe, which is a command line utility with a simple flat file symmetrically encrypted database. it integrates with the clip board, and allows exactly ONE paste before wiping the clipboard
[11:44:15] <esel> the behavior of C-f and C-b when at the "edges" of a timestamp, i.e. the square brackets in e.g. "CLOCK: [2021-09-22 Wed 15:31]--[2021-09-22 Wed 15:32] =>  0:01", seems to have changed. How does one navigate the point so it is positioned on an arbitrary character within the timestamp?
[11:45:54] <esel> I don't remember having an issue with that, but on a new install I seem to be unable to do this, with the cursor jumping across to the closing bracket
[11:46:14] <Demosthenex> arrows?
[11:46:47] <esel> same happens, also when calling M-x forward-char 
[11:48:05] <esel> btw, I feel like this might be an "xy question", but hard to say. I'm trying to increase the timestamp of the end. I'm used to positioning the cursor on the timestamp I want to change and then use S-up or something like that. Now I can't do that for some reason.
[11:48:36] <esel> and I can't even delete and replace the timestamp, and re-evaluate :D
[11:48:55] <esel> (except by deleting the entire clock line)
[11:51:18] <Guest75> Demosthenex awesome, thanks
[11:52:27] <Guest75> Demosthenex I think the concept of org.gpg files or encryption inside plain org files was designed to hold secrets, otherwise what would be the purpose of those?
[11:54:11] <Guest75> Demosthenex another thing is, by using password managers we still store their content in memory, we just have to trust it's in encrypted form but that might not be the case
[12:09:56] *** Joins: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net)
[12:12:38] <konubinix> It is usefull to think about data at rest, data in transit and data in use
[12:12:57] <konubinix> org.gpg helps securing the data at rest state of data
[12:16:44] <pjb> Well, some password manager could keep stuff secure even in memory. eg. WhiteCryption provides a software solution that lets you encrypt/decrypt using encrypted keys in memory, without decrypting the keys!  Which associated with other code protection techniques, gives quite a good level of protection (it can be used to implement a TEE in software).
[12:16:59] <pjb> They've been bought by Zimperium https://www.zimperium.com
[12:17:59] <pjb> White-box cryptography is a highly specialized software-based security technique to protect cryptographic keys and operations. It combines obfuscation, encryption, and mathematical transformation techniques to hide cryptographic keys and algorithms so that they never appear in the clear. Standard operations such as encryption, decryption, secure key unwrap, and digital signature creation and validation are done within the secure white-box environment, protecting the k
[12:18:34] <pjb> Now, of course, the question is whether your favorite password manager uses those techniques to protect the passwords?
[12:18:40] <jtgd> wow. where can I read more about that?
[12:18:58] <pjb> jtgd: I think I have includede enough keywords for you to be able to use google.
[12:19:13] <jtgd> 👍
[12:19:17] <pjb> And in any case, at one moment, it will have to pass the password in clear to the software that needs it.
[12:20:16] <pjb> jtgd: the site of whitecryption.com seems to be disappearing, since they've been acquired, so I guess you'd have to go to zimperium, or search for white-box cryptography in general.
[12:23:50] <Demosthenex> pjb: that sounds too buzzwordy and too good to be true.
[12:27:16] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[12:33:38] *** Quits: benin036932301 (~benin@183.82.179.112) (Ping timeout: 252 seconds)
[12:35:25] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[12:40:09] <jtgd> whiteboxcrypto.com
[12:41:27] *** Quits: jtgd (~jtgd@068-186-050-156.res.spectrum.com) (Quit: WeeChat 3.2.1)
[12:41:46] *** Joins: jtgd (~jtgd@068-186-050-156.res.spectrum.com)
[12:42:40] *** Quits: jtgd (~jtgd@068-186-050-156.res.spectrum.com) (Client Quit)
[12:43:06] *** Joins: jtgd (~jtgd@068-186-050-156.res.spectrum.com)
[12:43:43] <pjb> Demosthenex: it's maths.
[12:45:23] <Demosthenex> pjb: i have this argument about running CA's
[12:48:07] *** Joins: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net)
[12:49:12] <Demosthenex> if you can copy the memory and disk, because it's all deteministic, you can clone it all
[12:49:24] <Demosthenex> encrypted in ram doesn't matter, the system must have access to the key, which is also in ram
[12:49:36] <Demosthenex> someone demonstrated pulling ssh keys encrypted in ram in a demo not long ago
[12:53:04] <pjb> Demosthenex: Yes, but does it help you do anything the system is not designed to let you do?
[12:53:14] <konubinix> You could make use of enclaving and/or HSM if you like. But as far of org.gpg files, it is just a mean to store data encrypted
[12:53:27] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[12:53:34] <konubinix> It does not change the fact the org buffer will be in whatever RAM emacs is
[12:53:52] <pjb> Demosthenex: note that whitebox cryptography is combined with code protection features, to avoid debuggers, uncontrolled mutation (of code or data), etc.
[12:53:52] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[12:54:01] <Demosthenex> pjb: point is, if it's unencrypted in ram, or unencryptable automatically, its the same thing. unprotected.
[12:54:19] <Demosthenex> pjb: and this helps how if your VM is cloned from ram with specter?
[12:54:21] <pjb> Demosthenex: unprotected against what?
[12:54:36] <pjb> The point is to avoid letting you get hold of the secret keys.
[12:54:56] <pjb> How would you recover the secret key? (it's never decrypted).
[12:55:48] <pjb> You can clone the VM all you want. If you replicate your credit card or your SIM,  you still cannot know the secret key that's inside, you still have to know the pin.
[12:55:54] <Demosthenex> encrypted in ram means you need a key.
[12:55:58] <Demosthenex> if you're working with it
[12:56:04] *** Quits: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net) (Ping timeout: 252 seconds)
[12:56:20] <pjb> Yes, but the key is encrypted. And it's used encrypted. That's the beauty of the maths of the thing.
[12:57:33] <pjb> Now granted, it's not as strong as a hardware solution (which require hardware to hack), but it is strong enough to provide in practice enough protection.
[12:57:46] <pjb> In anycase, more than storing the passwords in clear in a text file..
[12:58:12] *** Joins: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net)
[13:00:01] <Demosthenex> pjb: certainly. and if they are only manipulating encrypted data, and never decrypt, that's interesting
[13:00:08] <konubinix> pjb: Are you talking about homomorphic encryption ?
[13:00:28] <konubinix> Even fully homomorphic encryption?
[13:01:57] <konubinix> To my knowledge, the only way to perform operations on data whithout decrypting it is FHE
[13:02:27] <konubinix> And I thought that it was not fast enough to deal with password manager use cases. 
[13:02:28] <konubinix> Is it ?
[13:02:55] <konubinix> In that case, that would be strange that hashicorp's vault does not provide FHE sealing yet. Does it?
[13:03:39] <konubinix> A good alternative to FHE is indeed to rely on hardware stuff, like SGX or HSM
[13:04:18] <konubinix> For those interested, I highly encourage reading https://www.cryptologie.net/article/499/hardware-solutions-to-highly-adversarial-environments-part-1-whitebox-crypto-vs-smart-cards-vs-secure-elements-vs-host-card-emulation-hce/
[13:04:25] <konubinix> As well as part 2 and 3
[13:04:56] <konubinix> https://www.cryptologie.net/article/500/hardware-solutions-to-highly-adversarial-environments-part-2-hsm-vs-tpm-vs-secure-enclave/ https://www.cryptologie.net/article/501/hardware-solutions-to-highly-adversarial-environments-part-3-trusted-execution-environment-tee-sgx-trustzone-and-hardware-security-tokens/
[13:05:10] <konubinix> That helps seeing a bit cleared in all that mess
[13:09:33] <Demosthenex> neat article, he also say's there's no working whitebox implementation ;]
[13:09:53] <Demosthenex> i recommend yubikeys to my clients, instead of passwords. ssh keys for everything.
[13:16:46] <Guest75> Demosthenex I quite like the idea of yubikey, but it's another physical device that may be lost, and what than...
[13:20:55] <konubinix> +1 for the yubikey
[13:21:27] <konubinix> In my company, I have a ledger nano, but I still did not find time to play with it to see how easy it is to use
[13:21:30] <tyson2> Is there some kind of backup procedure if the yubikey is lost or damaged?
[13:22:11] <Guest75> The discussion that sparked about the encryption and security is interesting, but I would focus on practical, day-to-day use of password manager, and how org.gpg fits or not in that equation. My main concern about org.gpg or gpg in general was that, key manager that once unlocked don't ask us again for the password while opening other gpg files
[13:22:11] <Guest75> encrypted with the same key, potentially might be used by malicious software to still content of these files. I wonder if that is possible.
[13:23:28] <Guest75> konubinix the problem with any crypto wallets either physical or software is that we should backup our private keys somewhere, and here is the question where
[13:24:23] <konubinix> Yeah. Personnaly, I used shamir secret scheme to put parts of my keys in several locations
[13:24:53] <konubinix> This helps with the security, as there is no spof, and helps with the backuping, as there is redundancy
[13:25:14] <konubinix> Of course, YMMV and I truly believe there is no silver bullet here
[13:25:52] <Guest75> tyson2 I think the fingerprint might be an answer, in a way when we buy new token we could use our fingerprint as a seed to generate the same authentication setup, but no idea if yubikey works like that
[13:26:47] <tyson2> thanks Guest75, I will do some investigation.  I haven't bitten on the yubikey because of the cost and some uncertainty about it
[13:26:50] <konubinix> Also, Guest75, in my humble opinion, the real problem is more a how much complicated stuff I want to setup to secure my secrets
[13:27:51] <konubinix> In the questions at work about where, when and how we should store secrets, the conversations generally go nowhere, because we don't decide how much effort we want to put in this task
[13:28:24] <Guest75> konubinix I have to look closer into this scheme. As a digital nomad I consider only multiple digital locations, but that should provide good level of security as well
[13:28:38] <konubinix> Eventually, you can split using SSSS and put some parts to a notary and others hand written in a paper stores in a secret safe in a hole in the garden
[13:28:57] <konubinix> But, would you?
[13:29:30] <konubinix> This question generally ends with a personal development question: how well do you feel with this solution?
[13:29:42] <konubinix> And remember, memento mori :-P
[13:29:58] <konubinix> Well, just memento mori then
[13:30:49] <konubinix> On other hand, you could store secrets in plain text and totally feel good with the risk of being robbed whatever it protects
[13:32:44] <konubinix> There are plenty of great methods and tools to store secret, I encourage people to be aware of what and how they protect stuff and eventually pick the ones that make them feel good
[13:32:54] <Guest75> konubinix yes, the solution shouldn't be to error prone like "what one of element of the puzzle will fail", also should be pretty easy to work with, not too much time consuming etc. No silver bullets out there for sure, and that's probably good so malicious actors don't have single target to focus on.
[13:35:40] <konubinix> I agree. So far I feel good with my gpg key stored using ssss in several devices, but for sure it is not enough for a lot of use case
[13:35:53] <Demosthenex> you can load a key onto the yubikey, which if there are other copies more copies can be made
[13:36:05] <Demosthenex> or you let the yubi make a key which it will never export
[13:36:21] <Demosthenex> then it's like a physical key, if you lose it, you either rekey the lock or have a backup
[13:42:22] *** Joins: madix` (~madix@static-176-158-46-5.ftth.abo.bbox.fr)
[13:44:10] *** Quits: madix (~madix@april/staff/madix) (Ping timeout: 260 seconds)
[13:45:32] *** madix` is now known as madix
[14:08:14] *** Quits: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net) (Ping timeout: 252 seconds)
[14:27:37] *** Joins: natrys (~natrys@user/natrys)
[14:32:51] *** Quits: jtgd (~jtgd@068-186-050-156.res.spectrum.com) (Quit: WeeChat 3.2.1)
[14:33:23] *** Joins: jtgd (~jtgd@068-186-050-156.res.spectrum.com)
[14:38:38] *** Joins: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net)
[15:11:13] *** Quits: madix (~madix@static-176-158-46-5.ftth.abo.bbox.fr) (Read error: No route to host)
[15:11:55] *** Joins: madix (~madix@april/staff/madix)
[15:12:04] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[15:25:43] *** Quits: madix (~madix@april/staff/madix) (Read error: No route to host)
[15:26:06] *** Joins: madix (~madix@april/staff/madix)
[15:29:32] *** Joins: jab (~user@72.12.220.132)
[15:42:34] *** Quits: GNUHacker (~gnu@fsf/member/GNUHacker) (Remote host closed the connection)
[15:43:05] *** Joins: GNUHacker (~gnu@fsf/member/GNUHacker)
[15:48:30] *** Quits: madix (~madix@april/staff/madix) (Quit: ERC (IRC client for Emacs 27.1))
[15:52:32] *** Joins: finga (~finga@kamino.onders.org)
[15:53:28] <finga> Is it possible to have vertical text in a table and if yes how?
[15:53:57] *** Joins: madix (~madix@april/staff/madix)
[16:04:10] *** Joins: gnoo (~gnoo@user/gnoo)
[16:05:16] *** Quits: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net) (Ping timeout: 252 seconds)
[16:05:40] <gnoo> hello, while evaluating org-src, is there a way to provide standard input?
[16:06:13] <gnoo> i skimmed the manual but probably missed it somewhere...
[16:23:40] *** Quits: jab (~user@72.12.220.132) (Ping timeout: 265 seconds)
[16:32:19] <Tisoxin> Hi
[16:35:02] <Tisoxin> I'm trying to integrate my own package (org-xournalpp) with anki-editor (for easy flashcards with sketchs), but i've run into the problem, that `org-export-string-as` doesn't respect the original buffer context
[16:35:28] <Tisoxin> (since it uses `with-temp-buffer`)
[16:36:09] <Tisoxin> Any ideas how i can trick my way through?
[16:36:11] *** Quits: madix (~madix@april/staff/madix) (Ping timeout: 252 seconds)
[16:39:46] <Tisoxin> actually, just know an idea occured to me
[16:40:03] *** Joins: madix (~madix@april/staff/madix)
[16:47:12] *** Quits: madix (~madix@april/staff/madix) (Quit: ERC (IRC client for Emacs 27.1))
[16:52:24] *** Joins: Schnouki (~schnouki@user/schnouki)
[16:56:51] *** Joins: jealousmonk (~user@2804:431:e7c4:4247:75cd:c27b:296a:fb0f)
[17:00:40] *** Quits: Guest75 (~Guest75@cpc115328-walt25-2-0-cust130.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[17:10:27] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[17:10:56] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:13:14] *** Joins: zebrag (~chris@user/zebrag)
[17:20:15] *** Joins: ardon (~amma@205.pool85-58-175.dynamic.orange.es)
[17:21:24] *** Quits: ardon (~amma@205.pool85-58-175.dynamic.orange.es) (Client Quit)
[17:21:42] *** Joins: ardon (~amma@205.pool85-58-175.dynamic.orange.es)
[17:32:46] *** Quits: snuffop (~quassel@l2.dabuke.com) (Quit: leaving have to go adult now)
[17:34:24] *** Joins: snuffop (~quassel@l2.dabuke.com)
[17:35:12] *** Joins: madix (~madix@april/staff/madix)
[17:40:40] *** Joins: mrBussy (~user@2a00:bba0:120b:eb00:2560:7e1d:b768:4cde)
[17:53:45] *** Joins: jab (~user@72.12.220.132)
[18:16:10] *** Joins: eddof13 (~textual@200.52.90.50)
[18:24:51] *** Quits: ardon (~amma@205.pool85-58-175.dynamic.orange.es) (Quit: Using Circe, the loveliest of all IRC clients)
[18:33:44] *** Joins: seschwar (~seschwar@user/seschwar)
[18:45:40] *** Quits: eddof13 (~textual@200.52.90.50) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:50:36] *** Joins: eddof13 (~textual@200.52.90.50)
[18:51:06] *** Quits: jab (~user@72.12.220.132) (Remote host closed the connection)
[19:02:41] *** Quits: eddof13 (~textual@200.52.90.50) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:06:19] *** Joins: eddof13 (~textual@200.52.90.50)
[19:32:08] *** Quits: happy-dude (~happy-dud@2001:470:69fc:105::b4d7) (Write error: Connection reset by peer)
[19:32:10] *** Quits: ryanprior[m] (~ryanprior@2001:470:69fc:105::1742) (Read error: Connection reset by peer)
[19:32:10] *** Quits: steggy[m] (~steggymat@2001:470:69fc:105::e975) (Write error: Connection reset by peer)
[19:32:10] *** Quits: tschilptschilp23 (~tschilpts@2001:470:69fc:105::186c) (Read error: Connection reset by peer)
[19:32:11] *** Quits: wehlutyk[m] (~sleauchat@2001:470:69fc:105::2f16) (Read error: Connection reset by peer)
[19:32:11] *** Quits: afotgkmnzj7asv3r (~afotgkmnz@2001:470:69fc:105::c24b) (Read error: Connection reset by peer)
[19:32:12] *** Quits: flyingketh[m] (~flyingket@2001:470:69fc:105::dea9) (Write error: Connection reset by peer)
[19:32:12] *** Quits: undltd (~yurb@user/yurb) (Write error: Connection reset by peer)
[19:32:12] *** Quits: cyphix[m] (~cyphixsys@2001:470:69fc:105::948) (Write error: Connection reset by peer)
[19:32:12] *** Quits: alice[m] (~aliceauto@2001:470:69fc:105::dfd) (Read error: Connection reset by peer)
[19:32:12] *** Quits: thp[m] (~tptptpmat@2001:470:69fc:105::2230) (Write error: Connection reset by peer)
[19:32:14] *** Quits: edgarvincent[m] (~edgarvinc@user/edgarvincent) (Write error: Connection reset by peer)
[19:32:14] *** Quits: tecosaur (~tecosaur@2001:470:69fc:105::2a5c) (Remote host closed the connection)
[19:32:15] *** Quits: zacchae[m] (~zacchaeza@2001:470:69fc:105::18d0) (Remote host closed the connection)
[19:32:15] *** Quits: mewfree[m] (~mewfreema@2001:470:69fc:105::c904) (Write error: Connection reset by peer)
[19:32:16] *** Quits: Tisoxin (~ikosit@user/ikosit) (Read error: Connection reset by peer)
[19:32:16] *** Quits: pink[m] (~pinkodaho@2001:470:69fc:105::e42b) (Read error: Connection reset by peer)
[19:32:26] *** Joins: ardon (~amma@205.pool85-58-175.dynamic.orange.es)
[19:33:12] *** Joins: Null_A (~null_a@2601:645:8700:2290:dc8f:40ba:7f6f:b65c)
[19:34:08] *** Joins: ryanprior[m] (~ryanprior@2001:470:69fc:105::1742)
[19:40:02] *** Quits: ardon (~amma@205.pool85-58-175.dynamic.orange.es) (Quit: Using Circe, the loveliest of all IRC clients)
[19:40:39] *** Joins: ardon (~amma@205.pool85-58-175.dynamic.orange.es)
[19:40:45] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[19:42:16] *** Joins: hendursaga (~weechat@user/hendursaga)
[19:45:34] *** Joins: tschilptschilp23 (~tschilpts@2001:470:69fc:105::186c)
[19:45:35] *** Joins: alice[m] (~aliceauto@2001:470:69fc:105::dfd)
[19:45:35] *** Joins: edgarvincent[m] (~edgarvinc@user/edgarvincent)
[19:45:35] *** Joins: wehlutyk[m] (~sleauchat@2001:470:69fc:105::2f16)
[19:45:35] *** Joins: happy-dude (~happy-dud@2001:470:69fc:105::b4d7)
[19:45:35] *** Joins: flyingketh[m] (~flyingket@2001:470:69fc:105::dea9)
[19:45:35] *** Joins: Tisoxin (~ikosit@user/ikosit)
[19:45:35] *** Joins: mewfree[m] (~mewfreema@2001:470:69fc:105::c904)
[19:45:35] *** Joins: undltd (~yurb@user/yurb)
[19:45:35] *** Joins: steggy[m] (~steggymat@2001:470:69fc:105::e975)
[19:45:35] *** Joins: zacchae[m] (~zacchaeza@2001:470:69fc:105::18d0)
[19:45:35] *** Joins: afotgkmnzj7asv3r (~afotgkmnz@2001:470:69fc:105::c24b)
[19:45:35] *** Joins: pink[m] (~pinkodaho@2001:470:69fc:105::e42b)
[19:45:39] *** Joins: thp[m] (~tptptpmat@2001:470:69fc:105::2230)
[19:45:46] *** Joins: cyphix[m] (~cyphixsys@2001:470:69fc:105::948)
[19:45:48] *** Joins: tecosaur (~tecosaur@2001:470:69fc:105::2a5c)
[19:49:48] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:5d58:621b:ab11:143a)
[19:49:48] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:5d58:621b:ab11:143a) (Changing host)
[19:49:48] *** Joins: skapata (~Skapata@user/skapata)
[19:52:00] *** Quits: ardon (~amma@205.pool85-58-175.dynamic.orange.es) (Quit: Using Circe, the loveliest of all IRC clients)
[19:53:51] *** Joins: ardon (~amma@205.pool85-58-175.dynamic.orange.es)
[20:08:27] *** Parts: ardon (~amma@205.pool85-58-175.dynamic.orange.es) (Using Circe, the loveliest of all IRC clients)
[20:08:47] *** Joins: ardon (~amma@205.pool85-58-175.dynamic.orange.es)
[20:28:32] *** Quits: ardon (~amma@205.pool85-58-175.dynamic.orange.es) (Read error: Connection reset by peer)
[20:54:26] *** Joins: aleck1 (~aleck@user/aleck)
[20:55:52] *** Joins: ardon (~amma@205.pool85-58-175.dynamic.orange.es)
[20:57:14] *** Quits: aleck (~aleck@user/aleck) (Ping timeout: 265 seconds)
[21:01:26] *** Parts: ardon (~amma@205.pool85-58-175.dynamic.orange.es) (Using Circe, the loveliest of all IRC clients)
[21:01:51] *** Joins: ardon (~amma@205.pool85-58-175.dynamic.orange.es)
[21:05:12] *** Quits: ardon (~amma@205.pool85-58-175.dynamic.orange.es) (Client Quit)
[21:05:28] *** Joins: ardon (~amma@205.pool85-58-175.dynamic.orange.es)
[21:06:00] *** Quits: ardon (~amma@205.pool85-58-175.dynamic.orange.es) (Client Quit)
[21:06:27] *** Joins: ardon (~amma@205.pool85-58-175.dynamic.orange.es)
[21:07:01] *** Quits: ardon (~amma@205.pool85-58-175.dynamic.orange.es) (Client Quit)
[21:07:52] *** Joins: ardon (~amma@205.pool85-58-175.dynamic.orange.es)
[21:27:22] *** Quits: ardon (~amma@205.pool85-58-175.dynamic.orange.es) (Quit: Using Circe, the loveliest of all IRC clients)
[21:27:38] *** Joins: ardon (~amma@205.pool85-58-175.dynamic.orange.es)
[21:32:17] *** Quits: ardon (~amma@205.pool85-58-175.dynamic.orange.es) (Client Quit)
[21:32:34] *** Joins: ardon (~amma@205.pool85-58-175.dynamic.orange.es)
[21:33:38] *** Quits: gnoo (~gnoo@user/gnoo) (Quit: gnoo)
[21:39:23] *** Parts: pranavats (3fba1d1b34@jabberfr.org) (Disconnected: Replaced by new connection)
[21:39:46] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[21:41:56] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[21:45:37] *** Quits: seschwar (~seschwar@user/seschwar) (Quit: :wq)
[21:47:19] *** Joins: seschwar (~seschwar@user/seschwar)
[22:21:00] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[22:33:48] *** Joins: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net)
[22:47:59] *** Quits: natrys (~natrys@user/natrys) (Ping timeout: 252 seconds)
[22:50:02] *** Joins: natrys (~natrys@user/natrys)
[22:52:36] *** Quits: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net) (Quit: WeeChat 3.2.1)
[22:52:59] *** Joins: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net)
[22:59:49] *** Quits: ardon (~amma@205.pool85-58-175.dynamic.orange.es) (Quit: Using Circe, the loveliest of all IRC clients)
[23:00:48] *** Joins: ardon (~amma@205.pool85-58-175.dynamic.orange.es)
[23:04:33] *** Quits: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net) (Quit: WeeChat 3.3)
[23:06:31] *** Quits: ardon (~amma@205.pool85-58-175.dynamic.orange.es) (Quit: Using Circe, the loveliest of all IRC clients)
[23:06:58] *** Joins: ardon (~amma@205.pool85-58-175.dynamic.orange.es)
[23:09:35] *** Quits: ardon (~amma@205.pool85-58-175.dynamic.orange.es) (Client Quit)
[23:09:49] *** Joins: ardon (~amma@205.pool85-58-175.dynamic.orange.es)
[23:14:11] *** Quits: ardon (~amma@205.pool85-58-175.dynamic.orange.es) (Client Quit)
[23:14:49] *** Joins: ardon (~amma@205.pool85-58-175.dynamic.orange.es)
[23:17:24] *** Quits: ardon (~amma@205.pool85-58-175.dynamic.orange.es) (Client Quit)
[23:17:39] *** Joins: ardon (~amma@205.pool85-58-175.dynamic.orange.es)
[23:20:23] *** Quits: ardon (~amma@205.pool85-58-175.dynamic.orange.es) (Client Quit)
[23:20:39] *** Joins: ardon (~amma@205.pool85-58-175.dynamic.orange.es)
[23:21:26] *** Quits: ardon (~amma@205.pool85-58-175.dynamic.orange.es) (Client Quit)
[23:21:40] *** Joins: ardon (~amma@205.pool85-58-175.dynamic.orange.es)
[23:22:11] *** Quits: ardon (~amma@205.pool85-58-175.dynamic.orange.es) (Client Quit)
[23:22:25] *** Joins: ardon (~amma@205.pool85-58-175.dynamic.orange.es)
[23:22:40] *** Quits: ardon (~amma@205.pool85-58-175.dynamic.orange.es) (Client Quit)
[23:22:55] *** Joins: ardon (~amma@205.pool85-58-175.dynamic.orange.es)
[23:24:19] *** Joins: Pickchea (~private@user/pickchea)
[23:28:25] *** Quits: ardon (~amma@205.pool85-58-175.dynamic.orange.es) (Quit: Using Circe, the loveliest of all IRC clients)
[23:28:38] *** Joins: ardon (~amma@205.pool85-58-175.dynamic.orange.es)
[23:29:21] *** Quits: ardon (~amma@205.pool85-58-175.dynamic.orange.es) (Client Quit)
[23:29:37] *** Joins: ardon (~amma@205.pool85-58-175.dynamic.orange.es)
