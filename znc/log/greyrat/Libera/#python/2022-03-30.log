[00:00:07] <newdimension> BrenBarn: When it's given "blah@stuff.com" , it doesn't match to it
[00:00:17] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[00:00:43] <newdimension> I tried (?P<name>[\w\s]*)\s*<?(?P<email>(?P<handle>\S*)@(?P<domain>\S*))>? but name matches handle instead now
[00:00:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[00:01:23] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[00:01:40] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[00:01:56] *** Joins: wyclif (~wyclif@user/wyclif)
[00:02:48] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[00:03:43] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Client Quit)
[00:04:23] *** Quits: gabriel_sevecek (~gabriel@188-167-229-200.dynamic.chello.sk) (Quit: WeeChat 3.4)
[00:04:28] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[00:05:07] *** Joins: gabriel_sevecek (~gabriel@188-167-229-200.dynamic.chello.sk)
[00:05:55] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Read error: Connection reset by peer)
[00:05:55] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 240 seconds)
[00:06:25] *** Quits: bookworm (~bookworm@thelounge/maintainer/bookworm) ()
[00:07:18] *** Joins: bookworm (~bookworm@thelounge/maintainer/bookworm)
[00:07:19] *** Quits: Barones (~Barones@user/Barones) (Remote host closed the connection)
[00:07:44] *** Quits: Blankspace17 (~Blankspac@user/blankspace) (Quit: Client closed)
[00:08:13] *** Quits: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu) (Quit: Leaving)
[00:08:38] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Client Quit)
[00:08:38] *** Quits: angelacrust (~angelacru@223.233.68.194) (Quit: Client closed)
[00:08:59] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[00:09:14] *** Joins: l4yer (~l4yer@user/l4yer)
[00:09:21] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 250 seconds)
[00:10:36] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[00:11:14] *** Joins: mrjones3 (~mrjones@c-73-128-146-102.hsd1.va.comcast.net)
[00:11:20] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[00:13:35] *** Quits: pycurious1 (~Adium@c-69-254-208-5.hsd1.fl.comcast.net) (Quit: Leaving.)
[00:13:52] <alioui> hi all, i have a function that accept a callback so i call it like this : fnt(args, lambda param, variable = local_var: local_var = param) so that it set a local variable to result of the function
[00:14:04] <alioui> i can't find a way to do so
[00:15:22] *** Joins: nomic (~nomic@185.217.117.233)
[00:15:22] <alioui> i get error message for '=' operator
[00:15:36] <SnoopJ> alioui, lambdas can't contain statements, only expressions
[00:15:44] <SnoopJ> and `name = value` is a statement
[00:16:13] <alioui> SnoopJ: ah ok thanks
[00:17:04] *** Quits: stasp (~stasp@37.30.100.59.nat.umts.dynamic.t-mobile.pl) (Remote host closed the connection)
[00:17:11] *** Joins: pycurious (~Adium@user/pycurious)
[00:17:19] *** Joins: stasp (~stasp@user-5-173-233-21.play-internet.pl)
[00:19:53] *** Joins: jazzy (~jaziz@user/jaziz)
[00:19:58] *** Joins: Bandicoot (~bandicoot@212.58.114.93)
[00:20:10] *** Joins: djapo (~archangel@user/djapo)
[00:20:16] *** Quits: fling (~fling@user/fling) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[00:20:45] *** Joins: fling (~fling@user/fling)
[00:20:47] *** Joins: Barones (~Barones@user/Barones)
[00:21:06] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[00:23:24] *** Quits: reset (~reset@user/reset) (Quit: reset)
[00:24:22] *** Joins: altairz (~altairz@user/altairz)
[00:25:19] *** Joins: lseactuary (~lseactuar@2601:646:202:2f10:587c:2da8:917f:7635)
[00:25:30] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[00:25:53] *** Joins: greedom (~greedom@p200300de671bf10029024defb10c6f97.dip0.t-ipconnect.de)
[00:25:54] *** Quits: mrjones3 (~mrjones@c-73-128-146-102.hsd1.va.comcast.net) (Quit: The Lounge - https://thelounge.chat)
[00:26:30] <lseactuary> i have a list, with elements like [a:b, c=[{...}],]. what is the best way to parse this into a dataframe?
[00:27:02] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[00:27:17] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[00:27:39] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:9133:d4a1:66e0:3fc) (Quit: Textual IRC Client: www.textualapp.com)
[00:27:48] <SnoopJ> that is a very confusing description of a list
[00:27:49] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[00:29:06] *** Quits: altairz (~altairz@user/altairz) (Client Quit)
[00:29:47] *** Joins: zacts (~zacts@user/zacts)
[00:29:59] *** Quits: mihaiadrian (~Thunderbi@82.76.223.244) (Quit: mihaiadrian)
[00:30:01] <lseactuary> i have messages that i use an internal library for to make it into a list
[00:30:01] *** Quits: NovaXrine (~NovaXrine@zen.novaxrine.com) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[00:30:02] <lseactuary> for item in var:
[00:30:03] <lseactuary>     result.append(json_format.MessageToDict(item))
[00:30:10] <lseactuary> this is the loop i use to get it into a list
[00:30:21] *** Joins: NovaXrine (~NovaXrine@zen.novaxrine.com)
[00:30:53] *** Joins: Betal (~Betal@user/betal)
[00:32:25] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 246 seconds)
[00:32:30] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[00:33:41] *** Joins: altairz (~altairz@user/altairz)
[00:36:35] *** Quits: asocialblade (~qsl@user/asocialblade) ()
[00:36:58] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[00:38:14] <lseactuary> I also have a MessageToJSON that gives me a JSON in a list if helpful
[00:38:14] *** Quits: TheCat (~TheCat@user/z-cat) (Read error: Connection reset by peer)
[00:38:28] *** Joins: TheCat (~TheCat@user/z-cat)
[00:38:40] *** Joins: mmdbalkhi (~Thunderbi@2.186.4.28)
[00:39:19] *** Quits: XV8 (~XV8@2601:5cb:c001:50::4a2c) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:39:46] *** Quits: canton7 (canton7@about/csharp/canton7) (Quit: ZNC - http://znc.in)
[00:40:17] *** Quits: altairz (~altairz@user/altairz) ()
[00:40:36] *** Joins: altairz (~altairz@user/altairz)
[00:40:43] *** Quits: cuanim (~cuanim@user/cuanim) (Read error: Connection reset by peer)
[00:41:16] *** Quits: Midjak (~Midjak@82.66.147.146) (Quit: This computer has gone to sleep)
[00:42:01] *** Joins: mrwick (~mrwick@user/mrwick)
[00:42:04] *** Joins: canton7 (canton7@about/csharp/canton7)
[00:42:42] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[00:43:37] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 246 seconds)
[00:43:37] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 246 seconds)
[00:43:37] *** Quits: konfusedagain (~konfuseda@125.99.177.198) (Read error: Connection reset by peer)
[00:43:48] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 260 seconds)
[00:43:50] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[00:44:05] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[00:44:22] *** Quits: agumonkey (~user@88.163.231.79) (Ping timeout: 260 seconds)
[00:44:37] *** Joins: lsd|2 (~kvirc@cpc140240-melt3-2-0-cust92.12-1.cable.virginm.net)
[00:45:01] *** Joins: konfusedagain (~konfuseda@125.99.177.198)
[00:45:06] *** Joins: Enitin (~Enitin@82.180.145.226)
[00:45:26] *** Lord_of_Life_ is now known as Lord_of_Life
[00:45:37] *** Quits: altairz (~altairz@user/altairz) ()
[00:46:01] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[00:46:44] *** Quits: konfusedagain (~konfuseda@125.99.177.198) (Read error: Connection reset by peer)
[00:47:07] <rendar> how can i make this code better? https://bpa.st/32WA -- i wish to have that global variable inside the class
[00:47:13] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[00:47:52] *** Joins: djhankb (~djhankb@208.113.164.68)
[00:48:18] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:1885:bbb8:c9e2:a1d3) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[00:48:27] *** Quits: mmdbalkhi (~Thunderbi@2.186.4.28) (Ping timeout: 260 seconds)
[00:48:28] <KirkMcDonald> rendar: You can make it a class attribute, sure. And you could also make that function into a @classmethod
[00:48:33] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[00:48:38] *** Joins: mrjones2 (~mrjones@c-73-128-146-102.hsd1.va.comcast.net)
[00:48:40] *** Joins: konfusedagain (~konfuseda@125.99.177.198)
[00:48:40] <rendar> uhm, ok
[00:48:52] <rendar> class attributes are often used for internal global state like that, i guess
[00:49:16] <rendar> KirkMcDonald, but.. why the classmethod? i can use the class attribute also in a normal method, no?
[00:49:50] <exarkun> jinsun: subclassing both Generic[T] and Matcher worked, thanks
[00:50:05] *** Joins: cheater (~Username@user/cheater)
[00:50:29] <KirkMcDonald> rendar: You can. But I like the symmetry of putting them both inside the class. Though there is also the question of what behavior you want if you make a subclass of this class.
[00:50:31] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[00:50:31] <lseactuary> actually i got it using pd.DataFrame.from_records(result)
[00:50:37] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 260 seconds)
[00:50:57] *** Joins: ttree (~ttree0@c-24-17-16-242.hsd1.wa.comcast.net)
[00:51:16] <rendar> KirkMcDonald, uhm.. can you make a snippet showing how you use the class method for that purpose usually?
[00:51:56] *** Joins: Auron (~Auron956@user/auron)
[00:52:12] *** Quits: konfusedagain (~konfuseda@125.99.177.198) (Read error: Connection reset by peer)
[00:52:24] *** Quits: mrwick (~mrwick@user/mrwick) (Quit: Lost terminal)
[00:53:00] <exarkun> with mypy 0.931 and mypy-zope 0.3.5, mypy reports errors like `Too many arguments for "write"` where "write" is a method from a zope.interface.Interface that takes 1 argument and is being called with 1 argument.  how do I make mypy tolerate these zope.interface.Interfaces?
[00:53:04] *** Joins: konfusedagain (~konfuseda@125.99.177.198)
[00:53:21] *** Quits: lseactuary (~lseactuar@2601:646:202:2f10:587c:2da8:917f:7635) (Quit: Client closed)
[00:53:57] *** Joins: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com)
[00:53:58] *** Quits: jianwu (~jianwu@softbank126088036030.bbtec.net) (Quit: Leaving)
[00:54:02] *** Joins: bitkiller (~bitkiller@user/bitkiller)
[00:54:08] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[00:54:37] <KirkMcDonald> rendar: Something in the ballpark of: https://bpa.st/HH5A
[00:54:55] <rendar> i see, clear
[00:54:59] *** Joins: jdmark2 (~jdmark@user/jdmark)
[00:56:09] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 250 seconds)
[00:56:18] *** Quits: konfusedagain (~konfuseda@125.99.177.198) (Read error: Connection reset by peer)
[00:56:24] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 260 seconds)
[00:56:42] *** Joins: mrwick (~mrwick@user/mrwick)
[00:56:45] *** Joins: konfusedagain (~konfuseda@125.99.177.198)
[00:56:55] *** Quits: ccallahan|Work (~quassel@nat-pool-232-131.redhat.com) (Ping timeout: 256 seconds)
[00:57:54] *** Quits: l4yer (~l4yer@user/l4yer) (Ping timeout: 260 seconds)
[00:58:17] *** Quits: jdmark (~jdmark@user/jdmark) (Ping timeout: 256 seconds)
[00:59:15] *** Quits: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr) (Ping timeout: 240 seconds)
[00:59:34] *** Joins: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr)
[00:59:51] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:cdbe:ac62:894f:fba2)
[01:00:11] *** Joins: ccallahan|Work (~quassel@redhat/ccallahan)
[01:00:21] *** Quits: stasp (~stasp@user-5-173-233-21.play-internet.pl) (Remote host closed the connection)
[01:00:34] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[01:02:03] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.4)
[01:02:41] <exarkun> Aha.  You have to write a mypy configuration file that tells mypy which plugins to use.
[01:03:36] *** Joins: asocialblade (~qsl@user/asocialblade)
[01:04:04] *** Quits: gambl0re (~gambl0re@45.72.228.31) (Ping timeout: 272 seconds)
[01:06:23] *** Quits: jpodivin (~jpodivin@cgnat44-pool3-68-108.poda.cz) (Ping timeout: 260 seconds)
[01:07:52] *** Quits: Jong (~Jong@2620:10d:c090:400::5:bdbd) (Quit: Textual IRC Client: www.textualapp.com)
[01:08:25] *** PJBoy is now known as Guest7580
[01:08:25] *** Quits: Guest7580 (~PJBoy@user/pjboy) (Killed (strontium.libera.chat (Nickname regained by services)))
[01:08:30] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[01:08:32] *** Joins: PJBoy (~PJBoy@user/pjboy)
[01:08:38] *** Joins: qlixed (~qlixed@host187.181-13-64.telecom.net.ar)
[01:09:04] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[01:09:08] *** Quits: konfusedagain (~konfuseda@125.99.177.198) (Ping timeout: 272 seconds)
[01:09:16] *** Joins: tga (~tga@p54a75da2.dip0.t-ipconnect.de)
[01:09:16] *** Quits: tga (~tga@p54a75da2.dip0.t-ipconnect.de) (Changing host)
[01:09:16] *** Joins: tga (~tga@user/tga)
[01:09:18] *** Joins: wyclif (~wyclif@user/wyclif)
[01:09:27] *** Joins: squirrel (uid529456@user/squirrel)
[01:09:35] *** Quits: ccallahan|Work (~quassel@redhat/ccallahan) (Ping timeout: 250 seconds)
[01:10:05] *** Joins: konfusedagain (~konfuseda@125.99.177.198)
[01:10:22] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[01:11:51] <squirrel> is there a way to have an autoused fixture only be used if some another fixture is requested for the test?
[01:12:15] *** Quits: mrwick (~mrwick@user/mrwick) (Quit: leaving)
[01:12:27] <nedbat> squirrel: you make fixture A use fixture B.  Then if the test uses fixture A, fixture B will also be used.
[01:12:35] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 240 seconds)
[01:12:44] <SnoopJ> that's how I would do it, too. I don't know where autouse would come in, there
[01:12:44] <nedbat> squirrel: so don't make it autouse
[01:13:29] *** Joins: jpn (~jpn@user/jpn)
[01:13:40] *** Joins: hams (~hams@user/hams)
[01:14:12] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 272 seconds)
[01:15:42] *** Joins: Liblx (~buddha@ip4d15ff09.dynamic.kabel-deutschland.de)
[01:15:55] *** Quits: Liblx (~buddha@ip4d15ff09.dynamic.kabel-deutschland.de) (Client Quit)
[01:15:58] *** Quits: lsd|2 (~kvirc@cpc140240-melt3-2-0-cust92.12-1.cable.virginm.net) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[01:16:34] *** Joins: shailangsa (~shailangs@host86-162-150-212.range86-162.btcentralplus.com)
[01:16:37] <squirrel> the problem with that is then fixture B will be always used when fixture A is used. also, fixture B will have to have the same or greater scope than A
[01:16:39] *** Joins: MasterK (~MK@86.127.22.26)
[01:17:34] <squirrel> i don't want to autouse my B fixture for every test that uses A, also, A has a wider scope than B
[01:18:28] *** Quits: reedrichards (~f@2607:f598:bbda:220:2ffb:a71c:10b4:af9c) (Remote host closed the connection)
[01:19:16] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[01:19:19] *** Quits: _h4x0r_ (~till@user/till/x-8616149) (Ping timeout: 246 seconds)
[01:19:28] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[01:19:46] <nedbat> squirrel: why did you call it an autoused fixture?
[01:20:11] *** Quits: five6433334963 (~five6@8.40.111.150) (Ping timeout: 260 seconds)
[01:20:15] <squirrel> nedbat: it's got `autouse=True`
[01:20:31] <nedbat> squirrel: ok, why does it have that if you don't want it to always run?
[01:20:50] *** Joins: ccallahan|Work (~quassel@redhat/ccallahan)
[01:20:53] *** Quits: asocialblade (~qsl@user/asocialblade) ()
[01:20:53] *** Joins: wyclif (~wyclif@user/wyclif)
[01:21:03] *** Joins: five6433334963 (~five6@8.40.111.130)
[01:21:09] *** Joins: _h4x0r_ (~till@user/till/x-8616149)
[01:21:12] <squirrel> `autouse=True` only make the fixture autoused within the scope, not everywhere
[01:21:30] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[01:21:37] <squirrel> or so i believe
[01:22:51] *** Joins: MrFantastik (~f@2607:f598:bbda:220:3060:781a:20de:246b)
[01:23:48] *** Quits: Anarkitty (~c0a801f8@user/Anarkitty) (Quit: The Lounge - https://thelounge.chat)
[01:23:52] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 246 seconds)
[01:24:06] *** Joins: Liblx (~buddha@ip4d15ff09.dynamic.kabel-deutschland.de)
[01:24:36] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[01:24:43] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[01:24:59] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[01:25:30] *** Quits: Liblx (~buddha@ip4d15ff09.dynamic.kabel-deutschland.de) (Client Quit)
[01:26:19] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[01:26:38] *** Joins: fling (~fling@user/fling)
[01:26:55] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[01:27:08] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[01:27:09] <nedbat> squirrel: what sort of scope do you mean?
[01:27:56] *** Quits: mrjones2 (~mrjones@c-73-128-146-102.hsd1.va.comcast.net) (Quit: The Lounge - https://thelounge.chat)
[01:28:09] *** Joins: pretty_d1 (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[01:28:10] *** Quits: pretty_d1 (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[01:28:21] *** Joins: c_89 (~c_89@151.74.3.74)
[01:28:34] *** Quits: mat001_ (~mat001@c-71-202-208-66.hsd1.ca.comcast.net) (Remote host closed the connection)
[01:28:36] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 240 seconds)
[01:28:37] *** Quits: nattiestnate (~nate@202.138.250.9) (Quit: WeeChat 3.5)
[01:29:05] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[01:29:10] *** Joins: mat001_ (~mat001@72.28.108.216)
[01:29:17] <akk> Is there a way to get help() to just print out the help, without invoking a pager? I'm calling it inside a program to find out what methods and other help an object has.
[01:29:27] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 256 seconds)
[01:29:31] <akk> But I only get the first page of help.
[01:29:57] <nedbat> akk: i haven't heard of it being used in a program before.  What will you do with the output?
[01:30:08] *** Quits: zacts (~zacts@user/zacts) (Ping timeout: 250 seconds)
[01:30:18] <akk> nedbat: Just run the program once to read the output so I know what I can do with the object.
[01:30:19] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[01:31:03] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[01:31:19] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 272 seconds)
[01:31:36] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:ac35:8160:2b6:e011) (Quit: Konversation terminated!)
[01:32:00] *** Quits: aslicedbanjo (~aslicedba@host86-168-244-65.range86-168.btcentralplus.com) (Quit: Leaving.)
[01:32:56] <squirrel> nedbat: as in class, module, etc. if you put your autouse fixture inside a class, it will only be used for tests of that class
[01:33:06] <nedbat> squirrel: i see
[01:33:17] <SnoopJ> akk, that sounds like a strange thing to do inside of a program, but I think the answer to your question is pydoc.doc() with the `output` argument set (it calls a pager if it's None)
[01:33:20] <nedbat> akk: help() just calls pydoc
[01:34:16] *** Joins: Bandicoot_ (~bandicoot@212.58.114.93)
[01:34:55] <akk> SnoopJ: output is set to what? If I call it with output=sys.stdout it still calls the pager.
[01:35:02] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:ac35:8160:2b6:e011)
[01:35:02] *** Joins: junebug (~junebug@2600:1700:3db0:2540:dcfc:acc3:e56c:8c87)
[01:35:12] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[01:35:22] <SnoopJ> really? it just dumps the output on stdout if I do the same.
[01:35:30] *** Joins: mharig (~mharig@181.188.140.9)
[01:35:49] *** Quits: SirScott (~SirScott@c-67-176-100-163.hsd1.co.comcast.net) (Quit: The Lounge - https://thelounge.chat)
[01:36:07] <akk> Oh, hmm ... I think I'm being stupid, I think this is all the help, it just looked like it ought to have more pages.
[01:36:12] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[01:36:20] *** Joins: SirScott (~SirScott@c-67-176-100-163.hsd1.co.comcast.net)
[01:36:28] *** Quits: Bandicoot (~bandicoot@212.58.114.93) (Ping timeout: 246 seconds)
[01:36:44] <akk> It also never returns ... I have a sys.exit(0) after it, and it never gets there, which is why I figured it was waiting for the pager
[01:37:01] <SnoopJ> that function should only call the pager if the caller didn't specify an output, AFAIK: https://github.com/python/cpython/blob/main/Lib/pydoc.py#L1787-L1788
[01:37:08] <akk> Maybe there's some other reason it doesn't return.
[01:37:23] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[01:37:28] *** Quits: paul424 (~tom@ip-5-172-239-80.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[01:37:28] *** Quits: shailangsa (~shailangs@host86-162-150-212.range86-162.btcentralplus.com) ()
[01:37:48] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[01:37:56] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[01:38:25] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[01:38:31] <SnoopJ> that does sound strange, I can't make it produce behavior like that when the output is non-None
[01:38:38] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[01:39:39] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Ping timeout: 256 seconds)
[01:39:54] *** Joins: dignissimus (~dignissim@79-70-31-37.dynamic.dsl.as9105.com)
[01:40:21] *** Joins: sobkas (~sobkas@95.175.17.217)
[01:40:59] *** Joins: KombuchaKip (~kip@192.252.230.5)
[01:42:24] <dignissimus> https://github.com/cactool/cactool/issues/75 `can't find '__main__' module in 'cactool'`
[01:42:35] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Ping timeout: 260 seconds)
[01:42:48] <dignissimus> Everything works fine on my machine but it breaks on windows, how come?
[01:42:50] *** Joins: mitrokov (~mitrokov@133.174.32.95.dsl-dynamic.vsi.ru)
[01:43:03] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[01:43:29] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[01:43:34] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[01:43:59] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:b04f:a3c8:8176:6595) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:44:10] <dignissimus> It looks like I can fix it by getting python -m to work but I don't understand why it becomes different for windows
[01:44:53] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 260 seconds)
[01:45:10] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Quit: Leaving)
[01:46:59] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[01:48:17] *** Quits: Furai (~Furai@furai.pl) (Quit: WeeChat 3.5)
[01:48:35] *** Quits: greedom (~greedom@p200300de671bf10029024defb10c6f97.dip0.t-ipconnect.de) (Remote host closed the connection)
[01:52:00] *** Joins: mrwick (~mrwick@user/mrwick)
[01:53:48] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Quit: Leaving)
[01:54:02] *** Quits: jamiejackson (~jamiejack@131.106.140.145) (Quit: Connection closed)
[01:54:17] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Quit: mogad0n)
[01:54:54] *** Joins: zacts (~zacts@user/zacts)
[01:55:11] *** Quits: junebug (~junebug@2600:1700:3db0:2540:dcfc:acc3:e56c:8c87) (Remote host closed the connection)
[01:55:31] *** Joins: junebug (~junebug@2600:1700:3db0:2540:322a:1e20:58c6:b6ad)
[01:56:56] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[01:57:54] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 272 seconds)
[01:58:34] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[01:59:27] <theseb> do you agree that at least a good sized subset of python can be converted easily into scheme/lisp?  (Someone once said python = lisp w/o the parens)
[01:59:46] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:b04f:a3c8:8176:6595)
[01:59:53] *** Joins: shailangsa (~shailangs@host86-162-150-212.range86-162.btcentralplus.com)
[01:59:53] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[02:00:04] <SnoopJ> that would be a good question for the someone who said this very weird thing
[02:00:06] *** Joins: Algernon666 (~Algernon6@2a01:e0a:511:6ce0:5cd:5a00:d3fe:883)
[02:00:11] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[02:00:30] <KirkMcDonald> You can convert just about anything to anything if you're willing to carve out the right subset.
[02:00:35] <SnoopJ> (I would not personally agree with this, based on what I know of Lisp)
[02:00:37] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[02:00:48] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[02:01:32] *** Quits: five6433334963 (~five6@8.40.111.130) (Quit: The Lounge - https://thelounge.chat)
[02:01:35] *** Quits: mitrokov (~mitrokov@133.174.32.95.dsl-dynamic.vsi.ru) (Quit: Leaving)
[02:01:42] *** Joins: sudomann (~sudomann@98.219.211.182)
[02:01:47] *** Joins: Algernon91 (~Algernon6@2a04:cec0:11f4:18d8:b50a:f612:ed28:f1e3)
[02:01:48] *** Joins: robert_ (~robert_@47.203.169.95)
[02:03:58] <nedbat> Although Python has a similar kind of underlying malleability, i don't see why converting to Lisp would be any easier than converting it to any other language.  The differences are too great.
[02:04:16] <nedbat> (reminds me of the "universal compiler" project that was making the rounds a few years back)
[02:04:16] <Noisytoot> Python doesn't have any equivalent of read/eval (in Python the similar functions work on strings, not lists)
[02:04:20] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[02:04:37] *** Quits: qlixed (~qlixed@host187.181-13-64.telecom.net.ar) (Ping timeout: 250 seconds)
[02:04:43] <Noisytoot> Python also has a distinction between statements and expressions, Lisp doesn't
[02:04:46] *** Quits: m_tadeu (~quassel@bl7-240-233.dsl.telepac.pt) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:04:53] <grym> nedbat: if you say it three times in a row, a user joins the channel
[02:04:55] <SnoopJ> nedbat, the project of the person who came around here asking somewhat confrontational questions about Python?
[02:05:07] <grym> Noisytoot: lisp-1 or lisp-2 :)
[02:05:29] *** Quits: Algernon666 (~Algernon6@2a01:e0a:511:6ce0:5cd:5a00:d3fe:883) (Ping timeout: 256 seconds)
[02:05:35] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Read error: Connection reset by peer)
[02:05:38] <nedbat> SnoopJ: yes, it caused some turmoil
[02:05:51] *** Joins: m_tadeu (~quassel@bl7-240-233.dsl.telepac.pt)
[02:05:51] *** Joins: bsturmfels (~bsturmfel@mediagoblin/maintainer/bsturmfels)
[02:05:51] <Noisytoot> grym: Is the distinction relevant?
[02:06:00] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[02:06:05] *** Quits: fspax (~fspax@46.148.141.211) (Quit: Leaving)
[02:06:08] <SnoopJ> nedbat, heh. it seems to have been abandoned, if GitHub is any indication
[02:06:28] <theseb> Noisytoot: the statement vs. exp thing is an issue yes
[02:06:30] <grym> Noisytoot: yes :P
[02:06:57] <SnoopJ> the graphics library for which it was being developed still seems to be active, though
[02:07:02] <nedbat> SnoopJ: it was a suite of things, and two of the repos are active
[02:07:17] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.4)
[02:07:21] <SnoopJ> nedbat, this is neos/neoGFX? maybe I'm remembering the wrong project
[02:07:26] *** Quits: ccallahan|Work (~quassel@redhat/ccallahan) (Ping timeout: 245 seconds)
[02:07:28] <nedbat> SnoopJ: no, you have it.
[02:07:39] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[02:07:57] *** Joins: five64333349634 (~five6@8.40.111.166)
[02:08:04] <SnoopJ> oh I see what you mean re: two repos
[02:08:09] <grym> michael keaton's putting on a striped suit in the wings
[02:08:13] *** Joins: nattiestnate (~nate@202.138.250.11)
[02:08:13] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[02:09:17] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[02:09:19] <jfb4> if you have an existing function f, how can you modify its behaviour 'from the outside' so that you add a function f2 that gets called everytime the original function f is called (say it's in a library you don't want to change)?
[02:09:23] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 260 seconds)
[02:09:31] <grym> jfb4: functool.wraps?
[02:09:35] <Noisytoot> I didn't know that any Lisp had statements. Isn't the difference between Lisp-1 and Lisp-2 the separation of function and variable namespaces?
[02:10:03] *** Joins: v9fk (~v9fk1yn3n@user/v9fk1yn3nu)
[02:10:04] <SnoopJ> grym, wraps() only changes the decorated function's metadata (__name__ and friends)
[02:10:10] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[02:10:11] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Remote host closed the connection)
[02:10:45] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::beb)
[02:10:56] <SnoopJ> jfb4, sounds like you want your own function that wraps around the library's version. Something like: `def myfunc(*args, **kwargs): print("calling func()!") return func(*args, **kwargs)`
[02:11:08] <jfb4> grym: basically looking for a python version of Lisp 'advice' in elisp.
[02:11:48] <SnoopJ> although this approach only works if you commit to using the wrapper. if you want it to apply everywhere the function is used, you'll need to change the library
[02:12:06] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Ping timeout: 260 seconds)
[02:12:19] <SnoopJ> and unfortunately even then you're not guaranteed to impact every call site :/
[02:12:20] <jfb4> SnoopJ: looking to change the behaviour of the original function f that may be referenced in lots of places, without touching the original lib. (which may be a standard lib)
[02:12:36] <SnoopJ> jfb4, those two requirements seem to be in direct conflict with each other
[02:12:59] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[02:12:59] <hodapp> whaa. just ran into a call in rasterio called 'rasterio.transform.tastes_like_gdal()'
[02:13:06] <SnoopJ> jfb4, what function(s) are you interested in? CPython has some machinery for doing this for very specific library functions
[02:13:44] <jfb4> SnoopJ: not in conflict, see https://www.gnu.org/software/emacs/manual/html_node/elisp/Advising-Functions.html
[02:13:54] <grym> jfb4: you might be hosed in python, though.
[02:13:55] *** Quits: nattiestnate (~nate@202.138.250.11) (Quit: WeeChat 3.5)
[02:13:58] <SnoopJ> jfb4, I am talking about in the Python language, the one discussed in this channel.
[02:14:14] <SnoopJ> I can't speak for the ability of other languages to modify a function while not modifying the function
[02:14:18] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[02:14:19] <jfb4> Snoop: yes, looking for the equivalent functionality in python, say to change behaviour from pandas
[02:14:46] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[02:14:50] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[02:14:53] <jfb4> without touching pandas, numpy etc
[02:15:01] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:15:07] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[02:15:14] * SnoopJ has never heard of such a thing
[02:15:21] *** Quits: MrFantastik (~f@2607:f598:bbda:220:3060:781a:20de:246b) (Remote host closed the connection)
[02:15:43] *** Joins: MrFantastik (~f@176.108.141.162)
[02:15:53] <SnoopJ> the closest feature I can think of is CPython's set of audit hooks, which apply only to the specific functions that define a hook
[02:16:04] <MacGyver> Look all you need is a tape, a read/write head, an alphabet, some states and some transitions.
[02:16:11] *** Quits: audio (~audio@user/audio) (Ping timeout: 245 seconds)
[02:16:12] <MacGyver> And then clearly you can easily convert between any language.
[02:16:14] <MacGyver> QED.
[02:16:19] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 250 seconds)
[02:16:26] <SnoopJ> MacGyver, so long as "quad" is "absolutely nothing at all"
[02:16:27] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:16:51] <SnoopJ> quod*
[02:16:53] <jfb4> thank you, will investigate functool.wraps and audit hooks which may help
[02:17:08] * hodapp smacks MacGyver a non-polynomial number of times
[02:17:12] <SnoopJ> jfb4, audit hooks will not be useful to you if your target functionality is not on this list: https://docs.python.org/3/library/sys.html#sys.addaudithook
[02:17:17] <SnoopJ> and wraps() won't help you at all
[02:17:36] <SnoopJ> (although it is useful if you write your own wrapper as I described, but want it to have the same docstring etc.)
[02:17:55] <SnoopJ> oops, that's the wrong link, I meant to share this one: https://docs.python.org/3/library/audit_events.html#audit-events
[02:17:56] *** Quits: irf21k (~irf21k@2401:4900:26bf:b82c:0:76:6635:b801) (Read error: Connection reset by peer)
[02:18:08] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[02:18:49] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 246 seconds)
[02:18:49] *** Quits: konfusedagain (~konfuseda@125.99.177.198) (Ping timeout: 246 seconds)
[02:18:50] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[02:19:02] *** Joins: konfusedagain (~konfuseda@125.99.177.198)
[02:19:38] *** Joins: freeman_h1 (~freeman_h@cpc94282-ward11-2-0-cust375.10-2.cable.virginm.net)
[02:19:38] *** Joins: asocialblade (~qsl@static.16.62.161.5.clients.your-server.de)
[02:19:38] *** Quits: asocialblade (~qsl@static.16.62.161.5.clients.your-server.de) (Changing host)
[02:19:39] *** Joins: asocialblade (~qsl@user/asocialblade)
[02:19:48] *** Joins: admin124 (~harrymore@2607:fb90:551f:cae:9930:ac68:1bc8:6dcb)
[02:19:53] *** Quits: lystra (~lystra@165.75.7.250) (Remote host closed the connection)
[02:20:13] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 250 seconds)
[02:20:20] <jfb4> thanks for the links, I've learnt something
[02:20:42] *** Quits: sobkas (~sobkas@95.175.17.217) (Remote host closed the connection)
[02:22:15] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 260 seconds)
[02:22:17] <SnoopJ> I suppose a third-party library could create support for something like this if they used sys.audit() to raise their own audit events, but I'm not aware of any that do off the top of my head
[02:23:37] *** Quits: freeman_h (~freeman_h@37.120.159.215) (Ping timeout: 256 seconds)
[02:23:43] *** Joins: sobkas (~sobkas@95.175.17.217)
[02:24:06] *** Joins: the_lanetly_052 (~the_lanet@194.135.169.76)
[02:24:26] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[02:24:32] *** Quits: MerrinX (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.4.1)
[02:24:56] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[02:25:08] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[02:25:08] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[02:25:31] *** Joins: sudomann (~sudomann@98.219.211.182)
[02:25:43] *** Quits: the_lanetly_052_ (~the_lanet@185.30.91.101) (Ping timeout: 260 seconds)
[02:26:10] *** Joins: wyclif (~wyclif@user/wyclif)
[02:26:46] *** Joins: ccallahan|Work (~quassel@redhat/ccallahan)
[02:26:50] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[02:27:30] <squirrel> ...so here's a way to run only run autouse fixture if another fixture was requested. hehe https://bpa.st/H2WA
[02:28:18] <squirrel> it works, but i feel like there must be a better way
[02:28:21] *** Quits: mug3n (~mugen@gateway/tor-sasl/mugen) (Remote host closed the connection)
[02:28:55] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[02:29:13] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[02:30:30] *** Joins: fling (~fling@user/fling)
[02:30:43] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:31:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[02:31:45] *** Joins: wyclif (~wyclif@user/wyclif)
[02:33:06] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 260 seconds)
[02:33:21] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:33:38] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[02:33:55] <nedbat> i'm reading about software bill of materials (sbom): anyone have any experience with this in the Python world?
[02:34:38] *** Joins: Pickchea (~private@user/pickchea)
[02:36:22] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[02:36:43] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 260 seconds)
[02:36:43] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[02:37:44] *** Joins: frmlof (~frmlof@70.243.238.191)
[02:38:18] *** Joins: stasp (~chatzilla@user-5-173-233-21.play-internet.pl)
[02:39:39] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[02:39:43] *** Quits: bitkiller (~bitkiller@user/bitkiller) (Ping timeout: 250 seconds)
[02:40:17] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[02:40:49] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[02:40:51] *** Quits: flower__ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[02:40:58] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[02:42:12] <exarkun> nedbat: Cool systems like Nix make this easy.
[02:42:26] *** Joins: Barones (~Barones@user/Barones)
[02:42:38] <nedbat> exarkun: but the packages themselves have to have the metadata, right?
[02:43:39] *** Joins: sudomann (~sudomann@98.219.211.182)
[02:44:47] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:45:42] *** Quits: Algernon91 (~Algernon6@2a04:cec0:11f4:18d8:b50a:f612:ed28:f1e3) (Ping timeout: 260 seconds)
[02:48:08] *** Quits: Barones (~Barones@user/Barones) (Remote host closed the connection)
[02:49:58] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[02:51:05] *** Quits: kai (~kai@x50d24799.cust.hiper.dk) (Quit: The Lounge - https://thelounge.chat)
[02:52:14] *** Joins: kai (~kai@x50d24799.cust.hiper.dk)
[02:52:35] *** Quits: MasterK (~MK@86.127.22.26) (Remote host closed the connection)
[02:52:38] <ztrawhcse> In theory you could apply the SBOM concept to python, by just collecting trove classifiers for all packages. Stuff that vendors other stuff tends to make this hard...
[02:52:43] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[02:53:20] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Read error: Connection reset by peer)
[02:53:23] <nedbat> ztrawhcse: i'm just wondering if there's any existing tooling (or whatever) that does this for the python world.
[02:53:40] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[02:53:42] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 260 seconds)
[02:53:56] <Tritium> I am at a loss on how the BOM concept applies to software - theres not much room for second sourcing drop in replacements
[02:54:01] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: caveman)
[02:54:21] <nedbat> Tritium: i think it's not about enabling choice, it's about knowing what you've got.
[02:54:25] <Tritium> though thats probably just something from BOM i fixate on
[02:54:35] *** Joins: freeman_h2 (~freeman_h@103.219.20.26)
[02:54:52] *** Quits: ccallahan|Work (~quassel@redhat/ccallahan) (Ping timeout: 246 seconds)
[02:55:17] *** Quits: c_89 (~c_89@151.74.3.74) (Quit: Connection closed)
[02:55:23] <Tritium> makes sense
[02:56:13] <MacGyver> Tritium: https://en.wikipedia.org/wiki/Software_bill_of_materials
[02:56:20] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[02:56:26] <MacGyver> And there's a bit of a movement picking up.
[02:56:44] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[02:57:10] <MacGyver> In no small amount by all the NPM-style horsery.
[02:57:16] *** Quits: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:57:37] *** Quits: MikZyth (~MikZyth@host-243-154-66-217.spbmts.ru) (Quit: WeeChat 3.5)
[02:57:51] *** Quits: tvm (~tom@ip-89-103-96-164.net.upcbroadband.cz) (Ping timeout: 256 seconds)
[02:57:52] <SnoopJ> And PyPI horsery
[02:58:01] *** Joins: ccallahan|Work (~quassel@nat-pool-232-131.redhat.com)
[02:58:04] <SnoopJ> and [probably every package management system] horsery
[02:58:16] *** Quits: freeman_h1 (~freeman_h@cpc94282-ward11-2-0-cust375.10-2.cable.virginm.net) (Ping timeout: 245 seconds)
[02:58:23] <Tritium> probably much less on a curated repository
[02:58:23] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[02:58:40] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Client Quit)
[02:58:41] <SnoopJ> Perhaps. PyPI certainly ain't that
[02:58:44] <Tritium> not that there are any which are perfect by any means.
[02:58:50] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 252 seconds)
[02:59:01] *** Quits: soju-test-user (~soju-test@2a01cb040760a5cb0000000000000318.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[02:59:07] *** Quits: amogorkon (~amogorkon@user/amogorkon) (Ping timeout: 260 seconds)
[02:59:09] *** Joins: Barones (~Barones@user/Barones)
[02:59:11] <SnoopJ> and I think it's too easy to point at any one language as an example when the underlying problem cuts across software fairly uniformly
[02:59:22] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[02:59:29] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[02:59:44] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[02:59:52] <Tritium> Its all CPAN's fault.
[03:00:23] <SnoopJ> ha
[03:00:35] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[03:00:36] <ztrawhcse> It's a fundamental problem of language package managers, really. They're based on the model that anyone authoring in the language can upload.
[03:00:48] *** Joins: white2 (~mahengrui@user/mahengrui1)
[03:01:06] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:01:06] * SnoopJ would describe it as a problem that exists whenever software can be said to have "components"
[03:01:23] <MacGyver> Hence my use of the word NPM-style, not NPM. Basically the whole concept of auto-downloading, auto-updating dependencies, which is a force multiplier for the problem.
[03:01:26] <SnoopJ> or uh, a class of problems I suppose
[03:01:40] <Tritium> I do not want to live in a hellscape where software does not have components
[03:01:46] <ztrawhcse> It's really not about components.
[03:02:01] <ztrawhcse> If you run a pedant's repository of curated everything.
[03:02:03] <SnoopJ> ztrawhcse, what does the SBOM list, then?
[03:02:06] <ztrawhcse> Components are fine.
[03:02:20] *** Quits: tga (~tga@user/tga) (Quit: leaving)
[03:02:34] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 246 seconds)
[03:02:52] <exarkun> nedbat: Do you mean the Python packages (as in, the distutils/setuptools stuff) or the distribution packages?  Arguably, the distribution packages are purely metadata...
[03:03:34] <nedbat> exarkun: i meant the distribution packages, but they don't have metadata in any of the (three?) sbom formats floating around, i think
[03:03:56] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[03:04:09] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[03:04:37] <exarkun> nedbat: Ah.  I don't mean that Nix automatically puts the information in one of those formats.  I mentioned it because Nix already knows all of the software involved and has at least some of the metadata.  So, from there, you could emit something in whichever format is preferred.
[03:04:59] *** Quits: DocMors (~DocMors@web.crypticity.net) (Ping timeout: 256 seconds)
[03:05:35] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 240 seconds)
[03:05:38] *** Quits: traeis (~trace@user/trace) (Remote host closed the connection)
[03:07:01] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[03:07:46] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[03:08:01] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[03:08:24] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Client Quit)
[03:08:39] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[03:09:35] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:11:06] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:14:15] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[03:15:00] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[03:17:03] *** Quits: upsala (~zcb@185.209.196.134) (Quit: WeeChat 3.5)
[03:17:17] *** Quits: masta`` (Username@user/masta/x-2645138) (Quit: Going offline, see ya! (www.adiirc.com))
[03:17:33] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:18:43] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 260 seconds)
[03:21:41] *** Quits: stasp (~chatzilla@user-5-173-233-21.play-internet.pl) (Quit: Doom MIDIs await)
[03:24:49] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 256 seconds)
[03:25:20] *** Quits: BtbN (btbn@ffmpeg/developer/btbn) (Remote host closed the connection)
[03:25:36] *** Quits: Barones (~Barones@user/Barones) (Read error: Connection reset by peer)
[03:25:49] *** Quits: Forsaken87 (~quassel@ip-037-201-193-116.um10.pools.vodafone-ip.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:26:45] *** Quits: maxtim (~maxtim__@c-73-21-43-6.hsd1.ga.comcast.net) (Quit: Leaving)
[03:26:46] *** Joins: mihael (~mihael@115.146.176.131)
[03:27:38] <mihael> What module can I use to work with Active Directory? I'm trying to install python_ldap but i'm getting the error: `Modules/common.h:9:20: fatal error: Python.h: No such file or directory`
[03:28:00] *** Joins: BtbN (btbn@ffmpeg/developer/btbn)
[03:28:12] *** Joins: jpn (~jpn@user/jpn)
[03:29:16] *** Joins: lsd|2 (~kvirc@cpc140240-melt3-2-0-cust92.12-1.cable.virginm.net)
[03:29:37] *** Joins: Barones (~Barones@user/Barones)
[03:30:17] <meejah> mihael: sounds like you need "python-dev" package or similar .. what os?
[03:30:43] <phy1729> I quite like https://ldap3.readthedocs.io/en/latest/
[03:32:00] <ztrawhcse> SnoopJ: sorry, when I said it's not a components problem I was referring to the issue I had mentioned, which is non-curation. In a curated system, whatever the former, there will be metadata that probably isn't in SBOM format but could be converted to it. In a non-curated system everything is... Unreliable.
[03:32:11] <ztrawhcse> And often vendored to hell and back.
[03:33:11] *** Joins: cdown_ (~cdown@user/cdown)
[03:33:15] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[03:33:31] *** Joins: DocMors (~DocMors@web.crypticity.net)
[03:34:35] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 240 seconds)
[03:34:39] *** Joins: fling (~fling@user/fling)
[03:35:49] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[03:36:18] *** Quits: cdown (~cdown@user/cdown) (Ping timeout: 260 seconds)
[03:36:20] *** cdown_ is now known as cdown
[03:36:51] *** Joins: wyclif (~wyclif@user/wyclif)
[03:37:20] *** Quits: tf (~tf@user/tf) (Quit: tf)
[03:37:20] *** Quits: MJ (~mjpieters@zopatista.plus.com) (Ping timeout: 272 seconds)
[03:37:46] *** Joins: tf (~tf@user/tf)
[03:37:48] <ldericher> is there something like `in` but with `is` checks?
[03:38:07] <SnoopJ> ldericher, can you explain what you're trying to do?
[03:38:10] *** Quits: lsd|2 (~kvirc@cpc140240-melt3-2-0-cust92.12-1.cable.virginm.net) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[03:38:25] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:ac35:8160:2b6:e011) (Ping timeout: 256 seconds)
[03:38:26] *** Joins: zacts (~zacts@user/zacts)
[03:38:45] *** Joins: MJ (~mjpieters@zopatista.plus.com)
[03:38:45] <phy1729> any(a is b for a in as) ?
[03:38:52] *** Joins: FlipFlop (~FlipFlop@user/fl1pfl0p)
[03:39:07] <SnoopJ> yea, sounds like maybe any() combined with iteration, depending on what the underlying task actually is
[03:39:28] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-e95f-3969-f1ee-0ea9.res6.spectrum.com) (Read error: Connection reset by peer)
[03:40:11] <ldericher> i got a function `def fn(target: type) -> bool:` and want to check if `target` is one of several allowed types.
[03:40:43] <SnoopJ> ldericher, that would typically be `isinstance(target, (TypeA, TypeB, ...))`
[03:41:16] <SnoopJ> i.e. the second argument to isinstance can be a tuple of types to check
[03:41:30] <ldericher> huh
[03:41:32] <ldericher> nice
[03:41:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[03:41:55] <ldericher> but I won't get an instance, I will get the type itself …
[03:42:21] <SnoopJ> use issubclass() then, which has the same semantics if the second argument is a tuple
[03:42:23] *** Joins: wyclif (~wyclif@user/wyclif)
[03:42:35] <SnoopJ> (somewhat confusingly, a type T is a subclass of itself)
[03:42:59] <ldericher> i see, that's kind of handy
[03:43:24] <SnoopJ> these tools are a lot less brittle than interacting with the type() directly, too
[03:43:42] <ldericher> SnoopJ, after learning about `super()` behavior with multiple inheritance, that makes a lot of sense
[03:43:42] <SnoopJ> (because they can catch subclasses and/or work with abstract classes)
[03:43:51] *** Quits: hams (~hams@user/hams) (Ping timeout: 250 seconds)
[03:45:26] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[03:45:43] *** Quits: mud (~mud@user/kadoban) (Quit: quit)
[03:45:57] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[03:46:53] *** Quits: bsturmfels (~bsturmfel@mediagoblin/maintainer/bsturmfels) (Quit: Leaving)
[03:47:02] *** Quits: zeenk (~zeenk@2a02:2f04:a313:d600:8d26:ec9f:3ff6:fc94) (Quit: Konversation terminated!)
[03:47:18] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 260 seconds)
[03:47:35] *** lukedashjr is now known as luke-jr
[03:47:44] *** Joins: arrcpp0 (~arrcpp@static-166-58-63-95.ipcom.comunitel.net)
[03:47:55] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[03:48:21] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.5)
[03:49:08] *** Quits: junebug (~junebug@2600:1700:3db0:2540:322a:1e20:58c6:b6ad) (Ping timeout: 260 seconds)
[03:49:11] *** Quits: Strom (strom@fedora/strom) ()
[03:49:17] *** Joins: howdoi (uid224@id-224.lymington.irccloud.com)
[03:50:29] *** Joins: hackers (~self@user/hackers)
[03:50:32] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[03:50:35] *** hackers is now known as remote
[03:50:36] *** Joins: zeenk (~zeenk@2a02:2f04:a313:d600:8d26:ec9f:3ff6:fc94)
[03:50:41] *** Joins: Strom (strom@fedora/strom)
[03:52:00] *** Joins: reset (~reset@user/reset)
[03:52:13] *** Quits: zeenk (~zeenk@2a02:2f04:a313:d600:8d26:ec9f:3ff6:fc94) (Client Quit)
[03:53:17] *** Quits: white2 (~mahengrui@user/mahengrui1) (Ping timeout: 252 seconds)
[03:53:36] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Remote host closed the connection)
[03:53:38] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::beb) (Quit: Konversation terminated!)
[03:54:52] *** Joins: white2 (~mahengrui@user/mahengrui1)
[03:55:07] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[03:55:21] *** Quits: konfusedagain (~konfuseda@125.99.177.198) (Ping timeout: 245 seconds)
[03:57:02] *** Quits: arrcpp0 (~arrcpp@static-166-58-63-95.ipcom.comunitel.net) (Quit: Leaving)
[03:57:10] *** Joins: arrcpp0 (~arrcpp@static-166-58-63-95.ipcom.comunitel.net)
[03:57:46] <meejah> ldericher: maybe we can convince you _not_ to use multiple-inheritance ;)
[03:58:17] *** Quits: drbeco (~beco@user/beco) (Remote host closed the connection)
[03:58:26] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[03:58:41] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[03:59:19] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[03:59:31] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[03:59:34] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[03:59:37] <ztrawhcse> Mixins are a pretty reasonable pattern, actually.
[04:00:05] <SnoopJ> emphasis on 'reason'
[04:00:07] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[04:00:20] <SnoopJ> (as in: use MI when you have a compelling reason to do so)
[04:00:59] *** Quits: mat001 (~mat001@89.45.90.79) (Ping timeout: 252 seconds)
[04:01:59] *** Joins: mike18 (~geri@216.200.232.252)
[04:02:32] *** Joins: drbeco (~beco@user/beco)
[04:02:43] *** Quits: Barones (~Barones@user/Barones) (Remote host closed the connection)
[04:03:12] <mike18> hi how can i append to foo_data in line 13?
[04:03:34] <mike18> when i print enablement.loc ... it has data - but append seems not to work...
[04:03:35] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 240 seconds)
[04:05:03] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[04:05:12] *** Quits: peteyboy1 (~peteyboy1@199.157.133.37.dynamic.jazztel.es) (Ping timeout: 272 seconds)
[04:05:22] *** Quits: msk (~Thunderbi@89.205.124.39) (Quit: msk)
[04:05:42] *** Quits: arrcpp0 (~arrcpp@static-166-58-63-95.ipcom.comunitel.net) (Quit: Leaving)
[04:05:44] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[04:05:48] <nedbat> mike18: line 13 of what?
[04:05:57] *** Joins: msk (~Thunderbi@89.205.124.39)
[04:05:58] <mike18> oh forgot to paste
[04:06:06] <mike18> https://ideone.com/7nAYTK
[04:06:57] <bookworm> that's not even remotely a proper use of pandas
[04:07:07] *** Joins: junebug (~junebug@2600:1700:3db0:2540:97ae:59b2:b4dc:ac34)
[04:07:31] <ldericher> meejah, I don't even use MI, but I still learned about it in case I stumble upon it in the future
[04:08:14] <mike18> bookworm: i want to append the data from enablement.loc to a dataframe foo_data
[04:08:33] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 250 seconds)
[04:09:08] <bookworm> you don't copy the frame, so you may or may not modify the original
[04:09:48] <bookworm> but what you actually want is to read up on the time indexing and aggregation functionality of pandas
[04:10:10] <mike18> call append is wrong?
[04:10:15] <bookworm> yes
[04:11:18] <bookworm> "wrong" being a strong word, but certainly something between an antipattern and a red flag
[04:11:41] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[04:11:50] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:edaa:2b18:f633:30f6)
[04:12:01] *** Quits: admin124 (~harrymore@2607:fb90:551f:cae:9930:ac68:1bc8:6dcb) (Ping timeout: 245 seconds)
[04:12:27] <mike18> what do you mean by "you don't copy the frame, so you may or may not modify the original" ?
[04:13:28] *** Quits: sobkas (~sobkas@95.175.17.217) (Remote host closed the connection)
[04:13:48] *** Joins: hexenbane9 (~hexenbane@fixed-187-188-14-118.totalplay.net)
[04:13:53] *** Joins: jpn (~jpn@user/jpn)
[04:14:23] <mike18> bookworm: do you mean i need enablement = df.copy() ?
[04:14:39] <bookworm> enablement = df << there's a magic frame coming from somewhere, I was assuming that's a typo and you mean foo_data
[04:15:06] <mike18> yeah i changed to: enablement = df.copy()
[04:15:11] *** Quits: Gerula (~Gerula@user/gerula) (Ping timeout: 260 seconds)
[04:15:22] *** Joins: sobkas (~sobkas@95.175.17.217)
[04:15:26] <bookworm> and append returns a new object
[04:15:30] <bookworm> Append rows of other to the end of caller, returning a new object.
[04:15:45] <mike18> df is the input dataframe ...
[04:16:04] <mike18> and foo_data is the df which should be returned
[04:16:25] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[04:16:34] <bookworm> Iteratively appending rows to a DataFrame can be more computationally intensive than a single concatenate. A better solution is to append those rows to a list and then concatenate the list with the original DataFrame all at once.
[04:16:40] <mike18> and enablement is a copy of df which some transformations applied...
[04:16:46] <bookworm> ^ you should heed the docs
[04:16:49] <mike18> transformation will change in the loop
[04:17:25] <bookworm> just do the transformation on the whole frame at once and merge that back
[04:17:37] <mike18> what do you mean?
[04:17:39] <mike18> no loop?
[04:17:49] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 246 seconds)
[04:17:57] *** Quits: gitly (~gitly@148.252.129.134) (Ping timeout: 240 seconds)
[04:18:05] *** Quits: jay-m126 (~jay-m@d75-159-62-172.abhsia.telus.net) (Ping timeout: 250 seconds)
[04:18:46] <bookworm> why are you even using pandas?
[04:19:03] <bookworm> you seem to just use it as a fancy list of dicts
[04:19:33] *** Joins: Wulf (~Wulf@user/wulf)
[04:20:08] *** Joins: gitly (~gitly@148.252.132.250)
[04:21:19] <mike18> bc the rest of code works on pandas df
[04:21:40] *** Joins: konfusedagain (~konfuseda@125.99.177.198)
[04:23:48] <mike18> food_data = food_data.append(...) works btw
[04:23:53] *** Joins: Jong (~Jong@184-99-74-148.boid.qwest.net)
[04:24:03] <mike18> what is the better way?
[04:24:10] <mike18> i only have up to 100k rows max
[04:24:19] <mike18> and append is called 3-6 times max
[04:26:23] *** Joins: jpn_ (~jpn@user/jpn)
[04:26:29] <bookworm> you do realize that pandas has intrinsic time and date handling, yes?
[04:27:22] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[04:28:38] *** Joins: arrcpp0 (~arrcpp@static-166-58-63-95.ipcom.comunitel.net)
[04:29:05] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 256 seconds)
[04:29:15] <mike18> in what sense?
[04:29:48] <mike18> i can select rows based on some time attributes?
[04:30:07] *** Quits: hanetzer (~hanetzer@user/hanetzer) (Ping timeout: 260 seconds)
[04:30:24] <bookworm> https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html
[04:30:28] <bookworm> yes
[04:30:50] <mike18> idk if thats that easy as to what i want to do
[04:30:59] <mike18> i have some time zones in my dataframe
[04:31:06] *** Quits: distantsail (~distantsa@ip72-218-52-185.hr.hr.cox.net) (Quit: WeeChat 3.4)
[04:31:14] *** Quits: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Quit: Bye)
[04:31:30] <mike18> i want to convert the utc time to the local time and check if its a 2am time
[04:31:38] *** Joins: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[04:31:42] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 260 seconds)
[04:31:58] <mike18> and that loop also checked 1am etc...
[04:32:04] *** Joins: hanetzer (~hanetzer@user/hanetzer)
[04:32:18] <mike18> based on RETRY_LOOKBACK_HOURS const
[04:32:28] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[04:32:30] <mike18> im sure you can do that better somehow
[04:33:01] *** Quits: arrcpp0 (~arrcpp@static-166-58-63-95.ipcom.comunitel.net) (Remote host closed the connection)
[04:33:03] *** Quits: jpn_ (~jpn@user/jpn) (Ping timeout: 256 seconds)
[04:33:19] *** Joins: arrcpp0 (~arrcpp@static-166-58-63-95.ipcom.comunitel.net)
[04:33:27] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[04:33:31] *** Quits: arrcpp0 (~arrcpp@static-166-58-63-95.ipcom.comunitel.net) (Remote host closed the connection)
[04:34:09] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[04:35:40] *** Joins: arrcpp0 (~arrcpp@static-166-58-63-95.ipcom.comunitel.net)
[04:36:30] *** Joins: trace987 (~trace@user/trace)
[04:36:35] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[04:37:21] *** Joins: jay-m126 (~jay-m@d75-159-62-172.abhsia.telus.net)
[04:37:27] *** Quits: trace987 (~trace@user/trace) (Remote host closed the connection)
[04:38:53] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[04:38:54] *** Joins: fling (~fling@user/fling)
[04:40:25] *** Joins: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp)
[04:43:20] *** Quits: freeman_h2 (~freeman_h@103.219.20.26) (Ping timeout: 252 seconds)
[04:43:24] *** Quits: junebug (~junebug@2600:1700:3db0:2540:97ae:59b2:b4dc:ac34) (Ping timeout: 240 seconds)
[04:43:34] *** Joins: mat001 (~mat001@89.45.90.157)
[04:44:43] *** Quits: omegatron (~some@p5b056cb8.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[04:45:34] *** Quits: zacts (~zacts@user/zacts) (Ping timeout: 250 seconds)
[04:46:32] *** Joins: freeman_h2 (~freeman_h@103.219.20.33)
[04:46:37] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[04:46:52] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[04:47:28] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::81bb)
[04:47:37] *** Joins: freeman_h1 (~freeman_h@103.219.20.33)
[04:47:38] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[04:49:27] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[04:50:17] *** Joins: xkuru (~xkuru@user/xkuru)
[04:50:43] *** Quits: freeman_h2 (~freeman_h@103.219.20.33) (Ping timeout: 246 seconds)
[04:52:04] *** Quits: aghast (~aghast@2607:fb91:bd8e:4bdb:2ce3:8a9e:136a:946e) (Ping timeout: 260 seconds)
[04:52:30] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[04:52:31] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[04:53:10] *** Quits: Shou (~nyah@wikipedia/Davepeta) (Quit: Leaving)
[04:55:54] *** Joins: junebug (~junebug@2600:1700:3db0:2540:52e7:bde7:a695:cf94)
[04:56:21] *** Joins: hqdruxn08_ (~hqdruxn08@user/hqdruxn08)
[04:56:57] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[04:57:26] *** Joins: dre (~dre@2001:8003:c932:c301:55ad:378d:2c99:f745)
[04:57:28] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[04:57:43] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[04:57:56] *** Quits: freeman_h1 (~freeman_h@103.219.20.33) (Read error: Connection reset by peer)
[04:58:25] *** Quits: hqdruxn08 (~hqdruxn08@user/hqdruxn08) (Ping timeout: 246 seconds)
[04:59:00] *** Joins: jpn (~jpn@user/jpn)
[04:59:19] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[05:00:15] *** Joins: trace987 (~trace@user/trace)
[05:00:23] <mike18> im running python -m pytest -sv ./tests/unit/test_foo.py ... but the short test summary info is shorten - how to disable that?
[05:01:12] *** Joins: aghast (~aghast@2607:fb91:bd8e:4bdb:2ce3:8a9e:136a:946e)
[05:01:35] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:03:13] *** Quits: mihael (~mihael@115.146.176.131) (Quit: Client closed)
[05:03:49] *** Joins: sudomann (~sudomann@98.219.211.182)
[05:04:32] *** Quits: akk (~akk@75.161.150.5) (Quit: +++)
[05:05:22] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 272 seconds)
[05:05:22] *** Joins: vlm (~vlm@user/vlm)
[05:07:16] *** Joins: TheCat_ (~TheCat@user/z-cat)
[05:08:10] *** TheCat is now known as Guest4307
[05:08:14] *** Quits: TheCat_ (~TheCat@user/z-cat) (Remote host closed the connection)
[05:08:19] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[05:08:35] *** Joins: TheCat_ (~TheCat@user/z-cat)
[05:08:37] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[05:09:04] *** Quits: Guest4307 (~TheCat@user/z-cat) (Remote host closed the connection)
[05:09:09] *** Joins: zebrag (~chris@user/zebrag)
[05:09:22] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[05:09:44] *** Quits: TheCat_ (~TheCat@user/z-cat) (Remote host closed the connection)
[05:12:02] *** Joins: TheCat (~TheCat@user/z-cat)
[05:12:14] *** Quits: TheCat (~TheCat@user/z-cat) (Read error: Connection reset by peer)
[05:12:32] *** Joins: TheCat (~TheCat@user/z-cat)
[05:14:28] *** Joins: Barones (~Barones@user/Barones)
[05:15:06] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:b04f:a3c8:8176:6595) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:16:26] *** Quits: tj123_ (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[05:16:36] *** Joins: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[05:16:47] *** Quits: TheCat (~TheCat@user/z-cat) (Ping timeout: 250 seconds)
[05:16:47] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 260 seconds)
[05:17:25] *** Joins: wyclif (~wyclif@user/wyclif)
[05:17:49] *** Joins: Guest80 (~Guest80@pool-96-253-74-73.rcmdva.fios.verizon.net)
[05:18:24] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[05:19:06] *** Joins: jpn (~jpn@user/jpn)
[05:19:12] *** Joins: funhouse (~funhouse@user/funhouse)
[05:19:36] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[05:21:50] *** Quits: jay-m126 (~jay-m@d75-159-62-172.abhsia.telus.net) (Ping timeout: 272 seconds)
[05:23:37] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 246 seconds)
[05:23:37] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[05:23:52] *** Joins: bryce (~bryce@ool-18e4ba09.dyn.optonline.net)
[05:24:26] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[05:25:16] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[05:26:07] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 260 seconds)
[05:26:32] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::81bb) (Quit: WeeChat 3.4)
[05:28:08] <Guest80> Is there a way to delete SimpleCookie?
[05:28:30] <Guest80> I am writing a django test and this is giving me some trouble. I will also ask in that channel
[05:28:54] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[05:30:26] *** Joins: TheCat (~TheCat@user/z-cat)
[05:30:37] *** Joins: elb0w (~elb0w@langhamips11.l.subnet.rcn.com)
[05:31:00] *** Joins: freefall (~owner@2600:6c40:1600:39ec:fd65:1cbb:5344:9dd9)
[05:31:20] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (Ping timeout: 272 seconds)
[05:31:27] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[05:32:01] <freefall> can anyone help me understand the tkinter grid usage..
[05:32:25] <freefall> https://paste.pythondiscord.com/ariqazidus.py
[05:32:41] <freefall> this is what i got and it put stuff everywhere other then where i want it
[05:33:35] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[05:33:36] *** Joins: mud (~mud@user/kadoban)
[05:33:46] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 246 seconds)
[05:33:46] *** Quits: vlado (~vlado@181.50.79.237) (Ping timeout: 246 seconds)
[05:35:01] <Guest80> https://dpaste.org/SmV3
[05:35:36] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[05:35:47] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[05:36:10] *** Joins: vlado (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c)
[05:37:37] *** Joins: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net)
[05:38:51] *** Joins: mihael (~mihael@115.146.176.131)
[05:40:23] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[05:40:50] *** Quits: death916 (~death916@user/death916) (Ping timeout: 272 seconds)
[05:41:15] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[05:41:32] <ldericher> how do I get something like `(<whatever> for <foo> in <Iterable1> or in <Iterable2>)`?
[05:41:43] *** Joins: jpn (~jpn@user/jpn)
[05:41:52] <mihael> I'm using CentOS 7, I'm trying to install python-ldap but I'm getting an error: ERROR: Could not build wheels for python-ldap, which is required to install pyproject.toml-based projects, anyone knows how to resolve this?
[05:42:15] <ldericher> can I chain together two Iterables like that and have it not be too arcane?
[05:42:55] *** Joins: fling (~fling@user/fling)
[05:43:06] <ldericher> mihael, which python version are you on? could you get your python-ldap using `yum`?
[05:43:14] <SnoopJ> ldericher, `or` doesn't really make sense there. If you just want to 'join' the iterables end-to-end, itertools.chain can do that
[05:43:54] <SnoopJ> https://bpa.st/WXDA
[05:44:10] *** Quits: freefall (~owner@2600:6c40:1600:39ec:fd65:1cbb:5344:9dd9) (Quit: Leaving)
[05:44:12] *** Quits: mharig (~mharig@181.188.140.9) (Quit: WeeChat 3.4.1)
[05:44:13] <mihael> ldericher `Python 3.1.1`
[05:44:19] *** Joins: Fiji (~Fiji@user/fiji)
[05:44:26] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[05:45:45] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:b949:3ab6:25f0:720c)
[05:46:20] <ldericher> SnoopJ, that's what I expected - I'd rather avoid chaining with itertools
[05:46:25] <ldericher> mihael, https://pkgs.org/download/python3-ldap ?
[05:46:57] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 260 seconds)
[05:47:00] <ldericher> https://centos.pkgs.org/7/epel-x86_64/python36-ldap-3.1.0-12.el7.x86_64.rpm.html
[05:48:07] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 246 seconds)
[05:48:59] <deltab> ldericher: you could use  (x for iterable in iterables for x in iterable)
[05:50:00] *** Joins: hams (~hams@73.232.205.0)
[05:50:01] *** Quits: hams (~hams@73.232.205.0) (Changing host)
[05:50:01] *** Joins: hams (~hams@user/hams)
[05:50:30] <SnoopJ> ldericher, can you elaborate on why?
[05:51:40] <deltab> Guest80: deleting a cookie from the browser? give it an expiry time in the past
[05:52:01] <ldericher> deltab, SnoopJ, more concrete use case: I've got a gen-comprehension of (unique) ints and a Sequence[int], and I want the set of all ints contained in either of them
[05:52:03] <Guest80> Not quite I am deleting using a unit test in django
[05:52:19] <deltab> oh, in a test client
[05:52:26] <Guest80> yes exactly
[05:52:59] <SnoopJ> ldericher, how about: `set(*seq, *gen)` ?
[05:53:07] <ldericher> SnoopJ, I wanna prioritize code readability, `itertools` doesn't really help with that
[05:53:16] <deltab> Guest80: maybe  del self.client.cookies['cookie_consent']
[05:53:24] <Guest80> ok let me try
[05:53:47] *** Joins: lseactuary (~lseactuar@2601:646:202:2f10:587c:2da8:917f:7635)
[05:54:14] <Guest80> deltab you are a genius I think that worked
[05:54:23] <lseactuary> anyone can point me in the right direction on this code? it should be simple 1 line but I can't seem to crack it: https://pastebin.com/eMQLybyW
[05:54:35] <ldericher> SnoopJ, `arr = list(range(10)); set(*(i*2 for i in arr), *[1, 2])` => "TypeError: set expected at most 1 argument, got 12"
[05:54:36] <SnoopJ> oops, my set() spelling is invalid, I think it should be `set((*seq, *gen))`
[05:54:45] <SnoopJ> ldericher, see above
[05:54:55] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[05:55:24] *** Quits: remote (~self@user/hackers) (Ping timeout: 272 seconds)
[05:55:27] <SnoopJ> https://bpa.st/U2EA
[05:55:50] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[05:56:08] <ldericher> SnoopJ, that creates an intermediate tuple, right? Not really an issue, but in those cases tuples should be preferred over lists because immutability (can malloc the exact amount), amirite?
[05:56:28] <Guest80> deltab are you fluent in django?
[05:56:32] <deltab> no
[05:56:56] <SnoopJ> ldericher, it does create an intermediate tuple, yes. I don't really understand the rest of your question. In CPython, the difference isn't really worth fussing over (and you *definitely* should not write towards implementation details if you're worried about legibility)
[05:57:04] <Guest80> wow impressive
[05:57:46] <ldericher> SnoopJ, for legibility it doesn't really matter if I choose `set((...))` over `set([...])`
[05:58:20] <SnoopJ> I sometimes err towards the latter to distinguish between the call and the argument, but not terribly consistently
[05:58:26] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[05:58:39] <deltab> Guest80: https://docs.python.org/3/library/stdtypes.html#mapping-types-dict
[05:58:43] *** Joins: humanBird (~humanBird@098-148-004-061.res.spectrum.com)
[05:58:49] <ldericher> SnoopJ, waaait. `{*iter1, *iter2}` works just fine :)
[05:58:49] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[05:58:56] <Guest80> I am so glad I asked here then I was trying every single way other than del to delete the cookie
[05:59:03] <SnoopJ> ldericher, oh yea, that too.
[05:59:11] *** Quits: mike18 (~geri@216.200.232.252) (Ping timeout: 256 seconds)
[05:59:14] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[05:59:36] <Guest80> thanks for that link i will bookmark it
[05:59:42] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[05:59:45] <SnoopJ> that avoids an intermediate object too, if I'm not mistaken
[05:59:49] <SnoopJ> (in CPython)
[06:00:35] <SnoopJ> there are a family of BUILD_<type>_UNPACK instructions that I think do the equivalent of chain() using the stack
[06:00:39] <rindolf> Hi all! I wrote https://github.com/shlomif/shlomif-snippets/blob/master/plot_mandelbrot_cc0.py yesterday based on my old matlab code
[06:02:55] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:03:06] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:cdbe:ac62:894f:fba2) (Ping timeout: 260 seconds)
[06:03:14] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Quit: leaving)
[06:03:47] *** Joins: stockh0lm (~Andreas@p200300d2c7083200bc37e4358fcb1057.dip0.t-ipconnect.de)
[06:05:01] *** Quits: srg (~srg@user/srg) (Quit: :wqa)
[06:05:34] <rindolf> there is this page too: https://www.shlomifish.org/humour/bits/Programs-Every-Programmer-has-Written/
[06:05:51] <ldericher> any good mnemonics for the type hint of `Generator[<which>, <is>, <which>]`?
[06:05:53] <deltab> Guest80: do give it a glance over too, for future "I think I saw something about that" feelings
[06:06:51] *** Quits: stockholm (~Andreas@p200300d2c70f0600bc37e4358fcb1057.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[06:07:18] <SnoopJ> ldericher, the first one is the 'obvious' one (YieldType) and maybe you could treat the last one (ReturnType) as what's done when the generator's finished, with SendType being the odd one out.
[06:07:22] *** Joins: chenqisu1 (~chenqisu1@183.217.200.168)
[06:07:53] <SnoopJ> (or just look it up, which is what I will do if I have to care about SendType/ReturnType one day)
[06:08:09] *** Joins: hamburger (~hamburger@user/hamburger)
[06:08:54] *** Joins: admin124 (harrymoren@gateway/vpn/protonvpn/admin123)
[06:09:11] *** Quits: bomb-on (~bomb-on@user/bomb-on) (Quit: aллилѹіа!)
[06:09:49] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 246 seconds)
[06:13:19] *** Quits: admin124 (harrymoren@gateway/vpn/protonvpn/admin123) (Ping timeout: 246 seconds)
[06:13:50] *** Quits: _h4x0r_ (~till@user/till/x-8616149) (Ping timeout: 260 seconds)
[06:16:06] *** Joins: hanzo (uid532183@user/hanzo)
[06:16:19] *** Quits: jdmark2 (~jdmark@user/jdmark) (Quit: Leaving)
[06:16:20] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[06:16:35] *** Joins: jdmark (~jdmark@user/jdmark)
[06:18:02] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:18:45] *** Joins: pycurious1 (~Adium@c-69-254-208-5.hsd1.fl.comcast.net)
[06:18:46] *** Quits: pycurious (~Adium@user/pycurious) (Read error: Connection reset by peer)
[06:19:43] *** Joins: lseactuary18 (~lseactuar@2601:646:202:2f10:587c:2da8:917f:7635)
[06:20:12] *** Joins: RohitK (~RohitK@165.225.120.248)
[06:20:35] *** Quits: sobkas (~sobkas@95.175.17.217) (Quit: sobkas)
[06:21:03] *** Quits: FlipFlop (~FlipFlop@user/fl1pfl0p) (Ping timeout: 256 seconds)
[06:21:39] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 260 seconds)
[06:23:30] *** Quits: lseactuary (~lseactuar@2601:646:202:2f10:587c:2da8:917f:7635) (Ping timeout: 250 seconds)
[06:23:42] *** Quits: lseactuary18 (~lseactuar@2601:646:202:2f10:587c:2da8:917f:7635) (Client Quit)
[06:25:33] *** Joins: hard (~hard@177.128.243.87)
[06:25:48] <hard> hello
[06:25:48] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[06:25:53] <hard> hi
[06:26:01] *** Joins: Seto_Kaiba (~hunterkll@remote.kisaracorporation.com)
[06:26:52] *** Joins: Guest48 (~textual@2001:ee0:4081:6914:907f:f137:fb2a:93e5)
[06:27:50] *** Parts: hard (~hard@177.128.243.87) ()
[06:29:00] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 240 seconds)
[06:29:07] <rindolf> hard left
[06:29:15] *** Quits: nomic (~nomic@185.217.117.233) (Quit: Leaving)
[06:30:10] *** Joins: hamburger_ (~hamburger@user/hamburger)
[06:30:52] *** Joins: Administrator__ (~hamburger@user/hamburger)
[06:31:14] <RohitK> https://sathvishayam.files.wordpress.com/2017/05/unnamed4.jpg
[06:31:18] *** Joins: MrWu (~wu@141.red-2-139-122.dynamicip.rima-tde.net)
[06:31:19] *** Quits: Wu (~wu@35.red-88-24-200.staticip.rima-tde.net) (Ping timeout: 250 seconds)
[06:32:47] *** Quits: visl (visl@user/visl) (Ping timeout: 252 seconds)
[06:32:55] <rindolf> RohitK: heh! too bad it isn't a .png tho
[06:32:57] *** Quits: PublicWiFi (~PublicWiF@user/publicwifi) (Ping timeout: 256 seconds)
[06:33:37] *** Joins: _xor (~xor@74.215.232.169)
[06:33:38] <RohitK> Japanese Proverb:
[06:33:39] <RohitK> If One Can Do,
[06:33:39] <RohitK> You Can Do.
[06:33:40] <RohitK> If No one Can Do,
[06:33:40] <RohitK> You Must Do.
[06:33:41] <RohitK> Indian Proverb:-
[06:33:41] *** litharge sets mode: +q *!*@165.225.120.248
[06:33:42] *** Joins: visl (visl@user/visl)
[06:34:02] *** Quits: hamburger (~hamburger@user/hamburger) (Ping timeout: 272 seconds)
[06:34:11] *** litharge sets mode: -q *!*@165.225.120.248
[06:34:22] *** Administrator__ is now known as hamburger
[06:34:59] *** Quits: hamburger_ (~hamburger@user/hamburger) (Ping timeout: 252 seconds)
[06:35:43] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Read error: Connection reset by peer)
[06:36:31] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[06:37:51] *** Quits: RohitK (~RohitK@165.225.120.248) (Quit: Client closed)
[06:38:17] *** Quits: visl (visl@user/visl) (Ping timeout: 252 seconds)
[06:39:13] *** Joins: visl (visl@user/visl)
[06:40:56] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[06:41:46] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[06:42:25] *** Quits: _xor (~xor@74.215.232.169) (Quit: WeeChat 3.4.1)
[06:45:06] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:edaa:2b18:f633:30f6) (Ping timeout: 260 seconds)
[06:45:15] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[06:45:25] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[06:45:45] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[06:46:40] *** Quits: pycurious1 (~Adium@c-69-254-208-5.hsd1.fl.comcast.net) (Quit: Leaving.)
[06:46:51] *** Joins: fling (~fling@user/fling)
[06:47:14] *** Joins: PublicWiFi (~PublicWiF@user/publicwifi)
[06:50:24] *** Joins: Guest62 (~Guest62@192.24.24.2)
[06:51:28] *** Parts: Guest62 (~Guest62@192.24.24.2) ()
[06:52:32] *** Joins: sudomann (~sudomann@98.219.211.182)
[06:54:47] *** Quits: erry (~erry@errietta.me) (Quit: WeeChat 2.5)
[06:56:02] *** Joins: erry (~erry@errietta.me)
[06:57:07] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 260 seconds)
[06:58:52] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[07:03:10] *** Quits: PublicWiFi (~PublicWiF@user/publicwifi) (Ping timeout: 272 seconds)
[07:04:55] *** Quits: Jong (~Jong@184-99-74-148.boid.qwest.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:05:26] *** Joins: hamburger_ (~hamburger@user/hamburger)
[07:07:23] *** Quits: dsrt^ (~dsrt@96-91-136-49-static.hfc.comcastbusiness.net) (Ping timeout: 260 seconds)
[07:07:59] *** Quits: hamburger (~hamburger@user/hamburger) (Ping timeout: 252 seconds)
[07:08:02] *** Joins: adeliktas4 (~adeliktas@i59F52D90.versanet.de)
[07:08:53] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[07:08:53] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:08:53] *** finn_elija is now known as FinnElija
[07:09:47] *** Quits: adeliktas (~adeliktas@i59F527CA.versanet.de) (Ping timeout: 260 seconds)
[07:09:48] *** adeliktas4 is now known as adeliktas
[07:12:43] *** Quits: hamburger_ (~hamburger@user/hamburger) (Quit: will be back busy now)
[07:14:59] *** Joins: sudomann (~sudomann@98.219.211.182)
[07:15:57] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[07:16:28] *** Quits: NealRame (~a@89.187.163.193) (Ping timeout: 272 seconds)
[07:19:04] *** Joins: Jong (~Jong@2600:380:741d:dc2b:18c7:613c:9f51:cab0)
[07:19:16] *** Quits: raym (~raym@user/raym) (Quit: kernel update, rebooting...)
[07:19:59] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 256 seconds)
[07:20:53] *** Joins: raym (~raym@user/raym)
[07:20:59] *** Joins: moog_ (~moog@98.97.82.178)
[07:22:19] *** Quits: moog (~moog@98.97.82.178) (Ping timeout: 260 seconds)
[07:24:04] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[07:24:23] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 260 seconds)
[07:25:27] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[07:27:20] *** Joins: jpn (~jpn@user/jpn)
[07:29:44] *** Joins: cdman (~dcm@27.2.218.248)
[07:29:44] *** Quits: cdman (~dcm@27.2.218.248) (Changing host)
[07:29:44] *** Joins: cdman (~dcm@user/dmc/x-4369397)
[07:29:48] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[07:29:59] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[07:30:07] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:30:10] *** Joins: death916 (~death916@c-73-220-87-102.hsd1.ca.comcast.net)
[07:30:10] *** Quits: death916 (~death916@c-73-220-87-102.hsd1.ca.comcast.net) (Changing host)
[07:30:10] *** Joins: death916 (~death916@user/death916)
[07:30:35] *** Joins: cloux_ (~cloux@user/cloux)
[07:30:50] *** Joins: someuser (~user@197.54.104.161)
[07:31:44] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Remote host closed the connection)
[07:32:13] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[07:32:36] *** Quits: cloux (~cloux@user/cloux) (Ping timeout: 240 seconds)
[07:32:36] *** cloux_ is now known as cloux
[07:32:41] *** Quits: bloody (~bloody@user/bloody) (Quit: okluvyabubye)
[07:32:49] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[07:32:56] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 272 seconds)
[07:33:23] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[07:34:08] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[07:34:22] *** Quits: junebug (~junebug@2600:1700:3db0:2540:52e7:bde7:a695:cf94) (Quit: Leaving)
[07:34:50] *** Quits: SaltHilStroller_ (~SaltHillS@206.223.160.26) (Ping timeout: 272 seconds)
[07:36:01] *** Quits: ldericher (~LDer@pantalaimon.yavook.de) (Changing host)
[07:36:01] *** Joins: ldericher (~LDer@user/ldericher)
[07:37:56] *** Quits: Barones (~Barones@user/Barones) (Remote host closed the connection)
[07:39:49] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[07:41:31] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:21f9:e025:d842:e2ee)
[07:41:58] *** Joins: hamburger (~hamburger@user/hamburger)
[07:42:44] <jinsun> ldericher: if you are returning a Generator but you won't use .send or StopIteration then just annotate it as a simpler type, Iterable[T] or Iterator[T]
[07:43:03] *** Quits: hamburger (~hamburger@user/hamburger) (Remote host closed the connection)
[07:43:20] *** Joins: hamburger (~hamburger@user/hamburger)
[07:44:47] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 260 seconds)
[07:44:58] *** Quits: visl (visl@user/visl) (Ping timeout: 272 seconds)
[07:45:09] <jinsun> Iterator only if you're going to call next(), otherwise simply Iterable if you're just gonna loop over it
[07:48:36] *** Joins: l4yer (~l4yer@user/l4yer)
[07:49:15] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[07:50:58] *** Joins: fling (~fling@user/fling)
[07:52:06] *** Joins: visl (visl@user/visl)
[07:52:31] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[07:52:55] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Ping timeout: 240 seconds)
[07:53:50] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[07:53:54] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[07:54:02] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Remote host closed the connection)
[07:54:19] *** Joins: hamburger_ (~hamburger@user/hamburger)
[07:54:48] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[07:55:07] *** Quits: hamburger_ (~hamburger@user/hamburger) (Remote host closed the connection)
[07:55:14] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[07:55:34] *** Joins: hamburger_ (~hamburger@user/hamburger)
[07:57:05] *** byzandula is now known as byzafk
[07:57:07] *** Quits: squirrel (uid529456@user/squirrel) (Quit: Connection closed for inactivity)
[07:57:49] *** Quits: hamburger (~hamburger@user/hamburger) (Ping timeout: 240 seconds)
[07:57:56] *** Joins: irf21k (~irf21k@223.237.152.249)
[07:57:58] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[07:58:32] *** Joins: Administrator__ (~hamburger@user/hamburger)
[07:59:19] *** Joins: tusko (~yeurt@user/tusko)
[07:59:56] *** Administrator__ is now known as hamburger
[08:00:21] <tusko> https://bpa.st/5KFA Line 4 doesn't fly. WHat is the best way to specify that the first row and column are all ones?
[08:00:37] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:cdbe:ac62:894f:fba2)
[08:01:53] *** Quits: alxndr (~alexander@ybti.net) (Remote host closed the connection)
[08:02:27] *** Quits: hamburger_ (~hamburger@user/hamburger) (Ping timeout: 260 seconds)
[08:02:46] <deltab> I think  F[0, :] = 1; F[:, 0] = 1
[08:02:47] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[08:03:18] *** Quits: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Quit: Leaving)
[08:04:11] *** Quits: byzafk (~byzandula@beerbq.net) (Quit: BEERBQ)
[08:04:36] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[08:04:36] *** Quits: konfusedagain (~konfuseda@125.99.177.198) (Ping timeout: 272 seconds)
[08:04:44] <deltab> or even  F[0, :] = F[:, 0] = 1
[08:05:19] *** Quits: Jong (~Jong@2600:380:741d:dc2b:18c7:613c:9f51:cab0) (Ping timeout: 256 seconds)
[08:05:51] *** Joins: Jong2 (~Jong@2600:380:746b:82ae:3:557a:b4e4:6755)
[08:06:11] *** Joins: cyrlt^ (~cyrlt@96-91-136-49-static.hfc.comcastbusiness.net)
[08:06:24] *** Quits: dignissimus (~dignissim@79-70-31-37.dynamic.dsl.as9105.com) (Quit: WeeChat 3.4)
[08:07:04] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 246 seconds)
[08:07:06] *** Joins: hamburger_ (~hamburger@user/hamburger)
[08:07:28] <tusko> ah yeah, that does seem right
[08:08:57] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[08:09:14] *** Quits: Guest80 (~Guest80@pool-96-253-74-73.rcmdva.fios.verizon.net) (Ping timeout: 250 seconds)
[08:10:10] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[08:10:30] *** Joins: alxndr (~alexander@ybti.net)
[08:10:40] <deltab> you probably won't need list comprehensions
[08:11:19] *** Quits: hamburger (~hamburger@user/hamburger) (Ping timeout: 260 seconds)
[08:11:28] <tusko> yeah, I was trying a little too hard to be honest
[08:11:35] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[08:11:38] *** Quits: hamburger_ (~hamburger@user/hamburger) (Ping timeout: 260 seconds)
[08:13:07] *** Joins: saroy (~Sandipan@103.24.86.178)
[08:14:35] *** Quits: visl (visl@user/visl) (Ping timeout: 260 seconds)
[08:16:25] *** Quits: sreve (~quassel@p4ff44dd2.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[08:16:38] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Ping timeout: 272 seconds)
[08:16:54] *** Joins: sreve (~quassel@p4ff44df2.dip0.t-ipconnect.de)
[08:17:02] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (Ping timeout: 260 seconds)
[08:18:13] *** Quits: fattredd (~fattredd@pool-100-16-1-70.bltmmd.fios.verizon.net) (Ping timeout: 240 seconds)
[08:18:20] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[08:18:20] *** Joins: hamburger (~hamburger@user/hamburger)
[08:18:47] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[08:20:10] *** Quits: hamburger (~hamburger@user/hamburger) (Client Quit)
[08:20:28] *** Joins: hamburger (~hamburger@user/hamburger)
[08:21:45] *** Joins: visl (visl@user/visl)
[08:23:35] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 240 seconds)
[08:23:47] *** ykkie is now known as aoei
[08:24:45] *** Joins: gproto23 (~gproto23@user/gproto23)
[08:24:59] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:26:06] *** Joins: konfusedagain (~konfuseda@125.99.177.198)
[08:27:48] *** Joins: sudomann (~sudomann@98.219.211.182)
[08:29:15] *** Joins: Awaru (Awaru@gateway/vpn/airvpn/awaru)
[08:29:18] <Awaru> hi
[08:29:34] <Awaru> just tried to install this bot
[08:29:58] <Awaru> then it says i should do "pip install -r requirements.txt
[08:29:58] <Awaru> " as root
[08:30:20] <Awaru> and what do i get? a list of errors: https://pastebin.com/aqarCXdh
[08:30:39] <Awaru> anyway tried to start the bot at the end but not working:
[08:31:12] <SnoopJ> Awaru, the package you are trying to install was written for Python 2 rather than Python 3
[08:31:18] <Awaru> stardustbots@stardust:~/weatherbot$ ./start.sh
[08:31:18] <Awaru> bash: ./start.sh: Permission denied
[08:31:23] <Awaru> hmm
[08:31:24] *** Quits: visl (visl@user/visl) (Ping timeout: 260 seconds)
[08:31:29] <Awaru> so what u recommend?
[08:31:36] <Awaru> downgrade to python 2?
[08:31:48] <Awaru> how can i look up my python version?
[08:32:11] <Awaru> its really ... as u put so much work in it and ten it not working
[08:32:20] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 260 seconds)
[08:33:05] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[08:33:06] <SnoopJ> Awaru, you can check your version of Python with `python -V`, and `pip -V` works as well (sometimes `python` and `pip` don't point to the same place but it looks like here they will)
[08:33:09] <Awaru> stardustbots@stardust:~/weatherbot$ python --version
[08:33:09] <Awaru> bash: python: command not found
[08:33:10] *** Quits: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net) (Quit: leaving)
[08:33:10] <Awaru> huh?
[08:33:30] <Awaru> stardustbots@stardust:~/weatherbot$ pip -V
[08:33:30] <Awaru> pip 20.3.4 from /usr/lib/python3/dist-packages/pip (python 3.9)
[08:33:52] <SnoopJ> So you have Python 3.9, and your system calls it by the name `python3` instead of `python`
[08:33:59] <Awaru> so should i downgrade python now? and yes how? (debian 11)
[08:34:28] <Awaru> is there even python2 packages on debian 11?
[08:34:45] <Awaru> i tried several weatherbots and this is really the last one
[08:34:50] <SnoopJ> I wouldn't recommend it. The best case scenario would be the author releasing a version of the package that is written for a Python from this decade.
[08:35:04] <Awaru> i could install it on the other server?
[08:36:13] <Awaru> well i can hardly write the author to write a version for python 3... also this take time which i dont have, need the weatherbot running...
[08:36:23] <Awaru> or better said need A weatherbot running
[08:36:49] *** Quits: konfusedagain (~konfuseda@125.99.177.198) (Ping timeout: 246 seconds)
[08:36:52] <Awaru> do u know any weatherbot that works and isnt heavy work to install and then doesnt work at the end?
[08:37:49] *** Joins: mateusn (~mateusn@2804:d59:a6bd:e100:62bd:2c81:d831:9610)
[08:38:02] * SnoopJ doesn't know what a 'weatherbot' is
[08:38:46] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[08:40:45] *** Quits: mateusn (~mateusn@2804:d59:a6bd:e100:62bd:2c81:d831:9610) (Quit: WeeChat 3.4)
[08:41:22] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 246 seconds)
[08:41:58] *** Joins: zacts (~zacts@user/zacts)
[08:42:09] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 256 seconds)
[08:42:36] *** Quits: someuser (~user@197.54.104.161) (Ping timeout: 272 seconds)
[08:42:59] <Awaru> :(
[08:43:08] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[08:43:13] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[08:43:25] *** Quits: davidw (~davidw@h72-35-148-100.bendor.broadband.dynamic.tds.net) (Ping timeout: 240 seconds)
[08:44:42] <Lvl4Sword> Through subprocess.check_output I'm getting a "protocol error, got 'E' as reply-type byte" .. Best way to debug this?
[08:45:53] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[08:47:37] *** Joins: hamburger_ (~hamburger@user/hamburger)
[08:48:11] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[08:49:21] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[08:49:50] <Awaru> nother quwestion: how can i find out if a program.py is for python 2 or python 3 or for what version?
[08:49:54] <Awaru> is there a way?
[08:50:03] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[08:50:05] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[08:50:09] *** Joins: konfusedagain (~konfuseda@125.99.177.198)
[08:51:04] *** Quits: humanBird (~humanBird@098-148-004-061.res.spectrum.com) (Quit: Client closed)
[08:51:13] *** Quits: hamburger (~hamburger@user/hamburger) (Ping timeout: 256 seconds)
[08:51:52] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[08:52:34] <SnoopJ> Awaru, not really, a program will either run or it won't under either major version. Some programs run under both.
[08:52:41] *** Joins: wyclif (~wyclif@user/wyclif)
[08:53:03] <deltab> Awaru: some will say in the first line
[08:53:10] <SnoopJ> But nobody is writing new software for Python 2, so if a program is recent, it's likely built with Python 3 in mind
[08:54:28] <deltab> you could look for print statements (python 2) or print function calls (python 3)
[08:55:19] *** Joins: vicfred (~vicfred@user/vicfred)
[08:55:56] *** Quits: pjoter (~october@s166.cyber-folks.pl) (Remote host closed the connection)
[08:58:29] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[08:58:33] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[08:59:32] *** Quits: konfusedagain (~konfuseda@125.99.177.198) (Read error: Connection reset by peer)
[08:59:58] *** hamburger_ is now known as hamburger
[09:00:35] <SnoopJ> (which are what caused the syntax errors in your link)
[09:02:53] *** Joins: secstate[m] (~secstatem@2001:470:69fc:105::1505)
[09:03:02] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 240 seconds)
[09:04:04] *** Joins: humanBird (~humanBird@098-148-004-061.res.spectrum.com)
[09:04:35] *** Quits: Giovanni (~Giovanni@194.169.217.179) (Read error: Connection reset by peer)
[09:05:55] *** Joins: cuanim (~cuanim@31.215.207.104)
[09:05:55] *** Quits: cuanim (~cuanim@31.215.207.104) (Changing host)
[09:05:55] *** Joins: cuanim (~cuanim@user/cuanim)
[09:06:12] *** Joins: Collaken (~flo@ip4d17fdd1.dynamic.kabel-deutschland.de)
[09:06:35] *** Quits: Collaken (~flo@ip4d17fdd1.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[09:06:47] *** Quits: Jong2 (~Jong@2600:380:746b:82ae:3:557a:b4e4:6755) (Ping timeout: 252 seconds)
[09:09:57] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[09:10:11] *** Quits: novns (~novns@user/novns) (Quit: ZNC - https://znc.in)
[09:10:26] *** Joins: visl (visl@user/visl)
[09:10:34] *** Joins: novns (~novns@user/novns)
[09:12:28] *** Quits: Awaru (Awaru@gateway/vpn/airvpn/awaru) (Quit: Awaru)
[09:13:28] *** Joins: takezo (~takezo@gateway/vpn/pia/takezo)
[09:14:19] *** Joins: NealRame (~a@89.187.163.193)
[09:15:07] *** Joins: kdc (~kdc@196-210-1-81.dynamic.isadsl.co.za)
[09:15:38] *** Joins: jpn (~jpn@user/jpn)
[09:16:10] *** Quits: visl (visl@user/visl) (Ping timeout: 272 seconds)
[09:18:19] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[09:18:48] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[09:19:55] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[09:19:58] *** Quits: hanetzer (~hanetzer@user/hanetzer) (Ping timeout: 272 seconds)
[09:21:02] *** Quits: EsoAlgo (~EsoAlgo@152.70.142.52) (Quit: The Lounge - https://thelounge.chat)
[09:21:14] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 272 seconds)
[09:21:25] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:b949:3ab6:25f0:720c) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:22:23] *** Joins: hanetzer (~hanetzer@user/hanetzer)
[09:22:44] *** Joins: EsoAlgo (~EsoAlgo@152.70.142.52)
[09:23:07] *** Joins: visl (visl@user/visl)
[09:24:24] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:de5c:12bf:d56:1d8d)
[09:25:02] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[09:25:05] *** Joins: Giovanni (~Giovanni@194.169.217.179)
[09:25:52] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[09:26:24] *** Quits: drbeco (~beco@user/beco) (Remote host closed the connection)
[09:27:56] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[09:30:12] *** Quits: cuanim (~cuanim@user/cuanim) (Remote host closed the connection)
[09:30:23] *** Joins: hamburger_ (~hamburger@user/hamburger)
[09:30:27] *** Joins: cuanim (~cuanim@31.215.207.104)
[09:30:27] *** Quits: cuanim (~cuanim@31.215.207.104) (Changing host)
[09:30:27] *** Joins: cuanim (~cuanim@user/cuanim)
[09:30:42] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[09:30:44] *** Quits: alioui (~medeva293@197.0.87.71) (Ping timeout: 272 seconds)
[09:30:58] *** Quits: hamburger (~hamburger@user/hamburger) (Ping timeout: 260 seconds)
[09:32:27] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: I'm a quit message virus. Please replace your old line with this line and help me take over the world. <screw you aloo_shu my old line was better and more creative!>)
[09:32:51] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[09:34:51] *** Joins: gulzar (~gulzar@49.206.240.149)
[09:39:19] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[09:39:19] *** Joins: Jong (~Jong@184-99-74-148.boid.qwest.net)
[09:40:04] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[09:40:21] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[09:40:31] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[09:40:47] *** icyphox is now known as icy
[09:41:01] *** Quits: Giovanni (~Giovanni@194.169.217.179) (Read error: Connection reset by peer)
[09:41:40] *** Quits: Guest48 (~textual@2001:ee0:4081:6914:907f:f137:fb2a:93e5) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:41:51] *** Quits: pedahzur (~jkugler@216-67-98-32.static.acsalaska.net) (Ping timeout: 260 seconds)
[09:43:59] *** Quits: Daemoen (~Daemoen@2604:a880:2:d0::2164:d001) (Quit: WeeChat 3.2)
[09:46:07] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 260 seconds)
[09:46:31] *** Quits: visl (visl@user/visl) (Ping timeout: 260 seconds)
[09:46:48] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[09:47:54] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[09:48:50] *** Joins: cthulchu_ (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[09:49:40] *** Quits: cthulchu_ (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Remote host closed the connection)
[09:49:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[09:49:59] *** Joins: cthulchu_ (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[09:50:02] *** Joins: Guest48 (~textual@2001:ee0:4081:6914:a8ec:646c:1d0c:a2da)
[09:50:14] *** Joins: j0hn_mc_clane (~j0hn_mc_c@84.198.240.138)
[09:50:31] *** Joins: Awaru (Awaru@gateway/vpn/airvpn/awaru)
[09:50:50] *** Joins: konfusedagain (~konfuseda@125.99.177.198)
[09:51:15] *** Quits: reset (~reset@user/reset) (Quit: reset)
[09:51:18] *** Quits: hamburger_ (~hamburger@user/hamburger) (Quit: good luck)
[09:51:21] *** Joins: wyclif (~wyclif@user/wyclif)
[09:51:22] *** Quits: mitch (~mitch@38.147.32.54) (Ping timeout: 260 seconds)
[09:51:46] *** Joins: mitch (~mitch@38.147.32.54)
[09:52:16] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 272 seconds)
[09:52:30] *** Joins: manti7 (~manti7@176.10.104.94)
[09:52:36] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[09:52:49] *** Quits: fling (~fling@user/fling) (Remote host closed the connection)
[09:53:18] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[09:53:26] *** Joins: fling (~fling@user/fling)
[09:53:38] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[09:53:53] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[09:54:04] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[09:54:41] *** Quits: vlado (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c) (Ping timeout: 256 seconds)
[09:57:22] *** Joins: hamburger (~hamburger@user/hamburger)
[09:57:27] *** Joins: visl (visl@user/visl)
[09:58:26] *** Quits: humanBird (~humanBird@098-148-004-061.res.spectrum.com) (Ping timeout: 250 seconds)
[09:58:28] *** Joins: humanBird8 (~humanBird@098-148-004-061.res.spectrum.com)
[09:58:57] *** humanBird8 is now known as humanbird
[09:59:04] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 246 seconds)
[10:00:18] *** Joins: Giovanni (~Giovanni@194.169.217.179)
[10:00:21] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Quit: Will return)
[10:00:22] *** Quits: Giovanni (~Giovanni@194.169.217.179) (Read error: Connection reset by peer)
[10:00:28] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 246 seconds)
[10:00:30] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[10:00:55] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[10:02:24] *** Quits: kenwoodfox (~quassel@user/kenwoodfox) (Ping timeout: 272 seconds)
[10:02:37] *** Joins: Daemoen (~Daemoen@2604:a880:2:d0::2164:d001)
[10:03:14] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[10:03:37] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[10:03:38] *** Quits: humanbird (~humanBird@098-148-004-061.res.spectrum.com) (Ping timeout: 250 seconds)
[10:04:59] *** Quits: mihael (~mihael@115.146.176.131) (Quit: Client closed)
[10:05:13] *** Joins: wyclif (~wyclif@user/wyclif)
[10:06:49] *** Joins: admin124 (harrymoren@gateway/vpn/protonvpn/admin123)
[10:06:50] *** Quits: konfusedagain (~konfuseda@125.99.177.198) (Ping timeout: 272 seconds)
[10:07:22] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 240 seconds)
[10:07:38] *** Joins: kenwoodfox (~quassel@user/kenwoodfox)
[10:08:02] *** Quits: seabre (~seabre@user/seabre) (Remote host closed the connection)
[10:09:12] *** Quits: cyrlt^ (~cyrlt@96-91-136-49-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[10:09:22] *** Joins: upsala (~zcb@185.209.196.134)
[10:09:26] *** Joins: seabre (~seabre@user/seabre)
[10:09:55] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[10:10:53] *** Joins: wyclif (~wyclif@user/wyclif)
[10:11:18] *** Joins: humanBird (~humanBird@098-148-004-061.res.spectrum.com)
[10:11:18] *** Joins: jpn (~jpn@user/jpn)
[10:12:00] *** Quits: SuperLag (~akulbe@user/superlag) (Remote host closed the connection)
[10:12:29] *** Joins: parv (~quass@user/parv)
[10:12:47] *** Quits: hexenbane9 (~hexenbane@fixed-187-188-14-118.totalplay.net) (Quit: The Lounge - https://thelounge.chat)
[10:14:41] *** Joins: Tat (~Tat@137-025-218-069.res.spectrum.com)
[10:14:47] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[10:15:12] <tusko> Any clues why this https://bpa.st/GIGA doesn't produce a square wave?
[10:15:49] *** Joins: zlmself (~zlmself@183.134.202.194)
[10:15:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[10:16:17] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[10:16:29] *** Joins: wyclif (~wyclif@user/wyclif)
[10:16:46] <tdsmith> doesn't it? try T=20
[10:16:47] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[10:16:58] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 272 seconds)
[10:18:23] <Repiphany> `square(t, Tp/2)` you have a duty cycle of 200%
[10:18:42] <tdsmith> also that https://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.square.html
[10:18:56] *** Joins: mrwick (~mrwick@user/mrwick)
[10:19:14] <tusko> 4/2 is 1/2
[10:19:28] * tdsmith looks at tusko
[10:19:35] <Repiphany> 4/2 is 2
[10:19:43] <tusko> ohhhh right
[10:19:50] <tusko> lol
[10:19:57] *** Joins: jpodivin (~jpodivin@cgnat44-pool1-236-123.poda.cz)
[10:19:57] *** Quits: Falcon| (andreas@user/falcon/x-0540249) (Ping timeout: 240 seconds)
[10:20:30] *** Quits: jpodivin (~jpodivin@cgnat44-pool1-236-123.poda.cz) (Client Quit)
[10:21:07] *** Joins: konfusedagain (~konfuseda@125.99.177.198)
[10:21:21] *** Joins: Falcon| (andreas@user/falcon/x-0540249)
[10:21:43] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[10:22:29] *** Joins: wyclif (~wyclif@user/wyclif)
[10:22:40] *** Quits: cthulchu_ (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 272 seconds)
[10:22:59] *** Joins: five643333496341 (~five6@8.40.26.83)
[10:23:16] *** Quits: cuanim (~cuanim@user/cuanim) (Quit: Leaving)
[10:24:32] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[10:25:12] *** Quits: five64333349634 (~five6@8.40.111.166) (Ping timeout: 260 seconds)
[10:25:13] *** five643333496341 is now known as five64333349634
[10:26:36] *** Joins: SAMSUNG (~SAMSUNG@user/SAMSUNG)
[10:26:50] <SAMSUNG> I'm a .NET developer
[10:26:53] <SAMSUNG> feel my pain
[10:27:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[10:28:03] *** Joins: wyclif (~wyclif@user/wyclif)
[10:29:03] *** Joins: Giovanni (~Giovanni@194.169.217.179)
[10:31:23] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[10:31:38] *** Quits: visl (visl@user/visl) (Ping timeout: 260 seconds)
[10:32:07] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[10:32:27] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[10:32:35] *** Joins: AlanMD_ (~AlanMD@86.124.29.88)
[10:33:04] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Remote host closed the connection)
[10:33:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[10:33:25] *** Joins: hamburger_ (~hamburger@user/hamburger)
[10:33:38] *** Joins: wyclif (~wyclif@user/wyclif)
[10:33:43] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Ping timeout: 246 seconds)
[10:33:43] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[10:33:49] *** Joins: Administrator__ (~hamburger@user/hamburger)
[10:34:32] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[10:34:46] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:35:37] *** Quits: Administrator__ (~hamburger@user/hamburger) (Remote host closed the connection)
[10:35:39] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[10:36:01] *** Quits: zlmself (~zlmself@183.134.202.194) (Quit: Client closed)
[10:36:10] *** Joins: Administrator__ (~hamburger@user/hamburger)
[10:36:49] *** Quits: hamburger (~hamburger@user/hamburger) (Ping timeout: 250 seconds)
[10:36:54] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:37:41] *** Quits: hamburger_ (~hamburger@user/hamburger) (Ping timeout: 250 seconds)
[10:37:52] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 260 seconds)
[10:38:14] *** Joins: jpodivin (~jpodivin@cgnat44-pool1-236-123.poda.cz)
[10:38:15] *** Joins: nomic (~nomic@185.217.117.233)
[10:38:33] *** Joins: visl (visl@user/visl)
[10:38:38] *** Quits: moog_ (~moog@98.97.82.178) (Ping timeout: 260 seconds)
[10:38:39] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[10:39:04] *** Joins: hamburger (~hamburger@user/hamburger)
[10:39:11] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[10:40:07] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[10:40:22] *** Quits: samuelbernardo (~samuelber@nata01.lip.pt) (Ping timeout: 246 seconds)
[10:40:43] *** Quits: Administrator__ (~hamburger@user/hamburger) (Ping timeout: 250 seconds)
[10:41:45] *** Parts: SAMSUNG (~SAMSUNG@user/SAMSUNG) (Leaving)
[10:41:46] *** Joins: samuelbernardo (~samuelber@nata01.lip.pt)
[10:41:59] *** Joins: hamburger_ (~hamburger@user/hamburger)
[10:42:01] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[10:43:18] *** Quits: kenwoodfox (~quassel@user/kenwoodfox) (Ping timeout: 260 seconds)
[10:45:08] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[10:45:29] *** Quits: hamburger (~hamburger@user/hamburger) (Ping timeout: 250 seconds)
[10:45:39] *** Quits: rvalue (~rvalue@user/rvalue) (Remote host closed the connection)
[10:45:56] *** Joins: Hackerpcs (~user@user/hackerpcs)
[10:46:03] *** Joins: rvalue (~rvalue@user/rvalue)
[10:46:19] *** Quits: Jong (~Jong@184-99-74-148.boid.qwest.net) (Quit: Textual IRC Client: www.textualapp.com)
[10:46:38] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[10:46:48] *** Quits: Guest48 (~textual@2001:ee0:4081:6914:a8ec:646c:1d0c:a2da) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:47:17] *** Joins: kenwoodfox (~quassel@user/kenwoodfox)
[10:47:33] *** Joins: gusto (~Augustus@109.255.100.54)
[10:47:59] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 252 seconds)
[10:48:10] *** Joins: Guest48 (~textual@2001:ee0:4081:6914:2455:a2f0:99fd:7a91)
[10:48:34] *** Joins: ircuz (~ircuz@5.2.79.79)
[10:49:00] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[10:49:28] *** Quits: admin124 (harrymoren@gateway/vpn/protonvpn/admin123) (Ping timeout: 246 seconds)
[10:49:31] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: AdiIRC is updating to v4.2)
[10:49:41] *** Joins: mexen (uid495612@user/mexen)
[10:49:53] *** Joins: Tempesta (~Tempesta@user/tempesta)
[10:49:59] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[10:51:01] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[10:51:51] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Ping timeout: 260 seconds)
[10:51:59] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[10:52:12] *** Quits: vishwin (~brioux@2001:470:1f07:302::1) (Quit: < debdrup> What is this /quit thing?)
[10:52:31] *** Joins: vishwin (~brioux@2001:470:1f07:302::1)
[10:54:40] *** Quits: kickingvegas (~cchoi@c-73-170-198-193.hsd1.ca.comcast.net) (Quit: leaving)
[10:55:39] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[10:55:52] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[10:55:53] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[10:56:49] *** Joins: califax (~califax@user/califx)
[10:56:55] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[10:57:12] *** Joins: brabrax (~brabrax@user/brabrax)
[10:57:44] *** Joins: mncheck (~mncheck@193.224.205.254)
[10:58:20] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[10:58:32] *** Quits: mrwick (~mrwick@user/mrwick) (Quit: leaving)
[10:58:53] *** Joins: mrwick (~mrwick@user/mrwick)
[10:59:06] *** Joins: fling (~fling@user/fling)
[11:00:11] *** Joins: luigibu (~luigi@93.176.153.88)
[11:01:15] *** Joins: Administrator__ (~hamburger@user/hamburger)
[11:02:46] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 246 seconds)
[11:03:28] *** Quits: hamburger_ (~hamburger@user/hamburger) (Ping timeout: 246 seconds)
[11:03:43] *** Joins: Algernon69 (~Algernon6@2a04:cec0:11f4:18d8:b8f2:424f:eeae:6855)
[11:03:46] <tusko> have you tried alcohol
[11:04:11] *** Joins: rendar (~rendar@user/rendar)
[11:04:25] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[11:04:25] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[11:04:33] <ircuz> yes
[11:05:23] <ircuz> been drunk every day since the government prohibited anyone stealing beer from the grocery store without putting on the mask
[11:05:24] *** Joins: califax (~califax@user/califx)
[11:05:46] *** Joins: brabrax (~brabrax@user/brabrax)
[11:06:11] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[11:06:12] *** Quits: brabrax (~brabrax@user/brabrax) (Client Quit)
[11:06:20] *** Quits: Daemoen (~Daemoen@2604:a880:2:d0::2164:d001) (Quit: WeeChat 3.2)
[11:06:34] *** Joins: Daemoen (~Daemoen@2604:a880:2:d0::2164:d001)
[11:07:06] *** Joins: califax (~califax@user/califx)
[11:07:35] *** Joins: brabrax (~brabrax@user/brabrax)
[11:07:40] *** Quits: ttree (~ttree0@c-24-17-16-242.hsd1.wa.comcast.net) (Ping timeout: 246 seconds)
[11:08:13] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:21f9:e025:d842:e2ee) (Ping timeout: 240 seconds)
[11:09:23] *** Joins: kosh (~kosh@user/kosh)
[11:11:14] *** Quits: Giovanni (~Giovanni@194.169.217.179) (Read error: Connection reset by peer)
[11:11:17] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[11:13:01] *** Quits: Administrator__ (~hamburger@user/hamburger) (Ping timeout: 240 seconds)
[11:13:33] *** Joins: Forsaken87 (~quassel@ip-037-201-193-116.um10.pools.vodafone-ip.de)
[11:13:58] *** Quits: NealRame (~a@89.187.163.193) (Ping timeout: 246 seconds)
[11:14:07] *** Joins: MarderIII (~MarderIII@2a02:a45a:72f1:1:6427:619c:e11c:28aa)
[11:14:36] *** Quits: schumaml (~schumaml@dslb-188-104-189-002.188.104.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[11:14:50] *** Quits: Bandicoot_ (~bandicoot@212.58.114.93) (Quit: Leaving)
[11:16:22] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[11:17:05] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[11:17:05] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[11:17:31] *** Quits: subopt (~subopt@2603-8081-2302-459a-ed10-e47e-a3f1-992c.res6.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:17:35] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[11:18:04] *** Joins: brabrax (~brabrax@user/brabrax)
[11:18:06] *** Joins: califax (~califax@user/califx)
[11:19:00] *** Joins: Giovanni (~Giovanni@194.169.217.179)
[11:19:17] *** Joins: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be)
[11:20:52] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[11:21:32] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[11:21:53] *** Joins: subopt (~subopt@2603-8081-2302-459a-ed10-e47e-a3f1-992c.res6.spectrum.com)
[11:22:55] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[11:23:44] *** Quits: emerent (~quassel@p200300cd5743c3a8ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[11:23:45] *** Joins: emerent_ (~quassel@p200300cd5743c3afba27ebfffed28a59.dip0.t-ipconnect.de)
[11:23:45] *** emerent_ is now known as emerent
[11:24:10] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Remote host closed the connection)
[11:25:45] *** Quits: MarderIII (~MarderIII@2a02:a45a:72f1:1:6427:619c:e11c:28aa) (Quit: Leaving)
[11:26:58] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[11:27:37] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 246 seconds)
[11:28:10] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:30:56] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:31:16] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[11:31:36] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[11:32:01] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 245 seconds)
[11:32:23] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:f517:49e6:c7f8:1ff3)
[11:33:09] *** Joins: waveclaw_ (~quassel@ip98-162-237-241.ok.ok.cox.net)
[11:33:46] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[11:33:55] *** Quits: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182) (Ping timeout: 240 seconds)
[11:34:56] *** Quits: waveform (~quassel@waveform.plus.com) (Read error: Connection reset by peer)
[11:35:18] *** Quits: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net) (Ping timeout: 252 seconds)
[11:36:23] *** Parts: agireud (~agireud@user/agireud) ()
[11:37:03] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[11:37:24] *** Joins: shyboy (~shyboy@81-208-114-197.ip.fastwebnet.it)
[11:37:37] *** Joins: han-solo (~han-solo@user/han-solo)
[11:37:50] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[11:38:00] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:38:02] *** Joins: palasso (~palasso@user/palasso)
[11:38:06] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[11:38:09] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[11:38:42] *** Parts: shyboy (~shyboy@81-208-114-197.ip.fastwebnet.it) ()
[11:39:05] *** Joins: waveform (~quassel@waveform.plus.com)
[11:40:27] *** Joins: jpn (~jpn@user/jpn)
[11:41:59] *** Quits: nishant (~nishant@2405:201:f005:c007:8174:c42e:df82:47d1) (Quit: Leaving)
[11:42:25] *** Joins: OP-0 (~pca290122@adsl-d146.84-47-79.t-com.sk)
[11:42:41] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[11:42:53] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[11:43:32] *** Quits: visl (visl@user/visl) (Ping timeout: 252 seconds)
[11:43:33] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Remote host closed the connection)
[11:43:45] *** Joins: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182)
[11:43:57] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[11:44:43] *** Quits: OP-0 (~pca290122@adsl-d146.84-47-79.t-com.sk) (Client Quit)
[11:45:15] *** Joins: visl (visl@user/visl)
[11:45:23] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[11:45:26] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[11:45:31] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 260 seconds)
[11:45:46] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[11:46:19] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[11:46:40] *** Joins: Major_Biscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[11:46:46] *** Quits: Major_Biscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Client Quit)
[11:47:03] *** Joins: Furai (~Furai@furai.pl)
[11:47:07] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[11:51:49] *** Joins: MajorBiscuit (~MajorBisc@c-001-013-026.client.tudelft.eduvpn.nl)
[11:52:08] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[11:52:12] *** Joins: hamburger (~hamburger@user/hamburger)
[11:53:54] *** Joins: hamburger_ (~hamburger@user/hamburger)
[11:54:46] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[11:55:11] *** Joins: wilk_ (~wilk@afse81.neoplus.adsl.tpnet.pl)
[11:55:11] *** Quits: wilk_ (~wilk@afse81.neoplus.adsl.tpnet.pl) (Changing host)
[11:55:11] *** Joins: wilk_ (~wilk@user/wilk)
[11:55:14] *** Joins: soju-test-user (~soju-test@2a01cb040760a5cb0000000000000318.ipv6.abo.wanadoo.fr)
[11:55:37] *** Quits: wilk (~wilk@user/wilk) (Ping timeout: 256 seconds)
[11:55:41] *** wilk_ is now known as wilk
[11:57:58] *** Quits: hamburger (~hamburger@user/hamburger) (Ping timeout: 260 seconds)
[11:58:41] *** Joins: mulugruntz (~mulugrunt@217.117.229.220)
[11:59:35] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Ping timeout: 256 seconds)
[11:59:52] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[12:00:00] <Swayze> https://rednafi.github.io/reflections/pre-allocated-lists-in-python.html
[12:01:26] *** Joins: hamburger (~hamburger@user/hamburger)
[12:01:55] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[12:02:04] *** Quits: Tempesta (~Tempesta@user/tempesta) (Ping timeout: 265 seconds)
[12:02:39] *** Quits: mulugruntz (~mulugrunt@217.117.229.220) (Client Quit)
[12:02:48] *** Joins: Administrator__ (~hamburger@user/hamburger)
[12:02:53] *** Joins: mulugruntz (~mulugrunt@217.117.229.220)
[12:02:59] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[12:03:06] *** Joins: vladoski (~vladoski@host-79-44-230-48.retail.telecomitalia.it)
[12:03:22] *** Joins: fling (~fling@user/fling)
[12:03:35] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Ping timeout: 240 seconds)
[12:03:43] *** mulugruntz is now known as Mulugruntz
[12:03:48] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 260 seconds)
[12:03:59] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[12:04:26] *** Joins: tobybl (~tobybl@dhcp-199-233.inf.ed.ac.uk)
[12:04:33] *** Quits: leshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Read error: Connection reset by peer)
[12:04:45] *** Joins: leshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[12:04:57] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[12:04:58] *** Quits: hamburger_ (~hamburger@user/hamburger) (Ping timeout: 260 seconds)
[12:08:26] *** Quits: fling (~fling@user/fling) (Remote host closed the connection)
[12:08:50] *** Joins: fling (~fling@user/fling)
[12:09:27] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[12:10:01] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[12:10:12] *** Quits: steam (~steam@user/steam) (Remote host closed the connection)
[12:10:56] *** Joins: steam (~steam@user/steam)
[12:11:22] *** Quits: wyclif (~wyclif@user/wyclif) (Quit: leaving)
[12:11:47] *** Joins: wyclif (~wyclif@user/wyclif)
[12:11:51] *** Joins: jpn (~jpn@user/jpn)
[12:11:55] *** Quits: tusko (~yeurt@user/tusko) (Ping timeout: 240 seconds)
[12:12:09] *** Quits: wyclif (~wyclif@user/wyclif) (Client Quit)
[12:12:32] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:8858:5b2:a927:8ef7)
[12:12:56] *** Joins: tusko (~yeurt@user/tusko)
[12:14:31] *** Quits: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053) (Ping timeout: 250 seconds)
[12:14:42] *** Joins: audio (~audio@user/audio)
[12:15:28] *** Quits: Administrator__ (~hamburger@user/hamburger) (Quit: Leaving)
[12:17:02] *** Joins: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053)
[12:17:54] *** Quits: Giovanni (~Giovanni@194.169.217.179) (Read error: Connection reset by peer)
[12:18:28] *** Joins: kts (~kts@103.73.237.175)
[12:19:52] *** Joins: han-solo_ (~han-solo@user/han-solo)
[12:20:12] *** Quits: han-solo (~han-solo@user/han-solo) (Killed (NickServ (GHOST command used by han-solo_)))
[12:20:17] *** han-solo_ is now known as han-solo
[12:21:17] *** Joins: vlado (~vladoski@mail-uk-out.statpro.com)
[12:21:39] *** Joins: Tempesta (~Tempesta@user/tempesta)
[12:22:42] *** Quits: sokan (~sokan@2a02:587:9e1b:1b00:227:eff:fe16:865d) (Quit: Reality.is.a.lie)
[12:23:47] *** Quits: vladoski (~vladoski@host-79-44-230-48.retail.telecomitalia.it) (Ping timeout: 260 seconds)
[12:26:23] *** Quits: kts (~kts@103.73.237.175) (Quit: Konversation terminated!)
[12:26:50] *** Joins: kts (~kts@103.73.237.175)
[12:27:14] *** Quits: kts (~kts@103.73.237.175) (Client Quit)
[12:27:58] *** Joins: kts (~kts@103.73.237.175)
[12:28:15] *** Joins: Jacques (~Jacques@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[12:28:39] *** Quits: humanBird (~humanBird@098-148-004-061.res.spectrum.com) (Quit: Client closed)
[12:29:06] *** Joins: masta`` (Username@user/masta/x-2645138)
[12:30:23] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[12:30:23] *** Joins: schumaml (~schumaml@dslb-178-007-205-026.178.007.pools.vodafone-ip.de)
[12:34:35] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[12:34:49] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 246 seconds)
[12:35:18] *** Quits: j0hn_mc_clane (~j0hn_mc_c@84.198.240.138) (Ping timeout: 260 seconds)
[12:35:24] *** Joins: Giovanni (~Giovanni@194.169.217.179)
[12:35:46] *** Joins: zeenk (~zeenk@2a02:2f04:a313:d600:8d26:ec9f:3ff6:fc94)
[12:35:55] *** Quits: Giovanni (~Giovanni@194.169.217.179) (Read error: Connection reset by peer)
[12:36:28] *** Quits: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Ping timeout: 260 seconds)
[12:37:44] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[12:42:12] *** Quits: ircuz (~ircuz@5.2.79.79) (Quit: Lost terminal)
[12:43:31] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[12:43:55] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[12:44:18] *** Joins: cosimone (~user@93-44-187-176.ip98.fastwebnet.it)
[12:44:25] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[12:44:34] *** Joins: Midjak (~Midjak@82.66.147.146)
[12:44:47] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Remote host closed the connection)
[12:45:40] *** Joins: peteyboy1 (~peteyboy1@199.157.133.37.dynamic.jazztel.es)
[12:46:23] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[12:46:54] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[12:47:12] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[12:47:33] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[12:49:27] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[12:49:38] *** Joins: sbkaya (~svabhavak@ip70-171-199-121.tc.ph.cox.net)
[12:50:53] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[12:51:43] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[12:52:11] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Client Quit)
[12:52:18] *** Joins: emx (~emx@adsl-84-226-68-198.adslplus.ch)
[12:53:03] *** Joins: quhar (~quhar@192.162.148.48)
[12:53:53] *** Joins: MerrinX (~merrinx@ti0028a400-3686.bb.online.no)
[12:54:07] *** Quits: aghast (~aghast@2607:fb91:bd8e:4bdb:2ce3:8a9e:136a:946e) (Ping timeout: 260 seconds)
[12:55:19] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[12:55:29] <Mulugruntz> o/
[12:55:39] *** Joins: amogorkon (~amogorkon@user/amogorkon)
[12:56:05] <Mulugruntz> Anyone here using Codility at the office for new Python recruits?
[12:57:23] *** Joins: iflema (~ian@user/iflema)
[12:58:17] *** Quits: Keira (~k@lulzsec.co.uk) (Ping timeout: 250 seconds)
[12:59:01] <emx> I have a flask application that has endpoints responding to triggered webhooks. The logic allows me to always respond with a 204. In my solution I would os.fork(), let the parent respond with 204 and let the child try to call the logic. Is this a decent solution?
[12:59:55] <deniska> emx: what happens if a child process fails to do whatever it needs to do?
[12:59:55] *** Quits: tusko (~yeurt@user/tusko) (Ping timeout: 240 seconds)
[13:00:19] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[13:00:27] *** Quits: nepeat (~nepeat@79.110.170.59) (Quit: ZNC 1.8.2 - https://znc.in)
[13:00:40] <emx> deniska, that would cause a ticket to be written in the support system.
[13:00:46] *** Joins: jazzy (~jaziz@user/jaziz)
[13:01:04] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[13:02:37] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[13:04:30] <Mulugruntz> emx, https://stackoverflow.com/a/24295616 ?
[13:04:37] *** Joins: Vision-_- (~Vision@023-084-128-214.res.spectrum.com)
[13:05:42] *** Joins: tusko (~yeurt@user/tusko)
[13:06:08] <Mulugruntz> emx, also in their example https://flask-restful.readthedocs.io/en/latest/quickstart.html#full-example see the delete (it has 204)
[13:07:24] *** Quits: Vision (~Vision@023-084-128-214.res.spectrum.com) (Ping timeout: 240 seconds)
[13:09:07] *** Quits: quhar (~quhar@192.162.148.48) (Quit: WeeChat 3.3)
[13:09:09] <gevreeen> how does get one get current time in seconds, be it the epoch time relative to 1970 or system uptime, and are these fixed-width time or time in python-style variable-width int?
[13:10:00] <deniska> gevreeen: I use `time.time()` to get "seconds from whenever for quick and dirty benchmarking purposes"
[13:10:01] <gevreeen> I would prefer seconds relative to system init time, or uptime, but I'm not sure whether the int representation is subject to wrap-around
[13:10:06] <The-Compiler> gevreeen: it sounds like you might be looking for time.monotonic()? https://docs.python.org/3/library/time.html#time.monotonic
[13:10:18] *** Quits: hamburger (~hamburger@user/hamburger) (Ping timeout: 260 seconds)
[13:10:40] <gevreeen> time.time() is a float
[13:10:51] <gevreeen> per https://docs.python.org/3/library/time.html#time.time , let's check time.monotonic
[13:10:54] *** Joins: quhar_ (~quhar@192.162.148.48)
[13:11:02] *** Joins: Giovanni (~Giovanni@194.169.217.179)
[13:11:03] <The-Compiler> what's the problem with it being a float?
[13:11:17] <gevreeen> some hardware might not have hardware floating point
[13:11:19] <The-Compiler> there is monotonic_ns() too
[13:11:49] <gevreeen> neat
[13:11:56] <deniska> chances are hardware without hw floating point you may encounter nowadays won't be happy running python, at least of cpython variety
[13:12:12] <deniska> (or it's a number you are going to feed to another system?)
[13:12:19] <gevreeen> (octeon2 being one)
[13:12:25] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:12:44] *** Quits: Giovanni (~Giovanni@194.169.217.179) (Read error: Connection reset by peer)
[13:13:07] <gevreeen> hmm, but can I convert regular date/time to time.monotonic_ns()?
[13:13:29] <The-Compiler> gevreeen: what's your goal?
[13:13:49] <gevreeen> say, I have a bytes object secret
[13:13:55] <gevreeen> and a bytes object nonce
[13:14:13] <gevreeen> now I need the time component to feed them into a one-way-hash function
[13:14:18] *** Quits: quhar_ (~quhar@192.162.148.48) (Client Quit)
[13:14:33] <gevreeen> I need to know the difference between the time that's sent to me in plain text, and the current time.
[13:14:54] <gevreeen> say, if the difference's more than 2 minutes
[13:15:03] <The-Compiler> there is time.time_ns() too, but it sounds like you might want to use something like the cryptography package rather than rolling your own
[13:15:15] <gevreeen> I would stop since that would be discarded
[13:16:08] *** Quits: no-n (sid524992@smol/hors) ()
[13:16:58] <gevreeen> yeah, time.time_ns looks good
[13:17:32] <gevreeen> both ends just do epoch time
[13:17:46] <gevreeen> and the rounding is a simple one
[13:17:54] *** Joins: KeiraT (~k@lulzsec.co.uk)
[13:19:15] <emx> Mulugruntz, The examples don't show how to fork (or start a python thread that executes the associated logic).
[13:19:32] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[13:19:37] *** Joins: nepeat (~nepeat@79.110.170.58)
[13:20:36] *** Joins: Giovanni (~Giovanni@194.169.217.179)
[13:23:42] *** Quits: hams (~hams@user/hams) (Ping timeout: 260 seconds)
[13:23:44] <jinsun> deniska: and 3.11 won't even build without ieee 754 support https://bugs.python.org/issue46917
[13:24:14] <jinsun> though that is still cpython specific requirement I think
[13:25:00] *** Quits: vimal (~vimal@2a02:a210:9641:8780:c1c8:67bc:35b:91da) (Quit: Leaving)
[13:25:04] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[13:25:24] *** Quits: nepeat (~nepeat@79.110.170.58) (Quit: ZNC 1.8.2 - https://znc.in)
[13:26:36] *** Joins: tuskkk____ (uid18470@id-18470.tinside.irccloud.com)
[13:27:37] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[13:28:29] *** Quits: Giovanni (~Giovanni@194.169.217.179) (Read error: Connection reset by peer)
[13:28:51] *** dcaro_away is now known as dcaro
[13:29:50] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[13:29:54] *** Joins: flower__ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[13:29:55] *** Joins: PPe2 (b9dc64fd@67.205.143.82)
[13:30:05] *** Quits: schemanic[m] (~schemanic@2001:470:69fc:105::1:2450) (Quit: You have been kicked for being idle)
[13:31:11] *** Joins: nepeat (~nepeat@79.110.170.58)
[13:31:23] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.5)
[13:31:34] *** Quits: LogicAside (~LogicAsid@user/logicaside) (Ping timeout: 260 seconds)
[13:31:53] *** Quits: Tat (~Tat@137-025-218-069.res.spectrum.com) (Ping timeout: 260 seconds)
[13:32:16] *** Joins: goepsilongo_ (~goepsilon@2603-7000-ab00-62ed-5552-c541-2a06-6581.res6.spectrum.com)
[13:32:19] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[13:32:30] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[13:33:06] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[13:34:01] *** Joins: LogicAside (~LogicAsid@user/logicaside)
[13:34:06] *** Quits: goepsilongo (~goepsilon@2603-7000-ab00-62ed-0dd9-0564-5ee4-7b35.res6.spectrum.com) (Ping timeout: 245 seconds)
[13:34:45] *** Joins: visl_ (visl@user/visl)
[13:34:48] *** Quits: visl (visl@user/visl) (Ping timeout: 260 seconds)
[13:37:44] *** Quits: saroy (~Sandipan@103.24.86.178) (Ping timeout: 272 seconds)
[13:38:38] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[13:39:23] *** Quits: gitly (~gitly@148.252.132.250) (Ping timeout: 260 seconds)
[13:41:33] *** Joins: gitly (~gitly@85.255.234.42)
[13:42:19] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[13:43:01] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Ping timeout: 240 seconds)
[13:43:07] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[13:44:26] *** Joins: tvm (~tom@ip-89-103-96-164.net.upcbroadband.cz)
[13:44:58] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[13:45:23] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[13:46:21] *** Joins: sudomann (~sudomann@98.219.211.182)
[13:47:52] *** Quits: KeiraT (~k@lulzsec.co.uk) (Ping timeout: 272 seconds)
[13:48:05] *** Joins: KeiraT (~k@lulzsec.co.uk)
[13:48:07] *** Joins: davor_ (~davor@user/davor)
[13:48:23] *** Quits: davor (~davor@user/davor) (Ping timeout: 256 seconds)
[13:49:23] *** Quits: vlado (~vladoski@mail-uk-out.statpro.com) (Ping timeout: 260 seconds)
[13:49:25] *** Joins: vladoski (~vladoski@host-79-44-230-48.retail.telecomitalia.it)
[13:49:32] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[13:50:21] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:50:25] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 246 seconds)
[13:50:59] *** Joins: saroy (~Sandipan@202.142.80.157)
[13:51:02] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:51:12] *** Quits: jpic (~jpic@145.224.76.87) (Remote host closed the connection)
[13:53:47] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[13:54:09] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[13:55:42] *** Joins: MikZyth (~MikZyth@host-243-154-66-217.spbmts.ru)
[13:55:43] *** Quits: PPe2 (b9dc64fd@67.205.143.82) (Quit: The Lounge - https://thelounge.chat)
[13:55:55] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 240 seconds)
[13:56:08] *** Joins: agumonkey (~user@88.163.231.79)
[13:58:30] *** Joins: Yugi (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[13:59:17] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[13:59:50] *** Joins: raxor2k (~raxor2k@78.158.245.2)
[14:00:03] <raxor2k> graingert: what exception type is best to use for sqlalchemy queries?
[14:01:24] *** Quits: Seto_Kaiba (~hunterkll@remote.kisaracorporation.com) (Ping timeout: 240 seconds)
[14:02:58] *** Quits: fling (~fling@user/fling) (Remote host closed the connection)
[14:03:08] *** Joins: vimal (~vimal@2a02:a210:9641:8780:c1c8:67bc:35b:91da)
[14:03:25] *** Joins: fling (~fling@user/fling)
[14:06:27] <graingert[m]> <raxor2k> "graingert: what exception type..." <- What do you mean by that?
[14:06:32] *** Joins: VoidSync (~sync@user/voidsync)
[14:07:04] *** Joins: Giovanni (~Giovanni@194.169.217.179)
[14:07:18] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[14:07:48] *** Quits: Giovanni (~Giovanni@194.169.217.179) (Read error: Connection reset by peer)
[14:09:55] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 256 seconds)
[14:10:25] <rendar> len(s)==0 is the best way to check if a set() is empty?
[14:10:46] <bjs> rendar: if not s: ...
[14:10:53] <bjs> but len(s) == 0 also works.
[14:10:59] <rendar> ok
[14:10:59] <Masklin> but is ugh lee
[14:11:36] <Masklin> if not rendar: print("rendar is empty ;_; ")
[14:11:53] <rendar> if i have a `dict[int, set[int]]` i have to manually check if that set is empty before removing with .pop() the int from the dict, and there is nothing that does this automatically right?
[14:12:35] <bjs> rendar: well no, it's not really clear what "automatically" would mean.  If there is nothing in the set, you can't get any kind of int out of it so what should the "automatic" thing do in that case?
[14:13:01] <rendar> bjs, let me show you with some code
[14:13:08] *** Joins: machaddr (~pi@a79-168-74-18.cpe.netcabo.pt)
[14:13:28] <rendar> https://bpa.st/KAWQ
[14:13:31] <rendar> the remove function
[14:13:38] *** Joins: menace (~someone@ppp-93-104-190-25.dynamic.mnet-online.de)
[14:13:53] *** Quits: emx (~emx@adsl-84-226-68-198.adslplus.ch) (Ping timeout: 260 seconds)
[14:13:53] *** Quits: menace (~someone@ppp-93-104-190-25.dynamic.mnet-online.de) (Changing host)
[14:13:53] *** Joins: menace (~someone@user/menace)
[14:13:55] *** menace is now known as Deknos
[14:14:23] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[14:14:40] <bjs> rendar: `for tag in tags:` what is `tags` ?
[14:14:50] <rendar> a set of strings
[14:15:40] <bjs> rendar: your code is confusing because it's not defined here
[14:15:42] <bjs> okay
[14:16:10] *** Quits: yano (~yano@ircpuzzles/staff/yano) (Remote host closed the connection)
[14:16:23] <bjs> rendar: I'm not sure why you're checking if tags_set is empty but then removing something from self._tags instead
[14:16:40] *** Joins: Spiral-_- (~Vision@023-084-128-214.res.spectrum.com)
[14:16:49] *** Joins: yano (~yano@ircpuzzles/staff/yano)
[14:16:57] <bjs> rendar: especially since you've already asserted `tag` should be in self._tags so presumably you're just assuming it's there
[14:18:24] <rendar> bjs, let me explain the problem, i have some integers identifiers, like unix pid, then i want to map some string to N of those pids, so i have a dict that maps str->set[int] and a reverse map to map int->set[str]
[14:18:28] <bjs> so yeah I'm not sure what this code is doing
[14:18:35] <rendar> when i have to remove a pid, e.g. a process exits
[14:18:35] *** Quits: kts (~kts@103.73.237.175) (Ping timeout: 260 seconds)
[14:18:38] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Ping timeout: 252 seconds)
[14:18:48] <rendar> i have to remove that pid from both dicts, plus the sets
[14:18:58] <rendar> if the sets is empty, i completely remove the thing from the dict
[14:19:17] <bjs> oh so like a two-way multi-dict thing?
[14:19:50] *** Joins: tmm88 (~tmm88@user/tmm88)
[14:20:10] *** Quits: Vision-_- (~Vision@023-084-128-214.res.spectrum.com) (Ping timeout: 272 seconds)
[14:21:13] *** Quits: dre (~dre@2001:8003:c932:c301:55ad:378d:2c99:f745) (Quit: Leaving)
[14:21:41] <rendar> yes
[14:22:17] <raxor2k> graingert: function on the top is what i am currently using(with exception), but i want to remove it if possible: https://bpa.st/25BQ
[14:22:46] *** Joins: sandipan (~Sandipan@103.24.86.178)
[14:23:51] *** Joins: Giovanni (~Giovanni@194.169.217.179)
[14:23:53] *** Quits: Giovanni (~Giovanni@194.169.217.179) (Read error: Connection reset by peer)
[14:24:08] <rendar> bjs: i added comments, so you can get it https://bpa.st/AGSA
[14:24:21] *** Joins: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[14:24:42] <bjs> rendar: maybe it'd be nicer to separate the code out, so that you make an explicit TwoWayMultiDict class and then use that class to implement your string->{tid} thing
[14:25:02] <rendar> yep
[14:25:52] *** Quits: saroy (~Sandipan@202.142.80.157) (Ping timeout: 272 seconds)
[14:28:10] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[14:28:51] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[14:28:52] *** Joins: Vision (~Vision@023-084-128-214.res.spectrum.com)
[14:29:47] *** Quits: tobybl (~tobybl@dhcp-199-233.inf.ed.ac.uk) (Remote host closed the connection)
[14:30:09] *** Quits: TheCat (~TheCat@user/z-cat) (Ping timeout: 250 seconds)
[14:31:01] *** Quits: Spiral-_- (~Vision@023-084-128-214.res.spectrum.com) (Ping timeout: 246 seconds)
[14:32:18] *** Joins: cuanim (~cuanim@31.215.207.104)
[14:32:18] *** Quits: cuanim (~cuanim@31.215.207.104) (Changing host)
[14:32:18] *** Joins: cuanim (~cuanim@user/cuanim)
[14:34:45] *** Joins: quhar (~quhar@192.162.148.48)
[14:35:37] <bjs> rendar: okay well I recommend doing that then, it might be easier to build just that datatype
[14:35:43] <ldericher> can I have `enum.auto()` return the names of the Enum values? As to avoid typos in this? https://bpa.st/RYWQ
[14:35:46] <bjs> with e.g. a pair of defaultdicts and a couple of methods
[14:35:50] <rendar> yes
[14:35:55] *** Quits: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr) (Ping timeout: 240 seconds)
[14:36:07] *** Quits: tmm88 (~tmm88@user/tmm88) (Quit: Client closed)
[14:36:38] *** Quits: vladoski (~vladoski@host-79-44-230-48.retail.telecomitalia.it) (Ping timeout: 260 seconds)
[14:37:01] *** Joins: thiras (~thiras@user/thiras)
[14:37:15] <nedbat> anyone have Mac Monterey, and can check out a bug report for me? https://github.com/nedbat/coveragepy/issues/1349
[14:37:32] *** Joins: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr)
[14:38:01] *** Quits: machaddr (~pi@a79-168-74-18.cpe.netcabo.pt) (Ping timeout: 246 seconds)
[14:39:01] <rendar> bjs, indeed, so my original question can be reduced to: if i have `my_dict.setdefault(X, set()).add(Y)` then i will have to check if that set has len 0, when i remove Y, in order to remove X
[14:39:04] <rendar> and i have to do that manually
[14:39:15] <rendar> otherwise it will leak X->empty_set
[14:41:16] *** Joins: darksun (~darksun@user/darksun)
[14:41:28] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[14:41:31] <bjs> rendar: ah I see, sure you'll have to do that manually but I think another class can help. A kind of AutoCleanupMultiDict class that makes sure it removes things if the set becomes empty. Then you can use two of those to make a TwoWayMultiDict and then use a TwoWayMultiDict in your TaskGroup thing
[14:41:40] <bjs> rendar: it's a little more code but will be easier to undersatnd
[14:41:47] <rendar> yes i agree, thanks
[14:42:01] *** Joins: tomg_ (~tomg@user/tomg)
[14:43:41] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[14:44:43] *** Quits: tomg (~tomg@user/tomg) (Ping timeout: 260 seconds)
[14:46:46] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[14:48:07] *** Joins: tobybl (~tobybl@dhcp-199-233.inf.ed.ac.uk)
[14:48:55] *** Joins: quhar_ (~quhar@192.162.148.48)
[14:49:09] *** Quits: quhar_ (~quhar@192.162.148.48) (Remote host closed the connection)
[14:49:18] *** Joins: Balzy_ (~Balzy@host-87-2-141-60.retail.telecomitalia.it)
[14:49:56] *** Quits: Balzy (~Balzy@host-79-25-209-211.retail.telecomitalia.it) (Ping timeout: 272 seconds)
[14:52:38] *** Joins: jsmooth (~quassel@2600:6c54:7b00:0:409b:360d:ab76:8593)
[14:53:23] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[14:54:16] *** Joins: johtso (~johtso@92.40.175.84.threembb.co.uk)
[14:54:26] *** Quits: johtso (~johtso@92.40.175.84.threembb.co.uk) (Changing host)
[14:54:26] *** Joins: johtso (~johtso@user/johtso)
[14:55:37] *** Quits: jsmooth (~quassel@2600:6c54:7b00:0:409b:360d:ab76:8593) (Changing host)
[14:55:37] *** Joins: jsmooth (~quassel@user/jsmooth)
[14:56:26] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[14:56:46] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[14:57:30] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[14:57:31] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[14:57:37] *** Joins: gproto23_ (~gproto23@user/gproto23)
[14:57:48] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[14:58:38] *** Quits: soju-test-user (~soju-test@2a01cb040760a5cb0000000000000318.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[14:58:48] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 272 seconds)
[14:58:51] *** Joins: soju-test-user (~soju-test@2a01cb040760a5cb0000000000000318.ipv6.abo.wanadoo.fr)
[14:59:37] *** Quits: Guest48 (~textual@2001:ee0:4081:6914:2455:a2f0:99fd:7a91) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:00:24] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[15:01:39] *** Joins: mav`rik (~unknown@ec2-54-171-126-99.eu-west-1.compute.amazonaws.com)
[15:02:43] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[15:03:07] <jsmooth> Is any of this done in a specifically bad way? https://gist.github.com/longcurve/52b9a89d097dc03fbd94f04fc80f4462
[15:03:29] *** Joins: Giovanni (~Giovanni@194.169.217.179)
[15:04:00] <mav`rik> Are there any best-practice docs out there for docker builds? There's a tradeoff between build-time and output-size. I've been trying to separate deploy and test segments via stages, but it'd be nice if someone had already solved this. A lot of the docs I've seen feel really out of date in this area.
[15:04:00] *** Quits: white2 (~mahengrui@user/mahengrui1) (Read error: Connection reset by peer)
[15:04:16] *** Quits: the_lanetly_052 (~the_lanet@194.135.169.76) (Ping timeout: 246 seconds)
[15:04:23] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[15:05:01] *** Joins: white2 (~mahengrui@user/mahengrui1)
[15:05:33] *** Joins: Guest4255 (~fatih@159.146.73.124)
[15:05:38] <nedbat> jsmooth: won't line 11 be a name error?
[15:05:41] *** Quits: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt) (Client Quit)
[15:05:54] <bjs> rendar: something like https://gist.github.com/bensimner/d72e68c476b27ee87c81b1d59b1d3ae7  i just had a go
[15:06:07] *** Joins: Guest48 (~textual@2001:ee0:4081:6914:907f:f137:fb2a:93e5)
[15:06:11] <mav`rik> jsmooth: opening the file in the classvar segment rather than when it's needed directly doesn't feel great, it'll also mean load works, or save works, but not one following the other. I'd suggest using filenames/paths in the classvars and handling open/close in the methods
[15:06:22] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Ping timeout: 260 seconds)
[15:06:34] <bjs> rendar: not tested obviously,  but that's the idea.  if you split things up and build complex data structures out of simpler ones it becomes easier to understand&follow (to me at least) and you can test each of the classes separately to make sure they're doing the right thing to get more confidence
[15:06:56] <nedbat> jsmooth: lines 41 and 48 are also referring to non-existent variables
[15:07:03] *** Quits: fling (~fling@user/fling) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[15:07:04] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 246 seconds)
[15:07:15] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[15:07:17] *** Joins: antaresgades (~antaresga@ieocadiz.cd.ieo.es)
[15:07:20] *** Joins: fling (~fling@user/fling)
[15:07:25] <rendar> bjs, yes that's pretty interesting thanks!
[15:07:46] *** Quits: Giovanni (~Giovanni@194.169.217.179) (Ping timeout: 246 seconds)
[15:07:47] <bjs> rendar: (i'm not really sure a bidirectional dict fits the MutableMapping API,  that's one of those things you'd want to test ...)
[15:08:03] <rendar> bjs, Testing and verification fanatic? wow, awesome! :)
[15:08:48] <bjs> rendar: everything I do I ask "would this make it easier to harder to check if it's correct"
[15:08:48] <bjs> :P
[15:08:54] *** Joins: emx (~emx@mob-194-230-144-52.cgn.sunrise.net)
[15:08:56] <rendar> eheh
[15:09:14] <bjs> and to me, even though this approach is more code to write, is easier to check/understand as it's made of multiple smaller parts that you can check separately
[15:09:48] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[15:10:55] *** Joins: data68 (~data@2a02:908:a67:2ce0:bca8:a631:f494:ca11)
[15:11:29] <rendar> yes i agree
[15:12:51] *** Quits: raxor2k (~raxor2k@78.158.245.2) (Remote host closed the connection)
[15:13:10] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[15:14:13] *** Quits: Guest48 (~textual@2001:ee0:4081:6914:907f:f137:fb2a:93e5) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:14:33] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[15:14:40] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[15:14:41] *** Joins: quhar_ (~quhar@192.162.148.48)
[15:14:52] *** Quits: Guest4255 (~fatih@159.146.73.124) (Quit: Guest4255)
[15:14:56] *** Quits: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt) (Client Quit)
[15:14:58] *** Joins: baffodoro (~raffaem@77-32-119-245.dyn.eolo.it)
[15:15:04] *** Joins: machaddr_ (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[15:15:29] *** Joins: Giovanni (~Giovanni@194.169.217.129)
[15:16:55] *** Quits: quhar (~quhar@192.162.148.48) (Quit: quhar)
[15:16:55] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:cdbe:ac62:894f:fba2) (Ping timeout: 260 seconds)
[15:17:01] *** Quits: quhar_ (~quhar@192.162.148.48) (Client Quit)
[15:17:15] *** Joins: julius3 (~raffaem@45.91.20.212)
[15:17:24] *** Joins: quhar (~quhar@192.162.148.48)
[15:18:03] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[15:18:15] *** Quits: VoidSync (~sync@user/voidsync) ()
[15:19:04] *** Quits: machaddr_ (~machaddr@a79-168-74-18.cpe.netcabo.pt) (Client Quit)
[15:19:23] *** Quits: emx (~emx@mob-194-230-144-52.cgn.sunrise.net) (Ping timeout: 256 seconds)
[15:19:48] *** Quits: Giovanni (~Giovanni@194.169.217.129) (Ping timeout: 260 seconds)
[15:20:23] *** Quits: baffodoro (~raffaem@77-32-119-245.dyn.eolo.it) (Ping timeout: 260 seconds)
[15:20:32] *** Joins: Guest52 (~Guest52@37.26.189.34)
[15:21:29] *** Joins: Giovanni (~Giovanni@194.169.217.129)
[15:21:33] *** Quits: Giovanni (~Giovanni@194.169.217.129) (Read error: Connection reset by peer)
[15:22:05] *** Quits: parv (~quass@user/parv) (Quit: parv)
[15:22:55] *** Joins: Guest48 (~textual@2001:ee0:4081:6914:c562:b79c:738d:725f)
[15:23:41] <newdimension> I'm learning about if statements in regex, and regex101 has this example: (A candy)?(?(1) is true| is false). Is there a way to have the match on TRUE to not include the condition?
[15:23:46] <mav`rik> bjs: Eventually that can be its own problem though (multiple smaller parts). Much like with microservices the problem can then become the complexity existing in the interfaces between things and their interop, rather than the individual parts. (In short, there's a limit to all things)(
[15:23:52] *** Quits: julius3 (~raffaem@45.91.20.212) (Ping timeout: 246 seconds)
[15:25:06] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[15:25:20] *** Quits: Guest48 (~textual@2001:ee0:4081:6914:c562:b79c:738d:725f) (Client Quit)
[15:25:40] *** Joins: Blankspace (~Blankspac@user/blankspace)
[15:26:17] *** Quits: Algernon69 (~Algernon6@2a04:cec0:11f4:18d8:b8f2:424f:eeae:6855) (Ping timeout: 250 seconds)
[15:27:50] <nedbat> newdimension: is that Python regex syntax?
[15:27:51] <mav`rik> newdimension: what are you trying to achieve? Is this part of a replacement, or a match?
[15:28:17] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[15:28:33] <mav`rik> newdimension: It looks similar to https://docs.python.org/3/library/re.html#regular-expression-syntax `(?(id/name)yes-pattern|no-pattern)`
[15:28:33] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[15:28:48] <mav`rik> s/newdimension/nedbat/
[15:28:57] <newdimension> nedbat: This time it is :D
[15:29:15] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 256 seconds)
[15:29:15] *** Quits: flower__ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Quit: Lost terminal)
[15:29:38] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[15:29:56] *** Joins: Payam58 (~Payam@138.106.57.131)
[15:30:00] <nedbat> newdimension: TIL
[15:30:11] <newdimension> I'm trying to write a regex that matches (1) John Smith <john@domain.com> or (2) john@domain.com
[15:30:31] <newdimension> So I'm trying to write an if to see if there is a "<" and match accordingly
[15:30:59] <nedbat> and it's been there since 2.4....
[15:31:12] <mav`rik> newdimension: they show that exact example in the documentation I linked above. I'm guessing though that if it's present you don't want it to be included in the match?
[15:31:24] <nedbat> newdimension: that's precisely the example in the docs:
[15:32:22] *** Quits: schumaml (~schumaml@dslb-178-007-205-026.178.007.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[15:32:44] <rendar> TypeError: unsupported operand type(s) for +=: 'set' and 'set' --- wait, python 3.9 introduced operands to add sets and dicts, why += wasn't introduced too?
[15:32:58] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[15:33:12] <nedbat> it's funny that the example is described as a "poor" email matching pattern :)  It's the one people should be using.
[15:33:25] <nedbat> rendar: perhaps |=
[15:33:34] <rendar> oh, right
[15:33:36] *** Joins: schumaml (~schumaml@dslb-188-104-171-003.188.104.pools.vodafone-ip.de)
[15:33:58] *** Joins: raxor2k (~raxor2k@78.158.245.2)
[15:34:13] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[15:35:05] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[15:35:05] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[15:35:36] <raxor2k> I would be happy if someone could explain the meaning behind the "AssertionError" and how i could handle this? : https://bpa.st/ATSQ
[15:35:47] <raxor2k> is "Except AssertionError" more than enough?
[15:36:23] <mav`rik> newdimension: one mechanism might be something like: (<)?(?P<body>some stuff you care about)(?(1)>|)  then you can do match.group("body"). Another option might be to use positive lookbehind and lookahead matches for <> if you need (for some random reason) to provide the full match object to something else
[15:36:54] <jsmooth> Why would like 11 be name error?
[15:38:05] *** Quits: Blankspace (~Blankspac@user/blankspace) (Quit: Client closed)
[15:38:12] *** Quits: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[15:38:27] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[15:38:28] <mav`rik> jsmooth: "server_version": 0.1  - keys in a dict are strings, not names
[15:38:43] <mav`rik> well, in that particular dict
[15:38:44] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[15:39:00] <nedbat> jsmooth: have you run this code?
[15:39:01] *** Joins: _h4x0r_ (~till@user/till/x-8616149)
[15:39:03] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[15:40:41] <jsmooth> No I have not
[15:40:50] <jsmooth> I was wondering about maybe making a unit test
[15:41:37] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:41:41] *** Joins: vulpes_vulpes (~vulpes_vu@62-64-207-88.dynamic.dial.as9105.com)
[15:41:46] *** Quits: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr) (Remote host closed the connection)
[15:42:00] *** Joins: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr)
[15:42:47] *** Joins: Giovanni (~Giovanni@194.169.217.129)
[15:43:48] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[15:44:27] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[15:45:51] *** Quits: phinxy (~Phinxy@user/phinxy) (Ping timeout: 260 seconds)
[15:50:13] *** Joins: phinxy (~Phinxy@user/phinxy)
[15:51:22] *** Quits: mxp (~mxp@185.16.205.131) (Ping timeout: 272 seconds)
[15:51:29] *** Quits: Giovanni (~Giovanni@194.169.217.129) (Read error: Connection reset by peer)
[15:51:42] *** Quits: agumonkey (~user@88.163.231.79) (Remote host closed the connection)
[15:51:53] <mav`rik> raxor2k: I would strongly suggest against catching AssertionErrors (or even from using bare except). Why are you trying to catch/handle _everything_?
[15:51:58] *** Joins: qlixed (~qlixed@181.44.129.13)
[15:52:10] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[15:52:45] *** Joins: Giovanni (~Giovanni@194.169.217.129)
[15:53:08] *** Joins: mxp (~mxp@185.16.205.131)
[15:53:09] *** Quits: johtso (~johtso@user/johtso) (Quit: Client closed)
[15:55:12] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Remote host closed the connection)
[15:55:31] <nedbat> is this a bug in re?  I have the "same" regex: on one line it works, on multi lines (re.VERBOSE), it gets a parse error:  https://gist.github.com/4526d2960ea50ae991ab547b0747f5c6
[15:55:58] <nedbat> jsmooth: first get the code to compile and run
[15:56:32] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 252 seconds)
[15:57:08] <raxor2k> mav`rik: today is the day i want to improve code to kill all exceptions
[15:57:24] <raxor2k> but i still need to know how to handle that
[15:58:17] <nedbat> raxor2k: i don't know how to fix this in your code, but definitely do not catch assertion errors.  That error means your code is structured incorrectly. Fix the structure.
[15:58:38] <mav`rik> raxor2k: You can't... or at least, it will be very difficult to do so and you probably shouldn't. What about cancellations, system exit, memory errors, keyboard interrupt etc.? Handle errors you're expecting to occur, let the others cause the code to fail and use some form of monitoring to manage them and then fix the _cause_
[15:59:52] <rburton> in cpython, if an object's reference count is dropped to 0, does it get disposed straight away, or does it wait for a GC run?
[16:01:43] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[16:02:20] <raxor2k> mav`rik: this is a websocket server code
[16:02:22] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[16:02:25] <raxor2k> i know why the exception happen
[16:02:40] <raxor2k> it happens because i kick the user from the server rather than the user disconnecting himself
[16:02:54] <nedbat> rburton: it will be reclaimed immediately
[16:03:05] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[16:03:20] *** Quits: v9fk (~v9fk1yn3n@user/v9fk1yn3nu) (Remote host closed the connection)
[16:03:31] <rburton> nedbat: thanks. so much for my theory about a weird bug!
[16:03:49] <nedbat> rburton: but it might be hard to know when the refcount is zero....
[16:04:03] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 260 seconds)
[16:04:11] <rburton> nedbat: created in the function, used, function returns.
[16:04:33] <rburton> presumably the refcount drops on function return as its no longer visible
[16:04:46] <nedbat> rburton: used how? what's the bug?
[16:05:14] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[16:05:39] <rburton> its a sqlite connection.  it appears to be held open read/write longer than the function is running, so i was wondering if the connection was hanging around. there might be internal caching, but its not python itself doing this at least.
[16:05:43] <rburton> i shall continue digging
[16:06:12] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:06:44] <newdimension> mav`rik, nedbat: Looks like this would do the job ((?P<name>[\w\s]*)\s<)?((?P<handle>\w+)@(?P<domain>.*)(?(1)>|))
[16:08:09] <exarkun> newdimension: https://stackoverflow.com/questions/201323/how-can-i-validate-an-email-address-using-a-regular-expression#201378
[16:08:26] *** Joins: ArchDave (~Archdave2@user/ArchDave2)
[16:08:47] <nedbat> newdimension: this is one of those landmines: if you try to be reasonable about email regexes, someone will always pull out the monster
[16:08:53] <nedbat> :)
[16:09:36] <newdimension> In my case I'm just processing received email, so I think I can afford a simple approach. (This is also a hobby project so nothing critical) BUT if there's anything I can improve, I'm all ears to learn
[16:09:51] *** Quits: Guest52 (~Guest52@37.26.189.34) (Quit: Client closed)
[16:10:24] <exarkun> newdimension: from email.utils import parseaddr
[16:11:15] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[16:12:55] *** Quits: Giovanni (~Giovanni@194.169.217.129) (Read error: Connection reset by peer)
[16:13:30] *** Joins: fling (~fling@user/fling)
[16:14:44] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[16:14:48] *** Quits: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be) (Ping timeout: 272 seconds)
[16:14:58] *** Joins: v9fk1yn3nu (~v9fk1yn3n@user/v9fk1yn3nu)
[16:15:59] *** Joins: xkuru (~xkuru@user/xkuru)
[16:16:09] *** Joins: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be)
[16:16:54] *** Quits: ArchDave (~Archdave2@user/ArchDave2) (Quit: leaving)
[16:17:24] *** Joins: ArchDave (~Archdave2@user/ArchDave2)
[16:19:18] <newdimension> exarkun: That is MUCH simpler :D
[16:19:20] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[16:19:58] *** Joins: aghast (~aghast@2607:fb91:bd8e:4bdb:2ce3:8a9e:136a:946e)
[16:20:58] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[16:21:08] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[16:21:34] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[16:21:39] <auctus> is it normal to use multiple processes (from multiprocessing) to write to one output queue, or should the separate processes write toe separate output queues?
[16:22:46] <auctus> damn i thought i was getting somewhere with that idea, that doesnt work either.
[16:23:03] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[16:23:36] <auctus> threading works fine, multiprocessing never exits (although the computation seems to finish)
[16:24:18] *** Quits: gproto23_ (~gproto23@user/gproto23) (Ping timeout: 272 seconds)
[16:24:25] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 246 seconds)
[16:25:56] *** Joins: gproto23 (~gproto23@user/gproto23)
[16:28:11] *** Joins: Gerula (~Gerula@user/gerula)
[16:28:35] *** Quits: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr) (Ping timeout: 240 seconds)
[16:29:36] *** Joins: Vision-_- (~Vision@023-084-128-214.res.spectrum.com)
[16:29:37] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[16:30:04] *** Quits: Deknos (~someone@user/menace) (Quit: Deknos)
[16:30:18] *** Quits: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182) (Remote host closed the connection)
[16:30:38] *** Joins: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr)
[16:30:38] *** Joins: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182)
[16:31:32] *** Quits: MajorBiscuit (~MajorBisc@c-001-013-026.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[16:31:41] *** Joins: MajorBiscuit (~MajorBisc@c-001-013-026.client.tudelft.eduvpn.nl)
[16:32:14] <auctus> hmm, if i q.put() and then immediately in same process q.get(), it finishes; i thought i could just add everything to the queue and then handle it after the two queue-filling processes had completed
[16:33:04] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[16:33:17] *** Quits: Vision (~Vision@023-084-128-214.res.spectrum.com) (Ping timeout: 260 seconds)
[16:33:48] *** Joins: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:a4e5:994e:ce63:7d6e)
[16:33:50] *** Quits: n0cturna1 (~n0cturna1@h155173.upc-h.chello.nl) (Quit: WeeChat 3.4)
[16:35:00] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::beb)
[16:36:26] *** Joins: the_lanetly_052 (~the_lanet@194.135.169.76)
[16:36:29] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:38:29] <deniska> auctus: are you using the multiprocessing.Queue?
[16:39:03] <deniska> probably you need to .join() on this queue?
[16:40:32] *** Quits: phinxy (~Phinxy@user/phinxy) (Ping timeout: 252 seconds)
[16:40:52] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 246 seconds)
[16:41:21] *** Quits: gulzar (~gulzar@49.206.240.149) (Quit: gulzar)
[16:42:34] *** Joins: phinxy (~Phinxy@user/phinxy)
[16:42:55] *** Joins: Algernon91 (~Algernon6@2a04:cec0:11f4:18d8:dc27:fab8:25dc:abe5)
[16:44:37] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:45:40] *** Joins: blei (~blei@user/blei)
[16:46:06] *** Quits: cdman (~dcm@user/dmc/x-4369397) (Remote host closed the connection)
[16:46:23] *** Joins: cdman (~dcm@27.2.218.248)
[16:46:23] *** Quits: cdman (~dcm@27.2.218.248) (Changing host)
[16:46:23] *** Joins: cdman (~dcm@user/dmc/x-4369397)
[16:47:10] *** Quits: Vision-_- (~Vision@023-084-128-214.res.spectrum.com) (Ping timeout: 246 seconds)
[16:47:13] *** Quits: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:a4e5:994e:ce63:7d6e) (Ping timeout: 256 seconds)
[16:47:49] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[16:48:25] *** Joins: bloody (~bloody@user/bloody)
[16:48:33] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[16:48:44] *** Joins: hiroshi_ (~freedom@151.35.46.107)
[16:49:06] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[16:49:19] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[16:50:09] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[16:51:44] *** Quits: gusto (~Augustus@109.255.100.54) (Read error: Connection reset by peer)
[16:52:03] *** Joins: gusto (~Augustus@109.255.100.54)
[16:53:07] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:54:06] *** Joins: hamburger (~hamburger@user/hamburger)
[16:54:43] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:54:51] *** Quits: Payam58 (~Payam@138.106.57.131) (Quit: Client closed)
[16:54:53] *** Joins: merist_ (~merist@87.249.134.20)
[16:57:24] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[16:57:28] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:b949:3ab6:25f0:720c)
[16:57:44] *** Quits: whaley (~whaley@cpe-76-182-165-20.sc.res.rr.com) (Quit: It won't give up.  It wants me dead.  Goddamn this noise inside my head.)
[16:58:13] *** Joins: cdown_ (~cdown@user/cdown)
[16:58:33] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[16:58:37] *** Joins: masta```` (~Username@user/masta/x-2645138)
[16:58:39] *** Joins: max12345 (~max12345@dslb-002-205-074-185.002.205.pools.vodafone-ip.de)
[16:58:58] *** Quits: merist (~merist@87.249.134.10) (Ping timeout: 260 seconds)
[16:59:00] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[16:59:46] *** Quits: masta`` (Username@user/masta/x-2645138) (Ping timeout: 246 seconds)
[16:59:52] *** masta```` is now known as masta``
[17:00:31] <max12345> hello everyone, I'm trying to build something with setuptools, specifically a panda3d game. My problem is that the build process is getting dependencies that I can't explain. They shouldn't be there. I'm relatively certain I don't need them and the sample projects that compile fine don't need them either.
[17:00:46] *** Quits: cdown (~cdown@user/cdown) (Ping timeout: 245 seconds)
[17:00:48] *** cdown_ is now known as cdown
[17:00:58] *** Quits: raxor2k (~raxor2k@78.158.245.2) (Remote host closed the connection)
[17:00:59] <max12345> Is there a way to make setuptools tell why it is getting these dependencies?
[17:02:12] <exarkun> max12345: there are tools like https://pypi.org/project/pip-tree/ that might help
[17:02:21] *** Quits: blei (~blei@user/blei) (Quit: Client closed)
[17:02:30] <grym> and pipdeptree
[17:02:34] *** Quits: chenqisu1 (~chenqisu1@183.217.200.168) (Quit: Leaving)
[17:02:36] <grym> of course, there are two
[17:03:01] <max12345> always two there are. Nice! thanks, I will try them!
[17:04:37] *** Joins: Atque (~Atque@user/atque)
[17:05:12] *** Joins: cdown_ (~cdown@user/cdown)
[17:05:51] *** Joins: Administrator__ (~hamburger@user/hamburger)
[17:06:23] *** Quits: soju-test-user (~soju-test@2a01cb040760a5cb0000000000000318.ipv6.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[17:07:02] *** Quits: quhar (~quhar@192.162.148.48) (Remote host closed the connection)
[17:07:59] *** Quits: cdown (~cdown@user/cdown) (Ping timeout: 260 seconds)
[17:08:00] *** cdown_ is now known as cdown
[17:09:11] *** Quits: hamburger (~hamburger@user/hamburger) (Ping timeout: 250 seconds)
[17:10:37] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 260 seconds)
[17:10:58] *** Quits: gusto (~Augustus@109.255.100.54) (Ping timeout: 246 seconds)
[17:11:37] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[17:11:50] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[17:12:06] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[17:13:42] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[17:14:03] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[17:14:35] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[17:14:44] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:cdbe:ac62:894f:fba2)
[17:15:18] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Read error: Connection reset by peer)
[17:15:48] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[17:16:28] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[17:16:32] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[17:17:40] *** Joins: fling (~fling@user/fling)
[17:19:07] *** Joins: neo1 (~neo@103.144.161.8)
[17:21:38] *** Quits: neo1 (~neo@103.144.161.8) (Client Quit)
[17:24:11] *** Joins: tomeaton17 (~tomeaton1@2a0c:5bc0:40:2e2f:4de9:c1b0:e646:9387)
[17:25:04] *** Joins: mbuf (~Shakthi@136.185.73.48)
[17:25:21] *** Joins: cdown_ (~cdown@user/cdown)
[17:25:55] <mbuf> When I use "pd.read_csv('output.csv', header=[4, 8])" where the values contain decimal, why does pandas convert the floating point values such as 13.0 into 13.0.1?
[17:26:33] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 256 seconds)
[17:26:42] *** Joins: reset (~reset@user/reset)
[17:27:33] *** Joins: revolve (~u0_a227@82-132-234-249.dab.02.net)
[17:27:49] <jinsun> mbuf: do you have 13.0 in the header repeated multiple times?
[17:27:57] *** Joins: frmlof (~frmlof@70.243.238.191)
[17:28:03] *** Quits: cdown (~cdown@user/cdown) (Ping timeout: 260 seconds)
[17:28:13] *** cdown_ is now known as cdown
[17:28:18] <bookworm> my guess is date parsing... but it doesn't do that by default I thought
[17:28:25] *** Quits: rvalue (~rvalue@user/rvalue) (Remote host closed the connection)
[17:28:28] *** Joins: TheCat (~TheCat@user/z-cat)
[17:28:30] <jinsun> it adds a .1 .2 suffix if the column header repeats
[17:28:48] <bookworm> oh, in the header?
[17:29:17] *** Joins: rvalue (~rvalue@user/rvalue)
[17:29:47] *** Joins: gusto (~Augustus@109.255.100.54)
[17:30:04] *** Joins: fattredd (~fattredd@pool-100-16-1-70.bltmmd.fios.verizon.net)
[17:30:34] *** Quits: konfusedagain (~konfuseda@125.99.177.198) (Read error: Connection reset by peer)
[17:30:45] <jinsun> yes, like this https://bpa.st/QJBQ
[17:32:30] *** Joins: konfusedagain (~konfuseda@125.99.177.198)
[17:33:23] *** Joins: subho (~subho@2405:201:9001:a0fc:dd1c:d633:d873:870a)
[17:34:48] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[17:35:07] *** Joins: whaley (~whaley@066-026-111-078.biz.spectrum.com)
[17:36:36] *** Quits: whaley (~whaley@066-026-111-078.biz.spectrum.com) (Client Quit)
[17:36:53] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 260 seconds)
[17:37:02] *** Joins: whaley (~whaley@066-026-111-078.biz.spectrum.com)
[17:38:18] *** Quits: revolve (~u0_a227@82-132-234-249.dab.02.net) (Read error: Connection reset by peer)
[17:38:24] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[17:38:40] *** Quits: otiose (~otiose@156.146.48.156) (Quit: leaving)
[17:39:51] <mbuf> jinsun, I see. I have now switched to using transpose instead.
[17:39:55] <mbuf> jinsun, thanks!
[17:39:58] *** Joins: revolve (~u0_a227@82-132-238-164.dab.02.net)
[17:40:40] *** Joins: rsx (~dummy@ppp-188-174-155-241.dynamic.mnet-online.de)
[17:41:11] *** Joins: Giovanni (~Giovanni@194.169.217.129)
[17:41:25] *** Quits: konfusedagain (~konfuseda@125.99.177.198) (Ping timeout: 240 seconds)
[17:41:32] *** Quits: Administrator__ (~hamburger@user/hamburger) (Ping timeout: 260 seconds)
[17:42:25] *** Quits: subho (~subho@2405:201:9001:a0fc:dd1c:d633:d873:870a) (Remote host closed the connection)
[17:43:09] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[17:43:26] *** Joins: Guest52 (~Guest52@37.26.189.34)
[17:45:17] *** Joins: Naan (~Naan@user/naan)
[17:46:44] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[17:47:28] *** Joins: jokoon (~eio@2a01:e0a:542:e160:119b:2153:38d4:bf30)
[17:48:20] <MootPoot> what angles do I have to get into web dev with python?
[17:48:28] *** Joins: Tempesta (~Tempesta@user/tempesta)
[17:48:35] <MootPoot> preferable without having to do JS
[17:48:37] <MootPoot> I don't like JS
[17:48:41] <exarkun> Acute, obtuse, and right.
[17:48:42] <MootPoot> it makes me feel icky
[17:48:45] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[17:48:57] <exarkun> Honestly, mostly obtuse.
[17:49:02] <deniska> MootPoot: you can specialize on backend stuff
[17:49:06] *** Joins: davidw (~davidw@h72-35-148-100.bendor.broadband.dynamic.tds.net)
[17:49:30] <deniska> MootPoot: or, if you don't mind html&css, you can use a backend template rendering like what django provides
[17:49:41] *** Joins: konfusedagain (~konfuseda@125.99.177.198)
[17:49:56] <MootPoot> name a yeah, I've used a little of Django
[17:49:58] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[17:50:05] <MootPoot> but for the most part I'd like to stick with back end
[17:50:27] *** Quits: belphegor666 (~satan@user/belphegor666) (Ping timeout: 260 seconds)
[17:50:28] <deniska> https://htmx.org/ and there's this nice little library which allows you to add some interactivity to the page without going into JS fronend framework rabbit hole
[17:50:30] <grym> MootPoot: fastAPI is nice
[17:50:38] <MootPoot> but I don't know how to - what packages / skills /frameworks are python and backend
[17:50:44] <MootPoot> ah, so API work in python
[17:50:50] *** Joins: steven-esser (uid548675@id-548675.tinside.irccloud.com)
[17:51:02] <deniska> MootPoot: fastapi is popular, then sqlalchemy often goes into the mix for accessing the database
[17:51:31] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[17:51:36] <NoImNotNineVolt> hm. fastapi you say?
[17:51:42] <NoImNotNineVolt> i just use flask.
[17:51:48] <jokoon> I have to make a confession, but I have found that I can manage to do basic "SQL-like" stuff with python, so instead of tapping into a sqlite database, I use dict, set, lambdas etc. I save stuff in mildly large json files, and it's often somehow enough and fast enough. I'm already planning to at least use sqlite at some point, but it's made a bit difficult because of the GIL. For now saving/loading data in json seems good enough.
[17:51:48] *** Quits: julia (~quassel@user/julia) (Ping timeout: 240 seconds)
[17:51:50] * NoImNotNineVolt reads
[17:51:51] <deniska> fastapi is fairly similar to flask
[17:52:03] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[17:52:16] <deniska> if you hide imports, most python microframeworks are hard to distinguish
[17:52:19] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[17:52:27] <exarkun> jokoon: What if the filesystem doesn't sync your metadata after you rename your json file and all your data is lost?
[17:52:27] *** Joins: belphegor666 (~satan@ip-046-223-003-068.um13.pools.vodafone-ip.de)
[17:52:39] <jokoon> (I use a basic flask application)
[17:52:58] <deniska> jokoon: writing to files atomically is somewhat hard, and sqlite takes care of that
[17:53:01] <jokoon> exarkun, I don't really care about metadata
[17:53:05] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[17:53:06] <deniska> jokoon: but yeah, it's fine
[17:53:06] <exarkun> jokoon: You miss the point
[17:53:15] <exarkun> jokoon: In this case, the metadata is "your data exists at all"
[17:53:19] *** Quits: konfusedagain (~konfuseda@125.99.177.198) (Read error: Connection reset by peer)
[17:53:25] *** Quits: steven-esser (uid548675@id-548675.tinside.irccloud.com) ()
[17:53:28] <exarkun> jokoon: If you don't care about losing the data, it's fine.
[17:53:47] *** Quits: Giovanni (~Giovanni@194.169.217.129) (Read error: Connection reset by peer)
[17:53:59] <jokoon> The data are image files, an 95% of them are identified by their file names
[17:54:18] <jokoon> I'm no really confident about storing those in a sqlite file, but it should do the job
[17:54:30] <exarkun> sqlite3 handles large binary blobs fine
[17:54:34] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[17:54:36] *** Quits: Yugi (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 240 seconds)
[17:54:40] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[17:54:42] *** Joins: vlado (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c)
[17:54:55] <exarkun> Backing up slightly, why are you confessing this to us?  I assumed it was to learn the problems with your current approach.
[17:55:19] <jokoon> Im going on a "minimal" software approach, so it's fine for what I do
[17:55:28] *** Joins: konfusedagain (~konfuseda@125.99.177.198)
[17:55:30] *** Quits: gusto (~Augustus@109.255.100.54) (Read error: Connection reset by peer)
[17:55:48] <grym> NoImNotNineVolt: fastAPI is flask-style, but brings pydantic validators and optional async for free.  basically you can throw 422s on malformed incoming data "for free", there's a lot less boilerplate
[17:56:01] <exarkun> jokoon: Do you plan to answer my question?  If not that's fine, just want to know.
[17:56:12] <deniska> I can throw 500s on malformed incoming data with ease in any framework :D
[17:56:14] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[17:56:16] *** Joins: jianwu (~jianwu@softbank126088036030.bbtec.net)
[17:56:16] <NoImNotNineVolt> sounds like bells and whistles :P
[17:56:31] <grym> NoImNotNineVolt: oh and free swagger
[17:56:36] <grym> they're nice bells!
[17:56:50] <jokoon> Because database are often praised like they're a necessary religion, but they seem necessary when the data begins to be big, which is not often the case. Having a minimal approach allows the software to be easier to write and maintain
[17:56:51] <grym> "caller you got the following four fields wrong, and here's what they _can_ be" is super duper handy
[17:57:08] <exarkun> jokoon: Okay.  I'm assuming not now.  Good luck.
[17:57:12] *** Quits: white2 (~mahengrui@user/mahengrui1) (Read error: Connection reset by peer)
[17:57:15] <grym> jokoon: "big", like web browser profiles...
[17:57:41] *** Joins: white2 (~mahengrui@user/mahengrui1)
[17:57:44] *** Joins: hamburger (~hamburger@user/hamburger)
[17:58:07] <NoImNotNineVolt> grym: it's nice in theory, but it's extra work to define validity, etc
[17:58:13] <deniska> jokoon: there're certain benefits to sqlite compared to json files, one of which is that it gracefully takes care of multiple writers to the same file
[17:58:22] <grym> NoImNotNineVolt: that's called "defining your API", though, so... you're gonna do it anyway
[17:58:32] <NoImNotNineVolt> grym: lol, sure i am :P
[17:58:44] <grym> NoImNotNineVolt: i have found it to be nice in practice, too, across a bunch of deploys now
[17:58:46] <mav`rik> jokoon: databases vary in size and scope, sqlite can be used for anything from system local configuration, through to multi-gigabyte data stores. They _are_ a necessary religion in many cases (or at least understanding how to use them)
[17:59:05] <NoImNotNineVolt> grym: i'll be "defining my API" right around the time i "create documentation" :P
[17:59:16] <grym> NoImNotNineVolt: right, you get /docs too!
[17:59:16] <jokoon> I can still easily integrate sqlite though, but avoiding sql makes things a bit simpler. My json file is versionned, so it's somehow ok.
[17:59:20] <deniska> documentation? What is it, 80s?
[17:59:25] <grym> and /redoc, shiny shiny
[18:00:58] <deniska> jokoon: speaking of dicts and not wanting to write sql, there's this… thing: https://dataset.readthedocs.io/en/latest/
[18:01:35] <deniska> nosql on top of your favorite sqlalchemy supported database :)
[18:01:38] <jokoon> I don't really need performance either... What I mean is that I was able to deliver a small bit of software, without using sql, because it would have taken more time, while it did not feel it was necessary in the short term
[18:02:19] <jokoon> deniska, oh thanks, that looks very very useful
[18:02:21] <Guest52> Hello, I want to open a file then if I find a line that contain a string like dbutils.widgets.dropdown\("environment"' then delete that line and replace it with a new a string, I have tried with re.sub but it doesnt delete my line and replace.line cant find my line because it need a regular expression to be found
[18:02:42] *** Joins: PublicWiFi (~PublicWiF@user/publicwifi)
[18:03:01] <deniska> jokoon: https://dataset.readthedocs.io/en/latest/quickstart.html#limitations-of-dataset keep in mind the disclaimer
[18:03:20] *** Parts: mbuf (~Shakthi@136.185.73.48) (Leaving)
[18:03:31] *** Quits: elb0w (~elb0w@langhamips11.l.subnet.rcn.com) (Ping timeout: 260 seconds)
[18:03:53] <grym> dataset is <3, when your data fits its scope (no foreign keys, basically)
[18:04:15] <grym> oh, i've been beaten to it :D
[18:04:17] <mav`rik> Guest52: Two thoughts. First, strings are immutable, so something like .replace will result in a new string being generated (likewise re.sub). Second, the file will need writing back to with the new content.
[18:04:25] <jokoon> indeed, but foreign key seems to be sophisticated machinery, without a lot of usefulness, as long as it can be accomplished directly in code
[18:04:29] *** Joins: julia (~quassel@user/julia)
[18:05:04] <mav`rik> jokoon: Okay, no. It has a HUGE amount of usefulness, consistency between tables is massively important.
[18:05:34] <jokoon> but it has the advantage of sql while still usable without having to write queries
[18:05:48] <deniska> joins ♥
[18:05:58] *** Joins: gusto (~Augustus@109.255.100.54)
[18:06:18] <jokoon> mav`rik, sure it is, when data is complex, but it's often important to avoid complexity when possible
[18:06:43] <mav`rik> deniska: I joined a company that didn't believe in using the functionality DB offer. All the columns with what would otherwise be FK relationships were declared NOT NULL DEFAULT 0... consistency, what's that?
[18:06:49] <jokoon> it's often bad to pursue complexity, and a lot of programmers like complexity for no good reason
[18:07:25] <grym> complexity will come to you all by itself; where you stuff it is up to you
[18:07:39] <grym> i would prefer to not stuff it in `NOT NULL DEFAULT 0`
[18:08:06] <deniska> mav`rik: I'm in this picture and it's fine :D
[18:08:15] <mav`rik> jokoon: I guess we have different definitions of what "complex" means here. To me, any time you have a relationship between two sets of data, you need foreign keys or you risk orphans or hanging references. It'd be like having two objects where one had a pointer to another, and you freed the memory of one and the other was left hanging
[18:08:42] <deniska> mav`rik: except instead of a single special 0 we declared every id below 100 special :D
[18:09:19] *** Joins: Pickchea (~private@user/pickchea)
[18:09:22] <jokoon> hanging references are bad in C++ or C, but I don't care about orphan data, generally it's the code that was badly written or the data needs to be fixed
[18:09:26] <mav`rik> deniska: We had some like that too. Tiny internal screams follow...
[18:09:57] <mav`rik> jokoon: Yes, the difference here is that a FK relationship would have made that obvious, whereas without you're just left with shitty data.
[18:11:03] *** Quits: max12345 (~max12345@dslb-002-205-074-185.002.205.pools.vodafone-ip.de) (Quit: Lost terminal)
[18:11:41] <deniska> mav`rik: bonus points if referenced IDs live in a completely different dbms
[18:14:45] *** Joins: Giovanni (~Giovanni@194.169.217.129)
[18:15:04] *** Joins: zer0bitz (~zer0bitz@2001:2003:f750:a200:88a0:fb04:2d2:c434)
[18:15:32] *** Quits: Giovanni (~Giovanni@194.169.217.129) (Read error: Connection reset by peer)
[18:16:17] *** Quits: hiroshi_ (~freedom@151.35.46.107) (Quit: hiroshi_)
[18:16:23] *** Joins: tecdroid (~tecdroid@2a04:d480:0:1::3)
[18:16:47] *** Quits: Algernon91 (~Algernon6@2a04:cec0:11f4:18d8:dc27:fab8:25dc:abe5) (Quit: Leaving)
[18:17:00] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[18:17:16] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[18:17:22] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[18:18:28] *** Joins: audio (~audio@user/audio)
[18:20:13] *** Quits: MikZyth (~MikZyth@host-243-154-66-217.spbmts.ru) (Quit: WeeChat 3.4.1)
[18:20:23] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[18:21:08] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[18:22:28] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[18:22:31] <Guest52> mav`rik yes I am okay with writing the new file, here is my code so far https://bpa.st/XBXA so I have to found any string that contain dbutils.widgets.dropdown\("environment" and I have to delete the whole line before replacing it
[18:23:20] *** Quits: v9fk1yn3nu (~v9fk1yn3n@user/v9fk1yn3nu) (Remote host closed the connection)
[18:23:46] <hamburger> eh wala wala
[18:23:49] <hamburger> where i am too
[18:23:55] <hamburger> am i in burger king
[18:24:24] *** Quits: PublicWiFi (~PublicWiF@user/publicwifi) (Quit: WeeChat 3.5)
[18:24:35] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[18:25:08] <TML> Guest52: Seems like you're trying to rewrite sed in python :)
[18:25:42] *** Joins: PublicWiFi (~PublicWiF@user/publicwifi)
[18:25:44] *** Quits: hamburger (~hamburger@user/hamburger) (Quit: Leaving)
[18:25:54] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 272 seconds)
[18:25:58] <mav`rik> deniska: Do... do I _work_ with you? :|
[18:26:16] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[18:26:36] <rigid> what could be the reason for getting "uwsgi: invalid option -- 'H'" ? it's mentioned in the docs to set virtualenv path but not listed in "uwsgi --help"
[18:27:08] <TML> rigid: https://github.com/unbit/uwsgi/issues/1957 maybe?
[18:27:39] *** Joins: Vaevictus (~vae@user/vaevictus)
[18:27:48] *** Parts: Vaevictus (~vae@user/vaevictus) ()
[18:27:52] <rigid> TML: wow thanks... that must be it
[18:28:01] <jokoon> It's so amazing to be able to use -= |= &= on sets in python
[18:28:18] <SnoopJ> rigid, if you're on Debian/Ubuntu I believe the package is uwsgi-plugin-python3 (it is on Ubuntu, anyway)
[18:28:21] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[18:28:30] <SnoopJ> assuming you installed it with your system package manager, that is
[18:28:33] <jokoon> in my head it sounds simpler than joins, but that's only my opinion
[18:28:33] *** Quits: whaley (~whaley@066-026-111-078.biz.spectrum.com) (Quit: It won't give up.  It wants me dead.  Goddamn this noise inside my head.)
[18:28:40] <rigid> jokoon: it's amazing you can create your own stuff defining what |= etc does :)
[18:29:02] <jokoon> well Im okay with the default definition
[18:29:12] <rigid> SnoopJ: i'm on gentoo and I have installed the python plugin. I have to track down why it's not loaded
[18:29:22] <mav`rik> jokoon: Until you later realise you need to go back to the documentation to work out what each of those symbols mean, when instead you could use method names which are self-explanatory
[18:29:42] <jokoon> | and & are pretty standard
[18:30:02] <jokoon> set1 - set2 is also pretty simple if you did a bit of math
[18:30:08] <rigid> yeah, += and -= aswell
[18:30:22] <jokoon> += works on lists, not sets
[18:30:27] <jokoon> but =- does
[18:30:31] <jokoon> -=*
[18:30:33] *** Quits: nickodd (~nickodd@user/nickodd) (Ping timeout: 252 seconds)
[18:31:04] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 260 seconds)
[18:31:09] *** Quits: antaresgades (~antaresga@ieocadiz.cd.ieo.es) (Quit: Client closed)
[18:31:36] <TML> mav`rik: I'm not entirely convinced that "b.difference(a)" is that much more "self-explanatory" than "b - a"
[18:33:09] <mickey> i have a csv file with headers id, vector and all rows looking like 1,"[2,3,4]". when i use pd.read_csv(), df["vector"] is "'[2,3,4]'
[18:33:23] <mav`rik> TML: Sure, some are more understandable than others, but what about > vs. >=, or ^, when instead you could be explicit about it.
[18:33:27] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[18:33:41] <mickey> sorry it was cut: i have a csv file with headers id, vector and all rows looking like 1,"[2,3,4]". when i use pd.read_csv(), df["vector"] is "'[2,3,4]'" but i need to read it as a list and not as a quoted string
[18:34:03] <mickey> i cant save it without the quotation marks to begin with because it has commas inside as well
[18:34:03] *** Joins: Giovanni (~Giovanni@194.169.217.129)
[18:34:07] *** Parts: jokoon (~eio@2a01:e0a:542:e160:119b:2153:38d4:bf30) (Leaving)
[18:34:09] <grym> mickey: pandas is not a good choice for >2d data.  (then again, neither is csv...)
[18:34:14] *** Quits: Giovanni (~Giovanni@194.169.217.129) (Read error: Connection reset by peer)
[18:34:19] *** Joins: han-solo (~han-solo@user/han-solo)
[18:34:22] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[18:34:39] <mickey> grym any other basic alternatives?
[18:34:58] <mickey> i have to be able to easily save to it, append to it, and read from it
[18:35:00] <TML> mav`rik: Hmm - so your argument is that "b.__ge__(a)" is more "explicit" and "self-explanatory" than "b >= a"?
[18:35:06] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[18:35:18] <grym> mickey: walk the CSV with csv.DictReader and make a data structure of your choice out of that
[18:35:29] <mickey> and i expect it to grow quite large. it's going to have few hundreds of thousands of vectors with 1024 dimensions :q
[18:35:55] <grym> mickey: then you _really_ don't want pandas
[18:36:10] *** Joins: Lionyx (~Lionyx@179.232.62.41)
[18:36:15] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-b9ff-93f8-06fd-9be4.res6.spectrum.com)
[18:36:17] <TML> mav`rik: Because I couldn't agree with that position - I had to go look up the name of __ge__ just now, I certainly don't carry that information in my head all the time.
[18:36:28] <mav`rik> TML: no, my argument is that b.issuperset(a) might be better than b > a, or that b.symmetric_difference(a) is better than b ^ a. But I guess it depends if your code has an audience of many, and what their experience levels are.
[18:36:31] *** Quits: data68 (~data@2a02:908:a67:2ce0:bca8:a631:f494:ca11) (Ping timeout: 250 seconds)
[18:36:32] <mickey> grym sqlite?
[18:36:48] *** Joins: squirrel (uid529456@user/squirrel)
[18:38:37] *** Quits: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt) (Ping timeout: 240 seconds)
[18:38:53] <TML> mav`rik: I can agree on issuperset but not on symmetric_difference - but that's probably just my lack of actual maths showing through. I don't know what a "symmetric difference" is off the top of my head, but the XOR operator is something I've been dealing with for decades :)
[18:39:10] <mickey> grm maybe numpy.savez?
[18:39:51] *** Quits: Lionyx (~Lionyx@179.232.62.41) (Client Quit)
[18:40:20] <grym> mickey: numpy's a good choice, depending on what you want to do to it later
[18:40:26] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (Ping timeout: 252 seconds)
[18:40:32] <mickey> read it for classification models
[18:40:38] <mav`rik> TML: or it's coming at the same problem from different directions. A lot of people can look up what "symmetric_difference" means on google, but they can't meaningfully/easily get answers for ^ without knowing where to look. A lot of people these days may not have dealt with bitwise arithmetic either.
[18:40:46] <grym> mickey: numpy will work great
[18:40:51] <mav`rik> TML: different audiences, I guess
[18:40:51] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 260 seconds)
[18:40:55] <mickey> grym savez or something else?
[18:41:11] <grym> savez is nice
[18:41:19] <grym> you get a dict, basically; that's usually what you want
[18:41:20] <mickey> i'll read about it then. thank you
[18:41:42] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[18:41:50] *** Joins: ice9 (~ice9@user/ice9)
[18:42:01] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[18:42:18] *** Joins: stasp (~chatzilla@37.30.100.59.nat.umts.dynamic.t-mobile.pl)
[18:44:00] *** Joins: SaltHilStroller_ (~SaltHillS@206.223.160.26)
[18:45:15] *** Parts: jsmooth (~quassel@user/jsmooth) ()
[18:47:16] *** Joins: jpn (~jpn@user/jpn)
[18:48:55] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[18:49:57] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[18:50:20] <squirrel> i've got a method like this, `def wait_until(booleanish_function, at_most_seconds=30): ...; if booleanish_function(): return; ...`. is there a better name for this than `booleanish`?
[18:50:50] *** Joins: Giovanni (~Giovanni@194.169.217.129)
[18:51:07] *** Quits: Giovanni (~Giovanni@194.169.217.129) (Read error: Connection reset by peer)
[18:51:07] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[18:51:18] <han-solo> `predicate` ?
[18:51:42] <han-solo> without much context
[18:52:42] <squirrel> i only know predicates in the context of filtering stuff
[18:54:22] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[18:54:58] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Quit: azidhaka)
[18:55:05] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[18:55:11] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[18:55:40] <MacGyver> Python uses the term truthiness.
[18:55:41] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[18:55:54] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[18:56:14] <MacGyver> To describe what objects collapse to when evaluated as "booleanish"; as in, a non-empty list is truthy; an empty list is falsy.
[18:56:38] <MacGyver> Is that what you're looking for?
[18:56:39] *** Joins: Tat (~Tat@137-025-218-069.res.spectrum.com)
[18:58:14] <jinsun> if it is just a function that returns bool then I'd just write "func"
[18:58:25] <jinsun> and annotate as Callable[..., bool]
[19:00:32] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[19:02:14] *** Joins: leitz (~LeamHall@072-182-158-027.res.spectrum.com)
[19:03:14] *** Joins: Payam38 (~Payam@138.106.57.131)
[19:03:19] <squirrel> i mean, it will happily accept a function that returns `1` or `[1]`. both of these is truthy but neither of these is strictly speaking boolean, and it will also accept `[]` which i falsy so i can't just say `truthy_function` i guess?
[19:03:40] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Remote host closed the connection)
[19:04:17] *** Quits: Tempesta (~Tempesta@user/tempesta) (Read error: Connection reset by peer)
[19:04:57] <MacGyver> When using it to base a decision on, the technical term is a predicate.
[19:05:25] <MacGyver> Which then usually ends up being a truthy / falsy return value.
[19:06:13] *** Joins: Atque (~Atque@user/atque)
[19:06:36] *** Joins: jinsun__ (~jinsun@user/jinsun)
[19:07:10] *** Joins: Giovanni (~Giovanni@194.169.217.129)
[19:07:28] *** Quits: jinsun (~jinsun@user/jinsun) (Ping timeout: 260 seconds)
[19:08:04] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[19:08:24] *** Joins: Tatarize (~Tat@137-025-218-069.res.spectrum.com)
[19:08:49] *** Quits: jinsun__ (~jinsun@user/jinsun) (Client Quit)
[19:08:55] *** Joins: kts (~kts@103.73.237.175)
[19:09:09] *** Joins: jinsun (~jinsun@user/jinsun)
[19:09:10] *** Joins: iomari891 (~iomari891@105.112.138.38)
[19:09:15] *** Joins: wedwards (~wedwards@46.44.154.209)
[19:09:16] *** Quits: Tat (~Tat@137-025-218-069.res.spectrum.com) (Ping timeout: 246 seconds)
[19:09:24] *** Joins: Optimus (~risto@87.227.227.147)
[19:09:50] <squirrel> this function is used like `wait_until(main_window.all_dialogs_closed)`, having "predicate" there would be a bit confusing don't you think?
[19:10:16] <squirrel> i guess i should just name it `condition` and call it a day
[19:10:17] *** Joins: cthulchu_ (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[19:11:33] <squirrel> ugh, i spend too much time on naming things
[19:11:48] <newdimension> Is email.message_from_bytes the correct way transform an email into EmailMessage opposed to a Message?
[19:11:53] <MacGyver> squirrel: No, I don't think it would be confusing, but calling it "condition" is valid too.
[19:12:03] <wedwards> I have three packages. Package 1 has the A class. All packages (1, 2 and 3) need a stub version of the A class from package 1 for their tests. Is there a convention on where to store those stub classes in package 1? The stub classes can't be in the tests, because those aren't shipped with package 1, and therefore not accessible for packages 2 and 3.
[19:12:09] <newdimension> Because all the methods I'm finding are giving me a Message and EmailMessage seems to have more relevant methods
[19:12:13] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[19:12:48] <mickey> why is this? ValueError: operands could not be broadcast together with shapes (0,) (10,)
[19:12:57] <mickey> a=[]; b=[1,2,3]; a+=b ?
[19:13:15] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[19:13:24] *** Quits: Tatarize (~Tat@137-025-218-069.res.spectrum.com) (Ping timeout: 272 seconds)
[19:13:32] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:b949:3ab6:25f0:720c) (Remote host closed the connection)
[19:13:42] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[19:14:01] <squirrel> MacGyver: *i* would get confused by seeing `predicate` out of context of filtering things. a predicate to me is a function that evaluates objects and gives me a yay or nay answer, and this is not what's happening here
[19:14:03] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:b949:3ab6:25f0:720c)
[19:14:07] *** Joins: gproto23 (~gproto23@user/gproto23)
[19:14:08] *** Quits: Anarchic (~Anarchic@getlegit.co.uk) (Quit: ZNC - http://znc.in)
[19:14:20] *** Quits: vulpes_vulpes (~vulpes_vu@62-64-207-88.dynamic.dial.as9105.com) (Remote host closed the connection)
[19:14:25] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[19:14:25] <SnoopJ> mickey, because 0 != 10 and neither of those is 1. See the numpy documentation that explains broadcasting: https://numpy.org/devdocs/user/basics.broadcasting.html#general-broadcasting-rules
[19:14:25] <grym> mickey: because numpy doesn't know how to stuff those together, and requires rectangular arrays
[19:14:30] *** Quits: mrwick (~mrwick@user/mrwick) (Quit: leaving)
[19:14:49] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (Remote host closed the connection)
[19:15:15] <MacGyver> squirrel: You asked what I thought, and I don't think it would be confusing.
[19:15:20] <newdimension> exarkun: You seemed familiar with the email package. Do you know what method I'm supposed to use to load a message I have saved as a file?
[19:15:20] *** Joins: vladoski (~vladoski@host-79-44-230-48.retail.telecomitalia.it)
[19:15:42] <MacGyver> squirrel: But you do, so call it condition.
[19:15:46] *** Joins: Anarchic (~Anarchic@getlegit.co.uk)
[19:15:50] <MacGyver> It's fine.
[19:16:31] *** Quits: Anarchic (~Anarchic@getlegit.co.uk) (Client Quit)
[19:16:59] *** Quits: Wanderer (~wanderer@user/wanderer) (Quit: goodbye)
[19:16:59] *** Quits: eldritch (~eldritch@user/eldritch) (Quit: bye)
[19:16:59] *** Quits: glider (~glider@user/glider) (Quit: ZNC - https://znc.in)
[19:17:11] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[19:17:58] *** Joins: Anarchic (~Anarchic@getlegit.co.uk)
[19:18:10] *** Joins: sudomann (~sudomann@98.219.211.182)
[19:18:23] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:cdbe:ac62:894f:fba2) (Ping timeout: 260 seconds)
[19:18:27] <squirrel> (aren't predicates supposed to be pure functions?)
[19:18:42] *** Joins: EgonX_ (~EgonX@38.66.76.50)
[19:18:43] *** Quits: Giovanni (~Giovanni@194.169.217.129) (Ping timeout: 246 seconds)
[19:19:07] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[19:19:28] <MacGyver> They are in some contexts.
[19:19:28] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[19:19:52] *** Joins: gproto23 (~gproto23@user/gproto23)
[19:20:15] *** Joins: vulpes_vulpes (~vulpes_vu@62-64-207-88.dynamic.dial.as9105.com)
[19:21:16] *** Joins: PPe2 (593a1200@67.205.143.82)
[19:21:52] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:b949:3ab6:25f0:720c) (Ping timeout: 260 seconds)
[19:22:07] *** Quits: PPe2 (593a1200@67.205.143.82) (Client Quit)
[19:22:34] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 246 seconds)
[19:22:37] <Guest52> Hello, I want to use dat_test function which is in the file /home/roro/work/Pernod-Ricard/PR.Data.Sandbox.PandasFlow/check.py with this code https://bpa.st/M5BA but I got ImportError: cannot import name 'dat_test' from 'pandas_flow_utils.check' (/usr/local/lib/python3.8/dist-packages/pandas_flow-0.1.0-py3.8.egg/pandas_flow_utils/check.py) error
[19:23:31] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.5)
[19:23:55] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 240 seconds)
[19:24:13] *** Joins: Giovanni (~Giovanni@194.169.217.129)
[19:24:17] *** Joins: Wanderer (~wanderer@user/wanderer)
[19:24:18] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[19:24:30] <squirrel> (so far all of predicates i've seen were argument-taking, pure functions that were returning strictly boolean values and i think that's what predicates are supposed to be, so i just don't see how one could be not confused by seeing `predicate` here)
[19:24:44] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[19:24:59] <SnoopJ> Guest52, your paste is not capable of producing the error you report, because it contains invalid syntax. Can we see the real code, or at least the full real error report?
[19:25:12] <MacGyver> squirrel: Your understanding of the term predicate is based on a narrow usage of it in pure functional style.
[19:25:13] <SnoopJ> (line 5 is incomplete, you don't actually ask to import anything)
[19:25:23] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[19:25:39] <MacGyver> squirrel: I understand how that creates confusion when not using it in pure functional style, and I'm not saying you *should* use the term if it confuses you.
[19:25:43] *** Quits: vladoski (~vladoski@host-79-44-230-48.retail.telecomitalia.it) (Ping timeout: 246 seconds)
[19:25:51] *** Quits: luigibu (~luigi@93.176.153.88) (Quit: WeeChat 3.5)
[19:25:58] *** Quits: ExpiredKebab (~sgreadly@user/sgreadly) (Ping timeout: 260 seconds)
[19:25:58] *** Joins: pycurious (~Adium@user/pycurious)
[19:26:15] *** Quits: Giovanni (~Giovanni@194.169.217.129) (Read error: Connection reset by peer)
[19:26:20] <han-solo> since they already added the path to sys path, it ought to be just `from check import dat_test` instead of `from pandas_flow_utils.check imporrt dat_test`
[19:26:33] <han-solo> i think
[19:26:50] <pycurious> I'm looking for a bitmap matrix/image structure - where I can store 1-bit data (on/off). All I need is fast read/write access, and save/load to file. Any suggestions? Can numpy do this?
[19:26:55] <exarkun> newdimension: I only remember that there is an email package, not the details of it.  For details, I use the API docs.
[19:26:59] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[19:27:00] *** Joins: jinsun__ (~jinsun@user/jinsun)
[19:27:01] *** Lord_of_Life_ is now known as Lord_of_Life
[19:27:03] <SnoopJ> han-solo, my point was more that we are definitely looking at 'sanitized' code
[19:27:10] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[19:27:12] <SnoopJ> pycurious, yes, with the bool dtype
[19:27:19] *** Quits: shokohsc (~shokohsc@lfbn-idf2-1-974-194.w86-238.abo.wanadoo.fr) (Read error: Connection reset by peer)
[19:27:31] <han-solo> SnoopJ: yeah, don't know why they did that
[19:27:31] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[19:27:38] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[19:27:46] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[19:27:59] *** Joins: eldritch (~eldritch@user/eldritch)
[19:28:13] *** Joins: ExpiredKebab (~sgreadly@user/sgreadly)
[19:28:44] *** Joins: sudomann (~sudomann@98.219.211.182)
[19:28:45] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:28:52] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[19:28:58] *** Joins: shokohsc (~shokohsc@lfbn-idf2-1-974-194.w86-238.abo.wanadoo.fr)
[19:29:03] <pycurious> SnoopJ: I think that dtype uses 1 byte per position, not 1-bit?
[19:29:04] <Guest52> sorry here is my correct code https://bpa.st/IL3A
[19:29:04] *** Joins: glider (~glider@user/glider)
[19:29:13] <SnoopJ> pycurious, probably
[19:29:25] <SnoopJ> pycurious, numpy.packbits() is a thing, though
[19:29:33] *** Joins: cdown_ (~cdown@user/cdown)
[19:29:35] <pycurious> yes - but in memory its using a lot of memory
[19:29:39] <pycurious> My matrices are large
[19:29:45] <SnoopJ> how large?
[19:29:52] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 272 seconds)
[19:30:08] <pycurious> does packbits output still behave as numpy ? if yes, that should solve my problem!
[19:30:09] <mickey> SnoopJ, grym i still dont get it. it's 2 lists essentially, why can't they be combined? [1,2] += [3,4] should be [1,2,3,4] no?
[19:30:14] *** Joins: jpn (~jpn@user/jpn)
[19:30:38] <grym> mickey: that's not how ndarrays work
[19:30:43] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:8858:5b2:a927:8ef7) (Quit: Konversation terminated!)
[19:30:45] <Guest52> and my error message is Traceback (most recent call last):
[19:30:45] <grym> they're _not_ lists
[19:30:45] <Guest52>   File "test/common_functions.py", line 8, in <module>
[19:30:46] <Guest52>     from pandas_flow_utils.check import dat_test
[19:30:46] <Guest52> ImportError: cannot import name 'dat_test' from 'pandas_flow_utils.check' (/usr/local/lib/python3.8/dist-packages/pandas_flow-0.1.0-py3.8.egg/pandas_flow_utils/check.py)
[19:30:49] <SnoopJ> mickey, did you read my link?
[19:30:54] <SnoopJ> Guest52, please don't paste in the channel
[19:30:59] *** Quits: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be) (Read error: Connection reset by peer)
[19:31:08] *** Quits: jinsun (~jinsun@user/jinsun) (Ping timeout: 272 seconds)
[19:31:19] <jinsun__> Guest52: why did you sys.path.append?
[19:31:26] <SnoopJ> pycurious, packbits() produces an ndarray of uint8 https://numpy.org/doc/stable/reference/generated/numpy.packbits.html
[19:31:27] <mickey> SnoopJ yeah, it doesnt make any sense, sorry
[19:31:50] <SnoopJ> mickey, the short version: the shapes of the two arrays have to be the same in every position, or one of them has to be 1
[19:31:59] <SnoopJ> 0 and 10 are not the same, and neither of them is 1. This is a broadcast error.
[19:32:06] *** Joins: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[19:32:17] <Guest52> jinsun_ it is to reproduce an error I have
[19:32:42] <mickey> SnoopJ but (0,) and (10,) are basically [] and [1,2,3,4,5,6,7,8,9,0] aren't they? i mean why can't those be combined?
[19:32:47] <grym> mickey: not really broadcating related, but also: python lists of the form [[1,2,3],[4]] are completely legal, but that's not representable as an ndarray
[19:32:47] <jinsun__> Guest52: oh it doesn't happen if you remove that line?
[19:32:54] <SnoopJ> mickey, no, they really are not
[19:33:02] <grym> mickey: so if your csv has different length lists as its values column, you'll have to pad them
[19:33:04] <SnoopJ> and they cannot be combined for the reason I have explained twice now
[19:33:14] <Repiphany> mickey: numpy arrays don't append/extend with the `+=` operator
[19:33:19] <Repiphany> They can't change size in place
[19:33:51] <jinsun__> mickey: maybe don't make them numpy arrays if you need the functionality of lists?
[19:34:15] <mickey> jinsun__ numpy.load() gives numpy arrays
[19:34:19] *** Joins: whaley (~whaley@cpe-76-182-165-20.sc.res.rr.com)
[19:34:21] <Repiphany> np.array([1,2,3]) += [5,5,5] -> np.array([6,7,8])
[19:34:34] <squirrel> MacGyver: can you give some examples when predicates are supposed to be something else?
[19:34:36] <Guest52> I think I have found my error
[19:34:36] <mickey> Repiphany that makes sense now.
[19:34:43] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[19:34:47] <SnoopJ> `np.concatenate([[], [1,2,3]])` is a valid concatenation, but this does sound like you're using numpy when you don't particularly want to use numpy
[19:34:50] <jinsun__> mickey: so don't use numpy.load, use the csv module
[19:35:05] <mickey> jinsun__ i gave up on csv already, switched to npz files
[19:35:17] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 260 seconds)
[19:35:45] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 256 seconds)
[19:35:47] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[19:35:53] <jinsun__> maybe should have switched to json instead
[19:36:25] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[19:36:39] *** Joins: pycurious (~Adium@user/pycurious)
[19:37:17] *** Seto_Kaiba is now known as Hunterkll
[19:37:26] *** Joins: sudomann (~sudomann@98.219.211.182)
[19:37:36] *** Quits: bfortified (~bfortifie@user/bfortified) (Quit: ZNC 1.8.2 - https://znc.in)
[19:38:23] *** Joins: Barones (~Barones@user/Barones)
[19:39:04] <jinsun__> squirrel: https://docs.python.org/3/library/threading.html#threading.Condition.wait_for
[19:39:26] *** Joins: bfortified (~bfortifie@user/bfortified)
[19:40:31] <jinsun__> squirrel: it is almost the same name and functionality of the function you are writing
[19:40:52] <MacGyver> squirrel: Predicate execution, predicate variables, predicate methods (which aren't pure functions but methods on an object telling you things about their state), ...
[19:41:11] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[19:41:35] *** Joins: justm33 (~Username@84-84-41-7.fixed.kpn.net)
[19:41:59] *** Quits: treefrob (~treefrob@p2e542993.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[19:43:17] *** Quits: justm3 (~Username@84-84-41-7.fixed.kpn.net) (Ping timeout: 240 seconds)
[19:43:22] *** justm33 is now known as justm3
[19:47:11] *** Joins: paul424 (~tom@ip-5-172-234-32.multi.internet.cyfrowypolsat.pl)
[19:48:33] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:49:22] *** Quits: kostkon_ (~androirc@athedsl-237515.home.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[19:50:30] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[19:50:39] <rendar> after i have checked asyncio.Task's task.exception() inside a try: block, because that function can raise asyncio.CancelledError, and it returned None, without raising anything, do i have still to use a try: block to get coroutine result?
[19:50:44] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[19:50:55] <rendar> or, i can just call `result = task.result()`
[19:51:03] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 260 seconds)
[19:52:16] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[19:52:36] *** Quits: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[19:53:23] *** Quits: masta`` (~Username@user/masta/x-2645138) (Remote host closed the connection)
[19:54:12] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[19:54:36] *** Joins: treefrob (~treefrob@p2e542c0f.dip0.t-ipconnect.de)
[19:58:58] *** Joins: ckdCreations (~ckdCreati@147.55.133.141)
[19:59:15] *** Joins: gproto23 (~gproto23@user/gproto23)
[19:59:19] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[19:59:24] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[19:59:27] *** Joins: dancus (~dancus@62-11-179-87.dialup.tiscali.it)
[20:00:05] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[20:00:12] *** Quits: sandipan (~Sandipan@103.24.86.178) (Quit: Leaving)
[20:00:13] *** Joins: aakashi2001 (~aakashi20@103.61.255.39)
[20:00:13] *** Quits: aakashi2001 (~aakashi20@103.61.255.39) (Changing host)
[20:00:13] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[20:00:16] *** Joins: moog (~moog@98.97.81.134)
[20:00:21] *** Quits: stockh0lm (~Andreas@p200300d2c7083200bc37e4358fcb1057.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[20:00:37] *** Quits: revolve (~u0_a227@82-132-238-164.dab.02.net) (Ping timeout: 240 seconds)
[20:00:40] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:01:00] *** Quits: nomic (~nomic@185.217.117.233) (Quit: Leaving)
[20:01:45] *** Quits: cdman (~dcm@user/dmc/x-4369397) (Quit: Leaving)
[20:01:49] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[20:02:13] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[20:02:30] *** Joins: moog_ (~moog@98.97.84.204)
[20:02:59] *** Joins: pycurious (~Adium@user/pycurious)
[20:04:30] *** Joins: Giovanni (~Giovanni@194.169.217.129)
[20:05:19] *** Quits: moog (~moog@98.97.81.134) (Ping timeout: 260 seconds)
[20:06:15] *** Quits: NoxTurminal (~Noxturmin@user/noxturminal) (Ping timeout: 260 seconds)
[20:06:36] *** Quits: tobybl (~tobybl@dhcp-199-233.inf.ed.ac.uk) (Ping timeout: 245 seconds)
[20:07:14] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[20:07:43] *** Quits: mav`rik (~unknown@ec2-54-171-126-99.eu-west-1.compute.amazonaws.com) (Quit: leaving)
[20:08:04] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 246 seconds)
[20:08:32] *** Joins: blackbird47 (~blackbird@223.233.79.158)
[20:08:35] *** Quits: moog_ (~moog@98.97.84.204) (Ping timeout: 260 seconds)
[20:11:34] *** Quits: dancus (~dancus@62-11-179-87.dialup.tiscali.it) (Quit: dancus)
[20:12:04] *** Joins: tWqaq (~tWqaq@240e:389:5d41:5900:eec2:a722:4cbf:d5c2)
[20:12:31] <bjs> rendar: https://docs.python.org/3/library/asyncio-task.html#asyncio.Task.exception  "If the wrapped coroutine returned normally this method returns None."
[20:12:36] <bjs> None => no exception.
[20:12:50] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[20:18:32] *** Quits: Guest52 (~Guest52@37.26.189.34) (Ping timeout: 250 seconds)
[20:18:37] *** Quits: Giovanni (~Giovanni@194.169.217.129) (Read error: Connection reset by peer)
[20:18:41] *** Quits: Santzes (~Santzes@2400:8901::f03c:93ff:fe0a:e964) (Quit: WeeChat 3.5)
[20:19:27] *** Quits: fling (~fling@user/fling) (Remote host closed the connection)
[20:19:43] *** Joins: Giovanni (~Giovanni@194.169.217.129)
[20:20:01] *** Joins: fling (~fling@user/fling)
[20:20:19] *** Joins: Santzes (~Santzes@2400:8901::f03c:93ff:fe0a:e964)
[20:21:07] *** Quits: cdown_ (~cdown@user/cdown) (Remote host closed the connection)
[20:21:14] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[20:21:24] *** Quits: Giovanni (~Giovanni@194.169.217.129) (Read error: Connection reset by peer)
[20:22:32] *** Joins: Giovanni (~Giovanni@194.169.217.129)
[20:22:42] *** Quits: HurricaneHarry (~quassel@84-85-122-182.fixed.kpn.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[20:24:34] *** Quits: sudomann (~sudomann@98.219.211.182) (Quit: Lost terminal)
[20:25:14] *** Joins: yates (~user@fv-nc-f7af8b91e1-234237-1.tingfiber.com)
[20:26:15] *** Quits: Giovanni (~Giovanni@194.169.217.129) (Read error: Connection reset by peer)
[20:26:19] <Mulugruntz> Are there some people using Codility at work for their Python recruitment? They're currently in py 3.6 (already end-of-life and no longer supported). We opened a ticket to ask for a Python update. They replied saying that if other companies also request it, they'll update it. Otherwise, it (probably) won't be on their 2022 roadmap. Time to open mass tickets (only from companies using it, of course :)), Python community?
[20:26:46] *** Joins: HurricaneHarry (~quassel@2a02-a455-9d06-1-145f-60f1-9463-fc98.fixed6.kpn.net)
[20:26:56] *** Quits: blackbird47 (~blackbird@223.233.79.158) (Quit: Client closed)
[20:26:57] <yates> if i have a class like this:http://paste.debian.net/1236156/
[20:27:01] <Helle> I am against the use of assesment software, so no chance
[20:27:08] <yates> what are the variables var1, var2 called?
[20:27:13] <yates> what is their scope?
[20:27:20] <bjs> yates: they are attributes, on the MyClass object
[20:27:24] *** Joins: otiose (~otiose@156.146.48.156)
[20:27:33] <bjs> so "class attributes" is what I would call them
[20:27:37] <Mulugruntz> Helle, of course, if you're not currently using it, then you can safely ignore it :-).
[20:27:50] <bjs> yates: they are scoped within the class statement.
[20:27:51] <Helle> Mulugruntz: more saying that the loss of that product is a gain, not a loss
[20:28:13] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 256 seconds)
[20:28:35] <yates> bjs: so can i refer to them in member functions, e.g., __init__(), as simply (e.g.) "if var1:"...?
[20:28:36] <grym> yates: and they're confusing :)
[20:28:39] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 260 seconds)
[20:28:41] <bjs> yates: no.
[20:28:44] <Mulugruntz> yates, you can move to python 3 :-). No need to inherit from object ;-)
[20:28:58] <bjs> yates: they are scoped to the class,  but not to the other scopes nested inside the class
[20:29:10] <bjs> yates: this is also why you need to say `self.method()` and can't just go `method()`
[20:29:19] <yates> ok
[20:29:23] <grym> i don't use class attributes at all, fwiw
[20:29:27] *** Joins: Guest48_ (~textual@2001:ee0:4081:6914:adb5:7f11:b4c7:5e8f)
[20:29:49] *** Quits: visl_ (visl@user/visl) (Ping timeout: 240 seconds)
[20:29:50] <bjs> yates: maybe you want to put them inside the __init__ and say `self.var1` and `self.var2 = False` instead?
[20:29:55] <yates> grym: well in this framework certain names are standard
[20:30:05] <yates> IDAPro plugin, that is
[20:30:54] <yates> like this: http://paste.debian.net/1236158/
[20:31:43] <yates> well i guess you know where i work now... :)
[20:31:48] <jinsun__> Mulugruntz: threaten to move to something else that supports newer python version (I see leetcode is on 3.10 already)
[20:32:08] *** Joins: visl (visl@user/visl)
[20:32:21] *** Quits: Guest48_ (~textual@2001:ee0:4081:6914:adb5:7f11:b4c7:5e8f) (Client Quit)
[20:32:24] <yates> Mulugruntz: we are using 3.6.9
[20:32:36] *** Joins: v9fk1yn3nu (~v9fk1yn3n@user/v9fk1yn3nu)
[20:32:47] <yates> and i did not know you no longer need "object" - thanks
[20:32:48] <rendar> bjs, i see, so in this code https://bpa.st/CKXQ -- the second `try: result = task.result()` is useless!
[20:32:56] <Mulugruntz> yates, https://bpa.st/WPGA
[20:33:33] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[20:33:41] <bjs> rendar: I would think so, if the exception() call didn't raise InvalidStateError or CancelledError it was because it finished running and wasn't cancelled.  I'm not sure how it could later change from this state.
[20:33:59] <rendar> yep
[20:34:00] <Mulugruntz> jinsun__, we just moved from Coderpad to Codility. I'll talk about LeetCode to the team. But probably not going to move again any time soon :[]. Thanks :)
[20:34:19] *** Joins: djapo (~archangel@user/djapo)
[20:35:07] <yates> Mulugruntz: i see - thank you
[20:35:23] <Mulugruntz> yates, good to know. Inheriting from `object` is no longer need in Python 3. :-)
[20:35:37] <Mulugruntz> yates, did the example paste help you? :)
[20:35:44] *** Quits: v9fk1yn3nu (~v9fk1yn3n@user/v9fk1yn3nu) (Client Quit)
[20:36:01] *** Joins: v9fk1yn3nu (~v9fk1yn3n@user/v9fk1yn3nu)
[20:36:09] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[20:36:13] *** Quits: kts (~kts@103.73.237.175) (Quit: Konversation terminated!)
[20:37:10] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[20:37:26] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[20:37:31] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 260 seconds)
[20:37:46] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[20:37:47] <Mulugruntz> basically, if self.xxx doesn't exist, it'll try to reach self.__class__.xxx . But as soon as you've defined a self.xxx, it won't need to reach the class variable anymore. Because the instance variable will overshadow the class variable
[20:38:25] <SnoopJ> Mulugruntz, I'm not entirely sure what your question is re: Codability, but if they aren't willing to support a Python that came out in the last 5 years (3.6.0 was 2015), it sounds like they're leaving a lot on the table in terms of ability to assess candidates for knowledge about "new stuff" in Python
[20:38:29] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 250 seconds)
[20:38:54] <SnoopJ> which, granted, is probably not very important to the hiring process, but it would absolutely rule it out for e.g. an employer that uses Protocols and wants to include them in technical interviews
[20:40:22] <Mulugruntz> SnoopJ, yep, agreed. candidates can always mention "if I were in python 3.x, I would use something-something feature instead"
[20:40:34] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[20:41:05] <SnoopJ> Mulugruntz, I guess I'd have serious doubts about a company trying to tell me a product for assessing Python that isn't willing to keep pace with Python
[20:41:05] *** Quits: v9fk1yn3nu (~v9fk1yn3n@user/v9fk1yn3nu) (Read error: Connection reset by peer)
[20:41:16] *** Joins: djhankb (~djhankb@208.113.164.68)
[20:41:26] <SnoopJ> (on top of doubts about the necessity of such a product in the first place, but that's another matter)
[20:42:39] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Ping timeout: 260 seconds)
[20:44:13] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[20:44:34] <Mulugruntz> SnoopJ, yeah. We're open to recruit people globally. There are many stages in our recruitment process. And there's a live interview. So, we need tools to organize these interviews remotely with "just a browser"
[20:44:46] * SnoopJ nods
[20:45:04] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[20:45:19] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[20:45:52] <Mulugruntz> jinsun__, okay, leetcode has a Interview > Online Interview section. But it also says "New" on it. Maybe not mature. Don't know. Would need to see if there's a demo somewhere
[20:46:04] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[20:46:15] <Mulugruntz> because it doesn't seem to be for interviews in the first place.
[20:47:04] *** Joins: v9fk1yn3nu (~v9fk1yn3n@user/v9fk1yn3nu)
[20:47:47] *** Joins: djapo (~archangel@user/djapo)
[20:48:46] <jinsun__> Mulugruntz: I dunno, maybe it is just for practice and not for interviews, I just know about it because people I know like to use it
[20:49:09] <jinsun__> for preparing for tests, not for taking interviews
[20:49:14] *** Joins: andreasbuhr (~quassel@p549dbae6.dip0.t-ipconnect.de)
[20:49:14] *** Quits: andreasbuhr (~quassel@p549dbae6.dip0.t-ipconnect.de) (Client Quit)
[20:49:22] <Mulugruntz> jinsun__, yes, it seems to be. But thanks, it still looks neat!
[20:50:00] *** Joins: rampart (~rampart@7.sub-174-250-0.myvzw.com)
[20:51:04] <SnoopJ> $employer has used coderpad.io in the past
[20:51:23] <SnoopJ> (we are nowhere near the scale mentioned earlier, though)
[20:52:25] *** Joins: varmonger (~nav@122.182.204.29)
[20:54:07] <varmonger> hi! how can I define a global variable that is accessible in both app/__init.py and app/plugin/user/model.py given this directory structure https://imgur.com/zovlS14
[20:54:14] *** Joins: ipark[m] (~iparkmatr@2001:470:69fc:105::1:e9b2)
[20:56:10] *** Quits: kdc (~kdc@196-210-1-81.dynamic.isadsl.co.za) (Quit: Leaving)
[20:57:10] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:5fd:2a67:68f8:fe14) (Remote host closed the connection)
[20:57:48] <SnoopJ> varmonger, I would probably do `myvar = 42` in the top-level __init__.py and `from app import myvar` in model.py if `app` is an installable package.
[20:58:24] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[20:59:01] *** Joins: pfloyd (floyd@c-98-242-53-178.hsd1.ca.comcast.net)
[20:59:07] <varmonger> SnoopJ: Gotcha
[20:59:08] <SnoopJ> varmonger, if plugins/user had their own __init__.py you could also do `from ... import myvar`
[20:59:11] *** Quits: jamwil (~jamwil@user/jamwil) (Quit: leaving)
[20:59:37] *** Joins: Giovanni (~Giovanni@194.169.217.129)
[20:59:44] <varmonger> that explains a lot about relative imports, i suppose folders have to be packages for relative imports to work..
[21:00:17] <SnoopJ> yup
[21:00:25] <pfloyd> hi I'm trying to fork a child to run a command (simple os.system() so I can see the output) and have the parent monitor the child's memory usage. that all works fine, but the child never exits when it runs sys.exit and I get a defunct process. Tried using signal.signal for SIGCHLD but get ChildProcessError: [Errno 10] No child processes, what am I doing wrong?
[21:01:46] *** Joins: jmd (~user@de.cellform.com)
[21:01:50] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[21:01:52] <pfloyd> I don't want to double fork as I want to see the output (just creating a light weight watchdog layer to run a command). Perhaps something like os.spawn would work better than trying to do it manually with fork?
[21:02:08] <bjs> pfloyd: are you familiar with the subprocess library?
[21:02:09] *** Joins: GuestAccount (~GuestAcco@1F2EA800.dsl.pool.telekom.hu)
[21:02:16] *** Joins: FluffyMask (~masque@user/fluffymask)
[21:02:18] *** Joins: Shou (~nyah@wikipedia/Davepeta)
[21:02:21] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:02:55] <bjs> it's a wrapper around these kind of low level things with a nicer API, including error reporting rather than silence if something goes wrong
[21:03:04] *** Joins: jmd (~user@de.cellform.com)
[21:03:06] <pfloyd> bjs: somewhat, yes. I know I can use subprocess.Popen without communicate() so it's non-blocking but how do I know when the child is done in that case?
[21:03:10] *** Quits: codebam (~codebam@user/codebam) (Remote host closed the connection)
[21:03:19] <bjs> pfloyd: well communicate() is blocking, it waits until the child is done
[21:03:27] *** Joins: iomari891 (~iomari891@105.112.138.38)
[21:03:39] <pfloyd> but I don't want it to be blocking, how can I monitor the child's memory usage if it's blocking
[21:03:41] <bjs> so that seems to solve that problem. for non-blocking there's other ways, e.g. Popen.poll()
[21:03:51] *** Joins: codebam (~codebam@user/codebam)
[21:04:28] *** Quits: Giovanni (~Giovanni@194.169.217.129) (Read error: Connection reset by peer)
[21:04:30] <bjs> pfloyd: https://docs.python.org/3/library/subprocess.html#popen-objects
[21:04:42] <GuestAccount> Hello! How can you split a string at most n times? I'm trying "header.split(" ", 5)", but it also breaks at the last space. I want something like Golang's strings.SplitN (simply return everything that remains after splits have run out), if that says something.
[21:04:49] <GuestAccount> Sorry if I interrupted any other conversation
[21:04:58] <pfloyd> bjs: thanks, will give that a shot
[21:05:28] <bjs> GuestAccount: what do you mean "breaks at the last space"?
[21:05:56] <bjs> GuestAccount: header.split(" ", 5) will do up to 5 splits, resulting in a list with at most 6 things in it.
[21:06:11] <bjs> Which sounds exactly like what you asked for
[21:07:23] *** Joins: menace (~someone@ppp-93-104-190-25.dynamic.mnet-online.de)
[21:07:23] *** Quits: menace (~someone@ppp-93-104-190-25.dynamic.mnet-online.de) (Changing host)
[21:07:23] *** Joins: menace (~someone@user/menace)
[21:07:25] <GuestAccount> bjs: oh my god, sorry. Didn't take my sleeping pills early enough last night \:D so that solves it, thank you
[21:07:33] <bjs> Maybe you want header.split(" ", 4) and you meant 5 substrings not 5 splits?
[21:07:37] *** Joins: mtk_ (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[21:07:39] *** menace is now known as Deknos
[21:07:41] <bjs> 1 split = 2 substrings, 2 splits = 3 substrings, etc
[21:07:45] *** Joins: tWqaq_ (~tWqaq@240e:389:5d41:5900:eec2:a722:4cbf:d5c2)
[21:08:14] *** Quits: tWqaq (~tWqaq@240e:389:5d41:5900:eec2:a722:4cbf:d5c2) (Read error: Connection reset by peer)
[21:08:54] *** Quits: Jmtrix (~qed@user/jmtrix) (Ping timeout: 260 seconds)
[21:08:59] <GuestAccount> Yeah it's working now I was just used to go, and you give max number of substrings there not max number of splits
[21:09:09] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Read error: Connection reset by peer)
[21:09:57] *** Joins: Giovanni (~Giovanni@194.169.217.129)
[21:10:57] *** Joins: Jmtrix (~qed@2604:180:2:72d::497d)
[21:10:57] *** Quits: Jmtrix (~qed@2604:180:2:72d::497d) (Changing host)
[21:10:57] *** Joins: Jmtrix (~qed@user/jmtrix)
[21:11:29] *** Quits: ccha (~ccha@user/ccha) (Quit: WeeChat 3.2)
[21:11:37] *** Joins: confluence_ (~quassel@2a01:4f8:c17:3ca::2)
[21:11:40] <pfloyd> bjs: seems to work well, the "parent" in this case just needs a:  while proc.poll() is None:
[21:13:12] *** Quits: Giovanni (~Giovanni@194.169.217.129) (Read error: Connection reset by peer)
[21:13:44] *** Joins: jamwil (~jamwil@user/jamwil)
[21:15:11] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:913a:502b:5b7b:1e2b)
[21:15:52] <pfloyd> thanks again, laters
[21:15:53] *** Parts: pfloyd (floyd@c-98-242-53-178.hsd1.ca.comcast.net) ()
[21:16:21] *** Joins: dfg (~dfg@user/dfg)
[21:16:57] <bjs> GuestAccount: ah.  Fencepost bugs
[21:17:57] *** Quits: rsx (~dummy@ppp-188-174-155-241.dynamic.mnet-online.de) (Quit: rsx)
[21:18:33] <bjs> GuestAccount: perhaps it should have been keyword-only so you'd be forced to write .split(" ", maxsplit=5)
[21:18:48] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[21:19:15] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[21:19:27] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[21:19:29] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[21:21:33] *** Quits: Merinorus (~Merinorus@lfbn-mar-1-707-11.w90-118.abo.wanadoo.fr) (Quit: Someone cut my Wi-Fi cable.)
[21:21:42] *** Joins: Merinorus (~Merinorus@lfbn-mar-1-707-11.w90-118.abo.wanadoo.fr)
[21:22:13] *** Joins: dez (uid92154@user/dez)
[21:23:27] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[21:23:35] *** Joins: Xardas (~Xardas@149.233.51.127)
[21:23:58] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[21:24:02] *** Joins: pycurious (~Adium@user/pycurious)
[21:24:11] <Xardas> why do I get 0 as a result for counting words in a file ?
[21:24:11] <Xardas> https://bpa.st/TY3A
[21:24:15] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[21:24:17] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Remote host closed the connection)
[21:24:40] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[21:25:09] *** dcaro is now known as dcaro_away
[21:25:24] *** Quits: ArchDave (~Archdave2@user/ArchDave2) (Quit: leaving)
[21:25:35] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Ping timeout: 260 seconds)
[21:25:42] *** Joins: fling (~fling@user/fling)
[21:26:04] *** Joins: ArchDave (~Archdave2@user/ArchDave2)
[21:26:06] *** Joins: funhouse (~funhouse@user/funhouse)
[21:26:07] <grym> Xardas: well, what's in that file?
[21:26:09] *** Quits: MajorBiscuit (~MajorBisc@c-001-013-026.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[21:26:12] *** Joins: ivii (~ivan@user/ivii)
[21:26:28] <phy1729> What do you expect for word in line to do?  I suggest adding a print(word) to see what's really happening
[21:27:00] <grym> ^^ that, too :)
[21:27:00] *** Joins: srg (~srg@user/srg)
[21:27:16] <grym> you might have meant `for word in line.split()`
[21:27:52] <grym> if line = 'the quick brown fox', `for word in line` gives you ['t','h','e',' ' ,'q',...
[21:28:17] <grym> and none of those are equal to 'the'
[21:28:35] *** Quits: palasso (~palasso@user/palasso) (Read error: Connection reset by peer)
[21:28:38] <phy1729> or 'the '
[21:29:36] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[21:29:58] *** Quits: Optimus (~risto@87.227.227.147) (Ping timeout: 246 seconds)
[21:30:15] *** Quits: GuestAccount (~GuestAcco@1F2EA800.dsl.pool.telekom.hu) (Quit: Client closed)
[21:30:43] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 260 seconds)
[21:31:13] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:a5a4:d9a1:a057:3848)
[21:31:14] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:a5a4:d9a1:a057:3848) (Changing host)
[21:31:14] *** Joins: skapata (~Skapata@user/skapata)
[21:32:17] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[21:32:18] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[21:32:33] *** Joins: pycurious (~Adium@user/pycurious)
[21:34:17] *** Quits: ArchDave (~Archdave2@user/ArchDave2) (Quit: leaving)
[21:35:01] *** Joins: jpn (~jpn@user/jpn)
[21:35:25] *** Quits: tWqaq_ (~tWqaq@240e:389:5d41:5900:eec2:a722:4cbf:d5c2) (Quit: Leaving)
[21:36:48] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 260 seconds)
[21:37:13] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 260 seconds)
[21:37:16] *** Joins: ArchDave (~Archdave2@user/ArchDave2)
[21:38:05] *** Quits: kiran (~kiranostr@78.40.148.178) (Quit: Toodle-oo!)
[21:38:26] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 272 seconds)
[21:39:03] <Xardas> grym it's a file i've downloaded from gutenberg project to play around with
[21:39:40] *** Joins: kiran (~kiranostr@78.40.148.178)
[21:39:41] *** Joins: Wulf (~Wulf@user/wulf)
[21:41:01] <SnoopJ> Xardas, `for word in line:` doesn't do what you think it does, that will iterate the line one character at a time
[21:41:09] <SnoopJ> maybe you wanted `for word in line.split():` there
[21:41:24] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[21:42:10] <SnoopJ> or maybe just `for line in content: count += line.lower().count("the")` since the str type provides its own count() method
[21:42:11] *** Quits: konfusedagain (~konfuseda@125.99.177.198) (Ping timeout: 250 seconds)
[21:42:40] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[21:42:40] <SnoopJ> https://bpa.st/YO3Q
[21:43:27] <Xardas> I didn't want to use the count() method
[21:43:39] <Xardas> Wanted to just use logic
[21:43:40] <SnoopJ> then refer to my first reply
[21:44:12] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 260 seconds)
[21:44:30] *** Joins: MasterK (~MK@86.127.22.26)
[21:46:06] *** Quits: Mulugruntz (~mulugrunt@217.117.229.220) (Remote host closed the connection)
[21:46:25] *** Quits: visl (visl@user/visl) (Ping timeout: 256 seconds)
[21:47:19] <Xardas> For some reason it still print 0
[21:47:20] <Xardas> https://bpa.st/4SBA
[21:47:35] *** Joins: lakrass (~lakrass@user/lakrass)
[21:48:00] <phy1729> you're still looking for 'the ' on L11
[21:48:00] <Xardas> I used the .split() method
[21:48:01] <grym> Xardas: "the " is not the same as "the"
[21:48:23] <grym> and split removes whitespace
[21:48:36] <Xardas> I wanted to exclude "there" or "therefore" etc.. and only have "the"
[21:49:02] <Xardas> Oh my bad
[21:49:02] <grym> then you'll probably want to re.search the line, not split
[21:49:12] <grym> but split should get you what you want
[21:49:22] <grym> "therefore" doesn't equal "the", either
[21:49:30] <Xardas> Now it works fine
[21:49:33] *** Joins: Optimus (~risto@87.227.227.147)
[21:50:01] <Xardas> Thanks a lot guys !
[21:50:08] <Xardas> :)
[21:50:21] <grym> np
[21:50:31] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[21:50:40] <SnoopJ> Xardas, does it make sense?
[21:51:03] <Xardas> Yes it does as split() splits the word bases on whitespace
[21:51:19] <SnoopJ> :)
[21:51:43] <Xardas> thx dude :D
[21:52:23] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[21:53:07] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[21:53:20] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[21:53:27] *** Joins: visl (visl@user/visl)
[21:53:56] *** Joins: pycurious (~Adium@user/pycurious)
[21:54:50] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[21:55:54] *** Quits: kiran (~kiranostr@78.40.148.178) (Quit: Toodle-oo!)
[21:56:43] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[21:56:53] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Remote host closed the connection)
[21:56:58] *** Joins: bomb-on (~bomb-on@user/bomb-on)
[21:57:07] *** Joins: kiran (~kiranostr@78.40.148.178)
[21:57:44] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Remote host closed the connection)
[21:58:09] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[21:58:10] *** Joins: jpn (~jpn@user/jpn)
[21:58:57] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[21:58:57] *** Joins: roro (~roro@78.192.226.182)
[21:59:09] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[21:59:10] *** Joins: pycurious (~Adium@user/pycurious)
[21:59:18] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Ping timeout: 260 seconds)
[21:59:20] *** roro is now known as Guest5713
[21:59:44] *** Joins: magla (~gelignite@55d42a76.access.ecotel.net)
[22:00:24] *** Quits: pycurious (~Adium@user/pycurious) (Client Quit)
[22:00:59] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[22:03:11] *** Quits: kiran (~kiranostr@78.40.148.178) (Read error: Connection reset by peer)
[22:03:48] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 240 seconds)
[22:03:48] *** Joins: kiran (~kiranostr@78.40.148.178)
[22:04:04] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[22:05:13] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 260 seconds)
[22:07:29] *** Joins: MRDPZK (~MRDPZK@d205-250-152-220.bchsia.telus.net)
[22:07:34] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 272 seconds)
[22:08:53] *** Seto_Kaiba is now known as Hunterkll
[22:08:54] *** Joins: plastico (~plastico@neomutt/plastico)
[22:09:41] *** Joins: justm33 (~Username@84-84-41-7.fixed.kpn.net)
[22:09:48] <Guest5713> Hello, I want to remplace a whole line in a file with python just like this script https://bpa.st/L2MA except that the string that trigger replace could have special character like quote like "hardships" instead of hardships
[22:11:19] *** Joins: Jong (~Jong@184-99-74-148.boid.qwest.net)
[22:11:49] *** Quits: justm3 (~Username@84-84-41-7.fixed.kpn.net) (Ping timeout: 240 seconds)
[22:11:54] *** justm33 is now known as justm3
[22:13:53] <Xardas> maybe use escape characters like this "\"harships\""
[22:14:14] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[22:14:46] *** Quits: Sario (sid356235@fosshost/cdo/Sario) ()
[22:14:50] <SnoopJ> or use the other quoting style for the string, e.g. '"hardships"'
[22:17:47] *** Quits: tomeaton17 (~tomeaton1@2a0c:5bc0:40:2e2f:4de9:c1b0:e646:9387) (Quit: Client closed)
[22:19:07] *** Joins: fling_ (~fling@user/fling)
[22:19:37] *** Quits: fling (~fling@user/fling) (Remote host closed the connection)
[22:20:18] *** Quits: Jacques (~Jacques@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 250 seconds)
[22:22:28] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 246 seconds)
[22:22:29] *** Joins: Tempesta (~Tempesta@user/tempesta)
[22:23:09] *** Joins: jpn (~jpn@user/jpn)
[22:23:30] *** Joins: konfusedagain (~konfuseda@125.99.177.198)
[22:23:50] *** Joins: pycurious (~Adium@user/pycurious)
[22:25:37] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 246 seconds)
[22:26:45] *** Quits: Madda (~Madda@2a05:f6c3:1935:0:2990:3a03:c1e1:2949) (Remote host closed the connection)
[22:27:05] <bjs> Guest5713: could the line have other words? or do you only want to replace that word?
[22:27:22] *** Joins: walthprest (~walthpres@c-73-167-87-99.hsd1.ma.comcast.net)
[22:28:21] *** Joins: Madda (~Madda@2a05:f6c3:1935:0:2990:3a03:c1e1:2949)
[22:28:35] *** Quits: fling_ (~fling@user/fling) (Ping timeout: 240 seconds)
[22:29:55] *** Joins: fling (~fling@user/fling)
[22:31:54] *** Quits: walthprest (~walthpres@c-73-167-87-99.hsd1.ma.comcast.net) (Quit: Konversation terminated!)
[22:32:38] *** Joins: hams (~hams@73.232.205.0)
[22:32:38] *** Quits: hams (~hams@73.232.205.0) (Changing host)
[22:32:38] *** Joins: hams (~hams@user/hams)
[22:32:40] *** Quits: mtk_ (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Read error: Connection reset by peer)
[22:32:40] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[22:32:57] *** Joins: admin124 (harrymoren@gateway/vpn/protonvpn/admin123)
[22:33:37] *** Joins: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[22:34:15] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[22:35:20] *** Joins: powftw (uid448161@id-448161.lymington.irccloud.com)
[22:35:36] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[22:35:50] *** Joins: pycurious (~Adium@user/pycurious)
[22:36:59] *** Quits: Staunch (~Staunch@137.83.202.220) (Ping timeout: 260 seconds)
[22:37:14] *** Joins: Betal (~Betal@user/betal)
[22:37:29] *** Joins: Oddity (~Oddity@user/oddity)
[22:37:45] *** Joins: vicfred (~vicfred@user/vicfred)
[22:38:13] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 256 seconds)
[22:40:10] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[22:40:13] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 260 seconds)
[22:41:46] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[22:44:20] *** Quits: stasp (~chatzilla@37.30.100.59.nat.umts.dynamic.t-mobile.pl) (Quit: Doom MIDIs await)
[22:45:31] <Guest5713> @bjs I want to replace the whole line with a new string but if I put "hardshipss" it is gonna be replaced with situationss
[22:45:49] <Guest5713> and yes it could have other words
[22:45:56] <bjs> Guest5713: and you want the other words to be replaced too?
[22:46:02] <bjs> and if so, with what?
[22:46:21] *** Joins: jpn (~jpn@user/jpn)
[22:46:46] *** Quits: defn (~n0b0dy@user/defn) (Quit: ZNC 1.8.2 - https://znc.in)
[22:47:06] <Guest5713> delete the line and replace it with a new one containing just "situation" in my case
[22:47:47] <bjs> Guest5713: well maybe you don't want .replace() at all but just `if 'hardship' in line: changes = "situation" else changes = line`
[22:47:49] <bjs> or something?
[22:47:50] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[22:48:09] *** Joins: defn (~n0b0dy@user/defn)
[22:48:11] *** Quits: visl (visl@user/visl) (Ping timeout: 260 seconds)
[22:48:13] <bjs> replacing the entire line with just the word "situation" seems a bit odd to me :)
[22:48:50] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[22:49:08] *** Joins: lbalhar (~lbalhar@93.185.13.26)
[22:49:31] *** Joins: saorge (~saorge@ns378138.ip-5-196-67.eu)
[22:50:09] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[22:52:57] *** tomg_ is now known as tomg
[22:54:27] *** Quits: defn (~n0b0dy@user/defn) (Remote host closed the connection)
[22:55:21] *** Joins: visl (visl@user/visl)
[22:56:31] *** Joins: pycurious (~Adium@user/pycurious)
[22:56:42] *** Quits: Church (~aleph@68.161.207.188) (Ping timeout: 260 seconds)
[22:58:45] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[22:59:24] *** Joins: defn (~n0b0dy@user/defn)
[22:59:37] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[23:02:03] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:de5c:12bf:d56:1d8d) (Quit: pvergain)
[23:03:49] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[23:05:32] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 252 seconds)
[23:05:45] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 256 seconds)
[23:08:46] *** Joins: Pickchea (~private@user/pickchea)
[23:10:55] *** Joins: kickingvegas (~cchoi@c-73-170-198-193.hsd1.ca.comcast.net)
[23:11:11] <patchie> some years ago, i used virtualenvwrapper. What should i use now? pyenv, venv, virtualenv, pyenv-virtualenv, virtualenvwrapper, pyenv-virtualenvwrapper, pipenv, or what? :P
[23:12:01] <grym> patchie: pyenv installs python; venv makes virtual environments; virtualenv doesn't matter unless you have to use py2
[23:12:25] <grym> patchie: if you want auto-activation of venvs when you're in a directory, direnv can be helpful; it's not specific to python, which is nice
[23:13:02] <patchie> aha
[23:13:14] *** Joins: Bandicoot (~bandicoot@212.58.114.93)
[23:13:17] <patchie> i will only use py3
[23:13:34] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 246 seconds)
[23:13:37] <patchie> so, virtualenvwrapper will only make virtual environments within the same python version?
[23:13:38] *** Joins: greedom (~greedom@p200300de6714360009c6eb8f0484c9b8.dip0.t-ipconnect.de)
[23:13:39] <SnoopJ> patchie, as grym says, those tools don't all do the same job, so making sure you know which ones solve which problems is a good first step
[23:13:40] *** Joins: nickodd (~nickodd@user/nickodd)
[23:13:53] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[23:14:06] <grym> patchie: you gotta have the base interpreter installed to make a venv from it, yes
[23:14:08] *** Quits: vulpes_vulpes (~vulpes_vu@62-64-207-88.dynamic.dial.as9105.com) (Remote host closed the connection)
[23:14:25] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[23:14:27] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[23:15:03] <patchie> grym: but lets say i have py3.8 and py3.9. If i use virtualenvwrapper, it will only either use 3.8 or 3.9, and will not work between the versions?
[23:15:18] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[23:15:27] <patchie> so then i would need pyenv-virtualenvwrapper i guess?
[23:15:42] <patchie> it would take python version and libraries into account?
[23:15:47] *** Quits: goepsilongo_ (~goepsilon@2603-7000-ab00-62ed-5552-c541-2a06-6581.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[23:16:06] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[23:17:18] *** Joins: Church (~aleph@68.161.207.188)
[23:17:24] <grym> patchie: i've never used virtualenvwrapper
[23:17:45] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 250 seconds)
[23:17:53] <ChrisWarrick> virtualenvwrapper isn’t really necessary for anything
[23:17:55] <grym> patchie: i have 8 interpreter versions installed currently.  when i need a venv made from one of them, i call /that/interpreter -m venv
[23:17:58] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:f501:9ac:5ed8:2ed7)
[23:17:59] <ChrisWarrick> patchie: function workon { source "$WORKON_HOME/$1/bin/activate" }
[23:18:25] <ChrisWarrick> patchie: this one bash function + creating venvs with python -m venv $WORKON_HOME/whatever   will do everything you want
[23:18:27] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[23:19:11] <patchie> ChrisWarrick: but wouldnt pyenv do it easier for you?
[23:19:23] <ChrisWarrick> patchie: why would it?
[23:19:37] <patchie> i thought it was the purpose of pyenv
[23:19:39] <grym> pyenv won't do that; it will let you install loooots of pythons though
[23:19:40] <ChrisWarrick> patchie: pyenv installs pythons, it doesn’t concern itself with environments
[23:19:46] <patchie> i guess they made it for some reason :P
[23:19:49] *** Quits: paul424 (~tom@ip-5-172-234-32.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[23:20:06] <grym> yeah, building python
[23:20:26] <patchie> ChrisWarrick: thats why i am talking about pyenv-virtualenvwrapper, with seems to be both
[23:20:52] <grym> i don't use that either
[23:20:57] <ChrisWarrick> patchie: aye, but virtualenvwrapper isn’t that useful
[23:21:22] <patchie> then you can use pyenv-virtualenv instead then :P
[23:22:11] <grym> at least that defaults to -m venv
[23:22:22] <patchie> the wrapper seems to just add some command line commands you can use to make it easier
[23:22:37] <grym> right; there are many ways to skin that cat
[23:23:10] <grym> some more complicated than others, so it's kind of down to taste
[23:23:23] <patchie> yep
[23:23:48] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[23:23:48] <patchie> but have anyone tested pyenv-virtualenv or pyenv-virtualenvwrapper?
[23:23:55] <grym> not i
[23:24:19] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[23:25:10] <Repiphany> pyenv for different python versions + pyenv-virtualenv for handling virtualenv creation from those different python versions
[23:25:49] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 246 seconds)
[23:26:18] <patchie> Repiphany: And adding wrapper, you will get some extra commands to make it easier as far as i understand.
[23:26:28] *** Joins: IndigoLace (~k5kgc@user/IndigoLace)
[23:26:53] <Repiphany> You don't need a wrapper on top of that
[23:26:56] <patchie> so... it would then be best to use pyenv-virtualenvwrapper then?
[23:27:05] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[23:27:12] *** Quits: fling (~fling@user/fling) (Remote host closed the connection)
[23:27:15] <patchie> dont need, but if you like the extra commands...
[23:27:27] *** Joins: fling (~fling@user/fling)
[23:27:31] *** Quits: rampart (~rampart@7.sub-174-250-0.myvzw.com) (Remote host closed the connection)
[23:27:51] *** Quits: greedom (~greedom@p200300de6714360009c6eb8f0484c9b8.dip0.t-ipconnect.de) (Remote host closed the connection)
[23:27:55] <patchie> and it would be best if you want to just code, and every time you make a new project, you can use the last python version. does that make sense?
[23:28:10] *** Joins: rampart (~rampart@4.sub-174-250-0.myvzw.com)
[23:28:18] *** Quits: Barones (~Barones@user/Barones) (Read error: Connection reset by peer)
[23:28:43] *** Joins: greedom (~greedom@p200300de6714360009c6eb8f0484c9b8.dip0.t-ipconnect.de)
[23:29:13] *** Quits: konfusedagain (~konfuseda@125.99.177.198) (Ping timeout: 256 seconds)
[23:29:13] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Read error: Connection reset by peer)
[23:29:23] *** Joins: idontnee_ (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[23:29:36] <Repiphany> https://github.com/pyenv/pyenv-virtualenvwrapper#pyenv-virtualenvwrapper
[23:29:54] <Repiphany> pyenv-virtualenv makes virtualenvwrapper redundant
[23:30:32] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[23:31:07] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[23:31:14] *** Joins: SuperLag (~akulbe@user/superlag)
[23:31:16] <patchie> if its redundant, why do you have both then?
[23:31:47] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[23:32:06] <Repiphany> I don't use both
[23:32:33] *** Joins: konfusedagain (~konfuseda@125.99.177.198)
[23:32:43] <patchie> no, but why does both exist if they are redundant
[23:32:48] <patchie> that doesnt make sense to me
[23:32:57] <Repiphany> Why do all of those tools mentioned before exist
[23:33:00] *** Quits: giusb (~giusb@user/giusb) (Ping timeout: 240 seconds)
[23:33:10] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 246 seconds)
[23:33:19] <grym> https://xkcd.com/927/  that's why :P
[23:33:20] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[23:33:28] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 260 seconds)
[23:33:32] <patchie> Repiphany: SnoopJ> patchie, as grym says, those tools don't all do the same job, so making sure you know which ones solve which problems is a good first step
[23:33:32] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Read error: Connection reset by peer)
[23:33:39] <Yhg1s> patchie: because sometimes you want to use virtualenvwrapper _without_ pyenv.
[23:34:06] *** Parts: IndigoLace (~k5kgc@user/IndigoLace) ()
[23:34:07] <Repiphany> and I said what those tools (pyenv and pyenv-virtualenv) do
[23:34:16] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[23:34:40] *** Joins: jpn (~jpn@user/jpn)
[23:35:55] <patchie> but, does it make sense to use pyenv-virtualenv / pyenv-virtualenvwrapper if i want to always use last python version when i start a new project?
[23:36:17] <patchie> is that a valid statement?
[23:36:31] *** Quits: MrFantastik (~f@176.108.141.162) (Remote host closed the connection)
[23:36:40] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[23:37:11] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[23:38:12] <grym> patchie: no
[23:38:20] <Repiphany> You have to install each python version manually with pyenv, then you can set that to be the "global" version used by default or otherwise specify exact versions when making virtualenvs
[23:38:29] <grym> using pyenv-virtualenv / pyenv-virtualenvwrapper will not automatically get you the latest python
[23:38:49] <grym> nor will pyenv!
[23:39:13] <grym> you'll always `pyenv install <some.particular.version>` and then use that version to make an env
[23:39:19] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[23:39:30] <patchie> yeah, i will need to install last version of python my self, of course.
[23:39:37] <grym> pyenv-virtualenv / pyenv-virtualenvwrapper are two out of many ways to "then use that version to make an env"
[23:39:43] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[23:40:02] *** Quits: konfusedagain (~konfuseda@125.99.177.198) (Ping timeout: 272 seconds)
[23:40:13] <PJBoy> I thought there was a format string specifier for printing the name of an expression followed by its value
[23:40:18] <grym> you could just as well $PYENV_ROOT/.versions/<thatversion>/bin/python -m venv, if you're feeling brutalist today
[23:40:22] <patchie> but with pyenv-virtualenv / pyenv-virtualenvwrapper, it will be easier to go between the projects when using different python versions, correct?
[23:40:31] <grym> PJBoy: in 3.8+, f'{thevar=}'
[23:40:41] <Repiphany> `pyenv install 3.10.4; pyenv virtualenv 3.10.4 venvname; pyenv activate venvname`
[23:41:00] <PJBoy> grym, oh there's no colon, thanks!
[23:41:12] <grym> PJBoy: colons are for the format DSL, yep
[23:41:22] <grym> i .. don't know if you can combine them, come to think of it
[23:41:23] <patchie> Repiphany: Aha, ok. got it.
[23:41:47] *** Quits: jess (~jess@libera/staff/cat/jess) ()
[23:41:55] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:42:02] *** Joins: konfusedagain (~konfuseda@125.99.177.198)
[23:42:19] <patchie> so, for the really hard question, hehe. How do i do this in vscode? (waiting for the silence)
[23:43:59] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[23:44:01] <Repiphany> vscode python extension is already aware of pyenv venvs for me
[23:44:33] <patchie> Repiphany: so you dont need any virtualenv specific extension?
[23:44:41] <Guest5713> seem to work thx
[23:45:07] *** Quits: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com) (Quit: Haxxa flies away.)
[23:45:57] <SnoopJ> grym, you can!
[23:46:00] *** Joins: slav0nic (slav0nic@python.su)
[23:46:05] <Repiphany> This install only has the microsoft python extension and it finds them
[23:46:26] <SnoopJ> e.g. `x = 42; print(f"{x=:.3f}")` outputs 'x=42.000'
[23:46:52] <patchie> Repiphany: Cool! thats good news. but do you still need to use terminal window at all? only when making new environments maybe?
[23:47:14] *** Joins: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com)
[23:47:23] *** Joins: sobkas (~sobkas@95.175.17.217)
[23:48:13] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 246 seconds)
[23:48:16] *** Quits: white2 (~mahengrui@user/mahengrui1) (Ping timeout: 272 seconds)
[23:48:54] *** Quits: vlm (~vlm@user/vlm) (Ping timeout: 272 seconds)
[23:48:59] <grym> patchie: i generally don't trust my editors and IDEs to do this smartly, i always set up an environment in a terminal, and then tell my tools what to use
[23:50:50] <patchie> grym: yeah, i just dont want the hassle, if i dont have to.
[23:51:24] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:f501:9ac:5ed8:2ed7) (Remote host closed the connection)
[23:51:43] <patchie> grym: Dont get me wrong, when i am coding in terminal, i love to use the terminal, but when using vscode, its like doing two duplicate tasks...seems redundant.
[23:54:10] *** Joins: sokan (~sokan@athedsl-4549484.home.otenet.gr)
[23:54:21] <jinsun__> vscode has a integrated terminal, you don't need to open a separate tereminal window
[23:54:35] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[23:54:53] <patchie> jinsun__: i am aware, i just dont want to do it redundantly.
[23:55:02] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 260 seconds)
[23:55:14] <grym> patchie: editors screw it up more often than i do
[23:55:25] *** Joins: aslicedbanjo (~aslicedba@host86-134-28-13.range86-134.btcentralplus.com)
[23:55:34] <patchie> my questions still stands: can i use environments in vscode without using the terminal.
[23:55:36] <jinsun__> patchie: it is one of the best features of vscode, use it
[23:55:41] <SnoopJ> patchie, the answer is 'yes'
[23:55:53] <SnoopJ> will you enjoy this? we can't really tell you the answer to that one. try it and see
[23:56:32] <patchie> SnoopJ: aha, how do i make a new environment then? will it make the environment it self when making a new project?
[23:56:33] *** Quits: irf21k (~irf21k@223.237.152.249) (Read error: Connection reset by peer)
[23:56:51] *** Joins: stdout (~stdout@2605:ab80:b000:7202:983b:dcb7:16d6:b705)
[23:57:38] <SnoopJ> patchie, the VSCode documentation tells you to use `python3 -m venv` but I'm sure there is an extension that will do this from inside VSCode
[23:57:40] <SnoopJ> https://code.visualstudio.com/docs/python/environments#_create-a-virtual-environment
[23:58:05] <jinsun__> MS python extension doesn't provide a gui for that I think, but there is another extension from the author of the main extension
[23:58:08] <jinsun__> https://marketplace.visualstudio.com/items?itemName=donjayamanne.python-environment-manager
[23:58:20] *** Joins: pedahzur (~jkugler@2600:380:7038:7446:be6a:57f0:1cb3:21a1)
[23:58:59] <jinsun__> hmm but looks like it is "Coming soon"
[23:59:52] <jinsun__> for now it just opens terminals and shows already installed packages
