[00:01:19] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[00:01:40] *** Parts: clf059 (~clf059@2601:603:1580:3970::aae1) (Textual IRC Client: www.textualapp.com)
[00:01:52] *** Quits: humberto1 (~humbertow@189.236.30.197) (Ping timeout: 250 seconds)
[00:02:48] *** Quits: Syzygy_ (~Syzygy@2001:871:265:1cdc:b4b3:44f3:ef8:e3b6) (Remote host closed the connection)
[00:03:06] *** Joins: Syzygy_ (~Syzygy@2001:871:265:1cdc:b4b3:44f3:ef8:e3b6)
[00:03:41] *** Quits: arinov_ (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[00:03:55] *** Quits: pdc (~raffaem@95.74.95.143) (Ping timeout: 256 seconds)
[00:04:50] *** Joins: bam32 (~bambams@user/bambams)
[00:06:15] *** Joins: Atque (~Atque@user/atque)
[00:07:20] *** Quits: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr) (Ping timeout: 272 seconds)
[00:07:31] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[00:07:54] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-bd2b-5293-8c83-b4c5.res6.spectrum.com)
[00:09:17] *** Quits: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2) (Ping timeout: 240 seconds)
[00:10:15] *** Quits: Deneb (~johnch@245.82.159.143.dyn.plus.net) (Quit: Leaving)
[00:10:37] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 240 seconds)
[00:12:15] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[00:12:18] *** Quits: radiojosh (~Joshua@70-131-32-80.lightspeed.stlsmo.sbcglobal.net) (Remote host closed the connection)
[00:12:31] *** Joins: radiojosh (~Joshua@70-131-32-80.lightspeed.stlsmo.sbcglobal.net)
[00:13:43] *** Joins: lbracher (~lucas@ptr-178-51-124-115.dyn.mobistar.be)
[00:14:11] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[00:15:10] <st0ckholm> sveinse, can i access that variable even from within the class, like via self. ... ?
[00:15:38] <st0ckholm> that class variable that my class inherited
[00:16:01] *** Quits: t3nj1n_ (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net) (Remote host closed the connection)
[00:16:01] *** Quits: t3nj1n (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net) (Remote host closed the connection)
[00:16:15] *** Quits: resmo (~resmo@2a00:d420:9:8a00:1336:ed64:58a3:7464) (Ping timeout: 268 seconds)
[00:16:49] <sveinse> st0ckholm: yes
[00:18:38] <st0ckholm> oh, how? in my case self.INTERVAL_SECS?
[00:18:53] <sveinse> yes
[00:18:53] <st0ckholm> its not an instance variable, is it?
[00:19:11] <st0ckholm> it was a class variable
[00:19:14] <Wooble> st0ckholm: attributes on instances are looked up on the class if the instance didn't define them
[00:19:27] <st0ckholm> ah, ok
[00:19:51] *** Joins: xa0s (~xa0s@mab.sdf.org)
[00:20:23] <Wooble> (if you think about it, instance methods are also just attributes on the class, albeit with some magic when you call them)
[00:20:24] <sveinse> st0ckholm: it will be an instance var if you mutate it, otherwise its looked up into the class
[00:20:37] <sveinse> st0ckholm: what Wooble just said :D
[00:20:53] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[00:21:02] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-b19e-d71a-e755-ca72.res6.spectrum.com) (Read error: Connection reset by peer)
[00:21:17] <st0ckholm> ok, thanks, that makes it clearer.
[00:22:14] *** Quits: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net) (Quit: Quit)
[00:23:33] <Wooble> (well, if you re-assign them; you can mutate the objects class attributes refer to all you want and they'll still be class attributes)
[00:24:14] <sveinse> heh, lets hope it doesn't confuse too much
[00:25:08] *** Joins: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net)
[00:25:20] *** Quits: supastupid (~dexter@2601:187:8080:b9f0::a9e3) (Quit: Konversation terminated!)
[00:26:12] <Wooble> probably avoid doing that unless you really know what you're doing, since mutating things shared by all instances gets confusing :)
[00:26:38] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[00:26:54] *** Joins: tejr (~tejr@user/tejr)
[00:27:50] <sveinse> I can't remember ever needing to mutate a class attr
[00:28:04] *** Joins: beli6148 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com)
[00:28:04] <grym> i don't really remember ever needing them...
[00:28:33] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
[00:29:43] *** Quits: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com) (Ping timeout: 256 seconds)
[00:29:43] *** beli6148 is now known as beli6147
[00:29:49] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:7429:3422:7c3f:d976) (Ping timeout: 268 seconds)
[00:29:53] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:30:41] * hodapp stabs Dask in the face
[00:30:46] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[00:31:39] *** Joins: shaan150 (~shaan150@host62-7-180-55.range62-7.btcentralplus.com)
[00:31:56] <hodapp> maybe, maybe the docs on dask.distributed.Event() could have mentioned that .set() and .wait() are awaitable when used in an async context, raaawr
[00:31:58] *** Joins: Masterphi (~Masterphi@user/masterphi)
[00:32:03] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[00:34:59] *** Quits: Guest2141 (~Guest21@85.137.0.51.dyn.user.ono.com) (Quit: Client closed)
[00:35:19] *** Quits: bam32 (~bambams@user/bambams) (Quit: I mean the best with what I say. It doesn't always sound that way.)
[00:37:21] *** Quits: jpodivin (~jpodivin@cgnat44-pool3-68-72.poda.cz) (Ping timeout: 256 seconds)
[00:37:31] <sveinse> hodapp: eh? A method that can be awaitable depending on if it running async?
[00:39:21] <hodapp> sveinse: it's weird to me, but it is what they do with https://docs.dask.org/en/stable/futures.html#distributed.Pub too
[00:39:45] <hodapp> look in their examples
[00:39:58] *** Joins: KevinX (~KevinX@user/KevinX)
[00:40:30] <exarkun> It isn't awaitable depending on "if it is running async"
[00:40:36] <exarkun> It is awaitable if you pass `asynchronous=True`
[00:40:57] <exarkun> (and then you must await it)
[00:40:59] <sveinse> aha, that makes more sense
[00:41:09] <hodapp> exarkun: just verified in my own tests that that's not the case
[00:41:19] <hodapp> asynchronous=True was never use in mine
[00:41:26] <sveinse> hodapp: what object do you get from the function?
[00:41:27] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-bd2b-5293-8c83-b4c5.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[00:41:27] <hodapp> s/use/used/
[00:41:49] *** Quits: jay-m1261 (~jay-m@154.72.150.177) (Ping timeout: 240 seconds)
[00:41:49] *** Quits: jay-m126_ (~jay-m@154.72.150.177) (Ping timeout: 240 seconds)
[00:41:49] *** Quits: jay-m126 (~jay-m@154.72.150.177) (Ping timeout: 240 seconds)
[00:41:49] <sveinse> it should be evident if the object is something that can be awaited on
[00:42:54] <hodapp> it's returning a coroutine when I do it from inside a Dask task
[00:43:01] <hodapp> outside that, it blocks
[00:43:19] <sveinse> (A regular function can return an awaitable object, so a function does not need to be async def to be awaitable from async.)
[00:43:45] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[00:43:50] <shaan150> Â Hi all,
[00:43:51] <shaan150> i was wondering if anyone could assist with a threading, tkinter and socket module issue?
[00:43:55] <theseb> what does pandas give you that numpy does not?
[00:43:58] <sveinse> hodapp: so dask is doing some magic on detecting what the current execution context is
[00:44:05] *** Joins: bluedust (~bluedust@117.222.189.19)
[00:44:09] <hodapp> sveinse: seems it is because I have no clue how else it could
[00:44:30] <hodapp> and this is running in Jupyter, where the notebook cells will already handle async things. so it isn't detecting that
[00:44:45] <sveinse> theseb: focus on data science tasks, vs. a "vanilla" numeric platform
[00:44:46] <hodapp> theseb: something closer to database-like semantics
[00:44:50] <exarkun> hodapp: I guess Dask could set up a context that conveys the asynchronous=True part in a context var
[00:44:53] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[00:45:09] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[00:45:18] <hodapp> exarkun: where is this asynchronous=True? I've seen it only for when I create the Client
[00:45:43] <exarkun> hodapp: It seems a lot of Dask APIs take it?  I found several references on the page w/ distributed.Pub API docs
[00:46:09] <exarkun> To be clear, I have never used Dask, I am just reading the API docs.  I should probably stop because there's a good chance I don't know what I'm talking about.
[00:46:11] <sveinse> exarkun: are the current context in py "global". I.e. that I might get the current context object from deep within a call stack (and that the context object is not passed down)?
[00:46:19] <shaan150> I am using the main thread for my GUI, alongside three other threads one to handle my states for my gui, one to handle hosting a chatroom / server and one for retreiving information upon connecting to the server, however, after starting the connection the locally hosted server my main thread no longer continues despite it having the condition of
[00:46:20] <shaan150> that thread
[00:46:20] <shaan150> or to better phrase it, it freezes and doesn't progress on the GUI aspect of things
[00:46:21] <shaan150> Everything runs as it should in the background
[00:46:28] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 268 seconds)
[00:46:32] <exarkun> sveinse: The kind of "context" that I mean comes from the `contextvars` stdlib module
[00:46:44] <sveinse> exarkun: ah
[00:46:57] <exarkun> sveinse: It's kind of like dynamic scoping, if you know what that is.
[00:47:06] <sveinse> exarkun: yes, I do
[00:47:40] *** Joins: tga (~tga@p54a75da2.dip0.t-ipconnect.de)
[00:47:40] *** Quits: tga (~tga@p54a75da2.dip0.t-ipconnect.de) (Changing host)
[00:47:40] *** Joins: tga (~tga@user/tga)
[00:47:41] <hodapp> exarkun: .wait isn't taking any such arg (annoyingly... I was hoping you were right because it would have solved some problems)
[00:48:03] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[00:48:14] *** Quits: bluedust (~bluedust@117.222.189.19) (Ping timeout: 250 seconds)
[00:49:58] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:d80e:f8e4:65fa:55e) (Ping timeout: 250 seconds)
[00:51:28] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[00:51:28] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[00:51:34] <sveinse> hodapp: yeah, its defined in https://distributed.dask.org/en/latest/_modules/distributed/utils.html search for class SyncMethodMixin and def sync. It tests if the current loop is the running loop
[00:51:47] <hodapp> sveinse: oh, good to know
[00:51:58] <hodapp> blugh, I don't much like that design
[00:52:10] <hodapp> would much rather be explicit on async vs. sync
[00:52:37] *** Quits: nomic (~nomic@85.203.36.100) (Remote host closed the connection)
[00:52:55] *** Joins: nomic (~nomic@85.203.36.100)
[00:53:01] <exarkun> someone is probably quite proud of that check
[00:53:21] <hodapp> probably
[00:53:31] *** Quits: lbalhar (~lbalhar@93.185.13.26) (Ping timeout: 256 seconds)
[00:53:56] <sveinse> It's interesting to see thou. I've ported another package from regular sync code to to async, and I've yet to make up my mind if the package should be capable of supporting both sync or async mode (not at the same instance thou).
[00:54:00] *** Quits: SoF (~skius@user/skius) (Ping timeout: 252 seconds)
[00:54:30] *** Joins: vicfred (~vicfred@user/vicfred)
[00:54:41] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::78dd) (Ping timeout: 256 seconds)
[00:54:49] *** Joins: SoF (~skius@user/skius)
[00:55:27] <sveinse> The good thing about keeping sync in there is it keeps a link to the upstream code. But at the same time, having both might confuse at it might seem like it can do both methods at the same time. Or inadvertendly invoke the other.
[00:55:46] *** Joins: c4017w__ (~c4017@209.52.68.8)
[00:56:02] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Quit: WeeChat 2.8)
[00:56:11] *** Quits: paul424 (~tom@ip-5-172-236-148.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[00:56:46] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[00:56:51] <sveinse> To the point: I did not fall for the temptation of having one function that returns value or awaitable depending on context like this. Its two distinct methods.
[00:58:11] <exarkun> I think there's a better pattern for supporting both than this
[00:58:31] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Remote host closed the connection)
[00:58:43] <exarkun> Maybe it is the one you describe - two separate methods.
[00:59:00] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Ping timeout: 240 seconds)
[00:59:02] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[00:59:04] *** Joins: Staunch (~Staunch@137.83.202.22)
[00:59:12] <exarkun> especially if the 2nd method is on the result from the first method
[00:59:18] <pycurious> If multiple processes try to use the same file as log file - what happens? Can that cause a system hang?
[00:59:44] *** Quits: cosimone (~user@93-47-229-38.ip115.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[00:59:48] <exarkun> of course, everyone should just write everything sans-io and not worry about sync-vs-async in all their application code
[01:00:03] <exarkun> pycurious: modern OS will not crash if two processes try to open the same file for writing at the same time
[01:00:14] <exarkun> maybe BeOS would sometimes
[01:00:21] *** Quits: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:6938:5d7:7e7:1023) (Quit: Textual IRC Client: www.textualapp.com)
[01:01:03] *** Quits: darksun (~darksun@user/darksun) (Quit: Lost terminal)
[01:02:00] *** Joins: Gustavo6046__ (~Gustavo60@user/gustavo6046)
[01:02:42] *** Joins: resmo (~resmo@214-52-239-77.dyn.cable.fcom.ch)
[01:03:36] *** Quits: zodd (~zodd@84-106-80-107.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[01:03:52] *** Joins: Adoi (~Adoi@user/adoi)
[01:03:59] *** Joins: Cera (~Cera@user/Cera)
[01:04:27] *** Quits: Gustavo6046_ (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[01:05:06] *** Quits: Adoi (~Adoi@user/adoi) (Client Quit)
[01:05:15] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 240 seconds)
[01:05:17] *** Joins: mug3n (~mugen@gateway/tor-sasl/mugen)
[01:06:12] *** Joins: resmo_ (~resmo@2a00:d420:9:8a00:60b1:7b57:26ea:bc46)
[01:06:30] *** Quits: resmo (~resmo@214-52-239-77.dyn.cable.fcom.ch) (Read error: Connection reset by peer)
[01:06:49] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::78dd)
[01:07:35] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 240 seconds)
[01:08:07] *** Gustavo6046__ is now known as Gustavo6046
[01:08:51] *** Quits: maggotbrain (~maggotbra@c-73-225-163-217.hsd1.wa.comcast.net) (Remote host closed the connection)
[01:08:53] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[01:09:40] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: Textual IRC Client: www.textualapp.com)
[01:10:12] *** Joins: maggotbrain (~maggotbra@c-73-225-163-217.hsd1.wa.comcast.net)
[01:10:15] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[01:10:33] *** Quits: maggotbrain (~maggotbra@c-73-225-163-217.hsd1.wa.comcast.net) (Remote host closed the connection)
[01:10:46] *** Quits: resmo_ (~resmo@2a00:d420:9:8a00:60b1:7b57:26ea:bc46) (Client Quit)
[01:11:16] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[01:11:23] *** Joins: maggotbrain (~maggotbra@c-73-225-163-217.hsd1.wa.comcast.net)
[01:11:25] *** Quits: dalan62 (~dalan@59-102-63-107.tpgi.com.au) (Quit: Ping timeout (120 seconds))
[01:12:15] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[01:12:18] <hodapp> exarkun: what? BeOS would?
[01:12:32] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[01:12:56] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[01:12:57] *** Joins: nathanchapman (~nathancha@139.64.171.72)
[01:14:09] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[01:14:14] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[01:14:15] *** Quits: wac (~wac@user/wac) (Quit: Zzzzâ¦)
[01:14:54] *** Joins: rampart (~rampart@2.sub-174-250-16.myvzw.com)
[01:15:09] <exarkun> hodapp: Probably not, just being snarky.
[01:15:10] *** Joins: dalan62 (~dalan@59-102-63-107.tpgi.com.au)
[01:15:25] <exarkun> hodapp: But who knows.  A massively multithreaded C++ mess?  I wouldn't bet /against/ it...
[01:16:02] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[01:16:04] <hodapp> well, it is one OS that I never managed to crash despite doing stupid things on it
[01:16:41] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 268 seconds)
[01:16:59] *** Quits: foobaz2124317 (~foobaz212@152.37.103.80) (Quit: Client closed)
[01:17:13] *** Joins: agumonkey (~user@88.163.231.79)
[01:17:16] *** Joins: foobaz2124317 (~foobaz212@152.37.103.80)
[01:17:43] *** Quits: maggotbrain (~maggotbra@c-73-225-163-217.hsd1.wa.comcast.net) (Remote host closed the connection)
[01:17:44] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[01:18:50] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[01:19:23] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[01:19:42] *** Joins: maggotbrain (~maggotbra@c-73-225-163-217.hsd1.wa.comcast.net)
[01:20:34] *** Quits: cdown (~cdown@163.114.131.1) (Remote host closed the connection)
[01:20:47] *** Joins: cdown (~cdown@163.114.131.1)
[01:21:07] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[01:21:57] *** Quits: aslicedbanjo (~aslicedba@host86-168-244-22.range86-168.btcentralplus.com) (Quit: Leaving.)
[01:22:07] *** Quits: foobaz2124317 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[01:22:50] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 260 seconds)
[01:23:07] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[01:23:16] *** Joins: zeden (~zeden@user/zeden)
[01:23:25] *** Joins: mickey8 (~user@user/mickey)
[01:26:32] <nedbat> other than glossing over the difference between an iterable and a list, how do people feel about this explanation of for/else?   https://gist.github.com/faa2a05722462d02dc24d5572c918dcd
[01:28:30] <zumba_addict> what would a command to get more details of a remote package I instaleld?
[01:28:56] <pycurious> nedbat: Line 3 and Line 6 being related is not very intuitive to me.
[01:28:57] <nedbat> zumba_addict: what details are you looking for?
[01:29:07] <zumba_addict> like project location
[01:29:20] <zumba_addict> it's ok, i found the package in our internal registry
[01:29:20] <nedbat> pycurious: right, this is meant to help make that connection.  The else in both chunks serve the same purpose
[01:29:20] <hodapp> nedbat: is this currently implemented or more hypothetical?
[01:29:30] <nedbat> hodapp: for/else has been in Python for a long time
[01:30:02] <hodapp> WHAT
[01:30:02] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[01:30:22] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[01:30:23] <nedbat> hodapp: I'm tempted to type it again, louder :)
[01:30:54] <pycurious> nedbat: I never use it in my programming, and would vote for its removal actually.
[01:31:10] <pycurious> nedbat: unless you think there is a real usecase for it that really demands that else.
[01:31:13] <nedbat> pycurious: yes, I know this falls into the "rarely used so people shouldn't use it" category
[01:31:35] <nedbat> pycurious: how would you check if the loop never found the thing it was looking for?
[01:31:35] *** Quits: noteness (~noteness@user/noteness) (Ping timeout: 240 seconds)
[01:32:21] *** Joins: noteness (~noteness@user/noteness)
[01:32:51] <hodapp> and if 'seq' is empty, then I'm guessing the else branch runs?
[01:33:15] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 240 seconds)
[01:33:48] <nedbat> hodapp: sure, because no break was encountered.
[01:33:57] <nedbat> hodapp: the "else:" means "didn't break"
[01:34:16] <nedbat> hodapp: so it can also run if seq is not empty
[01:34:38] <hodapp> yeah, I just meant "if", not "iff"
[01:34:47] *** Quits: vlado2 (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c) (Ping timeout: 250 seconds)
[01:34:56] *** Joins: CombatVet (~c4@user/combatvet)
[01:35:02] <nedbat> ok, i was just making sure, because everyone's first guess is that the "else" means "if nothing to loop over"
[01:35:12] <pycurious> nedbat: To me the loop, and searching for an element are two different constructs. Do we need a loop that is looking for something ? If yes, then the syntax should be : lookfor i in container if condition(): .. else: ?
[01:35:14] <Jong> hat is it called when you change a value's type in a way that the value's bit representation changes versus when you want the bits to be exactly the same but just want the variable to be viewed as a different type?
[01:35:41] <nedbat> pycurious: the syntax to look for a thing in a loop is:  for val in seq: if condition(val):
[01:35:50] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[01:35:58] <hodapp> if else is relative to some break here, does it then also work with 'while'?
[01:36:01] <nedbat> Jong: that sounds like different kinds of casting, which don't exist in Python
[01:36:12] <nedbat> hodapp: there is also while/else, yes
[01:36:23] <Jong> nedbat struct.pack  I thought does this?
[01:36:55] <nedbat> Jong: it will pack values into bytes.  i guess you could look at it as casting, but there's no "use these bits just as they are"
[01:37:28] *** Joins: XV8 (~XV8@2601:5cb:c001:50::c80f)
[01:37:29] <pycurious> nedbat: Then your explanation looks good.
[01:37:36] <nedbat> hodapp: do you think the gist is a good way to demonstrate it?
[01:37:38] <nedbat> pycurious: thanks
[01:37:51] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[01:38:15] <hodapp> nedbat: yeah, I think so
[01:39:01] *** Quits: ubert (~Thunderbi@p200300ecdf3be9cb0930a09fd733e6d6.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[01:39:01] *** Joins: ub (~Thunderbi@p548c8d84.dip0.t-ipconnect.de)
[01:39:22] *** Quits: maggotbrain (~maggotbra@c-73-225-163-217.hsd1.wa.comcast.net) (Remote host closed the connection)
[01:39:34] *** Joins: jazzy (~jaziz@user/jaziz)
[01:40:46] *** Joins: maggotbrain (~maggotbra@c-73-225-163-217.hsd1.wa.comcast.net)
[01:40:56] *** Quits: maggotbrain (~maggotbra@c-73-225-163-217.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[01:41:20] *** ub is now known as ubert
[01:41:22] *** Joins: maggotbrain (~maggotbra@c-73-225-163-217.hsd1.wa.comcast.net)
[01:44:47] *** Quits: dreamon (~dreamon@pd9503526.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[01:45:15] *** Quits: onichomp (~onichomp@2806:264:4408:8:1573:351a:7841:f28c) (Quit: onichomp)
[01:46:44] *** Quits: johnkeats7 (~johnkeats@2804:14c:32:a0cc:8cbb:b28f:1e92:7e9e) (Ping timeout: 250 seconds)
[01:48:02] <zerosum> faceface sorry I was just looking at your reply regarding: https://stackoverflow.com/questions/38987/how-do-i-merge-two-dictionaries-in-a-single-expression-take-union-of-dictionari
[01:48:09] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:ec4b:7733:bb94:ccce)
[01:48:44] <zerosum> the problem is that I don't want to merge two dictionaries, I simply want to remove a list item (dictionary) that's a duplicate
[01:48:48] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[01:49:02] *** Joins: foobaz2124317 (~foobaz212@152.37.103.80)
[01:49:06] <zerosum> here's my list: https://bpa.st/7A6A
[01:49:20] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 250 seconds)
[01:49:31] <zerosum> as you can see I just want to remove either one of those which are the same just in different order
[01:49:33] *** Joins: humberto1 (~humbertow@189.236.30.197)
[01:49:42] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[01:49:52] *** Quits: spacenautx (~spacenaut@user/spacenautx) (Quit: WeeChat 3.4)
[01:51:01] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 256 seconds)
[01:51:17] *** lukedashjr is now known as luke-jr
[01:51:50] *** Quits: icy_hot (~icy_hot@106.241.29.252) (Quit: WeeChat 3.4)
[01:52:12] *** Gustavo6046_ is now known as Gustavo6046
[01:52:22] *** Quits: humbertowoody (~humbertow@189.236.30.197) (Ping timeout: 250 seconds)
[01:52:49] *** Parts: nathanchapman (~nathancha@139.64.171.72) (WeeChat 3.4)
[01:53:49] *** Joins: pfloyd (floyd@c-98-242-53-178.hsd1.ca.comcast.net)
[01:53:50] <exarkun> zerosum: Where are you stuck?
[01:53:55] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[01:54:55] *** Quits: maxzor__ (~maxzor@2a01cb04054faa00255ff5c1b41e312a.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[01:55:27] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[01:55:38] <pfloyd> I'd like to read in a yaml file using yaml.safe_load(fh) in a context manager block, but need to manipulate the data (by line) as it's read in. What's the best way to accomplish that? I could read the input and write a temp file with the modifications then load that but it seems like there should be an inline way. suggestions?
[01:56:11] <exarkun> pfloyd: convert it to xml and use a sax parser
[01:56:23] *** Joins: c4017w_ (~c4017@209.52.68.8)
[01:56:29] <pfloyd> what I'm trying to do is replace things acting as templates (e.g. %%FILE_NAME%% replaced with a value)
[01:56:31] <zerosum> exarkun so I have a list of dictionaries that look like this: https://bpa.st/7A6A but as you can see those two items are the same, just in different order. I want to leave only one item that's not the same
[01:57:06] <exarkun> pfloyd: why do you care if it is line by line or not?  does your yaml document not fit in memory?
[01:57:06] *** Joins: Zeturic (~Orimendix@50.26.218.162)
[01:57:19] <exarkun> zerosum: right, but where are you stuck?
[01:57:33] <pfloyd> exarkun: what I really am trying to do is implement a pre-processor of sorts. and no, the file size will likely be small so memory is not a concern
[01:57:35] <zerosum> exarkun lol, that I have no idea how to do it :)
[01:57:47] *** Quits: XV8 (~XV8@2601:5cb:c001:50::c80f) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[01:58:27] *** Quits: lbracher (~lucas@ptr-178-51-124-115.dyn.mobistar.be) (Remote host closed the connection)
[01:58:46] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[01:58:57] <exarkun> zerosum: Ok.  For starter, let's say you have two elements from that list.  How would you decide they're "the same"?
[01:59:08] *** Joins: mickey8 (~user@user/mickey)
[01:59:25] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[02:00:01] *** Quits: Gustavo6046_ (~Gustavo60@user/gustavo6046) (Client Quit)
[02:00:04] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[02:00:24] <Repiphany> Sounds like you want a set if you don't care whether the strings are keys or values
[02:00:29] <Jong> nedbat I'm curious what you think of this? https://stackoverflow.com/questions/51502600/what-is-the-python-equivalent-of-cpp-reinterpret-cast/51502627.  It looks like there is a way to reinterpret the underlying bits of a value?
[02:00:44] <Jong> pack to float, unpack as int
[02:00:54] <zerosum> exarkun: I would just compare and check if they are the same
[02:01:20] <zerosum> if dic_x == dic_y
[02:01:42] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 268 seconds)
[02:01:46] <zerosum> or dic_key == dic == value?
[02:02:13] <zerosum> or rather, dict_key == dict_value
[02:02:30] <grym> zerosum: does the order of keys in the dict matter
[02:03:14] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[02:03:16] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 245 seconds)
[02:03:25] <zerosum> not really but I would like the keys to be the CIDR with the lowest prefix (network mask)
[02:03:47] <nedbat> Jong: ok, that re-interprets the bits, yes.  I thought you meant a python object to bytes with struct.pack.
[02:04:29] <exarkun> zerosum: All of your examples have one key/value pair per dictionary.  Do values always look like that?
[02:04:40] <nedbat> pfloyd: sounds like you should parse the whole yaml file, then manipulate the python dicts/lists/etc.
[02:04:53] <exarkun> zerosum: Could an element be {'192.168.1.0/24': '172.16.0.0/24', '172.16.0.0/24': '192.168.1.0/24'}?
[02:05:02] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[02:05:44] <pfloyd> nedbat: the exact structure of the YAML needs to be rather loose, or I'd do that, yeah. I think I might just load the file into a string and reg.sub for each of the replacement(s) and create the yaml object from the modified string
[02:06:19] <nedbat> pfloyd: do you mean something like, "i need to adjust strings no matter where they appear in the data"?
[02:07:08] <exarkun> using a regular expression will definitely be broken.  yaml is not a regular grammar.
[02:07:11] <zerosum> exarkun just realized that's not a very accurate example, I repasted with something more accurate: https://bpa.st/YE2Q, and yeah they all have one key/value pair per dictionary
[02:07:37] <exarkun> zerosum: Okay.  So how would you go from a dictionary with one element to a `dict_key` and `dict_value` to use in your comparison?
[02:08:20] <pfloyd> nedbat: yes, ideally only in lists or values of keys but I am willing to keep it simple and allow replacement anywhere if it simplifies the solution. which I think given the small size of the yaml files is to just read the file into a string, manipulate it and safe_load on that modified string
[02:08:57] <pfloyd> exarkun: for the purposes of what I'm doing, and given the need to not adhere to a strict structure in the YAML, it's the best I can hope for
[02:08:58] <nedbat> pfloyd: you'd have to be careful not to break the yaml with the regex.
[02:09:16] <exarkun> pfloyd: yaml supports a limited number of types.  once you load the whole document, it should be easy to visit all of the values and substitute as desired - safely.
[02:09:18] <pfloyd> yep, but as they say garbage in / garbage out
[02:09:22] <nedbat> pfloyd: your other option is to use a recursive function that walks the structure, making changes as it goes.
[02:09:55] <exarkun> pfloyd: I don't think the limitations you're suggesting are real
[02:10:07] *** Joins: Gerula_ (~Gerula@user/gerula)
[02:10:07] *** Gerula is now known as Guest6365
[02:10:07] *** Gerula_ is now known as Gerula
[02:10:21] *** Quits: tga (~tga@user/tga) (Ping timeout: 245 seconds)
[02:10:24] <pfloyd> exarkun: you can believe what you like *shrug*
[02:10:50] <exarkun> good luck
[02:11:00] *** Quits: xx (~xx@user/xx) (Ping timeout: 240 seconds)
[02:12:20] <nedbat> exarkun: that sounded like you though pfloyd didn't know what they were talking about?
[02:12:33] *** Quits: Guest6365 (~Gerula@user/gerula) (Ping timeout: 256 seconds)
[02:12:42] *** Joins: arinov_ (~arinov@213.194.126.155)
[02:13:15] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 240 seconds)
[02:13:27] <exarkun> nedbat: I'm not sure what the question is.  I see how it could sound like that, I guess?
[02:14:11] <exarkun> After, it sounded like pfloyd didn't want to hear from me anymore.  I'm ok with that.
[02:14:25] * SnoopJ didn't read it that way
[02:14:34] <nedbat> the way you worded it, i don't blame them...
[02:14:45] <pfloyd> no I just don't think you should be making assumptions about what I'm working with or the bigger picture.
[02:15:01] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:15:05] <SnoopJ> oh, you said "me" rather than "us". nevermind, then
[02:15:31] <pfloyd> the suggestion to just recursively walk the yaml data structure is a good one, I'll do that so it's more robust as I do not anticipate the need to modify the text in "keys", just lists or values of keys
[02:15:45] <SnoopJ> yea, that's much less likely to blow up on you than regex
[02:15:54] <SnoopJ> or at least when it blows up it will be less magical
[02:16:09] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:16:37] <pfloyd> yes it is, although given what'll be in this yaml it'd be very hard for them to break the regex model. Then again, never try to anticipate all the stupid things end users can do...
[02:16:44] <exarkun> nedbat: I suppose you raise the issue because you think I should do something differently in the future
[02:17:09] *** Joins: arinov (~arinov@45.86.202.80)
[02:17:15] *** Quits: arinov_ (~arinov@213.194.126.155) (Ping timeout: 250 seconds)
[02:17:19] <SnoopJ> exarkun, well, "solve a different problem" is not a great foot to start off on
[02:17:23] *** Joins: Pixi_ (~Pixi@user/pixi)
[02:17:31] <zerosum> exarkun I think I need to create another dictionary for that comparison?
[02:17:31] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[02:17:43] *** Joins: LabMonkey (~LabMonkey@206.255.106.67)
[02:17:47] <exarkun> SnoopJ: Sorry, I don't understand.  Was I saying that?
[02:17:53] <SnoopJ> yes
[02:17:53] *** Joins: matsaman_ (~matsaman@user/matsaman)
[02:18:00] <zerosum> and just compare the two, but they'll be in the same order and wouldn't do what I want
[02:18:01] *** Joins: bloody_ (~bloody@user/bloody)
[02:18:07] <SnoopJ> at least at first, I didn't read the scrollback after that since it seemed to get worse
[02:18:15] <nedbat> exarkun: i think IRC is hard, and peoples' problems are complex, so it's hard to get all the details and context. So it's best to ask questions rather than to make statements about their situation if you can avoid it.
[02:18:16] *** Joins: tinytoast (~squeek@user/tinystoat)
[02:18:17] <exarkun> SnoopJ: Maybe you can lay it out for me, I don't see it.
[02:18:33] <SnoopJ> exarkun, the question was about reading YAML. Your first suggestion was to use not-YAML
[02:18:33] *** Joins: johnkeats7 (~johnkeats@2804:14c:32:a0cc:789a:bf0c:f0b6:8e0b)
[02:18:40] *** Joins: Viewday114 (~Viewday@user/viewday)
[02:18:41] *** Joins: han-`1 (~han`@li987-55.members.linode.com)
[02:18:42] *** Joins: teroshan0 (~teroshan@static.28.181.130.94.clients.your-server.de)
[02:18:46] *** Joins: Melon_Bread3 (~Melon_Bre@li958-238.members.linode.com)
[02:18:48] <pfloyd> nedbat: yes, but I could have been more detailed, that is on me
[02:18:56] <pfloyd> exarkun: I do appreciate the help and suggestions
[02:18:57] <exarkun> Maybe I wasn't precise enough?  They said "given the need to not adhere to a strict structure in the YAML, it's the best I can hope for".
[02:18:58] *** Joins: cryocaustik74 (~cryocaust@user/cryocaustik)
[02:19:05] *** Quits: zaz\ (~zaz@poneybl.eu) (Ping timeout: 256 seconds)
[02:19:05] *** Quits: nawcom (~nawcom@bulldadachat.com) (Ping timeout: 256 seconds)
[02:19:05] *** Quits: oz4ga (~tim@hator.sunsite.lv) (Ping timeout: 256 seconds)
[02:19:05] *** Quits: malwar3hun73r (~malwar3hu@134.122.29.124) (Ping timeout: 256 seconds)
[02:19:05] *** Quits: kurfen_ (~kurfen@213.152.188.7) (Ping timeout: 256 seconds)
[02:19:05] *** Quits: w0rp (~w0rp@w0rp.com) (Ping timeout: 256 seconds)
[02:19:05] *** Quits: hrm (~hrm@nimbus.harmtemolder.nl) (Ping timeout: 256 seconds)
[02:19:05] *** Quits: streety (~streety@li761-24.members.linode.com) (Ping timeout: 256 seconds)
[02:19:15] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[02:19:21] *** Joins: malwar3hun73r (~malwar3hu@134.122.29.124)
[02:19:22] <exarkun> I think that's factually incorrect - you can walk the document object, no matter its shape, and make substitutions.
[02:19:23] *** Joins: Pici` (~bnrubin@li1014-36.members.linode.com)
[02:19:26] *** Joins: oz4ga (~tim@hator.sunsite.lv)
[02:19:30] *** Joins: w0rp (w0rp@2a01:7e00::f03c:91ff:fedb:589)
[02:19:32] *** Joins: yitz_ (~yitz@exercism/yitz)
[02:19:34] *** Joins: Bluefoxicy_ (~Bluefoxic@c-73-132-244-30.hsd1.md.comcast.net)
[02:19:34] *** Joins: kurfen (~kurfen@213.152.188.7)
[02:19:35] <pfloyd> yes essentially the specification of the YAML can change over time, I cannot enforce a strict structure unfortunately
[02:19:35] *** Joins: hrm (~hrm@nimbus.harmtemolder.nl)
[02:19:35] *** Joins: runelind_ (~runelind@user/runelind)
[02:19:37] *** Joins: nawcom (~nawcom@bulldadachat.com)
[02:19:38] *** Joins: strungout (znc@mutant.penguin.fyi)
[02:19:39] *** Joins: achillion (~ach@user/achilleas)
[02:19:39] *** Quits: odrling (~odrling@korone.aidoru.agency) (Ping timeout: 256 seconds)
[02:19:39] *** Quits: libussa (~libussa@libussa.net) (Ping timeout: 256 seconds)
[02:19:40] *** Joins: libussa_ (~libussa@libussa.net)
[02:19:41] *** Joins: pkapp_ (~pkapp@2601:58c:c500:6900:f4a5:9f37:8bd8:f753)
[02:19:44] *** Joins: dharrigan_ (~dharrigan@user/dharrigan)
[02:19:45] *** Joins: zaz\ (~zaz@poneybl.eu)
[02:19:47] *** Joins: mat001_ (~mat001@c-71-202-208-88.hsd1.ca.comcast.net)
[02:19:47] *** Joins: coc0nut_ (~coc0nut@user/coc0nut)
[02:19:49] *** Joins: MJ_ (~mjpieters@zopatista.plus.com)
[02:19:52] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Quit: Goodbye.)
[02:19:52] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[02:20:05] *** Joins: arooni_team_b (~arooni@li1062-244.members.linode.com)
[02:20:08] <pfloyd> exarkun: my response about the structure was that I couldn't assume a static structure, but yes it's simple enough to walk the yaml so it's future proof
[02:20:11] *** Quits: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Remote host closed the connection)
[02:20:12] *** Joins: ThatOtherGuy (~LogicAsid@user/logicaside)
[02:20:12] <exarkun> nedbat: I agree with you that IRC is hard.
[02:20:13] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 256 seconds)
[02:20:13] *** Quits: MJ (~mjpieters@zopatista.plus.com) (Ping timeout: 256 seconds)
[02:20:13] *** Quits: achilleas (~ach@user/achilleas) (Ping timeout: 256 seconds)
[02:20:13] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[02:20:13] *** Quits: Wu (~wu@35.red-88-24-200.staticip.rima-tde.net) (Ping timeout: 256 seconds)
[02:20:13] *** Quits: raczka3 (~raczka@dedicated-aid6.rev.nazwa.pl) (Ping timeout: 256 seconds)
[02:20:13] *** Quits: dharrigan (~dharrigan@user/dharrigan) (Ping timeout: 256 seconds)
[02:20:13] *** Quits: mrec (~markus@sundtek.de) (Ping timeout: 256 seconds)
[02:20:13] *** Quits: overrider (~overrider@user/overrider) (Ping timeout: 256 seconds)
[02:20:13] *** MJ_ is now known as MJ
[02:20:13] *** Quits: georgeisbot (~georgeisb@8.12.22.9) (Ping timeout: 256 seconds)
[02:20:13] *** Quits: arooni (~arooni@li1062-244.members.linode.com) (Ping timeout: 256 seconds)
[02:20:13] *** Quits: Tomassi-1 (~Tomassi-1@ec2-16-170-233-250.eu-north-1.compute.amazonaws.com) (Ping timeout: 256 seconds)
[02:20:13] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (Ping timeout: 256 seconds)
[02:20:13] *** Quits: nigelb (~nigel@zeus.nigelb.me) (Ping timeout: 256 seconds)
[02:20:13] *** Quits: Piraty (~irc@user/piraty) (Ping timeout: 256 seconds)
[02:20:13] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (Ping timeout: 256 seconds)
[02:20:17] *** dharrigan_ is now known as dharrigan
[02:20:29] *** Joins: EtherMan_ (~quassel@inception.debokred.se)
[02:20:30] *** Quits: kevr (~kevr@user/kevr) (Remote host closed the connection)
[02:20:34] *** Joins: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[02:20:35] *** Joins: Piraty (~irc@user/piraty)
[02:20:38] *** achillion is now known as achilleas
[02:20:45] *** Joins: kevr (~kevr@user/kevr)
[02:20:47] *** Quits: cliluw (~cliluw@47.147.77.43) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: matsaman (~matsaman@user/matsaman) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: bloody (~bloody@user/bloody) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: slisnake (~slisnake@103.107.198.140) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: runelind (~runelind@user/runelind) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: EtherMan (~quassel@inception.debokred.se) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: yitz (~yitz@exercism/yitz) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: Socra (~Socra@206.217.216.21) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: Praise (~Fat@user/praise) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: LogicAside (~LogicAsid@user/logicaside) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: Pixi (~Pixi@user/pixi) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: Mechanismus (~LabMonkey@206.255.106.67) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: Church (~aleph@68.161.207.188) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: MrBurns (~japa@ec2-13-48-124-121.eu-north-1.compute.amazonaws.com) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: suffer (znc@mutant.penguin.fyi) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: Bluefoxicy (~Bluefoxic@c-73-132-244-30.hsd1.md.comcast.net) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: ecool (~ecool@ecool.dev) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: teroshan (~teroshan@static.28.181.130.94.clients.your-server.de) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: Forty-Bot (~kvirc@pool-108-18-137-133.washdc.fios.verizon.net) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: synic (~squish@li74-118.members.linode.com) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: crunchy_david (~david@pgguru.net) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: Mogget (~Mogget@vogon02.moshwire.com) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: Pici (~bnrubin@li1014-36.members.linode.com) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: coc0nut (~coc0nut@user/coc0nut) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: cryocaustik7 (~cryocaust@user/cryocaustik) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: Melon_Bread (~Melon_Bre@li958-238.members.linode.com) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: simplicity (~yti@user/simplicity) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: n1000 (~n1000@user/n1000) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: Helle (~helle@45.83.235.185) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: meejah (~meejah@rutas.meejah.ca) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: dlam (~dlam@dlam.me) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: ntdll_ (~ntdll@shion.saiban.me) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: lantech19446 (~lantech19@144.202.10.138) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: han-` (~han`@user/han-/x-0887595) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: tinystoat (~squeek@user/tinystoat) (Ping timeout: 256 seconds)
[02:20:47] *** Melon_Bread3 is now known as Melon_Bread
[02:20:48] *** Joins: arinov_ (~arinov@194.169.217.136)
[02:20:48] *** Bluefoxicy_ is now known as Bluefoxicy
[02:20:50] * exarkun drowns in the network storm
[02:20:51] *** Viewday114 is now known as Viewday11
[02:20:51] *** cryocaustik74 is now known as cryocaustik7
[02:20:51] *** teroshan0 is now known as teroshan
[02:20:54] *** Quits: arinov (~arinov@45.86.202.80) (Read error: Connection reset by peer)
[02:20:55] <SnoopJ> pfloyd, if traversing the document fits your problem, you at least can be sure that the structure of YAML itself provides some constraint. There are probably some pathological cases possible, but they don't seem worth worrying about in a first pass unless you have reason to believe your data would have them
[02:20:56] *** Joins: Praise- (~Fat@user/praise)
[02:21:11] *** Joins: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr)
[02:21:18] *** Joins: cliluw (~cliluw@47.147.77.43)
[02:21:23] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[02:21:30] *** ThatOtherGuy is now known as LogicAside
[02:21:35] *** Joins: odrling (~odrling@korone.aidoru.agency)
[02:21:36] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aÐ»Ð»Ð¸Ð»Ñ¹ÑÐ°!)
[02:21:37] *** Joins: Wu (~wu@35.red-88-24-200.staticip.rima-tde.net)
[02:21:39] *** Joins: ttree_ (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[02:21:43] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[02:21:43] *** Joins: nigelb (~nigel@zeus.nigelb.me)
[02:21:57] *** Joins: mrec (~markus@sundtek.de)
[02:22:00] *** Joins: fikran (~fikran@user/fikran)
[02:22:03] *** Joins: Norkle (~norkle@admin.nasa-g0v.com)
[02:22:05] *** Joins: overrider (~overrider@user/overrider)
[02:22:06] *** Joins: Socra (~Socra@206.217.216.21)
[02:22:10] *** Joins: Tomassi-1 (~Tomassi-1@ec2-16-170-233-250.eu-north-1.compute.amazonaws.com)
[02:22:13] *** Joins: meejah (~meejah@rutas.meejah.ca)
[02:22:13] <pfloyd> SnoopJ: yeah, I think it would covery 99% of the use cases with minimal worry about breakage, but can always adjust if they need to do something else
[02:22:16] *** Joins: raczka3 (~raczka@dedicated-aid6.rev.nazwa.pl)
[02:22:22] *** Joins: crunchy_david (~david@pgguru.net)
[02:22:22] *** Joins: MrBurns (~japa@ec2-13-48-124-121.eu-north-1.compute.amazonaws.com)
[02:22:27] *** Joins: slisnake (~slisnake@103.107.198.140)
[02:22:31] *** Joins: lantech19446 (~lantech19@144.202.10.138)
[02:22:32] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:ec4b:7733:bb94:ccce) (Ping timeout: 252 seconds)
[02:22:34] *** Joins: Helle (~helle@45.83.235.185)
[02:22:39] *** Joins: simplicity (~yti@user/simplicity)
[02:23:00] *** Quits: c4017w_ (~c4017@209.52.68.8) (Read error: Connection reset by peer)
[02:23:09] *** Joins: tga (~tga@p54a75da2.dip0.t-ipconnect.de)
[02:23:09] *** Quits: tga (~tga@p54a75da2.dip0.t-ipconnect.de) (Changing host)
[02:23:09] *** Joins: tga (~tga@user/tga)
[02:23:12] *** Joins: Auron956 (Auron956@user/auron)
[02:23:23] *** Joins: c4017w_ (~c4017@209.52.68.8)
[02:23:36] *** Quits: kevr (~kevr@user/kevr) (Remote host closed the connection)
[02:23:54] *** Joins: kevr (~kevr@user/kevr)
[02:24:08] *** Joins: ntdll_ (~ntdll@user/ntdll)
[02:24:09] *** Quits: tristan_ (~tristan@223.62.175.232) (Remote host closed the connection)
[02:24:46] *** Quits: Auron (Auron956@user/auron) (Ping timeout: 272 seconds)
[02:24:48] *** Joins: tristan_ (~tristan@223.62.175.232)
[02:25:24] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[02:25:34] *** Joins: streety (~streety@li761-24.members.linode.com)
[02:25:43] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[02:25:53] *** Quits: niko (~niko@libera/staff/niko) (Ping timeout: 606 seconds)
[02:26:01] *** Joins: ecool (~ecool@ecool.dev)
[02:26:18] *** Joins: n1000 (~n1000@user/n1000)
[02:27:02] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[02:29:52] *** Parts: pfloyd (floyd@c-98-242-53-178.hsd1.ca.comcast.net) ()
[02:30:32] *** yitz_ is now known as yitz
[02:30:46] *** Quits: foobaz2124317 (~foobaz212@152.37.103.80) (Quit: Client closed)
[02:30:59] *** Joins: foobaz2124317 (~foobaz212@152.37.103.80)
[02:31:57] *** Joins: jhulten[m] (~jhultenma@2001:470:69fc:105::1:cce5)
[02:32:14] *** Joins: herman_ (~herman@2603:9000:8500:baa0:6107:4552:6a01:de2d)
[02:32:37] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[02:33:07] *** Joins: synic (~squish@li74-118.members.linode.com)
[02:33:52] *** Joins: niko (~niko@libera/staff/niko)
[02:33:54] *** Joins: dlam (~dlam@dlam.me)
[02:33:56] *** Joins: Forty-Bot (~kvirc@pool-108-18-137-133.washdc.fios.verizon.net)
[02:34:41] *** Joins: Mogget (Mogget@vogon02.moshwire.com)
[02:34:46] *** Joins: Church (~aleph@68.161.207.188)
[02:35:42] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 250 seconds)
[02:36:36] *** Joins: ice9 (~ice9@user/ice9)
[02:37:08] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:38:54] *** Quits: shaan150 (~shaan150@host62-7-180-55.range62-7.btcentralplus.com) (Quit: Client closed)
[02:41:13] *** Joins: hiroshi_ (~freedom@151.35.86.188)
[02:41:14] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[02:42:45] <Jonno_FTW> in pandas, when using groupby, can I do a sum() and a mean() on separate columns?
[02:44:47] *** Joins: Betal (~Betal@user/betal)
[02:45:46] *** Quits: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net) (Quit: Client closed)
[02:45:54] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[02:47:58] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:d80e:f8e4:65fa:55e)
[02:48:49] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[02:48:50] *** Quits: arinov_ (~arinov@194.169.217.136) (Ping timeout: 272 seconds)
[02:49:09] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[02:49:17] <Jonno_FTW> wait nvm
[02:50:09] *** Quits: upsala (~zcb@185.209.196.139) (Quit: WeeChat 3.4)
[02:51:10] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[02:53:34] *** Quits: oriba (~oriba@dynamic-078-055-220-151.78.55.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:54:39] *** Joins: summersault (~summersau@179.221.251.36)
[02:55:21] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[02:57:42] *** Joins: summersault (~summersau@179.221.251.36)
[02:57:44] *** Quits: rampart (~rampart@2.sub-174-250-16.myvzw.com) (Remote host closed the connection)
[02:59:12] *** Joins: blei (~blei@user/blei)
[02:59:31] *** Joins: rampart (~rampart@2.sub-174-250-20.myvzw.com)
[02:59:33] <mat001_> How does Flask know fif user closeb browser tab?
[02:59:35] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 256 seconds)
[02:59:35] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[02:59:35] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Ping timeout: 240 seconds)
[02:59:40] *** Quits: tomeaton17 (~tomeaton1@92.234.2.175) (Quit: Client closed)
[02:59:45] <mat001_> (if user closed browser tab or browser)
[03:00:09] <foo> I'm trying to track down a code breakage. I think a conflict with incorrectly merged. But I don't know when this happened and this has happened a couple times now. I realize this is a git question... but is there any way to see *when a line was removed*? I have tried git log --all --full-history -S "PdfFile" -- skills/smart_mail.py ... I can see when it was added but not when it was removed. I realize this is
[03:00:15] <foo> more of a git question than a python question, can't seem to figure this out.
[03:00:48] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[03:00:58] *** Quits: summersault (~summersau@179.221.251.36) (Read error: Connection reset by peer)
[03:00:58] <TML> mat001_: I'm not sure how Flask does it, but a common solution is to put something in user storage somewhere, and install a handler for unload events which deletes it
[03:01:14] *** Joins: summersault (~summersau@179.221.251.36)
[03:01:37] <foo> j #git
[03:02:14] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[03:02:22] <TML> foo: git log -c -S 'PdfFile' -- skills/smart_mail.py  ?
[03:02:24] <mat001_> TML: yeah, I'd like to clear Flask session if user closed the browser or a tab but don't know what that event is or how can I know browser tab was closed
[03:02:24] *** Joins: arinov_ (~arinov@213.194.126.155)
[03:02:27] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:02:35] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:02:55] <TML> mat001_: window.beforeunload
[03:03:38] <mat001_> TML: hmm, ok
[03:04:17] *** Quits: cursey (~cursey@user/cursey) (Quit: bye)
[03:04:20] *** Quits: foobaz2124317 (~foobaz212@152.37.103.80) (Quit: Client closed)
[03:04:33] *** Joins: foobaz2124317 (~foobaz212@152.37.103.80)
[03:04:36] *** Joins: cursey (~cursey@user/cursey)
[03:04:37] <foo> TML: thank you, I can see with Merge branch 'mg/pre-commit' into staging it was removed... which leads me to believe, a conflict was incorrectly reconciled. Is that a fair assumption?
[03:04:44] * foo checks -c flag
[03:05:31] <TML> foo: Maybe - or maybe it was removed intentionally. Hard to say without knowing a lot more about your project.
[03:05:33] <SnoopJ> hmm, does pytest's capsys fixture only work for things that write to output streams from Python itself? I am not seeing anything captured in a test of a wrapper of some C++ that writes to std::cout
[03:05:36] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[03:05:41] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[03:06:00] <SnoopJ> ah, I think I want capfd
[03:06:11] *** Quits: viaSanctus (~viaSanctu@user/viasanctus) (Ping timeout: 245 seconds)
[03:06:22] <foo> TML: huh, -c isn't anywhere in the man git-log - what does that do?
[03:06:32] *** Joins: jwisbell35 (~jwisbell3@174-080-085-082.res.spectrum.com)
[03:06:32] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:06:55] <SnoopJ> hmm, capfd gives me empty strings, too. I think I'm missing something here, but that's fine, I can just test that the FFI call succeedsf
[03:07:04] *** Quits: Guest111 (~Guest111@88.103.7.38) (Quit: Client closed)
[03:07:11] *** Quits: jwisbell35 (~jwisbell3@174-080-085-082.res.spectrum.com) (Remote host closed the connection)
[03:07:48] *** Quits: arinov_ (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[03:08:05] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[03:09:13] *** Joins: djapo (~archangel@user/djapo)
[03:10:59] <SnoopJ> re: my earlier question about doing std::tm <-> datetime.datetime with SWIG, here's what I ended up with: https://github.com/SnoopJeDi/playground/blob/master/python/swig_/typemap_stdtm/acme.i
[03:12:02] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 260 seconds)
[03:13:16] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:14:18] *** Quits: foobaz2124317 (~foobaz212@152.37.103.80) (Quit: Client closed)
[03:14:27] *** Quits: tga (~tga@user/tga) (Ping timeout: 250 seconds)
[03:14:34] *** Joins: foobaz2124317 (~foobaz212@152.37.103.80)
[03:14:45] *** Joins: cust (amaama@2607:f2c0:f00f:2500::3)
[03:16:45] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[03:16:47] *** Quits: sobkas (~sobkas@95.175.17.217) (Remote host closed the connection)
[03:19:06] *** Joins: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net)
[03:20:33] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 256 seconds)
[03:22:18] <TML> foo: it's the same as --diff-merges=c
[03:22:29] *** Joins: maxzor__ (~maxzor@2a01cb04054faa00255ff5c1b41e312a.ipv6.abo.wanadoo.fr)
[03:22:54] <TML> foo: You'll find it under "--diff-merges=combined, --diff-merges=c, -c"
[03:23:23] *** Quits: foobaz2124317 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[03:23:43] *** Joins: c4017w__ (~c4017@209.52.68.8)
[03:23:48] *** Joins: Moosadee (~Moosadee@198.248.38.27)
[03:24:56] *** Quits: jamea (~jamea@10.189-202-213.bestelclientes.com.mx) (Ping timeout: 272 seconds)
[03:26:16] *** Joins: Masterphi (~Masterphi@user/masterphi)
[03:27:01] *** Joins: u2186 (~user@2603:9000:a004:6acf::404)
[03:27:01] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[03:27:13] *** Quits: the4oo4 (~the4oo4@shenzhou.whatbox.ca) (Quit: bye)
[03:27:43] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[03:28:34] *** Joins: masoudd (~masoudd@user/masoudd)
[03:30:18] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:30:31] <SnoopJ> ah, my output typemap is not quite right, but close enough
[03:31:21] *** Quits: Linux77 (~leonardo@2804:d45:8c08:9300:76d0:2bff:fe7a:f3a4) (Quit: Bye, nice, gratefull)
[03:31:21] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[03:31:49] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[03:32:17] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 240 seconds)
[03:32:51] *** Quits: flyback (~flyback@2601:540:8201:1e60:f2e1:39ad:bb13:8b73) (Read error: Connection reset by peer)
[03:32:54] *** Joins: ravan (~ravan@user/ravan)
[03:33:05] *** Quits: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr) (Ping timeout: 250 seconds)
[03:33:30] *** Quits: Moosadee (~Moosadee@198.248.38.27) (Quit: Leaving)
[03:34:05] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[03:34:45] *** Joins: flyback (~flyback@2601:540:8201:1e60::1b5d)
[03:35:20] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[03:35:35] *** Quits: hiroshi_ (~freedom@151.35.86.188) (Quit: hiroshi_)
[03:36:50] *** Quits: rje (~textual@65.141.156.170) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[03:37:40] *** Quits: adeliktas (~adeliktas@i59F5FA10.versanet.de) (Quit: Ping timeout (120 seconds))
[03:38:14] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 272 seconds)
[03:38:58] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 250 seconds)
[03:39:39] *** Joins: Wulf (~Wulf@user/wulf)
[03:43:02] <sharpertool> Hi all. I think this is a quick question. I have a common base class to be used for a set of "scripts" that have a lot of common behavior
[03:43:47] *** Quits: radiojosh (~Joshua@70-131-32-80.lightspeed.stlsmo.sbcglobal.net) (Ping timeout: 256 seconds)
[03:43:47] *** Joins: newpy (~newpy@2601:280:4381:1390:5eb1:6fa:40aa:cefd)
[03:44:02] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Quit: WeeChat 2.8)
[03:44:52] <sharpertool> I'd like to be able to define, at a 'class level' a 'task' method. I can easily just define a generic named "def task_method(...)" and be done with it, but I'd kind of like that method to be defined as a more specific name. I wanted to configure this 'named method' with a class variable, but, I can't do something like "task_method = self.do_this_task", or, "task_method = __class__.do_this-task".
[03:45:11] <sharpertool> Does explain my "goal" properly If so, is there a simple solution?
[03:45:36] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:c61:f151:90ec:6f4f)
[03:46:57] <Repiphany> What do you mean you can't do something like "task_method = self.do_this_task"
[03:47:56] *** Quits: Fossil (~Fossil@2a03:b0c0:0:1010::398:b001) (Quit: Bye)
[03:48:36] *** Joins: jazzy2 (~jaziz@user/jaziz)
[03:49:00] *** Quits: Cera (~Cera@user/Cera) (Quit: Client closed)
[03:49:08] *** Joins: foobaz2124317 (~foobaz212@152.37.103.80)
[03:50:36] *** Joins: Fossil (~Fossil@95.85.23.165)
[03:51:05] *** Quits: grimvar (~grimvar@i5C75FE23.versanet.de) (Ping timeout: 252 seconds)
[03:51:18] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[03:51:34] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[03:52:11] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[03:52:13] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[03:52:30] *** Quits: Gustavo6046_ (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[03:52:40] *** Joins: grimvar (~grimvar@i5C75F7AC.versanet.de)
[03:52:41] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[03:53:37] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 240 seconds)
[03:53:59] *** Quits: foobaz2124317 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[03:55:13] <nedbat> sharpertool: what would the more specific name be?
[03:55:47] <sharpertool> I mean, I can't do that at class level
[03:55:51] *** Joins: whoami97 (~whoami@2a02:8070:d1e4:6d00:b593:8572:5d44:f106)
[03:56:30] <sharpertool> @nedbat The more specific name would be a more descriptive name for the task, like "load_families_to_system", or, whatever.
[03:57:10] <whoami97> Hi
[03:57:11] <nedbat> sharpertool: you want one base class, then subclasses, each with their own more specific name?
[03:57:41] <sharpertool> This is kind of 'guilding the lilly' really. I can just override "task_method" and be done with it, which is what did. Also, I can override __init__ and set `self.task_method = self.my_special_method`
[03:57:45] <sharpertool> tht works.
[03:57:52] <sharpertool> Yes @nedbat
[03:58:19] <nedbat> sharpertool: and in a subclass, what would call the more specific name?
[03:59:53] *** Quits: tristan_ (~tristan@223.62.175.232) (Ping timeout: 252 seconds)
[04:00:20] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[04:00:53] <sharpertool> https://www.irccloud.com/pastebin/nBiTDDFw/
[04:02:06] <whoami97> How long have you been using Python?
[04:02:12] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[04:02:17] <sharpertool> The question might be rephrased.. can I create a class variable, that is initialized to a method. I realize this method cannot be bound to self, but could be late bound
[04:03:04] <whoami97> Yes
[04:04:40] *** Joins: rje (~textual@50.35.241.164)
[04:04:42] <nedbat> sharpertool: maybe you want something like this: https://gist.github.com/nedbat/b32416ee52c45b52893a094bc59cf3b2
[04:05:07] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[04:05:13] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[04:05:16] *** Joins: Guest111 (~Guest111@88.103.7.38)
[04:05:41] <whoami97> What are you trying to program?
[04:06:26] <sharpertool> @nedbat -- Yes, I just did that. It works fine..
[04:06:27] *** Quits: parv (~quass@user/parv) (Quit: parv)
[04:06:51] <sharpertool> Overridable by class method https://www.irccloud.com/pastebin/N04LvWEn/
[04:07:08] <whoami97> What are you trying to program?
[04:07:31] *** Quits: KnowledgeShark (~Knowledge@50.34.198.222) (Quit: Leaving)
[04:07:48] <sharpertool> @whoami97 - oh, just trying to be fancy and allow a base "Script" class to be customized for a suite of 'scripts' that share a lot of common code.
[04:07:57] <sharpertool> But, of course, each does a specific thing.
[04:08:20] <whoami97> That sounds nice
[04:11:23] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[04:11:40] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[04:13:03] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[04:13:41] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[04:13:57] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[04:14:02] *** Joins: pycurious (~Adium@user/pycurious)
[04:15:04] <whoami97> maybe you can youse exefile() to import the Script in another Script
[04:16:12] <SnoopJ> oops, that typemap has another flaw: the year field is "years since 1900" -_-
[04:16:42] *** Joins: adeliktas (~adeliktas@i59F5F955.versanet.de)
[04:16:43] <sveinse> Are there any principal difference between execfile() something vs importing it?
[04:16:46] * SnoopJ was wondering why things were coming out as 1900 years in the future
[04:16:49] *** Joins: tristan_ (~tristan@218.51.148.226)
[04:16:52] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 272 seconds)
[04:17:00] <nedbat> sveinse: execfile will always execute it.  import only executes it the first time
[04:17:11] <sveinse> nedbat: ah, thanks
[04:19:53] <whoami97> How did you learn Python
[04:19:54] *** Quits: rampart (~rampart@2.sub-174-250-20.myvzw.com) (Remote host closed the connection)
[04:19:58] *** Joins: white2 (~mahengrui@user/mahengrui1)
[04:20:22] <nedbat> whoami97: there are lots of different ways. are you working on it?
[04:20:35] *** Joins: rampart (~rampart@2.sub-174-250-20.myvzw.com)
[04:20:49] *** Joins: Viewday116 (~Viewday@user/viewday)
[04:21:30] * SnoopJ learned by reading and writing Python programs, mostly
[04:21:43] <whoami97> Yes, I've been learning it for half a year, but during that time I also started with Https and CSS
[04:21:54] * sveinse nods
[04:22:17] <whoami97> but I'm more interested in hacking
[04:22:43] * sveinse been programming py on and off for over 20 years(!)
[04:23:01] <NoImNotNineVolt> ouch.
[04:23:12] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 272 seconds)
[04:23:13] *** Viewday116 is now known as Viewday11
[04:23:40] <whoami97> sveinse that is long
[04:23:50] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 272 seconds)
[04:24:13] *** Joins: c4017w_ (~c4017@209.52.68.8)
[04:24:48] <sveinse> back then I were stuck with a complex Perl program, and a colleague came to me and said "Svein, look at this awsome language. We need to use this.". Hooked from that day on
[04:25:14] <whoami97> :')
[04:26:38] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[04:26:46] <whoami97> As soon as I'm advanced in Python I want to start with C# or C++
[04:27:38] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[04:27:56] *** Quits: MJ (~mjpieters@zopatista.plus.com) (Ping timeout: 252 seconds)
[04:28:58] *** Joins: MJ (~mjpieters@zopatista.plus.com)
[04:29:39] *** Joins: whoami5 (~whoami@2a02:8070:d1e4:6d00:b593:8572:5d44:f106)
[04:29:57] *** Parts: whoami5 (~whoami@2a02:8070:d1e4:6d00:b593:8572:5d44:f106) ()
[04:31:13] <sveinse> It's actually worth telling: I worked in a company making special microwave communication equipment that had a very special protocol. Everything low-level were written in C++. However prototyping in C++ is tedious, so we selected to integrate the low-level comms with higher level Py. Py had by far the easiest C integration, so that wasn't that difficult. The end result is that this enabled high-level
[04:31:19] <sveinse> protocol testing and experimentation in Py, which sped up the development pace enormously.
[04:32:38] *** Joins: Fiji (~Fiji@user/fiji)
[04:32:57] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 240 seconds)
[04:35:01] <sveinse> whoami97: knowing JS, HTTP and CSS is valuable these days. It allows you to do app front-end if necessary. That said, webapp front-end is a huge field of its own.
[04:36:45] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[04:36:56] *** Joins: DrBrownBear (~Drbb@2600:1700:9aa1:6bc0::47)
[04:37:40] *** Joins: user_ (~user@191.96.170.20)
[04:37:44] <whoami97> Https and CSS in particular are really fun once you get the hang of it
[04:38:08] *** Joins: x_kuru (~xkuru@user/xkuru)
[04:38:17] *** Quits: flokuehn (~flokuehn@87.123.247.48) (Ping timeout: 240 seconds)
[04:38:31] <sveinse> https is not fun, hahaha. http is. :D
[04:38:51] <whoami97> :')
[04:39:29] *** Joins: funhouse (~funhouse@user/funhouse)
[04:39:48] *** Quits: u2186 (~user@2603:9000:a004:6acf::404) (Ping timeout: 240 seconds)
[04:39:57] <sveinse> And to correct myself: of course I meant html. Not the http and ssl/tls (https) protocol
[04:39:57] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 240 seconds)
[04:40:15] *** Joins: flokuehn (~flokuehn@87.123.247.54)
[04:40:51] <whoami97> Oops, I wrote that above too
[04:40:57] *** Parts: CapnKernel (foobar@gromit.mixdown.ca) ()
[04:41:10] *** Joins: user__ (~user@191.96.170.20)
[04:43:54] *** Quits: user_ (~user@191.96.170.20) (Ping timeout: 252 seconds)
[04:46:32] *** Joins: parv (~quass@user/parv)
[04:46:37] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[04:47:49] *** Quits: zlg (~zlg@user/zlg) (Ping timeout: 256 seconds)
[04:47:51] *** Joins: foobaz2124317 (~foobaz212@152.37.103.80)
[04:48:13] *** Joins: vlado2 (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c)
[04:49:49] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:d80e:f8e4:65fa:55e) (Ping timeout: 240 seconds)
[04:50:05] *** Quits: gurkenglas (~gurkengla@dslb-188-096-121-068.188.096.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[04:52:21] *** Quits: foobaz2124317 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[04:52:33] *** Joins: user_ (~user@2603:9000:a004:6acf::404)
[04:52:53] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[04:55:06] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Quit: The Lounge - https://thelounge.chat)
[04:55:11] *** Quits: user__ (~user@191.96.170.20) (Ping timeout: 256 seconds)
[04:56:53] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[04:59:19] <foo> TML: bah, thanks, not sure how I missed that
[05:00:21] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[05:01:08] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[05:01:29] *** Quits: johnkeats7 (~johnkeats@2804:14c:32:a0cc:789a:bf0c:f0b6:8e0b) (Ping timeout: 252 seconds)
[05:03:59] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Read error: Connection reset by peer)
[05:04:14] *** Joins: esther (~esther@45.130.137.35)
[05:05:00] *** Quits: waynew (~wayne@user/waynew) (Ping timeout: 272 seconds)
[05:05:02] *** Quits: ttree_ (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[05:05:08] *** Quits: mchlumsky (~mchlumsky@modemcable106.190-179-173.mc.videotron.ca) (Read error: Connection reset by peer)
[05:06:17] *** Joins: waynew (~wayne@user/waynew)
[05:07:17] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[05:07:25] *** Quits: newpy (~newpy@2601:280:4381:1390:5eb1:6fa:40aa:cefd) (Ping timeout: 256 seconds)
[05:08:28] *** Joins: newpy (~newpy@2601:280:4381:1390:5eb1:6fa:40aa:cefd)
[05:09:26] *** Joins: wac (~wac@user/wac)
[05:09:49] *** Quits: kts (~kts@103.73.237.49) (Ping timeout: 240 seconds)
[05:10:11] *** Joins: Techcable (~Techcable@168.235.93.147)
[05:10:28] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[05:11:14] <whoami97> can anyone here start something with Kali Linux
[05:11:51] *** Quits: matsaman_ (~matsaman@user/matsaman) (Quit: leaving)
[05:11:55] *** Quits: Sylhouette (~johan@87.233.185.201) (Read error: Connection reset by peer)
[05:12:11] *** Joins: Sylhouette (~johan@87.233.185.201)
[05:12:36] *** Quits: newpy (~newpy@2601:280:4381:1390:5eb1:6fa:40aa:cefd) (Ping timeout: 240 seconds)
[05:15:41] *** Quits: Auron956 (Auron956@user/auron) ()
[05:16:27] *** Quits: nre (~nre@55d4d0a9.access.ecotel.net) (Ping timeout: 256 seconds)
[05:18:39] *** Joins: FlipFlop (~FlipFlop@user/fl1pfl0p)
[05:19:02] *** Quits: mat001_ (~mat001@c-71-202-208-88.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[05:19:15] *** Quits: sasha (~sasha@wikimedia/-sasha-) (Quit: ZNC - https://znc.in)
[05:20:37] *** Quits: esther (~esther@45.130.137.35) (Ping timeout: 240 seconds)
[05:21:13] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[05:23:12] *** Joins: arcaile (~arcaile@212.102.49.5)
[05:24:03] *** Joins: sasha (~sasha@wikimedia/-sasha-)
[05:24:09] *** Joins: esther (~esther@45.130.137.35)
[05:24:16] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[05:24:44] *** Joins: ejjfunky (~ejjfunky@125.164.19.226)
[05:24:45] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[05:25:00] *** Joins: c4017w__ (~c4017@209.52.68.8)
[05:25:07] *** Joins: ejjfunky2 (~ejjfunky@125.164.23.63)
[05:25:07] *** Joins: ejjfunky0 (~ejjfunky2@125.164.23.63)
[05:27:00] *** Quits: tristan_ (~tristan@218.51.148.226) (Ping timeout: 240 seconds)
[05:27:09] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[05:27:34] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[05:27:56] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:5cb1:db46:4f19:4e1e)
[05:28:15] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[05:28:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[05:28:57] *** Quits: ejjfunky (~ejjfunky@125.164.19.226) (Ping timeout: 256 seconds)
[05:30:43] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[05:30:49] *** Quits: Forsaken87 (~quassel@ip-037-201-193-116.um10.pools.vodafone-ip.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[05:31:44] *** Joins: zlg (~zlg@user/zlg)
[05:31:48] *** Joins: jamea (~jamea@177.239.81.39)
[05:32:48] *** Joins: nre (~nre@55d4979f.access.ecotel.net)
[05:32:48] *** Joins: Forsaken87 (~quassel@2a02:908:1866:e360:87b2:598e:5ed5:8ca9)
[05:33:26] *** Quits: maxzor__ (~maxzor@2a01cb04054faa00255ff5c1b41e312a.ipv6.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[05:33:35] *** Joins: maxzor_ (~maxzor@2a01cb04054faa00255ff5c1b41e312a.ipv6.abo.wanadoo.fr)
[05:36:26] *** Joins: mchlumsky (~mchlumsky@modemcable106.190-179-173.mc.videotron.ca)
[05:38:06] *** Joins: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net)
[05:40:32] *** Quits: rowbots (~dirgeable@h64-17-89-214.arvdco.broadband.dynamic.tds.net) (Remote host closed the connection)
[05:42:20] *** Quits: maxzor_ (~maxzor@2a01cb04054faa00255ff5c1b41e312a.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[05:42:35] *** Quits: econdudeawesome (~shadowfax@cpe-76-187-70-50.tx.res.rr.com) (Quit: leaving)
[05:45:02] *** Quits: Scarecr0w (~intern0t@user/scarecr0w) (Quit: ~ Server made a boo boo.)
[05:45:57] *** Quits: esther (~esther@45.130.137.35) (Ping timeout: 240 seconds)
[05:46:35] *** Joins: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net)
[05:47:03] *** Joins: whoami56 (~whoami@ip-046-005-002-087.um12.pools.vodafone-ip.de)
[05:47:05] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[05:47:17] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[05:47:57] *** Joins: whoami16 (~whoami@ip-046-005-002-087.um12.pools.vodafone-ip.de)
[05:50:09] *** Quits: whoami97 (~whoami@2a02:8070:d1e4:6d00:b593:8572:5d44:f106) (Ping timeout: 256 seconds)
[05:50:16] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 250 seconds)
[05:50:31] *** Joins: Scarecr0w (~intern0t@user/scarecr0w)
[05:51:51] *** Quits: whoami56 (~whoami@ip-046-005-002-087.um12.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[05:53:12] *** Quits: wac (~wac@user/wac) (Quit: Zzzzâ¦)
[05:53:26] *** Joins: whoami74 (~whoami@2a02:8070:d1e4:6d00:b593:8572:5d44:f106)
[05:55:25] *** Joins: humbertowoody (~humbertow@189.236.30.197)
[05:55:27] *** Joins: esther (~esther@45.130.137.35)
[05:55:50] <Jong> anyone here benched sqlite select versus numpy.load?
[05:55:52] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:56:36] <SnoopJ> Jong, they don't do the same thing
[05:56:45] <SnoopJ> What would it mean to benchmark them against each other?
[05:56:49] *** Quits: humberto1 (~humbertow@189.236.30.197) (Read error: Connection reset by peer)
[05:56:57] *** Quits: whoami16 (~whoami@ip-046-005-002-087.um12.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[05:57:08] <blei> https://pandas.pydata.org/docs/getting_started/comparison/comparison_with_sql.html
[05:57:12] <Jong> I've used sqlite blob records to store numpy arrays
[05:57:51] *** Joins: data68 (~data@2a02:908:a65:3d80:b80d:6427:e2b5:c8fc)
[05:58:05] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[05:58:57] *** Joins: humberto1 (~humbertow@189.236.30.197)
[06:00:00] *** Quits: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net) (Quit: Client closed)
[06:00:36] *** Quits: humbertowoody (~humbertow@189.236.30.197) (Ping timeout: 240 seconds)
[06:00:42] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[06:01:09] *** Quits: ejjfunky2 (~ejjfunky@125.164.23.63) (Quit: Leaving)
[06:01:52] *** Quits: nomic (~nomic@85.203.36.100) (Quit: Leaving)
[06:01:53] *** Joins: ejjfunky (~ejjfunky@125.164.18.108)
[06:02:02] *** Quits: Guest111 (~Guest111@88.103.7.38) (Quit: Client closed)
[06:02:04] <Jong> SnoopJ  you can select blobs from a sqlite db and then run np.frombuffer(record)
[06:03:27] <SnoopJ> Jong, so where does np.load() come into it? Do you store serialized arrays this way, too?
[06:04:22] <blei> you can marshall the array to oracle berkeley db
[06:04:30] <blei> retrieval should be faster than sqlite
[06:05:35] <Jong> The load-side-code np.load would be used if the save-side-code np.save was used.  The load-side-code np.frombuffer would be used if the save-side-code stored the numpy array to a sqlite blob
[06:06:00] <blei> its safe to say that no one has benchmarked that
[06:06:37] <AhmedAmerican> any recommendation for reading `pdf` from `response.text` or `response.content` ?
[06:06:38] <Jong> SnoopJ  it's a pair. The save and load code either using numpy load save code or the load/save code used to work with sqlite.
[06:07:04] <Jong> I'm concerned with which would load faster. That's all
[06:07:44] *** Quits: clarkk (~clarkk@2a00:23c7:d106:2600:5eee:bc30:d314:70da) (Quit: Leaving)
[06:08:00] <Jong> I'll benchmark it myself
[06:08:32] *** Joins: callq (~callq@157.41.71.70)
[06:10:16] <Jong> numpy array -> byte array -> sqlite blob. That's how the store-side code works
[06:10:33] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[06:11:04] *** Quits: justAstache (~justache@user/justache) (Read error: Connection reset by peer)
[06:11:36] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::78dd) (Ping timeout: 245 seconds)
[06:12:24] *** Joins: justAstache (~justache@user/justache)
[06:13:05] *** Joins: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2)
[06:13:20] *** Joins: the4oo4 (~the4oo4@shenzhou.whatbox.ca)
[06:15:57] *** Quits: esther (~esther@45.130.137.35) (Ping timeout: 240 seconds)
[06:16:05] *** Quits: the4oo4 (~the4oo4@shenzhou.whatbox.ca) (Client Quit)
[06:17:06] *** Quits: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net) (Quit: Textual IRC Client: www.textualapp.com)
[06:18:44] *** Joins: Linux77 (~7Linux7@2804:d45:8c08:9300:d5d4:be19:b7a9:c08e)
[06:20:25] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[06:20:48] <callq> So first I was passing like 10 arguments into a function, and it was messy, so then I created a dictionary and I just pass that, but now I either have to make everything a dict['key'] type of reference, or at the beginning of the function, I just manually set many local vars to the dict vals `var1 = dict['var1'] # repeat...`
[06:20:50] <callq> Is there any better way?
[06:20:56] *** Joins: Viewday115 (~Viewday@user/viewday)
[06:21:48] *** Quits: SaltHilStroller_ (~SaltHillS@206.223.160.26) (Ping timeout: 240 seconds)
[06:21:56] <cluelessperson> callq, create a "FunctionConfig" object or config,  or break the arguments into their own pieces.
[06:22:05] *** Joins: the4oo4 (~the4oo4@shenzhou.whatbox.ca)
[06:22:09] *** Joins: bluedust (~bluedust@117.222.189.19)
[06:22:30] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[06:22:30] *** Viewday115 is now known as Viewday11
[06:22:54] <cluelessperson> callq, also, functions support kwargs,  so you can do.  config = {"param1": 123};  function(**config)
[06:23:01] *** Joins: stockh0lm (~Andreas@p200300d2c70c6100f491f44bc7bfe165.dip0.t-ipconnect.de)
[06:23:59] <callq> How does the function know which arg is which if I do **this ? Is it by order?
[06:24:14] <whoami74> Yes
[06:24:25] <parv> Kind of ugly but not have to deal with adding quotes or : : x = dict(); x.update( a = 1, b = 2 )
[06:24:52] <KirkMcDonald> callq: If you do **this in the parameter list, or when passing arguments?
[06:25:20] *** Joins: c4017w_ (~c4017@209.52.68.8)
[06:25:25] *** Quits: white2 (~mahengrui@user/mahengrui1) (Read error: Connection reset by peer)
[06:25:31] <callq> I don't know, I still have to try it, I'll look into kwargs. My fear is that if I move one argument, then the receiving function will be confused
[06:25:36] *** Joins: esther (~esther@45.130.137.35)
[06:26:05] <KirkMcDonald> callq: It won't be "confused." At most it will give an error if you manage to do something ambiguous.
[06:26:14] *** Quits: st0ckholm (~Andreas@p200300d2c70cd200aded7fbe2c5ab509.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[06:26:18] *** Joins: ideopathic (~ideopathi@2600:1702:8b0:a500:b1de:626b:a417:d045)
[06:26:25] *** Joins: white2 (~mahengrui@user/mahengrui1)
[06:26:39] <KirkMcDonald> callq: Namely, if you manage to pass the same parameter more than once.
[06:26:41] <callq> Imagine like, start_price and end_price. Send those in the wrong order, and it all goes bad
[06:26:57] <KirkMcDonald> callq: The order doesn't matter if they are passed by name.
[06:27:17] <callq> ok ok I'll play with kwargs, thx
[06:27:29] <KirkMcDonald> callq: The only time you get a collision is if you pass both position and keyword arguments.
[06:27:58] <KirkMcDonald> callq: e.g. https://bpa.st/6SYA
[06:28:41] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 245 seconds)
[06:29:27] <callq> very good
[06:31:00] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c) (Remote host closed the connection)
[06:32:57] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 240 seconds)
[06:34:29] *** Joins: audio (~audio@user/audio)
[06:36:36] *** Joins: Guest111 (~Guest111@88.103.7.38)
[06:37:45] *** Quits: parv (~quass@user/parv) (Ping timeout: 256 seconds)
[06:39:25] *** Quits: rampart (~rampart@2.sub-174-250-20.myvzw.com) (Ping timeout: 240 seconds)
[06:40:31] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:40:31] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[06:40:31] *** finn_elija is now known as FinnElija
[06:43:08] *** Joins: adeliktas0 (~adeliktas@i59F4D9E7.versanet.de)
[06:44:33] *** Quits: adeliktas (~adeliktas@i59F5F955.versanet.de) (Ping timeout: 256 seconds)
[06:44:33] *** adeliktas0 is now known as adeliktas
[06:46:17] *** Quits: brentaarnold (~brentaarn@24.112.92.157) (Ping timeout: 240 seconds)
[06:47:03] *** Joins: brentaarnold (~brentaarn@24.112.92.157)
[06:47:58] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:d80e:f8e4:65fa:55e)
[06:48:30] *** Joins: foobaz2124317 (~foobaz212@152.37.103.80)
[06:48:45] *** Joins: Polyblank (~Polyblank@user/polyblank)
[06:50:37] *** Quits: esther (~esther@45.130.137.35) (Ping timeout: 240 seconds)
[06:53:03] *** Quits: foobaz2124317 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[06:54:12] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aÐ»Ð»Ð¸Ð»Ñ¹ÑÐ°!)
[06:54:59] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[06:55:27] *** Joins: esther (~esther@45.130.137.35)
[06:56:46] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::78dd)
[06:57:36] *** Quits: kmh (~kmh@2a00:6020:5004:6800:abd3:4ad9:b6f1:3cf) (Quit: Leaving)
[06:59:46] *** Joins: Cera (~Cera@user/Cera)
[07:01:05] *** Quits: Z-cat (~Z-cat@user/z-cat) (Ping timeout: 250 seconds)
[07:01:19] <blei> miss https://github.com/shedskin/shedskin
[07:02:08] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[07:04:12] *** Quits: FlipFlop (~FlipFlop@user/fl1pfl0p) (Ping timeout: 240 seconds)
[07:05:24] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[07:05:33] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[07:06:07] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[07:06:57] <blei> i just found a resource that says that python threading iterates over threads allowing each to do a bit of work in turn, which reminds me of the browser model
[07:07:17] *** Quits: [_] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[07:07:23] *** Joins: Emet-Selch (~haise01@user/haise01)
[07:09:56] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 245 seconds)
[07:09:57] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[07:10:32] *** Quits: Azem (~haise01@user/haise01) (Ping timeout: 240 seconds)
[07:10:32] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[07:11:17] *** Quits: esther (~esther@45.130.137.35) (Ping timeout: 240 seconds)
[07:11:37] *** Joins: groundboi (~groundboi@user/groundboi)
[07:12:27] <KirkMcDonald> blei: This is at best an incomplete description of how threads work in Python.
[07:12:40] *** Joins: kmh (~kmh@2a00:6020:5004:6800:75b3:49e:f05a:4982)
[07:12:58] <blei> i figured it must be incomplete, because I did get speedup due to threads, and you wouldn't expect speedup in that case. in the browser case you don't get speedup, you get UI elements that don't freeze
[07:13:20] <AhmedAmerican> is my Class looks normal ? https://bpa.st/JKXA as this is my 1st to use Classes at all. Thanks in advance as well.
[07:13:25] <KirkMcDonald> The key difference with JS workers is that Python threads are real actual system threads.
[07:15:22] <KirkMcDonald> blei: The "problem" with Python threads is that there is a global lock that permits only one thread at a time to execute Python code (or, maybe more specifically, to interact with Python objects).
[07:15:45] <blei> i'm just about done switching to multiprocessing
[07:16:11] <dodobrain> is there a limitation on psycopg2 execute() invocations?
[07:16:13] <blei> i'm using on-disk pickles to pass objects around
[07:16:22] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:c61:f151:90ec:6f4f) (Remote host closed the connection)
[07:17:01] <dodobrain> pgcursor.execute("SET ROLE org-foo") fails with psycopg2.errors.SyntaxError: syntax error at or near "-"
[07:17:11] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:40b5:ca9a:ad86:bff0)
[07:19:35] *** jazzy2 is now known as jazzy
[07:20:21] *** Quits: jamea (~jamea@177.239.81.39) (Ping timeout: 245 seconds)
[07:21:33] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[07:23:09] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Client Quit)
[07:24:05] <dodobrain> grr.. it was quoting. problem solved
[07:24:17] *** Joins: esther (~esther@45.130.137.35)
[07:24:44] <blei> multiprocessing certainly increased my cpu utilization
[07:25:37] *** Joins: c4017w__ (~c4017@209.52.68.8)
[07:30:02] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[07:30:08] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:30:46] *** Quits: herman_ (~herman@2603:9000:8500:baa0:6107:4552:6a01:de2d) (Remote host closed the connection)
[07:32:10] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[07:35:13] *** Parts: whoami74 (~whoami@2a02:8070:d1e4:6d00:b593:8572:5d44:f106) ()
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:32] *** Joins: quartz (~quartz@user/quartz)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:22] <pycurious> https://dpaste.org/FMYy - this code hangs on line 18 sometimes - any ideas what could cause this?  The Q size at the point when it fails to join is 0. It just does not execute the next line after join.
[07:37:40] *** Joins: Rum (~bourbon@user/rum)
[07:37:52] <pycurious> After the hang -> https://dpaste.org/3weU
[07:38:02] *** Quits: Rum (~bourbon@user/rum) (Max SendQ exceeded)
[07:38:10] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[07:38:14] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 252 seconds)
[07:38:36] *** Joins: jamea (~jamea@177.239.81.39)
[07:40:22] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 260 seconds)
[07:41:48] <quartz> Hi. This is my server.py file that I made to help me create a simple webpage that stores data about top chess players. Here is the file: https://bpa.st/D5RQ  I made a function that accepts a search string from a user and is suppose to display the results on screen. The search results are suppose to match the player's first name. When I click on the search button, nothing happens.
[07:42:15] *** Quits: xheimlich (~xheimlich@179.218.1.150) (Remote host closed the connection)
[07:42:51] <quartz> I'm worried that it's because I'm not writing something correctly in my server.py file. Here is the javascript file I made that is suppose to query the server and get the results: https://bpa.st/6SQA
[07:45:51] *** Quits: Polyblank (~Polyblank@user/polyblank) (Quit: Leaving)
[07:46:00] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:46:07] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:47:24] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Ping timeout: 240 seconds)
[07:48:17] *** Quits: esther (~esther@45.130.137.35) (Ping timeout: 240 seconds)
[07:48:35] *** Quits: sreve (~quassel@p549d706d.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[07:48:49] *** Joins: sreve (~quassel@p549d70f6.dip0.t-ipconnect.de)
[07:49:07] *** Quits: kai (~kai@x50d24799.cust.hiper.dk) (Quit: Ping timeout (120 seconds))
[07:49:09] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[07:49:17] <audio> my script currently downloads ~30 youtube videos per hour. I want to get this to ~300-500. how can i do this?
[07:49:29] *** Joins: kai (~kai@x50d24799.cust.hiper.dk)
[07:49:43] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:50:04] <quartz> Something wrong with  keys = json_data["search_key"] apparently.
[07:50:20] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:50:52] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:51:31] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[07:51:45] <audio> this is the script: https://bpa.st/A3FA
[07:53:57] *** Quits: kmh (~kmh@2a00:6020:5004:6800:75b3:49e:f05a:4982) (Remote host closed the connection)
[07:54:09] *** Joins: kmh (~kmh@2a00:6020:5004:6800:75b3:49e:f05a:4982)
[07:54:16] *** Joins: esther (~esther@45.130.137.35)
[07:55:14] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[07:55:49] *** Quits: brentaarnold (~brentaarn@24.112.92.157) (Ping timeout: 240 seconds)
[07:57:16] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Ping timeout: 272 seconds)
[08:02:04] *** Quits: ejjfunky0 (~ejjfunky2@125.164.23.63) (Remote host closed the connection)
[08:06:02] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[08:07:12] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.4)
[08:08:47] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[08:09:31] *** Joins: phox (~phox@S0106a84e3f727bc3.pk.shawcable.net)
[08:09:47] <phox> Hi.  Getting this but looks like I have the correct # of (all named) arguments:  TypeError: get_last_event_time_by_account_id() got multiple values for argument 'account_id'
[08:10:41] <audio> my script currently downloads ~30 youtube videos per hour. I want to get this to ~300-500. how can i do this? script: https://bpa.st/A3FA
[08:11:06] <audio> phox, show some code
[08:11:13] <Repiphany> audio: Rent 15 servers
[08:11:26] <audio> Repiphany, i can't do this on one server?
[08:11:36] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[08:11:43] <audio> with like, multiprocessing or something?
[08:11:46] <Repiphany> Is bandwidth the bottleneck or your script
[08:11:50] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 272 seconds)
[08:12:33] <audio> Repiphany, seems to be
[08:12:37] *** Joins: zaquest (~notzaques@5.130.79.72)
[08:12:46] <audio> wait no
[08:12:49] <audio> hold on
[08:12:57] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[08:12:59] <phox> https://bpa.st/VYGA
[08:15:17] *** Quits: esther (~esther@45.130.137.35) (Ping timeout: 240 seconds)
[08:15:26] *** Quits: humberto1 (~humbertow@189.236.30.197) (Ping timeout: 250 seconds)
[08:15:52] *** Quits: emf (~emf@2620:10d:c090:400::5:d9eb) (Quit: emf)
[08:16:19] <audio> phox, still don't know what's going on
[08:16:26] <phox> yeah =/
[08:16:32] <phox> I have never seen this before and it makes no sense
[08:16:39] <audio> phox, i meant i need to see more code
[08:17:05] <audio> function definition for get_last_x, for example
[08:17:13] *** Joins: humberto1 (~humbertow@189.236.30.197)
[08:17:31] <phox> oh I bet I know what
[08:17:44] <phox> audio: it's an object method
[08:18:01] <phox> I've just never seen this before usually I get # args mismatch.  I'm missing 'self'
[08:18:03] <audio> Repiphany, so i'm thinking if i have this script running in 10 different instances, i can download 10x more videos
[08:20:33] *** Joins: esther (~esther@45.130.137.35)
[08:20:57] *** Joins: Viewday118 (~Viewday@user/viewday)
[08:21:01] *** Joins: agumonke` (~user@2a01:e0a:8f9:d3e0:b117:81a8:33f6:93e7)
[08:22:35] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[08:22:35] *** Viewday118 is now known as Viewday11
[08:22:47] *** Quits: agumonkey (~user@88.163.231.79) (Ping timeout: 252 seconds)
[08:23:00] *** Joins: storm_ (~storm@78.171.72.92)
[08:23:35] *** Quits: alex11 (~alex11@user/alex11) (Read error: Connection reset by peer)
[08:24:39] *** Quits: vlado2 (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c) (Ping timeout: 268 seconds)
[08:25:25] *** Quits: storm_ (~storm@78.171.72.92) (Client Quit)
[08:26:21] *** Joins: c4017w_ (~c4017@209.52.68.8)
[08:27:20] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[08:28:09] *** Joins: storm_ (~storm@78.171.72.92)
[08:28:37] *** Quits: ideopathic (~ideopathi@2600:1702:8b0:a500:b1de:626b:a417:d045) (Ping timeout: 240 seconds)
[08:28:41] *** Quits: storm_ (~storm@78.171.72.92) (Client Quit)
[08:29:31] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 245 seconds)
[08:31:50] *** Quits: montybanksnyc (~montybank@pool-96-240-6-14.nwrknj.fios.verizon.net) (Read error: Connection reset by peer)
[08:32:06] *** Joins: saroy (~Sandipan@43.252.250.113)
[08:32:16] *** Joins: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net)
[08:32:33] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::78dd) (Ping timeout: 256 seconds)
[08:32:44] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[08:35:19] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[08:35:35] *** Quits: nuh^ (~nuh@207.243.108.170) (Remote host closed the connection)
[08:35:40] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (Quit: The Lounge - https://thelounge.chat)
[08:39:18] <SnoopJ> The complete error report would also be helpful
[08:40:57] *** Joins: han-solo (~hanish@user/han-solo)
[08:41:57] *** Quits: x_kuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[08:44:59] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Ping timeout: 256 seconds)
[08:46:57] *** Quits: lifefir31 (~lifefir3@152.37.120.101) (Read error: Connection reset by peer)
[08:47:32] *** Joins: lifefir31 (~lifefir3@152.37.120.101)
[08:47:37] *** Quits: esther (~esther@45.130.137.35) (Ping timeout: 240 seconds)
[08:49:28] *** Joins: esther (~esther@45.130.137.35)
[08:49:40] *** Quits: humberto1 (~humbertow@189.236.30.197) (Ping timeout: 250 seconds)
[08:51:24] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:d80e:f8e4:65fa:55e) (Ping timeout: 250 seconds)
[08:53:37] *** Quits: esther (~esther@45.130.137.35) (Ping timeout: 240 seconds)
[08:57:41] <AhmedAmerican> is my Class looks normal ? https://bpa.st/BKDQ as this is my 1st to use Classes at all. Thanks in advance as well.
[08:58:56] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[08:59:35] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[08:59:59] *** Quits: KateTheLynx (~KateTheLy@178235188117.dynamic-4-waw-k-3-0-0.vectranet.pl) (Ping timeout: 256 seconds)
[09:00:48] *** Joins: humberto1 (~humbertow@189.236.30.197)
[09:01:37] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Ping timeout: 240 seconds)
[09:02:03] *** Joins: jazzy2 (~jaziz@user/jaziz)
[09:02:12] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[09:02:23] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[09:02:36] *** Quits: Astronaut_ (~astronaut@o-u-t-e-r.space) (Quit: Bye)
[09:02:41] *** Quits: sumi80m (~dos@39.191.202.62.dynamic.cgnat.res.cust.swisscom.ch) (Read error: Connection reset by peer)
[09:02:56] *** Joins: Astronaut (~astronaut@o-u-t-e-r.space)
[09:03:15] *** Quits: alxndr (~alexander@ybti.net) (Remote host closed the connection)
[09:03:25] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Read error: Connection reset by peer)
[09:03:45] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[09:04:22] *** Joins: sumi80m (~dos@39.191.202.62.dynamic.cgnat.res.cust.swisscom.ch)
[09:05:09] *** Joins: tWqaq (~tWqaq@240e:389:5d1c:ff00:ee0d:2d29:96db:ddcd)
[09:05:17] *** Quits: humberto1 (~humbertow@189.236.30.197) (Ping timeout: 240 seconds)
[09:06:36] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[09:07:17] *** Quits: remolej (~kenoba@user/kenoba) (Quit: Ping timeout (120 seconds))
[09:07:30] *** Joins: alxndr (~alexander@ybti.net)
[09:07:44] *** Joins: remolej (~kenoba@user/kenoba)
[09:08:44] *** Joins: kts (~kts@103.73.237.255)
[09:09:55] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[09:09:55] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[09:10:20] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:10:41] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[09:12:55] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 240 seconds)
[09:12:57] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 240 seconds)
[09:15:50] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 268 seconds)
[09:17:44] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[09:18:32] *** Joins: han-solo_ (~hanish@178.248.114.83)
[09:18:50] *** Quits: han-solo (~hanish@user/han-solo) (Killed (NickServ (GHOST command used by han-solo_!~hanish@178.248.114.83)))
[09:19:26] *** Quits: han-solo_ (~hanish@178.248.114.83) (Changing host)
[09:19:26] *** Joins: han-solo_ (~hanish@user/han-solo)
[09:19:30] *** han-solo_ is now known as han-solo
[09:21:16] *** Joins: vicfred (~vicfred@user/vicfred)
[09:22:39] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:22:40] *** Joins: alex11 (~alex11@user/alex11)
[09:23:14] *** Joins: esther (~esther@45.130.137.35)
[09:23:29] *** Quits: jaggz (~jaggz@user/jaggz) (Quit: I saith goodbye)
[09:26:03] *** Quits: bloody_ (~bloody@user/bloody) (Quit: okluvyabubye)
[09:26:52] *** Joins: savolla (~quassel@84.44.28.28)
[09:27:05] *** Joins: c4017w__ (~c4017@209.52.68.8)
[09:27:52] *** Joins: djapo (~archangel@user/djapo)
[09:30:35] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[09:31:25] *** Quits: kts (~kts@103.73.237.255) (Quit: Konversation terminated!)
[09:31:26] *** Quits: p-i- (~Ohmu@183.89.25.222) (Ping timeout: 260 seconds)
[09:31:42] *** Joins: HaMsTeRs (~Thunderbi@210.3.213.4)
[09:32:48] *** Joins: bluedust_ (~bluedust@59.89.219.123)
[09:33:17] *** Quits: bluedust (~bluedust@117.222.189.19) (Ping timeout: 240 seconds)
[09:34:58] *** Quits: faceface (~faceface@user/faceface) (Remote host closed the connection)
[09:35:40] *** Joins: bahamas (~lucian@84.232.140.52)
[09:35:58] *** Joins: icy_hot (~icy_hot@222.98.218.99)
[09:36:14] <Jonno_FTW> is there a tool to automatically fix % formatting in logger calls?
[09:36:19] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[09:37:23] *** Joins: manti7 (~manti7@176.10.104.94)
[09:37:50] *** Quits: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Quit: Bye)
[09:38:54] *** Quits: Warped (~Warped@user/warped) (Quit: We Gone! Bye Bye)
[09:38:57] *** Quits: esther (~esther@45.130.137.35) (Ping timeout: 240 seconds)
[09:39:38] *** Quits: savolla (~quassel@84.44.28.28) (Remote host closed the connection)
[09:39:56] *** Joins: esther (~esther@138.199.60.167)
[09:41:06] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:99de:8145:e43e:2adc)
[09:41:16] *** Joins: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[09:44:12] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[09:44:25] *** Joins: rvalue (~rvalue@user/rvalue)
[09:44:44] *** Quits: agumonke` (~user@2a01:e0a:8f9:d3e0:b117:81a8:33f6:93e7) (Remote host closed the connection)
[09:45:23] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:5cb1:db46:4f19:4e1e) (Quit: Leaving)
[09:45:55] <mat001> I hope it's ok to ask a bit sysadmin related question - but it's about deploying Flask really
[09:46:41] <mat001> When you set Flask app to run on systemd or supervisord...do you need to have a flask app running or systemd starts it by itself?
[09:46:58] *** Joins: a6a45081-2b83 (~aditya@2601:249:4300:1296:88ec:cc73:84d4:1507)
[09:47:01] *** Quits: nre (~nre@55d4979f.access.ecotel.net) (Ping timeout: 245 seconds)
[09:48:44] *** Parts: stemid (~nocturnal@i-lands.anark.ist) ()
[09:49:05] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[09:51:39] *** Quits: koo5_ (~quassel@51.140.155.227) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[09:52:33] *** Joins: koo5_ (~quassel@51.140.155.227)
[09:52:55] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[09:53:20] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[09:53:32] *** Quits: a6a45081-2b83 (~aditya@2601:249:4300:1296:88ec:cc73:84d4:1507) (Remote host closed the connection)
[09:54:05] *** Joins: pycurious (~Adium@user/pycurious)
[09:54:12] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 240 seconds)
[09:56:19] *** Quits: Zeturic (~Orimendix@50.26.218.162) (Quit: Leaving)
[09:57:37] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:58:07] *** Joins: frost (~frost@user/frost)
[09:58:55] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[09:59:24] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 240 seconds)
[09:59:30] *** Quits: Abrax (~Abrax@user/abrax) (Ping timeout: 272 seconds)
[10:00:31] *** Joins: jaggz (~jaggz@user/jaggz)
[10:00:52] *** Joins: pycurious (~Adium@user/pycurious)
[10:01:17] *** Joins: brentaarnold (~brentaarn@24.112.92.157)
[10:03:30] <EdFletcher> mat001: no you don't run the flask app on your own, the lifetime of that process is entirely controlled by systemd now. you can adjust _how_ systemd launches it via the config options
[10:03:50] *** Quits: icy_hot (~icy_hot@222.98.218.99) (Quit: WeeChat 3.4)
[10:04:27] *** Joins: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr)
[10:05:50] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[10:06:32] *** Joins: lbalhar (~lbalhar@93.185.13.26)
[10:06:41] *** Joins: mixfix41 (~homefame@user/mixfix41)
[10:06:51] *** Quits: blei (~blei@user/blei) (Ping timeout: 256 seconds)
[10:07:07] *** Joins: t3nj1n (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net)
[10:07:10] *** Joins: t3nj1n_ (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net)
[10:07:57] *** Quits: esther (~esther@138.199.60.167) (Ping timeout: 240 seconds)
[10:08:22] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 272 seconds)
[10:10:51] *** Joins: fef (~thedawn@user/thedawn)
[10:11:36] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 245 seconds)
[10:13:13] *** Joins: Researcher- (ceo@blockchainore.com)
[10:13:24] *** Joins: jpodivin (~jpodivin@cgnat44-pool3-70-163.poda.cz)
[10:13:31] *** Joins: jackblasted (~quassel@173.239.197.100)
[10:13:57] *** Quits: jpodivin (~jpodivin@cgnat44-pool3-70-163.poda.cz) (Client Quit)
[10:14:21] *** Quits: Researcher- (ceo@blockchainore.com) (Client Quit)
[10:14:32] *** Joins: rando25892 (~atler@user/rando25892)
[10:14:54] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[10:15:16] <amogorkon> toml useable/useful for logging? yes, no, maybe?
[10:16:13] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[10:17:00] *** Joins: jpodivin (~jpodivin@cgnat44-pool3-70-163.poda.cz)
[10:17:05] *** Joins: goncalo (~goncalo.g@154.61.65.189)
[10:18:20] *** Joins: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net)
[10:18:24] *** Joins: envex (~envex@cpe-173-91-189-33.neo.res.rr.com)
[10:18:29] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[10:19:05] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[10:19:47] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[10:19:47] *** Quits: somlis (~somlis@user/somlis) (Ping timeout: 250 seconds)
[10:19:56] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Read error: Connection reset by peer)
[10:20:24] *** Quits: goncalo_ (~goncalo.g@154.61.65.190) (Ping timeout: 272 seconds)
[10:20:42] *** Joins: Viewday111 (~Viewday@user/viewday)
[10:22:09] *** Quits: Giovanni (~Giovanni@176.67.166.45) (Ping timeout: 252 seconds)
[10:22:12] *** Joins: upsala (~zcb@185.209.196.139)
[10:22:13] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[10:22:13] *** Viewday111 is now known as Viewday11
[10:22:55] *** Joins: ihristov (~ihristov@217.145.94.71)
[10:22:58] *** Joins: Giovanni (~Giovanni@31.206.54.14)
[10:23:25] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[10:23:30] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[10:23:49] *** Joins: Guest56 (~Guest56@192.55.55.56)
[10:23:49] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:24:09] <BrenBarn> how would you use it for logging?
[10:24:10] <Guest56> I'm moving some django installation to github + adding CI pipeline. Currently everything is within the same repo. Should/could I keep django itself in separate repo than the actual site?
[10:24:59] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[10:25:30] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:25:52] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[10:26:09] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:26:37] *** Quits: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr) (Ping timeout: 240 seconds)
[10:27:45] *** Joins: c4017w_ (~c4017@209.52.68.8)
[10:27:59] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[10:28:16] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:28:20] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[10:28:41] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[10:29:40] *** Joins: pycurious (~Adium@user/pycurious)
[10:31:00] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[10:33:42] *** Quits: pr3d4t0r (~zhenya01@user/pr3d4t0r) (Ping timeout: 252 seconds)
[10:33:49] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Ping timeout: 240 seconds)
[10:34:03] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[10:34:12] *** Joins: mrwick (~mrwick@user/mrwick)
[10:36:43] *** Joins: goncalo_ (~goncalo.g@154.61.65.190)
[10:37:20] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:37:42] *** Quits: Midjak (~Midjak@82.66.147.146) (Quit: This computer has gone to sleep)
[10:37:53] *** Joins: p-i- (~Ohmu@183.89.25.222)
[10:38:03] *** Joins: Midjak (~Midjak@82.66.147.146)
[10:38:22] *** Quits: Midjak (~Midjak@82.66.147.146) (Remote host closed the connection)
[10:38:41] *** Quits: goncalo (~goncalo.g@154.61.65.189) (Ping timeout: 245 seconds)
[10:38:59] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[10:39:17] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:41:21] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:41:25] *** Quits: rje (~textual@50.35.241.164) (Ping timeout: 256 seconds)
[10:41:49] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[10:41:59] *** Joins: starship (~starship@2607:fb90:4099:7a97:6921:5907:96aa:e575)
[10:42:41] <starship> Hi?
[10:42:56] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[10:44:07] *** Joins: slav0nic (slav0nic@python.su)
[10:44:19] *** Joins: kts (~kts@103.73.237.255)
[10:44:29] <starship> So what projects are you guys working on
[10:44:40] <starship> Or learning ?
[10:44:59] *** Quits: kts (~kts@103.73.237.255) (Client Quit)
[10:45:01] *** Quits: Giovanni (~Giovanni@31.206.54.14) (Remote host closed the connection)
[10:45:06] *** Quits: jackblasted (~quassel@173.239.197.100) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[10:45:06] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Ping timeout: 272 seconds)
[10:45:06] *** Quits: digilink (~digilink@user/digilink) (Ping timeout: 272 seconds)
[10:45:10] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 260 seconds)
[10:46:03] <sreve> I have to replace all substring with more than one '.' in a string. for. ex. '..', '...', '....' -> 'x', how can I easy do that?
[10:46:26] *** Joins: digilink (~digilink@user/digilink)
[10:47:13] *** Joins: nre (~nre@55d4979f.access.ecotel.net)
[10:47:30] <starship> Sreve care to elaborate
[10:47:42] <sreve> starship: sorry?
[10:47:53] <starship> What do you mean by substring?
[10:48:12] <sreve> Its a part of a string.
[10:48:29] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:d80e:f8e4:65fa:55e)
[10:48:40] *** Joins: rje (~textual@65.141.156.170)
[10:48:54] <starship> "aaaaSothisIsPartOfStringaaa"?
[10:49:19] <starship> Want to replace SothisisPart of the string ?
[10:50:20] <starship> You said all substrings are they strings in a list?
[10:50:30] *** Joins: Kawazaki (~Kawazaki@user/Kawazaki)
[10:51:13] <starship> Or add periods to the strings ?
[10:51:34] *** Joins: xx (~xx@user/xx)
[10:51:36] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[10:51:48] <sreve> no problem, I use a loop to do that. I thought there is a ready made function for that.
[10:52:38] *** Quits: DrBrownBear (~Drbb@2600:1700:9aa1:6bc0::47) (Ping timeout: 260 seconds)
[10:52:58] *** Quits: noteness (~noteness@user/noteness) (Remote host closed the connection)
[10:53:21] *** Joins: noteness (~noteness@user/noteness)
[10:54:47] <jinsun__> sreve: sounds like a job for regex
[10:55:20] <jinsun__> try `re.sub(r"\.\.+", "x", your_string)`
[10:55:25] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[10:56:19] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:56:36] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[10:57:03] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:57:48] *** Joins: tristan_ (~tristan@223.62.169.44)
[10:57:57] *** Quits: catern (~sbaugh@2604:2000:8fc0:b:a9c7:866a:bf36:3407) (Ping timeout: 240 seconds)
[10:58:15] <starship> Regex is awesome
[10:58:22] <sreve> jinsun__: yes, that works, thank you.
[10:58:38] *** Quits: tristan_ (~tristan@223.62.169.44) (Remote host closed the connection)
[10:58:58] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[10:58:59] *** Quits: Guest111 (~Guest111@88.103.7.38) (Ping timeout: 256 seconds)
[10:59:14] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:00:58] *** Joins: pycurious (~Adium@user/pycurious)
[11:01:08] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:01:18] *** Joins: chele (~chele@user/chele)
[11:01:24] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:02:04] *** Joins: iomari891 (~iomari891@105.112.138.38)
[11:02:23] *** Quits: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 256 seconds)
[11:02:29] *** Joins: test_ (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[11:03:17] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:03:35] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:04:52] *** Quits: starship (~starship@2607:fb90:4099:7a97:6921:5907:96aa:e575) (Quit: Quit)
[11:05:23] *** Joins: starship (~starship@2607:fb90:4099:7a97:6921:5907:96aa:e575)
[11:05:30] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:05:47] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:07:41] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:07:57] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:09:10] *** Quits: cthulchu_ (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 272 seconds)
[11:09:20] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:09:55] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[11:10:05] *** Joins: djapo (~archangel@user/djapo)
[11:10:11] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:10:12] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[11:10:32] *** Quits: jochum (~quassel@user/jochum) (Ping timeout: 240 seconds)
[11:11:04] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 272 seconds)
[11:11:19] <nazarewk[m]> what is the current state of the art library for YAML in python? :P
[11:11:39] *** Quits: memoryleak (~quassel@195-202-248-193.dynamic.hispeed.ch) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[11:12:03] *** Joins: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de)
[11:12:08] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:12:27] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:12:45] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:12:46] *** Joins: memoryleak (~quassel@195-202-248-193.dynamic.hispeed.ch)
[11:13:03] *** Joins: gadius (~gadfly@107-214-145-46.lightspeed.sntcca.sbcglobal.net)
[11:13:24] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[11:13:36] *** Quits: samuelbernardo (~samuelber@nata02.lip.pt) (Ping timeout: 272 seconds)
[11:14:15] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:14:30] <cluelessperson> nazarewk[m], don't use yaml. :D
[11:14:32] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:14:33] *** Joins: pycode1 (~pycode3@2001:b07:5d28:551:19df:e67f:9bdd:4b58)
[11:14:38] * cluelessperson hates yaml
[11:15:14] <nazarewk[m]> sadly i'm working primarily with k8s :P
[11:15:55] *** Joins: MajorBiscuit (~MajorBisc@c-001-019-045.client.tudelft.eduvpn.nl)
[11:16:09] *** Quits: memoryleak (~quassel@195-202-248-193.dynamic.hispeed.ch) (Client Quit)
[11:16:28] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:16:43] <fakenullie> pyyaml is alright if you use safe_load I think
[11:16:44] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:16:57] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[11:17:14] *** Joins: memoryleak (~quassel@195-202-248-193.dynamic.hispeed.ch)
[11:17:23] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[11:17:30] <fakenullie> you can interact with k8s directly with kubernetes-client
[11:17:32] *** Joins: gentooclimax (~gentoocli@2a02-8440-3141-d377-3f58-eeba-d6e3-256c.rev.sfr.net)
[11:17:44] *** Joins: tobybl (~tobybl@252.193.115.87.dyn.plus.net)
[11:18:10] *** Joins: gusto (~Augustus@109.255.100.54)
[11:18:46] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:19:03] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:19:20] *** Quits: memoryleak (~quassel@195-202-248-193.dynamic.hispeed.ch) (Client Quit)
[11:20:21] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 245 seconds)
[11:20:34] *** Quits: Jong (~Jong@163.114.132.1) (Ping timeout: 272 seconds)
[11:20:44] *** Joins: samuelbernardo (~samuelber@nata01.lip.pt)
[11:20:54] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:21:10] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:21:42] <nazarewk[m]> guess i'm back to pyyaml then (heard it was deprecated or something)
[11:22:32] *** Joins: the_lanetly_052 (~the_lanet@194.135.169.126)
[11:23:12] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:23:16] <fakenullie> well, maybe it's not developed actively anymore
[11:23:29] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:23:40] <fakenullie> but I don't know of anything better
[11:24:55] *** Joins: tableflip (~tableflip@121.99.197.93)
[11:25:08] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:25:25] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:25:55] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[11:26:02] <jinsun__> https://yaml.org/ mentions 4 libraries for python
[11:26:35] <jinsun__> sounds like ruamel.yaml is the more up-to-date one
[11:26:46] *** Quits: ckdCreations (~ckdCreati@147.55.130.38) (Read error: Connection reset by peer)
[11:27:07] *** Joins: tgamblin_ (~tgamblin@2607:fea8:c29d:d7c0:fa88:8bc5:c0d2:27cc)
[11:27:16] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:27:33] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:28:08] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[11:28:17] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0:fa88:8bc5:c0d2:27cc) (Ping timeout: 240 seconds)
[11:28:30] *** Joins: c4017w__ (~c4017@209.52.68.8)
[11:28:35] *** Joins: ckdCreations (~ckdCreati@147.55.133.141)
[11:28:42] <starship> Any libraries in python for VR for oculus?
[11:28:48] *** Joins: rendar (~rendar@user/rendar)
[11:29:10] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:29:27] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:30:05] <twb> starship: oculus SDK isn't already python?
[11:30:37] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[11:31:05] *** Quits: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (Remote host closed the connection)
[11:31:05] *** Joins: semeion (~semeion@user/semeion)
[11:31:26] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:31:45] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:31:53] *** Quits: kickingvegas (~cchoi@c-73-170-198-141.hsd1.ca.comcast.net) (Quit: leaving)
[11:32:18] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[11:32:37] *** Quits: acer (~quassel@151.81.118.116) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[11:33:29] *** Joins: ice9 (~ice9@user/ice9)
[11:33:32] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:33:43] <starship> No I think it's I'm c/c++ but some people have made some bindings
[11:33:49] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:34:19] *** Joins: palasso (~palasso@user/palasso)
[11:34:52] <starship> Any one like working in c or c++ or is python your favorite I know it's a questions with many various answers
[11:35:04] *** Joins: paul424 (~tom@ip-5-172-232-47.multi.internet.cyfrowypolsat.pl)
[11:35:20] *** Joins: Smedles (~quassel@61-245-148-167.3df594.adl.nbn.aussiebb.net)
[11:35:34] *** Quits: white2 (~mahengrui@user/mahengrui1) (Ping timeout: 260 seconds)
[11:36:02] <EdFletcher> they are tools and each tool has problems for which it is better at solving, so you chose according to that. it's like asking "you like working with hammer or saw or chisel?"
[11:36:21] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:69dd:6e2b:de9f:e831)
[11:36:34] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:36:50] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:37:58] *** Joins: Jong (~Jong@2620:10d:c090:400::5:f783)
[11:37:59] <deniska> or a pointy rock, if we're talking about C :P
[11:38:15] *** Joins: sawk (~quassel@151.81.118.116)
[11:38:25] *** Quits: tudor_ (~tudor@tomka.hu) (Ping timeout: 250 seconds)
[11:38:27] *** Quits: sawk (~quassel@151.81.118.116) (Client Quit)
[11:38:37] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:38:54] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:39:03] *** Joins: sawk (~quassel@151.81.118.116)
[11:39:25] <nazarewk[m]> I wonder, is it a good idea to use Poetry + PipX to build containers?
[11:39:53] <nazarewk[m]> I'm wondering about revamping packaging of Python scripts in the company and I kind of like the flow you get with poetry + pipx for local development
[11:40:25] *** Quits: starship (~starship@2607:fb90:4099:7a97:6921:5907:96aa:e575) (Remote host closed the connection)
[11:40:41] <nazarewk[m]> (basically right now some are managed with pipenv, some plain requirements some are packaged using pip install pkg1 etc.)
[11:40:42] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:40:59] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:41:33] <EdFletcher> deniska: lol indeed, well put
[11:42:46] *** Joins: Guest111 (~Guest111@88.103.7.38)
[11:42:47] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:43:04] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:45:04] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:45:22] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:46:13] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[11:46:46] *** Quits: audio (~audio@user/audio) (Ping timeout: 260 seconds)
[11:47:04] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:47:21] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:48:28] *** Quits: dkr13 (~dkr13@dkr13.de) (Quit: The Lounge - https://thelounge.chat)
[11:48:38] *** Joins: gurkenglas (~gurkengla@dslb-188-096-121-068.188.096.pools.vodafone-ip.de)
[11:49:06] *** Joins: dkr13 (~dkr13@dkr13.de)
[11:49:06] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[11:49:09] *** Joins: ivii (~ivan@user/ivii)
[11:49:12] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:49:14] *** Joins: p-i-_ (~Ohmu@mx-ll-183.89.25-222.dynamic.3bb.co.th)
[11:49:16] *** Quits: pkapp_ (~pkapp@2601:58c:c500:6900:f4a5:9f37:8bd8:f753) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[11:49:20] *** Joins: audio (~audio@user/audio)
[11:49:31] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:3251:6452:8222:909a)
[11:49:31] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:50:02] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[11:51:15] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:51:32] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:52:15] *** Quits: p-i- (~Ohmu@183.89.25.222) (Ping timeout: 256 seconds)
[11:53:11] *** Joins: arinov_ (~arinov@213.194.126.155)
[11:53:28] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:53:45] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:54:40] *** Quits: LabMonkey (~LabMonkey@206.255.106.67) (Quit: Leaving)
[11:55:23] *** Joins: Stench (~Staunch@137.83.202.22)
[11:55:30] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:55:32] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:3251:6452:8222:909a) (Remote host closed the connection)
[11:55:34] *** Joins: kts (~kts@103.73.237.255)
[11:55:48] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:55:49] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:d5bc:848f:418a:608d)
[11:57:24] *** Quits: Staunch (~Staunch@137.83.202.22) (Ping timeout: 240 seconds)
[11:57:37] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:57:48] *** Quits: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net) (Ping timeout: 240 seconds)
[11:57:55] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:58:01] *** Quits: arcaile (~arcaile@212.102.49.5) (Ping timeout: 268 seconds)
[11:58:12] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:59:38] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:59:55] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:59:57] *** Joins: jay-m126 (~jay-m@gateway/vpn/pia/jay-m126)
[12:00:01] *** Joins: jay-m126_ (~jay-m@gateway/vpn/pia/jay-m126)
[12:00:02] *** Joins: jay-m1261 (~jay-m@gateway/vpn/pia/jay-m126)
[12:00:31] *** Joins: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net)
[12:01:40] *** Joins: jazzy3 (~jaziz@user/jaziz)
[12:01:42] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:01:52] *** Quits: NealRame (~a@89.187.163.193) (Quit: Konversation terminated!)
[12:01:59] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:02:37] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[12:03:02] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[12:03:25] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 240 seconds)
[12:03:55] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:04:12] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:04:26] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[12:05:32] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 272 seconds)
[12:05:58] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 250 seconds)
[12:06:02] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:06:19] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:06:31] *** Joins: djapo_ (~archangel@99-149-186-203.lightspeed.hstntx.sbcglobal.net)
[12:06:42] *** Quits: djapo (~archangel@user/djapo) (Read error: Connection reset by peer)
[12:07:33] *** Joins: andreasbuhr (~quassel@p549db106.dip0.t-ipconnect.de)
[12:08:08] <audio> my script currently downloads ~30 youtube videos per hour. I want to get this to ~300-500. how can i do this? script: https://bpa.st/A3FA
[12:08:13] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:08:30] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:08:58] *** Quits: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182) (Remote host closed the connection)
[12:09:20] *** Joins: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182)
[12:09:35] *** Quits: ano (~ano@user/ano) (Ping timeout: 240 seconds)
[12:09:40] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[12:10:07] <wyre> hi guys, is it possible to compile python code? ð¤
[12:10:17] *** jazzy3 is now known as jazzy
[12:10:25] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:10:42] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:11:08] *** Quits: portalrat (~portalrat@user/portalrat) (Remote host closed the connection)
[12:11:56] <deniska> wyre: are you looking for speed or obfuscation or ease of distribution?
[12:12:35] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:12:52] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:12:57] *** Joins: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr)
[12:13:07] *** gentooclimax is now known as climax
[12:13:09] <wyre> deniska, well, I'm just curious about the possibility and possible advantages of pre-compile the python source code
[12:13:12] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[12:14:13] <wyre> I guess the python code is actually always compiled(translated to bytecode) everytime the interpreter runs it
[12:14:34] <wyre> but ... I'm guessing you might probably to skip this step(?)
[12:14:36] *** climax is now known as gentooclimax
[12:14:41] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[12:14:48] <wyre> s/to//
[12:15:02] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:15:22] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:16:09] <deniska> wyre: python already caches compiled bytecode in __pycache__ directories
[12:16:57] <wyre> so ... pre-compiling the source code will not impact on performance, won't it?
[12:17:06] *** Joins: pycurious (~Adium@user/pycurious)
[12:17:08] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:17:24] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:17:30] <wyre> is there actually some good reason/argument to pre-compile it then? ð¤
[12:17:44] <bjs> wyre: well it will make the very first time you import it slightly faster
[12:17:48] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:18:06] <wyre> bjs, but just the very first time?
[12:18:09] <taeaad> Where would be a good place to ask about Folium? I am wondering when to use Circle and when to use CircleMarker.
[12:18:14] <bjs> wyre: yes because of the caching
[12:18:34] <wyre> bjs, but also in the case the source code has not changed?
[12:18:48] <bjs> wyre: Python won't use the pre-compiled code if the source is newer
[12:19:04] *** Joins: wyclif_ (~wyclif@user/wyclif)
[12:19:15] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:19:17] *** Quits: wyclif (~wyclif@user/wyclif) (Read error: Connection reset by peer)
[12:19:26] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[12:19:32] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:19:51] <bjs> (if the source is available that is)
[12:20:08] *** Quits: m1dnight (~christoph@78-22-9-5.access.telenet.be) (Quit: WeeChat 3.4)
[12:20:19] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[12:20:31] <wyre> bjs, sure, but I'm not sure what do you mean with "the very fist time" ... I mean ... after a boot the __pycache__ is preserved?
[12:20:50] *** Joins: Viewday110 (~Viewday@user/viewday)
[12:21:35] <bjs> wyre: yes, if it wasn't there'd not be much point
[12:22:11] *** Joins: somlis (~somlis@user/somlis)
[12:22:12] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:22:12] <bjs> remember that repeated imports of the same module don't re-run the py file anyway, so it would only matter between calling python
[12:22:25] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[12:22:25] *** Viewday110 is now known as Viewday11
[12:22:30] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:22:58] *** Joins: portalrat (~portalrat@user/portalrat)
[12:23:38] *** Joins: m1dnight (~christoph@78-22-9-5.access.telenet.be)
[12:23:56] <wyre> bjs, the I don't think pre-compile the python source code will worth the work ... just to improve the performance in the first import ... it's not a big thing ð
[12:24:15] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:24:19] <bjs> wyre: the only case I can really think of for pre-compiling is for a script (i.e. something that does not get imported at all) to remove the overhead of compiling the script
[12:24:32] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:24:50] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[12:24:51] <bjs> which usually is not worth it but in some very specific circumstances where you're trying to shave a few ms from the startup for scripts that run frequently it can help
[12:25:00] <wyre> bjs, oh, so ... __pycache__ folders are just created for imported modules?
[12:25:24] <bjs> wyre: yes have you seen https://docs.python.org/3/tutorial/modules.html#compiled-python-files
[12:26:23] *** Quits: kostkon__ (~androirc@2a02:587:a10f:c988:4142:80fd:5bce:d437) (Ping timeout: 268 seconds)
[12:26:24] *** dcaro_away is now known as dcaro
[12:26:38] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:26:55] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:27:18] *** Joins: Auron (Auron956@user/auron)
[12:28:44] *** Parts: xx (~xx@user/xx) ()
[12:28:46] *** Joins: c4017w_ (~c4017@209.52.68.8)
[12:29:00] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:29:18] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:29:33] <jinsun__> just learned a new python weirdness https://github.com/microsoft/pyright/issues/3131
[12:30:02] <jinsun__> so doing from .foo import bar inside __init__.py makes foo available too
[12:30:06] *** Quits: saltrocklamp[m] (~hexology@user/hexology) (Quit: You have been kicked for being idle)
[12:30:40] <jinsun__> I guess it is not too surprising after learning that import foo.bar also makes foo available
[12:30:40] *** Joins: saltrocklamp[m] (~hexology@user/hexology)
[12:31:09] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:31:23] *** Parts: saltrocklamp[m] (~hexology@user/hexology) ()
[12:31:25] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:32:01] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 245 seconds)
[12:32:21] <bjs> jinsun__: hmm, `from x import y` doesn't actually assign x, only y. It's like `y = __import__("x").y`  roughly
[12:32:41] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[12:32:48] *** Quits: _val_ (~valentin@82-169-14-137.biz.kpn.net) (Remote host closed the connection)
[12:33:06] <bjs> So I'm not sure I understand the argument made in the comment there
[12:33:13] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:33:22] *** Joins: bahamas (~lucian@84.232.140.52)
[12:33:31] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:33:36] <bjs> unless they're expanding `from x import y` into `import x; y = x.x; del x` or something and thinking of it as two separate assignments to the same name
[12:33:44] <jinsun__> it is specific to __init__.py it seems
[12:33:50] <jinsun__> doesn't happen everywhere
[12:34:30] <jinsun__> x is assigned when I test it
[12:34:32] *** Quits: jay-m1261 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 240 seconds)
[12:34:32] *** Quits: jay-m126_ (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 240 seconds)
[12:34:32] *** Quits: jay-m126 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 240 seconds)
[12:34:45] <jaggz> in __init__?
[12:34:54] <jaggz> so it's not just .x either?
[12:35:21] <jinsun__> print(x) after from x import y prints it instead of giving NameError
[12:35:29] <jinsun__> yeah inside __init__.py
[12:35:50] *** Joins: Payam (~Payam@138.106.57.132)
[12:35:55] <jinsun__> oops I mean from .x import y
[12:36:04] <jinsun__> from x import y behaves normally
[12:36:37] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:36:39] *** Joins: jay-m126 (~jay-m@154.72.167.198)
[12:36:48] *** Joins: jay-m126_ (~jay-m@154.72.167.198)
[12:36:55] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:38:40] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[12:38:57] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:40:00] <bjs> jinsun__: freaky
[12:40:48] <jaggz> doesn't seem halal
[12:40:56] <jaggz> I mean kosher.. doesn't seem kosher.
[12:40:57] <stockh0lm> i want to display a set of scientific data that changes, like one new pic a second (not sure if the CPU can handle that rate, or more, time will show). I found a few tricks on stackoverflow for matplotlib to increase throughput, but i seem to remember that the right way to do this would be to use PyQt5. Is that reasonable/possible/likely?
[12:41:03] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:41:22] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:41:25] <jaggz> 1 pic per second is fine, stockh0lm, in my experience.. I've done a lot faster
[12:41:34] *** Quits: rje (~textual@65.141.156.170) (Read error: Connection reset by peer)
[12:41:37] *** Quits: sherlock_95 (~sherlock_@static.131.42.161.5.clients.your-server.de) (Ping timeout: 240 seconds)
[12:41:45] <jaggz> with matplotlib you'll want to probably update the plot data instead of it creating new axis or whatever the hell the stuff is called
[12:41:54] *** Joins: jay-m1261 (~jay-m@154.72.167.198)
[12:41:58] <stockh0lm> if i can go faster that would be better.
[12:41:58] <jinsun__> bjs: also weird that pyright supports this case, but not the other one where foo is assigned after import foo.bar https://github.com/microsoft/pyright/issues/2964
[12:42:08] <stockh0lm> yes, exactly, that is something i read
[12:42:11] <jaggz> I've done much faster I think
[12:42:34] <stockh0lm> there is a bunch of calculations inbetween
[12:42:52] <Repiphany> matplotlib animation
[12:42:57] <jaggz> stockh0lm, https://www.scivision.dev/fast-update-matplotlib-plots/
[12:43:16] <jaggz> notice their h.set_data(img)
[12:43:18] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:43:36] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:43:40] <jaggz> give it a shot.  and hurry up!
[12:44:18] <jaggz> jinsun__, out of curiosity, have you tested this against other py versions?
[12:45:23] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:45:31] <jinsun__> jaggz: nah just tested with cpython 3.10, maybe I should get pypy and check there too
[12:45:40] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:45:48] *** Joins: nomic (~nomic@85.203.36.100)
[12:47:23] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:47:27] *** Joins: rje (~textual@50.35.241.164)
[12:47:31] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[12:47:40] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:47:57] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[12:48:26] *** Quits: sumi80m (~dos@39.191.202.62.dynamic.cgnat.res.cust.swisscom.ch) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[12:48:56] *** Joins: alius (~alius@70.72.28.109.rev.sfr.net)
[12:49:04] <stockh0lm> yeah, with the rapid updates, the autoscaling stops working. that is fine
[12:49:37] *** Joins: sumi80m (~dos@39.191.202.62.dynamic.cgnat.res.cust.swisscom.ch)
[12:49:41] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:50:00] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:50:41] *** Joins: kosh (~kosh@user/kosh)
[12:51:02] *** Quits: hams (~hams@user/hams) (Ping timeout: 240 seconds)
[12:51:40] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:d80e:f8e4:65fa:55e) (Ping timeout: 268 seconds)
[12:51:41] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[12:51:49] <Repiphany> Autoscaling isn't meant to handle line/image data being manually changed
[12:51:51] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:52:09] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:52:51] <jinsun__> jaggz: tried with pypy3.8-7.3.7, same behavior
[12:52:53] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[12:54:03] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:54:21] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:55:57] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Ping timeout: 240 seconds)
[12:56:06] *** Quits: xaltsc (~xaltsc@user/xaltsc) (Read error: Connection reset by peer)
[12:56:07] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:56:25] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:57:10] *** Joins: spacenautx (~spacenaut@user/spacenautx)
[12:57:21] *** Quits: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[12:57:49] *** Joins: ano (~ano@user/ano)
[12:58:09] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:58:17] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[12:58:26] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:59:27] *** gentooclimax is now known as climax
[13:00:18] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:00:35] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:01:12] *** Quits: goepsilongo (~goepsilon@2603-7000-ab00-62ed-84bf-264a-925c-29aa.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[13:01:39] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[13:02:19] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[13:02:36] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:04:05] *** Joins: Yugi (~hunterkll@remote.kisaracorporation.com)
[13:04:16] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:04:34] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:04:41] *** climax is now known as gentooclimax
[13:06:20] *** Quits: djapo_ (~archangel@99-149-186-203.lightspeed.hstntx.sbcglobal.net) (Ping timeout: 272 seconds)
[13:06:22] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:06:29] *** Quits: grimvar (~grimvar@i5C75F7AC.versanet.de) (Ping timeout: 256 seconds)
[13:06:39] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:07:02] *** Quits: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 240 seconds)
[13:08:23] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:08:40] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:09:08] <jaggz> stockh0lm, hmm.. there could be a call to recalculate the scaling, or maybe you end up having to seti t yourself
[13:09:12] <jaggz> no experience with that
[13:10:26] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:10:42] <Repiphany> You can do ax.relim() and ax.autoscale() (or something like that)
[13:10:44] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:11:08] <Jong> A minor annoyance is when there are two choices a variable can take such as if a variable is either "test" or "train" and if only one is checked in an if else statement, such as if mode == "test":  [bunch of code here] else: [bunch of other code here].  It would be visually satisfying if there was a way I could make it more effortless to associate the else with mode == "train".   I could use an elif, but the problem is that removes the
[13:11:08] <Jong>  communication that always of the two paths (if body path or else body path) is taken and never are they both skipped.   Has anyone else ever wondered how to resolve this?
[13:11:39] <Repiphany> Jong: Match case
[13:12:24] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:12:33] <jinsun__> yeah match is great for this
[13:12:39] <Jong> wow! match case is new!
[13:12:42] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:12:44] <Repiphany> Jong: https://docs.python.org/3/whatsnew/3.10.html#syntax-and-operations
[13:12:50] <Jong> Wow it's like the angels answered my prayers!!
[13:13:04] *** Joins: grimvar (~grimvar@i5C75F7AC.versanet.de)
[13:13:05] <Jong> This just made my day, no my entire week!!!
[13:13:10] <jaggz> Jong, how would they both be skipped?
[13:13:14] <jinsun__> I sometimes use elif and then a final else with an assert False
[13:13:28] *** Quits: duckpunch (~duckpunch@d28-23-90-26.dim.wideopenwest.com) (Remote host closed the connection)
[13:13:48] <jaggz> oh
[13:13:50] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:13:53] <stockh0lm> no, i dont think that it would make sense to recalculate the scaling. Think if the graph would jump like that, the scale needs to be somewhat stable. perhaps recalculate it if when it gets seriously out of scope.
[13:13:59] <jinsun__> which is one way to do it if match is not available
[13:14:03] <Jong> jaggz  they wouldn't both be skipped, but which code has the question of whether both might be skipped? if else or if elif ?
[13:14:18] <Jong> jaggz  I like reading code that closes as many open questions as possible
[13:14:24] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:14:42] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:14:52] <jaggz> i'm not sure what's not clear
[13:14:56] <jaggz> if foo:
[13:14:59] <jaggz> else:
[13:15:06] <jaggz>   if bar:
[13:15:10] <jaggz>   else:
[13:15:14] <jaggz>     whatever
[13:15:21] <jaggz> elif is the same as "else if" :)
[13:15:35] <Jong> when interpretation of a section of code requires understanding the broader code base, it's more work to understand the code. More mental energy is exhausted. More connections of indirection and more inferences must be made in the reader's mind.
[13:15:37] <jaggz> but I'm probably not understanding what you're disliking
[13:16:04] <jaggz> I agree. that's why I like stuff where I can oneline things, so I can see more at once :)
[13:16:21] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:16:24] <jaggz> and py allowing if foo: bar   # yay. oneline.
[13:16:28] <jaggz> anyhoo
[13:16:37] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:17:07] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:d5bc:848f:418a:608d) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[13:17:22] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:b229:a57b:ced3:1b)
[13:18:29] *** Joins: cosimone (~user@93-47-229-38.ip115.fastwebnet.it)
[13:18:51] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:19:09] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:19:17] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 240 seconds)
[13:20:02] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[13:20:05] *** Quits: pyfisch (~pyfisch@user/pyfisch) (Ping timeout: 256 seconds)
[13:20:20] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[13:20:42] *** Joins: timothy (~timothy@redhat/timothy)
[13:20:47] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:21:05] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:21:11] *** Joins: kostkon__ (~androirc@2.142.66.94.static.otenet.gr)
[13:22:26] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[13:22:42] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:22:59] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:24:38] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:24:56] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:25:11] *** Quits: Guest111 (~Guest111@88.103.7.38) (Ping timeout: 256 seconds)
[13:25:15] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[13:26:17] *** Quits: arinov_ (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[13:26:32] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:26:49] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:27:14] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[13:28:12] <anddam> back on my earlier question, tl;dr cannot build PySide2 on M1 mac without Rosetta2, I am following upstream building docs and halting on https://termbin.com/wfgk
[13:28:31] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:28:44] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[13:28:48] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:29:29] *** Joins: c4017w__ (~c4017@209.52.68.8)
[13:29:44] <Helle> anddam: what, seems like a weird issue with uuuu, Qt, I would poke at their IRC about this
[13:30:25] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:30:33] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:30:50] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:32:43] *** Joins: pycurious (~Adium@user/pycurious)
[13:32:45] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[13:32:52] *** Joins: faceface (~faceface@user/faceface)
[13:33:00] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[13:33:02] *** Quits: HaMsTeRs (~Thunderbi@210.3.213.4) (Quit: HaMsTeRs)
[13:35:30] *** Joins: angelacrust (~angelacru@182.64.88.197)
[13:36:13] <faceface> zerosum: Oh... the key and the value are swapped?
[13:36:31] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Ping timeout: 256 seconds)
[13:37:22] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 260 seconds)
[13:37:39] *** Quits: Cera (~Cera@user/Cera) (Ping timeout: 256 seconds)
[13:37:45] <ChrisWarrick> anddam: I donât know a thing about M1 Macs, or your project â but did you try building PySide6 (based on Qt 6)? (The migration from Qt 5 shouldnât be too hard.)
[13:38:00] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 272 seconds)
[13:38:42] *** Quits: Furai (~Furai@furai.pl) (Quit: WeeChat 3.4)
[13:38:42] *** Quits: twb (~twb@2403-5804-c6--cfeb-44f7-7895-9800.ip6.aussiebb.net) (Remote host closed the connection)
[13:38:47] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 256 seconds)
[13:39:32] *** Joins: pycurious (~Adium@user/pycurious)
[13:39:33] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:40:44] *** Yugi is now known as Hunterkll
[13:41:04] *** Joins: tomg_ (~tomg@user/tomg)
[13:41:11] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 245 seconds)
[13:41:12] *** Joins: Furai (~Furai@furai.pl)
[13:41:14] *** Quits: Pixi_ (~Pixi@user/pixi) (Quit: Leaving)
[13:41:16] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:41:33] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:41:38] *** Joins: Pixi (~Pixi@user/pixi)
[13:43:21] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Write error: Connection reset by peer)
[13:43:24] *** Quits: tomg (~tomg@user/tomg) (Ping timeout: 240 seconds)
[13:43:24] *** Joins: rampart (~rampart@3.sub-174-250-48.myvzw.com)
[13:43:39] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:44:26] *** Quits: callq (~callq@157.41.71.70) (Quit: callq)
[13:44:52] *** Quits: rampart (~rampart@3.sub-174-250-48.myvzw.com) (Client Quit)
[13:45:24] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:45:37] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 240 seconds)
[13:45:37] <anddam> ChrisWarrick: ah jeez I might have to restort to that, and my Qt usage is very low level, just some QDialog, common widgets and UILoader
[13:45:40] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:45:42] <anddam> ChrisWarrick: but I hoped to avoid that
[13:46:06] <anddam> and in doing so I should read and understand the licensing change
[13:46:07] *** Quits: bluedust_ (~bluedust@59.89.219.123) (Remote host closed the connection)
[13:47:29] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:47:47] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:48:16] *** Joins: bahamas (~lucian@84.232.140.52)
[13:49:13] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[13:49:27] <anddam> ChrisWarrick: project apart I see the issue is that pyside-setup âwith that setuptools command you can read at the bottom of my pasteâ requires having llvm-clang, whereas Xcode 13 is only providing clang, so I pulled in homebrev llvm package (recipe, cask, whatever silly name those have)
[13:49:33] *** Quits: ihristov (~ihristov@217.145.94.71) (Ping timeout: 256 seconds)
[13:50:08] *** Quits: Payam (~Payam@138.106.57.132) (Quit: Client closed)
[13:50:13] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[13:50:24] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:50:40] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:50:49] <anddam> in doing so I see that breakage in math module, I *guess* it's a matter of llvm bringing its own libstdc++ to the party and that's different than the Xcode provided one
[13:51:20] *** Joins: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net)
[13:51:25] <anddam> but this is a messy state of affairs and I am not even sure if I should be tinkering at setuptools level, or at Qt project level (qmake) or bare cmake level
[13:52:24] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:52:42] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:54:27] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:54:36] *** Quits: et (~et@user/et) (Ping timeout: 240 seconds)
[13:54:43] *** Joins: et_ (~et@user/et)
[13:54:43] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:54:47] <nedbat> jaggz: ilikeleavingoutspacesinmysentencessoicanseemoreatoncetoo
[13:55:09] *** et_ is now known as et
[13:55:15] *** Joins: M-blaise (~M-blaise@105.112.138.38)
[13:55:38] *** Joins: mei (~mei@user/mei)
[13:56:09] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[13:56:26] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:56:27] *** Quits: et (~et@user/et) (Read error: Connection reset by peer)
[13:56:42] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:58:24] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[13:58:42] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:59:43] *** Quits: pulec (~pulec@37-97-160-172.colo.transip.net) (Changing host)
[13:59:43] *** Joins: pulec (~pulec@user/pulec)
[14:00:38] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:00:40] *** Joins: et (~et@user/et)
[14:00:56] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:01:14] *** Quits: kts (~kts@103.73.237.255) (Quit: Konversation terminated!)
[14:01:26] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[14:02:36] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[14:02:43] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:02:59] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:03:44] *** Joins: kts (~kts@103.73.237.246)
[14:04:39] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[14:04:56] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:06:21] *** Joins: f1se4 (~f1se4@213.195.113.45)
[14:06:37] *** Quits: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[14:06:38] *** Joins: et_ (~et@user/et)
[14:06:43] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:06:56] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[14:07:01] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:07:29] *** Quits: slisnake (~slisnake@103.107.198.140) (Ping timeout: 250 seconds)
[14:07:35] *** Quits: gentooclimax (~gentoocli@2a02-8440-3141-d377-3f58-eeba-d6e3-256c.rev.sfr.net) (Quit: Konversation terminated!)
[14:07:41] *** Quits: et (~et@user/et) (Ping timeout: 256 seconds)
[14:07:41] *** et_ is now known as et
[14:07:42] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Ping timeout: 260 seconds)
[14:08:47] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:09:04] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:09:04] <bjs> nedbat: youshouldwriteallyourblogpostslikethis
[14:09:25] *** Joins: slisnake (~slisnake@103.107.198.140)
[14:09:26] <bjs> people have busy lives and all that whitespace and punctuation is just an insult to their time
[14:09:58] <mrwick> etcommenc'estmarcheaufranÃ§ais?
[14:11:07] <zen_coder> I am using "xml.etree.ElementTree" how can I find an element with a certain attribute?
[14:11:18] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:11:35] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:11:42] <amogorkon> don'tforgettouse{}though
[14:13:20] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:13:37] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:14:56] *** Joins: pycurious (~Adium@user/pycurious)
[14:15:15] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[14:15:32] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:15:35] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[14:17:09] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Client Quit)
[14:17:10] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:17:26] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:18:32] *** Quits: slisnake (~slisnake@103.107.198.140) (Ping timeout: 240 seconds)
[14:18:32] *** Joins: bluedust (~bluedust@59.89.219.123)
[14:18:34] *** Joins: ZNHvFrdlBi (uid543923@id-543923.ilkley.irccloud.com)
[14:18:37] *** Joins: fhstPUHkAx (uid543924@id-543924.uxbridge.irccloud.com)
[14:18:37] <fhstPUHkAx> YrFVWliHQjZXTqHpaxRpiLXN
[14:18:42] *** Joins: bSsFlcAGda (uid543925@id-543925.ilkley.irccloud.com)
[14:18:42] <bSsFlcAGda> NMFWYKJLHwrIugUpjwlIduM
[14:18:47] *** Quits: ZNHvFrdlBi (uid543923@id-543923.ilkley.irccloud.com) (K-Lined)
[14:18:47] *** Joins: FDfmNLSvpZ (uid543926@id-543926.hampstead.irccloud.com)
[14:18:50] *** Quits: bSsFlcAGda (uid543925@id-543925.ilkley.irccloud.com) (K-Lined)
[14:18:52] *** Quits: fhstPUHkAx (uid543924@id-543924.uxbridge.irccloud.com) (K-Lined)
[14:18:52] *** Joins: ZlBboFiPTv (uid543927@id-543927.lymington.irccloud.com)
[14:18:53] *** Quits: FDfmNLSvpZ (uid543926@id-543926.hampstead.irccloud.com) (K-Lined)
[14:18:54] *** Quits: ZlBboFiPTv (uid543927@id-543927.lymington.irccloud.com) (K-Lined)
[14:19:09] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:19:27] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:20:49] *** Joins: slisnake (~slisnake@103.107.198.142)
[14:21:14] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[14:21:19] *** Quits: bluedust (~bluedust@59.89.219.123) (Remote host closed the connection)
[14:21:31] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:21:34] *** Joins: bluedust (~bluedust@59.89.219.123)
[14:22:14] <faceface> ieka6OoLohyohh9sahqu6wo ?
[14:22:22] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[14:22:46] <lericson> hm
[14:22:51] *** Joins: Ergo^ (~ergo@91.238.59.144)
[14:22:52] <Swayze> dont feed the bots
[14:23:09] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:23:26] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:24:01] <faceface> zen_coder: I'd bet it's in the documentation somewhere
[14:24:51] <faceface> So I resorted to using `export PYTHONPATH=.` so that I can run a test script in a subdir correctly on the cli of the main dir. Not sure why it fails though
[14:25:11] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[14:25:27] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:26:10] <faceface> Sorry, to be clear it works with the above path set
[14:26:17] *** Joins: singularity00 (~singulari@236.lan-hi1-2.static.rozabg.com)
[14:27:08] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:27:18] <faceface> not sure why it doesn't (when the path isn't set) work when I just run `python test/some_script.py` where the latter contains `from individual.individual import Individual`
[14:27:24] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:28:34] <faceface> I have to actually copy test/some_script.py to ./ (symlink doesn't work)
[14:28:39] <faceface> weird
[14:28:48] <faceface> (I mean, it's not weird... I'm confused)
[14:29:03] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:29:09] *** Joins: agumonke` (~user@2a01:e0a:8f9:d3e0:b117:81a8:33f6:93e7)
[14:29:20] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:29:55] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[14:29:56] *** Joins: c4017w_ (~c4017@209.52.68.8)
[14:30:09] *** Joins: Abrax (~Abrax@user/abrax)
[14:31:11] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:31:28] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:33:15] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:33:22] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[14:33:31] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:34:46] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[14:34:59] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[14:35:19] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:35:20] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[14:35:37] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:35:52] *** Joins: crashrep (~crashrep@user/crashrep)
[14:37:15] *** Quits: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net) (Quit: Client closed)
[14:37:17] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:37:34] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:37:38] <anddam> maybe you are confused because it's weird
[14:37:56] *** Quits: mei (~mei@user/mei) (Quit: mei)
[14:39:18] *** Quits: tobybl (~tobybl@252.193.115.87.dyn.plus.net) (Remote host closed the connection)
[14:39:49] <ChrisWarrick> faceface: touch test/__init__.py -> python -m test.some_script
[14:40:24] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:40:41] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:40:43] *** Joins: xaltsc (~xaltsc@user/xaltsc)
[14:40:57] *** Quits: slisnake (~slisnake@103.107.198.142) (Ping timeout: 240 seconds)
[14:42:31] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:42:44] <Luyin> hi folks! is it possible that the ratelimit package is incompatible with py 3.7? I'm trying to use it in 3.7.12 (via pyenv) and I keep getting errors installing this one
[14:42:49] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:42:50] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:43:11] *** Joins: slisnake (~slisnake@103.107.198.141)
[14:43:37] *** Joins: Z-cat (~Z-cat@user/z-cat)
[14:44:28] *** Joins: gusto (~Augustus@109.255.100.54)
[14:44:31] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:44:49] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:45:05] <Luyin> got a complete error log here: https://paste.xinu.at/Kq2/
[14:46:32] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:46:49] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:48:32] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:d80e:f8e4:65fa:55e)
[14:48:34] *** Joins: shad (~shad@user/shad)
[14:48:54] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:49:13] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:50:57] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[14:51:14] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:51:19] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 256 seconds)
[14:52:27] *** Joins: Z-cat_ (~Z-cat@128-69-59-246.broadband.corbina.ru)
[14:52:28] *** Joins: d3x (michal@bielaw.ski)
[14:52:57] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[14:53:13] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:54:00] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 272 seconds)
[14:54:43] *** Quits: Z-cat (~Z-cat@user/z-cat) (Ping timeout: 250 seconds)
[14:56:28] *** Joins: Z-cat__ (~Z-cat@37-145-61-148.broadband.corbina.ru)
[14:56:41] *** Joins: Klinda (~superleag@user/klinda)
[14:57:18] *** Quits: enkrypt (~enkrypt@user/enkrypt) (Quit: WeeChat 3.0)
[14:58:26] *** Quits: ryusaku (~ryu`@c6A334BC1.dhcp.as2116.net) (Ping timeout: 272 seconds)
[14:58:36] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Ping timeout: 240 seconds)
[14:59:03] *** Quits: Z-cat_ (~Z-cat@128-69-59-246.broadband.corbina.ru) (Ping timeout: 250 seconds)
[14:59:35] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:00:09] *** Quits: nre (~nre@55d4979f.access.ecotel.net) (Quit: Leaving.)
[15:00:16] *** Joins: nre1 (~nre@55d4979f.access.ecotel.net)
[15:00:16] <ChrisWarrick> Luyin: it looks like your python install is damaged
[15:00:36] *** Quits: pycode1 (~pycode3@2001:b07:5d28:551:19df:e67f:9bdd:4b58) (Ping timeout: 250 seconds)
[15:00:43] *** Quits: gurkenglas (~gurkengla@dslb-188-096-121-068.188.096.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[15:01:28] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:01:38] <ChrisWarrick> Luyin: rebuild it, but first make sure you have everything from https://github.com/pyenv/pyenv/wiki#suggested-build-environment
[15:01:46] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:03:01] *** Joins: edd_lc (~edd_lc@85.65.219.112.dynamic.barak-online.net)
[15:03:32] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:03:47] *** Quits: rMdes (~rmdes@my.armada.digital) (Read error: Connection reset by peer)
[15:03:49] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:04:08] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 272 seconds)
[15:05:43] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[15:05:46] *** Quits: paul424 (~tom@ip-5-172-232-47.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[15:06:00] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:06:34] *** Joins: Guest9937 (~Guest99@FL1-49-129-184-93.szo.mesh.ad.jp)
[15:06:41] *** Joins: theo (~theo@user/theo)
[15:06:45] *** Joins: semeion (~semeion@user/semeion)
[15:07:51] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:08:09] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:08:37] *** Quits: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr) (Ping timeout: 240 seconds)
[15:09:37] *** Joins: Gerula_ (~Gerula@user/gerula)
[15:09:37] *** Gerula is now known as Guest1069
[15:09:37] *** Gerula_ is now known as Gerula
[15:10:09] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:10:21] *** Joins: gormenghast (~gormengha@2a01:e0a:1fb:3af0:5c03:6bb0:f28f:5f19)
[15:10:28] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:10:43] *** Joins: enkrypt (~enkrypt@user/enkrypt)
[15:12:17] *** Quits: Guest1069 (~Gerula@user/gerula) (Ping timeout: 256 seconds)
[15:13:59] *** Quits: Guest56 (~Guest56@192.55.55.56) (Quit: Client closed)
[15:14:54] *** Joins: mlaogd^ (~mlaogd@207.243.108.170)
[15:14:56] *** Quits: Guest9937 (~Guest99@FL1-49-129-184-93.szo.mesh.ad.jp) (Quit: Client closed)
[15:15:06] *** Joins: Guest9988 (~Guest99@FL1-49-129-184-93.szo.mesh.ad.jp)
[15:15:34] <Luyin> ChrisWarrick: huh, interesting, thanks!
[15:15:44] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:16:03] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:16:39] <Luyin> hmm, I got all of those
[15:16:57] <Luyin> maybe they're outdated and I need to update them first, but I can't access my backup hard drive rn, so I'll do that later
[15:17:44] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:18:00] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:18:13] *** Quits: gormenghast (~gormengha@2a01:e0a:1fb:3af0:5c03:6bb0:f28f:5f19) (Quit: Quit)
[15:18:29] *** Joins: gormenghast (~gormengha@2a01:e0a:1fb:3af0:7285:c2ff:fe47:c69a)
[15:19:05] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[15:19:19] *** Joins: bahamas (~lucian@84.232.140.52)
[15:19:20] *** Joins: darksun (~darksun@user/darksun)
[15:19:32] *** Quits: Enitin (~Enitin@82.180.145.230) (Ping timeout: 240 seconds)
[15:19:44] *** Quits: fredrikhl (~fhl@myrsnipa.uio.no) (Remote host closed the connection)
[15:19:54] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:20:10] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:21:28] *** Parts: dunpeal (~dunpeal@2001:470:69fc:105::3e80) ()
[15:21:33] *** Quits: gormenghast (~gormengha@2a01:e0a:1fb:3af0:7285:c2ff:fe47:c69a) (Client Quit)
[15:21:45] *** Joins: gormenghast (~gormengha@2a01:e0a:1fb:3af0:7285:c2ff:fe47:c69a)
[15:22:08] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:22:22] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 260 seconds)
[15:22:26] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:24:07] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:24:24] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:24:25] *** Quits: Coinflipper (~Coinflipp@user/Coinflipper) (Quit: â)
[15:24:36] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 240 seconds)
[15:24:50] *** Joins: icy_hot (~icy_hot@106.241.29.252)
[15:25:32] *** Joins: _gormenghast (~gormengha@2a01:e0a:1fb:3af0:7285:c2ff:fe47:c69a)
[15:25:34] *** Quits: gormenghast (~gormengha@2a01:e0a:1fb:3af0:7285:c2ff:fe47:c69a) (Client Quit)
[15:25:34] *** Quits: _gormenghast (~gormengha@2a01:e0a:1fb:3af0:7285:c2ff:fe47:c69a) (Remote host closed the connection)
[15:25:48] *** Joins: gormenghast (~gormengha@2a01:e0a:1fb:3af0:7285:c2ff:fe47:c69a)
[15:26:08] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:26:14] *** Joins: Coinflipper (~Coinflipp@user/Coinflipper)
[15:26:24] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:26:52] *** Joins: ubert1 (~Thunderbi@2a02:8109:9880:303c:8433:129d:16c2:6bdb)
[15:26:54] *** Joins: bahamas (~lucian@84.232.140.52)
[15:27:35] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 240 seconds)
[15:28:09] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:28:25] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:28:27] *** Joins: Atque (~Atque@user/atque)
[15:28:54] *** Joins: Enitin (~Enitin@82.180.145.230)
[15:30:04] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:30:22] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:30:40] *** Joins: c4017w__ (~c4017@209.52.68.8)
[15:30:43] *** Quits: martums59 (~martums@user/martums) (Ping timeout: 256 seconds)
[15:30:59] *** Quits: gormenghast (~gormengha@2a01:e0a:1fb:3af0:7285:c2ff:fe47:c69a) (Quit: Leaving)
[15:31:02] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[15:31:09] *** Joins: gormenghast (~gormengha@2a01:e0a:1fb:3af0:7285:c2ff:fe47:c69a)
[15:31:24] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 240 seconds)
[15:31:36] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 245 seconds)
[15:31:40] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[15:31:53] *** Joins: iflema (~ian@user/iflema)
[15:32:11] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:32:14] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) ()
[15:32:14] *** Quits: data68 (~data@2a02:908:a65:3d80:b80d:6427:e2b5:c8fc) (Ping timeout: 250 seconds)
[15:32:24] *** Joins: dntreou (~yakiza@inet-2a02-6900-8804-e010--23.oracle-ocna.com)
[15:32:27] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:33:47] *** Joins: pycurious (~Adium@user/pycurious)
[15:33:58] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[15:34:15] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:34:33] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:34:54] <Luyin> ChrisWarrick: it seems you're right, 3.7.12 has some issues here. I'll try reinstallting it and seeing what's wrong. thanks for the pointer!
[15:35:53] *** Quits: upsala (~zcb@185.209.196.139) (Read error: Connection reset by peer)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:25] *** Joins: upsala (~zcb@185.209.196.139)
[15:36:25] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Write error: Connection reset by peer)
[15:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:42] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:37:41] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[15:37:48] *** Joins: r00tkit (~r00tkit@45.4.184.8.static.bsbtecnologia.com.br)
[15:37:48] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[15:38:22] *** Joins: djhankb (~djhankb@208.113.164.68)
[15:38:47] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:39:00] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[15:39:04] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:40:52] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:41:09] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:42:57] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:43:16] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:44:13] *** Quits: nomic (~nomic@85.203.36.100) (Quit: Leaving)
[15:44:45] <faceface> ChrisWarrick: is that really the 'right way to do it^{tm}'?
[15:44:49] <faceface> Feels a bit hackey
[15:45:00] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:45:11] <ChrisWarrick> faceface: that is the correct way to work with packages
[15:45:18] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:45:32] <faceface> ChrisWarrick: right, is it the 'convention' for running a test script on the cli?
[15:46:33] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[15:47:05] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[15:47:10] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:47:17] *** Quits: edd_lc (~edd_lc@85.65.219.112.dynamic.barak-online.net) (Ping timeout: 240 seconds)
[15:47:30] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:47:35] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 240 seconds)
[15:48:17] *** Joins: storm_ (~storm@78.175.151.204)
[15:48:52] <Luyin> weird, it seems there is something wrong with 3.7.12 on my machine. I reinstalled it and got the same error again. I'm gonna try 3.7.11 now and see whether that works
[15:49:25] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:49:44] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:51:29] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[15:51:45] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:52:26] <faceface> ChrisWarrick: All I want to do is run a script in a sub dir that 'imports' like a script in the parent dir, so I'm using PYTHONPATH=. ... I guess my question is it more canonical to turn that subdir into a package?
[15:53:39] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:53:54] *** Joins: int (~int@0x4.cx)
[15:53:58] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:54:46] *** Quits: Ox4 (~int@0x4.cx) (Ping timeout: 250 seconds)
[15:55:40] *** Joins: dante-as (~dante-as@188.24.161.140)
[15:55:48] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[15:55:49] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:56:00] *** Joins: F0rTh3J3st (~F0rTh3J3s@wsip-174-67-161-18.hr.hr.cox.net)
[15:56:00] <dante-as> Hi guys, any idea from where it comes this error? {"groups":["Incorrect type. Expected pk value, received str."]}
[15:56:06] <dante-as> When I am doing a request.post
[15:56:07] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:56:08] *** Quits: nickodd (~nickodd@user/nickodd) (Remote host closed the connection)
[15:57:53] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[15:57:58] *** Z-cat__ is now known as Z-cat
[15:58:08] *** Quits: Z-cat (~Z-cat@37-145-61-148.broadband.corbina.ru) (Changing host)
[15:58:08] *** Joins: Z-cat (~Z-cat@user/z-cat)
[15:58:09] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:59:24] *** Quits: angelacrust (~angelacru@182.64.88.197) (Quit: Client closed)
[16:00:04] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:00:21] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:00:36] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:b229:a57b:ced3:1b) (Ping timeout: 240 seconds)
[16:00:45] *** Joins: pkapp_ (~pkapp@2601:58c:c500:6900:b5b8:8033:9f76:62da)
[16:02:13] *** Quits: nre1 (~nre@55d4979f.access.ecotel.net) (Ping timeout: 268 seconds)
[16:04:53] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:04:57] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[16:05:11] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:05:43] *** Quits: storm_ (~storm@78.175.151.204) (Quit: Leaving)
[16:06:59] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:07:16] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:07:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[16:08:33] *** Joins: han-solo (~hanish@user/han-solo)
[16:09:02] <faceface> dante-as: can you pastebin your code?
[16:09:11] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[16:09:14] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:09:31] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:10:09] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[16:11:22] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:11:37] *** Quits: singularity00 (~singulari@236.lan-hi1-2.static.rozabg.com) (Ping timeout: 240 seconds)
[16:11:39] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:13:31] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[16:13:48] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:15:20] *** Joins: chl (~chl@195.249.211.252)
[16:15:21] *** Parts: chl (~chl@195.249.211.252) ()
[16:15:43] *** Joins: chl (~chl@user/chl)
[16:15:49] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:16:07] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:17:10] <chl> How can a bytes string being interpreted as a string? https://bpa.st/OVAQ
[16:17:12] <jamea> hi all
[16:17:20] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[16:17:27] *** Quits: dante-as (~dante-as@188.24.161.140) (Ping timeout: 256 seconds)
[16:17:38] <chl> How is it possible for what is clearly a bytes string to be a string*
[16:17:48] <jamea> in Entire windows, how to change cursor/pointer of mouse the size and colour? thanks
[16:18:02] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:18:20] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:20:14] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:20:31] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:20:59] *** Joins: Viewday115 (~Viewday@user/viewday)
[16:21:49] <Peng> chl: ...Python 2?
[16:21:54] <chl> Python3
[16:22:01] *** Joins: tga (~tga@p54a75da2.dip0.t-ipconnect.de)
[16:22:01] *** Quits: tga (~tga@p54a75da2.dip0.t-ipconnect.de) (Changing host)
[16:22:01] *** Joins: tga (~tga@user/tga)
[16:22:28] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:22:32] <jinsun__> chl: well what did you expect to happen and what actually happened when you ran it?
[16:22:45] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:22:52] <faceface> chl: it's false for me
[16:22:55] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[16:22:56] *** Viewday115 is now known as Viewday11
[16:23:26] <chl> faceface: Yep, completely agree.
[16:23:32] <Peng> chl: In that code, isinstance() would only return true if you had replaced isinstance or str with something else
[16:23:33] <han-solo> looks kinda like some b64 encoded value
[16:23:43] *** Joins: crashrep (~crashrep@user/crashrep)
[16:23:57] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[16:24:08] <chl> jinsun__: Of course it should not enter the condition, but I suspect that its a locale related bug.
[16:24:27] *** Joins: Tuju (~tuju@214-204-50-195.sta.estpak.ee)
[16:24:31] <chl> It only occurs with Norwegian locale O_o
[16:24:31] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[16:24:36] <Peng> Wat
[16:24:55] <jinsun__> seems like you have more code than what you pasted
[16:24:58] <faceface> if isinstance(token, bytes): ...
[16:25:11] <Tuju> any idea what pyhton2    bns() function has done and should it be available in python3 ?
[16:25:30] <chl> I believe it might be from how a form is POST'ed
[16:25:41] *** Joins: shad (~shad@user/shad)
[16:25:44] <jinsun__> that code wouldn't print anything regardless of the locale
[16:26:03] <deniska> Tuju: is it imported from a module?
[16:26:06] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[16:26:21] <Tuju> deniska: i checked, i think it was not. but can't be 100% sure
[16:26:35] <deniska> Tuju: my python2 has no such function in builtins
[16:26:53] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[16:26:54] *** test_ is now known as _flood
[16:26:56] *** Joins: memoryleak (~quassel@195-202-248-193.dynamic.hispeed.ch)
[16:27:07] <Tuju> i have manipulated some JSON stuff with it. Now in python3 went to see why it doesn't work and there it was.
[16:27:07] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.4)
[16:27:15] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:27:32] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:28:15] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[16:29:31] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:29:50] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:30:46] *** Joins: crashrep (~crashrep@user/crashrep)
[16:30:53] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:30:58] *** Joins: c4017w_ (~c4017@209.52.68.8)
[16:31:48] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[16:32:05] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:33:11] *** Joins: sprout_ (~quassel@2a02:a467:ccd6:1:84ab:e3a9:1ea3:da7a)
[16:34:11] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:34:29] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:34:42] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[16:34:48] *** Joins: nre (~nre@55d4979f.access.ecotel.net)
[16:34:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[16:35:30] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[16:36:23] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:36:31] *** Quits: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder) (Quit: WeeChat 3.3)
[16:36:40] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:36:45] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:940d:dbf8:92f5:3d86) (Ping timeout: 268 seconds)
[16:37:20] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[16:37:26] *** Joins: fredrikhl (~fhl@myrsnipa.uio.no)
[16:37:43] *** Joins: crashrep (~crashrep@user/crashrep)
[16:38:29] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:38:30] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[16:38:38] <pycurious> I've a child process that runs its last line of code, (where it puts its pid into a mp.manager.Q) and then my parent process runs .join() on that pid process. The join just hangs, and the log on the next line is never printed. Any ideas on why this could happen?
[16:38:46] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:38:58] *** Joins: Masklin__Gurder (~joel@bioinf-serv.biol.lu.se)
[16:39:16] *** Quits: chl (~chl@user/chl) (Quit: Client closed)
[16:40:46] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:41:03] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:42:30] *** Quits: wyclif_ (~wyclif@user/wyclif) (Quit: leaving)
[16:42:48] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:43:04] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:43:41] *** Joins: Payam (~Payam@138.106.57.132)
[16:44:02] <Payam> Hi, By some reason I have problem appending text to Tkinter Text and get an segmentault all the time.
[16:44:06] *** Joins: dante-as (~dante-as@188.24.161.140)
[16:44:21] *** Joins: pr3d4t0r (~zhenya01@varenka.cime.net)
[16:44:21] *** Quits: pr3d4t0r (~zhenya01@varenka.cime.net) (Changing host)
[16:44:21] *** Joins: pr3d4t0r (~zhenya01@user/pr3d4t0r)
[16:44:32] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[16:44:46] *** Joins: wyclif (~wyclif@user/wyclif)
[16:44:56] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:45:13] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:46:11] *** Joins: bahamas (~lucian@84.232.140.52)
[16:46:14] <spaceone> is there a un-spliited form of sys.argv ?
[16:46:20] *** Quits: yst (~yst@user/yst) (Quit: Leaving)
[16:47:01] <ChrisWarrick> spaceone: this doesnât exist on unix
[16:47:03] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:47:06] *** Joins: bloody (~bloody@user/bloody)
[16:47:19] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:47:38] <ChrisWarrick> spaceone: (as in, argv is turned into an array much earlier than you think)
[16:47:40] <spaceone> ChrisWarrick: hm, yes. but i see it in /proc/self/cmdline?
[16:47:53] *** Joins: zodd (~zodd@84-106-80-107.cable.dynamic.v4.ziggo.nl)
[16:48:01] *** Joins: Glurmo (~Glurmo@user/Glurmo)
[16:48:11] <ChrisWarrick> spaceone: itâs \0-delimited
[16:48:22] <spaceone> yep
[16:48:36] <ChrisWarrick> spaceone: which is the same thing as in sys.argv
[16:48:46] <spaceone> so I can assume that python just splits that by 0-bytes?
[16:48:52] <ChrisWarrick> spaceone: you cannot
[16:48:56] <ChrisWarrick> spaceone: why do you want to make that assumption?
[16:49:14] *** Joins: cdown (~cdown@163.114.131.1)
[16:49:29] *** Joins: humberto1 (~humbertow@189.236.30.197)
[16:49:43] <spaceone> I have a wrapper script for squid which seems to read out command line arguments by splitting it by " ". instead of correctly quoting arguments
[16:49:44] <ChrisWarrick> spaceone: arguments are an array on unix, sys.argv gives you that array pretty much directly (except python decodes it)
[16:49:49] *** Quits: kts (~kts@103.73.237.246) (Quit: Konversation terminated!)
[16:50:03] <spaceone> yep, ok
[16:50:05] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[16:50:19] <ChrisWarrick> spaceone: you cannot recover from argv mangling by badly written bash scripts
[16:50:47] <spaceone> shlex.split(' '.join(sys.argv[1:]))
[16:50:48] *** Quits: tgamblin_ (~tgamblin@2607:fea8:c29d:d7c0:fa88:8bc5:c0d2:27cc) (Quit: Leaving)
[16:51:27] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0:fa88:8bc5:c0d2:27cc)
[16:51:30] *** Quits: whaley (~whaley@cpe-76-182-165-20.sc.res.rr.com) (Quit: It won't give up.  It wants me dead.  Goddamn this noise inside my head.)
[16:51:39] <ChrisWarrick> that only mangles it more
[16:51:54] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:52:11] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:52:18] <spaceone> why?
[16:52:25] *** Joins: whaley (~whaley@cpe-76-182-165-20.sc.res.rr.com)
[16:52:25] *** Quits: whaley (~whaley@cpe-76-182-165-20.sc.res.rr.com) (Client Quit)
[16:52:59] *** Joins: fartyfoam (~fartyfoam@178-118-118-2.access.telenet.be)
[16:54:07] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:54:23] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:54:37] *** Quits: envex (~envex@cpe-173-91-189-33.neo.res.rr.com) (Ping timeout: 240 seconds)
[16:55:22] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:56:11] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[16:56:27] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:56:59] *** Quits: memoryleak (~quassel@195-202-248-193.dynamic.hispeed.ch) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[16:57:04] <ChrisWarrick> any properly-escaped multi-character strings will be broken
[16:57:11] <ChrisWarrick> best to fix your bash script
[16:59:30] <spaceone> it is not my bash script from squid. and it's not bash but a configuration file where the command is just a line
[16:59:48] *** Quits: Peng_ (~mnordhoff@user/Peng) (Quit: Peng timeout)
[16:59:53] <spaceone> squid seems not to parse the arguments correctly but just splits by " "
[17:00:01] *** Joins: Peng_ (~mnordhoff@user/Peng)
[17:00:03] <spaceone> when reading that config file
[17:01:17] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[17:02:01] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Ping timeout: 245 seconds)
[17:02:34] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[17:02:35] <pycurious> executor = ProcessPoolExecutor(max_workers=1) - how do I clean up executor correctly in the parent process?
[17:03:50] *** Quits: schumaml (~schumaml@dslb-188-104-172-168.188.104.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[17:04:15] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[17:04:32] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[17:05:30] *** Joins: schumaml (~schumaml@dslb-188-104-176-173.188.104.pools.vodafone-ip.de)
[17:05:52] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[17:06:17] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[17:06:17] *** Quits: Guest9988 (~Guest99@FL1-49-129-184-93.szo.mesh.ad.jp) (Quit: Client closed)
[17:06:34] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[17:06:34] *** Joins: tobybl (~tobybl@252.193.115.87.dyn.plus.net)
[17:07:06] <ChrisWarrick> spaceone: consider asking a squid channel or reading its docs, perhaps thereâs a way to make it work
[17:07:29] <jinsun__> pycurious: `with ProcessPoolExecutor(...) as executor: ...`
[17:07:35] *** Parts: Tuju (~tuju@214-204-50-195.sta.estpak.ee) (tralla laa)
[17:08:15] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[17:08:16] *** Quits: nre (~nre@55d4979f.access.ecotel.net) (Ping timeout: 272 seconds)
[17:08:35] *** Joins: singularity00 (~singulari@236.lan-hi1-2.static.rozabg.com)
[17:09:31] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[17:09:35] *** Quits: dante-as (~dante-as@188.24.161.140) (Ping timeout: 256 seconds)
[17:09:49] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[17:10:48] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[17:11:37] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[17:11:54] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[17:12:42] <pycurious> jinsun_: how do i check if join() will be done immidiately or it will wait? - before i call join
[17:13:41] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[17:14:00] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[17:14:14] *** Quits: WantToHelp (~WantToHel@96.77.40.70) (Changing host)
[17:14:14] *** Joins: WantToHelp (~WantToHel@user/wanttohelp)
[17:15:49] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[17:16:06] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:54dd:1262:7c05:5499)
[17:16:06] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:54dd:1262:7c05:5499) (Changing host)
[17:16:06] *** Joins: skapata (~Skapata@user/skapata)
[17:16:07] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[17:16:36] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:d80e:f8e4:65fa:55e) (Ping timeout: 240 seconds)
[17:17:31] <exarkun> pycurious: Does ProcessPoolExecutor have a join method?
[17:17:59] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[17:18:17] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[17:20:03] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[17:20:20] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[17:20:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[17:21:04] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[17:21:08] *** Joins: kts (~kts@103.73.237.133)
[17:21:19] *** Joins: weedmic (~weedmic@93-173-109-49.bb.netvision.net.il)
[17:21:23] *** Joins: harpia (~harpia@2804:2aec:205:4600:b62e:99ff:fee9:cc51)
[17:21:52] <pycurious> exarkun: I think my problem is more complicated. I've a process that first excecutes a function P() using Process(). This function then executes another function U() that uses ProcessPoolExecutor. When I call P()'s join() it hangs because U()'s processpoolexecutor hasn't exited yet. I'm trying to not hang P() by not calling it's join(). I do know there is a timeout in U() - so I can just not call join in P() till that timeout happens. Bu
[17:21:52] <pycurious> t if I could peek into the process from P() and know that its still running, then I can just not call join() - does that make sense?
[17:22:11] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[17:22:28] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[17:23:51] *** Joins: dante-as (~dante-as@188.24.161.140)
[17:24:04] *** Quits: icy_hot (~icy_hot@106.241.29.252) (Quit: WeeChat 3.4)
[17:24:27] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[17:24:43] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[17:25:02] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[17:25:03] *** Joins: twb (~twb@203.7.155.73)
[17:25:15] <twb> What's that notation to say "this HAS to be a keyword arg, never a positional arg" ?
[17:25:33] <twb> I think it's something like def f(string, **, prefix='', suffix='')
[17:25:34] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[17:25:37] <exarkun> twb: just one *
[17:25:46] <twb> Thanks
[17:26:08] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[17:26:11] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[17:26:55] <exarkun> pycurious: What do you mean when you say `Process`?
[17:27:01] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[17:27:19] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[17:27:42] <jinsun__> pycurious: you don't have to join when you use ProcessPoolExecutor, it takes care of managing the processes for you
[17:28:07] <exarkun> jinsun__: I think pycurious is joining a `Process` (maybe a `multiprocessing.Process`?), not a ProcessPoolExecutor.
[17:28:22] <twb> Can strptime do fixed-offset timezones yet, or do I still need to mangle that by hand
[17:28:37] *** Quits: naquad (~naquad@79.135.214.17) (Read error: Connection reset by peer)
[17:29:18] <twb> "Changed in version 3.7: When the %z directive is provided to the strptime() method"
[17:29:20] <twb> sounds promising
[17:29:22] *** Joins: jringstad__ (~Amadiro@191.96.180.90)
[17:29:23] <jinsun__> exarkun: okay, but the original question from pycurious about 30 minutes ago said ProcessPoolExecutor
[17:29:24] *** Quits: jringstad__ (~Amadiro@191.96.180.90) (Remote host closed the connection)
[17:29:32] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[17:29:43] *** Joins: jringstad__ (~Amadiro@191.96.180.90)
[17:29:48] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[17:29:55] <dante-as> Hi guys, which is the correct syntax for having multiple memberOf in ldap3 search? I have tried something like this, but it's not working
[17:29:56] <dante-as> conn.search(ldap_base_dn, `'(&(objectclass=user)(memberOf=CN=test,ou=test,dn=com,dn=example)(memberOf=CN=test2,ou=test,dn=com,dn=example))'`
[17:30:23] *** Joins: gurkenglas (~gurkengla@dslb-188-096-121-068.188.096.pools.vodafone-ip.de)
[17:30:32] <exarkun> jinsun__: Sure.  It's a confusing question.  Did you see the follow-up from 9 minutes ago?
[17:30:47] *** Quits: jringstad__ (~Amadiro@191.96.180.90) (Remote host closed the connection)
[17:30:51] <bjs> jinsun__: exarkun: from pycurious's recent message it looks like they have both. Inside a Process they create a ProcessPoolExecutor.  I suppose the answer to pycurious's question of whether their explanation made sense is that "no" since people are still confused
[17:31:10] <bjs> pycurious: can you share some code?
[17:31:10] *** Joins: nickodd (~nickodd@user/nickodd)
[17:31:39] *** Joins: c4017w__ (~c4017@209.52.68.8)
[17:31:46] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[17:31:47] <exarkun> If pycurious is talking about multiprocessing.Process then I think they're just looking for the `is_alive` method
[17:31:50] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[17:31:56] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[17:32:13] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[17:32:20] *** Quits: Amadiro (~Amadiro@31.11.55.179) (Ping timeout: 272 seconds)
[17:32:20] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[17:33:00] *** Joins: Amadiro (~Amadiro@191.96.180.90)
[17:33:09] *** Quits: Gerula (~Gerula@user/gerula) (Quit: Leaving)
[17:33:51] <pycurious> exarkun: multiprocessing.Process()
[17:33:52] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[17:34:01] *** Joins: pycode1 (~pycode3@2001:b07:5d28:551:4dc7:1c37:449f:b2a5)
[17:34:10] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[17:34:44] <pycurious> jinsun_: the U() function actually just gets the future object and returns - so it just runs another process in the background - and never waits on it.
[17:34:52] <exarkun> pycurious: Great.  So.  multiprocessing.Process.is_alive, then?
[17:35:02] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[17:35:21] <pycurious> exarkun: indeed is_alive is what I was looking for
[17:35:52] <twb> %z is Just Working
[17:36:12] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[17:36:29] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[17:37:19] *** Quits: boris[m]1 (~boristilt@2001:470:69fc:105::1:ad6d) (Quit: Reconnecting)
[17:37:34] *** Joins: boris[m]1 (~boristilt@2001:470:69fc:105::1:ad6d)
[17:38:44] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[17:39:03] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[17:39:11] *** Quits: introom (introom@2600:3c01::f03c:92ff:fea3:2cf) (Quit: WeeChat 3.3)
[17:39:12] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[17:39:25] *** Joins: crashrep (~crashrep@user/crashrep)
[17:39:30] *** Joins: six666 (~six666@117.175.116.227)
[17:40:23] *** Joins: drvanon (~drvanon@81.89.199.26)
[17:40:28] *** Joins: data68 (~data@2a02:908:a65:3d80:b80d:6427:e2b5:c8fc)
[17:40:30] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[17:40:46] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[17:41:18] <twb> In lxml, is there an elegant way to say "get the first matching xpath -- and raise an error if there isn't EXACTLY one match"?
[17:41:24] *** Joins: whaley (~whaley@066-026-111-078.biz.spectrum.com)
[17:41:50] *** Quits: zazoon (~dev@213.133.91.246) (Ping timeout: 272 seconds)
[17:42:43] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[17:42:48] *** Quits: p-i-_ (~Ohmu@mx-ll-183.89.25-222.dynamic.3bb.co.th) (Read error: Connection reset by peer)
[17:43:01] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[17:43:32] *** Joins: p-i- (~Ohmu@183.89.25.222)
[17:43:35] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[17:43:37] *** Quits: lbalhar (~lbalhar@93.185.13.26) (Ping timeout: 240 seconds)
[17:44:43] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[17:45:00] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[17:45:16] *** Quits: tobybl (~tobybl@252.193.115.87.dyn.plus.net) (Remote host closed the connection)
[17:45:19] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[17:45:45] *** Joins: crashrep (~crashrep@user/crashrep)
[17:46:14] *** Joins: baffodoro (~raffaem@95.74.66.157)
[17:46:52] *** Joins: Midjak (~Midjak@82.66.147.146)
[17:47:13] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[17:47:29] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[17:48:45] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[17:49:08] *** Joins: rsx (~dummy@ppp-188-174-141-108.dynamic.mnet-online.de)
[17:49:25] *** Joins: Barones (~Barones@user/Barones)
[17:49:55] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[17:49:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[17:50:03] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:50:37] *** Quits: humberto1 (~humbertow@189.236.30.197) (Ping timeout: 240 seconds)
[17:52:10] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[17:53:04] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Ping timeout: 250 seconds)
[17:54:14] *** Quits: justAstache (~justache@user/justache) (Remote host closed the connection)
[17:55:33] *** Joins: justAstache (~justache@user/justache)
[17:55:56] *** Joins: Babar_ (~Babar@171.233.210.64)
[17:55:56] *** Quits: Babar (~Babar@171.233.210.64) (Killed (tungsten.libera.chat (Nickname regained by services)))
[17:55:56] *** Babar_ is now known as Babar
[17:57:10] *** Joins: revolve (~u0_a227@82-132-236-43.dab.02.net)
[17:57:29] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Quit: leaving)
[17:57:50] *** Quits: stockh0lm (~Andreas@p200300d2c70c6100f491f44bc7bfe165.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[17:58:53] *** Joins: crashrep (~crashrep@user/crashrep)
[17:59:21] <andi_> if i have nested dict, like assets['assets']['link'] is the a way i can check for the existence of this entries? or do i just put two if's in my code?
[17:59:22] *** Joins: ybonatakis (~iob@nat1.prg.suse.com)
[18:00:13] <drvanon> You can use to get calls.
[18:00:22] <amogorkon> you *should* use get calls
[18:00:35] <amogorkon> and then.. cry
[18:00:42] <drvanon> assets.get("assets", {"link": None}).get("link", None)
[18:00:42] <amogorkon> because you might need to check against None
[18:00:47] <amogorkon> yeah, no.
[18:01:17] <andi_> alright
[18:01:27] <amogorkon> drvanon *cry*
[18:01:34] <drvanon> ?
[18:01:41] *** Quits: wovixo (~wovixo@128.104.205.49) (Read error: Connection reset by peer)
[18:01:57] <amogorkon> returning a dict as default only because we don't have none-aware ops..
[18:02:09] <amogorkon> it's so convoluted :(
[18:02:32] <amogorkon> and then you can't have actual None's as values
[18:02:41] <amogorkon> and you don't have a way of knowing where it failed
[18:02:52] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[18:03:15] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c)
[18:03:20] <drvanon> Okay, but then you can just do "link" in assets.get("assets", {})
[18:04:04] <drvanon> andi_, does this work for you?
[18:04:18] *** Quits: ybonatakis (~iob@nat1.prg.suse.com) (Quit: WeeChat 3.4)
[18:04:26] <andi_> yeah sure
[18:04:31] <andi_> the double get's also work
[18:04:31] *** Joins: ybonatakis (~iob@nat1.prg.suse.com)
[18:04:52] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[18:05:07] <amogorkon> maybe an alternative could be to use pydantic classes to map the dicts to attributes
[18:05:10] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[18:05:47] <amogorkon> but missing values are troublesome either way
[18:05:50] *** Joins: jmcb (~jmcb@nas47-67.york.ac.uk)
[18:06:01] <amogorkon> (or keys, for that matter)
[18:06:08] *** Joins: wovixo (~wovixo@128.104.205.49)
[18:06:32] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[18:06:49] <wyre> can I use comments in setup.cfg file?
[18:07:02] <amogorkon> ohh, i have an idea for problem-aware operators
[18:07:06] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[18:07:23] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[18:07:36] <amogorkon> one argument against using none-aware operators is that they only work for Nones, right
[18:07:44] <drvanon> wyre, you can use \# YOUR COMMENT HERE
[18:07:50] <drvanon> According to the toml documentation
[18:07:51] <drvanon> https://toml.io/en/
[18:08:13] <amogorkon> what if we had a special context
[18:08:48] <jinsun__> amogorkon: another option is to use https://pypi.org/project/option/ and set Option.NONE as the default, then you can chain gets even with NONE values
[18:08:50] <amogorkon> with beware(None) as ?:
[18:09:05] <jinsun__> because the NONE in that packge has .get
[18:09:13] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[18:09:17] *** Joins: tijko (~tijko@static-71-184-137-31.bstnma.ftas.verizon.net)
[18:09:18] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::78dd)
[18:09:22] <tijko> Hi everybody!
[18:09:26] <amogorkon> then you could set the ? to be aware of any sentinel
[18:09:30] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[18:10:37] *** Joins: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net)
[18:10:53] <drvanon> Hoi tijko
[18:11:02] *** Quits: ybonatakis (~iob@nat1.prg.suse.com) (Quit: WeeChat 3.4)
[18:11:11] <jinsun__> drvanon: setup.cfg is not toml though, it is parsed with configparser
[18:11:16] *** Joins: ybonatakis (~iob@nat1.prg.suse.com)
[18:11:20] <drvanon> jinsun__, oops..
[18:12:01] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[18:12:11] <jinsun__> but it allows # comments too
[18:12:18] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[18:12:35] <amogorkon> <jinsun__> because the NONE in that packge has .get <- sounds interesting. what's the implication? there's not a lot of documentation
[18:13:13] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[18:13:49] <jinsun__> amogorkon: it is showing example with dicts here https://mat1g3r.github.io/option/option.html#option.option_.Option.get
[18:14:21] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[18:14:31] *** Joins: white2 (~mahengrui@user/mahengrui1)
[18:14:39] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[18:14:45] *** Quits: ejjfunky (~ejjfunky@125.164.18.108) (Ping timeout: 256 seconds)
[18:15:04] <jinsun__> so you will have Some(assets).get('asserts').get('link')
[18:15:31] *** Joins: hgxv (~26@2a01cb00845f5c00d99980ce461b9f89.ipv6.abo.wanadoo.fr)
[18:15:58] <jinsun__> and if any of those keys don't exist, .get will give NONE, and NONE.get will also give NONE
[18:16:03] *** Joins: humberto1 (~humbertow@189.236.30.197)
[18:16:05] <drvanon> jinsun__: that feels _very_ rust like. Is it Rust based, or was rust based off this?
[18:16:16] <amogorkon> it's probably a port from rust to python
[18:16:33] <jinsun__> their github says "Rust like Option and Result types in Python"
[18:16:38] <jinsun__> so inspired by rust yes
[18:16:47] *** Quits: Sora (~Guest@user/sora) (Ping timeout: 252 seconds)
[18:16:49] <drvanon> I like rust.
[18:17:00] <drvanon> Python is more useful for me. But rust is cool.
[18:17:18] <amogorkon> cross-pollination ftw
[18:17:42] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[18:18:02] <drvanon> Absolutely.
[18:18:02] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[18:19:13] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[18:19:59] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[18:20:02] *** Joins: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr)
[18:20:18] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[18:20:42] *** Joins: Viewday113 (~Viewday@user/viewday)
[18:21:36] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[18:21:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[18:22:12] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[18:22:28] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[18:22:29] *** Viewday113 is now known as Viewday11
[18:22:32] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[18:22:39] <SnoopJ> twb, I don't see a way to do that aside from getting all the matches and checking the length of the result. It seems like there could (should?) be a generator interface to it, but I don't see one.
[18:22:56] <twb> SnoopJ: thanks, good answer
[18:23:02] <twb> That is what I always end up doing
[18:23:15] <twb> either "x, = obj.xpath('./foo')" or something slightly messier
[18:23:28] <SnoopJ> ah, that would be a clever way to do it
[18:24:17] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[18:24:34] *** Joins: crashrep (~crashrep@user/crashrep)
[18:24:35] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[18:24:36] *** Quits: jmcb (~jmcb@nas47-67.york.ac.uk) (Quit: Farewell)
[18:24:45] <SnoopJ> I was thinking probably too much about the case where the document is sufficiently large that evaluating the whole thing was worth avoiding, and you'd want to give up an error as soon as possible
[18:24:53] *** Joins: jmcb (~jmcb@nas47-67.york.ac.uk)
[18:25:01] <SnoopJ> which is probably a much smaller problem space than typical documents
[18:25:13] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Quit: Konversation terminated!)
[18:25:34] *** Joins: vit (~vit@chello085216193138.chello.sk)
[18:25:50] *** Joins: Fiji (~Fiji@user/fiji)
[18:25:56] *** vit is now known as Guest3952
[18:26:29] *** Quits: harpia (~harpia@2804:2aec:205:4600:b62e:99ff:fee9:cc51) (Quit: harpia)
[18:26:47] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[18:26:56] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[18:27:05] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[18:27:32] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[18:27:39] <twb> SnoopJ: with lxml the usual method is to parse the whole XML document before you start fiddling with it
[18:27:54] *** Quits: whaley (~whaley@066-026-111-078.biz.spectrum.com) (Quit: It won't give up.  It wants me dead.  Goddamn this noise inside my head.)
[18:27:58] <twb> SnoopJ: if you are doing e.g. 1GB .xml file of openstreetmap, then you use a completely differnt set of tools
[18:28:24] * SnoopJ has fed lxml some large files before, but understands the point
[18:28:26] *** Joins: frost (~frost@user/frost)
[18:28:36] <twb> What I'm working right now is a TV guide, which is gonna need maybe 100MB of RAM
[18:28:41] <twb> So I don't care
[18:28:50] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:300e:d65f:1cca:5ccf)
[18:28:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[18:29:00] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[18:29:05] <SnoopJ> Yes I figured it was probably the same project. In your shoes I'd be pragmatic and just live with having to write that check myself
[18:29:18] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[18:29:56] *** Joins: crashrep (~crashrep@user/crashrep)
[18:30:13] <SnoopJ> I'd probably spell it out longform: `Nxpath = len(xpath_results); if Nxpath != 1: raise ValueError(f"Exactly one result expected, got {Nxpath}")`
[18:30:18] *** Joins: winstreak (~winstreak@dslb-094-218-009-104.094.218.pools.vodafone-ip.de)
[18:30:31] *** Joins: esther (~esther@45.130.137.35)
[18:30:51] <SnoopJ> I wonder if the way its XPath works is because of libxml or is an opinion of the library itself
[18:30:54] *** Quits: sharksauce (sharksauce@user/sharksauce) (Quit: WeeChat 2.8)
[18:31:04] *** Joins: the_lanetly_052_ (~the_lanet@185.30.88.133)
[18:31:07] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[18:31:55] *** Joins: c4017w_ (~c4017@209.52.68.8)
[18:32:27] *** Joins: julius3 (~raffaem@45.91.20.232)
[18:32:34] *** Quits: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com) (Remote host closed the connection)
[18:33:13] <twb> https://github.com/cyberitsolutions/bootstrap2020/blob/twb/debian-11-PrisonPC-tvserver/systemd/epg-scan.py  <-- today's code, working but incomplete
[18:33:29] <twb> https://github.com/cyberitsolutions/bootstrap2020/blob/twb/debian-11-PrisonPC-tvserver/systemd/write-epg.py <-- using an old dead python2 library
[18:33:42] *** Quits: the_lanetly_052 (~the_lanet@194.135.169.126) (Ping timeout: 260 seconds)
[18:33:59] <Payam> Hi
[18:34:00] *** Quits: sumi80m (~dos@39.191.202.62.dynamic.cgnat.res.cust.swisscom.ch) (Read error: Connection reset by peer)
[18:34:03] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[18:34:31] <Payam> I see somebody elses code and I see when writing the stdout from a Popen he does while proc.poll() is None:
[18:34:37] *** Quits: esther (~esther@45.130.137.35) (Ping timeout: 240 seconds)
[18:34:42] <Payam> What is poll there and what can I write there instead?
[18:35:06] *** Quits: baffodoro (~raffaem@95.74.66.157) (Ping timeout: 250 seconds)
[18:35:09] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Ping timeout: 268 seconds)
[18:35:22] *** Joins: sumi80m (~dos@39.191.202.62.dynamic.cgnat.res.cust.swisscom.ch)
[18:35:30] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[18:36:09] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[18:36:17] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[18:36:19] <twb> Payam: that sounds a little weird
[18:36:27] <Payam> yes
[18:36:28] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[18:36:29] <bjs> Payam: https://docs.python.org/3/library/subprocess.html#subprocess.Popen.poll
[18:36:30] <twb> Payam: do you need to feed input in a little bit at a time?
[18:36:36] *** Joins: Guest12 (~Guest12@222.188.241.148)
[18:36:50] *** Quits: Barones (~Barones@user/Barones) (Remote host closed the connection)
[18:36:58] <twb> Payam: if not, I highly recommend newer subprocess.run(['cat'], text=True, check=True, input='Hello, World!')
[18:37:08] <bjs> Payam: it depends what you're wanting to do. a Popen() runs "in the background", and you can read/write its streams as it goes
[18:37:34] <SnoopJ> your exactly_one() there seems reasonable
[18:37:35] <Payam> run doesnt block mainthread right?
[18:37:38] <twb> I always get nervous at people using Popen
[18:38:12] <bjs> Payam: run blocks
[18:38:15] *** Joins: pro_z_ (~pro_z@37.214.78.161)
[18:38:18] <twb> It means you have to .wait() and suchlike very carefully
[18:38:26] <bjs> Payam: run is like like Popen + wait()
[18:38:32] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[18:38:36] <twb> Otherwise you can deadlock, or not notice when a pipeline errors in the middle
[18:38:37] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[18:38:48] <Payam> what is wait value untill the process is finished?
[18:38:51] *** Quits: winstreak (~winstreak@dslb-094-218-009-104.094.218.pools.vodafone-ip.de) (Ping timeout: 268 seconds)
[18:38:56] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[18:39:07] <twb> Payam: .wait() doesn't return until the child process finishes
[18:39:14] <Payam> so none?
[18:39:15] <twb> Payam: it's exactly the same as in posix C
[18:39:17] *** Guest12 is now known as jasj
[18:39:21] <bjs> Payam: what do you mean by "wait value" ?
[18:39:29] <twb> Payam: it's undefined
[18:39:32] <SnoopJ> https://docs.python.org/3/library/subprocess.html#subprocess.Popen.wait
[18:39:34] <Payam> give me a sex
[18:39:37] <Payam> c
[18:39:51] *** Quits: jasj (~Guest12@222.188.241.148) (Client Quit)
[18:39:55] <octav1a> owo
[18:40:00] <Payam> https://bpa.st/KHQQ here
[18:40:09] <Payam> I replaced poll() with .wait
[18:40:16] <twb> I'm also deeply nervous abuot how Popen interacts with cpython's green threads
[18:40:27] <Payam> and when running this code. I get segmentation fault some times.
[18:40:30] <bjs> Payam: have you read the documentation for this
[18:40:37] <bjs> Payam: segmentation fault!?
[18:40:45] <bjs> Payam: anyway wait is a method not an attribute
[18:40:45] <Payam> yes
[18:40:45] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-f9f0-38a1-2551-6311.res6.spectrum.com)
[18:41:04] <Payam> bjs the error leads me here.
[18:41:09] <twb> bjs: technically all methods are attributes, because python is a lisp-1
[18:41:10] <Payam> that something is wrong here.
[18:41:11] *** Quits: drvanon (~drvanon@81.89.199.26) (Quit: Client closed)
[18:41:22] <bjs> Payam: well you've replaced poll() with a random .wait, which is probably a mistake
[18:41:26] *** Quits: white2 (~mahengrui@user/mahengrui1) (Quit: Leaving)
[18:41:47] <Payam> yes but I did it just 2 min ago. I haven't run it yet. so I removed it now and put poll() again.
[18:42:00] *** Quits: jamea (~jamea@177.239.81.39) (Ping timeout: 272 seconds)
[18:42:06] <bjs> Payam: where is the segfault coming from?
[18:42:23] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[18:42:28] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Read error: Connection reset by peer)
[18:42:29] <Payam> What do you mean? How do I track it?
[18:42:29] *** Quits: hgxv (~26@2a01cb00845f5c00d99980ce461b9f89.ipv6.abo.wanadoo.fr) (Read error: Connection reset by peer)
[18:42:40] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[18:42:44] <bjs> Payam: well, you said you got a segfault and "the error leads me here"
[18:42:47] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[18:42:50] <bjs> What did you mean by that?
[18:42:54] <Payam> I used https://docs.python.org/3/library/faulthandler.html
[18:43:07] <twb> Payam: normally you'd do "with Popen(['sleep 10']) as sleep_proc: print('Hello, world!'); if sleep_proc.wait() != 0: raise RuntimeError('sleep crashed!'); print('Done')
[18:43:08] <Payam> and it gives me bunch of errors and tracebacks
[18:43:40] *** Joins: winstreak (~winstreak@154.28.188.41)
[18:43:41] <bjs> Payam: maybe you should've started with all this information,  what kind of errors and tracebacks?
[18:43:44] *** Joins: winstr3ak (~winstreak@154.28.188.41)
[18:44:09] <twb> I think you should reduce your test code to a simpler test case
[18:44:36] <Payam> I don't know how much you want to see. But it is starting with the block that has to do with stdout and stderr
[18:44:36] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[18:45:04] <bjs> Payam: well, how much is all of it?
[18:45:18] <twb> You should definitely do text=True instead of .decode('UTF-8')
[18:45:21] <Payam> 10 files
[18:45:24] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[18:45:37] <bjs> Payam: you get 10 files of error messages and tracebacks?
[18:45:37] <Payam> twb inside Popen?
[18:45:40] <twb> yes
[18:45:41] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[18:45:41] <Payam> no no.
[18:45:48] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 272 seconds)
[18:45:49] *** Joins: baffodoro (~raffaem@95.74.66.157)
[18:45:55] <Payam> bjs no.
[18:45:58] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[18:46:07] <twb> bjs: I think they're saying they have an application that is 10 files in size
[18:46:15] <bjs> Payam: why not just show us the errors + traceback you get with faulthandler
[18:46:16] <Payam> bjs https://bpa.st/OPQQ
[18:47:23] <Payam> twb TypeError
[18:47:23] *** Joins: SaltHilStroller_ (~SaltHillS@206.223.160.26)
[18:47:25] <bjs> Payam: so the error is coming from the handler call at the end
[18:47:27] <bjs> ?
[18:47:50] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[18:47:57] *** Quits: julius3 (~raffaem@45.91.20.232) (Ping timeout: 256 seconds)
[18:47:58] <Payam> bjs what line do you mean?
[18:48:07] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[18:48:11] <bjs> Payam: the line that calls the handler, in the code you showed
[18:48:25] *** Joins: white2 (~mahengrui@user/mahengrui1)
[18:48:25] <bjs> Payam: nothing in these errors show anything about poll or wait or subprocess at all really
[18:48:43] <Payam> processHandler?
[18:49:05] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[18:49:12] <bjs> Payam: what is line 70 in osimProcess.py ?
[18:49:18] <twb> Payam: make a tmp.py that JUST does Popen stuff, so you can study it in isolation
[18:49:33] *** Joins: pycurious (~Adium@user/pycurious)
[18:49:36] *** Joins: memoryleak (~quassel@195-202-248-193.dynamic.hispeed.ch)
[18:49:45] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[18:50:41] <Payam> bjs it is line 21 here : https://bpa.st/LWXA
[18:50:51] <bjs> Payam: line 21 is a comment
[18:50:56] <Payam> yes
[18:51:02] <bjs> I'm like 99.9999978% sure the error isn't coming from a comment...
[18:51:05] <bjs> :)
[18:51:08] *** Quits: waynew (~wayne@user/waynew) (Ping timeout: 250 seconds)
[18:51:13] <Payam> ohh sorry. Im so stupid
[18:51:17] <Payam> give me a sec
[18:52:00] <Payam> bjs I will paste all the lines. just a min
[18:52:13] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[18:53:15] *** Joins: waynew (~wayne@user/waynew)
[18:53:37] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 256 seconds)
[18:54:25] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Ping timeout: 256 seconds)
[18:54:44] <twb> Just link to the github repo where you develop this code
[18:54:45] <Payam> I need to run the application some times untill the error shows
[18:54:58] <bjs> Payam: why do you need to run the application to look at the .py file?
[18:55:01] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[18:55:15] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[18:55:15] <Payam> bjs for the FaultHanler output
[18:55:24] <bjs> Payam: you already gave us it no?
[18:55:26] <bjs> I'm confused
[18:55:33] <bjs> or well some of it
[18:55:42] <Payam> You are right actually
[18:55:44] *** Quits: six666 (~six666@117.175.116.227) (Quit: Client closed)
[18:55:46] <Payam> I am just stressed
[18:56:06] <bjs> Payam: the error you gave us says "File "/home/vagrant/GitlabRepos/4055/ats-tool-osim/src/osim_pkg/helpers/osimProcess/osimProcess.py", line 70 in callBlocking"  so you showed us this callBlocking function
[18:56:09] <bjs> but you didn't say which line was line 70
[18:56:18] *** Joins: [RiFo] (~RiFo@user/rifo)
[18:56:51] <Payam> yes but I happend to do a git stash
[18:56:52] <Payam> :(
[18:56:53] *** Joins: ecraven (ecraven@user/nex)
[18:57:12] <ecraven> hello ;) how can I get the server's IP address with flask? the one on the interface where the request came in?
[18:57:13] *** Quits: RiFo (~RiFo@user/rifo) (Ping timeout: 272 seconds)
[18:57:13] <Payam> just after the link so I don't know if line 70 is still 70
[18:57:36] <ecraven> mod_wsgi seems to set this as some sort of variable?
[18:57:49] <bjs> Payam: why not show the stash and look at which one is line 70
[18:57:56] *** Quits: agumonke` (~user@2a01:e0a:8f9:d3e0:b117:81a8:33f6:93e7) (Remote host closed the connection)
[18:58:35] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[18:58:52] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[18:58:59] *** Joins: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[18:59:01] *** Joins: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net)
[18:59:17] <lesshaste>  I am trying to use python's translate function . As in "hello".translate(mapping)  with https://bpa.st/YTMA
[18:59:21] <lesshaste> what am I doing wrong?
[18:59:34] *** Joins: XV8 (~XV8@2601:5cb:c001:50::c80f)
[18:59:59] <bjs> lesshaste: you need a maketrans() in there somewhere
[19:00:07] <lesshaste> bjs, oh!
[19:00:38] *** Joins: qlixed (~qlixed@181.44.129.13)
[19:01:32] <lesshaste> bjs,  this works mytable = "hello".maketrans(mapping)    "hello".translate(mytable)   but I do I really need both lines for every string I want to translate?
[19:01:32] *** Quits: user_ (~user@2603:9000:a004:6acf::404) (Ping timeout: 250 seconds)
[19:01:37] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[19:01:43] <bjs> lesshaste: maketrans is a static method
[19:01:48] <bjs> `mapping = str.maketrans({...})`
[19:01:54] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[19:02:18] *** Joins: Guest54 (~Guest54@2620:10d:c092:400::4:b417)
[19:03:02] *** Quits: XV8 (~XV8@2601:5cb:c001:50::c80f) (Client Quit)
[19:03:14] <lesshaste> bjs, thanks!
[19:03:49] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[19:03:54] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[19:04:09] *** Joins: peteyboy1 (~peteyboy1@95.169.226.66)
[19:04:13] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[19:04:23] *** Joins: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com)
[19:04:44] *** Quits: waynew (~wayne@user/waynew) (Quit: reboot time)
[19:04:51] <Guest54> I have two paths like so: "foo/me/my_file.py"Â  and "bar/me/my_file.codgen". In both cases, I want to get "me/my_file". What is the most idiomatic way to do this? I thought string parsing but wonering if there's something file utilities
[19:06:15] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[19:06:32] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[19:06:35] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[19:07:01] *** Joins: user (~user@2603-9000-a004-6acf-0000-0000-0000-0404.inf6.spectrum.com)
[19:07:19] <NotThatRPG> Wonder if anyone can help with a pip install problem. In my virtualenv, if I install a package with "pip install -e ." python can't find the module in that package. BUT if I install with "pip install XXXXX" where XXXX is the git URL I got from "pip freeze" after the failed install, everything works fine. So it seems like I have done something wrong so that the -e flag doesn't work.
[19:07:31] <NotThatRPG> @Guest54: Try os.path.join()
[19:07:39] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[19:08:28] *** Joins: blei (~blei@user/blei)
[19:08:30] <NotThatRPG> @Guest54: oh, wait sorry -- I probably got that wrong.
[19:08:44] <NotThatRPG> You want something like os.path.splitext
[19:08:53] <NotThatRPG> But look at the docs for os.path
[19:09:15] <Payam> here: bjs https://bpa.st/CAGA
[19:09:32] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[19:09:41] <zamba> how do i sort a dict by its keys and return a dict?
[19:09:50] <zamba> if i do sorted(dict) then i'm given a list back
[19:09:51] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[19:10:21] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Ping timeout: 245 seconds)
[19:10:37] *** Joins: zmotaj_ (~zmotaj@86.61.80.191)
[19:11:22] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[19:11:24] <SnoopJ> zamba, `newdict = dict(sorted(olddict.items(), key=lambda tup: tup[0]))`
[19:11:30] <white2> dict has no order
[19:11:43] *** Joins: qlixed (~qlixed@181.44.129.13)
[19:11:47] *** Quits: zmotaj (~zmotaj@user/zmotaj) (Ping timeout: 272 seconds)
[19:11:50] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[19:11:52] <SnoopJ> (assuming you meant you want to construct a dict whose insertion order matches the sort order of the keys)
[19:12:08] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[19:13:18] *** Quits: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[19:13:45] *** Joins: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net)
[19:13:57] *** Joins: jokoon (~eio@2a01:e0a:542:e160:3d3b:806d:bac4:e875)
[19:14:00] <lericson> 16:41 < white2> dict has no order
[19:14:02] <lericson> this is inaccurate
[19:14:08] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:99de:8145:e43e:2adc) (Quit: pvergain)
[19:14:08] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[19:14:26] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[19:14:29] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[19:14:30] <jokoon> things = re.findall(r"([A-Za-z0-9\-_])" blabla) returns ['L', 'K', 'M', '_', '8', 'd', 'X', 'D', '6', '5', 'U'], why does it split the entire string?
[19:14:33] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:812d:c5ec:e86f:78e9)
[19:14:43] <jokoon> I put parenthesis etc
[19:14:45] <twb> What's the opposite of itertools.filterfalse?
[19:14:45] <jokoon> oh wait
[19:14:49] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[19:14:50] <twb> I expected .filter but I can't see it
[19:15:09] <twb> Oh filter is just defined at the top level
[19:15:10] <SnoopJ> twb, it's just filter()
[19:15:30] <SnoopJ> more specifically `filter(None, it)`
[19:16:06] *** Joins: FluffyMask (~masque@user/fluffymask)
[19:16:25] <twb> I'll just use a haskell comprehension
[19:16:28] *** Quits: revolve (~u0_a227@82-132-236-43.dab.02.net) (Read error: Connection reset by peer)
[19:16:42] <white2> lericson, thank you. dict has order
[19:17:05] <lericson> yessum
[19:17:18] <Payam> bjs did you get the paste?
[19:18:14] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[19:18:44] *** Quits: dante-as (~dante-as@188.24.161.140) (Quit: Ping timeout (120 seconds))
[19:19:16] *** Quits: winstr3ak (~winstreak@154.28.188.41) (Quit: Leaving)
[19:19:16] *** Quits: winstreak (~winstreak@154.28.188.41) (Quit: Leaving)
[19:20:22] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Ping timeout: 260 seconds)
[19:20:46] *** Joins: agumonke` (~user@88.163.231.79)
[19:21:00] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 240 seconds)
[19:22:19] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Read error: Connection reset by peer)
[19:22:33] *** Joins: pyever___ (~pyeveryth@64-18-153-56.starry-inc.net)
[19:22:34] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[19:23:17] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::78dd) (Ping timeout: 240 seconds)
[19:24:17] *** Quits: user (~user@2603-9000-a004-6acf-0000-0000-0000-0404.inf6.spectrum.com) (Ping timeout: 240 seconds)
[19:24:49] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[19:25:06] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[19:25:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[19:26:04] *** Joins: subopt (~subopt@2603-8081-2302-459a-ed68-ceff-f133-330a.res6.spectrum.com)
[19:26:29] <blei> has anyone compiled functional programming idioms in python (as close as you can get)
[19:26:34] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::78dd)
[19:26:35] *** Parts: ecraven (ecraven@user/nex) (Bye)
[19:27:17] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[19:27:21] <ChrisWarrick> blei: pythonâs support for functional programming tends to be meh, since lambdas are limited and ugly. Instead of map and filter, youâd typically use list comprehensions or generator expressions.
[19:27:33] <blei> be that as it may :)
[19:27:33] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[19:27:36] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[19:27:49] <ChrisWarrick> blei: also, recursion doesnât work well (no tail-call optimization); you can pass functions as parameters just fine
[19:27:56] <blei> "if you squint your eyes, this looks kinda functional"
[19:29:37] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[19:29:45] *** Joins: crashrep (~crashrep@user/crashrep)
[19:29:55] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[19:30:06] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (Quit: You have been kicked for being idle)
[19:30:23] *** Joins: Guest62 (~Guest62@2603-6010-4903-d184-94c2-43ab-c826-d8e9.res6.spectrum.com)
[19:30:29] *** Quits: allegary (~allegary@apache/committer/gjm) (Quit: You have been kicked for being idle)
[19:30:56] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[19:30:59] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:69dd:6e2b:de9f:e831) (Quit: Konversation terminated!)
[19:31:07] <amogorkon> <blei> has anyone compiled functional programming idioms in python (as close as you can get) <- yes
[19:31:42] *** Quits: weedmic (~weedmic@93-173-109-49.bb.netvision.net.il) (Quit: Konversation terminated!)
[19:32:02] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 272 seconds)
[19:32:09] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[19:32:26] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[19:32:40] *** Joins: c4017w__ (~c4017@209.52.68.8)
[19:32:50] <Guest62> Is there a better way to get tag1, date, tag2 from `[tag1] 2021-12-01 22:24:08.119 +0000 UTC tag2` besides s.split()[0], " ".join(s.split()[1:4]), s.split()[4] ?
[19:33:43] <ChrisWarrick> Guest62: regex? str.partition?
[19:33:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[19:34:15] *** Quits: Linux77 (~7Linux7@2804:d45:8c08:9300:d5d4:be19:b7a9:c08e) (Remote host closed the connection)
[19:34:41] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[19:34:58] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[19:35:14] <Guest62> Hmm maybe I'll look at str.partition. I find myself splitting and joining kind-of-space-delimited things a lot
[19:36:07] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[19:36:32] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[19:36:34] <amogorkon> blei, why are you asking?
[19:36:56] <blei> i'm looking to centralize them or find that already
[19:37:11] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[19:37:23] *** Joins: stockh0lm (~Andreas@p200300d2c70c6100f491f44bc7bfe165.dip0.t-ipconnect.de)
[19:37:27] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[19:37:44] <amogorkon> blei, well, i can give you some advice based on the experience
[19:38:03] *** Quits: kostkon__ (~androirc@2.142.66.94.static.otenet.gr) (Ping timeout: 256 seconds)
[19:38:25] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[19:38:49] <amogorkon> you can use https://github.com/robinhilliard/pipes for example
[19:38:51] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[19:38:57] <Guest62> regex would probably be fine here but sometimes I'm parsing gigantic text files (logs) and even compiled regex can be a bit slow
[19:39:11] *** Joins: Barones (~Barones@user/Barones)
[19:39:15] *** Joins: tejr (~tejr@user/tejr)
[19:39:35] *** Joins: hams (~hams@2607:fb90:5c2d:42b2:e819:e18b:246c:4bc4)
[19:39:35] *** Quits: hams (~hams@2607:fb90:5c2d:42b2:e819:e18b:246c:4bc4) (Changing host)
[19:39:35] *** Joins: hams (~hams@user/hams)
[19:39:37] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[19:39:54] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[19:40:06] <amogorkon> blei, then have functions that have a single positional argument and the rest kwargs
[19:40:10] *** Joins: Sora (~Guest@static.82.113.12.49.clients.your-server.de)
[19:40:19] *** Quits: weibullguy (weibullguy@gateway/vpn/protonvpn/weibullguy) (Ping timeout: 256 seconds)
[19:40:33] <amogorkon> make use of *,\
[19:40:43] *** Joins: Masterphi (~Masterphi@user/masterphi)
[19:41:24] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[19:41:54] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[19:42:11] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[19:42:19] *** Quits: msk (~Thunderbi@89.205.124.39) (Quit: msk)
[19:42:36] *** Joins: msk (~Thunderbi@89.205.124.59)
[19:42:44] *** Joins: whaley (~whaley@cpe-76-182-165-20.sc.res.rr.com)
[19:43:45] <twb> SnoopJ: FYI, my EPG scraper is done and I'm pretty happy with it
[19:43:45] <wyre> how may I maintain the requirements.txt and the install_requires attribute in the setup.cfg?
[19:43:48] *** Quits: iob (~iob@dynamic-2a00-1028-8390-9e8a-5cf8-25c0-aa4e-e57d.ipv6.o2.cz) (Ping timeout: 240 seconds)
[19:44:14] *** Joins: pycurious (~Adium@user/pycurious)
[19:44:20] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[19:44:22] <twb> The earlier code was written by a ruby + DBA person who didn't really know Python at the time, and was "get it working at all, then bunk off to the pub" quality
[19:44:36] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[19:44:55] <twb> https://github.com/cyberitsolutions/bootstrap2020/blob/twb/debian-11-PrisonPC-tvserver/systemd/epg-scan.py
[19:45:02] <twb> Really just added some boring SQL
[19:45:09] *** Quits: alius (~alius@70.72.28.109.rev.sfr.net) (Quit: Leaving)
[19:45:16] *** Joins: waynew (~wayne@user/waynew)
[19:46:03] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[19:46:34] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[19:46:51] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[19:47:11] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:47:37] *** Quits: jpodivin (~jpodivin@cgnat44-pool3-70-163.poda.cz) (Ping timeout: 240 seconds)
[19:47:41] <wyre> also ... do I need setup_requires=['setup.cfg'] for setup() in the setup.py? ð¤
[19:47:59] <exarkun> setup_requires is for python packages, not filenames
[19:48:02] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[19:48:14] <exarkun> also setup_requires is mostly broken with modern packaging toolchain and you'll be better off if you can avoid using it
[19:48:25] *** Joins: crashrep (~crashrep@user/crashrep)
[19:48:49] *** Quits: jokoon (~eio@2a01:e0a:542:e160:3d3b:806d:bac4:e875) (Quit: Leaving)
[19:48:50] <wyre> exarkun, so the toolchain will parse setup.cfg automatically? ð¤
[19:49:09] <exarkun> generally, yes
[19:49:17] <exarkun> here's an example of install_requires in setup.cfg - https://github.com/PrivateStorageio/ZKAPAuthorizer/blob/main/setup.cfg#L34
[19:49:31] <twb> https://github.com/cyberitsolutions/android-enterprise-lockdown/blob/master/pyproject.toml  is the last one I did
[19:49:34] *** Quits: data68 (~data@2a02:908:a65:3d80:b80d:6427:e2b5:c8fc) (Quit: WeeChat 1.4)
[19:49:37] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[19:49:40] *** Joins: iob (~iob@dynamic-2a00-1028-8390-9e8a-5cf8-25c0-aa4e-e57d.ipv6.o2.cz)
[19:49:54] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[19:50:11] *** Joins: Adoi (~Adoi@user/adoi)
[19:50:27] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:300e:d65f:1cca:5ccf) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[19:50:48] <twb> My primary goal was "don't make me write dependencies manually in BOTH setup.cfg AND debian/control"; YMMV
[19:51:07] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[19:51:08] *** Quits: Barones (~Barones@user/Barones) (Remote host closed the connection)
[19:51:24] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:300e:d65f:1cca:5ccf)
[19:51:40] *** Joins: arinov_ (~arinov@213.194.126.155)
[19:51:50] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[19:52:01] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[19:52:02] *** Quits: LyndsySimon (sid34452@lymington.irccloud.com) (Ping timeout: 240 seconds)
[19:52:17] <twb> wyre: you're not alone in finding the incestuous generations of python packaging frameworks DEEPLY confusing
[19:52:19] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[19:52:20] *** Joins: thiras (~thiras@user/thiras)
[19:52:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[19:52:58] *** Joins: weibullguy (weibullguy@gateway/vpn/protonvpn/weibullguy)
[19:53:09] *** Joins: LyndsySimon (sid34452@id-34452.lymington.irccloud.com)
[19:53:18] <jinsun__> wyre: build-system requires in pyproject.toml does the work of setup_requires without assuming setuptools backend, don't use setup_requires
[19:53:26] <SensibleSalmon[m> yo, anyone have suggestions for running a ton of short subprocesses simultaneously, very fast? currently trying a threadpool, but am not seeing the performance I expected.
[19:53:41] *** Joins: drogas (~drogas@jump2.jet.uk)
[19:54:07] *** Quits: Madda (~Madda@2a05:f6c3:1935:0:2990:3a03:c1e1:2949) (Remote host closed the connection)
[19:54:23] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[19:54:41] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[19:54:45] <theseb> why is pandas useful over just using numpy?
[19:54:54] <wyre> jinsun__, sure, but when requires = ["setuptools", "wheel"] ... it will use the setup.cfg? ð¤
[19:55:22] *** Joins: Cera (~Cera@user/Cera)
[19:55:36] *** Joins: cthulchu_ (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[19:55:47] *** Joins: crashrep (~crashrep@user/crashrep)
[19:56:01] *** Joins: Madda (~Madda@2a05:f6c3:1935:0:2990:3a03:c1e1:2949)
[19:56:37] <jinsun__> wyre: if you have build-backend = "setuptools.build_meta" or the legacy setuptools one, then your frond-end would invoke setuptools and it will read setup.cfg
[19:56:54] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[19:57:11] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[19:57:20] <Guest54> hey guys, need som help with path handling. How do I extract out everything after a directory? In this example, I want everything after "foo": ~/foo/blah/blah -> blah/blah , /home/me/foo/blah/blah -> blah/blah
[19:57:31] <sco1> theseb: because it offers functionality that numpy doesn't
[19:57:36] <Guest54> any pointers would be super useful
[19:58:27] <Guest54> and if I'm foo dir and I do "blah/blah" I shouldÂ  get "blah/blah"
[19:59:12] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[19:59:17] <exarkun> Guest54: Have a look at the pathlib module
[19:59:29] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[19:59:55] <wyre> are all these keywords intended to the [metadata] section? https://setuptools.pypa.io/en/latest/references/keywords.html
[20:00:04] <Guest54> thanks any functions specifically?
[20:00:15] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[20:00:22] <theseb> scol: like what?
[20:00:51] <sco1> https://pandas.pydata.org/docs/user_guide/10min.html
[20:01:11] <iomari891> greetings, using subprocess.Popen, how can I suppress all warning and eroor output
[20:01:17] <wyre> also ... something like `python_requires=>=3.6` is something suitable? ð¤
[20:01:42] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[20:02:13] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[20:02:30] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[20:02:49] <twb> Guest54: pathlib.Path('/srv/porn/lena.jpg').name
[20:03:14] <twb> Guest54: pathlib.Path('/srv/porn/lena.jpg').relative_to('/srv')
[20:03:19] *** Quits: jdmark (~jdmark@user/jdmark) (Quit: Leaving)
[20:03:50] *** Quits: moonmoon (awoo@libera/staff/moonmoon) (Changing host)
[20:03:50] *** Joins: moonmoon (awoo@libera/staff/wofl/moonmoon)
[20:04:10] <twb> pathlib is one of the best things to happen to Python since b'' and u'' were split
[20:04:27] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[20:04:44] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[20:04:49] *** Quits: spacenautx (~spacenaut@user/spacenautx) (Quit: WeeChat 3.4)
[20:05:07] *** Joins: crashrep (~crashrep@user/crashrep)
[20:05:23] <Guest54> twb thanks that works but what if I'm in the /src directory to begin with, and I do "porn/len.jpg" -- I want to output to be the same, not get an exception
[20:05:49] <twb> Guest54: you want to go up EXACTLY one directory, always?
[20:06:04] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[20:06:04] <twb> Guest54: I would probably do something like path.relative_to(path.parent.parent)
[20:06:08] *** Quits: Strom (strom@fedora/strom) ()
[20:06:27] *** Joins: kostkon__ (~androirc@2a02:587:a10f:c988:4142:80fd:5bce:d437)
[20:06:58] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[20:06:59] *** Quits: andreasbuhr (~quassel@p549db106.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[20:07:03] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[20:07:16] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[20:07:23] <Guest54> thanks that works:)
[20:07:33] <Guest54> I am not sure why though, especially the last line: path.relative_to(path.parent.parent)
[20:07:47] <twb> You might be able to do .relative_to(path / '../..') but that might be unix-specific
[20:08:11] *** Joins: Strom (strom@fedora/strom)
[20:08:17] *** Quits: r00tkit (~r00tkit@45.4.184.8.static.bsbtecnologia.com.br) (Ping timeout: 240 seconds)
[20:08:25] <twb> I don't know if cpython implements drive letters in Unix, which are written like this:  /../C/winnt
[20:08:33] <twb> They're not very common
[20:08:39] *** Joins: leighbb (~leighbb@user/leighbb)
[20:08:55] *** Joins: r00tkit (~r00tkit@45.4.184.8.static.bsbtecnologia.com.br)
[20:09:06] *** Quits: r00tkit (~r00tkit@45.4.184.8.static.bsbtecnologia.com.br) (Remote host closed the connection)
[20:09:09] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[20:09:26] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[20:10:08] *** Quits: rsx (~dummy@ppp-188-174-141-108.dynamic.mnet-online.de) (Quit: rsx)
[20:10:44] *** Joins: zeden (~zeden@user/zeden)
[20:11:25] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[20:11:41] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[20:11:56] *** Quits: JohnDoe1 (~johndoe1@184-091-099-189.res.spectrum.com) (Ping timeout: 272 seconds)
[20:12:04] <ChrisWarrick> twb: where have you seen those?
[20:12:19] <twb> Olin Shiver's stuff
[20:12:40] *** Joins: jamea (~jamea@189.237.57.149)
[20:12:48] *** Joins: Barones (~Barones@user/Barones)
[20:12:57] <ChrisWarrick> this .. thing doesnât seem legal to me
[20:13:02] <twb> Last time I looked they're not explicitly forbidden by SUS, but that was probably before SUS 2013
[20:13:04] <ChrisWarrick> wouldnât it just simplify to /C/?
[20:13:20] <twb> ChrisWarrick: not necessarily!
[20:13:43] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[20:14:00] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[20:14:01] <ChrisWarrick> pathlib.Path simplifies "/../C/" to just "/C/", so that wouldnât work
[20:14:30] <ChrisWarrick> twb: do you have any links on this topic?
[20:15:19] <twb> ChrisWarrick: these days, somewhere in here I guess?   https://github.com/scheme/scsh
[20:15:21] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[20:15:37] *** Quits: peteyboy1 (~peteyboy1@95.169.226.66) (Ping timeout: 240 seconds)
[20:15:40] <ChrisWarrick> how is scheme related?
[20:15:52] <twb> That's where I saw it last
[20:16:05] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[20:16:06] *** Joins: jamea22 (~jamea@189.237.57.149)
[20:16:11] <twb> If you just want the unix standard (POSIX.1), that's http://www.opengroup.org/onlinepubs/9699919799/
[20:16:21] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[20:16:30] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[20:16:31] <CrtxReavr> Is it fair to interpret this as an error in the docstring: https://bpa.st/6ODQ
[20:16:38] <ChrisWarrick> twb: Iâd prefer a more direct link
[20:16:43] <twb> ChrisWarrick: sorry, I don't have one
[20:16:46] <CrtxReavr> for file.seek()
[20:16:51] <twb> ChrisWarrick: I haven't touched that stuff for about 18 years
[20:17:30] <twb> CrtxReavr: looks confusing, at the very least
[20:18:02] <CrtxReavr> file.seek(0, 2) seems to work, however.
[20:18:30] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[20:18:36] *** Quits: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de) (Ping timeout: 240 seconds)
[20:18:37] <twb> I've only ever done f.seek(0) or f.seek(offset)
[20:18:48] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[20:18:56] *** Joins: sobkas (~sobkas@95.175.17.217)
[20:19:06] <twb> the "whence" is in the underlying C function, at least
[20:19:16] <twb> int fseek(FILE *stream, long offset, int whence);
[20:19:32] *** Quits: jamea (~jamea@189.237.57.149) (Ping timeout: 272 seconds)
[20:19:54] *** Joins: jamea (~jamea@189.237.57.149)
[20:20:02] <twb> CrtxReavr: obvious question: are you on unix with cpython right now?  If not, the semantics might be different due to underlying OS difference
[20:20:17] *** Quits: jamea22 (~jamea@189.237.57.149) (Ping timeout: 240 seconds)
[20:20:49] *** Joins: Viewday112 (~Viewday@user/viewday)
[20:20:50] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[20:21:08] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[20:21:39] <ChrisWarrick> twb: that drive letter idea is intriguing, but it kinda doesnât match many unix assumptions (mine and pythonâs), so Iâd like to see some source for this usage. (also, why not just /mnt/C?)
[20:21:49] *** Joins: Hackerpcs (~user@user/hackerpcs)
[20:22:12] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 240 seconds)
[20:22:13] *** Viewday112 is now known as Viewday11
[20:22:57] <twb> ChrisWarrick: the use case was running code in NT4's posix.1 context
[20:23:03] *** Joins: jamea22 (~jamea@189.237.57.149)
[20:23:07] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[20:23:22] <twb> This was under SFU --- what eventually got replaced by WSL
[20:23:24] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[20:23:57] *** Quits: jamea (~jamea@189.237.57.149) (Ping timeout: 240 seconds)
[20:24:04] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[20:25:26] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[20:25:45] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[20:25:55] *** Joins: jdmark (~jdmark@user/jdmark)
[20:26:14] <SnoopJ> grr, I always forget that you can't do `@pytest.mark.parametrize("obj,expected", [(fixtureA, "A"), (fixtureB, "B")])` in pytest, you have to explicitly request the fixture or use a plugin or...
[20:26:31] *** Joins: jamea (~jamea@189.237.57.149)
[20:27:01] *** Joins: bahamas (~lucian@84.232.140.52)
[20:27:10] <CrtxReavr> twb, f.seek() appears to have changed between 2 & 3.
[20:27:24] *** Quits: gurkenglas (~gurkengla@dslb-188-096-121-068.188.096.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[20:27:32] <twb> CrtxReavr: in that case I'd do a quick grep over whatsnew*.html
[20:27:43] *** Joins: gurkenglas (~gurkengla@dslb-188-096-121-068.188.096.pools.vodafone-ip.de)
[20:27:46] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[20:28:01] *** Joins: kickingvegas (~cchoi@c-73-170-198-141.hsd1.ca.comcast.net)
[20:28:03] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[20:28:15] *** Quits: arinov_ (~arinov@213.194.126.155) (Ping timeout: 252 seconds)
[20:29:17] *** Quits: jamea22 (~jamea@189.237.57.149) (Ping timeout: 240 seconds)
[20:30:02] *** Joins: jamea22 (~jamea@189.237.57.149)
[20:30:04] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[20:30:23] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[20:30:58] <jinsun__> CrtxReavr: the / at the end of the signature means anything before that is positional only
[20:31:04] *** Quits: Emet-Selch (~haise01@user/haise01) (Read error: Connection reset by peer)
[20:31:28] *** Quits: kts (~kts@103.73.237.133) (Quit: Konversation terminated!)
[20:32:31] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[20:32:47] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[20:32:56] *** Joins: c4017w_ (~c4017@209.52.68.8)
[20:33:05] <bjs> Payam: sorry, what paste?
[20:33:28] *** Quits: jamea (~jamea@189.237.57.149) (Ping timeout: 272 seconds)
[20:34:46] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[20:35:02] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[20:35:08] *** Quits: shad (~shad@user/shad) (Ping timeout: 250 seconds)
[20:35:24] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 240 seconds)
[20:35:51] *** Quits: pyever___ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 256 seconds)
[20:35:57] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[20:35:58] *** Joins: nomic (~nomic@85.203.36.100)
[20:36:05] *** Joins: jamea (~jamea@189.237.57.149)
[20:36:12] *** Quits: jamea22 (~jamea@189.237.57.149) (Ping timeout: 240 seconds)
[20:36:45] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[20:36:45] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl48aghvvyhn682j5.ipv6.telus.net)
[20:37:13] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[20:37:31] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[20:38:07] *** Quits: Cera (~Cera@user/Cera) (Ping timeout: 256 seconds)
[20:38:35] *** Joins: Linux77 (~7Linux7@2804:d45:8c08:9300:76d0:2bff:fe7a:f3a4)
[20:39:17] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 240 seconds)
[20:39:24] *** Quits: cursey (~cursey@user/cursey) (Quit: bye)
[20:39:30] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[20:39:43] *** Joins: cursey (~cursey@user/cursey)
[20:39:47] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[20:40:06] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[20:41:48] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:41:57] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[20:42:05] *** Quits: Guest54 (~Guest54@2620:10d:c092:400::4:b417) (Ping timeout: 256 seconds)
[20:42:13] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[20:42:36] *** Joins: ravan (~ravan@42.201.198.151)
[20:42:36] *** Quits: ravan (~ravan@42.201.198.151) (Changing host)
[20:42:36] *** Joins: ravan (~ravan@user/ravan)
[20:44:15] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[20:44:16] <twb> jinsun__: ah thanks
[20:44:25] <twb> jinsun__: I was *nearly* smart enough to ask about that
[20:44:33] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[20:44:39] *** Quits: jmcb (~jmcb@nas47-67.york.ac.uk) (Ping timeout: 268 seconds)
[20:45:01] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 240 seconds)
[20:46:31] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[20:46:48] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[20:47:11] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 256 seconds)
[20:47:23] <SnoopJ> a cute example of a documentation idiom becoming a language feature
[20:47:39] *** Joins: emf (~emf@2620:10d:c090:400::5:b81)
[20:47:42] *** Joins: paul424 (~tom@ip-5-172-234-113.multi.internet.cyfrowypolsat.pl)
[20:47:47] *** Joins: kts (~kts@103.73.237.133)
[20:48:00] *** Joins: jamea22 (~jamea@189.237.57.149)
[20:48:11] *** Quits: nomic (~nomic@85.203.36.100) (Quit: Leaving)
[20:48:29] *** Joins: nomic (~nomic@85.203.36.100)
[20:48:36] *** Quits: hams (~hams@user/hams) (Ping timeout: 240 seconds)
[20:48:37] *** Joins: zebrag (~chris@user/zebrag)
[20:49:03] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[20:49:17] *** Joins: lbalhar (~lbalhar@94.242.73.186)
[20:49:21] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[20:49:59] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[20:51:09] *** Quits: jamea (~jamea@189.237.57.149) (Ping timeout: 256 seconds)
[20:51:33] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[20:51:34] <CrtxReavr> twb / jinsun__, none of that changes the fact that file.seek() accepts no positional arguments, despite what the docstring says.
[20:51:41] <CrtxReavr> whoops
[20:51:49] <CrtxReavr> twb / jinsun__, none of that changes the fact that file.seek() accepts no keyword arguments, despite what the docstring says.
[20:51:51] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[20:52:01] *** Joins: jamea (~jamea@189.237.57.149)
[20:52:51] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[20:53:50] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[20:54:02] <twb> CrtxReavr: it doesn't actually say it's a keyword argument
[20:54:09] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[20:54:23] *** Joins: tobybl (~tobybl@252.193.115.87.dyn.plus.net)
[20:55:38] *** Quits: jamea22 (~jamea@189.237.57.149) (Ping timeout: 272 seconds)
[20:55:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[20:56:08] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[20:56:26] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[20:58:05] *** Joins: jamea22 (~jamea@189.237.57.149)
[20:58:17] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[20:58:30] *** Joins: arinov_ (~arinov@31.142.113.163)
[20:58:33] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[20:58:37] <blei> amogorkon that's a fantastic lib, too bad its only alpha quality
[20:58:52] <jinsun__> yeah the docstring doesn't say whether it is positional or keyword, you just have to know it from the signature, also it is a bit weird convention, not obvious at all unless you already know about https://www.python.org/dev/peps/pep-0570/
[20:58:58] *** Quits: jamea (~jamea@189.237.57.149) (Ping timeout: 250 seconds)
[20:59:50] *** Quits: lbalhar (~lbalhar@94.242.73.186) (Ping timeout: 250 seconds)
[21:00:14] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[21:00:15] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[21:00:21] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[21:00:30] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[21:00:47] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[21:01:34] *** Joins: lbalhar (~lbalhar@94.242.73.186)
[21:02:11] *** Quits: Guest62 (~Guest62@2603-6010-4903-d184-94c2-43ab-c826-d8e9.res6.spectrum.com) (Quit: Client closed)
[21:02:57] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[21:03:15] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[21:03:48] *** Joins: Cera (~Cera@user/Cera)
[21:04:05] *** Joins: jamea (~jamea@189.237.57.149)
[21:04:18] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[21:04:22] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:489b:ff0a:dcf5:4c60) (Remote host closed the connection)
[21:04:24] *** Joins: cheater (~Username@user/cheater)
[21:04:31] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[21:05:07] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[21:05:08] *** Quits: jamea22 (~jamea@189.237.57.149) (Ping timeout: 272 seconds)
[21:05:24] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[21:05:39] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0::49)
[21:06:25] *** Quits: blurry (xbaranov@lounge.fi.muni.cz) (Quit: Ping timeout (120 seconds))
[21:06:25] *** Quits: driib2 (~driib@185.65.135.238) (Quit: Ping timeout (120 seconds))
[21:06:32] *** Quits: lxdr (~lxdr@user/lxdr) (Quit: Ping timeout (120 seconds))
[21:06:32] *** Quits: wyclif (~wyclif@user/wyclif) (Quit: leaving)
[21:06:34] *** Joins: blurry (xbaranov@lounge.fi.muni.cz)
[21:06:46] *** Joins: driib2 (~driib@185.65.135.238)
[21:06:59] *** Quits: Socra (~Socra@206.217.216.21) (Read error: Connection reset by peer)
[21:07:17] *** Quits: CygniX (~CygniX@2a01:8740:1:727:4e:80:7f:2d) (Excess Flood)
[21:07:17] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[21:07:18] *** Joins: lxdr (~lxdr@user/lxdr)
[21:07:25] *** Quits: kurfen (~kurfen@213.152.188.7) (Quit: ZNC 1.8.2 - https://znc.in)
[21:07:26] *** Quits: Mathisen (mathisen@about/windows/staff/mathisen) (Quit: ZNC 1.8.2 - https://znc.in)
[21:07:34] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[21:07:35] *** Joins: CygniX (~CygniX@2a01:8740:1:727:4e:80:7f:2d)
[21:07:40] *** Joins: Mathisen_ (mathisen@about/windows/staff/mathisen)
[21:07:43] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.4)
[21:07:49] *** Quits: kts (~kts@103.73.237.133) (Remote host closed the connection)
[21:07:53] *** Joins: jamea22 (~jamea@189.237.57.149)
[21:08:12] *** Quits: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi) (Ping timeout: 240 seconds)
[21:08:43] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 256 seconds)
[21:08:46] *** Joins: kurfen (~kurfen@213.152.188.7)
[21:08:57] *** Quits: novns (~novns@user/novns) (Ping timeout: 272 seconds)
[21:09:35] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[21:09:53] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[21:10:06] *** Joins: Socra (~Socra@206.217.216.21)
[21:10:32] *** Joins: neverfindme (~hayden@158.123.160.43)
[21:10:33] *** Joins: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi)
[21:10:40] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[21:10:50] *** Quits: dntreou (~yakiza@inet-2a02-6900-8804-e010--23.oracle-ocna.com) (Read error: Connection reset by peer)
[21:10:58] *** Quits: jamea (~jamea@189.237.57.149) (Ping timeout: 260 seconds)
[21:11:28] *** Quits: the_lanetly_052_ (~the_lanet@185.30.88.133) (Ping timeout: 272 seconds)
[21:11:47] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 268 seconds)
[21:11:47] <bjs> CrtxReavr: parameters that have names can still be positional-only.  e.g. if you write in Python `def foo(x, /)`  then `foo(42)` is allowed but `foo(x=42)` is not.  I don't think it's an error in the docstring,  but perhaps the docs could be clearer on what the signature means (e.g. explicitly saying they're positional-only)
[21:11:49] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[21:12:07] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[21:12:25] *** Joins: newpy (~newpy@2610:148:2002:0:3248:5755:4741:9e6)
[21:12:27] *** Joins: crashrep (~crashrep@user/crashrep)
[21:13:38] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[21:14:07] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[21:14:24] *** Joins: jamea (~jamea@189.237.57.149)
[21:14:25] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[21:14:50] *** Joins: harpia (~harpia@143.208.84.100)
[21:16:15] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[21:16:32] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[21:16:35] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[21:17:30] *** Quits: jamea22 (~jamea@189.237.57.149) (Ping timeout: 260 seconds)
[21:17:38] *** Joins: the_lanetly_052_ (~the_lanet@194.135.152.253)
[21:17:58] *** Quits: neverfindme (~hayden@158.123.160.43) (Ping timeout: 260 seconds)
[21:18:15] *** Joins: jamea22 (~jamea@189.237.57.149)
[21:18:30] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[21:18:47] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[21:19:01] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[21:19:43] *** Quits: tobybl (~tobybl@252.193.115.87.dyn.plus.net) (Remote host closed the connection)
[21:20:18] *** Joins: pudo (uid16951@id-16951.tinside.irccloud.com)
[21:20:21] *** Quits: white2 (~mahengrui@user/mahengrui1) (Ping timeout: 245 seconds)
[21:20:41] *** Joins: peteyboy1 (~peteyboy1@95.169.226.66)
[21:20:47] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[21:21:04] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[21:21:14] *** Quits: jamea (~jamea@189.237.57.149) (Ping timeout: 260 seconds)
[21:21:15] *** Quits: tga (~tga@user/tga) (Quit: leaving)
[21:21:22] *** Joins: Mechanismus (~LabMonkey@206.255.106.67)
[21:21:28] <pudo> Hey all. What's a good way of spinning off async coroutines to run in a separate thread? I tried Thread(target=asyncio.run) but that works only once, do I need a full ThreadPoolExecutor?
[21:21:33] *** Joins: peteyboy_ (~peteyboy1@95.169.226.66)
[21:21:42] *** Joins: jamea (~jamea@189.237.57.149)
[21:21:44] *** Quits: F0rTh3J3st (~F0rTh3J3s@wsip-174-67-161-18.hr.hr.cox.net) (Quit: Leaving)
[21:22:04] <bjs> pudo: what do you mean works "only once" ?
[21:22:26] <twb> bjs: then you need to buy a new computer
[21:22:29] <bjs> the problem is that you can't really have that coroutine part of the same event loop, as asyncio isn't designed to have tasks running in different threads
[21:22:41] * twb points at 20 metre high pile of discarded thinkpads
[21:22:45] <bjs> twb: what
[21:22:49] <bjs> oh
[21:22:49] <twb> bjs: just joking
[21:22:59] <bjs> I got the joke, I'm just slow
[21:22:59] *** Quits: lbalhar (~lbalhar@94.242.73.186) (Ping timeout: 250 seconds)
[21:22:59] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[21:23:00] <bjs> :D
[21:23:01] <pudo> bjs: yeah it looks like it shuts down the event loop -
[21:23:15] <bjs> pudo: asyncio.run creates a new event loop and runs the async def in it yeah
[21:23:17] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[21:23:20] <bjs> is that not what you wanted?
[21:23:43] <twb> bjs: variant of "I say, Lord Sandwich, did you know if you wash socks, you can wear them more than once?"
[21:24:19] <pudo> bjs: it is, but if I run this twice the second run fails on a closed event loop: https://bpa.st/7XRQ
[21:24:23] *** Joins: lbalhar (~lbalhar@94.242.73.186)
[21:24:37] *** Quits: jamea22 (~jamea@189.237.57.149) (Ping timeout: 240 seconds)
[21:24:55] *** Joins: Guest92 (~Guest92@178.135.11.251)
[21:25:15] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[21:25:21] *** Quits: peteyboy1 (~peteyboy1@95.169.226.66) (Ping timeout: 268 seconds)
[21:25:24] *** Quits: martti (~martti@46-126-48-136.dynamic.hispeed.ch) (Ping timeout: 240 seconds)
[21:25:27] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:40b5:ca9a:ad86:bff0) (Quit: Textual IRC Client: www.textualapp.com)
[21:25:28] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[21:25:29] <Guest92> Suppose a json file (randomly picked: https://gist.github.com/gcollazo/884a489a50aec7b53765405f40c6fbd1) which gets read into a Py dictionary. Iâd like to: search a given substring (eg. â:imageâ) and return the section/list it is part of (in this case, that would be lines 68-71). Is there a straightforward way of doing this? (besides regex)
[21:25:45] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[21:25:49] *** Joins: dreamon (~dreamon@pd9503c4b.dip0.t-ipconnect.de)
[21:25:57] *** Quits: jamea (~jamea@189.237.57.149) (Ping timeout: 240 seconds)
[21:26:10] *** Joins: qpdb (~qpdb@user/qpdb)
[21:26:22] *** Joins: mike18 (~geri@71-220-52-187.mpls.qwest.net)
[21:26:35] *** Joins: jamea (~jamea@189.237.57.149)
[21:26:49] <mike18> hi what is the best way to sum up data across a dataframe for different rows?
[21:26:53] <mike18> pandas dataframe
[21:27:12] *** Joins: zoooz (~zoooz@204.43.253.243)
[21:27:12] <zoooz> https://www.hackinscience.org/exercises/sets-of-love
[21:27:15] <zoooz> https://www.hackinscience.org/exercises/sets-of-love
[21:27:17] <zoooz> https://www.hackinscience.org/exercises/sets-of-love
[21:27:22] <bjs> pudo: I'm a bit surprised you get an error
[21:27:36] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[21:27:42] <zoooz> how to complete this?
[21:27:43] <jinsun__> mike18: df.sum(axis=1)
[21:27:47] <zoooz> https://www.hackinscience.org/exercises/sets-of-love
[21:27:53] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[21:27:56] <bjs> asyncio.run is supposed to create a new loop each time
[21:27:56] <mike18> can you give it the col to sum too?
[21:27:56] *** Quits: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com) (Quit: beli6147)
[21:28:22] <bjs> zoooz: I think you write the Python code into the box on the left and submit and it'll check the answer for you
[21:28:41] *** Quits: Stench (~Staunch@137.83.202.22) (Ping timeout: 245 seconds)
[21:28:48] <jinsun__> mike18: df[column_name].sum()
[21:28:53] <zoooz> thank you
[21:29:39] <bjs> pudo: what is the actual error you get?
[21:29:40] *** Quits: lbalhar (~lbalhar@94.242.73.186) (Ping timeout: 268 seconds)
[21:29:48] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[21:29:52] *** Quits: kevr (~kevr@user/kevr) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[21:30:02] *** Joins: jamea22 (~jamea@189.237.57.149)
[21:30:05] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[21:30:11] <mike18> jinsun__: cool also is there a good way to only takes rows which date match lets say today?
[21:30:11] *** Joins: kevr (~kevr@user/kevr)
[21:30:32] <zoooz> bjs: I was asking what the answer to the equation is? \
[21:30:34] <mike18> or this filtering of rows needs to be doen before?
[21:30:34] *** Quits: zoooz (~zoooz@204.43.253.243) (Client Quit)
[21:30:59] <pudo> bjs: this is the trace: https://bpa.st/MGWA (thanks for giving this a look!)
[21:31:15] *** Joins: crashrep (~crashrep@user/crashrep)
[21:31:29] <mike18> jinsun__: meaning: rows_for_today = self.my_df[(self.my_df["start_date"] == date_today)] ... is there a good way to combine that with df.sum?
[21:32:23] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[21:32:33] *** Quits: tWqaq (~tWqaq@240e:389:5d1c:ff00:ee0d:2d29:96db:ddcd) (Quit: Leaving)
[21:32:41] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[21:32:42] <bjs> pudo: hmm it's really hard to tell here,  my guess would be that you're creating some object that saves the current event loop and then trying to re-use that object (presumably some uvloop/aiohttp thing) between the tasks
[21:32:45] *** Joins: bluedust_ (~bluedust@103.165.167.61)
[21:33:16] *** Joins: c4017w__ (~c4017@209.52.68.8)
[21:33:22] *** Quits: jamea (~jamea@189.237.57.149) (Ping timeout: 268 seconds)
[21:33:28] <pudo> bjs: oh crap I think this is the answer!
[21:33:29] <pudo> bjs: that ES connection is .... stateful
[21:33:30] <jinsun__> mike18: yes you have to filter before, `today_rows = self.my_df["start_date"] == date_today` then after that do ` self.my_df[today_rows].sum()`
[21:33:42] *** Joins: jamea (~jamea@189.237.57.149)
[21:33:51] <mike18> jinsun__: but that recreased the entire df....
[21:33:57] <bjs> pudo: lots of "async" objects read the current event loop when they're created, and create futures and things tied to that loop
[21:34:02] <bjs> they often can't be picked up and used in another loop too
[21:34:06] <jinsun__> mike18: recreased?
[21:34:15] <mike18> today_rows = self.my_df["start_date"] == date_today
[21:34:22] <mike18> the creates a new dataframe
[21:34:29] <mike18> as far i understand
[21:34:33] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[21:34:39] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[21:34:47] *** Quits: jay-m126_ (~jay-m@154.72.167.198) (Ping timeout: 256 seconds)
[21:34:57] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[21:34:58] <jinsun__> it creates a new Series, with only boolean values
[21:35:07] *** Quits: jay-m1261 (~jay-m@154.72.167.198) (Ping timeout: 256 seconds)
[21:35:08] *** Joins: casastorta (~casastort@neo1.krivokuca.net)
[21:35:21] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::78dd) (Ping timeout: 252 seconds)
[21:35:24] *** Quits: jay-m126 (~jay-m@154.72.167.198) (Ping timeout: 240 seconds)
[21:35:35] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[21:35:46] <jinsun__> dont try to optimize prematurely
[21:36:10] *** Quits: pagios (~pagios@life.is-a.beauty) (Quit: fBNC - https://bnc4free.com)
[21:36:23] <mike18> jinsun__: just trying to understand if what 2 commands could be combined...
[21:36:48] *** Quits: bluedust (~bluedust@59.89.219.123) (Ping timeout: 272 seconds)
[21:36:57] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[21:37:03] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[21:37:04] *** Quits: jamea22 (~jamea@189.237.57.149) (Ping timeout: 268 seconds)
[21:37:08] <jinsun__> you could one-liner it, but it will still create an intermediate Series
[21:37:15] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[21:37:19] *** Joins: jamea22 (~jamea@189.237.57.149)
[21:38:17] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[21:38:18] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[21:38:42] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 272 seconds)
[21:39:07] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[21:39:24] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[21:39:29] <mike18> yes you have to filter before, `today_rows = self.my_df["start_date"] == date_today` then after that do ` self.my_df[today_rows].sum()`
[21:39:42] <mike18> how can i select the column to run the sum on?
[21:39:43] *** Joins: vlado2 (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c)
[21:40:37] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[21:40:47] *** Quits: jamea (~jamea@189.237.57.149) (Ping timeout: 256 seconds)
[21:40:50] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[21:41:07] <mike18> each row has a date ... there are many rows
[21:41:09] *** Joins: jamea (~jamea@189.237.57.149)
[21:41:21] <mike18> and there are different columns in the df
[21:41:21] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[21:41:38] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[21:41:41] *** Joins: bolnav[m] (~bolnavm]@2001:470:69fc:105::1683)
[21:41:50] <mike18> and i need to get the sum for one specific col
[21:41:55] *** Quits: jamea22 (~jamea@189.237.57.149) (Ping timeout: 256 seconds)
[21:42:19] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Quit: leaving)
[21:43:32] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[21:43:49] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[21:44:25] *** tinytoast is now known as tinystoat
[21:44:49] *** Joins: jamea22 (~jamea@189.237.57.149)
[21:44:59] *** Quits: saroy (~Sandipan@43.252.250.113) (Ping timeout: 256 seconds)
[21:44:59] *** Quits: Payam (~Payam@138.106.57.132) (Ping timeout: 256 seconds)
[21:45:47] <bolnav[m]> How to idiomatically make a DataFrame whose columns and index are from a given list and the cells are f(index, column)? Like corr() but for my function. I'm googling since half an hour.
[21:45:51] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[21:45:55] *** Quits: bluedust_ (~bluedust@103.165.167.61) (Remote host closed the connection)
[21:46:07] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[21:46:56] <mike18> jinsun__: i need to change the code to: https://ideone.com/YNsaIu
[21:47:05] <mike18> is there a better way to do the same?
[21:47:37] *** Quits: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com) (Read error: Connection reset by peer)
[21:47:51] *** Joins: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com)
[21:48:08] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[21:48:10] <jinsun__> mike18: looks fine, and it is doing the sum for one specific col only
[21:48:12] *** Quits: jamea (~jamea@189.237.57.149) (Ping timeout: 272 seconds)
[21:48:22] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[21:48:26] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[21:48:37] <mike18> jinsun__: but as far i understand it reallocates the dataframe - can you tell me if the code can be improved?
[21:48:57] *** Quits: gurkenglas (~gurkengla@dslb-188-096-121-068.188.096.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[21:48:58] *** Joins: jamea (~jamea@189.237.57.149)
[21:49:58] <SnoopJ> any not-a-plugin way to have dessert for dinner here? I really do not want to explode each of these tests into 3 https://bpa.st/LBVA
[21:50:30] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[21:50:42] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[21:50:47] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[21:51:10] <SnoopJ> most of the suggestions on #349 (https://github.com/pytest-dev/pytest/issues/349) appear to be using pytest-lazy-fixture or pytest-cases :(
[21:51:28] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[21:51:33] *** Quits: jamea22 (~jamea@189.237.57.149) (Ping timeout: 256 seconds)
[21:51:47] *** Joins: jamea22 (~jamea@189.237.57.149)
[21:51:54] *** Quits: crackerjack (~crackerja@pear.bnc4free.com) (Quit: fBNC - https://bnc4free.com)
[21:51:57] <jinsun__> mike18: I would do it like you did, and not worry about memory, even if it makes a new df it just does locally in that function so it will be deleted once it returns
[21:52:17] <mike18> but speed?
[21:52:22] <mike18> i have lots of data
[21:52:43] <SnoopJ> I was hoping request.getfixturevalue() would help, but it doesn't seem to be useful for parametrized fixtures
[21:52:45] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[21:53:02] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[21:53:03] *** Quits: Barones (~Barones@user/Barones) (Remote host closed the connection)
[21:53:25] *** Quits: burakcank (~burakcank@has.arrived.and.is.ready-to.party) (Ping timeout: 240 seconds)
[21:53:54] *** Quits: jamea (~jamea@189.237.57.149) (Ping timeout: 272 seconds)
[21:54:20] *** Quits: rje (~textual@50.35.241.164) (Ping timeout: 268 seconds)
[21:54:58] *** Joins: wac (~wac@user/wac)
[21:55:07] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[21:55:23] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[21:55:27] *** Joins: jamea (~jamea@189.237.57.149)
[21:57:24] *** Quits: slisnake (~slisnake@103.107.198.141) (Ping timeout: 240 seconds)
[21:57:27] *** Quits: twb (~twb@203.7.155.73) (Ping timeout: 256 seconds)
[21:57:28] *** Joins: Barones (~Barones@user/Barones)
[21:57:29] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[21:57:45] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[21:58:17] *** Quits: jamea22 (~jamea@189.237.57.149) (Ping timeout: 240 seconds)
[21:58:35] <jinsun__> bolnav[m]: the really staightforward way is `pd.DataFrame([[f(index, column) for column in columns] for index in indices], index=indices, columns=columns)`
[21:58:36] *** Quits: diddly_bop_ (~diddly_bo@107-196-11-132.lightspeed.wchtks.sbcglobal.net) (Ping timeout: 240 seconds)
[21:58:40] *** Joins: diddly_bop (~diddly_bo@107-196-11-132.lightspeed.wchtks.sbcglobal.net)
[21:59:02] *** Quits: Titore (~Titore@user/titore) (Ping timeout: 260 seconds)
[21:59:08] *** Joins: jamea22 (~jamea@189.237.57.149)
[21:59:40] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[21:59:44] *** Parts: Lindrian (~Lindrian@about/regex/lindrian) (WeeChat 3.4)
[21:59:57] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[22:00:39] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Remote host closed the connection)
[22:00:58] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[22:01:11] <bolnav[m]> jinsun__: thank you, I was also hoping for something vectorized, but it seems the api has nothing for that
[22:01:17] *** Pici` is now known as Pici
[22:01:58] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[22:02:16] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[22:02:46] *** Quits: jamea (~jamea@189.237.57.149) (Ping timeout: 272 seconds)
[22:02:54] *** Joins: stealth[] (~stealth]@2001:9e8:36cd:c300:e448:14c8:edb1:79ac)
[22:03:14] *** Mathisen_ is now known as Mathisen
[22:03:19] *** Joins: magla (~gelignite@55d4a4ec.access.ecotel.net)
[22:03:27] *** Quits: stockh0lm (~Andreas@p200300d2c70c6100f491f44bc7bfe165.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[22:04:28] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[22:04:45] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[22:05:10] *** Joins: bluedust (~bluedust@103.165.167.61)
[22:05:24] *** Quits: jamea22 (~jamea@189.237.57.149) (Ping timeout: 240 seconds)
[22:05:40] *** Quits: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com) (Quit: Textual IRC Client: www.textualapp.com)
[22:05:49] *** Joins: jamea (~jamea@189.237.57.149)
[22:06:06] *** Joins: Vyst (~IceChat95@94.12.203.165)
[22:06:42] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[22:07:01] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[22:07:14] *** Parts: bolnav[m] (~bolnavm]@2001:470:69fc:105::1683) ()
[22:07:48] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Read error: Connection reset by peer)
[22:07:55] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[22:08:55] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[22:09:11] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[22:09:25] *** Joins: jamea22 (~jamea@189.237.57.149)
[22:09:36] <Guest92> Suppose a json file (randomly picked: https://gist.github.com/gcollazo/884a489a50aec7b53765405f40c6fbd1) which gets read into a Py dictionary. Iâd like to: search a given substring (eg. â:imageâ) and return the section/list it is part of (in this case, that would be lines 68-71). Is there a straightforward way of doing this? (besides regex)
[22:10:27] *** Joins: slisnake (~slisnake@103.107.198.142)
[22:11:00] *** Quits: jamea (~jamea@189.237.57.149) (Ping timeout: 272 seconds)
[22:11:02] *** Quits: stealth[] (~stealth]@2001:9e8:36cd:c300:e448:14c8:edb1:79ac) (Quit: Leaving)
[22:11:11] <phy1729> Regex won't help you. You need to understand your data and write code from that understanding/spec
[22:11:11] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[22:11:11] *** Joins: novns (~novns@user/novns)
[22:11:28] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[22:11:37] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[22:11:40] *** Joins: ice9 (~ice9@user/ice9)
[22:12:35] <Guest92> hmm
[22:12:43] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[22:13:02] *** Joins: jamea (~jamea@189.237.57.149)
[22:13:16] *** Joins: bahamas (~lucian@84.232.140.52)
[22:13:24] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[22:13:31] <phy1729> Admittedly the docs are ... not great https://filepreviews.io/docs/metadata/
[22:13:32] *** Quits: arinov_ (~arinov@31.142.113.163) (Ping timeout: 272 seconds)
[22:13:41] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[22:13:44] *** Joins: antropez (~antropez@d216-121-208-163.home3.cgocable.net)
[22:13:48] *** Quits: Vyst (~IceChat95@94.12.203.165) (Ping timeout: 240 seconds)
[22:14:52] *** Joins: Pickchea (~private@user/pickchea)
[22:15:47] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[22:16:06] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[22:16:09] *** Quits: jamea22 (~jamea@189.237.57.149) (Ping timeout: 256 seconds)
[22:16:27] *** Joins: rje (~textual@65.141.156.170)
[22:16:31] *** Joins: jamea22 (~jamea@189.237.57.149)
[22:17:18] *** Joins: scoobydoob (~scooby@user/scoobydoo)
[22:17:51] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 256 seconds)
[22:18:59] *** Quits: ChkDigit (~u388mw@207-195-34-73.prna.static.sasknet.sk.ca) (Ping timeout: 256 seconds)
[22:19:33] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 256 seconds)
[22:19:34] *** Quits: jamea (~jamea@189.237.57.149) (Ping timeout: 250 seconds)
[22:19:37] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[22:19:39] *** scoobydoob is now known as scoobydoo
[22:19:55] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[22:19:58] *** zmotaj_ is now known as zmotaj
[22:19:58] *** Quits: zmotaj (~zmotaj@86.61.80.191) (Changing host)
[22:19:58] *** Joins: zmotaj (~zmotaj@user/zmotaj)
[22:20:17] *** Quits: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr) (Ping timeout: 240 seconds)
[22:20:52] *** Quits: jamea22 (~jamea@189.237.57.149) (Ping timeout: 250 seconds)
[22:21:07] *** Joins: Viewday118 (~Viewday@user/viewday)
[22:22:03] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[22:22:13] *** Quits: f1se4 (~f1se4@213.195.113.45) (Quit: WeeChat 3.4)
[22:22:21] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[22:22:45] *** Joins: jamea (~jamea@189.237.57.149)
[22:23:28] *** Quits: dupl0x (~duplox@137.220.127.235) (Ping timeout: 250 seconds)
[22:23:40] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 272 seconds)
[22:23:41] *** Viewday118 is now known as Viewday11
[22:23:41] <khile> filter(lambda x: ":image" in x['type'], d['original_file']['metadata']['webpage']['images'])
[22:24:28] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[22:24:31] *** Joins: bahamas (~lucian@84.232.140.52)
[22:24:46] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[22:26:22] *** Joins: jamea22 (~jamea@189.237.57.149)
[22:27:04] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[22:27:20] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[22:27:27] *** Joins: gurkenglas (~gurkengla@dslb-188-096-121-068.188.096.pools.vodafone-ip.de)
[22:27:27] *** Joins: sharksauce (sharksauce@user/sharksauce)
[22:28:13] *** Joins: stockh0lm (~Andreas@p200300d2c70c6100f491f44bc7bfe165.dip0.t-ipconnect.de)
[22:28:25] *** Quits: moto (~moto@user/moto) (Remote host closed the connection)
[22:29:06] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[22:29:22] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 272 seconds)
[22:29:29] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[22:29:48] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[22:30:00] *** Quits: jamea (~jamea@189.237.57.149) (Ping timeout: 272 seconds)
[22:30:03] <pudo> bjs: I now have a working feature. thanks again for your help!
[22:30:10] *** Joins: duplox (~duplox@137.220.127.235)
[22:30:33] *** Joins: crashrep (~crashrep@user/crashrep)
[22:30:52] *** Joins: bahamas (~lucian@84.232.140.52)
[22:31:16] *** Quits: jamea22 (~jamea@189.237.57.149) (Ping timeout: 272 seconds)
[22:32:06] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[22:32:23] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[22:32:52] *** Quits: duplox (~duplox@137.220.127.235) (Client Quit)
[22:33:30] *** Joins: c4017w_ (~c4017@209.52.68.8)
[22:33:40] *** kostkon_ is now known as kostkon
[22:34:31] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[22:34:35] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[22:34:49] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[22:35:25] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 256 seconds)
[22:36:03] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[22:36:26] *** Joins: crashrep (~crashrep@user/crashrep)
[22:36:27] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[22:36:39] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[22:36:53] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[22:36:56] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[22:36:59] *** Joins: thiras (~thiras@user/thiras)
[22:37:05] *** Joins: ThePhilgrim (~ThePhilgr@151.41.9.171)
[22:37:13] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[22:37:16] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[22:37:20] *** Joins: neverfindme (~hayden@158.123.160.43)
[22:37:38] *** Quits: Adoi (~Adoi@user/adoi) (Read error: Connection reset by peer)
[22:38:00] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[22:38:18] <anddam> while building a wheel for PySide2 I got   AssertionError: would build wheel with unsupported tag ('cp39', 'cp39', 'macosx_12_0_arm64')
[22:38:27] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Remote host closed the connection)
[22:38:44] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[22:39:10] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:40b5:ca9a:ad86:bff0)
[22:39:20] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[22:39:25] <anddam> I see supported_tags is  supported_tags = [(t.interpreter, t.abi, t.platform) for t in tags.sys_tags()]   with tags from packaging, but what's deciding is a certain tuple is supported or not?
[22:39:30] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 272 seconds)
[22:39:37] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[22:39:42] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Quit: rickybob)
[22:40:35] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[22:40:51] *** Quits: neverfindme (~hayden@158.123.160.43) (Client Quit)
[22:41:26] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[22:41:43] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[22:42:33] *** Quits: pro_z_ (~pro_z@37.214.78.161) (Ping timeout: 256 seconds)
[22:43:42] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[22:44:01] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[22:44:09] *** Joins: bluedust (~bluedust@103.165.167.61)
[22:44:39] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:44:59] *** Quits: Adrixan (~Adrixan@218.72.75.34.bc.googleusercontent.com) (Quit: ZNC - https://znc.in)
[22:45:04] *** Quits: Haxxa (~Haxxa@203-123-96-204.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:04] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:45:14] *** Joins: xkuru (~xkuru@user/xkuru)
[22:46:01] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[22:46:11] *** Quits: gurkenglas (~gurkengla@dslb-188-096-121-068.188.096.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[22:46:15] <anddam> oh this suggests just old tooling https://github.com/tensorflow/addons/issues/2579#issuecomment-947826101
[22:46:18] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[22:46:35] *** Joins: p-i-_ (~Ohmu@183.89.25.222)
[22:46:41] <anddam> cp38 builds fine btw (I am using pyenv)
[22:47:55] <anddam> python -m pip install wheel setuptools pip --upgrade
[22:48:09] *** Joins: Haxxa (~Haxxa@203-123-96-204.ip4.superloop.com)
[22:48:09] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[22:48:23] *** Joins: _ev (~ev@user/ev/x-8999918)
[22:48:28] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[22:48:57] *** Quits: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com) (Ping timeout: 240 seconds)
[22:49:31] <anddam> oops, wrong terminal
[22:49:42] <anddam> and also that did not work, packages are already updated
[22:50:09] *** Quits: p-i- (~Ohmu@183.89.25.222) (Ping timeout: 256 seconds)
[22:50:27] *** Joins: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com)
[22:50:29] *** Quits: pycode1 (~pycode3@2001:b07:5d28:551:4dc7:1c37:449f:b2a5) (Ping timeout: 256 seconds)
[22:50:30] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[22:50:48] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[22:51:13] *** Joins: crashrep (~crashrep@user/crashrep)
[22:51:37] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 240 seconds)
[22:52:58] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[22:53:14] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[22:53:31] *** Joins: thiras (~thiras@user/thiras)
[22:54:07] *** Joins: matsaman (~matsaman@user/matsaman)
[22:54:28] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:55:06] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[22:55:15] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[22:55:24] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[22:56:19] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[22:57:57] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[22:58:09] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[22:58:27] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[22:58:48] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[22:59:24] *** Quits: brentaarnold (~brentaarn@24.112.92.157) (Ping timeout: 240 seconds)
[22:59:45] *** Joins: Angs (~Angs@2.69.51.226.mobile.tre.se)
[22:59:53] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[23:00:27] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[23:00:44] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[23:01:53] *** Joins: cognoscente (~cognoscen@216.194.99.109)
[23:01:59] *** Quits: dmvrtx (~dmvrtx@znc.dmvrtx.me) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[23:02:36] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 240 seconds)
[23:02:40] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[23:02:57] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[23:03:07] *** Joins: favreje (~jeff@170.249.173.67)
[23:03:10] <_ev> [asyncio]  [ tortoise]  Am I braking async or not using it right with one of / both of these functions?:  https://bpa.st/PUHQ
[23:04:07] *** Joins: dmvrtx (~dmvrtx@znc.dmvrtx.me)
[23:04:54] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[23:05:03] *** Joins: bahamas (~lucian@84.232.140.52)
[23:05:12] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[23:05:41] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[23:05:42] <_ev> breaking*
[23:06:16] *** Joins: crashrep (~crashrep@user/crashrep)
[23:07:12] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[23:07:28] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[23:07:50] *** Joins: arinov_ (~arinov@213.194.126.155)
[23:08:40] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[23:08:51] *** Quits: Cera (~Cera@user/Cera) (Ping timeout: 256 seconds)
[23:09:04] *** Joins: extropiator (~admin@user/extropiator)
[23:09:20] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[23:09:36] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[23:09:59] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 256 seconds)
[23:10:20] *** Joins: brentaarnold (~brentaarn@24.112.92.157)
[23:10:35] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[23:11:01] *** Quits: Freso (sid7914@libera/staff/metabrainz.user.Freso) (Ping timeout: 240 seconds)
[23:11:31] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[23:11:48] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[23:11:55] *** Joins: Freso (sid7914@libera/staff/metabrainz.user.Freso)
[23:12:21] <BinarySavior> as an easter egg for my domain, I want to serve git request with a single txt file
[23:12:31] <BinarySavior> how can I acheive this?
[23:12:41] <theseb> How make a Databricks notebook rerun cells of Python code every day?
[23:12:51] <BinarySavior> for example, `git pull domain.net` would download `readme.txt`
[23:13:06] <grym> BinarySavior: that doesn't sound like a python question to me
[23:13:11] *** Quits: l4yer (~l4yer@2001:ac8:20:3a00:1011:35ab:e3eb:6bab) (Read error: Connection reset by peer)
[23:13:31] <_SKiTZO> grym: clearly he wants to solve this with Python :D
[23:13:34] <BinarySavior> grym my webserver is django, if that context helps
[23:13:37] *** Joins: plastico (~plastico@neomutt/plastico)
[23:13:43] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[23:13:56] <BinarySavior> grym, where do you think would be the most relevant channel?
[23:14:01] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[23:15:09] <Guest92> @khile any way to look to fetch that section containing ":image" without providing the "full path" to it?
[23:15:32] *** Quits: DarthGandalf (user@znc/developer/DarthGandalf) (Quit: Bye)
[23:16:00] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[23:16:01] *** Joins: crashrep (~crashrep@user/crashrep)
[23:16:10] *** Joins: DarthGandalf (user@znc/developer/DarthGandalf)
[23:16:10] *** Joins: sydbarret (~anton@static-186-121-195-1.acelerate.net)
[23:16:18] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[23:16:59] <grym> BinarySavior: not sure, then
[23:17:24] *** Joins: zamanf (~dev@213.133.91.246)
[23:18:09] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[23:18:26] *** Joins: ChkDigit (~u388mw@207-195-34-73.prna.static.sasknet.sk.ca)
[23:18:27] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[23:19:28] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[23:20:15] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[23:20:40] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[23:20:43] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[23:20:56] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[23:21:03] *** Joins: gurkenglas (~gurkengla@dslb-188-096-121-068.188.096.pools.vodafone-ip.de)
[23:21:35] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[23:22:07] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:22:32] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[23:22:34] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 272 seconds)
[23:23:02] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[23:23:04] *** Parts: alive (~alive@ng.nixy.dk) ()
[23:23:12] <_SKiTZO> grym: Maybe you can have a look at this. It outlines the protocol used by git over https https://git-scm.com/docs/http-protocol
[23:23:20] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[23:23:28] <_SKiTZO> er I meant BinarySavior
[23:24:50] *** Quits: Peng (~mnordhoff@user/Peng) (Quit: Peng timeout)
[23:24:54] <BinarySavior> ahh I think I'm going to use wget instead of git pull
[23:24:55] *** Lord_of_Life_ is now known as Lord_of_Life
[23:24:56] <_SKiTZO> Then just create the response that mimics the expected data, a pretend readme.txt in file listing and the content of that file if it is fetched
[23:25:01] *** Joins: Peng (~mnordhoff@user/Peng)
[23:25:16] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Remote host closed the connection)
[23:25:17] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[23:25:18] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[23:25:35] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[23:25:36] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[23:25:37] *** Joins: crashrep (~crashrep@user/crashrep)
[23:26:22] <BinarySavior> My website is basically a profile i put on my resume and I have a pretend cursor on there with the words 'git pull domain.net' as a play on words for the employer to hire me.Â  I thought it would be a nice easter egg to actually serve a file if they end up typing that
[23:26:35] *** Joins: bahamas (~lucian@84.232.140.52)
[23:26:53] *** Quits: ckdCreations (~ckdCreati@147.55.133.141) (Read error: Connection reset by peer)
[23:26:59] <BinarySavior> but i might change `git pull` to `wget domain.net` instead
[23:27:32] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[23:27:50] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[23:28:15] <EdFletcher> if you're using `git` make sure to use the right syntax: it would be `clone`, not `pull`
[23:28:29] *** Quits: gormenghast (~gormengha@2a01:e0a:1fb:3af0:7285:c2ff:fe47:c69a) (Quit: Leaving)
[23:28:44] <purplex> i have a list l = [1, 3, 5, 3, 7, 8] i want to remove list of indexes e.g. [0, 3, 5], but problem is when i remove '0' indexes in list 'l' get shifted, maybe i should remove starting from last index, should i remove or create new list?
[23:29:01] <BinarySavior> EdFletcher that's exactly why I want to change it to wget... because `git clone` doesn't really carry the same connotation as `git pull` and `git pull` is basically the wrong command
[23:29:20] *** Quits: zamanf (~dev@213.133.91.246) (Ping timeout: 250 seconds)
[23:29:24] *** Joins: AlanMD_ (~AlanMD@86.124.30.89)
[23:29:31] <EdFletcher> fair enough
[23:29:56] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[23:30:14] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[23:30:18] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[23:30:46] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Ping timeout: 245 seconds)
[23:32:24] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[23:32:41] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[23:32:58] <nedbat> purplex: keep = [v for i, v in enumerate(l) if i not in list_of_indexes_to_remove]
[23:33:24] <nedbat> purplex: be careful if the lists are long though, since that's O(N**2).  You could change the list of indexes into a set to fix that if you need to.
[23:33:56] <dba> Hi, I have a list of dictionaries, how can I approach deleting the elements that share a same particular key value? not sure if there is an alternative to this solution https://bpa.st/XECQ
[23:34:04] *** Joins: jamea (~jamea@189.237.20.19)
[23:34:09] <purplex> i think they will longer, thousands!, nedbat
[23:34:15] *** Joins: c4017w__ (~c4017@209.52.68.8)
[23:34:27] <nedbat> purplex: ok, then definitely make a set of the indexes to delete first.
[23:34:43] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[23:35:00] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[23:35:04] <purplex> means delete from end?
[23:35:26] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:196e:3873:bcc9:b76f)
[23:35:27] <purplex> bigger index first
[23:35:29] <grym> dba: [item for item in data if not item['key'] == "the bad value"]
[23:35:31] <nedbat> purplex: no, you can use the code I showed
[23:35:42] *** tomg_ is now known as tomg
[23:35:58] <nedbat> dba: that's the way to do it, though you might want to use a set for product_urls
[23:36:00] <grym> dba: ie, "keep the ones i want" not "delete the ones i don't"
[23:36:37] <nedbat> purplex: to_remove = set(list_of_indexes_to_remove); keep = [v for i, v in enumerate(l) if i not in to_remove]
[23:36:48] <dba> Thanks
[23:37:04] * CrtxReavr <3 set operations.
[23:37:04] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[23:37:12] <purplex> i see, going to try
[23:37:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[23:37:22] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[23:37:31] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[23:37:46] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[23:38:06] <purplex> so time was wasted for using for loop on list
[23:38:24] *** Joins: greedom (~greedom@p200300de670f0d000a73634598407e9e.dip0.t-ipconnect.de)
[23:38:27] <grym> purplex: it adds up fast
[23:38:59] <dba> grym: I dont understand `== "the bad value"` part
[23:39:16] *** Joins: arinov (~arinov@213.194.126.155)
[23:39:23] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[23:39:27] *** Quits: arinov_ (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[23:39:43] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[23:40:10] *** Joins: jamea22 (~jamea@189.237.20.19)
[23:41:34] *** Quits: jamea (~jamea@189.237.20.19) (Ping timeout: 272 seconds)
[23:41:37] *** Joins: tomasfarias6 (~tomasfari@user/tomasfarias)
[23:41:43] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[23:42:02] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[23:42:04] <grym> dba: well, you know what key value you want to omit; fill that part in with what it really ought to be
[23:42:56] *** Quits: Lucanis (~Lucanis@user/lucanis) (Read error: Connection reset by peer)
[23:43:08] <mike18> what would be the improvement you could do on this short code? just wondering... https://ideone.com/YNsaIu
[23:43:16] <dba> grym: nop I dont know unfortunately I just want to delete all duplucated value in all dictionaries of a particular key in the list
[23:43:43] *** Quits: tomasfarias (~tomasfari@user/tomasfarias) (Ping timeout: 256 seconds)
[23:43:43] *** tomasfarias6 is now known as tomasfarias
[23:43:56] <grym> dba: if i have [{"foo":1, "bar":2}, {"foo":12, "bar":2}], who gets deleted and why
[23:43:59] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[23:43:59] <purplex> thanks, it works, nedbat. would removing from list be slower than building new one?
[23:44:06] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[23:44:16] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[23:44:22] <nedbat> purplex: i think they would be comparable speeds.  Is it too slow?
[23:44:43] <grym> dba: (let's assume "bar" is the key whose duplicate values are bad)
[23:45:02] <purplex> i haven't tried to check with thousands of numbers yet, i think i will
[23:45:09] *** Quits: MajorBiscuit (~MajorBisc@c-001-019-045.client.tudelft.eduvpn.nl) (Ping timeout: 252 seconds)
[23:45:37] <braxas> hi, I'm thinking/wondering about type hints and semver. Should adding type hints only be done in MINOR/MAJOR version changes?
[23:45:46] *** Joins: arinov_ (~arinov@176.89.17.40)
[23:46:00] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 272 seconds)
[23:46:03] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[23:46:06] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[23:46:09] <braxas> and not in PATCH, unless the change in type hints are to fix some mistake?
[23:46:12] <dba> grym: my use case all the dictionaries have the `bar` key and it is considered the PrimaryKey for the entire object. so either one of them deleted is fine. Just need to keep one
[23:46:15] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Ping timeout: 256 seconds)
[23:46:24] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[23:46:36] *** Joins: Cera (~Cera@user/Cera)
[23:46:46] <grym> dba: are the keys and values of your dicts hashable
[23:47:09] <dba> grym: what do you mean by hashable?
[23:48:03] <CrtxReavr> Can you stuff it in a pipe?
[23:48:15] <grym> that's hasjable :P
[23:48:33] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[23:48:49] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[23:48:52] *** Joins: jamea (~jamea@189.237.20.19)
[23:48:58] <grym> dba: what you have written now is fine then, probably
[23:49:01] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[23:50:05] <grym> dba: optimize for "can i understand this in a month" in this case, probably
[23:50:10] <dba> grym: Yeah it is working well. I was just curious of different ways to improve/optimize
[23:50:40] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[23:50:51] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[23:51:08] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[23:51:55] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[23:52:17] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 240 seconds)
[23:52:20] *** Quits: jamea22 (~jamea@189.237.20.19) (Ping timeout: 272 seconds)
[23:52:39] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:40b5:ca9a:ad86:bff0) (Quit: Textual IRC Client: www.textualapp.com)
[23:52:39] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[23:52:44] *** Joins: qlixed (~qlixed@181.44.129.13)
[23:52:50] *** Quits: Guest92 (~Guest92@178.135.11.251) (Quit: Client closed)
[23:52:58] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[23:53:02] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[23:53:12] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[23:53:29] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[23:53:32] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[23:55:30] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[23:55:41] *** Joins: Viewday11 (~Viewday@user/viewday)
[23:55:47] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[23:55:54] *** Joins: Masterphi (~Masterphi@user/masterphi)
[23:56:44] <CrtxReavr> https://stackoverflow.com/questions/14535730/what-does-hashable-mean-in-python
[23:56:50] <CrtxReavr> Good definition there, shockingly.
[23:57:13] *** Quits: qlixed (~qlixed@181.44.129.13) (Client Quit)
[23:57:34] *** Joins: aslicedbanjo (~aslicedba@host86-168-244-88.range86-168.btcentralplus.com)
[23:57:39] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[23:57:56] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[23:59:16] *** Quits: Masterphi (~Masterphi@user/masterphi) (Client Quit)
[23:59:17] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::78dd)
[23:59:19] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 272 seconds)
[23:59:46] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[23:59:56] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0:fa88:8bc5:c0d2:27cc) (Read error: Connection reset by peer)
