[00:09:18] *** Quits: reset (~reset@user/reset) (Quit: reset)
[00:12:13] *** Joins: reset (~reset@user/reset)
[00:18:32] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[00:58:39] *** Joins: rusty (~rustyboy@82.77.225.116)
[01:00:40] *** Joins: syabro (~syabro@91.226.191.247)
[01:01:06] *** Quits: syabro (~syabro@91.226.191.247) (Remote host closed the connection)
[01:01:22] *** Joins: syabro (~syabro@91.226.191.247)
[01:04:36] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Ping timeout: 240 seconds)
[01:04:37] *** Quits: rusty (~rustyboy@82.77.225.116) (Remote host closed the connection)
[01:05:56] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[01:06:38] *** Joins: rusty (~rustyboy@82.77.225.116)
[01:11:48] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:65d3:f1ae:4dc5:b40a)
[01:33:23] *** Quits: rusty (~rustyboy@82.77.225.116) (Quit: Leaving)
[01:49:21] *** Joins: dre (~dre@2001:8003:c932:c301:2079:4593:1556:be9c)
[02:00:37] *** Quits: magla (~gelignite@55d4275f.access.ecotel.net) (Quit: Stay safe!)
[02:03:57] *** Quits: fcr (~fran@r167-60-109-101.dialup.adsl.anteldata.net.uy) (Ping timeout: 252 seconds)
[02:09:57] *** Joins: fcr (~fran@r167-60-16-70.dialup.adsl.anteldata.net.uy)
[02:22:15] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 256 seconds)
[02:24:57] *** Joins: Erutuon (~Erutuon@user/erutuon)
[02:33:24] *** Quits: pizdets (~pizdets@183.182.110.81) (Ping timeout: 240 seconds)
[02:33:53] *** Joins: pizdets_ (~pizdets@183.182.110.76)
[02:34:06] *** Quits: sagax (~sagax_nb@user/sagax) (Excess Flood)
[02:35:55] *** Quits: _ArRay_ (~ArRay_@user/array/x-1947090) (Ping timeout: 240 seconds)
[02:37:26] *** Joins: _ArRay_ (~ArRay_@user/array/x-1947090)
[02:44:47] *** Quits: furq (~furq@b23.be) (Read error: Connection reset by peer)
[02:46:37] *** Quits: mniip (mniip@libera/staff/mniip) (Ping timeout: 606 seconds)
[02:50:36] *** Joins: furq (~furq@b23.be)
[02:54:25] *** Joins: mniip (mniip@libera/staff/mniip)
[03:19:29] <tumn> cr1901: the best way to prevent something from getting gc'd is to call luaL_ref on it and then remove the reference after you're finished with the object
[03:20:37] <tumn> _xor
[03:20:43] <tumn> all table entries have keys
[03:21:30] <tumn> although I guess you mean string keys specifically
[03:22:04] <tumn> there's no way to do that directly though, no
[03:36:28] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 272 seconds)
[03:42:54] *** Quits: Elw3 (~Elw3@dynamic-002-247-243-056.2.247.pool.telefonica.de) (Quit: Leaving)
[03:45:15] *** Joins: Psyraven (~Psyraven@p79032f3f.tokynt01.ap.so-net.ne.jp)
[04:09:55] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 256 seconds)
[04:11:40] *** Joins: Erutuon (~Erutuon@user/erutuon)
[04:13:00] <_xor> Yup, I meant valid strings, which can't always be the case.
[04:13:41] <_xor> jaawerth: Hmm, that's what I tried but it was returning nil. Mind you though, I'm doing this in NeoVim, so comes with a grain of salt.
[04:14:45] <_xor> jaawerth: The other thing I was wondering is if `local x, y, z = table.unpack(data)` would assign the keys x, y, z in in the data table to those local variables or if it would just go by index.
[04:15:24] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:65d3:f1ae:4dc5:b40a) (Ping timeout: 252 seconds)
[04:16:48] <jaawerth> _xor: no, it's purely positional and not unique to unpack; it applie the same to  multiple returns from any function. neovim is still just luajit, so it shouldn't make a difference
[04:17:38] <_xor> That's what I was thinking, but figured I had it wrong since it was returning nil.
[04:17:44] <_xor> I'll have to re-examine this a bit later.
[04:17:51] <jaawerth> have a code snippet?
[04:18:03] <furq> unpack won't do anything with keys x, y, and z
[04:18:17] <furq> it only works on arrays
[04:18:20] <jaawerth> fwiw this does exactly what i expect in nvim: `:lua do local a, b = unpack({1, 2}) print(vim.inspect {a=a,b=b}) end`
[04:19:33] <jaawerth> _xor: and what furq  said is likely relevant to your nil. since tables can be used as both an array and a dictionary, what unpack returns is defined by the first N consecutive integer keys with non-nil values
[04:19:55] <_xor> I was getting the snippet prepared, but yeah...that's likely what's going on.
[04:20:26] <jaawerth> the first integer key with a nil value is going to be considered the end of the array portion
[04:21:12] <_xor> Basically, I have a function that takes a table arg. Merges that table with defaults using extend to fill in missing values, then runs validate on it. Once those pass, I wanted to unpack the table into local scope for easier referencing.
[04:21:15] <_xor> No big deal though.
[04:21:42] <_xor> It makes sense why it wouldn't work.
[04:22:48] <_xor> I'm still fairly new to lua, but I do like it.
[04:26:47] <jaawerth> the minimalism takes some getting used to, but I see it as strength in the long run. helps keep it tiny and thus easy to embed. though I primarily do fennel (which incidentally does have k/v and array destructuring on top of lua's multi-val assignments) and treat lua more as a compilation target, but that's a matter of taste
[04:27:58] <aquanight> function slice(table, ...) local argc, argv = #..., { ... }; local r = {}; for i = 1,argc do r[i] = table[argv[i]]; end; return table.unpack(r); end # off the cuff attempt, been a while
[04:28:15] <aquanight> then: local x, y, z = slice(table, "x", "y", "z");
[04:28:16] <_xor> Yeah, whenever I've googled things and see stuff like "Why doesn't lua support X? That's stupid!"
[04:28:31] <_xor> It makes me think, "Uh...probably because it would run rough-shot over embedded constraints?"
[04:28:57] <_xor> (I used to write embedded code years ago, so its been a while, but I still understand where those constraints might come from)
[04:29:45] <_xor> aquanight: Ah, good point. Could just explicitly implement a short function to take keys and return an array of them.
[04:30:30] <furq> #... doesn't exist and also you could just use table.pack for that now
[04:30:35] <furq> and also it's -- for comments
[04:31:10] <technomancy> people get trained by other languages that adding dependencies must be a tremendous pain in the ass but like ... `cp ~/src/lume/lume.lua lib/` and you're done.
[04:31:20] <technomancy> who cares if map and reduce are in another file instead of built-in
[04:32:42] <furq> function slice(t, ...) local out = {} for i = 1, select("#", ...) do out[i] = t[select(i, ...)] end return table.unpack(out) end
[04:32:47] <jaawerth> nvim also already has `vim.tbl_map`, `vim.table_filter`, and a number of other table util functions for this kind of thing
[04:32:55] <jaawerth> slice too, I think
[04:33:19] <technomancy> this isn't like npm where your colors lib is suddenly going to betray you one day
[04:33:34] <jaawerth> shots fired lol
[04:33:48] <furq> luarocks is sort of exactly like that
[04:33:57] <jaawerth> it's exactly exactly like that
[04:34:05] <furq> other than that nobody is stupid enough to actually use left-pad.lua
[04:34:11] <technomancy> furq: yeah but you can just ... not use luarocks
[04:34:14] <technomancy> it's really easy
[04:34:16] <furq> that too
[04:34:48] <furq> last time i tried to use npm was on a vps with not much memory 
[04:34:52] <jaawerth> oh wait is the slice an unrelated thing to the earlier question?
[04:35:07] <furq> i was trying to install a package that basically just does an http post
[04:35:20] <furq> it tried to install 286 packages and oom killed itself and also left like 80MB of stuff in /tmp
[04:35:28] <_xor> I usually try to audit any dependencies I'm considering introducing, which is great because then the effort required there makes me weigh it against the effort of just implementing the needed subset myself.
[04:35:30] <furq> so next time it ran it would get oom killed even quicker
[04:35:32] <furq> that's efficiency
[04:35:57] <jaawerth> ugh, I don't want to talk about npm, I have to deal with it regularly
[04:36:09] <_xor> Me too.
[04:36:13] <furq> i don't
[04:36:16] <furq> i feel pretty good about it
[04:36:18] <_xor> I'm mainly a TypeScript/Kotlin/Swift/Rust coder these days.
[04:36:35] <_xor> Working with lua because I decided to centralize my main work into nvim.
[04:36:46] <technomancy> I've literally never used npm so all I know is from the horror stories I hear
[04:37:07] <_xor> Dependency managers are tools, just like anything else.
[04:37:18] <furq> the last time i used it i ended up writing the program i was trying to install from scratch
[04:37:29] <_xor> NPM gets it because it's so popular and because the time/value cost of entry for development there is pretty low.
[04:37:59] <_xor> ...but I mean the malicious code thing isn't really unique to NPM. It can (and has) happened with PyPI, Gems, etc.
[04:38:05] <furq> package managers are only as good as their repos
[04:38:09] <technomancy> it can't happen suddenly in a good system
[04:38:18] <furq> unfortunately for npm its repos are compiled by every javascript developer in the world
[04:38:31] <technomancy> it can't be like ... one day the lib is fine and then one day it's gone rogue and breaking your build
[04:38:41] <_xor> The policies implemented by npmjs were certainly a pita.
[04:38:43] <furq> that's most language specific package managers
[04:39:00] <furq> last i checked luarocks's policy would allow that
[04:39:08] <_xor> Like not having immutable artifact versions, testing releases.
[04:39:18] <_xor> I mean there was one release of npm a while back that basically ran rm -rf / by mistake.
[04:39:35] <_xor> It was a corner case for sure and was pulled within 24 hours or whatever, but still...that's pretty egrigious.
[04:39:38] <jaawerth> npm at the very least won't allow republishing an existing version of something, so you can't get *completely* rugpulled if you version-pin and do controlled updates
[04:39:52] <jaawerth> but people rarely do that
[04:39:56] <_xor> I run proxy repos internally for various reasons, that being one of them.
[04:39:58] <furq> is that one of the things they had to publicly change policy over
[04:40:03] <furq> i vaguely remember something like that
[04:40:22] <jaawerth> I think what happened with left-pad was the guy rage-quit and deleted the entire packag, which at the time let someone else grab the name
[04:40:37] <jaawerth> which they went on to make sure could not happen again
[04:40:43] <_xor> The guy that originally created that package was..."special" heh.
[04:41:03] <_xor> He literally had 100+ packages that were like 1 line of code each.
[04:41:23] <_xor> Then he was parotting the whole, "I have over 2,000,000,000 installs of my VERY popular packages used world-wide!!!"
[04:42:09] <_xor> But yeah, the barrier to entry there is lower (IMO) and you get poeple who want to add a dependency and call a function to implement a non-trivial amount of functionality into their project.
[04:42:44] <_xor> Short-terms gains sure, but the technical debt builds up when you find yourself having to babysit the dependency and also bend it to do what you want. Not to mention the aformentioned malicious releases stuff.
[04:50:29] <jaawerth> _xor: anyway, quickest way to do what you want is probably to write a helper like `function key_vals(keys, t) return unpack(vim.tbl_map(function(k) return t[k] end, keys)) end`, so you can do `local x, y, z= key_vals({'x','y','z'}, t)`
[04:52:09] <jaawerth> well if it were me I'd probably write it without the `unpack` and call it `pick` and then just use unpack on it when invoking it
[04:52:25] *** Quits: doorzan (~doorzan@user/doorzan) (Quit: Leaving)
[04:52:32] <jaawerth> or use composition if you'd going to do the unpack form a lot
[04:53:39] <jaawerth> oh if youdid need slice it's `vim.list_slice`, wasn't sure where those slice impls above were coming from though
[05:00:44] *** Joins: ratchetfreak (~ratchetfr@d8d8779d9.access.telenet.be)
[05:04:12] *** Quits: ratchetfreak_ (~ratchetfr@ptr-82rtos1siuzsypwsr90.18120a2.ip6.access.telenet.be) (Ping timeout: 240 seconds)
[05:30:17] *** Quits: dre (~dre@2001:8003:c932:c301:2079:4593:1556:be9c) (Quit: Leaving)
[05:41:40] *** Quits: syabro (~syabro@91.226.191.247) (Remote host closed the connection)
[05:56:08] *** Quits: ratchetfreak (~ratchetfr@d8d8779d9.access.telenet.be) (Read error: Connection reset by peer)
[06:09:13] <_xor> Sweet, just jotted notes down on the above comment. Will take a look here in a bit.
[06:09:17] <_xor> Thanks! :)
[06:16:00] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Quit: brb)
[06:23:32] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[06:31:22] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[06:31:44] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:27:38] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 272 seconds)
[07:44:28] *** Joins: Psyraven_ (~Psyraven@p79032f3f.tokynt01.ap.so-net.ne.jp)
[07:45:49] *** Quits: Psyraven (~Psyraven@p79032f3f.tokynt01.ap.so-net.ne.jp) (Ping timeout: 256 seconds)
[08:02:01] *** Joins: dre (~dre@2001:8003:c932:c301:2079:4593:1556:be9c)
[08:10:07] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-f007-0334-e7f5-e312.res6.spectrum.com) (Read error: Connection reset by peer)
[08:23:36] *** Joins: Erutuon (~Erutuon@user/erutuon)
[08:41:52] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[08:51:53] *** Quits: eroux (~eroux@102-65-81-186.ftth.web.africa) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:01:03] *** Joins: dvx (~dvx@5.181.92.64)
[09:02:50] *** Joins: password (~password@user/password2)
[09:19:33] *** Joins: syabro (~syabro@91.226.191.247)
[09:41:48] *** Quits: asdflkj_sh (asdflkj@bsdforall.org) (Ping timeout: 240 seconds)
[09:42:54] *** Joins: asdflkj_sh (asdflkj@bsdforall.org)
[09:43:18] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[09:52:10] *** Joins: eroux (~eroux@102-65-81-186.ftth.web.africa)
[09:52:48] *** Quits: _ArRay_ (~ArRay_@user/array/x-1947090) (Remote host closed the connection)
[09:53:13] *** Joins: _ArRay_ (~ArRay_@user/array/x-1947090)
[10:00:54] *** Quits: syabro (~syabro@91.226.191.247) (Ping timeout: 272 seconds)
[10:14:34] *** Quits: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469) (Remote host closed the connection)
[10:14:37] *** Quits: Inoperable (~PLAYER_1@fancydata.science) (Quit: All your buffer are belong to us!)
[10:16:13] *** Joins: Darkcoal (~user@user/Darkcoal)
[10:21:48] *** Quits: dre (~dre@2001:8003:c932:c301:2079:4593:1556:be9c) (Ping timeout: 240 seconds)
[10:23:06] *** Joins: Inoperable (~PLAYER_1@fancydata.science)
[10:25:59] *** Joins: chomwitt (~chomwitt@2a02:587:dc15:800:87d7:2f36:90bc:5b10)
[10:30:11] *** Joins: netlynx (~jan@94-226-69-15.access.telenet.be)
[10:33:57] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[10:45:00] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 240 seconds)
[10:45:26] *** Joins: Darkcoal (~user@user/Darkcoal)
[10:45:54] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[10:46:08] *** Joins: JanC (~janc@user/janc)
[10:50:21] *** Joins: fling (~fling@user/fling)
[11:07:30] *** Joins: dre (~dre@2001:8003:c932:c301:f5ca:6748:5b2:4153)
[11:32:53] *** Joins: chxybin (~chxybin@111.46.56.251)
[11:33:53] *** Quits: dre (~dre@2001:8003:c932:c301:f5ca:6748:5b2:4153) (Quit: Leaving)
[11:40:34] *** Joins: ratchetfreak (~ratchetfr@d8d8779d9.access.telenet.be)
[11:56:21] *** Joins: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469)
[12:15:48] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 240 seconds)
[12:18:06] *** Joins: Darkcoal (~user@user/Darkcoal)
[12:34:13] *** Quits: chxybin (~chxybin@111.46.56.251) (Quit: Leaving)
[12:40:57] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 240 seconds)
[12:43:05] *** Joins: Darkcoal (~user@user/Darkcoal)
[13:28:39] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 256 seconds)
[13:30:40] *** Joins: Darkcoal (~user@user/Darkcoal)
[13:35:32] <kakolainen[m]> function slice(t, k, ...) if k~=nil then return t[k], slice(t, ...) end end
[13:38:01] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[13:43:26] *** Quits: saltrocklamp[m] (~hexology@user/hexology) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: YourOnlyOne[m] (~laibcoms@user/laibcoms) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: spanwysm[m] (~spanwysm@2001:470:69fc:105::e0a) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: euphrates[m] (~euphrates@2001:470:69fc:105::fbb5) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: a12l (~a12l@2001:470:69fc:105::c08c) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: lnxw37d4[m] (~lnxw37d4m@2001:470:69fc:105::15fc) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: kakolainen[m] (~kakolaine@2001:470:69fc:105::34f9) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: tochigi (~tochigi@user/tochigi) (Quit: Bridge terminating on SIGTERM)
[13:43:27] *** Quits: cody271[m] (~cody271ma@2001:470:69fc:105::1:908d) (Quit: Bridge terminating on SIGTERM)
[13:43:29] *** Quits: canardo (~canardo@2001:470:69fc:105::e110) (Quit: Bridge terminating on SIGTERM)
[13:43:30] *** Quits: slact[m] (~slact@2001:470:69fc:105::1:5ee3) (Quit: Bridge terminating on SIGTERM)
[13:46:40] *** Joins: tochigi (~tochigi@user/tochigi)
[13:48:57] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 240 seconds)
[13:51:16] *** Joins: Darkcoal (~user@user/Darkcoal)
[13:57:26] *** Joins: spanwysm[m] (~spanwysm@2001:470:69fc:105::e0a)
[13:57:26] *** Joins: lnxw37d4[m] (~lnxw37d4m@2001:470:69fc:105::15fc)
[13:57:26] *** Joins: kakolainen[m] (~kakolaine@2001:470:69fc:105::34f9)
[13:57:26] *** Joins: canardo (~canardo@2001:470:69fc:105::e110)
[13:57:26] *** Joins: saltrocklamp[m] (~hexology@user/hexology)
[13:57:26] *** Joins: YourOnlyOne[m] (~laibcoms@user/laibcoms)
[13:57:26] *** Joins: slact[m] (~slact@2001:470:69fc:105::1:5ee3)
[13:57:26] *** Joins: a12l (~a12l@2001:470:69fc:105::c08c)
[13:57:26] *** Joins: euphrates[m] (~euphrates@2001:470:69fc:105::fbb5)
[13:57:38] *** Joins: cody271[m] (~cody271ma@2001:470:69fc:105::1:908d)
[14:01:00] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 240 seconds)
[14:04:23] *** Joins: Erutuon (~Erutuon@user/erutuon)
[14:06:37] *** Quits: fcr (~fran@r167-60-16-70.dialup.adsl.anteldata.net.uy) (Ping timeout: 256 seconds)
[14:13:48] *** Quits: chomwitt (~chomwitt@2a02:587:dc15:800:87d7:2f36:90bc:5b10) (Ping timeout: 252 seconds)
[14:14:04] *** Joins: fcr (~fran@r186-48-120-226.dialup.adsl.anteldata.net.uy)
[14:31:24] *** Quits: password (~password@user/password2) (Ping timeout: 240 seconds)
[14:49:58] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 260 seconds)
[14:50:29] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[15:03:30] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[15:27:00] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[15:45:00] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[16:04:03] *** Quits: eroux (~eroux@102-65-81-186.ftth.web.africa) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:17:35] *** Quits: _ArRay_ (~ArRay_@user/array/x-1947090) (Ping timeout: 240 seconds)
[16:20:17] *** Joins: epony (epony@user/epony)
[16:21:15] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 256 seconds)
[16:23:22] *** Joins: Darkcoal (~user@user/Darkcoal)
[16:35:54] *** Joins: eroux (~eroux@102-65-81-186.ftth.web.africa)
[16:54:56] *** Joins: ArRay_ (~ArRay_@user/array/x-1947090)
[17:03:00] *** Quits: Inoperable (~PLAYER_1@fancydata.science) (Read error: Connection reset by peer)
[17:07:25] *** Joins: Inoperable (~PLAYER_1@fancydata.science)
[17:09:00] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:e029:79e4:6493:91cc)
[17:09:00] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:e029:79e4:6493:91cc) (Changing host)
[17:09:00] *** Joins: skapata (~Skapata@user/skapata)
[17:16:00] *** Quits: Inoperable (~PLAYER_1@fancydata.science) (Ping timeout: 272 seconds)
[17:29:49] *** Joins: chomwitt (~chomwitt@2a02:587:dc15:800:4308:c5a2:39b7:2fb7)
[17:33:18] *** Joins: Inoperable (~PLAYER_1@fancydata.science)
[17:34:24] *** Joins: cr1901 (~cr1901@2601:8d:8600:911:1c67:d9a9:1377:a510)
[17:51:16] *** Joins: Elw3 (~Elw3@dynamic-002-247-241-086.2.247.pool.telefonica.de)
[18:25:58] *** Quits: chomwitt (~chomwitt@2a02:587:dc15:800:4308:c5a2:39b7:2fb7) (Ping timeout: 250 seconds)
[18:31:46] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[18:32:18] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Client Quit)
[18:32:34] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[18:37:52] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-6450-72b9-8041-2134.res6.spectrum.com)
[18:45:53] *** Joins: Guest39 (~Guest39@188.213.139.43)
[18:46:31] *** Quits: Guest39 (~Guest39@188.213.139.43) (Client Quit)
[18:50:12] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[19:03:58] *** Joins: syabro (~syabro@91.226.191.247)
[19:04:32] *** Quits: syabro (~syabro@91.226.191.247) (Remote host closed the connection)
[19:04:49] *** Joins: syabro (~syabro@91.226.191.247)
[19:07:00] *** Quits: syabro (~syabro@91.226.191.247) (Remote host closed the connection)
[19:07:15] *** Joins: syabro (~syabro@91.226.191.247)
[19:10:50] *** Quits: syabro (~syabro@91.226.191.247) (Remote host closed the connection)
[19:11:32] *** Joins: syabro (~syabro@91.226.191.247)
[19:12:36] *** Quits: asdflkj_sh (asdflkj@bsdforall.org) (Ping timeout: 240 seconds)
[19:13:38] *** Joins: asdflkj_sh (asdflkj@bsdforall.org)
[19:34:38] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:f469:9f71:28b3:5d2a)
[19:40:39] *** Quits: eroux (~eroux@102-65-81-186.ftth.web.africa) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:03:46] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:f469:9f71:28b3:5d2a) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:18:41] *** Joins: barkle (kirk@kirk.shelltalk.net)
[20:18:41] *** Joins: rgrinberg (~textual@2806:101e:7:7728:2daa:98a5:3fd0:1781)
[20:19:40] <barkle> hey i'm having trouble with lua 5.4 as a require for a local file is not looked up in LUA_PATH and not in the current directory
[20:46:36] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[20:49:55] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[20:57:02] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 272 seconds)
[21:01:54] *** Quits: rgrinberg (~textual@2806:101e:7:7728:2daa:98a5:3fd0:1781) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:02:02] <J_Darnley> barkle: can you explain a bit better?  I don't recall require changing in 5.4
[21:02:39] <barkle> ah never mind I managed to fix it
[21:03:02] <barkle> it was using a subdirectory dot notation require but only needed the file from the same directory
[21:04:24] *** Joins: rgrinberg (~textual@2806:101e:7:7728:2daa:98a5:3fd0:1781)
[21:04:46] *** Joins: VadimP (~VadimP@dhcp-077-249-010-033.chello.nl)
[21:16:29] *** Quits: rgrinberg (~textual@2806:101e:7:7728:2daa:98a5:3fd0:1781) (Remote host closed the connection)
[21:17:13] *** Joins: rgrinberg (~textual@2806:101e:7:7728:2daa:98a5:3fd0:1781)
[21:40:37] *** Joins: ratchetfreak_ (~ratchetfr@d8d8779d9.access.telenet.be)
[21:46:12] *** Quits: syabro (~syabro@91.226.191.247) (Ping timeout: 240 seconds)
[21:47:19] *** Joins: Tricycle (~CGI273@lfbn-idf1-1-1376-196.w90-79.abo.wanadoo.fr)
[21:53:00] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 240 seconds)
[22:48:36] *** Quits: Psyraven_ (~Psyraven@p79032f3f.tokynt01.ap.so-net.ne.jp) (Ping timeout: 240 seconds)
[22:55:37] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[23:03:02] *** Quits: rgrinberg (~textual@2806:101e:7:7728:2daa:98a5:3fd0:1781) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:03:14] *** Quits: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469) (Read error: Connection reset by peer)
[23:03:32] *** Joins: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469)
[23:06:11] *** Joins: Erutuon (~Erutuon@user/erutuon)
[23:08:15] *** Quits: VadimP (~VadimP@dhcp-077-249-010-033.chello.nl) (Quit: Client closed)
[23:11:44] *** Quits: dvx (~dvx@5.181.92.64) (Quit: dvx)
[23:23:06] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[23:29:07] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[23:33:52] <lagash> What's a good SQLite binding library? The official SQLite one I've used before, but https://luarocks.org/modules/tami5/sqlite looks interesting, especially since I'm using LuaJIT anyways..
[23:56:23] *** Joins: magla (~gelignite@55d44f7e.access.ecotel.net)
