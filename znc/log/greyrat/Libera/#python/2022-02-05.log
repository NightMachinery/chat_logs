[00:00:37] <stewie925> SnoopJ: true, when I saw apply() somehow I think map function
[00:00:39] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[00:00:46] <SnoopJ> that's pretty close to what it is
[00:01:01] <stewie925> but pandas has a separate map function too
[00:01:23] <SnoopJ> stewie925, any time you end up with a Python loop over a DataFrame/Series/ndarray, you are almost certainly going slower (like orders of magnitude slower) than you could.
[00:01:50] <aphysically> okay feel free to ping me when you find anything out bjs
[00:01:52] <SnoopJ> *Sometimes* it's not a big deal, but there's a lot of code out there using this and not being aware of how much speed they're giving up
[00:02:00] * stewie925 nods in agreement with SnoopJ
[00:02:02] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[00:02:07] <SnoopJ> my problem is I think more to do with how people use it than with the function itself
[00:02:23] <bjs> aphysically: sometimes people have questions that seem like I should be able to answer but get totally stumped and have no idea what Python is doing. This is one of them :P
[00:02:37] <bjs> Sorry
[00:02:45] <aphysically> no problem; it's interesting
[00:02:45] <stewie925> SnoopJ: so you use pandas and numpy at your work?
[00:02:54] *** Joins: c4017w__ (~c4017@209.52.68.8)
[00:02:56] <aphysically> I'm quite sure this is *not* what that testcase in cpython thought they were testing though
[00:03:21] <bjs> aphysically: it seems highly likely :P
[00:03:21] <stewie925> SnoopJ: promise I'm not going to drill you on what you do specifically  lol
[00:03:22] *** Quits: tuskkk____ (uid18470@id-18470.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[00:03:37] *** Quits: LimeOn (~user@user/limeon) (Ping timeout: 240 seconds)
[00:03:46] <SnoopJ> stewie925, we use both of them, numpy much moreso than pandas. My familiarity with them is mostly from grad school, though. I used a *lot* of numpy :)
[00:03:49] *** Joins: humbertowoody (~humbertow@187.202.198.64)
[00:04:03] *** Joins: ice9 (~ice9@user/ice9)
[00:04:47] *** Joins: LimeOn (~user@user/limeon)
[00:05:14] * SnoopJ hopes to implement a better set of bindings between an internal array format and ndarray One Day™
[00:05:37] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Ping timeout: 240 seconds)
[00:05:41] <stewie925> SnoopJ:  thanks for sharing that:) .    I did a tutorial on  numpy but I already forgotten it - but I know numpy deals a lot with "shudder" arrays
[00:05:42] <Repiphany> I've never really seen the appeal of pandas either fwiw, always got by just with numpy (for linear algebra and data analysis type stuff)
[00:05:55] <InPhase> They have a very different purpose.
[00:06:06] <SnoopJ> Repiphany, I think of it as more of a "data multitool"
[00:06:08] <stewie925> Do I need to be good in math to use numpy?
[00:06:15] <SnoopJ> stewie925, you're already using it if you're using pandas ;)
[00:06:29] <InPhase> numpy is for array data, specializing in numerical work.  pandas is for selection and basic operations on tabular data.
[00:06:31] <SnoopJ> pandas.Series is basically numpy.ndarray with some glitter glued onto it
[00:06:31] <stewie925> ahh hehehe SnoopJ
[00:06:39] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[00:06:56] <stewie925> InPhase: yeah, thats what I am getting from all these conversations too :)
[00:07:04] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[00:07:20] <grym> composition!
[00:07:25] <SnoopJ> pandas definitely does some tricks that would be agonizing in numpy: MultiIndex comes to mind
[00:07:33] <SnoopJ> and I guess indexes in general, numpy doesn't have this concept
[00:07:51] <stewie925> do you do ETL in your work, SnoopJ?  because it seems like numpy and pandas go hand-in-hand with ETL jobs
[00:07:54] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[00:08:03] <InPhase> For my work for example we have experimental events described in pandas tables, and EEG signal information in multidimensional numpy arrays.  Different purpose, working together.
[00:08:06] *** Joins: jrua (~jrua@79.97.146.200)
[00:08:21] <SnoopJ> stewie925, not really, but we do similar things that you wouldn't call ETL
[00:08:46] <stewie925> SnoopJ oh good....
[00:08:57] <grym> InPhase: and noise. lots, and lots, of noise
[00:09:10] <lantech19446> I've imported requests and json first I set a variable using requests.get and the next line I'm using the json module however it's still trying to use requests module is there any way to defeat this?
[00:09:14] *** Joins: dme86 (~dan@user/dan86)
[00:09:20] <InPhase> grym: We store that out in the hall.
[00:09:25] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc)
[00:10:28] <grym> InPhase: "but it keeps oozing back in!"
[00:11:25] <stewie925> so for indexing use pandas, and numpy is helpful for everything else :D
[00:11:30] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[00:11:57] <SnoopJ> I would say "for selecting data by some means other than using integer positions" but close enough
[00:12:40] <SnoopJ> or flip it on its head: if you want to do arithmetic on lots of numbers and go really fast, numpy; if you want more than that, probably pandas
[00:12:40] *** Quits: tatarqa (~kli@ip-89-177-122-45.net.upcbroadband.cz) (Quit: Leaving)
[00:13:10] <stewie925> I am planning to tackle this - https://github.com/guipsamora/pandas_exercises -  after I am done with my pandas lessons from Corey Schafer
[00:13:24] <SnoopJ> but like I said, if you learn one of these, you'll be in the neighborhood of the other one, so don't sweat it too badly
[00:13:31] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc) (Ping timeout: 250 seconds)
[00:13:49] *** Quits: aw1231 (~alan@155.58.3.30) (Quit: Leaving)
[00:13:57] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 250 seconds)
[00:14:05] <stewie925> SnoopJ: thank you - I hope python job market is wide  open for pandas and numpy
[00:15:10] <stewie925> I see a lot of data science jobs
[00:15:35] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[00:15:35] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[00:15:35] *** Joins: JordiGH (~jordi@user/jordigh)
[00:16:02] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 260 seconds)
[00:16:03] *** Quits: Alexer (~alexer@alexer.net) (Ping timeout: 256 seconds)
[00:16:33] <aphysically> bjs: the thing that's run at runtime when subclass X is type(X)(name, bases, ns)?
[00:18:01] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[00:18:37] *** Quits: capn (~capn@user/capn) (Remote host closed the connection)
[00:18:57] *** Joins: capn (~capn@user/capn)
[00:19:33] <bjs> aphysically: `class Name(*bases, **kwargs): <namespace>` is basically the same as going type("Name", bases, namespace, **kwargs)`
[00:19:34] *** Quits: vurr (~seymon@82.131.10.22.cable.starman.ee) (Remote host closed the connection)
[00:20:21] *** Quits: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[00:20:55] <aphysically> but that delegates to the metaclass of the base, while type(b)("D", (b,), {}) doesn't, I Think
[00:21:26] <aphysically> and this has to do with weird internals around picking metaclass
[00:21:51] <SnoopJ> stewie925, there seems to be no shortage of work that uses those libraries, at any rate
[00:24:37] *** Joins: Algernon666 (~Algernon6@2a01:e0a:511:6ce0:5c9c:f8b7:dcfc:e751)
[00:24:52] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[00:25:07] <aiena> freefall: great :)
[00:25:14] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10e3:76f:5108:e908:172d:c5d1)
[00:25:47] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[00:25:52] <bjs> aphysically: see https://docs.python.org/3/reference/datamodel.html#determining-the-appropriate-metaclass
[00:27:14] <bjs> aphysically: so what must be happening is that it's going type(b) to work out the metaclass of the base class and doesn't check the bases are actually types.  then it naively goes type(b)(name, bases, namespace)
[00:27:37] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:27:44] <aphysically> yes
[00:27:56] *** Joins: dme86 (~dan@user/dan86)
[00:29:11] <bjs> aphysically: confusingly https://docs.python.org/3/reference/compound_stmts.html#class-definitions says that "so each item in the list should evaluate to a class object " but Python does not enforce this
[00:29:16] <stewie925> SnoopJ: yeah  fingers crossed.
[00:29:19] *** Joins: duuude (~user@user/duuude)
[00:29:25] *** Quits: Algernon666 (~Algernon6@2a01:e0a:511:6ce0:5c9c:f8b7:dcfc:e751) (Ping timeout: 256 seconds)
[00:29:37] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8) (Ping timeout: 240 seconds)
[00:30:29] *** Joins: greedom (~greedom@p200300de670cc900c869bde1e7c9d04d.dip0.t-ipconnect.de)
[00:30:46] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[00:31:27] <aphysically> bjs: I think the correct way to fix this test case is to define an __mro_entries__ on TypeVar that raises a TypeError
[00:31:55] *** Joins: thiras (~thiras@user/thiras)
[00:33:03] *** Joins: jcalla (~jcalla@cpe-75-189-211-206.nc.res.rr.com)
[00:33:10] <bjs> aphysically: sort of ironically in the end the unit test probably did correctly check whether it allows subclassing, because indeed it would fail with a TypeError and that prevents you inherting it
[00:33:30] <bjs> is there a way to making a TypeVar that *does* let you "subclass" it?  That might be an interesting case :P
[00:34:08] <aphysically> if you add *args to the __init__ in your toy function it actually *doesn't* fail with a TypeError
[00:34:10] <aphysically> :)
[00:34:22] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[00:34:32] <aphysically> toy class, I mean
[00:34:36] <bjs> aphysically: yeah I did that, and I notice it gets the same arguments type() would
[00:34:44] <bjs> which is a big hint as to what is happening
[00:34:51] <aphysically> yeah
[00:34:52] <bjs> (with `self` being a new instance)
[00:35:02] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc)
[00:35:22] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[00:35:30] *** Joins: ST47 (~ST47@wikimedia/st47)
[00:35:54] *** Quits: mdemo (~mdemo@user/mdemo22) (Quit: The Lounge - https://thelounge.github.io)
[00:36:41] *** Quits: waynew (~wayne@user/waynew) (Ping timeout: 256 seconds)
[00:38:23] *** Joins: waynew (~wayne@user/waynew)
[00:38:48] *** Joins: Masterphi (~Masterphi@user/masterphi)
[00:39:46] <hodapp> bizarre... just ran into a call where foo.call(bar=..., baz=...) is fine, but kw={"bar": ..., "baz": ...}; foo.call(**kw) is not
[00:41:12] <ChrisWarrick> hodapp: what happens in the second example?
[00:42:21] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[00:43:43] <aphysically> bjs: well, now I have new cpython patches to right (:
[00:44:13] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[00:44:23] *** Quits: auk (auk@gateway/vpn/protonvpn/auk) (Ping timeout: 256 seconds)
[00:46:04] <SnoopJ> aphysically, write, or right? 😬
[00:46:35] <bjs> SnoopJ: hopefully both!
[00:46:37] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[00:46:46] <SnoopJ> after quick glance at scrollback, perhaps so!
[00:46:46] <bjs> we wouldn't want aphysically wronging a patch :P
[00:46:55] <aphysically> write :)
[00:47:08] <SnoopJ> bjs, I only ask because one of their submissions was addressing something that slipped by review in another :)
[00:47:29] <aphysically> O__O
[00:47:41] <SnoopJ> to be clear: that reflects more on the review than it does on them
[00:48:35] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:85dd:181d:cfcf:3433) (Quit: Client closed)
[00:49:04] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[00:50:06] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[00:51:27] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[00:52:26] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[00:52:43] <aphysically> found a bugtypo in typing.py
[00:52:54] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 260 seconds)
[00:52:58] <aphysically> it's a typo that's kind of like a bug but has no runtime significance; https://github.com/python/cpython/blob/bf95ff91f2c1fc5a57190491f9ccdc63458b089e/Lib/typing.py#L352
[00:53:02] <aphysically> this should be cls and not self
[00:53:13] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[00:53:30] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[00:53:37] *** Quits: loofy (~loofy@ip70-191-113-247.cl.ri.cox.net) (Quit: WeeChat 3.0)
[00:53:47] *** Joins: auk (auk@gateway/vpn/protonvpn/auk)
[00:54:04] <aphysically> i can probably make a PR for this as a typo fix but I will ruin my streak of no typo fixes >:L
[00:54:32] *** Joins: dme86 (~dan@user/dan86)
[00:54:43] *** Joins: loofy (~loofy@ip70-191-113-247.cl.ri.cox.net)
[00:54:51] *** Quits: harpia (~harpia@2804:2aec:205:4600:1f64:3c12:1a0e:3b09) (Quit: harpia)
[00:54:56] *** Joins: Celeo (~Celeo@user/celeo)
[00:55:28] *** Joins: bluedust (~bluedust@117.193.122.44)
[00:55:37] *** Quits: duuude (~user@user/duuude) (Ping timeout: 240 seconds)
[00:55:43] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[00:55:51] *** Quits: elias117 (~elias117@user/elias117) (Read error: Connection reset by peer)
[00:56:19] *** Quits: maxzor (~maxzor@2a01cb04054faa00ecc4f4c39ad96c0f.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[00:56:32] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[00:56:36] *** Joins: maxzor (~maxzor@2a01cb04054faa00ecc4f4c39ad96c0f.ipv6.abo.wanadoo.fr)
[00:57:55] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:58:57] *** Joins: harpia (~harpia@143.208.84.235)
[00:59:41] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[00:59:52] *** Joins: SOMBRIO (~SOMBRIO@177.137.113.66)
[01:00:01] *** Quits: maxzor_ (~maxzor@2a01cb04054faa0098bd91394fed2f26.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[01:00:05] *** Joins: maxzor__ (~maxzor@abordeaux-652-1-2-77.w90-16.abo.wanadoo.fr)
[01:00:15] *** Quits: luva (~luva@45.141.152.53) (Ping timeout: 256 seconds)
[01:00:49] *** Quits: panella32 (~panella32@92.119.19.155) (Ping timeout: 256 seconds)
[01:01:09] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 256 seconds)
[01:01:32] *** Joins: luva (~luva@37.120.197.54)
[01:03:24] *** Joins: c4017w_ (~c4017@209.52.68.8)
[01:03:48] *** Joins: ice99 (~ice9@user/ice9)
[01:03:58] *** Quits: ice9 (~ice9@user/ice9) (Read error: Connection reset by peer)
[01:04:17] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc) (Ping timeout: 240 seconds)
[01:04:17] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 240 seconds)
[01:04:37] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[01:05:41] <aphysically> :clap: :clap: found a bug in typing.py
[01:07:03] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[01:09:17] *** Quits: redbear (~guy@2601:642:c000:2c38:c75c:dc57:6aeb:26d5) (Ping timeout: 240 seconds)
[01:10:41] *** Quits: f1se4 (~f1se4@213.195.113.45) (Ping timeout: 256 seconds)
[01:12:04] *** Joins: dme86 (~dan@user/dan86)
[01:12:09] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca) (Ping timeout: 256 seconds)
[01:12:22] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Quit: ThePhilgrim)
[01:16:37] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 240 seconds)
[01:16:48] *** Quits: zmotaj (~zmotaj@user/zmotaj) (Ping timeout: 250 seconds)
[01:18:11] *** Joins: duuude (~user@user/duuude)
[01:18:17] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc)
[01:19:51] *** Joins: Barones (~Barones@user/Barones)
[01:20:33] *** Joins: zmotaj (~zmotaj@86.61.81.185)
[01:20:33] *** Quits: zmotaj (~zmotaj@86.61.81.185) (Changing host)
[01:20:33] *** Joins: zmotaj (~zmotaj@user/zmotaj)
[01:24:28] *** Joins: zamba (~marius@5.226.162.54)
[01:25:03] *** Joins: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[01:26:51] *** Joins: bluedust_ (~bluedust@86.106.136.217)
[01:27:27] <patchie> I am using requests_html to do session.get. How can i store that response, for later use? (just so i dont have to query the website several times while testing the code)
[01:27:44] *** Quits: newdimension (~newdimnes@user/newdimension) (Read error: Connection reset by peer)
[01:27:53] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[01:28:07] <grym> patchie: assign the result to a name
[01:28:16] <patchie> can i print the html, for example? and then insert the html to create a new response later on?
[01:28:20] *** Joins: d1cor (~diego@179.63.242.122)
[01:28:26] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10e3:76f:5108:e908:172d:c5d1) (Quit: Leaving)
[01:28:43] <patchie> grym, of couse. but the result is delted when i restart the application, right...
[01:29:04] <grym> patchie: oh, across runs
[01:29:09] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[01:29:09] *** Joins: rms2511 (~rrrrrrrrr@107-138-155-103.lightspeed.rlghnc.sbcglobal.net)
[01:29:25] <patchie> grym: Yep, sorry for not explaining good enough
[01:29:37] *** Quits: bluedust (~bluedust@117.193.122.44) (Ping timeout: 240 seconds)
[01:30:10] *** Joins: elias117 (~elias117@47.55.112.181)
[01:30:10] *** Quits: elias117 (~elias117@47.55.112.181) (Changing host)
[01:30:10] *** Joins: elias117 (~elias117@user/elias117)
[01:30:16] *** Quits: bn_work (uid268505@id-268505.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[01:30:16] <grym> huh, TIL https://requests-cache.readthedocs.io/en/stable/index.html
[01:30:30] *** Joins: bluedust (~bluedust@117.193.122.44)
[01:31:01] <SnoopJ> "better performance" uh oh
[01:31:10] <grym> patchie: https://requests-cache.readthedocs.io/en/stable/user_guide/serializers.html#json-serializer  maybe this?
[01:31:32] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 250 seconds)
[01:31:36] <patchie> and, its for the wrong library? i'm using requests_html and not requests, or doesnt it make sense?
[01:31:59] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[01:32:22] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[01:32:28] <grym> isn't requests_html part of requests? https://docs.python-requests.org/projects/requests-html/en/latest/
[01:32:40] <patchie> might be
[01:32:50] <grym> https://requests-cache.readthedocs.io/en/stable/user_guide/compatibility.html#requests-html
[01:33:47] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[01:34:25] *** Joins: phylaz (~phylaz@82.51-174-55.customer.lyse.net)
[01:34:35] *** Quits: bluedust_ (~bluedust@86.106.136.217) (Ping timeout: 256 seconds)
[01:34:49] *** Quits: luva (~luva@37.120.197.54) (Ping timeout: 256 seconds)
[01:35:30] *** Joins: luva (~luva@45.141.152.54)
[01:35:32] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[01:36:10] *** Quits: parv (~quass@user/parv) (Quit: parv)
[01:37:17] *** Quits: upsala (~zcb@185.213.155.232) (Ping timeout: 240 seconds)
[01:37:57] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 240 seconds)
[01:38:38] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[01:39:35] *** Quits: SaltHillStroller (~SaltHillS@206.223.160.26) (Ping timeout: 256 seconds)
[01:41:07] *** Quits: aslicedbanjo (~aslicedba@host86-160-16-66.range86-160.btcentralplus.com) (Quit: Leaving.)
[01:41:16] *** Quits: skapata (~Skapata@user/skapata) (Quit: Ĝis.)
[01:41:52] *** Quits: blackhats (~blackhats@2602:fccf:1:1050::) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[01:42:32] *** Joins: tofran (~tofran@bl15-47-228.dsl.telepac.pt)
[01:43:34] <lantech19446> I'm trying to list columns from a json file and I'm getting error too many values to unpack expected 3 why would I get an error like that?
[01:44:12] *** Joins: dme86 (~dan@user/dan86)
[01:44:22] <ChrisWarrick> lantech19446: show your code and json data
[01:46:06] <lantech19446> the json data is huge but the code imports it and writes it to its own file so I'm going to let you run it for that instead of making a pastebin of this massive file https://pastebin.com/S6mRyeND
[01:46:38] <nedbat> lantech19446: can you also pastebin the full error report?
[01:47:26] <lantech19446> oo woops sorry forgot that part https://pastebin.com/5C8vpYsd
[01:47:48] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[01:48:23] *** Joins: mittensthekitten (uid539600@id-539600.ilkley.irccloud.com)
[01:48:43] <ChrisWarrick> lantech19446: on line 10, you parse your json and data is a python dict
[01:48:56] <ChrisWarrick> lantech19446: and then on line 11, you pass the parsed output into ijson, which is also a json parser
[01:48:57] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 240 seconds)
[01:49:51] <lantech19446> is there some way to do what I'm doing with ijson in json or vice versa?
[01:49:53] *** Quits: rwbrambler (~Thunderbi@65.183.138.202) (Ping timeout: 256 seconds)
[01:50:05] *** Joins: rwbrambler (~Thunderbi@65.183.138.202)
[01:50:21] <ChrisWarrick> lantech19446: try passing contents.text into ijson?
[01:50:40] *** noyb_ is now known as noyb
[01:50:41] *** Quits: morrigan (~m0rr1gan@user/m0rr1gan) (Ping timeout: 256 seconds)
[01:51:01] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 256 seconds)
[01:51:29] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:51:42] <lantech19446> ok that definitely got rid of the errors, thank you
[01:51:53] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[01:52:06] <lantech19446> interesting that I get an empty result though
[01:53:06] *** Joins: morrigan (~m0rr1gan@user/m0rr1gan)
[01:53:32] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Quit: No Ping reply in 180 seconds.)
[01:53:52] *** Quits: tim__ (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (Quit: Leaving)
[01:53:55] *** Joins: vladoski (~foo@host-79-44-95-82.retail.telecomitalia.it)
[01:54:07] *** Joins: tim__ (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[01:54:26] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[01:54:46] *** Quits: tim__ (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (Client Quit)
[01:55:04] *** Joins: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[01:55:51] *** Quits: noyb (~noyb@cpe-76-176-219-160.san.res.rr.com) (Quit: leaving)
[01:56:00] *** Joins: noyb (~noyb@user/noyb)
[01:57:02] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:2133:2367:93c2:891d)
[01:58:37] *** Quits: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 240 seconds)
[01:59:12] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[01:59:45] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 256 seconds)
[01:59:49] <lantech19446> well I got way further this time than I ever have before but i'm burning my brain out at this point I'm at I think the last steps of what i'm trying to do though
[01:59:57] *** Quits: zebrag (~chris@user/zebrag) (Ping timeout: 240 seconds)
[02:00:01] *** Joins: djapo (~archangel@user/djapo)
[02:00:22] *** Joins: zebrag (~chris@user/zebrag)
[02:00:43] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Read error: Connection reset by peer)
[02:00:50] *** Joins: pyeve____ (~pyeveryth@64-18-153-56.starry-inc.net)
[02:02:14] *** Joins: msek_ (~Username@pd9fb2d9d.dip0.t-ipconnect.de)
[02:02:26] *** Quits: vladoski (~foo@host-79-44-95-82.retail.telecomitalia.it) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:02:49] *** Joins: vladoski (~foo@host-79-44-95-82.retail.telecomitalia.it)
[02:03:54] *** Joins: c4017w__ (~c4017@209.52.68.8)
[02:05:07] *** Quits: pyeve____ (~pyeveryth@64-18-153-56.starry-inc.net) (Client Quit)
[02:06:04] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[02:07:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[02:07:25] <ChrisWarrick> lantech19446: are you sure your query matches the structure of your json data?
[02:07:41] *** Quits: vladoski (~foo@host-79-44-95-82.retail.telecomitalia.it) (Ping timeout: 256 seconds)
[02:09:52] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[02:09:59] <lantech19446> ChrisWarrick: nope
[02:10:00] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:85dd:181d:cfcf:3433)
[02:10:36] <lantech19446> I've tried to do that within my understanding of how json works but I'm either over refining or missing completely
[02:11:12] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[02:11:37] *** Quits: luva (~luva@45.141.152.54) (Ping timeout: 240 seconds)
[02:12:17] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 240 seconds)
[02:13:06] *** Joins: luva (~luva@146.70.62.252)
[02:13:58] *** Joins: SaltHillStroller (~SaltHillS@206.223.160.26)
[02:14:15] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 256 seconds)
[02:15:01] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:15:18] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[02:15:19] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[02:15:57] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:15:59] *** Joins: djhankb (~djhankb@208.113.164.68)
[02:16:29] <patchie> how can i point file:/// to a local file in the current directory? r = session.get('file://......example.html')
[02:16:53] *** Quits: aiena (~aiena@user/aiena) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[02:17:53] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[02:18:07] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[02:20:40] *** Joins: nomic (~nomic@2a00:23c7:ec90:a501:b0:4012:86ae:6130)
[02:20:41] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[02:24:43] <patchie> anyone?
[02:24:55] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[02:25:20] *** Quits: bluedust (~bluedust@117.193.122.44) (Remote host closed the connection)
[02:25:25] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:26:44] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8)
[02:26:59] *** Joins: audiobirb (~audio@user/audio)
[02:27:52] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[02:29:17] *** Joins: dme86 (~dan@user/dan86)
[02:31:41] <patchie> file:filename.html
[02:31:46] <patchie> it seems
[02:32:37] <SnoopJ> patchie, why do you need to make an HTTP request at all for a local file? Why not just load it?
[02:32:42] *** Joins: Viewday115 (~Viewday@user/viewday)
[02:34:07] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[02:34:08] *** Viewday115 is now known as Viewday11
[02:34:27] <SnoopJ> or hm, the scheme is file:// so maybe it's not right to call it an HTTP request, but yea, why not just open the file?
[02:34:38] *** Quits: freefall (~owner@2600:6c40:1600:39ec:5d76:cad6:c1ff:993d) (Read error: Connection reset by peer)
[02:34:39] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[02:35:30] <aphysically> bjs: https://bugs.python.org/issue46642 see also the https://bugs.python.org/issue46644 where I propose to change the thing in typing.py to make this go undiscovered
[02:35:39] <aphysically> where I also then discovered https://bugs.python.org/issue46643
[02:35:47] <aphysically> and https://github.com/python/cpython/pull/31135 at the same time
[02:35:49] <aphysically> busy busy
[02:37:03] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[02:37:19] *** Joins: f1se4 (~f1se4@213.195.113.45)
[02:37:37] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 240 seconds)
[02:39:05] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[02:39:11] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[02:39:35] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[02:41:16] <aphysically> I can probably find additional typing.py bugs caused by the same thing
[02:41:20] <aphysically> I'll look later
[02:41:32] *** Quits: toadtoad (~macbook@cpc101496-gill19-2-0-cust142.20-1.cable.virginm.net) (Quit: toadtoad)
[02:42:01] *** Joins: macbook (~macbook@cpc101496-gill19-2-0-cust142.20-1.cable.virginm.net)
[02:42:17] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[02:43:43] *** Quits: maladaptive_75 (~maladapti@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417) (Ping timeout: 256 seconds)
[02:44:09] *** Quits: macbook (~macbook@cpc101496-gill19-2-0-cust142.20-1.cable.virginm.net) (Client Quit)
[02:44:13] *** Joins: crashrep (~crashrep@user/crashrep)
[02:44:17] *** Joins: kristijonas (~kristijon@88-119-92-43.static.zebra.lt)
[02:44:19] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[02:44:56] *** Quits: Ringtailed-Fox (~BoingBoin@2001:1970:5d2a:c500:e0b9:77e3:d2e6:9927) (Read error: Connection reset by peer)
[02:45:18] *** Quits: jrua (~jrua@79.97.146.200) (Remote host closed the connection)
[02:45:35] *** Joins: Ringtailed-Fox (~BoingBoin@2001:1970:5d2a:c500:fc59:20d8:960a:26cc)
[02:45:43] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[02:46:30] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 250 seconds)
[02:46:48] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[02:48:29] *** Quits: SOMBRIO (~SOMBRIO@177.137.113.66) (Ping timeout: 256 seconds)
[02:48:47] *** Joins: epony (epony@user/epony)
[02:49:18] *** Quits: rms2511 (~rrrrrrrrr@107-138-155-103.lightspeed.rlghnc.sbcglobal.net) (Remote host closed the connection)
[02:49:58] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[02:50:11] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[02:50:16] *** Joins: Guest777 (~Guest777@88.103.7.38)
[02:50:36] *** Joins: aod (~a@186-89-202-246.genericrev.cantv.net)
[02:50:51] *** Joins: dme86 (~dan@user/dan86)
[02:51:27] *** Quits: Fingel (fingel@user/fingel) (Quit: Later!)
[02:53:17] *** Quits: SaltHillStroller (~SaltHillS@206.223.160.26) (Ping timeout: 240 seconds)
[02:53:44] *** Quits: davegarath (~davegarat@net-93-66-98-230.cust.vodafonedsl.it) (Quit: Leaving)
[02:55:07] *** Quits: andreasbuhr (~quassel@p5dcf991b.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:58:17] *** Quits: kristijonas (~kristijon@88-119-92-43.static.zebra.lt) (Ping timeout: 240 seconds)
[02:58:41] *** Quits: ericlee_ (~ericlee@23-120-34-97.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[02:59:05] *** Joins: ericlee_ (~ericlee@2600:1700:5450:41e0::30)
[03:00:03] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[03:00:37] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[03:00:37] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 240 seconds)
[03:01:08] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[03:01:30] *** Joins: kristijonas (~kristijon@88-119-92-43.static.zebra.lt)
[03:01:47] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[03:02:05] *** Quits: ice99 (~ice9@user/ice9) (Ping timeout: 256 seconds)
[03:02:10] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[03:04:24] *** Joins: c4017w_ (~c4017@209.52.68.8)
[03:04:57] *** Joins: dme86 (~dan@user/dan86)
[03:05:45] *** Quits: aod (~a@186-89-202-246.genericrev.cantv.net) (Quit: leaving)
[03:05:57] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[03:06:03] *** Joins: aod (~a@186-89-202-246.genericrev.cantv.net)
[03:06:24] *** Quits: mat001 (~mat001@72.28.108.216) ()
[03:06:33] *** Quits: grnman_ (~grnman@159.89.27.73) (Quit: Lost terminal)
[03:07:17] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 240 seconds)
[03:07:29] *** Joins: impermanence (~impermane@c-75-73-193-204.hsd1.mn.comcast.net)
[03:07:36] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:08:05] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[03:08:19] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[03:09:55] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[03:11:25] *** Joins: jim87 (~jim87@93.55.249.30)
[03:11:30] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[03:12:05] *** Joins: maladaptive_75 (~maladapti@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417)
[03:12:32] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[03:12:39] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Client Quit)
[03:12:57] *** Quits: aod (~a@186-89-202-246.genericrev.cantv.net) (Quit: leaving)
[03:13:49] <jim87> hello! I need to create a library which authenticates via a browser (SSO). I can either choose a custom protocol, or to use http(s). For compatibility reasons I want to retrieve the code via a simple http server, though I don't understand how to let HTTPServer listen for the SSO callback and write the GET parameter in a class' attribute and then shut down… May you please help me? Thanks :)
[03:14:04] *** Sargento is now known as messi
[03:14:06] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[03:14:28] *** messi is now known as Sargento
[03:14:52] *** Joins: onichomp (~onichomp@2806:264:4408:b9:9845:6915:26c2:afa6)
[03:14:54] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[03:15:20] *** Quits: onichomp (~onichomp@2806:264:4408:b9:9845:6915:26c2:afa6) (Read error: Connection reset by peer)
[03:15:37] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 240 seconds)
[03:15:58] *** Joins: onichomp (~onichomp@2806:264:4408:b9:9845:6915:26c2:afa6)
[03:16:18] *** Joins: qlixed (~qlixed@181.44.129.13)
[03:16:40] *** Quits: onichomp (~onichomp@2806:264:4408:b9:9845:6915:26c2:afa6) (Read error: Connection reset by peer)
[03:16:51] *** Sargento is now known as aldair-3
[03:17:17] *** Joins: onichomp (~onichomp@2806:264:4408:b9:9845:6915:26c2:afa6)
[03:17:21] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Ping timeout: 276 seconds)
[03:18:55] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:20:40] *** Quits: onichomp (~onichomp@2806:264:4408:b9:9845:6915:26c2:afa6) (Read error: Connection reset by peer)
[03:20:41] *** Quits: palasso (~palasso@user/palasso) (Read error: Connection reset by peer)
[03:21:17] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 240 seconds)
[03:21:24] *** Joins: onichomp (~onichomp@2806:264:4408:b9:9845:6915:26c2:afa6)
[03:21:35] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Ping timeout: 256 seconds)
[03:21:41] *** Quits: PublicWiFi (~PublicWiF@user/publicwifi) (Ping timeout: 252 seconds)
[03:21:57] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[03:22:12] *** Quits: onichomp (~onichomp@2806:264:4408:b9:9845:6915:26c2:afa6) (Read error: Connection reset by peer)
[03:22:23] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[03:22:53] *** Joins: onichomp (~onichomp@2806:264:4408:b9:9845:6915:26c2:afa6)
[03:23:18] *** Quits: onichomp (~onichomp@2806:264:4408:b9:9845:6915:26c2:afa6) (Read error: Connection reset by peer)
[03:25:15] *** Joins: grnman (~grnman@159.89.27.73)
[03:26:02] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[03:26:41] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[03:28:09] *** Quits: maxzor__ (~maxzor@abordeaux-652-1-2-77.w90-16.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[03:28:25] *** Quits: dskull (~dskull@user/dskull) (Quit: quit)
[03:28:32] <jim87> ok I almost got there. I used a SimpleHTTPRequestHandler factory to access the class' attributes. Now I only need to stop the serve_forever, once a request has been made
[03:29:25] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[03:29:29] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[03:30:59] *** Quits: magla (~gelignite@d5361383.access.ecotel.net) (Quit: Stay safe!)
[03:31:10] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[03:31:37] *** Quits: kristijonas (~kristijon@88-119-92-43.static.zebra.lt) (Ping timeout: 240 seconds)
[03:31:40] *** Joins: kristijonas_ (~kristijon@88-119-92-43.static.zebra.lt)
[03:31:45] *** Joins: Xardas (~Xardas@149.233.51.127)
[03:31:47] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[03:32:01] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 245 seconds)
[03:32:03] *** Joins: cheater (~Username@user/cheater)
[03:32:41] *** Quits: brentaarnold (~brentaarn@24.112.58.14) (Ping timeout: 256 seconds)
[03:33:15] *** Joins: panella32 (~panella32@164.215.225.229)
[03:33:35] <ChrisWarrick> jim87: https://github.com/python/cpython/blob/5603db43ba7ba5568b7516d0e28730a2bc1e1f26/Lib/socketserver.py#L244
[03:33:37] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 240 seconds)
[03:33:38] *** Quits: mmalter (~mmalter@88.126.10.237) (Quit: Lost terminal)
[03:33:56] *** Joins: dskull (~dskull@user/dskull)
[03:34:36] <jim87> ChrisWarrick: I tried that by using self.server.shutdown() at the end of the do_GET method of the SimpleHTTPRequestHandler, but it will hang
[03:35:13] <jim87> ChrisWarrick: this is how I build the request handler: https://bpa.st/VX2A
[03:36:20] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 250 seconds)
[03:36:39] *** Quits: f1se4 (~f1se4@213.195.113.45) (Ping timeout: 256 seconds)
[03:36:46] <ChrisWarrick> the code claims to do the shutdown at most after the poll_interval (defaults to 0.5)
[03:37:00] <ChrisWarrick> perhaps there’s some weird interaction if you’re trying to kill it in the middle of a request
[03:37:30] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[03:37:57] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 240 seconds)
[03:38:08] <jim87> ChrisWarrick: it's a server which listens just for a SSO callback, it handles only one request
[03:38:09] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:38:27] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[03:38:29] <jim87> I've noticed though that the browser will spin and never end loading in this way
[03:38:59] <ChrisWarrick> jim87: run the server in a thread? delay the .shutdown() call somehow so that it runs after do_GET completes?
[03:39:23] <ChrisWarrick> (SimpleHTTPServer/socketserver are a bit of a trainwreck design-wise)
[03:39:43] *** Joins: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[03:39:56] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:40:01] <jim87> ChrisWarrick: do you know an easier way to get a GET parameter and shut down the server maybe? :D it's kind of frustrating
[03:40:06] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[03:40:17] *** Quits: d1cor (~diego@179.63.242.122) (Ping timeout: 240 seconds)
[03:40:48] <ChrisWarrick> what else does your app do?
[03:41:11] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[03:41:11] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 245 seconds)
[03:41:22] <jim87> it interrogates REST APIs, the server is needed just for SSO auth code retrieval
[03:41:31] *** Quits: spinningCat (~spinningC@about/web/muscles) (Ping timeout: 256 seconds)
[03:41:51] <jim87> so I webbrowser.open(auth_url) and then listen for the auth code in the GET parameters of the callback url (localhost on custom port)
[03:41:54] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.4)
[03:42:23] <ChrisWarrick> an async rewrite would let you use something saner (aiohttp so it does both the server and requesting bits)
[03:43:03] *** Joins: Metalsutton (~Metalsutt@101.100.153.103)
[03:43:10] *** Joins: iflema (~ian@user/iflema)
[03:43:26] *** Joins: PublicWiFi (~PublicWiF@user/publicwifi)
[03:44:10] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[03:44:11] <jim87> seems reasonable, even if I introduce a (mostly) unwanted library for a so small part of the project D: well I guess, I'll try to figure it out later, for now I'll use aiohttp!
[03:44:15] *** Quits: kristijonas_ (~kristijon@88-119-92-43.static.zebra.lt) (Ping timeout: 256 seconds)
[03:44:18] *** Quits: catern (~sbaugh@2604:2000:8fc0:b:a9c7:866a:bf36:3407) (Read error: Connection reset by peer)
[03:44:23] <ChrisWarrick> in an async program, the http server could run forever
[03:44:45] *** Joins: iflema_ (~ian@user/iflema)
[03:44:52] <ChrisWarrick> or you could easily schedule its shutdown
[03:45:24] <ChrisWarrick> aiohttp will also do your http requesting bits, and you could parallelize it
[03:46:08] <jim87> you mean instead of using the requests library?
[03:46:39] <ChrisWarrick> yes
[03:47:26] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 245 seconds)
[03:51:04] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 250 seconds)
[03:52:14] *** Joins: iflema (~ian@user/iflema)
[03:52:41] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[03:53:06] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Remote host closed the connection)
[03:53:39] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:19e7:ade0:dc6f:5dab)
[03:53:39] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:19e7:ade0:dc6f:5dab) (Changing host)
[03:53:39] *** Joins: skapata (~Skapata@user/skapata)
[03:53:41] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[03:54:15] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[03:54:56] *** Quits: iflema_ (~ian@user/iflema) (Ping timeout: 245 seconds)
[03:55:07] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[03:55:55] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[03:56:17] *** Quits: ericlee_ (~ericlee@2600:1700:5450:41e0::30) (Ping timeout: 240 seconds)
[03:56:23] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:56:39] *** Quits: lakrass (~lakrass@user/lakrass) (Quit: WeeChat 3.4)
[03:57:07] *** Joins: brentaarnold (~brentaarn@24.112.58.14)
[03:57:57] *** Quits: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net) (Ping timeout: 240 seconds)
[04:03:05] *** Joins: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net)
[04:03:06] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[04:03:17] *** Joins: kristijonas_ (~kristijon@88-119-92-43.static.zebra.lt)
[04:03:59] <waynew> What I've used aiohttp for I've <3 it
[04:04:56] *** Joins: c4017w__ (~c4017@209.52.68.8)
[04:05:22] *** Quits: duuude (~user@user/duuude) (Ping timeout: 250 seconds)
[04:07:17] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 240 seconds)
[04:08:23] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[04:09:31] *** Quits: msek_ (~Username@pd9fb2d9d.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[04:09:41] *** Joins: Barones (~Barones@user/Barones)
[04:10:34] *** Quits: emf_ (~emf@2620:10d:c090:400::5:9a32) (Ping timeout: 250 seconds)
[04:13:44] *** Joins: duuude (~user@user/duuude)
[04:15:51] <whatsupdoc> Hi, anyone wanna give me tips to improve my code? Thank you https://bpa.st/4SGQ
[04:16:07] <whatsupdoc> The question is https://leetcode.com/problems/pacific-atlantic-water-flow/
[04:16:19] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[04:17:02] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:ac33:9d52:7dc:f94b)
[04:18:27] *** Quits: kristijonas_ (~kristijon@88-119-92-43.static.zebra.lt) (Remote host closed the connection)
[04:18:47] *** Joins: kristijonas_ (~kristijon@88-119-92-43.static.zebra.lt)
[04:20:04] *** Joins: cha0s (~jp@modemcable164.40-23-96.mc.videotron.ca)
[04:22:04] *** Joins: f1se4 (~f1se4@213.195.113.45)
[04:22:27] *** Quits: Z-cat (~Z-cat@user/z-cat) (Ping timeout: 250 seconds)
[04:23:35] *** Quits: Metalsutton (~Metalsutt@101.100.153.103) (Quit: Leaving)
[04:23:37] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[04:24:11] *** Joins: maxzor__ (~maxzor@2a01cb04054faa0098bd91394fed2f26.ipv6.abo.wanadoo.fr)
[04:24:22] <Repiphany> Smells like a problem designed for dynamic programming
[04:25:50] *** Quits: teroshan (~teroshan@static.28.181.130.94.clients.your-server.de) (Quit: The Lounge - https://thelounge.chat)
[04:27:22] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:29:07] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8) (Ping timeout: 256 seconds)
[04:29:10] *** Joins: teroshan (~teroshan@static.28.181.130.94.clients.your-server.de)
[04:30:53] *** Joins: Coniass (~quassel@2a03:4000:57:afc:5883:e3ff:fee1:8fee)
[04:31:12] *** Quits: goepsilongo (~goepsilon@cpe-74-73-86-74.nyc.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[04:32:49] *** Joins: Viewday118 (~Viewday@user/viewday)
[04:34:24] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[04:34:25] *** Viewday118 is now known as Viewday11
[04:36:11] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[04:36:17] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Ping timeout: 240 seconds)
[04:38:26] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[04:39:29] *** Joins: zeden (~zeden@user/zeden)
[04:39:35] *** Quits: emerent (~quassel@p200300cd57044366ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[04:39:55] *** Joins: emerent (~quassel@p200300cd570443b6ba27ebfffed28a59.dip0.t-ipconnect.de)
[04:40:31] *** Quits: zeden (~zeden@user/zeden) (Client Quit)
[04:40:57] *** Quits: kristijonas_ (~kristijon@88-119-92-43.static.zebra.lt) (Ping timeout: 240 seconds)
[04:41:20] *** Joins: redbear (~guy@2601:642:c000:2c38:42a7:7ebc:f130:554d)
[04:41:24] <redbear> I need help writing to columns of a spreadsheet using variables. I have a cell number stored in variable cellnum, I have an amount of cells to loop through stored in variable num. I need to write data to column B, so I am trying to do something like sheet.["B"+str(cellnum):"B"+str(cellnum + num)] but I can't get it to work, can anyone help?
[04:41:54] *** Joins: hanzo (uid532183@user/hanzo)
[04:42:03] *** Joins: kristijonas_ (~kristijon@88-119-92-43.static.zebra.lt)
[04:42:42] *** Quits: LimeOn (~user@user/limeon) (Quit: .)
[04:43:10] <whatsupdoc> I don't see the recursive solution in it tbh
[04:44:08] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[04:45:04] *** Joins: mdemo (~mdemo@user/mdemo22)
[04:45:25] *** Joins: mickey83 (~user@user/mickey)
[04:45:32] <InPhase> redbear: What is this system you are using, and why aren't you using pandas?
[04:45:45] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[04:45:48] *** mickey83 is now known as mickey8
[04:46:09] *** Quits: akk (~akk@75-161-95-245.albq.qwest.net) (Quit: +++)
[04:46:21] *** Quits: Guest3599 (~roro@78.192.226.182) (Ping timeout: 256 seconds)
[04:46:29] *** Quits: Ringtailed-Fox (~BoingBoin@2001:1970:5d2a:c500:fc59:20d8:960a:26cc) (Read error: Connection reset by peer)
[04:46:56] *** Joins: Ringtailed-Fox (~BoingBoin@2001:1970:5d2a:c500:fc59:20d8:960a:26cc)
[04:47:28] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[04:48:03] <whatsupdoc> I removed the redundancy in my code, but it's still slow as hell https://bpa.st/6CUQ
[04:48:43] <InPhase> whatsupdoc: Homework problem?
[04:48:57] *** Quits: Fairy (~Fairy@ti0004a400-5385.bb.online.no) (Ping timeout: 256 seconds)
[04:49:14] <whatsupdoc> InPhase: leetcode problem, just solve them for fun to get better at programming
[04:49:42] *** Joins: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net)
[04:50:11] *** Quits: flea (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 250 seconds)
[04:50:30] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[04:50:55] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[04:50:58] <Repiphany> whatsupdoc: Have a function that returns a boolean pair (reaches_pacific, reaches_atlantic) that's calculated recursively on neighbours that can flow to
[04:51:05] <Repiphany> plus memoization
[04:51:46] *** gentooclimax is now known as climax
[04:52:10] <Repiphany> Would have to watch out for infinite looping on equal height cells I guess
[04:52:30] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[04:52:57] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[04:53:08] *** Quits: teroshan (~teroshan@static.28.181.130.94.clients.your-server.de) (Quit: The Lounge - https://thelounge.chat)
[04:53:11] *** Joins: roro (~roro@78.192.226.182)
[04:53:35] *** roro is now known as Guest5554
[04:54:17] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:c185:156:17c8:9868) (Ping timeout: 240 seconds)
[04:55:40] *** Joins: crashrep (~crashrep@user/crashrep)
[04:55:52] <whatsupdoc> Memoization sounds impossible because you need to take into account the direction you are coming from, don't you?
[04:56:19] <Repiphany> No
[04:56:54] *** Quits: greedom (~greedom@p200300de670cc900c869bde1e7c9d04d.dip0.t-ipconnect.de) (Remote host closed the connection)
[04:57:08] <Repiphany> If you can reach an ocean from point A, and point B can reach point A, then point B can reach anywhere point A can
[04:57:22] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 250 seconds)
[04:57:40] *** Quits: panella32 (~panella32@164.215.225.229) (Quit: Textual IRC Client: www.textualapp.com)
[05:01:56] <whatsupdoc> If I try adding @cache to https://bpa.st/6CUQ it fails
[05:02:11] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[05:02:21] <Repiphany> cache to what
[05:02:36] *** Joins: maxzor_ (~maxzor@abordeaux-652-1-2-77.w90-16.abo.wanadoo.fr)
[05:02:47] <whatsupdoc> cache decorator aka memoization
[05:02:52] <Repiphany> to what function
[05:03:05] *** Quits: maxzor__ (~maxzor@2a01cb04054faa0098bd91394fed2f26.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[05:03:35] *** Quits: luva (~luva@146.70.62.252) (Ping timeout: 256 seconds)
[05:04:17] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[05:04:52] *** Joins: luva (~luva@146.70.62.252)
[05:05:16] <whatsupdoc> Repiphany: https://bpa.st/F45A
[05:05:21] <Repiphany> Your reachOcean function is written in a way that has side-effects so memoization won't work the way you wnt
[05:05:23] <Repiphany> want
[05:05:25] *** Joins: c4017w_ (~c4017@209.52.68.8)
[05:06:03] <Repiphany> Also it doesn't look like it distinguishes between pacific and atlantic ocean
[05:06:21] *** Quits: kickingvegas (~cchoi@c-67-170-234-150.hsd1.ca.comcast.net) (Quit: leaving)
[05:06:25] <whatsupdoc> It does
[05:06:33] <whatsupdoc> The code works without memoization
[05:07:22] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[05:08:28] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[05:08:44] *** Joins: kristijonas (~kristijon@88-119-92-43.static.zebra.lt)
[05:09:15] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[05:09:21] *** Quits: kristijonas_ (~kristijon@88-119-92-43.static.zebra.lt) (Ping timeout: 256 seconds)
[05:09:51] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Quit: leaving)
[05:12:59] *** Quits: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[05:13:02] *** Emet-Selch is now known as Azem
[05:13:14] <InPhase> whatsupdoc: Won't your code fail if it starts on a hill surrounded by a low ring that rises back up in elevation outside of that ring?
[05:13:51] *** Quits: dtux (~dtux@c-98-207-149-218.hsd1.ca.comcast.net) (Quit: dtux)
[05:14:13] <whatsupdoc> InPhase: I think it should fail in that case
[05:14:34] <whatsupdoc> The problem is worded poorly inmo
[05:14:51] <InPhase> whatsupdoc: Why?  I haven't read the problem, but walking down and back up again is a pretty normal way to reach an ocean.
[05:15:10] *** Joins: Celeo (~Celeo@user/celeo)
[05:15:10] <InPhase> whatsupdoc: Or is this a water flowing downhill problem?
[05:15:17] <whatsupdoc> InPhase: water flowing downhill
[05:18:17] <whatsupdoc> Someone else's faster code https://bpa.st/TFXQ
[05:18:46] *** Quits: koolazer (~koo@user/koolazer) (Remote host closed the connection)
[05:19:00] <whatsupdoc> I wonder why they want the current height to be greater than the last_height instead of the other way around
[05:19:24] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Quit: ZNC - https://znc.in)
[05:20:14] <grym> "A genetic algorithm begins like random multistart. However, these
[05:20:14] <grym> kangaroos do not know that they are supposed to be looking for the top
[05:20:14] <grym> of a mountain. Every few years, you shoot the kangaroos at low altitudes
[05:20:16] <grym> and hope the ones that are left will be fruitful, multiply, and ascend. "
[05:20:21] <grym> .. whoops, linebreaks
[05:20:57] *** Quits: clarjon1 (~clarjon1@user/clarjon1) (Read error: Connection reset by peer)
[05:21:51] *** Joins: moog (~moog@107.126.53.132)
[05:23:07] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[05:23:21] *** Quits: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net) (Ping timeout: 250 seconds)
[05:23:48] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 250 seconds)
[05:23:48] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:24:24] <whatsupdoc> I don't believe memoization is possible
[05:24:40] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 250 seconds)
[05:25:45] *** Joins: jazzy (~jaziz@user/jaziz)
[05:25:59] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[05:25:59] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[05:25:59] *** Joins: JordiGH (~jordi@user/jordigh)
[05:26:15] *** Quits: overrider (~overrider@user/overrider) (Read error: Connection reset by peer)
[05:26:38] *** Quits: harpia (~harpia@143.208.84.235) (Quit: harpia)
[05:26:44] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[05:26:50] *** Joins: overrider (~overrider@user/overrider)
[05:27:24] *** Quits: kristijonas (~kristijon@88-119-92-43.static.zebra.lt) (Remote host closed the connection)
[05:27:27] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[05:28:17] *** Quits: bryce (~bryce@ool-457dd6ac.dyn.optonline.net) (Ping timeout: 256 seconds)
[05:28:29] *** Joins: idiocrash (~textual@191.101.132.123)
[05:29:59] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[05:30:20] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:29] *** Joins: bryce (~bryce@ool-457dd6ac.dyn.optonline.net)
[05:32:53] *** Joins: vlm (~vlm@user/vlm)
[05:32:57] *** Joins: teroshan (~teroshan@static.28.181.130.94.clients.your-server.de)
[05:35:04] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Ping timeout: 250 seconds)
[05:35:08] *** Joins: humberto1 (~humbertow@187.202.198.64)
[05:35:08] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[05:35:34] <whatsupdoc> Nvm, I wrote a memoization solution, but it's only marginally faster (if I wrote it correctly) https://bpa.st/TO6A
[05:35:40] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:36:04] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[05:36:33] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[05:36:35] *** Quits: jim87 (~jim87@93.55.249.30) (Read error: Connection reset by peer)
[05:37:20] *** Quits: Stenean (~Stenean@cpc83665-brig20-2-0-cust104.3-3.cable.virginm.net) (Quit: Konversation terminated!)
[05:38:09] *** Quits: humbertowoody (~humbertow@187.202.198.64) (Ping timeout: 256 seconds)
[05:38:31] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[05:39:25] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-580b-afe0-58c1-a2bf.res6.spectrum.com) (Read error: Connection reset by peer)
[05:39:37] *** Quits: mdemo (~mdemo@user/mdemo22) (Ping timeout: 240 seconds)
[05:40:24] *** Quits: Guest777 (~Guest777@88.103.7.38) (Quit: Client closed)
[05:42:10] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[05:43:10] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:43:14] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[05:43:24] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Read error: Connection reset by peer)
[05:44:02] *** Joins: panella32 (~panella32@86.57.94.75)
[05:44:07] *** Joins: Ratticus (~RatticusZ@cpe-66-67-92-65.twcny.res.rr.com)
[05:44:53] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[05:45:17] *** Quits: therufuser (~therufuse@p5b02e102.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[05:45:50] *** Joins: mdemo (~mdemo@user/mdemo22)
[05:46:05] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 256 seconds)
[05:47:04] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-79fd-ac41-b5c7-f0d6.res6.spectrum.com)
[05:47:09] *** Joins: therufuser (~therufuse@p5b0003d1.dip0.t-ipconnect.de)
[05:47:59] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-00be-7568-6f09-f29d.res6.spectrum.com) (Ping timeout: 252 seconds)
[05:48:43] *** Joins: califax- (~califax@user/califx)
[05:49:22] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 250 seconds)
[05:49:37] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 240 seconds)
[05:50:01] *** Joins: TakinOver (~quassel@193.27.13.170)
[05:50:40] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc) (Ping timeout: 250 seconds)
[05:51:05] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 250 seconds)
[05:51:33] *** Joins: brabrax (~brabrax@user/brabrax)
[05:53:14] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:53:21] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[05:53:22] *** califax- is now known as califax
[05:55:00] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 250 seconds)
[05:55:50] *** Joins: Guest40 (~Guest40@2600:1700:232b:6110:f120:afd4:c6b9:f7f4)
[05:56:06] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:492b:bea1:e3dc:aaab)
[05:56:06] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:492b:bea1:e3dc:aaab) (Changing host)
[05:56:06] *** Joins: skapata (~Skapata@user/skapata)
[05:56:17] *** Joins: Fl0pFl1p (~FlipFlop@user/fl1pfl0p)
[05:57:33] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:58:39] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[05:58:48] *** Joins: cabo40 (~cabo40@189.217.81.59)
[05:59:12] *** Joins: Guest83 (~Guest83@modemcable243.63-163-184.mc.videotron.ca)
[05:59:27] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 256 seconds)
[05:59:57] *** Quits: Ratticus (~RatticusZ@cpe-66-67-92-65.twcny.res.rr.com) (Quit: Leaving)
[06:00:12] *** Quits: Fl1pFl0p (~FlipFlop@user/fl1pfl0p) (Ping timeout: 250 seconds)
[06:00:17] *** Quits: elias117 (~elias117@user/elias117) (Ping timeout: 240 seconds)
[06:02:48] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[06:02:52] *** Joins: Ratticus (~RatticusZ@cpe-66-67-92-65.twcny.res.rr.com)
[06:02:57] *** Joins: Alexer (~alexer@alexer.net)
[06:04:11] *** Joins: tWqaq (~tWqaq@240e:389:5d1c:ff00:6c6a:3aec:6486:7951)
[06:04:51] *** Quits: panella32 (~panella32@86.57.94.75) (Quit: Textual IRC Client: www.textualapp.com)
[06:04:53] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 256 seconds)
[06:05:34] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[06:05:41] *** Quits: Guest5554 (~roro@78.192.226.182) (Ping timeout: 256 seconds)
[06:05:55] *** Joins: c4017w__ (~c4017@209.52.68.8)
[06:06:35] *** Quits: eXtre3m0 (~eXtr3m0@user/eXtr3m0) (Ping timeout: 256 seconds)
[06:06:36] *** Joins: dtux (~dtux@c-98-207-149-218.hsd1.ca.comcast.net)
[06:08:50] *** Quits: cabo40 (~cabo40@189.217.81.59) (Read error: Connection reset by peer)
[06:09:39] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[06:12:05] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:85dd:181d:cfcf:3433) (Quit: Client closed)
[06:12:40] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[06:13:17] *** Quits: Ratticus (~RatticusZ@cpe-66-67-92-65.twcny.res.rr.com) (Ping timeout: 240 seconds)
[06:13:28] *** Joins: Seirdy0 (~Seirdy@sourcehut/user/seirdy)
[06:13:50] *** Joins: ss4 (~wootehfoo@user/wootehfoot)
[06:13:57] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 240 seconds)
[06:15:37] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 240 seconds)
[06:15:59] *** Quits: mdemo (~mdemo@user/mdemo22) (Quit: The Lounge - https://thelounge.github.io)
[06:16:53] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[06:17:08] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[06:17:37] *** Joins: mdemo (~mdemo@user/mdemo22)
[06:19:16] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 250 seconds)
[06:21:26] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 250 seconds)
[06:24:32] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[06:24:46] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c) (Remote host closed the connection)
[06:24:50] *** Joins: vanessa (~vanessa@103.160.128.7)
[06:24:56] *** Joins: RawFiend (~RawFiend@46.196.88.41)
[06:25:01] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[06:25:39] *** Quits: imp (~imp@138-59-122-25.static.sumicity.net.br) (Quit: imp)
[06:26:42] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8)
[06:26:52] *** Quits: vanessa (~vanessa@103.160.128.7) (Client Quit)
[06:27:08] *** Joins: vanessa (~vanessa@103.160.128.7)
[06:29:27] *** Joins: dme86 (~dan@user/dan86)
[06:31:29] *** Joins: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[06:32:17] *** Quits: beco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73) (Quit: Leaving)
[06:32:39] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 256 seconds)
[06:33:26] *** Joins: zebrag (~chris@user/zebrag)
[06:33:35] *** Joins: Viewday113 (~Viewday@user/viewday)
[06:33:59] *** Quits: maladaptive_75 (~maladapti@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417) (Read error: Connection reset by peer)
[06:34:01] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[06:34:31] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[06:34:32] *** Viewday113 is now known as Viewday11
[06:36:37] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[06:38:00] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[06:38:11] *** Joins: kostkon (~androirc@2a02:587:a116:f212:4109:3cf5:55f4:55f5)
[06:41:57] *** Quits: Alexer (~alexer@alexer.net) (Ping timeout: 256 seconds)
[06:42:05] *** Quits: aldair-3 (uid523534@wikipedia/Sargento-de-Hierro) (Quit: Connection closed for inactivity)
[06:43:00] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[06:44:17] *** Joins: fzf404 (~fzf404@101.32.126.24)
[06:44:56] *** Joins: beco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73)
[06:47:00] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 250 seconds)
[06:47:01] *** Joins: luva8 (~luva@146.70.62.244)
[06:47:11] *** Joins: Fairy (~Fairy@ti0004a400-5385.bb.online.no)
[06:47:19] *** Joins: frost (~frost@user/frost)
[06:47:21] *** Joins: panella32 (~panella32@37.120.138.174)
[06:47:26] *** Quits: luva8 (~luva@146.70.62.244) (Client Quit)
[06:48:21] *** Quits: frost (~frost@user/frost) (Remote host closed the connection)
[06:49:56] *** Joins: sunny933 (~sunny93@wireguard/tunneler/sunny93)
[06:50:01] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[06:50:27] *** Quits: luva (~luva@146.70.62.252) (Ping timeout: 256 seconds)
[06:50:27] *** Quits: zoraj (~zoraj@209.126.81.159) (Quit: ZNC - https://znc.in)
[06:50:31] *** Quits: derelict (~derelict@user/derelict) (Quit: bye)
[06:50:31] *** Quits: Guest83 (~Guest83@modemcable243.63-163-184.mc.videotron.ca) (Quit: Client closed)
[06:50:32] *** Quits: ldlework (~hexeme@user/hexeme) (Remote host closed the connection)
[06:50:48] *** Quits: _janus (~janus@blotter.ld-linux.so) (Remote host closed the connection)
[06:50:51] *** Joins: derelict (derelict@user/derelict)
[06:51:01] *** Joins: _janus (~janus@blotter.ld-linux.so)
[06:51:25] *** Quits: sunny93 (~sunny93@wireguard/tunneler/sunny93) (Ping timeout: 240 seconds)
[06:51:25] *** sunny933 is now known as sunny93
[06:51:38] *** Joins: zoraj (~zoraj@209.126.81.159)
[06:51:51] *** Joins: frost (~frost@user/frost)
[06:51:58] *** Joins: millido (~millido@84.210.150.128)
[06:52:43] *** Quits: \mSg (mSg@user/msg/x-0285936) (Ping timeout: 256 seconds)
[06:53:22] *** Joins: hexeme (~hexeme@user/hexeme)
[06:53:37] *** Quits: Elodin (~elodin@user/elodin) (Ping timeout: 240 seconds)
[06:53:52] *** Quits: fzf404 (~fzf404@101.32.126.24) (Quit: Client closed)
[06:53:58] *** Joins: luva8 (~luva@146.70.62.254)
[06:54:08] *** Joins: fzf404 (~fzf404@101.32.126.24)
[06:54:14] *** Joins: \mSg (mSg@user/msg/x-0285936)
[06:54:30] *** luva8 is now known as luva
[06:54:38] *** Joins: masoudd (~masoudd@user/masoudd)
[06:54:39] *** Quits: AnimalFarmPig (~quassel@user/animalfarmpig) (Ping timeout: 256 seconds)
[06:54:57] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[06:56:42] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[06:59:04] *** Joins: metamyth (~metamyth@2601:1c0:5903:ee30:b955:6112:b6db:3f9a)
[06:59:08] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 250 seconds)
[06:59:12] *** Joins: adeliktas3 (~adeliktas@i59F5FC83.versanet.de)
[07:00:17] *** Quits: adeliktas (~adeliktas@i59F52850.versanet.de) (Ping timeout: 240 seconds)
[07:00:17] *** adeliktas3 is now known as adeliktas
[07:00:33] *** Quits: beco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73) (Quit: Leaving)
[07:00:57] *** Quits: ominionx (~ominionx@172.58.136.5) (Read error: Connection reset by peer)
[07:01:35] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[07:01:56] *** Joins: masoudd_ (~masoudd@user/masoudd)
[07:02:41] *** Quits: jayray (~jayray@user/jayray) (Ping timeout: 256 seconds)
[07:03:57] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 240 seconds)
[07:04:03] *** Joins: ominionx (~ominionx@172.58.136.5)
[07:04:27] *** Quits: Qria (uid25348@tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:05:09] *** Joins: bytehackr (~Sandipan@45.249.73.155)
[07:05:59] *** Quits: waynew (~wayne@user/waynew) (Ping timeout: 256 seconds)
[07:06:03] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[07:06:12] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[07:06:24] *** Joins: c4017w_ (~c4017@209.52.68.8)
[07:06:56] *** Joins: Emet-Selch (~haise01@user/haise01)
[07:07:03] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[07:07:53] *** Quits: pepper (~pepper@user/pepper) (Remote host closed the connection)
[07:08:00] *** Joins: waynew (~wayne@user/waynew)
[07:08:15] *** Quits: cha0s (~jp@modemcable164.40-23-96.mc.videotron.ca) (Ping timeout: 256 seconds)
[07:08:55] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 256 seconds)
[07:09:37] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[07:09:45] *** Quits: Affliction (affliction@idlerpg/player/affliction) (Quit: Read error: Connection reset by beer)
[07:09:57] *** Quits: Azem (~haise01@user/haise01) (Ping timeout: 250 seconds)
[07:10:13] *** Joins: Affliction (affliction@idlerpg/player/affliction)
[07:10:51] *** Joins: pepper (~pepper@user/pepper)
[07:11:39] *** Joins: jayray (~jayray@user/jayray)
[07:11:42] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[07:14:19] *** Quits: ominionx (~ominionx@172.58.136.5) (Quit: Leaving)
[07:15:30] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc)
[07:19:33] *** Quits: redbear (~guy@2601:642:c000:2c38:42a7:7ebc:f130:554d) (Quit: Leaving)
[07:24:55] *** Quits: wac (~wac@user/wac) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:26:35] <fikran> I am getting an error saying to use `list` instead of `[]`. What would that be/entail?
[07:26:43] <fikran> Maybe I need some clarification on what `list` is?
[07:26:57] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[07:26:57] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[07:28:18] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[07:28:45] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[07:29:46] *** Quits: metamyth (~metamyth@2601:1c0:5903:ee30:b955:6112:b6db:3f9a) (Quit: Client closed)
[07:30:10] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:31:43] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[07:32:29] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[07:32:30] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 250 seconds)
[07:32:32] *** Joins: Oddity (~Oddity@user/oddity)
[07:32:37] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 240 seconds)
[07:34:49] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:48] *** Quits: vanessa (~vanessa@103.160.128.7) (Quit: WeeChat 3.4)
[07:36:49] <SnoopJ> fikran, that sounds like a weird error, can we see the complete error report?
[07:37:08] *** Joins: djapo (~archangel@user/djapo)
[07:37:13] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[07:37:25] *** Quits: panella32 (~panella32@37.120.138.174) (Quit: Textual IRC Client: www.textualapp.com)
[07:37:26] *** Joins: vanessa (~vanessa@103.160.128.7)
[07:38:33] <fikran> its a warning from Django, so not even an error report.
[07:38:38] <fikran> Trying to find which line might be the issue
[07:38:47] <fikran> but, I think it sbecause I have a default value as []
[07:42:35] *** Quits: Guest40 (~Guest40@2600:1700:232b:6110:f120:afd4:c6b9:f7f4) (Ping timeout: 256 seconds)
[07:42:49] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[07:42:58] <SnoopJ> Can we see the warning, then?
[07:43:32] <SnoopJ> It sounds like maybe whatever you're using is warning you that `something=[]` is making a list and then setting that one list's value to be `something`, rather than providing a factory for making new instances of that default value
[07:43:36] *** Joins: julia (~quassel@user/julia)
[07:44:11] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[07:44:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[07:46:57] *** Quits: lyodaom (~user@host86-147-112-224.range86-147.btcentralplus.com) (Ping timeout: 240 seconds)
[07:48:54] *** Joins: cabo40 (~cabo40@189.217.81.59)
[07:49:18] *** Joins: lyodaom (~user@host31-48-18-141.range31-48.btcentralplus.com)
[07:50:21] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[07:51:43] <SnoopJ> a la: https://bpa.st/SVCA
[07:52:48] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[07:54:00] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Remote host closed the connection)
[07:54:00] *** masoudd_ is now known as masoudd
[07:56:38] *** Joins: panella32 (~panella32@37.120.138.174)
[07:57:26] <panella32> I have a python script. Is there any way to add a proxy/port to all the code, I mean all its http requests at once?
[07:58:38] *** Quits: mdemo (~mdemo@user/mdemo22) (Quit: The Lounge - https://thelounge.github.io)
[08:01:08] *** Joins: mdemo (~mdemo@user/mdemo22)
[08:01:40] *** Joins: n_blownapart (~nb@135-180-218-226.fiber.dynamic.sonic.net)
[08:01:49] *** Joins: XV8 (~XV8@2601:5cb:c001:50:ac6c:2622:9107:8299)
[08:02:10] *** Joins: parv (~quass@user/parv)
[08:02:27] <panella32> just want to add 127.0.0.1:5454 to all its requests.
[08:02:43] *** Quits: Jenna16bit (~j16bit@c-73-228-39-16.hsd1.nm.comcast.net) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[08:03:37] *** Joins: Jenna16bit (~j16bit@c-73-228-39-16.hsd1.nm.comcast.net)
[08:04:08] *** Quits: XV9 (~XV8@2601:5cb:c001:50:4d1d:eb87:5761:ea2c) (Ping timeout: 250 seconds)
[08:05:30] <n_blownapart> hi I just installed jupyter lab on a macOSX. the jasn file is wrong and getting errors. this is th json fileplease take a look, thanks. https://bpa.st/MGF
[08:06:56] *** Joins: c4017w__ (~c4017@209.52.68.8)
[08:07:44] <n_blownapart> initially I had installed everything with miniconda, and the json file still had a path with anaconda in it even though I removed fully with homebrew. I reinstalled python 3.9 and jupyter with pip and messed with the json file :(
[08:07:55] *** Joins: Xardas (~Xardas@149.233.51.127)
[08:09:21] <SnoopJ> n_blownapart, your link is a 404, did you copy all of the URL?
[08:09:31] <SnoopJ> (bpaste slugs are usually 4-characters long)
[08:09:53] <n_blownapart>  https://bpa.st/MGFA very sorry SnoopJ
[08:10:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[08:10:22] *** Joins: Guest40 (~Guest40@2600:1700:232b:6110:f120:afd4:c6b9:f7f4)
[08:10:23] <n_blownapart> I'm launching jupyter lab from that file pythonNew
[08:10:27] *** Joins: slisnake (~slisnake@103.107.198.141)
[08:10:31] <SnoopJ> n_blownapart, can you share the error(s) you're getting?
[08:11:25] <n_blownapart> one sec
[08:11:43] *** Quits: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[08:12:06] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[08:12:21] *** Quits: dbristow (~dbristow@user/dbristow) (Remote host closed the connection)
[08:12:36] *** Joins: djapo_ (~archangel@99-149-186-203.lightspeed.hstntx.sbcglobal.net)
[08:12:46] *** Joins: dbristow (~dbristow@user/dbristow)
[08:13:25] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[08:13:26] <n_blownapart> SnoopJ: https://bpa.st/6LRQ error message re: first line
[08:13:29] *** Quits: slisnake (~slisnake@103.107.198.141) (Client Quit)
[08:13:45] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[08:13:50] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[08:13:51] *** Quits: cabo40 (~cabo40@189.217.81.59) (Quit: cabo40)
[08:14:50] <n_blownapart> I added the ENV variable based on stackexchange
[08:14:58] <SnoopJ> n_blownapart, that looks like it can't find ipykernel_launcher more than it does like the file can't be understood.
[08:15:03] <SnoopJ> How are you installing JupyterLab?
[08:15:31] <n_blownapart> I used pip3 in a fresh install of 3.9.7
[08:16:38] <SnoopJ> n_blownapart, I have JupyterLab installed, but I don't have the command `ipykernel_launcher` on my path. Did you mean to run the equivalent of `python3 -m ipykernel_launcher` there?
[08:16:47] *** Joins: frost (~frost@user/frost)
[08:18:03] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 256 seconds)
[08:18:17] *** Quits: waynew (~wayne@user/waynew) (Ping timeout: 256 seconds)
[08:18:33] <n_blownapart> not sure its odd bc when I first launched there was a path variable in the json that had anaconda in the address, but I had made a full removal of anaconda. the json is a hangover from that earlier install?
[08:18:40] <n_blownapart> SnoopJ: ^
[08:19:32] <SnoopJ> It's possible, I don't know either way. The error is pretty clear about not being able to find a command by that name, though, and there is a runnable module by that name which starts a kernel.
[08:20:38] <n_blownapart> SnoopJ: should I start a fresh install? I thought for certain I did a clean removal of all the conda stuff via homebrew
[08:20:38] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[08:21:34] <SnoopJ> n_blownapart, it can't hurt a non-working JupyterLab, but whether or not you want to be sure you get to a clean slate is a question for you more than it is for me. It depends on what else you've installed that you might damage, and how much that would matter to you.
[08:22:03] <SnoopJ> It probably can't hurt much to remove jupyterlab/ipython/configuration thereof and start fresh on that, though.
[08:22:18] <SnoopJ> You can't really make JupyterLab work much *less* than it currently is :)
[08:24:11] <n_blownapart> nothing matters about damage. my system py is 2.7 that matters. :) I'm going to try your suggestion "python3 -m ipykernel_launcher"   THANKS
[08:24:20] <n_blownapart> SnoopJ: ^
[08:25:33] *** Parts: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[08:25:39] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Ping timeout: 256 seconds)
[08:25:50] *** Quits: fzf404 (~fzf404@101.32.126.24) (Quit: Client closed)
[08:25:50] <n_blownapart> this is what is looks like now SnoopJ .. here goes! https://bpa.st/KTUQ
[08:27:24] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Ping timeout: 276 seconds)
[08:28:24] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:29:57] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8) (Ping timeout: 240 seconds)
[08:30:33] *** Joins: waynew (~wayne@user/waynew)
[08:30:55] *** Quits: nomic (~nomic@2a00:23c7:ec90:a501:b0:4012:86ae:6130) (Quit: Leaving)
[08:31:46] *** Joins: Alexer (~alexer@alexer.net)
[08:32:29] *** Joins: Guest13 (~Guest13@2601:845:c201:59b0::4c6a)
[08:32:45] <SnoopJ> n_blownapart, not for much longer, hopefully, I hear that the MacOS 12.3 beta drops it :)
[08:33:30] *** Joins: Viewday110 (~Viewday@user/viewday)
[08:34:01] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[08:34:02] *** Viewday110 is now known as Viewday11
[08:34:44] *** Parts: Guest13 (~Guest13@2601:845:c201:59b0::4c6a) ()
[08:35:51] *** Quits: waynew (~wayne@user/waynew) (Ping timeout: 256 seconds)
[08:42:24] <n_blownapart> SnoopJ: not sure I follow. I'm just trying to keep the system py separate. Should I install 3.9.7 in a separate folder, then use pip3 in the same folder to install jupyter etc?
[08:43:00] *** Joins: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[08:43:49] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:6c60:6dde:428b:7a01)
[08:47:05] *** Joins: newpy (~newpy@Lsvl-382-HQ-OPN.massivenetworks.net)
[08:47:26] <newpy> does anyone know the benefits of using `conda config --set auto_activate_base false` ?
[08:47:49] <newpy> other than not having (base) by default on your shell?
[08:48:53] *** Quits: Guest40 (~Guest40@2600:1700:232b:6110:f120:afd4:c6b9:f7f4) (Ping timeout: 256 seconds)
[08:50:21] *** Quits: Fairy (~Fairy@ti0004a400-5385.bb.online.no) (Ping timeout: 256 seconds)
[08:50:33] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[08:51:57] *** Joins: karlnashville (~karl@2601:482:4280:4cf0:9403:82ba:aaf8:ab8b)
[08:54:25] <newpy> usually a lot more chatter here :/
[08:54:37] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 240 seconds)
[08:55:57] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 240 seconds)
[08:56:17] *** Joins: sshine (~simon@hubris.eta.solutions)
[08:56:27] <sshine> is sorted() also in-place like .sort()?
[08:56:37] <sshine> sorry, I meant, is it stable?
[08:57:23] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 256 seconds)
[08:57:29] *** Quits: Seirdy0 (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[08:57:46] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[08:58:51] *** Quits: vanessa (~vanessa@103.160.128.7) (Quit: WeeChat 3.4)
[08:58:57] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 240 seconds)
[08:59:38] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[09:00:31] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[09:01:10] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Client Quit)
[09:01:21] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[09:01:31] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[09:01:53] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[09:03:11] *** Joins: frost (~frost@user/frost)
[09:03:59] *** Quits: climax (~gentoocli@81-64-65-213.rev.numericable.fr) (Read error: Connection reset by peer)
[09:04:15] *** Quits: f1se4 (~f1se4@213.195.113.45) (Quit: WeeChat 3.4)
[09:05:35] *** Joins: davor_ (~davor@user/davor)
[09:05:37] *** Quits: davor (~davor@user/davor) (Ping timeout: 240 seconds)
[09:05:57] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 240 seconds)
[09:05:59] *** Quits: panella32 (~panella32@37.120.138.174) (Quit: Textual IRC Client: www.textualapp.com)
[09:06:22] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[09:06:47] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 256 seconds)
[09:07:25] *** Joins: c4017w_ (~c4017@209.52.68.8)
[09:07:42] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[09:07:42] *** gentooclimax is now known as climax
[09:08:51] *** Joins: waynew (~wayne@user/waynew)
[09:11:19] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[09:12:17] *** Joins: pingpongball (~pingpongb@43.228.192.103)
[09:12:26] *** Quits: pingpongball (~pingpongb@43.228.192.103) (Client Quit)
[09:13:32] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[09:14:34] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[09:14:57] *** Quits: bytehackr (~Sandipan@45.249.73.155) (Ping timeout: 240 seconds)
[09:16:07] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[09:16:53] *** Quits: climax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 256 seconds)
[09:17:26] *** Joins: Jess` (~jessica@58.161.22.82)
[09:17:56] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[09:18:50] *** karlnashville is now known as karl_AFK
[09:19:11] *** Quits: djapo_ (~archangel@99-149-186-203.lightspeed.hstntx.sbcglobal.net) (Remote host closed the connection)
[09:19:37] *** Joins: trampel (~trampel@2601:602:9a00:49d:811:d0fd:329f:c4cb)
[09:20:19] *** Joins: djapo (~archangel@user/djapo)
[09:20:30] <newpy> sshine what do you mean by stable?
[09:20:32] *** Joins: ano (~ano@user/ano)
[09:20:51] <newpy> sorted() is not in-place
[09:21:24] <Jess`> Does this channel help deal with some issues with using Poetry? Or do I have to use Discord for that?
[09:21:57] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[09:22:13] <newpy> still need help with conda if anyone's around -- if I use `conda config --set auto_activate_base false` I'm wondering how I would use conda? as far as I understand you need the (base) $ environment to use conda commands
[09:22:44] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[09:23:57] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[09:25:10] <sshine> newpy, if you type help([].sort), it will tell you what stable means.
[09:25:55] *** Joins: califax (~califax@user/califx)
[09:26:06] <jazzy> what was the justification in python2 to not allow something like `while not print('hello')` and what changed to allow something like that later on?
[09:26:16] *** Joins: Betal_ (~Betal@user/betal)
[09:27:08] <Repiphany> `print` doesn't return anything in python 2
[09:27:25] *** Quits: Betal (~Betal@user/betal) (Ping timeout: 256 seconds)
[09:27:31] <newpy> sshine ah interesting
[09:28:32] <sshine> jazzy, in python 2, print is a statement, not an expression. in python3 it's a function, i.e., an expression, so you can stick it in places like those.
[09:29:16] *** Joins: Vonter (~Vonter@user/vonter)
[09:29:21] *** Quits: julia (~quassel@user/julia) (Ping timeout: 256 seconds)
[09:30:41] *** Joins: runciter (~runciter@user/runciter)
[09:31:13] <sshine> jazzy, there is some tendency in python, also 3, to treat statements and expressions as different. so e.g. assignment is not an expression that yields the value being assigned, like '=' is in C.
[09:31:33] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[09:31:46] <Repiphany> Though ~walrus~
[09:31:48] <jazzy> oh I see
[09:31:49] <jazzy> thanks
[09:31:57] *** Quits: Andrew (andrew@andrewyu.org) (Ping timeout: 240 seconds)
[09:32:26] <sshine> jazzy, but then you have another tendency with PEP-572 where the := assignment expression is made, because apparently some people do like to be able to mutate variables as part of some nested expression.
[09:32:31] <sshine> ( https://www.python.org/dev/peps/pep-0572/ )
[09:32:32] *** Quits: humberto1 (~humbertow@187.202.198.64) (Ping timeout: 250 seconds)
[09:33:02] <Avdol[m]> Does anyone have a good web ide for python
[09:33:03] <Avdol[m]> besides repl.it
[09:33:03] <sshine> jazzy, probably python 3 went in a direction of more expressibility that was originally intentionally missing.
[09:33:12] <sshine> Avdol[m], VSCode? :)
[09:33:31] *** Joins: humberto1 (~humbertow@187.202.198.64)
[09:33:35] <jazzy> wow, didn't even know about :=
[09:33:36] <Avdol[m]> Web. I do use it, but i cant run projects
[09:33:38] <jazzy> I've been away too long
[09:33:58] *** Joins: Wulf (~Wulf@user/wulf)
[09:34:01] <sshine> Avdol[m], https://vscode.dev/ -- web.
[09:34:23] <Avdol[m]> Again, i cant run projects
[09:34:31] <sshine> Avdol[m], sounds like a bug.
[09:34:32] <Avdol[m]> i do use it tho
[09:34:46] <Avdol[m]> no, its a feature
[09:35:01] <sshine> Avdol[m], I can run code in VSCode on web, so maybe I didn't download that feature.
[09:35:16] <Avdol[m]> huh
[09:35:17] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (Quit: WeeChat info:version)
[09:35:19] <Avdol[m]> 😐️
[09:35:46] * Avdol[m] uploaded an image: (12KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/sxUPtpIQWMRjvrNtNvOZPtiV/image.png >
[09:35:49] <Avdol[m]> This is what I see
[09:36:51] *** Joins: unclechris3 (unclechris@gateway/vpn/protonvpn/unclechris3)
[09:37:32] *** Joins: M3troidman (~buttler@196.244.191.100)
[09:38:06] *** Parts: sshine (~simon@hubris.eta.solutions) (cheers)
[09:38:22] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[09:38:28] *** Quits: unclechris3 (unclechris@gateway/vpn/protonvpn/unclechris3) (Client Quit)
[09:38:46] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[09:41:57] *** Quits: idiocrash (~textual@191.101.132.123) (Ping timeout: 240 seconds)
[09:42:17] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 240 seconds)
[09:42:35] *** Quits: trampel (~trampel@2601:602:9a00:49d:811:d0fd:329f:c4cb) (Quit: Leaving)
[09:43:13] <Avdol[m]> i cant change it
[09:43:13] <Avdol[m]> <sshine> "Avdol, I can run code in..." <- its default for me
[09:43:22] <Avdol[m]> look at photo above^^^
[09:43:55] *** Quits: n_blownapart (~nb@135-180-218-226.fiber.dynamic.sonic.net) (Quit: Lost terminal)
[09:44:04] *** Joins: Anarkitty (~c0a801f8@c-73-118-242-25.hsd1.wa.comcast.net)
[09:44:04] <newpy> Avdol[m] sshine left
[09:44:19] <newpy> jazzy rumors were that Guido quit because of :=
[09:44:20] *** Quits: dtux (~dtux@c-98-207-149-218.hsd1.ca.comcast.net) (Quit: dtux)
[09:44:31] <Avdol[m]> huh
[09:44:32] <Avdol[m]> why?
[09:44:48] *** Joins: jazzy2 (~jaziz@user/jaziz)
[09:44:50] <newpy> he wanted to add := and a bunch of the core developers were against it
[09:45:13] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[09:45:16] <newpy> his parting post mentioned something about python no longer being a language he could experiment with
[09:45:36] <newpy> (ie. mature, stability trumps experimentation, etc)\
[09:46:18] <Avdol[m]> ah
[09:46:28] <Avdol[m]> well, rip sshine
[09:47:14] *** Quits: mrkajetanp (~mrkajetan@88.98.245.28) (Ping timeout: 260 seconds)
[09:47:37] *** Joins: idiocrash (~textual@216.73.163.86)
[09:47:58] *** Joins: mrkajetanp (~mrkajetan@88.98.245.28)
[09:48:23] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 256 seconds)
[09:48:30] <jinsun_> <newpy> "still need help with conda if..." <- you just need to have the conda executable in your PATH, base doesn't need to be activated
[09:49:28] *** Joins: jazzy3 (~jaziz@user/jaziz)
[09:50:08] <newpy> jinsun yes I tinkered with it and figured it out
[09:50:11] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[09:50:13] <newpy> jinsun ty though :D
[09:50:18] *** Joins: idiocrash_ (~textual@216.73.163.85)
[09:50:31] *** Joins: mickey8 (~user@user/mickey)
[09:51:08] <jinsun_> I set that config option too
[09:51:24] <jinsun_> because i like to auto-activate another env
[09:51:26] *** Joins: the_lanetly_052 (~the_lanet@194.135.153.209)
[09:51:31] *** Quits: Jenna16bit (~j16bit@c-73-228-39-16.hsd1.nm.comcast.net) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[09:51:33] <jinsun_> not base
[09:51:47] *** Joins: Jenna16bit (~j16bit@c-73-228-39-16.hsd1.nm.comcast.net)
[09:52:01] *** Quits: idiocrash (~textual@216.73.163.86) (Ping timeout: 256 seconds)
[09:52:17] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[09:54:15] <newpy> jinsun, same
[09:55:45] *** Quits: M3troidman (~buttler@196.244.191.100) (Ping timeout: 256 seconds)
[09:56:33] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[09:56:50] *** Joins: M3troidman (~buttler@196.244.191.100)
[09:57:31] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:6c60:6dde:428b:7a01) (Read error: Connection reset by peer)
[09:59:53] *** Quits: runciter (~runciter@user/runciter) (Quit: Leaving)
[10:01:24] *** Joins: spinningCat (~spinningC@94.54.210.37)
[10:01:24] *** Quits: spinningCat (~spinningC@94.54.210.37) (Changing host)
[10:01:24] *** Joins: spinningCat (~spinningC@about/web/muscles)
[10:02:09] *** Joins: Atque (~Atque@user/atque)
[10:02:50] *** Quits: Atque (~Atque@user/atque) (Client Quit)
[10:04:07] *** Quits: Jess` (~jessica@58.161.22.82) (Quit: Textual IRC Client: www.textualapp.com)
[10:04:46] *** Quits: newpy (~newpy@Lsvl-382-HQ-OPN.massivenetworks.net) (Quit: Going offline, see ya! (www.adiirc.com))
[10:05:20] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[10:05:34] *** Joins: mickey8 (~user@user/mickey)
[10:05:54] *** Joins: vakera_pingveno (~dan@2600:1700:21f9:b150::40)
[10:07:56] *** Joins: c4017w__ (~c4017@209.52.68.8)
[10:10:23] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[10:10:31] *** Joins: Atque (~Atque@user/atque)
[10:11:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[10:12:06] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[10:13:31] <aphysically> jinsun_: founds lotsa bugs today :D
[10:13:32] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Remote host closed the connection)
[10:13:43] <aphysically> and I think I can probably find more
[10:13:51] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[10:14:28] *** megeve_ is now known as megeve
[10:16:37] *** Quits: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 240 seconds)
[10:17:14] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[10:17:38] *** Joins: lightbulbjim (~lightbulb@user/lightbulbjim)
[10:19:02] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[10:19:50] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[10:20:07] <jim> hi... what's a better (or "the right") way to do this: confFilePathName = scriptPath + '/' + 'irc-subst.cfg'
[10:21:35] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 256 seconds)
[10:23:44] *** Joins: sixie6e (~sixie6e@2600:1000:b014:820f:20b1:76f6:a9ea:dbba)
[10:24:11] <jim> let's see, how do I get scriptPath...
[10:24:11] *** Joins: hams (~hams@73.232.205.0)
[10:24:11] *** Quits: hams (~hams@73.232.205.0) (Changing host)
[10:24:11] *** Joins: hams (~hams@user/hams)
[10:26:20] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[10:26:42] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8)
[10:27:14] *** Quits: Anarkitty (~c0a801f8@c-73-118-242-25.hsd1.wa.comcast.net) (Changing host)
[10:27:14] *** Joins: Anarkitty (~c0a801f8@user/Anarkitty)
[10:27:49] *** Joins: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[10:29:17] *** Joins: nomic (~nomic@2a00:23c7:ec90:a501:e4ec:5860:b72a:614a)
[10:31:04] *** jazzy3 is now known as jazzy
[10:32:45] *** Joins: Viewday116 (~Viewday@user/viewday)
[10:32:51] <jinsun_> <aphysically> "jinsun: founds lotsa bugs today..." <- you're on fire nowadays! 😀
[10:33:44] *** Quits: vakera_pingveno (~dan@2600:1700:21f9:b150::40) (Quit: Konversation terminated!)
[10:34:20] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[10:34:21] *** Viewday116 is now known as Viewday11
[10:34:38] *** karl_AFK is now known as karlnashville
[10:35:28] <aphysically> jinsun_: found a typo https://github.com/python/cpython/pull/31135
[10:35:47] <aphysically> and this https://bugs.python.org/issue46643
[10:35:56] <aphysically> and this https://bugs.python.org/issue46642
[10:36:05] *** Joins: bytehackr (~Sandipan@45.249.73.155)
[10:36:07] <aphysically> and then I made this https://bugs.python.org/issue46644
[10:36:48] *** Joins: f1se4 (~f1se4@213.195.113.45)
[10:37:20] *** Joins: callq (~callq@2409:4062:2e9e:2081:816d:3026:9fb1:625b)
[10:37:55] *** Quits: jarthur_ (~jarthur@2603-8080-1540-002d-79fd-ac41-b5c7-f0d6.res6.spectrum.com) (Quit: jarthur_)
[10:38:32] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:4426:973e:b67b:37a2)
[10:44:53] *** Joins: frost (~frost@user/frost)
[10:44:58] *** Quits: kostkon (~androirc@2a02:587:a116:f212:4109:3cf5:55f4:55f5) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[10:45:02] *** Joins: idiocrash (~textual@216.73.163.85)
[10:46:11] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Ping timeout: 256 seconds)
[10:47:21] *** Joins: superiorNA (~superiorN@182.253.194.44)
[10:47:39] *** Joins: Fairy (~Fairy@ti0004a400-5385.bb.online.no)
[10:48:41] *** Quits: idiocrash_ (~textual@216.73.163.85) (Ping timeout: 256 seconds)
[10:49:53] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[10:50:25] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[10:51:22] *** Joins: DaNeenjah (~jake@adsl-74-230-9-40.hsv.bellsouth.net)
[10:53:57] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 240 seconds)
[10:54:25] <Wulf> jim: Path(__file__).parent / "irc-subst.cfg"
[10:54:29] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Quit: Goodbye.)
[10:54:41] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[10:55:07] <callq> I want my app to be able to interact with multiple different APIs, but the APIs are a little different. Like place_order_api1() and place_order_api2() will give me duplicated code, just to handle these different API requests and responses. What's a good way of going about this?
[10:55:40] *** Joins: upsala (~zcb@185.213.155.232)
[10:56:06] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[10:58:13] *** Parts: sixie6e (~sixie6e@2600:1000:b014:820f:20b1:76f6:a9ea:dbba) ()
[10:58:59] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 256 seconds)
[10:59:19] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[10:59:35] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Client Quit)
[11:00:21] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[11:02:38] <jim> wulf, thanks
[11:03:55] *** Joins: pingpongball (~pingpongb@43.228.192.123)
[11:04:42] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[11:04:59] *** Quits: auk (auk@gateway/vpn/protonvpn/auk) (Quit: Leaving)
[11:05:01] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[11:05:13] *** Quits: jpodivin (~jpodivin@cgnat44-pool3-68-117.poda.cz) (Ping timeout: 256 seconds)
[11:05:27] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[11:05:37] *** Joins: fxhp (~fxhp@d-206-53-88-50.ct.cpe.atlanticbb.net)
[11:07:17] *** Parts: pingpongball (~pingpongb@43.228.192.123) ()
[11:08:25] *** Joins: c4017w_ (~c4017@209.52.68.8)
[11:09:50] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[11:11:37] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[11:13:09] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[11:13:23] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-cd89-01e8-2e2b-f64f.res6.spectrum.com)
[11:13:36] *** Quits: RawFiend (~RawFiend@46.196.88.41) (Quit: Client closed)
[11:15:46] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[11:15:54] *** Joins: Guest2610 (~Guest26@49.37.46.73)
[11:18:58] *** Joins: someuser (~user@197.54.43.98)
[11:19:11] <Guest2610> From https://aivarsk.com/2022/01/21/fastapi-concurrency/, "Synchronous functions which are not yielding their execution time are called through a thread pool to ensure they do not block the main execution thread", can someone tell me how this happens through code?
[11:20:07] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[11:21:41] <jinsun> Guest2610: https://docs.python.org/3/library/asyncio-task.html#asyncio.to_thread or https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.loop.run_in_executor or some similar way
[11:22:21] <jinsun> Guest2610: or if you wanted to know how to determine magically whether something is aync or not, see https://docs.python.org/3/library/inspect.html
[11:22:51] <jinsun> s/aync/async
[11:22:54] *** Joins: xkuru (~xkuru@user/xkuru)
[11:22:55] *** Joins: bluedust (~bluedust@117.193.122.44)
[11:23:52] *** Quits: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Quit: Reconnecting)
[11:24:05] *** Joins: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[11:24:23] <jim> Wulf, in the thing you gave me, what's the / for?
[11:24:37] <jim> is it like pathname.join/
[11:24:38] <jim> ?
[11:24:50] *** Guest2610 is now known as sanketdg
[11:25:08] <jinsun> pathlib.Path overloads the division operator
[11:25:24] <jinsun> if you don't like that you can call the .joinpath method too
[11:25:29] <bookworm> in other words, yes it's like join
[11:25:47] *** Quits: reset (~reset@user/reset) (Quit: reset)
[11:26:00] <jim> ok thanks :) I can deal with that :)
[11:26:38] <jinsun> I like .joinpath more, the operator needs extra parens too many times
[11:27:01] <jim> it's kindof "misnamed to a good name"
[11:27:33] *** Quits: dreamon (~dreamon@p54b14d36.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[11:27:36] *** Joins: manti7 (~manti7@176.10.104.94)
[11:27:47] *** Joins: toverna (~uni@2.95.60.140)
[11:28:06] <jim> so, other operators are higher precedence than /, which sometimes makes / inconvenient
[11:30:50] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:30:54] *** Joins: pingpongball (~pingpongb@43.228.192.123)
[11:30:57] *** Quits: pingpongball (~pingpongb@43.228.192.123) (Client Quit)
[11:31:10] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[11:31:25] *** Quits: Helenah (s98259@user/helenah) (Ping timeout: 240 seconds)
[11:31:33] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[11:31:52] <jim> both work fine :)
[11:34:36] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[11:36:40] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[11:37:06] *** Joins: ybonatakis (~iob@dynamic-2a00-1028-8390-9e8a-5cf8-25c0-aa4e-e57d.ipv6.o2.cz)
[11:37:35] *** Quits: toverna (~uni@2.95.60.140) (Quit: Konversation terminated!)
[11:38:20] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 252 seconds)
[11:39:06] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[11:39:45] *** Quits: DerpGusta (~quassel@user/derpgusta) (Ping timeout: 268 seconds)
[11:43:03] *** Joins: kts (~kts@103.73.237.122)
[11:43:24] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 250 seconds)
[11:44:02] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:4426:973e:b67b:37a2) (Quit: pvergain)
[11:45:37] <aphysically> jinsun: cross your fingers my PR tests are running again
[11:45:55] *** Joins: palasso (~palasso@user/palasso)
[11:46:07] <aphysically> the cpython tests are broken on main right now so it's a bit of luck to get all your tests to pass if your patch is okay
[11:46:11] <jinsun> why did they have to run again? were you waiting for another fix?
[11:46:40] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[11:46:49] *** Quits: maxzor_ (~maxzor@abordeaux-652-1-2-77.w90-16.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[11:46:53] <jinsun> ah broken tests, so yeah
[11:47:08] <sanketdg> jinsun Thanks that helps
[11:47:39] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[11:47:40] <jim> maybe it'd be easier to fix the tests so they work right/
[11:48:13] <jim> (not for me of course, I suck at tests)
[11:48:14] *** Joins: aldair-3 (uid523534@id-523534.ilkley.irccloud.com)
[11:48:33] <jinsun> me too
[11:48:36] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Read error: Connection reset by peer)
[11:48:37] *** aldair-3 is now known as Sargento
[11:48:53] <jinsun> my way to fix tests is assert True :D
[11:49:07] *** Sargento is now known as Guest8255
[11:49:26] *** Quits: Guest8255 (uid523534@id-523534.ilkley.irccloud.com) (Changing host)
[11:49:26] *** Joins: Guest8255 (uid523534@wikipedia/Sargento-de-Hierro)
[11:49:34] <jim> my test works! True! my tests always pass! TRUE!
[11:50:01] *** Joins: widp (~user@124.123.106.203)
[11:50:09] *** Guest8255 is now known as Sargento
[11:50:10] <jim> seriously though, I gotta watch the video nedbat did on tests
[11:50:17] <aphysically> jim: well
[11:50:24] <aphysically> I think that's exactly as easy this, ain't it?
[11:50:28] *** Joins: pingpongball (~pingpongb@43.228.192.123)
[11:50:35] <widp> Hello I am trying ot implement a 3d mesh inpainting algorithm in python
[11:50:45] <widp> I use scipy.minimize
[11:50:53] <aphysically> I actually tried to look but it's not even obvious to me what commit broke the tests
[11:51:28] <jim> aphysically, well, I'm hoping it'll be easy... or at least easIER
[11:52:10] <jinsun> is there no tag to skip tests?
[11:52:15] <widp> I get this error "numpy.core._exceptions.MemoryError: Unable to allocate 108. GiB for an array with shape (14527723495,) and data type float64"
[11:52:16] <widp>  
[11:52:33] *** Quits: nomic (~nomic@2a00:23c7:ec90:a501:e4ec:5860:b72a:614a) (Quit: Leaving)
[11:52:34] <jinsun> widp: download more RAM :D
[11:53:08] *** Joins: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de)
[11:53:09] <pingpongball> jinsun best solution
[11:53:16] <widp> the number there looks accurate when compared to the number of meshes and the number of vertices in each mesh I am processing. Wondering how I could solve this problem.
[11:53:17] *** Quits: someuser (~user@197.54.43.98) (Ping timeout: 256 seconds)
[11:53:39] <widp> jinsun: I would if I could :D
[11:54:53] <jinsun>  (14527723495  * 8) / 1024 / 1024 / 1024 ~ 108
[11:54:55] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[11:54:57] <pingpongball> widp what text editor you use jinsun
[11:55:04] <jinsun> so it checks out
[11:55:28] <jinsun> you just can't allocate 14527723495 floats without 108 GB RAM
[11:56:51] *** Joins: DerpGusta (~quassel@user/derpgusta)
[11:58:01] <megaTherion> jinsun: with single precision you can :)
[11:58:22] <jinsun> pingpongball: I use vscode with pylance on windows, so all noob stuff :D
[11:58:48] <pingpongball> oh i use arch btw. switch to gnu/linux brother :D
[11:59:10] <jinsun> megaTherion: yes, then you only need 54 GiB (Which I guess many people have nowdays)
[11:59:22] <pingpongball> vscoooode
[11:59:25] *** Quits: kts (~kts@103.73.237.122) (Quit: Konversation terminated!)
[11:59:43] *** Quits: lightbulbjim (~lightbulb@user/lightbulbjim) (Quit: Leaving...)
[11:59:51] *** Quits: ChkDigit (~u388mw@207-195-34-73.prna.static.sasknet.sk.ca) (Ping timeout: 256 seconds)
[12:00:03] <jinsun> I use arch  too (in WSL)
[12:00:24] <pingpongball> :b
[12:00:29] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[12:00:36] <pingpongball> proprietary inside proprietary inside opensource
[12:01:06] <pingpongball> jinsun have you tried emacs , if noob doom emacs https://github.com/doomemacs/themes
[12:01:18] *** Joins: rendar (~rendar@user/rendar)
[12:01:21] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[12:01:34] <pingpongball> oh wrong , this is https://github.com/hlissner/doom-emacs
[12:01:35] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[12:01:36] <pingpongball> :)
[12:02:15] <PsyStemUpdate> anyone want to duel
[12:02:37] *** Joins: Atque (~Atque@user/atque)
[12:03:04] *** Joins: kts (~kts@103.73.237.122)
[12:03:49] <aphysically> jinsun: hurrah I got lucky the second time https://github.com/python/cpython/pull/31135
[12:04:03] *** Quits: upsala (~zcb@185.213.155.232) (Ping timeout: 256 seconds)
[12:04:03] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Read error: Connection reset by peer)
[12:04:50] <jinsun> aphysically: nice, but there should probably be some skip tests label too for simple changes like this one?
[12:04:53] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[12:04:55] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[12:05:13] <pingpongball> :D  http://xahlee.info/emacs/misc/i/emacs_vs_vscode_memory_2020-11-18.png
[12:05:22] <aphysically> meh, probably good to always run tests
[12:05:22] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 260 seconds)
[12:05:52] <aphysically> did you check out my bpo bugs
[12:05:53] *** Joins: upsala (~zcb@185.213.155.252)
[12:05:55] <jinsun> yeah, small stuff can break too
[12:06:07] *** Quits: Balzy (~Balzy@host-79-31-159-142.retail.telecomitalia.it) (Ping timeout: 250 seconds)
[12:06:14] <aphysically> I'd really like to remove that callable() check , it's completely insane and very obvious a lot of people are relying on it without realizing it
[12:06:20] <aphysically> or well, not a lot of people are
[12:06:21] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc) (Ping timeout: 250 seconds)
[12:06:21] <jinsun> I had a look, good catch in the TypeVar thing
[12:06:56] <aphysically> yeah that test case is fails for some actual insanity
[12:06:57] *** Quits: callq (~callq@2409:4062:2e9e:2081:816d:3026:9fb1:625b) (Ping timeout: 240 seconds)
[12:07:01] <aphysically> s/is//
[12:08:27] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Quit: Leaving)
[12:08:40] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[12:08:56] *** Joins: c4017w__ (~c4017@209.52.68.8)
[12:09:28] *** Quits: AlanMD (~AlanMD@5-12-8-203.residential.rdsnet.ro) (Quit: ZZZzzz…)
[12:09:40] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[12:09:57] *** Quits: bytehackr (~Sandipan@45.249.73.155) (Ping timeout: 240 seconds)
[12:10:35] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[12:10:48] <jinsun> pingpongball: I want to give emacs a try but I have no patience, maybe I should try doom really, also this editor discussion should be in ##python-offtopic probably
[12:10:51] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[12:11:03] * aphysically uses vim
[12:11:15] <pingpongball> :)
[12:12:09] *** Joins: Balzy (~Balzy@host-95-232-138-142.retail.telecomitalia.it)
[12:12:19] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[12:13:18] <aphysically> pingpongball: whoa you have 4 different web browsers open
[12:13:28] <aphysically> brave, firefox, chrome, and emacs
[12:13:49] <pingpongball> =$
[12:14:30] *** Joins: georgios (~georgios@user/georgios)
[12:14:44] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[12:15:07] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[12:15:23] *** Quits: holgersson (~quassel@user/holgersson) (Quit: “Format C:........[Done]“)
[12:15:36] <jinsun> and vscode :D
[12:15:52] <pingpongball> aumm i thought
[12:15:55] <pingpongball> ok
[12:16:43] *** Joins: dme86 (~dan@user/dan86)
[12:17:02] *** Quits: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Quit: Lost terminal)
[12:18:32] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[12:18:48] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[12:20:26] *** Joins: bindu (~bindu@user/bindu)
[12:22:51] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 256 seconds)
[12:23:50] *** Joins: kristijonas (~kristijon@78-56-32-39.static.zebra.lt)
[12:24:53] *** Quits: superiorNA (~superiorN@182.253.194.44) (Quit: Leaving)
[12:25:09] *** Joins: masoudd_ (~masoudd@user/masoudd)
[12:25:32] *** Quits: pingpongball (~pingpongb@43.228.192.123) (Quit: pingpongball)
[12:26:09] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 256 seconds)
[12:27:17] *** Quits: humberto1 (~humbertow@187.202.198.64) (Ping timeout: 240 seconds)
[12:27:51] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[12:28:15] *** Joins: ert (~ert@2001:4b99:1:1:216:3eff:fee5:446f)
[12:29:44] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Quit: WeeChat 2.8)
[12:30:13] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[12:30:34] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[12:30:40] *** Quits: Rohit[m] (~rohitrohi@2001:470:69fc:105::1:5d55) (Quit: You have been kicked for being idle)
[12:31:11] *** Quits: masoudd_ (~masoudd@user/masoudd) (Remote host closed the connection)
[12:32:41] *** Joins: masoudd (~masoudd@user/masoudd)
[12:32:52] *** Joins: Viewday113 (~Viewday@user/viewday)
[12:33:41] *** Joins: pycode1 (~pycode3@2001:b07:5d28:551:ea81:84e5:d2f2:2b9c)
[12:34:04] *** Joins: humberto1 (~humbertow@187.202.198.64)
[12:34:06] *** Joins: szymon (~ugh@5.253.206.218)
[12:34:38] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[12:34:38] *** Viewday113 is now known as Viewday11
[12:38:26] *** Quits: JC5 (~X@user/jc5) (Quit: Bye)
[12:40:43] *** Joins: MmeQuignon (~MmeQuigno@2a01:e0a:1ab:f090:8464:37c0:f89d:bf6a)
[12:45:25] *** Quits: mcglk (~mcglk@131.191.49.120) (Ping timeout: 256 seconds)
[12:45:27] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[12:45:52] *** Joins: mcglk (~mcglk@131.191.49.120)
[12:46:27] *** Joins: edd_lc (~edd_lc@85.64.225.197.dynamic.barak-online.net)
[12:47:07] *** Quits: daidoji (~daidoji@104-52-250-5.lightspeed.gnvlsc.sbcglobal.net) (Ping timeout: 256 seconds)
[12:48:12] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:48:21] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[12:48:21] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[12:51:11] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[12:51:26] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[12:52:30] *** Quits: the_lanetly_052 (~the_lanet@194.135.153.209) (Remote host closed the connection)
[12:53:07] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 256 seconds)
[12:53:39] *** Joins: hqdruxn08_ (~hqdruxn08@user/hqdruxn08)
[12:53:41] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[12:54:40] *** Joins: oriba (~oriba@dynamic-077-191-250-060.77.191.pool.telefonica.de)
[12:54:47] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[12:54:57] *** Quits: spinningCat (~spinningC@about/web/muscles) (Ping timeout: 240 seconds)
[12:55:35] *** karlnashville is now known as karl_AFK
[12:55:57] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 250 seconds)
[12:56:46] *** Joins: bluedust_ (~bluedust@194.37.96.121)
[12:56:57] *** Quits: hqdruxn08 (~hqdruxn08@user/hqdruxn08) (Ping timeout: 240 seconds)
[12:57:25] *** Quits: jug (~jug@user/jug) (Quit: WeeChat 3.4)
[12:58:16] *** Joins: msek_ (~Username@pd9fa841f.dip0.t-ipconnect.de)
[12:58:57] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 240 seconds)
[12:59:57] *** Quits: bluedust (~bluedust@117.193.122.44) (Ping timeout: 240 seconds)
[13:00:16] *** Joins: bluedust (~bluedust@117.193.122.44)
[13:00:26] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[13:01:17] *** Quits: Alexer (~alexer@alexer.net) (Ping timeout: 240 seconds)
[13:01:49] *** Joins: jug (~jug@user/jug)
[13:01:51] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 256 seconds)
[13:02:57] *** Joins: kosh (~kosh@user/kosh)
[13:03:05] *** Quits: msek_ (~Username@pd9fa841f.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[13:03:33] *** Quits: bluedust_ (~bluedust@194.37.96.121) (Ping timeout: 256 seconds)
[13:03:40] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[13:05:09] *** Joins: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net)
[13:06:19] *** Joins: rendar_ (~Paxman@2001:b07:2ef:6e26:6473:687:f001:948b)
[13:06:22] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Remote host closed the connection)
[13:06:44] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[13:06:52] *** Joins: Alexer (~alexer@alexer.net)
[13:06:52] *** Quits: rendar_ (~Paxman@2001:b07:2ef:6e26:6473:687:f001:948b) (Client Quit)
[13:07:07] *** karl_AFK is now known as karlnashville
[13:07:56] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[13:08:11] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 256 seconds)
[13:08:41] *** Joins: flea (nosoul@gateway/vpn/protonvpn/nosoul)
[13:09:25] *** Joins: c4017w_ (~c4017@209.52.68.8)
[13:10:27] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 256 seconds)
[13:12:41] *** Joins: dme86 (~dan@user/dan86)
[13:13:05] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[13:15:28] *** Joins: dg_dg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222)
[13:16:07] *** Quits: dre (~dre@2001:8003:c932:c301:a9ae:c59a:a85f:47a7) (Ping timeout: 256 seconds)
[13:21:11] *** Joins: magga (magga@ti0036a400-1042.bb.online.no)
[13:23:11] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[13:26:10] *** Joins: LimeOn (~user@user/limeon)
[13:26:12] *** Joins: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1)
[13:27:00] *** Quits: Betal_ (~Betal@user/betal) (Quit: WeeChat 3.4)
[13:28:22] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[13:30:59] *** Quits: idiocrash (~textual@216.73.163.85) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:31:39] *** Joins: Auron (Auron956@user/auron)
[13:37:17] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:2133:2367:93c2:891d) (Ping timeout: 240 seconds)
[13:38:03] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[13:38:21] *** Quits: slackcals (~slackcals@user/slackcals) (Read error: Connection reset by peer)
[13:39:02] *** Quits: rvalue (~rvalue@user/rvalue) (Quit: ZNC - https://znc.in)
[13:39:13] *** Quits: f1se4 (~f1se4@213.195.113.45) (Quit: WeeChat 3.4)
[13:40:18] *** Joins: rvalue (~rvalue@user/rvalue)
[13:41:06] *** Joins: ekathva (~ekathva@2001:999:53:cee3:97a6:75f6:a877:3ffd)
[13:41:38] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[13:42:59] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[13:44:33] *** Joins: dme86 (~dan@user/dan86)
[13:44:40] *** Quits: bitblit_ (~bitblit@gateway/tor-sasl/bitblit) (Remote host closed the connection)
[13:44:42] *** Joins: slav0nic (slav0nic@python.su)
[13:44:42] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[13:44:53] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[13:45:07] *** Joins: bitblit_ (~bitblit@gateway/tor-sasl/bitblit)
[13:45:56] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 252 seconds)
[13:45:59] *** Joins: nomic (~nomic@2a00:23c7:ec90:a501:e4ec:5860:b72a:614a)
[13:46:42] *** karlnashville is now known as karl_AFK
[13:47:03] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[13:47:35] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 252 seconds)
[13:47:45] *** Joins: holgersson (~quassel@user/holgersson)
[13:48:52] *** Joins: walterwhip (~www@user/walterwhip)
[13:49:04] *** Joins: iomari891 (~iomari891@105.112.138.38)
[13:49:13] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[13:49:17] <mickey8>     ccf_forward = ccf(df["Value_0"], df["Value_1"], adjusted=False, fft=True)
[13:49:17] <mickey8> TypeError: 'numpy.ndarray' object is not callable
[13:49:28] *** Quits: ekathva (~ekathva@2001:999:53:cee3:97a6:75f6:a877:3ffd) (Quit: Leaving)
[13:49:36] <mickey8> this is literally the line, and it happens with a certain df
[13:49:45] <mickey8> df.head() looks fine, idk what else to check?
[13:50:37] *** Joins: mcope (~matt@user/mcope)
[13:50:57] *** Joins: fef (~thedawn@user/thedawn)
[13:51:31] *** Joins: Luke_LM (~Luke_LM_4@cpc72411-sotn15-2-0-cust758.15-1.cable.virginm.net)
[13:51:34] *** Joins: kts_ (~kts@103.73.237.61)
[13:52:03] *** Quits: kts (~kts@103.73.237.122) (Ping timeout: 256 seconds)
[13:52:17] *** Joins: caveman__ (~caveman@gateway/tor-sasl/caveman)
[13:52:26] *** Joins: Klinda (~superleag@user/klinda)
[13:53:40] <jinsun> what is type(ccf) ?
[13:54:52] <mickey8> ccf is a function, it's statsmodels.tsa.stattools.ccf
[13:55:34] <jinsun> did you print(type(ccf)) and check that?
[13:55:56] <mickey8> yeah. it's a function at first, and apparently it becomes a numpy.ndarray after the first call. fml
[13:56:06] <mickey8> found the issue
[13:56:12] <mickey8> jinsun <3
[13:56:30] *** Joins: pro_z_ (~pro_z@37.214.83.4)
[13:56:35] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[13:57:25] *** Joins: masoudd_ (~masoudd@user/masoudd)
[13:57:44] <jinsun> these are the kind of problems type checkers solve, unfortunately type hints for the scientific packages are not very good yet
[13:57:56] *** Quits: masoudd (~masoudd@user/masoudd) (Killed (NickServ (GHOST command used by masoudd_)))
[13:57:57] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[13:58:02] *** masoudd_ is now known as masoudd
[13:59:05] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[14:00:33] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 256 seconds)
[14:01:03] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:b4e8:6f53:6fdf:55e6)
[14:01:06] *** Joins: panella32 (~panella32@154.6.22.11)
[14:02:26] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[14:02:59] <energizer> surely any of the checkers would catch an "is not callable"
[14:03:33] *** Quits: bluedust (~bluedust@117.193.122.44) (Remote host closed the connection)
[14:06:06] <jinsun> yeah but the type hints suck so much that you have to disable the checker or switch to basic mode, where any non-annotated thing becomes Any
[14:06:38] <jinsun> well numpy is not that bad now
[14:07:04] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[14:07:11] <energizer> whenever i hear array people talking about types they seem to want a shape checker
[14:07:51] <jinsun> yeah numpy annotations are kinda designed with shape checking in mind, even when it was not supported
[14:08:12] <jinsun> now PEP 646 is accepted so the type system is moving towards that directionn
[14:09:04] <energizer> oh yeah i heard something like that.
[14:09:17] <energizer> i didnt read it tho
[14:09:56] *** Joins: c4017w__ (~c4017@209.52.68.8)
[14:09:58] *** Joins: maxzor_ (~maxzor@2a01cb04054faa0098bd91394fed2f26.ipv6.abo.wanadoo.fr)
[14:10:36] *** Quits: bitblit_ (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 276 seconds)
[14:11:02] *** Joins: bitblit_ (~bitblit@gateway/tor-sasl/bitblit)
[14:11:22] <energizer> whoa
[14:11:26] <energizer> For example, with an imaginary syntax, we could write:
[14:11:26] <energizer> def f(array: Array[TimeValue: TimeType]): ...
[14:12:24] *** Quits: walterwhip (~www@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[14:13:31] <ssbr> const generics WHEN
[14:13:35] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[14:14:11] <energizer> well, they're const. so, ALWAYS
[14:16:59] <energizer> hmm i googled that and it looks quite a lot like dependent types
[14:17:20] *** Joins: dvx (~dvx@5.181.92.64)
[14:17:21] *** Joins: bytehackr (~Sandipan@45.249.73.155)
[14:18:43] *** Quits: hams (~hams@user/hams) (Read error: Connection reset by peer)
[14:18:49] *** Joins: yoro (~yoro@195.206.116.106)
[14:19:03] *** Quits: xheimlich (~xheimlich@179.218.1.150) (Read error: Connection reset by peer)
[14:19:15] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[14:22:33] *** Joins: xheimlich (~xheimlich@179.218.1.150)
[14:23:39] *** Joins: zen_coder (~zen_coder@141.113.64.75)
[14:24:04] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[14:24:18] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[14:25:05] *** Joins: rendar (~rendar@user/rendar)
[14:25:37] *** Parts: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[14:25:49] *** Quits: yoro (~yoro@195.206.116.106) (Quit: Leaving)
[14:25:50] *** Joins: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1)
[14:26:12] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[14:26:37] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 240 seconds)
[14:26:43] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[14:26:56] *** Joins: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9)
[14:27:11] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[14:27:41] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[14:27:45] *** Joins: yoro (~yoro@195.206.116.106)
[14:28:17] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[14:28:18] *** Quits: yoro (~yoro@195.206.116.106) (Client Quit)
[14:28:32] *** Joins: yoro (~yoro@195.206.116.106)
[14:29:39] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[14:30:28] *** Joins: spinningCat (~spinningC@94.54.210.37)
[14:31:05] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 250 seconds)
[14:32:52] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[14:33:12] *** Joins: Viewday111 (~Viewday@user/viewday)
[14:33:51] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[14:34:47] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[14:34:47] *** Viewday111 is now known as Viewday11
[14:35:30] *** Joins: HiccupJul (~HiccupJul@cpc122682-reig6-2-0-cust39.6-3.cable.virginm.net)
[14:36:07] <ThePhilgrim> Hi, my project file structure looks like this https://dpaste.com/5WDTKDL2C . If I, in server.py (for example), do "from mantatail import commands, errors", all my pytest tests pass fine. However, mypy complains with error "Cannot find implementation or library stub for module". If I change the imports to just "import commands, errors", mypy is happy, but the pytest suite gives me error "ModuleNotFoundError: No module named 'commands'" . I've been tryi
[14:36:35] <ThePhilgrim> (Running irc on a client under development. If my long message was cut off somewhere in the middle, please tell me :))
[14:38:21] <HiccupJul> If I wanted to create a simple static site from some data, would it make sense to use string formatting? Or would it be better to use a library such as an XML one? I don't want to use a full-blown static site generator, as those seem to require learning a new syntax and have more features than I need.
[14:38:44] *** Joins: kilitary (~kilitary@188.242.187.4)
[14:39:19] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[14:39:32] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[14:40:10] <jazzy> sounds like it'd be a real hassle to make changes to structure later on
[14:40:25] *** Joins: Z-cat (~Z-cat@user/z-cat)
[14:40:36] <deniska> HiccupJul: I use jinja2 for this
[14:40:49] *** Quits: kevr (~kevr@user/kevr) (Remote host closed the connection)
[14:41:22] *** Joins: greedom (~greedom@p200300de673482009f127552c29b5718.dip0.t-ipconnect.de)
[14:41:35] *** Joins: kevr (~kevr@user/kevr)
[14:41:38] *** Quits: greedom (~greedom@p200300de673482009f127552c29b5718.dip0.t-ipconnect.de) (Remote host closed the connection)
[14:42:31] *** Joins: greedom (~greedom@p200300de673482009f127552c29b5718.dip0.t-ipconnect.de)
[14:44:11] *** Quits: Jong (~Jong@163.114.132.5) (Ping timeout: 256 seconds)
[14:44:40] *** Joins: beco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73)
[14:44:47] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[14:45:37] *** Joins: tomeaton17 (~tomeaton1@92.234.2.175)
[14:46:57] *** Quits: kts_ (~kts@103.73.237.61) (Quit: Konversation terminated!)
[14:46:59] <tomeaton17> Hi, I have a dataset and I want to display it in a different way. Each row has a column which is either zero or one. There is also another column which is its class. I want to display the total number zero and one for each class. how can I do that with pandas or something similar?
[14:47:32] *** Quits: p-i- (~Ohmu@2403:6200:8978:7ad7:d1c7:ded6:188d:580e) (Quit: Leaving...)
[14:49:00] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[14:49:17] *** Quits: szymon (~ugh@5.253.206.218) (Ping timeout: 256 seconds)
[14:51:34] *** Joins: savolla (~savolla@88.227.92.215)
[14:52:24] *** Quits: savolla (~savolla@88.227.92.215) (Client Quit)
[14:53:35] *** Quits: zen_coder (~zen_coder@141.113.64.75) (Quit: Konversation terminated!)
[14:53:50] *** Joins: zen_coder (~zen_coder@141.113.64.75)
[14:55:33] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 250 seconds)
[14:56:07] *** Quits: canton7 (~canton7@about/csharp/canton7) (Quit: ZNC - http://znc.in)
[14:56:35] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[14:56:46] *** Joins: canton7 (~canton7@about/csharp/canton7)
[14:56:56] *** Quits: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9) (Quit: Leaving)
[14:57:02] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[14:57:43] *** Joins: djhankb (~djhankb@208.113.164.68)
[14:58:02] *** Quits: canton7 (~canton7@about/csharp/canton7) (Client Quit)
[14:58:40] *** Joins: canton7 (~canton7@about/csharp/canton7)
[14:58:49] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[15:01:08] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[15:02:19] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Ping timeout: 256 seconds)
[15:02:19] *** Quits: widp (~user@124.123.106.203) (Ping timeout: 256 seconds)
[15:02:28] *** Quits: upsala (~zcb@185.213.155.252) (Quit: WeeChat 3.4)
[15:02:46] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Read error: Connection reset by peer)
[15:02:57] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 240 seconds)
[15:03:10] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[15:03:28] <jinsun> tomeaton17: pandas DataFrames have .groupby and .count which can help with this
[15:03:37] *** Quits: edd_lc (~edd_lc@85.64.225.197.dynamic.barak-online.net) (Ping timeout: 240 seconds)
[15:10:25] *** Joins: c4017w_ (~c4017@209.52.68.8)
[15:11:09] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[15:12:08] <HiccupJul> thanks, i'll look at those
[15:12:10] *** Quits: HiccupJul (~HiccupJul@cpc122682-reig6-2-0-cust39.6-3.cable.virginm.net) (Quit: Leaving)
[15:12:42] *** Joins: widp (~user@124.123.106.203)
[15:13:24] *** Quits: maxzor_ (~maxzor@2a01cb04054faa0098bd91394fed2f26.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[15:13:30] *** Joins: maxzor__ (~maxzor@2a01cb04054faa0098bd91394fed2f26.ipv6.abo.wanadoo.fr)
[15:14:13] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[15:15:51] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[15:16:49] *** Quits: n0cturna1 (~n0cturna1@h155173.upc-h.chello.nl) (Quit: WeeChat 3.4)
[15:17:05] *** Quits: panella32 (~panella32@154.6.22.11) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:18:15] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[15:18:57] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 240 seconds)
[15:19:53] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[15:21:56] *** Quits: nomic (~nomic@2a00:23c7:ec90:a501:e4ec:5860:b72a:614a) (Remote host closed the connection)
[15:22:57] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[15:23:37] *** Quits: pycode1 (~pycode3@2001:b07:5d28:551:ea81:84e5:d2f2:2b9c) (Ping timeout: 256 seconds)
[15:26:23] <jim> hi, I'm trying to find out why a string doesn't match; visibly it should...
[15:26:41] *** Quits: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de) (Ping timeout: 256 seconds)
[15:26:58] <jim> https://github.com/jwlynch/IRCnames-improved-parser.git
[15:27:07] <jim> on branch config-file
[15:29:17] *** micronnn is now known as micronn
[15:29:38] <nedbat> jim: can you link us to a specific line?
[15:30:08] *** karl_AFK is now known as karlnashville
[15:30:11] <jim> heya nedbat... sec
[15:30:25] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8) (Ping timeout: 256 seconds)
[15:30:27] <jim> do you have that branch?
[15:31:39] *** Joins: mattfoxxx (~mattfoxxx@200116b822ba5e00f9783ff2bfc0cc37.dip.versatel-1u1.de)
[15:31:41] <nedbat> jim: you can visit the branch and file you mean on github, and give us a link
[15:31:52] <jim> if you look at line 38, that's the start of a small function that is supposed to parse the file
[15:32:11] <nedbat> jim: branch and file: link
[15:32:40] <jim> so I would do that off the github page of it?
[15:33:21] <bjs> jim: do you mean https://github.com/jwlynch/IRCnames-improved-parser/blob/config-file/rasPi2.py#L38 this function?
[15:33:31] <bjs> you didn't actually say which file... so I'm guessing ?
[15:34:14] *** Joins: f1se4 (~f1se4@133.86.14.37.dynamic.jazztel.es)
[15:34:31] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:39] *** Quits: Alexer (~alexer@alexer.net) (Ping timeout: 256 seconds)
[15:37:12] <jim> yep that's it... I could not find a way to copy the link (right click on line did not have the menu entry)
[15:37:24] *** Quits: mattfoxxx (~mattfoxxx@200116b822ba5e00f9783ff2bfc0cc37.dip.versatel-1u1.de) (Quit: WeeChat 3.1)
[15:37:42] *** Quits: caveman__ (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[15:38:14] <jim> if you run it, you'll see the output of those two prints in the func
[15:38:14] *** Joins: mattfoxxx (~mattfoxxx@200116b822ba5e00f9783ff2bfc0cc37.dip.versatel-1u1.de)
[15:38:42] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 250 seconds)
[15:38:43] <jinsun> clicking on line number changes the url
[15:39:06] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[15:39:55] <jim> I wonder if output of parser.read() is somehow different from the path parameter to that func
[15:40:44] <bjs> jim: as a rule we won't run random code from the internet (no offence to you specifically),  can you run it and show us what those prints output?
[15:41:18] <jim> also notice I wrote a func called dex, line 15 same file,
[15:41:58] <jim> ok, one sec
[15:44:34] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[15:45:51] <jim> here it is: https://termbin.com/ldtf
[15:46:57] *** Quits: gjvc (~gjvc@user/gjvc) (Quit: leaving)
[15:47:15] *** Joins: gjvc (~gjvc@user/gjvc)
[15:47:37] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 240 seconds)
[15:48:13] <jim> well I know output of parser.read() is a list, and path is a string
[15:48:58] *** Quits: gjvc (~gjvc@user/gjvc) (Client Quit)
[15:50:01] <bjs> jim: well a PosixPath isn't a string
[15:50:03] <bjs> they are different types
[15:50:04] *** Joins: gjvc (~gjvc@user/gjvc)
[15:50:13] <jim> so I hardwired parser.read()[0] (not exactly like that)
[15:50:15] *** Joins: water_27300935_ (~xe@182.90.128.148)
[15:50:40] *** Quits: kilitary (~kilitary@188.242.187.4) (Read error: Connection reset by peer)
[15:50:52] <jim> what's the normal way of representing posixpath? as a bytes? or a string/
[15:50:54] <jim> ?
[15:51:01] <bjs> jim: as a PosixPath
[15:51:06] <bjs> a PosixPath *is* a representation
[15:51:29] <bjs> jim: maybe you want to convert the string from the file into a path
[15:51:55] <bjs> like `result_paths = [pathlib.Path(p) for p in result]` and use this instead.
[15:51:58] <jim> well is the items of the output of parser.read(), a list of posixpaths?
[15:52:05] <bjs> jim: no it's a list of strings
[15:52:11] *** Quits: Fairy (~Fairy@ti0004a400-5385.bb.online.no) (Ping timeout: 256 seconds)
[15:52:34] <bjs> jim: look at your output, doReadConfig output is <a list of strings> and configFilePath is <a PosixPath>
[15:52:40] <jim> oh, so I need a new list which converts each item of the old list into a posix path?
[15:52:50] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[15:52:56] <bjs> jim: well dex() isn't working because the PosixPath is not in the list of strings
[15:52:59] *** Joins: msek_ (~Username@pd9fa841f.dip0.t-ipconnect.de)
[15:53:50] <bjs> (because it's a PosixPath, and the list contains strings not PosixPaths)
[15:54:09] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[15:54:15] <jim> I don't remember if my assumption that dex should search for -strings- in a list, got codified into that func
[15:55:02] <bjs> jim: well, `dex` is a weird function but it doesn't care about strings-or-not
[15:55:16] <msek_> hello, could somebody explain to me a noob question about joining results in a loop? using .append or .concatenante destroys my structure after the loop :(
[15:55:36] *** Joins: Alexer (~alexer@alexer.net)
[15:55:39] <jim> I think in reality they're all supposed to be paths, so I can try to convert, and get away from dex()
[15:55:43] <bjs> jim: the problem is in your `doReadConfig`, where `configPath` is a PosixPath object, and `result` is a list of string objects.
[15:55:50] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[15:55:59] <bjs> jim: if you want them to all be pathlib Path objects, you can make a new list out of `result` like I showed above
[15:56:15] <bjs> msek_: what do you mean by "destroys" your structure?  maybe you have an example you can share?
[15:57:08] *** Joins: ln43 (~ln43@user/ln43)
[15:57:17] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 240 seconds)
[15:58:19] <water_27300935_> Hi, which code to implement this gui?
[15:58:23] <water_27300935_> https://ibb.co/dmmsQv1
[15:58:30] <msek_> very simple. I am looping over a opencv function: "hough_lines = cv2.HoughLines(img_hough,rho = 1,theta = 1*np.pi/180,threshold = 165)" with different pictures. the results of hough_lines shall grow. However, I always end up in an array stack or the shape of hough_lines is not maintaned
[15:58:37] <ln43> Hy all...  i have a panda dataframe with columns name as multindex (since the table in excel was with multiple headers)... now my concern is how to structure the sql table
[15:58:40] <jim> bjs, mainly, I can use == on two Paths?
[15:58:41] <water_27300935_> https://github.com/deepfakes/faceswap
[15:58:52] <ln43> is it possible to have an sql table with multiple headers ?
[15:58:57] <bjs> jim: yes
[15:59:30] *** Quits: mattfoxxx (~mattfoxxx@200116b822ba5e00f9783ff2bfc0cc37.dip.versatel-1u1.de) (Ping timeout: 250 seconds)
[15:59:37] <bjs> msek_: i'm not sure what you mean by "in an array stack"
[16:00:12] <jim> is there an "automatic" way to compare two types to see if they're compatible (or at least, == can be used between them)?
[16:00:17] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[16:00:28] *** Joins: ice9 (~ice9@user/ice9)
[16:00:28] <bjs> jim: I'm not sure why you're asking this
[16:00:56] <bjs> jim: can't you just `result_paths = [pathlib.Path(p) for p in result];  if configPath not in result_paths: print('error ...')`
[16:00:59] <ln43> is it possible ?
[16:01:20] <msek_> if I do such a simple loop:
[16:01:21] <msek_> found_hough_lines = np.zeros(shape=(1,1,2),dtype=np.float32) # np.zeros((15,1,2), dtype=np.float32)
[16:01:21] <msek_>         for img in images:
[16:01:21] <msek_>             hough_lines = cv2.HoughLines(img,rho = 1,theta = 1*np.pi/180,threshold = 165)
[16:01:21] <msek_>             found_hough_lines = np.concatenate(found_hough_lines, hough_lines)
[16:01:35] *** Joins: JC5 (~X@user/jc5)
[16:01:37] <msek_> then shape of "hough_lines" and "found_hough_lines" is different
[16:02:19] <bjs> msek_: hough_lines is a numpy array?
[16:02:30] <jim> if the items of result were originally Paths, how did they get converted, I guess to strings?
[16:02:41] <ln43> the quick answer seems to be no
[16:02:42] <bjs> jim: I don't know what you mean, they weren't paths, they are strings
[16:03:14] <bjs> jim: look at the output you showed me it says "doReadConfig output is <some list of strings>"  there are no pathlib Path objects here.
[16:03:22] *** Parts: ln43 (~ln43@user/ln43) ()
[16:03:46] <bjs> msek_: I mean if you're appending/contatenating anything that sounds like that then the shapes will be different as you're adding more data. How exactly were you wanting to "combine" the arrays?
[16:03:50] <msek_> according to documentation it returns "any". in fact it is an array... can I post pictures ?
[16:04:11] *** Joins: bluedust (~bluedust@117.193.122.44)
[16:04:40] <msek_> the result should be that I have one variable in which I have ALL found hough lines of ALL pictures.
[16:04:54] <bjs> msek_: but then, the shape *will* be different no?
[16:05:11] <bjs> if one image is (100,100) let's say, then your final found_hough_lines  cannot also be (100,100) as that only leaves space for 1 image
[16:06:01] <jim> if the "result" you mean, is the value returned by doReadConf(), that was the output of ConfigParser.read()
[16:06:26] <msek_> coming from my java world no :). the structure returned is always like this "> 00: array([[767., 1.6555]], dtype=float32)" for any input image
[16:06:55] <jim> so if ConfigParser.read() produces a list of strings, that would make sense
[16:06:59] *** karlnashville is now known as karl_AFK
[16:07:11] <msek_> if 16 houghlines are found, the last element is [15] and I want to add in the next iteration number [16]
[16:07:33] <jim> let's see what's really there
[16:07:46] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[16:08:14] <msek_> so I have two arrays and I want to merge them in each iteration
[16:08:22] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[16:08:54] <bjs> msek_: what is the shape of each hough_lines array and what do you want the shape of the final found_hough_lines to be?
[16:08:57] *** Quits: bluedust (~bluedust@117.193.122.44) (Ping timeout: 240 seconds)
[16:10:03] <jim> ok, so configFilePath is clearly a string value, that came about in that function by coming in on the function's parameter
[16:10:28] <bjs> jim: your output was configFilePath is PosixPath('/home/jim/python/IRCnames-improved-parser/IRCnamesBot.cfg')
[16:10:36] <bjs> it's clearly *not* a string value, it's a PosixPath no?
[16:10:46] <bjs> it says PosixPath right there
[16:10:56] *** Joins: c4017w__ (~c4017@209.52.68.8)
[16:10:58] <msek_> it is an array of tuples of float32
[16:11:03] <bjs> msek_: of tuples!?
[16:11:07] <jim> bjs, right, clearly not
[16:11:23] <jim> what I'm wondering, is how it got there
[16:11:39] *** Joins: mattfoxxx (~mattfoxxx@200116b822ba5e00f9783ff2bfc0cc37.dip.versatel-1u1.de)
[16:11:42] <bjs> jim: well line 36 was `configFilePath = Path(pathname) / "IRCnamesBot.cfg"`
[16:11:52] <bjs> So I'm taking a wild guess that line is where the Path object came from :P
[16:12:05] <bjs> and path objects are good,  you probably *do* want to use path objects as much as possible
[16:12:15] <jim> exactly
[16:12:25] <bjs> msek_: that doesn't seem right, but okay so you get like an array of shape (100,2) (100 rows with 2 columns)?
[16:12:33] <bjs> msek_: what do you want the output shape to be? of the found_hough_lines ?
[16:12:51] <jim> so if I can keep that a posix path instead of a string, I have a chance
[16:12:55] <bjs> jim: so what is confusing? line 36 makes a Path object, and you pass that to doReadConfig and that's why `path` is a Path
[16:12:59] <bjs> jim: what do you mean "keep" ?
[16:13:16] <bjs> jim: you didn't convert it to a string anywhere
[16:13:35] <jim> I don't completely understand how I got a string... I'll break that line down and see what's what
[16:13:44] <bjs> jim: look at your output https://termbin.com/ldtf,  the doReadConfig  output is a string
[16:13:57] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[16:13:59] <msek_> this is my current result: https://ibb.co/qx8J321 as you can see I have 2 iterations with an init of zeros. But I dont want indexes I want them all in only one set
[16:14:01] <bjs> (or a list of strings)
[16:14:26] <jim> so that's the output of ConfigParser.read()
[16:14:31] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[16:14:32] <bjs> jim: yes
[16:14:37] *** Joins: esther (~esther@2607:fb90:5fee:f230:d48a:4fb7:d97f:7d28)
[16:14:49] <jim> is that what it does? give me a list of strings?
[16:14:52] <bjs> Yes
[16:15:00] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[16:15:34] <bjs> jim: ConfigParser doesn't know they are supposed to be paths. You can make a list of paths from that list of strings by going `result_paths = [pathlib.Path(p) for p in result]` or something similar
[16:15:42] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[16:15:46] <jim> can the parser be made to listify path objects instead of strings?
[16:16:00] <bjs> jim: i've given you the exact line you can copy/paste like 4 times now
[16:16:02] <bjs> I'm going to stop replying :P
[16:16:53] <jim> I don't think you're answering the question I'm asking though -- no offense --
[16:17:14] <bjs> jim: ConfigParser gives you a list of strings,  you want a list of paths, so make a new list with Paths in it.
[16:17:36] <jim> and can't be forced otherwise. ok
[16:17:41] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[16:17:50] *** Joins: hlauk (~hlauk@176.33.108.116)
[16:18:37] *** Quits: esther (~esther@2607:fb90:5fee:f230:d48a:4fb7:d97f:7d28) (Ping timeout: 240 seconds)
[16:18:48] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[16:18:57] *** Quits: water_27300935_ (~xe@182.90.128.148) (Ping timeout: 240 seconds)
[16:19:03] *** Quits: greedom (~greedom@p200300de673482009f127552c29b5718.dip0.t-ipconnect.de) (Remote host closed the connection)
[16:19:11] <msek_> @bjs I got it!!! as I said a noob question. I must not use .append but .extend()
[16:19:15] <msek_> found_hough_lines.extend(hough_lines) does the trick
[16:19:30] <jinsun> well, you can monkeypatch ConfigParser.read() probably to convert strings to path, f you don't like doing it as a separate step
[16:19:52] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 250 seconds)
[16:20:38] <jinsun> but as the name suggests, it is not a good thing to do, and you'll still have to do it yourself
[16:21:10] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 250 seconds)
[16:21:19] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[16:21:20] *** Joins: water_27300935_ (~xe@182.90.128.148)
[16:25:57] *** Quits: mattfoxxx (~mattfoxxx@200116b822ba5e00f9783ff2bfc0cc37.dip.versatel-1u1.de) (Ping timeout: 256 seconds)
[16:27:05] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[16:27:24] <jim> ok, now it seems like dex is comparing posixpath against posixpath
[16:28:00] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[16:28:05] *** Quits: elmcrest (~elmcrest@static.48.211.217.95.clients.your-server.de) (Quit: Ping timeout (120 seconds))
[16:28:18] <bjs> jim: note that you can just use `in` on a list.
[16:28:34] <bjs> jim: `if item in some_list: print("it was in there")` or `if item not in some_list: print("it's not in there")`
[16:28:50] <bjs> rather than getting the index, and catching the error, then returning -1, and then checking if it was -1
[16:30:09] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[16:30:09] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[16:30:20] <bjs> but has the same overall effect
[16:30:30] <jim> the thing I got is almost working though :)
[16:30:39] <iflema> and a fstring for the if/else
[16:31:52] *** Joins: kosh (~kosh@user/kosh)
[16:32:13] *** Joins: nomic (~nomic@185.217.117.244)
[16:32:32] <jim> also, I'm finding out that the path I input to the ConfigParser is -not- a string, it's a posixpath... not blaming anyone, but it's just frustrating :)
[16:32:36] *** Joins: Viewday119 (~Viewday@user/viewday)
[16:32:46] <jim> so
[16:33:07] <jim> it's the copnfigparser that converts what I give it, from a posixpath to a string
[16:33:18] *** Quits: hlauk (~hlauk@176.33.108.116) (Quit: Leaving)
[16:33:58] *** Joins: fooman2011 (~fooman201@157.206.119.80.rev.sfr.net)
[16:34:11] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[16:34:11] *** Viewday119 is now known as Viewday11
[16:34:34] <bjs> jim: no,  the "path"/"configFilePath" were always PosixPaths and were not converted to strings.  The ConfigParser opened the file at that path and read the config file, and returns the contents of that config file (strings).
[16:35:51] *** Joins: caveman__ (~caveman@gateway/tor-sasl/caveman)
[16:36:23] *** Joins: d1cor (~diego@179.63.242.122)
[16:36:50] <bjs> sorry no, it doesn't return the contents I got confused for a bit there
[16:37:12] <fooman2011> Hello, I'm trying to run a pip3 install command from an Ubuntu inside WSL1 and in the /mnt/c path. I get the same error as decribed here: https://askubuntu.com/questions/1129782/running-python3-setup-py-bdist-wheel-on-a-mnt-c-path-results-in-a-errno The problem is that i'm doing a pip3 install and not a python3 setup.py so I cannot change the "--bdist-dir" parameter. Could you please tell me how to solve this problem ?
[16:37:54] <bjs> jim: So what is actually happening here is that you give ConfigParser a path-like object (in Python, these can be anything like strings, PosixPath or various objects with special methods). But the operating system does not know how to deal with these, so ConfigParser has to actually create a filesystem path (which may be a string, yes)
[16:38:30] *** Quits: humberto1 (~humbertow@187.202.198.64) (Ping timeout: 250 seconds)
[16:38:47] <bjs> So pathlib.Path goes in, and string comes out (because presumably that's what https://docs.python.org/3/library/os.html#os.fspath gave you for the given PosixPath)
[16:39:22] <bjs> and there is no way to tell configparser "give me back the actual original path-like objects I put in"
[16:40:09] <grym> there are de/serializers that _do_ give you paths back, but configparser isn't one of them
[16:41:32] *** Quits: duuude (~user@user/duuude) (Ping timeout: 250 seconds)
[16:42:03] *** Quits: caveman__ (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[16:42:45] <jinsun> hmm, maybe you can feed configparser to pydantic basemodel to do it
[16:42:57] *** Quits: snalty (~Shhh@user/snalty) (Ping timeout: 240 seconds)
[16:43:07] *** Joins: leitz (~LeamHall@072-182-158-027.res.spectrum.com)
[16:43:11] <grym> that would do it
[16:43:29] *** Joins: snalty (~Shhh@user/snalty)
[16:43:45] <bjs> jim: this is why I said you need to convert things to Path objects, because the string (or bytes) objects that os.fspath gives you (e.g. that which configparser.read returns) are not equal to the pathlib.Path objects that went in
[16:43:48] <jinsun> though not sure if it will just take it directly, it is kinda dict like but not dict
[16:43:59] <grym> jinsun: parse_raw miiight do it
[16:44:01] *** Quits: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr) (Remote host closed the connection)
[16:44:17] *** Joins: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr)
[16:44:30] <bjs> jim: sorry, I hope those last few messages explains much better than my earlier ramblings what is actually happening here?
[16:44:32] <grym> but i'd rather parse_obj(confgparser.whatever   or parse_obj(json.loads(...  or toml.loads
[16:45:24] <grym> fooman2011: you probably can change the location, though; make a venv somehwere that isn't /mnt/c
[16:46:19] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[16:46:35] *** Joins: spacemonk (~DELL@2001:8f8:1629:388d:21b0:210:845f:9d40)
[16:46:42] <jinsun> fooman2011: pip install has a  --global-option parameter which can forward args to setup.py, that might work
[16:46:46] <spacemonk> Hi
[16:46:50] <jinsun>  but really the better thing to do is move your files inside your wsl /home
[16:46:55] *** Quits: Phineas (~Phineas@user/Phineas) (Quit: Leaving)
[16:47:01] <fooman2011> jinsun, thanks a lot I will try it asap :)
[16:47:25] *** Joins: Phineas (~Phineas@user/Phineas)
[16:48:17] <fooman2011> jinsun, yeah moving file to /home is currently working, I would like to compare vs /mnt/c because it is more simple to use. ut currently I can't compare because of my problem
[16:48:57] *** Quits: widp (~user@124.123.106.203) (Ping timeout: 240 seconds)
[16:49:53] <leitz> If you have a dataclass, but you add behavior to it, why should it remain a dataclass?
[16:50:08] <bjs> leitz: what should it become instead?
[16:50:29] *** Joins: ice99 (~ice9@user/ice9)
[16:50:38] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 250 seconds)
[16:50:41] <spacemonk> hi
[16:50:46] <bjs> spacemonk: hi
[16:50:54] <ChrisWarrick> leitz: something being a dataclass is orthogonal to something having methods
[16:50:56] <leitz> bjs, just a regular class?
[16:51:05] *** Quits: spacemonk (~DELL@2001:8f8:1629:388d:21b0:210:845f:9d40) (Quit: Konversation terminated!)
[16:51:16] <bjs> leitz: but wouldn't you lose the benefits of it being a dataclass at that point?
[16:51:20] <ChrisWarrick> leitz: regular classes aren’t very convenient
[16:51:38] <bjs> leitz: because it still is a class with data on it, and dataclasses do all the work of implementing the annoying methods
[16:51:41] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 256 seconds)
[16:51:55] <grym> fooman2011: "doesn't work" doesn't seem like "more simple to use", to me
[16:51:56] <bjs> you can add methods to a dataclass to give it behaviours and that works just fine
[16:52:05] * leitz has never really understood the term "orthognal", when talking about programming stuff.
[16:52:16] <grym> leitz: "not related to"
[16:52:18] *** Joins: onichomp (~onichomp@2806:264:4408:5d:a80d:ebda:c447:6602)
[16:52:27] *** Joins: ice9 (~ice9@user/ice9)
[16:52:54] <leitz> bjs, that's what I've been doing, and as ChrisWarrick said (in reverse) I'm probably not yet using dataclasses well. Still learnng.
[16:52:58] <leitz> grym, thanks!
[16:53:16] <grym> leitz: i always think "metaphorically, has a zero dot product"
[16:53:23] *** Quits: ice99 (~ice9@user/ice9) (Read error: Connection reset by peer)
[16:53:38] *** Quits: onichomp (~onichomp@2806:264:4408:5d:a80d:ebda:c447:6602) (Read error: Connection reset by peer)
[16:53:42] *** Quits: fooman2011 (~fooman201@157.206.119.80.rev.sfr.net) (Quit: Leaving)
[16:54:16] *** Joins: onichomp (~onichomp@2806:264:4408:5d:a80d:ebda:c447:6602)
[16:55:41] <ChrisWarrick> leitz: I’d say using dataclass makes sense for a majority of classes
[16:55:52] *** Quits: tomeaton17 (~tomeaton1@92.234.2.175) (Quit: Client closed)
[16:56:08] *** Joins: dme86 (~dan@user/dan86)
[16:57:23] <leitz> ChrisWarrick, thanks. So far that bears true in what I'm doing. However, I'm painfully aware of how seldom I know what I'm doing.  ;)
[16:59:31] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:178:7edf:7ae2:b6e7)
[16:59:31] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:178:7edf:7ae2:b6e7) (Changing host)
[16:59:31] *** Joins: skapata (~Skapata@user/skapata)
[16:59:41] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[16:59:51] *** Joins: Grizzly (~grizzly@lfbn-idf1-1-2268-165.w92-151.abo.wanadoo.fr)
[17:00:05] *** Joins: zeden (~zeden@user/zeden)
[17:00:25] <jinsun> with the new names, attrs has better naming now, @define is more general purpose name, @dataclass can cause this kind of confusion
[17:00:43] *** Joins: sreve (~quassel@p4ff44d88.dip0.t-ipconnect.de)
[17:01:14] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[17:01:19] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[17:04:57] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[17:05:53] *** Quits: spinningCat (~spinningC@94.54.210.37) (Read error: Connection reset by peer)
[17:08:09] *** Joins: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de)
[17:10:09] *** Joins: plastico (~plastico@neomutt/plastico)
[17:10:31] *** karl_AFK is now known as karlnashville
[17:10:47] *** Joins: bluedust (~bluedust@117.193.122.44)
[17:11:25] *** Joins: c4017w_ (~c4017@209.52.68.8)
[17:12:17] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[17:13:03] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[17:14:30] *** Quits: whiterabbit[m] (~whiterabb@2001:470:69fc:105::1:61cb) (Quit: You have been kicked for being idle)
[17:14:55] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[17:14:57] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 240 seconds)
[17:15:20] *** Joins: greedom (~greedom@p200300de673482009f127552c29b5718.dip0.t-ipconnect.de)
[17:15:22] *** Joins: touch-face (~touch-fac@117.176.106.101)
[17:15:34] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[17:16:15] *** Joins: djhankb (~djhankb@208.113.164.68)
[17:16:46] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[17:18:02] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[17:20:35] *** Joins: SallyAhaj_ (SallyAhaj@user/sallyahaj)
[17:21:13] *** Parts: water_27300935_ (~xe@182.90.128.148) (WeeChat 3.4)
[17:21:20] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[17:21:50] *** Joins: bluedust_ (~bluedust@185.248.85.26)
[17:22:07] *** Joins: kilitary (~kilitary@188.68.215.221)
[17:22:57] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Ping timeout: 240 seconds)
[17:23:34] *** Joins: Ratticus (~RatticusZ@cpe-66-67-92-65.twcny.res.rr.com)
[17:24:04] *** Quits: karlnashville (~karl@2601:482:4280:4cf0:9403:82ba:aaf8:ab8b) (Remote host closed the connection)
[17:25:17] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 240 seconds)
[17:25:18] *** Quits: bluedust (~bluedust@117.193.122.44) (Ping timeout: 250 seconds)
[17:26:23] *** Quits: SallyAhaj_ (SallyAhaj@user/sallyahaj) (Quit: Leaving)
[17:26:45] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8)
[17:28:37] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Ping timeout: 240 seconds)
[17:29:37] *** Quits: sanketdg (~Guest26@49.37.46.73) (Quit: Connection closed)
[17:30:59] <jinsun> so I know the last one here is buggy, https://docs.python.org/3/library/warnings.html#describing-warning-filters
[17:31:17] *** Quits: kilitary (~kilitary@188.68.215.221) (Ping timeout: 240 seconds)
[17:31:21] <jinsun> mymodule[.*] doesn't work, and mymodule.* doesn't work either
[17:31:50] <jinsun> but can I at least do a specific submodule of mymodule?
[17:32:01] <jinsun> mymodule.mysubmodule doesn't seem to work either
[17:33:17] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[17:34:04] <jinsun> and just mymodule doesn't apply it for submodules
[17:34:38] *** Joins: dreamon (~dreamon@p54b14d36.dip0.t-ipconnect.de)
[17:37:18] *** Joins: csm3105 (~csm3105@static-107-54-230-77.ipcom.comunitel.net)
[17:38:02] *** Quits: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi) (Ping timeout: 268 seconds)
[17:38:22] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[17:39:07] *** Quits: csm3105 (~csm3105@static-107-54-230-77.ipcom.comunitel.net) (Client Quit)
[17:39:35] *** Joins: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi)
[17:40:25] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 256 seconds)
[17:41:03] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[17:41:19] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[17:41:54] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[17:42:09] *** Joins: bluedust (~bluedust@117.193.122.44)
[17:42:21] *** Joins: Khepra (~ratrace@user/ratrace)
[17:42:31] *** Quits: f1se4 (~f1se4@133.86.14.37.dynamic.jazztel.es) (Read error: Connection reset by peer)
[17:42:52] <nedbat> jinsun: https://nedbatchelder.com/blog/201810/why_warnings_is_mysterious.html
[17:43:04] *** Joins: Collaken (~flo@ip4d17fdd1.dynamic.kabel-deutschland.de)
[17:43:21] <Khepra> Hello. I'm refreshing a Flask application virtualenv that hasn't been updated in over a year. Decided to create a whole new one and just pip install -r requirements.txt.    apparently, pip is no longer installing dependencies first, so I have to do them manually? or what am I missing here. I do use --no-binary :all: beacuse I want them built locally with CFLAGS
[17:44:20] <Khepra> for example, flask==2.0.2 is erroring out because tehre's no module werkzeug, and that module IS listed in requirements.txt and physically even before flask, in the file.
[17:44:57] <Khepra> so installed that, but it fails for no jinja2. that failed for no markupsafe, etc.... I have to install all the deps one by one and in order.   I'm definitely missing something here, just can't remember what, as this wasn't like that in the past.
[17:45:11] *** Quits: bluedust_ (~bluedust@185.248.85.26) (Ping timeout: 256 seconds)
[17:46:06] <jinsun_> nedbat: thanks, the first paragraph describes exactly what happened to me today :D
[17:46:32] <nedbat> jinsun: yeah, sad.
[17:46:48] *** Quits: BtbN (btbn@ffmpeg/developer/btbn) (Remote host closed the connection)
[17:46:56] <nedbat> Khepra: what is your version of pip?
[17:48:13] *** Joins: Fairy (~Fairy@ti0004a400-5385.bb.online.no)
[17:48:24] <Khepra> nedbat: 20.3.4, as installed by    python3 -m vevn <path>    in python 3.9.2 on debian
[17:48:33] <Khepra> *venv
[17:48:34] *** Joins: callq (~callq@92.119.19.230)
[17:49:31] *** Quits: parv (~quass@user/parv) (Quit: parv)
[17:49:46] *** Joins: BtbN (btbn@ffmpeg/developer/btbn)
[17:50:16] *** Joins: Everything (~Everythin@37.115.210.35)
[17:50:29] *** Quits: greedom (~greedom@p200300de673482009f127552c29b5718.dip0.t-ipconnect.de) (Remote host closed the connection)
[17:50:40] <Khepra> upgraded pip to 22.0.3 and still the same problem.
[17:50:42] *** Joins: kilitary (~kilitary@188.68.215.221)
[17:50:53] *** Joins: daidoji (~daidoji@104-52-250-5.lightspeed.gnvlsc.sbcglobal.net)
[17:51:04] *** Quits: Harlin_ (~DonQixote@75-163-136-96.clsp.qwest.net) (Quit: Leaving)
[17:51:13] *** Joins: kostkon (~androirc@2.142.66.94.static.otenet.gr)
[17:51:21] *** Joins: Harlin (~DonQixote@75-163-136-96.clsp.qwest.net)
[17:51:25] <jinsun_> nedbat: ah so it is completely broken
[17:51:28] *** Joins: Kruppt (~Kruppt@50-111-49-4.drhm.nc.frontiernet.net)
[17:51:43] *** Quits: nicode (~nic@2607:f2c0:9541:7100:1164:ccd2:17cc:5d1a) (Ping timeout: 250 seconds)
[17:52:04] <nedbat> jinsun: also sad
[17:52:08] <jinsun_> can't do 3rd party modules at all if I understood right
[17:52:35] *** Joins: badsektor (~badsektor@user/badsektor)
[17:52:38] <nedbat> jinsun_: i have managed to in coverage.py, but only by playing whackamole with all the different possibilities, i think
[17:52:55] <nedbat> Khepra: can you pastebin the terminal session where you tried to install, and it failed?
[17:53:12] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[17:54:26] *** Quits: Cyp (~cyp@213.237.88.120) (Read error: Connection reset by peer)
[17:54:51] *** Quits: mcope (~matt@user/mcope) (Quit: Konversation terminated!)
[17:58:43] <Khepra> nedbat: for example, fresh new virtualenv:  https://bpa.st/ZHKA
[17:59:03] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[17:59:56] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-e493-34a2-5f11-9e6f.res6.spectrum.com)
[18:00:24] <nedbat> Khepra: hmm, jinja2 declares that it needs markupsafe in order to install (https://github.com/pallets/jinja/blob/main/setup.py#L6), but pip isn't doing it first for some reason
[18:01:03] <Khepra> not just jinja. this is just as example the first failure. I install markupsafe manually, and then it fails on next dependency. and the next, adn so on
[18:01:05] *** Joins: Cyp (~cyp@213.237.88.120)
[18:01:06] <nedbat> Khepra: in the past, we've used a pre-requirements.txt to manually manage those problems.  I don't know if building from source makes it worse.
[18:01:33] <Khepra> in the past this worked without any problems. but last virtualenv rebuild from scratch was over a year go. plenty of pip versions bumped since then :)
[18:01:57] *** Quits: msek_ (~Username@pd9fa841f.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[18:02:04] <Khepra> is everything falling apart? pip search is out of comission for years now as well
[18:03:05] *** Quits: kilitary (~kilitary@188.68.215.221) (Ping timeout: 256 seconds)
[18:03:19] <nedbat> Khepra: i thought maybe jinja2 added that recently, but it's been there for 5 years
[18:03:29] <nedbat> Khepra: everything is not falling apart.  :)
[18:03:46] <grym> (pip search is permanently dead, though)
[18:03:47] *** Joins: MrCollinsGA (~MrCollins@38.21.140.217)
[18:04:28] *** Joins: widp (~user@124.123.107.54)
[18:04:32] <Khepra> I'm just wondering if this is yet anotehr regression by design, or a bug.
[18:04:46] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[18:04:52] *** Joins: vurr (~seymon@82.131.10.22.cable.starman.ee)
[18:05:03] <nedbat> Khepra: that i don't know.  "regression by design" sounds like kind of a negative sentiment though?
[18:06:19] *** Joins: msek_ (~Username@pd9fa841f.dip0.t-ipconnect.de)
[18:06:23] <Khepra> not at all. the whole upcoming changes to setup.py depreciation being one major example of it
[18:06:57] <Khepra> also... in light of severe and serious typosquatting chain-of-supply ttacks against pypi ... the death of search is now making it even harder to make sure we're selecting the correct package for installation.
[18:07:14] <Khepra> now I have to find out which of the several "click" packages, for example, is teh correct one and not some squatting malware.
[18:07:15] <ChrisWarrick> this looks like jinja2 doing weird things in its setup.py, but also your pip being in some strange version/configuration which avoids .whl files
[18:07:29] *** Joins: By3way (~byeway@2001:448a:50e0:3cb2:5ca4:7df4:e325:1d89)
[18:07:33] <Khepra> ChrisWarrick: that's deliberate. like I said, I want to build locally
[18:07:33] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[18:07:41] <ChrisWarrick> why though?
[18:07:50] <nedbat> Khepra: it can be difficult to understand the forces pressing on the pip and pypi developers
[18:08:00] <Khepra> the march=native CFLAG for Pillow, for example, is responsible for 2x improvement in performance on our EPYC Servers
[18:08:30] <ChrisWarrick> okay, but jinja2 is not a binary package
[18:08:32] <Khepra> that's why I want to build Pillow with local CFLAGS, and not rely on a generic whl
[18:08:38] <ChrisWarrick> perhaps you need to build Pillow separately
[18:08:45] <nedbat> Khepra: what do you think of the pre-requirements.txt idea?
[18:08:57] <Khepra> the point here is that this pattern worked in the past.    SOMETHING   changed since 2020 and this stopped working.
[18:09:03] <jim> bjs, no worries :) I'm just now making a new dict, populated with section names, each of which gets a dict which I want to populate with the items in the sections
[18:09:08] <Khepra> nedbat: I'll hve to look into that
[18:09:44] <Khepra> ChrisWarrick: if jinja is not bianary, does it have a whl?
[18:09:51] <ChrisWarrick> Khepra: yes
[18:10:04] <jim> how do I get each of these parts of a configparser that has read a config file?
[18:10:06] *** Joins: rsx (~dummy@ppp-188-174-130-198.dynamic.mnet-online.de)
[18:10:10] <Khepra> is this part of the upcoming depreciation of setup.py and switch to everything-whl ?
[18:10:12] <ChrisWarrick> Khepra: .whl files are used for both pure-python packages and compiled packages
[18:10:23] <ChrisWarrick> Khepra: not necessarily
[18:10:34] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:10:57] *** Quits: unyu (~pyon@user/pyon) (Ping timeout: 240 seconds)
[18:11:00] <Khepra> ChrisWarrick: problem is, I can't express --no-binary :all: for some packages with single requirements.txt. I'll have to look into these pre-requirements.txt and do some kind of separation, then, it seems.
[18:11:25] *** Joins: mug3n (~mugen@gateway/tor-sasl/mugen)
[18:11:53] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[18:11:56] *** Joins: c4017w__ (~c4017@209.52.68.8)
[18:12:59] *** Joins: damonlynch (~ngaio@static-68-235-44-27.cust.tzulo.com)
[18:14:11] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 256 seconds)
[18:14:18] *** Joins: goldfish (~goldfish@user/goldfish)
[18:14:50] <Khepra> nedbat: okay I thought you meant by pre-requirements some fancy feature of pip, but that's jsut a separtae requirements.txt, right?  nothing to do with --pre option?
[18:15:00] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 276 seconds)
[18:15:15] *** Joins: kts (~kts@103.73.237.119)
[18:15:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[18:15:32] <nedbat> Khepra: right, sorry
[18:15:57] <Khepra> yeah the only problem is some deps are three levels deep, soI'll need pre-pre-requirements.txt too :))
[18:16:08] <nedbat> Khepra: if you want to find out why it stopped working, #pypa might have experts, though it's very slow there
[18:16:19] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[18:16:21] <Khepra> nah. I'm going from declarative to imperative and having a .sh with pips. I need thsi to be CI'able from scratch.
[18:16:30] <nedbat> Khepra: i didn't mean to move all dependencies into pre-reqs, just the ones that are needed for setup.py
[18:16:35] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:b4e8:6f53:6fdf:55e6) (Read error: Connection reset by peer)
[18:16:51] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:90d6:f3c8:741b:677a)
[18:17:03] <Khepra> nedbat: yes and there's three levels of those.  two if you consider the explicit dependency as first level
[18:17:20] <Khepra> eg.   Flask -> jinja -> markupsafe
[18:17:29] *** Joins: WhiteLotus (~root@197.83.233.83)
[18:17:32] <Khepra> first install markupsafe, THEN install jinja, THEN install flask.
[18:17:51] <ChrisWarrick> how many packages benefit from manual builds?
[18:18:30] <Khepra> all that require binary builds will benefit from march=native. Pillow for example especially with 2x improvement in performance
[18:18:34] <ChrisWarrick> I’d put those in the pre-requirements and install them with compilation, then install the rest (including markupsafe/jinja/flask) from .whl’s from pypi
[18:19:39] *** Quits: TakinOver (~quassel@193.27.13.170) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:20:05] <grym> there's also pillow[simd]
[18:20:09] <grym> er, pillow-simd
[18:20:21] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[18:20:39] *** Quits: badsektor (~badsektor@user/badsektor) (Quit: Leaving)
[18:22:10] <bjs> jim: configreader object behaves like a dictionary, and it has a .sections() method to return section names. If that's what you're looking for?
[18:22:31] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[18:22:44] <jim> yeah, also, how to get the values of the options?
[18:22:46] <bjs> jim: so you can config = ConfigParser()  then config.read(some_path) then config.sections() is a list of sections,  and config['section']['key'] is the value
[18:23:06] <bjs> tbh I use json for everything nowadays
[18:23:19] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[18:23:23] <grym> ^
[18:23:37] <grym> maybe toml if human-editable is desirable
[18:23:38] <jim> so a json config files?
[18:23:55] <jim> it would be nice if they could edit it :)
[18:24:23] <grym> toml is less picky about when trailing commas are and are not allowed, and permits comments, but needs a third party parser
[18:25:09] <jim> ok... I could almost just return the parser for this :)
[18:25:18] <jinsun> if PEP 680 happens then stdlib will be able to read it at least, but for now you have to install tomli or something
[18:25:53] <grym> ^
[18:26:19] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 256 seconds)
[18:26:23] *** Parts: WhiteLotus (~root@197.83.233.83) ()
[18:26:43] *** Joins: cliluw (~cliluw@47.147.73.223)
[18:26:49] <Khepra> alright, separating local buildables into a  pre-requirements and installing separately with --no-binary :all:  then installing the rest regularly, they call came from whl and that worked.
[18:27:03] <Khepra> I am sure this is part of the upcoming depreciation of setup.py and switch to everything-whl.
[18:27:15] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 250 seconds)
[18:27:27] *** Quits: luva (~luva@146.70.62.254) (Ping timeout: 256 seconds)
[18:27:35] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[18:27:46] *** Quits: flea (nosoul@gateway/vpn/protonvpn/nosoul) (Quit: Leaving)
[18:27:55] <Khepra> alright. now to fix the fallout of yearful of neglect to upgrade deps piecemeal. hello Flask backwards incompatibilities, goodbye weekend.
[18:28:38] *** Quits: stwange (~j@82.21.202.140) (Quit: This computer has gone to sleep)
[18:28:46] *** Joins: luva (~luva@45.141.152.53)
[18:29:57] *** Joins: pycode1 (~pycode3@2001:b07:5d28:551:5288:89d0:60b2:e5a8)
[18:30:08] *** Joins: stwange (~j@82.21.202.140)
[18:30:13] *** Quits: kostkon (~androirc@2.142.66.94.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[18:30:30] <jinsun> jim: `{k: {**v} for k, v in {**config}.items()}` weird way but seems to be working
[18:32:01] *** Joins: karlnashville (~karl@2601:482:4280:4cf0:e226:76c7:c8d3:d99a)
[18:32:06] <MrCollinsGA> I am running this script google api upload script. https://paste.debian.net/1229688/     and I am getting this error when uploading to google cloud. https://paste.debian.net/1229684/   I am uploading 40-60gig size files. If anyone could help me decipher this I would greatly appreciate it. Thank you.
[18:32:45] *** Joins: Viewday113 (~Viewday@user/viewday)
[18:34:49] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[18:34:49] *** Viewday113 is now known as Viewday11
[18:34:57] *** Joins: vindex10 (~vindex10@gateway/tor-sasl/vindex10)
[18:36:57] *** Joins: esther (~esther@2607:fb90:5fe6:3c4:f59f:ec39:5ee9:7ca3)
[18:37:23] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[18:37:40] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:37:53] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Ping timeout: 256 seconds)
[18:38:20] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[18:38:31] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[18:38:54] <jinsun> Redirected but the response is missing a Location: header. doesn't seem like something a retry would fix
[18:39:18] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[18:39:21] <MrCollinsGA> jinsun yes I am perplexed and am burning google up looking for an answer or something to try.
[18:40:05] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[18:40:22] <ChrisWarrick> where did you get the script from?
[18:40:57] *** Quits: esther (~esther@2607:fb90:5fe6:3c4:f59f:ec39:5ee9:7ca3) (Ping timeout: 240 seconds)
[18:41:11] <MrCollinsGA> google cloud
[18:41:21] *** Quits: By3way (~byeway@2001:448a:50e0:3cb2:5ca4:7df4:e325:1d89) (Quit: Leaving)
[18:41:23] <ChrisWarrick> perhaps they have a more recent sample?
[18:41:29] <MrCollinsGA> direct from their page and it has worked in the past.
[18:41:33] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[18:41:37] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 240 seconds)
[18:43:07] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Quit: WeeChat 3.4)
[18:43:29] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 250 seconds)
[18:48:35] *** Joins: x_kuru (~xkuru@user/xkuru)
[18:49:41] *** Joins: lakrass (~lakrass@user/lakrass)
[18:50:13] *** Joins: runelind_ (~runelind@user/runelind)
[18:50:17] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 240 seconds)
[18:51:01] *** Quits: runelind (~runelind@user/runelind) (Ping timeout: 256 seconds)
[18:51:15] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 256 seconds)
[18:51:24] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[18:51:29] *** Joins: GanaGana (~GanaGana@2002:c9d1:fd31::c9d1:fd31)
[18:51:52] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[18:51:56] <GanaGana>         https://rollercoin.com/?r=kmp9xncg
[18:52:04] *** Parts: GanaGana (~GanaGana@2002:c9d1:fd31::c9d1:fd31) ()
[18:54:38] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[18:56:19] *** Quits: touch-face (~touch-fac@117.176.106.101) (Quit: Ping timeout (120 seconds))
[18:58:37] *** Joins: akk (~akk@75-161-95-245.albq.qwest.net)
[18:58:40] *** Quits: nomic (~nomic@185.217.117.244) (Quit: Leaving)
[18:58:47] <leitz> Am I correct in thinking that a dataclass can only take key word arguments?  my_class(a = "alpha",  = "beta")?
[18:59:31] *** karlnashville is now known as karl_AFK
[18:59:37] *** Quits: d1cor (~diego@179.63.242.122) (Ping timeout: 240 seconds)
[19:00:05] *** Joins: imp (~imp@138-59-122-25.static.sumicity.net.br)
[19:00:12] <Yhg1s> leitz: it depends entirely on the dataclass.
[19:00:22] *** Joins: mattfoxxx (~mattfoxxx@200116b822ba5e00f9783ff2bfc0cc37.dip.versatel-1u1.de)
[19:00:56] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[19:01:37] <leitz> Yhg1s, most of the data I have is stored in dicts, or json. That's what I'm trying to pass around, but the dataclass isn't handling it.
[19:01:58] *** Joins: pingpongball (~pingpongb@43.228.192.107)
[19:02:41] <Yhg1s> leitz: okay, so perhaps you should be showing us the data, the code and explain what it's doing and what you want it to do instead.
[19:03:10] *** Joins: jay-m126 (~jay-m@gateway/vpn/pia/jay-m126)
[19:03:12] <leitz> Well, in this case, one dataclass inherits from another, and the parent dataclass is taking the dict argument and setting it to the first key word argument.
[19:04:37] *** Quits: mattfoxxx (~mattfoxxx@200116b822ba5e00f9783ff2bfc0cc37.dip.versatel-1u1.de) (Ping timeout: 240 seconds)
[19:07:10] *** Quits: oriba (~oriba@dynamic-077-191-250-060.77.191.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:07:11] *** Quits: Collaken (~flo@ip4d17fdd1.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[19:07:49] *** Quits: vaio (~gary@user/ghost) (Remote host closed the connection)
[19:08:21] *** Joins: vaio (~gary@user/ghost)
[19:09:46] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[19:10:47] *** Joins: maxzor_ (~maxzor@2a01cb04054faa00939181896acf2434.ipv6.abo.wanadoo.fr)
[19:11:17] <leitz> The parent dataclass https://github.com/LeamHall/CharacterBible/blob/test_character/person/person.py    and  tests     https://github.com/LeamHall/CharacterBible/blob/test_character/test/test_person.py
[19:11:19] *** Joins: fef (~thedawn@user/thedawn)
[19:11:35] *** Joins: RougeR (~rougex250@user/rouger)
[19:11:59] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Ping timeout: 256 seconds)
[19:12:25] *** Joins: c4017w_ (~c4017@209.52.68.8)
[19:13:03] <leitz> The subclass is old code that I need to update:   https://github.com/LeamHall/CharacterBible/blob/test_character/person/character.py      and tests     https://github.com/LeamHall/CharacterBible/blob/test_character/test/test_character.py
[19:13:38] *** Joins: yoro_ (~yoro@5.2.79.146)
[19:13:38] *** Quits: pingpongball (~pingpongb@43.228.192.107) (Quit: Client closed)
[19:14:19] *** Joins: eson123 (~whatever@user/eson123)
[19:14:37] <leitz> There are builders (https://github.com/LeamHall/CharacterBible/blob/test_character/person/character_builder.py)  but I'm trying to figure out how to pass a dict to a dataclass. It seems much easier than a lot of key word arguments.
[19:14:49] <eson123> hm i heard some people said that in production while using flask i should be using the static folder to serve static files, is that true ? if it is then why ?
[19:14:49] *** Quits: maxzor (~maxzor@2a01cb04054faa00ecc4f4c39ad96c0f.ipv6.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[19:15:20] <ChrisWarrick> eson123: what other options do you have in mind as opposed to using the static folder?
[19:15:20] <RougeR> heya, im looking for some help writing a context manager which will start execute some code asynchronously. whilst the code is executing it will constantly will perform a check to see if it should kill the async code process. it will raise any exceptions from the async code and return the result once it completes
[19:16:00] <RougeR> something like what we see here: https://docs.python.org/3/library/concurrent.futures.html
[19:16:05] <eson123> ChrisWarrick: not much actually i kinda love using the static folder, the other option is a it more exhausted which is serve from directory using the function "send_from_directory"
[19:16:11] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[19:16:25] *** Quits: yoro (~yoro@195.206.116.106) (Ping timeout: 256 seconds)
[19:16:38] <ChrisWarrick> eson123: the static folder is the cleanest and most recognized option, it serves all files automatically
[19:16:39] *** Quits: davix (~nephilim@user/davix) (Read error: Connection reset by peer)
[19:16:52] <eson123> hm i guess what i heard was not true then
[19:16:53] <ChrisWarrick> eson123: but in production, it might be beneficial to offload serving static files to nginx directly
[19:17:05] *** Joins: davix (~nephilim@DSL62-0-142-225.bb.netvision.net.il)
[19:17:22] <jinsun> leitz: YourClass(**some_dict) ?
[19:17:52] *** Quits: loofy (~loofy@ip70-191-113-247.cl.ri.cox.net) (Changing host)
[19:17:52] *** Joins: loofy (~loofy@user/loofy)
[19:18:02] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[19:18:41] * leitz goes to try.
[19:19:12] *** Quits: vindex10 (~vindex10@gateway/tor-sasl/vindex10) (Quit: vindex10)
[19:19:34] <eson123> ChrisWarrick: hm that sounds interesting, i never tried to combine nginx and flask before
[19:19:50] <eson123> i don't see why either tho
[19:20:04] <nedbat> eson123: what web server are you using in production?
[19:20:07] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c)
[19:20:12] <Khepra> is it offtopic to ask here about some specifics of Werkzeug? #pocoo seems no longer present on libera, after the Node That Shall Not Be Named schizm
[19:20:25] <eson123> i am not aiming for production yet, i am still just using the standard flask api to run my server
[19:20:28] <nedbat> Khepra: it's fine to ask; we might not know
[19:20:29] <eson123> app.run() <--
[19:20:34] *** Joins: Sir_Andrei (~andrei@r186-54-119-47.dialup.adsl.anteldata.net.uy)
[19:20:36] <Khepra> nedbat: thanks. :)
[19:20:38] <Sir_Andrei> Hello
[19:20:44] *** Joins: pingpongball (~pingpongb@43.228.192.107)
[19:20:55] <ChrisWarrick> eson123: https://flask.palletsprojects.com/en/2.0.x/deploying/
[19:20:55] <Sir_Andrei> Oh... first thing I see when I join "nedbat"... always the same people here hahah
[19:21:08] <lantech19446> ChrisWarrick: you were absolutely right about me not understanding the JSON once I put it into VScode and used a formatter instead of pycharm it makes soooo much more sense why i'm getting the results I am
[19:21:11] <nedbat> Sir_Andrei is accusing me of being stuck in a rut! :)
[19:21:12] <push-f> hey, is there some trick to fabricate an Any variable for static type checkers like pyright?
[19:21:19] *** Parts: pingpongball (~pingpongb@43.228.192.107) ()
[19:21:21] <Khepra> So anyone running Werkzeug. is_xhr has been deprecated and removed but that's not in the changelogs, I found an old GH issue suggesting future deprecation.  What's the recommended replacement for jQuery XHR requests, to detect them as such?
[19:21:28] <ChrisWarrick> eson123: the built-in server isn’t something you’d use in production for scalability and performance reasons
[19:21:31] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[19:21:57] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 240 seconds)
[19:22:09] <push-f> (the use case is that there is some horrible monkey patching going on that cannot be fixed easily)
[19:22:30] <ChrisWarrick> Khepra: what was your use-case for is_xhr?
[19:22:32] *** Joins: touch-face (~touch-fac@117.176.106.101)
[19:22:41] <Sir_Andrei> nedbat: By the way!
[19:22:52] *** Joins: eXtr3m0 (~eXtr3m0@user/eXtr3m0)
[19:23:27] <leitz> jinsun, that workd. Thanks!
[19:23:28] <Sir_Andrei> Well, I come with a simple question. Do u know some python linter for the console?, The usage would be stdin -> linter -> stdout (linted code).
[19:23:29] <ChrisWarrick> Khepra: it should be trivial to replace it and just check the header manually: https://github.com/pallets/werkzeug/blob/760a4a95375d1d404b516fd89c2f5dd5c15cf419/werkzeug/wrappers.py#L672-L673
[19:24:01] *** Quits: widp (~user@124.123.107.54) (Ping timeout: 250 seconds)
[19:24:18] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[19:24:45] <Khepra> ChrisWarrick: ah, cool. I was looking at rewriting to check request.headers. cheers.
[19:24:46] <eson123> ChrisWarrick: hm ok then
[19:25:48] *** Joins: aslicedbanjo (~aslicedba@81.141.54.244)
[19:25:52] <leitz> Sir_Andrei, pylint?
[19:25:57] *** Joins: WhiteLotus (~root@197.83.233.83)
[19:25:58] <leitz> Though I haven't used it personally.
[19:27:10] *** Joins: elias117 (~elias117@47.55.112.181)
[19:27:10] *** Quits: elias117 (~elias117@47.55.112.181) (Changing host)
[19:27:10] *** Joins: elias117 (~elias117@user/elias117)
[19:28:13] <Sir_Andrei> Yea, pylint works.
[19:28:22] <Sir_Andrei> But... sry, I just made the wrong question.
[19:28:43] <Sir_Andrei> What I want is a linter, just to have colored output. Like a "colored cat" for python files.
[19:28:48] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 250 seconds)
[19:28:54] <ChrisWarrick> Sir_Andrei: pygmentize
[19:29:01] <Sir_Andrei> That's not linting, that's is... colored syntax.
[19:29:01] <ChrisWarrick> Sir_Andrei: pip install pygments
[19:29:10] <Sir_Andrei> pygments, I'll try it, thx!
[19:29:35] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[19:30:07] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[19:30:20] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Quit: Leaving)
[19:30:28] <WhiteLotus> leave
[19:30:31] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8) (Ping timeout: 250 seconds)
[19:30:37] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[19:30:41] <WhiteLotus> my bad
[19:30:47] <Sir_Andrei> @ChrisWarrick: It works!
[19:30:55] <Sir_Andrei> That's just what I needed, thx.
[19:31:02] *** Parts: WhiteLotus (~root@197.83.233.83) ()
[19:32:17] *** Joins: edd_lc (~edd_lc@85.64.225.197.dynamic.barak-online.net)
[19:33:07] <nedbat> Sir_Andrei: btw, "bat" is very cool for this too: https://github.com/sharkdp/bat
[19:33:37] *** Quits: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net) (Ping timeout: 240 seconds)
[19:33:45] *** Quits: touch-face (~touch-fac@117.176.106.101) (Ping timeout: 256 seconds)
[19:35:14] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[19:35:41] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[19:38:06] *** Joins: KeiraT (~k@lulzsec.co.uk)
[19:38:07] *** Quits: bluedust (~bluedust@117.193.122.44) (Remote host closed the connection)
[19:39:20] *** Quits: MercilessDeth (~brad@136.49.59.177) (Quit: Konversation terminated!)
[19:40:56] <mefistofeles> nedbat: oh, that's where the "bat" in your nick comes from, of course!
[19:40:58] <mefistofeles> :P
[19:41:07] <mefistofeles> nedbat: didn't know about bat, seems nice
[19:41:07] <nedbat> we bats have to stick together!
[19:41:11] <mefistofeles> haha
[19:41:21] *** Quits: Yamakaja (~yamakaja@user/yamakaja) (Quit: Bye)
[19:41:32] *** karl_AFK is now known as karlnashville
[19:43:32] <Sir_Andrei> Oh!, bat is really really nice!
[19:44:34] *** Joins: Yamakaja (~yamakaja@vps.pub.yamakaja.me)
[19:44:34] *** Quits: Yamakaja (~yamakaja@vps.pub.yamakaja.me) (Changing host)
[19:44:34] *** Joins: Yamakaja (~yamakaja@user/yamakaja)
[19:46:27] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[19:48:08] *** Joins: ledtc (~ledtc@c-f8aa70d5.014-57-6c756e3.bbcust.telenor.se)
[19:48:39] *** Joins: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net)
[19:50:53] *** Joins: dme86 (~dan@user/dan86)
[19:52:17] *** Quits: Fairy (~Fairy@ti0004a400-5385.bb.online.no) (Ping timeout: 240 seconds)
[19:52:34] *** Joins: MercilessDeth (~brad@136.49.59.177)
[19:55:14] *** Quits: karlnashville (~karl@2601:482:4280:4cf0:e226:76c7:c8d3:d99a) (Quit: Konversation terminated!)
[19:55:15] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[19:56:17] *** Joins: transhumanist (~steven@2601:196:8800:35f0:ab85:4468:267e:686a)
[19:58:06] <lantech19446> Why am I getting no result from this, I need to drill down further than I'm trying to here I just wanted to make sure I got it right first https://pastebin.com/ea2ZzBej
[19:59:31] <jinsun> where did you expect to see results?
[19:59:45] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 250 seconds)
[19:59:46] <lantech19446> I'm running the file inside vscode
[20:00:26] <jinsun> if on your terminal then there should probably be a print somewhere, line 12 maybe?
[20:01:26] *** Quits: onur (~onur@user/onur) (Quit: ZNC 1.8.2 - https://znc.in)
[20:01:29] <lantech19446> print apparently doesn't work with the output from ijson that's why i used list when I use print I get <generator object coros2gen at 0x000001451CA6F8B0>
[20:01:41] *** Joins: onur (~onur@static.88.107.46.78.clients.your-server.de)
[20:01:59] *** Quits: Ringtailed-Fox (~BoingBoin@2001:1970:5d2a:c500:fc59:20d8:960a:26cc) (Read error: Connection reset by peer)
[20:03:01] <jinsun> you can print and list at the same time
[20:03:03] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[20:03:08] <jinsun> print(list(directory))
[20:03:16] <jinsun> just list won't print
[20:03:24] *** Joins: knstn (~knstn@ppp-94-66-57-191.home.otenet.gr)
[20:05:08] <lantech19446> you rock man thank you very much
[20:05:19] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[20:05:51] *** Joins: zmt00 (~zmt00@user/zmt00)
[20:05:54] *** Quits: lastshell (~lastshell@user/lastshell) (Read error: Connection reset by peer)
[20:06:51] *** Quits: onur (~onur@static.88.107.46.78.clients.your-server.de) (Changing host)
[20:06:51] *** Joins: onur (~onur@user/onur)
[20:06:57] *** Parts: Khepra (~ratrace@user/ratrace) ()
[20:08:24] *** Quits: yoro_ (~yoro@5.2.79.146) (Remote host closed the connection)
[20:08:30] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[20:08:57] *** Joins: Guest6025 (~ad@2a01:e0a:a23:ee80:3c22:fc40:6c05:585f)
[20:10:19] *** Joins: optimant (~asavage@user/optimant)
[20:10:44] *** Joins: someuser (~user@197.54.43.98)
[20:10:45] <foo> General programming question: working with another dev. We have a web app that has various "parts." In one scenario, two "parts" share a common "base theme." We could A) hard link to the core theme, which is called templates/dashboard/..." (it's called dashboard) or we can set a variable TEMPLATE_BASE and dynamically set it. This specific dev recently "merged the two very similar template theme into a single
[20:10:51] <foo> base," so he had to manually go through each template and re-link things. I can understand why he defined a variable... although, we will likely never change that again in the future. There's a fine balance for me in "planning for the future for something that will occur multiple times" versus overthinking something and making something dynamic when it really doesn't need to be. Is there any specific
[20:10:57] <foo> protocols/thoughts/pythonic ways here that someone can help me understand? I have to "pick my battles" with what we change, doing his code review, and while I understand his logic it's sort of half implemented right now... in 1 "part" he has TEMPLATE_BASE_DIR or 'dashboard' in the Flask jinja template, and he has that like 40 times. Because it's only defined on one part, not the other.
[20:12:44] *** Joins: ThePhilgrim (~ThePhilgr@151.41.4.108)
[20:12:56] *** Joins: c4017w__ (~c4017@209.52.68.8)
[20:13:33] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc)
[20:14:08] *** Joins: greedom (~greedom@p200300de673482009f127552c29b5718.dip0.t-ipconnect.de)
[20:15:54] *** Joins: ultera (~Thunderbi@user/ultera)
[20:16:49] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[20:17:04] *** Quits: Feuermagier_ (~Feuermagi@84.17.48.173) (Remote host closed the connection)
[20:17:23] *** Joins: Feuermagier_ (~Feuermagi@84.17.48.173)
[20:18:14] *** Quits: Feuermagier_ (~Feuermagi@84.17.48.173) (Client Quit)
[20:18:40] *** Joins: idiocrash (~textual@216.73.163.85)
[20:20:47] *** Quits: lakrass (~lakrass@user/lakrass) (Quit: WeeChat 3.4)
[20:20:52] *** Joins: sokan_ (~sokan@athedsl-303439.home.otenet.gr)
[20:20:59] *** Quits: Sir_Andrei (~andrei@r186-54-119-47.dialup.adsl.anteldata.net.uy) (Quit: Lost terminal)
[20:21:35] *** Quits: sokan (~sokan@85.73.227.251) (Ping timeout: 256 seconds)
[20:21:35] *** sokan_ is now known as sokan
[20:21:41] *** Joins: bluedust (~bluedust@117.193.122.44)
[20:21:41] *** Quits: bluedust (~bluedust@117.193.122.44) (Read error: Connection reset by peer)
[20:21:57] *** Joins: bluedust (~bluedust@117.193.122.44)
[20:22:24] *** Quits: vaio (~gary@user/ghost) (Ping timeout: 276 seconds)
[20:22:25] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[20:22:39] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[20:24:57] *** Quits: Ratticus (~RatticusZ@cpe-66-67-92-65.twcny.res.rr.com) (Ping timeout: 240 seconds)
[20:25:57] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 240 seconds)
[20:26:13] *** Joins: ice9 (~ice9@user/ice9)
[20:26:41] *** Quits: therufuser (~therufuse@p5b0003d1.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[20:27:15] *** Joins: bluedust_ (~bluedust@117.217.146.23)
[20:27:19] *** Joins: yoro (~yoro@195.206.116.106)
[20:27:24] *** Joins: vaio (~gary@user/ghost)
[20:27:57] *** Quits: bluedust (~bluedust@117.193.122.44) (Ping timeout: 240 seconds)
[20:28:09] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[20:28:36] <akk> foo: Personally, I'd much prefer the TEMPLATE_BASE to making filesystem links, because it's more likely to work if someone else checks out the code and doesn't know they need to make links.
[20:28:51] *** Quits: stwange (~j@82.21.202.140) (Quit: This computer has gone to sleep)
[20:28:54] *** Joins: yoro_ (~yoro@5.2.79.146)
[20:29:24] <akk> Especially hard links, which I don't think will be recorded in a revision control system like git.
[20:29:25] *** Joins: sokan_ (~sokan@athedsl-304416.home.otenet.gr)
[20:29:54] *** Joins: de-facto (~de-facto@user/de-facto)
[20:30:00] <foo> akk: Really appreciate you chiming in, trying to make up my mind on this. To be fair, this collection of templates are in the repo. "doesn't know they need to make links" -> not sure what you mean here, perhaps my original statement was confusing.
[20:30:25] *** Quits: sokan (~sokan@athedsl-303439.home.otenet.gr) (Ping timeout: 256 seconds)
[20:30:25] *** sokan_ is now known as sokan
[20:30:37] *** Quits: bytehackr (~Sandipan@45.249.73.155) (Ping timeout: 240 seconds)
[20:30:37] *** Quits: Guest6025 (~ad@2a01:e0a:a23:ee80:3c22:fc40:6c05:585f) (Remote host closed the connection)
[20:30:44] <akk> foo: If I clone the repo, will my local copy have the hard links you talk about? I'm thinking no, that I'd have to make them by hand after checking out.
[20:31:02] <foo> akk: aha! I see your point now. Yes, it will have those files.
[20:31:27] <akk> foo: And they'll be links, not separate copies of the same file?
[20:32:07] *** Quits: yoro (~yoro@195.206.116.106) (Ping timeout: 256 seconds)
[20:32:12] *** Joins: water_27300935_ (~xe@182.90.128.148)
[20:32:39] *** Joins: Viewday115 (~Viewday@user/viewday)
[20:32:52] <foo> akk: not sure if you're familiar with flask, but we're talking about 2 flask blueprints, each with its own templates, referencing a base template called dashboard. Since "hard links" can mean a few different things, I'm talking about a flask path to a namespaced template file (templates/dashboard/...) - all of this is in the repo. Again, really appreciate you tracking with me here. I know that was a long
[20:32:53] <ChrisWarrick> symlinks or hardlinks don’t sound very portable
[20:32:58] <foo> question.
[20:33:07] <RougeR> cant work this out
[20:33:16] <ChrisWarrick> foo: I’d do whatever is required to use the base theme in both blueprints on the flask side
[20:33:22] <foo> ChrisWarrick: it's possible my question was vague, not talking about any filesystem level linking here. Just a path in a template file.
[20:33:59] <akk> foo: I thought you meant hard links in the filesystem, "ln file1 file2". I'm familiar with flask, but not with blueprints.
[20:34:03] <ChrisWarrick> foo: perhaps it will just work if you drop your global templates in the “global” template directory for your app
[20:34:09] <foo> ChrisWarrick: that's the thing, "whatever" is required is 2 options: 1) we link to templates/dashboard/some_file.html or 2) we set TEMPLATE_BASE and do TEMPLATE_BASE/some_file.html
[20:34:16] *** Joins: stwange (~j@82.21.202.140)
[20:34:16] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[20:34:17] *** Viewday115 is now known as Viewday11
[20:34:40] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[20:34:44] <ChrisWarrick> foo: what’s a link? where is the variable placed?
[20:34:56] <foo> akk: blueprints is basically smaller subsets within flask. So we have 5 blueprints, each with its own domain name. And in this scenario, 2 of those blueprints share a common dashboard folder... and another dev here made it a constant variable rather than simply saying "dashboard"
[20:35:28] <foo> ChrisWarrick: I might be using link too informally, apologies. By "link" I mean this: <link href="{{ url_for('.static', filename=(TEMPLATE_BASE_DIR or 'dashboard') + '/vendors/theme/skins/header/base/light.css') }}" rel="stylesheet" type="text/css" /> (if there is a better name, let me know
[20:35:46] <water_27300935_> Can I insert object to 'Listbox' using Tkinter, e.g. insert 'Label', 'Btutton' to 'Listbox'?
[20:35:54] <foo> Note, the alternative is simply to use filename='templates/dashboard/vendors/theme/skins/header/base/light.css
[20:36:12] *** Quits: rsx (~dummy@ppp-188-174-130-198.dynamic.mnet-online.de) (Quit: rsx)
[20:36:12] <ChrisWarrick> foo: I’d probably not bother with a variable for this
[20:36:43] <ChrisWarrick> water_27300935_: probably not
[20:37:20] <foo> ChrisWarrick: I really appreciate you chiming in. I'm code reviewing work from another dev. He was asked to "take two flask blueprints, and combine the commonalities between a core template we used" -> he made this variable in about 40+ lines of the templates. The thing is, in 6 years, this is the first time we've had this happen... and we'll likely never change it again. I'm balancing "being too picky" with
[20:37:26] <foo> trying to improve my own decision making process for such things.
[20:37:56] *** Joins: dtux (~dtux@c-98-207-149-218.hsd1.ca.comcast.net)
[20:38:16] <foo> ChrisWarrick: I can understand why he did this: he doesn't want to have to manually go and re-link stuff. But with global search and replace tools these days, adding a variable for that doesn't seem valuable enough.
[20:38:24] <RougeR> can i get some help solving this problem, if it can be solved...
[20:38:25] <RougeR> https://bpa.st/EJDA
[20:38:26] <lantech19446> ok either I'm still not understanding or it's just not working the way it looks like it should. I need to go deeper into the json than requests.data I need to pull 3 pieces of information the first being the directory that was accessed which looks like it's at requests.data.data but I get an empty set response when I do that. If you can guide me to getting to that first piece of information I think
[20:38:28] <lantech19446> I'll be able to get the other two on my own https://pastebin.com/xVH4kcxm
[20:38:40] <foo> ChrisWarrick: Considering this most recent context I shared, would you still not bother with a variable for that?
[20:39:15] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 256 seconds)
[20:39:25] <RougeR> i want to run some code asynchronously and loop whilst monitoring an external "abort_task" flag
[20:39:33] *** Quits: stwange (~j@82.21.202.140) (Quit: This computer has gone to sleep)
[20:39:42] <RougeR> if the flag is set then i want to throw an exception in the async code straight away
[20:39:56] *** Quits: someuser (~user@197.54.43.98) (Ping timeout: 245 seconds)
[20:40:19] *** Joins: altairz (~altairz@user/altairz)
[20:40:54] *** Joins: vitali64 (~vitali64@user/vitali64)
[20:41:55] *** Quits: altairz (~altairz@user/altairz) (Client Quit)
[20:42:08] *** Joins: bluedust (~bluedust@194.37.96.153)
[20:42:33] <ChrisWarrick> foo: some people will make everything into a constant, and that is generally sensible, but on the other hand, configuring it into the context seems more complicated. Plus, some tools might understand paths, but not variables.
[20:43:15] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[20:43:37] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[20:43:56] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:44:01] *** Quits: jay-m126 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 256 seconds)
[20:44:07] <foo> ChrisWarrick: yeah, this guy has a tendency to make lots of constants. And yeah, we're now passing this variable around when we render all the templates. Maybe another question is: when *do* you use a constant? If I'm unclear on the reasoning for this here now, when should we be using constants? I realize I might be trying to make this too black and white - I'm simplying trying to improve my thinking
[20:44:36] <TML> lantech19446: 1) Get rid of the ijson and json imports; 2) add "from pprint import pprint" (you may need to install pprint if you don't already have it); 3) drop everything after line 5 and replace it with "pprint(contents.json())"
[20:44:45] *** Joins: emad (~emad@156.214.198.176)
[20:44:56] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[20:45:00] <TML> lantech19446: Then you should be able to more easily understand the structure of the JSON response to find the data you're seeking
[20:45:02] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[20:45:39] <ChrisWarrick> foo: I don't have a good answer to this
[20:45:43] *** Quits: bluedust_ (~bluedust@117.217.146.23) (Ping timeout: 256 seconds)
[20:46:00] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[20:46:07] *** Joins: jay-m126 (~jay-m@196.240.127.216)
[20:46:14] <lantech19446> TML: I have the JSON formatted well I just don't understand why requests.data.data isn't working and it's a 17000 line file so I can't really pastebin it
[20:46:50] <TML> "data": []
[20:46:51] *** Quits: Allegretto (~allegrett@178-164-171-16.pool.digikabel.hu) (Ping timeout: 256 seconds)
[20:46:56] <TML> That's why it's "not working"
[20:47:11] <TML> Again, if you look at the well-formatted JSON, it's a lot more clear what's going on
[20:48:00] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[20:48:07] <TML> lantech19446: I don't see anything in this response called "directory", so I don't know how to tell you to get what you're looking for
[20:49:04] <lantech19446> TML: I'm not familiar with json and im learning python right now also so a lot of what is clear to experienced people isn't clear to me. directory is the variable I set equal to the ijson action that part works because i get the desired output when I search requests or requests.data
[20:49:26] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Quit: Ping timeout (120 seconds))
[20:49:36] <foo> ChrisWarrick: thank you.
[20:49:45] <foo> ChrisWarrick: appreciate you at least saying you wouldn't use a variable for naming templates
[20:49:59] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[20:50:15] <TML> lantech19446: If you're just learning python, my suggestion to stop using json and ijson goes double - you're making your problem needlessly complex by adding those into the mix. contents.json() already does everything you need here.
[20:50:41] *** Quits: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net) (Ping timeout: 250 seconds)
[20:51:08] <lantech19446> TML: so how would you search / filter through the json if you're not using ijson does pprint have that built in?
[20:51:33] <TML> lantech19446: content.json() will return a dictionary, you just access the keys you want
[20:52:14] <jinsun> lantech19446: "requests.data" is a list, it won't have .data, looks like ijson converts lists to .item, so try "requests.data.item.data" (and see https://pypi.org/project/ijson/#prefix)
[20:52:18] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[20:52:28] *** Joins: andreasbuhr (~quassel@p549dbd79.dip0.t-ipconnect.de)
[20:52:32] <TML> lantech19446: pprint is just something to output data in a nicely formatted way
[20:52:47] *** Quits: andreasbuhr (~quassel@p549dbd79.dip0.t-ipconnect.de) (Client Quit)
[20:52:56] <TML> lantech19446: As an example, to get the field "start_date" from the object "general": json_data = contents.json(); print(json_data['general']['start_date'])
[20:54:53] <foo> We're processing a CSV file that gets uploaded to our system and fed to another API. It looks like pydantic was used from pydantic import BaseModel, validator, Field to help with this. Here's an example: street_name: Optional[str] = Field(alias="Street Name") -> I wasn't expecting this work to be done. Everything in is a string. It seems a bit overkill. Can we agree that validation is nice but not always
[20:54:54] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[20:54:59] <foo> need? The most important thing we need to know here is that there is a value for 1 column but that's it. This also means that if this CSV file ever changes (which it will), then all of this strict validation and expectation of columns will fail.
[20:55:18] *** Joins: zebrag (~chris@user/zebrag)
[20:55:33] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[20:56:03] <deniska> pydantic will give a nicer error message than KeyError
[20:56:18] <TML> foo: Maybe the intent is to _cause_ things to fail when the CSV format changes, so that you don't blindly import values when the format no longer matches?
[20:56:54] *** Joins: bluedust_ (~bluedust@117.217.146.23)
[20:57:16] <lantech19446> jinsun: that works I just need to filter down to only the data with coalition in it
[20:57:45] <lantech19446> TML: that doesn't work it says type object not subscriptable
[20:57:47] <foo> deniska / TML - thanks, little more backstory: we're importing a CSV with a couple dozen rows. The only thing we care about is property address. Everything else is getting stuck into a JSONB database column. We're not using anything else. I have some bad habits and I'm partly asking how important validation is in a situation like this. We literally only care about 1 column, whatever is in any other column
[20:57:53] <foo> we'll dynamically display at time of display
[20:58:17] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[20:58:41] <deniska> well, you care that one column is there
[20:58:44] <TML> foo: Only _you_ know your requirements well enough to state with any kind of reasoning how import validation is.
[20:58:53] *** Joins: slav0nic (slav0nic@python.su)
[20:59:03] *** Joins: Allegretto (~allegrett@92-249-212-236.pool.digikabel.hu)
[20:59:12] <foo> deniska: yup, validation on that 1 column is accepted. But we don't care enough about all 20 of them
[20:59:19] <foo> TML: ok, in that case, this is my fault for not communicating this on that project.
[20:59:34] <jinsun> lantech19446: `[x for x in ijson.items(contents.content, 'requests.data.item.data') if "coalition" in x]` ?
[20:59:35] <foo> This dev "defaulted to validation for everything" - which I think we can agree is a good habit
[20:59:54] *** Joins: enoq (~enoq@194-208-178-35.lampert.tv)
[20:59:56] *** Joins: esther (~esther@2607:fb90:5fe7:2e7f:942e:9039:18f1:2131)
[20:59:59] <TML> I've certainly heard of worse habits
[21:00:27] *** Quits: bluedust (~bluedust@194.37.96.153) (Ping timeout: 256 seconds)
[21:00:30] <foo> TML: thanks for chiming in. Always appreciate what you have to say!
[21:01:21] <TML> foo: maybe a better habit in this case would have been for the dev to ask more follow-up questions and better understand the requirements before writing a bunch of validation code, but that's just hindsight
[21:01:37] <jinsun> foo: you can annotate object btw to allow any type, if you don't care about some field
[21:01:55] <foo> TML: I'm still going to bring that up. This has happened a few times now, considering it was never stated to explicitly write validation.
[21:01:58] <foo> jinsun: how so?
[21:02:06] <jinsun> so it is not hard to keep using pydantic and have relaxed validation
[21:02:22] <lantech19446> jinsun: yea I think that'll work probably better than trying to use filter I always forget i can do that
[21:02:27] <foo> jinsun: ah, does pydantic require validation? I don't even know, hmm
[21:03:56] *** Parts: water_27300935_ (~xe@182.90.128.148) (WeeChat 3.4)
[21:04:18] <knstn> Wasn't a "parse" method in urllib/urllib3?
[21:04:50] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:a5e1:d8fc:db8d:5548)
[21:04:59] <TML> knstn: urllib.parse is still there
[21:05:28] <TML> https://docs.python.org/3/library/urllib.parse.html
[21:06:17] <TML> Although how it expects to do meaningful things when the spec for URLs is still hotly debated on a regular basis is a good question :)
[21:06:21] *** Joins: ethrl (~ethereal@user/doforlove33)
[21:07:20] <knstn> Either I need a break or an eye doctor
[21:07:35] <TML> as the kids say: Why not both
[21:07:43] <TML> :)
[21:07:45] *** Joins: via_c7 (~orangeext@user/orangeextract)
[21:08:05] <lantech19446> jinsun: that worked I need to change it a little so it spits out data hits and visitors if coalition exists but i'll try to plug away on that on my own for a bit before crying for help again
[21:08:41] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[21:09:37] <lantech19446> since x is a variable can I define it? or is it always going to use it's assumed value
[21:09:41] *** Joins: Betal (~Betal@user/betal)
[21:11:08] *** Joins: someuser (~user@197.54.43.98)
[21:11:40] *** Joins: rattle_me_bones (~herpderp@user/rattle-me-bones/x-8906882)
[21:11:52] <foo> Is there any general consensus about typing in python? I imagine it's a best practice, right?
[21:12:01] *** Quits: jay-m126 (~jay-m@196.240.127.216) (Ping timeout: 256 seconds)
[21:12:02] *** Quits: ethrl (~ethereal@user/doforlove33) (Quit: WeeChat 2.8)
[21:12:05] <jinsun> foo: it doesn't require you to write a validator, but by default it does try to convert the types if input doesn't match with the annotation, and if you annotate object it won't do that (also you can just remove the field from the model too if you really didn't care about it)
[21:12:27] *** Joins: macbook (~macbook@cpc101496-gill19-2-0-cust142.20-1.cable.virginm.net)
[21:12:39] <foo> jinsun: gotcha, thanks. I'm more into the idea of simply removing it from the model and only defining the primary column we care about and making sure it's not empty
[21:12:48] <jinsun> foo: yes typing is good, more documentation is always better
[21:13:19] *** Joins: oriba (~oriba@dynamic-077-191-250-060.77.191.pool.telefonica.de)
[21:13:24] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[21:13:25] *** Joins: c4017w_ (~c4017@209.52.68.8)
[21:13:29] <foo> jinsun: thanks, this new dev has been great at that. I don't get into typing and I realize it's not the best of habits... nice to see him doing it.
[21:13:56] *** Quits: yoro_ (~yoro@5.2.79.146) (Quit: Leaving)
[21:16:53] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[21:16:53] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 250 seconds)
[21:17:31] *** Quits: vitali64[m] (~notrealvi@2001:470:69fc:105::c1bf) (Changing host)
[21:17:31] *** Joins: vitali64[m] (~notrealvi@user/vitali64)
[21:18:22] *** Quits: omegatron (~some@p5b056436.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[21:18:26] <foo> Looking for a general opinion here, doing some code review and trying to figure out if I'm too picky: this is split into two lines: msg = "Unable to delete temporary CSV file %s" \n logger.info(msg, e) ... can we agree this makes more sense to have in 1 line? I don't see the value of putting this on two lines. (Is this bikeshedding? I'd like some consistency in our codebase...)
[21:18:30] <jinsun> lantech19446: not sure what you mean, the list comprehension is defining x, and you can re-define it after the comprehension if you like
[21:20:30] <lantech19446> hmm ok
[21:21:20] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[21:22:47] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 256 seconds)
[21:23:02] *** Joins: kilitary (~kilitary@188.68.215.221)
[21:24:08] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[21:24:13] *** Joins: therufuser (~therufuse@p5b0003d1.dip0.t-ipconnect.de)
[21:24:13] *** Parts: via_c7 (~orangeext@user/orangeextract) (Leaving)
[21:24:26] <jinsun> foo: yeah separating it out doesn't make much sense to me too, unless that msg variable is re-used in other places too
[21:24:35] *** Quits: WarpedAI (~Warped@user/warped) (Ping timeout: 256 seconds)
[21:25:21] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 245 seconds)
[21:25:35] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[21:25:57] <jinsun> foo: and yeah this is bikeshedding :D
[21:27:20] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8)
[21:29:45] <foo> jinsun: 2 thoughts: 1) it's not, thanks. 2) Someone recently brought this term up to me, I'm still trying to wrap my mind about it. At what point is this not bikeshedding because we want some level of consistency in our codebase?
[21:30:43] <d1rewolf_x> hello all. Regex fun time. I have a large string I'm trying to match certain values within. I'm using mutliline and dotall, but I must be missing something. for example, this returns 0 matches:
[21:30:50] <foo> I may be overthinking this. I think of bikeshedding about talking about truly subjective things (eg. the color of the bikeshed). I can rationalize, or at least I think I can, why having things on 1 line is fine, 2 lines is unnecessary... but maybe bikeshedding is about "accepting all the ways to skin a cat" ? But then our codebase would be less-than-consistent. Maybe that's fine?
[21:30:53] <d1rewolf_x> re.match("FOB: ORI", value, re.DOTALL | re.MULTILINE)
[21:31:03] <d1rewolf_x> but
[21:31:15] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[21:31:16] <d1rewolf_x>  [l for l in value.split("\n") if "FOB: ORI" in l]
[21:31:21] <foo> Is except Exception: the same as except:  ?
[21:31:24] <d1rewolf_x> returns "['FOB: ORIGIN DELIVERY DATE: 148 DAYS ADO ']"
[21:31:25] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 250 seconds)
[21:31:26] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[21:31:27] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[21:31:41] <d1rewolf_x> so the value is there....it's just not matching for some odd reason
[21:31:44] *** Joins: Guest91 (~Guest91@2a09:2dc0:0:18::1)
[21:31:45] <jinsun> d1rewolf_x: you probably want re.search
[21:31:51] *** Joins: dme86 (~dan@user/dan86)
[21:31:55] <jinsun> re.match matches only in the beginning
[21:32:03] <grym> re.match is kind of unfortunate
[21:32:07] <foo> jinsun: You'd probably also call this bikeshedding: template_context = {"form": form} \n return render_template(f"{TEMPLATE_BASE_DIR}/add.html", **template_context) ... I see no reason to have that on two lines.
[21:32:14] <foo> It's not more readable, one line is fine
[21:32:30] <grym> foo: raze the bikeshed, use black
[21:32:33] <d1rewolf_x> jinsun:  ah...indeed. thank you
[21:32:46] <deniska> foo: `except` catches every exception, `except Exception` only exceptions which have Exception in their base classes
[21:32:49] <foo> grym: Black won't combine lines like that. If both were on 1 line, it would nicely format, though
[21:32:55] *** Joins: HaMsTeRs (~Thunderbi@210.3.213.4)
[21:32:55] <foo> deniska: thank you
[21:32:55] <grym> foo: that's my point
[21:32:56] <jinsun> foo: no except and except Exception are different, except: is terrible, except Exception is acceptable sometimes
[21:33:20] <deniska> foo: generally you don't want to catch anything which doesn't inherit from Exception, that'd give you SystemExit for example
[21:33:36] <foo> jinsun: I see it used in an API call... namely when we try to commit the data. If that fails, we do except Exception and then logger.exception("Failed to save properties") ... so it's not hiding that (which I believe is the main issue of doing this)
[21:33:43] <foo> deniska: aha, thank you
[21:33:59] <foo> grym: we do use Black. And if everything is on 1 line, it should be fine, eg. not 2 lines
[21:34:09] <foo> grym: but even with black, this dev still put things on 2 lines like that...
[21:34:09] <foo> haha
[21:34:23] *** hexeme is now known as ldlework
[21:34:31] <jinsun> foo: yeah just like grym, I just run black for consistency, any more worry about consistency == bikeshedding to me
[21:35:36] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[21:35:39] <foo> jinsun: probably worthwhile to throw a few more tools in that mix, too. flynt, Black, isort for imports, etc. And anything else you let "be as it is" ?
[21:35:57] <lantech19446> is there such a thing as nested if statements?
[21:35:59] <foo> jinsun: this is really really helpful, I've been micro-caring about this stuff in the name of a "consistent codebase" -> maybe I got to stop doing that.
[21:36:16] <jinsun> lantech19446: yes you can have if inside another if
[21:36:33] <lantech19446> ok cool so I'm not doing that wrong it must be something in my print
[21:37:17] *** Quits: zen_coder (~zen_coder@141.113.64.75) (Ping timeout: 240 seconds)
[21:37:48] <jinsun> foo: at my work we use isort, black, flake8, pydocstyle and pylint (with lots of warnings disabled)
[21:38:00] *** Joins: nicode (~nic@2607:f2c0:9541:7100:7034:ab5c:4fd9:7549)
[21:38:16] <deniska> I once saw black and isort fight :)
[21:38:25] <foo> deniska: haha! I know there's some overlap
[21:38:28] <jinsun> isort --profile=black for that
[21:38:34] <ChrisWarrick> deniska: with or without the black-specific isort config?
[21:38:38] <deniska> (over some commented out import)
[21:38:43] <deniska> ChrisWarrick: without I think
[21:38:48] <RougeR> this is what i want to do...
[21:38:48] <RougeR> https://stackoverflow.com/questions/36484151/throw-an-exception-into-another-thread
[21:38:52] <RougeR> trying to work out how...
[21:38:55] <foo> jinsun: ok, so - you use all of that in a pre-commit git hook or such, and then you consider any other discussion around code bikeshedding?
[21:39:06] <jinsun> foo: yep
[21:39:11] <foo> jinsun: I hate you.
[21:39:18] <foo> jinsun: ... because you might have just changed my life.
[21:39:20] <foo> Haha.
[21:40:12] <foo> Can anyone else here speak to that? Do you share similar philosophies? eg. use isort, black, flake8, pydocstyle and pylint, anything outside of that is considered bikeshedding in code reviews and if the code works it works? (where bikeshedding is intended to be avoided)
[21:40:22] <grym> foo: more or less, yeah
[21:40:48] <grym> foo: more time to fight about testing and API design!
[21:40:52] <ChrisWarrick> "if it works it works" can be a dangerous philosophy sometimes
[21:41:10] <grym> sure; via media is the bway
[21:41:12] <grym> way*
[21:41:29] <grym> "optimization hinders evolution" is the other side of the seesaw
[21:41:42] <ChrisWarrick> if you wrote an algorithm with terrible complexity, or used all the cool new tricks that nobody else on the team can read, it may work, but it’s not good code
[21:42:07] <foo> ChrisWarrick: I strongly agree. FWIW, I obsess over code reviews. I'm notorious about everything. I have a reputation for making grown men cry because I show them how sloppy their code is (while citing resources). Some people love it, they stay. Other people don't last more than a few weeks. The ones who stay are awesome, we work well together, we care about quality. With our current workload I'm trying to
[21:42:13] <grym> "everything is DRY and tight and oh, what? there's new requirements from the customer that mean i have to refactor everything again? ffffff"
[21:42:13] <foo> find the right balance of code reviews.
[21:42:34] <grym> painting yourself into an overly prescriptive design corner is no fun, but neither is living in a pig sty
[21:42:41] <foo> Of course, I do this all very respectfully
[21:43:00] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[21:43:05] <Forty-Bot> does spawning threads alter the interpreter?
[21:43:15] <foo> I'm simply trying to figure out how to do this in a more "grown up" way. Perhaps we can say I'm looking to evolve my code review "style"
[21:43:17] *** Quits: edd_lc (~edd_lc@85.64.225.197.dynamic.barak-online.net) (Ping timeout: 240 seconds)
[21:43:36] <Forty-Bot> I have a test which is parametrized for processes and threads and it fails if and only if the threading varient is run first
[21:43:42] *** Quits: macbook (~macbook@cpc101496-gill19-2-0-cust142.20-1.cable.virginm.net) (Quit: macbook)
[21:44:40] <foo> I recently had one of our devs write up a guide on code reviews based off research from various sites... I got to actually read that now, heh.
[21:45:09] <tdsmith> isort and black are great because nobody likes to admit that they enjoy arguing about formatting, or will concede it has limited business value, and the tool just fixes it for you. the price is that some of its decisions aren't optimally aesthetic, but it's no longer your problem. flake8 is a bit less valuable ime
[21:45:32] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[21:45:44] <foo> tdsmith: thanks, I love Black.
[21:45:55] <RougeR> hard pass on black, ive had this holy war at my own work recently
[21:46:06] <foo> RougeR: oh? Do tell.
[21:46:31] <RougeR> fair simple, few devs wanted to use black and argued it would cut down on style debate or poor style
[21:46:53] <grym> RougeR: it does!
[21:46:55] <RougeR> the rest of us wanted to use flake-8 and in-house style guide based off of a well known one
[21:46:58] <deniska> black is bearable once you tell it not to touch ''
[21:47:19] <grym> are we bikeshedshedding now
[21:47:23] <RougeR> it might, but i dont personally think its worth the cost if you use flake-8 with some custom rules and have an in-house guide
[21:47:40] <RougeR> deniska, if you mess with black...then you may as well not use black lol
[21:47:53] <foo> I personally loved surrending to Black. One less thing to think about
[21:47:54] <RougeR> i actually agree with most of black, double quotes is stupid though
[21:48:05] <deniska> RougeR: it's literally one of the two settings it has :)
[21:48:10] <jinsun> at my work people wouldn't have accepted flake8 if black wasn't there to auto-fix most problems reported by it
[21:48:23] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc) (Ping timeout: 256 seconds)
[21:48:34] <RougeR> foo, i write things in a certain style to impart meaning to the reader. this gets lost with autoformatters
[21:48:43] *** Joins: Fairy (~Fairy@ti0004a400-5385.bb.online.no)
[21:48:49] *** Quits: naranja (~orange@user/orangeboxcutter) (Remote host closed the connection)
[21:49:22] <RougeR> i see the benefits of black especially in larger teams perhaps...but for where we are its not worth the trade off
[21:49:25] <foo> RougeR: I'd personally love to read some sort of blog post elaborating more on this if you happen to be a writer. I can sort of understand what you mean
[21:49:45] <RougeR> foo, I actually think I have some good blog posts I've read on the topic
[21:49:49] <RougeR> let me see if i can find them
[21:50:02] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[21:50:13] <tdsmith> the magic if black is that you can type as many single quotes as you want when you're writing code
[21:50:25] <tdsmith> of*
[21:50:33] <RougeR> yeah thing is though...doesnt black use them for EVERYTHING
[21:50:34] <foo> grym: Here's a prime example: https://bpa.st/CEVA -> that return rows is unnecessary , why not just return before? I feel a need to call out stuff like this
[21:50:37] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:97a6:ed9a:65a8:a13c)
[21:50:41] *** Quits: ledtc (~ledtc@c-f8aa70d5.014-57-6c756e3.bbcust.telenor.se) (Quit: Client closed)
[21:50:42] *** Joins: rajkosto (~rajkosto@93-86-127-103.dynamic.isp.telekom.rs)
[21:51:04] <RougeR> at the company I work at we are enforcing the sensible quotes rules
[21:51:07] *** Quits: kilitary (~kilitary@188.68.215.221) (Ping timeout: 256 seconds)
[21:51:13] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[21:51:18] <bjs> RougeR: black has an option to keep original quotes
[21:51:27] <RougeR> double quotes for text and anything likely to require punctuation, single quotes for consts and keys
[21:51:28] <deniska> foo: that makes it obvious that a function returns rows though
[21:51:36] <RougeR> bjs, mmm that is useful
[21:52:02] <deniska> foo: "unnecessary" code can often improve local reasoning
[21:52:14] <grym> foo: it both does what deniska says, and also lets you put a breakpoint on line 10 and inspect `rows` in a debugger, which is 95% of why i have lines like that in my code sometimes
[21:52:15] <jinsun> Forty-Bot: just running a test can change the interpreter, that kind of order dependent failure happen normally if you touch global mutable state in the test that both tests rely on
[21:52:31] <Forty-Bot> so afaik they don't have global mutable state
[21:53:04] <RougeR> foo, this is my view sort of
[21:53:05] <RougeR> https://twitter.com/gvanrossum/status/1227252290580410368?lang=en
[21:53:07] <grym> foo: also, you pass around open file handles but fret about variable names? ^_^
[21:53:21] <bjs> RougeR: black recommends letting it normalize all the strings,  but has a --skip-string-normalization option to disable it
[21:53:23] <RougeR> somewhat this
[21:53:24] <RougeR> https://luminousmen.com/post/my-unpopular-opinion-about-black-code-formatter
[21:53:36] <Forty-Bot> but maybe there is some hidden global state that I'm touching without knowing about
[21:53:45] <RougeR> bjs, mmm thats useful i guess
[21:53:55] <Forty-Bot> like, perhaps the threading module does some first-time startup...
[21:54:33] <foo> deniska: hmm, that's actually really helpful.
[21:54:45] <foo> grym: err, stop it, I won't let you change my life twice today.
[21:55:16] <grym> foo: it's so hard to test! i have to mock or pass a StringIO instead of just a list of stuff?  behhhh >:)
[21:55:26] <RougeR> foo, read the conclusion of that article
[21:55:33] <RougeR> that is my argunent in a nutshell
[21:55:47] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[21:56:04] *** Joins: mickey8 (~user@user/mickey)
[21:56:06] <foo> grym: meh, that's ANOTHER issue. Open file handles. This is a bit more about that code: https://bpa.st/Z4PA -> I think we need to remove that comment, thoughts? Hmm
[21:56:10] <RougeR> i have a load of legacy code at my company im debating running black on actually
[21:56:18] <grym> my argument for black stylistically is that as far as i can tell the average magnitude of disagreement about black's choices is relatively small, and the direction is essentially random
[21:56:32] <grym> so; yes, suck is a vector
[21:56:34] <foo> RougeR: thank you thank you
[21:56:40] <grym> but black has found a pretty good local minimum
[21:56:46] <RougeR> grym, yeah i just dont like autofomatters still
[21:57:00] <RougeR> style guide + allow me to format it
[21:57:09] <grym> if you hvae a style guide
[21:57:09] <RougeR> "If you want beautiful and consistent code on your project, use style guides and linters, for example, flake8 or prospector on CI with plugins enabled. That allows you to avoid bikeshedding that black is basically doing.
[21:57:09] <RougeR> "
[21:57:13] <foo> hey ya'll, I really appreciate this conversation. I want to "solve this" in my life, heh. Otherwise it feels like a never-ending-stream of conversation... I'd rather decide and stick this in a dev handbook
[21:57:15] <grym> then you should also be able to compel it automatically
[21:57:29] <grym> if you don't, then don't kvetch when i take a lot longer to do my job
[21:57:40] <foo> RougeR: are style guides things devs have to learn? or does that mean something within the context of something?
[21:57:45] <RougeR> grym, yeah you can but its soft rules
[21:57:51] <grym> just so i can dot is and cross ts and manage jots and tittles
[21:57:55] *** Joins: Payam (~Payam@c83-250-236-236.bredband.tele2.se)
[21:57:57] <RougeR> foo, its ussually within the style of a company or a language
[21:58:04] <RougeR> ruby has the infamous airbnb style guide
[21:58:15] <Payam> hi
[21:58:15] *** Quits: Guest91 (~Guest91@2a09:2dc0:0:18::1) (Ping timeout: 256 seconds)
[21:58:16] <RougeR> https://github.com/airbnb/ruby
[21:58:23] <deniska> foo: I might be biased, but I always view the code through a lense of "a fresh hire 12 months from now will have to do some edits. How hard it will be?"
[21:58:26] <Payam> lithammer, Why am I banned in offtopics?
[21:58:56] <bjs> Payam: ##python-offtopic
[21:58:57] *** Quits: esther (~esther@2607:fb90:5fe7:2e7f:942e:9039:18f1:2131) (Ping timeout: 240 seconds)
[21:58:57] <foo> deniska: thanks for sharing. :) I'm all about heuristics to help me think through this stuff.
[21:59:00] <RougeR> foo, most importantly...
[21:59:01] <RougeR> https://www.python.org/dev/peps/pep-0008/#a-foolish-consistency-is-the-hobgoblin-of-little-minds
[21:59:01] <jinsun> Payam: supakeen banned you :D
[21:59:10] <RougeR> "A Foolish Consistency is the Hobgoblin of Little Minds"
[21:59:11] <Payam> why?
[21:59:25] <deniska> Payam: they also banned me :)
[21:59:31] <jinsun> Payam: well he banned everyone, you're supposed to use the ## channel
[21:59:32] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[21:59:49] <foo> RougeR: I think I couch our "style guide" in our dev handbook with coding practices, same thing if I'm following - thanks
[22:00:37] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 240 seconds)
[22:00:46] <deniska> foo: It's hard to formalize a lot of issues like this without being oddly specific, or blanket banning something which can be useful on an odd day
[22:00:48] <jim> is there a way of naming a variable from a string, and then set its value/
[22:00:49] <jim> ?
[22:01:01] <foo> deniska: fair enough
[22:01:21] <bjs> jim: when you say variable do you mean a local variable like `x = 1` or an attribute like `x.y = 1`
[22:01:34] <jim> the former :)
[22:01:35] *** Joins: stwange (~j@82.21.202.140)
[22:01:38] <bjs> jim: messing with names (actual "variables") directly is really hard in Python
[22:01:38] *** Joins: ice9 (~ice9@user/ice9)
[22:01:47] <bjs> jim: I'd use a dictionary and make the 'variables' be keys
[22:01:55] <Forty-Bot> hm, so the weird thing is that other threaded tests run fine
[22:02:04] <Forty-Bot> it's just the one test interfering with itself...
[22:02:18] <jim> already got dictionaries, might as well use em
[22:02:49] <jim> bjs, thanks
[22:03:51] *** Quits: avane (~avane@fsf/member/avane) (Quit: o/)
[22:03:52] <deniska> foo: And often it's not a simple stylistic issue like "you used := in not too sane of a place" but rather something more… high level? Like "you wrote a class with the word Controller or Service in its name"
[22:04:43] *** Quits: naari (~naari@user/naari) (Ping timeout: 256 seconds)
[22:04:43] <foo> deniska: I can see that
[22:05:37] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[22:07:08] *** Joins: avane (~avane@fsf/member/avane)
[22:08:09] <hyiltiz> In a module with 10 functions, is there a way to make 9 of them internal without having to sprinkle a dash of _ before all of 9 functions?
[22:08:09] <hyiltiz> (Or better, if there is a way to strictly disallow importing those 9 functions when `import some_module` is called, or even just name mangle for me without sprinkling the underscores, that would be acceptable too)
[22:08:36] *** Joins: macbook (~macbook@cpc101496-gill19-2-0-cust142.20-1.cable.virginm.net)
[22:08:40] *** Quits: msalvatore (~msalvator@c-174-60-145-36.hsd1.pa.comcast.net) (Remote host closed the connection)
[22:08:50] <deniska> foo: like for this snippet you shared my first question would be "csv? Why are we doing that to ourselves?"
[22:09:18] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[22:09:56] *** Joins: agireud (~agireud@user/agireud)
[22:11:57] *** macbook is now known as toadtoad
[22:13:17] *** Quits: toadtoad (~macbook@cpc101496-gill19-2-0-cust142.20-1.cable.virginm.net) (Client Quit)
[22:13:38] *** Joins: c4017w__ (~c4017@209.52.68.8)
[22:13:53] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 250 seconds)
[22:14:13] <jinsun> hyiltiz: put the "private" ones in a separate module and import in some_module frorm there
[22:15:15] <foo> deniska: Ha! This specific data originates in that format
[22:15:58] <deniska> foo: is it really, or do they send it to you because "well, they always asked us for a csv"?
[22:16:05] *** Joins: cuz (~user@50.226.229.246)
[22:16:10] *** Quits: x_kuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[22:16:20] *** Quits: Masklin (~joel@h-155-4-23-152.A230.priv.bahnhof.se) (Ping timeout: 252 seconds)
[22:16:22] <foo> deniska: nah, it really is, it comes down from "the top" like that.
[22:16:56] *** Quits: someuser (~user@197.54.43.98) (Ping timeout: 250 seconds)
[22:17:21] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[22:17:42] <hyiltiz> so split some_module into some_module1 and _some_module2 where the former has 1 (public) function and the latter has 9 (private) functions?
[22:18:02] <hyiltiz> But anyone could still import that _some_module2
[22:18:23] *** Joins: sambauer64 (~sambauer6@86.121.131.207)
[22:18:39] *** Quits: pro_z_ (~pro_z@37.214.83.4) (Ping timeout: 256 seconds)
[22:19:21] <jinsun> yes the underscore is just there for linters to complain
[22:19:24] *** Joins: xkuru (~xkuru@user/xkuru)
[22:19:32] <sambauer64> hi. how could I use python to search google earth data for a certain pattern?
[22:19:38] <jinsun> but someone can choose not to use a linter
[22:20:07] *** Joins: humberto1 (~humbertow@187.202.198.64)
[22:22:40] <hyiltiz> I am thinking maybe I should put all those "private" functions nested inside a def _locked(): function, which will definitely prevent anyone from accessing them, right?
[22:22:48] *** Joins: mixfix41 (~sdenyninn@user/mixfix41)
[22:23:15] <hyiltiz> This kind of abusing function scope seems prevalent in JS; but not popular in Python it seems
[22:24:53] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[22:25:08] *** Quits: vitali64 (~vitali64@user/vitali64) (Quit: leaving)
[22:25:24] *** Joins: vitali64 (~vitali64@user/vitali64)
[22:25:34] <aphysically> hurrah cpython tests getting fixed https://bugs.python.org/issue46648
[22:27:11] *** Quits: Vonter (~Vonter@user/vonter) (Quit: WeeChat 3.4)
[22:27:38] *** Joins: x_kuru (~xkuru@user/xkuru)
[22:28:13] *** Joins: trampel (~trampel@2601:602:9a00:49d:66c3:555c:839f:ad22)
[22:28:14] *** Joins: beli6147 (~Thunderbi@174.128.60.162)
[22:28:31] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 256 seconds)
[22:28:41] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:60ef:8113:9157:1102)
[22:28:57] *** Parts: joel135 (sid136450@id-136450.hampstead.irccloud.com) ()
[22:30:31] *** Quits: qwedfg_ (~qwedfg@user/qwedfg) (Read error: Connection reset by peer)
[22:30:57] *** Quits: HaMsTeRs (~Thunderbi@210.3.213.4) (Ping timeout: 240 seconds)
[22:32:59] *** Joins: Viewday116 (~Viewday@user/viewday)
[22:33:00] *** Quits: tomg (~tomg@user/tomg) (Remote host closed the connection)
[22:33:24] *** Joins: DavidMilestone (~DavidMile@2409:4053:2295:6a26:bd0b:a8b9:b529:93a2)
[22:33:30] *** Joins: HaMsTeRs (~Thunderbi@210.3.213.4)
[22:33:52] *** Joins: kilitary (~kilitary@82.148.25.66)
[22:33:58] <DavidMilestone> Does the keyword argument **kwargs always generate a dictionary?
[22:34:00] *** Joins: tomg (~tomg@user/tomg)
[22:34:28] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[22:34:31] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[22:34:32] *** Viewday116 is now known as Viewday11
[22:36:09] *** Joins: nomic (~nomic@185.217.117.244)
[22:36:28] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[22:37:00] <ChrisWarrick> DavidMilestone: yes
[22:37:05] <DavidMilestone> Thank you
[22:37:46] *** Joins: Guest3 (~Guest3@106.51.143.241)
[22:37:51] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Read error: Connection reset by peer)
[22:38:15] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[22:38:22] *** Joins: SaltHillStroller (~SaltHillS@199.249.111.186)
[22:38:36] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[22:38:53] *** Quits: tomg (~tomg@user/tomg) (Ping timeout: 252 seconds)
[22:41:12] *** Quits: humberto1 (~humbertow@187.202.198.64) (Ping timeout: 250 seconds)
[22:41:14] *** Joins: vicfred (~vicfred@user/vicfred)
[22:41:19] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[22:42:13] *** Quits: pycode1 (~pycode3@2001:b07:5d28:551:5288:89d0:60b2:e5a8) (Ping timeout: 256 seconds)
[22:42:16] *** Quits: beli6147 (~Thunderbi@174.128.60.162) (Quit: beli6147)
[22:43:06] *** Joins: junebug (~junebug@2600:1700:3db0:2540:4fb9:6e37:792b:8bf0)
[22:43:11] *** Joins: water_27300935_ (~xe@182.90.128.148)
[22:46:42] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[22:47:14] <water_27300935_> https://docs.python.org/3/library/webbrowser.html#webbrowser.get
[22:48:08] <water_27300935_> When I use "a = webbrowser.get(using = 'firefox')" on Windows
[22:48:14] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:a5e1:d8fc:db8d:5548) (Ping timeout: 252 seconds)
[22:48:17] *** Quits: SaltHillStroller (~SaltHillS@199.249.111.186) (Ping timeout: 240 seconds)
[22:48:33] <water_27300935_> Rise "webbrowser.Error: could not locate runnable browser"
[22:48:45] <water_27300935_> That only works on Linux
[22:50:17] *** Joins: naranja (~orange@user/orangeboxcutter)
[22:51:08] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[22:51:15] <ChrisWarrick> water_27300935_: it looks like it’s trying to search in $PATH, which doesn’t make a lot of sense on windows
[22:52:10] *** Quits: dtux (~dtux@c-98-207-149-218.hsd1.ca.comcast.net) (Quit: dtux)
[22:52:22] *** Quits: trampel (~trampel@2601:602:9a00:49d:66c3:555c:839f:ad22) (Quit: Leaving)
[22:53:06] <RougeR> welp this is a hot hacky mess
[22:53:08] <RougeR> but it works
[22:53:09] <RougeR> https://bpa.st/D6YQ
[22:53:20] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Read error: Connection reset by peer)
[22:53:30] <RougeR> just need to celery will play ball with the ThreadPoolExecutor now
[22:53:44] <ChrisWarrick> celery + threads seems strange to me
[22:53:54] <ChrisWarrick> isn’t the point of celery to have worker processes?
[22:54:06] *** Quits: onichomp (~onichomp@2806:264:4408:5d:a80d:ebda:c447:6602) (Read error: Connection reset by peer)
[22:54:06] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[22:54:15] <RougeR> it is, this is to handle aborting tasks cleanly without adding statements in the task code
[22:54:27] <RougeR> https://docs.celeryproject.org/en/stable/reference/celery.contrib.abortable.html
[22:54:28] <Celelibi> Doesn't celery play bad with threads? Or is it with multiprocessing?
[22:54:38] <RougeR> Celelibi, yeah thats what im about to find out
[22:54:46] <ChrisWarrick> RougeR: how does your solution help with aborting?
[22:55:01] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[22:55:01] <RougeR> ChrisWarrick, give me a min ill throw it together
[22:55:39] *** Joins: onichomp (~onichomp@2806:264:4408:5d:a80d:ebda:c447:6602)
[22:56:13] <water_27300935_> ChrisWarrick: I add Firefox binary path to Windows PATH, it works.
[22:56:24] <water_27300935_> ChrisWarrick: thanks.
[22:56:42] <ChrisWarrick> water_27300935_: (firefox should be your default browser)
[22:58:08] <DavidMilestone> How do I print a dictionary in the order it was filled?
[22:58:21] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[22:58:52] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[22:59:08] <ChrisWarrick> DavidMilestone: do you mean "order by file creation date"?
[22:59:21] <water_27300935_> ChrisWarrick: Yes, but not work without add Firefox installation path to Windows system PATH.
[22:59:38] <ChrisWarrick> water_27300935_: if firefox is your default browser, then webbrowser.open() without any arguments will launch it
[22:59:53] <ChrisWarrick> and firefox is the best browser, so it should be your default browser
[22:59:54] *** Joins: Azem (~haise01@user/haise01)
[23:01:53] <RougeR> ChrisWarrick,
[23:01:59] <RougeR> this is just mocked up
[23:01:59] <RougeR> https://bpa.st/P4TA
[23:02:05] *** Joins: mattfoxxx (~mattfoxxx@200116b822ba5e00f9783ff2bfc0cc37.dip.versatel-1u1.de)
[23:02:10] *** Joins: sanmingzhi (~duimech@h96-61-237-176.tlpltn.broadband.dynamic.tds.net)
[23:02:30] <RougeR> by using a thread to run the actual task code it means that my task code doesnt have to call is_aborted() constantly
[23:02:33] <ChrisWarrick> that looks like a complete hack
[23:02:50] <RougeR> see
[23:02:50] <RougeR> https://bpa.st/WKIA
[23:02:56] *** Quits: eson123 (~whatever@user/eson123) (Quit: Leaving)
[23:03:04] <RougeR> ChrisWarrick, it is, there is also no other way of doing it
[23:03:17] *** Quits: Emet-Selch (~haise01@user/haise01) (Ping timeout: 240 seconds)
[23:03:18] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 250 seconds)
[23:03:21] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:b54:51f:6720:5b3c)
[23:03:28] <RougeR> you might be able to use asyncio or multithread or whatever
[23:03:32] <RougeR> but its still the only way
[23:03:36] <ChrisWarrick> I’d prefer to rewrite the task code somehow to make it more abort-friendly
[23:03:54] <RougeR> ChrisWarrick, then you have to write is_aborted() everytime you do something
[23:03:54] <DavidMilestone> ChrisWarrick: I'm not sure what that exactly means, but here's what I'm trying to do: https://bpa.st/2WCQ
[23:03:55] <DavidMilestone> The output is not in order - from the `first` argument. It is printing the keyword arguments first, and then the formal arguments.
[23:04:04] <RougeR> and you litter all your code with those checks
[23:04:30] *** Parts: water_27300935_ (~xe@182.90.128.148) (WeeChat 3.4)
[23:04:42] <DavidMilestone> RougeR, your code looks beautiful
[23:04:53] <RougeR> https://bpa.st/IQBQ
[23:05:01] <RougeR> ChrisWarrick, so see here
[23:05:54] <RougeR> im running a long running ffmpeg video transcode and i have to pass in the is_aborted function to the function in order to avoid aborts being ignored
[23:06:02] <ChrisWarrick> DavidMilestone: oh, sorry, I misread "dictionary" as "directory"
[23:06:25] <RougeR> we are using fargate autoscaling so tasks will live and die at will and will send a SIGTERM when they do
[23:06:30] <DavidMilestone> That's okay
[23:06:31] <RougeR> i trap this SIGTERM and execute this code
[23:06:45] *** Quits: mattfoxxx (~mattfoxxx@200116b822ba5e00f9783ff2bfc0cc37.dip.versatel-1u1.de) (Ping timeout: 250 seconds)
[23:06:52] <RougeR> https://bpa.st/EDGA
[23:06:59] <ChrisWarrick> DavidMilestone: you add "first" and "second" to the dict after it’s filled by Python when creating user_info from keyword arguments
[23:07:01] <RougeR> DavidMilestone, now that is clean code lol
[23:07:48] <RougeR> ChrisWarrick, do you see what im getting at now?
[23:08:29] <RougeR> by managing the actual task code with this thread_handler it means by actually application code does not get littered with celery domain specific requirements
[23:08:32] <ChrisWarrick> RougeR: it kinda makes sense, but I would rethink the use of celery for this, and instead write something async that can listen to cancellations
[23:08:35] <jinsun> DavidMilestone: you might want to use https://docs.python.org/3/library/collections.html#collections.OrderedDict, it has a move_to_end method that you can use to move the "first" and "second" keys from end to start
[23:08:39] <RougeR> ChrisWarrick, thats the issue!
[23:08:53] <RougeR> you cant retry because the task will not fail unless you check is_aborted()
[23:09:10] <RougeR> this needs to be celery as its a workflow-engine
[23:09:24] <RougeR> this is a big workflow/task processing application
[23:10:04] *** Quits: nicoz (nicoz@nicoz.letz.dev) (Changing host)
[23:10:04] *** Joins: nicoz (nicoz@ubuntu/member/nicoz)
[23:10:50] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[23:10:55] <RougeR> we are using a fork of: https://github.com/ovh/celery-director
[23:11:02] <RougeR> i g2g get ready to go out
[23:11:04] <RougeR> chat later
[23:11:06] <DavidMilestone> Ah, that seems like a lot of work
[23:11:14] *** Joins: djapo (~archangel@user/djapo)
[23:11:23] <ChrisWarrick> DavidMilestone: programming is a lot of work
[23:11:37] *** Joins: reset (~reset@user/reset)
[23:11:37] <DavidMilestone> I'll try both the solutions
[23:11:52] *** Joins: parv (~quass@user/parv)
[23:12:15] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[23:12:45] <DavidMilestone> ChrisWarrick, I'm not sure how to implement your solution
[23:13:22] <ChrisWarrick> DavidMilestone: in recent python versions: {"first": first_name, "second": last_name} | user_info
[23:13:55] *** Joins: c4017w_ (~c4017@209.52.68.8)
[23:14:20] <DavidMilestone> oh
[23:16:26] *** Quits: nicode (~nic@2607:f2c0:9541:7100:7034:ab5c:4fd9:7549) (Ping timeout: 260 seconds)
[23:17:17] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[23:17:18] <DavidMilestone> It's only printing the first three arguments
[23:17:28] <ChrisWarrick> first thre?
[23:17:29] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[23:17:37] <DavidMilestone> Yep
[23:17:42] <DavidMilestone> first, last, and age
[23:17:58] <DavidMilestone> in the given order: age, first, last
[23:18:17] *** Joins: nicode (~nic@2607:f2c0:9545:ab00:3e60:8518:dd62:e6e8)
[23:18:18] <ChrisWarrick> show your code?
[23:18:53] *** Joins: tomg (~tomg@user/tomg)
[23:19:06] <DavidMilestone> https://bpa.st/DR4Q
[23:19:27] <ChrisWarrick> DavidMilestone: you need to return this value
[23:19:36] <ChrisWarrick> DavidMilestone: return {"first": first_name, "last": last_name} | user_info
[23:19:42] <DavidMilestone> Sorry, the output is: age, city, and location.
[23:19:44] <DavidMilestone> Oh
[23:19:58] <DavidMilestone> What's this technique called?
[23:20:26] <ChrisWarrick> which technique?
[23:20:41] <DavidMilestone> `| user_info`
[23:20:48] <grym> merging two dicts
[23:20:50] <ChrisWarrick> https://www.python.org/dev/peps/pep-0584/
[23:21:02] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[23:21:29] <DavidMilestone> Okay, thank you!
[23:22:43] *** Babar is now known as Guest1639
[23:22:43] *** Joins: Babar_ (~Babar@115.74.184.138)
[23:22:43] *** Quits: Guest1639 (~Babar@115.74.184.138) (Killed (strontium.libera.chat (Nickname regained by services)))
[23:22:43] *** Babar_ is now known as Babar
[23:24:03] *** Joins: Babar_ (~Babar@115.74.184.138)
[23:24:03] *** Babar is now known as Guest8900
[23:24:03] *** Babar_ is now known as Babar
[23:24:14] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[23:24:15] <RougeR> wooop woop
[23:24:18] *** Joins: Barones (~Barones@user/Barones)
[23:24:23] <RougeR> that worked first time!
[23:24:40] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[23:25:08] <RougeR> ChrisWarrick, hopefully that is clearer
[23:25:08] <RougeR> https://bpa.st/PLZQ
[23:25:14] <DavidMilestone> What does your program do? RougeR, it looks amazing
[23:25:40] *** Joins: upsala (~zcb@185.213.155.252)
[23:25:44] <RougeR> DavidMilestone, its part of the functionality for a task/workflow project im on
[23:25:56] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[23:26:13] <DavidMilestone> I see
[23:26:19] *** Parts: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) ()
[23:26:21] <RougeR> this code allows us to kill long running tasks manually or automatically when workers autoscale or die
[23:27:01] <RougeR> and have them fail/retry gracefully, without us having to put additional code into the implementation logic, the thread_handler is going to become either a decorato/context_manager/base_class func
[23:27:36] *** Quits: cuz (~user@50.226.229.246) (Remote host closed the connection)
[23:27:46] *** Joins: bloody (~bloody@user/bloody)
[23:27:46] *** Joins: cuz (~user@50.226.229.246)
[23:28:01] *** Quits: Guest8900 (~Babar@115.74.184.138) (Ping timeout: 256 seconds)
[23:28:11] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[23:28:39] *** Joins: crashrep (~crashrep@user/crashrep)
[23:28:46] *** Joins: Naan (~naan@user/naan)
[23:28:55] <DavidMilestone> Do I need to know the concepts of Operating Systems (or Computer System Architecture) to write something like your code?
[23:29:49] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8) (Ping timeout: 256 seconds)
[23:30:04] <RougeR> DavidMilestone, not that much really
[23:30:48] <RougeR> you can understand the basics and just abstract the rest...ive learnt this as i went
[23:30:48] *** Quits: HaMsTeRs (~Thunderbi@210.3.213.4) (Quit: HaMsTeRs)
[23:30:57] <RougeR> never dealt much with threads or signalling before now
[23:31:39] *** Joins: cocalero (~cocalero@200-140-37-88.user3p.brasiltelecom.net.br)
[23:31:45] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[23:31:47] *** Joins: fannagoganna (uid110488@id-110488.tinside.irccloud.com)
[23:32:19] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 250 seconds)
[23:32:23] *** Parts: cocalero (~cocalero@200-140-37-88.user3p.brasiltelecom.net.br) ()
[23:32:46] *** Quits: cuz (~user@50.226.229.246) (Ping timeout: 260 seconds)
[23:34:28] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[23:34:39] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca)
[23:34:55] *** Quits: crashrep (~crashrep@user/crashrep) (Remote host closed the connection)
[23:35:16] *** Joins: crashrep (~crashrep@user/crashrep)
[23:35:40] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[23:35:46] *** Joins: sirn- (~sirn@user/sirn)
[23:35:57] *** Babar is now known as Guest7587
[23:36:01] *** Joins: Babar (~Babar@115.74.184.138)
[23:36:56] *** Quits: sirn (~sirn@user/sirn) (Ping timeout: 268 seconds)
[23:36:56] *** sirn- is now known as sirn
[23:38:10] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[23:38:47] *** Quits: Guest7587 (~Babar@115.74.184.138) (Ping timeout: 256 seconds)
[23:39:06] *** Quits: onichomp (~onichomp@2806:264:4408:5d:a80d:ebda:c447:6602) (Read error: Connection reset by peer)
[23:39:44] *** Joins: onichomp (~onichomp@2806:264:4408:5d:a80d:ebda:c447:6602)
[23:40:19] *** Quits: imp (~imp@138-59-122-25.static.sumicity.net.br) (Quit: imp)
[23:40:56] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[23:42:36] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[23:43:13] *** Quits: mcglk (~mcglk@131.191.49.120) (Read error: Connection reset by peer)
[23:44:21] *** Joins: mcglk (~mcglk@131.191.49.120)
[23:45:18] *** Joins: Malin (~CIA@pirate.pt)
[23:49:51] *** Quits: Sargento (uid523534@wikipedia/Sargento-de-Hierro) (Excess Flood)
[23:50:28] *** Joins: Sargento (uid523534@wikipedia/Sargento-de-Hierro)
[23:51:56] <mattf> this is a bit of a hacky situation but im using pm2 to manage a process, and this process calls subprocess.check_output(.... some command that evolves a npm package
[23:52:08] <mattf> and it fails when running from pm2 but not normally
[23:52:16] <mattf> if i call directly with python is fine
[23:52:26] *** Quits: Fairy (~Fairy@ti0004a400-5385.bb.online.no) (Ping timeout: 245 seconds)
[23:52:35] *** Quits: kilitary (~kilitary@82.148.25.66) (Ping timeout: 252 seconds)
[23:52:47] <mattf> other subprocess calls work fine with with pm2 so i think it is because of the environment variables on pm2 or something? im not sure
[23:52:54] <deniska> mattf: environment is probably different
[23:53:39] <deniska> print os.environ and compare
[23:53:46] <mattf> os.environ? ok
[23:54:42] *** Quits: rattle_me_bones (~herpderp@user/rattle-me-bones/x-8906882) (Quit: WeeChat 3.4)
[23:55:57] *** Joins: et_ (~et@user/et)
[23:56:26] *** Quits: vitali64 (~vitali64@user/vitali64) (Ping timeout: 252 seconds)
[23:56:26] *** Quits: et (~et@user/et) (Ping timeout: 252 seconds)
[23:56:28] *** et_ is now known as et
