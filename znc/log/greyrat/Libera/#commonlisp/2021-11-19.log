[00:05:32] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[00:05:55] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[00:08:40] <phantomics> Follow-up to my previous question, I've added :env properties to my Slime ABCL invocation but they don't work, they are :env ("JAVA_HOME=/home/user/src/linux/jdk-12/" "PATH=/opt/apache-maven-3.8.3/bin:$PATH")
[00:09:08] <phantomics> According to the Slime docs this is the correct format, don't suppose anyone's run into anything like this before?
[00:10:59] *** Joins: dra_ (~dra@2a04:4540:6409:1500:61c7:e8f2:fc82:e4f6)
[00:11:14] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[00:11:47] *** Quits: ym (~ym@95.106.10.166) (Ping timeout: 250 seconds)
[00:14:03] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[00:20:05] *** Joins: didi (~user@user/didi)
[00:20:42] <didi> Is it possible to remove a method definition? Not the generic function, but the method.
[00:21:42] <jcowan> MacOS uses NFD throughout, in particular in pathnames.
[00:22:35] <Catie> didi: remove-method?
[00:22:36] <didi> Oh, I see `remove-method'. Cool.
[00:22:42] <didi> Catie: Indeed. Thanks.
[00:22:45] <Catie> Ah, nice timing
[00:23:42] <phantomics> Follow-up: it looks like in SBCL at least, the :env property in slime-lisp-implementations works. For ABCL, it does not
[00:24:32] <phantomics> For instance, I can pass the option :env ("FOO=123") to SBCL, then after starting SBCL via Slime, enter (uiop:run-program "echo $BLA" :output *standard-output*) and get 123
[00:25:03] *** Quits: hayley (~theemacss@2001:470:69fc:105::234) (Changing host)
[00:25:03] *** Joins: hayley (~theemacss@user/hayley)
[00:26:28] <phantomics> The same does not work in ABCL, "echo $FOO" returns nothing
[00:26:33] <didi> Somewhat tricky getting the right method. SLIME could lend a hand here.
[00:27:29] <Catie> It might be something either closer-mop or whatever your implementation's MOP facilities are could help with. I haven't really messed with either, so I'm afraid I can't provide any specifics
[00:28:15] <didi> Catie: I suppose a combination of FIND-METHOD and REMOVE-METHOD will do, but still.
[00:28:41] <etimmons> In SLIME, I think you can inspect the generic function and remove methods from there
[00:28:56] <didi> etimmons: Ah, that's what I'm talking about.
[00:29:17] *** Quits: dra_ (~dra@2a04:4540:6409:1500:61c7:e8f2:fc82:e4f6) (Quit: Leaving)
[00:29:26] *** Joins: dra (~dra@2a04:4540:6409:1500:61c7:e8f2:fc82:e4f6)
[00:31:06] <didi> Sweet. Thanks, etimmons.
[00:31:23] <etimmons> np
[00:33:30] *** Joins: john__ (~john@dynamic-077-007-005-057.77.7.pool.telefonica.de)
[00:45:05] <Guest74> oh, that's helpful!  I hate haven't to write a big long find this, find that, and this.
[00:52:52] *** Quits: dra (~dra@2a04:4540:6409:1500:61c7:e8f2:fc82:e4f6) (Quit: Leaving)
[00:55:01] *** Quits: cage (~cage@dynamic-adsl-94-34-55-34.clienti.tiscali.it) (Quit: rcirc on GNU Emacs 27.1)
[00:55:07] <didi> It's surprising how many places I'm able to use `shiftf' since I learned it.
[00:56:05] <Catie> didi: You've just changed my life, thank you
[00:56:23] <Guest74> example?
[00:56:58] <didi> Catie: Right?
[00:57:35] <didi> Guest74: In my case, simple stuff like (shiftf (aref array 0) (aref array last-pos) nil).
[00:58:42] <Catie> I knew about rotatef, but this is also very useful
[00:58:44] <Guest74> i mean, I use rotatef all the time, but I can't figure out what to swap in for shiftf
[00:59:07] <didi> Guest74: I started spotting them afterwards.
[01:00:43] <Catie> It's rotatef but it adds in a new value. And goes in the opposite direction
[01:00:52] <Catie> Actually that's weird that it goes in that direction
[01:01:25] <Guest74> I just haven't, or haven't seen, a case where I want to put in a new value.
[01:02:26] <Catie> Guest74: Oh yeah no, I'm just exciting to be adding another tool to my collection!
[01:03:53] <Guest74> lol, yeah, i've been excited about shiftf for years.  I might need to see it in use to really get it.
[01:04:42] *** Joins: frgo (~frgo@p548a30d7.dip0.t-ipconnect.de)
[01:09:10] *** Quits: frgo (~frgo@p548a30d7.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[01:09:55] <Nilby> One common pattern of shiftf is when you want to keep the previous value of something, like: (shiftf last-foo current-foo (new-foo x))
[01:13:00] <Guest74> I usually just push a new value in those cases.
[01:19:30] <Nilby> It's also great when you want to shift responsibily (let ((new-intern (shiftf peon 1xer 10xer (new-project "ðŸ†’")))) ...)
[01:21:25] *** Joins: abrantesasf (~abrantesa@187.36.170.211)
[01:22:54] <Guest74> I'm not understanding that example.
[01:23:35] <Guest74> So i read the clhs again.  Am i reading it right that if the new-value produces multiple values it will fill multiple places with those values?
[01:23:59] <Guest74> that sounds more useful than just shifting one place over, not that I can think of a use of that either.
[01:27:21] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[01:27:36] <Guest74> nope, it doesn't
[01:28:05] <Shinmera> If you need to step with a history of a previous item it's useful. eg: (shiftf prev cur new)
[01:28:10] <Bike> it probably wouldn't be possible to do that efficiently.
[01:29:32] <Guest74> that second paragraph in the description is kinda misleading, or perhaps it's my reading of it.
[01:29:33] <Shinmera> I also seem to have a bunch of stuff in my code that's similar to: (let ((old (shiftf (some-place) new-value))) ..)
[01:30:02] <Bike> hm, no, maybe it could be done
[01:30:34] *** Quits: theothornhill (~user@217.84-49-191.nextgentel.com) (Remote host closed the connection)
[01:30:45] *** Joins: theothornhill (~user@217.84-49-191.nextgentel.com)
[01:31:10] <Guest74> maybe, i'll just grep through shinmera's code and see what's what.
[01:31:31] *** Quits: Inline (~Inline@2a02:908:1252:7a80:6adf:f25e:1e5f:74e1) (Ping timeout: 250 seconds)
[01:31:37] <Guest74> which raises a question, what's a good name for something that does what grep does?
[01:31:48] <Shinmera> ?
[01:33:19] <Guest74> I wrote something that does what grep does, but not sure grep is the name I want.
[01:34:17] <Guest74> huh, apparently I've used shiftf in my own code.  Damn covid has been hell on my memory and thinking.
[01:36:35] <VincentVega> how about grope
[01:36:43] <Shinmera> how about no
[01:41:09] <Guest74> apparently it stands for "Global Regular Expression Print" and I don't do that since I just allow simple wildcards.  guess i really should find another name.
[01:42:01] <hayley> GIEP: global irregular expression print
[01:42:16] <White_Flame> streamatch
[01:42:17] <Nilby> I suggest "pointlessly-search-the-files-again-disregarding-the-deep-structure" to keep your fingers limber.
[01:42:45] <VincentVega> well if you just added regular expressions now...
[01:43:30] *** Quits: pve (~pve@37-136-35-95.rev.dnainternet.fi) (Quit: leaving)
[01:43:31] <Guest74> nilby: I have been thinking of adding the option to return everything from the toplevel parentheses.
[01:44:11] <Guest74> just a before and after n lines doesn't work well when you go past the containing sexp.
[01:44:21] <Shinmera> beh
[01:44:28] <Shinmera> wish I had time for fun lisp projects again
[01:44:53] <Shinmera> haven't made anything new it what feels like ages
[01:45:48] <Guest74> you think you'll take a break after Kandria?
[01:46:17] <Shinmera> That's more than a year out, and I don't know if I can afford to.
[01:46:19] <Guest74> I wish I had your ability to work on and finish one thing.
[01:46:54] <Shinmera> your livelihood depending on it helps with that
[01:47:20] <Nilby> Shinmera: You've already made so many times the average lisper, Almost every category of software, I can say "Oh Shinmera made a one of those."
[01:47:43] <hayley> Guest74: Pro-tip: there are approximately 0 libraries that correctly implement even POSIX extended regular expressions, so you have as good a claim to the name "grep" as anyone else
[01:47:52] <White_Flame> I need an AGI. where's Shinmera's?
[01:48:04] <Shinmera> Nilby: I guess? I'm not doing things because I want to hit some record or whatever though. I just enjoy doing it and I lament not having any time / energy recently to indulge in that.
[01:48:11] <Guest74> hayley: but I can't grok regex.
[01:48:16] *** Quits: NotThatRPG (~NotThatRP@mail.sift.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[01:48:30] <hayley> Guest74: Nor can they. :^)
[01:48:37] <Shinmera> White_Flame: it's called my brain
[01:48:48] <White_Flame> wow, you have an artificial one? ;)
[01:49:04] <Shinmera> yeah I eat a lotta junk food, gotta be artificial by now.
[01:49:39] <White_Flame> gotta be well-preserved for those long term projects
[01:52:03] <Guest74> I just know I have over 50 unfinished projects, so focusing on one thing would be nice.
[01:52:34] <White_Flame> I've been focusing more, just have to prioritize and intentinally sacrifice projects to the indefinite back burner
[01:52:40] <Shinmera> I lost count of my unfinished projects :shrug:
[01:53:04] <hayley> Wait, you guys work on projects?
[01:53:06] <White_Flame> doing presentations gives a nice deadline to push through things to some semblance of releasable completion
[01:53:15] <Shinmera> hayley: sometimes I think about it
[01:53:31] <Nilby> halley: I made I grep, but it sucks. I just used ppcre. I like it better than posix re's, but I think your one-more-re-nightmare is awesome and I wish I could have used that.
[01:53:34] <Shinmera> White_Flame: and making the projects tiny
[01:53:37] *** Joins: dre (~dre@2001:8003:c932:c301:7b6:ec18:50ab:337c)
[01:54:00] <hayley> The hayley strategy: 1. work on project for 2 years 2. publish paper 3. decide no one wants it, and burn out for a year
[01:54:32] <White_Flame> that's why you need to work on things for yourself
[01:54:45] <White_Flame> however, if you're doing peer distributed stuff, that kinda gets necessary
[01:55:02] <Guest74> I think i spend too much time trying to tthink of what would be useful for others.
[01:55:03] <Shinmera> I work on things for myself, but that doesn't mean it isn't sometimes very discouraging to realise that nobody cares lol
[01:55:24] <White_Flame> I've come to expect it ;)
[01:55:37] <Shinmera> Sure, especially in a community this small
[01:55:40] <Guest74> and accept it
[01:55:58] <White_Flame> doesn't really matter the size of the community
[01:56:09] <White_Flame> most of my "releases" have been in retro computing, which is larger
[01:59:38] <hayley> I mean, I did, but now I have to hurt my head on boring and unpublisheable things like "how to not use infinite RAM while verifying objects"
[02:00:44] <Shinmera> making games is like 99% boring and unpublisheable things lol
[02:01:09] <White_Flame> yeah, most of my stuff there has been tools & libs
[02:01:30] <White_Flame> retro _computing_, not retro gaming ;)
[02:02:25] *** Joins: Brucio-4 (~Brucio-4@ip-94-114-248-79.unity-media.net)
[02:03:35] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 250 seconds)
[02:03:52] *** Quits: Brucio-4 (~Brucio-4@ip-94-114-248-79.unity-media.net) (Client Quit)
[02:04:16] <Guest74> I wouldn't mind an apple II emulator in lisp.
[02:05:56] *** Joins: VincentV` (~user@212.241.24.160)
[02:06:05] <Nilby> I've always thought it's odd how much code and work goes into game engines, but what people see is the art. And few engines survive, but the art is timeless.
[02:07:12] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[02:07:35] *** Quits: taiju (~taiju@240b:253:ec40:2400:20e3:d321:f9f8:1864) (Ping timeout: 264 seconds)
[02:07:48] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 268 seconds)
[02:07:48] *** Quits: VincentVega (~user@212.241.24.160) (Ping timeout: 268 seconds)
[02:07:56] *** Quits: asarch (~asarch@2806:10ae:7:2cca:f61b:4cfd:2d42:1782) (Quit: Leaving)
[02:08:46] <Shinmera> it's not that much, actually. Most game's credits have way more artists than coders.
[02:09:27] <Shinmera> games also always do a great job at looking a lot simpler than they are to make.
[02:10:13] *** Joins: taiju (~taiju@240b:253:ec40:2400:20e3:d321:f9f8:1864)
[02:10:27] <Guest74> I've been wondering how hard it would be to make modules for games that could be used across projects.  I don't really have an interest in writing a game engine, but I do have plans for a quest generator.
[02:10:44] <Shinmera> Depends on a lot of factors :)
[02:11:22] <Guest74> and as far as I know, yours is the only engine actually being used in a game.
[02:11:46] <theothornhill> I have an ast which is a deeply nested group of clos instances.  If I want to inspect that ast in the repl I can use sly for that, but is there a simpler/nicer way to look at lisp datastructures?
[02:12:04] <Shinmera> Only if "actually being used in a game" means "a game that is currently on steam and planned to be released commercially." otherwise there's a bunch of Lisp games that are not using my engine.
[02:12:40] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[02:12:45] <hayley> You could write a method for PRINT-OBJECT and make the Lisp printer do the work.
[02:12:58] <Shinmera> maybe not print-object but describe-object.
[02:13:05] <Shinmera> I've done that sometimes
[02:13:49] <Shinmera> But typically you're going to want to write a specialised tool to do the work, because generalised tools are bound to be too clunky.
[02:13:51] <theothornhill> yeah, that's possible, but generates a lot of data, which easily gets messy
[02:14:17] <Guest74> I'm sure some would advocate for the mcclim inspector.
[02:14:38] <theothornhill> Yeah, I've seen that, but that looks wild
[02:14:50] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[02:16:05] <theothornhill> also, in sly inspector, is there a way to set a slot value to a modified value of its current value?
[02:16:27] <theothornhill> SLOT = '(val1 va2)
[02:16:52] <theothornhill> lets say I want it to become a list of the first element
[02:26:57] *** Joins: Oladon (~olad@98.43.81.226)
[02:30:13] <random-nick> CLIM has an inspector which might or might not be nicer than sly's
[02:30:36] <random-nick> https://common-lisp.net/project/mcclim/static/media/screenshots/bundled/inspector.png
[02:33:10] *** Quits: john__ (~john@dynamic-077-007-005-057.77.7.pool.telefonica.de) (Ping timeout: 260 seconds)
[02:33:20] <_death> does it also show factors for bignums? :)
[02:34:13] <theothornhill> Thanks :) I'll look into it!
[02:34:41] <Bike> having everything displayed like that does seem nicer than repeatedly going into subobjects
[02:34:49] <Bike> the circle is maybe a little over the top though.
[02:38:28] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[02:42:16] *** Joins: igemnace (~ian@user/igemnace)
[02:47:31] *** Joins: BytesAndCoffee (~libera@bytes.coffee)
[02:47:56] <BytesAndCoffee> is there a way to alias lambda to something shorter, like 'anon'?
[02:48:55] <random-nick> you can write a simple macro to do that
[02:49:12] <random-nick> there are also some libraries which provide readtable-based shorthand syntax for lambdas
[02:49:37] <random-nick> something like ?(+ % %) for (lambda (x y) (+ x y))
[02:49:50] <BytesAndCoffee> im totally new to lisp
[02:50:37] <BytesAndCoffee> i like it, im not feeling too much like a fish out of water, coming from python
[02:51:05] <White_Flame> (defmacro Î» (params &body body) `(lambda ,params ,@body))
[02:51:25] <White_Flame> would expand (Î» (x) (1+ x)) to (lambda (x) (1+ x))
[02:51:31] <Nilby> BytesAndCoffee: This is my favorite (defmacro _ (&rest exprs) `(lambda (_) (declare (ignorable _)) ,@exprs))
[02:51:38] <Guest74> then you just have to figure out how to write Î»
[02:52:49] <White_Flame> BytesAndCoffee: however, lisp isn't that big on syntactic brevity, but rather allows abstraction & code generation to shorten your code structurally
[02:53:16] *** Joins: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com)
[02:53:19] <White_Flame> but, easily allows syntactic brevity if that's your preference
[02:55:13] <Guest74> It's sometimes easier to read, I've used things like  (Î”C (- C1 C2))
[02:56:04] <Guest74> ...um, within a let, not as a function
[03:02:20] <BytesAndCoffee> is there a way to get nth to take NIL as a 0-y value? akin to `['a', 'b'][False]` in Python returning 'a'
[03:04:04] *** Quits: VincentV` (~user@212.241.24.160) (Remote host closed the connection)
[03:07:48] <BytesAndCoffee> oh, nvm
[03:07:58] <Nilby> Something like (nth (or n 0) list) ?
[03:14:24] <hayley> But why?
[03:17:54] *** Quits: epolanski (uid312403@helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[03:21:14] *** Quits: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca) (Quit: Connection closed)
[03:26:36] *** Joins: s-liao (~s-liao@101.86.101.64)
[03:28:38] *** Quits: dre (~dre@2001:8003:c932:c301:7b6:ec18:50ab:337c) (Remote host closed the connection)
[03:31:40] *** Quits: theothornhill (~user@217.84-49-191.nextgentel.com) (Ping timeout: 268 seconds)
[03:37:13] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[03:38:15] *** Quits: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[03:40:01] *** Joins: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com)
[03:42:05] *** Joins: akoana (~ah@user/akoana)
[03:44:43] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[03:46:07] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[03:46:51] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[03:51:59] *** Quits: taiju (~taiju@240b:253:ec40:2400:20e3:d321:f9f8:1864) (Ping timeout: 264 seconds)
[03:56:17] *** Joins: taiju (~taiju@M014013236064.v4.enabler.ne.jp)
[03:58:36] *** Joins: dre (~dre@2001:8003:c932:c301:f4c:269a:f23f:f4fc)
[04:01:26] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[04:01:35] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[04:01:47] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[04:02:48] *** Quits: dre (~dre@2001:8003:c932:c301:f4c:269a:f23f:f4fc) (Client Quit)
[04:02:52] *** Lord_of_Life_ is now known as Lord_of_Life
[04:03:11] *** Joins: dre (~dre@2001:8003:c932:c301:f4c:269a:f23f:f4fc)
[04:05:25] *** Joins: Colt (~Colt@user/colt)
[04:10:04] *** Quits: dre (~dre@2001:8003:c932:c301:f4c:269a:f23f:f4fc) (Quit: Leaving)
[04:10:24] *** Joins: dre (~dre@2001:8003:c932:c301:f4c:269a:f23f:f4fc)
[04:22:04] *** stacksmith is now known as asshole
[04:22:05] *** asshole is now known as Guest1876
[04:22:11] *** Joins: Volt (~Volt@c-73-145-161-51.hsd1.mi.comcast.net)
[04:22:29] *** Guest1876 is now known as asshloe
[04:24:55] *** Quits: dre (~dre@2001:8003:c932:c301:f4c:269a:f23f:f4fc) (Quit: Leaving)
[04:25:07] *** Quits: rgherdt (~rgherdt@2a02:8109:86c0:d8d:b451:65f7:f961:6c1a) (Remote host closed the connection)
[04:25:19] *** Joins: dre (~dre@2001:8003:c932:c301:f4c:269a:f23f:f4fc)
[04:25:25] *** Joins: rgherdt (~rgherdt@2a02:8109:86c0:d8d:b451:65f7:f961:6c1a)
[04:27:42] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Remote host closed the connection)
[04:33:17] *** Quits: random-nick (~random-ni@87.116.165.220) (Ping timeout: 265 seconds)
[04:38:32] *** Joins: asarch (~asarch@2806:10ae:7:2cca:f61b:4cfd:2d42:1782)
[04:46:01] *** Joins: random-nick (~random-ni@87.116.180.220)
[04:55:50] *** Quits: random-nick (~random-ni@87.116.180.220) (Ping timeout: 256 seconds)
[05:07:46] *** Quits: Catie (~user@user/catie) (Quit: heading out)
[05:08:47] *** Quits: yewscion (~yewscion@2604:ca00:148:c10d::1061:ce86) (Ping timeout: 264 seconds)
[05:31:11] *** Quits: waleee (~waleee@h-82-196-111-63.NA.cust.bahnhof.se) (Quit: WeeChat 3.3)
[05:37:31] *** Quits: asarch (~asarch@2806:10ae:7:2cca:f61b:4cfd:2d42:1782) (Quit: Leaving)
[05:58:45] *** Joins: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca)
[06:20:07] *** Joins: green_ (~green@bras-base-toroon0628w-grc-49-142-112-220-24.dsl.bell.ca)
[06:22:43] *** Quits: atgreen (~green@bras-base-toroon0628w-grc-49-142-112-220-24.dsl.bell.ca) (Ping timeout: 250 seconds)
[06:38:24] *** Quits: taiju (~taiju@M014013236064.v4.enabler.ne.jp) (Ping timeout: 256 seconds)
[06:39:52] *** Joins: lisp123 (~lisp123@5.30.23.247)
[06:40:10] <lisp123> scymtym: Thanks! That worked well
[06:42:14] *** Joins: taiju (~taiju@M014013236064.v4.enabler.ne.jp)
[06:52:54] *** Parts: light (~light@user/light) ()
[06:57:29] *** Quits: Bike (~Glossina@71.69.170.70) (Quit: sleep)
[06:57:45] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[07:17:32] *** Joins: aartaka (~aartaka@5.1.53.225)
[07:20:54] *** Quits: green_ (~green@bras-base-toroon0628w-grc-49-142-112-220-24.dsl.bell.ca) (Ping timeout: 256 seconds)
[07:29:54] *** Joins: beach (~user@2a01:cb19:150:3400:19c5:3107:1bdf:7573)
[07:29:54] *** ChanServ sets mode: +o beach
[07:30:05] *** beach sets mode: -o beach
[07:30:50] <beach> Good morning everyone!
[08:04:14] *** Quits: s-liao (~s-liao@101.86.101.64) (Quit: Client closed)
[08:11:38] *** Quits: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca) (Ping timeout: 268 seconds)
[08:11:54] *** Quits: X-Scale (~ARM@46.50.7.119) (Ping timeout: 256 seconds)
[08:12:12] *** Joins: X-Scale` (~ARM@165.201.137.78.rev.vodafone.pt)
[08:13:53] *** X-Scale` is now known as X-Scale
[08:14:00] <lisp123> Good morning beach
[08:18:47] *** Joins: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143)
[08:19:40] <ebrasca> Good morning beach!
[08:19:59] *** Quits: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143) (Read error: Connection reset by peer)
[08:20:12] *** Joins: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143)
[08:21:30] *** Quits: aartaka (~aartaka@5.1.53.225) (Ping timeout: 268 seconds)
[08:22:19] *** Quits: semz (~none@user/semz) (Ping timeout: 250 seconds)
[08:22:25] *** Joins: aartaka (~aartaka@5.1.53.225)
[08:24:20] *** Quits: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143) (Client Quit)
[08:26:40] *** Joins: s-liao (~s-liao@101.86.101.64)
[08:27:46] *** Quits: jealousmonk (~user@2804:431:e7c4:15cc:f258:de9e:9ab0:dc5c) (Quit: ERC (IRC client for Emacs 27.1))
[08:34:30] *** Joins: Oladon (~olad@98.43.81.226)
[08:35:01] *** Joins: semz (~none@user/semz)
[08:36:04] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[08:57:40] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[09:09:27] *** Quits: Jach (~Jach@2601:600:8600:307:7e31:e7a7:f1f3:a96b) (Read error: Connection reset by peer)
[09:11:42] *** Quits: azimut_ (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[09:12:19] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[09:18:36] *** Joins: Jach (~Jach@2601:600:8600:307:7e31:e7a7:f1f3:a96b)
[09:50:30] *** Quits: bcasiello__ (~bcasiello@066-189-087-112.biz.spectrum.com) (Ping timeout: 256 seconds)
[10:04:10] *** Joins: Lycurgus (~juan@98.4.112.204)
[10:07:16] *** Parts: pranavats (3fba1d1b34@jabberfr.org) (Disconnected: Replaced by new connection)
[10:08:37] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[10:09:08] *** Quits: s-liao (~s-liao@101.86.101.64) (Quit: Client closed)
[10:36:29] *** Joins: john__ (~john@dynamic-095-117-032-097.95.117.pool.telefonica.de)
[10:39:34] *** Quits: Volt (~Volt@c-73-145-161-51.hsd1.mi.comcast.net) (Quit:  )
[10:45:15] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Quit: WeeChat 3.3)
[10:51:37] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[10:52:00] *** Joins: Cymew (~ante@c-e989225c.023-1144-7570702.bbcust.telenor.se)
[10:52:26] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[10:54:40] *** Joins: VincentVega (~user@212.241.24.160)
[10:59:02] *** Quits: amb007 (~a_bakic@102.215.76.86.rev.sfr.net) (Ping timeout: 260 seconds)
[10:59:27] *** Joins: amb007 (~a_bakic@29.247.204.77.rev.sfr.net)
[11:03:14] *** Quits: aartaka (~aartaka@5.1.53.225) (Ping timeout: 260 seconds)
[11:04:59] *** Joins: aartaka (~aartaka@176.59.199.120)
[11:07:32] *** Quits: dre (~dre@2001:8003:c932:c301:f4c:269a:f23f:f4fc) (Ping timeout: 240 seconds)
[11:07:59] *** Quits: Lord_Nightmare (~Lord_Nigh@user/lord-nightmare/x-3657113) (Remote host closed the connection)
[11:10:21] *** Joins: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113)
[11:22:17] *** Joins: mrcom_ (~mrcom@99-73-215-70.lightspeed.irvnca.sbcglobal.net)
[11:22:22] *** Quits: mrcom (~mrcom@99-73-215-70.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 260 seconds)
[11:32:30] *** Quits: john__ (~john@dynamic-095-117-032-097.95.117.pool.telefonica.de) (Ping timeout: 256 seconds)
[11:32:46] *** Quits: VincentVega (~user@212.241.24.160) (Read error: Connection reset by peer)
[11:35:46] *** Joins: s-liao (~s-liao@101.86.101.64)
[11:39:49] <jackdaniel> lisp123: it seems that I gave you somewhat incorrect information about asdf yesterday (scymtym provided correction), sorry about that
[11:49:59] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[11:50:03] *** Quits: amb007 (~a_bakic@29.247.204.77.rev.sfr.net) (Read error: Connection reset by peer)
[11:56:29] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[11:57:28] *** Quits: s-liao (~s-liao@101.86.101.64) (Ping timeout: 256 seconds)
[12:00:52] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[12:07:26] *** Joins: VincentVega (~user@212.241.24.160)
[12:07:46] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[12:13:03] <lisp123> jackdaniel: No issues :)
[12:19:40] *** Joins: puchacz (~puchacz@cpc96912-walt25-2-0-cust541.13-2.cable.virginm.net)
[12:26:00] *** Quits: lisp123 (~lisp123@5.30.23.247) (Quit: Leaving...)
[12:27:34] *** Quits: resttime (~rest@2604:a880:400:d0::1b48:d001) (Quit: resttime)
[12:29:09] *** Joins: resttime (~rest@2604:a880:400:d0::1b48:d001)
[12:30:12] <puchacz> morning - in trivia a pattern (list :x y z) means match to a list that starts with the keyword :x, then bind remaining 2 elements to variables y and z. How can I say that I want to match to a list that has a specific symbol, like I did for the keyword please?
[12:32:24] *** Quits: resttime (~rest@2604:a880:400:d0::1b48:d001) (Client Quit)
[12:33:18] *** Joins: resttime (~rest@2604:a880:400:d0::1b48:d001)
[12:41:39] *** Joins: cage (~cage@dynamic-adsl-94-34-55-34.clienti.tiscali.it)
[12:47:11] *** Quits: _whitelogger (~whitelogg@uruz.whitequark.org) (Ping timeout: 264 seconds)
[12:48:12] *** Joins: _whitelogger (~whitelogg@uruz.whitequark.org)
[12:55:18] <jackdaniel> perhaps (list :x 'y 'z) (just guessing)
[13:03:45] *** Joins: VincentV` (~user@212.241.24.160)
[13:05:37] *** Joins: lisp123 (~lisp123@5.30.23.247)
[13:05:47] *** Quits: VincentVega (~user@212.241.24.160) (Ping timeout: 268 seconds)
[13:06:18] *** Joins: s-liao (~s-liao@101.86.101.64)
[13:06:26] <lisp123> Why was CMUCL conceptually hard to port to new platforms and how did SBCL solve that (if anybody knows)?
[13:10:23] <jackdaniel> cmucl build relied (still relies) on a previous version of cmucl, sbcl now  may be boostrapped from a conforming common lisp implementation
[13:10:51] <lisp123> Ah, that makes a lot of sense
[13:11:45] <jackdaniel> also cmucl bundled (bunles?) various contribs like clx etc, so there were more software to "port" if necessary
[13:12:20] <lisp123> That's true. Stuff like hemlock as well
[13:12:22] <jackdaniel> sbcl has only the implementation and implementation-specific contribs (if I understand correctly)
[13:13:44] <lisp123> So ECL & CLISP play a big role in portability of the ecosystem
[13:14:08] <jackdaniel> I'd say that sbcl is also a conforming implementation you may bootstrap it from
[13:15:08] <lisp123> I see
[13:15:47] <jackdaniel> here's a funny quiz: (define-symbol-macro foo 42) (constantp 'foo) ; <- what is the result of the second form?
[13:18:16] <puchacz> jackdaniel - thanks, I will try
[13:21:33] *** Joins: dre (~dre@119-18-0-198.771200.syd.nbn.aussiebb.net)
[13:25:53] <hayley> jackdaniel: It might be true or false, depending on if CONSTANTP expands macros.
[13:27:05] <jackdaniel> exactly
[13:39:15] *** Parts: pranavats (3fba1d1b34@jabberfr.org) ()
[13:45:42] *** Quits: s-liao (~s-liao@101.86.101.64) (Ping timeout: 256 seconds)
[13:48:15] *** Joins: s-liao (~s-liao@101.86.101.64)
[13:50:06] <puchacz> jackdaniel - FYI, quoting a symbol in trivia works.
[13:50:21] <jackdaniel> cool :)
[13:50:32] <puchacz> (match '(:x y 2) ((list :x 'y z) z)) ---> 2
[13:50:59] <puchacz> maybe these things are evaluated?
[13:51:19] <puchacz> the pattern elements. who knows :)
[13:52:37] *** Quits: igemnace (~ian@user/igemnace) (Quit: WeeChat 3.3)
[13:53:52] *** Joins: kingofcsu (~kingofcsu@114.249.135.33)
[14:06:38] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Read error: Connection reset by peer)
[14:08:36] *** Joins: theothornhill (~user@217.84-49-191.nextgentel.com)
[14:09:47] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[14:22:57] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 276 seconds)
[14:23:43] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[14:26:56] *** Joins: Everything (~Everythin@37.115.210.35)
[14:37:03] *** Quits: theothornhill (~user@217.84-49-191.nextgentel.com) (Ping timeout: 268 seconds)
[14:37:35] *** Quits: hhdave (~hhdave@ip212.ip-193-70-71.eu) (Ping timeout: 250 seconds)
[14:37:41] *** Joins: hhdave_ (~hhdave@cpc95050-newt40-2-0-cust471.19-3.cable.virginm.net)
[14:43:11] *** Joins: rotateq (~user@b2b-78-94-235-194.unitymedia.biz)
[14:45:42] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 276 seconds)
[14:46:54] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[14:47:14] *** Joins: igemnace (~ian@user/igemnace)
[14:48:10] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Ping timeout: 260 seconds)
[14:49:11] *** Joins: amb007 (~a_bakic@29.247.204.77.rev.sfr.net)
[14:59:48] *** Joins: random-nick (~random-ni@87.116.180.220)
[15:00:00] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 276 seconds)
[15:00:59] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[15:01:02] *** Quits: amb007 (~a_bakic@29.247.204.77.rev.sfr.net) (Read error: Connection reset by peer)
[15:04:02] <puchacz> okay, fare-quasiquote is a better syntax for matching lists in trivia. works for ABCL. not sure how standard named readtables are.
[15:04:45] <jackdaniel> puchacz: what are you working btw?
[15:05:20] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[15:08:13] *** Parts: didi (~user@user/didi) (O bella ciao bella ciao bella ciao, ciao, ciao.)
[15:13:39] <puchacz> jackdaniel - at my day job, I am analysing a spreadsheet with visual basic formulae.
[15:14:10] <puchacz> so I load it with Java's Apache POI (hacked to show me VBA tree) and map it to Lisp's nested lists
[15:14:12] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[15:14:25] <puchacz> I match against these VBA abstract syntax trees
[15:15:32] *** Quits: kingofcsu (~kingofcsu@114.249.135.33) (Ping timeout: 240 seconds)
[15:15:33] <puchacz> in excel, people tend to copy-paste formulae so only cell references are different, but the formula structure is the same
[15:15:51] <puchacz> like =IF(ISNUMBER(cellRef), something, elseSomethingElse)
[15:16:06] <jackdaniel> indeed sounds like a pattern matching :)
[15:16:23] <puchacz> yes, first time ever I tried it and it is a perfect match, pardon the pun
[15:16:26] <jackdaniel> or parsing
[15:16:51] <puchacz> parsing is done by Apache POI in Java, but their default source code does not expose it, so I had to add a minor hack there first
[15:17:17] <puchacz> I match against what Apache POI returns (but represented as Lisp's nested lists)
[15:17:43] <jackdaniel> I see
[15:17:46] *** Joins: theothornhill (~user@217.84-49-191.nextgentel.com)
[15:20:12] <puchacz> by the way, can I "install" named reatable permanently in my package?
[15:20:46] <puchacz> so I don't need to have (in-readtable :fare-quasiquote) in every file and in REPL?
[15:21:17] <hayley> Packages don't know anything about named readtables, so it seems unlikely.
[15:21:40] <jackdaniel> you could write asdf extension to do that
[15:21:43] <puchacz> is it per file, this form? (in-readtable ...) ?
[15:21:55] <jackdaniel> like asdf-flv
[15:22:05] <jackdaniel> yes, *readtable* is a file local variable
[15:22:13] <puchacz> ok, another day then :)
[15:22:15] <puchacz> tks
[15:24:22] *** Joins: samps (~samps@177.138.113.212)
[15:29:15] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[15:49:35] <puchacz> is the named-readtables library written in standard common lisp btw?
[15:50:03] <puchacz> i.e. guaranteed to work in any compliant lisp? or something that relies on non-standard language extensions?
[15:50:54] <hayley> It's all standard Common Lisp to my knowledge.
[15:51:23] <hayley> At least, I don't see what implementation dependent code would be needed.
[15:53:39] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[15:53:55] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[15:56:48] <rotateq> and even when the #+ and #- save the day ^^
[16:00:01] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[16:01:24] <puchacz> thanks :)
[16:01:50] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[16:12:38] *** Quits: dre (~dre@119-18-0-198.771200.syd.nbn.aussiebb.net) (Ping timeout: 260 seconds)
[16:19:46] <jackdaniel> I've heard that if you run in-readtable under three different implementations at midnight and look in the mirror.. it is too scary to tell
[16:20:50] *** jackdaniel is now known as candlejack
[16:20:52] <puchacz> :)
[16:21:09] <rotateq> hehe
[16:21:21] <rotateq> so who spawn then?
[16:21:26] <rotateq> *spawns
[16:21:54] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 276 seconds)
[16:22:23] * candlejack can't tell but his nick contains a hint why
[16:24:18] *** Quits: aartaka (~aartaka@176.59.199.120) (Read error: Connection reset by peer)
[16:24:30] *** Joins: aartaka (~aartaka@5.1.53.225)
[16:24:42] *** Quits: theothornhill (~user@217.84-49-191.nextgentel.com) (Ping timeout: 260 seconds)
[16:26:46] *** Joins: theothornhill (~user@217.84-49-191.nextgentel.com)
[16:41:06] *** asshloe is now known as stacksmith
[16:56:25] *** Quits: theothornhill (~user@217.84-49-191.nextgentel.com) (Ping timeout: 268 seconds)
[16:57:33] *** Quits: semz (~none@user/semz) (Quit: Leaving)
[17:00:44] *** Quits: Cymew (~ante@c-e989225c.023-1144-7570702.bbcust.telenor.se) (Ping timeout: 268 seconds)
[17:09:28] *** Joins: kingofcsu (~kingofcsu@114.249.135.33)
[17:09:31] *** Joins: theothornhill (~user@217.84-49-191.nextgentel.com)
[17:13:46] *** Joins: Lycurgus (~juan@98.4.112.204)
[17:22:58] *** Joins: thmprover (~user@047-042-215-236.res.spectrum.com)
[17:23:02] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[17:25:52] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[17:28:11] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[17:29:30] *** Quits: theothornhill (~user@217.84-49-191.nextgentel.com) (Ping timeout: 256 seconds)
[17:33:23] *** Joins: Bike (~Glossina@71.69.170.70)
[17:33:23] *** ChanServ sets mode: +o Bike
[17:34:40] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[17:38:27] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Remote host closed the connection)
[17:38:40] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[17:43:30] *** Quits: Colt (~Colt@user/colt) (Quit: Leaving)
[17:43:54] *** Joins: Inline (~Inline@2a02:908:1252:7a80:9b56:dca:ba79:dc9b)
[17:44:40] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 265 seconds)
[17:46:23] *** Joins: pve (~pve@37-136-99-25.rev.dnainternet.fi)
[17:48:22] *** Joins: defb (~defb@user/defb)
[17:48:46] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[18:00:20] *** Joins: theothornhill (~user@217.84-49-191.nextgentel.com)
[18:02:43] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[18:07:57] *** Quits: aartaka (~aartaka@5.1.53.225) (Ping timeout: 268 seconds)
[18:08:04] *** Quits: s-liao (~s-liao@101.86.101.64) (Ping timeout: 256 seconds)
[18:08:22] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[18:10:25] *** Quits: theothornhill (~user@217.84-49-191.nextgentel.com) (Ping timeout: 268 seconds)
[18:10:52] *** Joins: igemnace (~ian@user/igemnace)
[18:14:00] *** Joins: ym (~ym@95.106.10.166)
[18:14:59] *** Quits: kingofcsu (~kingofcsu@114.249.135.33) (Quit: Leaving)
[18:19:00] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[18:20:04] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[18:20:44] *** Joins: waleee (~waleee@h-82-196-111-63.NA.cust.bahnhof.se)
[18:22:24] *** Joins: s-liao (~s-liao@101.86.101.64)
[18:26:07] *** Quits: rotateq (~user@b2b-78-94-235-194.unitymedia.biz) (Remote host closed the connection)
[18:32:34] *** Quits: s-liao (~s-liao@101.86.101.64) (Quit: Client closed)
[18:33:20] *** Joins: Guest7476 (~Guest74@modemcable110.164-177-173.mc.videotron.ca)
[18:39:54] <Guest7476> couldn't you just change the readtable in your config file?
[18:40:32] <puchacz> not sure, these things are new to me
[18:40:37] *** Quits: samps (~samps@177.138.113.212) (Quit: Client closed)
[18:40:58] <puchacz> and I need to balance my time between actually progressing with analysing the spreadsheet and improving the toolset
[18:41:26] <puchacz> so for now I am accepting I need to change the readtable in every file or when I start REPL
[18:42:17] <puchacz> on another note, I think changing readtable knocked out reader macro in ABCL that I used to call into Java, e.g. (#"methodName" object arg1 arg2) etc.
[18:42:27] <puchacz> I will figure out later how to restore it
[18:42:47] <puchacz> of course things that are already compiled with this macro still work
[18:43:36] <puchacz> (possibly just call the line from the JSS package that installed this macro in the first place)
[18:43:53] <puchacz> (in its source file)
[18:44:22] <Bike> hayley, puchaz: named readtables has some implementation specific stuff to paper over minor differencdes, and also to iterate over readtables efficiently (since the only standard way would be to go over every character in the charset). i think it will load without implementation-specific support, though.
[18:44:54] <puchacz> Bike, I will find out sooner or later :)
[18:45:05] <puchacz> as now I am starting to use it
[18:45:38] <Bike> and named-readtables has a thing to import individual macros from other readtables you could probably use for #"
[18:46:48] <puchacz> oh, what am I looking for please?
[18:48:03] <puchacz> and will it modify the fare-quasiquote readtable, or I need to add the #" macro each time I change readtables?
[18:50:57] <Guest7476> you should probably make your own readtable with everything you need in it.
[18:51:23] <puchacz> ok, I will explore it, I see named-readtables has a faciilty to merge readtables
[18:51:29] <puchacz> but for now, back to actual work :)
[19:05:57] * edgar-rft thinks about doing some hypothetical meta-work
[19:12:09] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Ping timeout: 265 seconds)
[19:12:35] *** Joins: amb007 (~a_bakic@29.247.204.77.rev.sfr.net)
[19:16:48] *** Quits: VincentV` (~user@212.241.24.160) (Remote host closed the connection)
[19:19:13] *** Joins: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com)
[19:28:33] *** Quits: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com) (Remote host closed the connection)
[19:32:10] *** Joins: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com)
[19:40:40] *** Joins: frgo (~frgo@p548a30d7.dip0.t-ipconnect.de)
[19:51:39] *** Joins: abrantesasf (~abrantesa@187.36.170.211)
[19:57:25] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[19:58:41] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[20:00:48] *** Joins: bcasiello__ (~bcasiello@066-189-087-112.biz.spectrum.com)
[20:01:24] *** Joins: Oladon (~olad@98.43.81.226)
[20:10:02] *** Quits: puchacz (~puchacz@cpc96912-walt25-2-0-cust541.13-2.cable.virginm.net) (Quit: Client closed)
[20:10:38] *** Quits: Inline (~Inline@2a02:908:1252:7a80:9b56:dca:ba79:dc9b) (Ping timeout: 265 seconds)
[20:11:01] *** Joins: VincentVega (~user@212.241.24.160)
[20:12:58] *** Quits: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com) (Ping timeout: 260 seconds)
[20:14:50] *** Joins: VincentV` (~user@212.241.24.160)
[20:16:02] *** Quits: VincentVega (~user@212.241.24.160) (Ping timeout: 240 seconds)
[20:21:00] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[20:21:31] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[20:36:57] *** Quits: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com) (Remote host closed the connection)
[20:50:41] *** Quits: VincentV` (~user@212.241.24.160) (Ping timeout: 256 seconds)
[20:52:54] *** Joins: X-Scale` (~ARM@83.223.248.137)
[20:52:57] *** Quits: X-Scale (~ARM@165.201.137.78.rev.vodafone.pt) (Ping timeout: 256 seconds)
[20:54:37] *** X-Scale` is now known as X-Scale
[20:55:07] *** Joins: NotThatRPG (~NotThatRP@mail.sift.net)
[20:57:27] *** Joins: rogersm (~rogersm@90.166.177.48)
[21:03:22] *** Quits: pve (~pve@37-136-99-25.rev.dnainternet.fi) (Ping timeout: 260 seconds)
[21:05:02] *** Quits: Jing (~hedgehog@115.207.47.111) (Read error: Connection reset by peer)
[21:06:55] *** Joins: Jing (~hedgehog@2604:a840:3::1094)
[21:21:51] *** Joins: puchacz (~puchacz@cpc96912-walt25-2-0-cust541.13-2.cable.virginm.net)
[21:23:32] *** Joins: Catie (~user@user/catie)
[21:29:56] *** Joins: pve (~pve@37-136-99-25.rev.dnainternet.fi)
[21:40:04] *** Joins: jealousmonk (~user@2804:431:e7c4:15cc:f258:de9e:9ab0:dc5c)
[21:43:16] *** Quits: leo_song (~leo_song@user/leo-song/x-7207016) (Ping timeout: 265 seconds)
[21:46:51] *** Quits: amb007 (~a_bakic@29.247.204.77.rev.sfr.net) (Read error: Connection reset by peer)
[21:47:49] *** Joins: amb007 (~a_bakic@102.215.76.86.rev.sfr.net)
[21:49:00] *** Quits: puchacz (~puchacz@cpc96912-walt25-2-0-cust541.13-2.cable.virginm.net) (Quit: Client closed)
[22:01:35] *** Joins: Inline (~Inline@2a02:908:1252:7a80:4744:6074:ea58:ae8a)
[22:06:25] *** Quits: Inline (~Inline@2a02:908:1252:7a80:4744:6074:ea58:ae8a) (Remote host closed the connection)
[22:08:01] *** Joins: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com)
[22:09:02] *** Joins: Inline (~Inline@2a02:908:1252:7a80:4744:6074:ea58:ae8a)
[22:11:15] *** Quits: Inline (~Inline@2a02:908:1252:7a80:4744:6074:ea58:ae8a) (Remote host closed the connection)
[22:25:15] *** Joins: VincentVega (~user@212.241.24.160)
[22:25:29] *** Joins: Inline (~Inline@2a02:908:1252:7a80:4744:6074:ea58:ae8a)
[22:26:46] *** Quits: jealousmonk (~user@2804:431:e7c4:15cc:f258:de9e:9ab0:dc5c) (Quit: ERC (IRC client for Emacs 27.1))
[22:28:06] *** Quits: sm2n_ (~sm2n@user/sm2n) (Read error: Connection reset by peer)
[22:28:10] *** Joins: sm2n (~sm2n@user/sm2n)
[22:33:26] <Guest7476> Is there a way to have print-object only apply to a certain package. bit-vectors seem like a bad choice now when I've got over 600 elements of which only a handful are set.
[22:34:41] <Guest7476> I mainly want to change how bit-vectors are displayed in slimes inspector.
[22:39:43] <yitzi> You might be able to come up with something with an :around method that does call-next-method conditionally.
[22:40:31] *** Joins: theothornhill (~user@217.84-49-191.nextgentel.com)
[22:41:41] <lisp123> Guest7476: Can you try shadowing it?
[22:41:47] *** Quits: amb007 (~a_bakic@102.215.76.86.rev.sfr.net) (Ping timeout: 256 seconds)
[22:42:05] *** Joins: amb007 (~a_bakic@29.247.204.77.rev.sfr.net)
[22:42:41] <Guest7476> i think slime just uses the cl generic.
[22:43:41] <Guest7476> yitzi: It seems like print-object just gets the object, no symbol, so can't see how I would constrain that.
[22:43:51] *** stacksmith is now known as loudmouth
[22:45:06] <lisp123> Guest7476: So what do you currently do? Am I correct in assuming you have written a method specialising PRINT-OBJECT for your class but don't that particular version to apply for objects interned in a particular package?
[22:45:27] *** Quits: theothornhill (~user@217.84-49-191.nextgentel.com) (Ping timeout: 268 seconds)
[22:46:26] *** Quits: phantomics (~phantomic@97-118-231-120.hlrn.qwest.net) (Read error: Connection reset by peer)
[22:47:01] <Guest7476> I wouldn't want it to affect the display of bit-vectors in any body else's stuff.  Maybe i'll just use it while debugging.  or maybe I'll just ditch the bit vectors.  I'm not sure what the speed difference is constantly counting under 10 elements ina 600 bit array compared to just having a list of the 10 elements.
[22:47:51] <pjb> Guest7476: methods dispatch in classes, and on objects.
[22:48:14] <pjb> Guest7476: so you'd have to make a specific class, or dispatch on specific bit-vector instances.
[22:48:57] <Guest7476> or maybe there's something in slime?  Which is what I'm mainly after.
[22:50:12] <pjb> (let ((set #*1010)) (defmethod print-object ((set (eql set)) stream) (format stream "set {") (dotimes (bit (length set)) (when (plusp (aref set bit)) (format stream "~A " bit))) (format stream "}"))  (print set)) #|
[22:50:12] <pjb> set {0 2 }  --> set {0 2 } |#
[22:50:30] <pjb> (let ((set #*1010)) (defmethod print-object ((set (eql set)) stream) (format stream "set {") (dotimes (bit (length set)) (when (plusp (aref set bit)) (format stream "~A " bit))) (format stream "}"))  (print (list set #*1010))) #|
[22:50:30] <pjb> (set {0 2 } #*1010)  --> (set {0 2 } #*1010) |#
[22:51:15] <yitzi> If there is some dynamic variable indicating you are in slime then you would could conditionally call call-next-method as I said.
[22:52:59] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[22:53:12] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[22:53:16] <random-nick> you could keep all instances of your bit-vectors in a global weak hash-table but that would be a waste of performance and memory
[22:53:43] <Guest7476> yes, I've found out hash tables are horrible for performance
[22:54:33] <yitzi> Guest7476: No idea if there is an appropriate variable in slime. https://plaster.tymoon.eu/view/2714#2714
[22:54:54] <Guest7476> neither do i.
[22:56:13] *** Joins: theothornhill (~user@217.84-49-191.nextgentel.com)
[22:56:27] <yitzi> Maybe you could just check to see if the swank package is loaded?
[22:57:28] <etimmons> You can probably do something with `emacs-inspect` That's the GF swank uses to prepare the display for the inspector
[22:57:53] <etimmons> If all your bit vectors are within your own classes, just specialize on your class and change how they're presented
[22:57:54] *** Quits: amb007 (~a_bakic@29.247.204.77.rev.sfr.net) (Read error: Connection reset by peer)
[22:57:55] <Guest7476> no, the best way would be to specialize on the stream type if slime had a specific type of stream. this would still affect other packages.
[22:59:15] *** Joins: amb007 (~a_bakic@102.215.76.86.rev.sfr.net)
[22:59:20] *** loudmouth is now known as jackass
[22:59:39] <_death> you could add a parameter to emacs-inspect's GF that allows different clients
[22:59:55] <Guest7476> etimmons: they get passed around and are sometimes standalone.  checking out that fn.
[23:01:02] *** Quits: theothornhill (~user@217.84-49-191.nextgentel.com) (Ping timeout: 240 seconds)
[23:01:04] <etimmons> I think your problem is ill specified. Why are you so concerned about the package? It seems like you want them to display differently only while you're developing/debugging. If so, just put it in your init file and not in your project
[23:01:17] <Guest7476> looks like all the inspect things are functions.
[23:01:21] <etimmons> Or put it in your project as a helper and tell others to evaluate it if they're starting to debug your code
[23:02:03] <Guest7476> Like I said, I could do that.  But it would be nice to know if it's possible some way.  Knowledge never hurts.
[23:02:46] <Guest7476> ah, found the methods.
[23:05:04] *** Quits: VincentVega (~user@212.241.24.160) (Read error: Connection reset by peer)
[23:05:26] <_death> in general for development I find https://github.com/death/slime/commit/f7e55dfe75a6d2717c27d3d9fa74ea5c8c4e0aaf more useful, though I do have libraries that define emacs-inspect methods (on my own classes)
[23:05:27] <etimmons> If you're focused on package, the best I think you can do is yitzi's :around method and look at the current *package* binding. As far as I know there is no way for you to take an object and figure out which symbols are bound to it (which is what it sounds like you want).
[23:06:35] <Guest7476> thanks _death: that's interesting.
[23:06:56] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Quit: Konversation terminated!)
[23:11:15] <Guest7476> etimmons: yeah, that kinda works if you're in the package. kinda impossible to trace back the value to the package, so I guess that's out.
[23:11:49] <Guest7476> ugh, now I got to remove a method.  Guess it's time to try it from the slime inspector.
[23:12:26] <_death> very easy using the inspector
[23:12:49] <Guest7476> lol, how do I inspect the generic in the first place?
[23:12:53] <_death> #'foo
[23:12:58] <_death> C-c I * RET
[23:13:12] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[23:13:22] *** Joins: karlosz (~karlosz@47.151.136.69)
[23:13:23] <Guest7476> thanks!
[23:13:32] *** Joins: theothornhill (~user@217.84-49-191.nextgentel.com)
[23:13:39] <Guest7476> oh, that's so painless.
[23:13:42] <lisp123> _death: Thanks! Didn't know that shortcut
[23:13:43] <_death> (replace * with #'foo if you wish.. often I find that I evaluate things in the repl because I want to inspect them)
[23:15:02] <Guest7476> what else works with C-c?  There documentation somewhere?
[23:15:23] <lisp123> Guest7476: C-h b in your slime buffer will tell you all the bindings
[23:16:43] <Guest7476> thumbs up
[23:16:54] <_death> or C-h m .. recently emacs developers overhauled its design, though I don't compile emacs often enough to have it
[23:16:55] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Client Quit)
[23:17:23] <Guest7476> wonder what all the ^L 's are in the output
[23:18:35] <_death> https://lars.ingebrigtsen.no/2021/11/06/a-more-readable-c-h-b/
[23:18:38] <Guest7476> well at least I learned something today.  Adding this backtracking has been like 10 steps back.
[23:19:31] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[23:20:08] <Catie> The ^L characters are used as markers for forward-page and backward-page
[23:20:11] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[23:20:24] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[23:20:37] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Client Quit)
[23:20:47] <Guest7476> learned two things.
[23:21:31] <Catie> I always wondered the same! It's mostly elisp programmers who use them, but I won't pretend I haven't thrown a ^L or two into my source
[23:22:01] *** Joins: phantomics (~phantomic@97-118-231-120.hlrn.qwest.net)
[23:22:29] <_death> it's the ascii code 12 (new page)
[23:23:28] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[23:23:41] <_death> telling the printer to start a new page
[23:23:50] *** Quits: theothornhill (~user@217.84-49-191.nextgentel.com) (Ping timeout: 260 seconds)
[23:25:25] <lisp123> _death: honestly from that screenshot, it doesn't look like much of an improvement (https://lars.ingebrigtsen.no/wp-content/uploads/2021/11/2021-11-02-13.png)
[23:25:47] <Guest7476> man it's impossible to call code-char on it.
[23:25:59] <_death> the lhs shows the old, rhs shows the new
[23:26:42] <_death> (code-char 12) => #\Page
[23:26:55] <_death> (string #\Page) => ""
[23:27:09] <Guest7476> yes, just can't get it from a copy paste
[23:27:32] <lisp123> I guess the drop downs are nice
[23:28:48] *** Joins: Colt (~Colt@user/colt)
[23:31:50] <_death> the little images are weird, as the post hints.. but there are much worse discussions on emacs-devel that aren't for the faint hearted long time emacs user.. though often in practice UI conservatism wins, as it should :)
[23:34:12] *** Joins: gaqwas (~john@dynamic-095-117-032-097.95.117.pool.telefonica.de)
[23:34:57] <lisp123> Indeed, Emacs conservatism is one of its best features! Guaranteed to stay the same (more or less)
[23:35:17] *** Joins: theothornhill (~user@217.84-49-191.nextgentel.com)
[23:37:49] *** Joins: nkatte (~nkatte@2804:14c:7980:8c85::bde6)
[23:38:16] *** Quits: nkatte (~nkatte@2804:14c:7980:8c85::bde6) (Remote host closed the connection)
[23:44:41] *** Quits: amb007 (~a_bakic@102.215.76.86.rev.sfr.net) (Read error: Connection reset by peer)
[23:45:26] *** Joins: amb007 (~a_bakic@102.215.76.86.rev.sfr.net)
[23:47:44] *** Quits: theothornhill (~user@217.84-49-191.nextgentel.com) (Ping timeout: 268 seconds)
[23:54:45] *** Joins: theothornhill (~user@217.84-49-191.nextgentel.com)
[23:58:09] *** Quits: ebrasca (~user@librepanther.com) (Remote host closed the connection)
