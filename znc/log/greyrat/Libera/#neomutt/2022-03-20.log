[00:12:32] *** Quits: bitigchi (~bitigchi@user/bitigchi) (Ping timeout: 240 seconds)
[00:15:37] *** Quits: Raito_Bezarius (~Raito@wireguard/tunneler/raito-bezarius) (Ping timeout: 240 seconds)
[00:16:20] *** Joins: M4rty (~M4rtyflex@91-166-220-92.subs.proxad.net)
[00:27:51] *** Joins: bitigchi (~bitigchi@user/bitigchi)
[00:28:58] *** Joins: Raito_Bezarius (~Raito@wireguard/tunneler/raito-bezarius)
[00:30:12] *** Quits: M4rty (~M4rtyflex@91-166-220-92.subs.proxad.net) (Quit: leaving)
[00:32:05] *** Quits: Raito_Bezarius (~Raito@wireguard/tunneler/raito-bezarius) (Max SendQ exceeded)
[00:32:12] *** Quits: bitigchi (~bitigchi@user/bitigchi) (Ping timeout: 240 seconds)
[00:33:31] *** Joins: bitigchi (~bitigchi@user/bitigchi)
[00:34:55] *** Joins: Raito_Bezarius (~Raito@wireguard/tunneler/raito-bezarius)
[00:38:17] *** Quits: Raito_Bezarius (~Raito@wireguard/tunneler/raito-bezarius) (Max SendQ exceeded)
[00:38:23] *** Quits: bitigchi (~bitigchi@user/bitigchi) (Ping timeout: 256 seconds)
[00:40:57] *** Joins: Raito_Bezarius (~Raito@wireguard/tunneler/raito-bezarius)
[00:53:38] <oriba> ok, writing my tests now :-)
[01:12:32] *** Quits: earthnative (~nemo@119-18-37-212.771225.bne.static.aussiebb.net) (Ping timeout: 240 seconds)
[01:23:16] *** Joins: earthnative (~nemo@119-18-37-212.771225.bne.static.aussiebb.net)
[01:26:40] *** Quits: azed (~azed@197.23.130.142) (Read error: Connection reset by peer)
[01:32:09] <flatcap> oriba: you need some extra files for the tests.  the readme explains https://github.com/neomutt/neomutt-test-files/
[01:32:16] <flatcap> I'll be back later
[01:35:57] <oriba> ok
[01:36:07] <oriba> I already added tests 
[01:36:28] <oriba> but could hook.o  must be linked in somehow
[01:40:01] <oriba> did changed test/Makefile.autosetup ... maybe not necessary?
[01:43:00] * oriba tries being patient, but wants to start drinking some wine... if flatback is away for too long, not much will be achieved this night ;-)
[01:58:01] <flatcap> re
[01:59:06] <flatcap> you'll need a HOOK_OBJ section in test/Makefile.autosetup and an entry in BUILD_DIRS
[01:59:16] <oriba> did that
[01:59:21] <oriba> I can call the test
[01:59:38] <oriba> but mutt_parse_hook() is not known to the testfile
[01:59:38] <flatcap> test/main.c is the entry point for all tests (you probably figured that out too)
[01:59:58] <oriba> I think so, yes
[02:00:54] <flatcap> if you look at PATTERN_OBJS, you'll see that it includes an object file outside of the test dir
[02:01:24] <flatcap> you'll want to add hook.o to your HOOK_OBJS
[02:01:46] <flatcap> then you'll need to create a bunch of dummy functions to try to satisfy all the deps
[02:02:33] <flatcap> meanwhile, I've been analysing parse_hook()
[02:02:48] <flatcap> hmm... a lot of moving parts
[02:03:12] <oriba> I could already refactor some stuff, but things are somewhat intertwined
[02:03:18] <flatcap> yeah
[02:03:20] <flatcap> charset-hook and iconv-hook really don't belong in that function at all
[02:03:30] <oriba> I dis testing with comparing logfiles
[02:03:43] <oriba> but that became a bit awkward
[02:03:50] <flatcap> they aren't stored in `Hooks`
[02:03:53] <oriba> oh
[02:03:57] <flatcap> yeah, I can imagine:-)
[02:04:53] <flatcap> here's my brief analysis: https://gist.github.com/flatcap/13bcf290f017efb99648d4f1d66f5488
[02:04:55] <flatcap> a WIP
[02:06:36] <flatcap> the other hooks that are awkward are the compressed mailbox: {open,append,close}-hook
[02:06:43] <flatcap> because they call a validator function
[02:07:23] <flatcap> the others aren't too bad. they tend to use a pattern or regex and some plain text
[02:08:35] *** Joins: alban771 (~alban@41.133.22.93.rev.sfr.net)
[02:09:25] <oriba> not sure what to do now
[02:10:06] <oriba> also with my testing - now I have a different errmessage: 'undefined reference to `mutt_encode_path''
[02:10:18] *** Joins: bitigchi (~bitigchi@user/bitigchi)
[02:10:18] <oriba> looks like another dependency
[02:10:29] <flatcap> yeah
[02:11:14] <flatcap> the libraries (all the stuff in subdirs) is fairly isolated, but most of the code in the top-level dir is a mess
[02:11:57] <oriba> hmhh
[02:14:05] <flatcap> we might be able to split out a single function from hook.c and get that working
[02:16:18] *** Joins: dcpurton (~dcpurton@2001:44b8:217:9e00:36f6:27b3:77f1:f65c)
[02:16:27] <oriba> I already refactored out three functions, but I'm not really happy with the result so far
[02:16:51] <oriba> before going on in this direction, I thought the tests might make sense to be added now
[02:18:23] <oriba> at least the errormessages of "make test" now look C-ish instead of Make-ish :-)
[02:19:48] <oriba> back to "undefined reference" :(
[02:22:21] <flatcap> ok.  if you want help, I'll need to see the code :-)
[02:25:13] <oriba> well... so ugly at the moment ;-)
[02:25:20] <oriba> I need help withj the test setup
[02:25:58] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[02:26:00] <oriba> I get an extremely longlist of "undefined reference" messages
[02:26:12] <oriba> somehwere I seem to have messed the stuff up
[02:26:40] <flatcap> ok
[02:26:45] * flatcap is good
[02:26:47] <flatcap> but
[02:26:54] * flatcap isn't psychic ;-)
[02:28:58] <oriba> if you say some functionality does not even belong to mutt_parse_hook(), but it's implemented in it...
[02:29:26] <oriba> .... if just kicking it out of mutt_parse_hook(), would mean some users might get angry if these are missng then
[02:30:49] <flatcap> we want to start as simply as possible
[02:31:26] <oriba> btw: in the README for the testing, it's mentioned "Next, add an option to configure, to enable testing" - what does that do / do I need that? I directly changed test/Makefile.autosetup
[02:31:27] <flatcap> so we want to cut out mutt_parse_hook() (and its deps)
[02:31:44] <flatcap> all those other functions have their own deps and that's too much work
[02:32:18] * flatcap tries to remember what exactly `./configure --testing` adds
[02:32:40] <oriba> hehe
[02:33:25] <flatcap> ah, it defines ENABLE_UNIT_TESTS which includes the test/Makefile
[02:33:43] <flatcap> and adds the test dir to the default make target
[02:33:56] <flatcap> but `make test` will force the issue, if you'd forgotten
[02:34:04] *** Quits: netx (~netx@23-24-2-197-static.hfc.comcastbusiness.net) (Quit: Bye)
[02:34:37] *** Quits: dcpurton (~dcpurton@2001:44b8:217:9e00:36f6:27b3:77f1:f65c) (Ping timeout: 240 seconds)
[02:35:07] <flatcap> anyway, if we had hook2.c containing just parse_hook(), using hook2.o would be easier to link to the tests
[02:35:14] <oriba> I refactored out stuffinto these functions:  check_for_warnings(),  stub_reg_mbx_parse(), I also had aa second stub-function but stashed the stuff back. Also added some helper functions
[02:35:36] <flatcap> ok
[02:36:07] <oriba> btw thats my second approach.
[02:36:16] <oriba> I already had a first one
[02:36:24] <oriba> maybe I should start a third one ;-)
[02:37:07] <flatcap> :-)
[02:37:42] *** Quits: strajder (~strajder@user/strajder) (Quit: gn)
[02:43:28] *** Quits: TheMaker (~nbert@user/nejc) (Quit: Konversation terminated!)
[02:45:34] <oriba> TEST_CHECK() in the original wants one argument
[02:45:52] <oriba> looks like the neomutt-version takes two args?!
[02:46:40] <oriba> no.
[02:48:16] <oriba> got errmessage directly from acutest.h
[02:49:39] <flatcap> TEST_CHECK() takes a bool
[02:50:22] <flatcap> there's a variant TEST_CHECK_() that takes (bool, string)
[02:50:52] <oriba> ah ok
[02:51:09] <oriba> and I mixed both up.
[02:51:39] <oriba> when I found TEST_CHECK_() in my code I thought it was just a typo
[02:52:21] <flatcap> generally you only want the TEST_CHECK() version
[03:06:36] <oriba> multiple definition of `imap_search';
[03:07:50] <flatcap> there's a fake one in test/pattern/dummy.c
[03:08:35] <flatcap> linking against libimap will probably cause problems
[03:09:33] <oriba> I have now only hook.o and hooktest.o in my HOOK_OBJS
[03:12:03] <oriba> did I understand you correctly that yo want to split hook.c into two files?
[03:12:22] <oriba> so that the other functions don't create problems?
[03:13:03] <flatcap> I haven't decided, but it would probably make your job easier
[03:14:08] <oriba> ok, had thouht about this, when I was just annoyed with the long file, a while ago.
[03:14:31] <oriba> you look up something with a search and then you are already in the next function ...
[03:16:48] <oriba> btw I didn't understand what you collected here: https://gist.github.com/flatcap/13bcf290f017efb99648d4f1d66f5488
[03:17:04] <flatcap> I traced the code paths of all the hooks
[03:17:49] <flatcap> I was trying to see how we might best split them up
[03:19:17] <oriba> maybe we should consiuder using regex or lex/yacc earlier...
[03:19:20] <flatcap> we want a simple function that follows *rules*, like "this hook takes a regex", rather than `if (HOOK_X || HOOK_Y)` etc
[03:20:15] <flatcap> let's start with a simple refactor
[03:20:34] <oriba> sometimes refactoring is harder than writing new from scratch
[03:21:10] <flatcap> even if you use regexes, you're going to need to break up parse_hook()
[03:21:25] <flatcap> there's too many different things going on
[03:21:55] <oriba> I think the problem is not only in mutt_parse_hook(), but in the structure of the code thatc calls it.
[03:22:24] <flatcap> agreed, but if you try to change too much in one go, you'll go mad trying
[03:22:29] * flatcap speaks from experience
[03:24:44] <oriba> if the hook-parser also parses things that not belong to that code, the caller of the parser waits for the parser to work on that.
[03:24:56] <oriba> so... the refactoring should be done at the caller side
[03:25:13] <oriba> maybe splitting up before calling the hook parser
[03:26:18] <flatcap> ultimately, all the hooks are just *commands* defined in mutt_commands.c
[03:26:27] <flatcap> each has a parser function and some data
[03:27:01] <flatcap> most of the hooks go through one parser because of laziness of developers long ago
[03:27:14] <oriba> mutt_commands.c I guess
[03:27:28] <oriba> so why not splitting there?
[03:27:35] <oriba> writing specialized parsers
[03:27:42] <oriba> would make sense to me
[03:27:59] <flatcap> yes.  I'd start with the two charset ones
[03:28:16] <flatcap> then the compressed mailboxes
[03:28:32] <flatcap> the rest of them are probably similar enough that you can share code
[03:33:46] <oriba> ok, just crreated a fake parser and called it for a hook, and it can be called and writes to the log
[03:33:51] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[03:34:04] <oriba> writing the specialized parsers is the way to go!
[03:35:35] <flatcap> woo!
[03:37:05] <oriba> :)
[03:38:07] <oriba> charset-hook and iconv-hook are the easy starts?
[03:39:49] <flatcap> yes, ish.  they don't require much processing
[03:40:17] <flatcap> parse two tokens, call a function
[03:40:36] <oriba> sounds good
[03:45:39] <oriba> where should the code go?
[03:47:38] <flatcap> I'd put the new parsers in hook.c
[03:48:08] <oriba> the 11 pages long file hmmhh. ok, I'm used to the file now ;-)
[03:48:15] <flatcap> then perhaps the simpler parse_hook() to parse_hook.c
[03:49:54] <oriba> mutt_parse_charset_hook() as name for the new parser?
[03:51:54] <oriba> or mutt_charset_hook_parser() ?
[03:52:01] <flatcap> yeah, ok
[03:52:08] <oriba> the latter one?
[03:53:41] <flatcap> sorry, er...
[03:54:53] <flatcap> mutt_parse_charset_hook()
[03:55:31] <oriba> ok
[04:03:31] *** Quits: bitigchi (~bitigchi@user/bitigchi) (Ping timeout: 256 seconds)
[04:14:06] <oriba> will adding tests create the same pain now as before?
[04:14:37] <flatcap> hopefully less
[04:14:38] <oriba> but independent of that: I got "FAILED: 9 of 453 unit tests have failed." with the tests as they are coming from the current master
[04:15:20] <flatcap> you need the test-files repo, run the setup script and export an env var
[04:15:38] <oriba> hmhh
[04:17:04] <oriba> if testfiles live in separate repository, maybe it would be good to remove those tests that are in the neomutt-repository?
[04:18:39] <flatcap> no, that'd make building those "external" tests a nightmare
[04:21:57] <oriba> ok, same result as before: FAILED: 2 of 453 unit tests have failed.
[04:23:12] <oriba> hmhh
[04:23:16] <oriba> not same
[04:23:30] <oriba> 2 fails, not 9 fails :-)
[04:23:39] <flatcap> progress :-)
[04:24:00] <oriba> :-)
[04:24:50] <oriba> what are expected results for the new mutt_parse_charset_hook() ?
[04:25:41] <flatcap> new entries in the `Lookups` global
[04:26:04] <oriba> global, oh oh ... 
[04:26:47] <flatcap> the config's gotta be stored somewhere
[04:29:21] <oriba> -> mutt_ch_lookup_add() to add to that table?
[04:30:10] <flatcap> yes
[04:54:46] <oriba> Looks like I just have to split the buffer 's' at the spaces
[04:54:53] <oriba> without syntax checking?
[04:55:19] <oriba> or does mutt_ch_lookup_add() also check if the pattern can be added?
[04:55:30] <oriba> and: how to split the sbuffer s?
[04:55:56] <flatcap> mutt_extract_token()
[04:56:04] <flatcap> you can cut'n'paste from parse_hook()
[04:57:22] <oriba> there is a lot of nested logic
[04:57:45] <oriba> do I have to check flagse like MUTT_GLOBAL_HOOKS?
[04:58:50] <flatcap> no, that just applies to startup/shutdown/timeout
[04:59:05] <flatcap> the flags come from the data field in mutt_commands.c
[05:00:11] <flatcap> if you configure a charset-hook, then step through the function in gdb, you'll see how little is needed
[05:00:41] *** Joins: bitigchi (~bitigchi@user/bitigchi)
[05:01:51] <flatcap> I'm going to call it a night
[05:02:02] <flatcap> bye
[05:05:02] *** Quits: bitigchi (~bitigchi@user/bitigchi) (Ping timeout: 250 seconds)
[05:05:31] <oriba> bye
[05:06:35] *** Quits: oriba (~oriba@dynamic-089-014-158-213.89.14.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[05:19:26] *** Quits: breavyn (~breavyn@user/breavyn) (Quit: ZNC 1.8.2 - https://znc.in)
[05:32:17] *** Quits: maetthew (~maetthew@user/maetthew) (Quit: ZNC 1.8.2 - https://znc.in)
[05:34:56] *** Joins: maetthew (~maetthew@c188-150-159-232.bredband.tele2.se)
[05:34:56] *** Quits: maetthew (~maetthew@c188-150-159-232.bredband.tele2.se) (Changing host)
[05:34:56] *** Joins: maetthew (~maetthew@user/maetthew)
[05:40:23] *** Joins: vysn (~vysn@user/vysn)
[05:40:59] *** Quits: Pali (~pali@user/pali) (Ping timeout: 256 seconds)
[06:14:05] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[06:36:36] *** Quits: qub411 (~user@60-242-81-127.tpgi.com.au) (Quit: WeeChat 3.0)
[07:01:42] *** Joins: bitigchi (~bitigchi@user/bitigchi)
[07:06:45] *** Quits: bitigchi (~bitigchi@user/bitigchi) (Ping timeout: 252 seconds)
[09:00:11] *** Joins: weirdsmiley (~weirdsmil@103.25.231.102)
[09:00:41] *** Joins: bitigchi (~bitigchi@user/bitigchi)
[09:05:33] *** Quits: bitigchi (~bitigchi@user/bitigchi) (Ping timeout: 256 seconds)
[09:39:12] *** Quits: sbach (~sbach@user/sbach) (Read error: Connection reset by peer)
[09:41:40] *** Joins: sbach (~sbach@user/sbach)
[09:47:15] *** Joins: redgloboli (~redglobol@user/redgloboli)
[10:07:30] *** Quits: inak (~justme@228-134-237-24.gci.net) (Quit: Leaving)
[10:30:48] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 268 seconds)
[10:44:08] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[11:02:15] *** Joins: bitigchi (~bitigchi@user/bitigchi)
[11:07:02] *** Quits: bitigchi (~bitigchi@user/bitigchi) (Ping timeout: 240 seconds)
[11:18:08] *** Joins: kalebris- (~kalebris@212-40-86-29.pool.digikabel.hu)
[11:18:28] *** Quits: kalebris| (~kalebris@77-234-86-9.pool.digikabel.hu) (Ping timeout: 272 seconds)
[11:54:28] *** Joins: ckardaris (~ckardaris@user/ckardaris)
[11:58:00] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Read error: Connection reset by peer)
[11:58:48] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[12:11:52] *** Quits: weirdsmiley (~weirdsmil@103.25.231.102) (Ping timeout: 250 seconds)
[12:13:48] *** Joins: gabriel1_ (~gabriel1@37.164.218.102)
[12:15:19] *** Quits: ckardaris (~ckardaris@user/ckardaris) (Quit: WeeChat 3.4.1)
[12:16:12] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Ping timeout: 250 seconds)
[12:36:05] *** Quits: noex (~null@user/noex) (Remote host closed the connection)
[12:36:33] *** Joins: noex (~null@user/noex)
[12:56:49] *** Joins: gabriel1__ (~gabriel1@37.172.121.73)
[12:59:02] *** Quits: gabriel1_ (~gabriel1@37.164.218.102) (Ping timeout: 240 seconds)
[13:09:04] *** Quits: polve (~polve@user/polve) (Ping timeout: 250 seconds)
[13:16:46] *** Joins: polve (~polve@user/polve)
[13:29:48] *** Joins: fmneto_ (~quassel@2804:14c:70:27f0::1000)
[13:30:37] *** Quits: fmneto (~quassel@2804:14c:70:27f0::1000) (Ping timeout: 240 seconds)
[13:52:12] *** Joins: TheMaker (~nbert@user/nejc)
[13:57:10] <flatcap> morning all
[14:07:26] *** Joins: plastico (~plastico@neomutt/plastico)
[14:26:37] *** Quits: gabriel1__ (~gabriel1@37.172.121.73) (Ping timeout: 240 seconds)
[14:29:07] *** Quits: alban771 (~alban@41.133.22.93.rev.sfr.net) (Ping timeout: 256 seconds)
[14:31:05] *** Joins: darkbit (~db@152.32.100.99)
[14:31:27] *** Joins: alban771 (~alban@233.39.22.93.rev.sfr.net)
[14:36:22] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[14:53:44] *** Joins: Pali (~pali@user/pali)
[15:15:40] *** Joins: dcpurton (~dcpurton@2001:44b8:217:9e00:36f6:27b3:77f1:f65c)
[15:28:02] *** Quits: realguy (~jan@user/realguy) (Ping timeout: 240 seconds)
[16:29:27] *** Joins: weirdsmiley (~weirdsmil@103.25.231.102)
[16:33:15] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 252 seconds)
[16:33:53] *** Quits: bremner (~bremner@notmuch/developer/bremner) (Remote host closed the connection)
[16:55:37] *** Joins: vysn (~vysn@user/vysn)
[16:57:51] *** Joins: M4rty (~M4rtyflex@91-166-220-92.subs.proxad.net)
[16:58:22] *** Quits: M4rty (~M4rtyflex@91-166-220-92.subs.proxad.net) (Client Quit)
[17:03:30] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 250 seconds)
[17:13:48] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[17:16:35] *** Quits: dcpurton (~dcpurton@2001:44b8:217:9e00:36f6:27b3:77f1:f65c) (Quit: WeeChat 3.4)
[17:21:40] *** Joins: strajder (~strajder@user/strajder)
[17:40:46] *** Quits: plastico (~plastico@neomutt/plastico) (Ping timeout: 250 seconds)
[17:42:48] *** Joins: bremner (~bremner@notmuch/developer/bremner)
[18:14:47] <ngortheone> morning 
[18:14:56] <flatcap> hi ngortheone 
[18:14:57] <ngortheone> how is it going flatcap?
[18:15:42] <flatcap> so-so.  I finished the crossword, but I may have broken the pager :-)
[18:15:48] <flatcap> how are you?
[18:16:35] <ngortheone> trying to keep myself busy, to distract myself from the war
[18:17:04] <flatcap> yeah, very worrying :-(
[18:17:12] <ngortheone> my parents are in Ukraine, the last 3 weeks were very hard for me 
[18:17:32] <flatcap> I'm sorry to hear that
[18:18:03] <ngortheone> not much anybody can do with it
[18:18:27] <ngortheone> are there any good news on neomutt front?
[18:18:48] <flatcap> nearing a release (pager notwithstanding)
[18:19:06] <ngortheone> ooo.. whats going to be in the release?
[18:19:08] <flatcap> I've finished all the big things I was working on (still lots of big things to do)
[18:19:51] <flatcap> not _that_ much, given the amount of churn:
[18:19:53] <flatcap> 424 files changed, 91171 insertions(+), 80672 deletions(-)
[18:20:11] <flatcap> dcpurton's radically improved compose multipart
[18:20:19] <flatcap> colours work well, again
[18:20:55] <ngortheone> I've heard something about colors - does this work make truecolor any closer?
[18:21:28] <flatcap> much
[18:21:54] <flatcap> recent versions of ncurses can do true-colour, but...
[18:22:08] <flatcap> it's still limited to a palette of 256 colours
[18:22:24] <flatcap> *you* get to choose that palette on-demand
[18:22:33] <ngortheone> that solves the problem then
[18:22:37] <flatcap> and you can have any combination of fg/bg using those colours
[18:22:37] <ngortheone> at least for me)
[18:23:01] <ngortheone> my biggest issue was that I can't find matching colors with my terminal
[18:23:04] <flatcap> so, it's only a small amount of work to implement that
[18:30:39] <ngortheone> nice.. what about separation of UI from the logic? 
[18:30:51] <ngortheone> will there be libneomutt ?
[18:36:03] <flatcap> the UI separation is going pretty well
[18:36:31] <flatcap> I've been applying the function-dispatcher model to more code
[18:37:23] *** Joins: kalebris_ (~kalebris@212-40-86-29.pool.digikabel.hu)
[18:37:27] <flatcap> and recently, I've disentangled menu_loop() from, well... everything
[18:37:35] <bremner> let me be the first to complain about libneomutt's unstable API, just in case you were thinking of creating it :P
[18:37:50] <flatcap> hehe
[18:38:00] *** Quits: alban771 (~alban@233.39.22.93.rev.sfr.net) (Quit: WeeChat 3.4.1)
[18:38:01] <flatcap> this explains some of the problems: https://github.com/neomutt/neomutt/discussions/3279
[18:38:49] <flatcap> libneomutt is unlikely, but we're closer now :-)
[18:38:56] *** Joins: eriol5 (~eriol@user/eriol)
[18:39:24] <flatcap> the sticking point for the ui is still the index/pager boundary
[18:39:58] <ngortheone> killing menu_loop wasnt an easy task..
[18:40:11] <ngortheone> I think it is a monumental effort
[18:40:21] <flatcap> thanks!  it was
[18:40:32] <flatcap> I'm really pleased with the results, though
[18:41:05] <flatcap> I can now (sort of) see a route to moving the event loop out of the dialogs completely
[18:41:49] *** Joins: strcat_ (~strcat@p548541a3.dip0.t-ipconnect.de)
[18:42:04] *** Quits: kalebris- (~kalebris@212-40-86-29.pool.digikabel.hu) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: eriol (~eriol@user/eriol) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: CrashOverride (~strcat@p548541a3.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: polve (~polve@user/polve) (Ping timeout: 240 seconds)
[18:42:06] *** eriol5 is now known as eriol
[18:43:07] <flatcap> I need to do a thorough review of all the window notifications/refreshes now
[18:43:16] <flatcap> but that's fairly straightforward
[18:43:24] *** Joins: polve (~polve@user/polve)
[18:43:57] <flatcap> the only code that'll be allowed to actually refresh the screen, is specific event loops
[18:44:08] *** Joins: epony (epony@user/epony)
[18:44:29] <flatcap> everyone else will flag their windows as dirty and wait for a repaint()
[18:44:56] <ngortheone> sounds like you are implementing a GUI toolkit
[18:45:19] <ngortheone> which unfortunately any terminal app is destined to do to a certain degree
[18:46:02] <flatcap> yep, exactly
[18:46:32] *** Quits: epony (epony@user/epony) (Excess Flood)
[18:48:06] <ngortheone> are there any existing libraries that provide TUI abstractions over ncurses?
[18:49:02] <ngortheone> stuff like event loop, keypress dispatch, drawing/redrawing - all this seems to be a pretty generic problem
[18:49:18] <flatcap> there's libuv which is very impressive
[18:49:35] <ngortheone> libuv is just async 
[18:49:46] <ngortheone> it can be a part of the GUI/TUI
[18:49:52] <flatcap> but to use that we'd need to first sort out neomutt's architecture
[18:56:43] *** Quits: eriol (~eriol@user/eriol) (Ping timeout: 250 seconds)
[18:57:37] *** Joins: bluejaypop9 (~7f000001@72.52.80.246)
[18:57:38] *** Quits: bluejaypop (~7f000001@user/josefig) (Ping timeout: 250 seconds)
[18:57:38] *** Quits: mala (~mala@user/malaclyps) (Ping timeout: 250 seconds)
[18:57:40] *** Joins: eriol (~eriol@user/eriol)
[18:58:32] *** Joins: mala (~mala@user/malaclyps)
[18:59:17] *** Joins: sbach_ (~sbach@user/sbach)
[19:00:19] *** Quits: sbach (~sbach@user/sbach) (Read error: Connection reset by peer)
[19:00:19] *** Quits: downtrip (~downtrip@188.166.151.198) (Ping timeout: 250 seconds)
[19:00:20] *** Quits: honza (~honza@li1276-4.members.linode.com) (Ping timeout: 250 seconds)
[19:00:22] *** sbach_ is now known as sbach
[19:00:48] *** Joins: honza (honza@2600:3c03::f03c:91ff:fe61:4243)
[19:01:12] *** Joins: downtrip (~downtrip@188.166.151.198)
[19:11:47] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[19:18:12] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Ping timeout: 240 seconds)
[19:33:21] *** Joins: oriba (~oriba@dynamic-077-183-072-090.77.183.pool.telefonica.de)
[19:35:25] *** Joins: BINGOBOY-AND-GUM (~BINGOBOY-@sage.u.arizona.edu)
[19:36:56] <BINGOBOY-AND-GUM> D IS FOR DOG THATS GOOD ENOUGH FOR ME.driokopweriope i9erioseioe  gtttyyyyyyyyyyyyyyyy vfgggjhhjghgjguguygt5htutjgthyjhyjh6k56kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaarrrrrrrrrrrrrrrrrrrrrrr:b (y) vv
[19:37:11] *** ChanServ sets mode: +o flatcap
[19:37:13] <BINGOBOY-AND-GUM> ...cause it's @mutt@, like dog. get it? ever heard that one?
[19:37:15] *** flatcap sets mode: +b *!*@sage.u.arizona.edu
[19:37:17] *** BINGOBOY-AND-GUM was kicked by flatcap (BINGOBOY-AND-GUM)
[19:49:56] *** Joins: keypusher (keypusher@user/keypusher)
[19:57:09] <ngortheone> spammers attack
[20:04:57] <flatcap> briefly :-)
[20:05:02] *** ChanServ sets mode: -o flatcap
[20:17:57] *** Quits: haritz (~hrtz@user/haritz) (Remote host closed the connection)
[20:26:57] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[20:32:30] *** Joins: plastico (~plastico@neomutt/plastico)
[20:52:40] *** Joins: epony (epony@user/epony)
[21:08:50] *** Joins: strajder (~strajder@user/strajder)
[21:20:42] <mingdao> It has been reported.
[22:10:13] *** Joins: haritz (~hrtz@62.3.70.206)
[22:10:13] *** Quits: haritz (~hrtz@62.3.70.206) (Changing host)
[22:10:13] *** Joins: haritz (~hrtz@user/haritz)
[22:30:28] *** Quits: haritz (~hrtz@user/haritz) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[22:36:48] *** Joins: haritz (~hrtz@2a02:8010:65b5:0:6009:6384:e3cb:2220)
[22:36:48] *** Quits: haritz (~hrtz@2a02:8010:65b5:0:6009:6384:e3cb:2220) (Changing host)
[22:36:48] *** Joins: haritz (~hrtz@user/haritz)
[22:46:55] *** Quits: holgersson (~quassel@user/holgersson) (Quit: “Format C:........[Done]“)
[22:47:12] *** Joins: holgersson (~quassel@user/holgersson)
[23:01:57] *** Quits: darkbit (~db@152.32.100.99) (Ping timeout: 256 seconds)
[23:42:01] *** Parts: oriba (~oriba@dynamic-077-183-072-090.77.183.pool.telefonica.de) (https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:42:04] *** Joins: oriba (~oriba@dynamic-077-183-072-090.77.183.pool.telefonica.de)
