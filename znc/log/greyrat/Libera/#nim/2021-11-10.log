[00:00:57] <FromDiscord> <IsaacPaul> The notebook api is pretty cool.. it may replace joplin for me.. though much I'd prefer a non-electron notebook app :S aw well
[00:04:14] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Quit: The Lounge - https://thelounge.chat)
[00:09:51] *** Joins: neurocyte0132889 (~neurocyte@212.232.89.58)
[00:09:51] *** Quits: neurocyte0132889 (~neurocyte@212.232.89.58) (Changing host)
[00:09:51] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[00:14:10] <FromDiscord> <tandy> anyone have a good name idea for my nimble package ?
[00:14:13] <FromDiscord> <tandy> its a `jsony` plugin for `union` support
[00:14:56] <FromDiscord> <tandy> i was gna do jsony-union but i rememberd names cant have `-`
[00:16:50] <FromDiscord> <hmmm> jsuniony of course 😆
[00:17:19] <FromDiscord> <IsaacPaul> Let github generate one for you. Last one I got was 'laughing-archer' lol
[00:17:47] <FromDiscord> <tandy> lol↵(@hmmm)
[00:18:02] <FromDiscord> <tandy> i want it to be at least a bit self descriptive tho↵(@IsaacPaul)
[00:18:21] <FromDiscord> <hmmm> the rebellious jsonyDASHunion will shouw the world people cannot fk with you
[00:18:35] <FromDiscord> <tandy> maybe just uniony
[00:18:46] <FromDiscord> <hmmm> ye uniony it's ok
[00:18:50] <FromDiscord> <hmmm> feels friendly
[00:19:43] <FromDiscord> <IsaacPaul> yea that or union4jsony
[00:20:01] <FromDiscord> <IsaacPaul> honestly not having -'s or some sort of visual break sucks
[00:20:02] <FromDiscord> <hmmm> better yet uniony4jsony
[00:20:13] <FromDiscord> <hmmm> with a pink unicorn icon
[00:21:03] <FromDiscord> <IsaacPaul> In reply to @hmmm "the rebellious jsonyDASHunion will": lmbo
[01:23:54] <FromDiscord> <RattleyCooper> In reply to @razzlom "For 1 second i": Well they have an image with an example in nim 😛
[01:24:09] <FromDiscord> <RattleyCooper> (edit) "In reply to @razzlom "For 1 second i": Well they have an image with an example ... in" 03added "of the indent colors"
[01:32:48] *** Joins: rockcavera (~rc@192.12.112.105)
[01:32:48] *** Quits: rockcavera (~rc@192.12.112.105) (Changing host)
[01:32:48] *** Joins: rockcavera (~rc@user/rockcavera)
[01:42:27] <FromDiscord> <evoalg> and it's called nimbench_ex2.nim
[02:04:38] *** Joins: supBros (~supBros@2a02:587:5474:85e6:9d25:80c0:a83f:ccdd)
[02:05:16] *** Quits: supBros (~supBros@2a02:587:5474:85e6:9d25:80c0:a83f:ccdd) (Client Quit)
[02:22:09] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[03:11:29] *** Quits: dv^_^ (~dv@eclipse.oxfordfun.com) (Ping timeout: 244 seconds)
[03:16:13] *** Joins: dv^_^ (~dv@eclipse.oxfordfun.com)
[04:51:43] *** Quits: mahlon (~mahlon@martini.nu) (Ping timeout: 244 seconds)
[04:57:28] *** Joins: mahlon (~mahlon@martini.nu)
[05:26:53] *** Joins: jimmoth_44 (~f@179.251.147.19)
[05:29:33] *** Quits: jimmoth_44 (~f@179.251.147.19) (Client Quit)
[05:40:15] <FromDiscord> <Just Jasmine, Please> Hi! I'm getting back into nim after a little break and was wondering if there where any good tutorials on making games using godot and nim? Not necessarily setting it up, I feel that I would learn faster if I could see how the language interacts with godot
[05:59:53] <FromDiscord> <impbox [ftsf]> I've seen a few people posting about using nim with Godot in the #gamedev channel, not sure if there's any tutorials but maybe someone can help you out
[06:12:08] <FromDiscord> <hyu1996> choosenim does not support centos7.6
[06:12:24] <FromDiscord> <hyu1996>  https://media.discordapp.net/attachments/371759389889003532/907822468960501760/unknown.png
[06:13:29] <FromDiscord> <hyu1996> I need to install a new version of the compiler to compile the new version of glibc
[06:14:37] <FromDiscord> <Rika> afaik choosenim expects modern glibc yeah
[06:22:48] <NimEventer> New thread by Tmsa04: Fix for Warning: implicit conversion to 'cstring' from a non-const location, see https://forum.nim-lang.org/t/8608
[06:25:02] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 240 seconds)
[06:33:32] *** Quits: krux02 (~krux02@p200300e817076e0044b6cdb56690220d.dip0.t-ipconnect.de) (Quit: Leaving)
[06:41:20] <FromDiscord> <Yardanico> In reply to @hyu1996 "I need to install": If you just want Nim on an system with old glibc you can get nightlies for 1.6 branch
[06:42:25] <FromDiscord> <Yardanico> https://github.com/nim-lang/nightlies/releases/tag/2021-10-19-version-1-6-727c6378d2464090564dbcd9bc8b9ac648467e38
[06:42:55] <FromDiscord> <Yardanico> binaries there are statically linked with musl
[06:43:19] <FromDiscord> <Yardanico> Also this is not a "nightly" in the stability sense, but the 1.6 release
[06:47:27] <FromDiscord> <ajusa> How do I install Futhark on Linux? https://github.com/PMunch/futhark↵I'm getting a `cannot find -lclang`, not sure what packages I need other than clang. Also not sure what path I'm supposed to pass to it
[06:48:22] <FromDiscord> <ajusa> And I answered my own question: I needed to install `clang-devel`, my bad
[06:54:35] <FromDiscord> <hyu1996> In reply to @Yardanico "If you just want": thx bro, I am already compiling gcc7.5
[07:02:16] <FromDiscord> <hyu1996> this code is a bit counter-intuitive https://media.discordapp.net/attachments/371759389889003532/907835018653618196/WXGEQIVVKCXUWBZIKLB.png
[07:07:23] <FromDiscord> <hyu1996> This is the result of running python https://media.discordapp.net/attachments/371759389889003532/907836310058856458/unknown.png
[07:10:15] <FromDiscord> <hyu1996> intuitively, the path a/../d/e is d/e, not a/d/e
[07:14:14] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:18:05] <FromDiscord> <Rika> In reply to @hyu1996 "intuitively, the path `a/../d/e`": python does not resolve ".." afaik
[07:24:07] <FromDiscord> <hyu1996> there is bad news. my glibc is broken. I will take a moment to restore from the system backup. https://media.discordapp.net/attachments/371759389889003532/907840518610907216/unknown.png
[07:27:21] <FromDiscord> <hyu1996> In reply to @Rika "python does not resolve": I think python’s approach is correct because`a` is not the root directory, it is a relative directory
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:46:50] <Amun-Ra> 7.6 is eol, what can you do
[08:02:42] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[08:22:05] <FromDiscord> <hyu1996> in my country, centos7 is still very popular, and many production environments are afraid to upgrade or replace the system easily.
[08:24:25] <FromDiscord> <hyu1996> our company’s test environment is centos7.64, so we use this version of the system for development and testing
[09:36:44] <Amun-Ra> that's pretty unfortunate as iirc they stopped releasing security fixes for 7.x
[10:56:35] <FromDiscord> <evoalg> I get why `newSeqOfCap` is more efficient than Seq, but why would `newSeqOfCap` be used instead of an array? Both are limited by size, and both grab all the memory they need upon initialization ... have I got that right?
[10:57:52] <FromDiscord> <Elegantbeef> sequences can grow
[10:57:58] <FromDiscord> <Elegantbeef> So if you do hit the capacity it can grow over it
[10:58:06] <FromDiscord> <Elegantbeef> But with an array if you need more you're SoL
[10:58:33] <FromDiscord> <evoalg> newSeqOfCap can grow? - oh I didn't know ...
[10:58:52] <FromDiscord> <Elegantbeef> It's just a sequence underneath, it just allocates a given amount on usage
[10:59:39] <FromDiscord> <evoalg> I see ... then what's the difference between the cap and a seq where you define the length? ... ie  `newSeq[string](3)`
[11:00:43] <FromDiscord> <Rika> Capacity means only memory
[11:00:50] <FromDiscord> <evoalg> eg `newSeq[string](3)` vs `newSeqOfCap[string](3)`
[11:00:59] <FromDiscord> <Rika> (Empty seq)
[11:01:11] <FromDiscord> <Rika> Defined length means the seq is filled with default entries of the type
[11:01:59] <FromDiscord> <evoalg> ohhhh the Cap version isn't filled ... why is that a good thing? ... I mean why would one be used over the other?
[11:03:52] <FromDiscord> <evoalg> Oh I guess you can filled the already filled one with proper values out of order
[11:04:17] <FromDiscord> <evoalg> but for the Cap version I'd have to use .add
[11:11:02] <FromDiscord> <Elegantbeef> Indeed `newSeq[int](3)[0]` is fine but `newSeqOfCap[int](3)[0]` is an error
[11:20:24] <FromDiscord> <evoalg> Thank you once again for patiently & expertly answering my noob questions
[11:30:11] *** Joins: pro (~pro@user/pro)
[11:38:50] *** Joins: PMunch (~PMunch@c01F28BC3.dhcp.as2116.net)
[11:41:09] <FromDiscord> <evoalg> So I was wrong to think they were limited in size, it's more that they grab that much memory in one go
[11:42:23] <FromDiscord> <Elegantbeef> Yep
[11:42:26] <FromDiscord> <Elegantbeef> You've got it!
[11:43:52] <FromDiscord> <evoalg> Nice lol I'm getting there slowly (with your help)
[11:44:56] <FromDiscord> <Elegantbeef> Hey my help is offered gladly especially today! 😛
[11:45:13] <FromDiscord> <evoalg> why especially today?
[11:45:51] <FromDiscord> <Elegantbeef> My dogs were attacked when i was walking them today, so the distraction is nice 🙂
[11:46:15] <FromDiscord> <evoalg> ahhh no sorry to hear that
[11:46:29] <FromDiscord> <evoalg> well I do have another question...
[11:46:33] <FromDiscord> <Elegantbeef> Good
[11:47:07] <FromDiscord> <evoalg> let me prep it ....
[11:49:49] <FromDiscord> <evoalg> https://play.nim-lang.org/#ix=3EyS
[11:50:19] <FromDiscord> <evoalg> I want to know if my "find all" proc is a good idea or if I'm missing something obvious
[11:50:41] <FromDiscord> <Elegantbeef> Depends on what you're after, do you want them all in a collection?
[11:50:44] <FromDiscord> <evoalg> (as I thought there would be the function already in nim but I can't see anything)
[11:51:45] <FromDiscord> <evoalg> I was after the indexes, as I wanted to replace those chars by something else (but not with the same char)
[11:51:56] <FromDiscord> <Rika> I feel like that’s fine
[11:52:10] <FromDiscord> <Rika> If you’re finding all you have to scan all indices
[11:52:19] <FromDiscord> <Rika> Given an unsorted sequence
[11:53:04] <FromDiscord> <evoalg> ok phew - I was thinking I was taking the long way as I usually do 😉
[11:53:43] <FromDiscord> <Elegantbeef> You can do it a bit simpler(also included an inplace iterator version) https://play.nim-lang.org/#ix=3EyT
[11:54:05] <FromDiscord> <evoalg> oooo let me digest!
[11:54:15] <FromDiscord> <Rika> Smh beef code duplication that’s bad
[11:54:52] <FromDiscord> <Rika> Personally would make the iterator only, I can always use to seq for the value returning version
[11:55:33] <FromDiscord> <Elegantbeef> Yep
[11:58:49] <FromDiscord> <evoalg> woah I'm still trying to figure out how that inplace iterator works
[11:59:30] <FromDiscord> <Elegantbeef> iterators are just copy pastes basically
[12:00:26] <FromDiscord> <Elegantbeef> So where you call `for x in findAllIndsof(s, c)` imagine it copying the iterator body there and each `yield` is doing `let x = yieldValue` followed by your code
[12:01:12] <FromDiscord> <evoalg> ok I sort of get that ... but the yield seems to be returning an address?
[12:01:48] <FromDiscord> <Elegantbeef> yea `var string` `var char` are references
[12:02:17] <FromDiscord> <evoalg> ohhhhh!
[12:02:41] <FromDiscord> <evoalg> lol that's very tricky and cute
[12:03:59] <FromDiscord> <Elegantbeef> What's probably clear is that this wouldnt work for `let` variables, so you'd need to do a copy first
[12:04:17] <FromDiscord> <Elegantbeef> `var myNewStr = myString` before the iterator
[12:04:44] <FromDiscord> <Tuatarian> anyone here do graphics programming in Nim?
[12:04:48] <FromDiscord> <Tuatarian> or game programming
[12:04:56] <FromDiscord> <Elegantbeef> Some schmuck named beef
[12:05:05] <FromDiscord> <Tuatarian> wonder who that could be
[12:05:13] <FromDiscord> <Tuatarian> any idea what tooling he uses?
[12:05:33] <FromDiscord> <Tuatarian> (gameengine/library/whatever)
[12:05:37] <FromDiscord> <Elegantbeef> He's presently using his own "framework"
[12:05:42] <FromDiscord> <Tuatarian> I see
[12:05:48] <FromDiscord> <Tuatarian> has he written it from scratch?
[12:06:08] <FromDiscord> <Elegantbeef> Using SDL2 + opengl + assimp yes
[12:06:11] <FromDiscord> <Tuatarian> if so, I am very impressed with his work
[12:06:19] <FromDiscord> <Tuatarian> what's his opinion on SDL2?
[12:06:27] <FromDiscord> <Elegantbeef> It's fine so far
[12:06:46] <FromDiscord> <Tuatarian> I've been using raylib, but I want to try other things since shaders have never worked properly for me
[12:06:49] <FromDiscord> <Elegantbeef> Window events being in the same event queue as buttons kinda sucks
[12:07:02] <FromDiscord> <Tuatarian> somehow the examples work fine, but my code does not, and I cannot identify the difference between me and the examples
[12:07:06] <FromDiscord> <Tuatarian> oh I see
[12:07:07] <FromDiscord> <Tuatarian> that's strange
[12:07:17] <FromDiscord> <Elegantbeef> drop-2021-11-09\_01.53.02.mp4 https://media.discordapp.net/attachments/371759389889003532/907911779634540554/drop-2021-11-09_01.53.02.mp4
[12:07:17] <FromDiscord> <Elegantbeef> This is my present work with it
[12:07:27] <FromDiscord> <Elegantbeef> Mostly building it out with it, but truss3d is very much "not finished"
[12:07:30] <FromDiscord> <Tuatarian> pretty solid
[12:07:54] <FromDiscord> <Elegantbeef> Today i was working on framebuffers before the aforementioned event
[12:07:57] <FromDiscord> <Tuatarian> yeah this looks very good
[12:08:03] <FromDiscord> <Tuatarian> the wonder event?
[12:08:12] <FromDiscord> <Tuatarian> window?
[12:08:30] <FromDiscord> <Elegantbeef> Nope the thing about my dogs i mentioned earlier
[12:08:49] <FromDiscord> <Tuatarian> oh god
[12:08:52] <FromDiscord> <Tuatarian> wow I did not see that
[12:08:55] <FromDiscord> <Tuatarian> that's horrible
[12:09:12] <FromDiscord> <Tuatarian> are they ok?
[12:09:17] <FromDiscord> <Elegantbeef> https://github.com/beef331/truss3d if you want to look about the framework feel free too, looking now forgot to throw a license on it
[12:09:38] <FromDiscord> <Tuatarian> debating whether to work from this or to try to make my own thing
[12:09:56] <FromDiscord> <Elegantbeef> Aside from stitches and being uncomfortable yea they're fine, one got vastly more injured
[12:10:18] <FromDiscord> <Elegantbeef> And if you wanted to see how it looks in use the above game is being developed openly
[12:10:26] <FromDiscord> <Elegantbeef> https://github.com/beef331/mindthegap3D
[12:11:16] <FromDiscord> <Tuatarian> how does rendering work with SDL?
[12:11:21] <FromDiscord> <Tuatarian> like lets say I want to draw a triangle
[12:11:32] <FromDiscord> <Elegantbeef> I'm not using sdl2 for rendering
[12:11:39] <FromDiscord> <Tuatarian> pure opengl for rendering?
[12:11:44] <FromDiscord> <Elegantbeef> I'm using opengl for rendering, sdl2 for IO/windowing and assimp for loading models
[12:11:55] <FromDiscord> <Tuatarian> is managing the 3 libs a pain?
[12:12:19] <FromDiscord> <Elegantbeef> Not too bad, i'm using my own fork of the last's bindings to add features i want/need
[12:12:24] <FromDiscord> <Elegantbeef> The other two work as if C
[12:13:22] <FromDiscord> <Elegantbeef> image.png https://media.discordapp.net/attachments/371759389889003532/907913310798770186/image.png
[12:13:26] <FromDiscord> <Elegantbeef> https://github.com/beef331/truss3d/blob/master/examples/shapes.nim generated by this
[12:13:36] <FromDiscord> <Elegantbeef> Just so you can get an understanding of the API presently
[12:15:01] <FromDiscord> <Tuatarian> seems pretty reasonable
[12:15:12] <FromDiscord> <Tuatarian> I really hate the organization of opengl though
[12:15:30] <FromDiscord> <Tuatarian> it basically being a state machine really makes life hard
[12:15:57] <FromDiscord> <Elegantbeef> Yea that's what most of the abstractions are about removing that nusiance part
[12:17:49] <FromDiscord> <Elegantbeef> You might be interested in https://github.com/Ethosa/nodesnim or https://github.com/abisxir/alasgar
[12:24:14] <PMunch> Is the playground down for anybody else? It appears up from my end.. https://forum.nim-lang.org/t/5052#55908
[12:24:41] <FromDiscord> <Elegantbeef> Fine here
[12:26:33] <FromDiscord> <evoalg> Will you be walking with a big stick in future? Hmmmm I dunno what the answer is
[12:28:01] <FromDiscord> <Elegantbeef> I'm not Teddy Roosevelt
[12:29:10] <FromDiscord> <evoalg> So in your tricky iterator, `s: var string` bit means a ref, and with the `for i, x in s:` part, i and x aren't addresses, but the `yield s[i]` is because s[i] is an address, so that's why you yield that instead of x?
[12:29:31] <FromDiscord> <Elegantbeef> Yep
[12:29:45] <FromDiscord> <Rika> Be careful when calling them references
[12:29:51] <FromDiscord> <Elegantbeef> `for i, x in s` calls `x.pairs` which yields `(int, char)`
[12:30:04] <FromDiscord> <Rika> You’ll get confused easily
[12:30:33] <FromDiscord> <evoalg> I get confused easily enough as it is lol
[12:30:53] <FromDiscord> <Rika> In reply to @evoalg "So in your tricky": Not because it’s an address but because x is immutable
[12:31:25] <FromDiscord> <Rika> s[i] is “var char” and x is “char”
[12:31:41] <FromDiscord> <Rika> You could yield x if you used mitems
[12:32:03] <FromDiscord> <Elegantbeef> But then you need to use your own increment counter
[12:33:09] <FromDiscord> <Rika> ?? What increment counter
[12:33:20] <FromDiscord> <Elegantbeef> `i, x`
[12:33:38] <FromDiscord> <Rika> Again, what about it
[12:33:49] <FromDiscord> <Elegantbeef> Ah right nevermind
[12:33:54] <FromDiscord> <Rika> Smh
[12:33:57] <FromDiscord> <evoalg> interesting! ... I think in python I can change the x (in a for x in...)
[12:34:16] <FromDiscord> <Rika> In reply to @evoalg "interesting! ... I think": Python doesn’t have a concept of immutability
[12:34:30] <FromDiscord> <evoalg> ahh gotcha
[12:34:38] <FromDiscord> <evoalg> I googled smh ... Shaking my head ?
[12:34:41] <FromDiscord> <Rika> Unless you shoehorn it in with custom classes
[12:34:44] <FromDiscord> <Rika> In reply to @evoalg "I googled smh ...": Yes
[12:35:29] <FromDiscord> <evoalg> Do both of you know how to program in C too?
[12:35:39] <FromDiscord> <Elegantbeef> I do not
[12:35:56] <FromDiscord> <Elegantbeef> I know enough C i can wrap stuff, but aside from that i do not know anything
[12:36:32] <FromDiscord> <evoalg> I'm encouraged to hear that because with lots of C talk in this channel I was fearing I'd have to have a good understanding of C to be able to program in nim properly
[12:37:06] <FromDiscord> <Elegantbeef> C will help but to learn lower level stuff Nim will do just aswell
[12:37:32] <FromDiscord> <Elegantbeef> I came from C# a few years ago and didnt have much of a grasp on pretty much any lower level stuff
[12:37:59] <FromDiscord> <evoalg> ahhh interesting!
[12:39:45] <FromDiscord> <Rika> In reply to @evoalg "Do both of you": I do
[12:39:48] <FromDiscord> <Rika> Sorry to say
[12:39:53] <FromDiscord> <Rika> And also unfortunately for me
[12:40:11] <FromDiscord> <evoalg> lol ... why unfortunately?
[12:40:17] <FromDiscord> <Elegantbeef> It's C
[12:40:22] <FromDiscord> <evoalg> lol
[12:40:25] <FromDiscord> <Rika> Try it. You may cry
[12:40:47] <PMunch> Pfft, C isn't all that bad
[12:40:53] <PMunch> Once you get a hang of pointers
[12:41:08] <FromDiscord> <Rika> It isn’t but it is if you’re under time pressure and have to write a lot of shit from scratch
[12:41:21] <FromDiscord> <Rika> Also lack of overloading was painful
[12:41:41] <FromDiscord> <Rika> Library name + type name prefixes
[12:41:43] <FromDiscord> <Rika> How nice
[12:42:30] <FromDiscord> <evoalg> when people talk of C in here, are they talking C or really C++ ?
[12:42:43] <PMunch> I talk of C
[12:42:49] <FromDiscord> <Elegantbeef> Depends if it's Gumber, it's C++ else it's C
[12:43:09] <PMunch> I've programmed C++, but I was told my code resembled C code :P
[12:44:02] <FromDiscord> <evoalg> hehe ... I was under the impression that everyone uses C++ now ... I was lied to
[12:44:34] <FromDiscord> <Elegantbeef> C++ is a common language in some domains
[12:45:11] <FromDiscord> <evoalg> C is faster then C++ and that's why it's still used?
[12:45:23] <FromDiscord> <Elegantbeef> uh oh language speeds 😀
[12:45:33] <FromDiscord> <evoalg> oh damn sorry
[12:45:43] <FromDiscord> <Elegantbeef> When it comes to system languages they're pretty much all the same
[12:45:47] <FromDiscord> <konsumlamm> you can essentially write C in C++, so not really
[12:46:18] <pro> https://www.youtube.com/watch?v=1i4-e1okZtw 5min thoughts on c+++
[12:47:28] <FromDiscord> <Rika> Barney starsoup lmao
[12:52:28] <FromDiscord> <evoalg> hash - but interesting
[13:11:54] <FromDiscord> <evoalg> Rika when you said that with the "find all indices" proc and the iterator that code duplication is bad and the iterator is all that's needed (if I understood rightly), how can I use that iterated to get the index rather than the address, if i really wanted the index?
[13:12:24] <FromDiscord> <evoalg> iterator
[13:13:56] <FromDiscord> <Rika> In reply to @evoalg "Rika when you said": You would make the index the “base iterator” and derive an address iterator from that
[13:15:48] <FromDiscord> <evoalg> over my head, but that's ok, I have a lot to learn yet 😉
[13:16:39] <FromDiscord> <Rika> I use these terms but it’s not specific to Nim
[13:16:50] <FromDiscord> <Rika> I would show how but I am not at a large computer
[13:18:58] <FromDiscord> <evoalg> that's fine! 🙂
[13:48:33] <FromDiscord> <Zoom> The books are shorter.↵(@evoalg)
[14:08:41] <NimEventer> New thread by Gyohng: Proc doSomething(msg="", opt=-1), see https://forum.nim-lang.org/t/8609
[14:18:21] *** Joins: NeoCron (~NeoCron@p200300c4cf161b0075b55a4b5f100d7e.dip0.t-ipconnect.de)
[14:21:53] *** Quits: NeoCron (~NeoCron@p200300c4cf161b0075b55a4b5f100d7e.dip0.t-ipconnect.de) (Remote host closed the connection)
[14:35:44] <Amun-Ra> evoalg: if you don't know the max # of elements compile time you can't use array
[14:36:54] <FromDiscord> <evoalg> ahhh true - thanks!
[14:37:40] <FromDiscord> <Zoom> Sorry for repeating myself. I'd appreciate if any occasional Geany user could comment there\: https://github.com/geany/geany/pull/2988 [HJarausch (HJarausch)](https://matrix.to/#/@hjarausch-54468881db8155e6700cd3cf:gitter.im), you might be interested.
[14:40:12] <FromDiscord> <Rika> Geany users are very limited in number
[14:44:11] <FromDiscord> <Zoom> And the sky is blue.
[14:45:05] <FromDiscord> <Zoom> I like its simplicity, it's nice to quickly drop onto a bare Win machine.
[14:46:42] <FromDiscord> <amadan> Messing around your changes, anything in particular to look for?↵Only issue I can find is that it doesn't pick up nim when trying to build a file
[14:49:28] <FromDiscord> <Zoom> @amadan\: it should look in your path for this. Anyway, if it doesn't pick up it's not this config's fault \:D
[14:49:50] <FromDiscord> <Zoom> It's mostly just an updated identifiers list
[14:53:36] <FromDiscord> <Zoom> Though, it were the missing ident settings that made me do it. Config's been there for two years 🤦
[14:55:57] <FromDiscord> <amadan> sent a code paste, see https://play.nim-lang.org/#ix=3EzP
[14:56:08] <FromDiscord> <amadan> (edit) "https://play.nim-lang.org/#ix=3EzP" => "https://play.nim-lang.org/#ix=3EzQ"
[15:01:57] *** Quits: koltrast (~koltrast@h77-53-57-114.cust.a3fiber.se) (Remote host closed the connection)
[15:03:37] *** Joins: koltrast (~koltrast@h77-53-57-114.cust.a3fiber.se)
[15:12:42] *** Joins: krux02 (~krux02@p200300e817076e0044b6cdb56690220d.dip0.t-ipconnect.de)
[15:17:42] <FromDiscord> <Zoom> We can add it and complain. It's probably because it uses Python lexer
[15:24:18] <FromDiscord> <Zoom> Hm, Lexilla actually has a lexer for Nim, it's just not imported into Geany.
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:40] <FromDiscord> <hmmm> yo nimscords, anyone familiar with datamancer?
[15:38:06] <FromDiscord> <Rika> No
[15:38:37] <FromDiscord> <hmmm> rika sama I expect you to be familiar with everything, I'm surprised
[15:39:41] <FromDiscord> <hmmm> I'm kind of surviving the impact by googling how to do xyz in pandas and see if datamancer has the facilities but I'm hitting some roadblocks
[15:40:06] <FromDiscord> <Rika> In reply to @hmmm "rika sama I expect": Why
[15:40:12] *** Quits: Freneticks (~Frenetick@gw.ptr-80-238-209-252.customer.ch.netstream.com) (Quit: WeeChat 2.8)
[15:40:15] <FromDiscord> <Rika> I’m not a data scientist
[15:40:45] <FromDiscord> <hmmm> you are a nim guru I expect you to know everything :3
[15:41:11] <FromDiscord> <Rika> I haven’t written proper Nim code in probably months
[15:41:29] <FromDiscord> <hmmm> your unproper code is still sama level of quality
[15:41:45] <FromDiscord> <Rika> Okay
[15:41:54] <FromDiscord> <Rika> Well let’s hear your problem then
[15:42:50] <FromDiscord> <hmmm> well there are lots, but the most recent one is that pandas let you select columns without identifier with loc or iloc and I don't know yet how to do it on datamancer
[15:43:24] <FromDiscord> <Rika> Okay now wait for someone who knows about this to answer you lol
[15:43:28] <FromDiscord> <hmmm> lol
[15:43:33] <FromDiscord> <hmmm> I love you rika
[15:43:51] <FromDiscord> <Rika> I’ll actually look into it maybe later but I’m not at my apartment lol
[15:44:48] <FromDiscord> <hmmm> don't worry about it I'm sure I'll find some dataframe guru around, usually it's vindaar
[15:48:23] <arkanoid> though experiment: nim is the third most popular language, millions of developers dive into the community and creates nim packages all over the web. What makes nim more resilient than npm in handling the micropackaging problem?
[15:49:49] <FromDiscord> <Rika> Nothing
[15:52:59] <arkanoid> I'd bet on the type system
[15:53:37] <FromDiscord> <Rika> Hmm I guess that’s true
[15:53:59] <FromDiscord> <Rika> But that wouldn’t stop dumb users abusing auto and adding type names to proc names
[15:57:30] <FromDiscord> <hmmm> having millions of devs means having millions of pages of documentation and tutorials, I'm drooling
[15:57:57] <FromDiscord> <hmmm> why the rest of the world can't understand nim greatness
[15:58:35] <FromDiscord> <hmmm> I mean you write echo "hello" and it does something what's more beautiful than that
[16:01:56] *** Joins: neurocyte0132889 (~neurocyte@94.46.71.199)
[16:01:56] *** Quits: neurocyte0132889 (~neurocyte@94.46.71.199) (Changing host)
[16:01:56] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[16:02:03] <FromDiscord> <ajusa> Anyone have any idea as to why this library might be slower than python? https://github.com/z-------------/nim-mmdb/blob/master/src/mmdb.nim
[16:03:55] <FromDiscord> <Zoom> sent a code paste, see https://play.nim-lang.org/#ix=3EAg
[16:04:16] <PMunch> Without looking at the code I'm going to guess either unnecessary copying, or poor choice of compilation flags
[16:07:13] <FromDiscord> <faix> millons of devs does having many other problems and other point of views. not all what does twinkle is gold !↵(@hmmm)
[16:08:08] <FromDiscord> <ajusa> In reply to @PMunch "Without looking at the": I used Nim release when I tested it, and after reading it I get the impression that it is idiomatic Nim?
[16:08:56] <FromDiscord> <ajusa> Fwiw I think the python implementation is actually calling C, but straight Nim should be faster than Nimpy
[16:20:04] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Quit: The Lounge - https://thelounge.chat)
[16:24:22] *** Joins: neurocyte0132889 (~neurocyte@94.46.71.199)
[16:24:23] *** Quits: neurocyte0132889 (~neurocyte@94.46.71.199) (Changing host)
[16:24:23] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[16:44:30] <FromDiscord> <sOkam!> New to Nim. Is it possible to create aliases for func, proc and method?↵eg. `fn name()` vs `func name()`↵Saw that macros can do some fancy stuff, but wondering if they include those too
[16:48:48] <FromDiscord> <Rika> you can but it will not be pretty
[16:49:05] <FromDiscord> <Rika> and it wont look exactly like that
[16:49:37] <FromDiscord> <Rika> basically: not without massive amounts of effort and probably many tears, and much changed syntax
[17:07:01] *** Joins: rockcavera (~rc@192.12.112.105)
[17:07:02] *** Quits: rockcavera (~rc@192.12.112.105) (Changing host)
[17:07:02] *** Joins: rockcavera (~rc@user/rockcavera)
[17:15:19] <PMunch> Uhm, not sure what sOkam meant, but it shouldn't be that hard..
[17:16:09] <FromDiscord> <Yardanico> @PMunch he meant creating keyword aliases
[17:16:20] <FromDiscord> <Yardanico> so instead of "proc" you can write "prc", instead of "func" you write "fn", etc
[17:16:27] <PMunch> Oooh, right
[17:16:38] <PMunch> I thought he meant something like this: https://play.nim-lang.org/#ix=3EAu
[17:16:40] <FromDiscord> <Yardanico> that's easily possible with source code filters, but they don't really understand the syntax so they will also replace the words in the wrong places
[17:16:48] <PMunch> And was confused why @Rika thought that would be painful
[17:16:51] <FromDiscord> <Yardanico> and making a macro for aliased keywords can be pretty hard
[17:17:28] <FromDiscord> <enthus1ast> @sOkam!\: why you wanna do this?
[17:26:07] <FromDiscord> <exelotl> wow lol I went to search something on nimble.directory and saw my own library in the trending section xD
[17:30:12] <FromDiscord> <dom96> you're famous
[17:30:25] <FromDiscord> <dom96> really awesome that nimble.directory has this feature
[17:36:39] <FromDiscord> <hmmm> put nimble.directory on the website somewhere, I lost the link recently and it was a pain to find it again
[17:37:14] <FromDiscord> <exelotl> I was thinking of moving the library to sourcehut but then I'd lose my stars 😅
[17:37:30] <FromDiscord> <exelotl> they've got me hooked
[17:37:41] <FromDiscord> <hmmm> first world dev problems, I see 😋
[17:38:53] *** Joins: Gentoolman (~Gen2@188.243.183.243)
[17:39:01] <Gentoolman> Hello!
[17:39:33] <pro> welcome
[17:40:55] <FromDiscord> <willyboar> In reply to @hmmm "put nimble.directory on the": there is in the search section here https://nim-lang.org/documentation.html
[17:42:50] <Gentoolman> I would like if you helped me with one thing. I'm trying to set a value in a JSON dictionary, yet it doesn't seem to work with Python-esque syntax
[17:42:52] <FromDiscord> <hmmm> too hidden and it should use the proper name nimble.directory so google can see it. Ideally it should be on main page near irc and github links
[17:42:58] <Gentoolman> Something of that sort
[17:43:01] <Gentoolman> https://pastebin.com/vbuXnTde
[17:43:44] <FromDiscord> <Yardanico> first of all, in nim you have to define new variables with var let or const
[17:43:47] <FromDiscord> <Yardanico> in your case `var` is the best choicer
[17:43:48] <FromDiscord> <Yardanico> (edit) "choicer" => "choice"
[17:44:00] <Gentoolman> That's not the ful source code ;)
[17:44:41] <FromDiscord> <Yardanico> ah right, you need to do %
[17:44:47] <FromDiscord> <Yardanico> %getEnv("VAULT_ROLE_ID")
[17:44:58] <Gentoolman> let me try that one out
[17:45:00] <FromDiscord> <Yardanico> % is defined in json and it makes a json object out of a variable
[17:45:19] <Gentoolman> Damn, that's crazy
[17:45:25] <Gentoolman> Thanks a billion times
[17:49:21] <Gentoolman> My bad, it actually was on json page. :)
[18:00:37] <arkanoid> what is zig c compiler and why it can be used with nim too?
[18:01:15] <FromDiscord> <Yardanico> `zig cc` wraps clang and adds a lot of versions of glibc, musl, mingw to allow cross-compiling for a lot of architectures and OSes
[18:01:42] <FromDiscord> <Yardanico> it's generally easier to use it for cross-compilation because then you don't need to have a separate compiler for every architecture/os combination
[18:02:22] <FromDiscord> <Yardanico> for example https://github.com/Yardanico/ircord/blob/master/zig-compile-vps.sh compiling for an older version of glibc
[18:02:49] <FromDiscord> <Yardanico> -fno-sanitize=undefined is here because `zig cc` has it on by default, and ASAN really doesn't like refc
[18:06:29] <FromDiscord> <dom96> Anybody interested? https://twitter.com/contextfreeinfo/status/1458434818492887049?s=21
[18:07:37] <FromDiscord> <Yardanico> In reply to @dom96 "Anybody interested? https://twitter.com/contextfree": would it be hard though? they seem to have a simple C interface
[18:08:11] <FromDiscord> <Yardanico> ah, not that simple since they don't use emscripten, so will need to use something like https://github.com/yglukhov/wasmrt
[18:08:57] <FromDiscord> <dom96> anything stopping from using emscripten?
[18:10:09] <FromDiscord> <Yardanico> because wasm-4 is not really made for it? i mean it should be possible, but won't be very simple too
[18:10:14] <FromDiscord> <Yardanico> i can't find anything related to wasm-4 with emscripten
[18:11:01] <FromDiscord> <dom96> In reply to @Yardanico "ah, not that simple": huh, didn't see this before
[18:11:08] <FromDiscord> <dom96> I guess it calls clang to generate wasm?
[18:11:15] <FromDiscord> <Yardanico> yes
[18:12:24] <FromDiscord> <dom96> Another approach: https://github.com/dom96/webasmio
[18:12:44] <FromDiscord> <Yardanico> how would that work for pure wasm though?
[18:12:51] <FromDiscord> <dom96> Much more to implement but also much more fun, if anyone wants to help I'd love to collab
[18:13:06] <FromDiscord> <Yardanico> well, you basically want a wasm backend for nim I guess :P
[18:13:11] <FromDiscord> <dom96> yes
[18:13:44] <FromDiscord> <dom96> I think it's cool this kind of thing is possible as a library
[18:15:45] <FromDiscord> <dom96> Guess I'll be starting an async-wg and a webasm-wg
[18:15:59] <FromDiscord> <dom96> so many fun projects, so little time
[18:16:33] <NimEventer> New post on r/nim by GeroSchorsch: how to pass argument to proc by value without changing its value outside of the proc?, see https://reddit.com/r/nim/comments/qqvzpn/how_to_pass_argument_to_proc_by_value_without/
[18:18:26] <FromDiscord> <Rika> In reply to @dom96 "so many fun projects,": ikr
[18:21:07] <FromDiscord> <Yardanico> anyway, doing the wasm4 thing now, let's see if it's easy enough
[18:22:54] <FromDiscord> <dom96> awesome, thanks for looking into it 🙂
[18:38:39] <FromDiscord> <vindaar> Indeed, there is no such thing at the moment. I don't really see the point of indexing a data frame using integers. If you can enlighten me, I might be willing to add the option↵(@hmmm)
[18:40:52] <FromDiscord> <Rika> has anyone made an LV2/LADSPA/some daw plugin with nim? just curious, dont have a specific question
[18:41:57] <FromDiscord> <jorjun-666> On a mac with DYLD_LIBRARY_PATH set to my custom homebrew setup.. but linker is not searching in there.. any tips ?
[18:43:08] <FromDiscord> <enthus1ast> this is for the dynamic linker
[18:44:16] <FromDiscord> <enthus1ast> so it should search on app start for in this folder BUT this depends on how the libraries are linked. iirc nim does not respect this variable (at least on linux)
[18:44:18] <FromDiscord> <jorjun-666> yep, have installed libgd (with homebrew) and getting "dlopen(libgd.dylib, 0x0002): tried: 'libgd.dylib' (no such file), '/usr/local/lib/libgd.dylib' (no such file), '/usr/lib/libgd.dylib' (no such file)"
[18:45:06] <FromDiscord> <jorjun-666> I don't use those folders at all... maybe I can attempt to fix..?
[18:45:09] <FromDiscord> <enthus1ast> in fact, nim calls dlopen / dlsym by itself
[18:45:39] <FromDiscord> <Yardanico> @dom96 that was too easy :) https://media.discordapp.net/attachments/371759389889003532/908012034443075645/unknown.png
[18:45:44] <FromDiscord> <Yardanico> i expected more troubles from the C compiler
[18:46:01] <FromDiscord> <Yardanico> this is their default C example https://media.discordapp.net/attachments/371759389889003532/908012125308481606/unknown.png
[18:46:07] <FromDiscord> <Yardanico> translated to nim
[18:48:32] <FromDiscord> <tandy> is this a nico example in wasm?↵(@Yardanico)
[18:48:40] <FromDiscord> <Yardanico> no, it's https://wasm4.org/docs/
[18:48:45] <FromDiscord> <Yardanico> In reply to @dom96 "Anybody interested? https://twitter.com/contextfree": ^
[18:49:07] <FromDiscord> <tandy> oh intersting↵(@Yardanico)
[18:51:03] <FromDiscord> <Yardanico> file size is much higher than the one compiled for C though
[18:51:58] <FromDiscord> <dom96> nice! Do you have Twitter? Can you tweet the example to ContextFreeInfo? 🙂
[18:53:23] <FromDiscord> <Yardanico> yeah sure I'll tweet him, need to organize the files a bit better though
[18:53:59] <FromDiscord> <enthus1ast> @jorjun-666\: on linux dlopen is used ( https://linux.die.net/man/3/dlopen )  and this should respect the LD\_LIBRARY\_PATH.https://github.com/nim-lang/Nim/blob/141b76e36519219915ada9086d1c9b1d0b465659/lib/system/dyncalls.nim
[18:55:05] <FromDiscord> <Yardanico> @dom96 ah nvm the big file size was because I left out some text code where I tried nim strings (they work)
[18:55:20] <FromDiscord> <Yardanico> but with dynamic allocations wasm cartridge size seems to increase quite a lot (from ~200 bytes to 6kb)
[18:56:20] <FromDiscord> <Yardanico> the resulting binary for the same example in C and Nim is only 6 bytes larger in Nim
[18:56:31] <FromDiscord> <Yardanico> 218 vs 224
[19:00:21] <FromDiscord> <IsaacPaul> Very cool
[19:00:30] <FromDiscord> <enthus1ast> @jorjun-666\: it seems that the use of DYLD\_LIBRARY\_PATH  was restricted, for "system integrity purpose"
[19:01:10] <FromDiscord> <enthus1ast> others also fighting with it, the document that was linked in this thread ( https://github.com/rbenv/rbenv/issues/962 ) is not available any more on the apple site.
[19:02:12] <FromDiscord> <enthus1ast> fuzzy feeling that apple respects your integrity right? \:D
[19:04:38] <FromDiscord> <jorjun-666> In reply to @enthus1ast "others also fighting with": But not my time, right... thanks so much... what do people do symlink libs into current folder?
[19:06:03] <FromDiscord> <enthus1ast> i do not programm on apple devices. But yeah this could work.
[19:06:34] <FromDiscord> <enthus1ast> Another interesting thing could be to strace the execution (if strace is available on macos) and see where it also looks for the lib
[19:06:50] <FromDiscord> <enthus1ast> just for curiosity
[19:09:57] <FromDiscord> <enthus1ast> @jorjun-666\:↵https://stackoverflow.com/questions/39927235/alternative-for-the-dyld-library-path-trick-since-mac-os-10-11-el-capitan-with-shttps://developer.apple.com/library/archive/documentation/DeveloperTools/Conceptual/DynamicLibraries/100-Articles/RunpathDependentLibraries.htmlMaybe this can work, but i think this requires a rebuild of the libs.
[19:10:18] <FromDiscord> <enthus1ast> which defeats the purpose of brew i guess
[19:19:58] <FromDiscord> <pietroppeter> hi @PMunch did you get any response - I remember you asking somewhere - on what do we think about fosdem 2022 (remote)? I see deadline for devroom proposal is in a few days (Nov 15), do we usually propose a devroom or do we wait for an appropriate devroom to be there and send nim talks there? I might be interested in submitting a talk proposal if there is a devroom that fits nim... https://fosdem.org/2022/news/2021-11-02-devroom-cfp/
[19:21:12] <PMunch> No one responded as far as I know. But I've gotten a couple emails from the minimalistic room that we've been welcome in before (even helped them with organisation a while back)
[19:21:47] <PMunch> Now that we've done NimConf I feel like we have more to show to FOSDEM in regards to what they can expect from a Nim room and the quality of the talks
[19:21:57] <PMunch> So it might be worth trying to get our own room this year
[19:23:36] <FromDiscord> <Yardanico> @dom96 https://github.com/Yardanico/wasm4nim
[19:23:40] *** Joins: arkurious (~arkurious@user/arkurious)
[19:24:04] <FromDiscord> <Yardanico> tweeted to contextfree
[19:26:17] <FromDiscord> <dom96> thanks for the call out about FOSDEM @pietroppeter and PMunch. Would love to see a Nim-specific devroom this time
[19:26:24] <FromDiscord> <dom96> Wasn't there a Zig one last year?
[19:26:36] <PMunch> Was there?
[19:27:00] <PMunch> The deadline for room proposals is in 5 days by the way
[19:27:53] <FromDiscord> <pietroppeter> thanks @PMunch for the answer, good to know @dom96 is in on this. pretty new to FOSDEM so I would prefer not taking ownership of anything (except a talk proposal as mentioned :)) but let me know if I can help in some way!
[19:28:33] *** Quits: pro (~pro@user/pro) (Quit: WeeChat 3.3)
[19:30:03] <FromDiscord> <dom96> CC @narimiran who's organised NimConf
[19:33:07] <FromDiscord> <pietroppeter> In reply to @PMunch "Was there?": it seems there was indeed a zig devroom in 2021: https://archive.fosdem.org/2021/live/#devrooms
[19:33:18] <PMunch> Huh cool
[19:37:59] <PMunch> Oh well, I've gotta go walk the dog. But I'll be back later
[19:38:01] *** Quits: PMunch (~PMunch@c01F28BC3.dhcp.as2116.net) (Quit: leaving)
[19:38:19] <FromDiscord> <pietroppeter> sent a long message, see http://ix.io/3EBv
[19:38:33] <FromDiscord> <pietroppeter> I can help out as one of the 5 volunteers if needed
[19:38:45] <FromDiscord> <Daniel M. Jaén> What is the best package for HTTP?
[19:39:46] <FromDiscord> <enthus1ast> @Daniel M. Jaén\:  it depends 😀
[19:40:03] <FromDiscord> <enthus1ast> For client or server?
[19:40:10] <FromDiscord> <Daniel M. Jaén> server
[19:40:17] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[19:41:19] <FromDiscord> <enthus1ast> sent a long message, see http://ix.io/3EBz
[19:41:41] <FromDiscord> <enthus1ast> I like prologue, but have used alm the three successfully
[19:41:47] <FromDiscord> <enthus1ast> All
[19:43:19] <FromDiscord> <Daniel M. Jaén> Oh, and what about `httpx`?
[19:43:53] <FromDiscord> <xflywind> a fork of httpbeast; just use httpbeast
[19:44:55] <FromDiscord> <Daniel M. Jaén> nice
[19:45:02] <FromDiscord> <Yardanico> @dom96 I could've removed the header file but I can't get Nim to export the C symbol without N_LIB_PRIVATE
[19:45:17] <FromDiscord> <Yardanico> (that's the default even with exportc)
[19:47:26] <FromDiscord> <dom96> In reply to @pietroppeter "I can help out": you can count me in too, who wants to do the submission? 🙂
[19:47:55] <FromDiscord> <Yardanico> ah I can probably do codegenDecl but it's quite ugly
[19:48:09] <FromDiscord> <dom96> In reply to @flywind "a fork of httpbeast;": kinda wishing httpx was just called httpbeast_win 🙂
[19:49:12] <FromDiscord> <dom96> btw with io_uring I think there is room for a httpbeast-like package that specifically takes advantage of IOCP and io_uring (afaik these have a similar model)
[19:51:05] <FromDiscord> <xflywind> In reply to @dom96 "btw with io_uring I": I hope so. Maybe `cps-nim` will implement that eventually.
[19:52:45] <FromDiscord> <dom96> Maybe
[19:53:24] <FromDiscord> <dom96> it doesn't depend on coroutines though
[19:54:09] <FromDiscord> <xflywind> yeah, and https://github.com/alaviss/nim-sys provides OS support cps
[19:54:16] <FromDiscord> <xflywind> (edit) "yeah, and https://github.com/alaviss/nim-sys provides OS support ... cps" 03added "for"
[19:54:54] <FromDiscord> <xflywind> https://github.com/alaviss/nim-sys/blob/master/tests/ioqueue/asyncio.nim
[19:55:28] <FromDiscord> <xflywind> (edit) "provides" => "will provide"
[20:01:26] <FromDiscord> <willyboar> In reply to @dom96 "kinda wishing httpx was": ugly naming detected..
[20:09:09] <FromDiscord> <Yardanico> ok I made it work without a header
[20:09:18] <FromDiscord> <Yardanico> but with ugly codegenDecl :P i guess I can hide them with pragmas though
[20:11:06] <NimEventer> New post on r/nim by smazga: Proper way to do an async timeout, see https://reddit.com/r/nim/comments/qqyeky/proper_way_to_do_an_async_timeout/
[20:15:40] <FromDiscord> <Daniel M. Jaén> What is the correct way to use inputs?
[20:18:26] <FromDiscord> <dom96> In reply to @pietroppeter "from devroom submission page": just so that this doesn't get lost, you wanna create a thread on the forum? 🙂
[20:19:56] <FromDiscord> <Yardanico> @dom96 i made it so that the header is not needed but because of that I have to do https://github.com/Yardanico/wasm4nim/blob/master/examples/hello.nim#L14
[20:20:13] <FromDiscord> <Yardanico> the thing is - I can't hide that in a module since you can't export custom pragmas from modules
[20:21:06] <FromDiscord> <dom96> Could you use a macro as a workaround? i.e. a macro that just adds those pragmas to a proc (which can be used as a pragma)
[20:21:06] <FromDiscord> <Yardanico> i guess it's okay anyway :)
[20:21:10] <FromDiscord> <Yardanico> In reply to @dom96 "Could you use a": i guess
[20:24:44] <NimEventer> New Nimble package! textformats - Easy specification of text formats for structured data, see https://github.com/ggonnella/textformats
[20:27:13] <FromDiscord> <Yardanico> sent a code paste, see https://play.nim-lang.org/#ix=3EBZ
[20:28:46] <FromDiscord> <Yardanico> pushed to the repo
[20:29:43] <FromDiscord> <Recruit_main707> isnt there a pragma pragma for this kind of stuff?
[20:30:10] <FromDiscord> <Yardanico> In reply to @Recruit_main707 "isnt there a pragma": you can't export it
[20:30:19] <FromDiscord> <Yardanico> so if you define it in a module and import that module, you won't be able to use it
[20:40:54] *** Joins: riceman (~barley@24.148.81.91)
[20:45:08] *** Joins: rockcavera (~rc@192.12.112.105)
[20:45:08] *** Quits: rockcavera (~rc@192.12.112.105) (Changing host)
[20:45:08] *** Joins: rockcavera (~rc@user/rockcavera)
[20:50:58] <FromDiscord> <Yardanico> seems like i can make it 100% identical to the C wasm output if I make the array as  `const`  and then `cast[ptr uint8](unsafeAddr smiley)`
[20:51:14] <FromDiscord> <Yardanico> but I guess I'll keep it with `var` and `addr smiley[0]` for now since it's only a 4 bytes difference :)
[20:52:22] <FromDiscord> <hmmm> in my days 4 bytes would have made a difference between eating or starving  🧐
[20:52:29] <FromDiscord> <Recruit_main707> Lmao
[20:53:51] <FromDiscord> <Yardanico> 4 bytes difference is because when the array is `const` the compiler can put all strings and the array itself into a single contiguous block https://media.discordapp.net/attachments/371759389889003532/908044294210854942/unknown.png
[20:54:48] <FromDiscord> <Yardanico> but with `var` it stores array data in a separate block https://media.discordapp.net/attachments/371759389889003532/908044536712949790/unknown.png
[20:56:53] <FromDiscord> <Yardanico> i mean size is quite important for wasm4 - they impose strict limits - 64KB max cartridge size (wasm file), 64KB RAM
[20:56:59] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[20:57:03] <FromDiscord> <Yardanico> and 1024 disk storage (for saves and stuff)
[20:57:08] <FromDiscord> <Yardanico> (edit) "and 1024 ... disk" 03added "bytes of"
[20:58:08] <FromDiscord> <Yardanico> and yes ram allocation works just fine with arc and -d:useMalloc
[20:58:19] *** Joins: rockcavera (~rc@192.12.114.209)
[20:58:19] *** Quits: rockcavera (~rc@192.12.114.209) (Changing host)
[20:58:19] *** Joins: rockcavera (~rc@user/rockcavera)
[21:01:38] <FromDiscord> <dom96> now I'm really tempted to get webasmio running for this example
[21:05:22] <NimEventer> New post on r/nim by floscr: Reading continuously from stdin?, see https://reddit.com/r/nim/comments/qqzllc/reading_continuously_from_stdin/
[21:13:47] <FromDiscord> <Daniel M. Jaén> What is the default port of httpbeast?
[21:14:21] <FromDiscord> <Yardanico> In reply to @Daniel M. Jaén "What is the default": httpbeast' default port is 8080
[21:14:26] <FromDiscord> <Yardanico> jester is 5000
[21:14:29] <FromDiscord> <Daniel M. Jaén> In reply to @Yardanico "httpbeast' default port is": ok, thx
[21:55:39] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Quit: The Lounge - https://thelounge.chat)
[21:56:29] <FromDiscord> <Schelz> what is not working pls help:  ↵var t: Thread[void]↵t.createThread(main) https://media.discordapp.net/attachments/371759389889003532/908060056610811955/unknown.png
[21:58:05] *** Joins: neurocyte0132889 (~neurocyte@94.46.71.199)
[21:58:05] *** Quits: neurocyte0132889 (~neurocyte@94.46.71.199) (Changing host)
[21:58:05] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[21:58:41] <FromDiscord> <IsaacPaul> sent a code paste, see https://play.nim-lang.org/#ix=3ECn
[22:00:08] <FromDiscord> <IsaacPaul> Granted you need to compile with `--threads:on`
[22:01:50] <FromDiscord> <dom96> iirc you cannot use `void`, it's a quirk of how `Thread` is implemented
[22:02:20] <FromDiscord> <Schelz> --threads:on solved the problem thx @IsaacPaul
[22:02:22] <FromDiscord> <Yardanico> In reply to @dom96 "iirc you cannot use": you can though
[22:02:23] <FromDiscord> <Yardanico> :P
[22:05:58] *** Joins: federico3_ (~quassel@debian/federico)
[22:06:33] *** Joins: PMunch (~PMunch@c01F28BC3.dhcp.as2116.net)
[22:08:49] <FromDiscord> <zannzen> hello, very new to nim but: is there a proper way of reading using a `FileHandle` type? ↵↵Was trying to just do the basic `inotify` example from the std library docs but `read` doesn't exist apparently and all the functions in `io` seem to work for `File`. I tried converting it using `open(File, FileHandle)` but it didn't seem to actually get inotify events properly
[22:14:58] <PMunch> What kind of file handle are you trying to read from
[22:15:15] <FromDiscord> <zannzen> the `inotify` file descriptor
[22:15:30] <PMunch> And what do you expect to read from it?
[22:15:43] *** Quits: riceman (~barley@24.148.81.91) (Read error: Connection reset by peer)
[22:16:10] *** Joins: riceman (~barley@24.148.81.91)
[22:16:38] <PMunch> If you want to get events you should probably use inotify_events from the same module
[22:16:50] *** Quits: riceman (~barley@24.148.81.91) (Read error: Connection reset by peer)
[22:17:59] <FromDiscord> <zannzen> sent a code paste, see https://play.nim-lang.org/#ix=3ECq
[22:18:16] <FromDiscord> <zannzen> where `fd` is the inotify file descriptor
[22:18:30] <FromDiscord> <zannzen> but this fails to compile
[22:18:36] <FromDiscord> <zannzen> as `read` doesn't exist
[22:19:11] <PMunch> Ah, you need to import posix
[22:19:28] <PMunch> Which is where the read procedure used there is defined
[22:21:18] <FromDiscord> <zannzen> that did it, thanks! - in general for non-file `fd`s is that how I should handle this behavior? or is there a nim-ism for similar activities (e.g. epoll)?
[22:23:33] <PMunch> Pretty much
[22:23:43] <PMunch> Or at least that's how I tend to do it
[22:24:14] <FromDiscord> <zannzen> cool, easy enough. appreciate the help
[22:26:01] *** Joins: riceman (~riceman@24.148.81.91)
[22:26:01] *** Quits: riceman (~riceman@24.148.81.91) (Client Quit)
[22:26:10] <PMunch> Happy to be of assistance
[22:26:17] *** Joins: riceman (~riceman@24.148.81.91)
[22:26:21] *** Quits: riceman (~riceman@24.148.81.91) (Client Quit)
[22:27:15] *** Joins: riceman (~riceman@24.148.81.91)
[22:27:52] *** Quits: riceman (~riceman@24.148.81.91) (Client Quit)
[22:28:37] *** Joins: riceman (~riceman@24.148.81.91)
[22:28:39] *** riceman is now known as riceman_
[22:28:42] *** Quits: riceman_ (~riceman@24.148.81.91) (Client Quit)
[22:28:55] *** Joins: riceman_ (~riceman@24.148.81.91)
[22:29:45] *** Quits: riceman_ (~riceman@24.148.81.91) (Client Quit)
[22:31:01] *** Joins: riceman (~barley@24.148.81.91)
[22:31:57] *** Quits: riceman (~barley@24.148.81.91) (Remote host closed the connection)
[22:42:40] *** Joins: riceman_ (~riceman_@24.148.81.91)
[22:44:14] *** Quits: Gentoolman (~Gen2@188.243.183.243) (Quit: WeeChat 3.3)
[22:50:02] *** Quits: PMunch (~PMunch@c01F28BC3.dhcp.as2116.net) (Quit: leaving)
[22:56:00] <FromDiscord> <sOkam!> @Yardanico @enthus1ast @PMunch thx for the answers 🙂↵Was just curious if its possible, since it tends to fit my syntax style to have short words (1-2 letters) for very frequently used things
[22:56:29] <FromDiscord> <sOkam!> Might not be too worth it to do it manually, from what you guys say
[23:08:28] *** Joins: riceman_63 (~riceman_@24.148.81.91)
[23:08:45] *** Quits: riceman_ (~riceman_@24.148.81.91) (Quit: Client closed)
[23:12:01] *** Quits: riceman_63 (~riceman_@24.148.81.91) (Client Quit)
[23:12:15] *** Joins: riceman_ (~riceman_@24.148.81.91)
[23:24:46] <FromDiscord> <dom96> In reply to @zannzen "that did it, thanks!": For epoll/kqueue we have the selectors module that abstracts over these.
[23:25:05] <FromDiscord> <enthus1ast> @sOkam!\: i think its not worth to shorten proc or func just so save a few keystrokes (maybe you editor can help here). However Nim has a lot of opportunity to save keystrokes, just skim through the nice stdlib, it already can do alot cool stuff, then the even bigger keystroke saving comes from template, macros, custom pragmas, which can make nim code very dense, elegant and efficient to type.
