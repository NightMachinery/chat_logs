[00:00:09] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 268 seconds)
[00:00:34] *** Quits: rcernin_ (~rcernin@124.190.139.235) (Ping timeout: 260 seconds)
[00:02:54] *** Joins: kj (~kj@beta.aerisnetwork.net)
[00:04:03] <emanuele6> yeah, that would also handle [[ $REPLY == "${COMP_WORDS[COMP_COWRD]}"* ]] stuff automatically
[00:05:05] *** Joins: drd (~drd@93-42-69-115.ip85.fastwebnet.it)
[00:06:16] *** Quits: kj- (~kj@69.70.169.78) (Ping timeout: 256 seconds)
[00:06:38] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Remote host closed the connection)
[00:12:30] *** Quits: bud (~bud@user/bud) (Ping timeout: 256 seconds)
[00:13:01] <emanuele6> i also realised that   ${COMP_WORDS[COMP_COWRD]}   could just be $2
[00:15:54] *** Quits: l4yer (~l4yer@195.181.170.210) (Ping timeout: 256 seconds)
[00:21:40] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:b9c7:ff04:a0ba:4d3a)
[00:22:26] *** Joins: pycurious (~Adium@user/pycurious)
[00:25:01] *** Joins: bud (~bud@user/bud)
[00:25:32] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:b9c7:ff04:a0ba:4d3a) (Client Quit)
[00:28:34] *** Quits: guesswhat (~guesswhat@ip-89-176-154-20.net.upcbroadband.cz) (Quit: Client closed)
[00:31:36] *** Quits: mei (~mei@user/mei) (Ping timeout: 268 seconds)
[00:34:35] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 264 seconds)
[00:34:42] *** Joins: l4yer (~l4yer@195.181.170.210)
[00:37:54] *** Quits: voices- (~voices_@84.238.197.28) (Remote host closed the connection)
[00:40:46] *** Joins: n4dir (~user@i577BC8EF.versanet.de)
[00:45:34] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[00:49:22] <knstn> What does that script do in simple words?
[00:51:23] <knstn> Completion of hostnames for ssh? What a real world example needs that?
[00:51:31] *** Joins: lavaball (felix@31.204.155.215)
[00:53:16] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: see you tomorrow)
[00:53:42] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:a1a7:6c92:fea:8d8c) (Read error: Connection reset by peer)
[00:55:17] <wiscii> PRE-EMPTIVE SUGGESTIOZ ..
[00:55:46] <wiscii> pre-emptive suggestions
[00:56:59] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:58:26] *** Quits: l4yer (~l4yer@195.181.170.210) (Ping timeout: 260 seconds)
[01:00:47] *** Joins: rgrinberg (~textual@201.192.183.100)
[01:01:33] *** Joins: l4yer (~l4yer@195.181.170.210)
[01:04:31] *** Quits: nitro_ (~nitro_@c-73-165-183-88.hsd1.pa.comcast.net) (Remote host closed the connection)
[01:04:38] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 256 seconds)
[01:04:50] *** Joins: nitro_ (~nitro_@c-73-165-183-88.hsd1.pa.comcast.net)
[01:06:16] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:59d7:6ac:cac3:2528)
[01:06:25] *** Joins: volgrim (~Volgrim@156-155-224-214.ip.internet.co.za)
[01:06:27] *** Joins: voices- (~voices_@84.238.197.28)
[01:09:07] *** Joins: rcernin (~rcernin@124.190.139.235)
[01:11:22] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:59d7:6ac:cac3:2528) (Read error: Connection reset by peer)
[01:13:26] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[01:13:44] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:8807:7d5b:8682:a1cb)
[01:14:24] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[01:14:29] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:8807:7d5b:8682:a1cb) (Read error: Connection reset by peer)
[01:14:50] *** Joins: Caterpillar2 (~caterpill@user/caterpillar)
[01:17:15] <Caterpillar2> I am doing this exercize https://exercism.org/tracks/bash/exercises/two-fer/      and I created the following script   https://paste.centos.org/view/c078159f          but the website says it failed 5 tests. The first one is called   "no name given" and says  https://paste.centos.org/view/164fa11f             but I really don't understand what it means...
[01:18:32] *** Quits: roadie (~user@2a02:8108:ec0:1427:90b6:f063:786d:943c) (Ping timeout: 240 seconds)
[01:18:49] <emanuele6> -- output differs --
[01:18:51] <emanuele6> expected : One for you, one for me.
[01:18:53] <emanuele6> actual   : One for you, one for me
[01:18:55] <emanuele6> i wonder
[01:19:24] <Caterpillar2> which are the same
[01:19:29] <Caterpillar2> ah the dot
[01:19:39] <osse> and the o perhaps
[01:19:46] <Caterpillar2> lol the heck it was the dot
[01:19:47] <osse> oh, nvm me lol
[01:20:27] <emanuele6> the tester said "output differs" and the output actually differed :o
[01:20:37] <emanuele6> Caterpillar2: anyway, quote your check
[01:20:45] <emanuele6> that code is broken
[01:21:19] <emanuele6> obviously the online teaching platform doesn't actually test the code properly
[01:21:59] <greycat> need exercises which break in exciting ways when code isn't quoted correctly, has code injection vulnerabilities, etc.
[01:22:15] <emanuele6> # set -- 'emanuele'; if [ $1 ]; then echo "One for $1, one for me"; else echo "One for you, one for me"; fi
[01:22:16] <shbot> emanuele6: One for emanuele, one for me
[01:22:29] <emanuele6> # set -- 'richard matthew'; if [ $1 ]; then echo "One for $1, one for me"; else echo "One for you, one for me"; fi
[01:22:30] <shbot> emanuele6: bash: [: richard: unary operator expected
[01:22:30] <shbot> emanuele6: One for you, one for me
[01:22:45] <emanuele6> # set -- 'richard matthew'; if [ "$1" ]; then echo "One for $1, one for me"; else echo "One for you, one for me"; fi
[01:22:46] <shbot> emanuele6: One for richard matthew, one for me
[01:22:54] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[01:23:10] *** Quits: martinus__ (~martin@95.31.201.77.rev.sfr.net) (Ping timeout: 260 seconds)
[01:23:59] <emanuele6> or just use [[
[01:24:06] <emanuele6> # set -- 'richard matthew'; if [[ $1 ]]; then echo "One for $1, one for me"; else echo "One for you, one for me"; fi
[01:24:07] <shbot> emanuele6: One for richard matthew, one for me
[01:24:11] <emanuele6> then quotes don't matter
[01:25:03] <Caterpillar2> using if [[ $1 ]]   let me complete the exercize with all tests passed
[01:25:18] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:1c92:afe9:d824:4e11)
[01:25:32] <emanuele6> oh, so it actually tests for it, that is good.
[01:26:13] <emanuele6> !quote > Caterpillar2
[01:26:14] <greybot> Caterpillar2: https://mywiki.wooledge.org/Quotes
[01:26:46] <emanuele6> !faq 31 > also this
[01:26:46] <greybot> also this: https://mywiki.wooledge.org/BashFAQ/031 -- What is the difference between test, [ and [[ ?
[01:27:20] *** Joins: w0ng (~w0ng@103.1.212.92)
[01:28:26] <Caterpillar2> mmh also if [ "$1" ]  works
[01:28:37] <emanuele6> yes, but [ $1 ] does not
[01:29:03] <emanuele6> [ "$1" ] is fine, but [[ is easier to use and more powerful than [
[01:29:20] *** Quits: pigweed (~pigweed@97.119.246.99) (Quit: Leaving)
[01:29:28] <Caterpillar2> emanuele6: how it's called [[  ? So I can go to read something about
[01:29:47] <greycat> it doesn't have another name
[01:29:58] <emanuele6> you can read faq31 for starters
[01:30:02] <Caterpillar2> https://mywiki.wooledge.org/BashFAQ/031   ah ok
[01:30:11] *** Quits: kj (~kj@beta.aerisnetwork.net) (Ping timeout: 268 seconds)
[01:30:29] <wiscii> sometimes, man sh is a decent start
[01:31:09] <wiscii> then compare man bash
[01:31:31] *** Quits: Inline (~Inline@2a02:908:1252:7a80:6adf:f25e:1e5f:74e1) (Ping timeout: 250 seconds)
[01:32:33] <emanuele6> `man sh' will surely not tell you anything about [[
[01:32:43] *** Quits: richardm75 (~richardm7@2600:8801:c50a:9f00:cca5:852a:6d14:e9f4) (Quit: Leaving)
[01:32:54] <larryv> assuming they're even different man pages
[01:33:07] *** Joins: nvmd (~nvmd@user/nvmd)
[01:33:20] <wiscii> of course, the point being the difference and man sh is a starter
[01:34:02] <wiscii> haven't seen a man sh give me bash(x) yet
[01:34:21] <larryv> mine does
[01:34:34] <wiscii> probably will one day
[01:34:37] <wiscii> lol
[01:35:09] *** Quits: n4dir (~user@i577BC8EF.versanet.de) (Remote host closed the connection)
[01:36:05] <Caterpillar2> wow I have never knew before about /usr/bin/[
[01:36:49] <emanuele6> bash does not use /bin/test and /bin/[ since it has builtin versions of them, but they do exist
[01:37:04] *** particleflux_ is now known as particleflux
[01:38:30] <Caterpillar2> emanuele6: interesting
[01:39:54] <emanuele6> # type -a [
[01:39:55] <shbot> emanuele6: [ is a shell builtin
[01:39:55] <shbot> emanuele6: [ is /bin/[
[01:40:00] <emanuele6> # type -a test
[01:40:01] <shbot> emanuele6: test is a shell builtin
[01:40:01] <shbot> emanuele6: test is /bin/test
[01:41:52] *** Quits: drd (~drd@93-42-69-115.ip85.fastwebnet.it) (Ping timeout: 265 seconds)
[01:41:55] <geirha> macos even has /usr/bin/cd and /usr/bin/read. They're useless, but they're there. At least [ and test are useful as external commands
[01:42:30] <emanuele6> hahaha. i did not know that
[01:42:40] *** Quits: mags (~mags@097-090-237-145.res.spectrum.com) (Ping timeout: 265 seconds)
[01:42:42] <Caterpillar2> geirha: also Fedora has  /usr/bin/cd and /usr/bin/read
[01:43:01] *** Quits: Nact (~l@2a02:2788:11c4:6e6:8145:8e91:d047:8ed0) (Remote host closed the connection)
[01:43:05] <emanuele6> huh?
[01:43:13] *** Quits: YaoNai (~YaoNai@user/yaonai) (Quit: leaving)
[01:43:13] *** Joins: n4dir (~user@i577BC8EF.versanet.de)
[01:43:29] <geirha> it's extra fun combined with case-insensitive filesystem; when you run CD because caps lock was on, you end up running /usr/bin/cd, so it works ... but doesn't change your dir
[01:43:46] *** Joins: Nact (~l@2a02:2788:11c4:6e6:8145:8e91:d047:8ed0)
[01:44:02] *** Joins: mags (~mags@097-090-237-145.res.spectrum.com)
[01:44:07] <wiscii> # CD /; echo $?
[01:44:08] <shbot> wiscii: bash: CD: command not found
[01:44:08] <shbot> wiscii: 127
[01:44:08] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[01:44:28] *** Joins: alzgh (~alzgh@user/alzgh)
[01:44:38] <geirha> ~$ CD / && printf 'success!\n'
[01:44:40] <geirha> success!
[01:44:42] <geirha> ~$
[01:44:54] <wiscii> nice
[01:45:13] *** Joins: roadie (~user@2a02:8108:ec0:1427:90b6:f063:786d:943c)
[01:45:43] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[01:45:58] <geirha> tail -n+1 /usr/bin/{cd,read}  ->  http://ix.io/3Fos
[01:48:02] <wiscii> # CD / && printf "YAHOO!\n"
[01:48:03] <shbot> wiscii: bash: CD: command not found
[01:48:13] <emanuele6> hahha
[01:48:20] <wiscii> ;)
[01:48:42] *** Quits: thiras (~thiras@user/thiras) (Read error: Connection reset by peer)
[01:49:00] <emanuele6> that is so funny
[01:49:37] <hwrd> is there a way to execute a curl, check if it succeeded, and assign the response to a variable?
[01:49:55] *** Joins: Neo517 (~Neo17@node-1w7jr9ydiugdd7dby4bkj3pp4.ipv6.telus.net)
[01:50:11] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 264 seconds)
[01:50:13] <hwrd> I can't do response=$(curl ...) and check $? since that will check the success of the variable assignment, right?
[01:50:17] <emanuele6> if ! link=$(< "$input_file" curl -sf -F'file=@-' http://0x0.st); then
[01:50:25] <emanuele6> use -f
[01:50:28] <Neo517> Hi, I am trying to do an action if a file exists. The script should be FILE=file.txt while ! [-f FILE] ;
[01:51:26] <larryv> hwrd: that does NOT check the success of the variable assignment
[01:51:58] <emanuele6> that checks whether the curl command failed or not
[01:51:59] *** Quits: roadie (~user@2a02:8108:ec0:1427:90b6:f063:786d:943c) (Ping timeout: 264 seconds)
[01:52:14] <emanuele6> but unless you use -f, curl won't fail for a 404 response
[01:53:37] *** Joins: dre (~dre@2001:8003:c932:c301:7b6:ec18:50ab:337c)
[01:53:56] <hwrd> is it just for 404?
[01:54:07] <emanuele6> you can read the curl manual
[01:56:18] <hwrd> thanks
[01:56:41] <emanuele6> if you search for '    22 ', you should find it
[01:56:57] <larryv> % find /usr/bin -samefile /usr/bin/cd | tr '\n' ' '
[01:57:15] <larryv>  /usr/bin/umask /usr/bin/unalias /usr/bin/alias /usr/bin/wait /usr/bin/hash /usr/bin/fc /usr/bin/read /usr/bin/type /usr/bin/getopts /usr/bin/bg /usr/bin/fg /usr/bin/cd /usr/bin/command /usr/bin/jobs /usr/bin/ulimit
[01:57:22] <larryv> nice
[01:58:57] <larryv> Neo517: that snippet sure looks like you're trying to do something while a file *doesn't* exist
[01:59:58] *** Quits: nvmd (~nvmd@user/nvmd) (Quit: Later, nerds.)
[02:00:17] *** Joins: nvmd (~nvmd@user/nvmd)
[02:00:35] *** Quits: wigums (~wigums@user/wigums) (Read error: Connection reset by peer)
[02:01:30] *** Quits: chandoo (~chandoo@pool-71-172-140-13.nwrknj.fios.verizon.net) (Quit: Leaving... Leaving... Left...)
[02:01:37] *** Quits: podeni (~podeni@188.27.129.177) (Ping timeout: 250 seconds)
[02:02:11] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[02:02:15] *** Quits: rcernin (~rcernin@124.190.139.235) (Ping timeout: 268 seconds)
[02:02:24] *** Joins: pj (~pj@ghettoforge/pj)
[02:09:08] <Caterpillar2> now I am doing https://exercism.org/tracks/bash/exercises/error-handling
[02:11:27] <Neo517> What is the difference between starting a script with #!/bin/sh -e and !/bin/sh -e ?
[02:11:39] <greycat> !tias
[02:11:40] <greybot> Try It And See
[02:11:55] <emanuele6> Caterpillar2: i think you must be logged in to read that
[02:12:05] <Caterpillar2> ah
[02:12:09] <wiscii> ^
[02:12:38] <wiscii> || :
[02:13:47] *** Joins: ormaaj2 (~ormaaj2@user/ormaaj)
[02:14:03] *** Joins: rcernin (~rcernin@124.190.139.235)
[02:14:04] *** Parts: ormaaj2 (~ormaaj2@user/ormaaj) ()
[02:14:22] *** Quits: thevishy (~thevishy@2405:201:f005:c007:c8c1:7d4c:8a1f:6354) (Quit: Client closed)
[02:15:26] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[02:17:02] *** Joins: kj (~kj@kj.aerisnetwork.net)
[02:17:33] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 276 seconds)
[02:18:01] *** Joins: roadie (~user@2a02:8108:ec0:1427:90b6:f063:786d:943c)
[02:18:29] <wiscii> # 1/bin/sh > Neo517
[02:18:29] <shbot> wiscii: bash: 1/bin/sh: No such file or directory
[02:18:44] <wiscii> # !/bin/sh > Neo517
[02:18:45] <shbot> wiscii: bash: !/bin/sh: No such file or directory
[02:19:34] <wiscii> # :; !/bin/sh > Neo517
[02:19:35] <shbot> wiscii: bash: !/bin/sh: No such file or directory
[02:19:52] <wiscii> #!:; !/bin/sh > Neo517
[02:20:00] <greycat> Neo517 ought to *try* it themselves on their own system and see what it does.
[02:20:31] <greycat> They'll learn more that way.
[02:20:38] *** Joins: John_Ivan (~John_Ivan@user/john-ivan/x-1515935)
[02:20:56] <wiscii> greycat: sure. sorry for excess noise
[02:21:21] *** Joins: wigums (~wigums@user/wigums)
[02:21:49] <Caterpillar2> is there in the FAQs the explanation of if the difference between    if [[ $1 ]]  (newline) then               and         if [[ $1 ]]; then           ? The first lacks of ;
[02:22:18] <phy1729> What difference?
[02:23:02] *** Quits: roadie (~user@2a02:8108:ec0:1427:90b6:f063:786d:943c) (Ping timeout: 240 seconds)
[02:23:17] *** Quits: arinov (~arinov@213.194.126.155) (Read error: Connection reset by peer)
[02:24:43] *** Quits: voices- (~voices_@84.238.197.28) (Remote host closed the connection)
[02:25:00] <larryv> !; > Neo517
[02:25:00] <greybot> Neo517: The ";" character is used to separate between commands. It does the (almost) exact same thing that <ENTER> does in a shell or a newline in a script.
[02:26:07] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Ping timeout: 250 seconds)
[02:26:13] <Caterpillar2> https://paste.centos.org/view/c6a5d9c8       and     https://paste.centos.org/view/268932dc         and       https://paste.centos.org/view/88d85ab4        (they all work)
[02:26:22] <wiscii> is greybot pure bash or can we shebang ?
[02:27:55] <emanuele6> greybot is a perl script
[02:27:58] *** Joins: voices- (~voices_@84.238.197.28)
[02:27:58] <emanuele6> !greybot
[02:27:59] <greybot> I'm a bot. I'm written in perl. My source, factoids, and stats are at http://wooledge.org/~greybot/ . See !help for a list of my commands. git mirror https://github.com/im14/greybot
[02:28:50] *** Joins: arinov (~arinov@5.24.160.250)
[02:29:07] <wiscii> t-e-r-ricky
[02:34:10] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 256 seconds)
[02:35:59] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[02:37:01] *** Joins: roadie (~user@2a02:8108:ec0:1427:90b6:f063:786d:943c)
[02:41:11] *** Quits: mags (~mags@097-090-237-145.res.spectrum.com) (Ping timeout: 264 seconds)
[02:41:48] <wiscii> # echo \0666
[02:41:48] <shbot> wiscii: 0666
[02:41:53] *** Quits: ekathva (~ekathva@88-114-118-220.elisa-laajakaista.fi) (Remote host closed the connection)
[02:41:58] <wiscii> # echo -e \0666
[02:41:59] <shbot> wiscii: 0666
[02:42:10] <emanuele6> !quotes > wiscii
[02:42:11] <greybot> wiscii: https://mywiki.wooledge.org/Quotes
[02:42:16] *** Joins: igemnace (~ian@user/igemnace)
[02:42:20] *** Quits: roadie (~user@2a02:8108:ec0:1427:90b6:f063:786d:943c) (Ping timeout: 268 seconds)
[02:42:36] *** Quits: chomwitt (~chomwitt@2a02:587:dc12:3f00:12c3:7bff:fe6d:d374) (Ping timeout: 265 seconds)
[02:42:40] *** Joins: mags (~mags@097-090-237-145.res.spectrum.com)
[02:42:43] *** Joins: suedoe (~suedoe@ip68-11-193-169.br.br.cox.net)
[02:42:59] *** Joins: roadie (~user@2a02:8108:ec0:1427:90b6:f063:786d:943c)
[02:42:59] *** Quits: suedoe (~suedoe@ip68-11-193-169.br.br.cox.net) (Client Quit)
[02:43:05] <wiscii> # echo -e '\0666'
[02:43:06] <shbot> wiscii: no output
[02:44:22] *** Quits: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk) (Quit: Leaving)
[02:44:45] <wiscii> # echo -e "\0666"
[02:44:45] <shbot> wiscii: no output
[02:45:07] <wiscii> # echo -e "\0079"
[02:45:08] <shbot> wiscii: 9
[02:45:16] <wiscii> # echo -e "\0077"
[02:45:16] <shbot> wiscii: ?
[02:45:18] *** Joins: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net)
[02:45:35] *** Quits: rgrinberg (~textual@201.192.183.100) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:45:36] <magyar_> hi, how can I use case/esac to compare script argument to a list?
[02:45:55] <larryv> !options > magyar_
[02:45:55] <greybot> magyar_: http://mywiki.wooledge.org/BashFAQ/035 -- How can I handle command-line arguments (options) to my script easily?
[02:46:01] <wiscii> # echo -e "\0065"
[02:46:02] <shbot> wiscii: 5
[02:46:21] <larryv> please stop playing with shbot in the channel
[02:47:29] <wiscii> sorry .. forgot PM
[02:48:00] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[02:48:23] *** Quits: roadie (~user@2a02:8108:ec0:1427:90b6:f063:786d:943c) (Ping timeout: 264 seconds)
[02:48:58] *** Joins: chomwitt (~chomwitt@2a02:587:dc12:3f00:12c3:7bff:fe6d:d374)
[02:49:30] <osse> there's also a local shell :P
[02:50:08] <wiscii> i want to mess with greybot
[02:50:16] <magyar_> larryv: I read that, in my case I only have one argument to the script or zero arguments and there is no options. If zero arguments then do A and if the argument is matching a list that I build withing a script then do B
[02:50:25] <osse> but how is it different
[02:50:27] <larryv> shbot != greybot
[02:50:42] <wiscii> why POSIX ?
[02:51:07] <wiscii> oh dang .. get the right bot :palm:face
[02:51:28] *** Joins: loganlee (~Thunderbi@user/loganlee)
[02:51:35] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[02:52:38] <larryv> magyar_: i don't see how that makes a real difference. the broad strokes are the same as in the FAQ. compare the arg against known values, act accordingly
[02:54:08] *** Quits: loganlee (~Thunderbi@user/loganlee) (Client Quit)
[02:54:20] <larryv> are you building the list of matches dynamically or something
[02:54:55] *** Joins: quazimodo (~quazimodo@n1-40-235-47.bla1.nsw.optusnet.com.au)
[02:55:17] *** Quits: chomwitt (~chomwitt@2a02:587:dc12:3f00:12c3:7bff:fe6d:d374) (Ping timeout: 268 seconds)
[02:57:15] <magyar_> larryv:  not sure, I have this working, but would like to learn how to put it in case statement if possible >> [[ $serverList =~ (^|http://en.wikipedia.org/wiki/Special:Search?go=Go&search=:space:]])$1($|[[:space:) ]] && echo 'yes'|| echo 'no'
[02:58:09] <magyar_> the paste didn't work >> https://bpa.st/ISPQ
[02:58:44] <magyar_> instead of echo I need to run a few commands
[02:59:07] *** Quits: bodiccea (~bodiccea@user/bodiccea) (Quit: Leaving)
[03:00:51] <emanuele6> i think $1 should be quoted whatever that is
[03:01:00] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[03:01:09] *** Joins: sinaowolabi_ (~SinaOwola@102.134.114.1)
[03:01:10] <emanuele6> also you probably want [[:blank:]]
[03:02:30] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Ping timeout: 256 seconds)
[03:02:32] *** Quits: nvmd (~nvmd@user/nvmd) (Quit: Later, nerds.)
[03:02:48] *** Joins: nvmd (~nvmd@user/nvmd)
[03:03:22] <larryv> what does $serverList look like?
[03:03:33] <magyar_> larryv: the list that I build is dynamic yes
[03:03:58] <emanuele6> also if that is supposed to be checking if 'word' is in 'word1 word word2', it is broken
[03:04:09] <magyar_> larryv: what ever the command to build the $serverList will pickup, could be one server could be 10 of them with different names
[03:04:37] <emanuele6> because if $1 (that should be quoted) is 'word1 word' it will say yes
[03:06:54] <emanuele6> it will also say yes for $1=.* if you don't quote $1, but as i said above, it is wrong either way
[03:07:08] *** Joins: bodiccea (~bodiccea@user/bodiccea)
[03:08:10] *** Joins: Betal (~Betal@user/betal)
[03:09:28] *** Quits: jcbjoe2021 (~joe@137.184.95.186) (Changing host)
[03:09:28] *** Joins: jcbjoe2021 (~joe@user/jcbjoe2021)
[03:11:21] *** Joins: rustyshackleford (uid236774@helmsley.irccloud.com)
[03:12:23] *** Quits: voices- (~voices_@84.238.197.28) (Ping timeout: 264 seconds)
[03:12:33] *** Joins: voices- (~voices_@84.238.197.28)
[03:15:02] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:15:22] *** Joins: geli (~gelignite@55d4c92e.access.ecotel.net)
[03:15:38] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[03:18:06] *** Quits: magla (~gelignite@55d4e1d7.access.ecotel.net) (Ping timeout: 268 seconds)
[03:18:43] *** Quits: sinaowolabi_ (~SinaOwola@102.134.114.1) (Ping timeout: 268 seconds)
[03:20:02] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:20:03] *** Joins: magla (~gelignite@55d46975.access.ecotel.net)
[03:20:38] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[03:21:03] *** Quits: voices- (~voices_@84.238.197.28) (Remote host closed the connection)
[03:21:48] *** Quits: geli (~gelignite@55d4c92e.access.ecotel.net) (Ping timeout: 268 seconds)
[03:21:59] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.3)
[03:22:00] *** Joins: kill (~killown@user/killown)
[03:22:20] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[03:24:05] *** Quits: edlou (uid413273@helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[03:26:11] *** Quits: tex (~super@user/dix) (Ping timeout: 264 seconds)
[03:26:15] *** Quits: timj (~timj@user/timj) (Quit: Leaving.)
[03:26:36] *** Joins: timj (~timj@user/timj)
[03:26:47] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Ping timeout: 264 seconds)
[03:28:38] *** Quits: dre (~dre@2001:8003:c932:c301:7b6:ec18:50ab:337c) (Remote host closed the connection)
[03:30:07] <magyar_> emanuele6: http://en.wikipedia.org/wiki/Special:Search?go=Go&search=:blank: doesn't seem to work
[03:30:19] <magyar_> emanuele6: \http://en.wikipedia.org/wiki/Special:Search?go=Go&search=:blank: doesn't seem to work
[03:30:33] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[03:31:40] *** Quits: timj (~timj@user/timj) (Ping timeout: 268 seconds)
[03:32:01] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[03:32:23] *** Joins: sinaowolabi_ (~SinaOwola@41.58.226.61)
[03:36:33] *** Quits: ionface (~ionface@user/ionface) (Remote host closed the connection)
[03:36:38] *** Joins: nuh^ (~nuh@68.101.63.101)
[03:36:44] *** Quits: nuh^ (~nuh@68.101.63.101) (Remote host closed the connection)
[03:37:28] *** Joins: Betal (~Betal@user/betal)
[03:38:26] *** Quits: Nact (~l@2a02:2788:11c4:6e6:8145:8e91:d047:8ed0) (Ping timeout: 245 seconds)
[03:42:05] *** Joins: akoana (~ah@user/akoana)
[03:43:22] <CarlFK> where do I find docs for [[ -nt as in:  if [[ ${img_name} -nt ${zip_name} ]];
[03:43:50] <wiscii> magyar_: google must be borken
[03:43:52] *** Quits: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net) (Ping timeout: 256 seconds)
[03:44:06] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Ping timeout: 260 seconds)
[03:44:14] <wiscii> !docs
[03:44:35] <wiscii> !bash
[03:44:36] *** Parts: Ghost_Mach (~ecrump@67-0-208-202.albq.qwest.net) (Leaving)
[03:44:36] <greybot> The Bourne-Again Shell. Read the channel topic or type /msg greybot links for lots of links.
[03:44:45] <geirha> help test
[03:44:58] <geirha> man bash
[03:45:03] *** Joins: rgrinberg (~textual@201.192.183.100)
[03:45:07] <phy1729> wiscii: google is often a bad source of information
[03:45:24] <phy1729> # help [[
[03:45:27] <shbot> phy1729: [[ ... ]]: [[ expression ]]
[03:45:27] <shbot> phy1729:     Execute conditional command.
[03:45:27] <shbot> phy1729: etc... ( http://ix.io/aRH )
[03:45:34] <emanuele6> # help test | grep '^[[:blank:]]*-nt'
[03:45:35] <shbot> emanuele6: no output
[03:45:44] <emanuele6> # help test | grep -- '-nt'
[03:45:45] <shbot> emanuele6:       FILE1 -nt FILE2  True if file1 is newer than file2 (according to
[03:46:06] <magyar_> wiscii: not sure why irc is converting the double square brackets into that en.wikipedia search link
[03:46:17] *** Joins: infidel (~ecrump@67-0-208-202.albq.qwest.net)
[03:46:40] <magyar_> maybe it's my kde irc client
[03:47:53] <magyar_> # http://en.wikipedia.org/wiki/Special:Search?go=Go&search=:blank:
[03:47:53] <shbot> magyar_: [1] 51
[03:47:53] <shbot> magyar_: bash: http://en.wikipedia.org/wiki/Special:Search?go=Go: No such file or directory
[03:48:15] *** Joins: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp)
[03:48:20] *** Joins: loganlee (~Thunderbi@user/loganlee)
[03:49:06] <CarlFK> it is the -nt bit I need help with
[03:49:08] <CarlFK> like what happens if one file is missing
[03:49:16] *** Joins: roadie (~user@2a02:8108:ec0:1427:90b6:f063:786d:943c)
[03:50:57] <emanuele6> CarlFK: read the manual, it says it
[03:51:18] <emanuele6> CarlFK:  PAGER='less +/-nt' man bash
[03:51:34] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Ping timeout: 260 seconds)
[03:52:41] <geirha> a missing file is considered older than an existing file; make style
[03:53:27] <emanuele6> if file1 exists and file2 does not exist, then it's true. if file1 doesn't exist, it's always false
[03:54:55] *** Quits: Caterpillar2 (~caterpill@user/caterpillar) (Quit: Konversation terminated!)
[03:55:18] *** Quits: jle (~jle@user/jle) (Ping timeout: 260 seconds)
[03:55:49] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[03:55:53] <CarlFK> ah that's under man bash, not test.  thanks.
[03:57:09] *** Joins: pycurious (~Adium@user/pycurious)
[03:57:24] *** Quits: pycurious (~Adium@user/pycurious) (Client Quit)
[03:58:36] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[03:58:36] *** Joins: dre (~dre@2001:8003:c932:c301:f4c:269a:f23f:f4fc)
[04:00:02] *** Quits: roadie (~user@2a02:8108:ec0:1427:90b6:f063:786d:943c) (Ping timeout: 240 seconds)
[04:01:26] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[04:01:35] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[04:02:23] *** Joins: jonthesnow (~xizhendu@36.112.188.169)
[04:02:48] *** Quits: dre (~dre@2001:8003:c932:c301:f4c:269a:f23f:f4fc) (Client Quit)
[04:02:52] *** Lord_of_Life_ is now known as Lord_of_Life
[04:03:11] *** Joins: dre (~dre@2001:8003:c932:c301:f4c:269a:f23f:f4fc)
[04:03:44] *** Quits: arinov (~arinov@5.24.160.250) (Ping timeout: 268 seconds)
[04:04:13] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[04:05:14] *** Quits: lovetruth (~lovetruth@188.27.142.20) (Quit: This computer has gone to sleep)
[04:05:44] *** Joins: GreyXor (~GreyXor@2a01:e0a:13e:a720:d468:9dbd:a19:c258)
[04:07:40] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 265 seconds)
[04:10:04] *** Quits: dre (~dre@2001:8003:c932:c301:f4c:269a:f23f:f4fc) (Quit: Leaving)
[04:10:23] *** Quits: magla (~gelignite@55d46975.access.ecotel.net) (Quit: Stay safe!)
[04:10:24] *** Joins: dre (~dre@2001:8003:c932:c301:f4c:269a:f23f:f4fc)
[04:11:31] *** Joins: Bhavuk (~BTaneja@2401:4900:1c16:2619:fc11:bb03:d43a:6b22)
[04:13:38] *** Joins: svenzhou (~svenzhou@240e:476:40:2d10:4181:6107:c535:6e15)
[04:13:54] *** Quits: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[04:18:12] *** Joins: pycurious (~Adium@user/pycurious)
[04:18:14] *** Quits: pycurious (~Adium@user/pycurious) (Client Quit)
[04:18:41] *** Joins: pycurious (~Adium@user/pycurious)
[04:18:59] *** Quits: pycurious (~Adium@user/pycurious) (Client Quit)
[04:21:10] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[04:21:16] *** Quits: svenzhou (~svenzhou@240e:476:40:2d10:4181:6107:c535:6e15) (Quit: Client closed)
[04:24:01] *** Quits: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net) (Quit: leaving)
[04:24:55] *** Quits: dre (~dre@2001:8003:c932:c301:f4c:269a:f23f:f4fc) (Quit: Leaving)
[04:25:07] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[04:25:14] *** Quits: John_Ivan (~John_Ivan@user/john-ivan/x-1515935) (Ping timeout: 256 seconds)
[04:25:19] *** Joins: dre (~dre@2001:8003:c932:c301:f4c:269a:f23f:f4fc)
[04:29:22] *** Quits: w4ld0 (w4ld0@gateway/vpn/protonvpn/w4ld0) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:30:49] *** Joins: roadie (~user@2a02:8108:ec0:1427:90b6:f063:786d:943c)
[04:31:29] *** Joins: gamore (~gamore@101.179.132.178)
[04:32:08] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[04:34:28] *** Joins: dsrt^ (~dsrt@68.101.63.101)
[04:35:47] *** Quits: roadie (~user@2a02:8108:ec0:1427:90b6:f063:786d:943c) (Ping timeout: 264 seconds)
[04:37:08] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Ping timeout: 256 seconds)
[04:37:39] *** Quits: rcernin (~rcernin@124.190.139.235) (Ping timeout: 268 seconds)
[04:40:59] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[04:42:38] *** Joins: odoood (~odoood@2601:c8:c003:a550::3)
[04:43:06] *** Quits: k-man (~jason@user/k-man) (Quit: WeeChat 3.3)
[04:43:07] *** Joins: Atque (~Atque@user/atque)
[04:43:45] *** Joins: rcernin (~rcernin@124.190.139.235)
[04:45:59] *** Quits: fabs (~fabs@2607:fb60:2501:2805:dea6:32ff:fed8:2af3) (Ping timeout: 264 seconds)
[04:47:47] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Ping timeout: 264 seconds)
[04:48:03] *** Quits: nvmd (~nvmd@user/nvmd) (Quit: Later, nerds.)
[04:48:17] *** Joins: k-man (~jason@user/k-man)
[04:50:10] *** Joins: Guest89 (~Guest89@2601:19b:800:e50:5578:824e:1ef0:e2b9)
[04:50:40] <superboot> How can I preserve leading spaces in a while read loop?
[04:50:43] *** Quits: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net) (Remote host closed the connection)
[04:50:54] <emanuele6> use REPLY or set IFS=''
[04:50:58] <emanuele6> !REPLY
[04:50:58] <greybot> REPLY is the default variable that read populates, when not supplied with one. The trimming of leading and trailing IFS whitespace does not occur, when used as such. See ''help read'' and http://wiki.bash-hackers.org/commands/builtin/read
[04:51:15] *** Joins: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net)
[04:51:26] <emanuele6> # printf '%s\n' '   a   ' | while read -r line; do declare -p line; done
[04:51:27] <shbot> emanuele6: declare -- line="a"
[04:51:33] <emanuele6> # printf '%s\n' '   a   ' | while IFS= read -r line; do declare -p line; done
[04:51:34] <shbot> emanuele6: declare -- line="   a   "
[04:51:46] <emanuele6> or you can use REPLY (nb: it's bash only)
[04:51:54] <emanuele6> # printf '%s\n' '   a   ' | while read -r; do declare -p REPLY; done
[04:51:54] <shbot> emanuele6: declare -- REPLY="   a   "
[04:54:07] <superboot> emanuele6: Thanks! That's perfect!
[04:57:19] *** Joins: totenkoph (~scythe@user/totenkoph)
[04:57:56] *** Joins: rtypo (~alex@user/rtypo)
[04:58:17] *** Quits: GreyXor (~GreyXor@2a01:e0a:13e:a720:d468:9dbd:a19:c258) (Quit: Client closed)
[05:02:55] *** Quits: Virgilio (virgilio@gateway/vpn/protonvpn/virgilio) (Remote host closed the connection)
[05:03:16] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[05:03:56] *** Joins: pycurious (~Adium@user/pycurious)
[05:04:35] *** Quits: zro (~zro@user/zro) (Ping timeout: 264 seconds)
[05:05:11] *** Joins: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net)
[05:05:15] *** Quits: Guest89 (~Guest89@2601:19b:800:e50:5578:824e:1ef0:e2b9) (Quit: Client closed)
[05:09:29] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Ping timeout: 250 seconds)
[05:16:36] *** Quits: knstn (~knstn@ppp-94-66-57-225.home.otenet.gr) (Quit: leaving)
[05:18:23] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 264 seconds)
[05:25:54] *** Quits: torresjrjr (~torresjrj@user/torresjrjr) (Remote host closed the connection)
[05:26:16] *** Joins: torresjrjr (~torresjrj@user/torresjrjr)
[05:28:30] *** Joins: drewlander_ (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[05:29:11] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Ping timeout: 264 seconds)
[05:29:34] *** Quits: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053) (Quit: WeeChat 3.3)
[05:30:22] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:31:33] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[05:33:22] *** Joins: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053)
[05:41:11] *** Quits: odoood (~odoood@2601:c8:c003:a550::3) (Ping timeout: 264 seconds)
[05:42:29] *** Joins: roadie (~user@2a02:8108:ec0:1427:90b6:f063:786d:943c)
[05:43:06] *** Quits: sinaowolabi_ (~SinaOwola@41.58.226.61) (Ping timeout: 260 seconds)
[05:43:27] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Remote host closed the connection)
[05:43:49] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[05:44:22] *** Quits: israfel (~israfel@gateway/vpn/pia/israfel) (Quit: Leaving)
[05:46:04] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[05:48:52] *** Quits: chronon (~chronon@user/chronon) (Ping timeout: 260 seconds)
[05:50:17] *** Joins: chronon (~chronon@user/chronon)
[05:53:25] *** Quits: drewlander_ (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[05:53:57] *** Quits: rgrinberg (~textual@201.192.183.100) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:54:07] *** Quits: roadie (~user@2a02:8108:ec0:1427:90b6:f063:786d:943c) (Ping timeout: 268 seconds)
[06:00:19] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Read error: Connection reset by peer)
[06:01:21] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[06:01:38] *** Joins: pycurious (~Adium@user/pycurious)
[06:05:26] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[06:05:44] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[06:07:17] *** Quits: SpiderPig (~matt@047-132-233-190.res.spectrum.com) (Quit: leaving)
[06:08:26] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[06:09:45] <ormaaj> doesn't env have an option to set argv[0]? otherwise it's env -opts -- x=y ... bash -c 'exec -a ...'
[06:16:44] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[06:19:38] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Client Quit)
[06:21:55] <phy1729> env just has foo=bar and -i
[06:22:05] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[06:22:09] <ormaaj> at least it doesn't fork & wait
[06:22:50] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[06:23:06] *** Quits: rcernin (~rcernin@124.190.139.235) (Ping timeout: 268 seconds)
[06:23:24] <ormaaj> gnu has a bunch of extras, of course.
[06:23:42] <phy1729> GNU has extras for ed
[06:26:20] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Client Quit)
[06:26:52] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 265 seconds)
[06:26:56] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[06:27:35] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Quit: PROTO-IRC v0.73a (C) 1988 NetSoft - Built on 11-13-1988 on AT&T System V)
[06:28:03] *** Joins: n4dir_ (~user@mue-88-130-56-082.dsl.tropolys.de)
[06:29:51] *** Quits: n4dir (~user@i577BC8EF.versanet.de) (Killed (NickServ (GHOST command used by n4dir_!~user@mue-88-130-56-082.dsl.tropolys.de)))
[06:30:27] *** Quits: n4dir_ (~user@mue-88-130-56-082.dsl.tropolys.de) (Client Quit)
[06:30:32] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:30:48] *** Joins: n4dir (~user@mue-88-130-56-082.dsl.tropolys.de)
[06:31:13] *** Joins: edlou (uid413273@helmsley.irccloud.com)
[06:33:30] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[06:35:24] *** Joins: rgrinberg (~textual@201.192.183.100)
[06:36:38] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[06:39:55] *** Quits: nock (~noctarium@2804:14c:8786:81c3:a10c:e0ab:fd30:1397) (Ping timeout: 265 seconds)
[06:41:19] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[06:45:03] *** Joins: ferdna (~ferdna@user/ferdna)
[06:45:23] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[06:45:55] *** Joins: pycurious (~Adium@user/pycurious)
[06:46:47] *** Joins: zro (~zro@user/zro)
[06:52:34] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[06:57:20] *** Joins: Viking667 (viking@203.184.11.139)
[06:58:57] <Viking667> 'llo all. I'm having a little trouble parsing the output of steamcmd to retrieve the title. I was using the colon as a field separator, but some titles have that in, so it's messing with the script I used IFS=":" in. Could someone suggest some alternatives?
[06:59:42] <Viking667> Steamcmd produces (eventually), lines that look almost exactly like this:  AppID 100 : "Counter-Strike: Condition Zero Deleted Scenes" : /home/user/path/to/steam/etc/etc
[06:59:46] *** Joins: pycurious (~Adium@user/pycurious)
[07:00:32] <Viking667> The title ("Counter-Strike: ...") changes for each AppID of course, and most don't have a colon in, but the occasional one does.
[07:00:37] <greycat> How does it handle titles with double quotes?
[07:01:09] <Viking667> I've no idea, I haven't even got that far. I'm just working through the first problem I identified that I can't currently fix.
[07:01:12] <greycat> Also, are there always two space-colon-space pairs, one before the title, and one after?
[07:01:38] <Viking667> hm... that's a point. I thought IFS was individual characters?
[07:01:49] <greycat> Do not try to use IFS for this.
[07:01:59] <Viking667> hm. okay.
[07:02:16] <Viking667> I would have possibly used awk, but I know that tool even less than I know some others.
[07:02:35] <greycat> title=${output% : *} title=${title#* : }   and so on
[07:02:49] <greycat> Stop using PIPED FILTERING.
[07:02:56] <greycat> Just do string manipulations.
[07:03:19] <Viking667> ??
[07:03:23] <greycat> title=${output% : *} title=${title#* : }   and so on
[07:03:41] <Viking667> I'll have to try that.
[07:03:48] <greycat> !faq 100
[07:03:49] <greybot> https://mywiki.wooledge.org/BashFAQ/100 -- How do I do string manipulations in bash?
[07:04:00] <Viking667> hm, not a recent faq then.
[07:04:11] <xx> is there some standard practice regarding what should be a script file placed in PATH, and what should be a function sourced from .bashrc?
[07:04:25] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 268 seconds)
[07:04:25] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[07:04:32] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[07:04:59] *** Joins: pycurious (~Adium@user/pycurious)
[07:05:30] <Viking667> xx: depends on how complicated the stuff in the script file is. If you're using more than can be used in about ... ooo... ten to twelve line functions, then a script file _may_ be better. Older and wiser heads here will know better, of course.
[07:06:10] *** Quits: dsrt^ (~dsrt@68.101.63.101) (Ping timeout: 256 seconds)
[07:06:16] <Viking667> One stupid script file I have vomits about 45 functions into my env each time I log on. Yay.
[07:06:52] <larryv> xx: not really.
[07:07:13] <larryv> obviously some use cases preclude one or the other
[07:07:48] <xx> right, I see that if I make it a function, then I need to take care to unset all the variables at the end or make them local
[07:07:57] <xx> but an executable script file needs none of that
[07:08:05] <greycat> Right, some thing *must* be functions because they operate within the shell's internal state (changing directory, etc.).
[07:08:16] *** Quits: volgrim (~Volgrim@156-155-224-214.ip.internet.co.za) (Remote host closed the connection)
[07:09:59] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 264 seconds)
[07:10:48] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:11:40] *** Joins: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net)
[07:12:10] <Viking667> greycat: I'm having a look at "Extracting parts of strings" in that page you linked above. Would that be useful, considering I start from the first double quote and finish at the last one? Or would your question about titles WITH double-quotes kick in here?
[07:14:35] <emanuele6> xx: if you write a bash function for interactive use, you also need to be cautious about the value of $IFS, nullglob, set-e, etc; especially if the function is run automatically for example by PROMPT_COMMAND
[07:14:52] *** Joins: mas (~mas@129.65.145.7)
[07:15:07] <mas> echo hello
[07:15:26] <emanuele6> once i had a prompt command that had something like `(( i = ... ))' and i noticed that when i turned on `set -e' the shell would exit automatically
[07:15:48] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:16:11] <emanuele6> you also need to take care of BASH_REMATCH, REPLY, MAPFILE, etc.
[07:16:49] <xx> right, I'll just make it a script file and put it in PATH, sounds safer than having it a function loaded by .bashrc
[07:16:54] <emanuele6> otherwise they might be overwritten by your function while you test things out in the shell which can be annoying
[07:17:58] <emanuele6> REPLY and MAPFILE are relatively easy to manage, but BASH_REMATCH is not. if you use [[ a =~ something ]] in a function, you must run it in a subshell
[07:18:11] <emanuele6> you can't make BASH_REMATCH local :(
[07:18:37] *** Quits: jos1 (~jos3@host-091-097-189-155.ewe-ip-backbone.de) (Ping timeout: 250 seconds)
[07:20:08] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:7197:d94:9d79:f9d8)
[07:22:38] *** Quits: mas (~mas@129.65.145.7) (Ping timeout: 256 seconds)
[07:23:07] *** Joins: pycurious (~Adium@user/pycurious)
[07:26:00] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:7197:d94:9d79:f9d8) (Ping timeout: 268 seconds)
[07:27:38] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 260 seconds)
[07:31:25] *** Joins: jos1 (~jos3@dyndsl-178-142-065-051.ewe-ip-backbone.de)
[07:33:56] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 256 seconds)
[07:35:42] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:36:37] <emanuele6> if you really want to go crazy, you should also take care of stuff like `set -eu; unset -v EPOCHREALTIME' or `alias case='echo hehe''
[07:37:38] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[07:38:05] *** Quits: mr_ab (~nobody@bnc.ab.hl9.net) (Quit: Upgrade.)
[07:38:11] *** Quits: zro (~zro@user/zro) (Ping timeout: 264 seconds)
[07:38:19] *** Joins: kdc (~kdc@196.211.197.159)
[07:40:02] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Client Quit)
[07:40:18] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:42:24] *** Joins: pycurious (~Adium@user/pycurious)
[07:43:12] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[07:44:09] *** Quits: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[07:44:30] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[07:44:57] *** Joins: mr_ab (~nobody@bnc.ab.hl9.net)
[07:49:09] *** Joins: vysn (~vysn@user/vysn)
[07:49:26] *** Quits: greycat (~greg@209.142.155.49) (Quit: Bye)
[07:49:46] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:50:10] *** Joins: roadie (~user@2a02:8108:ec0:1427:90b6:f063:786d:943c)
[07:54:42] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[07:58:29] *** Quits: iconoclasthero (~quassel@pool-68-238-241-198.phlapa.fios.verizon.net) (Ping timeout: 250 seconds)
[08:01:02] *** Quits: roadie (~user@2a02:8108:ec0:1427:90b6:f063:786d:943c) (Ping timeout: 240 seconds)
[08:04:24] *** Quits: rtypo (~alex@user/rtypo) (Read error: Connection reset by peer)
[08:05:25] *** Quits: xx (~xx@user/xx) (Ping timeout: 250 seconds)
[08:05:40] *** Quits: l4yer (~l4yer@195.181.170.210) (Ping timeout: 256 seconds)
[08:16:07] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[08:16:41] *** Joins: rcernin (~rcernin@124.190.139.235)
[08:16:53] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:18:47] *** Joins: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143)
[08:19:32] *** Joins: earnestly (~earnest@user/earnestly)
[08:19:35] *** Joins: l4yer (~l4yer@195.181.170.210)
[08:19:59] *** Quits: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143) (Read error: Connection reset by peer)
[08:20:12] *** Joins: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143)
[08:22:16] *** Parts: jirido (mistress@gateway02.insomnia247.nl) ()
[08:24:20] *** Quits: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143) (Client Quit)
[08:28:16] *** Joins: namkeles (~namkeles@101.179.132.178)
[08:29:34] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[08:29:48] *** Joins: mas (~mas@2600:6c52:7b00:77c9:4120:53ee:563e:39bc)
[08:30:13] *** Quits: mas (~mas@2600:6c52:7b00:77c9:4120:53ee:563e:39bc) (Client Quit)
[08:30:38] *** Joins: mas (~mas@2600:6c52:7b00:77c9:4120:53ee:563e:39bc)
[08:33:26] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 256 seconds)
[08:36:21] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[08:37:43] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[08:40:06] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[08:41:46] <Viking667> I'm having trouble with matches not ... matching. I'm trying to use this:   while read line; do Title="${line## : }" < file.txt    Title simply gets the whole line instead of having any bit taken off. I've tried one #, I've tried 2 #, I've tried ${line##*: }, but nothing has changed. What am I doing wrong?
[08:43:04] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[08:43:22] <Viking667> Basically, I'm aiming at removing this bit:  'AppID 100 : '  from this:   AppID 100 : "Counter-Strike: Deleted Scenes" : /home/viking/path/to/blah
[08:43:48] <emanuele6> !read-r
[08:43:48] <greybot> Always use read with the -r option, otherwise backslashes are special. http://wiki.bash-hackers.org/commands/builtin/read#read_without_-r
[08:44:00] <emanuele6> you should always use -r with read
[08:44:01] <emanuele6> anyhow
[08:44:07] <Viking667> There aren't any backslashes in the string
[08:44:16] <emanuele6> what if there are?
[08:44:34] <emanuele6> anyhow ${line## : } removes ' : ' from the start of $line
[08:44:59] <Viking667> There aren't any backslashes in the string. So, do I need ${line##*: } instead?
[08:45:05] <emanuele6> if line is   AppID 100 : "Counter-Strike:"   it will not remove anything
[08:45:34] <emanuele6> Viking667: that would remove up to the last ": "
[08:45:49] <Viking667> This is the line I'm trying to match:      AppID 100 : "Counter-Strike: Deleted Scenes" : /home/viking/path/to/blah
[08:46:29] <hwrd> is there a best practice for wanting to write a function (sourced from another file) that can error and exit when invoked from another file and also return a string value?
[08:47:01] <emanuele6> Viking667: and what do you want to extract?
[08:47:48] *** Quits: Viking667 (viking@203.184.11.139) (Remote host closed the connection)
[08:51:59] *** Quits: jonthesnow (~xizhendu@36.112.188.169) (Ping timeout: 264 seconds)
[08:53:54] <bud> hwrd: if it is an actual function in the file, just write it as you would if it was in the same file that sources it.
[08:55:00] <bud> i always put functions in individual files and source them.
[08:55:17] <hwrd> bud my problem is that if it errors, it doesn't cause the calling file to also exit... and any output seems to be muted if I call it in a subshell: `var=$(function_from_another_file "$arg1" "$arg2")`
[08:55:41] <bud> the function is exectuded in a subshell?
[08:55:58] <hwrd> yeah, so that I can capture the return value
[08:55:59] <bud> yeah
[08:56:19] <bud> https://0x0.st/-RU3.txt
[08:56:25] <bud> this is what i use.
[08:56:40] <bud> skip that last ERH() {...
[08:56:55] *** Joins: pycurious (~Adium@user/pycurious)
[08:57:11] <bud> put put the other stuff in your main file (or source it, i have it in ERR.sh).
[08:57:38] <bud> then use ERX "message" when you wanna exit
[08:57:39] <hwrd> I'm not fully following
[08:57:55] <hwrd> what's 98?
[08:58:52] <emanuele6> an arbitrary value
[08:59:03] *** a1 is now known as ekaj
[08:59:10] <hwrd> ah okay
[08:59:46] <hwrd> so what's the difference between what this sccript is doing and just calling `exit 1` in my subshell function?
[09:00:10] *** Quits: A|an (~Alan@173.216.51.200) (Quit: A|an)
[09:00:19] <bud> https://0x0.st/-RUY.sh
[09:00:47] <bud> if you do "justt exit 1". it will just exit the subshell
[09:01:07] <bud> in my example we trap the ERR signal, and test if it is 98.
[09:01:31] <bud> if it is it will keep doing exit 98, till it have terminated the script
[09:01:35] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 268 seconds)
[09:01:38] <hwrd> the trap happens in the subshell file?
[09:01:45] <hwrd> or in the calling file?
[09:01:56] <emanuele6> because of `set -E' the ERR trap is inherited by functions
[09:02:25] <emanuele6> but i don't think it is necessary to be honest
[09:02:53] <bud> the reason for '98' is that if you would execute a program in a script, say: `grep STUFF FILE`, and the command fails, it will do that with a exit code.
[09:03:16] <bud> 98 is very unlikely (but not guaranteed to clash with other exit codes).
[09:03:34] <emanuele6> `trap '[ "$?" -ne 98 ] || exit 98' ERR' checks if the exit code is 98 every time there is an error, if it is 98, it exits
[09:04:00] <emanuele6> a=$(exit 98) or `return 98' in a function would also make that trap exit
[09:04:10] <bud> emanuele6: i don't remember why i did the -E, but i remember i needed it.
[09:04:55] <bud> yeah, the ERX,ERM,ERR functions are not necessary, but i like to always use ERX so i don't have to remember 98, and always good to print a message.
[09:05:01] <emanuele6> perhaps to use ERX inside a function that is running inside a subshell
[09:05:06] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[09:05:35] *** Quits: mihaiadrian (~Thunderbi@82.76.223.244) (Quit: mihaiadrian)
[09:06:25] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[09:06:34] <emanuele6> no, not really
[09:06:49] <emanuele6> that would be a reason if ERX used `return 98' instead of `exit 98'
[09:07:05] <emanuele6> i don't see why you need `set -E' to be honest
[09:07:09] <hwrd> https://paste.sr.ht/~hwrd/b3f962db9f95827b9fcb20ec13c9386ca81f1aac so in this script, I would need to trap my `exit 1`?
[09:07:52] *** Quits: larryv (~larryv@zsh/patchmanager/larryv) (Quit: larryv)
[09:08:59] <bud> 98 is very unlikely (but not guaranteed to clash with other exit codes).
[09:09:12] <bud> 1 is extremely likely...
[09:09:23] <hwrd> I guess I'm still failing to understand where that `trap` helps, and why.
[09:09:53] *** Joins: roadie (~user@2a02:8108:ec0:1427:90b6:f063:786d:943c)
[09:10:10] <emanuele6> trap 'code' ERR    runs `code' every time, `set -e' would trigger if it was on
[09:10:56] <hwrd> I do have `set -e` though... hmmm.
[09:11:23] <emanuele6> so every time a program errors (outside of an if, or a negated pipeline or all the other places not effected by set-e), you run code
[09:11:54] <emanuele6> and code checks if the exit code is 98, if it is, you kill the script immediately.
[09:12:05] <emanuele6> s/kill/terminate/
[09:12:53] <emanuele6> !-e > hwrd
[09:12:54] <greybot> hwrd: "set -e" is an inheritance of the old bourne shell, and doesn't really work well with modern shell features. You'll really have less buggy scripts if you do the error handling manually instead of relying on the unreliable "set -e"; see http://mywiki.wooledge.org/BashFAQ/105
[09:13:37] *** Joins: sublim20 (~sublim20@user/sublim20)
[09:13:45] <emanuele6> anyway, if you have `set -e' and `var=$(function_from_another_file "$arg1" "$arg2")' returns non-zero, the shell will exit
[09:13:55] <hwrd> but it doesn't
[09:13:58] <hwrd> it just continues
[09:14:00] <hwrd> for me
[09:14:12] <emanuele6> hence why -e is bad
[09:14:40] <hwrd> hmmm....
[09:14:47] *** Joins: Viking66772 (~Viking667@203.184.11.139)
[09:15:14] <Viking66772> hm. Seems I've got to kick my IRC client a bit.
[09:15:15] *** Joins: sinaowolabi_ (~SinaOwola@41.58.226.61)
[09:15:21] <emanuele6> you can read the link that you can find in faq105 to see where set -e will exit the shell on error and where it will not
[09:15:28] <emanuele6> it does not always exit
[09:15:39] <emanuele6> that is why it is not a good idea to use it
[09:15:46] <Viking66772> Did irc.libera.chat go down about ... um... half an hour ago?
[09:16:12] *** Joins: pycurious (~Adium@user/pycurious)
[09:16:13] <emanuele6> Viking66772: no, your part message said "Remote host closed the connection"
[09:16:28] <Viking66772> I didn't leave by choice, and I can't seem to reconnect.
[09:16:49] <emanuele6> you must have done it by mistake then :-Þ
[09:17:12] <Viking66772> oh ha ha. No, that's not the sort of mistake I make.
[09:18:12] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Ping timeout: 256 seconds)
[09:18:50] <Viking66772> Well, I'll have to hop off here and try again with the client.
[09:19:17] <Viking66772> ... now if only I could figure out how to hop off here.
[09:19:35] *** Parts: Viking66772 (~Viking667@203.184.11.139) ()
[09:19:39] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[09:19:41] <bud> emanuele6: without -e, how would i do a exit escallation? can i have ERX send ERR signal with exit code?
[09:19:56] <emanuele6> you mean set-E?
[09:20:17] <bud> :)
[09:20:21] <bud> so thats why
[09:21:08] <emanuele6> if you run `ERX' in a subshell, it will `exit 98' and that will exit the subshell directly and make it return 98
[09:21:41] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[09:21:44] <emanuele6> so if you have something like `a=$(fun_that_uses_ERX)', the trap would still work.
[09:21:49] <emanuele6> even without -E
[09:21:56] *** Quits: roadie (~user@2a02:8108:ec0:1427:90b6:f063:786d:943c) (Ping timeout: 268 seconds)
[09:22:04] *** Quits: bliminse (~bliminse@host86-188-36-178.range86-188.btcentralplus.com) (Quit: leaving)
[09:22:14] <bud> and also eithout -e?
[09:22:38] <bud> *without
[09:22:51] <emanuele6> i understand why you would need `set -E' if ERX had a `return 98', but since it has `exit 98', i don't see why you need `-E'
[09:23:09] <bud> ok
[09:23:38] <emanuele6> bud: what is -e used for in ERX?
[09:24:00] <bud> set -e
[09:24:04] <bud> is what i mean
[09:24:15] <emanuele6> i understand that
[09:24:24] <bud> i thought -e is what triggerd ERR signal?
[09:24:33] <bud> without -e no ERR?
[09:24:46] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Client Quit)
[09:24:47] *** Joins: node1 (~node1@user/node1)
[09:25:09] <emanuele6> no, ERR is triggered whenever set -e would be triggered afaik
[09:25:18] *** Quits: node1 (~node1@user/node1) (Write error: Broken pipe)
[09:25:20] <bud> aha
[09:25:28] <emanuele6> # trap 'echo hi' ERR; false; false
[09:25:29] <shbot> emanuele6: hi
[09:25:29] <shbot> emanuele6: hi
[09:25:36] <bud> nice
[09:25:46] <emanuele6> if you use `set -e', ERR would not work
[09:26:00] *** Joins: mei (~mei@user/mei)
[09:26:05] <emanuele6> because the shell would just exit before running the code
[09:26:10] <emanuele6> # set -e; trap 'echo hi' ERR; false; false
[09:26:11] <shbot> emanuele6: hi
[09:26:11] <shbot> emanuele6: (shell exited with 1)
[09:26:18] *** Quits: zebrag (~chris@user/zebrag) (Read error: Connection reset by peer)
[09:26:21] <emanuele6> well, it would only run it one time..
[09:27:39] <bud> nice. i misunderstood first, you said something "it will do that whenever -e...", and i thought it meant all my scripts where dependent on -e.
[09:27:58] <emanuele6> `set -E' is another thing, it makes functions inherit the ERR trap
[09:28:10] <emanuele6> # help set | grep -- -E
[09:28:11] <shbot> emanuele6:               errtrace     same as -E
[09:28:11] <shbot> emanuele6:       -E  If set, the ERR trap is inherited by shell functions.
[09:28:29] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[09:28:39] <bud> to me that sounds like what i want.
[09:28:48] <emanuele6> i don't see why you need it
[09:29:02] *** Joins: seninha (~seninha@user/seninha)
[09:29:23] <bud> nested subshells?
[09:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:30:24] *** Joins: roadie (~user@2a02:8108:ec0:1427:90b6:f063:786d:943c)
[09:30:25] <emanuele6> # ERX () { exit 98 ;}; trap ERR 'echo "$?"'; a="$(ERX "$(ERX)")""
[09:30:31] <shbot> emanuele6: Missing terminating quote, bracket or keyword
[09:30:34] <emanuele6> err
[09:30:44] <emanuele6> # ERX () { exit 98 ;}; trap 'echo "$?"' ERR; a="$(ERX "$(ERX)")"
[09:30:44] <shbot> emanuele6: 98
[09:31:02] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[09:31:10] <emanuele6> # ERX () { echo "$*"; exit 98 ;}; trap 'echo "triggered $?"' ERR; a="$(ERX "$(ERX; echo hi)"; echo hehe)"
[09:31:11] <shbot> emanuele6: triggered 98
[09:31:15] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:31:32] <emanuele6> if it was `return 98', you would need set-E, yes
[09:31:39] <emanuele6> but since it is exit, you don't
[09:31:49] <emanuele6> # ERX () { echo "$*"; return 98 ;}; trap 'echo "triggered $?"' ERR; a="$(ERX "$(ERX; echo hi)"; echo hehe)"
[09:31:49] <shbot> emanuele6: no output
[09:32:13] <emanuele6> i really can't think of a reason why you would need set-E
[09:32:45] <bud> try this with or without -E
[09:32:46] <bud> https://0x0.st/-RUl.sh
[09:32:49] <bud> i want -E
[09:33:03] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[09:33:10] *** Joins: bliminse (~bliminse@host86-188-36-178.range86-188.btcentralplus.com)
[09:33:50] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:34:02] <emanuele6> ah, yes
[09:34:04] <emanuele6> i see
[09:34:27] *** Quits: n4dir (~user@mue-88-130-56-082.dsl.tropolys.de) (Remote host closed the connection)
[09:34:39] <emanuele6> you do need the -E
[09:34:56] <emanuele6> # ERX () { echo "$*"; exit 98 ;}; trap 'echo "triggered $?"' ERR; a="$(true "$(ERX; echo hi)"; echo hehe)"
[09:34:56] <shbot> emanuele6: no output
[09:35:03] <bud> i got the big E
[09:35:07] <emanuele6> i was not testing it properly
[09:35:36] <emanuele6> i should have put ERX only in the inner subshell
[09:35:58] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Client Quit)
[09:36:54] *** Quits: Bercik (~Redomen@user/bercik) (Ping timeout: 256 seconds)
[09:37:01] *** Joins: Bercik_ (~Redomen@89-73-136-211.dynamic.chello.pl)
[09:37:17] *** Joins: jonthesnow (~xizhendu@36.112.188.169)
[09:37:31] <emanuele6> bud: by the way, i would suggest you to use `((' or `[[' for that test
[09:37:59] <bud> yeah, also, -ne ]] || , it doesnt look pretty
[09:37:59] <emanuele6> [ is a command so it sets $_, if you use $_ in your code, it might mess with that
[09:38:27] <emanuele6> (( and [[ since they are keywords, not simple commands, don't set $_
[09:38:33] <bud> nice
[09:38:37] <bud> didn't know that
[09:38:47] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[09:40:49] <emanuele6> # trap '[ 1 -eq 1 ] || exit 1' ERR; : hi; false; printf '%s\n' "$_"
[09:40:50] <shbot> emanuele6: ]
[09:41:02] <emanuele6> # trap '(( 1 == 1 )) || exit 1' ERR; : hi; false; printf '%s\n' "$_"
[09:41:03] <shbot> emanuele6: false
[09:41:14] <emanuele6> ah, oops, i messed that up
[09:41:26] <emanuele6> # trap '[ 1 -eq 1 ] || exit 1' ERR; false hi; printf '%s\n' "$_"
[09:41:26] <shbot> emanuele6: ]
[09:41:35] <emanuele6> # trap '(( 1 == 1 )) || exit 1' ERR; false hi; printf '%s\n' "$_"
[09:41:36] <shbot> emanuele6: hi
[09:41:52] <emanuele6> # trap '[[ 1 -eq 1 ]] || exit 1' ERR; false hi; printf '%s\n' "$_"
[09:41:53] <shbot> emanuele6: hi
[09:47:09] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:47:30] <bud> i was thinking, is there a way for the trap to see if 98 is from the script and not from f.i. curl?
[09:47:47] <bud> if so, this could be made bulletproof
[09:49:41] *** Quits: quazimodo (~quazimodo@n1-40-235-47.bla1.nsw.optusnet.com.au) (Ping timeout: 268 seconds)
[09:50:07] <emanuele6> maybe check if `[[ $FUNCNAME == ERX ]]'?
[09:50:34] <bud> yes, meganice
[09:51:24] <emanuele6> i don't think that works
[09:52:08] <emanuele6> well
[09:52:28] <emanuele6> if you use `(exit 98)' instead of `exit 98' in ERX, it works :)
[09:53:04] <emanuele6> maybe, it might break other things
[09:53:06] *** Joins: chomwitt (~chomwitt@2a02:587:dc12:3f00:12c3:7bff:fe6d:d374)
[09:53:27] <bud> yeah i wonder how the esacllation thing would work.
[09:53:47] <bud> since exit 98 is also sent from the trap, and should be treated as valid.
[09:54:10] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[09:54:26] <bud> maybe if the trap also does ERX instead of exit 98
[09:55:33] *** Quits: mas (~mas@2600:6c52:7b00:77c9:4120:53ee:563e:39bc) (Quit: Client closed)
[09:55:46] <emanuele6> yes, maybe if the trap is `trap '[[ $FUNCNAME = ERX ]] && exit 98' ERR' and ERX is `ERX () { ...; (exit 98); exit ;}'
[09:55:51] <emanuele6> not sure
[09:56:10] *** Quits: chomwitt (~chomwitt@2a02:587:dc12:3f00:12c3:7bff:fe6d:d374) (Remote host closed the connection)
[09:56:12] <emanuele6> (exit 98) can just be false really
[09:57:10] <emanuele6> no, it does not work
[09:58:36] *** Joins: Viking667 (~user@203.184.11.139)
[09:59:07] <Viking667> sorry about the delay, irc client simply wouldn't restart, so I had to shut the whole emacs session down. Ugh.
[09:59:17] <hwrd> emacs...
[09:59:18] *** Quits: rcernin (~rcernin@124.190.139.235) (Ping timeout: 260 seconds)
[09:59:39] <Viking667> yah. Emacs can do quite a few things, irc client being one of them.
[09:59:55] <hwrd> I would rephrase this as... emacs can do too many things.
[10:00:03] <Viking667> <grin>
[10:00:23] <emanuele6> emacs can do whatever, it is a programmable environment
[10:00:32] <Viking667> indeed.
[10:00:33] <emanuele6> it can and should do whatever
[10:00:49] <bud> emanuele6: you emacs?
[10:01:03] <emanuele6> i play with emacs sometimes
[10:01:10] <emanuele6> but i don't use it a lot
[10:01:26] <emanuele6> i used EXWM for 1 whole year 3 years ago
[10:01:32] <emanuele6> it was nice
[10:01:48] <Viking667> There's a couple of things I use vim for. But emacs can do just about everything vim can do, except run vim script code directly.
[10:03:15] <Viking667> I prefer vimdiff to ediff though. Anyhow, I wasn't here for that - I'm back here to try and get my problem sorted.
[10:03:23] *** Quits: jonthesnow (~xizhendu@36.112.188.169) (Ping timeout: 264 seconds)
[10:04:08] <emanuele6> Viking667: before you left, you said what the line was but not what you wanted to extract :/
[10:04:08] *** Joins: chomwitt (~chomwitt@2a02:587:dc12:3f00:12c3:7bff:fe6d:d374)
[10:04:27] *** Joins: rcernin (~rcernin@124.190.139.235)
[10:06:26] <Viking667> Right. I want to extract two things from that line. the AppID (not the word, but the number after it), and the next "frame", which starts after the : and goes until the next ;.
[10:06:36] <Viking667> whoops, sorry, the next " : "
[10:06:37] *** Quits: rgrinberg (~textual@201.192.183.100) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:06:53] <emanuele6> why not what greycat suggested?
[10:07:17] <emanuele6> <greycat > title=${output% : *} title=${title#* : }   and so on
[10:07:19] <Viking667> i.e. for the above line, I want 100 in one variable (I've figured that bit out). and the title:  "Counter-Strike: Deleted Scenes" in the other variable.
[10:07:19] *** Joins: Mo (~Mo@dynamic-077-000-233-006.77.0.pool.telefonica.de)
[10:07:23] *** Joins: voices- (~voices_@84.238.197.28)
[10:07:39] <Viking667> I tried that, it got me nowhere. Nowhere whatsoever. All I got back was the initial line I fed it.
[10:07:51] <Viking667> I'll go grab the file... please wait.
[10:08:13] <emanuele6> # output='AppID 100 : "Counter-Strike: Deleted Scenes" : /home/viking/path/to/blah' title=${output% : *} title=${title#* : }; declare -p title
[10:08:14] <shbot> emanuele6: declare -- title="\"Counter-Strike: Deleted Scenes\""
[10:08:18] <emanuele6> works fine
[10:09:25] <emanuele6> it is getting everything between the first instance of " : " and the last instance of " : "
[10:09:46] <emanuele6> you could also remove the quotes
[10:09:48] <Viking667> hm, I'm not getting that
[10:10:07] <emanuele6> # output='AppID 100 : "Counter-Strike: Deleted Scenes" : /home/viking/path/to/blah' title=${output%\" : *} title=${title#* : \"}; declare -p title
[10:10:08] <shbot> emanuele6: declare -- title="Counter-Strike: Deleted Scenes"
[10:10:15] <Viking667> Here's what I have so far:   	AppID="${line% : }"; AppID="${AppID##AppID}"
[10:10:23] <Viking667> line contains the entire line.
[10:10:54] *** Quits: rcernin (~rcernin@124.190.139.235) (Ping timeout: 256 seconds)
[10:10:59] <emanuele6> you don't need ##, # is enough
[10:11:02] <emanuele6> but it doesn't matter
[10:11:19] <emanuele6> also `${line% : }' looks wrong
[10:11:38] <Viking667> hm?
[10:11:39] <emanuele6> that removes ' : ' from the end of line if line ends with ' : '
[10:11:58] <Viking667> ...sigh.
[10:12:23] <emanuele6> # a=blabla; echo "no change ${a% : }"; a='hehe : '; echo "some change ${a% : }"
[10:12:24] <shbot> emanuele6: no change blabla
[10:12:24] <shbot> emanuele6: some change hehe
[10:13:00] <emanuele6> # a='hehe :'; echo "${a@Q} does not end with ' : ' so no change: ${a% : }"
[10:13:01] <shbot> emanuele6: 'hehe :' does not end with ' : ' so no change: hehe :
[10:13:56] <emanuele6> Viking667: # deletes the shortest possible match of the given pattern from the start
[10:14:05] <emanuele6> ## deletes the longest possible match
[10:14:27] <emanuele6> and % and %% are also shortest/longest, but from the end instead of from the start
[10:14:40] <Viking667> # a='AppID 100 : "Counter-strike: first second" : /path'; echo "a is ${a#AppID }"
[10:14:41] <shbot> Viking667: a is 100 : "Counter-strike: first second" : /path
[10:14:54] <Viking667> hm, so that bit works.
[10:15:17] <emanuele6> now you want to delete the long possible match for ` *'
[10:15:20] <emanuele6> from the end
[10:15:34] <Viking667> # a='AppID 100 : "Counter-strike: first second" : /path'; echo "a is ${a%% : *}"
[10:15:34] <shbot> Viking667: a is AppID 100
[10:15:47] <emanuele6> you want to do both things though
[10:15:51] <Viking667> hm, so I'm still doing ... yeah.
[10:16:02] <Viking667> That bit I can work out then.
[10:16:04] <emanuele6> you don't need to specify ' : '
[10:16:09] <emanuele6> ' ' is enough
[10:16:16] <Viking667> you've lost me.
[10:16:23] <emanuele6> ${a%% *}
[10:17:08] <Viking667> # a='AppID 100 : "Counter-strike: first second" : /path'; echo "a is ${a%% *}"
[10:17:09] <shbot> Viking667: a is AppID
[10:17:15] <Viking667> really.
[10:17:21] <emanuele6> # a='AppID 100 : "Counter-strike: first second" : /path' step1=${a#AppID } step2=${step1%% *}; declare -p a step{1,2}
[10:17:21] <shbot> emanuele6: declare -- a="AppID 100 : \"Counter-strike: first second\" : /path"
[10:17:22] <shbot> emanuele6: declare -- step1="100 : \"Counter-strike: first second\" : /path"
[10:17:22] <shbot> emanuele6: declare -- step2="100"
[10:17:46] <emanuele6> if you do it from "100 : \"Counter-strike: first second\" : /path", yes.
[10:18:32] <emanuele6> # output='AppID 100 : "Counter-Strike: Deleted Scenes" : /home/viking/path/to/blah' step1=${output%\" : *} step2=${title#* : \"}; declare -p output step{1,2}
[10:18:33] <shbot> emanuele6: declare -- output="AppID 100 : \"Counter-Strike: Deleted Scenes\" : /home/viking/path/to/blah"
[10:18:33] <shbot> emanuele6: declare -- step1="AppID 100 : \"Counter-Strike: Deleted Scenes"
[10:18:33] <shbot> emanuele6: declare -- step2=""
[10:18:39] <bud> trap '(($? == 98)) && [[ ! $(command -v "$BASH_COMMAND") ]] && exit 98' ERR
[10:18:44] <emanuele6> err, i think i copied it wrong
[10:18:54] *** Joins: rcernin (~rcernin@124.190.139.235)
[10:19:00] <emanuele6> # output='AppID 100 : "Counter-Strike: Deleted Scenes" : /home/viking/path/to/blah' step1=${output%\" : *} step2=${step1#* : \"}; declare -p output step{1,2}
[10:19:00] <shbot> emanuele6: declare -- output="AppID 100 : \"Counter-Strike: Deleted Scenes\" : /home/viking/path/to/blah"
[10:19:01] <shbot> emanuele6: declare -- step1="AppID 100 : \"Counter-Strike: Deleted Scenes"
[10:19:01] <shbot> emanuele6: declare -- step2="Counter-Strike: Deleted Scenes"
[10:19:02] <emanuele6> there
[10:19:12] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[10:19:38] <emanuele6> bud: isn't BASH_COMMAND the whole command line?
[10:19:46] <bud> no, its the last command
[10:19:54] <emanuele6> # echo "$BASH_COMMAND"
[10:19:55] <shbot> emanuele6: echo "$BASH_COMMAND"
[10:19:59] <emanuele6> not just the command
[10:20:02] <emanuele6> the whole command line
[10:20:04] <bud> so v2=$(my_func2) can be BASH_COMMAND
[10:20:52] <Viking667> All right, I guess that gets the title into a var. I wish I knew how it worked though.
[10:20:55] <emanuele6> # curl () {:;}; trap 'declare -p BASH_COMMAND' DEBUG; curl argument1 argument2
[10:20:55] <shbot> emanuele6: bash: syntax error near unexpected token `{:'
[10:21:01] <emanuele6> # curl () { :;}; trap 'declare -p BASH_COMMAND' DEBUG; curl argument1 argument2
[10:21:02] <shbot> emanuele6: declare -- BASH_COMMAND="curl argument1 argument2"
[10:21:05] <Viking667> why do you need the \"  after the %  ?
[10:21:06] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[10:21:08] *** Quits: Neo517 (~Neo17@node-1w7jr9ydiugdd7dby4bkj3pp4.ipv6.telus.net) (Ping timeout: 268 seconds)
[10:21:20] <emanuele6> bud: BASH_COMMAND is not just the command name, it's the whole command line
[10:21:44] *** Joins: podeni (~podeni@188.27.129.177)
[10:23:17] *** Joins: node1 (~node1@user/node1)
[10:24:01] *** Quits: node1 (~node1@user/node1) (Client Quit)
[10:24:09] <emanuele6> Viking667: to remove it
[10:24:23] <emanuele6> if you don't want to remove the quote, don't add it
[10:24:31] <Viking667> hm.
[10:24:34] <emanuele6> # output='AppID 100 : "Counter-Strike: Deleted Scenes" : /home/viking/path/to/blah' step1=${output% : *} step2=${step1#* : }; declare -p output step{1,2}
[10:24:35] <shbot> emanuele6: declare -- output="AppID 100 : \"Counter-Strike: Deleted Scenes\" : /home/viking/path/to/blah"
[10:24:35] <shbot> emanuele6: declare -- step1="AppID 100 : \"Counter-Strike: Deleted Scenes\""
[10:24:35] <shbot> emanuele6: declare -- step2="\"Counter-Strike: Deleted Scenes\""
[10:24:41] <emanuele6> there, i removed it
[10:24:51] <emanuele6> now step2 is "Counter-Strike: Deleted Scenes"
[10:24:57] <emanuele6> not just  Counter-Strike: Deleted Scenes
[10:25:02] *** Joins: node1 (~node1@user/node1)
[10:25:18] <Viking667> I don't exactly need it in quotes (it's going to be fed to an associative array)
[10:25:38] <emanuele6> then keep the quotes, less work
[10:27:59] *** Quits: roadie (~user@2a02:8108:ec0:1427:90b6:f063:786d:943c) (Ping timeout: 264 seconds)
[10:28:00] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[10:28:35] <emanuele6> bud: you could do something like this maybe `unset -v RANDOM; false'    `trap '[[ -z $RANDOM ]] && exit 98' ERR'
[10:29:10] <emanuele6> ah, no
[10:29:23] <emanuele6> because if you unset in a subshell, you don't unset in the main shell
[10:29:39] *** Quits: node1 (~node1@user/node1) (Client Quit)
[10:30:56] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[10:31:59] *** Joins: jdvr (~jdvr@user/jdvr)
[10:32:31] <emanuele6> yeah, the only think that you can propagate to the main shell is the exit code
[10:32:51] <Viking667> Do you need two operations to get the title? The line you put up shows that, but I was wondering if you could fold it all into  one line...
[10:32:53] <emanuele6> so i don't think it's possible to do it any other way
[10:32:55] *** Joins: pycurious (~Adium@user/pycurious)
[10:33:19] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[10:33:31] <emanuele6> Viking667: yes, one line, you don't even need semicolons...
[10:33:44] <emanuele6> <greycat > title=${output% : *} title=${title#* : }   and so on
[10:34:41] <Viking667> Ohhhh, I thought what he'd put up was a typo.
[10:36:12] *** Joins: jaggz (~jaggz@user/jaggz)
[10:36:26] <jaggz> how do I bash complete an alias to the original command's stuff?
[10:36:39] <jaggz> alias btc=bluetoothctl
[10:36:56] <emanuele6> !b13 > Viking667 :p
[10:36:56] <greybot> Viking667 :p: everyone ignores greycat when he is right. When he is wrong, it is !b1.
[10:37:26] <jaggz> I don't know how to get the "bluetoothctl" command's completions (to put them in COMPREPLY)
[10:37:35] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 264 seconds)
[10:38:55] <geirha> complete -p bluetoothctl   and run the line it outputs with   btc added at the end
[10:39:00] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[10:39:25] *** Joins: iconoclasthero (~quassel@pool-68-238-241-198.phlapa.fios.verizon.net)
[10:39:46] <emanuele6> you can bind alias-expand-line to something
[10:40:06] <emanuele6> for example: `bind '"\C-x5":alias-expand-line''
[10:40:13] *** Quits: ztx (~ztx@user/ztx) (Remote host closed the connection)
[10:40:31] <emanuele6> but it does not really make sense to do it for stuff like: alias ls='ls --color=auto'
[10:40:37] <Viking667> I see the first step strips off the path (which is definitely what I wanted). I suspect I still need four operations
[10:40:45] *** Joins: mfiano (~mfiano@li1282-157.members.linode.com)
[10:41:06] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[10:41:06] <jaggz> geirha, thanks :)
[10:41:06] *** Joins: martinus__ (~martin@95.31.201.77.rev.sfr.net)
[10:41:08] <emanuele6> because ls will expand to `ls --color=auto' in the readline, but ls will still be an alias
[10:41:14] <mfiano> Oh so I guess POSIX shell questions are allowed here? I tried to join #sh :)
[10:41:16] <jaggz> (turns out, it has no completions!)
[10:41:41] <geirha> jaggz: it might have dynamically loaded completions, which will be loaded when you first try to complete something on it
[10:41:47] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[10:41:54] *** Joins: ExeciN (~ExeciN@user/nicexe)
[10:42:28] *** Joins: ztx (~ztx@user/ztx)
[10:42:33] <mfiano> I am wondering how to do a regex match with the posix class [[:digit]] (no calling out to processes like grep), in an IF expression (I only know how in CASE).
[10:43:17] <geirha> bash's [[ can do both pattern matching and regex matching
[10:43:25] <mfiano> Again, POSIX sh
[10:44:17] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[10:44:33] <emanuele6> posix sh can do pattern matching
[10:44:38] <emanuele6> not regex matching
[10:44:44] <geirha> then the only option for using case (which does pattern matching, not regex matching), is a string comparison where one side uses a PE to remove a match from the start or end on one of the variables
[10:44:50] *** Joins: abip20 (~abdullah@103.66.177.186)
[10:45:09] <mfiano> POSIX has a builtin character class [:digit] which can be used in CASE. I want to know how to do it in an IF
[10:45:21] <mfiano> If possible
[10:45:34] *** Joins: jle (~jle@user/jle)
[10:46:05] <emanuele6> if ! case $var in [[:digit:]]) false; esac; then
[10:46:06] <geirha> if [ "$var" != "${var#*[[:digit:]]}" ] ; then printf 'var contains a digit\n' ; fi
[10:46:11] <emanuele6> if you must use an if
[10:46:25] <geirha> really, just use case
[10:48:47] <bud> i give up trying to verify if ERR was raised from script itself or external program. i even wrote a super complex C program to verify..
[10:48:53] <bud> https://0x0.st/-R0H.c
[10:48:59] *** Quits: abip20 (~abdullah@103.66.177.186) (Client Quit)
[10:49:18] *** Joins: abip20 (~abdullah@103.66.177.186)
[10:49:21] <emanuele6> you can use a check_pat function e.g.: check_pat () { ! case $1 in ($2) false; esac ;} if you really want
[10:49:56] *** Joins: pycurious (~Adium@user/pycurious)
[10:51:37] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[10:51:51] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[10:51:54] <emanuele6> but that is worse than just using case
[10:51:55] <geirha> isint() { case $1 in *[![:digit:]+-]* | [+-]*[![:digit:]]* | "") return 1 ;; esac ; }
[10:52:01] <geirha> if isint "$var" ; then ...
[10:52:16] *** Joins: node1 (~node1@user/node1)
[10:53:22] *** Joins: han-solo (~hanish@user/han-solo)
[10:54:00] <geirha> needs another pattern in there
[10:54:01] *** Joins: sarantos (~sarantos@2a02:587:3431:f3d7:e560:c09c:6be:41c4)
[10:54:14] <mfiano> "${var#*[[:digit:]]}" just returns 234 for var=1234
[10:54:50] <emanuele6> yes, the shortest possible match for *[[:digit:]] is one digit
[10:55:14] <mfiano> I want to match any positive integer
[10:55:57] <mfiano> actually any non-negative integer
[10:56:01] <mfiano> 0 included
[10:56:02] *** Joins: n4dir (~user@mue-88-130-56-082.dsl.tropolys.de)
[10:56:16] <geirha> is_unsigned_integer() { case $1 in *[![:digit:]]* | "") return 1 ;; esac ; }
[10:56:28] <emanuele6> ^
[10:57:56] <emanuele6> or [ "$var" ] && [ "${var#*[![:digit:]]}" != "$var" ]
[10:58:00] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[10:58:07] <mfiano> Thank you. How would I invert that? anything that isn't an unsigned int?
[10:58:16] <emanuele6> or [ "${var#*[![:digit:]]}" != "${var:-x}" ] assuming x is not a digit
[10:58:29] <emanuele6> but x could be a digit in some locales
[10:58:52] <emanuele6> it's easier to just use case
[10:58:57] <geirha> if ! is_unsigned_int "$var" ; then
[10:59:40] *** Quits: gamore (~gamore@101.179.132.178) (Ping timeout: 256 seconds)
[11:00:01] <geirha> (but using the correct function name)
[11:00:03] <mfiano> Thank you very much.
[11:00:59] <emanuele6> actually, you don't have to assume that x is not a digit
[11:01:12] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[11:01:24] <emanuele6> [ "${var#*[![:digit:]]}" = "${var:-x}" ] would be an ok way to check that, but i would still use case
[11:02:13] *** Quits: randm (~randm@user/randm) (Quit: Leaving.)
[11:02:32] *** Joins: randm (~randm@user/randm)
[11:07:32] *** Quits: dre (~dre@2001:8003:c932:c301:f4c:269a:f23f:f4fc) (Ping timeout: 240 seconds)
[11:08:38] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[11:09:59] *** Quits: abip20 (~abdullah@103.66.177.186) (Quit: Konversation terminated!)
[11:11:43] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Client Quit)
[11:14:23] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[11:16:02] *** Quits: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e) (Ping timeout: 268 seconds)
[11:16:11] *** Joins: GNUHacker (~foobar@fsf/member/GNUHacker)
[11:17:17] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Client Quit)
[11:22:22] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[11:27:25] *** Joins: cyhyraeth (~cyhyraeth@user/cyhyraeth)
[11:28:58] *** Quits: jdvr (~jdvr@user/jdvr) (Remote host closed the connection)
[11:30:19] *** Joins: lovetruth (~lovetruth@188.27.142.20)
[11:32:32] *** Quits: node1 (~node1@user/node1) (Ping timeout: 256 seconds)
[11:34:35] *** Quits: rcernin (~rcernin@124.190.139.235) (Ping timeout: 264 seconds)
[11:38:07] *** Joins: sublim20 (~sublim20@user/sublim20)
[11:38:31] *** Joins: rcernin (~rcernin@124.190.139.235)
[11:40:34] *** Quits: totenkoph (~scythe@user/totenkoph) (Remote host closed the connection)
[11:41:19] *** Joins: totenkoph (~scythe@user/totenkoph)
[11:44:45] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[11:46:30] *** Quits: GNUHacker (~foobar@fsf/member/GNUHacker) (Read error: Connection reset by peer)
[11:46:36] *** Joins: node1 (~node1@user/node1)
[11:46:56] *** Joins: sublim20 (~sublim20@user/sublim20)
[11:48:06] *** Joins: GNUHacker (~foobar@fsf/member/GNUHacker)
[11:49:35] *** Joins: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[11:49:50] *** Joins: rendar (~rendar@user/rendar)
[11:53:25] *** Joins: sazawal (~sazawal@223.190.87.36)
[11:54:36] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[12:01:29] *** Joins: lavaball (~Melissa@31.204.155.215)
[12:05:28] *** Joins: pycurious (~Adium@user/pycurious)
[12:08:12] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[12:09:59] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 264 seconds)
[12:10:20] *** Quits: cyhyraeth (~cyhyraeth@user/cyhyraeth) (Quit: WeeChat 3.3)
[12:15:50] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 268 seconds)
[12:16:08] *** Quits: jess (~jess@libera/staff/jess) (Quit: Lost terminal)
[12:16:46] *** Joins: shad (~shad@user/shad)
[12:16:50] *** Joins: jess (~jess@libera/staff/jess)
[12:19:25] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[12:20:44] *** Joins: zro (~zro@user/zro)
[12:21:42] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:22:04] *** Joins: tobybl (~tobybl@dhcp-199-132.inf.ed.ac.uk)
[12:22:51] *** Joins: pycurious (~Adium@user/pycurious)
[12:23:21] *** Joins: tobybl_ (~tobybl@dhcp-199-132.inf.ed.ac.uk)
[12:24:04] *** Quits: Bercik_ (~Redomen@89-73-136-211.dynamic.chello.pl) (Ping timeout: 256 seconds)
[12:24:23] *** Joins: arinov (~arinov@213.194.126.155)
[12:26:32] *** Quits: tobybl (~tobybl@dhcp-199-132.inf.ed.ac.uk) (Ping timeout: 240 seconds)
[12:26:54] *** Quits: rcernin (~rcernin@124.190.139.235) (Ping timeout: 256 seconds)
[12:27:42] *** Joins: Bercik (~Redomen@89-73-136-211.dynamic.chello.pl)
[12:27:43] *** Quits: Bercik (~Redomen@89-73-136-211.dynamic.chello.pl) (Changing host)
[12:27:43] *** Joins: Bercik (~Redomen@user/bercik)
[12:28:02] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[12:32:06] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[12:32:34] *** Quits: sinaowolabi_ (~SinaOwola@41.58.226.61) (Ping timeout: 256 seconds)
[12:32:50] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[12:34:51] *** Joins: cyhyraeth (~cyhyraeth@user/cyhyraeth)
[12:36:17] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[12:37:24] *** Quits: cyhyraeth (~cyhyraeth@user/cyhyraeth) (Client Quit)
[12:42:26] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:42:29] *** Joins: timj (~timj@user/timj)
[12:44:15] <Viking667> Okay, I think I've almost got my little dmenu script working.
[12:47:18] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[12:47:53] <Viking667> Yup. It works. Finally.
[12:53:54] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[12:57:07] *** Joins: put_in (~put_somew@123.20.213.95)
[12:58:28] * Viking667 disapparates
[12:58:35] *** Quits: Viking667 (~user@203.184.11.139) (Quit: *croak*)
[13:00:46] <mfiano> About the above, how would I modify it to match an unsigned int with a given suffix, say 'KB'. I tried ?*[[:digit:]]*KB) but that's not quite right.
[13:02:15] *** Parts: GNUHacker (~foobar@fsf/member/GNUHacker) (q)
[13:02:19] <Soliton> just check for trailing KB first.
[13:02:36] <mfiano> How would I do that?
[13:02:53] <Soliton> cut it off and see if anything changed for example.
[13:02:56] <mfiano> with 'case' matching
[13:02:59] <emanuele6> that matches any string at least 4 characters long that ends in KB and of which at least one character after the first character is a digit
[13:03:14] <Soliton> *KB)
[13:04:18] <mfiano> Hmm
[13:05:31] *** Joins: jinsun__ (~quassel@user/jinsun)
[13:06:35] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 250 seconds)
[13:07:17] *** Quits: Bhavuk (~BTaneja@2401:4900:1c16:2619:fc11:bb03:d43a:6b22) (Quit: Leaving)
[13:07:59] *** Joins: jinsun (~quassel@user/jinsun)
[13:09:14] *** Joins: jinsun___ (~quassel@user/jinsun)
[13:11:57] *** Quits: jinsun__ (~quassel@user/jinsun) (Ping timeout: 268 seconds)
[13:12:11] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:909e:de36:5be2:fe99)
[13:12:30] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 260 seconds)
[13:13:14] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[13:16:52] *** Joins: blatant (~blatant@cpc145856-warw18-2-0-cust892.3-2.cable.virginm.net)
[13:17:32] *** Quits: blatant (~blatant@cpc145856-warw18-2-0-cust892.3-2.cable.virginm.net) (Client Quit)
[13:18:03] *** Joins: seninha (~seninha@user/seninha)
[13:18:59] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:909e:de36:5be2:fe99) (Ping timeout: 264 seconds)
[13:19:28] *** Joins: ro (~ro@user/ansible)
[13:21:32] *** Joins: WTFguy (~uid0@user/p3rl)
[13:21:33] *** Joins: dre (~dre@119-18-0-198.771200.syd.nbn.aussiebb.net)
[13:24:09] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:909e:de36:5be2:fe99)
[13:24:23] *** Quits: p3rL (~uid0@user/p3rl) (Ping timeout: 264 seconds)
[13:24:23] *** WTFguy is now known as p3rL
[13:25:00] *** Quits: kdc (~kdc@196.211.197.159) (Quit: Leaving)
[13:25:34] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 260 seconds)
[13:25:45] *** Joins: nock (~noctarium@2804:14c:8786:81c3:a10c:e0ab:fd30:1397)
[13:26:01] *** Joins: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk)
[13:28:00] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 268 seconds)
[13:29:39] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[13:30:04] *** Joins: kdc (~kdc@196.211.197.159)
[13:31:47] *** Joins: dsrt^ (~dsrt@68.101.63.101)
[13:34:24] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:7cb6:a747:5071:b94c)
[13:34:32] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:909e:de36:5be2:fe99) (Ping timeout: 240 seconds)
[13:36:33] *** Quits: Gerula (~Gerula@user/gerula) (Ping timeout: 265 seconds)
[13:37:32] *** Joins: han-solo_ (~hanish@157.46.211.101)
[13:37:50] *** Joins: pycurious (~Adium@user/pycurious)
[13:39:30] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:7cb6:a747:5071:b94c) (Ping timeout: 260 seconds)
[13:39:35] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:b05b:4993:3d2f:b94a)
[13:39:35] *** Joins: sQVe (~sQVe@user/sqve)
[13:39:43] *** Quits: han-solo_ (~hanish@157.46.211.101) (Client Quit)
[13:40:34] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 256 seconds)
[13:42:16] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[13:43:04] *** Joins: pycurious (~Adium@user/pycurious)
[13:43:19] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:44:32] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:b05b:4993:3d2f:b94a) (Ping timeout: 240 seconds)
[13:44:35] *** Quits: jinsun___ (~quassel@user/jinsun) (Read error: Connection reset by peer)
[13:44:53] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:61f6:180b:4de:469e)
[13:45:03] *** Joins: jinsun (~quassel@user/jinsun)
[13:47:06] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 268 seconds)
[13:47:32] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[13:47:43] *** Joins: Gerula (~Gerula@user/gerula)
[13:47:43] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 268 seconds)
[13:48:49] *** Joins: pycurious (~Adium@user/pycurious)
[13:50:08] *** Quits: synthmeat (~synthmeat@user/synthmeat) (Quit: WeeChat 3.3)
[13:50:44] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:61f6:180b:4de:469e) (Ping timeout: 265 seconds)
[13:51:47] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:d003:65e3:de19:84b9)
[13:52:37] *** Quits: igemnace (~ian@user/igemnace) (Quit: WeeChat 3.3)
[13:56:47] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:d003:65e3:de19:84b9) (Ping timeout: 264 seconds)
[13:57:15] *** Joins: crawler (~crawler@user/crawler)
[13:57:44] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:a967:ce77:a61a:46be)
[13:59:15] *** Joins: karakedi (~eAC53C340@user/karakedi)
[14:00:00] *** Joins: tobybl (~tobybl@dhcp-199-132.inf.ed.ac.uk)
[14:02:32] *** Quits: tobybl_ (~tobybl@dhcp-199-132.inf.ed.ac.uk) (Ping timeout: 240 seconds)
[14:03:01] *** Joins: Adoi (~Adoi@user/adoi)
[14:04:02] *** Quits: Adoi (~Adoi@user/adoi) (Client Quit)
[14:07:37] *** Quits: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net) (Remote host closed the connection)
[14:07:49] *** Joins: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net)
[14:14:40] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[14:15:00] *** Joins: ExeciN (~ExeciN@user/nicexe)
[14:15:28] *** Quits: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 268 seconds)
[14:19:10] *** Quits: crawler (~crawler@user/crawler) (Ping timeout: 268 seconds)
[14:19:25] *** Joins: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e)
[14:20:08] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[14:20:30] *** Joins: ExeciN (~ExeciN@user/nicexe)
[14:21:01] *** Quits: af (~af@awalgarg.me) (Ping timeout: 265 seconds)
[14:23:32] *** Quits: sarantos (~sarantos@2a02:587:3431:f3d7:e560:c09c:6be:41c4) (Quit: Client closed)
[14:23:44] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[14:25:46] *** Quits: voices- (~voices_@84.238.197.28) (Remote host closed the connection)
[14:26:14] *** Joins: magla (~gelignite@55d403ec.access.ecotel.net)
[14:26:56] *** Joins: Everything (~Everythin@37.115.210.35)
[14:29:06] *** Joins: blatant (~blatant@cpc145856-warw18-2-0-cust892.3-2.cable.virginm.net)
[14:38:32] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[14:42:21] *** Joins: namkeles44 (~namkeles@101.179.132.178)
[14:42:31] *** Joins: voices- (~voices_@84.238.197.28)
[14:42:36] *** Quits: namkeles (~namkeles@101.179.132.178) (Quit: Client closed)
[14:44:09] *** Joins: af (~af@awalgarg.me)
[14:45:47] *** Quits: namkeles44 (~namkeles@101.179.132.178) (Client Quit)
[14:46:06] *** Joins: namkeleser (~namkelese@101.179.132.178)
[14:47:14] *** Joins: igemnace (~ian@user/igemnace)
[14:47:26] *** Quits: voices- (~voices_@84.238.197.28) (Ping timeout: 256 seconds)
[14:47:40] *** Joins: crawler (~crawler@user/crawler)
[14:49:05] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:981a:64cb:59a:ff39)
[14:49:19] *** Joins: han-solo (~hanish@user/han-solo)
[14:49:23] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:a967:ce77:a61a:46be) (Ping timeout: 268 seconds)
[14:51:58] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[14:52:12] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:7c4d:dc6b:e98f:8777)
[14:52:22] *** Quits: crawler (~crawler@user/crawler) (Ping timeout: 260 seconds)
[14:52:40] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[14:54:23] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:981a:64cb:59a:ff39) (Ping timeout: 264 seconds)
[14:55:39] *** Joins: vlm (~vlm@user/vlm)
[14:56:19] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Client Quit)
[14:56:43] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[14:56:43] *** Joins: arinov (~arinov@5.24.160.250)
[14:59:15] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:7c4d:dc6b:e98f:8777) (Ping timeout: 268 seconds)
[14:59:21] *** Joins: synthmeat (~synthmeat@user/synthmeat)
[15:00:33] *** Joins: sarantos (~sarantos@2a02:587:3431:f3d7:a49f:fbde:4ad1:f3a1)
[15:04:35] *** Joins: pycurious (~Adium@user/pycurious)
[15:09:19] *** Joins: nyex (~Thunderbi@177.84.107.30)
[15:12:02] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[15:16:20] *** Joins: voices- (~voices_@84.238.197.28)
[15:20:50] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Ping timeout: 268 seconds)
[15:21:23] *** Quits: voices- (~voices_@84.238.197.28) (Ping timeout: 264 seconds)
[15:25:59] *** Quits: steven_saus (~steven_sa@cpe-74-131-36-220.kya.res.rr.com) (Read error: Connection reset by peer)
[15:26:24] *** Joins: steven_saus (~steven_sa@cpe-74-131-36-220.kya.res.rr.com)
[15:32:33] *** Quits: dsrt^ (~dsrt@68.101.63.101) (Ping timeout: 268 seconds)
[15:34:56] *** Quits: sQVe (~sQVe@user/sqve) (Quit: Bye!)
[15:35:08] *** Quits: shad (~shad@user/shad) (Ping timeout: 265 seconds)
[15:37:18] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[15:39:59] *** Joins: dsrt^ (~dsrt@68.101.63.101)
[15:40:34] *** Quits: martinus__ (~martin@95.31.201.77.rev.sfr.net) (Ping timeout: 268 seconds)
[15:41:12] *** Joins: Fozzworth_ (~Fozzworth@68-123-12-205.lightspeed.sntcca.sbcglobal.net)
[15:41:30] *** Quits: lungaro (~lungaro@99-117-118-33.lightspeed.sndgca.sbcglobal.net) (Read error: Connection reset by peer)
[15:41:32] *** Joins: lungaro_ (~lungaro@99-117-118-33.lightspeed.sndgca.sbcglobal.net)
[15:41:32] *** Quits: n8chan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Read error: Connection reset by peer)
[15:41:57] *** Joins: n8chan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[15:44:37] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:44:47] *** Quits: Fozzworth (~Fozzworth@user/fozzworth) (Ping timeout: 264 seconds)
[15:48:20] *** Quits: n4dir (~user@mue-88-130-56-082.dsl.tropolys.de) (Remote host closed the connection)
[15:49:12] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[15:51:45] *** Quits: zro (~zro@user/zro) (Quit: WeeChat 3.3)
[15:55:50] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[16:00:01] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[16:00:28] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[16:02:52] *** Joins: knstn (~knstn@ppp-94-66-57-225.home.otenet.gr)
[16:03:06] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[16:04:00] *** Quits: Mo (~Mo@dynamic-077-000-233-006.77.0.pool.telefonica.de) (Ping timeout: 268 seconds)
[16:05:04] *** Joins: Penguin666x (~Penguin66@217.138.205.135)
[16:05:17] *** Joins: sublim20 (~sublim20@user/sublim20)
[16:05:24] *** Joins: voices- (~voices_@84.238.197.28)
[16:08:09] *** Quits: Penguin666 (~Penguin66@217.138.205.135) (Ping timeout: 250 seconds)
[16:08:19] *** Quits: situ_ (~situ@ip-89-176-145-74.net.upcbroadband.cz) (Ping timeout: 268 seconds)
[16:12:38] *** Quits: dre (~dre@119-18-0-198.771200.syd.nbn.aussiebb.net) (Ping timeout: 260 seconds)
[16:14:02] *** Joins: w4ld0 (w4ld0@gateway/vpn/protonvpn/w4ld0)
[16:14:02] *** Quits: voices- (~voices_@84.238.197.28) (Ping timeout: 260 seconds)
[16:15:31] *** Joins: John_Ivan (~John_Ivan@user/john-ivan/x-1515935)
[16:21:32] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 240 seconds)
[16:24:05] *** Joins: shad (~shad@user/shad)
[16:25:47] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[16:26:22] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[16:26:34] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[16:27:12] *** Joins: tejr (~tejr@user/tejr)
[16:28:11] *** Joins: voices- (~voices_@84.238.197.28)
[16:29:19] *** Joins: H3dn1ng (~H3dn1ng@185.213.154.238)
[16:29:42] *** Quits: H3dn1ng (~H3dn1ng@185.213.154.238) (Client Quit)
[16:32:50] *** Quits: voices- (~voices_@84.238.197.28) (Ping timeout: 256 seconds)
[16:34:30] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[16:36:15] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[16:37:08] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[16:37:20] *** Joins: furrymcgee (~devuan@cgn-89-1-208-64.nc.de)
[16:37:23] *** Joins: Laurenceb (~Laurenceb@68.207.208.46.dyn.plus.net)
[16:38:40] *** Quits: sazawal (~sazawal@223.190.87.36) (Quit: Leaving)
[16:39:55] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[16:40:46] *** Quits: namkeleser (~namkelese@101.179.132.178) (Quit: Client closed)
[16:41:32] *** Joins: thevishy (~thevishy@2405:201:f005:c007:e9f8:766e:92f2:6107)
[16:42:23] *** Quits: Maxattax (~max@50-195-160-193-static.hfc.comcastbusiness.net) (Ping timeout: 250 seconds)
[16:42:53] *** Joins: wikan (~wikan@2a02:a31d:8541:e100:213:2ff:fed3:8291)
[16:44:35] *** Joins: situ_ (situ@nat-pool-brq-t.redhat.com)
[16:45:03] *** Joins: fuzzybear3965 (~fuzzybear@185.38.217.76)
[16:47:32] *** Joins: pycurious (~Adium@user/pycurious)
[16:48:25] *** Quits: hejux (~hejux@146.56.136.247) (Quit: WeeChat 3.0)
[16:49:38] *** Quits: arinov (~arinov@5.24.160.250) (Ping timeout: 268 seconds)
[16:51:21] *** Joins: zer0bitz (~zer0bitz@2001:2003:f6bc:f00:bde7:830:4cf1:2fa1)
[16:53:26] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[16:55:11] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[16:59:44] *** Joins: martinus__ (~martin@95.31.201.77.rev.sfr.net)
[17:00:18] *** Joins: israfel (~israfel@gateway/vpn/pia/israfel)
[17:01:00] *** Joins: shokohsc8618 (~shokohsc@161.88.195.77.rev.sfr.net)
[17:01:27] *** Joins: voices- (~voices_@84.238.197.28)
[17:02:05] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[17:04:30] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[17:05:50] *** Joins: arinov (~arinov@5.24.160.250)
[17:06:02] *** Quits: voices- (~voices_@84.238.197.28) (Ping timeout: 240 seconds)
[17:08:28] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[17:08:45] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 268 seconds)
[17:09:37] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[17:11:11] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 264 seconds)
[17:12:21] <stemid> how do I search the manual for set +a? what are those called?
[17:13:18] <geirha> they are options for the set builtin, so look up the set builtin
[17:13:41] *** Quits: dsrt^ (~dsrt@68.101.63.101) (Ping timeout: 268 seconds)
[17:13:49] <stemid> oic, thanks
[17:14:02] <geirha> PAGER='less +/set.\\\[' man bash
[17:14:28] <geirha> ah well, that hit typeset first, but just hit n to get to the next match
[17:14:46] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Ping timeout: 256 seconds)
[17:18:43] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[17:19:23] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: see you later)
[17:21:49] *** Joins: SJrX (~sjr@S0106302303dfb018.vf.shawcable.net)
[17:22:22] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Client Quit)
[17:22:46] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[17:24:07] <SJrX> I have a bash script that calls curl internally, I want to support an an env var $_CURL_OPTIONS where users can set an env var to something like [-H foo:bar -H "Authorization: Bearer 123"] and then in my script do I need to do convert that single string into an array in a way that respects shell quotes, so [-H,foo:bar,-H,Authorization: Bearer 123]
[17:27:22] *** Quits: shokohsc8618 (~shokohsc@161.88.195.77.rev.sfr.net) (Quit: The Lounge - https://thelounge.chat)
[17:30:34] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:30:37] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:33:11] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[17:34:44] *** Joins: voices- (~voices_@84.238.197.28)
[17:36:35] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[17:37:47] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[17:38:21] *** Quits: Gerula (~Gerula@user/gerula) (Quit: Leaving)
[17:39:38] <Soliton> if you want to support shell syntax in there then document that and use eval.
[17:39:40] <Riviera> SJrX: any reason for it being an environment variable?
[17:39:59] *** Quits: voices- (~voices_@84.238.197.28) (Ping timeout: 264 seconds)
[17:40:00] <Riviera> SJrX: instead of arguments?
[17:41:21] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[17:42:27] *** Joins: pycurious (~Adium@user/pycurious)
[17:42:40] *** Joins: zro (~zro@user/zro)
[17:42:59] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 264 seconds)
[17:43:54] *** Joins: Inline (~Inline@2a02:908:1252:7a80:9b56:dca:ba79:dc9b)
[17:44:08] *** Joins: dsrt^ (~dsrt@68.101.63.101)
[17:44:22] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Client Quit)
[17:45:47] *** Joins: drd (~drd@93-42-69-115.ip85.fastwebnet.it)
[17:46:50] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 260 seconds)
[17:46:51] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[17:47:18] <SJrX> Riviera, it's a philosophy of the tool I'm building there is _lots_ of context involved so I'm just telling people to put everything in an .env file and load that. This tool is for human users almost exclusively (it's a CLI front end for an API).
[17:48:18] <Soliton> what do you mean with load? if you source a file there is no need for env variables.
[17:48:58] <SJrX> I mean they can use a tool like direnv to auto populate it into context.
[17:49:58] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Client Quit)
[17:52:02] *** Quits: kj (~kj@kj.aerisnetwork.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:52:33] *** Joins: YaoNai (~YaoNai@user/yaonai)
[17:54:39] *** Quits: polve (~polve@twcitalia/polve) (Ping timeout: 265 seconds)
[17:54:52] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[18:00:08] *** Joins: m4n (~emacs@ip5f5bd1ff.dynamic.kabel-deutschland.de)
[18:00:43] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[18:01:06] *** Quits: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net) (Quit: Quit)
[18:01:21] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[18:01:23] *** Joins: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net)
[18:01:37] *** Quits: w4ld0 (w4ld0@gateway/vpn/protonvpn/w4ld0) (Quit: Textual IRC Client: www.textualapp.com)
[18:02:25] *** Quits: synthmeat (~synthmeat@user/synthmeat) (Quit: WeeChat 3.3)
[18:02:43] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[18:03:22] *** Joins: polve (~polve@twcitalia/polve)
[18:05:31] *** Joins: bbju (~bbju@103.144.148.54)
[18:07:55] *** Quits: totenkoph (~scythe@user/totenkoph) (Remote host closed the connection)
[18:08:29] *** Joins: totenkoph (~scythe@user/totenkoph)
[18:09:39] *** Joins: voices- (~voices_@84.238.197.28)
[18:10:52] *** Joins: igemnace (~ian@user/igemnace)
[18:10:59] *** Joins: seninha (~seninha@user/seninha)
[18:11:00] *** Quits: fuzzybear3965 (~fuzzybear@185.38.217.76) (Quit: Client closed)
[18:11:02] *** Quits: voices- (~voices_@84.238.197.28) (Read error: Connection reset by peer)
[18:11:24] *** Joins: voices- (~voices_@84.238.197.28)
[18:13:08] *** Quits: situ_ (situ@nat-pool-brq-t.redhat.com) (Ping timeout: 256 seconds)
[18:13:14] *** Joins: rufito (~phil@186.11.81.7)
[18:13:42] *** Quits: wikan (~wikan@2a02:a31d:8541:e100:213:2ff:fed3:8291) (Quit: Client closed)
[18:15:07] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 265 seconds)
[18:15:29] <superboot> Is there a hook or such to use to have your commandline sent through a command/function before execution? i.e. processor() { cat | sed 's|/home|/new-home|g'; };  ls /home/user  --> ls /new-home/user.       I know this example can be achieved by a simple symlink, but it is a simple example to illustrate the idea.
[18:16:02] *** Quits: voices- (~voices_@84.238.197.28) (Ping timeout: 240 seconds)
[18:16:29] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[18:17:16] *** Quits: MercilessDeth (~brad@136.49.59.177) (Quit: Konversation terminated!)
[18:17:55] *** Joins: shokohsc8618 (~shokohsc@161.88.195.77.rev.sfr.net)
[18:19:19] *** Joins: Maxattax (~max@136.sub-174-202-46.myvzw.com)
[18:21:50] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[18:24:01] *** Joins: situ_ (~situ@ip-89-176-145-74.net.upcbroadband.cz)
[18:24:18] <Soliton> you can bind return to mess with the readline buffer.
[18:24:34] <osse> BASH_COMMAND is not writable in trap DEBUG :(
[18:26:01] *** Joins: voices- (~voices_@84.238.197.28)
[18:28:22] *** Joins: pycurious (~Adium@user/pycurious)
[18:28:40] *** Joins: nvmd (~nvmd@user/nvmd)
[18:28:54] *** Joins: MercilessDeth (~brad@136.49.59.177)
[18:29:29] *** Quits: knstn (~knstn@ppp-94-66-57-225.home.otenet.gr) (Quit: leaving)
[18:32:32] *** Quits: arinov (~arinov@5.24.160.250) (Ping timeout: 240 seconds)
[18:32:38] *** Quits: Maxattax (~max@136.sub-174-202-46.myvzw.com) (Ping timeout: 260 seconds)
[18:33:23] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[18:33:47] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[18:34:11] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:34:44] *** Joins: Maxattax (~max@131.sub-174-202-44.myvzw.com)
[18:35:06] *** Joins: rgrinberg (~textual@201.192.183.100)
[18:35:57] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[18:37:50] *** Quits: zro (~zro@user/zro) (Ping timeout: 265 seconds)
[18:39:19] *** Quits: ialokin (znc@user/ialokin) (Quit: it was tempting to stay, but I had to quit :))
[18:40:25] *** Joins: legola (~legola@46.235.101.181)
[18:41:27] *** Joins: ialokin (znc@user/ialokin)
[18:42:59] *** Quits: kdc (~kdc@196.211.197.159) (Quit: Leaving)
[18:43:39] *** Quits: dsrt^ (~dsrt@68.101.63.101) (Remote host closed the connection)
[18:44:31] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f6bc:f00:93d:ef3a:ec37:e2db)
[18:45:03] *** Joins: defiant (~defiant@user/defiant)
[18:46:11] *** Quits: zer0bitz (~zer0bitz@2001:2003:f6bc:f00:bde7:830:4cf1:2fa1) (Ping timeout: 268 seconds)
[18:46:50] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Quit: azidhaka)
[18:49:34] *** Joins: kj (~kj@beta.aerisnetwork.net)
[18:51:28] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Quit: This computer has gone to sleep)
[18:51:32] *** Quits: bbju (~bbju@103.144.148.54) (Quit: Client closed)
[18:54:06] <superboot> osse: Darn.
[18:54:41] <superboot> Soliton: I don't see a mention of "return" in 'help bind', etc. Where can I find what you are talking about?
[18:55:09] *** Quits: w1kl4s (~w1kl4s@user/w1kl4s) (Quit: Bye)
[18:55:46] *** Joins: w1kl4s (~w1kl4s@user/w1kl4s)
[18:57:43] *** Joins: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[18:58:12] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[18:59:00] *** Joins: yeirr (~yeirr@user/yeirr)
[18:59:03] <Soliton> # bind -p | grep accept
[18:59:04] <shbot> Soliton: "\C-j": accept-line
[18:59:05] <shbot> Soliton: "\C-m": accept-line
[19:00:12] <Soliton> return or whatever you call the key you hit when you want to execute the input.
[19:00:33] <superboot> Soliton: Oh! I see. Wow, missed that one. haha.
[19:01:02] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[19:01:04] *** Quits: rgrinberg (~textual@201.192.183.100) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:05:02] *** Joins: rgrinberg (~textual@201.192.183.100)
[19:06:45] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[19:07:34] *** Quits: ialokin (znc@user/ialokin) (Ping timeout: 260 seconds)
[19:08:10] *** Joins: ialokin (~ialokin@ti0389q160-0471.bb.online.no)
[19:08:11] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[19:08:58] *** Joins: zoe (~zoe@fsf/member/zoe)
[19:09:50] *** Quits: Laurenceb (~Laurenceb@68.207.208.46.dyn.plus.net) (Ping timeout: 256 seconds)
[19:13:31] *** Joins: volgrim (~Volgrim@156-155-224-214.ip.internet.co.za)
[19:14:16] *** Quits: tobybl (~tobybl@dhcp-199-132.inf.ed.ac.uk) (Remote host closed the connection)
[19:14:54] <Soliton> bind -x '"\C-m":eval "${READLINE_LINE//foo/bar}"; READLINE_LINE='  maybe that's a start but it should really call accept-line.
[19:15:23] *** Quits: mags (~mags@097-090-237-145.res.spectrum.com) (Ping timeout: 264 seconds)
[19:16:40] *** Joins: mags (~mags@097-090-237-145.res.spectrum.com)
[19:22:54] *** Joins: ChmEarl (~chmearl@user/chmearl)
[19:23:02] *** Quits: hejux_0 (~hejux@104.224.190.144.16clouds.com) (Quit: WeeChat 3.3)
[19:23:24] *** Quits: Maxattax (~max@131.sub-174-202-44.myvzw.com) (Ping timeout: 256 seconds)
[19:23:58] *** Quits: mags (~mags@097-090-237-145.res.spectrum.com) (Ping timeout: 256 seconds)
[19:25:09] *** Joins: Maxattax (~max@15.sub-174-202-46.myvzw.com)
[19:25:28] *** Joins: mags (~mags@097-090-237-145.res.spectrum.com)
[19:25:36] <superboot> Soliton: I got about that far too. I just read the readline section fo the manual, and don't see a way to directly call readline's functions. Is there a way other than sending a bound keystroke/sequence?
[19:26:26] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[19:26:29] <Soliton> you can bind the above to something else and bind \C-m to that followed by \C-j.
[19:27:38] <superboot> Soliton: Oh nice!
[19:29:03] *** Quits: ialokin (~ialokin@ti0389q160-0471.bb.online.no) (Remote host closed the connection)
[19:29:26] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[19:29:46] *** Quits: Maxattax (~max@15.sub-174-202-46.myvzw.com) (Read error: Connection reset by peer)
[19:29:48] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[19:30:12] *** Quits: mags (~mags@097-090-237-145.res.spectrum.com) (Ping timeout: 256 seconds)
[19:30:15] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[19:30:39] *** Joins: mags (~mags@097-090-237-145.res.spectrum.com)
[19:31:07] *** Joins: zostj (~rue@1-162-44-145.dynamic-ip.hinet.net)
[19:31:12] *** Quits: voices- (~voices_@84.238.197.28) (Remote host closed the connection)
[19:31:17] *** Joins: larryv (~larryv@zsh/patchmanager/larryv)
[19:33:00] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[19:33:16] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[19:34:58] *** Joins: zro (~zro@user/zro)
[19:34:59] <superboot> I've got bind -x '"\C-h:myFunc" but how do I append a binding to \C-j?
[19:35:47] <Soliton> i would suggest to not overwrite default beindings.
[19:36:38] <Soliton> bind '"\C-m":"...\C-j"'
[19:41:14] *** Joins: Maxattax (~max@15.sub-174-202-46.myvzw.com)
[19:42:17] *** Joins: Gerula (~Gerula@user/gerula)
[19:42:48] *** Joins: anddam (~anddam@user/anddam)
[19:44:23] <anddam> howdy, I need to remove files with space and quotes in their names, when I try to      touch "foo 'o bar.txt"; ls -1 foo\ \'o\ bar.txt  | xargs -I FILE -n 1 echo rm FILE'     I get      xargs: unmatched single quote; by default quotes are special to xargs unless you use the -0 option
[19:44:38] *** Quits: blatant (~blatant@cpc145856-warw18-2-0-cust892.3-2.cable.virginm.net) (Quit: WeeChat 3.3)
[19:44:55] <Soliton> !faq rename
[19:44:55] <greybot> https://mywiki.wooledge.org/BashFAQ/030 -- How can I rename all my *.foo files to *.bar, or convert spaces to underscores, or convert upper-case file names to lower case?
[19:46:53] <Soliton> !ls > in case you're really using ls
[19:46:54] <greybot> in case you're really using ls: DO NOT USE ls' output for anything. ls is a tool for interactively looking at directory metadata. Any attempts at parsing ls' output with code are broken. Globs are much more simple AND correct: ''for file in *.txt''. Read http://mywiki.wooledge.org/ParsingLs
[19:47:24] <anddam> Soliton: no I am not, this is git's output
[19:47:52] *** Joins: drogas (~drogas@jump2.jet.uk)
[19:47:57] <Soliton> so tell git to output NUL delimited or stop using xargs.
[19:48:54] *** Joins: voices- (~voices_@84.238.197.28)
[19:50:08] *** Quits: sarantos (~sarantos@2a02:587:3431:f3d7:a49f:fbde:4ad1:f3a1) (Quit: Client closed)
[19:50:16] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Remote host closed the connection)
[19:50:35] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[19:54:01] *** Quits: voices- (~voices_@84.238.197.28) (Ping timeout: 268 seconds)
[19:54:20] <tomboy64> to match a random number of chars i can use *, for a single char i can use ?. but what if i want to match exactly "0 or 1" chars?
[19:54:27] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[19:54:50] <yitz> extglob
[19:55:04] <yitz> Or =~
[19:55:47] <lopid> "$var" == "0 or 1"
[19:56:57] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[19:57:25] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[19:57:33] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[19:58:31] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[19:58:32] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[19:58:40] <yitz> ^^ the real answer
[19:59:57] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:02:39] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Ping timeout: 268 seconds)
[20:06:27] *** Quits: kill (~killown@user/killown) (Quit: Leaving)
[20:06:35] *** Joins: xx (~xx@user/xx)
[20:07:28] <tomboy64> :D
[20:07:30] <tomboy64> thx
[20:07:35] <tomboy64> extglob helped me out
[20:07:37] *** Quits: Maxattax (~max@15.sub-174-202-46.myvzw.com) (Read error: Connection reset by peer)
[20:08:26] *** Joins: tobybl (~tobybl@213.31.134.235)
[20:09:14] * xx needs to learn fancy extglob
[20:09:20] *** Quits: ro (~ro@user/ansible) (Ping timeout: 256 seconds)
[20:09:58] *** Joins: knstn (~knstn@ppp-94-66-57-225.home.otenet.gr)
[20:10:38] *** Quits: Inline (~Inline@2a02:908:1252:7a80:9b56:dca:ba79:dc9b) (Ping timeout: 265 seconds)
[20:10:42] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[20:11:52] *** Joins: ialokin (znc@user/ialokin)
[20:13:38] *** Joins: Maxattax (~max@15.sub-174-202-46.myvzw.com)
[20:14:10] *** Joins: XV8 (~XV8@2601:5cb:c001:50:24ca:b775:d3c5:31a1)
[20:16:14] *** Quits: rustyshackleford (uid236774@helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[20:18:15] *** Quits: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net) (Quit: Leaving...)
[20:18:48] *** Quits: John_Ivan (~John_Ivan@user/john-ivan/x-1515935) (Remote host closed the connection)
[20:19:02] *** Quits: Maxattax (~max@15.sub-174-202-46.myvzw.com) (Ping timeout: 240 seconds)
[20:20:58] *** Joins: Maxattax (~max@255.sub-174-202-39.myvzw.com)
[20:21:00] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[20:21:31] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[20:25:48] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[20:26:52] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[20:28:03] *** Joins: annomy (~annomy@103.38.199.106)
[20:29:10] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 268 seconds)
[20:30:01] *** Joins: voices- (~voices_@84.238.197.28)
[20:31:35] *** Quits: skered (~dereks@user/skered) (Ping timeout: 264 seconds)
[20:32:48] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[20:32:52] *** Quits: annomy (~annomy@103.38.199.106) (Quit: WeeChat 3.3)
[20:33:01] *** Quits: l4yer (~l4yer@195.181.170.210) (Remote host closed the connection)
[20:34:54] *** Quits: voices- (~voices_@84.238.197.28) (Ping timeout: 260 seconds)
[20:34:54] *** Quits: tobybl (~tobybl@213.31.134.235) (Read error: Connection reset by peer)
[20:35:45] *** Joins: l4yer (~l4yer@195.181.170.210)
[20:40:32] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[20:40:44] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[20:42:13] <yitz> I just use grep/awk
[20:42:26] *** Quits: l4yer (~l4yer@195.181.170.210) (Remote host closed the connection)
[20:43:37] *** Joins: tobybl (~tobybl@213.31.134.235)
[20:44:25] *** Quits: ialokin (znc@user/ialokin) (Quit: it was tempting to stay, but I had to quit :))
[20:44:40] *** Joins: ialokin (znc@user/ialokin)
[20:45:12] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Read error: Connection reset by peer)
[20:45:35] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[20:45:46] <wiscii> # bash -c reset="\e[0m"; red="\e[0;91m"; echo -e "${red}RED${reset}"
[20:45:47] <shbot> wiscii: [0;91mRED
[20:45:49] *** Quits: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 268 seconds)
[20:46:53] *** Quits: kiryin (~kiryin@2001:999:83:3dd:60:2656:d9a9:f513) (Quit: quit)
[20:47:49] *** Joins: Elon_Satoshi (~elon@user/elon-satoshi/x-4242282)
[20:48:13] <Soliton> what are you trying to do?
[20:48:31] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[20:48:51] *** Joins: arinov (~arinov@213.194.126.155)
[20:50:32] *** Quits: ztx (~ztx@user/ztx) (Quit: ztx)
[20:51:13] *** Joins: namkeleser (~namkelese@101.179.132.178)
[20:52:30] *** Quits: tobybl (~tobybl@213.31.134.235) (Remote host closed the connection)
[20:53:16] *** Quits: XV8 (~XV8@2601:5cb:c001:50:24ca:b775:d3c5:31a1) (Quit: Textual IRC Client: www.textualapp.com)
[20:54:37] *** Quits: Elon_Satoshi (~elon@user/elon-satoshi/x-4242282) (Ping timeout: 265 seconds)
[20:54:56] <TomyWork> wiscii, the "bash -c" prevents the reset variable from sticking. just remove it, it doesnt make sense at that point. next issue: "" doesn't interpret \e. Use $''
[20:54:59] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Ping timeout: 264 seconds)
[20:55:18] <TomyWork> # reset=$'\e[0m'; red=$'\e[0;91m'; echo -e "${red}RED${reset}"
[20:55:19] <shbot> TomyWork: [0;91mRED[0m
[20:55:26] <TomyWork> hrm
[20:55:34] <Soliton> echo -e interpretes it.
[20:55:36] <twkm> ewww, echo -e.
[20:55:53] <TomyWork> oh, didnt even spot that
[20:56:08] *** Joins: Elon_Satoshi (~elon@user/elon-satoshi/x-4242282)
[20:56:21] *** Quits: Maxattax (~max@255.sub-174-202-39.myvzw.com) (Ping timeout: 256 seconds)
[20:57:23] <TomyWork> # reset="\e[0m"; red="\e[0;91m"; printf '%s\n' "${red}RED${reset}"; reset=$'\e[0m'; red=$'\e[0;91m'; printf '%s\n' "${red}RED${reset}"
[20:57:24] <shbot> TomyWork: \e[0;91mRED\e[0m
[20:57:24] <shbot> TomyWork: [0;91mRED[0m
[20:57:55] <TomyWork> shbot doesn't do color codes. it looks correct if you run it locally
[20:58:16] <han-solo> whaaaat ? how can shbot ... :D
[20:58:18] *** Joins: Maxattax (~max@50-195-160-193-static.hfc.comcastbusiness.net)
[20:58:48] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[21:00:48] *** Joins: lack (~lack@user/lack)
[21:01:19] *** Joins: cyhyraeth (~cyhyraeth@user/cyhyraeth)
[21:02:16] *** Joins: H3dn1ng (~H3dn1ng@185.213.154.232)
[21:03:06] <twkm> that shbot's tty doesn't interpret escape sequences does not surprise me.
[21:03:21] *** Quits: namkeleser (~namkelese@101.179.132.178) (Quit: Client closed)
[21:03:53] <twkm> also, ewww, hard-coded sequences.
[21:04:39] <han-solo> tput ?
[21:05:24] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[21:05:53] <earnestly> yes hardcoded sequences
[21:05:56] *** Joins: tijuco (~tijuco@user/tijuco)
[21:06:06] <earnestly> Though ew variables
[21:06:58] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[21:07:43] <earnestly> # jq -nc '"though it could do colour"'
[21:07:44] <shbot> earnestly: "though it could do colour"
[21:07:46] <earnestly> Hm
[21:08:05] <earnestly> # jq -nc '{"hmm":"hmm!"}'
[21:08:06] <shbot> earnestly: {"hmm":"hmm!"}
[21:08:10] <twkm> #jq might have advice.
[21:08:11] *** Joins: voices- (~voices_@84.238.197.28)
[21:08:12] <earnestly> I guess geirha turned it off
[21:08:35] <phy1729> Channel is +Cc now and onw of those kills color
[21:08:43] <earnestly> Ah, +C yeah
[21:09:46] <Soliton> +c
[21:10:22] <phy1729> I was hopeing to avoid /quote help cmode, but Soliton is right it's +c
[21:11:07] *** Quits: rgrinberg (~textual@201.192.183.100) (Ping timeout: 268 seconds)
[21:12:47] *** Joins: Neo517 (~Neo17@node-1w7jr9ydiugdcu9pabtkqkuj3.ipv6.telus.net)
[21:12:48] *** Joins: rgrinberg (~textual@201.192.183.53)
[21:13:57] *** Joins: skered (~dereks@user/skered)
[21:14:34] *** Quits: Elon_Satoshi (~elon@user/elon-satoshi/x-4242282) (Ping timeout: 260 seconds)
[21:15:54] *** Quits: voices- (~voices_@84.238.197.28) (Ping timeout: 260 seconds)
[21:16:23] *** Joins: lonewulf` (~lonewulf@user/lonewulf)
[21:17:57] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:22:10] *** Joins: GNUHacker (~foobar@fsf/member/GNUHacker)
[21:22:12] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 268 seconds)
[21:25:11] *** Joins: ztx (~ztx@user/ztx)
[21:27:47] *** Joins: H3dn1ng_ (~H3dn1ng@185.65.135.245)
[21:28:20] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[21:28:40] *** Joins: voices- (~voices_@84.238.197.28)
[21:30:02] *** Quits: H3dn1ng (~H3dn1ng@185.213.154.232) (Ping timeout: 240 seconds)
[21:30:28] *** Quits: H3dn1ng_ (~H3dn1ng@185.65.135.245) (Client Quit)
[21:32:58] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[21:33:14] *** Quits: voices- (~voices_@84.238.197.28) (Ping timeout: 260 seconds)
[21:33:44] *** Quits: potamides (~amnifiliu@2003:a:270f:c400:28d8:e046:7d92:3970) (Quit: WeeChat 3.3)
[21:33:56] *** Joins: pycurious (~Adium@user/pycurious)
[21:34:19] *** Joins: masterkorp (~masterkor@user/masterkorp)
[21:34:22] <masterkorp> hello everyone
[21:34:50] *** Parts: GNUHacker (~foobar@fsf/member/GNUHacker) (q)
[21:35:01] <masterkorp> I have a var with the following value local_version="9-dev-2021/09/09"
[21:35:09] <masterkorp> and I want to replace the / chars
[21:35:28] <masterkorp>   echo "${_local_version//[/]/-}"
[21:35:30] <masterkorp> does not work
[21:35:40] <phy1729> /\//-
[21:35:43] <phy1729> //\//-
[21:35:45] <masterkorp> in fact it works in every aspect
[21:36:30] <masterkorp> mines that
[21:36:34] <masterkorp> phy1729 that does not work
[21:36:55] <Friithian> I was just linked a script (not me specifically but just posted in a channel) for review. First line doesn't have a shebang and shellcheck has a fair few errors and that's before actually reading what the script does
[21:36:55] <anddam> I tryt/b virt
[21:36:57] <larryv> # local_version='9-dev-2021/09/09'; printf %s "${local_version//\//-}"
[21:36:57] <masterkorp> wait, it does
[21:36:57] <shbot> larryv: 9-dev-2021-09-09
[21:37:04] <anddam> mm that came out odd
[21:37:06] <masterkorp> my bad
[21:37:16] <masterkorp>   msg2 "${_local_version//\//-}"
[21:37:18] <phy1729> # local_version="9-dev-2021/09/09"; printf '%s\n' "${local_version//\//-}"
[21:37:19] <shbot> phy1729: 9-dev-2021-09-09
[21:37:22] <emanuele6> # local_version='9-dev-2021/09/09'; printf %s "${local_version//'/'/-}"
[21:37:23] <shbot> emanuele6: 9-dev-2021-09-09
[21:37:32] <emanuele6> you can use any form of quoting
[21:37:39] <emanuele6> you just need to quote the /
[21:39:26] *** Joins: reallymemorable (~reallymem@cpe-67-245-43-113.nyc.res.rr.com)
[21:39:45] <masterkorp> i see thank you
[21:39:58] *** Joins: fabs (~fabs@wrls-249-137-11.wrls-client.fas.harvard.edu)
[21:40:46] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[21:41:42] *** Joins: goldfish (~goldfish@user/goldfish)
[21:42:45] *** Joins: Kruppt (~Kruppt@50.111.6.246)
[21:44:24] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[21:44:36] *** Joins: namkeleser (~namkelese@101.179.132.178)
[21:45:50] *** Joins: A|an (~Alan@173.216.51.200)
[21:50:22] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[21:51:48] *** Quits: han-solo (~hanish@user/han-solo) (Read error: Connection reset by peer)
[21:53:34] *** Quits: reallymemorable (~reallymem@cpe-67-245-43-113.nyc.res.rr.com) (Remote host closed the connection)
[21:53:51] *** Quits: yeirr (~yeirr@user/yeirr) (Remote host closed the connection)
[21:54:13] *** Quits: namkeleser (~namkelese@101.179.132.178) (Quit: Client closed)
[21:54:49] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[21:55:12] *** Quits: YaoNai (~YaoNai@user/yaonai) (Quit: leaving)
[21:56:20] *** Joins: han-solo (~han-solo@user/han-solo)
[21:58:42] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[21:59:04] *** Quits: legola (~legola@46.235.101.181) (Remote host closed the connection)
[21:59:31] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[22:00:02] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[22:01:05] *** Quits: rgrinberg (~textual@201.192.183.53) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:01:25] <wiscii> ah +C, it is also the case in a DM
[22:01:35] *** Joins: Inline (~Inline@2a02:908:1252:7a80:4744:6074:ea58:ae8a)
[22:01:40] *** Quits: Neo517 (~Neo17@node-1w7jr9ydiugdcu9pabtkqkuj3.ipv6.telus.net) (Ping timeout: 268 seconds)
[22:02:28] <twkm> strange, i thought it removed the sequence.  oh well.
[22:03:08] <emanuele6> # file /usr/bin/jq
[22:03:09] <shbot> emanuele6: /usr/bin/jq: Bourne-Again shell script, ASCII text executable
[22:03:17] *** Joins: Neo517 (~Neo17@node-1w7jr9ydiugdcu9pabtkqkuj3.ipv6.telus.net)
[22:03:41] <emanuele6> jq only supports colours because it is a wrapper script that converts ansi to mirc colour codes
[22:03:56] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[22:04:06] <emanuele6> ansi sequences don't work on shbot otherwise
[22:05:41] <emanuele6> https://gitlab.com/geirha/shbot-initramfs/-/raw/master/skel/usr/bin/jq
[22:05:41] <checkbot> emanuele6: I think the problem is on line 9. This pattern always overrides a later one on line 12. See 7 issues on https://shellcheck.net/?id=cb46941
[22:06:20] <koala_man> wat
[22:06:25] *** Quits: Inline (~Inline@2a02:908:1252:7a80:4744:6074:ea58:ae8a) (Remote host closed the connection)
[22:06:35] <koala_man> oic
[22:07:47] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 256 seconds)
[22:07:53] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fabc-15.dhcp.inet.fi)
[22:09:02] *** Joins: Inline (~Inline@2a02:908:1252:7a80:4744:6074:ea58:ae8a)
[22:09:03] *** Joins: voices- (~voices_@84.238.197.28)
[22:09:39] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[22:09:41] *** Quits: zer0bitz_ (~zer0bitz@2001:2003:f6bc:f00:93d:ef3a:ec37:e2db) (Ping timeout: 268 seconds)
[22:09:52] *** Joins: sandb0y (~pirate@user/sandb0y)
[22:10:20] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[22:11:15] *** Quits: Inline (~Inline@2a02:908:1252:7a80:4744:6074:ea58:ae8a) (Remote host closed the connection)
[22:11:39] *** Joins: Inline (~Inline@2a02:908:1252:7a80:4744:6074:ea58:ae8a)
[22:13:37] *** Quits: cyhyraeth (~cyhyraeth@user/cyhyraeth) (Quit: WeeChat 3.3)
[22:14:01] *** Quits: voices- (~voices_@84.238.197.28) (Ping timeout: 256 seconds)
[22:14:33] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[22:14:59] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[22:15:20] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Ping timeout: 265 seconds)
[22:15:30] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[22:16:19] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[22:17:18] *** Quits: Inline (~Inline@2a02:908:1252:7a80:4744:6074:ea58:ae8a) (Quit: Leaving)
[22:18:32] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Read error: Connection reset by peer)
[22:19:10] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[22:23:21] <wiscii> how do you get a shellcheck id to share the result ?
[22:24:19] <koala_man> you can't, that's a checkbot feature
[22:25:19] *** Joins: foobarfoo (~user@vps-93-95-226-254.1984.is)
[22:25:29] *** Joins: Inline (~Inline@2a02:908:1252:7a80:4744:6074:ea58:ae8a)
[22:25:30] <koala_man> it would be nice if you could, but people abuse pastebins and I don't follow up closely enough
[22:25:39] <wiscii> ok
[22:26:46] <wiscii> just curious
[22:31:18] *** Quits: TomyWork (~TomyLobo@p200300e80f0f27005036fe31250dbe10.dip0.t-ipconnect.de) (Quit: Leaving)
[22:32:05] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:7883:4458:4520:f986)
[22:32:06] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:7883:4458:4520:f986) (Changing host)
[22:32:06] *** Joins: skapata (~Skapata@user/skapata)
[22:34:39] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[22:37:19] *** Joins: H3dn1ng (~H3dn1ng@185.65.135.245)
[22:37:29] *** Quits: FoodMan (~glucose@user/foodman) (Ping timeout: 250 seconds)
[22:37:49] *** Quits: drd (~drd@93-42-69-115.ip85.fastwebnet.it) (Ping timeout: 256 seconds)
[22:41:45] *** Quits: thevishy (~thevishy@2405:201:f005:c007:e9f8:766e:92f2:6107) (Quit: Client closed)
[22:43:25] *** Joins: voices- (~voices_@84.238.197.28)
[22:43:43] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[22:46:42] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 268 seconds)
[22:46:45] *** Joins: ayusta (Thunderbir@gateway/vpn/protonvpn/ayustae)
[22:48:32] *** Quits: voices- (~voices_@84.238.197.28) (Ping timeout: 268 seconds)
[22:49:04] *** ayusta is now known as ayustae
[22:52:13] *** Joins: physikoi (~physikoi@user/physikoi)
[22:52:39] *** Joins: dj (~dj@162.223.44.49)
[22:53:52] *** CodeBender is now known as nThCodeBender
[22:54:27] <dj> How do I return a value from a bash function and compare it?
[22:54:35] <dj> using the return statement doesn't seem to work
[22:56:09] <bud> you can exectue the function in a subshell. and capture stdout from that subshell.
[22:56:16] <bud> var=$(function)
[22:56:23] <larryv> !faq return > dj
[22:56:23] <greybot> dj: https://mywiki.wooledge.org/BashFAQ/002 -- How can I store the return value and/or output of a command in a variable?
[22:56:36] <bud> function(){echo value ;}
[22:57:26] <dj> what's the point of return then?
[22:57:43] <chilversc> return sets a status code for the function
[22:57:49] <wiscii> return does error status
[22:58:27] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[22:59:09] <wiscii> dj: what language are you accustomed to ? promram language
[22:59:15] <dj> C++
[22:59:17] <wiscii> program*
[22:59:22] <wiscii> ah, yes
[23:00:22] <physikoi> hello #bash. I'm trying to figure out how to get bash to load installed completions automatically rather than having to manually source them. This library (https://github.com/scop/bash-completion/blob/master/README.md) indicates saving a completion file under ~/.local/share/bash-completion/completions should work, but it doesn't. Perhaps this is something that works on linux, but not macos? ty
[23:00:22] <dj> so i have to use echo?
[23:00:26] <larryv> !faq 84 > dj
[23:00:26] <greybot> dj: https://mywiki.wooledge.org/BashFAQ/084 -- How do I return a string (or large number, or negative number) from a function?  "return" only lets me give a number from 0 to 255.
[23:00:27] <wiscii> shell does not return values the way you expect, it can but ..
[23:01:08] <dj> so how would I do it via an exit status?
[23:01:46] *** Joins: Killirse (~Killirse@146.120.222.5)
[23:02:12] <dj> i'm trying it via: `function result` but it's giving me an echo
[23:02:32] <larryv> !faq 84
[23:02:33] <greybot> https://mywiki.wooledge.org/BashFAQ/084 -- How do I return a string (or large number, or negative number) from a function?  "return" only lets me give a number from 0 to 255.
[23:02:37] <wiscii> you have to break from your previous knowledge
[23:04:46] <dj> ok thank you
[23:05:14] *** Joins: kdc (~kdc@196.211.197.159)
[23:05:28] <physikoi> dj there are commands that have various exit codes with specific meanings. That's something you can leverage. Additionally, you can assign meaning to "unused" exit codes (up to 255). As far as capture a value goes, you have to echo it from the function. Altneratively, you could use an unscope variable an update it within the function
[23:06:05] <chilversc> dj: effectively, think of a function in bash as any other executable program, they pretty much follow the same rules (other than being able to share the same subshell, thus modify variables in the parent scope)
[23:06:43] <Soliton> physikoi: source them from .bashrc?
[23:06:53] <chilversc> dj: so same as a program, output goes via stout/stderr, input can be arguments or stdin. The return code is effectivly the same as a program's exit code
[23:07:14] <Soliton> bash-completions is a different project. it doesn't come with bash.
[23:07:40] <ano> any elegant way to split too long csv arg into multiple args?
[23:07:43] <physikoi> Soliton: yes, yes of course. However, I'd like to -- and correct me if this isn't possible -- autoload them. I was under the impression that there was a reserved directory for this purpose
[23:07:52] *** Quits: Killirse (~Killirse@146.120.222.5) (Remote host closed the connection)
[23:08:09] <emanuele6> physikoi: #bash-completion (on oftc.net) is the support channel for bash-completion, anyhow, you must source that file to get its completion functions. usually distributions that install bash-completion do it by installing that file in /etc/profile.d (if they only support bash) or by sourcing the file if it exists in /etc/bash.bashrc (if they also support other shells)
[23:08:10] <Soliton> there is no such thing.
[23:08:27] <Soliton> no idea how putting it in .bashrc is not automatic.
[23:08:45] <Soliton> ano: what is a csv arg?
[23:09:23] <ano> Soliton: comma separated decimals
[23:09:38] <physikoi> Soliton: yeah, it is. I wanted to avoid explicitly sourcing completions for program1, program2, ...programN if there were already a built in way to load them all implicitly
[23:09:44] *** Joins: paul424 (~tom@ip-31-0-123-63.multi.internet.cyfrowypolsat.pl)
[23:10:43] <wiscii>  
[23:10:49] <Soliton> ano: no clue what that is or what you're trying to do.
[23:10:59] <chilversc> physikoi: if you don't want to install bash-completion you could just use a simple loop, something like; for f in ~/.local/completions/*.sh; do source "$f"; done
[23:11:00] *** Joins: reallymemorable (~reallymem@static-70-23-61-202.nycmny.fios.verizon.net)
[23:12:51] <wiscii> # d="1,2,3"; a="${d%%,*}; b="${d##*,}"; echo "a $a, b $b"
[23:12:57] <shbot> wiscii: Missing terminating quote, bracket or keyword
[23:13:06] <wiscii> # d="1,2,3"; a="${d%%,*}; b="${d##*,}"; echo "a $a, b $b";
[23:13:13] <shbot> wiscii: Missing terminating quote, bracket or keyword
[23:13:30] <wiscii> # d="1,2,3"; a="${d%%,*}"; b="${d##*,}"; echo "a $a, b $b";
[23:13:31] <shbot> wiscii: a 1, b 3
[23:14:08] <ano> Soliton: there is "Argument list too long" limitation on *nix, need to split that too long comma separated decimals arg to multiple args/chunks according to limitation and execute cmd per chunk
[23:14:28] <physikoi> chilversc: actually, i've got it installed already. it's just not working as advertised re "local commpletions" . https://github.com/scop/bash-completion/blob/master/README.md (Q. Where should I install my own local completions?)
[23:14:38] <chilversc> ano: would splitting it on to separate lines and piping to the function via stdin work for you?
[23:15:16] <chilversc> physikoi: ah, for that see emanuele6's comment on the #bash-completion (on oftc.net) support channel. I don't really know bash-completion
[23:15:17] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:18:26] <physikoi> chilversc: thanks. i'll check it out
[23:18:34] <ano> chilversc: do you mean one decimal value per execution? if so then if will be drastically slow in my case
[23:18:57] <ano> *it will be
[23:19:14] <chilversc> ano: no, one decimal value per line, inside the function you could use something like `while read ...` or similar, not sure what you're doing with these values
[23:21:24] <chilversc> ano: if these are just simple values without special characters or quotes then maybe even just; my_func $(tr "," " " <<< "$line")
[23:21:31] *** Joins: voices- (~voices_@84.238.197.28)
[23:21:41] <chilversc> ano: it really depends on the data, the source of the data and how trustworthy it is
[23:22:23] <ano> chilversc: your example looks like a execution per one decimal value
[23:22:27] <chilversc> ano: so your question is hard to answer in the abstract
[23:23:01] *** Joins: mas (~mas@129.65.116.150)
[23:23:04] <chilversc> ano: no, that would just change; my_func "1,2,3,4" -> my_func 1 2 3 4
[23:23:26] <chilversc> ano: you're issue comes if you have data such as "a b,c,d" as that would become; a b c d
[23:23:27] *** Joins: mas22 (~mas@129.65.145.7)
[23:23:41] *** Quits: dj (~dj@162.223.44.49) (Ping timeout: 268 seconds)
[23:23:48] <chilversc> or if you have values that really need to be quoted
[23:24:02] <ano> chilversc: how does it fix "Argument list too long"?
[23:24:06] *** Quits: physikoi (~physikoi@user/physikoi) (Quit: leaving)
[23:24:10] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Remote host closed the connection)
[23:24:43] *** Quits: unclutter (~gentoo@60.81-166-246.customer.lyse.net) (Ping timeout: 250 seconds)
[23:25:07] <chilversc> ano: it won't there will still be a limit, hence why I was wondering if you could split the data over multiple lines, it's hard to say while the question is this abstract as it really depends on the data, and what you're doing with said data
[23:25:25] *** Quits: mags (~mags@097-090-237-145.res.spectrum.com) (Ping timeout: 256 seconds)
[23:25:41] *** Quits: zostj (~rue@1-162-44-145.dynamic-ip.hinet.net) (Quit: WeeChat 3.3)
[23:25:59] *** Quits: voices- (~voices_@84.238.197.28) (Ping timeout: 256 seconds)
[23:26:14] *** Joins: andril (~andril@c-66-229-99-96.hsd1.fl.comcast.net)
[23:26:50] <chilversc> ano: its possible that bash isn't even the correct tool here and maybe you should be looking at awk or python
[23:27:13] *** Joins: mags (~mags@097-090-237-145.res.spectrum.com)
[23:27:40] *** Quits: mas (~mas@129.65.116.150) (Ping timeout: 256 seconds)
[23:27:58] <ano> chilversc: data is verified/valid comma separated list/string of decimals, need to pass it as arg of specific cmd opt, but list/string too big and need to split to multiple cmd executions according to current env "Argument list too long" limitation max size
[23:28:04] *** Joins: voices- (~voices_@84.238.197.28)
[23:28:44] *** Joins: vysn (~vysn@user/vysn)
[23:28:49] <chilversc> Right, but what is this command? Is it an existing standard tool, is it something you've wrote yourself in another language, or is it just another bash function?
[23:29:17] <ano> cmd is transmission-remote
[23:29:23] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[23:29:48] <chilversc> Will the command accept the data through stdin instead of arguments? As that is much more efficient for larger sets of data.
[23:29:52] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 268 seconds)
[23:30:01] <ano> nope
[23:30:09] <Soliton> # xargs --show-limits <<< ''
[23:30:12] <shbot> Soliton: Your environment variables take up 270 bytes
[23:30:12] <shbot> Soliton: POSIX upper limit on argument length (this system): 2094834
[23:30:12] <shbot> Soliton: etc... ( http://ix.io/2iB0 )
[23:30:25] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:7c4d:dc6b:e98f:8777)
[23:30:44] *** Joins: zeno1 (~zen@88.103.31.15)
[23:31:21] <chilversc> ano: do new lines actually have any meaning (e.g. starting a new record), or is this just a pure stream of data and new lines are irrelevent?
[23:32:25] *** Quits: kdc (~kdc@196.211.197.159) (Remote host closed the connection)
[23:32:49] <ano> is there a portable/posix way to get "Argument list too long" max size and compare it to bash string size?
[23:32:56] *** Quits: voices- (~voices_@84.238.197.28) (Ping timeout: 268 seconds)
[23:33:07] *** Quits: mas22 (~mas@129.65.145.7) (Quit: Client closed)
[23:33:09] <Soliton> i doubt it.
[23:33:19] <chilversc> ano: as currently I'm thinking, split the data by comma onto new lines then pipe that to xargs. xargs will handle batching calls to the command respecting the system's limits
[23:33:28] <Soliton> it depends on your env as well anyway.
[23:34:16] <chilversc> xargs does have some issues, but if all your data is clean and just simple numbers such as "3" and "3.14", etc those issues shouldn't apply here
[23:35:24] *** Quits: nock (~noctarium@2804:14c:8786:81c3:a10c:e0ab:fd30:1397) (Ping timeout: 268 seconds)
[23:37:13] <chilversc> ano: does that sound like something that would work?
[23:37:40] *** Quits: Kruppt (~Kruppt@50.111.6.246) (Quit: Leaving)
[23:37:50] *** Quits: djph (~dpurgert@cpe-107-10-235-152.neo.res.rr.com) (Ping timeout: 260 seconds)
[23:40:12] *** Quits: tijuco (~tijuco@user/tijuco) (Quit: Leaving)
[23:40:15] <ano> list of comma separated decimals is single arg to opt in my case -o LIST_OF_COMMA_SEPARATED_DECIMALS and multiple -o DECIMAL -o DECIMAL doesn't work, not sure how xargs can handle it
[23:40:35] *** Quits: Bercik (~Redomen@user/bercik) (Ping timeout: 264 seconds)
[23:43:55] <bud> you can use cut. cut -d, -f 1-5 <<< "LIST_OF..."
[23:44:04] <bud> will print the first 5.
[23:44:18] <bud> cut -d -f 6- <<< "LIST..."
[23:44:21] <bud> prints the rest
[23:44:36] <bud> oops, -d,
[23:45:04] *** Joins: Bercik (~Redomen@89-73-136-211.dynamic.chello.pl)
[23:45:04] *** Quits: Bercik (~Redomen@89-73-136-211.dynamic.chello.pl) (Changing host)
[23:45:04] *** Joins: Bercik (~Redomen@user/bercik)
[23:46:14] *** Joins: voices- (~voices_@84.238.197.28)
[23:46:20] *** Joins: namkeleser (~namkelese@101.179.132.178)
[23:46:21] <chilversc> ano: It would be possible to write a function to do this in bash, but awkward. I would consider using a different language to write a small glue program that reads from stdin, and then joins each line until some limit is reached. Then it can just write the value to stdout
[23:46:45] *** Quits: reallymemorable (~reallymem@static-70-23-61-202.nycmny.fios.verizon.net) (Remote host closed the connection)
[23:47:03] <chilversc> ano: then you could have something like; csv-source | tr ',' '\n' | join-lines | transmission-remote
[23:47:57] <Soliton> you probably meant to put xargs in there.
[23:48:09] <chilversc> join-lines would be a pretty trivial bit of python or golang
[23:48:13] *** Joins: djph (~dpurgert@cpe-107-10-235-152.neo.res.rr.com)
[23:48:30] *** Joins: reallymemorable (~reallymem@static-70-23-61-202.nycmny.fios.verizon.net)
[23:48:50] <chilversc> transmission-remote could use xargs, or be a simple function that uses "while read ..."
[23:49:53] <chilversc> main point is, you don't have to solve the whole problem in bash, you can use bash to glue together a couple different parts, keeping the data streaming via stdin/out for as much as possible to avoid the line limits
[23:50:40] <ano> not so hard to do it on bash afaik, question is what's the portable way to get/figure out limit?
[23:50:40] <emanuele6> s/bash/POSIX sh/g
[23:50:55] *** Quits: voices- (~voices_@84.238.197.28) (Ping timeout: 256 seconds)
[23:51:27] <chilversc> ano: don't even try, just use a sensible limit that works and make it configurable via an environment variable or something
[23:51:42] *** Quits: reallymemorable (~reallymem@static-70-23-61-202.nycmny.fios.verizon.net) (Remote host closed the connection)
[23:51:56] <emanuele6> :/
[23:51:57] <ano> what does "sensible" limit mean?
[23:52:23] *** Joins: reallymemorable (~reallymem@static-70-23-61-202.nycmny.fios.verizon.net)
[23:52:26] <chilversc> ano: though this seems to suggest you can use `getconf ARG_MAX` https://serverfault.com/a/163390
[23:52:40] <phy1729> iirc you can grab it from sysctl, but thwn you have to make sure your accounting exactly matches the kernel's
[23:53:11] <chilversc> right, I'd probably subtract a little bit of a safety factor, plus you have to account for any other arguments you're including
[23:53:27] <phy1729> and the environment
[23:53:29] <chilversc> and I suspect argument 0 (aka the path to the program) also counts against the arg max
[23:53:30] <Soliton> plus the environment.
[23:53:57] <phy1729> Shoving large data through pipes is easier
[23:54:11] <gajus> currently I have a script that runs in CI: yarn config set npmScopes.contra.npmAuthToken $foo
[23:54:20] <Soliton> !quotes
[23:54:20] <greybot> https://mywiki.wooledge.org/Quotes
[23:54:20] <phy1729> !qefs
[23:54:20] <greybot> "$Quote" "$Every" "$Fucking" "$Substitution"
[23:54:39] <gajus> The problem is that in CI logs that value of $foo is expanded, i.e. it logs yarn config set npmScopes.contra.npmAuthToken "my-secret-token"
[23:54:47] <phy1729> !nabq
[23:54:47] <greybot> Not a #bash question. We're no experts in that software or OS; consider asking the channel or mailing list with experts on that topic (eg. #linux #openssh #ubuntu #zsh #systemd ##kernel or PM alis with "list keyword" to search for channels).
[23:54:57] *** Joins: mas (~mas@129.65.145.7)
[23:54:59] <gajus> isn't this generic bash question though..
[23:55:01] <chilversc> ano: also note a comment a little further down that there's another limit on any individual argument defined by MAX_ARG_STRLEN
[23:55:04] <phy1729> We have no idea how to configure your CI system
[23:55:09] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:7c4d:dc6b:e98f:8777) (Ping timeout: 268 seconds)
[23:55:10] <gajus> it's just bash
[23:55:13] *** Quits: reallymemorable (~reallymem@static-70-23-61-202.nycmny.fios.verizon.net) (Remote host closed the connection)
[23:55:25] <gajus> run in docker, I guess
[23:55:31] <Soliton> if it runs set -x then run set +x.
[23:55:47] <phy1729> (and after set -x if you like)
[23:55:51] <chilversc> ano: but those limits on that page can probably be used as a good guideline, and then I'd probably just half the size, so if the max is 131072, I wouldn't go more than 65536
[23:56:30] *** Quits: edlou (uid413273@helmsley.irccloud.com) (Excess Flood)
[23:56:34] <chilversc> ano: after that its just testing on all your intended targets, make it configurable so if someone does have an issue its easy for them to override
[23:56:39] *** Joins: edlou (uid413273@helmsley.irccloud.com)
[23:56:51] <gajus> Thanks, will try
[23:58:23] <emanuele6> or use `set -v' instead of `set -x'
