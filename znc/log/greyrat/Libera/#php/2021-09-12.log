[00:00:27] <Blondie101010> not sure how you're approaching this without looking at the actual code and what happens
[00:00:39] <Blondie101010> you have to dive into it and find what is going on
[00:01:34] <Blondie101010> showing us the output is not useful alone...  at least not without the code
[00:03:40] <fakuve> Blondie101010: its been shown from the very begining https://termbin.com/sari
[00:03:56] <BadAdviceCat> fakuve, if your problem still persists, I have another idea: What I do is set the code aside (just move it into a folder, out of thr way), and THEN carefully, meticulously create a new php script from scratch, absolutely no copy pasting. Then after that, refresh the private browsing window to check for changes upon EVERY time you save/change your PHP code until it does what you want, or until a problem appears. If a problem do appear, then you can
[00:03:58] <BadAdviceCat> UNDO the very code you just wrote, then REDO and then compare the differences, read the error message and look it up via search engine.
[00:04:43] <BadAdviceCat> fakuve, and at the same time, you can also compare your FRESH NEW PHP code to that Old code you've set aside. You might then realize the problem and find a solution.
[00:06:32] <Blondie101010> that code does next to nothing
[00:06:51] <fakuve> Thanks Blondie101010
[00:06:59] <fakuve> yeah is pretty much 2 lines
[00:07:02] <Blondie101010> where is the authentication?
[00:07:14] <fakuve> there is none , I was dipping my toes into it
[00:07:26] <Blondie101010> so there's nothing to test yet
[00:07:32] <fakuve> First seeing how this behave and that
[00:07:38] <fakuve> yes , there is an if statement
[00:07:55] <fakuve> It gets executed , the if , and the else
[00:08:11] <fakuve> Consecutively , for some reason . I thought it may be an ovious mistake
[00:08:20] <Blondie101010> using a cookie to check if authenticated like you're doing is very unsecure
[00:08:35] <BadAdviceCat> fakuve, Just in case you are not already doing it: you should consider using the "PHP Code is First" approach.
[00:08:36] <Blondie101010> no
[00:08:42] <fakuve> Thats the next step for me to check , at the moment I'm learning this thing of the cookies
[00:08:52] <Blondie101010> look at the code and output side by side
[00:09:11] <Blondie101010> "<h3> You are logged in as</h3>" is always outputted
[00:09:37] <fakuve> yes
[00:10:03] <Blondie101010> and considering that the cookie is not set, it outputs that you're not logged in
[00:10:04] <fakuve> but is inside an if statement that checks for the existance of that cookie (which doesn't exist)
[00:10:09] <Blondie101010> no
[00:10:12] <Blondie101010> read your code
[00:10:20] <Blondie101010> that line is before the condition
[00:10:42] <Blondie101010> ctrl-f
[00:12:02] <fakuve> Let me check I dont see it that obvious
[00:13:53] <fakuve> Okk
[00:13:57] <fakuve> Blondie101010: I see it
[00:14:01] <fakuve> my apologies
[00:14:05] <Blondie101010> np
[00:14:25] <fakuve> All this noise in the channel for such a thing . Alright guys
[00:14:31] <Blondie101010> my method is to add traces and with a single trace it would have stood out much more
[00:14:58] <Blondie101010> you try to locate where the problem is happening by adding traces...  ie: lines like: echo "here:\n";
[00:15:16] <Blondie101010> or: echo "inside condition\n";
[00:15:27] <fakuve> amm yeah
[00:15:54] <fakuve> I use normally echo "bang!!" , to see if the condition got triggered
[00:16:09] <fakuve> but In here I thought everything was triggered
[00:16:11] <fakuve> my bad
[00:16:30] <Blondie101010> you need to let go of magical thinking and focus a bit more
[00:17:02] *** Quits: cadfael (~tshone@2a02-a453-4c64-1-d6df-aa21-c52f-c95.fixed6.kpn.net) (Ping timeout: 260 seconds)
[00:17:20] <Blondie101010> magical thinking as in just expecting things to happen without really understanding what's going on
[00:18:08] <fakuve> yep definitely , with Computers , there is always a cause
[00:18:12] *** Joins: crazyfrog (~crazyfrog@user/crazyfrog)
[00:18:15] <Blondie101010> and now for my usual comment on auth systems for beginners, DON'T do it!
[00:18:28] <__adrian> mm
[00:18:33] <Blondie101010> you should learn to integrate a good auth system instead
[00:18:33] <__adrian> use an existing system
[00:18:41] <fakuve> Ok nah I'm just trying to see how this everything works
[00:18:47] <__adrian> right
[00:18:53] <__adrian> use an existing system and see how it works
[00:19:08] <fakuve> Any ideas? are there libraries out there?
[00:19:08] <Blondie101010> fakuve:  the current code would allow any hacker in while you the dev don't know how
[00:19:24] <__adrian> when you're just learning, most of your code should be limited to templates and display logic
[00:21:37] *** Joins: xyh (~xyh@113.92.73.187)
[00:22:42] <BadAdviceCat> fakuve, https://paste.gg/p/anonymous/e8dc28280b8a4d588d37eb37c08c571c Here is an example of that.
[00:22:50] *** Quits: Alexander-47u (~Alexander@a44107.upc-a.chello.nl) (Remote host closed the connection)
[00:23:24] <Blondie101010> good example...  that also covers !+php first
[00:23:24] <php-bot> good example...  that also covers, your PHP code can be sorted into two categories: code which _performs work_ (processing input, controller logic, database access, error handling, etc.), and code which  _produces output_ (header(), echo, <?= $var ?>, plain ol' <html>, etc.). work goes FIRST. output goes LAST. https://gist.github.com/adrian-enspired/9ed2542a695e2ebe30aa
[00:24:45] <BadAdviceCat> Notice on line #29 (please delete that line, it's not suppose to be an empty new line there) - There is a clear dividing line between PROCESSING PHP Form variables, and then doing things with it (using them in Databse search, crunching data) and then php variables simply being used in HTML (no database searching, processing, just pure SHOW THE VARIABLE and using if/else and other conditions)
[00:25:42] <Blondie101010> but why the heck did you show him the alternate syntax?
[00:25:43] <fakuve> BadAdviceCat: That a really good thanks
[00:25:46] <Blondie101010> :'(
[00:26:08] <Blondie101010> fakuve:  just ignore the alternate syntax exists for now :)
[00:26:13] <BadAdviceCat> I generally use https://www.php.net/manual/en/control-structures.alternative-syntax.php in between HTML elements. If you prefer not to, that's also fine.
[00:26:40] <Blondie101010> I profoundly hate it
[00:30:11] <fakuve> that is amazing
[00:30:25] <fakuve> Thanks guys , just dipping myself in the matter
[00:40:13] *** Joins: crazyfrog_ (~crazyfrog@user/crazyfrog)
[00:41:28] *** Quits: crazyfrog (~crazyfrog@user/crazyfrog) (Ping timeout: 252 seconds)
[00:47:49] *** crazyfrog_ is now known as crazyfrog
[00:55:37] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 252 seconds)
[01:10:37] *** Quits: crazyfrog (~crazyfrog@user/crazyfrog) (Remote host closed the connection)
[01:10:51] *** Joins: crazyfrog (~crazyfrog@user/crazyfrog)
[01:14:14] *** Joins: tex (~super@user/dix)
[01:16:56] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[01:42:10] *** Quits: onizu (uid373383@id-373383.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[01:54:51] *** Quits: tex (~super@user/dix) ()
[02:20:30] *** Quits: xyh (~xyh@113.92.73.187) (Ping timeout: 265 seconds)
[02:22:07] *** Joins: xyh (~xyh@113.92.72.146)
[02:38:20] *** Joins: sshrubber (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[02:38:23] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 265 seconds)
[02:47:40] *** Joins: Poboy (~Poboy@user/poboy)
[02:54:28] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[02:58:25] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 252 seconds)
[02:59:54] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[03:07:27] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[03:09:16] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Write error: Connection reset by peer)
[03:21:45] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:58:42] *** Quits: magla (~gelignite@55d40e31.access.ecotel.net) (Quit: Stay safe!)
[05:00:03] *** Joins: Nekomander (~BadAdvice@user/badadvicecat)
[05:00:30] *** Quits: Poboy (~Poboy@user/poboy) (Quit: Client closed)
[05:00:46] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 260 seconds)
[05:10:24] *** Joins: glumanda (~manu@194-208-201-025.tele.net)
[05:29:22] *** Quits: glumanda (~manu@194-208-201-025.tele.net) (Quit: WeeChat 3.2.1)
[05:31:45] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[06:10:17] *** Guest7025 is now known as AciD`
[07:01:49] *** Quits: Nekomander (~BadAdvice@user/badadvicecat) (Ping timeout: 265 seconds)
[07:14:20] *** Pixi_ is now known as Pixi
[07:29:39] *** Joins: junktext (~junktext@77.247.181.215)
[08:18:20] *** Joins: Rockwood (~Rocky@user/rocky)
[08:28:28] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[08:30:16] *** Joins: ferdna (~ferdna@user/ferdna)
[08:39:33] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[08:43:41] *** Quits: elycin (~elycin@ec2-54-163-129-255.compute-1.amazonaws.com) (Quit: ZNC 1.8.2 - https://znc.in)
[08:49:10] *** Joins: elycin (~elycin@ec2-54-163-129-255.compute-1.amazonaws.com)
[08:52:13] *** Joins: Poboy (~Poboy@user/poboy)
[09:08:51] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[09:10:04] *** Quits: dlundgren (~dlundgren@75-9-109-251.lightspeed.milwwi.sbcglobal.net) (Quit: dlundgren)
[09:11:37] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[09:24:52] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[09:25:47] *** Joins: semeion (~semeion@user/semeion)
[09:36:06] *** Quits: crazyfrog (~crazyfrog@user/crazyfrog) (Remote host closed the connection)
[09:37:01] *** Quits: Poboy (~Poboy@user/poboy) (Quit: Client closed)
[09:37:01] *** Joins: crazyfrog (~crazyfrog@user/crazyfrog)
[09:54:19] *** Joins: hansh (~hansh@36.84-48-255.nextgentel.com)
[09:54:24] <hansh> how should this be done? https://wandbox.org/permlink/Nq80csd8tZi4HSE0
[09:59:04] <hansh> wouldn't surprise me really if it'd be something like ltrim(pack("P",$i),"\x00"); but idk
[10:03:17] *** Joins: guidoc (~guido@host-79-13-254-239.retail.telecomitalia.it)
[10:03:25] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[10:14:07] <hansh> huh, yeah it produces the exact same string as rtrim(pack('P',$i),"\x00") up to 80,000 which is beyond 0xFFFF, so i'm probably looking for rtrim(pack('P',$i),"\x00")
[10:20:43] <hansh> (with the exception of int(0) )
[10:21:16] <hansh> so ($i === 0 ? "\x00" : rtrim(pack('P', $i),"\x00"))
[10:36:45] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[10:37:16] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[10:50:50] *** Joins: jargon (~jargon@184.101.192.132)
[11:07:52] *** Joins: Mark_Pinecone (~Mark_Pine@gateway/tor-sasl/markpinecone/x-88286818)
[11:35:34] *** Quits: junktext (~junktext@77.247.181.215) (Ping timeout: 260 seconds)
[11:38:16] *** Joins: Nekomander (~BadAdvice@user/badadvicecat)
[12:05:48] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:12:16] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[12:23:47] *** Quits: jargon (~jargon@184.101.192.132) (Remote host closed the connection)
[12:29:57] *** Quits: guidoc (~guido@host-79-13-254-239.retail.telecomitalia.it) (Quit: WeeChat 3.2)
[12:30:45] *** Joins: guidoc (~guido@host-79-13-254-239.retail.telecomitalia.it)
[12:57:32] *** Quits: LucaTM (~LucaTM@user/lucatm) (Ping timeout: 245 seconds)
[13:04:39] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:06:17] *** Quits: Nekomander (~BadAdvice@user/badadvicecat) (Ping timeout: 245 seconds)
[13:07:13] *** Quits: ReimuHakurei (~Reimu@raphi.vserver.alexingram.net) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[13:21:58] *** Quits: sshrubber (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 260 seconds)
[13:27:13] *** Joins: ReimuHakurei (~Reimu@2607:5600:26d:4:de:ad:be:ef)
[13:29:27] *** Quits: xyh (~xyh@113.92.72.146) (Quit: WeeChat 3.2)
[13:36:23] *** Joins: magla (~gelignite@55d48887.access.ecotel.net)
[13:59:31] *** Quits: ReimuHakurei (~Reimu@2607:5600:26d:4:de:ad:be:ef) (Ping timeout: 252 seconds)
[14:01:12] *** Quits: magla (~gelignite@55d48887.access.ecotel.net) (Quit: Stay safe!)
[14:01:19] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.2)
[14:01:25] *** Joins: ReimuHakurei (~Reimu@raphi.vserver.alexingram.net)
[14:06:53] *** Joins: crazyfrog_ (~crazyfrog@user/crazyfrog)
[14:08:55] *** Joins: crazyfrog__ (~crazyfrog@user/crazyfrog)
[14:09:25] *** Quits: crazyfrog (~crazyfrog@user/crazyfrog) (Ping timeout: 252 seconds)
[14:11:54] *** Quits: crazyfrog_ (~crazyfrog@user/crazyfrog) (Ping timeout: 260 seconds)
[14:12:09] *** Quits: crazyfrog__ (~crazyfrog@user/crazyfrog) (Remote host closed the connection)
[14:12:21] *** Joins: crazyfrog__ (~crazyfrog@user/crazyfrog)
[14:16:02] *** Joins: crazyfrog_ (~crazyfrog@user/crazyfrog)
[14:17:07] *** Quits: crazyfrog__ (~crazyfrog@user/crazyfrog) (Ping timeout: 252 seconds)
[14:30:25] *** Joins: dlundgren (~dlundgren@75-9-109-251.lightspeed.milwwi.sbcglobal.net)
[15:00:27] *** Quits: hansh (~hansh@36.84-48-255.nextgentel.com) (Ping timeout: 245 seconds)
[15:16:15] *** Joins: jetchisel (jetchisel@user/jetchisel)
[15:25:10] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Ping timeout: 252 seconds)
[15:49:48] *** Joins: Rockwood (~Rocky@user/rocky)
[16:26:22] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[16:39:54] *** Quits: CapitalistPunk (~Capitalis@liledevil.xs4all.nl) (Remote host closed the connection)
[16:41:22] *** Joins: CapitalistPunk (~Capitalis@liledevil.xs4all.nl)
[17:10:07] *** Quits: bodiccea (~bodiccea@user/bodiccea) (Ping timeout: 245 seconds)
[17:10:16] *** Joins: nekaii (nekaii@er.alltaf.online)
[17:10:19] *** Joins: bodiccea (~bodiccea@user/bodiccea)
[17:12:10] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 260 seconds)
[17:17:24] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[17:19:53] *** Joins: poncha (~poncha@user/poncha)
[17:25:55] <de-facto> is there a more minimal version of urlencode() ?
[17:26:47] <de-facto> i am trying to recreate the conversion when i copy an url out of chromes address bar, it only escapes the nessecary characters but not all dashes et
[17:27:18] <TinoDidriksen> That is also what urlencode() does.
[17:28:08] *** Joins: tex (~super@user/dix)
[17:29:02] <de-facto> yeah but it encodes every character, it seems to break the links when i assemble rss items
[17:29:26] <de-facto> it even does not let http:// alone
[17:29:47] <TinoDidriksen> It only encodes characters that are special in URLs.
[17:30:01] <TinoDidriksen> Of course it encodes :// ... those are special.
[17:30:51] <TinoDidriksen> urlencode() doesn't parse a URL first. It has no idea what is what - it just encodes given text.
[17:32:15] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[17:33:05] <de-facto> yeah i only want to encode nessecary chacacters, e.g. let https:// as it is
[17:33:28] <TinoDidriksen> Then only encode the parts that you need to encode.
[17:33:30] <de-facto> i dont want to put an url in an url, i only want to escape characters that are not allowed in an url
[17:33:38] <de-facto> yeah but how?
[17:33:38] <AllenJB> de-facto: Can you give an example that shows what / where you're outputting the URL to?
[17:34:10] <TinoDidriksen> Where do you get the URL from? Do you build it from components?
[17:34:45] <de-facto> example: "https://www.who.int/emergencies/disease-outbreak-news/item/human-infection-with-avian-influenza-a(h5n1)-ｰ-india" should become "https://www.who.int/emergencies/disease-outbreak-news/item/human-infection-with-avian-influenza-a(h5n1)-%EF%BD%B0-india"
[17:35:40] *** Quits: tex (~super@user/dix) ()
[17:35:43] <de-facto> first string from the page HTML source and second string copied from chrome address bar when opening that link
[17:36:03] <TinoDidriksen> If the first is from the HTML source, then that's valid as-is.
[17:36:51] <de-facto> well but it does not work when i put that string in my rss-brigde code, yet when i out the second string in there it seems to work
[17:37:00] <de-facto> hence i need to somehow recreate that encoding
[17:37:22] <TinoDidriksen> Sounds more like the RSS part is maybe not UTF-8?
[17:37:38] <de-facto> that could be yeah
[17:40:20] <de-facto> is there a function that can do the conversion "-ｰ-" -> "-%EF%BD%B0-"
[17:41:10] <Woet> de-facto: str_Replace.
[17:41:31] <AllenJB> Woet: lolwut?!?!?
[17:41:53] <Woet> he wants to only encode certain characters for no clear purpose
[17:42:02] <Woet> no library function is gonna match that requirement
[17:42:28] <Woet> de-facto: what you should be doing is running urlencode on the part that should not be a part of the url
[17:42:45] <Woet> for example, 'https://www.who.int/emergencies/disease-outbreak-news/item/'.urlencode($foo)
[17:43:42] <AllenJB> de-facto: Possible solution: Split the URL into its components using parse_url and parse_str, re-encode the appropriate components (urldecode - as they may already be (partially) encoded - then urlencode), then piece it back together (concatenation plus http_build_query)
[17:45:17] <biberu> perhaps double check that the input is encoded like you expect before you complicate things
[17:46:10] <AllenJB> see also rawurlencode / rawurldecode
[17:48:44] <de-facto> is there any php function that can take a utf8 string and only replace non-ascii chacaters with the % encoding?
[17:49:16] <de-facto> what is that even called?
[17:50:19] <de-facto> https://en.wikipedia.org/wiki/Percent-encoding
[17:51:25] <__adrian> looking at that example, i might suggest that you parse the article titles more carefully (e.g., only include the words and not punctuation)
[17:51:25] *** Joins: Poboy (~Poboy@user/poboy)
[17:51:48] <__adrian> that wouldn't really solve your issue, but then, i'm not sure why it would be an issue
[17:52:39] <de-facto> the issue is that when i put such an utf8 url in the object it gets deleted
[17:52:46] <de-facto> probably because its not encoded correctly
[17:53:13] <de-facto> rss-bridge $items object
[17:54:01] <__adrian> well, efbdb0 IS utf-8.  ｰ HALFWIDTH KATAKANA-HIRAGANA PROLONGED SOUND MARK
[17:54:26] <__adrian> i suspect someone somehow typed it instead of a dash though
[17:55:13] <__adrian> what's deleting it?
[17:55:23] <de-facto> something in the rss-bridge code
[17:55:28] <de-facto> i am not sure
[17:55:40] <__adrian> you should find out. that's probably where the problem is
[17:56:03] <de-facto> i only know that if i put that utf-8 string in there it vanishes but when i put the encoded string it gets through
[17:56:18] <__adrian> encode it then
[17:56:35] <__adrian> that part of your question was already answered
[17:57:02] <de-facto> that is my question
[17:57:05] <de-facto> how to encode it
[17:57:14] <__adrian> urlencode()
[17:57:20] <de-facto> yeah that does not work
[17:57:25] <__adrian> yes it does.
[17:57:26] <de-facto> it gets deleted
[17:57:29] <biberu> what is this rss bridge?
[17:57:42] <de-facto> https://github.com/RSS-Bridge/rss-bridge
[17:58:21] <__adrian> https://3v4l.org/ZpYvc
[17:59:07] <de-facto> ok thats what i need but only for non-ascii characters
[17:59:15] <__adrian> no, that's not correct.
[17:59:28] <__adrian> url encoding is for all characters with a special meaning in URLs.
[17:59:43] <de-facto> yeah and that breaks it in my case
[17:59:56] <__adrian> doesn't break. it works correctly
[18:00:19] <__adrian> if you only want to encode specific characters, then (as naswered above) you'd need to pick and choose those characters
[18:01:01] <__adrian> as i said, if you urlencode and it "breaks" then it's something else breaking it, and you should find out what that is
[18:16:30] <de-facto> i think it goes through this setURI function here https://github.com/RSS-Bridge/rss-bridge/blob/master/lib/FeedItem.php#L139
[18:26:52] *** Joins: Nekomander (~BadAdvice@user/badadvicecat)
[18:28:53] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[18:30:06] *** Quits: poncha (~poncha@user/poncha) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[18:30:25] *** Quits: crazyfrog_ (~crazyfrog@user/crazyfrog) (Remote host closed the connection)
[18:30:34] *** Joins: crazyfrog (~crazyfrog@user/crazyfrog)
[18:39:48] <znf> what exactly does: if (!@$argc) { die(0); } do
[18:39:51] <znf> I can not wrap my head around it
[18:40:12] <Blondie101010> do you know basic PHP syntax?
[18:40:16] <Blondie101010> what part is unclear?
[18:40:41] <Blondie101010> `!` is a boolean NOT
[18:41:08] <Blondie101010> `@` is a bad idea to hide errors, and is not even applicable in this case
[18:41:36] <Blondie101010> `$argc` is the CLI argument count
[18:43:11] <znf> so basically, it die()s if it's not called via CLI?
[18:44:34] * Blondie101010 nods
[18:46:07] *** Quits: Poboy (~Poboy@user/poboy) (Quit: Client closed)
[18:59:46] <de-facto> is there any php function to replace all non-ascii characters with a custom filter (e.g. urlencode)?
[19:04:25] <Blondie101010> de-facto: you were answered quite extensively already
[19:04:41] <Blondie101010> use str_replace() if you want to make your own rules
[19:04:51] *** Quits: guidoc (~guido@host-79-13-254-239.retail.telecomitalia.it) (Quit: WeeChat 3.2)
[19:05:05] *** Joins: guidoc (~guido@host-79-13-254-239.retail.telecomitalia.it)
[19:05:14] <Blondie101010> but it will be potentially broken by design
[19:05:19] <Blondie101010> keep that in mind ^^
[19:05:27] <de-facto> i dont want to make my own rules for all possible unicode replacements
[19:05:33] <Blondie101010> no
[19:05:58] <Blondie101010> unicode doesn't get changed in urlencode()
[19:06:16] <Blondie101010> it only replaces very specific chars
[19:06:53] <Blondie101010> you can't pass your whole URL to it as it wouldn't be a URL anymore, which is the intended behaviour
[19:07:04] <de-facto> huh? of course it replaces unicode
[19:07:08] <Blondie101010> you need to break it apart
[19:07:10] <Blondie101010> no
[19:07:55] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[19:07:56] *** Quits: Nekomander (~BadAdvice@user/badadvicecat) (Read error: Connection reset by peer)
[19:07:57] <Blondie101010> I don't know the list extensively but it's something like '[\/&?]' and a few others
[19:08:11] <de-facto> it replaces unicode as seen in the example https://3v4l.org/hltZg
[19:09:48] <Blondie101010> ohhhhhhhhhhhhhhhh
[19:10:05] <Blondie101010> and why doesn't that work in on the server?
[19:10:29] <Blondie101010> hold on, you probably don't control it
[19:10:33] <de-facto> look i need a function to pick out all non-ascii characters of a string and map them to urlencode
[19:10:48] <Blondie101010> ok well find one
[19:10:57] <de-facto> thanks that is my question
[19:11:10] <Blondie101010> you know why you're getting the problem you showed on 3v4l?
[19:11:36] <de-facto> what problem?
[19:13:28] <Blondie101010> the one you just showed on 3v4l..  but anyways encoding it that way should work
[19:13:43] <Blondie101010> can you show me a URL that doesn't work with it?
[19:15:02] <Blondie101010> if you start to look for bytes in a UTF8 string, you'll end up with a much bigger issue
[19:15:47] <de-facto> https://3v4l.org/J5j9L
[19:16:19] <Blondie101010> that works
[19:17:44] <de-facto> what works? i need that conversion
[19:17:54] <Blondie101010> the output you show opens properly
[19:18:28] <Blondie101010> so as adrian told you, your problem is elsewhere
[19:19:20] <de-facto> sigh, look i need to do that conversion from $input to $output
[19:19:38] <Blondie101010> yes, and you were explained how to do it
[19:19:43] <Blondie101010> you need to break down the URL
[19:20:07] <Blondie101010> !+parse_url
[19:20:07] <php-bot> parse_url ( string $url [, int $component = -1 ] ) : mixed - Parse an URL and return its components https://www.php.net/parse_url
[19:20:33] <de-facto> yes hence my question about how to detect non-ascii characters and replace them with urlencode
[19:22:12] <Blondie101010> https://3v4l.org/eTkAJ
[19:22:34] <Blondie101010> I didn't complete it as I prefer you learn to program
[19:22:42] <Blondie101010> but you need one more line to do the full task
[19:22:47] <Blondie101010> line/instruction
[19:23:19] <Blondie101010> it includes: dirname() and urlencode()
[19:24:12] *** Quits: crazyfrog (~crazyfrog@user/crazyfrog) (Ping timeout: 245 seconds)
[19:26:46] *** Joins: ferdna (~ferdna@user/ferdna)
[19:29:33] *** Joins: magla (~gelignite@55d48887.access.ecotel.net)
[19:29:47] <de-facto> yeah that does not work like that, since it also encodes ()
[19:29:57] <de-facto> as i said i need a function to map unicode
[19:30:51] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[19:31:40] <Blondie101010> show me what doesn't work
[19:31:52] <Blondie101010> I didn't try it but I'm quite positive this should work if completed properly
[19:33:48] <de-facto> prevent urlencode to touch the brackets but only convert utf8
[19:34:13] <de-facto> https://3v4l.org/HY5ON
[19:34:32] <Blondie101010> and it works dammit: https://www.who.int/emergencies/disease-outbreak-news/item/human-infection-with-avian-influenza-a%28h5n1%29-%EF%BD%B0-india
[19:34:55] <Blondie101010> did I suggest explode?
[19:35:13] <Blondie101010> guess it's pointless to hope you'll try to learn so here it is: https://3v4l.org/DBa5T
[19:36:56] <de-facto> maybe something like this? https://3v4l.org/uIB5M
[19:37:30] <de-facto> yeah it should not encode ( )
[19:37:38] <Blondie101010> I just gave you a much better solution which just needs a little cleanup
[19:37:45] <Blondie101010> why not?
[19:37:59] <Blondie101010> you didn't even try the link
[19:38:00] <de-facto> because its not the desired output
[19:38:04] <Blondie101010> it works!
[19:38:15] <de-facto> ok not for me
[19:38:29] <Blondie101010> ok so yeah go do your own and stop asking
[19:38:41] <Blondie101010> you got a better solution and refuse it without a reason
[19:38:44] <Blondie101010> have fun!
[19:38:54] <de-facto> its not producing $output
[19:39:02] <de-facto> hence does not solve the problem as stated
[19:40:13] <Blondie101010> your requirement is the problem you're dealing with
[19:40:17] <Blondie101010> and it is NOT justified
[19:40:28] <Blondie101010> the URL I output is functional
[19:43:59] *** Joins: Rockwood (~Rocky@user/rocky)
[19:44:59] <Blondie101010> de-facto:  just to be on the safe side, I even tried to open the resulting URL from PHP and wget and both worked
[19:47:39] <de-facto> what if at some other position of the url there appears utf8?
[19:47:57] <de-facto> i think its better to work at mb string level
[19:48:46] <Blondie101010> de-facto:  instead of arguing, prove my solution wrong
[19:49:01] <Blondie101010> then I'll look into it further, but I doubt you'll find a problem
[19:49:11] <de-facto>  != $output
[19:49:23] <Blondie101010> yeah that was your mistake
[19:49:26] <Blondie101010> not mine
[19:49:32] <Blondie101010> I produced a valid URL
[19:50:24] <de-facto> put any unicode in the other parts and it breaks
[19:52:14] <Blondie101010> what do you mean by "it breaks"?  what part doesn't work as expected?
[19:52:15] <Blondie101010> I'm not even sure why you want to URL encode part of the URL
[19:52:15] <Blondie101010> normally that would make sense only if you encoded the whole URL to pass it
[19:52:15] <Blondie101010> so there's something in your process that parses it down the line
[19:52:15] <Blondie101010> and that's probably the only part you should be looking at\
[19:52:58] <de-facto> https://3v4l.org/MCYgi
[19:54:05] <Blondie101010> ah I didn't say your function didn't do the job
[19:54:18] <Blondie101010> at first glance it looks sane
[19:54:43] <Blondie101010> not needed at all, especially not to patch for something that happens later in your code, but it seems to do what you want
[19:55:20] <de-facto> yes it puts the url in a format that goes through the rest of the code that i dont control
[19:56:11] <Blondie101010> so that code expects a URL but fails on a proper URL?
[19:56:33] <Blondie101010> the original qualifies as valid too
[19:58:04] <de-facto> yeah i know but somehow that is the case, it only accepts that converted input
[19:59:49] <biberu> de-facto: i guess it's failing on that call to filter_var? did you check the debug log?
[19:59:49] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[20:00:50] <Rockwood> __adrian, hi how are you sir?
[20:01:14] <biberu> Rockwood o/
[20:01:30] <Rockwood> biberu, o/ how are you bro?
[20:01:40] <Rockwood> whats going on today?
[20:04:22] <biberu> just busy with home stuff
[20:06:07] <Rockwood> yeah home means busyness
[20:06:13] <Rockwood> i can understand
[20:08:53] <de-facto> biberu, i cant really see a debug message appearing from that in the logs, the uri just is empty and gets replaced with the main uri of the site
[20:09:34] <Blondie101010> you can't look at the code where the real problem is?
[20:10:39] <de-facto> i think its in here somewhere https://github.com/RSS-Bridge/rss-bridge/blob/master/lib/FeedItem.php#L139
[20:10:55] <biberu> de-facto: i was thinking of https://github.com/RSS-Bridge/rss-bridge/blob/master/lib/FeedItem.php#L157
[20:11:57] <biberu> i guess that if you test that directly filter_var will reject the url with unencoded unicode characters in it
[20:13:08] <biberu> de-facto: like this: https://3v4l.org/ZiV7a
[20:13:57] <de-facto> hmmm yeah that looks like it fails to accept it there
[20:14:09] <Blondie101010> do a PR
[20:14:22] <biberu> de-facto: and as you see that function will only set $this->url again if it accepts the new value, but by then it has already deleted the old one
[20:14:52] <biberu> it'd be more robust of that function to validate before mutating the instance
[20:15:02] <Blondie101010> tempted to suggest a PR on FILTER_VALIDATE_URL but not sure if that would be well received
[20:15:10] <biberu> i'd rewrite that entire function
[20:16:48] <Blondie101010> I was about to say that this brings up a different alternative, and realized that is already done in most frameworks
[20:17:16] <de-facto> but why is that not  valid url then with the filter function?
[20:17:28] <__adrian> FILTER_VALIDATE_URL is working as intended. the way IDNs (and unicode) are supported is by encoding them. filter_var doesn't do that; you'd need to do it yourself.
[20:17:28] <biberu> https://3v4l.org/G1VpR
[20:17:31] <de-facto> rfc2396
[20:17:50] <Rockwood> if(!is_array($item)) i think no need
[20:17:50] <__adrian> this is a bug in the rss-bridge package
[20:18:38] <Rockwood> __construct($item = array()) <- already
[20:18:55] <__adrian> well, arguably, anyway.
[20:19:06] <__adrian> the sure way is for you to do it
[20:19:44] <Blondie101010> fixing the code that has the real bug is definitely the preferable approach
[20:19:49] <__adrian> i _would_ say rss-bridge is wrong for not throwing.
[20:20:11] <Blondie101010> I disagree
[20:20:13] <__adrian> it's silently failing
[20:20:17] <Blondie101010> it's wrong for not accepting it
[20:20:57] <__adrian> it might be nice if they took things like this into account (it's common and there's no reason not to), but it's not strictly wrong.
[20:21:14] <__adrian> and i'd agree it's probably unintentional, so in that sense, would be a bug
[20:21:17] <de-facto> so yeah i have to do it with my urlEncodeUTF8() function then? https://3v4l.org/fqKTHT
[20:21:41] <__adrian> de-facto: this has been answered repeatedly. you need to take only the part you want encoded, and encode it.
[20:22:07] <__adrian> you don't need a different function. you need to accept that the function you don't want to use for some reason, IS doing it right.
[20:22:23] <__adrian> just don't encode the part you don't want encoded.
[20:22:58] <biberu> Blondie101010: is it? rfc3986 says that a path segment can consist of unreserved / pct-encoded / sub-delims / ":" / "@", where unreserved is ALPHA / DIGIT / "-" / "." / "_" / "~"
[20:23:05] <Blondie101010> that got me digging and the php validation should use RFC3986
[20:23:20] <Blondie101010> that RFC allows UTF
[20:23:45] <biberu> https://datatracker.ietf.org/doc/html/rfc3986
[20:23:53] <Blondie101010> yes
[20:23:57] <__adrian> sure, would be nice if php also had FILTER_VALIDATE_URL_3986
[20:24:09] <Blondie101010> why not just replace it?
[20:24:12] <__adrian> bc
[20:24:23] <Blondie101010> only bad code should be impacted
[20:24:29] <Blondie101010> really really bad code
[20:24:42] <__adrian> that's never been a persuasive argument in the past  ;)
[20:24:48] <Blondie101010> :)
[20:24:56] <Blondie101010> but I'm not against adding a better filter
[20:25:46] <Rockwood> $this->title = null; // Clear previous data i don't so its good way to handle this
[20:26:11] <__adrian> but also not really a solution here. because even if you did it right, you can't ensure everyone updates at once.
[20:26:22] <biberu> hm, that character is a letter (modifier)
[20:26:27] <__adrian> yes
[20:26:33] <__adrian> its katagana
[20:26:52] <__adrian> i mentioned that above, someone's using it as a dash for some incomprehensible reason
[20:26:58] <biberu> katakana*
[20:27:04] <__adrian> (how would you even DO that by accident?)
[20:27:22] <__adrian> katakana
[20:27:27] <biberu> maybe you're japanese?
[20:27:41] <biberu> it could be a typo, as it appears between dashes
[20:27:55] <__adrian> if you were japanese i'd think you'd be MORE aware that it's not a dash
[20:28:03] <de-facto> id guess the dashes have been whitespaces and the utf8 das a normal dash before or such
[20:28:05] <biberu> people maek typos
[20:28:18] <__adrian> no, that's because something took the article typo and replaced spaces with dashes
[20:28:43] <__adrian> i.e., it was originally like  "...influenza a(h5n1) ｰ india"
[20:28:46] <de-facto> they probably use some cms or such
[20:28:49] <__adrian> yep
[20:29:04] <biberu> maybe you enter those urls manually in that cms ¯\_(ツ)_/¯
[20:29:06] <__adrian> article *title
[20:29:23] <__adrian> still, what keyboard is ｰ on?
[20:29:25] <de-facto> unfortunately their rss feed stopped working so i was very glad there is rss-bridge
[20:29:39] <__adrian> hard to imagine it happening by accident, and on purpose.
[20:29:44] <__adrian> just weird, is all.
[20:30:23] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Read error: Connection reset by peer)
[20:30:28] <Rockwood> de-facto, your code isn't looks prefect solution to me
[20:30:40] <de-facto> its really neat, less than 63 LOC and i got the RSS back
[20:30:43] <biberu> https://en.wikipedia.org/wiki/Ch%C5%8Donpu
[20:31:09] <de-facto> Rockwood, what would you suggest?
[20:31:11] <biberu> it's a normal character, like a - for us, but i don't know which version of it might be easily available on a japanese keyboard
[20:32:20] <Rockwood> you have ready for few changes like clear old and data type at time pass as argument
[20:32:23] <Blondie101010> since it does look like a typo, it's probably done by a non Japanese using a Japanese keyboard
[20:32:42] <__adrian> heh
[20:33:01] <biberu> either way that won't help de-facto, he'll just need to encode it again to use the url with that library
[20:33:31] <Blondie101010> or fix the lib <= my suggestion
[20:34:05] <__adrian> biberu: yeah, it might be the alt character on the H key (not sure) but still, seems even a non-japanese-reading person would notice the - (which is on the same key as on english keyboards) first
[20:34:19] <de-facto> biberu, yeah i think i use it like this https://3v4l.org/JACgq
[20:41:52] <biberu> __adrian: btw, perhaps it was bad to pick - as an example of a normal character because of the visual similarity, that character has a different function in japanese, but i guess you got that :)
[20:47:34] <Blondie101010> it's not even that similar
[20:48:12] *** Joins: sshrubber (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[20:50:04] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[21:03:37] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Quit: Leaving)
[21:04:17] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[21:06:41] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[21:11:40] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 252 seconds)
[21:11:48] *** Joins: wilk (~wilk@user/wilk)
[21:18:00] *** Joins: n1ceaf (~Mark_Pine@gateway/tor-sasl/markpinecone/x-88286818)
[21:19:54] *** Quits: Mark_Pinecone (~Mark_Pine@gateway/tor-sasl/markpinecone/x-88286818) (Ping timeout: 276 seconds)
[21:24:14] *** Joins: crazyfrog (~crazyfrog@user/crazyfrog)
[21:51:44] *** Joins: LucaTM (~LucaTM@user/lucatm)
[21:52:52] *** Joins: Rockwood_ (~Rocky@user/rocky)
[21:52:57] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 245 seconds)
[21:55:36] <__adrian> https://developer.salesforce.com/docs/atlas.en-us.234.0.api_rest.meta/api_rest/headers_queryoptions.htm
[21:55:39] <__adrian> omfg
[21:56:03] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[22:00:26] <TinoDidriksen> A whole header for a single variable? That must be some incredible technical debt.
[22:05:18] *** Joins: glumanda (~manu@194-208-201-025.tele.net)
[22:10:40] <__adrian> it's worse than that
[22:11:15] <__adrian> they paginate by total number of "records," which includes any records that might be under a top-level result
[22:11:42] <__adrian> so it's useless as pagination
[22:11:46] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Ping timeout: 252 seconds)
[22:13:09] *** Quits: glumanda (~manu@194-208-201-025.tele.net) (Quit: WeeChat 3.2.1)
[22:16:29] <ramblebamble> @__adrian, they don't even guarantee that the request is honoured in that way
[22:34:20] *** Quits: Rockwood_ (~Rocky@user/rocky) (Quit: The Time is Over)
[22:37:25] <__adrian> nope  :)
[22:37:50] <__adrian> queries are similar
[22:38:25] <__adrian> there's a "query is too complex" error that comes up sometimes. and it's usually based on how complex the query is _after_ it's pre-processed.
[22:39:00] <__adrian> it's like having to know what EXPLAIN ...  would tell you before knowing if your query is valid.
[22:39:27] <__adrian> (analogy; this is not sql)
[22:40:12] <__adrian> and i still don't know how they figure out field sizes. there are both "character" and "byte" length limits, and they _don't_ correlate
[22:42:25] <__adrian> not in ascii, not in utf-8, not in a 2-byte charset, not even in the "utf-8 but only like three bytes" concept
[22:48:02] *** Quits: simius (~simius@user/simius) (Ping timeout: 252 seconds)
[22:49:31] <ramblebamble> sounds like utf8mb3, so straight outta mysql
[22:50:15] *** Joins: simius (~simius@user/simius)
[22:52:36] <__adrian> it's not
[22:53:00] <__adrian> e.g., one field we have is 50 characters / 160 bytes
[22:53:43] <__adrian> and the ratio doesn't hold across examples. i don't know, maybe it's something the client can just pick at random when creating the record type.
[22:53:49] <__adrian> *user
[22:56:58] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[23:08:34] *** Quits: ReimuHakurei (~Reimu@raphi.vserver.alexingram.net) (Ping timeout: 260 seconds)
[23:10:34] <ramblebamble> @__adrian, well here is me being thankful that I am not working with salesforce :D
[23:12:02] <__adrian> :)
[23:13:44] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[23:16:17] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: WeeChat 3.2)
[23:16:31] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[23:20:49] *** Joins: ReimuHakurei (~Reimu@raphi.vserver.alexingram.net)
[23:26:49] *** Joins: semeion (~semeion@user/semeion)
[23:36:14] *** Quits: crazyfrog (~crazyfrog@user/crazyfrog) (Remote host closed the connection)
[23:36:31] *** Joins: crazyfrog (~crazyfrog@user/crazyfrog)
