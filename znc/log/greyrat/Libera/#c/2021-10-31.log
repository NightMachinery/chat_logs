[00:05:30] *** Quits: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67) (Quit: Leaving)
[00:05:50] *** Joins: auk (auk@gateway/vpn/protonvpn/auk)
[00:09:35] <twkm> yes klf.
[00:23:54] <Sos> klf, it's #pragma pack(1) for msvc if you need that
[00:24:02] *** Joins: ss4 (~wootehfoo@user/wootehfoot)
[00:24:08] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[00:26:58] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 260 seconds)
[00:26:59] *** Quits: ss4 (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[00:28:15] <klf> well, I compiled it with gcc and it seemed not to be affected by it.
[00:28:29] *** Joins: ss4 (~wootehfoo@user/wootehfoot)
[00:31:26] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 246 seconds)
[00:32:30] *** Joins: metabulation (~wootehfoo@user/wootehfoot)
[00:32:44] *** Joins: De4nWhit3 (~De4nWhit3@165-73-119-36.ip.afrihost.capetown)
[00:33:06] *** Quits: rgrinberg (~textual@190.113.111.74) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:33:55] *** Quits: marcello42 (~mp@p5dedb36a.dip0.t-ipconnect.de) (Quit: Konversation terminated!)
[00:34:01] *** Quits: metabulation (~wootehfoo@user/wootehfoot) (Remote host closed the connection)
[00:35:16] *** De4nWhit3 is now known as tempnewnamething
[00:36:12] *** Quits: tempnewnamething (~De4nWhit3@165-73-119-36.ip.afrihost.capetown) (Client Quit)
[00:36:27] *** Quits: ss4 (~wootehfoo@user/wootehfoot) (Ping timeout: 260 seconds)
[00:36:46] *** Joins: De4nWhit3 (~De4nWhit3@165-73-119-36.ip.afrihost.capetown)
[00:36:57] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[00:39:45] *** Joins: quartz (~quartz@user/quartz)
[00:43:53] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 264 seconds)
[00:46:35] *** Quits: eblip (~eb0t@90.211.41.180) (Ping timeout: 264 seconds)
[00:48:04] *** Joins: strajder (~strajder@user/strajder)
[00:48:27] *** Joins: eblip (~eb0t@90.196.142.2)
[00:54:28] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[00:58:14] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[01:01:35] *** Quits: mad_enz (~mad_enz@cpe00508b114c3e-cm788df7e75290.cpe.net.fido.ca) (Ping timeout: 264 seconds)
[01:04:02] *** Quits: nitrix (~nitrix@user/nitrix) (Quit: Genius is one percent inspiration and ninety-nine percent perspiration)
[01:06:05] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[01:07:46] *** Joins: Raguile (~Raguile@user/raguile)
[01:08:19] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: see you tomorrow)
[01:12:36] *** Joins: nitrix (~nitrix@user/nitrix)
[01:14:27] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[01:14:27] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[01:14:27] *** Joins: wroathe (~wroathe@user/wroathe)
[01:16:19] *** Quits: FragByte (~christian@user/fragbyte) (Quit: Quit)
[01:18:06] *** Joins: FragByte (~christian@user/fragbyte)
[01:19:14] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[01:21:16] *** Joins: FlipFlop (~FlipFlop@user/fl1pfl0p)
[01:23:00] <fizzie> How did you expect it to be "affected" exactly? That looks like the kind of structure where (assuming ICMP_DATA_SIZE is a multiple of 2) the only impact of __attribute__ ((packed)) would be a change of the required alignment from 2 to 1. https://0x0.st/-n_a.txt
[01:29:08] *** Joins: mgocobachi (~m@ancrae.com)
[01:30:50] *** Quits: chomwitt (~chomwitt@ppp-94-68-249-8.home.otenet.gr) (Ping timeout: 260 seconds)
[01:35:09] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[01:36:40] *** Parts: Raguile (~Raguile@user/raguile) ()
[01:39:24] *** Quits: LucaTM (~LucaTM@user/lucatm) (Ping timeout: 265 seconds)
[01:39:59] *** Quits: V-T60 (~v@91.203.24.166) (Ping timeout: 264 seconds)
[01:40:07] *** Joins: jtmusky (~jtmusky@104-1-122-97.lightspeed.okcbok.sbcglobal.net)
[01:40:17] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[01:41:46] *** Joins: mad_enz (~mad_enz@192-0-176-69.cpe.teksavvy.com)
[01:41:46] *** Quits: alch (~alch@pa-18-186-166.service.infuturo.it) (Ping timeout: 245 seconds)
[01:43:44] *** Joins: alch (~alch@ca-18-202-119.service.infuturo.it)
[01:44:10] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[01:44:15] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[01:47:51] *** Quits: imp (~imp@192-141-191-227.alternativaip.net.br) (Ping timeout: 260 seconds)
[01:48:29] *** Joins: serbest (~serbest@user/serbest)
[01:49:01] *** Quits: jtmusky (~jtmusky@104-1-122-97.lightspeed.okcbok.sbcglobal.net) (Quit: Bye)
[01:49:13] *** Joins: imp (~imp@192-141-191-227.alternativaip.net.br)
[01:50:46] *** Joins: owensjrw (~owensjrw1@2600:1700:b5b0:6380::41)
[01:51:28] <owensjrw> Good afternoon/evening all.
[01:52:28] <sham1> Good 1 in the morning
[01:52:56] <sham1> Just got home a bit ago and I suppose it'd be a good time to start heading to bed
[01:56:18] *** Quits: baltazar (~baltazar@193-110-63-186.cable-modem.hdsnet.hu) (Remote host closed the connection)
[01:57:25] <owensjrw> I read a question on a learning site for a practice exercise. Write a program that determines if and what box can fit in another box. I thought about a multidimensional array since all the sides and height would be same type of variable (int or something) but then thought about an array of structs. What would be the pros and cons?
[01:58:26] *** Quits: Posterdati (~posterdat@host-79-17-4-141.retail.telecomitalia.it) (Ping timeout: 245 seconds)
[01:58:30] <owensjrw> You must be far away from me sham1. I am in the US central time zone. Sleep well.
[01:58:45] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[02:00:46] <sham1> In Europe, so yeah
[02:01:38] <sham1> Anyway, for the boxes you could try to represent the box as simply the maximum it can hold
[02:02:37] *** Joins: baltazar (~baltazar@193-110-63-186.cable-modem.hdsnet.hu)
[02:02:42] <sham1> Well, the box' size and the maximum capacity assuming those are not the same thing. Then you can represent it as a graph, probably a tree
[02:06:31] <owensjrw> I would think though that the length, width, and height would need to be represented in variable because to fit in the other all three would have to be less than the other not just the capacity.
[02:08:14] *** Quits: klf (~fkl@135.12.180.212) (Remote host closed the connection)
[02:08:55] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[02:09:16] *** Quits: jess (~jess@libera/staff/jess) ()
[02:10:54] <nomagno> So, I have never taken data alignment into account in my code. What do I need to do to take care of this? Do I need to take care of this?
[02:12:20] *** Joins: Posterdati (~posterdat@host-79-17-4-141.retail.telecomitalia.it)
[02:13:12] <sham1> I think that with automatic storage variables (i.e. stack) the compiler arranges for you. There'd be no reason not to. As for when defining structs and such, you basically rearrange things so they have the least padding. Of course, you might not want to do this manually
[02:14:03] *** Quits: Akuli (~Akuli@213.216.210.11) (Quit: Leaving)
[02:14:52] <sham1> Since it is a trade-off. You might want to sacrifice having some padding versus having related stuff members next to each other
[02:16:00] *** Quits: brelod (~me@90.244.150.142) (Quit: leaving)
[02:17:26] <sham1> Unless you do silly stuff like using compiler pragmas to pack structs, you don't *really* need to care because all the data will be aligned properly by necessity
[02:18:03] *** Quits: pony (~ed@smol/hors) (Quit: WeeChat 3.3)
[02:18:32] *** Joins: jbauer_ (~jbauer@146.71.11.98)
[02:19:25] *** hors is now known as pony
[02:20:12] *** Joins: sonny (~sonny@8.6.144.238)
[02:20:59] *** Quits: jbauer (~jbauer@146.71.11.98) (Ping timeout: 260 seconds)
[02:23:28] <fizzie> Another occasion where you might need to care about alignment is if you want to pack a bunch of otherwise unrelated things into a single allocation (except for the simpler cases where you might just declare a struct, possibly with a FAM).
[02:23:47] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net) (Ping timeout: 264 seconds)
[02:24:18] <fizzie> For example, if you have a header followed by *two* variable-length sections, and want to put all of that into a single contiguous allocation.
[02:24:37] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net)
[02:25:26] *** Quits: mad_enz (~mad_enz@192-0-176-69.cpe.teksavvy.com) (Ping timeout: 260 seconds)
[02:38:15] *** Joins: mad_enz (~mad_enz@cpe00508b114c3e-cm788df7e75290.cpe.net.fido.ca)
[02:43:04] *** Quits: Albright (~Albright@2001:19f0:8001:ca4:377d:5cce:6c85:1730) (Quit: ZNC 1.8.2 - https://znc.in)
[02:43:17] *** Joins: Albright (~Albright@2001:19f0:8001:ca4:c9c9:9450:c028:8dd0)
[02:45:14] *** Parts: critr (~critr@50-1-165-103.dsl.dynamic.fusionbroadband.com) (.)
[02:45:59] *** Quits: mad_enz (~mad_enz@cpe00508b114c3e-cm788df7e75290.cpe.net.fido.ca) (Ping timeout: 264 seconds)
[02:47:29] *** Joins: pizdets (~pizdets@183.182.115.247)
[02:49:50] *** Quits: serbest (~serbest@user/serbest) (Quit: leaving)
[02:54:42] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[02:55:42] *** Joins: X-Scale` (~ARM@50.77.166.178.rev.vodafone.pt)
[02:57:23] *** Quits: X-Scale (~ARM@83.223.251.139) (Ping timeout: 264 seconds)
[02:58:20] *** Joins: rgrinberg (~textual@190.113.111.74)
[02:58:52] *** Joins: mad_enz (~mad_enz@192-0-176-69.cpe.teksavvy.com)
[02:58:55] *** X-Scale` is now known as X-Scale
[02:59:12] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[02:59:12] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[02:59:12] *** Joins: wroathe (~wroathe@user/wroathe)
[03:06:09] *** Quits: ethrl (uid524335@user/doforlove33) (Quit: Connection closed for inactivity)
[03:06:52] *** Quits: sonny (~sonny@8.6.144.238) (Quit: Going offline, see ya! (www.adiirc.com))
[03:17:04] *** Joins: serbest (~serbest@user/serbest)
[03:19:14] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[03:20:05] *** Joins: shivesh (~shivesh@user/shivesh)
[03:27:12] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[03:27:44] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[03:29:07] *** Quits: sivoais (~zaki@199.19.225.239) (Ping timeout: 240 seconds)
[03:29:20] *** Joins: sivoais (~zaki@199.19.225.239)
[03:30:10] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[03:30:17] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 246 seconds)
[03:30:31] *** Quits: ARoxdale (~ARoxdale@84.203.31.229) (Ping timeout: 245 seconds)
[03:31:18] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[03:33:33] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Remote host closed the connection)
[03:42:17] *** Quits: mad_enz (~mad_enz@192-0-176-69.cpe.teksavvy.com) (Remote host closed the connection)
[03:47:37] *** Joins: riposte (~finalripo@2403-5802-74-2-20c-29ff-fef3-ce22.ip6.aussiebb.net)
[03:48:36] *** Quits: acerbic (~acerbic@cs-xdata-50-86-50-181.cspire.com) (Read error: Connection reset by peer)
[03:48:50] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 246 seconds)
[03:48:59] *** Quits: auk (auk@gateway/vpn/protonvpn/auk) (Ping timeout: 264 seconds)
[03:49:55] *** Joins: Fairy (~Fairy@ti0004a400-4356.bb.online.no)
[03:50:41] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[03:50:43] *** Joins: HaMsTeRs (~Thunderbi@14-0-225-252.static.pccw-hkt.com)
[03:52:28] *** Quits: Fairy97 (~Fairy@2001:464a:4992:0:dd95:968b:982e:1ba9) (Ping timeout: 260 seconds)
[03:54:44] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[03:54:54] *** Quits: serbest (~serbest@user/serbest) (Quit: leaving)
[03:56:10] *** Joins: kadavul (~vazha@103.165.21.156)
[03:57:06] *** Quits: kadavul (~vazha@103.165.21.156) (Client Quit)
[03:59:16] *** Joins: ARoxdale (~ARoxdale@84.203.31.229)
[03:59:41] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 245 seconds)
[03:59:46] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[03:59:47] *** Quits: Inline (~Inline@2a02:908:1252:7a80:b384:bd52:ad64:846c) (Ping timeout: 264 seconds)
[04:01:19] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::2612) (Quit: Konversation terminated!)
[04:01:30] *** Joins: dohtem (uid524096@user/dohtem)
[04:01:35] *** Joins: Wulf (~Wulf@user/wulf)
[04:01:36] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[04:01:58] *** Quits: Echoz (~chris@user/echoz) (Quit: WeeChat 3.3)
[04:02:30] *** Quits: lkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 260 seconds)
[04:06:05] *** Joins: acerbic (~acerbic@cs-xdata-50-86-50-181.cspire.com)
[04:09:14] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:10:02] *** Joins: Macuser (~Macuser@216.30.159.201)
[04:10:15] *** Quits: supajerm (~supajerm@gateway/vpn/pia/supajerm) (Remote host closed the connection)
[04:11:14] *** Joins: katnis (uid15849@id-15849.helmsley.irccloud.com)
[04:11:21] *** Quits: random-nick (~random-ni@87.116.179.142) (Ping timeout: 245 seconds)
[04:16:39] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[04:16:39] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[04:16:39] *** Joins: wroathe (~wroathe@user/wroathe)
[04:20:18] *** Quits: rgrinberg (~textual@190.113.111.74) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:20:44] *** Quits: neightchan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Quit: WeeChat 2.9)
[04:20:56] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 245 seconds)
[04:25:56] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 245 seconds)
[04:34:53] *** Joins: ferdna (~ferdna@user/ferdna)
[04:39:15] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[04:39:30] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[04:52:15] *** Quits: finstern1s (~X@23.226.237.192) (Quit: leaving)
[04:53:15] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[04:54:23] *** Joins: finsternis (~X@23.226.237.192)
[04:55:45] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[05:00:07] *** Quits: johnnyreb (~tth@013-240-158-163.dynamic.caiway.nl) (Ping timeout: 260 seconds)
[05:00:26] *** Joins: johnnyreb (~tth@user/johnnyreb)
[05:02:15] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:06:58] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Ping timeout: 260 seconds)
[05:08:36] *** Joins: natechan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[05:14:30] *** Quits: natechan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Quit: WeeChat 2.9)
[05:15:04] *** Joins: euouae (~euouae@user/euouae)
[05:15:49] <euouae> so, I'm looking at some C libraries and I'm finding it quite crazy how hectic and all over the place they can be
[05:15:59] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 264 seconds)
[05:16:05] <euouae> This one is a security library with a test suite that doesn't even cover basic test caes
[05:16:06] <euouae> cases * 
[05:16:27] <BtbN> You must have not looked at a lot of other languages then if that surprises you
[05:16:57] <euouae> BtbN, yeah I admit I'm new to this. This library is GnuTLS in particular
[05:17:13] <apotheon> egad
[05:17:35] <apotheon> In my experience, most GNU software has some . . . major issues.
[05:17:42] *** Quits: HaMsTeRs (~Thunderbi@14-0-225-252.static.pccw-hkt.com) (Quit: HaMsTeRs)
[05:17:43] <euouae> Is this an abomination? There's a bug that says /* encrypt with NULL to maintain backwards compat */
[05:18:29] <Thedarkb-Desktop> My personal favourite is glibc being able to segfault if you give certain values to isalnum()
[05:18:55] <euouae> apotheon I'm getting into some deep stuff here, I was hoping to modify something in emacs C code, but I wasn't sure how, and GnuTLS doesn't document how
[05:19:35] <euouae> so I ended up peeking into the function source itself to figure it out, and it took me in a wild ride between public functions calling private functions, calling public functions again, and so on and so forth, and duplicate behavior too, and left me wondering if they ever zeroize certain memory, etc
[05:19:37] <apotheon> euouae: Gaze not too long into GNU source code, lest it also gaze into you.
[05:20:02] <Thedarkb-Desktop> ,cc for(int i=0;i<UINT_MAX;i++) isalnum(i);
[05:20:13] <candide> Thedarkb-Desktop: [warning: comparison of integer expressions of different signedness: 'i​nt' and 'unsigned i​nt' [-Wsign-compare]]
[05:20:17] <apotheon> I'm sorry I don't have anything useful to say here.  I need to get going.  I just think you ought to know that, when pondering opening up a GNU tool, "here there be dragons".
[05:20:32] <euouae> apotheon fair enough, appreciated
[05:21:04] <Thedarkb-Desktop> candide must not be on glibc, because it would've segfaulted by now...
[05:21:13] <candide> That's blatantly profound, T​hedarkb-Desktop
[05:21:35] <euouae> Thedarkb-Desktop , you're doing an integer overflow there, is that intentional?
[05:21:40] <Thedarkb-Desktop> ..no.
[05:21:43] <Thedarkb-Desktop> I just saw it.
[05:21:45] *** Quits: davros (~davros@host86-185-61-183.range86-185.btcentralplus.com) (Ping timeout: 260 seconds)
[05:21:52] <Thedarkb-Desktop> That was meant to be an unsigned int.
[05:22:04] <euouae> ok but still, isalnum takes an int
[05:22:17] <Thedarkb-Desktop> s/UINT_MAX/INT_MAX then.
[05:22:30] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[05:22:33] <Thedarkb-Desktop> sorry candide 
[05:22:41] <candide> T​hedarkb-Desktop, It's okay.
[05:22:41] <euouae> but it's undefined for values unrepresented by unsigned char 
[05:22:54] <euouae> https://pubs.opengroup.org/onlinepubs/009696799/functions/isalnum.html "The c argument is an int, the value of which the application shall ensure is representable as an unsigned char or equal to the value of the macro EOF. If the argument has any other value, the behavior is undefined."
[05:23:12] <Thedarkb-Desktop> Which is why it can segfault if you give it too high a number.
[05:23:21] <euouae> and that's fine :P 
[05:24:05] <euouae> Has anyone worked with GnuTLS here ? 
[05:24:38] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[05:27:47] *** Joins: rgrinberg (~textual@190.113.111.74)
[05:28:48] <euouae> it makes me sad. When I was younger, I was very pro-GPL. I'm sad that the security libraries are seemingly not very good (according to what I experience)
[05:29:19] *** Quits: jbauer_ (~jbauer@146.71.11.98) (Quit: Quitting)
[05:30:32] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[05:31:56] <Thedarkb-Desktop> You can be pro FOSS without being pro-GNU.
[05:32:19] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[05:33:25] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[05:34:08] *** Joins: tejr (~tejr@user/tejr)
[05:34:26] *** Joins: davros (~davros@host86-185-61-22.range86-185.btcentralplus.com)
[05:37:05] <euouae> is openssl the standard non-gnu crypto library? 
[05:38:16] *** Quits: welt (~welt@willow.spiderden.net) (Remote host closed the connection)
[05:39:06] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 260 seconds)
[05:39:43] *** Quits: alch (~alch@ca-18-202-119.service.infuturo.it) (Read error: Connection reset by peer)
[05:40:25] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[05:40:25] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[05:40:25] *** Joins: wroathe (~wroathe@user/wroathe)
[05:40:47] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[05:43:14] *** Quits: De4nWhit3 (~De4nWhit3@165-73-119-36.ip.afrihost.capetown) (Quit: Connection closed)
[05:43:56] *** Quits: acerbic (~acerbic@cs-xdata-50-86-50-181.cspire.com) (Read error: Connection reset by peer)
[05:44:11] *** Joins: alch (~alch@ca-18-210-25.service.infuturo.it)
[05:44:33] <Aighearach> euouae: could be, or maybe libressl, or in my world mbedtls
[05:45:19] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[05:45:21] *** Joins: mad_enz (~mad_enz@cpe00508b114c3e-cm788df7e75290.cpe.net.fido.ca)
[05:47:04] *** Quits: dutch (~DutchIngr@user/dutch) (Quit: WeeChat 3.3)
[05:48:34] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[05:49:13] *** Joins: dutch (~DutchIngr@user/dutch)
[05:55:14] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.3)
[05:56:05] <euouae> Aighearach thank you 
[05:57:16] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[06:02:02] *** Joins: acerbic (~acerbic@cs-xdata-50-86-50-181.cspire.com)
[06:02:51] *** Joins: g0z (gauze@entropy.tmok.com)
[06:05:00] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[06:05:26] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[06:14:32] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[06:17:11] *** Quits: johnnyreb (~tth@user/johnnyreb) (Ping timeout: 264 seconds)
[06:17:36] *** Joins: johnnyreb (~tth@user/johnnyreb)
[06:22:14] *** Joins: jbauer (~jbauer@146.71.11.98)
[06:22:14] *** Quits: jbauer (~jbauer@146.71.11.98) (Client Quit)
[06:22:30] *** Joins: The_Jag (~The_Jag@host-82-56-115-92.retail.telecomitalia.it)
[06:25:35] *** Quits: The_Jag_ (~The_Jag@host-79-32-14-38.retail.telecomitalia.it) (Ping timeout: 264 seconds)
[06:31:01] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[06:32:47] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 264 seconds)
[06:34:23] *** Joins: topside_ (~topside@ip68-226-238-34.lf.br.cox.net)
[06:38:47] *** Quits: topside (~topside@ip68-226-238-34.lf.br.cox.net) (Ping timeout: 264 seconds)
[06:43:02] *** Quits: ARoxdale (~ARoxdale@84.203.31.229) (Ping timeout: 260 seconds)
[06:45:27] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[06:46:24] *** Quits: reset (~reset@user/reset) (Quit: reset)
[06:52:36] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[06:55:29] *** Quits: b0nn (~shane@user/b0nn) (Remote host closed the connection)
[06:57:43] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[06:57:52] *** Quits: rgrinberg (~textual@190.113.111.74) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:00:06] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 245 seconds)
[07:00:20] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[07:02:12] *** Quits: johnnyreb (~tth@user/johnnyreb) (Read error: Connection reset by peer)
[07:03:00] *** Joins: b1101 (~b1101@pool-100-37-115-53.nycmny.fios.verizon.net)
[07:04:30] *** Joins: johnnyreb (~tth@user/johnnyreb)
[07:05:02] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[07:06:35] *** Quits: b1101 (~b1101@pool-100-37-115-53.nycmny.fios.verizon.net) (Client Quit)
[07:08:50] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[07:13:26] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 260 seconds)
[07:20:52] *** Quits: nostar (~nostar@68.51.221.108) (Quit: Leaving)
[07:21:44] *** Quits: frost (~frost@user/frost) (Ping timeout: 268 seconds)
[07:24:05] *** Joins: Viewday5 (~Viewday@user/viewday)
[07:26:27] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 268 seconds)
[07:26:27] *** Viewday5 is now known as Viewday
[07:33:27] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 268 seconds)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:45:42] *** Joins: jetchisel (jetchisel@user/jetchisel)
[07:45:54] *** Joins: natechan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[07:48:18] *** Quits: euouae (~euouae@user/euouae) (Quit: thank you for the help)
[07:55:55] *** Joins: pucara (~i@181.92.84.206)
[07:58:06] *** vinleod is now known as vdamewood
[07:59:29] *** Joins: mikoto-chan (~mikoto-ch@185.237.102.118)
[08:01:29] <katnis> got an assignment to make a .c code that copies a file and changes its name.  e.g.) ./copy wow.txt lol.txt. any good idea?
[08:02:23] *** Joins: riksteri (riksteri@gateway/vpn/airvpn/riksteri)
[08:05:00] *** Joins: larry87 (~quassel@98.40.245.193)
[08:05:48] <pnbeast> katnis, write the program.
[08:06:12] <katnis> am good at making problems
[08:06:35] <vdamewood> Make he problem first, then ask for help.
[08:07:01] <katnis> good idea. it says i made violations :D and make a breakpoint
[08:07:07] <katnis> ok i will be back
[08:10:22] <katnis> i am so dumb
[08:11:01] <katnis> fp is a file pointer. in this case, fp = fopen("a.txt", "w"); , can i use write and read at the same time?
[08:12:10] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[08:13:16] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:13:57] *** tinyweasel is now known as PieHasBeenEaten
[08:14:02] *** PieHasBeenEaten is now known as tinyweasel
[08:16:12] <vdamewood> katnis: read and write ton's use FILE*. They use POSIX file ID's.
[08:16:20] <vdamewood> s/ton's/don't/
[08:16:29] <katnis> ohhhh
[08:16:46] <katnis> posix.. should look it up
[08:17:03] <vdamewood> for what it's worth, POSIX isn't part of the C standard.
[08:17:03] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[08:17:03] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[08:17:03] *** Joins: wroathe (~wroathe@user/wroathe)
[08:17:10] <katnis> XD
[08:17:24] <vdamewood> (But the C standard is part of the POSIX standard.)
[08:17:32] <katnis> ...okay
[08:17:59] *** Joins: rgrinberg (~textual@190.113.111.74)
[08:18:04] *** Joins: monkey_ (~user@2803:d100:e440:314:23b8:c8fe:9b54:935a)
[08:18:16] <vdamewood> Well, technically C is a 'normative reference'.
[08:19:06] *** Quits: rgrinberg (~textual@190.113.111.74) (Client Quit)
[08:19:12] *** Joins: nostar (~nostar@68.51.221.108)
[08:25:30] *** Quits: Sos (~Sos@37.30.19.164.nat.umts.dynamic.t-mobile.pl) (Quit: Leaving)
[08:40:10] *** Quits: monkey_ (~user@2803:d100:e440:314:23b8:c8fe:9b54:935a) (Remote host closed the connection)
[08:43:57] *** Quits: soapsudsxx (~soapsudsx@209.221.40.155) (Remote host closed the connection)
[08:53:33] *** Joins: engest (~engest@50.39.189.203)
[08:54:26] <Aighearach> C can't really do two things at the same time anyway, so the answer is always "no"
[08:54:54] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[08:58:04] <vdamewood> Aighearach: Is no the answer to this question?
[09:00:45] <Aighearach> vdamewood: "Not enough information"
[09:01:08] <Aighearach> Oh, sorry, this is #c, "undefined"
[09:09:33] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[09:10:31] *** Quits: koffeinfriedhof (~koffeinfr@ubuntuusers/moderation/koffeinfriedhof) (Quit: WeeChat 3.3)
[09:11:29] *** Joins: koffeinfriedhof (~koffeinfr@ubuntuusers/moderation/koffeinfriedhof)
[09:15:42] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[09:20:19] *** Joins: missogra (~missogra@dynamic-077-006-010-197.77.6.pool.telefonica.de)
[09:23:10] *** Quits: mrec (~markus@sundtek.de) (Changing host)
[09:23:10] *** Joins: mrec (~markus@user/mrec)
[09:39:01] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[09:39:24] *** Quits: alch (~alch@ca-18-210-25.service.infuturo.it) (Read error: Connection reset by peer)
[09:39:34] *** Joins: frost (~frost@user/frost)
[09:40:31] *** Quits: engest (~engest@50.39.189.203) (Ping timeout: 245 seconds)
[09:44:31] *** Joins: alch (~alch@bo-18-158-111.service.infuturo.it)
[09:46:19] *** Quits: missogra (~missogra@dynamic-077-006-010-197.77.6.pool.telefonica.de) (Quit: Leaving)
[09:47:04] *** Quits: fossforus (~stan@99-173-128-32.lightspeed.rlghnc.sbcglobal.net) (Quit: WeeChat 3.2.1)
[09:53:51] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 245 seconds)
[09:56:14] *** Joins: alefir (~alefir@rrcs-24-43-248-58.west.biz.rr.com)
[09:56:48] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[09:56:51] *** Joins: bogdomania (bogdomania@user/bogdomania)
[09:58:03] *** Joins: dmaroo (~dhruv@2409:4070:2d02:f1a6:c52d:c594:e135:41e1)
[10:00:54] *** Quits: alefir (~alefir@rrcs-24-43-248-58.west.biz.rr.com) (Ping timeout: 260 seconds)
[10:01:35] *** Joins: missogra (~missogra@dynamic-077-006-010-197.77.6.pool.telefonica.de)
[10:04:56] *** Quits: pnbeast (~pnbeast@2601:140:4280:3c90::1) (Quit: WeeChat 2.7.1)
[10:05:15] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[10:09:06] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[10:10:45] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[10:10:45] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[10:10:45] *** Joins: wroathe (~wroathe@user/wroathe)
[10:15:50] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[10:20:02] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 260 seconds)
[10:22:28] *** Joins: jetchisel (jetchisel@user/jetchisel)
[10:25:37] *** Joins: LucaTM (~LucaTM@user/lucatm)
[10:26:48] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[10:26:52] *** Joins: chomwitt (~chomwitt@ppp-2-85-245-90.home.otenet.gr)
[10:29:52] *** Joins: b1101 (~b1101@pool-100-37-115-53.nycmny.fios.verizon.net)
[10:30:14] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[10:31:18] *** Quits: dohtem (uid524096@user/dohtem) (Quit: Connection closed for inactivity)
[10:39:42] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 260 seconds)
[10:41:49] *** Joins: jetchisel (jetchisel@user/jetchisel)
[10:42:39] *** Joins: extern (~archer@80.246.137.246)
[10:49:53] *** Joins: mrig (~AdiIRC@user/mrig)
[10:56:52] *** Joins: mjoerg (~user@user/mjoerg)
[10:58:46] *** Quits: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au) (Ping timeout: 260 seconds)
[11:00:35] *** Joins: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au)
[11:08:11] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 264 seconds)
[11:10:34] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[11:10:49] *** Quits: mjoerg (~user@user/mjoerg) (Remote host closed the connection)
[11:12:14] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[11:18:59] *** Quits: missogra (~missogra@dynamic-077-006-010-197.77.6.pool.telefonica.de) (Ping timeout: 264 seconds)
[11:20:02] *** Joins: welt (~welt@willow.spiderden.net)
[11:22:53] *** Quits: welt (~welt@willow.spiderden.net) (Remote host closed the connection)
[11:23:26] *** Joins: missogra (~missogra@dynamic-077-010-032-165.77.10.pool.telefonica.de)
[11:23:38] *** Joins: welt (~welt@willow.spiderden.net)
[11:24:58] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 260 seconds)
[11:26:05] *** Joins: kts (~kts@103.73.237.24)
[11:26:20] *** Joins: V-T60 (~v@91.203.24.166)
[11:26:30] *** Joins: earnestly (~earnest@user/earnestly)
[11:26:52] *** Quits: chomwitt (~chomwitt@ppp-2-85-245-90.home.otenet.gr) (Read error: Connection reset by peer)
[11:27:07] *** Joins: chomwitt (~chomwitt@2a02:587:dc02:9f00:12c3:7bff:fe6d:d374)
[11:31:52] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[11:33:17] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[11:37:01] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[11:38:00] *** Joins: aliosablack (~chomwitt@2a02:587:dc02:9f00:12c3:7bff:fe6d:d374)
[11:38:29] *** Quits: chomwitt (~chomwitt@2a02:587:dc02:9f00:12c3:7bff:fe6d:d374) (Read error: Connection reset by peer)
[11:44:57] *** Joins: Jong (~Jong@174.27.107.153)
[11:45:08] *** Joins: kadavul (~vazha@103.165.21.156)
[11:45:41] <Jong> Hi. Is it defined in the c spec that unsigned char is 1 byte? Or is that determined by the compiler / implementation?
[11:51:22] <Wulf> Jong: yes, it's 1 byte.
[11:52:00] <Wulf> Jong: but remember that a byte may have more than 8 bits.
[11:53:53] <Wulf> sizeof(char)
[11:54:04] <Wulf> candide: sizeof(char) ?
[11:54:04] <candide> The size of `char` is always 1, by definition. Multiplying by `sizeof (char)` adds no value and makes the code noisier.
[11:54:11] <Wulf> candide: sizeof(unsigned char) ?
[11:55:10] <sham1> They're the same size
[11:55:13] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[11:55:14] <sham1> As is signed char
[11:55:34] <Wulf> ,c11std 6.5.3.4p4
[11:55:36] <candide> http://www.iso-9899.info/n1570.html#6.5.3.4p4 [The sizeof and _Alignof operators] When sizeof is applied to an operand that has type char, unsigned char, or signed char, (or a qualified version thereof) the result is 1. When applied to an operand that has array type, the result is the total number of bytes in the array.103) When applied to an operand that has structure or union type, the result is the tot... <truncated; https://0x0.st/-n93.txt>
[11:55:44] <extern> Wulf: tried to tell that to my wife .. wasn't working
[11:56:46] <extern> Wulf: i hope your sizeof have bigger constant than mine 
[11:56:47] <Wulf> extern: guess so, sizeof(char) isn't overly romantic.
[11:57:54] <extern> ok jokes aside D: 
[12:00:13] *** Joins: cassepipe (~cassepipe@176-155-131-22.abo.bbox.fr)
[12:01:28] *** Joins: John99 (~johnny@87.200.94.90.dynamic.jazztel.es)
[12:04:18] <extern> cc, sizeof(extern)
[12:04:22] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[12:05:23] *** Joins: aradesh (~aradesh@user/aradesh)
[12:09:40] *** Quits: mikoto-chan (~mikoto-ch@185.237.102.118) (Read error: Connection reset by peer)
[12:13:51] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[12:14:30] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[12:17:26] <Jong> Wulf  but isn't size of some of the primitive types determined by the compiler?
[12:17:55] <Jong> where does it say which is up to the compiler and which is written in ink to be a certain size?
[12:18:17] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[12:19:06] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 260 seconds)
[12:19:16] *** Quits: kadavul (~vazha@103.165.21.156) (Ping timeout: 245 seconds)
[12:20:40] <sham1> Jong: in the standard
[12:20:40] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Read error: Connection reset by peer)
[12:20:44] <Wulf> Jong: candide quoted the relevant part of the standard.
[12:21:33] *** Joins: Inline (~Inline@2a02:908:1252:7a80:ba51:b2dc:656:c660)
[12:23:00] *** Quits: Haxxa (~Haxxa@122.199.46.64) (Quit: Haxxa flies away.)
[12:23:17] *** Quits: soul-d (~uknown@user/soul-d) (Read error: Connection reset by peer)
[12:23:20] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[12:24:10] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[12:24:44] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net)
[12:26:10] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[12:29:29] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[12:31:21] <Jong> thanks candide 
[12:31:36] <candide> np, J​ong
[12:32:47] *** Quits: gpanders (~gpanders@user/gpanders) (Ping timeout: 264 seconds)
[12:33:02] *** Joins: gpanders (~gpanders@user/gpanders)
[12:33:17] <Jong> candide how do you remember this stuff off the top of your head?
[12:33:24] <candide> Jong: Are you thinking clearly?
[12:33:34] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 260 seconds)
[12:34:45] <Jong> yes. I mean, you remember where in the standard documentation lied the answer to my question
[12:34:54] <John99> Jong, candide is a bot
[12:35:00] <candide> J​ohn99 is a bot!
[12:35:19] <Jong> oh..
[12:35:23] <John99> me too, true XD
[12:35:31] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[12:39:19] *** Joins: kadavul (~vazha@103.165.21.185)
[12:40:14] *** Quits: kts (~kts@103.73.237.24) (Quit: Konversation terminated!)
[12:40:27] <sham1> So it seems that candide passes the turing test
[12:42:31] *** Joins: imm__ (~imm_@user/imm/x-3405860)
[12:43:01] *** Quits: bookworm (~bookworm@neomutt/bookworm) ()
[12:44:05] <John99> one question, exist some GCC extension that allow me to pass a type as string? typeof(a) -> to char*
[12:44:18] <nomagno> ,cc #define AMIABOT() 1 \n printf("%i", AMIABOT());
[12:44:22] <candide> nomagno: 1
[12:44:30] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 260 seconds)
[12:44:37] <nomagno> It does not pass the Turing test.
[12:45:21] *** Joins: bookworm (~bookworm@neomutt/bookworm)
[12:48:08] *** Quits: cassepipe (~cassepipe@176-155-131-22.abo.bbox.fr) (Read error: No route to host)
[12:48:11] *** Joins: bajaba (~cassepipe@176-155-131-22.abo.bbox.fr)
[12:50:39] <John99> https://compiler-explorer.com/z/qTcfvv9ez
[12:50:40] <candide> Title of John99's link: Compiler Explorer
[12:52:31] <John99> Some  part of the standat ensures that when I assign two struct with VLA the  data will be copied at least up to the minimum common length?
[12:52:46] <John99> In my example work
[12:53:08] <John99> but i dont know if is something expected or a "compiler do taht"
[12:54:32] *** Quits: kadavul (~vazha@103.165.21.185) (Quit: Leaving)
[12:57:22] *** Quits: rahl (~rahl@102.114.115.142) (Ping timeout: 252 seconds)
[12:59:03] *** Joins: rahl (~rahl@102.114.153.205)
[13:00:02] *** Joins: NEYi (~NEYi@109.251.216.38)
[13:01:07] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[13:02:40] *** Joins: kadavul (~vazha@103.165.21.185)
[13:03:12] *** Quits: kadavul (~vazha@103.165.21.185) (Max SendQ exceeded)
[13:04:01] *** Joins: kadavul (~vazha@103.165.21.185)
[13:04:39] *** Joins: strajder (~strajder@user/strajder)
[13:04:45] *** Quits: kadavul (~vazha@103.165.21.185) (Max SendQ exceeded)
[13:05:29] *** Joins: kadavul (~vazha@103.165.21.185)
[13:08:58] *** Quits: mad_enz (~mad_enz@cpe00508b114c3e-cm788df7e75290.cpe.net.fido.ca) (Ping timeout: 260 seconds)
[13:09:09] *** Joins: ARoxdale (~ARoxdale@84.203.31.229)
[13:10:44] *** Joins: karakedi (~eAC53C340@user/karakedi)
[13:11:00] *** Joins: jetchisel (jetchisel@user/jetchisel)
[13:14:06] *** Quits: kadavul (~vazha@103.165.21.185) (Quit: Leaving)
[13:15:56] *** Joins: pert (~pert@fsf/member/pert)
[13:17:46] *** Joins: fabrizio (~fabrizio@ool-2f14d380.dyn.optonline.net)
[13:17:56] *** Joins: soul-d (~uknown@user/soul-d)
[13:19:00] *** fabrizio is now known as fabfab
[13:19:29] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[13:21:07] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[13:25:41] <pert> I am struggling to understand the use case for wide-oriented streams. I understand that they potentially allow the use of generalized multibyte encodings in the output file, but doesn't one need a non-standard extension (like GNU and Microsoft's fopen(..., "w,ccs=UTF-32")) to take advantage of this?
[13:26:48] <pert> Perhaps my misunderstanding comes from the fact that non-generalized multibyte strings are still required for the internal representation in the program. Perhaps the locale can prescribe the use of a generalized representation for external use only?
[13:27:51] *** Quits: aliosablack (~chomwitt@2a02:587:dc02:9f00:12c3:7bff:fe6d:d374) (Ping timeout: 260 seconds)
[13:28:10] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Quit: Leaving)
[13:28:22] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[13:30:23] *** Quits: missogra (~missogra@dynamic-077-010-032-165.77.10.pool.telefonica.de) (Ping timeout: 264 seconds)
[13:30:40] *** Quits: fabfab (~fabrizio@ool-2f14d380.dyn.optonline.net) (Quit: Leaving)
[13:32:25] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[13:33:47] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[13:37:38] *** Quits: bookworm (~bookworm@neomutt/bookworm) (Read error: Connection reset by peer)
[13:38:03] *** Joins: bookworm (~bookworm@neomutt/bookworm)
[13:39:18] *** Joins: aradesh (~aradesh@user/aradesh)
[13:39:33] *** Quits: alch (~alch@bo-18-158-111.service.infuturo.it) (Read error: Connection reset by peer)
[13:39:53] *** Joins: soliste (~soliste@88.164.90.135)
[13:40:00] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Remote host closed the connection)
[13:40:36] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[13:40:53] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[13:41:57] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (Quit: Changing server)
[13:42:03] *** Joins: norkle (~norkle@admin.nasa-g0v.com)
[13:43:19] *** norkle is now known as Norkle
[13:44:37] *** Joins: alch (~alch@pa-18-180-208.service.infuturo.it)
[13:46:36] *** Quits: V-T60 (~v@91.203.24.166) (Quit: Leaving.)
[13:48:22] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[13:52:28] *** Joins: V-T60 (~v@91.203.24.166)
[13:57:08] *** Quits: extern (~archer@80.246.137.246) (Quit: GL with getting graphics help in here)
[13:58:02] *** Quits: frost (~frost@user/frost) (Ping timeout: 260 seconds)
[13:59:16] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[13:59:39] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[14:03:41] *** Quits: vaio (~gary@user/ghost) (Remote host closed the connection)
[14:04:16] *** Joins: frost (~frost@user/frost)
[14:04:27] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:04:27] *** Joins: vaio (~gary@user/ghost)
[14:04:52] *** Joins: random-nick (~random-ni@87.116.165.220)
[14:05:09] *** Quits: vaio (~gary@user/ghost) (Remote host closed the connection)
[14:05:47] *** Joins: vaio (~gary@user/ghost)
[14:06:00] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[14:12:57] *** Joins: Klinda (~superleag@user/klinda)
[14:14:27] *** Quits: moose (~moose@user/moose) (Quit: Leaving)
[14:16:10] *** Quits: larry87 (~quassel@98.40.245.193) (Ping timeout: 260 seconds)
[14:29:32] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[14:32:10] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[14:32:57] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:33:42] *** Joins: csrf (~csrf@user/csrf)
[14:33:47] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[14:34:36] *** Joins: arinov (~arinov@213.194.126.155)
[14:37:50] *** Joins: Guest31 (~Guest31@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[14:39:02] *** Joins: chomwitt (~chomwitt@ppp-2-85-245-90.home.otenet.gr)
[14:41:42] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::2612)
[14:43:24] *** Quits: myon98 (~myon98@user/myon98) (Quit: Bouncer maintainance...)
[14:46:35] *** Joins: krux02 (~krux02@p200300ca8f00b9007f473b6073e7a3c7.dip0.t-ipconnect.de)
[14:47:11] *** Quits: alch (~alch@pa-18-180-208.service.infuturo.it) (Ping timeout: 260 seconds)
[14:48:30] *** Joins: alch (~alch@151.46.31.77)
[14:50:02] <Wulf> pert: Personally I don't see any good use case for wide chars. Use normal chars and UTF-8 ;-)
[14:50:21] <Wulf> And if your system doesn't support UTF-8, ditch it.
[14:50:59] *** Joins: cadmio (~cadmio@151.25.149.251)
[14:51:30] <cadmio> Hello
[14:51:42] <cadmio> I'm getting this GtkSourceView-CRITICAL **: 09:46:17.046: Highlighting a single line took too much time, syntax highlighting will be disabled
[14:52:04] <Wulf> cadmio: haha ;-)
[14:52:18] <cadmio> it seems to be this bug https://bugzilla.redhat.com/show_bug.cgi?id=1882163 but I'm not sure whether it's related to my install
[14:52:20] <candide> Title of cadmio's link: 1882163 – gedit disables HTML syntax highlighting due to hang upon entering <h1 to <h6 if the next line is empty
[14:52:34] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 260 seconds)
[14:52:44] <Wulf> cadmio: #a and #b couldn't help you? Continue with #d
[14:54:21] *** Quits: thing (~thing@user/thing) (Remote host closed the connection)
[14:55:14] *** Joins: thing (~thing@user/thing)
[14:56:12] *** Joins: nostoi (~nostoi@99.red-79-148-200.dynamicip.rima-tde.net)
[14:56:22] *** Quits: alch (~alch@151.46.31.77) (Ping timeout: 260 seconds)
[14:57:57] *** Joins: alch (~alch@151.68.71.233)
[14:59:11] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[14:59:42] <cadmio> btw, this is the incrimenated code https://paste.gnome.org/p82jhi6cc if someone knows the library
[15:00:23] <trenka> it's gtk, not C
[15:07:59] *** Joins: kaichiuchu (~kaichiuch@144.202.8.127)
[15:08:43] *** Joins: Rounin (~david@84.212.130.215)
[15:14:14] <Wulf> cadmio: #C isn't a support channel for random problems with other people's code that happens to be written in C.
[15:14:35] *** Quits: kaichiuchu (~kaichiuch@144.202.8.127) (Changing host)
[15:14:35] *** Joins: kaichiuchu (~kaichiuch@user/kaichiuchu)
[15:15:13] <nomagno> Any idea which standard/document describes the C99 stdlib?
[15:15:44] <pert> The C99 standard
[15:15:53] *** Parts: cadmio (~cadmio@151.25.149.251) (WeeChat 3.0)
[15:16:02] *** Joins: supernova (~AdminUser@2405:9800:ba11:6207:7584:7dd2:2b49:3de3)
[15:16:13] *** Joins: magla (~gelignite@55d47dc5.access.ecotel.net)
[15:16:42] <Wulf> candide: c99?
[15:16:42] <candide> C99 + TC1,2,3 working paper: http://open-std.org/JTC1/SC22/WG14/www/docs/n1256.pdf - C99 Overview: http://en.wikipedia.org/wiki/C99 - Changes from C89/C90: http://home.datacomm.ch/t_wolf/tw/c/c9x_changes.html - C Overview: http://en.wikipedia.org/wiki/C_programming - HTML version: http://port70.net/~nsz/c/c99/n1256.html
[15:19:55] <nomagno> Ah, page 177
[15:20:38] *** Quits: kaichiuchu (~kaichiuch@user/kaichiuchu) (Quit: leaving)
[15:20:54] *** Joins: kaichiuchu (~kaichiuch@144.202.8.127)
[15:20:54] *** Quits: kaichiuchu (~kaichiuch@144.202.8.127) (Changing host)
[15:20:54] *** Joins: kaichiuchu (~kaichiuch@user/kaichiuchu)
[15:21:22] *** Quits: kaichiuchu (~kaichiuch@user/kaichiuchu) (Client Quit)
[15:22:48] *** Joins: kaichiuchu (~kaichiuch@user/kaichiuchu)
[15:24:59] *** Joins: rnb (~rnb@23.184.48.6)
[15:31:46] *** Quits: V-T60 (~v@91.203.24.166) (Ping timeout: 260 seconds)
[15:32:46] *** Joins: henistein (~henistein@2001:8a0:fd33:b801:76c:1f52:3ea8:9184)
[15:35:00] *** Joins: Sos (~Sos@d42-155.icpnet.pl)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:04] <Wulf> nomagno: it might be easier to read the manpages that came with your C environment.
[15:37:05] *** Quits: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net) (Read error: Connection reset by peer)
[15:38:48] <nomagno> Wulf: Well Iike having the actual standard nearby. In this case, I definitely like having C and POSIX nearby to figure out which code is portable, which is probably fine, and which is definitely implementation-locked
[15:39:38] <trenka> nomagno: they ususally have CONFORMING TO section
[15:40:46] <Wulf> nomagno: portability only matter to a certain degree.
[15:41:36] <Wulf> nomagno: E.g. I don't care if code I write for an embedded system runs on Windows or some ancient environments.
[15:42:32] *** Joins: kts (~kts@103.73.237.175)
[15:43:42] <nomagno> Wulf: I think when I need implementation-specific interfaces, I will know it :P
[15:44:13] *** Quits: nostoi (~nostoi@99.red-79-148-200.dynamicip.rima-tde.net) (Quit: Leaving...)
[15:45:07] <Wulf> nomagno: last large project I wrote in C got some OS specific modules and some OS agnostic modules. Perhaps one day it needs to be ported to another OS, then I only have to rewrite some code.
[15:45:44] <nomagno> "Oh no, there are no resources on how to make a POSIX-restrained Tekken 7 clone for Windows! I can not continue with the project!"
[15:45:54] <nomagno> :P
[15:47:25] *** Joins: tradar (~tradar@user/tradar)
[15:47:54] *** Joins: myon98 (~myon98@user/myon98)
[15:49:58] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 260 seconds)
[15:50:14] *** Quits: jmpeax (~jmpeax@host-23-251-65-137.VALOLT4.epbfi.com) (Quit: leaving)
[15:50:39] *** Quits: supernova (~AdminUser@2405:9800:ba11:6207:7584:7dd2:2b49:3de3) (Quit: No Ping reply in 180 seconds.)
[15:51:48] *** Joins: supernova (~AdminUser@2405:9800:ba11:6207:191e:f533:940b:ddf4)
[15:57:51] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[15:58:26] *** Joins: longbow (~longbow@5-203-180-193.pat.nym.cosmote.net)
[16:00:13] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[16:00:49] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[16:01:54] *** gxt_ is now known as gxt
[16:04:18] *** Joins: seninha (~seninha@user/seninha)
[16:05:52] *** Joins: Macuser (~Macuser@216.30.159.201)
[16:06:29] *** Quits: Macuser (~Macuser@216.30.159.201) (Client Quit)
[16:13:16] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 265 seconds)
[16:15:47] *** Joins: gabriele (~gabriele@user/gabriele)
[16:15:58] *** Quits: rnb (~rnb@23.184.48.6) (Remote host closed the connection)
[16:16:56] *** Joins: rnb (~rnb@23.184.48.6)
[16:19:59] *** Quits: rnb (~rnb@23.184.48.6) (Remote host closed the connection)
[16:20:22] *** Joins: rnb (~rnb@23.184.48.6)
[16:22:42] *** Quits: frost (~frost@user/frost) (Ping timeout: 260 seconds)
[16:25:01] *** Joins: martti (~martti@46-126-48-136.dynamic.hispeed.ch)
[16:25:23] <martti> according to compilers, chdir("/") wants to have its return value checked. but imo... I can't think of a scenario where that wouldn't work out
[16:27:36] *** Joins: frost (~frost@user/frost)
[16:28:14] <pragma-> It's doubtful that the compiler is checking the argument. It's more likely that it's the `chdir` function itself that the compiler knows about, rather than any argument to it.
[16:28:25] *** Joins: smlavine (~smlavine@sourcehut/user/smlavine)
[16:29:58] <pragma-> In any case, anything can fail. Perhaps the removable storage was detached or the media failed.
[16:30:33] <Wulf> chmod 000 /
[16:31:25] <sham1> chdir might have a compiler-specific attribute attached telling you to check its return value
[16:32:27] <tradar> seccomp may block calls to chdir
[16:32:39] <sham1> It'd be fun to attach it to something like printf or something and have people discover for the first time that printf actually returns something and can, in fact, fail
[16:34:31] *** Joins: cassepipe (~cassepipe@176-155-131-22.abo.bbox.fr)
[16:34:54] *** Quits: bajaba (~cassepipe@176-155-131-22.abo.bbox.fr) (Remote host closed the connection)
[16:39:41] *** Quits: supernova (~AdminUser@2405:9800:ba11:6207:191e:f533:940b:ddf4) (Ping timeout: 245 seconds)
[16:40:00] <pragma-> I think they did put the attribute on printf for a while but then reverted it since it was so annoying.
[16:40:19] <pragma-> (void)printf(...); everywhere
[16:40:44] <Wulf> pragma-: I think that doesn't suppress the warnings.
[16:41:16] <sham1> It should. It suppresses a warning for unused arguments so I don't see why that would be different
[16:41:16] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Read error: Connection reset by peer)
[16:41:56] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[16:42:11] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 245 seconds)
[16:42:53] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[16:45:06] *** Quits: cassepipe (~cassepipe@176-155-131-22.abo.bbox.fr) (Ping timeout: 260 seconds)
[16:45:34] <pragma-> hm, warn_unused_result?
[16:46:48] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[16:46:51] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[16:49:00] <martti> yeah, that's set. this was spotted while compiling avahi-daemon on gentoo :)
[16:49:23] *** Joins: cassepipe (~cassepipe@176-155-131-22.abo.bbox.fr)
[16:49:24] <pragma-> The warn_unused_result attribute does warn if you use (void) on it. But it doesn't warn if you assign it to an object but then do nothing with the object. :p
[16:49:59] <pragma-> ,cc __attribute__((warn_unused_result)) int f(void) { return 0; }   (void)f();
[16:50:01] <candide> pragma-: [warning: ISO C forbids nested functions [-Wpedantic]  warning: ignoring return value of 'f' declared with attribute 'warn_unused_result' [-Wunused-result]]  Success (no output).
[16:50:11] <pragma-> ,cc __attribute__((warn_unused_result)) int f(void) { return 0; }   int a = f();
[16:50:14] <candide> pragma-: [warning: ISO C forbids nested functions [-Wpedantic]] no output: a = 0
[16:50:38] <pragma-> Sigh, I should make candide parse __attribute__ on functions so it doesn't nest main()
[16:52:23] *** Quits: owensjrw (~owensjrw1@2600:1700:b5b0:6380::41) (Quit: Leaving)
[16:52:31] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[16:53:06] *** Joins: meator (~meator@user/meator)
[16:53:12] *** Joins: Atque (~Atque@user/atque)
[16:56:18] <pragma-> I don't understand why they require double parentheses.
[16:57:05] *** Joins: fabfab (~fabrizio@ool-2f14d380.dyn.optonline.net)
[16:57:12] <sham1> Because GCC has always had weird syntax
[16:57:15] *** Joins: supernova (~AdminUser@2405:9800:ba11:6207:4053:d934:6545:5359)
[16:57:49] <sham1> Thankfully C23 is going to give us an actual attribute syntax. It's the one from C++11 which isn't much better, but at least it'll be a standard
[16:57:55] <pragma-> Ah, it's so you can #define a macro to remove them.
[16:58:09] <sham1> Hm
[16:58:32] <pragma-> Some attributes can take multiple parameters. Wrapping the whole thing in () allows you to write a simple #define to remove them if you're using a compiler that doesn't support attributes.
[16:58:48] <pragma-> Otherwise you'd have to use a variadic macro.
[16:59:05] <sham1> Interesting
[16:59:08] <pragma-> This was probably done at a time when C99 wasn't widely accepted yet.
[16:59:57] <nomagno> What is the difference between #define FOO (BAR) and #define FOO BAR ?
[17:00:22] <sham1> Of course C23 is also going to fix that (better late than never) since an implementation would have to at least parse the attribute, and it'll probably be just instructed to ignore any unknown attributes
[17:00:22] *** Joins: kish` (~aqua@user/aqua)
[17:01:26] *** Joins: superboot (~agentgasm@user/superboot)
[17:01:56] <pragma-> nomagno: in the first case, `FOO` will expand to `(BAR)`, in the latter case, it expands to `BAR`.
[17:03:01] <pragma-> But if there was no space between `FOO` and `(BAR)`, e.g. `#define FOO(BAR)` then FOO(...) expands to nothing, where `...` is any argument to FOO.
[17:03:35] <sham1> An easy way to trip up using macros
[17:03:42] <nomagno> Where can I find resources on C99 preprocessor usage? It all seems very ambiguous atm
[17:05:44] *** Joins: Guest9651 (~Guest96@178.176.78.191)
[17:06:42] <pragma-> The C99 draft covers everything about the preprocessor. Open it up and ctrl-F for "preprocess" and read each section.
[17:06:45] *** Joins: engest (~engest@50.39.176.86)
[17:07:50] <pragma-> 6.10.3 covers maco replacement, and you probably want to check out 6.4's lexical elements section as well.
[17:08:18] <sham1> I think every spec draft does
[17:08:29] <pragma-> Yeah, but he specified C99.
[17:08:47] *** Joins: serbest (~serbest@user/serbest)
[17:09:01] <sham1> Yes
[17:09:11] <pragma-> The section numbers might be different in C11 or C23.
[17:09:49] <pragma-> Which is kind of annoying. The C++ standard uses names instead of numbers now, for that reason.
[17:09:55] *** Quits: pucara (~i@181.92.84.206) (Quit: Lost terminal)
[17:10:56] <sham1> They also use a website with hyperlinks while a lot of the C drafts are PDFs with screwed up page numbers (my favourite…)
[17:12:02] <pragma-> The C99 draft infamously had "Septermber" at the bottom of every single page.
[17:12:09] *** Joins: Macuser (~Macuser@216.30.159.201)
[17:12:36] <sham1> Was it a September draft?
[17:12:39] <pragma-> Committee Draft -- Septermber 7, 2007 
[17:12:52] <pragma-> That appears on the footer of every page :)
[17:13:03] <sham1> Well then. That's just annoying
[17:13:37] <sham1> In a world where we have LaTeX, typesetting shouldn't cause this much pain
[17:13:42] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[17:13:51] *** Quits: Guest31 (~Guest31@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Ping timeout: 256 seconds)
[17:13:54] *** Quits: fabfab (~fabrizio@ool-2f14d380.dyn.optonline.net) (Quit: Leaving)
[17:15:48] <nomagno> Wait, is LaTeX written in Perl?
[17:17:09] <sham1> Well LaTeX is mostly just TeX macros, but I don't know how much Perl is used in the TeX stack
[17:17:10] *** Quits: rnb (~rnb@23.184.48.6) (Remote host closed the connection)
[17:17:19] <sham1> Well TeXLive stack for example
[17:17:23] *** Joins: rnb (~rnb@23.184.48.6)
[17:17:46] <nomagno> Is there a TeX spec?
[17:18:55] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[17:20:57] <sham1> If it could be found anywhere, I'd look in the TeX users group: https://tug.org
[17:21:00] <candide> Title of sham1's link: TeX Users Group (TUG)
[17:21:47] *** Quits: longbow (~longbow@5-203-180-193.pat.nym.cosmote.net) (Read error: Connection reset by peer)
[17:21:47] *** Joins: plastico (~plastico@neomutt/plastico)
[17:21:50] <dogbert2> ,botsnack
[17:21:50] * candide enthusiastically munches its ice-cold water.
[17:21:52] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[17:22:03] <sham1> How does one munch water
[17:22:14] <pragma-> ice-ish water
[17:22:21] <sham1> Hm
[17:22:26] <sham1> Could also be watery ice
[17:22:32] *** Parts: gabriele (~gabriele@user/gabriele) (Leaving)
[17:23:11] *** Quits: pert (~pert@fsf/member/pert) (Ping timeout: 264 seconds)
[17:23:29] *** Joins: longbow (~longbow@5-203-227-165.pat.nym.cosmote.net)
[17:23:40] <dogbert2> mebbe botsnack should be botbooze :)
[17:23:47] *** Quits: supernova (~AdminUser@2405:9800:ba11:6207:4053:d934:6545:5359) (Ping timeout: 264 seconds)
[17:24:29] <sham1> nomagno: and of course there's always Knuth's book on the subject
[17:25:18] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Quit: Leaving)
[17:26:13] *** Joins: V-T60 (~v@91.203.24.166)
[17:27:06] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 260 seconds)
[17:27:57] *** Joins: shivesh (~shivesh@user/shivesh)
[17:28:02] *** Quits: longbow (~longbow@5-203-227-165.pat.nym.cosmote.net) (Ping timeout: 260 seconds)
[17:28:09] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[17:29:01] *** Joins: earnestly (~earnest@user/earnestly)
[17:29:21] *** Joins: monkey_ (~user@2803:d100:e440:314:23b8:c8fe:9b54:935a)
[17:29:23] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Client Quit)
[17:31:06] *** Quits: John99 (~johnny@87.200.94.90.dynamic.jazztel.es) (Remote host closed the connection)
[17:35:14] *** Quits: dsrt^ (~dsrt@wsip-98-188-242-6.mc.at.cox.net) (Remote host closed the connection)
[17:35:30] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 260 seconds)
[17:36:13] *** Joins: seninha (~seninha@user/seninha)
[17:36:34] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[17:37:27] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[17:38:42] *** Quits: meator (~meator@user/meator) (Ping timeout: 260 seconds)
[17:43:27] *** Joins: humky (~humky@user/humky)
[17:44:00] *** Quits: acerbic (~acerbic@cs-xdata-50-86-50-181.cspire.com) (Read error: Connection reset by peer)
[17:44:13] *** Quits: tradar (~tradar@user/tradar) (Quit: tradar)
[17:44:54] *** Joins: supernova (~AdminUser@2405:9800:ba11:6207:21f3:2412:e60a:69a8)
[17:45:31] *** Quits: dmaroo (~dhruv@2409:4070:2d02:f1a6:c52d:c594:e135:41e1) (Ping timeout: 245 seconds)
[17:46:47] *** Joins: Tempesta (~Tempesta@user/tempesta)
[17:47:19] *** Quits: shivesh (~shivesh@user/shivesh) (Ping timeout: 260 seconds)
[17:48:13] *** Parts: Guest9651 (~Guest96@178.176.78.191) ()
[17:49:04] *** Joins: shivesh (~shivesh@user/shivesh)
[17:50:01] *** Quits: katnis (uid15849@id-15849.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[17:52:16] *** Quits: rnb (~rnb@23.184.48.6) (Remote host closed the connection)
[17:53:05] *** Joins: rnb (~rnb@23.184.48.6)
[17:56:44] *** Quits: goepsilongo (~goepsilon@2603-7000-ab00-62ed-10e8-ab4e-a062-ff16.res6.spectrum.com) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:56:54] *** Quits: shailangsa (~shailangs@host217-39-45-200.range217-39.btcentralplus.com) (Remote host closed the connection)
[17:57:12] *** Joins: goepsilongo (~goepsilon@2603-7000-ab00-62ed-b958-97b0-ca4d-4603.res6.spectrum.com)
[17:58:26] *** Quits: TommyC (~TommyC@user/tommyc) (Ping timeout: 245 seconds)
[17:59:11] *** Quits: henistein (~henistein@2001:8a0:fd33:b801:76c:1f52:3ea8:9184) (Ping timeout: 256 seconds)
[18:00:10] *** Joins: missogra (~missogra@dynamic-077-010-032-165.77.10.pool.telefonica.de)
[18:00:15] *** Joins: acerbic (~acerbic@cs-xdata-50-86-50-181.cspire.com)
[18:00:56] *** Quits: shivesh (~shivesh@user/shivesh) (Ping timeout: 245 seconds)
[18:01:05] *** Joins: shivesh (~shivesh@user/shivesh)
[18:01:10] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 260 seconds)
[18:04:01] <nomagno> Where A is a double pointer you can perform arithmetic on, why does *A++ give me a "computed value not used" warning, but *A+=1 not?
[18:07:00] <trenka> ,english *A++
[18:07:01] <candide> trenka: The dereference of increment `A` by one.
[18:07:03] <trenka> ,english *A += 1
[18:07:04] <candide> trenka: Increment the dereference of `A` by 1.
[18:07:36] *** Quits: alch (~alch@151.68.71.233) (Ping timeout: 245 seconds)
[18:07:45] <strajder> ,english ++*A
[18:07:46] <candide> strajder: Pre-increment the dereference of `A`.
[18:08:06] *** Quits: frost (~frost@user/frost) (Ping timeout: 260 seconds)
[18:08:10] *** Joins: dmaroo (~dhruv@2401:4900:4e0a:e039:807a:2eac:ba15:2bc2)
[18:08:18] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: see you later)
[18:08:27] <nomagno> Is this syntax difference between ++ and +=1 used anywhere but in pointers?
[18:08:51] *** Quits: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au) (Ping timeout: 245 seconds)
[18:08:52] <strajder> what syntax difference?
[18:09:19] <pragma-> it's not specific to pointers. it's a general shorthand for incrementing anything by 1
[18:09:31] *** Joins: alch (~alch@151.36.189.65)
[18:09:37] <trenka> ,english (*A)++
[18:09:38] <candide> trenka: Increment Evaluate the expression (the dereference of `A`) by one.
[18:09:56] <pragma-> i should give ,english some love
[18:10:02] <pragma-> it could use some improvement
[18:10:13] <pragma-> "increment evaluate" smh
[18:11:19] <nomagno> You could add a noun form of the verbs used
[18:11:36] <pragma-> it would be useful
[18:12:09] <nomagno> "Increment the Evaluation of the (expression the) dereference of `A` by one"
[18:12:20] *** Joins: Klinda (~superleag@user/klinda)
[18:12:45] *** Joins: henistein (~henistein@2001:8a0:fd33:b801:28c4:805e:7f3e:852c)
[18:13:58] <strajder> currently it lacks brackets imho "Increment (Evaluate the expression (the dereference of `A`)) by one."
[18:15:34] *** Joins: bitwiser (~dhruv@2409:4070:2d02:f1a6:c52d:c594:e135:41e1)
[18:15:59] *** Quits: dmaroo (~dhruv@2401:4900:4e0a:e039:807a:2eac:ba15:2bc2) (Ping timeout: 264 seconds)
[18:16:39] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[18:22:06] *** Joins: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au)
[18:25:10] *** Quits: magla (~gelignite@55d47dc5.access.ecotel.net) (Quit: Stay safe!)
[18:25:21] *** Quits: cassepipe (~cassepipe@176-155-131-22.abo.bbox.fr) (Remote host closed the connection)
[18:25:44] *** Joins: nrl^ (~nrl@wsip-98-188-242-6.mc.at.cox.net)
[18:26:12] <nomagno> ,english print 1
[18:26:13] <candide> nomagno: error: expected ';' before numeric constant
[18:26:33] <nomagno> ,english printf("%i", 1);
[18:26:34] <candide> nomagno: Call the function `printf` with arguments "%i" and 1.
[18:26:46] <nomagno> claps slowly
[18:27:47] *** Joins: TommyC (~TommyC@user/tommyc)
[18:28:10] <sham1> I don't know what you expected
[18:28:35] <pragma-> i almost made it parse all the printf specifiers
[18:28:39] <pragma-> but that would have been tedious
[18:29:02] <HisShadow> pragma-: steal code from glibc or musl
[18:29:38] <sham1> Probably musl more than glibc because that's bloaty
[18:30:11] <HisShadow> do people still use uclibc?
[18:30:53] *** Joins: defiant (~defiant@user/defiant)
[18:33:50] *** Joins: cart_man (~rynot@host-78-144-120-137.as13285.net)
[18:34:14] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 260 seconds)
[18:34:32] *** Joins: mad_enz (~mad_enz@cpe00508b114c3e-cm788df7e75290.cpe.net.fido.ca)
[18:37:36] *** Joins: shailangsa (~shailangs@host217-39-45-200.range217-39.btcentralplus.com)
[18:39:51] *** Joins: neuterion (~neuterion@user/neuterion)
[18:39:55] *** Joins: dodocrypto (~dodocrypt@user/dodocrypto)
[18:40:02] *** Parts: dodocrypto (~dodocrypt@user/dodocrypto) (Leaving)
[18:40:46] *** Quits: carlavilla (~carlavill@2a0c:5a84:3607:2f00:221:6bff:fe3b:cee4) (Remote host closed the connection)
[18:42:27] <fizzie> OpenWRT still uses uClibc (the uClibc-ng fork, specifically), as far as I know.
[18:50:34] *** Quits: smlavine (~smlavine@sourcehut/user/smlavine) (Ping timeout: 260 seconds)
[18:52:52] *** Joins: seninha_ (~seninha@user/seninha)
[18:53:20] *** Joins: ferdna (~ferdna@user/ferdna)
[18:54:01] <nomagno> https://termbin.com/3ewi
[18:54:09] <nomagno> Can I reduce the memory allocation on that first malloc somehow?
[18:54:47] *** Joins: supajerm (~supajerm@gateway/vpn/pia/supajerm)
[18:55:14] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 260 seconds)
[18:56:13] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:6575:10df:b6d2:a414)
[18:56:13] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:6575:10df:b6d2:a414) (Changing host)
[18:56:13] *** Joins: skapata (~Skapata@user/skapata)
[18:58:10] *** Quits: HisShadow (~HisShadow@user/hisshadow) (Ping timeout: 252 seconds)
[18:59:26] <Feuermagier> Can I somehow force a binary to use a specific dynamic library on launch?
[19:00:06] *** Joins: HisShadow (~HisShadow@user/hisshadow)
[19:01:00] <esselfe> Feuermagier: recompile it
[19:01:22] <nomagno> I mean, you can just replace the dynamic library with a compatible one
[19:01:27] *** Joins: tyler_ (~varioust@72-46-56-102.lnk.ne.static.allophone.net)
[19:01:36] <nomagno> Requires... a FAIR BIT of finnicking though
[19:01:55] <trenka> nomagno: if I understand correctly what you are trying to achieve, it must be malloc(sizeof(int *) * l)
[19:02:00] <defiant> duh, why do I always mistake this channel for C sharp (#C -> C#)
[19:02:04] <Feuermagier> esselfe, this is for a binary-exploitation project. I'd like to link my target program with the same glibc as on the target system
[19:02:04] <sham1> Feuermagier: LD_LIBRARY_PATH
[19:02:35] <sham1> #C# would make sense for the channel name of a C# channel now that I think about it, although it'd probably just be something boring like #Csharp
[19:02:38] <esselfe> I've once got hands on a program changing the lib name in it, but I can't recall the name
[19:02:44] <trenka> nomagno: and second is different as well
[19:02:48] <LiaoTao> nomagno, Is https://godbolt.org/z/KWhvW9r53 what you meant to be doing?
[19:02:52] <esselfe> with that you can expect crashes
[19:03:24] <esselfe> (due to symbol differences, missing functions and such
[19:03:25] *** Quits: tyler_ (~varioust@72-46-56-102.lnk.ne.static.allophone.net) (Client Quit)
[19:03:38] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[19:03:39] <LiaoTao> Oh, sorry, that should be malloc(w * sizeof(*re[i])) for the second call
[19:03:42] <LiaoTao> Silly typos
[19:03:51] *** Joins: varioust (~varioust@72-46-56-102.lnk.ne.static.allophone.net)
[19:05:32] <esselfe> oh found it! patchelf
[19:05:56] *** Quits: supernova (~AdminUser@2405:9800:ba11:6207:21f3:2412:e60a:69a8) (Ping timeout: 245 seconds)
[19:06:09] *** Quits: seninha_ (~seninha@user/seninha) (Quit: Leaving)
[19:06:25] *** Joins: magla (~gelignite@55d47dc5.access.ecotel.net)
[19:06:31] <esselfe> like if all references are the same but the code does something else it will work
[19:06:36] *** Joins: seninha (~seninha@user/seninha)
[19:07:26] <nomagno> LionTao: Yeah I already figured out the length had to be swapped out with width on that malloc. Only issue with the code is `w` HAS to be greater than 1. You swapped my wonderful pointer arithmetic with array indexing though :(
[19:07:33] <esselfe> so compare the two glibc with readelf
[19:07:37] <nomagno> Thanks for the rest though!
[19:08:20] <LiaoTao> nomagno, Isn't that what array indexing is for, anyway? :P
[19:08:31] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[19:08:44] <nomagno> This was just a little exercise to figure out array indexing, soooo
[19:08:59] <nomagno> Pointer arithmetic*
[19:09:25] <LiaoTao> nomagno, Now compact it down to a single malloc and calculate the proper index into the flattened array from the innermost loop
[19:09:35] <trenka> nomagno: the code is not about indexing only
[19:09:57] <nomagno> LiaoTao: Oh no, homework! On it
[19:10:32] <nomagno> (What is a flattened index?)
[19:11:09] *** Quits: sunny93 (~sunny93@wireguard/tunneler/sunny93) (Quit: Ping timeout (120 seconds))
[19:11:24] *** Joins: sunny93 (~sunny93@wireguard/tunneler/sunny93)
[19:11:29] <LiaoTao> A 2D array can be flattened in memory so that e.g. one row is laid out after the other sequentially
[19:11:53] <LiaoTao> And then you index it with some f(i,j) so that you get the correct element
[19:11:58] <pragma-> that's how arrays in C already are
[19:12:06] <Feuermagier> sham1, I assume LD_LIBRARY_PATH sets it for the current shell session?
[19:12:22] <sham1> For the program that it was defined for
[19:12:58] <LiaoTao> pragma-, Spoiler warning :(
[19:13:24] <esselfe> LD_LIBRARY_PATH is where the linker will look for libraries
[19:13:37] <esselfe> you want patchelf
[19:13:44] <esselfe> Feuermagier: ^
[19:14:11] *** Joins: smlavine (~smlavine@sourcehut/user/smlavine)
[19:14:38] <esselfe> Feuermagier: which versions are the two libc?
[19:15:06] <Feuermagier> esselfe, 2.33 vs 2.24
[19:17:04] <Feuermagier> atm my program links with my system libc (2.33) - I want it to link with an older version I have prepared
[19:18:26] *** Quits: smlavine (~smlavine@sourcehut/user/smlavine) (Ping timeout: 245 seconds)
[19:23:00] <pragma-> what is involved in "preparing" another libc?
[19:23:21] <Feuermagier> pragma-, trying out like 20 to find out which version the target uses
[19:24:11] *** Joins: smlavine (~smlavine@sourcehut/user/smlavine)
[19:24:23] *** Quits: useretail (~useretail@185.132.19.151) (Read error: Connection reset by peer)
[19:24:41] *** Joins: useretail (~useretail@185.132.19.151)
[19:27:32] *** Quits: serbest (~serbest@user/serbest) (Quit: leaving)
[19:29:41] <leonardus> Should header files be in the same directory as source flies?
[19:30:06] *** Quits: marcthe12 (~marcthe12@2001:470:69fc:105::8b6) (Quit: You have been kicked for being idle)
[19:30:33] <nomagno> LiaoTao: https://termbin.com/0zn3
[19:30:53] <nomagno> Simple as heck, but messed up the order of operations on the printf, which is the WORST thing ever for debugging :P
[19:30:54] *** Quits: V-T60 (~v@91.203.24.166) (Read error: Connection reset by peer)
[19:31:47] *** Joins: Tenn0 (~aydenholm@88.97.110.231)
[19:31:55] *** Joins: jbauer (~jbauer@146.71.11.98)
[19:32:10] *** Quits: jbauer (~jbauer@146.71.11.98) (Remote host closed the connection)
[19:35:32] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[19:35:32] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[19:35:32] *** Joins: wroathe (~wroathe@user/wroathe)
[19:37:09] *** Joins: soapsudsxx (~soapsudsx@209.221.40.155)
[19:37:16] *** Quits: Tenn0 (~aydenholm@88.97.110.231) (Quit: WeeChat 3.3)
[19:37:46] *** Joins: Tenn0 (~Tenn0@88.97.110.231)
[19:38:41] *** Quits: Tenn0 (~Tenn0@88.97.110.231) (Client Quit)
[19:38:57] *** Joins: juliopcrj (~juliopcrj@177.44.227.40)
[19:39:15] *** Joins: supernova (~AdminUser@2405:9800:ba11:6207:f538:68fb:7797:2dc)
[19:40:06] *** Quits: smlavine (~smlavine@sourcehut/user/smlavine) (Ping timeout: 260 seconds)
[19:40:34] *** Quits: cart_man (~rynot@host-78-144-120-137.as13285.net) (Ping timeout: 260 seconds)
[19:41:39] *** Joins: Tenn0 (~Tenn0@88.97.110.231)
[19:42:00] *** Quits: juliopcrj (~juliopcrj@177.44.227.40) (Client Quit)
[19:42:08] *** Quits: Tenn0 (~Tenn0@88.97.110.231) (Client Quit)
[19:43:34] *** Joins: pulse (~pulse@user/pulse)
[19:43:34] *** Joins: juliopcrj (~juliopcrj@177.44.227.40)
[19:43:52] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[19:45:38] *** Quits: monkey_ (~user@2803:d100:e440:314:23b8:c8fe:9b54:935a) (Ping timeout: 260 seconds)
[19:46:10] <LiaoTao> nomagno, Great
[19:46:16] <Feuermagier> where can I find old linker versions?
[19:46:37] <nomagno> Feuermagier: Which linker?
[19:46:38] <nomagno> LD?
[19:46:41] <Feuermagier> yes
[19:46:59] <Feuermagier> I'm looking for one that can link my libc-2.31.so
[19:51:31] <nomagno> Feuermagier: You can find all versions of the GNU binutils source code over at ftp.gnu.org/gnu/binutils/
[19:51:42] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[19:51:57] <Feuermagier> nomagno, huge thanks. This is hard to find in a search engine
[19:52:34] *** Joins: Inline_ (~Inline@2a02:908:1252:7a80:b3a8:c59a:e1f5:9b96)
[19:52:53] <nomagno> Feuermagier: For most of these 'ultra mega standard Unix tools', 90% of the time you can go to the GNU page for binutils OR coreutils
[19:53:01] *** Quits: Inline (~Inline@2a02:908:1252:7a80:ba51:b2dc:656:c660) (Ping timeout: 245 seconds)
[19:53:15] *** Quits: Inline_ (~Inline@2a02:908:1252:7a80:b3a8:c59a:e1f5:9b96) (Remote host closed the connection)
[19:54:05] *** Joins: Inline (~Inline@2a02:908:1252:7a80:b3a8:c59a:e1f5:9b96)
[19:54:19] *** Joins: monkey_ (~user@2803:d100:e440:314:23b8:c8fe:9b54:935a)
[19:57:23] *** Quits: khrbt (~znc@user/khrbt) (Ping timeout: 264 seconds)
[20:00:44] *** Joins: khrbt (~znc@user/khrbt)
[20:03:50] <Feuermagier> nomagno, do these happen to be anywhere as binary? - my compiler seems to have objections to compiling that stuff
[20:04:34] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[20:05:26] <nomagno> Feuermagier: if you are running a Debian-compatible distro (or at least one that supports converting DEB to RDP) , you can try digging around archive.debian.org
[20:05:48] <Feuermagier> thx
[20:05:53] <nomagno> archive.debian.org/debian/
[20:05:55] <nomagno> Sorry
[20:05:56] *** Joins: Betal (~Betal@user/betal)
[20:06:01] <nomagno> That last /Debian is important
[20:06:24] *** Joins: rnb_ (~rnb@23.184.48.6)
[20:06:54] *** Quits: rnb (~rnb@23.184.48.6) (Remote host closed the connection)
[20:08:06] *** Quits: varioust (~varioust@72-46-56-102.lnk.ne.static.allophone.net) (Ping timeout: 260 seconds)
[20:14:28] *** Joins: themasterbuilder (~user@89.17.155.85)
[20:19:22] *** Joins: Akuli (~Akuli@82-203-164-223.bb.dnainternet.fi)
[20:23:49] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[20:24:15] *** Joins: Tenn0 (~Tenn0@88.97.110.231)
[20:25:28] *** Quits: Tenn0 (~Tenn0@88.97.110.231) (Client Quit)
[20:25:45] <rcf> 4
[20:27:10] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[20:27:52] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[20:29:39] *** Quits: vaio (~gary@user/ghost) (Remote host closed the connection)
[20:29:47] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 264 seconds)
[20:30:16] *** Joins: vaio (~gary@user/ghost)
[20:30:54] *** Quits: monkey_ (~user@2803:d100:e440:314:23b8:c8fe:9b54:935a) (Ping timeout: 260 seconds)
[20:31:33] <Feuermagier> I'm trying to patchelf libc-2.31.so into my program using patchelf. I have now downloaded and compiled ld-2.31, but the program segfaults on launch
[20:31:39] <Feuermagier> any suggestions
[20:32:21] *** Quits: juliopcrj (~juliopcrj@177.44.227.40) (Quit: Leaving)
[20:33:42] *** Quits: khrbt (~znc@user/khrbt) (Ping timeout: 260 seconds)
[20:36:07] *** Joins: V-T60 (~v@91.203.24.166)
[20:38:21] *** Joins: lleo (~leo@31-161-228-100.mobile.kpn.net)
[20:40:19] *** Joins: aradesh (~aradesh@user/aradesh)
[20:43:12] *** Quits: rnb_ (~rnb@23.184.48.6) (Remote host closed the connection)
[20:45:55] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[20:45:55] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[20:45:55] *** Joins: wroathe (~wroathe@user/wroathe)
[20:48:38] *** Joins: cart_man (~rynot@cpc100914-uddi26-2-0-cust18.20-3.cable.virginm.net)
[20:50:17] *** Joins: mahmutov (~mahmutov@5.176.15.23)
[20:50:34] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[20:50:36] *** Quits: supernova (~AdminUser@2405:9800:ba11:6207:f538:68fb:7797:2dc) (Quit: No Ping reply in 180 seconds.)
[20:51:54] *** Joins: supernova (~AdminUser@2405:9800:ba11:6207:f538:68fb:7797:2dc)
[20:56:30] *** Joins: dohtem (uid524096@user/dohtem)
[20:56:49] *** Joins: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com)
[20:57:03] <kurahaupo> Feuermagier: run it in a debugger and find out more precisely where it segfaults
[20:57:47] <kurahaupo> also if you change to a different major version, you can't expect the library to be binary-compatible
[20:59:51] <Feuermagier> kurahaupo, the original binary was compiled for 2.31
[21:03:40] *** Quits: missogra (~missogra@dynamic-077-010-032-165.77.10.pool.telefonica.de) (Quit: Leaving)
[21:11:37] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[21:12:29] *** Joins: rcm888 (~u1@95.54.121.58)
[21:12:59] *** Quits: lleo (~leo@31-161-228-100.mobile.kpn.net) (Ping timeout: 264 seconds)
[21:13:56] <rcm888> why this code hangs sometimes when runs?
[21:13:59] <rcm888> https://bpa.st/IOAA
[21:14:32] <rcm888> with highlight https://bpa.st/LSTA
[21:19:58] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[21:20:18] *** Joins: Klinda (~superleag@user/klinda)
[21:20:37] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: see you later once again)
[21:25:40] <tk> rcm888: I'm no rocket scientist but by the documentation of msgget aren't you supposed to call it once per PID?
[21:26:50] <tk> rcm888: also, msgrcv and msgsnd have return values and set errno
[21:29:08] *** Joins: khrbt (~znc@user/khrbt)
[21:30:42] *** Joins: X-Scale` (~ARM@31.22.147.35)
[21:30:48] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[21:31:27] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[21:31:56] *** Quits: munkis (~mendel_mu@ool-ae2cb218.dyn.optonline.net) (Read error: Connection reset by peer)
[21:32:06] <rcm888> tk: tutorial says msgqid is the same for parent and child processes.
[21:32:24] *** Joins: munkis (~mendel_mu@ool-ae2cb218.dyn.optonline.net)
[21:33:02] *** Quits: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt) (Ping timeout: 260 seconds)
[21:33:41] *** Quits: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com) (Quit: varioust)
[21:33:51] <rcm888> tk, probably printf is not reentrant...
[21:34:23] *** X-Scale` is now known as X-Scale
[21:34:37] <rcm888> it doesnt "stacks" print tasks...
[21:34:39] <tk> why do you think printf's reentrancy has anything to do with it here?
[21:34:45] *** Quits: psb (sid500598@user/psb) (Ping timeout: 260 seconds)
[21:35:00] <rcm888> tk:  it is called from both threads
[21:35:31] *** Joins: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com)
[21:35:35] <tk> these are processes not threads, there is no shared memory like in threads
[21:35:39] <tk> there's no reentrancy issue here
[21:36:47] *** Joins: psb (sid500598@user/psb)
[21:37:26] <rcm888> tk: ok. may be there is some issue with print buffering?
[21:37:29] *** Joins: smlavine (~smlavine@sourcehut/user/smlavine)
[21:37:50] <tk> if the code which is failing is identical to the code you sent, there's no issue with printf
[21:38:01] <tk> if there's some other code you're not showing then that's a different question
[21:40:01] <rcm888> tk, I modified code to this: https://bpa.st/P6IQ but still sometimes hangs...
[21:41:11] <tk> it hangs?
[21:41:18] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[21:41:44] <rcm888> tk: yes, doesnt exit till I press Enter
[21:42:40] <kurahaupo> rcm888: The assignment on line 31 is wrong
[21:43:03] <kurahaupo> rcm888: btw what's your native language?
[21:44:11] <kurahaupo> rcm888: I would use one printf not two; just in case the first printf gets an error and sets errno
[21:44:33] <tk> one not three rather
[21:45:10] <kurahaupo> tk: Yes that too, depending on which branch you consider
[21:46:05] <nomagno> If you have a negative PID, what are you supposed to do!?
[21:46:16] <kurahaupo> If you're using GNU libc then printf has %m which will show the description for errno
[21:46:24] <tk> okay
[21:46:30] <Ox151> hello, with openssl there is a fuction EVP_EncryptUpdate and EVP_EncryptFinal_ex. The man page says EVP_EncryptUpdate can be ran multiple times. Would this mean that each time you run EVP_EncryptUpdate you change the offset for the ciphertext buffer and plaintext buffer? How would you know when to run EVP_EncryptFinal_ex? Can you ruse EVP_EncryptFinal_ex if all the bytes were already encrypted with EVP_EncryptUpdate? All examples ive
[21:46:30] <Ox151> seen have a plaintext to encrypt with a small buffer size of 128 or 256 bits. I am thinking how would you encrypt/decrypt large buffers with multiple blocks.
[21:46:41] <kurahaupo> nomagno: How would that happen? 
[21:47:02] <nomagno> kurahaupo: Buggy code on your side, and the fork() call failing
[21:47:14] <nomagno> You obviously can't have a negative PID :P
[21:47:31] <rcm888> Ok, I modded it some way, and figured aout that parent sometimes does not do printf https://bpa.st/43HQ
[21:48:00] <kurahaupo> rcm888: errno is not an 8-bit value, so returning errno in main is dubious
[21:48:44] <tk> rcm888: so the parent hangs on msgsnd
[21:49:53] <rcm888> tk, no, Child reports "received some vallue" 
[21:49:56] <nomagno> kurahaupo: if( (char *) errno == 0 ) return 1;
[21:50:16] <tk> rcm888: and is it the correct value?
[21:50:23] <kurahaupo> nomagno: very funny. ☹️
[21:50:28] <rcm888> tk: yes
[21:50:46] <tk> rcm888: okay, here's a hypothesis
[21:50:58] <rcm888> kurahaupo: main returns 8 bit value? or int?
[21:51:07] <tk> rcm888: the parent sends the message and exits, then child then receives the message, but the shell has already printed a prompt
[21:51:12] <tk> so you end up with an empty line in your shell
[21:51:19] <tk> and hitting "enter" just prints a new prompt
[21:51:24] <kurahaupo> rcm888: An 8-bit value, stored in an int
[21:51:37] <rcm888> tk, oh that may be. how to join child's process?
[21:51:41] <tk> wait
[21:51:44] <tk> the wait function
[21:51:46] <tk> or waitpid
[21:51:53] <kurahaupo> rcm888: waitpid(pid)
[21:52:39] <tk> because I was able to recreate a "it hangs" scenario (at least by your description) by putting a sleep in the child.
[21:53:43] <kurahaupo> rcm888: I suggest that instead of doing everything with one program, write separate programs for each piece, then run them in different orders and see how that affects the outcome
[21:58:04] *** Quits: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com) (Quit: varioust)
[22:00:57] *** Joins: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com)
[22:01:44] <nomagno> Ah nice, on my great 64-bit system I have no type capable of overflowing with a number bigger than 8 bits, so I have to simulate it with a lame check
[22:01:54] *** Quits: mahmutov (~mahmutov@5.176.15.23) (Ping timeout: 260 seconds)
[22:02:17] *** Quits: Phil-Work (~phil@62.3.100.20) (Remote host closed the connection)
[22:02:24] <nomagno> Computers these days... smh
[22:02:32] <rcm888> kurahaupo: I don't get it how to use wait()
[22:03:18] *** Joins: Ecophobia (~Ecophobia@mobile-access-2e844e-131.dhcp.inet.fi)
[22:03:18] *** Quits: Ecophobia (~Ecophobia@mobile-access-2e844e-131.dhcp.inet.fi) (Client Quit)
[22:04:26] *** Joins: Ecophobia (~Ecophobia@mobile-access-2e844e-131.dhcp.inet.fi)
[22:06:10] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[22:08:02] *** Quits: alch (~alch@151.36.189.65) (Ping timeout: 260 seconds)
[22:09:07] *** Joins: Phil-Work (~phil@62.3.100.20)
[22:09:17] *** Quits: Ecophobia (~Ecophobia@mobile-access-2e844e-131.dhcp.inet.fi) (Client Quit)
[22:09:53] *** Joins: alch (~alch@151.38.145.246)
[22:11:47] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:eba7:95bb:d099:a7d8) (Ping timeout: 264 seconds)
[22:17:28] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[22:17:42] *** Quits: riksteri (riksteri@gateway/vpn/airvpn/riksteri) (Quit: riksteri)
[22:18:10] <kurahaupo> rcm888: Can you read "man wait"?
[22:18:13] *** Joins: Tenn0 (~Tenn0@88.97.110.231)
[22:18:15] *** Quits: Tenn0 (~Tenn0@88.97.110.231) (Client Quit)
[22:18:39] <kurahaupo> rcm888: The parent process should wait for the child process, using its pid
[22:20:13] <kurahaupo> nomagno: You should have uint8_t on any regular system
[22:20:46] <kurahaupo> don't forget #include <stdint.h>
[22:22:31] *** Quits: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au) (Read error: Connection reset by peer)
[22:22:41] <rcm888> kurahaupo: I modded it some more, but bug remains https://bpa.st/FWEA
[22:22:51] *** Joins: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au)
[22:22:51] *** Joins: smlavine_ (~smlavine@sourcehut/user/smlavine)
[22:23:35] *** Quits: smlavine (~smlavine@sourcehut/user/smlavine) (Ping timeout: 260 seconds)
[22:23:41] *** smlavine_ is now known as smlavine
[22:25:09] <rcm888> I'm not getting this line: The value of options is an OR of zero or more of the following constants:
[22:28:04] <rcm888> I changed options to WUNTRACED, and the bug seems to be gone
[22:28:13] <kurahaupo> rcm888: OR refers to the bitwise "|" operator
[22:28:17] *** Joins: arinov (~arinov@78.187.169.227)
[22:29:00] <kurahaupo> rcm888: For basic operation you probably don't need any flags.
[22:29:51] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[22:29:54] <kurahaupo> (ie, use 0)
[22:30:17] <rcm888> kurahaupo: ok I got it from similar description.  The value of options is a result of OR operation with zero or more of the following constants:
[22:30:57] <rcm888> bdsm rtfm?
[22:31:26] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::2612) (Quit: Konversation terminated!)
[22:32:12] <kurahaupo> yep, POSIX is a form of masochism
[22:35:28] *** Joins: Betal (~Betal@user/betal)
[22:36:19] <rcm888> yees bug is gone, with this final attempt: https://bpa.st/TQJQ
[22:36:31] <rcm888> I'm done for today.
[22:36:53] *** Quits: Phil-Work (~phil@62.3.100.20) (Remote host closed the connection)
[22:37:29] *** Joins: Phil-Work (~phil@62.3.100.20)
[22:38:15] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:38:33] <rcm888> btw that code is taken from university example...
[22:41:58] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[22:42:13] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[22:45:05] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[22:45:07] *** Quits: henistein (~henistein@2001:8a0:fd33:b801:28c4:805e:7f3e:852c) (Quit: Client closed)
[22:47:14] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[22:51:50] *** Joins: u1_ (~u1@95.54.115.226)
[22:53:41] *** Quits: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com) (Quit: varioust)
[22:54:38] *** Quits: rcm888 (~u1@95.54.121.58) (Ping timeout: 260 seconds)
[22:55:48] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[22:56:23] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[22:57:21] *** Joins: fmac (bf93f83905@chat.sr.ht)
[22:57:26] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Client Quit)
[22:57:27] *** Joins: juliopcrj (~juliopcrj@177.44.227.40)
[23:03:34] *** Quits: shailangsa (~shailangs@host217-39-45-200.range217-39.btcentralplus.com) (Remote host closed the connection)
[23:05:28] *** Quits: bitwiser (~dhruv@2409:4070:2d02:f1a6:c52d:c594:e135:41e1) (Quit: Konversation terminated!)
[23:07:29] *** Quits: chasmo77 (~chas77@71.63.241.168) (Quit: It's just that easy)
[23:07:58] <Klinda> char a[10] = {'a', 'a', 'a', 'a'};
[23:08:11] <Klinda> how can you define an array of chars ?
[23:08:50] <Klinda> seems that in the end the program just add the termination
[23:09:29] <fizzie> You just defined an array of chars there.
[23:09:50] <Klinda> so why the strlen function works ?
[23:09:55] <fizzie> And an initializer that initialized the first four elements to 'a' and the last 6 to zero.
[23:10:02] <Klinda> ah ok
[23:10:07] <Klinda> how to not get the 0
[23:10:18] <fizzie> Initialize them explicitly to something else.
[23:10:19] <Klinda> a[4] ?
[23:10:41] <fizzie> Well, then you don't *have* the remaining elements, but sure.
[23:11:02] <Klinda> there is no 0 
[23:11:06] <Klinda> so strlen would crash
[23:11:14] <fizzie> Well, it would invoke undefined behavior.
[23:11:31] <fizzie> It doesn't need to crash; often there's a 0 *eventually* in memory.
[23:12:17] <Klinda> true
[23:12:18] <Klinda> ahah
[23:12:21] <Klinda> how can I crash it?
[23:12:29] <fizzie> But yeah, both `char a[4] = {'a', 'a', 'a', 'a'}` and `char a[4] = "aaaa"` produce an array of four elements, all of which are 'a', that you can't safely pass to strlen. (Using a string literal to initialize an array that's just the right size not to include the '\0' is a specially allowed case.)
[23:13:23] <Klinda> I just want that the program crash, but seems it always produce results
[23:13:26] *** Quits: supernova (~AdminUser@2405:9800:ba11:6207:f538:68fb:7797:2dc) (Quit: No Ping reply in 180 seconds.)
[23:13:39] <fizzie> How to make something *crash* is a pretty implementation-specific question. But passing a null pointer has a good chance of it.
[23:14:02] <fizzie> Or compiling with runtime checks for invalid memory accesses, or passing it a pointer to a page that has no zeros and nothing mapped after it in the address space.
[23:14:34] *** Joins: supernova (~AdminUser@2405:9800:ba11:6207:38c6:e51e:3e7a:fa9e)
[23:14:42] <Klinda> fizzie: https://onlinegdb.com/cl5g9iVdI 
[23:14:48] <Klinda> look what I did it doesn't crash
[23:15:45] <fizzie> Well, yeah, it wouldn't, if there's a '\0' anywhere in readable memory after the string.
[23:16:12] <fizzie> ,cc -fsanitize=address char a[4] = "aaaa"; printf("%zu", strlen(a)); // it's still undefined, though
[23:16:15] <candide> fizzie: ================================================================= ==56393==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fffd2680c64 at pc 0x7f75c32b5ec6 bp 0x7fffd2680c20 sp 0x7fffd26803d0 READ of size 5 at 0x7fffd2680c64 thread T0     #0 0x7f75c32b5ec5 in __interceptor_strlen.part.0 (/lib64/libasan.so.6+0x3cec5)     #1 0x4025f4 in main      #2 0x7f75c309d55f in __libc_start_call_m... <truncated; https://0x0.st/-n4r.txt>
[23:17:30] *** Quits: Inline (~Inline@2a02:908:1252:7a80:b3a8:c59a:e1f5:9b96) (Ping timeout: 260 seconds)
[23:17:45] <fizzie> If you must convince your `func1` to crash, without something like -fsanitize=address, sounds like the best way would be to carefully craft a situation where trying to find the '\0' would attempt to read from unmapped memory.
[23:17:57] *** Quits: ntwk (~ntwk@user/ntwk) (Read error: Connection reset by peer)
[23:19:01] <Klinda> so you mean I am always lucky that I read a 0 in the memory also if I don't terminate it?
[23:20:49] *** Joins: qwerty (~qwerty@user/badkarma)
[23:21:03] *** Quits: V-T60 (~v@91.203.24.166) (Quit: Leaving.)
[23:22:50] <Klinda> also your code in gdblive
[23:22:54] <Klinda> it's working
[23:22:56] <Klinda> char a[4] = "aaaa"; 
[23:22:58] <Klinda>     printf("%zu", strlen(a));
[23:23:14] <Klinda> the results it's 4
[23:23:18] <Klinda> result*
[23:23:28] <fizzie> Yes, because it isn't running under -fsanitize=address, which catches out-of-bounds memory accesses at runtime.
[23:23:56] <Klinda> so what can I do?
[23:24:15] <fizzie> ,cc char a[4] = "aaaa"; printf("%zu", strlen(a)); // it doesn't crash on candide by default either, though it doesn't result in 4
[23:24:17] <candide> fizzie: 5
[23:24:38] <fizzie> I did suggest a thing already.
[23:24:58] <fizzie> ,cc extern void *mmap(void *, size_t, int, int, int, off_t); extern int mprotect(void *, size_t, int); char *a = mmap(0, 0x2000, 3, 0x22, -1, 0); mprotect(a+0x1000, 0x1000, 0); memset(a, 'a', 0x1000); printf("%zu", strlen(a)); // for example
[23:25:01] <candide> fizzie: Program received signal SIGSEGV, Segmentation fault in __strlen_sse2 () called by main () at statement: printf("%zu", strlen(a)); <local variables: a = 0x7ffff6e50000 'a' <repeats 200 times>>
[23:25:03] <Klinda> I don't understand it, maybe I try to see what is fsanitize
[23:25:34] <Klinda> no you are saying hard stuff 
[23:25:38] <Klinda> now*
[23:25:50] <fizzie> But just to reiterate, how to make undefined behavior do something you want ("crash") is inherently specific to your implementation, because that's what undefined behavior is -- undefined.
[23:26:39] <Klinda> if you are saying that it's lucky that you get the 0 in the memory, so why did it ouput the correct answer?
[23:26:52] <Klinda> cause you find the next value the 0 ?
[23:27:03] <Klinda> in the memory?
[23:27:17] <fizzie> Yes, which isn't particularly unlikely. Anyway, you just saw it output the *incorrect* answer (5) on candide.
[23:27:19] <kurahaupo> Klinda: raise(SIGSEGV) generally makes most programs die
[23:27:26] <candide> f​izzie, That's slightly pointless.
[23:27:43] <pragma-> knock it off candide
[23:27:51] <fizzie> Such an attitude for a piece of software.
[23:27:56] <candide> That's very boring, p​ragma-
[23:28:33] <pragma-> it needs an attitude adjustment
[23:28:39] <pragma-> ,factfind boring
[23:28:39] <candide> Found 5 factoids containing 'boring': [#c] bcsllc-steve boring rtfb [global channel] human_adjectives question_type
[23:28:56] *** Quits: supernova (~AdminUser@2405:9800:ba11:6207:38c6:e51e:3e7a:fa9e) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:28:57] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[23:29:07] *** Joins: Macuser (~Macuser@216.30.159.201)
[23:29:45] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Remote host closed the connection)
[23:30:08] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[23:32:09] *** Joins: ntwk (~ntwk@user/ntwk)
[23:32:36] *** Quits: luizfrds (~Luiz@152.250.243.147) (Read error: Connection reset by peer)
[23:33:58] <Klinda> how can I raise a sigsegv signal?
[23:35:02] <earnestly> kill(3)?
[23:35:05] <fizzie> What kurahupo suggested was literally it. Except with a semicolon at the end.
[23:35:27] *** Quits: Nautilus (~me2@d27-96-220-62.nap.wideopenwest.com) (Ping timeout: 260 seconds)
[23:36:15] *** Joins: Inline (~Inline@2a02:908:1252:7a80:e007:8711:e7b4:2641)
[23:36:16] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[23:37:36] <Klinda> so how can an attacker have patient to find a way to crash the program? if you are always lucky and you get the 0
[23:37:44] <Klinda> always..
[23:37:46] <Klinda> :D
[23:38:16] *** Joins: V-T60 (~v@91.203.24.166)
[23:38:38] <Klinda> if I put: 
[23:38:40] <Klinda> raise(SIGSEGV);
[23:38:44] <Klinda> in the main
[23:38:52] <Klinda> it doesn't work
[23:38:52] <candide> Klinda: Please stop abusing the enter key. Feel free to type longer messages and to take a moment to think of anything else to say before you hit that enter key.
[23:38:58] *** Quits: arinov (~arinov@78.187.169.227) (Ping timeout: 260 seconds)
[23:39:14] <fizzie> And what does "it doesn't work" mean in this instance? 
[23:39:57] <Klinda> I wanna just wanna see what happens when you get that error
[23:40:30] <pragma-> ,cc char *p = 0; *p = 0;
[23:40:32] <candide> pragma-:  runtime error: store to null pointer of type 'char' Program received signal SIGSEGV, Segmentation fault at statement: *p = 0; <local variables: p = 0x0>
[23:41:03] <pragma-> ,cc raise(SIGSEGV);
[23:41:08] <candide> pragma-: Program received signal SIGSEGV, Segmentation fault in pthread_kill@GLIBC_2.2.5 () called by raise () called by main () at statement: raise(SIGSEGV);
[23:41:45] *** Joins: shailangsa (~shailangs@host217-39-45-200.range217-39.btcentralplus.com)
[23:41:55] <earnestly> Klinda: Did you include <signal.h>?
[23:42:01] <Klinda> yes
[23:42:17] <Klinda> https://onlinegdb.com/S0sDAbSou
[23:42:56] <fizzie> Yeah, press "debug" instead of "run" (and type "run" in the debugger) to see that it actually terminates with a SIGSEGV.
[23:43:20] <pragma-> Klinda: you should replace `strlen(src)+1` with `strlen(src)+sizeof(char)`
[23:43:21] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[23:43:22] <fizzie> In the "run" mode, onlinegdb.com would appear to just terminate execution and report a nonsense exit code 0, which is pretty misleading.
[23:43:25] * pragma- nods
[23:43:37] * pragma- hides ,sizeof(char) behind his back
[23:45:08] <Klinda> pragma-: why?
[23:45:20] <pragma-> consistency with the rest of your sizeof(char)s
[23:45:49] <Klinda> ok cause my logic was, let's add the termination char
[23:45:50] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[23:46:06] *** Quits: nostar (~nostar@68.51.221.108) (Quit: Leaving)
[23:46:50] *** Quits: cart_man (~rynot@cpc100914-uddi26-2-0-cust18.20-3.cable.virginm.net) (Quit: Konversation terminated!)
[23:50:49] <Klinda> raise (sig=<optimized out>) at ../sysdeps/unix/sysv/linux/raise.c:50
[23:51:05] <Klinda> Program received signal SIGSEGV, Segmentation fault.
[23:51:11] <Klinda> nice
[23:51:27] *** Joins: jinsun__ (~quassel@user/jinsun)
[23:52:29] <pragma-> you'll get a sigsegv eventually with that printf 
[23:53:01] *** Quits: Famine_ (~Famine@user/famine) (Ping timeout: 245 seconds)
[23:53:02] <Klinda> why?
[23:53:32] <pragma-> someday somehow someone might pass a string containing %s
[23:53:58] <Klinda> oh yes format string vulnerability
[23:54:09] <Klinda> but dst can't be touch
[23:54:31] <Klinda> oh yes now I understand
[23:54:32] <Klinda> eheh
[23:54:41] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 245 seconds)
[23:54:46] <Klinda> yes I need to do "%s", dst
[23:57:12] *** Parts: alch (~alch@151.38.145.246) ()
[23:59:16] *** Joins: h2409 (~h2409@2607:fea8:3d81:3d00::f699)
