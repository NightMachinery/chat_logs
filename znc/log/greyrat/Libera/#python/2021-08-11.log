[00:00:12] <zware> mike18: Still not sure how you mean; do you want the str, repr, pickle, json dump, what?
[00:00:14] <SnoopJ> zware, as they said, passing it to logging will work if your object knows how to turn itself into a string the way you want (i.e. it has a meaningful __str__)
[00:00:21] <SnoopJ> err, sorry, that's for mike18 ^
[00:00:49] <mike18> SnoopJ: the problem is not all is in string available
[00:01:06] <SnoopJ> mike18, you should give a more complete description of the problem
[00:03:01] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[00:03:14] *** Quits: IgIgOrzoy (~IgIgOrzoy@user/igigorzoy) (Quit: Client closed)
[00:03:15] *** Quits: kindablu| (znc@irc.tpurist.com) (Quit: System Rebooting..)
[00:03:53] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 248 seconds)
[00:04:03] *** Joins: kindablue (znc@irc.tpurist.com)
[00:04:57] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 248 seconds)
[00:08:56] *** Joins: gambl0re (~gambl0re@24.140.237.124)
[00:10:56] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:5ced:8697:4c5:e97d)
[00:11:54] *** Joins: zeden (~zeden@user/zeden)
[00:13:21] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:5ced:8697:4c5:e97d) (Client Quit)
[00:16:19] *** Joins: fortuno51 (~fortuno51@78.10.204.223)
[00:16:40] <AhmedAmerican> await can't be used within `lambda` ?
[00:16:48] <AhmedAmerican> something like `df1['Request'] = df1['Request'].apply(lambda x: await parser(x))`
[00:16:55] <zware> AhmedAmerican: `lambda` creates a synchronous function
[00:17:01] *** Quits: fortuno51_ (~fortuno51@37.120.156.254) (Read error: Connection reset by peer)
[00:17:13] *** Quits: molt (~molt@79.140.150.21) (Ping timeout: 248 seconds)
[00:17:14] <AhmedAmerican> alright so i don't need to make my function async then
[00:17:55] *** Joins: fortuno51_ (~fortuno51@37.120.156.254)
[00:19:35] <AhmedAmerican> I've `df['Expire']` as `object` where it's contain values as `6/2021`, now if i want to get what is bigger than `6/2021` without modifying the shape of column, how can i do that?
[00:20:55] *** Quits: fortuno51 (~fortuno51@78.10.204.223) (Ping timeout: 268 seconds)
[00:20:57] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 248 seconds)
[00:21:39] *** Joins: majuscule (~majuscule@disinclined.org)
[00:21:51] <majuscule> How can I both comma format and right justify a number at the same time in an fstring? i.e. i need both :, and :>20. doesn't seem like i can combine them
[00:22:41] <bjs> majuscule: doesn't {:>20,} work?
[00:22:43] <zware> majuscule: `f'{123456578:>20,}'`
[00:23:10] <matsaman> why does that remind me of Perl? =P
[00:23:27] *** Joins: odoood (~odoood@2601:c8:c003:a550::8)
[00:23:45] <majuscule> ah, it does, thanks all. i was trying in reverse, i.e. :,>20
[00:24:10] <zware> majuscule: See https://docs.python.org/3/library/string.html#format-specification-mini-language for the full docs on the string format mini-language
[00:24:21] <bjs> majuscule: that won't work because , is the grouping option which comes _after_ any alignment arguments https://docs.python.org/3/library/string.html#format-specification-mini-language
[00:25:07] *** Quits: y1n (~y1n@84-115-65-215.wifi.dynamic.surfer.at) (Ping timeout: 258 seconds)
[00:25:30] *** Quits: bam32 (~bambams@user/bambams) (Ping timeout: 272 seconds)
[00:25:31] <zware> majuscule: Or just remember that you can in fact use all the options, and if they don't work one way around try the other ;)
[00:25:33] <AhmedAmerican> here's the `pandas` column https://bpa.st/7ITA which i would like to filter what is bigger than `5/2021` for example without modifying column shape
[00:27:24] *** Quits: daoudr (~daoudr@178.197.212.193) (Quit: Leaving)
[00:28:38] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[00:29:10] *** Quits: georgios (~georgios@user/georgios) (Ping timeout: 268 seconds)
[00:29:53] *** Quits: roryrjb (~roryrjb@212.102.49.189) (Quit: WeeChat 3.0.1)
[00:30:11] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[00:30:23] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:30:31] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[00:32:18] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::682e) (Quit: Konversation terminated!)
[00:32:39] *** Quits: gambl0re (~gambl0re@24.140.237.124) (Ping timeout: 268 seconds)
[00:33:58] <zware> AhmedAmerican: Unfortunately, pandas is outside of my experience
[00:34:01] *** Quits: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net) (Remote host closed the connection)
[00:35:28] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[00:36:46] *** Joins: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net)
[00:36:56] <SnoopJ> AhmedAmerican, it's not clear what "without modifying column shape" means here, but the dtype for that looks weird, it's using `object` instead of one of the pandas date types
[00:37:05] *** Quits: magla (~gelignite@55d43c1b.access.ecotel.net) (Quit: Stay safe!)
[00:37:24] *** Joins: y1n (~y1n@84-115-65-215.wifi.dynamic.surfer.at)
[00:38:22] <AhmedAmerican> SnoopJ: I've used `df1['Expiration'] = pd.to_datetime(df1['Expiration']).dt.to_period('m')` and right now the output is like the following https://bpa.st/BT4A
[00:39:05] <AhmedAmerican> now I'll filter what is bigger than `05/2021` and then i need to reformat the column shape to be `mm-yyyy`
[00:40:22] *** Quits: kindablue (znc@irc.tpurist.com) (Quit: System Rebooting..)
[00:40:25] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[00:41:09] *** Joins: kindablue (znc@irc.tpurist.com)
[00:41:48] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:5ced:8697:4c5:e97d)
[00:42:45] *** Quits: sadg (~odd@cpc113812-lea23-2-0-cust1375.6-3.cable.virginm.net) (Quit: WeeChat 3.2)
[00:42:50] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[00:45:05] *** Quits: Haxxa (~Haxxa@122-199-44-36.ip4.superloop.com) (Quit: Haxxa flies away.)
[00:45:25] *** Joins: matrixskp (~matrixskp@121-75-182-31.dyn.vf.net.nz)
[00:46:03] *** Joins: Haxxa (~Haxxa@122-199-44-36.ip4.superloop.com)
[00:47:02] *** Quits: greedom (~greedom@2001:16b8:2e6e:f900:c740:67ea:2ea6:bbe6) (Remote host closed the connection)
[00:47:19] <SnoopJ> AhmedAmerican, you should be able to do `test_period = pd.Period(year=2021, month=5, freq='M'); filtered = s[s > p]` where `s` is your Series, but using periods for this seems kinda weird. The concept of using comparison like this should generalize across most pandas types, though.
[00:48:40] *** Joins: ska (~ska@user/ska)
[00:48:58] * SnoopJ would assume an expiration would be a Timestamp, not a Period
[00:49:39] *** Quits: somlis (~somlis@user/somlis) (Quit: WeeChat 3.2)
[00:50:22] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[00:50:45] <ska> I'm looking to setup a testing environment (pytest) that can setup a Hashicorp Vault, and test against it. I know that hvac can test against an existing vault, but how can pytest setup the vault server itself?
[00:51:42] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Quit: ZNC 1.8.2 - https://znc.in)
[00:51:47] <rndm> is there a right way to have a dataclass inherit from an abstract base class? the inheriting dataclass should be considered abstract too. it just adds fields and doesn't implement any methods
[00:52:23] *** Joins: somlis (~somlis@user/somlis)
[00:52:41] <rndm> (goal is to silence mypy which complains: Only concrete class can be given where...)
[00:52:51] <bjs> rndm: where what?
[00:53:07] <rndm> bjs:  where "Type[ColumnPolicy[T]]" is expected
[00:53:15] <rndm> (and thank you for the extended discussion yesterday)
[00:53:16] *** Joins: besnn (~besnn@user/besnn)
[00:53:17] <bjs> rndm: maybe you should share the code?
[00:53:45] *** Joins: georgios (~georgios@user/georgios)
[00:54:28] *** Quits: besnn (~besnn@user/besnn) (Read error: Connection reset by peer)
[00:54:30] <bjs> rndm: if it was you with the Callable[] stuff and mutability,  I'll point out that that question was impossible to answer without the full picture
[00:54:33] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 248 seconds)
[00:54:33] <bjs> so ...
[00:54:37] <rndm> https://pastebin.com/amR4vAxg
[00:54:56] <bjs> rndm: what line is mypy complaining about?
[00:55:03] <rndm> @dataclass
[00:55:15] *** Quits: noctavian (~noctavian@gateway/tor-sasl/noctavian) (Remote host closed the connection)
[00:55:20] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 272 seconds)
[00:55:21] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (K-Lined)
[00:55:22] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (K-Lined)
[00:55:27] *** Joins: noctavian (~noctavian@gateway/tor-sasl/noctavian)
[00:56:42] <rndm> it trimmed my code to share. Generic[T] looks dangling but is irrelevant to the issue and should have been removed
[00:56:46] *** Joins: fikran (~fikran@user/fikran)
[00:56:47] <rndm> i trimmed*
[00:57:14] <bn_work> is python forgiving of extraneous `,` at the end of the last array element and the closing `]`?
[00:57:30] <bn_work> s/extraneous/extra/
[00:57:32] <Wooble> bn_work: yes.
[00:58:01] <Wooble> bn_work: considered good style, even, makes diffs smaller if you add items.
[00:58:15] <rndm> I could be wrong about this, but I believe mypy is rightly complaining that dataclass would not be concretely constructable. I just want to tell it that this should be considered abstract as well
[00:58:29] <bn_work> oh, yeah, was going to say it does make adding, editing stuff easier
[00:58:33] *** Quits: jmft2 (~JMFT@82.3.54.26) (Ping timeout: 268 seconds)
[00:58:52] *** Quits: matrixskp (~matrixskp@121-75-182-31.dyn.vf.net.nz) (Quit: My comp has gone to sleep to save energy. ZZZzzz…)
[00:59:00] <bjs> rndm: okay I trimmed down more, https://bpa.st/EZSA
[00:59:22] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[00:59:44] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[00:59:54] *** Joins: acresearch (~acresearc@user/acresearch)
[01:00:05] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:5ced:8697:4c5:e97d) (Quit: Leaving)
[01:00:28] <rndm> bjs: concur your MWE is faithful to the issue
[01:00:29] <bjs> rndm: I think the problem is that `dataclass` has a type like `Type[T] -> Type[T]` and it's implicit in mypy that abstract classes aren't valid Type[_]'s  (actually I think the rules are much more subtle)
[01:00:39] <acresearch> people, if i have a multi line string, how can i loop over it line by line?   when i try 'for line in x:'  i end up looping through every charachter
[01:01:01] <zware> acresearch: `for line in x.splitlines():`
[01:01:22] <bjs> rndm: (I think this is rooted in the fact that mypy and other type checkers generally allow `c() : T` where `c : Type[T]`, but this is unsafe if c is abstract)
[01:01:28] <acresearch> zware: ah ok
[01:01:58] <bjs> rndm: a quick glance at mypy issues finds https://github.com/python/mypy/issues/5374
[01:03:44] <rndm> bjs: hmm.. treating the dataclass as a mixin seems like a reasonable workaround
[01:04:16] <bjs> rndm: I didn't read the thread fully before linking it,  but that sounds like something that would work.
[01:06:13] *** Quits: MikZyth (~MikZyth@188.65.242.223) (Quit: WeeChat 3.1)
[01:06:38] *** Joins: Narrat (~omnius@p200300df5f0ae5b806ea56fffe2e7cdc.dip0.t-ipconnect.de)
[01:06:50] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[01:07:16] *** Quits: cypris (uid507362@user/cypris) (Quit: Connection closed for inactivity)
[01:08:25] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:5ced:8697:4c5:e97d)
[01:08:26] *** Quits: odoood (~odoood@2601:c8:c003:a550::8) (Ping timeout: 258 seconds)
[01:09:16] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 244 seconds)
[01:09:16] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Ping timeout: 244 seconds)
[01:09:19] *** Quits: acresearch (~acresearc@user/acresearch) (Quit: WeeChat 2.8)
[01:09:23] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[01:10:11] *** Joins: Caesar-EW (~Caesar-EW@84.213.107.109)
[01:10:57] *** Joins: odoood (~odoood@2601:c8:c003:a550::8)
[01:11:45] *** Joins: Snyp (~rksht@49.207.221.191)
[01:11:55] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[01:12:35] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:5ced:8697:4c5:e97d) (Client Quit)
[01:13:25] *** Joins: orville (~orville@c-67-170-226-157.hsd1.ca.comcast.net)
[01:13:45] *** Quits: slavfox (~slavfox@93.158.232.111) (Quit: ZNC 1.8.2 - https://znc.in)
[01:15:53] *** Quits: jaggz (~jaggz@user/jaggz) (Ping timeout: 272 seconds)
[01:15:59] *** Quits: mickey8 (~user@user/mickey) (Ping timeout: 244 seconds)
[01:16:18] *** Quits: rendar (~rendar@user/rendar) ()
[01:17:33] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:5ced:8697:4c5:e97d)
[01:17:34] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[01:17:36] *** Quits: Snyp (~rksht@49.207.221.191) (Quit: WeeChat 3.2)
[01:17:40] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 268 seconds)
[01:18:08] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 272 seconds)
[01:18:10] *** Joins: slavfox (~slavfox@93.158.232.111)
[01:18:30] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[01:19:34] *** Joins: i0e (~is0ke3@user/is0ke3)
[01:20:30] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[01:21:55] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[01:21:59] *** Quits: trace1918 (~trace1918@94-137-125-182.customers.ownit.se) (Ping timeout: 268 seconds)
[01:22:36] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 268 seconds)
[01:23:34] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[01:25:18] *** Quits: y1n (~y1n@84-115-65-215.wifi.dynamic.surfer.at) (Ping timeout: 258 seconds)
[01:27:56] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Quit: Leaving)
[01:29:31] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[01:34:18] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 268 seconds)
[01:34:47] *** Quits: mike18 (~geri@217-149-162-237.nat.highway.telekom.at) (Remote host closed the connection)
[01:35:30] *** Joins: molt (~molt@95.155.22.30)
[01:35:39] *** Quits: rndm (~rndm@143.59.164.79) (Ping timeout: 258 seconds)
[01:36:58] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:37:20] *** Joins: y1n (~y1n@84-115-65-215.wifi.dynamic.surfer.at)
[01:38:08] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[01:38:24] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[01:42:52] *** Quits: et (~et@user/et) (Quit: ZNC 1.8.0 - https://znc.in)
[01:43:15] *** Joins: et (~et@user/et)
[01:43:20] *** Quits: y04nn (~y04nn@91.193.4.154) (Remote host closed the connection)
[01:43:27] *** Joins: Liblx (~Alex@2a02:810c:280:59c:7471:c11:7e53:10ff)
[01:44:11] *** Quits: y1n (~y1n@84-115-65-215.wifi.dynamic.surfer.at) (Ping timeout: 268 seconds)
[01:45:45] *** Quits: gloomy_desktop (~ldorigo@81.161.149.37) (Ping timeout: 248 seconds)
[01:45:47] *** Quits: waynew (~wayne@user/waynew) (Quit: WeeChat 2.9)
[01:48:36] *** Joins: gloomy_desktop (~ldorigo@81.161.149.37)
[01:48:51] *** Quits: Jefren1 (~Jefren@208.104.190.55) (Quit: WeeChat 3.2)
[01:48:53] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[01:50:35] *** Joins: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[01:51:53] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:56:02] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[01:56:43] *** Quits: Forty-Bot (~kvirc@pool-74-96-87-9.washdc.fios.verizon.net) (Ping timeout: 268 seconds)
[01:56:57] *** Quits: YaknotiS (~YaknotiS@user/yaknotis) (Ping timeout: 248 seconds)
[01:56:59] *** Joins: y1n (~y1n@84-115-65-56.wifi.dynamic.surfer.at)
[02:01:54] *** Joins: anon16_ (~anon16_@user/anon16)
[02:02:03] *** Quits: y1n (~y1n@84-115-65-56.wifi.dynamic.surfer.at) (Ping timeout: 268 seconds)
[02:02:15] <anon16_> Hi, is there a way to read a range of bytes from a file? (like bytes 3 to 6)
[02:02:15] <jim> python's getting a case statement?
[02:02:45] <jim> take anon first, mine will keep
[02:03:04] <Repiphany> f.seek(3); f.read(6-3)
[02:03:23] <anon16_> Repiphany: Nice, thank you!
[02:03:37] <Repiphany> or with proper zero indexing
[02:03:44] *** Quits: molt (~molt@95.155.22.30) (Ping timeout: 272 seconds)
[02:04:28] *** Joins: ExpiredKebab (~sgreadly@2407:7000:a2f5:e803:81c1:ae78:4995:6df5)
[02:05:55] <nedbat> jim: python is getting "match/case", which is similar to switch/case
[02:06:49] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[02:09:19] *** Joins: domhnall_ (~developer@user/domhnall/x-2887755)
[02:09:41] *** domhnall is now known as Guest465
[02:09:41] *** Quits: Guest465 (~developer@user/domhnall/x-2887755) (Killed (calcium.libera.chat (Nickname regained by services)))
[02:09:41] *** domhnall_ is now known as domhnall
[02:09:45] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[02:10:03] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[02:10:09] *** Joins: devcpu (~rusty@ec2-35-183-244-153.ca-central-1.compute.amazonaws.com)
[02:10:16] *** Quits: c10l2 (~c10l@89.34.167.207) (Quit: The Lounge - https://thelounge.chat)
[02:11:08] *** Joins: c10l2 (~c10l@89.34.167.207)
[02:12:19] *** Joins: jmcantre2 (~weechat@user/jmcantrell)
[02:12:57] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 248 seconds)
[02:13:45] <jim> nedbat, oh, ok... would I be able to build the python that has that in pyenv so I can try it out?
[02:13:47] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[02:13:49] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[02:13:56] <nedbat> jim: sure, 3.10 has it.
[02:14:03] <nedbat> jim: 3.10rc1 is out
[02:14:22] *** Joins: y1n (~y1n@84-115-64-2.wifi.dynamic.surfer.at)
[02:14:28] <nedbat> jim: this explains it: https://www.python.org/dev/peps/pep-0636/
[02:14:34] <jim> and rc1 has the match?
[02:14:55] *** Joins: i0e (~is0ke3@user/is0ke3)
[02:15:38] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[02:15:48] <SnoopJ> it is not the first version that has it, but it does have it, yes
[02:18:35] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 258 seconds)
[02:18:38] *** Quits: asdfasdf (~Barones@2804:48dc:8500:0:dbf:1f3a:3be6:2a1e) (Quit: Leaving)
[02:20:44] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[02:21:16] *** Quits: y1n (~y1n@84-115-64-2.wifi.dynamic.surfer.at) (Ping timeout: 258 seconds)
[02:21:47] *** Quits: anon16_ (~anon16_@user/anon16) (Ping timeout: 268 seconds)
[02:21:59] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:22:33] *** Quits: Caesar-EW (~Caesar-EW@84.213.107.109) (Ping timeout: 248 seconds)
[02:24:28] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[02:25:51] *** Quits: darksun (~darksun@user/darksun) (Remote host closed the connection)
[02:30:04] *** Parts: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it) ()
[02:31:15] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:31:57] *** Quits: Akuli (~Akuli@82-203-165-178.bb.dnainternet.fi) (Quit: Leaving)
[02:32:03] *** Quits: gdarko (~me@dg.mk) (Remote host closed the connection)
[02:32:19] *** Joins: gloin (~gloin@user/gloin)
[02:33:20] *** Joins: y1n (~y1n@84-115-65-29.wifi.dynamic.surfer.at)
[02:33:34] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[02:33:44] *** Joins: bloodninja123 (~bloodninj@user/bloodninja)
[02:34:02] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[02:35:02] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[02:35:29] <gloin> Looking at the error here I think maybe I need to create a nested dict? Anyone using pynetbox could help here: https://bpa.st/IAHA
[02:35:35] *** Joins: Superstars111 (~jared@li227-215.members.linode.com)
[02:36:11] *** Quits: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net) (Read error: Connection reset by peer)
[02:36:25] *** Quits: jmcantre2 (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[02:36:36] *** Quits: mci64 (~mci64@185.242.190.95) (Ping timeout: 268 seconds)
[02:36:52] *** Joins: Fluxx (~Fluxx@user/fluxx)
[02:37:03] *** Superstars111 is now known as SpockPines
[02:37:13] *** SpockPines is now known as Superstars111
[02:37:45] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Ping timeout: 258 seconds)
[02:38:08] *** Quits: y1n (~y1n@84-115-65-29.wifi.dynamic.surfer.at) (Ping timeout: 258 seconds)
[02:38:54] *** Quits: devcpu (~rusty@ec2-35-183-244-153.ca-central-1.compute.amazonaws.com) (Ping timeout: 258 seconds)
[02:38:56] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[02:39:54] *** Joins: mickey86 (~user@user/mickey)
[02:40:19] *** Quits: Liblx (~Alex@2a02:810c:280:59c:7471:c11:7e53:10ff) (Excess Flood)
[02:40:54] *** Joins: devcpu (~rusty@208.116.227.242)
[02:40:58] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[02:41:35] *** Quits: LiftLeft (~LiftLeft@154.21.114.33) (Ping timeout: 258 seconds)
[02:41:49] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[02:41:49] *** Joins: matrixskp (~matrixskp@121-75-182-31.dyn.vf.net.nz)
[02:42:03] *** Quits: luna-is-here (~quassel@2a02:908:f761:2a3c::a) (Remote host closed the connection)
[02:42:37] *** c10l2 is now known as c10l
[02:42:58] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Ping timeout: 268 seconds)
[02:43:12] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[02:43:31] *** Joins: luvalon10 (~luva@178.239.167.170)
[02:43:36] *** Quits: luvalon1 (~luva@178.239.167.170) (Read error: Connection reset by peer)
[02:43:36] *** luvalon10 is now known as luvalon1
[02:43:39] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[02:43:46] *** Joins: Liblx (~Alex@2a02:810c:280:59c:7471:c11:7e53:10ff)
[02:43:53] *** Quits: qlixed (~qlixed@2800:810:548:cc6::100c) (Ping timeout: 258 seconds)
[02:43:53] *** Quits: junktext (~junktext@109.201.152.161) (Ping timeout: 258 seconds)
[02:45:02] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[02:45:22] *** Joins: de-facto (~de-facto@user/de-facto)
[02:46:11] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 258 seconds)
[02:46:35] <AhmedAmerican> Someone been able before to inject hCAPTCHA response into site ?
[02:47:20] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[02:48:21] *** Joins: i0e (~is0ke3@user/is0ke3)
[02:48:38] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[02:49:40] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[02:50:19] *** Joins: y1n (~y1n@84-115-64-52.wifi.dynamic.surfer.at)
[02:50:42] *** Quits: dalan6 (~dalan@27-32-30-220.tpgi.com.au) (Quit: dalan6)
[02:51:10] *** Joins: dalan6 (~dalan@27-32-30-220.tpgi.com.au)
[02:51:41] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:2851:91a4:af4c:7957) (Quit: Textual IRC Client: www.textualapp.com)
[02:51:52] *** Quits: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 272 seconds)
[02:52:04] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[02:52:28] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Client Quit)
[02:53:14] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[02:53:14] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 268 seconds)
[02:53:23] *** Joins: LiftLeft (~LiftLeft@212.102.59.168)
[02:53:42] <nedbat> jim: many versions of 3.10 have match/case. i was just mentioning the latest version
[02:54:36] *** Joins: Barones (~Barones@2804:7f3:8987:3add:6606:9a7a:2302:96c3)
[02:54:42] *** Joins: i0e (~is0ke3@user/is0ke3)
[02:55:05] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[02:57:10] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[02:58:48] <majuscule> is it possible to use a variable in a format statement? i.e. f'{foo:>myvar}'
[02:59:03] <nedbat> majuscule: f'{foo:>{myvar}}'
[02:59:21] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 248 seconds)
[02:59:28] *** Quits: Narrat (~omnius@p200300df5f0ae5b806ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[02:59:40] <majuscule> ah, thanks!
[02:59:47] *** Joins: matsaman (~matsaman@user/matsaman)
[03:04:32] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 272 seconds)
[03:05:10] *** Quits: y1n (~y1n@84-115-64-52.wifi.dynamic.surfer.at) (Ping timeout: 272 seconds)
[03:05:48] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[03:06:07] *** Joins: fikran (~fikran@user/fikran)
[03:10:11] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[03:10:25] *** Quits: matrixskp (~matrixskp@121-75-182-31.dyn.vf.net.nz) (Quit: Textual IRC Client: www.textualapp.com)
[03:11:29] *** Quits: Pixi (~Pixi@user/pixi) (Quit: Leaving)
[03:11:47] *** Joins: Pixi (~Pixi@user/pixi)
[03:12:02] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[03:12:41] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 248 seconds)
[03:13:09] *** Joins: mago (~mago@87.125.54.102)
[03:14:10] *** Joins: BlessJah_ (~BlessJah@user/blessjah)
[03:16:33] *** Joins: y1n (~y1n@84-115-65-127.wifi.dynamic.surfer.at)
[03:17:55] *** Quits: BlessJah (~BlessJah@user/blessjah) (Ping timeout: 268 seconds)
[03:18:15] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[03:19:39] *** Quits: LuxuryMode (uid91005@id-91005.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[03:20:04] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Quit: Hay te huacho!)
[03:20:41] <Liblx> Hello what do I have to do with this error message (I didn't change anything at this line for months):
[03:20:43] <Liblx> SyntaxError: Non-UTF-8 code starting with '\xe4' in file /home/gandhi/code/scanner/saveStocks.py on line 317, but no encoding declared; see http://python.org/dev/peps/pep-0263/ for details
[03:20:52] <Liblx> I read the link, but cannot understand.
[03:21:02] <Liblx> I see the link is mentioned above.
[03:21:10] <Liblx> Thanks a lot.
[03:21:13] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:21:56] <phy1729> How was the script authored?
[03:22:23] <Liblx> hm, what do you mean? the first lines?
[03:22:41] *** Joins: thiras (~thiras@user/thiras)
[03:23:01] <phy1729> In particular it'd be nice to know what the file encoding of the editor was
[03:23:23] <nedbat> Liblx: can you share line 317 with us?
[03:24:25] *** Quits: finsternis (~X@23.226.237.192) (Remote host closed the connection)
[03:25:34] <Liblx> Yes, it's a line commented out:
[03:25:36] <Liblx> 317         #for i in [0,1]:   # nach 4-5 Durchläufen wurden alle entweder beim 1. Lauf geladen oder gar nicht
[03:26:02] *** Quits: kostkon (~androirc@2a02:587:a110:f169:3115:57c0:a33f:71f6) (Remote host closed the connection)
[03:26:17] <zware> Liblx: your editor appears to have saved the file using `latin1` instead of utf-8; \xe4 is ä in latin1, but not legal on its own in utf-8
[03:26:17] *** Joins: gloin_ (~gloin@user/gloin)
[03:26:19] <Liblx> I use the code every day for a year or so and now it had this error.
[03:26:29] *** Quits: Duckle (~Duckle@user/duckle) (Quit: Ping timeout (120 seconds))
[03:26:44] <Liblx> Oh, let's see when changing to ae
[03:27:15] <Liblx> no change ...!?!?
[03:27:55] <Liblx> I will try to delete the line ... one moment.
[03:28:44] *** Joins: Duckle (~Duckle@user/duckle)
[03:28:49] <nedbat> Liblx: did you change how you run the program?
[03:29:36] *** Quits: mago (~mago@87.125.54.102) (Quit: Client closed)
[03:29:45] *** Quits: weibullguy (DRowland@gateway/vpn/protonvpn/weibullguy) (Ping timeout: 248 seconds)
[03:29:45] *** Quits: twobitsprite (~twobitspr@195.181.171.244) (Ping timeout: 248 seconds)
[03:30:12] <phy1729> Would LOCALE or LC_* environment variables affect things?
[03:30:17] *** Quits: gloin (~gloin@user/gloin) (Ping timeout: 248 seconds)
[03:30:29] <Liblx> one moment, checking it
[03:30:46] *** Joins: twobitsprite (~twobitspr@195.181.171.244)
[03:30:49] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (Ping timeout: 248 seconds)
[03:30:57] *** Joins: weibullguy (DRowland@gateway/vpn/protonvpn/weibullguy)
[03:31:33] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[03:31:48] <Liblx> no, even if i start the file without the bash file it's in, it has the same error...
[03:32:30] *** gloin_ is now known as gloin
[03:32:38] <Liblx> how can I tell python that it has ä and other chars?
[03:32:48] <Liblx> maybe i could solve it like this?
[03:33:31] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[03:33:48] <Liblx> and why did it change so immediately... hm, curious.
[03:34:11] *** Quits: jmcantrell (~jmcantrel@user/jmcantrell) (Killed (erbium.libera.chat (Nickname regained by services)))
[03:34:11] *** jmcantre1 is now known as jmcantrell
[03:34:26] *** Joins: Guest330 (~jmcantrel@user/jmcantrell)
[03:34:36] <Liblx> i changed my cronetab, i changed the bash file the python code is in. but as I said, the python script does not run for itself, too.
[03:35:02] <zware> Liblx: You can add a coding cookie comment, https://docs.python.org/3/reference/lexical_analysis.html#encoding-declarations.  You'll probably be happier making your editor save in utf-8 instead of latin1, though :)
[03:36:08] <Liblx> zware: but why did it change? I'll ask the vim channel how to do that.
[03:36:47] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[03:36:52] *** Quits: iNeedKoffee (~ubuntu@public.sa-edbd-dsto-liva1.aarnet.net.au) (Ping timeout: 256 seconds)
[03:36:52] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[03:37:05] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[03:37:44] <zware> Liblx: Couldn't tell you for sure, but I'd guess at a change in your environment or configuration
[03:38:50] <Liblx> ok, thanks for the fast help!!
[03:39:04] <Liblx> Good day or night, zware!
[03:39:30] *** Quits: dermato (~dermatobr@154.21.23.75) (Ping timeout: 268 seconds)
[03:40:23] <jim> nedbat, ok, (about many 3.10s having match/case) good to know
[03:41:09] *** Joins: mago (~mago@87.125.54.102)
[03:42:42] *** Joins: dermato (~dermatobr@154.21.23.75)
[03:44:54] <Liblx> I still use 3.6.9, maybe I should upgrade? Could this be the problem?
[03:45:21] <nedbat> Liblx: that isn't the problem.  something must have changed in how you are running the program.
[03:45:22] <grym> Liblx: that should be fine
[03:45:46] *** Joins: khrbt_ (~khrbt@user/khrbt)
[03:46:01] <nedbat> Liblx: did you change from Python 2 to Python 3?
[03:46:44] *** khrbt_ is now known as khrbt
[03:48:24] <Liblx> no, but now I changed the file to utf-8 and it failed, too. I added # coding=latin1 in the first line and that works! it's running. but why!? I do not know why it changed.
[03:48:30] <Liblx> Thanks!
[03:52:25] *** khrbt is now known as khrbt_
[03:53:12] *** Parts: mago (~mago@87.125.54.102) ()
[03:53:39] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Remote host closed the connection)
[03:54:18] *** Quits: SuperLag (~akulbe@user/superlag) (Ping timeout: 268 seconds)
[03:54:22] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-c16b-4385-b975-2303.res6.spectrum.com) (Read error: Connection reset by peer)
[03:54:41] *** Joins: female_student_4 (~female_st@2a01:388:475:150::1:b3)
[03:55:30] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[03:55:47] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[03:56:15] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Remote host closed the connection)
[03:57:02] <dre> does anyone know how to get all of the pytest fixtures in a file very quickly and easily?
[03:57:31] <dre> something like from within test_foo.py --> TestFoo::test_bar_works
[03:58:30] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[03:58:38] *** Quits: Barones (~Barones@2804:7f3:8987:3add:6606:9a7a:2302:96c3) (Ping timeout: 258 seconds)
[03:58:57] *** Joins: tims (~tims@61.69.131.46)
[03:59:00] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[03:59:13] *** Quits: d3sync (~d3sync@194.219.251.225) (Read error: Connection reset by peer)
[04:00:42] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[04:01:08] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[04:02:05] *** Quits: dermato (~dermatobr@154.21.23.75) (Ping timeout: 258 seconds)
[04:02:30] *** Joins: Wulf4 (~Wulf@user/wulf)
[04:02:53] *** Joins: asa22 (~asa22@www.asa2.xyz)
[04:04:09] *** Quits: cul8r (~cul8r@198.133.178.20) (Ping timeout: 268 seconds)
[04:04:15] <asa22> how do I choose 1 to -1 as index in here -> fr.split("\n")[0]
[04:04:18] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2)
[04:04:18] <asa22> instead of the 0
[04:04:46] *** Quits: y1n (~y1n@84-115-65-127.wifi.dynamic.surfer.at) (Ping timeout: 258 seconds)
[04:05:02] *** Joins: dermato (~dermatobr@154.21.23.75)
[04:05:51] <bjs> asa22: do you mean, "everything except the first" ?
[04:05:55] <asa22> yes
[04:05:58] <bjs> asa22: `(...)[1:]`
[04:06:01] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 248 seconds)
[04:06:01] *** Wulf4 is now known as Wulf
[04:07:12] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[04:08:44] <bjs> asa22: so, fr.split("\n")[1:]  will be everything but the first line
[04:09:39] <asa22> yea thank you, It works well, I just got stuck with a bug right after changing that lol
[04:10:17] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[04:10:19] <Liblx> and one other question, maybe wrong here:
[04:12:23] <Liblx> I am running several python scripts every morning. Now I moved them out of crontabs to a bash file. It works. But when I use 'bash-file > morning.log' it does not run anything, neither it stops and the log file is empty. Is there a solution to this?
[04:13:29] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 248 seconds)
[04:13:42] <cluelessperson> Liblx, how are you running the python scripts?
[04:13:59] *** Quits: female_student_4 (~female_st@2a01:388:475:150::1:b3) (Quit: Client closed)
[04:15:08] <phy1729> Does setting the PYTHONUNBUFFERED environment variable to a non-empty string help?
[04:16:09] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 248 seconds)
[04:16:39] *** Joins: qlixed (~qlixed@181.44.129.13)
[04:16:43] *** Quits: qlixed (~qlixed@181.44.129.13) (Max SendQ exceeded)
[04:17:18] *** Joins: qlixed (~qlixed@181.44.129.13)
[04:18:25] *** Joins: y1n (~y1n@84-115-65-149.wifi.dynamic.surfer.at)
[04:18:32] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[04:18:38] <Liblx> cluelessperson: it just a list of 'python3 /home/dir/file.py' lines.
[04:19:28] <Liblx> phy1729: checked it, yes, it's empty. what should I set?
[04:19:47] <phy1729> literally any non-empty string and see if that helps
[04:20:00] <cluelessperson> Liblx, how are you "using"    bash-file > morning.log ?
[04:20:01] <Liblx> oh, okay. thanks.
[04:20:58] <Liblx> cluelessperson: what do you mean? i do not want to enter a logging into every python file but to send the whole output to one logfile.
[04:21:02] *** Joins: Barones (~Barones@2804:7f3:8987:3add:6606:9a7a:2302:96c3)
[04:21:04] *** Quits: derelict (~derelict@user/derelict) (Quit: WeeChat 3.2)
[04:21:42] <zware> Liblx: Try `PYTHONUNBUFFERED=1 bash-file 2>&1 | tee morning.log` and see if you get anything.  To break that down, it's telling Python not to buffer its output, redirecting stderr from the bash script to stdout, and piping all of that output to both your terminal and 'morning.log'
[04:22:06] *** Joins: stpz (~stpz@240e:341:2298:ea00:19b0:ae7c:48f3:5b13)
[04:22:48] <zware> (Although until you get some kind of output without the redirecting at all, it's probably simpler to not worry about the redirection yet :))
[04:23:15] *** Quits: akk (~akk@75.161.157.26) (Quit: +++)
[04:23:36] *** renrelkha_ is now known as renrelkha
[04:23:58] <Liblx> Thanks. I'll do some test with that. Very useful, phy1729 and zware!
[04:25:44] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 268 seconds)
[04:25:45] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 268 seconds)
[04:26:39] <Liblx> zware: really no ';' after the PYTHONUNBUFFERED=1?
[04:27:08] *** Joins: treefrob (~treefrob@p57a9648f.dip0.t-ipconnect.de)
[04:27:09] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[04:27:10] <zware> Liblx: No, that sets the variable for just the one command
[04:27:29] <Liblx> okay.
[04:27:32] <zware> Liblx: So just `PYTHONUNBUFFERED=1 bash-file`
[04:27:39] <Liblx> y<es
[04:29:26] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 268 seconds)
[04:33:10] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:34:06] *** Joins: bigRoo (~user@131.236.55.20)
[04:34:40] *** Quits: khrbt_ (~khrbt@user/khrbt) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[04:34:49] *** Quits: devcpu (~rusty@208.116.227.242) (Ping timeout: 248 seconds)
[04:35:12] *** Quits: ice99 (~ice9@user/ice9) (Ping timeout: 268 seconds)
[04:36:58] *** Joins: devcpu (~rusty@ec2-35-183-244-153.ca-central-1.compute.amazonaws.com)
[04:37:16] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[04:37:38] *** Joins: khrbt (~khrbt@user/khrbt)
[04:39:16] *** Quits: y1n (~y1n@84-115-65-149.wifi.dynamic.surfer.at) (Ping timeout: 258 seconds)
[04:40:07] *** Joins: gambl0re (~gambl0re@24.140.237.124)
[04:40:48] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-193e-00d5-a539-86a3.res6.spectrum.com) (Ping timeout: 272 seconds)
[04:41:16] *** Quits: asa22 (~asa22@www.asa2.xyz) (Quit: Client closed)
[04:43:51] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[04:44:07] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[04:44:18] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 240 seconds)
[04:46:04] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-bda2-5884-d97f-5fa4.res6.spectrum.com)
[04:50:57] *** Joins: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net)
[04:51:01] *** Quits: shailangsa (~shailangs@host86-185-58-139.range86-185.btcentralplus.com) (Ping timeout: 268 seconds)
[04:51:29] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[04:52:53] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 268 seconds)
[04:53:27] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 258 seconds)
[04:53:29] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 268 seconds)
[04:53:49] *** Joins: derelict (~derelict@user/derelict)
[04:54:01] *** Quits: khrbt (~khrbt@user/khrbt) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[04:54:45] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[04:54:49] *** Quits: devcpu (~rusty@ec2-35-183-244-153.ca-central-1.compute.amazonaws.com) (Quit: leaving)
[04:55:12] *** Joins: devcpu (~rusty@ec2-35-183-244-153.ca-central-1.compute.amazonaws.com)
[04:55:20] *** Joins: jmcantre2 (~weechat@user/jmcantrell)
[04:55:58] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[04:56:07] *** Joins: khrbt (~khrbt@user/khrbt)
[04:56:35] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[04:57:01] <jochum> You can also export it, then it will be available for every call in your shell session
[04:58:03] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[04:59:12] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[04:59:17] *** Quits: c10l (~c10l@89.34.167.207) (Quit: The Lounge - https://thelounge.chat)
[04:59:28] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[04:59:47] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2)
[04:59:55] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[05:00:25] *** Quits: jmcantre2 (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[05:01:53] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:02:08] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 268 seconds)
[05:04:04] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[05:06:17] *** Joins: Fiji (~Fiji@user/fiji)
[05:08:57] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:09:29] *** Joins: rusty_ (~rusty@208.116.227.242)
[05:10:19] *** Joins: Betal (~Betal@user/betal)
[05:10:42] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.2)
[05:13:14] *** Quits: devcpu (~rusty@ec2-35-183-244-153.ca-central-1.compute.amazonaws.com) (Ping timeout: 268 seconds)
[05:13:37] *** Joins: Pandadub (~Barones@2804:7f3:8986:e028:6d72:919e:6719:d7c5)
[05:13:45] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 248 seconds)
[05:13:45] *** Joins: nomic2 (~nomic@2a00:23c6:9902:2401:5ced:8697:4c5:e97d)
[05:13:52] *** Joins: pschorf (~user@c-73-77-28-188.hsd1.tx.comcast.net)
[05:15:26] *** Joins: fikran (~fikran@user/fikran)
[05:16:26] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:5ced:8697:4c5:e97d) (Ping timeout: 252 seconds)
[05:16:27] *** Quits: Barones (~Barones@2804:7f3:8987:3add:6606:9a7a:2302:96c3) (Ping timeout: 258 seconds)
[05:17:16] *** nomic2 is now known as nomic
[05:19:09] *** Joins: etch (~etch@user/etch)
[05:20:27] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[05:21:23] *** Joins: boothsoftware (~boothsoft@134.41.90.219)
[05:21:49] *** Joins: noctavian_ (~noctavian@gateway/tor-sasl/noctavian)
[05:22:08] *** Joins: greatgatsby (~greatgats@bras-base-toroon0411w-grc-52-142-114-106-7.dsl.bell.ca)
[05:22:26] *** Quits: noctavian (~noctavian@gateway/tor-sasl/noctavian) (Ping timeout: 244 seconds)
[05:24:30] *** Quits: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net) (Ping timeout: 272 seconds)
[05:28:26] *** Quits: Pandadub (~Barones@2804:7f3:8986:e028:6d72:919e:6719:d7c5) (Remote host closed the connection)
[05:28:43] *** Quits: fikran (~fikran@user/fikran) (Quit: WeeChat 2.8)
[05:30:25] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:31:33] *** Joins: female_student_4 (~female_st@2a01:388:475:150::1:b3)
[05:31:52] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[05:31:59] *** Parts: boothsoftware (~boothsoft@134.41.90.219) (Leaving)
[05:32:06] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[05:32:25] *** Quits: rusty_ (~rusty@208.116.227.242) (Quit: leaving)
[05:32:56] *** Joins: devcpu (~rusty@208.116.227.242)
[05:34:20] *** Joins: vlm (~vlm@user/vlm)
[05:34:46] *** Joins: Joanna (uid57472@id-57472.tooting.irccloud.com)
[05:35:12] *** Joins: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:e5e4:c451:9569:1e83)
[05:35:13] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Quit: hyskaru)
[05:35:43] *** Parts: Joanna (uid57472@id-57472.tooting.irccloud.com) ()
[05:36:00] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[05:37:53] *** Quits: Leonarbro_ (~Leonet@user/leonarbro) (Ping timeout: 268 seconds)
[05:37:55] *** Joins: brabrax_ (~brabrax@user/brabrax)
[05:37:56] *** Joins: matsaman (~matsaman@user/matsaman)
[05:38:25] *** Joins: specialkender (~Guest48@60.231.243.196)
[05:38:41] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 258 seconds)
[05:38:42] *** brabrax_ is now known as brabrax
[05:38:47] <specialkender> Hello guys, is there anybody proficient with Ipywidgets by any chance?
[05:39:11] <matsaman> what if there were
[05:40:18] <specialkender> I'd private message them to beg for some clarifications? :P
[05:42:25] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:5ced:8697:4c5:e97d) (Quit: Leaving)
[05:44:31] <nedbat> specialkender: try asking here
[05:45:28] <specialkender> So I am trying to use ipywidgets to create an app to upload some .csv and I don't really understand how to pass a variable from a widget to a variable interactively. This is what I'm doing by now:
[05:45:30] <specialkender> https://bpa.st/6OLA
[05:47:12] <specialkender> which is to use a global variable defined in a function, not the best. Is there any more proper way?  Also I would like to make it so that the Upload widget value between parenthesis resets every time that you load new files rather than keep increasing. Is there a way?
[05:47:53] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 248 seconds)
[05:49:12] *** Joins: orzel (~orzel@2a01:e0a:df:6ba0:1cfe:b463:3789:a442)
[05:50:23] <orzel> Hello. Using 'requests', when a header is present several times in a response, i can only get a concatenated version using r.headers['']. How can i retrieve each one separetely ? This is especially useful for the "Set-Cookie" header
[05:54:32] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[05:57:30] *** Quits: ShorTie (~ShorTie@130.sub-72-105-241.myvzw.com) (Ping timeout: 240 seconds)
[05:57:43] *** Quits: t3nj1n_ (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net) (Quit: WeeChat 2.8)
[05:57:53] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.2)
[05:58:26] *** Joins: ShorTie (~ShorTie@242.sub-72-104-199.myvzw.com)
[05:58:50] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[05:59:40] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[05:59:56] *** Joins: dalan62 (~dalan@14-203-203-26.tpgi.com.au)
[06:02:04] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[06:02:30] *** Quits: dalan6 (~dalan@27-32-30-220.tpgi.com.au) (Ping timeout: 272 seconds)
[06:02:31] *** dalan62 is now known as dalan6
[06:02:34] *** Quits: ExpiredKebab (~sgreadly@2407:7000:a2f5:e803:81c1:ae78:4995:6df5) (Quit: Textual IRC Client: www.textualapp.com)
[06:02:50] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 258 seconds)
[06:03:36] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[06:06:22] *** Joins: yogoyo_ (~yogoyo@user/yogoyo)
[06:09:15] *** Quits: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:e5e4:c451:9569:1e83) (Read error: Connection reset by peer)
[06:09:28] *** Quits: yogoyo (~yogoyo@user/yogoyo) (Ping timeout: 272 seconds)
[06:10:23] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[06:13:26] *** Quits: bigRoo (~user@131.236.55.20) (Remote host closed the connection)
[06:13:57] *** Quits: maxtimbo (~maxtim@c-71-228-128-153.hsd1.ga.comcast.net) (Ping timeout: 258 seconds)
[06:19:42] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[06:19:47] *** pacbard_ is now known as pacbard
[06:25:07] *** Joins: heco (~redrum@user/redrum88)
[06:26:55] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[06:28:11] *** Quits: heco (~redrum@user/redrum88) (Client Quit)
[06:29:10] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[06:30:18] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[06:30:33] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[06:31:44] *** Quits: khrbt (~khrbt@user/khrbt) (Quit: Textual IRC Client: www.textualapp.com)
[06:32:37] *** Quits: ente_ (~ente@p200300dc5f0b7b0077d687d8c50841ea.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[06:32:47] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[06:33:07] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-bda2-5884-d97f-5fa4.res6.spectrum.com) (Ping timeout: 258 seconds)
[06:33:22] *** Joins: Jonno_FTW (~come@user/jonno-ftw/x-0835346)
[06:33:27] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[06:34:36] *** Joins: ente_ (~ente@p200300dc5f09dc000d6d4b0d74cc670f.dip0.t-ipconnect.de)
[06:34:49] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 248 seconds)
[06:35:11] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-e001-f283-3e2e-ec80.res6.spectrum.com)
[06:36:34] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[06:38:01] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 248 seconds)
[06:38:12] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 256 seconds)
[06:38:41] *** Joins: shailangsa (~shailangs@host86-145-14-24.range86-145.btcentralplus.com)
[06:40:36] *** Joins: wolfgang (~wolfgang@101.174.170.3)
[06:44:09] *** Quits: wolfgang (~wolfgang@101.174.170.3) (Remote host closed the connection)
[06:46:00] *** Joins: zebrag (~chris@user/zebrag)
[06:46:57] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[06:48:49] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[06:49:10] *** Joins: ______GOD______ (~GOD@user/god/x-9778998)
[06:51:17] *** Joins: wolfgang (~wolfgang@101.174.170.3)
[06:52:00] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[06:53:48] *** Quits: emerent (~quassel@p200300cd57058c89ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[06:54:36] *** Joins: emerent (~quassel@p200300cd57058cb0ba27ebfffed28a59.dip0.t-ipconnect.de)
[06:55:02] *** Quits: wolfgang (~wolfgang@101.174.170.3) (Remote host closed the connection)
[06:55:04] *** Quits: kmh_ (~kmh@p200300df5f0d0200dc05e9b97966e73c.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[06:56:15] <cluelessperson> orzel, I would expect there to be a list of headers in like,   get_headers  or  .headers  or similar
[06:58:02] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:58:02] *** FinnElija is now known as Guest2839
[06:58:02] *** finn_elija is now known as FinnElija
[07:00:21] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (Quit: WeeChat info:version)
[07:01:16] *** Joins: qlixed (~qlixed@181.44.129.13)
[07:01:18] *** Quits: qlixed (~qlixed@181.44.129.13) (Remote host closed the connection)
[07:01:46] *** Quits: Guest2839 (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 268 seconds)
[07:04:26] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[07:05:42] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[07:06:09] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:10:51] *** Joins: heco (~redrum@user/redrum88)
[07:13:28] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[07:13:33] *** Joins: wolfgang (~wolfgang@101.174.170.3)
[07:14:36] <dre> does anyone know if there's a way to get all the test fixtures from pytest for a certain file?
[07:14:45] <dre> such as TestClas::test_function
[07:15:09] <dre> otherwise is there a super easy "list all function defs" AST script I can borrow from?
[07:16:48] *** Quits: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com) (Remote host closed the connection)
[07:17:43] *** Joins: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com)
[07:20:21] *** Quits: paravida (~myChateau@user/paravida) (Remote host closed the connection)
[07:21:22] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[07:21:36] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[07:22:11] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 258 seconds)
[07:26:32] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[07:29:27] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[07:29:58] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[07:31:24] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[07:32:33] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:32:46] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Quit: hyskaru)
[07:37:43] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[07:39:06] *** Quits: dermato (~dermatobr@154.21.23.75) (Remote host closed the connection)
[07:40:11] <Zeturic> Does anybody know a more recent talk along the lines of Ned Batchelder's Loop Like A Native focused on Python 3? I was helping someone, and I started to send them the link to it, but they're learning Python 3, and I don't particularly want to have to give them a crash course on all the small things that have changed since Python 2 that come up in that talk.
[07:40:31] <Zeturic> Oh, that was a bit longer than I thought it was. Sorry.
[07:40:33] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[07:40:57] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[07:43:35] *** Quits: orville (~orville@c-67-170-226-157.hsd1.ca.comcast.net) (Quit: Going offline, see ya! (www.adiirc.com))
[07:43:59] *** Quits: jrjsmrtn (~jrjsmrtn@ip-83-134-41-235.dsl.scarlet.be) (Quit: ZNC 1.8.2 - https://znc.in)
[07:44:12] *** Joins: matsaman (~matsaman@user/matsaman)
[07:44:15] *** Joins: jrjsmrtn (~jrjsmrtn@ip-83-134-41-235.dsl.scarlet.be)
[07:45:50] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:47:57] <iflema> Zeturic: https://docs.python.org/3/whatsnew/index.html
[07:50:40] *** Quits: d00gy (~d00gy@user/d00gy) (Quit: WeeChat 2.3)
[07:57:41] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[07:58:06] <dre> in ipython
[07:58:10] <dre> how you can scroll up in history
[07:58:13] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:58:18] <grym> up arrow
[07:58:19] <grym> usually
[07:58:20] <dre> ios it possible to get that history? without having saved it previously?
[07:59:09] *** Joins: _AJ (~AJAlabs@pool-71-183-83-145.nycmny.fios.verizon.net)
[07:59:59] *** Quits: female_student_4 (~female_st@2a01:388:475:150::1:b3) (Quit: Client closed)
[08:00:47] *** Joins: dermato (~dermatobr@154.21.23.75)
[08:04:25] *** Quits: wolfgang (~wolfgang@101.174.170.3) (Remote host closed the connection)
[08:04:37] *** Joins: wolfgang (~wolfgang@101.174.170.3)
[08:07:07] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[08:07:20] *** Quits: wolfgang (~wolfgang@101.174.170.3) (Remote host closed the connection)
[08:07:40] *** Quits: fuxaches (~terry@S01060cb6d29d89df.ed.shawcable.net) (Quit: Leaving.)
[08:07:46] *** Quits: ano (~weechat@user/ano) (Ping timeout: 244 seconds)
[08:08:39] *** Joins: wolfgang (~wolfgang@101.174.170.3)
[08:12:42] *** Quits: baltazar (~baltazar@217-197-188-124.pool.digikabel.hu) (Ping timeout: 240 seconds)
[08:13:59] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[08:14:40] *** Joins: baltazar (~baltazar@217-197-181-136.pool.digikabel.hu)
[08:17:00] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[08:22:49] *** Quits: [_] (~itchyjunk@user/itchyjunk/x-7353470) (Quit: Leaving)
[08:24:24] *** Quits: wolfgang (~wolfgang@101.174.170.3) (Remote host closed the connection)
[08:24:35] *** Joins: wolfgang (~wolfgang@101.174.170.3)
[08:24:35] *** Joins: mambang (~mambang@user/mambang)
[08:26:00] *** Quits: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net) (Quit: leaving)
[08:29:29] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 248 seconds)
[08:30:30] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[08:32:21] *** Quits: _AJ (~AJAlabs@pool-71-183-83-145.nycmny.fios.verizon.net) (Quit: Textual IRC Client: www.textualapp.com)
[08:33:30] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[08:33:57] *** Quits: wolfgang (~wolfgang@101.174.170.3) (Remote host closed the connection)
[08:34:08] *** Joins: wolfgang (~wolfgang@101.174.170.3)
[08:35:08] *** Quits: twobitsprite (~twobitspr@195.181.171.244) (Ping timeout: 272 seconds)
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:07] *** Joins: me-sudoer-dentne (~me-sudoer@45.112.144.181)
[08:36:28] *** Quits: Abrax (~Abrax@user/abrax) (Quit: Leaving)
[08:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:37:48] *** Quits: mambang (~mambang@user/mambang) (Quit: Leaving)
[08:42:36] *** Quits: Peng (~mnordhoff@flash.mattnordhoff.net) (Quit: Peng timeout)
[08:42:37] *** Quits: stpz (~stpz@240e:341:2298:ea00:19b0:ae7c:48f3:5b13) (Ping timeout: 246 seconds)
[08:42:45] *** Joins: Peng (~mnordhoff@flash.mattnordhoff.net)
[08:43:27] *** Joins: c10l (~c10l@89.34.167.207)
[08:44:04] *** Quits: c10l (~c10l@89.34.167.207) (Client Quit)
[08:44:26] *** Quits: Fiji (~Fiji@user/fiji) (Quit: Leaving)
[08:46:00] *** Joins: salparadise (~salparadi@129.146.17.140)
[08:46:47] *** Joins: Abrax (~Abrax@user/abrax)
[08:49:07] *** Joins: c10l (~c10l@89.34.167.207)
[08:52:13] *** Joins: stpz (~stpz@240e:341:2298:ea00:800:ef02:2954:aa66)
[08:52:22] *** Quits: stpz (~stpz@240e:341:2298:ea00:800:ef02:2954:aa66) (Client Quit)
[08:54:52] *** Quits: specialkender (~Guest48@60.231.243.196) (Quit: Client closed)
[08:55:33] *** Joins: ano (~weechat@user/ano)
[08:59:13] <newdimension> In my side projects I like to always use the latest version of Python. I currently use pyenv, virtualenv and virtualenvwrapper to make a env for each project. I find this setup cumbersome whenever a new python version gets released as I need to setup virtualenvwrapper in the new version. Is there a better setup I can adopt?
[08:59:56] *** Quits: odoood (~odoood@2601:c8:c003:a550::8) (Ping timeout: 258 seconds)
[09:00:28] *** Joins: jetchisel (jetchisel@user/jetchisel)
[09:07:15] <Repiphany> Why not pyenv-virtualenv
[09:07:53] <jochum> Using that works great here, multiple version with multiple envs
[09:07:57] <jochum> versions
[09:09:35] *** Joins: kmh (~kmh@p200300df5f0c180024ffd0b69acc61a1.dip0.t-ipconnect.de)
[09:09:58] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 272 seconds)
[09:10:15] <newdimension> Repiphany: I wasn't aware of it. Looks like a good option. I'm also looking into Poetry
[09:12:43] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[09:12:56] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[09:13:21] *** Joins: mci64 (~mci64@185.242.190.95)
[09:23:25] *** Quits: p-i- (~Ohmu@2001:44c8:460c:6b40:652d:171c:5ea2:c7fa) (Remote host closed the connection)
[09:23:40] *** Quits: mci64 (~mci64@185.242.190.95) (Quit: Connection closed)
[09:28:05] <mat001> Trying to add a deprecation warning for an attribute in init method. Does this look correct? https://bpa.st/4RBA
[09:29:47] *** Joins: mci64 (~mci64@185.242.190.95)
[09:29:50] *** Quits: amanr (~therojjha@20.204.87.0) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[09:30:07] *** Quits: mci64 (~mci64@185.242.190.95) (Client Quit)
[09:30:24] <Jonno_FTW> in pyenv, I do `pyenv activate myenv` and it puts the name before the prompt but which python still returns /usr/bin/python instead of my actual python
[09:30:55] <Repiphany> You might not be initializing pyenv properly in .bashrc or whatever equivalent
[09:31:05] <Jonno_FTW> I reinitialised it
[09:31:26] *** Joins: stranac (~stranac@195.29.239.126)
[09:31:46] <Repiphany> with what command(s)
[09:32:02] *** Joins: mci64 (~mci64@185.242.190.95)
[09:32:14] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[09:32:31] <Jonno_FTW> oh I had the old one
[09:32:34] *** Quits: mci64 (~mci64@185.242.190.95) (Client Quit)
[09:32:35] <Jonno_FTW> it needs to be eval "$(pyenv init --path)"
[09:32:52] <jochum> Jonno_FTW: https://bpa.st/2KPA
[09:33:11] <jochum> you miss the virtualenv-init it seems
[09:33:53] *** Joins: mci64 (~mci64@185.242.190.95)
[09:33:57] <Jonno_FTW> jochum: line 7 is wrong, it's been changed at some point: https://github.com/pyenv/pyenv#installation
[09:34:15] <Jonno_FTW> I mean, if you do `pyenv update`, you will have to change it, they dropped the virtualenv stuff
[09:34:29] *** Quits: mci64 (~mci64@185.242.190.95) (Client Quit)
[09:34:38] <Jonno_FTW> idk it works now
[09:35:22] *** Joins: mci64 (~mci64@185.242.190.95)
[09:35:22] <jochum> Jonno_FTW: thank you, will change and test it.
[09:35:55] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[09:36:01] <jochum> Seems I have a very old version :)
[09:38:02] *** Quits: skeld (~skeld@2601:148:200:ac70:7021:6011:d19c:6413) (Read error: Connection reset by peer)
[09:38:28] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 272 seconds)
[09:39:39] *** Quits: mci64 (~mci64@185.242.190.95) (Client Quit)
[09:39:40] *** Quits: ckdcreation (~ckdCreati@147.55.133.134) (Read error: Connection reset by peer)
[09:39:55] *** Joins: ckdcreation (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[09:40:25] *** Joins: mci64 (~mci64@185.242.190.95)
[09:43:06] *** Quits: mci64 (~mci64@185.242.190.95) (Client Quit)
[09:44:09] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[09:44:22] *** Joins: mci64 (~mci64@185.242.190.95)
[09:44:57] *** Joins: yvehan (~yvehan@119.147.212.245)
[09:46:03] *** Quits: ShorTie (~ShorTie@242.sub-72-104-199.myvzw.com) (Remote host closed the connection)
[09:51:31] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[09:52:38] *** Joins: upsala (~zcb@185.213.155.160)
[09:54:49] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[09:55:20] *** Quits: mci64 (~mci64@185.242.190.95) (Quit: Connection closed)
[09:55:43] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (Remote host closed the connection)
[09:55:50] *** Quits: audiocat (~audio@2603-8081-1800-00ad-f351-4ddf-8729-f716.res6.spectrum.com) (Ping timeout: 252 seconds)
[09:55:57] *** Joins: mci64 (~mci64@185.242.190.95)
[09:59:00] *** Joins: jazzy (~jaziz@2600:380:8638:b14c:3d37:fea7:101f:573e)
[09:59:04] *** Quits: me-sudoer-dentne (~me-sudoer@45.112.144.181) (Quit: Leaving)
[09:59:37] *** Joins: i0e (~is0ke3@user/is0ke3)
[10:02:05] *** Quits: Zeturic (~Orimendix@50-25-46-156.krmtcmta02.res.dyn.suddenlink.net) (Quit: Leaving)
[10:03:08] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:07:05] *** Joins: ihristov (~ihristov@217.145.94.71)
[10:07:23] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 268 seconds)
[10:11:02] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[10:12:19] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[10:13:18] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[10:16:09] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 248 seconds)
[10:16:59] *** Quits: gloomy_desktop (~ldorigo@81.161.149.37) (Ping timeout: 258 seconds)
[10:22:57] *** Joins: frost (~frost@59.71.240.119)
[10:23:08] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 244 seconds)
[10:23:30] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 258 seconds)
[10:24:01] <mat001> Can I have two __init__ methoda in a class?
[10:24:32] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[10:24:34] <yvehan> So wired
[10:27:06] <Jonno_FTW> mat001: you can, but the 2nd will replace the first one
[10:27:09] <Jonno_FTW> (I think)
[10:27:17] <susam> mat001: Yes, but that would be very atypical and weird. What would happen in that case is that the second definition of __init__ will override the first one.
[10:28:52] <susam> mat001: It is no different than defining the same function twice. The second definition replaces the first one. For example, try: def f(): print(10). Then try: def f(): print(20). Then call: f(). You would see the output as 20.
[10:28:54] <Jonno_FTW> mat001: you can always try it and see https://bpa.st/2Q7A
[10:29:16] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[10:29:40] <Jonno_FTW> yeah class bodies are different from java. You can put your own code in them and it will run
[10:30:59] <mat001> True. The problem I have I need to issue a deprecation warning for one of the attributes in __init__. Warnings are function based, so I thought of separating that attribute into the second init and issue warning there. I have no idea if this a goo dpractice
[10:31:22] <Jonno_FTW> python doesn't support overloading like that
[10:31:46] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[10:33:27] <susam> mat001: If your __init__ takes keyword arguments or **kwargs, then you can detect if a deprecated keyword argument was used and issue a warning for that.
[10:33:57] <susam> mat001: And you can add the new preferred keyword arguments to the same __init__.
[10:34:10] <mat001> susam: hmm,thx, let me see
[10:35:08] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[10:35:21] <mat001> susam: the argument is experiment_map. Args are positional, hmm https://bpa.st/37OA
[10:35:23] <Jonno_FTW> can't you just do `if 'x' in kwargs: warnings.warn("x is deprecated", DeprecationWarning)
[10:35:48] <Jonno_FTW> mat001: you no longer need to inherit from object in python3
[10:36:12] <mat001> Jonno_FTW: I know, thx. The code base is Py2/Py3 friendly, that's why
[10:36:23] <Jonno_FTW> it's 2020
[10:36:26] <Jonno_FTW> 2021*
[10:36:45] <mat001> Jonno_FTW: yes, but some clients still tail on Py2 until they switch
[10:37:34] <Jonno_FTW> ok how about you make another class
[10:37:36] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[10:37:40] <Jonno_FTW> deprecate the old class
[10:38:03] <susam> mat001: I cannot think of a good solution for your situation. Let me tell you what I would do. I would create a new class or extend the existing class to create a new subclass with a new __init__() method that is now preferred. I will issue a deprecation warning from the __init__ of the previous class.
[10:38:09] <mat001> Jonno_FTW: another class for that argument specifically?
[10:38:16] <Jonno_FTW> your new class can even inherit from the old one and just override the __init__
[10:38:25] *** Joins: dvx (~dvx@185.63.97.64)
[10:38:59] <Jonno_FTW> mat001: you could make a super class that inherits the functionality, then make your old class and your new class inherit from it
[10:40:06] <mat001> Jonno_FTW: I had a hint in similar direction...will need to thiink through how that would impact the test of the code
[10:40:38] <mat001> Not sure if you're fmailiar with Swift, but it does the same thing extremely simple, with a decorator. This is the smae code (same sdk, but in swift): https://bpa.st/37OA
[10:40:51] <mat001> Jonno_FTW: sorrey, here: https://github.com/optimizely/swift-sdk/blob/3850038a3270dc923b6b094c37451430d22c5e83/Sources/Optimizely/OptimizelyConfig.swift#L46
[10:41:03] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[10:41:25] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[10:42:28] <Jonno_FTW> yeah I guess it seems a bit heavy handed to make new classes
[10:42:38] *** Quits: yvehan (~yvehan@119.147.212.245) (Quit: Quit)
[10:42:42] <Jonno_FTW> good lesson in the future for using keyword arguments
[10:42:53] *** Joins: yvehan (~yvehan@119.147.212.245)
[10:42:59] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[10:43:03] <mat001> In python I only know of warnings per function...
[10:43:11] <mat001> yeah
[10:43:57] <Jonno_FTW> I mean you can just print the deprecation warning if they pass 3 args instead of 4
[10:44:07] <Jonno_FTW> 4 instead of 3*
[10:44:12] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[10:44:15] <mat001> say more?
[10:44:25] <Jonno_FTW> actually that won't work
[10:45:17] <Jonno_FTW> here's some talk https://stackoverflow.com/questions/49802412/how-to-implement-deprecation-in-python-with-argument-alias
[10:45:51] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:46:21] *** Joins: seednode (~seednode@user/seednode)
[10:46:39] *** Quits: mci64 (~mci64@185.242.190.95) (Quit: Connection closed)
[10:46:50] <Jonno_FTW> or you could convert to keyword arguments, set the default to None and check if the one you want to deprecate is present
[10:46:53] *** Joins: rendar (~rendar@user/rendar)
[10:46:54] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 244 seconds)
[10:46:59] *** Joins: iflema (~ian@user/iflema)
[10:47:30] *** Quits: LiftLeft (~LiftLeft@212.102.59.168) (Ping timeout: 272 seconds)
[10:48:06] <Jonno_FTW> mat001: like this https://bpa.st/4WCA
[10:48:42] <mat001> Jonno_FTW: ooooh, I like this
[10:49:04] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-e001-f283-3e2e-ec80.res6.spectrum.com) (Quit: jarthur)
[10:49:45] *** Joins: shugo (~shugo@user/shugo)
[10:50:01] <shugo> what lsp do you guys use ?
[10:50:57] <Jonno_FTW> shugo: a what?
[10:51:43] <shugo> language server protocol
[10:52:21] <shugo> https://microsoft.github.io/language-server-protocol/
[10:52:26] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[10:54:40] <jinsun> you mean what language server you use, the protocol is only one
[10:55:31] <shugo> yeah i meant what language server you use and reccomend
[10:55:39] <jinsun> pylance with vscode for me, I think most vscode users use that because now it comes bundled with the python extension
[10:57:33] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[10:58:05] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[10:58:33] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[10:58:46] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 258 seconds)
[10:58:46] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[10:58:48] *** Lord_of_Life_ is now known as Lord_of_Life
[10:59:06] *** yogoyo_ is now known as yogoyo
[10:59:41] *** Joins: i0e (~is0ke3@user/is0ke3)
[11:00:07] *** Joins: IceMichael (~IceMichae@dynamic-046-114-152-117.46.114.pool.telefonica.de)
[11:00:11] <IceMichael> Good morning
[11:00:17] <IceMichael> does anyone have arguments against type hints?
[11:00:20] *** Quits: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 244 seconds)
[11:01:02] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[11:01:22] *** Joins: manti7 (~manti7@176.10.104.94)
[11:01:57] <mat001> Jonno_FTW: thx for the imput. I applied your suggestion. It doesn't error, that is good, but I don't see th ewarning printed either....
[11:01:59] <mat001> but on a good track
[11:02:25] *** Joins: kosh (~kosh@user/kosh)
[11:02:37] <bookworm> shugo: the python-lsp one that is community supoorted https://github.com/python-lsp/python-lsp-server
[11:04:09] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 248 seconds)
[11:04:47] <hexology> IceMichael: verbosity & readability penalty, type system has limitations (although it's improving)
[11:05:18] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[11:05:20] <jinsun> mat001: you might want to give stacklevel=2 in warn, see https://docs.python.org/3/library/warnings.html#warnings.warn
[11:05:35] *** Quits: hafat (~hafat@159.146.87.68) (Remote host closed the connection)
[11:05:41] <hexology> bookworm shugo i've been using https://github.com/pappasam/jedi-language-server, i didn't realize spyder took over the palantir one
[11:06:08] <IceMichael> hexology, hm, more verbosity could be pro or con. Readability, I know what you mean, but all in all I see it improved because you know what you are dealing with (name alone does not reveal this in many situations)
[11:06:31] <shugo> hexology: i was looking into palantir, spyder took over means ?
[11:06:33] *** Joins: khrbt (~znc@user/khrbt)
[11:06:35] <hexology> IceMichael: you asked for arguments against :)
[11:07:01] <IceMichael> hexology, yeah, I know, unfair to ask for arguments against and then argue against them in turn :)
[11:07:19] <hexology> shugo: python-language-server was originally developed and open-sourced by palantir, but it had bad performance problems. it appears that the developers of the spyder ide forked the palantir project and are continuing to work on it.
[11:07:20] *** Joins: mei (~mei@user/mei)
[11:07:25] *** Joins: LucaTM (~LucaTM@user/lucatm)
[11:07:28] <IceMichael> just saying that these ones I do not consider very strong (but maybe type hints ARE just nice)
[11:07:36] *** frost is now known as llllweqwe
[11:07:39] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[11:07:50] *** llllweqwe is now known as frost
[11:07:57] <IceMichael> then again, I'm wondering a bit... Python is a dynamically-typed language by choice. Now, there is a "trend" to introduce typing. Is this not somehow opposing its own character?
[11:08:25] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[11:08:40] <IceMichael> or is it rather like: if software is small or types are anyways clear, we don't need it. For larger software, we agree that static types make it easier, so we give you the possibility to add them?
[11:09:01] <jinsun> python ignores the type hints, adding type hints doesn't make it any less dynamic
[11:09:06] <deniska> IceMichael: I don't enjoy typing type hints, but it's obvious why some people do
[11:09:07] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 244 seconds)
[11:09:09] <IceMichael> it does when you add static type checkers
[11:09:22] <deniska> 15 years ago I switched to python not to type type names :P
[11:09:42] <IceMichael> yeah and I get why that's great, it's insanely easy/fast to write Python (once you are used to it)
[11:09:53] <deniska> but at the same time, for a huge codebase which is being worked on by many developers, I see the benefit
[11:10:00] <IceMichael> I just feel like then adjusting/maintaining/extending code after you have not looked at it for months is just a PITA
[11:10:11] <IceMichael> yeah
[11:10:13] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[11:10:16] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Remote host closed the connection)
[11:10:55] <IceMichael> and THEN again I'm wondering if Python is the right choice if you feel the need to introduce type hints. Is this a signal that a statically typed language would be a better choice at that point?
[11:11:16] <deniska> Nah, python is great even if you add type hints
[11:11:42] <IceMichael> hm right right
[11:11:53] *** Quits: LucaTM (~LucaTM@user/lucatm) (Read error: Connection reset by peer)
[11:11:53] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[11:11:58] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[11:12:42] <jinsun> in the REPL or jupyter or some otehr interactive thing type hints are just a bother, but when you work on an IDE then type hints are great, you find out bugs without runnning your code
[11:13:10] *** Joins: LucaTM (~LucaTM@user/lucatm)
[11:14:29] *** Quits: driib (~driib@185.195.233.162) (Ping timeout: 258 seconds)
[11:15:09] <jinsun> type hints also make it easier to read other people's code, but I have seen some people complain when they see type hints too, who think that reading more characters = harder
[11:15:12] <IceMichael> jinsun, yeah and that's what static typing is all about for me
[11:15:46] <IceMichael> hm okay... for me the "more characters = harder to read" attitude is a bit more present with junior devs to be honest...
[11:15:55] <IceMichael> but might also be some generation thing, not sure
[11:16:13] *** Joins: iflema (~ian@user/iflema)
[11:17:32] <IceMichael> I mean, I'm anyway speaking of larger architecture, e.g. using Django, Flask, FastAPI. For ML, scripting, that's not a question
[11:17:41] <IceMichael> (although ML also has complex types actually)
[11:18:52] *** frost is now known as niner
[11:19:05] *** niner is now known as frost
[11:19:16] <jinsun> the only really annoying thing about static type checking in python is that many libraries don't have annotations or partial annotations, the language doesn't force everyone to add annotations
[11:20:04] <jinsun> so I have to go and find if some other package provides type stubs for the library I'm using, or configure mypy to ignore missing imports
[11:22:00] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[11:24:47] *** Joins: ice9 (~ice9@user/ice9)
[11:25:49] *** Joins: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com)
[11:25:58] <jinsun> also the need to add py.typed file in my package to make mypy happy, otherwsie it assumes there are no type hints, never understood the reason for that
[11:27:18] <IceMichael> jinsun, hm, from what I read mypy is fine if there are no type hints. But you mean, if you add hints for types from an external package, it complains?
[11:28:11] *** Quits: frost (~frost@59.71.240.119) (Quit: Connection closed)
[11:28:30] *** Joins: frost (~frost@59.71.240.119)
[11:28:51] *** Joins: Pickchea (~private@user/pickchea)
[11:29:23] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 268 seconds)
[11:30:17] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[11:30:40] *** Joins: de-facto (~de-facto@user/de-facto)
[11:30:58] *** Quits: philipp64|work (~philipp64@174.27.13.9) (Ping timeout: 258 seconds)
[11:31:11] <jinsun> IceMichael: if you are asking about the py.typed thing, without py.typed file mypy gives a "Skipping analyzing X: found module but no type hints or library stubs”, error
[11:31:36] <IceMichael> ok, good to know
[11:31:42] <IceMichael> but that's probably a small death to die
[11:31:48] <IceMichael> (in English, this sounds stupid)
[11:31:51] *** Quits: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com) (Ping timeout: 268 seconds)
[11:31:56] <jinsun> IceMichael: they describe it here https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-type-hints-for-third-party-library
[11:32:28] <IceMichael> I see, thank you
[11:34:34] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[11:35:19] <deniska> IceMichael: I made a silly meme https://i.imgur.com/X19HaQh.png and while it's silly, the "real type annotations" are actually real :)
[11:35:25] *** Quits: lack (~lack@user/lack) (Read error: Connection reset by peer)
[11:37:01] <deniska> And I don't enjoy that amount of [] in a single expression, and these concepts could be better expressed as words
[11:37:33] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:37:34] *** rf` is now known as envex
[11:37:52] <IceMichael> deniska, yeah, it's not nicely readable, but I overall cannot agree with this picture
[11:37:52] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[11:38:06] <IceMichael> but that was my question before: if you need typehints in python, maybe python is the wrong language for the job
[11:38:22] <IceMichael> because it goes against it's basic idea (your first bullet point)
[11:38:28] *** Joins: lack (~lack@user/lack)
[11:38:44] <IceMichael> however, "just running your program" is a bit naive tbh :)
[11:38:53] <deniska> as I said, it's a silly meme, don't read deep into it :)
[11:39:05] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[11:39:09] <IceMichael> you posted it, so I comment it, hehe... but yeah, some true points in it I guess
[11:39:32] <IceMichael> I wonder, if golang could be some language that's still idiomatic closer to Python (as opposed to C#, Java) but is typed
[11:39:37] <deniska> IceMichael: python is used in many different niches for which it wouldn't be the best fit at first
[11:39:53] <jinsun> deniska: lol, and I agree with the brackets thing, but you can make aliases for the inner thing and just do Option[alias] or something
[11:39:57] <IceMichael> yeah, but then they have great frameworks
[11:39:58] <deniska> IceMichael: it became the best fit for these niches by adapting and growing new features/libraries
[11:40:05] <IceMichael> Django, e.g., has so many positive aspects
[11:40:28] <IceMichael> jinsun, yeah, that's how you usually do it in C++ e.g. (sometimes)
[11:40:32] <deniska> IceMichael: and yet ~20 years ago almost nobody in the right mind would use python for the web project
[11:41:01] <deniska> IceMichael: someone had to take the risk and do an unimaginable :)
[11:41:42] <deniska> and only then we got django and other web frameworks, a lot of which were lifted from existing websites, which authors took the risk of using a weird language for the job
[11:42:35] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Remote host closed the connection)
[11:42:49] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[11:44:23] <IceMichael> hehe yeah
[11:44:35] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[11:45:55] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[11:45:56] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[11:46:45] *** dcaro_away is now known as dcaro
[11:47:55] *** Quits: damonlynch (~ngaio@c-98-32-237-193.hsd1.in.comcast.net) (Quit: Leaving)
[11:47:59] <deniska> IceMichael: so type hints is how we sneak into "decades old legacy projects nobody fully understands but has to work on" territory
[11:48:21] <IceMichael> hm yeah, that's exactly what I would like to do with our codebase soon
[11:48:24] <deniska> (Well, this category is different from others because no new project starts being decades old)
[11:48:44] <IceMichael> because we tried to move one v1 API client to v2... and it was basically tons of work because the code was unreadable (no one worked on it for some years, so after that time...)
[11:48:47] <deniska> But it alleviates the pressure of wanting to get rid of python
[11:48:55] <IceMichael> I mean it was readable, but it would have been easier to parse C++ code
[11:49:46] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[11:50:14] *** Joins: oz4ga (~tim@93.90.4.233)
[11:50:58] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[11:56:05] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[11:57:49] *** Joins: driib (~driib@185.195.233.162)
[11:58:01] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[11:58:58] *** Joins: djapo (~archangel@user/djapo)
[11:59:37] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[12:00:37] <bookworm> especially with refactoring having a compiler help you is an enormous amount of support
[12:01:19] <bookworm> it's much easier to refactor go than python, simply do it then let the compiler point out what else you need to change
[12:02:43] <IceMichael> yeah, exactly
[12:02:51] <IceMichael> refactoring is really hard in Python from what I've seen so far
[12:04:12] <rendar> what has best asyncio support? rich, urwid or prompt kit?
[12:04:31] *** Joins: p-i- (~Ohmu@2403:6200:8870:dac3:24e5:4716:580b:a52a)
[12:05:21] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[12:06:34] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:06:40] *** Joins: jaggz (~jaggz@user/jaggz)
[12:06:42] *** Quits: pr3d4t0r (~zhenya01@user/pr3d4t0r) (Ping timeout: 240 seconds)
[12:08:32] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[12:08:57] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:09:04] *** Quits: Omega037 (~Omega037@047-024-168-024.res.spectrum.com) ()
[12:10:16] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[12:10:50] *** Quits: p-i- (~Ohmu@2403:6200:8870:dac3:24e5:4716:580b:a52a) (Ping timeout: 258 seconds)
[12:11:04] <raek> urwid supports using asyncio as the main loop (and I've done some simple hello world level experiments). it seemed to work! no idea about the others.
[12:13:36] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[12:15:38] *** Joins: shad (~shad@user/shad)
[12:16:41] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[12:17:25] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[12:20:32] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[12:20:35] *** Quits: {HD} (~{HD}@191.96.185.81) (Ping timeout: 268 seconds)
[12:24:34] <graingert> rendar: urwid supports trio twisted asyncio etc etc
[12:24:44] <rendar> graingert: thanks
[12:24:44] <graingert> rendar: you might like Textual
[12:25:11] <rendar> graingert: i'm messing with a problem i couldn't solve, check this out: https://github.com/willmcgugan/rich/discussions/1401
[12:25:20] <rendar> graingert: what would be your best solution?
[12:25:54] <graingert> rendar: what's wrong with the given answer?
[12:26:06] *** Joins: brylie (~Thunderbi@88-114-218-113.elisa-laajakaista.fi)
[12:26:21] <rendar> graingert: i'm not finding any help about that Spinner class in the docs, plus i don't want to create a secondary thread
[12:26:36] *** Joins: twobitsprite (~twobitspr@66.115.175.48)
[12:28:35] *** Joins: satyam0010 (~satyam@103.74.109.14)
[12:31:52] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[12:32:09] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[12:32:17] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 268 seconds)
[12:35:27] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:36:19] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Read error: Connection reset by peer)
[12:36:49] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[12:36:56] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (Quit: WeeChat 3.2)
[12:38:16] *** Quits: satyam0010 (~satyam@103.74.109.14) (Remote host closed the connection)
[12:38:20] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 272 seconds)
[12:38:30] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:39:21] *** Joins: confluence (~quassel@2a01:4f8:c17:3ca::2)
[12:39:53] <graingert> rendar: not quite sure what you're after - something like this? https://github.com/willmcgugan/rich/discussions/1401#discussioncomment-1157499
[12:41:09] *** Joins: ToAruShiroiNeko (~eva@user/toarushiroineko)
[12:41:25] <ToAruShiroiNeko> Hello, I am trying to make peace with mongopy and failing.
[12:41:37] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[12:42:13] <ToAruShiroiNeko> All I am trying to do is update a single record (weather it exists or not) and all its keys (weather they exist or not).
[12:43:05] <rendar> graingert: nope! i don't want ANY table at all, just N coroutines that print N "Waiting ..." immediately, then they sleep at random, and when a coroutine is done it adds "Done!" in the same line where the Waiting... is
[12:43:05] <ToAruShiroiNeko> I get nale 'foo' is not defined for keys that are not defined (or rather the first one)
[12:43:08] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[12:44:01] <ToAruShiroiNeko> I have it inside a '$set': { Timestamp: datetime.timestamp(datetime.now()) }
[12:44:44] <ToAruShiroiNeko> I have upset=True as well.
[12:45:17] <ToAruShiroiNeko> I am trying find_one_and_update
[12:45:33] *** Joins: georgios (~georgios@user/georgios)
[12:46:09] *** Joins: et_ (~et@user/et)
[12:47:12] *** Quits: et (~et@user/et) (Ping timeout: 272 seconds)
[12:47:12] *** et_ is now known as et
[12:48:17] *** Joins: Auron (~Auron956@user/auron)
[12:48:25] *** Quits: jochum (~jochum@user/jochum) (Read error: Connection reset by peer)
[12:48:44] *** Joins: jochum (~jochum@user/jochum)
[12:49:06] *** Parts: michaelis (~michaelis@193.183.209.17) ()
[12:49:24] <rendar> graingert: any clue how to accomplish that?
[12:49:32] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[12:50:25] *** Quits: nyah (~nyah@51.146.30.113) (Quit: leaving)
[12:50:32] *** Joins: Selamawit (~Guest55@196.190.154.166)
[12:52:53] *** Joins: mike18 (~geri@217-149-162-237.nat.highway.telekom.at)
[12:52:53] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[12:53:06] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[12:53:07] <mike18> hi, how can i share global variables between python files?
[12:53:22] <Selamawit> Hi All,
[12:53:36] <mike18> i defined a config.py and import it in the setter.py and getter.py file but its not working well
[12:53:50] *** Joins: cbasah (~armycook2@202.185.71.229)
[12:53:53] <Selamawit> I have a problem with a code presented below
[12:53:54] <mike18> i init the variables to None - when i call getter i see None and sometimes the data...
[12:54:31] <Selamawit> # generate the hillslope raster and plot it
[12:54:31] <Selamawit> # raster cell size [m]
[12:54:32] <Selamawit> xy = 5.
[12:54:32] <Selamawit> # bedrock profile
[12:54:33] <Selamawit> r_bedrock = SShapedProfile(
[12:54:33] <Selamawit>     ncols=100,
[12:54:34] <Selamawit>     dxy=xy,
[12:54:34] <Selamawit>     l_seg=[250,250,100],
[12:54:35] <Selamawit>     s_seg=[3.,10.,5.],
[12:54:35] <Selamawit>     radii=[2500,2500],
[12:54:36] <Selamawit>     base_elev=7.
[12:54:36] <Selamawit> )
[12:54:37] <Selamawit> r_bedrock.run()
[12:54:37] <Selamawit> # soil layer contact elevation
[12:54:38] <Selamawit> r_lithology = r_bedrock.prf + 1.5
[12:54:38] <Selamawit> # hillslope land surface elevation
[12:54:39] <Selamawit> r_hillslope = SShapedProfile(
[12:54:39] <Selamawit>     ncols=100,
[12:54:51] <rendar> Selamawit: use a no-paste website for Christ sake!
[12:54:54] <mike18> @Selamawit use paste :)
[12:55:14] <mike18> website
[12:55:59] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[12:56:02] <Selamawit> due to the noise in the code I keep getting different results every time I run the model. I need someone to help me get similar output every time I run the model
[12:56:04] *** Joins: rsrx (~rsrx@103.225.150.81)
[12:56:23] *** Joins: PJBoy (~PJBoy@user/pjboy)
[12:57:14] <ToAruShiroiNeko> Is this a bad place to ask about mongopy?
[12:57:24] *** Joins: entuland (~entuland@user/entuland)
[12:57:55] <jochum> I don't think so.
[12:57:56] <Selamawit> I pasted it. I am new to this site. Is there any thing I should do after parting the code
[12:58:23] <jochum> Selamawit: this is no place to paste code, use some pastbin site bpa.st for example
[12:58:53] <rendar> Selamawit: you have to paste your code in a website, e.g. bpaste and then paste the *link* here
[12:59:32] <Selamawit> https://bpa.st/KYYA
[12:59:56] <Selamawit> Can you see it now?
[13:00:39] *** Joins: et_ (~et@user/et)
[13:01:16] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-e54c-ad56-d060-cb6b.res6.spectrum.com)
[13:01:29] <rsrx> does anyone know how to write unit tests for selenium + chromium?
[13:01:43] <rsrx> i have pdf generation code which leverages selenium to do this
[13:01:48] <rsrx> but not sure on how to approach writing unit tests for it
[13:01:50] <Selamawit> So my question is, due to the noise inserted to mimic natural topography in the code, I keep getting different results (or different topography every time I run the model. I need someone to help me get similar output every time I run the model
[13:02:00] <graingert> rsrx: don't worry about unit/integration
[13:02:18] <graingert> rsrx: just make a small pytest test that runs selenium and checks the PDF
[13:02:40] <rsrx> how?
[13:02:45] <graingert> https://pypi.org/project/diff-pdf-visually/
[13:02:52] <rsrx> thanks i'll check that
[13:02:54] <graingert> rsrx: what do you have so far?
[13:03:02] <rsrx> i dont have tests at all for this
[13:03:02] *** Joins: Deneb (~johnch@93.125.7.51.dyn.plus.net)
[13:03:08] <rsrx> but pdf lambda generation works
[13:03:19] <graingert> rsrx: What
[13:03:33] <rsrx> what what?
[13:03:49] <rendar> Selamawit: here you should ask problems with actual python code, and not math/topology problems that are not related with python
[13:03:55] <graingert> rsrx: just write a test that runs the code as you would in production and check the output against an example pdf
[13:03:59] *** Joins: p-i- (~Ohmu@2403:6200:8870:dac3:24e5:4716:580b:a52a)
[13:04:00] *** Joins: plastico (~plastico@neomutt/plastico)
[13:04:00] *** Quits: khrbt (~znc@user/khrbt) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[13:04:09] *** Quits: et (~et@user/et) (Ping timeout: 248 seconds)
[13:04:09] *** et_ is now known as et
[13:04:14] <rsrx> yeah i'll try that
[13:04:15] <rsrx> thx
[13:06:22] *** Quits: p-i- (~Ohmu@2403:6200:8870:dac3:24e5:4716:580b:a52a) (Remote host closed the connection)
[13:06:51] *** Joins: p-i- (~Ohmu@2403:6200:8870:dac3:5eb:b277:23da:bf66)
[13:07:00] <Selamawit> Rendar, they are actually python codes. My issue is due to randomness I am unable to get similar results every time I run the code. I am asking for ways to avoid this randomness and get similar result every time i run the code
[13:07:46] *** Joins: y1n (~y1n@84-115-65-164.wifi.dynamic.surfer.at)
[13:08:04] *** Quits: brylie (~Thunderbi@88-114-218-113.elisa-laajakaista.fi) (Quit: brylie)
[13:08:15] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[13:09:26] <rendar> Selamawit: read this https://stackoverflow.com/questions/49812521/why-python-random-is-generating-the-same-numbers
[13:09:49] <jinsun> Selamawit: the usual way is to use a random rumber generator that allows you to set seed, and set a fixed seed so that you get the same "random" numbers everytime
[13:10:01] *** Joins: pilyn (~pilyn@user/pilyn)
[13:10:43] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:14:09] *** Joins: Atque (~Atque@user/atque)
[13:14:14] *** Quits: AlanMD_ (~AlanMD@193.105.140.131) (Read error: Connection reset by peer)
[13:14:49] *** Quits: yvehan (~yvehan@119.147.212.245) (Ping timeout: 248 seconds)
[13:14:54] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[13:15:23] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[13:16:04] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 268 seconds)
[13:16:15] *** Joins: yvehan (~yvehan@183.14.134.147)
[13:16:20] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 272 seconds)
[13:16:44] *** Joins: Pickchea (~private@user/pickchea)
[13:18:22] *** Joins: khrbt (~znc@user/khrbt)
[13:25:06] *** Quits: mike18 (~geri@217-149-162-237.nat.highway.telekom.at) (Remote host closed the connection)
[13:26:12] *** Joins: node1 (~node1@user/node1)
[13:26:50] *** Quits: node1 (~node1@user/node1) (Remote host closed the connection)
[13:27:10] *** Joins: node1 (~node1@user/node1)
[13:27:44] *** Quits: pyre (~pyre@crimeboss.nillas-power.com) (Ping timeout: 272 seconds)
[13:27:59] *** Joins: drd (~drd@93-39-151-19.ip76.fastwebnet.it)
[13:28:05] *** Joins: cheater (~Username@user/cheater)
[13:29:27] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi)
[13:30:26] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2)
[13:31:52] *** Quits: ntdll (ntdll@user/ntdll) (Ping timeout: 256 seconds)
[13:32:51] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[13:33:02] *** Joins: ntdll (ntdll@user/ntdll)
[13:34:50] *** Joins: matkor (~matkor@93.179.197.152)
[13:35:26] *** Joins: stoiclunchbox (~stoiclunc@user/stoiclunchbox)
[13:37:47] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[13:39:14] *** Joins: Julian (~tos9@python/site-packages/Julian)
[13:39:46] *** Quits: ntdll (ntdll@user/ntdll) (Ping timeout: 272 seconds)
[13:41:11] *** Quits: Selamawit (~Guest55@196.190.154.166) (Quit: Client closed)
[13:41:42] *** Joins: ntdll (~ntdll@user/ntdll)
[13:44:43] *** Joins: Snyp (~rksht@49.207.195.147)
[13:46:02] *** Joins: stpz (~stpz@240e:341:2298:ea00:800:ef02:2954:aa66)
[13:46:08] *** Quits: Snyp (~rksht@49.207.195.147) (Client Quit)
[13:46:13] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[13:51:15] *** Joins: jokoon (~eio@2a01:e0a:542:e160:b0d2:da2d:122e:2acd)
[13:51:43] <jokoon> any shortcut for interactive python in a windows powershell? for example to autocomplete functions?
[13:53:28] *** Joins: Jefren (~Jefren@70.35.66.78)
[13:54:20] *** Quits: khrbt (~znc@user/khrbt) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[13:55:38] *** Quits: y1n (~y1n@84-115-65-164.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[13:56:16] <Repiphany> ipython
[13:56:52] *** Joins: Selamawit (~Selamawit@196.190.154.166)
[14:02:31] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.2)
[14:02:48] *** Joins: khrbt (~znc@user/khrbt)
[14:04:11] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[14:07:14] *** BlessJah_ is now known as BlessJah
[14:07:36] <ToAruShiroiNeko> Where would be a good place to ask mongopy questions if not here?
[14:08:34] *** Joins: y1n (~y1n@84-115-64-16.wifi.dynamic.surfer.at)
[14:08:39] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[14:08:56] <Julian> ToAruShiroiNeko: Here is fine. Otherwise presumably in a mongopy-specific venue, which you'd have to check their readme or documentation for.
[14:09:29] <ToAruShiroiNeko> Ok, I am trying to make peace with mongopy and failing. All I am trying to do is update a single record (weather it exists or not) and all its keys (weather they exist or not).
[14:09:41] <ToAruShiroiNeko> I get name 'foo' is not defined for keys that are not defined (or rather the first one)
[14:09:54] <ToAruShiroiNeko> I have it inside a '$set': { Timestamp: datetime.timestamp(datetime.now()) }. I have upset=True as well.
[14:11:42] *** Joins: rsx (~dummy@ppp-188-174-141-119.dynamic.mnet-online.de)
[14:11:50] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:11:52] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[14:14:23] *** Joins: henistein (~henistein@2001:8a0:c1b3:6b01:d9ec:fb46:e708:751d)
[14:16:06] *** Quits: georgios (~georgios@user/georgios) (Ping timeout: 268 seconds)
[14:16:42] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[14:16:51] <henistein> I think I found a bug in numpy or I am just dumb today: https://bpa.st/U4ZA
[14:17:05] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[14:17:24] *** Joins: georgios (~georgios@user/georgios)
[14:17:57] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[14:18:23] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[14:19:04] <Julian> henistein: What makes you say it's a bug, I suspect that behavior is intentional
[14:19:43] <henistein> why?
[14:20:05] <bjs> henistein: why do you think it's a bug though?
[14:20:13] <Julian> Probably because that operation changes the shape of the thing, so numpy doesn't want to promise it can do it in place
[14:20:28] <Julian> (Which it seems is what the error message is saying)
[14:20:39] <henistein> a = a - b is the same as a -= b or am I wrong?
[14:20:43] <bjs> henistein: yes you are wrong
[14:20:44] <Julian> henistein: They are unrelated in Python.
[14:20:50] <bjs> henistein: in numpy for example, `-=` will be in-place
[14:20:54] <bjs> whereas just `-` will make a new array
[14:21:01] <henistein> oh alright
[14:21:28] <bjs> henistein: your `a = a - b` will create a new array, with a different shape than the original `a`, then overwrite the variable `a` with it.
[14:21:47] <henistein> thank you we are always learning
[14:23:42] <Julian> indeed!
[14:24:10] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::682e)
[14:24:50] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[14:25:09] <petemc> hi, im using Popen to run a dell racadm command, the racadm command is prone to failure and i often need to retry, could someone suggest a better way to achieve this than this: https://bpa.st/OL4A
[14:26:37] *** Quits: rsrx (~rsrx@103.225.150.81) (Quit: Leaving)
[14:27:07] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[14:27:07] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Killed (copper.libera.chat (Nickname regained by services)))
[14:27:07] *** __jmcantrell__ is now known as jmcantrell
[14:28:12] *** Joins: m4r35n357 (~ian@host-92-13-130-45.as13285.net)
[14:28:31] *** Joins: matsaman (~matsaman@user/matsaman)
[14:28:36] <bjs> petemc: maybe you want a `while` loop
[14:28:48] <bjs> (and btw it might be nicer to use subprocess.run() rather than Popen())
[14:29:05] <ross> the number of times itertools/functools have *exactly* what I need is impressive. I need to remember to reach for them more often lmao
[14:29:48] <petemc> bjs: ok, cheers!
[14:32:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[14:32:26] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:33:59] *** Quits: Selamawit (~Selamawit@196.190.154.166) (Quit: Client closed)
[14:34:38] *** Joins: pwnd_sfw7 (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[14:35:45] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Read error: Connection reset by peer)
[14:35:45] *** pwnd_sfw7 is now known as pwnd_sfw
[14:37:29] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 248 seconds)
[14:38:24] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:39:37] *** Quits: FatDarrell (~textual@68.91.156.229) (Ping timeout: 248 seconds)
[14:40:09] *** Quits: shad (~shad@user/shad) (Ping timeout: 248 seconds)
[14:41:57] *** Joins: shad (~shad@user/shad)
[14:43:21] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[14:44:13] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[14:44:27] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[14:45:38] *** Quits: georgios (~georgios@user/georgios) (Ping timeout: 272 seconds)
[14:48:14] *** Joins: mikeliuk (~mikeliuk@109.249.187.96)
[14:48:48] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[14:49:58] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:52:48] *** Quits: fortuno51_ (~fortuno51@37.120.156.254) (Remote host closed the connection)
[14:55:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[14:55:37] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 248 seconds)
[14:55:43] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:56:15] *** Quits: y1n (~y1n@84-115-64-16.wifi.dynamic.surfer.at) (Ping timeout: 276 seconds)
[14:56:26] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[14:56:56] *** Quits: stpz (~stpz@240e:341:2298:ea00:800:ef02:2954:aa66) (Quit: Client closed)
[14:57:49] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[15:00:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 248 seconds)
[15:01:30] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:07:04] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[15:07:13] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:08:25] *** Joins: y1n (~y1n@84-115-65-217.wifi.dynamic.surfer.at)
[15:13:13] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Ping timeout: 248 seconds)
[15:13:25] *** Joins: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[15:13:28] *** Quits: henistein (~henistein@2001:8a0:c1b3:6b01:d9ec:fb46:e708:751d) (Quit: Client closed)
[15:18:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 248 seconds)
[15:18:14] *** Joins: veracioux (~user@5.43.87.160)
[15:18:31] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:21:36] *** Quits: WarpedAI (~Warped@user/warped) (Quit: We Gone! Bye Bye)
[15:21:51] <graingert> rendar: as far as I can tell your example was impossible without anyio (or the techniques anyio uses)
[15:22:21] *** Joins: Pickchea (~private@user/pickchea)
[15:22:21] <rendar> graingert: huh? why?
[15:22:39] <veracioux> Hi, is there a convenient way to store arguments passed to a function in an object, so that those arguments can be passed to another function later? For example when i call `args = fun1('a', 'b', c='d')` I want it to return an object such that something like `fun2(*args)` or `fun2(**args)` behaves as if I called `fun2('a', 'b', c='d')`
[15:22:52] <graingert> It looks like you want to start some child task concurrent to some parent task and then tie that parent tasks lifetime to the child task
[15:23:20] <graingert> rendar: and you did a tasks = []; tasks.append(asyncio.create_task(...))
[15:23:21] <nedbat> veracioux: you have to store the args and kwargs separately
[15:23:42] <nedbat> veracioux: def fun1(*args, **kwargs): return (args, kwargs)
[15:23:44] <graingert> Don't create a list of tasks, just pass them to gather in one expression
[15:24:06] <graingert> await asyncio.gather(*(async_fn(v) for v in vs))
[15:24:12] <nedbat> veracioux: ak = fun1(....);   fun2(*ak[0], **ak[1])
[15:24:13] <rendar> graingert: but what about i have to create the coroutines in a for loop and then running them concurrently?
[15:24:25] <graingert> rendar: you need anyio for that
[15:24:29] <veracioux> nedbat: I understand, thanks for your help
[15:24:43] <bjs> graingert: are you going to mention create_task ?
[15:24:52] <graingert> rendar: it ties child task lifetimes to a parent task
[15:25:14] <graingert> bjs: create_task.... _group()?
[15:25:36] *** Joins: {HD} (~{HD}@191.96.185.182)
[15:25:39] <bjs> I mean you're saying "impossible" whereas what you really mean is "I don't want to tell you how, and anyio makes it much easier"
[15:25:53] <graingert> Well you can copy the code from anyio but it's a pain
[15:26:39] <rendar> i saw in a lot of code, creating a list of coroutines then sending that list to gather()
[15:26:58] <graingert> You have to create a task, grab your current task, add a callback to the new task to cancel your current task then cancel any other tasks you started then gather all the failure outcomes and catch the CancelledError if you need to
[15:27:32] <graingert> Then reraise either the CancelledError or the group of exceptions from the child tasks
[15:27:37] *** Quits: drd (~drd@93-39-151-19.ip76.fastwebnet.it) (Ping timeout: 248 seconds)
[15:28:14] <graingert> There's also a bunch of edge cases when your current task fails before your child task is progressed
[15:28:38] *** Quits: Oddity (Oddity@user/oddity) (Ping timeout: 258 seconds)
[15:29:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[15:29:27] <graingert> rendar: that's different to your example where you did an await in the loop creating tasks
[15:29:31] <rendar> uhm
[15:30:20] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:30:30] <graingert> tasks = []
[15:30:30] <graingert> for v in vs: tasks.append(async_fn(ham))
[15:30:30] <graingert> await asyncio.gather(*tasks)
[15:30:38] <graingert> rendar: you mean like that?
[15:31:01] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[15:31:25] <graingert> If you write code like that it means there's a large window between the async function being called and the async function being awaited. This is a code smell in async fn programming
[15:31:38] <rendar> graingert: yes
[15:32:30] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[15:32:46] <bjs> rendar: are you still trying to get the coro-to-print-on-its-own-line working?
[15:32:49] <rendar> graingert: why that large window?! gather() starts immediately to run those functions, in the same await line!
[15:32:53] <rendar> bjs: yes
[15:33:15] <graingert> The await happens on the second line
[15:33:34] <rendar> yes
[15:33:42] <rendar> and in the for loop you sipmly put coroutines into a list
[15:33:44] <rendar> you don't run them!
[15:34:02] <graingert> right but your other example used create_task but didn't await it till the loop had finished
[15:34:30] <graingert> it's easy to start with something like this:
[15:34:30] <graingert> tasks = []; for v in vs: tasks.append(async_fn(ham))
[15:34:31] <graingert> await asyncio.gather(*tasks)
[15:34:32] <bjs> rendar: okay fine https://bpa.st/DH5Q
[15:34:40] <bjs> rendar: I still think using Urwid or something would be easier
[15:35:01] <graingert> bjs: you don't need the (*( there
[15:35:10] <bjs> Oh right haha
[15:35:12] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[15:35:19] *** Joins: Oddity (Oddity@user/oddity)
[15:35:32] *** Quits: yvehan (~yvehan@183.14.134.147) (Ping timeout: 258 seconds)
[15:35:43] <bjs> This was just a write-once piece of code, it can probably be cleaned up in a few places
[15:35:49] <graingert> and then have it become https://www.irccloud.com/pastebin/BfrTAcsS/bad.py
[15:35:57] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[15:36:04] *** Joins: yvehan (~yvehan@223.104.63.30)
[15:36:40] <graingert> I actually use my own gather function that takes partial async fns, rather than coroutines
[15:36:55] <ross> is it possible to zip two lists against a key other than their index? for example `list(zip([1,2,3], [1,1,3], key=lambda v: v))` -> `[(1, 1), (None, 1), (2, None), (3, 3)]`
[15:36:56] <graingert> this way there's 0 window between call and await
[15:36:58] *** Joins: p-i-_ (~Ohmu@2403:6200:8870:dac3:24e5:4716:580b:a52a)
[15:37:14] <bjs> ross: no
[15:38:08] <ross> haha, fair enough
[15:38:10] <bjs> ross: I can't think of anything that'd help with that code,  itertools might have something.  If they are sorted then you can do a kind of "merge" like operation which is not too tricky to write
[15:38:17] <graingert> ross: you mean like a join?
[15:38:57] <rendar> graingert: uhm, but what is the problem await-ing a function after a while? if the function has completed its running, it immediately returns, otherwise it blocks the current flow and gives flow to another coroutine...
[15:39:08] <ross> the X of my XY is that I'm trying to `itertools.groupby` to group two lists of dicts that share a key, and iterate over the groups pairwise
[15:39:41] <graingert> rendar: it might fail in that window, and you'll lose the Exception
[15:39:42] <ross> but where there is a key that's only present in the 1st list, I want the 2nd item of the pair to be an empty group
[15:39:49] <rendar> bjs: your code doesn't work if while coroutines are sleeping, other coroutines print something
[15:39:52] <graingert> Also your current task might be cancelled in the window
[15:39:54] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[15:39:55] <SamuelMarks> hi
[15:40:00] <bjs> rendar: what do you mean "doesn't work"?
[15:40:08] *** Quits: p-i- (~Ohmu@2403:6200:8870:dac3:5eb:b277:23da:bf66) (Ping timeout: 252 seconds)
[15:40:11] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Quit: WeeChat 3.2)
[15:40:12] <graingert> Then you won't propagate that cancellation to child tasks
[15:40:23] <rendar> bjs: i will show you
[15:40:31] <rendar> graingert: i see
[15:40:44] <bjs> rendar: and also that's exactly what my code does, some coroutines are sleeping and others are printing.
[15:40:52] <Repiphany> ross: Could you use a defaultdict or .get(key, [])
[15:40:53] <rendar> graingert: so, the basic rule is: every time a coroutine launches another coroutine, it must immediately wait it?
[15:40:58] <graingert> rendar: essentially I saw that your program used global variables and large call-await windows. I fixed those and your program worked
[15:41:14] <graingert> rendar: every time you call an async function you must await it immediately
[15:41:15] <bjs> rendar: if you `await some_coro()` it will immediately start running the coro, if that's what you mean. (`await` is like `yield from`)
[15:41:22] <rendar> graingert: yes i saw it, but i want to understand in detail why it failed
[15:41:32] <graingert> rendar: I don't really know
[15:41:35] <bjs> rendar: what is the "failure" we're looking at here?  I must've missed something
[15:41:36] <SamuelMarks> I have an annoying correct test which generates—with mocks—everything from package name to setup.py to __init__.py &etc. It's annoying because it's slow. But it's correct because it `pip install .` in setup and `pip uninstall -y` in teardown. What's a faster way? - Maybe some PYTHONPATH + sys.modules hackery?
[15:41:48] <rendar> bjs: in my example i wanted to run a new coroutine, without awaiting it
[15:41:53] <graingert> bjs: it's a question on the rich discuss page
[15:41:56] <ross> Repiphany: potentially - will take me a moment to work out how to convert this to a defaultdict form. admittedly unsure how .get() would apply
[15:42:01] <graingert> I've lost the URL though
[15:42:16] <rendar> that's the url https://github.com/willmcgugan/rich/discussions/1401
[15:42:37] <bjs> rendar: well asyncio works by switching between coroutines at an `await`.  You don't have to `await` it yourself, you can always create_task(coro_fn()) and then `await asyncio.sleep(10)` for e.g. will run the scheduled tasks
[15:43:19] <bjs> create_task is a "low level" API in asyncio and you are required to do a lot of work manually (re cancellation and stuff).
[15:44:36] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[15:45:12] <rendar> bjs: try to run this and see https://bpa.st/G6TA
[15:45:42] <bjs> rendar: well yeah print() is gonna just overwrite random characters on the screen
[15:45:44] <bjs> what did you expect?
[15:45:47] <rendar> bjs: but graingert said that if i create that coro_fn() i must await it immediately
[15:46:01] <rendar> bjs: well i don't want that..
[15:46:20] <bjs> rendar: you cannot both write to arbtirary points on the screen (to e.g. put lines on different coroutines) _and_ just randomly stream bytes (through print()) to stdout
[15:46:21] <Yhg1s> rendar: then don't use print.
[15:46:41] <Yhg1s> rendar: print will write wherever the cursor happens to be.
[15:46:45] <rendar> Yhg1s: i don't use print, but a lot of code i use, it will use it
[15:46:49] <bjs> rendar: you dont *have* to,  like I say, you can create_task to schedule something.
[15:46:58] <Yhg1s> rendar: then you will have to change the code, or not run it in the same process.
[15:47:00] <ross> Repiphany: aha! I get it - dump both groupbys to a defaultdict, recording the keys, and then iterate over those keys. thank you!
[15:47:08] <bjs> rendar: then you'll have to use curses to put the cursor back to where you want the next print() to happen
[15:47:10] <rendar> bjs: but graingert said that there could be a window where i don't get the exceptions..
[15:47:39] <bjs> rendar: well like I said, create_task is a low-level API and you'll have to `await` it at some point to get any exceptions out
[15:47:55] <rendar> yes, i await it, but my code fails, and i don't get why
[15:48:07] <rendar> https://github.com/willmcgugan/rich/discussions/1401 this is my code, and then graingert's one just right after
[15:48:16] <bjs> rendar: well if it fails because of an exception then await will give you the exception no?
[15:48:23] <rendar> no!
[15:48:29] <rendar> i don't get any exceptions, but it fails to run
[15:48:35] <rendar> (properly)
[15:48:41] <rendar> if you read that URL you'll see
[15:49:12] *** michele_ is now known as michele
[15:54:16] *** Joins: fanis30 (~fanis30@adsl-11.37.6.3.tellas.gr)
[15:54:40] *** Quits: shad (~shad@user/shad) (Ping timeout: 272 seconds)
[15:55:52] *** Joins: mci64 (~mci64@194.25.223.4)
[15:55:52] <bjs> rendar: I cannot see why it fails.
[15:56:27] <rendar> me neither
[15:56:42] <rendar> but apparently graingert did, and fixed that code of mine with anyio
[15:56:46] <rendar> but i can't see the error..
[15:57:04] <Yhg1s> rendar: as graingert said, the error is that you're not schedulings the jobs you create.
[15:57:31] <graingert> I couldn't see why it failed
[15:57:33] <Yhg1s> or rather, not waiting on the result.
[15:57:40] <rendar> Yhg1s: but if you look at the code, i create_task() inside a loop, and when the loop finished i await that task i have created! bjs said that it could be done...
[15:57:44] <graingert> I just fixed the global variables and the call-await windows
[15:57:57] <rendar> graingert: i see, ok
[15:57:58] <graingert> And it fixed itself
[15:58:00] <Yhg1s> rendar: you await *one of the tasks* you created. The last one you created.
[15:58:11] *** Parts: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it) ()
[15:58:20] <rendar> Yhg1s: if you look more closely, you can see that .. in that loop i create only 1 task
[15:58:34] <graingert> rendar: yeah that's why I couldn't see why it failed
[15:58:36] *** Quits: yvehan (~yvehan@223.104.63.30) (Read error: Connection reset by peer)
[15:58:43] *** Joins: rsrx (~rsrx@103.225.150.81)
[15:58:44] <graingert> I expected that to be why
[15:58:47] <graingert> But it wasn't
[15:58:52] <rendar> yeah
[15:59:06] <Yhg1s> rendar: so you do.
[15:59:47] *** Joins: yvehan (~yvehan@36.155.117.34)
[15:59:51] <rendar> graingert: ok, it could be about the global variables and not that task creation, can you explain how you fixed those global variables, and why i should do that?
[16:00:08] <graingert> rendar: I moved them into `async def amain()`
[16:00:12] <graingert> and passed them around
[16:00:28] <graingert> instead of mutating them from global scope
[16:00:28] <rendar> uhm ok, but why that should be relevant?
[16:00:29] *** Quits: y1n (~y1n@84-115-65-217.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[16:00:40] <graingert> dunno it's just bad
[16:00:49] <rendar> coroutines happen to run 1 at once...
[16:00:54] <bjs> rendar: what is this `with live:` thing doing anyway?
[16:01:05] <bjs> I don't think I've ever seen this rich Live object before
[16:01:19] <rendar> bjs: i think it's a new thing
[16:01:29] <bjs> but what is the `with` doing?
[16:01:31] <rendar> bjs: i read it from Rich's help samples
[16:01:44] <bjs> rendar: where is that help sample? I couldn't find this Live thing in its readme
[16:01:47] <rendar> acquire the live object, i don't know
[16:02:06] <bjs> https://rich.readthedocs.io/en/latest/live.html ? this
[16:02:27] <rendar> bjs: https://github.com/willmcgugan/rich/blob/master/examples/live_progress.py
[16:02:32] <rendar> yes
[16:02:40] <bjs> rendar: are you sure the `with live` should be there?
[16:02:53] <rendar> no, not sure
[16:02:55] <bjs> as in *there* not just should it exist at all, but maybe it shouldn't be around that await
[16:03:07] <bjs> rendar: did you try running this code without `live` and just using prints?
[16:03:27] <rendar> bjs: i will try
[16:03:31] *** Quits: Fluxx (~Fluxx@user/fluxx) (Ping timeout: 258 seconds)
[16:03:46] *** Quits: jokoon (~eio@2a01:e0a:542:e160:b0d2:da2d:122e:2acd) (Ping timeout: 240 seconds)
[16:03:52] <bjs> maybe asyncio isn't anything to do with it and your `with live` is wrong;  the difference in graingert's code is that his `with Live(...)` is much higher in the call stack.
[16:04:19] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[16:04:21] <bjs> if the exiting from the Live context manager disables live updates then you have a race, where once the first coro finishes the later ones will have live closed so they can't make live updates anymore
[16:04:29] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[16:04:51] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[16:04:58] <rendar> bjs: if i get rid of that `live:`, Rich won't print progress bars any more
[16:05:07] <bjs> rendar: I didn't mean there as in should it exist at all
[16:05:10] <graingert> rendar: ah it's the call/enter window not the call/await window
[16:05:15] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[16:05:26] <bjs> but *there*, should it not be higher up?  like in your run_all
[16:05:30] <graingert> rendar: your call/enter window should be as small as possible also
[16:05:36] <rendar> graingert: i see
[16:05:50] <bjs> rendar: because at the moment that `with live` gets entered multiple times and if it exits before other coros are done...
[16:05:55] <rendar> graingert: can you make an example of call/enter window?
[16:06:02] <bjs> I strongly suspect your asyncio code, while a bit weird, is correct.
[16:06:11] <rendar> i see
[16:06:15] <graingert> in `with Live():` the call and the enter happen as close together as possible
[16:06:27] <graingert> in `await ham()` the call and the await happen as close together as possible
[16:06:39] <rendar> ok
[16:06:50] <rendar> i'll make some tests
[16:06:55] <rendar> thank you all
[16:06:56] <graingert> in `live = Live(); with live:` the call and enter happen separately and there's a 1 line call/enter window
[16:07:22] <graingert> in `co_ham = ham(); await co_ham` the call and await happen separately and there's a 1 line call/await windows
[16:07:23] *** Quits: kai (~kai@x50d24799.cust.hiper.dk) (Quit: Ping timeout (120 seconds))
[16:07:51] *** Joins: kai (~kai@x50d24799.cust.hiper.dk)
[16:09:04] <bjs> rendar: the more I read the more convinced I am your `with live:` line is in the wrong place.
[16:09:07] <graingert> you use a ExitStack to manage your call/enter windows and an anyio.create_task_group to manage your call/await windows
[16:09:28] <graingert> but in this case you can just inline your `with Live():`
[16:13:03] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 268 seconds)
[16:13:35] *** Joins: y1n (~y1n@84-115-65-217.wifi.dynamic.surfer.at)
[16:14:04] *** Quits: mikeliuk (~mikeliuk@109.249.187.96) (Quit: Connection closed)
[16:14:29] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[16:15:01] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:16:12] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 276 seconds)
[16:17:47] *** Joins: shad (~shad@user/shad)
[16:19:54] *** Quits: rsrx (~rsrx@103.225.150.81) (Quit: Leaving)
[16:20:41] *** qwedfg_ is now known as qwedfg
[16:20:57] *** Joins: niv (~niv@limbo.cypherpunks.io)
[16:21:23] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[16:22:01] *** Quits: yvehan (~yvehan@36.155.117.34) (Ping timeout: 248 seconds)
[16:22:11] *** Joins: yvehan (~yvehan@223.104.63.30)
[16:22:58] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[16:23:16] *** Joins: LordVan (~lordvan@gentoo/developer/lordvan)
[16:24:30] *** Joins: zeden (~zeden@user/zeden)
[16:28:04] *** Quits: ELFrederich (~ELFrederi@134.244.29.70) (Quit: Leaving)
[16:28:10] *** Joins: Julian (~tos9@python/site-packages/Julian)
[16:31:18] *** Joins: Pickchea (~private@user/pickchea)
[16:32:21] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[16:33:07] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[16:33:20] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[16:34:22] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[16:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:29] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 268 seconds)
[16:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:38:13] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[16:39:00] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[16:40:32] *** Quits: devcpu (~rusty@208.116.227.242) (Quit: leaving)
[16:41:45] *** Quits: veracioux (~user@5.43.87.160) (Remote host closed the connection)
[16:41:58] *** Joins: veracioux (~user@5.43.87.160)
[16:43:07] *** Quits: Madda (~Madda@208.249.9.51.dyn.plus.net) (Quit: Leaving)
[16:48:35] *** Quits: odrling (~odrling@korone.aidoru.agency) (Quit: see you space cowboy)
[16:48:52] *** Joins: drd (~drd@93-39-151-19.ip76.fastwebnet.it)
[16:49:02] *** Quits: yvehan (~yvehan@223.104.63.30) (Ping timeout: 268 seconds)
[16:49:22] *** Joins: Julian (~tos9@python/site-packages/Julian)
[16:50:20] *** Joins: tlaxkit (~hexchat@170.253.40.255)
[16:51:15] *** Joins: odrling (~odrling@korone.aidoru.agency)
[16:51:46] *** Joins: georgios (~georgios@user/georgios)
[16:52:25] *** Quits: y1n (~y1n@84-115-65-217.wifi.dynamic.surfer.at) (Ping timeout: 248 seconds)
[16:53:56] *** Joins: gerty (~gerty@235.ip-51-77-195.eu)
[16:55:10] <PJBoy> does it ever make sense to use a `threading.Semaphore(0)`?
[16:55:25] <PJBoy> seems like it could only ever deadlock on call to acquire
[16:56:02] *** Joins: dez (uid92154@user/dez)
[16:58:32] *** Joins: raxor2k (~raxor2k@18.240.215.193.static.cust.telenor.com)
[16:58:38] <raxor2k> graingert: are you here
[16:59:03] <raxor2k> guys.. i got corona, Ive been in quarantine hotel for 5 days now, its the worst experience for me ever.. stay safe everyone
[16:59:35] <graingert> Oh shit man
[16:59:37] <bjs> PJBoy: a Semaphore(0) is basically an event
[17:00:04] <PJBoy> hm, I'm not sure what you mean by event
[17:00:04] <graingert> Get well soon raxor2k!
[17:00:15] <PJBoy> oh
[17:00:18] * PJBoy scrolls down
[17:00:36] <PJBoy> right
[17:00:39] <PJBoy> that makes sense
[17:00:45] <bjs> PJBoy: I mean, you acquire() to wait on an event, then another can release() to signal it
[17:00:50] <PJBoy> yeah
[17:00:59] <bjs> (but really, there's threading.Event to do that, Semaphore is low-level)
[17:01:15] <PJBoy> yeah this code is crap
[17:01:22] *** Quits: georgios (~georgios@user/georgios) (Ping timeout: 240 seconds)
[17:01:27] <PJBoy> but I think that's how it's being used, yeah
[17:01:35] <PJBoy> thanks for that
[17:02:02] *** Joins: nyah (~nyah@51.146.30.113)
[17:02:18] <raxor2k> graingert: thanks, im starting to get better now, but its not been a great experience. Trying to work as best as i can from the hotel
[17:02:24] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Ping timeout: 268 seconds)
[17:02:53] <raxor2k> now over to the question: how can i use "sql inner join" with sqlalchemy + fastapi restapi? I want to be able to get "body_area" info from a exercise_ID:  https://bpa.st/DZKA
[17:08:34] *** Joins: gusto (~Augustus@109.255.100.54)
[17:10:16] *** Joins: op0x0f05 (~op0x0f05@5.29.10.223)
[17:11:45] *** Joins: pyre (~pyre@crimeboss.nillas-power.com)
[17:12:04] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[17:12:34] *** Quits: raxor2k (~raxor2k@18.240.215.193.static.cust.telenor.com) (Ping timeout: 272 seconds)
[17:14:16] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[17:15:12] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:16:51] *** Joins: raxor2k (~raxor2k@46.230.136.74)
[17:17:54] <raxor2k> My connection timed out, so i need to ask again: how can i use inner join with sqlalchemy + fastapi restapi? this is my code: https://bpa.st/PG3Q     I tried with 'return db.query(models.Exercises).join(models.BodyAreas).filter(models.Exercises.exercise_ID == exercise_id).first()'  but does not work
[17:18:33] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 248 seconds)
[17:18:43] *** Quits: p-i-_ (~Ohmu@2403:6200:8870:dac3:24e5:4716:580b:a52a) (Remote host closed the connection)
[17:18:44] *** Joins: d3sync (~d3sync@130.43.80.239.dsl.dyn.forthnet.gr)
[17:19:14] *** Joins: p-i- (~Ohmu@2403:6200:8870:dac3:5448:1a8e:7f8:fa96)
[17:20:01] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[17:21:41] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[17:22:01] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Remote host closed the connection)
[17:27:00] <graingert> raxor2k: what do you mean by does not work?
[17:27:22] *** Joins: varaindemian (uid73404@id-73404.charlton.irccloud.com)
[17:28:11] <raxor2k> graingert: this is the result :https://dpaste.org/wULh
[17:28:23] <raxor2k> I also want to show details from "body_areas" table
[17:28:26] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: Textual IRC Client: www.textualapp.com)
[17:28:31] <raxor2k> but only body_area_ID is shown
[17:28:56] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[17:29:06] *** Joins: iomari891 (~iomari891@105.112.138.38)
[17:29:13] *** Joins: wovixo (~wovixo@128.104.205.49)
[17:29:37] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:29:39] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Ping timeout: 276 seconds)
[17:32:57] *** Quits: Mattiasl_ (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Ping timeout: 248 seconds)
[17:36:10] *** Joins: mjbatty (~mjbatty@82.2.17.205)
[17:36:47] <raxor2k> I mean, is it so difficult to perform a inner join on sqlalchemy ?
[17:37:04] *** Joins: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416)
[17:38:15] <graingert> You need to select both models
[17:38:17] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[17:38:23] *** Quits: op0x0f05 (~op0x0f05@5.29.10.223) (Quit: Client closed)
[17:38:26] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[17:38:54] <graingert> with db.query(models.Exercise, models.BodyAreas).join(...)
[17:39:01] <graingert> raxor2k: ^
[17:40:44] *** Joins: Warped (~Warped@user/warped)
[17:41:46] *** Joins: bninja (~bloodninj@user/bloodninja)
[17:42:00] <raxor2k> graingert: like this? https://dpaste.org/8xTZ
[17:42:06] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[17:42:43] <raxor2k> it seems to be working.
[17:43:30] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:43:40] <raxor2k> thanks!
[17:45:29] *** Quits: bloodninja123 (~bloodninj@user/bloodninja) (Ping timeout: 258 seconds)
[17:45:45] *** Cyp_ is now known as Cyp
[17:46:24] *** Joins: undefined_bob (~undefined@user/undefined-bob/x-5411918)
[17:46:33] *** Parts: undefined_bob (~undefined@user/undefined-bob/x-5411918) (WeeChat 1.5)
[17:48:12] <wyre> hi everybody ... I'm curious ... because I have this code https://bpa.st/PDIQ that drives this board https://www.openhacks.com/page/productos/id/2773/title/HTHR0214-162A and ... I'm curious ... where can I have the documentation to see all available commands?
[17:49:51] <graingert> raxor2k: I'm glad you got it working but I'm worried about you! Try to get some rest
[17:50:28] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 258 seconds)
[17:50:55] *** Quits: mjbatty (~mjbatty@82.2.17.205) (Quit: Client closed)
[17:51:39] <cdown_> wyre: https://docs.python.org/3/
[17:51:55] <wyre> cdown_, I don't get your point
[17:52:09] <wyre> the code uses hidapi to interact through usb
[17:52:10] <Yhg1s> wyre: what do you mean by 'available commands'?
[17:52:12] <cdown_> that's where "all available commands" are.
[17:52:18] <wyre> but ... it's sending commands to the board
[17:52:29] <cdown_> ...that's possibly the most unclear way you could have asked that.
[17:52:44] *** resmo_ is now known as resmo
[17:52:56] <wyre> Yhg1s, https://bpa.st/PDIQ#1L167
[17:53:01] <SamuelMarks> I have an annoying correct test which generates—with mocks—everything from package name to setup.py to __init__.py &etc. It's annoying because it's slow. But it's correct because it `pip install .` in setup and `pip uninstall -y` in teardown. What's a faster way? - Maybe some PYTHONPATH + sys.modules hackery?
[17:53:09] *** Joins: mikeliuk (~mikeliuk@109.249.187.96)
[17:53:22] <cdown_> this doesn't seem to have much to do with python, i'd look at your board documentation.
[17:53:31] <wyre> cdown_, I cannot find it
[17:53:44] <cdown_> ok, well then how are we supposed to? :-)
[17:54:00] <Yhg1s> wyre: I'm afraid that's very much a question about the USB interface of those boards, not Python.
[17:54:01] <wyre> cdown_, I mean ... are there a few files in the link I pasted
[17:54:14] <cdown_> then i'm sure you can find them if they're there.
[17:54:38] <wyre> cdown_, that's the point apparently it's just testing code
[17:54:41] <wyre> in c
[17:55:25] *** cdown_ is now known as cdown
[17:55:40] <wyre> Yhg1s, the board has an atmega8a
[17:55:45] <wyre> but I'm not sure if this has something to do
[17:56:11] <wyre> I mean, I don't know actually what's the USB interface 😞
[17:57:22] *** Quits: raxor2k (~raxor2k@46.230.136.74) (Ping timeout: 258 seconds)
[17:57:52] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[17:58:23] *** Quits: mci64 (~mci64@194.25.223.4) (Quit: Connection closed)
[18:00:21] *** Quits: pilyn (~pilyn@user/pilyn) (Quit: Leaving)
[18:01:35] *** Joins: pr3d4t0r (~zhenya01@user/pr3d4t0r)
[18:03:40] *** Quits: inom (~inom@176.59.108.224) (Read error: Connection reset by peer)
[18:05:03] *** Joins: yvehan (~yvehan@117.136.79.156)
[18:05:55] *** Quits: tims (~tims@61.69.131.46) (Ping timeout: 268 seconds)
[18:07:14] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Quit: leaving)
[18:09:17] *** Quits: LordVan (~lordvan@gentoo/developer/lordvan) (Quit: Leaving)
[18:10:25] *** Quits: michele (~eraser@user/michele) (Quit: restart)
[18:11:51] *** Joins: Barones (~Barones@2804:7f3:8986:e028:6d72:919e:6719:d7c5)
[18:13:00] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[18:17:37] *** Quits: Linux77 (~kvirc@187-126-71-30.user3p.veloxzone.com.br) (Ping timeout: 245 seconds)
[18:20:08] *** Quits: fanis30 (~fanis30@adsl-11.37.6.3.tellas.gr) (Quit: Leaving)
[18:20:51] *** Joins: Julian (~tos9@python/site-packages/Julian)
[18:22:03] *** Joins: odoood (~odoood@2601:c8:c003:a550::8)
[18:22:24] *** andrewSC_ is now known as andrewSC
[18:22:44] *** Joins: inom (~inom@176.59.119.1)
[18:23:14] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[18:23:27] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[18:24:23] *** Joins: p-i-_ (~Ohmu@mx-ll-171.6.248-30.dynamic.3bb.co.th)
[18:24:24] *** Quits: yvehan (~yvehan@117.136.79.156) (Ping timeout: 268 seconds)
[18:25:47] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[18:26:29] * SnoopJ isn't sure what the question is
[18:26:36] *** Joins: michele_ (~eraser@user/michele)
[18:27:14] <bjs> SamuelMarks: mocks setup.py ?
[18:27:22] *** Quits: p-i- (~Ohmu@2403:6200:8870:dac3:5448:1a8e:7f8:fa96) (Ping timeout: 240 seconds)
[18:27:33] *** Joins: brylie (~Thunderbi@88-114-218-113.elisa-laajakaista.fi)
[18:27:48] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@46.109.76.104)
[18:28:12] <Ronalds_Mazitis_> hey, python3 -m http.server 8000 does not seem to run on windows 10
[18:28:12] *** Quits: brylie (~Thunderbi@88-114-218-113.elisa-laajakaista.fi) (Client Quit)
[18:28:19] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:e9d2:464c:d2f2:fb68)
[18:28:28] <Ronalds_Mazitis_> where do windows stores the logs?
[18:28:39] <Ronalds_Mazitis_> does*
[18:29:07] <SnoopJ> wyre, looking at the source behind your second link, it seems they claim that the firmware offers exactly two commands: HID Get Feature and HID Set Feature for the bitmask that controls all the relays, and some data about the board.
[18:29:12] <Julian> Ronalds_Mazitis_: What error do you get
[18:29:29] <Ronalds_Mazitis_> nothing
[18:29:32] *** Joins: benjwadams (~benjwadam@96.238.4.28)
[18:29:35] <wyre> SnoopJ, where are you seeing that? 🤔
[18:29:59] <SnoopJ> wyre, http://vusb.wikidot.com/project:driver-less-usb-relays-hid-interface under "Details of the device"
[18:30:04] *** Joins: yvehan (~yvehan@117.136.79.156)
[18:30:06] <Ronalds_Mazitis_> I just get empty space
[18:30:47] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[18:31:13] <Ronalds_Mazitis_> I am running node in same time
[18:31:14] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[18:31:24] <Ronalds_Mazitis_> if that could be a problem
[18:31:29] *** Quits: michele_ (~eraser@user/michele) (Ping timeout: 258 seconds)
[18:31:45] <wyre> SnoopJ, so ... I guess there is a standard way to "HID Get Feature" and "HID Set Feature", right?
[18:33:00] *** _janus- is now known as _janus
[18:34:01] <SnoopJ> wyre, yes
[18:34:22] *** Quits: ihristov (~ihristov@217.145.94.71) (Quit: Connection closed)
[18:34:24] <wyre> SnoopJ, is this described in hid docu? 🤔
[18:36:16] <SnoopJ> wyre, yes, this will be part of the specification. You should probably just read the documentation of whatever HID library you're using, though, unless you want to learn about the inner workings of USB for other reasons.
[18:36:43] <raek> Ronalds_Mazitis_: do you get the first line? ("Serving HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/) ...")
[18:36:57] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[18:38:56] <SnoopJ> wyre, it seems like the Python you shared uses the HID library's feature getter, but doesn't use its setter and just does a raw write on the device. The C library linked from that other page uses usbhidGetReport() and usbhidSetReport() symmetrically.
[18:40:16] *** Joins: michele_ (~eraser@user/michele)
[18:40:59] *** Joins: DaNeenjah (~jake@adsl-74-230-6-204.hsv.bellsouth.net)
[18:42:53] *** Joins: georgios (~georgios@user/georgios)
[18:42:59] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 258 seconds)
[18:45:35] *** Quits: michele_ (~eraser@user/michele) (Ping timeout: 268 seconds)
[18:46:00] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 268 seconds)
[18:46:12] *** Joins: mattil (~mattilinn@62-113-178-139.bb.dnainternet.fi)
[18:48:04] *** Quits: mattil (~mattilinn@62-113-178-139.bb.dnainternet.fi) (Max SendQ exceeded)
[18:48:58] *** Joins: mattil (~mattilinn@62-113-178-139.bb.dnainternet.fi)
[18:49:22] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[18:50:18] *** Quits: gambl0re (~gambl0re@24.140.237.124) (Ping timeout: 268 seconds)
[18:50:29] *** Joins: michele_ (~eraser@user/michele)
[18:50:49] *** Quits: drd (~drd@93-39-151-19.ip76.fastwebnet.it) (Ping timeout: 248 seconds)
[18:51:12] *** Joins: mci64 (~mci64@194.25.223.4)
[18:51:42] *** Joins: gambl0re (~gambl0re@24.140.237.124)
[18:51:58] *** Quits: michele_ (~eraser@user/michele) (Read error: Connection reset by peer)
[18:52:35] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:e9d2:464c:d2f2:fb68) (Quit: Leaving)
[18:56:20] *** Quits: rsx (~dummy@ppp-188-174-141-119.dynamic.mnet-online.de) (Quit: rsx)
[18:57:43] *** Joins: thimslugga (~thimslugg@70.18.231.28)
[18:59:40] *** Joins: Matheo_bis (~yaaic@user/matheo-bis/x-4309430)
[19:02:20] *** Joins: michele_ (~eraser@user/michele)
[19:02:24] *** Quits: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net) (Quit: leaving)
[19:03:28] *** Quits: georgios (~georgios@user/georgios) (Ping timeout: 268 seconds)
[19:03:54] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[19:05:03] *** Quits: kindablue (znc@irc.tpurist.com) (Quit: System Rebooting..)
[19:05:56] *** Joins: kindablue (znc@irc.tpurist.com)
[19:07:23] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[19:07:42] *** Joins: me-sudoer-dentne (~me-sudoer@45.112.144.181)
[19:09:09] <ska> Anyone know how to create and start a hashicorp vault server in pytest?
[19:09:15] *** Quits: irrgit_ (~irrgit@192.241.175.183) (Remote host closed the connection)
[19:12:22] *** Quits: frost (~frost@59.71.240.119) (Quit: Connection closed)
[19:13:19] <Wulf> ska: using the subprocess module?
[19:13:55] <Wulf> ska: perhaps using a pytest fixture
[19:15:32] *** Quits: pan (~quassel@pankid.club) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:15:57] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[19:16:43] <wyre> I cannot find that C library which uses usbhidGetReport()
[19:16:51] <wyre> SnoopJ, what link do you mean?
[19:16:53] *** Quits: Skyfire (~pyon@user/pyon) (Quit: WeeChat 3.2)
[19:16:59] *** Joins: pan (~quassel@pankid.club)
[19:18:42] *** Quits: simplicity (~yti@user/simplicity) (Remote host closed the connection)
[19:19:18] *** Joins: simplicity (~yti@user/simplicity)
[19:20:03] *** Joins: georgios (~georgios@user/georgios)
[19:20:29] *** Joins: lystra_ (~lystra@d53-64-11-169.nap.wideopenwest.com)
[19:20:43] *** Quits: lystra (~lystra@d53-64-11-169.nap.wideopenwest.com) (Read error: Connection reset by peer)
[19:22:01] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:23:45] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[19:24:15] *** Quits: mci64 (~mci64@194.25.223.4) (Quit: Connection closed)
[19:24:46] *** Quits: lystra_ (~lystra@d53-64-11-169.nap.wideopenwest.com) (Ping timeout: 258 seconds)
[19:25:56] *** Joins: Madda (~Madda@208.249.9.51.dyn.plus.net)
[19:26:44] *** Quits: Barones (~Barones@2804:7f3:8986:e028:6d72:919e:6719:d7c5) (Remote host closed the connection)
[19:27:02] *** Joins: Barones (~Barones@2804:7f3:8986:e028:6d72:919e:6719:d7c5)
[19:28:36] *** Quits: georgios (~georgios@user/georgios) (Ping timeout: 276 seconds)
[19:28:44] <SnoopJ> wyre, https://github.com/pavel-a/usb-relay-hid/blob/master/lib/usb_relay_lib.c#L97 https://github.com/pavel-a/usb-relay-hid/blob/master/lib/usb_relay_lib.c#L155
[19:28:46] *** Quits: Matheo_bis (~yaaic@user/matheo-bis/x-4309430) (Quit: Yaaic - Yet another Android IRC client - http://www.yaaic.org)
[19:29:29] *** Joins: cypris (uid507362@user/cypris)
[19:30:01] <wyre> SnoopJ, and those are part of hiddata.h?
[19:30:26] *** michele_ is now known as michele
[19:30:37] <SnoopJ> wyre, I have no idea, but they aren't defined there.
[19:30:48] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@46.109.76.104) (Quit: Connection closed)
[19:31:05] <SnoopJ> in that .c file, I mean.
[19:32:09] <wyre> SnoopJ, I can see the prototypes in the header https://github.com/pavel-a/usb-relay-hid/blob/master/commandline/hiddata.h#L91
[19:32:16] <wyre> but is there not a complementary c file?
[19:33:02] <wyre> why is this? justa a header? 🤔
[19:33:35] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[19:35:08] *** Joins: Harlin (~DonQixote@2603:300b:663:e800:1702:3c:82cb:1afc)
[19:36:04] <Harlin> As Python uses 'self' to refer to the "current" class ... is there a particular keyword or other method to refer to the "current" function?
[19:37:04] <yitz> No
[19:37:06] <Wulf> Harlin: there are obscure ways to retrieve it. But what's the use case?
[19:37:14] *** Joins: lystra_ (~lystra@d53-64-11-169.nap.wideopenwest.com)
[19:37:24] <yitz> You can try to mess with the stack
[19:37:37] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:e9d2:464c:d2f2:fb68)
[19:38:00] <Harlin> Wulf, I was thinking of a way to pass the name of a function being used to a validator function to output in case an error happens
[19:38:20] <Harlin> I could probably use logging or something but I feel that's overkill for this script.
[19:38:31] *** Joins: Skyfire (~pyon@user/pyon)
[19:38:57] <SnoopJ> Harlin, it's just the first parameter in an instance method, it doesn't _have_ to be `self`
[19:39:11] <bjs> Harlin: `self` isn't even a keyword either
[19:39:24] <bjs> Harlin: you can just name the current function by name: `def f(): print(f)`  for example
[19:39:30] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:e9d2:464c:d2f2:fb68) (Client Quit)
[19:39:33] <wyre> SnoopJ, oh, apparently they are defined in hiddata_osx.c (for unix-like systems, I guess)
[19:39:42] <bjs> Harlin: and functions know their `def`d name: `print(f.__name__)`
[19:40:07] <Harlin> ok, was wondering if __name__ might do it. I haven't tried writing the validator yet.
[19:40:07] <Staunch> Harlin: you can use the __nam—— yeah like bjs said :P
[19:40:12] <Harlin> ;)
[19:41:16] <Harlin> now that I think about it, it's kind of unnecessary ;-) ... thinking my way into a corner.
[19:41:28] <wyre> SnoopJ, sorry, it must be hiddata_libusb01.c because osx has to be for macos
[19:41:37] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@46.109.76.104)
[19:42:16] <SnoopJ> wyre, for the purpose of using that device I imagine it doesn't really matter where things are defined as long as it speaks enough of HID to talk to the board
[19:42:39] <SnoopJ> doesn't seem like a big ask since it's just those two bits of functionality
[19:43:10] *** Joins: mike18 (~geri@217-149-162-237.nat.highway.telekom.at)
[19:43:53] *** Joins: nuala (~nuala@user/nuala)
[19:43:57] <mike18> hi - how can i share a global variable between different python files? i added a config.py and defined the var there and than those files imported the var - is that the right way?
[19:44:04] <wyre> SnoopJ, sure, but I've never worked with hid and I'm trying to understand how this whole thing works
[19:44:26] <Wulf> mike18: sounds good
[19:44:36] <mike18> should i init the var with None?
[19:44:44] *** Joins: qlixed (~qlixed@181.44.129.13)
[19:45:10] *** Joins: op0x0f05 (~op0x0f05@5.29.10.223)
[19:45:20] <Wulf> mike18: is None a valid and useful value?
[19:45:25] <mike18> no
[19:45:29] <Wulf> mike18: then no
[19:46:07] <mike18> the global var x, y is for: data = [go.Scatter(x=config.x, y=config.y, mode="lines+markers")]
[19:46:15] <mike18> how to init it than?
[19:46:23] <zware> mike18: If the value is going to change, you can't just import it in multiple places and expect to get the update.  Instead of `from config import thing` and use `thing`, you'd need to do `import config` and use `config.thing`
[19:46:41] *** Joins: junktext (~junktext@77.247.181.219)
[19:46:53] <mike18> zware: what to do than?
[19:47:21] *** Quits: odoood (~odoood@2601:c8:c003:a550::8) (Quit: Leaving)
[19:47:31] *** Joins: IgIgOrzoy (~IgIgOrzoy@user/igigorzoy)
[19:48:11] <kosh> mike18, look at the last part of the line he wrote
[19:48:17] *** Quits: gambl0re (~gambl0re@24.140.237.124) (Ping timeout: 268 seconds)
[19:48:22] *** Quits: CyberShadow (vladimir@89.28.117.31) (Quit: CREO ERGO SVM)
[19:48:32] <mike18> the import config needs to be in the func i use the config.var?
[19:49:17] <zware> mike18: No, it can be a global import.  You just need to access `var` via the `config` namespace rather than importing `var` directly
[19:50:24] <mike18> i cant do from foo import constants ?
[19:50:26] <mike18> config
[19:50:31] <mike18> from foo import config ?
[19:51:29] <mike18> instead i need: import foo.config as config ?
[19:51:32] *** Quits: thimslugga (~thimslugg@70.18.231.28) (Quit: thimslugga)
[19:51:37] <zware> mike18: `from some_package import config` is fine, but `from some_package.config import var` won't work for you unless `var` is constant and set at import time
[19:51:38] <foureyes> why does it have to be global? why not just make a config object or dict in whatever file and import the instance?
[19:51:50] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[19:51:54] <zware> ^ also valid :)
[19:52:42] <mike18> i create a instance of some object when the user calls /foo ... than that instance stores the data and  than the user calls /plot ... to plot that data
[19:52:43] <SnoopJ> mike18, if you do `from foo import bar`, it's the same thing as `import foo; bar = foo.bar`. In both cases, if the thing inside `foo` gets updated, the thing you pulled out will NOT get updated, because that's how names work. If you want updates, you need to do it another way.
[19:53:15] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:e9d2:464c:d2f2:fb68)
[19:53:19] <foureyes> ok, I don't think you need to mess with global objects for that
[19:53:33] <mike18> was just as quick test to fix the plotting...
[19:53:51] <foureyes> sure, and I'm not against using global variables I'm just not sure how it helps here
[19:54:10] <mike18> i need some instance which is shared accross /foo and /plot
[19:54:15] <mike18> right?
[19:54:22] *** Joins: CyberShadow (vladimir@89.28.117.31)
[19:54:40] <foureyes> sure and when I do that I have the instance logic all in a file, and then I instantiate the instance I want to reuse at the bottom of the file, and import it in the places I need it
[19:54:40] <mike18> maybe in the api itself
[19:54:42] <grym> mike18: normally, i pass configs to where i want them
[19:54:59] <mike18> i have an api for /foo and /plot
[19:55:23] <mike18> better call it: i have an api for /generateData and /plot
[19:55:28] <mike18> http routes
[19:55:37] *** Joins: Sheilong (uid293653@id-293653.charlton.irccloud.com)
[19:56:06] <newdimension> Anyone use Poetry with pyenv? If I set a local python version (pyenv local 3.9.6) Poetry still uses the global version to create a venv
[19:56:09] <foureyes> and is this global object a helper to use those apis and return data?
[19:56:49] <grym> newdimension: probably need to rehash your shell session?
[19:57:09] <grym> newdimension: but poetry can take a specific python interpreter to use as its base, otherwise it defaults to the one it was installed with
[19:57:14] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[19:58:30] *** Joins: cdown_ (~cdown@89.32.122.5)
[19:58:58] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[20:00:09] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 248 seconds)
[20:00:15] *** cdown_ is now known as cdown
[20:01:06] *** Quits: Barones (~Barones@2804:7f3:8986:e028:6d72:919e:6719:d7c5) (Remote host closed the connection)
[20:02:16] <SnoopJ> `poetry env use /path/to/some/python3` is the "use exactly this one to make the venv" spelling
[20:04:50] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Ping timeout: 272 seconds)
[20:05:52] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:07:06] *** Joins: zmt00 (~zmt00@user/zmt00)
[20:09:56] *** Quits: Mechanismus (~LabMonkey@2602:306:cf62:e270:19c1:d739:4799:9431) (Quit: Leaving)
[20:10:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[20:11:45] <newdimension> grym: re it defaults to the one it was installed with. When in a folder where a local version is set, entering python in shell points to the version I specified . How does Poetry call the other version? Also, the first example found here https://python-poetry.org/docs/managing-environments/ implies that what I have in mind should work
[20:12:46] <grym> newdimension: i suspect poetry looks up its own site
[20:13:42] *** Quits: matkor (~matkor@93.179.197.152) (Quit: Konversation terminated!)
[20:15:25] *** Joins: Elzington (~Elzington@104.129.24.120)
[20:15:47] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[20:16:01] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[20:17:03] *** Joins: thimslugga (~thimslugg@70.18.231.28)
[20:17:21] *** Quits: resmo (~resmo@135-58-239-77.dyn.cable.fcom.ch) (Remote host closed the connection)
[20:17:26] *** Quits: thimslugga (~thimslugg@70.18.231.28) (Remote host closed the connection)
[20:17:43] *** Joins: thimslugga (~thimslugg@70.18.231.28)
[20:19:10] *** Joins: resmo (~resmo@2a00:d420:9:8a00:2fcd:2871:26f9:43b3)
[20:22:02] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[20:22:22] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[20:23:49] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[20:24:11] *** Quits: yvehan (~yvehan@117.136.79.156) (Ping timeout: 258 seconds)
[20:24:44] *** Joins: darksun (~darksun@user/darksun)
[20:24:44] *** Quits: op0x0f05 (~op0x0f05@5.29.10.223) (Quit: Client closed)
[20:26:01] *** Quits: cdown (~cdown@89.32.122.5) (Remote host closed the connection)
[20:28:17] *** Joins: cdown (~cdown@89.32.122.5)
[20:29:08] <newdimension> grym: You seem to be right. I found a config file in ~/.local/share/pypoetry/venv that points to a specific pyenv version. Their docs seem to imply it can adapt to the local one though
[20:30:10] *** Quits: jazzy (~jaziz@2600:380:8638:b14c:3d37:fea7:101f:573e) (Ping timeout: 272 seconds)
[20:30:11] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@46.109.76.104) (Quit: Connection closed)
[20:30:17] *** Joins: brylie (~Thunderbi@88-114-218-113.elisa-laajakaista.fi)
[20:30:51] *** Joins: stealth_ (~stelath_@216-197-160-97.regn.static.sasknet.sk.ca)
[20:31:24] *** Joins: Mechanismus (~LabMonkey@2602:306:cf62:e270:944d:4535:4d00:8de1)
[20:31:33] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[20:32:27] *** Joins: Betal (~Betal@user/betal)
[20:32:57] *** Joins: LiftLeft (~LiftLeft@154.21.23.18)
[20:33:12] *** Joins: yvehan (~yvehan@117.136.79.156)
[20:34:19] *** Joins: ckdCreations (~ckdCreati@147.55.133.136)
[20:36:27] *** Quits: me-sudoer-dentne (~me-sudoer@45.112.144.181) (Quit: Leaving)
[20:36:27] *** Quits: ckdcreation (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 258 seconds)
[20:37:59] *** Quits: Mechanismus (~LabMonkey@2602:306:cf62:e270:944d:4535:4d00:8de1) (Ping timeout: 258 seconds)
[20:38:33] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Ping timeout: 248 seconds)
[20:38:57] *** Joins: Mechanismus (~LabMonkey@2602:306:cf62:e270:f53a:9c8b:ad87:f3c)
[20:40:12] *** Joins: Zeturic (~Orimendix@50-25-46-156.krmtcmta02.res.dyn.suddenlink.net)
[20:40:22] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:40:49] *** Quits: benjwadams (~benjwadam@96.238.4.28) (Ping timeout: 246 seconds)
[20:41:16] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[20:41:25] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[20:41:26] *** Joins: yakiza (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net)
[20:42:14] *** Joins: cdown_ (~cdown@163.114.131.1)
[20:42:49] *** Quits: tlaxkit (~hexchat@170.253.40.255) (Ping timeout: 248 seconds)
[20:45:18] *** Quits: cdown (~cdown@89.32.122.5) (Ping timeout: 272 seconds)
[20:45:28] *** cdown_ is now known as cdown
[20:45:38] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 268 seconds)
[20:47:05] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 248 seconds)
[20:47:44] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:48:37] *** Quits: bdeshi (~bdeshi@bdeshi.space) (Quit: bouncer disconnect)
[20:48:55] *** Joins: bdeshi (~bdeshi@bdeshi.space)
[20:51:47] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 258 seconds)
[20:52:20] *** waxfire238 is now known as waxfire
[20:52:37] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 245 seconds)
[20:53:19] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-cd06-376d-051c-caa6.res6.spectrum.com)
[20:54:42] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[20:56:48] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:56:53] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:57:26] *** Quits: veracioux (~user@5.43.87.160) (Remote host closed the connection)
[20:57:32] *** Joins: me-sudoer-dentne (~me-sudoer@45.112.144.181)
[20:58:00] *** Joins: Barones (~Barones@2804:48dc:8500:0:c583:969:38ff:428a)
[20:58:47] <stealth_> "distutils.version — use the packaging package" according to https://www.python.org/dev/peps/pep-0632/ any idea where exactly is that? i am using "setuptools._distutils.version" not sure if this is right since its external package
[21:01:16] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Remote host closed the connection)
[21:03:25] *** Quits: bdeshi (~bdeshi@bdeshi.space) (Quit: bouncer disconnect)
[21:03:56] *** Joins: FluffyMask (~masque@user/fluffymask)
[21:04:12] *** Joins: bdeshi (~bdeshi@bdeshi.space)
[21:05:11] *** Quits: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416) (Ping timeout: 252 seconds)
[21:08:19] <jinsun> stealth_: https://github.com/pypa/packaging
[21:09:38] <stealth_> jinsun, shouldn't that be in stdlib ?
[21:09:58] *** Quits: yogoyo (~yogoyo@user/yogoyo) (Quit: bye)
[21:10:09] *** Joins: dba (uid502594@id-502594.stonehaven.irccloud.com)
[21:10:58] <dba> how can I delete this jQuery224009678850433706754_1628698589375( from a file/string keeping in mind these numbers are changing
[21:12:23] <yitz> var = ""
[21:12:44] <jinsun> stealth_: maybe it should but the "new" packaging recommendations tell to use stuff outside the stdlib all the time, setuptools, build, pip, toml
[21:12:52] <yitz> sed -i /jQuery/d file
[21:13:14] <supakeen> dba: re.sub plus a regex akin to `jQuery\d+_\d+\(`.
[21:14:25] *** Joins: damonlynch (~ngaio@c-98-32-237-193.hsd1.in.comcast.net)
[21:15:58] <stealth_> jinsun, i dono, its confusing
[21:16:36] <stealth_> they should have made packaging a part of stdlib
[21:16:48] *** Quits: brylie (~Thunderbi@88-114-218-113.elisa-laajakaista.fi) (Quit: brylie)
[21:18:45] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[21:19:39] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[21:20:09] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi) (Read error: Connection reset by peer)
[21:20:32] <ska> I was able to get the docker container running in pytests, but the Hashicorp vault creates root-owned folders that must be removed before the next test can work.
[21:21:18] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 258 seconds)
[21:21:44] <ska> Not sure how to cleanup inside pytest.
[21:23:41] <mike18> grym: are there any issues when i do it like that? https://ideone.com/ZKeFXW
[21:23:47] <mike18> SnoopJ:
[21:23:56] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 272 seconds)
[21:23:56] <stealth_> ska, pytest stores its test files in `/tmp` if pytest was given root while the folder was created, then give it root on clean up as well
[21:23:59] *** Joins: jetchisel (jetchisel@user/jetchisel)
[21:24:47] <ska> It may be docker that is creating those.. I don't think pytest is doing it.
[21:25:03] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[21:25:16] *** Joins: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416)
[21:25:53] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[21:25:56] <stealth_> ska, if you know what folder it creates you can remove those folders!
[21:26:33] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Ping timeout: 248 seconds)
[21:26:52] <stealth_> ska, could use `shutil.rmtree` to move all sub-dir as well
[21:27:03] *** Quits: Mikaela (~sid12355@Feneas/Mikaela) (Ping timeout: 244 seconds)
[21:27:07] *** Joins: kuler (~kulernil@gateway/tor-sasl/kuler)
[21:27:36] *** Joins: Mikaela (~sid12355@Feneas/Mikaela)
[21:27:44] *** Quits: damonlynch (~ngaio@c-98-32-237-193.hsd1.in.comcast.net) (Ping timeout: 272 seconds)
[21:28:45] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[21:30:10] *** Quits: wolfgang (~wolfgang@101.174.170.3) (Remote host closed the connection)
[21:31:32] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[21:33:46] *** Joins: wolfgang (~wolfgang@101.174.170.3)
[21:33:47] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:34:35] *** Joins: Pickchea (~private@user/pickchea)
[21:34:42] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[21:35:08] <mike18> why cant i store data in line 20? https://ideone.com/ZKeFXW
[21:35:19] <mike18> and us it in func plot?
[21:35:38] <grym> mike18: Ellipsis is ..., not ....
[21:35:58] <mike18> thats just for pseudo code...
[21:36:12] <mike18> when i call plot the self.data is None...
[21:36:22] <grym> that looks like python to me
[21:36:25] <mike18> even generate_data was called before
[21:36:27] *** Joins: kapad (~kapad@46.246.193.116.dsl.dyn.forthnet.gr)
[21:36:35] <grym> and the interpreter sure thinks its python in the traceback you posted
[21:36:47] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Ping timeout: 245 seconds)
[21:36:50] <mike18> traceback?
[21:37:03] <grym> your paste includes traceback
[21:37:03] <mike18> did post one
[21:37:13] <grym> it says that .... is wrong :)
[21:37:24] <mike18> yeah i know
[21:37:32] <stealth_> 4 . is a syntax error
[21:38:09] <mike18> in def __init__(self, host="0.0.0.0", port=8080, debug=False): ?
[21:38:16] <grym> no, stealth_ means four periods in a row
[21:38:33] *** Joins: d00gy (~d00gy@user/d00gy)
[21:38:35] <grym> plotting Ellipsis is also unlikely to be useful, but you can certainly assign self.data to it
[21:38:41] <stealth_> `self.data = ....`
[21:39:04] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[21:39:34] <mike18> stealth_: yeah?
[21:39:47] <mike18> im just showing that self.data gets some data assigned...
[21:39:57] <mike18> didnt have time to make it compile here
[21:41:07] <stealth_> mike18, you are not giving it data, you are giving it weird syntax! try `self.data = 'hello'` now you are giving it some type of data.
[21:41:32] <newdimension> grym: A follow-up to my earlier question about poetry not picking up the local python version. It's due to the new installer that binds it to the python version poetry got installed with. Scroll to bottom of https://github.com/python-poetry/poetry/issues/3288#issuecomment-891833263 if interested
[21:41:36] *** Joins: vicfred (~vicfred@user/vicfred)
[21:41:55] <mike18> stealth_: even when i git it data like you show self.data logs as None in the plot...
[21:41:59] <mike18> which i dont understand
[21:42:13] *** Joins: lorogue (~lorogue@5.103.210.179.dhcp.fibianet.dk)
[21:43:57] <stealth_> mike18, you mean when `return api.generate_data()` is called? since there is no `return self.data` in `def generate_data` defaults to `return None` for all functions/methods
[21:44:04] <mike18> yeah
[21:44:21] <mike18> generate_data asigns to self.data
[21:44:25] <mike18> and self.data is used in plot
[21:45:07] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Ping timeout: 245 seconds)
[21:45:36] *** Joins: thiras (~thiras@user/thiras)
[21:45:59] <stealth_> mike18, you should give it some dummy data and run it again. can't guess what you are doing.
[21:46:36] <mike18> are there any issues with declaring api as a global instance?
[21:46:41] <mike18> see below...
[21:46:53] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Quit: Leaving)
[21:47:16] *** Quits: me-sudoer-dentne (~me-sudoer@45.112.144.181) (Quit: Leaving)
[21:48:14] *** Joins: gildasio (~gildasio@gateway/tor-sasl/gildasio)
[21:48:24] <stealth_> mike18, shouldn't be, but you also need to run `create_app()` somewhere or else how will `app.route` know about your links.
[21:48:31] *** Quits: mikeliuk (~mikeliuk@109.249.187.96) (Quit: Connection closed)
[21:48:44] <mike18> its in the docker container
[21:48:56] <mike18> ENTRYPOINT ["gunicorn"] … CMD ["--workers=4", "--bind=0.0.0.0:8080", "--timeout=120", "serverApp:create_app()"]
[21:49:11] *** Joins: mr-red (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[21:49:22] <mike18> any issues with workers = 4?
[21:50:19] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Quit: Leaving)
[21:51:10] <stealth_> mike18, you will need to get the `socket` to `SO_REUSEPORT` reuse port (i think)!
[21:51:21] <mike18> workers = 1 works now :D
[21:51:31] <mike18> but workers = 4 ... gets some issues
[21:51:37] <mike18> will it run 4 instnaces of the app?
[21:51:52] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 272 seconds)
[21:52:17] *** Joins: whaley (~whaley@159.65.32.34)
[21:52:22] <stealth_> technically it should give the job to 1 of 4 worker
[21:52:46] <mike18> but it seems not to share the api instance
[21:53:04] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[21:53:58] <stealth_> ya that's not how you would want to go about adding workers
[21:54:28] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[21:54:34] <mike18> what to do?
[21:54:40] <mike18> will i need a database?
[21:55:02] <stealth_> maybe Flask provides a way to do multiple workers (don't know i don't use it)
[21:55:19] <mike18> dang
[21:55:39] *** Joins: greedom (~greedom@2001:16b8:2e98:cd00:34f0:3e06:18df:7359)
[21:55:47] <grym> if you want to share state between workers, you usually want to reach for something like a database, or maybe a message broker like celery/redis/...
[21:56:07] <mike18> also what about the  `socket` to `SO_REUSEPORT` reuse port (i think)! ?
[21:56:53] <mike18> thats a lot of work for just plotting stuff :D
[21:56:53] <mike18> i mean im fine with workers = 1 for now :D
[21:57:19] *** Quits: greedom (~greedom@2001:16b8:2e98:cd00:34f0:3e06:18df:7359) (Remote host closed the connection)
[21:58:09] *** Joins: greedom (~greedom@2001:16b8:2e98:cd00:34f0:3e06:18df:7359)
[21:58:12] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[21:58:21] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[21:58:33] <stealth_> mike18, 1 thread/process is normally, after that it gets complicated
[21:58:47] *** Joins: acresearch (~acresearc@user/acresearch)
[21:59:24] <mike18> python issue
[21:59:24] <mike18> bc no good threads support
[21:59:49] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[21:59:55] *** Joins: de-facto (~de-facto@user/de-facto)
[22:00:33] <foo> Dev challenge: I have 3 different tables I insert into. I can make 3 functions that I can dynamically pass my SQLALchemy table class into, plus pass **kwargs and dynamically insert into the database... I'm so tempted to do this but so I don't manually need to create add_project, update_project, add_phase, update_phase, add_project_type, update_project_type... but I realize this would violate Python protocol
[22:00:35] <bjs> mike18: what's wrong with Python threads? You mentioned sockets and databases
[22:00:40] <foo> of not having explicit functions.
[22:00:42] <stealth_> mike18, not really to do with python, framework not supporting or developer knowledge.
[22:00:54] <mike18> is flask a bad choise?
[22:00:57] <mike18> choice
[22:01:04] <mike18> with gunicorn?
[22:01:06] <diverdude> hi, i have a byte array, but when i do: struct.unpack("I",data[:32]) i get: "error: unpack requires a buffer of 4 bytes". Why?
[22:01:50] <diverdude> nevermind
[22:02:21] <bjs> diverdude: because "I" is 4 bytes long
[22:02:37] <bjs> uh the type "I" represents (an int) that is
[22:02:53] <stealth_> and gave it `[:32]` bytes
[22:03:10] <stealth_> 32bytes, should be :4
[22:03:53] <stealth_> or `I*8` for array
[22:04:41] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[22:04:42] <nedbat> mike18: i'm thinking that "python issue bc no good threads support" might be more dire than it needs to be.  Python does plenty with threads.
[22:04:55] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[22:05:06] <mike18> yeah my knowldege is not so good with that framework regarding threads
[22:05:22] <mike18> what would you use than: a database, redis?
[22:05:26] <mike18> might be good for redis?
[22:05:35] <stealth_> diverdude, better to go with `array.array('I', data[:32])`
[22:05:40] <mike18> to cache the plot data
[22:07:39] *** Joins: mexen (uid495612@user/mexen)
[22:08:47] <foo> Can someone confirm it's better to have 6 functions that each add to a specific database table rather than 2 functions that are dynamic where I pass the database table as an arg?
[22:08:50] <foo> Or would you say "it depends"
[22:09:11] <stealth_> mike18, if your code works then you should be happy with it :) if for some reason you actually need speed or production, then you can look into async framework and load balancing and such.
[22:10:19] *** Quits: Deneb (~johnch@93.125.7.51.dyn.plus.net) (Quit: Leaving)
[22:11:52] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[22:12:17] <KirkMcDonald> foo: I would probably prefer to nail that down with specific functions.
[22:12:40] *** Joins: besnn (~besnn@user/besnn)
[22:13:43] <foo> KirkMcDonald: thank you.
[22:13:53] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[22:14:15] *** Joins: sandb0y (pirate@user/sandb0y)
[22:14:32] <SnoopJ> bjs, diverdude clarification: "I" is however long `unsigned int` on that platform is, but this is *usually* 4 bytes.
[22:14:42] <bjs> SnoopJ: yes :)
[22:14:42] <bjs> thanks
[22:14:54] <SnoopJ> bjs, it's a dreadful compulsion
[22:14:55] *** Joins: audiophile (~notanaudi@user/audiophile)
[22:15:11] <bjs> SnoopJ: I know, sometimes I forget to mention these things just to test you
[22:15:19] <SnoopJ> 😅
[22:15:23] <audiophile> whoever writes teh docs, thanks for including smileys https://docs.python.org/3/library/heapq.html makes the docs seem less rigid and impersonal
[22:15:35] <bjs> SnoopJ: usually I forget to forget but I'm glad I remembered to forget today
[22:15:37] *** Quits: mike18 (~geri@217-149-162-237.nat.highway.telekom.at) (Ping timeout: 248 seconds)
[22:16:08] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Ping timeout: 244 seconds)
[22:16:24] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[22:17:32] <stealth_> those int types based on system as such pain in the ***
[22:17:38] *** Quits: audiophile (~notanaudi@user/audiophile) (Client Quit)
[22:19:48] *** Joins: ircuser (~ircuser@190.189.212.21)
[22:20:13] *** Joins: rndm (~rndm@143.59.164.79)
[22:20:22] *** Quits: de-facto (~de-facto@user/de-facto) (Quit: See you around. 💤)
[22:20:57] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 245 seconds)
[22:21:15] *** Joins: audiophile (~audiophil@user/audiophile)
[22:21:47] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Ping timeout: 245 seconds)
[22:22:03] *** ircuser is now known as Gammel2
[22:22:34] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Ping timeout: 240 seconds)
[22:22:48] <Gammel2> hi
[22:23:26] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:e9d2:464c:d2f2:fb68) (Quit: Leaving)
[22:24:26] *** Joins: Adoi (~Adoi@user/adoi)
[22:24:41] <SnoopJ> audiophile, those smilies are apparently quite old, they were introduced before the docs were even tracked in GitHub!
[22:25:05] <audiophile> whoa really??
[22:25:21] <foo> I'm writing the db schema and mapping the results of an API. I can A) have my own id field in our system and increment it or B) I can use the id returned by the API (instead of having our own id and storing the id from the API). Is there value to do either A or B?
[22:25:22] *** Quits: yvehan (~yvehan@117.136.79.156) (Ping timeout: 272 seconds)
[22:25:26] <audiophile> that's an arcane cool factoid i will hold onto for the rest of my life now ;)
[22:25:41] <foo> Trying to decide which direction ot g
[22:25:44] <foo> to go
[22:26:30] *** Joins: theseb (~cs@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[22:26:37] <dale> I guess I shouldn't be surprised that the "roundtrip between Python objects and JSON serialization" problem is more complex than it appears at first blush.
[22:26:40] <SnoopJ> audiophile, yea, the blame for those lines points to one 14 years ago when the reST docs were moved into version control. There may be records that go back further than that somewhere in ye olde version control
[22:28:24] <SnoopJ> dale, there are some surprising gotchas in there (different literals, what to do with repeated keys, etc.)
[22:28:36] *** Joins: b_jonas (~x@catv-176-63-12-67.catv.broadband.hu)
[22:28:52] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 245 seconds)
[22:29:08] <dale> And perhaps a big part of the problem is that everyone wants to do things just slightly differently enough that this-or-that other library doesn't really work.
[22:29:41] <audiophile> SnoopJ id love to buy that guy a beer that's all haha :) and seeing ":-)" instead of ":)" confirms that it's old lol
[22:30:14] <stealth_> foo, id are auto incremented, even if you don't create it database will create one internally
[22:30:32] <stealth_> foo, so its better to create id and use it
[22:30:40] <foo> stealth_: I see. Using postgresql with SQLAlchemy.
[22:30:53] <foo> stealth_: I see. That's what I did but started questioning the value of doing that.
[22:30:59] <foo> stealth_: I realize it can't hurt
[22:31:18] <stealth_> foo, it can't, also a good way to keep track of things.
[22:31:42] *** Joins: de-facto (~de-facto@user/de-facto)
[22:34:28] <dale> stealth_: Are you sure that it's the case that PostgreSQL will create an "auto-incremented ID" behind the scenes?
[22:35:01] *** Joins: Hax0r (~TP1@87.101.193.195)
[22:35:52] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Ping timeout: 256 seconds)
[22:35:54] <stealth_> dale, db needs to have some way to keep track of rows, id's are ways to go about it with/without using space.
[22:36:49] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:37:22] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Remote host closed the connection)
[22:37:44] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[22:38:01] <Gammel2> guys, i need some help with async and Flask.
[22:38:22] <stealth_> does Flask even support async?
[22:38:31] <Gammel2> that's the thing.
[22:38:35] <Gammel2> i have a sync app
[22:38:52] <Gammel2> but can i have an asyncio.run() inside one endpoint?
[22:39:00] <Gammel2> running a function that needs to make lots of requests concurrently?
[22:39:27] <stealth_> sync app will just block everything else till its done doing whatever its doing.
[22:39:50] <Gammel2> https://codeshare.io/Pd8Z3w
[22:39:53] <Gammel2> this wont work?
[22:40:14] *** Joins: yaalon (~yaalon@201.130.105.40.dsl.dyn.telnor.net)
[22:40:31] *** Quits: yaalon (~yaalon@201.130.105.40.dsl.dyn.telnor.net) (Remote host closed the connection)
[22:41:23] <stealth_> it should but you get the `.get('/')` will be blocked till all those request is done.
[22:42:28] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:e9d2:464c:d2f2:fb68)
[22:42:42] *** Parts: s8n1 (~s8n@user/s8n) (The Lounge - https://thelounge.chat)
[22:44:02] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[22:44:02] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Ping timeout: 244 seconds)
[22:44:25] <Gammel2> yep, but the endpoint has almost zero traffic. The only thing i need is that endpoint to make lots of calls concurrently.
[22:44:46] <Gammel2> I have the doubt on whether i would need an async server to be able to use asyncio inside my endpoints
[22:45:00] *** Quits: mr-red (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 272 seconds)
[22:45:37] *** Joins: georgios (~georgios@user/georgios)
[22:46:09] *** Joins: Narrat (~omnius@p200300df5f0ae58d06ea56fffe2e7cdc.dip0.t-ipconnect.de)
[22:46:12] *** Joins: jetchisel (jetchisel@user/jetchisel)
[22:46:30] *** Quits: Keira (~k@lulzsec.co.uk) (Ping timeout: 268 seconds)
[22:47:57] *** Joins: gildasio (~gildasio@gateway/tor-sasl/gildasio)
[22:48:24] *** Quits: theseb (~cs@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[22:51:22] <stealth_> Gammel2, is `app.get` a thing in Flask?
[22:51:30] <stealth_> `app.route()` ?
[22:52:32] <Gammel2> sorry, it's route.
[22:53:05] *** Joins: cellofellow (~user@166.70.50.58)
[22:53:54] *** Quits: {HD} (~{HD}@191.96.185.182) (Ping timeout: 268 seconds)
[22:54:15] *** Joins: mike18 (~geri@217-149-162-237.nat.highway.telekom.at)
[22:54:29] <mike18> @stealth_ whats async http frameworks are there for python?
[22:54:39] <mike18> flask is not async
[22:54:43] <mike18> right?
[22:55:11] <stealth_> mike18, yes, https://fastapi.tiangolo.com/ is pretty popular right now
[22:55:28] <mike18> thats async and "better" than flask?
[22:55:29] <SnoopJ> mike18, FastAPI is has become a popular one, but there are others.
[22:55:38] <mike18> more popular than flask?
[22:56:16] <mike18> how does it work when i call an endpoint and thats calls an algorithm which is blocking?
[22:56:28] <SnoopJ> Well, flask only recently has grown async functionality of any kind, so I'm not sure what relevance popularity really has
[22:56:28] <mike18> bd it reads data and processes stuff...
[22:57:38] *** Joins: nergar (~nergar@177.225.146.7)
[22:57:44] *** Joins: gildasio1 (~gildasio@gateway/tor-sasl/gildasio)
[22:58:27] <stealth_> mike18, FastAPI uses both sync/asynd def (as far as i know, i don't really use any of whats out there). You could also read up on how asynchronous works.
[22:59:03] <stealth_> blocking has more to do with lock/io related blocking, not if process is busy.
[22:59:04] *** Joins: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte)
[23:00:23] *** Joins: Akuli (~Akuli@87-94-109-27.bb.dnainternet.fi)
[23:00:34] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Ping timeout: 244 seconds)
[23:02:31] <mike18> has python a way to generate html code using a template?
[23:03:26] <mike18> https://ideone.com/BpIqkr ... need a way to dynamically add things into the form-control
[23:03:31] <mike18> first_cat
[23:03:50] <stealth_> mike18, https://fastapi.tiangolo.com/#optional-dependencies under "Used by Starlette"
[23:04:11] <mike18> thats for the html thing?
[23:04:48] <mike18> flask has render_template
[23:06:38] <Gammel2> i believe flask uses jinja2
[23:06:41] <Gammel2> a template engine
[23:07:09] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[23:07:41] *** Quits: Hax0r (~TP1@87.101.193.195) (Quit: I'll be back..)
[23:08:34] <stealth_> temple engine basically all do the same thing, just go about it differently...
[23:08:47] *** Quits: mike18 (~geri@217-149-162-237.nat.highway.telekom.at) (Remote host closed the connection)
[23:09:14] *** Quits: Samian (~Sami@2620:10d:c091:480::1:ab1a) (Quit: Textual IRC Client: www.textualapp.com)
[23:11:06] <rendar> should i use anyio instead of raw asyncio? for networking and so on?
[23:12:04] *** Joins: ferz (~ferz@146-241-190-238.dyn.eolo.it)
[23:12:25] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[23:13:13] *** Quits: et (~et@user/et) (Ping timeout: 248 seconds)
[23:13:44] <stealth_> rendar, it says you can run `anyio` on top of `asyncio` or `trio`
[23:13:51] *** Quits: AM (~techman@87-94-111-135.bb.dnainternet.fi) (Killed (NickServ (GHOST command used by AM_!~techman@87-94-110-167.bb.dnainternet.fi)))
[23:13:58] *** Joins: AM (~techman@87-94-110-167.bb.dnainternet.fi)
[23:14:00] *** Quits: ano (~weechat@user/ano) (Ping timeout: 244 seconds)
[23:14:12] <rendar> but it is really useful? is it worth installing, learning and using it?
[23:14:35] *** Joins: Keira (~k@lulzsec.co.uk)
[23:14:56] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[23:19:50] <stealth_> rendar, if you feel like you need it then you can try it out! the problem with most of these framework out there is, they are all pretty much a copycat of each other. unless something provides something unique that is actually useful to you.
[23:20:07] *** Joins: nanonyme (nanonyme@kapsi.fi)
[23:20:26] *** Joins: magla (~gelignite@55d48471.access.ecotel.net)
[23:20:41] <rendar> this is why i'm here asking
[23:21:58] *** Joins: et (~et@user/et)
[23:23:50] *** Quits: nergar (~nergar@177.225.146.7) (Read error: Connection reset by peer)
[23:24:11] *** Joins: nergar (~nergar@177.225.146.7)
[23:25:02] *** Quits: nergar (~nergar@177.225.146.7) (Read error: Connection reset by peer)
[23:27:30] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:27:33] *** Joins: audio (~audio@2603-8081-1800-00ad-5769-2572-6cf8-a685.res6.spectrum.com)
[23:28:05] <ferz> I've a trouble with SQLAlchemy text() and bindparams. http://paste.scsys.co.uk/595716 and the output is http://paste.scsys.co.uk/595715
[23:28:06] <ferz> How can I get the list of recognized params?
[23:28:06] <foo> Can someone confirm here that this is a bad idea? I was trying to make it dynamic, it works, but it's not explicit - so it violates pythonic ways I *think*: https://bpa.st/LN6A - basically an easy way to update data from the database. Without having to add 9 functions (I did it with 3 instead)
[23:28:18] <foo> KirkMcDonald: ^ that's what I was talking about earlier, just to make sure you're a "no" – I'd be curious if you can take a peek at that :)
[23:29:49] *** Quits: Leliana (is@the.one.and.only.revthefox.co.uk) (Quit: brb, sex)
[23:30:10] *** Joins: Leliana (is@the.one.and.only.revthefox.co.uk)
[23:31:13] *** Quits: mattil (~mattilinn@62-113-178-139.bb.dnainternet.fi) (Quit: Leaving)
[23:31:26] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:33:12] *** Joins: ano (~weechat@user/ano)
[23:33:55] *** Quits: audiophile (~audiophil@user/audiophile) (Quit: Default Quit Message)
[23:34:39] <stealth_> foo, `asyncio.run` is something you should only run once! all the codes/function/... should be within that scope. Think of `asyncio.run` as an engine, it has startup+shutdown costs
[23:35:02] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[23:35:05] <foo> stealth_: OH. Thanks. The library I'm using used async and I'm still trying to wrap my head around it.
[23:35:36] <foo> stealth_: I suppose my next question is... how do I run it once but return the data I want? Maybe I return 3 dicts each with a key and associated dict based on the data I want
[23:35:40] <stealth_> foo, if you want to use async then you need to fully commit to it.
[23:35:49] <foo> stealth_: I don't, I just happened to pick a library that used it, heh.
[23:35:54] <foo> stealth_: ... but I see your point
[23:36:07] <foo> stealth_: If I'm following, I'm sort of defeating the purpose of async with how I'm using it currently
[23:37:56] <dale> ferz: I think stmt.bindparams returns a new expression instance that you need to use, so try stmt = stmt.bindparams(bonus3Voucher etc.) then execute that resulting stmt.
[23:38:16] <stealth_> foo, `run(main())` now have `async def main(): add(); update(); await something(): get(); )` normal function can be run inside `async def` just fine.
[23:42:37] <foo> stealth_: thanks, will give this another shot
[23:43:18] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[23:43:23] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[23:44:14] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Remote host closed the connection)
[23:45:07] <ferz> dale: the trouble was in quoting, psql has a kind of :'param' for string param, sqlalchemy support only :param for both ints and strings
[23:45:39] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[23:46:13] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3-dev)
[23:46:30] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[23:49:41] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[23:50:10] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[23:50:57] <no_gravity> Hello! What is a good way to set up a new Django project with the typical user account functionality like signup/login/change_password etc?
[23:51:28] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:e9d2:464c:d2f2:fb68) (Quit: Leaving)
[23:51:31] <acresearch> people, i have a script with a loop that prints a multi-line string,,, loops every 3 seconds,    but it prints under the previous loop, so you get a terminal with "historical prints"   how can i stop that and just have the terminal refresh with only the latest printed info?    you know what i mean?
[23:51:55] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[23:52:00] <acresearch> like a stock ticker
[23:52:08] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[23:53:28] <phy1729> You're in curses land now. Good luck https://docs.python.org/3/library/curses.html#curses.window.clear  (and refresh)
[23:53:33] *** Quits: mcglk (~mcglk@131.191.49.120) (Read error: Connection reset by peer)
[23:54:02] *** Joins: qpdb (~qpdb@user/qpdb)
[23:54:19] *** Joins: mcglk (~mcglk@131.191.49.120)
[23:54:27] *** Parts: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it) ()
[23:54:30] <diverdude> hi
[23:54:51] <KirkMcDonald> curses, or Urwid.
[23:55:06] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[23:55:11] <diverdude> is there a nicer way to do: a['b'] if 'b' in a else 43   similar to getattr(a,'b',43)?
[23:55:46] <phy1729> a.get('b', 43)
[23:55:46] <Akuli> see help(dict)
[23:55:51] <zware> diverdude: If it's a dict, `a.get('b', 43)`.  Otherwse, that's probably it
[23:56:14] *** Quits: Gammel2 (~ircuser@190.189.212.21) (Quit: Client closed)
[23:56:23] <no_gravity> acresearch: I would use tput. "tput cuu1" moves up one line.
[23:56:41] <diverdude> thx
[23:56:50] <acresearch> no_gravity: but the output is multi line
[23:57:08] *** Joins: FatDarrell (~textual@68.91.156.229)
[23:57:10] <stealth_> acresearch, where is this data coming from?
[23:57:12] <no_gravity> acresearch: Well, move around however you like. tput has a bunch of commands.
[23:57:22] <Akuli> apparently there is 'tput clear'
[23:57:27] <acresearch> stealth_: it is stock information
[23:57:47] <acresearch> no_gravity: ok   how can i use tput with a print statment?   print()
[23:58:12] <stealth_> acresearch, so a socket?
[23:58:16] *** Joins: {HD} (~{HD}@102.165.16.82)
[23:58:27] <acresearch> stealth_: no stocks   like financial stocks
[23:58:39] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[23:59:17] <no_gravity> acresearch: You could execute it as a shell command. But importing curses might be easier.
[23:59:35] <Akuli> apparently tput just writes some special characters to stdout, and you can just replicate those with print
[23:59:44] <Akuli> (but it will be even more platform-specific than calling tput)
