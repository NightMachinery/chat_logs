[00:01:00] *** Joins: lagash (lagash@lagash.shelltalk.net)
[00:01:26] * hayley uploaded an image: (55KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/SctNuwHbEroNrrVuUctbWfyK/Screenshot%20from%202021-12-08%2007-29-11.png >
[00:01:27] <hayley> GUYS GUYS GUYS
[00:03:42] <sham1> Nice
[00:04:23] <hayley> http://gchandbook.org/errata.html
[00:04:24] -ixelp- The Garbage Collection Handbook: Errata
[00:12:08] *** Quits: robin (~robin@user/terpri) (Ping timeout: 268 seconds)
[00:16:21] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[00:24:14] *** Joins: phantomics (~phantomic@97-118-135-6.hlrn.qwest.net)
[00:31:51] *** Quits: Alfr (~Alfr@user/alfr) (Remote host closed the connection)
[00:32:21] *** Joins: Alfr (~Alfr@user/alfr)
[00:33:12] <selwyn> trying to think of things that would be actively undesirable to have under version control
[00:34:13] <hayley> API keys are a classic.
[00:34:20] <selwyn> right
[00:34:30] <selwyn> but i was thinking more of whole projects than e.g. secrets
[00:35:04] <selwyn> would you ever want a static site under version control?
[00:35:31] <hayley> I would.
[00:35:44] <selwyn> ok
[00:38:42] <Duuqnd> Program binaries wouldn't be very nice to have in version control but I can't think of much else
[00:41:47] <selwyn> why am i only finding out about linear multistep methods now
[00:44:08] <selwyn> common lisp could do with better ode solvers imo
[00:44:45] <ck_> hexstream does (put static sites in git)
[00:45:52] <mfiano> Hexstream is exempt from societal norms
[00:46:08] <selwyn> version control is at the top of the pyramid of good practice
[00:46:20] <ck_> what's at the bottom? bread and flour?
[00:46:27] <ck_> "press f to pay respects" ?
[00:46:45] <Duuqnd> I thought we'd all agreed not to talk about Hexstream ever again
[00:47:53] <ck_> wasn't part of that pact sorry where do I sign up
[00:48:01] <hayley> No, we're waiting for him to debunk phoe.
[00:48:34] <ck_> maybe after a good night's sleep in the debunkbed
[00:51:37] *** Joins: Inline (~Inline@aftr-37-201-240-202.unity-media.net)
[00:52:15] * ck_ fails the pun exam for not using "in de bunk bed". sad face emoji
[00:52:35] <selwyn> 4/10
[01:02:23] <gilberth> hayley: That was prompt. Congrats!
[01:19:49] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[01:30:59] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 252 seconds)
[01:41:29] * gilberth still doesn't get this hexstream business.
[01:42:16] *** Quits: cranium (~cranium@user/cranium) (Quit: Leaving)
[01:43:04] <Gnuxie> there's a business? 
[01:43:58] <gilberth> idk. I just keep seeing hexstream being mentioned here again and again, so I suspect there might be some.
[01:50:44] <pl> Duuqnd: binaries in version control are somewhat common for various reasons
[01:50:58] <pl> as are generated artifacts in general
[01:51:12] <pl> but that usually involves version control systems that support that well
[01:51:17] *** Joins: notzmv (~zmv@user/notzmv)
[01:51:28] <pjb> A 8-year effort finds that much cancer research can’t be replicated <https://www.sciencenews.org/article/cancer-biology-studies-research-replication-reproducibility>
[01:51:32] <pl> (IIRC Google somewhat famously keeps binary toolchains in their monorepo)(
[01:51:38] <pjb> research is hard, let's go shopping.
[01:52:25] <gilberth> pjb: Good idea, whom I should shop for?
[01:59:36] <pjb> It doesn't really matter.
[01:59:52] <pjb> But I was thinking that mathematicians have it easier, either the theorem is proven or it's not.
[01:59:56] <pjb> Mathematics is not science.
[02:00:06] <selwyn> i finished a damn paper on friday
[02:00:15] <pjb> Is it replicable?
[02:00:24] <selwyn> i certainly hope so
[02:00:37] <selwyn> as usual, i hated the numerics the most, because there is always the pressure to not make a mistake
[02:00:57] <pjb> Like programmers get code reviews, and CI builds before merging,  scientific papers should be replicated before publication.
[02:01:11] <selwyn> with the theory part of the paper - it is much harder to deceive yourself that a proof is valid when it is not
[02:01:14] <selwyn> pjb: would never work
[02:01:24] <selwyn> no-one wants to spend time replicating some other idiot's research paper
[02:01:31] <pjb> Students?
[02:01:33] <selwyn> we have peer review, and peer review doesn't catch this sort of thing
[02:01:48] <selwyn> good luck getting students to catch errors in sophisticated research
[02:01:58] <pjb> Either they can replicate it, or not?
[02:02:52] <selwyn> it would be roughly as practical to require that everyone develops code to the same safety-critical standards as aircraft control software
[02:03:09] <selwyn> there just isn't any way to justify the vast additional expense in man hours
[02:03:16] <hayley> CI builds? You don't just throw any tricky algorithm into TLA+?
[02:03:18] <selwyn> pjb: well, replicating stuff is not easy
[02:03:31] <selwyn> if it is experimental, then you literally need to do another experiment
[02:03:36] <selwyn> and fuck that
[02:03:54] <selwyn> putting a phd student to work for 3 years on replicating someone elses stuff
[02:04:05] <selwyn> you might as well get them to do something original
[02:04:23] <hayley> I mean, theorem provers are right there.
[02:05:46] <selwyn> i would certainly like to see more use of theorem provers in maths and theoretical physics, but the culture/tooling is not quite there yet
[02:05:58] * hayley has two sides: "Use dynamic language, types and a noisy compiler are useless." "Throw everything that looks hard into a theorem prover!"
[02:06:12] <selwyn> i don't know exactly how useful they would be for theoretical physics, because a lot of the time you don't bother to explicitly state your axioms
[02:08:54] <sham1> A static typer is a very basic theorem prover
[02:09:15] <sham1> And a lot of the time not much else is needed, at least for programming. Of course, other nice benefits come with it
[02:09:21] <White_Flame> gilberth: hexstream basically doxxed people and refuses to take info down
[02:09:34] <White_Flame> and then does a bunch of SEO to drive lisp traffic to his site
[02:10:21] <sham1> From what I've understood they're a douche, although "douche" is kind of an understatement from what I also understand of them
[02:10:48] <gilberth> White_Flame: Ah, ok. And phoe was one of his targets?
[02:10:51] <White_Flame> yes, that alone wouldn't draw the ire, but is another cherry on top
[02:10:55] <selwyn> guy clearly has some problems, its not a fun subject
[02:10:58] <White_Flame> gilberth: I think so
[02:11:00] <selwyn> better not to talk about it
[02:11:13] <hayley> I don't like any type systems, so my mind doesn't work in the axioms they work in. Java has null. Haskell doesn't let you put any ol' instances of a typeclass in a list. And then I have to write in Java or Haskell, of course, and I give up CL interactivity.
[02:11:25] <White_Flame> he basically has a register of lispers, grabbing any real name, contact info, etc he's been able to dredge up over the years
[02:11:47] <White_Flame> social media accounts, forum membership, etc
[02:11:48] <hayley> Hexstream gets paid $500/month by the Rust foundation to annoy Lispers
[02:11:58] <gilberth> White_Flame: I see.
[02:11:58] <White_Flame> really?
[02:12:05] <selwyn> lol
[02:12:09] <hayley> (That is completely made up, the Foundation definitely has better uses for its money.)
[02:12:13] <moon-child> 'Haskell doesn't let you put any ol' instances of a typeclass in a list'  meh, imo the real sin is no impredicative polymorphism
[02:12:26] <White_Flame> hayley: ah, well you never know with him,where he grifts from :-P
[02:12:35] <hayley> (Such as paying for AWS servers to run their compilers on 96 cores.)
[02:12:52] <gilberth> So, this guy is *aehm* sick and needs help?
[02:13:14] <sham1> Well you can't put any ol instances of typeclasses by themselves, you need a wrapper of sorts
[02:13:44] <hayley> Worse is that my idea of "wire protocol independence" seems to encourage having some sort of runtime type checking.
[02:14:47] <White_Flame> gilberth: the style of sick that comes with extreme arrogance
[02:14:58] <hayley> https://www.reddit.com/r/ProgrammerDadJokes/comments/rau7d4/which_compiler_is_the_noisiest/
[02:14:59] -ixelp- Which compiler is the noisiest? : ProgrammerDadJokes
[02:15:46] <moon-child> the world is dynamically typed.  You cannot get away from runtime type checking
[02:18:46] <gilberth> White_Flame: Still must have roots somewhere. Perhaps he is desperate for attention or recognition. Anyhow, good to know, I'll steer clear then.
[02:19:08] <White_Flame> my interpretation is more broken/undeveloped mentality
[02:20:13] <hayley> moon-child: Well, still, "typing it is a bitch" (c.f. Gilad Bracha on parser combinators). A connection converts some set of message types to bytes or a string or something. Then we'd like to have a database of URI protocol names to constructors.
[02:20:53] <hayley> How does one lift all that into the type system, while keeping the sets of message types and wire types (e.g. strings and byte vectors) extensible?
[02:21:10] <gilberth> White_Flame: Hmm. Still he must hope to achieve something by this doxing. (New word to me).
[02:21:37] <White_Flame> he considers himself the canonical source for all lisp informatino
[02:21:48] <White_Flame> again, basically an arrogance thing
[02:21:59] <White_Flame> and he constantly brags about his SEO rankings
[02:23:02] <gilberth> I see. The one true Lisp master. And see, when he really were such an adored master, he wouldn't need SEO.
[02:23:23] <White_Flame> right
[02:24:23] <gilberth> I'd say he uses SEO and doxing to correct the the world outside to his own image of being the one true master. Thing is: It will not work.
[02:25:31] <gilberth> .oO(Gosh. How little of an ego must he have to define himself by what others say.) *sigh*
[02:25:42] <White_Flame> it can work for external signaling about the community (eg, if the press is looking for someone to interview) but it doesn't work on the community itself
[02:26:10] <gilberth> Yes, I think that's right.
[02:26:14] <White_Flame> (note that I don't think he's gotten any such validation from outsiders either)
[02:26:39] <White_Flame> but I've seen that sort of behavior in retro computing, where you get some big-fish-in-small-pond vendors who market themselves ridiculously
[02:26:47] <gilberth> But it could happen with SEO and a journalist with no clue and time doing a quick google search.
[02:26:52] <White_Flame> even though everyone in hte know hates their products
[02:27:01] <White_Flame> right
[02:27:08] <White_Flame> which is what frustrates a community
[02:27:22] <gilberth> Sure.
[02:28:35] *** Joins: luis3 (~luis@lisp/luis)
[02:28:41] <gilberth> Well, I am off all those "wars". As long as I can hack along on my projects as I wish to, I am fine. If people may believe what they want, I don't care in particular.
[02:29:39] <White_Flame> sure, but if, say, your home address and estimate of net worth was posted on there, you'd probably have an issue with it
[02:30:23] *** Quits: luis (~luis@lisp/luis) (Ping timeout: 252 seconds)
[02:30:23] *** luis3 is now known as luis
[02:30:40] <gilberth> Perhaps, that won't be nice. But both informations are no particular secret. Granted, I better keep both to mine.
[02:31:04] <gilberth> myself, rather. ;I believe.
[02:31:28] <White_Flame> but different people have different sensitivities about their personal info, depending on situation
[02:31:59] <gilberth> Yes, I was about to write just that.
[02:32:52] <gilberth> I am here with my clear name for everyone to see. My choice. I respect the choice of others, who don't want reveal their RL identity.
[02:33:58] <gilberth> And btw, "hexstream" isn't a real name either. ;)
[02:34:05] <White_Flame> heh
[02:34:15] <White_Flame> though I think he's got his real name associated as well
[02:34:38] * gilberth will NOT have a look and shrugs.
[02:36:14] <Catie> Hexstream could absolutely be a real name, and I'm upset I haven't legally changed my name to it
[02:36:31] <White_Flame> heh
[02:36:41] <gilberth> It could? *surprisedlook*
[02:36:58] <Catie> Oh yeah, absolutely
[02:37:17] <gilberth> *yetmoresurprisedlook*
[02:37:18] <Catie> It changes by jurisdiction I guess, but I know someone who changed his middle name to "1985"
[02:37:26] <Catie> Hell, my middle name is Malloc
[02:37:32] <Catie> You can do whatever the hell
[02:37:40] <gilberth> I pity you.
[02:38:01] <Catie> It's fitting, I'm full of memory leaks
[02:38:01] <White_Flame> IRL, I am Princess Consuela Bananahammock
[02:38:58] <gilberth> Catie: Heh.
[02:39:22] <gilberth> But you usually cannot change your surname.
[02:39:33] <Catie> I did
[02:39:46] <gilberth> You are married?
[02:39:56] <Catie> I am not
[02:40:26] <gilberth> Then your jurisdiction is more liberal in that regard than our local.
[02:40:30] <White_Flame> in the USA at least, there are no restrictions on name changes, although I think some might have judgment on "indecent" names
[02:40:34] <Catie> My condolances
[02:40:43] <hayley> https://www.youtube.com/watch?v=KrAPI1i1Dro
[02:40:43] -ixelp- The Planets, Op. 32: Mars, The Bringer of War. Allegro - YouTube
[02:41:01] <Catie> In California they've got some pretty byzantine rules, namely "ASCII characters only"
[02:41:04] <gilberth> Catie: I am fine with my name, I like it as it is.
[02:41:17] <White_Flame> little johnny tables is still all ascii
[02:41:47] <White_Flame> erm, s/johnny/bobby/
[02:41:49] <gilberth> Catie: What if your surname has accented chars or even umlauts?
[02:41:59] <Catie> You're out of luck
[02:42:10] <Catie> I don't know what "out of luck" means in this case, but you are it
[02:42:11] <White_Flame> https://xkcd.com/327/
[02:42:12] -ixelp- xkcd: Exploits of a Mom
[02:42:43] <gilberth> Catie: May I at least have a proper transcription?
[02:42:47] * hayley still not notable enough to be on the Common Lisper list. Nice.
[02:42:55] <White_Flame> hayley: same here
[02:42:58] * gilberth is lucky as he has no umlauts in his name.
[02:44:47] <gilberth> What Common Lisper list? Have I missed something?
[02:45:19] <White_Flame> that's hexstream's public personal info page on people
[02:45:22] <pjb> There are several.
[02:45:45] <gilberth> White_Flame: I should get on that list quick! We do I need to sign? ;-)
[02:46:16] <gilberth> Where, rather.
[02:48:33] *** Joins: random-nickname (~random-ni@87.116.181.93)
[02:51:21] <Catie> gilberth: Okay, so my assertion was only partially true. The California Depertment of Public Health Vital Records Handbook says "The  form  is  to  be  completed  using  the  26  alphabetical  characters  of  the English language" and that "diacritical marks – any of various marks added to a letter to indicate its pronunciation or to distinguish it in some way," are not allowed
[02:51:49] *** Quits: random-nick (~random-ni@87.116.165.83) (Ping timeout: 240 seconds)
[02:51:57] <Catie> However, the law was amended in 2017 to allow diacritical marks
[02:53:28] <moon-child> what if my name has a Ø in it?
[02:54:00] <Catie> I'm afraid at this point you'd have to ask California, that's beyond me
[02:56:39] <gilberth> Catie: This is terrific, as umlauts are not optional and when not available have to substituted. As "ü" and "u" for example sound very different. It's two different vowels, not just stress or length.
[02:58:03] <White_Flame> is "ue" a standard rendering of ü?
[02:58:04] <gilberth> moon-child: Same thing. "ø" is very different from "o". You were faster.
[02:58:32] <gilberth> White_Flame: Yes. And "ae" for "ä" and "oe" for "ö".
[02:59:01] <gilberth> And "ss" for "ß".
[03:00:11] <gilberth> I am very used to those transcriptions as email was practically US-ASCII for a long time. Still use them at times, because they are more convenient to type.
[03:00:44] <moon-child> encyclopædia
[03:01:57] <White_Flame> e̴͇̲̼̩̪̹̼̩̟͖̻̓̈́͗́̆̌͆̓͗͊̒͆͑̚͝ͅͅͅṇ̵̡̦̤̲̯̬̭̪̳͓̰̓̍̔͛̆̓̋̋̔͂͑̕͠c̸͍̳̯̾͌̀̄͐̿͊̍͠y̴̧͓̼̱̳̞̣̪̘̘̗̙͉̘͊͐͊̈̈́͑͂͆̊͑̀̎͆̚̕͜͝͝ͅͅč̸̢̨̲̳͖̤̯̳̹͖̺͙̼̪͓̂̃͒̔̍͛͝͠l̶̨͕͇̦̥̟̹͈̞̪̲͔͉̯̗̠̍̓̾͘͜ǫ̸̹͔͇͖̭̬͕͙̲̦̙̳̙̀̉̾͜p̸̢̛̪̼͓͔̣̖̖̩̞̦͆͋̐̈́̉̌͌͑̀̏͘͜͜ͅͅe̷͔͑
[03:01:57] <White_Flame> ḑ̸̡̲̯̳̺͉̦̏̊͒̽̾̐̔͒̒̓̂̌̔̔̕͝͝ͅĩ̷̧̧̮̪̬̟̹̞͖̅͠a̶̧̳̳͖͓͉̩͇̖̘͎̍͜
[03:02:12] <White_Flame> (hmm, that didn't work very well here)
[03:02:20] <gilberth> What I wanted to say, different from pure accents, you can't drop the diacritical marks, or the slash in "ø". You'd get a different word.
[03:02:51] <White_Flame> does ø have an equivalent as well, like "oo" or something?
[03:03:15] <gilberth> White_Flame: Look like an neglegted hedge to me.
[03:03:47] <gilberth> White_Flame: ø -> oe, å -> aa
[03:04:14] <White_Flame> åh, økay
[03:04:51] <moon-child> œkay
[03:05:39] <White_Flame> æbßölūþəłÿ
[03:05:42] <gilberth> White_Flame: Sounds like "ouh" somewhat. It's an open "a".
[03:07:52] *** Joins: dra (~dra@2a04:4540:640e:a200:8c47:9799:e734:67e7)
[03:07:56] <dra> Hello!
[03:08:17] <gilberth> Hi there!
[03:08:36] <White_Flame> həłļò
[03:09:22] <dra> Ah. Unicode works. Thanks! :)
[03:09:56] <White_Flame>    𝆑𝆑𝆑 𝆒
[03:09:56] <White_Flame> 𝄤 𝄆𝄚𝄚faaaaaaaart♯𝄚𝄚𝄇
[03:10:17] <gilberth> Boxes! Boxes with numbers, I see.
[03:10:51] <Catie> A lot of times someone will send an emoji and I'll have to paste it into (char-name #\$EMOJI) to know what's going on
[03:11:01] <White_Flame> yeah, or into a text editor
[03:11:04] * gilberth does not believe that Unicode works anymore.
[03:11:18] * hayley reads the sheet music
[03:11:18] <White_Flame> well, it has a lot to do with your font
[03:11:20] <hayley> And, 1, 2, 3, 4
[03:11:37] <gilberth> Catie: At times, it's mark + right click + search with google for me :)
[03:12:05] <White_Flame> but people to whom it showed boxes all got the right number of boxes, so the utf-8 is likely decoding properly on your side
[03:12:21] <gilberth> It has to do with letters added to Unicode at a faster pace than I update.
[03:12:35] <White_Flame> I think the musical notation characters are pretty old
[03:12:45] <dra> I see forte-fortissimo, a crescendo, and a repeated fart in the bass.
[03:13:05] <Catie> And, notably, no notes
[03:13:18] <White_Flame> (bass clef dropped an octave,if you look closely)
[03:13:59] <White_Flame> also, a sharp fart, not octothorp'd
[03:14:43] <gilberth> ok, even when my font would have been better, I won't be able to read it. Good, I missed nothing.
[03:20:14] <hayley> Finally a transcription for https://www.youtube.com/watch?v=OP-cQa3eEZk though.
[03:20:15] -ixelp- Weasles Ripped My Flesh (Live At Town Hall, Birmingham, 5/30/69) - YouTube
[03:23:03] <hayley> Can I just use a LRU cache to track the hottest cache lines, and pretend that it's my memory cache for simulations?
[03:23:04] <White_Flame> too much high frequency in there
[03:24:53] * hayley looks through the Racket package list and finds no LRU caches. Boo.
[03:25:56] <hayley> I can probably write a simple one with just a vector, since I don't care about physical time, just simulated time, but even Quicklisp has LRU caches.
[03:26:06] <moon-child> i feel like lru is not a very good approximation of cpu cache implementation
[03:26:20] <moon-child> i think valgrind has a simulated cache though, could look into that
[03:26:25] <mfiano> Didn't ZFS figure that out and wrote ARC?
[03:27:14] <moon-child> mfiano: fs cache is very different from cpu cache.  Point is to emulate the latter
[03:28:57] <White_Flame> I wish to simulate some cash, please
[03:28:59] * hayley grumbles
[03:29:28] <hayley> I don't really feel like writing a cache simulator, hence why I just wanted to borrow someone else's LRU cache.
[03:29:29] <moon-child> White_Flame: if I give you monopoly money, will you provide goods and services in return?
[03:29:48] <White_Flame> yes
[03:29:51] <White_Flame> (I get to define them)
[03:30:01] <White_Flame> but as long as they are simulations that I can spend
[03:30:12] <selwyn> perhaps hayley can donate some reddit gold to hexstream
[03:30:26] <hayley> No, I don't have a Reddit job yet.
[03:30:41] <selwyn> aren't you rich from the /r/programming post
[03:30:56] <White_Flame> no, this is patrick
[03:31:13] <moon-child> reddit used to use cl
[03:31:15] <moon-child> now they use python
[03:31:15] <hayley> Nope.
[03:31:35] <hayley> There is a pseudo-LRU algorithm <https://en.wikipedia.org/wiki/Pseudo-LRU> which was used in the olde days of 486es.
[03:31:45] <hayley> And the PowerPC G4, which is somewhat less old.
[03:32:34] <pl> moon-child: they also had pretty crappy CL code
[03:32:34] * hayley  reads https://lists.fosdem.org/pipermail/fosdem/2021q4/003302.html
[03:33:00] <hayley> I am sure JMC was rolling in his grave due to FOSDEM 2021 submissions for this stream.
[03:33:17] <moon-child> I can never keep fosdem and usenix straight--which is which?
[03:33:40] <moon-child> hayley: jmc purportedly did not like common lisp either
[03:33:50] <moon-child> because it stifled innovation
[03:34:04] <hayley> Indeed.
[03:34:04] <moon-child> (makes perfect sense--it was an industry language, and he was an academic!)
[03:34:54] <hayley> Shit like "the typed dialect of Lua", "ordered key-value stores: a minimalist's database" and "Nim meta-programming for 0-cost abstraction on microcontrollers" should send him rolling.
[03:35:38] <mfiano> Nim, I can't say enough bad about that language.
[03:36:56] <pl> lol @ ordered k/v
[03:37:03] <pl> did someone sleep through last decade?
[03:37:18] <hayley> https://archive.fosdem.org/2021/schedule/track/declarative_and_minimalistic_computing/
[03:37:26] <hayley> pl: It is FOSDEM, so the answer is always yes.
[03:38:12] * hayley plans no-Defun-allowed's Egoist Maximalist SOFtware meeting 2022
[03:38:15] *** Quits: Alfr (~Alfr@user/alfr) (Quit: Leaving)
[03:38:23] <pl> I guess they didn't do any web programming except maybe boringfest LAMP since 2007
[03:38:54] <mfiano> can you do shell-like expansion like src/*.{asd,lisp} in Makefile?
[03:38:57] <pl> (ignore for a moment the part where "ordered k/v" is essentially a narrowing of navigational databases)
[03:39:36] <hayley> Hence I expect that the presentations next year will send JMC rolling in his grave.
[03:39:47] <moon-child> mfiano: in gnu make, $(glob src/*.asd src/*.lisp)
[03:39:53] <moon-child> (and it is not worth using non-gnu make)
[03:40:10] <mfiano> I prefer BSD make, but fair enough.
[03:40:27] <moon-child> bsd make sucks
[03:40:38] <moon-child> and I say that despite largely preferring berkley stuff to gnu stuff
[03:40:44] <mfiano> and yet it is used by nearly everything
[03:40:45] <pl> hayley: I'm tempted to show up essentially as a heckler
[03:40:55] <moon-child> might be able to say  myfiles != ls src/*.asd src/*.lisp
[03:41:13] <hayley> pl: Well, I want to run DEMSOF (completely unrelated, see the prior acronym) at the same time.
[03:41:30] <hayley> Didn't get around to it this year.
[03:41:55] <pl> I heckled sales lead for GCP for all EU in public about cloud being old IBM business back, and that was just good natured ribbing
[03:43:17] <hayley> moon-child: Put it this way: they presented Pauseless at USENIX. One of the grifters that I took out had a mass session at FOSDEM.
[03:43:32] <hayley> Remember that and you won't forget the difference.
[03:43:41] <mfiano> That didn't even work in GNU make, but this did: files := include/*.asd include/*.lisp src/%/*.asd src/%/*.lisp
[03:43:48] <mfiano> The first 2 includes that is
[03:44:01] <pl> USENIX was pretty big and good conference
[03:44:04] <moon-child> hayley: I will probably still confuse the names
[03:44:18] <pl> also, isn't FOSDEM european?
[03:44:19] <moon-child> they are both ~6-letter acronyms
[03:44:26] <hayley> USENIX okay (still has *NIX in the name, 5/10), FOSDEM bad
[03:44:31] <hayley> pl: Right.
[03:45:10] <hayley> DEMSOF presentation format goes like this: 24 hours of presentations per day, since I dislike timezones, everyone gets 2 hours or more to talk shit until they fall asleep
[03:45:18] <pl> USENIX is essentially unix conference in USA that gobbled a lot of adjacent stuff for the simple fact that it, iirc, grew out of meeting for people keeping academia and later industry IT running
[03:45:27] <moon-child> hayley: sounds good to me
[03:46:03] <hayley> The end result is 48 hours of shitposting in a video conference. And we might collate papers if you want that.
[03:46:59] <moon-child> interleave the pages with each other
[03:47:05] <moon-child> so you have to skip around if you want something coherent
[03:47:22] * hayley takes notes
[03:47:59] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[03:49:50] <hayley> Now, where to find 24 presentations?
[03:50:27] <hayley> I guess I said "2 hours or more", so I can just make presentations longer, but 12 4-hour long presentations would get boring.
[03:51:23] <moon-child> interleave the presentations with each other
[03:51:28] <moon-child> so you have to skip around if you want something coherent
[03:51:41] <hayley> It would be live too. So just keep notes?
[03:57:00] * hayley calls a Scheme procedure that checks for membership, then updates the cache LRU-MEMBER?!
[03:58:11] <moon-child> hehe
[03:58:35] <hayley> I could use Unicode LRU-MEMBER‽
[04:00:38] <pl> if you want interesting cache replacement algorithms, I believe Postgres got something pretty nice?
[04:01:01] <pl> applicable to memory pages at least
[04:01:04] <hayley> Nah, just a boring LRU for me.
[04:01:27] <hayley> None of this is real anyway. I mean, a 2k word heap definitely fits in L1 cache.
[04:01:49] <White_Flame> the LRU stuff I've seen combines a hashtable with a singly linked list
[04:01:59] <White_Flame> erm, doubly linked list
[04:02:16] <hayley> Ah yeah.
[04:02:37] <White_Flame> seems to be the most reasonable approach
[04:02:50] <White_Flame> for a dumb bump-to-front scheme
[04:04:00] *** Quits: dra (~dra@2a04:4540:640e:a200:8c47:9799:e734:67e7) (Ping timeout: 268 seconds)
[04:19:08] * hayley tests with 8-word cache lines and a LRU cache with 4 lines in it.
[04:21:13] <hayley> "Copying 349 -> 321 (1905 misses)" "Compacting (#3) 699 -> 435 (1833 misses)"
[04:22:08] <hayley> Maybe I could backdoor the allocator so that trying to evaluate 'GC-MISSES gives me a miss count somehow.
[04:23:20] <moon-child> I would expect a copying gc to exhibit more linear access patterns, which a cleverer caching algorithm would be able to take advantage of
[04:23:56] <moon-child> in particular, there's a prefetch mode that says 'evict this after I write to it', which you can use for to-space
[04:24:26] <hayley> All but the mark pass of mark-compact are linear, and in practise there's papers on making marking cache-friendly, but not for semispaces.
[04:24:35] <hayley> Ah yeah.
[04:24:45] * hayley failed miserably to hack on SBCL's GC.
[04:25:25] <selwyn> is it difficult to hack gcs
[04:25:36] <hayley> Depends on the GC.
[04:25:48] <hayley> https://shipilev.net/jvm/diy-gc/ is C++, but still makes it look natural.
[04:28:31] <selwyn> what did you use to build applied-langua.ge?
[04:29:24] <hayley> Everything but the front page uses org-mode.
[04:29:55] <selwyn> oh nice
[04:36:54] * hayley uploaded an image: (94KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/hIGEdkPITZkrwJyduaaMgDjd/data.png >
[04:44:57] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 252 seconds)
[04:49:10] <White_Flame> of course, CPU prefetch as a thing and might seriously help the semispace one avoid misses
[04:58:14] *** Joins: Alfr (~Alfr@user/alfr)
[05:03:51] <hayley> It would help scanning but not copying, which is a breadth-first search and probably too "random".
[05:04:29] <White_Flame> hmm, yeah ,the write is linear but that doesn't need cache misses
[05:05:03] <hayley> Or, rather, reading objects to copy.
[05:05:15] *** Quits: Catie (~user@user/catie) (Quit: going home)
[05:08:30] *** Joins: random-nick_ (~random-ni@87.116.181.93)
[05:09:33] <hayley> https://engineering.purdue.edu/~vijay/papers/2004/gc.pdf e.g. for prefetching with mark-sweep.
[05:09:58] <hayley> Also https://github.com/ocaml/ocaml/pull/10195 "removes essentially all of the cache misses that occur during marking, speeding up GC."
[05:12:05] *** Quits: random-nickname (~random-ni@87.116.181.93) (Ping timeout: 252 seconds)
[05:12:22] <moon-child> interesting dichotomy I heard of recently: performancy can be limited either by bandwidth or by concurrency
[05:13:02] <hayley> Checks out, I guess.
[05:13:24] <moon-child> gc marking is technically a graph, but close enough to a tree that it's easy to process concurrently
[05:14:23] <hayley> I wonder if dense prefix handling makes mark-compact any better.
[05:14:41] <hayley> Worse, do I have a dense prefix here?
[05:16:17] <hayley> I'd also have to work out if I can free enough garbage from the rest if I don't forward some prefix though. Hm.
[05:28:55] <pl> moon-child: throughput vs. concurrency is very visible in GC
[05:29:14] <pl> though usually latency is used as a stand-in for concurrency
[05:39:11] *** Quits: random-nick_ (~random-ni@87.116.181.93) (Ping timeout: 265 seconds)
[05:48:23] *** Joins: Catie (~user@user/catie)
[05:49:49] <mfiano> Can someone explain to me how this works? I'm curious how it is able to update a line in-place on the CLI, without readline/ncurses/etc support: https://github.com/hikettei/cl-cram
[05:49:50] -ixelp- GitHub - hikettei/cl-cram: A simple, Progress Bar for Common Lisp
[05:50:30] <gilberth> mfiano: The easiest is to use ASCII CR.
[05:50:44] <mfiano> How would that help?
[05:52:23] <gilberth> With display. You said "replace a line" in-place. CR helps.
[05:53:05] <Catie> It puts the cursor back at the start, but you'd still have to blank the existing characters wouldn't you? I would think writing backspace characters would be the way to go
[05:53:13] <gilberth> Or "update" rather. Try (write-char #\return) (force-output), that on a tty moves your cursor to the beginning of the line again.
[05:54:07] <Catie> Oh I see, and since it's a fixed number of characters writing the new line of output would take care of the update
[05:54:09] <mfiano> Ok thanks. I'll play around with that idea. Some of these scripts I'm writing could benefit from such a UI
[05:55:20] <gilberth> Well, you can bet on VT100/ANSI control codes and use ESC [ K to delete to the of line. But when you know how wide your output is CR is a safe, it's ASCII after all.
[05:56:33] <moon-child> if you're overwriting the whole like then you shouldn't need \e[k
[05:56:35] <selwyn> how difficult are cli interfaces
[05:56:43] <selwyn> (to develop with)
[05:57:10] <moon-child> not difficult.  But annoying and stupid
[06:00:50] <gilberth> You could also attempt to be somewhat modular and backspace the exact amount of space you output, so you don't take the bet to be on a fresh line. Won't work with wrapping, of course. But curses won't help here either. /me shrugs.
[06:02:19] <mfiano> gilberth: I can't seem to get ascii 13 to work for this. could you provide a simple demo with loop/format?
[06:02:44] <gilberth> Have you tried on a tty?
[06:02:50] <mfiano> Yes
[06:03:03] <gilberth> What happens instead?
[06:03:17] <gilberth> Show me your code.
[06:04:30] <mfiano> (loop do (sleep 0.1) (format t "~c~,2f%" #\cr (random 1.0)))
[06:05:58] <moon-child> buffering maybe
[06:07:47] <moon-child> try calling FINISH-OUTPUT after printing
[06:08:35] <mfiano> Ah that works!
[06:09:26] <mfiano> Thanks everyone.
[06:12:07] <gilberth> Use force-output, never finish-output, unless you need it.
[06:12:38] <moon-child> why?
[06:12:58] <gilberth> Because finish-output waits for a sync to be performed.
[06:13:48] <gilberth> You don't want round-trips.
[06:14:13] <gilberth> I once sped McCLIM up by a mere s/FINISH/FORCE/g.
[06:16:49] <gilberth> FINISH-OUTPUT is useful, both most often you don't mean it. Or do you sync(2) each time you write(2)? Or on network protocols wait for an ack? Or for displayed output wait for your vsync?
[06:17:15] <gilberth> s/both/but/ ;where is my coffee?
[06:19:32] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[06:19:55] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[06:22:05] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Client Quit)
[06:28:16] *** Quits: White_Flame (~quassel@user/white-flame/x-6930243) (Remote host closed the connection)
[06:29:29] *** Joins: White_Flame (~quassel@user/white-flame/x-6930243)
[06:53:57] <gilberth> BTW Genera has tv:noting-progress.
[07:26:17] <hayley> https://www.youtube.com/watch?v=IRMbYRt4MQ4
[07:26:18] -ixelp- Discipline (Live at The Spectrum, Montreal, Jul. 84) - YouTube
[07:26:23] <hayley> moon-child: Would you mix ATS and threads?
[07:26:51] <hayley> I don't think I'd find a need to touch ATS, but someone mentioned it.
[08:04:52] <moon-child> idk that much about ats.  My impression is it allows for very fine-grained types, but is also _very_ touchy and difficult to work with
[08:05:36] <moon-child> e.g. you can parcel up an array into a front half and a back half, hand each of them to a thread to work on, and then treat the whole thing as a single entity again once the threads are done
[08:06:00] <hayley> Ah right.
[08:07:05] <moon-child> if interested, I would suggest waiting for ats 3 to be finished; apparently it is slated to include serious qol improvements.  But currently it only compiles to js sooo
[08:07:43] * hayley scratches head
[08:07:49] <hayley> Lots of threading there.
[08:08:24] <moon-child> well, ats 2 compiled to c.  I have no idea why he chose js as a target
[08:08:26] <moon-child> ¯\_(ツ)_/¯
[08:08:26] * hayley also wonders what Ravenpack is hiring for, given that there is no mention of Lisp on https://www.ravenpack.com/careers/
[08:09:16] <hayley> And I am barely qualified for even Python web backend work apparently, I don't have a degree.
[08:09:38] <moon-child> they name-drop it at least  'You will be reporting directly to the Content Manager in an international team of developers skilled in Java, Common Lisp, Python, and SQL'
[08:09:55] <moon-child> perhaps you could be a front-end web developer
[08:09:59] *** Quits: semz (~none@user/semz) (Ping timeout: 265 seconds)
[08:10:59] <hayley> https://youtu.be/xpAvcGcEc0k?t=231
[08:10:59] -ixelp- Argument - YouTube
[08:22:37] *** Joins: semz (~none@user/semz)
[08:37:48] *** Quits: Catie (~user@user/catie) (Quit: sQuit)
[08:52:53] <gilberth> You need a degree to be qualified?
[08:57:44] <hayley> Seems so.
[08:57:55] <hayley> Doesn't make much sense to me, but I'm not the one hiring.
[08:58:25] <hayley> https://www.youtube.com/watch?v=MibJQBYVowk
[08:58:26] -ixelp- I Made a Deadly Minecraft Trap Using... Fish? - YouTube
[09:04:15] <gilberth> Well, the site says "BS".
[09:07:27] <hayley> Ah, they want Berkeley Smalltalk.
[09:07:53] <gilberth> There is such a thing?
[09:08:40] <hayley> Yes.
[09:13:01] <gilberth> lol. You can crash the CADR when a network packet arrives while "booting". But perhaps that is my fault somehow.
[09:15:51] <hayley> https://www.youtube.com/watch?v=Yu9ykgGUm1w
[09:15:51] -ixelp- Starship Trooper: a. Life Seeker, b. Disillusion, c. Würm (2008 Remaster) - YouTube
[10:00:37] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[10:17:03] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[10:17:29] <dave0> maw
[10:22:50] <gilberth> Hello dave0!
[10:23:44] <dave0> hey gilberth :-)
[10:23:50] <dave0> how are you?
[10:24:06] <gilberth> Better! I am better, thanks.
[10:24:30] <dave0> cool
[10:30:05] *** Joins: treflip (~user@95.79.32.99)
[10:44:05] *** Joins: shka (~herr@109.231.0.226)
[11:07:36] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Quit: Leaving)
[12:03:39] <hayley> https://www.theregister.com/2021/12/08/alibaba_teases_a_breakthrough_chip/
[12:03:39] -ixelp- Alibaba teases a chip with combined CPU and RAM • The Register
[12:04:36] <shka> https://www.youtube.com/watch?v=sWrRZVkMhBQ
[12:04:37] -ixelp- ✨Blue Alps Keyboard ASMR✨😌Gentle and Soothing😌(Focus FK-727) - YouTube
[12:11:09] *** Joins: notzmv (~zmv@user/notzmv)
[12:15:25] *** Quits: Alfr (~Alfr@user/alfr) (Ping timeout: 240 seconds)
[12:17:57] *** Joins: Alfr (~Alfr@user/alfr)
[12:25:54] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Quit: Leaving...)
[12:35:45] <shka> hayley: fucking finally i say!
[12:41:08] <moon-child> I got one of the new macs.  Have yet to really play with it, but the memory bandwidth is _super_ sexy
[12:43:24] <shka> moon-child: which is funny honestly!
[12:44:26] <moon-child> why?
[12:45:14] <shka> because you would not expect memory bandwith would not be a high priority for consumer chip
[12:45:44] <shka> i mean, it is not oriented toward data warehouses 
[12:47:17] <shka> so the common wisdom is that personal computer CPU ought to have a big chunk of cache
[12:48:29] <moon-child> yeah but 'our shit is super fast' is a nice marketing tack for them
[12:48:47] <shka> mmm, perhaps
[12:48:48] <moon-child> also, mac is really big in audio and (to a lesser extent) video production
[12:49:11] <shka> but i wonder if apple does not want to make it's own cloud 
[12:49:39] <shka> i mean they already have the right software to make it happen and a very power efficient CPU
[12:50:04] <moon-child> you mean like b2b stuff?
[12:50:07] <shka> and that THICK memory bandwidth is interesting to say the least
[12:50:26] <shka> i mean: apple version of AWS/azure/google cloud, yeah
[12:50:32] <moon-child> I think they'll be better off doing what they're already doing--selling mac minis at outrageous markup to aws :)
[12:51:13] <moon-child> *they'd
[12:51:25] <shka> it is nice to have diverse sources of income 
[12:51:53] <moon-child> true
[12:51:57] <shka> and if they can have more cpu power per watt, well, that's a nice position to have 
[12:52:11] * moon-child waits for the apple etherum-mining asic
[12:55:08] *** Quits: Inline (~Inline@aftr-37-201-240-202.unity-media.net) (Ping timeout: 256 seconds)
[13:01:08] <hayley> What's the M1 bandwidth like exactly? How many transfers/second?
[13:01:25] <hayley> And even having an awfully fast bus still doesn't scream "breaking the Von Neumann bottleneck" IMO.
[13:01:32] <moon-child> I think like 200gb/s, or 400gb/s for the fancier one
[13:01:46] <hayley> "the M1 Pro features 256-bit LPDDR5 memory at 6400MT/s speeds, corresponding to 204GB/s bandwidth"
[13:03:25] <moon-child> 'breaking the von neumann bottleneck'  no, but it's still nice (if you know how to use it)
[13:04:10] <hayley> I wonder if the latency is any better too.
[13:05:11] <hayley> I can make some AVX2 crap churn through 60GB/s through L1 cache, so 200GB/s seems a bit overkill. I could handle three cores and a bit, which is overkill.
[13:05:49] <hayley> The latency is still about 100ns apparently.
[13:06:33] <hayley> https://www.anandtech.com/show/16252/mac-mini-apple-m1-tested also says 58GB/s reading on one core, 36GB/s writing, and still 60GB/s copying? That doesn't add up.
[13:06:34] -ixelp- The 2020 Mac Mini Unleashed: Putting Apple Silicon M1 To The Test
[13:07:49] * hayley wants a silicon fab. Kevin Carson eat your heart out, finna do the homebrew Industrial Revolution 2
[13:08:12] * hayley still has not read Carson either.
[13:16:22] <ck_> what does "finna" mean? "finally going to" ?
[13:17:33] <hayley> "finna" is a corruption of "gonna" - fi is one off go on a QWERTY/AZERTY/QWERTZ keyboard.
[13:20:53] <ck_> ah.. anthropological studies showed a use of the "finna boutta" bigram, how does this compare with that? "going to about to"?
[13:21:10] <hayley> I guess so.
[13:21:59] <ck_> makes no sense. I think the kids are wrong
[13:22:14] <hayley> bruh
[13:22:21] <ck_> dude
[13:24:38] <shka> ze AZERTY 
[13:24:41] *** Quits: Mandus (~aasmundo@0.51-175-33.customer.lyse.net) (Quit: WeeChat 3.3)
[13:24:46] <shka> on la keyboard
[13:24:59] <ck_> "le", non?
[13:25:42] <ck_> quick, let's implement the dvorak shitpost translator
[13:25:52] <ck_> with a target audience that plentiful, we can't lose
[13:26:03] <shka> ck_: already done
[13:26:25] <shka> https://awsm-tools.com/text/keyboard-layout
[13:26:36] <ck_> lroy gpn
[13:26:37] <shka> very useful if you use one of those layouts 
[13:27:02] <ck_> "post" is "lroy" in dvorak, that already has some potential
[13:27:07] *** Joins: Mandus (~aasmundo@0.51-175-33.customer.lyse.net)
[13:27:07] <shka> i use colemak, and when i program macro pad, i need to translate between colemak and qwerty 
[13:27:12] <shka> annoying
[13:27:39] <ck_> "russian qwerty" .. sounds funny
[13:27:53] <shka> i wonder if X allows different keyboard layouts on different keyboards
[13:28:19] <ck_> I always stumble over cyrillic lettering.  Why is "P" "R" and so on
[13:28:21] <ck_> makes no sense either!
[13:29:22] <shka> ck_: because it is imported from greek
[13:29:34] <ck_> ruh rho
[13:29:42] <ck_> ok makes a little more sense, thanks
[13:43:34] <pl> yep, cyryllic essentially is end point of adapting greek to slavic languages
[14:11:33] <shka> skip the middleman
[14:12:36] <shka> history behind this involves East Roman Empire and modern day Ukraine
[14:12:56] <shka> and the spreading Christianity
[14:13:09] <ck_> I asked a friend recently to try and describe the difference between Ukrainian and Russian
[14:13:34] <ck_> is one more "baroque" to you? more frills than the other? more or less melodic / efficient / playful?
[14:14:30] <shka> dunno, i am hard pressed to hear the difference 
[14:14:34] <shka> sorry :(
[14:15:45] <ck_> thank you anyway :)
[14:24:19] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[14:27:16] <pl> shka: there's south slavic to go through as early cyryllic adaptation
[14:31:03] <shka> i guess
[14:33:23] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[14:36:18] *** Joins: random-nick_ (~random-ni@87.116.181.93)
[14:41:42] <hayley> Well, Ravenpack isn't hiring just yet. But I got told about it anyway, lol
[14:45:00] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:46:36] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Client Quit)
[14:48:19] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:38:04] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Remote host closed the connection)
[15:40:05] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[15:46:55] <selwyn> shka: what do you think about deepmind?
[15:47:24] <selwyn> every time they seem to have pushed the black box of numbers to its limit they pull off yet another advance
[15:51:33] *** Quits: treflip (~user@95.79.32.99) (Ping timeout: 252 seconds)
[15:54:06] <shka> selwyn: i am very skeptical about deep learning 
[15:54:34] <selwyn> https://www.nature.com/articles/s41586-021-04086-x
[15:54:35] -ixelp- Advancing mathematics by guiding human intuition with AI | Nature
[15:55:04] <shka> my issue is that I feel like we need fundamental theory of learning, and deep learning is not that
[15:55:44] <shka> it is effective, engineering solution to many problems, but won't lead to a fundamental breakthrough 
[16:03:34] <selwyn> til there is more than one type of pint
[16:06:41] *** Joins: treflip (~user@95.79.32.99)
[16:06:51] <edgar-rft> -> https://en.wikipedia.org/wiki/Pint :-)
[16:10:06] <shka> selwyn: I also honestly think that the success of deep learning speaks more about problems we are trying to solve then about the deep learning
[16:10:51] <selwyn> ?
[16:10:57] <selwyn> that we don't have a clue about them yet?
[16:12:06] <shka> selwyn: that it turns out that almost anything can be modeled using polynomials 
[16:12:18] <shka> which is, well, no shit
[16:14:29] <selwyn> in the stalin film they have russians speaking with english accents, which is not unusual
[16:14:38] <selwyn> but steve buscemi (ukrainian) with an american accent
[16:18:10] <selwyn> someone i know compared ukrainian to scots but i think he was referring to the fact that it is usually not easy for others to understand it, while they can understand the dominant language easily due to exposure
[16:23:02] *** Parts: treflip (~user@95.79.32.99) (ERC (IRC client for Emacs 27.2))
[16:35:49] <shka> selwyn: also, deepmind alphastart had some hilarious problems to solve
[16:41:12] <selwyn> like what
[16:41:43] <shka> RL, so they need a heuristic metric checking if something was good
[16:41:50] <shka> it is starcraft
[16:42:04] <shka> so the metric was "no enemy units"
[16:42:32] <shka> and alphastar started to simply run away from the enemies 
[16:42:51] <selwyn> 'the only way to win is to run away'
[16:42:52] <shka> because this was the simplest way to have no enemies in the vision
[16:43:00] <selwyn> actually not bad advice
[16:43:22] <shka> yeah, but this is far cry from "understands the game" objective
[16:43:36] <selwyn> right
[16:43:45] <shka> you just have bunch of heuristic metrics and hope for the best
[16:44:01] <shka> and no ONLINE learning
[16:44:22] <shka> so if opponent finds way to trick the AI into making a mistake
[16:44:34] <selwyn> https://www.youtube.com/watch?v=EF3g4Ua5e7k
[16:44:35] <shka> he can abuse this one tick over, and over again
[16:44:35] -ixelp- zap branningan explains his genius strategy for defeating killbots futurama - YouTube
[16:51:59] <shka> selwyn: they eventually ran into killbots in one of the movies, and it turned out to be exactly like that old game
[16:52:14] <shka> which was funny, but perhaps obvious 
[16:53:04] <shka> https://www.mobygames.com/game/killbots
[16:53:05] -ixelp- Killbots for Linux (2006) - MobyGames
[16:54:04] <shka> old unix game
[17:24:37] *** Quits: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1) (Ping timeout: 240 seconds)
[17:34:03] *** Quits: axvr (757f658d76@2604:bf00:561:2000::e1) (Remote host closed the connection)
[17:36:14] *** Quits: payphone (dd09ba4109@2604:bf00:561:2000::20b) (Remote host closed the connection)
[17:36:14] *** Quits: sm2n (ae95cb1267@user/sm2n) (Remote host closed the connection)
[17:36:14] *** Quits: sirufer (68f46fc7c3@user/sirufer) (Remote host closed the connection)
[17:36:35] *** Joins: sirufer (68f46fc7c3@user/sirufer)
[17:36:43] *** Joins: payphone (dd09ba4109@2604:bf00:561:2000::20b)
[17:36:49] *** Joins: sm2n (ae95cb1267@user/sm2n)
[17:36:50] *** Joins: axvr (757f658d76@2604:bf00:561:2000::e1)
[17:59:39] *** Quits: random-nick_ (~random-ni@87.116.181.93) (Ping timeout: 265 seconds)
[18:06:29] *** Quits: clothespin (~awolven@c-73-209-95-92.hsd1.il.comcast.net) (Ping timeout: 252 seconds)
[18:49:35] <dave0> nite all
[18:49:56] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[19:40:00] *** Joins: treflip (~user@95.79.32.99)
[20:30:12] *** Joins: makomo (~makomo@user/makomo)
[22:04:18] *** Quits: treflip (~user@95.79.32.99) (Quit: good night ✨)
[22:30:38] <shka> https://thedebrief.org/darpa-funded-researchers-accidentally-create-the-worlds-first-warp-bubble/?fbclid=IwAR3sic5PyFuMnNiowMbEPgi6OHCCT_7dktoydrN0C7nIQIILxVcPaH0LN10
[22:31:12] <shka> i want to believe
[22:38:54] * ck_ .oO("a static warp shell?")
[22:39:52] <selwyn> yeah that thing is weird
[22:47:34] <selwyn> jealous of those guys - it doesn't always happen that your research unexpectedly turns out to be warp drives
[23:00:30] <selwyn> reading the paper
[23:17:36] <selwyn> damn
[23:21:17] <selwyn> well, they end with a proposal to actually test this in the lab
[23:23:26] <selwyn> photons breaking the speed of light barrier...
[23:35:55] *** Joins: rogersm (~rogersm@90.166.177.48)
[23:37:46] <ck_> tachyons with tiny flashlights
