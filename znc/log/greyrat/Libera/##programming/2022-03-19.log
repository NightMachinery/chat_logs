[00:00:57] *** Quits: duuude (~user@user/duuude) (Ping timeout: 240 seconds)
[00:01:17] <pyzozord> I am in favor of meme voyager, memes are humanity's most important heretige
[00:01:30] <pyzozord> heritage, ugh
[00:02:03] <alefir> I can't imagine it'd be much better than the 9gag rock
[00:02:10] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[00:03:01] *** Joins: duuude (~user@user/duuude)
[00:03:02] *** Quits: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net) (Ping timeout: 240 seconds)
[00:04:03] <kee> alefir: They might want to wipe us out, but it'll be too late for them.
[00:04:44] <ProfSimm> alefir: aliens can't attack us, if they do, we'll infect their spaceships with crypt ransomware
[00:05:25] <kee> There was a good bit in the second or third Doc Future book like that.
[00:05:32] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Ping timeout: 240 seconds)
[00:05:54] <alefir> "Warning! Your installation of BlurgZurg OS is infected with a virus! Please call Earth for technical support"
[00:08:05] <epony> 9what?
[00:09:19] <alefir> epony: 9gag, a "meme sharing platform", got a giant limestone rock, covered it in dead 2011 memes, and buried it somewhere in Arizona
[00:09:46] <epony> the paint got scratched on the first letter of "rock"
[00:10:22] <alefir> https://d3nuqriibqh3vw.cloudfront.net/sculptor.jpg
[00:10:23] <bayaz> Type: image/jpeg Size: 287.8 kB 
[00:10:23] <pyzozord> I'm working on breaking my 9gag habit because I end up scrolling 9gag and because I'm board, unconciously opening in a new tab 9gag
[00:10:58] <pyzozord> sometimes I end with 3 or 4 9gag tabs. That's like 36gag...
[00:11:47] <epony> the front "lower" part fell off
[00:12:26] <epony> (ageist balls of fire)
[00:13:37] <ProfSimm> alefir: I'm quietly terrified this will legit be considered a cultural artifact representative of our civilization in the future
[00:14:08] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[00:15:13] <alefir> Enough other written records will probably survive to show we're actually much worse
[00:15:36] *** Quits: Enitin (~Enitin@82.180.145.228) (Ping timeout: 250 seconds)
[00:15:37] <ProfSimm> alefir: would they. Like can you run a program on a 80s floppy disk right now
[00:15:43] <kee> It is representative of our civilisation.
[00:15:47] <ProfSimm> alefir: it's much worse if I give you a modern flash drive
[00:15:47] <alefir> ProfSimm: yes
[00:15:57] <ProfSimm> alefir: I mean if you have no flopp
[00:15:59] <ProfSimm> y*
[00:16:02] <kee> Yes.
[00:16:16] <kee> I can just modify a radio and a printer.
[00:16:18] <ProfSimm> Or the Apple II the program was written on
[00:16:22] *** Joins: Tazmainian (~Tazmainia@2001:1c02:1701:6a00::1003)
[00:16:25] <kee> Got an emulator for that.
[00:16:43] <ProfSimm> You don't have all that.
[00:16:52] <ProfSimm> From scratch, our modern tech is basically noise
[00:17:05] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Remote host closed the connection)
[00:17:11] <kee> It's really not.
[00:17:18] <alefir> But unlike the last people in human history to store data on rocks, we're a lot better at writing documentation
[00:17:20] <kee> You can read a floppy disk with an electron microscope and a pencil.
[00:17:26] <JanC> Decker: there is also SQLCipher which does SQLite encyption as open source
[00:17:26] <ProfSimm> kee: I have an example of that. It's been found the pyramid blocks were actually some sort of cement recipe, they were poured into shape on site.
[00:17:33] <kee> ProfSimm: Who found that?
[00:17:58] <JanC> (never used it myself, but...)
[00:18:13] *** Quits: Tazmainian (~Tazmainia@2001:1c02:1701:6a00::1003) (Client Quit)
[00:18:20] <ProfSimm> kee: https://www.nytimes.com/2008/04/23/world/africa/23iht-pyramid.1.12259608.html
[00:18:20] <bayaz> Title: Did the Great Pyramids' builders use concrete? (Published 2008) 
[00:18:28] <koollman> "tomorrow we will discuss early 21st century memes. Don't forget to finish your 4chan analysis, and make sure you refer to the latest version of the urbandictionary annex"
[00:18:50] <ProfSimm> kee:  my point is it took us decades to find that out. We're that clueless when we have no context
[00:18:58] <ProfSimm> kee: centuries actually
[00:19:03] <Decker> JanC Mine's Open source - relicensed as WTFPL :) 
[00:19:04] <kee> That's 2008, and I've never heard of it, so I suspect it's wrong.
[00:19:20] <ProfSimm> kee: knowledge doesn't work this way
[00:19:41] <ProfSimm> kee: the mainstream idea of something is usually quite wrong, but sturrbornly persistent in the minds of the average person
[00:19:46] *** Joins: Enitin (~Enitin@82.180.145.228)
[00:19:56] *** Quits: Tazy (~Tazmainia@83.80.169.186) (Ping timeout: 245 seconds)
[00:20:07] <epony> http://9front.org/img/mymemoryofdrawtermisfading.back.png ‚Üê "what do you mean 9adopted?"
[00:20:11] <ProfSimm> kee: like the "we use 10% of our brain" thing. Except it has recently become a meme to debunk it.
[00:20:23] <JanC> https://www.zetetic.net/sqlcipher/open-source/
[00:20:24] <bayaz> Title: SQLCipher Source - Zetetic 
[00:20:28] <kee> ProfSimm: ‚ÄúDavidovits's method is not accepted by the academic mainstream.‚Äù according to Wikipedia.
[00:20:52] <ProfSimm> kee: well General Relativity was also not accepted by the academic mainstream.
[00:20:58] <kee> Yes it was?
[00:21:05] <ProfSimm> kee: no it wasn't. Read history
[00:21:07] <kee> You might be thinking of Special Relativity.
[00:21:15] <kee> But that was accepted fairly quickly.
[00:21:45] <kee> General Relativity wasn't tested until the next eclipse after Einstein announced it.
[00:21:46] <ProfSimm> kee: nope. Actually academics were openly calling it "fake jew science" and the like.
[00:22:02] <ProfSimm> kee: yes but how do we test pyramids
[00:22:02] <kee> Well, sure; there were plenty of racist academics.
[00:22:12] <kee> Doesn't mean it wasn't broadly accepted.
[00:22:14] <ProfSimm> kee: I mean we cna't go back in time and test what they did
[00:22:36] <kee> Are you saying it's unprovable?
[00:22:39] <kee> That's not really how science works.
[00:22:39] <alefir> While looking it up, I just found an article talking about how the pyramids were made of poured concrete... in the 1800s, to spite China
[00:22:50] <kee> ‚ÄúI can't think how to test my hypothesis so it's correct.‚Äù
[00:23:28] <ProfSimm> kee: maybe you should read what the evidence is instead of mocking it out of ignorance
[00:23:37] <Inline> the big pyramid craze
[00:23:38] <Inline> lol
[00:23:51] <kee> ProfSimm: Everyone has their own pet theory about how the pyramids were constructed.
[00:24:02] <kee> But the simplest one is ‚Äúpeople quarried rocks then put them on top of each other‚Äù.
[00:24:07] <ProfSimm> kee: guy actually studied the actual blocks
[00:24:15] <kee> Yeah, but some of them were granite.
[00:24:18] <ProfSimm> kee: oit
[00:24:19] *** Quits: Enitin (~Enitin@82.180.145.228) (Ping timeout: 256 seconds)
[00:24:25] <kee> So there would have to have been two construction processes used.
[00:24:32] <pyzozord> you think it would be difficult to write a jpeg decoder and h264 decoder
[00:24:47] <kee> One, to lift all the granite rocks, and another separate one to cast the concrete rocks.
[00:25:21] <pulse> i watched this https://www.youtube.com/watch?v=j4cdDT1ZvAA
[00:25:22] <bayaz> Title: Egypt's Great Pyramid: How it was Constructed - The Inset Ramp 
[00:25:29] <pulse> and then i became fully convinced that aliens build the pyramids
[00:25:44] <Inline> i don't think so
[00:25:44] <pulse> :p
[00:26:00] <ProfSimm> kee: I think we got sidetracked, but meanwhile you also demonstrated how hard decyphering the past is. So no, no one will decode your USB stick if they have no context
[00:26:14] <alefir> I heard the pyramids were built by the mole people, while digging out their underground cities
[00:26:35] <Inline> maybe it was just another civilisation, before the onset of the big ice age, not the later smaller one
[00:26:38] <kee> ProfSimm: That's because your USB stick will have decayed, and lost all its data.
[00:26:49] <Inline> so it might be older than we think
[00:26:57] <ProfSimm> kee: no, the assumption obviously here is that it's working fine
[00:27:04] <kee> In which case it's not a USB stick.
[00:27:19] <kee> USB sticks don't last hundreds of years.
[00:27:27] <Decker> https://youtu.be/0RR72UbK_pc?t=110  looks more like a water vortex generator ( https://www.youtube.com/watch?v=xXriDzmTZn8 ) than an aligator pit... all that perfect stonework with no mortar
[00:27:28] <bayaz> Title: Ancient Komombo In Egypt: Site Of Crocodile Ceremony To Overcome Fear 
[00:27:28] <bayaz> Title: Water vortex power plant 
[00:27:35] <alefir> maybe its some usb stick dna preserved in a mosquito in amber?
[00:27:38] <Inline> hammering rock against rock is not a feasible process anyway...
[00:27:41] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Quit: WeeChat 3.4.1)
[00:27:41] <ProfSimm> kee: well alefir said enough info will survive, you say it won't survive, you duke it out
[00:27:49] <Decker> been watching that brian forester guy for a while - megalithic pre-incan stuff in peru is pretty fantstic too
[00:27:59] <Inline> takes too long even if you had 1000 men working 24h a day....
[00:28:17] <kee> ProfSimm: Info will survive because we keep making copies of it.
[00:28:26] <epony> don't be so sure
[00:28:29] <ProfSimm> kee: if the civilization goes down, the copying stops
[00:28:29] <kee> And because we're storing some of those copies on media like heavy-duty magnetic tape.
[00:28:36] <Inline> maybe they used water
[00:28:42] <epony> wafer
[00:29:04] <Inline> sandy water, for grinding the rock
[00:29:14] <epony> 9rock
[00:29:30] <Inline> epony: are you ill ?
[00:29:37] <Inline> epony: are you ok ?
[00:29:47] <epony> Inline, who's asking?
[00:29:51] <Inline> epony: where are you from ?
[00:29:55] <Inline> epony: me is asking
[00:30:29] <epony> Inline, ask something else to  evaluate your medicomental status
[00:30:51] <Inline> ok dr. eponymous epony
[00:31:00] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[00:31:03] <Inline> what's my status ?
[00:31:09] *** Joins: junebug (~junebug@2600:1700:3db0:2540:2a86:2c25:ab75:186d)
[00:31:13] *** Joins: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-231.dsl.bell.ca)
[00:31:44] <epony> dunno, dawg ;-)
[00:32:07] <Inline> yeah and then build it in 20 years stead of 20.000.....
[00:32:09] <Inline> pfft
[00:32:24] <Inline> rock against rock
[00:32:26] <Inline> hammering
[00:32:29] <Inline> lol
[00:32:49] <epony> ur petroglyphs were "roy was here"
[00:33:28] <alefir> I like that "_ was here" is an enduring part of human civilization
[00:33:42] <epony> 9roy
[00:33:57] <kee> We all want to make our mark on history.
[00:34:09] <kee> At least, everyone who did, did.
[00:34:20] <kee> So we have no evidence to the contrary.
[00:34:42] *** Quits: cliluw (~cliluw@47.147.77.43) (Ping timeout: 252 seconds)
[00:34:50] <alefir> like how "Halfdan was here" got carved into the Hagia Sophia by a viking 1100 years ago
[00:34:52] <epony> messiuers and madammes https://upload.wikimedia.org/wikipedia/commons/thumb/1/13/Chip_Roy%2C_official_portrait%2C_116th_Congress.jpg/681px-Chip_Roy%2C_official_portrait%2C_116th_Congress.jpg
[00:34:53] <bayaz> Type: image/jpeg Size: 140.1 kB 
[00:35:11] <epony> (no wig day)
[00:35:29] *** Joins: cliluw (~cliluw@47.147.77.43)
[00:36:33] <kee> http://localhost/icons/openlogo-75.png
[00:36:39] <DPA> People think python is an easy language. Guess the output: https://bpa.st/DHFQ
[00:36:40] <bayaz> Title: View paste DHFQ 
[00:36:55] <pyzozord> heh a localhost link
[00:37:00] <kee> DPA: [1, 1]
[00:37:07] <rtypo> i know that website, localhost
[00:37:09] <kee> Python is an easy language; what else would it be?
[00:37:16] <DPA> Correct
[00:37:36] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[00:37:56] <pyzozord> that's because the default arguments are instantiated once
[00:37:58] <epony> bobbin filtered roy https://upload.wikimedia.org/wikipedia/commons/thumb/7/77/KilroySchematic.svg/1024px-KilroySchematic.svg.png
[00:37:59] <bayaz> Type: image/png Size: 15.4 kB 
[00:38:18] <kee> You can think of the default arguments as properties of the function object.
[00:38:56] <DPA> I know why it happens. It's still awful. Took me an hour to debug last time.
[00:39:06] <pyzozord> it's not really a good design decision imo, especially for python
[00:39:06] <kee> Any alternative would be worse.
[00:39:22] * Inline injects the toilet meme
[00:39:25] <Inline> tosun was ere
[00:39:33] <CodePoint> I visit localhost all the time.  They have the best porn.
[00:39:40] <Inline> "tosuuuung anana kosuuunnnng"
[00:39:40] <pyzozord> python's primary value is being clear and beautiful, this way of handling of default arguments is clearly not that
[00:39:47] <kee> def f(x=requests.get("http://localhost/icons/openlogo-75.png")): return x
[00:39:49] <Inline> lol
[00:40:10] <kee> pyzozord: Would you expect f() to make an HTTP request?
[00:40:24] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Quit: WeeChat 3.4.1)
[00:40:26] *** Joins: pavonia (~user@user/siracusa)
[00:40:32] <DPA> Yes
[00:40:36] <pyzozord> kee: no I'd expect the request to be done on script start
[00:40:38] <ProfSimm> DPA: yeah that's stupid
[00:40:42] <kee> DPA: Would you expect f(3) to?
[00:40:47] <CodePoint> python is a bitch and a half to refactor a large codebase in.
[00:40:52] <pyzozord> kee: I mean that's what python does
[00:40:58] <ProfSimm> DPA: doesn't make Python a hard language, but it makes it a messy language, like PHP
[00:40:59] <Inline> you all bastards anyway.....
[00:41:07] <pyzozord> but in normally I'd expect it to be done on function call, yes
[00:41:08] <Inline> told my bio teacher....
[00:41:10] <Inline> lol
[00:41:21] <kee> pyzozord: So how would you expect f("something") to work?
[00:41:31] <ProfSimm> This is one reason why I hate reference types
[00:41:42] <Inline> yes
[00:41:46] <Inline> they see me refer
[00:41:49] <Inline> the hate me
[00:41:54] <Inline> lol
[00:42:26] <CodePoint> Use references!  Wont anyone think of the memories?
[00:43:12] <DPA> kee: If a value is specified, there is no need to evaluate it's default. I expect it to just obviate the need to write the argument explicitly. That's what a default is all about.
[00:43:44] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[00:43:46] <pyzozord> kee: I'd expect the request to not be made
[00:44:01] <bjs> DPA: well the point here is that the default value belongs to the function, not the function call, in Python. So the default values are evaluated even if you never call the function
[00:44:22] <kee> pyzozord: So how should that interact with f(**{'x': 3})?
[00:44:36] <pyzozord> not sure what is that syntax
[00:44:42] <bjs> it's the same as f(x=3)
[00:44:51] <pyzozord> is this python?
[00:44:53] <bjs> yes
[00:44:57] *** Joins: Enitin (~Enitin@82.180.145.226)
[00:44:59] <kee> But, what if it's f(**d) where d comes from somewhere else?
[00:45:01] <pyzozord> what's this feature called?
[00:45:05] <kee> Splat?
[00:45:18] <DPA> It uses the keys of the object to fill in the arguments. I don't see the problem.
[00:45:23] <bjs> pyzozord: it's unpacking
[00:45:24] <duuude> does rust have rand()
[00:45:26] <Hash> I'm about to showcase my diablo 2 modding application
[00:45:26] <duuude> ?
[00:45:33] <pyzozord> wasn't unpacking done with ...
[00:45:33] <kee> * is called splat, ** is called‚Ä¶ not sure. splatty-splat, maybe.
[00:45:39] <Hash> D2 Modder 4.0 and Documenter. Auto document any mod :D
[00:45:39] <kee> pyzozord: That's JavaScript.
[00:45:41] <Hash> Sec
[00:45:45] <kee> Or Java
[00:45:51] <kee> Python's always used * and **.
[00:46:02] <pyzozord> I thought python's syntax was the same there, but maybe I remembered wrong
[00:46:25] <bjs> pyzozord: f(*args, **kwargs) will unpack a sequence of positional arguments `args` and a mapping of keyword arguments `kwargs` into the call, as if you'd typed them all out manually
[00:46:47] <pyzozord> right I recall that a bit
[00:46:53] <bjs> f(*[1,2,3], **{"x": 4, "y": 5}) is the same as f(1,2,3,x=4,y=5)
[00:46:53] <Hash> https://www.youtube.com/watch?v=r3h5_u7P7vs
[00:46:54] <bayaz> Title: D2 Modder v4.0 (BETA DEMO) - Diablo 2 Modding Application 
[00:47:02] <pyzozord> I haven't used it too much, but remember reading about it in the standard
[00:47:49] *** Quits: DrMax (~DrMax@node-1w7jra94757g2d7prpws7r2yc.ipv6.telus.net) (Ping timeout: 240 seconds)
[00:47:54] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 252 seconds)
[00:47:57] *** Quits: Akuli (~Akuli@87-94-109-66.bb.dnainternet.fi) (Quit: Akuli)
[00:48:41] <pyzozord> Hash: diablo 2 is pretty cool
[00:49:05] <pyzozord> I wached multiple speedrun world records
[00:50:03] *** Quits: widp (~widp@2406:7400:73:7de3:ec9a:140d:44dc:4024) (Remote host closed the connection)
[00:50:13] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Read error: Connection reset by peer)
[00:51:08] *** Joins: Akuli (~Akuli@87-94-109-66.bb.dnainternet.fi)
[00:51:38] *** Joins: vitali64 (~vitali64@user/vitali64)
[00:51:49] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[00:55:02] *** Quits: jamea (~jamea@200.68.140.3) (Ping timeout: 240 seconds)
[00:57:58] *** Joins: trevors (~trevors@user/trevors)
[00:58:39] *** Joins: zaher (~zaher@37.48.191.19)
[00:58:41] *** Joins: dfoolz_ (~dfoolz@2a01:4f8:160:1161::2)
[00:58:55] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[00:59:16] <pyzozord> ok seems we've run out of irc :P
[00:59:31] *** Joins: widp (~widp@2406:7400:73:7de3:ec9a:140d:44dc:4024)
[01:01:04] *** Joins: DrMax (~DrMax@node-1w7jra94757fz37lptcdb8pyu.ipv6.telus.net)
[01:01:05] *** Quits: dfoolz (~dfoolz@static.114.137.9.176.clients.your-server.de) (Ping timeout: 268 seconds)
[01:01:14] *** Joins: Tazy (~Tazmainia@2001:1c02:1701:6a00::1003)
[01:01:59] <Hash> Who checked it out?
[01:02:46] <Hash> https://gitlab.com/hashborgir/d2tools Here's the code for the app
[01:02:47] <bayaz> Title: Hash Borgir / d2tools 
[01:02:49] <Hash> It's shit.
[01:02:51] <Hash> Shit code.
[01:03:09] <Hash> Don't laugh please. I just didn't care about good code. I was just donig stuff, it was a month after my brother passed away
[01:03:15] <Hash> I was just buring my head in something. 
[01:03:24] <Hash> I'm going to refactor the whole app into a diff code base, diff lang/platform
[01:03:36] *** Quits: luckyxxl (~luckyxxl@185.209.196.175) (Quit: bye)
[01:04:11] <Hash> https://gitlab.com/hashborgir/d2tools/-/blob/master/src/D2ItemDesc.php This is the code for the Diablo 2 Item renderer
[01:04:12] <bayaz> Title: src/D2ItemDesc.php ? master ? Hash Borgir / d2tools 
[01:04:18] <Hash> I had to recode the whole d2 item system in php
[01:04:21] <Hash> Wasn't bad. Learned a lot.
[01:04:50] <Hash> the only thing I didn't care bout was bound sql with params. I jsut accept GET vars directly.
[01:05:10] <Hash> Why? It's a localhost app, never listens on anything outside, just for desktop, and every time the port is diff so 
[01:05:30] <Hash> I could actually change this code to contain parmeterized queries instead of directly putting vars in sql queries
[01:05:48] <Hash> Eitherway. Whatever. It's not a big deal. If I ever host this as a online service though
[01:05:52] <Hash> i'll have to secure it.
[01:06:25] <Hash> load up your txt files in the site, let it generate your stuff and mod your game. But that requires people trusting you. Lots of people don't release their TXT files for d2 mods
[01:06:34] <Hash> They like to keep their modding methods secret
[01:06:47] *** Inline is now known as UpTheButt
[01:07:13] *** UpTheButt is now known as Inline
[01:07:28] *** Quits: hans (uid529825@id-529825.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[01:09:54] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 252 seconds)
[01:10:00] *** Quits: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-231.dsl.bell.ca) (Quit: Client closed)
[01:11:10] *** Joins: nullenvk (~nullenvk@37.30.40.248.nat.umts.dynamic.t-mobile.pl)
[01:12:05] <junebug> Anyone else hate reading other people's code?
[01:12:23] <Decker> depends on the code
[01:12:35] <Decker> and who wrote it
[01:12:41] <Decker> how it was written
[01:12:51] *** Joins: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-231.dsl.bell.ca)
[01:13:25] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 268 seconds)
[01:14:12] <sonny> How do you know a number is negative in 2s complement?
[01:14:23] <Decker> MSB is on
[01:14:30] <Decker> same as 1's
[01:15:01] <sonny> right sweet
[01:15:27] <sonny> I am implementing less than and it's way easier than I thought
[01:15:44] *** Quits: user51 (~user51@77.124.35.94) (Quit: leaving)
[01:16:58] <sonny> dunno how you would do it without knowing the number representation though ...
[01:18:18] *** Quits: kodah (~kodah@user/kodah) (Quit: kodah)
[01:18:56] <Decker> whether signed or unsigned?
[01:19:03] <Decker> number of bits the type has?
[01:19:12] <Decker> uint64_t vs uint8_t?
[01:19:19] <sonny> how to implement x < y
[01:19:22] <Decker> (err int I guess since you said negative)
[01:19:44] <sonny> in my solution x and y are signed
[01:19:56] <Decker> if x-y < 0
[01:20:04] *** Joins: kodah (~kodah@user/kodah)
[01:20:06] <sonny> I can't use <
[01:20:16] <Decker> if x-y & 0x8000_0000
[01:20:25] <sonny> yep
[01:20:43] <sonny> but what if you didn't have & and company?
[01:21:12] <Decker> if (x-y >>1) / 0x4000_0000 >= 1
[01:21:23] <sonny> also why 8 not F?
[01:21:38] <Decker> *shrug* x-y sets borrow in most cpus... so just jump borrow
[01:21:49] <Decker> F is a bunch of bits you only care about the top one
[01:21:57] <sonny> oh true
[01:22:06] <sonny> F was just the first thing I thought of
[01:22:35] <Decker> (x-y)>>31 (unsigned shift)
[01:22:46] *** Joins: Tech_8 (~Tech_8@24.51.61.131)
[01:23:20] <sonny> what I mean is you don't get bit operators, is there an algebraic way?
[01:23:35] *** Quits: the_lanetly_052 (~the_lanet@185.30.90.223) (Ping timeout: 256 seconds)
[01:23:36] <Decker> well unsigned div 
[01:23:39] <epony> what are you trying to do?
[01:23:44] <sonny> define <
[01:23:48] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (Ping timeout: 240 seconds)
[01:23:58] <Decker> using a turing incomplete system apparently :)
[01:24:19] <sonny> no, just a symbolic one
[01:24:21] <epony> you have an CPU instruction for that
[01:24:26] <sonny> I guess you'd have to convert it
[01:24:34] <sonny> number representation is a simple way to do it
[01:24:52] <epony> earlier CPUs did comparisons discretely
[01:25:05] <Decker> and and or are natural binary operations
[01:25:06] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[01:25:10] <sonny> epony I'm just doing things like this for practice
[01:25:13] <Decker> so you get those before you get any arithmatic
[01:25:24] <sonny> yeah, that's true
[01:25:36] *** Quits: junebug (~junebug@2600:1700:3db0:2540:2a86:2c25:ab75:186d) (Quit: Leaving)
[01:25:37] <epony> the typical activity you do is "add"
[01:25:47] <epony> and check for overflow
[01:25:48] <Decker> which is or
[01:25:48] *** Quits: widp (~widp@2406:7400:73:7de3:ec9a:140d:44dc:4024) (Ping timeout: 240 seconds)
[01:25:51] <Decker> with carry
[01:26:17] <Decker> addition is 'or' multiplcation is 'and'
[01:26:27] *** Joins: widp (~widp@124.123.106.87)
[01:26:39] <Decker> at a bit level... gets compilicated with bit fields
[01:26:43] <Decker> (sets of bits)
[01:26:51] <epony> two's compliment is for signedness representation to improve performance by using addition instead
[01:27:07] <epony> you don't "do it like that"
[01:27:16] <epony> it's in CPU functionality
[01:27:19] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[01:27:31] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[01:27:33] <epony> because it's fast and efficient to NOT do it discretely
[01:27:45] <sonny> some other stuff I was wondering about <https://bpa.st/X7MQ>
[01:27:56] <epony> unless you're modelling a CPU in software to learn two's compliment
[01:28:10] <Decker> that floor only works for >0
[01:28:17] <sonny> oh darn
[01:28:23] <epony> which is a waste of time (emulating CPUs in list processing languages)
[01:29:18] <sonny> Decker is the _ in C or just C++?
[01:29:29] <Decker> _?
[01:29:34] *** Joins: mnlwldr (~mnlwldr@user/mnlwldr)
[01:29:45] <Decker> it's a reserved symbol at the start of identifiers
[01:30:06] <sonny> ok, so Java's the one that can use it for numbers
[01:30:15] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 252 seconds)
[01:30:28] <Decker> ya, c++ is ` I don't think C supports anything... a lot of langauges actually support _ 
[01:30:37] <Decker> JS, Lua, python,...
[01:30:53] <sonny> ok cool
[01:30:56] <Decker> they used _ in c++ for units sort of thing yu can do 14_F
[01:31:00] <Decker> or something
[01:31:10] <sonny> when did c++ get units?
[01:31:16] <Decker> a while ago
[01:31:17] <sonny> I know fsharp has them
[01:31:18] <sonny> nice
[01:31:33] <sonny> makes sense since c++ is used for a lot of scientific code right?
[01:31:33] *** Joins: rickybob (~rickybob@35.143.255.39)
[01:31:34] *** Joins: rickybob2 (~rickybob@35.143.255.39)
[01:31:47] <Decker> talk about a swiss army knife :)
[01:31:57] <sonny> yeah
[01:31:57] *** Joins: Compy (~compy@user/compy)
[01:32:00] <Decker> ya probably in one sense...
[01:32:40] <epony> fortran
[01:32:45] <Decker> R
[01:32:56] *** Joins: Enitin (~Enitin@82.180.145.230)
[01:33:07] <epony> then pascal, and recently python modules from.. fortran again
[01:33:23] <sonny> I want to do more exercises integers and floats
[01:33:23] <epony> cause dynamic programming is computationally weak
[01:33:33] <epony> yeah, blas
[01:34:12] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[01:34:13] <epony> you don't use C-family and other such weak-typed languages for calculus
[01:35:09] <Decker> operator overloads help too
[01:36:02] *** Quits: Tazy (~Tazmainia@2001:1c02:1701:6a00::1003) (Ping timeout: 240 seconds)
[01:36:15] <sonny> epony I might do calculus soon tbh, what do you use instead?
[01:37:02] <epony> fortran
[01:37:08] <Decker> R :) Wolfram Cloud
[01:37:15] <Decker> mathematica
[01:37:21] <epony> matlab
[01:37:24] *** Quits: Enitin (~Enitin@82.180.145.230) (Ping timeout: 252 seconds)
[01:38:08] <sonny> ok, wolfram is neat
[01:38:32] <sonny> I've used octave more than matlab without noticing much difference
[01:38:35] <sonny> cool
[01:38:42] <nomagno> Does any programming language implement cyclic dependencies as a form of mutual recursion?
[01:39:31] <nomagno> If A() depends on B(), and B() on A(), and both only call the other in SOME logic paths, you can definitely implement that as a lowkey esoteric form of recursion
[01:39:42] <sonny> for what?
[01:40:19] <sonny> I don't get it but I'd say no anyways, if you use mutal recursion for a cycle your memory better be infinite
[01:41:00] <nomagno> A(x): if (x) then B() else y
[01:41:00] <nomagno> B(x): if(x) then A() else y
[01:41:31] <Decker> C with like #pragma once... and #ifndef I_M_INCLUED #define I_M_INCLUDE ... #endif; NodeJS does it fine... though NPM messes it up
[01:41:44] <nomagno> Ya get me? This is actually valid code, in some circumstances. Of course it's not a tremendously useful feature, but this isn't #industrialdev
[01:41:46] <biberao> wow telegram was blocked in brazil
[01:41:57] <bjs> nomagno: like mutually recursive functions?
[01:42:11] <bjs> those are fairly common aren't they?
[01:42:16] <Decker> easier if they're both satellites that use a common core... so you have A(X): C(B,X), B(X): C(A,X) or something
[01:42:25] <nomagno> bjs: Yeah, mutually recursive functions but in separate modules
[01:42:52] *** Joins: Tazy (~Tazmainia@2001:1c02:1701:6a00::1003)
[01:42:57] <nomagno> Or libraries, or whatever
[01:42:59] <Decker> can happen with plugin modules that use features from other plugins
[01:43:30] <sonny> cycles aren't allowed in golang iirc
[01:43:37] <Decker> like a spectrograph visualizer that uses another plugin's spectral function, which in turn calls back to the owner
[01:45:00] *** Joins: filename (~kilitary@188.242.105.134)
[01:45:12] <Decker> (plugins being libraries that you load at runtime rather than linktime) basially no language supports circular linking very well... it's a chicken and egg issue - if yu don't have B built, how can you link A and vice versa
[01:45:30] *** Quits: Tech_8 (~Tech_8@24.51.61.131) (Quit: Client closed)
[01:46:40] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[01:47:16] *** Quits: teut (~teut@122.161.89.92) (Quit: Client closed)
[01:47:17] <berndj> what's the "smallest" standard C header you can include to get a definition for NULL?
[01:47:27] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[01:47:43] *** Joins: wildo (~lain6141@119.224.72.222)
[01:47:44] <Decker> stdlib.h I thikn has it?
[01:47:59] *** Joins: Pook (~Pook@2001:8a0:f996:1400:24c2:b86e:5831:1490)
[01:48:00] <berndj> stdlib.h is a bit "big" though
[01:48:15] <berndj> is stddef.h guaranteed to define it?
[01:48:16] <Decker> #ifndef NULL #define NULL ((void*)0) :)
[01:48:28] <Decker> yes the void* is superfluous (only it's not)
[01:48:37] <Decker> probably
[01:48:51] <pulse> #define NULL 42
[01:48:54] <berndj> yeah i'm just being pedantic. my personal preference in my own projects is to just "return 0;" if a function returns a pointer
[01:49:02] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 240 seconds)
[01:49:31] <nomagno> Always include stdint, limits, and stddef
[01:49:36] <nomagno> That's my rule of thumb, anyways
[01:49:56] *** Joins: t3nj1n (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net)
[01:50:38] <nomagno> I have a header "req.h" for it along with some compile-time checks in most projects even
[01:51:06] *** Quits: molson (~molson@172-103-21-94-dynamic.midco.net) (Remote host closed the connection)
[01:51:33] *** Quits: t3nj1n (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net) (Remote host closed the connection)
[01:53:02] *** Joins: molson (~molson@172-103-21-94-dynamic.midco.net)
[01:53:05] *** Joins: trevors (~trevors@user/trevors)
[01:55:22] *** Joins: Gallomimia (~Gallomimi@node-1w7jra2a2gqpxq1994gmdeskn.ipv6.telus.net)
[01:55:35] *** Quits: knusbaum (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net) (Quit: ZNC 1.8.2 - https://znc.in)
[01:56:38] *** Quits: molson (~molson@172-103-21-94-dynamic.midco.net) (Remote host closed the connection)
[01:57:02] *** Joins: Enitin (~Enitin@82.180.145.226)
[01:57:12] *** Joins: jamea (~jamea@189.237.47.249)
[01:58:12] *** Quits: palasso (~palasso@user/palasso) (Quit: I am not a quitter!)
[01:58:29] *** Quits: vitali64 (~vitali64@user/vitali64) (Quit: Lost terminal)
[01:58:41] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[01:59:24] *** Quits: pmercado (~pmercado@186.107.37.71) (Ping timeout: 252 seconds)
[02:03:38] *** Quits: newwebdev132 (~newwebdev@78.135.92.119) (Quit: Leaving)
[02:04:38] *** Joins: knusbaum (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net)
[02:05:08] <ProfSimm> Decker: I never heard your take on REST (or alternatives) I think
[02:09:21] *** Quits: knusbaum (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net) (Client Quit)
[02:10:00] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 250 seconds)
[02:10:20] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[02:10:32] *** Joins: Enitin (~Enitin@82.102.22.86)
[02:10:59] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Quit: PROTO-IRC v0.73a (C) 1988 NetSoft - Built on 11-13-1988 on AT&T System V)
[02:11:07] <beaky> nice i like rest it is the most successful distributed architectural paradigm
[02:12:06] <ProfSimm> beaky: it's the most redefined architectural paradigm
[02:12:22] <ProfSimm> beaky: it's like UUID, every definition of it is unique in the universe
[02:13:25] *** Joins: knusbaum (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net)
[02:14:12] *** Joins: jamea22 (~jamea@189.237.47.249)
[02:14:46] *** Quits: jamea (~jamea@189.237.47.249) (Ping timeout: 250 seconds)
[02:16:20] *** Joins: Iolo (~iolo@user/Iolo)
[02:18:32] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 240 seconds)
[02:19:41] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[02:21:40] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[02:24:17] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[02:24:20] <pyzozord> isn't rest just "use http methods"
[02:24:49] <ProfSimm> pyzozord: to someone, probably
[02:24:55] <pyzozord> I do rest every day and I don't even know what it is
[02:25:05] <ProfSimm> pyzozord: that's the correct answer.
[02:25:18] <pyzozord> I know it's api, it's stateless and it's http
[02:26:16] <ProfSimm> pyzozord: The REST that can be named is not the Unchanging REST. The unnamable REST is that from which Heaven and Earth derived, leaving itself unchanged. Thinking of it as having a name, or a definition, let it be called the Mother of all APIs.
[02:26:36] <ProfSimm> pyzozord: that was paraphrasing Tao Te Ching :P
[02:27:28] <pyzozord> the rest that can be named is not the eternal rest
[02:27:36] <pyzozord> there is no rest for the wicked
[02:27:58] <ProfSimm> Aye
[02:28:33] *** Joins: Pickchea (~private@user/pickchea)
[02:28:44] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:29:17] <pyzozord> I probably told you but I ended up buying a physical copy of tao te ching
[02:29:50] <pyzozord> it's on my bookshelf, I keep meaning to start reading it and somehow i keep getting distracted by other things
[02:29:53] *** Quits: jamea22 (~jamea@189.237.47.249) (Ping timeout: 256 seconds)
[02:31:38] <pulse> i like how google products just work everywhere
[02:32:00] <pulse> Keep is pretty useful
[02:32:15] <pulse> get idea outside -> write it down on phone -> check it out later on computer
[02:32:25] <pyzozord> anyway, must go defragment brain
[02:32:34] <pyzozord> cya
[02:32:57] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[02:33:19] *** Quits: pizdets_ (~pizdets@183.182.111.218) (Ping timeout: 265 seconds)
[02:34:01] *** Joins: pizdets (~pizdets@183.182.111.32)
[02:34:44] <ProfSimm> pyzozord: very nice
[02:34:45] *** Joins: junebug (~junebug@2600:1700:3db0:2540:6aab:65bb:e5be:fcaf)
[02:34:51] *** Quits: knusbaum (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net) (Quit: ZNC 1.8.2 - https://znc.in)
[02:35:33] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 256 seconds)
[02:36:09] *** Quits: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-231.dsl.bell.ca) (Quit: Client closed)
[02:36:15] *** Joins: Enitin (~Enitin@82.180.145.226)
[02:36:28] <ProfSimm> Do we have an example of a data structure that is sequence of any of those:  1) key-values /key pointing to value/  2) just values /order is relevant/ 3) just keys not pointing to values /like a set/
[02:36:38] <ProfSimm> Do we have something that combines all of those in one thing
[02:36:45] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[02:36:55] *** Joins: knusbaum (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net)
[02:37:14] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[02:37:49] *** Quits: mnlwldr (~mnlwldr@user/mnlwldr) (Quit: Before calling me, ask yourself ... Is it textable?)
[02:38:56] <PlanckWalk> A sequence of maps, lists, and sets?
[02:39:02] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Ping timeout: 250 seconds)
[02:39:56] *** Quits: Tazy (~Tazmainia@2001:1c02:1701:6a00::1003) (Ping timeout: 245 seconds)
[02:40:03] <PlanckWalk> I don't think there is a special name for such a thing
[02:40:18] <PlanckWalk> You're free to give it one of course, if you think it deserves one.
[02:41:29] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-2420-4733-60a5-9d17.res6.spectrum.com)
[02:43:08] *** Quits: wilz (~wilz@modemcable036.177-131-66.mc.videotron.ca) (Read error: Connection reset by peer)
[02:44:26] *** Joins: Tazy (~Tazmainia@83.80.169.186)
[02:45:35] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:46:00] *** Quits: Akuli (~Akuli@87-94-109-66.bb.dnainternet.fi) (Quit: Akuli)
[02:50:45] *** Quits: filename (~kilitary@188.242.105.134) (Read error: Connection reset by peer)
[02:53:19] *** Joins: k8yun__ (~k8yun@user/k8yun)
[02:55:42] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d4f3:e167:a65d:25ad)
[02:56:19] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-2420-4733-60a5-9d17.res6.spectrum.com) (Quit: Leaving)
[02:57:02] *** Quits: k8yun_ (~k8yun@user/k8yun) (Ping timeout: 240 seconds)
[02:57:20] *** Quits: k8yun__ (~k8yun@user/k8yun) (Remote host closed the connection)
[02:57:45] *** Joins: k8yun__ (~k8yun@user/k8yun)
[03:00:55] *** Quits: flaqologist (~F@32.211.211.39) (Remote host closed the connection)
[03:01:13] <kodah> pulse: that's not unique to google products
[03:01:14] *** Joins: k8yun_ (~k8yun@user/k8yun)
[03:02:39] <pulse> kodah, who else does that, apple i guess
[03:02:51] <pulse> i mean i know many apps have cross-device interfaces
[03:02:55] <pulse> but the ecosystem is nice
[03:02:55] <ProfSimm> PlanckWalk: I mean a singl structure where you can have values with no keys, keys with no values or keys pointing to values
[03:02:59] <kodah> pulse: eh, any website that stores data centrally?
[03:03:09] <pulse> i suppose
[03:03:33] *** Quits: gamara (~gamara@cpe9050cade20e3-cm9050cade20e0.cpe.net.cable.rogers.com) (Ping timeout: 256 seconds)
[03:04:12] <kodah> before there were apps, PWAs were championed to do exactly what you described
[03:04:36] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 240 seconds)
[03:04:40] <kodah> The fundamentally same app should be accessible across mediums
[03:05:08] <pulse> i guess what i was impressed by is that it simply worked by just accessing the website
[03:05:18] <pulse> no login, no anything. guess due to chrome
[03:05:28] <pulse> i appreciate software that simply works
[03:05:35] *** Quits: k8yun__ (~k8yun@user/k8yun) (Ping timeout: 256 seconds)
[03:06:51] *** Joins: ankylosaurus (~manti_ray@2607:fb90:80c7:ba80:c695:306f:ef0d:1cd5)
[03:07:15] *** Quits: justanotheruser (~justanoth@gateway/tor-sasl/justanotheruser) (Ping timeout: 240 seconds)
[03:07:30] <ankylosaurus> Is there lua framework cms?
[03:07:41] *** Quits: k8yun_ (~k8yun@user/k8yun) (Read error: Connection reset by peer)
[03:08:11] *** Joins: Tech_8 (~Tech_8@24.51.61.131)
[03:08:11] *** Joins: k8yun_ (~k8yun@user/k8yun)
[03:11:23] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[03:12:03] *** Parts: nullenvk (~nullenvk@37.30.40.248.nat.umts.dynamic.t-mobile.pl) ()
[03:12:14] *** Joins: trevors (~trevors@user/trevors)
[03:15:28] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[03:16:51] <kee> ProfSimm: Map and set are easy.
[03:17:06] <kee> Define a set as a map to void.
[03:17:39] *** Quits: wedr (~tom_mai78@pool-108-20-128-8.bstnma.fios.verizon.net) (Read error: Connection reset by peer)
[03:17:45] <kee> "Just values" can be a map from integers to values.
[03:18:21] *** Joins: molson (~molson@172-103-21-94-dynamic.midco.net)
[03:20:26] *** Quits: caramel (~caramel@user/caramel) (Read error: Connection reset by peer)
[03:21:14] *** Joins: Compy_ (~compy@user/compy)
[03:21:39] *** Joins: wilz (~wilz@modemcable036.177-131-66.mc.videotron.ca)
[03:22:40] *** Quits: molson (~molson@172-103-21-94-dynamic.midco.net) (Remote host closed the connection)
[03:23:30] *** Joins: molson (~molson@172-103-21-94-dynamic.midco.net)
[03:23:40] <smallville7123> what does   target.pointerIdBits &= ~pointerIdBits;    do
[03:24:04] <PlanckWalk> ProfSimm: The question is what operations are you defining on that data structure, and to lesser degree what performance guarantees you want on it.
[03:24:08] <kee> smallville7123: Does pointerIdBits equal target.pointerIdBits?
[03:24:32] *** Quits: Compy (~compy@user/compy) (Ping timeout: 240 seconds)
[03:24:41] *** Compy_ is now known as Compy
[03:24:45] <ProfSimm> PlanckWalk: I want it essentially to be a record, where the keys are possibly a second record, tied to it, i don't know
[03:24:46] <PlanckWalk> smallville7123: Any bits in the RHS that are 1 are cleared in the LHS.
[03:25:02] <smallville7123> PlanckWalk: ok :)
[03:25:23] <smallville7123> what would happen if     -1 is the value of pointerIdBits
[03:25:34] <smallville7123> would ALL the bits be removed?
[03:25:36] <kee> smallville7123: Then it sets target.pointerIdBits to 0.
[03:25:45] <smallville7123> ok :)
[03:25:46] <PlanckWalk> Then (assuming 2's complement representation) all bits are cleared.
[03:25:48] <smallville7123> thanks
[03:25:53] <kee> That also happens if pointerIdBits == target.pointerIdBits.
[03:27:02] <smallville7123> :)
[03:27:03] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[03:27:48] *** Quits: junebug (~junebug@2600:1700:3db0:2540:6aab:65bb:e5be:fcaf) (Ping timeout: 240 seconds)
[03:30:58] <smallville7123> is     final int newPointerIdBits = oldPointerIdBits & desiredPointerIdBits;    the same as      final int newPointerIdBits = desiredPointerIdBits;
[03:31:35] *** Joins: junebug (~junebug@2600:1700:3db0:2540:ad52:119c:1f30:a58)
[03:31:42] *** Quits: molson (~molson@172-103-21-94-dynamic.midco.net) (Remote host closed the connection)
[03:32:26] *** Parts: norayr (376bc34bfc@37.252.78.253) (Disconnected: closed)
[03:32:58] *** Joins: norayr (376bc34bfc@37.252.78.253)
[03:33:16] <PlanckWalk> No
[03:33:27] *** Quits: duuude (~user@user/duuude) (Ping timeout: 252 seconds)
[03:33:31] <smallville7123> also what would     pointerIdBits |= idBitsToAssign;      be the same as    pointerIdBits = idBitsToAssign;    if       idBitsToAssign;     is     -1
[03:33:46] <PlanckWalk> I suggest you read up on what these operations actually mean.
[03:34:44] <PlanckWalk> You basically asked  "is z = x & y  the same as  z = y?"
[03:34:56] <PlanckWalk> If it was, why on Earth would the oepration "&" even exist?
[03:36:05] <PlanckWalk> But at least yes,  pointerIdBits |= -1  has the same effect as  pointerIdBits = -1.
[03:36:41] *** Quits: wilz (~wilz@modemcable036.177-131-66.mc.videotron.ca) (Quit: bbl)
[03:36:45] *** Quits: Zeturic (~Orimendix@50.26.218.162) (Ping timeout: 252 seconds)
[03:37:11] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[03:37:48] <smallville7123> welp https://bitwisecmd.com/ doesnt help :(
[03:37:49] <bayaz> Title: BitwiseCmd 
[03:38:26] <kee> smallville7123: You can think of the bitwise operations as rubbish addition and rubbish multiplication.
[03:38:37] <kee> | is like addition, except you don't bother to carry.
[03:38:40] <smallville7123> "¬Ø\_(„ÉÑ)_/¬Ø Sorry, i don‚Ä≤t know what (1 & 5) | 4 is"
[03:39:00] <kee> 5?
[03:39:35] <kee> Any old REPL (e.g. Python's) will answer these questions for you.
[03:39:40] *** Joins: wauterboi (~wauterboi@185.65.135.233)
[03:41:41] <smallville7123> "10:06:05 PlanckWalk: But at least yes,  pointerIdBits |= -1  has the same effect as  pointerIdBits = -1."    which would set all the bits to 1, making for example, pointerIdBits |= (1 << 5) have no effect since the bit that would be set is already set
[03:41:42] <PlanckWalk> Or heck, even the browser console for Javascript
[03:41:43] <smallville7123> ?
[03:42:07] <PlanckWalk> Yes,  -1 | anything = -1
[03:42:14] <smallville7123> hmm ok
[03:42:26] <PlanckWalk> -1 & x = x
[03:42:40] <kee> 0 & x = 0
[03:42:43] <kee> 0 | x = x
[03:42:55] *** Joins: molson (~molson@172-103-21-94-dynamic.midco.net)
[03:43:30] *** Joins: ttree (~ttree0@c-24-17-16-242.hsd1.wa.comcast.net)
[03:43:32] <bjs> smallville7123: in binary -1 is all 1s (using the common twos complement representation)
[03:44:06] <oldlaptop> It would be a good idea to check whether whatever standards apply to your environment do specify two's complement.
[03:44:10] <oldlaptop> C (mildly famously) does not.
[03:44:40] <oldlaptop> (Someone will now point out that it may do so in the future, which will not change the fact that it does not now.)
[03:44:58] *** Joins: wauterboi3 (~wauterboi@185.65.135.239)
[03:45:32] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 240 seconds)
[03:45:50] *** Quits: kmh (~kmh@2a00:6020:5004:6800:4be6:856d:7108:d738) (Quit: Leaving)
[03:46:17] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[03:47:11] *** Quits: wauterboi (~wauterboi@185.65.135.233) (Ping timeout: 256 seconds)
[03:47:11] *** wauterboi3 is now known as wauterboi
[03:47:33] *** Quits: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[03:47:47] *** Quits: jaysicks (~jaysicks@178-164-134-178.pool.digikabel.hu) (Remote host closed the connection)
[03:48:05] *** Quits: Tazy (~Tazmainia@83.80.169.186) (Quit: Leaving)
[03:49:50] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[03:50:28] <smallville7123> what would A & -1   be
[03:50:32] *** Quits: monr0e (~monr0e@smtp.vixen.international) (Ping timeout: 240 seconds)
[03:51:08] <smallville7123> converting all this bitshifting into an array equivilant is confusing ;-;
[03:51:12] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) ()
[03:51:18] *** Quits: molson (~molson@172-103-21-94-dynamic.midco.net) (Remote host closed the connection)
[03:51:52] <kee> smallville7123: A & -1 is A.
[03:52:07] <kee> It's bitwise AND ‚Äì so a bit is set in the output if it's set in the left AND right arguments.
[03:53:26] <oldlaptop> It might be better to think in terms of actual bit patterns, instead of signed values, at least while you're wrapping your head around how bitwise logical operators work.
[03:54:04] *** Quits: XV8 (~XV8@c-73-148-120-152.hsd1.va.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[03:54:05] <kee> I think of -1 as syntactic sugar for (0 - 1).
[03:54:27] <kee> That works in unsigned arithmetic, too.
[03:54:29] *** Quits: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk) (Quit: Leaving)
[03:54:31] <oldlaptop> Besides worrying about whatever remaining sign-magnitude systems still exist, you probably don't want to be trying to wrap your head around bitwise operators *and* the gory details of signed integer representation all at the same time.
[03:54:47] <pulse> https://www.vice.com/en/article/dypeek/open-source-sabotage-node-ipc-wipe-russia-belraus-computers
[03:54:47] <bayaz> Title: Open Source Maintainer Sabotages Code to Wipe Russian, Belarusian Computers 
[03:54:56] <pulse> i don't like the idea of weaponizing open source :/
[03:55:10] <kee> That's not good, no.
[03:55:18] *** Joins: XV8 (~XV8@2601:5cb:c001:50::4f47)
[03:55:24] <kee> But this kind of thing does reveal holes in people's trust models.
[03:55:33] <oldlaptop> Of course it's better than weaponizing "closed" source: at least it's possible in principle to detect the attack
[03:55:45] <smallville7123> kee: ok 
[03:56:02] <smallville7123> i think imma just make a list that contains overloads for bitwise operations instead of attempting to convert this complexity
[03:56:14] <kee> I expect closed source to be malicious, but I trust the people I get open source from.
[03:56:26] <oldlaptop> If some disgruntled employee of MegaSoftwareHouse Inc. decides to sneak that in there, and MegaSoftwareHouse, Inc. has better things to do than auditing, the only way anyone will ever find out about it is the hard way.
[03:56:40] *** Joins: duuude (~user@user/duuude)
[03:56:42] <oldlaptop> (If anyone found out about this npm thing the hard way I'm not aware of it)
[03:57:02] <kee> Oh, it's NPM? That's fine, then.
[03:57:26] <kee> That's the equivalent of ‚Äúpopup ad developer sabotages code to wipe‚Äù.
[03:57:31] *** Joins: resamvi (~resamvi@p5486a650.dip0.t-ipconnect.de)
[03:57:31] *** Quits: resamvi (~resamvi@p5486a650.dip0.t-ipconnect.de) (Changing host)
[03:57:31] *** Joins: resamvi (~resamvi@user/resamvi)
[03:59:08] <oldlaptop> It's /always/ npm when some random dependency three zillion "front-end engineers" didn't know they had "breaks the internet"
[04:00:50] *** Joins: kmh (~kmh@2a00:6020:5004:6800:d56f:5ec4:ddd1:e31d)
[04:00:57] <kodah> people doing performative, typically state responsible actions, with open source is going to wreck the whole open source model
[04:01:20] <oldlaptop> Or repair it.
[04:01:29] <kodah> doubtful
[04:01:56] <oldlaptop> Encouraging people to actually look at the open-source code they use seems like a good thing, to me.
[04:02:07] <kodah> companies view open source in two ways: free work or a conscription to do business jointly with another party for mutually beneficial outcomes. this upends all of that.
[04:02:11] <oldlaptop> That's work though, so maybe they'll just buy broken things from people they can sue instead.
[04:02:29] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 256 seconds)
[04:02:32] <pulse> nobody ever audits open source updates, and you know it :p
[04:02:36] *** Joins: pizdets_ (~pizdets@183.182.110.159)
[04:02:55] <oldlaptop> For what definition of "nobody"?
[04:02:57] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d4f3:e167:a65d:25ad) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[04:02:58] <kodah> pulse: that's not really true. large enterprises do and their reports get out to the masses.
[04:03:19] <kodah> it is a longtail exercise though
[04:03:24] <pulse> before or after the other 95% already updated
[04:03:41] *** Quits: pizdets (~pizdets@183.182.111.32) (Ping timeout: 245 seconds)
[04:03:41] <kodah> i'm not really sure i understand what you're saying
[04:04:04] <pulse> most maintainers are too lazy to audit updates
[04:04:07] <pulse> i know i am
[04:04:20] <kodah> well, for instance...
[04:04:25] *** Quits: jsmooth (~quassel@user/jsmooth) (Quit: jsmooth)
[04:04:50] <pulse> case in point: leftpad
[04:04:59] <Mangy_Dog> https://twitter.com/MD_Builds/status/1504978264347062276
[04:05:34] <oldlaptop> I've already put "front-end engineers" in scare quotes, I can be more direct about my opinion of npm's userbase if you like
[04:06:07] <kodah> my products all go through stages of automated evaluation. one is pretty simple and checks open CVEs for matching dependencies and versions. after that there's an environment evaluation, eg: does this thing start making external calls that we don't anticipate. the other part of this is really just security structure, things like SELinux and SecComp being configured correctly go a long way. we
[04:06:08] *** Joins: molson (~molson@172-103-21-94-dynamic.midco.net)
[04:06:09] <kodah> also have a red team that checks our software and dependencies annually.
[04:07:12] <pulse> basically what i'm trying to say... people have a certain level of trust in open-source, especially high profile open-source
[04:07:33] <pulse> if this trust is eroded we'll all be worse off
[04:07:36] <kodah> well, what little trust remained is likely defunct now, imo
[04:08:20] *** Joins: filename (~kilitary@188.242.105.134)
[04:08:30] <kodah> or open source is going to get a lot more exclusive, which could be the trajectory
[04:08:47] <oldlaptop> Query the definition of "high-profile".
[04:08:55] <zvijezda> a large organization shouldn't trust its own developers nevermind open source
[04:08:56] <pulse> idk, the people that make your webserver
[04:09:00] <oldlaptop> There are often individual reputations involved.
[04:09:04] <pulse> imagine being afraid of updating nginx
[04:09:05] <kodah> zvijezda: true as well
[04:09:45] <zvijezda> kodah, we red team on every security impacting change
[04:09:48] <pulse> it's actually scary how much damage one highly trusted open source entity can do
[04:10:11] <oldlaptop> Part of the problem with how npm-land works is that three zillion "engineers" can and do end up depending on some three-line "module" written by the dog in that cartoon.
[04:10:14] <kodah> zvijezda: i mean, that's a big undertaking so good on you
[04:10:28] <zvijezda> kodah, it's expensive, but it's also medical stuff
[04:10:33] <zvijezda> kodah, so yeah
[04:10:42] <kodah> we're not nearly that diligent, but i think we do a good job of mixing hard-manual-labor with automated tools and processes as well as protections
[04:10:46] <kodah> ah
[04:10:52] *** Joins: trevors (~trevors@user/trevors)
[04:11:08] <pulse> imagine some popular open source software decides that it would be a good idea to erase the user's entire disk
[04:11:14] <oldlaptop> Trusting the developers of nginx, or apache, or linux is a different thing from trusting every one of a zillion people who maintain javascript "libraries" that do trivial things
[04:11:15] <pulse> how long until people would catch on
[04:11:27] <kodah> oldlaptop: it's really not
[04:11:39] <pulse> oldlaptop, it's kinda not, yeah
[04:11:42] <kodah> you shouldn't trust nginx, apache, or the linux kernel development team
[04:11:42] <pulse> it's still an entity you trust
[04:11:55] <pikapika> Smartphones are a scam
[04:11:55] <pulse> but i highly doubt a lot of people audit that next nginx update
[04:11:56] <zvijezda> oldlaptop, yeah the apache foundation, the maintainers of log4j
[04:11:58] <zvijezda> oldlaptop, oh wait
[04:11:59] <oldlaptop> kodah: There are /fewer/ people involved, and they have more reputational risk.
[04:12:13] <oldlaptop> zvijezda: Oh, everyone makes mistakes. Everyone.
[04:12:19] <pulse> someone could hack them, in which case reputation doesn't matter
[04:12:21] <oldlaptop> We are (or were) discussing deliberate malice.
[04:12:27] <pikapika> Another problem is that javascript ecosystem is excessively fast paced
[04:12:28] <kodah> oldlaptop: linux and apache are both open contribution. nginx is the only one that limits contributions.
[04:12:39] <pikapika> its easy to slip in anything you want into the frantic pace there
[04:13:09] <kodah> oldlaptop: also, more recently, the kernel development team had to respond to a bad actor at a university deliberately putting security bugs into the kernel (sometimes _back_ into)
[04:13:35] <oldlaptop> "open contribution" generally does not mean "anyone can just slap stuff in there"
[04:13:43] <pulse> when i update software, i just check the update log, i never audit code. i imagine most users are the same
[04:13:45] <zvijezda> oldlaptop, my organization has its own versions of nginx and linux though for these reasons and they maintain their own patching system
[04:13:47] <kodah> trust isn't a compliment to someone, it's a strategy, and you should not trust by default
[04:13:55] <pulse> furthermore i imagine even enterprises skip audits on the regular
[04:14:08] <pulse> it's hard to audit every single piece of code you use every time there's an update
[04:14:08] <oldlaptop> kodah: I would agree with that.
[04:14:14] <zvijezda> oldlaptop, but my organization also has infinite money
[04:14:19] <pulse> kodah, it's not practical
[04:14:26] *** Joins: resamvi (~resamvi@p200300f617179a00f4b7e265eddcb3e3.dip0.t-ipconnect.de)
[04:14:26] <kodah> pulse: what's not practical?
[04:14:26] *** Quits: resamvi (~resamvi@p200300f617179a00f4b7e265eddcb3e3.dip0.t-ipconnect.de) (Changing host)
[04:14:26] *** Joins: resamvi (~resamvi@user/resamvi)
[04:14:31] <pulse> you'd have to audit every single line of code that runs on your computer
[04:14:35] <pulse> no-one has time for that
[04:14:38] <oldlaptop> I'm arguing it's an easier sell to move away from that default for a group such as "the linux developers" than it is for a group such as "the maintainers of all the stuff on npm".
[04:14:39] <kodah> huh?
[04:14:54] *** Quits: filename (~kilitary@188.242.105.134) (Read error: Connection reset by peer)
[04:15:01] <kodah> pulse: that's not at all what zero-trust entails
[04:15:11] *** Joins: TheNymh (~niamh@nat-128-84-124-0-775.cit.cornell.edu)
[04:15:17] *** Quits: k8yun_ (~k8yun@user/k8yun) (Ping timeout: 256 seconds)
[04:15:26] <kodah> plus, PR reviews rarely catch security bugs - as evidenced by the kernel team having to go patch what those bad actors did
[04:15:27] <pulse> what, it's nonzero trust if you run your computer in any capacity tbh
[04:15:29] <oldlaptop> And further that the behavior of members of the latter group ought not, rationally speaking, affect evaluations of the former.
[04:15:34] <pulse> well, it's nonzero..*
[04:15:48] <kodah> pulse: again, not the case
[04:16:10] <pulse> kodah, do you audit your audio drivers? :p
[04:16:24] <pulse> if not, then by definition you trust whoever wrote them
[04:16:24] *** Quits: Gallomimia (~Gallomimi@node-1w7jra2a2gqpxq1994gmdeskn.ipv6.telus.net) (Remote host closed the connection)
[04:16:41] <kodah> SELinux and SecComp go a long way in protecting a system. using application kernels is another, though performance intensive, addition to your security profile.
[04:16:57] <kodah> pulse: that's a little outside the scope of our discussion here
[04:17:30] <zvijezda> ah selinux
[04:17:30] <TheNymh> hall0o!
[04:17:32] <TheNymh> im niamh
[04:17:39] <zvijezda> I used to work on rsbac 20+ years ago
[04:17:46] <kodah> wow
[04:17:47] *** Joins: Gallomimia (~Gallomimi@node-1w7jra2a2gqpynxetn4zvj93a.ipv6.telus.net)
[04:17:48] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) (Ping timeout: 268 seconds)
[04:18:02] <pulse> kodah, if you use Linux you trust the developers too. nobody has ever audited all of the code
[04:18:07] <pulse> it's too much
[04:18:12] <pulse> you have to trust them
[04:18:14] <kodah> pulse: no, i don't
[04:18:32] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 240 seconds)
[04:18:34] <pulse> then you have to trust the people who did audit the code :p
[04:18:44] <kodah> pulse: i put their software through a hell of a rung of testing before it even makes it into our e2e environments and i choke it with their security features
[04:18:47] *** Quits: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro) (Remote host closed the connection)
[04:19:00] <Rounin> pulse: I mean... If you run JavaScript, that's a lot of code right there
[04:19:01] <zvijezda> pulse, he can place his linux containers in a place where he controls the inputs and outputs to the machine in a strict way
[04:19:15] *** Quits: xff0x (~xff0x@i121-117-52-147.s41.a013.ap.plala.or.jp) (Ping timeout: 256 seconds)
[04:19:21] *** Joins: eddof13 (~eddof13@2806:102e:12:64:f838:6484:5e24:bd9f)
[04:19:21] <pulse> zvijezda, but then he has to trust the host of that container, and whatever code that runs
[04:19:37] *** Quits: rickybob2 (~rickybob@35.143.255.39) (Ping timeout: 240 seconds)
[04:19:37] *** Quits: rickybob (~rickybob@35.143.255.39) (Ping timeout: 240 seconds)
[04:19:49] <kodah> zvijezda: funny, i'd never heard of rsbac before until i had to write a whitepaper about moving our services (and platform) into containers. part of the paper was the history of linux security.
[04:20:12] <zvijezda> kodah, yeah, built a network security device that heavily leveraged it
[04:20:32] *** Quits: eddof13 (~eddof13@2806:102e:12:64:f838:6484:5e24:bd9f) (Client Quit)
[04:20:45] <kodah> pulse: i don't need to trust the host. SELinux takes care of interception and SecComp takes care of a whitelist of calls. Those criteria, I build myself.
[04:21:31] <kodah> selinux + seccomp + application kernel + containers is a decent stand in for a sandbox
[04:21:41] <kodah> make the OS headless as well and you're in a decent place
[04:22:11] <zvijezda> network access controls and ingress/egress monitoring ontop of it
[04:22:24] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Remote host closed the connection)
[04:22:38] <smallville7123> A == -1 if ALL bits are 1, right?
[04:23:20] *** Quits: knusbaum (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net) (Quit: ZNC 1.8.2 - https://znc.in)
[04:23:25] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[04:23:33] <kodah> zvijezda: agreed, platform level telemetry and policy is also a critical component
[04:24:01] <kodah> all that still does need to be reviewed, i'd say quarterly or semi-quarterly, but it's more efficient than reading and understanding every LOC
[04:24:32] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[04:25:27] *** Quits: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de) (Remote host closed the connection)
[04:26:45] *** Joins: knusbaum (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net)
[04:27:11] *** Quits: kmh (~kmh@2a00:6020:5004:6800:d56f:5ec4:ddd1:e31d) (Remote host closed the connection)
[04:27:14] *** Quits: junebug (~junebug@2600:1700:3db0:2540:ad52:119c:1f30:a58) (Quit: Leaving)
[04:27:22] *** Joins: kmh (~kmh@2a00:6020:5004:6800:d56f:5ec4:ddd1:e31d)
[04:28:43] *** Joins: filename (~kilitary@188.242.105.134)
[04:30:21] *** Joins: resamvi (~resamvi@p200300f617179a00f4b7e265eddcb3e3.dip0.t-ipconnect.de)
[04:30:21] *** Quits: resamvi (~resamvi@p200300f617179a00f4b7e265eddcb3e3.dip0.t-ipconnect.de) (Changing host)
[04:30:21] *** Joins: resamvi (~resamvi@user/resamvi)
[04:31:21] *** Joins: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp)
[04:33:55] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[04:34:12] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[04:34:44] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 250 seconds)
[04:35:19] *** Joins: eddof13 (~eddof13@2806:102e:12:64:f838:6484:5e24:bd9f)
[04:36:17] *** Joins: occ (~occ@user/occ)
[04:38:25] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[04:39:22] *** Quits: biberao (~m@user/biberao) (Quit: WeeChat 2.3)
[04:39:54] *** Joins: fe23 (~fe23@2409:8a34:466:6010:b43d:b4dc:73d0:6634)
[04:40:51] *** Joins: codedChaos (~William@static-24-233-200-9.md.cpe.atlanticbb.net)
[04:41:04] *** Joins: ChromaCat248 (~ChromaCat@user/chromacat248)
[04:41:16] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Quit: CodePoint struts into the sunset on the beach.)
[04:43:10] *** Joins: relmnight[m] (~relmnight@2001:470:69fc:105::f982)
[04:43:18] *** Quits: duuude (~user@user/duuude) (Ping timeout: 252 seconds)
[04:43:48] *** Quits: Tech_8 (~Tech_8@24.51.61.131) (Quit: Client closed)
[04:46:44] *** Joins: resamvi (~resamvi@p200300f617179a00f4b7e265eddcb3e3.dip0.t-ipconnect.de)
[04:46:44] *** Quits: resamvi (~resamvi@p200300f617179a00f4b7e265eddcb3e3.dip0.t-ipconnect.de) (Changing host)
[04:46:44] *** Joins: resamvi (~resamvi@user/resamvi)
[04:49:02] *** Quits: ChromaCat248 (~ChromaCat@user/chromacat248) (Quit: Leaving)
[04:50:17] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:50:28] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[04:55:47] *** Joins: DangerWabbit (~DangerWab@103.219.20.224)
[04:56:02] *** Joins: hjgj (~hjgj@46.235.96.168)
[04:56:36] *** Quits: Natch (~natch@c-67bae255.014-297-73746f25.bbcust.telenor.se) (Ping timeout: 240 seconds)
[04:57:47] *** Quits: codedChaos (~William@static-24-233-200-9.md.cpe.atlanticbb.net) (Quit: Leaving)
[04:58:18] *** Joins: jaysicks (~jaysicks@178-164-134-178.pool.digikabel.hu)
[04:58:27] *** Quits: hjgj (~hjgj@46.235.96.168) (Client Quit)
[05:01:59] *** Quits: EtherNet (~ethernet@user/ethernet) (Ping timeout: 256 seconds)
[05:03:17] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[05:03:55] *** Quits: death916 (~death916@c-73-220-87-102.hsd1.ca.comcast.net) (Changing host)
[05:03:55] *** Joins: death916 (~death916@user/death916)
[05:05:27] *** Quits: Iolo (~iolo@user/Iolo) (Quit: Leaving)
[05:06:04] *** Quits: pulse (~pulse@user/pulse) (Quit: Join us at https://indiedevs.net/)
[05:06:13] *** Quits: jaysicks (~jaysicks@178-164-134-178.pool.digikabel.hu) (Remote host closed the connection)
[05:11:38] *** Joins: Zeturic (~Orimendix@50.26.218.162)
[05:12:32] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Ping timeout: 240 seconds)
[05:12:41] *** Joins: namkeleser (~namkelese@101.175.155.55)
[05:16:37] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[05:16:58] *** Quits: itsalexjones (~itsalexjo@82.4.99.241) (Read error: Connection reset by peer)
[05:18:12] *** Quits: Psybur (~Psybur@mobile-166-171-56-243.mycingular.net) (Remote host closed the connection)
[05:18:47] <namkeleser> https://pastebin.com/Jbmwajpg anyone spot any obvious vulnerabilities in my code?
[05:23:38] <InPhase> namkeleser: Well you have a weird flaw in your regex.  /^http.+\/\/.*(github|gitlab|bitbucket)/ for example matches http://badpeople.com/foo/bar//github
[05:26:51] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[05:29:20] *** Joins: xff0x (~xff0x@i121-117-52-147.s41.a013.ap.plala.or.jp)
[05:31:11] <namkeleser> InPhase is that local file inclusion?
[05:31:28] <namkeleser> ../../../file
[05:33:02] *** Joins: filename (~kilitary@82.148.25.66)
[05:36:49] <InPhase> Doesn't appear to match that.
[05:37:37] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[05:38:04] *** Joins: CaCode (~CaCode@user/cacode)
[05:38:30] <InPhase> But I figure if you're going to try to restrict to those sites for some purpose (meaning that's untrusted input), then you should probably make sure you succeed at it.
[05:39:57] <InPhase> e.g., something like:  /^https?:\/\/[^\/\.]*(github|gitlab|bitbucket)/
[05:40:59] <InPhase> Although you probably need to put the termination too.  That also permits github.badpeople.com
[05:41:31] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-2420-4733-60a5-9d17.res6.spectrum.com)
[05:41:48] <InPhase> e.g., something like:  /^https?:\/\/[^\/\.]*(github\.com|gitlab\.com|bitbucket\.org)\//
[05:42:49] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Quit: WeeChat 3.4)
[05:46:42] *** Quits: DangerWabbit (~DangerWab@103.219.20.224) (Remote host closed the connection)
[05:47:46] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[05:48:10] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[05:49:11] *** Joins: _filename (~kilitary@188.242.105.134)
[05:49:12] *** Quits: snake (~snake@user/snake) (Quit: Leaving)
[05:49:49] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 240 seconds)
[05:50:45] *** Joins: arch-angel (~arch-ange@user/arch-angel)
[05:51:35] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[05:51:52] *** Quits: filename (~kilitary@82.148.25.66) (Ping timeout: 250 seconds)
[05:51:59] *** _filename is now known as filename
[05:52:46] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4.1)
[05:56:28] *** Joins: Vesryn (~vesryn@user/vesryn)
[05:56:47] *** Joins: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net)
[05:58:13] *** Quits: filename (~kilitary@188.242.105.134) (Read error: Connection reset by peer)
[05:59:22] *** Joins: hoochmonger (~hoochmong@user/hoochmonger)
[05:59:40] *** Quits: wauterboi (~wauterboi@185.65.135.239) (Ping timeout: 250 seconds)
[06:00:02] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[06:00:16] *** Quits: Pook (~Pook@2001:8a0:f996:1400:24c2:b86e:5831:1490) (Quit: Leaving)
[06:01:09] *** Joins: filename (~kilitary@188.242.105.134)
[06:02:52] *** Joins: resamvi (~resamvi@p200300f617179a00f4b7e265eddcb3e3.dip0.t-ipconnect.de)
[06:02:52] *** Quits: resamvi (~resamvi@p200300f617179a00f4b7e265eddcb3e3.dip0.t-ipconnect.de) (Changing host)
[06:02:52] *** Joins: resamvi (~resamvi@user/resamvi)
[06:05:01] *** Quits: fe23 (~fe23@2409:8a34:466:6010:b43d:b4dc:73d0:6634) (Ping timeout: 240 seconds)
[06:05:34] *** Joins: Blondie101010 (~Blondie10@user/blondie101010)
[06:07:02] *** Quits: Joanna (uid57472@id-57472.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[06:07:31] *** Joins: vysn (~vysn@user/vysn)
[06:07:57] *** Quits: namkeleser (~namkelese@101.175.155.55) (Quit: Client closed)
[06:07:57] *** Joins: Inline__ (~Inline@p200300cd472d40002c1b8381bd5618c5.dip0.t-ipconnect.de)
[06:09:51] *** Joins: cincoswim (~cincoswim@cm-72-241-33-17.buckeyecom.net)
[06:10:30] *** Quits: Inline (~Inline@p200300cd470af600c32f3b3744c2844b.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[06:10:31] *** Quits: eddof13 (~eddof13@2806:102e:12:64:f838:6484:5e24:bd9f) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[06:12:09] *** Quits: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[06:17:23] *** Joins: geli (~gelignite@d536146e.access.ecotel.net)
[06:17:26] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 268 seconds)
[06:18:57] *** Quits: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Ping timeout: 240 seconds)
[06:19:56] *** Quits: magla (~gelignite@55d49742.access.ecotel.net) (Ping timeout: 245 seconds)
[06:22:43] *** Quits: CodeAgain (~codeagain@user/CodeAgain) (Quit: Ping timeout (120 seconds))
[06:22:55] *** Joins: CodeAgain (~codeagain@user/CodeAgain)
[06:23:23] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[06:28:21] *** Quits: CaCode (~CaCode@user/cacode) (Quit: Leaving)
[06:28:21] *** Quits: widp (~widp@124.123.106.87) (Read error: Connection reset by peer)
[06:28:44] *** Joins: widp (~widp@124.123.106.87)
[06:28:49] *** Joins: CaCode (~CaCode@user/cacode)
[06:31:22] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[06:33:31] *** Quits: cincoswim (~cincoswim@cm-72-241-33-17.buckeyecom.net) (Quit: WeeChat 3.4)
[06:40:10] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[06:42:54] *** Joins: wilz (~wilz@modemcable036.177-131-66.mc.videotron.ca)
[06:46:40] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[06:50:12] *** Quits: Amadiro (~Amadiro@45.154.138.91) (Remote host closed the connection)
[06:52:09] *** Joins: LiftLeft (~LiftLeft@airstream-nelson-fiber-dhcp-007-17.dsl.airstreamcomm.net)
[06:52:59] *** Joins: fe23 (~fe23@2409:8a34:466:6010:b43d:b4dc:73d0:6634)
[06:54:42] *** ravan_ is now known as ravan
[06:55:29] *** Joins: k8yun_ (~k8yun@user/k8yun)
[06:55:36] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[06:56:19] *** Joins: Lazenca (~lazenca@user/lazenca)
[06:58:04] *** Joins: k8yun__ (~k8yun@user/k8yun)
[06:59:21] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[06:59:54] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[07:01:19] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 256 seconds)
[07:01:54] *** Quits: k8yun_ (~k8yun@user/k8yun) (Ping timeout: 252 seconds)
[07:02:27] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[07:07:02] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 240 seconds)
[07:08:54] *** Parts: alexmac22347 (~alexmac22@192.157.105.82) (Leaving)
[07:09:03] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 252 seconds)
[07:11:22] *** Joins: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de)
[07:14:54] *** Joins: osXnut (~osXnut@77.125.126.151)
[07:19:20] *** Joins: resamvi (~resamvi@p200300f617179a00f4b7e265eddcb3e3.dip0.t-ipconnect.de)
[07:19:20] *** Quits: resamvi (~resamvi@p200300f617179a00f4b7e265eddcb3e3.dip0.t-ipconnect.de) (Changing host)
[07:19:20] *** Joins: resamvi (~resamvi@user/resamvi)
[07:19:51] *** Quits: pizdets_ (~pizdets@183.182.110.159) (Quit: pizdets)
[07:20:03] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Ping timeout: 252 seconds)
[07:20:04] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[07:20:32] *** Joins: pizdets (~pizdets@183.182.110.159)
[07:22:03] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[07:25:47] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Quit: WeeChat 3.4.1)
[07:30:32] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[07:31:08] *** Joins: lightshadow (~burak@192.222.226.180)
[07:32:57] *** Quits: osXnut (~osXnut@77.125.126.151) (Ping timeout: 240 seconds)
[07:34:02] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[07:34:59] *** Joins: node1 (~hex@user/node1)
[07:35:31] *** Quits: CaCode (~CaCode@user/cacode) (Quit: Leaving)
[07:40:15] *** Quits: filename (~kilitary@188.242.105.134) (Read error: Connection reset by peer)
[07:44:31] <ankylosaurus> Is there even lua framework cms?
[07:44:44] *** Joins: flaqologist (~F@32.211.211.39)
[07:44:56] *** Joins: CaCode (~CaCode@user/cacode)
[07:45:44] *** Quits: Cashlin (~hp@user/cashlin) (Quit: Konversation terminated!)
[07:47:34] <PlanckWalk> Yes
[07:49:08] *** Joins: osXnut (~osXnut@77.125.126.151)
[07:51:53] *** Joins: loganlee (~Thunderbi@user/loganlee)
[07:52:06] <Soni> hypothetically, how hard is it to make a random internet-connected computer believe it has a russian IP?
[07:53:54] <PlanckWalk> Pretty hard
[07:54:36] <PlanckWalk> Unless you control the computer already, of course.
[07:54:49] <PlanckWalk> But that wouldn't be very random.
[07:55:08] <Soni> well the idea is to use it as a new DoS vector, thanks to node-ipc
[07:55:46] <oldlaptop> If the idea is to attack someone else's computers, kindly take it somewhere else.
[07:55:46] <Soni> mostly as a proof of concept to drive home the point that these are remotely exploitable
[07:56:03] <PlanckWalk> Then no, it's not.
[07:56:29] <PlanckWalk> (Unless it already was for other reasons)
[07:56:49] <Soni> we guess all you'd have to do is be able to hijack DHCP
[07:57:04] <PlanckWalk> "all"
[07:57:35] <Soni> hmm okay that might be easier said than done
[07:58:05] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[07:59:02] <oldlaptop> I don't have enough detailed knowledge of this particular vulnerability to talk specifics, but I somehow doubt it relies on "does this computer have such and such an IP on its own network interface"?
[07:59:52] <oldlaptop> The vast majority of network interfaces on computers that aren't network appliances do not have globally-routable IPv4 addresses.
[08:05:41] <PlanckWalk> My computer's primary network interface has IP 10.0.0.2.  Hack away!
[08:07:15] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[08:08:49] <ankylosaurus> That was invitation to get rooted
[08:08:57] <Soni> well anyway, this is why your protestware should always rely on explicit configuration
[08:14:10] *** Joins: hex_ (~hex@1.39.188.93)
[08:14:29] <upp> everyone seems to have forgotten that the revolution wont be televised
[08:15:40] <upp> if your revolution was sold to you on the tv, you havent joined a revolution, youve been propagandized.
[08:15:53] *** Quits: node1 (~hex@user/node1) (Read error: Connection reset by peer)
[08:17:07] *** Quits: geli (~gelignite@d536146e.access.ecotel.net) (Quit: Stay safe!)
[08:19:16] <upp> https://youtu.be/QnJFhuOWgXg
[08:19:35] *** Joins: jamea (~jamea@177.239.81.39)
[08:20:40] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[08:21:53] *** Joins: dsrt^ (~dsrt@50-243-220-243-static.hfc.comcastbusiness.net)
[08:21:55] *** tomate_ is now known as tomate
[08:22:26] *** Quits: DaPinkOne (~Dap@user/dap) (Ping timeout: 245 seconds)
[08:23:09] *** Joins: DaPinkOne (~Dap@user/dap)
[08:23:43] <Blondie101010> "propagandized" :)
[08:27:21] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[08:27:38] *** Joins: img (~img@user/img)
[08:28:00] *** bayaz sets mode: -b *!Tempesta@183.98.39.112$##fix_your_connection
[08:28:50] *** Joins: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net)
[08:28:58] *** Joins: password2 (~password8@user/password2)
[08:29:50] *** Joins: stagas_ (~stagas@ppp-94-66-136-63.home.otenet.gr)
[08:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[08:30:27] *** Quits: stagas (~stagas@2a02:587:c4c7:f3eb:12db:1ec9:6d9d:b90) (Ping timeout: 252 seconds)
[08:31:04] *** Quits: knusbaum (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net) (Quit: ZNC 1.8.2 - https://znc.in)
[08:31:18] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[08:31:22] *** Joins: knusbaum (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net)
[08:32:40] *** Joins: hex__ (~hex@1.39.185.114)
[08:35:32] *** Quits: hex_ (~hex@1.39.188.93) (Ping timeout: 240 seconds)
[08:35:49] *** Quits: lightshadow (~burak@192.222.226.180) (Quit: lightshadow)
[08:41:35] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[08:49:29] *** Quits: wonko-the-sane (~wonk-the-@gateway/tor-sasl/wonko-the-sane) (Remote host closed the connection)
[08:49:45] *** Joins: wonko-the-sane (~wonk-the-@gateway/tor-sasl/wonko-the-sane)
[08:51:54] *** Quits: Zeturic (~Orimendix@50.26.218.162) (Ping timeout: 252 seconds)
[08:58:34] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[09:00:33] *** Quits: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[09:01:53] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[09:02:10] *** Joins: img (~img@user/img)
[09:04:43] *** Quits: ankylosaurus (~manti_ray@2607:fb90:80c7:ba80:c695:306f:ef0d:1cd5) (Quit: Buffer Overflow!)
[09:06:12] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 252 seconds)
[09:07:40] *** Joins: analoq (~yashi@user/dies)
[09:07:43] *** Joins: filename (~kilitary@188.242.105.134)
[09:08:26] *** Quits: filename (~kilitary@188.242.105.134) (Read error: Connection reset by peer)
[09:08:32] *** Quits: Gallomimia (~Gallomimi@node-1w7jra2a2gqpynxetn4zvj93a.ipv6.telus.net) (Remote host closed the connection)
[09:09:17] *** Quits: hoochmonger (~hoochmong@user/hoochmonger) (Ping timeout: 240 seconds)
[09:10:11] *** Quits: password2 (~password8@user/password2) (Ping timeout: 256 seconds)
[09:10:28] *** Joins: filename (~kilitary@188.242.105.134)
[09:12:28] *** Joins: lunarkitty (uid501895@user/pyra)
[09:14:29] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[09:14:55] <jamea> windows: wich command for fast copy recommend me? robocopy? or powershell? faster and secure
[09:21:38] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[09:22:09] *** Joins: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net)
[09:24:19] *** Quits: flaqologist (~F@32.211.211.39) (Remote host closed the connection)
[09:25:44] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[09:27:14] *** Quits: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[09:30:31] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[09:30:31] *** Quits: k8yun__ (~k8yun@user/k8yun) (Quit: Leaving)
[09:33:38] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[09:39:49] *** Joins: cursey_ (~cursey@user/cursey)
[09:40:14] *** Quits: cursey (~cursey@user/cursey) (Ping timeout: 250 seconds)
[09:45:37] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 240 seconds)
[09:53:04] <KillerWasp> jamea: 'cp'
[09:55:09] <Decker> windows explorer is pretty good... xcopy still exists
[09:55:56] <KillerWasp> $ cp [file1] [file2]
[09:55:59] <KillerWasp> very fast
[09:56:09] <KillerWasp> $ cat [file1] > [file2]
[09:56:12] <KillerWasp> more slow
[09:56:14] <Decker> winblows
[09:56:22] <KillerWasp> $ rsync #&*%&$*%$&*$#^&$&PURESTUFF
[09:56:31] <KillerWasp> mega slow
[09:56:41] *** Joins: pony (sid524992@smol/hors)
[09:56:44] *** Quits: Tabmow (~tabmow@user/tabmow) (Quit: ZNC 1.8.2 - https://znc.in)
[09:56:45] <pony> hi
[09:57:02] *** Joins: Tabmow (~tabmow@user/tabmow)
[10:02:02] *** Quits: hex__ (~hex@1.39.185.114) (Read error: Connection reset by peer)
[10:03:04] *** Joins: no-n (sid524992@smol/hors)
[10:03:38] *** Joins: Pickchea (~private@user/pickchea)
[10:04:35] *** Parts: pony (sid524992@smol/hors) ()
[10:05:02] <KillerWasp> no-n: hi
[10:05:05] <no-n> hi
[10:05:09] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[10:07:52] *** Joins: bearroot (~bearroot@104.188.169.47)
[10:11:01] *** Quits: bearroot (~bearroot@104.188.169.47) (Client Quit)
[10:18:45] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Ping timeout: 256 seconds)
[10:24:28] *** Joins: duuude (~user@user/duuude)
[10:25:02] *** Quits: Lazenca (~lazenca@user/lazenca) (Remote host closed the connection)
[10:25:12] *** Joins: filename (~kilitary@188.242.105.134)
[10:28:13] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[10:30:04] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[10:34:19] *** Quits: knusbaum (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net) (Quit: ZNC 1.8.2 - https://znc.in)
[10:34:36] *** Joins: knusbaum (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net)
[10:35:32] *** Joins: spaceangel_ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[10:36:34] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Ping timeout: 250 seconds)
[10:37:11] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[10:39:18] *** Quits: CaCode (~CaCode@user/cacode) (Quit: Leaving)
[10:39:54] <smallville7123> how do i merge two lists without having multiple occurrences of the same element(s)
[10:40:32] *** Quits: spaceangel_ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Ping timeout: 240 seconds)
[10:40:40] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[10:43:02] *** Quits: nulleip (~luiz@user/nulleip) (Ping timeout: 240 seconds)
[10:43:33] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[10:44:12] *** Joins: filename (~kilitary@188.242.105.134)
[10:44:51] *** Joins: nulleip (~luiz@user/nulleip)
[10:46:58] *** Quits: znedw5441 (~znedw@home.znedw.com) (Ping timeout: 250 seconds)
[10:47:17] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Ping timeout: 240 seconds)
[10:48:32] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[10:49:00] *** Quits: widp (~widp@124.123.106.87) (Remote host closed the connection)
[10:49:35] *** Joins: the_lanetly_052 (~the_lanet@185.30.89.185)
[10:49:52] *** Joins: spaceangel_ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[10:52:13] *** Quits: dsrt^ (~dsrt@50-243-220-243-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[10:52:32] *** Joins: rtypo (~alex@user/rtypo)
[10:53:19] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Ping timeout: 256 seconds)
[10:53:55] *** Joins: password2 (~password8@user/password2)
[10:55:42] *** Joins: azed (~azed@197.23.130.142)
[10:58:58] *** Joins: widp (~widp@2406:7400:73:7de3:2589:8733:f473:1d4c)
[11:01:53] *** Joins: spaceangel__ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[11:03:02] *** Quits: widp (~widp@2406:7400:73:7de3:2589:8733:f473:1d4c) (Ping timeout: 240 seconds)
[11:04:39] *** Quits: spaceangel_ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Ping timeout: 256 seconds)
[11:05:54] *** Joins: ravan_ (~ravan@42.201.198.151)
[11:05:54] *** Quits: ravan_ (~ravan@42.201.198.151) (Changing host)
[11:05:54] *** Joins: ravan_ (~ravan@user/ravan)
[11:06:47] *** Joins: xa0s (~xa0s@mab.sdf.org)
[11:06:55] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 256 seconds)
[11:07:48] *** Quits: duuude (~user@user/duuude) (Ping timeout: 240 seconds)
[11:08:29] *** Joins: Satin (uid193953@user/Seten)
[11:10:48] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[11:11:36] <davros> smallville7123, a set ?
[11:12:15] <davros> HashMap<Key, () >  
[11:12:28] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[11:12:50] *** Quits: filename (~kilitary@188.242.105.134) (Read error: Connection reset by peer)
[11:13:12] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[11:13:42] *** Joins: filename (~kilitary@188.242.105.134)
[11:13:43] <Bou> ouch
[11:13:45] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[11:14:10] *** Quits: filename (~kilitary@188.242.105.134) (Read error: Connection reset by peer)
[11:16:27] *** Joins: widp (~widp@124.123.106.87)
[11:17:49] *** Joins: rsx (~dummy@ppp-188-174-156-215.dynamic.mnet-online.de)
[11:18:15] *** Quits: password2 (~password8@user/password2) (Ping timeout: 256 seconds)
[11:20:28] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[11:20:31] <KillerWasp> anyone here>
[11:20:33] <KillerWasp> ?
[11:20:43] <davros> if a language doesn't have a dedicated set, you can fake one with key + value = nothing :)
[11:20:48] *** Joins: jaysicks (~jaysicks@178-164-134-178.pool.digikabel.hu)
[11:20:51] <davros> yes i am here
[11:21:05] <Bou> why on earth would you need a set to merge two lists
[11:21:17] <davros> i suspect what he really means is merge two sets
[11:21:19] <Bou> list has O(1) insert and delete so you can do it trivially
[11:21:43] <davros> "without having multipe occurences of the same elements" - means the originals are probably sets aswell
[11:21:57] <davros> just happen to have been optimized into lists
[11:23:00] <KillerWasp> smallville7123: order the two list, and with two index and you advance in order and taking all the different elements you find.
[11:23:47] <smallville7123> https://gist.github.com/mgood7123/22be72a80f739c04d3b4ec87569ecc70 would i do this?
[11:23:47] <bayaz> Title: a.cs 
[11:23:54] <Decker> add each to another list, and check the list as you're adding that the element isn't already there :)  
[11:24:36] <davros> yeah if they're sorted it can be done more efficiently
[11:24:56] <Decker> :) lists are rarel sorted or sortable IME
[11:25:21] <KillerWasp> ok, you also can put the two lists in one, order it, and remove all repeated elements.
[11:25:22] <davros> only he knows the whole context
[11:25:34] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d4f3:e167:a65d:25ad)
[11:25:51] <davros> how often does it happen, when are the lists changed etc
[11:25:57] *** Quits: TheNymh (~niamh@nat-128-84-124-0-775.cit.cornell.edu) (Ping timeout: 240 seconds)
[11:26:24] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 250 seconds)
[11:26:34] <KillerWasp> davros: you just throws out some ideas, and that's how he shuts up.
[11:26:53] <davros> we can be constructive :)
[11:26:59] <KillerWasp> xD
[11:27:33] <davros> it raises a question , is there such a thing as a sorted list container, how different is a set to one of those
[11:27:46] <davros> is it a dynamic changing situation or now
[11:27:57] <davros> or not^
[11:28:26] <KillerWasp> davros: Does it matter if it's neat or messy? the result is same.
[11:28:32] <davros> i dont know my way around c sharp though.   I see "switch, case" and i feel the urge to evangalise another language ..
[11:28:46] <smallville7123> https://gist.github.com/mgood7123/ce87ca94baffdd67e96b439ff7b53e8e *
[11:28:47] <bayaz> Title: BitwiseList.cs 
[11:29:10] <KillerWasp> more if you mix two list
[11:29:46] <davros> this does sound more like a "set" than a plain list, you're wanting to do these kind of  OR, AND operations
[11:30:13] <Hash> KillerWasp: I made a video I don't know if yo usaw it
[11:30:28] <davros> and(set,set) -> set     or(set,set)->set
[11:30:29] <KillerWasp> Hash: today? no.
[11:30:31] <Hash> https://www.youtube.com/watch?v=r3h5_u7P7vs
[11:30:33] <bayaz> Title: D2 Modder v4.0 (BETA DEMO) - Diablo 2 Modding Application 
[11:30:38] <Hash> This one.
[11:30:40] <Hash> Not the actual mod.
[11:30:46] <davros> i dont know what containers c# has out of the box 
[11:31:42] <Hash> https://gitlab.com/hashborgir/d2tools here's the code.
[11:31:42] <KillerWasp> davros: mmmm, set mean and/or?
[11:31:43] <bayaz> Title: Hash Borgir / d2tools 
[11:32:05] <davros> a set of indices can be thought of as a sparse bitfield, for example
[11:32:21] <davros> he's in effect trying to and, or them
[11:32:47] <davros> but i wonder, would a dedicated set have those ops already .. sounds quite common (set theory, union , intersection)
[11:33:29] <KillerWasp> Perhaps he is trying to solve an exercise of the entrance test for the university or school, in that case he should transcribe the complete sentence here to understand what he means.
[11:33:45] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[11:33:50] <davros> https://doc.rust-lang.org/std/collections/struct.HashSet.html#method.intersection  in Rust's stdlib, there is indeed a "HashSet<T>"  - and it has .union() "OR"  and .intersection "AND"
[11:33:50] <bayaz> Title: HashSet in std::collections - Rust 
[11:34:09] <Trashlord> what do you call a data type who won't be silenced? Immutable.
[11:34:15] <davros> take a look around to see if C# has somethign simimlar in its standard library.  If not , i think he wants to make this.
[11:34:51] <KillerWasp> Trashlord: good joke
[11:35:09] <davros> yeah he might be trying to demonstrate he can do it, instead of just needing it.  hence context needed to give better answers
[11:35:47] <davros> but honestly , talking about ANYTHING, however mundane, can be useful distractoin from obsessing over imminent nuclear annihilation
[11:35:47] <KillerWasp> damn... that cold...
[11:35:59] <KillerWasp> 5am here and are cold
[11:36:26] <davros> i welcome going around in circles talking about sets and maps and garbaggge collectors and spaces vs tabs, instead of stressing about nuclear war
[11:36:44] <davros> we can help him to help ourselves
[11:38:13] <davros> i put in the effort to google "set, c#" and found this.  It's called the same as in rust :)   HashSet   https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.hashset-1?redirectedfrom=MSDN&view=net-6.0  and it has union and intersection methods
[11:38:14] <bayaz> Title: HashSet<T> Class (System.Collections.Generic) 
[11:38:55] <KillerWasp> davros: If they whack each other with nuclear missiles in the middle of the mud like a wrestling match, I don't care.
[11:38:56] <davros> @ smallville7123   take a look at C# HashSet, the union and intersection operations there might be what you need. Is there a reason you need this to be based on List<T> ?
[11:40:05] <davros> KillerWasp how well is your skin and digestive system tested against ionizing radiation
[11:40:31] <davros> can you tolerate food and water with alpha particle sources
[11:40:51] <davros> i haven't tried myself
[11:40:52] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[11:40:58] <KillerWasp> davros: Perfectly fine. I can eat uranium bars like candy.
[11:41:06] <davros> damn you are lucky
[11:41:27] <Decker> just in procuring the uranium bars even :)
[11:41:36] <davros> i was re-watching the xfiles and there's an episode where a newborn gray goes to relax inside a nuclear reactor , i guess you must be like that 
[11:42:21] <Hash> gold pressed bars of latinum
[11:42:22] <davros> i'm either a plain human, or a robot with chips that are not radiation-hardened 
[11:42:28] <KillerWasp> davros: NOOOO!!! hahahahaha
[11:42:46] <KillerWasp> i'm not gray!! >:(
[11:43:01] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[11:43:15] <davros> smallville7123,  does the HashSet satsify your need ?
[11:43:38] <KillerWasp> a single bar of uranium feeds me all year.
[11:44:14] <KillerWasp> My stomach is like a nuclear reactor and vibrates like King's engine.
[11:44:26] <davros> https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.hashset-1.unionwith?view=net-6.0 <<< this is what you are trying to write.   "Bitwise OR of a list" = HashSet . UnionWith()    "Bitwise AND of a list" == HashSet.IntersectionWith()
[11:44:26] <bayaz> Title: HashSet<T>.UnionWith(IEnumerable<T>) Method (System.Collections.Generic) 
[11:44:33] <davros> i think this is what you are trying to do
[11:46:00] <KillerWasp> ok, out of garbage comments...
[11:46:32] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[11:47:44] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[11:47:46] <KillerWasp> It seems that I need the help of certain C/C++ programmers to create or port their games to my 486 Emulator. It's for my online game server.
[11:48:17] *** Joins: palasso (~palasso@user/palasso)
[11:49:22] <KillerWasp> I need to work alongside them as a team to be able to move this forward faster.
[11:49:22] *** Quits: zaher (~zaher@37.48.191.19) (Ping timeout: 250 seconds)
[11:49:23] <epony> s/485/586/g
[11:49:53] <KillerWasp> Of course there is a lot of money involved, but initially it is a stage of development.
[11:49:55] *** Quits: azed (~azed@197.23.130.142) (Read error: Connection reset by peer)
[11:49:57] <epony> ^ fix the regex (spot the error)
[11:49:57] <EdFletcher> how many games have you ported so far? 
[11:50:24] <epony> games are not portable
[11:50:54] <davros> KillerWasp what are you doing, "online" .. are you running them in wasm or what
[11:51:05] <KillerWasp> davros: blackrook.xyz
[11:51:32] <epony> obviously, it's sharing the graphic render
[11:51:35] <epony> (online)
[11:51:44] <KillerWasp> davros: It is a complete system programmed in C/C++.
[11:51:55] <edgar-rft> KillerWasp: I could help you by spending your money
[11:52:11] <epony> what money ;-)
[11:52:18] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d4f3:e167:a65d:25ad) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[11:52:26] <epony> spend the CPU cycles conservatively
[11:52:33] <epony> your budget is 0
[11:52:33] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[11:52:35] <EdFletcher> where's the online game server? 
[11:52:43] <KillerWasp> Now all I need is some kind of abstraction or methods, identifying everything an online game would need to run from the emulator.
[11:52:55] <edgar-rft> epony: KillerWasp said there's lots of money involved...
[11:53:09] <epony> "TCP/IP" (UDP) stack
[11:53:13] *** Joins: adder` (~adder@user/adder)
[11:53:26] <KillerWasp> edgar-rft: yes. But i don't have the money now.
[11:53:45] <EdFletcher> if there's so much money involved, why can't you get investors? 
[11:53:53] <KillerWasp> my server has potential.
[11:54:00] <edgar-rft> okay, then I will spend your money later
[11:54:00] <KillerWasp> like very high potential.
[11:54:23] <EdFletcher> so why can't you get investors? if it has such high potential, can you not demo that to them? 
[11:54:30] <KillerWasp> edgar-rft: like spend my money to others? what?
[11:55:31] <epony> you see, that's why games are not portable, there is money involved
[11:55:49] <KillerWasp> edgar-rft: Have you ever heard of potential theory? A stone ball that can shatter you because it was on the top of the mountain. But it's still up there and it keeps you terrified.
[11:55:54] <KillerWasp> or something like it.
[11:56:29] <KillerWasp> well, my server is same, can give you 100000000$ dollar. ;)
[11:56:54] <EdFletcher> classic refrain from people with a "killer idea" but lacking execution üòÜ 
[11:57:01] <kee> KillerWasp: Do you have a reason not to get investors?
[11:57:20] <kee> I understand having an ideological opposition to that model, but without that‚Ä¶ why not?
[11:57:27] <Decker> https://youtu.be/p4_1t5jjo4w?t=159  'it's not confidnetial, I've got potential...'
[11:57:29] <bayaz> Title: somebody told me - the killers 
[11:58:04] <EdFletcher> love that song ‚ù§Ô∏è üé∂ 
[11:58:04] <Bou> ¬°¬°ERROR 404!! ¬°¬°HISSS!!
[11:58:14] <KillerWasp> epony: I don't know what you're thinking, but if you want to live programming games, the money has to be in the middle.
[11:58:41] <kee> Why is your server useful?
[11:58:58] <KillerWasp> kee: i live in Argentina. DEAD END
[11:59:17] <KillerWasp> (no inversors)
[11:59:22] <kee> Okay, fair enough. You've passed the basic ‚Äúis this an obvious scam?‚Äù test.
[11:59:46] <kee> But why a 486 emulator? What's all this about?
[12:00:06] <davros> a 486 emulator would let you play classic DOS games
[12:00:11] <davros> this is a reasonable idea
[12:00:18] <Decker> single threaded
[12:00:23] <kee> Yes, but KillerWasp wants people to port their games to it.
[12:00:28] <KillerWasp> Bou: lol
[12:00:29] <davros> but its probably hard to make money from , because its all about the IP
[12:00:34] <epony> nope, 486 emulation is not a reasonable idea
[12:00:41] <epony> you're confused
[12:00:46] <davros> so yeah you'd have to contact the publishers of the original games
[12:00:59] <Bou> KillerWasp: and that's the link to your Linux download xD
[12:01:13] <kee> davros: Realistically, transpiling the games is more realistic.
[12:01:32] <KillerWasp> kee: 486 Emulator, It allows programmers to create anything in a restricted space, which offers 100% security compared to JS.
[12:01:44] <kee> Er
[12:01:48] <epony> x86 is backward compatible, and modular, sets of instructions, just as you think about ARM, it's just a lot more mature and reliable (and has performance)
[12:02:07] <kee> KillerWasp: Just to check real quick: are you sure you haven't re-invented the JVM?
[12:02:09] <epony> you don't emulate the hardware, you translate instructions
[12:02:12] <davros> yeah people who care about these games probably already have them
[12:02:41] <davros> KillerWasp i am working with some people who are trying to make a site for wasm games
[12:02:49] <EdFletcher> "100% security"! now that's surely bullshit. 
[12:02:58] <davros> we've had the discussions about porting existing games vs making new ones, and even a whole new engine
[12:03:07] <KillerWasp> Bou: yes, it's still in maintain. i take in from the link.
[12:03:08] <kee> EdFletcher: No, it's realistic. If it's completely emulated and sandboxed, you only need to worry about RowHammer.
[12:03:20] <EdFletcher> kee: then that's not 100%, is it üòÜ 
[12:03:28] <kee> RowHammer only exists if you have buggy hardware.
[12:03:51] <davros> after looking into this
[12:03:56] <KillerWasp> kee: na, JVM re-invented from my code.
[12:04:01] <EdFletcher> point is, _no system is 100% secure_ and you don't have perfect information about the breadth of vulnerabilities of any system you're running on 
[12:04:15] <KillerWasp> or my idea.
[12:04:22] <davros> there's all sorts of cpu emulators and system emulators
[12:04:23] <EdFletcher> "never say never" (or always, in this case) 
[12:04:25] <epony> games don't care about security, but bug for bug compatibility
[12:04:28] <davros> the real issue is the games IP
[12:04:32] <kee> KillerWasp: When were you born? It's entirely possible that the JVM predates you.
[12:04:40] <epony> people, you need to think realistic, not opportunistic
[12:04:45] <davros> thing is most popular games are active IP
[12:04:53] <davros> the most famous 486 game is Doom
[12:04:54] <epony> nope, that's stolen long ago
[12:05:01] <kee> Or the Dis VM, which is my favourite implementation of the concept, and came a couple of years after JVM.
[12:05:09] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[12:05:14] <davros> so emulation is a niche hobby, i dont think you can make money from it
[12:05:16] <epony> games binaries are stolen reversed and manipulated shortly after their release
[12:05:18] *** Joins: frost (~frost@user/frost)
[12:05:26] <davros> you might be able to sell your skills
[12:05:39] <davros> game emulation^
[12:05:47] <epony> emulation is not niche, running unmodified binaries is your niche
[12:06:03] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[12:06:04] <davros> whole system emulation whatever it is
[12:06:07] <epony> emulation has been in use since the mainframe computers and mini computers
[12:06:17] <KillerWasp> i make 486 Emulator, i published it, and 5 years later appear wasm and other garbages
[12:06:28] <davros> wasm is not garbage
[12:06:41] <KillerWasp> Be careful how you consider who came into the world first.
[12:06:44] <davros> an abstract VM is better than a low level emulator
[12:06:48] <kee> WASM is possibly the best thing to come out of the web in the past 10 years.
[12:06:49] <Decker> also far from an emulator
[12:07:02] <davros> KillerWasp the first I heard of this was a system called TAOS in the 8/16bit days
[12:07:05] <epony> there are already x86 emulators that have performance and processor bug reproducible level
[12:07:08] <KillerWasp> kee: yes, my best idea, my best program. thanks! :D
[12:07:10] <davros> do not think you have invented something
[12:07:26] <kee> I thought I'd invented something once. Spent over two years on it.
[12:07:32] <davros> but sure ideas get put in new contexts, hardly anything is truly original
[12:07:34] <kee> Turns out it was invented by a computer scientist at Bell Labs.
[12:07:50] <KillerWasp> I never get tired of saying the same thing that wasm is just a hacked program that stole my idea and turned it into garbage.
[12:07:59] <kee> Why do you say that?
[12:08:13] <kee> You don't know what WASM is, and you're ignorant about the strengths of your own system.
[12:08:22] <EdFletcher> not just about that 
[12:08:26] <EdFletcher> clearly 
[12:08:37] <davros> its not your idea KillerWasp , the first *i* heard of this was TAOS in the 16bit days. and i heard Shiny entertainment had something similar aswell. and those aren't the first
[12:08:52] <KillerWasp> It even completely breaks the fundamental principle that I have given to my programs: 1) Be done in C/C++/ASM. 2) Never mess with JS, HTTP and everything related to websites.
[12:08:55] <epony> if you know what it is, you're more ignorant of the reality, since it's a bytecode impass layer
[12:09:09] <kee> KillerWasp: Do you want to pretend you're really awesome and better than everyone but never actually succeed at anything? Or do you want to have a chance at success?
[12:09:10] <davros> WASM is not garbage. its supposed to be compiled on x86 or ARM, so starting with x86 would be inferior
[12:09:12] <Decker> 'garbage'  "i'm don't think that word means what you think it means"  https://www.youtube.com/watch?v=dTRKCXC0JFg
[12:09:13] <bayaz> Title: Princess Bride, "You keep using that word. I do not think it means what you think it means." 
[12:09:25] <EdFletcher> üòÜ üëè 
[12:09:33] <EdFletcher> classic 
[12:09:43] <kee> Decker: Do you have a video for every occasion?
[12:09:45] <epony> davros, inferior is running a web browser instead of native binaries
[12:09:56] <davros> there might be virtues in what you've made, so no need to exagerate with disprovable statements like "wasm compied me"
[12:10:03] <Decker> Kee :) ya I have lots of sound bytes in my head - some are hard to find clips of...
[12:10:13] <davros> epony sure but there's plenty of reasons the web is popular, i concede
[12:10:44] <epony> it's not for playing in browser 3D render farms
[12:10:45] <davros> the promise iof wasm is i can throw my native programs online and people can find and run them in a single click, no install
[12:10:58] <kee> Inferior is that we haven't made something better than the web yet. I mean, come on. The web was properly zooming downhill in 2010; we've had loads of time.
[12:11:07] <KillerWasp> kee: davros: You asked me, I gave you the answers. I do not accept absurd discussions that lead to a fight. That by the way, the only reason why none of my programs has ever succeeded is because it has never had the acceptance of anyone, as always everyone prefers to treat me like shit and a liar, including you two. :/
[12:11:10] <Decker> like natural born killers 'I need a WHOLE new wardrobe!  Cause I'm a New! Woman! Now!' :)    someone was complaining the were losing weight and didn't fit in their clothes anymore
[12:11:13] <davros> making something better is easy, making it popular is hard
[12:11:25] <epony> there is no "web" it's a network using the IP protocol stack
[12:11:29] <kee> KillerWasp: It's because you don't understand what's good about what you make.
[12:11:42] <kee> You run off with the first thought that crosses your mind.
[12:11:47] <EdFletcher> KillerWasp: "Never mess with JS, HTTP and everything related to websites" "It's for my online game server." blackrook.xyz -- make up your mind! you contradict yourself so easily. 
[12:12:15] <epony> the old games used IPX protocol stack instead, that is your real issue
[12:12:19] <davros> KillerWasp, I'm not trying to treat you like shit. but when you say something false like "wasm copied me", i have to set you straight.  Drop the hyperbole, and we can talk about real things. i have some interest in retro games, and games played online, in browers
[12:13:14] <KillerWasp> kee: I do not understand what you say. Obviously I know what I do, I have devised, planned and created it for more than 10 years. The only fucking obstacle I have is how to make others see the value of my programs, or the potential.
[12:13:16] <davros> network = IP protocol, "web" = the browser , if i've understood right..   the browser ate everything because its so convenient for users to just click around
[12:13:34] <Decker> and 'download' duck duck go
[12:13:52] <davros> KillerWasp you can demo it 
[12:13:53] <Decker> have you heard those commercials?  They're even on the radio here... 
[12:14:07] <epony> it ate nothing, it's just an interactive pager
[12:14:18] <davros> KillerWasp, even if no one buys it , you can use it to demonstrate your skill and sell other services, get hired, whatever, fair play.
[12:14:24] <davros> maybe you put a lot of work into this system
[12:14:28] <kee> KillerWasp: No: the obstacle you have is that you don't understand the value or the potential. If you're anything like how I was in 2012, you stop at the first awesome implication you think of.
[12:14:46] <KillerWasp> davros: i don't have demos, i remove the channel from youtube (by suck), you can found only a residual link in my site.
[12:15:17] <KillerWasp> until I find a better place to host and play videos.
[12:15:23] <kee> KillerWasp: PeerTube?
[12:15:29] <Decker> dtube
[12:15:46] <davros> KillerWasp, one issue i am going through right now myself
[12:15:47] <epony> there was no browser concept in the 386/486 computing years
[12:15:52] <KillerWasp> kee: yes, yes, i already see it like years before....
[12:15:53] <davros> i have a simple alpha version web-assembly game
[12:15:55] <Decker> nutscrape
[12:16:11] <kee> epony: Pretty sure there was?
[12:16:13] <Decker> I mean netscape was a thing on my 486
[12:16:14] <Haxxa> I worked on a defense project in University for a year, (final year project), would you define that as a internship or what would you put down on a linkedin description? i.e. I developed an app and machine learning classifier, but I technically wasn't employed? I was thinking of using this "Junior Software Developer (Intern)", but I was wondering
[12:16:14] <Haxxa> if there was a better description for working with a company or agency but not been employed directly?
[12:16:20] <davros> its hard to *sell it*. as soon as its hosted its instantly piratable 
[12:16:29] <Decker> mosaic
[12:16:31] <davros> my partners wonder why pro gamedevs dont make browser games
[12:16:37] <davros> and they think they can get people doing it
[12:16:43] <epony> nope, it's called a document viewer / pager / document script / typeset system
[12:16:48] *** Joins: xkuru (~xkuru@user/xkuru)
[12:16:50] <davros> but my suspicion is the web just doesn't suit game content, for IP reasons
[12:16:55] <kee> Haxxa: I'd write ‚Äúnth year universityname‚Äù or ‚Äúnth year coursename‚Äù.
[12:17:04] <davros> the web suceeds for low effort text and photo/video sharing
[12:17:09] <EdFletcher> Haxxa: what language did the company use for your role? 
[12:17:12] *** Joins: user51 (~user51@77.124.35.94)
[12:17:15] <Haxxa> EdFletcher Java
[12:17:21] <Haxxa> and Python
[12:17:29] <davros> but games are expensive to produce, so people get paid, so they dont want to put them up easily pirateable in the browser
[12:17:44] <kee> davros: It's not instantly piratable.
[12:17:48] <Haxxa> The app was Android based, the machine learning algo was using skporter (python)
[12:17:50] <EdFletcher> Haxxa: sorry not the technology, _your_ role. were you a "software developer", or did they specifically call you an "intern"? 
[12:17:57] <kee> It's only easily piratable if you make it work offline.
[12:18:10] <davros> you could grab a lot of the content
[12:18:17] <kee> But it can be quite a large pain to pirate. You don't even have a complete list of the assets.
[12:18:20] <davros> so people wont do expensive art this way
[12:18:29] <kee> You can grab all of the assets with a traditional game.
[12:18:29] <Haxxa> EdFletcher  They called as students, because we had 3 meetings a week and then developed the application based on the requirements
[12:18:36] <davros> yeah i've thought about ways to make it "harder" to pirate
[12:18:48] <Haxxa> also was during covid so all from home
[12:18:52] <kee> It's impossible to stop people pirating things because of the analogue gap.
[12:18:57] <davros> but ultimately i think this is why walled gardens like consoles exist
[12:19:06] <KillerWasp> davros: I don't know how interested you are in the technical details of my server (it seems irrelevant to the world). My server totally replaces the protocol and the way it handles data, it already has all its features provided in the system, so it can easily act as a replacement for any web browser.
[12:19:11] <kee> ‚Ä¶ Consoles don't help, though?
[12:19:21] <kee> You can pirate stuff on those just as easily.
[12:19:30] <EdFletcher> Haxxa: they never gave you any paper work with a specific title on it? either way, it sounds like they considered you an intern: be sure you include that. never lie or obfuscate to inflate yourself, it will be found out. 
[12:19:34] <kee> If not more so; nobody bothers doing ‚Äúcopy protection‚Äù shenanigans.
[12:19:49] <Haxxa> EdFletcher I put the role as Software Engineer Intern
[12:19:55] <EdFletcher> Haxxa: üëç 
[12:19:59] <Haxxa> I don't think that inflate things at all
[12:20:10] <kee> KillerWasp: Why will people install the program?
[12:20:11] <davros> consoles are closed systems, so people can only pirate by getting PC's .  a lot of people just by appliances (consoles, phones ) , PC sales are in decline
[12:20:22] <Haxxa> If anything it under sells the role as I did everything without help 
[12:20:29] <kee> davros: Or just hack the console.
[12:20:33] <kee> Easy enough.
[12:20:35] <KillerWasp> kee: irrelevant.
[12:20:42] *** Parts: Bou (sid274843@user/bou) ()
[12:20:54] <kee> KillerWasp: It's really not. All of my big ideas like that fell through because nobody would install it.
[12:20:59] <KillerWasp> kee: People install anything and pay for anything.
[12:21:00] <kee> The web has minimal barrier-to-entry.
[12:21:13] <davros> anyway besides that the partners are infact emphasising the online service (ie they are keen for me to do client-server netplay )
[12:21:18] <kee> Psh. They install malware within 5 seconds, but it takes hours to convince them to install anything useful.
[12:21:30] <davros> i'm giving them a single player version to show investors
[12:22:06] *** Joins: znedw5441 (~znedw@home.znedw.com)
[12:22:32] <davros> there are some aspects of the plan i am lukewarm about but i go along with it because i like just making a game for myself anyway
[12:22:32] <KillerWasp> kee: yes. is how work with the people.
[12:22:35] *** Joins: caramel (~caramel@user/caramel)
[12:23:03] <davros> they want to make a whole new engine to get other developpers making games "on their platform", i am warning them that i dont beleive any existing team will change engine
[12:23:12] <KillerWasp> kee: I know the answer to that, but I don't know if I should explain it, it looks so fucked up to take in.
[12:23:20] <davros> either people will use unity or unreal , or their own inhouse, trying to sell a new engine now is insane
[12:23:42] <epony> the game is a set of optimisation problems which you know already from the inside so you can't be bothered to believe the view layer
[12:25:26] <davros> yes kee this is my perception aswell,  the value of something in the browser is "click,play instantly" for sure, actually convincing soeone to install something is wishful thinking (unless its some massive world changing peice of software)
[12:25:39] <KillerWasp> kee: The only thing I can tell you is that just like me, you don't have the support of any of the people, but something can be achieved if you get together in a group of developers who do something and who have the same problems as us. In this case I had the initiative to start, develop and finish something useful, you should join me, even if you think you won't gain anything from it.
[12:25:39] <davros> so I do see the value in running games in the browser
[12:25:43] <epony> graphics are large
[12:25:55] <epony> the "instant" thing is false
[12:26:02] <davros> but i still think its a middle ground where its going to be hard to get people to make games that people want to pay for
[12:26:14] <davros> epony the graphcis can be streamed, thats what i'm doing
[12:26:22] <epony> in virtual machine and in dynamic language memory use is 2-4x larger than native data
[12:26:31] <davros> i load low resolution first, you start moving within a few seconds, and it gradually refines
[12:26:43] <epony> memory shuffle is slow, browser render is miserable
[12:26:59] <KillerWasp> kee: If you manage to help me and advance with the development x2, you can finish it even faster than anything else and with it start earning money later.
[12:27:02] <koollman> epony: the latency to beat is "install large game on computer", it does not have to be really instant to win :)
[12:27:03] <Decker> it's not so bad even on intel chips
[12:27:14] <davros> i'm seeing enough performance in the browser to do nice graphics, not state of the art like UE5, but easily enough to give a nice experience
[12:27:27] <davros> the sticking point is "can you pay for nice graphics, when they can be pirated so easily"
[12:27:37] <epony> games don't care about being stuck in a browser, only your trade and score and other "info" boards do
[12:27:47] <KillerWasp> And if another programmer, for example, davros joins, it would be x3 in the development of the games and other services. It's better still.
[12:27:48] <arahael> davros: Or RealityKit.
[12:27:48] <koollman> I've played xbox console games in browser ... it's decent
[12:27:57] <arahael> davros: Apple's the only company that can afford to be insane. ;)
[12:28:05] <kee> KillerWasp: You're neglecting the overhead of social interactions.
[12:28:16] <epony> the games on Apple are inferior in quality and sales
[12:28:21] <Decker> A-frame
[12:28:31] <davros> one trick i have is i can render a skybox to cheat
[12:28:37] <KillerWasp> kee: what expenses?
[12:28:42] <davros> i plan to have a bunch of skyboxes pre-rendered from the spawnpoints
[12:28:48] <kee> KillerWasp: Time spent in meetings etc..
[12:28:48] <arahael> epony: And yet, they're really popular (on iOS)
[12:29:00] * EdFletcher . o O (  KillerWasp clearly never read ‚ÄúThe Mythical Man-Month‚Äù  )
[12:29:06] <davros> 2mb/sec can deliver nice visuals
[12:29:18] <KillerWasp> kee: But is it worth it. Right now you just waste time and gain nothing.
[12:29:18] <kee> EdFletcher: Is there more to that book than the title?
[12:29:32] <kee> KillerWasp: No, that's my line.
[12:29:50] <EdFletcher> kee: Yes, quite. Worth a read. 
[12:29:53] <KillerWasp> It is better to program and do something that can make it easier for you to earn money.
[12:30:04] <davros> 2mb/sec can deliver visuals nice enough that we'd have to spend $100,000's - $millions on art to max it out, and thats the sticking point, no guarantee anyone will pay money for these games to get a return.
[12:30:16] <KillerWasp> And that something will remain yours, you can use it for something else.
[12:30:44] <davros> and if you dont spend that money on art, the games wont look as good as others that people can play reasonably easily ("walk into a store and buy a second hand console" , "just spend a few extra minutes downloading from steam", etc)
[12:30:48] <kee> KillerWasp: More seriously, I do have my own stuff going on (e.g. my awesome programming language, the accessibility toolkit, a couple of small businesses, a viable B2B startup). You'd need to convince me that your thing is more important than those things, and so far I'm not convinced.
[12:30:52] *** Quits: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de) (Quit: https://quassel-irc.org - Komfortabler Chat. √úberall.)
[12:30:59] <davros> its technically possible, just hard to make it economical
[12:31:09] <epony> Wolfenstein was first releases on Apple][ too, in.. 1981  https://en.wikipedia.org/wiki/Castle_Wolfenstein#Gameplay
[12:31:09] <bayaz> Title: Castle Wolfenstein - Wikipedia 
[12:31:23] <davros> ultimately it is a "1st world problem",   as if people dont have enough games already, "lets make them playable in 2 seconds instead of 2 minutes" , lol
[12:31:30] <kee> Art is really hard. Why isn't programming enough to make a game‚ÄΩ
[12:31:39] <KillerWasp> kee: What are you talking about? You say you created them and you own everything?
[12:31:49] <EdFletcher> kee: because video games are themselves an art form 
[12:32:01] <epony> however that does not change the fact that Doom targeted x86
[12:32:08] *** Joins: nishant (~Nishant@49.37.242.151)
[12:32:17] <kee> EdFletcher: : Yeah ‚Äì my beautiful beautiful code, the story that just about holds up if you don't look too hard‚Ä¶
[12:32:24] <davros> https://vimeo.com/686548572 this is my test art in my engine
[12:32:32] *** Joins: independent56 (~independe@85.255.232.175)
[12:32:37] <epony> https://en.wikipedia.org/wiki/Doom_(1993_video_game)#Gameplay
[12:32:37] <bayaz> Title: Doom (1993 video game) - Wikipedia 
[12:32:46] <EdFletcher> kee: hahaha a story we all share üôÇ 
[12:32:50] <kee> KillerWasp: Not the B2B startup ‚Äì I'm working for somebody else there. But yeah, all the rest of it is ‚Äúmine‚Äù.
[12:33:00] <KillerWasp> kee: really? You should explain to me in more detail in private. If that were the case maybe we could come to an agreement on a possible merger.
[12:33:08] <davros> https://vimeo.com/677060352
[12:33:15] <epony> so, games on Apple are just "demo" but not really "market"
[12:33:27] <kee> KillerWasp: ‚Ä¶ I'll have to politely decline. I have no idea why I'd want to. We're not even doing related things.
[12:33:55] <KillerWasp> kee: I already told you. You can't do it alone. You just waste your time. :/
[12:34:02] <EdFletcher> wow a merger offer "site unseen"? yeah nothing sus about that ü§£ 
[12:34:08] <kee> We're likely not even in the same country; international corporate mergers are worth more than all my assets combined.
[12:34:13] <Decker> :) too many chiefs not enough indians (this channel)
[12:34:17] <kee> s/are worth more/cost more/
[12:34:20] <EdFletcher> davros: looks really nice! movement is very smooth, well done 
[12:34:41] <davros> EdFletcher in a past life i did console games
[12:34:43] <KillerWasp> look me. 10 years developing several projects and I still don't have anyone to support me. We need to show how much it serves our projects.
[12:34:52] *** Quits: stagas_ (~stagas@ppp-94-66-136-63.home.otenet.gr) (Ping timeout: 250 seconds)
[12:34:58] <kee> KillerWasp: https://www.greaterwrong.com/posts/uHYYA32CKgKT3FagE/hold-off-on-proposing-solutions
[12:35:00] <EdFletcher> davros: ah ha! it shows üòâ 
[12:35:11] <kee> KillerWasp: You can't just develop the first project that comes to mind, or even the tenth.
[12:35:18] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[12:35:50] <davros> EdFletcher pretty much this is my hobby project funded on the back of my past career and these other guys discovered it and wanted me to join their effort. i continue wiht it but warn them about expectations (i know first hand how overcrowded the games market is)
[12:36:15] <EdFletcher> davros: hey as long as you're having fun with it, that's what matters 
[12:36:25] *** Joins: rcesptro (~rcesptro@2001:448a:50e0:23e8:13a7:403a:9cb5:bf8e)
[12:36:31] <KillerWasp> kee: WRONG. Do not treat me as a beginner because I know what I do, all my projects are very thoughtful and planned, even developed.
[12:36:41] <kee> KillerWasp: You have to have a goal in mind, then you have to think about and research the problem without trying to solve it, then you can think of a solution, and discard it, over and over again. Only then should you begin investing resources into it‚Ä¶ but be prepared to throw it all away.
[12:36:43] <davros> yeah its enough for me that I can do this for my own amusement and somenoe else can try it out aswell
[12:37:11] <kee> KillerWasp: Your projects are very thoughtful and planned, even developed, but they're probably not the projects you should've made.
[12:37:17] <kee> Doesn't mean the work isn't useful for other projects, of course.
[12:37:27] <kee> A 486 emulator is certainly impressive!
[12:37:35] <davros> i know lots of pro artists aswell, but they have kids to feed, they can only do pro art if there's $$ coming in.. i have enough to fund myself but not hire others. So the other guys have this big plan to hustle investors , ramp it up.. but i'm urging caution
[12:37:57] *** Quits: grandrew (~grandrew@104-50-140-129.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 252 seconds)
[12:37:59] <kee> KillerWasp: But a 486 emulator is completely useless as a video game platform. That's the wrong project.
[12:38:10] <epony> https://en.wikipedia.org/wiki/Doom_(1993_video_game)#Engine  "Doom was programmed largely in the ANSI C programming language, with a few elements in assembly language, targeting the IBM PC and MS-DOS platform by compiling with Watcom C/C++ and using the included royalty-free 80386 DOS-extender."  https://www.filfre.net/2020/06/the-shareware-scene-part-4-doom/
[12:38:10] <bayaz> Title: Doom (1993 video game) - Wikipedia 
[12:38:18] <kee> davros: Try to get pre-seed funding if you can.
[12:38:24] <KillerWasp> kee: Why do you say so many stupid things without knowing me? Your comments definitely clash with my dreams and purposes in life. You have no consistency. :/
[12:38:36] <kee> Because I've been there.
[12:38:49] <epony> there is a race car involved, but it was on lease for the picture
[12:38:52] <davros> kee yeah they're the ones with the big startup plan and VC connections, they are very optimistic
[12:39:05] <davros> they have a little startup accelerator funding already
[12:39:19] <davros> and they have an accomplished marketing advisor
[12:39:34] <epony> there is a graphic workstation involved, but it was for one of the team members who insisted he can do better stick figures on it
[12:40:07] <KillerWasp> kee: Do what you want. Keep rambling and spinning, you're going to end up throwing yourself off a cliff like a lemming and you're never going to notice.
[12:40:11] <davros> EdFletcher, it's written in Rust aswell :)
[12:40:26] <davros> thats really the main point of it for me , "what does a whole game engine in rust look like"
[12:41:18] <Decker> is it any better than C?
[12:41:25] <davros> yes i think so, 
[12:41:34] <davros> C, C++ dont stop you making amazing games, but rust can keep you more sane
[12:41:34] <EdFletcher> davros: right on! ü¶Ä 
[12:42:14] <EdFletcher> rust is unarguably better than C, it incorporates ideas that simply didn't exist when C was created 
[12:42:25] <davros> rust has been technically capable since 2015 , but momentum keeps people in C++
[12:42:40] <EdFletcher> momentum and mounds and mounds of legacy code üòÜ 
[12:42:49] <davros> so part of what these guys are hoping is "a new engine, for the web, in rust" will catch a few people
[12:43:04] <kee> EdFletcher: Rust also takes ages to compile and eats all my hard drive space.
[12:43:10] <davros> yeah i dont beleive i can catch up with the feature set of unreal, no matter how good rust is
[12:43:20] <kee> I still use Rust, because C is‚Ä¶ C. But Rust isn't better in all respects.
[12:43:32] <EdFletcher> kee: haha indeed, but C++ used to do the same. compilers get better over time, rustc will too. 
[12:43:42] <KillerWasp> I am only interested in serious people for my projects, those who care about having a better life on track, care about their own future and dreams. And not fall into despair working for others, what JS, what wasm, what NFT/bitcoins, what adsenses, what likes and bells, etc, etc, etc. All this is pure waste of time, useless garbage.
[12:43:44] <EdFletcher> but of course it's not better in _all_ respects, that's bananas. all languages have their warts. 
[12:43:47] <davros> what i find is rust is harder to start with , but pays off as your project grows. its easier to make big changes to a rust program
[12:44:11] <kee> KillerWasp: This is entirely true.
[12:44:16] <no-n> cool I like Rust.
[12:44:45] <kee> Apart from the ‚Äúwhat JS‚Äù and ‚Äúwhat WASM‚Äù bits; while I disagree with using those everywhere, they do have their place.
[12:44:45] <epony> although, it's the worst marketing a job offer can do, there is no race car, no fancy hardware and no good pay involved
[12:45:06] <epony> (where are the girls at the end of the level?)
[12:46:12] *** Quits: gravypod (~gravypod@user/gravypod) (Ping timeout: 252 seconds)
[12:46:29] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[12:46:48] *** Joins: loganlee (~Thunderbi@user/loganlee)
[12:47:14] *** Joins: newwebdev13 (~newwebdev@78.135.92.119)
[12:49:19] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:50:15] *** Joins: password2 (~password8@user/password2)
[12:51:42] *** Joins: sudwin (~sudwin@user/sudwin)
[12:53:01] *** Quits: adder` (~adder@user/adder) (Quit: Leaving)
[12:53:10] *** Joins: Bou (sid274843@user/bou)
[12:53:37] *** Quits: znedw5441 (~znedw@home.znedw.com) (Ping timeout: 240 seconds)
[12:55:29] *** Joins: znedw5441 (~znedw@home.znedw.com)
[12:56:21] <kee> After hearing more about KillerWasp's idea, it actually seems better than I thought.
[13:00:33] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[13:00:48] *** Joins: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk)
[13:01:18] *** Quits: independent56 (~independe@85.255.232.175) (Quit: Ping timeout (120 seconds))
[13:01:26] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[13:01:40] *** Quits: rcesptro (~rcesptro@2001:448a:50e0:23e8:13a7:403a:9cb5:bf8e) (Excess Flood)
[13:02:21] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[13:02:34] *** Joins: independent56 (~independe@85.255.232.175)
[13:05:36] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:07:28] *** Quits: sudwin (~sudwin@user/sudwin) (Ping timeout: 265 seconds)
[13:10:12] <Decker> https://i.ibb.co/YcvC9K4/image.png https://d3x0r.github.io/STFRPhysics/math/mathSphereDecay   I've been pretyt impressed with what JS can do...   some fun with manifolds/curved space?  it is a littleslow; but it's only like 6.3M points in like 300ms.. 
[13:10:12] <bayaz> Type: image/png Size: 280.8 kB 
[13:10:12] <bayaz> Title: Spacial Compression Geodesics 
[13:10:28] <Decker> it has a lot of minor garbage collects - not really sure why
[13:11:30] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Ping timeout: 252 seconds)
[13:12:18] <Decker> const B_0 = (l,x,y,z,w,q) =>{ const xx=x*x; const yy=y*y; const zz=z*z; return (l/Math.sqrt(xx+yy+zz) * Math.sqrt(xx+yy+zz+((invertCurvature?-1:1)* w*w)))/Math.sqrt(xx+yy+zz+w*w) * Math.sqrt(xx+yy+zz+w*w+q*q) }; 
[13:19:31] *** Quits: independent56 (~independe@85.255.232.175) (Ping timeout: 256 seconds)
[13:19:34] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 260 seconds)
[13:20:34] *** Joins: mnlwldr (~mnlwldr@user/mnlwldr)
[13:20:41] *** Joins: independent56 (~independe@85.255.232.175)
[13:21:39] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 250 seconds)
[13:22:08] *** Quits: Inline__ (~Inline@p200300cd472d40002c1b8381bd5618c5.dip0.t-ipconnect.de) (Remote host closed the connection)
[13:23:05] *** Joins: Inline (~Inline@p200300cd472d40002c1b8381bd5618c5.dip0.t-ipconnect.de)
[13:24:49] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[13:24:55] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[13:27:01] <epony> now you only have to find a game engine written in Java or Rust or Go or Javascript
[13:27:05] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[13:27:26] *** Quits: wildo (~lain6141@119.224.72.222) (Quit: leaving)
[13:27:32] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[13:27:33] <epony> should be fairly trivial, they got speed and performance.. so they claimm
[13:28:09] <kee> Game engine in Rust? Easy, fast, efficient, a delight to make.
[13:28:22] <kee> Drawing the output on the screen? Please, no, I beg of you, don't make me do that.
[13:28:31] <epony> or just try LISP, they are the master race of game programmers, and dominate the world of games with their high performance and tamper resist
[13:29:23] <kee> It's not about the language; it's about the libraries.
[13:29:37] <epony> (the hidden story you never hear about, like UFO-logy, is that functional programming in LISP runs the worlds web servers, commerce and aircraft avionics)
[13:29:50] <epony> it's about the language
[13:29:52] <epony> always is
[13:29:53] <kee> People write games in C++.
[13:29:59] <epony> no shit ;-)
[13:30:10] <epony> I heard they use the C subset of it.
[13:30:11] <kee> Why would anybody in their right mind ever even consider that?
[13:30:20] <kee> Except that it means you can use GoDot and Unreal.
[13:31:08] <epony> functional programming is hipster now, try it, you will be winning awards if you manage to pull that over
[13:32:11] <kee> ‚ÄúFunctional programming‚Äù was never cool.
[13:32:22] <kee> Just like Java-style ‚Äúobject oriented programming‚Äù was never cool.
[13:32:30] <epony> there are some entries in JS though  https://en.wikipedia.org/wiki/List_of_game_engines
[13:32:31] <bayaz> Title: List of game engines - Wikipedia 
[13:33:03] <kee> > Open source Entity component system WebVR framework
[13:33:09] <kee> No, there aren't. ;-)
[13:33:21] <epony> hay, don't knock on mobile phone (mofo) games, they are all Java and should be very popular, according to people on IRC today
[13:33:50] <kee> Every viable Java program I've ever seen bypasses Java-style OO in some way.
[13:34:01] <kee> The Java-style OO paradigm should not exist.
[13:34:28] <Decker> https://d3x0r.github.io/Voxelarium.js/index2.html  or write one  
[13:34:32] <Decker> it's webXR now btw
[13:34:47] <kee> At least pure functional is usable, once you've managed to bootstrap yourself up to a reasonable abstraction. Java-style OO just gets worse and worse the bigger your program is.
[13:35:16] <epony> check it out, it has top and bottom parties  https://en.wikipedia.org/wiki/Game_engine_recreation#Methods
[13:35:16] <bayaz> Title: Game engine recreation - Wikipedia 
[13:35:46] <epony> someone even managed to slide in ARM advertisement in there
[13:35:54] <epony> muahahahaha
[13:36:59] <Decker> https://www.youtube.com/watch?v=XF29nLkkeLo  recent
[13:37:00] <bayaz> Title: Building VR and AR experiences using HTML | HTTP 203 
[13:37:22] <epony> 404 looks more powerful
[13:38:01] <smallville7123> hmmm i cant figure out how to correctly explain what 5 & ~3 does in comparison to 5 & 3
[13:38:29] <epony> https://en.wikipedia.org/wiki/List_of_common_3D_test_models#Models_by_year_of_creation
[13:38:29] <bayaz> Title: List of common 3D test models - Wikipedia 
[13:38:42] <kee> A bit is set in 5 & ~3 if it is set in 5 and not 3.
[13:39:02] *** Joins: Natch (~natch@c-67bae255.014-297-73746f25.bbcust.telenor.se)
[13:39:05] <Decker> 0b101 & 0b111111100
[13:39:29] <Decker> &4
[13:39:41] <kee> The 0/1 bit is set in 5, but also in 3, so 0
[13:39:49] <kee> The 0/2 bit is not set in 5, so 0
[13:39:50] <Decker> in ~3
[13:39:53] *** Joins: Rounin (~david@84.212.130.215)
[13:39:57] <epony> https://en.wikipedia.org/wiki/Hyper_Text_Coffee_Pot_Control_Protocol#Commands_and_replies
[13:39:58] <bayaz> Title: Hyper Text Coffee Pot Control Protocol - Wikipedia 
[13:40:04] <kee> The 0/4 bit is set in 5 but not 3, so 1
[13:40:13] <kee> No other bits are set in 5, so all the rest are 0.
[13:40:37] <epony> https://en.wikipedia.org/wiki/Vrml#Emergence,_popularity,_and_rival_technical_upgrade
[13:40:38] <bayaz> Title: VRML - Wikipedia 
[13:40:54] <smallville7123> the way i am currently explaining it, is the following
[13:41:01] <Donitz> do most online accounts discriminate towards people with a single name?
[13:41:17] <epony> "In a March, 1998 ACM essay, "Playfulness in 3D Spaces -- Why Quake is better than VRML, and what it means for software design", Clay Shirky sharply criticised VRML as a "technology in search of a problem", whereas "Quake does something well instead of many things poorly...The VRML community has failed to come up with anything this compelling"
[13:41:18] <Donitz> it seems to almost always be a given that you have 2 names
[13:41:48] <kee> Donitz: Most don't, in my experience.
[13:42:00] <kee> Then again, I only tend to sign up for worthwhile things.
[13:42:00] <epony> ur wowser failed in plain 2.5D, now you're pushing 3D with VR and AR
[13:42:16] <Decker> A-frame's a little better than VRML: vrml was good at static scenes... but was weak with textures and effects
[13:42:25] <Donitz> I strongly recommend skipping A-frame
[13:42:32] <Donitz> and going straight to three.js which it is based on
[13:42:38] <Donitz> unless you are a non-coder
[13:42:52] <Decker> aye
[13:43:03] <epony> https://en.wikipedia.org/wiki/STL_(file_format)#Use_in_other_fields
[13:43:04] <bayaz> Title: STL (file format) - Wikipedia 
[13:43:27] <smallville7123> /// returns objects only if they are present in both lists
[13:43:27] <smallville7123> /// when given a "bit-flipped" list (bitwise NOT ( ~a ) )
[13:43:27] <smallville7123> /// if the list is empty, returns an empty list with no objects
[13:43:39] <epony> the teapot is very viral despite the antiviral properties of T-potting in general
[13:44:31] <smallville7123> and im not sure what to put for when the list is not empty
[13:45:32] <Decker> what do you put for a non empty list?
[13:45:41] <Decker> oh for a empty list
[13:45:45] <epony> https://en.wikipedia.org/wiki/List_of_freeware_first-person_shooters#Game_engines
[13:45:45] <bayaz> Title: List of freeware first-person shooters - Wikipedia 
[13:46:20] <smallville7123> eg when the list represents {1, 1, 1, 1} & {0, 0, 1, 1} then the result is {0, 0, 1, 1} as per above since `1` is present in both lists and in correct position in both lists
[13:46:40] <kee> That's just &, not & ~.
[13:47:00] <smallville7123> eg when the list represents {1, 1, 1, 1} & ~{0, 0, 1, 1} then the result is {1, 1, 0, 0} due to the bits being flipped
[13:47:08] <kee> Yes.
[13:47:33] <smallville7123> how would i go about explaining that?
[13:47:37] *** Quits: fe23 (~fe23@2409:8a34:466:6010:b43d:b4dc:73d0:6634) (Ping timeout: 240 seconds)
[13:47:45] <Decker> just like you did
[13:47:56] *** Joins: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro)
[13:48:34] <smallville7123> would this do?
[13:48:36] <smallville7123> // if the list is not empty, returns a list that is the inverse of what would be returned if not given a "bit-flipped" list
[13:49:38] <kee> Does it actually do f(a, b) = a & ~b ?
[13:49:54] <smallville7123> kee: what do you mean?
[13:50:11] <kee> What are the function arguments and what is the return statement?
[13:50:28] <smallville7123> the function arguments is a list itself
[13:50:39] <kee> One list?
[13:50:39] <smallville7123> eg an integer array for example
[13:50:58] <smallville7123> `a` and `b` could be two seperate int[] arrays
[13:51:05] <kee> Two lists, then. Gotcha.
[13:51:25] <kee> And what does it return?
[13:51:27] <smallville7123> or rather bool[] for simplicity
[13:51:48] <smallville7123> as true and false directly maps to 0 and 1
[13:52:09] <smallville7123> it returns a new list containing the computed result
[13:53:56] <kee> What's the computation?
[13:54:09] <kee> If it's a & ~b, your comment makes no sense.
[13:54:21] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[13:54:25] *** Joins: sudwin (~sudwin@103.154.47.65)
[13:54:50] *** sudwin is now known as Guest6376
[13:55:46] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Client Quit)
[13:56:38] *** Quits: Guest6376 (~sudwin@103.154.47.65) (Changing host)
[13:56:38] *** Joins: Guest6376 (~sudwin@user/sudwin)
[13:56:44] <davros> smallville7123, does a HashSet<T> have what you need, or is there a reason you need lists
[13:56:53] *** Guest6376 is now known as sudwin
[13:58:00] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[13:58:20] *** Joins: Stefan26 (~Stefan26@78-67-218-242-no207.tbcn.telia.com)
[14:00:28] *** Joins: jsmooth (~quassel@2600:6c54:7b00:0:2514:89c2:f0c4:6ce0)
[14:05:02] <smallville7123> hmm the | is difficult to explain
[14:05:36] <Hash> https://www.youtube.com/watch?v=3sMilRCycgo playing the custom d2mod live now
[14:05:37] <bayaz> Title: Ironman Mod (DEMO v7) for Diablo 2: LOD 1.10F - Necromancer 
[14:05:59] <Hash> Currently transformed into a Satyr using a Satyr soul I coded
[14:06:13] <Hash> heh monsters now drop souls you can turn into that monster and get their abilities
[14:06:34] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:07:54] <smallville7123> i think the best i can explain it would be      /// if the list is not empty, returns a list with no objects added
[14:08:23] <kee> What it does in the case of "when it's empty" is just an edge-case, surely?
[14:08:33] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[14:08:38] <smallville7123> -1 represents an empty list
[14:08:49] <kee> -1 represents a full list?
[14:08:54] <kee> 0 normally represents something empty.
[14:09:01] *** Joins: jsmooth_ (~quassel@2600:6c54:7b00:0:896c:cf14:a3bb:84b9)
[14:09:12] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[14:09:23] <smallville7123> yea
[14:10:18] <smallville7123> 0 explicitly tests for an empty list, -1 explicitly returns an empty list since it is impossible to return a list with infinite `inverted` bits because a list can be of any size
[14:10:42] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[14:11:02] *** Quits: jsmooth (~quassel@2600:6c54:7b00:0:2514:89c2:f0c4:6ce0) (Ping timeout: 240 seconds)
[14:11:05] <smallville7123> if the list was fixed to 32 items then -1 simply returns a list with all items set to 1
[14:11:36] <kee> If -1 is a 32-bit type, then -1 is 32 1s.
[14:11:42] <smallville7123> but since the list MUST support a variable number of bits it cannot be fixed size
[14:11:48] <kee> If it's a 64-bit type, then it's 64 1s.
[14:12:05] <smallville7123> yea
[14:12:06] <kee> In a 64-bit type, 32 1s is 4294967295.
[14:12:13] *** Joins: Atque (~Atque@user/atque)
[14:12:14] *** Joins: audiobirb (~audio@user/audio)
[14:12:42] *** Quits: sudwin (~sudwin@user/sudwin) (Ping timeout: 265 seconds)
[14:13:00] <kee> -1 is a convenience of notation, but if you're doing bit twiddling, you should really have these as unsigned types.
[14:14:45] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[14:17:59] *** Quits: rsx (~dummy@ppp-188-174-156-215.dynamic.mnet-online.de) (Quit: rsx)
[14:23:23] *** Quits: osXnut (~osXnut@77.125.126.151) (Quit: leaving)
[14:24:26] <smallville7123> still
[14:26:33] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[14:26:58] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[14:29:16] *** Quits: ttree (~ttree0@c-24-17-16-242.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[14:29:54] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[14:32:15] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[14:33:23] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[14:36:27] *** Joins: Atque (~Atque@user/atque)
[14:38:42] *** Joins: aradesh (~aradesh@user/aradesh)
[14:39:38] *** Joins: rsx (~dummy@ppp-188-174-156-215.dynamic.mnet-online.de)
[14:42:46] *** Joins: zaher (~zaher@37.48.191.19)
[14:42:53] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[14:43:23] *** Quits: icy_troubles (~icy_troub@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com) (Ping timeout: 256 seconds)
[14:44:47] *** Joins: icy_troubles (~icy_troub@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com)
[14:45:27] *** Joins: sudwin (~sudwin@103.154.47.65)
[14:45:51] *** sudwin is now known as Guest7699
[14:48:41] *** Quits: mnlwldr (~mnlwldr@user/mnlwldr) (Quit: Before calling me, ask yourself ... Is it textable?)
[14:52:01] <ProfSimm> If God was a computer, how would his Bible start: "In the beginning was associativity... And God said let there be order" or would it start "In the beginning was order... And God said let there be associativity"
[14:52:17] <ProfSimm> Ordered things or mapped things. Which is more fundamental
[14:52:59] <kee> If God was a computer, order.
[14:53:04] <kee> If God was a mathematician, mapped things.
[14:53:30] <dodo> if your brain can explain it, whatever you conceive is not God
[14:53:49] <ProfSimm> kee: nice answer
[14:54:17] <ProfSimm> Order is like N steps of time in 1 dimension, associativity is lik e1 step in time across N dimensions.
[14:54:28] <ProfSimm> They're both mutually fundamental I guess
[14:54:48] <kee> There are many sets of fundamental axioms you can pick, and then derive other things in terms of those axioms.
[14:55:00] <kee> It's difficult to get mathematicians to appreciate this.
[14:55:02] <pyzozord> I'd say associativity is more fundamental
[14:55:19] <kee> Well, I'd say arrays are more fundamental.
[14:55:19] <pyzozord> you can build order with associativt, you can't build associativty with order
[14:55:29] <kee> pyzozord: Sure you can!
[14:55:50] <kee> You can implement a dictionary in memory.
[14:55:54] <pyzozord> assuming order is n => n+1 I don't think so
[14:56:25] <kee> Considering the C memory model is arrays, and you can make dictionaries in C, you definitely can.
[14:57:30] <ProfSimm> You can do one with the other, yeah
[14:57:36] <ProfSimm> Both ways
[14:57:38] <pyzozord> with associativity you can do (((1) 2) 3) or (1 (2 (3))) but with order you cannot change anything: 1 2 3 
[14:58:00] <nomagno> Hm, between rule 110 and SK combinator calculus, which is the simpler Turing-complete system?
[14:58:07] <ProfSimm> Memory itself is honestly not ordered, it's associative. The ADDRESS is ordered, but that's a convention, not a necessity
[14:58:08] <nomagno> Storage wise, I guess
[14:58:33] <user51> ProfSimm: does 'order' mean the same thing as 'sequential'?
[14:58:44] <ProfSimm> user51: yes I guess
[14:58:57] <nomagno> Rule 110 I assume is both simpler to implement in imperative machine code CPUs and requires less symbols
[14:59:02] <nomagno> But SK has far fewer riles
[14:59:05] <ProfSimm> user51: order is the paricular combination of being sequential in
[14:59:09] <nomagno> rules*
[14:59:30] <user51> ProfSimm: and associativity is like a tree?
[15:00:02] *** Quits: suss (~user@user/suss) (Ping timeout: 250 seconds)
[15:00:19] <ProfSimm> user51: sequence is like a tree where a branch always branches into... one branch. One branch forever. And associativity is like a branch that branches just once, but into infinite branches.
[15:01:10] <user51> sounds like arrays and pointers to me. grab yourself a malloc :)
[15:01:32] <ProfSimm> It sounds like many things because it's so fundamental to computing
[15:02:02] <ProfSimm> If we are iterating a tree, we can imagine a sequence as a record of the path we took into a tree. It's linear.
[15:02:25] <ProfSimm> And associativity is the options we have for taking the next step in that path (branch into one of inf branches)
[15:02:36] *** Quits: zwr (~zwr@2804:d45:b966:fb00:cd2d:c396:a30e:b814) (Ping timeout: 240 seconds)
[15:02:38] <user51> branches are also sequential, right?
[15:03:25] <ProfSimm> user51: they can be considered sequential in that key -> value, but not necessarily value -> key
[15:03:30] *** Quits: rsx (~dummy@ppp-188-174-156-215.dynamic.mnet-online.de) (Quit: rsx)
[15:03:31] <ProfSimm> It's moving in a specific direction
[15:03:35] <ProfSimm> But it's one step only
[15:03:47] *** Joins: zwr (~zwr@2804:d45:b966:fb00:8c9f:2901:a9f3:b788)
[15:04:32] <ProfSimm> One could say sequence is "time" and associativity is "space"
[15:05:01] <Inline> thing and view
[15:05:18] *** Joins: stagas_ (~stagas@2a02:587:c4b9:78f2:b288:b086:dbcf:53fa)
[15:05:37] <Inline> thing has an order, view has an order, thing has a fixed order, view has a variable order
[15:05:58] <Decker> ProfSimm REST is the best of the worst situation.   
[15:06:48] <Decker> for a 'we need this to communicate' and you have full control over both ends of software - one would never implement anything like rest
[15:07:04] <kee> Would they not?
[15:07:19] <Decker> unless they're some script kiddy that only leverages APIs supplied with development environments
[15:07:24] <kee> REST is basically ‚Äúuse HTTP semantics‚Äù.
[15:07:38] <kee> It's like ‚Äúsemantic HTML‚Äù: ‚Äúsemantic HTML‚Äù is just doing HTML right.
[15:07:40] <Decker> there's logic to the routing specification, and querying the API endpoint
[15:07:44] *** Joins: vitali64 (~vitali64@user/vitali64)
[15:08:06] <kee> ‚ÄúLogic to the routing specification‚Äù is a fancy way of saying ‚Äúname stuff sensibly‚Äù.
[15:08:21] *** Quits: stagas_ (~stagas@2a02:587:c4b9:78f2:b288:b086:dbcf:53fa) (Client Quit)
[15:08:41] *** Joins: stagas (~stagas@2a02:587:c4b9:78f2:b288:b086:dbcf:53fa)
[15:09:04] <kee> If REST produces a bad API, 9 times out of 10, somebody was rigidly following a list of heuristics without seeing the forest.
[15:09:11] *** Joins: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[15:10:08] <ProfSimm> Decker: I don't know. HTTP permits many kinds of APIs. Say GraphQL is HTTP compliant, but not "REST"
[15:10:13] <Decker> eh; so I have this new environment, and the compiler is included, so I can send the API script to the client and they just get it - can een have docs; though often just logging the object gives you the functions to call to do things.
[15:11:02] <Decker> graphql isn't really related to http - it's http complient like any text file is
[15:11:50] <ProfSimm> Decker: the paradox is that REST if done right can be a "learning tool" while implementing calls to a REST API, sure. But then when you're done, you embedded this process of learning in your program through the number of requests and extra in-channel signal (now noise) that you need to read all the time
[15:12:01] <ProfSimm> Decker: we have to decouple the learning from the data
[15:12:09] <ProfSimm> Decker: and REST does the opposite
[15:12:35] <epony> the rest from the room
[15:12:46] <epony> and crud from the milk
[15:12:49] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[15:12:49] <ProfSimm> Decker: on the web we always open a slightly different website and we need the links inside and so on.
[15:13:08] <ProfSimm> Decker: but with APIs we implement a client, and then that client does the same thing thousands or millions of times on its own.
[15:13:19] <Decker> ProfSimm Sure HTTP is great for static content delivery
[15:13:28] <kee> ProfSimm: The overhead is fairly minimal.
[15:13:39] <kee> And if you do semantic HTTP you get stuff like caching completely free.
[15:13:45] <kee> It's usually worth the overhead.
[15:13:48] <ProfSimm> kee: it's minimal only because you're tolerant to it, not because it's small.
[15:13:55] <kee> If it's not worth the overhead, why use HTTP?
[15:13:57] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[15:14:14] <Decker> it's the way the world is patched together :)
[15:14:15] <ProfSimm> kee: HTTP caching is mostly useless for APIs. 
[15:14:18] <kee> The overhead of HTTP is quite high, but the additional overhead of being RESTy is quite low.
[15:14:23] <ProfSimm> kee: worse, it's often harmful.
[15:14:25] <kee> ProfSimm: Mostly. But when it's useful, you get it.
[15:14:34] <kee> And if your API is RESTy, you don't get it when it's harmful.
[15:14:39] <ProfSimm> kee: it's almost never useful.
[15:14:47] <kee> I've found it useful loads.
[15:14:55] <kee> What kind of system do you have where it isn't useful?
[15:15:00] <ProfSimm> kee: it's useful when it links to images and so on static assets. Which any API could do
[15:15:28] <ProfSimm> kee: it's harmful when it links to anything at all that changes constantly. Or even worse when you have a cache that's different than other cache
[15:15:43] <kee> Caching doesn't just mean ‚Äúdon't send a request‚Äù.
[15:16:00] <kee> It can mean the server replies ‚Äúyeah, your cache is still good‚Äù instead of re-sending several MBs of data.
[15:16:02] <ProfSimm> kee: i.e. user X is single in his resource, but in user Y's resource, his friend X is married, and both are in your cache
[15:16:33] <kee> Yes: this is why caching is hard and you should avoid implementing it yourself if you don't have to.
[15:16:41] <ProfSimm> kee: in highly interconnected data responses, verifying "your data is still good' is basically the same as sending back a new response
[15:16:48] <Inline> with 1 cache 2 birds
[15:16:50] <Inline> lol
[15:17:14] <ProfSimm> kee: it's not hard when I implement it. It's only hard when I need to treat data as a REST resource which it's NOT suited for
[15:17:14] <kee> Can you give a more specific example of your use-case?
[15:17:22] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 250 seconds)
[15:17:48] <ProfSimm> kee: I'll defer to Roy Fielding who said REST is for large static resources. Most APIs work with the exact opposite of that. Small and dynamic.
[15:18:14] <ProfSimm> kee: so let's not pretend like REST is good for something it's explicitly not made for
[15:18:26] *** Joins: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk)
[15:18:26] *** Quits: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk) (Changing host)
[15:18:26] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[15:18:52] <kee> You haven't given an example of a use-case that REST is bad for, only asserted that it's bad for ‚Äúmost APIs‚Äù because they work with small dynamic resources.
[15:19:07] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[15:19:14] <ProfSimm> kee: I gave you an example of cache incoherence you didn't address it at all
[15:19:42] <kee> That kind of cache failure happens because you're caching state inside your system.
[15:19:46] <kee> That's not an HTTP caching issue.
[15:19:54] <kee> So it's not in-scope when we're talking about REST.
[15:19:55] <ProfSimm> kee: no exactly the opposite
[15:19:56] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[15:20:10] <ProfSimm> kee: I was talking about two REST resources 
[15:20:19] <ProfSimm> kee: have you heard of resource expansion
[15:20:26] <kee> I don't understand what you mean.
[15:20:32] <ProfSimm> kee: it implies one resource contains another in a RESTful API
[15:20:36] <Inline> what's the cache for if not state ?
[15:20:38] <kee> Next time somebody wants to check the status, they'll send a request to the server with the e-tag.
[15:20:40] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[15:20:52] <kee> And then the server will say ‚Äúoops, that's out of date, here's the new version‚Äù.
[15:20:55] <ProfSimm> kee: which means you can have N caches of the same thing, and all saying that thing has N different states
[15:20:55] <kee> Then everyone will be happy.
[15:20:59] <caveman> what's the best way to create cross platform apps that are also lightweight?
[15:21:04] <kee> ProfSimm: Yes, this is how caching works.
[15:21:12] <kee> caveman: You don't.
[15:21:15] <Decker> JS
[15:21:22] <ProfSimm> kee: that's not how "caching works" that's how REST's incoherent caching works
[15:21:27] <caveman> kee: details please.
[15:21:50] <Inline> err
[15:21:50] <kee> caveman: There's no good cross-platform application framework. The best thing is using web technologies, but it's really hard to keep that lightweight.
[15:22:01] <Inline> if that were true my hw cache would be always coherent
[15:22:02] <ProfSimm> kee: I don't feel like you understand the problem, you just look to deflect blame on the users for something that's in the spec
[15:22:06] <pyzozord> ProfSimm: "compliant" is not the same as "use http semantics". One means "make sure it works in" other means "makes use of most of the features"
[15:22:16] <Inline> i somehow doubt it is always coherent tho
[15:22:16] <caveman> kee: lightweight as in app's size will be large?  or the run-time will consume too much cpu/ram?
[15:22:20] <kee> Both!
[15:22:29] <Decker> in amount of code written
[15:22:30] <Inline> maybe the incoherence is lifted up to higher level caches ?
[15:22:48] <smallvil_> when would a bitwise operation need to be compared against -1 instead of 0 ?
[15:22:50] <Inline> so it's improbable to ever get caught ?
[15:22:58] <caveman> kee: just to get an idea about what's the size of bloat we're talking about.  could you please share some numbers?  like what kind of app sizes, memory requirements, and cpu time should i expect with such bloat?
[15:23:10] <kee> smallvil_: Mu. That question doesn't really have an answer.
[15:23:21] <kee> When would an arithmetic calculation need to be compared against 0 instead of 5?
[15:23:24] <Decker> caveman what sort of thing were you thinking of writing? 
[15:23:37] <smallvil_> would -1 be used to test if any bit is set ?
[15:23:43] <kee> caveman: Do you have Discord, Spotify or Microsoft Teams on your computer?
[15:23:50] <ProfSimm> kee: you can study how Netflix had this problem with REST, on top of performance problems and how they moved from it to GraphQL and how their coherent cache system works
[15:24:03] <kee> caveman: Microsoft Teams is worst-case, Discord is average case and Spotify‚Ä¶ not sure, probably also around average.
[15:24:12] <kee> With effort you can do better, but you need to do a lot of profiling and stuff.
[15:24:17] <ProfSimm> kee: REST is basically too "dumb" to describe interconnected fine small data items. 
[15:24:51] <ProfSimm> kee: resource expansion while considered REST is not part of HTTP spec, so it's useless to say browsers
[15:24:53] <kee> REST, where identifiers are hierarchical, is not good for representing relational database queries.
[15:25:02] <kee> This is not really an insight.
[15:25:12] <ProfSimm> kee: not what I'm talking about 
[15:25:31] <kee> You're talking about how REST causes problems I've literally never had with REST.
[15:25:41] <kee> I do REST properly.
[15:25:50] <kee> It's possible, though, I've never encountered your use-case.
[15:26:05] <ProfSimm> kee: you probably do "REST" where you control the single client, and have very modest needs, and your API is optimized for your client.
[15:26:17] <ProfSimm> kee: it's easy to have no problems with REST when you're doing something basic
[15:26:22] <kee> I hardly think I control the single client when the client is a web browser!
[15:26:33] <ProfSimm> kee: seriously now.
[15:26:46] <kee> Two words. Internet Explorer.
[15:26:55] <ProfSimm> kee: browsers don't call REST APIs on their own, can you please stop being cheesy
[15:27:28] <kee> I don't understand how single client has anything to do with it.
[15:27:33] <ProfSimm> Also Internet Explorer's been dead for like 5 years, are you chatting from the past :P
[15:27:33] <smallvil_> is it common to test if a bitwise operation results in a value of -1 ?
[15:27:50] <ProfSimm> kee: well you don't understand a lot of what i say
[15:27:56] <kee> Sometimes I have multiple different front-ends, but they all do the same thing as each other (because they're all using the API correctly) so I don't see how that makes any difference.
[15:28:27] <kee> smallvil_: If you want to check whether all the bits are set, yeah.
[15:28:36] <kee> That's what `== -1` means.
[15:30:02] <pyzozord> I thought REST is basically formalization of client-server architecture for users for programs
[15:30:05] <kee> ProfSimm: I've had an HTTP API that got called by an XSLT stylesheet. Is that complex enough?
[15:30:13] <ProfSimm> kee: no
[15:30:23] <kee> What's complex, then?
[15:30:56] <ProfSimm> kee: study the problems I mentioned, and you'll understand the solutions (that are not REST). 
[15:31:02] <smallvil_> hmm ok
[15:31:05] <kee> I understand the solutions that are not REST.
[15:31:14] <smallvil_> welp
[15:31:14] <smallvil_> NOTE: unlike a binary bitwise comparison, comparing against -1 cannot be done for a list since we use -1 to represent an empty list which also matches ZERO since an empty list has no "bits" set in it (it has no objects)
[15:31:41] <ProfSimm> kee: you seem very eager to say you understand everything, but I don't think you've acknowledged the issue of cache coherency even, yet.
[15:31:43] <Decker> -1 with errno=EAGAIN?  or 0 
[15:31:58] <Decker> why would you use anything other than 0 for 0 ?
[15:32:00] <pyzozord> ProfSimm: REST has as a core tenant cachability
[15:32:05] <kee> ProfSimm: What do you want me to say?
[15:32:08] <ProfSimm> pyzozord: yes
[15:32:13] <caveman> Decker: some diet calculator.  
[15:32:19] *** Joins: Satin (uid193953@user/Seten)
[15:32:23] <smallvil_> Decker: ?
[15:32:26] <kee> Cache coherency isn't an issue if you specify the correct caching semantics, unless something's ignoring the caching semantics.
[15:32:26] <caveman> kee: no.  i don't have any of those immoral apps.
[15:32:39] <kee> Then sorry, I can't help you.
[15:32:49] <kee> I don't have them because they're too resource-intensive for my computer.
[15:32:59] <ProfSimm> kee: it's not about "caching semantics" at all
[15:33:07] *** Quits: Guest7699 (~sudwin@103.154.47.65) (Changing host)
[15:33:07] *** Joins: Guest7699 (~sudwin@user/sudwin)
[15:33:15] <caveman> kee: what do you think about flutter?
[15:33:16] <ProfSimm> kee: rather, REST has no way to express "part of this response is part of another response'
[15:33:23] <kee> caveman: Doesn't do desktop well.
[15:33:39] <ProfSimm> kee: how do you express in caching semantics "resource X contains resource Y also accessible via URL Z"
[15:33:47] <ProfSimm> kee: I'm keen to hear.
[15:33:58] <kee> You don't.
[15:34:03] <kee> I do that by referencing resource Y.
[15:34:05] <pyzozord> ProfSimm: you can express that in the data you return
[15:34:11] <pyzozord> that's what graphql does
[15:34:15] <caveman> kee: what if we ignore desktop for now, and only focus on android and ios:  which framework do you recommend?  
[15:34:22] <kee> Flutter's as good as any.
[15:34:24] <ProfSimm> kee: so now you need to do like 500 requests to get the data for a single home page
[15:34:34] <kee> But HTTP supports sending those all at once.
[15:34:51] <kee> I can just send those 500 responses when the home page is requested.
[15:34:52] <ProfSimm> kee: it doesn't matter much if you sent them "at once"
[15:34:58] <smallvil_> imma just add
[15:35:01] *** Joins: Gallomimia (~Gallomimi@node-1w7jra2a2gqpxl51se5m1r9ba.ipv6.telus.net)
[15:35:02] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Ping timeout: 240 seconds)
[15:35:10] <smallvil_> if you need to explicitly test if ALL bits are set, use the following: list != ZERO'
[15:35:12] <ProfSimm> kee: if you think the performance is the same as one request, you really have no idea what you're talking about
[15:35:32] *** Joins: plastico (~plastico@neomutt/plastico)
[15:35:43] <kee> ‚Ä¢ 500 is an exaggeration; I've never had more than 40 in practice.
[15:35:53] <kee> ‚Ä¢ I never said the performance was the same.
[15:36:09] <kee> I said the overhead was low, if REST made sense.
[15:36:19] <ProfSimm> kee: so you traded cache coherence for bad performance
[15:36:24] <kee> ‚Ä¶ No?
[15:36:28] <kee> The performance isn't bad.
[15:36:41] <ProfSimm> kee: you keep saying "it's not bad" as if you have the only REST app in the universe.
[15:36:45] <kee> It's perhaps 10% overhead.
[15:36:51] <kee> And then the caching is handled for me.
[15:37:05] <kee> In practice it's more like 2% overhead.
[15:37:17] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[15:37:24] <ProfSimm> Your particular case doesn't matter. I'm sure it's full of apps with low needs where it doesn't matter what you use at all.
[15:37:49] <kee> Gigabytes of data is ‚Äúlow needs‚Äù?
[15:37:50] <ProfSimm> kee: well as long as we'll bring out unsupported numbers I'll say the overhead is 140%
[15:38:07] <arahael> i feel kee is referring to http push.
[15:38:07] <pyzozord> honestly in my company we are removing graphql because noone uses it
[15:38:09] <kee> Do you know how big a HTTP response header is?
[15:38:12] <pyzozord> and I work for a big company
[15:38:21] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 252 seconds)
[15:38:22] <ProfSimm> kee: you keep talking about HTTP, the problem is not there at all
[15:38:39] <kee> ProfSimm: You clearly don't understand what REST is.
[15:38:40] <pyzozord> and I personally find graphql nothing very special, for the most part more annyoing then useful
[15:38:42] *** Joins: palasso (~palasso@user/palasso)
[15:38:42] <ProfSimm> kee: the problem is you sent N individual requests to a server, it'll need to serve N individual responses.
[15:38:52] <kee> ProfSimm: You send 1 individual request and the server sends N responses.
[15:38:55] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[15:38:59] <pyzozord> and I don't think there is anything in graphql that cannot be implemented in rest
[15:39:03] <ProfSimm> kee: you keep thinking this is about HTTP
[15:39:10] <kee> Because it is.
[15:39:15] <kee> REST is HTTP semantics.
[15:39:20] <ProfSimm> kee: no, it's about also two applications communicating via HTTP.
[15:39:21] <pyzozord> since graphql is essentially built on top of HTTP and REST is HTTP
[15:39:34] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[15:39:40] <ProfSimm> kee:  if you fragment your request into N requests the server on the other side can't magically put them together into one request.
[15:39:41] <pyzozord> REST is HTTP + "make your endpoints nice and separate"
[15:39:44] <kee> pyzozord: GraphQL can describe relational database-type semantics that would be hell to implement in REST.
[15:39:45] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[15:39:46] <arahael> kee: it would help if you mentioned the specific technique, http push is not common, but it still has many of the drawbacks.
[15:40:08] *** Joins: Twipply (~Twipply@user/twipply)
[15:40:17] <kee> ProfSimm: Chrome can.
[15:40:37] <kee> You're the one saying Internet Explorer is dead; IE's the only major browser that can't.
[15:40:37] <ProfSimm> kee: Dude, my point is flying waaay above your head
[15:40:40] <pyzozord> kee: I don't think so. Old facebook api rest api was doing that without problems
[15:40:46] <arahael> pyzozord: graphql has one potential advantage: the caller can define how they want to partition the data.
[15:40:47] <pyzozord> I think twitter api does it too
[15:40:56] <ProfSimm> kee: we're not taking about HTTP multiplexing
[15:41:15] <pyzozord> arahael: yeah sure, that could be implemented in rest if needed too
[15:41:20] <kee> pyzozord: I mean, technically that's REST‚Ä¶ but it's got query parameters and stuff.
[15:41:23] <ProfSimm> kee: we're talking about the actual server needing to produce N responses for N requests. It doesn't MATTER they came over ONE SOCKET, do you get it
[15:41:36] <arahael> pyzozord: yes, but that would involve meetings with the  backend engineers.
[15:41:39] <kee> ProfSimm: I get it.
[15:41:41] <kee> You don't.
[15:41:57] <ProfSimm> kee: this server will open N transactions, ping N caches and do N thigns to produce N responses
[15:42:01] <kee> HTTP supports the client sending ONE (1) request and receiving N requests.
[15:42:07] <ProfSimm> kee: and it won't be able to figure out the use case patterns in your apps
[15:42:11] <kee> s/N requests/N responses/
[15:42:16] <pyzozord> arahael: yep that's true, and I think that's the core point behind graphql. "Formalize REST-like api"
[15:42:27] <kee> ProfSimm: ‚Ä¶ You're arguing from theory.
[15:42:29] <ProfSimm> kee: first, this is not describing HTTP correctly. Multiplexing works both ways
[15:42:40] <ProfSimm> kee: and second, you still keep pushing this to HTTP 
[15:42:43] <kee> I'm not talking about multiplexing.
[15:42:53] <kee> Also, REST is just HTTP semantics.
[15:42:56] <arahael> pyzozord: however the intention is, it is indeed the core point for graphql.
[15:43:18] <arahael> kee: REST is not http semantics.
[15:43:24] <ProfSimm> kee: HTTP is also one response per one request, so wtf you're talking about
[15:43:37] <kee> ProfSimm: HTTP/2 push, as was mentioned aaaages ago.
[15:43:42] <ProfSimm> kee: dude.
[15:43:43] <pyzozord> ProfSimm: HTTP2 can be multiple responses per one request
[15:43:48] <ProfSimm> dude
[15:43:54] <ProfSimm> HTTP/2 push was deprecated, wtf
[15:44:04] <kee> It still works?
[15:44:08] <ProfSimm> No it doesn't
[15:44:24] <arahael> see, this why it is good to actually mention the specific thing you're talking about.
[15:44:26] <pyzozord> i didn't hear about deprication of push
[15:44:50] <ProfSimm> https://www.ctrl.blog/entry/http2-push-chromium-deprecation.html
[15:44:51] <bayaz> Title: Chrome to remove HTTP/2 Push 
[15:45:16] <Decker> ya that's been in the works for a while - should have complained you were going to miss it sooner :)
[15:45:24] <ProfSimm> How the heck does the REST expert come to me and talk to me for half an hour about relying on tech that doesn't EXIST IN THE STANDARD ANYMORE
[15:45:40] <ProfSimm> I think that's a QED
[15:45:50] <pyzozord> I don't think they followed up on this
[15:46:06] <pyzozord> also chrome is not deciding on the actual HTTP standard does it
[15:46:08] <ProfSimm> pyzozord: they're the one claiming REST has been perfect for everything they do
[15:46:19] <kee> ProfSimm: I have repeatedly said it's not perfect for everything.
[15:46:25] <arahael> also https://groups.google.com/a/chromium.org/g/blink-dev/c/K3rYLvmQUBY/m/vOWBKZGoAQAJ?pli=1
[15:46:27] <ProfSimm> pyzozord: it doesn't matter, it's just deprecated as a whole. It didn't pan out
[15:46:35] *** Joins: duuude (~user@user/duuude)
[15:46:41] <kee> ProfSimm: Google deprecated alert()
[15:46:59] <kee> I've grown dumb to their deprecation announcements.
[15:47:31] <ProfSimm> kee: "According to the Google Chrome team, Server Push in HTTP/2 and gQUIC is rarely used, and the pushed resources are more often unused than used."
[15:47:33] <pyzozord> in my company push is alive and used a lot
[15:47:39] <ProfSimm> kee: I think they have more data than you
[15:47:45] <Decker> https://groups.google.com/a/chromium.org/g/blink-dev/c/K3rYLvmQUBY
[15:47:49] <bayaz> Title: Intent to Remove: HTTP/2 and gQUIC server push 
[15:48:25] <ProfSimm> kee: furthermore, push was not even related to the issue we were discussing.
[15:48:30] <pyzozord> it doesn't seem like they did anything about it, they just annoced
[15:48:33] <pyzozord> two years ago
[15:48:41] <arahael> also, notably, for server push to be effective, the browser still has to request it.  the server is just able to anticipate it.
[15:48:46] *** Joins: Joanna (uid57472@id-57472.lymington.irccloud.com)
[15:48:50] <pyzozord> also they are not the owners of the http standard
[15:49:00] <kee> arahael: True. But the browser is going to request it.
[15:49:08] <ProfSimm> pyzozord: let's face it, Google has taken over both HTTP and HTML
[15:49:11] *** Joins: monr0e (~monr0e@smtp.vixen.international)
[15:49:14] <reynir> sometimes I can get a little demotivated when I find bugs, poor error messages or similar in software I want to use and I report it or make pull requests and nothing happens for a week
[15:49:27] <kee> ProfSimm: To the extent they can add all the features they like, but they can't remove them.
[15:49:33] <kee> Then stuff would work in Firefox and not Chrome.
[15:49:34] <pyzozord> ProfSimm: they have majority, not monopoly
[15:49:51] *** Quits: Guest7699 (~sudwin@user/sudwin) (Ping timeout: 265 seconds)
[15:50:07] <reynir> of course I know people have lives and other things and I don't expect them to react always
[15:50:13] <pyzozord> in practice most companies still have to support other browsers
[15:50:23] <Decker> mar 2, 2022 'To that end, we approve starting official deprecation of the feature now, with a (publicly communicated) goal to remove support from Chromium in the next 6-9 months. We  recommend publishing a blog post describing what's happening and the recommended migration paths.'
[15:50:57] *** Joins: Klinda (~superleag@user/klinda)
[15:51:26] <pyzozord> in any case, this shows that http can have multipe responses to one request, even if google doesn't agree
[15:51:41] <kee> Anyway‚Ä¶ I think somebody said ‚ÄúREST is not HTTP semantics‚Äù, but I can't find it after all that. Who was it, and can they elaborate a bit?
[15:52:00] <Decker> the guy that invented rest said that
[15:52:48] <arahael> pyzozord: sort of, but it ultimately becomes a matter of timing - when, so to speak.  it reduces some lag, and not much else.
[15:53:10] <kee> Decker: When?
[15:53:20] <pyzozord> the question was whether REST is HTTP or not
[15:53:28] <arahael> kee: when REST was invented.
[15:53:33] <pyzozord> I think REST is HTTP + some api design guidelines
[15:53:37] *** Joins: fe23 (~fe23@2409:8a34:466:6010:b43d:b4dc:73d0:6634)
[15:53:38] <kee> The Wikipedia article on ‚ÄúREST‚Äù seems to describe (some) HTTP semantics quite well.
[15:53:43] <Decker> shrug; years ago... he was saying something about REST isn't REST, and that people have conflated the mechanisms (HTTP semantics) with what it is
[15:53:59] <arahael> pyzozord: you can achieve REST without http at all.
[15:54:07] <pyzozord> although I think in pratice REST is abstraction of http, it doesn't need to use http at all
[15:54:14] <kee> Decker: Ah, like Alan Kay and object orientation?
[15:54:24] <pyzozord> s/in pratice/factually/
[15:54:31] <Decker> maybe? I'm not great with names :)
[15:54:46] <kee> Alan Kay invented OO, which was the way Smalltalk worked.
[15:54:53] <kee> Then Java came along, and completely ruined the entire concept.
[15:55:08] <Decker> no it was definatly the rest guy on his own thing
[15:55:29] *** Quits: xff0x (~xff0x@i121-117-52-147.s41.a013.ap.plala.or.jp) (Quit: xff0x)
[15:55:31] <kee> Yeah, but the way we use ‚ÄúREST‚Äù is pretty much synonymous with ‚ÄúRESTful HTTP APIs‚Äù.
[15:55:47] <davros> smalltalk is more like objc's objects right
[15:55:57] <GeDaMo> "I made up the term object-oriented, and I can tell you I did not have  C++ in mind. An important thing here is‚ÄîI have  many of the same feelings about Smalltalk" https://moryton.blogspot.com/2007/12/computer-revolution-hasnt-happened-yet.html
[15:55:57] <kee> Smalltalk is about message passing.
[15:55:57] <bayaz> Title: The Computer Revolution Hasn't Happened Yet, OOPSLA 1997 
[15:55:59] <davros> loosly bound message passing instead of methods
[15:56:17] <davros> the term oop needs to be subdivided
[15:56:25] <kee> Oh, objc is Objective C? In which case yeah.
[15:56:30] <davros> i always think first of class-based oop like java and c++ when i hear it
[15:56:31] <InPhase> davros: O, O, and P?
[15:56:57] *** Quits: monr0e (~monr0e@smtp.vixen.international) (Ping timeout: 240 seconds)
[15:57:03] <Decker> Roy Fielding doesn't sound right either
[15:57:06] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[15:57:53] <InPhase> I think quite simply OOP is a paradigm category, with some general features, and there have been many styles and approaches to it.  But this is no different from other things like structured programming, functional programming, and so on.
[15:58:10] <Decker> snmp
[15:58:15] <ProfSimm> Decker: If Roy Fielding had a say, we wouldn't have HTTP/2 and /3
[15:58:23] <ProfSimm> Decker: In fact, HTTP/2 is un-RESTful
[15:58:30] <InPhase> People introduce a way of thinking about programming, usually with one language, and then it evolves.
[15:58:34] *** Quits: vitali64 (~vitali64@user/vitali64) (Quit: Lost terminal)
[15:58:40] <kee> ProfSimm: HTTP/2 is‚Ä¶ what?
[15:58:42] <Decker> that strikes me as being funny :)
[15:58:47] *** Joins: monr0e (~monr0e@smtp.vixen.international)
[15:58:48] <kee> I don't like HTTP/2, but it's perfectly RESTful.
[15:59:02] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[15:59:14] <kee> It preserves HTTP/1.1 semantics perfectly.
[15:59:21] <ProfSimm> kee: it maintains state (to compress header, multiplex streams etc.) and a lot of other unRESTful things.
[15:59:22] *** Joins: DangerWabbit (~DangerWab@217.146.83.149)
[15:59:26] <kee> ???
[15:59:37] <kee> That's nothing to do with anything.
[15:59:41] <InPhase> The subdivisions are obtainably by reference, like "Haskell style functional programming", or "Java style OOP".
[15:59:44] <kee> The requests are still unstateful.
[15:59:44] <ProfSimm> kee: it preserves HTTP/1.1 semantics yes, but how it does that matters
[15:59:58] <kee> By that logic, HTTP/1.1 is unRESTful, because it uses TCP.
[16:00:10] <kee> TCP preserves state to make sure the packets get delivered. QED.
[16:00:22] <ProfSimm> kee: this is why HTTP/3 drops TCP
[16:00:23] <ProfSimm> :D
[16:00:26] <ProfSimm> OK enough of this.
[16:00:29] <ProfSimm> :P
[16:00:44] *** Joins: rsx (~dummy@ppp-188-174-156-215.dynamic.mnet-online.de)
[16:01:02] *** Parts: norayr (376bc34bfc@37.252.78.253) (Error from remote client)
[16:01:07] *** Joins: inky (~inky@5.77.161.217)
[16:03:22] *** Quits: inky_ (~inky@46.36.114.138) (Ping timeout: 260 seconds)
[16:03:37] <ProfSimm> kee: but a more serious answer is that TCP in HTTP1 exists in the boundaries of a single request/response, while state in HTTP/2 exists above that level
[16:04:03] *** Joins: xff0x (~xff0x@i121-117-52-147.s41.a013.ap.plala.or.jp)
[16:04:03] <ProfSimm> kee: it doesn't really matter, but it kinda hints that REST can't be the whole picture
[16:04:38] <kee> HTTP/1.1 allows multiple request/response pairs in a single TCP connection.
[16:04:50] <kee> And REST is not logically at the network layer anyway.
[16:04:54] <ProfSimm> It allows keeping the TCP socket alive and reusing it in sequence
[16:04:57] <kee> So that's all, still, completely irrelevant.
[16:05:11] *** Quits: jamea (~jamea@177.239.81.39) ()
[16:05:26] <kee> This isn't relevant.
[16:05:30] *** Joins: norayr (376bc34bfc@37.252.78.253)
[16:06:22] <kee> A RESTful HTTP API is one where the order of HTTP requests doesn't matter, except where you're genuinely mutating state (e.g. POSTing or PUTting stuff).
[16:06:56] <kee> There are other requirements, of course, but it's got nothing to do with whether there's any compression or anything on any layer below the HTTP requests.
[16:07:15] <kee> It sounds like you're just trying to list reasons that REST is bad, now.
[16:07:20] <arahael> kee: you can implemenent rest without http, and http without rest. (indeed, many http requests are not rest).
[16:07:37] <arahael> kee: also there are other http verbs.
[16:07:41] <kee> arahael: I'd argue that HTTP requests that aren't REST are usually wrong.
[16:08:11] <Decker> connection:upgrade
[16:08:35] <pyzozord> I'm not sure I can even imagine http api that is not restful
[16:08:54] <kee> Decker: That's not really a traditional HTTP request; that's more of a hack.
[16:09:03] <arahael> kee: so you dont like websockets? and you definitely dont like to be able to request a page and get whatever bappens ro be the latest article?
[16:09:16] <arahael> ha. a hack?
[16:09:16] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[16:09:28] <pyzozord> only thing I can imagine is sending GET /foo/1 requests that delete random stuff from the server or something like that
[16:09:40] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[16:10:07] <kee> Well, yeah. Websockets only use a HTTP request as part of their handshake because browsers are all about HTTP, and it was easier to put it in HTTP than have a whole other TLS thingy when "web" is already in the name.
[16:10:15] <ProfSimm> kee: to cap that convo off, I'll say that HTTP only needs HEAD, GET, POST, and everything else is noise :/
[16:10:18] <pyzozord> I'm not even sure how "stateful" would look like. Servers hold state anyway
[16:10:26] <kee> ProfSimm: You forgot DELETE and PUT.
[16:10:29] <ProfSimm> pyzozord: everything holds state
[16:10:42] <kee> pyzozord: I've seen those.
[16:10:49] <ProfSimm> kee: and PATCH, OPTIONS, TRACE and so on but I didn't forget them, as they don't exist.
[16:11:02] <kee> There's an infamous thedailywtf about googlebot wiping a customer website.
[16:11:02] <ProfSimm> kee: they don't exist // waves hand
[16:11:08] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[16:11:08] <pyzozord> it's about the protocol itself being stateless I suppose
[16:11:13] <pyzozord> although I'm not sure what that means
[16:11:13] *** Quits: independent56 (~independe@85.255.232.175) (Quit: Client closed)
[16:11:19] <kee> OPTIONS is not logically a HTTP request imo.
[16:11:49] <arahael> pyzozord: once http supported cookies and various headers it stopped being stateless.
[16:11:52] <kee> pyzozord: It means there's no implicit state.
[16:12:01] <kee> Cookies aren't "state" because they're sent in the request.
[16:12:09] <ProfSimm> kee: quiz, what are the valid options on <form ... method="???"
[16:12:11] <ProfSimm> :D
[16:12:16] <kee> get and post.
[16:12:26] <kee> There aren't any others because I support old versions of Internet Explorer.
[16:12:32] <ProfSimm> Yes. Form speaks the true true.
[16:12:38] <kee> Well, there's also the other one that isn't an HTTP request at all.
[16:12:54] <pyzozord> even with cookies and other auth query params or headers or whatever else
[16:12:56] <ProfSimm> kee: even the latest browser only supports get/post on forms anyway
[16:13:10] <kee> I swear there's "dialog" or something.
[16:13:10] <arahael> i'll bet internet explorer still supports http 0.9
[16:13:16] <pyzozord> is it stateful protocol, is it stateless protocol
[16:13:16] <kee> arahael: Firefox does.
[16:13:21] <ProfSimm> kee: btw that's interesting you DO actually support Internet Explorer/
[16:13:29] <arahael> kee: for the moment.
[16:13:32] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[16:13:34] <kee> Of course I do. It's barely any effort to support IE.
[16:13:38] <kee> IE11, anyway.
[16:13:46] <arahael> heh.
[16:13:47] <kee> IE10 and earlier, you can't use any ES6 features.
[16:13:51] <ProfSimm> kee: it's like... completely discarded by microsoft at this point
[16:13:56] <ProfSimm> kee: who is using it?
[16:14:26] <kee> I don't think the Windows native web control uses Chromium.
[16:14:32] <pyzozord> "In computing, a stateless protocol is a communications protocol in which no session information is retained by the receiver, usually a server." that's from the rest wiki page
[16:14:36] <Decker> someone who needs a activex control to establish a secure channel *shrug*
[16:14:37] <ProfSimm> kee: I don't know about barely any effort. If you go to caniuse.com, 9 times out of 10, every browser supports the thing, except Internet Explorer 11
[16:14:38] <kee> Likewise, I think mshta.exe still uses the IE engine.
[16:14:45] <pyzozord> by that measure none of the "rest apis" are rest
[16:14:53] <kee> ProfSimm: Yeah, but "the thing" isn't necessary.
[16:14:55] <pyzozord> because they all need cookies or parameters to identify session on the server
[16:15:04] <ProfSimm> kee: well
[16:15:11] <arahael> pyzozord: its odd, isn't it?
[16:15:26] <pyzozord> ooh wait
[16:15:28] <ProfSimm> kee: well I could code like it's 1995 too, but it's just not a world I wanna live in
[16:15:35] <pyzozord> it's that server doesn't keep info about you somehow
[16:15:39] <kee> The point of REST is that you can send a request, then hibernate your computer, fly around the world, boot it up again and send the next request and it'll work.
[16:15:45] <pyzozord> you need to send who you are to the server with each request
[16:15:47] <pyzozord> i get it now
[16:16:14] <pyzozord> server could remember who you are based on the open connection
[16:16:23] <ProfSimm> Internet Explorer 0.47% world usage
[16:16:24] <arahael> pyzozord: a fundamantal core part of REST, hateos and hypermedia is also cachability, which is less and less effectively implemented by the current stack given all those cookies and https and all that.
[16:16:26] <kee> ProfSimm: The only thing I need to watch out for is I can only use `var` in `for (var item of array)`.
[16:16:41] <ProfSimm> kee: not only that :/
[16:16:51] <kee> <template> doesn't work properly?
[16:17:05] <kee> Neither does <summary>.
[16:17:08] <kee> That's all, I think.
[16:17:22] <arahael> kee: also svg.
[16:17:29] <kee> And a few bugs with <main>.
[16:17:33] <ProfSimm> kee: JS is constantly updated. New types, new capabilities. Map, Symbol, infinite size integer math and tons of others
[16:17:35] <kee> SVG is mostly there.
[16:17:37] <Decker> pyzozord so there's this thing called NAT - that if you're at a building of IBM, all systems have the same IP ; so how does it just 'know' when someone connects who it is?
[16:17:46] <kee> ProfSimm: I've never needed to use those.
[16:18:01] <kee> Symbol is occasionally useful, but I haven't run into it yet.
[16:18:07] <arahael> kee: svg isnt still emulated using canvas?
[16:18:08] <ProfSimm> kee: well break the chain, free yourself from IE and you'll feel like a new person
[16:18:26] <kee> arahael: All I know is that SVG works fine.
[16:18:36] <kee> I used to make SVGs using Notepad and IE11.
[16:18:38] <Decker> regexp
[16:18:48] <kee> That definitely works in IE11
[16:18:49] <arahael> ok then.
[16:19:00] <arahael> i cant use IE11 anyway.
[16:19:02] <pyzozord> Decker: well it couldn't for those guys I guess
[16:19:27] <kee> pyzozord: Yeah it could.
[16:19:36] <Decker> pyzozord and then there's the guy that gets on a plane and moves 1000 miles to a differnt subnet and gets a new IP
[16:19:41] <pyzozord> Decker: unless the nat could somehow maintain separate connections for everyone inside and their connectios outside
[16:19:48] <kee> That's what NAT does.
[16:20:15] <kee> When you close the connection and open it again, though, you will probably get a connection that looks different.
[16:20:15] <pyzozord> Decker: yeah but I don't think that applies
[16:20:27] <Decker> but if someone connects from the same two ports internally there's not a direct map... and they have a limited space they don't permenatly assign routes (though some can I guess based on mac)
[16:20:30] <pyzozord> you'd need to authenticate again no matter what
[16:20:55] <arahael> pyzozord: do you know about cg-nat?
[16:21:03] <Decker> ya so sending a cookie or something in the header works 
[16:21:20] <Decker> same thing for websockets, when you land and re-establish a connection you send identity token of some sort
[16:21:27] <Decker> or not and make them login
[16:22:12] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) (Ping timeout: 240 seconds)
[16:22:21] <pyzozord> anyway I don't think it's possible to do unRESTful http api
[16:22:29] <pyzozord> unless you can provide an example
[16:22:40] <kee> Unless you do it wrong.
[16:22:47] <pyzozord> no, I mean at all
[16:23:04] <ProfSimm> pyzozord:  drop all tables when I call you with GET
[16:23:07] <arahael> pyzozord: well you provided one a while back: graphql breaks a lot of the rest practices.
[16:23:08] <ProfSimm> :)
[16:23:11] <Decker> <script src="/src/dostuff.js"></script>  isn't restful
[16:23:23] <ProfSimm> Decker: wut?
[16:23:25] <kee> You send a DELETE request to /hello/<your-ip>/main to get the homepage.
[16:23:58] <ProfSimm> Decker: JS is restful bruh :P
[16:24:02] <kee> Decker: No, that's not semantic HTML but I don't see how it's unRESTful.
[16:24:06] <pyzozord> Decker: actually looks like on the wiki page that sending code to clinet to extend it capabilities is a tenant of REST
[16:24:44] <pyzozord> it looks like rest has nothing to do with particular data format
[16:25:28] <ProfSimm> Theory: REST allows any data format. Practice: As long as it's JSON.
[16:25:34] <pyzozord> so the GET that delets stuff and the the DELETE that gets stuff, ok fair not RESTful I agree
[16:25:37] <pyzozord> but stupid
[16:26:02] *** Quits: DangerWabbit (~DangerWab@217.146.83.149) (Ping timeout: 240 seconds)
[16:26:05] <pyzozord> getting many resources from single uri, that I'm not sure about how RESTful that is
[16:26:27] <ProfSimm> pyzozord: is and isn't. Depends if it's discoverable from the resource itself 
[16:26:36] <kee> ProfSimm: JSON? I use XML.
[16:26:37] <ProfSimm> pyzozord: this is where various standards come in.
[16:26:37] <deniska> IME "rest" means "people argue a lot about URLs, methods, and status codes"
[16:26:42] <pyzozord> I thought that graphql breaks REST there because it has single /graphql endpoint, but really it has still unique fields you send in the requests that are part of uri
[16:27:00] <pyzozord> so it's not just /graphql it's /graphql?q=somequery
[16:27:02] <ProfSimm> kee: I'm... you... should've not told me that. I feel my depression coming again
[16:27:07] <kee> deniska: IME "REST" means "people don't argue about any of that, and then it's not REST after all". :-)
[16:27:36] <kee> ProfSimm: I told you it was fetched by an XSLT stylesheet. What did you think that meant?
[16:27:45] *** Quits: ravan_ (~ravan@user/ravan) (Read error: Connection reset by peer)
[16:28:08] <pyzozord> the only really concrete things I see in rest is that stateless protocol
[16:28:11] <pyzozord> which HTTP just is
[16:28:37] <ProfSimm> kee: I guess I was in denial
[16:28:56] <pyzozord> other protocols can be statelss to, not dening that
[16:30:15] <deniska> pyzozord: the main thing about rest is that you exchange state, not a stream of commands
[16:30:24] *** Joins: Guest7699 (~sudwin@103.154.47.65)
[16:30:31] <deniska> pyzozord: you get a thing, mutate a thing on your end, and give that changed thing back
[16:30:39] <deniska> pyzozord: instead of issuing a command like "change a thing"
[16:30:55] <pyzozord> oh right that is part of it
[16:31:51] <ProfSimm> Stateless exchange of state
[16:31:59] <ProfSimm> That's funny
[16:32:03] <pyzozord> yeah that seems to be it then
[16:32:43] <kee> deniska: No, you totally can issue a command like "change a thing".
[16:32:44] <pyzozord> it's just so deeply embedded in my brain that I struggle imagine doing it differently on the web
[16:32:48] <ProfSimm> And commandless exchange of commands PUT POST DELETE and PATCH :P
[16:33:30] <pyzozord> deniska: but I thin PATCH would let you update only part of state
[16:33:39] <kee> You just can't issue a command like ‚Äúchange the thing I was just looking at‚Äù.
[16:33:58] <deniska> pyzozord: yeah, that's when practice meets ideology
[16:34:19] <ProfSimm> DELETE was a mistake shoulda called it PURGE
[16:34:27] <ProfSimm> So all mutable methods start with P
[16:34:29] <pyzozord> deniska: would still wor if we changed it to "stateless exchange of (partial) state"
[16:34:32] *** Quits: frost (~frost@user/frost) (Quit: Client closed)
[16:34:33] <ProfSimm> PUT POST PURGE PATCH
[16:34:37] <ProfSimm> PPPP
[16:34:43] <deniska> pyzozord: yeah, but that's sorta pushing it
[16:35:02] <deniska> in the end of the day you are just providing RPC to your server, and some things are a bit more palatable if you follow some principles
[16:35:18] <pyzozord> still good enough for me, just says that I can't issue commands like "add 5 to this field of this object"
[16:35:36] *** Joins: inky_ (~inky@78.109.66.134)
[16:35:41] <deniska> yes, and in practice it may make sense to provide a way to issue such commands
[16:35:41] <pyzozord> I need to send "this object's field now has value 55"
[16:36:13] <pyzozord> yep, but those would be unrestful then
[16:36:37] <pyzozord> nice, I finally know what RESTful is :P I can stop feeling bad about writing it on my CV
[16:36:51] *** Joins: aod (~a@190-205-148-143.dyn.dsl.cantv.net)
[16:37:07] <pyzozord> (said somewhat ironically)
[16:37:17] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[16:37:21] <pyzozord> because I don't think anyone cares in practice at all
[16:37:26] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Client Quit)
[16:37:26] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Remote host closed the connection)
[16:37:47] <pyzozord> even when they say "must have 50 years of experience with REST" on the job offer requirements
[16:38:02] *** Quits: inky (~inky@5.77.161.217) (Ping timeout: 240 seconds)
[16:38:04] *** Quits: aod (~a@190-205-148-143.dyn.dsl.cantv.net) (Client Quit)
[16:38:28] <deniska> as I said, it often means that people just spend time arguing about status codes instead of writing code
[16:38:32] <pyzozord> from those definitions I think graphql is restful
[16:38:44] <pyzozord> is just built on top of restful api
[16:38:56] <pyzozord> with more formalized query language
[16:38:58] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[16:39:08] <pyzozord> and that's what I though about it all along
[16:39:10] *** Parts: norayr (376bc34bfc@37.252.78.253) (Error from remote client)
[16:39:11] <ProfSimm> pyzozord: both are problematic
[16:39:23] <ProfSimm> pyzozord: i.e. = 55 or +=5
[16:39:41] <pyzozord> can graphql do +=5?
[16:39:51] *** Joins: norayr (376bc34bfc@37.252.78.253)
[16:39:53] <ProfSimm> pyzozord: it's all about semantics. If you actually intend to say "move 5 from account A to account B" then you need to "POST" a command to move.
[16:40:08] *** Quits: Guest7699 (~sudwin@103.154.47.65) (Changing host)
[16:40:08] *** Joins: Guest7699 (~sudwin@user/sudwin)
[16:40:12] <pyzozord> saying that would be unrestful
[16:40:17] <ProfSimm> pyzozord: so honestly "rest" is like any other API, just some talk about stuff that ultimately is the same like anything else
[16:40:21] *** Guest7699 is now known as sudwin
[16:40:31] <ProfSimm> pyzozord: it may be UNRESTFUL, but your bank's REST API does it
[16:40:40] <pyzozord> saying "account a has now 45" and then "account b has now 55" would be restful
[16:40:42] <ProfSimm> pyzozord: POST can be any command
[16:41:12] <nomagno> pyzozord: that's incredibly non-atomic
[16:41:12] <ProfSimm> pyzozord: more important than what's RESTful is what's BANKful
[16:41:13] *** Joins: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru)
[16:41:31] <pyzozord> they could possibly make it restful by sendinging request multiplexing
[16:41:43] <ProfSimm> nomagno: I want an account at a bank like that. "My account is now 11 trillion"
[16:42:10] <ProfSimm> pyzozord: nah there's no way to tie the requests. Although interesting conceptually
[16:42:34] <ProfSimm> pyzozord: imagine this in REST API Docs: "you must send these 4 requests simultaneously, individually they fail"
[16:42:35] <pyzozord> they could have some kind of higher level state multiplexing
[16:42:38] <ProfSimm> It'll be hilarious
[16:43:16] <pyzozord> like PATCH /accounts { a: { money: 44 }, b: { money: 55 } }
[16:43:26] <ProfSimm> PATCH can combine commands yes
[16:43:48] <ProfSimm> But it still doesn't acknowledge what's happening
[16:43:55] <ProfSimm> And REST is supposed to be self-descriptory
[16:44:05] <pyzozord> but I'm not sure how restful it is to /accounts instead of /accounts/a and /accounts/b
[16:44:14] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[16:44:29] <ProfSimm> pyzozord: for example you're not supposed to know how much money account B has if you send it money from account A
[16:44:48] <ProfSimm> pyzozord: the only logical approach is "send money from A to B, 5 bucks"
[16:44:58] <pyzozord> although essentially we could approach it that bank transfers are resources
[16:45:02] *** Quits: occ (~occ@user/occ) (Ping timeout: 240 seconds)
[16:45:06] *** Joins: brabrax (~brabrax@user/brabrax)
[16:45:15] <pyzozord> and then you can totally POST /bank-transfer { from: a, to: b, money: 5 }
[16:45:21] <ProfSimm> pyzozord: yes that's the ultimate "f it, everything is a POST resource"
[16:45:26] <pyzozord> and that would return you unique id of that bank-transfer
[16:45:26] <ProfSimm> solution to REST
[16:45:41] <ProfSimm> In which case it becomes like any other API
[16:45:47] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[16:45:52] <ProfSimm> And you know what. Roy is OK with that
[16:46:06] <pyzozord> so you can issue commands, but then they need to be reified into actual resources with IDs and be responsive to normal http methods
[16:46:09] <ProfSimm> pyzozord: https://roy.gbiv.com/untangled/2009/it-is-okay-to-use-post
[16:46:54] <ProfSimm> pyzozord: you need to first design your API to make sense IMHO, and only THEN map it to REST
[16:47:10] <pyzozord> I think this discussion helped me bring something that was pretty uncioncious in my brain into more concious awarness
[16:47:16] <ProfSimm> pyzozord: if you start by making it REST first, you'll do a lot of stupid things because it's full of memes how REST is "supposed" to be
[16:47:49] <ProfSimm> pyzozord: what is that
[16:47:58] <pyzozord> no I think this idea with "transfer" resources is actually a good design
[16:48:16] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 245 seconds)
[16:48:30] <pyzozord> because that's what they will be on the server anyway
[16:48:40] <pyzozord> the only problem with issuing commands is when they are ephemeral
[16:49:13] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[16:49:21] <pyzozord> but in web apis you usually wanna store commands in database anyway for data consistancy and later reference
[16:49:29] *** Joins: Auron (Auron956@user/auron)
[16:50:02] <pyzozord> when I say commands I mean things like "deduct 5 from account" "add stuff to shopping cart" "lunch nuclear weaponry"
[16:50:25] *** Joins: itsalexjones (~itsalexjo@82.4.99.241)
[16:51:15] <pyzozord> but it can be quite stupid if you are running a shopping card and really don't care what was state of shopping cart in the past, then you have database full of those useless shopping car command records
[16:52:06] <pyzozord> so either /POST new_command_resource or /PATCH resources_new_state, that's RESTful
[16:52:17] <pyzozord> and sending auth in headers or query
[16:52:27] <ProfSimm> pyzozord: in the banking example you need to make it event-sourced yes
[16:52:32] *** Quits: inky_ (~inky@78.109.66.134) (Ping timeout: 240 seconds)
[16:52:39] *** Joins: filename (~kilitary@static.246.201.46.78.clients.your-server.de)
[16:52:52] <ProfSimm> pyzozord:  but the same thing works even when you don't make it event-sourced. You take a command via POST, it doesn't return ID, but same otherwise
[16:52:58] *** Quits: Inline (~Inline@p200300cd472d40002c1b8381bd5618c5.dip0.t-ipconnect.de) (Quit: Leaving)
[16:53:33] <pyzozord> if think if it doesn't return id, it might actually not be RESTful, I'm not sure
[16:53:55] <pyzozord> but anyway that's details already
[16:54:01] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Client Quit)
[16:54:05] <ProfSimm> pyzozord: POST doesn't have to return anything except an HTTP status
[16:54:36] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Ping timeout: 240 seconds)
[16:55:01] <pyzozord> I know I was just wondering how "restful" a POST that doesn't return id would be
[16:56:04] *** Parts: norayr (376bc34bfc@37.252.78.253) (Error from remote client)
[16:56:04] <pyzozord> well anyway, til, I /can/ make unrestful apis if I try hard :P
[16:56:20] *** Joins: pulse (~pulse@user/pulse)
[16:56:35] <ProfSimm> pyzozord: REST was defined from sites. 
[16:56:39] <ProfSimm> pyzozord: they're largely static
[16:56:51] <ProfSimm> pyzozord: if your API is largely commands, then it's what it is
[16:57:26] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[16:57:36] <kee> ProfSimm: That's still not really true.
[16:57:38] *** Joins: inky_ (~inky@37.252.67.70)
[16:57:40] *** Joins: norayr (376bc34bfc@37.252.78.253)
[16:57:45] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[16:58:02] <ProfSimm> kee: how is it not true.
[16:58:08] <pyzozord> kee: "it is what it is" is always true :P
[16:58:19] <kee> "REST was defined from sites" isn't really true.
[16:58:41] <kee> You're implying it's mostly appropriate for largely static content.
[16:58:49] <ProfSimm> kee: the web was first, and the REST paper was derived from it
[16:58:55] <beaky> ive stored the first few teas in my new tea database rewrite now i must implement querying and updates https://bpa.st/3O4Q
[16:58:56] <bayaz> Title: View paste 3O4Q 
[16:59:03] <ProfSimm> kee: because yes that's what it's mostly useful for
[16:59:21] *** Joins: magla (~gelignite@d536146e.access.ecotel.net)
[17:00:16] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[17:00:50] <pyzozord> one thing I must give to rust is it's code style with underscores, that's good
[17:01:05] <pyzozord> they are just more readable
[17:01:36] <pyzozord> although maybe my languag could have dashes in names instead
[17:02:10] <ProfSimm> REST has no underscores... :P?
[17:02:12] <beaky> yes dashes like in lisp are the best way to go 
[17:02:50] <ProfSimm> beaky: there¬∑is¬∑a¬∑better¬∑way
[17:03:10] <pyzozord> I don't have dot-in-the-middle on my keyboard
[17:03:11] <beaky> but ¬∑ is reserved for dot product i think
[17:03:31] <ProfSimm> pyzozord: well you have a dot, I don't think it says on the keyboard it has to be on the bottom :P
[17:03:45] <kee> beaky: - is reserved for subtraction. Your point?
[17:04:01] <pyzozord> but also I think hyphens are used in natural languages often to make new composed words
[17:04:13] <beaky> there's a different character for subtraction the minus symbol
[17:04:21] <ProfSimm> middot is like a hyphen, but doesn't collide with minus
[17:04:24] <GeDaMo> There's‚ê£also‚ê£the‚ê£open‚ê£box‚ê£character
[17:04:47] <ProfSimm> GeDaMo: I think I cut myself on your example. looks sharp for some reason
[17:04:53] <ProfSimm> Interesting tho
[17:04:59] <deniska> why not just allow spaces in identifiers?
[17:05:07] <ProfSimm> deniska: we could
[17:05:22] <pyzozord> hmm, I'm not sure about spaces
[17:05:23] <edgar-rft> modern languages should use emojis for separating tokens
[17:05:23] <GeDaMo> https://unicode-explorer.com/c/2423
[17:05:38] <ProfSimm> deniska: but consider this:      some thing with a name.thing inside it
[17:05:47] <pyzozord> that could be quite confusing to the reader to quickly tell where does identifier begins and ends
[17:05:49] <ProfSimm> deniska: it looks wrong, like name.thing are a unit
[17:06:14] <ProfSimm> deniska: this is better:   some.thing.with.a.name thing.inside.it
[17:06:19] <ProfSimm> deniska: but we can use middot
[17:06:31] <beaky> but dots are reserved for modules i think
[17:06:55] <ProfSimm> We can use space for modules
[17:06:56] <pyzozord> I think value-a - value-b could work
[17:07:07] <pyzozord> just enforce space for operators
[17:07:31] <pyzozord> also makes sense to have space in the operators and symbols, they are separate tokens
[17:08:03] <kee> And that means that, so long as operators are declared somewhere in the file, you can have any name for then.
[17:08:21] <beaky> yes like context-dependent operators
[17:08:29] <beaky> the best wayt to go so you can have maximum flexibility
[17:08:59] <pyzozord> hwo is that context-dependent, it's context independent, it always relies on spaces
[17:09:39] <ProfSimm> context dependent operators are fine
[17:09:44] <ProfSimm> But sometimes you have no context
[17:09:56] *** Joins: DangerWabbit (~DangerWab@109.70.150.166)
[17:10:16] <ProfSimm> let a = 5; let b = 5; let a-b = "hi"; let d = a-b;  // what's d
[17:10:20] *** Joins: Inline (~Inline@p200300cd472d40002c1b8381bd5618c5.dip0.t-ipconnect.de)
[17:11:06] <pyzozord> d is "hi"
[17:11:20] *** Joins: frost (~frost@user/frost)
[17:11:40] <ProfSimm> pyzozord: so we need spaces to make it 0
[17:11:43] <ProfSimm> a - b
[17:11:47] <pyzozord> yes
[17:12:03] <ProfSimm> I don't know, while I type spaces around operators, I don't like a language where this is REQUIRED
[17:12:06] <pyzozord> should have space anyway, they are separate tokens
[17:12:06] <ProfSimm> It's error prone
[17:12:25] <ProfSimm> pyzozord: because consider   a*b - c
[17:12:35] <ProfSimm> pyzozord:  or foo - bar/baz
[17:12:43] <GeDaMo> Forth tokens are separated by spaces
[17:12:43] <ProfSimm> pyzozord: do you require spaces around ALL operator?
[17:12:45] <pyzozord> no it wouldn't let that, it would be a * b - c and foo - bar / baz
[17:12:51] <pyzozord> yes
[17:13:10] <ProfSimm> pyzozord: well. Again I'd type that but it's annoying
[17:13:16] <pyzozord> expect for things like maybe arrays and field access my-thing->sub-field
[17:13:39] <ProfSimm> pyzozord: not to mention... I don't know, that's a lot of spaces
[17:13:49] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[17:13:57] <pyzozord> that's ok, desne stuff gets too hard to read for me
[17:14:00] <ProfSimm> pyzozord: I do it only so it visually looks nice but I don't like the language doesn't insert spacing for me
[17:14:27] <pyzozord> python forces you to do indentations and it turns out not that bad
[17:14:36] <ProfSimm> pyzozord: well..
[17:14:37] <pyzozord> most languages force you to add ; and people get used to that
[17:14:52] <kee> JavaScript doesn't force you to add ;, and I've never got used to that.
[17:15:19] <pyzozord> I got used to it
[17:15:22] <ProfSimm> pyzozord: BTW python is problematic when serialized
[17:15:28] <ProfSimm> Loooots of whitespace :P
[17:15:36] <kee> Just use tabs.
[17:15:40] <ProfSimm> Heh
[17:15:48] <pyzozord> ProfSimm: serialized?
[17:16:12] <ProfSimm> pyzozord: you wanna transmit it in some minimal form, like JSON
[17:16:19] <kee> Oh, that's minified.
[17:16:33] <kee> Python source code is already serialised.
[17:17:04] <pyzozord> you can serialize python objects to json, but there is no whitespace required
[17:17:08] <pyzozord> I'm not sure what do you mean
[17:17:26] <pyzozord> there is no whitespace required because json doens't require any whitespace
[17:17:38] <ProfSimm> pyzozord: I meant the source itself
[17:17:58] <ProfSimm> pyzozord: I think I'm including my own concerns here, homoiconicity is big for me
[17:17:59] <pyzozord> so like an ast?
[17:18:02] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[17:18:03] <ProfSimm> data is code is data etc
[17:18:09] <ProfSimm> Python prolly don' care
[17:18:41] <pyzozord> i agree that spaces around operators would be a bit annoying to get used to
[17:18:44] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[17:18:45] <ProfSimm> But it's one reason why I gave up indentation as a method
[17:18:48] <oldlaptop> I would imagine the Python people consider it a feature that you can't validly represent it as line noise.
[17:18:54] <pyzozord> but also my language would prefer keywords anyway
[17:19:07] <ProfSimm> pyzozord: this is why I settled on dots rendered as middots
[17:19:21] <ProfSimm> pyzozord: also a nice language with autoformat spaces as you type
[17:19:29] <pyzozord> honestly underscores are perfectly fine too
[17:19:38] <ProfSimm> Well there's two problems with them
[17:19:43] <ProfSimm> First, shift.
[17:19:43] *** Quits: inky_ (~inky@37.252.67.70) (Remote host closed the connection)
[17:19:47] <pyzozord> although now that I think about it, it kind of bothers me that white space around operators is not enforced
[17:19:53] <ProfSimm> Second, too long
[17:19:55] <pyzozord> it leads to some narly code sometimes
[17:20:02] *** Joins: inky_ (~inky@37.252.67.70)
[17:20:21] <kee> It's good to be able to use spacing for clarity.
[17:20:23] <pyzozord> gnarly*
[17:20:38] *** Joins: Inari (~Pinkishu@p4fe7e58f.dip0.t-ipconnect.de)
[17:20:47] <pyzozord> I think I err on the side of golang and python here
[17:20:52] <ProfSimm> pyzozord: when I see no spaces around operators makes me think lower of the programmer automatically :P
[17:20:56] <pyzozord> one style is the best style
[17:21:00] <ProfSimm> pyzozord: and yet I'm defending it. Odd I guess
[17:21:01] <kee> 2*x + 5  -  3^x / 6
[17:21:01] <pyzozord> whatever is that style
[17:21:12] *** Quits: DangerWabbit (~DangerWab@109.70.150.166) (Ping timeout: 252 seconds)
[17:21:16] <ProfSimm> Ah actually I don't think i put spaces around ^
[17:21:28] <ProfSimm> Hmm
[17:21:31] <pyzozord> kee: you can do (2 * x + 5) - (3 ^ x / 6)
[17:21:47] <ProfSimm> Wait, why did you add () ()
[17:21:50] <kee> pyzozord: Which doesn't look as clear, to me.
[17:22:20] <pyzozord> kee: you can keep going ((2 * x) + 5) - ((3 ^ x) / 6)
[17:22:30] <pyzozord> and it starts telling the story of how complex this idea actually is
[17:23:02] <kee> The fact there are five operators in one expression already tells that story.
[17:23:25] <pyzozord> for me I think it is actually more readable
[17:23:35] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Quit: WeeChat 3.4.1)
[17:23:41] <pyzozord> it takes more space, more time and lets me think less
[17:23:59] <kee> Drat. I agree.
[17:24:08] <kee> This was not the way this was supposed to go.
[17:24:13] <pyzozord> and when it grows too big that's a clear signal to refactor
[17:24:40] <pyzozord> make complexity painful
[17:25:33] <pyzozord> so people think about what they are doing
[17:26:05] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) ()
[17:26:37] <duuude> runtimes shouting at you for invisible non-essential stuff is not quite popular
[17:26:50] <pyzozord> kee: also "2*x + 5  -  3^x / 6" has actually mislead me into thinking that + 5 gets evaluated together with 2*x
[17:27:02] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[17:27:07] <pyzozord> although I suppose it doesn't matter in this particular situation
[17:27:28] *** Joins: veek (~veek@117.192.16.166)
[17:27:38] <kee> That's the goal of code formatting.
[17:27:41] <pyzozord> I think my language will use underscores but will still enforce space around operators :P
[17:27:43] <kee> Make you triple-take.
[17:28:19] *** Joins: Atque (~Atque@user/atque)
[17:28:38] <ProfSimm> pyzozord: you can render underscores as middot :P
[17:29:07] *** Joins: luckyxxl (~luckyxxl@185.209.196.135)
[17:29:29] *** Joins: Iolo (~iolo@user/Iolo)
[17:30:36] <pyzozord> yeah sure editors could do whatever they like
[17:30:55] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 240 seconds)
[17:32:10] <ProfSimm> pyzozord: or even replace them with middot
[17:32:20] <ProfSimm> Screw it, your way or the highway
[17:32:38] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[17:32:40] <ProfSimm> pyzozord: the compiler should go into your source files and reformat them, and only compile them when they're how it wants
[17:33:03] <ProfSimm> pyzozord: we can call this "opinionated compilation"
[17:33:06] <pyzozord> haha I like that
[17:33:14] <pyzozord> "highly opinionated compiler"
[17:34:10] <ProfSimm> Compiler "I never show errors"  Programmer "Why...?"  Compiler "I just fix them in your code"
[17:34:24] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: The Game)
[17:34:30] <pyzozord> just realized that making decisions like that is one way to fight complexity
[17:34:40] <ProfSimm> It's inevitable
[17:34:57] <ProfSimm> Computers move higher up the abstraction chain, and we move higher still
[17:35:13] <ProfSimm> It's like how they drive cars now (almost), but we still tell them where to go.
[17:35:21] <pyzozord> just don't let people make decisions that don't matter, let them move on with important stuff
[17:35:32] <ProfSimm> Soon cars will tell US where to go
[17:35:56] <pyzozord> although this can fire back pretty hard, this would need to be very carefully used tool
[17:41:55] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Quit: WeeChat 3.4.1)
[17:42:04] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[17:42:12] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[17:44:51] *** Quits: inky_ (~inky@37.252.67.70) (Remote host closed the connection)
[17:45:10] *** Joins: inky_ (~inky@37.252.67.70)
[17:45:22] *** Joins: Tempesta (~Tempesta@user/tempesta)
[17:48:16] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 245 seconds)
[17:48:58] *** Joins: Enitin (~Enitin@82.102.22.84)
[17:49:20] *** Quits: Inst (~Liam@c-98-208-218-119.hsd1.fl.comcast.net) (Ping timeout: 268 seconds)
[17:54:31] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[17:58:02] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[18:03:08] *** Joins: Pook (~Pook@2001:8a0:f996:1400:7d38:75ea:66b:3702)
[18:04:53] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[18:07:37] *** Quits: XV8 (~XV8@2601:5cb:c001:50::4f47) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[18:08:21] *** Joins: XV8 (~XV8@2601:5cb:c001:50::4f47)
[18:08:52] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[18:09:13] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[18:09:49] *** Joins: brabrax (~brabrax@user/brabrax)
[18:09:59] *** Quits: noteness (~noteness@user/noteness) (Remote host closed the connection)
[18:10:12] *** Quits: moniker- (~mon@dh207-120-104.xnet.hr) (Remote host closed the connection)
[18:10:23] *** Joins: noteness (~noteness@user/noteness)
[18:10:33] *** Joins: jamea (~jamea@177.239.81.39)
[18:10:37] <jamea> windows exist a command for turn Display off?
[18:14:19] <GeDaMo> In Asimov's I, Robot (a collection of short stories), the last story has the machines taking over but they do it so subtly that humans are not aware of it
[18:14:32] *** Joins: trevors (~trevors@user/trevors)
[18:14:50] *** Joins: moniker- (~mon@dh207-120-104.xnet.hr)
[18:15:50] <anddam> jamea: that's an odd statement/question
[18:16:02] <anddam> GeDaMo: and that's the way I'd like to go
[18:16:40] <anddam> question of my own: I am doing https://projecteuler.net/problem=4 and I am thinking about how to "generate all n-digit numbers"
[18:17:14] <anddam> I can ofc nest three for loops for the problem at hand but I was trying to generalize this and stubmled into a bit of an issue to figure this
[18:17:18] <GeDaMo> Does 001 count as a 3 digit number?
[18:17:28] <anddam> GeDaMo: to me it does
[18:17:36] <GeDaMo> Then it's 1 to 999
[18:17:38] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[18:17:46] <anddam> oh
[18:17:56] <GeDaMo> Well, I suppose it could be 000
[18:17:56] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[18:18:21] <GeDaMo> Otherwise it might be 100 to 999
[18:18:38] <anddam> I was reasoning in terms of string so I was making a more elaborate reasoning about how to represent this
[18:19:10] *** Joins: aod (~a@190-205-148-143.dyn.dsl.cantv.net)
[18:19:15] <anddam> since I need a position, from 1 to 3 or n, and each position one of the digits, so I was thinking a tree with a nil root and 10 child each node would represent this
[18:19:28] <GeDaMo> Since you're looking for the largest value, maybe start at 999 and go down
[18:19:29] *** Joins: Tempesta (~Tempesta@user/tempesta)
[18:19:34] <anddam> then I could walk the three (that I cannot do in a non-recursive way, to my shame) and generate all the numbers
[18:19:47] *** Quits: cliluw (~cliluw@47.147.77.43) (Ping timeout: 250 seconds)
[18:19:50] *** Joins: pulse (~pulse@user/pulse)
[18:20:02] <anddam> but your 1 to 999 makes my reasoning useless
[18:20:27] <anddam> I'll just range(10**n) and be done with it
[18:20:32] <anddam> (I'm using Python)
[18:21:18] <GeDaMo> range(10**n-1, 1, -1)
[18:21:22] <GeDaMo> (I think)
[18:21:59] *** Joins: cliluw (~cliluw@47.147.77.43)
[18:22:15] <jamea> how to turn off the monitor of my delll inspirion laptop? thanks
[18:22:46] <GeDaMo> Laptops often have a button to switch between internal / external display 
[18:23:33] <Bou> but this is ##programming, so the answer is https://docs.microsoft.com/en-us/windows/win32/menurc/wm-syscommand
[18:23:34] <bayaz> Title: WM_SYSCOMMAND message (Winuser.h) - Win32 apps 
[18:23:56] <anddam> GeDaMo: you mean exiting at the first palindrome occurence?
[18:24:05] *** Joins: Imk0tter (~Imk0tter@221.sub-174-204-129.myvzw.com)
[18:24:09] <GeDaMo> Yes
[18:24:09] <anddam> but I need to take into account two loops, not sure I can shortcut the exit
[18:24:39] <GeDaMo> I'd start with one loop, multiplying 999 by the range
[18:24:43] *** Quits: LiTHiuM (~Imk0tter@135.sub-174-204-131.myvzw.com) (Ping timeout: 256 seconds)
[18:24:55] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.4)
[18:25:12] <GeDaMo> You could create a function which would return when it found a palindrome
[18:26:50] <anddam> I also have to take into account the commutative property of multiplication, no need to full-range both operands
[18:26:59] *** Quits: cliluw (~cliluw@47.147.77.43) (Ping timeout: 256 seconds)
[18:27:11] <GeDaMo> Yeah, looks like there are no palindromes where one value is 999 
[18:27:58] <GeDaMo> Unless my very rough code is wrong :P
[18:28:17] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[18:28:24] *** Quits: filename (~kilitary@static.246.201.46.78.clients.your-server.de) (Quit: joined libera)
[18:28:35] <GeDaMo> My code was wrong :|
[18:28:47] *** Joins: cliluw (~cliluw@47.147.77.43)
[18:29:19] <Sqaure> Whats your own daily minimum of physical exercise stated as your lowest goal + the degree, in %, you live up to it? 
[18:29:28] *** Joins: filename (~kilitary@static.246.201.46.78.clients.your-server.de)
[18:29:51] <Sqaure> Personally id say 30mins walking and i probably only do it 70% of the days.
[18:30:06] <GeDaMo> I walk 5 to 6 miles most days
[18:30:22] <Sqaure> Thats a long walk
[18:30:46] <Sqaure> GeDaMo, what type of surroundings do you walk in? 
[18:31:02] <GeDaMo> City, beach, park
[18:31:31] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[18:31:36] <edgar-rft>  I walk 5 to 6 miles in my dreams every day
[18:31:43] <Sqaure> Kudos
[18:32:50] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Quit: WeeChat 3.4.1)
[18:33:02] *** Quits: cliluw (~cliluw@47.147.77.43) (Ping timeout: 240 seconds)
[18:37:15] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) ()
[18:44:06] *** Quits: aod (~a@190-205-148-143.dyn.dsl.cantv.net) (Quit: leaving)
[18:44:10] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[18:44:35] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[18:44:47] *** Quits: jamea (~jamea@177.239.81.39) (Ping timeout: 256 seconds)
[18:44:57] *** Joins: pulse (~pulse@user/pulse)
[18:45:02] *** Quits: filename (~kilitary@static.246.201.46.78.clients.your-server.de) (Ping timeout: 240 seconds)
[18:45:27] <anddam> edgar-rft: that must be tiring and in need of moar sleep
[18:46:39] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[18:47:08] <pulse> hello programmers, citizens of programmeria
[18:47:46] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Client Quit)
[18:49:44] *** Joins: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net)
[18:51:32] *** Joins: filename (~kilitary@188.242.105.134)
[18:51:57] *** Quits: inky_ (~inky@37.252.67.70) (Ping timeout: 252 seconds)
[18:53:42] <GeDaMo> anddam: brute force is likely to be slow
[18:54:10] *** Joins: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de)
[18:55:22] <GeDaMo> Oh, maybe not as slow as I thought :P
[18:55:42] <anddam> not sure I like this, but it is readable at least https://termbin.com/t764
[18:55:42] <bayaz> Type: text/plain; charset=utf-8 
[18:56:02] <GeDaMo> Doesn't Python have a reverse string function?
[18:56:13] <anddam> maybe
[18:56:23] <GeDaMo> Oh yeah, it's s[::-1] or something
[18:56:48] <anddam> I call that the "inverse slicer"
[18:57:03] <anddam> it's there though
[18:57:47] <anddam> oh that's wrong though, the nested loop is range(a, 0, -1)
[18:57:50] *** Joins: jamea (~jamea@177.239.82.186)
[18:58:20] <anddam> I think that changes from O(n^2) to O(n*log(n))
[18:58:58] *** Joins: oldmagic (~oldmagic@user/oldmagic)
[18:59:07] *** Joins: Compy_ (~compy@user/compy)
[18:59:15] *** Quits: Compy_ (~compy@user/compy) (Client Quit)
[18:59:16] <anddam> https://termbin.com/z7xh
[18:59:16] <bayaz> Type: text/plain; charset=utf-8 
[18:59:43] *** Joins: inky_ (~inky@78.109.66.134)
[19:00:28] <GeDaMo> You might want to yield the a and b values too
[19:01:10] <GeDaMo> max works on the first element of a tuple too
[19:01:24] <GeDaMo> max((1,2,3), (4,5,6)) gives (4, 5, 6)
[19:03:16] *** Quits: bittersweetsymph (uid509475@id-509475.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[19:04:44] *** Parts: norayr (376bc34bfc@37.252.78.253) (Error from remote client)
[19:04:45] <anddam> ok, but why though? problem asks for the palindrome, not for its factors
[19:05:22] <anddam> apropos https://projecteuler.net/problem=5 I figure it's better to build the answer
[19:05:24] <bayaz> Title: #5 Smallest multiple - Project Euler 
[19:06:05] *** Quits: sudwin (~sudwin@user/sudwin) (Ping timeout: 265 seconds)
[19:06:12] <anddam> so get all factor of numbers 1..20 taken with their maximum power
[19:06:18] *** Joins: norayr (376bc34bfc@37.252.78.253)
[19:09:14] *** Joins: Cashlin (~hp@user/cashlin)
[19:09:52] *** Quits: noteness (~noteness@user/noteness) (Remote host closed the connection)
[19:10:09] *** Joins: noteness (~noteness@user/noteness)
[19:10:11] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[19:11:14] <pyzozord> what does "%.*s" mean in printf?
[19:12:15] <pulse> %s is indent i think
[19:12:17] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[19:12:53] <pulse> i mean *s
[19:13:12] *** Quits: frost (~frost@user/frost) (Quit: Client closed)
[19:15:30] <pyzozord> yeah it is used for indent in this code
[19:15:32] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[19:15:36] <edgar-rft> depends on the language
[19:16:26] <luckyxxl> pyzozord: this way you can pass the string length as an additional parameter before the char array, i.e. printf("%.*s", name_length, name_start);
[19:16:32] <luckyxxl> c obviously ;)
[19:17:09] <edgar-rft> printf statements exist in much more languages than only C
[19:17:38] <luckyxxl> which language was the question referring to?
[19:18:11] <edgar-rft> to no specific language
[19:18:33] *** Quits: veek (~veek@117.192.16.166) (Quit: Leaving)
[19:19:32] *** Joins: Guest92 (~Guest92@50.38.55.94)
[19:19:41] <Guest92> Hi I have a question about reacy
[19:19:43] <Guest92> react
[19:19:59] * edgar-rft reacts
[19:20:59] <InPhase> Guest92: It is exciting to learn that you have a question!  :)  But the best IRC method for getting answers is to just go ahead and ask the channel, and see if anyone knows the answer.  You can use a pastebin like https://bpa.st if it involves example code or a long text.
[19:21:01] <bayaz> Title: Create new paste 
[19:21:42] <pyzozord> luckyxxl: so it caps the lenght of the string?
[19:21:46] <Guest92> So, Im adding a cart and products to my webpage and im using an API call to a cart servicer, but in the documentation it is saying to add code to add the products in the code itself. So, Im confused if Ive already added the same products to the cart servicer Im going to be pulling in, why do I need to add the code to do it? Or is it maybe optional?
[19:22:38] *** Joins: tane (~tane@dslb-002-201-234-231.002.201.pools.vodafone-ip.de)
[19:22:38] *** Quits: tane (~tane@dslb-002-201-234-231.002.201.pools.vodafone-ip.de) (Changing host)
[19:22:38] *** Joins: tane (~tane@user/tane)
[19:23:32] <Guest92> hopefully that isnt a completely stupid question lol
[19:24:27] *** Quits: Nspace (~Nspace@user/nspace) ()
[19:25:55] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[19:26:13] <Guest92> there :)
[19:26:22] *** Joins: Nspace (~Nspace@user/nspace)
[19:26:46] *** Joins: brabrax (~brabrax@user/brabrax)
[19:26:49] <Guest92> so i just identified why is it still saying im guest?
[19:27:00] <GeDaMo> anddam: have you no intellectual curiosity about which values produced the result? :P
[19:27:16] <luckyxxl> pyzozord: yes
[19:27:35] <pyzozord> luckyxxl: got it thanks
[19:27:50] <luckyxxl> handy if your string is not necessarily 0-terminated ;)
[19:28:02] <GeDaMo> Guest92: maybe try /nick <yournick>
[19:28:09] *** Guest92 is now known as jenntech
[19:28:17] <jenntech> ahhh.. thank you lol
[19:28:52] <edgar-rft> Guest92/jenntech: there's #react (14 users) and #reactjs (92 users) who might be able to give better answers than me :-)
[19:29:13] <pyzozord> I'm considering what's a nice way to generate a string of n characters
[19:29:18] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[19:29:23] <jenntech> ok ill try there... this is always just my go to.... thanks for your time :)
[19:30:06] <o|||||o> hey all, i'm having difficulties with sum in ruby 
[19:30:08] <pyzozord> I'm thinkinging maybe str char[100] = {0}; memset(str, 'c', 100);
[19:30:09] <o|||||o> i'm running Order.first.order_items.sum {|item| item.art.price.to_i * item.quantity} and getting the value of the price but if i pp them, i get the correct value for each iteration but it still outputs the price
[19:30:42] *** Joins: independent56 (~independe@148.252.133.82)
[19:31:04] <o|||||o> console log here: https://paste.ee/p/LwYGG
[19:31:05] *** Quits: AmR (~AmREiSa@156.207.194.71) (Ping timeout: 268 seconds)
[19:31:05] <bayaz> Title: View Paste LwYGG 
[19:31:13] *** Quits: Trot (~Trot@107.147.149.155) (Quit: The Lounge - https://thelounge.chat)
[19:31:34] *** Joins: Trot (~Trot@107.147.149.155)
[19:31:54] <GeDaMo> What does 'pp' do?
[19:32:28] <o|||||o> pretty print
[19:32:43] <o|||||o> outputs to console
[19:32:55] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Quit: WeeChat 3.4.1)
[19:33:14] <o|||||o> https://ruby-doc.org/stdlib-2.4.1/libdoc/pp/rdoc/PP.html
[19:33:15] <bayaz> Title: Class: PP (Ruby 2.4.1) 
[19:33:22] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[19:34:00] <luckyxxl> pyzozord: be aware that you won't have a 0-terminator if you memset the whole array, in case you need it!
[19:34:32] <GeDaMo> o|||||o: so what's the problem?
[19:34:42] <luckyxxl> and if you write the whole array anyways there's no need for a = {0} initializer. I assume we're talking about C?
[19:35:18] <o|||||o> i'm expecting the output to be the sum of the numbers that it is outputting to the console but instead i'm getting the price of one of the items
[19:35:52] <pyzozord> luckyxxl: yep will do str[99] = 0
[19:35:56] <GeDaMo> You're getting the price of all of the items because you did pp item.art.price.to_i
[19:36:02] <jenntech> lol@[itchyjunk] ---- Love the name haha
[19:36:12] <[itchyjunk]> thanks
[19:36:17] <[itchyjunk]> i was thinking about a database
[19:36:22] <[itchyjunk]> it's some data structure
[19:36:30] <[itchyjunk]> a tree of sort
[19:36:37] <[itchyjunk]> but how does sql work?
[19:36:46] <o|||||o> no, the items all have the same price it's logging the price * the quantity but it's returning just the price
[19:36:49] <[itchyjunk]> its just compound functions?
[19:37:10] <GeDaMo> o|||||o: it's printing the result of the expression (the sum) at the end but it's applying pp to each of the items
[19:38:04] <o|||||o> ok, but in the next command, i took out the pp and it returns the same incorrect number
[19:38:06] <GeDaMo> o|||||o: so you're saying that 3535350 is not the correct result?
[19:38:17] *** Quits: Joanna (uid57472@id-57472.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[19:38:19] <o|||||o> yes
[19:39:19] <o|||||o> GeDaMo, i just did the math of the expected output on a calculator and realized what's going on
[19:39:22] <o|||||o> i'm an idiot
[19:39:32] *** Quits: arch-angel (~arch-ange@user/arch-angel) (Ping timeout: 250 seconds)
[19:39:38] <GeDaMo> Ah :P
[19:39:58] <o|||||o> the items all have the same price and the sum of the quantities is 10 and i didn't realize the 0 at the end somehow :P
[19:40:20] <o|||||o> thanks for being my rubber ducky
[19:40:41] <o|||||o> https://en.wikipedia.org/wiki/Rubber_duck_debugging
[19:40:41] <bayaz> Title: Rubber duck debugging - Wikipedia 
[19:40:49] <GeDaMo> Yeah, no problem :)
[19:41:39] *** deathonater is now known as Smeef
[19:41:46] <jenntech> ok they are not helpful at all... lol... how bout this. can someone recommend a better language to code in to create / implement a cart ? Django maybe?
[19:41:59] *** Joins: trevors (~trevors@user/trevors)
[19:42:34] *** Quits: Cashlin (~hp@user/cashlin) (Quit: Konversation terminated!)
[19:42:44] *** Joins: mei (~mei@user/mei)
[19:45:25] *** Quits: independent56 (~independe@148.252.133.82) (Ping timeout: 256 seconds)
[19:45:57] *** Quits: inky_ (~inky@78.109.66.134) (Ping timeout: 240 seconds)
[19:46:08] *** Joins: toulene (~toulene@user/toulene)
[19:46:28] *** Quits: Pook (~Pook@2001:8a0:f996:1400:7d38:75ea:66b:3702) (Ping timeout: 250 seconds)
[19:47:50] <anddam> GeDaMo: no, they don't pay me for that
[19:48:34] <GeDaMo> That's a terrible attitude! What's the world coming to? :/
[19:48:52] <anddam> GeDaMo: well they don't pay me for doing Euleru Project anyway
[19:48:56] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[19:48:57] *** Joins: independent56 (~independe@148.252.133.82)
[19:49:05] <anddam> "Euleru" came up very Romanian
[19:50:15] *** Parts: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) ()
[19:50:42] *** Joins: tee (~totertats@149.28.98.129)
[19:51:05] *** tee is now known as Guest1664
[19:51:52] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[19:52:17] <jenntech> this is the documentation im using https://commercejs.com/docs/guides/checkout-react
[19:52:18] <bayaz> Title: React.js checkout | Commerce.js docs 
[19:52:50] *** Joins: brabrax (~brabrax@user/brabrax)
[19:52:59] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[19:53:20] <jenntech> at the top of the page it says to create an account and add products to the chec servicer... but further down the page its saying to put code to add products.. i dont get it.. lol
[19:53:46] <o|||||o> jenntech, i'm building a site with ecommerce right now. using rails for api and react/redux for frontend
[19:53:58] <jenntech> ya thats what im trying to do...
[19:54:14] <o|||||o> what issue are you running into?
[19:54:27] <jenntech> did you have to add code to add products? or are you just pulling the products from your API?
[19:54:53] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[19:54:56] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[19:55:00] <jenntech> no issue really.. I just dont know if the code (for adding products) part is required if im pulling my products from API anyways?
[19:55:15] <o|||||o> yeah, you have to tell the code what it means to add an item
[19:55:26] *** Joins: Inst (~Liam@c-98-208-218-119.hsd1.fl.comcast.net)
[19:55:38] <jenntech> ok
[19:55:51] <o|||||o> i have my api return the entire cart whenever it is updated and i just replace the entire cart on the front end with the most up to date one
[19:56:25] <jenntech> that seems dumb lol... what API cart servicer are u using? I dont think i like the one im using anymore
[19:56:47] *** Joins: trevors (~trevors@user/trevors)
[19:57:04] <o|||||o> i rolled my own
[19:57:08] <o|||||o> using rails
[19:57:09] <jenntech> this whole cart thing is HARD
[19:57:14] <jenntech> ouch ok
[19:57:27] <jenntech> im not that good lol
[19:57:30] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[19:57:31] *** Joins: lunarkitty (uid501895@user/pyra)
[19:57:50] <o|||||o> it is a lot of work, this is for my capstone project in a bootcamp
[19:57:51] <jenntech> alright.. thank you for your help... Greatly appreciated
[19:58:23] <jenntech> I graduated my bootcamp already... when I went they told us to stay away from anything checkout/cart related... Now i see why
[19:58:33] *** Parts: norayr (376bc34bfc@37.252.78.253) (Error from remote client)
[19:58:40] *** Quits: spaceangel__ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[19:58:57] <jenntech> I went to Kenzie Academy
[19:59:17] <o|||||o> i'm in flatiron
[19:59:45] <pyzozord> I was supposed to learn go today but instead ended up tinkering with my editor whole day
[19:59:53] <pyzozord> to support the line editing mode no less
[19:59:54] *** Quits: trevors (~trevors@user/trevors) (Client Quit)
[20:00:44] <jenntech> oh nice... heard good things about that one
[20:01:25] <jenntech> Ive already landed a job at intel... 1 year after graduating.. stick with it..:) ¬†Good luck
[20:03:38] *** Quits: XV8 (~XV8@2601:5cb:c001:50::4f47) (Quit: Textual IRC Client: www.textualapp.com)
[20:05:35] <user51> pyzozord: how long is your vimrc? :P
[20:05:59] <user51>  286 1081 7272 lib/vimrc
[20:06:17] *** Joins: eddof13 (~eddof13@2806:102e:12:64:f838:6484:5e24:bd9f)
[20:07:41] *** Joins: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net)
[20:08:09] *** Joins: suss (~user@user/suss)
[20:08:12] *** Quits: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net) (Remote host closed the connection)
[20:09:25] *** Joins: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net)
[20:12:32] *** Joins: alexmac22347 (~alexmac22@192.157.105.82)
[20:12:46] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[20:14:50] *** Quits: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk) (Read error: Connection reset by peer)
[20:15:02] *** Quits: Guest1664 (~totertats@149.28.98.129) (Ping timeout: 240 seconds)
[20:16:14] <pyzozord> user51: I don't hav a vimrc, I got .viprc
[20:16:43] <pyzozord>      33      98     506
[20:18:29] <pyzozord> you can see it here curl -L http://bpa.st/raw/7XGQ | base64 -d > viprc
[20:18:30] <bayaz> Type: text/plain; charset=utf-8 Size: 685 B 
[20:19:09] <pyzozord> it's really .exrc but i added a new option "spacetabs" so it's no longer compatible
[20:19:48] *** Quits: Inst (~Liam@c-98-208-218-119.hsd1.fl.comcast.net) (Ping timeout: 268 seconds)
[20:19:59] *** Quits: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net) (Ping timeout: 256 seconds)
[20:21:39] *** Joins: ravan (~ravan@user/ravan)
[20:22:04] <pyzozord> user51: I'm wasn't tinkering with the config file, I was tinkering with the editor
[20:23:15] <user51> have fun with it.
[20:24:39] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[20:25:11] *** Joins: trevors (~trevors@user/trevors)
[20:26:07] *** Joins: absc (~absc@dynamic-adsl-94-34-219-179.clienti.tiscali.it)
[20:27:12] <pyzozord> the source code is a bit tough to get through https://repo.or.cz/nvi.git/tree
[20:27:14] <bayaz> Title: Public Git Hosting - nvi.git/tree 
[20:27:15] *** Quits: TheLinuxNerd (~tux@user/thelinuxnerd) (Changing host)
[20:27:15] *** Joins: TheLinuxNerd (~tux@fsf/member/TheLinuxNerd)
[20:27:54] <pyzozord> but I've spent some time with it already, also got rid of most of the directories, in my fork there are only ./cl ./common ./ex ./vi and ./dist
[20:28:03] *** Joins: NeoFAT32 (~NeoFAT32_@user/NeoFAT32)
[20:28:08] <pyzozord> and no files at the top level
[20:28:13] *** Quits: eddof13 (~eddof13@2806:102e:12:64:f838:6484:5e24:bd9f) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[20:32:26] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[20:34:19] *** Quits: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de) (Remote host closed the connection)
[20:36:02] *** Quits: duuude (~user@user/duuude) (Ping timeout: 240 seconds)
[20:36:50] *** Joins: flaqologist (~F@32.211.211.39)
[20:39:15] *** Joins: anomal (~anomal@176-12-60-137.pon.spectrumnet.bg)
[20:39:31] *** Joins: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de)
[20:41:11] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[20:41:16] *** Bou is now known as Bou2
[20:41:18] *** Bou2 is now known as Bou
[20:44:06] *** Joins: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net)
[20:46:46] *** Quits: NeoFAT32 (~NeoFAT32_@user/NeoFAT32) (Quit: Leaving)
[20:47:09] *** Joins: NeoFAT32 (~NeoFAT32_@user/NeoFAT32)
[20:47:55] *** Quits: wonko-the-sane (~wonk-the-@gateway/tor-sasl/wonko-the-sane) (Quit: leaving)
[20:47:59] *** Quits: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[20:48:58] *** Joins: wauterboi (~wauterboi@185.195.233.158)
[20:49:11] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Quit: WeeChat 2.8)
[20:49:26] *** Joins: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net)
[20:50:10] <pyzozord> so anyone knows about any line editors other then ed/ex?
[20:50:34] <GeDaMo> edlin from DOS
[20:50:36] *** Quits: absc (~absc@dynamic-adsl-94-34-219-179.clienti.tiscali.it) (Quit: Leaving)
[20:50:40] *** Quits: Whippersnapper (~whprsnpr@user/whippersnapper) ()
[20:50:56] *** Joins: Whippersnapper (~whprsnpr@user/whippersnapper)
[20:50:59] *** Joins: duuude (~user@user/duuude)
[20:51:00] <deniska> pyzozord: 80s home computers hooked to TVs sorta had line editors
[20:51:16] <deniska> 20 GOTO 10 kind of thing
[20:51:17] *** Quits: NeoFAT32 (~NeoFAT32_@user/NeoFAT32) (Client Quit)
[20:51:36] <flaqologist> sed
[20:51:47] *** Joins: NeoFAT32 (~NeoFAT32_@user/NeoFAT32)
[20:52:35] <GeDaMo> CP/M apparently also had one called ed http://www.gaby.de/cpm/manuals/archive/cpm22htm/ch2.htm
[20:52:36] <bayaz> Title: Section 2: The CP/M Editor 
[20:53:50] <GeDaMo> https://en.wikipedia.org/wiki/TECO_(text_editor)
[20:53:50] <bayaz> Title: TECO (text editor) - Wikipedia 
[20:54:04] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Read error: Connection reset by peer)
[20:54:22] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[20:55:09] <pyzozord> oh cool never heard about any of these
[20:55:39] <pyzozord> I am trying to use ex but it is just too inconvenient. I'm not sure if I use it worng or is it just more difficult to use
[20:55:48] <GeDaMo> https://en.wikipedia.org/wiki/Category:Line_editor
[20:55:49] <bayaz> Title: Category:Line editor - Wikipedia 
[20:56:07] <flaqologist> there is a visual mode in ex, i forget how it works
[20:56:31] <pyzozord> flaqologist: yes, it's called vi :P
[20:57:31] *** Joins: eddof13 (~eddof13@2806:102e:12:64:f838:6484:5e24:bd9f)
[20:57:41] <flaqologist> `ex -v`
[20:58:04] <pyzozord> oh you men something else
[20:58:17] <pyzozord> ex -v opens vi for me
[21:01:40] *** Joins: inky_ (~inky@141.136.91.177)
[21:01:59] *** Quits: widp (~widp@124.123.106.87) (Remote host closed the connection)
[21:02:48] <flaqologist> this one is from http://ex-vi.sourceforge.net
[21:03:45] <pyzozord> The CP/M's ED was much diffrent from Unix's ed
[21:04:45] *** Joins: DangerWabbit (~DangerWab@109.70.150.165)
[21:05:14] <pyzozord> deniska: I think that era of computers hooked up to TVs and booting into BASIC editor was awesome
[21:05:35] <pyzozord> deniska: but wern't those essentially visual editors?
[21:05:51] <GeDaMo> No, most of them weren't
[21:05:56] <pyzozord> oh maybe not, that's why you did lines in increments of tens
[21:06:06] <Decker> they didn't
[21:06:16] <pyzozord> err, labels
[21:06:21] <GeDaMo> Some didn't have editors at all, you had to retype the whole line :P
[21:06:26] <Decker> so you could later insert at 5  or 3 6
[21:06:32] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:06:55] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[21:07:12] <GeDaMo> They had tiny amounts of ROM so any editing was usually very simple
[21:07:37] *** Quits: eddof13 (~eddof13@2806:102e:12:64:f838:6484:5e24:bd9f) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[21:07:48] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Ping timeout: 252 seconds)
[21:07:58] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:08:59] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[21:09:16] *** Quits: fe23 (~fe23@2409:8a34:466:6010:b43d:b4dc:73d0:6634) (Quit: fe23)
[21:09:43] *** Joins: mnlwldr (~mnlwldr@user/mnlwldr)
[21:10:29] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:11:04] <oldlaptop> flaqologist: ex and vi are commonly the same binary
[21:11:11] <oldlaptop> (perhaps even universally?)
[21:11:24] <flaqologist> that one on sourceforge is a fork of ex 3.7
[21:11:39] <user51> pyzozord: you should try using ed sometimes
[21:11:45] <user51> i recommend the plan9 version
[21:12:11] <oldlaptop> on my voidlinux systems, ex is a symlink chain to vi
[21:12:13] <pyzozord> i tried some ed before I moved to ex/vi what I was missing in ed was autoindent
[21:12:22] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[21:12:35] <user51> oh yeah, there's also sam in plan 9
[21:12:41] *** Joins: ttree (~ttree0@c-24-17-16-242.hsd1.wa.comcast.net)
[21:12:44] <oldlaptop> on openbsd ex and vi are hardlinks to the same binary
[21:12:56] <pyzozord> its a shame there is no sam for linux
[21:12:56] *** Joins: norayr (376bc34bfc@37.252.78.253)
[21:13:08] <user51> there's plan9port sam
[21:13:18] <oldlaptop> and the first debian system I have at hand has ex as a symlink chain to vim
[21:13:39] *** Joins: Pickchea (~private@user/pickchea)
[21:13:44] <oldlaptop> I would describe this state of affairs as vi having an ed mode, not ex having a vi mode
[21:13:53] <user51> i used both sam and acme for a while, they just didn't have some quality of life features, like abbr in vim
[21:14:02] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 240 seconds)
[21:15:38] *** Joins: tyson2 (~user@cpeac202e798f63-cmac202e798f60.cpe.net.cable.rogers.com)
[21:15:53] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[21:16:16] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[21:17:02] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Client Quit)
[21:17:03] <pyzozord> user51: what do you use abbr for?
[21:17:23] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:a05b:7d1e:88ff:af3b)
[21:17:49] *** Joins: Pook (~Pook@2001:8a0:f996:1400:9842:a28:7119:2c3a)
[21:17:53] *** Quits: user51 (~user51@77.124.35.94) (Remote host closed the connection)
[21:18:07] *** Joins: user51 (~user51@77.124.35.94)
[21:18:19] *** Joins: Numocha (~anonkitty@user/anonkitty)
[21:18:40] <Numocha> I would like to ask a career related question
[21:18:40] *** Joins: widp (~widp@2406:7400:73:7de3:9990:3906:6373:4b6e)
[21:19:12] <mawk> please do
[21:19:37] *** Quits: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net) (Ping timeout: 250 seconds)
[21:19:46] <Numocha> My parents insist that I try to go to a university to earn a degree because in their mind, I cannot get a job without a degree
[21:19:48] <user51> pyzozord: http://0x0.st/oNBk.txt
[21:19:58] *** Quits: flaqologist (~F@32.211.211.39) (Remote host closed the connection)
[21:20:02] <user51> it's mostly abbrevations or a bit less typing
[21:20:13] *** Joins: flaqologist (~F@32.211.211.39)
[21:20:29] <Numocha> Rrecently I have been recommended to go to the top uni in my country to study infotech/networking
[21:20:36] <pyzozord> user51: cool, doesn't it get in the way sometimes?
[21:20:53] <user51> sometimes it does, but you can just remove it
[21:20:57] <mawk> I got a job without a degree, but it's dependant on the country you live in
[21:21:01] <mawk> some countries are insistant on degree
[21:21:03] <Raziel> Numocha, but in your heart, you want to become an F1 driver?
[21:21:30] <Numocha> When I asked them why I needed a degree there, they flat out told me that there are people who got jobs without a degree but they still went there because...reasons
[21:22:10] <Numocha> and that people get degrees to pursue further studies that can potentially boost their opportunities?
[21:22:10] <Raziel> it's generally gonna be a lot easier to get a programming job if you do have a bachelor's
[21:22:20] <Numocha> They did not sound confident
[21:22:20] <pyzozord> Numocha: a lot of people use degree as a proxy to evalua persons worth or competences
[21:22:47] <Numocha> I tried college for two years in a different field and was miserable lol
[21:23:05] <Numocha> I am more of an autodidact, but
[21:23:11] <Numocha> I am just unsure...
[21:23:45] <pyzozord> all other things equal it is for sure better having a degree than don't having it
[21:24:00] <Raziel> my getting a degree experience wasn't too bad. there was a lot of focus on practical knowledge, actual projects, up to date tech
[21:24:15] <Raziel> but that depends a lot on where you're getting your degree v:
[21:24:23] *** Quits: wauterboi (~wauterboi@185.195.233.158) (Ping timeout: 250 seconds)
[21:24:53] *** Quits: ravan (~ravan@user/ravan) (Read error: Connection reset by peer)
[21:25:14] <pyzozord> I think the ideal scenario is day cs studies, and part time working as a freelancer or junior developer
[21:26:15] *** Joins: teut (~teut@122.161.89.92)
[21:26:42] <user51> Numocha: do your parents have a degree?
[21:26:48] <Numocha> They do
[21:27:04] <Numocha> But of course things were different a long time ago
[21:27:18] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[21:27:40] *** aoei is now known as Rust
[21:27:57] <pyzozord> Numocha: do you have a better alternative?
[21:28:06] <Numocha> And their degrees are of the more traditional majors, business and pedagogy
[21:28:28] <Numocha> Well for one I genuinely believe I thrive when studying on my own
[21:28:51] <Numocha> but I get tons of pressure from parents to just get some random ass degree then can do whatever
[21:29:11] <mawk> >The British government reportedly asked when Microsoft would 'get rid' of algorithms
[21:29:22] <Raziel> maybe there'd be less pressure if you did get an actual decent job without a degree :p
[21:29:23] <mawk> people in charge are very up to date on technology it seems
[21:29:26] *** Quits: magla (~gelignite@d536146e.access.ecotel.net) (Read error: Connection reset by peer)
[21:29:27] <pyzozord> do something a bit lighter that might come in useful later connected to programming
[21:29:30] <Numocha> Also I was born male so if I don't go to a uni from a state-approved list, I might have to go do military service for 2 years, which I dread
[21:29:37] <pyzozord> not sure how much light mba is
[21:29:43] *** Joins: magla (~gelignite@d536146e.access.ecotel.net)
[21:29:55] <mawk> then the question is settled Numocha , go to uni
[21:30:19] <Raziel> Numocha, yeah that'd be a rather shitty way to waste 2 entire years
[21:30:27] <Raziel> at least a degree would be somewhat useful
[21:30:28] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[21:30:34] <Numocha> If I had to go to uni, I don't see myself learning anything other than software engineering or networking. I despise business/econ majors with a passion
[21:30:54] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 252 seconds)
[21:30:55] <mawk> economy is fine
[21:31:13] <Numocha> My experience suggested otherwise lol
[21:31:24] <pyzozord> if you live in a capitalistic country economy would be very useful
[21:31:38] <pyzozord> if nothing else, just to manage personal finances well
[21:31:49] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Quit: Shlomi Fish ("Rindolf") has left the server. ‚ÄúChuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.‚Äù)
[21:31:51] <Numocha> It's so stupid that you have to go through subjects like using Excel, only to do the test in written form
[21:32:14] <Numocha> pyrozord: I am preeeeetty sure we are all living in a capitalistic world
[21:32:21] <pyzozord> knowing excel is a very useful skill btw I wish I knew more excel :P
[21:32:34] <Numocha> Some more so than others, of course, but none escapes its grasp
[21:32:36] *** Joins: rickybob2 (~rickybob@35.143.255.39)
[21:32:37] *** Joins: wisep__ (~rickybob@35.143.255.39)
[21:33:31] <Sqaure> I did 40% maths, 25% physics a, 25% CS, 15% signal processing/system control in uni. The only CS courses i miss i took is functional programming and maybe some abstract algebra / category theory. I feel CS as a subject is not meaty enough to spend time on. 
[21:33:34] <GeDaMo> http://www.itu.dk/people/sestoft/corecalc/
[21:33:35] <bayaz> Title: Corecalc and Funcalc - Spreadsheet Technology in C# 
[21:34:03] *** Joins: eddof13 (~eddof13@2806:102e:12:64:f838:6484:5e24:bd9f)
[21:34:38] <pyzozord> no wonder you had tough time :P
[21:34:39] <jenntech> anyone have any idea what these errors are telling me? they seem to be coming from system generated files... https://codesandbox.io/s/cocky-wave-fpoyhm?file=/src/errors
[21:34:40] <bayaz> Title: cocky-wave-fpoyhm - CodeSandbox 
[21:34:40] *** Quits: icy_troubles (~icy_troub@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com) (Read error: Connection reset by peer)
[21:34:42] <pyzozord> this sounds really tough
[21:34:44] <Numocha> Looking at their curriculum, it seems like for all majors the first programming language they learn is C
[21:34:45] <Sqaure> I would read history than do excessive CS so to speak
[21:34:47] *** Quits: nulleip (~luiz@user/nulleip) (Ping timeout: 256 seconds)
[21:34:47] <jenntech> using react btw
[21:34:48] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[21:34:55] *** Joins: icy_troubles (~icy_troub@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com)
[21:35:48] *** Quits: inky_ (~inky@141.136.91.177) (Remote host closed the connection)
[21:35:51] <Numocha> Goddamnit they are all focused on teaching Windows things like .NET 
[21:35:56] *** Joins: tater (~totertats@149.28.98.129)
[21:35:58] *** Joins: inky_ (~inky@141.136.91.177)
[21:36:13] <Raziel> well windows tings like .net are in high demand
[21:36:17] <Raziel> things* even
[21:36:39] <Raziel> and, the first language being C is fine :p
[21:36:41] <Numocha> Hopefully my wine doesn't fail me lol I refuse to go back to daily driving Windows
[21:36:42] *** Joins: nulleip (~luiz@user/nulleip)
[21:36:46] <pyzozord> Numocha: few days ago someone was complaining that most jobs in australia are for dotned devs
[21:37:20] <Numocha> My country outsources a lot of labor too
[21:37:36] <Numocha> I am expecting to work for some company abroad I think
[21:37:42] <GeDaMo> dotned Kelly? :P
[21:37:48] <Sqaure> What about Atlassian? Seems like they mostly do java there
[21:38:54] *** Quits: jamea (~jamea@177.239.82.186) (Ping timeout: 260 seconds)
[21:39:27] <Numocha> Looks like they start from low level here
[21:40:02] <Numocha> from the base with C, then moving to web dev and Java apps
[21:40:06] <Raziel> as opposed to starting from "how to make an entire triple A game in three lines of python"?
[21:40:16] <Numocha> then C# and .NET for obvious reasons
[21:40:32] <Hash> Well I just found out something new
[21:40:45] <Hash> I have scoliosis 3d curve in spine that goes forwar to the right.
[21:40:50] <Hash> Spine curnes to the right.
[21:40:58] <Hash> wierd 3d curvature kind of. Xray showed
[21:41:01] <Hash> Sigh.
[21:41:06] <Hash> Pile on more problems, world
[21:41:07] <Raziel> Hash, welcome to the club, hope you like massages
[21:41:12] <Hash> Haha
[21:41:17] <Hash> There's a club?
[21:41:19] <pyzozord> GeDaMo: when I searched for "Kelly Dontned" I found many Kellies who program in dotnet
[21:41:21] <Raziel> there is now! :p
[21:41:23] <Hash> "Yeah. We meet every thursday."
[21:41:25] <Hash> Haha
[21:41:44] <pyzozord> um I mean "Dotned"
[21:41:55] <jenntech> hi my name is jenn.... ".....Hi Jenn" lol sorry couldnt help myself
[21:41:56] <Raziel> kim dotcom
[21:42:01] <GeDaMo> https://en.wikipedia.org/wiki/Ned_Kelly
[21:42:02] <bayaz> Title: Ned Kelly - Wikipedia 
[21:42:09] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Quit: rickybob)
[21:42:32] *** Quits: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru) (Read error: Connection reset by peer)
[21:43:11] <Raziel> Numocha, anyway, that sounds pretty run of the mill
[21:43:38] <Numocha> heh I suppose I will have to learn stuff on my own in my free time too
[21:43:47] <Raziel> enough variance for most overarching types of programming, focus on what's sought after in the market
[21:43:52] <Numocha> Though that is more fun than having to learn things I dislike. Like econ
[21:43:55] <Raziel> well, yeah, you're usually expected to :p
[21:44:05] *** Quits: password2 (~password8@user/password2) (Ping timeout: 252 seconds)
[21:44:31] <Numocha> I look forward to learning C eventually. It feels so important
[21:45:05] <Raziel> I'm more of a C++ cosmic horror style madness guy, but yeah
[21:46:03] <pyzozord> Hash: I find as you keep on living, you start collecting these and slowly learning to accept
[21:46:21] <pyzozord> and just do the best with what you've got
[21:46:22] *** Quits: icy_troubles (~icy_troub@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com) (Ping timeout: 260 seconds)
[21:46:28] *** Joins: Enitin (~Enitin@82.180.145.228)
[21:46:41] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[21:46:48] <apotheon> Raziel: nice phrasing
[21:46:56] <apotheon> Raziel: nice name, too
[21:47:24] <GeDaMo> Raziel: I suspect I've asked this before but is your nick a Soul Reaver reference?
[21:47:24] <Raziel> :p
[21:47:29] <Raziel> GeDaMo, it is
[21:47:31] <pyzozord> c++thulu
[21:47:36] <GeDaMo> Excellent :P
[21:49:20] <apotheon> C++hulu
[21:49:23] <apotheon> streaming video
[21:49:30] <apotheon> s/t/c/
[21:49:40] <apotheon> /rimshot
[21:51:39] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb)
[21:53:34] *** Joins: Thedarkb1 (~Thedarkb@92.40.196.2.threembb.co.uk)
[21:54:33] *** Quits: Numocha (~anonkitty@user/anonkitty) (Ping timeout: 252 seconds)
[21:55:30] *** Joins: Numocha (~anonkitty@user/anonkitty)
[21:58:10] <GeDaMo> https://www.youtube.com/watch?v=YNWSDvDqm9g
[21:58:11] <bayaz> Title: Legacy of Kain: Soul Reaver OST - Ozar Midrashim 
[21:59:33] <pyzozord> I wonder if it was as hyped up as say Elden Ring is right now
[21:59:52] <pyzozord> I mean comperatively, back then gaming market was much smaller
[22:00:20] <pyzozord> (hype not necessairly in the bad meaning of the word)
[22:00:39] *** Joins: filename (~kilitary@static.246.201.46.78.clients.your-server.de)
[22:01:21] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[22:03:42] <Hash> My arm si sore
[22:03:47] <Hash> I got the first vaccine shot yesterday
[22:03:52] <Hash> No symptoms though
[22:03:54] <Hash> I feel fine.
[22:03:59] <Hash> Been a whole day since the injection
[22:04:08] <Hash> I got 2 more shots. I more shot and then a booster they said
[22:04:12] <Hash> pfizer mrna vaccine
[22:04:26] <Hash> pyzozord: hey you know any php
[22:04:34] <Sqaure> first. Pretty late to the game. But congrats or something =D
[22:04:40] <Hash> I just was lazy
[22:04:47] <Hash> I wasn't against vaccines
[22:04:54] <Hash> Imagine if people were this stupid when polio vaccine came out
[22:05:01] <Hash> Oh no, vaccines make you auststic
[22:05:06] <Hash> Bitch, polio makes you disabled
[22:05:08] <Hash> pick one.
[22:05:21] <Sqaure> lazy is fair. I can identity with that.
[22:05:43] <Hash> That's the question huh
[22:05:43] *** Quits: Numocha (~anonkitty@user/anonkitty) (Quit: WeeChat 3.4.1)
[22:05:53] <Hash> Would you rather be autistic or disabled?
[22:05:56] <pulse> i self-vaccinate with CBD
[22:06:02] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[22:06:12] <Hash> Would you rather date the deaf of the blind?
[22:06:19] <Sqaure> id pick autistic, probably already am right.
[22:06:23] <Hash> ^ Not my question, seinfeld
[22:06:37] <Sqaure> deaf
[22:06:38] <Hash> I think I could date the blind.
[22:06:39] *** Quits: filename (~kilitary@static.246.201.46.78.clients.your-server.de) (Ping timeout: 252 seconds)
[22:06:40] <Bou> wow you people believe this "covid" exists? it was all made up man /s
[22:06:43] <pyzozord> Hash: my php is quite rusty
[22:06:53] <pyzozord> and not in the "rustlang" sense of rusty
[22:06:57] <pyzozord> but I can try to help
[22:07:02] <duuude> they can't see you being ugly
[22:07:12] <duuude> optimal choice
[22:07:15] <Hash> https://gitlab.com/hashborgir/d2tools Source code for : https://www.youtube.com/watch?v=r3h5_u7P7vs
[22:07:16] <bayaz> Title: Hash Borgir / d2tools 
[22:07:16] <bayaz> Title: D2 Modder v4.0 (BETA DEMO) - Diablo 2 Modding Application 
[22:07:26] <jenntech> covid was a way to control people... government version of a power trip
[22:07:34] <Hash> Take a peek if you want. I'm trying to find a way to port this to a better proper windows GUI application.
[22:07:39] *** Quits: the_lanetly_052 (~the_lanet@185.30.89.185) (Ping timeout: 256 seconds)
[22:07:41] <Hash> Looking for a GUI toolkit
[22:07:44] <Sqaure> i was thinking if they blind they don't love me for real. Ya know. its all about the genes right
[22:07:49] <Hash> With SQLite support
[22:08:00] <Hash> Something fast.
[22:08:07] <pyzozord> ooh I heard of some things that let you build gui apps in php
[22:08:07] <Hash> I don't know if I want to do C# opr what
[22:08:09] <Hash> I need a nice lang
[22:08:10] <pyzozord> I never tried one though
[22:08:17] <Hash> Yeah, the god of ##php said no
[22:08:24] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[22:08:28] <Hash> he doesn't recommend gui for php
[22:08:32] <Hash> php gtk or php qt
[22:08:45] <epony> MERS/SARS/2 is a bio-weapon rate series of outbreak from US labs in the Middle East and in borders regions of China labs
[22:08:47] <Hash> but if I did redo the appin a proper php framework
[22:08:50] <Hash> I could keep a lot of my code.
[22:08:59] *** Joins: Zeturic (~Orimendix@50.26.218.162)
[22:09:04] <pyzozord> meh, https://www.reddit.com/r/untitledgoosegame/comments/dftkp9/no_gods_no_masters/
[22:09:06] <bayaz> Title: r/untitledgoosegame - No Gods, No Masters 
[22:09:09] <pyzozord> especially in php
[22:09:23] <InPhase> Hash: You can use Python with pyside and get Qt.
[22:09:28] <Hash> Hmm.
[22:09:29] <epony> the vaccines are alright, but not really effective for the mutated variants.. so new vaccines are in progress and will be redeployed globally
[22:09:30] <pyzozord> but yeah that would be probably highly experimental and likely unstable
[22:09:31] <Hash> That's not a bad idea
[22:09:32] *** Quits: widp (~widp@2406:7400:73:7de3:9990:3906:6373:4b6e) (Ping timeout: 240 seconds)
[22:09:36] <Hash> But python though. Ew.
[22:09:38] <epony> don't get sick needlessly, use needles ;-)
[22:09:39] <Hash> No {}
[22:09:45] *** Joins: jamea (~jamea@200.68.140.3)
[22:09:46] <Hash> I can't stand python indentation nonsense. I can't.
[22:09:47] <InPhase> Hash: It's a whole lot better than php.  :)
[22:09:49] <pyzozord> python gui is not bad, it happens sometimes
[22:10:00] <Hash> I dunno, man. PHP is pretty badass.
[22:10:14] <oldlaptop> Hash: Consider Tcl/Tk, particularly if (for whatever reason) sqlite is already a particular requirement.
[22:10:16] <InPhase> Hash: The indentation is actually super easy to get used to.  We normally indent code anyway, so it's not really so different.
[22:10:38] <Hash> I am fearful of long python code
[22:10:39] <pyzozord> PHP grew a lot, but it's still getting the old bad rep
[22:10:46] <Hash> PHP is awesome now
[22:10:49] <Hash> 8.1 is badass
[22:11:02] <Hash> https://stitcher.io/blog/new-in-php-81
[22:11:03] <bayaz> Title: What's new in PHP 8.1 - stitcher.io 
[22:11:04] <pyzozord> they have like type hints and other stuff
[22:11:09] <oldlaptop> python's indentation rules are essentially what is common practice in all the other curly-brace languages anyhow
[22:11:12] <Hash> enums
[22:11:17] <pyzozord> I forget but there is a lot of things new since 5.3
[22:11:40] <epony> PHP 5.2.1 is the version you meant to quote ;-)
[22:11:41] <pyzozord> better lambdas, lots of stuff
[22:11:45] <Hash> Fibers ‚Äî aka "green threads" ‚Äî are a low level mechanism to manage parallelism. You probably won't use them directly in your applications, but frameworks like Amphp and ReactPHP will make extensive use of them.
[22:12:04] <pyzozord> ooh fiber is a good name for that
[22:12:04] <Hash> Array unpacking with string keys rfc
[22:12:06] <epony> previus significant version was PHP 4.4
[22:12:25] <pyzozord> fiber should be the popular name for it not "green threads"
[22:13:06] <pyzozord> I stopped around 5.2, 5.3 around that time
[22:13:06] <epony> https://en.wikipedia.org/wiki/PHP#PHP_5
[22:13:07] <bayaz> Title: PHP - Wikipedia 
[22:13:13] *** Quits: inky_ (~inky@141.136.91.177) (Remote host closed the connection)
[22:13:21] <Hash> I been using since php3
[22:13:28] <Hash> but regularly since php4
[22:13:36] <pyzozord> PHP 6 was out but noone was using it, or it was fake news, whatever I don't remember
[22:13:43] <Hash> I was in web so I picked php as my language, back in 2007 it was the most populr lang on web
[22:13:51] <Hash> I love php
[22:13:55] <Hash> have for over 12 years
[22:14:05] <Hash> it's a wonderful language if you get past the sillines somtimes
[22:14:14] *** Joins: inky_ (~inky@141.136.91.177)
[22:14:14] *** Quits: inky_ (~inky@141.136.91.177) (Remote host closed the connection)
[22:14:27] <Hash> It works. Easy to use. Tons and tons and tons of support, packagist, composer, frameworks
[22:14:39] <Hash> And since almost everything is the web and I was doing web, it was and still is the best lang
[22:14:49] <Hash> I mean, most of the web software these days still runs on php
[22:14:52] <Hash> php market share is huge
[22:15:00] <Hash> PHP has market share of 34.69% in programming-language market.
[22:15:10] <pyzozord> I never liked php namespaces though, \ is so ugly
[22:15:10] <Hash> PHP is the most used server-side programming language on the web. In fact, 79.2% of all websites rely on PHP to some degree, making it one of the most popular languages among programmers and web developers due to its widespread use.
[22:15:33] *** Joins: Cashlin (~hp@user/cashlin)
[22:15:35] *** Quits: tater (~totertats@149.28.98.129) (Quit: ZNC 1.8.2 - https://znc.in)
[22:15:40] <epony> arrow-of-time-butt  https://upload.wikimedia.org/wikipedia/commons/thumb/3/31/Webysther_20160423_-_Elephpant.svg/200px-Webysther_20160423_-_Elephpant.svg.png
[22:15:41] <bayaz> Type: image/png Size: 20.5 kB 
[22:15:42] <Hash> https://www.reddit.com/r/PHP/comments/pnd4eq/php_is_still_by_far_the_most_widely_used/
[22:15:42] *** Joins: inky_ (~inky@141.136.91.177)
[22:15:45] <bayaz> Title: Reddit - Dive into anything 
[22:15:55] <pyzozord> yeah but PHP is rarely selected for greenfield projects anymore, or not as often as it used to
[22:15:56] <Hash> PHP is still by far the most widely used server-side programming language with a 78.9% market share in 2021
[22:16:03] <Hash> So yeah. I think I made a solid choice in 2007
[22:16:05] <Hash> :)
[22:16:22] <epony> nah, PHP frameworks are massive
[22:16:30] <Hash> even code igniter?
[22:16:43] <Hash> or fat free framework, f3
[22:16:45] <pyzozord> code igniter was quite nice and pretty lightweight
[22:16:47] <Hash> or other simple tiny ones?
[22:16:52] <Hash> :)
[22:16:54] <Hash> I love CIO
[22:16:56] <Hash> CI*
[22:17:29] <pyzozord> yeah I used code igniter, then kohana, then symfony and zend
[22:17:32] *** Joins: widp (~widp@124.123.106.87)
[22:17:48] <epony> zend is heavy
[22:17:52] <pyzozord> I missed the laravel stuff, that I think is the most popular now (if still)
[22:18:11] <pyzozord> oh and I did also cakephp
[22:18:13] <epony> yii is lite
[22:18:19] <pyzozord> oh and yii too
[22:18:23] <pyzozord> damn I did lots of them
[22:18:36] <pyzozord> it's like a lifetime away now
[22:18:39] <pyzozord> ago
[22:18:45] <epony> 22 years
[22:19:04] <pyzozord> no in my case more 6-12 years ago
[22:19:04] <epony> since mainstream popularity and adoption uptake
[22:19:37] <epony> maybe we were onto it from the php3 years ;-)
[22:19:39] <Hash> https://web.archive.org/web/20100410070103/http://www.atirjavid.com/web-development/8-zend-framework-tutorials/4-a-modular-directory-structure-quickstart-module-switcher-front-controller-plugin.html
[22:19:41] <bayaz> Title: A Modular Directory Structure Quickstart: Module Switcher Front Controller Plugin 
[22:19:56] <Hash> When I first started PHP back in the day, I posted tutorials for Zend
[22:20:07] <Hash> My website was #1 on google for "Zend Application Tutorial"
[22:20:14] <pyzozord> I got out of php because I got scared of design patterns and this whole SOLID approach
[22:20:23] <pyzozord> and landed on javascript
[22:20:46] *** Joins: icy_troubles (~icy_troub@2605:8d80:669:be66:c703:497e:f908:e589)
[22:20:49] *** Quits: nitrix (~nitrix@user/nitrix) (Quit: ZNC 1.8.2 - https://znc.in)
[22:21:07] <pyzozord> I think my sense about solid was good, and about javascript so-so. It's been winning me bread for sure but did I learned much as a programmer? Eeh I don't know
[22:21:11] *** Quits: icy_troubles (~icy_troub@2605:8d80:669:be66:c703:497e:f908:e589) (Read error: Connection reset by peer)
[22:21:21] *** Joins: nitrix (~nitrix@user/nitrix)
[22:21:42] <Hash> What is a solid?
[22:21:46] <Hash> I know matter physics
[22:21:50] <pyzozord> https://en.wikipedia.org/wiki/SOLID
[22:21:50] <bayaz> Title: SOLID - Wikipedia 
[22:21:50] <Hash> but what is a solid in programming?
[22:22:07] *** Joins: Akuli (~Akuli@82-203-162-72.bb.dnainternet.fi)
[22:22:11] <Hash> Interesting
[22:22:26] <pyzozord> I see https://github.com/EnterpriseQualityCoding/FizzBuzzEnterpriseEdition as the logical conclusion of SOLID
[22:22:27] <bayaz> Title: GitHub - EnterpriseQualityCoding/FizzBuzzEnterpriseEdition: FizzBuzz Enterprise Edition is a no-nonsense implementation of FizzBuzz made by serious businessmen for serious business purposes. 
[22:22:43] <pyzozord> or at least when followed dogmatically which it usually is
[22:22:45] <Hash> Ohh stomach  hurts
[22:22:46] <Hash> brb
[22:23:22] <oldlaptop> pyzozord: Any sensible idea can be taken to bizzare, academic, dogmatic extremes and used to produce FizzBuzz Enterprise Edition.
[22:23:39] *** Joins: juliaEnv (~juliaEnv@h-37-123-164-79.A137.corp.bahnhof.se)
[22:24:25] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Quit: leaving)
[22:24:55] <epony> and bingo cards for software methodologists symposiums
[22:26:57] <pyzozord> oldlaptop: I aggree any idea can be taken to far and result in some bizzare caricature, but FizzBuzzEE has the unique SOLID aftertase on it
[22:27:43] <epony> SOILD ;-)
[22:28:54] <jenntech> I liked FizzBuzz
[22:29:02] <epony> https://en.wikipedia.org/wiki/List_of_software_development_philosophies#Software_development_methodologies,_guidelines,_strategies
[22:29:02] <bayaz> Title: List of software development philosophies - Wikipedia 
[22:29:11] <pyzozord> SOLID is not bad on it's own, I think I just hate it for the same resons people hate php or javascript
[22:29:17] *** Quits: nishant (~Nishant@49.37.242.151) (Quit: Leaving)
[22:29:34] <pyzozord> lots of people take it too far and far too incompetently
[22:29:40] <jenntech> if num%2=0 && num%5==0: lol
[22:29:45] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[22:30:34] <pyzozord> jenntech: that's not fizzbuz
[22:30:55] *** Joins: jnnnnnnnnn (~jnnnnnnnn@c-2172524e.016-77-73746f43.bbcust.telenor.se)
[22:30:59] <InPhase> farcebuzz, almost the same
[22:31:11] <epony> it makes better joejob postings and sharper whiplash snapshots
[22:31:17] <pyzozord> epony: but now, for example data-oriented design I think it's quite brillinat
[22:31:27] <epony> yeeeees
[22:31:27] <jenntech> https://www.tutorialspoint.com/fizz-buzz-in-python
[22:31:27] <bayaz> Title: Fizz Buzz in Python 
[22:31:28] <pyzozord> but that probably could be taken too far as well
[22:31:37] <InPhase> Hash: It does appear that php 8 and 8.1 added some nice features.  Although it seems it is still far from the general purpose utility of Python.
[22:31:52] <jenntech> i had it a little bit wrong.. but close enough lol
[22:31:56] <pyzozord> btw that's a good wiki page
[22:32:00] <epony> not further than the CPU cache lines and processor affinity
[22:32:22] <InPhase> Hash: However it is possible that those 8 and 8.1 changes will revitalize the utility of php for server side web work.  I thought it had been fading for this purpose, but that might bring it back.
[22:32:28] *** Quits: NeoFAT32 (~NeoFAT32_@user/NeoFAT32) (Quit: Leaving)
[22:32:48] <pyzozord> definitely didn't even hear about 1/3 of the things on that page
[22:32:48] *** Joins: NeoFAT32_ (~NeoFAT32_@118.179.224.74)
[22:33:33] <epony> it's like the list of architectural styles for fashion
[22:33:55] <pyzozord> InPhase: I also think php might have a second summer in it for some reason. People like me can get nostalgic about and and rediscover it being better then ever
[22:34:03] <jenntech> what is the fizzbuzz you were referring to? now im curious
[22:34:27] *** Quits: tyson2 (~user@cpeac202e798f63-cmac202e798f60.cpe.net.cable.rogers.com) (Remote host closed the connection)
[22:35:00] <pyzozord> if only it stoped wanting to be seen as one of the big and serious languages and stop playing with that SOLID crap and just get real abot simply good programming
[22:35:15] <InPhase> pyzozord: My main objection to "Data-oriented Design" is just the messaging that comes along with it, where it is frequently presented as a contrast to OOP design.  As someone who has been using data-oriented OOP for decades for high performance computing, I find this ridiculous.
[22:35:25] *** Joins: icy_troubles (~icy_troub@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com)
[22:35:52] *** Joins: phage (~phage@85.191.185.246)
[22:36:04] <pyzozord> php has had a inferiority complex and I think that's part of the reason it turned into the SOLID crap, I think if it overcomed it's inferiority complex it would be much better of and it could focus on real useful stuff
[22:36:42] <pyzozord> InPhase: do you mean the narrative that "OOP is simply bad!"?
[22:36:50] <InPhase> OOP doesn't dictate what types of things you make objects.  Those are architectural decisions, and for large data performance you simply architect your design around the structure you will need for your efficient calculations.
[22:37:10] *** Joins: stanlib (~archblade@user/stanlib)
[22:37:11] <oldlaptop> It may be a contrast to Java-style OO maximalism, so to speak. (Getting out a mallet and trying to wedge EVERYTHING into the paradigm whether it makes sense or not.)
[22:37:28] <pyzozord> yeah that narrative is quite aggressive, I personally kind of agree with it, because I associate SOLID with OOP
[22:37:49] <InPhase> Like a program I just released has an EEGData class, where the data is arranged in the manner needed for the high performance computations.
[22:37:58] <pyzozord> again SOLID is not bad on it's own, I used this word as a proxy for the "fizz buzz enterprise edition" style of programming
[22:38:07] <InPhase> I didn't throw out OOP, I just used it the only smart way for what I needed to do.
[22:38:08] *** Quits: alexmac22347 (~alexmac22@192.157.105.82) (Changing host)
[22:38:08] *** Joins: alexmac22347 (~alexmac22@user/alexmac22347)
[22:38:35] *** Joins: zaher_ (~zaher@37.48.177.207)
[22:38:37] *** Quits: stanlib (~archblade@user/stanlib) (Client Quit)
[22:39:01] <oldlaptop> InPhase: Ah, but you allowed the problem to shape the design, don't you know that's not permitted?
[22:39:13] <pyzozord> yes I think maybe it's the java style OOP that I am bothered by
[22:39:28] <pyzozord> that became de-facto general OOP style
[22:39:40] <InPhase> The messaging of Data Oriented Design seems to be targetting a set of game programmers who didn't understand these principles, and structured their OOP code around game objects instead of performance.  But that's not a problem with OOP, that's people thinking "object" meant "game object".
[22:40:30] *** Quits: phage (~phage@85.191.185.246) (Read error: Connection reset by peer)
[22:40:45] *** Quits: zaher (~zaher@37.48.191.19) (Ping timeout: 252 seconds)
[22:41:05] <pyzozord> could be, I can't speak to what happend in game dev world
[22:41:08] *** Quits: anomal (~anomal@176-12-60-137.pon.spectrumnet.bg) (Remote host closed the connection)
[22:41:27] *** Joins: anomal (~anomal@176-12-60-137.pon.spectrumnet.bg)
[22:41:31] <pyzozord> but game object as an object seems to me like natural thing to do in object oriented programming 
[22:41:36] <oldlaptop> pyzozord: A lot of OO believers seem to be unhappy with what Java and C++ have done.
[22:43:09] <epony> https://en.wikipedia.org/wiki/Game_engine#History
[22:43:09] <bayaz> Title: Game engine - Wikipedia 
[22:43:12] *** Quits: ttree (~ttree0@c-24-17-16-242.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[22:43:27] <InPhase> pyzozord: That's a sometimes thing.  Architecture should always structure around the calculations to be done for expected large amounts of data.  If you have 1-4 players, you make objects for players.  If you have 10,000 moving objects with heavy calculations on only part of their data, you structure around the calculations.
[22:43:45] <InPhase> pyzozord: But then you do it with objects still so that you have good abstraction.
[22:43:53] <epony> your main object-ion  https://en.wikipedia.org/wiki/Data_oriented_design#Contrast_with_object_orientation
[22:43:54] <bayaz> Title: Data-oriented design - Wikipedia 
[22:44:16] *** Joins: rickybob (~rickybob@35.143.255.39)
[22:44:20] *** Joins: azed (~azed@197.23.130.142)
[22:44:35] <InPhase> pyzozord: So I'm not in contrast with the principles.  Just the messaging around it.  :)
[22:44:39] <oldlaptop> InPhase: There does seem to be a school of thought that would claim that you're sacrificing some kind of "purity" if you do that.
[22:44:59] *** Joins: ttree (~ttree0@c-24-17-16-242.hsd1.wa.comcast.net)
[22:45:03] *** Quits: independent56 (~independe@148.252.133.82) (Ping timeout: 256 seconds)
[22:45:04] <epony> https://www.youtube.com/watch?v=rX0ItVEVjHc
[22:45:05] <bayaz> Title: CppCon 2014: Mike Acton "Data-Oriented Design and C++" 
[22:45:13] <epony> ^ mostly C
[22:45:21] <pyzozord> that talk is amazing I watched it multiple times
[22:45:34] <epony> (with ASM to C analysis)
[22:45:42] <pyzozord> and later pretty much every Mike Acton talk available on youtube, also multiple times
[22:45:44] <InPhase> oldlaptop: It's standard optimization, which falls under the "don't prematurely optimize" adage.  It does in fact reduce clarity somewhat in a lot of cases, but then you should design abstraction appropriately to minimize the damage to that clarity.
[22:46:07] <oldlaptop> (If so, it's the kind of purity that should be thrown out wherever it gets in the way of writing sensible software.)
[22:46:11] *** Quits: anomal (~anomal@176-12-60-137.pon.spectrumnet.bg) (Ping timeout: 256 seconds)
[22:46:39] <epony> there is another one from Bjarne, about his enjoyment that someone used C++ optimising compiler interactively with a feedback disassembler comparative analysis to work in their C code
[22:46:53] <pyzozord> https://wiki.c2.com/?PrematureOptimization
[22:47:07] <pyzozord> It's from Knuth: "We should forget about small efficiencies, say about 97% of the time: premature optimization is the root of all evil. Yet we should not pass up our opportunities in that critical 3%."
[22:47:30] <epony> the most important optimisation is data design (as all DB administrators know all too well)
[22:48:27] *** Quits: rickybob (~rickybob@35.143.255.39) (Ping timeout: 256 seconds)
[22:48:39] <InPhase> Yeah, data design is basically where that "design for performance" thing most kicks in.
[22:48:56] <epony> Knuth is a well known mumbler who can't reason on the data refactor, cause he works on the alrogithms categorisation and analysis, so has nothing to choose from (not solving problems).
[22:48:56] <InPhase> You can usually discern the right data design before starting a program if you have properly understood the problem domain.
[22:48:57] <Decker> I like to think of it as JIT optimization
[22:49:32] <epony> if you don't optimise your data, you will be doing years of churning for trivial mistakes
[22:50:27] <epony> JID (just-in-data)
[22:50:52] <pyzozord> InPhase: there is a lot of that, but it actually grows out into a deeper philosophy, of avoiding unecessasry abstraction, focusing on the actual problem not some more general version of the problem and other things
[22:52:11] <pyzozord> also getting actual boundries of the problem
[22:52:19] <epony> optimisation is "teh" best way to cheat (out of waste), it has nothing to do with preemptive innoculation or premature immaculation
[22:52:42] <pyzozord> so if your client expects the software to run fast, squeeze out of them concrete numbers
[22:52:57] <pyzozord> "how fast is fast, is 1h fast?"
[22:53:15] <epony> the handheld stopwatch is a powerful timing device
[22:53:22] *** Joins: Thedarkb-Desktop (~Thedarkb@92.40.196.2.threembb.co.uk)
[22:53:23] <NeoFAT32_> test
[22:53:27] <NeoFAT32_> wtf.
[22:53:38] <NeoFAT32_> Don't worry !
[22:54:13] <GeDaMo> Be happy!
[22:54:56] <pyzozord> for many years I thought it was a Bob Marley
[22:55:26] <epony> M$FT Bobby McBobfaceboat
[22:56:15] *** Quits: NeoFAT32_ (~NeoFAT32_@118.179.224.74) (Quit: Leaving)
[22:56:22] <GeDaMo> https://www.youtube.com/watch?v=d-diB65scQU
[22:56:23] <bayaz> Title: Bobby McFerrin - Don't Worry Be Happy (Official Music Video) 
[22:56:40] *** Quits: nitrix (~nitrix@user/nitrix) (Quit: ZNC 1.8.2 - https://znc.in)
[22:56:46] *** Quits: teut (~teut@122.161.89.92) (Quit: Client closed)
[22:56:49] *** Joins: NeoFAT32_ (~NeoFAT32_@118.179.224.74)
[22:56:53] <epony> don't forget to pay the ferryman
[22:57:23] <GeDaMo> https://www.youtube.com/watch?v=4qg2T9qQZ8A
[22:57:24] <bayaz> Title: Don't Pay The Ferryman 
[22:57:42] *** Joins: abraham (~abraham@64.227.110.185)
[22:57:47] *** Joins: nitrix (~nitrix@user/nitrix)
[22:58:37] <epony> https://en.wikipedia.org/wiki/Software_engine  "..probably the most useful notion of "engine" is that of a module you can use in your own code, a module that provides significant functionality in a focussed domain. One might call the C standard library an "engine", but it does not really have a focus other than to provide a broad range of low level services. Still, it might be called a "foundational services" engine."
[22:58:38] <bayaz> Title: Software engine - Wikipedia 
[22:59:18] *** Quits: inky_ (~inky@141.136.91.177) (Ping timeout: 250 seconds)
[22:59:29] <pyzozord> I'd call standard library more like engine parts
[22:59:29] *** Quits: eddof13 (~eddof13@2806:102e:12:64:f838:6484:5e24:bd9f) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[22:59:56] <pyzozord> engine must have a single purpose and has to kind of work as one thing
[23:00:31] *** Joins: eddof13 (~eddof13@2806:102e:12:64:f838:6484:5e24:bd9f)
[23:00:43] <epony> https://en.wikipedia.org/wiki/C_standard_library#Implementations
[23:00:43] <bayaz> Title: C standard library - Wikipedia 
[23:01:25] <pyzozord> I think Kickstarter is really cool
[23:01:48] <pyzozord> I'd love to live from successful Kickstarter projects
[23:02:01] <pyzozord> I think that would be even better than steam
[23:02:19] <pyzozord> and some amazing things came out of kickstarter
[23:02:53] *** Quits: azed (~azed@197.23.130.142) (Read error: Connection reset by peer)
[23:03:10] <epony> building UNIX without KS was a major success in the late 60ies
[23:04:08] <flaqologist> what came out of kickstarter?
[23:04:09] <pyzozord> well they did work one of the best computer research facilities in the world
[23:04:27] <flaqologist> i thought it was all scams
[23:04:28] <pyzozord> flaqologist: multiple supercool games
[23:05:17] <pyzozord> lots of projects fail too
[23:05:50] <epony> crowdfunding and microlending are the two pillars of modern software development.. for teh homeless
[23:05:58] <flaqologist> no copmpilers, gui libraries, operating systems?
[23:06:09] <flaqologist> office suites, web browsers?
[23:06:15] <flaqologist> anything useful?
[23:06:25] <epony> you're stretching yourself with that list of pretences
[23:06:31] <flaqologist> no i'm not
[23:06:38] <flaqologist> thats basic computing needs
[23:06:54] <epony> KS gets you nice emails and engagement
[23:07:24] <duuude> It seems they don't give you the money if doesn't reach 100%
[23:07:32] *** Quits: zaher_ (~zaher@37.48.177.207) (Ping timeout: 240 seconds)
[23:07:32] <epony> progress reports and that language feel you get on boards of directors
[23:07:42] <pyzozord> flaqologist: it's crowdfunding, it's mostly for entertainment projects
[23:07:59] <juliaEnv> crowdfunding and microlending aren't SW development. They are business.
[23:08:01] <epony> or at least speculative investment capital foundations
[23:08:16] <duuude> IndieGoGo was the other way, it gave you whatever you managed to gather, if I am not mistaken
[23:08:55] <pyzozord> I'm just looking at reviews os zweihander tabletop rpg game
[23:09:00] <juliaEnv> actually, you don't need to develop any software for crowdfunding and microlending. You can simply download, install, and operate/administer existing software.
[23:09:15] <pyzozord> and it's amazing that projects like this have a chance because there is enough people who'll love them and pay for them
[23:09:27] *** Quits: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[23:09:41] <pyzozord> it's very cool because it avoids publishers and and making everything into a pop pulp
[23:09:49] *** Parts: norayr (376bc34bfc@37.252.78.253) (Error from remote client)
[23:09:54] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[23:10:07] <epony> juliaEnv, William H. Gates calls that piracy and theft and writes angry emails to computer clubs demanding pay for his rewrite of BASIC with addons.
[23:10:11] <pyzozord> which publishers and other corporations tend to do
[23:10:34] <epony> ehm, someone else's BASIC rewrite.. nevermind
[23:10:35] <juliaEnv> epony I don't think you got that right :D
[23:10:41] <GeDaMo> https://en.wikipedia.org/wiki/Open_Letter_to_Hobbyists
[23:10:41] <bayaz> Title: Open Letter to Hobbyists - Wikipedia 
[23:10:53] <epony> now you're thinking!
[23:11:35] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[23:11:44] <juliaEnv> @epony  you're quoting a 1976 news that was about *Altair* basic. It's not about today and it's not about basic in general.
[23:11:56] <pyzozord> GeDaMo: I believe the piracy was mostly of inconveniance, it's mostly a solved problem now with things like app stores
[23:12:06] <epony> I also once quoted the Crimean war too.
[23:12:13] <juliaEnv> 1976 letter to *hobbyists*
[23:12:21] <epony> pay up!
[23:12:47] <juliaEnv> epony, one more setence of nonse and you're ending up on my ignore list.
[23:12:49] <epony> https://cr.yp.to/softwarelaw.html
[23:13:18] <epony> juliaEnv, good, I'd be hearing less of your replies, which would be fantastic
[23:13:28] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[23:13:33] <juliaEnv> Epony is now ignored. You might want to do the same, i.e. /ignore epony
[23:13:39] * bayaz warns Please: keep things civil.
[23:14:07] * epony thinks some people can not be civilised even if they wanted..
[23:14:26] <ProfSimm> epony: are you also people
[23:14:35] <flaqologist> i'm amazed it took so long for the ops to finally arn epony
[23:14:36] <epony> yes, Neo
[23:15:48] <juliaEnv> speaking of modern software development, the 7 core principles are (1) manage using a phased life-cycle plan, (2) perform continuous validation, (3) maintain disciplined product control, (4) use modern programming practices, (5) maintain clear accountability for results, (6) use better and fewer people, (7) maintain a commitment to improve the process.
[23:15:53] <epony> "What does all this mean for the free software world? Once you've legally downloaded a program, you can compile it. You can run it. You can modify it. You can distribute your patches for other people to use. If you think you need a license from the copyright holder, you've been bamboozled by Microsoft."
[23:15:58] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[23:16:36] <epony> we did an earlier checkup on the list of core principle lists
[23:16:45] <juliaEnv> or at least that's what Barry Boehm suggested in 1983 :)
[23:16:52] <epony> toaday
[23:17:47] <nomagno> juliaEnv: the actually modern version of that is committing to such an unstable release cycle with such a rapidly changing software stack half of bystanders can't tell what's going on
[23:17:55] <epony> modern means "functional programming" so that might be a bit of an airgap on point (4)
[23:18:05] *** Joins: inky_ (~inky@46.36.114.138)
[23:18:16] <juliaEnv> yes, I see what you mean :)
[23:19:00] <juliaEnv> nomagno if you do TDD right, you first write a test and then the minimal amount of code to pass it. Then you refactor. As a result, At any time, you should h
[23:19:13] <juliaEnv> err, As a result, at any time you can release.
[23:19:39] <ProfSimm> epony: woah
[23:19:39] <pyzozord> I think GNU's free software idea has a grace period for art that includes video games
[23:19:46] <pyzozord> they suggest something like 10 years
[23:20:02] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 240 seconds)
[23:20:13] <pyzozord> meaning it can be closed source for first 10 years I think something like that
[23:20:19] <nomagno> pyzozord: I have legitimately not seen that anywhere on any of their resources
[23:20:21] *** Quits: eddof13 (~eddof13@2806:102e:12:64:f838:6484:5e24:bd9f) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[23:20:31] <duuude> https://flak.tedunangst.com/post/against-testing
[23:20:31] <bayaz> Title: against testing 
[23:20:33] <epony> that's not how you do it for real through.. TDD is for making your project manager happy so he can go have dinner with his family while you work on your tests at the office
[23:20:42] <pyzozord> nomagno: I've heard that in one of the interviews with whats his name
[23:20:48] *** Joins: bittersweetsymph (uid509475@id-509475.lymington.irccloud.com)
[23:20:50] <duuude> this guy doesn't like testing
[23:20:56] <duuude> what is your opinion
[23:21:05] <flaqologist> TDD != testing
[23:21:06] <pyzozord> nomagno: blanking on the name of the gnu founder
[23:21:16] <flaqologist> oh read the wrong line
[23:21:17] <epony> that you can opt for regressions, but test driven development is mental retardation
[23:21:19] <juliaEnv> testing gets easier the more you do it
[23:21:24] <nomagno> Richard Stallman doesn't seem like the guy to say that
[23:21:27] <nomagno> But I'll look it up
[23:21:33] <nomagno> I may have to stand corrected
[23:22:02] <pyzozord> nomagno: I'm 100% sure I heard him say, art and games and other entertaininment can have a grace period, because they need to make money
[23:22:15] <pyzozord> and they are not productivity or essential tools
[23:22:49] <duuude> like productivity and essential tools don't need to make money
[23:22:52] <juliaEnv> I used to hate writing tests for many years. Eventually, I was forced to write some for a customer while I was working at Deloitte. I wrote around 100 unit tests and 20 integration tests as a proof that we've met the requirements. Every requirement had to have a test. Integr. tests were then to prove we are using the database properly. Since then, I enjoy writing tests at any time for any requirement.
[23:22:55] <nomagno> If only the most popular games today didn't literally contain kernel-level spyware, I'd agree
[23:23:09] <epony> now you like writing only tests
[23:23:12] <pyzozord> duuude: he argues quite well for his points, I don't remember the arguemnts though
[23:23:34] <duuude> pyzozord: my experience has shown otherwise
[23:23:42] *** Joins: eddof13 (~eddof13@2806:102e:12:64:f838:6484:5e24:bd9f)
[23:23:46] <duuude> he is against paid toilets
[23:23:53] <epony> free shit
[23:24:13] <nomagno> RMS has a fairly anti-IP point of view, but he hasn't quite realized after 40 years of repeating it
[23:24:27] <pyzozord> I mean I wouldn't want to be in a situation when I have to go and I don't have money
[23:24:49] <duuude> pyzozord: paid toilets are in any case better than no toilets
[23:25:14] <duuude> pyzozord: and they may be made for making money
[23:25:15] <pyzozord> Amsterdam for example has public urinals and they are great, much better that then people doing business on buildings
[23:25:35] <GeDaMo> Public toilets are a public health issue, you don't want people pissing in the streets
[23:25:35] <duuude> unless government brings public toilets
[23:25:50] *** Quits: eddof13 (~eddof13@2806:102e:12:64:f838:6484:5e24:bd9f) (Client Quit)
[23:25:55] <duuude> but, that doesn't make paid ones bad
[23:25:57] <epony> India has an opiniont to make on the toilet subject too.
[23:25:58] <nomagno> I think the notion of enforcing IP on digital media doesn't work and will never work
[23:26:19] <duuude> unless the paid toilet industry lobbies against public toilets
[23:26:28] <nomagno> It's literally shitting on top of natural law. And people act all surprised there's piracy
[23:26:52] <pyzozord> anyway I liked the art and games subject much better :P
[23:27:04] <epony> pirate all the bodily relief centres, now, grab more freedoms
[23:27:21] <GeDaMo> https://en.wikipedia.org/wiki/Non-photorealistic_rendering
[23:27:21] <bayaz> Title: Non-photorealistic rendering - Wikipedia 
[23:27:24] <nomagno> There is an initial investment in developing digital stuff. Enforcing a monopoly on every sale ever isn't just the recouping of the initial investment and then some
[23:27:55] <nomagno> It's wholly anti-social and anticapitalist. Rarely you see something that is those two at once
[23:27:56] <duuude> GeDaMo: links are good, send more
[23:28:44] <flaqologist> i love how they call it "non-photorealitic" it sounds so much more credible than "video game performance hacks"
[23:28:57] <nomagno> Oh and what's the argument for DRM still being legal?
[23:29:43] <epony> there are more and more proprietary offerings and trialware using free software concepts as brands
[23:29:46] <pyzozord> let me see if I can find the video with stallman talking about free software and art
[23:29:47] <nomagno> Actually, for it being sanctioned by law to the point there the WTO wants all countries to consider breaking it semi-terrorism
[23:29:52] <duuude> pyzozord: he argued that OpenBSD is not free enough because it has flash on its repos and that encourages non-free software use
[23:30:34] <duuude> pyzozord: then people retorted that how is GNU porting all their software to Windows is not encouraging non-free software use
[23:30:42] <nomagno> duuude: The GNU operating system distribution guidelines are bullshit in my opinion
[23:30:54] <epony> it's cheaper to fill up the search engine and make undiscoverable free and open software topics by failing speculative investment (infestment) companies, than to cancel development through sponsoring a foundation that stagnates and forks it to oblivion
[23:30:55] <duuude> pyzozord: then he is Er.. Uhm... No...
[23:31:27] *** Quits: Stefan26 (~Stefan26@78-67-218-242-no207.tbcn.telia.com) ()
[23:31:30] *** Quits: Inline (~Inline@p200300cd472d40002c1b8381bd5618c5.dip0.t-ipconnect.de) (Quit: Leaving)
[23:31:33] <nomagno> Free software is one thing. Outlawing official sanctioning of community proprietary software packaging is another
[23:31:44] <duuude> nomagno: GNU minus GCC is mostly bullshit
[23:31:45] <epony> serach engine strongly resembles outdoor siloes of stale bodily waste matter
[23:31:59] <Hash> I'm bored
[23:32:08] <nomagno> duuude: Implying GCC isn't bullshit
[23:32:18] <nomagno> Have you read a line of GCC code? It's bonkers!
[23:32:19] <duuude> Hash: there is bored button website
[23:32:21] <flaqologist> without GCC where would we be?
[23:32:26] <flaqologist> how is gcc bullshit?
[23:32:31] <epony> using PCC
[23:32:36] <duuude> nomagno: Yeah, but it at least has managed to work
[23:32:46] <apotheon> 13:02 < nomagno> Have you read a line of GCC code? It's bonkers!
[23:32:50] <duuude> nomagno: so 51% non-BS
[23:32:55] <apotheon> That's all I have to say about that.
[23:33:13] <apotheon> 51% is less than admirable.
[23:33:15] <nomagno> flaqologist: It's technically impressive it works, but repulsive how it works
[23:33:21] <flaqologist> what is repulsive
[23:33:26] <apotheon> It's not impressive in a good way, really.
[23:33:30] <duuude> It compiles fast and gives output that works fast
[23:33:35] <duuude> but is dirty
[23:33:40] <flaqologist> how is it dirty?
[23:33:41] <duuude> at least it works
[23:33:43] *** Joins: Inline (~Inline@p200300cd472d40002c1b8381bd5618c5.dip0.t-ipconnect.de)
[23:33:52] <nomagno> Very dirty. The code is a single hack
[23:33:58] <epony> where are its tests for the test driven development???
[23:34:04] <nomagno> No modularity, cryptic logic that just works:tm:
[23:34:25] *** Joins: norayr (376bc34bfc@37.252.78.253)
[23:34:25] <flaqologist> it's a compiler of course it has confusing parts
[23:34:29] <flaqologist> JFC ppl
[23:34:47] <duuude> tcc code looked nice
[23:34:53] <epony> the real problems are other.. it's the fear of hostile takeover, stagnation, bugged licensing and cranking dependencies
[23:34:54] <juliaEnv> C is a language. You're probably unhappy with some particular implementation of some libraries or programs.
[23:34:58] <flaqologist> tcc only compiles C code
[23:35:03] <flaqologist> its NOT modular unlike gcc
[23:35:06] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:35:10] *** Joins: Visne (~Visne@dhcp-077-248-174-092.chello.nl)
[23:35:11] <epony> juliaEnv, missed that train by 2-3 days ;-)
[23:35:49] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[23:35:59] <juliaEnv> modular programming consists of separating implementation from interface and hiding information in the implementation. In C this is achieved by placing the interface definition in a header file and the implementation in a source file. So, are you suggesting tiny C compiler doesn't support header files?
[23:36:11] <epony> now what about composable?
[23:36:18] <nomagno> GCC doesn't have a single clean implementation of anything
[23:36:21] <GeDaMo> http://arcanesentiment.blogspot.com/2010/07/inevitable-interpreter.html
[23:36:21] <bayaz> Title: The inevitable interpreter 
[23:36:23] <nomagno> It's performant, don't get me wrong
[23:36:24] <epony> juliaEnv, cause you quoted abstraction
[23:36:25] <flaqologist> i'm suggesting it is a single compiler, not a modular compiler
[23:36:43] <epony> "hiding" is prohibited in computing
[23:36:44] *** Quits: Visne (~Visne@dhcp-077-248-174-092.chello.nl) (Quit: Leaving)
[23:36:59] *** Joins: azed (~azed@197.23.130.142)
[23:37:20] <flaqologist> no frontend "api" or whatever you would call it
[23:37:23] <juliaEnv> flaqologist it has an architecture that shows modules: https://en.wikibooks.org/wiki/GNU_C_Compiler_Internals/GNU_C_Compiler_Architecture
[23:37:23] <bayaz> Title: GNU C Compiler Internals/GNU C Compiler Architecture - Wikibooks, open books for an open world 
[23:37:50] <epony> that's debatable
[23:37:51] *** Lord_of_Life_ is now known as Lord_of_Life
[23:37:58] <juliaEnv> flaqologist are you suggesting it doesn't have interfaces separate from implementations?
[23:38:09] <flaqologist> "So, are you suggesting tiny C compiler doesn't support header files?"  you were talking about TCC now you're talking about GCC?
[23:38:10] *** Quits: widp (~widp@124.123.106.87) (Read error: Connection reset by peer)
[23:38:17] <flaqologist> confused much?
[23:38:34] *** Joins: widp (~widp@124.123.106.87)
[23:38:43] <epony> correction, TDD GCC with PCC inserts
[23:38:54] <oldlaptop> juliaEnv: One of the major criticisms of gcc's design used to be (I understand they've changed) that they deliberately coupled the "front end" and "back end" together relatively tightly, the idea being that otherwise someone could write a proprietary front end that worked with the rest of gcc.
[23:39:00] <juliaEnv> flaqologist [21:06:18] <nomagno> GCC doesn't have a single clean implementation of anything
[23:39:10] <juliaEnv> he was talking about GCC and an unclean implementation
[23:39:25] <flaqologist> what unclean implementation?
[23:39:32] <flaqologist> its all vague assertions, as always
[23:39:42] <flaqologist> "Tcc smol gcc big"
[23:39:54] <juliaEnv> but it's interfaces that are implemented. So, is he suggesting a problem there, or elsewhere?
[23:40:40] <nomagno> I'm suggesting a problem with the architecture being exceedingly complex AND the implementations being insufficiently understandable
[23:41:02] <juliaEnv> flaqologist yes, sometimes people have negative feeling about something, so they rational with a post hoc justification
[23:41:12] <nomagno> It is the opposite of sustainable. It can only be maintained because an entire developer army hacks at it
[23:41:17] <juliaEnv> s/have negative feeling/have negative feelings/
[23:41:28] <epony> https://en.wikipedia.org/wiki/Portable_C_Compiler  "Being one of the first compilers that could easily be adapted to output code for different computer architectures, the compiler had a long life span. It debuted in Seventh Edition Unix and shipped with BSD Unix until the release of 4.4BSD in 1994, when it was replaced by the GNU C Compiler. It was very influential in its day, so much so that at the beginning of the 1980s, the majority of C compilers were 
[23:41:28] <epony> based on it."
[23:41:28] <bayaz> Title: Portable C Compiler - Wikipedia 
[23:41:29] * juliaEnv is rearranging his ergo keyboard to type without typos
[23:41:31] <flaqologist> how many architectures does TCC target again?
[23:41:46] <flaqologist> you are throwing stones at the single most advanced compiler available
[23:41:58] <flaqologist> llvm is a joke in comparison
[23:42:06] <nomagno> Are you talking about me?
[23:42:15] <nomagno> I didn't talk about portability
[23:42:27] <flaqologist> yo preten complexity is unwarranted
[23:42:33] *** Joins: filename (~kilitary@188.242.105.134)
[23:42:38] <epony> "The big benefit of it (apart from that it's BSD licensed, for license geeks) is that it is fast, 5-10 times faster than gcc, while still producing reasonable code. <...> [I]t is also quite simple to port..."
[23:42:45] <epony> ^ pcc
[23:42:52] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[23:42:59] <juliaEnv> oldlaptop interesting. The latest stable gcc is 11.2 already. :)
[23:43:05] <duuude> how does pcc compare to llvm?
[23:43:05] <nomagno> LLVM isn't a joke by any metric
[23:43:18] <epony> RAM use mostly no-joke about it
[23:43:20] <juliaEnv> oldlaptop gcc came out in 1987. That's when I was born. :D
[23:43:31] <epony> noob ;-)
[23:43:33] <duuude> no one seems to talk about that
[23:44:04] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[23:44:10] <nomagno> PCC is blown out of the water by LLVM on performance grounds
[23:44:30] <nomagno> And considering its licensing is completely outdated by modern standards, portability too
[23:45:15] <duuude> what is the relationship of its licensing to portability?
[23:46:08] <nomagno> PCC isn't non-commercial
[23:46:11] <nomagno> I stand corrected.
[23:46:24] *** Joins: independent56 (~independe@85.255.232.178)
[23:46:31] <nomagno> Which was the similarly-named noncomm C compiler?
[23:47:03] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Client Quit)
[23:47:09] <duuude> icc? lcc? those are the other ccs I remember
[23:47:14] <pyzozord> can't find that video, sorry
[23:47:15] *** Joins: independent5640 (~independe@85.255.234.4)
[23:47:16] <independent5640> Would¬† it be considered an attempted DOS to call `wget -r target` a few 100 times using multiple threads?
[23:47:23] <independent5640> Would  it be considered an attempted DOS to call `wget -r target` a few 100 times using multiple threads?
[23:47:45] <duuude> are you DOSing the IRC by asking DOS questions?
[23:48:19] <nomagno> LCC I think yes
[23:49:07] <Decker> lccwin32 too - which is different from lcc 
[23:49:23] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d4f3:e167:a65d:25ad)
[23:49:48] <epony> https://en.wikipedia.org/wiki/Stephen_C._Johnson#Bell_Labs_and_AT&T  "In the mid-1970s, Johnson and Bell colleague Dennis Ritchie co-authored the first AT&T Unix port. They also "demonstrated that Unix was portable", which Ritchie considers the spark that led to Unix becoming widespread."
[23:49:48] <bayaz> Title: Stephen C. Johnson - Wikipedia 
[23:50:36] <epony> so humble, this Dennis Ritchie
[23:50:47] *** Quits: independent56 (~independe@85.255.232.178) (Ping timeout: 256 seconds)
[23:51:13] <juliaEnv> https://github.com/gcc-mirror/gcc/tree/master/gcc this is a typical big open source project with over 30 years of development. The structure could be improved. I can envision improving it manually or automatically. It's however not something that developers urgently need/want because otherwise I assume they'd have done it.
[23:51:15] <bayaz> Title: gcc/gcc at master ? gcc-mirror/gcc 
[23:51:58] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:52:26] *** Joins: Joanna (uid57472@id-57472.lymington.irccloud.com)
[23:53:00] *** Quits: rickybob2 (~rickybob@35.143.255.39) (Read error: Connection reset by peer)
[23:53:00] *** Quits: wisep__ (~rickybob@35.143.255.39) (Read error: Connection reset by peer)
[23:53:26] <epony> https://en.wikipedia.org/wiki/Dennis_Ritchie#Notable_works
[23:53:26] <bayaz> Title: Dennis Ritchie - Wikipedia 
[23:54:19] <juliaEnv> a funny thing about C is its inventor Dennis Ritchie only invented the language for experiments. He was surprised that somebody else actually kept using it.
[23:55:48] <flaqologist> i'm still wondering what part of gcc the hecklers have seen that scared them so much
[23:55:49] *** Quits: independent5640 (~independe@85.255.234.4) (Quit: Client closed)
[23:56:08] <InPhase> juliaEnv: Who said that?  The story I've always heard is that it was developed specifically to make Unix utilities.
[23:56:33] <flaqologist> *other than the two-space tabs
[23:57:31] <flaqologist> maybe its a two-space tab phobia, i'll file it under phobia
[23:57:35] <juliaEnv> InPhase Dennis Ritchie said that. You can find various interviews with him on YouTube, as well as documentaries.
[23:57:57] <pyzozord> I think actual DOS attacks send tcp segments or ip packets
[23:58:29] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[23:58:33] *** Joins: wildo (~lain6141@119.224.72.222)
[23:59:10] <epony> juliaEnv, you're on a roll of nonsense today
[23:59:12] <InPhase> juliaEnv: Well I've watched a bunch of videos of him and didn't see that, and I've seen a lot of documentation otherwise.  If you can find a specific interview that contradicts all this I'd be happy to see it.
[23:59:24] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb) (Ping timeout: 252 seconds)
