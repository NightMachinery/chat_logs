[00:54:57] *** Joins: ecraven- (~ecraven@user/nex)
[00:56:08] *** Joins: oneofvalts (~oneofvalt@2001:19f0:6c01:2d9c:5400:2ff:fea2:a386)
[00:56:43] *** Quits: ecraven (ecraven@user/nex) (Ping timeout: 246 seconds)
[00:57:16] *** Quits: zilti[m] (~ziltimatr@2001:470:69fc:105::16d0) (Ping timeout: 268 seconds)
[00:57:16] *** Quits: felinae (~felinae@user/felinae) (Ping timeout: 268 seconds)
[00:57:30] *** Joins: Kooda2 (~kooda@natsu.upyum.com)
[00:58:23] *** Quits: valts (~oneofvalt@2001:19f0:6c01:2d9c:5400:2ff:fea2:a386) (Ping timeout: 264 seconds)
[00:58:24] *** Quits: Kooda (~kooda@natsu.upyum.com) (Ping timeout: 264 seconds)
[01:04:09] *** Joins: felinae (~felinae@user/felinae)
[01:05:31] *** Joins: zilti[m] (~ziltimatr@2001:470:69fc:105::16d0)
[01:48:52] *** Quits: mario-goulart (~user@chicken/developer/mario-goulart) (Remote host closed the connection)
[01:49:00] *** Joins: mario-goulart (~user@chicken/developer/mario-goulart)
[01:56:51] *** Joins: monkey_ (~user@190.104.116.153)
[02:48:51] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[02:49:21] *** Joins: monkey_ (~user@190.104.116.153)
[03:04:20] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[04:03:59] *** Quits: klovett (~klovett@mobile-166-170-40-35.mycingular.net) (Ping timeout: 264 seconds)
[04:09:26] *** Joins: s-liao (~s-liao@101.86.103.113)
[06:11:58] *** Joins: klovett (~klovett@c-73-231-102-38.hsd1.ca.comcast.net)
[06:13:20] *** Quits: klovett (~klovett@c-73-231-102-38.hsd1.ca.comcast.net) (Client Quit)
[06:45:58] *** Quits: s-liao (~s-liao@101.86.103.113) (Ping timeout: 256 seconds)
[06:56:02] *** Joins: s-liao (~s-liao@101.86.103.113)
[07:08:04] *** Quits: s-liao (~s-liao@101.86.103.113) (Ping timeout: 256 seconds)
[07:22:00] *** Joins: klovett (~klovett@c-73-231-102-38.hsd1.ca.comcast.net)
[08:28:50] *** Joins: clacke (88d96f2df3@knopi.disroot.org)
[08:48:51] *** Quits: d_run (sid83858@id-83858.hampstead.irccloud.com) (Ping timeout: 245 seconds)
[08:50:20] *** Quits: samth (sid14502@id-14502.ilkley.irccloud.com) (Ping timeout: 260 seconds)
[08:50:21] *** Joins: d_run (sid83858@hampstead.irccloud.com)
[08:50:21] *** Quits: elderK (uid205007@id-205007.helmsley.irccloud.com) (Ping timeout: 268 seconds)
[08:50:32] *** Quits: buhman (sid411355@user/buhman) (Ping timeout: 260 seconds)
[08:51:00] *** Quits: jcroisant (sid137329@user/jcroisant) (Ping timeout: 260 seconds)
[08:51:15] *** Joins: jcroisant (sid137329@user/jcroisant)
[08:51:24] *** Joins: elderK (uid205007@id-205007.helmsley.irccloud.com)
[08:51:40] *** Joins: samth (sid14502@ilkley.irccloud.com)
[08:52:08] *** Joins: buhman (sid411355@2a03:5180:f::6:46db)
[08:52:08] *** Quits: buhman (sid411355@2a03:5180:f::6:46db) (Changing host)
[08:52:08] *** Joins: buhman (sid411355@user/buhman)
[09:19:40] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[09:47:09] *** Joins: s-liao (~s-liao@101.86.103.113)
[10:18:28] *** Quits: s-liao (~s-liao@101.86.103.113) (Ping timeout: 256 seconds)
[12:31:25] *** Joins: s-liao (~s-liao@101.86.103.113)
[12:52:02] *** Quits: s-liao (~s-liao@101.86.103.113) (Ping timeout: 256 seconds)
[14:31:57] <vandusen> "freee" pasted "freeeeee" http://paste.call-cc.org/paste?id=563ba61d815225239150bf9a174016e9e7bd0014
[14:31:58] <judybot> vandusen: spam 563ba61d815225239150bf9a174016e9e7bd0014
[14:31:59] <vandusen> judybot: I have deleted 1 paste(s) with hash 563ba61d815225239150bf9a174016e9e7bd0014 successfully.
[14:32:54] *** Joins: smith (~smith@14.207.40.52)
[15:01:46] *** Quits: smith (~smith@14.207.40.52) (Quit: Konversation terminated!)
[15:04:01] <vandusen> "freee" pasted "freeeee" http://paste.call-cc.org/paste?id=7e9fcb3cea501ffc7ab212dad7233c8f9b8e5f54
[15:04:01] <judybot> vandusen: spam 7e9fcb3cea501ffc7ab212dad7233c8f9b8e5f54
[15:04:02] <vandusen> judybot: I have deleted 1 paste(s) with hash 7e9fcb3cea501ffc7ab212dad7233c8f9b8e5f54 successfully.
[15:26:56] <Bunny351> https://blog.kronis.dev/articles/never-update-anything
[15:38:41] <mario-goulart> Except CHICKEN!
[15:39:14] <wasamasa> I think our ecosystem is in that situation, even if just out of too few people to contribute to code churn
[15:39:52] <Bunny351> well, it is "relatively" stable. 4->5 was very painful, but still necessary
[15:40:17] <Bunny351> but a batteries included approach would have been, in the long run, the more user-friendly approach
[15:40:26] <Bunny351> but it's too late for that, now
[15:41:02] <mario-goulart> People can always come up with CHICKEN "distributions".
[15:41:19] <Bunny351> and eggs are of course a different thing, and suffer from versioning madness, but what can you do? maintaining a large in-tree library needs too much manpower
[15:41:31] <mario-goulart> #t
[15:42:30] <Bunny351> I don't know about lazarzus, but python's success is IMHO partly due to it stable set of libraries
[15:43:14] <mario-goulart> Hmm.  I'd say "stable" is questionable.
[15:43:43] <Bunny351> newer and younger programming cultures (JS, etc) of course see instability as a feature (NEW! SHINY! WANT!)
[15:43:57] <Bunny351> more stable than node/npm, I'd say
[15:44:21] <mario-goulart> You mean stdlib libraries or packages?
[15:44:51] <wasamasa> it is more stable, but when I look at the hoops to jump through to work with cryptography or machine learning stuff, ugh
[15:44:56] <mario-goulart> s/stdlib libraries/libraries shipped with the canonical interpreter/
[15:47:14] <Bunny351> stldib
[15:47:31] <Bunny351> I tried pip the other day. it nearly destroyed my system
[15:47:57] <Bunny351> (due to my stupid attempts to make it work, but still, this shouldn't happen)
[15:48:06] <mario-goulart> I think packaging is a mess regarless of the language/implementation.
[15:48:17] <Bunny351> yes, and versioning problems are unavoidable
[15:48:24] <mario-goulart> indeed
[15:48:29] <Bunny351> a problem without a solution
[15:49:03] <Bunny351> well, perhaps with static linking and rigurous policies and a lot of discipline
[15:50:41] <Bunny351> and good documentation and a lot of DIY and sane dependency-graphs and people who actually care about long-term maintainable software
[15:50:58] <Bunny351> vandusen: UTOPIA
[15:51:01] <vandusen> Bunny351: Me!  Sick!
[15:51:06] <Bunny351> right!
[15:53:04] <mario-goulart> Long-term maintainable software is out of fashion theses days.  If a software is long-term maintainable, it can't be hip.
[15:54:32] <Bunny351> I think this is the downside of the security argument: you seem to be morally obliged to update all the time because security. that way one can excuse thre inability to plan and engineer for the long term.
[15:55:50] *** Joins: s-liao (~s-liao@101.86.103.113)
[15:56:45] <mario-goulart> Yeah, it's pretty damn hard.  A pratical example: I've updated and totally broke salmonella-linux-x86-64 last week.  It's pretty much unusable.  It simply DOESN'T BOOT by itself anymore.
[15:57:16] <Bunny351> ugh.
[15:57:27] <Bunny351> why's that?
[15:57:37] <mario-goulart> systemd, probably.
[15:58:03] <Bunny351> now you are starting with conspiracy theories!
[15:58:10] <mario-goulart> Most likely https://github.com/systemd/systemd/issues/13775
[15:58:17] <Bunny351> systemd makes everything better, more stable and more efficient!
[15:58:48] <mario-goulart> If and only if you can boot the system!
[16:00:51] <Bunny351> jesus, what a piece of crap
[16:01:40] <mario-goulart> It's like the problems you had with Linux in the 90's.
[16:02:31] <Bunny351> yes, indeed. once something works reliably, it must be replaced because... well, it's just too "old". wayland is/will be the same
[16:17:11] *** Quits: idstam (~idstam@2.71.166.96.mobile.tre.se) (Ping timeout: 264 seconds)
[16:19:01] *** Joins: idstam (~idstam@2.70.144.43.mobile.tre.se)
[18:06:07] *** Joins: retropikzel (~retropikz@83-245-250-166-nat-p.elisa-mobile.fi)
[18:23:50] *** Quits: choas (~lars@ppp-188-174-49-112.dynamic.mnet-online.de) (Ping timeout: 268 seconds)
[18:25:16] *** Joins: choas (~lars@ppp-188-174-55-18.dynamic.mnet-online.de)
[18:30:05] *** Quits: s-liao (~s-liao@101.86.103.113) (Quit: Client closed)
[18:56:06] *** Quits: choas (~lars@ppp-188-174-55-18.dynamic.mnet-online.de) (Ping timeout: 260 seconds)
[18:59:22] *** Quits: klovett (~klovett@c-73-231-102-38.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[19:02:50] *** Joins: choas (~lars@ppp-188-174-52-206.dynamic.mnet-online.de)
[19:27:09] *** Joins: monkey_ (~user@190.104.116.153)
[19:30:12] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:477:1061:59ab:6b1f)
[19:30:12] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:477:1061:59ab:6b1f) (Changing host)
[19:30:12] *** Joins: skapata (~Skapata@user/skapata)
[19:47:35] *** Joins: andyjpb (~andyjpb@user/andyjpb)
[19:55:50] <Zipheir> Bunny351: Indeed, that's been the gist of the Wayland developers' arguments for why they did it.  "X is old."
[19:59:03] <Zipheir> Neophilia is the name of the game in the programming world.
[20:07:26] * Bunny351 takes note of the term
[20:07:32] <Corbin> There are other, more serious arguments. The most important IMO is "every frame a painting"; Wayland tries to keep output screens in a consistent composited state at all times, which Xorg can't do even with a compositor.
[20:08:06] <Corbin> I say this as a curmudgeon who refuses to adopt Wayland. Wayland is not ready, but X11 is bad.
[20:12:54] <Zipheir> Corbin: That is a good point.
[20:14:43] <Zipheir> I suppose that's why I was surprised by some of the comments by the Wayland folks about X's "old-fashioned-ness".  Why not focus on X's real (IMO) problems?
[20:17:32] <Zipheir> My favorite "truthful slogan" for X remains the old BSD fortune: "10,000 monkeys. 10,000 typewriters. 10,000 years. X Windows."
[20:17:57] <Bunny351> well, it works. there is a lot of add-ons (wms, etc.). do we need to throw away all of that?
[20:18:42] <Bunny351> just because X11 is old, and "bad", in a not truly convincing, handwavy way?
[20:20:43] <Zipheir> As you say, Wayland is throwing out decades of work.  It seems to me that there's room for a streamlined, X11-compatible windowing system.
[20:21:24] <Zipheir> *Semi-X11-compatible, "X reduced".
[20:21:42] <Bunny351> xcb is already supposed to help with network-turnaround times, so there still are ways of improvement.
[20:22:02] <Bunny351> oh, if there would only be a really good document describing the raw protocol... that would be so much fun.
[20:28:21] <jcowan> Zipheir: Focusing on X's real problems would be subject to rebuttal.  Saying "X is old" can't be denied, and nobody wants to say that old might be good.  So from a propaganda point of view Wayland's approach is better.
[20:31:09] *** Quits: retropikzel (~retropikz@83-245-250-166-nat-p.elisa-mobile.fi) (Remote host closed the connection)
[20:31:34] *** Joins: retropikzel (~retropikz@83-245-250-166-nat-p.elisa-mobile.fi)
[20:33:07] <Zipheir> Yes.  I'd prefer they didn't resort to propaganda, of course.  It reminds me of how a few other now-ubiquitous systems in the Linux world were initially promoted.
[20:33:25] <Corbin> Wayland isn't discarding decades of work; Xorg sessions can be hosted inside Wayland. This sounds like it should be slow, but it's not; GPU acceleration is apparently good enough.
[20:34:03] <Zipheir> Hmm, I suppose that's something.
[20:35:09] *** Quits: retropikzel (~retropikz@83-245-250-166-nat-p.elisa-mobile.fi) (Remote host closed the connection)
[20:35:33] *** Joins: retropikzel (~retropikz@83-245-250-166-nat-p.elisa-mobile.fi)
[20:37:09] *** Quits: retropikzel (~retropikz@83-245-250-166-nat-p.elisa-mobile.fi) (Remote host closed the connection)
[20:38:18] <Zipheir> I'm also not opposed to throwing out decades of work; I've long thought that an Emacs reboot with Scheme replacing Elisp would be a Good Thing.  But I wouldn't try to get everyone to adopt it.
[20:38:22] <Bunny351> Corbin: so you can run it as a second class citizen? why would I want to do that?
[20:38:55] *** Joins: retropikzel (~retropikz@83-245-250-166-nat-p.elisa-mobile.fi)
[20:40:05] <Bunny351> it is so hard to find really convincing technical arguments why one would want to switch
[20:42:47] <Corbin> Bunny351: Is it bad that e.g. Firefox is similarly "second-class" in relation to X11? The client-server relationship is structured, not classist.
[20:43:06] <Bunny351> strawman, sorry.
[20:43:59] <Corbin> Anyway, there's really only the one technical argument: we have GPUs and compositors, so we should no longer have any torn or half-drawn frames visible to users.
[20:45:33] * Bunny351 seems to have a special X11 then, as GUI apps seem to work fine here, even watching video
[20:55:36] <Bunny351> but my expectations are low, that may be the difference. I'm happy when things just work
[20:57:37] <Zipheir> Provided I can run a terminal, I'm mostly happy...
[21:00:27] <Zipheir> Err, multiple terminals with proper Unicode rendering.  But it would be the height of arrogance to assume that's what even many *nix users want.
[21:18:07] *** Joins: mononote (~minus0@user/mononote)
[21:19:11] *** Quits: retropikzel (~retropikz@83-245-250-166-nat-p.elisa-mobile.fi) (Remote host closed the connection)
[21:19:34] *** Joins: retropikzel (~retropikz@83-245-250-166-nat-p.elisa-mobile.fi)
[21:22:44] *** Quits: retropikzel (~retropikz@83-245-250-166-nat-p.elisa-mobile.fi) (Remote host closed the connection)
[21:26:37] <mononote> hello, I wanted to use unveil & pledge in a program, is it possible to include/exclude the import and call depending on the machine it is compiled?
[21:27:05] <mononote> I'm new to scheme
[21:31:11] <Zipheir> I believe you could test (eqv? 'openbsd (software-version)), which is found in (chicken platform) https://wiki.call-cc.org/man/5/Module%20(chicken%20platform)
[21:31:41] <mario-goulart> Hi mononote.  Welcome.  You can also use cond-expand for that.
[21:32:00] <Zipheir> Although that's runtime, so you'd still be importing the egg (which might cause errors).
[21:33:02] *** Joins: retropikzel (~retropikz@83-245-250-166-nat-p.elisa-mobile.fi)
[21:34:55] *** Quits: retropikzel (~retropikz@83-245-250-166-nat-p.elisa-mobile.fi) (Remote host closed the connection)
[21:34:56] <Zipheir> mario-goulart: How does that work?  There's a mention of (software-version) as a "feature-identifier class", but how does one use that with cond-expand?
[21:35:39] *** Joins: retropikzel (~retropikz@83-245-250-166-nat-p.elisa-mobile.fi)
[21:36:10] *** Quits: retropikzel (~retropikz@83-245-250-166-nat-p.elisa-mobile.fi) (Remote host closed the connection)
[21:37:23] <mario-goulart> Zipheir: example: (cond-expand (openbsd (import unveil)) (else (display "unveil not supported")))
[21:37:42] <Zipheir> Right, I just figured that out.  Thanks!
[21:37:46] <mario-goulart> yw
[21:38:57] <Zipheir> Maybe I'll add something to the wiki, since only the procedural (chicken platform) software-version stuff seems to be documented.
[21:41:01] <Zipheir> I'll put that as an example on the unveil egg's wiki page.
[21:43:39] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 268 seconds)
[21:51:53] <mario-goulart> Zipheir: that would be great! Thanks.
[21:52:00] <Zipheir> Hmm, it would be cool if we could apply unveil/pledge to a continuation, which would have to be run in a forked process.  Something like (with-unveil <unveil-opts>... <thunk>)
[21:52:02] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:a052:a7f8:c6e4:b537)
[21:52:02] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:a052:a7f8:c6e4:b537) (Changing host)
[21:52:02] *** Joins: skapata (~Skapata@user/skapata)
[21:54:57] <Zipheir> Sounds reasonable to me, and perhaps it's more Schemely than the C-style unveil-and-lock interface the egg currently provides.
[22:00:03] <Zipheir> Although it's a slightly fradulent Scheme construction, because of the fork.  Presumably Bad Stuff happens if you (process-fork thunk) then try to invoke a continuation from the parent process in `thunk`...
[22:07:53] <mononote> thank you, cond-expand did the trick ^^
[22:08:41] <mononote> I had used software-version at first but was having the problem of import
[22:08:57] <mononote> another thing I wanted to ask, is there a way to execute some code at compile time?
[22:09:08] <mononote> in my case I do
[22:09:11] <mononote> (unveil (car (repository-path)) "r")
[22:09:43] <mononote> and I would like to get repository-path at compile time
[22:11:50] <vandusen> [eggs repo (r40833, by Zipheir)] Add example.
[22:12:32] *** Quits: rgherdt (~rgherdt@ip5f5af1e0.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[22:12:54] <Zipheir> mononote: Not in Scheme, but in Scheme macros, yes. :)
[22:14:27] <Zipheir> mononote: But if the value of (repository-path) isn't a constant, how *could* you get the right value at compile time?
[22:14:37] <Zipheir> s/a constant/constant/
[22:16:02] <vandusen> [eggs repo (r40834, by Zipheir)] Fix indent.
[22:17:10] <mononote> hm maybe is silly
[22:18:07] <Zipheir> If you had a literal (known at compile-time) list, you could syntactically take the first element.  But (repository-path) evaluates to a list, and evaluation is a run-time phenomenon.
[22:19:55] <Zipheir> (Although the languages enthusiast might ask, "why?")
[22:20:10] * mononote was ready to give up
[22:21:35] <mononote> why would that be? my original thought was to evaluate some code at compile time as part of a script or something
[22:23:36] <Zipheir> As Riastradh once put it, "Do you want to call (launch-the-missiles) when you compile the program, or _generate_ a call so that the missiles are launched when the program is run? ... (The only winning move is not to play! BUT, for the purposes of this exercise, we will put ourselves in the deathwish mindset of a Cold-War-style regime of mutually assured destruction.)
[22:24:06] <mononote> :3
[22:25:13] <mario-goulart> You can actually have something like (cond-expand (compiling (define repo-path (car (repository-path)))) (else)) 
[22:25:16] <Zipheir> mononote: Sure, that can be done by something like "csi -script my-program-generator.scm > my-other-program.scm" ...
[22:25:37] <Zipheir> Jumping just a bit out of the system, but that's the idea.
[22:28:10] <mononote> Zipheir: that's an idea
[22:29:21] <mononote> uhm, the imports under chicken are part of the compiler?
[22:29:52] <mononote> I tried to read the code of few eggs, but I'm not sure where I would go to learn about cond-expand and similar
[22:31:30] <Zipheir> mononote: It was originally specified by https://srfi.schemers.org/srfi-0/
[22:32:04] <Zipheir> It's in R7RS, so there's a shorter summary there. https://github.com/johnwcowan/r7rs-spec/blob/errata/spec/r7rs.pdf
[22:35:29] <mononote> hmm
[22:35:30] <Zipheir> BBL, good luck.
[22:36:12] <mononote> from the standard-extensions documentation
[22:36:16] <mononote> > The following feature-identifier classes are available in all situations: (machine-byte-order), (machine-type), (software-type), (software-version), where the actual feature-identifier is platform dependent.
[22:36:37] <mononote> so here software-version is where I should have guessed that I could have used openbsd?
[22:37:39] *** ecraven- is now known as ecraven
[22:39:17] *** Joins: rgherdt (~rgherdt@2a02:8109:86c0:d8d:5:5375:e160:e4a4)
[22:44:32] <Zipheir> Yes.  As I mentioned above, it's a little opaque and I'll try to clarify the page this weekend.
[22:44:39] <Zipheir> Ok, bye for real now.
[22:46:11] <mononote> thank you :)
[22:46:22] <mononote> bye
[22:48:32] *** Quits: mononote (~minus0@user/mononote) (Quit: leaving)
[23:38:10] *** Joins: rogersm (~rogersm@90.166.177.48)
[23:39:59] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 264 seconds)
[23:54:14] *** Quits: ecloud (~quassel@192.89.120.58) (Ping timeout: 260 seconds)
