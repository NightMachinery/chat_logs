[00:03:15] *** Joins: karlosz (~karlosz@bl18-25-12.dsl.telepac.pt)
[00:09:26] *** Quits: karlosz (~karlosz@bl18-25-12.dsl.telepac.pt) (Ping timeout: 272 seconds)
[00:37:48] <amazigh> someone is wrong on the internet!
[00:38:15] *** Quits: gproto23 (~gproto23@user/gproto23) (Quit: Leaving)
[00:38:29] <amazigh> Second time in one day, I regret burning my projects :|
[00:38:46] <amazigh> no more downers for today :)
[00:39:19] <amazigh> I will rework the "hyperserver" pre-srfi to also support rendering html, and cookies.
[00:45:35] *** Quits: mnieper (~user@ipbcc1ad82.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[01:00:36] *** Joins: badkins (~badkins@136.56.92.199)
[01:14:10] *** Joins: civodul (~user@guix/contributor/civodul)
[01:16:43] *** Joins: klovett_ (~klovett@107.116.92.97)
[01:19:48] *** Quits: klovett (~klovett@107.116.92.97) (Ping timeout: 240 seconds)
[01:20:54] *** Joins: greaser|q (greaser@antihype.space)
[01:21:59] *** Quits: greaser|q (greaser@antihype.space) (Changing host)
[01:21:59] *** Joins: greaser|q (greaser@user/greasemonkey)
[01:22:03] *** greaser|q is now known as GreaseMonkey
[01:33:49] *** Quits: Avichi (~Avichi@2a02:a460:7aa6:1:7216:513:f2b:17c3) (Ping timeout: 256 seconds)
[01:39:48] *** Quits: ahungry (~user@c-68-51-134-46.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[01:48:31] *** Quits: Techcable (~Techcable@user/Techcable) (Remote host closed the connection)
[01:48:39] *** Joins: Techcable (~Techcable@user/Techcable)
[02:01:36] <jcowan> I'm having a senior moment: where is the r7rs issues page now?  I know it's not on git{hub,lab}, but not where it is.
[02:03:47] <dpk> jcowan: https://codeberg.org/scheme/r7rs/issues
[02:04:27] <jcowan> Codeberg, right!  Thanks.
[02:05:06] <edgar-rft> There are issues? I believed r7rs were perfect, now I'm deeply disappointed.
[02:10:20] <jcowan> Issues to be resolved in the creation of r7rs-large
[02:11:04] <sham1> Speaking of the perfect language, are we or are we not able to change the semantics of (value) for R7-large, for the cases where the receiving expression only expects a single value
[02:11:05] <drakonis> it'll finally happen within my lifetime!
[02:11:24] <dpk> sham1: what do you mean?
[02:11:33] <sham1> As in actually define what happens with (let ((x (values 1 2 3))) x)
[02:11:37] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[02:11:45] <sham1> There was some discussion around this earlier today
[02:12:02] <dpk> Committee F might change that from It Is An Error to An Error Is Signalled
[02:12:21] <dpk> open an issue in the issue tracker above ;-)
[02:12:35] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 240 seconds)
[02:13:04] <dpk> (Common Lisp semantics are not likely to happen, though)
[02:13:09] <sham1> Okay
[02:13:33] <sham1> I'm personally partial towards the CL semantics, although I like this as well
[02:14:02] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[02:15:39] <dpk> that said, even R6RS says "For example, a continuation that accepts the argument to a procedure call is guaranteed to accept exactly one value. The effect of passing some other number of values to such a continuation is unspecified."
[02:18:25] <dpk> but the wrong number of values passed through call-with-values (and thus by extension through receive/let-values/etc) signals an error on R6
[02:19:46] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[02:21:09] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[02:24:35] *** Joins: badkins (~badkins@136.56.92.199)
[02:29:23] *** Quits: dnm (sid401311@id-401311.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[02:37:00] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[02:38:24] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[02:42:12] <jcowan> That is probably because the implementers in the R6RS committee had implementations that disagreed and they weren't willing to change them.
[02:42:57] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[02:43:25] <dpk> hmm, i thought probably for efficiency reasons
[02:43:57] <dpk> it hurts performance or requires a particularly smart compiler to check the number of return values of every expression used as a procedure argument
[02:45:19] <dpk> doing it that way means implementations can get away with only doing the check in explicitly multiple-valued continuations, which (because of how call-with-values works) they do anyway when checking whether a procedure has been given the right number of arguments
[02:45:35] <sham1> There's still some disagreement about the semantics. For example the example code I posted yields the list ((values) 1 2 3) whilst CHICKEN (and apparently Guile) gives 1. Really, getting some kind of a consensus about how it should work or if it should raise an error would be good
[02:46:05] <sham1> The list is in Chibi
[02:48:04] <jcowan> Note that the (values) is a unique cell
[02:50:05] <sham1> Yes, it's indeed a unique value allocated at some point and then eq?'d to see if this is a multiple value list 
[03:01:13] *** Quits: madsy (~madsy@223.239.164.82.customer.cdi.no) (Quit: madsy)
[03:01:30] *** Joins: madsy (~madsy@223.239.164.82.customer.cdi.no)
[03:16:33] *** Quits: madsy (~madsy@223.239.164.82.customer.cdi.no) (Quit: madsy)
[03:16:50] *** Joins: madsy (~madsy@223.239.164.82.customer.cdi.no)
[03:17:26] <jcowan> Unfortunately this cell is not exposed to C, so C routines can't return multiple values.  (This would probably be straightforward to fix.)
[03:33:06] *** klovett_ is now known as klovett
[03:39:36] *** Quits: atka (~atka@static-198-54-131-84.cust.tzulo.com) (Quit: rebooting...)
[03:41:53] *** Quits: madsy (~madsy@223.239.164.82.customer.cdi.no) (Quit: madsy)
[03:41:59] *** Quits: xgqt (~xgqt@gentoo/developer/xgqt) (Ping timeout: 260 seconds)
[03:42:13] *** Joins: madsy (~madsy@223.239.164.82.customer.cdi.no)
[03:42:42] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[03:42:44] *** Joins: xgqt (~xgqt@gentoo/developer/xgqt)
[03:54:11] *** Joins: atka (~atka@static-198-54-131-84.cust.tzulo.com)
[03:57:00] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[03:59:26] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[03:59:43] *** Quits: zwr (~zwr@2804:d45:b966:fb00:bc86:9875:5d48:1ce6) (Ping timeout: 260 seconds)
[04:00:24] *** Joins: zwr (~zwr@2804:d45:b966:fb00:e8a7:8c67:601:f50b)
[04:06:11] *** Joins: seninha (~seninha@user/seninha)
[04:07:14] *** Quits: madsy (~madsy@223.239.164.82.customer.cdi.no) (Quit: madsy)
[04:07:31] *** Joins: madsy (~madsy@223.239.164.82.customer.cdi.no)
[04:13:15] *** Joins: karlosz (~karlosz@bl18-25-12.dsl.telepac.pt)
[04:26:47] *** Quits: civodul (~user@guix/contributor/civodul) (Ping timeout: 260 seconds)
[04:41:40] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[05:13:23] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:27:01] *** Quits: karlosz (~karlosz@bl18-25-12.dsl.telepac.pt) (Quit: karlosz)
[06:26:46] *** Quits: atka (~atka@static-198-54-131-84.cust.tzulo.com) (Quit: WeeChat 3.4)
[06:32:43] *** Joins: atka (~atka@static-198-54-131-84.cust.tzulo.com)
[07:12:11] *** Quits: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net) (Remote host closed the connection)
[07:17:17] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[07:17:58] *** Joins: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net)
[07:19:38] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[07:34:37] *** Quits: silasfox (~sbv@p200300cec717230004f2e58485b580c9.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[07:36:30] *** Joins: silasfox (~sbv@p200300cec74817009bc16da18a2343ec.dip0.t-ipconnect.de)
[07:57:34] *** Quits: madsy (~madsy@223.239.164.82.customer.cdi.no) (Quit: madsy)
[07:57:51] *** Joins: madsy (~madsy@223.239.164.82.customer.cdi.no)
[08:12:54] *** Quits: madsy (~madsy@223.239.164.82.customer.cdi.no) (Quit: madsy)
[08:13:11] *** Joins: madsy (~madsy@223.239.164.82.customer.cdi.no)
[08:28:31] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 260 seconds)
[08:30:21] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[09:31:45] *** Quits: klovett (~klovett@107.116.92.97) (Remote host closed the connection)
[09:46:24] *** Quits: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net) (Ping timeout: 272 seconds)
[09:48:14] *** Quits: madsy (~madsy@223.239.164.82.customer.cdi.no) (Quit: madsy)
[09:48:31] *** Joins: madsy (~madsy@223.239.164.82.customer.cdi.no)
[09:51:05] *** Joins: poorlynamed (~poorlynam@73.127.152.21)
[09:53:32] *** Quits: poorlynamed (~poorlynam@73.127.152.21) (Remote host closed the connection)
[09:53:34] *** Quits: madsy (~madsy@223.239.164.82.customer.cdi.no) (Quit: madsy)
[09:53:54] *** Joins: madsy (~madsy@223.239.164.82.customer.cdi.no)
[10:03:56] *** Quits: madsy (~madsy@223.239.164.82.customer.cdi.no) (Quit: madsy)
[10:04:14] *** Joins: madsy (~madsy@223.239.164.82.customer.cdi.no)
[10:26:52] *** Joins: s-liao (~s-liao@101.86.164.158)
[10:50:28] *** Quits: s-liao (~s-liao@101.86.164.158) (Quit: Client closed)
[10:54:39] *** Joins: badkins (~badkins@136.56.92.199)
[10:59:00] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 240 seconds)
[10:59:24] *** Quits: X-Scale (~ARM@219.206.137.78.rev.vodafone.pt) (Ping timeout: 240 seconds)
[10:59:28] *** Joins: X-Scale` (~ARM@46.50.6.46)
[11:00:09] *** X-Scale` is now known as X-Scale
[11:04:16] *** Quits: madsy (~madsy@223.239.164.82.customer.cdi.no) (Quit: madsy)
[11:04:36] *** Joins: madsy (~madsy@223.239.164.82.customer.cdi.no)
[11:09:37] *** Quits: madsy (~madsy@223.239.164.82.customer.cdi.no) (Quit: madsy)
[11:09:53] *** Joins: madsy (~madsy@223.239.164.82.customer.cdi.no)
[11:14:56] *** Quits: madsy (~madsy@223.239.164.82.customer.cdi.no) (Quit: madsy)
[11:15:13] *** Joins: madsy (~madsy@223.239.164.82.customer.cdi.no)
[11:55:16] *** Quits: madsy (~madsy@223.239.164.82.customer.cdi.no) (Quit: madsy)
[11:55:33] *** Joins: madsy (~madsy@223.239.164.82.customer.cdi.no)
[11:59:44] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[12:26:45] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[13:27:23] *** Quits: nulluint (uid547282@fsf/member/nulluint) (Quit: Connection closed for inactivity)
[13:46:25] *** Joins: gproto23 (~gproto23@user/gproto23)
[14:30:31] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Remote host closed the connection)
[14:30:50] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[14:34:34] *** Quits: nmeum (~nmeum@barium.8pit.net) (Remote host closed the connection)
[14:34:51] *** Joins: nmeum (~nmeum@barium.8pit.net)
[14:40:17] *** Joins: Everything (~Everythin@37.115.210.35)
[14:41:36] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 252 seconds)
[14:43:37] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[14:56:23] *** Joins: Avichi (~Avichi@2a02:a460:7aa6:1:78a0:e4ab:90d2:de8c)
[14:56:36] *** Joins: badkins (~badkins@136.56.92.199)
[15:00:59] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 260 seconds)
[15:14:41] *** Quits: _________ (~nobody@user/noodly) (Ping timeout: 256 seconds)
[15:14:55] *** Quits: Avichi (~Avichi@2a02:a460:7aa6:1:78a0:e4ab:90d2:de8c) (Ping timeout: 256 seconds)
[15:25:29] *** Joins: _________ (~nobody@user/noodly)
[15:41:32] *** Quits: wonko-the-sane (~wonk-the-@gateway/tor-sasl/wonko-the-sane) (Remote host closed the connection)
[15:41:56] *** Joins: wonko-the-sane (~wonk-the-@gateway/tor-sasl/wonko-the-sane)
[15:51:51] *** Quits: nmeum (~nmeum@barium.8pit.net) (Remote host closed the connection)
[15:52:07] *** Joins: nmeum (~nmeum@barium.8pit.net)
[16:12:03] *** Joins: badkins (~badkins@136.56.92.199)
[16:16:12] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 240 seconds)
[16:30:24] *** Joins: badkins (~badkins@136.56.92.199)
[16:34:47] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 260 seconds)
[16:36:38] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[17:10:13] *** Joins: badkins (~badkins@136.56.92.199)
[17:10:36] *** Quits: madsy (~madsy@223.239.164.82.customer.cdi.no) (Quit: madsy)
[17:10:59] *** Joins: madsy (~madsy@223.239.164.82.customer.cdi.no)
[17:11:07] *** Joins: TCZ (~tcz@91.150.178.124)
[17:14:36] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 240 seconds)
[17:16:00] *** Quits: madsy (~madsy@223.239.164.82.customer.cdi.no) (Quit: madsy)
[17:16:18] *** Joins: madsy (~madsy@223.239.164.82.customer.cdi.no)
[17:20:31] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[17:27:22] *** Joins: s-liao (~s-liao@101.86.164.158)
[17:32:46] *** Quits: s-liao (~s-liao@101.86.164.158) (Quit: Client closed)
[17:36:20] *** Quits: madsy (~madsy@223.239.164.82.customer.cdi.no) (Quit: madsy)
[17:36:36] *** Joins: madsy (~madsy@223.239.164.82.customer.cdi.no)
[17:36:59] *** TCZ is now known as patus
[17:37:10] *** patus is now known as nic_nie_znacze
[17:43:01] *** nic_nie_znacze is now known as wszystko_znacze
[17:52:44] *** Joins: badkins (~badkins@136.56.92.199)
[17:53:01] *** wszystko_znacze is now known as TCZ
[17:59:15] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 260 seconds)
[18:02:40] *** Quits: wonko-the-sane (~wonk-the-@gateway/tor-sasl/wonko-the-sane) (Remote host closed the connection)
[18:02:40] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Remote host closed the connection)
[18:02:55] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[18:02:58] *** Joins: wonko-the-sane (~wonk-the-@gateway/tor-sasl/wonko-the-sane)
[18:06:04] *** Quits: clacke (88d96f2df3@knopi.disroot.org) (Read error: Connection reset by peer)
[18:20:09] *** Joins: s-liao (~s-liao@101.86.164.158)
[18:20:17] *** Quits: s-liao (~s-liao@101.86.164.158) (Client Quit)
[18:20:41] *** Joins: s-liao (~s-liao@101.86.164.158)
[18:26:27] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 256 seconds)
[18:28:10] *** Joins: aeth (~aeth@user/aeth)
[18:28:14] *** Quits: TCZ (~tcz@91.150.178.124) (Quit: Leaving)
[18:37:18] *** Joins: karlosz (~karlosz@bl18-25-12.dsl.telepac.pt)
[18:37:18] *** Quits: karlosz (~karlosz@bl18-25-12.dsl.telepac.pt) (Client Quit)
[18:37:42] *** Joins: karlosz (~karlosz@bl18-25-12.dsl.telepac.pt)
[18:41:45] *** Quits: karlosz (~karlosz@bl18-25-12.dsl.telepac.pt) (Client Quit)
[18:41:45] *** Quits: s-liao (~s-liao@101.86.164.158) (Ping timeout: 256 seconds)
[18:54:37] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[19:11:39] *** Quits: madsy (~madsy@223.239.164.82.customer.cdi.no) (Quit: madsy)
[19:11:56] *** Joins: madsy (~madsy@223.239.164.82.customer.cdi.no)
[19:12:31] *** Joins: mnieper (~user@ipbcc1ad82.dynamic.kabel-deutschland.de)
[19:12:57] *** Joins: s-liao (~s-liao@101.86.164.158)
[19:16:05] *** Quits: s-liao (~s-liao@101.86.164.158) (Client Quit)
[19:21:24] *** Quits: silasfox (~sbv@p200300cec74817009bc16da18a2343ec.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[19:21:25] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[19:23:25] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[19:26:59] *** Quits: madsy (~madsy@223.239.164.82.customer.cdi.no) (Quit: madsy)
[19:27:16] *** Joins: madsy (~madsy@223.239.164.82.customer.cdi.no)
[19:52:31] *** Quits: ArneBab (~quassel@freenet/release-manager/ArneBab) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[20:00:10] *** Joins: badkins (~badkins@136.56.92.199)
[20:04:17] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 240 seconds)
[20:49:30] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[20:50:49] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[20:53:24] *** Joins: badkins (~badkins@136.56.92.199)
[21:02:12] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 240 seconds)
[21:05:44] *** Joins: notzmv (~zmv@user/notzmv)
[21:18:11] *** Quits: xgqt (~xgqt@gentoo/developer/xgqt) (Read error: Connection reset by peer)
[21:24:02] *** Joins: xgqt (~xgqt@gentoo/developer/xgqt)
[21:34:46] *** Joins: ArneBab (~quassel@freenet/release-manager/ArneBab)
[21:42:19] *** Quits: madsy (~madsy@223.239.164.82.customer.cdi.no) (Quit: madsy)
[21:42:37] *** Joins: madsy (~madsy@223.239.164.82.customer.cdi.no)
[22:07:53] *** Joins: badkins (~badkins@136.56.92.199)
[22:12:39] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 260 seconds)
[22:14:45] *** Joins: badkins (~badkins@136.56.92.199)
[22:22:37] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:3dfb:4d53:34e0:2a9e)
[22:22:37] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:3dfb:4d53:34e0:2a9e) (Changing host)
[22:22:37] *** Joins: skapata (~Skapata@user/skapata)
[22:57:24] <wasamasa> is there some idiom for iterating in the style of ruby's each_cons?
[22:57:58] <wasamasa> like, given a list of (1 2 3 4 5) and processing every two adjacent items, a procedure would be called with (1 2), (2 3), (3 4) and (4 5)
[22:58:26] <wasamasa> bonus if it can be generalized to more adjacent items
[23:05:01] <wasamasa> http://ix.io/3TxF
[23:05:08] <wasamasa> this is what I got so far
[23:11:22] <Zipheir> It's a fusion of map and (zip lis (cdr lis)), but I don't know if it has a name...
[23:11:59] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[23:11:59] <wasamasa> somewhat related I want to recreate its slice_when
[23:12:32] <wasamasa> which uses this to slice items into groups when a predicate used on two adjacent items is true
[23:12:40] *** Quits: madsy (~madsy@223.239.164.82.customer.cdi.no) (Quit: madsy)
[23:13:00] <Zipheir> Another useful form.
[23:13:01] *** Joins: madsy (~madsy@223.239.164.82.customer.cdi.no)
[23:13:56] <wasamasa> could be built upon each-consecutive, but then it would use set! a lot
[23:14:51] <Zipheir> It's known as groupBy in Haskell https://hackage.haskell.org/package/base-4.16.0.0/docs/Data-List.html#v:groupBy
[23:15:06] <dpk> you know most iteration procedures take two arguments?
[23:15:07] <Zipheir> Nice recursive definition:
[23:15:17] <dpk> (map f xs (cdr xs)) will do what you want
[23:15:28] <dpk> substitute map for fold or for-each or whatever as you wish
[23:15:39] <wasamasa> yeah, it does indeed
[23:15:40] <Zipheir> Recursive case: groupBy eq (x:xs)       =  (x:ys) : groupBy eq zs where (ys,zs) = span (eq x) xs
[23:15:49] <wasamasa> thanks
[23:16:27] <wasamasa> if only for the special case of two
[23:16:35] <Zipheir> SRFI 1 provides span, so that's straightforward to translate.
[23:17:42] <wasamasa> I think it's break actually, but yeah
[23:17:43] <Zipheir> dpk: Good point.  I forgot that you generally don't have to fuse map with zip in Scheem.
[23:17:57] <Zipheir> *Scheme, argh
[23:20:32] <wasamasa> or no, span/break operate on a stretch of items satisfying a predicate
[23:20:52] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 272 seconds)
[23:21:04] <wasamasa> they don't look at consecutive ones
[23:22:09] *** Joins: aeth (~aeth@user/aeth)
[23:22:15] <Zipheir> That looks like SRFI 1 span to me.
[23:22:22] *** Joins: badkins (~badkins@136.56.92.199)
[23:22:28] <Zipheir> I'll have a translation in a moment.
[23:23:12] <wasamasa> (group-when (lambda (a b) (not (= (+ a 1) b))) '(1 2 4 5 6 8 9)) ;=> ((1 2) (4 5 6) (8 9))
[23:24:54] <Zipheir> http://ix.io/3TxJ
[23:25:10] <Zipheir> As I said, it's just about a transliteration of the Haskell.
[23:28:07] *** Joins: seninha (~seninha@user/seninha)
[23:28:24] <wasamasa> hm, it's kind of weird
[23:29:11] <Zipheir> It's not the most obvious kind of recursion, but I imagine most recursive definitions of the function will end up doing the same kind of thing.
[23:32:35] <Zipheir> I wonder how many useful list functions not in SRFI-1 people have implemented for Scheme over the years...
[23:33:13] <wasamasa> yeah
[23:33:19] <sham1> Not sure if sliding windows are the most useful with lists
[23:33:32] <wasamasa> it seems like an obvious thing to work on
[23:33:41] <wasamasa> no need for alexandria when list processing is far from figured out
[23:34:06] <Zipheir> sham1: They may be a bit more useful with streams.
[23:34:13] <sham1> Yeah, probably
[23:34:28] <Zipheir> I'm not sure.  But I do recall groupBy showing up in many of Richard Bird's algorithms.
[23:34:55] <wasamasa> I find streams pretty interesting to think about
[23:35:04] <Zipheir> (i.e. Richard Bird the *master* of functional algorithms) :)
[23:35:08] <wasamasa> doesn't take signal processing for that
[23:35:45] * wasamasa has TIS-100 flashbacks
[23:35:59] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[23:36:11] *** Joins: badkins (~badkins@136.56.92.199)
[23:42:44] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[23:52:31] *** Quits: light (~light@user/light) (Quit: leaving)
