[00:00:53] *** Joins: menace (~someone@ppp-93-104-164-149.dynamic.mnet-online.de)
[00:01:29] *** Joins: AsenMx (~AsenMx@user/asenmx)
[00:01:42] *** Quits: menace (~someone@ppp-93-104-164-149.dynamic.mnet-online.de) (Changing host)
[00:01:42] *** Joins: menace (~someone@user/menace)
[00:01:53] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 250 seconds)
[00:03:00] *** Quits: qbt (~qbt@user/edun) (Quit: Leaving.)
[00:03:38] *** Quits: merpnderp (sid16744@hampstead.irccloud.com) (Ping timeout: 256 seconds)
[00:04:15] *** Joins: merpnderp (sid16744@hampstead.irccloud.com)
[00:18:22] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:19:36] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[00:20:00] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[00:21:12] *** Joins: mr_ab (~nobody@bnc.ab.hl9.net)
[00:21:17] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[00:29:05] *** Joins: jbis (~jbis@pool-71-190-180-229.nycmny.fios.verizon.net)
[00:34:14] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:35:41] *** Joins: dna44 (~dna@rrcs-71-78-149-194.sw.biz.rr.com)
[00:37:38] *** Quits: eruditass (uid248673@uxbridge.irccloud.com) (Ping timeout: 256 seconds)
[00:38:53] *** Joins: eruditass (uid248673@uxbridge.irccloud.com)
[00:43:03] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[00:45:20] *** Quits: dna44 (~dna@rrcs-71-78-149-194.sw.biz.rr.com) (Ping timeout: 268 seconds)
[00:46:16] *** Quits: eruditass (uid248673@uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[00:48:19] *** Joins: mononote (~mononote@user/mononote)
[00:56:25] *** Joins: rustycl0ck (~ircuser@gateway/tor-sasl/rustycl0ck)
[01:03:19] <riv> https://en.wikipedia.org/wiki/Quantum_volume There is this notion
[01:06:50] *** Joins: son0p (~ff@181.136.122.143)
[01:30:38] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[01:33:57] *** Joins: aquijoule_ (~richbridg@089144202142.atnat0011.highway.a1.net)
[01:36:34] *** Quits: richbridger (~richbridg@089144202142.atnat0011.highway.a1.net) (Ping timeout: 256 seconds)
[01:41:40] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Quit: So long and thanks for all the fish)
[01:51:05] *** Quits: VarunAgw (~VarunAgw@103.158.148.26) (Ping timeout: 250 seconds)
[02:00:06] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[02:05:17] <maroon> so if they get away with taking qubits in parallel and adding them all together, then soon a 2000ghz pc with 4 cores will be described as 8000 ghz
[02:05:27] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[02:07:35] *** Quits: cwebber (~user@user/cwebber) (Ping timeout: 264 seconds)
[02:08:13] *** Quits: GlobalBanksta (~aqua@user/aqua) (Quit: Leaving)
[02:09:27] *** Quits: AsenMx (~AsenMx@user/asenmx) (Remote host closed the connection)
[02:09:51] *** Joins: AsenMx (~AsenMx@user/asenmx)
[02:11:12] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Quit: So long and thanks for all the fish)
[02:13:37] *** Quits: igemnace (~ian@user/igemnace) (Ping timeout: 250 seconds)
[02:21:38] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 265 seconds)
[02:21:49] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[02:23:47] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 264 seconds)
[02:25:44] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[02:26:00] *** Joins: GlobalBanksta (~aqua@user/aqua)
[02:28:38] *** Quits: thomas_25 (thomas_25@pls.just.stfu-kthx.bnc4you.xyz) (Ping timeout: 260 seconds)
[02:30:47] *** Quits: e2 (e2@sponsored.by.bnc4you.xyz) (Ping timeout: 268 seconds)
[02:32:56] *** Quits: steam (~steam@user/steam) (Remote host closed the connection)
[02:34:14] *** Joins: steam (~steam@user/steam)
[02:36:15] *** Quits: GlobalBanksta (~aqua@user/aqua) (Quit: Leaving)
[02:36:26] *** Joins: GlobalBanksta (~sid742412@user/aqua)
[02:38:20] *** Quits: yewscion (~yewscion@52.94.133.128) (Ping timeout: 256 seconds)
[02:42:57] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Read error: Connection timed out)
[02:44:23] *** Joins: igemnace (~ian@user/igemnace)
[02:52:39] *** Quits: GlobalBanksta (~sid742412@user/aqua) (Remote host closed the connection)
[02:52:57] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[02:53:06] *** Joins: GlobalBanksta (~sid742412@user/aqua)
[03:03:18] *** Quits: Choco (~Choco@host150.200-71-232.telecom.net.ar) (Quit: Client closed)
[03:09:39] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Read error: Connection timed out)
[03:11:12] *** Joins: spaceone (~spaceone@wc1.wechall.net)
[03:12:10] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[03:12:31] <spaceone> hi, i need some help in understanding details of CBC (AES-CBC-128) 
[03:14:23] <spaceone> If a plaintext is known one can modify the ciphertext by XORing either the IV or any block with the plaintext and a modified version. 
[03:15:11] <spaceone> I don't understand if it is also possible to change more than 1 block? and if yes, how would that work?
[03:17:06] <spaceone> and: is it also possible to shorten or extend a ciphertext so that decryption of the altered ciphertext is still possible? 
[03:21:22] <maroon> as i understand it, the XOR bitflipping with CBC doesn't require knowing the key, it only requires knowing (1) the plaintext (2) the prior ciphertext block (which is what the IV is for no-such-block), so doing it against 2 consecutive blocks would require building an ECB codebook of what various inputs will encode as
[03:22:33] <danieldg> without a mac you never reject a message, so extend/truncate is trivial (if you don't mind garbage)
[03:22:57] <maroon> if all you're doing is CBC without authentication, and you're using AES with 16-byte blocks, then you can chop 16*N bytes from the ciphertext. the 1st chop removes 0-15 bytes of plaintext plus the padding, and each additional chop removes 16 more bytes of the plaintext
[03:23:12] <maroon> but that assumes the decryption will not protest to find there's no padding at all
[03:23:14] <spaceone> yes, CBC without authentication
[03:24:12] <spaceone> padding is only relevant for the last block
[03:24:14] <maroon> and if you extend the ciphertext, you can append observed ciphertext, and you'll get 1 block of garbage, but the self-correcting CBC will decrypt the remainder as normal
[03:24:23] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Quit: So long and thanks for all the fish)
[03:24:43] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[03:25:14] <spaceone> sorry, i am slow. i have to read your messages multiple times!
[03:25:49] <maroon> but that's also hoping that the garbage doesn't contain 0x00 and the decryption gets truncated by seeing 0x00 in a string
[03:26:46] <spaceone> is the IV the absolute starting point or can i just take any block as starting point?
[03:26:53] <maroon> i.e. if the message were a multiple of 16 bytes, the padding would be a full block of 16 0x00's, so appending to that would probably all be ignored if something were assumign the decryption is text
[03:27:34] <maroon> CBC needs to use "prior ciphertext block", so IV is just a crutch to get the ball rolling, by creating a fake ciphertext block for the 1st block of the message to work with
[03:27:41] <iz> if you are encrypting, you have to start at the start, but for decrypting, you can start at any block
[03:27:59] <spaceone> ok, yes. sound logic
[03:28:32] <maroon> so this could allow you to speed up CBC decryption by decrypting chunks in parallel as long as you throw away the 1st decrypted block
[03:28:33] <Alipha> Yeah, so assuming the IV is prepended to the ciphertext, you can remove as many whole blocks as you want from the beginning of the ciphertext. You probably can't append or remove from the end without triggering a malformed padding error... unless you know what's in the last block that you want to keep
[03:28:50] <spaceone> i only was confused because wikipedia says "Explicit initialization vectors[24] takes advantage of this property by prepending a single random block to the plaintext. Encryption is done as normal, except the IV does not need to be communicated to the decryption routine. Whatever IV decryption uses, only the random block is "corrupted". It can be safely discarded and the rest of the decryption is
[03:28:52] <spaceone> the original plaintext. "
[03:30:11] *** Quits: edk (edk@libera/staff/edk) (Read error: Connection reset by peer)
[03:30:16] <MacGyver> Ah yes, instead of communicating the IV, you communicate the first random block.
[03:30:21] <MacGyver> That sounds like a significant win.
[03:30:25] <MacGyver> </sarcasm>
[03:30:32] <maroon> as i understand it, even when using 'explicit iv', the ciphertext still needs to contain an extra block of ciphertext beyond the size of the message
[03:30:44] <spaceone> ok, so i understand a little more now.
[03:31:15] <Alipha> And you can modify arbitrary bytes in block n if you know what those plaintext bytes are by xoring "the difference" into block n-1. Block n-1 then becomes random garbage
[03:31:58] <maroon> the explicit IV, has the advantage of not letting Eve see the literal IV that's literally used for decrypting the 1st block of the messasge, but that's pretty much it
[03:32:29] <spaceone> what I easily managed to do (in python) is to change the first block OR any other block (because i know the complete plaintext) - but what i still don't get is how to change two adjacent blocks
[03:33:28] <Alipha> I don't think you can change two adjacent blocks?
[03:33:33] <maroon> that's what i was saying above, you'd need to build a codebook to know the in/out for 2 consecutive encryptions
[03:33:51] <spaceone> you mentioned ECB yes
[03:34:00] <maroon> and your hack of block#1 would affect which codebook item you'd need for block#2
[03:34:25] <MacGyver> (And, importantly, you *can't* build said codebook)
[03:34:40] <MacGyver> (It's infeasible due to the underlying cipher you're using)
[03:35:02] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Quit: So long and thanks for all the fish)
[03:35:35] <maroon> an improvement over CBC_Encrypt(key=same-key, IV=public-string) would be TEMP=sha256(same-key|public-IV) then use key=first 128bits IV=next 128bits
[03:36:34] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[03:36:54] <maroon> as long as the public IV is unique, the session-key should be unique. but even when the public string (salt) happens to repeat, the actual IV is hidden somewhat
[03:37:35] <MacGyver> (And all of this is meaningless mental practice anyway because you must not use unauthenticated CBC.)
[03:37:42] <maroon> yes, that codebook is what the SWEET32 attack was doing against ciphers who used a 64-bit block
[03:37:43] <spaceone> yes
[03:38:22] <MacGyver> Yeah, so AES-DES-56 or whatever it was.
[03:38:26] <MacGyver> Uh.
[03:38:28] <MacGyver> Man I'm tired.
[03:38:36] <MacGyver> DES-CBC-56.
[03:39:05] <MacGyver> Also 112 I think?
[03:39:15] <MacGyver> Everything DES anyway.
[03:39:43] <maroon> yeah, they got 112 from triple-DES, but it continued to use 64-bit blocks, so zero defense against SWEET32 that doesnt care about the actual key
[03:40:23] *** Joins: eruditass (uid248673@uxbridge.irccloud.com)
[03:42:48] <maroon> whenever i see ciphers with the authentication built into them, they're stream ciphers, like salsa/chachata-poly-whatever. is there a good authentication-without-appended MAC that would work good for a block cipher like AES, where the ciphertext only needs to be 16-byte-salt-length longer than the encrypted message?
[03:43:27] <spaceone> i want to understand the codebook thing furher. what is meant with "consecutive" encryptions. just the processing of 2 blocks?
[03:43:41] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[03:44:09] <maroon> in/out for 2 consecutive blocks
[03:45:25] <spaceone> well, in is the plaintext XOR last-Ciphertext XOR key or similar to that
[03:45:31] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Quit: So long and thanks for all the fish)
[03:46:04] <spaceone> out is the "next"-ciphertext (which I know because i have the block)
[03:46:22] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[03:47:11] <maroon> you'd need to know the in/out for 2 consecutive blocks if you want to avoid the self-correcting 'garbage' decryption of the 2nd block of ciphertext
[03:47:39] <maroon> though that just kicks the can down the road, because then the 3rd block will have garbage instead of the 2nd
[03:48:15] <spaceone> that would be fine. i don't need the 3rd block - it can be garbage
[03:48:42] <spaceone> but i need the first 2 blocks
[03:49:45] <maroon> but by increasing the blocksize from 64bit to 128bit, the task of building the codebook is much harder, as the codebook now has 2^128 entries with 50% chance of collisions between xor(previous ciphertext,current plaintext) happening after 2^64 blocks
[03:50:48] <maroon> with 64bit blocks, the SWEET32 only need the 50% chance after 2^32 blocks, which is 4 billion blocks @ 8 bytes = 32 gigs
[03:51:42] <spaceone> hmm, sounds hard
[03:52:11] <maroon> cost/benefit, so it depends on how valuable the goal is
[03:53:28] <maroon> and even at that, you can greatly make that task harder by having the 16 bytes be a salt instead of a literal IV, since that makes the key change all the time, which means they'd need 2^128 different codebooks
[03:54:22] <spaceone> the IV is random each time
[03:54:24] <maroon> but using the salt method doesnt help if all they need to do is bitflip a block later in the message where they don't care if there's a neighboring garbage block
[03:54:36] <maroon> the IV 'should' be unique
[03:55:15] <maroon> so from the birthday paradox, you have 50% chance of repeating after rolling your 2^64-sided dice 2^32 times
[03:56:35] <maroon> a way to avoid the birthday collision while keeping your IV appearing as unpredictible is to have a counter, and use as your IV ECB_Encrypt(plaintext=counter++, key=doesnt matter what this key is as long as it doesnt change)
[03:58:27] <maroon> AES has 2^128 possible inputs, and each of them as a unique output, the key just creates a hidden mapping between them, and it doesnt matter that there's an extremely small chance that 1 of those in/out mappings doesnt change
[03:59:11] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Quit: So long and thanks for all the fish)
[04:00:13] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[04:00:28] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[04:00:59] <maroon> i think one of the weaknesses in the german Enigma was that it was impossible for the ciphertext of a letter to be that same letter, which made it possible to rule-out plaintexts
[04:04:23] <spaceone> my python code for testing this is: https://bpa.st/F2AQ
[04:04:59] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[04:06:23] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:301e:cfcd:47ee:8af2)
[04:09:47] <spaceone> maybe i have a chance with https://en.wikipedia.org/wiki/Padding_oracle_attack "Encrypting messages with Padding oracle attack (CBC-R)"
[04:09:49] <maroon> with CBC, you can insert/remove/rearrange blocks, and it's always self-correcting after at least 1 block of 'garbage'
[04:11:07] <maroon> the oracle depends on being told whether there was valid padding or not, and then you create messages where there's only the single 0x01 byte of padding. then you can extended it to 2-bytes of padding, and so on
[04:13:39] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 250 seconds)
[04:14:38] <spaceone> so it wouldn't work if there is no padding at all
[04:14:58] <spaceone> because the last block fits into 128bits
[04:15:23] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 250 seconds)
[04:15:32] <maroon> that attack turns it into a stream cipher where you can determine what the stream looks like
[04:15:36] *** Joins: Wulf (~Wulf@user/wulf)
[04:16:13] <maroon> it does work when it requires 16 0x00's or 16 0x16's at the end of a 16-byte message
[04:16:15] <spaceone> but i need to know how the padding is done? e.g. my implentation uses \r and not null bytes
[04:16:39] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[04:16:39] <maroon> PKCS#7 padding is to append N byte values of 0x0N
[04:16:49] <maroon> that allows binary messages which could end with 0x00
[04:17:17] <spaceone> yes
[04:17:29] *** Joins: ravan__ (~ravan@user/ravan)
[04:17:46] <maroon> there's also 'one and zeroes' where the padding is 0x80 followed by zero-or-more 0x00's, and that does allow messages of any type
[04:17:54] <spaceone> my idea now is to move the first block to the second-last and play with the padding of the last block
[04:18:35] <spaceone> probably: third*last not second.
[04:18:41] <MacGyver> maroon: Re: your question about AEAD looking like a stream cipher: Iirc OCB mode is constructed the way you ask.
[04:19:15] <MacGyver> maroon: But, bear in mind that the distinction between block and stream ciphers isn't that meaningful anymore when talking about modern cryptography.
[04:20:01] <maroon> well, as i understand it, a repeating iv/nonce isnt as deadly in block ciphers as it is in stream?
[04:20:16] <MacGyver> maroon: Yes, *technically* chacha is a stream cipher but it generates the keystream in blocks of, what was it, 128 bits.
[04:21:07] <MacGyver> maroon: Hmm, in that sense, yeah, sure.
[04:21:59] *** Quits: ravan_ (~ravan@user/ravan) (Ping timeout: 265 seconds)
[04:25:47] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:301e:cfcd:47ee:8af2) (Ping timeout: 250 seconds)
[04:28:25] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:301e:cfcd:47ee:8af2)
[04:28:43] <spaceone> maroon: thanks for all the detailed explanations! i will still have to think about this some further days but i made much progress. thanks! 
[04:28:58] <maroon> :)
[04:45:59] *** Quits: jbis (~jbis@pool-71-190-180-229.nycmny.fios.verizon.net) (Remote host closed the connection)
[05:10:25] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[05:14:11] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:19:01] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:301e:cfcd:47ee:8af2) (Ping timeout: 265 seconds)
[05:33:42] *** Joins: yeirr (~yeirr@user/yeirr)
[05:49:24] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Remote host closed the connection)
[06:06:19] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 250 seconds)
[06:21:47] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[06:21:52] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[06:36:32] *** Quits: JimL (~quassel@89-162-2-132.fiber.signal.no) (Ping timeout: 240 seconds)
[06:45:03] *** Quits: yeirr (~yeirr@user/yeirr) (Ping timeout: 265 seconds)
[06:58:59] *** Joins: aquijoule__ (~richbridg@213-225-12-152.nat.highway.a1.net)
[07:01:29] *** Quits: aquijoule_ (~richbridg@089144202142.atnat0011.highway.a1.net) (Ping timeout: 265 seconds)
[07:05:14] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 256 seconds)
[07:06:55] *** Joins: fulldecent (~textual@wikipedia/fulldecent)
[07:09:34] *** Quits: karstensrage (~karstensr@user/karstensrage) (Ping timeout: 260 seconds)
[07:16:27] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[07:33:22] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[07:51:18] *** Quits: CryptoClub (~fafs@87.125.251.76) (Read error: Connection reset by peer)
[07:53:57] *** Joins: CryptoClub (~fafs@87.125.251.76)
[07:57:00] *** Joins: BOKALDO (~BOKALDO@user/bokaldo)
[07:58:58] *** Joins: ravan_ (~ravan@user/ravan)
[08:01:56] *** Quits: ravan__ (~ravan@user/ravan) (Ping timeout: 268 seconds)
[08:11:17] *** Quits: madage (~madage@user/madage) (Remote host closed the connection)
[08:11:30] *** Joins: madage (~madage@user/madage)
[08:16:46] *** Quits: rudi_s (~simon@user/rudi-s/x-7673890) (Remote host closed the connection)
[08:17:01] *** Joins: rudi_s (~simon@user/rudi-s/x-7673890)
[08:18:09] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[08:18:30] *** Joins: dna1 (~dna@64.129.167.147)
[08:24:59] *** Quits: dna1 (~dna@64.129.167.147) (Ping timeout: 250 seconds)
[08:27:51] *** ravan_ is now known as ravan
[08:28:16] *** Quits: ravan (~ravan@user/ravan) (Quit: Leaving)
[08:42:05] *** Quits: stiell (~stiell@gateway/tor-sasl/stiell) (Remote host closed the connection)
[08:42:29] *** Joins: stiell (~stiell@gateway/tor-sasl/stiell)
[08:44:24] *** Quits: Brnocrist (~spartak@user/brnocrist) (Ping timeout: 256 seconds)
[08:46:08] *** Joins: Brnocrist (~spartak@user/brnocrist)
[08:50:10] *** Joins: dna1 (~dna@64.129.167.147)
[08:52:13] *** Joins: Miles_Elite (~mileselit@2.sub-174-250-18.myvzw.com)
[08:54:35] *** Quits: dna1 (~dna@64.129.167.147) (Ping timeout: 265 seconds)
[08:55:39] <Miles_Elite> so whats the word on the stable coin gyen?
[08:59:45] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[08:59:54] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 268 seconds)
[09:05:43] *** Quits: Miles_Elite (~mileselit@2.sub-174-250-18.myvzw.com) ()
[09:08:07] *** Quits: Brnocrist (~spartak@user/brnocrist) (Ping timeout: 265 seconds)
[09:28:38] *** Joins: MilesElite (~MilesElit@2.sub-174-250-18.myvzw.com)
[09:30:53] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[09:36:07] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Remote host closed the connection)
[09:36:44] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[09:40:59] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 265 seconds)
[09:41:16] *** Quits: MilesElite (~MilesElit@2.sub-174-250-18.myvzw.com) (Remote host closed the connection)
[09:41:24] *** Joins: frost (~frost@user/frost)
[09:42:45] *** Quits: frost (~frost@user/frost) (Client Quit)
[09:54:59] *** Joins: yeirr (~yeirr@user/yeirr)
[10:00:48] *** Joins: frost (~frost@user/frost)
[10:01:34] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[10:03:33] *** Quits: fulldecent (~textual@wikipedia/fulldecent) (Quit: Textual IRC Client: www.textualapp.com)
[10:08:42] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Remote host closed the connection)
[10:09:15] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[10:16:36] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[10:18:33] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Remote host closed the connection)
[10:25:01] *** Quits: Gallomimia (~Gallomimi@node-1w7jra2a2gqpxoxj1tx3rrux2.ipv6.telus.net) (Remote host closed the connection)
[10:31:28] *** Joins: jdvr (~jdvr@user/jdvr)
[10:38:18] *** Quits: mononote (~mononote@user/mononote) (Ping timeout: 256 seconds)
[10:47:42] *** Joins: dna1 (~dna@64.129.167.147)
[10:51:53] *** Quits: dna1 (~dna@64.129.167.147) (Ping timeout: 250 seconds)
[10:56:10] *** Joins: qbt (~qbt@user/edun)
[10:59:48] *** Joins: VarunAgw (~VarunAgw@103.158.148.26)
[11:02:36] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 276 seconds)
[11:04:21] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[11:14:43] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[11:19:16] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 268 seconds)
[11:21:22] *** Joins: PJBoy (~PJBoy@user/pjboy)
[11:21:24] *** Joins: dna1 (~dna@64.129.167.147)
[11:25:52] *** Quits: dna1 (~dna@64.129.167.147) (Ping timeout: 265 seconds)
[11:30:40] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:40:05] *** Joins: Haohmaru (~Haohmaru@195.24.53.110)
[11:41:49] *** Quits: chomwitt (~chomwitt@2a02:587:dc12:3f00:12c3:7bff:fe6d:d374) (Remote host closed the connection)
[11:42:08] *** Joins: chomwitt (~chomwitt@2a02:587:dc12:3f00:12c3:7bff:fe6d:d374)
[11:43:44] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[11:44:37] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[11:46:16] *** Quits: yeirr (~yeirr@user/yeirr) (Quit: yeirr)
[11:47:36] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[11:49:22] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[11:52:19] *** Joins: yeirr (~yeirr@user/yeirr)
[11:52:51] *** Joins: JimL (~quassel@89-162-2-132.fiber.signal.no)
[11:54:52] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 265 seconds)
[12:04:14] *** Quits: CryptoClub (~fafs@87.125.251.76) (Read error: Connection reset by peer)
[12:07:36] *** Joins: CryptoClub (~fafs@87.125.251.76)
[12:07:36] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 276 seconds)
[12:11:31] *** Joins: dna1 (~dna@64.129.167.147)
[12:13:51] *** Joins: Guyver2 (Guyver@guyver2.xs4all.nl)
[12:15:46] *** Quits: dna1 (~dna@64.129.167.147) (Ping timeout: 256 seconds)
[12:23:52] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[12:27:18] *** GlobalBanksta is now known as kish`
[12:30:09] *** Joins: Brnocrist (~spartak@user/brnocrist)
[12:30:59] *** Joins: linear_cannon (~linear_ca@50.35.78.163)
[12:31:21] *** Joins: fanis30 (~fanis30@adsl-19.37.6.161.tellas.gr)
[12:33:55] *** Quits: Hash (~stoned@wants.to.know.howstoned.ru) (Quit: https://hashsecurity.org)
[12:34:57] *** Joins: Hash (~stoned@wants.to.know.howstoned.ru)
[12:40:06] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 276 seconds)
[12:40:27] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[12:45:57] *** Joins: mononote (~mononote@user/mononote)
[12:52:47] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Ping timeout: 250 seconds)
[12:55:09] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[13:01:30] *** Quits: jtgd (~jtgd@user/jtgd) (Ping timeout: 260 seconds)
[13:01:37] *** Joins: dna1 (~dna@64.129.167.147)
[13:02:59] *** Quits: yeirr (~yeirr@user/yeirr) (Quit: yeirr)
[13:10:22] *** Quits: dna1 (~dna@64.129.167.147) (Ping timeout: 260 seconds)
[13:13:57] *** Joins: jtgd (~jtgd@user/jtgd)
[13:16:13] *** Quits: fanis30 (~fanis30@adsl-19.37.6.161.tellas.gr) (Quit: WeeChat 3.3)
[13:28:56] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[13:28:56] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[13:38:43] *** Quits: zro (~zro@user/zro) (Ping timeout: 250 seconds)
[13:39:39] *** Joins: dna1 (~dna@64.129.167.147)
[13:43:55] *** Quits: dna1 (~dna@64.129.167.147) (Ping timeout: 250 seconds)
[14:13:36] *** Joins: dna1 (~dna@64.129.167.147)
[14:14:46] *** Joins: edk (edk@libera/staff/edk)
[14:17:56] *** Quits: dna1 (~dna@64.129.167.147) (Ping timeout: 265 seconds)
[14:18:06] *** Quits: mononote (~mononote@user/mononote) (Remote host closed the connection)
[14:21:13] *** Joins: zro (~zro@user/zro)
[14:31:58] *** Joins: n00b101 (uid448161@lymington.irccloud.com)
[14:38:48] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[14:46:44] *** Joins: yeirr (~yeirr@user/yeirr)
[14:51:47] *** Joins: dna1 (~dna@64.129.167.147)
[14:56:20] *** Quits: bw (sid2730@user/betawaffle) (Ping timeout: 268 seconds)
[14:57:47] *** Joins: bw (sid2730@user/betawaffle)
[14:57:59] *** Quits: griffinmb (sid410590@helmsley.irccloud.com) (Ping timeout: 264 seconds)
[15:01:09] *** Joins: griffinmb (sid410590@helmsley.irccloud.com)
[15:03:13] *** Quits: dna1 (~dna@64.129.167.147) (Ping timeout: 250 seconds)
[15:04:55] <riv> https://cloud.ibm.com/quantum/services/systems/ibm_washington error rates are here
[15:08:03] *** Quits: hlieberman__ (sid17492@tinside.irccloud.com) (Ping timeout: 268 seconds)
[15:11:38] *** Joins: hlieberman__ (sid17492@tinside.irccloud.com)
[15:30:40] *** Quits: madage (~madage@user/madage) (Remote host closed the connection)
[15:30:52] *** Joins: madage (~madage@user/madage)
[15:40:16] *** Quits: BOKALDO (~BOKALDO@user/bokaldo) (Quit: Leaving)
[15:47:57] *** Quits: rustycl0ck (~ircuser@gateway/tor-sasl/rustycl0ck) (Ping timeout: 276 seconds)
[15:49:52] *** Joins: Ivii (~Ivyy@2001:a61:13ad:1c01:a7c8:db20:a5d0:f061)
[15:50:25] <Ivii> Hi, What is exactly hashed in the certificate's SHA fingerprint?
[15:50:32] <Ivii> e.g. https://i.imgur.com/6lHMbJB.png
[15:52:37] *** Joins: Choco (~Choco@host150.200-71-232.telecom.net.ar)
[16:00:32] *** Quits: AsenMx (~AsenMx@user/asenmx) (Remote host closed the connection)
[16:00:56] *** Joins: AsenMx (~AsenMx@user/asenmx)
[16:06:58] *** Quits: AsenMx (~AsenMx@user/asenmx) (Remote host closed the connection)
[16:07:30] *** Joins: AsenMx (~AsenMx@user/asenmx)
[16:10:11] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[16:13:03] *** Joins: X-Scale` (~ARM@165.201.137.78.rev.vodafone.pt)
[16:13:12] *** Quits: X-Scale (~ARM@46.50.0.92) (Ping timeout: 256 seconds)
[16:14:46] <yawkat> hash of the DER
[16:16:53] *** Quits: ua_ (~ua@public-gprs210913.centertel.pl) (Ping timeout: 250 seconds)
[16:17:05] *** Joins: machinedgod (~machinedg@24.105.81.50)
[16:18:11] *** Quits: X-Scale` (~ARM@165.201.137.78.rev.vodafone.pt) (Ping timeout: 250 seconds)
[16:18:24] *** Joins: X-Scale (~ARM@83.223.235.65)
[16:19:07] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[16:24:58] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Ping timeout: 260 seconds)
[16:26:23] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[16:30:51] *** Joins: ua_ (~ua@public-gprs210913.centertel.pl)
[16:34:10] *** Joins: BOKALDO (~BOKALDO@user/bokaldo)
[16:35:33] *** Joins: frost (~frost@user/frost)
[16:39:42] *** Quits: high_ground (~yes@user/high-ground/x-5722129) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[16:51:33] *** Quits: Guyver2 (Guyver@guyver2.xs4all.nl) (Remote host closed the connection)
[17:04:39] *** Joins: high_ground (~yes@user/high-ground/x-5722129)
[17:05:43] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:804c:4db1:6f75:4745)
[17:05:55] *** Joins: yewscion (~yewscion@72-21-196-65.amazon.com)
[17:15:15] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[17:27:16] *** Quits: stiell (~stiell@gateway/tor-sasl/stiell) (Remote host closed the connection)
[17:27:37] *** Joins: stiell (~stiell@gateway/tor-sasl/stiell)
[17:28:56] *** Joins: cwebber (~user@user/cwebber)
[17:30:33] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[17:30:54] *** Joins: rtypo (~alex@user/rtypo)
[17:32:38] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[17:33:03] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[17:39:05] <Tykling> hello, how do I get a hash like this with openssl given a pem cert? https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.x509certificates.x509certificate.getcerthashstring?view=net-5.0
[17:40:47] <Tykling> what is it a hash of
[17:42:14] *** Quits: chomwitt (~chomwitt@2a02:587:dc12:3f00:12c3:7bff:fe6d:d374) (Remote host closed the connection)
[17:42:49] *** Joins: chomwitt (~chomwitt@2a02:587:dc12:3f00:12c3:7bff:fe6d:d374)
[17:43:53] *** Joins: CryptoDavid (uid14990@uxbridge.irccloud.com)
[17:54:56] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:804c:4db1:6f75:4745) (Quit: WeeChat 3.3)
[17:58:56] <maroon> Tykling, im assuming that this function is what openssl call a fingerprint, which is the hash of the binary that's hiding beneath the .pem's base64
[18:00:11] <maroon> in which case, it would be the command here talking about the fingerprint: https://libera.chat/guides/certfp
[18:00:15] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:38b1:6c00:ef77:bdd5)
[18:02:07] <Tykling> maroon: that is what I assumed, but it isn't. I have the fingerprint and this "certhashstring" for a certificate and they are different
[18:03:03] <maroon> can you pastebin a sample .pem and tell which string you're expecting?
[18:03:42] *** Quits: X-Scale (~ARM@83.223.235.65) (Ping timeout: 256 seconds)
[18:07:23] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:38b1:6c00:ef77:bdd5) (Ping timeout: 250 seconds)
[18:13:27] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Quit: leaving)
[18:17:27] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[18:18:26] *** Joins: X-Scale (~ARM@83.223.235.65)
[18:19:49] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[18:21:01] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[18:22:58] *** Quits: CryptoClub (~fafs@87.125.251.76) (Read error: Connection reset by peer)
[18:23:19] *** kish` is now known as GlobalBanksta
[18:23:41] <maroon> there's also a hash that's only of the public-key variables, so it won't change if the name attached to the certificate changes
[18:26:26] *** Joins: CryptoClub (~fafs@87.125.251.76)
[18:28:15] *** Joins: mononote (~mononote@user/mononote)
[18:34:27] *** Joins: igemnace (~ian@user/igemnace)
[18:44:06] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Remote host closed the connection)
[18:49:01] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Remote host closed the connection)
[18:50:08] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[18:50:20] *** Joins: dna1 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net)
[18:54:53] *** Quits: dna1 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 265 seconds)
[18:59:35] *** Joins: Guyver2 (~Guyver@guyver2.xs4all.nl)
[18:59:59] *** Quits: AsenMx (~AsenMx@user/asenmx) (Read error: Connection reset by peer)
[19:00:39] *** Joins: AsenMx (~AsenMx@user/asenmx)
[19:04:49] *** Quits: mononote (~mononote@user/mononote) (Remote host closed the connection)
[19:09:59] *** Joins: mononote (~mononote@user/mononote)
[19:11:22] *** Quits: n00b101 (uid448161@lymington.irccloud.com) (Quit: Connection closed for inactivity)
[19:13:28] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[19:23:08] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Remote host closed the connection)
[19:24:22] *** Quits: HumanG33k (~HumanG33k@2a01:e0a:95:5d90:215:c5ff:fe68:fb04) (Ping timeout: 265 seconds)
[19:25:59] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[19:30:19] *** Joins: PJBoy (~PJBoy@user/pjboy)
[19:30:36] *** Quits: yewscion (~yewscion@72-21-196-65.amazon.com) (Quit: Connection closed)
[19:32:49] *** Joins: HumanG33k (~HumanG33k@2a01:e0a:95:5d90:215:c5ff:fe68:fb04)
[19:37:15] *** Joins: Gallomimia (~Gallomimi@node-1w7jra2a2gqpwokdqv1mq0eko.ipv6.telus.net)
[19:38:21] *** Joins: dna1 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net)
[19:40:08] *** Joins: n00b101 (uid448161@lymington.irccloud.com)
[19:40:19] *** Quits: jdvr (~jdvr@user/jdvr) (Ping timeout: 265 seconds)
[19:51:22] *** Quits: VarunAgw (~VarunAgw@103.158.148.26) (Ping timeout: 256 seconds)
[19:54:12] *** Quits: dna1 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 256 seconds)
[19:55:34] *** Joins: yewscion (~yewscion@72-21-196-65.amazon.com)
[19:57:35] <chiselfuse> There's a bit in the compression part of sha256 that I don't understand, in terms of what the operation is, can someone help me?
[19:57:47] *** Joins: dna1 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net)
[20:00:05] <Wulf> chiselfuse: details?
[20:00:34] *** n00b101 is now known as zealoth
[20:00:55] <chiselfuse> Wulf:  Add the compressed chunk to the current hash value:
[20:00:56] <chiselfuse>     h0 := h0 + a
[20:01:03] <chiselfuse> What's h0 initially?
[20:02:14] <chiselfuse> Wulf: Ctrl-F that text here: https://en.wikipedia.org/wiki/SHA-2    you'll find that bit in the pseudocode
[20:07:25] *** Quits: dna1 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 250 seconds)
[20:07:34] *** Quits: zealoth (uid448161@lymington.irccloud.com) (Quit: Updating details, brb)
[20:07:49] *** Joins: powftw (uid448161@lymington.irccloud.com)
[20:08:05] *** Joins: dna1 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net)
[20:08:40] <sonOfRa> h0 := 0x6a09e667 right at the top
[20:09:32] *** Quits: CryptoDavid (uid14990@uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[20:10:45] <chiselfuse> sonOfRa: Sorry, I meant at the beginning of each following iteration of the loop
[20:12:44] <chiselfuse> Does it stay as the calculated value of the previous chunk for the successive chunk?
[20:16:06] <chiselfuse> That is, for the second chunk, when they initialize at "Initialize working variables to current hash value: a := h0 ...", is h0 := 0x6a09e667 or is it the value resulted from the previous chunk?
[20:16:31] <maroon> it's initialized as a magic 'nothing up my sleeves' constant, and after each chunk you add the 'a' to it
[20:18:05] <maroon> and for each chunk, the a,b,c... borrow their initialize from the updated h0..h7
[20:18:33] <chiselfuse> Yes, that's what I wanted to know
[20:18:36] <chiselfuse> Thank you
[20:19:25] <maroon> there's one of the nist documents that has a detailed test vector of what the variables should be after each round, if you're needing that to help you
[20:20:08] *** Quits: powftw (uid448161@lymington.irccloud.com) (Quit: Updating details, brb)
[20:20:18] *** Joins: powftw (uid448161@lymington.irccloud.com)
[20:20:32] <chiselfuse> Could you send it to me? If you remember where it is
[20:28:04] <maroon> https://csrc.nist.gov/Projects/Cryptographic-Standards-and-Guidelines/example-values
[20:28:54] <maroon> click on 'secure hashing', and the fips 180-2 list on top has sha256
[20:29:00] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-8cf4-80f3-5624-4cb5.res6.spectrum.com)
[20:29:20] <maroon> ie https://csrc.nist.gov/CSRC/media/Projects/Cryptographic-Standards-and-Guidelines/documents/examples/SHA256.pdf
[20:34:52] *** Quits: yeirr (~yeirr@user/yeirr) (Remote host closed the connection)
[20:39:41] <chiselfuse> Oooohhh
[20:39:47] <chiselfuse> Nice
[20:39:51] <chiselfuse> maroon: Thanks again
[20:40:05] <maroon> :)
[20:40:11] <chiselfuse> Dudee
[20:40:13] <chiselfuse> Perfect
[20:40:19] <chiselfuse> Exactly what I was looking for
[20:42:54] <maroon> the part that's not so obvious from the wikipedia code is that everything is bigendian, so for PC code, you need to byteswap external data before doing math on it, then flip it back to store it in the ciphertext
[20:45:34] *** Quits: dna1 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 265 seconds)
[20:57:10] *** Quits: zro (~zro@user/zro) (Ping timeout: 265 seconds)
[20:58:39] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) ()
[21:05:47] *** Quits: cwebber (~user@user/cwebber) (Ping timeout: 264 seconds)
[21:06:47] *** Joins: zro (~zro@user/zro)
[21:11:47] *** Quits: zro (~zro@user/zro) (Ping timeout: 264 seconds)
[21:20:11] *** Joins: anonymeowo (~anonymeow@107.189.14.18)
[21:54:42] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:54:51] *** Joins: aleck1 (~aleck@user/aleck)
[21:57:29] *** Quits: aleck (~aleck@user/aleck) (Ping timeout: 250 seconds)
[21:58:52] *** Joins: mouseghost (~draco@user/mouseghost)
[22:05:05] *** Quits: Colti (Miramar-FL@user/host-pond) (Excess Flood)
[22:06:47] *** Joins: Colti (Miramar-FL@user/host-pond)
[22:15:45] *** Quits: somlis (~somlis@user/somlis) (Quit: WeeChat 3.3)
[22:17:53] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 265 seconds)
[22:18:28] *** Joins: somlis (~somlis@user/somlis)
[22:23:49] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Remote host closed the connection)
[22:24:51] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[22:33:19] *** Joins: Guyver2_ (~Guyver@guyver2.xs4all.nl)
[22:36:03] *** Quits: Guyver2 (~Guyver@guyver2.xs4all.nl) (Ping timeout: 250 seconds)
[22:36:07] *** Guyver2_ is now known as Guyver2
[22:36:08] *** Quits: CryptoClub (~fafs@87.125.251.76) (Read error: Connection reset by peer)
[22:36:53] *** Quits: BOKALDO (~BOKALDO@user/bokaldo) (Quit: Leaving)
[22:38:34] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:39:30] *** Joins: CryptoClub (~fafs@87.125.251.76)
[22:39:55] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:40:18] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[22:41:38] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:42:23] *** Joins: sav_ (~sav@177.12.48.155)
[22:47:54] *** Joins: thomas_25 (thomas_25@pls.just.stfu-kthx.bnc4you.xyz)
[22:54:58] *** Quits: anonymeowo (~anonymeow@107.189.14.18) (Ping timeout: 256 seconds)
[22:56:40] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 256 seconds)
[22:59:42] *** Quits: powftw (uid448161@lymington.irccloud.com) (Quit: Connection closed for inactivity)
[23:00:11] *** Joins: Guest39 (~Guest39@217.153.187.164)
[23:02:13] *** Quits: Choco (~Choco@host150.200-71-232.telecom.net.ar) (Quit: Client closed)
[23:03:31] <Guest39> what's the easy way to encrypt a message with someone public key in cli?
[23:04:21] <Wulf> Guest39: gpg --encrypt?
[23:04:48] <Guest39> emmm
[23:05:07] <Guest39> there was another option using echo
[23:05:13] <Guest39> so message stays in ram
[23:05:28] <Wulf> echo message | gpg --encrypt?
[23:05:58] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 268 seconds)
[23:06:12] <danieldg> just compose the message in a tmpfs (try /run/user/1000/)
[23:06:12] <Guest39> echo "sekret123" | gpg --encrypt -r 52654E6EB0BB564B --armor ?
[23:06:36] <danieldg> note having the message on the command line is *more* likely to end up on disk due to shell history
[23:06:55] <Guest39> ok
[23:06:55] <danieldg> versus composing on a "file" on a ramdisk
[23:06:57] <Wulf> kill -9 $$
[23:07:10] <Guest39> too many tutorials  :)
[23:07:28] <danieldg> Wulf: doesn't help if your shell writes history as it runs, which is very useful if you open more than one terminal
[23:08:07] <Wulf> danieldg: then add an apparmor profile which keeps the shell from writing its history
[23:08:19] <Guest39> is shell history deleted on reboot?
[23:08:24] <danieldg> no
[23:08:33] <Wulf> Guest39: if it's on a ram disk, yeah
[23:08:33] <danieldg> you can disable shell history if you like
[23:08:39] <danieldg> but I *like* having shell history
[23:08:48] <danieldg> I also don't put secrets in it
[23:08:57] <MacGyver> unset HISTFILE, or just put a space in front of the invocation.
[23:09:05] <Guest39> well I just tried to rewind shell history and that particular command that suppose to stay in ram only is not in a history
[23:09:13] <Guest39> gotta find it again :)
[23:10:04] <danieldg> I also like my encrypted messages to be more than one line long
[23:11:08] <danieldg> sure, you can use echo to write multiple paragraphs, but really why make it painful for yourself
[23:17:54] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[23:20:55] *** Joins: e2 (e2@sponsored.by.bnc4you.xyz)
[23:23:30] <Guest39> danieldg well i did not save that echo command :)
[23:23:33] <Guest39> can you re share it
[23:31:35] <Guest39> ?
[23:31:41] <Guest39> insane day today
[23:33:36] <Guest39> danieldg you went home? Xd
[23:34:39] *** Joins: Choco (~Choco@host150.200-71-232.telecom.net.ar)
[23:35:04] <Guest39> echo "secret message for Peter" | gpg --encrypt --armor --recipient "Peter Loshin" --no-version
[23:35:13] <Guest39> people here are so full of themselves Xd
[23:37:35] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 250 seconds)
[23:38:52] *** Joins: gareppa (~gareppa@user/gareppa)
[23:39:28] *** Parts: Guest39 (~Guest39@217.153.187.164) ()
[23:47:44] *** Joins: rtypo (~alex@user/rtypo)
[23:51:00] *** Quits: gareppa (~gareppa@user/gareppa) (Quit: Leaving)
[23:54:53] *** Joins: a1eaiactaest (~a1eaiacta@user/a1eaiactaest)
[23:55:18] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 268 seconds)
[23:57:58] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
