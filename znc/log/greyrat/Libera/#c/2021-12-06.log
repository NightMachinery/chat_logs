[00:00:05] <sham1> Is it pedantry so pedantic that it's useless?
[00:00:21] *** Quits: CormacAttack (~mac@144.62.50.200) (Quit: WeeChat 3.3)
[00:00:37] *** Quits: Zenton (~user@user/zenton) (Ping timeout: 252 seconds)
[00:01:41] *** Joins: rgrinberg (~textual@187.223.250.159)
[00:02:01] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[00:03:04] *** Quits: domve (~dom@user/domve) (Quit: ZNC - https://znc.in)
[00:03:19] *** Joins: domve (~dom@107.189.3.177)
[00:03:19] *** Quits: domve (~dom@107.189.3.177) (Changing host)
[00:03:19] *** Joins: domve (~dom@user/domve)
[00:05:06] <pragma-> 90% of the questions are fine and have alternative "general" correct answers. But some questions expect the "standardese" answer and don't have any alternative answers yet.
[00:05:46] <pragma-> Join #c-jeopardy and see for yourself! It's free!
[00:06:36] <floatcomplex> * costs not measured in legal tender
[00:07:38] <tessio> im not a wierdo at all ...
[00:15:47] *** Quits: tolog (~tolog@89.36.78.180) (Remote host closed the connection)
[00:15:55] *** Joins: Klinda (~superleag@user/klinda)
[00:20:30] *** Quits: dohtem (uid524096@user/dohtem) (Quit: Connection closed for inactivity)
[00:23:57] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[00:24:27] *** Quits: alch (~alch@pd-18-105-94.service.infuturo.it) (Ping timeout: 252 seconds)
[00:26:15] *** Joins: alch (~alch@151.34.127.143)
[00:26:20] *** Joins: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-154.dsl.bell.ca)
[00:27:01] *** Quits: donald1 (~donald@2a01:e0a:95e:7ca0:4d4d:b2e6:7414:759f) (Ping timeout: 252 seconds)
[00:27:04] *** Quits: rgrinberg (~textual@187.223.250.159) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:28:08] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[00:29:53] *** Quits: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[00:30:09] *** Quits: cm007magnum (~Rheanna@61.171.21.169) (Remote host closed the connection)
[00:31:48] *** Joins: cm007magnum (~Rheanna@101.89.150.168)
[00:35:40] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[00:35:58] *** Joins: stonkey (~stonkey@user/stonkey)
[00:36:32] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:37:34] *** Quits: Libero (~Libero@130.43.23.56.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[00:39:09] *** Quits: Akuli (~Akuli@82-203-163-146.bb.dnainternet.fi) (Ping timeout: 256 seconds)
[00:39:29] *** Quits: oriba (~oriba@dynamic-078-054-209-177.78.54.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:40:04] *** Joins: donald1 (~donald@2a01:e0a:95e:7ca0:4d4d:b2e6:7414:759f)
[00:40:20] *** Quits: bogdomania (bogdomania@user/bogdomania) (Quit: Konversation terminated!)
[00:43:31] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[00:44:34] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Read error: Connection reset by peer)
[00:45:24] *** Quits: masticass (~gzc@host-85-201-222-202.dynamic.voo.be) (Quit: WeeChat 3.3)
[00:45:43] *** Quits: mahmutov (~mahmutov@37.155.19.7) (Ping timeout: 252 seconds)
[00:45:52] *** Quits: tessio (~weechat@141.226.73.109) (Quit: WeeChat 3.2)
[00:46:32] *** Joins: Libero (~Libero@130.43.23.56.dsl.dyn.forthnet.gr)
[00:50:51] *** Joins: tradar (~tradar@user/tradar)
[00:53:52] *** Joins: luizfrds (~Luiz@152.250.243.147)
[00:54:03] <donald1> I can not use frama-c on a large program: the headers are not found: https://paste.debian.net/1222165/
[00:55:35] *** Joins: Zenton (~user@user/zenton)
[00:56:48] *** Joins: YellowSuB (~YellowSuB@user/yellowsub)
[00:56:48] *** Joins: jjido (~Denis@90.213.58.125)
[00:58:19] *** Quits: magla (~gelignite@55d41880.access.ecotel.net) (Quit: Stay safe!)
[00:59:52] *** Joins: rgrinberg (~textual@2806:101e:7:7c2f:99ad:1649:a2c7:9e20)
[01:00:27] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[01:00:27] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[01:00:27] *** Joins: wroathe (~wroathe@user/wroathe)
[01:03:19] *** Quits: Libero (~Libero@130.43.23.56.dsl.dyn.forthnet.gr) (Ping timeout: 252 seconds)
[01:04:04] *** Joins: Libero (~Libero@130.43.23.56.dsl.dyn.forthnet.gr)
[01:04:31] *** Quits: quartz (~quartz@user/quartz) (Ping timeout: 245 seconds)
[01:04:56] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 245 seconds)
[01:05:46] *** Quits: Oxfuxxx (~sharky@195.200.221.95) (Quit: Never underestimate the power of the butt..[]X/O...ON. (Playst...i mean.. Pir@tA$$))
[01:08:57] *** Joins: PatchByte (~PatchByte@p200300d8ef064b003664a9fffed44247.dip0.t-ipconnect.de)
[01:09:12] <PatchByte> Hello
[01:09:16] <PatchByte> how are you guys?
[01:10:31] *** Quits: PatchByte (~PatchByte@p200300d8ef064b003664a9fffed44247.dip0.t-ipconnect.de) (Client Quit)
[01:11:04] *** Joins: humky (~humky@user/humky)
[01:13:14] *** Quits: tradar (~tradar@user/tradar) (Quit: tradar)
[01:14:05] <ioxzev1z> o/
[01:14:42] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:15:57] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[01:17:59] *** Quits: rgrinberg (~textual@2806:101e:7:7c2f:99ad:1649:a2c7:9e20) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:20:56] *** Quits: cm007magnum (~Rheanna@101.89.150.168) (Remote host closed the connection)
[01:21:30] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[01:22:29] *** Joins: cm007magnum (~Rheanna@61.171.21.169)
[01:23:23] *** Joins: bruda (~bruda@172.58.140.33)
[01:23:57] *** Joins: clamiax (~clamiax@net-93-144-125-193.cust.vodafonedsl.it)
[01:24:00] <twkm> donald1: tell it (actually gcc it seems) where to find the headers.
[01:24:06] *** Quits: donald1 (~donald@2a01:e0a:95e:7ca0:4d4d:b2e6:7414:759f) (Ping timeout: 245 seconds)
[01:25:22] *** Quits: phao (~phao@2804:d45:8e7a:de00:6c10:bcc6:9093:52ad) (Quit: Leaving)
[01:25:38] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[01:26:15] *** Quits: justSleigh (~justache@user/justache) (Quit: The Lounge - https://thelounge.chat)
[01:27:04] *** Joins: Akuli (~Akuli@82-203-163-146.bb.dnainternet.fi)
[01:27:18] *** Joins: masterbuilder (~user@user/masterbuilder)
[01:27:40] *** Joins: justSleigh (~justache@user/justache)
[01:34:25] *** Joins: jjido (~Denis@90.213.58.125)
[01:36:25] *** Joins: ynnos (~sonny@8.6.144.252)
[01:37:44] *** Joins: ynnos_ (~sonny@2a09:bac0:14::806:90fc)
[01:39:17] *** Quits: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-154.dsl.bell.ca) (Ping timeout: 256 seconds)
[01:41:06] *** Quits: ynnos (~sonny@8.6.144.252) (Ping timeout: 268 seconds)
[01:43:35] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[01:44:49] *** Quits: ynnos_ (~sonny@2a09:bac0:14::806:90fc) (Quit: Going offline, see ya! (www.adiirc.com))
[01:45:06] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[01:48:47] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 252 seconds)
[01:50:15] *** Joins: quartz (~quartz@user/quartz)
[01:55:08] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:55:44] *** Joins: donald1 (~donald@2a01:e0a:95e:7ca0:4d4d:b2e6:7414:759f)
[01:56:07] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: see you tomorrow)
[01:56:59] *** Joins: rgrinberg (~textual@2806:101e:7:7c2f:99ad:1649:a2c7:9e20)
[01:59:59] *** Quits: Albright (~Albright@2001:19f0:8001:ca4:4970:ef4b:1e0f:c4a8) (Quit: ZNC 1.8.2 - https://znc.in)
[02:00:12] *** Joins: Albright (~Albright@149.28.13.173)
[02:03:51] *** Quits: ss4 (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[02:05:35] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[02:08:35] *** Quits: Burgundy (~yomon@79.115.213.171) (Ping timeout: 252 seconds)
[02:10:14] *** Quits: cm007magnum (~Rheanna@61.171.21.169) (Remote host closed the connection)
[02:10:23] *** Joins: ugubok (~ugubok@user/ugubok)
[02:12:57] <nuxil> do any std headers have defined "scientific constants" such as Є0, µ0 etc?.
[02:13:00] *** Joins: cm007magnum (~Rheanna@218.78.79.129)
[02:13:43] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[02:14:50] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:18:48] *** Quits: fmsd__ (~no@160.177.199.94) (Remote host closed the connection)
[02:18:59] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:19:13] *** Joins: fmsd__ (~no@160.177.199.94)
[02:19:18] <kurahaupo> nuxil: That sounds like a domain-specific problem, not something that a programming language should specify in its core
[02:20:47] <nuxil> kurahaupo, well. i was just curiouse. since other constants are defined. ie M_PI in math.h 
[02:21:56] <fizzie> M_PI is nonstandard too, FWIW.
[02:21:58] <pragma-> ,c11 M_PI
[02:21:59] <candide> No such text 'M_PI' found in C11 Draft Standard (n1570).
[02:22:21] <kurahaupo> e and π are not "physical" constants and they appear in many branches of knowledge, whereas µ₀ is only useful for physical modelling
[02:22:47] *** Quits: pulse (~pulse@user/pulse) (Quit: Join a community of oompa loompas at https://indiedevs.net/)
[02:22:53] <nuxil> i see your point
[02:24:12] *** Joins: arinov (~arinov@213.194.126.155)
[02:27:41] <kurahaupo> nuxil: also it's only in the last few years that most of the physical constants have been fixed. Before that they were subject to measurement errors.
[02:28:23] *** Quits: fmsd__ (~no@160.177.199.94) (Ping timeout: 252 seconds)
[02:28:28] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[02:28:38] *** Quits: Libero (~Libero@130.43.23.56.dsl.dyn.forthnet.gr) (Quit: Leaving)
[02:28:46] *** Joins: Torr (~Torr@user/torr)
[02:30:05] <kurahaupo> Even now, G is only known to a precision of ±0.01% so you REALLY wouldn't want that to be hard coded in a language standard
[02:30:44] <donald1> PatchByte:  fine but I can not use frama-c :(
[02:32:21] *** Quits: cm007magnum (~Rheanna@218.78.79.129) (K-Lined)
[02:32:29] *** Quits: pizdets (~pizdets@183.182.111.240) (Ping timeout: 256 seconds)
[02:33:48] *** Joins: pizdets (~pizdets@183.182.115.237)
[02:37:38] *** Quits: hgkjhgkjgkj (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[02:38:01] *** Joins: hgkjhgkjgkj (~hjgkjhgkj@46.235.96.249)
[02:39:02] *** Quits: carlavilla (~carlavill@2a0c:5a84:3607:2f00:221:6bff:fe3b:cee4) (Remote host closed the connection)
[02:42:47] *** Quits: Maaaanu (~manuel@ip5b429007.dynamic.kabel-deutschland.de) (Quit: leaving)
[02:43:23] *** Joins: kuoi (~kuoi@109.175.166.60)
[02:46:32] *** Joins: Chip1972 (~Chip1972@186.206.217.247)
[02:47:53] *** Quits: nuxil (~nuxil@141.195.51.213) (Read error: Connection reset by peer)
[02:48:25] <nomagno> Is it illegal standard C99 to check for a value not in an enum in a switch statement of that enum type, or does the compiler warn me just to be nice?
[02:48:31] *** Joins: nuxil (~nuxil@141.195.51.213)
[02:49:56] *** Quits: donald1 (~donald@2a01:e0a:95e:7ca0:4d4d:b2e6:7414:759f) (Ping timeout: 245 seconds)
[02:50:17] <nomagno> example: `enum myenum {a = 0, b = 1}; enum myenum myvar = 2; switch(myvar){case a: break; case b: break; case 2: printf("BINGO!\n"); break; };`
[02:50:34] <nomagno> GCC warns me about this, but I'm not sure there's any issue with it otherwise
[02:50:45] <fizzie> It's not illegal. The warning's just a courtesy.
[02:51:06] *** Joins: CormacAttack (~mac@144.62.50.200)
[02:51:08] *** Quits: Chip1972 (~Chip1972@186.206.217.247) (Client Quit)
[02:51:15] <nomagno> Thanks
[02:52:24] <fizzie> ,cc enum e { foo, bar }; enum e x = 2; switch (x) case 2: puts("just checking those warnings out of curiosity");
[02:52:27] <candide> fizzie: [warning: enumeration value 'foo' not handled in switch [-Wswitch]  warning: enumeration value 'bar' not handled in switch [-Wswitch]  warning: case value '2' not in enumerated type 'enum e' [-Wswitch]] just checking those warnings out of curiosity
[02:52:52] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[02:53:27] *** Quits: random-nick (~random-ni@87.116.165.83) (Ping timeout: 256 seconds)
[02:53:54] <pragma-> ,clang enum e { foo, bar }; enum e x = 2; switch (x) case 2: puts("same. but clang.");
[02:53:56] <candide> pragma-: [warning: case value not in enumerated type 'enum e' [-Wswitch]  warning: enumeration values 'foo' and 'bar' not handled in switch [-Wswitch]] same. but clang.
[02:54:03] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 252 seconds)
[02:55:10] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[02:56:20] <fizzie> Ooh, grouped the missing values together, fancy.
[02:57:33] <pragma-> ,clang enum e { foo, bar, baz }; enum e x = 2; switch (x) case 2: puts("hmm");
[02:57:36] <candide> pragma-: [warning: enumeration values 'foo' and 'bar' not handled in switch [-Wswitch]] hmm
[02:57:50] <pragma-> ,clang enum e { foo=42, bar, baz }; enum e x = 2; switch (x) case 2: puts("hmm");
[02:57:52] <candide> pragma-: [warning: case value not in enumerated type 'enum e' [-Wswitch]  warning: enumeration values 'foo', 'bar', and 'baz' not handled in switch [-Wswitch]] hmm
[02:58:23] <pragma-> smh. 2 and baz not typecheked.
[02:59:03] <pragma-> "enums are ints" pah.
[02:59:10] *** Joins: donald1 (~donald@2a01:e0a:95e:7ca0:4d4d:b2e6:7414:759f)
[02:59:56] *** Joins: Chip1972 (~Chip1972@186.206.217.247)
[03:00:22] *** Quits: Akuli (~Akuli@82-203-163-146.bb.dnainternet.fi) (Quit: Akuli)
[03:01:04] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:01:11] *** Quits: stonkey (~stonkey@user/stonkey) (Remote host closed the connection)
[03:01:24] <nomagno> Is there any approach to write a C compiler that detects this stuff (or any compiler really) other than a ridiculous amount of edge case checking over tens of thousands of lines?
[03:02:21] <pragma-> the compiler could merely differentiate between the identifier baz and the literal 2 or another identifier and warn about that
[03:03:04] <nomagno> I'm talking about a proper compliant C compiler with these GCC/Clang style -Wall warnings
[03:03:26] <nomagno> It seems to me like there's no way to do it other than A LOT if boilerplate when parsing the code
[03:03:35] *** Quits: donald1 (~donald@2a01:e0a:95e:7ca0:4d4d:b2e6:7414:759f) (Ping timeout: 252 seconds)
[03:04:03] *** Joins: cm007magnum (~Rheanna@101.89.150.168)
[03:05:16] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[03:05:16] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[03:05:16] *** Joins: wroathe (~wroathe@user/wroathe)
[03:05:25] *** Quits: bruda (~bruda@172.58.140.33) (Ping timeout: 252 seconds)
[03:05:49] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[03:06:59] *** Joins: vimart (~vimart@109.249.179.169)
[03:07:26] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 245 seconds)
[03:08:02] *** lukedashjr is now known as luke-jr
[03:10:45] *** Joins: chenqisu12 (~chenqisu1@183.217.201.63)
[03:12:38] <kurahaupo> nomagno: variables "of enum type" are simply int or whatever wider type is necessary to hold all the labelled values. Compilers are free to issue any additional diagnostics they want, the standard only requires them to issue diagnostics for bad code, not to keep quiet for good code
[03:13:11] <nomagno> I'm not talking about that tough
[03:15:27] <kurahaupo> nomagno: That's in answer to « Is it illegal standard C99 to check for a value not in an enum in a switch statement of that enum type » → no of course it's not illegal. It's an int so any int value is allowed.
[03:15:55] <nomagno> Ah
[03:16:30] <kurahaupo> So yes you were talking about that
[03:16:31] *** Quits: cm007magnum (~Rheanna@101.89.150.168) (K-Lined)
[03:18:06] *** Joins: drevil (~drevil___@2607:fa49:553f:2200:8869:f8ac:32a6:1456)
[03:19:07] <drevil> is there a way to get the amount of bytes that have gone through a socket pipe? To be more specific, I'm connecting two processes with socketpair and dup, and I need to get the amount of data piped through them
[03:20:29] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:21:18] <twkm> depends on the system, generally if you want to track the amount you have to do it yourself.
[03:22:33] <drevil> Yeah I'm basically stuck on that part... Is there like a posix way to do that? Like, I can create a fork that pipes the data using read/write, but I feel like there must be a better way
[03:24:29] <kurahaupo> drevil: No sockets (and pipes) don't keep byte counters. Network devices keep byte counts, nftables keeps byte counts. 
[03:25:34] <kurahaupo> A temporary file has a size that you can check
[03:26:15] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[03:26:17] <nomagno> It's not very hard to keep track
[03:26:36] <nomagno> You just make sure you add the amount it read to a variable whenever you read.
[03:26:59] <nomagno> POSIX usually does keep track of how many bytes it reads each individual "poll"
[03:27:33] <kurahaupo> r = read(socket_fd, &buf, sizeof buf); if (r<0) exit(1); byte_count += r;
[03:27:49] <nomagno> You might want to keep track of overflow
[03:28:00] <drevil> yeah that's what I'll be doing, but the thing is that I can't block the other processes
[03:28:08] <drevil> not a dealbreaker just annoying to deal with
[03:28:34] <nomagno> You definitely want to keep track of overflow, the troughtput of a pipe will easily exceed 4MBs
[03:28:58] <drevil> that's okay, I will use a buffer of like 100 mb and this thing is only for an assignment
[03:29:10] <drevil> 100 b*
[03:29:13] *** Joins: peve (~peve@2601:281:8700:5880::d3e4)
[03:30:08] *** Joins: Atque (~Atque@user/atque)
[03:30:11] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[03:30:34] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[03:30:59] <nomagno> The thing I find most frustrating is how my cool elegant Unix named pipe interfaces need to get either massively refactored or limited to disk I/O on most non-POSIX platforms
[03:31:03] <kurahaupo> nomagno: 4MB/s will overflow an int64_t in about 100000 years
[03:31:30] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[03:31:38] <caze> Better use uint64_t, then.
[03:31:40] <nomagno> 32 bits
[03:31:46] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[03:32:48] <kurahaupo> nomagno: using a 32 bit counter would be silly when a single file can be bigger than that
[03:34:03] <kurahaupo> rather than "check for overflow at run time", I'd say "choose a more sensible type at compile time"
[03:34:13] *** Quits: Soni (~quassel@autistic.space) (Ping timeout: 250 seconds)
[03:34:55] <kurahaupo> caze: yep! Or int1024_t
[03:34:59] <nomagno> C only really mandates 16 bit ints tough
[03:35:27] <caze> No one said anything about using int.
[03:35:33] *** Quits: peve (~peve@2601:281:8700:5880::d3e4) (Remote host closed the connection)
[03:35:35] *** Quits: codemin (~codemin@32.209.50.178) (Quit: Textual IRC Client: www.textualapp.com)
[03:35:41] <kurahaupo> C89 mandated 16-bit ints. We've moved on
[03:35:53] *** Joins: peve (~peve@2601:281:8700:5880::2804)
[03:36:05] <kurahaupo> or rather, at-least-16-bit ints
[03:36:19] <caze> C still does.
[03:37:32] <caze> I don't think it will ever change. There's no reason to. Just add a bigger integer type if it's needed. (as has been done twice already)
[03:37:36] <kurahaupo> In that case 4MB/s will overflow in about 17 milliseconds
[03:37:57] <kurahaupo> (8 ms if signed)
[03:37:59] <caze> But again, no one said anything about using int.
[03:38:07] <kurahaupo> my point too
[03:38:13] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[03:39:01] *** Joins: seninha (~seninha@user/seninha)
[03:39:06] <kurahaupo> "choose a sensible type at compile time" → at least 48 bits
[03:39:18] <kurahaupo> IMHO
[03:40:37] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 252 seconds)
[03:42:24] *** Joins: arinov (~arinov@213.194.126.155)
[03:42:27] <nomagno> 48 bits would be around 20 minutes, I think
[03:42:38] <nomagno> Which is the bare minimum if you want to avoid overflow indeed
[03:44:53] <nomagno> ,cc printf("%i\n", (17*(161616*16))/1000);
[03:44:55] <candide> nomagno: error: stray '\35' in program
[03:45:11] <nomagno> formatting issue, oops
[03:46:27] <nomagno> Yeah around 20 mins
[03:47:38] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[03:49:34] *** Quits: rgrinberg (~textual@2806:101e:7:7c2f:99ad:1649:a2c7:9e20) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:49:47] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 252 seconds)
[03:50:03] *** lukedashjr is now known as luke-jr
[03:50:15] <tk> long int
[03:50:16] <tk> long long int
[03:50:20] <tk> long long long int
[03:50:39] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Client Quit)
[03:50:59] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[03:51:12] <tk> maybe it should be like in lisp and it should be possible to write: long-> long; loong -> long long; looong -> long long long; loooong -> long long long long
[03:51:18] <tk> A good suggestion for C3x
[03:52:57] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[03:53:59] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[03:54:24] *** Joins: Wulf (~Wulf@user/wulf)
[03:54:25] <fizzie> Surely a counter that's increased by "4MB" (2^22) per second will take a lot longer than 20 minutes to overflow 48 bits. 2**48 / 2**22 = 2**26 seconds, or a bit over 2 years.
[03:55:45] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[03:57:03] *** Quits: lm- (~lm-@vps-a26d080c.vps.ovh.net) (Quit: WeeChat 3.2)
[03:57:17] *** Joins: lm- (~lm-@vps-a26d080c.vps.ovh.net)
[03:58:04] *** Quits: Colt (~Colt@user/colt) (Remote host closed the connection)
[03:58:09] *** Joins: cm007magnum (~Rheanna@61.171.21.169)
[03:58:45] *** Joins: Colt (~Colt@user/colt)
[04:00:59] *** Joins: Inline (~Inline@2a02:908:1252:7a80::117)
[04:01:23] *** Inline is now known as Guest1341
[04:02:01] *** Joins: Soni (~quassel@autistic.space)
[04:02:08] *** Joins: dohtem (uid524096@user/dohtem)
[04:02:13] *** Quits: Guest1341 (~Inline@2a02:908:1252:7a80::117) (Client Quit)
[04:02:33] *** Joins: Inline__ (~Inline@2a02:908:1252:7a80::117)
[04:04:13] *** Quits: CormacAttack (~mac@144.62.50.200) (Quit: WeeChat 3.3)
[04:06:45] *** Joins: Kev_ (~Kev@lfbn-idf2-1-1274-5.w90-92.abo.wanadoo.fr)
[04:07:09] *** Joins: gzj (~GZJ0X@216.24.178.99.16clouds.com)
[04:07:19] *** Quits: Inline__ (~Inline@2a02:908:1252:7a80::117) (Client Quit)
[04:07:40] *** Joins: GZJ0X_ (~GZJ0X@216.24.178.99.16clouds.com)
[04:10:36] *** Joins: Inline__ (~Inline@2a02:908:1252:7a80::117)
[04:11:42] *** Quits: GZJ0X_ (~GZJ0X@216.24.178.99.16clouds.com) (Client Quit)
[04:11:43] *** Quits: gzj (~GZJ0X@216.24.178.99.16clouds.com) (Ping timeout: 256 seconds)
[04:16:15] *** Quits: Kev_ (~Kev@lfbn-idf2-1-1274-5.w90-92.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[04:16:45] *** Joins: PortableDave (~portabled@14-201-65-57.static.tpgi.com.au)
[04:19:25] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[04:19:36] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[04:19:45] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Remote host closed the connection)
[04:20:08] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[04:22:49] *** Joins: cart_man (~rynot@host-78-144-121-71.as13285.net)
[04:23:33] *** Joins: monkey_ (~user@190.104.116.153)
[04:23:37] *** Quits: alch (~alch@151.34.127.143) (Ping timeout: 256 seconds)
[04:24:32] *** Quits: cart_man (~rynot@host-78-144-121-71.as13285.net) (Client Quit)
[04:24:41] *** Joins: seninha (~seninha@user/seninha)
[04:24:59] *** Quits: peve (~peve@2601:281:8700:5880::2804) (Quit: Leaving)
[04:25:37] *** Joins: alch (~alch@151.44.42.101)
[04:32:33] *** Quits: Chip1972 (~Chip1972@186.206.217.247) (Quit: Leaving)
[04:33:25] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[04:34:03] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Remote host closed the connection)
[04:34:23] *** Quits: marcj (~marc@205.175.215.25) (Ping timeout: 256 seconds)
[04:36:46] *** Joins: marcj (~marc@205.175.215.25)
[04:40:00] *** Quits: cm007magnum (~Rheanna@61.171.21.169) (Remote host closed the connection)
[04:42:37] *** Joins: cm007magnum (~Rheanna@101.91.232.166)
[04:45:41] *** Joins: Macuser (~Macuser@216.30.159.201)
[04:48:05] *** Quits: Thedarkb-Desktop (~Thedarkb@2001:bb6:b403:e042:5d6:6adb:6948:3fbd) (Ping timeout: 252 seconds)
[04:50:45] *** Quits: CaCode (~CaCode@user/cacode) (Ping timeout: 256 seconds)
[04:56:21] *** Quits: Torr (~Torr@user/torr) (Quit: leaving)
[05:00:19] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[05:00:43] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:01:02] *** Quits: chenqisu12 (~chenqisu1@183.217.201.63) (Remote host closed the connection)
[05:01:35] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[05:03:53] *** Joins: chenqisu1 (~03cia7d@183.217.201.63)
[05:04:50] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[05:05:33] *** Quits: chenqisu1 (~03cia7d@183.217.201.63) (Remote host closed the connection)
[05:08:15] *** Joins: chenqisu1 (~03cia7d@183.217.201.63)
[05:08:53] *** Quits: earnest (~earnest@user/earnestly) (Ping timeout: 256 seconds)
[05:08:59] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[05:11:08] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[05:11:40] *** Quits: dsrt^ (~dsrt@68.101.58.90) (Remote host closed the connection)
[05:12:30] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[05:14:14] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:15:51] *** Quits: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net) (Remote host closed the connection)
[05:16:37] *** Joins: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net)
[05:19:20] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[05:22:17] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[05:23:47] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[05:24:03] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[05:24:59] *** Joins: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it)
[05:26:29] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.3)
[05:26:31] *** Quits: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[05:26:50] *** Joins: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[05:27:10] <arkanoid> hello! would you help me fix the gcc build line to compile this example? https://github.com/apache/arrow/blob/master/c_glib/example/build.c ? I've already the dependencies in place and "pkg-config --cflags --libs arrow-glib" returns "-I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -DUTF8PROC_EXPORTS -L/usr/lib/x86_64-linux-gnu -larrow-glib -lgobject-2.0 -lglib-2.0 -larrow", but
[05:27:13] <arkanoid> compilation fails with "undefined reference to `garrow_int32_array_get_type'"
[05:28:05] <arkanoid> that symbol should be defined in "/usr/lib/x86_64-linux-gnu/libarrow-glib.so" that is present on disk
[05:28:51] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:30:02] *** Quits: cm007magnum (~Rheanna@101.91.232.166) (Remote host closed the connection)
[05:30:36] <fizzie> "I'm including the library but getting 'undefined reference' errors" is most commonly an argument order issue. Though if you're using some sort of an actual build system rather than your own command lines, that's maybe less likely.
[05:30:45] <arkanoid> compilation is ok but linking fails for reason that I can't track down
[05:31:44] <arkanoid> well, the input is "gcc $(pkg-config --cflags --libs arrow-glib) -o a.out build.c"
[05:31:53] <fizzie> Yeah, that's got the libraries in the wrong place.
[05:31:56] <fizzie> See http://c-faq.com/lib/libsearch.html
[05:32:09] <fizzie> Libraries need to come after the object files that reference symbols in those libraries.
[05:32:23] *** Joins: minto (~mintograd@47.201.5.61)
[05:32:51] *** Quits: mintograde (~mintograd@47.201.5.61) (Ping timeout: 245 seconds)
[05:33:03] *** Joins: joedoe47_ (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[05:33:05] *** Joins: cm007magnum (~Rheanna@218.78.109.69)
[05:33:19] *** Quits: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[05:33:24] <fizzie> As the simplest fix, just shift the pkg-config invocation last. That's what the `man pkg-config` example does.
[05:35:35] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Ping timeout: 256 seconds)
[05:36:36] <arkanoid> you're right
[05:36:39] <arkanoid> thanks
[05:44:49] *** Joins: simon323 (~simon323@2409:8a34:468:83d0:dce7:c14c:1815:2473)
[05:46:21] *** Quits: steve_ (~steve@ool-182c2b80.dyn.optonline.net) (Ping timeout: 256 seconds)
[05:46:28] *** Joins: Itaru (~DaSH@ro2.flokinet.is)
[05:49:41] *** Joins: ferdna (~ferdna@user/ferdna)
[05:53:25] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[05:54:26] *** Quits: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net) (Quit: Leaving)
[05:54:51] *** Joins: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net)
[05:55:44] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 252 seconds)
[06:02:33] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[06:02:53] *** Quits: PortableDave (~portabled@14-201-65-57.static.tpgi.com.au) (Ping timeout: 252 seconds)
[06:03:13] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Killed (osmium.libera.chat (Nickname regained by services)))
[06:03:13] *** vinleod is now known as vdamewood
[06:03:17] *** Quits: ntwk (~ntwk@user/ntwk) (Ping timeout: 256 seconds)
[06:03:55] *** Joins: ntwk (~ntwk@user/ntwk)
[06:07:15] *** Joins: CormacAttack (~mac@144.62.50.200)
[06:08:05] *** Quits: ChromaCat248 (~ChromaCat@user/chromacat248) (Remote host closed the connection)
[06:08:07] *** Joins: PortableDave (~portabled@14-201-65-57.static.tpgi.com.au)
[06:09:57] *** Quits: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net) (Remote host closed the connection)
[06:11:19] *** Joins: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net)
[06:11:54] *** Quits: manjaroi3 (~manjaro-i@125.131.131.26) (Quit: leaving)
[06:13:58] *** Quits: masterbuilder (~user@user/masterbuilder) (Remote host closed the connection)
[06:14:15] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:15:14] *** Joins: seninha (~seninha@user/seninha)
[06:16:27] *** Quits: cm007magnum (~Rheanna@218.78.109.69) (K-Lined)
[06:21:10] *** Joins: cm007magnum (~Rheanna@61.171.21.169)
[06:21:41] *** Quits: Techcable_ (~Techcable@168.235.93.147) (Ping timeout: 268 seconds)
[06:22:19] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[06:30:09] *** Quits: cm007magnum (~Rheanna@61.171.21.169) (K-Lined)
[06:33:02] *** Quits: Teckla (~Teckla@user/teckla) (Quit: leaving)
[06:33:08] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 252 seconds)
[06:35:49] *** Joins: Oxfuxxx (~sharky@143.244.56.187)
[06:37:31] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[06:45:41] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[06:46:51] *** Joins: gco (~gco@2601:647:5a00:223:91f0:347:aafc:c5ef)
[06:51:17] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:f767:b15a:e5b1:96f0) (Ping timeout: 268 seconds)
[06:52:12] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:b36c:1fc0:956d:d06c)
[06:52:26] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[06:52:52] *** Joins: gitargy (~gitargy@76.78.94.79)
[06:58:04] *** Joins: rgrinberg (~textual@2806:101e:7:7c2f:99ad:1649:a2c7:9e20)
[07:01:11] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 252 seconds)
[07:01:11] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:3dd4:62ea:1192:2511)
[07:05:05] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[07:16:41] *** Quits: PortableDave (~portabled@14-201-65-57.static.tpgi.com.au) (Quit: WeeChat 3.3)
[07:19:47] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 256 seconds)
[07:19:52] *** Quits: hgkjhgkjgkj (~hjgkjhgkj@46.235.96.249) (Quit: Leaving)
[07:23:11] *** Quits: Charadon (~Charadon@155.138.164.183) (Ping timeout: 252 seconds)
[07:26:10] *** Joins: Quacc (~youbuntoe@user/quacc)
[07:26:45] <Quacc> is there a way i can make an array of function pointers and define those functions at the same line
[07:26:50] <Quacc> same time*
[07:28:24] <fizzie> Nnno. There's no anonymous function literals (which is basically what you'd need for that) in C. (Yet.)
[07:28:58] <fizzie> Well, modulo preprocessor abuse and suchlike.
[07:29:34] <floatcomplex> wtf do you mean yet
[07:29:41] *** Joins: nostart (~nostar@192.154.196.126)
[07:29:47] <Quacc> c isnt being updated isnt it?
[07:29:56] <floatcomplex> occasionally
[07:30:05] <Quacc> well anyway thank you of reminding me about lambdas cause i'm using c++
[07:30:09] <floatcomplex> are we getting function literals?
[07:30:21] <Quacc> it would be neat
[07:30:25] <fizzie> There's a proposal, I'm not up to date on its chances of making it to C23.
[07:30:36] <floatcomplex> i'd love function literals as long as they don't try to do goofy shit like encapsulate parent scope
[07:30:45] <fizzie> They do try to do that, if I recall.
[07:30:46] *** Quits: gco (~gco@2601:647:5a00:223:91f0:347:aafc:c5ef) (Quit: ZZZzzz…)
[07:30:49] <floatcomplex> fuck off
[07:30:53] *** Quits: wootz (~wootz@2806:1000:8000:19e:3d07:445f:a352:1f9a) (Ping timeout: 252 seconds)
[07:31:15] <floatcomplex> what if the table of them is at file scope?
[07:31:18] <fizzie> From the meeting notes, I recall there's been some support, but also it's a quite large proposal.
[07:31:36] <fizzie> At file scope I imagine there's nothing for them to capture.
[07:31:37] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[07:31:59] *** Quits: nostar (~nostar@103.14.26.142) (Ping timeout: 252 seconds)
[07:32:07] *** Quits: Quacc (~youbuntoe@user/quacc) (Quit: WeeChat 3.3)
[07:33:01] <fizzie> If you're curious, http://www.open-std.org/jtc1/sc22/wg14/www/docs/n2734.pdf is an overview of the entire set of four interrelated proposals, and http://www.open-std.org/jtc1/sc22/wg14/www/docs/n2736.pdf describes the function literals.
[07:34:24] <fizzie> It uses the term "function literal" specifically for a lambda that doesn't capture anything, and seems to allow it at file scope. Which is fair enough. But it also goes further.
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:57] <floatcomplex> gross
[07:39:31] *** Quits: novns (~novns@user/novns) (Quit: ZNC 1.8.2 - https://znc.in)
[07:39:59] *** Joins: novns (~novns@user/novns)
[07:40:10] *** Joins: kdc (~kdc@196.211.197.159)
[07:43:02] *** Joins: Quacc (~youbuntoe@user/quacc)
[07:46:19] *** Quits: Quacc (~youbuntoe@user/quacc) (Client Quit)
[07:46:27] <fizzie> It also has an example (in the proposed-changes-to-the-standrd section) that uses λδ and λμ as two identifiers, which looks pretty funky.
[07:49:02] <fizzie> Would be a little odd for an example in the standard to so blatantly use implementation-defined behavior. Not that I imagine there's any requirement for examples to be strictly conforming or anything.
[07:53:37] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Ping timeout: 252 seconds)
[07:57:21] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[07:57:39] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[08:01:48] *** Quits: drevil (~drevil___@2607:fa49:553f:2200:8869:f8ac:32a6:1456) (Quit: Leaving)
[08:04:28] *** Joins: Techcable (~Techcable@168.235.93.147)
[08:05:16] *** Joins: Burgundy (~yomon@79.115.213.171)
[08:07:45] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[08:09:21] *** Joins: Alhazred (~Alhazred@s91904425.blix.com)
[08:10:13] *** Quits: nuxil (~nuxil@141.195.51.213) (Ping timeout: 268 seconds)
[08:18:41] *** Quits: rahl (~rahl@102.114.49.13) (Ping timeout: 245 seconds)
[08:19:12] *** Joins: katnis (uid15849@id-15849.helmsley.irccloud.com)
[08:22:24] *** Joins: jmiehe1 (~Thunderbi@user/jmiehe)
[08:22:41] *** Quits: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu) (Ping timeout: 256 seconds)
[08:22:45] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[08:24:03] *** Quits: alch (~alch@151.44.42.101) (Ping timeout: 252 seconds)
[08:24:03] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Ping timeout: 252 seconds)
[08:24:03] *** jmiehe1 is now known as jmiehe
[08:25:16] *** Quits: rgrinberg (~textual@2806:101e:7:7c2f:99ad:1649:a2c7:9e20) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:25:50] *** Joins: rahl (~rahl@102.114.3.60)
[08:25:53] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[08:25:55] *** Joins: alch (~alch@151.46.40.224)
[08:26:28] *** Joins: rgrinberg (~textual@2806:101e:7:7c2f:99ad:1649:a2c7:9e20)
[08:28:44] *** Joins: on^ (~on@68.101.58.90)
[08:29:56] *** Joins: the_lanetly_052_ (~the_lanet@194.135.166.91)
[08:31:23] *** Quits: CormacAttack (~mac@144.62.50.200) (Ping timeout: 252 seconds)
[08:32:23] *** Quits: the_lanetly_052 (~the_lanet@185.30.91.178) (Ping timeout: 256 seconds)
[08:33:21] *** Joins: CaCode (~CaCode@user/cacode)
[08:34:10] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[08:40:27] *** Joins: frost (~frost@user/frost)
[08:44:07] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[08:44:53] *** Joins: Atque (~Atque@user/atque)
[08:46:20] *** Quits: wwilly_ (~wwilly@lfbn-str-1-375-81.w86-243.abo.wanadoo.fr) (Quit: Leaving)
[08:49:56] *** Joins: gry (~quassel@botters/gry)
[08:56:28] *** Quits: X-Scale (~ARM@92.250.96.131) (*.net *.split)
[08:56:28] *** Quits: nurupo (~nurupo.ga@user/nurupo) (*.net *.split)
[08:56:28] *** Quits: zinc_ (~zinc@163.ip-51-254-203.eu) (*.net *.split)
[08:56:28] *** Quits: gl (~x@pwn.lu) (*.net *.split)
[08:56:28] *** Quits: begriffs_ (~begriffs@user/begriffs) (*.net *.split)
[08:56:28] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (*.net *.split)
[08:56:29] *** Quits: Pentode (~Pentode@mobile-166-171-57-43.mycingular.net) (*.net *.split)
[08:56:29] *** Quits: kuku (~kuku@user/kuku) (*.net *.split)
[08:56:29] *** Quits: ColdKeyboard (~ColdKeybo@user/coldkeyboard) (*.net *.split)
[08:56:29] *** Quits: eldritch_ (~eldritch@user/eldritch/x-9272577) (*.net *.split)
[08:56:29] *** Quits: ra4king (~ra4king@roiatalla.com) (*.net *.split)
[08:56:29] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (*.net *.split)
[08:56:29] *** Quits: pnill (~pnill@ip170.ip-54-39-37.net) (*.net *.split)
[08:56:29] *** Quits: pieguy128 (~pieguy128@bas1-quebec14-67-70-102-17.dsl.bell.ca) (*.net *.split)
[08:56:29] *** Quits: laris (undead@37.221.209.36) (*.net *.split)
[08:56:29] *** Quits: CaCode (~CaCode@user/cacode) (*.net *.split)
[08:56:29] *** Quits: alch (~alch@151.46.40.224) (*.net *.split)
[08:56:29] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (*.net *.split)
[08:56:29] *** Quits: Burgundy (~yomon@79.115.213.171) (*.net *.split)
[08:56:29] *** Quits: supakeen (~user@python/site-packages/supakeen) (*.net *.split)
[08:56:29] *** Quits: gitargy (~gitargy@76.78.94.79) (*.net *.split)
[08:56:29] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (*.net *.split)
[08:56:29] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:b36c:1fc0:956d:d06c) (*.net *.split)
[08:56:29] *** Quits: joedoe47_ (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (*.net *.split)
[08:56:29] *** Quits: marcj (~marc@205.175.215.25) (*.net *.split)
[08:56:29] *** Quits: Inline__ (~Inline@2a02:908:1252:7a80::117) (*.net *.split)
[08:56:29] *** Quits: dohtem (uid524096@user/dohtem) (*.net *.split)
[08:56:29] *** Quits: Colt (~Colt@user/colt) (*.net *.split)
[08:56:29] *** Quits: tk (~tk@ircpuzzles/staff/tk) (*.net *.split)
[08:56:29] *** Quits: Albright (~Albright@149.28.13.173) (*.net *.split)
[08:56:29] *** Quits: domve (~dom@user/domve) (*.net *.split)
[08:56:29] *** Quits: Betal (~Betal@user/betal) (*.net *.split)
[08:56:29] *** Quits: NEYi (~NEYi@109.251.216.38) (*.net *.split)
[08:56:29] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (*.net *.split)
[08:56:29] *** Quits: aighearach (~paris@user/aighearach) (*.net *.split)
[08:56:29] *** Quits: dhch (~dhch@185.213.154.165) (*.net *.split)
[08:56:29] *** Quits: wangledorf (sid505185@id-505185.ilkley.irccloud.com) (*.net *.split)
[08:56:29] *** Quits: polyrob (~rob@user/polyrob) (*.net *.split)
[08:56:29] *** Quits: pflanze (~pflanze@5-168-208-80-pool.fiber.fcom.ch) (*.net *.split)
[08:56:29] *** Quits: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8) (*.net *.split)
[08:56:29] *** Quits: zwr (~zwr@2804:d45:b966:fb00:ed3f:2af5:12bc:dd1e) (*.net *.split)
[08:56:29] *** Quits: Xeha (~Xeha@dynamic-82-220-88-142.ftth.solnet.ch) (*.net *.split)
[08:56:29] *** Quits: fbiagent_ (~fbiagent@user/fbiagent) (*.net *.split)
[08:56:29] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (*.net *.split)
[08:56:29] *** Quits: dstein64 (~dstein64@dannyadam.com) (*.net *.split)
[08:56:29] *** Quits: digilink (~digilink@user/digilink) (*.net *.split)
[08:56:29] *** Quits: koffeinfriedhof (~koffeinfr@ubuntuusers/moderation/koffeinfriedhof) (*.net *.split)
[08:56:29] *** Quits: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt) (*.net *.split)
[08:56:29] *** Quits: heftig (heftig@archlinux/developer/heftig) (*.net *.split)
[08:56:29] *** Quits: highrate (~presonic@111-22-237-24.gci.net) (*.net *.split)
[08:56:29] *** Quits: Dotz0cat (~Dotz0cat@h87.47.22.98.static.ip.windstream.net) (*.net *.split)
[08:56:29] *** Quits: cation (cation@user/cation) (*.net *.split)
[08:56:29] *** Quits: gce108 (~gce@user/gce108) (*.net *.split)
[08:56:29] *** Quits: koollman (samson_t@user/koollman) (*.net *.split)
[08:56:29] *** Quits: Fairy (~Fairy@ti0004a400-3806.bb.online.no) (*.net *.split)
[08:56:29] *** Quits: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (*.net *.split)
[08:56:29] *** Quits: cheakoirccloud (uid293319@id-293319.ilkley.irccloud.com) (*.net *.split)
[08:56:30] *** Quits: mniip (mniip@libera/staff/mniip) (*.net *.split)
[08:56:30] *** Quits: fstd_ (~fstd@xdsl-81-173-139-70.nc.de) (*.net *.split)
[08:56:30] *** Quits: floatcomplex (~floatcomp@wireguard/tunneler/floatcomplex) (*.net *.split)
[08:56:30] *** Quits: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net) (*.net *.split)
[08:56:30] *** Quits: g0z (gauze@entropy.tmok.com) (*.net *.split)
[08:56:30] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (*.net *.split)
[08:56:30] *** Quits: taru9 (~realTaru9@user/taru9) (*.net *.split)
[08:56:30] *** Quits: Retr0id (~Retr0id@user/retr0id) (*.net *.split)
[08:56:30] *** Quits: |smlckz| (smlckz@user/smlckz) (*.net *.split)
[08:56:30] *** Quits: user282069 (user@2a01:7e00::f03c:92ff:fe7f:456d) (*.net *.split)
[08:56:30] *** Quits: fmac (bf93f83905@2604:bf00:561:2000::26) (*.net *.split)
[08:56:30] *** Quits: Brewster (~Brewster@104.145.226.5) (*.net *.split)
[08:56:30] *** Quits: ns12 (~ns12@user/ns12) (*.net *.split)
[08:56:30] *** Quits: kilobyte_ch (~kbch@77.109.171.167) (*.net *.split)
[08:56:30] *** Quits: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it) (*.net *.split)
[08:56:30] *** Quits: kzootech (~awalm@kzoo.tech) (*.net *.split)
[08:56:30] *** Quits: carrar (~tim@osburn.jp) (*.net *.split)
[08:56:30] *** Quits: sebito91 (~sborza@45.55.74.66) (*.net *.split)
[08:56:30] *** Quits: Tordek (tordek@triton.blinkenshell.org) (*.net *.split)
[08:56:30] *** Quits: Phil-Work (~phil@62.3.100.20) (*.net *.split)
[08:56:30] *** Quits: ethoxy (~caretaker@cx21.havox.ru) (*.net *.split)
[08:56:30] *** Quits: acolarh (~niels@3e6be663.rev.stofanet.dk) (*.net *.split)
[08:56:30] *** Quits: gcd (gd@104-9-69-236.lightspeed.nsvltn.sbcglobal.net) (*.net *.split)
[08:56:30] *** Quits: edk (edk@libera/staff/edk) (*.net *.split)
[08:56:30] *** Quits: Spydar007 (~spydar007@user/spydar007) (*.net *.split)
[08:56:30] *** Quits: Ckat (~Ckat@xn--z7x.xn--6frz82g) (*.net *.split)
[08:56:30] *** Quits: tbcr_ (~tbcr@107.13.189.161) (*.net *.split)
[08:56:30] *** Quits: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4) (*.net *.split)
[08:56:30] *** Quits: not_a_robot[m] (~notarobot@2001:470:69fc:105::dd37) (*.net *.split)
[08:56:30] *** Quits: jinsun_ (~jinsun@user/jinsun) (*.net *.split)
[08:56:30] *** Quits: th1 (~th@test.secomondo.dk) (*.net *.split)
[08:56:30] *** Quits: nate (NBishop@o.apocaleaps.com) (*.net *.split)
[08:56:30] *** Quits: joast (~rick@cpe-98-146-112-4.natnow.res.rr.com) (*.net *.split)
[08:56:30] *** Quits: beencubed (~beencubed@209.131.238.248) (*.net *.split)
[08:56:30] *** Quits: lemontree (~chat@user/lemontree) (*.net *.split)
[08:56:30] *** Quits: haniaF (~haniaF@83.24.192.250.ipv4.supernova.orange.pl) (*.net *.split)
[08:56:30] *** Quits: motherfsck (~motherfsc@user/motherfsck) (*.net *.split)
[08:56:30] *** Quits: Chaser (~Chaser@user/chaser) (*.net *.split)
[08:56:30] *** Quits: Pjerky (~Pjerky@81-234-143-135-no58.tbcn.telia.com) (*.net *.split)
[08:56:30] *** Quits: grange_c (~grange_c@vps-9763379d.vps.ovh.net) (*.net *.split)
[08:56:30] *** Quits: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3) (*.net *.split)
[08:56:30] *** Quits: lllh (~llh@198.48.244.21) (*.net *.split)
[08:56:31] *** Quits: soapsudsxx (~soapsudsx@209.221.40.158) (*.net *.split)
[08:56:31] *** Quits: koo5_ (~quassel@51.140.155.227) (*.net *.split)
[08:56:31] *** Quits: treble (~treble@user/treble) (*.net *.split)
[08:56:31] *** Quits: dutch (~DutchIngr@user/dutch) (*.net *.split)
[08:56:31] *** Quits: kurahaupo (~kurahaupo@pa49-195-154-60.pa.nsw.optusnet.com.au) (*.net *.split)
[08:56:31] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (*.net *.split)
[08:56:31] *** Quits: bookworm (~bookworm@thelounge/maintainer/bookworm) (*.net *.split)
[08:56:31] *** Quits: fcresende (~quassel@vps35015.publiccloud.com.br) (*.net *.split)
[08:56:31] *** Quits: boB_K7IQ (~boB_K7IQ@152.44.147.180) (*.net *.split)
[08:56:31] *** Quits: [R] (~rs@genoce.org) (*.net *.split)
[08:56:31] *** Quits: e36freak (~e36freak@user/e36freak) (*.net *.split)
[08:56:31] *** Quits: elemongw (~elemongw@20.107.36.50) (*.net *.split)
[08:56:31] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (*.net *.split)
[08:56:31] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (*.net *.split)
[08:56:31] *** Quits: mad_enz (~mad_enz@lnsm3-torontoxn-142-116-106-108.internet.virginmobile.ca) (*.net *.split)
[08:56:31] *** Quits: davros (~davros@host86-185-99-134.range86-185.btcentralplus.com) (*.net *.split)
[08:56:31] *** Quits: m4v (~znc@ubuntu/member/m4v) (*.net *.split)
[08:56:31] *** Quits: esselfe (~steph@user/esselfe) (*.net *.split)
[08:56:31] *** Quits: puke (~puke@user/puke) (*.net *.split)
[08:56:31] *** Quits: Terlisimo (~Terlisimo@outofband.ozna.net) (*.net *.split)
[08:56:31] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (*.net *.split)
[08:56:31] *** Quits: Moonspell (moon@194.87.139.59) (*.net *.split)
[08:56:31] *** Quits: sunyour (~sunyour@129.226.182.99) (*.net *.split)
[08:56:31] *** Quits: psyxopompos (~psyxopomp@user/psyxopompos) (*.net *.split)
[08:56:31] *** Quits: bdt (~bdt@155.51-174-24.customer.lyse.net) (*.net *.split)
[08:56:31] *** Quits: pinheadmz (~pinheadmz@hns-contributor.dev) (*.net *.split)
[08:56:31] *** Quits: |darc| (darc@darcserv.net) (*.net *.split)
[08:56:31] *** Quits: mountaingoat (~mountaing@user/mountaingoat) (*.net *.split)
[08:56:31] *** Quits: simpl_e (~user@user/simpl-e/x-8589812) (*.net *.split)
[08:56:31] *** Quits: bliminse (~bliminse@host86-162-147-196.range86-162.btcentralplus.com) (*.net *.split)
[08:56:31] *** Quits: apotheon (~apotheon@copyfree/founder/apotheon) (*.net *.split)
[08:56:31] *** Quits: root____ (~root@157.245.144.252) (*.net *.split)
[08:56:31] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (*.net *.split)
[08:56:31] *** Quits: cyphics (~cyphix@user/cyphics) (*.net *.split)
[08:56:31] *** Quits: glider (~glider@user/glider) (*.net *.split)
[08:56:31] *** Quits: phryk (~totallyno@user/phryk) (*.net *.split)
[08:56:31] *** Quits: voirnox (~voirnox@xor.moe) (*.net *.split)
[08:56:31] *** Quits: zopsi (~zopsi@irc.dir.ac) (*.net *.split)
[08:56:31] *** Quits: dexter0 (~dexter0@c-69-181-126-161.hsd1.ca.comcast.net) (*.net *.split)
[08:56:31] *** Quits: Teacup (~teacup@user/teacup) (*.net *.split)
[08:56:31] *** Quits: natechan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (*.net *.split)
[08:56:31] *** Quits: sham1 (~sham1@212-146-44-107.aboa.net) (*.net *.split)
[08:56:31] *** Quits: orthoplex64 (~crm@70.120.0.94) (*.net *.split)
[08:56:31] *** Quits: gnomesort (~gnomesort@user/gnomesort) (*.net *.split)
[08:56:31] *** Quits: shadowchaser (~Shadowcha@liox.eu) (*.net *.split)
[08:56:31] *** Quits: last1 (last1@modemcable039.93-160-184.mc.videotron.ca) (*.net *.split)
[08:56:31] *** Quits: sirdidymus (~sirdidymu@sorcsys.net) (*.net *.split)
[08:56:31] *** Quits: cisco87 (~quassel@static.128.104.12.49.clients.your-server.de) (*.net *.split)
[08:56:31] *** Quits: Nex8192 (~Nex8192@user/nex8192) (*.net *.split)
[08:56:31] *** Quits: krissmaster (~kriss@213.239.83.90) (*.net *.split)
[08:56:31] *** Quits: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net) (*.net *.split)
[08:56:32] *** Quits: noord (~noord@user/noord) (*.net *.split)
[08:56:32] *** Quits: g2anj (~v@39.112.227.198) (*.net *.split)
[08:56:32] *** Quits: rcf (rcf@sdf.org) (*.net *.split)
[08:56:32] *** Quits: tazle (tazle@kapsi.fi) (*.net *.split)
[08:56:32] *** Quits: asdflkj_sh (asdflkj@user/asdflkj-sh/x-6013523) (*.net *.split)
[08:56:32] *** Quits: cursey (~cursey@user/cursey) (*.net *.split)
[08:56:32] *** Quits: ztx (~ztx@user/ztx) (*.net *.split)
[08:56:32] *** Quits: moberg (~moberg@luke.millenniumfalcon.org) (*.net *.split)
[08:56:32] *** Quits: nukedclx (nukedclx@shell.k4be.pl) (*.net *.split)
[08:56:32] *** Quits: simontime (~simontime@irc.simonti.me) (*.net *.split)
[08:56:32] *** Quits: regulate (~regulate@koduro.com) (*.net *.split)
[08:56:32] *** Quits: monchi (~joints@143.198.92.132) (*.net *.split)
[08:56:32] *** Quits: andreas303 (andreas303@ip227.orange.bnc4free.com) (*.net *.split)
[08:56:32] *** Quits: phroa (~phroa@user/phroa) (*.net *.split)
[08:56:32] *** Quits: Dijky (~Dijky@user/dijky) (*.net *.split)
[08:56:32] *** Quits: Pokey (~pokey@spikeyCactus/hoosky) (*.net *.split)
[08:56:32] *** Quits: clarity (~clarity@user/clarity) (*.net *.split)
[08:56:32] *** Quits: jenkins (~jenkins@user/jenkins) (*.net *.split)
[08:56:32] *** Quits: sivoais (~zaki@199.19.225.239) (*.net *.split)
[08:56:32] *** Quits: samir (~azureuser@user/samir) (*.net *.split)
[08:56:32] *** Quits: bch_x (~bch@S01069050ca2cbf63.ok.shawcable.net) (*.net *.split)
[08:56:32] *** Quits: rgrinberg (~textual@2806:101e:7:7c2f:99ad:1649:a2c7:9e20) (*.net *.split)
[08:56:32] *** Quits: joilerv_ (~joilerv@host86-191-93-41.range86-191.btcentralplus.com) (*.net *.split)
[08:56:32] *** Quits: ghenry (~ghenry@ghenry.plus.com) (*.net *.split)
[08:56:32] *** Quits: dacav (~dacav@h94-245-9-202.cust.a3fiber.se) (*.net *.split)
[08:56:32] *** Quits: CygniX (~CygniX@2a01:8740:1:727:4e:80:7f:2d) (*.net *.split)
[08:56:32] *** Quits: mcf (~mforney@netbsd/developer/mcf) (*.net *.split)
[08:56:32] *** Quits: surgeon[m] (~surge9nma@2001:470:69fc:105::f585) (*.net *.split)
[08:56:32] *** Quits: randm (~randm@user/randm) (*.net *.split)
[08:56:32] *** Quits: graphitemaster (~graphitem@user/graphitemaster) (*.net *.split)
[08:56:32] *** Quits: Learath2 (~learath2@user/learath2) (*.net *.split)
[08:56:32] *** Quits: summerisle (~eof@tty3.dev) (*.net *.split)
[08:56:32] *** Quits: synx (hornd@2600:3c00::f03c:91ff:fedf:3d6) (*.net *.split)
[08:56:32] *** Quits: ullbeking_ (sid5364@id-5364.ilkley.irccloud.com) (*.net *.split)
[08:56:32] *** Quits: mplio (~mplio@2a02-a452-be1f-1-fe3f-dbff-fe02-92e4.fixed6.kpn.net) (*.net *.split)
[08:56:32] *** Quits: jsmolic (~quassel@gentoo/developer/jsmolic) (*.net *.split)
[08:56:32] *** Quits: EdFletcher (~PKD@user/edfletcher) (*.net *.split)
[08:56:32] *** Quits: selikolg (~selikolg@178.62.2.76) (*.net *.split)
[08:56:32] *** Quits: fluter (~fluter@user/fluter) (*.net *.split)
[08:56:32] *** Quits: Praise (~Fat@user/praise) (*.net *.split)
[08:56:32] *** Quits: greenbagels (~gb@user/greenbagels) (*.net *.split)
[08:56:32] *** Quits: bparker (~nobody@user/bparker) (*.net *.split)
[08:56:32] *** Quits: Lyude (~lyudess@pool-96-230-249-157.bstnma.fios.verizon.net) (*.net *.split)
[08:56:32] *** Quits: poprocks (~logan@user/poprocks) (*.net *.split)
[08:56:33] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (*.net *.split)
[08:56:33] *** Quits: Svitkona (~Svitkona@157.245.38.135) (*.net *.split)
[08:56:33] *** Quits: abraham (~abraham@143.244.185.86) (*.net *.split)
[08:56:33] *** Quits: Ranhir (~Ranhir@157.97.53.139) (*.net *.split)
[08:56:33] *** Quits: jiffe (~jiffe@mail.nsab.us) (*.net *.split)
[08:56:33] *** Quits: Bou (sid274843@user/bou) (*.net *.split)
[08:56:33] *** Quits: oldtopman (~oldtopman@c-71-205-4-123.hsd1.co.comcast.net) (*.net *.split)
[08:56:33] *** Quits: Jck_true (~jcktrue@user/jck-true/x-0200799) (*.net *.split)
[08:56:33] *** Quits: Khoyo_ (~khoyo@ns328946.ip-37-187-115.eu) (*.net *.split)
[08:56:33] *** Quits: pippijn (~pippijn@ra.xinutec.org) (*.net *.split)
[08:56:33] *** Quits: Trashlord (~trash@user/trashlord) (*.net *.split)
[08:56:33] *** Quits: cust (amaama@blackbox.amaama.org) (*.net *.split)
[08:56:33] *** Quits: noahmg123 (sid89117@id-89117.ilkley.irccloud.com) (*.net *.split)
[08:56:33] *** Quits: rubin55 (sid175221@id-175221.hampstead.irccloud.com) (*.net *.split)
[08:56:33] *** Quits: Bodger1234_ (sid503511@id-503511.uxbridge.irccloud.com) (*.net *.split)
[08:56:33] *** Quits: glowcoil (sid3405@id-3405.tinside.irccloud.com) (*.net *.split)
[08:56:33] *** Quits: tomboy64 (~tomboy64@user/tomboy64) (*.net *.split)
[08:56:33] *** Quits: glenfe (sid231748@user/glenfe) (*.net *.split)
[08:56:33] *** Quits: cengiz_io (sid223191@id-223191.ilkley.irccloud.com) (*.net *.split)
[08:56:33] *** Quits: catern (~sbaugh@cpe-98-7-229-235.nyc.res.rr.com) (*.net *.split)
[08:56:33] *** Quits: ReimuHakurei (~Reimu@raphi.vserver.alexingram.net) (*.net *.split)
[08:56:33] *** Quits: jellie (~luv_panda@user/jellie) (*.net *.split)
[08:56:33] *** Quits: twkm (twkm@rfc1459.net) (*.net *.split)
[08:56:33] *** Quits: haliucinas (~haliucina@5.20.153.21) (*.net *.split)
[08:56:33] *** Quits: dkeohane2 (~dkeohane@ec2-18-189-29-140.us-east-2.compute.amazonaws.com) (*.net *.split)
[08:56:33] *** Quits: subvisor (sid502026@helmsley.irccloud.com) (*.net *.split)
[08:56:33] *** Quits: englishm (sid6629@tinside.irccloud.com) (*.net *.split)
[08:56:33] *** Quits: agander_m (sid407952@tinside.irccloud.com) (*.net *.split)
[08:56:33] *** Quits: eau (~chat@user/eau) (*.net *.split)
[08:56:33] *** Quits: avrdude (~avrdude@user/avrdude) (*.net *.split)
[08:56:33] *** Quits: petererer (~petern@2001:8b0:65dd:8ef1:37be:e06:fb80:4ba2) (*.net *.split)
[08:56:33] *** Quits: Celelibi (celelibi@user/celelibi) (*.net *.split)
[08:56:33] *** Quits: DCTWD (~dc@uz.utmappro.com) (*.net *.split)
[08:56:33] *** Quits: mrkajetanp (~mrkajetan@2a01:4b00:ea36:6c00:7994:941c:3f5d:2b88) (*.net *.split)
[08:56:33] *** Quits: fakenullie (~nullie@london.nullie.name) (*.net *.split)
[08:56:33] *** Quits: hexology (~hexology@user/hexology) (*.net *.split)
[08:56:33] *** Quits: veltas (~veltas@104.236.34.215) (*.net *.split)
[08:56:33] *** Quits: Ryozuki (~Ryozuki@user/ryozuki) (*.net *.split)
[08:56:33] *** Quits: andi_ (~andi@user/andi/x-3467420) (*.net *.split)
[08:56:33] *** Quits: livestradamus (~quassel@user/livestradamus) (*.net *.split)
[08:56:33] *** Quits: buzel (~buzel@fsf/member/buzel) (*.net *.split)
[08:56:33] *** Quits: vt (~vt@osa.vbc.su) (*.net *.split)
[08:56:33] *** Quits: malkrister[m] (~malkriste@2001:470:69fc:105::1:44f3) (*.net *.split)
[08:56:33] *** Quits: novasharper (~novasharp@2001:470:69fc:105::b4a) (*.net *.split)
[08:56:33] *** Quits: Isthmusi (~Isthmus@user/isveni) (*.net *.split)
[08:56:33] *** Quits: Twix (~None@2a01:4f8:192:23d0::1be4:a) (*.net *.split)
[08:56:33] *** Quits: supernov1h (~supernova@mail.ijk.nz) (*.net *.split)
[08:56:33] *** Quits: PaulePanter (~paul@mail.gw90.de) (*.net *.split)
[08:56:33] *** Quits: BGL (thirty@75-149-171-58-Washington.hfc.comcastbusiness.net) (*.net *.split)
[08:56:33] *** Quits: richardwh1uk (richardwhi@scarlet.richardwhiuk.com) (*.net *.split)
[08:56:33] *** Quits: savy_ (~z@io.tl) (*.net *.split)
[08:56:34] *** Quits: LuKaRo_ (~LuKaRo@p5dedaa53.dip0.t-ipconnect.de) (*.net *.split)
[08:56:34] *** Quits: coc0nut (~coc0nut@user/coc0nut) (*.net *.split)
[08:56:34] *** Quits: jkl1337 (~jkl@user/jkl) (*.net *.split)
[08:56:34] *** Quits: herrhotzenplotz (~herrhotze@user/herrhotzenplotz) (*.net *.split)
[08:56:34] *** Quits: nullptr_ (~nullptr@user/nullptr/x-2182142) (*.net *.split)
[08:56:34] *** Quits: azerty (~azerty@user/badwolf) (*.net *.split)
[08:56:34] *** Quits: Cienisty (Cienisty@user/cienisty) (*.net *.split)
[08:56:34] *** Quits: spike_spiegel38 (~spike_spi@static.200.4.251.148.clients.your-server.de) (*.net *.split)
[08:56:34] *** Quits: TVH767 (~TVH7@containerhost01.de01-nbg01.dev.ti-more.net) (*.net *.split)
[08:56:34] *** Quits: danieln (~danieln@erebor.danieln.de) (*.net *.split)
[08:56:34] *** Quits: nowz (~nowz@user/nowz) (*.net *.split)
[08:56:34] *** Quits: blackbeard420 (blackbeard@2600:3c03::f03c:91ff:fe92:3f2a) (*.net *.split)
[08:56:34] *** Quits: mgocobachi (~m@ancrae.com) (*.net *.split)
[08:56:34] *** Quits: caze (~caze@user/caze) (*.net *.split)
[08:56:34] *** Quits: dynos01 (~dynos01@li820-149.members.linode.com) (*.net *.split)
[08:56:34] *** Quits: AAAAA_DRAGON (A_D@libera/staff/dragon) (*.net *.split)
[08:56:34] *** Quits: vancz (~vancz@user/vancz) (*.net *.split)
[08:56:34] *** Quits: alvarezp (quassel@2600:3c01::f03c:91ff:fee5:6d8d) (*.net *.split)
[08:56:34] *** Quits: roxlu (~roxlu@2a01:7c8:aac0:286:8c3a:b01c:3830:245b) (*.net *.split)
[08:56:34] *** Quits: Ragnor (~Ragnor@user/ragnor) (*.net *.split)
[08:56:34] *** Quits: jkssodhxu[m] (~barzarian@2001:470:69fc:105::1:3a12) (*.net *.split)
[08:56:34] *** Quits: Daniel[m] (~danielbau@2001:470:69fc:105::1:1a5d) (*.net *.split)
[08:56:34] *** Quits: volgar1x (~volgar1xm@2001:470:69fc:105::e61d) (*.net *.split)
[08:56:34] *** Quits: hussam (~hussam@user/hussam) (*.net *.split)
[08:56:34] *** Quits: happy-dude (~happy-dud@2001:470:69fc:105::b4d7) (*.net *.split)
[08:56:34] *** Quits: atulu[m] (~atulumatr@2001:470:69fc:105::d50c) (*.net *.split)
[08:56:34] *** Quits: lowin (~lowin@user/lowin) (*.net *.split)
[08:56:34] *** Quits: Muzer (~muzer@tim32.org) (*.net *.split)
[08:56:34] *** Quits: foxtrot (~foxtrot@user/foxtrot) (*.net *.split)
[08:56:34] *** Quits: zacts (~zacts@user/zacts) (*.net *.split)
[08:56:34] *** Quits: asd (~noname@user/asd) (*.net *.split)
[08:56:34] *** Quits: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl) (*.net *.split)
[08:56:34] *** Quits: amorel (~amorel@mx.mompl.net) (*.net *.split)
[08:56:34] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:346b:8ef4:4433:cb30) (*.net *.split)
[08:56:34] *** Quits: Irvise (~irvise@2001:470:69fc:105::84c) (*.net *.split)
[08:56:35] *** Quits: shalok (~shalok@user/shalok) (*.net *.split)
[08:56:35] *** Quits: reductum (~reductum@2603-8000-b400-8764-dea6-32ff-fe16-a622.res6.spectrum.com) (*.net *.split)
[08:56:35] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (*.net *.split)
[08:56:35] *** Quits: welt (~welt@willow.spiderden.net) (*.net *.split)
[08:56:35] *** Quits: reenix (~reenix@2a01:238:420e:ae00:1c37:63c1:24c0:ff75) (*.net *.split)
[08:56:35] *** Quits: BlueShark (sid10311@user/blueshark) (*.net *.split)
[08:56:35] *** Quits: nohit (sid334887@id-334887.tinside.irccloud.com) (*.net *.split)
[08:56:35] *** Quits: synthmeat (~synthmeat@user/synthmeat) (*.net *.split)
[08:56:35] *** Quits: gnoo (gnoo@user/gnoo) (*.net *.split)
[08:56:35] *** Quits: trenka (~ykaliuta@user/trenka) (*.net *.split)
[08:56:35] *** Quits: sudden (~cat@user/sudden) (*.net *.split)
[08:56:35] *** Quits: snickerbockers (sid210497@id-210497.ilkley.irccloud.com) (*.net *.split)
[08:56:35] *** Quits: TallonRain (sid214799@user/tallonrain) (*.net *.split)
[08:56:35] *** Quits: qwedfg (~qwedfg@user/qwedfg) (*.net *.split)
[08:56:35] *** Quits: towel (~towel@user/towel) (*.net *.split)
[08:56:35] *** Quits: leosilva (~leosilva@canonical/leosilva) (*.net *.split)
[08:56:35] *** Quits: cebor (~cebor@user/cebor) (*.net *.split)
[08:56:35] *** Quits: Sohaib[m] (~smalinux@2001:470:69fc:105::31b5) (*.net *.split)
[08:56:35] *** Quits: psydroid (~psydroid@user/psydroid) (*.net *.split)
[08:56:35] *** Quits: Freman (~Freman@flatus.fremnet.net) (*.net *.split)
[08:56:35] *** Quits: eeerik8 (~eeerik8@95.179.149.48) (*.net *.split)
[08:56:35] *** Quits: tyzoid (~tyzoid@2607:5600:dc::2) (*.net *.split)
[08:56:35] *** Quits: AndrewYu (~andrew@user/andrewyu) (*.net *.split)
[08:56:35] *** Quits: dansan (~daniel@75.81.148.51) (*.net *.split)
[08:56:35] *** Quits: n1000 (~n1000@user/n1000) (*.net *.split)
[08:56:35] *** Quits: scarce (~scarce@sourcehut/user/scarce) (*.net *.split)
[08:56:36] *** Quits: Masklin_Gurder (~joel@h-155-4-23-152.A230.priv.bahnhof.se) (*.net *.split)
[08:56:36] *** Quits: clockwor1girl (sophie@funkykitty.net) (*.net *.split)
[08:56:36] *** Quits: dustinm- (~dustinm@static.38.6.217.95.clients.your-server.de) (*.net *.split)
[08:56:36] *** Quits: routeveg_ (~lee@197.ip-51-195-136.eu) (*.net *.split)
[08:56:36] *** Quits: WanderingGlitch (~Wandering@aha/hacker/wanderingglitch) (*.net *.split)
[08:56:36] *** Quits: parazyd (~parazyd@devuan/developer/parazyd) (*.net *.split)
[08:56:36] *** Quits: daurnimator (~daurnimat@vultr.daurnimator.com) (*.net *.split)
[08:56:36] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (*.net *.split)
[08:56:36] *** Quits: IUSR (sid348938@id-348938.hampstead.irccloud.com) (*.net *.split)
[08:56:36] *** Quits: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net) (*.net *.split)
[08:56:36] *** Quits: nomagno (~nomagno@2001:470:69fc:105::c1f0) (*.net *.split)
[08:56:36] *** Quits: APic (apic@apic.name) (*.net *.split)
[08:56:36] *** Quits: con3 (~con3@143.198.53.32) (*.net *.split)
[08:56:36] *** Quits: BtbN (btbn@ffmpeg/developer/btbn) (*.net *.split)
[08:56:36] *** Quits: andjjj23 (~irc@107.170.228.47) (*.net *.split)
[08:56:36] *** Quits: edr (~edr@user/edr) (*.net *.split)
[08:56:36] *** Quits: root_ (~root@dhcp-24-53-243-12.cable.user.start.ca) (*.net *.split)
[08:56:36] *** Quits: reda_ (~reda@user/reda) (*.net *.split)
[08:56:36] *** Quits: grumble (grumble@user/grumble) (*.net *.split)
[08:56:36] *** Quits: dzz007 (~dzz007@user/dzz007) (*.net *.split)
[08:56:36] *** Quits: bone (~bone@user/mbo) (*.net *.split)
[08:56:36] *** Quits: Stx (stx@libera/staff/stx) (*.net *.split)
[08:56:36] *** Quits: kline (~freedom0@libera/staff/kline) (*.net *.split)
[08:56:36] *** Quits: strudl (~strudl@user/strudl) (*.net *.split)
[08:56:36] *** Quits: jason1234 (fltk@thunix.net) (*.net *.split)
[08:56:36] *** Quits: shachaf (~shachaf@user/shachaf) (*.net *.split)
[08:56:36] *** Quits: koisoke (xef4@epilogue.org) (*.net *.split)
[08:56:36] *** Quits: DarthGandalf (user@znc/developer/DarthGandalf) (*.net *.split)
[08:56:37] *** Quits: ElementW (~tungsten@hoodie.elementw.net) (*.net *.split)
[08:56:37] *** Quits: les (znc@user/les) (*.net *.split)
[08:56:37] *** Quits: tm512 (~tm512@user/tm512) (*.net *.split)
[08:56:37] *** Quits: Adie (cummy@adie.space) (*.net *.split)
[08:56:37] *** Quits: markand (~markand@markand.fr) (*.net *.split)
[08:56:37] *** Quits: trisk (~trisk@2601:196:4700:106e:8:20ff:fe3e:890e) (*.net *.split)
[08:56:37] *** Quits: celphi_ (sid97751@user/celphi) (*.net *.split)
[08:56:37] *** Quits: Manouchehri (sid384576@id-384576.hampstead.irccloud.com) (*.net *.split)
[08:56:37] *** Quits: krzych (krzych@nroot.pl) (*.net *.split)
[08:56:37] *** Quits: ozzz (~oz@46.49.41.80) (*.net *.split)
[08:56:37] *** Quits: tafa (~tafa@user/tafa) (*.net *.split)
[08:56:37] *** Quits: CalimeroTeknik (~calimero@user/calimeroteknik) (*.net *.split)
[08:56:37] *** Quits: dmgk (~dmgk@user/dmgk) (*.net *.split)
[08:56:37] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (*.net *.split)
[08:56:37] *** Quits: Emil (emil@emil.fi) (*.net *.split)
[08:56:37] *** Quits: Murray7501 (~Murray@89.109-247-180.customer.lyse.net) (*.net *.split)
[08:56:37] *** Quits: Neui[m] (~neuimatri@2001:470:69fc:105::745) (*.net *.split)
[08:56:37] *** Quits: high_ground (~yes@user/high-ground/x-5722129) (*.net *.split)
[08:56:37] *** Quits: fizzie (irc@selene.zem.fi) (*.net *.split)
[08:56:37] *** Quits: Exa (exa@irc.moe) (*.net *.split)
[08:56:37] *** Quits: chiptuner (~bobby@user/chiptuner) (*.net *.split)
[08:56:37] *** Quits: enyc (~enyc@user/enyc) (*.net *.split)
[08:56:37] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (*.net *.split)
[08:56:37] *** Quits: sdk_ (~x@shell.codevoid.de) (*.net *.split)
[08:56:37] *** Quits: trn (jhj@sourcehut/user/trn) (*.net *.split)
[08:56:37] *** Quits: krjst (~krjst@2604:a880:800:c1::16b:8001) (*.net *.split)
[08:56:37] *** Quits: DarkTrick (~DarkTrick@pl-749-047.bunbun.ne.jp) (*.net *.split)
[08:56:37] *** Quits: tempora (~tempus@user/tempora) (*.net *.split)
[08:56:37] *** Quits: sebbu (~sebbu@user/sebbu) (*.net *.split)
[08:56:37] *** Quits: sicelo (~sicelo@user/sicelo) (*.net *.split)
[08:56:37] *** Quits: MrC (Ben@mrbenc.net) (*.net *.split)
[08:56:38] *** Quits: tobiasu (~tobiasu@user/tobiasu) (*.net *.split)
[08:56:38] *** Quits: milia[m] (~mlliarmma@2001:470:69fc:105::1:4631) (*.net *.split)
[08:56:38] *** Quits: Deewiant (~deewiant@2001:470:69fc:105::2fd3) (*.net *.split)
[08:56:38] *** Quits: dlozeve[m] (~dlozevema@2001:470:69fc:105::1:1c58) (*.net *.split)
[08:56:38] *** Quits: Bazsalanszky[m] (~bazsalans@2001:470:69fc:105::6fe) (*.net *.split)
[08:56:38] *** Quits: NRK[m] (~nrkmatrix@2001:470:69fc:105::4e30) (*.net *.split)
[08:56:38] *** Quits: TheDcoder[m] (~thedcoder@user/thedcoder) (*.net *.split)
[08:56:38] *** Quits: dragonmaster (dragonmast@user/dragonmaster) (*.net *.split)
[08:56:38] *** Quits: ws2k3 (znc@vps.freegamehosting.eu) (*.net *.split)
[08:56:38] *** Quits: mweckbecker (~matthias@weckbecker.name) (*.net *.split)
[08:56:38] *** Quits: greyblue9 (sid500829@id-500829.ilkley.irccloud.com) (*.net *.split)
[08:56:38] *** Quits: kristjansson_ (sid126207@id-126207.tinside.irccloud.com) (*.net *.split)
[08:56:38] *** Quits: computerquip (sid423484@user/computerquip) (*.net *.split)
[08:56:38] *** Quits: kevinsjoberg (sid499516@id-499516.lymington.irccloud.com) (*.net *.split)
[08:56:38] *** Quits: PublicWiFi (~PublicWiF@user/publicwifi) (*.net *.split)
[08:56:38] *** Quits: alip (~alip@exherbo/developer/alip) (*.net *.split)
[08:56:38] *** Quits: hyper_dave (~hyper_dav@2a01:4f9:4a:246c::2) (*.net *.split)
[08:56:38] *** Quits: flashd[m] (~flashdmat@2001:470:69fc:105::1:3d0b) (*.net *.split)
[08:56:38] *** Quits: go4godvin (~go4godvin@user/go4godvin) (*.net *.split)
[08:56:38] *** Quits: xrj (~av@2a01:4f8:c17:7cba::1) (*.net *.split)
[08:56:38] *** Quits: Daemoen (~Daemoen@daemoen.ct-unlimited.com) (*.net *.split)
[08:56:38] *** Quits: enick_958 (~mercvrivs@2001:470:69fc:105::2ee6) (*.net *.split)
[08:56:38] *** Quits: randy408[m] (~randy408m@2001:470:69fc:105::2f5e) (*.net *.split)
[08:56:38] *** Quits: Akawama[m] (~akawama@user/akawama) (*.net *.split)
[08:56:38] *** Quits: orkim (~orkim@user/orkim) (*.net *.split)
[08:56:38] *** Quits: shiroyasha (~shiroyash@ec2-3-124-70-31.eu-central-1.compute.amazonaws.com) (*.net *.split)
[08:56:38] *** Quits: gemelen (~gemelen@zooey.gemelen.net) (*.net *.split)
[08:56:38] *** Quits: ndorf (~nd@ob.noxio.us) (*.net *.split)
[08:56:38] *** Quits: dupondje (~dupondje@artemis.dupie.be) (*.net *.split)
[08:56:38] *** Quits: wyre (~wyre@user/wyre) (*.net *.split)
[08:56:38] *** Quits: dme2 (~dme2@67.205.140.199) (*.net *.split)
[08:56:38] *** Quits: oldlaptop (~quassel@45.63.78.126) (*.net *.split)
[08:56:38] *** Quits: yano (~yano@ircpuzzles/staff/yano) (*.net *.split)
[08:56:38] *** Quits: dos (~dos@dosowisko.net) (*.net *.split)
[08:56:38] *** Quits: Hobbyboy (Hobbyboy@hobbyboy.co.uk) (*.net *.split)
[08:56:38] *** Quits: Justin_T (~Justin@user/justin-t/x-2449983) (*.net *.split)
[08:56:38] *** Quits: krychu (~krychu@static.152.151.251.148.clients.your-server.de) (*.net *.split)
[08:56:38] *** Quits: kkd (~kkd@255.205.154.104.bc.googleusercontent.com) (*.net *.split)
[08:56:38] *** Quits: bleb (~cm@user/bleb) (*.net *.split)
[08:56:39] *** Quits: oj (oj@user/oj) (*.net *.split)
[08:56:39] *** Quits: lonjil (~quassel@user/lonjil) (*.net *.split)
[08:56:39] *** Quits: f0xb4t (~mac@78.46.13.69) (*.net *.split)
[08:56:39] *** Quits: mtg (~mtg@209.250.241.226) (*.net *.split)
[08:56:39] *** Quits: In0perable (~PLAYER_1@fancydata.science) (*.net *.split)
[08:56:39] *** Quits: stilbruch (~stilbruch@157.245.122.124) (*.net *.split)
[08:56:39] *** Quits: mdw_ (~root@159.65.86.163) (*.net *.split)
[08:56:39] *** Quits: remedan (~remedan@balak.me) (*.net *.split)
[08:56:39] *** Quits: nf (~n@monade.li) (*.net *.split)
[08:56:39] *** Quits: asmwfi[m] (~repmovsb@2001:470:69fc:105::1:274e) (*.net *.split)
[08:56:39] *** Quits: jaavv[m] (~jaavvmatr@2001:470:69fc:105::1:37b1) (*.net *.split)
[08:56:39] *** Quits: M77hamster7[m] (~M77hamste@2001:470:69fc:105::1:308a) (*.net *.split)
[08:56:39] *** Quits: dalz (~dalz@2001:470:69fc:105::2ea) (*.net *.split)
[08:56:39] *** Quits: arconte[m] (~arcontema@2001:470:69fc:105::1:2fe4) (*.net *.split)
[08:56:39] *** Quits: skyeto[m] (~skyetosky@2001:470:69fc:105::c2fe) (*.net *.split)
[08:56:39] *** Quits: _4p3 (~ape@kanonenjagd.panzer.ninja) (*.net *.split)
[08:56:39] *** Quits: divine (~divine@2001:470:8247:1::31) (*.net *.split)
[08:56:39] *** Quits: adinf (~ariel@2001:19f0:5:5337:5400:3ff:fe6c:38e9) (*.net *.split)
[08:56:39] *** Quits: Riviera (Riviera@user/riviera) (*.net *.split)
[08:56:39] *** Quits: eletrotupi (eletrotupi@user/eletrotupi) (*.net *.split)
[08:56:39] *** Quits: majors (~majors@user/majors) (*.net *.split)
[08:56:39] *** Quits: DrinkyBird (~drinkybir@idlerpg/player/DrinkyBird) (*.net *.split)
[08:56:39] *** Quits: cp- (~cp-@b157153.ppp.asahi-net.or.jp) (*.net *.split)
[08:56:39] *** Quits: vinay (~Vinay@user/vinay-keshava) (*.net *.split)
[08:56:39] *** Quits: fruitypunk (~user@2a01:7c8:aaaa:12:5054:ff:fe69:1df9) (*.net *.split)
[08:56:39] *** Quits: Artea (~Lufia@artea.com.pt) (*.net *.split)
[08:56:39] *** Quits: meowray (~MaskRay@user/meowray) (*.net *.split)
[08:56:39] *** Quits: nikomo (~quassel@nikomo.fi) (*.net *.split)
[08:56:39] *** Quits: shan (shan@cyblog/maintainer/shan) (*.net *.split)
[08:56:39] *** Quits: kernelc_ (~kornel@46.101.204.33) (*.net *.split)
[08:56:39] *** Quits: klys_ (~mdasoh@show.op8.us) (*.net *.split)
[08:56:39] *** Quits: kplant (~kplant@user/kplant) (*.net *.split)
[08:56:39] *** Quits: DarkUranium (~DarkUrani@stdrand.com) (*.net *.split)
[08:56:39] *** Quits: bsandro (~bsandro@139.138.197.56) (*.net *.split)
[08:56:39] *** Quits: Karyon (~Karyon@user/karyon) (*.net *.split)
[08:56:39] *** Quits: Haise0 (~haise01@user/haise01) (*.net *.split)
[08:56:39] *** Quits: riv (river@tilde.team/user/river) (*.net *.split)
[08:56:39] *** Quits: SoF (~skius@user/skius) (*.net *.split)
[08:56:39] *** Quits: davidv7 (~davidv7@user/videogameenjoyer) (*.net *.split)
[08:56:39] *** Quits: buhman (sid411355@user/buhman) (*.net *.split)
[08:56:40] *** Quits: schna (sid484866@id-484866.helmsley.irccloud.com) (*.net *.split)
[08:56:40] *** Quits: hedaera[m] (~hedaerama@2001:470:69fc:105::1:3ef1) (*.net *.split)
[08:56:40] *** Quits: Tom^ (~Tom^@user/tom/x-0773808) (*.net *.split)
[08:56:40] *** Quits: Epakai_ (Epakai@drislock.org) (*.net *.split)
[08:56:40] *** Quits: Beastie (~lcu@user/thebeastie) (*.net *.split)
[08:56:40] *** Quits: EtherNet (~ethernet@user/ethernet) (*.net *.split)
[08:56:40] *** Quits: xSavitar (~xSavitar@user/xsavitar) (*.net *.split)
[08:56:40] *** Quits: citrons_ (~citrons@alt.mondecitronne.com) (*.net *.split)
[08:56:40] *** Quits: DrNick42_ (~DrNick42@bastion.spikeyfishtech.uk) (*.net *.split)
[08:56:40] *** Quits: pr-asadi (~pr-asadi@2602:fccf:1:1150::) (*.net *.split)
[08:56:40] *** Quits: illustris (sid211748@id-211748.ilkley.irccloud.com) (*.net *.split)
[08:56:40] *** Quits: SrPx (sid108780@id-108780.uxbridge.irccloud.com) (*.net *.split)
[08:56:40] *** Quits: dmlloyd (sid331705@redhat/dmlloyd) (*.net *.split)
[08:56:40] *** Quits: lhtseng (sid15322@id-15322.helmsley.irccloud.com) (*.net *.split)
[08:56:40] *** Quits: ikiryo (sid109660@user/ikiryo) (*.net *.split)
[08:56:40] *** Quits: omegatron (~some@p54bd5e02.dip0.t-ipconnect.de) (*.net *.split)
[08:56:40] *** Quits: Roman[m] (~wrongt@2001:470:69fc:105::341e) (*.net *.split)
[08:56:40] *** Quits: ormaaj (~ormaaj@user/ormaaj) (*.net *.split)
[08:56:40] *** Quits: VICultist[m] (~jesingsma@2001:470:69fc:105::1:2bb8) (*.net *.split)
[08:56:40] *** Quits: emias (~holger@home.zedat.fu-berlin.de) (*.net *.split)
[08:56:40] *** Quits: ldericher (~LDer@pantalaimon.yavook.de) (*.net *.split)
[08:56:40] *** Quits: cehteh (~ct@git.pipapo.org) (*.net *.split)
[08:56:40] *** Quits: Fish (~Fish@cartwheel.9grid.fr) (*.net *.split)
[08:56:40] *** Quits: burakcank (~burakcank@has.arrived.and.is.ready-to.party) (*.net *.split)
[08:56:40] *** Quits: LangerJan (~jan@user/langerjan) (*.net *.split)
[08:56:40] *** Quits: mrus (~mrus@149.28.224.172) (*.net *.split)
[08:56:40] *** Quits: disconnect3d (~disconnec@user/disconnect3d) (*.net *.split)
[08:56:40] *** Quits: Atque (~Atque@user/atque) (*.net *.split)
[08:56:40] *** Quits: penguino (~mrpenguin@user/mrpenguin) (*.net *.split)
[08:56:40] *** Quits: Senicar (~Senicar@gateway/tor-sasl/senicar) (*.net *.split)
[08:56:40] *** Quits: bindu (~bindu@user/bindu) (*.net *.split)
[08:56:40] *** Quits: SymbioticFemale (~Symbiotic@gateway/tor-sasl/symbioticfemale) (*.net *.split)
[08:56:41] *** Quits: tejr (~tejr@user/tejr) (*.net *.split)
[08:56:41] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (*.net *.split)
[08:56:41] *** Quits: de-facto (~de-facto@user/de-facto) (*.net *.split)
[08:56:41] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (*.net *.split)
[08:56:41] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (*.net *.split)
[08:56:41] *** Quits: teepee (~teepee@openscad/teepee) (*.net *.split)
[08:57:19] *** Quits: Itaru (~DaSH@ro2.flokinet.is) (Quit: See Ya Later!)
[08:57:33] *** Joins: Itaru (~DaSH@ro2.flokinet.is)
[08:58:08] *** Joins: Atque (~Atque@user/atque)
[08:58:08] *** Joins: CaCode (~CaCode@user/cacode)
[08:58:08] *** Joins: rgrinberg (~textual@2806:101e:7:7c2f:99ad:1649:a2c7:9e20)
[08:58:08] *** Joins: alch (~alch@151.46.40.224)
[08:58:08] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[08:58:08] *** Joins: Burgundy (~yomon@79.115.213.171)
[08:58:08] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[08:58:08] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:58:08] *** Joins: gitargy (~gitargy@76.78.94.79)
[08:58:08] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[08:58:08] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:b36c:1fc0:956d:d06c)
[08:58:08] *** Joins: joedoe47_ (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[08:58:08] *** Joins: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it)
[08:58:08] *** Joins: marcj (~marc@205.175.215.25)
[08:58:08] *** Joins: Inline__ (~Inline@2a02:908:1252:7a80::117)
[08:58:08] *** Joins: dohtem (uid524096@user/dohtem)
[08:58:08] *** Joins: Colt (~Colt@user/colt)
[08:58:08] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[08:58:08] *** Joins: Albright (~Albright@149.28.13.173)
[08:58:08] *** Joins: domve (~dom@user/domve)
[08:58:08] *** Joins: Betal (~Betal@user/betal)
[08:58:08] *** Joins: NEYi (~NEYi@109.251.216.38)
[08:58:08] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[08:58:08] *** Joins: aighearach (~paris@user/aighearach)
[08:58:08] *** Joins: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3)
[08:58:08] *** Joins: grange_c (~grange_c@vps-9763379d.vps.ovh.net)
[08:58:08] *** Joins: joilerv_ (~joilerv@host86-191-93-41.range86-191.btcentralplus.com)
[08:58:08] *** Joins: lllh (~llh@198.48.244.21)
[08:58:08] *** Joins: dhch (~dhch@185.213.154.165)
[08:58:08] *** Joins: soapsudsxx (~soapsudsx@209.221.40.158)
[08:58:08] *** Joins: koo5_ (~quassel@51.140.155.227)
[08:58:08] *** Joins: treble (~treble@user/treble)
[08:58:08] *** Joins: Senicar (~Senicar@gateway/tor-sasl/senicar)
[08:58:08] *** Joins: bindu (~bindu@user/bindu)
[08:58:08] *** Joins: SymbioticFemale (~Symbiotic@gateway/tor-sasl/symbioticfemale)
[08:58:08] *** Joins: wangledorf (sid505185@id-505185.ilkley.irccloud.com)
[08:58:08] *** Joins: dutch (~DutchIngr@user/dutch)
[08:58:08] *** Joins: polyrob (~rob@user/polyrob)
[08:58:08] *** Joins: pflanze (~pflanze@5-168-208-80-pool.fiber.fcom.ch)
[08:58:08] *** Joins: kurahaupo (~kurahaupo@pa49-195-154-60.pa.nsw.optusnet.com.au)
[08:58:08] *** Joins: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8)
[08:58:08] *** Joins: zwr (~zwr@2804:d45:b966:fb00:ed3f:2af5:12bc:dd1e)
[08:58:08] *** Joins: X-Scale (~ARM@92.250.96.131)
[08:58:08] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[08:58:08] *** Joins: Xeha (~Xeha@dynamic-82-220-88-142.ftth.solnet.ch)
[08:58:08] *** Joins: bookworm (~bookworm@thelounge/maintainer/bookworm)
[08:58:08] *** Joins: fbiagent_ (~fbiagent@user/fbiagent)
[08:58:08] *** Joins: fcresende (~quassel@vps35015.publiccloud.com.br)
[08:58:08] *** Joins: Norkle (~norkle@admin.nasa-g0v.com)
[08:58:08] *** Joins: boB_K7IQ (~boB_K7IQ@152.44.147.180)
[08:58:08] *** Joins: [R] (~rs@genoce.org)
[08:58:08] *** Joins: snickerbockers (sid210497@id-210497.ilkley.irccloud.com)
[08:58:08] *** Joins: e36freak (~e36freak@user/e36freak)
[08:58:08] *** Joins: dstein64 (~dstein64@dannyadam.com)
[08:58:08] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:346b:8ef4:4433:cb30)
[08:58:08] *** Joins: tejr (~tejr@user/tejr)
[08:58:08] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[08:58:08] *** Joins: elemongw (~elemongw@20.107.36.50)
[08:58:08] *** Joins: digilink (~digilink@user/digilink)
[08:58:08] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[08:58:08] *** Joins: de-facto (~de-facto@user/de-facto)
[08:58:08] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[08:58:08] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[08:58:08] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[08:58:08] *** Joins: koffeinfriedhof (~koffeinfr@ubuntuusers/moderation/koffeinfriedhof)
[08:58:08] *** Joins: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt)
[08:58:08] *** Joins: heftig (heftig@archlinux/developer/heftig)
[08:58:08] *** Joins: milia[m] (~mlliarmma@2001:470:69fc:105::1:4631)
[08:58:08] *** Joins: mad_enz (~mad_enz@lnsm3-torontoxn-142-116-106-108.internet.virginmobile.ca)
[08:58:08] *** Joins: davros (~davros@host86-185-99-134.range86-185.btcentralplus.com)
[08:58:08] *** Joins: highrate (~presonic@111-22-237-24.gci.net)
[08:58:08] *** Joins: m4v (~znc@ubuntu/member/m4v)
[08:58:08] *** Joins: teepee (~teepee@openscad/teepee)
[08:58:08] *** Joins: Dotz0cat (~Dotz0cat@h87.47.22.98.static.ip.windstream.net)
[08:58:08] *** Joins: esselfe (~steph@user/esselfe)
[08:58:08] *** Joins: gce108 (~gce@user/gce108)
[08:58:08] *** Joins: cation (cation@user/cation)
[08:58:08] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[08:58:08] *** Joins: puke (~puke@user/puke)
[08:58:08] *** Joins: Terlisimo (~Terlisimo@outofband.ozna.net)
[08:58:08] *** Joins: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[08:58:08] *** Joins: koollman (samson_t@user/koollman)
[08:58:08] *** Joins: Moonspell (moon@194.87.139.59)
[08:58:08] *** Joins: root____ (~root@157.245.144.252)
[08:58:08] *** Joins: sunyour (~sunyour@129.226.182.99)
[08:58:08] *** Joins: psyxopompos (~psyxopomp@user/psyxopompos)
[08:58:08] *** Joins: Fairy (~Fairy@ti0004a400-3806.bb.online.no)
[08:58:08] *** Joins: CalimeroTeknik (~calimero@user/calimeroteknik)
[08:58:08] *** Joins: malkrister[m] (~malkriste@2001:470:69fc:105::1:44f3)
[08:58:08] *** Joins: bdt (~bdt@155.51-174-24.customer.lyse.net)
[08:58:08] *** Joins: pinheadmz (~pinheadmz@hns-contributor.dev)
[08:58:08] *** Joins: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[08:58:08] *** Joins: |darc| (darc@darcserv.net)
[08:58:08] *** Joins: mountaingoat (~mountaing@user/mountaingoat)
[08:58:08] *** Joins: simpl_e (~user@user/simpl-e/x-8589812)
[08:58:08] *** Joins: cheakoirccloud (uid293319@id-293319.ilkley.irccloud.com)
[08:58:08] *** Joins: AAAAA_DRAGON (A_D@libera/staff/dragon)
[08:58:08] *** Joins: bliminse (~bliminse@host86-162-147-196.range86-162.btcentralplus.com)
[08:58:08] *** Joins: apotheon (~apotheon@copyfree/founder/apotheon)
[08:58:08] *** Joins: mniip (mniip@libera/staff/mniip)
[08:58:08] *** Joins: fstd_ (~fstd@xdsl-81-173-139-70.nc.de)
[08:58:08] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[08:58:08] *** Joins: floatcomplex (~floatcomp@wireguard/tunneler/floatcomplex)
[08:58:08] *** Joins: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net)
[08:58:08] *** Joins: cyphics (~cyphix@user/cyphics)
[08:58:08] *** Joins: g0z (gauze@entropy.tmok.com)
[08:58:08] *** Joins: danieln (~danieln@erebor.danieln.de)
[08:58:08] *** Joins: dacav (~dacav@h94-245-9-202.cust.a3fiber.se)
[08:58:08] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[08:58:08] *** Joins: taru9 (~realTaru9@user/taru9)
[08:58:08] *** Joins: last1 (last1@modemcable039.93-160-184.mc.videotron.ca)
[08:58:08] *** Joins: CygniX (~CygniX@2a01:8740:1:727:4e:80:7f:2d)
[08:58:08] *** Joins: |smlckz| (smlckz@user/smlckz)
[08:58:08] *** Joins: Retr0id (~Retr0id@user/retr0id)
[08:58:08] *** Joins: DarthGandalf (user@znc/developer/DarthGandalf)
[08:58:08] *** Joins: glider (~glider@user/glider)
[08:58:08] *** Joins: phryk (~totallyno@user/phryk)
[08:58:08] *** Joins: mcf (~mforney@netbsd/developer/mcf)
[08:58:08] *** Joins: voirnox (~voirnox@xor.moe)
[08:58:08] *** Joins: user282069 (user@2a01:7e00::f03c:92ff:fe7f:456d)
[08:58:08] *** Joins: natechan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[08:58:08] *** Joins: zopsi (~zopsi@irc.dir.ac)
[08:58:08] *** Joins: dexter0 (~dexter0@c-69-181-126-161.hsd1.ca.comcast.net)
[08:58:08] *** Joins: Teacup (~teacup@user/teacup)
[08:58:08] *** Joins: fmac (bf93f83905@2604:bf00:561:2000::26)
[08:58:08] *** Joins: Brewster (~Brewster@104.145.226.5)
[08:58:08] *** Joins: sham1 (~sham1@212-146-44-107.aboa.net)
[08:58:08] *** Joins: orthoplex64 (~crm@70.120.0.94)
[08:58:08] *** Joins: gnomesort (~gnomesort@user/gnomesort)
[08:58:08] *** Joins: ns12 (~ns12@user/ns12)
[08:58:08] *** Joins: kilobyte_ch (~kbch@77.109.171.167)
[08:58:08] *** Joins: shadowchaser (~Shadowcha@liox.eu)
[08:58:08] *** Joins: kzootech (~awalm@kzoo.tech)
[08:58:08] *** Joins: sirdidymus (~sirdidymu@sorcsys.net)
[08:58:08] *** Joins: carrar (~tim@osburn.jp)
[08:58:08] *** Joins: cisco87 (~quassel@static.128.104.12.49.clients.your-server.de)
[08:58:08] *** Joins: sebito91 (~sborza@45.55.74.66)
[08:58:08] *** Joins: Tordek (tordek@triton.blinkenshell.org)
[08:58:08] *** Joins: Nex8192 (~Nex8192@user/nex8192)
[08:58:08] *** Joins: krissmaster (~kriss@213.239.83.90)
[08:58:08] *** Joins: Phil-Work (~phil@62.3.100.20)
[08:58:08] *** Joins: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net)
[08:58:08] *** Joins: ethoxy (~caretaker@cx21.havox.ru)
[08:58:08] *** Joins: acolarh (~niels@3e6be663.rev.stofanet.dk)
[08:58:08] *** Joins: gcd (gd@104-9-69-236.lightspeed.nsvltn.sbcglobal.net)
[08:58:08] *** Joins: noord (~noord@user/noord)
[08:58:08] *** Joins: edk (edk@libera/staff/edk)
[08:58:08] *** Joins: Spydar007 (~spydar007@user/spydar007)
[08:58:08] *** Joins: Ckat (~Ckat@xn--z7x.xn--6frz82g)
[08:58:08] *** Joins: tbcr_ (~tbcr@107.13.189.161)
[08:58:08] *** Joins: g2anj (~v@39.112.227.198)
[08:58:08] *** Joins: rcf (rcf@sdf.org)
[08:58:08] *** Joins: tazle (tazle@kapsi.fi)
[08:58:08] *** Joins: Irvise (~irvise@2001:470:69fc:105::84c)
[08:58:08] *** Joins: Deewiant (~deewiant@2001:470:69fc:105::2fd3)
[08:58:08] *** Joins: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4)
[08:58:08] *** Joins: surgeon[m] (~surge9nma@2001:470:69fc:105::f585)
[08:58:08] *** Joins: not_a_robot[m] (~notarobot@2001:470:69fc:105::dd37)
[08:58:08] *** Joins: dlozeve[m] (~dlozevema@2001:470:69fc:105::1:1c58)
[08:58:08] *** Joins: jinsun_ (~jinsun@user/jinsun)
[08:58:08] *** Joins: Bazsalanszky[m] (~bazsalans@2001:470:69fc:105::6fe)
[08:58:08] *** Joins: th1 (~th@test.secomondo.dk)
[08:58:08] *** Joins: nate (NBishop@o.apocaleaps.com)
[08:58:08] *** Joins: joast (~rick@cpe-98-146-112-4.natnow.res.rr.com)
[08:58:08] *** Joins: beencubed (~beencubed@209.131.238.248)
[08:58:08] *** Joins: lemontree (~chat@user/lemontree)
[08:58:08] *** Joins: asdflkj_sh (asdflkj@user/asdflkj-sh/x-6013523)
[08:58:08] *** Joins: cursey (~cursey@user/cursey)
[08:58:08] *** Joins: haniaF (~haniaF@83.24.192.250.ipv4.supernova.orange.pl)
[08:58:08] *** Joins: coc0nut (~coc0nut@user/coc0nut)
[08:58:08] *** Joins: ztx (~ztx@user/ztx)
[08:58:08] *** Joins: motherfsck (~motherfsc@user/motherfsck)
[08:58:08] *** Joins: moberg (~moberg@luke.millenniumfalcon.org)
[08:58:08] *** Joins: Chaser (~Chaser@user/chaser)
[08:58:08] *** Joins: NRK[m] (~nrkmatrix@2001:470:69fc:105::4e30)
[08:58:08] *** Joins: TheDcoder[m] (~thedcoder@user/thedcoder)
[08:58:08] *** Joins: nukedclx (nukedclx@shell.k4be.pl)
[08:58:08] *** Joins: simontime (~simontime@irc.simonti.me)
[08:58:08] *** Joins: novasharper (~novasharp@2001:470:69fc:105::b4a)
[08:58:08] *** Joins: Pjerky (~Pjerky@81-234-143-135-no58.tbcn.telia.com)
[08:58:08] *** Joins: regulate (~regulate@koduro.com)
[08:58:08] *** Joins: monchi (~joints@143.198.92.132)
[08:58:08] *** Joins: dragonmaster (dragonmast@user/dragonmaster)
[08:58:08] *** Joins: ws2k3 (znc@vps.freegamehosting.eu)
[08:58:08] *** Joins: ElementW (~tungsten@hoodie.elementw.net)
[08:58:08] *** Joins: mweckbecker (~matthias@weckbecker.name)
[08:58:08] *** Joins: les (znc@user/les)
[08:58:08] *** Joins: andreas303 (andreas303@ip227.orange.bnc4free.com)
[08:58:08] *** Joins: tm512 (~tm512@user/tm512)
[08:58:08] *** Joins: markand (~markand@markand.fr)
[08:58:08] *** Joins: Isthmusi (~Isthmus@user/isveni)
[08:58:08] *** Joins: Adie (cummy@adie.space)
[08:58:08] *** Joins: Twix (~None@2a01:4f8:192:23d0::1be4:a)
[08:58:08] *** Joins: phroa (~phroa@user/phroa)
[08:58:08] *** Joins: randm (~randm@user/randm)
[08:58:08] *** Joins: Dijky (~Dijky@user/dijky)
[08:58:08] *** Joins: shalok (~shalok@user/shalok)
[08:58:08] *** Joins: nurupo (~nurupo.ga@user/nurupo)
[08:58:08] *** Joins: Pokey (~pokey@spikeyCactus/hoosky)
[08:58:08] *** Joins: reductum (~reductum@2603-8000-b400-8764-dea6-32ff-fe16-a622.res6.spectrum.com)
[08:58:08] *** Joins: clarity (~clarity@user/clarity)
[08:58:08] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[08:58:08] *** Joins: graphitemaster (~graphitem@user/graphitemaster)
[08:58:08] *** Joins: jenkins (~jenkins@user/jenkins)
[08:58:08] *** Joins: Learath2 (~learath2@user/learath2)
[08:58:08] *** Joins: welt (~welt@willow.spiderden.net)
[08:58:08] *** Joins: synx (hornd@2600:3c00::f03c:91ff:fedf:3d6)
[08:58:08] *** Joins: summerisle (~eof@tty3.dev)
[08:58:08] *** Joins: reenix (~reenix@2a01:238:420e:ae00:1c37:63c1:24c0:ff75)
[08:58:08] *** Joins: sivoais (~zaki@199.19.225.239)
[08:58:08] *** Joins: zinc_ (~zinc@163.ip-51-254-203.eu)
[08:58:08] *** Joins: gl (~x@pwn.lu)
[08:58:08] *** Joins: begriffs_ (~begriffs@user/begriffs)
[08:58:08] *** Joins: ullbeking_ (sid5364@id-5364.ilkley.irccloud.com)
[08:58:08] *** Joins: BlueShark (sid10311@user/blueshark)
[08:58:08] *** Joins: nohit (sid334887@id-334887.tinside.irccloud.com)
[08:58:08] *** Joins: trisk (~trisk@2601:196:4700:106e:8:20ff:fe3e:890e)
[08:58:08] *** Joins: mplio (~mplio@2a02-a452-be1f-1-fe3f-dbff-fe02-92e4.fixed6.kpn.net)
[08:58:08] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[08:58:08] *** Joins: davidv7 (~davidv7@user/videogameenjoyer)
[08:58:08] *** Joins: scarce (~scarce@sourcehut/user/scarce)
[08:58:08] *** Joins: Pentode (~Pentode@mobile-166-171-57-43.mycingular.net)
[08:58:08] *** Joins: jsmolic (~quassel@gentoo/developer/jsmolic)
[08:58:08] *** Joins: EdFletcher (~PKD@user/edfletcher)
[08:58:08] *** Joins: samir (~azureuser@user/samir)
[08:58:08] *** Joins: bch_x (~bch@S01069050ca2cbf63.ok.shawcable.net)
[08:58:08] *** Joins: selikolg (~selikolg@178.62.2.76)
[08:58:08] *** Joins: synthmeat (~synthmeat@user/synthmeat)
[08:58:08] *** Joins: gnoo (gnoo@user/gnoo)
[08:58:08] *** Joins: fluter (~fluter@user/fluter)
[08:58:08] *** Joins: trenka (~ykaliuta@user/trenka)
[08:58:08] *** Joins: Praise (~Fat@user/praise)
[08:58:08] *** Joins: sudden (~cat@user/sudden)
[08:58:08] *** Joins: celphi_ (sid97751@user/celphi)
[08:58:08] *** Joins: buhman (sid411355@user/buhman)
[08:58:08] *** Joins: schna (sid484866@id-484866.helmsley.irccloud.com)
[08:58:08] *** Joins: TallonRain (sid214799@user/tallonrain)
[08:58:08] *** Joins: Manouchehri (sid384576@id-384576.hampstead.irccloud.com)
[08:58:08] *** Joins: greyblue9 (sid500829@id-500829.ilkley.irccloud.com)
[08:58:08] *** Joins: kristjansson_ (sid126207@id-126207.tinside.irccloud.com)
[08:58:08] *** Joins: computerquip (sid423484@user/computerquip)
[08:58:08] *** Joins: kevinsjoberg (sid499516@id-499516.lymington.irccloud.com)
[08:58:08] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[08:58:08] *** Joins: hedaera[m] (~hedaerama@2001:470:69fc:105::1:3ef1)
[08:58:08] *** Joins: mtg (~mtg@209.250.241.226)
[08:58:08] *** Joins: Tom^ (~Tom^@user/tom/x-0773808)
[08:58:08] *** Joins: BGL (thirty@75-149-171-58-Washington.hfc.comcastbusiness.net)
[08:58:08] *** Joins: PublicWiFi (~PublicWiF@user/publicwifi)
[08:58:08] *** Joins: greenbagels (~gb@user/greenbagels)
[08:58:08] *** Joins: In0perable (~PLAYER_1@fancydata.science)
[08:58:08] *** Joins: bparker (~nobody@user/bparker)
[08:58:08] *** Joins: Masklin_Gurder (~joel@h-155-4-23-152.A230.priv.bahnhof.se)
[08:58:08] *** Joins: clockwor1girl (sophie@funkykitty.net)
[08:58:08] *** Joins: dustinm- (~dustinm@static.38.6.217.95.clients.your-server.de)
[08:58:08] *** Joins: stilbruch (~stilbruch@157.245.122.124)
[08:58:08] *** Joins: WanderingGlitch (~Wandering@aha/hacker/wanderingglitch)
[08:58:08] *** Joins: routeveg_ (~lee@197.ip-51-195-136.eu)
[08:58:08] *** Joins: mdw_ (~root@159.65.86.163)
[08:58:08] *** Joins: PaulePanter (~paul@mail.gw90.de)
[08:58:08] *** Joins: supernov1h (~supernova@mail.ijk.nz)
[08:58:08] *** Joins: richardwh1uk (richardwhi@scarlet.richardwhiuk.com)
[08:58:08] *** Joins: savy_ (~z@io.tl)
[08:58:08] *** Joins: LuKaRo_ (~LuKaRo@p5dedaa53.dip0.t-ipconnect.de)
[08:58:08] *** Joins: jkl1337 (~jkl@user/jkl)
[08:58:08] *** Joins: Epakai_ (Epakai@drislock.org)
[08:58:08] *** Joins: herrhotzenplotz (~herrhotze@user/herrhotzenplotz)
[08:58:08] *** Joins: azerty (~azerty@user/badwolf)
[08:58:08] *** Joins: nullptr_ (~nullptr@user/nullptr/x-2182142)
[08:58:08] *** Joins: Cienisty (Cienisty@user/cienisty)
[08:58:08] *** Joins: spike_spiegel38 (~spike_spi@static.200.4.251.148.clients.your-server.de)
[08:58:08] *** Joins: TVH767 (~TVH7@containerhost01.de01-nbg01.dev.ti-more.net)
[08:58:08] *** Joins: Beastie (~lcu@user/thebeastie)
[08:58:08] *** Joins: Lyude (~lyudess@pool-96-230-249-157.bstnma.fios.verizon.net)
[08:58:08] *** Joins: poprocks (~logan@user/poprocks)
[08:58:08] *** Joins: krzych (krzych@nroot.pl)
[08:58:08] *** Joins: remedan (~remedan@balak.me)
[08:58:08] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[08:58:08] *** Joins: Svitkona (~Svitkona@157.245.38.135)
[08:58:08] *** Joins: alip (~alip@exherbo/developer/alip)
[08:58:08] *** Joins: nowz (~nowz@user/nowz)
[08:58:08] *** Joins: abraham (~abraham@143.244.185.86)
[08:58:08] *** Joins: Ranhir (~Ranhir@157.97.53.139)
[08:58:08] *** Joins: ozzz (~oz@46.49.41.80)
[08:58:08] *** Joins: hyper_dave (~hyper_dav@2a01:4f9:4a:246c::2)
[08:58:08] *** Joins: parazyd (~parazyd@devuan/developer/parazyd)
[08:58:08] *** Joins: jiffe (~jiffe@mail.nsab.us)
[08:58:08] *** Joins: Bou (sid274843@user/bou)
[08:58:08] *** Joins: EtherNet (~ethernet@user/ethernet)
[08:58:08] *** Joins: xSavitar (~xSavitar@user/xsavitar)
[08:58:08] *** Joins: citrons_ (~citrons@alt.mondecitronne.com)
[08:58:08] *** Joins: DrNick42_ (~DrNick42@bastion.spikeyfishtech.uk)
[08:58:08] *** Joins: tafa (~tafa@user/tafa)
[08:58:08] *** Joins: flashd[m] (~flashdmat@2001:470:69fc:105::1:3d0b)
[08:58:08] *** Joins: pr-asadi (~pr-asadi@2602:fccf:1:1150::)
[08:58:08] *** Joins: blackbeard420 (blackbeard@2600:3c03::f03c:91ff:fe92:3f2a)
[08:58:08] *** Joins: daurnimator (~daurnimat@vultr.daurnimator.com)
[08:58:08] *** Joins: oldtopman (~oldtopman@c-71-205-4-123.hsd1.co.comcast.net)
[08:58:08] *** Joins: Jck_true (~jcktrue@user/jck-true/x-0200799)
[08:58:08] *** Joins: mgocobachi (~m@ancrae.com)
[08:58:08] *** Joins: Khoyo_ (~khoyo@ns328946.ip-37-187-115.eu)
[08:58:08] *** Joins: pippijn (~pippijn@ra.xinutec.org)
[08:58:08] *** Joins: nf (~n@monade.li)
[08:58:08] *** Joins: Trashlord (~trash@user/trashlord)
[08:58:08] *** Joins: cust (amaama@blackbox.amaama.org)
[08:58:08] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[08:58:08] *** Joins: SrPx (sid108780@id-108780.uxbridge.irccloud.com)
[08:58:08] *** Joins: illustris (sid211748@id-211748.ilkley.irccloud.com)
[08:58:08] *** Joins: noahmg123 (sid89117@id-89117.ilkley.irccloud.com)
[08:58:08] *** Joins: dmlloyd (sid331705@redhat/dmlloyd)
[08:58:08] *** Joins: rubin55 (sid175221@id-175221.hampstead.irccloud.com)
[08:58:08] *** Joins: lhtseng (sid15322@id-15322.helmsley.irccloud.com)
[08:58:08] *** Joins: Bodger1234_ (sid503511@id-503511.uxbridge.irccloud.com)
[08:58:08] *** Joins: ikiryo (sid109660@user/ikiryo)
[08:58:08] *** Joins: glowcoil (sid3405@id-3405.tinside.irccloud.com)
[08:58:08] *** Joins: tomboy64 (~tomboy64@user/tomboy64)
[08:58:08] *** Joins: IUSR (sid348938@id-348938.hampstead.irccloud.com)
[08:58:08] *** Joins: glenfe (sid231748@user/glenfe)
[08:58:08] *** Joins: cengiz_io (sid223191@id-223191.ilkley.irccloud.com)
[08:58:08] *** Joins: catern (~sbaugh@cpe-98-7-229-235.nyc.res.rr.com)
[08:58:08] *** Joins: ReimuHakurei (~Reimu@raphi.vserver.alexingram.net)
[08:58:08] *** Joins: jellie (~luv_panda@user/jellie)
[08:58:08] *** Joins: twkm (twkm@rfc1459.net)
[08:58:08] *** Joins: haliucinas (~haliucina@5.20.153.21)
[08:58:08] *** Joins: dkeohane2 (~dkeohane@ec2-18-189-29-140.us-east-2.compute.amazonaws.com)
[08:58:08] *** Joins: omegatron (~some@p54bd5e02.dip0.t-ipconnect.de)
[08:58:08] *** Joins: go4godvin (~go4godvin@user/go4godvin)
[08:58:08] *** Joins: subvisor (sid502026@helmsley.irccloud.com)
[08:58:08] *** Joins: englishm (sid6629@tinside.irccloud.com)
[08:58:08] *** Joins: agander_m (sid407952@tinside.irccloud.com)
[08:58:08] *** Joins: eau (~chat@user/eau)
[08:58:08] *** Joins: avrdude (~avrdude@user/avrdude)
[08:58:08] *** Joins: petererer (~petern@2001:8b0:65dd:8ef1:37be:e06:fb80:4ba2)
[08:58:08] *** Joins: Celelibi (celelibi@user/celelibi)
[08:58:08] *** Joins: towel (~towel@user/towel)
[08:58:08] *** Joins: DCTWD (~dc@uz.utmappro.com)
[08:58:08] *** Joins: leosilva (~leosilva@canonical/leosilva)
[08:58:08] *** Joins: caze (~caze@user/caze)
[08:58:08] *** Joins: mrkajetanp (~mrkajetan@2a01:4b00:ea36:6c00:7994:941c:3f5d:2b88)
[08:58:08] *** Joins: fakenullie (~nullie@london.nullie.name)
[08:58:08] *** Joins: hexology (~hexology@user/hexology)
[08:58:08] *** Joins: dynos01 (~dynos01@li820-149.members.linode.com)
[08:58:08] *** Joins: vancz (~vancz@user/vancz)
[08:58:08] *** Joins: buzel (~buzel@fsf/member/buzel)
[08:58:08] *** Joins: alvarezp (quassel@2600:3c01::f03c:91ff:fee5:6d8d)
[08:58:08] *** Joins: veltas (~veltas@104.236.34.215)
[08:58:08] *** Joins: Ryozuki (~Ryozuki@user/ryozuki)
[08:58:08] *** Joins: andi_ (~andi@user/andi/x-3467420)
[08:58:08] *** Joins: roxlu (~roxlu@2a01:7c8:aac0:286:8c3a:b01c:3830:245b)
[08:58:08] *** Joins: Ragnor (~Ragnor@user/ragnor)
[08:58:08] *** Joins: livestradamus (~quassel@user/livestradamus)
[08:58:08] *** Joins: xrj (~av@2a01:4f8:c17:7cba::1)
[08:58:08] *** Joins: vt (~vt@osa.vbc.su)
[08:58:08] *** Joins: Daemoen (~Daemoen@daemoen.ct-unlimited.com)
[08:58:08] *** Joins: mcfrdy (~mcfrdy@user/mcfrdy)
[08:58:08] *** Joins: dmgk (~dmgk@user/dmgk)
[08:58:08] *** Joins: Emil (emil@emil.fi)
[08:58:08] *** Joins: Murray7501 (~Murray@89.109-247-180.customer.lyse.net)
[08:58:08] *** Joins: cebor (~cebor@user/cebor)
[08:58:08] *** Joins: Sohaib[m] (~smalinux@2001:470:69fc:105::31b5)
[08:58:08] *** Joins: jkssodhxu[m] (~barzarian@2001:470:69fc:105::1:3a12)
[08:58:08] *** Joins: riv (river@tilde.team/user/river)
[08:58:08] *** Joins: asmwfi[m] (~repmovsb@2001:470:69fc:105::1:274e)
[08:58:08] *** Joins: Daniel[m] (~danielbau@2001:470:69fc:105::1:1a5d)
[08:58:08] *** Joins: Roman[m] (~wrongt@2001:470:69fc:105::341e)
[08:58:08] *** Joins: volgar1x (~volgar1xm@2001:470:69fc:105::e61d)
[08:58:08] *** Joins: Neui[m] (~neuimatri@2001:470:69fc:105::745)
[08:58:08] *** Joins: enick_958 (~mercvrivs@2001:470:69fc:105::2ee6)
[08:58:08] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[08:58:08] *** Joins: psydroid (~psydroid@user/psydroid)
[08:58:08] *** Joins: happy-dude (~happy-dud@2001:470:69fc:105::b4d7)
[08:58:08] *** Joins: hussam (~hussam@user/hussam)
[08:58:08] *** Joins: jaavv[m] (~jaavvmatr@2001:470:69fc:105::1:37b1)
[08:58:08] *** Joins: M77hamster7[m] (~M77hamste@2001:470:69fc:105::1:308a)
[08:58:08] *** Joins: arconte[m] (~arcontema@2001:470:69fc:105::1:2fe4)
[08:58:08] *** Joins: nomagno (~nomagno@2001:470:69fc:105::c1f0)
[08:58:08] *** Joins: VICultist[m] (~jesingsma@2001:470:69fc:105::1:2bb8)
[08:58:08] *** Joins: randy408[m] (~randy408m@2001:470:69fc:105::2f5e)
[08:58:08] *** Joins: atulu[m] (~atulumatr@2001:470:69fc:105::d50c)
[08:58:08] *** Joins: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net)
[08:58:08] *** Joins: dalz (~dalz@2001:470:69fc:105::2ea)
[08:58:08] *** Joins: Akawama[m] (~akawama@user/akawama)
[08:58:08] *** Joins: skyeto[m] (~skyetosky@2001:470:69fc:105::c2fe)
[08:58:08] *** Joins: kuku (~kuku@user/kuku)
[08:58:08] *** Joins: ColdKeyboard (~ColdKeybo@user/coldkeyboard)
[08:58:08] *** Joins: lowin (~lowin@user/lowin)
[08:58:08] *** Joins: high_ground (~yes@user/high-ground/x-5722129)
[08:58:08] *** Joins: Muzer (~muzer@tim32.org)
[08:58:08] *** Joins: eldritch_ (~eldritch@user/eldritch/x-9272577)
[08:58:08] *** Joins: ra4king (~ra4king@roiatalla.com)
[08:58:08] *** Joins: foxtrot (~foxtrot@user/foxtrot)
[08:58:08] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[08:58:08] *** Joins: pnill (~pnill@ip170.ip-54-39-37.net)
[08:58:08] *** Joins: zacts (~zacts@user/zacts)
[08:58:08] *** Joins: asd (~noname@user/asd)
[08:58:08] *** Joins: pieguy128 (~pieguy128@bas1-quebec14-67-70-102-17.dsl.bell.ca)
[08:58:08] *** Joins: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl)
[08:58:08] *** Joins: amorel (~amorel@mx.mompl.net)
[08:58:08] *** Joins: emias (~holger@home.zedat.fu-berlin.de)
[08:58:08] *** Joins: laris (undead@37.221.209.36)
[08:58:08] *** Joins: ldericher (~LDer@pantalaimon.yavook.de)
[08:58:08] *** Joins: fizzie (irc@selene.zem.fi)
[08:58:08] *** Joins: cehteh (~ct@git.pipapo.org)
[08:58:08] *** Joins: Fish (~Fish@cartwheel.9grid.fr)
[08:58:08] *** Joins: Exa (exa@irc.moe)
[08:58:08] *** Joins: Freman (~Freman@flatus.fremnet.net)
[08:58:08] *** Joins: APic (apic@apic.name)
[08:58:08] *** Joins: con3 (~con3@143.198.53.32)
[08:58:08] *** Joins: eeerik8 (~eeerik8@95.179.149.48)
[08:58:08] *** Joins: tyzoid (~tyzoid@2607:5600:dc::2)
[08:58:08] *** Joins: BtbN (btbn@ffmpeg/developer/btbn)
[08:58:08] *** Joins: AndrewYu (~andrew@user/andrewyu)
[08:58:08] *** Joins: andjjj23 (~irc@107.170.228.47)
[08:58:08] *** Joins: dansan (~daniel@75.81.148.51)
[08:58:08] *** Joins: edr (~edr@user/edr)
[08:58:08] *** Joins: root_ (~root@dhcp-24-53-243-12.cable.user.start.ca)
[08:58:08] *** Joins: reda_ (~reda@user/reda)
[08:58:08] *** Joins: grumble (grumble@user/grumble)
[08:58:08] *** Joins: dzz007 (~dzz007@user/dzz007)
[08:58:08] *** Joins: Justin_T (~Justin@user/justin-t/x-2449983)
[08:58:08] *** Joins: bone (~bone@user/mbo)
[08:58:08] *** Joins: n1000 (~n1000@user/n1000)
[08:58:08] *** Joins: Stx (stx@libera/staff/stx)
[08:58:08] *** Joins: kline (~freedom0@libera/staff/kline)
[08:58:08] *** Joins: strudl (~strudl@user/strudl)
[08:58:08] *** Joins: koisoke (xef4@epilogue.org)
[08:58:08] *** Joins: shachaf (~shachaf@user/shachaf)
[08:58:08] *** Joins: jason1234 (fltk@thunix.net)
[08:58:08] *** Joins: orkim (~orkim@user/orkim)
[08:58:08] *** Joins: chiptuner (~bobby@user/chiptuner)
[08:58:08] *** Joins: _4p3 (~ape@kanonenjagd.panzer.ninja)
[08:58:08] *** Joins: shiroyasha (~shiroyash@ec2-3-124-70-31.eu-central-1.compute.amazonaws.com)
[08:58:08] *** Joins: enyc (~enyc@user/enyc)
[08:58:08] *** Joins: gemelen (~gemelen@zooey.gemelen.net)
[08:58:08] *** Joins: ndorf (~nd@ob.noxio.us)
[08:58:08] *** Joins: dupondje (~dupondje@artemis.dupie.be)
[08:58:08] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[08:58:08] *** Joins: sdk_ (~x@shell.codevoid.de)
[08:58:08] *** Joins: trn (jhj@sourcehut/user/trn)
[08:58:08] *** Joins: krjst (~krjst@2604:a880:800:c1::16b:8001)
[08:58:08] *** Joins: wyre (~wyre@user/wyre)
[08:58:08] *** Joins: DarkTrick (~DarkTrick@pl-749-047.bunbun.ne.jp)
[08:58:08] *** Joins: dme2 (~dme2@67.205.140.199)
[08:58:08] *** Joins: tempora (~tempus@user/tempora)
[08:58:08] *** Joins: sebbu (~sebbu@user/sebbu)
[08:58:08] *** Joins: sicelo (~sicelo@user/sicelo)
[08:58:08] *** Joins: MrC (Ben@mrbenc.net)
[08:58:08] *** Joins: oldlaptop (~quassel@45.63.78.126)
[08:58:08] *** Joins: tobiasu (~tobiasu@user/tobiasu)
[08:58:08] *** Joins: yano (~yano@ircpuzzles/staff/yano)
[08:58:08] *** Joins: dos (~dos@dosowisko.net)
[08:58:08] *** Joins: Hobbyboy (Hobbyboy@hobbyboy.co.uk)
[08:58:08] *** Joins: krychu (~krychu@static.152.151.251.148.clients.your-server.de)
[08:58:08] *** Joins: divine (~divine@2001:470:8247:1::31)
[08:58:08] *** Joins: kkd (~kkd@255.205.154.104.bc.googleusercontent.com)
[08:58:08] *** Joins: adinf (~ariel@2001:19f0:5:5337:5400:3ff:fe6c:38e9)
[08:58:08] *** Joins: bleb (~cm@user/bleb)
[08:58:08] *** Joins: Riviera (Riviera@user/riviera)
[08:58:08] *** Joins: lonjil (~quassel@user/lonjil)
[08:58:08] *** Joins: oj (oj@user/oj)
[08:58:08] *** Joins: eletrotupi (eletrotupi@user/eletrotupi)
[08:58:08] *** Joins: f0xb4t (~mac@78.46.13.69)
[08:58:08] *** Joins: bsandro (~bsandro@139.138.197.56)
[08:58:08] *** Joins: burakcank (~burakcank@has.arrived.and.is.ready-to.party)
[08:58:08] *** Joins: majors (~majors@user/majors)
[08:58:08] *** Joins: DrinkyBird (~drinkybir@idlerpg/player/DrinkyBird)
[08:58:08] *** Joins: cp- (~cp-@b157153.ppp.asahi-net.or.jp)
[08:58:08] *** Joins: fruitypunk (~user@2a01:7c8:aaaa:12:5054:ff:fe69:1df9)
[08:58:08] *** Joins: vinay (~Vinay@user/vinay-keshava)
[08:58:08] *** Joins: Artea (~Lufia@artea.com.pt)
[08:58:08] *** Joins: meowray (~MaskRay@user/meowray)
[08:58:08] *** Joins: nikomo (~quassel@nikomo.fi)
[08:58:08] *** Joins: shan (shan@cyblog/maintainer/shan)
[08:58:08] *** Joins: LangerJan (~jan@user/langerjan)
[08:58:08] *** Joins: kernelc_ (~kornel@46.101.204.33)
[08:58:08] *** Joins: klys_ (~mdasoh@show.op8.us)
[08:58:08] *** Joins: kplant (~kplant@user/kplant)
[08:58:08] *** Joins: DarkUranium (~DarkUrani@stdrand.com)
[08:58:08] *** Joins: Karyon (~Karyon@user/karyon)
[08:58:08] *** Joins: Haise0 (~haise01@user/haise01)
[08:58:08] *** Joins: SoF (~skius@user/skius)
[08:58:08] *** Joins: mrus (~mrus@149.28.224.172)
[08:58:08] *** Joins: disconnect3d (~disconnec@user/disconnect3d)
[08:58:13] *** Quits: koolazer (~koo@user/koolazer) (Max SendQ exceeded)
[08:58:15] *** Quits: on^ (~on@68.101.58.90) (Max SendQ exceeded)
[08:58:15] *** Quits: shailangsa (~shailangs@host86-186-142-82.range86-186.btcentralplus.com) (Max SendQ exceeded)
[08:58:24] *** Quits: AndrewYu (~andrew@user/andrewyu) (Max SendQ exceeded)
[08:58:26] *** Quits: Exa (exa@irc.moe) (Max SendQ exceeded)
[08:58:26] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Max SendQ exceeded)
[08:58:27] *** Joins: Exa (exa@irc.moe)
[08:58:27] *** Quits: zopsi (~zopsi@irc.dir.ac) (Max SendQ exceeded)
[08:58:28] *** Joins: AndrewYu (~andrew@user/andrewyu)
[08:58:28] *** Joins: zopsi (zopsi@2600:3c00::f03c:91ff:fe14:551f)
[08:58:36] *** Joins: koolazer (~koo@user/koolazer)
[08:59:20] *** Joins: on^ (~on@68.101.58.90)
[08:59:31] *** Quits: elemongw (~elemongw@20.107.36.50) (Ping timeout: 256 seconds)
[08:59:45] *** Joins: the_lanetly_052 (~the_lanet@194.135.153.196)
[08:59:50] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[09:00:05] *** Quits: tazle (tazle@kapsi.fi) (Ping timeout: 256 seconds)
[09:00:16] *** Quits: Colt (~Colt@user/colt) (Remote host closed the connection)
[09:00:28] *** Joins: CormacAttack (~mac@144.62.50.200)
[09:00:39] *** Quits: kurahaupo (~kurahaupo@pa49-195-154-60.pa.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[09:00:39] *** Quits: glider (~glider@user/glider) (Ping timeout: 256 seconds)
[09:00:41] *** Joins: Colt (~Colt@user/colt)
[09:01:13] *** Quits: sirdidymus (~sirdidymu@sorcsys.net) (Ping timeout: 256 seconds)
[09:01:24] *** Joins: glider (~glider@user/glider)
[09:01:45] *** Joins: tazle (tazle@kapsi.fi)
[09:01:49] *** Joins: elemongw (~elemongw@20.107.36.50)
[09:02:33] *** Quits: the_lanetly_052_ (~the_lanet@194.135.166.91) (Ping timeout: 252 seconds)
[09:02:56] *** Joins: sirdidymus (~sirdidymu@sorcsys.net)
[09:03:50] *** Quits: rgrinberg (~textual@2806:101e:7:7c2f:99ad:1649:a2c7:9e20) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:07:30] *** Quits: CormacAttack (~mac@144.62.50.200) (Quit: WeeChat 3.3)
[09:07:33] *** Quits: mtg (~mtg@209.250.241.226) (*.net *.split)
[09:07:33] *** Quits: In0perable (~PLAYER_1@fancydata.science) (*.net *.split)
[09:07:33] *** Quits: stilbruch (~stilbruch@157.245.122.124) (*.net *.split)
[09:07:33] *** Quits: mdw_ (~root@159.65.86.163) (*.net *.split)
[09:07:33] *** Quits: remedan (~remedan@balak.me) (*.net *.split)
[09:07:33] *** Quits: nf (~n@monade.li) (*.net *.split)
[09:07:33] *** Quits: asmwfi[m] (~repmovsb@2001:470:69fc:105::1:274e) (*.net *.split)
[09:07:33] *** Quits: jaavv[m] (~jaavvmatr@2001:470:69fc:105::1:37b1) (*.net *.split)
[09:07:33] *** Quits: M77hamster7[m] (~M77hamste@2001:470:69fc:105::1:308a) (*.net *.split)
[09:07:33] *** Quits: dalz (~dalz@2001:470:69fc:105::2ea) (*.net *.split)
[09:07:33] *** Quits: arconte[m] (~arcontema@2001:470:69fc:105::1:2fe4) (*.net *.split)
[09:07:33] *** Quits: skyeto[m] (~skyetosky@2001:470:69fc:105::c2fe) (*.net *.split)
[09:07:33] *** Quits: _4p3 (~ape@kanonenjagd.panzer.ninja) (*.net *.split)
[09:07:33] *** Quits: divine (~divine@2001:470:8247:1::31) (*.net *.split)
[09:07:33] *** Quits: adinf (~ariel@2001:19f0:5:5337:5400:3ff:fe6c:38e9) (*.net *.split)
[09:07:33] *** Quits: Riviera (Riviera@user/riviera) (*.net *.split)
[09:07:33] *** Quits: eletrotupi (eletrotupi@user/eletrotupi) (*.net *.split)
[09:07:33] *** Quits: majors (~majors@user/majors) (*.net *.split)
[09:07:33] *** Quits: DrinkyBird (~drinkybir@idlerpg/player/DrinkyBird) (*.net *.split)
[09:07:33] *** Quits: cp- (~cp-@b157153.ppp.asahi-net.or.jp) (*.net *.split)
[09:07:33] *** Quits: vinay (~Vinay@user/vinay-keshava) (*.net *.split)
[09:07:33] *** Quits: fruitypunk (~user@2a01:7c8:aaaa:12:5054:ff:fe69:1df9) (*.net *.split)
[09:07:33] *** Quits: Artea (~Lufia@artea.com.pt) (*.net *.split)
[09:07:33] *** Quits: meowray (~MaskRay@user/meowray) (*.net *.split)
[09:07:34] *** Quits: nikomo (~quassel@nikomo.fi) (*.net *.split)
[09:07:34] *** Quits: shan (shan@cyblog/maintainer/shan) (*.net *.split)
[09:07:34] *** Quits: kernelc_ (~kornel@46.101.204.33) (*.net *.split)
[09:07:34] *** Quits: klys_ (~mdasoh@show.op8.us) (*.net *.split)
[09:07:34] *** Quits: kplant (~kplant@user/kplant) (*.net *.split)
[09:07:34] *** Quits: DarkUranium (~DarkUrani@stdrand.com) (*.net *.split)
[09:07:34] *** Quits: bsandro (~bsandro@139.138.197.56) (*.net *.split)
[09:07:34] *** Quits: Karyon (~Karyon@user/karyon) (*.net *.split)
[09:07:34] *** Quits: Haise0 (~haise01@user/haise01) (*.net *.split)
[09:07:34] *** Quits: riv (river@tilde.team/user/river) (*.net *.split)
[09:07:34] *** Quits: SoF (~skius@user/skius) (*.net *.split)
[09:07:41] *** Joins: nikomo (~quassel@nikomo.fi)
[09:07:42] *** Joins: _4p3 (~ape@kanonenjagd.panzer.ninja)
[09:07:42] *** Joins: eletrotupi (eletrotupi@2600:3c02::f03c:92ff:febb:2d7a)
[09:07:43] *** Joins: DrinkyBird (~drinkybir@idlerpg/player/DrinkyBird)
[09:07:44] *** Joins: divine (~divine@2001:470:8247:1::31)
[09:07:44] *** Joins: meowray (MaskRay@2600:3c01::f03c:91ff:fea1:e018)
[09:07:45] *** Joins: mtg (~mtg@209.250.241.226)
[09:07:47] *** Joins: Artea (~Lufia@artea.com.pt)
[09:07:47] *** Joins: bsandro (~bsandro@139.138.197.56)
[09:07:48] *** Joins: Riviera (Riviera@user/riviera)
[09:07:49] *** Joins: klys (~mdasoh@show.op8.us)
[09:07:56] *** Joins: vinay (~Vinay@user/vinay-keshava)
[09:07:58] *** Joins: cp- (~cp-@b157153.ppp.asahi-net.or.jp)
[09:07:58] *** Joins: fruitypunk (~user@2a01:7c8:aaaa:12:5054:ff:fe69:1df9)
[09:08:01] *** Joins: kernelc (~kornel@46.101.204.33)
[09:08:04] *** Joins: Karyon (~Karyon@user/karyon)
[09:08:07] *** Joins: DarkUranium (~DarkUrani@stdrand.com)
[09:08:07] *** Joins: haise01 (~haise01@user/haise01)
[09:08:10] *** Joins: adinf (~ariel@2001:19f0:5:5337:5400:3ff:fe6c:38e9)
[09:08:12] *** Joins: shan (shan@cyblog/maintainer/shan)
[09:08:19] *** Joins: SoF (~skius@user/skius)
[09:08:26] *** Joins: remedan (~remedan@balak.me)
[09:08:31] *** Joins: nf (~n@monade.li)
[09:08:31] *** Joins: riv (river@tilde.team/user/river)
[09:08:34] *** Joins: mdw_ (~root@159.65.86.163)
[09:08:52] *** Joins: majors (~majors@user/majors)
[09:08:54] *** Quits: soapsudsxx (~soapsudsx@209.221.40.158) (Remote host closed the connection)
[09:09:34] *** Joins: stilbruch (~stilbruch@157.245.122.124)
[09:09:53] *** Joins: kplant (~kplant@user/kplant)
[09:10:17] *** Quits: bch_x (~bch@S01069050ca2cbf63.ok.shawcable.net) (Ping timeout: 256 seconds)
[09:14:14] *** Joins: asmwfi[m] (~repmovsb@2001:470:69fc:105::1:274e)
[09:16:29] *** Joins: skyeto[m] (~skyetosky@2001:470:69fc:105::c2fe)
[09:16:43] *** Joins: Inoperable (~PLAYER_1@fancydata.science)
[09:16:49] *** Joins: arconte[m] (~arcontema@2001:470:69fc:105::1:2fe4)
[09:16:54] *** Joins: dalz (~dalz@2001:470:69fc:105::2ea)
[09:17:14] *** Joins: M77hamster7[m] (~M77hamste@2001:470:69fc:105::1:308a)
[09:17:39] *** Joins: jaavv[m] (~jaavvmatr@2001:470:69fc:105::1:37b1)
[09:19:01] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[09:20:28] *** Quits: davidv7 (~davidv7@user/videogameenjoyer) (*.net *.split)
[09:20:28] *** Quits: buhman (sid411355@user/buhman) (*.net *.split)
[09:20:28] *** Quits: schna (sid484866@id-484866.helmsley.irccloud.com) (*.net *.split)
[09:20:28] *** Quits: hedaera[m] (~hedaerama@2001:470:69fc:105::1:3ef1) (*.net *.split)
[09:20:28] *** Quits: Tom^ (~Tom^@user/tom/x-0773808) (*.net *.split)
[09:20:28] *** Quits: Epakai_ (Epakai@drislock.org) (*.net *.split)
[09:20:28] *** Quits: Beastie (~lcu@user/thebeastie) (*.net *.split)
[09:20:28] *** Quits: EtherNet (~ethernet@user/ethernet) (*.net *.split)
[09:20:28] *** Quits: xSavitar (~xSavitar@user/xsavitar) (*.net *.split)
[09:20:28] *** Quits: citrons_ (~citrons@alt.mondecitronne.com) (*.net *.split)
[09:20:28] *** Quits: DrNick42_ (~DrNick42@bastion.spikeyfishtech.uk) (*.net *.split)
[09:20:28] *** Quits: pr-asadi (~pr-asadi@2602:fccf:1:1150::) (*.net *.split)
[09:20:28] *** Quits: illustris (sid211748@id-211748.ilkley.irccloud.com) (*.net *.split)
[09:20:28] *** Quits: SrPx (sid108780@id-108780.uxbridge.irccloud.com) (*.net *.split)
[09:20:28] *** Quits: dmlloyd (sid331705@redhat/dmlloyd) (*.net *.split)
[09:20:28] *** Quits: lhtseng (sid15322@id-15322.helmsley.irccloud.com) (*.net *.split)
[09:20:28] *** Quits: ikiryo (sid109660@user/ikiryo) (*.net *.split)
[09:20:28] *** Quits: omegatron (~some@p54bd5e02.dip0.t-ipconnect.de) (*.net *.split)
[09:20:28] *** Quits: Roman[m] (~wrongt@2001:470:69fc:105::341e) (*.net *.split)
[09:20:28] *** Quits: ormaaj (~ormaaj@user/ormaaj) (*.net *.split)
[09:20:28] *** Quits: VICultist[m] (~jesingsma@2001:470:69fc:105::1:2bb8) (*.net *.split)
[09:20:28] *** Quits: emias (~holger@home.zedat.fu-berlin.de) (*.net *.split)
[09:20:28] *** Quits: ldericher (~LDer@pantalaimon.yavook.de) (*.net *.split)
[09:20:28] *** Quits: cehteh (~ct@git.pipapo.org) (*.net *.split)
[09:20:28] *** Quits: Fish (~Fish@cartwheel.9grid.fr) (*.net *.split)
[09:20:29] *** Quits: burakcank (~burakcank@has.arrived.and.is.ready-to.party) (*.net *.split)
[09:20:29] *** Quits: LangerJan (~jan@user/langerjan) (*.net *.split)
[09:20:29] *** Quits: mrus (~mrus@149.28.224.172) (*.net *.split)
[09:20:29] *** Quits: disconnect3d (~disconnec@user/disconnect3d) (*.net *.split)
[09:20:40] *** Joins: pr-asadi (~pr-asadi@2602:fccf:1:1150::)
[09:20:42] *** Joins: disconnect3d (~disconnec@user/disconnect3d)
[09:20:42] *** Joins: LangerJan (~jan@user/langerjan)
[09:20:44] *** Joins: citrons (~citrons@alt.mondecitronne.com)
[09:20:44] *** Joins: dmlloyd (sid331705@redhat/dmlloyd)
[09:20:46] *** Joins: schna (sid484866@id-484866.helmsley.irccloud.com)
[09:20:48] *** Joins: buhman (sid411355@user/buhman)
[09:20:50] *** Joins: DrNick42 (~DrNick42@bastion.spikeyfishtech.uk)
[09:20:51] *** Joins: illustris (sid211748@id-211748.ilkley.irccloud.com)
[09:20:52] *** Joins: Beastie (~lcu@dkv8mfyycfr3s--xk0pzt-3.rev.dnainternet.fi)
[09:20:56] *** Joins: lhtseng (sid15322@id-15322.helmsley.irccloud.com)
[09:21:02] *** Joins: emias (~holger@home.zedat.fu-berlin.de)
[09:21:03] *** Joins: Epakai (Epakai@drislock.org)
[09:21:05] *** Joins: Tom^ (~Tom^@98.128.186.71)
[09:21:08] *** Quits: Beastie (~lcu@dkv8mfyycfr3s--xk0pzt-3.rev.dnainternet.fi) (Changing host)
[09:21:08] *** Joins: Beastie (~lcu@user/thebeastie)
[09:21:10] *** Joins: EtherNet (~ethernet@183.pool85-54-113.dynamic.orange.es)
[09:21:14] *** Joins: cehteh (~ct@git.pipapo.org)
[09:21:19] *** Joins: ikiryo (sid109660@id-109660.uxbridge.irccloud.com)
[09:21:20] *** Joins: davidv7 (~davidv7@user/videogameenjoyer)
[09:21:23] *** Quits: ikiryo (sid109660@id-109660.uxbridge.irccloud.com) (Changing host)
[09:21:23] *** Joins: ikiryo (sid109660@user/ikiryo)
[09:21:34] *** Joins: SrPx (sid108780@id-108780.uxbridge.irccloud.com)
[09:21:36] *** Joins: ldericher (~LDer@pantalaimon.yavook.de)
[09:21:36] *** Joins: mrus (~mrus@149.28.224.172)
[09:21:41] *** Joins: Fish (~Fish@cartwheel.9grid.fr)
[09:21:45] *** Joins: shailangsa (~shailangs@host86-186-142-82.range86-186.btcentralplus.com)
[09:21:46] *** Joins: hedaera[m] (~hedaerama@2001:470:69fc:105::1:3ef1)
[09:21:48] *** Tom^ is now known as Guest3174
[09:21:50] *** Joins: burakcank (~burakcank@has.arrived.and.is.ready-to.party)
[09:22:50] *** Joins: Roman[m] (~wrongt@2001:470:69fc:105::341e)
[09:23:13] *** Joins: VICultist[m] (~jesingsma@2001:470:69fc:105::1:2bb8)
[09:24:41] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Quit: Goodbye.)
[09:25:29] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[09:25:51] *** Joins: nicholaus04 (~nicholaus@2607:fb90:e58c:fb6a:5919:1c10:2420:8d8)
[09:26:40] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[09:28:07] *** Joins: nostar__ (~nostar@68.51.221.108)
[09:30:41] *** Quits: nostar__ (~nostar@68.51.221.108) (Client Quit)
[09:30:45] *** Quits: nostart (~nostar@192.154.196.126) (Ping timeout: 256 seconds)
[09:33:03] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[09:34:18] *** Satin is now known as setin
[09:35:03] *** setin is now known as Satin
[09:37:45] *** Joins: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143)
[09:39:19] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[09:39:57] *** Joins: langley (~liskander@102.184.182.181)
[09:41:53] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:42:32] *** Joins: kurahaupo (~kurahaupo@pa49-195-154-60.pa.nsw.optusnet.com.au)
[09:43:32] *** Quits: dansan (~daniel@75.81.148.51) (Ping timeout: 240 seconds)
[09:45:31] *** Joins: xSavitar (~xSavitar@kinserve.com)
[09:45:55] *** xSavitar is now known as Guest2666
[09:49:17] *** Quits: aetnaeus (~qpls@cpeb4750e67d202-cmf81d0fad5840.cpe.net.fido.ca) (Quit: leaving)
[09:50:12] *** Joins: gco (~gco@2601:647:5a00:223:91f0:347:aafc:c5ef)
[09:56:05] *** Quits: Inline__ (~Inline@2a02:908:1252:7a80::117) (Ping timeout: 252 seconds)
[10:00:25] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[10:02:11] *** Quits: langley (~liskander@102.184.182.181) (Remote host closed the connection)
[10:02:30] *** Joins: langley (~liskander@102.184.182.181)
[10:02:54] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[10:03:21] *** Joins: bzng (~bzng4@91-115-29-1.adsl.highway.telekom.at)
[10:03:41] *** Joins: Libero (~Libero@130.43.23.56.dsl.dyn.forthnet.gr)
[10:05:25] *** Quits: langley (~liskander@102.184.182.181) (Remote host closed the connection)
[10:07:50] *** Joins: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com)
[10:08:49] *** Joins: langley (~liskander@102.184.182.181)
[10:10:16] *** Quits: langley (~liskander@102.184.182.181) (Remote host closed the connection)
[10:10:24] *** Joins: jdurand (~jdurand@user/jdurand)
[10:12:43] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:13:40] *** Joins: langley (~liskander@102.184.182.181)
[10:15:46] *** Quits: haliucinas (~haliucina@5.20.153.21) (Ping timeout: 245 seconds)
[10:16:13] *** Quits: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com) (Quit: Client closed)
[10:17:11] *** Quits: okt (560965ea7b@user/okt) (Remote host closed the connection)
[10:17:19] *** Joins: okt (560965ea7b@user/okt)
[10:20:12] *** Joins: CaCode_ (~CaCode@user/cacode)
[10:22:54] *** Joins: aosync (~aws@mx1.aosync.me)
[10:23:02] *** Quits: CaCode (~CaCode@user/cacode) (Ping timeout: 252 seconds)
[10:28:50] *** Quits: jdurand (~jdurand@user/jdurand) (Quit: Leaving)
[10:31:43] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[10:34:13] *** Quits: Libero (~Libero@130.43.23.56.dsl.dyn.forthnet.gr) (Ping timeout: 240 seconds)
[10:39:37] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[10:41:55] *** Guest3174 is now known as Tom^
[10:42:00] *** Joins: night_wulfe (~wulfe@5.181.234.227)
[10:42:04] *** Quits: Tom^ (~Tom^@98.128.186.71) (Changing host)
[10:42:04] *** Joins: Tom^ (~Tom^@user/tom/x-0773808)
[10:45:35] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 252 seconds)
[10:45:55] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[10:46:33] *** Joins: loganlee (~Thunderbi@user/loganlee)
[10:48:09] *** Quits: gry (~quassel@botters/gry) (Ping timeout: 252 seconds)
[10:50:48] *** Joins: langley_ (~liskander@196.158.145.247)
[10:53:22] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[10:54:01] *** Quits: langley (~liskander@102.184.182.181) (Ping timeout: 252 seconds)
[10:54:37] *** vdamewood is now known as Guest1016
[10:54:37] *** Quits: Guest1016 (~vdamewood@fedora/vdamewood) (Killed (zinc.libera.chat (Nickname regained by services)))
[10:54:37] *** vinleod is now known as vdamewood
[10:55:32] *** Joins: the_lanetly_052_ (~the_lanet@194.135.153.194)
[10:55:52] *** Joins: langley (~liskander@196.158.145.247)
[10:56:42] *** Quits: gco (~gco@2601:647:5a00:223:91f0:347:aafc:c5ef) (Quit: ZZZzzz…)
[10:57:27] *** Quits: the_lanetly_052 (~the_lanet@194.135.153.196) (Ping timeout: 256 seconds)
[10:59:14] *** Quits: katnis (uid15849@id-15849.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[10:59:27] *** Quits: langley_ (~liskander@196.158.145.247) (Ping timeout: 265 seconds)
[11:01:18] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Quit: Leaving)
[11:01:56] *** Quits: dohtem (uid524096@user/dohtem) (Quit: Connection closed for inactivity)
[11:04:01] *** Quits: langley (~liskander@196.158.145.247) (Remote host closed the connection)
[11:04:31] *** Joins: langley (~liskander@196.158.145.247)
[11:06:32] *** Joins: the_lanetly_052 (~the_lanet@194.135.152.208)
[11:08:13] *** Quits: the_lanetly_052_ (~the_lanet@194.135.153.194) (Ping timeout: 240 seconds)
[11:08:56] *** Joins: the_lanetly_052_ (~the_lanet@194.135.155.53)
[11:09:46] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[11:11:17] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[11:11:37] *** Quits: the_lanetly_052 (~the_lanet@194.135.152.208) (Ping timeout: 252 seconds)
[11:12:13] *** Joins: kurahaupo_ (~kurahaupo@ppp122-115.static.internode.on.net)
[11:12:30] *** Joins: mrig (~AdiIRC@user/mrig)
[11:13:52] *** Joins: the_lanetly_052 (~the_lanet@194.135.153.101)
[11:14:55] *** Quits: the_lanetly_052_ (~the_lanet@194.135.155.53) (Ping timeout: 252 seconds)
[11:15:25] *** Quits: gitargy (~gitargy@76.78.94.79) (Quit: Leaving)
[11:16:38] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[11:17:20] *** Quits: kurahaupo (~kurahaupo@pa49-195-154-60.pa.nsw.optusnet.com.au) (Ping timeout: 265 seconds)
[11:19:47] *** Joins: iomari891 (~iomari891@105.112.138.38)
[11:21:01] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[11:21:20] *** Quits: joedoe47_ (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 252 seconds)
[11:21:25] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Client Quit)
[11:21:42] *** Joins: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[11:21:59] *** Joins: jjido (~Denis@90.213.58.125)
[11:24:26] *** Joins: the_lanetly_052_ (~the_lanet@194.135.155.220)
[11:25:05] *** Quits: night_wulfe (~wulfe@5.181.234.227) (Ping timeout: 268 seconds)
[11:25:15] *** Joins: Guest98 (~Guest98@cpe-108-184-64-50.socal.res.rr.com)
[11:25:36] *** Quits: Guest98 (~Guest98@cpe-108-184-64-50.socal.res.rr.com) (Client Quit)
[11:25:41] *** Joins: LucaTM (~LucaTM@user/lucatm)
[11:26:02] *** Joins: apache8080 (~apache808@cpe-108-184-64-50.socal.res.rr.com)
[11:26:34] *** Quits: heiner (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2) (Remote host closed the connection)
[11:26:41] *** Quits: heiner_ (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2) (Read error: Connection reset by peer)
[11:27:01] *** Quits: the_lanetly_052 (~the_lanet@194.135.153.101) (Ping timeout: 252 seconds)
[11:27:53] *** Joins: haliucinas (~haliucina@5.20.153.21)
[11:32:32] *** Joins: mrig_ (~AdiIRC@amarseille-658-1-164-72.w86-198.abo.wanadoo.fr)
[11:33:57] *** Joins: aradesh (~aradesh@user/aradesh)
[11:34:43] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:3dd4:62ea:1192:2511) (Ping timeout: 252 seconds)
[11:36:13] *** Quits: mrig (~AdiIRC@user/mrig) (Ping timeout: 240 seconds)
[11:36:17] <apache8080> I am a bit confused about eventfd's and EFD_SEMAPHORE. If I have an eventfd with EFD_SEMAPHORE set then I get that a write to the efd will set the counter and then all of the reads will decrement the counter by one until it is 0. What I don't get is what happens if there is a write in the middle of processes decrementing the read?
[11:36:32] <apache8080> Does the counter get replaced by the write? or does the write block?
[11:38:36] *** Quits: the_lanetly_052_ (~the_lanet@194.135.155.220) (Ping timeout: 265 seconds)
[11:40:56] *** Quits: ugubok (~ugubok@user/ugubok) (Remote host closed the connection)
[11:45:25] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:8a23:3305:79f5:f3b8)
[11:47:32] *** Quits: aosync (~aws@mx1.aosync.me) (Remote host closed the connection)
[11:48:12] *** Joins: aosync (~aws@mx1.aosync.me)
[11:50:44] *** Joins: john99 (~johnny@138.62.221.87.dynamic.jazztel.es)
[11:52:06] *** Quits: aosync (~aws@mx1.aosync.me) (Remote host closed the connection)
[11:52:44] *** Joins: aosync (~aws@mx1.aosync.me)
[11:53:44] *** Quits: langley (~liskander@196.158.145.247) (Remote host closed the connection)
[11:54:16] *** Joins: langley (~liskander@196.158.145.247)
[11:58:34] *** Quits: Red (~Red@97.109-247-81.customer.lyse.net) (Read error: Connection reset by peer)
[11:58:49] *** Joins: reset (~reset@user/reset)
[11:59:17] *** Joins: Hax0r (~Hax0r@93.169.49.84)
[11:59:19] *** Quits: Hax0r (~Hax0r@93.169.49.84) (Max SendQ exceeded)
[11:59:37] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[11:59:44] *** Joins: Hax0r (~Hax0r@93.169.49.84)
[12:01:00] *** Joins: EdFletcher (~PKD@user/edfletcher)
[12:01:16] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[12:03:53] *** Quits: Hax0r (~Hax0r@93.169.49.84) (Client Quit)
[12:04:19] *** Joins: Hax0r (~Hax0r@93.169.49.84)
[12:05:09] *** aosync is now known as aws
[12:05:29] *** aws is now known as alews
[12:05:33] *** Joins: seninha (~seninha@user/seninha)
[12:06:32] *** Joins: mokulus (~mokulus@user/mokulus)
[12:08:31] *** Quits: Hax0r (~Hax0r@93.169.49.84) (Client Quit)
[12:09:59] *** Joins: jusski (~user@78-63-85-123.static.zebra.lt)
[12:10:39] *** Quits: simon323 (~simon323@2409:8a34:468:83d0:dce7:c14c:1815:2473) (Ping timeout: 252 seconds)
[12:12:14] *** Quits: alews (~aws@mx1.aosync.me) (Remote host closed the connection)
[12:12:24] *** Joins: aosync (~aws@mx1.aosync.me)
[12:12:29] *** Quits: langley (~liskander@196.158.145.247) (Ping timeout: 252 seconds)
[12:12:41] *** Quits: reset (~reset@user/reset) (Quit: reset)
[12:14:27] *** Joins: reset (~reset@user/reset)
[12:14:33] *** Quits: mokulus (~mokulus@user/mokulus) (Quit: WeeChat 3.3)
[12:14:35] *** Joins: Red (~Red@97.109-247-81.customer.lyse.net)
[12:16:22] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[12:19:06] *** Joins: loganlee (~Thunderbi@user/loganlee)
[12:22:24] *** Quits: alch (~alch@151.46.40.224) (Read error: Connection reset by peer)
[12:23:51] *** Quits: markb1 (~markb1@108-192-134-222.lightspeed.rlghnc.sbcglobal.net) (Ping timeout: 252 seconds)
[12:24:38] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:560:d061:bdcc:9427)
[12:26:18] *** Joins: alch (~alch@151.46.5.15)
[12:26:54] *** Joins: slidercrank (~slidercra@user/slidercrank)
[12:29:26] *** Joins: Libero (~Libero@77.49.128.70.dsl.dyn.forthnet.gr)
[12:29:59] *** Quits: Itaru (~DaSH@ro2.flokinet.is) (Remote host closed the connection)
[12:30:09] *** Quits: Deewiant (~deewiant@2001:470:69fc:105::2fd3) (Quit: You have been kicked for being idle)
[12:30:24] *** Joins: Itaru (~DaSH@ro2.flokinet.is)
[12:31:32] *** AAAAA_DRAGON is now known as A_Dragon
[12:35:09] *** Quits: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 265 seconds)
[12:35:24] *** Joins: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[12:37:19] *** Quits: aosync (~aws@mx1.aosync.me) (Remote host closed the connection)
[12:37:29] *** Joins: aosync_ (~aws@mx1.aosync.me)
[12:38:05] *** Quits: aosync_ (~aws@mx1.aosync.me) (Remote host closed the connection)
[12:38:14] *** Joins: aosync (~aws@mx1.aosync.me)
[12:38:35] *** Quits: Libero (~Libero@77.49.128.70.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[12:43:21] *** Joins: langley (~liskander@196.157.98.96)
[12:43:27] *** Joins: river (~My_user_n@tilde.team/user/river)
[12:45:44] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[12:49:25] *** Quits: karakedi (~eAC53C340@user/karakedi) (Read error: Connection reset by peer)
[12:50:36] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[12:52:28] *** Quits: langley (~liskander@196.157.98.96) (Remote host closed the connection)
[12:52:52] *** Joins: langley (~liskander@196.157.98.96)
[12:53:20] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[12:55:20] *** Joins: pulse (~pulse@user/pulse)
[12:57:35] *** Joins: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com)
[12:57:50] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[12:58:46] *** Joins: gproto23 (~gproto23@user/gproto23)
[13:00:01] *** Joins: Libero (~Libero@77.49.128.70.dsl.dyn.forthnet.gr)
[13:02:43] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 252 seconds)
[13:03:09] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[13:03:11] *** Quits: apache8080 (~apache808@cpe-108-184-64-50.socal.res.rr.com) (Quit: Connection closed)
[13:04:52] *** Joins: karakedi (~eAC53C340@user/karakedi)
[13:05:05] *** Joins: loganlee (~Thunderbi@user/loganlee)
[13:05:29] *** Quits: on^ (~on@68.101.58.90) (Remote host closed the connection)
[13:06:07] *** Quits: loganlee (~Thunderbi@user/loganlee) (Client Quit)
[13:07:29] *** Quits: langley (~liskander@196.157.98.96) (Remote host closed the connection)
[13:07:54] *** Joins: cart_man (~rynot@62.60.61.36)
[13:08:38] *** Quits: cart_man (~rynot@62.60.61.36) (Read error: Connection reset by peer)
[13:09:22] *** Joins: cart_man (~rynot@62.60.61.36)
[13:10:03] *** Quits: Alhazred (~Alhazred@s91904425.blix.com) (Ping timeout: 256 seconds)
[13:12:38] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[13:13:16] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[13:15:19] *** Joins: earnest (~earnest@user/earnestly)
[13:15:34] *** Joins: langley (~liskander@196.157.98.96)
[13:16:27] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[13:17:20] *** Joins: simplyjimin[m] (~simplyjim@2001:470:69fc:105::1:4793)
[13:20:05] *** Joins: arinov (~arinov@31.142.57.149)
[13:21:59] *** Joins: dsrt^ (~dsrt@68.101.58.90)
[13:22:42] *** Joins: Alhazred (~Alhazred@s91904425.blix.com)
[13:23:40] *** Joins: simon323 (~simon323@2409:8a34:468:83d0:d1e9:25c8:906:7a0)
[13:23:56] *** Joins: plastico (~plastico@neomutt/plastico)
[13:25:49] *** Quits: langley (~liskander@196.157.98.96) (Ping timeout: 240 seconds)
[13:33:03] *** Joins: V-T60 (~v@gateway/tor-sasl/v-t60)
[13:33:42] *** Quits: Dreg (~Dreg@fr33project.org) (Read error: Connection reset by peer)
[13:33:58] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[13:34:16] *** Joins: Dreg (~Dreg@fr33project.org)
[13:34:28] *** Joins: seninha (~seninha@user/seninha)
[13:38:34] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[13:39:01] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[13:39:53] *** Lord_of_Life_ is now known as Lord_of_Life
[13:40:07] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 252 seconds)
[13:40:42] *** Joins: gproto23 (~gproto23@user/gproto23)
[13:41:05] *** Joins: AsenMx (~AsenMx@user/asenmx)
[13:45:39] *** Quits: vimart (~vimart@109.249.179.169) (Quit: WeeChat 2.8)
[13:45:56] *** Quits: mrig_ (~AdiIRC@amarseille-658-1-164-72.w86-198.abo.wanadoo.fr) (Quit: Going offline, see ya! (www.adiirc.com))
[13:46:25] *** Joins: mrig (~AdiIRC@user/mrig)
[13:47:22] *** Quits: kuoi (~kuoi@109.175.166.60) (Quit: kuoi)
[13:50:06] *** Quits: Dreg (~Dreg@fr33project.org) (Read error: Connection reset by peer)
[13:50:46] *** Joins: Dreg (~Dreg@fr33project.org)
[13:52:51] *** Joins: Thedarkb-Desktop (~Thedarkb@2001:bb6:b403:e042:6819:4acb:74ce:113d)
[13:53:55] *** Joins: Klinda (~superleag@user/klinda)
[13:55:10] *** Joins: X-Scale` (~ARM@25.55.43.5.rev.vodafone.pt)
[13:55:49] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 240 seconds)
[13:56:13] *** Joins: AsenMx (~AsenMx@user/asenmx)
[13:56:35] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[13:58:39] *** Quits: X-Scale (~ARM@92.250.96.131) (Ping timeout: 265 seconds)
[13:58:39] *** X-Scale` is now known as X-Scale
[14:00:00] *** Joins: joedoe47_ (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[14:01:25] *** Quits: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 240 seconds)
[14:04:18] *** Quits: decartes_ (sid240036@id-240036.helmsley.irccloud.com) ()
[14:04:28] *** Quits: alch (~alch@151.46.5.15) (Read error: Connection reset by peer)
[14:04:34] *** Joins: decartes_ (sid240036@id-240036.helmsley.irccloud.com)
[14:05:09] *** Quits: decartes_ (sid240036@id-240036.helmsley.irccloud.com) (Client Quit)
[14:05:22] *** Joins: decartes (sid240036@id-240036.helmsley.irccloud.com)
[14:06:55] *** Joins: nofx (~i.am@189.26.169.41.dynamic.adsl.gvt.net.br)
[14:08:17] *** Joins: alch (~alch@151.36.140.69)
[14:10:15] *** Quits: V-T60 (~v@gateway/tor-sasl/v-t60) (Ping timeout: 276 seconds)
[14:11:43] *** Joins: fmsd__ (~no@160.177.199.94)
[14:13:22] *** Quits: Masklin_Gurder (~joel@h-155-4-23-152.A230.priv.bahnhof.se) (Quit: Konversation terminated!)
[14:14:53] *** Joins: Masklin_Gurder (~joel@h-155-4-23-152.A230.priv.bahnhof.se)
[14:15:37] *** Joins: larry87 (~quassel@mobile-166-172-122-194.mycingular.net)
[14:22:10] *** Joins: larry87_ (~quassel@mobile-166-172-122-194.mycingular.net)
[14:22:57] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[14:24:30] *** Guest2666 is now known as xSavitar
[14:24:41] *** Quits: xSavitar (~xSavitar@kinserve.com) (Changing host)
[14:24:41] *** Joins: xSavitar (~xSavitar@user/xsavitar)
[14:25:09] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[14:25:27] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[14:28:37] *** Quits: larry87_ (~quassel@mobile-166-172-122-194.mycingular.net) (Ping timeout: 240 seconds)
[14:30:13] *** Quits: cart_man (~rynot@62.60.61.36) (Ping timeout: 240 seconds)
[14:30:13] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:30:58] *** Joins: smartin (~Thunderbi@88.135.18.171)
[14:30:58] *** Joins: csrf (~csrf@user/csrf)
[14:32:42] *** Quits: cursey (~cursey@user/cursey) (Quit: bye)
[14:33:38] *** Joins: langley (~liskander@196.154.133.180)
[14:35:29] *** Quits: arinov (~arinov@31.142.57.149) (Ping timeout: 252 seconds)
[14:35:55] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[14:38:27] *** Quits: chenqisu1 (~03cia7d@183.217.201.63) (Ping timeout: 256 seconds)
[14:39:22] *** Joins: V-T60 (~v@gateway/tor-sasl/v-t60)
[14:41:07] *** Quits: larry87 (~quassel@mobile-166-172-122-194.mycingular.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:41:21] *** Joins: bonbon (~bonbon@user/bonbon)
[14:42:29] *** Quits: nicholaus04 (~nicholaus@2607:fb90:e58c:fb6a:5919:1c10:2420:8d8) (Quit: Joined Game)
[14:46:55] <milia[m]> Hey all, gm. Which unit testing framework would you suggest? I've found an old SO answer (https://stackoverflow.com/a/65845/3696141) that mentions a bunch.
[14:47:21] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[14:47:51] *** Joins: cursey (~cursey@user/cursey)
[14:50:51] <john99> http://cpputest.github.io/ i use that and its fine and not very big or dificult to configure
[14:51:10] <john99> (i dont use the memory features and rely on memaddress for that)
[14:51:41] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[14:52:09] <trenka>  milia[m]: I like cgreen, it's in the list
[14:53:02] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[14:53:20] <trenka> I was forced to use cpputest some time ago (7 years ago). For C it had limitied functionality
[14:56:24] *** Quits: CaCode_ (~CaCode@user/cacode) (Quit: Leaving)
[14:58:49] *** Quits: Itaru (~DaSH@ro2.flokinet.is) (Quit: See Ya Later!)
[14:59:10] *** Joins: arinov (~arinov@31.142.57.149)
[14:59:30] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[15:00:41] <john99> ? wich is the limitation? may be now doesnt exist or i simply didnt found the case
[15:01:18] <john99> (and yes is a C++ library, but i usually have mix code then for me is fine)
[15:03:16] *** Joins: chenqisu1 (~03cia7d@183.217.201.63)
[15:04:14] <milia[m]> Thanks, I'll check them both.
[15:05:35] *** Quits: langley (~liskander@196.154.133.180) (Quit: leaving)
[15:06:04] *** Quits: aosync (~aws@mx1.aosync.me) (Remote host closed the connection)
[15:06:12] *** Joins: alews (~aws@mx1.aosync.me)
[15:06:24] *** Quits: alews (~aws@mx1.aosync.me) (Remote host closed the connection)
[15:06:33] *** Joins: alews (~aws@mx1.aosync.me)
[15:10:51] *** Joins: cart_man (~rynot@213.205.241.185)
[15:12:39] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 276 seconds)
[15:13:16] *** Joins: tejr (~tejr@user/tejr)
[15:19:53] *** Joins: donald1 (~donald@2a01:e0a:95e:7ca0:4d4d:b2e6:7414:759f)
[15:21:54] *** Quits: chenqisu1 (~03cia7d@183.217.201.63) (Ping timeout: 265 seconds)
[15:22:02] *** Quits: shailangsa (~shailangs@host86-186-142-82.range86-186.btcentralplus.com) ()
[15:23:26] *** Quits: Libero (~Libero@77.49.128.70.dsl.dyn.forthnet.gr) (Quit: Leaving)
[15:28:30] *** Quits: V-T60 (~v@gateway/tor-sasl/v-t60) (Remote host closed the connection)
[15:28:40] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 265 seconds)
[15:28:41] *** Joins: V-T60 (~v@gateway/tor-sasl/v-t60)
[15:29:34] *** Joins: AsenMx (~AsenMx@user/asenmx)
[15:32:37] *** Quits: donald1 (~donald@2a01:e0a:95e:7ca0:4d4d:b2e6:7414:759f) (Ping timeout: 240 seconds)
[15:32:50] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[15:33:30] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[15:33:40] *** Joins: nuxil (~nuxil@141.195.51.213)
[15:35:07] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[15:35:34] *** Quits: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com) (Quit: Client closed)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:39:20] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:89eb:9409:2790:a552)
[15:39:20] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:89eb:9409:2790:a552) (Changing host)
[15:39:20] *** Joins: skapata (~Skapata@user/skapata)
[15:43:01] *** Quits: arinov (~arinov@31.142.57.149) (Ping timeout: 240 seconds)
[15:47:53] *** Joins: Maaaanu (~manuel@ip5b429007.dynamic.kabel-deutschland.de)
[15:48:58] <pragma-> floatcomplex: what do you have against closures?
[15:49:46] *** Quits: fmsd__ (~no@160.177.199.94) (Remote host closed the connection)
[15:50:16] *** Joins: fmsd__ (~no@160.177.199.94)
[15:51:09] *** Quits: Jck_true (~jcktrue@user/jck-true/x-0200799) (Quit: The Lounge - https://thelounge.chat)
[15:51:23] <john99> hi, someone here writed programs for run in containers have some good guide or practices for logging? before move to k8s i wanted use journald (shipping in the system) but now not seem very good idea
[15:51:49] *** Quits: EtherNet (~ethernet@183.pool85-54-113.dynamic.orange.es) (Quit: WeeChat 3.4-dev)
[15:51:57] *** Joins: Jck_true (~jcktrue@user/jck-true/x-0200799)
[15:52:29] *** Joins: EtherNet (~ethernet@user/ethernet)
[15:55:58] *** Joins: kish` (~sid742412@user/aqua)
[15:56:08] *** Quits: kish` (~sid742412@user/aqua) (Remote host closed the connection)
[15:56:18] *** Joins: donald1 (~donald@2a01:e0a:95e:7ca0:4d4d:b2e6:7414:759f)
[15:56:24] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[15:56:26] *** Joins: kish` (~sid742412@user/aqua)
[15:58:27] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[15:58:28] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[15:59:03] * pragma- stares at "variaty"
[15:59:39] * pragma- clicks on fizzie's http://www.open-std.org/jtc1/sc22/wg14/www/docs/n2734.pdf link and notes that the fifth word in the first paragraph is misspelled.
[15:59:49] * pragma- twitches involuntarily.
[16:00:01] <donald1> does somebody uses frama-c? I need help
[16:00:54] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:03:37] *** Joins: arinov (~arinov@31.142.57.149)
[16:04:19] *** Joins: X-Scale` (~ARM@31.22.146.100)
[16:05:01] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Quit: This computer has gone to sleep)
[16:05:58] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[16:06:13] *** Quits: X-Scale (~ARM@25.55.43.5.rev.vodafone.pt) (Ping timeout: 240 seconds)
[16:06:13] *** X-Scale` is now known as X-Scale
[16:08:03] *** baltazar is now known as baltazaar
[16:11:29] <pragma-> These pdfs are entirely way too long.
[16:12:24] *** Joins: kurahaupo (~kurahaupo@pa49-195-154-60.pa.nsw.optusnet.com.au)
[16:12:47] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[16:13:29] <pragma-> Oh, the function literals one is actually 13 pages, and the remaining 200 pages are just drafts of how the standard would be updated.
[16:13:37] *** Quits: kurahaupo_ (~kurahaupo@ppp122-115.static.internode.on.net) (Ping timeout: 265 seconds)
[16:14:29] *** Quits: donald1 (~donald@2a01:e0a:95e:7ca0:4d4d:b2e6:7414:759f) (Ping timeout: 252 seconds)
[16:14:33] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[16:16:15] *** Quits: alews (~aws@mx1.aosync.me) (Remote host closed the connection)
[16:16:36] *** Joins: PatchByte (~PatchByte@p200300d8ef0228003664a9fffed44247.dip0.t-ipconnect.de)
[16:16:40] <PatchByte> hello
[16:20:54] *** Joins: alews (~aws@mx1.aosync.me)
[16:21:03] <PatchByte> hello alwes
[16:21:11] <PatchByte> alews*
[16:21:14] *** Joins: szutt (~szutt@116.37.2.145)
[16:21:41] *** Quits: PatchByte (~PatchByte@p200300d8ef0228003664a9fffed44247.dip0.t-ipconnect.de) (Quit: Verlassend)
[16:23:21] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[16:25:51] *** Joins: random-nick (~random-ni@87.116.181.93)
[16:27:57] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:28:00] *** Joins: shivesh (~shivesh@user/shivesh)
[16:28:24] *** Joins: fmsd___ (~no@160.177.199.94)
[16:30:37] *** Quits: fmsd__ (~no@160.177.199.94) (Ping timeout: 240 seconds)
[16:33:12] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:346b:8ef4:4433:cb30) (Read error: Connection reset by peer)
[16:33:58] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:346b:8ef4:4433:cb30)
[16:37:53] *** Joins: retr0 (~retr0@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net)
[16:37:57] *** Parts: retr0 (~retr0@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net) ()
[16:39:43] *** Quits: kurahaupo (~kurahaupo@pa49-195-154-60.pa.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[16:39:54] *** Joins: cousteau_ (~cousteau@user/cousteau)
[16:40:40] *** Joins: jjido (~Denis@90.213.58.125)
[16:41:25] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:8a23:3305:79f5:f3b8) (Quit: Leaving)
[16:43:35] *** Joins: Libero (~Libero@77.49.128.70.dsl.dyn.forthnet.gr)
[16:46:00] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Quit: This computer has gone to sleep)
[16:46:37] *** Quits: arinov (~arinov@31.142.57.149) (Ping timeout: 240 seconds)
[16:47:25] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 240 seconds)
[16:47:49] *** Joins: AsenMx (~AsenMx@user/asenmx)
[16:49:11] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: Goodbye)
[16:56:15] <DarkUranium> Hm. I'm kinda curious. Why *is* `char` in C called that? Clearly some sort of a historical reason, but *what*. (as opposed to, say, `byte`)
[16:56:39] <DarkUranium> I know string literals are arrays of `char`, so in that sense, it is also for characters. But surely there must be another reason?
[16:56:58] *** Joins: tradar (~tradar@user/tradar)
[16:57:27] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Remote host closed the connection)
[16:57:52] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[16:59:43] <cousteau_> my pet theory is that it's because it's big enough to hold a character, which back in the day was probably a predominant thing (people were interested in processing characters, not bytes; bytes were introduced to represent characters, not the other way around), BUT C preferred not to use "character" to avoid subtle differences
[17:00:55] <mort> yeah I'd guess people mostly used ints for numeric stuff, and chars really only for text
[17:00:58] <cousteau_> every (ASCII) character is a char, but not every char is a character, so char and character are not quite the same thing, hence why they used different names.  I've seen C do that for several other types, so I suspect that might have been the intention
[17:01:24] <cousteau_> int (not integer), float (not real), etc
[17:02:56] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[17:05:45] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[17:08:41] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[17:08:58] <DarkUranium> cousteau_: Not sure if that holds water, given how much C is into abbreviations. E.g. stdlib.
[17:09:29] * pragma- stares stupidly at `creat`
[17:09:41] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 265 seconds)
[17:10:10] <DarkUranium> Ha, yeah. Though that's not stdC per se (was it part of the original Unix, though?)
[17:11:43] * dave0 wipes up pragma-'s drool
[17:11:43] *** Joins: brad_mssw (~bhouse@2601:344:4100:b490:4818:bb0e:95d8:dae5)
[17:12:51] <DarkUranium> lol
[17:13:51] <cousteau_> pragma-: because it doesn't actually create, duh
[17:14:37] <cousteau_> DarkUranium: you have to admit that "float" is longer than "real" though
[17:14:53] <DarkUranium> cousteau_: but shorter than "floating_point"
[17:15:28] <cousteau_> oh that's another thing.  Maybe it's not ensured that floats use floating point representation
[17:16:03] <DarkUranium> AFAIK it is, though not necessarily IEEE float.
[17:18:50] *** Quits: Burgundy (~yomon@79.115.213.171) (Ping timeout: 252 seconds)
[17:20:16] <fizzie> It's also not necessarily binary; but it's still a floating-point model.
[17:20:32] <cousteau_> yeah maybe you're right
[17:20:47] *** Joins: doofenshmirtz (~farawayas@103.160.128.7)
[17:21:40] <fizzie> C11 5.2.4.2.2p2: "A /floating-point number/ (x) is defined by the following model: x = s b^e \sum_{k=1}^p f_k b^{-k}, e_min <= e <= e_max"
[17:22:15] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 265 seconds)
[17:22:39] <cousteau_> yeah you're totally right
[17:23:00] <cousteau_> then they use "float" instead of "floating point" because, uh... copyright issues?
[17:23:08] *** Joins: AsenMx (~AsenMx@user/asenmx)
[17:23:15] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[17:23:17] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[17:23:17] <cousteau_> ok the "it's shorter" hypothesis gets stronger
[17:23:30] *** Joins: gproto23 (~gproto23@user/gproto23)
[17:23:32] <pragma-> flt is even shorter
[17:23:32] <dave0> "flot"
[17:23:35] <dave0> haha
[17:23:45] <fizzie> flt and dbl would be just fine.
[17:23:53] <cousteau_> specially compared with "double", which is an absurd "let's shove an implementation detail of how big these floating point values are"
[17:23:56] <pragma-> int flt dbl lng
[17:23:59] <pragma-> chr
[17:24:00] <fizzie> chr
[17:24:01] <cousteau_> "yeah twice as big as floats"
[17:24:04] <pragma-> i prefer byt
[17:24:12] * pragma- is still annoyed that char isn't named byte
[17:24:15] <cousteau_> I like flot
[17:24:19] <cousteau_> it's like creat
[17:24:22] <fizzie> But what about shourt? shrt is too long, but both sht and srt sound wrong.
[17:24:25] <cousteau_> remove one random vowel
[17:24:28] <fizzie> s/shourt/short/
[17:24:29] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[17:24:40] *** Quits: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143) (Quit: Leaving)
[17:24:46] <pragma-> like anybody uses short anyway
[17:24:48] <cousteau_> short is longer than long, and long is shorter than short, wtf English?
[17:24:58] <cousteau_> fizzie: ah I thought shourt was the British spelling
[17:25:36] * pragma- considers shr
[17:25:46] * cousteau_ prefers sht
[17:25:47] <dave0> shift right
[17:25:54] <cousteau_> shit
[17:26:01] <kaichiuchu> fun task: compiling C89 on visual c++ 6.0
[17:26:03] <cousteau_> er, shift
[17:26:13] <fizzie> Proposing chr, hrt, int, lng, LNG, flt and dbl as the set of the standard numeric types.
[17:26:13] *** Quits: Alhazred (~Alhazred@s91904425.blix.com) (Ping timeout: 240 seconds)
[17:26:20] <fizzie> LNG, of course, would be the equivalent of `long long`.
[17:26:25] <cousteau_> kaichiuchu: try c99 and then we speak
[17:26:32] <apotheon> cousteau_: Please tell me that was intentional.
[17:26:34] <kaichiuchu> heh
[17:26:40] <dave0> whl for while
[17:26:46] <pragma-> shouldn't that be chr, CHR, flt, FLT, lng, LNG then?
[17:26:48] <cousteau_> apotheon: no no totally accidental pls don't ban me
[17:26:57] *** Joins: soapsudsxx (~soapsudsx@209.221.40.158)
[17:27:18] <apotheon> awww
[17:27:34] <apotheon> Life is boring again.
[17:27:38] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[17:27:59] <apotheon> maybe "dull", not "boring", like a blunt instrument rather than a drill
[17:28:00] <cousteau_> (ok maybe it might or might not have been intentional)
[17:28:04] <river> if its boring change the channel!
[17:28:15] <fizzie> Maybe they could just be i0, i1, i2, i3, i4 for signed char, short, int, long and long long; u0 .. u4 for corresponding unsigned types; f0, f1 and f2 for float, double and long double; and c for plain char.
[17:28:40] <pragma-> you mean b for plain byte
[17:28:48] <apotheon> yes, b
[17:29:05] <fizzie> I wouldn't want a "byte" type have implementation-defined signedness.
[17:29:16] <fizzie> But maybe you could have a standard header that has a `typedef u0 b;` then.
[17:29:20] <dave0> pfft you're missing the forest for the trees.. if you want less characters, remove all the whitespace
[17:29:21] <cousteau_> ugh, and make it illegal to have "b" as a variable name?
[17:29:30] <cousteau_> what kind of stupid language would be like that?
[17:29:33] <pragma-> let's just get rid of implementation-defined signedness
[17:29:34] * cousteau_ stares at Perl
[17:30:20] <apotheon> Actually, char/byte is such a special child it should just be spelled out as "byte".
[17:30:32] <DarkUranium> <fizzie> Proposing chr, hrt, int, lng, LNG, flt and dbl as the set of the standard numeric types.
[17:30:37] <DarkUranium> c h i l L f d
[17:31:00] <DarkUranium> ... also, it's uncanny what this spells, just noticed. Ha.
[17:31:23] <cousteau_> y'all pretty much inventing Python's struct module
[17:31:32] <DarkUranium> I was gonna say MUMPS.
[17:31:35] <cousteau_> and/or Hungarian notation
[17:31:39] <DarkUranium> (the language)
[17:32:02] <apotheon> Why are we trying to abbreviate type names, again?
[17:32:04] <DarkUranium> MUMPS allows abbreviating every keyword to 1 character.
[17:32:13] <cousteau_> counter-argument: `double` should be called `long float`
[17:32:21] <cousteau_> and `long long float` for long double
[17:32:22] <apotheon> Does MUMPS have < 27 keywords?
[17:32:39] <cousteau_> and `short float` for half-precision binary16 thingies
[17:32:50] <apotheon> cousteau_: seems reasonable
[17:33:09] <DarkUranium> apotheon: doubt it, given that even stuff like `open` is a keyword.
[17:33:15] <DarkUranium> It probably makes use of context.
[17:33:16] <cousteau_> and make %Lf be spelled %llf (or %llu be %Lu)
[17:33:42] *** Joins: Franciman (~Franciman@mx1.fracta.dev)
[17:33:54] <cousteau_> DarkUranium: maybe it allows single letters when there isn't any other keyword with that initial?
[17:33:59] <cousteau_> like Tcl sometimes
[17:34:02] <DarkUranium> cousteau_, apotheon: see Appendix 7: http://www.faqs.org/faqs/m-technology-faq/part2/
[17:34:03] <candide> Title of DarkUranium's link: M Technology and MUMPS Language FAQ, Part 2/2
[17:34:13] <Franciman> hi all, I am trying to understand the concept of alignment. why is it needed to align data?
[17:34:52] <cousteau_> Franciman: some processors might not be able to fetch data if it's not aligned
[17:35:25] <DarkUranium> x86 was a historical oddity in that it *could*.
[17:35:32] <Franciman> so aligning is about putting padding data
[17:35:38] <Franciman> so that the next address is fetchable?
[17:35:39] <apotheon> cousteau_: When I create PLang, I want your help.
[17:35:40] <cousteau_> e.g. some 32-bit processors might only allow fetching data from memory in whole 4-byte words, so you can read the 4 bytes starting at position 0 or 4, but not 2
[17:35:56] <DarkUranium> So the fact that you *can* fetch unaligned data is the weird one, historically speaking (modern CPUs do tend to allow it, due to x86 popularizing bad alignment-related coding practices)
[17:36:07] <cousteau_> for reading bytes 2,3,4,5 you need to read the block {0123} and {4567} and do the shifting yourself
[17:36:14] <apotheon> s/When/"When"/
[17:36:16] <DarkUranium> Franciman: padding is not alignment
[17:36:23] <DarkUranium> There is some relation, but it's quite indirect.
[17:36:39] <cousteau_> so it takes 3 operations (2 reads + one or more shifting and logic things) to fetch an unaligned word
[17:36:40] <Franciman> uhm 
[17:36:55] <Franciman> ok
[17:36:57] <cousteau_> most implementations simply forbid that, and only allow aligned accesses
[17:37:26] <Franciman> DarkUranium: so padding is a tool to achieve alignment
[17:37:32] <Franciman> ?
[17:37:42] <cousteau_> if C were to allow unaligned access, it would need to check EVERY time if the word is aligned, and do the weird thing if it isn't, resulting in a performance penalty EVERY time a word is read
[17:37:54] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Quit: This computer has gone to sleep)
[17:37:57] *** Quits: john99 (~johnny@138.62.221.87.dynamic.jazztel.es) (Remote host closed the connection)
[17:37:58] <DarkUranium> Basically, yes. Or in some (non-C) cases, to leave space for future expansion.
[17:38:27] <Franciman> cousteau_: makes sense
[17:38:32] <Franciman> but then how to achieve alignment?
[17:38:37] <Franciman> if not by padding 
[17:39:08] <DarkUranium> You can often align things *without* padding. (not always)
[17:39:11] <DarkUranium> By reordering, etc.
[17:39:17] <Franciman> I see
[17:39:17] <cousteau_> being smart
[17:39:22] <cousteau_> ever played tetris?  :)
[17:39:30] <Franciman> so what alignment is about is putting data in addressable memory
[17:40:20] <Franciman> but then I don't understand what _Alignof does
[17:40:26] <cousteau_> instead of having {char, int, char, short}, which gets padded as {char, *, *, *, int, char, * short}, have {char, char, short, int}
[17:40:41] <Franciman> what does it return?
[17:40:48] <Franciman> nice cousteau_ I understand
[17:40:50] <Franciman> thanks
[17:40:59] <cousteau_> _Alignof yields (rather than returns) the alignment of a certain type
[17:41:30] <Franciman> and what does it mean?
[17:41:35] *** Joins: kuoi (~kuoi@109.175.166.58)
[17:41:59] <cousteau_> for example, I think in x64, _Alignof (double) is 8, because that implementation has an 8-bye (64-bit) data bus, and fetches doubles in a single read operation
[17:42:10] <apotheon> DarkUranium: That M link is 403 Forbidden in WebKit browsers, apparently.
[17:42:15] <cousteau_> so doubles are aligned to blocks of 8 bytes
[17:42:37] <DarkUranium> apotheon: huh.
[17:42:57] <cousteau_> you can only have a double starting at a memory address that is a multiple of 8, and the size of a struct containing doubles will always be a multiple of 8
[17:43:12] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[17:43:29] <Franciman> ok I am confused lol
[17:43:37] <DarkUranium> _Alignof that struct will also be a multiple of 8. Can't align the double *inside* of the struct if the alignment of the struct itself is lower.
[17:43:38] <cousteau_> But in x86, iirc, it's only 32 bits (4 bytes), and doubles are always read in 2 steps (first the first 32 bits, then the last 32 bits)
[17:43:57] <DarkUranium> cousteau_: AFAIK, the latter is different between MSVC & GCC.
[17:44:02] *** Joins: kspalaiologos (~kspalaiol@user/kspalaiologos)
[17:44:18] <cousteau_> ,cc _Alignof (double)
[17:44:20] <candide> cousteau_: no output: _Alignof(double) = 8
[17:44:24] <cousteau_> ,cc -m32 _Alignof (double)
[17:44:26] <candide> cousteau_: no output: _Alignof(double) = 4
[17:44:30] <DarkUranium> MSVC uses 8-byte alignment even on x86.
[17:44:33] *** Joins: quartz (~quartz@user/quartz)
[17:44:36] <cousteau_> DarkUranium: is it?  weird
[17:44:41] <DarkUranium> It *is* slightly faster.
[17:44:45] <DarkUranium> (even on x86)
[17:44:48] <cousteau_> specially since MSVC has 32-bit longs even in x64
[17:44:52] <DarkUranium> Hence -malign-double.
[17:44:58] <cousteau_> lol
[17:45:00] <cousteau_> malign
[17:45:28] <DarkUranium> Better than -felato-tool (which, yes, *was* an actual parameter in some versions of GCC)
[17:45:33] <DarkUranium> -felatio-tool *
[17:45:48] *** Quits: soapsudsxx (~soapsudsx@209.221.40.158) (Remote host closed the connection)
[17:46:08] <Franciman> so uhm cousteau_ the alignment of a type
[17:46:10] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[17:46:14] <DarkUranium> Correction, -felate-tool.
[17:46:25] <DarkUranium> tl;dr, something called TaOS got renamed to Elate. Changing -f${XYZ}-tool from -ftaos-tool to -felate-tool.
[17:46:37] <cousteau_> DarkUranium: god, for real?
[17:46:45] <Franciman> tells you what the pointer must be  multiple of?
[17:46:47] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Client Quit)
[17:46:49] <cousteau_> Franciman: yes
[17:46:50] <DarkUranium> cousteau_: yup.
[17:47:01] *** Joins: gproto23 (~gproto23@user/gproto23)
[17:47:32] <DarkUranium> cousteau_: found it: https://news.ycombinator.com/item?id=9808752
[17:47:32] <candide> Title of DarkUranium's link: I worked on the gcc back-end for TAOS. One requirement was a special output form... | Hacker News
[17:47:36] <apotheon> It looks like faqs.org as a whole doesn't work in WebKit here.
[17:48:25] <DarkUranium> cousteau_: TaOS was a *really* interesting project, BTW, if're feeling like reading up on it.
[17:48:55] <cousteau_> I've seen a `bjobs` command so I believe you
[17:49:06] <DarkUranium> lol
[17:49:11] <cousteau_> basically the same thing after all
[17:50:45] <Franciman> do you have any link explaining the while alignment of types concept?
[17:50:47] <Franciman> by chance
[17:50:49] *** Quits: cousteau_ (~cousteau@user/cousteau) (Read error: Connection reset by peer)
[17:51:00] *** Joins: cousteau_ (~cousteau@user/cousteau)
[17:51:00] <DarkUranium> cousteau_: but *anyway*, the reason for 64-bit alignment of doubles in MSVC is apparently due to Alpha and MIPS and such.
[17:51:17] <DarkUranium> It was easier (and honestly safer) to just 64-bit align in all ABIs than only some.
[17:51:21] <cousteau_> That was the laptop's battery dying
[17:51:43] <DarkUranium> (those two apparently wanted 64-bit alignment even in 32-bit archs)
[17:51:44] *** Quits: brad_mssw (~bhouse@2601:344:4100:b490:4818:bb0e:95d8:dae5) (Ping timeout: 265 seconds)
[17:51:47] <cousteau_> yeah it makes sense to make all ABIs as close as possible
[17:51:56] <Franciman> a question I have is, suppose that double is 64-bit aligned, but memory is 4-bit addressable
[17:51:57] <cousteau_> kinda makes sense to have long be 32 bits after all
[17:52:01] <Franciman> can I put a double at address 4 ?
[17:52:11] <Franciman> or only at 
[17:52:14] <Franciman> 0, 64, ...
[17:52:15] <Franciman> ?
[17:52:32] <cousteau_> the standard only allows you to put it at 64-bit multiples
[17:52:41] <DarkUranium> Franciman: define "can"; it's definitely technically possible, but you can't load or store as you would general pointers/vlues.
[17:52:46] <cousteau_> never heard of 4-bit addressable memory, it's usually byte-addressable
[17:52:56] <Franciman> it was an example
[17:52:59] <Franciman> to understand
[17:53:09] <cousteau_> you can memcpy a double to an unaligned memory position, and then copy it back to an aligned position, and read it
[17:53:13] *** Joins: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net)
[17:53:20] <cousteau_> that's perfectly legal
[17:53:25] <cousteau_> ...I think
[17:53:32] <DarkUranium> cousteau_: it is.
[17:53:52] <DarkUranium> char[sizeof(double)] doesn't need double's alignment.
[17:53:55] <cousteau_> but you can't write a double (as a double) directly to an unaligned position
[17:54:01] <DarkUranium> And you can do memcpy(d_arr, &d, sizeof(d))
[17:54:12] <cousteau_> memcpy writes/reads bytes, regardless of what those bytes represent, so it's OK
[17:54:28] <DarkUranium> cousteau_, Franciman: On 4-bit addressability: CHAR_BIT must be at least 8, so a system with 4-bit addressable memory is still 8-bit addressable as far as C is concerned.
[17:54:30] *** Quits: kish` (~sid742412@user/aqua) (Ping timeout: 276 seconds)
[17:54:35] <DarkUranium> (i.e. the compiler will mask it to pretend it's 8-bit or higher)
[17:54:50] <cousteau_> yeah good point
[17:54:50] <Franciman> holy C, this is a nightmare lol
[17:55:06] <Franciman> well thanks
[17:55:12] <DarkUranium> There are *no* modern <8-bit CPUs. You have some 1-bit devices and 4-bit ones and such, yes.
[17:55:14] <Franciman> I'll have to meditate hard about what you all said
[17:55:18] <DarkUranium> ... but you wouldn't *want* to use C with those anyway.
[17:55:39] <DarkUranium> (even if they had the tooling, they wouldn't have had enough program memory)
[17:55:50] <cousteau_> Franciman: it's not that hard.  Just imagine your memory is split in an 8-byte layout as far as doubles are concerned, and you can only put doubles in one of those 8-bit slots
[17:56:05] <cousteau_> not spanning 2 slots, with half the double in each slot
[17:56:25] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[17:56:35] <DarkUranium> cousteau_: BTW; in modern GCC & CLang, above `char[sizeof(double)]` to/from `double*` copy is compiled to a simple move in x86 & amd64 and such.
[17:56:55] <DarkUranium> I.e. it compiles to *(double*)d_arr = d;
[17:57:02] <DarkUranium> But on POWER and similar architectures which fault, it does something different.
[17:57:02] <Franciman> cousteau_: what I don't understand is how this deals with fragmentation
[17:57:08] <cousteau_> and long doubles are 16 bytes and consist of 2 consecutive aligned blocks of 8 bytes, and needs to occupy exactly 2 whole blocks
[17:57:13] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[17:57:15] <Franciman> I mean, I don't store only dobules in memory
[17:57:20] <Franciman> so if I store types with different alignment
[17:57:22] <Franciman> that's a nightmare
[17:57:27] <DarkUranium> In other words, with modern compilers, memcpy is basically a portable *and fast* way of experessing an unaligned read/write.
[17:57:40] <cousteau_> that's for the compiler to worry about
[17:57:44] <DarkUranium> ^
[17:57:52] <cousteau_> the stack is an implementation detail
[17:57:54] <Franciman> yes, but I want to understand the rationale
[17:58:03] <Franciman> because I am writing a garbge collector for my interpreter
[17:58:07] <Franciman> so I need to handle memory lol
[17:58:08] <cousteau_> malloc always gives you something with the max alignment, just in case
[17:58:10] <DarkUranium> You only really need to worry about it when defining structs. And even then, only if you care about optimizing for space.
[17:58:25] *** Joins: lleo (~leo@31-161-148-145.mobile.kpn.net)
[17:58:41] <cousteau_> oh if you're writing your own malloc now THAT is where the fun begins :)
[17:58:45] <cousteau_> welcome to fragmentation
[17:58:52] <DarkUranium> A rule of thumb I use is to put bigger items first. E.g. ints before shorts, shorts before char. This way, I'll avoid *any* padding on the vast majority of architectures.
[17:58:54] <Franciman> eheh
[17:59:20] <cousteau_> yeah that works
[17:59:57] <cousteau_> Franciman: either have two or more different regions for big and small alignments, or align everything to max alignment
[18:00:07] <cousteau_> ,cc _Alignof (max_align_t)
[18:00:10] <candide> cousteau_: no output: _Alignof(max_align_t) = 16
[18:00:36] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[18:01:55] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 252 seconds)
[18:01:57] <Franciman> well in my case I am writing a bump allocator
[18:01:58] <Franciman> so I basically just append stuff next to each other
[18:02:02] <Franciman> but now with alignment
[18:02:06] <Franciman> it is a nightmare
[18:03:45] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 252 seconds)
[18:04:13] *** Joins: Alhazred (~Alhazred@s91904425.blix.com)
[18:04:42] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[18:04:47] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 265 seconds)
[18:05:16] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[18:05:42] *** Joins: AsenMx (~AsenMx@user/asenmx)
[18:06:22] <DarkUranium> Franciman: how about just having multiple arenas, split by alignment?
[18:07:01] <Franciman> I shall think about it
[18:07:02] <DarkUranium> Basically, 5 allocators (and you can tune this to increase or decrease the amount): 1, 2, 4, 8, and maxalign_t-byte alignment.
[18:07:18] <DarkUranium> But I'd just KISS for a start and simply ensure the bumps have adequate padding.
[18:07:48] <DarkUranium> Or KISS *even more* and just do malloc() for each separate allocation, just to get you started (switch it out later).
[18:07:53] *** Joins: seninha (~seninha@user/seninha)
[18:08:03] <Franciman> uhm now that I think about it
[18:08:07] <Franciman> i could define a single structure Value
[18:08:10] *** Quits: alch (~alch@151.36.140.69) (Ping timeout: 265 seconds)
[18:08:13] <Franciman> which is a union of all possible values
[18:08:22] <Franciman> and hence have it maxalign_t-byte aligned
[18:08:36] <DarkUranium> There are benefits to that, but the benefits are definitely not in memory allocation.
[18:08:47] <DarkUranium> Such things tend to waste memory and are (in most cases) overaligned.
[18:09:09] <DarkUranium> I mean, just have 1 bump allocator and provide alignment?
[18:09:24] <DarkUranium> Or ensure it always aligns to _Alignof(max_align_t)
[18:09:30] <Franciman> well no
[18:09:30] <Franciman> max_value_align byte aligned
[18:09:30] <Franciman> lol
[18:09:30] <Franciman> that sux to no end
[18:09:30] <Franciman> but he
[18:09:30] <Franciman> DarkUranium: I'd prefer to void malloc because I am writing a copying garbage collector
[18:09:30] *** ChanServ sets mode: +o candide
[18:09:31] *** candide sets mode: +b *!~franciman@*.fracta.dev
[18:09:36] *** Joins: alch (~alch@151.36.164.166)
[18:10:03] <DarkUranium> Uh. I think that was a connection issue on his part. Maybe candide was a bit overeager here.
[18:10:13] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 240 seconds)
[18:10:44] *** candide sets mode: -b *!~franciman@*.fracta.dev
[18:10:59] <pragma-> A flood is a flood, connection issue or not.
[18:11:06] <DarkUranium> And yeah, I'll probably also do a copying GC for my own language. I'll probably just do _Alignof(max_align_t) for now, though I *might* create separate arenas for separate types. TBD.
[18:11:17] <pragma-> In any case, candide bans for only 60 seconds for the first offense as a warning.
[18:12:47] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[18:13:15] * APic grins magically.
[18:13:44] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[18:14:16] <Thedarkb-Desktop> I usually watch the bar in the bottom right of my client to see how much is in my send queue to avoid being kicked for flooding.
[18:14:47] <DarkUranium> *So that's what that bar is.*
[18:14:58] <cousteau_> indeed
[18:15:05] *** Quits: cousteau_ (~cousteau@user/cousteau) (Quit: ♫ I can't forget the day I shot that network down ♫)
[18:15:30] <DarkUranium> Though TBH, it's not as if it's a common enough problem for someone to keep a close enough eye to reliably notice it.
[18:15:37] <DarkUranium> Shit happens *shrug*
[18:16:36] *** Quits: tradar (~tradar@user/tradar) (Ping timeout: 276 seconds)
[18:16:44] <earnest> A metric for keeping one's personal level of spam in check!
[18:16:52] <Franciman> wait what did I do?
[18:16:53] *** Joins: tradar (~tradar@user/tradar)
[18:17:12] <Franciman> ah probably I disconnected ok
[18:17:29] <earnest> Manually triggered flood ban
[18:17:54] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[18:18:43] <Franciman> thank DarkUranium 
[18:19:05] <DarkUranium> In case you missed it: <pragma-> A flood is a flood, connection issue or not.
[18:19:05] <DarkUranium> <DarkUranium> And yeah, I'll probably also do a copying GC for my own language. I'll probably just do _Alignof(max_align_t) for now, though I *might* create separate arenas for separate types. TBD.
[18:19:12] <DarkUranium> Oops, didn't mean to copy the first one.
[18:20:18] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:20:18] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[18:20:18] *** Joins: wroathe (~wroathe@user/wroathe)
[18:20:55] <Franciman> nice
[18:23:57] *** Joins: Guest33 (~Guest33@c-24-30-27-91.hsd1.ga.comcast.net)
[18:24:22] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[18:24:27] *** Quits: Maaaanu (~manuel@ip5b429007.dynamic.kabel-deutschland.de) (Quit: leaving)
[18:25:21] *** Joins: kurahaupo (~kurahaupo@pa49-195-154-60.pa.nsw.optusnet.com.au)
[18:25:43] *** Joins: Inline__ (~Inline@2a02:908:1252:7a80::117)
[18:25:50] <Guest33> The fact I can simulate OOP techniques in regular C makes me love C even more.
[18:26:10] *** Quits: Inline__ (~Inline@2a02:908:1252:7a80::117) (Remote host closed the connection)
[18:26:30] *** Quits: supajerm (~supajerm@gateway/vpn/pia/supajerm) (Remote host closed the connection)
[18:26:50] *** Joins: supajerm (~supajerm@gateway/vpn/pia/supajerm)
[18:26:51] *** Quits: lleo (~leo@31-161-148-145.mobile.kpn.net) (Ping timeout: 252 seconds)
[18:27:26] *** Joins: odoood (~odoood@2601:c8:c003:a550::5)
[18:29:40] <pragma-> ,ooc
[18:29:40] <candide> Object-Oriented Programming With C: http://www.cs.rit.edu/~ats/books/ooc.pdf and https://www.state-machine.com/doc/AN_OOP_in_C.pdf
[18:29:47] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[18:29:54] *** Joins: Teckla (~Teckla@user/teckla)
[18:30:12] <DarkUranium> Incidentally, I prefer to *avoid* OOP techniques even in OOP languages.
[18:30:28] <Guest33> I thought structs didn't hide data at all.
[18:30:37] *** Quits: shivesh (~shivesh@user/shivesh) (Ping timeout: 240 seconds)
[18:30:52] <pragma-> "OOP techniques" encompasses a wide assortment of techniques.
[18:30:54] *** Quits: SymbioticFemale (~Symbiotic@gateway/tor-sasl/symbioticfemale) (Ping timeout: 276 seconds)
[18:31:16] <pragma-> You probably dislike a very certain thing, which is only like 10% of what OOP is.
[18:31:19] *** Quits: bzng (~bzng4@91-115-29-1.adsl.highway.telekom.at) (Read error: Connection reset by peer)
[18:31:23] *** Joins: donald1 (~donald@2a01:e0a:95e:7ca0:4d4d:b2e6:7414:759f)
[18:31:23] <pragma-> 90% of OOP is great.
[18:31:30] <pragma-> Some things are dumb, like multiple inheritance.
[18:32:49] *** Joins: shivesh (~shivesh@user/shivesh)
[18:33:18] <pragma-> Nearly everybody has done the struct thing *thing_new(), thing_set(struct thing *thing, ...), thing_delete(struct thing *thing) pattern countless times. 
[18:34:02] <DarkUranium> pragma-: most of OOP is a mess. I'd link you an article explaining why, but I'm on the wrong PC.
[18:34:12] <DarkUranium> It boils down to OOP having a ton of weaknesses, but no unique strengths.
[18:34:19] <pragma-> Absurd.
[18:34:22] *** Joins: fmsd__ (~no@105.157.214.131)
[18:34:28] <DarkUranium> (and also, any arguments as to why it sucks is countered by the OOP equivalent of "no true Scotsman")
[18:34:37] *** Joins: node123 (~node1@user/node1)
[18:35:04] <DarkUranium> Hey, found a similar one: http://www.smashcompany.com/technology/object-oriented-programming-is-an-expensive-disaster-which-must-end
[18:35:49] *** Quits: Alhazred (~Alhazred@s91904425.blix.com) (Ping timeout: 240 seconds)
[18:36:23] <rcf> You are conflating OOP with OOP-oriented languages. 
[18:36:31] <Teckla> DarkUranium: You should probably be trolling in a C++, Java, C#, etc... channel instead, don't you think?
[18:36:37] *** Quits: fmsd___ (~no@160.177.199.94) (Ping timeout: 240 seconds)
[18:36:47] *** Joins: ozoned (odoood@gateway/vpn/protonvpn/odoood)
[18:37:35] *** Quits: cart_man (~rynot@213.205.241.185) (Quit: Konversation terminated!)
[18:37:37] <pragma-> I don't think he's trolling. He's just unaware of the distinction between OOP paradigms/patterns and OOP languages. I see this all the time.
[18:37:52] *** Quits: dsrt^ (~dsrt@68.101.58.90) (Remote host closed the connection)
[18:39:14] *** Joins: Inline (~Inline@2a02:908:1252:7a80::117)
[18:39:19] *** Quits: odoood (~odoood@2601:c8:c003:a550::5) (Ping timeout: 252 seconds)
[18:39:38] *** Inline is now known as Guest1344
[18:40:54] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:40:54] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[18:40:54] *** Joins: wroathe (~wroathe@user/wroathe)
[18:41:26] *** Quits: node123 (~node1@user/node1) (Quit: Client closed)
[18:41:28] <pragma-> This Lawrence Krubner guy really gives me the vibe that he does things horribly wrong and then writes about how everything went wrong for him.
[18:41:32] *** Joins: LIERO (~no@user/liero)
[18:42:39] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:7917:44d7:1e62:9de1)
[18:42:39] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:7917:44d7:1e62:9de1) (Changing host)
[18:42:39] *** Joins: skapata (~Skapata@user/skapata)
[18:42:57] <pragma-> He tried to start a tech company, but failed. "How To Destroy A Tech Startup In Three Easy Steps" by Lawrence Krubner. Then he tried to make an app for dating. "How To Build A Really Terrible Dating App" by Lawrence Krubner. While doing these things, he was using OOPs. "Object Oriented Programming Is An Expensive Disaster Which Must End" by Lawrence Krubner.
[18:43:18] *** Joins: odoood__ (~odoood@2601:c8:c003:a550::5)
[18:43:18] * pragma- nods.
[18:43:21] *** Quits: odoood__ (~odoood@2601:c8:c003:a550::5) (Remote host closed the connection)
[18:43:38] *** Quits: dutch (~DutchIngr@user/dutch) (Quit: WeeChat 3.3)
[18:44:16] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[18:44:23] *** Joins: dutch (~DutchIngr@user/dutch)
[18:44:28] <rcf> Java sucks, sure. That does not mean OOP is inherently bad. And that’s partly because a concrete definition of OOP as some distinct approach is almost impossible to construct; “no true Scotsman” does not excuse an unwillingness to clarify what one is even talking about 
[18:44:41] <earnest> rcf: It is inherently bad
[18:44:54] *** Quits: Guest1344 (~Inline@2a02:908:1252:7a80::117) (Quit: Leaving)
[18:45:13] <earnest> There is no concrete definition, that is virtually the point of that article which spends far too many words demonstrating this both empericially and historically
[18:45:23] *** Quits: donald1 (~donald@2a01:e0a:95e:7ca0:4d4d:b2e6:7414:759f) (Ping timeout: 265 seconds)
[18:45:25] *** Quits: last1 (last1@modemcable039.93-160-184.mc.videotron.ca) ()
[18:45:25] *** Quits: ozoned (odoood@gateway/vpn/protonvpn/odoood) (Ping timeout: 240 seconds)
[18:45:41] <Teckla> rcf: "X sucks" is not a productive comment imo.  C sucks... for some use cases.  And is great for others.  Java sucks... for some use cases.  And is great for others.  Etc.
[18:45:52] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 265 seconds)
[18:45:57] <rcf> It’s no worse than any other ill-defined grouping of design patterns. 
[18:45:59] <earnest> (But each programmer has to come to this understanding and many simply won't, it's not worth discussing imo.)
[18:46:14] <Guest33> I'm tired of trying to support every single compiler no matter how obscure it is. gcc all the way.
[18:46:23] <river> OO used to be about message passing
[18:46:34] <river> not all this bloody nonsense with factories and visitors
[18:46:39] <pragma-> Guest33: Just support Standard C.
[18:46:42] <sham1> It still is
[18:46:42] <earnest> river: It never was, despite Kay's intentions.  Others had already been doing that long before
[18:46:49] <floatcomplex> anything that promotes polymorphism and overloading IS inherently bad
[18:46:59] <Guest33> I'm trying to, but it seems some data hiding techniques relies on gcc extensions.
[18:47:02] <earnest> Guest33: The problem is when you have to use specific compilers for embedded hardware
[18:47:04] <river> well, basically there's different styles of OO (good, bad and ugly)
[18:47:09] <earnest> And they're proprietary
[18:47:11] <floatcomplex> it is making the initial vomiting of code easier, at the expensive of being able to debug it later
[18:47:16] <earnest> (See most bluetooth chips)
[18:47:18] <rcf> earnest: my point is more that arguing about OOP in the first place becomes a pointless affair because it is so vague. It mostly becomes a buzzword or a bogeyman.
[18:47:20] <floatcomplex> debugging code is the job
[18:48:11] <rcf> earnest: whereas we are better off ignoring it and rather speaking about the qualities of some real design 
[18:48:21] *** Quits: fmsd__ (~no@105.157.214.131) (Ping timeout: 256 seconds)
[18:48:24] <earnest> rcf: Yes, that is true.  The the other half is demonstrating how every attempt at implementing 'OOP', probably because it has no definition, has always resulted in a mess
[18:48:32] <Guest33> Why should I support embedded systems and really obscure compilers if I'm making stuff that relies on a GUI?
[18:48:46] <earnest> Guest33: It's an example of where you can't escape so easily
[18:48:54] <floatcomplex> debugging code is harder than writing new code already. language features that make writing new code easier and debugging even harder is inherently pushing things out of balance farther
[18:49:03] <earnest> Otherwise yes, gcc or clang is fine
[18:49:15] *** Quits: jusski (~user@78-63-85-123.static.zebra.lt) (Ping timeout: 265 seconds)
[18:49:40] <Guest33> Because I get nothing out of it, I'll just not support embedded systems that probably don't even have X11 installed.
[18:49:56] <pragma-> Guest33: what do you mean? just forward declare the struct and use functions to access it.
[18:49:57] *** Quits: dutch (~DutchIngr@user/dutch) (Quit: WeeChat 3.3)
[18:50:09] <pragma-> do you mean data obfuscation rather than data hiding?
[18:50:40] <Guest33> No, pragma-, I mean techniques to simulate OOP data hiding. Some techniques I've seen are using gcc compiler extensions.
[18:50:44] *** Joins: SymbioticFemale (~Symbiotic@gateway/tor-sasl/symbioticfemale)
[18:50:51] <pragma-> like what?
[18:51:33] <sham1> You don't need GCC extensions for encapsulation
[18:51:48] <Guest33> What about using __attribute__?
[18:52:03] <pragma-> which attribute?
[18:52:06] *** Quits: nuxil (~nuxil@141.195.51.213) (Remote host closed the connection)
[18:52:17] <earnest> Show them a real example of what you're doing
[18:52:30] *** Joins: Inline__ (~Inline@2a02:908:1252:7a80::117)
[18:52:36] *** Joins: nyah (~nyah@94.6.71.219)
[18:53:11] *** Inline__ is now known as Inline
[18:53:17] *** Quits: alews (~aws@mx1.aosync.me) (Remote host closed the connection)
[18:53:42] *** Quits: Inline (~Inline@2a02:908:1252:7a80::117) (Client Quit)
[18:53:55] *** Joins: alews (~aws@mx1.aosync.me)
[18:54:12] <Guest33> I'm not doing anything, yet, I'm trying to understand how the gcc compiler works and how to make encapsulation work on gcc, clang, and others like msvc.
[18:54:30] <floatcomplex> why though
[18:54:42] <sham1> Again, you don't need compiler extensions
[18:54:48] <floatcomplex> encapsulation can be had with pure C, if you need it
[18:54:56] <pragma-> It's literally just forward declaring a struct and providing functions to access it.
[18:54:59] <sham1> You'd only really need them if you wanted struct inheritence and that's just no
[18:55:00] <floatcomplex> but do you need it? or are you doing it for its own sake
[18:55:11] <floatcomplex> if you use some
[18:55:34] <floatcomplex> sort of "struct inheritance" extension then nobody will be able to debug your code but you
[18:56:03] <rcf> Guest33: encapsulation can work just fine without any compiler magic. People want to see an example of where it would not work in standard C, if for nothing else than to figure out what you should be using instead 
[18:56:08] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[18:56:33] <sham1> Guest33: https://www.cs.rit.edu/~ats/books/ooc.pdf
[18:56:47] <pragma-> ,ooc
[18:56:47] <candide> Object-Oriented Programming With C: http://www.cs.rit.edu/~ats/books/ooc.pdf and https://www.state-machine.com/doc/AN_OOP_in_C.pdf
[18:57:01] *** Joins: Inline (~Inline@2a02:908:1252:7a80::117)
[18:57:27] <rcf> Just look at what gtk managed to accomplish
[18:57:31] * rcf runs
[18:57:36] <Guest33> I apologize for making everything so confusing. I'm very confused myself now on how to explain what I'm trying to do.
[18:57:56] * floatcomplex dunks rcf head first into a kelp bed
[18:58:15] <sham1> Kelp‽
[18:58:17] *** Joins: jusski (~user@78-63-85-123.static.zebra.lt)
[18:58:23] <earnest> rcf: enlightenment
[18:58:30] <floatcomplex> Guest33: first, figure out why you think you want the things that you want
[18:58:44] <earnest> rcf: Their glib-like library, elo or something
[18:58:48] <sham1> Something here smells ike an XY question
[18:58:57] <earnest> Guest33: Just show instead
[18:58:59] <sham1> earnest: e18 is separate from GTK
[18:59:01] <sham1> And Glib
[18:59:10] <rcf> earnest: that daily WTF post is a classic 
[18:59:17] <pragma-> sham1: floatcomplex is a salty seadog. he spends his days on his kayak paddling the pacific ocean while ircing from his cell phone.
[18:59:42] <rcf> sham1: same idea though is what he means. 
[18:59:55] <floatcomplex> pragma-: tbf my code also has to go in the sea, it's not purely recreational
[19:00:07] <apotheon> earnest: What is the importance of being "earnest"?
[19:00:15] <kaichiuchu> your C code has to go in the C
[19:00:17] <apotheon> earnest: . . . by which I mean "Why did you choose that name?"
[19:00:27] <apotheon> . . . though I ask mostly just to make the joke.
[19:00:28] <Guest33> I don't even remember what I want. I wanted to just make an OOP like API in C, but got caught up if I need encapsulation or not.
[19:00:29] <kurahaupo> nomagno: Your conclusion that counting bytes at 4MB/s would overflow a 44-bit counter in 20 minutes is incorrect. 4MB is (almost) 2²² bytes, and a 44-bit counter would overflow at 2⁴⁴, which would take 2⁴⁴ ÷ 2²² = 2²² seconds, or about 70000 minutes or 7 weeks.
[19:00:31] <floatcomplex> apotheon: horror fiction about the female condition
[19:00:51] <kurahaupo> fizzie++
[19:00:58] <earnest> rcf: Oh yeah, dailywtf did write an article about it, now that you mention it I haven't looked at that website for years
[19:01:05] <pragma-> didn't fizzie come to the conclusion that it was 2 years?
[19:01:26] <apotheon> floatcomplex: do tell
[19:01:28] <rcf> apotheon: earnest is a real given name
[19:01:33] <pragma-> ,recall fizzie years
[19:01:34] <candide> [15h7m ago] <f​izzie> Surely a counter that's increased by "4MB" (2^22) per second will take a lot longer than 20 minutes to overflow 48 bits. 2**48 / 2**22 = 2**26 seconds, or a bit over 2 years.
[19:01:37] <apotheon> rcf: I'm aware.
[19:01:37] *** Joins: strajder (~strajder@user/strajder)
[19:01:39] <earnest> rcf: Wait really?
[19:01:52] *** Quits: szutt (~szutt@116.37.2.145) (Quit: Client closed)
[19:01:53] <earnest> So it is, huh
[19:01:57] *** Joins: Alhazred (~Alhazred@s91904425.blix.com)
[19:02:03] <pragma-> oh 44 vs 48
[19:02:08] <apotheon> Oh, interesting -- earnest didn't know that was a name.
[19:02:20] <pragma-> Earnest Goes To Jail
[19:02:28] <rcf> earnest: alternate spelling of Ernest. Made famous by Jim Varney 
[19:02:46] <apotheon> earnest: https://www.imdb.com/list/ls007691427/
[19:02:48] <candide> Title of apotheon's link: The Ernest Movies - IMDb
[19:03:02] <pragma-> lol
[19:03:05] <pragma-> those metacritic scores
[19:03:06] <pragma-> my sides
[19:03:08] <nomagno> I have been summoned to be told I'm wrong and I should feel bad. I accept your correction, and humbly request to be your binary disciple
[19:03:13] <pragma-> i loved Earnest Goes To Jail though
[19:03:19] <pragma-> it was hilariously stupid 
[19:03:22] <nomagno> ... I just need to git gud at math
[19:03:26] <rcf> pragma-: they are good fun 
[19:03:39] <apotheon> "good" might be a bit much
[19:03:55] <kurahaupo> https://en.wikipedia.org/wiki/Ernest_Rutherford?wprov=sfla1
[19:04:05] <rcf> apotheon: if you’ve got enough booze I’d beg to differ 
[19:04:11] <nomagno> I admittedly did that calculation based off a magic number fizzie gave me, 17ms with 32 bits
[19:04:20] <apotheon> I don't have any booze.
[19:04:29] *** Joins: kanton (kanton@gateway/vpn/airvpn/kanton)
[19:04:38] <nomagno> Or maybe it wasn't fizzie, I don't remember
[19:04:39] <rcf> apotheon: then again I don’t actually remember what they’re about for that reason 
[19:04:53] <floatcomplex> apotheon: maybe i'm not being fair, that phrase was used to describe jane austen's work
[19:05:07] *** Joins: phineasflynn (~farawayas@103.160.128.7)
[19:05:14] <apotheon> I hadn't seen that description.
[19:06:04] <Guest33> I'm making a GUI library or at least want to make one. Is encapsulation really needed for security for just a GUI? That's why I got interested in encapsulation in C. I'm very sorry for confusing everyone what I'm trying to do.
[19:06:13] *** Joins: rgrinberg (~textual@2806:101e:7:7c2f:99ad:1649:a2c7:9e20)
[19:06:39] *** Quits: doofenshmirtz (~farawayas@103.160.128.7) (Ping timeout: 265 seconds)
[19:07:30] <kurahaupo> nomagno: exponents and logarithms are simple: if the base is 2 (which it usually is for computing), increasing the exponent by 1 doubles the output. So adding 8 multiples
[19:07:41] <kurahaupo> the result by 256
[19:07:52] <kurahaupo> multiplies
[19:07:57] <apotheon> Hilariously, if Oscar Wilde had more of a sense of the importance of being earnest he might not have gotten himself into so much trouble.
[19:08:08] <nomagno> I know how it works
[19:08:20] <nomagno> I just don't know how I reached that conclusion
[19:08:28] <nomagno> Sleepy math is bad
[19:14:09] *** Quits: phineasflynn (~farawayas@103.160.128.7) (Remote host closed the connection)
[19:17:50] *** Joins: Itaru (~DaSH@ro2.flokinet.is)
[19:24:03] *** Joins: dohtem (uid524096@user/dohtem)
[19:25:24] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[19:28:05] *** Quits: tradar (~tradar@user/tradar) (Quit: tradar)
[19:28:35] <Franciman> I am getting blasted by this concept that I can only store objects at addresses multiples of their alignment
[19:29:51] *** Quits: Alhazred (~Alhazred@s91904425.blix.com) (Ping timeout: 265 seconds)
[19:30:20] <floatcomplex> blasted how
[19:30:31] <floatcomplex> it surprises you? or it surprises others
[19:30:50] <Franciman> it surprises me lol. I was never aware of this concept
[19:31:05] *** Joins: magla (~gelignite@55d47927.access.ecotel.net)
[19:31:36] <floatcomplex> on "nice" architectures, you merely pay an extra cycle of latency for loading from an unaligned address
[19:32:05] <floatcomplex> on naughty architectures, you have to use a different instruction, AND it's slower
[19:32:19] <floatcomplex> guess which one x86_64 is
[19:32:23] <Franciman> lol
[19:33:09] *** Parts: Guest33 (~Guest33@c-24-30-27-91.hsd1.ga.comcast.net) ()
[19:33:21] <floatcomplex> older arm was more strict about it too, but like two decades ago
[19:34:01] *** Joins: donald1 (~donald@2a01:e0a:95e:7ca0:4d4d:b2e6:7414:759f)
[19:34:10] *** Joins: meator (~meator@user/meator)
[19:36:03] <fizzie> At least on some ARM revisions, you could do unaligned loads, and you'd get _rotated_ data out.
[19:37:37] <floatcomplex> lol
[19:38:14] *** Joins: x88x88x (~x88x88x@149.28.53.172)
[19:40:05] <fizzie> https://www.keil.com/support/man/docs/ARMASM/armasm_dom1359731171041.htm ARMv5 and v6, apparently -- "For STR, LDR, STM, and LDM, the specified address is rounded down to a multiple of four. Additionally, for LDR only: -- The loaded data is rotated right by one, two or three bytes according to bits [1:0] of the address."
[19:40:05] *** Joins: shailangsa (~shailangs@host86-186-136-27.range86-186.btcentralplus.com)
[19:40:06] <candide> Title of fizzie's link: Assembler User Guide: Address alignment
[19:40:21] <cehteh> endianess correction  in hardware :D
[19:41:17] *** Quits: marcj (~marc@205.175.215.25) (Ping timeout: 252 seconds)
[19:42:30] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[19:43:05] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[19:43:08] <fizzie> SPARCs just fault on unaligned accesses, and the university computer classrooms and servers were Sun systems, so there's many a student's homework that ran fine when they were developing it at home (on x86), then failed when they submitted it for grading.
[19:43:54] *** Quits: kspalaiologos (~kspalaiol@user/kspalaiologos) (Quit: Leaving)
[19:44:08] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[19:44:56] <Franciman> but why is the CPU unable to fetch objects with alignment 16-bits at 8-bit aligned addresses? 
[19:45:00] <Franciman> that's what I do not understand
[19:46:04] *** Joins: marcj (~marc@205.175.215.25)
[19:46:07] <floatcomplex> Franciman: it's jusr wires
[19:47:14] *** Joins: brad_mssw|mac (~bhouse@99-101-56-67.lightspeed.jcvlfl.sbcglobal.net)
[19:47:41] <Franciman> thanks y'all, I think ai quite get the whole thing, many thanks
[19:48:03] *** Joins: x88x88x- (~cheeg@gateway/vpn/pia/x88x88x)
[19:48:37] *** Quits: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net) (Ping timeout: 240 seconds)
[19:49:49] <floatcomplex> tbf sometimes it's microcode on wires, but usually only because the wires are even more strict and a prior promise needs to continue to be safisfied
[19:50:14] *** Joins: deflected (~deflected@user/deflected)
[19:52:23] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[19:52:37] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 240 seconds)
[19:53:28] *** Joins: AsenMx (~AsenMx@user/asenmx)
[19:53:56] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[19:53:57] *** Quits: rgrinberg (~textual@2806:101e:7:7c2f:99ad:1649:a2c7:9e20) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:54:39] *** Joins: Charadon (~Charadon@155.138.164.183)
[19:57:23] *** Joins: mrig (~mrig@user/mrig)
[19:58:41] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[19:59:34] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[20:00:27] *** Joins: hgkjhgkjgkj (~hjgkjhgkj@46.235.96.249)
[20:00:47] *** Joins: constxd (~brad@192.75.101.164)
[20:01:42] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[20:04:29] *** Joins: arinov (~arinov@31.142.57.149)
[20:05:43] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[20:05:47] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[20:06:05] *** Joins: mjack (~mjack@5634d05c.rev.stofanet.dk)
[20:06:08] *** Joins: goepsilongo (~goepsilon@201.143.32.6.ded.telnor.net)
[20:06:13] *** Quits: jusski (~user@78-63-85-123.static.zebra.lt) (Ping timeout: 252 seconds)
[20:06:27] *** Joins: kish` (~sid742412@user/aqua)
[20:06:37] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[20:07:00] *** Quits: mjack (~mjack@5634d05c.rev.stofanet.dk) (Quit: mjack)
[20:07:03] *** Quits: boB_K7IQ (~boB_K7IQ@152.44.147.180) (Ping timeout: 256 seconds)
[20:07:23] *** Joins: mjack (~mjack@5634d05c.rev.stofanet.dk)
[20:08:34] *** Lord_of_Life_ is now known as Lord_of_Life
[20:09:01] *** Quits: Itaru (~DaSH@ro2.flokinet.is) (Ping timeout: 240 seconds)
[20:09:33] *** candide sets mode: -o candide
[20:10:59] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 252 seconds)
[20:14:34] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[20:14:39] *** Quits: arinov (~arinov@31.142.57.149) (Ping timeout: 252 seconds)
[20:14:48] *** Joins: ckdCreations (~ckdCreati@147.55.133.138)
[20:15:00] *** Joins: Burgundy (~yomon@79.115.213.171)
[20:17:49] *** Joins: kuber (~kuber@97-126-3-32.tukw.qwest.net)
[20:20:26] *** Joins: idle_rain (~idle_rain@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417)
[20:24:26] *** Quits: Libero (~Libero@77.49.128.70.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[20:24:48] *** Joins: lleo (~leo@31-161-189-154.mobile.kpn.net)
[20:27:02] *** Joins: mahmutov (~mahmutov@37.155.19.7)
[20:28:29] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[20:29:06] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[20:30:47] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[20:31:43] *** Quits: x88x88x- (~cheeg@gateway/vpn/pia/x88x88x) (Ping timeout: 265 seconds)
[20:32:20] *** Joins: Libero (~Libero@77.49.128.70.dsl.dyn.forthnet.gr)
[20:37:33] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[20:37:34] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[20:39:36] *** Joins: nicholaus04 (~nicholaus@2607:fb90:e58c:fb6a:3ddf:77ed:0:281)
[20:42:22] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.3)
[20:43:53] *** Quits: idle_rain (~idle_rain@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417) (Quit: idle_rain)
[20:44:23] *** Joins: Itaru (~DaSH@ro2.flokinet.is)
[20:48:13] *** Quits: synthmeat (~synthmeat@user/synthmeat) (Read error: Connection reset by peer)
[20:48:20] *** Joins: synthmeat1 (~synthmeat@user/synthmeat)
[20:48:33] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[20:49:11] *** Joins: reezoh (~reezoh@2600:1702:3cf0:2e00:9140:5b0f:e44c:c2d9)
[20:51:06] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[20:55:41] *** Quits: fbiagent_ (~fbiagent@user/fbiagent) (Remote host closed the connection)
[20:56:13] *** Joins: arinov (~arinov@213.194.126.155)
[20:56:22] *** Joins: fbiagent_ (~fbiagent@user/fbiagent)
[20:56:51] *** Joins: rgrinberg (~textual@2806:101e:7:7c2f:99ad:1649:a2c7:9e20)
[20:57:31] *** Quits: reezoh (~reezoh@2600:1702:3cf0:2e00:9140:5b0f:e44c:c2d9) (Quit: Leaving)
[21:02:44] *** Quits: Itaru (~DaSH@ro2.flokinet.is) (Quit: See Ya Later!)
[21:04:17] *** Joins: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de)
[21:07:37] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[21:07:49] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 252 seconds)
[21:08:39] *** Quits: goepsilongo (~goepsilon@201.143.32.6.ded.telnor.net) (Quit: Textual IRC Client: www.textualapp.com)
[21:09:41] *** Joins: imm_ (~imm_@user/imm/x-3405860)
[21:10:55] *** Quits: Oxfuxxx (~sharky@143.244.56.187) (Ping timeout: 268 seconds)
[21:11:56] *** Joins: dutch (~DutchIngr@user/dutch)
[21:14:38] *** Joins: nobody_ (~nobody@host-95-239-241-61.retail.telecomitalia.it)
[21:15:27] *** Quits: simon323 (~simon323@2409:8a34:468:83d0:d1e9:25c8:906:7a0) (Quit: simon323)
[21:17:18] *** Quits: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[21:19:37] *** Quits: mjack (~mjack@5634d05c.rev.stofanet.dk) (Quit: mjack)
[21:19:39] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 256 seconds)
[21:20:19] *** Joins: Oxfuxxx (~sharky@195.200.221.98)
[21:22:54] *** Joins: mjack (~mjack@5634d05c.rev.stofanet.dk)
[21:24:01] *** Joins: sarvet (~sarvet@p200300e8d739e494dd9b9e5d9ba7cd50.dip0.t-ipconnect.de)
[21:24:50] *** Joins: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com)
[21:24:58] *** Quits: kuber (~kuber@97-126-3-32.tukw.qwest.net) (Quit: leaving)
[21:25:03] *** Joins: makersmasher (~makersmas@2600:6c40:5b00:158d:62a4:4cff:feb5:d54a)
[21:25:19] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[21:27:16] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[21:27:18] *** Quits: kurahaupo (~kurahaupo@pa49-195-154-60.pa.nsw.optusnet.com.au) (Ping timeout: 265 seconds)
[21:27:31] *** Quits: Satin (uid193953@id-193953.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[21:28:41] *** Quits: poprocks (~logan@user/poprocks) (Ping timeout: 245 seconds)
[21:29:10] *** Joins: Iarfen (~quassel@ec2-3-225-168-229.compute-1.amazonaws.com)
[21:29:38] *** Joins: superboot (~agentgasm@user/superboot)
[21:31:53] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Ping timeout: 268 seconds)
[21:33:42] *** Joins: poprocks (~logan@user/poprocks)
[21:37:07] *** Joins: RicardasSim (~RicardasS@78-63-172-44.static.zebra.lt)
[21:37:23] *** Joins: Alhazred (~Alhazred@s91904425.blix.com)
[21:39:34] *** Joins: Barrico (~Barrico@be-217-129-189-192.netvisao.pt)
[21:39:40] *** Joins: Reffter (~Reffter@2001:818:dea5:2b00:6985:b5d4:8920:4072)
[21:39:51] <Barrico> hey guys, how do I make a dfa to accept aab
[21:39:58] <Barrico> automaton
[21:40:05] <Reffter> Barrico: do you mean an automaton?
[21:40:10] <Reffter> oh I c
[21:40:16] *** Parts: Franciman (~Franciman@mx1.fracta.dev) (WeeChat 3.3)
[21:46:00] <SymbioticFemale> is it appropriate to use libevent event loops for non-networked purposes? essentially, i could use pipes, but then i'd have to do work when porting to windows, whereas if i can use libevent, i can avoid that
[21:47:09] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[21:47:25] *** Quits: Alhazred (~Alhazred@s91904425.blix.com) (Ping timeout: 252 seconds)
[21:47:35] <river> S0 -a-> S1 -b-> S2 -b-> Accept
[21:47:37] <river> hth
[21:48:00] *** Joins: gproto23 (~gproto23@user/gproto23)
[21:48:53] <fizzie> Except that accepts abb instead of aab. :)
[21:49:00] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:49:10] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[21:49:10] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[21:49:10] *** Joins: wroathe (~wroathe@user/wroathe)
[21:49:23] *** Joins: Alhazred (~Alhazred@adm-129-49-100-96.wi-fi.stonybrook.edu)
[21:49:24] *** Joins: reezoh (~reezoh@2600:1702:3cf0:2e00:9140:5b0f:e44c:c2d9)
[21:50:05] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:50:07] *** Quits: reezoh (~reezoh@2600:1702:3cf0:2e00:9140:5b0f:e44c:c2d9) (Remote host closed the connection)
[21:50:44] *** Quits: Barrico (~Barrico@be-217-129-189-192.netvisao.pt) (Quit: Client closed)
[21:51:12] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[21:52:37] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:52:55] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[21:54:20] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:54:37] *** Quits: Alhazred (~Alhazred@adm-129-49-100-96.wi-fi.stonybrook.edu) (Ping timeout: 240 seconds)
[21:56:13] *** Quits: Oxfuxxx (~sharky@195.200.221.98) (Ping timeout: 252 seconds)
[21:56:22] *** Joins: reezoh (~reezoh@2600:1702:3cf0:2e00:9140:5b0f:e44c:c2d9)
[21:56:44] *** Joins: boB_K7IQ (~boB_K7IQ@152.44.147.180)
[21:57:50] *** Quits: gproto23 (~gproto23@user/gproto23) (Read error: Connection reset by peer)
[21:58:33] <sham1> SymbioticFemale: using libevent for that should be fine
[21:59:57] *** Joins: Satin (uid193953@id-193953.ilkley.irccloud.com)
[22:01:21] *** Quits: boB_K7IQ (~boB_K7IQ@152.44.147.180) (Ping timeout: 252 seconds)
[22:01:40] *** Joins: boB_K7IQ (~boB_K7IQ@152.44.147.180)
[22:03:06] *** Joins: skintimidation (~skintimid@user/skintimidation)
[22:03:10] <skintimidation> https://nullprogram.com/blog/2021/12/04/ this guy pisses me off
[22:03:11] <candide> Title of skintimidation's link: Fast CSV processing with SIMD
[22:03:20] <skintimidation> this entire implementation is just maddening as all hell
[22:03:44] <skintimidation> why is he indexing a 2d table with characters themselves? what a complete crock of shit
[22:04:00] <skintimidation> and then he has the nerve to say "this is simple."
[22:04:50] *** Quits: alch (~alch@151.36.164.166) (Read error: Connection reset by peer)
[22:05:45] *** Quits: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[22:06:03] *** Quits: dexter0 (~dexter0@c-69-181-126-161.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[22:06:42] *** Joins: dexter0 (~dexter0@c-69-181-126-161.hsd1.ca.comcast.net)
[22:06:51] *** Quits: Zenton (~user@user/zenton) (Ping timeout: 252 seconds)
[22:07:38] <floatcomplex> whenever i feel like i'm upset about everything, i remember that i could be upset about way more things if i read orange site
[22:07:48] *** Quits: Reffter (~Reffter@2001:818:dea5:2b00:6985:b5d4:8920:4072) (Quit: Client closed)
[22:08:13] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[22:08:27] <skintimidation> lmao, floatcomplex
[22:08:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[22:09:00] *** Joins: alch (~alch@151.36.214.80)
[22:12:09] *** Joins: Itaru (~DaSH@ro2.flokinet.is)
[22:14:03] *** Joins: Akuli (~Akuli@87-94-111-87.bb.dnainternet.fi)
[22:16:40] *** Joins: peve (~peve@ucb-np2-74.colorado.edu)
[22:17:00] *** Quits: peve (~peve@ucb-np2-74.colorado.edu) (Remote host closed the connection)
[22:18:01] *** Joins: quartz (~quartz@user/quartz)
[22:22:04] *** Quits: kdc (~kdc@196.211.197.159) (Quit: Leaving)
[22:22:17] *** Joins: MrMobius_ (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[22:22:26] *** Quits: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Ping timeout: 252 seconds)
[22:24:53] *** Joins: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[22:26:13] *** Quits: nobody_ (~nobody@host-95-239-241-61.retail.telecomitalia.it) (Ping timeout: 240 seconds)
[22:26:45] *** Quits: quartz (~quartz@user/quartz) (Ping timeout: 265 seconds)
[22:27:45] *** Quits: MrMobius_ (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Ping timeout: 252 seconds)
[22:28:20] *** Joins: CormacAttack (~mac@144.62.50.200)
[22:28:37] *** Joins: fmsd (~no@105.155.205.213)
[22:29:10] *** Quits: rgrinberg (~textual@2806:101e:7:7c2f:99ad:1649:a2c7:9e20) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:29:27] *** Joins: shivesh__ (~shivesh@user/shivesh)
[22:31:00] *** Quits: Thedarkb-Desktop (~Thedarkb@2001:bb6:b403:e042:6819:4acb:74ce:113d) (Remote host closed the connection)
[22:31:14] *** Quits: strajder (~strajder@user/strajder) (Quit: gn)
[22:31:14] *** Joins: quartz (~quartz@user/quartz)
[22:32:21] *** Joins: fmsd__ (~no@196.74.28.114)
[22:32:37] *** Quits: lleo (~leo@31-161-189-154.mobile.kpn.net) (Ping timeout: 240 seconds)
[22:32:37] *** Quits: shivesh (~shivesh@user/shivesh) (Ping timeout: 240 seconds)
[22:34:37] *** Quits: fmsd (~no@105.155.205.213) (Ping timeout: 240 seconds)
[22:34:50] *** Joins: Alhazred (~Alhazred@s91904425.blix.com)
[22:36:24] *** Quits: jinsun (~quassel@user/jinsun) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:36:44] *** Joins: jinsun (~quassel@user/jinsun)
[22:37:52] *** Joins: fmsd___ (~no@196.74.28.114)
[22:38:08] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[22:38:33] *** Quits: V-T60 (~v@gateway/tor-sasl/v-t60) (Ping timeout: 276 seconds)
[22:39:57] *** Joins: arinov (~arinov@31.142.57.149)
[22:40:13] *** Quits: fmsd__ (~no@196.74.28.114) (Ping timeout: 240 seconds)
[22:41:08] *** Joins: pierr (~Username@ip-222-138.ists.pl)
[22:41:31] *** Joins: fmsd__ (~no@160.176.41.135)
[22:43:49] *** Quits: fmsd___ (~no@196.74.28.114) (Ping timeout: 240 seconds)
[22:44:17] *** Joins: fmsd___ (~no@105.158.25.145)
[22:45:07] *** Quits: Haxxa (~Haxxa@202-130-210-132.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:23] *** Joins: john99 (~johnny@138.62.221.87.dynamic.jazztel.es)
[22:46:49] *** Quits: fmsd__ (~no@160.176.41.135) (Ping timeout: 252 seconds)
[22:47:10] *** Joins: Haxxa (~Haxxa@202-130-210-132.ip4.superloop.com)
[22:47:32] *** Quits: boB_K7IQ (~boB_K7IQ@152.44.147.180) (Ping timeout: 265 seconds)
[22:47:32] *** Parts: pierr (~Username@ip-222-138.ists.pl) (Closing Window)
[22:48:45] *** Joins: fmsd__ (~no@105.158.25.145)
[22:50:09] *** Quits: CormacAttack (~mac@144.62.50.200) (Quit: WeeChat 3.3)
[22:51:01] *** Quits: fmsd___ (~no@105.158.25.145) (Ping timeout: 240 seconds)
[22:51:13] *** Quits: Thymo (~Thymo@NASSP/developer/Thymo) (Ping timeout: 252 seconds)
[22:52:20] *** Joins: boB_K7IQ (~boB_K7IQ@152.44.147.180)
[22:53:49] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[22:53:50] <sham1> No need to get upset about Skeeto
[22:53:59] *** Joins: Thymo (~Thymo@NASSP/developer/Thymo)
[22:54:42] *** Joins: gproto23 (~gproto23@user/gproto23)
[22:56:06] <river> skintimidation: that's how you implement a DFA :P
[22:56:12] *** Quits: Thymo (~Thymo@NASSP/developer/Thymo) (Read error: Connection reset by peer)
[22:56:37] *** Quits: donald1 (~donald@2a01:e0a:95e:7ca0:4d4d:b2e6:7414:759f) (Ping timeout: 240 seconds)
[22:56:51] <skintimidation> river: is that a "don't fucking ask," which is what you hear in response to the obvious "what led you to do this dumb shit" question you pose?
[22:57:16] <river> no just about indexing with chars, that's a useful trick here
[22:57:30] <river> basically read in a char ch, then look up what_to_do_next[ch]
[22:57:40] <skintimidation> it's useful, but it's not whatsoever simple nor well-labeled
[22:57:51] <skintimidation> the guy is up his own asshole in ways i didn't know you could do and still live
[22:58:08] <river> i think his blogs great i dont know what your on about
[22:58:14] <skintimidation> and the only reason why i care is because if enough people crawl up there with him, it's going to perforate his bowel and get all over our collective carpets
[22:58:27] <skintimidation> someone who responds with "your" in the wrong context should be executed in 2021
[22:58:36] <skintimidation> you had too long to learn how to differentiate the terms
[22:58:38] <nomagno> river: that is completely encoding dependant as far as most programs that output stuff are concerned
[22:58:47] *** Quits: sarvet (~sarvet@p200300e8d739e494dd9b9e5d9ba7cd50.dip0.t-ipconnect.de) (Quit: sarvet)
[22:58:47] <river> encoding dependant ????
[22:59:18] <river> skintimidation you need to like, get angry at billionaires or landlords instead
[22:59:28] <nomagno> Oh no, just taking a char instead of an int
[22:59:31] *** Joins: Thymo (~Thymo@NASSP/developer/Thymo)
[22:59:31] <nomagno> Weird
[22:59:51] <river> chars are just numbers, 'a' is a number
[23:00:06] <river> (infact its an int I think?)
[23:00:25] <river> no idea why they did that
[23:00:47] <caze> char is an integer type.
[23:01:09] <caze> Character constants have int type.
[23:01:13] *** Quits: Akuli (~Akuli@87-94-111-87.bb.dnainternet.fi) (Quit: Akuli)
[23:01:21] <caze> Nearly everything is already promoted to int anyway.
[23:01:45] *** Joins: Akuli (~Akuli@87-94-111-87.bb.dnainternet.fi)
[23:03:07] <nomagno> Then are multibyte character constants fine?
[23:03:14] <fizzie> Enumeration constants are also `int`s rather than values of the enumerated type they're part of (which might but isn't necessarily compatible with `int`).
[23:03:42] <river> dont remind me that multibyte things exist, was having a nice day
[23:03:52] <caze> nomagno: They're 
[23:04:07] <caze> implementation defined.
[23:07:21] *** Quits: clamiax (~clamiax@net-93-144-125-193.cust.vodafonedsl.it) (Ping timeout: 252 seconds)
[23:08:04] <fizzie> They're also often not implementation-defined in a particularly useful way. As in https://0x0.st/-hnE.txt -- the latter value's generally the more useful one.
[23:15:23] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[23:16:03] *** Joins: sonny (~sonny@8.6.144.252)
[23:16:09] *** Joins: gproto23 (~gproto23@user/gproto23)
[23:17:49] *** Joins: Betal (~Betal@user/betal)
[23:18:07] *** Joins: donald1 (~donald@88.165.121.242)
[23:18:35] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[23:18:38] *** Joins: slidercrank (~slidercra@user/slidercrank)
[23:23:19] *** Quits: somlis (~somlis@user/somlis) (Quit: WeeChat 3.3)
[23:27:10] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 265 seconds)
[23:27:34] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[23:28:03] *** Joins: somlis (~somlis@user/somlis)
[23:28:28] <SymbioticFemale> can anyone help me figure out what is wrong with my use of freopen? I'm trying to rdr stdout to file but my file comes up empty. https://paste.debian.net/plainh/aca39a80
[23:28:42] <SymbioticFemale> its about 10 lines and it compiles
[23:29:22] *** Joins: Klinda (~superleag@user/klinda)
[23:31:42] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.3)
[23:33:05] <SymbioticFemale> wait, i think i misunderstood the concept of freopen
[23:33:19] <SymbioticFemale> yeah i misunderstood the concept. nevermind.
[23:33:24] <SymbioticFemale> all good.
[23:33:27] *** Joins: nobody_ (~nobody@host-95-239-241-61.retail.telecomitalia.it)
[23:34:39] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[23:34:40] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[23:34:40] *** Joins: wroathe (~wroathe@user/wroathe)
[23:38:03] *** Joins: rgrinberg (~textual@187.223.58.12)
[23:39:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[23:40:42] *** Quits: mjack (~mjack@5634d05c.rev.stofanet.dk) (Quit: mjack)
[23:41:01] *** Quits: arinov (~arinov@31.142.57.149) (Ping timeout: 240 seconds)
[23:44:45] *** Quits: pulse (~pulse@user/pulse) (Quit: Join a gamedev community https://indiedevs.net/)
[23:45:31] *** Quits: esselfe (~steph@user/esselfe) (Quit: Upgrading disk)
[23:49:49] *** Quits: Itaru (~DaSH@ro2.flokinet.is) (Ping timeout: 240 seconds)
[23:51:20] *** Quits: constxd (~brad@192.75.101.164) (Ping timeout: 265 seconds)
[23:52:05] *** Quits: NEYi (~NEYi@109.251.216.38) (Ping timeout: 252 seconds)
[23:53:02] *** Quits: nobody_ (~nobody@host-95-239-241-61.retail.telecomitalia.it) (Quit: Leaving)
[23:53:33] *** Quits: HisShadow (~HisShadow@user/hisshadow) (Ping timeout: 252 seconds)
[23:54:21] *** Quits: soul-d (~uknown@user/soul-d) (Read error: Connection reset by peer)
[23:55:00] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[23:56:04] *** Joins: gproto23 (~gproto23@user/gproto23)
[23:57:13] *** Joins: fmsd (~no@160.176.227.210)
[23:59:01] *** Quits: nofx (~i.am@189.26.169.41.dynamic.adsl.gvt.net.br) (Quit: I come down here for a fat woman and that's what I'm havin.)
[23:59:04] *** Quits: fmsd__ (~no@105.158.25.145) (Ping timeout: 265 seconds)
[23:59:48] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[23:59:59] *** Joins: ossifrage (~ossifrage@pool-72-78-189-30.phlapa.fios.verizon.net)
