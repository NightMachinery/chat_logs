[00:06:44] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[00:07:15] *** Quits: davidkrauser (~davidkrau@user/davidkrauser) (Quit: Leaving)
[00:07:28] *** Quits: theoceaniscool (~theoceani@93.177.120.255) (Ping timeout: 246 seconds)
[00:08:20] *** alm_ is now known as alm
[00:08:26] *** Joins: theoceaniscool (~theoceani@93.177.120.255)
[00:11:14] <zsnes> you wrote an IRCd in mIRC script? lol impressive
[00:11:23] <Jigsy> Yeah.
[00:11:28] <Jigsy> Mode parsing was a bitch.
[00:11:40] <Jigsy> I plan to put it on Github when I'm done.
[00:11:46] *** Quits: salem (~salem@pool-98-111-206-141.pitbpa.fios.verizon.net) (Quit: ZNC 1.8.2 - https://znc.in)
[00:11:59] <Jigsy> I have to start from scratch to do server linking, though.
[00:13:36] *** Joins: salem (~salem@pool-98-111-206-141.pitbpa.fios.verizon.net)
[00:15:27] <A_Dragon> https://github.com/ircdocs/parser-tests/
[00:15:54] *** Joins: PurpleGuest (~PurpleGue@cpe-74-139-248-220.kya.res.rr.com)
[00:18:28] *** Joins: Crassus (~Crassus@user/crassus)
[00:22:49] *** Quits: Torr (~Torr@user/torr) (Quit: leaving)
[00:28:51] *** Quits: printf (~printf@user/printf) (Quit: The Lounge - https://thelounge.chat)
[00:29:25] *** Joins: printf (~printf@user/printf)
[00:29:30] *** Quits: Jigsy (~Jigsy@user/jigsy) (Read error: Connection reset by peer)
[00:30:11] *** Joins: Jigsy (~Jigsy@user/jigsy)
[00:34:22] *** Quits: burningserenity_ (~burningse@142-196-178-216.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[00:49:35] *** Quits: hikhvar7960 (~thelounge@dynamic-046-114-004-117.46.114.pool.telefonica.de) (Quit: The Lounge - https://thelounge.chat)
[00:57:20] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Quit: Client closed)
[00:57:36] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[00:57:41] *** Quits: theoceaniscool (~theoceani@93.177.120.255) (Ping timeout: 265 seconds)
[00:58:48] *** Joins: theoceaniscool (~theoceani@93.177.120.255)
[01:02:46] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[01:07:53] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[01:30:46] *** Quits: ray (~ray@user/re) (Quit: WeeChat 3.2)
[01:32:38] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 268 seconds)
[01:33:19] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:60c2:6b20:449d:8d91)
[01:33:25] <Grant9824> Hi
[01:33:39] *** Joins: fewdollars (~fewdollar@pool-100-11-96-34.phlapa.fios.verizon.net)
[01:34:43] *** Parts: fewdollars (~fewdollar@pool-100-11-96-34.phlapa.fios.verizon.net) ()
[01:39:11] *** Quits: PurpleGuest (~PurpleGue@cpe-74-139-248-220.kya.res.rr.com) (Quit: Client closed)
[01:39:26] *** Joins: kupi (uid212005@id-212005.stonehaven.irccloud.com)
[01:42:14] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[01:44:05] *** Quits: MrFantastik (~Thunderbi@rrcs-184-74-43-235.nys.biz.rr.com) (Ping timeout: 265 seconds)
[01:48:36] *** Joins: strudl (~strudl@user/strudl)
[01:48:36] *** Quits: strudl (~strudl@user/strudl) (Excess Flood)
[01:49:09] *** Joins: strudl (~strudl@user/strudl)
[01:52:39] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 255 seconds)
[01:57:43] *** Quits: Jad (~Nashmi@user/jad) (Ping timeout: 246 seconds)
[02:01:02] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Quit: Client closed)
[02:01:22] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[02:04:56] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[02:06:28] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[02:20:25] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[02:29:49] *** Joins: Torr (~Torr@user/torr)
[02:32:35] *** Joins: steve__ (~steve@ool-18b99d28.dyn.optonline.net)
[02:33:44] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[02:37:51] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Remote host closed the connection)
[02:38:19] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[02:39:16] *** Quits: Kane (~Kane@2a01:e34:ee89:5d90:3995:7c46:241f:413) (Quit: Leaving)
[02:40:07] *** Joins: arcatech (~arcatech@user/arcatech)
[02:41:26] *** Quits: arcatech (~arcatech@user/arcatech) (Client Quit)
[02:47:42] <mrus> is there something similar to C's preprocessor (#ifdef) that can be used to in-/exclude optional code and dependencies?
[02:51:45] <A_Dragon> Check out build constraints
[02:52:15] <fizzie> (Also often called "build tags".)
[02:52:17] *** Quits: andlabs_ (~andlabs@71.190.119.164) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:52:54] *** Joins: andlabs (~andlabs@71.190.119.164)
[02:54:19] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.2)
[03:11:18] *** Quits: steve__ (~steve@ool-18b99d28.dyn.optonline.net) (Remote host closed the connection)
[03:17:25] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[03:22:04] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[03:29:17] *** Quits: hatz_ (~user@2a05:f480:1400:f44:5400:3ff:fe6d:f349) (Quit: hatz_)
[03:29:50] <mrus> A_Dragon fizzie thanks!
[03:30:02] <mrus> build tags was the keyword I was looking for
[03:31:35] *** Quits: jsrnop (~mark@user/jsrnop) (Quit: The Lounge - https://thelounge.chat)
[03:31:56] *** Joins: jsrnop (~mark@user/jsrnop)
[03:34:22] *** Joins: yoonkn (~user@175.197.208.79)
[03:36:15] *** Joins: marlinc_ (~marlinc@user/marlinc)
[03:36:47] *** Quits: Grant9824 (~Grant9824@2600:1004:b06b:a17:3f79:810b:70ae:c9f8) (Quit: Quit)
[03:37:11] *** Quits: marlinc (~marlinc@user/marlinc) (Ping timeout: 265 seconds)
[03:38:45] *** Joins: Grant9824 (~Grant9824@2600:1004:b06b:a17:3f79:810b:70ae:c9f8)
[03:39:51] *** Joins: lungaro (~lungaro@99-117-118-33.lightspeed.sndgca.sbcglobal.net)
[03:40:47] <mrus> don't seem to find a way on how to make dependencies be only downloaded for specific build tags, hm
[03:41:06] *** Quits: since_ (d1cb7284cb@ircbox.informatik.uni-erlangen.de) (Ping timeout: 255 seconds)
[03:45:54] *** Quits: explodes (~explodes@user/explodes) (Ping timeout: 240 seconds)
[03:47:05] *** Joins: explodes (~explodes@user/explodes)
[03:47:31] *** Joins: since_ (d1cb7284cb@ircbox.informatik.uni-erlangen.de)
[03:53:12] *** Quits: Grant9824 (~Grant9824@2600:1004:b06b:a17:3f79:810b:70ae:c9f8) (Quit: Quit)
[03:57:30] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:59:20] *** Joins: Grant9824 (~Grant9824@2600:1004:b06b:a17:3f79:810b:70ae:c9f8)
[04:00:38] *** Quits: Grant9824 (~Grant9824@2600:1004:b06b:a17:3f79:810b:70ae:c9f8) (Client Quit)
[04:00:51] *** Joins: Grant9824 (~Grant9824@2600:1004:b06b:a17:3f79:810b:70ae:c9f8)
[04:03:12] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 252 seconds)
[04:04:13] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[04:04:40] <b0nn> mrus: What are you trying to stop from being downloaded?
[04:05:09] <b0nn> I mean, you could go the other way and distribute a vendor/ which means that almost nothing extra will be downloaded
[04:05:51] *** Quits: arinov__ (~arinov@213.194.126.155) (Ping timeout: 255 seconds)
[04:06:04] *** Quits: andlabs (~andlabs@71.190.119.164) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:07:50] *** Quits: Grant9824 (~Grant9824@2600:1004:b06b:a17:3f79:810b:70ae:c9f8) (Quit: Quit)
[04:08:02] *** Joins: Grant9824 (~Grant9824@2600:1004:b06b:a17:3f79:810b:70ae:c9f8)
[04:08:40] *** Joins: andlabs (~andlabs@71.190.119.164)
[04:09:26] *** Joins: burningserenity (~burningse@2603:9001:f01:ad99::1002)
[04:14:24] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 255 seconds)
[04:21:30] *** Quits: normen (~normen@p200300d7173dc900d0fe00d0fc200e59.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[04:22:57] *** Quits: GZJ0X_ (~GZJ0X@199.193.127.138.16clouds.com) (Ping timeout: 255 seconds)
[04:25:54] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[04:28:06] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[04:38:48] *** Joins: Crassus (~Crassus@user/crassus)
[04:46:01] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:46:30] *** Quits: lauraaah (uid156848@id-156848.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[04:46:34] *** Quits: mrus (~mrus@2001:19f0:5:3fd4:5400:3ff:fe48:1820) (Ping timeout: 240 seconds)
[04:46:47] *** Quits: Garb0 (~Garb0@user/garb0) (Quit: Garb0)
[04:47:33] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:49:57] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:52:02] *** Joins: normen (~normen@p200300d7173dc900d0fe00d0fc200e59.dip0.t-ipconnect.de)
[04:53:27] *** Joins: arcatech (~arcatech@user/arcatech)
[05:08:22] *** Quits: andlabs (~andlabs@71.190.119.164) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:10:53] *** Joins: andlabs (~andlabs@71.190.119.164)
[05:11:52] *** Joins: Crassus (~Crassus@user/crassus)
[05:12:47] *** Quits: theoceaniscool (~theoceani@93.177.120.255) (Ping timeout: 268 seconds)
[05:18:35] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[05:19:43] *** Joins: theoceaniscool (~theoceani@93.177.120.255)
[05:20:38] *** Joins: reedrichards (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[05:21:00] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Ping timeout: 255 seconds)
[05:21:00] *** reedrichards is now known as MrFantastik
[05:23:10] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[05:24:41] *** Joins: gggp (~gggp@60.10.194.47)
[05:27:25] *** Quits: gggp (~gggp@60.10.194.47) (Remote host closed the connection)
[05:28:29] *** Quits: andlabs (~andlabs@71.190.119.164) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:31:39] *** Joins: reedrichards (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[05:32:30] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Ping timeout: 258 seconds)
[05:32:30] *** reedrichards is now known as MrFantastik
[05:40:23] *** Joins: endigma5 (~endigma@134.41.133.214)
[05:42:22] *** Quits: endigma (~endigma@134.41.133.214) (Ping timeout: 265 seconds)
[05:42:22] *** endigma5 is now known as endigma
[05:51:30] *** Joins: andlabs (~andlabs@71.190.119.164)
[05:57:06] *** Joins: gggpkm (~gggpkm@221.219.77.161)
[06:14:06] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Quit: MrFantastik)
[06:16:06] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[06:25:24] *** Joins: Jad (~Nashmi@user/jad)
[06:32:12] *** Quits: hposca (~hposca@node-1w7jr9phoke2sad1ixki5h523.ipv6.telus.net) (Ping timeout: 256 seconds)
[06:38:16] *** Quits: egy (egy@tilde.team) (Ping timeout: 250 seconds)
[06:41:39] *** Joins: egy (egy@tilde.team)
[06:48:16] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Remote host closed the connection)
[06:53:38] *** Joins: gggpkm_ (~gggpkm@60.10.23.164)
[06:56:04] *** Quits: gggpkm (~gggpkm@221.219.77.161) (Ping timeout: 258 seconds)
[06:56:43] *** Joins: boingolov (~nastynate@c-71-236-46-219.hsd1.tn.comcast.net)
[07:08:44] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 252 seconds)
[07:17:40] *** Joins: src (~src@user/src)
[07:19:10] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[07:23:55] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[07:24:57] *** Quits: gggpkm_ (~gggpkm@60.10.23.164) (Remote host closed the connection)
[07:32:34] *** Parts: Grant9824 (~Grant9824@2600:1004:b06b:a17:3f79:810b:70ae:c9f8) (Leaving)
[07:33:19] *** Joins: gggp (~gggp@60.10.194.47)
[07:41:06] *** Joins: gggp__ (~gggp@60.10.194.47)
[07:42:36] *** Quits: gggp (~gggp@60.10.194.47) (Killed (NickServ (GHOST command used by gggp__)))
[07:42:38] *** gggp__ is now known as gggp
[07:43:15] *** darkapex_ is now known as darkapex
[07:46:49] *** Joins: Grant9824 (~Grant9824@2600:1004:b06b:a17:3f79:810b:70ae:c9f8)
[07:48:50] *** Joins: gggp_ (~gggp@60.10.23.164)
[07:51:56] *** Quits: gggp (~gggp@60.10.194.47) (Ping timeout: 255 seconds)
[07:53:15] *** Quits: gggp_ (~gggp@60.10.23.164) (Remote host closed the connection)
[07:54:01] *** Joins: gggp_ (~gggp@60.10.194.47)
[08:02:28] *** Parts: Grant9824 (~Grant9824@2600:1004:b06b:a17:3f79:810b:70ae:c9f8) (Leaving)
[08:03:56] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[08:06:33] *** Joins: gggp__ (~gggp@60.10.194.47)
[08:09:56] *** Quits: gggp_ (~gggp@60.10.194.47) (Ping timeout: 255 seconds)
[08:24:41] *** Joins: arcatech (~arcatech@user/arcatech)
[08:31:03] *** Joins: Grant9824 (~Grant9824@2600:1004:b06b:a17:3f79:810b:70ae:c9f8)
[08:32:03] *** Quits: Grant9824 (~Grant9824@2600:1004:b06b:a17:3f79:810b:70ae:c9f8) (Client Quit)
[08:36:57] *** Quits: burningserenity (~burningse@2603:9001:f01:ad99::1002) (Quit: ZNC 1.8.2 - https://znc.in)
[08:39:02] <dante443> Is it an unusual usage of a for select to use it to update a state var without having a body of the case? example: var localVar int; ...; case localVar = <-remoteVar5D:
[08:39:32] <dante443> type: remoteVar5D => remoteVar
[08:39:35] <dante443> typo*
[08:46:06] *** Joins: mrus (~mrus@2001:19f0:5:3fd4:5400:3ff:fe48:1820)
[08:46:14] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:48:14] *** gggp__ is now known as gggp
[08:57:46] *** Joins: reedrichards (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[08:58:07] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Ping timeout: 265 seconds)
[08:58:08] *** reedrichards is now known as MrFantastik
[09:20:18] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[09:21:25] *** Joins: Crassus (~Crassus@user/crassus)
[09:21:37] *** Joins: gggp_ (~gggp@60.10.194.47)
[09:23:57] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[09:24:42] *** Quits: gggp (~gggp@60.10.194.47) (Ping timeout: 265 seconds)
[09:25:01] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[09:33:30] *** Quits: gggp_ (~gggp@60.10.194.47) (Read error: Connection reset by peer)
[09:34:48] *** Joins: gggpkm (~gggpkm@60.10.23.164)
[09:45:55] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:54:50] *** Joins: Vukan_ (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec)
[09:55:03] *** Quits: normen (~normen@p200300d7173dc900d0fe00d0fc200e59.dip0.t-ipconnect.de) (Ping timeout: 255 seconds)
[09:57:14] *** Joins: gggpkm_ (~gggpkm@60.10.23.165)
[09:58:21] <b0nn> dante443: you don't need a select for that, no. because the goroutine will block until a read from remoteVar is made. You'd use a select with body if you wanted to do other things (eg. non-blocking, so a default: )
[09:59:33] *** Quits: gggpkm (~gggpkm@60.10.23.164) (Ping timeout: 255 seconds)
[10:00:53] *** Joins: blinux (~blinux@pool-108-51-228-58.washdc.fios.verizon.net)
[10:01:23] *** Quits: pztrn (~pztrn@user/pztrn) (Ping timeout: 268 seconds)
[10:05:01] *** Joins: nameless (~nameless@user/nameless)
[10:16:06] *** Quits: gggpkm_ (~gggpkm@60.10.23.165) (Remote host closed the connection)
[10:17:44] *** Quits: theoceaniscool (~theoceani@93.177.120.255) (Ping timeout: 255 seconds)
[10:18:52] *** Joins: theoceaniscool (~theoceani@93.177.120.255)
[10:19:46] *** Quits: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net) (Ping timeout: 252 seconds)
[10:19:58] *** Quits: ttke (501@46-97-229-216.sr2.pon.net) (Ping timeout: 246 seconds)
[10:21:21] *** Joins: gggp (~gggp@60.10.194.48)
[10:24:20] *** Joins: miasuji (~miasuji@184-96-251-92.hlrn.qwest.net)
[10:24:50] *** Quits: miasuji (~miasuji@184-96-251-92.hlrn.qwest.net) (Remote host closed the connection)
[10:25:31] *** Joins: miasuji (~miasuji@184-96-251-92.hlrn.qwest.net)
[10:29:40] *** Joins: normen (~normen@p200300d7173dc900d0fe00d0fc200e59.dip0.t-ipconnect.de)
[10:32:07] *** Joins: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net)
[10:33:04] *** Quits: miasuji (~miasuji@184-96-251-92.hlrn.qwest.net) (Quit: Leaving)
[10:36:34] *** Joins: souvik_ (~souvik@157.43.222.182)
[10:38:02] *** Quits: souvik (~souvik@103.199.182.83) (Ping timeout: 268 seconds)
[10:38:03] *** Quits: souvik_ (~souvik@157.43.222.182) (Read error: Connection reset by peer)
[10:46:57] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[10:47:15] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 255 seconds)
[10:52:21] *** Joins: souvik (~souvik@103.199.182.6)
[10:54:24] *** Joins: gggp_ (~gggp@123.113.185.45)
[10:57:36] *** Quits: gggp (~gggp@60.10.194.48) (Ping timeout: 255 seconds)
[11:01:50] *** Quits: kupi (uid212005@id-212005.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[11:04:32] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Quit: Client closed)
[11:04:50] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[11:09:58] *** Joins: gggp__ (~gggp@123.113.188.14)
[11:10:01] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[11:13:27] *** Quits: gggp_ (~gggp@123.113.185.45) (Ping timeout: 265 seconds)
[11:15:30] *** Quits: darkapex (~darkapex@user/darkapex) (Read error: Connection reset by peer)
[11:16:34] *** Joins: darkapex (~darkapex@user/darkapex)
[11:19:38] *** Quits: pepee (~user@user/pepee) (Quit: bye $IRC)
[11:23:15] *** Quits: Eddward_ (~Eddward@207.138.204.132) (Ping timeout: 258 seconds)
[11:23:56] *** Joins: gggp_ (~gggp@123.113.189.203)
[11:26:24] *** Quits: dalan6 (~dalan@27-32-31-114.tpgi.com.au) (Quit: dalan6)
[11:26:34] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Quit: WeeChat 3.1)
[11:26:53] *** Joins: dalan6 (~dalan@27-32-31-114.tpgi.com.au)
[11:27:05] *** Quits: gggp__ (~gggp@123.113.188.14) (Ping timeout: 258 seconds)
[11:27:57] *** Joins: gggp__ (~gggp@60.10.194.48)
[11:29:20] *** gggp__ is now known as gggp
[11:30:58] *** Joins: califax (~califax@user/califx)
[11:31:20] *** Quits: gggp_ (~gggp@123.113.189.203) (Ping timeout: 265 seconds)
[11:33:55] *** Joins: mrig (~mrig@user/mrig)
[11:35:29] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[11:44:19] *** Joins: gggp_ (~gggp@60.10.194.48)
[11:44:43] *** Quits: theoceaniscool (~theoceani@93.177.120.255) (Ping timeout: 258 seconds)
[11:47:02] *** Quits: gggp (~gggp@60.10.194.48) (Ping timeout: 252 seconds)
[11:48:49] *** Joins: fef (~thedawn@user/thedawn)
[11:49:13] *** Joins: gggp__ (~gggp@60.10.194.48)
[11:52:03] *** Quits: gggp_ (~gggp@60.10.194.48) (Ping timeout: 255 seconds)
[11:55:37] *** Joins: theoceaniscool (~theoceani@93.177.120.255)
[12:01:35] *** Quits: theoceaniscool (~theoceani@93.177.120.255) (Ping timeout: 258 seconds)
[12:07:05] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (Quit: A lol made me boom.)
[12:08:25] *** Joins: chripell (~chripell@109.255.230.3)
[12:08:29] *** Quits: chripell_ (~chripell@109.255.230.3) (Ping timeout: 258 seconds)
[12:09:09] *** Quits: Jigsy (~Jigsy@user/jigsy) (Remote host closed the connection)
[12:09:33] *** Joins: Jigsy (~Jigsy@user/jigsy)
[12:11:58] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[12:15:30] *** Joins: theoceaniscool (~theoceani@93.177.120.255)
[12:16:11] *** gggp__ is now known as gggp
[12:22:31] *** Joins: sizeof_void34 (~Thunderbi@109.252.76.37)
[12:22:54] *** Joins: gggp_ (~gggp@123.113.179.166)
[12:23:50] *** Quits: Jad (~Nashmi@user/jad) (Ping timeout: 268 seconds)
[12:25:54] *** Quits: gggp (~gggp@60.10.194.48) (Ping timeout: 252 seconds)
[12:26:05] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Quit: Client closed)
[12:26:20] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[12:29:31] *** Joins: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be)
[12:31:34] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[12:49:07] *** Quits: theoceaniscool (~theoceani@93.177.120.255) (Ping timeout: 258 seconds)
[12:52:05] *** Quits: Vukan_ (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec) (Ping timeout: 255 seconds)
[13:07:04] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[13:07:37] *** Joins: Kane (~Kane@2a01:e34:ee89:5d90:8d2b:ad39:2f81:a8fd)
[13:11:49] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[13:13:40] <j416> dante443: if you're just waiting for one of several to unblock and you don't need anything else, then yes, a case without a body isn't uncommon
[13:16:42] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 265 seconds)
[13:16:51] *** Joins: sagax (~sagax@213.138.71.146)
[13:17:16] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[13:32:28] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 246 seconds)
[13:32:44] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[13:37:21] *** Quits: yelnah (~felix@110-174-118-63.tpgi.com.au) (Ping timeout: 255 seconds)
[13:37:22] *** Joins: ofh (~felix@2001:44b8:3080:a5:6f0:21ff:fe3c:d4d7)
[13:37:38] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Quit: leaving)
[13:40:39] *** Joins: NCS_One (~NCS_One@st-217-129-75-53.netvisao.pt)
[13:42:18] *** Quits: arthur (~arthur@91.135.14.14) (Ping timeout: 256 seconds)
[13:50:03] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 265 seconds)
[13:50:41] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[13:51:34] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 244 seconds)
[13:58:10] *** Joins: fef (~thedawn@user/thedawn)
[14:07:39] *** Joins: independent56 (~independe@ip-185-104-136-20.ptr.icomera.net)
[14:09:17] *** Quits: Jigsy (~Jigsy@user/jigsy) (Ping timeout: 268 seconds)
[14:10:46] *** Quits: Ohlov31153402689 (~Ohlov3@dyndsl-095-033-063-232.ewe-ip-backbone.de) (Ping timeout: 252 seconds)
[14:12:05] *** Joins: Jigsy (~Jigsy@user/jigsy)
[14:15:00] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 250 seconds)
[14:15:37] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[14:18:33] *** Joins: gggp__ (~gggp@60.10.194.48)
[14:21:30] *** Quits: gggp_ (~gggp@123.113.179.166) (Ping timeout: 258 seconds)
[14:26:57] *** Joins: gggp_ (~gggp@123.113.188.14)
[14:29:52] *** Quits: gggp__ (~gggp@60.10.194.48) (Ping timeout: 246 seconds)
[14:33:01] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 246 seconds)
[14:33:48] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[14:38:35] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 244 seconds)
[14:39:40] *** Quits: independent56 (~independe@ip-185-104-136-20.ptr.icomera.net) (Ping timeout: 246 seconds)
[14:40:14] *** Joins: iateadonut (~dan@121.177.17.154)
[14:41:29] *** Joins: goldfish (~goldfish@user/goldfish)
[14:41:31] <iateadonut> how would i use the docs (preferably 'go doc' from the command line) to find all functions called 'NewReader' or anything that returns a Reader?
[14:43:30] *** Joins: fef (~thedawn@user/thedawn)
[14:47:38] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[14:47:56] *** Quits: goldfish (~goldfish@user/goldfish) (Remote host closed the connection)
[14:49:05] *** Joins: Nex8192 (~Nex8192@user/nex8192)
[14:49:05] *** Joins: goldfish (~goldfish@user/goldfish)
[14:53:33] *** Quits: andlabs (~andlabs@71.190.119.164) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:57:30] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Quit: Client closed)
[14:57:46] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[14:58:42] *** Joins: independent56 (~independe@ip-185-104-136-20.ptr.icomera.net)
[15:03:07] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[15:03:18] *** Quits: independent56 (~independe@ip-185-104-136-20.ptr.icomera.net) (Ping timeout: 255 seconds)
[15:04:54] *** Quits: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be) (Read error: No route to host)
[15:08:13] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Remote host closed the connection)
[15:08:52] *** Joins: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be)
[15:08:55] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[15:10:25] *** Joins: Vukan_ (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec)
[15:13:37] *** Quits: mrus (~mrus@2001:19f0:5:3fd4:5400:3ff:fe48:1820) (Ping timeout: 246 seconds)
[15:24:04] *** Joins: gggp__ (~gggp@60.10.194.48)
[15:27:03] *** Quits: gggp_ (~gggp@123.113.188.14) (Ping timeout: 258 seconds)
[15:28:18] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Remote host closed the connection)
[15:28:57] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[15:29:21] *** Joins: gggp (~gggp@60.10.194.48)
[15:29:22] *** Quits: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net) (Quit: When You're Taught Through Feelings~♪)
[15:29:47] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[15:30:42] *** Quits: gggp__ (~gggp@60.10.194.48) (Ping timeout: 252 seconds)
[15:31:36] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Remote host closed the connection)
[15:32:37] <j416> iateadonut: I don't think you easily can, because there's go doc doesn't know what types implement io.Reader
[15:33:07] <j416> if by Reader you mean exactly io.Reader, you could grep?
[15:33:12] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[15:33:23] <j416> go doc io | grep " Reader$"
[15:34:16] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[15:35:00] *** Quits: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be) (Ping timeout: 268 seconds)
[15:35:45] *** Joins: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be)
[15:40:17] *** Quits: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be) (Read error: No route to host)
[15:44:42] *** Quits: Vukan_ (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec) (Ping timeout: 240 seconds)
[15:44:57] *** Joins: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be)
[15:46:11] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Remote host closed the connection)
[15:46:57] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[15:50:37] *** Joins: foobaz212 (~foobaz212@2.49.11.81)
[15:55:56] *** Joins: yelnah (~felix@2001:44b8:30c0:f2:6f0:21ff:fe3c:d4d7)
[15:56:35] *** Quits: ofh (~felix@2001:44b8:3080:a5:6f0:21ff:fe3c:d4d7) (Ping timeout: 255 seconds)
[16:03:45] <mikoto-chan> does this chat have an archive?
[16:05:31] <mikoto-chan> I lost the link with the example of how to have a function that satisfies the http.Handler interface but is still able to take other parameters
[16:05:56] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Read error: Connection reset by peer)
[16:06:30] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[16:06:56] *** Joins: Torr (~Torr@user/torr)
[16:08:20] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Read error: Connection reset by peer)
[16:09:02] <ikke> When was this, give or take?
[16:09:21] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[16:09:25] <CommunistWolf> sounds like you want a function that returns a function
[16:09:30] *** Quits: foobaz212 (~foobaz212@2.49.11.81) (Quit: Client closed)
[16:09:48] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[16:09:50] <CommunistWolf> or a function that returns a struct that has a function that satisfies the http.Handler interface
[16:14:52] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[16:17:25] <j416> mikoto-chan: middleware? https://play.golang.org/p/XuMeOglN59-
[16:17:38] *** Quits: gggp (~gggp@60.10.194.48) (Ping timeout: 252 seconds)
[16:17:49] *** Joins: Jad (~Nashmi@user/jad)
[16:18:39] *** Joins: Vukan_ (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec)
[16:19:14] *** Joins: gggpkm (~gggpkm@123.113.179.166)
[16:21:43] *** Quits: hexfive (~eric@50.35.83.177) (Quit: WeeChat 3.0)
[16:25:41] *** Joins: absc (~absc@dynamic-adsl-94-34-217-240.clienti.tiscali.it)
[16:26:40] *** Joins: j00n (~mario@user/j00n)
[16:26:45] *** Parts: j00n (~mario@user/j00n) (j00nior)
[16:26:54] *** Joins: j00n (~mario@user/j00n)
[16:36:00] *** Quits: alip (~alip@exherbo/developer/alip) (Ping timeout: 255 seconds)
[16:41:46] *** Joins: andlabs (~andlabs@71.190.119.164)
[16:45:10] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 244 seconds)
[16:47:47] *** Quits: Vukan_ (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec) (Quit: WeeChat 3.1)
[16:48:01] *** Joins: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec)
[16:49:20] *** Joins: Guest77 (~Guest77@2402:e280:2117:297:e041:4ae1:dd3c:1f08)
[16:49:39] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[16:50:01] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[16:51:48] <mikoto-chan> j416: yes, that's what I was looking for, thanks
[16:52:01] <mikoto-chan> somebody had sent me a real snippet of code a while ago, wish I could take a better look at it
[16:53:57] <nevivurn> also maybe https://pace.dev/blog/2018/05/09/how-I-write-http-services-after-eight-years.html#return-the-handler-4 ?
[16:54:25] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[17:03:37] *** Joins: independent56 (~independe@95.144.68.40)
[17:06:59] <mikoto-chan> nevivurn: good talk, should've watched it entirely
[17:08:43] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[17:17:43] *** Joins: souvik_ (~souvik@103.199.182.115)
[17:18:36] <gggpkm> how can I exec command in separate thread
[17:18:43] *** Quits: absc (~absc@dynamic-adsl-94-34-217-240.clienti.tiscali.it) (Remote host closed the connection)
[17:18:52] *** Quits: souvik (~souvik@103.199.182.6) (Ping timeout: 252 seconds)
[17:20:26] <ikke> go run
[17:20:31] <ikke> go <funcname<>
[17:25:32] *** Joins: fef (~thedawn@user/thedawn)
[17:27:33] *** Joins: tg (~tg@rockylinux/infra/tg)
[17:28:28] *** Joins: kupi (uid212005@id-212005.stonehaven.irccloud.com)
[17:28:43] *** Joins: arcatech (~arcatech@user/arcatech)
[17:29:01] *** Quits: arcatech (~arcatech@user/arcatech) (Client Quit)
[17:33:20] <Sam> What do you mean by "exec command"? Do you mean you want ti run another program without doing a C style fork? If so, see os.Exec
[17:34:29] *** Joins: arcatech (~arcatech@user/arcatech)
[17:35:53] <Sam> os/exec, even
[17:39:19] <mikoto-chan> is it a bad idea to embed all of your SQL in your Go files instead of having seperate .sql files?
[17:39:19] *** Quits: iateadonut (~dan@121.177.17.154) (Read error: Connection reset by peer)
[17:40:48] <Sam> If I have migrations I tend to prefer to keep those separate but for small queries and the like I generally just stick it in the Go. Only downside is that you can't do static analysis on your SQL as easily.
[17:41:10] *** Joins: iateadonut (~dan@121.177.17.154)
[17:41:25] *** Joins: gggp (~gggp@60.10.194.48)
[17:41:46] <ikke> in any case, make sure you use some kind of prepared statements
[17:41:59] *** Quits: gggpkm (~gggpkm@123.113.179.166) (Ping timeout: 258 seconds)
[17:43:07] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[17:44:22] <gggp> examples
[17:45:08] <Sam> gggp: examples of what? We're still not sure what you meant by your question :)
[17:45:24] <ikke> is there even a question?
[17:45:33] <ikke> oh, different nick
[17:45:56] <ikke> https://golangdocs.com/exec-in-golang
[17:46:17] <gggp> thanks
[17:46:24] <gggp> I have found it
[17:46:28] <gggp> though
[17:46:32] <ikke> gggp: fyi, I literally googled `golang exec`, first result
[17:46:43] <ikke> (well, used ddg)
[17:47:02] <gggp> ddg is better?
[17:47:28] <ikke> It's not google
[17:47:44] <gggp> I know
[17:47:47] <ikke> But in many cases I end up using google anyway
[17:47:51] <gggp> why
[17:47:58] <ikke> better results
[17:48:10] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Quit: Client closed)
[17:48:13] <gggp> for developer?
[17:48:28] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[17:48:49] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 265 seconds)
[17:49:46] <ikke> Sam: btw, according to oftc, the spam stopped for now
[17:49:55] <ikke> oh, libera this is :P
[17:51:13] *** Joins: nyash (~nyash@185.80.58.10)
[17:51:29] *** Quits: flommi_ (~flommi@puck942.startdedicated.de) (Quit: Quit)
[17:52:05] *** Joins: flommi (~flommi@puck942.startdedicated.de)
[17:52:09] *** Joins: gggp_ (~gggp@60.10.194.48)
[17:52:55] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Remote host closed the connection)
[17:53:34] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[17:55:12] *** Quits: gggp (~gggp@60.10.194.48) (Ping timeout: 255 seconds)
[17:56:20] *** Quits: goldfish (~goldfish@user/goldfish) (Quit: Leaving)
[18:00:44] <Sam> might be worth checking, but then I'd have to switch clients to run irc commands and I'm too lazy for that
[18:00:45] *** Quits: sizeof_void34 (~Thunderbi@109.252.76.37) (Quit: sizeof_void34)
[18:00:49] <Sam> :)
[18:04:26] <ikke> :)
[18:04:39] <ikke> I disabled it on the oftc channels I maintain
[18:08:15] *** Quits: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec) (Ping timeout: 255 seconds)
[18:09:23] <iateadonut> ioutil.TempDir() created a temp directory before 1.16.  but that function has been moved to os.TempDir() which is quite a bit different.  what's the rationality for the change?
[18:09:24] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Read error: Connection reset by peer)
[18:09:41] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[18:10:51] <lazyreader> ioutil has been deprecated and it’s functionality moved to either io. or os.
[18:11:41] <iateadonut> i understand that, but the new os.TempDir() is really different from ioutil.TempDir()  - where can i find the documentation about the change?
[18:11:45] <ikke> iateadonut: https://pkg.go.dev/os#MkdirTemp
[18:11:50] <ikke> I think that's what you need
[18:13:31] <lazyreader> Yeah, it got renamed in the move
[18:13:34] *** Joins: Guest15 (~Guest15@2402:e280:2117:297:e041:4ae1:dd3c:1f08)
[18:15:18] *** Quits: Guest15 (~Guest15@2402:e280:2117:297:e041:4ae1:dd3c:1f08) (Client Quit)
[18:19:18] <iateadonut> i see.
[18:20:30] <iateadonut> the package ioutil will not take any new commits, even for documentation?
[18:20:47] <fizzie> https://golang.org/doc/go1.16#ioutil lists all the renames.
[18:21:09] *** Joins: gggp__ (~gggp@60.10.194.48)
[18:23:59] *** Joins: gggp (~gggp@123.116.84.81)
[18:24:08] *** Quits: gggp_ (~gggp@60.10.194.48) (Ping timeout: 252 seconds)
[18:24:13] *** Joins: pztrn (~pztrn@user/pztrn)
[18:24:50] <fizzie> A bit of a shame that io/ioutil.TempDir doesn't have a similar "As of Go 1.16, ..." comment; even if it doesn't "simply call X", it could still mention os.MkdirTemp, not sure why's that.
[18:26:20] *** Quits: gggp__ (~gggp@60.10.194.48) (Ping timeout: 252 seconds)
[18:28:24] *** Joins: adinfinitum (~adinfinit@2600:6c40:653f:5f00:a650:d8d7:fe0b:8c1f)
[18:30:35] *** Joins: burningserenity (~burningse@143.244.34.133)
[18:33:46] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[18:35:09] *** Quits: yoonkn (~user@175.197.208.79) (Remote host closed the connection)
[18:38:22] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[18:40:37] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[18:45:36] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 255 seconds)
[18:46:04] *** Quits: normen (~normen@p200300d7173dc900d0fe00d0fc200e59.dip0.t-ipconnect.de) (Ping timeout: 246 seconds)
[18:50:03] *** Joins: gggp_ (~gggp@123.113.185.45)
[18:51:29] <acidsys> Hi, I want to build a package which includes a dependency not compatible with my OS. This dependency should not be crucial to the overall function of the program, but it stops it from building. Since it's referenced in many places across the package it'd be a lot of work to code out, so I wonder if there's a way to either generally skip a vendor upon building or at least to skip the compilation
[18:51:31] <acidsys> errors caused by this particular vendor dependency?
[18:51:43] *** Joins: PichuChen (~PichuChen@36-230-202-239.dynamic-ip.hinet.net)
[18:52:13] *** Quits: PichuChen (~PichuChen@36-230-202-239.dynamic-ip.hinet.net) (Remote host closed the connection)
[18:53:34] *** Quits: gggp (~gggp@123.116.84.81) (Ping timeout: 268 seconds)
[18:58:30] *** Joins: PichuChen (~PichuChen@2001-b400-e23a-b619-b59e-0016-2c8b-c392.emome-ip6.hinet.net)
[18:58:52] *** Quits: PichuChen (~PichuChen@2001-b400-e23a-b619-b59e-0016-2c8b-c392.emome-ip6.hinet.net) (Remote host closed the connection)
[18:58:52] *** Quits: iateadonut (~dan@121.177.17.154) (Read error: Connection reset by peer)
[18:58:56] <A_Dragon> you want to set a build constraint to only allow the files that reference that dep to build on that OS
[18:59:54] *** Quits: thing (~thing@user/thing) (Remote host closed the connection)
[18:59:59] <acidsys> Would I set that in the package I want to build or inside the failing/non-compatible dependency?
[19:00:11] *** Joins: thing (~thing@user/thing)
[19:00:50] <A_Dragon> they're per-file, so you could move everything in $package that references $dep to one file, and mark that, note that you'll likely need at least stubs in a file that builds when that file doesnt, or the compile might fail
[19:01:11] *** Joins: gggp__ (~gggp@60.10.194.48)
[19:01:12] *** Joins: iateadonut (~dan@121.177.17.154)
[19:04:40] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 268 seconds)
[19:04:42] *** Quits: gggp_ (~gggp@123.113.185.45) (Ping timeout: 265 seconds)
[19:05:21] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[19:07:49] <acidsys> Hm, that'd be quite a lot to consolidate, as there are many imports. Can I "turn it around", kind of like a negative constraint ?
[19:08:37] *** Quits: independent56 (~independe@95.144.68.40) (Remote host closed the connection)
[19:08:55] *** Joins: independent56 (~independe@95.144.68.40)
[19:09:11] *** Joins: Snyp (~rksht@49.207.206.57)
[19:09:21] *** gggp__ is now known as gggp
[19:09:53] <A_Dragon> it supports complex expressions, one momemnt
[19:10:17] <A_Dragon> but my question also becomes, can you cross compile to solve this and/or not compile it on your current OS?
[19:11:05] <A_Dragon> see https://pkg.go.dev/go/build#hdr-Build_Constraints
[19:12:30] *** Joins: normen (~normen@p200300d7173dc900510ab491fcaa2503.dip0.t-ipconnect.de)
[19:12:33] <acidsys> That might make it easier. Thank you for the help, I appreciate it! I am not sure about cross compiling - the developer said they won't support the OS (FreeBSD), and it turns out to be only this single, non critical dependency to stop the compilation, suggesting I should "compile it out". I saw the build constraint page and figured that'd be easier too, however think to not fully understand it, as
[19:12:35] <acidsys> adding // +build ignore or any variations to my files does not seem to change anything in the compilaton outcome
[19:14:05] <A_Dragon> what kind of dependency is it?
[19:14:10] <A_Dragon> Im assuming cgo?
[19:14:36] <acidsys> Hope a link is ok, as I'm not too sure myself: https://github.com/flynn/u2f
[19:14:37] *** Quits: Guest77 (~Guest77@2402:e280:2117:297:e041:4ae1:dd3c:1f08) (Quit: Ping timeout (120 seconds))
[19:14:44] <A_Dragon> and yes as I said you cant just remove the files (which is what ignore will do), you'll need to stub them
[19:15:07] <acidsys> I see, so sort of replace them with a "dummy code" I guess?
[19:15:15] *** Quits: andlabs (~andlabs@71.190.119.164) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:15:56] *** Joins: Guest77 (~Guest77@2402:e280:2117:297:e041:4ae1:dd3c:1f08)
[19:16:05] <A_Dragon> yes this depends on flynn/hid which uses cgo
[19:16:13] <A_Dragon> for the FIDO HID stuff
[19:16:33] <A_Dragon> you're gonna have a bad time without coming up with a library to fit into the place for BSD
[19:16:38] <A_Dragon> see if theres a hidraw equivalent.
[19:16:46] *** Joins: andlabs (~andlabs@71.190.119.164)
[19:17:00] <acidsys> I see. Oh in case that was confusing, the link is the failing dependency
[19:17:07] *** Quits: independent56 (~independe@95.144.68.40) (Remote host closed the connection)
[19:17:25] *** Joins: independent56 (~independe@95.144.68.40)
[19:17:58] <A_Dragon> The link you gave me is pure go. It has a dependency that is not
[19:18:26] <acidsys> Ohh you mean fixing the dependency of the dependency :]
[19:18:38] <A_Dragon> that will be whats causing your build fail, yes
[19:19:12] <acidsys> Got it.. I'll look into either of the options, thank you very much.
[19:22:17] *** Joins: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec)
[19:22:58] *** Joins: nemesis (sid508025@id-508025.brockwell.irccloud.com)
[19:23:53] *** Quits: gggp (~gggp@60.10.194.48) (Read error: Connection reset by peer)
[19:24:28] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[19:26:14] *** Quits: Guest77 (~Guest77@2402:e280:2117:297:e041:4ae1:dd3c:1f08) (Quit: Client closed)
[19:26:38] *** Joins: Guest77 (~Guest77@2402:e280:2117:297:e041:4ae1:dd3c:1f08)
[19:27:27] *** fef is now known as admin
[19:27:36] *** admin is now known as adminll
[19:29:50] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 265 seconds)
[19:30:09] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[19:30:09] *** Quits: normen (~normen@p200300d7173dc900510ab491fcaa2503.dip0.t-ipconnect.de) (Ping timeout: 255 seconds)
[19:31:05] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:60c2:6b20:449d:8d91) (Quit: WeeChat 3.2)
[19:32:55] *** Quits: meinside_ (uid24933@id-24933.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[19:33:16] <iateadonut> fizzie, yeah, i don't even see ioutil in the 1.16 branch, though, so i'm not sure where the `go doc` is pulling from
[19:38:09] *** Quits: kupi (uid212005@id-212005.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[19:40:46] *** Joins: absc (~absc@dynamic-adsl-94-34-217-240.clienti.tiscali.it)
[19:43:31] *** Quits: seebs (~seebs@24.196.59.174) (Ping timeout: 268 seconds)
[19:43:50] *** Joins: seebs (~seebs@24.196.59.174)
[19:43:56] *** Quits: ninjin (~ninjin@user/ninjin) (Ping timeout: 244 seconds)
[19:44:33] *** Joins: endigma9 (~endigma@134.41.133.214)
[19:44:34] *** Joins: brooks61 (~bswinnert@containers.neptunenetworks.org)
[19:44:45] *** Joins: ninjin (~ninjin@user/ninjin)
[19:45:22] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (Ping timeout: 268 seconds)
[19:45:22] *** Quits: yama_ (~yama@097-090-153-102.biz.spectrum.com) (Ping timeout: 268 seconds)
[19:45:30] *** Quits: derfj (sid19429@id-19429.tinside.irccloud.com) (Ping timeout: 240 seconds)
[19:45:33] *** Joins: LtHummus_ (~lthummus@97-126-113-251.tukw.qwest.net)
[19:45:54] *** Joins: derfj (sid19429@id-19429.tinside.irccloud.com)
[19:45:59] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Ping timeout: 268 seconds)
[19:45:59] *** Quits: endigma (~endigma@134.41.133.214) (Ping timeout: 268 seconds)
[19:45:59] *** Quits: printf (~printf@user/printf) (Ping timeout: 268 seconds)
[19:45:59] *** Quits: brooks6 (~bswinnert@containers.neptunenetworks.org) (Ping timeout: 268 seconds)
[19:45:59] *** Quits: LtHummus (~lthummus@97-126-113-251.tukw.qwest.net) (Ping timeout: 268 seconds)
[19:45:59] *** Quits: nolesswrong (~nolesswro@45.32.1.17) (Ping timeout: 268 seconds)
[19:45:59] *** Quits: clee (~clee@mg8.org) (Ping timeout: 268 seconds)
[19:46:00] *** endigma9 is now known as endigma
[19:46:09] *** Joins: reedrichards (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[19:46:33] *** Joins: printf (~printf@user/printf)
[19:46:38] *** Joins: nolesswrong (~nolesswro@45.32.1.17)
[19:46:52] *** Joins: yama_ (~yama@097-090-153-102.biz.spectrum.com)
[19:47:02] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Ping timeout: 244 seconds)
[19:47:11] *** Joins: clee (~clee@mg8.org)
[19:47:11] *** Joins: mischief1 (~mischief@wopr.sciops.net)
[19:47:13] *** Quits: loosh (~jason@vultr.bastion.pnj1.us.zj.is) (Read error: Connection reset by peer)
[19:47:32] *** Quits: adminll (~thedawn@user/thedawn) (Remote host closed the connection)
[19:47:50] *** Quits: mastardet (~mastardet@user/mastardet) (Ping timeout: 268 seconds)
[19:47:53] *** Joins: loosh (~jason@vultr.bastion.pnj1.us.zj.is)
[19:47:56] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[19:48:12] *** Joins: adminll (~thedawn@user/thedawn)
[19:48:27] *** reedrichards is now known as MrFantastik
[19:48:37] *** Quits: mischief (~mischief@wopr.sciops.net) (Read error: Connection reset by peer)
[19:49:15] *** Joins: mastardet (~mastardet@user/mastardet)
[19:49:30] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[19:49:48] *** Joins: Jad_ (~Nashmi@109.107.227.168)
[19:52:12] *** Quits: Jad (~Nashmi@user/jad) (Ping timeout: 255 seconds)
[19:53:28] *** Quits: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec) (Ping timeout: 256 seconds)
[19:53:32] *** Joins: gggpkm (~gggpkm@60.10.194.48)
[19:55:39] <acidsys> Working now :)
[19:57:15] *** Quits: absc (~absc@dynamic-adsl-94-34-217-240.clienti.tiscali.it) (Remote host closed the connection)
[19:57:35] *** Quits: Snyp (~rksht@49.207.206.57) (Quit: WeeChat 3.2)
[19:59:14] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-6-20.prtc.net)
[19:59:33] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 268 seconds)
[19:59:58] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[20:00:40] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[20:05:30] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-6-20.prtc.net) (Quit: Client closed)
[20:07:28] *** Joins: normen (~normen@p200300d7173dc900510ab491fcaa2503.dip0.t-ipconnect.de)
[20:08:19] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Quit: Client closed)
[20:08:36] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[20:13:55] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[20:17:15] *** Quits: Guest77 (~Guest77@2402:e280:2117:297:e041:4ae1:dd3c:1f08) (Quit: Client closed)
[20:17:29] <iateadonut> fizzie - i filed a bug report and maybe they're going to change the documentation?  don't know: https://github.com/golang/go/issues/47265
[20:18:23] *** Quits: rbn_ (~rbn@orgizm.net) (Ping timeout: 258 seconds)
[20:18:28] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[20:18:44] *** Joins: mickey (~user@user/mickey)
[20:19:19] *** Joins: rbn (~rbn@orgizm.net)
[20:21:45] *** Joins: oxum (~oxum@122.172.48.197)
[20:23:13] *** Parts: iateadonut (~dan@121.177.17.154) ()
[20:25:51] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[20:30:22] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 246 seconds)
[20:31:00] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 268 seconds)
[20:31:21] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[20:32:25] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:1cfa:7851:73cf:5368)
[20:35:02] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[20:35:08] *** Joins: gggpkm_ (~gggpkm@221.219.67.56)
[20:35:15] *** DaftMonk is now known as DaftHo
[20:36:00] *** Quits: gggpkm (~gggpkm@60.10.194.48) (Read error: Connection reset by peer)
[20:37:12] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:1cfa:7851:73cf:5368) (Ping timeout: 250 seconds)
[20:37:42] *** Quits: gpeskens (~gpeskens@2001:985:7aa4:1:a8e4:6699:fbac:4e4e) (Remote host closed the connection)
[20:38:02] *** Joins: gpeskens (~gpeskens@2001:985:7aa4:1:eb66:3b51:5e57:ae59)
[20:39:49] *** Quits: adinfinitum (~adinfinit@2600:6c40:653f:5f00:a650:d8d7:fe0b:8c1f) (Quit: WeeChat 3.0.1)
[20:39:50] *** Joins: Jimmy (~JimmyEatW@static-198-54-130-137.cust.tzulo.com)
[20:39:56] *** Quits: gggpkm_ (~gggpkm@221.219.67.56) (Ping timeout: 256 seconds)
[20:39:56] *** Quits: normen (~normen@p200300d7173dc900510ab491fcaa2503.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[20:40:12] *** Joins: adinfinitum (~adinfinit@2600:6c40:653f:5f00:a650:d8d7:fe0b:8c1f)
[20:41:22] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[20:41:47] *** Joins: c10l (~c10l@89.34.167.207)
[20:43:34] *** Quits: Jimmy (~JimmyEatW@static-198-54-130-137.cust.tzulo.com) (Quit: Leaving)
[20:47:30] *** Quits: Torr (~Torr@user/torr) (Quit: leaving)
[20:48:22] *** Quits: oxum (~oxum@122.172.48.197) (Remote host closed the connection)
[20:49:53] *** Joins: gggpkm (~gggpkm@221.219.67.56)
[20:50:04] *** Quits: Jad_ (~Nashmi@109.107.227.168) (Ping timeout: 265 seconds)
[20:50:13] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Quit: Client closed)
[20:50:30] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[20:55:34] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[20:56:40] *** Joins: gggpkm_ (~gggpkm@123.113.185.45)
[20:56:58] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 246 seconds)
[20:57:10] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[20:57:36] *** Joins: arinov__ (~arinov@212.156.215.30)
[20:59:12] *** Quits: gggpkm (~gggpkm@221.219.67.56) (Ping timeout: 256 seconds)
[20:59:41] *** Joins: oxum (~oxum@122.172.48.197)
[21:01:23] *** Quits: adinfinitum (~adinfinit@2600:6c40:653f:5f00:a650:d8d7:fe0b:8c1f) (Quit: WeeChat 3.0.1)
[21:01:28] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[21:04:39] *** Quits: oxum (~oxum@122.172.48.197) (Ping timeout: 255 seconds)
[21:08:37] *** Quits: phylaz (~phylaz@219.92-221-176.customer.lyse.net) (Quit: The Lounge - https://thelounge.chat)
[21:12:22] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 246 seconds)
[21:12:57] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[21:14:28] *** Joins: Eddward_ (~Eddward@207.138.204.132)
[21:21:49] *** Joins: pepee (~user@user/pepee)
[21:23:17] *** Joins: Maxattax97 (~max@2603:900a:1501:a7ca::100)
[21:29:28] *** Joins: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec)
[21:31:33] *** Quits: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be) (Read error: Connection reset by peer)
[21:32:18] *** Joins: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be)
[21:32:40] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 268 seconds)
[21:33:10] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[21:38:29] *** Joins: zoey (~zoey@2a02:8084:a080:9e00:7c8c:4b88:b1b8:70e1)
[21:38:33] *** Quits: arinov__ (~arinov@212.156.215.30) (Read error: Connection reset by peer)
[21:43:34] *** Quits: gggpkm_ (~gggpkm@123.113.185.45) (Remote host closed the connection)
[21:44:03] *** Quits: DaftHo (sid201914@user/daftmonk) (Quit: Updating details, brb)
[21:44:18] *** Joins: DaftHo (sid201914@id-201914.stonehaven.irccloud.com)
[21:45:08] *** Quits: DaftHo (sid201914@id-201914.stonehaven.irccloud.com) (Client Quit)
[21:45:22] *** Joins: DaftMonk (sid201914@user/daftmonk)
[21:45:23] *** Joins: gggp (~gggp@123.113.184.30)
[21:45:36] *** DaftMonk is now known as DaftHo
[21:48:41] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[21:52:36] *** Quits: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec) (Read error: Connection reset by peer)
[21:52:55] *** Joins: kupi (uid212005@id-212005.stonehaven.irccloud.com)
[21:53:19] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[21:55:18] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[21:56:29] *** Joins: oxum (~oxum@122.172.48.197)
[22:00:25] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 268 seconds)
[22:01:39] *** Quits: oxum (~oxum@122.172.48.197) (Ping timeout: 268 seconds)
[22:10:02] *** Joins: phylaz (~phylaz@219.92-221-176.customer.lyse.net)
[22:11:40] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 250 seconds)
[22:12:14] *** Quits: phylaz (~phylaz@219.92-221-176.customer.lyse.net) (Client Quit)
[22:12:48] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[22:13:15] *** Joins: phylaz (~phylaz@219.92-221-176.customer.lyse.net)
[22:25:15] *** Joins: arinov (~arinov@212.156.215.30)
[22:30:49] *** Quits: Thinkofname (~thinkthin@37.205.12.211) (Quit: Bridge terminating on SIGTERM)
[22:36:42] *** Joins: normen (~normen@p200300d7173dc900510ab491fcaa2503.dip0.t-ipconnect.de)
[22:39:30] *** Quits: arinov (~arinov@212.156.215.30) (Ping timeout: 256 seconds)
[22:42:22] *** Joins: gggp_ (~gggp@123.116.73.11)
[22:46:03] *** Quits: gggp (~gggp@123.113.184.30) (Ping timeout: 268 seconds)
[22:46:49] <dante443> j416 thanks, that answers my question about the select. Yes, I will be waiting on several chan vars, thanks for understanding that even though I didnt make it clear in the original question
[22:48:05] <dante443> Question: is there a syntax that makes such a function possible? func(s interface{}) bool { ; t := reflect.TypeOf(s); return s == t{}; }
[22:48:29] <dante443> Or, is there a better/easier way to generically check that a struct has no values without making it a pointer
[22:51:08] *** Joins: Thinkofname (~thinkthin@37.205.12.211)
[22:54:48] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 256 seconds)
[22:55:55] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[23:03:38] <dante443> func(s interface{}) bool {
[23:03:40] <dante443>     t := reflect.TypeOf(s)
[23:03:42] <dante443>     empty := reflect.ValueOf(s) == reflect.Zero(t).Interface()
[23:04:32] <dante443> empty is returning false when I know s is a zero value of the concrete type. Can anyone help me figure out what I am missing here?
[23:04:49] <tristero> dante443: reflect.TypeOf(s).Size() == 0, perhaps?
[23:04:56] *** Joins: oxum (~oxum@122.172.48.197)
[23:06:41] *** Joins: _rubik (~rubik@user/rubik/x-6853868)
[23:07:03] <dante443> So, s would be a concrete type
[23:07:26] <dante443> so reflect.TypeOf(s).Size() == 80 in this case
[23:09:13] <dante443> Is there a canonical generic way to check for structInstance == StructType{}
[23:09:45] *** Quits: oxum (~oxum@122.172.48.197) (Ping timeout: 255 seconds)
[23:09:56] *** Quits: normen (~normen@p200300d7173dc900510ab491fcaa2503.dip0.t-ipconnect.de) (Ping timeout: 255 seconds)
[23:11:39] *** Quits: gggp_ (~gggp@123.116.73.11) (Remote host closed the connection)
[23:12:30] *** Joins: gggp_ (~gggp@60.10.23.165)
[23:14:09] *** Quits: gggp_ (~gggp@60.10.23.165) (Remote host closed the connection)
[23:14:56] *** Joins: gggp_ (~gggp@123.113.176.64)
[23:15:53] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:fd83:2103:6b16:6ea1)
[23:15:55] <dante443> Well, I guess the only way I could find to do this was to convert the field to a pointer. LMK if anyone knows how to solve my question without generics. Thanks!
[23:20:14] <rewt> do what?
[23:20:31] <rewt> don't quite get what you were trying to do
[23:22:42] <dante443> I have a struct that sometimes has values sometimes would not. And I want to write a conditional check to identify if it has values or not. I wanted to write a function that could check if the struct has values without having the struct type ahead of time
[23:23:59] <rewt> structs always have values
[23:24:26] *** Quits: souvik_ (~souvik@103.199.182.115) (Ping timeout: 252 seconds)
[23:25:38] <dante443> nonzero values
[23:25:58] <dante443> in other words, I want to check whether a generic struct is the zero type of that struct
[23:26:09] <dante443> zero value*
[23:26:45] *** Quits: Eddward_ (~Eddward@207.138.204.132) (Ping timeout: 268 seconds)
[23:28:09] *** Quits: gggp_ (~gggp@123.113.176.64) (Remote host closed the connection)
[23:28:32] *** Joins: gggp_ (~gggp@123.116.73.11)
[23:29:12] <rewt> that's usually done with pointers, because zero-values are still values, and likely valid values depending on usage
[23:31:24] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 250 seconds)
[23:32:22] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[23:43:35] <dante443> Alright, thanks
[23:45:25] *** Quits: andlabs (~andlabs@71.190.119.164) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:48:10] *** Joins: ska (~ska@user/ska)
[23:48:17] *** Joins: andlabs (~andlabs@71.190.119.164)
[23:48:58] <ska> Can I have a package called users and and a structure inside called Users? Is that considered bad naming?
[23:49:34] <ikke> user = user.Users
[23:49:36] <ska> I meant: user and User, non-plural.
[23:49:39] <ikke> a lot of repetition
[23:49:49] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[23:50:01] *** Quits: adminll (~thedawn@user/thedawn) (Remote host closed the connection)
[23:50:58] *** Joins: kodah (~kodah@user/kodah)
[23:51:30] <dante443> why not have models/entities.go where you name Users, then models/users/ for package users that imports models.Users
[23:53:06] <dante443> nvm lol just have a users.go in models/ that references models.Users
[23:53:15] <since_> user := user.User{user: user.Users()[0]}
[23:54:25] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Ping timeout: 246 seconds)
[23:56:41] *** Joins: oxum (~oxum@122.172.48.197)
[23:57:15] <j416> ska: read this article -> https://medium.com/@benbjohnson/standard-package-layout-7cdbc8391fc1
[23:57:18] *** Quits: fmac (~fmac@luna.fmac.xyz) (Quit: ZNC 1.8.2 - https://znc.in)
