[00:00:21] *** Joins: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net)
[00:11:52] *** Joins: z147 (~z147@gateway/tor-sasl/z147)
[00:15:28] <lotuseater> *yawn*
[00:16:02] <lotuseater> edgar-rft: are there strictly privat slots at your place?
[00:30:48] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 244 seconds)
[00:31:51] *** Joins: Alfr (~Alfr@user/alfr)
[00:32:26] <gilberth> Since when are there private slots? In CL at least. Or put otherwise: #define private public
[00:33:26] <gilberth> And while you're at it, for most C++ code: #define module class
[00:34:02] <Alfr> Good morning!
[00:34:22] <gilberth> Hey, Alfr!
[00:35:47] <lotuseater> hey Alfr 
[00:36:15] <lotuseater> it was a rhetorical question indeed
[00:40:41] *** Joins: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net)
[00:41:38] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[00:42:53] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 250 seconds)
[00:46:03] *** Joins: z147_ (~z147@gateway/tor-sasl/z147)
[00:48:22] *** Quits: z147 (~z147@gateway/tor-sasl/z147) (Ping timeout: 244 seconds)
[01:09:33] <aeth> gilberth: you can get real privacy in CL with an object system built on top of lexical closures, which will potentially disappear even to the debugger unless (debug 3)
[01:14:12] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 244 seconds)
[01:22:21] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[01:25:16] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[01:27:45] <MichaelRaskin> lexical closures might be flexible, so if something is so obviously unreachable that it is optimised away, (debug 3) won't save it
[01:29:33] <White_Flame> yeah, "good" old Let over Lambda
[01:29:50] <White_Flame> aka absolutely undebuggable, un-runtime-modifiable code
[01:30:05] <lotuseater> :)
[01:35:38] *** Joins: lisp123 (~lisp123@45.130.83.195)
[01:38:58] *** Joins: razzy (razzy@user/razzy)
[01:40:07] *** Quits: lisp123 (~lisp123@45.130.83.195) (Ping timeout: 240 seconds)
[01:41:47] *** Quits: razzy_ (razzy@user/razzy) (Ping timeout: 240 seconds)
[01:43:09] *** Joins: lisp123 (~lisp123@45.130.83.195)
[01:47:53] *** Quits: lisp123 (~lisp123@45.130.83.195) (Ping timeout: 250 seconds)
[01:59:09] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 244 seconds)
[02:08:59] *** Joins: vats (~vats@180.149.226.8)
[02:10:05] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[02:24:49] *** Joins: lisp123 (~lisp123@45.130.83.195)
[02:25:28] *** Quits: Alfr (~Alfr@user/alfr) (Ping timeout: 250 seconds)
[02:29:29] *** Quits: lisp123 (~lisp123@45.130.83.195) (Ping timeout: 250 seconds)
[02:29:48] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[02:30:06] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[02:32:31] *** Joins: z147__ (~z147@gateway/tor-sasl/z147)
[02:35:19] *** Quits: z147_ (~z147@gateway/tor-sasl/z147) (Ping timeout: 244 seconds)
[02:39:07] <gilberth> aeth: Of course you can build such an object system. You could also make state private, by putting a LET outside one or more DEFUNs.
[02:40:15] *** Quits: z147__ (~z147@gateway/tor-sasl/z147) (Quit: z147__)
[02:43:35] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 244 seconds)
[02:45:13] <hayley> https://www.youtube.com/watch?v=K4gvmh9TVk4
[02:45:14] -ixelp- There Ain't No Sanity Clause - YouTube
[02:46:46] *** Quits: vats (~vats@180.149.226.8) (Ping timeout: 252 seconds)
[02:47:00] <hayley> https://i.redd.it/nxeem0yluij71.jpg
[02:53:59] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Quit: leaving)
[02:54:17] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[02:54:50] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[03:02:45] *** Joins: lisp123 (~lisp123@45.130.83.195)
[03:12:23] *** Quits: lisp123 (~lisp123@45.130.83.195) (Ping timeout: 250 seconds)
[03:18:17] *** Joins: zuckonit (~user@2603-6011-2303-6613-a0c3-919d-5674-1142.res6.spectrum.com)
[03:24:10] *** Joins: Alfr (~Alfr@user/alfr)
[03:26:55] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 252 seconds)
[03:27:30] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 244 seconds)
[03:31:19] *** Quits: Alfr (~Alfr@user/alfr) (Ping timeout: 252 seconds)
[03:31:45] *** Joins: Alfr (~Alfr@user/alfr)
[03:36:13] *** Quits: random-nick (~random-ni@87.116.165.220) (Ping timeout: 250 seconds)
[03:38:19] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[03:45:39] *** Joins: lisp123 (~lisp123@45.130.83.195)
[03:53:13] *** Quits: lisp123 (~lisp123@45.130.83.195) (Ping timeout: 248 seconds)
[03:57:01] *** Quits: zuckonit (~user@2603-6011-2303-6613-a0c3-919d-5674-1142.res6.spectrum.com) (Read error: Connection reset by peer)
[03:59:58] *** Joins: zuckonit (~user@2603-6011-2303-6613-a0c3-919d-5674-1142.res6.spectrum.com)
[04:00:18] *** Joins: humasect (~humasect@2001:1970:57e0:4100::3d20)
[04:00:34] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 244 seconds)
[04:00:35] <aeth> gilberth: yes, but that is afaik the only privacy... except perhaps uninterning
[04:02:18] <gilberth> aeth: I always believed that closures are in fact the only privacy. After all an uninterned symbol is still just an object as any other.
[04:05:28] <edgar-rft> Believe me, nobody wants to see the private parts of Common Lisp.
[04:06:00] <gilberth> How could you tell? Have you seen them?
[04:06:30] <edgar-rft> It seems as if you're not a true believer.
[04:07:00] <gilberth> I prefer knowing over believing.
[04:07:18] <edgar-rft> My Lisp has naked atoms inside.
[04:07:26] *** Quits: humasect (~humasect@2001:1970:57e0:4100::3d20) (Remote host closed the connection)
[04:08:39] <gilberth> Hmm, I believed (oops!) they were always naked.
[04:09:29] <aeth> OnlyFansLisp
[04:10:13] <edgar-rft> Atoms are only naked if they aren't covered in lists.
[04:10:24] *** Joins: humasect (~humasect@2001:1970:57e0:4100::3d20)
[04:10:59] *** Quits: humasect (~humasect@2001:1970:57e0:4100::3d20) (Client Quit)
[04:11:39] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[04:13:30] <edgar-rft> acronymfinder.com says that LISP = Low Income Support Program :-)
[04:23:00] <kakuhen> common low income support program
[04:25:49] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Quit: ec_)
[04:26:11] *** Joins: humasect (~humasect@2001:1970:57e0:4100::3d20)
[04:27:31] <White_Flame> cancelable optional minimum means of nominal low income support program
[04:30:24] <gilberth> Anyhow, as long as you allow for run-time redefinition of classes, there could be no real "private" slots in a hypothetical object system.
[04:33:22] <hayley> And if you put access control on redefinition?
[04:35:20] <humasect> with meta
[04:35:29] <humasect> cant have private with mop
[04:36:10] <hayley> Well, you just put access control on the meta-level stuff like you do on the non-meta-level stuff.
[04:36:22] <humasect> then you got meta access levels
[04:36:38] <hayley> Fine with me.
[04:36:39] *** Quits: zuckonit (~user@2603-6011-2303-6613-a0c3-919d-5674-1142.res6.spectrum.com) (Read error: Connection reset by peer)
[04:36:52] *** Joins: zuckonit (~user@154.6.18.37)
[04:37:27] *** Quits: Alfr (~Alfr@user/alfr) (Killed (copper.libera.chat (Nickname regained by services)))
[04:37:31] *** Joins: Alfr (~Alfr@user/alfr)
[04:37:36] <humasect> but is it meta-fine
[04:39:27] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Ping timeout: 240 seconds)
[04:40:33] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[04:42:18] <gilberth> hayley: What's the meta level? As long as I can redefine or add a method, I can make a method giving me access to the so called private slot. This whole concept of private is of kinda syntactic nature anyway. The only thing you can do is to make slots private for the time an object is created, when you say that no new messages (methods) may be added to that object. That would be like saying, that once you redefine a class or methods, 
[04:43:08] <hayley> Yes, I would consider redefinition to be part of the meta level of the system.
[04:44:18] <hayley> i.e. you would have control over the capability to add and redefine methods. This would naturally be given to the programmer somehow, but it would not be given for one module to clobber another module's definitions.
[04:45:25] <gilberth> Yes, but who bars me from a redefinition? What I meant is: Once you allow for modifying existing classes, there are no private slots. When you say, that each time you redefine sth, you create an entirely new class, there could be. But the latter won't match my idea of an interactive system.
[04:46:20] <gilberth> hayley: ok. Still you have this capability as a handle. Once I have that, I have full access.
[04:46:24] <hayley> Well, no one is stopping you. You could also pull up gdb and flip the bits yourself, if you really wanted to do that. But in a safe language we'll assume that any code can't just go and do that.
[04:47:04] <gilberth> Sure. I assume safe code.
[04:50:11] <gilberth> hayley: But yes, this could work, but would be sth a little different from "private" slots. I'd rather would call that access control.
[04:56:27] *** Quits: zuckonit (~user@154.6.18.37) (Ping timeout: 240 seconds)
[04:59:10] *** Joins: zuckonit (~user@154.6.18.37)
[05:11:54] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[05:12:13] <dave0> maw
[05:12:33] <lotuseater> maunz
[05:12:58] *** Quits: recordgroovy (~recordgro@c-67-185-152-122.hsd1.wa.comcast.net) (Quit: leaving)
[05:13:25] <dave0> maw lotuseater 
[05:14:17] <lotuseater> https://www.youtube.com/watch?v=lFbPi8o0OEU
[05:14:18] -ixelp- SpongeBob SquarePants - Meow - YouTube
[05:14:47] <lotuseater> one of the really disturbing episodes
[05:16:36] *** Joins: recordgroovy (~recordgro@c-67-185-152-122.hsd1.wa.comcast.net)
[05:18:47] <hayley> https://www.youtube.com/watch?v=WRCGQhAz3y0
[05:18:47] -ixelp- Gary Numan (London 1981) [19]. I Die; You Die - YouTube
[05:20:26] *** Quits: humasect (~humasect@2001:1970:57e0:4100::3d20) (Read error: Connection reset by peer)
[05:20:44] *** Joins: humasect (~humasect@2001:1970:57e0:4100::3d20)
[05:22:49] *** Quits: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net) (Ping timeout: 250 seconds)
[05:25:05] <gilberth> But then, I believe that the realm of being private should be a module, not a class.
[05:27:39] *** Quits: zuckonit (~user@154.6.18.37) (Read error: Connection reset by peer)
[05:28:19] *** Joins: zuckonit (~user@154.6.18.37)
[05:28:48] *** Joins: dec0d3r (~dec0d3r@2001:8003:4810:9600:7275:1afb:1707:8eaa)
[05:30:23] * hayley notes she quotes someone who refuses to use the Shift key. Do you just write [sic] after every word?
[05:31:36] * zuckonit like this
[05:33:24] * aeth notes how cool people don't use capitalization on irc, especially with nicks
[05:33:44] * hayley thinks it wasn't on IRC though.
[05:34:02] <kakuhen> well, I recall having to read from someone who named themselves "bell hooks"
[05:34:05] <kakuhen> yes all lowercase
[05:34:20] <kakuhen> and in papers the writers would write simply "bell hooks" rather than bell [sic] hooks [sic]
[05:35:28] <dave0> lotuseater, hayley, gilberth, zuckonit, aeth, kakuhen   -- no uppercase at all !
[05:36:20] * lotuseater would run away but it sounds like rain through the open window
[05:36:32] <kakuhen> i'd be careful using me as an example of "cool people" :3c 
[05:36:45] <kakuhen> also is it morning in australia yet
[05:36:54] <dave0> 11am
[05:37:01] <kakuhen> easye: sorry to bother but pls check my PR for lang/clisp thanks
[05:38:14] <gilberth> DAVE0: IRC nicks are case insensitive.
[05:38:23] <lotuseater> so here it's 3am now :)
[05:38:42] <dave0> gilberth: but Case Preserving !
[05:39:12] <dave0> case sensitive nicknames sounds like something unix would do :-(
[05:39:31] <gilberth> kakuhen: May I comment your crc-8-checksum routine?
[05:39:48] * hayley uploaded an image: (55KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/vfnHEVpMXeELwfTURSfMQZxd/sic-sic-sic-sic-sic-sic.png >
[05:39:49] <lotuseater> kakuhen: be careful what you answer
[05:39:59] <hayley> Do I just write [sic] after every first word in each sentence?
[05:40:11] <humasect> a picture of text
[05:40:21] <gilberth> dave0: Yes, and we have echos from the past. Like { and } being equal to [ and ].
[05:41:25] * hayley uploaded an image: (58KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/AZCwkwkUzFWlYnlnwQEQJryP/sic-sic-sic-sic-sic-sic-sic.png >
[05:41:28] <hayley> So, is this any better?
[05:42:03] <edgar-rft> let's all use case-perversing nicks
[05:42:18] <hayley> gIlBeRtH: ping
[05:42:44] <dave0> hayley: what about?      [A]nd [I] am a programmer, and [I] don't give a shit.
[05:43:06] <hayley> dave0: Interesting. Though I will probably keep it verbatim as I don't really care that much.
[05:43:08] <gilberth> hAyLeY: pong
[05:43:21] <hayley> | .        |
[05:43:39] <gilberth> |       . |
[05:43:57] <hayley> . |          |
[05:44:05] <gilberth> You lost.
[05:44:10] <hayley> Dammit.
[05:44:38] <gilberth> New game: |    .    |
[05:44:51] <hayley> Can't play, I still have this article to write up.
[05:45:18] <dave0> breakout was good, it's sort of pong on steroids
[05:45:48] <gilberth> You lost, again. Lifes left: 1/3
[05:47:02] * gilberth knows a "Breakout" game, but that was a 3d-tetris. He even wrote an X11 clone.
[05:48:19] <edgar-rft> yes, remember playing breakout-tetris on an MS-DOS machine :-)
[05:49:41] <edgar-rft> I think the original name of the breakout paddle game was Arkanoid but the name might still be copyrighted by Taito.
[05:50:53] <dave0> oh wow you just made me think those video games from the 80's will still be copyright when i die
[05:51:06] <dave0> i looked up when mickey mouse goes in to the public domain the other day
[05:51:08] <dave0> 2023
[05:51:52] <lotuseater> phew
[05:52:43] *** Quits: zuckonit (~user@154.6.18.37) (Ping timeout: 250 seconds)
[05:53:22] <edgar-rft> dave0: just be stubborn and refuse to die until the copyright gets canceled!
[05:54:02] <hayley> I suppose it'll be extended again.
[05:58:18] <gilberth> I really need to get my old backups online again, can't find my clone. But I found this: <http://clim.rocks/gilbert/jwz-breakout.lisp>
[06:00:19] *** Quits: humasect (~humasect@2001:1970:57e0:4100::3d20) (Quit: Leaving...)
[06:04:58] *** Joins: humasect (~humasect@2001:1970:57e0:4100::3d20)
[06:09:43] <gilberth> The 3d tetris was called "Blockout", not "Breakout".
[06:12:30] *** Joins: zuckonit (~user@154.6.18.37)
[06:14:01] *** Joins: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net)
[06:20:49] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Quit: leaving)
[06:21:13] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[06:21:14] <hayley> 2200 words written, that'll do for today.
[06:23:11] <humasect> tetris attack
[06:23:51] <dave0> time to go to the store! byes!
[06:24:05] <hayley> REAL WORDS written by applied-langua.ge writers: "We hope that the reader is wise enough to not consider hopping into a model [of car] which is known to spontaneously explode."
[06:24:28] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[06:34:01] <Alfr> hayley, so they just skip to the hopping in part, I guess.
[06:34:20] <hayley> Didn't think of that.
[06:40:04] <edgar-rft> You can *safely* hop into spontaneously exploding cars as long as you take care that the car does *not* explode while you are in.
[06:40:24] <hayley> edgar-rft: Don't give them ideas.
[06:40:33] *** Joins: lisp123 (~lisp123@45.130.83.195)
[06:45:23] <edgar-rft> that was one of my spontaeously exploding ideas :-)
[06:51:13] *** Quits: lisp123 (~lisp123@45.130.83.195) (Ping timeout: 250 seconds)
[06:58:02] <hayley> https://www.youtube.com/watch?v=3L0HlL7hwQI
[06:58:03] -ixelp- Gary Numan - Crash - YouTube
[07:13:17] <gilberth> It's too long ago. How would an Xaw application find it's .ad file?
[07:15:43] * hayley notes find-any-register-in-map finds used registers, not free registers.
[07:16:42] <edgar-rft> gilberth: today we have Google ads for that
[07:19:54] <gilberth> edgar-rft: Nice TODO entry in my clone: "think about monochrome screens (so we could play it on the ira)"; ira = Institutsrechenanlage ;)
[07:20:24] <hayley> IRA like https://www.youtube.com/watch?v=nmxueMo9qMU?
[07:20:24] -ixelp- Get Out Ye Black and Tans - YouTube
[07:22:27] <gilberth> No, like some Ultrix system. With lot's of X11 terminals attached.
[07:23:33] <edgar-rft> the ira in karlsruhe still exists :-)
[07:24:12] <gilberth> Does not surprise me. Does it run Ultrix still?
[07:25:11] <hayley> Why is everything so gray? The GitHub UI preview got rid of the nice light blue shade to headers, and YouTube made the like/dislike meter grey instead of blue/grey, in turn instead of green/red or whatever it was before.
[07:27:19] <gilberth> iraun1.uka.de still exists and answers to pings.
[07:27:48] <edgar-rft> gilberth: I have no direct access to the ira, but I know some people who work there, so I can ask later :-)
[07:28:01] *** Quits: humasect (~humasect@2001:1970:57e0:4100::3d20) (Quit: Leaving...)
[07:28:28] <gilberth> hayley: Perhaps because of the times? We have a pandemic and face inflation and global warming.
[07:31:13] <gilberth> hayley: Wait a year or two, and we will get back to monochrome and everything will look like Xaw again.
[07:32:19] <Alfr> Why do people think it's a good idea to name something or someone after the latin word for anger/rage/wrath?...
[07:32:52] <hayley> They are very angry?
[07:35:46] <Alfr> About that what they are naming? Not sure they should have created such a thing in the first place.
[07:35:48] *** Joins: cross (~cross@spitfire.i.gajendra.net)
[07:35:53] <hayley> https://i.redd.it/nxeem0yluij71.jpg
[07:37:17] <gilberth> hayley: Are you under stress? You keep repeating yourself.
[07:37:28] <hayley> Yes.
[07:37:42] <edgar-rft> hayley: probably they eagerly await the dies irae
[07:37:51] <hayley> https://www.youtube.com/watch?v=lnGD8RI0kGQ
[07:37:51] -ixelp- King Crimson - indiscipline (Live In Frejus 1982) - YouTube
[07:39:55] <hayley> beach saying "I repeat myself when under stress" was the first KC line I learnt BTW.
[07:40:11] <White_Flame> you learn by repetition
[07:40:17] * White_Flame taps forehead
[07:41:30] <edgar-rft> beat your head with a hammer - again - and again - and again...
[07:42:10] * hayley sees her brother hold an open laptop in one hand while going down the stairs. Any guesses when he'll drop it?
[07:44:29] <White_Flame> edgar-rft: there's people who put 9V battery lines across their temple while studying
[07:45:25] <White_Flame> I believe there's been some confirming studies for that sort of thing
[07:46:45] <hayley> <electroboom> bro that is nothing I put 120V on my head
[07:49:49] <lotuseater> better are those people being on phone while driving the bicycle
[07:52:10] *** Quits: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net) (Ping timeout: 240 seconds)
[07:52:52] <moon-child> gilberth: why...why are you working with Xaw?
[07:52:54] <moon-child> should we be worried?
[07:57:14] <hayley> "If you want your toilet to look like a crime scene, this is the sandwich that you would want to eat for that." https://www.youtube.com/watch?v=ONu0XXeyGp8
[07:57:15] -ixelp- Wawa Philly Cheesesteak Sausage - YouTube
[07:57:48] *** Quits: recordgroovy (~recordgro@c-67-185-152-122.hsd1.wa.comcast.net) (Remote host closed the connection)
[08:00:53] <lotuseater> I'm even hungrier now.
[08:20:05] <kakuhen> i just finished eating some sashimi
[08:21:07] <lotuseater> that sounds japanese
[08:21:37] <lotuseater> okay I see pictures
[08:21:45] <gilberth> moon-child: Because I have found my old Blockout game clone from '95. And actually I always liked Xaw.
[08:23:20] *** Joins: nihaal (~nihaal@122.164.143.87)
[08:30:53] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 250 seconds)
[08:45:35] *** Joins: lisp123 (~lisp123@45.130.83.195)
[08:53:04] *** Quits: nihaal (~nihaal@122.164.143.87) (Ping timeout: 252 seconds)
[09:26:38] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (*.net *.split)
[09:26:38] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (*.net *.split)
[09:36:50] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[09:37:32] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[09:40:16] *** Quits: lisp123 (~lisp123@45.130.83.195) (Remote host closed the connection)
[10:21:46] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[10:22:08] <dave0> re maw
[10:23:19] <hayley> maw
[10:26:12] <dave0> maw hayley 
[10:26:26] <contrapunctus> maw?
[10:31:23] *** Joins: shka (~herr@109.231.62.239)
[10:31:45] *** Quits: shka (~herr@109.231.62.239) (Client Quit)
[10:31:58] *** Joins: shka (~herr@109.231.62.239)
[10:45:56] <hayley> https://www.youtube.com/watch?v=5G35NI45vno
[10:45:56] -ixelp- The ID-Julia's Song.wmv - YouTube
[10:56:44] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Quit: Leaving...)
[11:11:54] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[11:18:55] *** Joins: ln43 (~ln43@user/ln43)
[11:19:25] *** Joins: tophullyte (tophullyte@gateway/vpn/protonvpn/tophullyte)
[11:28:50] <lotuseater> maw
[11:28:53] *** Joins: makomo (~makomo@user/makomo)
[11:29:16] <hayley> https://www.youtube.com/watch?v=16nmdHn2CLw
[11:29:16] -ixelp- Gary Numan, Love Needs No Disguise (Extended Mix). - YouTube
[11:29:20] <lotuseater> https://www.youtube.com/watch?v=tas0O586t80
[11:29:21] -ixelp- Program in C - YouTube
[11:33:00] <hayley> https://www.youtube.com/watch?v=tbHix56qfG8
[11:33:01] -ixelp- The Aircrash Bureau - YouTube
[11:34:43] <lotuseater> Just 12 minutes! https://www.youtube.com/watch?v=C8LgvuEBraI
[11:34:44] -ixelp- Learn Go in 12 Minutes - YouTube
[11:35:43] <hayley> https://www.youtube.com/watch?v=QuzmUdFvOZ4 and yer almost dead
[11:35:44] -ixelp- 5 Minutes - YouTube
[11:36:25] <ln43>  ok https://genius.com/Judas-priest-breaking-the-law-lyrics
[11:36:35] <ln43> lyrics since i can't hear music fromm youtube
[11:36:37] <ln43> only
[11:37:33] <lotuseater> and this is by intention 2:59 long :D https://www.youtube.com/watch?v=jpw2ebhTSKs
[11:37:34] -ixelp- Valve Song: COUNT TO THREE ■ feat. Ellen McLain (the original GLaDOS), The Stupendium & Gabe Newell - YouTube
[11:38:14] <ln43> why 2:59 ?
[11:38:18] <lotuseater> Gabe Newell also left MS before Windows 3 release, didn't he?
[11:38:39] <lotuseater> ln43: cause then it would be 3 minutes and that would miss the whole point
[11:38:48] <ln43> i will shift to prodigy then ...
[11:39:48] <lotuseater> hm
[11:39:56] <ln43> ok, there is another good band i like ...
[11:40:15] <ln43> there / that
[11:40:18] <hayley> lotuseater: No talk of concurrency or if (err != nil), 0/10
[11:40:52] <lotuseater> hayley: and the only channel is the one on YouTube by this guy :D
[11:41:12] <hayley> lotuseater: IMO better watch https://www.youtube.com/watch?v=Q_B4oK4Mpzk
[11:41:13] -ixelp- [YTP] ElectroBOOM Clicks a Cliff - YouTube
[11:41:23] <kakuhen> assert (error == NoError)
[11:41:31] <lotuseater> ah your famous Cliff :)
[11:42:18] <lotuseater> kakuhen: crude syntax. and they throw errors instead signaling :D
[11:44:18] <lotuseater> ok the video seems to be another kind of thing
[11:45:31] <hayley> Learn how to program for 864 cores in 3 minutes
[11:46:10] <kakuhen> i just want a single, really big core
[11:46:48] <hayley> Speed of light never bothered you?
[11:47:33] <lotuseater> just single core or just one machine is indeed not everything
[11:48:47] <lotuseater> or just achieving logarithmic scaling
[11:50:10] <kakuhen> speed of light is really fast
[11:50:31] <moon-child> speed of light is slowwww.  But the thing keeping us from faster cores isn't the speed of light, exactly; it's heat
[11:51:54] <lotuseater> moon-child: depends which metric you put on things
[11:52:13] <kakuhen> speed of light is fast enough
[11:52:55] <moon-child> kakuhen: you wanna go to proxima centauri?  Too bad, you can't
[11:53:03] <kakuhen> i dont even know what that is
[11:54:08] <moon-child> lotuseater: well--speed of light does add _a_ constraint.  If it were faster, we could make bigger cores, not worry about cache, etc.  But heat I think is the primary limiting factor at the moment
[11:54:08] <gilberth> It's still slow. It only travels one feet each 1ns.
[11:55:14] <gilberth> Propagation speed of electrical signals is still slower. Ever noticed those zig-zag traces on a printed circuit board?
[11:55:33] <lotuseater> it's not about us at all
[11:56:29] <ln43> is it possible modify the sbcl heap size at runtime ?
[11:56:44] <moon-child> gilberth: fibre optic cpus when
[11:57:09] <gilberth> And it's 60ms between me and hayley. Light speed! Not the speed of signals in optical cables.
[11:57:26] <lotuseater> ln43: i think that should go to #commonlisp :)
[11:57:34] <moon-child> or even #sbcl
[11:57:45] <ln43> #sbcl is not responding mostly
[11:58:02] <gilberth> This fixed heap limit of SBCL is silly.
[11:58:07] <lotuseater> they are busy working on it
[11:58:25] <ln43> and #lisp sent me last time to #coomonlisp
[11:58:27] <lotuseater> gilberth: how does CCL manage this?
[11:58:33] <moon-child> 'this [...] heap [...] of SBCL is silly'
[11:58:35] <moon-child> I agree
[11:58:53] <hayley> '[...] SBCL is silly'
[11:59:02] <ln43> no i like clml ...
[11:59:07] <ln43> and it works mostly on sbcl
[11:59:09] <lotuseater> and that is?
[11:59:10] <moon-child> 'SBCL is'
[11:59:13] <moon-child> I mean, hard to deny that
[11:59:15] <ln43> ok never used, just loaded
[11:59:24] <gilberth> loyuseater: I believe it would just map more memory. I never ran into a fixed limit and I am not aware of any option for such a limit.
[11:59:31] <hayley> .oO( Can't I get into deep shit saying negative things about other implementations? Yeah, probably should stay out of it. )
[11:59:40] <hayley> lotuseater: CCL lazily maps in 512GB or so.
[11:59:58] <gilberth> That little?
[12:00:12] <lotuseater> hayley: nice ^^ is it your preferred implementation?
[12:00:41] <hayley> gilberth: Yes. But as it is a STW non-parallel GC, it would get miserable
[12:00:53] <gilberth> There is a comment in CLISP, where Haible contemplates in case memory runs out, try to create a file and mmap(2) it.
[12:01:01] <lotuseater> sometimes I ran out of my 16GB RAM when working with GHCi :D
[12:01:21] <hayley> Here we go again. Better stop before rme sends me to hell.
[12:01:38] <gilberth> hayley: Sure. Still I hate it, when SBCL would just bailout. But, yes, batch-oriented as it is, that seems plausible.
[12:01:46] <hayley> lotuseater: I use SBCL usually.
[12:01:59] <lotuseater> okay
[12:02:24] <hayley> gilberth: Note Doligez, Leroy and Gonthier assume an infinitely growable heap, because it is hard to put bounds on concurrent GC.
[12:02:46] <lotuseater> did your GC book arrive yet?
[12:02:50] <hayley> At least if you want to avoid STWing, that is.
[12:02:55] <gilberth> hayley: That's fine with me.
[12:02:56] <hayley> lotuseater: Yeah, like a month ago now?
[12:03:13] <lotuseater> oh great
[12:03:42] <hayley> You could use a sort of linear equation (for example) to project when you'll hit some limit, then aim to complete a cycle by that point, but you'd still be out of luck if the load changes.
[12:05:17] <gilberth> Apropos GC. I learned today, that CPL, the forerunner of BCPL, the forerunner of B, the forerunner of C, was planed to have a GC. CPL never was finished though. BCPL was then a massively reduced language with two design philosphies: (1) a trival compiler and (2) don't care, if the programmer does sth silly.
[12:06:14] <gilberth> So here we are then. :)
[12:06:20] <hayley> IIRC Go slows down mutators with an "allocation tax" if they try to surprise the collector by starting to cons faster than before.
[12:06:31] <gilberth> Can you do anything sensible, when you run out of heap space?
[12:06:40] <hayley> Swap?
[12:06:57] <gilberth> And when all the disk is full?
[12:07:12] <hayley> Signal STORAGE-CONDITION?
[12:07:46] <gilberth> And then? What can I do without any space on the heap?
[12:07:54] <hayley> Kill things?
[12:08:06] <gilberth> At random, like Linux?
[12:08:31] <gilberth> Is that Linux strategy also a form of GC?
[12:08:37] <hayley> Yes.
[12:10:36] <gilberth> I'd rather rent a GC as a service once in a while.
[12:11:37] <hayley> See http://3e8.org/pub/scheme/doc/lisp-pointers/v1i3/p17-white.pdf
[12:12:12] <gilberth> That was, what I was referring to.
[12:12:34] *** Quits: ln43 (~ln43@user/ln43) (Quit: Connection closed)
[12:13:08] <gilberth> Won't work for servers, but why not attend to older generations when idle?
[12:13:25] <lotuseater> oh Linux does it at random? sounds like with Thanos killing half of the life forms in the universe
[12:13:40] <hayley> I think they've done it on servers.
[12:14:19] <hayley> https://queue.acm.org/detail.cfm?id=2977741
[12:14:20] <lotuseater> "Perfectly balanced, as all things should be."
[12:14:38] <hayley> https://www.npmjs.com/package/idle-gc?activeTab=readme
[12:14:40] -ixelp- idle-gc - npm
[12:14:44] <gilberth> Well, when you really have no clue on how to choose a victim, doing it at random is still a better solution than just halting the machine.
[12:16:41] <gilberth> UNIX copes with that, as services usually would get restarted. No different from occasional segmentation faults.
[12:17:38] <dave0> there was a beautiful quote by someone very famous who i haven't been able to find again... it went something like "a program cannot run if it is even a single word larger than can fit in memory, and adding more storage costs lots of time and money"
[12:17:39] <lotuseater> or could priority queues get used for that?
[12:17:51] <gilberth> And NFS was specifically designed as being state-free for file servers crashing and rebooting.
[12:17:59] <lotuseater> okay
[12:19:03] <moon-child> hayley: well, all concurrent allocators slow down the mutator somewhat
[12:20:17] <gilberth> dave0: Storage is cheap these days.
[12:21:07] <moon-child> gilberth: 'services usually would get restarted'  so basically unix is shitty erlang
[12:21:29] <gilberth> Wasn't always the case. When you read about the CADR, you find that the concern was not so much speed, but RAM use.
[12:22:47] <hayley> moon-child: Yeah, but I mean that they would be further slowed.
[12:23:00] <dave0> gilberth: yep but the point is still the same
[12:23:01] <gilberth> moon-child: It's not too uncommon for embedded system to reboot periodically, just in case.
[12:23:47] <hayley> If you CONSed too fast, application threads would be coaxed into doing some GC work to cover for it.
[12:23:53] <dave0> OTOH i find it surprising that you can run out of memory with 128 gig of ram!
[12:24:35] <lotuseater> dave0: hm when you load entire games into it :D
[12:24:42] <hayley> 8 billion + 1 conses
[12:25:35] <dave0> lotuseater: fuck how can they be so big!
[12:25:37] <gilberth> dave0: Being olde, I am surprise that 16GB of RAM is tight at times. For what? Web browsing? The machine I ran Emacs, CMUCL, X11, and did my Closure development on had only 1/1024 that amount of RAM.
[12:25:48] <moon-child> iirc some boeing spacecraft have to be rebooted every 50 days, otherwise some ocunter overflows
[12:25:52] <lotuseater> dave0: they can, trust me
[12:26:26] <lotuseater> or "oh and today you have to install first our new 30GB patch"
[12:26:42] <gilberth> moon-child: Perhaps counting time since boot in 1ms in a 32-bit word. That would overflow after 48 days.
[12:27:04] <lotuseater> moon-child: lol, not what i call safe programming technique
[12:27:16] <dave0> gilberth: i remember when a nice guy on irc sent me an 8meg ram board for my amiga 1200 !
[12:27:21] <hayley> gilberth: What I think is that you end up shoving more pixels, throwing more synthesizer voices, that kind of thing.
[12:27:26] <gilberth> An integer data type would have helped.
[12:28:02] <gilberth> hayley: Still. 1024x as much?
[12:28:33] <gilberth> My frame buffer is not 1024x as large.
[12:29:00] <lotuseater> dave0: the biggest two install i had yet on my PS4 were Red Dead Redemption 2 and Cyberpunk 2077
[12:29:13] *** Quits: tophullyte (tophullyte@gateway/vpn/protonvpn/tophullyte) (Ping timeout: 252 seconds)
[12:29:21] <dave0> lotuseater: are they at least good games?
[12:29:29] <lotuseater> ehm ..
[12:29:54] <dave0> super mario bros was 32k
[12:29:59] <lotuseater> RDR2 i have just played the beginning, not mine, was borrowed from a friend
[12:30:21] <lotuseater> and cyberpunk has well written story :D
[12:30:35] <hayley> Is it as good as the game code?
[12:31:01] <lotuseater> yes it's impressive, i know this one video where one explains how to fit everything in 40kB
[12:31:22] <pl> hayley: one day they will finish alpha testing ;)
[12:31:27] <lotuseater> hayley: way better. there must be something broken deep down in their engine
[12:31:47] <pl> lotuseater: it's called "the shareholders insisted on christmas time slot release"
[12:32:16] <lotuseater> i bet when i turn on the console later after now again weeks it will have another big patch. better playing Dead Cells or Crash 4
[12:32:54] <gilberth> hayley: And clang using around 50GB disk space for compiling? What the hell is in that 50GB? Hi-res .mp4 animations in colour, with sound, of each transformation step that the compiler took?
[12:32:55] * hayley checks how much Doom Eternal costs
[12:33:09] <hayley> Fucking AU$100? No way.
[12:33:30] <gilberth> Yes, that would be one core less for your machine.
[12:33:37] <lotuseater> pl: it's so ridicolous. and don't ask, the one friend i mentioned got it to run well on Arch with Proton, but on PS4 there is not so much going on in the streets with the "AI" NCs
[12:34:14] <pl> lotuseater: Cyberpunk 2077 linux build was afaik one of the most stable ones
[12:34:23] <lotuseater> hayley: DOOM Eternal was a good choice to buy, runs well, looks great and makes lots of fun.
[12:34:24] <hayley> My observation is probably bogus, since I barely made it out alive out of 2016, but Doom 2 felt longer.
[12:34:28] <pl> but that might be partly due to constrained environment they got for it
[12:35:00] <hayley> Must be time for HL: Hazardous Course instead.
[12:35:07] <lotuseater> pl: yes, and the friend has indeed a very good AMD based gaming computer
[12:35:10] <pl> the bits that my former boss worked on still haven't been released yet (in CP2077)
[12:35:48] <pl> lotuseater: also, beyond the know issue of game evolving beyond previous generation of consoles, there's one unusual thing with CP2077
[12:35:54] <pl> it's /PC first/
[12:36:10] <pl> the consoles were very, very much secondary concern platforms
[12:36:14] <lotuseater> i could look later how much space DOOM Eternal uses. but when people yell at me again "your binaries are so big" I tell them this dumb Netflix App on PS4 has over 1GB.
[12:36:24] <moon-child> I played the doom 2016 demo.  It felt exactly like being on mars / in hell, killing demons.  The only question is, why would I _want_ to be on mars / in hell, killing demons?
[12:36:29] <moon-child> not my thing, I guess ¯\_(ツ)_/¯
[12:36:31] <lotuseater> yes indeed
[12:36:49] <lotuseater> why? cause you can :D
[12:37:10] <pl> moon-child: well, from my understanding (haven't yet played), it's because by Doom 2016, it's hell for the demons, not you ;)
[12:37:52] <moon-child> eh, it's still overall a really oppressive atmosphere.  9 months of quarantine might have had something to do with it tho
[12:38:00] <lotuseater> and Eternal sets more on top, or its DLCs, but i just watched those
[12:38:38] <pl> I also love how they made it effectively official how Doom 2016 matched up with Doom 1/2/64
[12:39:01] <lotuseater> ah yes
[12:39:11] <pl> also Commander Keen and Wolfenstein
[12:39:33] <lotuseater> last year i bought DOOM 64 version it was for 1.50€ or so in the store :D it's fun
[12:39:46] <pl> it's also wonderfully campy that Hell lost because they killed a pet rabbit
[12:40:50] <pl> Doom Guy got angry back in Doom 1 when they killed Daisy and since then been too angry to die
[12:40:50] <lotuseater> the covers for the physical disc hulls are also very nice, the one for DOOM 2016 is the same as for DOOM 1
[12:41:05] <lotuseater> pl: it's like when someone kills the dog of John Wick
[12:41:39] <kakuhen> >is it possible modify the sbcl heap size at runtime ?
[12:41:45] <kakuhen> iirc not really
[12:41:48] <pl> lotuseater: except Wick worked small time - Doom Guy has managed to get through multiple timelines by now
[12:41:48] <lotuseater> kakuhen: nope
[12:42:02] <kakuhen> heap size is fixed at start up so your best is --dynamic-size-something and you plop in the total amount of RAM on your system
[12:42:06] <lotuseater> he's literally a god like being
[12:42:16] <lotuseater> or became it by doing stuff
[12:42:20] <kakuhen> oh i forgot to mention the person asking the question oops
[12:42:26] <lotuseater> haha
[12:42:35] <kakuhen> i took too long to return to my computer
[12:42:55] <lotuseater> wasn't that also on #commonlisp some hours ago?
[12:42:59] <kakuhen> no idea
[12:43:16] <pl> lotuseater: well, he got so angry he ended up like god, yes
[12:43:29] <lotuseater> someone transferred a bigger file and ran into that
[12:43:44] <kakuhen> but now i am wondering when I can download the SBCL app ™️ on my phone
[12:43:56] <kakuhen> there's this cl repl app that uses ecl but compilation can be quite slow on a phone processor...
[12:44:10] <ck_> isn't typing on there a nightmare?
[12:44:26] <lotuseater> ha yes i told mr_rob0t about that too
[12:44:32] <kakuhen> once you type sketches of mathematical proofs on a plain text editor on your phone
[12:44:34] <lotuseater> ck_: indeed
[12:44:37] <kakuhen> you kind of just cope with any input method...
[12:45:45] <lotuseater> not just typing also the small screen, nearly nothing left when holding horizontally and the keyboard is open
[12:46:04] <kakuhen> that's more a problem with the smartphone design
[12:46:07] <lotuseater> but it's very cool it works
[12:46:22] <lotuseater> and shows that QML and ECL can work together
[12:46:22] <kakuhen> i swear back in 2010 i was able to type and view text just fine in landscape orientation
[12:46:43] <kakuhen> then some dude at a corporation decided "oh we want phones to be tall but retain the same width
[12:47:36] <lotuseater> and at Apple they don't want you to plugin foreign headphones anymore
[12:47:55] <kakuhen> no, they do -- they just want it to be shitty, overpriced, low quality, bluetooth headphones
[12:48:09] *** Joins: domovod (~domovod@ec2-35-165-86-158.us-west-2.compute.amazonaws.com)
[12:48:10] <lotuseater> all those kids with their overpriced ear plugins
[12:48:11] <kakuhen> likewise, they don't mind third party programs, so long as they are poorly-audited $0.99 apps on the app store
[12:48:57] <kakuhen> but yes... removal of headphone jack is one of the most dumb things ever
[12:49:03] <kakuhen> the only more dumb/frustrating thing is how consumers cope with it
[12:49:14] <kakuhen> >dude it adds water resistance*
[12:49:19] <kakuhen> *negligible amount, if at all
[12:49:42] <lotuseater> for most people having an iPhone and all that is just status "oh look, I'm so much better than you". or when I was lately asked by a woman "Is there even WhatsApp in your digital world?" I should have responded "Is there even an amount of freedom left in yours?"
[12:49:49] <kakuhen> >dude wires suck anyway; you should spend $100 on headphones whose batteries will have virtually no capacity within 6 months
[12:51:40] <kakuhen> but yes.. my theory is that removing headphone jack is a genius business play because you can claim "water resistance" and "thinner phones" while removing headphones from the box and instead charging $100 for equally shit headphones with even worse durability.
[12:51:48] <lotuseater> kakuhen: they want their 30% of selling your work
[12:51:58] <kakuhen> n-no, don't think about it that way!
[12:52:08] <kakuhen> we give you 70%, that is very generous isn't it? that number is way more than 50%!
[12:52:20] <lotuseater> ha! like with ethernet interface removal "so thin now!"
[12:52:39] <dave0> what's an ethernet?
[12:52:42] <lotuseater> yes it's psychologically
[12:52:42] <dave0> ;-)
[12:52:43] <kakuhen> ethernet??? ughhh, gramps, what next? you want punch card readers in your laptop?
[12:52:56] <lotuseater> I want direct fiber :D
[12:53:17] <dave0> soon you will be able to plug it directly into your brain
[12:54:57] <kakuhen> it's okay to remove ports because you can just buy a dozen dongles
[12:55:02] <kakuhen> https://files.catbox.moe/k37659.jpg
[12:55:07] <lotuseater> bazinga
[12:55:21] * hayley looks for the fibre in the breakfast cereal
[12:55:27] <kakuhen> you hate carrying around a dozen dongles? just get a bigger purse lol!!!
[12:55:39] <lotuseater> or maybe when you plant in an adapter a big dongle tree grows from it
[12:55:55] <kakuhen> alternatively, consider docks with a dozen ports in them!
[12:55:58] <kakuhen> https://files.catbox.moe/aq6afn.png
[12:55:59] <kakuhen> oh wait...
[12:56:24] <kakuhen> wow! courageous!
[12:56:29] <lotuseater> even yet I don't have a single device with USB-C
[12:56:53] <kakuhen> basically nothing uses usb-c besides phone chargers and adapters
[12:57:10] <lotuseater> yeah
[12:57:13] *** Quits: phantomics (~phantomic@97-118-239-225.hlrn.qwest.net) (Ping timeout: 248 seconds)
[12:58:03] <kakuhen> oh and apparently newer usb-c standards may allow up to 240W of power consumption
[12:58:12] <kakuhen> imagine the housefires that'll result from this.
[12:59:15] <lotuseater> and I like my interference headphones
[13:00:31] <lotuseater> but not enough for powering a micro wave
[13:01:02] <hayley> Starting to think I haven't really improved at Hazardous Course yet.
[13:03:25] * hayley forgot she had https://www.youtube.com/watch?v=YbMSVGZSkBw as the TF2 intro video
[13:08:51] *** Quits: dec0d3r (~dec0d3r@2001:8003:4810:9600:7275:1afb:1707:8eaa) (Remote host closed the connection)
[13:11:03] *** Joins: selwyn (~selwyn@user/selwyn)
[13:11:14] <hayley> Wow, I can't use either chat mode on a free TF2 account.
[13:15:20] *** Joins: Qwnavery (~Qwnavery@user/qwnavery)
[13:15:42] <lotuseater> ohai Qwnavery 
[13:15:53] <Qwnavery> o/
[13:16:11] <lotuseater> great to see you
[13:16:40] <Qwnavery> :D
[13:17:00] <Qwnavery> wasted another week of my life
[13:17:31] <lotuseater> you think so?
[13:17:50] <Qwnavery> yup.
[13:18:48] <Qwnavery> I have learnt nothing.
[13:19:11] <Qwnavery> practised nothing.
[13:19:40] <Qwnavery> 24*7 of nothing.
[13:20:21] *** Quits: razzy (razzy@user/razzy) (Quit: leaving)
[13:23:25] *** Joins: razzy (razzy@user/razzy)
[13:26:07] *** Joins: vats (~vats@180.149.226.8)
[13:36:48] <kakuhen> wow me too
[13:41:35] *** Quits: razzy (razzy@user/razzy) (Ping timeout: 250 seconds)
[13:42:22] *** Joins: razzy (~razzy@user/razzy)
[13:53:17] *** Quits: razzy (~razzy@user/razzy) (Ping timeout: 250 seconds)
[13:55:02] <ck_> then you must be very good ad it
[13:55:05] *** Joins: razzy (~razzy@user/razzy)
[13:55:07] <ck_> at even
[14:09:29] <ck_> how about a do-nothing-off, to see who really is the top expert at this. I'll go first:
[14:16:46] <dave0> lets play "who can stay silent the longest"
[14:17:48] <kakuhen> Hello
[14:18:37] <gilberth> dave0: You already lost!
[14:19:22] <dave0> oops!
[14:48:21] <kakuhen> good night
[14:48:22] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Quit: Leaving...)
[14:53:23] *** Joins: random-nick (~random-ni@87.116.165.220)
[14:58:48] <hayley> https://www.youtube.com/watch?v=sM7odiEO1k8
[14:58:49] -ixelp- We Take Mystery (To Bed) - YouTube
[15:01:57] *** Quits: domovod (~domovod@ec2-35-165-86-158.us-west-2.compute.amazonaws.com) (Quit: WeeChat 3.2)
[15:20:00] *** Joins: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net)
[15:27:01] <shka> https://www.youtube.com/watch?v=mWafD1cPGPM
[15:27:02] -ixelp- Peter Murphy - Cuts You Up - YouTube
[15:27:07] <shka> hayley: two can play this game
[15:27:32] <hayley> https://www.youtube.com/watch?v=48PJGVf4xqk
[15:27:32] -ixelp- One Of These Days - YouTube
[15:29:33] *** Quits: Qwnavery (~Qwnavery@user/qwnavery) (Quit: WeeChat 3.2)
[15:41:39] *** Joins: nihaal (~nihaal@122.164.143.87)
[15:48:33] *** Quits: razzy (~razzy@user/razzy) (Ping timeout: 250 seconds)
[15:49:44] <hayley> gilberth: So ObjC also nearly got thread-local GC: http://www.sealiesoftware.com/blog/archive/2009/08/28/objc_explain_Thread-local_garbage_collection.html
[15:49:44] -ixelp- Hamster Emporium: [objc explain]: Thread-local garbage collection
[15:59:16] * hayley fails to find any more publically available papers to read, so checks the university library proxy thing.
[15:59:19] <hayley> "This graduate work is not available to view or purchase." Why was I recommended it then?
[16:13:34] <hayley> At least I don't recall the Handbook having much to say about thread-local heaps.
[16:14:52] <hayley> No, it does.
[16:17:56] <hayley> Well, nothing new ):
[16:18:09] *** Joins: razzy (razzy@user/razzy)
[16:19:12] *** Quits: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net) (Ping timeout: 250 seconds)
[16:21:00] <shka> hayley: yeah, but then the iphone happens
[16:21:21] <shka> and suddenly apple wants to reduce memory usage of, well, everything
[16:21:30] * hayley uploaded an image: (180KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/CfVKIePocmAmECTHhuEXsJYc/hello-cringe-department.png >
[16:22:11] <shka> hayley: i mean, this was the apple motivation
[16:22:37] <shka> because GCed programs tend to use a little bit memory
[16:22:42] <hayley> Didn't stop the olde "smart" phones from playing Java games on much worse hardware.
[16:22:47] *** Quits: razzy (razzy@user/razzy) (Ping timeout: 250 seconds)
[16:24:22] <shka> true
[16:24:50] <shka> but those games often were using object pools to avoid GC anyway
[16:24:51] <hayley> Or Android phones some time later, though I read it took a while to get it "smooth".
[16:25:21] <shka> Android phones were usually packed with a little bit more memory 
[16:25:33] <shka> which translates into shorter battery life
[16:26:30] <shka> anyhow, i despise objective c
[16:26:47] <hayley> .oO( Do I have to invent my own damn thread local GC? )
[16:26:53] <shka> shame that apple did not went with dylan
[16:27:23] <shka> hayley: depending on your specific needs, there may be something existing in the game dev world
[16:27:24] <hayley> And the university doesn't have IEEE access, nor can I find the paper in question elsewhere.
[16:27:37] <hayley> shka: Yeah, no.
[16:27:43] <shka> embrace the pirate life!
[16:28:02] <shka> sci-hub 
[16:28:03] <hayley> Tried it, also won't load.
[16:28:10] <shka> really?
[16:28:19] <shka> what is the DOI?
[16:28:39] <hayley> 10.1109/IVMEM51402.2020.00009
[16:30:07] *** Joins: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net)
[16:31:43] <hayley> At least I got slides <http://ivannikov-ws.org/2020/docs/Filatov.pdf>
[16:32:39] <shka> hayley: ok, i managed to dig out this pdf
[16:33:10] <shka> well, not this one, but same authors
[16:33:15] <shka> one year earlier
[16:35:17] <hayley> Right, there was a paper with a similar name.
[16:35:46] <shka> given that this paper was made for conference... i think that we deal with the lazy here
[16:36:17] <shka> regardless, i am sure that you have that article already, but here is the link https://nc.nl.tab.digital/s/MprGJg3jxnYXF99
[16:36:19] -ixelp- Nextcloud
[16:37:05] *** Quits: nihaal (~nihaal@122.164.143.87) (Ping timeout: 250 seconds)
[16:37:17] <shka> article is kinda boring
[16:37:22] <shka> just benchmarsk
[16:37:45] <hayley> Yeah, not the sort of numbers I was hoping for. Thanks still.
[16:41:46] *** Joins: razzy (razzy@user/razzy)
[16:45:31] <hayley> I also get search results for Oracle patents. Yeah, sure, using those would go very well.
[17:06:16] <shka> hayley: those patents may be void in your country
[17:06:27] <shka> most of the world does not allow for patenting algorithms
[17:11:18] <lotuseater> and that's good
[17:11:43] <shka> depending on your angle
[17:12:02] <lotuseater> yes
[17:12:06] <shka> i would argue that it is bad that USA is outlier here
[17:12:13] *** Joins: okflo (~okflo@188-23-113-20.adsl.highway.telekom.at)
[17:17:44] *** Joins: dec0d3r (~dec0d3r@2001:8003:4810:9600:7275:1afb:1707:8eaa)
[17:18:56] <hayley> True. Though they end up using a read barrier which I am not a fan of.
[17:21:55] <hayley> I wonder if there is some sort of cheap history logging mechanism I can use to find what function might have allocated something that violated expectations on thread scope, then use it to flip call snippets from local to global.
[17:22:20] <hayley> Or, without logging, would there be a randomized approach which would nail them down quickly? Probably not.
[17:23:26] <dave0> nite all
[17:23:48] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[17:23:58] <hayley> The game is to minimize write traps, but then minimize global allocation if it doesn't affect the number of write traps per time unit.
[17:26:01] <hayley> Another stochastic learning thing I guess.
[17:29:04] <hayley> But then how bad is static analysis at this, really? Generally I suppose real programs are only single-threaded, basically entirely global, or have stages (fork, work, join).
[17:33:30] <lotuseater> hayley: i thought about the meme potential for this line "So you think you will use lisp for X?" so for you will give it "So you think you will use lisp for better garbage collection?"
[17:39:08] <shka> not sure if hayley intends to even use lisp here
[17:40:44] <lotuseater> shka: it's more about the meme itself ^^
[17:43:10] <lotuseater> but i bet the one used for sicl will do
[17:43:58] <shka> memory allocation is the one area of SICL written in C IIRC
[17:45:15] <lotuseater> I'll ask beach about that one of the next times.
[17:45:38] <lotuseater> or hayley tells us
[17:49:11] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[17:51:22] <lotuseater> I don't see any C code in that directory.
[17:52:03] *** Quits: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 250 seconds)
[18:18:50] *** Quits: okflo (~okflo@188-23-113-20.adsl.highway.telekom.at) (Quit: WeeChat 3.2)
[18:19:19] *** Joins: okflo (~okflo@188-23-113-20.adsl.highway.telekom.at)
[18:26:17] *** Quits: Alfr (~Alfr@user/alfr) (Ping timeout: 248 seconds)
[18:26:27] *** Joins: Alfr (~Alfr@user/alfr)
[18:31:02] *** Alfr is now known as Guest7145
[18:31:02] *** Quits: Guest7145 (~Alfr@user/alfr) (Killed (silver.libera.chat (Nickname regained by services)))
[18:31:07] *** Joins: Alfr (~Alfr@user/alfr)
[18:33:13] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[18:36:10] *** Quits: Alfr (~Alfr@user/alfr) (Ping timeout: 240 seconds)
[18:38:49] *** Quits: dec0d3r (~dec0d3r@2001:8003:4810:9600:7275:1afb:1707:8eaa) (Remote host closed the connection)
[18:47:57] *** Joins: Alfr (~Alfr@user/alfr)
[19:05:49] *** Joins: nihaal (~nihaal@122.164.143.87)
[19:27:13] *** Quits: nihaal (~nihaal@122.164.143.87) (Ping timeout: 252 seconds)
[19:32:02] *** Joins: selwyn (~selwyn@user/selwyn)
[19:32:18] *** Joins: selwyn_ (~selwyn@user/selwyn)
[19:42:52] *** Joins: humasect (~humasect@2001:1970:57e0:4100::3d20)
[19:57:12] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[19:58:01] *** Quits: selwyn_ (~selwyn@user/selwyn) (Quit: Leaving)
[20:01:48] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[21:00:05] *** Joins: nihaal (~nihaal@122.164.143.87)
[21:14:32] *** Quits: nihaal (~nihaal@122.164.143.87) (Quit: nihaal)
[21:24:01] *** Quits: humasect (~humasect@2001:1970:57e0:4100::3d20) (Quit: Leaving...)
[21:41:22] *** Joins: humasect (~humasect@2001:1970:57e0:4100::3d20)
[21:49:07] *** Quits: humasect (~humasect@2001:1970:57e0:4100::3d20) (Remote host closed the connection)
[21:50:03] *** Joins: humasect (~humasect@2001:1970:57e0:4100::3d20)
[21:53:25] *** Quits: Alfr (~Alfr@user/alfr) (Ping timeout: 250 seconds)
[21:53:41] *** Joins: Alfr (~Alfr@user/alfr)
[21:55:57] *** Quits: razzy (razzy@user/razzy) (Quit: leaving)
[22:06:10] *** Quits: zuckonit (~user@154.6.18.37) (Ping timeout: 240 seconds)
[22:13:15] *** Quits: humasect (~humasect@2001:1970:57e0:4100::3d20) (Remote host closed the connection)
[22:15:39] *** Joins: humasect (~humasect@2001:1970:57e0:4100::3d20)
[22:17:56] *** Quits: humasect (~humasect@2001:1970:57e0:4100::3d20) (Remote host closed the connection)
[22:33:14] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[22:53:06] <gilberth> Good morning #lispcafe!
[23:02:06] *** Joins: recordgroovy (~recordgro@c-67-185-152-122.hsd1.wa.comcast.net)
[23:14:57] *** Joins: tophullyte (tophullyte@gateway/vpn/protonvpn/tophullyte)
[23:22:04] *** Quits: Alfr (~Alfr@user/alfr) (Ping timeout: 252 seconds)
[23:24:12] <ck_> hello
[23:25:55] *** Joins: Alfr (~Alfr@user/alfr)
[23:34:07] <lotuseater> hi gilberth 
[23:38:43] <edgar-rft> nice, it's morning in greenland
[23:42:53] *** Quits: Alfr (~Alfr@user/alfr) (Read error: Connection reset by peer)
[23:43:10] *** Joins: Alfr (~Alfr@user/alfr)
[23:51:07] *** Joins: lisp123 (~lisp123@45.86.202.65)
[23:54:21] *** Quits: lisp123 (~lisp123@45.86.202.65) (Read error: Connection reset by peer)
