[00:03:49] *** Joins: thiras (~thiras@user/thiras)
[00:13:42] <Batzy> i think ive excluded the template from processing but
[00:13:48] <Batzy> documentation is not very clear what i need to do
[00:13:54] <Batzy> i just what it to render the html
[00:14:04] <Batzy> sort of like flask's render_template()
[00:14:16] <Batzy> actually, exactly like flask's render_template()
[00:21:23] *** Quits: Kalov (~Thunderbi@179.56.117.154) (Quit: Kalov)
[00:24:57] <GinFuyou> I don't know what flask has
[00:27:19] *** Joins: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75)
[00:28:01] <wallbroken> GinFuyou: can I know why you stopped answering to me?
[00:34:34] <shangxia1> wallbroken: it's possible they've added you to the ignore list
[00:34:42] *** shangxia1 is now known as shangxiao
[00:34:47] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[00:34:58] <wallbroken> yes, very likely, but IDK why of that
[00:38:41] *** Joins: audiobirb (~audio@2603-8081-1801-3bb5-c203-3fab-d083-5cb4.res6.spectrum.com)
[00:38:58] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[00:41:39] *** Joins: joepferguson (sid68527@id-68527.charlton.irccloud.com)
[00:47:03] *** Joins: andreash32 (~andreash@81-224-91-149-no500.tbcn.telia.com)
[00:49:17] <andreash32> Hey everyone.. I'm building the foundation for an app and testing out the relationships in the admin app. I have a relation where a user can have vehicles, as well as logbook entries for each vehicle. but how do I enforce that a user can only create a logbook entry for a vehicle id that belongs to that particular user?
[00:55:34] *** Quits: andreash32 (~andreash@81-224-91-149-no500.tbcn.telia.com) (Quit: Client closed)
[01:14:33] *** Quits: ras_manny (~ras_manny@196.24.142.216) (Remote host closed the connection)
[01:27:32] <Batzy> GinFuyou flask uses jinja2 to render, and the syntax looks similar to django. On a view in flask you do `return render_template('index.html', somedata="heya")`. In your actual html you could reference the somedata variable with {{ somedata }} and that would render as "heya"
[01:27:57] <Batzy> django it looks like is supposed to do something similar, but it's not rendering {{ somedata }} as something, it's rendering that as like plaintext
[01:28:40] <GinFuyou> Batzy, well, as I said, it's probably syntax problem in your template.
[01:28:50] <GinFuyou> What is exactly code you have for it?
[01:29:22] <Batzy> the code for the template? by this do you just mean my html file?
[01:29:52] <GinFuyou> your index.html
[01:29:53] <GinFuyou> yes
[01:34:43] <Batzy> https://bpa.st/IAYA here's an example
[01:45:10] <GinFuyou> Batzy, works fine for me https://dpaste.org/xPxh
[01:46:42] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[01:47:29] <Batzy> GinFuyou i dont really have an html string, i have a file. how does the Template thing interact on that?
[01:48:14] <GinFuyou> It's same thing. If you unsure you could just test like I did in manage.py shell
[01:49:48] *** Joins: Guddddu (~Guddu@190.84.88.92)
[01:50:39] <Batzy> it cant be the same thing
[01:52:13] <Batzy> hm
[01:52:33] <Batzy> https://bpa.st/GDWA here's my view
[01:53:01] *** Quits: Gudddu (~Guddu@190.84.88.92) (Ping timeout: 252 seconds)
[01:53:14] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[01:54:03] <hyper_dave> I have questions on squashed migrations.
[01:54:11] <GinFuyou> Batzy, well, it doesn't match template you've shared
[01:54:36] <GinFuyou> but it won't cause any DTL syntax shown, if it's correct
[01:55:11] <Batzy> yeah it's rendering it with plaintext
[01:55:25] <Batzy> wtf
[01:55:49] <hyper_dave> My understanding so far is that if there is a squashed migration and if a clean database is present it will only run the squashed migration, If the db has some of the migrations migrated, it will ignore the squash.
[01:55:51] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: No Ping reply in 180 seconds.)
[01:55:54] <hyper_dave> Am I right?
[01:57:00] <GinFuyou> Batzy, have you done anything to your engine? What is get_template() function you are using and why it's not the standard shortcut?
[01:57:12] <Batzy> what's the standard shortcut
[01:57:27] <Batzy> i didnt know what to do, since i dont have an html string
[01:57:28] <Batzy> i have a file
[01:57:48] <GinFuyou> https://docs.djangoproject.com/en/3.1/topics/http/shortcuts/#render
[01:59:30] <FunkyBob> hyper_dave: pretty much... trhe squashed migration will include a list of which migrations it applies, so the history should end up looking the same
[01:59:43] <Batzy> GinFuyou jesus it just refused
[01:59:44] <Batzy> to work
[01:59:56] <Batzy> refuses*
[02:00:00] <Batzy> it doesnt even throw errors
[02:00:39] <Batzy> nothing i type has any effect on the rendering lol
[02:00:46] <hyper_dave> FunkyBob: Okay then, What should following migrations depend on?
[02:00:49] <FunkyBob> then you're not editing the right files, Batzy
[02:00:59] <FunkyBob> hyper_dave: the last one it squashed
[02:01:02] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[02:01:03] <Batzy> well this is the view for that...
[02:01:05] <Batzy> wait a minute
[02:01:07] *** Joins: w9gfo (~w9@77.65.163.49)
[02:01:11] <Batzy> maybe it's not hitting the view at all
[02:01:16] <FunkyBob> Batzy: it may be the view you want to change... is it the view it's hitting?
[02:01:42] <hyper_dave> FunkyBob: And then the next one continues as normal right?
[02:01:48] <FunkyBob> hyper_dave: yes
[02:01:58] <Batzy> FunkyBob i think nginx is gulping the route
[02:01:59] <FunkyBob> hyper_dave: some migrations are "elidable", so can be skipped in a squash...
[02:02:06] <Batzy> sec
[02:02:21] <FunkyBob> hyper_dave: some actions the squash generator can recognise counteract... so it will skip
[02:02:33] <FunkyBob> hyper_dave: the idea is t he squashed migration does less work, for the same result
[02:02:48] <FunkyBob> hyper_dave: it's important, thus, for data-cleanup migrations to be marked elidable :)
[02:02:57] <hyper_dave> FunkyBob: I did.
[02:03:45] <Batzy> ok i think i know whats wrong
[02:03:47] <Batzy> i am tired now
[02:04:33] <hyper_dave> FunkyBob: So here is the weird part. I made two migrations after the squash with manage.py and the first one depended on 0001_initial which is included in the squash and then the next one depended on the squash.
[02:04:39] <hyper_dave> There are autogenerated.
[02:04:48] <hyper_dave> *these
[02:05:37] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Quit: Leaving...)
[02:05:59] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[02:06:56] <FunkyBob> :/
[02:06:58] <hyper_dave> Should I just edit the dependencies to the squash for the first one and then the first one for the second?
[02:07:07] <wallbroken> FunkyBob: may I ask you for help?
[02:07:11] <wallbroken> i came into problems
[02:07:57] <FunkyBob> wallbroken: I keep telling you
[02:08:00] <FunkyBob> don't ask to ask
[02:08:03] <FunkyBob> just ask
[02:08:12] <FunkyBob> and stop targeting just me... ther's 600+ peple in here
[02:08:37] <wallbroken> today i realised that GinFuyou plaaced me in Ignore list
[02:09:01] <FunkyBob> believable
[02:09:16] <FunkyBob> and still you persist in thinking the problem is everyone else.
[02:09:33] * hyper_dave shrugs
[02:09:53] <FunkyBob> hyper_dave: sorry... perhaps ask on the ML or forum? it's beyond my ken.
[02:10:35] <hyper_dave> FunkyBob: Alright. Thanks!
[02:10:40] <wallbroken> https://github.com/ClaudioViti/lookbook/tree/multi-user/shoes
[02:10:46] <wallbroken> here you can see all the updated code
[02:11:09] <Batzy> GinFuyou got it, thanks for your help
[02:11:21] <Batzy> i was doing a few things wrong
[02:11:25] <wallbroken> the goal is to create a "settings" form for each user when you can set "dark_mode" and "paginate"
[02:11:28] <wallbroken> i did that
[02:11:34] <wallbroken> i created a model about that, a form
[02:11:44] <wallbroken> and the template
[02:11:47] <FunkyBob> you still have __pycache__ committed...
[02:11:58] <Batzy> ah the evil pycache
[02:11:59] <wallbroken> FunkyBob: IDK why
[02:12:04] <FunkyBob> wallbroken: I explained why
[02:12:07] <FunkyBob> months ago
[02:12:15] <wallbroken> i made it all
[02:12:19] <wallbroken> i removed from github
[02:12:23] <wallbroken> already committed files
[02:12:28] <wallbroken> but it's still committing
[02:12:35] <wallbroken> maybe it's a git bug
[02:12:41] <wallbroken> i'll open a ticket to them
[02:12:41] <FunkyBob> no, it's a you bug
[02:14:39] <Batzy> it's not a git bug wallbroken
[02:14:52] <wallbroken> OK, and what's the problem?
[02:16:56] <FunkyBob> you've added them, and y ou keep adding them...
[02:17:04] <wallbroken> https://github.com/ClaudioViti/lookbook/blob/multi-user/.gitignore
[02:17:04] <FunkyBob> some were updated just 3 minutes ago
[02:17:06] <wallbroken> is this ok?
[02:17:21] <FunkyBob> try removing the / perhaps?
[02:17:28] <wallbroken> let me try
[02:17:29] *** Joins: barrios (~barrios@dynamic-046-114-142-164.46.114.pool.telefonica.de)
[02:17:44] <FunkyBob> though our repos have the /
[02:18:14] <wallbroken> wait
[02:18:20] *** Joins: lalilulelo (~lalilulel@2804:14d:7680:8ed4:2d57:66ab:41ef:4d0a)
[02:18:22] <wallbroken> pycache is under /shoes/ subdir
[02:18:27] <wallbroken> maybe do i need to add it?
[02:18:41] <FunkyBob> add what?
[02:19:53] <FunkyBob> also add this line to gitignore: *.py[cod]
[02:19:57] <wallbroken> the complete path
[02:20:05] <FunkyBob> and explicitly git rm all the __pycache__/* files
[02:20:09] <wallbroken> x /shoes/__pycache__
[02:20:09] <FunkyBob> no, don't add the complete path
[02:20:13] <wallbroken> ok
[02:20:28] <wallbroken> can i just remove it from the inside of visual studio code?
[02:21:03] <FunkyBob> only if that also tells git to stop tracking it
[02:21:42] *** Joins: Kalov (~Thunderbi@179.56.117.154)
[02:23:06] <hyper_dave> FunkyBob: My bad, I was looking at wrong files.
[02:23:09] <hyper_dave> Sorry
[02:23:32] <FunkyBob> hyper_dave: no problem
[02:23:38] <FunkyBob> seems to be a theme today :P
[02:23:47] <wallbroken> $ git rm shoes/__pycache__/*
[02:23:47] <wallbroken> fatal: pathspec 'shoes/__pycache__/forms.cpython-37.pyc' did not match any files
[02:24:34] <FunkyBob> find . -name __pycache__ -exec git rm -rf {} ";"
[02:24:52] <FunkyBob> [as always: don't run anything you don't understand]
[02:25:10] *** Quits: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[02:26:30] <wallbroken> https://github.com/ClaudioViti/lookbook/tree/multi-user/shoes
[02:26:30] <wallbroken> ok
[02:26:31] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[02:26:35] <wallbroken> now there is no more
[02:26:45] <wallbroken> can we go back to the main problem?
[02:26:48] <FunkyBob> sure
[02:26:57] <FunkyBob> so you said you made the model, the form, and the template.
[02:27:01] <FunkyBob> so now you need the view.
[02:27:02] <wallbroken> yes
[02:27:08] <wallbroken> you can figure it out on the code
[02:27:20] <wallbroken> they are on the bottom on models.py and forms.py
[02:27:45] <wallbroken> i created something in views.py, but it's entirely wrong
[02:27:52] <wallbroken> because it is not doing what i want
[02:28:37] <FunkyBob> ok
[02:28:40] <FunkyBob> where in views?
[02:28:43] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[02:28:43] <wallbroken> and what I want is that: from the template, when i set paginate and dark_mode, and click on "submit", those values needs to be stored in the model fields
[02:29:02] <wallbroken> line 48 and line 54
[02:29:15] <FunkyBob> don't talk about users interacting with a template... they don't... doing so will mess up your thinking
[02:29:16] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[02:29:20] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[02:29:47] <FunkyBob> oh dear
[02:29:54] <FunkyBob> you've tried to borg this into the list view...
[02:30:25] *** Quits: w9gfo (~w9@77.65.163.49) (Ping timeout: 252 seconds)
[02:30:42] <wallbroken> yes
[02:30:56] <wallbroken> the result is that it adds as a filter
[02:31:00] <wallbroken> and that's wrong
[02:31:34] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[02:31:49] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[02:32:01] <FunkyBob> so from the user's perspective, how do you want this to work?
[02:32:17] <FunkyBob> will it be a traditional "submit -> load new page' cycle?
[02:32:19] *** Quits: nathanhi (~nathanhi@user/nathanhi) (Quit: bye)
[02:32:24] <FunkyBob> or will it be ajaxy and "just happen"?
[02:35:54] <wallbroken> well, due a page reload is required to apply new fields, ajax is not needed
[02:36:08] <wallbroken> so the button should just submit new values and force a page reload
[02:36:55] <FunkyBob> yes... submit to a new view, that does only this
[02:36:57] *** Quits: timdiels (~user@78-22-205-207.access.telenet.be) (Quit: leaving)
[02:37:17] <wallbroken> ok
[02:38:15] <wallbroken> how the new view should work?
[02:38:33] *** Quits: hyper_dave (~hyper_dav@196.191.53.193) (Ping timeout: 248 seconds)
[02:38:58] <FunkyBob> it's a form processing view... that sets the user field.
[02:39:01] <FunkyBob> this is not new to you
[02:39:15] <wallbroken> not only must set
[02:39:25] <wallbroken> but also must show them
[02:39:41] <FunkyBob> again, nothing new to you.
[02:40:40] *** Joins: hyper_dave (~hyper_dav@197.156.103.172)
[02:40:40] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 240 seconds)
[02:41:40] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 240 seconds)
[02:42:29] <wallbroken> yes but i still need help
[02:42:46] <FunkyBob> with what?
[02:43:03] <wallbroken> with how to design the view
[02:43:24] <FunkyBob> so... all the stuff you've done before... all the other views you have in that file
[02:43:27] <FunkyBob> NONE of that you remember?
[02:43:39] <FunkyBob> and you wonder why we think it's bad for you if we write the code for you?
[02:43:53] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[02:43:53] <wallbroken> i made that long time ago, and i did not made entirely by myself
[02:44:04] <wallbroken> i made those views in may
[02:44:09] <wallbroken> now we are in August
[02:44:55] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[02:46:26] <FunkyBob> yah
[02:49:39] <wallbroken> i remember i need 2 views
[02:49:47] <wallbroken> one is to render the fields
[02:49:58] <wallbroken> another one is to update those
[02:50:02] <FunkyBob> no
[02:50:04] <FunkyBob> one view will do
[02:50:06] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 268 seconds)
[02:51:25] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Remote host closed the connection)
[02:51:51] <FunkyBob> the traditional cycle is GET shows the form, POST processes it
[02:52:56] <wallbroken> https://dpaste.org/AUD8
[02:53:04] <wallbroken> this how to update it
[02:53:37] <FunkyBob> it was looking ok, until it got to form_valid
[02:54:10] <FunkyBob> you said it didn't need ajax behavior, and a page load is fine... so why are you returning JSON?
[02:54:24] <FunkyBob> also, you're not calling the default form_valid... so none of the changes will be saved
[02:54:26] *** Quits: barrios (~barrios@dynamic-046-114-142-164.46.114.pool.telefonica.de) (Ping timeout: 268 seconds)
[02:56:12] *** Joins: barrios (~barrios@dynamic-046-114-141-057.46.114.pool.telefonica.de)
[02:57:59] <wallbroken> https://dpaste.org/XqZ4
[02:58:04] <wallbroken> i replaced the json part
[02:58:13] <wallbroken> but i'm not sure about what you said on form_valid
[02:58:14] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[02:58:31] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[02:58:45] <FunkyBob> it seems like you're randomly picking bits from other code, and making zero effort to understand what any of it is doing
[02:59:21] <wallbroken> i did what you said
[02:59:35] <wallbroken> you told me that i don't need json because i don't need javascript
[02:59:44] <wallbroken> and i removed it with a simple redirect
[03:00:02] <wallbroken> and is nothing bad in using another code as example
[03:00:22] <FunkyBob> sure, but there's a lot bad in copying code without UNDERSTANDING it
[03:00:30] <FunkyBob> something I seem to have to tell you several times a day.
[03:00:36] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[03:01:10] <wallbroken> what are the problems my actual view has?
[03:01:17] *** Quits: Kalov (~Thunderbi@179.56.117.154) (Quit: Kalov)
[03:01:39] <FunkyBob> well, it pulls out the dark mode valid for no reason... and.. as I said above
[03:01:42] <FunkyBob> 21:40 < FunkyBob> also, you're not calling the default form_valid... so none of the changes will be saved
[03:03:25] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Ping timeout: 252 seconds)
[03:03:25] *** Joins: combengue (~Thunderbi@207.191.249.160)
[03:03:37] <wallbroken> how to call the defaultl form_valid ?
[03:03:53] <FunkyBob> why do you even have a custom form_valid?
[03:04:13] <FunkyBob> you call the default the same way you call the super-class implementation of a method in any python class
[03:05:18] <wallbroken> https://dpaste.org/oo9X
[03:05:35] <FunkyBob> so we come back to ... why?
[03:05:41] <FunkyBob> why do you feel this view needs a custom form_valid method?
[03:05:43] *** combengue is now known as cmbengue
[03:06:30] <wallbroken> if i don't specify a form_valid method, the default one will be triggered?
[03:06:43] <FunkyBob> that... is how it works, yes.
[03:06:48] <FunkyBob> do you not understand classes/
[03:06:49] <FunkyBob> ?
[03:07:32] <wallbroken> well, in classes, you have a specific methods called constructors, which they will be called when you create an instance of a class
[03:07:43] <wallbroken> those are the only methods that are called by default
[03:08:04] <wallbroken> but maybe in django things works differently
[03:08:28] <FunkyBob> and now we get back to why I told you not to use class-based views
[03:08:35] <FunkyBob> no, in django things don't work any differently
[03:08:41] <FunkyBob> Python classes are still classes.
[03:09:04] <FunkyBob> but the view function created by calling as_view() ... does a bunch of work, and when it's called calls methods on the class
[03:09:13] <FunkyBob> which then calls methods on itself... as classes do
[03:09:24] <wallbroken> https://dpaste.org/4V9O
[03:09:39] <wallbroken> now i removed the form_valid method in the way of the default one can be called
[03:09:41] <FunkyBob> well, that's going to explode on import
[03:10:19] <FunkyBob> why is line 7?
[03:11:21] <wallbroken> empty line?
[03:11:27] *** Quits: barrios (~barrios@dynamic-046-114-141-057.46.114.pool.telefonica.de) (Remote host closed the connection)
[03:11:33] <wallbroken> oh
[03:11:54] <wallbroken> that's a redirect
[03:11:59] <wallbroken> that's needed when you post something
[03:12:06] <FunkyBob> did it ever occur to you
[03:12:13] <FunkyBob> that (a) the generic view DOES THAT BY DEFAULT
[03:12:19] *** Joins: barrios (~barrios@ip5f5aba17.dynamic.kabel-deutschland.de)
[03:12:26] <FunkyBob> and (b) that's a return outside a method... so it's just flat out WRONG
[03:12:34] <wallbroken> https://dpaste.org/UmXT
[03:12:40] <FunkyBob> the GENERIC views are there to implement common view patterns
[03:12:45] <wallbroken> removed
[03:12:50] <FunkyBob> processing a form and redirecting is a very common pattern
[03:12:53] <FunkyBob> so there's a generic view for it
[03:13:04] <FunkyBob> and redirecting on success is the default behavior
[03:13:17] <FunkyBob> but you will need to tell it where to redirect to... just like the other times you've used update view
[03:14:55] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:14:57] <wallbroken> return redirect(' ... ')
[03:15:02] <FunkyBob> no
[03:15:03] <wallbroken> you said this is not right
[03:15:08] <FunkyBob> it's not right
[03:15:44] <wallbroken> and how it should be?
[03:16:15] <FunkyBob> you need to set the success_url property
[03:16:20] <FunkyBob> https://docs.djangoproject.com/en/3.2/ref/class-based-views/mixins-editing/#django.views.generic.edit.FormMixin.success_url
[03:18:54] <wallbroken> https://dpaste.org/2OGT
[03:19:43] <FunkyBob> that should work... alternatively there's lazy_reverse
[03:19:53] *** Joins: neilbags__ (~neilbags@103.77.232.132)
[03:19:58] *** Joins: Qwerky_ (~Qwerky@37.165.20.70)
[03:22:17] *** Quits: Qwerky (~Qwerky@37.169.38.230) (Ping timeout: 248 seconds)
[03:22:32] *** Quits: neilbags_ (~neilbags@103.77.232.132) (Ping timeout: 245 seconds)
[03:23:57] *** Quits: Qwerky_ (~Qwerky@37.165.20.70) (Read error: Connection reset by peer)
[03:24:50] <wallbroken> FunkyBob: ok, now should i tell the template how to get fields
[03:25:17] <FunkyBob> the view has passed an instance of the form to the template in its context.
[03:26:14] <wallbroken> and how to reach it?
[03:26:40] <FunkyBob> how have you 'reached' it other times you've used UpdateView ?
[03:28:34] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:29:31] <wallbroken> https://dpaste.org/gCE6
[03:29:40] <wallbroken> it's not getting the values
[03:30:17] <FunkyBob> why would it be called config_form ?
[03:30:51] <FunkyBob> and here again we run into MORE PAIN because you refuse to take our advice to avoid using class-based views
[03:31:19] <wallbroken> {{ paginate }}
[03:31:21] <wallbroken> i tried this
[03:31:24] <wallbroken> but it's the same
[03:31:35] <FunkyBob> i have no idea what you mean by that, or why that is at all relevant
[03:31:58] <wallbroken> https://dpaste.org/YYzG
[03:32:00] <wallbroken> this is the code
[03:32:08] <wallbroken> and from the template i don't see the fields
[03:32:13] <wallbroken> paginate, dark_mode
[03:32:19] <wallbroken> they are not showing
[03:32:24] <FunkyBob> yes
[03:32:29] <FunkyBob> because what you did makes no sense
[03:32:53] <FunkyBob> since you're looking for the form in the context... why are you trying to render just the field names?
[03:32:58] <FunkyBob> Explain your thinking
[03:35:14] <wallbroken> in my idea, to render the form, i should do: "{{ ConfForm.as_p }}"
[03:35:27] <wallbroken> where ConfForm is the name of the form class
[03:35:37] <FunkyBob> but it's not the class y ou're using, for a start
[03:35:39] <FunkyBob> it's an instance
[03:35:39] <wallbroken> but IDK why it's not rendering anything
[03:35:50] <FunkyBob> because you're rendering things that do not exist
[03:36:18] <FunkyBob> the name would be very very painfully clear if you'd done as we said, and avoided class based views
[03:36:23] <FunkyBob> but you refuse to listen to advice
[03:36:30] <wallbroken> https://github.com/ClaudioViti/lookbook/blob/multi-user/shoes/forms.py#L139
[03:36:38] <wallbroken> it's here
[03:36:46] <FunkyBob> the name of the form class is irrelevant
[03:37:28] <wallbroken> and where to get the name of the instance of the form?
[03:37:58] <FunkyBob> from the documentation... but go on.. take a wild guess at what a logical default name for the form would be...
[03:39:54] <FunkyBob> a nice, simple, obvious, GENERIC term for a form in the template context.
[03:40:56] <wallbroken> if you're referring to "form", i tell you that it whows another set of fields
[03:41:18] <FunkyBob> then something  else is happening... because 'form' is the right answer
[03:41:29] <dre> wallbroken, then you have two forms
[03:41:37] <wallbroken> {{ form.paginate }}
[03:41:41] <wallbroken> doesn't show anything
[03:41:48] <dre> how are we this far into "I haven't done the first tutorial"
[03:42:02] <wallbroken> i just updated github, if you want to see the code...
[03:42:11] <dre> just do the tutorial. you can smash it out in a DAY, and you would then learn ALL THIS STUFF for FREE
[03:43:07] <FunkyBob> paginate????
[03:43:14] <FunkyBob> what is this obsession with paginate in a form view?
[03:43:48] <FunkyBob> wallbroken: no... you keep doing nonsense things... i'm not wasting any more time today
[03:43:59] <FunkyBob> i've got real work to do
[03:44:06] <wallbroken> paginate it's just my custom name
[03:44:09] <wallbroken> what wrong with that?
[03:44:22] <dre> wallbroken, you set the names here: https://github.com/ClaudioViti/lookbook/blob/multi-user/shoes/views.py#L53
[03:44:30] <dre> do you not understand what you wrote?
[03:44:31] <FunkyBob> you mean it's your field name?
[03:44:33] <wallbroken> tat's the model name:     paginate = models.IntegerField(choices=PAGINATE_NUM, blank=False, null=False)
[03:44:38] <wallbroken> yes
[03:44:41] <wallbroken> my field name
[03:44:52] <FunkyBob> ok, fine
[03:45:13] <FunkyBob> dre: that's not hte  view
[03:45:42] *** Joins: Qwerky (~Qwerky@37.164.153.99)
[03:45:44] <wallbroken> dre: FunkyBob is instructing me in view a new dedicated view to manage that
[03:45:52] <wallbroken> but we are caming into some problems
[03:46:17] <wallbroken> https://github.com/ClaudioViti/lookbook/blob/multi-user/shoes/views.py#L618
[03:46:20] <wallbroken> this is the view
[03:46:26] <FunkyBob> ugh
[03:46:32] <FunkyBob> reverse_lazy isn't needed inside the method...
[03:46:54] <FunkyBob> I mentioned it as you could have used   "success_url = reverse_lazy(...)" instead of writing get-success_url
[03:47:00] <FunkyBob> the eend result is the same
[03:47:25] <FunkyBob> so where's the template?
[03:48:22] *** Joins: duoi (~duoi@user/duoi)
[03:48:32] <wallbroken> https://github.com/ClaudioViti/lookbook/blob/multi-user/shoes/templates/shoes/shoe_list.html#L511
[03:48:41] <FunkyBob> no, that can't be right
[03:48:47] <FunkyBob>     template_name_suffix = '_update_form'
[03:49:01] <FunkyBob> or... are you trying to embed the form in the template fron a different view?
[03:49:04] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Ping timeout: 252 seconds)
[03:49:10] *** Joins: combengue (~Thunderbi@207.191.249.160)
[03:49:21] <FunkyBob> and just expected us to guess that?
[03:49:37] <wallbroken> 01:19:01 AM - FunkyBob: or... are you trying to embed the form in the template fron a different view?
[03:49:40] <wallbroken> yes, that
[03:49:51] <wallbroken> well, you told me to do that
[03:50:16] <wallbroken> in the sense: the previous view where i was managing was the main view of that template
[03:50:21] <wallbroken> then you told me to create a new view
[03:50:28] <wallbroken> but the template is still that
[03:50:42] <FunkyBob> this explains why there was the context name confusion
[03:50:48] <FunkyBob> I was talking about the new view.
[03:51:26] <FunkyBob> in which case... dre was right
[03:51:28] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[03:51:28] *** combengue is now known as cmbengue
[03:51:43] <FunkyBob> dre ALSO showed you an example of calling the superclasses implementation of the method you are overriding
[03:51:56] <FunkyBob> but that's not relevant now
[03:52:09] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[03:52:12] <wallbroken> FunkyBob: so, why you told me to create a new view?
[03:52:19] <FunkyBob> because you need a new view
[03:52:26] <FunkyBob> to process the form submission
[03:53:14] <wallbroken> and the problem is that i cannot call form from a template generated by enother view?
[03:53:15] <FunkyBob> but to show that form from another view, you will need to put an instance of it in the context for that view's template.
[03:53:34] <FunkyBob> see, what you just said shows you think about these things all wrong
[03:54:05] <FunkyBob> you can render that form in the template used by ShoeListView, no problem.
[03:54:06] <wallbroken> i said the same thing you said
[03:54:10] <FunkyBob> no you didn't
[03:54:23] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[03:54:39] <wallbroken> no wait
[03:54:47] <wallbroken> 01:24:05 AM - FunkyBob: you can render that form in the template used by ShoeListView, no problem.
[03:54:53] <wallbroken> but you also said that:
[03:54:54] <FunkyBob> yes
[03:55:00] <wallbroken> 01:23:15 AM - FunkyBob: but to show that form from another view, you will need to put an instance of it in the context for that view's template.
[03:55:04] <FunkyBob> yes
[03:55:06] <wallbroken> so, I can or i cannot?
[03:55:18] <FunkyBob> you can, by putting the form instance in the context.
[03:55:28] <wallbroken> you said that i need to call a superclass in the ShoeListView context
[03:55:32] <FunkyBob> no
[03:55:34] <FunkyBob> I didn't
[03:55:37] <FunkyBob> but you do
[03:55:46] <FunkyBob> but that's already in your code.
[03:55:51] <FunkyBob> and irrelevant to the current goal
[03:56:04] <wallbroken> context = super().get_context_data(form=self.filter_form, order_form=self.order_form, **kwargs)
[03:56:07] <wallbroken> inside of this
[03:56:22] <FunkyBob> https://github.com/ClaudioViti/lookbook/blob/multi-user/shoes/views.py#L50-L58
[03:56:22] <wallbroken> i need do say: get the form from the Config view
[03:56:24] <wallbroken> right?
[03:56:30] <FunkyBob> inside that block
[03:56:52] <FunkyBob> you need to add a line to add into the context an instance of your ConfForm
[03:56:59] <wallbroken> ok
[03:57:08] <FunkyBob> make sure you pass to the ConfForm the current users current config
[03:57:11] <wallbroken> have you a doc that teaches the syntax?
[03:57:16] <FunkyBob> ...
[03:57:25] <FunkyBob> to add a value to the context?
[03:57:31] <FunkyBob> like 4 lines of that method already do?
[03:59:29] <wallbroken> context['conf'] = self.request.user.ConfigView.values_list()
[03:59:34] <wallbroken> not sure of what i wrote
[03:59:44] <wallbroken> and don't kill me if i wrote pointless stuff
[03:59:53] <FunkyBob> just
[03:59:58] <FunkyBob> explain why you chose to write that
[04:00:00] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[04:00:01] <FunkyBob> what you think it's doing
[04:00:03] <FunkyBob> your reasoning
[04:00:21] <FunkyBob> we can't fix your misunderstanding...if we can't pinpoint it.
[04:00:51] <wallbroken> the goal is to pull out the form fields from the instance of the view and pass it as the current view's context
[04:01:25] <FunkyBob> ok, that goal is already wrong.
[04:01:36] <FunkyBob> the goal is to pass an instance of ConfForm to the template
[04:01:43] <FunkyBob> but keep going
[04:02:38] <FunkyBob> why would a User record (self.request.user) have a View as a property?
[04:02:49] <FunkyBob> do you think of a view as "owning" a form class?
[04:03:35] <wallbroken> context = super().ConfigView()
[04:04:14] <FunkyBob> ... once again, I ask questions and get no answers
[04:04:39] <wallbroken> i don't think that
[04:04:58] <FunkyBob> and my other question?
[04:05:23] <FunkyBob> also, why are you looking to the view ... to have the form fields?
[04:05:27] <wallbroken> i was thinking that the self.request.user has the instance of the view classes inside
[04:05:33] <wallbroken> but i was wrong
[04:05:45] <FunkyBob> in what way would a view being inside a user record make sense?
[04:05:53] <FunkyBob> you had a reason to think that... what was it?
[04:06:10] <FunkyBob> a user record... from the database...
[04:06:19] <wallbroken> i was experimenting it to get the answer
[04:06:36] <FunkyBob> experimenting is ok... but without logic or reason, it's not.
[04:07:05] <nedbat> I'm converting an old static HTML site to a true dynamic Django site. I have a URLs like /page/foo.html that come from the db, but also /page/static.html that should be served from the filesystem.  is there a good Django pattern for serving an existing file, unless it doesn't exist, then dive into the db for it?
[04:07:22] *** Joins: sri19 (uid477846@id-477846.charlton.irccloud.com)
[04:07:30] <wallbroken> FunkyBob: so, i need to pass the form to the context?
[04:07:45] <wallbroken> but i did it yesterday
[04:08:08] <GinFuyou> nedbat, django is not supposed to serve files, so no, unless you delegate it to your front webserver
[04:08:37] <GinFuyou> which should be doable I guess?
[04:08:47] <wallbroken> FunkyBob: https://github.com/ClaudioViti/lookbook/commit/e0d66ee7eb69f094d62bff6e3c277a4989a04f86#diff-b1207c11bec0fc57136201100ffea0a030de79d42f259385f3b8621973aff1d1
[04:08:48] <wallbroken> see here
[04:09:00] <FunkyBob> nedbat: I tend to teach nginx to use try_files so i can put static files anywhere in the hierarchy
[04:09:03] <nedbat> GinFuyou: you mean have the front server decide if the file exists?
[04:09:26] <GinFuyou> nedbat, what FunkyBob said I believe
[04:09:35] <nedbat> FunkyBob: thanks, that's a good lead
[04:09:50] <FunkyBob> nedbat: I've got it explained in my intro to deploying django
[04:10:04] <FunkyBob> wallbroken: actually, surprisingly close to what you need
[04:10:06] <FunkyBob> but
[04:10:20] <wallbroken> FunkyBob: i did it already. why you told me that it's bad?
[04:10:25] <wallbroken> that generated confusion in me
[04:10:40] <FunkyBob> wallbroken: because it looked like you were trying to PROCESS the form in tha view...
[04:10:50] <FunkyBob> wallbroken: since you only want the form for rendering, you don't need to save it to self
[04:11:04] <FunkyBob> wallbroken: also, you don't want to pass request.GET to it... since it doesn't care about the _current_ views data
[04:11:11] <wallbroken> i need to save it when clicking "apply"
[04:11:11] <FunkyBob> this is a case of you copy'n'pasting without understanding
[04:11:22] <FunkyBob> wallbroken: yes, but that "apply" submits to the new view... not this view.
[04:11:36] <wallbroken> yes, and i cannot use another view just to update?
[04:11:36] <FunkyBob> wallbroken: and you need to still pass the current config instance to that form
[04:11:45] <GinFuyou> nedbat, https://blog.tinbrain.net/tutorials/simple-django-deploy.html#configuring-nginx
[04:11:47] <FunkyBob> you can use another view to update... that's what the new view you wrote does
[04:11:53] <FunkyBob> GinFuyou: thanks :)
[04:12:23] <FunkyBob> nedbat: also https://blog.tinbrain.net/tutorials/simple-django-deploy.html#how-does-it-work
[04:12:32] <shangxiao> Just on the try-a-static-file-then-search-db-if-doesnt-existâ€¦Â Django _could_ be suitable for that. There's a couple of libs that delegate serving of static files to the webserver (from Django).
[04:12:51] <shangxiao> (so decide in Django what to do, delegate or get from db)
[04:13:04] <FunkyBob> shangxiao: like whitenoise, and x-accel-redirect ?
[04:13:26] <shangxiao> one was the x-sendfile, the other one I can't remember
[04:13:28] <wallbroken> discussion finished?
[04:13:29] <FunkyBob> wallbroken: you need the ConfForm instance in the shoe list view so you can _render- the form
[04:13:43] <FunkyBob> wallbroken: but it will _submit_ to the new view
[04:13:47] <FunkyBob> the new view processes it
[04:13:48] <wallbroken> FunkyBob: and that's what i already did
[04:13:55] <FunkyBob> wallbroken: yes, but slightly wrong
[04:14:00] <wallbroken> why?
[04:14:15] <FunkyBob> 22:56 < FunkyBob> wallbroken: since you only want the form for rendering, you don't need to save it to self
[04:14:18] <FunkyBob> 22:57 < FunkyBob> wallbroken: also, you don't want to pass request.GET to it... since it doesn't care about the _current_ views data
[04:14:35] <wallbroken> let me try
[04:14:50] <FunkyBob> the only place in that view that needs to reference that form is in get_context_data
[04:15:59] <wallbroken> about the first sentence
[04:16:06] <wallbroken> where i am saving it to self?
[04:16:17] <FunkyBob>         self.config_form = ConfForm(request.GET)
[04:16:28] <FunkyBob> saving is perhaps a poor choice of word...
[04:16:32] <FunkyBob> storing on self
[04:16:59] <wallbroken> https://dpaste.org/CEjb
[04:17:10] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[04:17:12] <wallbroken> ok
[04:17:34] <FunkyBob> again, you don't need to store the form on self
[04:19:06] *** Joins: combengue (~Thunderbi@207.191.249.160)
[04:19:19] <wallbroken> https://dpaste.org/AOf9
[04:19:39] <shangxiao> oh there's a grid for file streaming on django-packages: https://djangopackages.org/grids/g/file-streaming/
[04:19:42] <shangxiao> ^nedbat
[04:19:58] <FunkyBob> wallbroken: closer... that will give a syntax error, because you have a positional argument after a keyword argument
[04:20:25] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Ping timeout: 252 seconds)
[04:20:25] *** combengue is now known as cmbengue
[04:20:38] <wallbroken> and how solve it?
[04:21:27] <FunkyBob> give the argument a name
[04:21:46] <FunkyBob> or move it out of the super call, and put it in its own context[...]= line
[04:21:46] <wallbroken> config_form_name=config_form
[04:21:55] <wallbroken> correct?
[04:22:17] <FunkyBob> yes, ish... do you want it called 'config_form_name' in the template context?  I doubt it
[04:23:44] <FunkyBob> do you understand the difference between a 'positional' and a 'keyword' argument?
[04:24:02] <wallbroken> well
[04:24:17] *** Joins: combengue (~Thunderbi@207.191.249.160)
[04:24:25] <wallbroken> does this way will show the current value?
[04:24:47] <FunkyBob> no... that's the last step.
[04:24:49] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Ping timeout: 252 seconds)
[04:24:49] *** combengue is now known as cmbengue
[04:25:01] <FunkyBob> you need to pass the current config record instance to the form when constructing it
[04:25:51] <wallbroken> in the context?
[04:26:25] <FunkyBob> when creating the ConfForm instance
[04:26:29] <wallbroken> well, first of all let me make saving data work
[04:26:30] <wallbroken> Forbidden (CSRF token missing or incorrect.): /config/
[04:26:35] <FunkyBob> you need to pass it the Config instance you want it to update
[04:27:15] <wallbroken> {% csrf_token %}
[04:27:28] <wallbroken> i added this one line before in the template
[04:27:31] <wallbroken> but not working
[04:27:35] <wallbroken> still the same error
[04:28:51] <FunkyBob> one line before _what_ in the template?
[04:29:30] <wallbroken> https://dpaste.org/2cVf#L516
[04:29:54] <FunkyBob> it needs to be inside the <form>
[04:31:08] <wallbroken> TemplateResponseMixin requires either a definition of 'template_name' or an implementation of 'get_template_names()'
[04:32:51] <FunkyBob> months ans months of this, and you still can't remember what the topic tells you
[04:33:28] *** Quits: Qwerky (~Qwerky@37.164.153.99) (Remote host closed the connection)
[04:33:56] <wallbroken> https://dpaste.org/OfNd
[04:34:22] <FunkyBob> is /config/ the path for the new update view?
[04:36:13] <wallbroken>      path('config/', ConfigView.as_view(), name='config'),
[04:38:50] <FunkyBob> so "yes"
[04:39:15] <FunkyBob> so what you've submitted is not passing form validation https://dpaste.org/OfNd#L15
[04:39:25] <FunkyBob> so it wants to render the form for the use to see the errors and correct them
[04:41:19] *** Quits: barrios (~barrios@ip5f5aba17.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[04:41:30] *** Joins: barrios (~barrios@dynamic-046-114-141-057.46.114.pool.telefonica.de)
[04:43:21] *** Joins: Qwerky (~Qwerky@37.164.153.99)
[04:44:15] <wallbroken> so i should ad print(form.errors) ?
[04:45:24] <FunkyBob> you should add a template to show the form with its errors, so the user can correct their choices
[04:45:30] <FunkyBob> here's the way it works.
[04:45:50] <FunkyBob> 1. you create a stand-alone update view for the config.  full template, form, the whole lot.
[04:46:02] <FunkyBob> 2. you _also_ render the form into the other page, and that submits to the config view
[04:46:07] <FunkyBob> when it works, it redirects to the list view.
[04:46:13] <FunkyBob> when it fails, it shows the edit page...
[04:46:59] <wallbroken> but how could there have form errors?
[04:47:06] <wallbroken> they are just only two fields
[04:47:15] <wallbroken> that's very strange
[04:47:40] *** Quits: Qwerky (~Qwerky@37.164.153.99) (Ping timeout: 240 seconds)
[04:49:29] <wallbroken> https://www.dropbox.com/s/l0oakoptj4g57kb/Capturel.PNG?dl=0
[04:50:47] <FunkyBob> so... we've sort of started backwards on this
[04:51:02] <FunkyBob> focus on the config view... go to /config/  ... edit the details... get _that_ to work first
[04:52:30] <FunkyBob> give it its own template, ensure it shows the form and its errors...
[04:52:44] *** Parts: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it) ()
[04:53:35] <wallbroken> FunkyBob:
[04:53:36] <wallbroken> https://dpaste.org/PG2D
[04:53:49] <wallbroken> do you know why this if ... else statement is ignored?
[04:54:06] <FunkyBob> because it's looking at the wrong variable
[04:54:16] <FunkyBob> it should be looking at the config record on the current user
[04:54:26] <wallbroken> oh ok
[04:54:29] <wallbroken> and how to reach it?
[04:55:02] <FunkyBob> from user
[04:55:18] <wallbroken> user.dark_mode ?
[04:55:37] <FunkyBob> no, that's the user record
[04:55:51] *** Quits: barrios (~barrios@dynamic-046-114-141-057.46.114.pool.telefonica.de) (Remote host closed the connection)
[04:56:08] <FunkyBob> you need to get from the user record to the config record related to it
[04:56:41] <wallbroken> ok, and you'll tell me how to do it?
[04:59:05] <FunkyBob> how to follow a relation backwards?
[04:59:27] <FunkyBob> did you specify a related_name on your OneToOne field?
[05:03:56] <shangxiao> wallbroken: https://docs.djangoproject.com/en/3.2/topics/db/examples/one_to_one/
[05:05:01] <shangxiao> https://docs.djangoproject.com/en/3.2/ref/models/fields/#django.db.models.OneToOneField
[05:06:22] <wallbroken> FunkyBob: yes, i did
[05:08:18] <wallbroken>     user = models.OneToOneField(User, on_delete=models.CASCADE, related_name='user_config')
[05:08:35] <FunkyBob> then that is the name on user
[05:10:20] *** Quits: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net) (Quit: Bye.)
[05:10:31] <wallbroken> which is the onetoone field i'm referring to?
[05:13:24] *** Joins: barrios (~barrios@dynamic-046-114-141-057.46.114.pool.telefonica.de)
[05:19:48] *** Joins: Gudddu (~Guddu@190.84.88.92)
[05:19:50] <wallbroken>       {% if user_config.dark_mode  == False %}
[05:19:58] <wallbroken> looks like it's still ignoring that
[05:23:07] *** Quits: Guddddu (~Guddu@190.84.88.92) (Ping timeout: 252 seconds)
[05:23:56] <FunkyBob> yes, because you need to get there from user
[05:24:09] <FunkyBob> you still seem to believe in magic...
[05:24:15] <FunkyBob> that 'user_config' will magically appear in th context
[05:26:33] <wallbroken> {% if user_config.dark_mode == True %}
[05:26:44] <wallbroken> in the view:
[05:26:46] <wallbroken> context['user_config'] = self.request.user.user_config.values_list('pk', flat=True)
[05:28:09] <FunkyBob> ... why the values_list stuff/
[05:28:20] <FunkyBob> surely you want the full record, with all its fields/
[05:28:31] <FunkyBob> secondly, why not just access it from the user record you already have?
[05:28:33] <FunkyBob> user.user_config
[05:28:55] <FunkyBob> what is it you think values_list() does?
[05:29:04] <wallbroken>      context['dark_mode'] = self.request.user.user_config.dark_mode
[05:29:07] <wallbroken> i tried this way
[05:29:13] <wallbroken> but not working
[05:29:36] <FunkyBob> that should work
[05:29:52] <wallbroken>  {% if dark_mode == False %}
[05:30:02] <FunkyBob> ... or  {% if dark_mode %} ....
[05:30:17] <FunkyBob> or {% if not dark_mode %}
[05:31:00] <wallbroken> ok
[05:33:31] <wallbroken> now i go back to debug the form
[05:33:47] <wallbroken> not clear if printing form.errors would be helpful
[06:12:53] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[06:16:49] <wallbroken> FunkyBob: one step back, can we make that on page loading, i see the current fields state
[06:16:50] <wallbroken> ?
[06:22:34] *** Quits: lalilulelo (~lalilulel@2804:14d:7680:8ed4:2d57:66ab:41ef:4d0a) (Quit: Leaving)
[06:26:06] <wallbroken> class ConfigView(LoginRequiredMixin, FormView):
[06:26:14] <wallbroken> are you sure that it must be FormView ?
[06:26:40] *** Quits: ChanServ (ChanServ@services.libera.chat) (*.net *.split)
[06:26:51] <FunkyBob> it should be an updateview
[06:29:59] <wallbroken> ok, in that case the error changes
[06:30:00] <wallbroken> https://dpaste.org/aMdH
[06:31:22] <wallbroken> this means that in the url you should specify the pk of the object
[06:31:27] <wallbroken> but in this key there is no one
[06:31:34] <FunkyBob> no
[06:31:48] <FunkyBob> the record you want is implied by the logged in user
[06:31:55] <FunkyBob> so you don't need the pk, but you do need to override get_object
[06:32:58] *** Quits: Gudddu (~Guddu@190.84.88.92) (Ping timeout: 252 seconds)
[06:33:27] <wallbroken> with what'
[06:35:13] <wallbroken> def get_object(self):
[06:35:13] <wallbroken>         return request.POST
[06:35:16] <wallbroken> that right?
[06:35:16] <FunkyBob> with a method that returns the user config for the current user
[06:35:18] <FunkyBob> no
[06:35:30] <FunkyBob> it needs to return the model instance you want to edit
[06:35:30] *** Joins: ChanServ (ChanServ@services.libera.chat)
[06:35:30] *** iridium.libera.chat sets mode: +o ChanServ
[06:37:07] <wallbroken> self.model.objects.get(pk=self.request.GET.get('pk'))
[06:37:30] <wallbroken> is this what i should return?
[06:37:35] <wallbroken> model is the model instance
[06:38:00] *** Joins: Linux77 (~kvirc@237-182-233-186.raimax.com.br)
[06:38:01] <FunkyBob> ...
[06:38:08] <FunkyBob> it's even simpler than that
[06:38:17] <wallbroken> model = models.AccountConfig
[06:38:21] <FunkyBob> we went through this before... how can you easily get the user_config for the current user?
[06:38:26] <wallbroken> model is not the instance of my model?
[06:39:00] <FunkyBob> focus on the words "current user"
[06:39:36] *** Quits: barrios (~barrios@dynamic-046-114-141-057.46.114.pool.telefonica.de) (Remote host closed the connection)
[06:39:57] <wallbroken> self.request.user.
[06:40:23] <FunkyBob> right... and from there you can get the config related to it by....?
[06:41:15] <wallbroken> self.request.user.user_config
[06:41:28] <FunkyBob> see?  nice and easy
[06:42:31] <wallbroken> User has no user_config.
[06:42:48] <wallbroken> return super().dispatch(request, *args, **kwargs)
[06:42:49] <wallbroken> here
[06:43:05] <FunkyBob> that would be because you never created a config record for that user, most likely?
[06:43:16] <wallbroken> https://dpaste.org/qS1O
[06:44:02] <wallbroken> https://github.com/ClaudioViti/lookbook/blob/multi-user/shoes/views.py#L49
[06:44:06] <wallbroken> no idea what happened
[06:44:20] <FunkyBob> i told you what happened
[06:44:30] <FunkyBob> the error message is also fairly clear
[06:44:54] <wallbroken> and what the solution is?
[06:45:04] <FunkyBob> make the record?
[06:45:51] <wallbroken> how?
[06:46:32] <FunkyBob> ... really?  you're asking how to make a model record?
[06:46:35] <FunkyBob> admin, perhaps?
[06:47:33] <wallbroken> wait, maybe is not really clear what a "model record" is
[06:47:49] <FunkyBob> instance of a model
[06:47:52] <FunkyBob> row in the database
[06:48:06] <FunkyBob> you've never created a UserConfig that's related to the current User
[06:48:41] <wallbroken> but each user should have one by default
[06:49:09] <FunkyBob> then you will need to write code to make that happen
[06:49:41] <FunkyBob> historically this was done using signals
[06:50:06] <FunkyBob> though the practice of having 'profile' models sort of died out when pluggable user models became a thing
[06:50:09] <wallbroken> https://docs.djangoproject.com/en/3.0/topics/migrations/#data-migrations
[06:50:24] <FunkyBob> yes, a data migration will help for all your existing users
[06:50:32] <FunkyBob> you will need something for when users are added in fiture, too
[06:50:34] <FunkyBob> future
[06:50:44] <wallbroken> oh man
[06:50:50] <wallbroken> things becomes harder
[06:50:58] <wallbroken> as anything in django...
[06:51:26] <FunkyBob> again a lot of that stems from you not having a solid foundation
[06:51:39] <FunkyBob> but yes... why would you expect django to magically know to create these other records?
[06:51:58] <FunkyBob> I and others recommended you do these config options as an extension of the User model... then this wouldn't be an issue
[06:54:50] <wallbroken> when i plan a task i say: "well, i want to implement this feature, my estimation is a day"
[06:55:05] <wallbroken> but generally this estimantion becomes 5x
[06:55:15] <shangxiao> welcome to software development :D
[06:56:29] <FunkyBob> wallbroken: again... you still haven't done the basic foundational learning
[06:56:43] <FunkyBob> you struggle with some of the simple concepts...
[06:56:51] <FunkyBob> making things slower for you than others.
[06:56:57] <FunkyBob> also, we all learn and work at different rates
[06:58:37] *** Joins: jboada (~jboada@186-91-18-133.genericrev.cantv.net)
[07:06:36] *** Quits: sri19 (uid477846@id-477846.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[07:07:24] *** Joins: jboada25 (~jboada@186-91-18-133.genericrev.cantv.net)
[07:08:06] *** Quits: jboada25 (~jboada@186-91-18-133.genericrev.cantv.net) (Client Quit)
[07:08:24] *** Joins: jboada73 (~jboada@186-91-18-133.genericrev.cantv.net)
[07:09:38] *** Quits: jboada73 (~jboada@186-91-18-133.genericrev.cantv.net) (Client Quit)
[07:10:49] *** Quits: jboada (~jboada@186-91-18-133.genericrev.cantv.net) (Ping timeout: 246 seconds)
[07:11:51] <wallbroken> so, the minitasks now are:
[07:12:00] <wallbroken> 1) creating the code for new user record
[07:12:15] <wallbroken> 2) creating the code for getting the current fields configuration
[07:12:42] <wallbroken> for the first one, for the moment, can i just create the record manually?
[07:12:45] <FunkyBob> yes
[07:12:52] <FunkyBob> either in a shell, or via admin
[07:12:59] <FunkyBob> i was going to recommend that
[07:15:09] *** Joins: jboada (~jboada@186-91-18-133.genericrev.cantv.net)
[07:15:45] <wallbroken> good
[07:16:18] <wallbroken> in my way of thinking, i'm a target oriented mind
[07:16:27] <wallbroken> so i like to end tasks ASAP
[07:17:22] <wallbroken> via Admin?
[07:17:23] <wallbroken> how?
[07:17:45] <FunkyBob> just like with any other model you've worked on in admin
[07:18:33] <wallbroken> unfortunately i don't have the AccountConf section in admin
[07:19:00] <FunkyBob> well, you learned in the tutorial how to register models in admin,
[07:19:07] *** Joins: combengue (~Thunderbi@207.191.249.160)
[07:19:10] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Ping timeout: 240 seconds)
[07:19:10] *** combengue is now known as cmbengue
[07:21:36] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[07:23:28] <wallbroken> admin.shoes.register(AccountConfig)
[07:23:33] <wallbroken> this is the current syntax?
[07:24:45] <wallbroken> oh no
[07:26:02] <wallbroken> https://www.dropbox.com/s/tta52uw6qksxxnp/dssd.PNG?dl=0
[07:26:11] <wallbroken> the admin page is still showing just this
[07:26:28] <wallbroken> admin.site.register(AccountConfig)
[07:26:32] <wallbroken> this is the command i used to register
[07:26:47] <FunkyBob> and you put that in an admin.py file somewhere?
[07:27:21] <wallbroken> no, i executed those commands in manage.py
[07:27:22] <wallbroken> shell
[07:27:36] <FunkyBob> that'd be why it did nothing, then
[07:27:57] <FunkyBob> i'm afk for a bit
[07:28:41] *** Quits: routebee (~norman@103-205-28-236.dyn.launtel.net.au) (Ping timeout: 256 seconds)
[07:28:56] <wallbroken> Select a valid choice. 8 is not one of the available choices.
[07:29:02] <wallbroken> that's false
[07:32:00] <wallbroken> ok, now it works
[07:38:27] <wallbroken> paginate_by = PAGINATE_CONST
[07:38:52] <wallbroken> now i should put instead of PAGINATE_CONST, the current value
[07:40:14] *** Joins: djapo (~archangel@user/djapo)
[07:45:46] <pierrepaul> how's your summer so far?
[07:46:53] <schinckel> Winter here's been pretty wet.
[07:47:34] <dre> dry where I'm at, my nose has been sore for 3 months :(
[07:47:47] <FunkyBob> just went for a walk in some glorious sunshine
[07:48:11] <dre> nice; I'm thinking I might do that
[07:48:12] <schinckel> We've had a couple of nice days recently though ;)
[07:48:51] <dre> I've got a nice big window with white blinds, just behind the computer monitor. every day 11 -> 12:30 I go for a walk because I can't see a thing on the screen anyway
[07:49:31] <FunkyBob> there's a time of day where the sun falls across my gaming machine's monitor...
[07:53:07] <wallbroken> FunkyBob: any idea on how to pull the value?
[07:53:38] <wallbroken> https://github.com/ClaudioViti/lookbook/blob/multi-user/shoes/views.py#L26
[07:53:41] <wallbroken> here
[07:57:09] <FunkyBob> wallbroken: as y ou may have noticed with the generic views, there's a bit of a pattern
[07:57:27] <FunkyBob> if it will look for thing = ... there's often a get_thing method to go with it
[07:57:35] <FunkyBob> https://docs.djangoproject.com/en/3.2/ref/class-based-views/mixins-multiple-object/#django.views.generic.list.MultipleObjectMixin.get_paginate_by
[08:02:05] <wallbroken> as usual, it's not clear
[08:02:07] <wallbroken> Returns the number of items to paginate by, or None for no pagination. By default this returns the value of paginate_by.
[08:02:22] <wallbroken> i just want to pull the value stored in "paginate" var
[08:02:37] <wallbroken> is difficult to do also this?
[08:02:59] *** Quits: jasonbraganza (~jasonbrag@user/jasonbraganza) (Quit: Au revoir â€¦)
[08:03:08] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[08:04:09] *** Quits: hyper_dave (~hyper_dav@197.156.103.172) (Read error: Connection reset by peer)
[08:05:00] <FunkyBob> wallbroken: no, it's not difficult
[08:05:18] <FunkyBob> the default implementation of get_paginate_by is "return self.paginate_by" more or less...
[08:05:40] <wallbroken> but my goal is not to know the current paginate_by
[08:05:44] <FunkyBob> you need to write your own version that gets the right paginate value from your user's config record...
[08:05:46] *** Joins: jasonbraganza (jasonbraga@user/jasonbraganza)
[08:05:56] <wallbroken> my goal is to set the paginate value stored in my model
[08:06:01] <FunkyBob> yes,
[08:06:04] <FunkyBob> hence what I just wrote
[08:06:16] <wallbroken> but why i need that?
[08:06:25] <wallbroken> i can directly set the value in paginate_by variable
[08:06:33] <FunkyBob> to what?
[08:06:35] <wallbroken> my problem is how to pull the paginate value
[08:06:38] <wallbroken> see my link
[08:06:39] <FunkyBob> you mean when defining the class?
[08:06:48] <wallbroken> https://github.com/ClaudioViti/lookbook/blob/multi-user/shoes/views.py#L26
[08:06:57] <FunkyBob> that code shows "PAGINATE_CONST"
[08:07:02] <FunkyBob> but... you don't want a constant, do you?
[08:07:08] <wallbroken> yes
[08:07:09] <FunkyBob> you want to figure it out dynamically
[08:07:13] <wallbroken> tht is a value created by me
[08:07:13] <FunkyBob> based on the current user
[08:07:19] <FunkyBob> and their configured preference
[08:07:19] <wallbroken> now is dynamic
[08:07:27] <FunkyBob> how is it dynamic now?
[08:07:34] <wallbroken> and i just need to pull "paginate" from the AccountUser model
[08:07:38] <FunkyBob> yes
[08:07:41] <FunkyBob> I told you how to do this
[08:07:49] <wallbroken> i repeat one last time: how to pull that "paginate" value from my custom model?
[08:07:56] <FunkyBob> holy shit
[08:08:14] <wallbroken> you told me to write my custom model of get_paginate_by
[08:08:16] <FunkyBob> so we go over this exact same thing again today
[08:08:19] <FunkyBob> yes
[08:08:24] <FunkyBob> a method on your view
[08:08:32] <FunkyBob> it needs to reference the current user... you do that by...?
[08:08:39] <wallbroken> i cannot use self.request.user.user_config.paginate
[08:08:45] <wallbroken> because it needs "request"
[08:08:46] <FunkyBob> why not?
[08:08:48] <FunkyBob> yes
[08:08:56] <wallbroken> request is inside the method
[08:09:03] <FunkyBob> not quite
[08:09:14] <FunkyBob> self.request will be set by the time get_paginate_by is called
[08:09:31] <FunkyBob> once again you're confused by class based views... once again we see why I told you not to use them
[08:10:40] <wallbroken>     def get_paginate_by(request):
[08:10:40] <wallbroken>         paginate_by = request.user.user_config.paginate
[08:10:49] <wallbroken> do you mean this?
[08:11:25] *** Joins: Guest94 (~Guest94@pool-100-7-38-116.rcmdva.fios.verizon.net)
[08:12:28] <FunkyBob> shit... was wiping dust off my keyboard, accidentally pressed the sleep button
[08:12:32] <FunkyBob> wallbroken: no
[08:12:43] <FunkyBob> wallbroken: it's a method, so it will have self (I know the docs don't show that)
[08:12:49] <FunkyBob> wallbroken: and it needs to RETURN the value,
[08:12:56] <FunkyBob> not just set it to a variable that will then be discarded
[08:14:01] <wallbroken> https://dpaste.org/BHV7
[08:14:33] <FunkyBob> except... no, request is not the listed argument in the docs
[08:14:43] <FunkyBob> you still need to refer to self.request
[08:16:07] <wallbroken> get_paginate_by() takes 1 positional argument but 2 were given
[08:16:19] <wallbroken> def get_paginate_by(self):
[08:16:27] <wallbroken> i given one single argument
[08:16:59] <FunkyBob> the self is implied
[08:17:21] <FunkyBob> look at the docs i linked... what argument does it show ?
[08:17:22] <wallbroken> what?
[08:17:32] <FunkyBob> in the docs the self is implied in the list of arguments
[08:17:37] <FunkyBob> in your code it must be explicit
[08:17:41] <FunkyBob> but look at the docs
[08:17:42] <PaulWay[w]> Ah, the wallbroken saga continues.
[08:17:45] <FunkyBob> what arguments does it show?
[08:17:52] <wallbroken> queryset
[08:17:57] <wallbroken> hello PaulWay[w]
[08:18:00] <wallbroken> how are you
[08:18:14] <PaulWay[w]> Doing well.
[08:18:36] <PaulWay[w]> I added a feature to Django Rest Framework to add extra path parameters in a viewset.
[08:18:48] <wallbroken> i forcely need to specify "self" as the get_paginate_by() argument
[08:18:51] <schinckel> wallbroken: You'll probably want to use `self.request.user.user_config.paginate_by`, rather than pass the request in to the get_paginate_by function.
[08:18:55] <wallbroken> because i use self.request
[08:19:13] <schinckel> You shouldn't need to _call_ get_paginate_by yourself.
[08:19:43] <PaulWay[w]> I need to actually publish this feature in a branch on DRF.
[08:19:57] <schinckel> It's a method on a View, so `self` will be the view class, which has an attribute `request` that you can reference.
[08:20:59] <wallbroken> https://dpaste.org/6aDb
[08:21:10] <wallbroken> this way it does not render the page
[08:21:35] <wallbroken> 	
[08:21:35] <wallbroken> get_paginate_by() takes 1 positional argument but 2 were given
[08:21:46] <schinckel> Are you calling get_paginate_by in your code?
[08:21:49] <FunkyBob> wallbroken: as we've covered many times, you always need to specify self on methods in python.
[08:22:08] <wallbroken> in fact i did that
[08:22:08] <FunkyBob> wallbroken: for this method, it will ALSO be passed the queryset... so your version of the method must ALSO accept queryset
[08:22:10] *** Joins: hyper_dave (~hyper_dav@197.156.103.172)
[08:23:07] <PaulWay[w]> FunkyBob: just to clarify - you mean that you have to define a method as `def method(self):` - but you don't have to use it when you do `object.method()`.
[08:23:09] <wallbroken> ok, now it works
[08:23:11] <wallbroken> thank you
[08:23:18] <PaulWay[w]> I think wallbroken might be confused by that maybe?
[08:23:30] <FunkyBob> PaulWay[w]: that is a good detail...
[08:24:08] <FunkyBob> but it likely doesn't help that the django docs don't list self for methods
[08:24:31] <PaulWay[w]> When using them?
[08:24:53] <FunkyBob> https://docs.djangoproject.com/en/3.2/ref/class-based-views/mixins-multiple-object/#django.views.generic.list.MultipleObjectMixin.get_paginate_by
[08:24:56] <FunkyBob> when documenting them
[08:25:19] <PaulWay[w]> Yes - because that's describing how you use them.
[08:25:27] <PaulWay[w]> Not how they're declared.
[08:25:34] <schinckel> I think I could count on one hand the number of times I've written code that _calls_ get_paginate_by.
[08:25:38] <PaulWay[w]> Personally I think that's correct.
[08:26:01] <wallbroken> FunkyBob: and what about how to pull the current values in the form?
[08:26:01] <schinckel> ...and I think I only used them when I _wrote_ paginators and associated classes for that.
[08:26:21] <FunkyBob> wallbroken: oh, we're back to the update view?
[08:26:30] <wallbroken> yes
[08:27:15] <FunkyBob> can you make an effort to MENTINO this
[08:27:17] <FunkyBob> mention
[08:27:26] <FunkyBob> instead of making a rapid context switch and expecting us to know
[08:27:36] <FunkyBob> you do this often, and it's FUCKING annoying
[08:28:49] <wallbroken> ok, do you remeber the problem?
[08:28:59] <PaulWay[w]> What problem?
[08:29:05] <FunkyBob> the view t akes care of this all by itself
[08:29:06] <wallbroken> i have a form to set two fields (dark_mode, paginate)
[08:29:13] <wallbroken> and the apply button
[08:29:16] <wallbroken> now that works
[08:29:28] <wallbroken> the only problem is that is not showing the current values
[08:29:32] <Guest94> Hi anyone here use twilio? All I want to do is make a simple outbound call and be able to hang up from the browser. Not sure what the best approach for this should be. I have multiple submit buttons and POSTs for each button. The call button works but could not figure out how to pass the call.sid when clicking the hangup button
[08:29:39] <FunkyBob> wallbroken: _what_ is not showing the current values?
[08:29:42] <Guest94> https://dpaste.org/O3Ff
[08:29:49] <PaulWay[w]> Guest94: what's not working for you?
[08:30:10] <Guest94> after the if statement on line 25-27, how do i end the call?
[08:30:20] <wallbroken> FunkyBob: https://www.dropbox.com/s/yobxckde394txtg/Untitlssed.png?dl=0
[08:30:20] <wallbroken> this
[08:30:32] <wallbroken> when i load the page
[08:30:33] <Guest94> According to the link i need to pass in a completed status
[08:30:38] <wallbroken> it does not show the current values
[08:30:42] <Guest94> but i need the call_sid from the call
[08:30:45] <FunkyBob> wallbroken: again... load WHICH page?
[08:30:56] <wallbroken> shoe_list.html
[08:30:56] <PaulWay[w]> Whare you storing the call_sid, Guest94?
[08:31:17] <Guest94> oh shoot i forgot thee context line hold on
[08:31:19] <FunkyBob> wallbroken: when you created the ConfForm instance, did you pass the current config instance to it?
[08:31:29] <wallbroken> no
[08:31:30] <PaulWay[w]> If this is a session in the browser, maybe you need to store the session sid it in the browser.
[08:31:34] <FunkyBob> there's y our problem
[08:31:50] <Guest94> https://dpaste.org/5MXi
[08:32:15] <wallbroken> FunkyBob: and how to do that?
[08:32:35] <Guest94> hmm so putting it into a session variable?
[08:32:37] <FunkyBob> wallbroken: when you create the form instance, pass instance=..the instance you want it to work on
[08:32:41] <FunkyBob> just like you've done before
[08:32:45] <PaulWay[w]> Guest94: seems reasonable.
[08:32:57] <Guest94> should i make every button a submit button?
[08:33:05] <Guest94> i feel like that is f'in me up
[08:33:13] <PaulWay[w]> That depends on the Javascript driving your page.
[08:33:18] <Guest94> none at all
[08:33:29] <PaulWay[w]> Ah, amusing.
[08:34:07] *** Joins: combengue (~Thunderbi@207.191.249.160)
[08:34:40] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Ping timeout: 240 seconds)
[08:34:40] *** combengue is now known as cmbengue
[08:34:50] <PaulWay[w]> So you're intending to do this server side?  I thought you'd need a persistent page to run a phone call.
[08:34:50] <wallbroken> model = AccountConfig(instance=...)
[08:34:53] <wallbroken> this way?
[08:35:18] <FunkyBob> no
[08:35:27] <FunkyBob> how is that at all related to making the form instance?
[08:35:43] <wallbroken> one step back
[08:35:46] <Guest94> for instance, this did not work: https://dpaste.org/q4cU
[08:35:53] <wallbroken> where the form instance is created?
[08:36:01] <FunkyBob> wallbroken: yes
[08:36:15] <PaulWay[w]> Guest94: yes, because your server side does not persist the state of call_sid.
[08:36:16] <FunkyBob> the Form class you're making an instance of so you can render it in that page
[08:36:20] <wallbroken> form_class = ConfForm(instance=)
[08:36:31] <FunkyBob> keep going...
[08:36:43] <PaulWay[w]> You've got to think about that form code being run in two completely separate instances, with no knowledge of previous state.
[08:36:53] <Guest94> i see
[08:36:56] <PaulWay[w]> The only state it has is what you get given from the client, and what you can fetch from the database.
[08:36:59] <wallbroken> what's the name of the instance?
[08:37:03] <wallbroken> "model" ?
[08:37:28] <PaulWay[w]> So either the browser knows it - say in a cookie, or in a variable in a script running on the page - or the server knows it.
[08:37:45] <FunkyBob> wallbroken: no
[08:37:51] <FunkyBob> it's the instance of the user conf that you want to edit
[08:37:57] <PaulWay[w]> are you guessing again wallbroken?
[08:38:00] <Guest94> ok i will try a cookie
[08:38:02] <FunkyBob> the one for the current user
[08:38:10] <PaulWay[w]> I'd suggest the browser, and maybe a cookie, because that way you don't have to store the state of a call in the database.
[08:38:26] <PaulWay[w]> Because that gets stale and then you have to clean things up and it's messy.
[08:38:29] <Guest94> when you say browser you mean javascript?
[08:38:36] <wallbroken> PaulWay[w]: no
[08:38:38] <wallbroken> FunkyBob: self.request.user.user_config
[08:38:44] <FunkyBob> wallbroken: yes
[08:38:44] <wallbroken> this should be the model instance
[08:38:48] <FunkyBob> correct
[08:38:49] <PaulWay[w]> Maybe.  Cookies are managed by the browser internally.
[08:39:09] <Guest94> ok thanks i will see what i can do
[08:39:19] <PaulWay[w]> The downside is that then you have to trust what the browser tells you.
[08:39:22] <wallbroken> FunkyBob: form_class = ConfForm(instance=request.user.user_config)
[08:39:38] <Guest94> the problem is i don't know any javascript so i feel like the only way i can do this now is through django only
[08:39:48] <FunkyBob> so long as you're putting form_class into the context ... yes
[08:40:04] <PaulWay[w]> Guest94: well, look up how Django handles storing cookies on the browser.
[08:40:09] <PaulWay[w]> And retrieving them.
[08:40:18] <Guest94> ok sounds good
[08:40:27] <wallbroken> FunkyBob: i didn't get what you just said
[08:40:41] <Guest94> should i leave all the buttons as submit POST buttons or make some GET?
[08:41:22] <PaulWay[w]> Personal preference - I'd go with POST at this stage for you.
[08:41:32] <Guest94> ok gotcha
[08:41:41] <FunkyBob> wallbroken: you've shown me a single line of code... which in itself looks ok...
[08:41:56] <FunkyBob> wallbroken: but I can't see what else you're doing, so i don't know if you've put this in entirely the wrong place
[08:42:21] <FunkyBob> the right place is inside get_context_data ... and putting that form instance into the context so the template can access it
[08:42:22] <wallbroken> https://dpaste.org/kwJL
[08:42:38] <FunkyBob> that's
[08:42:42] <FunkyBob> entirely unrelated to what we're doing now
[08:42:50] <FunkyBob> no
[08:42:52] <FunkyBob> that is wrong
[08:43:09] <FunkyBob> you just said you were looking at shoe_list.html... which lmeans the shoes list view
[08:43:14] *** Joins: barrios (~barrios@ip5f5aba17.dynamic.kabel-deutschland.de)
[08:43:19] <wallbroken> oh ok
[08:43:22] <FunkyBob> THAT view will take care of passing the current instance to the view as instance
[08:43:25] <wallbroken> yes, you are right
[08:43:26] *** Quits: barrios (~barrios@ip5f5aba17.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[08:43:39] <wallbroken> sorry, i'm not very concentrated
[08:43:54] <PaulWay[w]> It's 3AM and you're down to your last Red Bull?
[08:44:05] <wallbroken> no, i got Covid vaccination yesterday
[08:44:11] <wallbroken> and some side effects are incoming
[08:44:15] <wallbroken> like headache
[08:44:17] <PaulWay[w]> Fair enough!
[08:44:30] <PaulWay[w]> Take it easy there.
[08:46:11] <Guest94> funkybob i hear it is crazy in your country now
[08:46:21] <FunkyBob> is it?
[08:46:23] <wallbroken> FunkyBob: ok, now it works. thank you very much
[08:46:27] <schinckel> Not the whole country.
[08:46:31] <Guest94> yea with the lockdowns and stuff
[08:46:40] <FunkyBob> yeah, lockdowns for most of the population
[08:47:04] <dre> yeah the lockdowns are crazy
[08:47:23] <wallbroken> in AU it's winter now?
[08:47:25] <Guest94> i feel bad for you folks
[08:47:29] <FunkyBob> wallbroken: in t heory, yes.
[08:47:58] <audiobirb> anyone ever use inspectdb before?
[08:48:03] <audiobirb> this is my first time needing to use it
[08:48:14] <FunkyBob> audiobirb: a long time ago
[08:48:16] <schinckel> Yeah, I used it when first moving to Django, about 14 years ago...
[08:48:18] <PaulWay[w]> For what, audiobirb?
[08:48:27] <PaulWay[w]> wallbroken: yes
[08:48:37] <audiobirb> PaulWay[w], i've inherited an mssql database
[08:48:48] <audiobirb> of a desktop application, which i am porting to jdango
[08:48:49] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 252 seconds)
[08:48:49] <PaulWay[w]> Ah.  My condolences.
[08:48:56] <audiobirb> T-T
[08:48:58] * FunkyBob is reminded of how big the AU contingent is currently :P
[08:49:01] <PaulWay[w]> Heh
[08:49:13] <wallbroken> why "in theory" ?
[08:49:21] <wallbroken> it means that it's too hot to be winter?
[08:49:24] <FunkyBob> wallbroken: well, it's sunny and warm out today
[08:49:28] <PaulWay[w]> FunkyBob: we had that "how many can you fit Italy into Australia" competition last night, right?
[08:49:37] <audiobirb> PaulWay[w], is it the way to go? did you experience any problems
[08:49:43] <schinckel> Pretty sunny across most of the country, I believe.
[08:49:52] <schinckel> (and it's a big country)
[08:49:54] <wallbroken> and you don't used vaccination in AU?
[08:49:57] <PaulWay[w]> audiobirb: I prefer Postgres.  I'm just being funny.
[08:49:59] <wallbroken> why lockdown again?
[08:50:03] <PaulWay[w]> wallbroken: already vaccinated.
[08:50:05] <audiobirb> PaulWay[w], i do too
[08:50:07] <FunkyBob> wallbroken: I'm vaccinated
[08:50:19] <audiobirb> PaulWay[w], i meant did you encounter any problems with inspectdb
[08:50:20] <FunkyBob> wallbroken: lockdown because the govt botched the vaccine orders, so lots of people can't yet access them
[08:50:22] <audiobirb> you too FunkyBob
[08:50:22] <schinckel> Yeah, we have vaccinations, but only about 25% of the population is double-jabbed.
[08:50:28] <FunkyBob> and we're well behind on getting it done
[08:50:40] <FunkyBob> audiobirb: the thingst o remember about inspectdb... it will put all models in the one 'app'
[08:50:46] <FunkyBob> audiobirb: and it's an automatic tool...
[08:50:50] <PaulWay[w]> audiobirb: never used it.
[08:50:53] <schinckel> Having great success handling the initial pandemic meant that the government felt like they could relax.
[08:51:00] <audiobirb> FunkyBob, how do i specify the app? or does it autogenerate it?
[08:51:01] <FunkyBob> so it will miss nuance, and may not properly understand your schema
[08:51:07] <PaulWay[w]> That's a very ... charitable view schinckel ;-)
[08:51:16] <FunkyBob> audiobirb: just let it generate, and organise the models yourself once it's done
[08:51:22] <audiobirb> ok
[08:51:24] <schinckel> PaulWay[w]: I'm holding a fair bit back...
[08:51:27] <FunkyBob> audiobirb: its purpose is to take away 90% of the effort... not to be perfectr
[08:51:31] <wallbroken> but are vaccinated people still able to contract the virus?
[08:51:34] <PaulWay[w]> schinckel: same.
[08:51:37] <audiobirb> FunkyBob, ok
[08:51:57] <schinckel> wallbroken: Vaccinated people can contract and spread the virus.
[08:51:59] <FunkyBob> wallbroken: yes, they are... hwoever the chance of serious or lethal consequences are drastically reduced
[08:52:18] <schinckel> There's some reduced transmission, but it's more about how sick unvaccinated people get.
[08:52:31] <FunkyBob> it's like giving your immune system a dossier on the virus... so it knows who to look out for
[08:52:41] <wallbroken> but this is due to this vaccine limitations or all the vaccines work that way?
[08:53:10] <FunkyBob> wallbroken: different vaccines work in different ways... most aim to 'teach' the immune system what t o look out for
[08:53:15] <FunkyBob> and [ideally] know to kill on sight
[08:53:44] <wallbroken> you got comirnaty?
[08:54:16] <FunkyBob> I got the pfizer one
[08:54:28] <FunkyBob> so yes
[08:55:14] <wallbroken> which should be the best one
[08:55:45] <FunkyBob> why?
[08:55:57] <PaulWay[w]> Most vaccines prevent the virus from getting to the point where you're infectious.
[08:56:11] <PaulWay[w]> We haven't reached state of the art on the COVID vaccines yet.
[08:56:16] <PaulWay[w]> And this may be getting off topic.
[08:56:19] <PaulWay[w]> :-)
[08:56:21] <FunkyBob> :)
[08:56:30] <FunkyBob> s'ok if it's not stopping on-topic discussions
[08:57:10] <FunkyBob> meanwhile, The Shovel (a lot like the Onion) delivers - https://twitter.com/TheShovel/status/1428209674680033281
[08:58:06] <PaulWay[w]> The Shovel and the Betoota Advocate are keeping me sane.
[08:58:10] <wallbroken> because here in italy some people died after AZ vaccination
[08:58:24] <wallbroken> and the EU suspended that vaccine
[08:58:31] <FunkyBob> wallbroken: that's happened a bit... and we suspended it here too, for under 50s
[08:58:38] *** Joins: barrios (~barrios@ip5f5aba17.dynamic.kabel-deutschland.de)
[08:58:44] <FunkyBob> I did see some research explaining one possible reason for TTP
[08:58:46] <FunkyBob> TTS, I mean
[08:59:01] <FunkyBob> which was ... improper injection procedure
[08:59:24] <PaulWay[w]> https://www.theshovel.com.au/2021/08/11/sydney-man-allegedly-pretended-to-be-prime-minister-for-past-35-months/
[08:59:25] <wallbroken> https://jamanetwork.com/journals/jamainternalmedicine/fullarticle/2779389
[08:59:33] <wallbroken> i'm not sure i inderstood what it said
[08:59:36] *** Joins: sandeepk (~sandeepk@223.130.30.151)
[08:59:58] <FunkyBob> facial paralysis? that's a n ewone
[09:00:04] <wallbroken> yes
[09:00:31] <FunkyBob> it seems to suggest they've run the numbers, and this stat stands out
[09:03:13] <wallbroken> here you can't join the restaurants if you have not a QR code which indicates you're vaccinated
[09:04:16] <PaulWay[w]> When we're not in lockdown, we have a QR code system that allows you to scan in and identify as being in a store, restaurant or venue.
[09:04:35] <PaulWay[w]> That doesn't require you to be vaccinated but it does help contact tracing.
[09:04:50] <FunkyBob> wallbroken: from memory, Italy was one of the hardest hit early on, being one of the first to have to start making the awful "salvagable' calls on patients.
[09:04:50] <PaulWay[w]> But now the ACT, where I live, is in lockdown thanks to NSW.
[09:05:01] <PaulWay[w]> I blame... (spins the wheel) ... John Barilaro.
[09:05:18] <FunkyBob> yeah, we have the QR code sign-ins everywhere... lockdown orno
[09:06:34] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[09:06:56] *** Joins: flynn (~mcbloch@user/flynn)
[09:07:33] <schinckel> Likewise, here in South Australia.
[09:07:58] <schinckel> You can even see the total number of QR code checkins per-day. If only I could remember where I saw that...
[09:15:14] <wallbroken> italy was the second country "under attack"
[09:15:19] <wallbroken> after Wuhan
[09:15:32] <wallbroken> in our case, QR code is not for contact traacing
[09:15:47] <wallbroken> for that, there wase a bluetooth based app which never worked
[09:15:53] *** Quits: barrios (~barrios@ip5f5aba17.dynamic.kabel-deutschland.de) (Ping timeout: 248 seconds)
[09:16:09] *** Joins: barrios (~barrios@dynamic-046-114-141-057.46.114.pool.telefonica.de)
[09:16:18] <wallbroken> QR code is an offline way which indicates that a person is not dangerous
[09:17:31] <FunkyBob> i have a small blue card in my wallet that has my vaccination dates on it...
[09:17:35] <FunkyBob> have not needed it yet
[09:17:56] <FunkyBob> we, too, had a bluetooth based app that never worked
[09:18:00] <wallbroken> how many vaccination steps did you do?
[09:18:01] <wallbroken> 2?
[09:18:03] <FunkyBob> i keep forgetting about that little pork barrel
[09:18:06] <FunkyBob> 2
[09:18:32] <wallbroken> that bluetooth app never worked because it can be easily faked
[09:18:43] <FunkyBob> it never worked here for many reasons
[09:18:52] <FunkyBob> some of which because they failed to learn from the ones that _do_ work
[09:19:12] <wallbroken> first one is that most of people never used that
[09:19:16] <FunkyBob> but also things like... it required your phone to always be unlocked
[09:19:28] <wallbroken> because of scared of privacy related issues
[09:19:56] <wallbroken> no, iOS/android developed a custom API to make it working all the time
[09:19:59] <FunkyBob> yeah... the contact tracing in various states here has run up against police access to what we were promised they'd not have access to
[09:26:59] *** Quits: barrios (~barrios@dynamic-046-114-141-057.46.114.pool.telefonica.de) (Remote host closed the connection)
[09:27:37] *** Joins: Thanatos (~Thanatos@197.210.55.83)
[09:28:58] *** Joins: barrios (~barrios@2a02:3030:408:bc12:738c:e58a:d90e:8abe)
[09:30:31] *** Quits: barrios (~barrios@2a02:3030:408:bc12:738c:e58a:d90e:8abe) (Read error: Connection reset by peer)
[09:30:51] *** Joins: barrios (~barrios@dynamic-046-114-141-057.46.114.pool.telefonica.de)
[09:37:48] *** Joins: sandeep (~sandeepk@223.130.30.173)
[09:40:10] *** Quits: sandeepk (~sandeepk@223.130.30.151) (Ping timeout: 240 seconds)
[09:43:14] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:44:00] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[09:45:15] *** Quits: barrios (~barrios@dynamic-046-114-141-057.46.114.pool.telefonica.de) (Remote host closed the connection)
[09:45:20] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:45:33] *** Joins: barrios (~barrios@ip5f5aba17.dynamic.kabel-deutschland.de)
[09:45:45] *** Quits: barrios (~barrios@ip5f5aba17.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[09:49:52] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[09:51:40] *** Quits: Thanatos (~Thanatos@197.210.55.83) (Ping timeout: 240 seconds)
[10:07:20] *** Quits: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75) (Ping timeout: 258 seconds)
[10:16:33] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[10:26:40] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[10:39:14] *** Joins: ciurca (~ciurca@5-15-3-125.residential.rdsnet.ro)
[10:39:25] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[10:40:18] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[10:40:18] *** ChanServ sets mode: +v EvilDMP
[10:40:55] *** Quits: ciurca (~ciurca@5-15-3-125.residential.rdsnet.ro) (Remote host closed the connection)
[10:43:15] *** Joins: ciurca (~ciurca@5-15-3-125.residential.rdsnet.ro)
[10:43:44] *** Quits: ciurca (~ciurca@5-15-3-125.residential.rdsnet.ro) (Read error: Connection reset by peer)
[10:44:22] *** Joins: jfoster (~textual@c-71-236-195-25.hsd1.or.comcast.net)
[10:45:46] <jfoster> I have built some DRF endpoints to serve a SPA app, but I also want to utilize them for CRUD operations needed in views.
[10:46:43] <wallbroken> FunkyBob: for creating the default user configuration, the approach is to create a new one in the moment that one user has been created, right?
[10:46:55] <jfoster> I looked into generating an OpenAPI schema and then using that to generate my own python-based SDK. Then I could import my own api and use it directly.  But that is overkill on this project for now.
[10:47:22] <jfoster> Is the best thing to just build a requests-based function for each endpoint operation?
[10:48:26] <jfoster> It seems like I aught to not be interfacing with this built in api at the network level. In the past I've only used my DRF endpoints in the frontend. Or I can't remember using them from within the django app itself.
[10:52:12] <serafeim> hello friends
[10:52:48] <schinckel> jfoster: You may be able to use the API endpoints to generate HTML too.
[10:53:38] <schinckel> I wouldn't use requests to call the code in python - instead consider extracting the business logic into a function and call that in both places instead (if you can't use the view directly from the browser)
[10:54:52] <schinckel> wallbroken: The Australian "exposure" app didn't use the iOS/Android API - instead it used a server-side system based on a Singapore app. There were a bunch of privacy/performance issues.
[10:55:19] <schinckel> Things like it stopping your other Bluetooth devices from working.
[11:01:44] *** Joins: mattil (~mattil@helsinki.portalify.com)
[11:13:16] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[11:18:56] <carlorat1> hi all, where is the field description used?
[11:19:36] <carlorat1> only in admindocs?
[11:20:13] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[11:20:44] <jfoster> schinckel thanks for the suggestion. I essentially have the BL code abstracted into functions used in the DRF CBVs. However, I was hoping to use the same json data model, and leverage the same DRF deserialization features.
[11:22:20] <jfoster> These BL functions powering the DRF endpoints presume specific deserialized data. I suppose I could call the drf serializer from python, but it seems like maybe a bit crufty when the endpoints would otherwise be a single source of truth.
[11:23:07] <schinckel> Yeah, but you don't want to be doing an HTTP request to your own server.
[11:23:31] <schinckel> You can call views directly (by passing them a request, and any relevant args).
[11:23:44] <schinckel> Maybe you can do something similar with DRF?
[11:23:53] <jfoster> I don't. Though, the frontend would be doing that with these endpoints anyway, right?
[11:23:57] <schinckel> (I don't know - I find DRF rubs me the wrong way and I try to avoid it)
[11:24:07] <jfoster> Ya, it does seem like the views should be able to be called directly. that would be preferable.
[11:24:11] <schinckel> If the frontend calls them directly (ie, from the browser) then that's fine.
[11:24:27] <schinckel> As I said, you can have DRF views return HTML, I believe.
[11:24:35] <schinckel> But it's the incoming form-handling that I'm not so sure about.
[11:24:40] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[11:24:58] <jfoster> I didn't understand that note about returning html in the context of my question surface, can you explain a bit more what you mean?
[11:25:13] <schinckel> DRF views can return HTML instead of JSON.
[11:25:28] <schinckel> Then you can use those in the browser.
[11:26:12] <jfoster> Ah, the endpoint i'm focused on is for posting a blob of nested json data to an endpoint for a Create.
[11:26:42] <schinckel> You can have your HTML views call the DRF endpoints, and deal with the JSON in the browser.
[11:30:42] <carlorat1> is there any doc on how to document models?
[11:30:52] * doc waves
[11:30:52] <FunkyBob> wallbroken: yes... create the user config when a user is created
[11:31:04] <jfoster> there is a doc tor in the house
[11:31:21] <FunkyBob> i think years ago I made a special one-to-one field that would auto-create a record if you tried to reverse access
[11:32:27] <FunkyBob> however, as I mentioned... these days people tend to avoid the 'profile model' pattern you've implemented
[11:32:36] <FunkyBob> and instead customise the fields directly on the User
[11:33:32] <wallbroken> FunkyBob: first of all: in which file should i add it?
[11:34:14] <jfoster> wallbroken you can choose: https://docs.djangoproject.com/en/3.1/topics/auth/customizing/#substituting-a-custom-user-model
[11:34:30] <FunkyBob> wallbroken: add which , exactly?
[11:34:53] <wallbroken> the code that creates the default user configuration record
[11:35:02] *** Joins: Thanatos (~Thanatos@197.210.54.9)
[11:35:30] <FunkyBob> well, since we'll be implementing it as a signal handler, it's conventional to put it in a file called signals.py
[11:35:59] *** Quits: Thanatos (~Thanatos@197.210.54.9) (Read error: Connection reset by peer)
[11:36:10] *** Quits: Harlin (~DonQixote@2603:300b:663:e800:36b1:82a4:cb60:df91) (Ping timeout: 240 seconds)
[11:36:35] *** Joins: Thanatos (~Thanatos@197.210.55.198)
[11:36:52] <wallbroken> in the same directory of views.py?
[11:37:58] <jfoster> schinckel DRF seems to be in a bit of a grim spot: https://github.com/encode/django-rest-framework/discussions/8110. How are you building APIs in Django these days?
[11:38:06] <FunkyBob> as part of an app, yes
[11:38:36] <wallbroken> ok, now, what to put inside of it?
[11:39:16] <FunkyBob> have you read anything about the Signals feature of Django?
[11:39:19] <FunkyBob> https://docs.djangoproject.com/en/3.2/topics/signals/
[11:39:35] <wallbroken> no, i haven't read it
[11:40:07] <wallbroken> well, there is not an italian version?
[11:40:11] <wallbroken> it makes me faster to read
[11:40:18] <FunkyBob> sadly, not yeat
[11:40:19] *** Quits: Guest94 (~Guest94@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 246 seconds)
[11:40:21] <FunkyBob> yet
[11:40:30] <FunkyBob> the docs are quite extensive, it t akes a lot of effort to make a new translation
[11:40:32] <wallbroken> and in djangogirls?
[11:41:07] <FunkyBob> doesn't cover this topic, I don't believe
[11:42:50] <serafeim> jfoster: i don't build apis. i jus use django as it is *intended* to be used !
[11:43:06] <wallbroken> so, the concept is that signal is triggering the code of account config creation when a new user is created
[11:43:23] <serafeim> i.e using good old server side views and avoiding most javascript
[11:44:02] <jfoster> serafeim  how do you support other clients?
[11:44:10] <serafeim> jfoster: what do you mean other clients ?
[11:44:19] <FunkyBob> wallbroken: yes
[11:44:33] <serafeim> also concerning this discussion, i see a commit 8 days ago (https://github.com/encode/django-rest-framework). so the answer should be obvious!
[11:45:39] <wallbroken> so, we need two sides
[11:45:43] <wallbroken> a sender and a receiver
[11:45:43] <jfoster> FunkyBob OOC, what about using a custom manager for the user model that tacks on the config model instantiation?
[11:45:53] <wallbroken> both sides needs to be defined in signals.py
[11:46:22] <jfoster> serafeim are you being sarcastic? the issue points out that the commits lately are largely typos.
[11:46:24] <serafeim> jfoster: also the tom christie answer says that he will support the project. so what the problem with DRF ?
[11:46:25] <FunkyBob> wallbroken: there is already a sender
[11:46:31] <FunkyBob> you just need to register to hear it
[11:46:38] <serafeim> jfoster: did you actually read what tom christie wrote ?
[11:47:12] <serafeim> i really don't see any problems
[11:47:43] <jfoster> serafeim Sure, and I take him at that. However, the reason I used the word grim is that there was a serious, good faith question about the project's lifeblood. And then TC made a serious good faith response to that.  This is the primary API authoring for the framework.  It concerns me a wee bit that it would be in this spot.
[11:48:19] <jfoster> Especially given how much attention is going to alternative methods for implementing APIs in python right now.
[11:48:36] <serafeim> jfoster: i think they will just transfer it to other maintainers. there are many people that would like to maintain that project.
[11:49:16] <serafeim> or maybe he'll do another kickstarter campain to get money to support it or release a new version
[11:49:29] <wallbroken> FunkyBob: so, when i create a new user, i should trigger this print?
[11:49:30] <wallbroken> def my_callback(sender, **kwargs):
[11:49:30] <wallbroken>     print("Request finished!")
[11:50:06] *** Joins: daylight (~manjaro-u@175.101.143.57)
[11:50:45] <jfoster> That would be fine. There are definitely positive outcomes, however, I don't think great API programming implementation is optional for a modern web framework of any kind.  It is a bit worrisome to me that django is so leveraged up on DRF.  I don't mean to say the sky is falling, but that issue and the response was a little bit shocking to me.
[11:51:45] <FunkyBob> wallbroken: err... wat?
[11:52:12] <serafeim> well concerning the API, nothing forbids you to implement it yourself. django gives you all the tools. the DRF is not really needed for most cases
[11:52:49] <serafeim> and I definitely wouldn't like to see a change in the direction of API from a traditional web framework to a framework for building SPAs
[11:53:06] <serafeim> change in the direction of *django*
[11:53:30] <FunkyBob> serafeim: as you say, t here's no need
[11:53:36] <FunkyBob> django already supplies t he basics needed
[11:54:33] <wallbroken> FunkyBob: you said that there is already a sender
[11:54:44] <wallbroken> so what i created is just the receiver code
[11:54:59] <FunkyBob> wallbroken: correct
[11:55:11] <FunkyBob> write a function to handle the signal, and register it with the correct signal
[11:55:23] <wallbroken> def my_callback(sender, **kwargs):
[11:55:23] <wallbroken>     print("Request finished!")
[11:55:24] <wallbroken> this
[11:55:32] <jfoster> Hm. I had not taken writing api endpoints from scratch in django seriously. I had thought there were enough permission, serialization and other RESTy features that would make that a lot of unwanted work.
[11:55:34] <wallbroken> i already wrote that
[11:55:38] <FunkyBob> wallbroken: stop
[11:55:39] <FunkyBob> pasting
[11:55:40] <FunkyBob> into
[11:55:41] <FunkyBob> channel
[11:55:53] <wallbroken> FunkyBob: just two lines
[11:56:03] <wallbroken> it's faster than create a pastebin
[11:56:24] <FunkyBob> tough shit
[11:56:27] <FunkyBob> don't do it
[11:56:36] <FunkyBob> one line is the limit, as you well know
[11:56:47] <wallbroken> there was an irc client that when posting multiple lines, it outputs the pastebin link
[11:56:55] <jfoster> There does seem to be some tension between people who want Django's ORM and settings pattern and perhaps some templating, but also want to support API.
[11:57:15] <wallbroken> FunkyBob: ok, but going back on the topic?
[11:57:46] <FunkyBob> jfoster: django already supports APIs...
[11:57:56] *** Joins: slav0nic (slav0nic@python.su)
[11:57:57] <FunkyBob> hey, it even has JsonResponse in core
[12:00:13] *** Quits: neilbags__ (~neilbags@103.77.232.132) (Ping timeout: 252 seconds)
[12:02:12] <jfoster> FunkyBob I realize that, though DRF does a lot of stuff consistently--especially in how it handles models.   I think what you're saying is it doesn't matter if DRF is getting attention or not, because Django is fine as an API builder without it. Is that ~correct?
[12:03:28] <FunkyBob> is DRF lacking in maintenance?
[12:04:02] <FunkyBob> the main thing lacking in django for APIs, imho, is a serialiser toolkit, an API analogue to Forms
[12:04:34] <FunkyBob> certainly, that's a lot of where I focused energy in nap
[12:05:28] <serafeim> FunkyBob: don't you like the serialization framework https://docs.djangoproject.com/en/3.2/topics/serialization/ ?
[12:06:21] <FunkyBob> serafeim: not for APIs , no
[12:06:28] <FunkyBob> at least, not last time I looked at it
[12:07:07] <FunkyBob> i did, many eyars ago, build an API driven django site that did use that
[12:07:49] <jfoster> funkybob Ya, see "grim" above. I guess I have some concern that Django, while stable and wonderful because of it--is getting slowly pulled apart or unbundled by FastAPI, SQLAlchemy, etc.
[12:10:21] <jfoster> The heavy emphasis on feature-complete OpenAPI stuff in TC's response is a nod to just how fast the API space is moving.
[12:11:22] <FunkyBob> sqlalchemy has been around even longer than django, in fact
[12:11:31] <FunkyBob> FastAPI is very nice
[12:11:59] *** Joins: neilbags (~neilbags@103.77.232.131)
[12:12:21] <FunkyBob> as for openapi... i'd love to see a tool like one I saw for flask, that auto-wraps views in code to validate+serialise according to an openapi doc
[12:13:10] *** Quits: neilbags (~neilbags@103.77.232.131) (Remote host closed the connection)
[12:15:52] <FunkyBob> jfoster: django's always had a lot of competition in the market
[12:17:53] <jfoster> funkybob I didn't realize that about sqlalchemy. Ya, i think it is good to have stuff out there because the best ideas can be pulled in.  But I'm not sure it always had competition. Wasn't the go-to 'framework' drupal prior to django? That was what I used at my peak php :p. I thought what initially set django apart was that it was moving so fast.
[12:18:33] <jfoster> People got all mad about breakage and difficult upgrades. I just don't want this pendulum to go too far, because the "web" is not slowing down.
[12:21:19] <jfoster> I totally get serving page-load no frontend saas for enterprise, that's super valuable. But it would be great to also be able to say it is an excellent framework for supporting SPAs. It doesn't feel like it is that far off from being that technically, but it does feel like maybe it is philosophically.
[12:22:40] *** Quits: Thanatos (~Thanatos@197.210.55.198) (Ping timeout: 240 seconds)
[12:26:47] *** Joins: Thanatos (~Thanatos@197.210.79.75)
[12:27:26] <serafeim> django does support SPAs however you are missing most of the django power if you use it to build SPAs
[12:27:38] *** Quits: Thanatos (~Thanatos@197.210.79.75) (Read error: Connection reset by peer)
[12:28:16] *** Joins: Thanatos (~Thanatos@197.210.84.152)
[12:28:24] <serafeim> you can't use forms, views, templates the admin... probably you aren't even using authentication, permissions. and a lot of great packages also can't help you (i.e django-tables2)
[12:28:49] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:28:57] <serafeim> so if you use django for an SPA you just get the models and the urls ? what else ?
[12:29:08] *** Quits: Thanatos (~Thanatos@197.210.84.152) (Remote host closed the connection)
[12:36:18] <b-rex> i use django + DRF to make SPAs
[12:36:42] <b-rex> and i use views, templates, forms, authentication, permissions
[12:36:56] <serafeim> b-rex: what do you use templates for ?
[12:37:39] <b-rex> the SPA needs a way to get some authentication info and csrf token
[12:38:07] <serafeim> b-rex: that means that your API can only be used through a browser you know
[12:38:09] <b-rex> forms for some legacy stuff
[12:38:37] <b-rex> that's also not true. i have some machines that access the api
[12:38:47] <serafeim> b-rex: you are probably doing some hackery
[12:38:59] <b-rex> no hackery, just additional authentication methods configured in DRF
[12:39:20] <serafeim> if you have an SPA you shouldn't need to use any django templates
[12:39:41] <serafeim> all your views can just return json. the front end can be served from elsewhere
[12:39:49] <b-rex> probably not, but i have 1 or 2 templates
[12:40:13] <serafeim> b-rex: well there you go you just have two templates. i mean you use the feature but you are not embracing it
[12:40:17] <serafeim> the same goes with forms
[12:40:41] <serafeim> django offers you some heavy weight tools. you don't use them in their full capabiliites if you have an SPA
[12:40:43] <b-rex> DRF is widely used
[12:40:54] <serafeim> yes i know.
[12:41:17] <b-rex> even if i were not doing SPA, there would be tons of features i'm not embracing in django
[12:41:59] <serafeim> ha ha
[12:42:19] <b-rex> i'd still use django because certain things like authentication and permissions i know have a lot of eyes on them and are assumed to be done correctly
[12:42:27] *** Joins: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[12:43:15] <b-rex> or i could say to myself, "it is pointless to use django unless i use all the features it provides" and roll my own stuff with falcon or flask. but then it's on me if i don't do the grunt work properly
[12:44:27] *** Quits: sandeep (~sandeepk@223.130.30.173) (Remote host closed the connection)
[12:48:52] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[12:49:07] *** Joins: sandeep (~sandeepk@223.130.30.173)
[13:00:11] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[13:02:31] *** Quits: code1 (~code1@2001:470:69fc:105::c807) (Quit: Bridge terminating on SIGTERM)
[13:02:32] *** Quits: syphar (~syphar@2001:470:69fc:105::2ad6) (Quit: Bridge terminating on SIGTERM)
[13:02:33] *** Quits: kenbolton (~kenbolton@2001:470:69fc:105::2d24) (Quit: Bridge terminating on SIGTERM)
[13:02:34] *** Quits: PantelicGR2 (~pantelicg@user/pantelicgr) (Quit: Bridge terminating on SIGTERM)
[13:02:34] *** Quits: bmbouter[m] (~bmbouter@2001:470:69fc:105::162f) (Quit: Bridge terminating on SIGTERM)
[13:02:36] *** Quits: mattcen[mx] (~mattcen@2001:470:69fc:105::5d1) (Quit: Bridge terminating on SIGTERM)
[13:02:37] *** Quits: mambang[m] (~mambang@user/mambang) (Quit: Bridge terminating on SIGTERM)
[13:02:44] *** Quits: allegary (~allegary@apache/committer/gjm) (Quit: Bridge terminating on SIGTERM)
[13:02:44] *** Quits: graingert[m] (~graingert@2001:470:69fc:105::653) (Quit: Bridge terminating on SIGTERM)
[13:05:14] *** Joins: mattcen[mx] (~mattcen@2001:470:69fc:105::5d1)
[13:07:28] <dre> I love batteries included
[13:07:28] *** Joins: kenbolton (~kenbolton@2001:470:69fc:105::2d24)
[13:07:28] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[13:07:42] *** Joins: syphar (~syphar@2001:470:69fc:105::2ad6)
[13:07:42] *** Joins: mambang[m] (~mambang@user/mambang)
[13:07:57] *** Joins: bmbouter[m] (~bmbouter@2001:470:69fc:105::162f)
[13:07:57] *** Joins: allegary (~allegary@apache/committer/gjm)
[13:08:11] *** Joins: code1 (~code1@2001:470:69fc:105::c807)
[13:08:11] *** Joins: graingert[m] (~graingert@2001:470:69fc:105::653)
[13:16:25] *** Quits: jboada (~jboada@186-91-18-133.genericrev.cantv.net) (Quit: Client closed)
[13:20:20] *** Joins: w9gfo (~w9@77.65.163.49)
[13:21:00] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[13:27:32] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 245 seconds)
[13:28:03] <serafeim> here's my latest open source project: https://github.com/spapas/bootstrap5alert
[13:41:42] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 245 seconds)
[13:45:27] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[13:45:42] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:45:42] *** ChanServ sets mode: +v EvilDMP
[13:46:17] *** Quits: w9gfo (~w9@77.65.163.49) (Ping timeout: 248 seconds)
[13:47:10] *** Quits: audiobirb (~audio@2603-8081-1801-3bb5-c203-3fab-d083-5cb4.res6.spectrum.com) (Ping timeout: 240 seconds)
[13:49:57] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 268 seconds)
[13:58:23] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi)
[14:18:27] *** Quits: rubemlrm (~rubemlrm@user/rubemlrm) (Remote host closed the connection)
[14:21:20] *** Joins: rubemlrm (~rubemlrm@user/rubemlrm)
[14:26:56] *** Quits: jfoster (~textual@c-71-236-195-25.hsd1.or.comcast.net) (Quit: My Mac Mini has gone to sleep. ZZZzzzâ€¦)
[14:41:00] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[14:41:21] *** Joins: flynn (~mcbloch@user/flynn)
[14:51:48] *** Joins: mattil (~mattil@helsinki.portalify.com)
[14:53:45] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:59:50] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi)
[15:11:33] *** Joins: dez (uid92154@user/dez)
[15:25:40] *** Quits: noyb (~noyb@user/noyb) (Ping timeout: 240 seconds)
[15:29:05] *** Joins: greenhood (~sharanvar@122.171.164.183)
[15:29:56] *** Parts: greenhood (~sharanvar@122.171.164.183) ()
[15:33:09] *** Joins: Qwerky (~Qwerky@37.164.180.130)
[15:45:59] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[15:48:30] <duoi> anybody from the UK? how much do senior django jobs tend to pay?
[15:50:40] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[15:54:10] *** Quits: Qwerky (~Qwerky@37.164.180.130) (Ping timeout: 240 seconds)
[16:00:46] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 258 seconds)
[16:01:37] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[16:01:37] *** ChanServ sets mode: +v EvilDMP
[16:02:34] *** Parts: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it) ()
[16:06:51] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 268 seconds)
[16:07:08] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[16:35:43] *** Joins: Crassus (~Crassus@user/crassus)
[16:58:41] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[17:04:47] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[17:10:20] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[17:10:23] <moldy> duoi: i'd guess uk is comparable to e.g. germany
[17:12:22] <moldy> duoi: it varies greatly, but to give a rough range based on my experience: probably between 40k and 60k GBP or such
[17:16:33] *** Quits: sandeep (~sandeepk@223.130.30.173) (Quit: Leaving)
[17:17:46] *** Joins: righthand (~righthand@240e:47c:d818:4238:79b9:304c:5fa6:90bc)
[17:25:09] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: Bin weg.)
[17:29:57] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[17:37:50] *** Joins: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net)
[17:47:47] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:48:18] *** Joins: thiras (~thiras@user/thiras)
[17:57:59] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[17:59:04] <IceMichael> moldy, wow, they sure don't demand much. We would not find senior/lead devs for that :)
[17:59:45] <moldy> IceMichael: 50k - 80k EUR is typical in germany (with some outliers probably)
[18:00:28] <moldy> so i converted that to GBP
[18:00:44] <moldy> though i guess london for example might pay more because of the cost of living
[18:04:54] *** Quits: Kipe_ (kipe@user/kipe/x-8442575) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[18:05:06] *** Joins: Kipe_ (kipe@user/kipe/x-8442575)
[18:07:46] <IceMichael> moldy, hm, right, the rate is that bad
[18:07:57] <moldy> IceMichael: where do you live?
[18:08:05] <IceMichael> also Germany :)
[18:08:12] <moldy> IceMichael: ah
[18:08:25] <IceMichael> and we seek senior Python devs at the moment by the way
[18:08:36] <moldy> who doesn't ;)
[18:08:52] <IceMichael> exactly
[18:09:20] <moldy> i am also doing multiple interviews per week right now (as an interviewer). we find it quite hard to find qualified candidates for backend positions.
[18:09:32] <moldy> and we're even searching language-agnostically
[18:09:38] <IceMichael> are you a recruiter or seeking as lead for your team?
[18:10:01] <moldy> we're looking for backend developers to extend my team
[18:10:10] <IceMichael> hehe, same with me
[18:10:35] <IceMichael> yeah, very hard times
[18:10:43] <IceMichael> bunch of recruiters and external companies in there but still hard
[18:10:48] <moldy> i'd be happy if we got some candidates who are not more or less complete beginners
[18:10:56] <IceMichael> maybe, I should go back to programming only and demand 90k, someone might pay it
[18:11:07] <IceMichael> yeah..
[18:11:32] <IceMichael> our HR said it might be easier to find C++ devs at the moment
[18:11:42] <IceMichael> so maybe take them and let them learn Python, it will be easy enough for them
[18:11:53] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[18:11:59] <moldy> yeah we're not even looking for python in particular, just general backend experience
[18:12:26] <IceMichael> hm, sounds very broad, but yeah
[18:12:36] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[18:12:54] <moldy> we're polyglot, and i expect an experienced dev to pick up python quickly enough
[18:13:54] <IceMichael> yeah, especially if you have good onboarding/knowledge sharing/whatever in your team
[18:14:01] <IceMichael> because it's very easy to write bad Python code
[18:14:06] <IceMichael> not exactly as easy to write good one
[18:14:40] <IceMichael> I made it my mission to introduce things like not having 1k+ LOC files, monster functions and completely unclear/undocumented/non-speaking code with spaghetti code and 300 lines functions
[18:16:11] <shangxiao> I worked at a place that hired experienced Java devs to write Python, they'd write their Python as if it was Java
[18:16:49] <shangxiao> And do naughty things like use mutable parameter defaults
[18:16:58] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[18:20:44] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[18:21:10] *** Quits: serghei (~egrep@user/serghei) (Ping timeout: 240 seconds)
[18:22:00] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[18:26:57] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[18:28:54] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[18:29:08] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[18:38:12] *** Joins: mattil (~mattil@d48tzptl93gqxbg17g4-4.rev.dnainternet.fi)
[18:38:39] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[18:39:52] <IceMichael> shangxiao, yeah, does not work with Java devs
[18:39:58] *** Quits: mattil (~mattil@d48tzptl93gqxbg17g4-4.rev.dnainternet.fi) (Remote host closed the connection)
[18:40:18] <IceMichael> they are too into creating tons of interfaces, over-engineering per default and the like
[18:40:26] *** Joins: mattil (~mattil@d48tzptl93gqxbg17g4-4.rev.dnainternet.fi)
[18:40:36] <IceMichael> C++ is more flexible in that with "do it as needed"
[18:41:25] *** Quits: shangxiao (~davids@124.182.71.141) (Quit: WeeChat 3.2)
[18:41:37] <IceMichael> they usually know more paradigms (among them oftentimes also the Java ones, which are fine for C# as well; but also reactive things like in JS, and functional parts like in Haskell)
[18:44:40] *** Quits: mattil (~mattil@d48tzptl93gqxbg17g4-4.rev.dnainternet.fi) (Ping timeout: 240 seconds)
[18:47:15] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[18:49:27] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[18:49:44] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:32:38] *** Quits: explore (uid233125@id-233125.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[19:34:18] *** Joins: Qwerky (~Qwerky@37.164.180.130)
[19:35:37] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi)
[19:36:18] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[19:52:05] *** Joins: CrowX- (~CrowX-@185.167.46.134)
[19:52:30] *** Quits: righthand (~righthand@240e:47c:d818:4238:79b9:304c:5fa6:90bc) (Quit: Client closed)
[19:53:21] <CrowX-> when I visit my site without the language set in the url, django automatically redirects to the url with the language set. i.e. from example.com to example.com/en. Is there a way when rendering a page to find out if the user tried to open example.com vs example.com/en?
[19:53:46] <CrowX-> i.e. I want to find out if the user set the full localized url in the browser, or if they were redirected to it by django.
[19:54:55] *** Quits: Qwerky (~Qwerky@37.164.180.130) (Remote host closed the connection)
[19:55:44] *** Joins: Qwerky (~Qwerky@37.164.180.130)
[20:01:40] *** Quits: hyper_dave (~hyper_dav@197.156.103.172) (Ping timeout: 240 seconds)
[20:03:05] *** daniel3 is now known as daniel2
[20:03:33] *** Joins: hyper_dave (~hyper_dav@static.83.88.217.95.clients.your-server.de)
[20:10:45] <GinFuyou> CrowX-, I think this behaviour is configurable, but if you want to know what you said you'll probably have to hook into it
[20:12:05] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[20:12:37] <esaym153> moldy: Curious, what are you finding to disqualify candidates on backend positions? I've been searching for months, most places disqualify me before we even get to skill sets or money. It is quite strange.
[20:12:43] <esaym153> also annoying
[20:18:02] <moldy> esaym153: for the most part, very limited programming skills
[20:18:27] <esaym153> moldy: and how do you determine that? Looking at the CV or code tests?
[20:18:43] <moldy> esaym153: i present some code snippets and talk to them about them
[20:18:53] <moldy> e.g. the person i interviewed today wasn't able to explain what would happen when calling .append() on None
[20:19:04] <esaym153> ehh
[20:19:21] <esaym153> how would someone applying for a python job not know that?
[20:19:38] <moldy> and by this i don't even mean the specific exception, just that it would throw one
[20:20:26] <moldy> esaym153: not sure. there seems to be a common strategy of grossly overstating your experience in your CV in order to get to the interview. that's my guess at least.
[20:21:57] <esaym153> moldy: Are you looking into any USA candidates? :)
[20:34:10] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:47:10] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 240 seconds)
[20:48:51] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:53:40] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 240 seconds)
[20:58:04] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[21:03:04] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 252 seconds)
[21:04:53] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:07:12] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[21:07:50] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:07:54] *** Quits: schinckel (uid38120@id-38120.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[21:09:14] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[21:09:38] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[21:09:54] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:14:00] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[21:14:00] *** ChanServ sets mode: +v EvilDMP
[21:15:52] *** Joins: brylie (~Thunderbi@88-114-218-113.elisa-laajakaista.fi)
[21:21:49] *** Joins: ruffni (~user@212-51-128-111.fiber7.init7.net)
[21:22:56] *** Joins: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net)
[21:23:03] <ruffni> which function is called when i try to add MyObject through the django admin? is it MyObject.create() or MyObject.__init__() directly?
[21:23:25] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[21:25:36] <ruffni> nvm, found it
[21:31:38] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:31:41] *** Quits: brylie (~Thunderbi@88-114-218-113.elisa-laajakaista.fi) (Quit: brylie)
[21:32:41] *** Parts: ruffni (~user@212-51-128-111.fiber7.init7.net) (ERC (IRC client for Emacs 27.1))
[21:34:58] *** Quits: daylight (~manjaro-u@175.101.143.57) (Ping timeout: 252 seconds)
[21:40:38] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[21:40:38] *** ChanServ sets mode: +v EvilDMP
[21:57:04] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:58:42] *** Joins: ircuser (~ircuser@104-11-73-100.lightspeed.tukrga.sbcglobal.net)
[22:02:59] <ircuser> Hello all, I have a question about the comment in this DB router example from the docs: https://docs.djangoproject.com/en/3.2/topics/db/multi-db/#an-example   It seems like the intention here is that only app labels of `auth` and `contenttypes` should appear in the `auth_db`, but I think the logic of the `allow_migrate` methods will allow all
[22:03:00] <ircuser> models to appear in the `auth_db`
[22:08:53] *** Joins: MrAlexBailey (~MrAlexBai@104-11-73-100.lightspeed.tukrga.sbcglobal.net)
[22:11:05] *** Joins: Guest67 (~Guest67@pool-100-7-38-116.rcmdva.fios.verizon.net)
[22:11:33] *** Quits: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net) (Quit: See you on the flip side.)
[22:13:58] *** Joins: emiel (~emiel@a83-161-198-206.adsl.xs4all.nl)
[22:35:03] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[22:58:27] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[22:58:27] *** ChanServ sets mode: +v EvilDMP
[22:58:55] *** Joins: jfoster (~textual@c-71-236-195-25.hsd1.or.comcast.net)
[22:59:26] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[23:00:14] *** Quits: emiel (~emiel@a83-161-198-206.adsl.xs4all.nl) (Quit: WeeChat 3.2)
[23:01:34] <jfoster> it is a little late but i'm in the same boat as b-rex. I use a lot of django, and i have views of the application that I want as an SPA. I use a lot of stuff, Auth, views, the ORM. I think mixing traditional django views and SPA is a valid use case for the framework.
[23:05:06] *** MrAlexBailey is now known as Guest3392
[23:05:33] *** Joins: MrAlexBailey (~MrAlexBai@104-11-73-100.lightspeed.tukrga.sbcglobal.net)
[23:06:12] <jfoster> I think Django should acknowledge the evolving needs of web and software programmers that are being met by Flask, FastAPI etc. It would be better to openly discus gaps in serving new needs. Saying, "ya it would be cool if django had a killer API builder beyond JSONResponse" or "Ya, it would be awesome if Django was the python backend of choice for people getting started with React" These ideas are met with a defensive tone, or
[23:06:12] <jfoster>  deflection toward the need for stability.
[23:06:19] *** Quits: ircuser (~ircuser@104-11-73-100.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 246 seconds)
[23:06:19] *** Quits: Guest3392 (~MrAlexBai@104-11-73-100.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 246 seconds)
[23:07:03] *** Joins: mikkel (~mike@208.110.120.167)
[23:07:30] <jfoster> It is okay to say "we are under resourced" to provide beta or experimental features like this. That is a step in the right direction. But not acknowledging these as serious evolving feature sets of web frameworks is not good.
[23:08:03] *** Quits: MrAlexBailey (~MrAlexBai@104-11-73-100.lightspeed.tukrga.sbcglobal.net) (Client Quit)
[23:08:30] *** Joins: MrAlexBailey (~MrAlexBai@104-11-73-100.lightspeed.tukrga.sbcglobal.net)
[23:09:14] <jfoster> Because I want django to be in it for the long haul and i want to be able to recommend to new people, regardless of their initial focus to take a serious look at django. New blood is critical to the success of a community
[23:16:01] <Guest67> hi i am trying to setup browser calls with twilio
[23:16:03] <Guest67> https://www.twilio.com/docs/voice/tutorials/browser-calls-python-django#setting-up-a-twilio-device-client
[23:16:17] <Guest67> not sure what to do with this node.js code i think they mislabeled it?
[23:16:22] <Guest67> It is jqeury or ajax?
[23:16:27] <Guest67> not sure where to put this
[23:16:32] <Guest67> https://github.com/TwilioDevEd/browser-calls-django/blob/main/browser_calls/static/js/browser-calls.js
[23:16:47] <Guest67> i have browser-calls.js and jquery in my script tags
[23:17:15] <Guest67> i am getting Uncaught ReferenceError: $ is not defined
[23:17:23] <Guest67> i copied their code directly
[23:18:15] <Guest67> i also downloaded this https://github.com/twilio/twilio-voice.js and it is in my script tags
[23:20:53] <Guest67> for a django tutorial it is not clear what to do for people like me who lack js knowledge
[23:24:42] *** Quits: Qwerky (~Qwerky@37.164.180.130) (Remote host closed the connection)
[23:25:30] *** Joins: Qwerky (~Qwerky@37.164.180.130)
[23:30:27] *** Quits: zBeeble42 (~zBeeble@2001:1928:1::35) (*.net *.split)
[23:30:27] *** Quits: deepy (deepy@user/deepy) (*.net *.split)
[23:30:27] *** Quits: jor (~jor@jor.link) (*.net *.split)
[23:30:27] *** Quits: deniska (~denis@user/deniska) (*.net *.split)
[23:30:27] *** Quits: doismellburning (~toor@django/moderator/doismellburning) (*.net *.split)
[23:30:27] *** Quits: ChOcO-Bn (~choco@user/choco-bn) (*.net *.split)
[23:30:27] *** Quits: klotzhauer (~klotzhaue@gibtesnochklopapier.de) (*.net *.split)
[23:30:37] *** Joins: doismellburning (kg289@django/moderator/doismellburning)
[23:30:44] *** ChanServ sets mode: +v doismellburning
[23:31:04] *** Joins: deniska (~denis@user/deniska)
[23:31:07] *** Joins: jor (~jor@jor.link)
[23:31:26] *** Joins: deepy (deepy@user/deepy)
[23:31:34] *** Joins: zBeeble (~zBeeble@2001:1928:1::35)
[23:31:36] *** Joins: ChOcO-Bn (~choco@user/choco-bn)
[23:32:40] *** Joins: klotzhauer (~klotzhaue@gibtesnochklopapier.de)
[23:33:39] *** Parts: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it) ()
[23:34:28] *** Quits: MrAlexBailey (~MrAlexBai@104-11-73-100.lightspeed.tukrga.sbcglobal.net) (Quit: Client closed)
[23:36:16] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:36:16] *** ChanServ sets mode: +v EvilDMP
[23:41:13] *** Quits: Qwerky (~Qwerky@37.164.180.130) (Remote host closed the connection)
[23:48:18] *** Joins: explore (uid233125@id-233125.stonehaven.irccloud.com)
[23:50:16] *** Quits: hyper_dave (~hyper_dav@static.83.88.217.95.clients.your-server.de) (Ping timeout: 252 seconds)
[23:51:30] *** Joins: hyper_dave (~hyper_dav@197.156.103.172)
