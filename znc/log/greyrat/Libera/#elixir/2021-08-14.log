[00:03:07] *** Joins: Guest1263 (~Guest12@p200300c8cf22760005578b87193c4601.dip0.t-ipconnect.de)
[00:03:25] <Guest1263> what's the correct format to use for datetime + timezone?
[00:07:01] <Guest1263> should I use :utc_datetime and timezone:string, or perhaps :datetimetz?
[00:07:37] <Guest1263> can't remember what the recommended method was
[00:11:07] *** Quits: batok (~batok@187.205.232.87) (Remote host closed the connection)
[00:11:25] *** Quits: floriann (~Thunderbi@2a02:8106:2e:1300:e0c8:2393:3257:8456) (Quit: floriann)
[00:21:29] *** Quits: gitgoood (~gitgood@80-44-12-89.dynamic.dsl.as9105.com) (Ping timeout: 248 seconds)
[00:27:05] *** Joins: ur5us_ (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4)
[00:37:03] *** Quits: harrow (~harrow@static.38.6.217.95.clients.your-server.de) (Quit: Leaving)
[00:37:35] *** Joins: harrow (~harrow@static.38.6.217.95.clients.your-server.de)
[00:45:05] *** Joins: gitgoood (~gitgood@80-44-12-89.dynamic.dsl.as9105.com)
[01:00:16] *** Quits: whk (uid469868@id-469868.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[01:01:30] <Nicd> Guest1263: it depends on your needs. naive_datetime + timezone string is my first thought. datetimetz does not store the timezone
[01:01:51] <Nicd> you first need to think if you need just UTC, or timestamp + UTC offset, or timestamp + timezone name
[01:08:53] *** Quits: krjst (~krjst@2604:a880:800:c1::16b:8001) (Ping timeout: 250 seconds)
[01:09:11] *** Quits: jtdowney (~jtdowney@user/jtdowney) (Ping timeout: 252 seconds)
[01:11:33] *** Quits: natrys (~natrys@user/natrys) (Quit: natrys)
[01:11:44] *** Joins: krjst (~krjst@2604:a880:800:c1::16b:8001)
[01:12:20] *** Quits: ur5us_ (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4) (Ping timeout: 272 seconds)
[01:15:15] <Guest1263> Nicd: actually i'm not sure which combination is appropriate, but i'm trying to model future event dates
[01:16:00] <Guest1263> if i recall correctly from an article i read, i think they suggested datetime + timezone, but i'm not certain
[01:16:43] *** Joins: rdctd (~rdctd@c-73-181-115-43.hsd1.co.comcast.net)
[01:16:47] <Nicd> http://www.creativedeletion.com/2015/03/19/persisting_future_datetimes.html
[01:17:19] *** Joins: ur5us_ (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4)
[01:17:33] *** Joins: jtdowney (~jtdowney@user/jtdowney)
[01:20:30] *** Quits: norrland (~norrland@92-33-164-4.customers.ownit.se) (Ping timeout: 268 seconds)
[01:21:14] *** Joins: norrland (~norrland@92-33-164-4.customers.ownit.se)
[01:22:37] *** Quits: gitgoood (~gitgood@80-44-12-89.dynamic.dsl.as9105.com) (Ping timeout: 245 seconds)
[01:24:01] <Guest1263> Nicd: ah i think that's exactly the article i was referring to, can I use this for the datetimetz? https://hexdocs.pm/timex/using-with-ecto.html#using-datetimewithtimezone
[01:24:57] *** Quits: rhn_mk1 (~rhn@user/rhn) (Ping timeout: 248 seconds)
[01:26:50] <Nicd> I haven't used Timex or that kind of thing
[01:38:33] <Guest1263> alright thanks Nicd, might give that a try then
[01:42:44] *** Quits: ur5us_ (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4) (Ping timeout: 272 seconds)
[02:15:16] *** Joins: gitgoood (~gitgood@80-44-12-89.dynamic.dsl.as9105.com)
[02:39:41] *** Quits: Guest1263 (~Guest12@p200300c8cf22760005578b87193c4601.dip0.t-ipconnect.de) (Quit: Client closed)
[03:10:10] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[03:11:09] *** Joins: flynn (~mcbloch@user/flynn)
[03:26:51] *** Joins: livoreno (~livoreno@user/notzmv)
[03:44:49] *** Quits: rdctd (~rdctd@c-73-181-115-43.hsd1.co.comcast.net) (Ping timeout: 246 seconds)
[03:49:11] *** Joins: tofran3 (~tofran@37.189.158.134)
[03:50:42] *** Joins: ivan- (~ivan@user/ivan)
[03:50:47] *** Quits: tofran (~tofran@37.189.158.134) (Quit: Ping timeout (120 seconds))
[03:50:47] *** Quits: NightMonkey (~NightMonk@user/nightmonkey) (Quit: ZNC - http://znc.in)
[03:50:47] *** Quits: ivan (~ivan@user/ivan) (Quit: lp0 on fire)
[03:50:47] *** tofran3 is now known as tofran
[03:53:10] *** Joins: NightMonkey (~NightMonk@user/nightmonkey)
[03:57:47] *** Joins: GIANTWORLDKEEPER (~pjetcetal@2.95.210.188)
[03:59:38] *** Quits: GIANTWORLDKEEPER (~pjetcetal@2.95.210.188) (Read error: Connection reset by peer)
[04:02:17] *** Quits: hoppity (~user@user/hoppity) (Ping timeout: 248 seconds)
[04:02:49] *** Quits: thojanssens (~thojansse@ptr-178-51-170-194.dyn.mobistar.be) (Ping timeout: 248 seconds)
[04:18:29] *** Joins: Ananta-shesha (~pjetcetal@2.95.210.188)
[04:26:36] *** ivan- is now known as ivan
[05:25:03] *** Quits: gitgoood (~gitgood@80-44-12-89.dynamic.dsl.as9105.com) (Read error: Connection reset by peer)
[05:25:56] *** Quits: mahmutov (~mahmutov@37.155.41.188) (Ping timeout: 268 seconds)
[05:27:02] *** Quits: bit4bit (~bit4bit@190.128.123.78) (Remote host closed the connection)
[05:27:51] *** Joins: james_lavin (~jameslavi@66.189.71.2)
[05:56:54] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[05:57:36] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[05:59:51] *** Joins: notzmv (~zmv@user/notzmv)
[06:49:05] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[06:51:37] *** Joins: hendursaga (~weechat@user/hendursaga)
[06:53:23] *** Quits: hendursaga (~weechat@user/hendursaga) (Client Quit)
[07:02:40] *** Joins: hendursaga (~weechat@user/hendursaga)
[07:05:33] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[07:05:39] *** Joins: [deleted] (~livoreno@user/notzmv)
[08:24:27] *** Quits: james_lavin (~jameslavi@66.189.71.2) (Ping timeout: 258 seconds)
[08:57:51] *** Joins: maruchan (~maruchan@2400:4050:2843:8200:2ef0:5dff:fe5c:ebaa)
[08:58:50] <maruchan> hi
[08:59:00] *** Joins: rx80 (~quassel@user/rx80)
[09:02:29] *** Joins: james_lavin (~jameslavi@66.189.71.2)
[09:26:49] *** Joins: phaleth (~phaleth@user/phaleth)
[09:34:45] *** Quits: slothby (~JoshAshby@irc.isin.space) (Quit: brb ... maybe)
[09:35:01] *** Joins: slothby (~JoshAshby@irc.isin.space)
[09:42:28] *** Quits: james_lavin (~jameslavi@66.189.71.2) (Ping timeout: 268 seconds)
[10:35:57] *** Quits: chenghiz_ (uid349735@id-349735.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[10:39:19] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[10:40:19] *** Joins: flynn (~mcbloch@user/flynn)
[10:49:40] *** Joins: mahmutov (~mahmutov@176.30.96.82)
[11:02:50] *** Joins: rhn_mk1 (~rhn@user/rhn)
[12:06:16] *** Joins: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it)
[12:15:05] *** Quits: sm2n (~sm2n@user/sm2n) (Ping timeout: 248 seconds)
[12:35:36] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:38:52] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:40:03] *** Joins: livoreno (~livoreno@user/notzmv)
[12:42:31] *** Quits: [deleted] (~livoreno@user/notzmv) (Ping timeout: 268 seconds)
[12:54:36] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-6-221.prtc.net)
[13:46:05] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[13:46:23] *** Joins: livoreno (~livoreno@user/notzmv)
[13:47:04] *** Joins: natrys (~natrys@user/natrys)
[13:48:02] *** Quits: mahmutov (~mahmutov@176.30.96.82) (Ping timeout: 245 seconds)
[13:50:39] *** Joins: sm2n (~sm2n@user/sm2n)
[13:51:31] *** Joins: Riceberry (~Riceberry@2a02:587:be1f:666b:b235:9fff:fe0e:7b7b)
[13:53:25] <Riceberry> Hello everyone, as my first journey in elixir i'd like to use it to build a (initially simple) json API as a part of my thesis. Would you recommend going simple with just Plug/Cowboy or learn to use Phoenix?
[14:13:56] <mhmd> Riceberry: I don't have enough experience to recommend anything, but personally, I would probably go with Plug. Plug is nice, very simple and straightforward, minimal but capable. There's also Raxx and Ash, but I don't know how their development is going and if they're a good choice for a json API
[14:20:16] <Riceberry> I see, thanks! Some people recommend to do everything web/api related in phoenix as it has everything i'll ever need but i thought about sticking to the basics.
[14:20:19] <mhmd> IMO Phoenix has so much stuff (by default), but it's flexible so you can make it as minimal as you want
[14:23:38] <mhmd> Riceberry: you might want to consider the future of the project, and see if it will need features that phoenix provides
[14:25:08] <Riceberry> Well, it will serve a list of URLs inside a bloom/cuckoo filter to people that use a browser extension so i don't think it will go that far in terms of complexity
[14:25:29] <Riceberry> I don't think i even need a DB for my usecase
[14:29:21] <mhmd> I'm the noobest noob here, so let's see what others think
[14:30:45] <Riceberry> Same, i'm just starting to use elixir in projects so i'm a total noob
[14:33:48] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[15:36:01] *** Quits: Riceberry (~Riceberry@2a02:587:be1f:666b:b235:9fff:fe0e:7b7b) (Ping timeout: 246 seconds)
[15:50:00] *** Joins: Riceberry (~Riceberry@2a02:587:be1f:6652:b235:9fff:fe0e:7b7b)
[15:54:35] <phaleth> Riceberry: I recommend having a look at Phoenix's lib/app_web/endpoint.ex and lib/app_web/router.ex to piggy back on some best practices on how to use Plug
[15:58:17] <nickjj> with the new LV 0.16 docs https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.Router.html#live_session/3 shows 3 different examples , it's not entirely clear if we should be using the first snippet or the 3rd snippet -- any suggestions on which one to use?
[15:59:17] <nickjj> it's confusing because the first snippet has no explanation but it's listed first as the primary example
[16:02:01] *** Joins: infinityfye (~infinityf@102.47.58.112)
[16:05:54] <phaleth> nickjj: not sure, but today I saw this change to the changelog https://github.com/phoenixframework/phoenix_live_view/pull/1567/files
[16:28:48] *** Quits: maruchan (~maruchan@2400:4050:2843:8200:2ef0:5dff:fe5c:ebaa) (Remote host closed the connection)
[16:51:37] <josevalim> nickjj: it depends on which functionality you need
[16:52:50] <josevalim> It is like asking, should you use has_many :posts or has_many :posts, class_name: “Foo”. You will use an option just if you need to pass the option
[16:53:39] <nickjj> based on the examples in the docs it looks like both might protect the admin route to only be accessible by admins
[16:53:58] *** Joins: thojanssens (~thojansse@ptr-178-51-170-194.dyn.mobistar.be)
[16:54:51] <josevalim> There is no natural protection
[16:55:16] <josevalim> The live_session is to allow redirects between live views through web sockets
[16:55:17] <nickjj> the 3rd snippet looks more like a traditional plug based approach
[16:55:50] <josevalim> The 3rd snippet is building on top of the initial one
[16:56:04] <josevalim> It is showing the plug auth should be per live_session
[16:56:56] <nickjj> btw when i say first snippet, i mean the one with session: %{"admin" => true}
[16:57:25] <josevalim> Right, that’s not performing any authentication though.
[16:57:40] <josevalim> I will see if I can change it to something less misleading
[16:58:12] <josevalim> So if your question is about how to do authentication/authorization, definitely the third one. The first one is not doing any of it
[16:58:29] <nickjj> is it an alternative way of adding admin: true to the session / socket?
[17:01:36] <nickjj> i'm open to waiting too, will all of these new patterns be rolled into the auth gen when phoenix 1.6 drops?
[17:01:54] <nickjj> like, the idea of using on_mount to ensure a current_user, etc.
[17:03:08] <nickjj> because i thought on_mount: MyAppWeb.LiveAdmin would have done the auth to check if it's an admin based on https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html#on_mount/1
[17:03:59] <nickjj> the 3rd paragraph says "on_mount hooks can be useful to perform authentication"
[17:05:52] *** Joins: james_lavin (~jameslavi@66.189.71.2)
[17:22:05] *** Joins: Guest36 (~Guest36@p200300c8cf2276009739e07be2ed963e.dip0.t-ipconnect.de)
[17:27:11] *** Joins: infinity_fye (~infinityf@102.47.58.112)
[17:30:49] *** Quits: infinityfye (~infinityf@102.47.58.112) (Ping timeout: 248 seconds)
[17:37:35] <Guest36> hey guys, I'm trying to get an ecto query which should return some nested objects, but I'm having some trouble
[17:37:51] <Guest36> anyone got some tips where i might be going wrong? (my code -> https://dpaste.com/8MPX79N48)
[17:39:27] <Guest36> basically it should return something like %User{playlists: [%Playlist{videos: [%Video, ...], subscribed: true/false}, ...]}
[17:40:16] <Guest36> the part where i'm stuck is returning the "subscribed" field (which shows if the current user is subscribed to that playlist)
[17:51:39] <Nicd> I'd probably get it in two queries (that users's playlists, current user's subscribed playlist IDs), then do the data manipulation myself
[18:03:12] <Guest36> Nicd: thought doing 2 queries when one was necessary was inefficient, but i guess it's better than nothing
[18:03:46] *** Quits: james_lavin (~jameslavi@66.189.71.2) (Ping timeout: 272 seconds)
[18:05:45] <Nicd> do you know how to accomplish it in raw SQL?
[18:07:50] <Guest36> not off the top of my head, would probably take me a while to figure it out as well
[18:08:57] <Nicd> I find it easier to translate to Ecto when I have an idea of it in SQL
[18:09:17] <Guest36> ok, let me see if i can get the sql version
[18:33:24] *** Quits: infinity_fye (~infinityf@102.47.58.112) (Ping timeout: 268 seconds)
[18:49:49] <josevalim> nickjj: right. all i am saying is that live_session doesn't perform authentication. authorization goes on the live view anyway. i am back home, i will take a stab at the docs and link back here
[18:50:21] *** Joins: mahmutov (~mahmutov@176.30.235.57)
[18:57:58] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-6-221.prtc.net) (Ping timeout: 246 seconds)
[19:03:44] *** Joins: chenghiz_ (uid349735@id-349735.charlton.irccloud.com)
[19:49:15] <Guest36> is it possible to do a nested on in an ecto query?
[19:50:01] <Guest36> e.g. |> select([u, p, v], %{u | %{p | key: v.value} })
[19:51:31] *** Quits: Riceberry (~Riceberry@2a02:587:be1f:6652:b235:9fff:fe0e:7b7b) (Ping timeout: 246 seconds)
[20:02:21] *** Joins: Snyp (~rksht@49.207.209.246)
[20:04:29] <Guest36> or can i pass user.playlists to some other function where i can transform it?
[20:05:53] *** Joins: Daylien (~Daylien@ip4d152b3a.dynamic.kabel-deutschland.de)
[20:07:01] *** Quits: Daylien (~Daylien@ip4d152b3a.dynamic.kabel-deutschland.de) (Client Quit)
[20:08:23] <Guest36> seems like a subquery probably also wont here,  i guess returning these heavily nested objects is probably not ecto was designed for
[20:08:29] <Guest36> *wont work here
[20:12:48] <Guest36> could also create a virtual field in my User schema (something like "subscribed_playlists") and |> select([u], %{u | subscribed_playlists: count(ps.id) > 0}), but that's pretty ugly
[20:13:47] <Guest36> ideally i could keep it scoped to the Playlist model, User { playlists: [Playlist { subscribed: true}, ...], ... }
[20:14:32] <Guest36> but in order to do that, i need some way of updating the nested playlists in my |> select statement
[20:18:50] <Guest36> just going to do it in two queries then
[20:22:25] <Nicd> If you want, post on Elixir Forum and they will tell you how to do it :)
[20:24:29] <Guest36> ah good idea, thanks!
[20:36:48] <Zarathu> how does one use form_tag/3 with heex without it complaining about the closing </form> tag?
[20:37:51] <Zarathu> Guest36: just read your issue! you're on the right track
[20:38:40] <Zarathu> a virtual field is fine there
[20:40:05] <Zarathu> Guest36: you could also do something like this: https://dpaste.com/7KQT48JJR
[20:40:48] <Zarathu> it has a good chance at being substantially faster than doing a left join across 3 tables
[20:41:49] <Zarathu> josevalim: is `form_tag/2` simply not usable with heex?
[20:43:12] <josevalim> Zarathu: there is a new .form component
[20:43:22] <josevalim> that is heex enabled
[20:43:33] <Zarathu> but it's built on form_for
[20:44:03] <josevalim> then don't use form_tag at all, have the form yourself
[20:44:16] <josevalim> all of the tag helpers likely have no benefit under .heex
[20:44:24] <Zarathu> but i want that hidden csrf input :( 
[20:44:31] <josevalim> nickjj: https://github.com/phoenixframework/phoenix_live_view/blob/master/guides/server/security-model.md
[20:44:59] <josevalim> nickjj: i simplified the examples in live_session so they now link to the more comprehensive security doc
[20:45:05] <josevalim> Zarathu: i think there is a helper for that, one sec
[20:46:14] <Zarathu> i just did this: <%= raw("</form>") %>
[20:46:16] <Zarathu> lol
[20:46:19] <josevalim> yes, that works, lol
[20:46:23] <josevalim> i would do this
[20:46:52] <josevalim> <input name="_csrf_token" type="hidden" value={csrf_token_value()}>
[20:47:14] <josevalim> Zarathu: but i can add a helper, unless you want to send a PR instead :)
[20:47:21] <Zarathu> i saw that but wasn't sure if that would work? phoenix passes the url to the function
[20:47:29] <Zarathu> of course. lol
[20:48:09] <Zarathu> ahh! it does work! this is great ty
[20:49:09] <josevalim> Zarathu: i think a small helper would be handy anyway, right?
[20:49:18] <Zarathu> josevalim: PR for Phoenix.HTML.Tag.csrf_token_tag/1?
[20:49:19] <josevalim> csrf_form_input_tag? or csrf_input_tag?
[20:49:27] <Zarathu> yeah i don't know what to call it
[20:49:45] <josevalim> we have csrf_meta_tag and csrf_token_value
[20:49:47] <Zarathu> i like csrf_input_tag
[20:49:51] <josevalim> but this is closer to the csrf_meta_tag
[20:50:13] <josevalim> so i would go with `csrf_input_tag(to, opts \\ [])`
[20:50:47] <Zarathu> what is expected to be passed in to `to`?
[20:50:48] *** Quits: dch (sid1310@couchdb/committer/dch) (Ping timeout: 258 seconds)
[20:50:58] <josevalim> it is a `url` or a string
[20:51:07] <josevalim> it is the basically the action given to `form_for`
[20:51:13] <josevalim> `form_tag`
[20:52:07] <Zarathu> got it!
[20:53:07] <Guest36> Zarathu: thanks for the reply man, just to clarify my original query would then become a subquery, is that right?
[20:53:28] <Zarathu> Guest36: yeah, a subquery in the select
[20:53:55] <Zarathu> then you'd have a virtual field on your playlist schema called `subscribed`
[20:54:18] <nickjj> josevalim, that write up is much more clear with fresh eyes
[20:54:55] <Guest36> Zarathu: would it still work if the function takes a user.username instead of a user.id?
[20:55:15] *** Joins: dch (sid1310@couchdb/committer/dch)
[20:55:47] <nickjj> but if you still need to authenticate/authorize in each live_redirect within the same session, do you save much by having a separate live_session for admins in your last example?
[20:55:48] <Zarathu> does `subscriptions` have a `subscriber_username` or some similar field?
[20:56:13] <Guest36> unfortunately not, just user_id and playlist_id
[20:56:20] <Zarathu> i'm assuming subscriptions is a join table that only has `user_id` and `playlist_id`, in which case it wouldn't, unless you took the username and converted it to an id first
[20:56:40] <Zarathu> (which is fine, in any case)
[20:57:09] <Guest36> yeah that's what i've had to do for now (use two queries), the fact that i pass a username instead of an id makes this a bit tricky i think
[20:57:21] <josevalim> nickjj: that's a good question and the fact you asked it means you got it :) that's exactly right. you don't gain anything for having distinct live_session. you should only use it if: 1. you have two different authentication schemas between LiveViews or 2. they have two different layouts
[20:57:57] <Guest36> I'm sure there's a way to do it, but my ecto-fu is not developed enough to figure it out :)
[20:58:12] <josevalim> for example, if your admin panel uses http auth, then you need to force it to go through a regular web request when swapping from the user dashboard to the admin dashboard
[20:58:19] <josevalim> or if they have different layouts
[20:58:33] <Guest36> Zarathu: whether it's efficient or not is of course another question
[20:58:47] <Guest36> it may actually be more efficient to do the 2-query approach
[20:58:58] <Guest36> (depending on the number of rows)
[20:59:01] <nickjj> josevalim, with that in place what do you think about adjusting the last code example?
[20:59:20] <nickjj> because the last code example uses the same authentication scheme and the same layout right?
[20:59:54] <josevalim> nickjj: the last exampe in the securitu model page? one uses AdminLiveAuth, the other uses UserLiveAuth
[20:59:57] <nickjj> the only difference is some plug or plug-like function that does extra authorization to make sure it's an admin, but this is happening on every live_redirect anyways?
[21:00:44] <josevalim> so they could be using different things (like different login pages)
[21:01:05] <josevalim> like a professor and student would have different login flows in a website
[21:02:11] <josevalim> nickjj: what do you think about this:
[21:02:12] <nickjj> but for 100% clarity, that on_mount call is happening on every live_redirect inside of that live_session? let's say going from /admin/foo to /admin/bar?
[21:02:17] <josevalim> https://www.irccloud.com/pastebin/PIK3ZuKo/
[21:02:27] <josevalim> nickjj: correct
[21:02:30] <josevalim> i will clarify that too
[21:02:41] <nickjj> and whatever [:authenticate_admin] does is also firing on those transitions?
[21:03:09] *** Joins: infinity_fye (~infinityf@102.47.58.112)
[21:03:40] <josevalim> nickjj: no, that's the important bit, the plug auth has no relation to the live auth
[21:04:25] <Zarathu> Guest36: passing a username shouldn't matter
[21:04:37] <nickjj> what might really help in this case would be to have an example of what UserLiveAuth and AdminLiveAuth are , this way there's an end to end example in the docs for folks to reference?
[21:04:43] <Zarathu> just: user_id = from(u in User, where: u.username == ^username, select: u.id) |> Repo.one!()
[21:04:54] <Zarathu> then proceed normally
[21:05:00] <nickjj> it wouldn't need to be everything under the sun but something, because at the moment i wouldn't even know what 1 line of code would go in either of those views
[21:05:37] <Guest36> Zarathu: i mean it makes it harder to make the query in a single jump (if i understand it correctly)
[21:05:58] <nickjj> for the :authenticate_admin, i'm guessing it's similar to a non-LV plug where it might look for conn.assigns[:current_user].admin? and return the conn if yes else redirect and halt
[21:06:18] <Zarathu> Guest36: why does that matter? 
[21:06:37] <Zarathu> getting the user id from the username shouldn't even add 1ms to the operation
[21:06:50] <josevalim> nickjj: exactly. or do http auth
[21:07:06] <josevalim> nickjj: there is an example of UserLiveAuth at the top of the page
[21:07:12] <Guest36> Zarathu: oh, i thought it would approximately double the time it takes to get the final result
[21:07:36] <nickjj> oh nice, i missed that
[21:08:07] <Zarathu> Guest36: how many users in the table?
[21:09:21] <Guest36> Zarathu: right now effectively zero, just test data
[21:09:42] <Guest36> maybe i'm trying to prematurely optimize too much
[21:11:02] <nickjj> i think i might understand now, please correct me if i'm wrong but -- when you have pipe_through [:authenticate_admin] in there, that's really calling the actual plug for non-LV connections, word for word the same code you could have right now in a non-LV plug
[21:11:10] *** Joins: gitgood (~gitgood@80-44-12-89.dynamic.dsl.as9105.com)
[21:11:21] <josevalim> nickjj: perfect
[21:11:23] <nickjj> and the on_mount LiveView you pass in happens on every live_redirect inside of that live_session?
[21:13:35] <nickjj> and using the example from the docs, the example UserLiveAuth you have is a reasonable baseline to use as an example, with an important distinction in that you're not checking if they're an admin in that LiveAuth since that's been determined from the plug
[21:14:16] <nickjj> but it sounds like you would be doing a DB lookup on the user on every LiveView transition to get the current_user itself
[21:14:59] <josevalim> nickjj: there is a way to share them by using `assign_new`
[21:15:12] <josevalim> i will add a note. but even if it did, it would be the same as in regular web applications
[21:15:50] <Zarathu> Guest36: you are definitely prematurely optimizing too much :p
[21:15:58] <nickjj> right, that's what happens now in every non-LV app, i remember not having to do that was kind of a nice optimization for LV
[21:16:18] <nickjj> but it's good to see there's options, even with this new LV set up
[21:17:25] <nickjj> i really like this new on_mount feature, because it kind of solves the problem of having to invent a whole new plug system for LVs
[21:20:41] <Guest36> Zarathu: haha always seem to fall in to that trap, thanks for the help mate
[21:21:13] *** Quits: thojanssens (~thojansse@ptr-178-51-170-194.dyn.mobistar.be) (Ping timeout: 248 seconds)
[21:22:38] <Zarathu> josevalim: do you want form_tag do use this new helper function?
[21:22:48] <Zarathu> seems obvious to me
[21:25:34] <josevalim> Zarathu: sounds good to me
[21:30:47] *** Quits: infinity_fye (~infinityf@102.47.58.112) (Quit: Leaving)
[21:34:06] <josevalim> nickjj: no, before it was the same (regarding current user)
[21:34:21] <josevalim> every live redirect needs to fetch its own data, because it is a separate process
[21:35:17] <josevalim> live_session doesn't change much in this aspect. you were requried to do those mount checks and event checks on previous versions. all live_session does is to give a more descriptive boundary
[21:36:30] *** Quits: Snyp (~rksht@49.207.209.246) (Quit: WeeChat 3.2)
[21:41:30] *** Quits: wonko (~wjc@62.115.229.50) (Ping timeout: 268 seconds)
[21:41:56] *** Joins: wonko (~wjc@62.115.229.50)
[21:48:18] *** Quits: wonko (~wjc@62.115.229.50) (Ping timeout: 258 seconds)
[22:00:31] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[22:07:09] <josevalim> Zarathu: did you give up on reusing it upstream :D
[22:07:10] <josevalim> ?
[22:11:08] *** Quits: hexology (~hexology@user/hexology) (Quit: hex on you ...)
[22:14:57] *** Joins: Celeo (~Celeo@user/celeo)
[22:15:35] *** Joins: wonko (~wjc@62.115.229.50)
[22:20:57] *** Quits: wonko (~wjc@62.115.229.50) (Ping timeout: 248 seconds)
[22:41:09] *** Quits: mhmd (~mhmd@37.48.90.208) (Ping timeout: 252 seconds)
[23:21:28] *** Quits: phaleth (~phaleth@user/phaleth) (Quit: phaleth)
[23:23:54] *** Quits: ley (sid320610@id-320610.stonehaven.irccloud.com) (Ping timeout: 240 seconds)
[23:24:08] *** Quits: ehamberg (sid18208@id-18208.stonehaven.irccloud.com) (Ping timeout: 258 seconds)
[23:24:17] *** Quits: josevalim (sid250896@id-250896.stonehaven.irccloud.com) (Ping timeout: 245 seconds)
[23:24:17] *** Quits: keyvan (sid7672@id-7672.brockwell.irccloud.com) (Ping timeout: 245 seconds)
[23:24:42] *** Quits: jaydoane (sid66455@id-66455.stonehaven.irccloud.com) (Ping timeout: 240 seconds)
[23:24:56] *** Quits: nox (sid3872@id-3872.highgate.irccloud.com) (Read error: Connection reset by peer)
[23:25:17] *** Quits: jakesyl (sid56879@id-56879.stonehaven.irccloud.com) (Ping timeout: 258 seconds)
[23:25:26] *** Quits: josephl (sid146137@id-146137.tooting.irccloud.com) (Ping timeout: 256 seconds)
[23:25:32] *** Quits: OliverMT (sid16701@id-16701.stonehaven.irccloud.com) (Ping timeout: 245 seconds)
[23:25:32] *** Quits: gmc (sid58314@id-58314.charlton.irccloud.com) (Ping timeout: 245 seconds)
[23:25:35] *** Quits: aaronrenner (sid475276@id-475276.charlton.irccloud.com) (Ping timeout: 252 seconds)
[23:25:54] *** Quits: ericentin_ (sid134418@id-134418.stonehaven.irccloud.com) (Ping timeout: 240 seconds)
[23:26:03] *** Quits: Net (sid313265@id-313265.tooting.irccloud.com) (Ping timeout: 258 seconds)
[23:26:08] *** Quits: johnhamelink (sid396829@id-396829.brockwell.irccloud.com) (Ping timeout: 252 seconds)
[23:26:41] *** Quits: asonge (sid129041@id-129041.highgate.irccloud.com) (Ping timeout: 252 seconds)
[23:26:42] *** Quits: bw (sid2730@user/betawaffle) (Ping timeout: 240 seconds)
[23:26:57] *** Joins: nox (sid3872@highgate.irccloud.com)
[23:27:30] *** Quits: bcardarella (sid1539@id-1539.highgate.irccloud.com) (Ping timeout: 240 seconds)
[23:27:47] *** Quits: stiang (sid245441@id-245441.brockwell.irccloud.com) (Ping timeout: 268 seconds)
[23:28:13] *** Joins: josephl (sid146137@tooting.irccloud.com)
[23:28:14] *** Joins: aaronrenner (sid475276@charlton.irccloud.com)
[23:28:21] *** Quits: benwilson512 (sid71699@id-71699.charlton.irccloud.com) (Ping timeout: 276 seconds)
[23:28:44] *** Quits: joenoon (sid411732@id-411732.brockwell.irccloud.com) (Ping timeout: 258 seconds)
[23:28:52] *** Quits: triskite3 (uid414920@id-414920.highgate.irccloud.com) (Ping timeout: 245 seconds)
[23:28:53] *** Quits: dzfranklin (sid448589@id-448589.charlton.irccloud.com) (Ping timeout: 252 seconds)
[23:29:00] *** Quits: Nicd (sid11783@user/nicd) (Ping timeout: 276 seconds)
[23:29:00] *** Quits: hwrd (sid64402@id-64402.tooting.irccloud.com) (Ping timeout: 276 seconds)
[23:29:00] *** Quits: mrkurt (uid368284@id-368284.brockwell.irccloud.com) (Ping timeout: 276 seconds)
[23:29:06] *** Quits: genericjam_ (sid474908@id-474908.charlton.irccloud.com) (Ping timeout: 240 seconds)
[23:29:06] *** Quits: v0idpwn (sid483136@id-483136.brockwell.irccloud.com) (Ping timeout: 240 seconds)
[23:29:39] *** Quits: ryanwinchester (sid147626@id-147626.highgate.irccloud.com) (Ping timeout: 276 seconds)
[23:29:39] *** Joins: bcardarella (sid1539@id-1539.highgate.irccloud.com)
[23:29:43] *** Joins: Net (sid313265@tooting.irccloud.com)
[23:29:46] *** Joins: bw (sid2730@user/betawaffle)
[23:29:46] *** Joins: johnhamelink (sid396829@brockwell.irccloud.com)
[23:29:48] *** Joins: triskite3 (uid414920@id-414920.highgate.irccloud.com)
[23:29:54] *** Quits: JSharp (sid4580@id-4580.tooting.irccloud.com) (Ping timeout: 240 seconds)
[23:29:56] *** Joins: mrkurt (uid368284@id-368284.brockwell.irccloud.com)
[23:29:58] *** Joins: Nicd (sid11783@user/nicd)
[23:30:02] *** Joins: keyvan (sid7672@brockwell.irccloud.com)
[23:30:10] *** Joins: stiang (sid245441@id-245441.brockwell.irccloud.com)
[23:30:12] *** Joins: gmc (sid58314@id-58314.charlton.irccloud.com)
[23:30:18] *** Quits: keathley (sid155969@id-155969.highgate.irccloud.com) (Ping timeout: 276 seconds)
[23:30:21] *** Joins: asonge (sid129041@id-129041.highgate.irccloud.com)
[23:30:24] *** Joins: benwilson512 (sid71699@charlton.irccloud.com)
[23:30:33] *** Joins: dzfranklin (sid448589@id-448589.charlton.irccloud.com)
[23:30:34] *** Joins: hwrd (sid64402@id-64402.tooting.irccloud.com)
[23:30:55] *** Joins: ryanwinchester (sid147626@id-147626.highgate.irccloud.com)
[23:31:08] *** Joins: joenoon (sid411732@id-411732.brockwell.irccloud.com)
[23:31:15] *** Joins: OliverMT (sid16701@stonehaven.irccloud.com)
[23:31:34] *** Joins: keathley (sid155969@id-155969.highgate.irccloud.com)
[23:31:37] *** Joins: v0idpwn (sid483136@id-483136.brockwell.irccloud.com)
[23:31:45] *** Joins: JSharp (sid4580@id-4580.tooting.irccloud.com)
[23:31:47] *** Joins: genericjam_ (sid474908@id-474908.charlton.irccloud.com)
[23:32:47] *** Quits: hendursa1 (~weechat@user/hendursaga) (Remote host closed the connection)
[23:33:13] *** Joins: hendursa1 (~weechat@user/hendursaga)
[23:35:18] *** Joins: josevalim (sid250896@id-250896.stonehaven.irccloud.com)
[23:36:26] *** Joins: jakesyl (sid56879@id-56879.stonehaven.irccloud.com)
[23:41:29] *** Joins: ehamberg (sid18208@stonehaven.irccloud.com)
[23:41:34] *** Joins: ley (sid320610@stonehaven.irccloud.com)
[23:41:36] *** Joins: jaydoane (sid66455@stonehaven.irccloud.com)
[23:47:10] *** Joins: ericentin_ (sid134418@id-134418.stonehaven.irccloud.com)
