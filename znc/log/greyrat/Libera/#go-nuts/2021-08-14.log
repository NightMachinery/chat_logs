[00:00:03] <mion> most logging these days is sitting safely inside a logging machine
[00:00:12] *** Joins: seebs (~seebs@24.196.59.174)
[00:00:15] <Bugz000> mion about 60% of it is
[00:00:20] <quippy> personally I like logrus for logging ;D
[00:00:39] <Bugz000> the cabs are bulletproof incase the harvester chain comes off
[00:00:49] <mion> the dangerous bit is driving the logging trucks :p
[00:00:59] *** Joins: oxum (~oxum@122.172.205.112)
[00:01:00] <quippy> seems like the cab needs to be harvester chain proof
[00:01:13] <Bugz000> had some idiot thinking we were destroying the nature come up and shoot an arrow into the cab once... a literal bow and arrow- THUNK, i look down there's just this arrow on the floor, eh whatever continue working lol
[00:01:45] <Bugz000> you'd need a deer rifle to get through the marguard :)
[00:01:56] <quippy> hahaha
[00:02:12] <mion> sadly we mostly just flat cut everything in my country instead of picking
[00:02:22] <Bugz000> mion the dangerous part is using the saws :)
[00:02:24] *** Quits: Torr_ (~Torr@user/torr) (Quit: leaving)
[00:02:36] <Bugz000> or rather, using the winches
[00:03:07] *** Joins: Guest1263 (~Guest12@p200300c8cf22760005578b87193c4601.dip0.t-ipconnect.de)
[00:03:10] <quippy> where I'm from there's a small amount of logging, but there's enough (and so little other industry) that you have lots of the children of loggers and I remember distinctly taking an environmental science class where the teacher had an attitude like your bow-and-arrow shooter, and suffice to say, she wasn't popular with the children of people in that industry who were in our class
[00:03:14] <mion> very little chainsaw use here
[00:03:46] * mion did run around with a chainsaw when he was a kid though at his grandparents farm
[00:04:05] <foobaz> well planned logging can dramatically reduce forest fires
[00:04:19] <foobaz> leaving it to nature sounds great until your town burns down
[00:04:23] <Bugz000> i've been exhausted one day and was hauling some trees with a skyline winch - it can pull over 18 ton, i hooked up 4 trees, pull pull pull, wasn't paying attention - i look up and realise there was over 250ft of deflection on the quarter kilometer skyline run - at that moment the 4 trees let go... ever seen 20 ton of timber fly over 200ft in the air like a yoyo?
[00:04:33] <Bugz000> problem is - it sprung the other way.... and then launched them back at me
[00:04:41] <mion> also driving an old aebi tp without power assist on anything, could basically forget about trying to stop it going downhill using the brakes :p
[00:04:46] <quippy> holeeeee fuck Bugz000
[00:05:17] <quippy> "ever seen 20 ton of timber fly over 200ft in the air like a yoyo?" <- no I would like to avoid this thanks
[00:05:34] <mion> basically no economy in logging anything requring a skyline here
[00:05:37] <quippy> oh god I can't resist the programming puns
[00:05:45] <quippy> throwing that much lumber, that's real log shipping amirite
[00:05:46] <Bugz000> i run backwards, the only time you use skyline is on steep ground - i trip, fall back, drop around 10ft backwards right as the trees all 4, THUMP TUMP TUMP TUMP ontop of me... it was only by chance i landed in a ditch... i was covered in dirt but completely unhamed
[00:05:49] <Bugz000> unharmed*
[00:06:07] *** Quits: oxum (~oxum@122.172.205.112) (Ping timeout: 258 seconds)
[00:06:09] *** Joins: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net)
[00:06:14] <quippy> you're lucky to still be around
[00:06:16] <Bugz000> 6ft in any direction to where i landed i would be dead
[00:06:19] <mion> we planted a lot of steep hills from the 50's onwards, but almost none of it is going to get logged since it isn't profitable
[00:06:28] <quippy> did you say your thanks to Lady Luck that day?
[00:06:39] <Bugz000> you ignore luck in work like that
[00:06:43] <Bugz000> just wish for the best rofl
[00:06:47] <quippy> phew
[00:06:59] <quippy> programming sounds like a good act 2 for ya lol
[00:07:13] <Bugz000> mion there is technology like skyline to allow steep logging now :)
[00:07:28] <mion> Bugz000: still not profitable
[00:07:43] <Bugz000> you underestimate the price of timber
[00:07:45] <Bugz000> https://bugz000.co.uk/i/Zyu8W9ox.jpg
[00:07:48] <Bugz000> this is a skyline winch
[00:08:02] *** Joins: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net)
[00:08:11] <Bugz000> https://bugz000.co.uk/i/TDMW0Ey6.jpg
[00:08:14] <Bugz000> the winch heads
[00:08:26] *** Joins: goldfish (~goldfish@user/goldfish)
[00:08:30] <mion> I know what they are, have used one even though not for logging
[00:08:47] *** Quits: goldfish (~goldfish@user/goldfish) (Remote host closed the connection)
[00:09:08] <mion> handy for transporting stuff up mountains too when the weather is too shit for airlifts
[00:09:28] <Bugz000> those piles of branches you see are burned... by the end of the job they can be hundreds of feet tall, drive over them crush them down and lay more ontop... always on the edge of a bank so when they burn they create local weather systems, giant firenados spiraling into the sky its so cool - they take over 3 months to burn
[00:10:58] <mion> usually gets chipped or used for ground cover to reduce the damage here
[00:11:18] <Bugz000> i'd hate chipping that lot
[00:11:22] <Bugz000> i'm glad we just burned it haha
[00:11:55] <Bugz000> it was funny on some sites as we leave, there'd be a line of local farmers waiting at the gate
[00:12:04] <Bugz000> they'd run in and cut any good wood off the brash pile for that day haha
[00:12:08] <mion> optionally just spread out and left
[00:12:56] <Bugz000> yes there is a few sites we just got the timberjack and pushed the whole thing off the edge
[00:13:05] <Bugz000> let it cascade down the hill and disperse
[00:13:10] *** Quits: Steeve (~steve@user/steeve) (Quit: end)
[00:13:22] <Bugz000> usually because of powerlines overhead
[00:14:20] <Bugz000> https://bugz000.co.uk/i/TNmlEGLW.png
[00:14:31] <Bugz000> it is hard to see but the long arrow is brash and the small is the logs
[00:14:36] <Bugz000> those trees are over 100ft tall for scale
[00:14:50] *** Quits: hikhvar796073809 (~thelounge@dynamic-046-114-004-227.46.114.pool.telefonica.de) (Ping timeout: 256 seconds)
[00:16:15] <Bugz000> https://bugz000.co.uk/i/ifv3KS1O.jpg got to see some beautiful sights though, i took that picture!
[00:16:18] <Bugz000> it looks like a postcard
[00:16:23] *** Joins: burningserenity (~burningse@2603:9001:f01:ad99::1008)
[00:16:56] <foobaz> what kind of trees do you cut there?
[00:17:06] <foobaz> here in cascadia it's all douglas fir and western hemlock
[00:17:39] <foobaz> i would imagine white pine maybe?
[00:17:40] *** Quits: burningserenity_ (~burningse@146.70.38.28) (Ping timeout: 256 seconds)
[00:18:42] <Bugz000> douglas fir, hemlock, grand fir, larch, oak, pine
[00:18:53] <Bugz000> and ofcourse the mixer trees usually sent to chip, birch and alder et
[00:18:54] <Bugz000> etc
[00:19:16] <foobaz> are you in the PNW too? those trees sound awfully familiar
[00:19:16] <Bugz000> i did not enjoy grand fir
[00:19:22] <Bugz000> i am in the UK
[00:19:33] <foobaz> huh i didn't know you had doug fir or hemlock there
[00:20:08] <foobaz> i like hemlock, someday i want to build a house out of it
[00:20:27] <Bugz000> i am not a fan, much prefer ash
[00:20:30] <Bugz000> https://bugz000.co.uk/i/T9VYZaxo.png
[00:21:02] *** Quits: burningserenity (~burningse@2603:9001:f01:ad99::1008) (Ping timeout: 272 seconds)
[00:21:09] <foobaz> ash grows like a weed here i am always pulling young ones out of my lawn
[00:21:14] <Bugz000> grand fir has these pustules on it, those rounded bumps, filled with honey-like sap, sticky as hell... going through the harvester they gum everything up and the harvester head looked like it was drooling... and ofcourse the saw work was hell, barely touch these trees and get sap sprayed EVERYWHERE
[00:21:26] <foobaz> sounds nasty
[00:21:46] <Bugz000> ash is fantastic, grows fast, grows anywhere, doesn't care for damage, and is dry when green
[00:21:55] <Bugz000> cut it, straight on the fire, no drying needed
[00:22:06] <Bugz000> can also cut and build right away :)
[00:22:21] *** Joins: burningserenity (~burningse@102.129.153.14)
[00:23:33] <mion> https://www.youtube.com/watch?v=qDyYQdMZ3UY pretty typical on the west coast of norway where I am
[00:24:10] *** Quits: bkircher (~bkircher@2001:a61:24b0:5701:f9c:7cbd:1cf5:28fe) (Quit: WeeChat 3.2)
[00:29:09] *** Quits: lalitmee (~lalitmee@180.94.33.244) (Quit: Konversation terminated!)
[00:29:26] *** Joins: lalitmee (~lalitmee@180.94.33.244)
[00:30:17] *** Joins: hikhvar796073809 (~thelounge@dynamic-046-114-004-227.46.114.pool.telefonica.de)
[00:33:12] *** Quits: zutt (~zutt@user/zutt) (Quit: nein)
[00:36:12] *** Joins: zutt (~zutt@user/zutt)
[00:37:15] *** Joins: jjonah (~jjonah@p200300d5d71aad00dea632fffeb3342f.dip0.t-ipconnect.de)
[00:38:11] <Bugz000> mion sorrry i had to run to the store
[00:38:30] <Bugz000> LOL  wow that looks identical to some north wales jobs we did
[00:38:37] <Bugz000> hahaha
[00:39:06] <Bugz000> shttps://bugz000.co.uk/i/YTPyI1ij.png
[00:39:08] <Bugz000> https://bugz000.co.uk/i/YTPyI1ij.png
[00:39:16] <Bugz000> diggin a rut fill it with brash that's the way!
[00:39:18] <Bugz000> hahaha
[00:41:24] *** Joins: Torr (~Torr@user/torr)
[00:42:44] <Bugz000> https://bugz000.co.uk/i/ukdJHtEB.png mion
[00:42:50] <Bugz000> we have lost monuments in the woods!
[00:43:21] *** Quits: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net) (Ping timeout: 248 seconds)
[00:43:25] <Bugz000> https://bugz000.co.uk/i/FxWe9XtI.png what stairs?
[00:43:56] <Bugz000> https://bugz000.co.uk/i/guj7wkqP.jpg it did not stop us :p
[00:44:49] <Bugz000> foobaz quippy
[00:44:56] <Bugz000> you may find that cool
[00:46:50] <mion> eu is currently not that happy with us genociding everything instead of doing more selective logging
[00:46:58] <Bugz000> mion you are norway? sweden is the global center for logging
[00:47:01] <Bugz000> you must see some incredible machines
[00:47:28] <foobaz> does norway have any reason to care what the EU thinks?
[00:47:35] <Bugz000> do not brexit
[00:47:41] <Bugz000> we did and this country is going to ruin
[00:48:29] <foobaz> they're not even in the EU
[00:48:39] <Bugz000> they are in brussels, belgium
[00:48:44] <Bugz000> ofcourse they are in eu
[00:49:09] <foobaz> oh yea of course belgium is
[00:49:22] <mion> Bugz000: https://www.youtube.com/watch?v=wSUXIga7rfk and change to autotranslated captions :p
[00:49:34] <foobaz> but i doubt the capital of EU would leave it lol
[00:49:59] <mion> norway is not actually in the eu though
[00:50:09] <Bugz000> ramund var sig en bedre mand, om han havde bedre klaeder
[00:50:17] *** Quits: burningserenity (~burningse@102.129.153.14) (Ping timeout: 268 seconds)
[00:50:56] <quippy> wow that monument is cool Bugz000
[00:50:59] <mion> we just pretend we are, but one party wants to take us out of the EEA and are under the  delusion that we will somehow manage to negotiate a better deal
[00:51:13] <Bugz000> it is the same dellusion the uk had
[00:51:23] <quippy> the only things we have like those monuments in North America are regoliths from lost cultures
[00:51:38] <Bugz000> please fight it, not enough fighting in the uk for it and now our economy is collapsing
[00:52:11] <Bugz000> america is a new country, only miles from my house is an ancient artefact older than stonehenge
[00:52:29] <Bugz000> infact most random historical things in the uk are older than stonehenge, that is why stonehenge is so impressive... it is comparatively new :p
[00:52:50] <quippy> the US is a new country but the continent had people here before the US
[00:52:56] <mion> we did something similar once back in the days and it didn't end that well for us (with the hanseatic league)
[00:53:09] <quippy> they just didn't leave buildings behind, just mounds and arrowheads
[00:53:09] <Bugz000>  yes but they rarely built from stone... the native americans life ethic was to leave the land untouched
[00:53:12] <foobaz> the druidic celts of wales are also a lost culture, the romans destroyed them in the 1st century
[00:53:14] <Bugz000> so much of their history is not marked on the land
[00:53:18] <quippy> well that's the myth anyway
[00:53:27] <Bugz000> https://bugz000.co.uk/i/e1E9oytS.jpg this is 4000 years old!
[00:53:44] <quippy> the native american cultures were as diverse as the cultures on any other continent, I don't think it's really safe or fair to characterize them as sharing many common beliefs across all of the cultures
[00:53:51] <Bugz000> i live on the welsh border :)
[00:53:58] <quippy> and I don't know why the north american cultures didn't leave behind any buildings; the south americans did
[00:54:13] <Bugz000> it is their life ethic
[00:54:20] <foobaz> what about the pueblos of the southwest
[00:54:21] <Bugz000> take only what you need from the land, leave only footprints
[00:54:29] <quippy> oh yeah the Pueblos did leave behind buildings
[00:54:45] <pjs> quippy: there are in Mexico and the southwest has many. Just not as big but some of the places in New Mexico are breath taking
[00:54:54] <foobaz> pretty sure there are still mohawk/iriqois/algonquin long houses too
[00:54:56] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[00:54:56] <quippy> the Iroquois didn't have that ethic you're describing Bugz000 , that ethic is from certain plains tribes and it's re-ascribed to the other tribes
[00:55:12] <quippy> the longhouses were wood so they broke down, and they're also much more recent
[00:55:13] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[00:55:22] <quippy> the Cherokee and Iroquois were still living in longhouses when the settlers arrived
[00:55:33] <Bugz000> meanwhile UK folk are dragging rocks from 180 miles away
[00:55:39] <quippy> lololol
[00:55:48] <Bugz000> to build stone lincoln logs to confuse the future generatiosn
[00:55:58] <foobaz> and to this day america prefers stick-built wood houses, europe seems to prefer brick
[00:55:59] <Bugz000> ahhaha
[00:56:16] <quippy> nobody knows anything about the Mound Builders but it's also possible that the tribes in North America that were there when the Europeans arrived were actually the remnants of a previous civilization
[00:56:23] <quippy> but pointing out the Pueblos is a great point
[00:56:31] <Bugz000> those are the giant pyramids in america that dwarf the ones in egypt right?
[00:56:34] <quippy> and the southwest in general, I am not from that area so I tend to forget about them
[00:56:42] <Bugz000> or aren't those in mexico
[00:56:53] <quippy> you're thinking of the Mayan/Aztec pyramids in Mexico yeah
[00:56:55] *** Joins: fikran (~fikran@user/fikran)
[00:57:03] <Bugz000> the ancient mexicans had some crazy ancestors from south america come up and build some incredible stuff
[00:57:07] <quippy> still North America technically
[00:57:15] <foobaz> did the aztec build pyramids? i thought it was only the mayans
[00:57:19] <quippy> might've been
[00:57:21] <Bugz000> quippy i dont think they are aztec what i am thinking
[00:57:28] <Bugz000> the aztec built the ziggorat
[00:57:34] <foobaz> oh nevermind there are aztec pyramids
[00:57:43] <quippy> the Mound Builders didn't build pyramids, the mounds are really just hills
[00:57:50] <quippy> but they're man-made hills, and large ones, lol
[00:57:54] <quippy> and nobody knows why they were made
[00:58:26] <quippy> I love stuff like this though https://www.atlasobscura.com/places/judaculla-rock
[00:58:38] <Bugz000> https://bugz000.co.uk/i/YRtQhisN.png ah it is guatemala
[00:58:55] <quippy> I've seen Judaculla Rock in person and it gives me chills for some reason
[00:58:58] <foobaz> there are some in mexico too, in the yucatan, which is right next to guatemala
[00:59:00] <quippy> 4000 years old
[00:59:01] <Bugz000> wow that is impressive
[01:00:21] <Bugz000> i have a map
[01:00:22] *** Quits: jinie (~jimmy@188.114.173.37) (Remote host closed the connection)
[01:00:51] <Bugz000> https://bugz000.co.uk/i/GzhVtZBU.png
[01:00:58] <Bugz000> i have been mining information for a long time!
[01:01:10] <Bugz000> this is every ancient thing in uk/europe that i could find
[01:01:18] <Bugz000> ongoing proces
[01:01:35] <Bugz000> https://bugz000.co.uk/i/ySuz4irI.jpg
[01:01:37] <Bugz000> it is quite impressive
[01:01:52] <foobaz> since the mounds are all by the mississippi river, i wonder if they built them to save their buildings from river flooding or course changes
[01:02:01] *** Joins: jinie (~jimmy@188.114.173.37)
[01:02:18] <quippy> interesting hypothesis
[01:02:48] <Bugz000> it is likely because the rock could be brought from various quarries upstream and floated down
[01:02:52] <Bugz000> reducing travel times/effort
[01:03:58] <Bugz000> people often say "how do you move such stones with wood" - it does not need to FLOAT - but rather simply be nearer neutral buoyancy, even if completely submerged, if most the weight can be lifted and the pressure of the river pushing, one man or ox can haul it down :)
[01:05:34] <Bugz000> near me also is the DINORWIC quarries, they were defunct in the 80s iirc but started long long long ago - the first "cut" into the hill would be thousands of years ago
[01:06:04] <Bugz000> some folk say the quarry inspired tolkein of the dwarves of erebor :D
[01:06:40] <foobaz> there's an ancient structure in bolivia called tiwanaku which was built by carrying stone in boats
[01:08:32] *** Quits: jiqiren (~jiqiren@oh-hi.org) (Ping timeout: 252 seconds)
[01:08:36] *** Quits: amigan (dramoray@dtvax.dynatron.me) (Ping timeout: 272 seconds)
[01:08:47] *** Quits: whaley (~whaley@159.65.32.34) (Ping timeout: 268 seconds)
[01:08:53] *** Quits: krjst (~krjst@2604:a880:800:c1::16b:8001) (Ping timeout: 250 seconds)
[01:09:06] *** Quits: Teckla (~Teckla@user/teckla) (Ping timeout: 240 seconds)
[01:09:10] *** Quits: sebito91 (~sborza@45.55.74.66) (Ping timeout: 272 seconds)
[01:09:18] *** Quits: losinggeneration (~quassel@64.225.54.254) (Ping timeout: 250 seconds)
[01:09:28] <Bugz000> https://www.youtube.com/watch?v=lazHKzajT4c this pillar is 1300s iirc
[01:09:37] *** Quits: thiccdaddy (~OwO@thiccdaddy.sexy) (Ping timeout: 268 seconds)
[01:09:45] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[01:09:53] *** Joins: jiqiren (~jiqiren@oh-hi.org)
[01:10:00] *** Quits: LambdaComplex (~adam@wireguard/tunneler/lambdacomplex) (Ping timeout: 276 seconds)
[01:10:06] <Bugz000> i must be the only person to have a view from the top of it ! :D
[01:10:15] <Bugz000> since it was built
[01:10:50] <Bugz000> it is at high risk of collpasing... if you look closely as i fly around you can see it is leaning and has a bulge on the side
[01:11:02] <Bugz000> various cracks are visible too if you look very close
[01:11:10] *** Joins: krjst (~krjst@2604:a880:800:c1::16b:8001)
[01:14:09] *** Joins: joshcom (~joshcom@2600:8800:a706:2b00:57fa:c99f:96ed:ee89)
[01:14:33] <Bugz000> https://youtu.be/kwHq9qcPehY some may like my more recent video <3
[01:14:42] <Bugz000> foobaz quippy :)
[01:14:49] *** Joins: sebito91 (~sborza@45.55.74.66)
[01:14:50] <Bugz000> mion
[01:16:02] <quippy> phew that one makes me nauseous haha
[01:16:10] <Tv_> 1300s just ain't very old.. i used to live near a castle and a church that started building 1280 and ~1300, respectively. Tiwanaku at least is ~110 BCE
[01:16:14] <Bugz000> hahah yes, some people are immune, others cannot watch!
[01:16:42] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[01:16:46] <Bugz000> Tv_ yes it is quite new :) but only a mile or so from a 4000 year old circle and some 8000 year old burial mounds
[01:17:00] *** Joins: losinggeneration (~quassel@64.225.54.254)
[01:17:01] <Bugz000> also not far from an amazing site i want to fly at
[01:17:02] *** CommunistWolf is now known as CommunistAuror
[01:17:10] *** CommunistAuror is now known as CommunistWolf
[01:17:31] <Bugz000> https://bugz000.co.uk/i/2Fe6jToD.jpg Tv_
[01:17:41] <Bugz000> this is my next target if all goes well :p
[01:18:34] *** Joins: thiccdaddy (~OwO@thiccdaddy.sexy)
[01:18:52] *** Quits: joshcom (~joshcom@2600:8800:a706:2b00:57fa:c99f:96ed:ee89) (Ping timeout: 256 seconds)
[01:18:56] *** Joins: amigan (dramoray@dtvax.dynatron.me)
[01:20:54] *** Joins: Teckla (~Teckla@user/teckla)
[01:21:11] *** Joins: whaley (~whaley@159.65.32.34)
[01:26:50] *** Quits: lalitmee (~lalitmee@180.94.33.244) (Quit: Konversation terminated!)
[01:32:59] *** Joins: dr0n (~dr0n@94.11.23.235)
[01:33:09] *** Quits: sully42 (~sully@2601:3cb:7f:c096:1121:2226:7b97:8530) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:37:12] *** Quits: hikhvar796073809 (~thelounge@dynamic-046-114-004-227.46.114.pool.telefonica.de) (Ping timeout: 245 seconds)
[01:40:31] *** Joins: thimslugga (~thimslugg@70.18.231.28)
[01:43:35] *** Quits: thimslugga (~thimslugg@70.18.231.28) (Quit: thimslugga)
[01:43:52] *** Joins: thimslugga (~thimslugg@70.18.231.28)
[01:48:26] *** Quits: jpw (~jpw@user/jpw) (Ping timeout: 272 seconds)
[01:49:30] *** Joins: pepee (~user@user/pepee)
[01:49:31] <eric_hill> Bugz000: fly at?
[01:49:40] <quippy> if you try to cast a variable from one type to another, and it's an invalid cast at runtime, does anybody know what happens?
[01:50:16] <quippy> I guess I could just try it out in the REPL
[01:50:57] *** Joins: jpw (~jpw@user/jpw)
[01:51:16] <quippy> oh I guess the case I had in mind isn't considered a bad cast, hm
[01:51:29] <quippy> that kinda sucks xD
[01:51:32] <Bugz000> eric_hill  i don't understand
[01:52:17] <eric_hill> Bugz000: also not far from an amazing site i want to fly at <- flying?  are you a pilot?  drone pilot?  wingsuit diver?
[01:52:22] *** Quits: jpw (~jpw@user/jpw) (Remote host closed the connection)
[01:52:42] <Bugz000> FPV pilot yes :) freestyle
[01:52:49] <Bugz000> https://youtu.be/kwHq9qcPehY
[01:53:15] <Bugz000> i may also wingsuit dive... but without a parachute... or wingsuit
[01:54:04] <quippy> here in the states you need an amateur radio license from the FCC to fly FPV drones
[01:54:15] <quippy> and I'm really tempted but also very lazy so I've never gotten around to doing it
[01:54:34] <quippy> my grandfather was one of the very first amateur radio operators and license-holders as a teenager in the 1930s
[01:55:15] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Quit: WeeChat 3.2)
[01:55:18] <quippy> and then, of course, served in the radio corps as part of the USAAF in WWII
[01:55:26] <quippy> anyway that's really off topic from FPV drones
[01:55:40] <quippy> point is, radio is cool, and I want to do stuff with it, but I've been too lazy so far
[01:56:38] <quippy> they changed the exams for getting the license to have a videoconference option so you don't have to physically show up at a testing site now though so maybe I'll finally do it one of these days
[01:57:22] <quippy> wingsuit diving on the other hand sounds terrible and people who want to do that can have fun with that, I will not be joining XD
[01:59:15] <bpalmer> quippy: go does not do casts. Go uses either type assertions or type conversions.
[02:00:28] <quippy> hmm
[02:00:43] <quippy> so just to start with a very basic example, if I have a []byte foo and I say stringFoo = string(foo), is that an assertion or a conversion?
[02:00:47] <Bugz000> pff yeah nobody checks with the drones
[02:00:50] <Bugz000> though i am getting my callsign
[02:00:52] <Bugz000> i do not have one currently
[02:01:04] <Bugz000> (you do need ham licence to TX over 25mw on the control link and video see)
[02:01:07] <Tv_> quippy: that's a conversion. type assertions look like i.(t)
[02:01:16] <bpalmer> quippy: that is a conversion. Assertions are applied to interfaces; conversions are applied to non-interfaces.
[02:01:27] <quippy> got it, thanks
[02:01:31] <Tv_> you can convert interfaces too..
[02:01:41] <quippy> okay so let me rephrase my original question: what happens when a conversion fails?
[02:01:49] <Tv_> quippy: ain't no such thing
[02:01:59] <quippy> it'll be a compile-time error, then?
[02:02:19] <Tv_> if you try to make a conversion that is not in the language, yes
[02:02:38] <quippy> okay that makes sense, and it checks out with the version of my code that compiled a minute ago
[02:08:43] <seebs> there is actually an exception in the near future!
[02:09:13] <seebs> which is that it becomes possible to do type conversions involving slices and arrays of specific sizes, and it's possible for such a conversion to fail. i think that's a panic.
[02:09:27] <seebs> > Conversions from slice to array pointer: An expression s of type []T may now be converted to array pointer type *[N]T. If a is the result of such a conversion, then corresponding indices that are in range refer to the same underlying elements: &a[i] == &s[i] for 0 <= i < N. The conversion panics if len(s) is less than N.
[02:09:52] <seebs> this is a novel thing and is the first case in Go where a conversion can fail.
[02:10:14] <bpalmer> what motivates that?
[02:10:19] <seebs> also, quippy: be aware that both string(byteslice) and []byte(string) are allocating conversions.
[02:10:34] <quippy> oh interesting, I wouldn't've expected that
[02:10:42] <seebs> as in, they work by allocating a copy of the thing converted, because you can't have a slice and a string referring to the same memory and preserve their respective semantics.
[02:10:48] <quippy> what if you have type Foo string and some string s and you do Foo(s)
[02:10:50] <KirkMcDonald> Those conversions have to imply a copy.
[02:10:51] <bpalmer> []byte elements are mutable, and string is not.
[02:11:04] *** Quits: independent56 (~independe@185.50.0.80) (Ping timeout: 268 seconds)
[02:11:14] <seebs> A type conversion like that won't copy, so far as I know.
[02:11:26] <quippy> awesome, thanks
[02:11:30] <KirkMcDonald> I would not expect the pointer-to-array conversion to copy, yeah.
[02:11:30] <bpalmer> quippy: because Foo's elements are not mutable either, it doesn't need to  copy anything.
[02:11:35] <seebs> Anyway, the motivation for being able to treat a slice as a pointer-to-an-array is at least partially that you could already slice a pointer to an array.
[02:11:37] *** Quits: DeltaNova (~DeltaNova@user/deltanova) (Quit: WeeChat 3.2)
[02:11:59] <seebs> And basically, it's a potentially useful way to express a thing that eliminates a lot of bounds checks.
[02:12:12] <seebs> there might be other reasons, there's probably a proposal about it somewhere.
[02:12:25] <quippy> if string is immutable and []byte is mutable, it makes sense that []byte(myString) allocates but why does string(myByteSlice)
[02:12:34] *** Joins: burningserenity (~burningse@102.129.152.106)
[02:12:51] <fizzie> Because you might mutate the original slice, and having the string to change would be *weird*.
[02:12:53] <seebs> wow. https://github.com/golang/go/issues/395
[02:13:13] <quippy> oh, right, I forgot that you would still have the original reference!
[02:13:13] <seebs> yeah. the string has to have a backing store that isn't mutable, and if the backing store were a []byte, someone could be writing through the []byte.
[02:13:24] <quippy> yep, makes sense, cool!
[02:13:44] *** Quits: apathor (~mike@c-73-119-36-70.hsd1.ma.comcast.net) (Ping timeout: 268 seconds)
[02:14:22] <fizzie> And I imagine sometimes those allocations could be eliminated. I've heard at least `string(slice1) == string(slice2)` won't do any allocations. (That's in fact how bytes.Equal is implemented.)
[02:14:33] <seebs> yeah.
[02:15:03] <seebs> similarly, if you're using string(slice) as a map key, i believe it might not allocate, although i think it does if it needs to create an entry.
[02:17:32] <fizzie> Looks like there's also a likely-accept proposal for allowing conversion from slice to array and not just pointer-to-array, https://github.com/golang/go/issues/46505
[02:18:22] <fizzie> (I guess it's really just dropping a dereference honestly.)
[02:19:42] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 268 seconds)
[02:21:40] <b0nn> Passing an array around rather than a slice, which would be easier with that conversion, would make me slightly more happier when it comes to thread safety
[02:22:23] <b0nn> Because I can lock the access to the array (kind of) but a slice can only lock access to the metadata
[02:22:43] <b0nn> I mean, as far as you can lock access
[02:23:24] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 268 seconds)
[02:24:33] *** Joins: sully42 (~sully@c-75-64-255-251.hsd1.tn.comcast.net)
[02:26:33] <seebs> yeah, allowing a conversion to array is, in practice, just "copy these items out of the slice".
[02:30:57] *** Joins: joshcom (~joshcom@2600:8800:a706:2b00:2cfe:4c51:9bb2:8518)
[02:31:19] *** Quits: joshcom (~joshcom@2600:8800:a706:2b00:2cfe:4c51:9bb2:8518) (Remote host closed the connection)
[02:31:33] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.2)
[02:34:11] <quippy> > a slice can only lock access to the metadata <- what does this mean?
[02:34:29] <quippy> sorry if that's a vague question
[02:36:11] *** Quits: jjonah (~jjonah@p200300d5d71aad00dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[02:38:18] *** Quits: Teckla (~Teckla@user/teckla) (Quit: leaving)
[02:39:41] *** Quits: Guest1263 (~Guest12@p200300c8cf22760005578b87193c4601.dip0.t-ipconnect.de) (Quit: Client closed)
[02:45:35] *** Quits: sully42 (~sully@c-75-64-255-251.hsd1.tn.comcast.net) (Ping timeout: 268 seconds)
[02:46:36] *** Quits: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:48:49] *** Joins: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net)
[02:54:33] <b0nn> a slice is a struct, with a pointer to the backing array, and two ints (len and cap)
[02:55:23] <b0nn> when you lock a slice, you are only locking access to that instance of the metadata, but it's perfectly acceptable in Go to have another slice pointing to the same backing array that is not affected by the lock
[02:59:21] *** Quits: normen (~normen@p54b3452e.dip0.t-ipconnect.de) (Ping timeout: 248 seconds)
[03:00:31] *** Quits: jinie (~jimmy@188.114.173.37) (Remote host closed the connection)
[03:01:37] *** Quits: dr0n (~dr0n@94.11.23.235) (Ping timeout: 268 seconds)
[03:02:07] *** Joins: jinie (~jimmy@188.114.173.37)
[03:04:22] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 258 seconds)
[03:06:17] *** Joins: fikran (~fikran@user/fikran)
[03:10:10] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[03:11:11] *** Joins: flynn (~mcbloch@user/flynn)
[03:11:24] *** Joins: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net)
[03:11:51] *** Joins: smuxki (~smuxki@2804:14d:baa0:85c6:40fc:232a:7dbe:1555)
[03:21:30] *** Quits: smuxki (~smuxki@2804:14d:baa0:85c6:40fc:232a:7dbe:1555) (Quit: quit)
[03:28:16] <Tv_> ain't no such thing as locking a slice
[03:28:22] <Tv_> quippy: where did you find that?
[03:28:54] <Tv_> quippy: that sounds like some specific meaning of "metadata", go slices don't use that term
[03:29:22] <Sam> I assume they meant "if you lock a mutex then try to do slice things it doesn't prevent the backing array from being modifed concurrently", but I agree that the way it was phrased doesn't make much sense
[03:29:24] *** Joins: normen (~normen@p54b3452e.dip0.t-ipconnect.de)
[03:29:44] <Tv_> mutexes don't prevent anything, it's up to your code to do the right thing
[03:30:03] <Sam> Fine, "if you try to use a mutex to do the right thing…"
[03:30:35] <Tv_> "...and then *don't* do the right thing..."
[03:31:30] <Sam> The point is: slices secretly have a pointer under the hood and it's not obvious if you don't already know how it works. It's a common mistake to try to do mutex operations  around modifying a slice, but then not realize that others slices might be pointing at the same backing memory.
[03:32:02] *** Quits: jsrnop (~mark@user/jsrnop) (Quit: The Lounge - https://thelounge.chat)
[03:32:30] *** Joins: jsrnop (~mark@user/jsrnop)
[03:38:37] *** Quits: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:41:41] *** Joins: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net)
[03:44:11] *** Quits: normen (~normen@p54b3452e.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[03:49:05] *** Joins: noonien7 (~noonien@user/noonien)
[03:49:07] *** Joins: SoF6 (~skius@user/skius)
[03:49:14] *** Joins: tofran3 (~tofran@37.189.158.134)
[03:49:56] *** Joins: markkuit (~markkuit@93-43-234-84.ip94.fastwebnet.it)
[03:50:11] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[03:50:20] *** markkuit is now known as Guest83
[03:50:24] *** Joins: ddevault_ (znc@sourcehut/staff/ddevault)
[03:50:47] *** Quits: noonien (~noonien@user/noonien) (Quit: Ping timeout (120 seconds))
[03:50:47] *** Quits: SoF (~skius@user/skius) (Quit: Ping timeout (120 seconds))
[03:50:47] *** Quits: tofran (~tofran@37.189.158.134) (Quit: Ping timeout (120 seconds))
[03:50:47] *** Quits: Guest4716 (~markkuit@93-43-234-84.ip94.fastwebnet.it) (Quit: marqquit)
[03:50:47] *** Quits: Cork (~Cork@user/cork) (Quit: .)
[03:50:47] *** Quits: ddevault (znc@sourcehut/staff/ddevault) (Remote host closed the connection)
[03:50:47] *** SoF6 is now known as SoF
[03:50:47] *** tofran3 is now known as tofran
[03:50:47] *** noonien7 is now known as noonien
[03:51:03] *** Joins: Cork (~Cork@user/cork)
[03:51:54] *** ddevault_ is now known as ddevault
[03:55:16] *** Quits: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net) (Ping timeout: 256 seconds)
[04:02:57] *** Quits: revolve (~u0_a227@82-132-229-230.dab.02.net) (Read error: Connection reset by peer)
[04:13:46] *** Quits: tristero (~nobody@user/tristero) (Ping timeout: 268 seconds)
[04:14:58] *** Joins: revolve (~u0_a227@82-132-235-217.dab.02.net)
[04:17:06] *** Joins: normen (~normen@p54b3452e.dip0.t-ipconnect.de)
[04:18:21] *** Quits: gueorgui (~gueorgui@user/gueorgui) (Ping timeout: 258 seconds)
[04:20:15] <b0nn> Yeah, mutexes are a polite request (unless you control access to encapsulated data ala OO)
[04:20:25] *** Quits: mosen (~mosen@159-196-125-15.9fc47d.syd.static.aussiebb.net) (Quit: Textual IRC Client: www.textualapp.com)
[04:21:20] <b0nn> The issue with slices is that a subslice has different metadata, but points to the same backing array
[04:25:44] *** Joins: f8l12 (~f8l12@154.3.42.29)
[04:28:42] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3-dev)
[04:29:42] *** Joins: hexfive (~eric@50.35.83.177)
[04:29:47] *** Quits: hexfive (~eric@50.35.83.177) (Client Quit)
[04:30:07] *** Quits: normen (~normen@p54b3452e.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[04:46:02] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:47:34] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:52:48] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[05:00:39] *** Quits: jinie (~jimmy@188.114.173.37) (Remote host closed the connection)
[05:00:50] *** Joins: normen (~normen@p200300d7173dc9007874998c750167eb.dip0.t-ipconnect.de)
[05:02:09] *** Joins: jinie (~jimmy@188.114.173.37)
[05:04:12] *** Quits: zwr (~zwr@2804:d45:b966:fb00:ab6a:1722:f952:c72a) (Remote host closed the connection)
[05:07:54] *** Joins: adlternative (~adl@117.32.216.12)
[05:11:38] *** Quits: normen (~normen@p200300d7173dc9007874998c750167eb.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[05:13:43] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:13:45] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 248 seconds)
[05:15:39] *** Joins: fikran (~fikran@user/fikran)
[05:24:51] *** Joins: jfrent (~josiah@user/jfrent)
[05:40:38] *** Joins: normen (~normen@p200300d7173dc9007874998c750167eb.dip0.t-ipconnect.de)
[05:45:13] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[05:46:54] *** Quits: LiftLeft (~LiftLeft@154.21.114.116) (Ping timeout: 258 seconds)
[05:47:27] *** Joins: c10l (~c10l@89.34.167.207)
[05:48:52] *** Quits: normen (~normen@p200300d7173dc9007874998c750167eb.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[05:56:54] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[05:57:36] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[05:59:59] *** Joins: LiftLeft (~LiftLeft@154.21.23.99)
[06:04:10] *** Joins: LambdaComplex (~adam@wireguard/tunneler/lambdacomplex)
[06:06:44] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[06:10:40] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 258 seconds)
[06:10:41] *** Quits: kiril (~kiril@85.91.153.163) (Quit: ZNC - https://znc.in)
[06:10:55] *** Joins: kiril (~kiril@85.91.153.163)
[06:15:24] *** Joins: gueorgui (~gueorgui@2.30.136.31)
[06:15:33] *** Quits: gueorgui (~gueorgui@2.30.136.31) (Changing host)
[06:15:33] *** Joins: gueorgui (~gueorgui@user/gueorgui)
[06:17:20] *** Quits: noarb- (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[06:22:44] *** Joins: noarb (~noarb@user/noarb)
[06:26:14] *** Joins: independent56 (~independe@185.50.0.80)
[06:26:44] *** Joins: dza (~dza@user/dza)
[06:28:13] *** Quits: thimslugga (~thimslugg@70.18.231.28) (Ping timeout: 268 seconds)
[06:30:01] *** Quits: sztanpet (sztanpet@user/sztanpet) (Quit: asd)
[06:33:02] *** Joins: sztanpet (sztanpet@user/sztanpet)
[06:43:14] *** Quits: Bugz000 (~Bugz000@user/bugz000) (Read error: Connection reset by peer)
[06:43:50] *** Joins: smeagol (~Bugz000@user/bugz000)
[06:55:54] *** Quits: independent56 (~independe@185.50.0.80) (Ping timeout: 258 seconds)
[06:58:02] *** Joins: oxum (~oxum@122.172.205.112)
[07:00:30] *** Quits: jinie (~jimmy@188.114.173.37) (Remote host closed the connection)
[07:01:04] *** Joins: miasuji (~miasuji@174-16-97-157.hlrn.qwest.net)
[07:02:14] *** Joins: jinie (~jimmy@188.114.173.37)
[07:03:22] *** Quits: oxum (~oxum@122.172.205.112) (Ping timeout: 268 seconds)
[07:12:42] *** Joins: haise01_ (~haise01@141-136-156-78.dsl.iskon.hr)
[07:15:57] *** Quits: haise01 (~haise01@213-191-130-226.dsl.iskon.hr) (Ping timeout: 245 seconds)
[07:27:52] *** Quits: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:31:06] *** smeagol is now known as Bugz00
[07:31:10] *** Bugz00 is now known as Bugz000
[07:41:31] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[07:44:37] *** Joins: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net)
[07:47:21] *** Quits: burningserenity (~burningse@102.129.152.106) (Ping timeout: 248 seconds)
[07:48:21] *** Joins: normen (~normen@p200300d7173dc9007874998c750167eb.dip0.t-ipconnect.de)
[08:01:22] *** Joins: fef (~thedawn@user/thedawn)
[08:03:15] *** Joins: oxum (~oxum@122.172.205.112)
[08:08:09] *** Quits: oxum (~oxum@122.172.205.112) (Ping timeout: 248 seconds)
[08:09:45] *** Quits: emcconville (~emcconvil@c-98-222-200-8.hsd1.il.comcast.net) (Quit: WeeChat 3.2)
[08:19:51] *** Quits: normen (~normen@p200300d7173dc9007874998c750167eb.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[08:34:04] *** Joins: Atque (~Atque@user/atque)
[08:35:46] *** Joins: oxum (~oxum@122.172.205.112)
[08:36:28] *** Joins: thimslugga (~thimslugg@70.18.231.28)
[08:37:30] *** Quits: smitop (~smitop@user/smitop) (Read error: Connection reset by peer)
[08:38:02] *** Joins: smitop (~smitop@user/smitop)
[08:38:15] *** Quits: oxum (~oxum@122.172.205.112) (Remote host closed the connection)
[08:39:07] *** Joins: oxum (~oxum@122.172.205.112)
[08:43:39] *** Quits: miasuji (~miasuji@174-16-97-157.hlrn.qwest.net) (Quit: Leaving)
[08:43:52] *** Quits: oxum (~oxum@122.172.205.112) (Ping timeout: 245 seconds)
[08:55:06] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[08:59:13] *** Joins: oxum (~oxum@122.172.205.112)
[09:00:39] *** Joins: dr0n (~dr0n@94.11.23.235)
[09:00:40] *** Quits: jinie (~jimmy@188.114.173.37) (Remote host closed the connection)
[09:02:19] *** Joins: jinie (~jimmy@188.114.173.37)
[09:02:59] *** Quits: noarb (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[09:03:01] *** Joins: gggpkm (~gggpkm@125.33.224.44)
[09:03:49] *** Joins: noarb (~noarb@user/noarb)
[09:04:57] *** Quits: oxum (~oxum@122.172.205.112) (Remote host closed the connection)
[09:05:41] *** Quits: noarb (~noarb@user/noarb) (Client Quit)
[09:06:00] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 244 seconds)
[09:10:45] *** Joins: noarb (~noarb@user/noarb)
[09:13:10] *** Joins: oxum (~oxum@122.172.205.112)
[09:15:20] *** Quits: thimslugga (~thimslugg@70.18.231.28) (Ping timeout: 268 seconds)
[09:18:25] *** Quits: oxum (~oxum@122.172.205.112) (Ping timeout: 268 seconds)
[09:22:06] *** Quits: pepee (~user@user/pepee) (Quit: bye $IRC)
[09:40:47] *** Quits: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[09:56:43] *** Joins: gggpkm_ (~gggpkm@60.10.23.162)
[09:58:03] *** Joins: noxim (~noxim@user/noxim)
[09:59:43] *** Quits: gggpkm (~gggpkm@125.33.224.44) (Ping timeout: 268 seconds)
[10:04:53] *** Joins: jpw (~jpw@user/jpw)
[10:17:26] *** Joins: normen (~normen@p200300d7173dc9007874998c750167eb.dip0.t-ipconnect.de)
[10:21:05] *** Joins: gggpkm (~gggpkm@60.10.23.162)
[10:22:37] *** Quits: gggpkm_ (~gggpkm@60.10.23.162) (Ping timeout: 245 seconds)
[10:29:50] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[10:29:57] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 268 seconds)
[10:31:17] *** Joins: independent56 (~independe@185.50.0.80)
[10:31:52] *** Quits: alyx (alyx@atheme/alyx) (Remote host closed the connection)
[10:32:46] *** Joins: alyx (alyx@atheme/alyx)
[10:33:01] *** Quits: revolve (~u0_a227@82-132-235-217.dab.02.net) (Read error: Connection reset by peer)
[10:34:22] *** Joins: revolve (~u0_a227@82-132-217-235.dab.02.net)
[10:39:19] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[10:40:21] *** Joins: flynn (~mcbloch@user/flynn)
[10:43:21] *** Quits: LiftLeft (~LiftLeft@154.21.23.99) (Ping timeout: 248 seconds)
[10:50:07] *** Quits: normen (~normen@p200300d7173dc9007874998c750167eb.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[11:00:28] *** Quits: jinie (~jimmy@188.114.173.37) (Remote host closed the connection)
[11:01:55] *** Joins: jinie (~jimmy@188.114.173.37)
[11:02:42] *** Joins: gggpkm_ (~gggpkm@60.10.23.162)
[11:05:13] *** Quits: gggpkm (~gggpkm@60.10.23.162) (Ping timeout: 248 seconds)
[11:16:12] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 268 seconds)
[11:17:24] *** Joins: codebam (~codebam@user/codebam)
[11:17:29] *** Quits: independent56 (~independe@185.50.0.80) (Ping timeout: 248 seconds)
[11:19:58] *** Joins: jaberwack (~Jabberwac@c-73-243-250-212.hsd1.co.comcast.net)
[11:22:03] *** Joins: jabberwack1 (~Jabberwac@181.214.227.30)
[11:22:55] *** Quits: jabberwack1 (~Jabberwac@181.214.227.30) (Client Quit)
[11:26:04] *** Quits: jaberwack (~Jabberwac@c-73-243-250-212.hsd1.co.comcast.net) (Ping timeout: 268 seconds)
[11:29:10] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 256 seconds)
[11:29:56] *** Quits: plujon (~user@24.16.249.105) (Remote host closed the connection)
[11:30:15] *** Joins: independent56 (~independe@185.50.0.80)
[11:30:22] *** Joins: codebam (~codebam@user/codebam)
[11:50:41] *** Quits: aml (~antoon_i@h-85-24-213-163.A392.priv.bahnhof.se) (Ping timeout: 258 seconds)
[11:50:49] *** Joins: aml_ (~antoon_i@h-85-24-213-163.A392.priv.bahnhof.se)
[11:56:22] *** Quits: jpw (~jpw@user/jpw) (Ping timeout: 256 seconds)
[12:01:20] *** Joins: jpw (~jpw@user/jpw)
[12:06:55] *** Quits: jinie (~jimmy@188.114.173.37) (Quit: ZNC 1.8.2 - https://znc.in)
[12:07:05] *** Joins: mrig (~mrig@user/mrig)
[12:07:32] *** Joins: jinie (~jimmy@188.114.173.37)
[12:07:33] *** Joins: jpw_ (~jpw@user/jpw)
[12:08:28] *** Quits: jpw (~jpw@user/jpw) (Ping timeout: 272 seconds)
[12:12:18] *** Quits: jpw_ (~jpw@user/jpw) (Ping timeout: 268 seconds)
[12:14:45] *** Joins: jpw (~jpw@user/jpw)
[12:21:29] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 248 seconds)
[12:22:28] *** Quits: milosz__ (~milosz@user/milosz) (Ping timeout: 272 seconds)
[12:23:34] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[12:28:06] *** Joins: kodah (~kodah@user/kodah)
[12:29:20] *** Joins: codebam (~codebam@user/codebam)
[12:30:10] *** jpw is now known as jpw_
[12:30:13] *** jpw_ is now known as jpw
[12:35:43] *** Joins: gggpkm (~gggpkm@114.243.63.3)
[12:36:15] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[12:36:57] *** Quits: gggpkm_ (~gggpkm@60.10.23.162) (Ping timeout: 248 seconds)
[12:47:31] *** Joins: normen (~normen@p200300d7173dc9007874998c750167eb.dip0.t-ipconnect.de)
[12:50:39] *** Joins: me-sudoer-dentne (~me-sudoer@2402:e280:3d25:53d:14e4:a16a:66ca:906f)
[12:54:20] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-6-221.prtc.net)
[12:55:37] *** Quits: independent56 (~independe@185.50.0.80) (Ping timeout: 248 seconds)
[13:00:27] *** Quits: jinie (~jimmy@188.114.173.37) (Remote host closed the connection)
[13:00:55] *** Joins: zunk (~zunk@h-79-136-122-114.A240.priv.bahnhof.se)
[13:02:05] *** Joins: jinie (~jimmy@188.114.173.37)
[13:07:16] *** Quits: noxim (~noxim@user/noxim) (Ping timeout: 246 seconds)
[13:12:42] *** Joins: gggpkm_ (~gggpkm@123.112.96.122)
[13:15:08] *** Quits: gggpkm (~gggpkm@114.243.63.3) (Ping timeout: 256 seconds)
[13:16:12] *** Quits: gggpkm_ (~gggpkm@123.112.96.122) (Client Quit)
[13:21:31] *** Joins: sizeof_void34 (~Thunderbi@109.252.75.112)
[13:36:26] *** Joins: yoonkn (~user@175.197.208.79)
[13:41:32] *** Joins: mosen (~mosen@159-196-125-15.9fc47d.syd.static.aussiebb.net)
[13:45:07] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 245 seconds)
[13:46:52] *** Joins: codebam (~codebam@user/codebam)
[13:54:14] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 256 seconds)
[13:54:48] *** Joins: codebam (~codebam@user/codebam)
[13:58:06] *** Joins: jjonah (~jjonah@p200300d5d71aad00dea632fffeb3342f.dip0.t-ipconnect.de)
[14:03:06] *** Quits: normen (~normen@p200300d7173dc9007874998c750167eb.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[14:03:32] *** Joins: independent56 (~independe@185.50.0.80)
[14:04:11] *** Quits: olavfosse (~Guest67@2001:464c:73bf:0:fe02:6050:e273:28a7) (Quit: Client closed)
[14:15:04] *** Quits: independent56 (~independe@185.50.0.80) (Remote host closed the connection)
[14:15:28] *** Joins: independent56 (~independe@185.50.0.80)
[14:17:31] *** Joins: minix (~dr0n@94.11.23.235)
[14:20:35] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 268 seconds)
[14:20:50] *** Quits: independent56 (~independe@185.50.0.80) (Ping timeout: 272 seconds)
[14:21:11] *** Quits: dr0n (~dr0n@94.11.23.235) (Ping timeout: 268 seconds)
[14:21:35] *** Joins: codebam (~codebam@user/codebam)
[14:42:40] *** Quits: me-sudoer-dentne (~me-sudoer@2402:e280:3d25:53d:14e4:a16a:66ca:906f) (Quit: Leaving)
[14:42:45] *** Quits: haise01_ (~haise01@141-136-156-78.dsl.iskon.hr) (Quit: Leaving)
[14:48:40] *** Joins: iateadonut (~dan@121.177.17.154)
[14:52:57] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 248 seconds)
[14:54:01] *** Quits: minix (~dr0n@94.11.23.235) (Ping timeout: 248 seconds)
[14:54:24] *** Joins: codebam (~codebam@user/codebam)
[14:58:33] *** Joins: Atque (~Atque@user/atque)
[15:00:34] *** Quits: jinie (~jimmy@188.114.173.37) (Remote host closed the connection)
[15:02:07] *** Joins: jinie (~jimmy@188.114.173.37)
[15:07:59] *** Quits: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:09:47] <iateadonut> https://docs.aws.amazon.com/lambda/latest/dg/golang-context.html - this last go function sample here - it has context.Deadline() - i'm not really sure what i'm supposed to be learning from this.
[15:10:41] <A_Dragon> iateadonut: hmm?
[15:11:05] <iateadonut> it looks like the timeout channel closes and then returns
[15:11:09] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 268 seconds)
[15:11:25] <A_Dragon> what is your question?
[15:11:33] <iateadonut> i tried a bunch of different variables for timeout and for sleeping, and i can't get it to timeout before printing "hello!"
[15:11:44] <iateadonut> so i'm not sure what they're trying to say here.
[15:11:46] <A_Dragon> its in a outer loop
[15:12:10] <A_Dragon> but yeah thats a really bad example for that, I'd at least put the current time in "hello"
[15:12:26] <iateadonut> log. puts in the current time
[15:12:30] *** Joins: codebam (~codebam@user/codebam)
[15:12:32] <A_Dragon> oh I cant read
[15:12:40] <A_Dragon> yeah that will never timeout before the hello
[15:12:57] <A_Dragon> default statements on selects are taken instantly if there are no channels to read from
[15:12:58] <iateadonut> right so what's the point?
[15:13:15] <A_Dragon> of the example or the deadline?
[15:13:24] <iateadonut> of the example.
[15:13:33] <A_Dragon> There doesnt appear to be one
[15:13:35] <iateadonut> i think a deadline would be if you have a goroutine running, right?
[15:13:45] <A_Dragon> it wouldnt have to be, no
[15:13:56] <iateadonut> how else could you use a deadline?
[15:14:06] <A_Dragon> you could use it to ask that a synchronous function returns to you before or at $time
[15:14:13] <A_Dragon> like that one does
[15:14:23] <A_Dragon> well, "does"
[15:14:32] <A_Dragon> lambda AIUI is a bit weird.
[15:14:55] <A_Dragon> but yeah that in a "normal" context could make sense to just ask that no more than x time is wasted on a job
[15:15:00] <iateadonut> https://play.golang.org/p/TfvZokGpx0x
[15:15:06] <A_Dragon> and to wait until the job is finished or times out
[15:15:34] <iateadonut> that's kind of re-written without all the lambda stuff.  -  how would you change that so it times out before finishing?  put them within two separate loops?
[15:16:07] <A_Dragon> there will never be a case where hello is not printed before timeoutChannel closes
[15:16:28] <A_Dragon> which makes "sense"
[15:16:30] <albertito> iateadonut: in your example, your context has no deadline
[15:16:47] <A_Dragon> that is a good point, other side has a context passed to it
[15:16:55] <A_Dragon> but regardless in this exact for/select
[15:17:06] <A_Dragon> the "work", ie, in `default`, will always happen at least once
[15:17:44] <albertito> iateadonut: that is probably throwing you off. If you want a context with a deadline, call context.WithDeadline
[15:18:48] <albertito> if you print "deadline" you'll see that it's way way in the past
[15:19:04] <A_Dragon> also; note; time remains magic on the playground
[15:19:16] <ikke> It's constant, right?
[15:20:31] <albertito> iateadonut: https://play.golang.org/p/rjUL5iOpc4E
[15:21:11] <albertito> although "finished before timing out" should be "reached deadline", IMO
[15:21:15] <iateadonut> albertito, thanks so much.
[15:21:43] <iateadonut> AND, what is AWS trying to tell us in the last function on https://docs.aws.amazon.com/lambda/latest/dg/golang-context.html
[15:22:33] <albertito> iateadonut: if you're going to have a construct like this, using ctx.Done() is probably a better fit, since you don't need to care _why_ the context was cancelled (deadline? timeout? external call? etc)
[15:23:41] <iateadonut> the aws docs say, "The following example introduces how to use the context object to monitor how long your Lambda function  takes to complete. This allows you to analyze performance expectations and adjust your function code accordingly, if needed."
[15:23:42] <albertito> iateadonut: I think (without knowing almost anything about AWS) the point of what they do there is you want to stop work "a little bit before they kill your process"
[15:24:27] <albertito> iateadonut: that's why they get the deadline and create a new timeout which is 100ms _before_ the context deadline
[15:24:51] <albertito> iateadonut: presumably so you can gracefully finish up your work in those 100ms, and aren't caught mid-work when they kill your process
[15:25:18] <albertito> but again, that's more an AWS thing and I really know nothing about it, maybe someone else does
[15:26:12] <iateadonut> when i executed in lambda running on my localhost, i got this in the logs:
[15:26:18] <iateadonut> 2021/08/14 19:55:28 hello!
[15:26:18] <iateadonut> 2021/08/14 19:55:28 Finished before timing out.
[15:26:30] *** Joins: oxum (~oxum@122.172.205.112)
[15:26:37] <iateadonut> so i don't know.  nothing changes if i change any of the parameters either.
[15:26:59] <iateadonut> ok, thanks.  i'm going to give up on this and assume it's untested code they put in their docs, i guess.
[15:27:06] <iateadonut> thanks, A_Dragon.
[15:27:06] <albertito> iateadonut: I think it makes sense
[15:27:16] <iateadonut> what makes sense?
[15:27:57] <albertito> iateadonut: it's [probably] like this: the lambda environment launches your program, and already has decided it's going to run it for let's say 30s. So it gives you a context with a deadline of launch time+30s.
[15:28:50] <albertito> iateadonut: if you do the for loop without worrying about cancellation, and instead of printing "hello" you do complex work, your program will get killed in the middle of it. So in that example they're telling you a way of stopping work yourself before those 30s are over
[15:29:21] <albertito> iateadonut: to do that, you get the deadline from their context, and then decide to exit a little before it happens (100ms in their example)
[15:30:07] <iateadonut> ah.
[15:30:09] <albertito> iateadonut: so your program exits gracefully, instead of having it killed in the middle of doing active work
[15:30:18] <iateadonut> aha!
[15:31:41] <albertito> iateadonut: if you're running something on localhost, maybe there is no deadline (as opposed to when running in their production environment), so you get a deadline that is way in the past as I told you before
[15:32:15] <albertito> iateadonut: print the return values of that Deadline call, and don't ignore the "ok" argument: if it's false it means there is no deadline, which in your case is quite relevant
[15:32:26] <albertito> iateadonut: that should help you figure out what's going on
[15:33:01] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Remote host closed the connection)
[15:33:41] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[15:33:59] <iateadonut> you're right: 1970-01-01 00:00:00 +0000 UTC
[15:34:01] *** Quits: oxum (~oxum@122.172.205.112) (Ping timeout: 248 seconds)
[15:34:05] <ikke> UTC 0
[15:34:10] <ikke> I mean, unix timestamp 0
[15:34:19] <iateadonut> -100 exploded my computer
[15:35:11] <iateadonut> can you believe it's already 1.62b.  1.45b seems like just yesterday.
[15:36:51] <ikke> nod
[15:36:54] <albertito> iateadonut: and "ok" is probably false in that case
[15:36:59] <ikke> wondering when 2.0b will be
[15:37:22] <ikke> Oh, still a while out
[15:38:24] <iateadonut> 'ok' is true.  but i see that lambda adds that context.
[15:39:14] <iateadonut> and on the localhost it's not added.
[15:39:54] <albertito> iateadonut: if it's true then deadline should have a meaningful value in the future; if it's false then I would expect it to be some time in the past (the zero value for time.Time)
[15:40:29] <albertito> iateadonut: but the AWS library could also be doing weird things, I don't know. It's best to print the values and try it
[15:41:27] <iateadonut> there's something called "sam cli", so i think you're supposed to use that rather than just running it with '_LAMBDA_SERVER_PORT=8080 go run main.go' to get the deadline, i guess.
[15:41:32] <iateadonut> i'll see if i can try that later.
[15:47:43] *** Quits: holgersson (~quassel@user/holgersson) (Quit: “Format C:........[Done]“)
[15:50:32] *** Joins: noxim (~noxim@user/noxim)
[15:55:25] *** Joins: holgersson (~quassel@user/holgersson)
[15:56:57] *** Quits: whoami (~whoami@d118-75-170-49.try.wideopenwest.com) (Ping timeout: 248 seconds)
[16:01:11] *** Joins: normen (~normen@p54b3452e.dip0.t-ipconnect.de)
[16:01:46] *** Joins: joshcom (~joshcom@2600:8800:a706:2b00:5be3:4224:17a3:9012)
[16:02:29] *** Joins: thimslugga (~thimslugg@70.18.231.28)
[16:17:17] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[16:32:09] <ikke> How does `Each(func(name string, vr Variable) bool)` work? I don't see a name specified for func, how are you supposed to call it?
[16:32:24] <ikke> https://pkg.go.dev/github.com/mvdan/sh@v2.6.4+incompatible/expand#Environ
[16:32:25] <A_Dragon> it takes a closure
[16:32:35] <fizzie> That's just the signature.
[16:32:38] <A_Dragon> or, to be more explicit
[16:32:41] <A_Dragon> functions are types to
[16:32:52] <fizzie> It doesn't need to give a name to the parameter in the interface.
[16:33:17] <fizzie> The other method could be `Get(string) Variable` just as well, except giving it a name is extra documentation.
[16:33:20] <A_Dragon> its not an interface, its a signature for another function, but yes :P
[16:33:46] *** Quits: normen (~normen@p54b3452e.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[16:33:52] <A_Dragon> (which itself is in an interface)
[16:34:01] <fizzie> Well, yes, I abbreviated a little.
[16:34:26] <iateadonut> what are you trying to do?
[16:34:49] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 248 seconds)
[16:34:54] <ikke> but go seems to accept it without a name
[16:34:57] <A_Dragon> so ikke, to clarify the SECOND question, define a function and pass it
[16:35:18] <ikke> I mean on the receiving side
[16:35:28] <fizzie> You are allowed to not name parameters.
[16:35:34] <fizzie> Then you can't use them, of course, since they don't have names.
[16:35:37] <ikke> ok
[16:35:43] <A_Dragon> ^
[16:35:48] <fizzie> It's useful when you need to implement an interface but don't actually care about a parameter.
[16:35:52] <A_Dragon> well, in an interface the implementations can have any name
[16:36:02] <A_Dragon> or no name, or _ (which I prefer)
[16:36:18] <fizzie> Although it's hard to imagine a useful implementation of the `Each` method that would not look at the parameter.
[16:36:19] *** Joins: codebam (~codebam@user/codebam)
[16:36:28] <fizzie> Except maybe some sort of a dummy "empty" environment.
[16:36:35] <A_Dragon> func(_ string, vr Variable) bool { return doTheThing(vr) } looks better, imo
[16:40:24] <fizzie> I think you have to use _ if you have some parameters you do care about and some you don't.
[16:40:39] <fizzie> Because `func(string, vr Variable)` would be of type `func(Variable, Variable)`.
[16:40:45] <A_Dragon> that might be true, I dont remember
[16:41:07] <fizzie> Me neither, but that's what some testing at https://play.golang.org/p/WHz5NjzFl4f seemed to imply.
[16:41:09] <A_Dragon> ~eval test := func (x string, bool) {}
[16:41:09] *** Quits: goplay (QAAUttp1xx@user/goplay) (Remote host closed the connection)
[16:41:18] <A_Dragon> oh is it dead? RIP
[16:41:38] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 258 seconds)
[16:41:45] <fizzie> Hmm, that way around might be different. What I tried was `string, vr int`, and that got interpreted as two parameters of type `int`.
[16:41:58] <A_Dragon> oh it paniced, wonderful
[16:42:06] <fizzie> Yeah, the other way around is just "syntax error: mixed named and unnamed function parameters".
[16:43:06] <A_Dragon> I forgot a return.
[16:43:50] *** Joins: goplay (u46cJWUgH2@user/goplay)
[16:43:51] <A_Dragon> ~eval test := func (x string, bool) {}
[16:43:52] <goplay> Error occurred: could not format / imports source: prog.go:4:11: expected expression (and 4 more errors)
[16:44:54] <A_Dragon> oh thats an interesting error. it should probably be nicer than that
[16:45:12] <A_Dragon> I blame fmt or imports $shrug
[16:46:32] *** Joins: codebam (~codebam@user/codebam)
[16:47:41] *** Joins: gggpkm (~gggpkm@60.10.23.162)
[16:49:00] *** Quits: joshcom (~joshcom@2600:8800:a706:2b00:5be3:4224:17a3:9012) (Quit: Leaving)
[16:51:40] *** Joins: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net)
[17:00:34] *** Quits: jinie (~jimmy@188.114.173.37) (Remote host closed the connection)
[17:01:13] *** Quits: sizeof_void34 (~Thunderbi@109.252.75.112) (Quit: sizeof_void34)
[17:02:10] *** Joins: jinie (~jimmy@188.114.173.37)
[17:02:33] *** Quits: revolve (~u0_a227@82-132-217-235.dab.02.net) (Ping timeout: 248 seconds)
[17:03:28] *** Joins: me-sudoer-dentne (~me-sudoer@2402:e280:3d25:53d:14e4:a16a:66ca:906f)
[17:04:01] *** Quits: me-sudoer-dentne (~me-sudoer@2402:e280:3d25:53d:14e4:a16a:66ca:906f) (Remote host closed the connection)
[17:04:51] *** Joins: revolve (~u0_a227@82-132-229-139.dab.02.net)
[17:07:42] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 258 seconds)
[17:08:58] <iateadonut> gn, lads
[17:09:04] <iateadonut> thanks again
[17:09:14] *** Joins: codebam (~codebam@user/codebam)
[17:09:46] <iateadonut> fizzie, i see you're rising through the ranks quickly on stackoverflow.
[17:10:07] *** Quits: iateadonut (~dan@121.177.17.154) (Quit: Leaving.)
[17:10:39] *** Joins: sizeof_void34 (~Thunderbi@109.252.75.112)
[17:15:06] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 268 seconds)
[17:16:06] *** Joins: codebam (~codebam@user/codebam)
[17:19:22] *** Joins: gggpkm_ (~gggpkm@114.243.61.163)
[17:22:05] *** Joins: Guest36 (~Guest36@p200300c8cf2276009739e07be2ed963e.dip0.t-ipconnect.de)
[17:22:17] *** Quits: gggpkm (~gggpkm@60.10.23.162) (Ping timeout: 248 seconds)
[17:23:21] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 248 seconds)
[17:24:11] *** Joins: codebam (~codebam@user/codebam)
[17:28:10] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[17:35:45] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[17:40:38] *** Joins: gggp (~gggp@60.10.194.45)
[17:42:50] *** Quits: gggpkm_ (~gggpkm@114.243.61.163) (Ping timeout: 268 seconds)
[17:44:41] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 268 seconds)
[17:44:48] *** Joins: gggp_ (~gggp@114.243.61.163)
[17:45:11] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[17:47:26] *** Joins: c10l (~c10l@89.34.167.207)
[17:47:56] *** Quits: gggp (~gggp@60.10.194.45) (Ping timeout: 272 seconds)
[17:48:14] *** Quits: amigan (dramoray@dtvax.dynatron.me) (Quit: WeeChat 3.2)
[17:59:47] *** Joins: foobaz21267 (~foobaz212@75.188.159.143.dyn.plus.net)
[18:11:20] *** Joins: lauraaah (uid156848@id-156848.charlton.irccloud.com)
[18:20:06] *** Joins: sharktamer (~sharktame@cpc91312-watf11-2-0-cust697.15-2.cable.virginm.net)
[18:24:19] *** Quits: foobaz21267 (~foobaz212@75.188.159.143.dyn.plus.net) (Quit: Client closed)
[18:24:32] *** Joins: foobaz21267 (~foobaz212@75.188.159.143.dyn.plus.net)
[18:24:55] *** Quits: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:26:13] *** Quits: foobaz21267 (~foobaz212@75.188.159.143.dyn.plus.net) (Client Quit)
[18:26:15] *** Quits: L1Cafe (~L1Cafe@user/l1cafe) (Quit: The Lounge - https://thelounge.chat)
[18:26:28] *** Joins: foobaz21267 (~foobaz212@75.188.159.143.dyn.plus.net)
[18:26:29] *** Quits: foobaz21267 (~foobaz212@75.188.159.143.dyn.plus.net) (Write error: Broken pipe)
[18:26:42] *** Joins: L1Cafe (~L1Cafe@user/l1cafe)
[18:31:02] *** Joins: normen (~normen@p54b3452e.dip0.t-ipconnect.de)
[18:31:03] *** Joins: andlabs (~andlabs@2607:fb90:37e:200:bcd8:b2b4:9539:c2f8)
[18:32:20] *** Joins: whoami (~whoami@d118-75-170-49.try.wideopenwest.com)
[18:35:29] *** Quits: andlabs (~andlabs@2607:fb90:37e:200:bcd8:b2b4:9539:c2f8) (Ping timeout: 258 seconds)
[18:36:48] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[18:40:10] *** Quits: jjonah (~jjonah@p200300d5d71aad00dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[18:43:54] *** Quits: gggp_ (~gggp@114.243.61.163) (Remote host closed the connection)
[18:44:18] *** Joins: gggp_ (~gggp@60.10.23.162)
[18:45:36] *** Joins: andlabs (~andlabs@172.58.230.140)
[18:49:34] *** Quits: sizeof_void34 (~Thunderbi@109.252.75.112) (Quit: sizeof_void34)
[18:52:04] *** Joins: sizeof_void34 (~Thunderbi@109-252-75-112.nat.spd-mgts.ru)
[18:52:26] *** Joins: aead (~aead@pool-96-232-187-142.nycmny.fios.verizon.net)
[18:55:00] *** Quits: andlabs (~andlabs@172.58.230.140) (Ping timeout: 268 seconds)
[18:55:00] *** Quits: aeadio (~aead@ec2-52-2-178-231.compute-1.amazonaws.com) (Ping timeout: 268 seconds)
[18:55:04] *** Joins: rob (~rob@user/bobwal)
[18:55:14] *** rob is now known as bobwal
[18:57:07] *** Joins: andlabs (~andlabs@2607:fb90:370:43e1:5066:8942:f5de:58df)
[18:57:58] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-6-221.prtc.net) (Ping timeout: 246 seconds)
[18:59:06] *** Quits: adlternative (~adl@117.32.216.12) (Ping timeout: 256 seconds)
[18:59:12] *** Joins: kwilczynski (sid379192@user/kwilczynski)
[19:00:32] *** Quits: jinie (~jimmy@188.114.173.37) (Remote host closed the connection)
[19:02:14] *** Joins: jinie (~jimmy@188.114.173.37)
[19:04:15] *** Quits: normen (~normen@p54b3452e.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[19:05:45] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[19:06:56] *** Quits: martin_ (nobody@188.113.85.137) (Quit: WeeChat 3.0)
[19:07:46] *** Quits: noxim (~noxim@user/noxim) (Ping timeout: 246 seconds)
[19:12:15] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 268 seconds)
[19:13:06] *** Quits: cross (~cross@spitfire.i.gajendra.net) (Ping timeout: 240 seconds)
[19:14:18] *** Joins: martin_ (nobody@188.113.85.137)
[19:14:49] *** Joins: cross (~cross@spitfire.i.gajendra.net)
[19:18:01] *** Quits: gggp_ (~gggp@60.10.23.162) (Ping timeout: 248 seconds)
[19:25:23] *** Joins: Hanicef (~gustaf@81-229-9-108-no92.tbcn.telia.com)
[19:27:00] *** Joins: LiftLeft (~LiftLeft@212.102.58.180)
[19:30:50] *** Quits: andlabs (~andlabs@2607:fb90:370:43e1:5066:8942:f5de:58df) (Ping timeout: 256 seconds)
[19:32:09] *** Quits: mickey (~user@user/mickey) (Remote host closed the connection)
[19:35:05] *** Joins: andlabs (~andlabs@2607:fb90:37c:b707:d87c:87af:6d94:b2a6)
[19:37:28] *** Joins: tristero (~nobody@user/tristero)
[19:39:14] *** Joins: jpw_ (~jpw@user/jpw)
[19:39:42] *** Quits: jpw (~jpw@user/jpw) (Ping timeout: 245 seconds)
[19:40:09] *** Quits: andlabs (~andlabs@2607:fb90:37c:b707:d87c:87af:6d94:b2a6) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:40:29] *** Joins: mickey (~user@user/mickey)
[19:48:49] *** Joins: andlabs (~andlabs@ool-ad034a4d.dyn.optonline.net)
[20:02:21] *** Joins: Snyp (~rksht@49.207.209.246)
[20:06:49] *** Quits: yoonkn (~user@175.197.208.79) (Remote host closed the connection)
[20:18:36] *** Quits: V (~v@anomalous.eu) (Ping timeout: 258 seconds)
[20:18:52] *** Quits: L1Cafe (~L1Cafe@user/l1cafe) (Ping timeout: 268 seconds)
[20:21:33] *** Joins: L1Cafe (~L1Cafe@user/l1cafe)
[20:27:15] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[20:28:49] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[20:36:17] *** Joins: Teckla (~Teckla@user/teckla)
[20:38:55] *** jpw_ is now known as jpw
[20:39:53] *** Joins: dcompoze (~dcompoze@5E98D6D9.static.tld.pl)
[20:50:48] *** Quits: dch (sid1310@couchdb/committer/dch) (Ping timeout: 258 seconds)
[20:53:06] *** Joins: gggp_ (~gggp@114.243.61.163)
[20:54:50] *** Joins: zwr (~zwr@2804:d45:b966:fb00:b0b3:7f72:5851:b2a8)
[20:55:19] *** Joins: dch (sid1310@couchdb/committer/dch)
[20:55:44] *** Quits: Freman (~Freman@flatus.fremnet.net) (Quit: ZNC - https://znc.in)
[20:56:03] *** Joins: Freman (~Freman@flatus.fremnet.net)
[20:59:26] *** Joins: dcompoze_ (~dcompoze@cpc97624-walt24-2-0-cust75.13-2.cable.virginm.net)
[21:00:42] *** Quits: jinie (~jimmy@188.114.173.37) (Remote host closed the connection)
[21:01:10] *** Joins: normen (~normen@p54b3452e.dip0.t-ipconnect.de)
[21:02:12] *** Quits: dcompoze (~dcompoze@5E98D6D9.static.tld.pl) (Ping timeout: 245 seconds)
[21:02:19] *** Joins: jinie (~jimmy@188.114.173.37)
[21:04:06] *** Joins: burningserenity (~burningse@102.129.153.146)
[21:08:32] *** Joins: be3uykpy (~be3uykpy@2a00:a040:19a:b060:6993:c8f6:4710:a4f5)
[21:16:36] *** Joins: olavfosse (~olavfosse@2001:464c:73bf:0:10ef:a636:70a4:bde4)
[21:31:02] *** Joins: nef (~nef@user/nef)
[21:33:52] *** Quits: normen (~normen@p54b3452e.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[21:35:17] *** Joins: securethemews_ (~securethe@2a00:23c4:1e9b:7b00::1)
[21:36:30] *** Quits: Snyp (~rksht@49.207.209.246) (Quit: WeeChat 3.2)
[21:39:02] *** Quits: gggp_ (~gggp@114.243.61.163) (Ping timeout: 268 seconds)
[21:40:21] *** Joins: codebam (~codebam@user/codebam)
[21:45:57] *** Quits: theoceaniscool (~theoceani@93.177.120.45) (Ping timeout: 245 seconds)
[21:52:43] *** Joins: Atque (~Atque@user/atque)
[21:57:54] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Quit: 404)
[22:01:23] *** Joins: mei (~mei@user/mei)
[22:02:46] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[22:08:58] *** Quits: Hanicef (~gustaf@81-229-9-108-no92.tbcn.telia.com) (Quit: leaving)
[22:18:35] *** Quits: nef (~nef@user/nef) (Ping timeout: 258 seconds)
[22:34:21] *** Quits: andlabs (~andlabs@ool-ad034a4d.dyn.optonline.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:38:00] *** Joins: andlabs (~andlabs@ool-ad034a4d.dyn.optonline.net)
[22:40:34] *** Joins: carlavilla (~carlavill@188.26.219.14)
[22:44:20] *** Quits: rudi_s (~simon@user/rudi-s/x-7673890) (Ping timeout: 252 seconds)
[22:44:48] *** Joins: nef (~nef@2a02:c7f:bb84:e700:649b:c7e:8924:d017)
[22:44:48] *** Quits: nef (~nef@2a02:c7f:bb84:e700:649b:c7e:8924:d017) (Changing host)
[22:44:48] *** Joins: nef (~nef@user/nef)
[22:45:05] *** Quits: nef (~nef@user/nef) (Client Quit)
[22:45:51] *** Joins: rudi_s (~simon@user/rudi-s/x-7673890)
[22:48:26] *** Atque is now known as Atque-
[22:48:33] *** Atque- is now known as Atque
[22:56:50] *** Joins: jsrnop1 (~mark@user/jsrnop)
[22:58:12] *** Quits: jsrnop (~mark@user/jsrnop) (Read error: Connection reset by peer)
[22:58:12] *** jsrnop1 is now known as jsrnop
[22:59:42] *** Joins: V (~v@anomalous.eu)
[23:00:45] *** Quits: jinie (~jimmy@188.114.173.37) (Remote host closed the connection)
[23:01:53] *** Quits: Vigdis (~danj@ns4.chown.me) (Quit: WeeChat 3.2)
[23:02:18] *** Quits: V (~v@anomalous.eu) (Remote host closed the connection)
[23:02:23] *** Joins: jinie (~jimmy@188.114.173.37)
[23:04:28] *** Joins: V (~v@anomalous.eu)
[23:07:27] *** Joins: gebn (~george@user/gebn)
[23:08:59] *** Joins: gruuf (~gruuf@94.31.99.29)
[23:09:55] *** Joins: pepee (~user@user/pepee)
[23:10:20] *** Joins: Vigdis (~danj@ns4.chown.me)
[23:17:01] *** Quits: dcompoze_ (~dcompoze@cpc97624-walt24-2-0-cust75.13-2.cable.virginm.net) (Quit: WeeChat 3.2)
[23:17:16] *** Joins: dcompoze (~dcompoze@cpc97624-walt24-2-0-cust75.13-2.cable.virginm.net)
[23:22:02] *** Quits: burningserenity (~burningse@102.129.153.146) (Ping timeout: 256 seconds)
[23:23:50] *** Quits: gebn (~george@user/gebn) (Quit: gebn)
[23:24:10] *** Joins: gebn (~george@user/gebn)
[23:24:18] *** Quits: itok (sid418430@id-418430.charlton.irccloud.com) (Ping timeout: 256 seconds)
[23:24:18] *** Quits: Manouchehri (sid384576@id-384576.stonehaven.irccloud.com) (Ping timeout: 272 seconds)
[23:24:18] *** Quits: morgabra (sid500580@user/morgabra) (Ping timeout: 272 seconds)
[23:24:18] *** Quits: hdm (sid500490@aha/hacker/hdm) (Ping timeout: 272 seconds)
[23:24:18] *** Quits: jzelinskie (sid17772@user/jzelinskie) (Ping timeout: 272 seconds)
[23:24:35] *** Quits: cespare (sid330206@id-330206.stonehaven.irccloud.com) (Ping timeout: 252 seconds)
[23:24:52] *** Quits: lauraaah (uid156848@id-156848.charlton.irccloud.com) (Ping timeout: 272 seconds)
[23:24:52] *** Quits: seds (sid492514@user/seds) (Ping timeout: 256 seconds)
[23:24:52] *** Quits: trollixx (sid289131@id-289131.highgate.irccloud.com) (Ping timeout: 256 seconds)
[23:25:07] *** Quits: kwilczynski (sid379192@user/kwilczynski) (Ping timeout: 245 seconds)
[23:25:17] *** Quits: jakesyl (sid56879@id-56879.stonehaven.irccloud.com) (Ping timeout: 258 seconds)
[23:25:30] *** Quits: liam (sid7517@id-7517.brockwell.irccloud.com) (Ping timeout: 240 seconds)
[23:25:30] *** Quits: aarchi (sid486183@id-486183.highgate.irccloud.com) (Ping timeout: 240 seconds)
[23:25:34] *** Quits: ewintr (sid512156@id-512156.stonehaven.irccloud.com) (Ping timeout: 272 seconds)
[23:25:40] *** Quits: mustafa (sid502723@rockylinux/releng/mustafa) (Ping timeout: 258 seconds)
[23:25:54] *** Quits: hhes (sid420846@id-420846.charlton.irccloud.com) (Ping timeout: 240 seconds)
[23:26:03] *** Quits: jsvcycling (sid369784@id-369784.highgate.irccloud.com) (Ping timeout: 258 seconds)
[23:26:14] *** Quits: hsiktas (sid224847@id-224847.tooting.irccloud.com) (Ping timeout: 252 seconds)
[23:26:18] *** Quits: gjnoonan_ (sid95422@id-95422.tooting.irccloud.com) (Ping timeout: 240 seconds)
[23:26:24] *** Quits: lebster (sid17131@id-17131.stonehaven.irccloud.com) (Ping timeout: 276 seconds)
[23:26:42] *** Quits: redlegion (sid429547@id-429547.charlton.irccloud.com) (Ping timeout: 240 seconds)
[23:26:42] *** Quits: bw (sid2730@user/betawaffle) (Ping timeout: 240 seconds)
[23:26:49] *** Joins: itok (sid418430@charlton.irccloud.com)
[23:27:03] *** Quits: psb (sid500598@user/psb) (Read error: Connection reset by peer)
[23:27:03] *** Quits: dozn_ (uid249292@brockwell.irccloud.com) (Ping timeout: 276 seconds)
[23:27:17] *** Joins: hhes (sid420846@charlton.irccloud.com)
[23:27:42] *** Quits: Shrike (sid305680@id-305680.brockwell.irccloud.com) (Ping timeout: 276 seconds)
[23:27:42] *** Quits: qaisjp (sid26374@user/qaisjp) (Ping timeout: 276 seconds)
[23:27:58] *** Quits: telemachus (sid2004@id-2004.brockwell.irccloud.com) (Read error: Connection reset by peer)
[23:28:45] *** Joins: jsvcycling (sid369784@highgate.irccloud.com)
[23:28:59] *** Joins: seds (sid492514@user/seds)
[23:29:07] *** Quits: st3fan (sid43079@id-43079.tooting.irccloud.com) (Ping timeout: 258 seconds)
[23:29:07] *** Quits: vds (sid12483@id-12483.brockwell.irccloud.com) (Ping timeout: 258 seconds)
[23:29:07] *** Quits: Pent (sid313808@id-313808.tooting.irccloud.com) (Ping timeout: 258 seconds)
[23:29:15] *** Joins: kwilczynski (sid379192@user/kwilczynski)
[23:29:19] *** Quits: itok (sid418430@charlton.irccloud.com) (Max SendQ exceeded)
[23:29:30] *** Quits: recursion (sid504862@user/recursion) (Ping timeout: 240 seconds)
[23:29:30] *** Quits: monchi (sid347418@id-347418.charlton.irccloud.com) (Ping timeout: 258 seconds)
[23:29:30] *** Quits: r0bby (r0bby@user/r0bby) (Ping timeout: 258 seconds)
[23:29:40] *** Joins: bw (sid2730@user/betawaffle)
[23:29:41] *** Joins: qaisjp (sid26374@user/qaisjp)
[23:29:44] *** Joins: redlegion (sid429547@id-429547.charlton.irccloud.com)
[23:29:48] *** Joins: itok (sid418430@id-418430.charlton.irccloud.com)
[23:29:49] *** Joins: hsiktas (sid224847@tooting.irccloud.com)
[23:29:51] *** Joins: lauraaah (uid156848@id-156848.charlton.irccloud.com)
[23:29:58] *** Joins: telemachus (sid2004@brockwell.irccloud.com)
[23:29:58] *** Joins: vds (sid12483@id-12483.brockwell.irccloud.com)
[23:29:59] *** Joins: recursion (sid504862@id-504862.charlton.irccloud.com)
[23:30:02] *** Joins: trollixx (sid289131@id-289131.highgate.irccloud.com)
[23:30:12] *** Joins: aarchi (sid486183@highgate.irccloud.com)
[23:30:16] *** Joins: Shrike (sid305680@id-305680.brockwell.irccloud.com)
[23:30:16] *** Joins: liam (sid7517@brockwell.irccloud.com)
[23:30:27] *** Joins: r0bby (r0bby@user/r0bby)
[23:30:33] *** Joins: st3fan (sid43079@id-43079.tooting.irccloud.com)
[23:30:37] *** Joins: dozn_ (uid249292@brockwell.irccloud.com)
[23:30:56] *** Quits: acidsys (~LSD@2.lsd.systems) (Excess Flood)
[23:30:57] *** Joins: monchi (sid347418@id-347418.charlton.irccloud.com)
[23:31:00] *** Joins: Pent (sid313808@id-313808.tooting.irccloud.com)
[23:31:03] *** Joins: psb (sid500598@user/psb)
[23:31:03] *** Joins: gjnoonan_ (sid95422@id-95422.tooting.irccloud.com)
[23:31:20] *** Joins: normen (~normen@p54b3452e.dip0.t-ipconnect.de)
[23:31:26] *** Joins: ewintr (sid512156@stonehaven.irccloud.com)
[23:31:31] *** Joins: LSD (~LSD@2.lsd.systems)
[23:31:57] *** LSD is now known as acidsys
[23:32:30] *** Quits: revolve (~u0_a227@82-132-229-139.dab.02.net) (Read error: Connection reset by peer)
[23:32:41] *** Quits: ninjin (~ninjin@user/ninjin) (Remote host closed the connection)
[23:33:42] *** Joins: ninjin (~ninjin@user/ninjin)
[23:34:24] *** Joins: revolve (~u0_a227@82.132.185.202)
[23:36:18] *** Joins: jakesyl (sid56879@id-56879.stonehaven.irccloud.com)
[23:36:22] *** Joins: hdm (sid500490@aha/hacker/hdm)
[23:36:47] *** Joins: cespare (sid330206@id-330206.stonehaven.irccloud.com)
[23:37:04] *** Joins: mustafa (sid502723@rockylinux/releng/mustafa)
[23:37:20] *** Joins: Manouchehri (sid384576@id-384576.stonehaven.irccloud.com)
[23:37:40] *** Joins: morgabra (sid500580@user/morgabra)
[23:41:08] *** Joins: lebster (sid17131@stonehaven.irccloud.com)
[23:41:11] *** Quits: dcompoze (~dcompoze@cpc97624-walt24-2-0-cust75.13-2.cable.virginm.net) (Quit: WeeChat 3.2)
[23:41:59] *** Joins: jzelinskie (sid17772@user/jzelinskie)
[23:43:29] *** Joins: dcompoze (~dcompoze@cpc97624-walt24-2-0-cust75.13-2.cable.virginm.net)
[23:47:58] *** Joins: davidkrauser (~davidkrau@user/davidkrauser)
[23:50:39] *** Quits: davidkrauser (~davidkrau@user/davidkrauser) (Client Quit)
[23:59:17] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[23:59:33] *** Quits: revolve (~u0_a227@82.132.185.202) (Read error: Connection reset by peer)
