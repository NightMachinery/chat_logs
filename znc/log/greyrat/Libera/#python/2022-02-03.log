[00:00:43] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[00:00:46] *** Quits: nhartman (~Nathan22@206.223.160.26) (Client Quit)
[00:01:08] *** Joins: nhartman (~Nathan22@206.223.160.26)
[00:01:13] *** Quits: HurricaneHarry (~quassel@2a02-a455-9d06-1-55ce-a0a1-1837-cda.fixed6.kpn.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:01:36] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 245 seconds)
[00:01:39] *** Joins: zeudap (~zeudap@45.91.23.141)
[00:01:40] *** Quits: nhartman (~Nathan22@206.223.160.26) (Client Quit)
[00:01:50] *** Joins: nhartman (~SaltHillS@206.223.160.26)
[00:02:20] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[00:03:38] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:04:15] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:8970:f3cf:299f:5cf8) (Quit: pvergain)
[00:04:24] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[00:04:26] *** Joins: ssiyad (~ssiyad@user/ssiyad)
[00:04:43] *** Joins: HurricaneHarry (~quassel@84-85-122-182.fixed.kpn.net)
[00:07:05] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[00:07:49] *** Joins: audiobirb (~audio@user/audio)
[00:07:54] *** Joins: Pickchea (~private@user/pickchea)
[00:08:03] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Ping timeout: 276 seconds)
[00:08:13] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[00:09:31] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[00:09:37] *** Joins: zeudap_ (~zeudap@45.91.23.141)
[00:09:41] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 250 seconds)
[00:09:51] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[00:10:17] *** Quits: zeudap_ (~zeudap@45.91.23.141) (Remote host closed the connection)
[00:10:20] *** Quits: zeudap (~zeudap@45.91.23.141) (Quit: Leaving)
[00:11:23] *** Joins: zeudap (~zeudap@45.91.23.141)
[00:11:52] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8) (Ping timeout: 250 seconds)
[00:12:52] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:14:11] *** Joins: jwisbell35 (~jwisbell3@174-080-085-082.res.spectrum.com)
[00:14:46] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 256 seconds)
[00:15:13] *** Joins: portalrat (~portalrat@user/portalrat)
[00:15:49] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[00:15:57] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[00:16:01] *** Quits: lbalhar (~lbalhar@2a00:102a:5002:8fc3:d083:fcd8:3b0e:8621) (Ping timeout: 256 seconds)
[00:16:09] *** Joins: k0fein (~esmeralda@user/k0fein)
[00:18:35] <k0fein> is it possible to have format specifier as variable? If I want to print something justified to left with field width 15 characters long I just write f'{something:<15}' How can I change this, to make that 15 variable? Original problem: I have a dictionary with string key and value I want to print it out as 2 columns aligned in a way that all values will start at the same position. So I compute longest key,
[00:18:35] <k0fein> add an arbitrary number and print it. For this I need to have justification number as variable and not a hardcoded constant.
[00:18:37] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[00:18:53] *** Quits: cul8r (~cul8r@2601:8c3:4000:b0d0::e65c) (Remote host closed the connection)
[00:19:29] <k0fein> because I don't know prior to finding maximum length of the key, how long it will actually be
[00:19:49] <KirkMcDonald> k0fein: f"{foo:<{width}}"
[00:19:53] <SnoopJ> k0fein, you can nest braces, e.g. `fmt = "<15"; print(f"{42:{fm}}")
[00:19:59] <BrenBarn> you could do a double-format-string substitution
[00:20:00] *** Quits: portalrat (~portalrat@user/portalrat) (Client Quit)
[00:20:32] <SnoopJ> oops, fm instead of fmt >_>
[00:20:33] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 256 seconds)
[00:21:34] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[00:22:14] <k0fein> oo cool! I couldn't believe this could work! many thanks
[00:22:19] <k0fein> *wouldn't believe
[00:22:21] *** Quits: structoha1 (~structoha@gateway/tor-sasl/structoha) (Ping timeout: 276 seconds)
[00:23:23] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:23:27] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:24:45] *** Quits: Trigraph (~dev@68-251-63-205.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 256 seconds)
[00:25:19] *** Joins: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net)
[00:25:35] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[00:26:06] <sgt_chuckles> is a good idea to put try/except block within for loop, or na?
[00:26:10] *** Quits: arinov_ (~arinov@213.194.126.155) (Ping timeout: 250 seconds)
[00:26:21] <SnoopJ> sgt_chuckles, it's a thing that you can do
[00:26:46] <sgt_chuckles> is it advised? are there overheads that can be replicated in the for i should avoid?
[00:26:51] *** Quits: d3sync (~d3sync@62.1.158.240) (Read error: Connection reset by peer)
[00:26:55] *** Quits: greedom (~greedom@p200300de670bd40051fc70826c4f164d.dip0.t-ipconnect.de) ()
[00:27:08] <sgt_chuckles> im using it via a resource handler
[00:27:17] *** Joins: pepper (~pepper@user/pepper)
[00:27:19] *** Joins: d3sync (~d3sync@62.1.158.240)
[00:27:25] <ba> sgt_chuckles: put it at the level where you want an exception handled. Does an exception mean you want to continue processing items after dealing with it? If so, put the try: bit outside the for loop.
[00:27:33] <ba> inside* whoops
[00:27:49] *** Quits: R43 (~Rae@197.184.176.237) (Ping timeout: 256 seconds)
[00:27:55] *** Joins: Hackerpcs (~user@user/hackerpcs)
[00:28:04] <SnoopJ> there isn't really an appreciable overhead unless you enter the exception handler, and then you pay for whatever you do there.
[00:28:30] <sgt_chuckles> okay, so we want the loop to continue even after a possible missing file error
[00:28:40] *** Quits: Hackerpcs (~user@user/hackerpcs) (Max SendQ exceeded)
[00:28:58] <sgt_chuckles> and the except clause just prints out what file it was
[00:29:02] <SnoopJ> then you will need to put the try/except inside the loop. If it's outside the loop, you'll be outside the loop by definition when you end up in the exception handler.
[00:29:40] *** Joins: Hackerpcs (~user@user/hackerpcs)
[00:30:04] *** Quits: km (znc@user/km) (Remote host closed the connection)
[00:30:11] <sgt_chuckles> got it, thanks
[00:31:13] *** Quits: jwisbell35 (~jwisbell3@174-080-085-082.res.spectrum.com) (Quit: Leaving)
[00:31:21] *** Joins: vladoski (~foo@93-36-219-239.ip62.fastwebnet.it)
[00:38:13] *** Quits: deniska (~deniska@user/deniska) (Remote host closed the connection)
[00:41:32] *** Quits: Tempesta (~Tempesta@user/tempesta) (*.net *.split)
[00:41:32] *** Quits: oakridge (~oakridge@user/oakridge) (*.net *.split)
[00:41:32] *** Quits: kinabalu (~kinabalu@about/java/kinabalu) (*.net *.split)
[00:41:32] *** Quits: vince (~vince@75.127.14.76) (*.net *.split)
[00:41:32] *** Quits: Boarders_ (sid425905@id-425905.lymington.irccloud.com) (*.net *.split)
[00:41:32] *** Quits: ThothCastel (sid78195@id-78195.tinside.irccloud.com) (*.net *.split)
[00:41:32] *** Quits: lericson (~lericson@user/lericson) (*.net *.split)
[00:41:32] *** Quits: d1rewolf (sid312924@id-312924.helmsley.irccloud.com) (*.net *.split)
[00:41:32] *** Quits: Evolver (sid32215@user/evolver) (*.net *.split)
[00:41:32] *** Quits: hogarius (hogarius@id-222644.uxbridge.irccloud.com) (*.net *.split)
[00:41:32] *** Quits: bjs (sid190364@user/bjs) (*.net *.split)
[00:41:32] *** Quits: eichin (sid27120@id-27120.tinside.irccloud.com) (*.net *.split)
[00:41:32] *** Quits: jessicara (~shirogits@user/jessicara) (*.net *.split)
[00:41:32] *** Quits: Affliction (affliction@idlerpg/player/affliction) (*.net *.split)
[00:41:32] *** Quits: Spr0cket (sprocket@user/Spr0cket) (*.net *.split)
[00:41:32] *** Quits: Strom (~strom@fedora/strom) (*.net *.split)
[00:41:32] *** Quits: c4017w_ (~c4017@209.52.68.8) (*.net *.split)
[00:41:32] *** Quits: auk (auk@gateway/vpn/protonvpn/auk) (*.net *.split)
[00:41:32] *** Quits: cocalero (~cocalero@200-140-37-88.user3p.brasiltelecom.net.br) (*.net *.split)
[00:41:32] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (*.net *.split)
[00:41:32] *** Quits: whaley (~whaley@cpe-76-182-165-20.sc.res.rr.com) (*.net *.split)
[00:41:32] *** Quits: whatsupdoc (uid509081@hampstead.irccloud.com) (*.net *.split)
[00:41:32] *** Quits: AlanMD (~AlanMD@193.105.140.131) (*.net *.split)
[00:41:32] *** Quits: jiggawatt (~jiggawatt@runs.on.ubuntu.crapping.cricket) (*.net *.split)
[00:41:32] *** Quits: Betal (~Betal@user/betal) (*.net *.split)
[00:41:32] *** Quits: kurfen_ (~kurfen@213.152.188.7) (*.net *.split)
[00:41:32] *** Quits: snalty_ (~Shhh@user/snalty) (*.net *.split)
[00:41:32] *** Quits: michele (~eraser@user/michele) (*.net *.split)
[00:41:32] *** Quits: lxdr (~lxdr@user/lxdr) (*.net *.split)
[00:41:32] *** Quits: SGautam (uid286066@ilkley.irccloud.com) (*.net *.split)
[00:41:32] *** Quits: bloody (~bloody@user/bloody) (*.net *.split)
[00:41:32] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (*.net *.split)
[00:41:32] *** Quits: aslicedbanjo (~aslicedba@host86-160-16-70.range86-160.btcentralplus.com) (*.net *.split)
[00:41:32] *** Quits: darksun (~darksun@user/darksun) (*.net *.split)
[00:41:32] *** Quits: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (*.net *.split)
[00:41:32] *** Quits: cheater (~Username@user/cheater) (*.net *.split)
[00:41:32] *** Quits: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net) (*.net *.split)
[00:41:32] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (*.net *.split)
[00:41:32] *** Quits: mat001 (~mat001@72.28.108.216) (*.net *.split)
[00:41:32] *** Quits: FluffyMask (~masque@user/fluffymask) (*.net *.split)
[00:41:32] *** Quits: kickingvegas (~cchoi@c-67-170-234-150.hsd1.ca.comcast.net) (*.net *.split)
[00:41:32] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (*.net *.split)
[00:41:32] *** Quits: Moosadee (~Moosadee@136.32.155.193) (*.net *.split)
[00:41:32] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (*.net *.split)
[00:41:32] *** Quits: Guest2819 (~lastshell@user/lastshell) (*.net *.split)
[00:41:32] *** Quits: johnjaye (~pi@173.209.65.233) (*.net *.split)
[00:41:32] *** Quits: MootPoot (uid444585@ilkley.irccloud.com) (*.net *.split)
[00:41:32] *** Quits: Sheilong (uid293653@ilkley.irccloud.com) (*.net *.split)
[00:41:32] *** Quits: koopman (sid466269@ilkley.irccloud.com) (*.net *.split)
[00:41:32] *** Quits: angular_mike_ (sid45533@ilkley.irccloud.com) (*.net *.split)
[00:41:32] *** Quits: akk (~akk@75-161-95-245.albq.qwest.net) (*.net *.split)
[00:41:32] *** Quits: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com) (*.net *.split)
[00:41:32] *** Quits: OPK (~OPK@user/opk) (*.net *.split)
[00:41:32] *** Quits: goepsilongo (~goepsilon@cpe-74-73-86-74.nyc.res.rr.com) (*.net *.split)
[00:41:32] *** Quits: humbertowoody (~humbertow@187.202.198.64) (*.net *.split)
[00:41:32] *** Quits: upsala (~zcb@185.213.155.232) (*.net *.split)
[00:41:32] *** Quits: supakeen (~user@python/site-packages/supakeen) (*.net *.split)
[00:41:32] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (*.net *.split)
[00:41:32] *** Quits: millido (~millido@84.210.150.128) (*.net *.split)
[00:41:32] *** Quits: tatarqa (~kli@ip-89-177-122-45.net.upcbroadband.cz) (*.net *.split)
[00:41:32] *** Quits: Lunatrius (~Lunatrius@77.38.76.5) (*.net *.split)
[00:41:32] *** Quits: someuser (~user@197.54.43.98) (*.net *.split)
[00:41:32] *** Quits: nickel8448 (~rahulwadh@147.80.76.34.bc.googleusercontent.com) (*.net *.split)
[00:41:32] *** Quits: tomg_ (~tomg@user/tomg) (*.net *.split)
[00:41:32] *** Quits: sale (~sale@ypocit.initech.link) (*.net *.split)
[00:41:32] *** Quits: Xat` (~Xat`@ns300217.ip-91-121-29.eu) (*.net *.split)
[00:41:32] *** Quits: Klinda (~superleag@user/klinda) (*.net *.split)
[00:41:32] *** Quits: manti7 (~manti7@176.10.104.94) (*.net *.split)
[00:41:33] *** Quits: xkuru (~xkuru@user/xkuru) (*.net *.split)
[00:41:33] *** Quits: justyb11 (~justyb@64.253.212.72) (*.net *.split)
[00:41:33] *** Quits: kaivai_ (~kaivai@user/kaivai) (*.net *.split)
[00:41:33] *** Quits: pabed (~Thunderbi@89.37.15.34) (*.net *.split)
[00:41:33] *** Quits: zaz\ (~zaz@poneybl.eu) (*.net *.split)
[00:41:33] *** Quits: moto (~moto@user/moto) (*.net *.split)
[00:41:33] *** Quits: djhankb (~djhankb@208.113.164.68) (*.net *.split)
[00:41:33] *** Quits: Trashlord (~trash@user/trashlord) (*.net *.split)
[00:41:33] *** Quits: Viewday11 (~Viewday@61.141.126.127) (*.net *.split)
[00:41:33] *** Quits: analoq (~yashi@user/dies) (*.net *.split)
[00:41:33] *** Quits: Vision (~Vision@097-087-115-181.res.spectrum.com) (*.net *.split)
[00:41:33] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (*.net *.split)
[00:41:33] *** Quits: \mSg (mSg@user/msg/x-0285936) (*.net *.split)
[00:41:33] *** Quits: novapy (~chronos@12.71.10.20) (*.net *.split)
[00:41:33] *** Quits: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com) (*.net *.split)
[00:41:33] *** Quits: Wulf (~Wulf@user/wulf) (*.net *.split)
[00:41:33] *** Quits: Juhaz (~juhaz@hilla.kapsi.fi) (*.net *.split)
[00:41:33] *** Quits: gnoirzox (~gnoirzox@178.170.103.136) (*.net *.split)
[00:41:33] *** Quits: dthpulse (~quassel@podciarou.sk) (*.net *.split)
[00:41:33] *** Quits: mossman93 (~quassel@user/mossman93) (*.net *.split)
[00:41:33] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (*.net *.split)
[00:41:33] *** Quits: fikran (~fikran@user/fikran) (*.net *.split)
[00:41:33] *** Quits: ttys000 (~ttys000@user/ttys000) (*.net *.split)
[00:41:33] *** Quits: synic (~squish@li74-118.members.linode.com) (*.net *.split)
[00:41:33] *** Quits: KombuchaKip (~kip@192.252.230.5) (*.net *.split)
[00:41:33] *** Quits: sleepingforest (~sleepingf@pool-96-235-63-235.pitbpa.east.verizon.net) (*.net *.split)
[00:41:33] *** Quits: waynew (~wayne@user/waynew) (*.net *.split)
[00:41:33] *** Quits: hyiltiz (~quassel@31.220.5.250) (*.net *.split)
[00:41:33] *** Quits: Phase (~phase@user/phase) (*.net *.split)
[00:41:33] *** Quits: launchd (~launchd@bitbot/launchd) (*.net *.split)
[00:41:33] *** Quits: astiak (~astiak@ownage.biz) (*.net *.split)
[00:41:33] *** Quits: Speed2u (~Speed2u@bnc.speed2u.nu) (*.net *.split)
[00:41:33] *** Quits: sokan (~sokan@85.73.227.251) (*.net *.split)
[00:41:33] *** Quits: w0rp (~w0rp@w0rp.com) (*.net *.split)
[00:41:33] *** Quits: agireud (~agireud@user/agireud) (*.net *.split)
[00:41:33] *** Quits: RiFo (~RiFo@user/rifo) (*.net *.split)
[00:41:33] *** Quits: dude-x_ (~textual@72.76.74.165) (*.net *.split)
[00:41:33] *** Quits: Roedy (Roedy@user/roedy) (*.net *.split)
[00:41:33] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (*.net *.split)
[00:41:33] *** Quits: seabre (~seabre@user/seabre) (*.net *.split)
[00:41:33] *** Quits: treefrob (~treefrob@p57a96ba4.dip0.t-ipconnect.de) (*.net *.split)
[00:41:33] *** Quits: rwbrambler (~Thunderbi@65.183.138.202) (*.net *.split)
[00:41:33] *** Quits: towel (~towel@user/towel) (*.net *.split)
[00:41:33] *** Quits: onur (~onur@user/onur) (*.net *.split)
[00:41:33] *** Quits: Duckle (~Duckle@user/duckle) (*.net *.split)
[00:41:33] *** Quits: Leonarbro (~Leonet@user/leonarbro) (*.net *.split)
[00:41:33] *** Quits: WayToDoor (~WayToDoor@user/waytodoor) (*.net *.split)
[00:41:33] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (*.net *.split)
[00:41:33] *** Quits: erry (~erry@errietta.me) (*.net *.split)
[00:41:33] *** Quits: infernix (~nix@spirit.infernix.net) (*.net *.split)
[00:41:33] *** Quits: axisys (~axisys@ec2-52-207-123-244.compute-1.amazonaws.com) (*.net *.split)
[00:41:33] *** Quits: MrC (~Ben@mrbenc.net) (*.net *.split)
[00:41:33] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (*.net *.split)
[00:41:33] *** Quits: libussa (~libussa@libussa.net) (*.net *.split)
[00:41:33] *** Quits: georgeisbot (~georgeisb@8.12.22.9) (*.net *.split)
[00:41:33] *** Quits: vbgunz (~vbgunz@35.141.71.47) (*.net *.split)
[00:41:33] *** Quits: SlicerDicer68 (~SlicerDic@107-208-180-225.lightspeed.mdsnwi.sbcglobal.net) (*.net *.split)
[00:41:33] *** Quits: samuelbernardo (~samuelber@nata01.lip.pt) (*.net *.split)
[00:41:33] *** Quits: iob (~iob@nat1.prg.suse.com) (*.net *.split)
[00:41:33] *** Quits: cursey (~cursey@user/cursey) (*.net *.split)
[00:41:33] *** Quits: mawk (~mawk@wireguard/contributor/mawk) (*.net *.split)
[00:41:33] *** Quits: Nnnavd (~Nnavd@ec2-34-220-224-214.us-west-2.compute.amazonaws.com) (*.net *.split)
[00:41:33] *** Quits: Joel (~jjshoe@user/joel) (*.net *.split)
[00:41:33] *** Quits: crunchy_david (~david@pgguru.net) (*.net *.split)
[00:41:33] *** Quits: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net) (*.net *.split)
[00:41:33] *** Quits: Mogget (~Mogget@vogon02.moshwire.com) (*.net *.split)
[00:41:33] *** Quits: tpr (~tpr@user/tpr) (*.net *.split)
[00:41:33] *** Quits: Pici (~bnrubin@li1014-36.members.linode.com) (*.net *.split)
[00:41:33] *** Quits: ghormoon (~ghormoon@ghorland.net) (*.net *.split)
[00:41:33] *** Quits: swistak (~swistak@185.21.216.141) (*.net *.split)
[00:41:33] *** Quits: lumgwada (~lumgwada@user/lumgwada) (*.net *.split)
[00:41:33] *** Quits: kuahara (kuahara@072-182-135-032.res.spectrum.com) (*.net *.split)
[00:41:33] *** Quits: Dotz0cat (~Dotz0cat@h55.84.187.173.dynamic.ip.windstream.net) (*.net *.split)
[00:41:33] *** Quits: wilk (~wilk@user/wilk) (*.net *.split)
[00:41:33] *** Quits: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com) (*.net *.split)
[00:41:33] *** Quits: reset (~reset@user/reset) (*.net *.split)
[00:41:33] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (*.net *.split)
[00:41:33] *** Quits: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net) (*.net *.split)
[00:41:33] *** Quits: dskull (~dskull@user/dskull) (*.net *.split)
[00:41:33] *** Quits: brentaarnold (~brentaarn@24.112.58.14) (*.net *.split)
[00:41:33] *** Quits: kcrk (~kcrk@user/kcrk) (*.net *.split)
[00:41:33] *** Quits: martums5 (~martums@user/martums) (*.net *.split)
[00:41:33] *** Quits: fbiagent (~fbiagent@user/fbiagent) (*.net *.split)
[00:41:33] *** Quits: lifefir31 (~lifefir3@152.37.120.101) (*.net *.split)
[00:41:33] *** Quits: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com) (*.net *.split)
[00:41:33] *** Quits: justGhost (~justache@user/justache) (*.net *.split)
[00:41:33] *** Quits: mmalter (~mmalter@88.126.10.237) (*.net *.split)
[00:41:33] *** Quits: jjasghar (~jjasghar@idlerpg/player/jjasghar) (*.net *.split)
[00:41:33] *** Quits: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt) (*.net *.split)
[00:41:33] *** Quits: voidcat (~voidcat@user/voidcat) (*.net *.split)
[00:41:33] *** Quits: mcglk (~mcglk@131.191.49.120) (*.net *.split)
[00:41:33] *** Quits: Kraus (~quassel@075-141-246-250.res.spectrum.com) (*.net *.split)
[00:41:33] *** Quits: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (*.net *.split)
[00:41:33] *** Quits: arooni (~arooni@li1062-244.members.linode.com) (*.net *.split)
[00:41:33] *** Quits: gerty (~gerty@user/gerty) (*.net *.split)
[00:41:33] *** Quits: Forkk (~forkk@li926-228.members.linode.com) (*.net *.split)
[00:41:33] *** Quits: sunyour (~sunyour@129.226.182.99) (*.net *.split)
[00:41:33] *** Quits: DXR (~lyrical@194.219.251.132) (*.net *.split)
[00:41:33] *** Quits: ThomasJ (~ThomasJ@user/thomasj) (*.net *.split)
[00:41:33] *** Quits: dodo (~dodo@user/dodo) (*.net *.split)
[00:41:33] *** Quits: Tomassi-1 (~Tomassi-1@ec2-16-170-233-250.eu-north-1.compute.amazonaws.com) (*.net *.split)
[00:41:33] *** Quits: coc0nut (~coc0nut@user/coc0nut) (*.net *.split)
[00:41:33] *** Quits: Neopolitan (~tn5421@45.76.61.24) (*.net *.split)
[00:41:33] *** Quits: Dan39 (~dan@user/dan39) (*.net *.split)
[00:41:33] *** Quits: cryocaustik7 (~cryocaust@user/cryocaustik) (*.net *.split)
[00:41:33] *** Quits: purplex (~purplex@user/purplex) (*.net *.split)
[00:41:34] *** Quits: greatgatsby__ (~greatgats@bras-base-toroon0411w-grc-52-142-114-106-7.dsl.bell.ca) (*.net *.split)
[00:41:34] *** Quits: scoobydoo (~scooby@user/scoobydoo) (*.net *.split)
[00:41:34] *** Quits: HvszrStykp (~X@81.171.62.84) (*.net *.split)
[00:41:34] *** Quits: naari (~naari@user/naari) (*.net *.split)
[00:41:34] *** Quits: xakan (~xakan@pnmx.zdx.fr) (*.net *.split)
[00:41:34] *** Quits: mage (~julien@orval.bbpf.belspo.be) (*.net *.split)
[00:41:34] *** Quits: kungp (~kungp@h-46-59-2-200.A230.priv.bahnhof.se) (*.net *.split)
[00:41:34] *** Quits: kenwoodfox (~quassel@user/kenwoodfox) (*.net *.split)
[00:41:34] *** Quits: dsp00 (~dsp00@20.79.249.135) (*.net *.split)
[00:41:34] *** Quits: jiffe (~jiffe@47-220-182-140.gtwncmkt04.res.dyn.suddenlink.net) (*.net *.split)
[00:41:34] *** Quits: ethoxy (~root@bison.alphaw0lf.xyz) (*.net *.split)
[00:41:34] *** Quits: _val_ (~valentin@82-169-14-137.biz.kpn.net) (*.net *.split)
[00:41:34] *** Quits: queue- (~nerd@user/queue/x-7267619) (*.net *.split)
[00:41:34] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (*.net *.split)
[00:41:34] *** Quits: Melon_Bread (~Melon_Bre@li958-238.members.linode.com) (*.net *.split)
[00:41:34] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (*.net *.split)
[00:41:34] *** Quits: pr3d4t0r (~zhenya01@user/pr3d4t0r) (*.net *.split)
[00:41:34] *** Quits: DesolateHypertex (~DesolateH@static.213-133-103-49.clients.your-server.de) (*.net *.split)
[00:41:34] *** Quits: dminuoso (~dminuoso@user/dminuoso) (*.net *.split)
[00:41:34] *** Quits: Spydar007 (~spydar007@user/spydar007) (*.net *.split)
[00:41:34] *** Quits: simplicity (~yti@user/simplicity) (*.net *.split)
[00:41:34] *** Quits: nigelb (~nigel@zeus.nigelb.me) (*.net *.split)
[00:41:34] *** Quits: gjvc (~gjvc@user/gjvc) (*.net *.split)
[00:41:34] *** Quits: ecool (~ecool@ecool.dev) (*.net *.split)
[00:41:34] *** Quits: lidless (~lidless@user/lidless) (*.net *.split)
[00:41:34] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (*.net *.split)
[00:41:34] *** Quits: n1000 (~n1000@user/n1000) (*.net *.split)
[00:41:34] *** Quits: stella (~aoei@nethackscoreboard/aoei) (*.net *.split)
[00:41:34] *** Quits: Helle (~helle@45.83.235.185) (*.net *.split)
[00:41:34] *** Quits: meejah (~meejah@rutas.meejah.ca) (*.net *.split)
[00:41:34] *** Quits: dlam (~dlam@dlam.me) (*.net *.split)
[00:41:34] *** Quits: potatosal (~salad@user/potatosal) (*.net *.split)
[00:41:34] *** Quits: hrm (~hrm@nimbus.harmtemolder.nl) (*.net *.split)
[00:41:34] *** Quits: kolcon (~kolcon@v.kolouch.org) (*.net *.split)
[00:41:34] *** Quits: NOTevil (~notevil@user/notevil) (*.net *.split)
[00:41:34] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (*.net *.split)
[00:41:34] *** Quits: peanuter_ (~peanuter@static.190.220.201.138.clients.your-server.de) (*.net *.split)
[00:41:34] *** Quits: streety (~streety@li761-24.members.linode.com) (*.net *.split)
[00:41:34] *** Quits: achilleas (~ach@user/achilleas) (*.net *.split)
[00:41:34] *** Quits: ntdll_ (~ntdll@shion.saiban.me) (*.net *.split)
[00:41:34] *** Quits: Dantali0n (~Dantali0n@251-228-138-45.connected.by.freedominter.net) (*.net *.split)
[00:41:34] *** Quits: ldericher (~LDer@pantalaimon.yavook.de) (*.net *.split)
[00:41:34] *** Quits: lantech19446 (~lantech19@144.202.10.138) (*.net *.split)
[00:41:34] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (*.net *.split)
[00:41:34] *** Quits: AnimalFarmPig (~quassel@user/animalfarmpig) (*.net *.split)
[00:41:34] *** Quits: han-` (~han`@user/han-/x-0887595) (*.net *.split)
[00:41:34] *** Quits: tinystoat (~squeek@user/tinystoat) (*.net *.split)
[00:41:34] *** Quits: nickodd (~nickodd@user/nickodd) (*.net *.split)
[00:41:34] *** Quits: Nei (~ailin@openSUSE/member/ailin-nemui) (*.net *.split)
[00:41:34] *** Quits: asix (~Anders@user/asix) (*.net *.split)
[00:41:34] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (*.net *.split)
[00:41:34] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (*.net *.split)
[00:41:34] *** Quits: HaMsTeRs (~Thunderbi@210.3.213.4) (*.net *.split)
[00:41:34] *** Quits: azidhaka (uid211322@user/azidhaka) (*.net *.split)
[00:41:34] *** Quits: jstein (~jstein@gentoo/developer/jstein) (*.net *.split)
[00:41:34] *** Quits: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com) (*.net *.split)
[00:41:34] *** Quits: emf (~emf@2620:10d:c090:400::5:b0fe) (*.net *.split)
[00:41:34] *** Quits: finsternis (~X@23.226.237.192) (*.net *.split)
[00:41:34] *** Quits: MrFantastik (~f@2607:f598:bbda:270:af90:c2f0:20b5:e42e) (*.net *.split)
[00:41:34] *** Quits: lakrass (~lakrass@user/lakrass) (*.net *.split)
[00:41:34] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (*.net *.split)
[00:41:34] *** Quits: sgen (~sgen@2607:fea8:7ce1:c8e0:f141:ba0b:da0:3c4d) (*.net *.split)
[00:41:34] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (*.net *.split)
[00:41:34] *** Quits: yourfate (~yourfate@cabal.yourfate.org) (*.net *.split)
[00:41:34] *** Quits: bn_work (uid268505@id-268505.uxbridge.irccloud.com) (*.net *.split)
[00:41:34] *** Quits: stdout (~stdout@2605:ab80:b000:7202:3e12:af82:936c:2ff6) (*.net *.split)
[00:41:34] *** Quits: gusto (~Augustus@109.255.100.54) (*.net *.split)
[00:41:34] *** Quits: cdown (~cdown@163.114.131.1) (*.net *.split)
[00:41:34] *** Quits: slav0nic (slav0nic@python.su) (*.net *.split)
[00:41:34] *** Quits: bancroft (~bancroft@user/bancroft) (*.net *.split)
[00:41:34] *** Quits: daidoji (~daidoji@104-52-250-5.lightspeed.gnvlsc.sbcglobal.net) (*.net *.split)
[00:41:34] *** Quits: beco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73) (*.net *.split)
[00:41:34] *** Quits: JordiGH (~jordi@user/jordigh) (*.net *.split)
[00:41:34] *** Quits: Ringtailed-Fox (~BoingBoin@2001:1970:5d2a:c500:b1d7:e341:3a4a:bbf6) (*.net *.split)
[00:41:34] *** Quits: petemc (~pete@vps-80fad31a.vps.ovh.net) (*.net *.split)
[00:41:34] *** Quits: plastico (~plastico@neomutt/plastico) (*.net *.split)
[00:41:34] *** Quits: waveform (~quassel@waveform.plus.com) (*.net *.split)
[00:41:34] *** Quits: kosh (~kosh@user/kosh) (*.net *.split)
[00:41:34] *** Quits: dibas (~dibas@user/dibas) (*.net *.split)
[00:41:34] *** Quits: colo_work (~colo_work@046125249113.public.t-mobile.at) (*.net *.split)
[00:41:34] *** Quits: emerent (~quassel@p200300cd5704438cba27ebfffed28a59.dip0.t-ipconnect.de) (*.net *.split)
[00:41:34] *** Quits: CodeGeek (~codegeek@about/java/CodeGeek) (*.net *.split)
[00:41:34] *** Quits: adeliktas (~adeliktas@i59F5F5AE.versanet.de) (*.net *.split)
[00:41:35] *** Quits: jancoow (~jancoow@user/jancoow) (*.net *.split)
[00:41:35] *** Quits: brabrax (~brabrax@user/brabrax) (*.net *.split)
[00:41:35] *** Quits: HenryG (~quassel@2607:5300:201:3000::f63) (*.net *.split)
[00:41:35] *** Quits: vlm (~vlm@user/vlm) (*.net *.split)
[00:41:35] *** Quits: kmh_ (~kmh@94.31.106.215) (*.net *.split)
[00:41:35] *** Quits: Linkandzelda (~Linkandze@cloudirc.laz.li) (*.net *.split)
[00:41:35] *** Quits: aphysically (~aphysical@user/aphysically) (*.net *.split)
[00:41:35] *** Quits: mdemo (~mdemo@user/mdemo22) (*.net *.split)
[00:41:35] *** Quits: FunkyELF (~FunkyELF@76-217-82-15.lightspeed.chrlnc.sbcglobal.net) (*.net *.split)
[00:41:35] *** Quits: ubert (~Thunderbi@141.98.252.252) (*.net *.split)
[00:41:35] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (*.net *.split)
[00:41:35] *** Quits: Peng_ (~mnordhoff@user/Peng) (*.net *.split)
[00:41:35] *** Quits: Fossil (~Fossil@2a03:b0c0:0:1010::398:b001) (*.net *.split)
[00:41:35] *** Quits: susam (~susam@user/susam) (*.net *.split)
[00:41:35] *** Quits: skipper (~whatsupbo@user/scobydoo) (*.net *.split)
[00:41:35] *** Quits: baakeydow (~baake@2001:41d0:203:b12c::) (*.net *.split)
[00:41:35] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:117c:703e:db5f:c029) (*.net *.split)
[00:41:35] *** Quits: alxndr (~alexander@ybti.net) (*.net *.split)
[00:41:35] *** Quits: kehn (quassel@2600:3c03::f03c:92ff:fe9a:ad08) (*.net *.split)
[00:41:35] *** Quits: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (*.net *.split)
[00:41:35] *** Quits: GreaseMonkey (greaser@user/greasemonkey) (*.net *.split)
[00:41:35] *** Quits: jw_dungeon (~quassel@2601:44:4380:4a10:4587:3637:b23f:ed34) (*.net *.split)
[00:41:35] *** Quits: hays (rootvegeta@fsf/member/hays) (*.net *.split)
[00:41:35] *** Quits: uuair (~quassel@user/uuair) (*.net *.split)
[00:41:35] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::f824) (*.net *.split)
[00:41:35] *** Quits: vakera_pingveno_ (~dan@2600:1700:21f9:b150::40) (*.net *.split)
[00:41:35] *** Quits: truckasaurus (sid457088@id-457088.helmsley.irccloud.com) (*.net *.split)
[00:41:35] *** Quits: frodl (sid527064@user/frodl) (*.net *.split)
[00:41:35] *** Quits: Fingel (fingel@user/fingel) (*.net *.split)
[00:41:35] *** Quits: Pr0phet (sid505706@id-505706.hampstead.irccloud.com) (*.net *.split)
[00:41:35] *** Quits: ravioli_ (sid83460@donger/pasta) (*.net *.split)
[00:41:35] *** Quits: josh_h (sid301834@id-301834.helmsley.irccloud.com) (*.net *.split)
[00:41:35] *** Quits: bloodElk (~bloodElk@user/bloodelk) (*.net *.split)
[00:41:35] *** Quits: nhanb_ (522d4a25ea@2604:bf00:561:2000::13b) (*.net *.split)
[00:41:35] *** Quits: ztrawhcse (3d1f427b6a@archlinux/bugwrangler/eschwartz) (*.net *.split)
[00:41:35] *** Quits: gildarts (16abab341f@user/gildarts) (*.net *.split)
[00:41:35] *** Quits: saribro (~swinnenb@user/swinnenb) (*.net *.split)
[00:41:35] *** Quits: Fl1pFl0p (~FlipFlop@user/fl1pfl0p) (*.net *.split)
[00:41:35] *** Quits: Furai (~Furai@furai.pl) (*.net *.split)
[00:41:35] *** Quits: dre (~dre@2001:8003:c932:c301:77c0:cff4:f6dd:6abf) (*.net *.split)
[00:41:35] *** Quits: oprypin (~irc@pryp.in) (*.net *.split)
[00:41:35] *** Quits: gossie (~gossie@2001:1c02:11e:c700:4a28:456f:cfe0:5c8e) (*.net *.split)
[00:41:35] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (*.net *.split)
[00:41:35] *** Quits: jtanner (sid194399@id-194399.helmsley.irccloud.com) (*.net *.split)
[00:41:35] *** Quits: sidmitra (sid17533@id-17533.tinside.irccloud.com) (*.net *.split)
[00:41:35] *** Quits: CrtxReavr (crtxreavr@shodan.trioptimum.com) (*.net *.split)
[00:41:35] *** Quits: greyblue9 (sid500829@id-500829.ilkley.irccloud.com) (*.net *.split)
[00:41:35] *** Quits: coldmountain (sid484352@id-484352.helmsley.irccloud.com) (*.net *.split)
[00:41:35] *** Quits: dunc (sid16@id-16.uxbridge.irccloud.com) (*.net *.split)
[00:41:35] *** Quits: Hobbyboy (Hobbyboy@hobbyboy.co.uk) (*.net *.split)
[00:41:35] *** Quits: BtbN (btbn@ffmpeg/developer/btbn) (*.net *.split)
[00:41:35] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (*.net *.split)
[00:41:35] *** Quits: mbrndtgn (~mbrndtgn@undecidable.de) (*.net *.split)
[00:41:35] *** Quits: Warped (~Warped@user/warped) (*.net *.split)
[00:41:35] *** Quits: trainsley69_ (~trainsley@c188-148-14-166.bredband.tele2.se) (*.net *.split)
[00:41:35] *** Quits: chowmeined (~chowmeine@user/chowmeined) (*.net *.split)
[00:41:35] *** Quits: dsc_ (~dsc@70.68.10.185.ro.ovo.sc) (*.net *.split)
[00:41:35] *** Quits: FastJack (~fastjack@ip-078-094-022-014.um19.pools.vodafone-ip.de) (*.net *.split)
[00:41:35] *** Quits: waxfire6 (~waxfire@65.119.2.240) (*.net *.split)
[00:41:35] *** Quits: digilink (~digilink@user/digilink) (*.net *.split)
[00:41:35] *** Quits: xxyxx (~none@ip-037-024-160-145.um08.pools.vodafone-ip.de) (*.net *.split)
[00:41:35] *** Quits: SuperLag (~akulbe@user/superlag) (*.net *.split)
[00:41:35] *** Quits: adeliktas7 (~adeliktas@v15153.1blu.de) (*.net *.split)
[00:41:35] *** Quits: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca) (*.net *.split)
[00:41:35] *** Quits: sabet (~sabet@user/sabet) (*.net *.split)
[00:41:35] *** Quits: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net) (*.net *.split)
[00:41:35] *** Quits: Omega037 (~Omega037@047-233-057-109.res.spectrum.com) (*.net *.split)
[00:41:35] *** Quits: ndim (hun@moooo.n-dimensional.de) (*.net *.split)
[00:41:35] *** Quits: qwedfg_ (~qwedfg@user/qwedfg) (*.net *.split)
[00:41:35] *** Quits: gegensch1in (~james@ec2-54-210-169-253.compute-1.amazonaws.com) (*.net *.split)
[00:41:35] *** Quits: dupl0x (~duplox@137.220.127.235) (*.net *.split)
[00:41:35] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (*.net *.split)
[00:41:35] *** Quits: jbeimler_ (~quassel@75.183.82.166) (*.net *.split)
[00:41:35] *** Quits: rexbinary (~rexbinary@user/rexbinary) (*.net *.split)
[00:41:35] *** Quits: rovanion (~rovanion@h-46-59-13-236.A163.priv.bahnhof.se) (*.net *.split)
[00:41:35] *** Quits: visl (visl@user/visl) (*.net *.split)
[00:41:35] *** Quits: MrAureliusR (~MrAureliu@user/mraureliusr) (*.net *.split)
[00:41:35] *** Quits: zmotaj (~zmotaj@user/zmotaj) (*.net *.split)
[00:41:35] *** Quits: bidouille (~user_name@trois.potager.org) (*.net *.split)
[00:41:35] *** Quits: Throgkt (~Throgkt@user/throgkt) (*.net *.split)
[00:41:35] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (*.net *.split)
[00:41:35] *** Quits: lawt (~lawt@2601:200:8101:f140:dea6:32ff:fea1:adf9) (*.net *.split)
[00:41:35] *** Quits: bambams (~bambams@user/bambams) (*.net *.split)
[00:41:35] *** Quits: edr (~edr@user/edr) (*.net *.split)
[00:41:35] *** Quits: grym (~grym@user/grym) (*.net *.split)
[00:41:35] *** Quits: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4) (*.net *.split)
[00:41:35] *** Quits: Alan (~alan@user/alan) (*.net *.split)
[00:41:35] *** Quits: ATAD (~ATAD@user/atad) (*.net *.split)
[00:41:35] *** Quits: NoxTurminal8 (~Noxturmin@user/noxturminal) (*.net *.split)
[00:41:35] *** Quits: davef (dave@user/davef) (*.net *.split)
[00:41:35] *** Quits: lambda (~weechat@cyka.blyat.vodka) (*.net *.split)
[00:41:35] *** Quits: fury (uid193779@id-193779.helmsley.irccloud.com) (*.net *.split)
[00:41:35] *** Quits: fluter (~fluter@user/fluter) (*.net *.split)
[00:41:35] *** Quits: Abrax (~Abrax@user/abrax) (*.net *.split)
[00:41:35] *** Quits: Ninja3047 (~Ninja3047@3047.ninja) (*.net *.split)
[00:41:35] *** Quits: Myst3 (~Myst@user/myst) (*.net *.split)
[00:41:35] *** Quits: jessicant (~jessica@static.172.234.251.148.clients.your-server.de) (*.net *.split)
[00:41:35] *** Quits: nochi (~nochi@2a01:4f8:10b:3074::4) (*.net *.split)
[00:41:35] *** Quits: EtherMan (~quassel@inception.debokred.se) (*.net *.split)
[00:41:35] *** Quits: nicoz- (unixlab@ubuntu/member/nicoz) (*.net *.split)
[00:41:35] *** Quits: peterandre (peterandre@2605:6400:c847:1524::4251) (*.net *.split)
[00:41:35] *** Quits: graingert (sid128301@id-128301.tinside.irccloud.com) (*.net *.split)
[00:41:35] *** Quits: akimbo533 (~akimbo@customer-145-40-27-9.stosn.net) (*.net *.split)
[00:41:35] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (*.net *.split)
[00:41:36] *** Quits: wereii (~wereii@37.205.14.89) (*.net *.split)
[00:41:36] *** Quits: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC) (*.net *.split)
[00:41:36] *** Quits: ephemer0l (~ephemer0l@organizedmagnetism.com) (*.net *.split)
[00:41:36] *** Quits: DK3 (~DK3@user/DK3) (*.net *.split)
[00:41:36] *** Quits: tf (~tf@user/tf) (*.net *.split)
[00:41:36] *** Quits: giesen (~ggiesen@ego.giesen.me) (*.net *.split)
[00:41:36] *** Quits: Common (~Common@096-033-221-075.res.spectrum.com) (*.net *.split)
[00:41:36] *** Quits: mixfix41 (~homefame@user/mixfix41) (*.net *.split)
[00:41:36] *** Quits: niv (~niv@limbo.cypherpunks.io) (*.net *.split)
[00:41:36] *** Quits: cdleonard (~cdleonard@ec2-52-70-55-94.compute-1.amazonaws.com) (*.net *.split)
[00:41:36] *** Quits: vigumnov (~victori@cpe-76-89-139-69.socal.res.rr.com) (*.net *.split)
[00:41:36] *** Quits: seoul_man (~meh@user/seoul-man/x-5066766) (*.net *.split)
[00:41:36] *** Quits: introom (introom@2600:3c01::f03c:92ff:fea3:2cf) (*.net *.split)
[00:41:36] *** Quits: unyu (~pyon@user/pyon) (*.net *.split)
[00:41:36] *** Quits: nfc_ (nfc@tilde.institute) (*.net *.split)
[00:41:36] *** Quits: OverCoder (~OverCoder@user/overcoder) (*.net *.split)
[00:41:36] *** Quits: fruitypunk (~user@2a01:7c8:aaaa:12:5054:ff:fe69:1df9) (*.net *.split)
[00:41:36] *** Quits: earthbreaker (earthbreak@2600:3c03::f03c:91ff:fece:9070) (*.net *.split)
[00:41:36] *** Quits: haasn (~nand@haasn.dev) (*.net *.split)
[00:41:36] *** Quits: mgedmin (~mg@user/mgedmin) (*.net *.split)
[00:41:36] *** Quits: avu (~jan@user/avu) (*.net *.split)
[00:41:36] *** Quits: sjk (~sjk@user/sjk) (*.net *.split)
[00:41:36] *** Quits: ST47 (~ST47@wikimedia/st47) (*.net *.split)
[00:41:36] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (*.net *.split)
[00:41:36] *** Quits: k_sze (~k_sze@mail2.kalunite.net) (*.net *.split)
[00:41:36] *** Quits: Kebianizao (~Kebianiza@188.127.160.11) (*.net *.split)
[00:41:36] *** Quits: dharrigan (~dharrigan@user/dharrigan) (*.net *.split)
[00:41:36] *** Quits: Retr0id (~Retr0id@user/retr0id) (*.net *.split)
[00:41:36] *** Quits: luciusf1 (~luciusf@46.23.90.165) (*.net *.split)
[00:41:36] *** Quits: lew (c292bc13c9@2604:bf00:561:2000::27e) (*.net *.split)
[00:41:36] *** Quits: mrHedgehog0 (9658dbe103@2604:bf00:561:2000::a5) (*.net *.split)
[00:41:36] *** Quits: fluffyballoon (45ce440a48@2604:bf00:561:2000::e2) (*.net *.split)
[00:41:36] *** Quits: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf) (*.net *.split)
[00:41:36] *** Quits: akspecs (00cc8321af@sourcehut/user/akspecs) (*.net *.split)
[00:41:36] *** Quits: srstevenson (b46bf53c49@2604:bf00:561:2000::f3) (*.net *.split)
[00:41:36] *** Quits: sliwkr (1aac56ad72@2604:bf00:561:2000::251) (*.net *.split)
[00:41:36] *** Quits: colbyhub (411e4f2740@2604:bf00:561:2000::2de) (*.net *.split)
[00:41:36] *** Quits: Hummer12007 (061e0434dc@2604:bf00:561:2000::16) (*.net *.split)
[00:41:36] *** Quits: akelly (24aca7a63b@2604:bf00:561:2000::152) (*.net *.split)
[00:41:36] *** Quits: srhm (dda3db84b5@user/srhm) (*.net *.split)
[00:41:36] *** Quits: andrea (3f138254b4@2604:bf00:561:2000::38) (*.net *.split)
[00:41:36] *** Quits: sharktamer (9bafe1e1bb@2604:bf00:561:2000::17) (*.net *.split)
[00:41:36] *** Quits: spiderman (spiderman@spiderman.shelltalk.net) (*.net *.split)
[00:41:36] *** Quits: krjst (~krjst@2604:a880:800:c1::16b:8001) (*.net *.split)
[00:41:36] *** Quits: ormiret (sid314108@id-314108.lymington.irccloud.com) (*.net *.split)
[00:41:36] *** Quits: FLHerne (flh@flherne.uk) (*.net *.split)
[00:41:36] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (*.net *.split)
[00:41:36] *** Quits: duoi (~duoi@user/duoi) (*.net *.split)
[00:41:36] *** Quits: lewisje (~lewisje@72.49.207.113) (*.net *.split)
[00:41:36] *** Quits: cyberjunkie (~cyberjunk@wireguard/tunneler/cyberjunkie) (*.net *.split)
[00:41:36] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (*.net *.split)
[00:41:36] *** Quits: H4Z3 (~H4ZE@165.227.36.29) (*.net *.split)
[00:41:36] *** Quits: vishwin (~brioux@2001:470:1f07:302::1) (*.net *.split)
[00:41:36] *** Quits: Macuser (Macuser@here.for-the.chat) (*.net *.split)
[00:41:36] *** Quits: Andrew (andrew@andrewyu.org) (*.net *.split)
[00:41:36] *** Quits: Phoebus (sid422845@id-422845.ilkley.irccloud.com) (*.net *.split)
[00:41:36] *** Quits: be3uykpy (~ubuntu@141.144.233.89) (*.net *.split)
[00:41:36] *** Quits: EyeOfJupiter (~EyeOfJ@user/eyeofjupiter) (*.net *.split)
[00:41:36] *** Quits: Ninpo (~Ninpo@user/ninpo) (*.net *.split)
[00:41:36] *** Quits: ixjlyons (kenny@2600:3c01::f03c:91ff:fe80:22c6) (*.net *.split)
[00:41:36] *** Quits: byzandula (~byzandula@beerbq.net) (*.net *.split)
[00:41:36] *** Quits: Henryx (~ebianchi@2a01:4f8:1c0c:76ad::1) (*.net *.split)
[00:41:36] *** Quits: grandfso_ (~quassel@199.232.237.35.bc.googleusercontent.com) (*.net *.split)
[00:41:36] *** Quits: vegii (~quassel@2001:470:1f18:3aa:30f::5439) (*.net *.split)
[00:41:36] *** Quits: arti (~arti@2001:bb8:4008:2020::f) (*.net *.split)
[00:41:36] *** Quits: or4n_ (~or4n@gerbera.qkka.org) (*.net *.split)
[00:41:36] *** Quits: catbeard (~noise@user/catbeard) (*.net *.split)
[00:41:36] *** Quits: Chex (~Chex@user/chex) (*.net *.split)
[00:41:36] *** Quits: cole (~cole@user/cole) (*.net *.split)
[00:41:36] *** Quits: mrproper (sid382572@id-382572.uxbridge.irccloud.com) (*.net *.split)
[00:41:36] *** Quits: decartes (sid240036@id-240036.helmsley.irccloud.com) (*.net *.split)
[00:41:36] *** Quits: altendky (sid135382@id-135382.hampstead.irccloud.com) (*.net *.split)
[00:41:36] *** Quits: cpach (sid296028@id-296028.helmsley.irccloud.com) (*.net *.split)
[00:41:36] *** Quits: jcass4 (~jcass4@066-188-202-056.res.spectrum.com) (*.net *.split)
[00:41:36] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (*.net *.split)
[00:41:36] *** Quits: catdog (~quassel@2001:470:50f7:cdcd::cd1) (*.net *.split)
[00:41:36] *** Quits: overrider (~overrider@user/overrider) (*.net *.split)
[00:41:36] *** Quits: dwt__ (~dwt_@c-98-198-103-176.hsd1.tx.comcast.net) (*.net *.split)
[00:41:36] *** Quits: hifi (hifi@heisenbridge/hifi) (*.net *.split)
[00:41:36] *** Quits: dudebbn (~dudebbn@cpe-174-97-16-77.cinci.res.rr.com) (*.net *.split)
[00:41:36] *** Quits: PanamaCity3003 (~PanamaCit@skylab/user/panamacity3003) (*.net *.split)
[00:41:36] *** Quits: ryan-c (ryan-c@znc.rya.nc) (*.net *.split)
[00:41:36] *** Quits: ColdKeyboard (~ColdKeybo@user/coldkeyboard) (*.net *.split)
[00:41:36] *** Quits: N3X15 (~nexis@mail.nexisonline.net) (*.net *.split)
[00:41:36] *** Quits: e-snail (~pete@user/e-snail) (*.net *.split)
[00:41:36] *** Quits: Falcon| (andreas@user/falcon/x-0540249) (*.net *.split)
[00:41:36] *** Quits: cyberpear (uid364019@fedora/cyberpear) (*.net *.split)
[00:41:36] *** Quits: hexnewbie (~hexnewbie@user/hexnewbie) (*.net *.split)
[00:41:36] *** Quits: rb (~augh@theguntretort.com) (*.net *.split)
[00:41:36] *** Quits: t2mkn (~t2mkn@user/t2mkn) (*.net *.split)
[00:41:36] *** Quits: dxrt (~dxrt@user/dxrt) (*.net *.split)
[00:41:36] *** Quits: olspookishmagus (~pookie@snf-137798.vm.okeanos.grnet.gr) (*.net *.split)
[00:41:36] *** Quits: Pickchea (~private@user/pickchea) (*.net *.split)
[00:41:36] *** Quits: audiobirb (~audio@user/audio) (*.net *.split)
[00:41:36] *** Quits: mekhami (~mekhami@2603-8080-1201-1400-581f-0234-dfa5-dae2.res6.spectrum.com) (*.net *.split)
[00:41:36] *** Quits: ssiyad (~ssiyad@user/ssiyad) (*.net *.split)
[00:41:36] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (*.net *.split)
[00:41:37] *** Quits: klotzhauer (~klotzhaue@gibtesnochklopapier.de) (*.net *.split)
[00:41:37] *** Quits: m42e (~m42e@pb42.de) (*.net *.split)
[00:41:37] *** Quits: themill_ (~stuart@debian/stuart) (*.net *.split)
[00:41:37] *** Quits: sangy (~sangy@archlinux/trusteduser/sangy) (*.net *.split)
[00:41:37] *** Quits: Oddity (~Oddity@user/oddity) (*.net *.split)
[00:41:37] *** Quits: Mechanismus (~LabMonkey@206.255.106.67) (*.net *.split)
[00:41:37] *** Quits: az (az@user/azz) (*.net *.split)
[00:41:37] *** Quits: Saxtheowl (~roro@78.192.226.182) (*.net *.split)
[00:41:37] *** Quits: dstein64 (~dstein64@dannyadam.com) (*.net *.split)
[00:41:37] *** Quits: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net) (*.net *.split)
[00:41:37] *** Quits: dv^_^ (~dv@eclipse.oxfordfun.com) (*.net *.split)
[00:41:37] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (*.net *.split)
[00:41:37] *** Quits: casastorta (~casastort@neo2.krivokuca.net) (*.net *.split)
[00:41:37] *** Quits: n0cturna1 (~n0cturna1@h155173.upc-h.chello.nl) (*.net *.split)
[00:41:37] *** Quits: runelind (~runelind@user/runelind) (*.net *.split)
[00:41:37] *** Quits: trashcatt (~trashcatt@znc.trashcat.xyz) (*.net *.split)
[00:41:37] *** Quits: slackcals (~slackcals@user/slackcals) (*.net *.split)
[00:41:37] *** Quits: jug (~jug@user/jug) (*.net *.split)
[00:41:37] *** Quits: koo5_ (~quassel@51.140.155.227) (*.net *.split)
[00:41:37] *** Quits: Arw| (~Arwalk@lfbn-dij-1-961-160.w90-125.abo.wanadoo.fr) (*.net *.split)
[00:41:37] *** Quits: cyphase (~cyphase@user/cyphase) (*.net *.split)
[00:41:37] *** Quits: Kanjizai (~kanjizai@cpe-107-185-193-171.socal.res.rr.com) (*.net *.split)
[00:41:37] *** Quits: deltab (~deltab@user/deltab) (*.net *.split)
[00:41:37] *** Quits: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net) (*.net *.split)
[00:41:37] *** Quits: eN_Joy (~eN_Joy@wsip-72-213-93-155.ok.ok.cox.net) (*.net *.split)
[00:41:37] *** Quits: pacbard (~pacbard@user/pacbard) (*.net *.split)
[00:41:37] *** Quits: bmr (~bmr@user/bmr) (*.net *.split)
[00:41:37] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (*.net *.split)
[00:41:37] *** Quits: dav1d (~dav1d@user/dav1d) (*.net *.split)
[00:41:37] *** Quits: Phlyniii (~alex@84-115-52-62.cable.dynamic.surfer.at) (*.net *.split)
[00:41:37] *** Quits: bdiddy_ (~bdiddy@li654-123.members.linode.com) (*.net *.split)
[00:41:37] *** Quits: grnman_ (~grnman@159.89.27.73) (*.net *.split)
[00:41:37] *** Quits: euidzero_ (~euidzero@158.101.10.150) (*.net *.split)
[00:41:37] *** Quits: alexyov (~alexyov@79.124.0.2) (*.net *.split)
[00:41:37] *** Quits: Cienisty (Cienisty@user/cienisty) (*.net *.split)
[00:41:37] *** Quits: trashbird (~trashbird@user/trashbird) (*.net *.split)
[00:41:37] *** Quits: abc_- (~abc@user/abc) (*.net *.split)
[00:41:37] *** Quits: nbin_ (~nbin@user/nbin) (*.net *.split)
[00:41:37] *** Quits: tdsmith (~tdsmith@kvm.kumokasumi.org) (*.net *.split)
[00:41:37] *** Quits: Forty-Bot (~kvirc@pool-108-18-137-133.washdc.fios.verizon.net) (*.net *.split)
[00:41:37] *** Quits: Axy (~Axy@user/axy) (*.net *.split)
[00:41:37] *** Quits: jladd (~jladd@c-71-63-157-185.hsd1.or.comcast.net) (*.net *.split)
[00:41:37] *** Quits: kr0nk (~kr0nk@user/kr0nk) (*.net *.split)
[00:41:37] *** Quits: elink (~elink@user/elink) (*.net *.split)
[00:41:37] *** Quits: driib2 (~driib@185.65.135.238) (*.net *.split)
[00:41:37] *** Quits: niko (~niko@libera/staff/niko) (*.net *.split)
[00:41:37] *** Quits: kiran (~kiranostr@78.40.148.178) (*.net *.split)
[00:41:37] *** Quits: notepad7 (~notepad@129.159.46.243) (*.net *.split)
[00:41:37] *** Quits: simon816 (~simon816@ec2-35-178-246-72.eu-west-2.compute.amazonaws.com) (*.net *.split)
[00:41:37] *** Quits: novns (~novns@user/novns) (*.net *.split)
[00:41:37] *** Quits: {4144} (~{4144}@46.56.68.191) (*.net *.split)
[00:41:37] *** Quits: timmot (~timmot@207.148.85.201) (*.net *.split)
[00:41:37] *** Quits: Bluefoxicy (~Bluefoxic@c-73-132-244-30.hsd1.md.comcast.net) (*.net *.split)
[00:41:37] *** Quits: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net) (*.net *.split)
[00:41:37] *** Quits: syrius (syrius@titan.stormtek.net) (*.net *.split)
[00:41:37] *** Quits: DarkTrick (~DarkTrick@pl-749-047.bunbun.ne.jp) (*.net *.split)
[00:41:37] *** Quits: easter_egg (~jeffry@85.17.16.26) (*.net *.split)
[00:41:37] *** Quits: deepy (deepy@user/deepy) (*.net *.split)
[00:41:37] *** Quits: Mathisen (mathisen@about/windows/staff/mathisen) (*.net *.split)
[00:41:37] *** Quits: ecdhe (~ecdhe@user/ecdhe) (*.net *.split)
[00:41:37] *** Quits: dalan6 (~dalan@59-102-63-107.tpgi.com.au) (*.net *.split)
[00:41:37] *** Quits: kofuyu (~kofuyu@user/kofuyu) (*.net *.split)
[00:41:37] *** Quits: \\ (~\0x5c@miaow/nonantedeux) (*.net *.split)
[00:41:37] *** Quits: bkhl (~bkhl@user/bkhl) (*.net *.split)
[00:41:37] *** Quits: d3x (michal@bielaw.ski) (*.net *.split)
[00:41:37] *** Quits: Ranhir (~Ranhir@157.97.53.139) (*.net *.split)
[00:41:37] *** Quits: NoImNotNineVolt (~fdsa@c-73-248-207-98.hsd1.nj.comcast.net) (*.net *.split)
[00:41:37] *** Quits: monchi (~joints@143.198.92.132) (*.net *.split)
[00:41:37] *** Quits: Cyp (~cyp@213.237.88.120) (*.net *.split)
[00:41:37] *** Quits: ChkDigit (~u388mw@207-195-34-73.prna.static.sasknet.sk.ca) (*.net *.split)
[00:41:37] *** Quits: srji (~srji@static.43.141.203.116.clients.your-server.de) (*.net *.split)
[00:41:37] *** Quits: yemel (~yemel@user/yemel) (*.net *.split)
[00:41:37] *** Quits: fuz (~fuz@user/fuz) (*.net *.split)
[00:41:37] *** Quits: bim9262 (~bim9262@user/bim9262) (*.net *.split)
[00:41:37] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (*.net *.split)
[00:41:37] *** Quits: chemsmith (~chemsmith@user/chemsmith) (*.net *.split)
[00:41:37] *** Quits: lyodaom (~user@host86-147-112-224.range86-147.btcentralplus.com) (*.net *.split)
[00:41:37] *** Quits: steam (~steam@user/steam) (*.net *.split)
[00:41:37] *** Quits: lyr (~lyr@user/lyr) (*.net *.split)
[00:41:37] *** Quits: sherlock_95 (~sherlock_@static.131.42.161.5.clients.your-server.de) (*.net *.split)
[00:41:37] *** Quits: minto (~mintograd@47.201.5.61) (*.net *.split)
[00:41:37] *** Quits: synbiose (~synbiose@user/synbiose) (*.net *.split)
[00:41:37] *** Quits: Scarecr0w (scarecr0w@user/scarecr0w) (*.net *.split)
[00:41:37] *** Quits: phantomcircuit (~phantomci@192.241.205.97) (*.net *.split)
[00:41:37] *** Quits: MightyMu (~MightyMu@104.131.138.31) (*.net *.split)
[00:41:37] *** Quits: phylaz (~phylaz@82.51-174-55.customer.lyse.net) (*.net *.split)
[00:41:37] *** Quits: BUSY (~BUSY@user/busy) (*.net *.split)
[00:41:37] *** Quits: mingdao (~mingdao@wireguard/tunneler/mingdao) (*.net *.split)
[00:41:37] *** Quits: macrobat (~beep@h-155-4-116-88.A785.priv.bahnhof.se) (*.net *.split)
[00:41:37] *** Quits: litharge (litharge@libera/bot/litharge) (*.net *.split)
[00:41:37] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (*.net *.split)
[00:41:37] *** Quits: HurricaneHarry (~quassel@84-85-122-182.fixed.kpn.net) (*.net *.split)
[00:41:37] *** Quits: nhartman (~SaltHillS@206.223.160.26) (*.net *.split)
[00:41:37] *** Quits: rigid- (~rigid@user/rigid) (*.net *.split)
[00:41:37] *** Quits: theo (~theo@user/theo) (*.net *.split)
[00:41:37] *** Quits: dmvrtx (~dmvrtx@znc.dmvrtx.me) (*.net *.split)
[00:41:37] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (*.net *.split)
[00:41:37] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (*.net *.split)
[00:41:37] *** Quits: beastDivision (~beastDivi@user/beastdivision) (*.net *.split)
[00:41:37] *** Quits: Bakunin (~maplefing@user/lindis) (*.net *.split)
[00:41:37] *** Quits: Atque (~Atque@user/atque) (*.net *.split)
[00:41:37] *** Quits: ano (~ano@user/ano) (*.net *.split)
[00:41:37] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (*.net *.split)
[00:41:37] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (*.net *.split)
[00:41:37] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (*.net *.split)
[00:41:37] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (*.net *.split)
[00:41:37] *** Quits: mickey8 (~user@user/mickey) (*.net *.split)
[00:41:37] *** Quits: mug3n (~mugen@gateway/tor-sasl/mugen) (*.net *.split)
[00:41:37] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (*.net *.split)
[00:41:37] *** Quits: bitblit_ (~bitblit@gateway/tor-sasl/bitblit) (*.net *.split)
[00:41:37] *** Quits: CombatVet (~c4@user/combatvet) (*.net *.split)
[00:41:37] *** Quits: kevr (~kevr@user/kevr) (*.net *.split)
[00:41:37] *** Quits: domicron (~domicron@gateway/tor-sasl/domicron) (*.net *.split)
[00:41:37] *** Quits: nunggu (~q@user/nunggu) (*.net *.split)
[00:41:37] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (*.net *.split)
[00:41:37] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (*.net *.split)
[00:41:37] *** Quits: bindu (~bindu@user/bindu) (*.net *.split)
[00:41:37] *** Quits: califax (~califax@user/califx) (*.net *.split)
[00:41:37] *** Quits: de-facto (~de-facto@user/de-facto) (*.net *.split)
[00:41:37] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (*.net *.split)
[00:41:37] *** Quits: fedenix__ (~fedenix@gateway/tor-sasl/fedenix) (*.net *.split)
[00:41:37] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (*.net *.split)
[00:41:37] *** Quits: naranja (~orange@user/orangeboxcutter) (*.net *.split)
[00:41:37] *** Quits: vaio (~gary@user/ghost) (*.net *.split)
[00:41:37] *** Quits: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr) (*.net *.split)
[00:41:37] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (*.net *.split)
[00:41:37] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (*.net *.split)
[00:41:37] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (*.net *.split)
[00:41:37] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (*.net *.split)
[00:41:37] *** Quits: adanwan_ (~adanwan@gateway/tor-sasl/adanwan) (*.net *.split)
[00:41:37] *** Quits: spithash (~spithash@user/spithash) (*.net *.split)
[00:41:37] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (*.net *.split)
[00:41:37] *** Quits: parv (~quass@user/parv) (*.net *.split)
[00:41:37] *** Quits: Barones (~Barones@user/Barones) (*.net *.split)
[00:41:37] *** Quits: resmo (~resmo@2a00:d420:9:8a00:ea66:c398:9dde:b199) (*.net *.split)
[00:41:37] *** Quits: led_belly (~led_belly@83.97.23.14) (*.net *.split)
[00:41:37] *** Quits: Ingvix (~Ingvix@user/ingvix) (*.net *.split)
[00:41:37] *** Quits: Spawns (~Spawns_Ca@user/spawns-carpeting/x-6969421) (*.net *.split)
[00:41:37] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (*.net *.split)
[00:41:37] *** Quits: daniel2 (daniel@user/daniel2) (*.net *.split)
[00:41:37] *** Quits: nyuszika7h (nyuszika7h@lykos/dev/nyuszika7h) (*.net *.split)
[00:41:37] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (*.net *.split)
[00:41:37] *** Quits: r0bby (r0bby@user/r0bby) (*.net *.split)
[00:41:37] *** Quits: therufuser (~therufuse@p5b02e22b.dip0.t-ipconnect.de) (*.net *.split)
[00:41:37] *** Quits: nicode (~nic@45.72.195.35) (*.net *.split)
[00:41:37] *** Quits: cside (sid479702@id-479702.uxbridge.irccloud.com) (*.net *.split)
[00:41:37] *** Quits: Madda (~Madda@2a05:f6c3:1935:0:2990:3a03:c1e1:2949) (*.net *.split)
[00:41:37] *** Quits: kyle[m] (~kylematri@2001:470:69fc:105::1:73e8) (*.net *.split)
[00:41:37] *** Quits: worldofgeese (~worldofge@2001:470:69fc:105::1:3cd8) (*.net *.split)
[00:41:37] *** Quits: Hansuke[m] (~hansukema@2001:470:69fc:105::1:86bb) (*.net *.split)
[00:41:38] *** Quits: aleko1[m] (~aleko1@2001:470:69fc:105::1:1016) (*.net *.split)
[00:41:38] *** Quits: strider[m] (~gchamoulm@2001:470:69fc:105::1:26ee) (*.net *.split)
[00:41:38] *** Quits: jinsun_ (~jinsun@user/jinsun) (*.net *.split)
[00:41:38] *** Quits: d1rewolf_x (~d1rewolfm@2001:470:69fc:105::1:74f2) (*.net *.split)
[00:41:38] *** Quits: mr-demo[m] (~mr-demoma@2001:470:69fc:105::1:74b1) (*.net *.split)
[00:41:38] *** Quits: VictorKostyuk[m] (~thevicmat@2001:470:69fc:105::1:64e4) (*.net *.split)
[00:41:38] *** Quits: jayray (~jayray@user/jayray) (*.net *.split)
[00:41:38] *** Quits: dstufft (~dstufft@shitbird.caremad.io) (*.net *.split)
[00:41:38] *** Quits: baloona (~baloona@mail.baloona.de) (*.net *.split)
[00:41:38] *** Quits: dirtwash (~dirtwash@user/dirtwash) (*.net *.split)
[00:41:38] *** Quits: explodes (~explodes@user/explodes) (*.net *.split)
[00:41:38] *** Quits: OlaNys (onm@irccore.ofelbar.se) (*.net *.split)
[00:41:38] *** Quits: Quietus_ (~quietus@2a04:52c0:101:181::) (*.net *.split)
[00:41:38] *** Quits: Soni (~quassel@autistic.space) (*.net *.split)
[00:41:38] *** Quits: Knyght (sid365271@id-365271.helmsley.irccloud.com) (*.net *.split)
[00:41:38] *** Quits: mexen (uid495612@user/mexen) (*.net *.split)
[00:41:38] *** Quits: daex (~daex@user/daex) (*.net *.split)
[00:41:38] *** Quits: jposer (sid132110@id-132110.uxbridge.irccloud.com) (*.net *.split)
[00:41:38] *** Quits: agronholm (sid403424@id-403424.helmsley.irccloud.com) (*.net *.split)
[00:41:38] *** Quits: kostkon__ (~kostkon@2a02:587:a116:f212:4d86:1980:f91d:1e03) (*.net *.split)
[00:41:38] *** Quits: blackhats (~blackhats@2602:fccf:1:1050::) (*.net *.split)
[00:41:38] *** Quits: relipse (sid16131@id-16131.tinside.irccloud.com) (*.net *.split)
[00:41:38] *** Quits: jesse-s (sid98646@id-98646.hampstead.irccloud.com) (*.net *.split)
[00:41:38] *** Quits: TML (~tml@user/tml) (*.net *.split)
[00:41:38] *** Quits: madduck (~madduck@user/madduck) (*.net *.split)
[00:41:38] *** Quits: atomicwrites (~atomicwri@user/atomicwrites) (*.net *.split)
[00:41:38] *** Quits: Titore (~Titore@user/titore) (*.net *.split)
[00:41:38] *** Quits: bzyx (~quassel@89-69-20-238.dynamic.chello.pl) (*.net *.split)
[00:41:38] *** Quits: pyfisch (~pyfisch@user/pyfisch) (*.net *.split)
[00:41:38] *** Quits: omegatron (~some@p5b056436.dip0.t-ipconnect.de) (*.net *.split)
[00:41:38] *** Quits: upekkha (~Advanced@2a01:4f8:1c0c:49df::1) (*.net *.split)
[00:41:38] *** Quits: Techcable (~Techcable@168.235.93.147) (*.net *.split)
[00:41:38] *** Quits: koolazer (~koo@user/koolazer) (*.net *.split)
[00:41:38] *** Quits: Timvde (~tim@towely.vdeynde.com) (*.net *.split)
[00:41:38] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (*.net *.split)
[00:41:38] *** Quits: cYmen (~simon@squint.a-oben.org) (*.net *.split)
[00:41:38] *** Quits: hirish (~hirish@ip85.ip-137-74-20.eu) (*.net *.split)
[00:41:38] *** Quits: Scotteh (~Scotteh@user/scotteh) (*.net *.split)
[00:41:38] *** Quits: jcass (~cindy@50-0-146-31.dsl.dynamic.fusionbroadband.com) (*.net *.split)
[00:41:38] *** Quits: meti (~meti@user/meti) (*.net *.split)
[00:41:38] *** Quits: gothicserpent (~gothicser@2604:a880:4:1d0::176:6000) (*.net *.split)
[00:41:38] *** Quits: mrec_ (~markus@user/mrec) (*.net *.split)
[00:41:38] *** Quits: bdeshi (~bdeshi@bdeshi.space) (*.net *.split)
[00:41:38] *** Quits: fxrs (~fxrs@192.227.212.130) (*.net *.split)
[00:41:38] *** Quits: neil (~kneel@rockylinux/infra/neil) (*.net *.split)
[00:41:38] *** Quits: blackpawn (~blackpawn@c-73-73-53-23.hsd1.il.comcast.net) (*.net *.split)
[00:41:38] *** Quits: kiska3 (james@user/kiska) (*.net *.split)
[00:41:38] *** Quits: OMGOMG (~bobrobert@poppy.ifi.uio.no) (*.net *.split)
[00:41:38] *** Quits: ouemt (~quassel@user/ouemt) (*.net *.split)
[00:41:38] *** Quits: tabakhase (tabakhase@user/tabakhase) (*.net *.split)
[00:41:38] *** Quits: n0____ (~n0___@user/n0/x-7412091) (*.net *.split)
[00:41:38] *** Quits: Numerlor (~Numerlor@whydoyouhate.me) (*.net *.split)
[00:41:38] *** Quits: LogicAside (~LogicAsid@user/logicaside) (*.net *.split)
[00:41:38] *** Quits: RoadrunnerWMC (~Roadrunne@46.101.129.38) (*.net *.split)
[00:41:38] *** Quits: unautre (~unautre@user/unautre) (*.net *.split)
[00:41:38] *** Quits: mrkajetanp (~mrkajetan@88.98.245.28) (*.net *.split)
[00:41:38] *** Quits: bailsman (~Mm1@xls01.freecult.org) (*.net *.split)
[00:41:38] *** Quits: ntome (~ntome@user/ntome) (*.net *.split)
[00:41:38] *** Quits: nickorta12 (~nickorta1@174-28-176-216.albq.qwest.net) (*.net *.split)
[00:41:38] *** Quits: arza (arza@arza.us) (*.net *.split)
[00:41:38] *** Quits: bleb (~cm@user/bleb) (*.net *.split)
[00:41:38] *** Quits: thumbs (1000@apache/committer/thumbs) (*.net *.split)
[00:41:38] *** Quits: n-st (~n-st@user/n-st) (*.net *.split)
[00:41:38] *** Quits: NightMonkey (~NightMonk@user/nightmonkey) (*.net *.split)
[00:41:38] *** Quits: Russell (russell@bnc4free/staff/russell) (*.net *.split)
[00:41:38] *** Quits: johnplos1 (~John_Plos@user/johnplosky) (*.net *.split)
[00:41:38] *** Quits: carlio (~carlio@static.62.204.34.188.clients.your-server.de) (*.net *.split)
[00:41:38] *** Quits: moonmoon (awoo@libera/staff/moonmoon) (*.net *.split)
[00:41:38] *** Quits: dragonmaster (dragonmast@user/dragonmaster) (*.net *.split)
[00:41:38] *** Quits: ws2k3 (znc@vps.freegamehosting.eu) (*.net *.split)
[00:41:38] *** Quits: mobius (sid478273@id-478273.uxbridge.irccloud.com) (*.net *.split)
[00:41:38] *** Quits: hyper_dave (~hyper_dav@2a01:4f9:4a:246c::2) (*.net *.split)
[00:41:38] *** Quits: niluje (~niluje@2a05:d012:f91:1700:6975:ef0b:def6:3bdd) (*.net *.split)
[00:41:38] *** Quits: Wegge (~wegge@user/wegge) (*.net *.split)
[00:41:39] *** Quits: Bato (~plauder@2001:bc8:182c:b39::1) (*.net *.split)
[00:41:39] *** Quits: eloy (~quassel@2001:bc8:182c:650::1) (*.net *.split)
[00:41:39] *** Quits: BillyZane2 (~BillyZane@185.202.221.34) (*.net *.split)
[00:41:39] *** Quits: ekathva (~ekathva@2001:999:51:be01:2c4a:6b25:b5d5:f2c9) (*.net *.split)
[00:41:39] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (*.net *.split)
[00:41:39] *** Quits: dtux (~dtux@c-98-207-149-218.hsd1.ca.comcast.net) (*.net *.split)
[00:41:39] *** Quits: ivii (~ivan@user/ivii) (*.net *.split)
[00:41:39] *** Quits: bennydarshan (~darshan@2a0d:6fc2:4820:8f00:c1e7:bcbf:e0c1:df21) (*.net *.split)
[00:41:39] *** Quits: jpic (~jpic@82.142.23.238) (*.net *.split)
[00:41:39] *** Quits: zln (~zln@c80-217-230-193.bredband.tele2.se) (*.net *.split)
[00:41:39] *** Quits: rMdes (~rmdes@my.armada.digital) (*.net *.split)
[00:41:39] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (*.net *.split)
[00:41:39] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (*.net *.split)
[00:41:39] *** Quits: Elodin (~elodin@user/elodin) (*.net *.split)
[00:41:39] *** Quits: chymera (~chymera@ns1000526.ip-51-81-46.us) (*.net *.split)
[00:41:39] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (*.net *.split)
[00:41:39] *** Quits: Batzy (~quassel@user/batzy) (*.net *.split)
[00:41:39] *** Quits: wac (~wac@user/wac) (*.net *.split)
[00:41:39] *** Quits: remedan (~remedan@octo.cafe) (*.net *.split)
[00:41:39] *** Quits: JanC (~janc@user/janc) (*.net *.split)
[00:41:39] *** Quits: kolmogorov[m] (~kolmogoro@2001:470:69fc:105::e03b) (*.net *.split)
[00:41:39] *** Quits: luc14n0[m] (~luc14n0ma@2001:470:69fc:105::1:304c) (*.net *.split)
[00:41:39] *** Quits: Alabama[m] (~ingfix-2m@wikipedia/-Alabama-) (*.net *.split)
[00:41:39] *** Quits: ormaaj (~ormaaj@user/ormaaj) (*.net *.split)
[00:41:39] *** Quits: purplepinky[m] (~purplepin@2001:470:69fc:105::1:6535) (*.net *.split)
[00:41:39] *** Quits: mjr7[m] (~mjr7matri@2001:470:69fc:105::1:64e6) (*.net *.split)
[00:41:39] *** Quits: james[m]123 (~jamesjame@2001:470:69fc:105::1:5aa1) (*.net *.split)
[00:41:39] *** Quits: cecep[m] (~cecep@2001:470:69fc:105::3994) (*.net *.split)
[00:41:39] *** Quits: Forsaken87 (~quassel@2a02:908:1866:e360:b79:88e2:d2ce:2e71) (*.net *.split)
[00:41:39] *** Quits: zeus (~user@user/kamyl) (*.net *.split)
[00:41:39] *** Quits: dnns01_ (~quassel@2a02:c207:3003:651::1) (*.net *.split)
[00:41:39] *** Quits: arash- (arash@thinks.life.is-a.beauty) (*.net *.split)
[00:41:39] *** Quits: megaTherion (~therion@unix.io) (*.net *.split)
[00:41:39] *** Quits: kristjansson (sid126207@id-126207.tinside.irccloud.com) (*.net *.split)
[00:41:39] *** Quits: roniez_ (~roniez@2a02:c206:2057:5765::1) (*.net *.split)
[00:41:39] *** Quits: kline (~freedom0@libera/staff/kline) (*.net *.split)
[00:41:39] *** Quits: peac (sid344662@id-344662.hampstead.irccloud.com) (*.net *.split)
[00:41:39] *** Quits: olasd (~olasd@softwareheritage/olasd) (*.net *.split)
[00:41:39] *** Quits: flyback (~flyback@2601:540:8201:1e60::1b5d) (*.net *.split)
[00:41:39] *** Quits: SnoopJ (~snoopj@user/snoopj) (*.net *.split)
[00:41:39] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (*.net *.split)
[00:41:39] *** Quits: ert (~ert@2001:4b99:1:1:216:3eff:fee5:446f) (*.net *.split)
[00:41:39] *** Quits: bionade24 (~bionade24@2a03:4000:33:45b::1) (*.net *.split)
[00:41:39] *** Quits: Echoz (~chris@user/echoz) (*.net *.split)
[00:41:39] *** Quits: s4msung (bZt8T9wHxn@user/s4msung) (*.net *.split)
[00:41:39] *** Quits: Jimmy2027 (~hendrik@2001:1620:2018:38:dde3:1b0f:dc57:eb0f) (*.net *.split)
[00:41:39] *** Quits: AsenMx (~asen@user/asenmx) (*.net *.split)
[00:41:39] *** Quits: enrh (~enrh@user/enrh) (*.net *.split)
[00:41:39] *** Quits: TortillaSandwich (~TortillaS@user/tortillasandwich) (*.net *.split)
[00:41:39] *** Quits: tvm (~tom@ip-89-103-96-164.net.upcbroadband.cz) (*.net *.split)
[00:41:39] *** Quits: regulate (~regulate@koduro.com) (*.net *.split)
[00:41:39] *** Quits: iflema (~ian@user/iflema) (*.net *.split)
[00:41:39] *** Quits: taru9 (~realTaru9@user/taru9) (*.net *.split)
[00:41:39] *** Quits: wyre (~wyre@user/wyre) (*.net *.split)
[00:41:39] *** Quits: jrabbit (~jack@user/jrabbit) (*.net *.split)
[00:41:39] *** Quits: KSaunderson (~user@142.93.152.208) (*.net *.split)
[00:41:39] *** Quits: iwkse (~iwkse@iurit.com) (*.net *.split)
[00:41:39] *** Quits: amosbird (~amosbird@13.75.119.182) (*.net *.split)
[00:41:39] *** Quits: duracrisis (~kkh@user/duracrisis) (*.net *.split)
[00:41:39] *** Quits: maxpowa (~maxpowa@brought.to.you.by.maxpowa.us) (*.net *.split)
[00:41:39] *** Quits: energizer (~energizer@user/energizer) (*.net *.split)
[00:41:39] *** Quits: icy (~icy@user/icy) (*.net *.split)
[00:41:39] *** Quits: sud (~sud@user/sud) (*.net *.split)
[00:41:39] *** Quits: foo (~foo@user/foo/x-8763512) (*.net *.split)
[00:41:39] *** Quits: Yamakaja (~yamakaja@user/yamakaja) (*.net *.split)
[00:41:39] *** Quits: dba (uid533975@id-533975.hampstead.irccloud.com) (*.net *.split)
[00:41:39] *** Quits: gaken (~gaken@user/galen) (*.net *.split)
[00:41:39] *** Quits: Artea (~Lufia@artea.com.pt) (*.net *.split)
[00:41:40] *** Quits: dave2F (~dave@78-56-248-37.static.zebra.lt) (*.net *.split)
[00:41:40] *** Quits: Mocramis (~mocramis@dalaran.sceen.net) (*.net *.split)
[00:41:40] *** Quits: skullY (zwhite@darkstar.frop.org) (*.net *.split)
[00:41:40] *** Quits: mgubyt (u@mgub.yt) (*.net *.split)
[00:41:40] *** Quits: graphitemaster (~graphitem@user/graphitemaster) (*.net *.split)
[00:41:40] *** Quits: klu (~klu@user/klu) (*.net *.split)
[00:41:40] *** Quits: mhmd (~mhmd@37.48.90.208) (*.net *.split)
[00:41:40] *** Quits: bparker (~nobody@user/bparker) (*.net *.split)
[00:41:40] *** Quits: Ulti (~matt@ec2-35-178-236-167.eu-west-2.compute.amazonaws.com) (*.net *.split)
[00:41:40] *** Quits: mdk (~mdk@python/psf/mdk) (*.net *.split)
[00:41:40] *** Quits: Darkfoe (sid402081@id-402081.helmsley.irccloud.com) (*.net *.split)
[00:41:40] *** Quits: mastardet (~mastardet@user/mastardet) (*.net *.split)
[00:41:40] *** Quits: InPhase (~InPhase@openscad/inphase) (*.net *.split)
[00:41:40] *** Quits: Ara (~Ara@user/ara) (*.net *.split)
[00:41:40] *** Quits: st3fan (sid43079@id-43079.lymington.irccloud.com) (*.net *.split)
[00:41:40] *** Quits: TingPing (sid2800@id-2800.helmsley.irccloud.com) (*.net *.split)
[00:41:40] *** Quits: ballingt (sid190590@id-190590.helmsley.irccloud.com) (*.net *.split)
[00:41:40] *** Quits: Pilate (~pilate@pilate.io) (*.net *.split)
[00:41:40] *** Quits: DCTWD (~dc@uz.utmappro.com) (*.net *.split)
[00:41:40] *** Quits: fakenullie (~nullie@london.nullie.name) (*.net *.split)
[00:41:40] *** Quits: Widdershins (widders@ps.mad.cash) (*.net *.split)
[00:41:40] *** Quits: fleabag (~sirpengi@li587-65.members.linode.com) (*.net *.split)
[00:41:40] *** Quits: awygle (~quassel@2604:a880:2:d0::5380:3001) (*.net *.split)
[00:41:40] *** Quits: d3sync (~d3sync@62.1.158.240) (*.net *.split)
[00:41:40] *** Quits: ice9 (~ice9@user/ice9) (*.net *.split)
[00:41:40] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (*.net *.split)
[00:41:40] *** Quits: vicfred (~vicfred@user/vicfred) (*.net *.split)
[00:41:40] *** Quits: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com) (*.net *.split)
[00:41:40] *** Quits: gitesh (uid423739@ilkley.irccloud.com) (*.net *.split)
[00:41:40] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-224.dsl.bell.ca) (*.net *.split)
[00:41:40] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (*.net *.split)
[00:41:40] *** Quits: masterkorp (~masterkor@user/masterkorp) (*.net *.split)
[00:41:40] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (*.net *.split)
[00:41:40] *** Quits: Guddu (~Guddu@59.88.88.82) (*.net *.split)
[00:41:40] *** Quits: off^ (~off@128-092-174-141.biz.spectrum.com) (*.net *.split)
[00:41:40] *** Quits: officerping (~officerpi@c-73-235-167-226.hsd1.ca.comcast.net) (*.net *.split)
[00:41:40] *** Quits: magla (~gelignite@55d436fa.access.ecotel.net) (*.net *.split)
[00:41:40] *** Quits: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de) (*.net *.split)
[00:41:40] *** Quits: jmd (~user@de.cellform.com) (*.net *.split)
[00:41:40] *** Quits: thurs80601421053 (~thurs@ip68-225-209-147.ph.ph.cox.net) (*.net *.split)
[00:41:40] *** Quits: dreamon (~dreamon@pd9503995.dip0.t-ipconnect.de) (*.net *.split)
[00:41:40] *** Quits: Reign (~Username@ip98-161-226-10.ph.ph.cox.net) (*.net *.split)
[00:41:40] *** Quits: psych3del1c (~psych3del@net031132118099.pskovline.ru) (*.net *.split)
[00:41:40] *** Quits: Narrat (~omnius@p2e51179b.dip0.t-ipconnect.de) (*.net *.split)
[00:41:40] *** Quits: qlixed (~qlixed@181.44.129.13) (*.net *.split)
[00:41:40] *** Quits: Wanderer (~wanderer@user/wanderer) (*.net *.split)
[00:41:40] *** Quits: glider (~glider@user/glider) (*.net *.split)
[00:41:40] *** Quits: wovixo (~wovixo@128.104.205.49) (*.net *.split)
[00:41:40] *** Quits: twofingersneat (~twofinger@174-080-036-228.res.spectrum.com) (*.net *.split)
[00:41:40] *** Quits: zaquest (~notzaques@5.130.79.72) (*.net *.split)
[00:41:40] *** Quits: Sargento (uid523534@wikipedia/Sargento-de-Hierro) (*.net *.split)
[00:41:40] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (*.net *.split)
[00:41:40] *** Quits: zeden (~zeden@user/zeden) (*.net *.split)
[00:41:40] *** Quits: defn (~n0b0dy@user/defn) (*.net *.split)
[00:41:40] *** Quits: foul_owl (~kerry@94.140.8.105) (*.net *.split)
[00:41:40] *** Quits: moldorcoder7 (~moldorcod@188.95.55.24) (*.net *.split)
[00:41:40] *** Quits: luva (~luva@37.120.197.52) (*.net *.split)
[00:41:40] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (*.net *.split)
[00:41:40] *** Quits: noarb (~noarb@user/noarb) (*.net *.split)
[00:41:40] *** Quits: Gerula (~Gerula@user/gerula) (*.net *.split)
[00:41:40] *** Quits: rinzewind (~rinzewind@user/rinzewind) (*.net *.split)
[00:41:40] *** Quits: Stas_ (~Stas@78.162.42.17) (*.net *.split)
[00:41:40] *** Quits: esv (~esv@74.124.178.154) (*.net *.split)
[00:41:40] *** Quits: Alexer (~alexer@alexer.net) (*.net *.split)
[00:41:40] *** Quits: dTal (~quassel@dragonbox/wizzard/dtal) (*.net *.split)
[00:41:40] *** Quits: m5zs7k (aquares@web10.mydevil.net) (*.net *.split)
[00:41:40] *** Quits: nepeat (~nepeat@79.110.170.60) (*.net *.split)
[00:41:40] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (*.net *.split)
[00:41:40] *** Quits: unixcorn_ (unixcorne@applejack.urlab.be) (*.net *.split)
[00:41:40] *** Quits: PJBoy (~PJBoy@user/pjboy) (*.net *.split)
[00:41:40] *** Quits: palasso (~palasso@user/palasso) (*.net *.split)
[00:41:40] *** Quits: Unode (~Unode@194.94.44.220) (*.net *.split)
[00:41:40] *** Quits: LimeOn (~user@user/limeon) (*.net *.split)
[00:41:40] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (*.net *.split)
[00:41:40] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (*.net *.split)
[00:41:40] *** Quits: Auron (Auron956@user/auron) (*.net *.split)
[00:41:40] *** Quits: kujo (~kujo@188.166.12.52) (*.net *.split)
[00:41:40] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (*.net *.split)
[00:41:40] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (*.net *.split)
[00:41:40] *** Quits: bloodninja (~bloodninj@user/bloodninja) (*.net *.split)
[00:41:40] *** Quits: rowbots (~dirgeable@h64-17-89-214.arvdco.broadband.dynamic.tds.net) (*.net *.split)
[00:41:40] *** Quits: slavfox (~slavfox@93.158.232.111) (*.net *.split)
[00:41:40] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (*.net *.split)
[00:41:40] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (*.net *.split)
[00:41:40] *** Quits: viaSanctus (~viaSanctu@user/viasanctus) (*.net *.split)
[00:41:40] *** Quits: Azem (~haise01@user/haise01) (*.net *.split)
[00:41:40] *** Quits: pankid (~quassel@pankid.club) (*.net *.split)
[00:41:40] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (*.net *.split)
[00:41:40] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (*.net *.split)
[00:41:40] *** Quits: five643333 (~five6@8.40.26.21) (*.net *.split)
[00:41:40] *** Quits: tazle (tazle@kapsi.fi) (*.net *.split)
[00:41:40] *** Quits: nanonyme (nanonyme@kapsi.fi) (*.net *.split)
[00:41:40] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (*.net *.split)
[00:41:40] *** Quits: TFKyle (~kyle@64.201.205.70) (*.net *.split)
[00:41:40] *** Quits: moose (~moose@user/moose) (*.net *.split)
[00:41:40] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (*.net *.split)
[00:41:40] *** Quits: Deaygo (~Deaygo@let.deaygo.in) (*.net *.split)
[00:41:40] *** Quits: fling (~fling@user/fling) (*.net *.split)
[00:41:40] *** Quits: dbristow (~dbristow@user/dbristow) (*.net *.split)
[00:41:40] *** Quits: Deknos (~someone@user/menace) (*.net *.split)
[00:41:40] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (*.net *.split)
[00:41:40] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (*.net *.split)
[00:41:40] *** Quits: Linux77 (~LinuMage@186.233.179.225) (*.net *.split)
[00:41:40] *** Quits: davegarath (~davegarat@net-93-66-98-230.cust.vodafonedsl.it) (*.net *.split)
[00:41:40] *** Quits: somlis (~somlis@user/somlis) (*.net *.split)
[00:41:40] *** Quits: user3456 (user3456@user/user3456) (*.net *.split)
[00:41:40] *** Quits: tomaw (tom@libera/staff/tomaw) (*.net *.split)
[00:41:40] *** Quits: linuxdaemon (linuxdemon@bnc.linuxdemon.xyz) (*.net *.split)
[00:41:40] *** Quits: Jong (~Jong@163.114.132.5) (*.net *.split)
[00:41:40] *** Quits: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net) (*.net *.split)
[00:41:40] *** Quits: jochum (~quassel@user/jochum) (*.net *.split)
[00:41:40] *** Quits: Ekho (~Ekho@user/ekho) (*.net *.split)
[00:41:40] *** Quits: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it) (*.net *.split)
[00:41:40] *** Quits: duds- (~duds-@user/duds) (*.net *.split)
[00:41:40] *** Quits: raym (~raym@user/raym) (*.net *.split)
[00:41:40] *** Quits: shokohsc (~shokohsc@lfbn-idf2-1-1472-129.w92-169.abo.wanadoo.fr) (*.net *.split)
[00:41:40] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (*.net *.split)
[00:41:40] *** Quits: cp--- (~cp-@b157153.ppp.asahi-net.or.jp) (*.net *.split)
[00:41:40] *** Quits: fredrikhl (~fhl@myrsnipa.uio.no) (*.net *.split)
[00:41:40] *** Quits: oz4ga (~tim@hator.sunsite.lv) (*.net *.split)
[00:41:40] *** Quits: mncheckm (~mncheck@193.224.205.254) (*.net *.split)
[00:41:40] *** Quits: Byteflux (~byte@byteflux.net) (*.net *.split)
[00:41:40] *** Quits: SirScott (~SirScott@c-67-176-100-163.hsd1.co.comcast.net) (*.net *.split)
[00:41:40] *** Quits: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net) (*.net *.split)
[00:41:40] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (*.net *.split)
[00:41:40] *** Quits: roguelazer (~jbrown@sietchtabr.roguelazer.net) (*.net *.split)
[00:41:40] *** Quits: CalimeroTeknik (~calimero@user/calimeroteknik) (*.net *.split)
[00:41:40] *** Quits: Allegretto (~allegrett@178-164-171-16.pool.digikabel.hu) (*.net *.split)
[00:41:40] *** Quits: pgib (~textual@173.38.117.89) (*.net *.split)
[00:41:40] *** Quits: mwichmann (~mats@209-188-119-117.taosnet.com) (*.net *.split)
[00:41:40] *** Quits: cation (cation@user/cation) (*.net *.split)
[00:41:40] *** Quits: zware (~zach@python/psf/zware) (*.net *.split)
[00:41:40] *** Quits: rjwiii (~mr-rich@072-187-031-098.res.spectrum.com) (*.net *.split)
[00:41:40] *** Quits: canton7 (~canton7@about/csharp/canton7) (*.net *.split)
[00:41:40] *** Quits: taeaad (~taeaad@user/taeaad) (*.net *.split)
[00:41:40] *** Quits: LiENUS (~quake@108-242-135-2.lightspeed.btrgla.sbcglobal.net) (*.net *.split)
[00:41:40] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (*.net *.split)
[00:41:40] *** Quits: jkl (~jkl@user/jkl) (*.net *.split)
[00:41:40] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (*.net *.split)
[00:41:40] *** Quits: ackyshake (~ackyshake@user/ackyshake) (*.net *.split)
[00:41:40] *** Quits: bryce (~bryce@ool-457dd6ac.dyn.optonline.net) (*.net *.split)
[00:41:40] *** Quits: MercilessDeth (~brad@136.49.59.177) (*.net *.split)
[00:41:40] *** Quits: zamba (~marius@5.226.162.54) (*.net *.split)
[00:41:40] *** Quits: schumaml (~schumaml@dslb-188-104-168-024.188.104.pools.vodafone-ip.de) (*.net *.split)
[00:41:40] *** Quits: mags (~mags@097-091-082-103.res.spectrum.com) (*.net *.split)
[00:41:40] *** Quits: daddy (ryan@hashbang/bdfl) (*.net *.split)
[00:41:40] *** Quits: znf (ibm86@blender.linge-ma.ro) (*.net *.split)
[00:41:40] *** Quits: Bardon (~Bardon@user/Bardon) (*.net *.split)
[00:41:40] *** Quits: blddk (~blddk@user/blddk) (*.net *.split)
[00:41:40] *** Quits: klys (~mdasoh@show.op8.us) (*.net *.split)
[00:41:40] *** Quits: randall (~randall@user/randall) (*.net *.split)
[00:41:40] *** Quits: onu (~onufn@gibbs.uberspace.de) (*.net *.split)
[00:41:40] *** Quits: ksynwa (~ksynwa@5.45.111.57) (*.net *.split)
[00:41:40] *** Quits: comrumino (~comrumino@li87-103.members.linode.com) (*.net *.split)
[00:41:40] *** Quits: CrunchyChewie (~CrunchyCh@user/crunchychewie) (*.net *.split)
[00:41:40] *** Quits: _slate_ (~slate@159.69.26.92) (*.net *.split)
[00:41:40] *** Quits: leosilva (~leosilva@canonical/leosilva) (*.net *.split)
[00:41:40] *** Quits: The-Compiler (~compiler@the-compiler.org) (*.net *.split)
[00:41:40] *** Quits: B33F_1338 (~b33f1337@host.b33f1337.com) (*.net *.split)
[00:41:40] *** Quits: adamchai1z (~adamj@51.15.34.126) (*.net *.split)
[00:41:40] *** Quits: phillhoc1ing (~erasmus@ec2-54-191-78-90.us-west-2.compute.amazonaws.com) (*.net *.split)
[00:41:40] *** Quits: hasu (~hasu@58x13x224x139.ap58.ftth.ucom.ne.jp) (*.net *.split)
[00:41:40] *** Quits: Peng (~mnordhoff@user/Peng) (*.net *.split)
[00:41:40] *** Quits: lastmikoi (~lastmikoi@vm-01.lastmikoi.net) (*.net *.split)
[00:41:40] *** Quits: blank (~info@li2021-150.members.linode.com) (*.net *.split)
[00:41:40] *** Quits: TDT (~TDT@20.118.225.139) (*.net *.split)
[00:41:40] *** Quits: JerryXia1 (~JerryXiao@user/jerryxiao) (*.net *.split)
[00:41:40] *** Quits: suffer (znc@mutant.penguin.fyi) (*.net *.split)
[00:41:40] *** Quits: ebb (ebb@user/ebb) (*.net *.split)
[00:41:40] *** Quits: ses1984_ (~stephanst@128.27.196.35.bc.googleusercontent.com) (*.net *.split)
[00:41:40] *** Quits: rodstewart1 (~dmartins@188.ip-149-56-97.net) (*.net *.split)
[00:41:40] *** Quits: Astronaut_ (~astronaut@o-u-t-e-r.space) (*.net *.split)
[00:41:40] *** Quits: akaWolf (~akaWolf@akawolf.org) (*.net *.split)
[00:41:40] *** Quits: gurki (~gurki@user/gurki) (*.net *.split)
[00:41:40] *** Quits: vinay (~Vinay@user/vinay-keshava) (*.net *.split)
[00:41:40] *** Quits: a1paca (~a1paca@user/a1paca) (*.net *.split)
[00:41:40] *** Quits: Repiphany (~Repiphany@user/repiphany) (*.net *.split)
[00:41:40] *** Quits: avalon (avalon@coredump.net) (*.net *.split)
[00:41:40] *** Quits: zingos (~zingos@143.198.48.220) (*.net *.split)
[00:41:40] *** Quits: ghostbuster (~admin@user/ghostbuster) (*.net *.split)
[00:41:40] *** Quits: percY- (~percY@138.68.239.19) (*.net *.split)
[00:41:40] *** Quits: yolo (~xxiao@li1120-73.members.linode.com) (*.net *.split)
[00:41:40] *** Quits: bzl (~identme@bzl.si) (*.net *.split)
[00:41:40] *** Quits: Timrit (~scott@047-012-066-084.res.spectrum.com) (*.net *.split)
[00:41:40] *** Quits: bboles (~bboles@64.94.212.195) (*.net *.split)
[00:41:40] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (*.net *.split)
[00:41:40] *** Quits: deetwelve (~deetwelve@user/deetwelve) (*.net *.split)
[00:41:40] *** Quits: shantaram (shan@cyblog/maintainer/shan) (*.net *.split)
[00:41:40] *** Quits: beanzilla (~beanzilla@user/beanzilla) (*.net *.split)
[00:41:40] *** Quits: alchzh (alchzh@stable.bnc.by.bnc4you.xyz) (*.net *.split)
[00:41:40] *** Quits: majors_ (~majors@user/majors) (*.net *.split)
[00:41:40] *** Quits: Logi_ (~quassel@83.229.86.115) (*.net *.split)
[00:41:40] *** Quits: DaPinkOne (~Dap@user/dap) (*.net *.split)
[00:41:40] *** Quits: argoneus (~argoneus@argoneus.com) (*.net *.split)
[00:41:40] *** Quits: oelewapp1rke (~cde@ns509915.ip-198-245-49.net) (*.net *.split)
[00:41:40] *** Quits: woky (~woky@li1651-31.members.linode.com) (*.net *.split)
[00:41:40] *** Quits: potatoe (~potatoe@1g.is) (*.net *.split)
[00:41:40] *** Quits: Teacup (~teacup@user/teacup) (*.net *.split)
[00:41:40] *** Quits: syntaxman (~wade@li227-215.members.linode.com) (*.net *.split)
[00:41:40] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:40cb:ed11:5496:f541) (*.net *.split)
[00:41:40] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (*.net *.split)
[00:41:41] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (*.net *.split)
[00:41:41] *** Quits: XV8 (~XV8@2601:5cb:c001:50:b02a:1289:ddb1:fbc8) (*.net *.split)
[00:41:41] *** Quits: gambl0re (~gambl0re@cpe688f2e1852a3-cm688f2e1852a0.cpe.net.cable.rogers.com) (*.net *.split)
[00:41:41] *** Quits: eldritch_ (~eldritch@user/eldritch/x-9272577) (*.net *.split)
[00:41:41] *** Quits: sharksauce (sharksauce@user/sharksauce) (*.net *.split)
[00:41:41] *** Quits: ba (~ba@cpc1-hari17-2-0-cust27.20-2.cable.virginm.net) (*.net *.split)
[00:41:41] *** Quits: slowtyper (~slowtyper@user/slowtyper) (*.net *.split)
[00:41:41] *** Quits: ubert1 (~Thunderbi@p200300ecdf0994537358816310c1cf27.dip0.t-ipconnect.de) (*.net *.split)
[00:41:41] *** Quits: demsh (dkkdg9hwnm@hermod.demsh.org) (*.net *.split)
[00:41:41] *** Quits: BrenBarn (~brenbarn@2001:470:69fc:105::2da2) (*.net *.split)
[00:41:41] *** Quits: dld (~davidlowr@2601:197:600:1210:942a:4683:ce04:8328) (*.net *.split)
[00:41:41] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (*.net *.split)
[00:41:41] *** Quits: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053) (*.net *.split)
[00:41:41] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (*.net *.split)
[00:41:41] *** Quits: et (~et@user/et) (*.net *.split)
[00:41:41] *** Quits: benbois[m] (~benboisma@2001:470:69fc:105::1:66ab) (*.net *.split)
[00:41:41] *** Quits: anomalous_creato (~anomalous@2001:470:69fc:105::6ed1) (*.net *.split)
[00:41:41] *** Quits: holgersson (~quassel@user/holgersson) (*.net *.split)
[00:41:41] *** Quits: nazarewk[m] (~nazarewk@2001:470:69fc:105::1:2c8d) (*.net *.split)
[00:41:41] *** Quits: euphrates[m] (~euphrates@2001:470:69fc:105::fbb5) (*.net *.split)
[00:41:41] *** Quits: JayDoubleu (~jdoubmatr@2001:470:69fc:105::1:3831) (*.net *.split)
[00:41:41] *** Quits: graingert[m] (~graingert@2001:470:69fc:105::653) (*.net *.split)
[00:41:41] *** Quits: catern (~sbaugh@2604:2000:8fc0:b:a9c7:866a:bf36:3407) (*.net *.split)
[00:41:41] *** Quits: acm1ptacm2pts[m] (~acm1ptacm@2001:470:69fc:105::1:83ac) (*.net *.split)
[00:41:41] *** Quits: whiterabbit[m] (~whiterabb@2001:470:69fc:105::1:61cb) (*.net *.split)
[00:41:41] *** Quits: Alcibiades[m] (~dukehorac@2001:470:69fc:105::1:6b8c) (*.net *.split)
[00:41:41] *** Quits: pedregalux[m] (~pedregalu@2001:470:69fc:105::92cb) (*.net *.split)
[00:41:41] *** Quits: psydroid (~psydroid@user/psydroid) (*.net *.split)
[00:41:41] *** Quits: lola (~irelativi@2001:470:69fc:105::f015) (*.net *.split)
[00:41:41] *** Quits: mmercer (daemoen@2605:d100:0:2d:5054:ff:fef0:3953) (*.net *.split)
[00:41:41] *** Quits: MrElendig (~Urist@archlinux/op/MrElendig) (*.net *.split)
[00:41:41] *** Quits: vodkra (~vodkra@user/vodkra) (*.net *.split)
[00:41:41] *** Quits: PacKetIV (PacKetIV@user/packetiv) (*.net *.split)
[00:41:41] *** Quits: mjsir911 (~bnc@user/mjsir911) (*.net *.split)
[00:41:41] *** Quits: urb4nm (~urb4nm@165.227.158.65) (*.net *.split)
[00:41:41] *** Quits: l4yer (~l4yer@2001:ac8:31:8900:1012:29b6:fb45:418b) (*.net *.split)
[00:41:41] *** Quits: Luke (~ldm@hacksoc/member) (*.net *.split)
[00:41:41] *** Quits: gcbirzan (~gcbirzan@user/gcbirzan) (*.net *.split)
[00:41:41] *** Quits: mpmc (~mpmc@user/mpmc) (*.net *.split)
[00:41:41] *** Quits: llua (~llua@zsh/developer/llua) (*.net *.split)
[00:41:41] *** Quits: hsv (~unknown@user/hsv) (*.net *.split)
[00:41:41] *** Quits: ferros (~ferros@vps-eacaba1b.vps.ovh.net) (*.net *.split)
[00:41:41] *** Quits: dzz007 (~dzz007@user/dzz007) (*.net *.split)
[00:41:41] *** Quits: erica (~erica@user/erica) (*.net *.split)
[00:41:41] *** Quits: zerosum (~zerosum@user/zerosum) (*.net *.split)
[00:41:41] *** Quits: harleypig (thelounge@harleypig.com) (*.net *.split)
[00:41:41] *** Quits: tharkun (tharkun@kvm6.telegraphics.com.au) (*.net *.split)
[00:41:41] *** Quits: tonitch (~tonitch@user/tonitch) (*.net *.split)
[00:41:41] *** Quits: phy1729 (~phy1729@zsh/wizard/phy1729) (*.net *.split)
[00:41:41] *** Quits: svet_ (~ec2-user@ec2-3-144-179-53.us-east-2.compute.amazonaws.com) (*.net *.split)
[00:41:41] *** Quits: pyre_ (~pyre@crimeboss.nillas-power.com) (*.net *.split)
[00:41:41] *** Quits: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3) (*.net *.split)
[00:41:41] *** Quits: Masklin (~joel@h-155-4-23-152.A230.priv.bahnhof.se) (*.net *.split)
[00:41:41] *** Quits: connor_goodwolf_ (~connor@user/connor-goodwolf/x-2615606) (*.net *.split)
[00:41:41] *** Quits: jootoi (~jootoi@130.61.158.197) (*.net *.split)
[00:41:41] *** Quits: phryk (~totallyno@user/phryk) (*.net *.split)
[00:41:41] *** Quits: m1dnight (~christoph@christophe.dev) (*.net *.split)
[00:41:41] *** Quits: xizhendu_ (~xizhendu@240e:305:7380:8900:395b:be7:2347:dfa7) (*.net *.split)
[00:41:41] *** Quits: _VanCity (~Sixx@S0106d850e6cdc670.vs.shawcable.net) (*.net *.split)
[00:41:41] *** Quits: PublicWifi (~PublicWiF@user/publicwifi) (*.net *.split)
[00:41:41] *** Quits: jim (~jim@about/linux/staff/jim) (*.net *.split)
[00:41:41] *** Quits: capn (~capn@user/capn) (*.net *.split)
[00:41:41] *** Quits: barometz (~dvanb@i117058.upc-i.chello.nl) (*.net *.split)
[00:41:41] *** Quits: drincruz (drincruz@2607:5300:203:3f52::19) (*.net *.split)
[00:41:41] *** Quits: MJ94 (mj94@user/mj94) (*.net *.split)
[00:41:41] *** Quits: dpk (~dpk@xn--issum-vva.nonceword.org) (*.net *.split)
[00:41:41] *** Quits: pavelow_ (~pavelow@opticalchimp.com) (*.net *.split)
[00:41:41] *** Quits: marienz__ (~marienz@libera/staff/marienz) (*.net *.split)
[00:41:41] *** Quits: juzza1_ (~juzza1@78-27-78-26.bb.dnainternet.fi) (*.net *.split)
[00:41:41] *** Quits: s1b1 (~s1b1@user/s1b1) (*.net *.split)
[00:41:41] *** Quits: skreech (skreech@user/skreech) (*.net *.split)
[00:41:41] *** Quits: Jmtrix (~qed@user/jmtrix) (*.net *.split)
[00:41:41] *** Quits: cacheyourdreams (~cache@user/cacheyourdreams) (*.net *.split)
[00:41:41] *** Quits: Swayze (~gryster@user/swayze) (*.net *.split)
[00:41:41] *** Quits: babilen (~babilen@user/babilen) (*.net *.split)
[00:41:41] *** Quits: sveinse (~sveinse@2a01:799:55e:1000:c23f:d5ff:fe69:c6fb) (*.net *.split)
[00:41:41] *** Quits: dcaro_pto (~dcaro@user/dcaro) (*.net *.split)
[00:41:41] *** Quits: lockywolf (~lockywolf@public.lockywolf.net) (*.net *.split)
[00:41:41] *** Quits: orkim (~orkim@user/orkim) (*.net *.split)
[00:41:41] *** Quits: ChrisWarrick (kwpolska@user/kwpolska) (*.net *.split)
[00:41:41] *** Quits: noord (noord@user/noord) (*.net *.split)
[00:41:42] *** Quits: pulec (~pulec@user/pulec) (*.net *.split)
[00:41:42] *** Quits: odrling (~odrling@korone.aidoru.agency) (*.net *.split)
[00:41:42] *** Quits: the4oo4 (~the4oo4@shenzhou.whatbox.ca) (*.net *.split)
[00:41:42] *** Quits: bss (bss@rie.incorporeal.org) (*.net *.split)
[00:41:42] *** Quits: yolk (~yolk@2600:1f16:f4a:2100:77f5:a0ec:35f:147b) (*.net *.split)
[00:41:42] *** Quits: Sario (uid356235@fosshost/cdo/Sario) (*.net *.split)
[00:41:42] *** Quits: ccha (~ccha@user/ccha) (*.net *.split)
[00:41:42] *** Quits: Armen (~Armen@armen138.com) (*.net *.split)
[00:41:42] *** Quits: wintrmute (~wintrmute@bit.pappanaka.com) (*.net *.split)
[00:41:42] *** Quits: digicyc (aarona@user/digicyc) (*.net *.split)
[00:41:42] *** Quits: ruediger (~ruediger@user/ruediger) (*.net *.split)
[00:41:42] *** Quits: mkbloke (~mkbloke@vps.cammo.me.uk) (*.net *.split)
[00:41:42] *** Quits: push-f (~martin@push-f.com) (*.net *.split)
[00:41:42] *** Quits: Yhg1s (sid387777@python/psf/thomas) (*.net *.split)
[00:41:42] *** Quits: jiffy (elijah@has.a.fluffy.sh33p.org) (*.net *.split)
[00:41:42] *** Quits: Exa (exa@irc.moe) (*.net *.split)
[00:41:42] *** Quits: dhch (~dhch@185.213.154.165) (*.net *.split)
[00:41:42] *** Quits: rdz (~rdz@2001:620:120:1::12) (*.net *.split)
[00:41:42] *** Quits: k0fein (~esmeralda@user/k0fein) (*.net *.split)
[00:41:42] *** Quits: fructose (~fructose@user/fructose) (*.net *.split)
[00:41:42] *** Quits: Phase_ (~phase@user/phase) (*.net *.split)
[00:41:42] *** Quits: indyZ (~indy@user/indyz) (*.net *.split)
[00:41:42] *** Quits: tinyhippo (~tinyhippo@special-hostmask/tinyhippo) (*.net *.split)
[00:41:42] *** Quits: starz (starz@2001:41d0:8:4bd3::1) (*.net *.split)
[00:41:42] *** Quits: poorboy (~poorboy@159.89.189.144) (*.net *.split)
[00:41:42] *** Quits: ulif (~nick@user/ulif) (*.net *.split)
[00:41:42] *** Quits: seanBE (~seanBE@ec2-34-243-193-160.eu-west-1.compute.amazonaws.com) (*.net *.split)
[00:41:42] *** Quits: jemark (jemark@user/jemark) (*.net *.split)
[00:41:42] *** Quits: khile (cacambo@triton.blinkenshell.org) (*.net *.split)
[00:41:42] *** Quits: LostInWeb (~quassel@narvi.bifroest.eu) (*.net *.split)
[00:41:42] *** Quits: Nothing4You (N4Y@nothing4you.w.tf-w.tf) (*.net *.split)
[00:41:42] *** Quits: ablegreen (~ablegreen@tsunami.ocf.berkeley.edu) (*.net *.split)
[00:41:42] *** Quits: emptynine (tkk@cybertron.redlight.li) (*.net *.split)
[00:41:42] *** Quits: vladoski (~foo@93-36-219-239.ip62.fastwebnet.it) (*.net *.split)
[00:41:42] *** Quits: Hackerpcs (~user@user/hackerpcs) (*.net *.split)
[00:41:42] *** Quits: pepper (~pepper@user/pepper) (*.net *.split)
[00:41:42] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (*.net *.split)
[00:41:42] *** Quits: zeudap (~zeudap@45.91.23.141) (*.net *.split)
[00:41:42] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (*.net *.split)
[00:41:42] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (*.net *.split)
[00:41:42] *** Quits: rvalue (~rvalue@user/rvalue) (*.net *.split)
[00:41:42] *** Quits: rms2511 (~rrrrrrrrr@107-138-155-103.lightspeed.rlghnc.sbcglobal.net) (*.net *.split)
[00:41:42] *** Quits: Harlin (~DonQixote@75-163-148-159.clsp.qwest.net) (*.net *.split)
[00:41:42] *** Quits: baltazar (~baltazar@94-21-182-186.pool.digikabel.hu) (*.net *.split)
[00:41:42] *** Quits: lithammer (~lithammer@arch-vps.cloud.tilaa.com) (*.net *.split)
[00:41:42] *** Quits: Ennea (~Ennea@user/ennea) (*.net *.split)
[00:41:42] *** Quits: BSaboia (~bsaboia@95.179.154.99) (*.net *.split)
[00:41:42] *** Quits: Jenna16bit (~j16bit@c-73-228-39-16.hsd1.nm.comcast.net) (*.net *.split)
[00:41:42] *** Quits: alex11 (~alex11@user/alex11) (*.net *.split)
[00:41:42] *** Quits: remolej (~kenoba@user/kenoba) (*.net *.split)
[00:41:42] *** Quits: Burrr (~Burrr@urmomma-fux0rs-with.burrr.nl) (*.net *.split)
[00:41:42] *** Quits: operational (~operation@imgonnaf.art) (*.net *.split)
[00:41:42] *** Quits: zigo_ (~quassel@shade.infomaniak.ch) (*.net *.split)
[00:41:42] *** Quits: papna (~mike@159.203.139.114) (*.net *.split)
[00:41:42] *** Quits: nurupo (~nurupo.ga@user/nurupo) (*.net *.split)
[00:41:42] *** Quits: kai (~kai@x50d24799.cust.hiper.dk) (*.net *.split)
[00:41:42] *** Quits: nortoh (~nortoh@user/nortoh) (*.net *.split)
[00:41:42] *** Quits: rvgate (~rvgate@user/rvgate) (*.net *.split)
[00:41:42] *** Quits: LambdaComplex (~adam@wireguard/tunneler/lambdacomplex) (*.net *.split)
[00:41:42] *** Quits: FunkyBob (~curtis@vhost3.tinbrain.net) (*.net *.split)
[00:41:42] *** Quits: timothy (~timothy@redhat/timothy) (*.net *.split)
[00:41:42] *** Quits: Henry151 (~bishop@user/henry151) (*.net *.split)
[00:41:42] *** Quits: Penagwin (~Penagwin@207.148.13.191) (*.net *.split)
[00:41:42] *** Quits: paperManu_ (~paperManu@138.197.128.151) (*.net *.split)
[00:41:42] *** Quits: xMopx (~xMopx-lib@192.95.23.134) (*.net *.split)
[00:41:42] *** Quits: ttkap (~ttkap@user/ttkap) (*.net *.split)
[00:41:42] *** Quits: mgocobachi (~m@ancrae.com) (*.net *.split)
[00:41:42] *** Quits: sasha (~sasha@wikimedia/-sasha-) (*.net *.split)
[00:41:42] *** Quits: OliverUK (~opashley@70.138.105.34.bc.googleusercontent.com) (*.net *.split)
[00:41:42] *** Quits: joris2 (~joris@195.123.218.123) (*.net *.split)
[00:41:42] *** Quits: betterOn1 (~user@vmi489242.contaboserver.net) (*.net *.split)
[00:41:42] *** Quits: vlt (~dm@157.230.21.14) (*.net *.split)
[00:41:42] *** Quits: librenaut (~librenaut@user/librenaut) (*.net *.split)
[00:41:42] *** Quits: syllin (~syllin@user/syllin) (*.net *.split)
[00:41:42] *** Quits: aluria (~aluria@canonical/aluria) (*.net *.split)
[00:41:42] *** Quits: xavierdarkness (~xavierdar@user/xavierdarkness) (*.net *.split)
[00:41:42] *** Quits: the_rat (~ratto@emily.sorcio.org) (*.net *.split)
[00:41:42] *** Quits: A_Dragon (A_D@libera/staff/dragon) (*.net *.split)
[00:41:42] *** Quits: dynos01 (~dynos01@li820-149.members.linode.com) (*.net *.split)
[00:41:42] *** Quits: richrd (~wavi@thelounge/maintainer/wavi) (*.net *.split)
[00:41:42] *** Quits: petaflot (~root@lutolf.vserver.nimag.net) (*.net *.split)
[00:41:42] *** Quits: vancz (~vancz@user/vancz) (*.net *.split)
[00:41:42] *** Quits: foxtrot (~foxtrot@user/foxtrot) (*.net *.split)
[00:41:42] *** Quits: Dev0n (~Dev0n@user/dev0n) (*.net *.split)
[00:41:42] *** Quits: w1kl4s (~w1kl4s@user/w1kl4s) (*.net *.split)
[00:41:42] *** Quits: quesker (~idnet@mail.89vx.net) (*.net *.split)
[00:41:42] *** Quits: MrBurns (~japa@ec2-13-48-124-121.eu-north-1.compute.amazonaws.com) (*.net *.split)
[00:41:42] *** Quits: mattmcc (~matt@li807-33.members.linode.com) (*.net *.split)
[00:41:42] *** Quits: adium (adium@user/adium) (*.net *.split)
[00:41:42] *** Quits: manuels (~manuel@80.211.205.88) (*.net *.split)
[00:41:42] *** Quits: justaguy (~quassel@2a05:d014:742:eb00:7693:c44f:1fc3:29) (*.net *.split)
[00:41:42] *** Quits: sunyibo (~dorsch@2a04:52c0:101:443::) (*.net *.split)
[00:41:42] *** Quits: kgz (~kragniz@nyaa.kragniz.eu) (*.net *.split)
[00:41:42] *** Quits: Wooble (~Wooble@user/Wooble) (*.net *.split)
[00:41:42] *** Quits: anorthall (~anorthall@user/anorthall) (*.net *.split)
[00:41:42] *** Quits: voldial (~user@user/voldial) (*.net *.split)
[00:41:42] *** Quits: elias117 (~elias117@user/elias117) (*.net *.split)
[00:41:42] *** Quits: bl4ackpajamas[m] (~bl4ackpaj@2001:470:69fc:105::1:73f4) (*.net *.split)
[00:41:42] *** Quits: Echo419[m] (~echo419sa@2001:470:69fc:105::ef65) (*.net *.split)
[00:41:42] *** Quits: ronny (~ronny@2001:470:69fc:105::b57) (*.net *.split)
[00:41:42] *** Quits: saltrocklamp[m] (~hexology@user/hexology) (*.net *.split)
[00:41:42] *** Quits: schemanic[m] (~schemanic@2001:470:69fc:105::1:2450) (*.net *.split)
[00:41:42] *** Quits: YakoYoku (~yakoyoku@2001:470:69fc:105::780) (*.net *.split)
[00:41:43] *** Quits: felixschloesser[ (~felixschl@2001:470:69fc:105::1:64ed) (*.net *.split)
[00:41:43] *** Quits: theChaparral[m] (~thechapar@2001:470:69fc:105::1:6496) (*.net *.split)
[00:41:43] *** Quits: tg (~tg@rockylinux/infra/tg) (*.net *.split)
[00:41:43] *** Quits: markwdev (~mark@71-135-3-182.lightspeed.rlghnc.sbcglobal.net) (*.net *.split)
[00:41:43] *** Quits: fury__ (~fury@znc.codexterous.com) (*.net *.split)
[00:41:43] *** Quits: beaky (~beaky@2a03:b0c0:0:1010::1e:a001) (*.net *.split)
[00:41:43] *** Quits: sean345 (~sean345@2601:281:8700:4b6f:b991:989f:6b07:27eb) (*.net *.split)
[00:41:43] *** Quits: marienz (~marienz@libera/staff/marienz) (*.net *.split)
[00:41:43] *** Quits: remexre (~remexre@user/remexre) (*.net *.split)
[00:41:43] *** Quits: luna-is-here (~quassel@2a02:908:f761:2a3c::a) (*.net *.split)
[00:41:43] *** Quits: hardwire (sid415742@id-415742.uxbridge.irccloud.com) (*.net *.split)
[00:41:43] *** Quits: Lightsword (~Lightswor@user/lightsword) (*.net *.split)
[00:41:43] *** Quits: dab21_ (~dab21@pistis.amyanddavid.net) (*.net *.split)
[00:41:43] *** Quits: dale (~dale@user/dale) (*.net *.split)
[00:41:43] *** Quits: cebor (~cebor@user/cebor) (*.net *.split)
[00:41:43] *** Quits: wowi4213 (~wowi42@185.42.117.170) (*.net *.split)
[00:41:43] *** Quits: ericlee_ (~ericlee@23-120-34-97.lightspeed.sntcca.sbcglobal.net) (*.net *.split)
[00:41:43] *** Quits: r3m (~launch@user/r3m) (*.net *.split)
[00:41:43] *** Quits: kadobanana (~mud@user/kadoban) (*.net *.split)
[00:41:43] *** Quits: Jigsy (~Jigsy@user/jigsy) (*.net *.split)
[00:41:43] *** Quits: redgloboli (~redglobol@user/redgloboli) (*.net *.split)
[00:41:43] *** Quits: DerpGusta (~quassel@user/derpgusta) (*.net *.split)
[00:41:43] *** Quits: dg_dg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222) (*.net *.split)
[00:41:43] *** Quits: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net) (*.net *.split)
[00:41:43] *** Quits: Celelibi (celelibi@user/celelibi) (*.net *.split)
[00:41:43] *** Quits: nashimus (~nashimus@137.117.139.142) (*.net *.split)
[00:41:43] *** Quits: raukadah (~chandanku@51.159.58.174) (*.net *.split)
[00:41:43] *** Quits: jjhoo (~jahakala@user/jjhoo) (*.net *.split)
[00:41:43] *** Quits: blurry (xbaranov@lounge.fi.muni.cz) (*.net *.split)
[00:41:43] *** Quits: yitz (~yitz@exercism/yitz) (*.net *.split)
[00:41:43] *** Quits: nrg (~NRG@user/nrg) (*.net *.split)
[00:41:43] *** Quits: teroshan (~teroshan@static.28.181.130.94.clients.your-server.de) (*.net *.split)
[00:41:43] *** Quits: ominionx (~ominionx@172.58.136.5) (*.net *.split)
[00:41:43] *** Quits: tykling (~tykling@irc.tyknet.dk) (*.net *.split)
[00:41:43] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (*.net *.split)
[00:41:43] *** Quits: jinsun__ (~quassel@user/jinsun) (*.net *.split)
[00:41:43] *** Quits: ska (~ska@user/ska) (*.net *.split)
[00:41:43] *** Quits: xheimlich (~xheimlich@179.218.1.150) (*.net *.split)
[00:41:43] *** Quits: enkrypt (~enkrypt@user/enkrypt) (*.net *.split)
[00:41:43] *** Quits: doko (~doko@2a02:8106:1a:7600:8422:dca1:594e:8573) (*.net *.split)
[00:41:43] *** Quits: MrNaz (sid133418@id-133418.uxbridge.irccloud.com) (*.net *.split)
[00:41:43] *** Quits: kaibi_ (sid16580@id-16580.hampstead.irccloud.com) (*.net *.split)
[00:41:43] *** Quits: debnet (sid330295@python/afpy/debnet) (*.net *.split)
[00:41:43] *** Quits: joel135 (sid136450@id-136450.hampstead.irccloud.com) (*.net *.split)
[00:41:43] *** Quits: celphi (sid97751@user/celphi) (*.net *.split)
[00:41:43] *** Quits: tk (~tk@ircpuzzles/staff/tk) (*.net *.split)
[00:41:43] *** Quits: jocke-l (jocke-l@a.x0.is) (*.net *.split)
[00:41:43] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (*.net *.split)
[00:41:43] *** Quits: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi) (*.net *.split)
[00:41:43] *** Quits: BlessJah (~BlessJah@user/blessjah) (*.net *.split)
[00:41:43] *** Quits: fxhp (~fxhp@d-206-53-88-50.ct.cpe.atlanticbb.net) (*.net *.split)
[00:41:43] *** Quits: gdd (~gdd@129.199.146.230) (*.net *.split)
[00:41:43] *** Quits: janemba (~janemba@94.204.254.193) (*.net *.split)
[00:41:43] *** Quits: t4nk_freenode (~Go@user/t4nk) (*.net *.split)
[00:41:43] *** Quits: mjh4386_ (~mjh4386@165.22.53.231) (*.net *.split)
[00:41:43] *** Quits: effprime_ (~effprime@user/effprime) (*.net *.split)
[00:41:43] *** Quits: jrjsmrtn_ (~jrjsmrtn@ip-212-239-244-124.dsl.scarlet.be) (*.net *.split)
[00:41:43] *** Quits: fstd_ (~fstd@xdsl-89-1-56-234.nc.de) (*.net *.split)
[00:41:43] *** Quits: delarge (~chamigo@ctm.linuxers.cl) (*.net *.split)
[00:41:43] *** Quits: DarthGandalf (user@znc/developer/DarthGandalf) (*.net *.split)
[00:41:43] *** Quits: death916 (~death916@user/death916) (*.net *.split)
[00:41:43] *** Quits: Derailed (~tom@ec2-13-211-184-100.ap-southeast-2.compute.amazonaws.com) (*.net *.split)
[00:41:43] *** Quits: encukou (quassel@nat-pool-brq-t.redhat.com) (*.net *.split)
[00:41:43] *** Quits: rapha (~jrs@user/rapha) (*.net *.split)
[00:41:43] *** Quits: aivkiv (~aivkiv@server2.kivilius.com) (*.net *.split)
[00:41:43] *** Quits: WantToHelp (~WantToHel@user/wanttohelp) (*.net *.split)
[00:41:43] *** Quits: goatish (~geclark@19.60.188.35.bc.googleusercontent.com) (*.net *.split)
[00:41:43] *** Quits: thib (~thib@wikimedia/Thibaut120094) (*.net *.split)
[00:41:43] *** Quits: Gamah (~quassel@gamah.net) (*.net *.split)
[00:41:43] *** Quits: MatthewG (~foo@user/foo/x-8763512) (*.net *.split)
[00:41:43] *** Quits: sirn (~sirn@user/sirn) (*.net *.split)
[00:41:43] *** Quits: totte (~totte@h-82-196-112-155.A166.priv.bahnhof.se) (*.net *.split)
[00:41:43] *** Quits: nisstyre (~wes@user/nisstyre) (*.net *.split)
[00:41:43] *** Quits: guardian (~guardian@planet-d.net) (*.net *.split)
[00:41:43] *** Quits: AM (~techman@82-203-166-145.bb.dnainternet.fi) (*.net *.split)
[00:41:43] *** Quits: odinsbane (~mbs@pat-pool-138.crick.ac.uk) (*.net *.split)
[00:41:43] *** Quits: morrigan (~m0rr1gan@user/m0rr1gan) (*.net *.split)
[00:41:43] *** Quits: Brocker (~NoBody@user/brocker) (*.net *.split)
[00:41:43] *** Quits: extor (~xtor@192.99.217.240) (*.net *.split)
[00:41:43] *** Quits: montpol (montpol@fine.mouses.xyz) (*.net *.split)
[00:41:43] *** Quits: hendry (~hendry@210.23.22.2) (*.net *.split)
[00:41:43] *** Quits: Buliarous (~gypsydang@46.232.210.139) (*.net *.split)
[00:41:43] *** Quits: deutor_ (~quassel@82.177.4.226) (*.net *.split)
[00:41:43] *** Quits: dfch (~dfch@user/dfch) (*.net *.split)
[00:41:43] *** Quits: draq (~draq@user/draq) (*.net *.split)
[00:41:43] *** Quits: ezakimak (~ezakimak@c-174-52-132-123.hsd1.ut.comcast.net) (*.net *.split)
[00:41:43] *** Quits: Mikro (leo@libera.ninja) (*.net *.split)
[00:41:43] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (*.net *.split)
[00:41:43] *** Quits: CuriousErnestBro (~CuriousEr@user/curiousernestbro) (*.net *.split)
[00:41:43] *** Quits: SeeM (~SeeM@153.ip-54-38-53.eu) (*.net *.split)
[00:41:43] *** Quits: hodapp (~mawson@user/hodapp) (*.net *.split)
[00:41:43] *** Quits: vinnix (~vinnix@user/vinnix) (*.net *.split)
[00:41:43] *** Quits: rookie101 (~rookie@165.232.121.13) (*.net *.split)
[00:41:43] *** Quits: matrixise (~matrixise@python/psf/matrixise) (*.net *.split)
[00:41:43] *** Quits: spudpnds (~spud@eidolon.muppetlabs.com) (*.net *.split)
[00:41:43] *** Quits: mjacob (~mjacob@adrastea.uberspace.de) (*.net *.split)
[00:41:43] *** Quits: kushal (~hopless@dgplug/kushal) (*.net *.split)
[00:41:43] *** Quits: Raichvent (~Raichvent@193.123.33.210) (*.net *.split)
[00:41:43] *** Quits: auri (~quassel@fsf/member/auri) (*.net *.split)
[00:41:43] *** Quits: Moyst_ (~moyst@user/moyst) (*.net *.split)
[00:41:43] *** Quits: bsdbandit (~bwell@users.757.org) (*.net *.split)
[00:41:43] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (*.net *.split)
[00:41:43] *** Quits: ringo__ (~ringo@157.230.117.128) (*.net *.split)
[00:41:43] *** Quits: Kim^J (~hagbard@ec2-13-51-167-164.eu-north-1.compute.amazonaws.com) (*.net *.split)
[00:41:43] *** Quits: acnebs- (~acnebs@198.199.68.107) (*.net *.split)
[00:41:43] *** Quits: abyss (~robbins@user/robbins) (*.net *.split)
[00:41:43] *** Quits: spaceone (~spaceone@wc1.wechall.net) (*.net *.split)
[00:41:43] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (*.net *.split)
[00:41:43] *** Quits: magga (magga@ti0036a400-1042.bb.online.no) (*.net *.split)
[00:41:43] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (*.net *.split)
[00:41:43] *** Quits: maxzor (~maxzor@2a01cb04054faa005845757de706397d.ipv6.abo.wanadoo.fr) (*.net *.split)
[00:41:43] *** Quits: hexa- (~hexa-@juno.lossy.network) (*.net *.split)
[00:41:43] *** Quits: johnkeats7 (~johnkeats@2804:14c:32:a0cc:c1ad:5567:c947:cef7) (*.net *.split)
[00:41:43] *** Quits: Z-cat (~Z-cat@user/z-cat) (*.net *.split)
[00:41:43] *** Quits: Gurkenglas (~Gurkengla@dslb-090-186-104-244.090.186.pools.vodafone-ip.de) (*.net *.split)
[00:41:43] *** Quits: Sadale (~Sadale@user/sadale) (*.net *.split)
[00:41:43] *** Quits: pax_os__ (uid535114@ilkley.irccloud.com) (*.net *.split)
[00:41:43] *** Quits: nyah (~nyah@05453449.skybroadband.com) (*.net *.split)
[00:41:43] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (*.net *.split)
[00:41:43] *** Quits: dfrey (~dfrey@172.103.152.101) (*.net *.split)
[00:41:43] *** Quits: mxp (~mxp@185.16.205.131) (*.net *.split)
[00:41:43] *** Quits: el_kevino (~mote@2604:a880:400:d1::901:5001) (*.net *.split)
[00:41:43] *** Quits: sagax (~sagax_nb@user/sagax) (*.net *.split)
[00:41:43] *** Quits: flea (nosoul@gateway/vpn/protonvpn/nosoul) (*.net *.split)
[00:41:43] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (*.net *.split)
[00:41:43] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (*.net *.split)
[00:41:43] *** Quits: LucaTM (~LucaTM@user/lucatm) (*.net *.split)
[00:41:43] *** Quits: nmat[m] (~nmatm]@2001:470:69fc:105::1:5553) (*.net *.split)
[00:41:43] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (*.net *.split)
[00:41:43] *** Quits: njt (~njt@zaph.org) (*.net *.split)
[00:41:43] *** Quits: henbruas (~henbruas@ti0003a400-4203.bb.online.no) (*.net *.split)
[00:41:43] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (*.net *.split)
[00:41:43] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:6013:7539:4fef:cd22) (*.net *.split)
[00:41:43] *** Quits: chronon (~chronon@user/chronon) (*.net *.split)
[00:41:43] *** Quits: katrix (~m-ucfpsh@static.151.67.161.5.clients.your-server.de) (*.net *.split)
[00:41:43] *** Quits: jpaa (~jpaa@161.97.129.36) (*.net *.split)
[00:41:43] *** Quits: grimvar (~grimvar@i5C75F7E6.versanet.de) (*.net *.split)
[00:41:43] *** Quits: Telvana (~capo@user/telvana) (*.net *.split)
[00:41:43] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (*.net *.split)
[00:41:43] *** Quits: sus (zero@user/zeromomentum) (*.net *.split)
[00:41:44] *** Quits: mdk[m] (~mdk@python/psf/mdk) (*.net *.split)
[00:41:44] *** Quits: bitonic (~bitonic@2001:470:69fc:105::1812) (*.net *.split)
[00:41:44] *** Quits: spokojni[m] (~spokojnio@2001:470:69fc:105::1:3fb2) (*.net *.split)
[00:41:44] *** Quits: capra[m] (~capramatr@2001:470:69fc:105::1:2280) (*.net *.split)
[00:41:44] *** Quits: visicalc[m] (~visicalct@2001:470:69fc:105::1:6bba) (*.net *.split)
[00:41:44] *** Quits: berton[m] (~berton@2001:470:69fc:105::ce36) (*.net *.split)
[00:41:44] *** Quits: MichaelLaRosa[m] (~michaelbi@2001:470:69fc:105::1:6ac9) (*.net *.split)
[00:41:44] *** Quits: ktosiek (~ktosiek@2001:470:69fc:105::87ab) (*.net *.split)
[00:41:44] *** Quits: Syroth (~Syroth@pool-96-244-212-50.bltmmd.fios.verizon.net) (*.net *.split)
[00:41:44] *** Quits: sn_fk_n (~snufkin@2.221.192.124) (*.net *.split)
[00:41:44] *** Quits: mumixam (~m@user/mumixam) (*.net *.split)
[00:41:44] *** Quits: Riviera (Riviera@user/riviera) (*.net *.split)
[00:41:44] *** Quits: grawity (grawity@star.nullroute.lt) (*.net *.split)
[00:41:44] *** Quits: xaltsc (~xaltsc@user/xaltsc) (*.net *.split)
[00:41:44] *** Quits: Balzy (~Balzy@host-79-31-159-142.retail.telecomitalia.it) (*.net *.split)
[00:41:44] *** Quits: EGH (~EGH@185.25.195.104) (*.net *.split)
[00:41:44] *** Quits: mogad0n (~mogad0n@user/mogad0n) (*.net *.split)
[00:41:44] *** Quits: habnabit_ (habnabit@python/site-packages/habnabit) (*.net *.split)
[00:41:44] *** Quits: yaraju (~yaraju@user/yaraju) (*.net *.split)
[00:41:44] *** Quits: msalvatore (~msalvator@c-174-60-145-36.hsd1.pa.comcast.net) (*.net *.split)
[00:41:44] *** Quits: birkoff (birkoff@user/birkoff) (*.net *.split)
[00:41:44] *** Quits: _0ne (~one@user/0ne/x-2101768) (*.net *.split)
[00:41:44] *** Quits: Bkid (~Bkid@user/bkid) (*.net *.split)
[00:41:44] *** Quits: knkay (~knkay@213.190.30.120) (*.net *.split)
[00:41:44] *** Quits: bfortified (~bfortifie@user/bfortified) (*.net *.split)
[00:41:44] *** Quits: Wu (~wu@152.red-88-21-0.staticip.rima-tde.net) (*.net *.split)
[00:41:44] *** Quits: {HD} (~{HD}@86.106.121.213) (*.net *.split)
[00:41:44] *** Quits: ammar2 (admin@i.diddled.with.the.opers.so.they.klined.me) (*.net *.split)
[00:41:44] *** Quits: mort (~mort@188.166.114.29) (*.net *.split)
[00:41:44] *** Quits: dawg (dirtydawg@user/dawg) (*.net *.split)
[00:41:44] *** Quits: seanicus (sean@triton.blinkenshell.org) (*.net *.split)
[00:41:44] *** Quits: pie_ (~pie_bnc@user/pie/x-2818909) (*.net *.split)
[00:41:44] *** Quits: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net) (*.net *.split)
[00:41:44] *** Quits: DocMors (~DocMors@web.crypticity.net) (*.net *.split)
[00:41:44] *** Quits: LDerJim (~jim@user/LDerJim) (*.net *.split)
[00:41:44] *** Quits: poxifide (deathspawn@user/poxifide) (*.net *.split)
[00:41:44] *** Quits: BlackBishop (dexter@user/blackbishop) (*.net *.split)
[00:41:44] *** Quits: neoweb (sid343200@id-343200.lymington.irccloud.com) (*.net *.split)
[00:41:44] *** Quits: mwilson (mwilson@2600:3c01::f03c:92ff:fe7f:1149) (*.net *.split)
[00:41:44] *** Quits: gerard (~gerard@user/gerard) (*.net *.split)
[00:41:44] *** Quits: micah (~micah@debian/micah) (*.net *.split)
[00:41:44] *** Quits: egism (egis@starlight.iextreme.org) (*.net *.split)
[00:41:44] *** Quits: bdeferme (~bdeferme@i.ctrl86.com) (*.net *.split)
[00:41:44] *** Quits: gshumway (~gshumway@user/gshumway) (*.net *.split)
[00:41:44] *** Quits: rye (~rye@magpie.trojka.no) (*.net *.split)
[00:41:44] *** Quits: strudl (~strudl@user/strudl) (*.net *.split)
[00:41:44] *** Quits: MikachuPi (~Mikachu@2001:bc8:47a8:559::1) (*.net *.split)
[00:41:44] *** Quits: mokytis__ (~root@user/mokytis/x-7723836) (*.net *.split)
[00:41:44] *** Quits: madprops (hj8oijo@user/madprops) (*.net *.split)
[00:41:44] *** Quits: parazyd (~parazyd@devuan/developer/parazyd) (*.net *.split)
[00:41:44] *** Quits: Yorick- (znc@vps.freegamehosting.eu) (*.net *.split)
[00:41:44] *** Quits: gluon (~gluon@2a01:4f8:c0c:e2da::1) (*.net *.split)
[00:41:44] *** Quits: con3 (~con3@143.198.53.32) (*.net *.split)
[00:41:44] *** Quits: reda_ (~reda@user/reda) (*.net *.split)
[00:41:44] *** Quits: tudor_ (~tudor@tomka.hu) (*.net *.split)
[00:41:44] *** Quits: jfb4 (~jfb4@178.62.2.68) (*.net *.split)
[00:41:44] *** Quits: Stx (stx@libera/staff/stx) (*.net *.split)
[00:41:44] *** Quits: Cybergeek (~Cybergeek@2a03:b0c0:3:e0::1ab:5001) (*.net *.split)
[00:41:44] *** Quits: bertiger (~bertiger@user/bertiger) (*.net *.split)
[00:41:44] *** Quits: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) (*.net *.split)
[00:41:44] *** Quits: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net) (*.net *.split)
[00:41:44] *** Quits: smrtz (~smrtz@user/smrtz) (*.net *.split)
[00:41:44] *** Quits: funhouse (~funhouse@user/funhouse) (*.net *.split)
[00:41:44] *** Quits: georgios (~georgios@user/georgios) (*.net *.split)
[00:41:44] *** Quits: zmt00 (~zmt00@user/zmt00) (*.net *.split)
[00:41:44] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-801c-a6a4-997f-0730.res6.spectrum.com) (*.net *.split)
[00:41:44] *** Quits: Avdol[m] (~M-avdol-m@2001:470:69fc:105::1:72be) (*.net *.split)
[00:41:44] *** Quits: Rohit[m] (~rohitrohi@2001:470:69fc:105::1:5d55) (*.net *.split)
[00:41:44] *** Quits: Hist (~histausse@2001:470:69fc:105::b91) (*.net *.split)
[00:41:44] *** Quits: k60 (~k60fmapme@2001:470:69fc:105::1:5597) (*.net *.split)
[00:41:44] *** Quits: meain (~meain@2001:470:69fc:105::2db) (*.net *.split)
[00:41:44] *** Quits: boris[m]12 (~borisruna@2001:470:69fc:105::32f3) (*.net *.split)
[00:41:44] *** Quits: miique (~miiquemat@2001:470:69fc:105::1:6901) (*.net *.split)
[00:41:45] *** Quits: jmcantrell (~jmcantrel@user/jmcantrell) (*.net *.split)
[00:41:45] *** Quits: vitali64[m] (~notrealvi@2001:470:69fc:105::c1bf) (*.net *.split)
[00:41:45] *** Quits: kuhilas (~kuhilas@2001:470:69fc:105::3040) (*.net *.split)
[00:41:45] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (*.net *.split)
[00:41:45] *** Quits: interestingname[ (~throwaway@2001:470:69fc:105::1:6560) (*.net *.split)
[00:41:45] *** Quits: ckrmml[m] (~ckrmmlmat@2001:470:69fc:105::1:64f3) (*.net *.split)
[00:41:45] *** Quits: transhumanist (~steven@2601:196:8800:35f0:4f97:7b0:1537:de5b) (*.net *.split)
[00:41:45] *** Quits: toxictrash (~toxictras@host-91-237-158-49.anfa.net.pl) (*.net *.split)
[00:41:45] *** Quits: mspe (~user@tilde.team/user/mspe) (*.net *.split)
[00:41:45] *** Quits: BinarySavior (~BinarySav@idlerpg/player/BinarySavior) (*.net *.split)
[00:41:45] *** Quits: LuKaRo (~LuKaRo@p4fc3264a.dip0.t-ipconnect.de) (*.net *.split)
[00:41:45] *** Quits: xcm (~xcm@user/xcm) (*.net *.split)
[00:41:45] *** Quits: nicoz (nicoz@nicoz.letz.dev) (*.net *.split)
[00:41:45] *** Quits: avane (~avane@fsf/member/avane) (*.net *.split)
[00:41:45] *** Quits: Reinhilde (ellenor@vice-chairwoman.of.freenode.management) (*.net *.split)
[00:41:45] *** Quits: CygniX (~CygniX@2a01:8740:1:727:4e:80:7f:2d) (*.net *.split)
[00:41:45] *** Quits: kronicma1 (user73386@neotame.csclub.uwaterloo.ca) (*.net *.split)
[00:41:45] *** Quits: _janus (~janus@blotter.ld-linux.so) (*.net *.split)
[00:41:45] *** Quits: truth2 (~truth@user/truth) (*.net *.split)
[00:41:45] *** Quits: phlixi_ (~phlixi@aftr-62-216-205-153.dynamic.mnet-online.de) (*.net *.split)
[00:41:45] *** Quits: znpy (~znpy@user/znpy) (*.net *.split)
[00:41:45] *** Quits: Togra (~Togra@user/togra) (*.net *.split)
[00:41:45] *** Quits: hernan604 (~administr@user/hernan604) (*.net *.split)
[00:41:45] *** Quits: derelict (~derelict@user/derelict) (*.net *.split)
[00:41:45] *** Quits: Henry_The_Longsh (~Henry@46.101.4.181) (*.net *.split)
[00:41:45] *** Quits: andi_ (~andi@user/andi/x-3467420) (*.net *.split)
[00:41:45] *** Quits: salparadise (~salparadi@129.146.17.140) (*.net *.split)
[00:41:45] *** Quits: mdw (~root@159.65.86.163) (*.net *.split)
[00:41:45] *** Quits: 040AAH1DN (~root@ip209.ip-94-23-121.eu) (*.net *.split)
[00:41:45] *** Quits: RoyK (~roy@user/royk) (*.net *.split)
[00:41:45] *** Quits: esaym (~esaym153@net153.net) (*.net *.split)
[00:41:45] *** Quits: tmbg_ (~bob@2001:4801:7827:101:be76:4eff:fe10:8db6) (*.net *.split)
[00:41:45] *** Quits: micronnn (~micronn@user/micronn) (*.net *.split)
[00:41:45] *** Quits: olbat__ (~olbat@user/olbat) (*.net *.split)
[00:41:45] *** Quits: prime (~prime@user/prime) (*.net *.split)
[00:41:45] *** Quits: chilversc (~chilversc@user/chilversc) (*.net *.split)
[00:41:45] *** Quits: roppert (~roppert@inb4.se) (*.net *.split)
[00:41:45] *** Quits: noent (~quassel@squint.a-oben.org) (*.net *.split)
[00:41:45] *** Quits: Freso (sid7914@libera/staff/metabrainz.user.Freso) (*.net *.split)
[00:41:45] *** Quits: kantlivelong (~kantlivel@octoprint/kantlivelong) (*.net *.split)
[00:41:45] *** Quits: nikomo (~quassel@nikomo.fi) (*.net *.split)
[00:41:45] *** Quits: doglike (~godlike@user/godlike) (*.net *.split)
[00:41:45] *** Quits: burakcank (~burakcank@has.arrived.and.is.ready-to.party) (*.net *.split)
[00:41:45] *** Quits: postal_blab_ (~quassel@2a01:4f8:202:53d9::bad:deed) (*.net *.split)
[00:41:45] *** Quits: NiKaN (sid385034@id-385034.helmsley.irccloud.com) (*.net *.split)
[00:41:45] *** Quits: Lvl4Sword (sid483043@user/lvl4sword) (*.net *.split)
[00:41:45] *** Quits: crackerjack (~crackerja@pear.bnc4free.com) (*.net *.split)
[00:41:45] *** Quits: shrysr_ (~shrysr@2600:3c04::f03c:91ff:fece:e233) (*.net *.split)
[00:41:45] *** Quits: NovaXrine_ (~NovaXrine@2604:a880:4:1d0::183:6000) (*.net *.split)
[00:41:45] *** Quits: drew (~drew@user/drew) (*.net *.split)
[00:41:45] *** Quits: ldlework (~hexeme@user/hexeme) (*.net *.split)
[00:41:45] *** Quits: BytesAndCoffee (~libera@bytes.coffee) (*.net *.split)
[00:41:45] *** Quits: lachesis (~lachesis@user/lachesis) (*.net *.split)
[00:41:45] *** Quits: ThiefMaster (thief@indico/developer/thiefmaster) (*.net *.split)
[00:41:45] *** Quits: sunarch (uid526836@user/sunarch) (*.net *.split)
[00:41:45] *** Quits: holbrode (sid339826@id-339826.tinside.irccloud.com) (*.net *.split)
[00:41:45] *** Quits: jor_ (~jor@jor.link) (*.net *.split)
[00:41:45] *** Quits: AhmedAmerican (sid470527@id-470527.ilkley.irccloud.com) (*.net *.split)
[00:41:45] *** Quits: Lartza (lartza@user/lartza) (*.net *.split)
[00:41:45] *** Quits: rpittau (sid346891@id-346891.tinside.irccloud.com) (*.net *.split)
[00:41:45] *** Quits: oisota (~oisota@user/oisota) (*.net *.split)
[00:41:45] *** Quits: ingo (~ingo@user/ingo) (*.net *.split)
[00:41:45] *** Quits: uhu (~uhu@2a01:4f9:c010:1087::2) (*.net *.split)
[00:41:45] *** Quits: SoF (~skius@user/skius) (*.net *.split)
[00:41:45] *** Quits: _0az3 (~az0@user/az0) (*.net *.split)
[00:41:45] *** Quits: sunny93 (~sunny93@wireguard/tunneler/sunny93) (*.net *.split)
[00:41:45] *** Quits: DonRichie (~DonRichie@ricl.de) (*.net *.split)
[00:41:45] *** Quits: dgavrilov (~dgavrilov@135.181.252.168) (*.net *.split)
[00:41:45] *** Quits: quasineutral (~quaisneut@user/quasineutral) (*.net *.split)
[00:41:45] *** Quits: homura (uid398348@user/homura) (*.net *.split)
[00:41:45] *** Quits: amazigh (~amirouche@user/amirouche) (*.net *.split)
[00:41:45] *** Quits: zoid (~zoid@user/zoid) (*.net *.split)
[00:41:45] *** Quits: greenbagels (~gb@user/greenbagels) (*.net *.split)
[00:41:45] *** Quits: zegalch (~zegalch@178.128.75.133) (*.net *.split)
[00:41:45] *** Quits: bookworm (~bookworm@thelounge/maintainer/bookworm) (*.net *.split)
[00:41:45] *** Quits: andreas303 (andreas303@ip227.orange.bnc4free.com) (*.net *.split)
[00:41:45] *** Quits: mosh3k21 (~mosh3k21@user/mosh3k21) (*.net *.split)
[00:41:45] *** Quits: Tritium (~tritium@toxin.sdamon.com) (*.net *.split)
[00:41:45] *** Quits: rgp (~rgp@user/rgp) (*.net *.split)
[00:41:45] *** Quits: fhackdroid (~fhackdroi@ec2-13-233-118-159.ap-south-1.compute.amazonaws.com) (*.net *.split)
[00:41:45] *** Quits: ravish0007 (~quassel@ec2-65-0-45-121.ap-south-1.compute.amazonaws.com) (*.net *.split)
[00:41:45] *** Quits: apollo13 (apollo13@django/moderator/apollo13) (*.net *.split)
[00:41:45] *** Quits: IceMichael (~IceMichae@h2878436.stratoserver.net) (*.net *.split)
[00:41:45] *** Quits: ialokin (znc@user/ialokin) (*.net *.split)
[00:41:45] *** Quits: mra90 (~Martin@134.191.221.84) (*.net *.split)
[00:41:45] *** Quits: mchlumsky (~mchlumsky@modemcable106.190-179-173.mc.videotron.ca) (*.net *.split)
[00:41:45] *** Quits: mnabid (uid448607@user/mnabid) (*.net *.split)
[00:41:45] *** Quits: zalt (~zalt@user/zalt) (*.net *.split)
[00:41:46] *** Quits: henco (~henco@lon11.dustyservers.com) (*.net *.split)
[00:41:46] *** Quits: matthewcroughan (~quassel@static.211.38.12.49.clients.your-server.de) (*.net *.split)
[00:41:46] *** Quits: enyc (~enyc@user/enyc) (*.net *.split)
[00:41:46] *** Quits: Helenah (s98259@user/helenah) (*.net *.split)
[00:41:46] *** Quits: redkrieg (~redkrieg@user/redkrieg) (*.net *.split)
[00:41:46] *** Quits: dreamer (~dreamer@user/dreamer) (*.net *.split)
[00:41:46] *** Quits: twainwek (~user@144.211.196.35.bc.googleusercontent.com) (*.net *.split)
[00:41:46] *** Quits: zoraj (~zoraj@209.126.81.159) (*.net *.split)
[00:41:46] *** Quits: wolfshappen (~waff@irc.furworks.de) (Max SendQ exceeded)
[00:44:14] *** Joins: xcm (~xcm@static.90.45.69.159.clients.your-server.de)
[00:44:14] *** Joins: asix (~Anders@user/asix)
[00:44:14] *** Joins: Nei (~ailin@openSUSE/member/ailin-nemui)
[00:44:14] *** Joins: nickodd (~nickodd@user/nickodd)
[00:44:14] *** Joins: han-` (~han`@user/han-/x-0887595)
[00:44:14] *** Joins: AnimalFarmPig (~quassel@user/animalfarmpig)
[00:44:14] *** Joins: Norkle (~norkle@admin.nasa-g0v.com)
[00:44:14] *** Joins: lantech19446 (~lantech19@144.202.10.138)
[00:44:14] *** Joins: ldericher (~LDer@pantalaimon.yavook.de)
[00:44:14] *** Joins: Dantali0n (~Dantali0n@251-228-138-45.connected.by.freedominter.net)
[00:44:14] *** Joins: ntdll_ (~ntdll@shion.saiban.me)
[00:44:14] *** Joins: achilleas (~ach@user/achilleas)
[00:44:14] *** Joins: streety (~streety@li761-24.members.linode.com)
[00:44:14] *** Joins: peanuter_ (~peanuter@static.190.220.201.138.clients.your-server.de)
[00:44:14] *** Joins: LordKalma (~LordKalma@server.ruilvo.com)
[00:44:14] *** Joins: NOTevil (~notevil@user/notevil)
[00:44:14] *** Joins: kolcon (~kolcon@v.kolouch.org)
[00:44:14] *** Joins: hrm (~hrm@nimbus.harmtemolder.nl)
[00:44:14] *** Joins: dlam (~dlam@dlam.me)
[00:44:14] *** Joins: meejah (~meejah@rutas.meejah.ca)
[00:44:14] *** Joins: Helle (~helle@45.83.235.185)
[00:44:14] *** Joins: stella (~aoei@nethackscoreboard/aoei)
[00:44:14] *** Joins: n1000 (~n1000@user/n1000)
[00:44:14] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[00:44:14] *** Joins: lidless (~lidless@user/lidless)
[00:44:14] *** Joins: ecool (~ecool@ecool.dev)
[00:44:14] *** Joins: gjvc (~gjvc@user/gjvc)
[00:44:14] *** Joins: nigelb (~nigel@zeus.nigelb.me)
[00:44:14] *** Joins: simplicity (~yti@user/simplicity)
[00:44:14] *** Joins: Spydar007 (~spydar007@user/spydar007)
[00:44:14] *** Joins: dminuoso (~dminuoso@user/dminuoso)
[00:44:14] *** Joins: DesolateHypertex (~DesolateH@static.213-133-103-49.clients.your-server.de)
[00:44:14] *** Joins: pr3d4t0r (~zhenya01@user/pr3d4t0r)
[00:44:14] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[00:44:14] *** Joins: potatosal (~salad@user/potatosal)
[00:44:14] *** Joins: Melon_Bread (~Melon_Bre@li958-238.members.linode.com)
[00:44:14] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[00:44:14] *** Joins: queue- (~nerd@user/queue/x-7267619)
[00:44:14] *** Joins: _val_ (~valentin@82-169-14-137.biz.kpn.net)
[00:44:14] *** Joins: ethoxy (~root@bison.alphaw0lf.xyz)
[00:44:14] *** Joins: jiffe (~jiffe@47-220-182-140.gtwncmkt04.res.dyn.suddenlink.net)
[00:44:14] *** Joins: dsp00 (~dsp00@20.79.249.135)
[00:44:14] *** Joins: kenwoodfox (~quassel@user/kenwoodfox)
[00:44:14] *** Joins: kungp (~kungp@h-46-59-2-200.A230.priv.bahnhof.se)
[00:44:14] *** Joins: mage (~julien@orval.bbpf.belspo.be)
[00:44:14] *** Joins: xakan (~xakan@pnmx.zdx.fr)
[00:44:14] *** Joins: naari (~naari@user/naari)
[00:44:14] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[00:44:14] *** Joins: greatgatsby__ (~greatgats@bras-base-toroon0411w-grc-52-142-114-106-7.dsl.bell.ca)
[00:44:14] *** Joins: purplex (~purplex@user/purplex)
[00:44:14] *** Joins: cryocaustik7 (~cryocaust@user/cryocaustik)
[00:44:14] *** Joins: Dan39 (~dan@user/dan39)
[00:44:14] *** Joins: Neopolitan (~tn5421@45.76.61.24)
[00:44:14] *** Joins: Tomassi-1 (~Tomassi-1@ec2-16-170-233-250.eu-north-1.compute.amazonaws.com)
[00:44:14] *** Joins: coc0nut (~coc0nut@user/coc0nut)
[00:44:14] *** Joins: dodo (~dodo@user/dodo)
[00:44:14] *** Joins: ThomasJ (~ThomasJ@user/thomasj)
[00:44:14] *** Joins: DXR (~lyrical@194.219.251.132)
[00:44:14] *** Joins: sunyour (~sunyour@129.226.182.99)
[00:44:14] *** Joins: Forkk (~forkk@li926-228.members.linode.com)
[00:44:14] *** Joins: gerty (~gerty@user/gerty)
[00:44:14] *** Joins: arooni (~arooni@li1062-244.members.linode.com)
[00:44:14] *** Joins: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[00:44:14] *** Joins: Kraus (~quassel@075-141-246-250.res.spectrum.com)
[00:44:14] *** Joins: mcglk (~mcglk@131.191.49.120)
[00:44:14] *** Joins: voidcat (~voidcat@user/voidcat)
[00:44:14] *** Joins: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt)
[00:44:14] *** Joins: jjasghar (~jjasghar@idlerpg/player/jjasghar)
[00:44:14] *** Joins: mmalter (~mmalter@88.126.10.237)
[00:44:14] *** Joins: HvszrStykp (~X@81.171.62.84)
[00:44:14] *** Joins: justGhost (~justache@user/justache)
[00:44:14] *** Joins: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com)
[00:44:14] *** Joins: lifefir31 (~lifefir3@152.37.120.101)
[00:44:14] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[00:44:14] *** Joins: kcrk (~kcrk@user/kcrk)
[00:44:14] *** Joins: martums5 (~martums@user/martums)
[00:44:14] *** Joins: brentaarnold (~brentaarn@24.112.58.14)
[00:44:14] *** Joins: dskull (~dskull@user/dskull)
[00:44:14] *** Joins: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net)
[00:44:14] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[00:44:14] *** Joins: reset (~reset@user/reset)
[00:44:14] *** Joins: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com)
[00:44:14] *** Joins: wilk (~wilk@user/wilk)
[00:44:14] *** Joins: Dotz0cat (~Dotz0cat@h55.84.187.173.dynamic.ip.windstream.net)
[00:44:14] *** Joins: kuahara (kuahara@072-182-135-032.res.spectrum.com)
[00:44:14] *** Joins: lumgwada (~lumgwada@user/lumgwada)
[00:44:14] *** Joins: swistak (~swistak@185.21.216.141)
[00:44:14] *** Joins: ghormoon (~ghormoon@ghorland.net)
[00:44:14] *** Joins: Pici (~bnrubin@li1014-36.members.linode.com)
[00:44:14] *** Joins: tpr (~tpr@user/tpr)
[00:44:14] *** Joins: Mogget (~Mogget@vogon02.moshwire.com)
[00:44:14] *** Joins: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net)
[00:44:14] *** Joins: crunchy_david (~david@pgguru.net)
[00:44:14] *** Joins: Joel (~jjshoe@user/joel)
[00:44:14] *** Joins: Nnnavd (~Nnavd@ec2-34-220-224-214.us-west-2.compute.amazonaws.com)
[00:44:14] *** Joins: mawk (~mawk@wireguard/contributor/mawk)
[00:44:14] *** Joins: cursey (~cursey@user/cursey)
[00:44:14] *** Joins: iob (~iob@nat1.prg.suse.com)
[00:44:14] *** Joins: samuelbernardo (~samuelber@nata01.lip.pt)
[00:44:14] *** Joins: SlicerDicer68 (~SlicerDic@107-208-180-225.lightspeed.mdsnwi.sbcglobal.net)
[00:44:14] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[00:44:14] *** Joins: georgeisbot (~georgeisb@8.12.22.9)
[00:44:14] *** Joins: libussa (~libussa@libussa.net)
[00:44:14] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[00:44:14] *** Joins: MrC (~Ben@mrbenc.net)
[00:44:14] *** Joins: axisys (~axisys@ec2-52-207-123-244.compute-1.amazonaws.com)
[00:44:14] *** Joins: infernix (~nix@spirit.infernix.net)
[00:44:14] *** Joins: erry (~erry@errietta.me)
[00:44:14] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[00:44:14] *** Joins: WayToDoor (~WayToDoor@user/waytodoor)
[00:44:14] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[00:44:14] *** Joins: Duckle (~Duckle@user/duckle)
[00:44:14] *** Joins: onur (~onur@user/onur)
[00:44:14] *** Joins: towel (~towel@user/towel)
[00:44:14] *** Joins: rwbrambler (~Thunderbi@65.183.138.202)
[00:44:14] *** Joins: treefrob (~treefrob@p57a96ba4.dip0.t-ipconnect.de)
[00:44:14] *** Joins: seabre (~seabre@user/seabre)
[00:44:14] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[00:44:14] *** Joins: Roedy (Roedy@user/roedy)
[00:44:14] *** Joins: dude-x_ (~textual@72.76.74.165)
[00:44:14] *** Joins: RiFo (~RiFo@user/rifo)
[00:44:14] *** Joins: agireud (~agireud@user/agireud)
[00:44:14] *** Joins: w0rp (~w0rp@w0rp.com)
[00:44:14] *** Joins: sokan (~sokan@85.73.227.251)
[00:44:14] *** Joins: astiak (~astiak@ownage.biz)
[00:44:14] *** Joins: launchd (~launchd@bitbot/launchd)
[00:44:14] *** Joins: Phase (~phase@user/phase)
[00:44:14] *** Joins: hyiltiz (~quassel@31.220.5.250)
[00:44:14] *** Joins: waynew (~wayne@user/waynew)
[00:44:14] *** Joins: sleepingforest (~sleepingf@pool-96-235-63-235.pitbpa.east.verizon.net)
[00:44:14] *** Joins: KombuchaKip (~kip@192.252.230.5)
[00:44:14] *** Joins: synic (~squish@li74-118.members.linode.com)
[00:44:14] *** Joins: ttys000 (~ttys000@user/ttys000)
[00:44:14] *** Joins: fikran (~fikran@user/fikran)
[00:44:14] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[00:44:14] *** Joins: mossman93 (~quassel@user/mossman93)
[00:44:14] *** Joins: dthpulse (~quassel@podciarou.sk)
[00:44:14] *** Joins: gnoirzox (~gnoirzox@178.170.103.136)
[00:44:14] *** Joins: Juhaz (~juhaz@hilla.kapsi.fi)
[00:44:14] *** Joins: Wulf (~Wulf@user/wulf)
[00:44:14] *** Joins: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com)
[00:44:14] *** Joins: novapy (~chronos@12.71.10.20)
[00:44:14] *** Joins: \mSg (mSg@user/msg/x-0285936)
[00:44:14] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[00:44:14] *** Joins: Vision (~Vision@097-087-115-181.res.spectrum.com)
[00:44:14] *** Joins: analoq (~yashi@user/dies)
[00:44:14] *** Joins: Viewday11 (~Viewday@61.141.126.127)
[00:44:14] *** Joins: Trashlord (~trash@user/trashlord)
[00:44:14] *** Joins: djhankb (~djhankb@208.113.164.68)
[00:44:14] *** Joins: moto (~moto@user/moto)
[00:44:14] *** Joins: tinystoat (~squeek@user/tinystoat)
[00:44:14] *** Joins: zaz\ (~zaz@poneybl.eu)
[00:44:14] *** Joins: pabed (~Thunderbi@89.37.15.34)
[00:44:14] *** Joins: kaivai_ (~kaivai@user/kaivai)
[00:44:14] *** Joins: justyb11 (~justyb@64.253.212.72)
[00:44:14] *** Joins: xkuru (~xkuru@user/xkuru)
[00:44:14] *** Joins: manti7 (~manti7@176.10.104.94)
[00:44:14] *** Joins: Klinda (~superleag@user/klinda)
[00:44:14] *** Joins: Xat` (~Xat`@ns300217.ip-91-121-29.eu)
[00:44:14] *** Joins: sale (~sale@ypocit.initech.link)
[00:44:14] *** Joins: tomg_ (~tomg@user/tomg)
[00:44:14] *** Joins: nickel8448 (~rahulwadh@147.80.76.34.bc.googleusercontent.com)
[00:44:14] *** Joins: someuser (~user@197.54.43.98)
[00:44:14] *** Joins: Lunatrius (~Lunatrius@77.38.76.5)
[00:44:14] *** Joins: tatarqa (~kli@ip-89-177-122-45.net.upcbroadband.cz)
[00:44:14] *** Joins: millido (~millido@84.210.150.128)
[00:44:14] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[00:44:14] *** Joins: supakeen (~user@python/site-packages/supakeen)
[00:44:14] *** Joins: upsala (~zcb@185.213.155.232)
[00:44:14] *** Joins: humbertowoody (~humbertow@187.202.198.64)
[00:44:14] *** Joins: goepsilongo (~goepsilon@cpe-74-73-86-74.nyc.res.rr.com)
[00:44:14] *** Joins: OPK (~OPK@user/opk)
[00:44:14] *** Joins: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com)
[00:44:14] *** Joins: akk (~akk@75-161-95-245.albq.qwest.net)
[00:44:14] *** Joins: koopman (sid466269@ilkley.irccloud.com)
[00:44:14] *** Joins: angular_mike_ (sid45533@ilkley.irccloud.com)
[00:44:14] *** Joins: Sheilong (uid293653@ilkley.irccloud.com)
[00:44:14] *** Joins: MootPoot (uid444585@ilkley.irccloud.com)
[00:44:14] *** Joins: johnjaye (~pi@173.209.65.233)
[00:44:14] *** Joins: Guest2819 (~lastshell@user/lastshell)
[00:44:14] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[00:44:14] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[00:44:14] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[00:44:14] *** Joins: kickingvegas (~cchoi@c-67-170-234-150.hsd1.ca.comcast.net)
[00:44:14] *** Joins: FluffyMask (~masque@user/fluffymask)
[00:44:14] *** Joins: mat001 (~mat001@72.28.108.216)
[00:44:14] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[00:44:14] *** Joins: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net)
[00:44:14] *** Joins: cheater (~Username@user/cheater)
[00:44:14] *** Joins: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[00:44:14] *** Joins: darksun (~darksun@user/darksun)
[00:44:14] *** Joins: aslicedbanjo (~aslicedba@host86-160-16-70.range86-160.btcentralplus.com)
[00:44:14] *** Joins: bloody (~bloody@user/bloody)
[00:44:14] *** Joins: SGautam (uid286066@ilkley.irccloud.com)
[00:44:14] *** Joins: lxdr (~lxdr@user/lxdr)
[00:44:14] *** Joins: michele (~eraser@user/michele)
[00:44:14] *** Joins: snalty_ (~Shhh@user/snalty)
[00:44:14] *** Joins: kurfen_ (~kurfen@213.152.188.7)
[00:44:14] *** Joins: Betal (~Betal@user/betal)
[00:44:14] *** Joins: jiggawatt (~jiggawatt@runs.on.ubuntu.crapping.cricket)
[00:44:14] *** Joins: whatsupdoc (uid509081@hampstead.irccloud.com)
[00:44:14] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[00:44:14] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[00:44:14] *** Joins: cocalero (~cocalero@200-140-37-88.user3p.brasiltelecom.net.br)
[00:44:14] *** Joins: auk (auk@gateway/vpn/protonvpn/auk)
[00:44:14] *** Joins: Strom (~strom@fedora/strom)
[00:44:14] *** Joins: Bato (~plauder@2001:bc8:182c:b39::1)
[00:44:14] *** Joins: Wegge (~wegge@user/wegge)
[00:44:14] *** Joins: niluje (~niluje@2a05:d012:f91:1700:6975:ef0b:def6:3bdd)
[00:44:14] *** Joins: hyper_dave (~hyper_dav@2a01:4f9:4a:246c::2)
[00:44:14] *** Joins: mobius (sid478273@id-478273.uxbridge.irccloud.com)
[00:44:14] *** Joins: dragonmaster (dragonmast@user/dragonmaster)
[00:44:14] *** Joins: ws2k3 (znc@vps.freegamehosting.eu)
[00:44:14] *** Joins: moonmoon (awoo@libera/staff/moonmoon)
[00:44:14] *** Joins: carlio (~carlio@static.62.204.34.188.clients.your-server.de)
[00:44:14] *** Joins: johnplos1 (~John_Plos@user/johnplosky)
[00:44:14] *** Joins: Russell (russell@bnc4free/staff/russell)
[00:44:14] *** Joins: eloy (~quassel@2001:bc8:182c:650::1)
[00:44:14] *** Joins: NightMonkey (~NightMonk@user/nightmonkey)
[00:44:14] *** Joins: n-st (~n-st@user/n-st)
[00:44:14] *** Joins: arza (arza@arza.us)
[00:44:14] *** Joins: nickorta12 (~nickorta1@174-28-176-216.albq.qwest.net)
[00:44:14] *** Joins: mrkajetanp (~mrkajetan@88.98.245.28)
[00:44:14] *** Joins: RoadrunnerWMC (~Roadrunne@46.101.129.38)
[00:44:14] *** Joins: LogicAside (~LogicAsid@user/logicaside)
[00:44:14] *** Joins: Numerlor (~Numerlor@whydoyouhate.me)
[00:44:14] *** Joins: n0____ (~n0___@user/n0/x-7412091)
[00:44:14] *** Joins: OMGOMG (~bobrobert@poppy.ifi.uio.no)
[00:44:14] *** Joins: ouemt (~quassel@user/ouemt)
[00:44:14] *** Joins: tabakhase (tabakhase@user/tabakhase)
[00:44:14] *** Joins: bdeshi (~bdeshi@bdeshi.space)
[00:44:14] *** Joins: mrec_ (~markus@user/mrec)
[00:44:14] *** Joins: fxrs (~fxrs@192.227.212.130)
[00:44:14] *** Joins: kiska3 (james@user/kiska)
[00:44:14] *** Joins: gothicserpent (~gothicser@2604:a880:4:1d0::176:6000)
[00:44:14] *** Joins: meti (~meti@user/meti)
[00:44:14] *** Joins: Scotteh (~Scotteh@user/scotteh)
[00:44:14] *** Joins: hirish (~hirish@ip85.ip-137-74-20.eu)
[00:44:14] *** Joins: neil (~kneel@rockylinux/infra/neil)
[00:44:14] *** Joins: cYmen (~simon@squint.a-oben.org)
[00:44:14] *** Joins: blackpawn (~blackpawn@c-73-73-53-23.hsd1.il.comcast.net)
[00:44:14] *** Joins: bleb (~cm@user/bleb)
[00:44:14] *** Joins: unautre (~unautre@user/unautre)
[00:44:14] *** Joins: bailsman (~Mm1@xls01.freecult.org)
[00:44:14] *** Joins: thumbs (1000@apache/committer/thumbs)
[00:44:14] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[00:44:14] *** Joins: Timvde (~tim@towely.vdeynde.com)
[00:44:14] *** Joins: koolazer (~koo@user/koolazer)
[00:44:14] *** Joins: ntome (~ntome@user/ntome)
[00:44:14] *** Joins: jcass (~cindy@50-0-146-31.dsl.dynamic.fusionbroadband.com)
[00:44:14] *** Joins: Techcable (~Techcable@168.235.93.147)
[00:44:14] *** Joins: upekkha (~Advanced@2a01:4f8:1c0c:49df::1)
[00:44:14] *** Joins: pyfisch (~pyfisch@user/pyfisch)
[00:44:14] *** Joins: omegatron (~some@p5b056436.dip0.t-ipconnect.de)
[00:44:14] *** Joins: bzyx (~quassel@89-69-20-238.dynamic.chello.pl)
[00:44:14] *** Joins: Titore (~Titore@user/titore)
[00:44:14] *** Joins: madduck (~madduck@user/madduck)
[00:44:14] *** Joins: TML (~tml@user/tml)
[00:44:14] *** Joins: jesse-s (sid98646@id-98646.hampstead.irccloud.com)
[00:44:14] *** Joins: relipse (sid16131@id-16131.tinside.irccloud.com)
[00:44:14] *** Joins: blackhats (~blackhats@2602:fccf:1:1050::)
[00:44:14] *** Joins: kostkon__ (~kostkon@2a02:587:a116:f212:4d86:1980:f91d:1e03)
[00:44:14] *** Joins: agronholm (sid403424@id-403424.helmsley.irccloud.com)
[00:44:14] *** Joins: jposer (sid132110@id-132110.uxbridge.irccloud.com)
[00:44:14] *** Joins: daex (~daex@user/daex)
[00:44:14] *** Joins: mexen (uid495612@user/mexen)
[00:44:14] *** Joins: Quietus_ (~quietus@2a04:52c0:101:181::)
[00:44:14] *** Joins: Soni (~quassel@autistic.space)
[00:44:14] *** Joins: OlaNys (onm@irccore.ofelbar.se)
[00:44:14] *** Joins: dirtwash (~dirtwash@user/dirtwash)
[00:44:14] *** Joins: explodes (~explodes@user/explodes)
[00:44:14] *** Joins: baloona (~baloona@mail.baloona.de)
[00:44:14] *** Joins: dstufft (~dstufft@shitbird.caremad.io)
[00:44:14] *** Joins: jayray (~jayray@user/jayray)
[00:44:14] *** Joins: VictorKostyuk[m] (~thevicmat@2001:470:69fc:105::1:64e4)
[00:44:14] *** Joins: mr-demo[m] (~mr-demoma@2001:470:69fc:105::1:74b1)
[00:44:14] *** Joins: strider[m] (~gchamoulm@2001:470:69fc:105::1:26ee)
[00:44:14] *** Joins: aleko1[m] (~aleko1@2001:470:69fc:105::1:1016)
[00:44:14] *** Joins: worldofgeese (~worldofge@2001:470:69fc:105::1:3cd8)
[00:44:14] *** Joins: Hansuke[m] (~hansukema@2001:470:69fc:105::1:86bb)
[00:44:14] *** Joins: kyle[m] (~kylematri@2001:470:69fc:105::1:73e8)
[00:44:14] *** Joins: Madda (~Madda@2a05:f6c3:1935:0:2990:3a03:c1e1:2949)
[00:44:14] *** Joins: d1rewolf_x (~d1rewolfm@2001:470:69fc:105::1:74f2)
[00:44:14] *** Joins: cside (sid479702@id-479702.uxbridge.irccloud.com)
[00:44:14] *** Joins: nicode (~nic@45.72.195.35)
[00:44:14] *** Joins: therufuser (~therufuse@p5b02e22b.dip0.t-ipconnect.de)
[00:44:14] *** Joins: r0bby (r0bby@user/r0bby)
[00:44:14] *** Joins: nyuszika7h (nyuszika7h@lykos/dev/nyuszika7h)
[00:44:14] *** Joins: daniel2 (daniel@user/daniel2)
[00:44:14] *** Joins: Spawns (~Spawns_Ca@user/spawns-carpeting/x-6969421)
[00:44:14] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[00:44:14] *** Joins: Ingvix (~Ingvix@user/ingvix)
[00:44:14] *** Joins: led_belly (~led_belly@83.97.23.14)
[00:44:14] *** Joins: atomicwrites (~atomicwri@user/atomicwrites)
[00:44:14] *** Joins: Knyght (sid365271@id-365271.helmsley.irccloud.com)
[00:44:14] *** Joins: resmo (~resmo@2a00:d420:9:8a00:ea66:c398:9dde:b199)
[00:44:14] *** Joins: Barones (~Barones@user/Barones)
[00:44:14] *** Joins: parv (~quass@user/parv)
[00:44:14] *** Joins: zoraj (~zoraj@209.126.81.159)
[00:44:14] *** Joins: twainwek (~user@144.211.196.35.bc.googleusercontent.com)
[00:44:14] *** Joins: dreamer (~dreamer@user/dreamer)
[00:44:14] *** Joins: redkrieg (~redkrieg@user/redkrieg)
[00:44:14] *** Joins: Helenah (s98259@user/helenah)
[00:44:14] *** Joins: enyc (~enyc@user/enyc)
[00:44:14] *** Joins: matthewcroughan (~quassel@static.211.38.12.49.clients.your-server.de)
[00:44:14] *** Joins: henco (~henco@lon11.dustyservers.com)
[00:44:14] *** Joins: zalt (~zalt@user/zalt)
[00:44:14] *** Joins: mnabid (uid448607@user/mnabid)
[00:44:14] *** Joins: mchlumsky (~mchlumsky@modemcable106.190-179-173.mc.videotron.ca)
[00:44:14] *** Joins: ialokin (znc@user/ialokin)
[00:44:14] *** Joins: IceMichael (~IceMichae@h2878436.stratoserver.net)
[00:44:14] *** Joins: apollo13 (apollo13@django/moderator/apollo13)
[00:44:14] *** Joins: ravish0007 (~quassel@ec2-65-0-45-121.ap-south-1.compute.amazonaws.com)
[00:44:14] *** Joins: fhackdroid (~fhackdroi@ec2-13-233-118-159.ap-south-1.compute.amazonaws.com)
[00:44:14] *** Joins: rgp (~rgp@user/rgp)
[00:44:14] *** Joins: Tritium (~tritium@toxin.sdamon.com)
[00:44:14] *** Joins: mosh3k21 (~mosh3k21@user/mosh3k21)
[00:44:14] *** Joins: andreas303 (andreas303@ip227.orange.bnc4free.com)
[00:44:14] *** Joins: bookworm (~bookworm@thelounge/maintainer/bookworm)
[00:44:14] *** Joins: zegalch (~zegalch@178.128.75.133)
[00:44:14] *** Joins: greenbagels (~gb@user/greenbagels)
[00:44:14] *** Joins: zoid (~zoid@user/zoid)
[00:44:14] *** Joins: amazigh (~amirouche@user/amirouche)
[00:44:14] *** Joins: homura (uid398348@user/homura)
[00:44:14] *** Joins: quasineutral (~quaisneut@user/quasineutral)
[00:44:14] *** Joins: dgavrilov (~dgavrilov@135.181.252.168)
[00:44:14] *** Joins: DonRichie (~DonRichie@ricl.de)
[00:44:14] *** Joins: sunny93 (~sunny93@wireguard/tunneler/sunny93)
[00:44:14] *** Joins: _0az3 (~az0@user/az0)
[00:44:14] *** Joins: SoF (~skius@user/skius)
[00:44:14] *** Joins: uhu (~uhu@2a01:4f9:c010:1087::2)
[00:44:14] *** Joins: ingo (~ingo@user/ingo)
[00:44:14] *** Joins: oisota (~oisota@user/oisota)
[00:44:14] *** Joins: rpittau (sid346891@id-346891.tinside.irccloud.com)
[00:44:14] *** Joins: Lartza (lartza@user/lartza)
[00:44:14] *** Joins: AhmedAmerican (sid470527@id-470527.ilkley.irccloud.com)
[00:44:14] *** Joins: jor_ (~jor@jor.link)
[00:44:14] *** Joins: ThiefMaster (thief@indico/developer/thiefmaster)
[00:44:14] *** Joins: lachesis (~lachesis@user/lachesis)
[00:44:14] *** Joins: holbrode (sid339826@id-339826.tinside.irccloud.com)
[00:44:14] *** Joins: sunarch (uid526836@user/sunarch)
[00:44:14] *** Joins: BytesAndCoffee (~libera@bytes.coffee)
[00:44:14] *** Joins: drew (~drew@user/drew)
[00:44:14] *** Joins: ldlework (~hexeme@user/hexeme)
[00:44:14] *** Joins: shrysr_ (~shrysr@2600:3c04::f03c:91ff:fece:e233)
[00:44:14] *** Joins: NovaXrine_ (~NovaXrine@2604:a880:4:1d0::183:6000)
[00:44:14] *** Joins: crackerjack (~crackerja@pear.bnc4free.com)
[00:44:14] *** Joins: Lvl4Sword (sid483043@user/lvl4sword)
[00:44:14] *** Joins: NiKaN (sid385034@id-385034.helmsley.irccloud.com)
[00:44:14] *** Joins: postal_blab_ (~quassel@2a01:4f8:202:53d9::bad:deed)
[00:44:14] *** Joins: burakcank (~burakcank@has.arrived.and.is.ready-to.party)
[00:44:14] *** Joins: doglike (~godlike@user/godlike)
[00:44:14] *** Joins: nikomo (~quassel@nikomo.fi)
[00:44:14] *** Joins: Freso (sid7914@libera/staff/metabrainz.user.Freso)
[00:44:14] *** Joins: noent (~quassel@squint.a-oben.org)
[00:44:14] *** Joins: kantlivelong (~kantlivel@octoprint/kantlivelong)
[00:44:14] *** Joins: chilversc (~chilversc@user/chilversc)
[00:44:14] *** Joins: prime (~prime@user/prime)
[00:44:14] *** Joins: olbat__ (~olbat@user/olbat)
[00:44:14] *** Joins: esaym (~esaym153@net153.net)
[00:44:14] *** Joins: tmbg_ (~bob@2001:4801:7827:101:be76:4eff:fe10:8db6)
[00:44:14] *** Joins: RoyK (~roy@user/royk)
[00:44:14] *** Joins: micronnn (~micronn@user/micronn)
[00:44:14] *** Joins: 040AAH1DN (~root@ip209.ip-94-23-121.eu)
[00:44:14] *** Joins: salparadise (~salparadi@129.146.17.140)
[00:44:14] *** Joins: andi_ (~andi@user/andi/x-3467420)
[00:44:14] *** Joins: Henry_The_Longsh (~Henry@46.101.4.181)
[00:44:14] *** Joins: mdw (~root@159.65.86.163)
[00:44:14] *** Joins: derelict (~derelict@user/derelict)
[00:44:14] *** Joins: Togra (~Togra@user/togra)
[00:44:14] *** Joins: znpy (~znpy@user/znpy)
[00:44:14] *** Joins: phlixi_ (~phlixi@aftr-62-216-205-153.dynamic.mnet-online.de)
[00:44:14] *** Joins: truth2 (~truth@user/truth)
[00:44:14] *** Joins: _janus (~janus@blotter.ld-linux.so)
[00:44:14] *** Joins: kronicma1 (user73386@neotame.csclub.uwaterloo.ca)
[00:44:14] *** Joins: CygniX (~CygniX@2a01:8740:1:727:4e:80:7f:2d)
[00:44:14] *** Joins: Reinhilde (ellenor@vice-chairwoman.of.freenode.management)
[00:44:14] *** Joins: nicoz (nicoz@nicoz.letz.dev)
[00:44:14] *** Joins: avane (~avane@fsf/member/avane)
[00:44:14] *** Joins: roppert (~roppert@inb4.se)
[00:44:14] *** Joins: mra90 (~Martin@134.191.221.84)
[00:44:14] *** Joins: hernan604 (~administr@user/hernan604)
[00:44:14] *** Joins: LuKaRo (~LuKaRo@p4fc3264a.dip0.t-ipconnect.de)
[00:44:14] *** Joins: BinarySavior (~BinarySav@idlerpg/player/BinarySavior)
[00:44:14] *** Joins: mspe (~user@tilde.team/user/mspe)
[00:44:14] *** Joins: toxictrash (~toxictras@host-91-237-158-49.anfa.net.pl)
[00:44:14] *** Joins: transhumanist (~steven@2601:196:8800:35f0:4f97:7b0:1537:de5b)
[00:44:14] *** Joins: ckrmml[m] (~ckrmmlmat@2001:470:69fc:105::1:64f3)
[00:44:14] *** Joins: interestingname[ (~throwaway@2001:470:69fc:105::1:6560)
[00:44:14] *** Joins: jmcantrell (~jmcantrel@user/jmcantrell)
[00:44:14] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[00:44:14] *** Joins: boris[m]12 (~borisruna@2001:470:69fc:105::32f3)
[00:44:14] *** Joins: vitali64[m] (~notrealvi@2001:470:69fc:105::c1bf)
[00:44:14] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[00:44:14] *** Joins: miique (~miiquemat@2001:470:69fc:105::1:6901)
[00:44:14] *** Joins: kuhilas (~kuhilas@2001:470:69fc:105::3040)
[00:44:14] *** Joins: Rohit[m] (~rohitrohi@2001:470:69fc:105::1:5d55)
[00:44:14] *** Joins: Avdol[m] (~M-avdol-m@2001:470:69fc:105::1:72be)
[00:44:14] *** Joins: Hist (~histausse@2001:470:69fc:105::b91)
[00:44:14] *** Joins: k60 (~k60fmapme@2001:470:69fc:105::1:5597)
[00:44:14] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-801c-a6a4-997f-0730.res6.spectrum.com)
[00:44:14] *** Joins: zmt00 (~zmt00@user/zmt00)
[00:44:14] *** Joins: georgios (~georgios@user/georgios)
[00:44:14] *** Joins: pepper (~pepper@105.233.42.153)
[00:44:14] *** Joins: oakridge (~oakridge@user/oakridge)
[00:44:14] *** Joins: Tempesta (~Tempesta@user/tempesta)
[00:44:14] *** Joins: emptynine (tkk@cybertron.redlight.li)
[00:44:14] *** Joins: ablegreen (~ablegreen@tsunami.ocf.berkeley.edu)
[00:44:14] *** Joins: Nothing4You (N4Y@nothing4you.w.tf-w.tf)
[00:44:14] *** Joins: LostInWeb (~quassel@narvi.bifroest.eu)
[00:44:14] *** Joins: jemark (jemark@user/jemark)
[00:44:14] *** Joins: seanBE (~seanBE@ec2-34-243-193-160.eu-west-1.compute.amazonaws.com)
[00:44:14] *** Joins: ulif (~nick@user/ulif)
[00:44:14] *** Joins: poorboy (~poorboy@159.89.189.144)
[00:44:14] *** Joins: Phase_ (~phase@user/phase)
[00:44:14] *** Joins: fructose (~fructose@user/fructose)
[00:44:14] *** Joins: starz (starz@2001:41d0:8:4bd3::1)
[00:44:14] *** Joins: khile (cacambo@triton.blinkenshell.org)
[00:44:14] *** Joins: dhch (~dhch@185.213.154.165)
[00:44:14] *** Joins: Exa (exa@irc.moe)
[00:44:14] *** Joins: Yhg1s (sid387777@python/psf/thomas)
[00:44:14] *** Joins: ruediger (~ruediger@user/ruediger)
[00:44:14] *** Joins: mkbloke (~mkbloke@vps.cammo.me.uk)
[00:44:14] *** Joins: wintrmute (~wintrmute@bit.pappanaka.com)
[00:44:14] *** Joins: Armen (~Armen@armen138.com)
[00:44:14] *** Joins: digicyc (aarona@user/digicyc)
[00:44:14] *** Joins: Sario (uid356235@fosshost/cdo/Sario)
[00:44:14] *** Joins: indyZ (~indy@user/indyz)
[00:44:14] *** Joins: yolk (~yolk@2600:1f16:f4a:2100:77f5:a0ec:35f:147b)
[00:44:14] *** Joins: ccha (~ccha@user/ccha)
[00:44:14] *** Joins: bss (bss@rie.incorporeal.org)
[00:44:14] *** Joins: the4oo4 (~the4oo4@shenzhou.whatbox.ca)
[00:44:14] *** Joins: jiffy (elijah@has.a.fluffy.sh33p.org)
[00:44:14] *** Joins: odrling (~odrling@korone.aidoru.agency)
[00:44:14] *** Joins: ChrisWarrick (kwpolska@user/kwpolska)
[00:44:14] *** Joins: orkim (~orkim@user/orkim)
[00:44:14] *** Joins: lockywolf (~lockywolf@public.lockywolf.net)
[00:44:14] *** Joins: tinyhippo (~tinyhippo@special-hostmask/tinyhippo)
[00:44:14] *** Joins: dcaro_pto (~dcaro@user/dcaro)
[00:44:14] *** Joins: babilen (~babilen@user/babilen)
[00:44:14] *** Joins: Swayze (~gryster@user/swayze)
[00:44:14] *** Joins: cacheyourdreams (~cache@user/cacheyourdreams)
[00:44:14] *** Joins: Jmtrix (~qed@user/jmtrix)
[00:44:14] *** Joins: skreech (skreech@user/skreech)
[00:44:14] *** Joins: juzza1_ (~juzza1@78-27-78-26.bb.dnainternet.fi)
[00:44:14] *** Joins: marienz__ (~marienz@libera/staff/marienz)
[00:44:14] *** Joins: s1b1 (~s1b1@user/s1b1)
[00:44:14] *** Joins: pavelow_ (~pavelow@opticalchimp.com)
[00:44:14] *** Joins: dpk (~dpk@xn--issum-vva.nonceword.org)
[00:44:14] *** Joins: MJ94 (mj94@user/mj94)
[00:44:14] *** Joins: drincruz (drincruz@2607:5300:203:3f52::19)
[00:44:14] *** Joins: rdz (~rdz@2001:620:120:1::12)
[00:44:14] *** Joins: pulec (~pulec@user/pulec)
[00:44:14] *** Joins: barometz (~dvanb@i117058.upc-i.chello.nl)
[00:44:14] *** Joins: capn (~capn@user/capn)
[00:44:14] *** Joins: jim (~jim@about/linux/staff/jim)
[00:44:14] *** Joins: PublicWifi (~PublicWiF@user/publicwifi)
[00:44:14] *** Joins: _VanCity (~Sixx@S0106d850e6cdc670.vs.shawcable.net)
[00:44:14] *** Joins: xizhendu_ (~xizhendu@240e:305:7380:8900:395b:be7:2347:dfa7)
[00:44:14] *** Joins: m1dnight (~christoph@christophe.dev)
[00:44:14] *** Joins: phryk (~totallyno@user/phryk)
[00:44:14] *** Joins: jootoi (~jootoi@130.61.158.197)
[00:44:14] *** Joins: connor_goodwolf_ (~connor@user/connor-goodwolf/x-2615606)
[00:44:14] *** Joins: Masklin (~joel@h-155-4-23-152.A230.priv.bahnhof.se)
[00:44:14] *** Joins: pyre_ (~pyre@crimeboss.nillas-power.com)
[00:44:14] *** Joins: svet_ (~ec2-user@ec2-3-144-179-53.us-east-2.compute.amazonaws.com)
[00:44:14] *** Joins: phy1729 (~phy1729@zsh/wizard/phy1729)
[00:44:14] *** Joins: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3)
[00:44:14] *** Joins: tonitch (~tonitch@user/tonitch)
[00:44:14] *** Joins: tharkun (tharkun@kvm6.telegraphics.com.au)
[00:44:14] *** Joins: harleypig (thelounge@harleypig.com)
[00:44:14] *** Joins: zerosum (~zerosum@user/zerosum)
[00:44:14] *** Joins: dzz007 (~dzz007@user/dzz007)
[00:44:14] *** Joins: erica (~erica@user/erica)
[00:44:14] *** Joins: hsv (~unknown@user/hsv)
[00:44:14] *** Joins: ferros (~ferros@vps-eacaba1b.vps.ovh.net)
[00:44:14] *** Joins: llua (~llua@zsh/developer/llua)
[00:44:14] *** Joins: mpmc (~mpmc@user/mpmc)
[00:44:14] *** Joins: gcbirzan (~gcbirzan@user/gcbirzan)
[00:44:14] *** Joins: Luke (~ldm@hacksoc/member)
[00:44:14] *** Joins: sveinse (~sveinse@2a01:799:55e:1000:c23f:d5ff:fe69:c6fb)
[00:44:14] *** Joins: l4yer (~l4yer@2001:ac8:31:8900:1012:29b6:fb45:418b)
[00:44:14] *** Joins: urb4nm (~urb4nm@165.227.158.65)
[00:44:14] *** Joins: mjsir911 (~bnc@user/mjsir911)
[00:44:14] *** Joins: PacKetIV (PacKetIV@user/packetiv)
[00:44:14] *** Joins: vodkra (~vodkra@user/vodkra)
[00:44:14] *** Joins: mmercer (daemoen@2605:d100:0:2d:5054:ff:fef0:3953)
[00:44:14] *** Joins: Alcibiades[m] (~dukehorac@2001:470:69fc:105::1:6b8c)
[00:44:14] *** Joins: pedregalux[m] (~pedregalu@2001:470:69fc:105::92cb)
[00:44:14] *** Joins: whiterabbit[m] (~whiterabb@2001:470:69fc:105::1:61cb)
[00:44:14] *** Joins: lola (~irelativi@2001:470:69fc:105::f015)
[00:44:14] *** Joins: acm1ptacm2pts[m] (~acm1ptacm@2001:470:69fc:105::1:83ac)
[00:44:14] *** Joins: catern (~sbaugh@2604:2000:8fc0:b:a9c7:866a:bf36:3407)
[00:44:14] *** Joins: holgersson (~quassel@user/holgersson)
[00:44:14] *** Joins: graingert[m] (~graingert@2001:470:69fc:105::653)
[00:44:14] *** Joins: JayDoubleu (~jdoubmatr@2001:470:69fc:105::1:3831)
[00:44:14] *** Joins: nazarewk[m] (~nazarewk@2001:470:69fc:105::1:2c8d)
[00:44:14] *** Joins: benbois[m] (~benboisma@2001:470:69fc:105::1:66ab)
[00:44:14] *** Joins: anomalous_creato (~anomalous@2001:470:69fc:105::6ed1)
[00:44:14] *** Joins: et (~et@user/et)
[00:44:14] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[00:44:14] *** Joins: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053)
[00:44:14] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[00:44:14] *** Joins: dld (~davidlowr@2601:197:600:1210:942a:4683:ce04:8328)
[00:44:14] *** Joins: BrenBarn (~brenbarn@2001:470:69fc:105::2da2)
[00:44:14] *** Joins: demsh (dkkdg9hwnm@hermod.demsh.org)
[00:44:14] *** Joins: ubert (~Thunderbi@p200300ecdf0994537358816310c1cf27.dip0.t-ipconnect.de)
[00:44:14] *** Joins: slowtyper (~slowtyper@user/slowtyper)
[00:44:14] *** Joins: ba (~ba@cpc1-hari17-2-0-cust27.20-2.cable.virginm.net)
[00:44:14] *** Joins: sharksauce (sharksauce@user/sharksauce)
[00:44:14] *** Joins: eldritch_ (~eldritch@user/eldritch/x-9272577)
[00:44:14] *** Joins: gambl0re (~gambl0re@cpe688f2e1852a3-cm688f2e1852a0.cpe.net.cable.rogers.com)
[00:44:14] *** Joins: XV8 (~XV8@2601:5cb:c001:50:b02a:1289:ddb1:fbc8)
[00:44:14] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[00:44:14] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[00:44:14] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:40cb:ed11:5496:f541)
[00:44:14] *** Joins: k0fein (~esmeralda@user/k0fein)
[00:44:14] *** Joins: Algernon69 (~Algernon6@2a04:cec0:10f5:7936:a1de:2e7b:487:f6fb)
[00:44:14] *** Joins: off^ (~off@128-092-174-141.biz.spectrum.com)
[00:44:14] *** Joins: mingdao (~mingdao@wireguard/tunneler/mingdao)
[00:44:14] *** Joins: BUSY (~BUSY@user/busy)
[00:44:14] *** Joins: phylaz (~phylaz@82.51-174-55.customer.lyse.net)
[00:44:14] *** Joins: MightyMu (~MightyMu@104.131.138.31)
[00:44:14] *** Joins: phantomcircuit (~phantomci@192.241.205.97)
[00:44:14] *** Joins: Scarecr0w (scarecr0w@user/scarecr0w)
[00:44:14] *** Joins: synbiose (~synbiose@user/synbiose)
[00:44:14] *** Joins: minto (~mintograd@47.201.5.61)
[00:44:14] *** Joins: sherlock_95 (~sherlock_@static.131.42.161.5.clients.your-server.de)
[00:44:14] *** Joins: lyr (~lyr@user/lyr)
[00:44:14] *** Joins: steam (~steam@user/steam)
[00:44:14] *** Joins: lyodaom (~user@host86-147-112-224.range86-147.btcentralplus.com)
[00:44:14] *** Joins: chemsmith (~chemsmith@user/chemsmith)
[00:44:14] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[00:44:14] *** Joins: bim9262 (~bim9262@user/bim9262)
[00:44:14] *** Joins: fuz (~fuz@user/fuz)
[00:44:14] *** Joins: yemel (~yemel@user/yemel)
[00:44:14] *** Joins: srji (~srji@static.43.141.203.116.clients.your-server.de)
[00:44:14] *** Joins: ChkDigit (~u388mw@207-195-34-73.prna.static.sasknet.sk.ca)
[00:44:14] *** Joins: Cyp (~cyp@213.237.88.120)
[00:44:14] *** Joins: monchi (~joints@143.198.92.132)
[00:44:14] *** Joins: NoImNotNineVolt (~fdsa@c-73-248-207-98.hsd1.nj.comcast.net)
[00:44:14] *** Joins: Ranhir (~Ranhir@157.97.53.139)
[00:44:14] *** Joins: d3x (michal@bielaw.ski)
[00:44:14] *** Joins: bkhl (~bkhl@user/bkhl)
[00:44:14] *** Joins: \\ (~\0x5c@miaow/nonantedeux)
[00:44:14] *** Joins: kofuyu (~kofuyu@user/kofuyu)
[00:44:14] *** Joins: dalan6 (~dalan@59-102-63-107.tpgi.com.au)
[00:44:14] *** Joins: ecdhe (~ecdhe@user/ecdhe)
[00:44:14] *** Joins: Mathisen (mathisen@about/windows/staff/mathisen)
[00:44:14] *** Joins: deepy (deepy@user/deepy)
[00:44:14] *** Joins: easter_egg (~jeffry@85.17.16.26)
[00:44:14] *** Joins: DarkTrick (~DarkTrick@pl-749-047.bunbun.ne.jp)
[00:44:14] *** Joins: syrius (syrius@titan.stormtek.net)
[00:44:14] *** Joins: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net)
[00:44:14] *** Joins: Bluefoxicy (~Bluefoxic@c-73-132-244-30.hsd1.md.comcast.net)
[00:44:14] *** Joins: timmot (~timmot@207.148.85.201)
[00:44:14] *** Joins: {4144} (~{4144}@46.56.68.191)
[00:44:14] *** Joins: novns (~novns@user/novns)
[00:44:14] *** Joins: simon816 (~simon816@ec2-35-178-246-72.eu-west-2.compute.amazonaws.com)
[00:44:14] *** Joins: notepad7 (~notepad@129.159.46.243)
[00:44:14] *** Joins: kiran (~kiranostr@78.40.148.178)
[00:44:14] *** Joins: niko (~niko@libera/staff/niko)
[00:44:14] *** Joins: macrobat (~beep@h-155-4-116-88.A785.priv.bahnhof.se)
[00:44:14] *** Joins: driib2 (~driib@185.65.135.238)
[00:44:14] *** Joins: elink (~elink@user/elink)
[00:44:14] *** Joins: kr0nk (~kr0nk@user/kr0nk)
[00:44:14] *** Joins: jladd (~jladd@c-71-63-157-185.hsd1.or.comcast.net)
[00:44:14] *** Joins: Axy (~Axy@user/axy)
[00:44:14] *** Joins: Forty-Bot (~kvirc@pool-108-18-137-133.washdc.fios.verizon.net)
[00:44:14] *** Joins: tdsmith (~tdsmith@kvm.kumokasumi.org)
[00:44:14] *** Joins: nbin_ (~nbin@user/nbin)
[00:44:14] *** Joins: abc_- (~abc@user/abc)
[00:44:14] *** Joins: trashbird (~trashbird@user/trashbird)
[00:44:14] *** Joins: alexyov (~alexyov@79.124.0.2)
[00:44:14] *** Joins: Cienisty (Cienisty@user/cienisty)
[00:44:14] *** Joins: euidzero_ (~euidzero@158.101.10.150)
[00:44:14] *** Joins: grnman_ (~grnman@159.89.27.73)
[00:44:14] *** Joins: bdiddy_ (~bdiddy@li654-123.members.linode.com)
[00:44:14] *** Joins: Phlyniii (~alex@84-115-52-62.cable.dynamic.surfer.at)
[00:44:14] *** Joins: dav1d (~dav1d@user/dav1d)
[00:44:14] *** Joins: pmcnabb (~pmcnabb@user/pmcnabb)
[00:44:14] *** Joins: bmr (~bmr@user/bmr)
[00:44:14] *** Joins: pacbard (~pacbard@user/pacbard)
[00:44:14] *** Joins: eN_Joy (~eN_Joy@wsip-72-213-93-155.ok.ok.cox.net)
[00:44:14] *** Joins: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net)
[00:44:14] *** Joins: deltab (~deltab@user/deltab)
[00:44:14] *** Joins: Kanjizai (~kanjizai@cpe-107-185-193-171.socal.res.rr.com)
[00:44:14] *** Joins: cyphase (~cyphase@user/cyphase)
[00:44:14] *** Joins: Arw| (~Arwalk@lfbn-dij-1-961-160.w90-125.abo.wanadoo.fr)
[00:44:14] *** Joins: koo5_ (~quassel@51.140.155.227)
[00:44:14] *** Joins: jug (~jug@user/jug)
[00:44:14] *** Joins: slackcals (~slackcals@user/slackcals)
[00:44:14] *** Joins: trashcatt (~trashcatt@znc.trashcat.xyz)
[00:44:14] *** Joins: runelind (~runelind@user/runelind)
[00:44:14] *** Joins: n0cturna1 (~n0cturna1@h155173.upc-h.chello.nl)
[00:44:14] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[00:44:14] *** Joins: dv^_^ (~dv@eclipse.oxfordfun.com)
[00:44:14] *** Joins: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net)
[00:44:14] *** Joins: dstein64 (~dstein64@dannyadam.com)
[00:44:14] *** Joins: Saxtheowl (~roro@78.192.226.182)
[00:44:14] *** Joins: az (az@user/azz)
[00:44:14] *** Joins: Mechanismus (~LabMonkey@206.255.106.67)
[00:44:14] *** Joins: Oddity (~Oddity@user/oddity)
[00:44:14] *** Joins: sangy (~sangy@archlinux/trusteduser/sangy)
[00:44:14] *** Joins: themill_ (~stuart@debian/stuart)
[00:44:14] *** Joins: m42e (~m42e@pb42.de)
[00:44:14] *** Joins: klotzhauer (~klotzhaue@gibtesnochklopapier.de)
[00:44:14] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[00:44:14] *** Joins: mekhami (~mekhami@2603-8080-1201-1400-581f-0234-dfa5-dae2.res6.spectrum.com)
[00:44:14] *** Joins: ssiyad (~ssiyad@user/ssiyad)
[00:44:14] *** Joins: audiobirb (~audio@user/audio)
[00:44:14] *** Joins: Pickchea (~private@user/pickchea)
[00:44:14] *** Joins: CodeMouse92 (~CodeMouse@2600:6c46:6000:97b:70c6:453d:f96c:d693)
[00:44:14] *** Joins: Cybergeek (~Cybergeek@2a03:b0c0:3:e0::1ab:5001)
[00:44:14] *** Joins: bertiger (~bertiger@user/bertiger)
[00:44:14] *** Joins: Stx (stx@libera/staff/stx)
[00:44:14] *** Joins: jfb4 (~jfb4@178.62.2.68)
[00:44:14] *** Joins: tudor_ (~tudor@tomka.hu)
[00:44:14] *** Joins: reda_ (~reda@user/reda)
[00:44:14] *** Joins: con3 (~con3@143.198.53.32)
[00:44:14] *** Joins: Yorick- (znc@vps.freegamehosting.eu)
[00:44:14] *** Joins: mokytis__ (~root@user/mokytis/x-7723836)
[00:44:14] *** Joins: MikachuPi (~Mikachu@2001:bc8:47a8:559::1)
[00:44:14] *** Joins: strudl (~strudl@user/strudl)
[00:44:14] *** Joins: rye (~rye@magpie.trojka.no)
[00:44:14] *** Joins: bdeferme (~bdeferme@i.ctrl86.com)
[00:44:14] *** Joins: gshumway (~gshumway@user/gshumway)
[00:44:14] *** Joins: gerard (~gerard@user/gerard)
[00:44:14] *** Joins: egism (egis@starlight.iextreme.org)
[00:44:14] *** Joins: mwilson (mwilson@2600:3c01::f03c:92ff:fe7f:1149)
[00:44:14] *** Joins: neoweb (sid343200@id-343200.lymington.irccloud.com)
[00:44:14] *** Joins: poxifide (deathspawn@user/poxifide)
[00:44:14] *** Joins: LDerJim (~jim@user/LDerJim)
[00:44:14] *** Joins: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net)
[00:44:14] *** Joins: pie_ (~pie_bnc@user/pie/x-2818909)
[00:44:14] *** Joins: seanicus (sean@triton.blinkenshell.org)
[00:44:14] *** Joins: dawg (dirtydawg@user/dawg)
[00:44:14] *** Joins: mort (~mort@188.166.114.29)
[00:44:14] *** Joins: ammar2 (admin@i.diddled.with.the.opers.so.they.klined.me)
[00:44:14] *** Joins: DocMors (~DocMors@web.crypticity.net)
[00:44:14] *** Joins: micah (~micah@debian/micah)
[00:44:14] *** Joins: {HD} (~{HD}@86.106.121.213)
[00:44:14] *** Joins: Wu (~wu@152.red-88-21-0.staticip.rima-tde.net)
[00:44:14] *** Joins: bfortified (~bfortifie@user/bfortified)
[00:44:14] *** Joins: knkay (~knkay@213.190.30.120)
[00:44:14] *** Joins: Bkid (~Bkid@user/bkid)
[00:44:14] *** Joins: _0ne (~one@user/0ne/x-2101768)
[00:44:14] *** Joins: birkoff (birkoff@user/birkoff)
[00:44:14] *** Joins: BlackBishop (dexter@user/blackbishop)
[00:44:14] *** Joins: yaraju (~yaraju@user/yaraju)
[00:44:14] *** Joins: habnabit_ (habnabit@python/site-packages/habnabit)
[00:44:14] *** Joins: madprops (hj8oijo@user/madprops)
[00:44:14] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[00:44:14] *** Joins: EGH (~EGH@185.25.195.104)
[00:44:14] *** Joins: Balzy (~Balzy@host-79-31-159-142.retail.telecomitalia.it)
[00:44:14] *** Joins: gluon (~gluon@2a01:4f8:c0c:e2da::1)
[00:44:14] *** Joins: xaltsc (~xaltsc@user/xaltsc)
[00:44:14] *** Joins: grawity (grawity@star.nullroute.lt)
[00:44:14] *** Joins: Riviera (Riviera@user/riviera)
[00:44:14] *** Joins: mumixam (~m@user/mumixam)
[00:44:14] *** Joins: parazyd (~parazyd@devuan/developer/parazyd)
[00:44:14] *** Joins: sn_fk_n (~snufkin@2.221.192.124)
[00:44:14] *** Joins: Syroth (~Syroth@pool-96-244-212-50.bltmmd.fios.verizon.net)
[00:44:14] *** Joins: ktosiek (~ktosiek@2001:470:69fc:105::87ab)
[00:44:14] *** Joins: MichaelLaRosa[m] (~michaelbi@2001:470:69fc:105::1:6ac9)
[00:44:14] *** Joins: berton[m] (~berton@2001:470:69fc:105::ce36)
[00:44:14] *** Joins: visicalc[m] (~visicalct@2001:470:69fc:105::1:6bba)
[00:44:14] *** Joins: capra[m] (~capramatr@2001:470:69fc:105::1:2280)
[00:44:14] *** Joins: spokojni[m] (~spokojnio@2001:470:69fc:105::1:3fb2)
[00:44:14] *** Joins: bitonic (~bitonic@2001:470:69fc:105::1812)
[00:44:14] *** Joins: mdk[m] (~mdk@python/psf/mdk)
[00:44:14] *** Joins: sus (zero@user/zeromomentum)
[00:44:14] *** Joins: msalvatore (~msalvator@c-174-60-145-36.hsd1.pa.comcast.net)
[00:44:14] *** Joins: xcombelle (~xavie@176-139-252-198.abo.bbox.fr)
[00:44:14] *** Joins: Telvana (~capo@user/telvana)
[00:44:14] *** Joins: grimvar (~grimvar@i5C75F7E6.versanet.de)
[00:44:14] *** Joins: jpaa (~jpaa@161.97.129.36)
[00:44:14] *** Joins: katrix (~m-ucfpsh@static.151.67.161.5.clients.your-server.de)
[00:44:14] *** Joins: chronon (~chronon@user/chronon)
[00:44:14] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:6013:7539:4fef:cd22)
[00:44:14] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[00:44:14] *** Joins: henbruas (~henbruas@ti0003a400-4203.bb.online.no)
[00:44:14] *** Joins: njt (~njt@zaph.org)
[00:44:14] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[00:44:14] *** Joins: nmat[m] (~nmatm]@2001:470:69fc:105::1:5553)
[00:44:14] *** Joins: LucaTM (~LucaTM@user/lucatm)
[00:44:14] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[00:44:14] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[00:44:14] *** Joins: flea (nosoul@gateway/vpn/protonvpn/nosoul)
[00:44:14] *** Joins: sagax (~sagax_nb@user/sagax)
[00:44:14] *** Joins: el_kevino (~mote@2604:a880:400:d1::901:5001)
[00:44:14] *** Joins: mxp (~mxp@185.16.205.131)
[00:44:14] *** Joins: dfrey (~dfrey@172.103.152.101)
[00:44:14] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[00:44:14] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[00:44:14] *** Joins: pax_os__ (uid535114@ilkley.irccloud.com)
[00:44:14] *** Joins: Sadale (~Sadale@user/sadale)
[00:44:14] *** Joins: Gurkenglas (~Gurkengla@dslb-090-186-104-244.090.186.pools.vodafone-ip.de)
[00:44:14] *** Joins: Z-cat (~Z-cat@user/z-cat)
[00:44:14] *** Joins: johnkeats7 (~johnkeats@2804:14c:32:a0cc:c1ad:5567:c947:cef7)
[00:44:14] *** Joins: hexa- (~hexa-@juno.lossy.network)
[00:44:14] *** Joins: maxzor (~maxzor@2a01cb04054faa005845757de706397d.ipv6.abo.wanadoo.fr)
[00:44:14] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[00:44:14] *** Joins: Lando-SpacePimp (~Lando-Spa@72.44.105.215)
[00:44:14] *** Joins: Dev0n (~Dev0n@user/dev0n)
[00:44:14] *** Joins: foxtrot (~foxtrot@user/foxtrot)
[00:44:14] *** Joins: vancz (~vancz@user/vancz)
[00:44:14] *** Joins: richrd (~wavi@thelounge/maintainer/wavi)
[00:44:14] *** Joins: A_Dragon (A_D@libera/staff/dragon)
[00:44:14] *** Joins: dynos01 (~dynos01@li820-149.members.linode.com)
[00:44:14] *** Joins: the_rat (~ratto@emily.sorcio.org)
[00:44:14] *** Joins: xavierdarkness (~xavierdar@user/xavierdarkness)
[00:44:14] *** Joins: aluria (~aluria@canonical/aluria)
[00:44:14] *** Joins: syllin (~syllin@user/syllin)
[00:44:14] *** Joins: vlt (~dm@157.230.21.14)
[00:44:14] *** Joins: joris2 (~joris@195.123.218.123)
[00:44:14] *** Joins: OliverUK (~opashley@70.138.105.34.bc.googleusercontent.com)
[00:44:14] *** Joins: sasha (~sasha@wikimedia/-sasha-)
[00:44:14] *** Joins: betterOn1 (~user@vmi489242.contaboserver.net)
[00:44:14] *** Joins: mgocobachi (~m@ancrae.com)
[00:44:14] *** Joins: petaflot (~root@lutolf.vserver.nimag.net)
[00:44:14] *** Joins: ttkap (~ttkap@user/ttkap)
[00:44:14] *** Joins: xMopx (~xMopx-lib@192.95.23.134)
[00:44:14] *** Joins: paperManu_ (~paperManu@138.197.128.151)
[00:44:14] *** Joins: Penagwin (~Penagwin@207.148.13.191)
[00:44:14] *** Joins: Henry151 (~bishop@user/henry151)
[00:44:14] *** Joins: timothy (~timothy@redhat/timothy)
[00:44:14] *** Joins: FunkyBob (~curtis@vhost3.tinbrain.net)
[00:44:14] *** Joins: rvgate (~rvgate@user/rvgate)
[00:44:14] *** Joins: LambdaComplex (~adam@wireguard/tunneler/lambdacomplex)
[00:44:14] *** Joins: nortoh (~nortoh@user/nortoh)
[00:44:14] *** Joins: kai (~kai@x50d24799.cust.hiper.dk)
[00:44:14] *** Joins: nurupo (~nurupo.ga@user/nurupo)
[00:44:14] *** Joins: papna (~mike@159.203.139.114)
[00:44:14] *** Joins: zigo_ (~quassel@shade.infomaniak.ch)
[00:44:14] *** Joins: Burrr (~Burrr@urmomma-fux0rs-with.burrr.nl)
[00:44:14] *** Joins: operational (~operation@imgonnaf.art)
[00:44:14] *** Joins: remolej (~kenoba@user/kenoba)
[00:44:14] *** Joins: alex11 (~alex11@user/alex11)
[00:44:14] *** Joins: Jenna16bit (~j16bit@c-73-228-39-16.hsd1.nm.comcast.net)
[00:44:14] *** Joins: Ennea (~Ennea@user/ennea)
[00:44:14] *** Joins: BSaboia (~bsaboia@95.179.154.99)
[00:44:14] *** Joins: lithammer (~lithammer@arch-vps.cloud.tilaa.com)
[00:44:14] *** Joins: baltazar (~baltazar@94-21-182-186.pool.digikabel.hu)
[00:44:14] *** Joins: Harlin (~DonQixote@75-163-148-159.clsp.qwest.net)
[00:44:14] *** Joins: rms2511 (~rrrrrrrrr@107-138-155-103.lightspeed.rlghnc.sbcglobal.net)
[00:44:14] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[00:44:14] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[00:44:14] *** Joins: zeudap (~zeudap@45.91.23.141)
[00:44:14] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[00:44:14] *** Joins: Hackerpcs (~user@user/hackerpcs)
[00:44:14] *** Joins: vladoski (~foo@93-36-219-239.ip62.fastwebnet.it)
[00:44:14] *** Joins: c4017w__ (~c4017@209.52.68.8)
[00:44:14] *** Joins: szkl (uid110435@uxbridge.irccloud.com)
[00:44:14] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[00:44:14] *** Joins: Teacup (~teacup@user/teacup)
[00:44:14] *** Joins: syntaxman (~wade@li227-215.members.linode.com)
[00:44:14] *** Joins: potatoe (~potatoe@1g.is)
[00:44:14] *** Joins: oelewapp1rke (~cde@ns509915.ip-198-245-49.net)
[00:44:14] *** Joins: argoneus (~argoneus@argoneus.com)
[00:44:14] *** Joins: Logi_ (~quassel@83.229.86.115)
[00:44:14] *** Joins: DaPinkOne (~Dap@user/dap)
[00:44:14] *** Joins: majors_ (~majors@user/majors)
[00:44:14] *** Joins: alchzh (alchzh@stable.bnc.by.bnc4you.xyz)
[00:44:14] *** Joins: beanzilla (~beanzilla@user/beanzilla)
[00:44:14] *** Joins: shantaram (shan@cyblog/maintainer/shan)
[00:44:14] *** Joins: deetwelve (~deetwelve@user/deetwelve)
[00:44:14] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[00:44:14] *** Joins: bboles (~bboles@64.94.212.195)
[00:44:14] *** Joins: Timrit (~scott@047-012-066-084.res.spectrum.com)
[00:44:14] *** Joins: bzl (~identme@bzl.si)
[00:44:14] *** Joins: yolo (~xxiao@li1120-73.members.linode.com)
[00:44:14] *** Joins: percY- (~percY@138.68.239.19)
[00:44:14] *** Joins: avalon (avalon@coredump.net)
[00:44:14] *** Joins: Repiphany (~Repiphany@user/repiphany)
[00:44:14] *** Joins: a1paca (~a1paca@user/a1paca)
[00:44:14] *** Joins: vinay (~Vinay@user/vinay-keshava)
[00:44:14] *** Joins: gurki (~gurki@user/gurki)
[00:44:14] *** Joins: akaWolf (~akaWolf@akawolf.org)
[00:44:14] *** Joins: zingos (~zingos@143.198.48.220)
[00:44:14] *** Joins: Astronaut_ (~astronaut@o-u-t-e-r.space)
[00:44:14] *** Joins: rodstewart1 (~dmartins@188.ip-149-56-97.net)
[00:44:14] *** Joins: ses1984_ (~stephanst@128.27.196.35.bc.googleusercontent.com)
[00:44:14] *** Joins: suffer (znc@mutant.penguin.fyi)
[00:44:14] *** Joins: JerryXia1 (~JerryXiao@user/jerryxiao)
[00:44:14] *** Joins: TDT (~TDT@20.118.225.139)
[00:44:14] *** Joins: ebb (ebb@user/ebb)
[00:44:14] *** Joins: lastmikoi (~lastmikoi@vm-01.lastmikoi.net)
[00:44:14] *** Joins: Peng (~mnordhoff@user/Peng)
[00:44:14] *** Joins: phillhoc1ing (~erasmus@ec2-54-191-78-90.us-west-2.compute.amazonaws.com)
[00:44:14] *** Joins: adamchai1z (~adamj@51.15.34.126)
[00:44:14] *** Joins: B33F_1338 (~b33f1337@host.b33f1337.com)
[00:44:14] *** Joins: The-Compiler (~compiler@the-compiler.org)
[00:44:14] *** Joins: leosilva (~leosilva@canonical/leosilva)
[00:44:14] *** Joins: _slate_ (~slate@159.69.26.92)
[00:44:14] *** Joins: hasu (~hasu@58x13x224x139.ap58.ftth.ucom.ne.jp)
[00:44:14] *** Joins: ghostbuster (~admin@user/ghostbuster)
[00:44:14] *** Joins: CrunchyChewie (~CrunchyCh@user/crunchychewie)
[00:44:14] *** Joins: comrumino (~comrumino@li87-103.members.linode.com)
[00:44:14] *** Joins: onu (~onufn@gibbs.uberspace.de)
[00:44:14] *** Joins: randall (~randall@user/randall)
[00:44:14] *** Joins: klys (~mdasoh@show.op8.us)
[00:44:14] *** Joins: blddk (~blddk@user/blddk)
[00:44:14] *** Joins: Bardon (~Bardon@user/Bardon)
[00:44:14] *** Joins: znf (ibm86@blender.linge-ma.ro)
[00:44:14] *** Joins: daddy (ryan@hashbang/bdfl)
[00:44:14] *** Joins: mags (~mags@097-091-082-103.res.spectrum.com)
[00:44:14] *** Joins: schumaml (~schumaml@dslb-188-104-168-024.188.104.pools.vodafone-ip.de)
[00:44:14] *** Joins: zamba (~marius@5.226.162.54)
[00:44:14] *** Joins: MercilessDeth (~brad@136.49.59.177)
[00:44:14] *** Joins: bryce (~bryce@ool-457dd6ac.dyn.optonline.net)
[00:44:14] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[00:44:14] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[00:44:14] *** Joins: jkl (~jkl@user/jkl)
[00:44:14] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[00:44:14] *** Joins: LiENUS (~quake@108-242-135-2.lightspeed.btrgla.sbcglobal.net)
[00:44:14] *** Joins: taeaad (~taeaad@user/taeaad)
[00:44:14] *** Joins: canton7 (~canton7@about/csharp/canton7)
[00:44:14] *** Joins: rjwiii (~mr-rich@072-187-031-098.res.spectrum.com)
[00:44:14] *** Joins: zware (~zach@python/psf/zware)
[00:44:14] *** Joins: cation (cation@user/cation)
[00:44:14] *** Joins: mwichmann (~mats@209-188-119-117.taosnet.com)
[00:44:14] *** Joins: pgib (~textual@173.38.117.89)
[00:44:14] *** Joins: Allegretto (~allegrett@178-164-171-16.pool.digikabel.hu)
[00:44:14] *** Joins: roguelazer (~jbrown@sietchtabr.roguelazer.net)
[00:44:14] *** Joins: CalimeroTeknik (~calimero@user/calimeroteknik)
[00:44:14] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[00:44:14] *** Joins: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net)
[00:44:14] *** Joins: SirScott (~SirScott@c-67-176-100-163.hsd1.co.comcast.net)
[00:44:14] *** Joins: Byteflux (~byte@byteflux.net)
[00:44:14] *** Joins: mncheckm (~mncheck@193.224.205.254)
[00:44:14] *** Joins: oz4ga (~tim@hator.sunsite.lv)
[00:44:14] *** Joins: fredrikhl (~fhl@myrsnipa.uio.no)
[00:44:14] *** Joins: cp--- (~cp-@b157153.ppp.asahi-net.or.jp)
[00:44:14] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[00:44:14] *** Joins: shokohsc (~shokohsc@lfbn-idf2-1-1472-129.w92-169.abo.wanadoo.fr)
[00:44:14] *** Joins: raym (~raym@user/raym)
[00:44:14] *** Joins: duds- (~duds-@user/duds)
[00:44:14] *** Joins: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it)
[00:44:14] *** Joins: jochum (~quassel@user/jochum)
[00:44:14] *** Joins: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net)
[00:44:14] *** Joins: Ekho (~Ekho@user/ekho)
[00:44:14] *** Joins: ksynwa (~ksynwa@5.45.111.57)
[00:44:14] *** Joins: Jong (~Jong@163.114.132.5)
[00:44:14] *** Joins: linuxdaemon (linuxdemon@bnc.linuxdemon.xyz)
[00:44:14] *** Joins: tomaw (tom@libera/staff/tomaw)
[00:44:14] *** Joins: user3456 (user3456@user/user3456)
[00:44:14] *** Joins: somlis (~somlis@user/somlis)
[00:44:14] *** Joins: davegarath (~davegarat@net-93-66-98-230.cust.vodafonedsl.it)
[00:44:14] *** Joins: Linux77 (~LinuMage@186.233.179.225)
[00:44:14] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[00:44:14] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[00:44:14] *** Joins: Deknos (~someone@user/menace)
[00:44:14] *** Joins: dbristow (~dbristow@user/dbristow)
[00:44:14] *** Joins: Deaygo (~Deaygo@let.deaygo.in)
[00:44:14] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[00:44:14] *** Joins: moose (~moose@user/moose)
[00:44:14] *** Joins: TFKyle (~kyle@64.201.205.70)
[00:44:14] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[00:44:14] *** Joins: nanonyme (nanonyme@kapsi.fi)
[00:44:14] *** Joins: tazle (tazle@kapsi.fi)
[00:44:14] *** Joins: five643333 (~five6@8.40.26.21)
[00:44:14] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[00:44:14] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[00:44:14] *** Joins: pankid (~quassel@pankid.club)
[00:44:14] *** Joins: Azem (~haise01@user/haise01)
[00:44:14] *** Joins: viaSanctus (~viaSanctu@user/viasanctus)
[00:44:14] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[00:44:14] *** Joins: slavfox (~slavfox@93.158.232.111)
[00:44:14] *** Joins: rowbots (~dirgeable@h64-17-89-214.arvdco.broadband.dynamic.tds.net)
[00:44:14] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[00:44:14] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[00:44:14] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[00:44:14] *** Joins: kujo (~kujo@188.166.12.52)
[00:44:14] *** Joins: Auron (Auron956@user/auron)
[00:44:14] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[00:44:14] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[00:44:14] *** Joins: LimeOn (~user@user/limeon)
[00:44:14] *** Joins: Unode (~Unode@194.94.44.220)
[00:44:14] *** Joins: palasso (~palasso@user/palasso)
[00:44:14] *** Joins: PJBoy (~PJBoy@user/pjboy)
[00:44:14] *** Joins: unixcorn_ (unixcorne@applejack.urlab.be)
[00:44:14] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[00:44:14] *** Joins: nepeat (~nepeat@79.110.170.60)
[00:44:14] *** Joins: m5zs7k (aquares@web10.mydevil.net)
[00:44:14] *** Joins: dTal (~quassel@dragonbox/wizzard/dtal)
[00:44:14] *** Joins: Alexer (~alexer@alexer.net)
[00:44:14] *** Joins: esv (~esv@74.124.178.154)
[00:44:14] *** Joins: Stas_ (~Stas@78.162.42.17)
[00:44:14] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[00:44:14] *** Joins: Gerula (~Gerula@user/gerula)
[00:44:14] *** Joins: noarb (~noarb@user/noarb)
[00:44:14] *** Joins: luva (~luva@37.120.197.52)
[00:44:14] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[00:44:14] *** Joins: moldorcoder7 (~moldorcod@188.95.55.24)
[00:44:14] *** Joins: foul_owl (~kerry@94.140.8.105)
[00:44:14] *** Joins: defn (~n0b0dy@user/defn)
[00:44:14] *** Joins: zeden (~zeden@user/zeden)
[00:44:14] *** Joins: Sargento (uid523534@wikipedia/Sargento-de-Hierro)
[00:44:14] *** Joins: zaquest (~notzaques@5.130.79.72)
[00:44:14] *** Joins: twofingersneat (~twofinger@174-080-036-228.res.spectrum.com)
[00:44:14] *** Joins: wovixo (~wovixo@128.104.205.49)
[00:44:14] *** Joins: glider (~glider@user/glider)
[00:44:14] *** Joins: qlixed (~qlixed@181.44.129.13)
[00:44:14] *** Joins: Narrat (~omnius@p2e51179b.dip0.t-ipconnect.de)
[00:44:14] *** Joins: Reign (~Username@ip98-161-226-10.ph.ph.cox.net)
[00:44:14] *** Joins: Wanderer (~wanderer@user/wanderer)
[00:44:14] *** Joins: psych3del1c (~psych3del@net031132118099.pskovline.ru)
[00:44:14] *** Joins: dreamon (~dreamon@pd9503995.dip0.t-ipconnect.de)
[00:44:14] *** Joins: thurs80601421053 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[00:44:14] *** Joins: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de)
[00:44:14] *** Joins: magla (~gelignite@55d436fa.access.ecotel.net)
[00:44:14] *** Joins: officerping (~officerpi@c-73-235-167-226.hsd1.ca.comcast.net)
[00:44:14] *** Joins: Guddu (~Guddu@59.88.88.82)
[00:44:14] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[00:44:14] *** Joins: masterkorp (~masterkor@user/masterkorp)
[00:44:14] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[00:44:14] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-224.dsl.bell.ca)
[00:44:14] *** Joins: gitesh (uid423739@ilkley.irccloud.com)
[00:44:14] *** Joins: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com)
[00:44:14] *** Joins: vicfred (~vicfred@user/vicfred)
[00:44:14] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[00:44:14] *** Joins: d3sync (~d3sync@62.1.158.240)
[00:44:14] *** Joins: funhouse (~funhouse@user/funhouse)
[00:44:14] *** Joins: smrtz (~smrtz@user/smrtz)
[00:44:14] *** Joins: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net)
[00:44:14] *** Joins: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net)
[00:44:14] *** Joins: wolfshappen (~waff@irc.furworks.de)
[00:44:14] *** Joins: elwoodpd (~elwoodpd@host-92-8-70-132.as13285.net)
[00:44:14] *** Joins: argument (~0ptions@90.249.16.86)
[00:44:14] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:44:14] *** Joins: HurricaneHarry (~quassel@84-85-122-182.fixed.kpn.net)
[00:44:14] *** Joins: nhartman (~SaltHillS@206.223.160.26)
[00:44:14] *** Joins: rigid- (~rigid@user/rigid)
[00:44:14] *** Joins: theo (~theo@user/theo)
[00:44:14] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[00:44:14] *** Joins: litharge (litharge@libera/bot/litharge)
[00:44:14] *** erbium.libera.chat sets mode: +o litharge
[00:44:14] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[00:44:14] <The-Compiler> elwoodpd: I'm curious, why digits, space, a and d?
[00:44:14] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Max SendQ exceeded)
[00:44:14] *** Quits: epony (epony@user/epony) (Max SendQ exceeded)
[00:44:22] <elwoodpd> crosswords
[00:44:24] *** ubert is now known as 076AAFRPQ
[00:44:27] *** Joins: Affliction (affliction@idlerpg/player/affliction)
[00:44:27] *** Joins: Spr0cket (sprocket@user/Spr0cket)
[00:44:29] *** Quits: jmcantrell (~jmcantrel@user/jmcantrell) (Max SendQ exceeded)
[00:44:29] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[00:44:29] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[00:44:29] *** Joins: HaMsTeRs (~Thunderbi@210.3.213.4)
[00:44:29] *** Joins: azidhaka (uid211322@user/azidhaka)
[00:44:29] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[00:44:29] *** Joins: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com)
[00:44:29] *** Joins: emf (~emf@2620:10d:c090:400::5:b0fe)
[00:44:29] *** Joins: finsternis (~X@23.226.237.192)
[00:44:29] *** Joins: MrFantastik (~f@2607:f598:bbda:270:af90:c2f0:20b5:e42e)
[00:44:29] *** Joins: lakrass (~lakrass@user/lakrass)
[00:44:29] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[00:44:29] *** Joins: sgen (~sgen@2607:fea8:7ce1:c8e0:f141:ba0b:da0:3c4d)
[00:44:29] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[00:44:29] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[00:44:29] *** Joins: yourfate (~yourfate@cabal.yourfate.org)
[00:44:29] *** Joins: stdout (~stdout@2605:ab80:b000:7202:3e12:af82:936c:2ff6)
[00:44:29] *** Joins: gusto (~Augustus@109.255.100.54)
[00:44:29] *** Joins: cdown (~cdown@163.114.131.1)
[00:44:29] *** Joins: slav0nic (slav0nic@python.su)
[00:44:29] *** Joins: bancroft (~bancroft@user/bancroft)
[00:44:29] *** Joins: daidoji (~daidoji@104-52-250-5.lightspeed.gnvlsc.sbcglobal.net)
[00:44:29] *** Joins: beco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73)
[00:44:29] *** Joins: JordiGH (~jordi@user/jordigh)
[00:44:29] *** Joins: Ringtailed-Fox (~BoingBoin@2001:1970:5d2a:c500:b1d7:e341:3a4a:bbf6)
[00:44:29] *** Joins: petemc (~pete@vps-80fad31a.vps.ovh.net)
[00:44:29] *** Joins: plastico (~plastico@neomutt/plastico)
[00:44:29] *** Joins: waveform (~quassel@waveform.plus.com)
[00:44:29] *** Joins: kosh (~kosh@user/kosh)
[00:44:29] *** Joins: dibas (~dibas@user/dibas)
[00:44:29] *** Joins: colo_work (~colo_work@046125249113.public.t-mobile.at)
[00:44:29] *** Joins: emerent (~quassel@p200300cd5704438cba27ebfffed28a59.dip0.t-ipconnect.de)
[00:44:29] *** Joins: CodeGeek (~codegeek@about/java/CodeGeek)
[00:44:29] *** Joins: adeliktas (~adeliktas@i59F5F5AE.versanet.de)
[00:44:29] *** Joins: jancoow (~jancoow@user/jancoow)
[00:44:29] *** Joins: brabrax (~brabrax@user/brabrax)
[00:44:29] *** Joins: HenryG (~quassel@2607:5300:201:3000::f63)
[00:44:29] *** Joins: vlm (~vlm@user/vlm)
[00:44:29] *** Joins: kmh_ (~kmh@94.31.106.215)
[00:44:29] *** Joins: Linkandzelda (~Linkandze@cloudirc.laz.li)
[00:44:29] *** Joins: aphysically (~aphysical@user/aphysically)
[00:44:29] *** Joins: mdemo (~mdemo@user/mdemo22)
[00:44:29] *** Joins: FunkyELF (~FunkyELF@76-217-82-15.lightspeed.chrlnc.sbcglobal.net)
[00:44:29] *** Joins: ubert (~Thunderbi@141.98.252.252)
[00:44:29] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[00:44:29] *** Joins: Peng_ (~mnordhoff@user/Peng)
[00:44:29] *** Joins: Fossil (~Fossil@2a03:b0c0:0:1010::398:b001)
[00:44:29] *** Joins: susam (~susam@user/susam)
[00:44:29] *** Joins: skipper (~whatsupbo@user/scobydoo)
[00:44:29] *** Joins: baakeydow (~baake@2001:41d0:203:b12c::)
[00:44:29] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:117c:703e:db5f:c029)
[00:44:29] *** Joins: alxndr (~alexander@ybti.net)
[00:44:29] *** Joins: kehn (quassel@2600:3c03::f03c:92ff:fe9a:ad08)
[00:44:29] *** Joins: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[00:44:29] *** Joins: GreaseMonkey (greaser@user/greasemonkey)
[00:44:29] *** Joins: jw_dungeon (~quassel@2601:44:4380:4a10:4587:3637:b23f:ed34)
[00:44:29] *** Joins: hays (rootvegeta@fsf/member/hays)
[00:44:29] *** Joins: uuair (~quassel@user/uuair)
[00:44:29] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::f824)
[00:44:29] *** Joins: vakera_pingveno_ (~dan@2600:1700:21f9:b150::40)
[00:44:29] *** Joins: truckasaurus (sid457088@id-457088.helmsley.irccloud.com)
[00:44:29] *** Joins: frodl (sid527064@user/frodl)
[00:44:29] *** Joins: Fingel (fingel@user/fingel)
[00:44:29] *** Joins: ravioli_ (sid83460@donger/pasta)
[00:44:29] *** Joins: bloodElk (~bloodElk@user/bloodelk)
[00:44:29] *** Joins: Pr0phet (sid505706@id-505706.hampstead.irccloud.com)
[00:44:29] *** Joins: josh_h (sid301834@id-301834.helmsley.irccloud.com)
[00:44:29] *** Joins: ztrawhcse (3d1f427b6a@archlinux/bugwrangler/eschwartz)
[00:44:29] *** Joins: nhanb_ (522d4a25ea@2604:bf00:561:2000::13b)
[00:44:29] *** Joins: gildarts (16abab341f@user/gildarts)
[00:44:29] *** Joins: saribro (~swinnenb@user/swinnenb)
[00:44:29] *** Joins: Fl1pFl0p (~FlipFlop@user/fl1pfl0p)
[00:44:29] *** Joins: Furai (~Furai@furai.pl)
[00:44:29] *** Joins: dre (~dre@2001:8003:c932:c301:77c0:cff4:f6dd:6abf)
[00:44:29] *** Joins: oprypin (~irc@pryp.in)
[00:44:29] *** Joins: gossie (~gossie@2001:1c02:11e:c700:4a28:456f:cfe0:5c8e)
[00:44:29] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[00:44:29] *** Joins: jtanner (sid194399@id-194399.helmsley.irccloud.com)
[00:44:29] *** Joins: sidmitra (sid17533@id-17533.tinside.irccloud.com)
[00:44:29] *** Joins: CrtxReavr (crtxreavr@shodan.trioptimum.com)
[00:44:29] *** Joins: greyblue9 (sid500829@id-500829.ilkley.irccloud.com)
[00:44:29] *** Joins: coldmountain (sid484352@id-484352.helmsley.irccloud.com)
[00:44:29] *** Joins: dunc (sid16@id-16.uxbridge.irccloud.com)
[00:44:29] *** Joins: Hobbyboy (Hobbyboy@hobbyboy.co.uk)
[00:44:29] *** Joins: BtbN (btbn@ffmpeg/developer/btbn)
[00:44:29] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[00:44:29] *** Joins: mbrndtgn (~mbrndtgn@undecidable.de)
[00:44:29] *** Joins: Warped (~Warped@user/warped)
[00:44:29] *** Joins: trainsley69_ (~trainsley@c188-148-14-166.bredband.tele2.se)
[00:44:29] *** Joins: chowmeined (~chowmeine@user/chowmeined)
[00:44:29] *** Joins: dsc_ (~dsc@70.68.10.185.ro.ovo.sc)
[00:44:29] *** Joins: FastJack (~fastjack@ip-078-094-022-014.um19.pools.vodafone-ip.de)
[00:44:29] *** Joins: waxfire6 (~waxfire@65.119.2.240)
[00:44:29] *** Joins: digilink (~digilink@user/digilink)
[00:44:29] *** Joins: xxyxx (~none@ip-037-024-160-145.um08.pools.vodafone-ip.de)
[00:44:29] *** Joins: SuperLag (~akulbe@user/superlag)
[00:44:29] *** Joins: adeliktas7 (~adeliktas@v15153.1blu.de)
[00:44:29] *** Joins: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca)
[00:44:29] *** Joins: sabet (~sabet@user/sabet)
[00:44:29] *** Joins: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net)
[00:44:29] *** Joins: Omega037 (~Omega037@047-233-057-109.res.spectrum.com)
[00:44:29] *** Joins: lawt (~lawt@2601:200:8101:f140:dea6:32ff:fea1:adf9)
[00:44:29] *** Joins: ndim (hun@moooo.n-dimensional.de)
[00:44:29] *** Joins: qwedfg_ (~qwedfg@user/qwedfg)
[00:44:29] *** Joins: gegensch1in (~james@ec2-54-210-169-253.compute-1.amazonaws.com)
[00:44:29] *** Joins: dupl0x (~duplox@137.220.127.235)
[00:44:29] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[00:44:29] *** Joins: jbeimler_ (~quassel@75.183.82.166)
[00:44:29] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[00:44:29] *** Joins: rovanion (~rovanion@h-46-59-13-236.A163.priv.bahnhof.se)
[00:44:29] *** Joins: visl (visl@user/visl)
[00:44:29] *** Joins: MrAureliusR (~MrAureliu@user/mraureliusr)
[00:44:29] *** Joins: zmotaj (~zmotaj@user/zmotaj)
[00:44:29] *** Joins: bidouille (~user_name@trois.potager.org)
[00:44:29] *** Joins: Throgkt (~Throgkt@user/throgkt)
[00:44:29] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[00:44:29] *** Joins: bambams (~bambams@user/bambams)
[00:44:29] *** Joins: edr (~edr@user/edr)
[00:44:29] *** Joins: grym (~grym@user/grym)
[00:44:29] *** Joins: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4)
[00:44:29] *** Joins: Alan (~alan@user/alan)
[00:44:29] *** Joins: ATAD (~ATAD@user/atad)
[00:44:29] *** Joins: NoxTurminal8 (~Noxturmin@user/noxturminal)
[00:44:29] *** Joins: davef (dave@user/davef)
[00:44:29] *** Joins: lambda (~weechat@cyka.blyat.vodka)
[00:44:29] *** Joins: fury (uid193779@id-193779.helmsley.irccloud.com)
[00:44:29] *** Joins: fluter (~fluter@user/fluter)
[00:44:29] *** Joins: Abrax (~Abrax@user/abrax)
[00:44:29] *** Joins: Ninja3047 (~Ninja3047@3047.ninja)
[00:44:29] *** Joins: Myst3 (~Myst@user/myst)
[00:44:29] *** Joins: jessicant (~jessica@static.172.234.251.148.clients.your-server.de)
[00:44:29] *** Joins: nochi (~nochi@2a01:4f8:10b:3074::4)
[00:44:29] *** Joins: EtherMan (~quassel@inception.debokred.se)
[00:44:29] *** Joins: Andrew (andrew@andrewyu.org)
[00:44:29] *** Joins: nicoz- (unixlab@ubuntu/member/nicoz)
[00:44:29] *** Joins: peterandre (peterandre@2605:6400:c847:1524::4251)
[00:44:29] *** Joins: graingert (sid128301@id-128301.tinside.irccloud.com)
[00:44:29] *** Joins: akimbo533 (~akimbo@customer-145-40-27-9.stosn.net)
[00:44:29] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[00:44:29] *** Joins: wereii (~wereii@37.205.14.89)
[00:44:29] *** Joins: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC)
[00:44:29] *** Joins: sjk (~sjk@user/sjk)
[00:44:29] *** Joins: ephemer0l (~ephemer0l@organizedmagnetism.com)
[00:44:29] *** Joins: DK3 (~DK3@user/DK3)
[00:44:29] *** Joins: tf (~tf@user/tf)
[00:44:29] *** Joins: giesen (~ggiesen@ego.giesen.me)
[00:44:29] *** Joins: Common (~Common@096-033-221-075.res.spectrum.com)
[00:44:29] *** Joins: mixfix41 (~homefame@user/mixfix41)
[00:44:29] *** Joins: niv (~niv@limbo.cypherpunks.io)
[00:44:29] *** Joins: cdleonard (~cdleonard@ec2-52-70-55-94.compute-1.amazonaws.com)
[00:44:29] *** Joins: vigumnov (~victori@cpe-76-89-139-69.socal.res.rr.com)
[00:44:29] *** Joins: seoul_man (~meh@user/seoul-man/x-5066766)
[00:44:29] *** Joins: introom (introom@2600:3c01::f03c:92ff:fea3:2cf)
[00:44:29] *** Joins: unyu (~pyon@user/pyon)
[00:44:29] *** Joins: nfc_ (nfc@tilde.institute)
[00:44:29] *** Joins: OverCoder (~OverCoder@user/overcoder)
[00:44:29] *** Joins: fruitypunk (~user@2a01:7c8:aaaa:12:5054:ff:fe69:1df9)
[00:44:29] *** Joins: cpach (sid296028@id-296028.helmsley.irccloud.com)
[00:44:29] *** Joins: earthbreaker (earthbreak@2600:3c03::f03c:91ff:fece:9070)
[00:44:29] *** Joins: haasn (~nand@haasn.dev)
[00:44:29] *** Joins: mgedmin (~mg@user/mgedmin)
[00:44:29] *** Joins: avu (~jan@user/avu)
[00:44:29] *** Joins: ST47 (~ST47@wikimedia/st47)
[00:44:29] *** Joins: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[00:44:29] *** Joins: k_sze (~k_sze@mail2.kalunite.net)
[00:44:29] *** Joins: Kebianizao (~Kebianiza@188.127.160.11)
[00:44:29] *** Joins: dharrigan (~dharrigan@user/dharrigan)
[00:44:29] *** Joins: Retr0id (~Retr0id@user/retr0id)
[00:44:29] *** Joins: luciusf1 (~luciusf@46.23.90.165)
[00:44:29] *** Joins: mrHedgehog0 (9658dbe103@2604:bf00:561:2000::a5)
[00:44:29] *** Joins: lew (c292bc13c9@2604:bf00:561:2000::27e)
[00:44:29] *** Joins: akspecs (00cc8321af@sourcehut/user/akspecs)
[00:44:29] *** Joins: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf)
[00:44:29] *** Joins: colbyhub (411e4f2740@2604:bf00:561:2000::2de)
[00:44:29] *** Joins: srstevenson (b46bf53c49@2604:bf00:561:2000::f3)
[00:44:29] *** Joins: fluffyballoon (45ce440a48@2604:bf00:561:2000::e2)
[00:44:29] *** Joins: srhm (dda3db84b5@user/srhm)
[00:44:29] *** Joins: akelly (24aca7a63b@2604:bf00:561:2000::152)
[00:44:29] *** Joins: andrea (3f138254b4@2604:bf00:561:2000::38)
[00:44:29] *** Joins: sliwkr (1aac56ad72@2604:bf00:561:2000::251)
[00:44:29] *** Joins: Hummer12007 (061e0434dc@2604:bf00:561:2000::16)
[00:44:29] *** Joins: sharktamer (9bafe1e1bb@2604:bf00:561:2000::17)
[00:44:29] *** Joins: spiderman (spiderman@spiderman.shelltalk.net)
[00:44:29] *** Joins: krjst (~krjst@2604:a880:800:c1::16b:8001)
[00:44:29] *** Joins: ormiret (sid314108@id-314108.lymington.irccloud.com)
[00:44:29] *** Joins: FLHerne (flh@flherne.uk)
[00:44:29] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[00:44:29] *** Joins: duoi (~duoi@user/duoi)
[00:44:29] *** Joins: lewisje (~lewisje@72.49.207.113)
[00:44:29] *** Joins: cyberjunkie (~cyberjunk@wireguard/tunneler/cyberjunkie)
[00:44:29] *** Joins: H4Z3 (~H4ZE@165.227.36.29)
[00:44:29] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[00:44:29] *** Joins: vishwin (~brioux@2001:470:1f07:302::1)
[00:44:29] *** Joins: Macuser (Macuser@here.for-the.chat)
[00:44:29] *** Joins: Phoebus (sid422845@id-422845.ilkley.irccloud.com)
[00:44:29] *** Joins: be3uykpy (~ubuntu@141.144.233.89)
[00:44:29] *** Joins: Chex (~Chex@user/chex)
[00:44:29] *** Joins: EyeOfJupiter (~EyeOfJ@user/eyeofjupiter)
[00:44:29] *** Joins: Ninpo (~Ninpo@user/ninpo)
[00:44:29] *** Joins: ixjlyons (kenny@2600:3c01::f03c:91ff:fe80:22c6)
[00:44:29] *** Joins: byzandula (~byzandula@beerbq.net)
[00:44:29] *** Joins: grandfso_ (~quassel@199.232.237.35.bc.googleusercontent.com)
[00:44:29] *** Joins: Henryx (~ebianchi@2a01:4f8:1c0c:76ad::1)
[00:44:29] *** Joins: vegii (~quassel@2001:470:1f18:3aa:30f::5439)
[00:44:29] *** Joins: arti (~arti@2001:bb8:4008:2020::f)
[00:44:29] *** Joins: or4n_ (~or4n@gerbera.qkka.org)
[00:44:29] *** Joins: catbeard (~noise@user/catbeard)
[00:44:29] *** Joins: cole (~cole@user/cole)
[00:44:29] *** Joins: decartes (sid240036@id-240036.helmsley.irccloud.com)
[00:44:29] *** Joins: altendky (sid135382@id-135382.hampstead.irccloud.com)
[00:44:29] *** Joins: mrproper (sid382572@id-382572.uxbridge.irccloud.com)
[00:44:29] *** Joins: jcass4 (~jcass4@066-188-202-056.res.spectrum.com)
[00:44:29] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[00:44:29] *** Joins: catdog (~quassel@2001:470:50f7:cdcd::cd1)
[00:44:29] *** Joins: overrider (~overrider@user/overrider)
[00:44:29] *** Joins: dwt__ (~dwt_@c-98-198-103-176.hsd1.tx.comcast.net)
[00:44:29] *** Joins: hifi (hifi@heisenbridge/hifi)
[00:44:29] *** Joins: dudebbn (~dudebbn@cpe-174-97-16-77.cinci.res.rr.com)
[00:44:29] *** Joins: ryan-c (ryan-c@znc.rya.nc)
[00:44:29] *** Joins: PanamaCity3003 (~PanamaCit@skylab/user/panamacity3003)
[00:44:29] *** Joins: ColdKeyboard (~ColdKeybo@user/coldkeyboard)
[00:44:29] *** Joins: N3X15 (~nexis@mail.nexisonline.net)
[00:44:29] *** Joins: e-snail (~pete@user/e-snail)
[00:44:29] *** Joins: Falcon| (andreas@user/falcon/x-0540249)
[00:44:29] *** Joins: cyberpear (uid364019@fedora/cyberpear)
[00:44:29] *** Joins: hexnewbie (~hexnewbie@user/hexnewbie)
[00:44:29] *** Joins: rb (~augh@theguntretort.com)
[00:44:29] *** Joins: t2mkn (~t2mkn@user/t2mkn)
[00:44:29] *** Joins: dxrt (~dxrt@user/dxrt)
[00:44:29] *** Joins: olspookishmagus (~pookie@snf-137798.vm.okeanos.grnet.gr)
[00:44:29] *** Quits: Hansuke[m] (~hansukema@2001:470:69fc:105::1:86bb) (Max SendQ exceeded)
[00:44:30] *** Quits: kuhilas (~kuhilas@2001:470:69fc:105::3040) (Max SendQ exceeded)
[00:44:37] *** Quits: k60 (~k60fmapme@2001:470:69fc:105::1:5597) (Ping timeout: 240 seconds)
[00:44:37] *** Quits: miique (~miiquemat@2001:470:69fc:105::1:6901) (Ping timeout: 240 seconds)
[00:44:38] *** Joins: dostoyevsky2 (~sck@static.251.39.47.78.clients.your-server.de)
[00:44:40] *** Quits: mixfix41 (~homefame@user/mixfix41) (Max SendQ exceeded)
[00:44:40] *** Quits: finsternis (~X@23.226.237.192) (Max SendQ exceeded)
[00:44:49] *** Joins: BillyZane2 (~BillyZane@185.202.221.34)
[00:44:49] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[00:44:49] *** Joins: dtux (~dtux@c-98-207-149-218.hsd1.ca.comcast.net)
[00:44:49] *** Joins: ivii (~ivan@user/ivii)
[00:44:49] *** Joins: bennydarshan (~darshan@2a0d:6fc2:4820:8f00:c1e7:bcbf:e0c1:df21)
[00:44:49] *** Joins: jpic (~jpic@82.142.23.238)
[00:44:49] *** Joins: zln (~zln@c80-217-230-193.bredband.tele2.se)
[00:44:49] *** Joins: rMdes (~rmdes@my.armada.digital)
[00:44:49] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[00:44:49] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[00:44:49] *** Joins: Elodin (~elodin@user/elodin)
[00:44:49] *** Joins: chymera (~chymera@ns1000526.ip-51-81-46.us)
[00:44:49] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[00:44:49] *** Joins: Batzy (~quassel@user/batzy)
[00:44:49] *** Joins: wac (~wac@user/wac)
[00:44:49] *** Joins: remedan (~remedan@octo.cafe)
[00:44:49] *** Joins: JanC (~janc@user/janc)
[00:44:49] *** Joins: kolmogorov[m] (~kolmogoro@2001:470:69fc:105::e03b)
[00:44:49] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[00:44:49] *** Joins: Alabama[m] (~ingfix-2m@wikipedia/-Alabama-)
[00:44:49] *** Joins: luc14n0[m] (~luc14n0ma@2001:470:69fc:105::1:304c)
[00:44:49] *** Joins: purplepinky[m] (~purplepin@2001:470:69fc:105::1:6535)
[00:44:49] *** Joins: mjr7[m] (~mjr7matri@2001:470:69fc:105::1:64e6)
[00:44:49] *** Joins: james[m]123 (~jamesjame@2001:470:69fc:105::1:5aa1)
[00:44:49] *** Joins: cecep[m] (~cecep@2001:470:69fc:105::3994)
[00:44:49] *** Joins: Forsaken87 (~quassel@2a02:908:1866:e360:b79:88e2:d2ce:2e71)
[00:44:49] *** Joins: zeus (~user@user/kamyl)
[00:44:49] *** Joins: dnns01_ (~quassel@2a02:c207:3003:651::1)
[00:44:49] *** Joins: arash- (arash@thinks.life.is-a.beauty)
[00:44:49] *** Joins: megaTherion (~therion@unix.io)
[00:44:49] *** Joins: kristjansson (sid126207@id-126207.tinside.irccloud.com)
[00:44:49] *** Joins: peac (sid344662@id-344662.hampstead.irccloud.com)
[00:44:49] *** Joins: roniez_ (~roniez@2a02:c206:2057:5765::1)
[00:44:49] *** Joins: kline (~freedom0@libera/staff/kline)
[00:44:49] *** Joins: olasd (~olasd@softwareheritage/olasd)
[00:44:49] *** Joins: flyback (~flyback@2601:540:8201:1e60::1b5d)
[00:44:49] *** Joins: SnoopJ (~snoopj@user/snoopj)
[00:44:49] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[00:44:49] *** Joins: ert (~ert@2001:4b99:1:1:216:3eff:fee5:446f)
[00:44:49] *** Joins: bionade24 (~bionade24@2a03:4000:33:45b::1)
[00:44:49] *** Joins: Echoz (~chris@user/echoz)
[00:44:49] *** Joins: s4msung (bZt8T9wHxn@user/s4msung)
[00:44:49] *** Joins: Jimmy2027 (~hendrik@2001:1620:2018:38:dde3:1b0f:dc57:eb0f)
[00:44:49] *** Joins: TortillaSandwich (~TortillaS@user/tortillasandwich)
[00:44:49] *** Joins: AsenMx (~asen@user/asenmx)
[00:44:49] *** Joins: enrh (~enrh@user/enrh)
[00:44:49] *** Joins: tvm (~tom@ip-89-103-96-164.net.upcbroadband.cz)
[00:44:49] *** Joins: regulate (~regulate@koduro.com)
[00:44:49] *** Joins: iflema (~ian@user/iflema)
[00:44:49] *** Joins: taru9 (~realTaru9@user/taru9)
[00:44:49] *** Joins: wyre (~wyre@user/wyre)
[00:44:49] *** Joins: jrabbit (~jack@user/jrabbit)
[00:44:49] *** Joins: KSaunderson (~user@142.93.152.208)
[00:44:49] *** Joins: iwkse (~iwkse@iurit.com)
[00:44:49] *** Joins: amosbird (~amosbird@13.75.119.182)
[00:44:49] *** Joins: duracrisis (~kkh@user/duracrisis)
[00:44:49] *** Joins: maxpowa (~maxpowa@brought.to.you.by.maxpowa.us)
[00:44:49] *** Joins: energizer (~energizer@user/energizer)
[00:44:49] *** Joins: icy (~icy@user/icy)
[00:44:49] *** Joins: sud (~sud@user/sud)
[00:44:49] *** Joins: foo (~foo@user/foo/x-8763512)
[00:44:49] *** Joins: Yamakaja (~yamakaja@user/yamakaja)
[00:44:49] *** Joins: mhmd (~mhmd@37.48.90.208)
[00:44:49] *** Joins: dba (uid533975@id-533975.hampstead.irccloud.com)
[00:44:49] *** Joins: klu (~klu@user/klu)
[00:44:49] *** Joins: skullY (zwhite@darkstar.frop.org)
[00:44:49] *** Joins: gaken (~gaken@user/galen)
[00:44:49] *** Joins: Artea (~Lufia@artea.com.pt)
[00:44:49] *** Joins: fleabag (~sirpengi@li587-65.members.linode.com)
[00:44:49] *** Joins: Mocramis (~mocramis@dalaran.sceen.net)
[00:44:49] *** Joins: dave2F (~dave@78-56-248-37.static.zebra.lt)
[00:44:49] *** Joins: graphitemaster (~graphitem@user/graphitemaster)
[00:44:49] *** Joins: mgubyt (u@mgub.yt)
[00:44:49] *** Joins: ballingt (sid190590@id-190590.helmsley.irccloud.com)
[00:44:49] *** Joins: bparker (~nobody@user/bparker)
[00:44:49] *** Joins: st3fan (sid43079@id-43079.lymington.irccloud.com)
[00:44:49] *** Joins: Ulti (~matt@ec2-35-178-236-167.eu-west-2.compute.amazonaws.com)
[00:44:49] *** Joins: Pilate (~pilate@pilate.io)
[00:44:49] *** Joins: mdk (~mdk@python/psf/mdk)
[00:44:49] *** Joins: Darkfoe (sid402081@id-402081.helmsley.irccloud.com)
[00:44:49] *** Joins: mastardet (~mastardet@user/mastardet)
[00:44:49] *** Joins: InPhase (~InPhase@openscad/inphase)
[00:44:49] *** Joins: Ara (~Ara@user/ara)
[00:44:49] *** Joins: Widdershins (widders@ps.mad.cash)
[00:44:49] *** Joins: TingPing (sid2800@id-2800.helmsley.irccloud.com)
[00:44:49] *** Joins: DCTWD (~dc@uz.utmappro.com)
[00:44:49] *** Joins: fakenullie (~nullie@london.nullie.name)
[00:44:49] *** Joins: awygle (~quassel@2604:a880:2:d0::5380:3001)
[00:44:50] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Max SendQ exceeded)
[00:44:50] <elwoodpd> a and d are across and down
[00:44:56] *** Quits: kolmogorov[m] (~kolmogoro@2001:470:69fc:105::e03b) (Ping timeout: 245 seconds)
[00:44:56] *** Quits: purplepinky[m] (~purplepin@2001:470:69fc:105::1:6535) (Ping timeout: 245 seconds)
[00:44:56] *** Quits: mjr7[m] (~mjr7matri@2001:470:69fc:105::1:64e6) (Ping timeout: 245 seconds)
[00:44:56] *** Quits: james[m]123 (~jamesjame@2001:470:69fc:105::1:5aa1) (Ping timeout: 245 seconds)
[00:44:56] *** Quits: cecep[m] (~cecep@2001:470:69fc:105::3994) (Ping timeout: 245 seconds)
[00:45:01] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[00:45:01] *** Joins: Bakunin (~maplefing@user/lindis)
[00:45:01] *** Joins: Atque (~Atque@user/atque)
[00:45:01] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[00:45:01] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[00:45:01] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[00:45:01] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[00:45:01] *** Joins: mickey8 (~user@user/mickey)
[00:45:01] *** Joins: mug3n (~mugen@gateway/tor-sasl/mugen)
[00:45:01] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[00:45:01] *** Joins: bitblit_ (~bitblit@gateway/tor-sasl/bitblit)
[00:45:01] *** Joins: CombatVet (~c4@user/combatvet)
[00:45:01] *** Joins: kevr (~kevr@user/kevr)
[00:45:01] *** Joins: domicron (~domicron@gateway/tor-sasl/domicron)
[00:45:01] *** Joins: nunggu (~q@user/nunggu)
[00:45:01] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[00:45:01] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[00:45:01] *** Joins: bindu (~bindu@user/bindu)
[00:45:01] *** Joins: de-facto (~de-facto@user/de-facto)
[00:45:01] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[00:45:01] *** Joins: fedenix__ (~fedenix@gateway/tor-sasl/fedenix)
[00:45:01] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[00:45:01] *** Joins: naranja (~orange@user/orangeboxcutter)
[00:45:01] *** Joins: vaio (~gary@user/ghost)
[00:45:01] *** Joins: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr)
[00:45:01] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[00:45:01] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[00:45:01] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[00:45:01] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[00:45:01] *** Joins: adanwan_ (~adanwan@gateway/tor-sasl/adanwan)
[00:45:01] *** Joins: spithash (~spithash@user/spithash)
[00:45:01] *** Quits: nmat[m] (~nmatm]@2001:470:69fc:105::1:5553) (Ping timeout: 250 seconds)
[00:45:01] *** Quits: bitonic (~bitonic@2001:470:69fc:105::1812) (Ping timeout: 250 seconds)
[00:45:01] *** Quits: capra[m] (~capramatr@2001:470:69fc:105::1:2280) (Ping timeout: 250 seconds)
[00:45:01] *** Quits: visicalc[m] (~visicalct@2001:470:69fc:105::1:6bba) (Ping timeout: 250 seconds)
[00:45:01] *** Quits: berton[m] (~berton@2001:470:69fc:105::ce36) (Ping timeout: 250 seconds)
[00:45:01] *** Quits: MichaelLaRosa[m] (~michaelbi@2001:470:69fc:105::1:6ac9) (Ping timeout: 250 seconds)
[00:45:01] *** Quits: ktosiek (~ktosiek@2001:470:69fc:105::87ab) (Ping timeout: 250 seconds)
[00:45:01] *** Joins: w1kl4s (~w1kl4s@user/w1kl4s)
[00:45:01] *** Joins: justaguy (~quassel@2a05:d014:742:eb00:7693:c44f:1fc3:29)
[00:45:01] *** Joins: mattmcc (~matt@li807-33.members.linode.com)
[00:45:01] *** Joins: voldial (~user@user/voldial)
[00:45:01] *** Joins: quesker (~idnet@mail.89vx.net)
[00:45:01] *** Joins: MrBurns (~japa@ec2-13-48-124-121.eu-north-1.compute.amazonaws.com)
[00:45:01] *** Joins: adium (adium@user/adium)
[00:45:01] *** Joins: manuels (~manuel@80.211.205.88)
[00:45:01] *** Joins: sunyibo (~dorsch@2a04:52c0:101:443::)
[00:45:01] *** Joins: kgz (~kragniz@nyaa.kragniz.eu)
[00:45:01] *** Joins: Wooble (~Wooble@user/Wooble)
[00:45:01] *** Joins: anorthall (~anorthall@user/anorthall)
[00:45:01] *** Joins: d1rewolf (sid312924@id-312924.helmsley.irccloud.com)
[00:45:01] *** Joins: Boarders_ (sid425905@id-425905.lymington.irccloud.com)
[00:45:01] *** Joins: kinabalu (~kinabalu@about/java/kinabalu)
[00:45:01] *** Joins: vince (~vince@75.127.14.76)
[00:45:01] *** Joins: ThothCastel (sid78195@id-78195.tinside.irccloud.com)
[00:45:01] *** Joins: lericson (~lericson@user/lericson)
[00:45:01] *** Joins: Evolver (sid32215@user/evolver)
[00:45:01] *** Joins: hogarius (hogarius@id-222644.uxbridge.irccloud.com)
[00:45:01] *** Joins: bjs (sid190364@user/bjs)
[00:45:01] *** Joins: eichin (sid27120@id-27120.tinside.irccloud.com)
[00:45:01] *** Joins: jessicara (~shirogits@user/jessicara)
[00:45:02] *** Quits: Avdol[m] (~M-avdol-m@2001:470:69fc:105::1:72be) (Ping timeout: 240 seconds)
[00:45:02] *** Quits: Rohit[m] (~rohitrohi@2001:470:69fc:105::1:5d55) (Ping timeout: 240 seconds)
[00:45:02] *** Quits: Hist (~histausse@2001:470:69fc:105::b91) (Ping timeout: 240 seconds)
[00:45:02] *** Quits: meain (~meain@2001:470:69fc:105::2db) (Ping timeout: 240 seconds)
[00:45:02] *** Quits: zardian[m] (~zardi@2001:470:69fc:105::1:4444) (Ping timeout: 240 seconds)
[00:45:02] *** Quits: Tardar (~tardar@2001:470:69fc:105::1:4b40) (Ping timeout: 240 seconds)
[00:45:02] *** Quits: one-star-chef (~one-star-@2001:470:69fc:105::165c) (Ping timeout: 240 seconds)
[00:45:02] *** Quits: allegary (~allegary@apache/committer/gjm) (Ping timeout: 240 seconds)
[00:45:02] *** Quits: smichel17[m] (~smichel17@2001:470:69fc:105::2d32) (Ping timeout: 240 seconds)
[00:45:02] *** Quits: cotsuka (~cotsuka@user/cotsuka) (Ping timeout: 240 seconds)
[00:45:02] *** Quits: diegov (~diegov@2001:470:69fc:105::103f) (Ping timeout: 240 seconds)
[00:45:02] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (Ping timeout: 240 seconds)
[00:45:02] *** Quits: morguldir (~morguldir@2001:470:69fc:105::21bd) (Ping timeout: 240 seconds)
[00:45:02] *** Quits: Vipulk (~vipulk@user/vipulk) (Ping timeout: 240 seconds)
[00:45:02] *** Quits: PantelicGR2 (~pantelicg@user/pantelicgr) (Ping timeout: 240 seconds)
[00:45:02] *** Quits: e_i00[m] (~ei00matri@2001:470:69fc:105::1:6bd9) (Ping timeout: 240 seconds)
[00:45:02] *** Quits: pikabell[m] (~pikabellm@2001:470:69fc:105::1:6125) (Ping timeout: 240 seconds)
[00:45:02] *** Quits: Simon[m]123 (~srwalker1@2001:470:69fc:105::1:64ea) (Ping timeout: 240 seconds)
[00:45:02] *** Quits: Dominik[m] (~ddunglmat@2001:470:69fc:105::1:7799) (Ping timeout: 240 seconds)
[00:45:02] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Ping timeout: 240 seconds)
[00:45:02] *** Quits: interestingname[ (~throwaway@2001:470:69fc:105::1:6560) (Ping timeout: 240 seconds)
[00:45:02] *** Quits: ckrmml[m] (~ckrmmlmat@2001:470:69fc:105::1:64f3) (Ping timeout: 240 seconds)
[00:45:02] *** Quits: vitali64[m] (~notrealvi@2001:470:69fc:105::c1bf) (Max SendQ exceeded)
[00:45:02] *** Quits: JayDoubleu (~jdoubmatr@2001:470:69fc:105::1:3831) (Max SendQ exceeded)
[00:45:02] *** Quits: jayray (~jayray@user/jayray) (Max SendQ exceeded)
[00:45:03] *** Quits: nazarewk[m] (~nazarewk@2001:470:69fc:105::1:2c8d) (Max SendQ exceeded)
[00:45:04] *** Joins: finsternis (~X@23.226.237.192)
[00:45:07] <The-Compiler> elwoodpd: I would probably do   if char in string.digits + " ad"
[00:45:08] *** Quits: benbois[m] (~benboisma@2001:470:69fc:105::1:66ab) (Ping timeout: 252 seconds)
[00:45:08] *** Quits: anomalous_creato (~anomalous@2001:470:69fc:105::6ed1) (Ping timeout: 252 seconds)
[00:45:08] *** Quits: whiterabbit[m] (~whiterabb@2001:470:69fc:105::1:61cb) (Ping timeout: 252 seconds)
[00:45:08] *** Quits: pedregalux[m] (~pedregalu@2001:470:69fc:105::92cb) (Ping timeout: 252 seconds)
[00:45:08] *** Quits: lola (~irelativi@2001:470:69fc:105::f015) (Ping timeout: 252 seconds)
[00:45:10] *** Quits: strider[m] (~gchamoulm@2001:470:69fc:105::1:26ee) (Ping timeout: 260 seconds)
[00:45:11] *** Quits: kevr (~kevr@user/kevr) (Max SendQ exceeded)
[00:45:11] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Max SendQ exceeded)
[00:45:11] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Max SendQ exceeded)
[00:45:13] *** Joins: epony (epony@lz2.eu)
[00:45:18] *** Joins: xheimlich (~xheimlich@179.218.1.150)
[00:45:18] *** Joins: bl4ackpajamas[m] (~bl4ackpaj@2001:470:69fc:105::1:73f4)
[00:45:18] *** Joins: Echo419[m] (~echo419sa@2001:470:69fc:105::ef65)
[00:45:18] *** Joins: saltrocklamp[m] (~hexology@user/hexology)
[00:45:18] *** Joins: schemanic[m] (~schemanic@2001:470:69fc:105::1:2450)
[00:45:18] *** Joins: ronny (~ronny@2001:470:69fc:105::b57)
[00:45:18] *** Joins: YakoYoku (~yakoyoku@2001:470:69fc:105::780)
[00:45:18] *** Joins: felixschloesser[ (~felixschl@2001:470:69fc:105::1:64ed)
[00:45:18] *** Joins: theChaparral[m] (~thechapar@2001:470:69fc:105::1:6496)
[00:45:18] *** Joins: tg (~tg@rockylinux/infra/tg)
[00:45:18] *** Joins: markwdev (~mark@71-135-3-182.lightspeed.rlghnc.sbcglobal.net)
[00:45:18] *** Joins: fury__ (~fury@znc.codexterous.com)
[00:45:18] *** Joins: marienz (~marienz@libera/staff/marienz)
[00:45:18] *** Joins: sean345 (~sean345@2601:281:8700:4b6f:b991:989f:6b07:27eb)
[00:45:18] *** Joins: beaky (~beaky@2a03:b0c0:0:1010::1e:a001)
[00:45:18] *** Joins: remexre (~remexre@user/remexre)
[00:45:18] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[00:45:18] *** Joins: hardwire (sid415742@id-415742.uxbridge.irccloud.com)
[00:45:18] *** Joins: Lightsword (~Lightswor@user/lightsword)
[00:45:18] *** Joins: dab21_ (~dab21@pistis.amyanddavid.net)
[00:45:18] *** Joins: dale (~dale@user/dale)
[00:45:18] *** Joins: cebor (~cebor@user/cebor)
[00:45:18] *** Joins: wowi4213 (~wowi42@185.42.117.170)
[00:45:18] *** Joins: ericlee_ (~ericlee@23-120-34-97.lightspeed.sntcca.sbcglobal.net)
[00:45:18] *** Joins: r3m (~launch@user/r3m)
[00:45:18] *** Joins: kadobanana (~mud@user/kadoban)
[00:45:18] *** Joins: Jigsy (~Jigsy@user/jigsy)
[00:45:18] *** Joins: redgloboli (~redglobol@user/redgloboli)
[00:45:18] *** Joins: DerpGusta (~quassel@user/derpgusta)
[00:45:18] *** Joins: dg_dg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222)
[00:45:18] *** Joins: MatthewG (~foo@user/foo/x-8763512)
[00:45:18] *** Joins: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net)
[00:45:18] *** Joins: Celelibi (celelibi@user/celelibi)
[00:45:18] *** Joins: nashimus (~nashimus@137.117.139.142)
[00:45:18] *** Joins: raukadah (~chandanku@51.159.58.174)
[00:45:18] *** Joins: jjhoo (~jahakala@user/jjhoo)
[00:45:18] *** Joins: blurry (xbaranov@lounge.fi.muni.cz)
[00:45:18] *** Joins: yitz (~yitz@exercism/yitz)
[00:45:18] *** Joins: nrg (~NRG@user/nrg)
[00:45:18] *** Joins: teroshan (~teroshan@static.28.181.130.94.clients.your-server.de)
[00:45:18] *** Joins: ska (~ska@user/ska)
[00:45:18] *** Joins: ominionx (~ominionx@172.58.136.5)
[00:45:18] *** Joins: tykling (~tykling@irc.tyknet.dk)
[00:45:18] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[00:45:18] *** Joins: jinsun__ (~quassel@user/jinsun)
[00:45:18] *** Joins: enkrypt (~enkrypt@user/enkrypt)
[00:45:18] *** Joins: doko (~doko@2a02:8106:1a:7600:8422:dca1:594e:8573)
[00:45:18] *** Joins: MrNaz (sid133418@id-133418.uxbridge.irccloud.com)
[00:45:18] *** Joins: kaibi_ (sid16580@id-16580.hampstead.irccloud.com)
[00:45:18] *** Joins: debnet (sid330295@python/afpy/debnet)
[00:45:18] *** Joins: joel135 (sid136450@id-136450.hampstead.irccloud.com)
[00:45:18] *** Joins: celphi (sid97751@user/celphi)
[00:45:18] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[00:45:18] *** Joins: jocke-l (jocke-l@a.x0.is)
[00:45:18] *** Joins: t4nk_freenode (~Go@user/t4nk)
[00:45:18] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[00:45:18] *** Joins: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi)
[00:45:18] *** Joins: BlessJah (~BlessJah@user/blessjah)
[00:45:18] *** Joins: fxhp (~fxhp@d-206-53-88-50.ct.cpe.atlanticbb.net)
[00:45:18] *** Joins: gdd (~gdd@129.199.146.230)
[00:45:18] *** Joins: janemba (~janemba@94.204.254.193)
[00:45:18] *** Joins: mjh4386_ (~mjh4386@165.22.53.231)
[00:45:18] *** Joins: effprime_ (~effprime@user/effprime)
[00:45:18] *** Joins: jrjsmrtn_ (~jrjsmrtn@ip-212-239-244-124.dsl.scarlet.be)
[00:45:18] *** Joins: fstd_ (~fstd@xdsl-89-1-56-234.nc.de)
[00:45:18] *** Joins: delarge (~chamigo@ctm.linuxers.cl)
[00:45:18] *** Joins: DarthGandalf (user@znc/developer/DarthGandalf)
[00:45:18] *** Joins: death916 (~death916@user/death916)
[00:45:18] *** Joins: Derailed (~tom@ec2-13-211-184-100.ap-southeast-2.compute.amazonaws.com)
[00:45:18] *** Joins: encukou (quassel@nat-pool-brq-t.redhat.com)
[00:45:18] *** Joins: rapha (~jrs@user/rapha)
[00:45:18] *** Joins: aivkiv (~aivkiv@server2.kivilius.com)
[00:45:18] *** Joins: WantToHelp (~WantToHel@user/wanttohelp)
[00:45:18] *** Joins: goatish (~geclark@19.60.188.35.bc.googleusercontent.com)
[00:45:18] *** Joins: thib (~thib@wikimedia/Thibaut120094)
[00:45:18] *** Joins: Gamah (~quassel@gamah.net)
[00:45:18] *** Joins: sirn (~sirn@user/sirn)
[00:45:18] *** Joins: totte (~totte@h-82-196-112-155.A166.priv.bahnhof.se)
[00:45:18] *** Joins: nisstyre (~wes@user/nisstyre)
[00:45:18] *** Joins: guardian (~guardian@planet-d.net)
[00:45:18] *** Joins: AM (~techman@82-203-166-145.bb.dnainternet.fi)
[00:45:18] *** Joins: odinsbane (~mbs@pat-pool-138.crick.ac.uk)
[00:45:18] *** Joins: morrigan (~m0rr1gan@user/m0rr1gan)
[00:45:18] *** Joins: Brocker (~NoBody@user/brocker)
[00:45:18] *** Joins: extor (~xtor@192.99.217.240)
[00:45:18] *** Joins: montpol (montpol@fine.mouses.xyz)
[00:45:18] *** Joins: hendry (~hendry@210.23.22.2)
[00:45:18] *** Joins: Buliarous (~gypsydang@46.232.210.139)
[00:45:18] *** Joins: deutor_ (~quassel@82.177.4.226)
[00:45:18] *** Joins: dfch (~dfch@user/dfch)
[00:45:18] *** Joins: draq (~draq@user/draq)
[00:45:18] *** Joins: ezakimak (~ezakimak@c-174-52-132-123.hsd1.ut.comcast.net)
[00:45:18] *** Joins: Mikro (leo@libera.ninja)
[00:45:18] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[00:45:18] *** Joins: CuriousErnestBro (~CuriousEr@user/curiousernestbro)
[00:45:18] *** Joins: SeeM (~SeeM@153.ip-54-38-53.eu)
[00:45:18] *** Joins: hodapp (~mawson@user/hodapp)
[00:45:18] *** Joins: vinnix (~vinnix@user/vinnix)
[00:45:18] *** Joins: rookie101 (~rookie@165.232.121.13)
[00:45:18] *** Joins: spudpnds (~spud@eidolon.muppetlabs.com)
[00:45:18] *** Joins: matrixise (~matrixise@python/psf/matrixise)
[00:45:18] *** Joins: mjacob (~mjacob@adrastea.uberspace.de)
[00:45:18] *** Joins: kushal (~hopless@dgplug/kushal)
[00:45:18] *** Joins: Raichvent (~Raichvent@193.123.33.210)
[00:45:18] *** Joins: auri (~quassel@fsf/member/auri)
[00:45:18] *** Joins: Moyst_ (~moyst@user/moyst)
[00:45:18] *** Joins: bsdbandit (~bwell@users.757.org)
[00:45:18] *** Joins: mcfrdy (~mcfrdy@user/mcfrdy)
[00:45:18] *** Joins: ringo__ (~ringo@157.230.117.128)
[00:45:18] *** Joins: Kim^J (~hagbard@ec2-13-51-167-164.eu-north-1.compute.amazonaws.com)
[00:45:18] *** Joins: acnebs- (~acnebs@198.199.68.107)
[00:45:18] *** Joins: abyss (~robbins@user/robbins)
[00:45:18] *** Joins: spaceone (~spaceone@wc1.wechall.net)
[00:45:18] *** Quits: gdd (~gdd@129.199.146.230) (Max SendQ exceeded)
[00:45:18] *** Quits: bl4ackpajamas[m] (~bl4ackpaj@2001:470:69fc:105::1:73f4) (Ping timeout: 245 seconds)
[00:45:18] *** Quits: Echo419[m] (~echo419sa@2001:470:69fc:105::ef65) (Ping timeout: 245 seconds)
[00:45:18] *** Quits: ronny (~ronny@2001:470:69fc:105::b57) (Ping timeout: 245 seconds)
[00:45:19] *** Quits: saltrocklamp[m] (~hexology@user/hexology) (Ping timeout: 245 seconds)
[00:45:19] *** Quits: schemanic[m] (~schemanic@2001:470:69fc:105::1:2450) (Ping timeout: 245 seconds)
[00:45:19] *** Quits: YakoYoku (~yakoyoku@2001:470:69fc:105::780) (Ping timeout: 245 seconds)
[00:45:19] *** Quits: felixschloesser[ (~felixschl@2001:470:69fc:105::1:64ed) (Ping timeout: 245 seconds)
[00:45:19] *** Quits: theChaparral[m] (~thechapar@2001:470:69fc:105::1:6496) (Ping timeout: 245 seconds)
[00:45:19] *** Quits: hendry (~hendry@210.23.22.2) (Max SendQ exceeded)
[00:45:19] *** Quits: boris[m]12 (~borisruna@2001:470:69fc:105::32f3) (Max SendQ exceeded)
[00:45:21] *** Quits: luc14n0[m] (~luc14n0ma@2001:470:69fc:105::1:304c) (Ping timeout: 245 seconds)
[00:45:25] *** Quits: mdk[m] (~mdk@python/psf/mdk) (Ping timeout: 250 seconds)
[00:45:25] *** Quits: spokojni[m] (~spokojnio@2001:470:69fc:105::1:3fb2) (Ping timeout: 250 seconds)
[00:45:28] <elwoodpd> The-Compiler, is that quicker?
[00:45:31] <elwoodpd> or just easier to read?
[00:45:32] *** Quits: willcl_ark (~willcl-ar@user/willcl-ark/x-8282106) (Ping timeout: 240 seconds)
[00:45:38] *** Quits: kyle[m] (~kylematri@2001:470:69fc:105::1:73e8) (Ping timeout: 260 seconds)
[00:45:38] *** Quits: worldofgeese (~worldofge@2001:470:69fc:105::1:3cd8) (Ping timeout: 260 seconds)
[00:45:38] *** Quits: aleko1[m] (~aleko1@2001:470:69fc:105::1:1016) (Ping timeout: 260 seconds)
[00:45:38] *** Quits: VictorKostyuk[m] (~thevicmat@2001:470:69fc:105::1:64e4) (Ping timeout: 260 seconds)
[00:45:40] *** Quits: vladoski (~foo@93-36-219-239.ip62.fastwebnet.it) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:45:41] *** Quits: BrenBarn (~brenbarn@2001:470:69fc:105::2da2) (Ping timeout: 252 seconds)
[00:45:41] *** Quits: graingert[m] (~graingert@2001:470:69fc:105::653) (Ping timeout: 252 seconds)
[00:45:46] *** Quits: Alabama[m] (~ingfix-2m@wikipedia/-Alabama-) (Ping timeout: 245 seconds)
[00:45:55] <The-Compiler> no idea about it being quicker, probably doesn't matter much (if it matters, profile first)
[00:46:00] *** Quits: CodeMouse92 (~CodeMouse@2600:6c46:6000:97b:70c6:453d:f96c:d693) (Client Quit)
[00:46:04] <SnoopJ> "profile it" +1
[00:46:06] *** Quits: d1rewolf_x (~d1rewolfm@2001:470:69fc:105::1:74f2) (Ping timeout: 260 seconds)
[00:46:06] *** Quits: mr-demo[m] (~mr-demoma@2001:470:69fc:105::1:74b1) (Ping timeout: 260 seconds)
[00:46:14] *** Joins: CodeMouse92 (~CodeMouse@2600:6c46:6000:97b:70c6:453d:f96c:d693)
[00:46:14] *** Quits: acm1ptacm2pts[m] (~acm1ptacm@2001:470:69fc:105::1:83ac) (Ping timeout: 252 seconds)
[00:46:14] *** Quits: Alcibiades[m] (~dukehorac@2001:470:69fc:105::1:6b8c) (Ping timeout: 252 seconds)
[00:46:14] *** Joins: vladoski (~foo@93-36-219-239.ip62.fastwebnet.it)
[00:46:15] *** Quits: szkl (uid110435@uxbridge.irccloud.com) (Client Quit)
[00:46:16] <The-Compiler> just for readability, though yours is fine too
[00:46:43] *** Quits: Bkid (~Bkid@user/bkid) (Ping timeout: 250 seconds)
[00:46:54] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[00:46:59] *** Quits: dsp00 (~dsp00@20.79.249.135) (Remote host closed the connection)
[00:47:09] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 250 seconds)
[00:47:11] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Read error: Connection reset by peer)
[00:47:13] *** Quits: dostoyevsky2 (~sck@static.251.39.47.78.clients.your-server.de) (Client Quit)
[00:47:26] *** Quits: kristjansson (sid126207@id-126207.tinside.irccloud.com) (Ping timeout: 245 seconds)
[00:47:26] *** Joins: dostoyevsky2 (~sck@static.251.39.47.78.clients.your-server.de)
[00:47:29] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Ping timeout: 254 seconds)
[00:47:29] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[00:47:31] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[00:47:36] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[00:47:38] *** Joins: hendry (~hendry@210.23.22.2)
[00:47:38] *** Joins: szkl (uid110435@uxbridge.irccloud.com)
[00:47:49] *** Quits: NiKaN (sid385034@id-385034.helmsley.irccloud.com) (Ping timeout: 240 seconds)
[00:47:58] *** Joins: mogad0n (~mogad0n@mph.monster)
[00:48:04] *** Quits: dostoyevsky2 (~sck@static.251.39.47.78.clients.your-server.de) (Client Quit)
[00:48:19] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[00:48:20] *** Joins: dostoyevsky2 (~sck@static.251.39.47.78.clients.your-server.de)
[00:48:38] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[00:48:49] *** Joins: funhouse (~funhouse@207.216.155.249)
[00:49:09] *** Quits: vladoski (~foo@93-36-219-239.ip62.fastwebnet.it) (Client Quit)
[00:49:21] *** Joins: dsp00 (~dsp00@20.79.249.135)
[00:49:28] *** Joins: kristjansson (sid126207@tinside.irccloud.com)
[00:49:51] *** Joins: NiKaN (sid385034@helmsley.irccloud.com)
[00:50:13] *** Joins: mon_aaraj (~MonAaraj@149.255.212.24)
[00:51:25] <bancroft> eh... why was I banned from python-offtopic?
[00:51:45] <waynew> banned or did the network stuff go bloop?
[00:51:53] <grym> libera lost services
[00:51:54] *** Quits: c4017w__ (~c4017@209.52.68.8) (Quit: Leaving)
[00:51:56] <grym> see wallops
[00:52:11] *** Quits: magla (~gelignite@55d436fa.access.ecotel.net) (Quit: Stay safe!)
[00:52:36] <bancroft> banned Cannot join channel (+b) - you are banned
[00:52:38] <jinsun__> everyone was banned from the single # channel
[00:52:41] *** Joins: c4017w (~c4017@209.52.68.8)
[00:52:55] <jinsun__> join the ## channel
[00:53:15] <foo> Is pydantic popular? Never heard of it, recently saw it added
[00:53:19] <bancroft> weird
[00:53:33] *** Quits: szkl (uid110435@uxbridge.irccloud.com) ()
[00:53:36] *** Quits: SuperLag (~akulbe@user/superlag) (Quit: leaving)
[00:53:39] *** Quits: smrtz (~smrtz@user/smrtz) (Ping timeout: 256 seconds)
[00:53:48] <grym> foo: pydantic is nice, few years old now
[00:54:03] <foo> grym: thanks, this seems pretty cool for more verbose errors if I'm following
[00:54:17] *** Quits: c4017w (~c4017@209.52.68.8) (Client Quit)
[00:54:24] <grym> foo: (this is wrong but informative) "like attrs but with more json interop and stranger validators"
[00:54:36] *** Joins: c4017w (~c4017@209.52.68.8)
[00:54:41] <jinsun__> popular enough to postpone a change in 3.10 (and possibly 3.11 too)
[00:54:48] <grym> and it sure makes fastAPI go great
[00:54:53] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c)
[00:54:57] <grym> versus, e.g., flask
[00:55:07] <SnoopJ> foo, it's pretty popular and with FastAPI it's really taken off
[00:56:35] *** Joins: fukuda (~fukuda@2804:431:c7f5:a3c3:9fdb:d7d3:c39f:3ce6)
[00:56:48] <c4017w> Is NickServ down on Libera or my client just acting up?
[00:56:54] <grym> c4017w: see wallops
[00:57:04] <grym> "-edk(edk@libera/staff/edk)-  [global notice] Hello. As you may have observed, due to unexpected networking fun at a hub provider, we are without services at the moment. Please hold on while we try to get them back and ask in #libera if you need channel ops urgently. (Yes, we have backups.)"
[00:57:18] *** Joins: librenaut (~librenaut@li1898-97.members.linode.com)
[00:57:20] <c4017w> ok, thanks
[00:58:02] <foo> SnoopJ: thanks
[00:58:13] *** Quits: fukuda (~fukuda@2804:431:c7f5:a3c3:9fdb:d7d3:c39f:3ce6) (Client Quit)
[00:58:37] *** Joins: dmvrtx (dmvrtx@2a01:7e01::f03c:92ff:fefd:6ed6)
[00:58:39] <foo> c4017w: huh, also noticing issues with Trello status right now. Sounds like something is going on
[00:58:46] *** Joins: vladoski (~foo@93-36-219-239.ip62.fastwebnet.it)
[00:58:48] *** Quits: gitesh (uid423739@ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:58:52] *** Joins: crabbedhaloablut (~crabbedha@185.5.167.86)
[00:59:10] *** Joins: fukuda (~fukuda@2804:431:c7f5:a3c3:9fdb:d7d3:c39f:3ce6)
[00:59:35] <c4017w> Trello's working for me
[00:59:45] <vladoski> what's the reason for using a namespace package
[00:59:48] *** Joins: Speed2u (Speed2u@bnc.speed2u.nu)
[01:00:02] <foo> c4017w: https://trello.status.atlassian.com
[01:00:08] <grym> linode DE is having itself An Eveninng
[01:00:16] <grym> i suspect libera's there
[01:00:48] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:01:00] <SnoopJ> vladoski, there's a good deal of rationale for it in the corresponding PEP: https://www.python.org/dev/peps/pep-0420/#rationale
[01:01:30] *** Quits: crabbedhaloablut (~crabbedha@185.5.167.86) (Changing host)
[01:01:30] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[01:01:49] *** epony is now known as Guest3959
[01:01:50] *** mogad0n is now known as Guest7176
[01:01:50] *** Joins: Masterphi (~Masterphi@user/masterphi)
[01:01:55] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[01:02:02] *** Joins: ice9 (~ice9@user/ice9)
[01:02:02] *** Joins: woky (~woky@li1651-31.members.linode.com)
[01:02:02] *** Joins: kevr (~kevr@user/kevr)
[01:02:04] *** argument is now known as Guest9712
[01:02:04] *** CodeMouse92 is now known as Guest1476
[01:02:04] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Client Quit)
[01:02:06] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:02:07] *** Joins: push-f (~martin@push-f.com)
[01:02:12] *** Joins: califax (~califax@user/califx)
[01:02:12] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[01:02:14] *** Joins: fling (~fling@user/fling)
[01:02:14] *** Joins: noord (~noord@user/noord)
[01:02:14] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[01:02:18] *** Joins: km (znc@user/km)
[01:02:22] *** Joins: rvalue (~rvalue@user/rvalue)
[01:02:23] *** Quits: Guest1476 (~CodeMouse@2600:6c46:6000:97b:70c6:453d:f96c:d693) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[01:02:29] *** Joins: joaofukuda (~joaofukuk@2804:431:c7f5:a3c3:9fdb:d7d3:c39f:3ce6)
[01:02:30] *** Quits: aslicedbanjo (~aslicedba@host86-160-16-70.range86-160.btcentralplus.com) (Quit: Leaving.)
[01:02:34] *** Quits: pepper (~pepper@105.233.42.153) (Quit: Leaving)
[01:02:39] *** Joins: Guest1476 (~CodeMouse@user/codemouse92)
[01:02:40] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[01:02:49] *** Joins: pepper (~pepper@user/pepper)
[01:02:49] *** Joins: ano (~ano@user/ano)
[01:03:15] *** Joins: Noisytoot (~noisytoot@sourcehut/user/noisytoot)
[01:03:21] *** Joins: deniska (~deniska@user/deniska)
[01:03:29] *** Quits: rvalue (~rvalue@user/rvalue) (Remote host closed the connection)
[01:03:29] *** Quits: dostoyevsky2 (~sck@static.251.39.47.78.clients.your-server.de) (Quit: leaving)
[01:03:37] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[01:03:40] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[01:03:41] *** Quits: pepper (~pepper@user/pepper) (Client Quit)
[01:03:41] *** Joins: rvalue (~rvalue@user/rvalue)
[01:03:53] *** Joins: SuperLag (~akulbe@user/superlag)
[01:04:31] *** Joins: pepper (~pepper@user/pepper)
[01:04:39] *** Guest1476 is now known as CodeMouse92
[01:04:59] *** Quits: Narrat (~omnius@p2e51179b.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[01:05:21] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[01:05:40] *** Joins: Bkid (~Bkid@user/bkid)
[01:05:43] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[01:06:02] <nedbat> why is an empty list 56 bytes? I only count 5 8-byte members: ref count, pointer to type, length of list, pointer to vector of references, length of vector.
[01:06:03] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[01:06:16] *** Joins: rvalue (~rvalue@user/rvalue)
[01:06:47] *** Joins: gdd (~gdd@129.199.146.230)
[01:06:48] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[01:06:51] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[01:07:03] *** Joins: rvalue (~rvalue@user/rvalue)
[01:07:07] <SnoopJ> nedbat, it doesn't seem like a coincidence that object() is 16 bytes but I don't recall what goes into this off the top of my head
[01:07:51] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[01:08:05] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[01:08:06] <nedbat> SnoopJ: object() only has the first two of those: ref count and pointer to type.
[01:08:08] *** Joins: Narrat (~omnius@p2e51179b.dip0.t-ipconnect.de)
[01:08:08] *** Joins: greasybyte (~greasybyt@pool-98-116-192-195.nycmny.fios.verizon.net)
[01:08:12] *** Quits: Guest7176 (~mogad0n@mph.monster) (Quit: Guest7176)
[01:08:17] *** Quits: mekhami (~mekhami@2603-8080-1201-1400-581f-0234-dfa5-dae2.res6.spectrum.com) (Ping timeout: 240 seconds)
[01:08:29] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[01:08:59] <SnoopJ> yea it seems like you've already enumerated the stuff in the normal object head
[01:09:34] <fikran> anyone recommend a package to create a svg (ideally) flowchart with arrows to the next box?
[01:10:15] *** Quits: fukuda (~fukuda@2804:431:c7f5:a3c3:9fdb:d7d3:c39f:3ce6) (Quit: WeeChat 3.4)
[01:10:16] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[01:10:28] *** Joins: maxzor_ (~maxzor@2a01cb04054faa00156a2badd8434128.ipv6.abo.wanadoo.fr)
[01:10:28] *** Joins: rvalue (~rvalue@user/rvalue)
[01:10:50] <jinsun__> length of list is 24? sys.getsizeof(0) says 24
[01:11:03] *** Joins: Archdave (~Archdave2@071-011-134-092.res.spectrum.com)
[01:11:13] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 250 seconds)
[01:11:57] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[01:12:05] *** Joins: imp (~imp@179-191-215-167.static.sumicity.net.br)
[01:12:11] *** Joins: ice9 (~ice9@user/ice9)
[01:12:57] *** Quits: Speed2u (Speed2u@bnc.speed2u.nu) (Ping timeout: 240 seconds)
[01:13:11] <jinsun__> ah no that would blow up other things too
[01:14:03] *** Quits: librenaut (~librenaut@li1898-97.members.linode.com) (Ping timeout: 256 seconds)
[01:14:15] *** Quits: push-f (~martin@push-f.com) (Ping timeout: 250 seconds)
[01:15:03] *** Joins: Speed2u (Speed2u@bnc.speed2u.nu)
[01:15:36] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[01:15:59] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[01:16:16] *** Quits: ice9 (~ice9@user/ice9) (Read error: Connection reset by peer)
[01:16:20] *** Joins: push-f (~martin@push-f.com)
[01:16:21] *** Joins: rvalue (~rvalue@user/rvalue)
[01:16:48] *** Quits: deniska (~deniska@user/deniska) (Remote host closed the connection)
[01:17:06] *** Quits: someuser (~user@197.54.43.98) (Ping timeout: 256 seconds)
[01:17:20] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[01:17:33] *** Joins: rvalue (~rvalue@user/rvalue)
[01:17:40] *** Quits: novapy (~chronos@12.71.10.20) (Ping timeout: 256 seconds)
[01:17:55] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 250 seconds)
[01:18:50] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[01:18:51] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[01:19:03] *** Joins: rvalue (~rvalue@user/rvalue)
[01:19:05] *** Joins: jdmark (~jdmark@user/jdmark)
[01:19:09] *** Joins: librenaut (~librenaut@li1898-97.members.linode.com)
[01:19:37] *** Joins: allegary (~allegary@apache/committer/gjm)
[01:19:37] *** Joins: one-star-chef (~one-star-@2001:470:69fc:105::165c)
[01:19:52] <SnoopJ> nedbat, [].__sizeof__() is 40, so I think whatever these 16 bytes are, it's not part of the type. GC head maybe?
[01:20:05] * SnoopJ has already forgotten how that works
[01:20:18] *** Joins: duuude (~user@user/duuude)
[01:21:09] *** Joins: Elodin (~elodin@user/elodin)
[01:21:19] *** Joins: ph88 (~ph88@2a02:8109:9e00:71d0:713a:ad1d:dd0:bdcc)
[01:21:51] *** Quits: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net) (Remote host closed the connection)
[01:22:05] *** Joins: novapy (~chronos@12.71.10.20)
[01:22:09] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[01:22:13] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[01:22:13] <SnoopJ> nedbat, yea, I think that's it, I stuck a printf() in _PySys_GetSizeOf() and `size` is 40, the pre-header size is 16 and I believe those are for the GC's use
[01:22:33] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[01:22:37] *** Quits: blddk (~blddk@user/blddk) (Quit: The Lounge - https://thelounge.chat)
[01:22:57] *** Joins: ivii (~ivan@user/ivii)
[01:24:42] <novapy> SnoopJ: I tried json.dump, but it appended rather than overwrite the file
[01:24:44] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Ping timeout: 252 seconds)
[01:24:44] <SnoopJ> ...hmm, but object().__sizeof__() is 16 too, not sure what's up with that. Maybe only collection types get that header?
[01:24:49] *** Joins: phantomcircuit_ (~phantomci@2604:a880:1:20::f2:c001)
[01:24:50] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:24:57] <SnoopJ> novapy, json.dump() will do whatever the file object is configured to do.
[01:25:02] *** Quits: Narrat (~omnius@p2e51179b.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[01:25:17] <novapy> SnoopJ: It;s r+
[01:25:50] *** Joins: Simon[m]123 (~srwalker1@2001:470:69fc:105::1:64ea)
[01:25:51] *** Joins: Dominik[m] (~ddunglmat@2001:470:69fc:105::1:7799)
[01:25:51] <SnoopJ> novapy, are you sure you didn't want mode 'w' ?
[01:26:19] <SnoopJ> this isn't related to the json library, if you want to use 'r+' and overwrite the file, the burden is on you to seek(0) first
[01:26:31] <SnoopJ> uh seek(0) and trunc() probably? I don't know, I never use r+
[01:26:34] *** Joins: blddk (~blddk@user/blddk)
[01:26:59] <SnoopJ> truncate() *
[01:27:17] *** Quits: phantomcircuit (~phantomci@192.241.205.97) (Ping timeout: 240 seconds)
[01:27:39] *** Quits: psych3del1c (~psych3del@net031132118099.pskovline.ru) (Ping timeout: 256 seconds)
[01:28:03] *** Joins: lola (~irelativi@2001:470:69fc:105::f015)
[01:28:29] *** Joins: miique (~miiquemat@2001:470:69fc:105::1:6901)
[01:28:45] *** Joins: k60 (~k60fmapme@2001:470:69fc:105::1:5597)
[01:28:46] *** Joins: d0ku (~d0ku@178.43.19.180.ipv4.supernova.orange.pl)
[01:28:57] <SnoopJ> yea, seek(0) and truncate(). It's usually less of a bother to just open the file for one or the other.
[01:29:06] *** Joins: Jan__ (~UserNick@ip2504e5fa.dynamic.kabel-deutschland.de)
[01:29:21] *** Joins: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net)
[01:29:25] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[01:29:31] *** Joins: berton[m] (~berton@2001:470:69fc:105::ce36)
[01:29:54] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[01:30:37] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Quit: Leaving)
[01:30:41] *** Joins: visicalc[m] (~visicalct@2001:470:69fc:105::1:6bba)
[01:31:02] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[01:31:04] *** Joins: ktosiek (~ktosiek@2001:470:69fc:105::87ab)
[01:31:08] *** Joins: MichaelLaRosa[m] (~michaelbi@2001:470:69fc:105::1:6ac9)
[01:31:11] *** Joins: bitonic (~bitonic@2001:470:69fc:105::1812)
[01:31:11] <SnoopJ> nedbat, the PyGC_Head is 2 pointers so I think that's what you're seeing. Hopefully someone a little more savvy on CPython trivia could confirm. https://devguide.python.org/garbage_collector/#memory-layout-and-object-structure
[01:31:12] *** Joins: james[m]123 (~jamesjame@2001:470:69fc:105::1:5aa1)
[01:31:17] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[01:31:17] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:31:17] *** Joins: nmat[m] (~nmatm]@2001:470:69fc:105::1:5553)
[01:31:18] *** Joins: benbois[m] (~benboisma@2001:470:69fc:105::1:66ab)
[01:32:13] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[01:32:19] *** Joins: pedregalux[m] (~pedregalu@2001:470:69fc:105::92cb)
[01:32:53] *** Joins: djhankb (~djhankb@208.113.164.68)
[01:32:55] *** Parts: Jan__ (~UserNick@ip2504e5fa.dynamic.kabel-deutschland.de) ()
[01:33:03] *** Joins: moldorcoder7_ (~moldorcod@37.120.143.29)
[01:33:05] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[01:33:19] *** Quits: moldorcoder7 (~moldorcod@188.95.55.24) (Ping timeout: 256 seconds)
[01:33:54] *** Joins: maxzor__ (~maxzor@2a01cb04054faa00156a2badd8434128.ipv6.abo.wanadoo.fr)
[01:33:57] *** Quits: maxzor_ (~maxzor@2a01cb04054faa00156a2badd8434128.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[01:34:21] *** Joins: kittonian (~kittonian@cpe-70-114-148-180.austin.res.rr.com)
[01:34:27] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 256 seconds)
[01:34:31] *** Joins: Rohit[m] (~rohitrohi@2001:470:69fc:105::1:5d55)
[01:34:49] *** Joins: kolmogorov[m] (~kolmogoro@2001:470:69fc:105::e03b)
[01:34:52] *** Joins: Avdol[m] (~M-avdol-m@2001:470:69fc:105::1:72be)
[01:34:54] *** Joins: strider[m] (~gchamoulm@2001:470:69fc:105::1:26ee)
[01:34:58] <AhmedAmerican> how to achieve the following https://bpa.st/4WYQ
[01:35:09] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[01:35:22] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[01:35:29] *** Joins: jayray (~jayray@user/jayray)
[01:35:39] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[01:35:48] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[01:35:49] <kittonian> hi all. instead of returning nothing because no data exists to return, I want to return an empty string. here's my function https://bpa.st/JT3Q
[01:36:09] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[01:36:11] <SnoopJ> nedbat, hmm, seems that the extra part of the size reported by sys can be PyGC_Head and/or 2 points for Py_TPFLAGS_MANAGED_DICT which I think applies mostly to mappings, but is unfamiliar to me.
[01:36:14] <kittonian> basically I want the u in value.append({"username": u}) to just be blank
[01:36:16] <SnoopJ> 2 pointers*
[01:36:18] *** Joins: adiKt (uid472628@tinside.irccloud.com)
[01:36:20] *** Quits: adiKt (uid472628@tinside.irccloud.com) (Client Quit)
[01:36:45] *** Joins: ice9 (~ice9@user/ice9)
[01:36:50] <kittonian> so it would look like this {"username": ""}
[01:37:00] *** Joins: anomalous_creato (~anomalous@2001:470:69fc:105::6ed1)
[01:37:21] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[01:37:33] <kittonian> i tried if len(blah) = 0 else whatever but that did not do anything
[01:37:41] *** Joins: Hist (~histausse@2001:470:69fc:105::b91)
[01:37:47] *** Quits: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net) (Remote host closed the connection)
[01:37:48] *** Joins: whiterabbit[m] (~whiterabb@2001:470:69fc:105::1:61cb)
[01:38:04] *** Joins: kyle[m] (~kylematri@2001:470:69fc:105::1:73e8)
[01:38:42] *** Joins: interestingname[ (~throwaway@2001:470:69fc:105::1:6560)
[01:38:43] *** Joins: aleko1[m] (~aleko1@2001:470:69fc:105::1:1016)
[01:38:47] *** Joins: VictorKostyuk[m] (~thevicmat@2001:470:69fc:105::1:64e4)
[01:38:47] *** Quits: Guddu (~Guddu@59.88.88.82) (Quit: Leaving)
[01:39:20] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[01:39:56] <SnoopJ> kittonian, the program you shared isn't valid syntax, are you sharing a reduced version of your actual program?
[01:40:18] <kittonian> it's reduced because this is zope. nothing i ever share here is "valid syntax"
[01:40:21] <SnoopJ> or hm, scratch that, it's valid syntax
[01:40:38] <SnoopJ> `for u, in blah` looks suspicious to me though
[01:40:38] <kittonian> it all works except for it not doing anything if there's no data that matches
[01:40:45] <kittonian> it's all good
[01:40:51] <SnoopJ> kittonian, why `for u, in blah` instead of `for u in blah` ?
[01:40:55] <kittonian> just want to figure out how to make it return something if nothing exists
[01:41:00] *** Joins: ckrmml[m] (~ckrmmlmat@2001:470:69fc:105::1:64f3)
[01:41:08] <kittonian> because it needed to be unwrapped
[01:41:14] <beanzilla> if not u:
[01:41:15] *** Quits: Lando-SpacePimp (~Lando-Spa@72.44.105.215) (Quit: They told me they fixed it. I trusted them to fix it. It's not my fault!)
[01:41:29] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[01:41:37] <SnoopJ> kittonian, well, the thing you tried should have worked. Perhaps you can share a complete program that reproduces the "did not do anything" behavior and we can figure out why
[01:41:45] *** Quits: HaMsTeRs (~Thunderbi@210.3.213.4) (Quit: HaMsTeRs)
[01:42:03] *** Joins: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net)
[01:42:07] *** Quits: Guest9712 (~0ptions@90.249.16.86) (Quit: WeeChat 1.9.1)
[01:42:11] *** Joins: spokojni[m] (~spokojnio@2001:470:69fc:105::1:3fb2)
[01:42:17] *** Quits: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) (Quit: Client closed)
[01:42:19] *** Joins: argument (~0ptions@90.249.16.86)
[01:42:19] *** Quits: argument (~0ptions@90.249.16.86) (Changing host)
[01:42:19] *** Joins: argument (~0ptions@user/argument)
[01:42:20] <kittonian> beanzilla, that doesn't work
[01:42:39] *** Joins: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net)
[01:42:45] *** Quits: funhouse (~funhouse@207.216.155.249) (Quit: Client closed)
[01:42:59] <nedbat> SnoopJ: i'm just looking at the listobject.h header.  I don't see where the other bytes are.
[01:43:01] <kittonian> SnoopJ, blah is a zsql method (i.e. a select on the db). otherwise, this is the complete code
[01:43:07] *** Joins: gl5485 (~gl5485@176-153-16-24.abo.bbox.fr)
[01:43:10] *** Quits: vladoski (~foo@93-36-219-239.ip62.fastwebnet.it) (Quit: Textual IRC Client: www.textualapp.com)
[01:43:32] *** Joins: vladoski (~foo@93-36-219-239.ip62.fastwebnet.it)
[01:43:59] <Yhg1s> nedbat: what are you looking for?
[01:44:09] *** Joins: mdk[m] (~mdk@python/psf/mdk)
[01:44:15] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[01:44:29] <nedbat> Yhg1s: we were looking at list size elsewhere, and I thought I could explain why an empty list was 56 bytes, but I can't.
[01:44:35] *** Joins: jinsun_ (~jinsun@user/jinsun)
[01:44:39] <SnoopJ> nedbat, if I'm right about this being PyGC_Head, they're added by the GC's allocation, and getsizeof() just knows how to report those bytes
[01:44:40] *** Joins: BrenBarn (~brenbarn@2001:470:69fc:105::2da2)
[01:44:49] *** Joins: willcl_ark (~willcl-ar@2001:470:69fc:105::1:620a)
[01:45:01] <nedbat> Yhg1s: it's just implementation-detail-trivia :)
[01:45:02] *** Joins: JayDoubleu (~jdoubmatr@2001:470:69fc:105::1:3831)
[01:45:03] *** Joins: kuhilas (~kuhilas@2001:470:69fc:105::3040)
[01:45:06] *** Joins: Hansuke[m] (~hansukema@2001:470:69fc:105::1:86bb)
[01:45:08] *** Joins: worldofgeese (~worldofge@2001:470:69fc:105::1:3cd8)
[01:45:14] *** Joins: vitali64[m] (~notrealvi@2001:470:69fc:105::c1bf)
[01:45:21] <SnoopJ> I only know about PyGC_Head because of Yhg1s, so it's timely that he's here to give a real answer to the question :)
[01:45:24] *** Joins: boris[m]12 (~borisruna@2001:470:69fc:105::32f3)
[01:45:28] <SnoopJ> (maybe)
[01:45:30] *** Joins: graingert[m] (~graingert@2001:470:69fc:105::653)
[01:45:43] *** Joins: euphrates[m] (~euphrates@2001:470:69fc:105::fbb5)
[01:45:44] *** Joins: d1rewolf_x (~d1rewolfm@2001:470:69fc:105::1:74f2)
[01:45:51] *** Joins: Alcibiades[m] (~dukehorac@2001:470:69fc:105::1:6b8c)
[01:45:51] *** Joins: acm1ptacm2pts[m] (~acm1ptacm@2001:470:69fc:105::1:83ac)
[01:45:53] *** Joins: mr-demo[m] (~mr-demoma@2001:470:69fc:105::1:74b1)
[01:46:45] *** Joins: Vipulk (~vipulk@user/vipulk)
[01:46:49] <AhmedAmerican> how to achieve the following https://bpa.st/4WYQ
[01:47:00] *** Joins: psydroid (~psydroid@user/psydroid)
[01:47:03] <Yhg1s> Yes, lists are GC objects (because you can have cycles that *only* involve lists, and very easily so), and that's allocated but not part of the PyObject struct. It's two pointers (in normal builds) added to the front of the object.
[01:47:11] *** Joins: pikabell[m] (~pikabellm@2001:470:69fc:105::1:6125)
[01:47:17] *** Joins: zardian[m] (~zardi@2001:470:69fc:105::1:4444)
[01:47:34] *** Joins: cecep[m] (~cecep@2001:470:69fc:105::3994)
[01:47:34] *** Joins: purplepinky[m] (~purplepin@2001:470:69fc:105::1:6535)
[01:47:51] <phy1729> AhmedAmerican: print('\n'.join(f'{k} : {v}' for k, v in x.items()))
[01:47:57] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 240 seconds)
[01:48:02] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:48:05] <SnoopJ> Yhg1s, what's the MANAGED_DICT stuff all about? Could the "preheader" potentially be 32 bytes, or are those two pointers doing the same work as PyGC_Head in a special way for those types?
[01:48:17] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[01:48:20] *** Joins: e_i00[m] (~ei00matri@2001:470:69fc:105::1:6bd9)
[01:48:33] <SnoopJ> Py_TPFLAGS_MANAGED_DICT to call the flag by its full name. Saw that when I went poking to confirm my suspicion
[01:48:33] *** Joins: capra[m] (~capramatr@2001:470:69fc:105::1:2280)
[01:49:10] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[01:49:11] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 256 seconds)
[01:49:13] *** Joins: smichel17[m] (~smichel17@2001:470:69fc:105::2d32)
[01:49:16] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:49:21] <SnoopJ> The comment in object.h left me a little confused 😅
[01:49:22] <nedbat> ok, the missing two members are the _gc_next and _gc_prev, thanks
[01:49:26] *** Joins: mjr7[m] (~mjr7matri@2001:470:69fc:105::1:64e6)
[01:49:41] *** Quits: daddy (ryan@hashbang/bdfl) (Quit: WeeChat 3.4 <:3)~)
[01:49:52] <Yhg1s> (they're not really members, they are a separate struct allocated right before the PyObject struct, in the same allocation.)
[01:49:59] *** Joins: daddy (3645@hashbang/bdfl)
[01:50:01] <nedbat> Yhg1s: right
[01:50:01] <Yhg1s> SnoopJ: I'm not familiar with it
[01:50:03] *** Joins: schemanic[m] (~schemanic@2001:470:69fc:105::1:2450)
[01:50:18] *** Joins: nazarewk[m] (~nazarewk@2001:470:69fc:105::1:2c8d)
[01:50:38] *** Joins: diegov (~diegov@2001:470:69fc:105::103f)
[01:51:02] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[01:51:23] *** Joins: Elodin (~elodin@user/elodin)
[01:51:48] *** Joins: ice9 (~ice9@user/ice9)
[01:52:06] <Yhg1s> SnoopJ: looks like an optimization added in Python 3.11 by nedbat's favourite person :)
[01:52:15] *** Joins: Tardar (~tardar@2001:470:69fc:105::1:4b40)
[01:52:16] *** Joins: cotsuka (~cotsuka@user/cotsuka)
[01:52:26] <nedbat> Yhg1s: we've reached an uneasy alliance :)
[01:52:29] <Yhg1s> https://bugs.python.org/issue45947
[01:53:09] <SnoopJ> Yhg1s, aha, quite a recent addition, too. I feel better about being so surprised by it. Thanks :)
[01:53:13] <Yhg1s> I think it's a stupid change for a 1% speedup, but hey, we have different priorities and goals.
[01:53:17] *** Joins: Echo419[m] (~echo419sa@2001:470:69fc:105::ef65)
[01:53:24] *** Joins: bl4ackpajamas[m] (~bl4ackpaj@2001:470:69fc:105::1:73f4)
[01:53:24] * SnoopJ writes down and underlines "check the blame!" in notebook
[01:53:27] *** Joins: ronny (~ronny@2001:470:69fc:105::b57)
[01:53:29] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[01:54:30] *** Joins: morguldir (~morguldir@2001:470:69fc:105::21bd)
[01:54:43] <ssbr> the idea of putting stuff before the object gives me the heebie jeebies. I guess that people never make PyObject arrays, though, so...
[01:54:48] <SnoopJ> Yhg1s, out of curiosity, is that 'stupid' for aesthetic reasons, or because it changes the layout in memory?  (or both?)
[01:54:52] *** Joins: YakoYoku (~yakoyoku@2001:470:69fc:105::780)
[01:55:17] *** Joins: c4017w_ (~c4017@209.52.68.8)
[01:55:25] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[01:55:41] *** Quits: ice9 (~ice9@user/ice9) (Client Quit)
[01:55:58] *** Joins: ice9 (~ice9@user/ice9)
[01:56:01] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:56:08] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[01:56:20] *** Joins: luc14n0[m] (~luc14n0ma@2001:470:69fc:105::1:304c)
[01:56:36] *** Joins: Alabama[m] (~ingfix-2m@2001:470:69fc:105::1:6ca2)
[01:56:48] *** Joins: jmcantrell (~jmcantrel@user/jmcantrell)
[01:56:49] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[01:56:50] *** Quits: Alabama[m] (~ingfix-2m@2001:470:69fc:105::1:6ca2) (Changing host)
[01:56:50] *** Joins: Alabama[m] (~ingfix-2m@wikipedia/-Alabama-)
[01:57:35] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[01:57:37] <Yhg1s> Because it's extra complexity and fragility.
[01:58:25] <Yhg1s> ssbr: it would be a problem if people allocated the struct themselves, but that's not how you're _supposed_ to create instances of types that aren't yours.
[01:58:37] <Yhg1s> ssbr: for your own types, you can still do that, you just can't make them GC objects.
[01:58:53] *** Quits: c4017w (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[01:59:19] <Yhg1s> (putting stuff before the allocation is not that uncommon, really.)
[01:59:20] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[01:59:41] <c4017w_> fikran, if you're still looking I recommend graphviz. There are python wrappers
[01:59:48] <SnoopJ> I usually just think of it as the GC's alloc keeping notes for itself
[02:00:15] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) ()
[02:00:19] <ssbr> Yhg1s: I think this is a C vs C++ thing -- in C++, it's poor form to create a type which is constructible, but has extra requirements for construction, But in C, you can't actually disable construction at all, so I suppose the default assumption is that you aren't allowed to use or create values except in ways the API describes. (E.g. given some random struct, unless it says you can do it, you are forbidden from doing ThatStruct s;)
[02:00:26] <SnoopJ> but I have only really looked at two GCs and both of them are Python :)
[02:00:31] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[02:00:34] <SnoopJ> (and both do this)
[02:00:59] <Yhg1s> ssbr: Yes, just doing 'PyObject foo' is going to break in exciting ways.
[02:01:05] <Yhg1s> (all Python objects have to be heap allocated.)
[02:01:29] <nedbat> it's right in the header: "Nothing is actually declared to be a PyObject"
[02:01:32] <Yhg1s> well, that's not true. All Python objects that are *instances* have to be heap-allocated. Types can be, but don't have to be, heap allocated.
[02:01:43] *** Quits: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net) (Remote host closed the connection)
[02:01:54] <SnoopJ> [MicroPython cackling in the distance]
[02:01:58] *** Quits: vladoski (~foo@93-36-219-239.ip62.fastwebnet.it) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:02:04] <ssbr> Yhg1s: yes. this is, I hope, understandably weird to a non-C programmer: invariants should normally not be easily violated!
[02:02:17] <Yhg1s> ssbr: welcome to C.
[02:02:19] <ssbr> yeah.
[02:02:27] *** PacKetIV is now known as PocketKiller
[02:02:30] <Yhg1s> (I'm not fond of C, as you know :)
[02:03:06] <ssbr> i literally do full-time Rust/C++ dev right now, haha. :)
[02:03:06] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Max SendQ exceeded)
[02:03:11] <ssbr> I get it.
[02:03:21] *** Quits: zeudap (~zeudap@45.91.23.141) (Quit: Leaving)
[02:03:47] *** Quits: Algernon69 (~Algernon6@2a04:cec0:10f5:7936:a1de:2e7b:487:f6fb) (Ping timeout: 252 seconds)
[02:04:15] *** Joins: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net)
[02:04:19] <kittonian> ok, now i'm getting the reverse of what I need. if the user doesn't exist I get the correct response, but if they do, i now get nothing. https://bpa.st/6T3Q
[02:04:38] <ssbr> (On that note, C++ shared_ptr is *almost* similar to PyObject -- it stores the reference count before the object, if you use make_shared. But it isn't an invariant for anything that this is where the reference count lives, and it is frequently allocated separately.)
[02:04:50] <kittonian> i thought a simple len >= 1 would work, but apparently not
[02:04:55] <SnoopJ> ahh, there *is* profiling data for that dict change, but not linked to the bpo ticket
[02:05:15] *** Quits: bitblit_ (~bitblit@gateway/tor-sasl/bitblit) (Remote host closed the connection)
[02:05:38] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[02:05:38] *** Joins: bitblit_ (~bitblit@gateway/tor-sasl/bitblit)
[02:05:39] <SnoopJ> too bad I'm not really familiar with any of those benchmarks anyway :)
[02:06:57] <ssbr> kittonian: I don't know what this was supposed to do, but the for loop is wonky -- it defines retjson n times, but the only definition that sticks around is the last one, Also, the retjson() function is never called in that branch.
[02:07:29] <kittonian> ssbr, there's only ever a single response coming from the sql call
[02:07:34] <kittonian> it just creates a json string
[02:07:37] <ssbr> (Also the comments are hard to read due to their indentation, I'd recommend running a formatter like black or yapf on it)
[02:07:38] <kittonian> and it works perfectly
[02:08:02] <ssbr> kittonian: I don't have an issue with that, I have an issue with `for result in zsql_method: def retjson(): ...`
[02:08:07] <kittonian> but i need to make it only return a real response is there the sql call yields a result. if not i want it to return an emtpy string
[02:08:14] <ssbr> kittonian: that for loop will define the same function n times, and only the last definition sticks.
[02:08:17] <SnoopJ> ssbr, I think it calls it at L29 but the comment makes it seem like it doesn't. It's hard to tell how this looks in the real program it's been euphemized from
[02:08:44] <kittonian> SnoopJ, that is the entire python script. again, this is how zope works
[02:09:01] <SnoopJ> kittonian, if you say so
[02:09:01] <ssbr> SnoopJ: it was a good try
[02:09:02] <kittonian> all i need to figure out is how to call the if statement
[02:09:20] <ssbr> kittonian: if this is the whole script, then when len(zsql_method) >= 1, nothing happens at all.
[02:09:24] <ssbr> kittonian: do you see why that is?
[02:09:34] <kittonian> no, that's the entire problem i'm asking about
[02:09:42] <SnoopJ> ssbr, *oh* you were talking about the other branch. d'oh
[02:09:43] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 250 seconds)
[02:09:46] *** Joins: goldfish (~goldfish@user/goldfish)
[02:09:47] <ssbr> kittonian: in that condition, a function is defined, but never called, and then the program ends
[02:09:50] <SnoopJ> I see what you mean now, and agree
[02:10:10] <ssbr> kittonian: rather, n different functions are defined, but never called
[02:10:11] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8)
[02:10:30] *** Quits: ice9 (~ice9@user/ice9) (Quit: Leaving)
[02:10:36] <kittonian> ssbr, oh, that's interesting. without the if/else that's my code (obviously removing the entire else statement)
[02:11:13] <kittonian> ssbr, it is called
[02:11:18] <ssbr> kittonian: it really isn't.
[02:11:22] <kittonian> there's a comment that says "call the function"
[02:11:26] <kittonian> and it works just fine
[02:11:30] <ssbr> kittonian: that occurs in the `else` branch.
[02:11:37] <kittonian> it prints out exactly what it's supposed to print out
[02:11:38] <ssbr> kittonian: if it works just fine, then the code you uploaded isn't the code you're running.
[02:11:49] <kittonian> ok, so now that occurs in the else branch
[02:11:56] *** Quits: flyback (~flyback@2601:540:8201:1e60::1b5d) (Quit: Leaving)
[02:11:56] <kittonian> what i was saying is that it works without the if/else
[02:12:13] <ssbr> kittonian: well, if you had just the if, there'd be no print statement at all, you see the problem?
[02:12:25] <ssbr> kittonian: can you upload the actual program?
[02:12:39] <kittonian> all good
[02:12:44] <kittonian> i understood exactly what you meant
[02:12:50] <kittonian> all fixed and working now. thank you
[02:12:50] <ssbr> kittonian: my followup guess, fwiw, is that you're printing outside of the for loop, so that you only run the last-defined function
[02:12:54] <ssbr> oh, okay
[02:13:30] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[02:15:01] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:15:06] *** Quits: 076AAFRPQ (~Thunderbi@p200300ecdf0994537358816310c1cf27.dip0.t-ipconnect.de) (Remote host closed the connection)
[02:15:57] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:18:59] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[02:20:17] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 240 seconds)
[02:20:20] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:40cb:ed11:5496:f541) (Remote host closed the connection)
[02:20:37] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[02:20:50] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Ping timeout: 252 seconds)
[02:21:06] *** Joins: flyback (~flyback@2601:540:8201:1e60::1b5d)
[02:21:09] *** Quits: gl5485 (~gl5485@176-153-16-24.abo.bbox.fr) (Quit: WeeChat 3.3)
[02:21:16] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[02:21:38] *** Joins: Elodin (~elodin@user/elodin)
[02:21:53] *** Joins: gl5485 (~gl5485@176-153-16-24.abo.bbox.fr)
[02:21:57] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[02:22:11] *** Quits: gl5485 (~gl5485@176-153-16-24.abo.bbox.fr) (Client Quit)
[02:22:14] *** Joins: ice9 (~ice9@user/ice9)
[02:22:23] *** Joins: maxzor_ (~maxzor@2a01cb04054faa00156a2badd8434128.ipv6.abo.wanadoo.fr)
[02:22:33] *** Quits: azidhaka (uid211322@user/azidhaka) (Quit: Connection closed for inactivity)
[02:22:41] *** Quits: maxzor__ (~maxzor@2a01cb04054faa00156a2badd8434128.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[02:22:57] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[02:22:57] *** Quits: argument (~0ptions@user/argument) (Ping timeout: 256 seconds)
[02:25:17] *** Joins: theChaparral[m] (~thechapar@2001:470:69fc:105::1:6496)
[02:26:05] *** Joins: felixschloesser[ (~felixschl@2001:470:69fc:105::1:64ed)
[02:26:18] *** Joins: saltrocklamp[m] (~hexology@user/hexology)
[02:26:40] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[02:27:10] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[02:28:35] *** Joins: nomic (~nomic@185.192.69.3)
[02:29:25] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Ping timeout: 250 seconds)
[02:29:37] *** Parts: kittonian (~kittonian@cpe-70-114-148-180.austin.res.rr.com) (Leaving)
[02:30:38] *** Joins: smrtz (~smrtz@user/smrtz)
[02:31:55] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[02:34:01] *** Quits: upsala (~zcb@185.213.155.232) (Quit: WeeChat 3.4)
[02:34:11] *** Quits: henbruas (~henbruas@ti0003a400-4203.bb.online.no) (Ping timeout: 250 seconds)
[02:34:32] *** Quits: m1n10n (~r41d1n@cpe-76-184-204-251.tx.res.rr.com) (Ping timeout: 240 seconds)
[02:34:56] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[02:35:13] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[02:36:12] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[02:37:25] *** Quits: palasso (~palasso@user/palasso) (Quit: I am not a quitter!)
[02:37:55] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[02:38:06] *** Quits: resmo (~resmo@2a00:d420:9:8a00:ea66:c398:9dde:b199) (Ping timeout: 260 seconds)
[02:38:15] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[02:38:52] *** Quits: zegalch (~zegalch@178.128.75.133) (Remote host closed the connection)
[02:38:57] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 240 seconds)
[02:39:26] *** Joins: zegalch (~zegalch@178.128.75.133)
[02:39:36] *** Quits: akk (~akk@75-161-95-245.albq.qwest.net) (Quit: +++)
[02:39:59] *** Joins: m1n10n (~r41d1n@cpe-76-184-204-251.tx.res.rr.com)
[02:40:29] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 250 seconds)
[02:41:03] *** nhartman is now known as SaltHillStroller
[02:41:26] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:41:29] *** Quits: SGautam (uid286066@ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:43:16] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.4)
[02:43:52] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[02:43:58] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[02:44:03] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[02:44:45] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[02:44:58] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-801c-a6a4-997f-0730.res6.spectrum.com) (Read error: Connection reset by peer)
[02:45:18] *** stella is now known as aoeixsz4
[02:46:01] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[02:46:10] *** Joins: Roey (~Roey@user/Roey)
[02:46:24] *** Joins: ivii (~ivan@user/ivii)
[02:46:25] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 256 seconds)
[02:46:32] *** Quits: lz_ (l@gateway/vpn/protonvpn/lz/x-63480406) (Ping timeout: 240 seconds)
[02:50:58] *** Roey is now known as FreedomConniver
[02:52:02] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:52:09] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[02:52:57] *** Joins: luva8 (~luva@37.120.197.44)
[02:52:59] *** Quits: ivii (~ivan@user/ivii) (Ping timeout: 256 seconds)
[02:53:57] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 240 seconds)
[02:54:15] *** Joins: ivii (~ivan@user/ivii)
[02:55:44] *** Joins: CoolerX (~CoolerX@user/coolerx)
[02:55:49] *** Joins: c4017w__ (~c4017@209.52.68.8)
[02:56:03] *** Quits: luva (~luva@37.120.197.52) (Ping timeout: 256 seconds)
[02:56:13] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[02:56:17] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[02:58:46] *** Quits: Gurkenglas (~Gurkengla@dslb-090-186-104-244.090.186.pools.vodafone-ip.de) (Read error: Connection reset by peer)
[02:58:57] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[02:59:04] *** Joins: Gurkenglas (~Gurkengla@dslb-090-186-104-244.090.186.pools.vodafone-ip.de)
[02:59:14] *** Parts: micah (~micah@debian/micah) ()
[03:00:48] *** Quits: mat001 (~mat001@72.28.108.216) (Ping timeout: 256 seconds)
[03:00:51] *** Joins: PanickedKernel (~PanickedK@user/panickedkernel)
[03:01:21] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:01:36] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[03:01:43] *** Quits: smrtz (~smrtz@user/smrtz) (Ping timeout: 256 seconds)
[03:02:40] *** Joins: bytehackr (~Sandipan@45.249.73.198)
[03:03:28] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 250 seconds)
[03:03:53] *** Quits: rms2511 (~rrrrrrrrr@107-138-155-103.lightspeed.rlghnc.sbcglobal.net) (Ping timeout: 250 seconds)
[03:04:10] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:04:30] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[03:05:07] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[03:07:03] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[03:07:15] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[03:07:53] <PanickedKernel> Hey all. I'm using a project to parse a website's html for some values. I can only use regex and not beautifulsoup. I'm having some issues pulling the value I want because there are multiple matches and I can only get the last match back. I want to find the season number(1) on line 12 of this paste. https://pastebin.com/dZp9CuEj
[03:08:13] <PanickedKernel> But it returns 9 from line 45
[03:08:29] <PanickedKernel> That paste is a minimal working example
[03:09:31] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:10:13] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 256 seconds)
[03:10:49] <PanickedKernel> Another paste using the preferred pastebin in the topic: https://bpa.st/RBSA
[03:11:11] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[03:12:09] *** Joins: rustyshackleford (uid236774@helmsley.irccloud.com)
[03:12:28] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[03:13:36] <PanickedKernel> I'm not sure why, but re.findall() is only returning a single found match. Shouldn't it return a list of matches?
[03:13:46] *** xavierdarkness is now known as xavierd
[03:14:11] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[03:15:14] *** Joins: SlaveGeek334269 (~SlaveGeek@gateway/vpn/pia/slavegeek334269)
[03:15:21] *** Joins: Qria (uid25348@tinside.irccloud.com)
[03:16:13] *** Quits: SaltHillStroller (~SaltHillS@206.223.160.26) (Ping timeout: 256 seconds)
[03:16:18] *** Joins: c4017w_ (~c4017@209.52.68.8)
[03:17:40] <Yhg1s> PanickedKernel: .* is greedy, so it matches as much as it possibly can. Having more than one .* is usually a bad idea. Also, parsing HTML correctly with a regular expression is impossible (https://stackoverflow.com/a/1732454). Use more than one regular expression. Look for the starting tag, and then look for the ending tag, then parse whatever's inbetween them.
[03:17:51] <SnoopJ> PanickedKernel, if you were expecting ["1", "9", "9"] it's because the regex is gree--yea, that.
[03:18:11] <PanickedKernel> Hmm
[03:18:31] <SnoopJ> changing both .* to .*? (the non-greedy spelling) gives the above result but it doesn't mean this is any less of a bad idea
[03:18:37] <PanickedKernel> I was having issues with the html div being split over multiple lines.
[03:18:49] *** Joins: mat001 (~mat001@213.143.69.121)
[03:19:00] <Yhg1s> It's also very likely to be very inefficient.
[03:19:22] * SnoopJ wonders why BeautifulSoup is ruled out
[03:19:25] <ssbr> PanickedKernel: is this a homework question or similar?
[03:19:31] <ssbr> SnoopJ: exactly the thing I was thinking, haha
[03:19:45] <PanickedKernel> SnoopJ, Hmm. I'll try that.
[03:19:51] <PanickedKernel> ssbr, No, I
[03:19:52] <PanickedKernel> Err
[03:19:53] <SnoopJ> ssbr, I can see reasons to rule out BS4, but they might not exclude other solutions, like lxml 😈
[03:19:53] <PanickedKernel> I
[03:20:00] <PanickedKernel> GAH I CANT TYPE
[03:20:02] <PanickedKernel> lol
[03:20:11] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[03:20:18] <PanickedKernel> I'm trying to write a extractor for the project youttube-dl
[03:20:22] *** Quits: off^ (~off@128-092-174-141.biz.spectrum.com) (Remote host closed the connection)
[03:20:25] <PanickedKernel> Well, yt-dlp
[03:20:29] *** Quits: mat001 (~mat001@213.143.69.121) (Remote host closed the connection)
[03:20:41] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[03:20:50] <ssbr> I think a full two thirds of us are, like, contractually forbidden from helping you right now
[03:21:09] <PanickedKernel> lol?
[03:21:15] <SnoopJ> PanickedKernel, why does that preclude BS4? Are you writing something that would be contributed to the main project
[03:21:37] <ssbr> (not actually a joke: I'm not allowed to contribute to youtube-dl etc.)
[03:21:42] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:21:48] <SnoopJ> don't bite the hand that signs your paycheck etc.
[03:21:56] <PanickedKernel> SnoopJ, I would like to contribute it back into their main project, though I am writing for my own needs atm.
[03:22:10] <PanickedKernel> ssbr, Interesting!
[03:23:44] *** FreedomConniver is now known as Roey
[03:23:55] <SnoopJ> PanickedKernel, I can see why you'd avoid the dependency if you want to submit it upstream, IIRC they don't use any 3rd-party stuff?
[03:23:58] <PanickedKernel> Now you've piqued my interest. Why can't you help when it's in regards to ytdl? If you can't/don't want to say that ok too. Just curious :)
[03:24:26] <PanickedKernel> SnoopJ, That seems to be the case. I asked about it in their discord and they said no bs4
[03:25:02] <ssbr> PanickedKernel: I was looking for the citation, but it appears to be broken. The tl;dr is that I work for the company that owns youtube and they wouldn't like it very much.
[03:25:06] <SnoopJ> PanickedKernel, I believe their point was that members of #python might work for something in the Google family of megacorp, and there are all kinds of stipulations about things you're not allowed to do when you work at a place like that
[03:25:17] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 256 seconds)
[03:25:17] *** Joins: off^ (~off@128-092-174-141.biz.spectrum.com)
[03:25:36] <SnoopJ> even if it wasn't contractual it would run a very real risk of termination :/
[03:25:39] <Yhg1s> There are? uh oh.
[03:25:43] <PanickedKernel> Ah! That's what I figured but wasn't sure. Cool to see a googler :)
[03:25:48] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[03:25:49] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[03:25:55] <ssbr> (Looking at the internal copy of the currently-offline page, I don't think yt-dl is listed there -- though gaming console emulators are.)
[03:26:03] <PanickedKernel> But sad to see google hates the project.
[03:26:15] <PanickedKernel> Gotcha.
[03:26:33] <Yhg1s> It's not about hate.
[03:26:36] *** Quits: lakrass (~lakrass@user/lakrass) (Quit: WeeChat 3.4)
[03:26:37] <SnoopJ> it's a foregone conclusion of their business model: youtube-dl harms ad revenue and this is bad if ad revenue is your raison d'être
[03:27:24] <PanickedKernel> I get it. It just feels...greedy/gross. Super corporate. But I completely understand it.
[03:27:38] <Yhg1s> getting things for free? yeah, gross.
[03:27:53] *** Quits: luva8 (~luva@37.120.197.44) (Quit: Byebye)
[03:28:21] <SnoopJ> I wonder how youtube-dl generally solves this problem. I can't see any machinery shared between extractors, is everybody just writing their own regex..?
[03:28:29] *** Joins: luva (~luva@37.120.197.44)
[03:29:22] <SnoopJ> ah, scratch that, their utils module does define some useful machinery
[03:29:45] <PanickedKernel> I know 0.1% of the ytdl codebase, I wrote my first line of code for it yesterday. But they provide some rudimentary helper functions for parsing/regex
[03:30:23] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 256 seconds)
[03:31:30] <SnoopJ> PanickedKernel, looking at youtube-dl/utils.py I think `get_elements_by_class("season", webpage)` would be roughly what you wanted to do.
[03:31:34] <ssbr> PanickedKernel: I was forbidden from open-sourcing a script which unzipped an ebook and capitalized the leter "i", once. Gotta be careful when working for The Man, they get angry at unexpected things.
[03:31:57] <SnoopJ> ...seems like *they* are just using regex to implement that functionality in the end, though, but at least the regexes are their problem, not yours :)
[03:32:16] * SnoopJ is very surprised to see XPath helpers there
[03:33:07] <PanickedKernel> SnoopJ, Good catch. I should probably examine their codebase closer. But I don't know python so I just kinda copied from another extractor and starting hacking away.
[03:33:15] * SnoopJ nods
[03:33:29] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[03:33:41] <PanickedKernel> ssbr, Ha. Completely understand. I'd do the same in your shoes :)
[03:33:57] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[03:34:16] *** Joins: kli_ (~kli@ip-89-177-122-45.net.upcbroadband.cz)
[03:35:22] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 256 seconds)
[03:35:27] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:2c5a:1825:e86e:2a61)
[03:35:51] *** Quits: kli_ (~kli@ip-89-177-122-45.net.upcbroadband.cz) (Remote host closed the connection)
[03:36:40] <stewie925> hi guys which python conversion tool would you suggest to convert from python 2.4.x (yes, a really old python version) to python3 ?
[03:37:10] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:38:04] *** Joins: Nutte35 (~Nutte@43.231.30.192)
[03:38:12] <SnoopJ> stewie925, I hear good things about modernize
[03:38:47] <stewie925> hey SnoopJ thanks, I will look into that
[03:40:33] <stewie925> I responded to a job for converting python2 to python3, and learned that it is for python2.4.2.  Wondering how different Python2.4.2 is from Python2.7. Googling doesn't show much
[03:40:38] <grym> stewie925: and a very exhaustive test suite :)
[03:40:58] <grym> (in 2.4)
[03:41:11] <stewie925> if only I could pick your brains grym and SnoopJ
[03:41:24] <grym> otherwise it's hard to know what you've ported
[03:41:48] <stewie925> hi grym, what about (in 2.4) ?
[03:41:56] <SnoopJ> stewie925, Python has had a changelog for a very long time, that would be a good place to start: https://docs.python.org/2.7/whatsnew/index.html (those go all the way back to 2.0)
[03:41:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[03:42:02] <grym> eh, i only know so much
[03:42:10] <ssbr> stewie925: look at the What's New page for every release from 2.5-2.7, quite a bit changed. I first learned Python in 2.4, and it's barely the same language a lot of the time.
[03:42:13] <stewie925> thanks SnoopJ
[03:42:26] <ssbr> beaten
[03:42:31] <stewie925> ssbr - yikes... thats what I am worried about hehe
[03:42:38] *** tomg_ is now known as tomg
[03:42:49] <SnoopJ> ssbr, I will probably never forget hearing someone (Leo Laporte?) talk about Python as a language mostly for students somewhere in the late 90s
[03:43:06] <SnoopJ> Definitely some talking head on TechTV but I know I was a fan of his back then
[03:43:21] <grym> (i don't know if this is a good idea) should you first port 2.4->2.7.last ?
[03:43:31] <ssbr> grym: this is usually a good idea, yes
[03:43:44] <ssbr> later Python 2's have features that might be handy for polyglot programming, as well
[03:43:50] <ssbr> (I can't think of any offhand, though)
[03:43:56] <grym> stewie925: ^
[03:44:05] <ssbr> Oh, the __future__ imports are all late Python 2, so yes, it is important
[03:44:08] * SnoopJ doesn't know enough about lib2to3 to know
[03:44:35] <SnoopJ> I certainly wouldn't expect any tool to do the entire job for 2.x to 3.x, doubly so for not-2.7
[03:44:39] <ssbr> (https://docs.python.org/3/library/__future__.html has a list of future imports and when they were added -- several are useful for porting to py3)
[03:45:23] <ssbr> (absolute imports is the most important one, unicode literals may not be as useful as they first seem)
[03:45:41] *** Quits: Z-cat (~Z-cat@user/z-cat) (Ping timeout: 250 seconds)
[03:45:56] <SnoopJ> ssbr, https://bugs.python.org/issue46555
[03:46:07] <SnoopJ> oh, unicode literals as in unicode() not as in identifiers
[03:46:09] * SnoopJ shakes head
[03:46:29] <ssbr> SnoopJ: I would have lived a happier life having never seen this bug
[03:46:32] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[03:46:53] <SnoopJ> bug? that's a 🌟 feature 🌟 😈
[03:47:22] <SnoopJ> it's definitely my new favorite bit of identifier trivia
[03:47:23] *** Quits: sean345 (~sean345@2601:281:8700:4b6f:b991:989f:6b07:27eb) (Quit: WeeChat 3.3)
[03:47:39] <PanickedKernel> SnoopJ, Might be a dumb question, but how did you find get_elements_by_class("season", webpage) so fast? utils.py is 5000+ loc. Did you just guess by searching for "element" or "class"?
[03:48:06] *** Quits: emerent (~quassel@p200300cd5704438cba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[03:48:22] <stewie925> ssbr, so you think modernize and __future__ would help with converting 2.4.2 to 3.6?
[03:48:24] *** Joins: emerent (~quassel@p200300cd5704437cba27ebfffed28a59.dip0.t-ipconnect.de)
[03:48:32] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 250 seconds)
[03:48:59] <ssbr> stewie925: I think they'd only help once you've first updated to 2.7
[03:49:01] <stewie925> I only had experience with 2.7 to 3.6 myself
[03:49:11] <SnoopJ> PanickedKernel, I poked around for "html" but came up relatively short. Noticed `clean_html` was defined in utils in one of the extractors, then took a hop to utils.py and poked around in there. Mostly dumb luck :)
[03:49:15] <ssbr> well, they might help before, but small updates are often better
[03:49:34] <stewie925> ssbr: oh got it... now as to how to convert from 2.4.2 to 2.7....
[03:49:53] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 256 seconds)
[03:49:56] <ssbr> stewie925: depending on how big the codebase is, it's probably not tremendously difficult.
[03:49:59] <PanickedKernel> SnoopJ, Ah, Ok thanks. I kinda figured it was luck.
[03:49:59] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[03:49:59] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[03:49:59] *** Joins: JordiGH (~jordi@user/jordigh)
[03:50:03] <PanickedKernel> Thanks again :)
[03:50:37] <SnoopJ> ssbr, stewie925 modernize tries to emit code that is 2.6+ compatible, so I think it's aware of at least one version behind the last one. I expect its support for input from older versions is mostly down to whatever lib2to3 supports
[03:50:59] <ssbr> SnoopJ: nice, good catch.
[03:51:07] <stewie925> oh thank you , SnoopJ
[03:51:35] <stewie925> cause I do remember that 2to3 utility was specifically targeted to convert from 2.7
[03:51:36] <ssbr> PanickedKernel: btw, I finally found a working copy of the open source page, you can see some of the policy docs here: https://opensource.google/documentation/reference/patching/  (the whole website is broken right now because they're in the process of a global rewrite, apparently)
[03:51:44] <ssbr> if you're interested at all, that is.
[03:52:38] <ssbr> the list of projects requiring approval is actually not public, apparently. So, shrug emoji here
[03:52:51] <PanickedKernel> ssbr, Interesting.
[03:54:18] *** Quits: rapha (~jrs@user/rapha) (Quit: WeeChat 2.3)
[03:55:21] *** Quits: LimeOn (~user@user/limeon) (Quit: .)
[03:55:33] <SnoopJ> stewie925, maybe it was once, the current documentation says "reads Python 2.x source code" so I would naively expect it to handle any minor version
[03:56:26] <SnoopJ> I would feel less optimistic about that if 2.x changes broke backwards compatibility more often but I think they were pretty good about that?
[03:56:28] <ssbr> (BTW I'd probably be remiss in pointing out that this is only if you don't own the copyright. You can request copyright assignment, and work on whatever you want. That is exactly what I did for my ebook unzip program, for example. I know of other people who do this to work independent video games, etc.)
[03:56:41] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[03:56:42] <stewie925> SnoopJ:  I truly appreciate your responses
[03:58:50] *** Joins: SOMBRIO (~SOMBRIO@177.137.113.71)
[03:59:13] *** Quits: ert (~ert@2001:4b99:1:1:216:3eff:fee5:446f) (Quit: out)
[04:01:15] *** Joins: M3troidman (~buttler@196.196.203.86)
[04:03:03] *** Quits: d0ku (~d0ku@178.43.19.180.ipv4.supernova.orange.pl) (Remote host closed the connection)
[04:03:08] *** Quits: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3) (Ping timeout: 252 seconds)
[04:03:23] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[04:03:53] *** Joins: crashrep (~crashrep@user/crashrep)
[04:03:57] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[04:05:11] *** Quits: Reign (~Username@ip98-161-226-10.ph.ph.cox.net) (Quit: Going offline, see ya! (www.adiirc.com))
[04:05:46] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[04:05:48] *** Quits: M3troidman (~buttler@196.196.203.86) (Client Quit)
[04:05:58] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[04:06:14] <auk> ~2/3s of the channel works for google? higher than i expected
[04:06:16] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[04:07:29] *** Joins: Z-cat (~Z-cat@user/z-cat)
[04:07:47] *** Quits: elwoodpd (~elwoodpd@host-92-8-70-132.as13285.net) (Ping timeout: 256 seconds)
[04:07:49] *** Joins: Wulf (~Wulf@user/wulf)
[04:08:06] <ssbr> auk: sometimes it feels that way, don't you think? ;)
[04:08:16] <nedbat> auk: i think your estimate is high :)
[04:08:18] <SnoopJ> I read it as 2 out of 3 of the people responding to the question, heh.
[04:08:28] <Yhg1s> Indeed it was.
[04:08:29] <ssbr> SnoopJ: yeah
[04:09:13] <auk> ahhh that makes more sense
[04:10:56] *** Joins: DrBrownBear (~Drbb@2600:1700:9aa1:6bc0::47)
[04:10:58] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[04:11:02] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:12:43] *** Joins: EsoAlgo (~EsoAlgo@152.70.142.52)
[04:13:11] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[04:13:39] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8) (Ping timeout: 250 seconds)
[04:13:45] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[04:13:55] *** Joins: adiKt (uid472628@tinside.irccloud.com)
[04:14:58] *** Quits: bancroft (~bancroft@user/bancroft) (Ping timeout: 250 seconds)
[04:15:23] *** Quits: mon_aaraj (~MonAaraj@149.255.212.24) (Ping timeout: 250 seconds)
[04:15:38] <JordiGH> ssbr: You're still chez El Goog?
[04:15:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[04:16:48] *** Joins: c4017w__ (~c4017@209.52.68.8)
[04:17:34] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[04:17:57] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 240 seconds)
[04:18:11] *** Quits: grimvar (~grimvar@i5C75F7E6.versanet.de) (Ping timeout: 250 seconds)
[04:18:17] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 240 seconds)
[04:18:28] *** Quits: Vision (~Vision@097-087-115-181.res.spectrum.com) (Read error: Connection reset by peer)
[04:19:04] *** Joins: merijn (~merijn@c-001-002-002.client.esciencecenter.eduvpn.nl)
[04:20:00] *** Joins: grimvar (~grimvar@i5C75F569.versanet.de)
[04:20:15] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[04:20:51] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[04:21:37] *** Quits: SirScott (~SirScott@c-67-176-100-163.hsd1.co.comcast.net) (Ping timeout: 256 seconds)
[04:22:31] *** Quits: Gurkenglas (~Gurkengla@dslb-090-186-104-244.090.186.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[04:22:40] <whatsupdoc> Can someone explain to me what the paramater inside lru_cache(cache) does? Thank you
[04:22:41] <ssbr> JordiGH: Yeah! I found a really great project, doing Rust/C++ interop work and the like, which I think is important work. I've wanted to push Rust literally since I got here -- had an argument with the person who's currently my director back in like 2014 about it. :D
[04:23:19] <ssbr> whatsupdoc: have you seen the docs at https://docs.python.org/3/library/functools.html#functools.lru_cache ?
[04:23:40] <whatsupdoc> Yea, but it doesn't make sense to me. It's a function/
[04:23:54] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[04:24:17] *** Joins: audio (~audio@user/audio)
[04:24:17] *** Joins: bancroft (~bancroft@user/bancroft)
[04:24:19] <ssbr> whatsupdoc: maxsize is the maximum size of the cache. When the cached-function is called, and there are more than maxsize cache entries, the least-recently-used one is deleted, making space for the newly-added entry
[04:24:57] <Repiphany> Decorator factories (decorators that take arguments) create decorators which then decorate the function
[04:24:58] <ssbr> whatsupdoc: if you just pass in a function, maxsize defaults to 128.
[04:25:11] <whatsupdoc> cache is a function, right?
[04:25:28] <whatsupdoc> But I don't even have a function named cache in my code
[04:25:44] <ssbr> whatsupdoc: uhh, it might be, depends on context.
[04:26:17] *** Joins: leitz (~LeamHall@072-182-158-027.res.spectrum.com)
[04:26:18] *** Joins: lainon (~lainon@2601:7c0:c500:4d20::ae8)
[04:26:19] <JordiGH> ssbr: lol u old
[04:26:25] <whatsupdoc> I'm just solving leetcode puzzles
[04:26:41] <whatsupdoc> And I always see things like this https://dpaste.org/OnJH#L3
[04:26:56] <whatsupdoc> @lru_cache(cache)
[04:26:59] <ssbr> JordiGH: older and wiser and still getting in arguments with my director
[04:27:30] <ssbr> whatsupdoc: yeah, I have no idea where cache is coming from there, but it's the maxsize parameter, in this context.
[04:27:56] <whatsupdoc> so I can ignore the cache parameter?
[04:28:11] <ssbr> it's probably not very important to think about, nope
[04:28:17] <whatsupdoc> ok, thank you
[04:28:18] <johnjaye> google tells me LRU means "least recently used". which is how i imagined all cache's worked
[04:28:44] *** Joins: travaldo (~travaldo@159.203.88.148)
[04:29:08] <ssbr> johnjaye: at school they taught me FIFO followed by LRU. FIFO is easier to implement, but...   Anyway, this page has a bunch of alternate strategies: https://en.wikipedia.org/wiki/Cache_replacement_policies
[04:29:12] <whatsupdoc> I'm not good at recursion :/
[04:29:17] *** Quits: bancroft (~bancroft@user/bancroft) (Ping timeout: 240 seconds)
[04:29:28] *** Quits: katrix (~m-ucfpsh@static.151.67.161.5.clients.your-server.de) (Remote host closed the connection)
[04:29:34] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:29:39] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[04:29:48] <ssbr> LFU is interesting
[04:30:06] *** Joins: SirScott (~SirScott@c-67-176-100-163.hsd1.co.comcast.net)
[04:31:39] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[04:31:49] <Repiphany> whatsupdoc: Are you doing `from functools import *`
[04:31:55] *** Quits: Gerula (~Gerula@user/gerula) (Read error: Connection reset by peer)
[04:32:01] *** Joins: Stas__ (~Stas@78.162.42.17)
[04:32:14] *** Joins: Gerula (~Gerula@user/gerula)
[04:32:16] <leitz> Did anyone else get a private contact from "touti" about irc.ircgo.net? Is it legit, or IRC spam?
[04:32:24] <whatsupdoc> Hmmm... maybe that might be it, repiphany
[04:32:27] <whatsupdoc> Thanks!
[04:32:35] *** Parts: avu (~jan@user/avu) ()
[04:32:37] *** Joins: avu (~jan@user/avu)
[04:32:47] <whatsupdoc> Is @cache the same thing?
[04:32:51] <Repiphany> You can't specify maxsize as a positional argument
[04:33:14] <Repiphany> @cache is shorthand for @lru_cache(maxsize = None)
[04:33:23] <avu> leitz: it's spam
[04:33:40] *** Joins: Vision (~Vision@097-087-115-181.res.spectrum.com)
[04:33:45] <leitz> avu, thanks. I haven't been on for a bit.
[04:34:05] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[04:34:23] <whatsupdoc> ok thanks Repiphany
[04:34:50] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:35:13] *** Quits: Stas_ (~Stas@78.162.42.17) (Ping timeout: 256 seconds)
[04:35:13] *** Joins: Barones (~Barones@user/Barones)
[04:35:20] *** Quits: ST47 (~ST47@wikimedia/st47) (Ping timeout: 250 seconds)
[04:35:23] <Repiphany> Wait, ignore that one about lru_cache maxsize being keyword only
[04:36:56] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[04:37:27] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[04:39:37] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[04:39:45] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[04:40:19] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[04:40:19] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 256 seconds)
[04:40:39] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[04:41:37] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[04:43:56] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[04:44:37] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 240 seconds)
[04:46:01] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[04:47:07] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Client Quit)
[04:47:17] *** Joins: rms2511 (~rrrrrrrrr@107-138-155-103.lightspeed.rlghnc.sbcglobal.net)
[04:48:01] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[04:48:05] *** Quits: Z-cat (~Z-cat@user/z-cat) (Ping timeout: 250 seconds)
[04:48:11] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[04:48:12] *** Joins: ST47 (~ST47@wikimedia/st47)
[04:48:38] *** Joins: qlixed (~qlixed@181.44.129.13)
[04:50:19] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[04:50:52] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:52:17] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 240 seconds)
[04:52:29] *** Joins: M3troidman (~buttler@196.196.203.86)
[04:53:21] *** Quits: merijn (~merijn@c-001-002-002.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[04:54:18] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[04:54:38] *** Quits: audio (~audio@user/audio) (Quit: Client closed)
[04:56:02] *** Quits: qlixed (~qlixed@181.44.129.13) (Remote host closed the connection)
[04:56:38] *** Joins: SaltHillStroller (~SaltHillS@206.223.160.26)
[04:56:45] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 256 seconds)
[04:57:02] *** Quits: ba (~ba@cpc1-hari17-2-0-cust27.20-2.cable.virginm.net) (Ping timeout: 252 seconds)
[04:58:27] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[05:00:22] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[05:01:10] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:02:52] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[05:03:04] *** Joins: panella32 (~panella32@154.6.22.11)
[05:03:12] *** Quits: panella32 (~panella32@154.6.22.11) (Client Quit)
[05:03:14] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:03:15] *** Quits: M3troidman (~buttler@196.196.203.86) (Quit: uptime reset)
[05:05:20] *** Quits: cocalero (~cocalero@200-140-37-88.user3p.brasiltelecom.net.br) (Quit: Going offline, see ya! (www.adiirc.com))
[05:05:37] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[05:06:15] *** phantomcircuit_ is now known as phantomcircuit
[05:06:43] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[05:06:57] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 250 seconds)
[05:08:36] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[05:09:24] *** Joins: henbruas (~henbruas@ti0003a400-2412.bb.online.no)
[05:09:35] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:09:55] *** Joins: monio (~monio@189.159.140.87)
[05:10:07] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 256 seconds)
[05:10:13] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:11:17] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[05:11:45] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[05:12:18] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:13:03] *** Quits: monio (~monio@189.159.140.87) (Remote host closed the connection)
[05:13:57] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[05:14:03] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[05:14:05] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[05:14:58] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[05:16:14] *** Quits: lainon (~lainon@2601:7c0:c500:4d20::ae8) (Remote host closed the connection)
[05:16:36] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:16:45] *** Joins: mar77i (~martti@46-126-48-136.dynamic.hispeed.ch)
[05:16:45] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:17:17] *** Joins: c4017w_ (~c4017@209.52.68.8)
[05:17:38] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[05:17:56] *** Quits: johnjaye (~pi@173.209.65.233) (Ping timeout: 256 seconds)
[05:18:28] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Read error: Connection reset by peer)
[05:18:57] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[05:19:00] *** Quits: off^ (~off@128-092-174-141.biz.spectrum.com) (Remote host closed the connection)
[05:19:41] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[05:19:56] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Remote host closed the connection)
[05:20:21] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[05:20:37] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[05:21:43] *** Quits: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) (Quit: Client closed)
[05:22:19] *** Joins: maxzor__ (~maxzor@abordeaux-652-1-2-77.w90-16.abo.wanadoo.fr)
[05:22:26] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[05:24:37] *** Quits: maxzor_ (~maxzor@2a01cb04054faa00156a2badd8434128.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[05:26:37] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 240 seconds)
[05:26:48] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[05:28:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[05:29:13] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[05:29:47] *** Joins: jfcaron (~jfcaron@69-172-180-83.cable.teksavvy.com)
[05:30:19] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:31:52] *** Joins: cul8r (~cul8r@2601:8c3:4000:b0d0::f2bf)
[05:32:06] <jfcaron> In our work code repository we have code in a file src/drivers/id900/id900.py that I can import as a module.  Inside it does a relative import with "from ...errors.errors import assert_error".  The same file has a test script that runs if __name__=="__main__", but it barfs on the relative import saying "attempted relative import with no known parent package".  How can I get this import to work both as a module and when running the file as
[05:32:07] <jfcaron> script?
[05:32:52] *** Joins: vlm (~vlm@user/vlm)
[05:33:17] *** Joins: elias117 (~elias117@47.55.112.181)
[05:33:17] *** Quits: elias117 (~elias117@47.55.112.181) (Changing host)
[05:33:17] *** Joins: elias117 (~elias117@user/elias117)
[05:34:43] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Ping timeout: 256 seconds)
[05:35:41] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[05:36:05] *** Joins: sprout_ (~quassel@2a02:a467:ccd6:1:b9e2:b772:90e7:5a2b)
[05:36:08] <novapy> is it prefered to use f-string or .format()
[05:36:45] <parv> Problem is relative import to work correctly needs to be in the right directory and/or use of module notation to "__name__=="__main__"" as in python -m what.ever. I do not use relative imports.
[05:36:48] <phy1729> pick one and stick to it is most important. Personally I like f-strings, but consistency is most important.
[05:37:17] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[05:37:50] *** Quits: Sargento (uid523534@wikipedia/Sargento-de-Hierro) (Quit: Connection closed for inactivity)
[05:38:30] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[05:39:10] <parv> Function calls in f-string are easy to miss for me; also becomes a mess when using more than 2-3 variables.
[05:39:39] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:6013:7539:4fef:cd22) (Ping timeout: 250 seconds)
[05:39:48] <parv> So it depends what I would use
[05:39:51] *** Joins: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[05:40:55] <parv> So use of f-string or str.format would depend on things being stuffed.  # Second try.
[05:41:19] <stewie925> just a quick question guys, so I just wanted to try out the `2to3` tool - the doc says its installed with the python interpreter but when I run 2to3 it says `command not found`. I am using a Mac
[05:41:20] *** Joins: _ev (ev@user/ev/x-8999918)
[05:42:54] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:43:38] <phy1729> Seems macos doesn't ship it. You could pull python from homebrew
[05:44:22] <stewie925> phy1729: you also have a Mac?
[05:44:46] <phy1729> I have access to one
[05:45:17] <stewie925> how old is your Mac? just curious.  I got mine in Dec 2020.
[05:45:48] *** Quits: PanickedKernel (~PanickedK@user/panickedkernel) (Quit: Leaving)
[05:45:49] <_ev> [Django Rest Framework]  My Login validation is colliding with my Signup validation. They depend on a parent class of UserSerializer.  My commented out validation affects both logins and signups, resulting in failure. For example, if signing up it would return "username no in database". How should I be splitting these up? Can I not use a parent class of UserSerializer for this?    https://bpa.st/HVNQ
[05:45:51] <phy1729> That's getting off topic, but 2019
[05:46:04] <stewie925> I installed python3.8 on my Mac, so I was expecting that 2to3 is installed with it, but I guess not...
[05:46:32] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[05:46:34] <stewie925> I installed python3.8 with homebrew
[05:46:47] <jfcaron> I have python from MacPorts and it provides 2to3
[05:47:14] <stewie925> jfcaron could you share in which path 2to3 can be found?
[05:47:34] *** Quits: therufuser (~therufuse@p5b02e22b.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[05:47:37] <jfcaron> The path is /opt/local/bin/2to3
[05:47:45] *** Parts: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[05:47:47] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[05:47:49] <jfcaron> (Macports puts all its stuff in /opt/local,unlike homebrew iirc)
[05:48:01] <stewie925> yeah I dont have /opt
[05:48:54] <_ev> find / -name "2to3"
[05:49:06] *** Joins: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1)
[05:49:07] *** Joins: therufuser (~therufuse@p5b02e5be.dip0.t-ipconnect.de)
[05:49:36] <stewie925> oooh I found it thank you
[05:49:44] <jfcaron> I usually add 2> /dev/null to those searches to skip the error spam. =p
[05:49:55] *** Joins: soundwave[m] (~pjconnect@2001:470:69fc:105::1:1c57)
[05:50:22] <stewie925> test
[05:50:22] <jfcaron> "/Applications/LibreOffice.app/Contents/Frameworks/LibreOfficePython.framework/Versions/3.5/bin/2to3" lol
[05:50:31] <stewie925> "/Library/Developer/CommandLineTools/usr/bin/2to3"
[05:50:32] <_ev> lol
[05:50:37] <stewie925> thats where mine is
[05:50:55] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 256 seconds)
[05:51:06] <_ev> Might not be the same thing, but I am unsure what the topic of discussion is. #FallingBack
[05:51:07] <jfcaron> That'll probably be from the system Python, right?
[05:51:14] *** Joins: califax- (~califax@user/califx)
[05:51:15] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Quit: nappy time)
[05:51:20] <_ev> prob not jfcaron
[05:51:57] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 240 seconds)
[05:52:02] <stewie925> I suck at unix
[05:52:16] <stewie925> I tried to access /Library/Developer/CommandLineTools/usr/bin/ and I get access denied
[05:53:06] <_ev> It's at the root dir level  /Library
[05:53:14] <_ev> sudo su
[05:53:21] <_ev> cd /Library/Developer/CommandLineTools/usr/bin/
[05:53:22] <_ev> ls -la
[05:53:27] <_ev> exit
[05:53:51] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[05:53:51] *** califax- is now known as califax
[05:53:55] <_ev> Just "su" if no sudo
[05:54:03] *** Joins: brabrax_ (~brabrax@user/brabrax)
[05:54:57] *** Quits: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 240 seconds)
[05:55:04] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 250 seconds)
[05:55:04] *** brabrax_ is now known as brabrax
[05:55:09] <stewie925> thanks _ev
[05:56:00] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[05:56:02] <stewie925> strange why my 2to3 landed up there
[05:56:13] <stewie925> and I had to sudo su to get in
[05:57:14] <stewie925> oh, I can do `/Library/Developer/CommandLineTools/usr/bin/2to3 -w file.py ` - I guess I should add `/Library/Developer/CommandLineTools/usr/bin/ ` to my path?
[05:57:22] <_ev> The fact that Mac has a /Library and /Applications is... unacceptable =)
[05:58:36] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[05:59:05] *** Quits: Guest3959 (epony@lz2.eu) (Quit: QUIT)
[05:59:07] *** Joins: pycurious (~Adium@user/pycurious)
[05:59:32] <_ev> stewie925:  "ls -la  /Library/Developer/CommandLineTools/usr/bin/2to3" will probably allow "other" users to +x (execute) the file.   alias 2to3="/Library/Developer/CommandLineTools/usr/bin/2to3"
[05:59:34] <pycurious> I've a dict (which is nested). I want to remove all keys named "mykey" from all nestings ? how do i do that?
[05:59:47] <_ev> then you can just 2to3 -w file.py
[06:00:08] *** Quits: mgedmin (~mg@user/mgedmin) (Quit: ZNC - http://znc.sourceforge.net)
[06:00:17] <stewie925> _ev: thats awesome, thanks!  I guess I should put that in my zshrc file
[06:00:18] <_ev> to make permanent put that alias in your .bashrc or .zshrc and then "cd ~; source .bashrc"
[06:00:33] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 256 seconds)
[06:00:37] *** Joins: hqdruxn08 (~hqdruxn08@user/hqdruxn08)
[06:00:37] <_ev> You're welcome. ;)
[06:00:38] <stewie925> thanks again!
[06:02:16] *** Joins: dsrt^ (~dsrt@128-092-174-141.biz.spectrum.com)
[06:02:22] *** Joins: mgedmin (~mg@user/mgedmin)
[06:03:03] *** Quits: mar77i (~martti@46-126-48-136.dynamic.hispeed.ch) (Ping timeout: 256 seconds)
[06:03:03] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 256 seconds)
[06:03:27] <parv> _ev, Why cd when can source the file from wherever with ~/.shrc?
[06:03:46] <_ev> Fair point
[06:04:24] *** Joins: epony (epony@user/epony)
[06:06:52] *** Quits: CoolerX (~CoolerX@user/coolerx) (Remote host closed the connection)
[06:07:16] *** Joins: CoolerX (~CoolerX@user/coolerx)
[06:07:21] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 256 seconds)
[06:08:32] <nedbat> pycurious: you'll need to write a function (recursive?) to find them and delete them.
[06:09:48] *** Joins: frost (~frost@user/frost)
[06:10:10] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8)
[06:10:11] <parv> Could there be a memory leak f a higher level key-value is removed without starting the removal from inner-most?
[06:10:25] <parv> s/f a/if a/
[06:10:59] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 256 seconds)
[06:13:35] *** Quits: SaltHillStroller (~SaltHillS@206.223.160.26) (Ping timeout: 256 seconds)
[06:14:09] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[06:14:17] <ssbr> parv: no, memory will get cleaned up recursively. Memory leaks only form from obscure corner cases in the garbage collector that I'm not even sure exist anymore (like defining __del__ and then forming a memory cycle), from turning off the garbage collector, or -- and this is technically not really a "leak" per se -- from keeping around references longer than you need them
[06:14:20] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[06:14:33] <ssbr> s/memory cycle/reference cycle/ my brain is on brain today.
[06:16:46] <parv> ssbr, Does that mean until the dict object goes out of scope, value objects previously collected will linger?
[06:17:48] *** Joins: c4017w__ (~c4017@209.52.68.8)
[06:18:14] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[06:18:27] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[06:19:20] <ssbr> parv: until the dict is destroyed, everything the dict references will stay alive, yes.
[06:19:46] <parv> Right. Thanks ssbr.
[06:19:53] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[06:19:53] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[06:19:53] *** Joins: JordiGH (~jordi@user/jordigh)
[06:20:57] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[06:22:30] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c) (Remote host closed the connection)
[06:22:39] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 256 seconds)
[06:22:49] *** Quits: cul8r (~cul8r@2601:8c3:4000:b0d0::f2bf) (Quit: abducted by aliens)
[06:24:04] *** Joins: kaiseisei (~Thunderbi@113.26.111.177)
[06:25:13] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:25:17] *** Quits: kaiseisei (~Thunderbi@113.26.111.177) (Client Quit)
[06:26:47] *** Quits: stdout (~stdout@2605:ab80:b000:7202:3e12:af82:936c:2ff6) (Quit: Leaving)
[06:28:13] *** Quits: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net) (Quit: Client closed)
[06:29:41] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[06:30:21] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:31:18] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[06:31:59] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[06:33:19] *** Joins: hanzo (uid532183@user/hanzo)
[06:33:50] *** Parts: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[06:34:03] *** Parts: jfcaron (~jfcaron@69-172-180-83.cable.teksavvy.com) ()
[06:34:32] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[06:34:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[06:34:42] *** Joins: cdown_ (~cdown@188.214.11.14)
[06:34:49] *** Joins: Archdave_ (~Archdave2@071-011-134-092.res.spectrum.com)
[06:35:17] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 240 seconds)
[06:36:11] *** Quits: Archdave_ (~Archdave2@071-011-134-092.res.spectrum.com) (Client Quit)
[06:36:29] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[06:36:32] *** Joins: Archdave_ (~Archdave2@071-011-134-092.res.spectrum.com)
[06:36:35] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:2c5a:1825:e86e:2a61) (Quit: Client closed)
[06:37:32] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 250 seconds)
[06:37:33] *** Quits: runelind (~runelind@user/runelind) (Quit: ZNC 1.8.2 - https://znc.in)
[06:37:41] *** cdown_ is now known as cdown
[06:38:43] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:38:43] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[06:38:43] *** finn_elija is now known as FinnElija
[06:39:31] *** Parts: Archdave_ (~Archdave2@071-011-134-092.res.spectrum.com) ()
[06:39:45] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[06:39:57] <Batzy> hi, i have what's technically a sagemath question (that channel is dead), i'm trying to use the timeit module shown here: https://doc.sagemath.org/html/en/reference/misc/sage/misc/sage_timeit_class.html to get an idea of execution time for a function. It looks like it works a little differently than the python timeit module though?
[06:41:14] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:41:29] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:80b2:e90a:7da7:7a8d)
[06:42:01] <foul_owl> Is it possible to use prettytable to add a row that is outlined? I want the row to look just like the field_names row, but somewhere in the middle of the table
[06:42:41] *** Joins: bancroft (~bancroft@user/bancroft)
[06:42:50] *** Joins: Archdave_ (~Archdave2@071-011-134-092.res.spectrum.com)
[06:42:57] <Batzy> im adding a whole block of code and im not getting any input back
[06:43:50] <Batzy> the doc is pretty unhelpful
[06:44:04] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[06:44:37] *** Quits: sprout_ (~quassel@2a02:a467:ccd6:1:b9e2:b772:90e7:5a2b) (Ping timeout: 240 seconds)
[06:45:05] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Ping timeout: 250 seconds)
[06:45:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[06:45:26] *** Quits: parv (~quass@user/parv) (Ping timeout: 260 seconds)
[06:47:15] *** Quits: bancroft (~bancroft@user/bancroft) (Ping timeout: 256 seconds)
[06:47:44] *** Joins: bancroft (~bancroft@user/bancroft)
[06:48:04] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[06:50:06] *** Archdave_ is now known as Archdave2
[06:50:55] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[06:51:23] *** Archdave2 is now known as Archdave_
[06:51:58] *** Parts: Archdave_ (~Archdave2@071-011-134-092.res.spectrum.com) ()
[06:52:25] *** Joins: lowfi (~lowfi@user/lowfi)
[06:53:00] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[06:53:20] *** Joins: millido (~millido@84.210.150.128)
[06:53:29] *** Joins: psych3del1c (~psych3del@net031132118099.pskovline.ru)
[06:53:30] *** Quits: psych3del1c (~psych3del@net031132118099.pskovline.ru) (Remote host closed the connection)
[06:53:55] *** Joins: bluedust (~bluedust@117.222.188.38)
[06:54:16] *** Quits: kenwoodfox (~quassel@user/kenwoodfox) (Ping timeout: 256 seconds)
[06:54:35] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[06:55:03] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:55:46] *** Joins: kenwoodfox (~quassel@user/kenwoodfox)
[06:55:52] <SnoopJ> Batzy, are you able to reproduce the examples in the documentation?
[06:56:04] *** Quits: dre (~dre@2001:8003:c932:c301:77c0:cff4:f6dd:6abf) (Remote host closed the connection)
[06:56:15] *** Quits: tatarqa (~kli@ip-89-177-122-45.net.upcbroadband.cz) (Remote host closed the connection)
[06:57:01] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[06:57:04] *** Joins: jazzy (~jaziz@user/jaziz)
[06:57:49] *** Quits: JordiGH (~jordi@user/jordigh) (Remote host closed the connection)
[06:58:27] *** Joins: JordiGH (~jordi@gcc2-power8.osuosl.org)
[06:58:27] *** Quits: JordiGH (~jordi@gcc2-power8.osuosl.org) (Changing host)
[06:58:27] *** Joins: JordiGH (~jordi@user/jordigh)
[07:01:07] *** Joins: adeliktas8 (~adeliktas@i59F4A09F.versanet.de)
[07:01:24] *** Joins: Vonter (~Vonter@user/vonter)
[07:01:37] *** Quits: duuude (~user@user/duuude) (Ping timeout: 240 seconds)
[07:01:45] *** Joins: kaiseisei (~Thunderbi@113.26.111.177)
[07:02:29] *** Quits: kaiseisei (~Thunderbi@113.26.111.177) (Client Quit)
[07:02:40] *** Quits: adeliktas (~adeliktas@i59F5F5AE.versanet.de) (Ping timeout: 250 seconds)
[07:02:41] *** adeliktas8 is now known as adeliktas
[07:02:48] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[07:02:50] *** Joins: dre (~dre@2001:8003:c932:c301:a9ae:c59a:a85f:47a7)
[07:03:21] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[07:03:43] *** abc_- is now known as zwindl
[07:04:01] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:04:48] *** Quits: ivii (~ivan@user/ivii) (Quit: Konversation terminated!)
[07:06:43] *** Joins: duuude (~user@user/duuude)
[07:06:46] *** Joins: Emet-Selch (~haise01@user/haise01)
[07:07:02] *** Quits: xcm (~xcm@static.90.45.69.159.clients.your-server.de) (Remote host closed the connection)
[07:07:20] *** Joins: xcm (~xcm@user/xcm)
[07:07:22] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[07:07:25] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 250 seconds)
[07:07:39] *** Joins: SaltHillStroller (~SaltHillS@206.223.160.26)
[07:07:41] *** Joins: vivekl (~viveklane@ip-38-34-35-85.fibre.fibrestream.ca)
[07:09:55] *** Quits: Azem (~haise01@user/haise01) (Ping timeout: 256 seconds)
[07:10:39] *** Joins: Archdave2 (~Archdave2@071-011-134-092.res.spectrum.com)
[07:11:17] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 240 seconds)
[07:11:57] *** Quits: SaltHillStroller (~SaltHillS@206.223.160.26) (Ping timeout: 240 seconds)
[07:11:58] *** Parts: Archdave2 (~Archdave2@071-011-134-092.res.spectrum.com) ()
[07:13:10] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[07:13:33] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[07:14:37] *** Quits: travaldo (~travaldo@159.203.88.148) (Quit: travaldo)
[07:15:49] *** Joins: crashrep (~crashrep@user/crashrep)
[07:16:10] *** Joins: parv (~quass@user/parv)
[07:16:28] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[07:18:18] *** Joins: c4017w_ (~c4017@209.52.68.8)
[07:19:00] <pycurious> what is a good library to use to run a python program every hour - ubuntu (cron/python scheduler/systemd/…)?
[07:21:37] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[07:21:41] *** Joins: runelind (~runelind@user/runelind)
[07:23:01] *** Joins: johnjaye (~pi@173.209.65.233)
[07:23:31] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[07:23:49] <SnoopJ> pycurious, what are the criteria lying underneath "good?" Narrowing down whether you want the scheduling on the Python side of the or the OS side (and why) could help narrow the field of candidates
[07:24:50] *** Joins: portalrat (~portalrat@user/portalrat)
[07:25:01] *** Quits: nomic (~nomic@185.192.69.3) (Quit: Leaving)
[07:25:41] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 250 seconds)
[07:27:12] <pycurious> SnoopJ: Python side would be nicer - that way i can just run that process as a user
[07:27:14] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[07:30:07] <SnoopJ> pycurious, this one looks pretty decent to me: https://github.com/dbader/schedule
[07:30:08] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:31:12] <SnoopJ> I don't have any experience with writing something like that, so I don't have any useful opinions about it. I'm boring, I like to let the OS do the thinking if I really don't need to care about persistent state (and even if I do, hourly is "put it on the disk" territory for me)
[07:31:17] *** Quits: DrBrownBear (~Drbb@2600:1700:9aa1:6bc0::47) (Ping timeout: 240 seconds)
[07:32:15] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[07:32:21] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 256 seconds)
[07:34:29] *** Quits: johnkeats7 (~johnkeats@2804:14c:32:a0cc:c1ad:5567:c947:cef7) (Ping timeout: 250 seconds)
[07:35:17] <pycurious> SnoopJ: thanks for the pointer - i'll give it a try
[07:35:44] <Henry151> howdy #python https://bpa.st/W5FA
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:02] <Henry151> this was my interview challenge today
[07:36:20] <SnoopJ> I always mistakenly remember `at` being a thing that Python provides, rather than by *checks* Thomas Koenig, apparently.
[07:36:24] <Henry151> i think i i got the job based on my verbal expression of how i would solve
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:06] <Henry151> the question was, "how can we get counter_dict more effeciently?
[07:37:16] <Henry151> "
[07:38:09] <Henry151> i basically said, we can do it without nested for looops, with two list comprehensions that are separate from one another
[07:38:43] <Henry151> can anybody provide feeedback, input, ideas?
[07:40:59] <Henry151> any of you 1514 people actually here?
[07:40:59] *** Joins: rvalue (~rvalue@user/rvalue)
[07:41:00] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[07:41:24] <Henry151> I'm ready to hang out and talk.
[07:41:36] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:41:38] <SnoopJ> Henry151, I would reach for collections.Counter, personally: https://bpa.st/KBPQ
[07:41:53] *** Quits: vivekl (~viveklane@ip-38-34-35-85.fibre.fibrestream.ca) (Read error: Connection reset by peer)
[07:42:18] *** Joins: vivekl (~viveklane@ip-38-34-35-85.fibre.fibrestream.ca)
[07:42:50] <SnoopJ> Oh, I missed a step, the result of that would be a dict mapping ints to ints
[07:42:51] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[07:43:45] * Henry151 goes to look at the documentation for collections.Counter
[07:43:54] *** Quits: Archdave (~Archdave2@071-011-134-092.res.spectrum.com) (Killed (NickServ (GHOST command used by Archdave2)))
[07:44:06] <SnoopJ> it's basically a dict that's handy for counting
[07:44:48] *** Parts: vivekl (~viveklane@ip-38-34-35-85.fibre.fibrestream.ca) ()
[07:45:16] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Remote host closed the connection)
[07:45:28] *** Joins: monkeyPlus (~monkeyPlu@2001:8a0:6cc5:7e01:c1c1:15c7:ccd5:5967)
[07:45:41] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[07:45:53] *** Joins: reticuli (~reticuli@user/reticuli)
[07:46:01] <monkeyPlus> hey. I have a list = [1,2,3]. And want to traverese it like this -(1,2)(1,3)(2,3) is there any way to do this?
[07:46:21] <monkeyPlus> im using index on lists,, but i would like to use for ..in ...
[07:47:05] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:47:26] <BrenBarn> are you asking for combinations of the items in the list?
[07:47:31] <monkeyPlus> yes
[07:47:35] <BrenBarn> there is `itertools.combinations`
[07:48:13] <SnoopJ> Henry151, okay, here's the job done in one scan of each input structure which is I think minimal: https://bpa.st/XDQA
[07:49:01] *** Quits: Elodin (~elodin@user/elodin) (Ping timeout: 256 seconds)
[07:49:15] <SnoopJ> Unless you eliminated the scan of `vendors` because it could just be stored as a single mapping and loaded once, but that's probably overthinking the problem posed :)
[07:49:18] *** Joins: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[07:49:22] *** Quits: beencubed (~beencubed@209.131.238.248) (Quit: Leaving)
[07:49:26] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[07:49:32] <monkeyPlus> ok thks dude
[07:49:33] <SnoopJ> Henry151, congratulations as well, sounds like it went well if they offered you the role :)
[07:49:55] *** Joins: beencubed (~beencubed@209.131.238.248)
[07:50:02] *** Joins: Elodin (~elodin@user/elodin)
[07:50:24] *** Joins: tWqaq (~tWqaq@240e:389:5d1c:ff00:1838:a1f2:e09b:53a2)
[07:50:37] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[07:50:40] <Henry151> SnoopJ: thanks, yes I think i got the job, I'll not know for sure until a couple days pass
[07:51:02] <Henry151> I would like to earn a living with this keyboard
[07:51:13] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[07:51:35] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[07:51:49] <Henry151> and by a  living i mean a specific amount i need, and i think i can get it with < 40hrs/week
[07:52:01] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[07:53:11] *** Joins: mcpackey (~pm0001@p5dc1ccfe.dip0.t-ipconnect.de)
[07:53:58] <Henry151> i do think i passed the basic tech interview questions.. he asked me thigns like "what's the difference between a list and a tuple" and i had eloquent responses ready to go
[07:54:17] <Henry151> thigns/things
[07:55:17] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 240 seconds)
[07:55:31] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[07:56:43] <Henry151> i think it
[07:57:43] <Henry151> 's a pretty good gig too. Looks to be ready to pay a normal salary and expect 40hrs/week, benefits, all that jazz
[07:58:17] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Remote host closed the connection)
[07:59:02] <Henry151> and if i know how computers tend to be, i'm hopeful that i can make that 40 hrs into some smaller number of actual hours
[07:59:51] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 250 seconds)
[07:59:52] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:ee49:852:ea2e:e7ce)
[08:00:37] *** Quits: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 240 seconds)
[08:00:55] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[08:02:18] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:02:31] *** Joins: Babar (~Babar@2405:4803:fccf:a720:5492:98b0:d7fa:9722)
[08:06:44] *** Joins: vivekl (~viveklane@ip-38-34-35-85.fibre.fibrestream.ca)
[08:06:55] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[08:07:02] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[08:07:13] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[08:07:19] *** Joins: pycurious (~Adium@user/pycurious)
[08:07:28] *** Quits: esv (~esv@74.124.178.154) (Quit: Leaving)
[08:07:46] *** Joins: esv (~esv@74.124.178.154)
[08:08:37] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 256 seconds)
[08:09:10] *** Quits: esv (~esv@74.124.178.154) (Client Quit)
[08:09:16] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:7940:f4d5:36de:f523)
[08:09:34] *** Joins: esv (~esv@74.124.178.154)
[08:09:36] *** Quits: esv (~esv@74.124.178.154) (Remote host closed the connection)
[08:09:59] *** Joins: esv (~esv@74.124.178.154)
[08:09:59] *** Quits: SOMBRIO (~SOMBRIO@177.137.113.71) (Ping timeout: 256 seconds)
[08:10:10] *** Quits: dtux (~dtux@c-98-207-149-218.hsd1.ca.comcast.net) (Quit: dtux)
[08:10:13] <meejah> in "cuvner", there's a command to analyze diffs against coverage data .. I'm trying to figure out what the "right thing" to do is to deal with e.g. Tox environments (or other situations where the coverage-data paths don't line up with the local checkout or similar). I mean, cuvner could just do some backwards path interpolation and try to match things up, but maybe there's a good combo of options I can
[08:10:19] <meejah> give "coverage" to make this easier? (relative_files=True doesn't really help with .tox/.../ paths here)
[08:10:42] *** Quits: MrFantastik (~f@2607:f598:bbda:270:af90:c2f0:20b5:e42e) (Ping timeout: 250 seconds)
[08:11:45] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 250 seconds)
[08:13:07] *** Quits: raym (~raym@user/raym) (Quit: kernel update, rebooting...)
[08:13:32] *** Joins: pycurious (~Adium@user/pycurious)
[08:13:32] *** Quits: pycurious (~Adium@user/pycurious) (Client Quit)
[08:13:43] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8) (Ping timeout: 250 seconds)
[08:14:15] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Read error: Connection reset by peer)
[08:14:41] <meejah> personally, my usual situation is: a virtualenv in the local checkout (or a pyenv one) with a --editable install and some .tox/ environments (typically also used in CI) so the .coverage ends up with paths burned in to e.g. .tox/py3-coverage/lib/python3.9/site-packages/...
[08:16:46] *** Joins: justJanne (kuschku@kuschku.de)
[08:17:15] *** Joins: raym (~raym@user/raym)
[08:18:46] *** Parts: justJanne (kuschku@kuschku.de) (So, if you care to find me, look to the western sky. As someone told me lately, everyone deserves a chance to fly.)
[08:18:49] *** Joins: c4017w__ (~c4017@209.52.68.8)
[08:20:06] *** vivekl is now known as vivek2
[08:20:39] *** Quits: vivek2 (~viveklane@ip-38-34-35-85.fibre.fibrestream.ca) (Quit: vivek2)
[08:21:19] *** Joins: vivekl (~viveklane@ip-38-34-35-85.fibre.fibrestream.ca)
[08:21:27] *** Quits: kiran (~kiranostr@78.40.148.178) (Quit: Toodle-oo!)
[08:21:39] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[08:21:46] *** Joins: kiran (~kiranostr@78.40.148.178)
[08:22:03] *** Quits: Linux77 (~LinuMage@186.233.179.225) (Read error: Connection reset by peer)
[08:22:27] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[08:22:57] *** Quits: Babar (~Babar@2405:4803:fccf:a720:5492:98b0:d7fa:9722) (Ping timeout: 240 seconds)
[08:23:20] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[08:25:15] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[08:25:54] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[08:26:02] *** Quits: gambl0re (~gambl0re@cpe688f2e1852a3-cm688f2e1852a0.cpe.net.cable.rogers.com) (Ping timeout: 252 seconds)
[08:26:26] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[08:26:51] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[08:27:15] *** Joins: Elodin (~elodin@user/elodin)
[08:29:04] *** Joins: Linux77 (~LinuMage@186.233.179.225)
[08:29:06] *** Quits: vivekl (~viveklane@ip-38-34-35-85.fibre.fibrestream.ca) (Read error: Connection reset by peer)
[08:29:27] *** Quits: imp (~imp@179-191-215-167.static.sumicity.net.br) (Quit: imp)
[08:29:30] *** Joins: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[08:29:33] *** Quits: SlaveGeek334269 (~SlaveGeek@gateway/vpn/pia/slavegeek334269) (Remote host closed the connection)
[08:30:11] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 250 seconds)
[08:30:57] *** Joins: ebrau (~ebrau@142.126.175.200)
[08:31:19] *** Quits: ebrau (~ebrau@142.126.175.200) (Client Quit)
[08:33:54] *** Joins: SlaveGeek334269 (~SlaveGeek@gateway/vpn/pia/slavegeek334269)
[08:33:57] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[08:33:57] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[08:35:39] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[08:35:56] *** Quits: monkeyPlus (~monkeyPlu@2001:8a0:6cc5:7e01:c1c1:15c7:ccd5:5967) (Quit: monkeyPlus)
[08:37:36] *** Joins: matsaman (~matsaman@user/matsaman)
[08:38:32] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 256 seconds)
[08:39:23] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[08:40:00] *** Joins: analoq (~yashi@user/dies)
[08:40:20] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[08:40:47] *** Joins: deniska (~deniska@user/deniska)
[08:42:25] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[08:43:09] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[08:44:26] *** Quits: Sheilong (uid293653@ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[08:46:44] *** Joins: audio (~audio@user/audio)
[08:46:59] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[08:50:03] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[08:50:07] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 250 seconds)
[08:50:57] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 240 seconds)
[08:51:42] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[08:54:03] *** Quits: ominionx (~ominionx@172.58.136.5) (Remote host closed the connection)
[08:55:51] *** Joins: zaquest (~notzaques@5.130.79.72)
[08:56:33] *** Joins: frost (~frost@user/frost)
[08:57:19] *** Joins: Babar (~Babar@2405:4803:fccf:a720:5492:98b0:d7fa:9722)
[08:59:42] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:00:59] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 256 seconds)
[09:02:40] *** Quits: audio (~audio@user/audio) (Quit: Client closed)
[09:03:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[09:04:00] *** Quits: bluedust (~bluedust@117.222.188.38) (Remote host closed the connection)
[09:05:02] *** Quits: adiKt (uid472628@tinside.irccloud.com) (Quit: Connection closed for inactivity)
[09:05:18] *** Quits: auk (auk@gateway/vpn/protonvpn/auk) (Quit: Leaving)
[09:06:10] *** Joins: ss4 (~wootehfoo@user/wootehfoot)
[09:08:10] *** Joins: hams (~hams@c-73-255-22-88.hsd1.tx.comcast.net)
[09:08:10] *** Quits: hams (~hams@c-73-255-22-88.hsd1.tx.comcast.net) (Changing host)
[09:08:10] *** Joins: hams (~hams@user/hams)
[09:08:21] *** Quits: transhumanist (~steven@2601:196:8800:35f0:4f97:7b0:1537:de5b) (Quit: Leaving.)
[09:08:23] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:08:35] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 256 seconds)
[09:08:35] *** Joins: zamanf (~dev@213.133.91.246)
[09:08:35] *** Quits: zamanf (~dev@213.133.91.246) (Changing host)
[09:08:35] *** Joins: zamanf (~dev@user/zamanf)
[09:12:36] *** Joins: audio (~audio@user/audio)
[09:12:57] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[09:16:17] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[09:17:36] *** Joins: vivekl (~viveklane@ip-38-34-35-85.fibre.fibrestream.ca)
[09:18:12] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[09:18:15] *** Quits: emf (~emf@2620:10d:c090:400::5:b0fe) (Read error: Connection reset by peer)
[09:18:43] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[09:19:18] *** Joins: c4017w_ (~c4017@209.52.68.8)
[09:20:17] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 240 seconds)
[09:20:32] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[09:22:05] *** Quits: _ev (ev@user/ev/x-8999918) (Quit: Leaving.)
[09:22:17] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 240 seconds)
[09:23:05] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[09:23:52] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-d101-c13b-d21b-fd51.res6.spectrum.com)
[09:25:11] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[09:26:29] *** Quits: audio (~audio@user/audio) (Ping timeout: 256 seconds)
[09:30:49] *** Joins: stranac (~stranac@195.29.239.126)
[09:31:06] *** Quits: \mSg (mSg@user/msg/x-0285936) (Read error: Connection reset by peer)
[09:31:21] *** Joins: bluedust (~bluedust@117.222.188.38)
[09:31:42] *** Joins: kts (~kts@103.73.237.94)
[09:32:22] *** Joins: \mSg (mSg@user/msg/x-0285936)
[09:32:22] *** Quits: bluedust (~bluedust@117.222.188.38) (Read error: Connection reset by peer)
[09:32:28] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[09:32:48] *** Quits: Bakunin (~maplefing@user/lindis) (Remote host closed the connection)
[09:32:52] *** Joins: bluedust (~bluedust@103.160.194.110)
[09:33:17] *** Joins: djapo (~archangel@user/djapo)
[09:34:05] *** Quits: Guest2819 (~lastshell@user/lastshell) (Ping timeout: 256 seconds)
[09:34:54] *** Joins: Guest2819 (~lastshell@user/lastshell)
[09:36:04] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:117c:703e:db5f:c029) (Ping timeout: 250 seconds)
[09:39:11] <llanhmod>  
[09:39:45] *** Quits: asix (~Anders@user/asix) (Ping timeout: 256 seconds)
[09:39:55] *** Joins: manti7 (~manti7@176.10.104.94)
[09:40:15] *** Quits: stranac (~stranac@195.29.239.126) (Quit: Leaving)
[09:41:30] *** Joins: tim__ (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[09:42:21] *** Quits: SirScott (~SirScott@c-67-176-100-163.hsd1.co.comcast.net) (Ping timeout: 256 seconds)
[09:43:25] *** Quits: reticuli (~reticuli@user/reticuli) (Ping timeout: 250 seconds)
[09:43:36] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[09:43:49] *** Joins: upsala (~zcb@185.213.155.232)
[09:43:50] *** Joins: rvalue (~rvalue@user/rvalue)
[09:44:51] *** Quits: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (Ping timeout: 256 seconds)
[09:47:47] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[09:49:22] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[09:49:53] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[09:50:32] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[09:51:21] *** Quits: CoolerX (~CoolerX@user/coolerx) (Quit: Leaving)
[09:51:32] *** Joins: Shamasu (~Shamasu@69-209-102-87.lightspeed.sntcca.sbcglobal.net)
[09:53:17] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 240 seconds)
[09:53:45] *** Joins: jpodivin (~jpodivin@cgnat44-pool3-68-117.poda.cz)
[09:54:12] *** Joins: gitesh (uid423739@ilkley.irccloud.com)
[09:54:15] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[09:54:37] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 240 seconds)
[09:54:42] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[09:54:54] <matsaman> llanhmod: too true
[09:55:15] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[09:55:50] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:57:05] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 256 seconds)
[09:57:27] *** Joins: SirScott (~SirScott@c-67-176-100-163.hsd1.co.comcast.net)
[09:58:39] *** Joins: ominionx (~ominionx@172.58.136.5)
[09:59:10] *** Quits: rvalue (~rvalue@user/rvalue) (Remote host closed the connection)
[09:59:22] *** Joins: rvalue (~rvalue@user/rvalue)
[10:01:23] *** Quits: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[10:01:46] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:7940:f4d5:36de:f523) (Read error: Connection reset by peer)
[10:02:43] *** Joins: EgonX (~EgonX@c-73-115-70-244.hsd1.tx.comcast.net)
[10:04:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[10:04:44] *** Quits: Babar (~Babar@2405:4803:fccf:a720:5492:98b0:d7fa:9722) (Read error: Connection reset by peer)
[10:04:59] *** Joins: masoudd (~masoudd@user/masoudd)
[10:05:08] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[10:05:18] *** Joins: han-solo (~hanish@user/han-solo)
[10:06:13] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[10:08:41] *** Quits: hams (~hams@user/hams) (Read error: Connection reset by peer)
[10:08:42] *** Joins: asix (~Anders@user/asix)
[10:08:54] *** Joins: rememberYou (~someone@user/rememberyou)
[10:10:43] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8)
[10:10:47] *** Joins: resmo (~resmo@143-48-239-77.dyn.cable.fcom.ch)
[10:12:13] *** Quits: lowfi (~lowfi@user/lowfi) (Quit: Leaving)
[10:14:00] *** Joins: AlanMD_ (~AlanMD@5-12-8-203.residential.rdsnet.ro)
[10:14:53] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Ping timeout: 256 seconds)
[10:15:17] *** Quits: zamanf (~dev@user/zamanf) (Ping timeout: 240 seconds)
[10:18:38] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:18:51] *** Joins: fsoc (~shynerd@bison.alphaw0lf.xyz)
[10:19:49] *** Joins: c4017w__ (~c4017@209.52.68.8)
[10:19:57] * sdfgsdfg nods
[10:21:22] <fsoc> I'm curious how Flask's `app` decorator calls `route` inside. Is that an internal function? How can we implement something like that? I tried to call it inside like https://cdx.t0xic.xyz/bin?id=71b78bb280900d1db3d48c2091e4f5a0a1a65b4c but it fails, probably because we're not passing the required argument, but not sure.
[10:22:13] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[10:22:15] *** Joins: hams (~hams@73.232.205.0)
[10:22:15] *** Quits: hams (~hams@73.232.205.0) (Changing host)
[10:22:15] *** Joins: hams (~hams@user/hams)
[10:22:39] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[10:23:02] *** Joins: hamms (~hams@2607:fb90:5d09:ca3a:f1ed:3fa1:8e96:18c7)
[10:23:29] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[10:23:57] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[10:23:58] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[10:24:18] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:25:56] *** Quits: vivekl (~viveklane@ip-38-34-35-85.fibre.fibrestream.ca) (Quit: Restarting)
[10:26:37] *** Quits: hams (~hams@user/hams) (Ping timeout: 240 seconds)
[10:26:55] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Client Quit)
[10:27:00] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[10:27:10] *** Joins: vivekl (~viveklane@ip-38-34-35-85.fibre.fibrestream.ca)
[10:28:13] *** Quits: Shamasu (~Shamasu@69-209-102-87.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[10:28:35] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 256 seconds)
[10:30:40] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[10:30:49] *** Joins: bluedust_ (~bluedust@117.222.188.38)
[10:30:58] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:31:08] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[10:31:22] *** Joins: de-facto (~de-facto@user/de-facto)
[10:31:59] *** Quits: maxzor__ (~maxzor@abordeaux-652-1-2-77.w90-16.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[10:33:20] <jinsun__> fsoc: app is not the decorator, it is just an instance of Flask class, .route is a method in the class which takes a string and returns a decorator
[10:33:25] *** Joins: Nigma (~magnus@87.61.126.226)
[10:33:57] *** Quits: bluedust (~bluedust@103.160.194.110) (Ping timeout: 240 seconds)
[10:37:17] *** Quits: parv (~quass@user/parv) (Ping timeout: 240 seconds)
[10:37:39] *** Quits: maxzor (~maxzor@2a01cb04054faa005845757de706397d.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[10:37:56] <fsoc> jinsun__: ah, i see. thanks.
[10:39:19] <jinsun__> fsoc: here, a simple example of the way it is done https://bpa.st/EGHA
[10:40:25] *** Quits: bn_work (uid268505@id-268505.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[10:40:27] *** Joins: ekathva (~ekathva@2001:999:51:be01:2c4a:6b25:b5d5:f2c9)
[10:41:02] *** Quits: ekathva (~ekathva@2001:999:51:be01:2c4a:6b25:b5d5:f2c9) (Max SendQ exceeded)
[10:41:23] *** Joins: ekathva (~ekathva@2001:999:51:be01:2c4a:6b25:b5d5:f2c9)
[10:42:19] <fsoc> jinsun__: that makes sense. thanks!
[10:42:32] *** Joins: parv (~quass@user/parv)
[10:43:38] <matsaman> anybody do pyweek?
[10:46:41] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[10:48:18] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 276 seconds)
[10:48:53] *** Joins: CombatVet (~c4@user/combatvet)
[10:49:02] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[10:49:02] *** Quits: dld (~davidlowr@2601:197:600:1210:942a:4683:ce04:8328) (Ping timeout: 252 seconds)
[10:51:15] *** Joins: dld (~davidlowr@73.61.8.20)
[10:51:41] *** Joins: Csm319_ (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[10:51:43] *** Quits: vivekl (~viveklane@ip-38-34-35-85.fibre.fibrestream.ca) (Read error: Connection reset by peer)
[10:51:47] *** Joins: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:2d8d:81bc:85e6:c719)
[10:53:08] *** Joins: gusto (~Augustus@109.255.100.54)
[10:53:13] *** Joins: vivekl (~viveklane@ip-38-34-35-85.fibre.fibrestream.ca)
[10:54:10] *** Joins: pro_z_ (~pro_z@37.214.55.61)
[10:54:42] *** Quits: vivekl (~viveklane@ip-38-34-35-85.fibre.fibrestream.ca) (Read error: Connection reset by peer)
[10:54:55] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:55:39] *** Joins: vivekl (~viveklane@ip-38-34-35-85.fibre.fibrestream.ca)
[10:55:52] *** Quits: kinabalu (~kinabalu@about/java/kinabalu) (*.net *.split)
[10:55:52] *** Quits: vince (~vince@75.127.14.76) (*.net *.split)
[10:55:52] *** Quits: Boarders_ (sid425905@id-425905.lymington.irccloud.com) (*.net *.split)
[10:55:52] *** Quits: ThothCastel (sid78195@id-78195.tinside.irccloud.com) (*.net *.split)
[10:55:52] *** Quits: lericson (~lericson@user/lericson) (*.net *.split)
[10:55:52] *** Quits: d1rewolf (sid312924@id-312924.helmsley.irccloud.com) (*.net *.split)
[10:55:52] *** Quits: Evolver (sid32215@user/evolver) (*.net *.split)
[10:55:52] *** Quits: hogarius (hogarius@id-222644.uxbridge.irccloud.com) (*.net *.split)
[10:55:52] *** Quits: bjs (sid190364@user/bjs) (*.net *.split)
[10:55:52] *** Quits: eichin (sid27120@id-27120.tinside.irccloud.com) (*.net *.split)
[10:55:52] *** Quits: jessicara (~shirogits@user/jessicara) (*.net *.split)
[10:55:52] *** Quits: Strom (~strom@fedora/strom) (*.net *.split)
[10:55:52] *** Quits: whatsupdoc (uid509081@hampstead.irccloud.com) (*.net *.split)
[10:55:52] *** Quits: jiggawatt (~jiggawatt@runs.on.ubuntu.crapping.cricket) (*.net *.split)
[10:55:52] *** Quits: Betal (~Betal@user/betal) (*.net *.split)
[10:55:52] *** Quits: kurfen_ (~kurfen@213.152.188.7) (*.net *.split)
[10:55:52] *** Quits: snalty_ (~Shhh@user/snalty) (*.net *.split)
[10:55:52] *** Quits: michele (~eraser@user/michele) (*.net *.split)
[10:55:52] *** Quits: lxdr (~lxdr@user/lxdr) (*.net *.split)
[10:55:52] *** Quits: bloody (~bloody@user/bloody) (*.net *.split)
[10:55:52] *** Quits: cheater (~Username@user/cheater) (*.net *.split)
[10:55:52] *** Quits: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net) (*.net *.split)
[10:55:52] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (*.net *.split)
[10:55:52] *** Quits: kickingvegas (~cchoi@c-67-170-234-150.hsd1.ca.comcast.net) (*.net *.split)
[10:55:52] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (*.net *.split)
[10:55:52] *** Quits: MootPoot (uid444585@ilkley.irccloud.com) (*.net *.split)
[10:55:52] *** Quits: koopman (sid466269@ilkley.irccloud.com) (*.net *.split)
[10:55:52] *** Quits: angular_mike_ (sid45533@ilkley.irccloud.com) (*.net *.split)
[10:55:52] *** Quits: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com) (*.net *.split)
[10:55:52] *** Quits: OPK (~OPK@user/opk) (*.net *.split)
[10:55:52] *** Quits: goepsilongo (~goepsilon@cpe-74-73-86-74.nyc.res.rr.com) (*.net *.split)
[10:55:52] *** Quits: humbertowoody (~humbertow@187.202.198.64) (*.net *.split)
[10:55:52] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (*.net *.split)
[10:55:52] *** Quits: Lunatrius (~Lunatrius@77.38.76.5) (*.net *.split)
[10:55:52] *** Quits: nickel8448 (~rahulwadh@147.80.76.34.bc.googleusercontent.com) (*.net *.split)
[10:55:52] *** Quits: tomg (~tomg@user/tomg) (*.net *.split)
[10:55:52] *** Quits: sale (~sale@ypocit.initech.link) (*.net *.split)
[10:55:52] *** Quits: Xat` (~Xat`@ns300217.ip-91-121-29.eu) (*.net *.split)
[10:55:52] *** Quits: justyb11 (~justyb@64.253.212.72) (*.net *.split)
[10:55:52] *** Quits: kaivai_ (~kaivai@user/kaivai) (*.net *.split)
[10:55:52] *** Quits: pabed (~Thunderbi@89.37.15.34) (*.net *.split)
[10:55:52] *** Quits: zaz\ (~zaz@poneybl.eu) (*.net *.split)
[10:55:52] *** Quits: moto (~moto@user/moto) (*.net *.split)
[10:55:52] *** Quits: Trashlord (~trash@user/trashlord) (*.net *.split)
[10:55:52] *** Quits: Viewday11 (~Viewday@61.141.126.127) (*.net *.split)
[10:55:52] *** Quits: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com) (*.net *.split)
[10:55:52] *** Quits: Juhaz (~juhaz@hilla.kapsi.fi) (*.net *.split)
[10:55:52] *** Quits: gnoirzox (~gnoirzox@178.170.103.136) (*.net *.split)
[10:55:52] *** Quits: mossman93 (~quassel@user/mossman93) (*.net *.split)
[10:55:52] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (*.net *.split)
[10:55:52] *** Quits: fikran (~fikran@user/fikran) (*.net *.split)
[10:55:52] *** Quits: ttys000 (~ttys000@user/ttys000) (*.net *.split)
[10:55:52] *** Quits: synic (~squish@li74-118.members.linode.com) (*.net *.split)
[10:55:52] *** Quits: KombuchaKip (~kip@192.252.230.5) (*.net *.split)
[10:55:52] *** Quits: sleepingforest (~sleepingf@pool-96-235-63-235.pitbpa.east.verizon.net) (*.net *.split)
[10:55:52] *** Quits: waynew (~wayne@user/waynew) (*.net *.split)
[10:55:52] *** Quits: hyiltiz (~quassel@31.220.5.250) (*.net *.split)
[10:55:52] *** Quits: Phase (~phase@user/phase) (*.net *.split)
[10:55:52] *** Quits: launchd (~launchd@bitbot/launchd) (*.net *.split)
[10:55:52] *** Quits: astiak (~astiak@ownage.biz) (*.net *.split)
[10:55:52] *** Quits: sokan (~sokan@85.73.227.251) (*.net *.split)
[10:55:52] *** Quits: w0rp (~w0rp@w0rp.com) (*.net *.split)
[10:55:52] *** Quits: agireud (~agireud@user/agireud) (*.net *.split)
[10:55:52] *** Quits: RiFo (~RiFo@user/rifo) (*.net *.split)
[10:55:52] *** Quits: dude-x_ (~textual@72.76.74.165) (*.net *.split)
[10:55:52] *** Quits: Roedy (Roedy@user/roedy) (*.net *.split)
[10:55:52] *** Quits: seabre (~seabre@user/seabre) (*.net *.split)
[10:55:52] *** Quits: treefrob (~treefrob@p57a96ba4.dip0.t-ipconnect.de) (*.net *.split)
[10:55:52] *** Quits: rwbrambler (~Thunderbi@65.183.138.202) (*.net *.split)
[10:55:52] *** Quits: towel (~towel@user/towel) (*.net *.split)
[10:55:52] *** Quits: onur (~onur@user/onur) (*.net *.split)
[10:55:52] *** Quits: Duckle (~Duckle@user/duckle) (*.net *.split)
[10:55:52] *** Quits: Leonarbro (~Leonet@user/leonarbro) (*.net *.split)
[10:55:52] *** Quits: WayToDoor (~WayToDoor@user/waytodoor) (*.net *.split)
[10:55:52] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (*.net *.split)
[10:55:52] *** Quits: erry (~erry@errietta.me) (*.net *.split)
[10:55:52] *** Quits: infernix (~nix@spirit.infernix.net) (*.net *.split)
[10:55:52] *** Quits: axisys (~axisys@ec2-52-207-123-244.compute-1.amazonaws.com) (*.net *.split)
[10:55:52] *** Quits: MrC (~Ben@mrbenc.net) (*.net *.split)
[10:55:52] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (*.net *.split)
[10:55:52] *** Quits: libussa (~libussa@libussa.net) (*.net *.split)
[10:55:52] *** Quits: georgeisbot (~georgeisb@8.12.22.9) (*.net *.split)
[10:55:52] *** Quits: vbgunz (~vbgunz@35.141.71.47) (*.net *.split)
[10:55:52] *** Quits: SlicerDicer68 (~SlicerDic@107-208-180-225.lightspeed.mdsnwi.sbcglobal.net) (*.net *.split)
[10:55:52] *** Quits: samuelbernardo (~samuelber@nata01.lip.pt) (*.net *.split)
[10:55:52] *** Quits: iob (~iob@nat1.prg.suse.com) (*.net *.split)
[10:55:52] *** Quits: cursey (~cursey@user/cursey) (*.net *.split)
[10:55:52] *** Quits: mawk (~mawk@wireguard/contributor/mawk) (*.net *.split)
[10:55:52] *** Quits: Nnnavd (~Nnavd@ec2-34-220-224-214.us-west-2.compute.amazonaws.com) (*.net *.split)
[10:55:52] *** Quits: Joel (~jjshoe@user/joel) (*.net *.split)
[10:55:52] *** Quits: crunchy_david (~david@pgguru.net) (*.net *.split)
[10:55:52] *** Quits: Mogget (~Mogget@vogon02.moshwire.com) (*.net *.split)
[10:55:52] *** Quits: tpr (~tpr@user/tpr) (*.net *.split)
[10:55:52] *** Quits: Pici (~bnrubin@li1014-36.members.linode.com) (*.net *.split)
[10:55:52] *** Quits: ghormoon (~ghormoon@ghorland.net) (*.net *.split)
[10:55:52] *** Quits: swistak (~swistak@185.21.216.141) (*.net *.split)
[10:55:52] *** Quits: lumgwada (~lumgwada@user/lumgwada) (*.net *.split)
[10:55:52] *** Quits: kuahara (kuahara@072-182-135-032.res.spectrum.com) (*.net *.split)
[10:55:52] *** Quits: Dotz0cat (~Dotz0cat@h55.84.187.173.dynamic.ip.windstream.net) (*.net *.split)
[10:55:52] *** Quits: wilk (~wilk@user/wilk) (*.net *.split)
[10:55:52] *** Quits: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com) (*.net *.split)
[10:55:52] *** Quits: reset (~reset@user/reset) (*.net *.split)
[10:55:52] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (*.net *.split)
[10:55:52] *** Quits: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net) (*.net *.split)
[10:55:52] *** Quits: dskull (~dskull@user/dskull) (*.net *.split)
[10:55:52] *** Quits: brentaarnold (~brentaarn@24.112.58.14) (*.net *.split)
[10:55:52] *** Quits: kcrk (~kcrk@user/kcrk) (*.net *.split)
[10:55:52] *** Quits: martums5 (~martums@user/martums) (*.net *.split)
[10:55:52] *** Quits: fbiagent (~fbiagent@user/fbiagent) (*.net *.split)
[10:55:52] *** Quits: lifefir31 (~lifefir3@152.37.120.101) (*.net *.split)
[10:55:52] *** Quits: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com) (*.net *.split)
[10:55:52] *** Quits: justGhost (~justache@user/justache) (*.net *.split)
[10:55:52] *** Quits: mmalter (~mmalter@88.126.10.237) (*.net *.split)
[10:55:52] *** Quits: jjasghar (~jjasghar@idlerpg/player/jjasghar) (*.net *.split)
[10:55:52] *** Quits: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt) (*.net *.split)
[10:55:52] *** Quits: voidcat (~voidcat@user/voidcat) (*.net *.split)
[10:55:52] *** Quits: mcglk (~mcglk@131.191.49.120) (*.net *.split)
[10:55:52] *** Quits: Kraus (~quassel@075-141-246-250.res.spectrum.com) (*.net *.split)
[10:55:52] *** Quits: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (*.net *.split)
[10:55:52] *** Quits: arooni (~arooni@li1062-244.members.linode.com) (*.net *.split)
[10:55:52] *** Quits: gerty (~gerty@user/gerty) (*.net *.split)
[10:55:52] *** Quits: Forkk (~forkk@li926-228.members.linode.com) (*.net *.split)
[10:55:52] *** Quits: sunyour (~sunyour@129.226.182.99) (*.net *.split)
[10:55:52] *** Quits: DXR (~lyrical@194.219.251.132) (*.net *.split)
[10:55:52] *** Quits: ThomasJ (~ThomasJ@user/thomasj) (*.net *.split)
[10:55:52] *** Quits: dodo (~dodo@user/dodo) (*.net *.split)
[10:55:52] *** Quits: Tomassi-1 (~Tomassi-1@ec2-16-170-233-250.eu-north-1.compute.amazonaws.com) (*.net *.split)
[10:55:52] *** Quits: coc0nut (~coc0nut@user/coc0nut) (*.net *.split)
[10:55:52] *** Quits: Neopolitan (~tn5421@45.76.61.24) (*.net *.split)
[10:55:52] *** Quits: Dan39 (~dan@user/dan39) (*.net *.split)
[10:55:52] *** Quits: cryocaustik7 (~cryocaust@user/cryocaustik) (*.net *.split)
[10:55:52] *** Quits: purplex (~purplex@user/purplex) (*.net *.split)
[10:55:52] *** Quits: greatgatsby__ (~greatgats@bras-base-toroon0411w-grc-52-142-114-106-7.dsl.bell.ca) (*.net *.split)
[10:55:52] *** Quits: scoobydoo (~scooby@user/scoobydoo) (*.net *.split)
[10:55:52] *** Quits: HvszrStykp (~X@81.171.62.84) (*.net *.split)
[10:55:52] *** Quits: naari (~naari@user/naari) (*.net *.split)
[10:55:52] *** Quits: xakan (~xakan@pnmx.zdx.fr) (*.net *.split)
[10:55:52] *** Quits: mage (~julien@orval.bbpf.belspo.be) (*.net *.split)
[10:55:52] *** Quits: kungp (~kungp@h-46-59-2-200.A230.priv.bahnhof.se) (*.net *.split)
[10:55:52] *** Quits: jiffe (~jiffe@47-220-182-140.gtwncmkt04.res.dyn.suddenlink.net) (*.net *.split)
[10:55:52] *** Quits: ethoxy (~root@bison.alphaw0lf.xyz) (*.net *.split)
[10:55:52] *** Quits: _val_ (~valentin@82-169-14-137.biz.kpn.net) (*.net *.split)
[10:55:52] *** Quits: queue- (~nerd@user/queue/x-7267619) (*.net *.split)
[10:55:52] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (*.net *.split)
[10:55:52] *** Quits: Melon_Bread (~Melon_Bre@li958-238.members.linode.com) (*.net *.split)
[10:55:52] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (*.net *.split)
[10:55:52] *** Quits: pr3d4t0r (~zhenya01@user/pr3d4t0r) (*.net *.split)
[10:55:52] *** Quits: DesolateHypertex (~DesolateH@static.213-133-103-49.clients.your-server.de) (*.net *.split)
[10:55:52] *** Quits: dminuoso (~dminuoso@user/dminuoso) (*.net *.split)
[10:55:52] *** Quits: Spydar007 (~spydar007@user/spydar007) (*.net *.split)
[10:55:52] *** Quits: simplicity (~yti@user/simplicity) (*.net *.split)
[10:55:52] *** Quits: nigelb (~nigel@zeus.nigelb.me) (*.net *.split)
[10:55:52] *** Quits: gjvc (~gjvc@user/gjvc) (*.net *.split)
[10:55:52] *** Quits: ecool (~ecool@ecool.dev) (*.net *.split)
[10:55:52] *** Quits: lidless (~lidless@user/lidless) (*.net *.split)
[10:55:52] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (*.net *.split)
[10:55:52] *** Quits: n1000 (~n1000@user/n1000) (*.net *.split)
[10:55:52] *** Quits: aoeixsz4 (~aoei@nethackscoreboard/aoei) (*.net *.split)
[10:55:52] *** Quits: Helle (~helle@45.83.235.185) (*.net *.split)
[10:55:52] *** Quits: meejah (~meejah@rutas.meejah.ca) (*.net *.split)
[10:55:52] *** Quits: dlam (~dlam@dlam.me) (*.net *.split)
[10:55:52] *** Quits: potatosal (~salad@user/potatosal) (*.net *.split)
[10:55:52] *** Quits: hrm (~hrm@nimbus.harmtemolder.nl) (*.net *.split)
[10:55:52] *** Quits: kolcon (~kolcon@v.kolouch.org) (*.net *.split)
[10:55:52] *** Quits: NOTevil (~notevil@user/notevil) (*.net *.split)
[10:55:52] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (*.net *.split)
[10:55:52] *** Quits: peanuter_ (~peanuter@static.190.220.201.138.clients.your-server.de) (*.net *.split)
[10:55:52] *** Quits: streety (~streety@li761-24.members.linode.com) (*.net *.split)
[10:55:52] *** Quits: achilleas (~ach@user/achilleas) (*.net *.split)
[10:55:52] *** Quits: ntdll_ (~ntdll@shion.saiban.me) (*.net *.split)
[10:55:52] *** Quits: Dantali0n (~Dantali0n@251-228-138-45.connected.by.freedominter.net) (*.net *.split)
[10:55:52] *** Quits: ldericher (~LDer@pantalaimon.yavook.de) (*.net *.split)
[10:55:52] *** Quits: lantech19446 (~lantech19@144.202.10.138) (*.net *.split)
[10:55:52] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (*.net *.split)
[10:55:52] *** Quits: AnimalFarmPig (~quassel@user/animalfarmpig) (*.net *.split)
[10:55:53] *** Quits: han-` (~han`@user/han-/x-0887595) (*.net *.split)
[10:55:53] *** Quits: tinystoat (~squeek@user/tinystoat) (*.net *.split)
[10:55:53] *** Quits: nickodd (~nickodd@user/nickodd) (*.net *.split)
[10:55:53] *** Quits: Nei (~ailin@openSUSE/member/ailin-nemui) (*.net *.split)
[10:56:01] *** Joins: rsx (~dummy@ppp-188-174-147-214.dynamic.mnet-online.de)
[10:56:31] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[10:57:35] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Quit: Leaving)
[10:58:05] *** Joins: Strom (~strom@fedora/strom)
[10:58:05] *** Joins: whatsupdoc (uid509081@hampstead.irccloud.com)
[10:58:05] *** Joins: jiggawatt (~jiggawatt@runs.on.ubuntu.crapping.cricket)
[10:58:05] *** Joins: Betal (~Betal@user/betal)
[10:58:05] *** Joins: kurfen_ (~kurfen@213.152.188.7)
[10:58:05] *** Joins: snalty_ (~Shhh@user/snalty)
[10:58:05] *** Joins: michele (~eraser@user/michele)
[10:58:05] *** Joins: lxdr (~lxdr@user/lxdr)
[10:58:05] *** Joins: bloody (~bloody@user/bloody)
[10:58:05] *** Joins: cheater (~Username@user/cheater)
[10:58:05] *** Joins: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net)
[10:58:05] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[10:58:05] *** Joins: kickingvegas (~cchoi@c-67-170-234-150.hsd1.ca.comcast.net)
[10:58:05] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[10:58:05] *** Joins: MootPoot (uid444585@ilkley.irccloud.com)
[10:58:05] *** Joins: angular_mike_ (sid45533@ilkley.irccloud.com)
[10:58:05] *** Joins: koopman (sid466269@ilkley.irccloud.com)
[10:58:05] *** Joins: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com)
[10:58:05] *** Joins: OPK (~OPK@user/opk)
[10:58:05] *** Joins: goepsilongo (~goepsilon@cpe-74-73-86-74.nyc.res.rr.com)
[10:58:05] *** Joins: humbertowoody (~humbertow@187.202.198.64)
[10:58:05] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[10:58:05] *** Joins: Lunatrius (~Lunatrius@77.38.76.5)
[10:58:05] *** Joins: nickel8448 (~rahulwadh@147.80.76.34.bc.googleusercontent.com)
[10:58:05] *** Joins: tomg (~tomg@user/tomg)
[10:58:05] *** Joins: sale (~sale@ypocit.initech.link)
[10:58:05] *** Joins: Xat` (~Xat`@ns300217.ip-91-121-29.eu)
[10:58:05] *** Joins: justyb11 (~justyb@64.253.212.72)
[10:58:05] *** Joins: kaivai_ (~kaivai@user/kaivai)
[10:58:05] *** Joins: pabed (~Thunderbi@89.37.15.34)
[10:58:05] *** Joins: zaz\ (~zaz@poneybl.eu)
[10:58:05] *** Joins: tinystoat (~squeek@user/tinystoat)
[10:58:05] *** Joins: moto (~moto@user/moto)
[10:58:05] *** Joins: Trashlord (~trash@user/trashlord)
[10:58:05] *** Joins: Viewday11 (~Viewday@61.141.126.127)
[10:58:05] *** Joins: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com)
[10:58:05] *** Joins: Juhaz (~juhaz@hilla.kapsi.fi)
[10:58:05] *** Joins: gnoirzox (~gnoirzox@178.170.103.136)
[10:58:05] *** Joins: mossman93 (~quassel@user/mossman93)
[10:58:05] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[10:58:05] *** Joins: fikran (~fikran@user/fikran)
[10:58:05] *** Joins: ttys000 (~ttys000@user/ttys000)
[10:58:05] *** Joins: synic (~squish@li74-118.members.linode.com)
[10:58:05] *** Joins: KombuchaKip (~kip@192.252.230.5)
[10:58:05] *** Joins: sleepingforest (~sleepingf@pool-96-235-63-235.pitbpa.east.verizon.net)
[10:58:05] *** Joins: waynew (~wayne@user/waynew)
[10:58:05] *** Joins: hyiltiz (~quassel@31.220.5.250)
[10:58:05] *** Joins: Phase (~phase@user/phase)
[10:58:05] *** Joins: launchd (~launchd@bitbot/launchd)
[10:58:05] *** Joins: astiak (~astiak@ownage.biz)
[10:58:05] *** Joins: sokan (~sokan@85.73.227.251)
[10:58:05] *** Joins: w0rp (~w0rp@w0rp.com)
[10:58:05] *** Joins: agireud (~agireud@user/agireud)
[10:58:05] *** Joins: RiFo (~RiFo@user/rifo)
[10:58:05] *** Joins: dude-x_ (~textual@72.76.74.165)
[10:58:05] *** Joins: Roedy (Roedy@user/roedy)
[10:58:05] *** Joins: seabre (~seabre@user/seabre)
[10:58:05] *** Joins: treefrob (~treefrob@p57a96ba4.dip0.t-ipconnect.de)
[10:58:05] *** Joins: rwbrambler (~Thunderbi@65.183.138.202)
[10:58:05] *** Joins: towel (~towel@user/towel)
[10:58:05] *** Joins: onur (~onur@user/onur)
[10:58:05] *** Joins: Duckle (~Duckle@user/duckle)
[10:58:05] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[10:58:05] *** Joins: WayToDoor (~WayToDoor@user/waytodoor)
[10:58:05] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[10:58:05] *** Joins: erry (~erry@errietta.me)
[10:58:05] *** Joins: infernix (~nix@spirit.infernix.net)
[10:58:05] *** Joins: axisys (~axisys@ec2-52-207-123-244.compute-1.amazonaws.com)
[10:58:05] *** Joins: MrC (~Ben@mrbenc.net)
[10:58:05] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[10:58:05] *** Joins: libussa (~libussa@libussa.net)
[10:58:05] *** Joins: georgeisbot (~georgeisb@8.12.22.9)
[10:58:05] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[10:58:05] *** Joins: SlicerDicer68 (~SlicerDic@107-208-180-225.lightspeed.mdsnwi.sbcglobal.net)
[10:58:05] *** Joins: samuelbernardo (~samuelber@nata01.lip.pt)
[10:58:05] *** Joins: iob (~iob@nat1.prg.suse.com)
[10:58:05] *** Joins: cursey (~cursey@user/cursey)
[10:58:05] *** Joins: mawk (~mawk@wireguard/contributor/mawk)
[10:58:05] *** Joins: Nnnavd (~Nnavd@ec2-34-220-224-214.us-west-2.compute.amazonaws.com)
[10:58:05] *** Joins: Joel (~jjshoe@user/joel)
[10:58:05] *** Joins: crunchy_david (~david@pgguru.net)
[10:58:05] *** Joins: Mogget (~Mogget@vogon02.moshwire.com)
[10:58:05] *** Joins: tpr (~tpr@user/tpr)
[10:58:05] *** Joins: Pici (~bnrubin@li1014-36.members.linode.com)
[10:58:05] *** Joins: ghormoon (~ghormoon@ghorland.net)
[10:58:05] *** Joins: swistak (~swistak@185.21.216.141)
[10:58:05] *** Joins: lumgwada (~lumgwada@user/lumgwada)
[10:58:05] *** Joins: kuahara (kuahara@072-182-135-032.res.spectrum.com)
[10:58:05] *** Joins: Dotz0cat (~Dotz0cat@h55.84.187.173.dynamic.ip.windstream.net)
[10:58:05] *** Joins: wilk (~wilk@user/wilk)
[10:58:05] *** Joins: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com)
[10:58:05] *** Joins: reset (~reset@user/reset)
[10:58:05] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[10:58:05] *** Joins: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net)
[10:58:05] *** Joins: dskull (~dskull@user/dskull)
[10:58:05] *** Joins: brentaarnold (~brentaarn@24.112.58.14)
[10:58:05] *** Joins: martums5 (~martums@user/martums)
[10:58:05] *** Joins: kcrk (~kcrk@user/kcrk)
[10:58:05] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[10:58:05] *** Joins: lifefir31 (~lifefir3@152.37.120.101)
[10:58:05] *** Joins: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com)
[10:58:05] *** Joins: justGhost (~justache@user/justache)
[10:58:05] *** Joins: HvszrStykp (~X@81.171.62.84)
[10:58:05] *** Joins: mmalter (~mmalter@88.126.10.237)
[10:58:05] *** Joins: jjasghar (~jjasghar@idlerpg/player/jjasghar)
[10:58:05] *** Joins: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt)
[10:58:05] *** Joins: voidcat (~voidcat@user/voidcat)
[10:58:05] *** Joins: mcglk (~mcglk@131.191.49.120)
[10:58:05] *** Joins: Kraus (~quassel@075-141-246-250.res.spectrum.com)
[10:58:05] *** Joins: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[10:58:05] *** Joins: arooni (~arooni@li1062-244.members.linode.com)
[10:58:05] *** Joins: gerty (~gerty@user/gerty)
[10:58:05] *** Joins: Forkk (~forkk@li926-228.members.linode.com)
[10:58:05] *** Joins: sunyour (~sunyour@129.226.182.99)
[10:58:05] *** Joins: DXR (~lyrical@194.219.251.132)
[10:58:05] *** Joins: ThomasJ (~ThomasJ@user/thomasj)
[10:58:05] *** Joins: dodo (~dodo@user/dodo)
[10:58:05] *** Joins: coc0nut (~coc0nut@user/coc0nut)
[10:58:05] *** Joins: Tomassi-1 (~Tomassi-1@ec2-16-170-233-250.eu-north-1.compute.amazonaws.com)
[10:58:05] *** Joins: Neopolitan (~tn5421@45.76.61.24)
[10:58:05] *** Joins: Dan39 (~dan@user/dan39)
[10:58:05] *** Joins: cryocaustik7 (~cryocaust@user/cryocaustik)
[10:58:05] *** Joins: purplex (~purplex@user/purplex)
[10:58:05] *** Joins: greatgatsby__ (~greatgats@bras-base-toroon0411w-grc-52-142-114-106-7.dsl.bell.ca)
[10:58:05] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[10:58:05] *** Joins: naari (~naari@user/naari)
[10:58:05] *** Joins: xakan (~xakan@pnmx.zdx.fr)
[10:58:05] *** Joins: mage (~julien@orval.bbpf.belspo.be)
[10:58:05] *** Joins: kungp (~kungp@h-46-59-2-200.A230.priv.bahnhof.se)
[10:58:05] *** Joins: jiffe (~jiffe@47-220-182-140.gtwncmkt04.res.dyn.suddenlink.net)
[10:58:05] *** Joins: ethoxy (~root@bison.alphaw0lf.xyz)
[10:58:05] *** Joins: _val_ (~valentin@82-169-14-137.biz.kpn.net)
[10:58:05] *** Joins: queue- (~nerd@user/queue/x-7267619)
[10:58:05] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[10:58:05] *** Joins: Melon_Bread (~Melon_Bre@li958-238.members.linode.com)
[10:58:05] *** Joins: potatosal (~salad@user/potatosal)
[10:58:05] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[10:58:05] *** Joins: pr3d4t0r (~zhenya01@user/pr3d4t0r)
[10:58:05] *** Joins: DesolateHypertex (~DesolateH@static.213-133-103-49.clients.your-server.de)
[10:58:05] *** Joins: dminuoso (~dminuoso@user/dminuoso)
[10:58:05] *** Joins: Spydar007 (~spydar007@user/spydar007)
[10:58:05] *** Joins: simplicity (~yti@user/simplicity)
[10:58:05] *** Joins: nigelb (~nigel@zeus.nigelb.me)
[10:58:05] *** Joins: gjvc (~gjvc@user/gjvc)
[10:58:05] *** Joins: ecool (~ecool@ecool.dev)
[10:58:05] *** Joins: lidless (~lidless@user/lidless)
[10:58:05] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[10:58:05] *** Joins: n1000 (~n1000@user/n1000)
[10:58:05] *** Joins: aoeixsz4 (~aoei@nethackscoreboard/aoei)
[10:58:05] *** Joins: Helle (~helle@45.83.235.185)
[10:58:05] *** Joins: meejah (~meejah@rutas.meejah.ca)
[10:58:05] *** Joins: dlam (~dlam@dlam.me)
[10:58:05] *** Joins: hrm (~hrm@nimbus.harmtemolder.nl)
[10:58:05] *** Joins: kolcon (~kolcon@v.kolouch.org)
[10:58:05] *** Joins: NOTevil (~notevil@user/notevil)
[10:58:05] *** Joins: LordKalma (~LordKalma@server.ruilvo.com)
[10:58:05] *** Joins: peanuter_ (~peanuter@static.190.220.201.138.clients.your-server.de)
[10:58:05] *** Joins: streety (~streety@li761-24.members.linode.com)
[10:58:05] *** Joins: achilleas (~ach@user/achilleas)
[10:58:05] *** Joins: ntdll_ (~ntdll@shion.saiban.me)
[10:58:05] *** Joins: Dantali0n (~Dantali0n@251-228-138-45.connected.by.freedominter.net)
[10:58:05] *** Joins: ldericher (~LDer@pantalaimon.yavook.de)
[10:58:05] *** Joins: lantech19446 (~lantech19@144.202.10.138)
[10:58:05] *** Joins: Norkle (~norkle@admin.nasa-g0v.com)
[10:58:05] *** Joins: AnimalFarmPig (~quassel@user/animalfarmpig)
[10:58:05] *** Joins: han-` (~han`@user/han-/x-0887595)
[10:58:05] *** Joins: nickodd (~nickodd@user/nickodd)
[10:58:05] *** Joins: Nei (~ailin@openSUSE/member/ailin-nemui)
[10:58:05] *** Joins: d1rewolf (sid312924@id-312924.helmsley.irccloud.com)
[10:58:05] *** Joins: Boarders_ (sid425905@id-425905.lymington.irccloud.com)
[10:58:05] *** Joins: kinabalu (~kinabalu@about/java/kinabalu)
[10:58:05] *** Joins: vince (~vince@75.127.14.76)
[10:58:05] *** Joins: ThothCastel (sid78195@id-78195.tinside.irccloud.com)
[10:58:05] *** Joins: lericson (~lericson@user/lericson)
[10:58:05] *** Joins: Evolver (sid32215@user/evolver)
[10:58:05] *** Joins: hogarius (hogarius@id-222644.uxbridge.irccloud.com)
[10:58:05] *** Joins: bjs (sid190364@user/bjs)
[10:58:05] *** Joins: eichin (sid27120@id-27120.tinside.irccloud.com)
[10:58:05] *** Joins: jessicara (~shirogits@user/jessicara)
[10:58:39] *** Quits: michele (~eraser@user/michele) (Max SendQ exceeded)
[10:58:39] *** Quits: HvszrStykp (~X@81.171.62.84) (Max SendQ exceeded)
[10:58:52] *** Joins: HvszrStykp (~X@81.171.62.84)
[10:59:11] *** Joins: michele (~eraser@user/michele)
[10:59:11] *** Quits: ekathva (~ekathva@2001:999:51:be01:2c4a:6b25:b5d5:f2c9) (Ping timeout: 256 seconds)
[10:59:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[10:59:25] *** Quits: Nigma (~magnus@87.61.126.226) (Ping timeout: 256 seconds)
[10:59:25] *** Quits: dreamon (~dreamon@pd9503995.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[10:59:44] *** Joins: dvx (~dvx@5.181.92.64)
[10:59:48] <masoudd> what is pyweek
[11:00:04] *** Joins: nomic (~nomic@185.192.69.3)
[11:00:06] <masoudd> https://pyweek.org/
[11:00:11] *** Quits: Csm319_ (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Quit: Leaving)
[11:00:18] *** Joins: iomari891 (~iomari891@105.112.138.38)
[11:01:00] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:01:13] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[11:02:35] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[11:02:44] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[11:02:52] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[11:03:42] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[11:04:01] *** Joins: luigibu (~luigi@93.176.144.84)
[11:04:07] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10f5:7936:8c47:5652:a14e:1810)
[11:04:07] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[11:04:32] *** Quits: Andrew (andrew@andrewyu.org) (Killed (molybdenum.libera.chat (Nickname regained by services)))
[11:04:45] *** Joins: Andrew_ (andrew@andrewyu.org)
[11:05:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[11:05:21] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:2c5a:1825:e86e:2a61)
[11:06:36] *** Joins: emf (~emf@2620:10d:c090:400::5:d558)
[11:07:04] *** arash- is now known as arash
[11:07:41] *** Quits: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:2d8d:81bc:85e6:c719) (Ping timeout: 250 seconds)
[11:07:55] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 250 seconds)
[11:07:57] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 240 seconds)
[11:08:56] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[11:09:14] *** Joins: karlnashville (~karl@2601:482:4280:4cf0:16f7:61ea:5dd2:2a38)
[11:09:42] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[11:09:46] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[11:11:14] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:11:30] *** Joins: someuser (~user@197.54.43.98)
[11:12:31] *** Quits: dharrigan (~dharrigan@user/dharrigan) (Quit: ZNC - https://znc.in)
[11:13:00] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[11:13:37] <karlnashville> whats up people? how is everyone this evening?!
[11:13:41] *** Joins: fef (~thedawn@user/thedawn)
[11:13:55] *** Joins: dharrigan (~dharrigan@user/dharrigan)
[11:15:21] *** Quits: rememberYou (~someone@user/rememberyou) (Remote host closed the connection)
[11:15:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[11:16:12] *** Joins: Vonter (~Vonter@user/vonter)
[11:16:19] <Qria> working... as always...
[11:16:26] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:16:45] *** Joins: jay-m126 (~jay-m@129.0.76.217)
[11:16:50] *** Joins: jay-m126_ (~jay-m@129.0.76.217)
[11:16:51] *** Joins: jay-m1261 (~jay-m@129.0.76.217)
[11:18:40] *** Joins: rendar (~rendar@user/rendar)
[11:19:09] *** Joins: andreasbuhr (~quassel@p549dbab5.dip0.t-ipconnect.de)
[11:20:22] *** Joins: c4017w_ (~c4017@209.52.68.8)
[11:20:35] <karlnashville> Qria: I really wish i had that problem right now, lol
[11:20:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[11:21:47] *** Joins: maxzor__ (~maxzor@laubervilliers-657-1-70-103.w90-63.abo.wanadoo.fr)
[11:22:12] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[11:22:24] <Qria> working 3 weeks in a row without weekends... my brain feels numb
[11:22:58] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[11:22:59] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[11:23:14] <Qria> also how do you not have a job if you know python
[11:24:07] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[11:24:36] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[11:25:43] *** Quits: dskull (~dskull@user/dskull) (Ping timeout: 256 seconds)
[11:25:47] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:26:37] *** Quits: foul_owl (~kerry@94.140.8.105) (Ping timeout: 256 seconds)
[11:27:02] *** Joins: sawk (~quassel@151.81.119.74)
[11:27:09] <karlnashville> Qria: i just got out of prison and i have a 7 year gap on my resume and two drug felonies on my record
[11:27:19] *** Joins: xkuru (~xkuru@user/xkuru)
[11:27:36] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[11:27:38] *** Joins: Z-cat (~Z-cat@user/z-cat)
[11:27:44] <karlnashville> Qria: i'm going through the certifications at freecodecamp.org to help me get my foot back in the door somewhere
[11:27:45] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 256 seconds)
[11:27:47] <Vornicus> also the job search is a racket and it is physically impossible to write a resume that does not get binned
[11:27:54] *** Joins: Trigraph (~dev@68-251-63-205.lightspeed.sntcca.sbcglobal.net)
[11:28:11] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[11:28:36] <karlnashville> Vornicus: yeah, gotta be looking in the right places i guess, that linkedin crap is facebook on crack for jobs, lol
[11:29:10] *** Joins: MajorBiscuit (~MajorBisc@c-001-015-052.client.tudelft.eduvpn.nl)
[11:29:10] *** Quits: bluedust_ (~bluedust@117.222.188.38) (Read error: Connection reset by peer)
[11:29:27] *** Joins: bluedust (~bluedust@103.160.194.110)
[11:29:39] *** Joins: dskull (~dskull@user/dskull)
[11:30:37] <Qria> I see, good luck on your search
[11:30:48] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:30:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[11:31:09] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[11:31:17] *** Quits: someuser (~user@197.54.43.98) (Ping timeout: 240 seconds)
[11:31:30] *** Joins: palasso (~palasso@user/palasso)
[11:31:56] <karlnashville> Qria: appreciated, but i'm really not even searching atm, like i said, gonna load up on a few certs before i even try lol, i take contracts here and there to pay the bills but i do miss having a full time job
[11:32:05] *** Joins: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[11:33:19] *** Quits: dskull (~dskull@user/dskull) (Client Quit)
[11:34:01] <Qria> Good thing devs are in such a short supply, I heard even Amazon famous for grinding humans into dollar bills are recruiting some positions with whole fridays off
[11:34:08] *** Joins: Z-cat_ (~Z-cat@128-69-59-122.broadband.corbina.ru)
[11:34:47] <karlnashville> wow, thats hard to believe
[11:34:48] *** Quits: bancroft (~bancroft@user/bancroft) (Quit: WeeChat 3.2)
[11:35:40] *** Z-cat is now known as Guest7511
[11:35:41] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[11:35:54] *** Z-cat_ is now known as Z-cat
[11:35:55] *** Joins: jant (~jant@pavlov.tiddo.net)
[11:36:01] *** Joins: Nigma (~magnus@87.61.126.226)
[11:36:08] *** Quits: Z-cat (~Z-cat@128-69-59-122.broadband.corbina.ru) (Changing host)
[11:36:08] *** Joins: Z-cat (~Z-cat@user/z-cat)
[11:36:15] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:36:22] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[11:36:26] *** Joins: lbalhar (~lbalhar@spsei.osanet.cz)
[11:36:57] *** Quits: fsoc (~shynerd@bison.alphaw0lf.xyz) (Ping timeout: 250 seconds)
[11:37:29] <Qria> Another thing I've heard is people exploiting remote work and taking two full time jobs and basically making 2 times the monies without working much more
[11:37:37] *** Quits: ethoxy (~root@bison.alphaw0lf.xyz) (Ping timeout: 256 seconds)
[11:37:37] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[11:38:01] *** Quits: Guest7511 (~Z-cat@user/z-cat) (Ping timeout: 250 seconds)
[11:38:25] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[11:38:28] *** Joins: sprout_ (~quassel@2a02:a467:ccd6:1:2dea:f16f:b001:1064)
[11:38:49] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[11:38:51] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[11:39:08] *** Joins: fsoc (~shynerd@bison.alphaw0lf.xyz)
[11:39:12] *** Joins: ethoxy (~root@bison.alphaw0lf.xyz)
[11:39:31] <demsh> if they manage to keep up then is it really an exploit?
[11:39:59] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[11:40:17] <karlnashville> Qria: yeah, honestly i'm hoping to get some remote work, i should be able to get a remote job eventually without someone doing to much investigating i hope LOL
[11:40:40] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[11:40:53] <karlnashville> as long as the code is good i'll be able to get a job before long with a few of these certifications
[11:41:37] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:80b2:e90a:7da7:7a8d) (Ping timeout: 240 seconds)
[11:41:48] *** Joins: foul_owl (~kerry@94.140.8.107)
[11:41:55] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[11:42:07] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[11:42:59] *** Quits: Trigraph (~dev@68-251-63-205.lightspeed.sntcca.sbcglobal.net) (Read error: Connection reset by peer)
[11:43:07] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[11:43:40] <stewie925> Qria: sure there are lots of python jobs out there,  but when you look at the job description they require you to know A,B,C,D,E,F,G as well
[11:44:26] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:51ac:e09e:aad0:faee)
[11:44:39] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[11:45:13] *** Quits: AlanMD_ (~AlanMD@5-12-8-203.residential.rdsnet.ro) (Quit: ZZZzzz…)
[11:45:14] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:46:38] *** Joins: Vonter (~Vonter@user/vonter)
[11:46:40] *** Joins: roro (~roro@78.192.226.182)
[11:46:44] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[11:47:04] *** roro is now known as Guest3599
[11:47:15] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[11:47:15] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[11:47:17] *** Quits: sprout_ (~quassel@2a02:a467:ccd6:1:2dea:f16f:b001:1064) (Ping timeout: 240 seconds)
[11:47:21] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 256 seconds)
[11:48:08] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[11:49:11] *** Quits: luigibu (~luigi@93.176.144.84) (Read error: Connection reset by peer)
[11:49:11] <Qria> yea especially leetcode stuff I could never get into
[11:49:51] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[11:49:54] <stewie925> Ive been out of a job for over a year, and the available jobs are mostly Senior Python Engineer jobs too
[11:50:13] <dirtwash> how do I properly use mysql executemany? does it need more parameter than execute?
[11:50:16] *** Joins: luigibu (~luigi@93.176.144.84)
[11:50:28] <dirtwash> because I get "mysql.connector.errors.ProgrammingError: Not all parameters were used in the SQL statement"
[11:50:37] <dirtwash> execute works though
[11:50:44] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[11:51:32] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:2c5a:1825:e86e:2a61) (Quit: Client closed)
[11:52:48] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[11:53:45] <dirtwash> oh  hm
[11:54:11] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[11:54:47] *** Emet-Selch is now known as Azem
[11:55:09] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:55:17] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[11:56:20] *** Joins: bluedust_ (~bluedust@117.222.188.38)
[11:56:46] <PsyStemUpdate> anyone know what the metaverse is?
[11:56:59] *** Joins: djapo (~archangel@user/djapo)
[11:57:05] *** Joins: Gurkenglas (~Gurkengla@dslb-090-186-104-244.090.186.pools.vodafone-ip.de)
[11:57:25] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[11:57:26] *** Parts: jant (~jant@pavlov.tiddo.net) ()
[11:57:57] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[11:58:26] <dre> no idea
[11:58:52] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[11:59:35] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[11:59:37] *** Quits: bluedust (~bluedust@103.160.194.110) (Ping timeout: 240 seconds)
[12:00:27] *** Quits: Vonter (~Vonter@user/vonter) (Read error: Connection reset by peer)
[12:01:01] *** Joins: mrwick (~mrwick@user/mrwick)
[12:02:00] *** Quits: Deknos (~someone@user/menace) (Quit: Deknos)
[12:02:04] *** Joins: Vonter (~Vonter@user/vonter)
[12:03:47] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[12:04:02] *** Joins: pycode1 (~pycode3@2001:b07:5d28:551:529e:9660:b012:80fe)
[12:04:28] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[12:05:01] <dirtwash> got it
[12:05:04] <kuhilas> where can I learn what the [] and () mean in in docs when they explain function propeties like: font.generate(filename[, bitmap_type=, flags=, bitmap_resolution=, subfont_directory=, namelist=, layer=])
[12:05:16] *** Joins: kosh (~kosh@user/kosh)
[12:05:37] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[12:06:01] <kuhilas> especially that inner [] how I use them
[12:06:01] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[12:06:11] <Vornicus> the stuff inside the [] is optional
[12:06:12] <deniska> kuhilas: that probably means "optional", but it's not valid python syntax
[12:06:37] <deniska> kuhilas: but you can do font.generate(filename, bitmap_resolution=11) for example
[12:06:42] <Vornicus> you don't include the actual brackets in the actual python code; you instead do -- that
[12:07:17] *** Quits: emf (~emf@2620:10d:c090:400::5:d558) (Ping timeout: 240 seconds)
[12:07:20] <kuhilas> I see thanks
[12:07:59] <dirtwash> id be curious to know how python maanges to turn 700MB of raw data into 10GB if I read from file into memory, like wtf
[12:08:23] *** Joins: AlanMD (~AlanMD@5-12-8-203.residential.rdsnet.ro)
[12:09:27] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Ping timeout: 256 seconds)
[12:09:37] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 240 seconds)
[12:09:59] <deniska> dirtwash: You, or a library you using, probably copies the data a bunch of times. Nested structures also can quickly go out of hand
[12:10:04] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[12:10:28] <dirtwash> I need some help importing lot of data into mysql
[12:10:37] <dirtwash> executemany doesnt work, creawtes too big memory use
[12:10:53] <dirtwash> isnt there something like "take 10k each batch"
[12:11:12] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[12:11:14] <dirtwash> hm ok i just create my sets in 10k and commit it to db hm
[12:11:27] <dirtwash> cant believe mysql lib doesnt have some smart way to do this out of the box :|
[12:11:57] *** Quits: hamms (~hams@2607:fb90:5d09:ca3a:f1ed:3fa1:8e96:18c7) (Ping timeout: 240 seconds)
[12:13:09] *** Joins: cyphase (~cyphase@user/cyphase)
[12:13:11] *** Joins: gusto (~Augustus@109.255.100.54)
[12:13:25] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8) (Ping timeout: 256 seconds)
[12:13:54] <parv> Parse chunk-sized lines; send them to database in a transaction; repeat until done
[12:14:17] <kuhilas> the font.generate is explained here https://fontforge.org/docs/scripting/python/fontforge.html  I tried adding `font.generate('ant1.otf', flags='opentype')` as a line using it, but I'm not sure it's right. The docs says "Flags is a tuple containing some of" and one of them is that "opentype"
[12:14:24] <dirtwash> ok that was easy
[12:14:53] <dirtwash> parv: i just read x lines into my list and then executemany, clear list and start again
[12:15:07] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[12:15:08] *** Joins: menace (~someone@ppp-93-104-186-58.dynamic.mnet-online.de)
[12:15:08] *** Quits: menace (~someone@ppp-93-104-186-58.dynamic.mnet-online.de) (Changing host)
[12:15:08] *** Joins: menace (~someone@user/menace)
[12:15:16] *** menace is now known as Deknos
[12:15:31] <dirtwash> still only about 50k inserts/s hm
[12:16:02] *** Quits: bluedust_ (~bluedust@117.222.188.38) (Read error: Connection reset by peer)
[12:16:08] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[12:16:15] *** Quits: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[12:16:16] <dirtwash> can live with that
[12:16:25] <parv> You could drop index if present while stuffing the database. Recreate after
[12:16:34] *** Joins: bluedust (~bluedust@103.160.194.110)
[12:17:04] <TML> dirtwash: Do you need to actually use python for this? MySQL's client tools have "import data from file" facilities
[12:17:16] <deniska> kuhilas: font.generate('ant1.otf', flags='opentype')
[12:17:18] <deniska> oops
[12:17:18] *** Joins: dskull (~dskull@user/dskull)
[12:17:18] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[12:17:23] <deniska> kuhilas: font.generate('ant1.otf', flags=('opentype',))
[12:17:32] <deniska> kuhilas: it's a comma which makes a tuple
[12:17:33] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Client Quit)
[12:17:43] <deniska> so a single-element tuple is spelled weirdly like this
[12:18:31] *** Quits: ominionx (~ominionx@172.58.136.5) (Ping timeout: 256 seconds)
[12:18:32] <dirtwash> TML: :|
[12:18:49] <dirtwash> but the client proaably does single line inserts as well
[12:18:50] <kuhilas> thanks
[12:18:51] <parv> dirtwash, Could also look into dropping & recreating foreign key constraints if any
[12:18:53] *** Quits: karlnashville (~karl@2601:482:4280:4cf0:16f7:61ea:5dd2:2a38) (Quit: Konversation terminated!)
[12:19:26] <TML> > The LOAD DATA statement reads rows from a text file into a table at a very high speed. The file can be read from the server host or the client host, depending on whether the LOCAL modifier is given. LOCAL also affects data interpretation and error handling.
[12:19:34] *** Quits: ss4 (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[12:19:43] *** Joins: ominionx (~ominionx@172.58.136.5)
[12:19:50] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[12:19:50] <deniska> dirtwash: Due to not having a useful index, I went through 6 cups of tea while removing ~10k rows from a database yesterday. Sometimes things just take time even if it feels like they shouldn't
[12:19:54] <TML> > The mysqlimport utility provides another way to load data files; it operates by sending a LOAD DATA statement to the server.
[12:20:22] <dirtwash> ok I'll bench this and compare
[12:20:42] <TML> IDK - maybe you're also doing some tricksy data manipulations in python before inserting, just asking the question
[12:20:48] *** Joins: wedwards (~wedwards@rtr0.17.31.bogert.cyberfusion.cloud)
[12:20:53] *** Joins: c4017w__ (~c4017@209.52.68.8)
[12:20:56] <dirtwash> I dont
[12:21:02] <dirtwash> so you'er right, I dnt need python, so far
[12:21:13] <parv> Well then ...
[12:21:14] <dirtwash> i should try to think more simple
[12:21:37] <dirtwash> but well i might need to use python, I am not at step 2 yet :/
[12:22:08] <dirtwash> but thx on the client idea
[12:22:23] *** Joins: eXtr3m0 (~eXtr3m0@user/eXtr3m0)
[12:23:02] *** Quits: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald) (Ping timeout: 240 seconds)
[12:23:25] <dirtwash> acutally if someone has any good idea, how do I update rows in my table that I havent updated in another process. I'd have to keep a set of both first to compare no?
[12:24:11] *** Joins: bluedust_ (~bluedust@117.222.188.38)
[12:24:17] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[12:24:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[12:24:25] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[12:24:37] *** Joins: ba (~ba@cpc1-hari17-2-0-cust27.20-2.cable.virginm.net)
[12:25:14] <parv> Select the data as if it was already updated; if matches with update to be done, then skip. Or, update finishes with no changes.
[12:25:56] <dirtwash> but my selection criteria is a set of data which gets updates in the table, anything that is not part of that set but in the db is not updated but I need to still update it with another value
[12:26:29] <dirtwash> kinda like the relative complement, in set theory
[12:26:41] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[12:26:47] <TML> relational databases are very closely tied to set theory
[12:26:57] *** Quits: bluedust (~bluedust@103.160.194.110) (Ping timeout: 240 seconds)
[12:27:18] <TML> UPDATE table SET col = value WHERE (inverse of your other conditional statement)
[12:27:43] *** Joins: SGautam (uid286066@ilkley.irccloud.com)
[12:27:53] *** Joins: zamanf (~dev@213.133.91.246)
[12:28:05] <TML> s/conditional statement/WHERE clause/
[12:28:57] <dirtwash> my condition is simple if its in the db though, but i need to update both, data thats in and data thats not in yet
[12:29:19] <dirtwash> no tahts wrongly phrased
[12:29:42] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Quit: WeeChat 2.8)
[12:29:49] <dirtwash> i check daily if something exists, so every day I insert something or if exists upadte it, but the ones that aer not in the daily I also need to update, for that I need to know them
[12:29:59] *** Joins: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald)
[12:30:03] *** Joins: revolve_ (~u0_a227@82-132-236-209.dab.02.net)
[12:30:16] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[12:30:37] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 240 seconds)
[12:31:02] <parv> I could be wrong but sounds like case of "Insert Or Update"
[12:31:09] <deniska> dirtwash: people often call an operation like this "upsert", and various sql dialects may vary in what the syntax for it is
[12:31:11] <TML> dirtwash: This conversation is far too abstract for me to provide any kind of meaningful suggestions
[12:31:31] *** Joins: callq (~callq@2409:4062:2e9e:2081:3c70:5be0:414d:6151)
[12:31:40] <dirtwash> yes i UPSERT the data I have in my daily list, but the one that is already in the db but not in the daily I still need to update
[12:31:44] *** Joins: arinov_ (~arinov@213.194.126.155)
[12:31:53] <TML> deniska: I mean, if you're updating everything regardless of whether or not it's in the daily, then why bother with checking whether it's in the daily?
[12:31:55] <dirtwash> but to create statements for that I'd haev to create a set of those right? thers no mysql functionality
[12:31:56] <TML> Just update everything
[12:32:05] <dirtwash> TML: the update values are different
[12:32:06] *** Quits: Nutte35 (~Nutte@43.231.30.192) (Remote host closed the connection)
[12:32:29] <callq> Hey hey, big brains! I need a function that gets this "0.01" -> and returns 2; likewise "0.001" --> 3; "0.0001" --> 4
[12:32:51] <dirtwash> callq: count the 0
[12:33:04] <callq> then what about 0.1?
[12:33:20] <TML> callq: len(foo.rpartition(".")[-1])
[12:33:24] <dirtwash> returns 1?
[12:33:28] <callq> oh ye
[12:33:32] <dirtwash> lol
[12:33:34] <callq> will test. carry on.
[12:33:49] <TML> callq: or len(foo)-2
[12:33:59] <TML> (assuming it's always "0.")
[12:33:59] *** Joins: mar77i (~martti@46-126-48-136.dynamic.hispeed.ch)
[12:34:17] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 256 seconds)
[12:34:24] <dirtwash> TML: thanks for your input so far in any case
[12:34:27] *** Joins: x_kuru (~xkuru@user/xkuru)
[12:34:37] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 256 seconds)
[12:34:50] <dirtwash> i guess my question makes no sense because you cant update something if you dontk now what it is
[12:34:58] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[12:35:00] <dirtwash> so I have to create a set first which is problematic
[12:35:21] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[12:35:21] <deniska> callq: mathy way: -math.log10(0.001)
[12:35:36] <callq> and now for a variable name, truncate and round functions take a number as a paramter. What do you call this number that specifies how many places come after the decimal?
[12:35:45] <dirtwash> deniska: sexy
[12:35:53] <Repiphany> callq: precision
[12:36:02] *** Joins: jaggz (~jaggz@user/jaggz)
[12:36:11] <jaggz> https://deepspeech.readthedocs.io/en/r0.9/TRAINING.html#basic-dockerfile-for-training
[12:36:37] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 240 seconds)
[12:36:40] <jaggz> "We provide Dockerfile.train .... make Dockerfile.train"
[12:36:47] *** Joins: lakrass (~lakrass@user/lakrass)
[12:36:47] <jaggz> but that's not a makefile
[12:36:50] *** Joins: vladoski (~vladoski@93-36-219-239.ip62.fastwebnet.it)
[12:37:15] <jaggz> the template is: https://github.com/mozilla/DeepSpeech/blob/master/Dockerfile.train.tmpl
[12:37:24] *** Joins: LimeOn (~user@user/limeon)
[12:37:29] <callq> Repiphany :) thx
[12:37:38] <jaggz> it has stuff in it like: FROM tensorflow/tensorflow:1.15.4-gpu-py3  ... ENV DEBIAN_FRONTEND=noninteractive
[12:37:54] <TML> dirtwash: create a "daily records" table; each day: 1) truncate that table; 2) insert daily records; 3) run "update other_table left outer join daily_records on (other_table.some_key = daily_records.some_key) set other_table.foo = coalesce(daily_records.foo, 'default value')"
[12:37:55] *** Joins: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1)
[12:38:21] *** Quits: ominionx (~ominionx@172.58.136.5) (Ping timeout: 256 seconds)
[12:38:23] <TML> dirtwash: Or something…like I said, the conversation is so abstract and high-level it's quite difficult to provide concrete advice
[12:38:50] *** Joins: ominionx (~ominionx@172.58.136.5)
[12:40:51] <TML> jaggz: No, Dockerfile.train isn't a makefile - based on that documentation, you should find a Makefile in that project which has "Dockerfile.train" as a make target, and it presumably consumes Dockerfile.train.tmpl as part of that generation process
[12:41:05] *** Quits: lewisje (~lewisje@72.49.207.113) (Quit: Leaving)
[12:41:23] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[12:41:44] <TML> jaggz: https://github.com/mozilla/DeepSpeech/blob/master/Makefile#L4
[12:41:48] <dirtwash> im a mysql noob, whats the 3) translated? like update entry in table2 if entry exists in table1 and use a join to combine this?
[12:42:11] *** Joins: mannequin (uid453465@helmsley.irccloud.com)
[12:42:15] <mannequin> hello
[12:42:28] <mannequin> i have this odd issue and not ure where to seek help
[12:42:52] <mannequin> so i run ubuntu and at ne point i ran chowen -R root:root /usr
[12:42:52] <TML> dirtwash: join daily table and other table on a common key; for each row in other table, update its foo column to either the foo value found in daily table, or some default string value
[12:42:59] <mannequin> chown*
[12:43:12] <mannequin> everything works but this
[12:43:15] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[12:43:19] <mannequin> http://paste.debian.net/1229427/
[12:43:26] <dirtwash> TML: does that work if you have rows that dont exist in either?
[12:43:30] <mannequin> any clue how to fix this?
[12:43:31] <TML> mannequin: Well, there's a #ubuntu that's probably a more natural help spot for things like this
[12:43:43] <mannequin> well it's a python issue tbh
[12:43:56] <TML> dirtwash: If it doesn't exist in "other table", it doesn't exist - so you obviously can't update it
[12:44:01] <mannequin> they told me to reinstall the os but everything works but this on app
[12:45:14] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Quit: Leaving)
[12:45:14] <mrwick> mannequin: all I can say is use -c with chown and log the output, then you know what changed
[12:45:57] <dirtwash> TML: so I can do like "if this key NOT exists in table2, update entry in table2 to..."
[12:46:11] <dirtwash> key=entry lol
[12:46:17] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[12:47:09] <TML> mannequin: it's actually NOT a python question, it's a question about the "software update" tool Ubuntu provides; the fact that it happens to use python doesn't make this a python question, it's an OS level question. However, https://askubuntu.com/questions/789966/software-updates-crashes-and-will-not-open seems to be showing a very similar error (if not the same), try the answer there?
[12:47:18] <parv> dirtwash, When you "key not exist ... update entry", do you mean the whole row does not exist?
[12:47:45] <dirtwash> mannequin: try apt-get install aptitude and then aptitude reinstall dbus and reboot
[12:47:54] <dirtwash> parv: yes
[12:48:02] *** Quits: daidoji (~daidoji@104-52-250-5.lightspeed.gnvlsc.sbcglobal.net) (Ping timeout: 250 seconds)
[12:48:17] <dirtwash> Sorry I phrased it wrong
[12:48:58] <dirtwash> if entry from table2 is not in table1(daily)
[12:49:10] <dirtwash> then I update table2 entry with different value
[12:49:57] <TML> dirtwash: Sorry, I'm really just tapped out trying to explain to you how to use SQL with such a poor understanding of your data and your requirements. Suffice to say, set-wise operations are basically inherent to SQL, so I suggest investing some time in learning SQL properly, you'll likely find 80+% of what you're trying to do can be done directly in SQL.
[12:50:34] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:50:58] <dirtwash> TML: you're right there, will do, thank you
[12:51:07] *** Joins: Klinda (~superleag@user/klinda)
[12:51:14] <dirtwash> DBs are my weakpoint
[12:51:22] <dirtwash> networking is easier :x
[12:51:37] *** Quits: zamanf (~dev@213.133.91.246) (Ping timeout: 256 seconds)
[12:52:22] *** Andrew_ is now known as Andrew
[12:52:37] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Ping timeout: 240 seconds)
[12:52:40] *** Joins: xa0s (~xa0s@mab.sdf.org)
[12:53:13] *** aoeixsz4 is now known as aoei
[12:54:08] *** Quits: jay-m1261 (~jay-m@129.0.76.217) (Read error: Connection reset by peer)
[12:54:08] *** Quits: jay-m126_ (~jay-m@129.0.76.217) (Read error: Connection reset by peer)
[12:54:08] *** Quits: jay-m126 (~jay-m@129.0.76.217) (Read error: Connection reset by peer)
[12:54:47] <dirtwash> TML: sadly the #mysql channel is rather quiet :D
[12:55:15] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:55:27] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[12:55:42] *** Quits: spithash (~spithash@user/spithash) (Ping timeout: 276 seconds)
[12:56:54] <TML> there are reams and reams of resources on the Internet to help you learn SQL
[12:57:07] *** Joins: spithash (~spithash@user/spithash)
[12:57:28] *** Joins: jay-m126 (~jay-m@129.0.76.39)
[12:57:39] *** Joins: jay-m1261 (~jay-m@129.0.76.39)
[12:57:40] *** Joins: jay-m126_ (~jay-m@129.0.76.39)
[12:58:57] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 240 seconds)
[12:59:28] *** Quits: SeeM (~SeeM@153.ip-54-38-53.eu) (Quit: leaving)
[12:59:41] <TML> since you're using mysql, you probably want to at include their official documentation at some juncture
[12:59:43] *** Joins: SeeM (~SeeM@153.ip-54-38-53.eu)
[13:00:26] *** Joins: dreamon (~dreamon@ppp-88-217-91-105.dynamic.mnet-online.de)
[13:00:53] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[13:01:06] <dirtwash> TML: already on it
[13:01:11] *** Joins: teelrabbit (~teelrabbi@206.214.239.17)
[13:01:37] <dirtwash> mannequin: worked?
[13:02:22] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:02:22] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[13:03:35] <TML> mannequin: Honestly, I would concur with the ubuntu folks; you have no idea what else you may have damaged and it just hasn't bubbled to the surface yet. Throw in the towel now, reinstall.
[13:03:40] *** Joins: ubert1 (~Thunderbi@p200300ecdf0994a1946b5f66cf92c0df.dip0.t-ipconnect.de)
[13:03:45] <mannequin> dirtwash: working on it, i needed to reinstall polkit
[13:03:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[13:04:56] <teelrabbit> hey
[13:06:19] <TML> mannequin: It could be worse, BTW - my first 48 hours on a Unix system, I did "chmod -R a-x *", not realizing I was in "/" at the time
[13:06:34] <teelrabbit> jim: ?
[13:06:42] <TML> It ran for about 20 minutes before throwing a SIGBUS error when the execute bit was stripped from chmod
[13:06:47] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[13:07:25] <mannequin> TML: i run linux for last 15 years and i do stupid stuff like this sometimes
[13:08:01] <mannequin> TML: suma sumarum i had to reinstall and purge few packages and it's working again
[13:08:06] <TML> mannequin: Get out of the habit of using root at all, that can help :)
[13:08:09] <deniska> The best one I did recently was upgrading ubuntu from 18.04 to 20.04 while having python3.8 package installed from deadsnakes-ppa
[13:08:30] <TML> dirtwash: If you're not above spending some money to get quality training, https://www.oreilly.com/library/view/cj-dates-sql/9781449389659/ is IMO pretty fantastic
[13:08:37] <gjvc> mannequin: 'sudo aptitude reinstall dbus'
[13:08:52] *** Quits: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net) (Quit: Leaving)
[13:09:00] <gjvc> or apt-get or apt or whatever
[13:09:31] *** Quits: whatsupdoc (uid509081@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[13:10:18] <gjvc> also maybe these packages too 'python-pkg-resources python3-pkg-resources software-properties-gtk'
[13:10:33] *** Joins: shad (~shad@user/shad)
[13:10:36] <dirtwash> TML: thanks
[13:10:46] <dirtwash> company expense that is
[13:10:58] <gjvc> as your traceback seems to show 'com.ubuntu.SoftwareProperties' as where things go wrong
[13:11:06] *** Joins: plastico (~plastico@neomutt/plastico)
[13:11:49] *** Joins: LordOfLive (uid538075@tinside.irccloud.com)
[13:11:55] *** Joins: tobybl (~tobybl@dhcp-199-233.inf.ed.ac.uk)
[13:12:28] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:9d5c:62a8:fd4f:5327)
[13:12:44] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:14:27] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 250 seconds)
[13:14:57] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[13:16:00] *** Joins: Naan (~Naan@user/naan)
[13:18:05] *** Joins: someuser (~user@197.54.43.98)
[13:18:10] *** Quits: someuser (~user@197.54.43.98) (Read error: Connection reset by peer)
[13:18:28] *** Joins: someuser (~user@197.54.43.98)
[13:18:51] <duuude> was md5 module  standard in python2?
[13:19:15] <ssbr> duuude: yes
[13:19:16] <deniska> duuude: yes
[13:19:57] <duuude> what about zlib?
[13:19:59] <deniska> (who else had a py2 console nearby to check?)
[13:20:07] <deniska> duuude: sure
[13:20:40] <ssbr> deniska: I just had my memory :)
[13:20:41] *** Quits: jpic (~jpic@82.142.23.238) (Remote host closed the connection)
[13:20:59] *** Joins: paul424 (~paul424@2a01:111f:e22:cc00:4de5:89c6:c0be:9f1e)
[13:21:23] *** Joins: c4017w_ (~c4017@209.52.68.8)
[13:21:39] <paul424> Hello, so what do i do , there are two problems , maybe related to each other
[13:21:43] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:21:55] <duuude> how do you say md5.new(data).digest() in python3?
[13:22:17] <paul424> first one is in VSC the EMPTY program runs the previous program ( simple while loop demo )
[13:22:22] <paul424> how it can be so ?
[13:24:37] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[13:24:40] *** Joins: ivii (~ivan@user/ivii)
[13:24:49] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[13:25:26] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[13:25:34] <paul424> second one is of course pygame not working , not be seen by VSC ...
[13:25:34] <ssbr> duuude: https://docs.python.org/3/library/hashlib.html -- hashlib.new('md5', data).digest().
[13:25:42] <ssbr> duuude: I'd recommend not using md5 if you can avoid it, btw.
[13:25:49] <paul424> who could help ? jinsun_ ?
[13:25:50] *** Joins: mickey8 (~user@user/mickey)
[13:28:17] <dirtwash> TML: can I bother you in PM so I dont off-topic too much here
[13:28:19] *** Joins: drogas (~drogas@jump2.jet.uk)
[13:28:37] <drogas> I don't understand what ABC is. I don't get it even tho I read the doc.
[13:28:38] <TML> dirtwash: You can use #tml
[13:28:59] <paul424> yeah yesterday all were happy to help  , while I wasn't at that machine ...
[13:29:35] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[13:29:40] <ssbr> drogas: an ABC defines methods that must be overridden by subclasses for the subclasses to be able to be instantiated
[13:29:46] <ssbr> (also, properties, etc.)
[13:29:52] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[13:30:13] <ssbr> it prevents errors by making it impossible to forget to override something before you use the class
[13:30:19] <duuude> ssbr: I know, I am porting legacy code
[13:30:36] *** Joins: Elodin (~elodin@user/elodin)
[13:30:41] <duuude> from .msgstruct import * #what is the python2ism here?
[13:30:52] <TML> drogas: If you want your class to have feature <X>, you find the ABC for whatever <X> is and inherit from it, and it will force you to provide the required implementations
[13:31:24] <drogas> I still don't understand what that means honestly. So I have a `class SourceGroup(ABC):` and that has methods (functions) how does that relate to the parent class (ABC) which has `class ABC(metaclass=ABCMeta)`
[13:31:37] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[13:31:56] <TML> drogas: Do you know how inheritance works?
[13:31:59] <paul424> AttributeError: module 'pygame' has no attribute 'init'
[13:32:25] <drogas> TML I used to think yes, but now I'm in doubt
[13:33:07] <drogas> `SourceGroup` would inherit everything from the parent class `ABC` no?
[13:33:19] <TML> paul424: that usually means you called your code "pygame.py", and are now shadowing the real pygame module
[13:33:32] <drogas> but `class ABC` has almost nothing in it except `__slots__ = ()`
[13:34:07] <TML> drogas: ABSTRACT classes are different; instead of providing behaviour, they dictate terms on what behaviour the child class MUST provide.
[13:34:24] <paul424> ahh it works many thanks , TML !!!
[13:34:27] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 256 seconds)
[13:35:27] <drogas> TML they dictate terms on what behaviour the child class MUST provide I don't understand that part, could you give an example?
[13:35:29] *** Joins: kts_ (~kts@103.73.237.48)
[13:36:23] *** Quits: kts (~kts@103.73.237.94) (Ping timeout: 256 seconds)
[13:36:33] *** Quits: kts_ (~kts@103.73.237.48) (Client Quit)
[13:36:36] *** Parts: mannequin (uid453465@helmsley.irccloud.com) ()
[13:36:55] <paul424> TML: ahh and now the problem of  "Ghost" program running out of nowhere disapeared
[13:36:59] <ssbr> drogas: if class ABC is basically empty, then it's not actually using any of the features of ABCMeta.
[13:37:20] <ssbr> drogas: it's probably just a base class so that derived classes are also ABCs, but that's strange and unnecessary
[13:37:29] <paul424> TML but how does the ghost programms appear ?
[13:37:51] <duuude> "!B%dsc" % len(typecodes) #has the meaning of %dsc changed from python2? It expected int, now python3 says it needs bytes
[13:37:58] <TML> paul424: I don't know what you mean by "ghost programms"
[13:38:14] <paul424> first one is in VSC the EMPTY program runs the previous program ( simple while loop demo )
[13:38:21] *** Joins: sprout_ (~quassel@2a02:a467:ccd6:1:a85e:5217:60c2:bcc7)
[13:38:26] <drogas> I mean I'm looking at the Py3.8 abc.py right now. And this is the entire ABC: class ABC(metaclass=ABCMeta): """Helper class that provides a standard way to create an ABC using
[13:38:26] <drogas>     inheritance."""
[13:38:27] <drogas>     __slots__ = ()
[13:38:34] <ssbr> duuude: `"!B%dsc" % len(typecodes)` is fine, but you're probably passing it to something that takes bytes instead of strings
[13:38:51] <wyre> hi guys, could I set lists or dictionaries in a .ini/.cfg file when using configparser?
[13:39:09] <ssbr> drogas: ohhhh, you're looking at the stdlib abc.ABC
[13:39:26] <ssbr> drogas: it's just setting the metaclass, which is inherited by derived classes
[13:39:30] <paul424> but maybe it was due to the confusion VSC recieved from naming one of the files pygame.py
[13:39:47] <ssbr> I said I think this is weird and unnecessary, because you can always just ssay `metaclass=ABCMeta`. But I guess if the stdlib does it, it's okay. :)
[13:40:05] <drogas> ssbr yes cause I'm trying to understand the other code that has `class SourceGroup(ABC)` which is inheriting ABC but I can't make sense of it
[13:40:08] <duuude> ssbr:    return pack(("!B%dsc" % len(typecodes)) + typecodes,
[13:40:09] <wyre> according to this https://docs.python.org/3/library/configparser.html#supported-ini-file-structure I just can use strings and integers/floats values
[13:40:09] <duuude> struct.error: argument for 's' must be a bytes object
[13:40:13] <wyre> but could I use a list?
[13:40:17] <paul424> What do you think guys ?
[13:40:27] <wyre> I mean, could I give a list for some keyword?
[13:40:38] <ssbr> drogas: the ABCMeta metaclass is what enables abstract base class behavior. the abstract base class behavior is that classes cannot be instantiated if they do not override all methods/properties/etc. that are marked abstract
[13:40:41] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Ping timeout: 256 seconds)
[13:41:17] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:51ac:e09e:aad0:faee) (Ping timeout: 240 seconds)
[13:41:20] *** Quits: Techcable (~Techcable@168.235.93.147) (Remote host closed the connection)
[13:42:08] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[13:42:29] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[13:42:32] <TML> paul424: I don't understand the question. What is VSC? What do you mean by "EMPTY program runs"?
[13:42:53] *** Joins: Techcable (~Techcable@168.235.93.147)
[13:42:56] <paul424> Visual Studio Code
[13:43:09] <ssbr> duuude: I don't really know how the struct module works, but anyway that's a struct error, not a string formatting error.
[13:43:13] <paul424> I prepered the new empty program ( zero lines)
[13:43:15] <TML> never used it, I wouldn't even know where to begin understanding your question
[13:43:22] <paul424> and did' run without debugging '
[13:43:26] <ssbr> duuude: presumably some parameter or other should be bytes, not a string
[13:43:44] <paul424> and IT started one of the previously written programs
[13:43:56] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[13:43:58] <ssbr> paul424: FWIW I share your guess that you probably would get better results from not naming the file pygame.py
[13:44:10] <paul424> but now it's fixed, I was just wondering how to avoid that, because such ...
[13:44:14] <ssbr> it's a bad idea unless it's a submodule of a package
[13:44:21] <varaindemian> can somebody pls tell me what is going on here? I don't know what I am missing:
[13:44:26] <paul424> behaviour paralyzes the work of my students
[13:44:29] *** Quits: ezakimak (~ezakimak@c-174-52-132-123.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[13:44:33] <varaindemian> https://www.irccloud.com/pastebin/MC97nywm/
[13:44:35] <duuude> ssbr: but it says the argument for 's', that is the only 's' i see
[13:44:43] *** Joins: walterwhip (~www@user/walterwhip)
[13:44:45] <drogas> ssbr  if they do not override all methods/properties/etc. that are marked abstract how are they marked abstract? Does this mean I cannot instantiate a class if it inherits ABC without defining all of that classes methods and variables etc.?
[13:44:49] <ssbr> duuude: can you share the full code and traceback?
[13:44:49] *** Joins: ezakimak (~ezakimak@c-174-52-132-123.hsd1.ut.comcast.net)
[13:44:56] <TML> paul424: Sorry, I don't have any frame of reference to understand the question
[13:45:11] <ssbr> duuude: it's probably the `s` command in the struct.pack command list, but I don't see where struct.pack is being called here
[13:45:23] <ssbr> that call to pack() has the wrong number of arguments to be a call to struct.pack
[13:45:26] <paul424> oki let's just hope it won't repeat in the future...
[13:45:33] <paul424> see you all, yo yo yo !
[13:45:36] <duuude> ssbr: not one file, does it matter?
[13:45:42] <ssbr> drogas: they're marked abstract using @abstractmethod
[13:46:03] <ssbr> duuude: I just want to see the direct call to struct.pack, wherever it is, honestly.
[13:46:05] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[13:46:27] <ssbr> (so I can point you at which argument should be bytes)
[13:46:31] *** Quits: paul424 (~paul424@2a01:111f:e22:cc00:4de5:89c6:c0be:9f1e) (Quit: paul424)
[13:46:39] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[13:46:42] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:47:19] <drogas> okay another question, I will leave ABC for now and revisit it at some other time.
[13:47:29] <drogas>         self.points = self.points @ rotation_matrix(angle, axis)
[13:47:29] <drogas> What is the role of @ here
[13:48:26] <ssbr> drogas: matrix multiplication
[13:48:32] <ssbr> https://www.python.org/dev/peps/pep-0465/
[13:49:18] <drogas> so a fancy way of writing *
[13:49:45] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[13:49:58] <ssbr> drogas: often * is element-wise multiplication.
[13:50:47] <varaindemian> anyone?
[13:51:07] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[13:51:07] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 256 seconds)
[13:51:07] *** Quits: viaSanctus (~viaSanctu@user/viasanctus) (Ping timeout: 256 seconds)
[13:51:11] <TML> varaindemian: No idea, you're doing importlib black magic that I've never had call to touch or understand
[13:51:30] <varaindemian> :(
[13:52:03] <drogas> ssbr okay I did quick python sesh and it seems @ is the same as `np.dot`
[13:52:18] <ssbr> drogas: yes, that sounds about right
[13:53:27] *** Joins: argument (~0ptions@90.249.16.86)
[13:53:27] *** Quits: argument (~0ptions@90.249.16.86) (Changing host)
[13:53:27] *** Joins: argument (~0ptions@user/argument)
[13:53:44] <jaggz> TML, thanks :}
[13:54:21] <varaindemian> my  goal https://www.irccloud.com/pastebin/suiTaILZ/
[13:54:34] <varaindemian> TML: pretty much that's what I am trying to achieve
[13:54:45] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:55:30] *** Joins: Blankspace (~androirc@user/blankspace)
[13:55:43] <jim> teelrabbit, hi
[13:55:48] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[13:56:39] <jim> teelrabbit, by the way, the person who gave that talk is here...
[13:57:24] *** Joins: elena_re (~elena@213.194.126.155)
[13:58:32] *** Quits: Blankspace (~androirc@user/blankspace) (Client Quit)
[13:58:55] *** Quits: kickingvegas (~cchoi@c-67-170-234-150.hsd1.ca.comcast.net) (Quit: leaving)
[13:59:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[13:59:37] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[13:59:58] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:00:12] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:240f:2de:4550:ff01)
[14:00:12] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:240f:2de:4550:ff01) (Changing host)
[14:00:12] *** Joins: skapata (~Skapata@user/skapata)
[14:00:32] <TML> varaindemian: 🤷🏻 - again, never had occasion to try importlib
[14:01:00] <varaindemian> TML: alright, thanks
[14:01:04] <varaindemian> :(
[14:01:55] *** Joins: GuestCR (~GuestCR@mail.juralliance.fr)
[14:02:56] *** Quits: GuestCR (~GuestCR@mail.juralliance.fr) (Client Quit)
[14:04:43] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[14:06:25] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[14:07:46] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[14:08:17] *** Joins: zaquest (~notzaques@5.130.79.72)
[14:08:33] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[14:11:20] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8)
[14:11:39] *** Joins: Vonter (~Vonter@user/vonter)
[14:11:48] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:11:49] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[14:12:10] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[14:12:37] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 240 seconds)
[14:12:38] *** Quits: kmh_ (~kmh@94.31.106.215) (Quit: Leaving)
[14:13:13] *** Quits: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald) (Ping timeout: 256 seconds)
[14:14:21] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[14:14:36] *** Joins: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald)
[14:15:24] *** Quits: walterwhip (~www@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[14:15:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[14:16:17] *** Joins: cloudcell (sid48145@id-48145.tinside.irccloud.com)
[14:17:17] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:18:39] *** Joins: bittin (~bittin@fedora/bittin)
[14:21:11] *** Quits: Batzy (~quassel@user/batzy) (Ping timeout: 245 seconds)
[14:21:45] *** Joins: Batzy (~quassel@user/batzy)
[14:21:53] *** Joins: c4017w__ (~c4017@209.52.68.8)
[14:21:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[14:24:11] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:25:07] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[14:25:12] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:25:21] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[14:25:30] *** Lord_of_Life_ is now known as Lord_of_Life
[14:26:27] *** Joins: esther (~esther@2607:fb90:5fe0:f802:7ad3:db2e:672e:5473)
[14:26:27] *** Quits: bluedust_ (~bluedust@117.222.188.38) (Read error: Connection reset by peer)
[14:26:53] *** Joins: bluedust (~bluedust@103.160.194.110)
[14:26:54] *** Joins: imp (~imp@179-191-215-167.static.sumicity.net.br)
[14:27:43] *** Joins: driib26 (~driib@185.65.135.253)
[14:27:54] *** Joins: kmh (~kmh@2a00:6020:5004:6800:460a:ef03:e89d:7820)
[14:28:24] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[14:29:37] *** Quits: driib2 (~driib@185.65.135.238) (Ping timeout: 240 seconds)
[14:29:37] *** driib26 is now known as driib2
[14:30:37] *** Quits: esther (~esther@2607:fb90:5fe0:f802:7ad3:db2e:672e:5473) (Ping timeout: 240 seconds)
[14:31:56] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[14:33:05] *** Joins: jazzy2 (~jaziz@user/jaziz)
[14:33:51] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[14:33:53] *** Joins: nottorp (~none@2a02:a58:8563:e400:9d28:7cf6:54e:1809)
[14:33:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[14:35:42] *** Joins: ekathva (~ekathva@2001:999:51:be01:2c4a:6b25:b5d5:f2c9)
[14:36:47] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 256 seconds)
[14:38:43] *** Quits: mxp (~mxp@185.16.205.131) (Ping timeout: 250 seconds)
[14:38:45] *** Quits: tobybl (~tobybl@dhcp-199-233.inf.ed.ac.uk) (Remote host closed the connection)
[14:42:36] *** Quits: parv (~quass@user/parv) (Quit: parv)
[14:43:58] *** Joins: mxp (~mxp@185.16.205.131)
[14:44:12] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:45:29] *** Joins: DnzAtWrk (~DnzAtWrk@1408.pc.puv.fi)
[14:46:17] *** Joins: Naan` (~Naan@user/naan)
[14:46:59] *** Quits: pycode1 (~pycode3@2001:b07:5d28:551:529e:9660:b012:80fe) (Ping timeout: 256 seconds)
[14:48:41] *** Quits: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald) (Ping timeout: 256 seconds)
[14:49:17] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 240 seconds)
[14:51:52] *** Joins: walterwhip (~www@user/walterwhip)
[14:52:33] *** Quits: walterwhip (~www@user/walterwhip) (Client Quit)
[14:52:39] *** Quits: Nigma (~magnus@87.61.126.226) (Ping timeout: 256 seconds)
[14:53:27] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[14:53:51] *** Quits: willcl_ark (~willcl-ar@2001:470:69fc:105::1:620a) (Changing host)
[14:53:51] *** Joins: willcl_ark (~willcl-ar@user/willcl-ark/x-8282106)
[14:54:33] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:55:20] *** Quits: revolve_ (~u0_a227@82-132-236-209.dab.02.net) (Read error: Connection reset by peer)
[14:55:38] *** Quits: teelrabbit (~teelrabbi@206.214.239.17) (Quit: Leaving)
[14:56:12] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[14:56:48] *** Joins: Nigma (~magnus@87.61.126.226)
[14:57:48] *** Joins: revolve (~u0_a227@82-132-239-10.dab.02.net)
[15:00:17] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 240 seconds)
[15:01:43] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Ping timeout: 256 seconds)
[15:02:07] *** Joins: Stas_ (~Stas@78.162.42.17)
[15:02:16] *** Quits: SlaveGeek334269 (~SlaveGeek@gateway/vpn/pia/slavegeek334269) (Remote host closed the connection)
[15:03:08] *** Joins: mixfix41 (~sdenyninn@user/mixfix41)
[15:03:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[15:04:47] *** Quits: lbalhar (~lbalhar@spsei.osanet.cz) (Ping timeout: 256 seconds)
[15:04:49] *** Joins: blindguard (~blindguar@2a02:908:1864:c200:e9df:eeac:1563:f38a)
[15:05:36] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:05:41] *** Quits: Stas__ (~Stas@78.162.42.17) (Ping timeout: 256 seconds)
[15:06:37] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[15:08:30] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[15:09:14] *** Joins: dme86 (~dan@user/dan86)
[15:09:32] <vladoski> if I have two "app/" directories that contains some subpackages
[15:09:50] <vladoski> and these two app directories are namespace packages so without any init dunder
[15:10:09] <vladoski> file, I can import from them easily with app.foo right?
[15:10:37] *** Quits: reset (~reset@user/reset) (Quit: reset)
[15:10:44] *** Joins: rsync (~cristi@86.121.43.189)
[15:10:44] *** Joins: SOMBRIO (~SOMBRIO@177.137.119.132)
[15:11:53] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[15:11:54] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[15:12:04] *** Parts: bittin (~bittin@fedora/bittin) ()
[15:12:09] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Remote host closed the connection)
[15:13:13] *** Joins: DnzAtWrk3 (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[15:13:42] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[15:13:52] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[15:14:25] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[15:15:10] *** Joins: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald)
[15:16:07] *** Quits: DnzAtWrk (~DnzAtWrk@1408.pc.puv.fi) (Ping timeout: 256 seconds)
[15:17:06] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Quit: Leaving)
[15:17:44] *** Quits: dme86 (~dan@user/dan86) (Quit: leaving)
[15:20:21] *** Joins: dme86_ (~dan@user/dan86)
[15:20:34] *** Quits: dme86_ (~dan@user/dan86) (Client Quit)
[15:22:22] *** Joins: c4017w_ (~c4017@209.52.68.8)
[15:23:32] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[15:23:32] *** Joins: chl (~chl_@user/chl)
[15:24:03] *** Quits: rustyshackleford (uid236774@helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[15:24:30] *** Joins: bluedust_ (~bluedust@117.222.188.38)
[15:25:45] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[15:27:55] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 250 seconds)
[15:27:57] *** Quits: bluedust (~bluedust@103.160.194.110) (Ping timeout: 240 seconds)
[15:29:09] *** Quits: Vonter (~Vonter@user/vonter) (Read error: Connection reset by peer)
[15:29:32] *** Quits: Madda (~Madda@2a05:f6c3:1935:0:2990:3a03:c1e1:2949) (Remote host closed the connection)
[15:29:49] *** Joins: Madda (~Madda@2a05:f6c3:1935:0:2990:3a03:c1e1:2949)
[15:31:18] *** Joins: davor (~davor@user/davor)
[15:31:30] *** Quits: DnzAtWrk3 (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Read error: Connection reset by peer)
[15:32:36] *** Joins: Emet-Selch (~haise01@user/haise01)
[15:32:54] *** Emet-Selch is now known as haise01
[15:32:58] *** Joins: DnzAtWrk3 (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[15:33:15] *** Joins: summersault (~summersau@179.221.251.36)
[15:34:15] *** Quits: johnjaye (~pi@173.209.65.233) (Ping timeout: 256 seconds)
[15:34:15] *** Joins: redsith (~redsith@45.81.189.55)
[15:34:15] *** Quits: chl (~chl_@user/chl) (Ping timeout: 256 seconds)
[15:34:35] *** Quits: mspe (~user@tilde.team/user/mspe) (Quit: WeeChat 2.8)
[15:35:11] *** Quits: redsith (~redsith@45.81.189.55) (Remote host closed the connection)
[15:35:43] *** Joins: redsith (~user@45.81.189.55)
[15:36:02] *** Joins: Vonter (~Vonter@user/vonter)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:17] *** Quits: Azem (~haise01@user/haise01) (Ping timeout: 240 seconds)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:54] *** Joins: tortal (~tortal@217-215-62-17-no247.tbcn.telia.com)
[15:36:58] *** Quits: nomic (~nomic@185.192.69.3) (Quit: Leaving)
[15:37:08] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[15:37:13] *** Quits: tortal (~tortal@217-215-62-17-no247.tbcn.telia.com) (Changing host)
[15:37:13] *** Joins: tortal (~tortal@user/tortal)
[15:37:17] *** Quits: summersault (~summersau@179.221.251.36) (Ping timeout: 240 seconds)
[15:37:26] *** Quits: rsync (~cristi@86.121.43.189) (Quit: Leaving)
[15:38:08] *** Joins: vukky (~vukky@wikipedia/vukky)
[15:38:11] <tortal> So many env-handlers out there now... I'm used to venv wehn it was "new" or non-standard at least. Has anyone tested some other different approach the virtualenv one
[15:38:17] *** Parts: vukky (~vukky@wikipedia/vukky) (Bye bye!)
[15:38:22] *** Joins: ice9 (~ice9@user/ice9)
[15:38:38] <tortal> other than the virtualenv* one.. and that likes it much more for instnace
[15:38:39] <deniska> tortal: virtualenv predates venv and does more or less the same thing
[15:38:47] *** Joins: vukky (~vukky@wikipedia/vukky)
[15:38:48] <tortal> yeye
[15:38:55] <tortal> im talkjing aobut non-venv/virtualenv
[15:39:01] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[15:39:02] <tortal> that does "more"
[15:39:41] <tortal> venv is barebones.. it has one function. create helper scripts and copy binaries.
[15:39:55] <tortal> and works great
[15:40:04] <supakeen> what else do you want to do?
[15:40:45] <tortal> now.. I'm wondering what pew, or even autoenv is etc
[15:40:52] <tortal> im just being curious
[15:40:52] <supakeen> personally i use `venv` only, and pyenv to manage python versions for local development
[15:41:17] *** Quits: nottorp (~none@2a02:a58:8563:e400:9d28:7cf6:54e:1809) (Quit: This computer has gone to sleep)
[15:41:19] <supakeen> oh, that's stuff to automatically create and manage virtual environments based on the directory you're in
[15:41:23] <deniska> tortal: you can try them out for yourself and see whether you like them, for my usecases I see little reason to look for anything else
[15:41:26] <tortal> supakeen, That was my initial idea to do actualy.. I just haven't done Python for many months
[15:41:57] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 240 seconds)
[15:41:57] *** Quits: shad (~shad@user/shad) (Ping timeout: 256 seconds)
[15:42:01] *** jazzy2 is now known as jazzy
[15:42:08] <supakeen> some people like to implicitly have a virtual environment for each thingy they work on which sure, i don't like doing that and want to do that myself :)
[15:42:27] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[15:42:46] <tortal> "oh, [...] manage virtual environments based on the directory you're in": It sure simplifies a lot with the activate shell scripts
[15:42:51] *** Joins: Elodin (~elodin@user/elodin)
[15:42:57] *** Joins: nomic (~nomic@2a00:23c7:ec90:a501:b0:4012:86ae:6130)
[15:42:57] <deniska> I also don't use activate
[15:43:03] <tortal> eh
[15:43:12] <deniska> .venv/bin/python
[15:43:26] <tortal> yes. but activate makes all other calls
[15:43:29] <supakeen> i do the same as deniska though this thing is a bit more controversial between coworkers and me
[15:43:29] <deniska> or venv\Scripts\python.exe :)
[15:43:29] *** Quits: dg_dg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222) (Read error: Connection reset by peer)
[15:43:33] <tortal> that you don't specifically call yourself
[15:43:38] <tortal> to call correctly
[15:43:43] <supakeen> (they always say i'm mad for typing venv/bin/python -m myproject all the time)
[15:43:49] <tortal> that is mad
[15:44:02] <deniska> That way I know which python I'm running
[15:44:10] <tortal> Yes....
[15:44:13] <tortal> wiw
[15:44:15] *** Joins: ss4 (~wootehfoo@user/wootehfoot)
[15:44:20] <tortal> awesome thinking here. wwo
[15:44:36] <tortal> what's "PEW" ?!
[15:44:45] <tortal> ohttps://www.google.com/search?q=venv+alternatives
[15:44:46] *** Joins: tobybl (~tobybl@dhcp-199-233.inf.ed.ac.uk)
[15:44:46] <deniska> If a python script wants to subprocess to other python scripts, it should call sys.executable anyway
[15:44:59] <tortal> https://www.google.com/search?q=venv+alternatives *
[15:45:04] <supakeen> PEW is the same sort of wrapper around venv if I recall correctly
[15:45:05] <tortal> what is this list
[15:45:07] <deniska> And if I'm writing a script for init system, specifying the full path to venv just simplifies everything
[15:45:37] <supakeen> anyways, there are as many workflows and preferences as there are programmers
[15:45:48] <supakeen> this is a thing of what do you prefer, try some out for a while :)
[15:45:48] *** Parts: vukky (~vukky@wikipedia/vukky) (Bye bye!)
[15:45:49] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[15:45:49] <tortal> "Python Env Wrapper is a set of commands to manage multiple virtual environments. Pew can create, delete and copy your environments, using a single command to switch to them wherever you are, while keeping them in a single (configurable) location." Wow
[15:46:01] <tortal> yes, i've been working as engineer for 10 years now
[15:46:06] <tortal> thank you
[15:46:37] <tortal> devops atm. I just happen to been on sick leave
[15:46:48] *** Joins: maromau (~mauro@151.62.26.169)
[15:46:56] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:46:58] *** Joins: widp (~user@165.225.123.63)
[15:47:02] <tortal> and I have like almost 8 months to re-sync myself with all tech news
[15:47:25] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10f5:7936:8c47:5652:a14e:1810) (Ping timeout: 250 seconds)
[15:47:25] <tortal> i *have* been already on sick leave. Now I'm back.
[15:47:43] *** Joins: mspe (~user@tilde.team/user/mspe)
[15:47:47] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:47:47] *** Quits: bluedust_ (~bluedust@117.222.188.38) (Remote host closed the connection)
[15:48:03] <jazzy> wow nedbat, I just read about the acquisition
[15:48:05] <jazzy> congrats
[15:48:16] <tortal> the full path? deniska ? I love knowing where i are.. (cd -P is set as alias for me)
[15:48:24] <nedbat> jazzy: thanks I guess :)
[15:48:25] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 256 seconds)
[15:48:35] <jazzy> nedbat, is it not a good thing?
[15:48:56] <jazzy> you rich now right
[15:49:11] <nedbat> jazzy: it's not a bad thing, but it adds complexity, and no money went to employees, since we were a non-profit.
[15:49:19] <jazzy> O
[15:49:28] *** Quits: ss4 (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[15:49:34] <jazzy> Still, shows you guys are doing great thigns
[15:50:13] <tortal> off topic. ON TOPIC is everything that suits me. For instance. Incentive to try virtualenv-alternatives.
[15:50:50] <tortal> I neve actually thought that venv and virtualenv was different.. but it make sense.. first there was only virtualenv -  then they are now in tow packages
[15:51:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[15:51:29] * tortal is joking of course
[15:51:42] *** Joins: armavirumquecano (~joanne@31.4.179.25)
[15:51:56] <supakeen> since virtualenv was such a good idea, it was put into the standard library as venv so everyone could have it :)
[15:52:23] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[15:52:28] <tortal> ic
[15:52:32] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[15:52:38] *** Quits: armavirumquecano (~joanne@31.4.179.25) (Client Quit)
[15:53:09] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[15:53:16] *** Joins: djhankb (~djhankb@208.113.164.68)
[15:53:24] <deniska> So that people who don't want to install additional dependencies could benefit from it too
[15:53:30] <deniska> (not that they need it too much…)
[15:53:51] *** Quits: maxzor__ (~maxzor@laubervilliers-657-1-70-103.w90-63.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[15:54:13] *** Joins: Vonter (~Vonter@user/vonter)
[15:55:31] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:56:15] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[15:57:32] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10f5:7936:8c47:5652:a14e:1810)
[15:58:01] *** Quits: joaofukuda (~joaofukuk@2804:431:c7f5:a3c3:9fdb:d7d3:c39f:3ce6) (Quit: Leaving)
[15:58:17] *** Joins: joaofukuda (~joaofukuk@2804:431:c7f5:a3c3:9fdb:d7d3:c39f:3ce6)
[15:59:37] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:59:38] *** Joins: fukuda (~fukuda@2804:431:c7f5:a3c3:9fdb:d7d3:c39f:3ce6)
[15:59:46] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[16:00:39] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 256 seconds)
[16:01:02] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[16:01:18] *** Quits: Common (~Common@096-033-221-075.res.spectrum.com) (Ping timeout: 250 seconds)
[16:02:01] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[16:02:33] *** Quits: fukuda (~fukuda@2804:431:c7f5:a3c3:9fdb:d7d3:c39f:3ce6) (Client Quit)
[16:02:41] *** Joins: fukuda (~fukuda@2804:431:c7f5:a3c3:9fdb:d7d3:c39f:3ce6)
[16:03:34] *** Parts: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[16:03:41] *** Joins: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1)
[16:03:41] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[16:03:42] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[16:04:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[16:04:56] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:05:48] *** Joins: cdown (~cdown@188.214.11.14)
[16:05:54] *** Quits: joaofukuda (~joaofukuk@2804:431:c7f5:a3c3:9fdb:d7d3:c39f:3ce6) (Quit: Leaving)
[16:06:33] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[16:07:30] *** Parts: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[16:07:41] *** Joins: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1)
[16:08:21] *** Joins: powftw (uid448161@id-448161.lymington.irccloud.com)
[16:09:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[16:09:47] *** Joins: shad (~shad@user/shad)
[16:10:03] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Ping timeout: 276 seconds)
[16:11:24] <jazzy> is dict insertion order preserved?
[16:11:27] *** Joins: Guest3 (~Guest3@218.7.204.52)
[16:11:31] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:11:55] <Guest3> any people in there?
[16:12:21] <xheimlich> does newvalue = -value resolve to 0-value or (-1)*value?
[16:12:24] <MajorBiscuit> jazzy: Since 3.7, yes
[16:12:38] <xheimlich> asking for a friend with a custom __mul__ implementation.
[16:12:39] <MajorBiscuit> jazzy: before 3.7 it's not guaranteed
[16:12:47] <jazzy> thanks
[16:13:07] *** Quits: Gurkenglas (~Gurkengla@dslb-090-186-104-244.090.186.pools.vodafone-ip.de) (Read error: Connection reset by peer)
[16:13:48] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[16:14:26] *** Joins: alive (~alive@ng.nixy.dk)
[16:14:36] *** Joins: daidoji (~daidoji@104-52-250-5.lightspeed.gnvlsc.sbcglobal.net)
[16:14:43] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8) (Ping timeout: 250 seconds)
[16:15:00] <deniska> xheimlich: neither, __neg__
[16:15:09] <alive> Hi, sorry for the absolutely most basic ever question on the planet about Python. Let's say i'm trying to figure out how to work with the 'bcrypt' library and i need a list of it's functions and their parameters. Where would I see such documentation online?
[16:15:57] *** Quits: duuude (~user@user/duuude) (Ping timeout: 240 seconds)
[16:15:58] <alive> For example by googling "python bcrypt" i find the pypi project page for bcrypt which has a nice version history but lists no functions and no parameters for them.
[16:16:11] <alive> looking through the navigation, i don't see any obvious "Documentation" link
[16:16:14] <deniska> alive: https://github.com/pyca/bcrypt/ it links this page as its homepage
[16:16:22] <deniska> which has some usage examples in readme
[16:16:32] <xheimlich> ON THE PYPI PAGE YOU CAN USUALLY FIND A LINK TO THE HOMEPAGE
[16:16:36] <xheimlich> oh no sorry.
[16:16:51] *** Joins: bluedust (~bluedust@117.204.139.130)
[16:16:53] <alive> OK thank you, so this is the preferred way of learning a library in python?
[16:17:14] <alive> Or is there a more comprehensive way? What if the developer didn't feel like including a function of their libary in an example
[16:17:21] <xheimlich> you can always use help in an interactive prompt.
[16:17:40] *** Joins: LucaTM (~LucaTM@user/lucatm)
[16:17:55] <alive> Ah! The interactive help function is very useful. Thank you xheimlich
[16:18:03] <deniska> alive: usually bigger libraries have some docs online. Also you can use `python -m pydoc bcrypt` to view autogenerated docs
[16:18:21] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[16:18:22] <alive> Thanks deniska
[16:18:47] <alive> The pydoc is great
[16:18:56] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[16:19:06] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[16:19:09] <alive> OK thanks guys, I feel like I'm better equipped now
[16:19:15] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[16:19:15] <deniska> or even `python -m pydoc -b` and then you get autogenerated docs in the browser
[16:19:23] <alive> :o
[16:19:28] *** Joins: slav0nic (slav0nic@python.su)
[16:19:29] <alive> Gotta try this
[16:19:30] *** Joins: Guest14 (~Guest14@ec2-18-192-137-41.eu-central-1.compute.amazonaws.com)
[16:19:35] *** Quits: elias117 (~elias117@user/elias117) (Ping timeout: 256 seconds)
[16:20:37] *** Quits: DnzAtWrk3 (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:20:57] *** Quits: revolve (~u0_a227@82-132-239-10.dab.02.net) (Ping timeout: 240 seconds)
[16:20:57] <Guest14> Hi, I have a package "A" that have requirements.txt and dev-requirements.txt and uses a common package called "common", I depend on common from a requirements.txt. now I have added a requirement for common which is only for tests, there is a way to be depend on common's dev-requirements.txt from A's dev-requirements.txt only?
[16:21:45] *** Joins: dme86 (~dan@user/dan86)
[16:22:02] *** Joins: DnzAtWrk3 (~DnzAtWrk@1408.pc.puv.fi)
[16:22:07] *** Quits: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[16:22:35] *** Joins: lxwulf (~lxwulf@user/lxwulf)
[16:22:47] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[16:22:47] *** Parts: lxwulf (~lxwulf@user/lxwulf) ()
[16:22:53] *** Joins: c4017w__ (~c4017@209.52.68.8)
[16:22:54] *** Joins: ice99 (~ice9@user/ice9)
[16:23:25] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[16:24:17] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 240 seconds)
[16:24:21] *** Quits: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com) (Ping timeout: 256 seconds)
[16:25:07] *** haise01 is now known as Azem
[16:25:45] <xheimlich> you can have two txt files and only pip install -r running_requirements.txt on your Dockerfile or whatever.
[16:26:23] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[16:26:23] <Guest14> Yea, but I'm searching if a way of running: pip install requirements-dev.txt for "A" package will run the tests requirements for common as well
[16:27:16] *** Quits: Guest3 (~Guest3@218.7.204.52) (Quit: Client closed)
[16:27:32] *** Joins: fzf404 (~fzf404@101.32.126.24)
[16:27:48] <fzf404> test
[16:27:57] <jazzy> success
[16:28:05] *** Quits: ice99 (~ice9@user/ice9) (Ping timeout: 256 seconds)
[16:28:09] *** Quits: wedwards (~wedwards@rtr0.17.31.bogert.cyberfusion.cloud) (Quit: Textual IRC Client: www.textualapp.com)
[16:28:17] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[16:28:57] *** Joins: ice9 (~ice9@user/ice9)
[16:29:53] *** Quits: fzf404 (~fzf404@101.32.126.24) (Client Quit)
[16:30:55] <jazzy> is there a way to iterate through list values starting from an index other than the first?
[16:31:22] <KirkMcDonald> jazzy: You could slice the list: for x in L[i:]:
[16:31:32] <jazzy> hm yeah
[16:31:39] *** Joins: lbalhar (~lbalhar@93.185.13.26)
[16:31:41] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[16:31:49] *** Quits: ekathva (~ekathva@2001:999:51:be01:2c4a:6b25:b5d5:f2c9) (Ping timeout: 256 seconds)
[16:31:54] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[16:31:56] <jazzy> copying a big list can be rough though
[16:32:03] <Guest14> I found a way, it's possible to add "--editable file:../../packages/common/[test]" to the requirements-dev.txt and it's working
[16:32:48] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[16:32:52] <KirkMcDonald> jazzy: Worst case, you iterate over indexes.
[16:32:56] <tykling> hello :) I wrote some tests with pytest and tox and they work well on my debian machine, but when my osx using coworker pulls the repo and runs pytest or tox, then it starts to test numpy and other dependencies; I just want it to run our own tests like it does on my machine. What gives?
[16:33:01] <jazzy> KirkMcDonald, yeah
[16:33:10] <jinsun__> itertools.islice maybe
[16:33:24] <jinsun__> that doesn't copy
[16:33:27] <nedbat> jazzy: definitely itertools.islice
[16:33:32] <jazzy> oh very nice
[16:33:35] <jazzy> thanks
[16:33:50] <jazzy> felt like too common a case for python not to have it covered
[16:33:50] <KirkMcDonald> The trouble with islice() is that skipping the initial elements takes linear time.
[16:33:54] *** Joins: karlnashville (~karl@2601:482:4280:4cf0:1eb8:32b:9ae:19e6)
[16:34:01] <jazzy> hm
[16:34:17] <jinsun__> yeah tradeoffs
[16:34:51] <nedbat> a custom class could get the best of both worlds.
[16:35:13] *** Quits: DnzAtWrk3 (~DnzAtWrk@1408.pc.puv.fi) (Ping timeout: 256 seconds)
[16:35:16] *** Joins: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de)
[16:35:35] *** Joins: zeden (~zeden@user/zeden)
[16:35:49] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[16:36:06] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[16:38:43] *** Guest2819 is now known as lastshell
[16:39:11] *** Quits: jay-m1261 (~jay-m@129.0.76.39) (Ping timeout: 256 seconds)
[16:39:12] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c)
[16:39:17] *** Quits: jay-m126 (~jay-m@129.0.76.39) (Ping timeout: 240 seconds)
[16:39:41] *** Joins: elias117 (~elias117@host-24-224-142-233.public.eastlink.ca)
[16:39:41] *** Quits: elias117 (~elias117@host-24-224-142-233.public.eastlink.ca) (Changing host)
[16:39:41] *** Joins: elias117 (~elias117@user/elias117)
[16:39:45] *** Quits: jay-m126_ (~jay-m@129.0.76.39) (Ping timeout: 256 seconds)
[16:39:57] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 240 seconds)
[16:41:56] *** Quits: Guest14 (~Guest14@ec2-18-192-137-41.eu-central-1.compute.amazonaws.com) (Quit: Client closed)
[16:42:53] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[16:43:06] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca)
[16:43:17] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:dd6e:d9a5:afdc:11dc)
[16:43:50] *** Quits: PJBoy (~PJBoy@user/pjboy) (Quit: Ping timeout: 252 seconds)
[16:44:59] *** Joins: d1cor (~diego@179.63.242.120)
[16:45:58] *** Quits: rsx (~dummy@ppp-188-174-147-214.dynamic.mnet-online.de) (Quit: rsx)
[16:45:59] *** Joins: tatarqa (~kli@ip-89-177-122-45.net.upcbroadband.cz)
[16:46:29] *** Joins: PJBoy (~PJBoy@user/pjboy)
[16:46:36] *** Joins: Barones (~Barones@user/Barones)
[16:46:38] *** Joins: magla (~gelignite@d536277f.access.ecotel.net)
[16:47:47] <lola> o/ python
[16:48:09] <lola> can one use diferent arguments when calling a function in main?
[16:48:13] <lola> so like, :
[16:48:52] <han-solo> like ?
[16:49:10] *** Joins: dez (uid92154@user/dez)
[16:50:44] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[16:51:09] *** Joins: jay-m126 (~jay-m@129.0.76.39)
[16:51:17] *** Joins: jay-m126_ (~jay-m@129.0.76.39)
[16:51:38] *** Joins: jay-m1261 (~jay-m@129.0.76.39)
[16:51:45] <lola> https://bpa.st/CNFA
[16:52:09] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[16:52:30] *** Joins: shad (~shad@user/shad)
[16:52:44] <lola> do you notice how when git_commit(extension, output_directory, page, files, redmine_instances) is called it is using files instead of file_paths when is defined above
[16:52:57] <lola> Cheers for feedback :P
[16:53:16] <lola> han-solo: ^
[16:53:27] <han-solo> the args name doesn't have to match, if that's what you are asking
[16:53:50] <lola> yes indeed
[16:53:58] <han-solo> `def func(foo, bar):..; x, y = 1, 2;func(x, y)` # is fine
[16:53:58] *** Joins: JordiGH (~jordi@user/jordigh)
[16:54:18] <lola> so if they dont match what happends?
[16:54:23] <lola> ok ...
[16:54:37] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[16:54:52] <han-solo> `foo` will be whatever was in `x` when called, similarly `bar` will be whatever was in `y`
[16:54:54] *** Joins: Gurkenglas (~Gurkengla@dslb-090-186-104-244.090.186.pools.vodafone-ip.de)
[16:55:00] <lola> so if they dont match
[16:55:00] <lola> then file_paths variable is not passed
[16:55:12] *** Quits: snalty_ (~Shhh@user/snalty) (Remote host closed the connection)
[16:55:18] <lola> ohh ok thanks
[16:55:25] *** Joins: Liblx (~Alex@2a02:810c:280:59c:a585:3a95:ffe8:acb4)
[16:55:30] <lola> so file_paths=files
[16:55:50] <han-solo> also if you have more argsm to make things clear...you can do `func(foo=x, bar=y)` too
[16:55:58] <lola> couldnt you replace all usage of files in main function by file_paths?
[16:56:06] <han-solo> yes, so if you pass `files` in the correct positional arg,s `file_paths` will `files`
[16:56:12] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[16:56:26] <lola> you know for reviewing code etc
[16:56:27] <lola> would that be more clean and better pratice
[16:56:48] <lola> ?
[16:56:48] *** Joins: snalty (~Shhh@user/snalty)
[16:56:52] <han-solo> sure...if you like...
[16:57:17] <lola> my point is why would people need to use diferent variables?
[16:57:23] <lola> why not use the same?
[16:57:27] *** Quits: snalty (~Shhh@user/snalty) (Client Quit)
[16:58:10] *** Joins: ethrl (~ethereal@user/doforlove33)
[16:59:09] <lola> Im not being able to imagine usage
[16:59:27] <lola> also now Im getting "UnboundLocalError: local variable 'file_paths' referenced before assignment"
[16:59:58] *** Joins: snalty (~Shhh@user/snalty)
[17:00:06] <lola> when doing this -> "couldnt you replace all usage of files in main function by file_paths?"
[17:00:19] <han-solo> we don;t have much visibility inside `git_commit` from the paste you provided
[17:00:57] <deniska> One name may make more sense at the invocation, another name can make more sense at the call site
[17:01:09] <deniska> One name may make more sense at the definition*, another name can make more sense at the call site
[17:01:37] <deniska> For a somewhat extreme example, it's `def sorted(iterable)`, but then you probably call sorted(students) or something :)
[17:01:38] *** Quits: bluedust (~bluedust@117.204.139.130) (Remote host closed the connection)
[17:02:06] <han-solo> that's a good example imo
[17:02:09] *** Joins: nomic2 (~nomic@185.217.117.244)
[17:02:56] *** Joins: califax (~califax@user/califx)
[17:03:24] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Read error: Connection reset by peer)
[17:04:05] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[17:04:17] *** Quits: nomic (~nomic@2a00:23c7:ec90:a501:b0:4012:86ae:6130) (Ping timeout: 240 seconds)
[17:04:39] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[17:04:58] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:05:18] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[17:05:51] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:05:53] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[17:06:35] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[17:06:44] *** Quits: SGautam (uid286066@ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[17:07:23] <xheimlich> is it common style to put dunder method overrides *after* the main functionality methods or *before*?
[17:08:01] <grym> xheimlich: i've seen both, in about equal measure
[17:08:14] <jinsun__> I put __init__ before always
[17:08:32] <xheimlich> sure, __init__ and __call__ and __repr__
[17:08:35] *** Quits: magla (~gelignite@d536277f.access.ecotel.net) (Quit: Stay safe!)
[17:08:52] <jinsun__> other stuff I put whenever I decide I need, so no rules
[17:09:01] *** Quits: d1cor (~diego@179.63.242.120) (Read error: Connection reset by peer)
[17:09:02] *** Parts: redsith (~user@45.81.189.55) (ERC 5.4.1 (IRC client for GNU Emacs 27.2))
[17:09:23] <xheimlich> I guess I instinctively move to the end methods that are more likely to change as I develop, while earlier methods are closer to definitions.
[17:09:28] <lola> I see
[17:09:29] <lola> thanks but the oposite shouldnt really fail no?
[17:09:40] <lola> "also now Im getting "UnboundLocalError: local variable 'file_paths' referenced before assignment"
[17:09:40] <lola> when doing this -> "couldnt you replace all usage of files in main function by file_paths?""
[17:09:47] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[17:09:47] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[17:09:48] <xheimlich> I'm certainly overusing @property
[17:09:54] <lola> han-solo: deniska
[17:10:08] <lola> https://git.replicant.us/contrib/irelativism/wiki-migration-scripts/tree/redmine2git.py?id=e1e0c6ad90c993bfc4b0cb3d0653ed0bde50a1d3
[17:10:18] *** Quits: lockywolf (~lockywolf@public.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[17:10:49] *** Quits: fukuda (~fukuda@2804:431:c7f5:a3c3:9fdb:d7d3:c39f:3ce6) (Quit: WeeChat 3.4)
[17:11:50] *** Joins: redsith (~redsith@45.81.189.55)
[17:12:42] *** Quits: upsala (~zcb@185.213.155.232) (Quit: WeeChat 3.4)
[17:12:52] *** Joins: lockywolf (~lockywolf@public.lockywolf.net)
[17:13:32] <han-solo> that shouldn't raise the error you describe, this is not the updated code right ?
[17:13:39] *** Quits: Jenna16bit (~j16bit@c-73-228-39-16.hsd1.nm.comcast.net) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[17:13:54] *** Joins: Jenna16bit (~j16bit@c-73-228-39-16.hsd1.nm.comcast.net)
[17:13:57] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 240 seconds)
[17:14:34] *** Joins: d1cor (~diego@179.63.242.109)
[17:14:57] *** Joins: upsala (~zcb@185.213.155.232)
[17:15:41] *** Quits: jay-m1261 (~jay-m@129.0.76.39) (Ping timeout: 256 seconds)
[17:15:41] *** Joins: rsync (~cristi@86.121.43.189)
[17:15:57] *** Quits: jay-m126 (~jay-m@129.0.76.39) (Ping timeout: 240 seconds)
[17:16:15] *** Quits: jay-m126_ (~jay-m@129.0.76.39) (Ping timeout: 256 seconds)
[17:17:00] <lola> no
[17:17:10] <lola> I can push a branch for it
[17:17:15] <lola> give me  a second
[17:17:35] <lola> but you just need to add changes discussed above
[17:17:40] *** Quits: rsync (~cristi@86.121.43.189) (Client Quit)
[17:18:49] *** Quits: widp (~user@165.225.123.63) (Read error: Connection reset by peer)
[17:18:52] *** flyback is now known as carl_sagan
[17:19:11] *** carl_sagan is now known as flyback
[17:19:19] *** Joins: bluedust (~bluedust@117.204.139.130)
[17:20:57] *** Quits: redsith (~redsith@45.81.189.55) (Remote host closed the connection)
[17:22:06] *** Joins: rsync (~cristi@86.121.43.189)
[17:22:33] *** Quits: fedenix__ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[17:23:09] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:23:22] *** Joins: c4017w_ (~c4017@209.52.68.8)
[17:24:00] *** Joins: fedenix__ (~fedenix@gateway/tor-sasl/fedenix)
[17:24:39] *** Quits: Barones (~Barones@user/Barones) (Read error: Connection reset by peer)
[17:24:40] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:26:47] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[17:27:39] *** Joins: Barones (~Barones@user/Barones)
[17:27:43] *** Quits: kmh (~kmh@2a00:6020:5004:6800:460a:ef03:e89d:7820) (Quit: Leaving)
[17:28:03] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[17:28:06] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:29:33] *** Joins: DnzAtWrk (~DnzAtWrk@1408.pc.puv.fi)
[17:32:07] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[17:32:38] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[17:33:09] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:dd6e:d9a5:afdc:11dc) (Quit: Textual IRC Client: www.textualapp.com)
[17:33:15] *** Joins: jay-m126 (~jay-m@129.0.76.39)
[17:33:27] *** Quits: ethrl (~ethereal@user/doforlove33) (Remote host closed the connection)
[17:33:42] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[17:34:33] *** Joins: patrice (~patrice@user/patrice)
[17:34:57] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Ping timeout: 256 seconds)
[17:35:21] *** Joins: Pickchea (~private@user/pickchea)
[17:36:05] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[17:37:05] *** Joins: jay-m126_ (~jay-m@129.0.76.39)
[17:37:09] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Ping timeout: 276 seconds)
[17:37:29] *** Joins: jay-m1261 (~jay-m@129.0.76.39)
[17:37:52] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[17:38:23] *** Joins: amrooting (~amrooting@95.211.187.223.adsl.inet-telecom.org)
[17:38:39] *** Quits: mcpackey (~pm0001@p5dc1ccfe.dip0.t-ipconnect.de) (Remote host closed the connection)
[17:39:43] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[17:41:22] *** Joins: gambl0re (~gambl0re@cpe688f2e1852a3-cm688f2e1852a0.cpe.net.cable.rogers.com)
[17:42:34] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[17:42:42] *** Joins: maxzor (~maxzor@2a01cb04054faa00ba55ec6489e8f679.ipv6.abo.wanadoo.fr)
[17:42:56] *** Joins: reticuli (~reticuli@user/reticuli)
[17:43:15] *** Quits: d1cor (~diego@179.63.242.109) (Read error: Connection reset by peer)
[17:43:19] *** Quits: lakrass (~lakrass@user/lakrass) (Quit: WeeChat 3.4)
[17:43:51] *** Quits: rsync (~cristi@86.121.43.189) (Quit: leaving)
[17:44:20] *** Joins: lakrass (~lakrass@user/lakrass)
[17:44:36] *** Joins: Kruppt (~Kruppt@50-111-49-4.drhm.nc.frontiernet.net)
[17:45:12] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[17:45:57] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 240 seconds)
[17:46:12] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Remote host closed the connection)
[17:46:36] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[17:46:45] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[17:47:01] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 250 seconds)
[17:47:31] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Remote host closed the connection)
[17:48:22] *** Quits: Nigma (~magnus@87.61.126.226) (Quit: Lost terminal)
[17:48:55] *** Joins: d1cor (~diego@179.63.242.122)
[17:49:30] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[17:49:55] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[17:51:46] *** Joins: johnjaye (~pi@173.209.65.233)
[17:53:13] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[17:54:01] *** Quits: BillyZane2 (~BillyZane@185.202.221.34) (Read error: Connection reset by peer)
[17:54:21] *** Joins: BillyZane (~BillyZane@185.202.221.34)
[17:54:39] *** Joins: esther (~esther@2607:fb90:5fe2:d14d:f2af:96f:59f4:60f8)
[17:54:47] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:ee49:852:ea2e:e7ce) (Read error: Connection reset by peer)
[17:54:59] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:ee49:852:ea2e:e7ce)
[17:55:05] *** Joins: MrCollinsGA (~MrCollins@38.21.140.217)
[17:55:48] *** Joins: kmh (~kmh@2a00:6020:5004:6800:9881:9737:5341:5446)
[17:56:36] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[17:57:23] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[17:57:25] *** Joins: theprophet (~theprophe@85.114.228.184)
[17:57:57] *** Quits: d1cor (~diego@179.63.242.122) (Ping timeout: 240 seconds)
[17:58:57] *** Quits: esther (~esther@2607:fb90:5fe2:d14d:f2af:96f:59f4:60f8) (Ping timeout: 240 seconds)
[17:59:32] <theprophet> When checking for equal/not equal values , when values have multiple objects do you need to iterate over it? for example iterate over list  or this ---> != and this ---> == are enough?
[17:59:34] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[18:00:23] <theprophet> when values are* multiple objects.
[18:00:49] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[18:01:12] *** Quits: fedenix__ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[18:01:23] *** Quits: Forsaken87 (~quassel@2a02:908:1866:e360:b79:88e2:d2ce:2e71) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:01:31] *** Joins: fedenix__ (~fedenix@gateway/tor-sasl/fedenix)
[18:02:18] <theprophet> i mean , you must check everysingle item in list one by one or checking the whole thing by checking variable  at once is enough?
[18:03:54] *** Joins: Forsaken87 (~quassel@2a02:908:1866:e360:b79:88e2:d2ce:2e71)
[18:03:56] <jinsun__> you don't have to iterate "manually", list's __eq__ implementation will iterate internally
[18:04:19] <xheimlich> some days tabnine is in intimate mindmeld with me, some days it just gets in the way.
[18:04:57] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[18:05:06] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[18:05:22] <theprophet> jinsun__ ok, so.  instead of for items in my_list ,,,  if items == somelist ,, i can do my_list == somelist  . right?
[18:05:59] <jinsun__> yes, the behavior may be different if there are objects inside the list that are not equal to themselves
[18:06:14] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[18:07:10] <theprophet> jinsun__ got it, to check for exact same numbers and letters is == this ok?
[18:07:11] <emerent> it won't even iterate if the lengths are different for example
[18:07:23] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:07:36] <jinsun__> uh now that I read that code again, not sure what you are doing
[18:08:43] <theprophet> i am trying the lottery project., theres a list of ready numbers, which get pulled out. and then appended to the winning ticker, and then i compare my ticket to that winning ticket.
[18:08:58] <jinsun__> you're comparing the items inside with somelist in the first loop, and comparing my_list with somelist in the second case
[18:09:10] <jinsun__> which will do different things always
[18:09:54] <theprophet> also i am using random module
[18:10:00] <theprophet> and i got stuck
[18:10:14] *** Quits: Liblx (~Alex@2a02:810c:280:59c:a585:3a95:ffe8:acb4) (Quit: Leaving)
[18:10:16] *** Joins: mug3n_ (~mugen@gateway/tor-sasl/mugen)
[18:10:19] *** Quits: Jenna16bit (~j16bit@c-73-228-39-16.hsd1.nm.comcast.net) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[18:10:38] <theprophet> whenever i run the code, while loop does not pull random items from the possibilietes list
[18:10:39] *** Joins: SaltHillStroller (~SaltHillS@206.223.160.26)
[18:10:39] *** Quits: greasybyte (~greasybyt@pool-98-116-192-195.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[18:10:54] *** Quits: lakrass (~lakrass@user/lakrass) (Quit: WeeChat 3.4)
[18:11:23] <theprophet> it just pulls one thing and runs that code over and over again , and what i am trying to do is ,i want different items everytime
[18:11:42] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8)
[18:11:55] <theprophet> before i reach the point, where possibilietes list and my ticket are the same
[18:11:57] <bjs> theprophet: what is the code?
[18:12:02] <theprophet> hold on
[18:13:02] <theprophet> bjs https://dpaste.org/ebpJ
[18:13:33] *** Quits: mug3n (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 276 seconds)
[18:14:03] <bjs> theprophet: I see two while loops, which is the one that has the problem
[18:14:15] <theprophet> second one
[18:14:30] <bjs> theprophet: what is wrong with it/what did you want it to do?
[18:14:55] <theprophet> because it picks the winning_items list and only shows what was picked in the first place
[18:15:06] <theprophet> when looping
[18:15:23] <bjs> theprophet: what is the second loop supposed to do? why is there a loop
[18:15:30] <theprophet> it does not change the items so once it would match with my_ticket
[18:15:58] <bjs> theprophet: but what is the loop supposed to do?
[18:16:11] <bjs> I'm not seeing why there's a loop at all, what is it trying to do?
[18:16:16] <theprophet> thats what i am saying, the second loop suppose to match the winning_items with my_ticket
[18:16:22] <bjs> theprophet: what does match mean?
[18:16:28] <theprophet> match, like same
[18:16:32] <theprophet> like i won you know?
[18:16:42] <bjs> theprophet: what are the rules for winning?
[18:16:54] <theprophet> so my ticket and the winning_items match
[18:16:56] <theprophet> are same
[18:17:20] <bjs> theprophet: so if I pull out [2, 1, 'a', 'b'] do you win or lose?
[18:17:22] <theprophet> there are 4 items in ever list except of lottery_items of course
[18:17:23] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[18:17:25] <bjs> I mean they aren't the same, the order is different
[18:17:30] <bjs> so you lose?
[18:17:36] *** Joins: dme86 (~dan@user/dan86)
[18:17:39] <theprophet> no if order is different you win
[18:17:51] <theprophet> but it has to be the same items
[18:18:07] <bjs> theprophet: maybe you want to loop over the items in my_ticket
[18:18:22] <bjs> and check if each are in winning_items, and if there is one that is not, then you lose?
[18:18:43] <jinsun__> or collections.Counter maybe
[18:19:06] <bjs> theprophet: what if my ticket is [1,1,1,1] do I win or lose?
[18:19:43] <theprophet> [1, 'b' , 'c' 2] is same as ['b', 'c', 2, 1]
[18:19:53] <theprophet> if it matches the
[18:19:59] <theprophet> the winning items
[18:20:40] <theprophet> if your ticket is 1111 and the pulled numbers are 1111 you win
[18:20:41] <bjs> theprophet: I recommend just writing a for loop over the ticket and check each item and store True/False for if you win or lose
[18:20:51] <bjs> there are fancier ways sure but you can always do this
[18:21:23] <bjs> theprophet: hmm, but you cannot pull [1,1,1,1] so I don’t follow.
[18:21:39] <theprophet> no
[18:21:44] <theprophet> of course you cant
[18:21:52] <theprophet> i tought your question was hypotethical
[18:22:21] *** Joins: stwange (~j@82.21.202.140)
[18:22:27] *** Quits: mspe (~user@tilde.team/user/mspe) (Quit: WeeChat 2.8)
[18:22:31] <theprophet> what i meant was even if the order is random, the items has to be identical
[18:22:47] <theprophet> all 4 items
[18:22:51] <jinsun__> ah if there can't be duplicated then just makes sets and compare them
[18:22:59] <stwange> Sorry I'm sure this is a stupid mistake because I've used this countless times, but why am I getting invalid syntax from print(f"{likes}") ? If I remove the f it works
[18:23:19] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[18:23:25] <jinsun__> stwange: which version of python?
[18:23:33] <bjs> theprophet: I would say, write a for loop and set a winner variable; you know how to do these things already
[18:23:45] <bjs> there are fancier ways but I debate whether they are more readable
[18:23:51] <stwange> jinsun_ thank you, I was using the wrong binary
[18:23:53] *** Joins: c4017w__ (~c4017@209.52.68.8)
[18:23:54] <theprophet> bjs you mean get rid of second while loop? or inside it?
[18:24:15] <bjs> theprophet: delete the second while loop, and rewrite it.
[18:24:42] <theprophet> bjs ok let me try that.
[18:25:03] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[18:25:57] <grym> stwange: it's a fun accidental "am i using a supported python" smoke test
[18:26:44] <deniska> mine is being used to typing python including a minor version number
[18:26:53] *** Joins: cdown_ (~cdown@163.114.131.1)
[18:27:08] <deniska> python3.10, 3.9, 3.8, oh no
[18:27:17] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 240 seconds)
[18:27:38] <SnoopJ> deniska, I still do this when I want not-my-default-pyenv-thing
[18:27:39] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[18:27:48] *** Joins: pycode1 (~pycode3@2001:b07:5d28:551:2939:7ee3:9f08:30a8)
[18:28:13] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca) (Ping timeout: 256 seconds)
[18:28:26] *** Quits: asix (~Anders@user/asix) (Quit: leaving)
[18:29:35] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 256 seconds)
[18:29:45] *** cdown_ is now known as cdown
[18:30:33] *** Quits: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com) (Quit: beli6147)
[18:30:58] <theprophet> bjs like this? https://dpaste.org/7WRA
[18:31:06] *** Joins: mspe (~user@tilde.team/user/mspe)
[18:32:25] *** Joins: jim87 (~quassel@93.55.249.30)
[18:32:34] <xheimlich> lotteries are usually order invariant. use sets instead of lists.
[18:32:59] <theprophet> xheimlich ill do that in future, this is assignment. i am doing exercise.
[18:33:09] <xheimlich> use sorted then.
[18:33:41] <theprophet> does not matter if its sorted or not. the main thing is just identical items .
[18:33:42] <xheimlich> this way, lottery could come out ["a", "2", 1, "b"] and you'd still not win.
[18:34:00] <theprophet> yes , in reality you are correct
[18:34:05] <xheimlich> I missed your question. Tried scrolling back but.
[18:34:56] <theprophet> but , what i am trying to achieve is just to match the items in my_ticket and the winning_items. but not intentionally.
[18:35:02] <theprophet> like it lottery
[18:35:12] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[18:35:13] *** Joins: vitali64 (~vitali64@user/vitali64)
[18:35:17] <theprophet> line in*
[18:35:26] <theprophet> like in lottery*
[18:35:27] <xheimlich> yes, but what difficulties are you having.
[18:35:39] *** Joins: georgios (~georgios@user/georgios)
[18:36:04] <theprophet> i was using whille loop, hoping that, while loop would pick 4 different items from lottery_items
[18:36:17] <xheimlich> I didn't run this code (what's the name of that coding playground website)
[18:36:31] <theprophet> instead it just picked one thing like this [1, b , c , 2]
[18:36:39] <theprophet> and repetead it
[18:36:45] <han-solo> what was wrong with `random.sample` # i must be missing a lot of logs
[18:37:21] <theprophet> xheimlich https://ehmatthes.github.io/pcc_2e/solutions/chapter_9/#9-14-lottery
[18:38:03] *** Joins: d00gy (~tonberry@user/d00gy)
[18:38:04] *** Quits: powftw (uid448161@id-448161.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[18:38:18] <xheimlich> jeez, every online repl requires login now?
[18:38:30] *** Quits: Barones (~Barones@user/Barones) (Remote host closed the connection)
[18:38:33] <theprophet> it does? i am not logged in
[18:39:00] <xheimlich> no, I 'm looking for a web app where we can run your code together. Like the Rust playground.
[18:39:06] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca)
[18:39:10] <theprophet> oh
[18:39:29] <xheimlich> I have an account at repl.it, but if they
[18:39:35] <xheimlich> baby woke up.
[18:39:46] <theprophet> xheimlich https://www.tutorialspoint.com/execute_python3_online.php
[18:42:01] *** Joins: Croves (~Croves@2804:58:c1a5:4400:203e:19c5:88db:c25f)
[18:42:33] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[18:43:18] *** Joins: DnzAtWrk3 (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[18:43:47] *** Joins: Jenna16bit (~j16bit@c-73-228-39-16.hsd1.nm.comcast.net)
[18:43:54] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[18:43:54] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Client Quit)
[18:44:08] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[18:45:27] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[18:45:31] *** Joins: magla (~gelignite@d536277f.access.ecotel.net)
[18:46:01] *** Quits: DnzAtWrk (~DnzAtWrk@1408.pc.puv.fi) (Ping timeout: 256 seconds)
[18:46:43] <Croves> I'm facing this strange behavior where I have a bunch of @classmethod calls, and each one manipulates the same variable in cls - but at a specific function, it cannot access cls anymore
[18:47:28] *** Joins: duuude (~user@user/duuude)
[18:48:39] <bookworm> modifying anything in a classmethod sounds like a strange use of a classmethod
[18:50:37] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[18:51:49] <bjs> Croves: can you share?
[18:51:57] <bjs> like in a https://bpa.st/+python
[18:52:28] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[18:52:43] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[18:53:05] <bjs> theprophet: something like a Python tutorial will cover how for loops work and this kind of stuff, but something like `winner = True; for item in my_ticket: if item not in winning_items: winner = False`
[18:53:35] *** Joins: Sargento (uid523534@wikipedia/Sargento-de-Hierro)
[18:53:38] <bjs> it's good to be comfortable with boolean variables and loops and this kind of logic, it's a very common thing that appears a lot
[18:53:53] *** nomic2 is now known as nomic
[18:55:37] *** Joins: pycurious (~Adium@user/pycurious)
[18:58:15] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b8e4-8b58-fcf6-173a.res6.spectrum.com)
[18:58:49] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 256 seconds)
[18:59:31] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[18:59:43] *** Quits: duuude (~user@user/duuude) (Ping timeout: 256 seconds)
[18:59:43] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[19:00:40] *** Joins: duuude (~user@user/duuude)
[19:01:05] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[19:01:24] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[19:02:01] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[19:03:22] *** Joins: Vonter (~Vonter@user/vonter)
[19:03:32] *** Joins: Pickchea (~private@user/pickchea)
[19:06:18] <xheimlich> theprophet: don't worry, loops are just semimonoids in the category of Pishkov functors.
[19:07:50] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[19:10:11] <SnoopJ> "just"
[19:11:17] *** Quits: dsrt^ (~dsrt@128-092-174-141.biz.spectrum.com) (Ping timeout: 256 seconds)
[19:12:23] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 250 seconds)
[19:14:37] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 240 seconds)
[19:15:58] *** Quits: maromau (~mauro@151.62.26.169) (Quit: Konversation terminated!)
[19:16:33] *** Joins: ocherno (~ocherno@12.235.230.69)
[19:16:37] *** Joins: revolve (~u0_a227@82-132-239-10.dab.02.net)
[19:17:52] *** Joins: akk (~akk@75-161-95-245.albq.qwest.net)
[19:18:18] *** Joins: yoyoyo (~MrCollins@38.21.140.217)
[19:19:58] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[19:20:37] *** Quits: MrCollinsGA (~MrCollins@38.21.140.217) (Ping timeout: 240 seconds)
[19:21:17] *** Joins: lionslicer (~lionslice@2804:d41:a7a5:6a00:9013:fb52:95c1:8708)
[19:21:37] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Read error: Connection reset by peer)
[19:22:04] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:ee49:852:ea2e:e7ce) (Quit: pvergain)
[19:22:09] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[19:22:20] *** Quits: magla (~gelignite@d536277f.access.ecotel.net) (Read error: Connection reset by peer)
[19:23:20] *** Parts: patrice (~patrice@user/patrice) (Leaving)
[19:23:27] *** Joins: magla (~gelignite@d536277f.access.ecotel.net)
[19:23:56] <AhmedAmerican> I've a dataframe where it's contains columns include like the following format `American, Ahmed` where i would like to switch it to be `Ahmed American` how can that be done ?
[19:23:59] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[19:24:22] *** Joins: c4017w_ (~c4017@209.52.68.8)
[19:24:34] *** Joins: Barones (~Barones@user/Barones)
[19:28:03] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[19:28:26] *** Joins: arnik[m] (~arnikmatr@2001:470:69fc:105::1:8f4b)
[19:29:09] *** Joins: KeiraT (~k@lulzsec.co.uk)
[19:30:09] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[19:30:38] *** Joins: amrooting1 (~amrooting@95.211.187.223.adsl.inet-telecom.org)
[19:31:15] *** Quits: amrooting (~amrooting@95.211.187.223.adsl.inet-telecom.org) (Read error: Connection reset by peer)
[19:31:44] *** Quits: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[19:33:44] <jiffe> maybe something like ' '.join([c.strip() for c in col.split(',')[::-1]]) ?
[19:34:45] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[19:34:57] <AhmedAmerican> jiffe: is it possible to be applied on entire db?
[19:34:59] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[19:35:02] *** Joins: zmt00 (~zmt00@user/zmt00)
[19:35:03] <AhmedAmerican> sorry on entire df
[19:37:36] <jiffe> I'm sure it can be, it depends on the structure of this dataframe, but it needs to be applied individually to each column in the dataframe since that is the scope that the operation applies to
[19:37:56] <bookworm> chances are that they are referring to pandas
[19:38:05] <jinsun__> AhmedAmerican: `df = pd.Series(["American, Ahmed"]).str.extract(r"(.*), (.*)")` then `df[1] + " " + df[0]`
[19:38:25] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Quit: Client closed)
[19:38:42] <jiffe> ah ok, I have not messed with pandas
[19:38:57] <bookworm> welcome to the data science world
[19:39:14] <jinsun__> or if you want to do it in one expression, `pd.Series(["American, Ahmed"]).str.extract(r"(.*), (.*)").assign(sep=" ")[[1, "sep", 0]].sum(axis=1)`
[19:39:28] <bookworm> (don't do it in one expression)
[19:40:26] <jinsun__> with pandas it is fun doing in one expression, you can chain methods all the time
[19:41:06] *** Joins: escherial (~escherial@143.110.239.6)
[19:41:30] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[19:41:41] *** Joins: tofran (~tofran@bl15-47-228.dsl.telepac.pt)
[19:41:51] *** Joins: mickey8 (~user@user/mickey)
[19:42:14] <escherial> hey, for any of you who've used numpy's memory-mapped option when loading an array, does the memory-mapping still apply when you pass a reference to the array to another process (e.g., when used with multiprocessing or joblib), or do i have to reload the same filename in the process for it not to duplicate the array in memory?
[19:43:02] *** Joins: icy_hot (~icy_hot@99-83-35-64.lightspeed.elpstx.sbcglobal.net)
[19:43:09] <escherial> i'm referring to the mmap_mode mentioned here: https://numpy.org/doc/stable/reference/generated/numpy.load.html and i'm actually using gensim's keyedvectors mmap_mode option, which as far as i can tell uses numpy's array load function under the hood:
[19:43:09] <escherial> https://github.com/RaRe-Technologies/gensim/blob/7e898f492ddd784962c58395a358998ee7ffb831/gensim/utils.py#L545
[19:43:15] *** Joins: shamasu (~shamasu@2600:1700:697d:20::3f)
[19:45:15] *** Joins: Moosadee (~Moosadee@198.248.96.43)
[19:45:19] *** Quits: Moosadee (~Moosadee@198.248.96.43) (Read error: Connection reset by peer)
[19:48:29] *** Joins: dme86 (~dan@user/dan86)
[19:49:02] *** Joins: nitchi[m] (~nitchimat@2001:470:69fc:105::1:8f53)
[19:49:04] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[19:49:04] *** Quits: domicron (~domicron@gateway/tor-sasl/domicron) (Remote host closed the connection)
[19:49:12] *** Joins: pycurious (~Adium@user/pycurious)
[19:49:28] *** Joins: de-facto (~de-facto@user/de-facto)
[19:49:45] *** Joins: domicron (~domicron@gateway/tor-sasl/domicron)
[19:50:57] <AhmedAmerican> jinsun__: am getting an error when am trying to run `pd.Series(df)` ? isn't possible to run it on the entire df ? here's my question to have better idea of what am trying to do https://stackoverflow.com/q/70974724/7658985
[19:51:32] *** Joins: ety[m] (~etyhivein@2001:470:69fc:105::1:8f52)
[19:51:49] *** Quits: tobybl (~tobybl@dhcp-199-233.inf.ed.ac.uk) (Remote host closed the connection)
[19:53:03] <jinsun__> AhmedAmerican: pd.Series was just and example so you could copy paste and check, replace that with the column of your dataframe, `pd.Series(["American, Ahmed"])` -> your_df["Column_name"]
[19:53:32] <jinsun__> if you want to do it for all columns, then you'd need a loop
[19:53:39] *** Quits: nomic (~nomic@185.217.117.244) (Quit: Leaving)
[19:53:58] *** Quits: DnzAtWrk3 (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:54:08] *** Joins: Masterphi (~Masterphi@user/masterphi)
[19:54:51] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Quit: leaving)
[19:54:53] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[19:55:06] *** Joins: neverfindme (~hayden@158.123.160.43)
[19:55:25] *** Joins: DnzAtWrk3 (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[19:55:32] *** Joins: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com)
[19:57:52] *** Quits: FunkyELF (~FunkyELF@76-217-82-15.lightspeed.chrlnc.sbcglobal.net) (Quit: Leaving)
[19:57:53] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[19:57:56] *** yoyoyo is now known as MrCollinsGA
[19:58:12] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[19:58:19] *** Quits: tortal (~tortal@user/tortal) (Ping timeout: 256 seconds)
[20:00:16] *** Joins: greedom (~greedom@p200300de67153700517adaa6127c2317.dip0.t-ipconnect.de)
[20:00:47] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[20:02:17] *** Quits: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com) (Ping timeout: 256 seconds)
[20:02:29] *** Quits: fedenix__ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[20:02:37] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 256 seconds)
[20:02:45] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 276 seconds)
[20:02:57] *** Quits: duuude (~user@user/duuude) (Ping timeout: 240 seconds)
[20:02:57] *** Joins: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com)
[20:03:12] *** Quits: Barones (~Barones@user/Barones) (Remote host closed the connection)
[20:03:30] *** Quits: neverfindme (~hayden@158.123.160.43) (Quit: Leaving)
[20:04:20] *** Quits: luigibu (~luigi@93.176.144.84) (Quit: WeeChat 3.4)
[20:04:22] *** Quits: Harlin (~DonQixote@75-163-148-159.clsp.qwest.net) (Quit: Leaving)
[20:05:14] *** Joins: dtux (~dtux@c-98-207-149-218.hsd1.ca.comcast.net)
[20:05:24] *** Joins: yac (~user@user/yac)
[20:05:27] *** Quits: pycode1 (~pycode3@2001:b07:5d28:551:2939:7ee3:9f08:30a8) (Ping timeout: 256 seconds)
[20:06:02] *** Joins: Harlin (~DonQixote@75-163-148-159.clsp.qwest.net)
[20:06:02] *** Joins: Atque (~Atque@user/atque)
[20:06:02] *** Quits: Y4kuzi (~provision@85.159.233.183) (Remote host closed the connection)
[20:06:40] *** Joins: Guest24 (~Guest24@109.87.165.99)
[20:06:53] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:87fa:3ae3:665:cde0)
[20:07:43] *** Quits: vaio (~gary@user/ghost) (Remote host closed the connection)
[20:08:22] *** Joins: vaio (~gary@user/ghost)
[20:08:32] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[20:08:46] *** Joins: califax (~califax@user/califx)
[20:08:57] *** Joins: _ev (ev@user/ev/x-8999918)
[20:09:10] *** Joins: Guest84 (~Guest84@77-120-145-187.kha.volia.net)
[20:10:37] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[20:10:51] <Guest24> Hello. I tried to run python3 -c 'import sys,threading; t=threading.Thread(target=sys.stdout.write, args=("THREAD\n",)); t.daemon=True; t.start()' -- and I've got a Fatal Python error:  https://bpa.st/Z3IQ   Does that count as a bug? (works fine for me in python2)
[20:11:15] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[20:11:55] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[20:12:16] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[20:12:43] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[20:13:19] *** Joins: mat001 (~mat001@213.143.69.121)
[20:13:54] *** Quits: karlnashville (~karl@2601:482:4280:4cf0:1eb8:32b:9ae:19e6) (Quit: Konversation terminated!)
[20:14:09] *** Joins: duuude (~user@user/duuude)
[20:14:13] <SnoopJ> Guest24, no, what you have written is a race between the main thread and the daemon thread. If you add t.join(), the main thread won't exit before the daemon thread does, and this error won't occur
[20:14:43] *** Quits: adanwan_ (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[20:14:49] *** Joins: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro)
[20:15:03] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[20:15:13] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8) (Ping timeout: 250 seconds)
[20:15:16] <dante-as> Hi guys, did someone tried to use the hvac library and read the approle's role_id?
[20:16:49] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:17:27] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[20:17:30] *** Joins: advanced_malform (~advanced_@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417)
[20:17:39] *** Quits: Trashlord (~trash@user/trashlord) (Read error: Connection reset by peer)
[20:17:48] <vladoski> how can I tell ZipFile.write to write that directory recursively?
[20:18:42] *** Quits: Guest84 (~Guest84@77-120-145-187.kha.volia.net) (Quit: Client closed)
[20:18:48] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[20:19:13] *** Joins: Guest84 (~Guest84@77-120-145-187.kha.volia.net)
[20:19:34] *** Quits: mat001 (~mat001@213.143.69.121) (Remote host closed the connection)
[20:19:51] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 256 seconds)
[20:19:51] *** Quits: bluedust (~bluedust@117.204.139.130) (Ping timeout: 256 seconds)
[20:20:10] *** Joins: mat001 (~mat001@72.28.108.216)
[20:20:37] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[20:20:43] <AhmedAmerican> jinsun__: it's works fine on one column but if i looped over columns, am getting the following error https://bpa.st/E2ZQ
[20:20:52] <Guest24> SnoopJ. Uhm, it's just official https://docs.python.org/3/library/threading.html says "Daemon threads are abruptly stopped at shutdown". But it does not say that
[20:20:52] <Guest24> I should `.join()` the daemon-threads to avoid race conditions... (also no "Fatal Error" in python2?)
[20:21:15] *** Joins: bluedust (~bluedust@103.160.194.110)
[20:21:17] *** Quits: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com) (Ping timeout: 240 seconds)
[20:21:26] *** Joins: henistein (~henistein@2001:8a0:c18a:f601:699e:a6c2:ec4c:3a4c)
[20:21:28] *** Quits: kr0nk (~kr0nk@user/kr0nk) (Quit: leaving)
[20:21:40] *** Joins: Trashlord (~trash@user/trashlord)
[20:21:50] <SnoopJ> Guest24, "A thread can be flagged as a “daemon thread”. The significance of this flag is that the entire Python program exits when only daemon threads are left."
[20:22:03] <Guest24> SnoopJ, I guess, what I'm trying to ask is: does it mean I cannot use `.daemon=True` in python3 if I want to avoid "Fatal Python error"?
[20:22:07] *** Joins: mat001_ (~mat001@72.28.108.216)
[20:22:09] <SnoopJ> No, it does not mean that.
[20:23:01] *** Joins: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com)
[20:23:12] *** Quits: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC) (Quit: WeeChat 3.4)
[20:23:28] *** Quits: tykling (~tykling@irc.tyknet.dk) (Ping timeout: 268 seconds)
[20:23:28] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[20:24:29] *** Joins: paul424 (~tom@ip-5-172-233-41.multi.internet.cyfrowypolsat.pl)
[20:24:41] *** Quits: bluedust (~bluedust@103.160.194.110) (Remote host closed the connection)
[20:24:43] <Guest24> Then, can you advise, how should I properly write the above program to have the thread killed on exit (i.e. `.daemon=True`) without getting the "Fatal Python error"?
[20:24:53] *** Joins: c4017w__ (~c4017@209.52.68.8)
[20:24:57] *** Quits: mat001 (~mat001@72.28.108.216) (Ping timeout: 240 seconds)
[20:27:14] <Guest24> I mean, obviously, if it's not a python bug, then it's a bug in my code. What would be a proper way to fix it?
[20:27:19] <SnoopJ> You'd have to write your own machinery for that and I don't really see why you would in this simple program because either you're early enough to stop the work (and might as well have not bothered spawning the thread at all) or you're too late.
[20:27:33] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 256 seconds)
[20:27:51] *** Quits: revolve (~u0_a227@82-132-239-10.dab.02.net) (Read error: Connection reset by peer)
[20:27:58] *** Quits: advanced_malform (~advanced_@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417) (Quit: Leaving)
[20:28:21] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[20:28:37] <Guest24> Oh, the original program was much longer. That was just a shortest example that I could find to reproduce the issue. :)
[20:29:28] <SnoopJ> If you want to ask a question about *that* program the answer might be more interesting
[20:29:43] *** Quits: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com) (Ping timeout: 256 seconds)
[20:29:52] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[20:30:06] <SnoopJ> but the broad outline will be "have some way for the main thread to signal to daemon threads that the program is about to end and they shouldn't be using resources that are about to vanish"
[20:30:43] *** Joins: ice9 (~ice9@user/ice9)
[20:31:27] *** Joins: kr0nk (~kr0nk@user/kr0nk)
[20:31:33] *** Joins: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com)
[20:32:00] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[20:32:00] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[20:32:00] *** finn_elija is now known as FinnElija
[20:32:02] <Timvde> Is there a way to ask mypy "what type have you derived for this variable at this spot in the code"?
[20:32:05] <Guest24> SnoopJ, That would be basically equivalent to "signal a thread to exit on its own and don't use .daemon=True"
[20:32:33] *** Quits: someuser (~user@197.54.43.98) (Ping timeout: 256 seconds)
[20:33:55] <SnoopJ> Guest24, the problem doesn't even exist if it's not a daemon thread, because the main thread won't exit until after the other thread finishes
[20:34:11] *** Joins: ebrau (~ebrau@142.126.175.200)
[20:34:12] *** Joins: bernard__ (~bernard@user/bernard)
[20:34:14] *** Joins: casastorta (~casastort@neo2.krivokuca.net)
[20:34:17] *** Parts: bernard__ (~bernard@user/bernard) ()
[20:34:42] *** Joins: kittonian (~kittonian@cpe-70-114-148-180.austin.res.rr.com)
[20:34:45] *** Joins: emf (~emf@2620:10d:c090:400::5:3e0a)
[20:35:10] *** Joins: Betal (~Betal@user/betal)
[20:35:51] <kittonian> i'm about to start working on sending data to the backend and since this is zope I will be using a python script to handle it. Just trying to wrap my head around the data flow. Is the url I'm posting to the python script itself?
[20:35:53] <SnoopJ> the threading docs recommend that if you want graceful shutdown, use non-daemonic threads and threading.Event
[20:35:57] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[20:36:03] *** Quits: SaltHillStroller (~SaltHillS@206.223.160.26) (Ping timeout: 256 seconds)
[20:36:08] *** Quits: andreasbuhr (~quassel@p549dbab5.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[20:36:23] <kittonian> sorry, this is going to be a json encoded post
[20:36:34] *** Quits: icy_hot (~icy_hot@99-83-35-64.lightspeed.elpstx.sbcglobal.net) (Quit: WeeChat 3.4)
[20:36:37] <Guest24> SnoopJ, The original program just had a thread, that was periodically printing some status information about the program. So I made it `.daemon=True` for it to "abruptly die" when the program exits. A closer example would be like: https://bpa.st/QYVA (it's just I can't write it in one line) And it worked fine in python2... but got those "Fatal
[20:36:37] <Guest24> Python error" in python3...
[20:36:52] *** Joins: tykling (~tykling@irc.tyknet.dk)
[20:37:25] *** Quits: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro) (Ping timeout: 256 seconds)
[20:37:42] <SnoopJ> Guest24, I don't know if it's guaranteed to work on Python 2 or if the race just tends to play out in favor of the daemon in this sample program, but the semantics are wrong in exactly the same way AFAICT
[20:38:07] <SnoopJ> i.e. the main thread in 2.x exits if there are no non-daemon threads left, too
[20:39:08] <Guest24> Yeah, could be. It's just I thought `.daemon=True` is a simple supported way to insta-kill threads on exit... And looks like it's not. I wonder what's an expected use of `.daemon=True` then...
[20:40:17] *** Joins: orr (~onildo@177.130.3.13)
[20:40:26] <SnoopJ> Guest24, there's nothing wrong here except that your program is making it possible for the main thread to begin finalizing the interpreter before the daemon thread does some work (which happens before finalization is over and the program stops)
[20:41:10] <SnoopJ> I think the expected use is "it's your problem to be sure the resources the daemon thread(s) want will be available"
[20:41:19] <jinsun__> AhmedAmerican: it can be much simpler than what you were trying https://bpa.st/UXSQ
[20:41:50] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[20:42:07] *** Joins: mickey8 (~user@user/mickey)
[20:42:38] *** Quits: casastorta (~casastort@neo2.krivokuca.net) (Quit: ZNC 1.8.2 - https://znc.in)
[20:42:45] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 256 seconds)
[20:43:03] *** Joins: djhankb6 (~djhankb@208.113.164.68)
[20:43:49] *** Joins: casastorta (~casastort@neo3.krivokuca.net)
[20:43:57] *** Quits: djhankb (~djhankb@208.113.164.68) (Ping timeout: 240 seconds)
[20:43:57] *** djhankb6 is now known as djhankb
[20:44:02] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[20:45:03] *** Joins: ice9 (~ice9@user/ice9)
[20:45:42] <jinsun__> Timvde: https://mypy.readthedocs.io/en/stable/common_issues.html#displaying-the-type-of-an-expression
[20:46:23] <xheimlich> AhmedAmerican: did your problem get solved?
[20:47:17] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[20:47:32] *** Quits: tWqaq (~tWqaq@240e:389:5d1c:ff00:1838:a1f2:e09b:53a2) (Quit: Leaving)
[20:47:52] *** Joins: csm3105 (~csm3105@2a02:2e02:3e4:d00:4b21:8c8f:fc36:ee33)
[20:47:57] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 240 seconds)
[20:48:41] *** Quits: csm3105 (~csm3105@2a02:2e02:3e4:d00:4b21:8c8f:fc36:ee33) (Remote host closed the connection)
[20:48:42] *** Quits: henistein (~henistein@2001:8a0:c18a:f601:699e:a6c2:ec4c:3a4c) (Quit: Client closed)
[20:48:45] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:87fa:3ae3:665:cde0) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[20:49:00] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[20:49:23] <Guest24> SnoopJ, anyway, thank you for your help! I guess I'll just use a global `exit_all_threads` variable and drop the `.daemon=True`. (Still I wonder what people use `daemon=True` for in python3)
[20:49:26] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[20:49:28] <hardwire> are there any python typing master classes out there?  When to use Iterator/Generator.. Proper ways to cast things..
[20:49:37] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 240 seconds)
[20:49:42] <hardwire> classes school not classes OOP
[20:49:43] *** Quits: vaio (~gary@user/ghost) (Remote host closed the connection)
[20:49:52] *** Joins: csm3105 (~csm3105@2a02:2e02:3e4:d00:4b21:8c8f:fc36:ee33)
[20:49:57] *** Quits: csm3105 (~csm3105@2a02:2e02:3e4:d00:4b21:8c8f:fc36:ee33) (Client Quit)
[20:49:58] *** Joins: v- (~gary@user/ghost)
[20:50:01] <kittonian> my question is how to write the python code so that it uses what is being passed to it. every tutorial I've watched and read just shows how to use python to post data to another url. i need to receive a post request from an iOS app (swift) and use the json
[20:50:38] *** Joins: serh (serh@nemern.icu)
[20:51:51] <jinsun__> hardwire: on the iterator vs generator point see https://docs.python.org/3/library/collections.abc.html#collections-abstract-base-classes
[20:51:55] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[20:52:15] <hardwire> Yeh I have that pinned ;)
[20:52:21] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[20:52:28] <jinsun__> hardwire: usually better to accept the one with less "features" unless you need the feature that other one provides
[20:52:39] <xheimlich> AhmedAmerican: https://dpaste.org/bBar
[20:52:45] <jinsun__> so use Iterable, unless you want to do .send or .throw too
[20:53:11] <hardwire> jinsun__: yup.  Just trying to stay fresh on all this.  If there is a typing course I'd be down.
[20:55:34] *** Quits: greedom (~greedom@p200300de67153700517adaa6127c2317.dip0.t-ipconnect.de) ()
[20:56:07] <jinsun__> hardwire: if you are looking for a book, I recently learned about https://www.oreilly.com/library/view/robust-python/9781098100650/, which covers typing, maybe that will help
[20:56:11] <jinsun__>  (I haven't read it myself though)
[20:56:24] <hardwire> thanks.  that really does help.
[20:57:10] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[20:57:13] <kittonian> let me ask a different way since no one is responding. I am encoding json using swift. that's no problem. i am then posting to a url (my backend). when that url is called (i.e. the json data post is sent) how does python know to use that data?
[20:58:02] *** Quits: Stas_ (~Stas@78.162.42.17) (Read error: Connection reset by peer)
[20:58:24] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[20:58:26] *** Joins: yoro (~yoro@5.2.79.146)
[20:58:27] *** Joins: Stas_ (~Stas@78.162.42.17)
[20:58:27] *** Joins: Barones (~Barones@user/Barones)
[20:58:27] <grym> kittonian: that entirely depends on what's listening, right?
[20:58:38] <grym> (i have no idea what zope does; have you read their docs?)
[20:58:42] *** Joins: fef (~thedawn@user/thedawn)
[20:59:10] <xheimlich> kittonian: people usually use frameworks like flask or fastapi rather than listen nakedly to sockets.
[20:59:22] <kittonian> grym, that's what I'm asking about. of course I've read zope docs. I've been using it for almost 20 years. i've just never sent json data to zope and used zope as an api backend. that's what I'm trying to wrap my head around
[20:59:32] <xheimlich> ah zope.
[20:59:36] <grym> kittonian: when _i_ want to have python code that can accept json POST requests, i use fastAPI with uvicorn or gunicorn
[20:59:47] <grym> all i know about zope is "it is ancient and weird"
[20:59:57] <xheimlich> fastapi is specialized for http endpoints.
[21:00:02] <kittonian> it is not ancient. the latest version was just released a few months ago
[21:00:07] <xheimlich> like, it's not a web framework.
[21:00:14] <grym> xheimlich: so what
[21:00:17] <SnoopJ> xheimlich, POST is an HTTP verb
[21:00:24] <grym> ^
[21:00:33] <xheimlich> SnoopJ: yes, I was presenting the case for "why fastapi".
[21:00:38] <kittonian> and python scripts are integral to zope
[21:00:41] <grym> oh, it sounded the opposite
[21:00:46] <kittonian> so i don't need an additional framework
[21:01:00] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[21:01:22] <kittonian> if I create a python script a foo.com/script then I can call directly to foo.com/script
[21:01:26] <kittonian> super easy
[21:01:33] *** Quits: dreamon (~dreamon@ppp-88-217-91-105.dynamic.mnet-online.de) (Ping timeout: 256 seconds)
[21:01:46] <kittonian> usually I would pass in a url variable like email for example. so foo.com/script?email=blah@foo.com
[21:01:48] *** Quits: fef (~thedawn@user/thedawn) (Read error: Connection reset by peer)
[21:02:03] <kittonian> and in my python script I'd tell it there is a parameter called email and it's all good
[21:02:08] <SnoopJ> Guest24, for things where the author is sure they haven't written a race, and doesn't want to manage the lifetime of the thread separately. The `queue` documentation has an example of a worker thread using daemon=True that avoids the problem in your sample program because it synchronizes on the get()
[21:02:11] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[21:02:29] <skullY> kittonian: you're going to have to find a zope specific chat, I'm afraid. It's not very widely used anymore and I doubt anyone here knows how to access the HTTP payload directly in zope (I certainly don't)
[21:02:31] <kittonian> in this case i am needing to post json. therefore I can't have a parameter because i'm not using url vars
[21:02:33] *** Parts: ety[m] (~etyhivein@2001:470:69fc:105::1:8f52) ()
[21:02:51] <kittonian> if everyone could stop with the zope crap, this question has nothing to do with zope
[21:02:52] <xheimlich> kittonian: you can try introspection.
[21:03:05] <xheimlich> like dir() and help() the objects you do know on a repl.
[21:03:13] *** Quits: gitesh (uid423739@ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[21:03:23] <kittonian> this is simply a how do you pass json to python when posting, instead of using an actual .json file or hard encoding the json string within the python script
[21:03:43] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[21:03:43] *** Quits: KeiraT (~k@lulzsec.co.uk) (Ping timeout: 256 seconds)
[21:03:54] <skullY> this has everything to do with which HTTP framework you're using, IE zope
[21:03:59] <xheimlich> sooo. you have some system that enables routing to "scripts" from the filesystem. I thought zope was that.
[21:04:01] <kittonian> it does not
[21:04:17] <kittonian> don't worry about "how" it's accessing the scripts
[21:04:19] <xheimlich> this system also passes the GET argument to your functions/programs, right?
[21:04:22] <kittonian> that's not the question
[21:04:37] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 250 seconds)
[21:04:42] <xheimlich> there's a built-in library json that parses json content into dicts. That helps?
[21:04:56] <kittonian> strip it down and say you simply have a python script on a web server
[21:04:58] *** Joins: someuser (~user@197.54.43.98)
[21:04:59] <kittonian> you need to post json to it
[21:05:03] <kittonian> that's the question
[21:05:06] *** Joins: programmar (~whatever@118.69.128.37)
[21:05:09] <kittonian> of course you import json
[21:05:16] <skullY> kittonian: like a CGI script?
[21:05:19] <grym> kittonian: then my answer hasn't changed; and i don't import json!
[21:05:20] <kittonian> i'm already encoding json using python and sending it to the app
[21:05:23] <programmar> anyone here has ever tried to deal with service worker via a flask webserver ever before ? i need some help please
[21:05:23] <xheimlich> I've never used "python script on a web server" like this.
[21:05:26] <kittonian> i'm just asking about going the other way
[21:05:44] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[21:05:46] <kittonian> data = somejsonstring
[21:05:46] <xheimlich> I've used PHP, as a teenager, 30 summers and 30 thousand years ago.
[21:05:51] <programmar> so annoying how to even register the javascript file properly when it doesn't stay at the root directory but /static
[21:05:54] <kittonian> how does it know what somejsonstring is
[21:05:57] *** Quits: imp (~imp@179-191-215-167.static.sumicity.net.br) (Quit: imp)
[21:06:31] <Evolver> Is there any better (space efficient) general-purpose compression for a pandas dataframe than .pkl.xz? The data is mostly floats.
[21:06:50] *** Quits: Guest84 (~Guest84@77-120-145-187.kha.volia.net) (Quit: Client closed)
[21:06:56] <xheimlich> kittonian: your questions aren't very good right now. People here are not generally going out of their way to dunk on you, it's just that what you think is natural is not common in this post-Trump era.
[21:07:17] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[21:07:18] <kittonian> xheimlich, i don't even know how to respond to that.
[21:07:23] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[21:07:26] <kittonian> this is a very simple question that everyone is making really difficult
[21:07:54] <xheimlich> I've never seen Python used like that.
[21:07:54] <kittonian> if you can do foo.com/script?email=blah@foo.com you can then use email in python right?
[21:07:56] <kittonian> of course
[21:08:09] <kittonian> so now you need to pass json instead of email
[21:08:12] <SnoopJ> Evolver, numpy.savez() uses a very tidy format if saving the underlying ndarrays would suffice.
[21:08:15] <kittonian> all i want to know is how to do that
[21:08:15] <xheimlich> it doesn't seem anyone else currently responding has.
[21:08:42] <SnoopJ> (I don't think pandas can use it directly, though)
[21:08:51] <Evolver> SnoopJ: Thanks. Worth a try, although my dataframe has a datetime index, so maybe not
[21:08:51] <skullY> kittonian: how would you access that email variable in that case?
[21:09:10] <kittonian> i set it as a parameter of the script and then say email=email
[21:09:17] *** Quits: bytehackr (~Sandipan@45.249.73.198) (Ping timeout: 240 seconds)
[21:09:28] <SnoopJ> Evolver, numpy has datetime dtypes
[21:09:30] <xheimlich> I've typed Union[np.ndarray, pd.Series, pd.DataFrame] so many times for type signatures by now.
[21:09:37] <Evolver> SnoopJ: ah, great. Will try.
[21:09:37] <skullY> so zope is passing it to your script as an argument when it runs it?
[21:09:44] <xheimlich> I'm very used to slurring between these
[21:09:44] <kittonian> in that case yes
[21:09:56] <skullY> well, what does zope do with json payloads?
[21:10:06] <skullY> that's your answer, and why we keep going back to zope
[21:10:19] <skullY> you're asking for something that doesn't have a standard answer
[21:10:22] <SnoopJ> Evolver, there's also .to_hdf() which might not be so bad and would involve a lot less indirection around DataFrame (but is probably going to take up a bit more space on disk)
[21:10:29] <kittonian> zope doesn't know what a json payload is, nor does it know what an e-mail address is. it's just a string either way. then you write a python script to handle it
[21:10:43] <xheimlich> zope is just a monoid on the category of retromatroids anyway
[21:10:51] *** Joins: bluedust (~bluedust@103.160.194.110)
[21:10:56] <Evolver> SnoopJ: I want to minimize the space on disk since I'm storing them in a git repo.
[21:11:37] <SnoopJ> Evolver, I see, so the absolute size of the blobs is more important than being able to have good deltas?
[21:11:56] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[21:11:56] <SnoopJ> (i.e. you don't mind duplicating the entire data if a small part of it changes, as long as the size of each object is small?)
[21:11:57] *** Quits: vitali64 (~vitali64@user/vitali64) (Ping timeout: 240 seconds)
[21:12:18] <jinsun__> csv would be better for git, not binary so let git compress it
[21:12:20] <skullY> kittonian: apologies, but I don't think we can give you what you want
[21:12:28] <Evolver> SnoopJ: That's right. For deltas I just overwrite the whole file (for now). Now if my data were 10x larger, then definitely deltas would make a lot of sense, and thank you for that remidner.
[21:13:11] *** Quits: paul424 (~tom@ip-5-172-233-41.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[21:13:12] *** Joins: qlixed (~qlixed@181.44.129.13)
[21:13:17] <SnoopJ> Evolver, numpy.savez_compressed() maybe, then. save() and savez() write data in an uncompressed format
[21:13:22] <Evolver> jinsun__: we can do a lot better than csv for multiple reasons. I use CSV only when the file must be human-readable.
[21:13:49] <Evolver> CSV is utterly slow to read too.
[21:14:08] <SnoopJ> I'm not sure if pandas has a nice way to 'explode' a DataFrame into (name, series), but it shouldn't be too hard to spell that out if it doesn't have something suitable
[21:14:08] <Evolver> and the blob size matters as it counts against the quota
[21:14:27] <Evolver> SnoopJ: got it, t.y.
[21:14:54] *** Quits: Croves (~Croves@2804:58:c1a5:4400:203e:19c5:88db:c25f) (Quit: Client closed)
[21:15:12] <jinsun__> I just mentioned csv it because you said git, but yeah you can do better than csv in git too
[21:15:14] <Evolver> Looking at https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.to_pickle.html , I see that `zstd` is supported, but I'm assuming (for good reason) that it has worse compression by default.
[21:15:15] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[21:15:29] <xheimlich> be a man and PCA it har har har.
[21:15:30] *** Quits: librenaut (~librenaut@li1898-97.members.linode.com) (Changing host)
[21:15:30] *** Joins: librenaut (~librenaut@user/librenaut)
[21:15:36] <SnoopJ> `{colname: df.loc[:, colname].values for colname in df.columns}` maybe
[21:15:43] <SnoopJ> (plus the index)
[21:16:07] *** Joins: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[21:16:19] <SnoopJ> Evolver, I would expect pickle to be absolutely miserable here since it's representing a lot of things that have nothing to do with the actual data
[21:16:20] <xheimlich> just today I've been wanting to do a df.loc[..,col].values + the index. like two hours ago.
[21:16:31] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[21:16:53] <Evolver> SnoopJ: For an employer I use `.parquet` or `.orc`, never pickle
[21:16:53] <SnoopJ> Evolver, if I were in the case of wanting to do this, I would probably consider switching over to structured array, even, and skip that middle step :P
[21:17:31] *** Joins: abirtx (~abir@103.161.105.10)
[21:18:01] <xheimlich> pandas has many options. I've used hdf5 just cause it was there.
[21:19:10] *** Quits: abirtx (~abir@103.161.105.10) (Read error: Connection reset by peer)
[21:19:15] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[21:19:41] *** Quits: duuude (~user@user/duuude) (Ping timeout: 256 seconds)
[21:19:50] *** Quits: yoro (~yoro@5.2.79.146) (Quit: Leaving)
[21:20:08] *** Joins: fef (~thedawn@user/thedawn)
[21:20:19] *** Joins: abirtx (~abir@103.161.105.10)
[21:21:05] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 250 seconds)
[21:21:14] <Evolver> git is so convenient for transferring such small data files from one server to another.
[21:21:42] <novapy> is a list of lists basically the equivalent of a matrix?
[21:22:11] <bjs> novapy: well, perhaps it's more accurate to say that one way to make something that looks like a matrix is using a list of lists
[21:22:36] *** Quits: abirtx (~abir@103.161.105.10) (Client Quit)
[21:22:59] <Evolver> novapy: assuming it has a homogeneous data type
[21:23:20] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[21:23:54] *** Joins: abirtx (~abir@103.161.105.10)
[21:24:15] *** Joins: zaquest (~notzaques@5.130.79.72)
[21:24:24] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[21:25:08] *** Joins: Babar (~Babar@115.74.184.138)
[21:25:13] *** Joins: amrooting (~amrooting@95.211.187.223.adsl.inet-telecom.org)
[21:25:19] <Evolver> novapy: and assuming the inner list always has the same length
[21:25:22] *** Joins: c4017w_ (~c4017@209.52.68.8)
[21:25:29] <novapy> right
[21:25:42] *** Quits: amrooting1 (~amrooting@95.211.187.223.adsl.inet-telecom.org) (Read error: Connection reset by peer)
[21:25:47] *** Quits: DnzAtWrk3 (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Quit: Leaving)
[21:26:00] *** Naan` is now known as Naan
[21:26:17] *** Quits: jay-m1261 (~jay-m@129.0.76.39) (Ping timeout: 240 seconds)
[21:26:23] *** Quits: jay-m126 (~jay-m@129.0.76.39) (Ping timeout: 256 seconds)
[21:26:50] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[21:26:57] *** Quits: jay-m126_ (~jay-m@129.0.76.39) (Ping timeout: 240 seconds)
[21:28:18] *** Quits: callq (~callq@2409:4062:2e9e:2081:3c70:5be0:414d:6151) (Quit: callq)
[21:28:59] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[21:30:50] *** Quits: magla (~gelignite@d536277f.access.ecotel.net) (Quit: Stay safe!)
[21:31:29] *** Quits: MajorBiscuit (~MajorBisc@c-001-015-052.client.tudelft.eduvpn.nl) (Ping timeout: 250 seconds)
[21:31:30] *** Joins: smrtz (~smrtz@user/smrtz)
[21:32:50] *** Joins: Algernon666 (~Algernon6@2a04:cec0:10fa:4cc7:8c47:5652:a14e:1810)
[21:33:22] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[21:33:56] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[21:33:57] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Ping timeout: 240 seconds)
[21:35:13] *** Joins: dcaro (~dcaro@user/dcaro)
[21:35:17] *** Quits: dcaro_pto (~dcaro@user/dcaro) (Ping timeout: 252 seconds)
[21:35:49] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10f5:7936:8c47:5652:a14e:1810) (Ping timeout: 250 seconds)
[21:36:13] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[21:36:19] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[21:37:28] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[21:37:52] *** Joins: dreamon (~dreamon@pd9503ca8.dip0.t-ipconnect.de)
[21:38:08] *** Quits: Guest24 (~Guest24@109.87.165.99) (Quit: Client closed)
[21:38:15] <programmar> so anyone knows any article which can help me dealing with service worker and flask ? :(
[21:39:16] *** Joins: dme86 (~dan@user/dan86)
[21:40:06] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[21:40:39] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 256 seconds)
[21:40:47] <novapy> programmar: For flask, read the flask documentation, and what are you looking for, for a service worker?
[21:41:11] <programmar> yea i always ends up with "OPeration not secured" or "Evaluation failed to start the script" or some sort
[21:41:23] <programmar> which worked so well with Apache and nignx, the thing is flask keeps stuffs inside /static
[21:42:11] <SnoopJ> novapy, "matrix" usually implies a consistency of structure that isn't required by a list-of-lists, but you can implement a (lousy) matrix type using lists, if that's what you're asking
[21:42:48] <SnoopJ> i.e. `[[1], [2, 3]]` would be a weird thing to call a matrix unless you were talking about a particular ragged/sparse matrix format
[21:43:13] *** Joins: MrFantastik (~f@2607:f598:bbda:270:f69c:fa1f:1773:50fc)
[21:43:17] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 240 seconds)
[21:43:29] *** Quits: dvx (~dvx@5.181.92.64) (Quit: dvx)
[21:43:38] *** Joins: Babar_ (~Babar@115.74.184.138)
[21:43:38] *** Babar is now known as Guest581
[21:43:38] *** Babar_ is now known as Babar
[21:45:23] *** Joins: Babar_ (~Babar@115.74.184.138)
[21:45:23] *** Babar is now known as Guest4430
[21:45:23] *** Babar_ is now known as Babar
[21:45:43] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[21:45:57] *** Quits: ominionx (~ominionx@172.58.136.5) (Ping timeout: 240 seconds)
[21:46:37] *** Quits: Guest581 (~Babar@115.74.184.138) (Ping timeout: 240 seconds)
[21:46:52] *** Quits: kevr (~kevr@user/kevr) (Remote host closed the connection)
[21:46:55] *** Quits: elena_re (~elena@213.194.126.155) (Quit: Konversation terminated!)
[21:47:26] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 245 seconds)
[21:47:37] *** Joins: kevr (~kevr@user/kevr)
[21:47:57] *** Quits: Guest4430 (~Babar@115.74.184.138) (Ping timeout: 240 seconds)
[21:49:13] *** Joins: parv (~quass@user/parv)
[21:52:29] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[21:53:37] *** Joins: briian (uid321220@id-321220.uxbridge.irccloud.com)
[21:53:55] *** Quits: smrtz (~smrtz@user/smrtz) (Ping timeout: 256 seconds)
[21:53:57] *** Quits: emf (~emf@2620:10d:c090:400::5:3e0a) (Ping timeout: 240 seconds)
[21:54:14] *** Quits: pro_z_ (~pro_z@37.214.55.61) (Read error: Connection reset by peer)
[21:54:34] *** Joins: ice99 (~ice9@user/ice9)
[21:54:36] *** Joins: pro_z_ (~pro_z@37.214.83.4)
[21:55:14] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:ec2d:3263:d60:1e98)
[21:55:34] *** Joins: djapo (~archangel@user/djapo)
[21:55:37] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 256 seconds)
[21:55:57] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[21:57:08] *** Joins: emf (~emf@163.114.132.7)
[21:57:48] *** Joins: aslicedbanjo (~aslicedba@host31-48-146-27.range31-48.btcentralplus.com)
[21:59:15] *** Quits: vladoski (~vladoski@93-36-219-239.ip62.fastwebnet.it) (Ping timeout: 256 seconds)
[21:59:20] *** Quits: ocherno (~ocherno@12.235.230.69) (Remote host closed the connection)
[21:59:39] *** Joins: ocherno (~ocherno@96.68.22.200)
[21:59:41] *** Joins: shad (~shad@user/shad)
[21:59:49] *** Quits: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com) (Ping timeout: 256 seconds)
[22:00:42] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[22:01:26] *** Quits: MrFantastik (~f@2607:f598:bbda:270:f69c:fa1f:1773:50fc) (Remote host closed the connection)
[22:01:48] *** Joins: vladoski (~foo@93-36-219-239.ip62.fastwebnet.it)
[22:03:25] *** Joins: lavos (~molt@178-222-245-206.static.isp.telekom.rs)
[22:04:07] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[22:04:21] *** Quits: moto (~moto@user/moto) (Ping timeout: 256 seconds)
[22:04:38] *** Quits: naranja (~orange@user/orangeboxcutter) (Remote host closed the connection)
[22:05:52] *** Joins: molten (~molt@178-222-245-206.static.isp.telekom.rs)
[22:05:58] *** Joins: ominionx (~ominionx@172.58.136.5)
[22:07:00] *** Joins: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com)
[22:07:31] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 256 seconds)
[22:07:58] *** Joins: henistein (~henistein@2001:8a0:c18a:f601:699e:a6c2:ec4c:3a4c)
[22:08:51] *** Joins: naranja (~orange@user/orangeboxcutter)
[22:09:27] *** Quits: lavos (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 256 seconds)
[22:09:27] *** Quits: programmar (~whatever@118.69.128.37) (Ping timeout: 256 seconds)
[22:09:27] *** Quits: bluedust (~bluedust@103.160.194.110) (Read error: Connection reset by peer)
[22:09:33] *** Quits: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[22:09:39] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[22:10:01] *** Quits: ice99 (~ice9@user/ice9) (Ping timeout: 256 seconds)
[22:10:12] *** Joins: vindex10 (~vindex10@gateway/tor-sasl/vindex10)
[22:11:15] *** Quits: vladoski (~foo@93-36-219-239.ip62.fastwebnet.it) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:11:23] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[22:11:47] *** Quits: somlis (~somlis@user/somlis) (Quit: WeeChat 3.4)
[22:12:07] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8)
[22:13:35] *** Quits: SOMBRIO (~SOMBRIO@177.137.119.132) (Quit: Client closed)
[22:13:41] *** Joins: DavidMilestone (~DavidMile@122.179.237.116)
[22:14:34] *** Quits: _ev (ev@user/ev/x-8999918) (Quit: Leaving.)
[22:14:53] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[22:15:17] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[22:15:49] *** Quits: vindex10 (~vindex10@gateway/tor-sasl/vindex10) (Quit: vindex10)
[22:16:24] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[22:16:59] <DavidMilestone> Hi, I'm trying to implement a program to print the favorite number(s) of a person. Here's what I've tried: https://bpa.st/WUHA
[22:17:00] <DavidMilestone> The output for the single value list is `[9]`. What am I doing wrong? And is there a better way to implement this program? Thank you.
[22:17:43] *** Quits: ebrau (~ebrau@142.126.175.200) (Ping timeout: 256 seconds)
[22:18:09] *** Joins: Deneb (~johnch@23.143.9.51.dyn.plus.net)
[22:18:11] *** Joins: junebug (~junebug@2600:1700:3db0:2540:7f5e:4f5a:9aa1:aae6)
[22:18:29] <SnoopJ> DavidMilestone, `favorite_numbers[person]` is a list, and in the len(...)==1 case you are printing that, not the single element inside the list.
[22:18:30] <jinsun__> DavidMilestone: favorite_numbers[person] is a list, if you want the 1st item it would be favorite_numbers[person][0]
[22:18:36] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[22:19:05] <DavidMilestone> Okay, I got it
[22:19:07] <DavidMilestone> Thank you
[22:19:09] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 250 seconds)
[22:19:37] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Ping timeout: 240 seconds)
[22:19:55] <DavidMilestone> Is there a better way to write this program?
[22:20:04] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[22:20:21] <SnoopJ> DavidMilestone, are length-0 lists possible in that dict? The program produces no output in that case, it might be worth considering.
[22:20:25] *** Joins: KeiraT (~k@lulzsec.co.uk)
[22:22:07] *** Joins: crashrep (~crashrep@user/crashrep)
[22:23:01] *** Joins: vladoski (~foo@93-36-219-239.ip62.fastwebnet.it)
[22:24:01] *** Joins: Nutte35 (~Nutte@43.231.30.192)
[22:24:09] <DavidMilestone> SnoopJ I didn't consider that test case. That's a fair point you made there. But I'm only considering non-empty lists for this problem so far
[22:25:10] *** Joins: somlis (~somlis@user/somlis)
[22:25:17] *** Quits: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com) (Ping timeout: 240 seconds)
[22:25:18] *** Joins: fofoni (~fofoni@user/fofoni)
[22:25:53] *** Joins: c4017w__ (~c4017@209.52.68.8)
[22:26:08] *** Quits: ubert1 (~Thunderbi@p200300ecdf0994a1946b5f66cf92c0df.dip0.t-ipconnect.de) (Remote host closed the connection)
[22:26:10] *** Quits: vladoski (~foo@93-36-219-239.ip62.fastwebnet.it) (Client Quit)
[22:26:39] *** Quits: abirtx (~abir@103.161.105.10) (Quit: Leaving)
[22:27:14] *** Joins: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com)
[22:27:23] *** Quits: Algernon666 (~Algernon6@2a04:cec0:10fa:4cc7:8c47:5652:a14e:1810) (Ping timeout: 250 seconds)
[22:28:05] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[22:28:38] *** Joins: vicfred (~vicfred@user/vicfred)
[22:28:58] *** Joins: yassernasc (~yassernas@ec2-54-87-145-249.compute-1.amazonaws.com)
[22:29:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[22:29:17] *** Quits: Nutte35 (~Nutte@43.231.30.192) (Read error: Connection reset by peer)
[22:29:29] *** Quits: henistein (~henistein@2001:8a0:c18a:f601:699e:a6c2:ec4c:3a4c) (Quit: Client closed)
[22:30:32] *** Quits: AlanMD (~AlanMD@5-12-8-203.residential.rdsnet.ro) (Remote host closed the connection)
[22:31:23] *** Joins: AlanMD (~AlanMD@5-12-8-203.residential.rdsnet.ro)
[22:32:13] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[22:34:39] *** Joins: Auron (Auron956@user/auron)
[22:35:22] *** Joins: Stas__ (~Stas@78.162.42.17)
[22:35:37] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[22:37:23] *** Joins: LiftLeft (~LiftLeft@187.170.244.154)
[22:37:44] *** Joins: LiftLeft2 (~LiftLeft@187.170.244.154)
[22:38:07] *** Joins: abirtx (~abir@103.161.105.10)
[22:38:17] *** Quits: Batzy (~quassel@user/batzy) (Ping timeout: 240 seconds)
[22:38:21] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca) (Ping timeout: 256 seconds)
[22:39:05] *** Quits: Stas_ (~Stas@78.162.42.17) (Ping timeout: 250 seconds)
[22:39:37] *** Quits: junebug (~junebug@2600:1700:3db0:2540:7f5e:4f5a:9aa1:aae6) (Ping timeout: 240 seconds)
[22:39:58] *** Parts: abirtx (~abir@103.161.105.10) (Leaving)
[22:40:43] *** Quits: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com) (Ping timeout: 256 seconds)
[22:41:17] *** Joins: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com)
[22:42:07] *** Joins: vladoski (~foo@93-36-219-239.ip62.fastwebnet.it)
[22:42:53] *** Joins: nhartman (~SaltHillS@206.223.160.26)
[22:43:12] *** Quits: nhartman (~SaltHillS@206.223.160.26) (Client Quit)
[22:43:15] *** Quits: vladoski (~foo@93-36-219-239.ip62.fastwebnet.it) (Client Quit)
[22:43:22] *** Joins: SaltHillStroller (~SaltHillS@206.223.160.26)
[22:44:21] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[22:44:53] *** Joins: Guddu (~Guddu@59.95.234.221)
[22:45:27] *** Joins: SorinK (~SK@79.117.172.158)
[22:45:30] *** Joins: dme86 (~dan@user/dan86)
[22:46:55] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl488773kq551v5c1.ipv6.telus.net)
[22:47:12] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[22:47:29] *** Joins: Pickchea (~private@user/pickchea)
[22:48:01] *** Quits: DavidMilestone (~DavidMile@122.179.237.116) (Quit: Client closed)
[22:48:05] *** Quits: pro_z_ (~pro_z@37.214.83.4) (Ping timeout: 256 seconds)
[22:48:28] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[22:49:47] *** Quits: masoudd (~masoudd@user/masoudd) (Read error: Connection reset by peer)
[22:50:17] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 240 seconds)
[22:50:35] *** Quits: dld (~davidlowr@73.61.8.20) (Ping timeout: 256 seconds)
[22:52:29] *** Joins: dld (~davidlowr@73.61.8.105)
[22:54:57] *** Joins: magla (~gelignite@d536277f.access.ecotel.net)
[22:57:17] *** Joins: DavidMilestone (~DavidMile@122.179.237.116)
[22:58:23] *** Joins: advanced_malform (~advanced_@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417)
[23:00:24] *** Quits: DavidMilestone (~DavidMile@122.179.237.116) (Client Quit)
[23:00:40] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[23:01:16] *** Joins: Batzy (~quassel@user/batzy)
[23:03:31] *** Joins: vladoski (~foo@93-36-219-239.ip62.fastwebnet.it)
[23:05:23] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[23:05:40] *** Joins: imp (~imp@179-191-215-167.static.sumicity.net.br)
[23:06:13] *** Quits: nicode (~nic@45.72.195.35) (Read error: Connection reset by peer)
[23:06:57] <SGautam> I'm creating my own custom pygame window & titlebar, is there anyway to change window position in pygame while running?
[23:07:15] <SGautam> Because when you use pygame.NOFRAME you instantly lose the functionality of dragging the window.
[23:08:01] *** Joins: junebug (~junebug@2600:1700:3db0:2540:d7ff:63b4:1db:f450)
[23:08:34] <SnoopJ> SGautam, you can set the position using an SDL environment variable before initialization, but I don't think there's a platform-agnostic way to do it after init
[23:08:40] <SnoopJ> https://www.pygame.org/wiki/SettingWindowPosition
[23:08:53] <kittonian> for anyone who cares, in zope the post data is available as request["BODY"]
[23:09:03] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 256 seconds)
[23:09:05] <kittonian> then you decode it and do what you want
[23:09:20] *** Joins: paul424 (~tom@ip-5-172-232-177.multi.internet.cyfrowypolsat.pl)
[23:10:59] *** Joins: nicode (~nic@2607:f2c0:9541:7100:4a3c:29f0:c179:f26c)
[23:12:14] *** Joins: dme86 (~dan@user/dan86)
[23:13:21] *** Quits: vladoski (~foo@93-36-219-239.ip62.fastwebnet.it) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:13:58] *** Joins: vladoski (~foo@93-36-219-239.ip62.fastwebnet.it)
[23:14:09] *** Quits: dld (~davidlowr@73.61.8.105) (Ping timeout: 256 seconds)
[23:15:08] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[23:15:20] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:ec2d:3263:d60:1e98) (Quit: pvergain)
[23:16:07] *** Joins: dld (~davidlowr@2601:197:600:1210:3c77:90a4:f938:18fe)
[23:16:57] *** Quits: junebug (~junebug@2600:1700:3db0:2540:d7ff:63b4:1db:f450) (Ping timeout: 240 seconds)
[23:19:14] *** Joins: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com)
[23:19:17] *** Quits: LiftLeft2 (~LiftLeft@187.170.244.154) (Ping timeout: 240 seconds)
[23:19:29] *** Quits: LiftLeft (~LiftLeft@187.170.244.154) (Ping timeout: 256 seconds)
[23:20:03] *** Quits: d3sync (~d3sync@62.1.158.240) (Ping timeout: 256 seconds)
[23:22:18] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[23:23:15] *** Joins: d3sync (~d3sync@46.246.162.135.dsl.dyn.forthnet.gr)
[23:23:41] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[23:24:01] *** Joins: junebug (~junebug@2600:1700:3db0:2540:b6e6:595d:7721:df0a)
[23:25:16] *** Quits: jim87 (~quassel@93.55.249.30) (Read error: Connection reset by peer)
[23:26:22] *** Joins: c4017w_ (~c4017@209.52.68.8)
[23:27:19] *** Quits: orr (~onildo@177.130.3.13) (Quit: Leaving)
[23:29:25] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14)
[23:29:55] <Timvde> In our middleware, we monkey-patch an api_version onto a (Django) HttpRequest. We can guarantee that it will always be available. I'm trying to integrate django-stubs in our project. Is there any way to tell mypy that HttpRequest (which is in the django-stubs package) should be extended with an api_version field?
[23:30:15] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[23:30:35] <exarkun> # type: ignore?
[23:31:08] <Timvde> exarkun: That'd be the workaround, but it would be nicer if I don't need to do that everywhere I use it :)
[23:32:02] <exarkun> Can't you replace the request with your own object of the right type?
[23:32:19] <Timvde> I _could_ probably copy-paste the HttpRequest from django-stubs and add it to mypy_path, but then I'd lose the benefit of using the library
[23:32:25] *** Joins: LiftLeft2 (~LiftLeft@gateway/vpn/pia/liftleft)
[23:32:40] <SnoopJ> you are arguably already using your own version thereof
[23:32:42] *** Joins: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[23:32:44] *** Joins: bloody (~bloody@user/bloody)
[23:32:54] * SnoopJ isn't sure about the question as-asked, though
[23:33:28] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[23:33:37] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:deb:a9dc:ee58:aa14) (Ping timeout: 240 seconds)
[23:33:38] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[23:33:43] <Timvde> exarkun: I was thinking about that, but I wasn't really sure how to do it, maybe I could just try a cast
[23:34:01] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[23:34:34] *** Quits: magla (~gelignite@d536277f.access.ecotel.net) (Read error: Connection reset by peer)
[23:34:50] *** Joins: magla (~gelignite@d536277f.access.ecotel.net)
[23:35:17] *** Quits: SaltHillStroller (~SaltHillS@206.223.160.26) (Ping timeout: 240 seconds)
[23:36:03] *** Joins: moto (~moto@user/moto)
[23:36:29] *** Quits: kristjansson (sid126207@tinside.irccloud.com) (Ping timeout: 256 seconds)
[23:37:16] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[23:38:21] *** Joins: nomic (~nomic@185.217.117.244)
[23:38:25] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 256 seconds)
[23:38:32] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[23:38:45] *** Quits: LiftLeft2 (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 256 seconds)
[23:38:45] *** Quits: NiKaN (sid385034@helmsley.irccloud.com) (Ping timeout: 256 seconds)
[23:39:15] *** Joins: NiKaN (sid385034@id-385034.helmsley.irccloud.com)
[23:39:53] *** Joins: kristjansson (sid126207@id-126207.tinside.irccloud.com)
[23:41:02] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[23:42:16] *** Joins: CapitaoJonas (~CapitaoJo@72.2.239.74)
[23:42:58] *** Joins: SaltHillStroller (~SaltHillS@206.223.160.26)
[23:43:12] *** Quits: lionslicer (~lionslice@2804:d41:a7a5:6a00:9013:fb52:95c1:8708) (Remote host closed the connection)
[23:43:17] *** Quits: junebug (~junebug@2600:1700:3db0:2540:b6e6:595d:7721:df0a) (Quit: Leaving)
[23:45:33] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[23:45:57] *** Quits: moto (~moto@user/moto) (Ping timeout: 240 seconds)
[23:46:57] *** Quits: emf (~emf@163.114.132.7) (Ping timeout: 240 seconds)
[23:47:53] *** Joins: moto (~moto@user/moto)
[23:47:59] *** Quits: djapo (~archangel@user/djapo) (Remote host closed the connection)
[23:49:30] *** Joins: djapo (~archangel@user/djapo)
[23:49:51] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[23:50:07] *** Joins: emf (~emf@2620:10d:c090:400::5:e4c1)
[23:50:31] *** Joins: LiftLeft2 (~LiftLeft@gateway/vpn/pia/liftleft)
[23:50:44] *** Joins: cybercrysis (~cybercrys@190-198-104-174.dyn.dsl.cantv.net)
[23:52:03] *** Quits: CapitaoJonas (~CapitaoJo@72.2.239.74) (Read error: Connection reset by peer)
[23:52:08] *** Joins: Capitao_Jonas (~CapitaoJo@72.2.239.74)
[23:52:08] *** Capitao_Jonas is now known as CapitaoJonas
[23:52:20] *** Quits: CapitaoJonas (~CapitaoJo@72.2.239.74) (Client Quit)
[23:52:25] *** Joins: Capitao_Jonas (~CapitaoJo@72.2.239.74)
[23:52:25] *** Capitao_Jonas is now known as CapitaoJonas
[23:54:03] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca)
[23:54:47] *** Joins: davix (~nephilim@user/davix)
[23:55:45] *** Quits: skipper (~whatsupbo@user/scobydoo) (Quit: quit quit quit)
[23:56:35] *** Joins: Masterphi (~Masterphi@user/masterphi)
[23:56:37] *** Quits: SaltHillStroller (~SaltHillS@206.223.160.26) (Ping timeout: 240 seconds)
[23:57:01] *** Joins: bluedays (~sean@2603-6080-7b0a-cbc9-08f8-50bf-4000-7260.res6.spectrum.com)
[23:58:09] *** Quits: Masterphi (~Masterphi@user/masterphi) (Client Quit)
[23:58:31] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:58:46] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
