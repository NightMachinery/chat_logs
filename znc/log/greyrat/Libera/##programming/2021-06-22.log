[08:38:09] *** Quits: jamea (~jamea77@177.239.82.167) (Ping timeout: 252 seconds)
[08:38:23] *** Quits: BenLand100 (~bland@user/benland100) (Remote host closed the connection)
[08:39:12] *** Joins: BenLand100 (~bland@64.253.0.103)
[08:39:12] *** Quits: BenLand100 (~bland@64.253.0.103) (Changing host)
[08:39:12] *** Joins: BenLand100 (~bland@user/benland100)
[08:41:34] *** Quits: srh1605__ (~srh1605@cpe-98-144-83-113.wi.res.rr.com) (Ping timeout: 265 seconds)
[08:41:52] *** Joins: srh1605__ (~srh1605@cpe-98-144-83-113.wi.res.rr.com)
[08:42:41] *** Quits: anton (~anton@antonmcclure.com) (Quit: anton)
[08:42:59] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[08:44:05] *** Quits: arcatech (~arcatech@user/arcatech) (Remote host closed the connection)
[08:45:55] *** Joins: brie__ (~brie@59.88.29.29)
[08:48:31] *** Joins: elnavigator (~elnavigat@105.196.103.41)
[08:51:57] *** Joins: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca)
[08:52:23] *** Quits: BonSai (~bonsai@user/bonsai) (Quit: leaving)
[08:53:43] *** Quits: bandaid (~bandaid@ip-24-53-126-3.user.start.ca) (Quit: Leaving)
[08:56:48] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[08:58:22] *** Quits: brie__ (~brie@59.88.29.29) (Quit: leaving)
[08:58:59] *** Quits: jmcgnh (~jmcgnh@c-98-229-233-252.hsd1.nh.comcast.net) (Quit: ZNC 1.7.5 - https://znc.in)
[09:00:28] *** Quits: Raycat|Home (~RaycatWho@2601:241:8f80:5250:e080:8d60:b7cf:8d91) (Read error: Connection reset by peer)
[09:00:33] *** Quits: c705 (c705@alpine/contributor/c705) (Quit: Hello! And... good-bye!)
[09:00:51] *** Joins: Raycat|Home (~RaycatWho@2601:241:8f80:5250:4d0c:5603:12db:4d3)
[09:01:09] *** Joins: jmcgnh (~jmcgnh@c-98-229-233-252.hsd1.nh.comcast.net)
[09:02:01] *** Quits: jmcgnh (~jmcgnh@c-98-229-233-252.hsd1.nh.comcast.net) (Remote host closed the connection)
[09:02:07] *** Quits: eddof13 (~textual@187.246.227.157) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[09:03:57] *** Joins: jmcgnh (~jmcgnh@c-98-229-233-252.hsd1.nh.comcast.net)
[09:08:10] *** Joins: c705 (c705@alpine/contributor/c705)
[09:11:07] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Quit: Leaving)
[09:12:35] *** Quits: jmcgnh (~jmcgnh@c-98-229-233-252.hsd1.nh.comcast.net) (Quit: ZNC 1.7.5 - https://znc.in)
[09:13:19] *** Quits: elnavigator (~elnavigat@105.196.103.41) (Ping timeout: 258 seconds)
[09:13:49] *** Joins: jmcgnh (~jmcgnh@c-98-229-233-252.hsd1.nh.comcast.net)
[09:18:47] *** Quits: spacecraft (~spacecraf@c-73-169-93-26.hsd1.co.comcast.net) (Ping timeout: 265 seconds)
[09:19:06] *** Quits: quartz (~quartz@2603-8001-7700-61a4-0000-0000-0000-06cb.res6.spectrum.com) (Quit: WeeChat 3.1)
[09:22:50] *** Joins: spacecraft (spacecraft@c-73-169-93-26.hsd1.co.comcast.net)
[09:24:11] *** Quits: jmcgnh (~jmcgnh@c-98-229-233-252.hsd1.nh.comcast.net) (Quit: ZNC 1.7.5 - https://znc.in)
[09:26:24] *** Joins: jmcgnh (~jmcgnh@c-98-229-233-252.hsd1.nh.comcast.net)
[09:27:08] *** Quits: jmcgnh (~jmcgnh@c-98-229-233-252.hsd1.nh.comcast.net) (Remote host closed the connection)
[09:28:24] *** Joins: jmcgnh (~jmcgnh@c-98-229-233-252.hsd1.nh.comcast.net)
[09:28:47] *** Quits: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca) (Quit: Izem)
[09:29:05] *** Joins: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca)
[09:29:52] *** Quits: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca) (Client Quit)
[09:30:16] *** Quits: jmcgnh (~jmcgnh@c-98-229-233-252.hsd1.nh.comcast.net) (Remote host closed the connection)
[09:30:53] *** Joins: Ecophobia (~Ecophobia@85-76-141-151-nat.elisa-mobile.fi)
[09:31:16] *** Joins: w0x12ef_ (~w0x12ef@36.112.128.143)
[09:31:25] *** Joins: jmcgnh (~jmcgnh@c-98-229-233-252.hsd1.nh.comcast.net)
[09:31:50] *** Quits: ahungry (~user@99-40-9-245.lightspeed.livnmi.sbcglobal.net) (Remote host closed the connection)
[09:32:09] *** Joins: bjwyman_ (~bjwyman@199-48-94-117.rochmnaa.metronetinc.net)
[09:34:04] *** Quits: cosmicennui (~cosmicenn@c-73-34-75-186.hsd1.co.comcast.net) (Quit: WeeChat 2.8)
[09:34:20] *** Joins: anovick (~anovick@igld-83-130-156-7.inter.net.il)
[09:34:36] *** Quits: w0x12ef (~w0x12ef@106.37.74.209) (Ping timeout: 252 seconds)
[09:35:33] *** Quits: bjwyman__ (~bjwyman@199-48-94-117.rochmnaa.metronetinc.net) (Ping timeout: 258 seconds)
[09:36:17] *** Joins: w0x12ef__ (~w0x12ef@60.10.194.47)
[09:37:16] *** Quits: jmcgnh (~jmcgnh@c-98-229-233-252.hsd1.nh.comcast.net) (Quit: ZNC 1.7.5 - https://znc.in)
[09:38:46] *** Joins: jmcgnh (~jmcgnh@c-98-229-233-252.hsd1.nh.comcast.net)
[09:39:01] *** Joins: elnavigator (~elnavigat@105.196.103.41)
[09:39:22] *** Quits: w0x12ef_ (~w0x12ef@36.112.128.143) (Ping timeout: 252 seconds)
[09:40:01] *** w0x12ef__ is now known as w0x12ef
[09:40:57] *** Joins: hayden1 (~hayden@2601:602:cc00:8ad0::dd77)
[09:41:21] *** Joins: dan01 (~dan01@2a02:2f0f:3115:5a00:2cbb:de6f:f7b1:5052)
[09:49:44] *** Quits: elnavigator (~elnavigat@105.196.103.41) (Ping timeout: 258 seconds)
[09:51:29] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[09:51:53] *** Quits: Ecophobia (~Ecophobia@85-76-141-151-nat.elisa-mobile.fi) (Quit: Leaving)
[09:52:08] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 265 seconds)
[09:52:24] *** Joins: Ecophobia (~Ecophobia@85-76-141-151-nat.elisa-mobile.fi)
[09:52:35] *** Joins: cliluw (~cliluw@47.147.80.149)
[09:52:48] *** Quits: pandakekok9 (~job@user/job) (Ping timeout: 258 seconds)
[09:58:38] *** Joins: chance (~chance@50.47.109.175)
[10:02:35] *** Quits: tekno (~tekno@111.235.90.188) (Quit: Leaving)
[10:03:14] *** Joins: audgirka (~audgirka@2402:e280:3e16:e48:d5ba:7034:2ac9:4275)
[10:03:26] *** Quits: hayden1 (~hayden@2601:602:cc00:8ad0::dd77) (Quit: WeeChat 3.1)
[10:05:33] *** Joins: elnavigator (~elnavigat@105.196.103.41)
[10:09:09] *** Joins: shibboleth (~shibbolet@gateway/tor-sasl/shibboleth)
[10:10:10] *** Quits: elnavigator (~elnavigat@105.196.103.41) (Ping timeout: 268 seconds)
[10:13:06] *** Quits: jazzy2 (~jaziz@2607:fb90:a6e4:c6a4:e5c0:ba1a:61b7:5328) (Ping timeout: 240 seconds)
[10:13:30] *** Joins: Crassus (~Crassus@user/crassus)
[10:13:31] *** Joins: chomwitt (~Pitsikoko@2a02:587:dc0b:ff00:c813:70d9:31b2:b1b9)
[10:14:42] *** Quits: taiju (~taiju@240b:253:ec40:2400:654f:7566:b735:5f06) (Ping timeout: 240 seconds)
[10:15:11] *** Joins: taiju (~taiju@240b:253:ec40:2400:654f:7566:b735:5f06)
[10:18:40] *** Quits: Ecophobia (~Ecophobia@85-76-141-151-nat.elisa-mobile.fi) (Quit: Leaving)
[10:23:49] <password> \o
[10:24:22] *** Joins: gambusia (~gambusia@S01069050cacf7653.lb.shawcable.net)
[10:24:37] *** Quits: spacecraft (spacecraft@c-73-169-93-26.hsd1.co.comcast.net) (Ping timeout: 258 seconds)
[10:25:05] *** Joins: wei2912 (~wei2912@112.199.250.21)
[10:27:33] *** Joins: pandakekok9 (~job@user/job)
[10:27:46] <rindolf> password: hi, sup?
[10:28:00] <password> not much , and you?
[10:28:08] *** Joins: w0x12ef_ (~w0x12ef@60.10.194.47)
[10:28:30] <password> its 8 am and i just cought myself falling asleep at my desk
[10:28:40] *** Joins: spacecraft (spacecraft@c-73-169-93-26.hsd1.co.comcast.net)
[10:29:49] <rindolf> password: added two factts to https://www.shlomifish.org/humour/bits/facts/Emma-Watson/
[10:29:50] <Hitchens> Link: Emma Watson Facts [Satire] - Shlomi Fish‚Äôs Homesite
[10:30:22] *** Parts: gambusia (~gambusia@S01069050cacf7653.lb.shawcable.net) (WeeChat 2.8)
[10:31:18] *** Quits: w0x12ef (~w0x12ef@60.10.194.47) (Ping timeout: 265 seconds)
[10:31:36] <rindolf> password: i'm overcoming my inner fears
[10:31:57] *** Quits: inky (~inky@141.136.79.172) (Quit: Leaving.)
[10:32:05] <password> your inner fears?
[10:33:22] <rindolf> password: yes, see https://www.shlomifish.org/me/rindolf/#real_shlomif_success
[10:33:22] <Hitchens> Link: About ‚ÄúRindolf‚Äù - Shlomi Fish‚Äôs Nickname - Shlomi Fish‚Äôs Homesite
[10:35:58] <password> uhm , ok
[10:40:18] *** Joins: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca)
[10:42:15] *** w0x12ef_ is now known as w0x12ef
[10:42:36] <rindolf> password: i decided to be open and fearless: https://www.shlomifish.org/philosophy/culture/case-for-commercial-fan-fiction/#open_free_share_steal
[10:42:37] <Hitchens> Link: Commercial Real Person Fan Fiction (RPFs), crossovers and parodies as 2021 geek/hacker imperatives for revitalising the film industry (Full Version) - Shlomi Fish‚Äôs Homesite
[10:43:04] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[10:43:27] <Izem> when you verify a program, what exactly are you checking for?
[10:44:36] <rindolf> Izem: it depends
[10:44:48] *** Joins: furrymcgee (~devuan@31.179.186.66)
[10:45:36] <Izem> well I've just realized I've heard about program verification for a while, sometimes even in the compiler. But I can't imagine what's being checked other than the type system?
[10:45:43] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[10:49:34] *** Quits: exciteabletom (~tom@14-203-158-110.static.tpgi.com.au) (Remote host closed the connection)
[10:51:29] *** Quits: inky_ (~inky@141.136.79.172) (Ping timeout: 268 seconds)
[10:51:30] <Izem> anyways, could a program without string literals print strings?
[10:52:09] *** Joins: inky_ (~inky@178.78.150.116)
[10:52:50] *** Joins: snake (~snake@user/snake)
[10:52:59] *** Joins: jazzy (~jaziz@mobile-166-137-179-043.mycingular.net)
[10:53:28] <password> it could put chars?
[10:54:18] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[10:55:47] <Izem> hmm, on unix at least write just takes bytes so yeah it doesn't really matter
[10:55:51] <Izem> good to know!
[10:59:04] *** Quits: chance (~chance@50.47.109.175) (Quit: Client closed)
[11:00:06] <PlanckWalk> Pretty much every language can construct strings without using literals.
[11:00:52] <PlanckWalk> It may be awkward, though.
[11:03:09] <deniska> print(chr(72)+chr(101)+chr(108)+chr(108)+chr(111))
[11:03:35] <deniska> C doesn't even have a proper string type and yet can display things on a screen
[11:04:24] <beaky> the daily skills and duties of software engineers if interviews reflected what they actually did on the job https://www.darkcoding.net/software/a-day-in-the-life-of-a-professional-software-engineer/
[11:04:24] <Hitchens> Link: Graham King ¬ª A day in the life of a professional software engineer
[11:04:48] <Izem> is it common for architectures to support character encodings?
[11:05:29] <deniska> Izem: what kind of architectures?
[11:05:45] <PlanckWalk> As in, support more than one?
[11:05:46] *** Joins: sheepduck (~sheepduck@user/sheepduck)
[11:05:58] <PlanckWalk> Pretty much everything supports at least one.
[11:06:23] <deniska> I mean, if your task requires dealing with more than a single encoding, you better support it?
[11:06:31] <PlanckWalk> How woudl it store characters if it didn't?
[11:07:26] <Izem> I didn't think about it, thought it was just integers
[11:07:50] <deniska> Well, we standardized on unicode as an ordered list of all possible characters. Then there're various ways to write sequences of these numbers as bytes, utf-8, utf-16, utf-32 support all characters
[11:07:59] <deniska> something like cp1252 supports a small subset
[11:08:48] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[11:09:14] <deniska> higher level languages typically have a type disctinction between "string as a series of unicode codepoints" and "a byte array which can be useful to look at as a string"
[11:09:57] *** Quits: spacecraft (spacecraft@c-73-169-93-26.hsd1.co.comcast.net) (Ping timeout: 265 seconds)
[11:12:51] *** Quits: recursiveNode (~recursive@ip-86-49-241-201.net.upcbroadband.cz) (Quit: Going offline, see ya! (www.adiirc.com))
[11:12:54] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 264 seconds)
[11:12:55] *** Quits: imode (~imode@user/imode) (Ping timeout: 258 seconds)
[11:14:52] *** Joins: spacecraft (~spacecraf@c-73-169-93-26.hsd1.co.comcast.net)
[11:16:02] <password> whats a decent fast online c++ fiddle
[11:16:19] *** Joins: w0x12ef_ (~w0x12ef@124.126.15.211)
[11:16:52] <rindolf> password: ideone?
[11:17:14] <rindolf> godbolt?
[11:17:31] *** Quits: inky_ (~inky@178.78.150.116) (Ping timeout: 258 second[12:07:41] *** Joins: Rounin (~david@cm-84.212.130.215.getinternet.no)
[12:07:53] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[12:08:11] *** Joins: mrig (~mrig@user/mrig)
[12:08:17] *** Quits: ephemer0l (~ephemer0l@organizedmagnetism.com) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[12:09:10] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[12:09:14] <florentine> rindolf has asked me to stop bothering him.
[12:09:22] <florentine> I will stop now.
[12:10:36] *** Joins: ephemer0l (~ephemer0l@organizedmagnetism.com)
[12:12:13] *** Joins: pandakekok9 (~job@user/job)
[12:12:22] *** Quits: florentine (~brie@117.222.66.212) (Quit: Lost terminal)
[12:14:00] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[12:14:49] *** Joins: Camilo (~hugh@80-42-5-5.dynamic.dsl.as9105.com)
[12:15:59] *** Joins: ozarker7 (~ozarker@172-15-173-110.lightspeed.mssnks.sbcglobal.net)
[12:16:22] *** Joins: archie (~archie@host-79-46-236-93.retail.telecomitalia.it)
[12:17:56] *** Quits: ozarker (~ozarker@172-15-173-110.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 252 seconds)
[12:17:56] *** ozarker7 is now known as ozarker
[12:17:57] *** Joins: dan01 (~dan01@2a02:2f0f:3115:5a00:2cbb:de6f:f7b1:5052)
[12:22:41] *** Quits: radu242 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (Ping timeout: 258 seconds)
[12:22:51] *** Quits: pandakekok9 (~job@user/job) (Remote host closed the connection)
[12:24:18] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[12:24:41] *** Joins: solidfox (~snake@user/snake)
[12:25:05] *** Quits: snake (~snake@user/snake) (Killed (NickServ (GHOST command used by solidfox)))
[12:25:09] *** solidfox is now known as snake
[12:31:38] *** Quits: spacecraft (~spacecraf@c-73-169-93-26.hsd1.co.comcast.net) (Ping timeout: 265 seconds)
[12:31:50] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 250 seconds)
[12:32:13] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[12:32:22] <lavadonut> my code worked before and now it doesn't :(((((
[12:32:55] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (Ping timeout: 272 seconds)
[12:34:31] <mrig> lavadonut: did you wake up a bug? 
[12:34:33] <mrig> Good morning
[12:36:06] *** Quits: kmh (~kmh@p200300df5f145f0094ddbfe5ee539cda.dip0.t-ipconnect.de) (Quit: Leaving)
[12:36:11] *** Quits: audgirka (~audgirka@2402:e280:3e16:e48:d5ba:7034:2ac9:4275) (Quit: Leaving)
[12:36:31] *** Joins: inky (~inky@178.78.150.116)
[12:36:33] *** Joins: audgirka (~audgirka@2402:e280:3e16:e48:d5ba:7034:2ac9:4275)
[12:36:38] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[12:36:47] <rindolf> lavadonut: hi
[12:37:30] <rindolf> lavadonut: do u use git
[12:37:39] *** Joins: Auron (~Auron956@user/auron)
[12:37:54] <mrig> hi rindolf
[12:39:09] *** Quits: audgirka (~audgirka@2402:e280:3e16:e48:d5ba:7034:2ac9:4275) (Client Quit)
[12:39:24] *** Joins: audgirka (~audgirka@2402:e280:3e16:e48:d5ba:7034:2ac9:4275)
[12:41:14] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Ping timeout: 252 seconds)
[12:42:29] *** Joins: pandakekok9 (~job@user/job)
[12:42:32] <lavadonut> i needed to restart the kernel
[12:42:36] <mrig> Oh nice, khan academy have isometric projection under linear algebra :)
[12:42:43] <lavadonut> it works now
[12:42:47] <mrig> lavadonut: what sort of kernel?
[12:42:54] <lavadonut> jupyter notebook
[12:42:57] <mrig> ah
[12:43:01] <lavadonut> i just started using bitbucket today
[12:43:07] <rindolf> lavadonut: ah
[12:43:31] <mrig> python scribing :)
[12:44:20] <snake> rindolf, welcome back to 2lb-programming
[12:44:35] <mrig> It is surly not a normal thing that the study of calculus enthrals me so :|
[12:44:50] * mrig has finally died and on to geek heaven.
[12:45:03] <mrig> hello snake :)
[12:45:33] <snake> hi mrig
[12:45:35] <snake> how are you
[12:45:42] <rindolf> snake: hissss..... thanks
[12:45:52] <mrig> there is a curious void between 0 and 2, where all the fun things hide; Just about to go dow[13:43:20] <mrig> pulse: ok I get it, you hate the world; But svg is really cool still.
[13:43:21] <pulse> large data files contain many thousand "numbers"
[13:43:26] <pulse> it scales poorly and it's a waste
[13:43:30] <beaky> i like xml
[13:43:45] <pulse> mrig, it's useful yes. it's not implemented in a sane way though
[13:43:49] <GeDaMo> The main advantage of plain text formats is we have so many tools for dealing with plain text
[13:43:53] <pulse> PNG and JPG are sane, they are optimal
[13:43:54] <pulse> SVG isn't
[13:44:08] <pulse> GeDaMo, and you could easily solve that with a translation layer
[13:44:16] <mrig> pulse: nothing seems to be implemented in a sane way, the thing is, one persons sane is another persons insane.
[13:44:17] <pulse> it would be seamless, but still optimal
[13:44:31] <mrig> pulse: getting past that is the next hurdle for humanity.
[13:44:31] <pulse> mrig, no, there's many things implemented in a sane way
[13:44:38] <Arahael> Meh.  Honestly, at the end of the day, a lot of software dev is about getting shit done.  Not efficiently, just done.
[13:44:39] <pulse> ZIP is sane
[13:44:40] <mrig> pulse: to your mind perhpas.
[13:44:51] <pulse> Arahael, yeah and that mindset is exactly how we ended up like this
[13:44:59] <deniska> If you are implementing a generic way to represent a tree, you need some way to indicate "start of a node name", "end of a node name"
[13:45:02] <mrig> Arahael: if we all worked in the same way, there would only be one language.
[13:45:08] <deniska> XML happened to use ASCII numbers for < and > for that
[13:45:12] <GeDaMo> Zip has the problem of having a directory at the end, it's not a streamable format, you need the whole thing before you can start to decode it
[13:45:30] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[13:45:35] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Ping timeout: 265 seconds)
[13:45:37] <pulse> it wasn't meant to be streamable, also it's a fairly old format
[13:45:39] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[13:45:52] *** Joins: JavaBean (~JavaBean@user/javabean)
[13:46:30] <deniska> IME text formats are much more flexible when it comes to "oops, we suddenly have numbers bigger than 4 billions"
[13:46:49] <deniska> because they don't have assumptions about the size of a number baked into the format itself
[13:47:05] <mrig> strings are pretty awesome.
[13:47:12] <mrig> something very real about them.
[13:47:48] <pulse> deniska, that's not even a problem
[13:47:56] <pulse> you just support bignum
[13:48:32] <GeDaMo> "PEG-based transformer provides front-, middle and back-end stages in a simple compiler" http://www.vpri.org/pdf/tr2010003_PEG.pdf
[13:48:32] <Hitchens> Host: www.vpri.org
[13:48:47] <FenirSkunk> does C fail to do integer math properly with large integers?
[13:48:53] <pulse> https://wiki.c2.com/?XmlSucks
[13:48:53] <Hitchens> Link: 
[13:49:00] <pulse> here's a few good reasons why XML sucks
[13:49:28] <pulse> it's the most complex, vile, silly, suboptimal format you could possibly create
[13:49:30] <deniska> XML sucks because thousands laughs attack, XML sucks because the whole namespacing mess, it's awesome because it's text
[13:49:42] <pulse> no, texts sucks too
[13:49:45] <pulse> if you want text use JSON
[13:49:47] <deniska> text is amazing
[13:49:49] <pulse> at least you'll save some sanity
[13:49:49] <FenirSkunk> pulse, do you enjoy SVG? that's XML
[13:50:04] <pulse> FenirSkunk, i like to use SVG yes, but i don't think it's a sane format at all
[13:50:08] <pulse> should be binary
[13:50:11] <pulse> like everything else
[13:50:14] <deniska> you can open it in a text editor, you can print it, you can send it through channels which may barf on something which is not valid utf-8
[13:50:45] <mrig> pulse: ascii is binary.
[13:50:59] <mrig> I think ascii could be improved but that is another matter.
[13:51:15] <deniska> pulse: XML is a format for creating custom formats on the fly. PNG is a format for storing compressed using RLE rectangular arrays of pixels with some metadata
[13:51:30] <pulse> PNG is optimal, XML is a hot mess
[13:51:33] *** Quits: JavaBean (~JavaBean@user/javabean) (Ping timeout: 268 seconds)
[13:51:33] <pulse> simple
[13:51:41] <vdamewood> I'll defend XML for its original intended use, but SVG was not a good use of XML, and isn't even decently specified.
[13:51:54] <DPA> FenirSkunk: No, C does integer math just right. But maybe you accidentally divide an overflown / negative integer and cast it to an unsigned integer, resulting in a very big integer. That conversion could be implicit too.
[13:51:55] <deniska> pulse: PNG is not optimal if you put an image in it which is poorly compressable via RLE
[13:51:56] <FenirSkunk> XLS is xml manifested 
[13:51:57] <Arahael> You can, at least, embed SVG in HTML.
[13:52:02] <pulse> deniska, that's not what optimal means
[13:52:13] <pulse> that's user side
[13:52:22] <pulse> it's optimal for what it was intended, XML isn't
[13:52:23] <vdamewood> Arahael: Yeah, that's about the only advantage to SVG.
[13:52:26] <deniska> pulse: I think you meant "the least amount of bytes to represent something"
[13:52:33] <pulse> deniska, bingo
[13:52:38] <vdamewood> Well, and its ubiquity.
[13:52:39] <mrig> extended perhaps a better way of putting it.
[13:52:41] <deniska> And PNG is often not that
[13:52:54] <pulse> let me know when you come up with a more optimal PNG
[13:52:56] <deniska> Because gzipped BMP works better on some images
[13:53:13] <pulse> 4bit 8x8 sprites? :p
[13:53:30] *** Joins: spacecraft (~spacecraf@c-73-169-93-26.hsd1.co.comcast.net)
[13:53:37] <mrig> Arahael: That is exactly why it is interesting to explore.
[13:53:53] <mrig> It is the same kind of useful as JavaScript.
[13:54:14] <GeDaMo> https://jpegxl.info/
[13:54:15] <Hitchens> Link: JPEG XL
[13:54:16] <mrig> JS usefulness does not mean that JavaScript was well planed.
[13:54:24] *** Quits: dan01 (~dan01@2a02:2f0f:3115:5a00:2cbb:de6f:f7b1:5052) (Ping timeout: 244 seconds)
[13:54:26] <FenirSkunk> DPA, all the docs say this should not ever be a unsiged integer, and state use unsigned since it will consume all 4billion bits...and so i defined a int32_t but idk why it seems to be doing weird things. perhaps the hardware or compiler can't shift around two longs in memory/registers to do the math properly..
[13:54:40] <deniska> pulse: no, something which doesn't work well with RLE, like gradients and stuff
[13:55:23] <FenirSkunk> the fucntion XTHAL_GET_CCOUNT() just gets a cpu register of ticks, it wraps around to 0 every 17 seconds when it over flows. 
[13:55:24] <DPA> FenirSkunk: Maybe try 480000000u instead of 480000000, I think unsigned int / signed int casts the unsigned int to a signed one. The type of the variable being set is irrelevant for the calculation in c.
[13:55:27] <deniska> If you are ok with modifying the value of some pixels during export process, JPG is much better than PNG, for photos for example
[13:55:40] *** Quits: elnavigator (~elnavigat@105.196.103.41) (Ping timeout: 252 seconds)
[13:55:48] <deniska> and now we also have webp which is more efficient than jpg, but is not as widely supported
[13:56:19] <pulse> deniska, if PNG was RLE do you really think it would be this good?
[13:56:27] <pulse> it's far more advanced than that
[13:56:44] <pulse> furthermore you can optimize PNG to ludicrous degree using various techniques
[13:56:45] <deniska> pulse: iirc it supports multiple compression algorithms depending on version
[13:56:49] <pulse> yes
[13:56:53] * mrig looks at the interweb and chuckles.
[13:56:54] *** Quits: kron (~weechat@user/qaph) (Remote host closed the connection)
[13:57:01] * mrig starts to giggle.
[13:57:06] <FenirSkunk> DPA so C, once again i fight the compiler to do the compiler writer's job?? wow. so it defaults all numbers to signed, and then can't comprehend unsigned/signed? 
[13:57:12] *** Joins: kron (~weechat@user/qaph)
[13:57:30] *** Joins: w0x12ef_ (~w0x12ef@60.10.194.47)
[13:58:21] <FenirSkunk> ok i am compiling...we will see if this works DPA
[13:58:41] <DPA> FenirSkunk: Integer promotion. It's just that if you mix signed and unsigned integers, and it fits into an int, it gets promoted to an int for the calculation.
[13:59:51] <GeDaMo> There are macros for fixed width integers e.g. UINT32_C(480000000) which will add any necessary postfixes
[14:00:06] <mrig> deniska: I think that you could argue that refactoring code is like sculpting.
[14:00:16] <deniska> pulse: the closest we have to "universal binary format" are protobufs and stuff like BSON
[14:00:22] <FenirSkunk> hmm so noted...DPA so noted..., does it take more space in memory or more CPU cycles, because the function seemgly works it just spits out to large an number for me to recast into a smaller integer type so as to free memory after it finishes calculation
[14:01:00] <pulse> deniska, yes, those are both far preferable to the mess we typically use
[14:01:02] <FenirSkunk> flashing complete, serial monitor says! yes DPA was correct!
[14:01:03] *** Quits: w0x12ef (~w0x12ef@60.10.194.47) (Ping timeout: 265 seconds)
[14:01:08] <deniska> pulse: protobuf requires you to keep definitions around, and BSON is only slightly benefition if you store numbers, because it stores 12345 as 4 bytes as opposed to‚Ä¶ well, 5 like JSON does
[14:01:09] <pulse> especially XML, i can squint on my left eye and allow JSON
[14:01:13] <pulse> but XML is hot garbage
[14:01:16] <deniska> benefitial*
[14:01:19] <pulse> slowest format in existence
[14:01:23] <pulse> and biggest too
[14:01:27] <GeDaMo> https://en.cppreference.com/w/c/types/integer#Function_macros_for_minimum-width_integer_constants
[14:01:28] <Hitchens> Link: Fixed width integer types (since C99) - cppreference.com
[14:01:30] <pulse> not to mention horrible to edit
[14:02:06] <deniska> you can output it to screen and make sense of it without special tooling
[14:02:12] <deniska> you don't even have to be computer guy to do that
[14:02:16] <pulse> yes, for 3 lines of XML
[14:02:23] <pulse> ever tried editing a 50k lines XML file?
[14:02:24] <pulse> have fun
[14:02:44] <pulse> not to mention the poor parser that has to parse that mess
[14:03:01] <deniska> Parsers don't have feelings
[14:03:07] <pulse> no but CPUs have cycles
[14:03:08] *** Joins: tekno (~tekno@111.235.90.188)
[14:03:08] <deniska> It can deal with xml
[14:03:12] <FenirSkunk> okay so now it should let me cast the result to a char now right??   uint32_t thiscount = (XTHAL_GET_CCOUNT())/480000000u;  becomes char thiscount = ((XTHAL_GET_CCOUNT())/480000000u); 
[14:04:11] *** Joins: JavaBean (~JavaBean@user/javabean)
[14:04:11] <pulse> deniska, i really don't understand why anyone would defend XML, unless they haven't actually used it extensively and realized in the process how much of a garbage format it is
[14:04:16] <pulse> so *shrug*
[14:04:19] <pulse> do what you wilt i suppose
[14:04:39] <DPA> Yes. But char may or may not be signed. I recommend explicitly specifying the signedness, or using the stdint.h (u)int8_t types.
[14:05:08] *** Joins: odnes (~odnes@31-152-202-58.pat.amp.cosmote.net)
[14:05:18] <FenirSkunk> in theory...like how many cpu cycles is wasted by telling C to cast the result of a long that will never overflow a char into a char, for a global var??? 
[14:05:23] <PlanckWalk> None
[14:05:27] <deniska> pulse: it's not good, but certainly not the worst file format out there
[14:05:43] <deniska> and as I said multiple time, being plain text is one of its few redeeming qualities
[14:05:54] <pulse> deniska, name a worse one
[14:06:03] <deniska> pulse: PSD. XLS. PDF.
[14:06:10] <pulse> those aren't data formats
[14:06:14] <pulse> except XLS i suppose
[14:06:16] <PlanckWalk> Sure they are
[14:06:23] <FenirSkunk> pdf is based on postscript ya know
[14:06:33] <deniska> pulse: haha, you know people actually do use PDF to move data between computers :D
[14:06:40] <pulse> deniska, yes, insane people
[14:06:42] <PlanckWalk> One of my previous jobs involved processing data sent in via PDFs
[14:06:44] <deniska> And I'd rather deal with XML
[14:06:48] <pulse> that's about as sane as moving data with word documents
[14:06:53] <PlanckWalk> Yes, that too
[14:06:55] <pulse> PlanckWalk, i'