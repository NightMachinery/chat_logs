[00:00:28] *** Joins: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl)
[00:02:56] *** Joins: struchu (~struchu@staticline-31-183-169-207.toya.net.pl)
[00:05:11] *** Quits: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 256 seconds)
[00:08:35] *** Quits: shiranaihito (~textual@2001-b011-4000-1142-1508-3fdc-eb28-99e4.dynamic-ip6.hinet.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:30:33] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Remote host closed the connection)
[00:30:49] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[00:34:46] *** Joins: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl)
[00:39:45] *** Quits: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 256 seconds)
[00:44:51] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[00:47:04] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[00:58:05] *** Joins: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl)
[01:05:40] *** Quits: struchu (~struchu@staticline-31-183-169-207.toya.net.pl) (Quit: WeeChat 3.3)
[01:40:46] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[01:46:47] *** Quits: xulfer (uid452788@id-452788.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:57:35] *** Quits: joe_colben (~joe____co@185.190.112.211) (Remote host closed the connection)
[02:12:56] *** Quits: uncleyear (~ian@pppoe.178-66-158-61.dynamic.avangarddsl.ru) (Ping timeout: 250 seconds)
[02:30:32] *** Quits: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 240 seconds)
[02:35:24] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Quit: Leaving)
[02:35:45] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[02:44:01] *** Joins: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl)
[02:48:32] *** Quits: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 240 seconds)
[03:02:14] *** Quits: rovanion (~rovanion@h-46-59-13-236.A163.priv.bahnhof.se) (Ping timeout: 252 seconds)
[03:17:25] *** Joins: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl)
[03:22:02] *** Quits: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 240 seconds)
[03:26:05] *** Joins: xulfer (uid452788@id-452788.ilkley.irccloud.com)
[03:45:57] <TimMc> Is there, uh... is there some way of understanding a spec error?
[03:48:37] <TimMc> Multiple times now a spec error has pointed me at vaguely the right part of the file and then had a misleading or useless error message.
[03:49:33] <TimMc> I had `(... (fn tests [] ~@body) ...) in a macro -- I had forgotten to gensym that symbol 'tests -- and spec was saying this about the macro's call site: failed: vector? at: [:fn-tail :arity-1 :params] spec: :clojure.core.specs.alpha/param-list
[03:50:19] *** Joins: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl)
[03:58:40] *** Quits: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 250 seconds)
[04:03:36] <goodger> there exists at least one library to make these comprehensible but I deleted my list when I gave up work in computing
[04:03:48] <goodger> let's see if I can't find it again
[04:04:51] <selfsymmetric-mu> What do you do now, goodger?
[04:05:20] <goodger> TimMc: https://github.com/bhb/expound
[04:06:07] <goodger> selfsymmetric-mu: nothing yet
[04:07:13] <selfsymmetric-mu> goodger: intriguing
[04:12:52] *** Joins: matty_matt (~matt@2600:381:2414:9ad9:cdbd:97d3:1105:475e)
[04:24:13] <TimMc> Hmm. How would I use this to understand a spec error that I get at the REPL or during compilation?
[04:26:03] *** Quits: selfsymmetric-mu (~matt@c-73-10-148-139.hsd1.nj.comcast.net) (Remote host closed the connection)
[04:30:33] *** Joins: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl)
[04:34:12] *** Quits: matty_matt (~matt@2600:381:2414:9ad9:cdbd:97d3:1105:475e) (Ping timeout: 250 seconds)
[04:35:29] *** Quits: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 256 seconds)
[05:05:12] *** Joins: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl)
[05:09:44] *** Quits: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 250 seconds)
[05:16:20] *** Joins: matty_ma2 (~matt@185.226.144.22)
[05:19:11] <jeaye> Would definitely recommend expound.
[05:19:23] <jeaye> Haven't used it for compilation errors, though.
[05:19:48] <jeaye> I normally just puzzle through them by macroexpanding them until I find my mistake.
[05:21:25] *** Quits: seschwar (~seschwar@user/seschwar) (Quit: :wq)
[05:21:32] *** Quits: matty_ma2 (~matt@185.226.144.22) (Ping timeout: 240 seconds)
[05:29:43] *** Joins: molson_ (~molson@2001-48F8-704A-123D-0-0-75F-1018-static.midco.net)
[05:31:46] *** Parts: karthik (~karthik@user/karthik) (ERC 5.4 (IRC client for GNU Emacs 28.0.90))
[05:32:32] *** Quits: molson (~molson@2001-48F8-704A-123D-0-0-75F-1015-static.midco.net) (Ping timeout: 240 seconds)
[05:32:41] *** Joins: zmt00 (~zmt00@user/zmt00)
[05:34:32] <TimMc> bleh
[05:38:30] *** Quits: zmt00 (~zmt00@user/zmt00) (Quit: Leaving)
[05:39:26] *** Quits: molson_ (~molson@2001-48F8-704A-123D-0-0-75F-1018-static.midco.net) (Remote host closed the connection)
[05:40:23] *** Joins: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl)
[05:45:02] *** Quits: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 240 seconds)
[05:57:12] *** Joins: zmt00 (~zmt00@user/zmt00)
[06:14:03] *** Joins: molson (~molson@2001-48F8-704A-123D-0-0-75F-1018-static.midco.net)
[06:15:51] *** Joins: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl)
[06:16:21] *** Quits: molson (~molson@2001-48F8-704A-123D-0-0-75F-1018-static.midco.net) (Remote host closed the connection)
[06:20:32] *** Quits: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 240 seconds)
[06:22:15] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[06:24:42] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[06:46:22] *** Quits: zmt00 (~zmt00@user/zmt00) (Read error: Connection reset by peer)
[06:48:37] *** Joins: molson (~molson@2001-48F8-704A-123D-0-0-75F-1018-static.midco.net)
[06:50:29] *** Joins: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl)
[06:54:56] *** Joins: molson_ (~molson@2001-48F8-704A-123D-0-0-75F-1018-static.midco.net)
[06:55:02] *** Quits: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 250 seconds)
[06:55:19] *** Quits: nivag (~gavin@103-76-144-176.ip.cis.gen.nz) (Remote host closed the connection)
[06:58:39] *** Quits: molson_ (~molson@2001-48F8-704A-123D-0-0-75F-1018-static.midco.net) (Client Quit)
[06:59:19] *** Joins: molson_ (~molson@2001-48F8-704A-123D-0-0-75F-1018-static.midco.net)
[07:00:08] *** Joins: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net)
[07:00:35] *** Quits: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net) (Remote host closed the connection)
[07:05:41] *** Joins: zmt00 (~zmt00@user/zmt00)
[07:12:59] *** Quits: zmt00 (~zmt00@user/zmt00) (Read error: Connection reset by peer)
[07:16:50] *** Joins: nivag (~gavin@103-76-144-176.ip.cis.gen.nz)
[07:25:20] *** Joins: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl)
[07:44:11] *** Quits: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 256 seconds)
[08:12:36] *** Quits: Tolstoy (~textual@97-120-40-166.ptld.qwest.net) (Quit: Textual IRC Client: www.textualapp.com)
[08:14:16] *** Joins: shiranaihito (~textual@2001-b011-4000-1142-1508-3fdc-eb28-99e4.dynamic-ip6.hinet.net)
[08:16:00] *** Joins: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl)
[08:16:43] *** Joins: zmt00 (~zmt00@user/zmt00)
[08:20:50] *** Quits: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 250 seconds)
[08:49:59] *** Joins: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl)
[08:50:43] *** Joins: matty_ma2 (~matt@185.226.144.21)
[08:54:32] *** Quits: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 240 seconds)
[09:22:24] *** Joins: mbuf (~Shakthi@110.225.247.38)
[09:23:41] *** Joins: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl)
[09:25:03] *** Quits: oscurochu (~oscurochu@37.120.215.101) (Ping timeout: 256 seconds)
[09:28:27] *** Quits: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 256 seconds)
[09:33:48] *** Quits: shiranaihito (~textual@2001-b011-4000-1142-1508-3fdc-eb28-99e4.dynamic-ip6.hinet.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[09:45:48] *** Quits: mbuf (~Shakthi@110.225.247.38) (Quit: Leaving)
[09:55:22] *** Joins: oscurochu (~oscurochu@37.120.215.101)
[09:56:12] *** Joins: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl)
[10:01:02] *** Quits: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 240 seconds)
[10:13:00] *** Joins: shiranaihito (~textual@2001-b011-4000-1142-9131-5faa-2015-02f0.dynamic-ip6.hinet.net)
[10:30:32] *** Joins: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl)
[10:33:32] *** Quits: matty_ma2 (~matt@185.226.144.21) (Ping timeout: 240 seconds)
[10:35:10] *** Quits: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 250 seconds)
[10:35:37] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[10:47:47] *** Joins: zmt00 (~zmt00@user/zmt00)
[11:03:28] *** Joins: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl)
[11:08:06] *** Quits: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 250 seconds)
[11:39:17] *** Joins: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl)
[11:44:04] *** Quits: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 250 seconds)
[12:08:01] *** Quits: henry40408 (~henry4040@175.181.155.165) (Remote host closed the connection)
[12:08:35] *** Joins: henry40408 (~henry4040@175.181.155.165)
[12:13:24] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 276 seconds)
[12:14:13] *** Joins: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl)
[12:14:17] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[12:19:02] *** Quits: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 240 seconds)
[12:20:49] *** Joins: tatsumaru (~tatsumaru@82.147.131.155)
[12:21:07] *** Quits: henry40408 (~henry4040@175.181.155.165) (Remote host closed the connection)
[12:21:12] <tatsumaru> hey guys, is it true that clojure is on the faster side of the performance scale relative to other high-level programming languages?
[12:21:32] *** Joins: henry40408 (~henry4040@175.181.155.165)
[12:31:14] *** Quits: henry40408 (~henry4040@175.181.155.165) (Remote host closed the connection)
[12:31:45] *** Joins: henry40408 (~henry4040@175.181.155.165)
[12:32:09] <Para> I'd say that is largely irrelevant, but what is interesting that Clojure has the fast path option of dipping into plain Java if pure Clojure isn't enough.
[12:34:16] <Para> you can always have a browse at https://www.techempower.com/benchmarks/ of course
[12:35:50] *** Quits: henry40408 (~henry4040@175.181.155.165) (Remote host closed the connection)
[12:36:16] *** Joins: henry40408 (~henry4040@175.181.155.165)
[12:38:36] <tatsumaru> Para: Do you mean that performance is not relevant?
[12:38:45] <Para> tatsumaru: Yes.
[12:38:50] <tatsumaru> why not
[12:39:06] <Para> tatsumaru: Performance is very rarely a relevant metric to anything; it's a _specialization_ of the problem space you'll work on.
[12:39:44] <Para> There's of course the obvious barrier of absolute abysmal performance, but most languages these days are way beyond that, and server hardware, especially rented virtual hardware, is cheap enough.
[12:39:56] <tatsumaru> Doesn't it matter for stuff that's resource-constrained like number crunching, machine learning etc
[12:40:17] *** Quits: andreyorst (~andreyors@broadband-90-154-71-13.ip.moscow.rt.ru) (Ping timeout: 252 seconds)
[12:40:21] <Para> You won't be doing those things with Clojure, though.
[12:40:35] <Para> And even in Big Data the big hit isn't in the processing but distributed communication and serialization.
[12:42:02] <Para> Even with "slow" code I can't really remember when I would've needed more than one average VM to run my long running services. Usually we have two or three mostly because SLAs require that, but they're not really needed.
[12:43:18] *** Joins: andreyorst (~andreyors@broadband-90-154-71-13.ip.moscow.rt.ru)
[12:43:52] <Para> To extrapolate, python isn't actually a very performant language, but a lot of ML stuff is built on it because of the language ergonomics. The heavy lifting is done by modules written in platform native code, python just interfaces with said code.
[12:44:01] <tatsumaru> So when people complain that python is slow for example, is that just superficial?
[12:44:30] <Para> So claiming python is used a lot in ML doesn't actually equate to performance of the language, just its capability to jump into the more performant modules when needed, usually written in C or CUDA or whatever.
[12:46:19] <Solid> F O R T R A N
[12:46:21] * Solid hides
[12:47:12] <tatsumaru> Para: but if python has to rely on more performant modules, doesn't that show that performance matters?
[12:47:59] *** Joins: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl)
[12:48:46] <Para> tatsumaru: Average developer doing their stuff can be compared to a restaurant patron; they come in, order something from the menu, eat it up, pay and leave hopefully happy. On this metaphorical menu "performance" looks really nice and tasty, but it is important to understand that the performance of eating is not relevant to the performance of the dish.
[12:49:52] <Para> Nothing can be bucketed up to a single word or concept; "performance" in general is a somewhat flawed concept. And yes, of course _as a user_ you care that what you do works really nicely, but really as user of said modules you don't care what they've been implemented in as long as you can interact with them easilyt.
[12:50:36] <tatsumaru> I may not possess much talent for development, but I am still curious about what matters to the greatest ones.
[12:50:54] <Para> Clojure has this ability through Java/JVM interop as well, if through measurement a code hot spot is identified, there's a few in-language options one can try, such as transient collections, or dipping into Java.
[12:51:20] <Solid> I think performance still matters greatly in a lot of areas; people wouldn't be so excited about Rust if it didn't (though now we're walking away from GC'd languages, of course)
[12:51:29] <Para> FWIW, performance in computing isn't "who eats the whole hog fastest" but "who gets the job done with least spent resources"
[12:52:02] <Solid> for what it's worth, AFAIK Clojure is generally seen as slower than Java and Java is not a super-fast garbage collected language itself (though it's not slow either)
[12:52:32] *** Quits: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 250 seconds)
[12:54:19] <tatsumaru> Para: is time one of those resources too?
[12:54:48] <Para> tatsumaru: Time is usually the measurement.
[12:55:15] <Para> Don't mix measurements with metrics :) "You get what you measure."
[12:55:29] <tatsumaru> because if you can find a way to do something with very little resources in terms of energy but that would take 10 million years to complete, then maybe it is irrelevant.
[12:55:31] <Para> If all you care is time, then you can spent infinity money to get it to minimum.
[12:56:04] <Para> And that's the core of optimization! Find the sweet spot of what matters.
[12:56:17] <Para> Most amount of work for least amount of resources in a time you can live with.
[12:56:59] <tatsumaru> and that's not directly related to language performance?
[12:57:30] <Para> Especially with cloud and CPU credits one can get quite creative these days, the most standard one being that if customer requires you to run a CPU heavy job once a week and the result must be available at, say, nine at Wednesday morning, it also means that if all data is ready on Tuesday evening at six, you have 15 hours of processing time.
[12:57:41] <Para> And fifteen hours is a _lot_ of time.
[12:58:45] <Para> You can eg. spend all CPU credits accumulated from the week and effectively get like ~4 times as much CPU processing as you'd normally have, so that's now 60 "hours" all the sudden you can spend on processing for no extra cost.
[12:59:26] <tatsumaru> I am not familiar with the concept of cpu credits, is that some sort of resource leftovers?
[12:59:41] <Para> eg. https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-credits-baseline-concepts.html
[13:01:37] <tatsumaru> well staying below baseline isn't really free, because it carries an opportunity cost, but that's probably beside the point
[13:02:06] <Para> There's no such thing as even load for any practical system :)
[13:02:26] <Para> Especially if you serve human beings. We're kinda crazy in the sense that we happily spend a third of our lives just lying down.
[13:03:34] <tatsumaru> Well while you are sleeping someone else is awake.
[13:04:13] <Para> Two issues with that: 1) you assume you'd have a global audience 2) Even if you did, population density matters - Atlantic and Pacific causes natural dips as well :)
[13:05:33] <Para> From what I can remember from some years ago, the global audience is kinda like a double sine wave for each day, Asian peak is about 1.5x higher than Western and Western ramp-up is quite tight.
[13:07:33] <tatsumaru> I remember a story about (someone who shall not be named) who was using hardware resources to serve a web app during the day and during night when usage was low he'd use the same resources to actually code the app, because he only had one computer. IMO we should always strive to utilize resources to the maximum and if we aren't it's more of a mistake on our side rather than a fundamental truth. In humans for example, the brain doesn't r
[13:07:33] <tatsumaru> est during sleep.
[13:07:56] *** Quits: henry40408 (~henry4040@175.181.155.165) (Remote host closed the connection)
[13:08:09] <Para> The brain goes through a wash cycle during sleep. So it's different kind of workload :)
[13:08:21] *** Joins: henry40408 (~henry4040@175.181.155.165)
[13:08:38] <Para> But yeah, one thing that irks me in a lot of movies is the whole "Humans only use x% of their brain at any given time, imagine what would happen if we used 100%"
[13:08:49] <Para> We already know what 100% brain usage is, it's called epilepsy.
[13:13:07] <tatsumaru> That might only be one instance of 100% brain usage though.
[13:13:58] <tatsumaru> Probably not very useful to think of the brain as a CPU.
[13:14:43] <tatsumaru> Especially given the fact that the brain is really bad at doing stuff that's really easy for CPUs.
[13:15:57] *** Quits: henry40408 (~henry4040@175.181.155.165) (Remote host closed the connection)
[13:16:23] *** Joins: henry40408 (~henry4040@175.181.155.165)
[13:17:06] <Para> Thinking about that, I'm not sure but I think brain is one of those organs which could cook itself alive by too much activity.
[13:18:05] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[13:21:49] *** Joins: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl)
[13:23:08] <tatsumaru> In this silly example: https://paste.rs/9k0 why is it that defining a function with fn requires me to wrap it in brackets while defining it with # only works without brackets?
[13:24:14] <tatsumaru> in fact if I wrap the second example in brackets it won't work because it expects arguments
[13:24:34] <tatsumaru> is this just me not understanding syntaxis
[13:26:27] *** Quits: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 256 seconds)
[13:27:08] *** Joins: rovanion (~rovanion@h-46-59-13-236.A163.priv.bahnhof.se)
[13:27:10] <Para> Probably, although I'm still trying to grasp what your question is :)
[13:28:18] <Para> The `#(` #() in can be thought to expand to `(fn [%] (` (although percentage is a terrible name for a variable, of course)
[13:30:33] *** Joins: matty_ma2 (~matt@185.226.144.21)
[13:35:02] *** Quits: matty_ma2 (~matt@185.226.144.21) (Ping timeout: 240 seconds)
[13:35:46] <tatsumaru> what I meant was that I find it inconsistent that in the 1st example the 'fn' needs a ( to work as in (fn where in the second example '#' only works the same way if if it doesn't have ( as in '#' and not (#
[13:36:33] <Para> fn is a form which returns an executable function :)
[13:37:20] <Para> (#) is effectively calling `#` as function, which doesn't make sense.
[13:37:40] <tatsumaru> so what is # really?
[13:38:02] *** Joins: seschwar (~seschwar@user/seschwar)
[13:39:28] <Para> a reader macro https://clojure.org/reference/other_functions
[13:40:00] <tatsumaru> ah I see.
[13:40:06] <Para> Had to dig up a bit on the doc, it's quite an unique thing among Clojure's implementation :) Clojure in general doesn't have that many reader related magic things, and one debate every now and then is whether users should be allowed to define their own.
[13:40:27] <tatsumaru> I guess I am not used to seeing clojure syntaxis that doesn't start with a '('
[13:40:30] <Para> Clojure the language's opinion in that debate usually is "absolutely not", EDN on the other hand is more relaxed about it and eg. juxt/aero relies heaviliy on such stuff.
[13:41:33] <Para> https://clojure.org/reference/reader#macrochars
[13:42:21] <Para> reader dispatch macro which implements anonymous function literal...that's a mouthful
[13:44:50] <tatsumaru> but wait if #() is a macro which calls an executable function, then wouldn't it make sense for (#()) to work?
[13:45:52] <Para> #(…​) ⇒ (fn [args] (…​))
[13:46:02] <tatsumaru> oh wait, you can't have redundant brackets in clojure
[13:46:06] <Para> So (#()) would be (fn [args] ())
[13:46:17] <Para> gahg, the other way around
[13:46:36] <Para> ((fn [args] ())
[13:46:48] <Para> ...something like that, I'm having a slight 0% brain power moment
[13:47:16] <Para> Anyway yeah, unless your anonymous function returns yet another callable thing, (#()) in itself won't be happy
[13:47:29] <tatsumaru> yeah for some reason  my brain was still thinking of brackets as they are in math ((9+9)) = (9+9)
[13:48:00] <Para> (#(+)) works because + has a zero arity overload
[13:52:52] <tatsumaru> is it frowned upon to use this format for anonymous functions with #?
[13:55:54] *** Joins: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl)
[13:56:57] <Para> I try to refactor them away.
[13:57:08] <Para> Good when hacking things together, but the syntax has its limits.
[13:57:45] <Para> I usually go loosely the path of #(..) -> (fn [..] ..) -> letfn or defn-
[13:57:53] <Para> #() doesn'
[13:58:05] <Para> #() doesn't really document the args or anything which is kinda meh
[14:01:01] *** Quits: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 256 seconds)
[14:29:34] *** Joins: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl)
[14:29:45] *** Joins: puchka (~marius@165.73.241.29)
[14:34:02] *** Quits: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 240 seconds)
[14:53:29] *** Quits: oscurochu (~oscurochu@37.120.215.101) (Remote host closed the connection)
[15:02:04] *** Joins: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl)
[15:07:09] *** Quits: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 256 seconds)
[15:17:48] *** Joins: joe_colben (~joe____co@185.190.112.211)
[15:20:06] *** Joins: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl)
[15:28:51] *** Quits: piotrts (~piotrts@188.146.235.26.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 256 seconds)
[15:35:48] *** Quits: xulfer (uid452788@id-452788.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[15:58:23] *** Quits: joe_colben (~joe____co@185.190.112.211) (Remote host closed the connection)
[15:59:51] *** Quits: tatsumaru (~tatsumaru@82.147.131.155) (Quit: Leaving.)
[16:15:31] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[16:15:31] *** Joins: tatsumaru (~tatsumaru@82.147.131.155)
[16:15:55] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[16:17:40] <tatsumaru> when in emacs, I mistakenly wrote the body of the function first without actually defining the function and now emacs won't let me close the function with a ')' because it needs an opening parenthesis to do that, but it also will not allow me to write a function definition at the beginning which doesn't end with a ')' so I can't really open the parentheses. is there a way to override this trash?
[16:19:07] <tatsumaru> I think the only solution might be to cut and paste, but there should be a simpler way
[16:20:03] <leah2> C-q )  maybe?
[16:21:13] <tatsumaru> yeah this worked, thanks. what is that command
[16:21:53] <leah2> C-q is to quote the char, so the next char is inserted directly
[16:39:05] *** Joins: matty_ma2 (~matt@185.226.144.20)
[16:39:06] *** Joins: uncleyear (~ian@pppoe.178-66-158-61.dynamic.avangarddsl.ru)
[16:56:56] <wink> lol
[16:57:15] <wink> held hostage by your parenthesis automatism.
[16:57:56] <tatsumaru> yeah
[16:59:10] <tatsumaru> that's parental guidance if I've seen it
[17:00:22] <Solid> tatsumaru: you could (should!) look into one of the various structural editing packages (lispy, paredit, smartparens, ...)
[17:00:40] <tatsumaru> I do have paredit mode enabled
[17:02:47] <Solid> then you should have facilities to slurp (and barf) sexp's
[17:05:13] *** Joins: AdmiralBumbleBee (~AdmiralBu@47.203.174.105)
[17:10:22] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[17:11:23] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[17:27:40] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[17:29:08] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[17:33:32] *** Quits: matty_ma2 (~matt@185.226.144.20) (Ping timeout: 240 seconds)
[17:36:03] *** Quits: tatsumaru (~tatsumaru@82.147.131.155) (Quit: Leaving.)
[17:42:41] <Para> A prime example of why I always disable all structural edit modes.
[17:42:48] <Para> Writing code isn't structural, only its result is.
[17:56:07] <Solid> manipulating an AST is inherently structural
[17:56:19] <Solid> and with lisps you're basically at that level all the time
[18:03:50] <sobel> my time to try structured edit "for real" keeps getting bumped back by all sorts of ridiculous realities like "other people" and "covid" (not mine) and "potentially yagni"
[18:04:32] <sobel> i made the intellectual breakthrough (i'm stubborn) of concluding i should pursue fireplace because i can't stop viming even in my sleep
[18:05:26] <sobel> apparently it was higher priority to kick pulseaudio to the curb in favor of pipewire. now that's productivity!
[18:14:55] <Para> Imagine a nightmare which was all about not being able to exit vi, or emacs.
[18:15:33] <sobel> C-c :q aaaaagh!
[18:16:52] <sobel> plot twist: when you finally manage to issue a kill with ! commands you exit back to edlin
[18:55:34] *** Joins: joe_colben (~joe____co@185.190.112.211)
[19:00:00] *** Quits: joe_colben (~joe____co@185.190.112.211) (Remote host closed the connection)
[19:00:21] *** Joins: joe_colben (~joe____co@185.190.112.211)
[19:01:33] *** Quits: joe_colben (~joe____co@185.190.112.211) (Remote host closed the connection)
[19:01:52] *** Joins: joe_colben (~joe____co@185.190.112.211)
[19:02:38] *** Joins: atw (~user@ool-18bf5678.dyn.optonline.net)
[19:14:51] *** Joins: nighcoder (~ciumbi@206.176.143.59)
[19:19:12] <TimMc> screm
[19:27:17] *** Joins: shiranaihito_ (~textual@123-192-192-149.dynamic.kbronet.com.tw)
[19:29:54] *** Quits: shiranaihito (~textual@2001-b011-4000-1142-9131-5faa-2015-02f0.dynamic-ip6.hinet.net) (Ping timeout: 250 seconds)
[19:42:16] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[19:42:37] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[19:54:36] *** Quits: atw (~user@ool-18bf5678.dyn.optonline.net) (Ping timeout: 250 seconds)
[19:54:55] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[20:04:56] *** Joins: matty_ma2 (~matt@185.226.144.20)
[20:06:41] *** Joins: atw (~user@ool-18bf5678.dyn.optonline.net)
[20:06:53] *** Quits: joe_colben (~joe____co@185.190.112.211) (Remote host closed the connection)
[20:10:15] *** Quits: atw (~user@ool-18bf5678.dyn.optonline.net) (Remote host closed the connection)
[20:11:02] *** Joins: atw (~user@ool-18bf5678.dyn.optonline.net)
[20:32:53] *** Quits: Frozenlo` (~user@modemcable251.64-203-24.mc.videotron.ca) (Remote host closed the connection)
[20:35:54] *** Joins: zmt01 (~zmt00@user/zmt00)
[20:36:57] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[21:00:55] *** Quits: atw (~user@ool-18bf5678.dyn.optonline.net) (Ping timeout: 256 seconds)
[21:08:32] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Quit: WeeChat 3.3)
[21:12:15] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 276 seconds)
[21:13:02] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[21:17:10] *** Quits: puchka (~marius@165.73.241.29) (Quit: leaving)
[21:22:32] *** Quits: matty_ma2 (~matt@185.226.144.20) (Ping timeout: 240 seconds)
[21:22:57] *** Quits: zmt01 (~zmt00@user/zmt00) (Read error: Connection reset by peer)
[21:30:36] *** Quits: henry40408 (~henry4040@175.181.155.165) (Remote host closed the connection)
[21:31:03] *** Joins: henry40408 (~henry4040@175.181.155.165)
[21:33:39] *** Joins: zmt00 (~zmt00@user/zmt00)
[21:42:29] *** Quits: zmt00 (~zmt00@user/zmt00) (Read error: Connection reset by peer)
[21:59:02] *** Joins: atw (~user@ool-18bf5678.dyn.optonline.net)
[22:01:35] *** Quits: atw (~user@ool-18bf5678.dyn.optonline.net) (Remote host closed the connection)
[22:05:37] *** Joins: evocatus (~evocatus@62.182.77.224)
[22:22:22] *** Joins: atw (~user@ool-18bf5678.dyn.optonline.net)
[22:24:25] *** Joins: zmt00 (~zmt00@user/zmt00)
[22:25:56] *** Quits: atw (~user@ool-18bf5678.dyn.optonline.net) (Remote host closed the connection)
[22:26:43] *** Joins: atw (~user@ool-18bf5678.dyn.optonline.net)
[22:29:37] *** Quits: mwnaylor (~user@2601:5ce:4300:5560::68b3) (Ping timeout: 240 seconds)
[23:42:24] *** Joins: joe_colben (~joe____co@185.190.112.211)
[23:44:48] *** Quits: atw (~user@ool-18bf5678.dyn.optonline.net) (Remote host closed the connection)
[23:47:54] *** Joins: atw (~user@ool-18bf5678.dyn.optonline.net)
[23:50:31] *** Joins: oscurochu (~oscurochu@37.120.215.100)
[23:55:17] *** Quits: atw (~user@ool-18bf5678.dyn.optonline.net) (Ping timeout: 256 seconds)
[23:57:01] *** Joins: selfsymmetric-mu (~matt@c-73-10-148-139.hsd1.nj.comcast.net)
