[00:01:10] *** Joins: XV8 (~XV8@2601:5cb:c001:50:d0cb:b834:298c:b12d)
[00:02:12] *** Joins: ALowther (~igloo@107.127.31.177)
[00:02:26] <jelly> matthewcroughan, btw, why are you forcing sync and a tiny bs?
[00:02:46] <greycat> I consider that a reasonable bs for most purposes.
[00:02:50] <matthewcroughan> jelly: performance and guarantee that if I unplug after dd succeeds, it will be fine
[00:03:03] <jelly> why not 1M or 4M
[00:03:13] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Ping timeout: 268 seconds)
[00:03:55] <matthewcroughan> Would they be better for a flash disk?
[00:03:55] <jelly> I would use a command that syncs once at the end, not the whole time
[00:04:16] <matthewcroughan> I thought 4M would be better for a hard disk, but 64k for a flash disk
[00:04:32] <jelly> those are closed to actual write block size on cheap flash than mere 64KiB
[00:05:11] <jelly> and a hard disk does not matter, it's just a performance issue there not longevity
[00:05:20] *** Quits: Strom (~strom@fedora/strom) ()
[00:05:26] <jelly> closer*
[00:05:38] <matthewcroughan> is there a way to detect the blocksize of the disk and optimize it for each disk?
[00:05:49] <matthewcroughan> I should be using bmaptool if I were really wanting to be efficient, I guess, rather than dd
[00:05:52] <jelly> no, all those SD cards lie
[00:06:45] <matthewcroughan> I'm basically writing a shell script that is just like Etcher, but all it does is use `file` to detect the archive type
[00:06:55] *** Joins: Strom (strom@fedora/strom)
[00:07:05] <matthewcroughan> I just have trouble with piping through sudo, I think
[00:07:24] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 250 seconds)
[00:07:27] <matthewcroughan> if I want to run two commands as sudo, how would I do it? `sh -c` doesn't allow me to accept `$1` or `$2` for example
[00:07:29] <jelly> the general idea looks fine, not sure why sudo'd be an issue there
[00:07:45] *** Joins: andril (~andril@2601:586:8400:e4:a965:a318:3940:38c4)
[00:07:57] <greycat> sudo sh -c 'x "$1" y "$2" z' x "$@"
[00:07:59] <jelly> cat | sudo dd of=/dev/ice seems a-ok
[00:09:00] <matthewcroughan> yeah, exactly, and I've not been successful in flashing a `.zst` file with `zstdcat` through sudo
[00:09:08] *** Joins: bodiccea (~bodiccea@user/bodiccea)
[00:09:10] <matthewcroughan> I'll try without sudo, as root, in order to see if the pipe through sudo is the issue
[00:09:27] *** Joins: yustin (~yustin@user/yustin)
[00:10:16] *** Quits: BSaboia_ (~bsaboia@187.19.136.30) (Quit: This computer has gone to sleep)
[00:11:49] *** Joins: Milijus (~Milijus@2601:580:4500:1305:e6e7:49ff:fe47:5310)
[00:12:03] <jelly> you're not doing something obviously wrong like flashing onto a partition instead of the whole drive, or some other automounting thing interfering with the device and trying to mount it?
[00:14:19] <Milijus> What the easiest way to find numbers in a text file and compare to make usre they are not equAL TO 0?
[00:14:26] *** Joins: shad (~shad@user/shad)
[00:14:28] *** Joins: zro (~zro@user/zro)
[00:14:41] *** Quits: jkwnki (~jkwnki@p2e579abf.dip0.t-ipconnect.de) (Quit: WeeChat 3.0)
[00:14:57] <greycat> "find numbers in a text file" has me very concerned already
[00:14:57] *** Quits: martinus__ (~martin@127.59.202.77.rev.sfr.net) (Ping timeout: 240 seconds)
[00:14:59] <phy1729> Are these numbers in a particular column or something?
[00:15:05] *** Joins: jkwnki (~jkwnki@p2e579abf.dip0.t-ipconnect.de)
[00:15:52] <greycat> I mean, a literal reading of the question would be something like grep '[1-9]'
[00:16:06] <Milijus> No there is a text of line, next line is a number only thyen another line of text and 4th is a line with a number. I need to make sure these numbers are not 0. Dont care about the text.
[00:16:13] *** Joins: ZAJDAN (~ZAJDAN@chladek-jar.zno.skynet.cz)
[00:16:29] <greycat> So, you want to read the 2nd and 4th lines?  OK.  { read; read -r line2; read; read -r line4; } < file
[00:16:30] *** Quits: libc (~weechat@user/tessio) (Ping timeout: 250 seconds)
[00:16:46] <matthewcroughan> jelly: that's right
[00:16:54] <ZAJDAN> how to create via mkdir directory with a few subdirectories in one command?
[00:16:59] <matthewcroughan> it's like this `flash-to file.zst /dev/sda`
[00:17:04] <greycat> ZAJDAN: mkdir -p
[00:17:14] <Milijus> greyvcat and how to I tie in !==0
[00:17:15] <ZAJDAN> thank YOu
[00:17:22] <phy1729> sounds like grep -x 0 would work
[00:17:27] *** Joins: adison (~adison@ip68-10-183-199.hr.hr.cox.net)
[00:17:34] <greycat> Milijus: after you've read the two lines into variables, apply:
[00:17:35] <davis> greycat: thanks that worked.
[00:17:35] <greycat> !faq valid
[00:17:35] <greybot> https://mywiki.wooledge.org/BashFAQ/054 -- How can I tell whether a variable contains a valid number?
[00:17:44] <matthewcroughan> jelly: ignore the nix code https://pastebin.com/raw/8TvMQkRH
[00:17:49] <davis> greycat: S3_JSON=$(jq -nc --arg BUCKET "$BUCKET" --arg NAME "$NAME" '{S3Object: {Bucket: $BUCKET, Name:$NAME}}')
[00:17:57] <greycat> or just do a string comparison against "0" if you don't care about them being valid numbers at all
[00:18:03] <davis> greycat: aws rekognition detect-labels --image ${S3_JSON}
[00:18:08] <greycat> davis: quotes.
[00:18:26] <Milijus> greycat: Can you write that so I can see?
[00:18:39] <greycat> if [[ $line2 != "0" || $line4 != "0" ]]
[00:18:57] <ZAJDAN> also possible create multiple subdirectories?
[00:18:59] <Milijus> greycat I see...let me try it....
[00:19:10] <davis> greycat: not following you? the jq thing added the quotes as desired. I appreciate it. What do you mean?
[00:19:27] <greycat> davis: "$S3_JSON" not ${S3_JSON}
[00:19:56] <davis> greycat: hmm. what is the difference exactly?
[00:20:01] <greycat> !quotes
[00:20:02] <greybot> https://mywiki.wooledge.org/Quotes
[00:20:52] *** Quits: jkwnki (~jkwnki@p2e579abf.dip0.t-ipconnect.de) (Quit: WeeChat 3.0)
[00:21:12] *** Joins: jkwnki (~jkwnki@p2e579abf.dip0.t-ipconnect.de)
[00:21:39] *** Quits: jkwnki (~jkwnki@p2e579abf.dip0.t-ipconnect.de) (Client Quit)
[00:21:57] *** Joins: jkwnki (~jkwnki@p2e579abf.dip0.t-ipconnect.de)
[00:23:53] *** Quits: adison (~adison@ip68-10-183-199.hr.hr.cox.net) (Quit: leaving)
[00:24:08] *** Joins: rgrinberg (~textual@2806:101e:7:2b:4d0:6ff9:1790:ff37)
[00:24:47] *** Joins: adison (~adison@ip68-10-183-199.hr.hr.cox.net)
[00:25:30] *** Quits: jkwnki (~jkwnki@p2e579abf.dip0.t-ipconnect.de) (Client Quit)
[00:25:38] *** adison is now known as liveacoustic
[00:25:49] *** Joins: jkwnki (~jkwnki@p2e579abf.dip0.t-ipconnect.de)
[00:25:54] <davis> greycat: i'm trying to see how that compares with section 3.5.3 of Shell Parmeter Expansion.  They dont use quotes there or even $ by itself as in that wiki entry.
[00:26:13] *** Quits: aeyxa (~aeyxa@EPLICA-CORP.bar1.SanDiego1.Level3.net) (Ping timeout: 256 seconds)
[00:26:53] <Milijus> greycat: And what if I want to read all the lines, I am assumong the text file may get mre lines later, and look for numbers?
[00:27:12] <greycat> !b2
[00:27:12] <greybot> bashphorism 2: The questioner will keep changing the question until it drives the helpers in the channel insane.
[00:27:19] <phy1729> grep -qx 0
[00:27:25] <greycat> Figure out what your question is, then ask it
[00:28:01] <greycat> remember, none of us can read your mind, or see your input file
[00:28:24] <Milijus> greycat: Sure I get that.
[00:28:38] *** Quits: ka80 (~ka80@111.60.138.34.bc.googleusercontent.com) (Quit: Leaving)
[00:28:50] *** Joins: BSaboia_ (~bsaboia@187.19.136.30)
[00:29:09] *** Quits: BSaboia_ (~bsaboia@187.19.136.30) (Read error: Connection reset by peer)
[00:29:21] <Milijus> My original question was: What's the easiest way to find numbers in a text file and compare to make usre they are not equal to 0
[00:29:29] <greycat> Define "FIND NUMBERS"!
[00:29:37] <greycat> How the fuck are we supposed to know what that means?!
[00:29:40] <Milijus> locate = find
[00:29:43] <greycat> ...
[00:29:46] <larryv> lol
[00:29:52] <Earnestly> tr hmm
[00:30:28] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[00:31:12] <Earnestly> tr -c 0123456789 \\n < file | awk NF
[00:31:23] <Earnestly> I'm sure this can be better with tr
[00:31:53] <phy1729> I think they just want to make sure no line is   0
[00:32:00] <Filystyn_> how to pass newline to command "this seems to not work always\n"
[00:32:09] <greycat> phy1729: then why can't they just say that?
[00:32:14] <Filystyn_> and I started to doubt what decides whenever it works
[00:32:25] <greycat> !$' > Filystyn_
[00:32:25] <greybot> Filystyn_: bash has a special form of quoting, $'string' in which backslash-character combinations are expanded. For example, IFS=$' \t\n' or echo $'It\'s embedded!' http://mywiki.wooledge.org/Quotes
[00:33:47] *** Quits: ALowther (~igloo@107.127.31.177) (Remote host closed the connection)
[00:34:03] *** Joins: ALowther (~igloo@107.127.31.177)
[00:34:16] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 250 seconds)
[00:34:37] *** Quits: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 240 seconds)
[00:36:06] *** Quits: magla (~gelignite@55d4d2c6.access.ecotel.net) (Quit: Stay safe!)
[00:36:18] <Exa> Hi, given a program that prints null-terminated paths in stdout, how can I open my editor with each path as an argument, while ensuring that null-terminated strings are preserved (and never goes through word splitting)?  I don't think it's possible to do that in Bash, is there a workaround? (my editor's stdin must be the terminal, so I can't use xargs).
[00:36:38] <greycat> xargs -0 editor
[00:36:45] <greycat> this requires a BSD or GNU xargs
[00:36:57] *** Quits: ouestbillie (~gallup@bl16-179-173.dsl.telepac.pt) (Ping timeout: 240 seconds)
[00:37:04] <greycat> ... *sigh*
[00:37:30] *** Quits: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de) (Remote host closed the connection)
[00:37:37] <greycat> Fine, you don't like xarsg?  OK, read the values into an array, and then pass the array as arguments.  In bash 4.4 you can use mapfile -d '' to do it.  Otherwise, a loop.
[00:37:43] <Exa> greycat: editor gets a pipe as stdin, not the terminal (of course)
[00:38:07] *** Joins: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de)
[00:38:21] <Exa> unless I'm missing something, maybe xargs could read from an alternate file descriptor, hmm
[00:38:38] <greycat> mapfile -d '' args; editor "${args[@]}"
[00:39:13] *** Joins: ouestbillie (~gallup@bl16-179-173.dsl.telepac.pt)
[00:39:56] <Milijus> Earnestly: Greet that pulled all the numbers from the text which will always be onbly 2 numbers.
[00:40:15] <greycat> Sense.  Start making some.
[00:40:32] <Earnestly> lol
[00:40:52] <Filystyn_> howabout
[00:40:58] <Earnestly> I have no intention of answering whatever you're asking Milijus because I don't know what you're trying to do
[00:40:59] <Filystyn_> "so\012me"
[00:41:03] <Filystyn_> hymu ?
[00:41:26] <Earnestly> I'm just mucking about with tr as a means to extract characters, I thought it could be done better
[00:41:30] <greycat> Filystyn_: $'so\012me'
[00:41:49] <larryv> Filystyn_: https://www.gnu.org/software/bash/manual/html_node/ANSI_002dC-Quoting.html
[00:41:50] <Earnestly> I thought tr could do this, without having to use \\n and such
[00:42:06] <Earnestly> -s helps
[00:42:33] <Milijus> Earnestly: So if you have 2 numbers in a file one on each line. How do I compare and make usre they are not 0?
[00:43:20] <greycat> Milijus: Are you saying "I only want to operate on lines that consist exclusively of digits"?
[00:43:22] <Filystyn_> Milijus sort file | uniq | wc -l  ?
[00:43:36] <Earnestly> Milijus: { read -r first; read -r second; } < file; ... would be one way
[00:43:39] <Earnestly> But I'd probably use awk
[00:43:49] <Filystyn_> oh and they can't be zero
[00:44:20] <greycat> Earnestly: they changed the question multiple times.  At one point they said the numbers would be on lines 2 and 4, and I gave them an answer to that.  Then they said the numbers could be anywhere.
[00:44:40] <Milijus> gtreycat: Who is they?
[00:44:47] <Filystyn_> ;-)
[00:44:47] <greycat> You!
[00:44:48] <Exa> greycat: thanks I didn't know mapfile
[00:45:02] <greycat> Jesus fucking christ.  I am DONE with this idiot.  *plonk*
[00:45:03] <Earnestly> greycat: Heh, yeah I suspect that much is going on.  If I feel cheeky I just answer as literally as possible
[00:45:08] <Milijus> greycat: So I may also call you those?
[00:45:09] <Exa> but I still can't get this to work
[00:45:31] <Filystyn_> anyway thx for help
[00:45:39] <greycat> Exa: mapfile -d '' args < <(some command); editor "${args[@]}"
[00:46:17] <Exa> oh, I tries the <() syntax but I didn't of just redirecting it to stdin, thanks
[00:46:24] <Exa> s/tries/tried/
[00:46:34] *** Quits: CaveDev (~CaveDev@p3ee3927c.dip0.t-ipconnect.de) (Quit: Leaving)
[00:46:44] <Earnestly> tr -dc 0123456789, there
[00:46:53] <Exa> and I get the character device as expected, thanks
[00:47:31] <greycat> "I have a file.  Each line is either an integer, or an arbitrary string of text.  If the line is an integer, then I want to ....."
[00:47:56] <greycat> That is one possible definition of what you might have wanted.
[00:48:07] *** Quits: timj (~timj@user/timj) (Quit: Leaving.)
[00:48:17] *** Quits: ALowther (~igloo@107.127.31.177) (Remote host closed the connection)
[00:48:18] *** Joins: timj (~timj@user/timj)
[00:48:27] <Earnestly> I bet it's something like xml/json/yaml file
[00:48:46] <greycat> That wouldn't surprise me.
[00:48:54] <Milijus> greycat: You are a smart ass linguist i can tell.
[00:49:32] <emanuele6> s/ass/cat/
[00:49:36] *** Quits: hub (~hub@user/hub) (Quit: WeeChat 2.8)
[00:49:40] <Earnestly> Milijus: It is just better to be open and honest about what you're doing; if it's that confidential you maybe ought not be asking here
[00:50:39] <Milijus> I am meerly looking for help not to be arrogant and outsmart anybody. Honest question looking for a straigh answer.
[00:51:12] <Milijus> But I get the drill...so off I go and will get it solved out without any arrogance!
[00:51:42] *** Joins: hesse (~TheHerman@gateway/tor-sasl/thehermann)
[00:51:43] <davis> thanks again folks. have a good one.
[00:51:45] *** Quits: davis (~davis@70-130-78-202.lightspeed.rlghnc.sbcglobal.net) (Quit: leaving)
[00:52:20] <Filystyn_> also, can I do somehow inside command opt1 $( do some stuff and pass right away )
[00:52:50] <larryv> what?
[00:52:55] <emanuele6> what does that mean?
[00:53:21] <Filystyn_> var=$( do some stuff ); command opt1 "#var"
[00:53:38] <Filystyn_> $ **
[00:53:51] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Ping timeout: 276 seconds)
[00:54:01] <greycat> are you asking whether you can do   command opt1 "$(do stuff)"  ?  Yes.
[00:54:02] <phy1729> that_command arg1 "$(output_of_this_becomes_arg2)"
[00:54:04] <emanuele6> yes, you can run.   command opt1 "$(do stuff)"
[00:54:07] <greycat> Just quote correctly.
[00:54:12] *** Quits: mz` (~mz`@user/mz/x-8532539) (Ping timeout: 250 seconds)
[00:55:28] <Filystyn_> okie, thx
[00:55:38] *** Joins: mz` (~mz`@user/mz/x-8532539)
[00:55:50] *** Quits: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de) (Remote host closed the connection)
[00:55:56] *** Quits: ouestbillie (~gallup@bl16-179-173.dsl.telepac.pt) (Ping timeout: 250 seconds)
[00:56:35] *** Joins: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de)
[00:57:32] *** Joins: ouestbillie (~gallup@185.65.135.248)
[00:57:38] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[00:57:58] <JyZyXy> whats a good way of getting the VERSION and PATCHLEVEL from Linux's Makefile?
[00:58:00] <Kartagis> at the top of a script, what does #!/bin/bash mean? especially #! part
[00:58:26] <greycat> !shebang
[00:58:26] <greybot> The top of a script MUST have a #! line, called 'shebang' or 'hashbang'. It tells the kernel what program to run your script with. We recommend `#!/usr/bin/env bash` (why: http://stackoverflow.com/a/733901/58803). http://mywiki.wooledge.org/BashGuide/CommandsAndArguments#Scripts http://www.in-ulm.de/~mascheck/various/shebang/
[00:58:56] <greycat> !metaurl shebang
[00:58:56] <greybot> https://wooledge.org/~greybot/meta/shebang
[00:59:13] <greycat> lhunath... hmm.
[00:59:17] <ZAJDAN> in bash script I have this command: https://termbin.com/ryht
[00:59:40] <ZAJDAN> returns 'Can't open parameter file <(openssl ecparam -name secp384r1)'
[00:59:56] <larryv> JyZyXy: you're going to have to provide more context, i expect
[01:00:00] <ZAJDAN> but when I run the command out of the script directly from terminal..is not problem
[01:00:14] <JyZyXy> larryv: wait, how's so?
[01:00:27] <ZAJDAN> should I escape the par of the command?
[01:00:45] <Kartagis> thanks greycat
[01:00:46] <larryv> ZAJDAN: is bash running your script?
[01:00:58] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[01:00:59] <ZAJDAN> larryv: yes
[01:01:04] <emanuele6> are you sure?
[01:01:08] <larryv> frankly i don't believe you
[01:01:19] <larryv> but have you checked?
[01:01:31] <greycat> if you feed <() to dash, you get a very different error
[01:01:45] <emanuele6> yes, ( will be a syntax error in dash
[01:01:54] <greycat> of course, they could be feeding it to something other than bash or dash
[01:02:23] <ZAJDAN> so is it solvable in bash script?
[01:02:31] <emanuele6> that is valid bash.
[01:03:14] <larryv> that's why we're wondering what shell your script is being run by
[01:03:42] <JyZyXy> kversion="$(grep -m1 VERSION Makefile | cut -d' ' -f3)"; kpatch="$(grep -m1 PATCHLEVEL Makefile | cut -d' ' -f3)"
[01:04:10] <ZAJDAN> larryv: #!/bin/bash
[01:04:33] <greycat> !forget shebang
[01:04:34] <greybot> OK, greycat
[01:04:36] <greycat> !learn shebang A script MUST begin with a #! line, called the "shebang" (from hash+bang). It tells the kernel what interpreter to run, to read your script. See <http://stackoverflow.com/a/733901/58803> and <http://mywiki.wooledge.org/BashGuide/CommandsAndArguments#Scripts> and <http://www.in-ulm.de/~mascheck/various/shebang/>
[01:04:36] <greybot> OK, greycat
[01:06:15] <ZAJDAN> I call the script 'sh myscript.sh'
[01:06:19] <emanuele6> ^^^
[01:06:22] <larryv> lmao
[01:06:27] *** Joins: situ_ (~situ@ip-89-176-145-74.net.upcbroadband.cz)
[01:06:40] <emanuele6> ZAJDAN: perhaps run it as   bash myscript.sh
[01:06:46] <twkm> ewww.
[01:07:01] <twkm> though as a test ...
[01:07:52] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Read error: Connection reset by peer)
[01:07:52] *** Quits: a_west_ (~a_west@2a01:4f9:c010:5c49::1) (Quit: Bye!)
[01:08:03] <ZAJDAN> emanuele6: yes now it works...Thank all!
[01:08:06] *** Joins: lrngystdlted^ (~lrngystdl@50-207-160-170-static.hfc.comcastbusiness.net)
[01:08:44] <emanuele6> so bash was not running your script. whatever sh is on your system was.
[01:09:09] <emanuele6> the shebang only matter if your run the script as /path/to/file and that file is executable
[01:09:36] <emanuele6> it just tells the kernel to run   /bin/bash /path/to/file   in order to execute the file
[01:09:54] *** Joins: thyriaen (~thyriaen@dynamic-078-055-124-059.78.55.pool.telefonica.de)
[01:10:03] *** Joins: rcernin (~rcernin@101.189.141.138)
[01:10:18] *** Joins: a_west (~a_west@2a01:4f9:c010:5c49::1)
[01:10:19] <emanuele6> if you run   sh /path/to/file   the shebang is just a line of text. and sh runs the script obviously (you explicitly asked sh to run it)
[01:10:34] <greycat> specifically, the shebang is a comment to the shell
[01:10:58] <JyZyXy> this seems to be the alternative: awk '/VERSION/ { print $3; exit }' Makefile
[01:11:04] <JyZyXy> there's always an awk way
[01:11:17] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[01:12:52] <JyZyXy> it's actually 4 characters shorter!
[01:13:06] <JyZyXy> no wait no its not
[01:13:28] *** Joins: analognoise (~analognoi@2600:8801:8c26:9e00:985c:5a64:faa:5347)
[01:13:44] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[01:15:03] *** Joins: analognoise1 (~analognoi@185.202.221.105)
[01:17:24] *** Quits: YaoNai (~YaoNai@user/yaonai) (Quit: leaving)
[01:17:32] *** Quits: analognoise1 (~analognoi@185.202.221.105) (Client Quit)
[01:17:49] *** Joins: analognoise1 (~analognoi@185.202.221.105)
[01:18:30] <twkm> if you eliminate whitespace, which you cannot do with grep|cut except around the pipe symbol.  should you, well ...
[01:18:37] *** Quits: analognoise (~analognoi@2600:8801:8c26:9e00:985c:5a64:faa:5347) (Ping timeout: 240 seconds)
[01:20:06] *** analognoise1 is now known as analognoise
[01:21:13] <JyZyXy> twkm: oh you're right! awk can be totally condensed
[01:21:39] *** Joins: nickdiaz1wag209 (~bjpenn_@13.110.54.39)
[01:22:14] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[01:22:25] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[01:23:15] <JyZyXy> awk has 4188maxresident while grep|cut has 2544maxresident :)
[01:24:15] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[01:24:17] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 240 seconds)
[01:24:50] *** Joins: unop (~unop@194.154.249.71)
[01:25:55] *** Quits: sinaowolabi_ (~SinaOwola@160.152.24.117) (Ping timeout: 256 seconds)
[01:27:40] *** Joins: sinaowolabi_ (~SinaOwola@160.152.24.117)
[01:28:05] *** Quits: Filystyn_ (~piotr@095160035009.warszawa.vectranet.pl) (Quit: leaving)
[01:28:45] <e36freak> idn't know we were golfing
[01:28:51] <phogg> golf is fun
[01:29:00] <phogg> that's why everyone golfs
[01:29:02] <phogg> except pro golfers
[01:29:07] <phogg> and old people who want exercise
[01:29:27] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[01:29:48] <irc_user> Kartagis: You could for example put `#!/usr/bin/python3` at the top of a script, and then running it with `./script_name` would use python3 to run it, without you having to type `python3 script_name`. Just wanted to share that tidbit.
[01:29:57] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[01:30:53] <Kartagis> thanks irc_user
[01:31:25] *** Quits: Minvera (~Minvera@user/Minvera) (Quit: Leaving)
[01:32:12] *** Quits: egrain (felix@31.204.155.215) (Quit: egrain)
[01:32:17] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[01:32:59] *** Joins: lavaball (felix@31.204.155.215)
[01:33:49] *** Quits: andril (~andril@2601:586:8400:e4:a965:a318:3940:38c4) (Ping timeout: 240 seconds)
[01:34:31] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[01:35:18] *** Joins: vlm (~vlm@user/vlm)
[01:37:49] *** Quits: n4dir (~user@i5E86C53D.versanet.de) (Remote host closed the connection)
[01:38:27] *** Joins: son0p (~ff@2800:484:1d81:b700::5)
[01:39:50] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[01:40:47] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[01:41:07] *** Joins: darkxploit (~jay@c-67-172-32-230.hsd1.ct.comcast.net)
[01:43:18] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Client Quit)
[01:44:53] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:45:31] *** Joins: victorbrca (~victorbrc@user/victorbrca)
[01:46:12] *** Quits: adac (~adac@static.153.233.47.78.clients.your-server.de) (Ping timeout: 250 seconds)
[01:49:57] *** Quits: jkwnki (~jkwnki@p2e579abf.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[01:49:59] *** Quits: rcernin (~rcernin@101.189.141.138) (Quit: WeeChat 3.3)
[01:50:13] *** Joins: rcernin (~rcernin@101.189.141.138)
[01:50:57] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[01:53:04] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[01:53:24] *** Joins: Inline (~Inline@ip-037-201-240-204.um10.pools.vodafone-ip.de)
[01:57:18] *** Quits: dreamon (~dreamon@p54b1472c.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[01:58:23] *** Quits: lavaball (felix@31.204.155.215) (Quit: lavaball)
[01:59:24] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Remote host closed the connection)
[01:59:44] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[02:01:12] *** Joins: LiftLeft (~LiftLeft@fixed-138-186-31-170.totalplay.net)
[02:01:37] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 240 seconds)
[02:03:38] *** Quits: Gerula (~Gerula@user/gerula) (Quit: Leaving)
[02:06:30] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (Quit: Lost terminal)
[02:08:00] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[02:08:00] *** Joins: vysn (~vysn@user/vysn)
[02:08:09] *** Quits: rgrinberg (~textual@2806:101e:7:2b:4d0:6ff9:1790:ff37) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:08:34] *** Quits: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk) (Read error: Connection reset by peer)
[02:11:32] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[02:12:32] *** Joins: rgrinberg (~textual@2806:101e:7:2b:4d0:6ff9:1790:ff37)
[02:12:38] *** Quits: timm (~timm@user/timm) (Ping timeout: 250 seconds)
[02:12:44] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[02:13:49] *** Quits: kj- (~kj@beta.aerisnetwork.net) (Ping timeout: 240 seconds)
[02:14:02] *** Quits: xx (~xx@user/xx) (Ping timeout: 240 seconds)
[02:16:24] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[02:17:51] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[02:18:19] *** Joins: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au)
[02:24:12] *** Joins: malina (~malina@user/malina)
[02:27:00] *** Joins: rcernin_ (~rcernin@101.189.141.138)
[02:30:44] <Friithian> so, my prof learned tcsh and she's going to stay with that, and have us (the class) use bash. Interesting.
[02:33:49] *** Quits: samgranieri (~samgranie@user/samgranieri) (Quit: samgranieri)
[02:35:36] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[02:35:59] *** Joins: andril (~andril@2601:586:8400:e4:a965:a318:3940:38c4)
[02:37:01] <Blondie101010> Friithian:  it's unclear what you're trying to get at
[02:37:21] <Friithian> I'm just stating something
[02:37:22] <Blondie101010> if she's teaching to use bash, she should learn it, but maybe she does
[02:37:47] <Friithian> she said quite literally that she learned tcsh and hasn't learned bash, and that she'd stick with it while we did bash
[02:37:58] <Blondie101010> what's the course about?
[02:38:03] <Friithian> systems programming
[02:38:14] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[02:38:32] <Blondie101010> ok and did she give you constraints to ensure your scripts work on both?
[02:39:01] <Blondie101010> I really doubt that'd be the case, but if it is, she should get coached
[02:39:35] <Friithian> so far we've only done stuff that'd work in both (cd, mv, vi, etc)
[02:40:13] *** Joins: andril1 (~andril@c-66-229-99-96.hsd1.fl.comcast.net)
[02:41:15] *** Quits: andril1 (~andril@c-66-229-99-96.hsd1.fl.comcast.net) (Client Quit)
[02:43:27] *** Quits: useretail (~useretail@185.132.19.151) (Read error: Connection reset by peer)
[02:45:16] <e36freak> "i want you to run programs that run in both python and java"
[02:45:55] <e36freak> s/run/write/
[02:47:31] *** Quits: rcernin_ (~rcernin@101.189.141.138) (Ping timeout: 256 seconds)
[02:49:44] *** Joins: Circuitsoft (uid393878@id-393878.lymington.irccloud.com)
[02:50:31] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[02:51:45] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:52:00] <Circuitsoft> Question: Anyone know if there's a way to run `sudo` and have it ask for the password for the current `$SUDO_USER` instead of `$USER`?
[02:52:38] <Circuitsoft> Or, basically, a way to `sudo` as `$SUDO_USER`? Ideally, the 2nd-level `$SUDO_USER` will be set to the first-level `$SUDO_USER` instead of `$USER`.
[02:52:48] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Ping timeout: 276 seconds)
[02:53:18] *** Quits: knstn (~knstn@ppp-94-66-57-10.home.otenet.gr) (Quit: leaving)
[02:53:54] *** Quits: andril (~andril@2601:586:8400:e4:a965:a318:3940:38c4) (Quit: WeeChat 3.4)
[02:54:33] <emanuele6> sudo -u "$SUDO_USER"
[02:54:45] *** Quits: uuidNuni1 (~weechat@193.123.227.17) (Remote host closed the connection)
[02:55:16] *** Quits: myrrh (~markus@172.58.196.49) (Ping timeout: 268 seconds)
[02:55:51] *** Joins: uuidNuni1 (~weechat@193.123.227.17)
[02:55:53] *** Joins: andril (~andril@2601:586:8400:e4:a965:a318:3940:38c4)
[02:55:57] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[02:57:21] <Circuitsoft> Except, I want to do that without knowing the password for $USER.
[02:57:37] <tirnanog> not a bash question but it can't be done (-u isn't the answer). the security mechanism is always based on the current real user id, as is described in the opening paragraph of the utility description.
[02:58:09] <Circuitsoft> I see there's no `sudo` channel on Libera.Chat. Figured `bash` would be the next best place to ask.
[02:58:10] <tirnanog> unless you want to do something convoluted such as instate a passwordless security policy that lets the user execute sudo, in turn, as the 'sudo user'.
[02:59:10] *** Joins: useretail (~useretail@185.132.19.151)
[03:00:06] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[03:00:55] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 256 seconds)
[03:02:14] *** Joins: seninha (~seninha@user/seninha)
[03:03:36] *** Quits: chomwitt (~chomwitt@2a02:587:dc06:be00:12c3:7bff:fe6d:d374) (Remote host closed the connection)
[03:05:04] <tirnanog> n.b. it would end up looking like sudo -u "$SUDO_USER" sudo ... which is rather odd, albeit possible.
[03:05:20] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:09:09] *** Joins: rcernin_ (~rcernin@101.189.141.138)
[03:14:23] *** Quits: yustin (~yustin@user/yustin) (Ping timeout: 268 seconds)
[03:14:38] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[03:15:02] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:15:38] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[03:17:07] *** Joins: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net)
[03:18:16] *** Quits: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Read error: Connection reset by peer)
[03:18:50] *** Joins: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net)
[03:19:47] *** Joins: kj (~kj@kj.aerisnetwork.net)
[03:20:01] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:20:38] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[03:20:54] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Quit: WeeChat 3.4)
[03:22:18] *** Quits: zro (~zro@user/zro) (Quit: WeeChat 3.4)
[03:22:32] <irc_user> Friithian: Just FYI, much of what you will be using (mv, vi, etc.) are binaries, they're not part of bash or presumably tcsh. They're programs that you can run with the shell, but the shell itself has nothing to do with them. `cd` though is builtin I believe.
[03:24:37] *** Quits: kj (~kj@kj.aerisnetwork.net) (Ping timeout: 240 seconds)
[03:24:46] *** Quits: hesse (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[03:25:43] <Friithian> irc_user: cd is a builtin
[03:26:09] <Friithian> I know a fair bit about bash, from what I've seen so far we shouldn't really run into any problems with this
[03:26:21] <Friithian> most of this class will be more focused on c/c++ and syscalls
[03:26:23] *** Joins: edlou (uid413273@id-413273.helmsley.irccloud.com)
[03:26:42] *** Joins: myrrh (~markus@172.58.196.197)
[03:27:02] *** Quits: wwilliam (~afernande@user/wwilliam) (Ping timeout: 240 seconds)
[03:27:30] <greycat> cd has to be built into the shell, because it alters the shell's internal state
[03:27:31] <irc_user> Oh okay, I didn't know if it was an intro course or whatever so I figured I'd just throw that out there.
[03:28:06] <Friithian> it's a senior level class in the comp sci major
[03:28:16] <Friithian> although many of these people are using the cli for the first time…
[03:28:34] <irc_user> Thanks grey.
[03:28:40] <irc_user> And that's crazy
[03:28:53] <irc_user> I can't imagine knowing how to code but not knowing how to use a cli
[03:29:21] <tirnanog> have you ever worked with developers? heh.
[03:29:24] <Friithian> it's sad, quite frankly
[03:29:54] <ablegreen> 8
[03:30:12] <irc_user> I don't even work professionally and anything I do on a computer is more than 10x faster because of bash/zsh
[03:30:23] <irc_user> let alone coding
[03:30:35] <tirnanog> they're often incorrigible in this regard.
[03:30:54] <irc_user> By developers you mean web developers presumably?
[03:31:45] <tirnanog> my experience is mostly with java developers but yes, those too.
[03:32:16] <irc_user> Ah. No experience with other developers here :P I would have assumed that most developers know bash well?
[03:32:21] <tirnanog> lol
[03:32:32] *** Quits: myrrh (~markus@172.58.196.197) (Changing host)
[03:32:32] *** Joins: myrrh (~markus@user/poet)
[03:33:00] <tirnanog> I don't know a single person who is professionally a "deveoper" that can do anything but stumble about in a shell.
[03:33:10] <irc_user> LOL
[03:33:20] <tirnanog> some of them may write acceptable scripts, but usually not in bash.
[03:34:03] <irc_user> That's surprising. Maybe I could actually get a job, lol.
[03:34:26] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[03:36:36] *** Joins: anaveragehuman (~anaverage@user/anaveragehuman)
[03:37:20] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[03:39:02] *** Quits: rcernin (~rcernin@101.189.141.138) (Ping timeout: 240 seconds)
[03:44:06] *** Joins: kj (~kj@kj.aerisnetwork.net)
[03:45:20] <Friithian> I'm a non-professional dev and I can write an ok script :P
[03:47:04] <phogg> tirnanog: I like to think I can do more than stumble.
[03:47:16] <tirnanog> I'm sure you can.
[03:47:36] <phogg> that said, shell competence is thin in the ground everywhere I've been
[03:48:03] <phogg> I did meet one person *once* who used bash history expansion more than just !m
[03:48:12] <tirnanog> the simple fact that you are here implies that you are of a rarified milieu.
[03:48:47] <phogg> I come here to spy on people saying things about bash I don't know. The number of times that happens decreases as the years go by, but it still happens. Some of you are freaks.
[03:49:06] <irc_user> phogg: Exactly how I feel LOL
[03:49:13] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[03:49:28] <Friithian> all I've learned from here is *PORTABILITY REEEEEEE* :P
[03:49:45] <phogg> portability is a fetish
[03:50:32] <Friithian> I am more than happy to make something very non-portable if it'll save me 5 seconds
[03:52:45] <phogg> I tend to work in systems where *I* control what software is installed. I can put bash in my VMs and containers. That saves me time futzing with a lot of portability concerns.
[03:52:50] *** Joins: loganlee (~Thunderbi@user/loganlee)
[03:53:18] <Friithian> if it doesn't have bash on it you better be paying me a lot of money
[03:53:22] *** Quits: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Quit: Leaving)
[03:54:22] <phogg> the big issue is I get used to modern bash and then have to port code back to e.g. your bash 3.1 or what have you
[03:54:39] <matthewcroughan> Just use Nix lol
[03:55:19] <phogg> you don't have to convince me
[03:55:27] <Friithian> my solution to that is ``lmao upgrade or suffer'' which doesn't work that well in professional settings
[03:55:47] <matthewcroughan> I get paid to do Nix every day.
[03:56:00] <matthewcroughan> And most of what I do now is writing shell scripts with it that are inherently portable.
[03:56:09] *** Joins: medard__ (~mithrin@stip-static-55.213-81-207.telecom.sk)
[03:56:18] <matthewcroughan> I can write as complex a script as I want, that uses whatever things I want, and it's all portable.
[03:57:09] <matthewcroughan> If you can't convince your company to use Nix. I am sorry.
[03:57:41] <tangy> Nix is.. Linux?
[03:57:52] <Friithian> nix is a package manager
[03:57:59] <Friithian> NixOS is a distro
[03:58:03] <matthewcroughan> Nix is an expression language
[03:58:15] <matthewcroughan> nix is a package manager that uses the expression language
[03:58:22] <matthewcroughan> NixOS is a distribution of Linux built using those two things
[03:58:39] <matthewcroughan> https://edolstra.github.io/pubs/phd-thesis.pdf
[03:58:43] *** Quits: medard (~mithrin@stip-static-62.213-81-207.telecom.sk) (Ping timeout: 256 seconds)
[03:58:59] <tangy> neat
[03:59:23] <matthewcroughan> If I wanna build glibc from source, the following expression will do so `${glibc}`
[04:00:25] <matthewcroughan> Then the path `"${glibc}/lib" will resolve to something like `/nix/store/some-hash-glibc/lib` and have have `libc6.so` in it. But the expression `${glibc}` results in glibc being built and put in the nix store for you.
[04:00:36] <matthewcroughan> The building of the thing is atomic/transactional, pulling the plug won't effect it.
[04:00:53] <matthewcroughan> Stateless is the motto. And it works. My shill is over.
[04:01:11] <tangy> okay
[04:02:00] <tangy> ooh, puppies!
[04:02:32] *** Joins: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net)
[04:03:43] *** Joins: lotharn (~kvirc@2607:fb90:4a2b:a573:ec5f:10c0:33e4:2f0c)
[04:04:01] <lotharn> anyone wanna help me with a simple awk problem? how do i get awk to recognize a field seperator that is , but one of the fields has a "" string with , in it?
[04:04:20] <greycat> !csv
[04:04:21] <greybot> Comma Separated Values: a format that stores data as records composed of fields, usually comma-delimited. Documented by RFC4180, though implementations vary. Utilities such as sed, grep and cut are not suitable for parsing it. Instead, use csvline (from http://to.lhunath.com/bashlib), csvtool, csvkit, csv (Python), Text::CSV (Perl) etc.
[04:05:16] *** Quits: thyriaen (~thyriaen@dynamic-078-055-124-059.78.55.pool.telefonica.de) (Quit: Leaving)
[04:06:31] *** Quits: rgrinberg (~textual@2806:101e:7:2b:4d0:6ff9:1790:ff37) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:09:59] <useretail> is this valid: if [[ ${filename} =~ part[0-9] ]]; then
[04:10:01] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:5d5:b8f6:8b3e:1fcd)
[04:10:27] *** Joins: Gerula (~Gerula@user/gerula)
[04:10:33] <greycat> Sure.
[04:11:06] <greycat> # filename=/x/spart82x/q; if [[ ${filename} =~ part[0-9] ]]; then echo match; fi
[04:11:08] <shbot> greycat: match
[04:11:23] <useretail> to add dot: \.part[0-9]
[04:11:28] <useretail> ?
[04:11:35] *** Joins: ferdna (~ferdna@user/ferdna)
[04:11:43] <useretail> or just . will do?
[04:11:58] <greycat> you don't need to use regex syntax here. you could use regular glob-style patterns.
[04:12:22] <greycat> what are you *actually* trying to match?
[04:12:49] <lotharn> greycat: really? i have to install something?
[04:13:07] <useretail> greycat: .part0 .. .partN
[04:13:25] <greycat> I don't know what that means.  I can't read your mind.
[04:13:55] *** Joins: yagamilito (~yagamilit@2601:642:4600:34b0:c022:ab17:ec7:a01c)
[04:13:56] <greycat> can that appear anywhere in the variable?  does it have to be at the end?  is N a single digit or can it be multiple digits?
[04:14:35] <useretail> i'd say in the middle
[04:14:53] <useretail> yes, N is a single digit
[04:15:02] *** Quits: somlis (~somlis@user/somlis) (Ping timeout: 240 seconds)
[04:15:12] <greycat> well, that question becomes moot if the pattern isn't being matched at the end
[04:15:17] <useretail> i have to match first digit that appears
[04:15:29] <greycat> you mean you have to *extract* the digit?
[04:15:30] <phogg> I assume "match" here means "capture"
[04:15:39] <tirnanog> lotharn: if you're not going to implement a proper parser by yourself, it would be a good idea. note that csvline is a 27-line function that one can simply lift from bashlib.
[04:15:48] <greycat> because that pushes the pointer back toward regex
[04:16:05] <yagamilito> Hello
[04:16:05] <yagamilito> i am trying yq to replace value in my yaml file
[04:16:06] <yagamilito> yq eval '.users.user.exec.args|= "- token"' shell.yaml >> shell1.yaml
[04:16:06] <yagamilito> i am expecting
[04:16:07] <yagamilito>       args:
[04:16:07] <yagamilito>         - "token"
[04:16:08] <yagamilito> but i am getting
[04:16:08] <yagamilito> args: '- token'
[04:16:09] <yagamilito> how to fix this ?
[04:16:15] *** Joins: BSaboia_ (~bsaboia@187.19.136.30)
[04:16:33] <phogg> yagamilito: yq isn't bash.
[04:16:37] <useretail> grawity, no, not to extract, just check if a string contains that regex
[04:17:01] <greycat> useretail: then use globs.  [[ $filename = *.part[0-9]* ]]
[04:17:18] *** Joins: juno__ (~junebug@2600:1700:3db0:2540:4c4c:4d99:d97c:c79c)
[04:17:28] <useretail> may i ask why not regex?
[04:17:33] <irc_user> useretail: what are you trying to do beyond matching? I feel like you just want to loop through all filenames with partN in them
[04:17:35] <greycat> because it's not NEEDED
[04:17:37] *** Quits: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Ping timeout: 256 seconds)
[04:17:54] <phogg> useretail: why use a bulldozer to drive a nail into a board?
[04:18:02] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:5d5:b8f6:8b3e:1fcd) (Ping timeout: 240 seconds)
[04:18:12] <useretail> irc_user, it's not x y problem, relax
[04:18:18] <lotharn> when you can just install a nail maker.
[04:18:25] <irc_user> I'm pretty relaxed
[04:18:29] <useretail> cool :)
[04:18:32] <irc_user> :)
[04:18:53] <phogg> useretail: I believe the classic answer to the question of "why not use regex?" is this: because now you have two problems.
[04:19:00] *** Joins: somlis (~somlis@user/somlis)
[04:19:49] <greycat> @jwz
[04:19:51] <greycat> !jwz
[04:19:51] <greybot> "Some people, when confronted with a problem, think ``I know, I'll use regular expressions.'' Now they have two problems." | http://xkcd.org/1171/
[04:20:05] <phogg> I should have known there'd be a shortcut for that.
[04:20:27] <Friithian> regex is something good
[04:20:37] <Friithian> it's always fun (if you find fun in pain)
[04:20:45] <phogg> I love regex. I love it dearly and deeply. I love it so much I hate it, and I advise you not to use it.
[04:21:04] <lotharn> greybot: shutup. i'll create 6 problems for every one that comes to me, and when I'm done I'll have the experience of solving 7 problems.
[04:21:16] <lotharn> life is a rpg
[04:21:26] <tirnanog> well that sure told it.
[04:21:28] <larryv> yeah, shut up greybot!
[04:21:36] <useretail> what's the difference would be between [[ $filename = *.part[0-9]* ]] and [[ $filename == *.part[0-9]* ]]
[04:21:51] <phogg> useretail: the latter will take a lot fewer CPU cycles
[04:21:52] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[04:22:07] <phogg> useretail: no, there is no difference
[04:22:38] <phogg> wait wait, let me put my joker hat back on: One character!
[04:22:49] <useretail> phogg, which answer should i rely on?
[04:23:04] <phogg> useretail: the middle one is the most serious
[04:23:09] *** Joins: dhruv_sha256 (~dhruv_sha@103.226.226.121)
[04:23:36] <phogg> but obviously = is better. savethebytes
[04:23:44] <tirnanog> that is, there's no difference between = and == in [[ other than potentially inducing a tedious discussion pertaining to personal tastes.
[04:24:16] <phogg> the real fun starts when you ask again about == vs. = inside [
[04:24:30] <tirnanog> yes, indeed.
[04:24:54] <useretail> but i won't :D
[04:26:09] <useretail> thanks for the help guys
[04:29:45] *** Joins: mat001 (~mat001@213.143.69.121)
[04:31:13] *** Quits: LiftLeft (~LiftLeft@fixed-138-186-31-170.totalplay.net) (Ping timeout: 256 seconds)
[04:32:47] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[04:33:02] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:33:33] *** Joins: jonthesnow (~xizhendu@36.112.179.225)
[04:33:54] *** Quits: mat001 (~mat001@213.143.69.121) (Ping timeout: 250 seconds)
[04:34:02] *** Quits: andril (~andril@2601:586:8400:e4:a965:a318:3940:38c4) (Ping timeout: 240 seconds)
[04:35:45] *** Quits: nickdiaz1wag209 (~bjpenn_@13.110.54.39) (Ping timeout: 256 seconds)
[04:36:09] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[04:40:16] *** Quits: freep (~freepppp@46.246.189.172.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[04:43:17] *** Quits: liveacoustic (~adison@ip68-10-183-199.hr.hr.cox.net) (Ping timeout: 240 seconds)
[04:44:06] *** Quits: juno__ (~junebug@2600:1700:3db0:2540:4c4c:4d99:d97c:c79c) (Quit: Leaving)
[04:45:36] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 250 seconds)
[04:46:02] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:47:27] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[04:48:43] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:5d5:b8f6:8b3e:1fcd)
[04:49:37] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[04:50:00] *** Quits: XV8 (~XV8@2601:5cb:c001:50:d0cb:b834:298c:b12d) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:50:00] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[04:50:06] *** Joins: rgrinberg (~textual@187.223.115.174)
[04:52:17] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[04:54:32] *** Quits: rgrinberg (~textual@187.223.115.174) (Ping timeout: 240 seconds)
[04:56:10] *** Quits: dhruv_sha256 (~dhruv_sha@103.226.226.121) (Quit: WeeChat 3.4)
[04:56:29] *** Joins: XV8 (~XV8@c-73-148-120-152.hsd1.va.comcast.net)
[04:56:37] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[04:58:13] *** Quits: SuperLag (~akulbe@user/superlag) (Ping timeout: 256 seconds)
[04:58:36] *** Quits: ZAJDAN (~ZAJDAN@chladek-jar.zno.skynet.cz) (Ping timeout: 250 seconds)
[04:59:46] *** Joins: SuperLag (~akulbe@user/superlag)
[04:59:50] *** Quits: sinaowolabi_ (~SinaOwola@160.152.24.117) (Ping timeout: 268 seconds)
[05:01:46] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[05:02:02] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:04:31] *** justache is now known as justGhost
[05:06:09] *** Joins: rcernin__ (~rcernin@101.189.141.138)
[05:08:58] *** Joins: luckiswithme (~luckiswit@149.167.138.23)
[05:09:26] *** Quits: XV8 (~XV8@c-73-148-120-152.hsd1.va.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[05:09:42] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:5d5:b8f6:8b3e:1fcd) (Ping timeout: 268 seconds)
[05:09:59] *** Joins: XV8 (~XV8@2601:5cb:c001:50:d0cb:b834:298c:b12d)
[05:11:08] *** Joins: drewnix (~textual@c-73-118-230-129.hsd1.wa.comcast.net)
[05:12:04] *** Joins: ka80 (~ka80@111.60.138.34.bc.googleusercontent.com)
[05:13:58] *** Joins: sinaowolabi_ (~SinaOwola@169.159.110.74)
[05:14:05] *** Joins: rgrinberg (~textual@2806:101e:7:2b:4d0:6ff9:1790:ff37)
[05:16:52] *** Joins: jerrywilliamsjr1 (~jude@174-083-043-211.res.spectrum.com)
[05:17:27] *** Quits: BSaboia_ (~bsaboia@187.19.136.30) (Quit: This computer has gone to sleep)
[05:17:32] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[05:18:13] *** Joins: BSaboia_ (~bsaboia@187.19.136.30)
[05:18:48] *** Joins: et_ (~et@user/et)
[05:19:34] *** Quits: et (~et@user/et) (Ping timeout: 268 seconds)
[05:19:47] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[05:22:42] *** Joins: et (~et@user/et)
[05:23:55] *** Quits: et_ (~et@user/et) (Ping timeout: 256 seconds)
[05:27:35] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-37-70-24-250-33.dsl.bell.ca) (Ping timeout: 268 seconds)
[05:29:26] *** Quits: sinaowolabi_ (~SinaOwola@169.159.110.74) (Ping timeout: 268 seconds)
[05:29:27] *** Quits: Milijus (~Milijus@2601:580:4500:1305:e6e7:49ff:fe47:5310) (Remote host closed the connection)
[05:30:22] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:50] *** Joins: sinaowolabi_ (~SinaOwola@169.159.110.74)
[05:31:17] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 268 seconds)
[05:31:21] *** Joins: Milijus (~Milijus@2601:580:4500:1305:e6e7:49ff:fe47:5310)
[05:32:40] *** Joins: vlm (~vlm@user/vlm)
[05:33:06] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[05:33:57] *** Joins: remirol (~lorimer@user/lorimer)
[05:33:57] *** Quits: lorimer (~lorimer@user/lorimer) (Killed (NickServ (GHOST command used by remirol)))
[05:34:02] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-139.dsl.bell.ca)
[05:34:03] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[05:34:06] *** remirol is now known as lorimer
[05:34:28] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[05:37:20] *** Joins: pieguy128_ (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-188.dsl.bell.ca)
[05:37:37] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[05:38:28] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-139.dsl.bell.ca) (Ping timeout: 250 seconds)
[05:39:25] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[05:41:45] *** Quits: BSaboia_ (~bsaboia@187.19.136.30) (Quit: This computer has gone to sleep)
[05:42:52] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[05:44:22] *** Joins: docmax__ (~docmax@dynamic-077-008-135-240.77.8.pool.telefonica.de)
[05:46:37] *** Quits: docmax_ (~docmax@dynamic-095-112-219-129.95.112.pool.telefonica.de) (Ping timeout: 240 seconds)
[05:47:02] *** Quits: Inline (~Inline@ip-037-201-240-204.um10.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[05:49:07] *** Quits: lrngystdlted^ (~lrngystdl@50-207-160-170-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[05:52:37] *** Quits: drewnix (~textual@c-73-118-230-129.hsd1.wa.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[05:54:09] *** Joins: drewnix (~textual@c-73-118-230-129.hsd1.wa.comcast.net)
[05:54:43] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[05:58:00] *** Quits: uuidNuni1 (~weechat@193.123.227.17) (Remote host closed the connection)
[06:02:18] *** Quits: jonthesnow (~xizhendu@36.112.179.225) (Ping timeout: 250 seconds)
[06:03:11] *** Joins: uuidNuni1 (~weechat@193.123.227.17)
[06:03:36] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[06:06:47] *** Quits: luckiswithme (~luckiswit@149.167.138.23) (Remote host closed the connection)
[06:08:41] *** Quits: sinaowolabi_ (~SinaOwola@169.159.110.74) (Ping timeout: 256 seconds)
[06:08:48] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 250 seconds)
[06:09:18] *** Joins: luckiswithme (~luckiswit@149.167.138.23)
[06:09:51] <uuidNuni1> useretail:-> in [[ , = = ==
[06:10:44] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[06:10:49] *** Joins: A|an (~Alan@173.218.175.171)
[06:10:59] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Quit: Leaving)
[06:11:09] *** Quits: drewnix (~textual@c-73-118-230-129.hsd1.wa.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[06:11:14] <uuidNuni1> # [[ \= == \= ]] ; echo $?
[06:11:15] <shbot> uuidNuni1: 0
[06:11:23] <uuidNuni1> # [[ \= = \= ]] ; echo $?
[06:11:24] <shbot> uuidNuni1: 0
[06:11:45] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[06:12:23] *** Joins: drewnix (~textual@c-73-118-230-129.hsd1.wa.comcast.net)
[06:13:10] *** Quits: drewnix (~textual@c-73-118-230-129.hsd1.wa.comcast.net) (Client Quit)
[06:16:25] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 256 seconds)
[06:16:34] <greycat> In bash's test, [ and [[ commands, == and = are 100% equivalent.  This is not trus in POSIX sh's test and [ commands, necessarily.
[06:18:16] *** Joins: WinterStar (~IceLight@user/icelight)
[06:20:01] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[06:22:00] *** Joins: sinaowolabi_ (~SinaOwola@169.159.122.81)
[06:22:04] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[06:26:08] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[06:27:34] <yagamilito> Hello
[06:27:34] <yagamilito> i need some help on converting this
[06:27:35] <yagamilito> https://pastebin.com/2RVWme3y
[06:27:35] <pasteban> Paste is available without ads on https://pastebin.com/raw/2RVWme3y
[06:27:35] <yagamilito> to
[06:27:36] <yagamilito> https://pastebin.com/V8s7i7QM
[06:27:36] <pasteban> Paste is available without ads on https://pastebin.com/raw/V8s7i7QM
[06:27:36] <yagamilito> how can i do this
[06:27:37] <yagamilito> Thanks
[06:29:05] <uuidNuni1> greycat:-> someone said yesterday, even in bash, [ and [[ is different
[06:29:32] *** Joins: Lunatrius` (~Lunatrius@77.38.76.5)
[06:29:37] *** Quits: Lunatrius (~Lunatrius@77.38.76.5) (Ping timeout: 240 seconds)
[06:29:45] <tirnanog> because they are.
[06:29:47] *** Lunatrius` is now known as Lunatrius
[06:29:50] <larryv> he didn't say [ and [[ are equivalent, he said = and == are equivalent for both [ and [[
[06:29:57] *** Quits: myrrh (~markus@user/poet) (Ping timeout: 240 seconds)
[06:30:58] <uuidNuni1> oh my understanding
[06:31:15] <uuidNuni1> sorry. i did not look carefully
[06:31:18] <larryv> (and test)
[06:32:14] <uuidNuni1> do you guys write shell init script or just use systemd
[06:32:37] <phy1729> !graudated > yagamilito
[06:32:38] *** Quits: SuperLag (~akulbe@user/superlag) (Ping timeout: 250 seconds)
[06:32:51] <phy1729> !graduated > yagamilito
[06:32:51] <greybot> yagamilito: Congratulations! You've graduated to needing to use a real language!
[06:33:02] <yagamilito> thank you
[06:33:16] <greycat> !b36
[06:33:16] <greybot> Those who do not understand sysvinit are doomed to reinvent it. Poorly. (Those who DO understand it know to run like hell.)
[06:34:35] <greycat> I use whatever init system the OS in question comes with.  On some systems, I add daemontools, and have it manage some services.  (This is *especially* useful on sysvinit boxes.)
[06:34:43] *** Joins: SuperLag (~akulbe@user/superlag)
[06:35:14] <uuidNuni1> self made daemontools?
[06:35:28] <larryv> !daemontools
[06:35:28] <greybot> DJB's suite of programs for managing services and logging: http://cr.yp.to/daemontools.html
[06:35:28] <greycat> DJB's daemontools.
[06:35:28] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[06:36:30] <greycat> I haven't written an "init.d" script in ages, and I try very hard to avoid doing so.
[06:36:48] *** Quits: uuidNuni1 (~weechat@193.123.227.17) (Remote host closed the connection)
[06:37:05] *** Joins: uuidNuni1 (~weechat@146.56.136.247)
[06:38:19] <uuidNuni1> yeah it is a pain in the butt
[06:38:42] *** Quits: rcernin__ (~rcernin@101.189.141.138) (Ping timeout: 250 seconds)
[06:39:05] *** Quits: ozzzo_work (~ozzzo_wor@h87.s239.verisign.com) (Ping timeout: 256 seconds)
[06:42:50] <uuidNuni1> n
[06:42:56] *** Joins: millido (~millido@84.210.150.128)
[06:44:17] *** Joins: rcernin__ (~rcernin@101.189.141.138)
[06:49:05] *** Joins: drewnix (~textual@c-73-118-230-129.hsd1.wa.comcast.net)
[06:49:06] *** Quits: rcernin__ (~rcernin@101.189.141.138) (Ping timeout: 250 seconds)
[06:50:13] *** Joins: rcernin__ (~rcernin@101.189.141.138)
[06:50:18] *** Quits: uuidNuni1 (~weechat@146.56.136.247) (Remote host closed the connection)
[06:50:35] *** Joins: uuidNuni1 (~weechat@146.56.136.247)
[06:52:11] *** Joins: myrrh (~markus@172.58.197.224)
[06:52:33] *** Quits: uuidNuni1 (~weechat@146.56.136.247) (Client Quit)
[06:53:26] *** Quits: ka80 (~ka80@111.60.138.34.bc.googleusercontent.com) (Ping timeout: 250 seconds)
[06:53:27] *** Quits: drewnix (~textual@c-73-118-230-129.hsd1.wa.comcast.net) (Client Quit)
[06:54:44] *** Joins: kurahaupo (~kurahaupo@pa49-197-242-230.pa.qld.optusnet.com.au)
[06:54:47] *** Quits: luckiswithme (~luckiswit@149.167.138.23) (Remote host closed the connection)
[06:56:32] *** Quits: dre (~dre@2001:8003:c932:c301:d3ad:30f8:46d3:c284) (Ping timeout: 240 seconds)
[06:57:22] *** Quits: yagamilito (~yagamilit@2601:642:4600:34b0:c022:ab17:ec7:a01c) (Quit: Client closed)
[06:57:50] *** Joins: jensen (~jensen@65.78.100.184)
[06:58:00] <lotharn> does this work?
[06:59:28] <e36freak> no
[07:00:02] *** queue is now known as queue-
[07:00:13] <emanuele6> maybe
[07:00:13] *** Quits: queue- (~nerd@rektnet.com) (Changing host)
[07:00:13] *** Joins: queue- (~nerd@user/queue/x-7267619)
[07:00:28] *** Joins: luckiswithme (~luckiswit@149.167.138.23)
[07:00:40] <jensen> simple script to edit contents of clipboard in vim (save as a file), then on exit prompt to either copy contents back to clipboard or to upload the file contents to pastebin service. So far, I'm presented the prompt but regardless of answers, it just exits and closes the terminal launched immediately. Any ideas?
[07:00:48] <jensen> Script: https://0x0.st/ooli.txt
[07:02:38] <emanuele6> it is not quoted properly
[07:02:52] <pj> !check
[07:02:52] <e36freak> why do you have all the backslashes in there
[07:02:53] <checkbot> jensen: Line 21: The surrounding quotes actually unquote this. Remove or escape them. Line 23: The surrounding quotes actually unquote this. Remove or escape them. Line 23: Double quote to prevent globbing and word splitting. See https://shellcheck.net/?id=cb81573 for all 5 issues.
[07:03:06] <jensen> I have everything in `alacritty --command bash -c "nvim file; <mini script>"; otherwise, once vim closes, the terminal is closed as well and the rest of the script goes bye bye
[07:03:54] <emanuele6> jensen: you wrote      "something $var $var; internal_var=2; dosomething "$internal_var"; something"
[07:04:27] <emanuele6> internal_var is out of single quotes so it is expanded by bash before running the command
[07:04:45] <emanuele6> also $file is a code injection
[07:05:01] <e36freak> you still don't need backslashes in a quoted string
[07:05:07] <emanuele6> indeed
[07:05:21] *** Joins: yagamilito (~yagamilit@98.51.90.15)
[07:05:38] *** Quits: heiner (~Thunderbi@2a00:6020:b006:a900:d250:99ff:fe34:8fd2) (Ping timeout: 268 seconds)
[07:05:53] <jensen> my shellcheck doesn't work probably because i've held the kernel package too long while updating the rest of the system -_- This is so annoying
[07:06:04] <jensen> Could I do without the mini script inside sh -c?
[07:06:25] <emanuele6> you can, but have not quoted yours correct.
[07:06:35] <emanuele6> s/.$/ly./
[07:06:52] *** Quits: boreas (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2) (Ping timeout: 268 seconds)
[07:07:03] <lotharn> so.... scraping websites... whats the best idea?
[07:07:27] <emanuele6> jensen: just use single quotes and instead of injecting $file, pass it as an argument
[07:07:39] <jensen> ok thanks, i will try that
[07:08:36] <emanuele6> sh -c 'file=$1; other code that can be multiline' _ "$file"
[07:08:37] *** Quits: timj (~timj@user/timj) (Ping timeout: 240 seconds)
[07:08:57] <emanuele6> and \ at the end of lines is unnecessary
[07:09:37] <emanuele6> ( in your case   bash -c,  not   sh -c   read -p  is not portable. )
[07:09:48] <lotharn> do curl -s $i >/tmp/retry44444;
[07:10:04] <lotharn> how do i use something dynamic ?
[07:10:16] *** Joins: boreas (~heiner@94.31.81.196)
[07:10:20] <lotharn> can i use a file descriptor?
[07:10:35] *** Quits: irc_user (uid423822@id-423822.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[07:10:58] <yitz> lotharn: >&m
[07:11:00] <tirnanog> compose a pathname with mktemp first, perhaps.
[07:11:02] <yitz> *n
[07:11:20] <emanuele6> !porn
[07:11:20] <greybot> for ((i=1; i<100; i++)); do printf -v tmp %03d "$i"; wget "http://pornsite/image-$tmp.jpg"; sleep 10; done
[07:12:40] <lotharn> so just > &455?
[07:12:46] *** Joins: BSaboia_ (~bsaboia@187.19.136.30)
[07:12:51] <tirnanog> no.
[07:13:48] <tirnanog> tmpfile=$(mktemp) && curl -s -o "$tmpfile" "$i"
[07:14:31] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:15:17] <lotharn> i'm looking at this script i wrote. im not sure how it even is working the way it is.
[07:15:21] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[07:15:35] <lotharn> shit.
[07:15:48] <justsomeguy> What does the %03d format string in printf -v tmp %03d "$i" above do? Zero padding?
[07:15:49] <lotharn> anyone want to stare at my shame while i drink?
[07:15:56] <tirnanog> alternatively, compose your filename based on some other varying factor (which is what the porn factoid was about). the code was presented with no context so we can't say which is appropriate.
[07:16:01] <e36freak> justsomeguy: yes
[07:16:19] <lotharn> https://github.com/nickpitlosh/parallax/blob/main/mapping/scrapefoodbanks/scrapeazfoodbanks.sh
[07:16:29] <e36freak> !printf > justsomeguy
[07:16:29] <greybot> justsomeguy: The printf command: ''help printf'', or http://wiki.bash-hackers.org/commands/builtin/printf?s[]=printf
[07:16:39] <tirnanog> !check
[07:16:40] <checkbot> lotharn: Line 5: Quote the grep pattern so the shell won't interpret it. Line 9: Consider using { cmd1; cmd2; } >> file instead of individual redirects. Line 6: Double quote to prevent globbing and word splitting. See https://shellcheck.net/?id=cb82400 for all 4 issues.
[07:16:55] <lotharn> fuck!
[07:16:57] *** Quits: BSaboia_ (~bsaboia@187.19.136.30) (Ping timeout: 240 seconds)
[07:16:59] <emanuele6> !fuck
[07:16:59] <greybot> nobody has ever been able to fuck over the internet (yet). Stop using that word
[07:16:59] <lotharn> theres a bot?
[07:17:01] * justsomeguy was confused for a minute since printfs format specifiers are listed in section 3 of the man pages, instead of man 1 printf or in the bash user guide.
[07:17:14] <tirnanog> well, that's pretty horrifying. anyway, mktemp does, indeed, seem appropriate.
[07:17:27] <e36freak> justsomeguy: sure, it's based on C's printf and the help output refers to it
[07:18:16] <justsomeguy> Cool, time to learn some more unix trivie ^_^.
[07:18:26] <justsomeguy> *trivia, even.
[07:18:52] <lotharn> tirnanog: which part is most horrifying?
[07:19:00] *** Quits: jos1 (~jos3@dyndsl-178-142-065-039.ewe-ip-backbone.de) (Ping timeout: 250 seconds)
[07:19:01] <greycat> I'm not sure that factoid is accurate.
[07:19:20] <lotharn> i need a place to start
[07:19:27] <e36freak> !meta fuck
[07:19:27] <greybot> kamathln 1217249363(2008-07-28) learn nobody has ever been able to fuck over the internet (yet). Stop using that word
[07:19:31] <e36freak> old one
[07:21:17] <tirnanog> lotharn: there are various things, but I would say this is by far the most pressing: http://mywiki.wooledge.org/BashPitfalls#cat_file_.7C_sed_s.2Ffoo.2Fbar.2F_.3E_file
[07:21:40] <tirnanog> pcegrep somefile | ... | tr ... > somefile
[07:21:43] <tirnanog> that's playing with fire.
[07:22:07] <e36freak> well, not really playing with anything
[07:22:12] <e36freak> it's just a longwinded way to wipe your file
[07:22:45] <tirnanog> it's not even that predictable.
[07:23:31] *** Joins: timj (~timj@user/timj)
[07:25:16] <lotharn> well thank you for the input. as i'm looking at it though i'm less concerned about that as i am about my lack of understanding how escaping and quoting works.
[07:25:36] <greycat> !quotes
[07:25:37] <greybot> https://mywiki.wooledge.org/Quotes
[07:25:42] *** Joins: jonthesnow (~xizhendu@36.112.179.225)
[07:26:04] *** Quits: greycat (~greg@209.142.155.49) (Quit: Bye)
[07:26:37] <lotharn> the pcregreps are grabbing particular strings. so trimming them shouldnt be a problem.
[07:27:17] <lotharn> but i need level 23 sophistication for pcregrep.
[07:27:18] <e36freak> when i say "wipe your file", i mean truncate it before pcregrep even starts reading it
[07:27:32] <lotharn> i only have level 4
[07:28:09] <lotharn> yeah, im not sure i grasp the non-linearity of pipes.
[07:28:34] <lotharn> in fact, i know i dont.
[07:28:40] *** Joins: greknod2824 (~grek@120.88.171.98)
[07:29:02] *** Quits: greknod282 (~grek@120.88.171.98) (Ping timeout: 240 seconds)
[07:29:02] *** greknod2824 is now known as greknod282
[07:29:33] <lotharn> the only reason pcregrep is there is for multiline support, and i think grep does that already.
[07:29:44] <lotharn> theres hidden newlines!
[07:29:55] <lotharn> theyre hidden!
[07:30:03] <lotharn> !newline
[07:30:03] <greybot> The unix end of line marker, ASCII value 10, often written \n.
[07:30:15] <lotharn> !escape
[07:30:34] <lotharn> !nullspace
[07:30:54] <lotharn> i thought that would be more fun
[07:31:16] *** Joins: uuidNuni1 (~weechat@222.67.14.47)
[07:31:19] <lotharn> !pipe
[07:31:19] <greybot> (Anonymous) pipes use the | character to connect the standard output of one command to the standard input of another. Each command is executed in a subshell (but see !subshell, !lastpipe, !faq 24).
[07:31:27] <e36freak> lotharn: feel free to /msg the bot
[07:32:21] <lotharn> im trying to play nice
[07:32:34] <tirnanog> the point is that >file truncates the file, yet you have another command in the pipeline that's trying to read from that very same file.
[07:32:34] *** Joins: jos1 (~jos3@dyndsl-091-248-051-054.ewe-ip-backbone.de)
[07:32:51] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[07:33:24] <lotharn> i thought tr was trim
[07:33:38] <lotharn> and tr -d was scan and trim.
[07:33:42] <tirnanog> the use of tr is completely irrelevant.
[07:33:46] <tirnanog> > is shell syntax.
[07:34:01] <tirnanog> the first thing it does is truncate the file.
[07:34:10] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 250 seconds)
[07:34:20] <lotharn> wait.
[07:34:24] <e36freak> and redirections are set up before the command is run
[07:34:26] <lotharn> where.
[07:34:30] <larryv> that happens before tr even runs. that command could be anything
[07:34:32] <tirnanog> I already explained where.
[07:34:36] *** Quits: uuidNuniq (~weechat@193.123.227.17) (Quit: WeeChat 3.4)
[07:34:40] <tirnanog> pcegrep somefile | ... | tr ... > somefil
[07:34:48] <tirnanog> that was short-hand but it demonstrates the point.
[07:35:00] <lotharn> oh
[07:35:04] <lotharn> those are >>
[07:35:14] <tirnanog> nope.
[07:35:19] <larryv> not the one at the end of line 8
[07:35:32] <e36freak> even with >>, not a thing i'd play with
[07:35:38] <tirnanog> indeed.
[07:35:44] <tirnanog> >> doesn't make it ok either.
[07:35:44] <e36freak> might end up with an infinite loop
[07:35:53] <tirnanog> in short: don't do it.
[07:36:01] <tirnanog> make a new tempfile if you need one.
[07:36:09] <lotharn> oh
[07:36:13] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:36:17] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:36:24] <lotharn> uh, that is a different file.
[07:36:46] *** Quits: user3456 (user3456@user/user3456) (Ping timeout: 250 seconds)
[07:36:49] <lotharn> so, sorry, theres 5 4s and 4 4s.
[07:37:01] *** Joins: user3456 (user3456@user/user3456)
[07:37:07] <tirnanog> I missed that. that's ok then.
[07:37:47] <lotharn> its understandable, i'm kinda asking about that anyway, a way to just not have me naming things.
[07:38:00] <lotharn> cause apparently i lack originality.
[07:38:03] <tirnanog> use mktemp, as stated in the beginning, along with meaningful variable names.
[07:39:00] <lotharn> yeah its not circular, its progressively building a tab delimited file.
[07:39:18] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[07:40:01] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Client Quit)
[07:40:17] *** Joins: irc_user (uid423822@id-423822.lymington.irccloud.com)
[07:40:18] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:40:52] <tirnanog> in fact, you probably don't need this intermediate "retry4444" file at all. there are a lot of expensive redirections. you could rip most of them out and finish with: done >> azfoodbanks.org.tsv
[07:41:26] <tirnanog> (but still use a tempfile for storing the curl response)
[07:42:24] <jensen> i fixed the quoting (for the most part?) but for some reason entering y or Y still matches the other condition (it always matches * in the case statement)
[07:42:25] <tirnanog> while is a compound command. compound commands can be redirected fine.
[07:42:45] <jensen> https://0x0.st/oolS.txt
[07:42:50] *** Joins: drewnix (~textual@c-73-118-230-129.hsd1.wa.comcast.net)
[07:43:37] <e36freak> jensen: wrong quoting around answer, and you still have injection issues
[07:43:53] <e36freak> you don't actually need quoting for the word after "case" at all, you can just use case $answer in
[07:43:53] *** Quits: drewnix (~textual@c-73-118-230-129.hsd1.wa.comcast.net) (Client Quit)
[07:43:58] <tirnanog> lotharn: every single instance of >retry4444 and/or >>retry4444 can be removed, as can the cat/rm dance.
[07:44:13] <tirnanog> lotharn: just redirect the while; do ... done command to the tsv file.
[07:44:28] <e36freak> also since the whole thing is surrounded in double quotes, $answer is expanded by the outer shell
[07:44:33] <e36freak> case \$answer in
[07:44:34] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[07:44:49] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[07:44:57] <larryv> jensen: it looks like you did the opposite of what was suggested to you. you wrapped the whole thing in double quotes instead of single quotes
[07:45:00] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:45:32] <e36freak> also that
[07:47:20] <emanuele6> jensen: you didn't fix the quoting, you just replaced single quotes with double quotes
[07:47:28] <emanuele6> you didn't even remove the injection of "$file"
[07:47:41] <jensen> ok fuck me. do you have an example of how code injection fucks the script?
[07:47:51] <tirnanog> lotharn: https://termbin.com/9k3g
[07:48:22] *** Joins: han-solo (~hanish@user/han-solo)
[07:48:35] <e36freak> jensen: http://ix.io/3Nrs
[07:49:20] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 250 seconds)
[07:49:40] <emanuele6> http://0x0.st/oole.txt
[07:49:43] <emanuele6> oh oops
[07:49:45] <emanuele6> too slow
[07:49:58] <e36freak> jensen: USR_TMP_DIR="'; rm -rf *; echo '"
[07:50:03] <e36freak> that would be a problem
[07:50:12] <lotharn> tirnanog: i've seen this all things point to the middle style, i'm not good with it.
[07:50:24] <tirnanog> what do you mean by middle style?
[07:50:48] <lotharn> >> <<
[07:51:28] <larryv> you could write < <(curl ...) >>azfoodbanks.org.tsv if it really bothers you that much.
[07:51:39] <e36freak> lol
[07:51:43] <lotharn> lol
[07:51:49] <emanuele6> lol
[07:51:57] <tirnanog> I mean, you already have 12 >> redirections already.
[07:52:03] <tirnanog> what's the point, when a single one will suffice.
[07:52:28] <tirnanog> especially as each one opens the file anew.
[07:52:31] <e36freak> or use exec 3>>output_file and write to >&3 each time, if you really want
[07:52:38] <lotharn> uh, well, so the idea is command:result:append, repeat
[07:52:40] <e36freak> instead of constantly closing and reopening the file
[07:52:46] *** loganlee is now known as zx2A^zx3F
[07:52:49] <tirnanog> the idea is stupid.
[07:52:56] <e36freak> lotharn: each command opens the file, writes to it, and closes the file
[07:53:07] <e36freak> vs using a single open/close, and having each command write to that fd
[07:53:13] <tirnanog> all of the operations performed by the loop can be appended in one go.
[07:53:32] *** Quits: boreas (~heiner@94.31.81.196) (Ping timeout: 240 seconds)
[07:53:53] <lotharn> I understand it is faster, i do not understand how to read it accurately.
[07:53:55] <tirnanog> without having to open the same bloody file 12 or so times within each iteration.
[07:54:05] <tirnanog> and to have to weirdly cat and rm it when done.
[07:54:06] <lotharn> confidence level is low.
[07:54:18] <tirnanog> k
[07:54:20] <tirnanog> ok
[07:54:37] <tirnanog> there are various commmand forms in the shell.
[07:54:39] <lotharn> im not arguing, I'm just gonna have to digest it.
[07:54:44] *** Joins: boreas (~heiner@94.31.81.196)
[07:54:52] <tirnanog> you probably have some familiarity with the simple command, even if you don't yet know it by that name.
[07:54:56] <tirnanog> but there are also compound commands.
[07:55:03] <tirnanog> # { echo 1; echo 2; } > f; cat f
[07:55:05] <shbot> tirnanog: 1
[07:55:05] <shbot> tirnanog: 2
[07:55:14] *** zx2A^zx3F is now known as loganlee
[07:55:18] <tirnanog> that's more efficient than: echo 1 > f; echo 2 >> f
[07:55:25] <tirnanog> well, while is also a compound command.
[07:55:32] <tirnanog> so there is nothing wrong with while; do ...; done > file
[07:55:33] <e36freak> redirections are inherited. if you redirect the input or output of a compound command, like a while loop, those redirections carry to everything inside that command
[07:55:38] <tirnanog> or >>file as the case may be.
[07:55:49] <e36freak> so if you redirect the output of a while loop, everything in the loop inherits that redirection
[07:55:53] <tirnanog> yeah.
[07:56:22] <tirnanog> above all, it ends up being easier to read.
[07:56:47] <e36freak> if you had a bunch of stuff writing to stdout, and also a bunch of stuff to write to a file in the same loop, i'd use exec with an fd
[07:57:05] <tirnanog> but the intermediate file turns out to be unnecessary in this instance.
[07:57:05] <e36freak> but if everything in the loop is being redirected to a file, you might as well just put the redirection at the end of the loop and be done with it
[07:57:16] <lotharn> what is the significance of the < < in the example you provided?
[07:57:25] <e36freak> that's a process substitution
[07:57:26] <e36freak> !<(
[07:57:26] <greybot> Process Substitution: <(command) or >(command) is replaced by a FIFO or /dev/fd/* entry. Basically shorthand for setting up a named pipe. See <http://mywiki.wooledge.org/ProcessSubstitution>. Example: diff -u <(sort file1) <(sort file2)
[07:57:52] <tirnanog> you could actually do with a conventional pipe: curl ... | while read -r ...
[07:58:08] <tirnanog> the combination of a < operator and <(process substitution) is commonly employed to avoid a bash pitfall.
[07:58:09] <e36freak> <(command) expands to a file name. that file name is a named pipe attached to the output of "command"
[07:58:14] <e36freak> you then redirect that file with another <
[07:58:29] <tirnanog> which is described here
[07:58:32] <tirnanog> !faq disappear
[07:58:32] <greybot> https://mywiki.wooledge.org/BashFAQ/024 -- I set variables in a loop that's in a pipeline. Why do they disappear after the loop terminates? Or, why can't I pipe data to read?
[08:04:26] *** Joins: ferdna (~ferdna@user/ferdna)
[08:05:48] *** Quits: sinaowolabi_ (~SinaOwola@169.159.122.81) (Ping timeout: 250 seconds)
[08:05:57] <lotharn> you guys have been very helpful.
[08:06:04] <lotharn> but i must go.
[08:06:25] <lotharn> i am copying the last bits here and will reread tomorrow.
[08:06:54] *** Joins: sinaowolabi_ (~SinaOwola@169.159.122.81)
[08:08:20] *** Joins: wwilliam (~afernande@63.240.73.102)
[08:08:20] *** Quits: wwilliam (~afernande@63.240.73.102) (Changing host)
[08:08:20] *** Joins: wwilliam (~afernande@user/wwilliam)
[08:10:43] *** Joins: dre (~dre@2001:8004:4410:f280:3c1f:c841:18ca:3236)
[08:13:37] *** Quits: kurahaupo (~kurahaupo@pa49-197-242-230.pa.qld.optusnet.com.au) (Ping timeout: 240 seconds)
[08:19:44] *** Joins: crashrep (~crashrep@user/crashrep)
[08:19:45] *** Quits: dre (~dre@2001:8004:4410:f280:3c1f:c841:18ca:3236) (Read error: Connection reset by peer)
[08:24:18] *** Joins: drewnix (~textual@c-73-118-230-129.hsd1.wa.comcast.net)
[08:25:19] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:25:21] <jensen> stupid question: how does passing argument as parameter prevent code injection? it's obvious it does, but i don't understand what makes it different to variable expansion internally. i read the wooledge page but i only understood do's and don'ts. both just seems to replace text to me
[08:27:15] <tirnanog> take awk as an example. the first non-option operand given to awk is awk code.
[08:27:36] <tirnanog> it should stand to reason that if you directly expand a shell variable in the course of forming that operand, that you are, quite literally, injecting (awk) code.
[08:28:53] <emanuele6> jensen:   if you have      file=my_filename  bash -c "cat \"$file\"", what you are actually doing is construct code
[08:28:57] <tirnanog> on the other hand, awk -v foo="$foo" 'static awk code' does not entail code injection. we know this because the operand containing the awk code is static.
[08:29:29] <emanuele6> create a string that contains     cat "my_filename"  and pass it to bash to run
[08:29:32] <tirnanog> the same principle applies in the shell. sh -c "$expansion" is code injection.
[08:29:38] <tirnanog> or using eval, for example.
[08:30:01] <emanuele6> now say you have  file='my_filename";echo hack'
[08:30:07] <emanuele6> err
[08:30:12] <emanuele6>   file='my_filename";echo hack"'
[08:30:32] <emanuele6> now the string will be   cat "my_filename";echo hack""
[08:30:51] <emanuele6> and bash will run that: first `cat my_filename' and then `echo hack'
[08:31:10] <emanuele6> instead of running cat with the  my_filename";echo hack"  as the file
[08:31:27] <emanuele6>   bash -c 'cat "$1"' _ "$file"
[08:31:46] <tirnanog> # badinput='123"; echo rm -rf / >&2 #'; sh -c "echo \"$badinput\""
[08:31:47] <shbot> tirnanog: 123
[08:31:47] <shbot> tirnanog: rm -rf /
[08:31:50] <emanuele6> instead this is passing "$file" bash as an argument and bash is running static code
[08:32:03] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[08:32:21] <tirnanog> # badinput='123"; echo rm -rf / >&2 #'; sh -c 'echo "$1"' _ "$badinput"
[08:32:22] <shbot> tirnanog: 123"; echo rm -rf / >&2 #
[08:32:26] <emanuele6> and the code is    cat "$1"    so run `cat' passing bash's first argument
[08:32:40] <emanuele6> obviously it doesn't have to be malicious
[08:33:06] <tirnanog> there's the difference, right there. had I not de-fanged the injected rm command with an echo, it would have proceeded to execute rm.
[08:33:27] <emanuele6> but if you run that program with a weird filename, it won't open the correct file, might generate syntax errors that prevent the program from working and might unintentionally run commands
[08:33:43] <tirnanog> generally, you want to pass data, not inject data into code.
[08:33:52] <tirnanog> or supposed data and therein lies the problem.
[08:35:11] <larryv> jensen: "how does passing argument as parameter prevent code injection? it's obvious it does" <- i just want to clarify that you're focusing on the wrong thing. proper quoting is what is preventing code injection
[08:35:25] <larryv> the positional parameters are just an alternate means of passing your data that accommodates proper quoting
[08:35:25] <emanuele6> exactly
[08:35:35] <emanuele6> the injecting is just another problem
[08:36:51] <emanuele6> and not injecting the variable into the code also makes the quoting easier
[08:36:56] *** Quits: drewnix (~textual@c-73-118-230-129.hsd1.wa.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[08:38:08] *** Joins: drewnix (~textual@c-73-118-230-129.hsd1.wa.comcast.net)
[08:39:46] <jensen> ohhh i see. ty guys
[08:41:46] *** Quits: timj (~timj@user/timj) (Ping timeout: 250 seconds)
[08:41:53] *** Joins: bluedust (~bluedust@103.165.167.99)
[08:42:12] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 250 seconds)
[08:42:54] *** Joins: lotharn|2 (~kvirc@2607:fb90:4a30:6f67:4fcf:d1f5:602:df23)
[08:43:27] *** Quits: drewnix (~textual@c-73-118-230-129.hsd1.wa.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[08:46:37] *** Quits: lotharn (~kvirc@2607:fb90:4a2b:a573:ec5f:10c0:33e4:2f0c) (Ping timeout: 240 seconds)
[08:49:51] *** Quits: davidl (~quassel@217-64-148-110.pool.ovpn.com) (Ping timeout: 268 seconds)
[08:52:03] *** Quits: lotharn|2 (~kvirc@2607:fb90:4a30:6f67:4fcf:d1f5:602:df23) (Remote host closed the connection)
[08:52:44] *** Joins: lotharn|2 (~kvirc@2607:fb90:4a30:6f67:4fcf:d1f5:602:df23)
[08:53:21] *** Joins: maryo_87 (~Maryo@user/maryo)
[08:55:11] *** Joins: bash-libera (~bash-libe@h216-170-204-47.hrcnut.broadband.dynamic.tds.net)
[08:55:49] <bash-libera> This might be a stupid question. But is echo $(pwd) == $(echo pwd) (if that is even the right comparison)
[08:56:02] *** Joins: timj (~timj@user/timj)
[08:56:05] <bash-libera> I find myself questioning everything i'm doing because all my insticts seem to be wrong
[08:56:10] <larryv> no
[08:56:59] *** Quits: sinaowolabi_ (~SinaOwola@169.159.122.81) (Ping timeout: 256 seconds)
[08:58:06] <bash-libera> They are not?
[08:58:09] <larryv> setting aside that it doesn't really make sense to directly compare those two constructs
[08:58:16] <bash-libera> Interesting
[08:58:18] <larryv> the echo commands aren't equivalent either
[08:58:19] <emanuele6> #  echo $(pwd)
[08:58:20] <shbot> emanuele6: /root
[08:58:26] <emanuele6> # echo $(echo pwd)
[08:58:27] <shbot> emanuele6: pwd
[08:58:44] <emanuele6> they don't even output the same thing, so   no, they are not equivalent
[09:03:32] *** Quits: Thanatermesis (~Thanaterm@191.92.148.122) (Ping timeout: 240 seconds)
[09:03:52] *** Quits: situ_ (~situ@ip-89-176-145-74.net.upcbroadband.cz) (Ping timeout: 250 seconds)
[09:04:05] *** Joins: dre (~dre@2001:8003:c932:c301:7948:9e4c:da1f:659b)
[09:04:11] <bash-libera> I meant the output of those comands like this "echo $(pwd)" == "$(echo pwd)" - but i now see those are not similar either the first doesn't return a string
[09:05:00] <e36freak> jensen: by the way i just realized i made a mistake with the thing i gave you, everywhere in the quotes it says "$file" it should be "$1"
[09:05:29] <e36freak> bash-libera:  those are completely different things in a bunch of ways
[09:05:32] <emanuele6> i added file=$1 in mine so mine should be correct
[09:05:39] <larryv> bash-libera: even if you captured the output of the left side as well, the results are in general not equivalent
[09:05:53] <bash-libera> I see that now
[09:05:58] <bash-libera> Makes sense
[09:06:03] *** Quits: ouestbillie (~gallup@185.65.135.248) (Ping timeout: 256 seconds)
[09:06:26] *** Quits: Circuitsoft (uid393878@id-393878.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[09:06:27] <bash-libera> I've been having trouble grasping the $() command for some reason so thought i'd try and come at it from a different angle
[09:06:33] *** Quits: domicron (~domicron@gateway/tor-sasl/domicron) (Quit: Ping timeout (120 seconds))
[09:06:52] <e36freak> bash-libera: it runs whatever is inside it, and expands to whatever that command outputs
[09:06:52] *** Joins: domicron (~domicron@gateway/tor-sasl/domicron)
[09:07:20] <bash-libera> "Expands to whatever that command outputs"
[09:07:33] <e36freak> ok, so you have var='some string'
[09:07:34] <bash-libera> That's where I get hung up because in my head it should "Return a string"
[09:07:39] <e36freak> and then you use "$var" somewhere, right?
[09:07:54] <e36freak> "$var" expands to 'some string'
[09:07:58] *** Joins: ouestbillie (~gallup@185.195.233.151)
[09:08:06] <e36freak> it's not returning anything, there's no function to return
[09:08:20] *** Quits: A|an (~Alan@173.218.175.171) (Quit: A|an)
[09:08:26] <e36freak> likewise "$(cmd)" expands to whatever "cmd" outputs
[09:08:31] <e36freak> just like you used "$var" there
[09:08:32] <bash-libera> Hmm Maybe that is a big concept i'm not grasping
[09:08:46] <bash-libera> I come from Ruby where everything has a return, so only functions return
[09:08:47] <bash-libera> ?
[09:09:20] *** Joins: karakedi (~eAC53C340@user/karakedi)
[09:09:22] <e36freak> commands have an exit status, which is kind of like a return, but it's only allowed to be an 8 bit integer
[09:10:00] <e36freak> and "return" in a function is the same, it can only be an 8 bit integer, and is only useful when used like a command's exit status
[09:10:06] *** Joins: sinaowolabi_ (~SinaOwola@41.58.235.31)
[09:10:44] <e36freak> "$(...)" captures stdout of whatever is inside it
[09:12:32] *** Quits: rcernin__ (~rcernin@101.189.141.138) (Ping timeout: 250 seconds)
[09:14:36] *** Joins: nickdiaz1wag209 (~bjpenn_@13.110.54.38)
[09:15:40] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:15:41] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[09:16:52] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 250 seconds)
[09:17:24] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[09:18:33] *** Joins: Inline (~Inline@ip-037-201-240-204.um10.pools.vodafone-ip.de)
[09:20:25] *** Joins: situ_ (~situ@nat-pool-brq-u.redhat.com)
[09:22:16] <emanuele6> ( except trailing newline characters )
[09:22:38] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[09:27:22] <emanuele6> ( and NUL bytes )
[09:29:44] *** Quits: yagamilito (~yagamilit@98.51.90.15) (Quit: Client closed)
[09:29:56] *** Quits: setesat (~setesat@94.4.156.220) (Quit: The Lounge - https://thelounge.chat)
[09:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:30:23] *** Joins: setesat (~setesat@94.4.156.220)
[09:31:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:31:54] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[09:32:51] *** Quits: winstonsmith (~winstonsm@gateway/vpn/pia/winstonsmith) (Remote host closed the connection)
[09:33:09] *** Joins: winstonsmith (~winstonsm@gateway/vpn/pia/winstonsmith)
[09:33:18] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:b03f:c46f:c021:3998)
[09:33:41] *** Joins: rcernin__ (~rcernin@101.189.141.138)
[09:35:46] *** Quits: myrrh (~markus@172.58.197.224) (Quit: leaving)
[09:37:32] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:b03f:c46f:c021:3998) (Ping timeout: 240 seconds)
[09:38:50] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Read error: Connection reset by peer)
[09:40:50] *** Quits: larryv (~larryv@zsh/patchmanager/larryv) (Quit: larryv)
[09:41:52] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[09:42:15] *** Joins: ano (~ano@user/ano)
[09:43:00] *** Joins: tccki (~tccki@box.webslate.co.nz)
[09:44:02] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[09:49:37] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 240 seconds)
[09:50:41] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[09:51:23] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 256 seconds)
[09:52:54] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[09:56:24] *** Joins: tnewman (~tnewman@61-216-158-211.hinet-ip.hinet.net)
[09:57:02] *** Joins: bluedust_ (~bluedust@103.165.167.52)
[09:57:03] *** Quits: rcernin__ (~rcernin@101.189.141.138) (Ping timeout: 256 seconds)
[09:57:05] <tnewman> hello!  its not super necessary, but is there an easy way to combine mta=( $( seq 7 1 13 ) ) with mta=( "${mta[@]/#/mta2s}" )
[09:57:56] <grawity> mta=(mta2s{7..13})
[09:57:57] *** Quits: bluedust (~bluedust@103.165.167.99) (Ping timeout: 240 seconds)
[09:57:57] <tnewman> just curious if there were a way to include the 'mta2s' part in the array
[10:02:29] <llua> # mapfile -t mta < <(printf 'mta2s%d\n' {7..13});typeset -p mta
[10:02:31] <shbot> llua: declare -a mta=([0]="mta2s7" [1]="mta2s8" [2]="mta2s9" [3]="mta2s10" [4]="mta2s11" [5]="mta2s12" [6]="mta2s13")
[10:02:43] <tnewman> grawity, yep that works pretty well
[10:03:40] *** Joins: skapata (~Skapata@user/skapata)
[10:03:47] <llua> that was overengineered for no reason. time to go to sleep.
[10:05:14] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[10:06:37] *** Quits: user3456 (user3456@user/user3456) (Ping timeout: 240 seconds)
[10:06:44] *** Joins: rcernin__ (~rcernin@2001:8003:6803:db00:a14b:db97:f0c2:2511)
[10:07:11] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[10:07:30] <pj> also
[10:07:36] <pj> !seq > tnewman
[10:07:36] <greybot> tnewman: seq(1) is nonstandard, inefficient and useless. For bash2.04+/zsh/ksh93, use for ((i = 1; i <= 10; i++)); do ..., bash3.0+, use for i in {1..10}, for POSIX and other shells, see !counting
[10:08:26] *** Joins: kill (~killown@user/killown)
[10:09:43] *** Joins: user3456 (user3456@user/user3456)
[10:10:44] *** Joins: rcernin (~rcernin@101.189.141.138)
[10:10:45] <tnewman> awesome, thanks for that!
[10:11:11] <grawity> though if you really want seq then mta=($(seq 7 1 13 | sed s/^/mta2s/))
[10:11:17] *** Quits: rcernin__ (~rcernin@2001:8003:6803:db00:a14b:db97:f0c2:2511) (Ping timeout: 240 seconds)
[10:11:24] <grawity> might as well go all the way
[10:12:37] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[10:13:37] <emanuele6> mapfile -t mta < <(seq 7 1 13 | sed 's/^/mta2s/')
[10:15:22] *** Quits: rcernin (~rcernin@101.189.141.138) (Ping timeout: 250 seconds)
[10:16:05] <geirha> just use grawity's suggestion, unless 7 and 13 are actually dynamic
[10:16:32] <han-solo> # sed -f 'mta2s%g' 7 13
[10:16:33] <shbot> han-solo: sed: couldn't open file mta2s%g: No such file or directory
[10:16:38] <han-solo> # seq -f 'mta2s%g' 7 13
[10:16:39] <shbot> han-solo: seq: Too much information!
[10:16:46] <han-solo> gah
[10:18:16] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[10:18:17] *** Quits: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au) (Ping timeout: 240 seconds)
[10:22:28] *** Joins: dreamon (~dreamon@p54b1472c.dip0.t-ipconnect.de)
[10:24:55] *** Quits: qub411 (~user@14-202-13-18.tpgi.com.au) (Quit: WeeChat 3.4)
[10:24:58] <emanuele6> yeah, GNU seq actually has --format, lol
[10:26:45] *** Joins: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[10:28:17] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Ping timeout: 240 seconds)
[10:28:47] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 256 seconds)
[10:29:02] *** Joins: libc (~weechat@user/tessio)
[10:29:14] *** Joins: rcernin (~rcernin@101.189.141.138)
[10:29:28] *** Quits: rgrinberg (~textual@2806:101e:7:2b:4d0:6ff9:1790:ff37) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:29:45] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 268 seconds)
[10:31:22] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[10:34:27] *** Quits: dreamon (~dreamon@p54b1472c.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[10:35:57] *** Quits: rcernin (~rcernin@101.189.141.138) (Ping timeout: 240 seconds)
[10:38:04] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[10:39:44] *** Quits: luckiswithme (~luckiswit@149.167.138.23) (Remote host closed the connection)
[10:41:17] *** Quits: Inline (~Inline@ip-037-201-240-204.um10.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[10:41:35] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[10:44:56] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[10:45:11] *** Joins: unop (~unop@194.154.249.71)
[10:46:08] *** Quits: rcernin_ (~rcernin@101.189.141.138) (Ping timeout: 250 seconds)
[10:49:26] *** Joins: martinus__ (~martin@127.59.202.77.rev.sfr.net)
[10:52:07] *** Joins: Rohambili (uid528665@id-528665.ilkley.irccloud.com)
[10:55:17] *** Joins: xx (~xx@user/xx)
[11:01:04] *** Joins: freep (~freepppp@46.246.189.172.dsl.dyn.forthnet.gr)
[11:02:42] *** Joins: maryo87 (~Maryo@user/maryo)
[11:03:56] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:06:11] *** Quits: maryo_87 (~Maryo@user/maryo) (Ping timeout: 256 seconds)
[11:06:47] *** Quits: aaro (aaro@user/aaro) (Quit: "")
[11:06:55] *** Joins: ZAJDAN (~ZAJDAN@chladek-jar.zno.skynet.cz)
[11:07:27] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[11:09:17] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[11:09:45] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Read error: Connection reset by peer)
[11:11:24] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[11:11:51] *** Quits: polve (~polve@user/polve) (Ping timeout: 256 seconds)
[11:12:16] *** Joins: han-solo (~hanish@user/han-solo)
[11:13:20] *** Joins: polve (~polve@user/polve)
[11:16:17] *** Quits: richardm75 (~richardm7@2600:8801:c507:b200:58b9:b19f:b62c:7d26) (Ping timeout: 240 seconds)
[11:16:40] *** Quits: shbot (~shbot@37.139.2.101) (Remote host closed the connection)
[11:16:52] *** Joins: shbot (~shbot@37.139.2.101)
[11:17:25] *** Joins: tobybl (~tobybl@248.64.200.146.dyn.plus.net)
[11:17:59] *** Joins: yustin (~yustin@user/yustin)
[11:19:34] *** Joins: adac (~adac@static.153.233.47.78.clients.your-server.de)
[11:20:11] *** Quits: odc (sid197788@id-197788.helmsley.irccloud.com) (Ping timeout: 252 seconds)
[11:20:11] *** Quits: braxas (sid508886@id-508886.lymington.irccloud.com) (Ping timeout: 252 seconds)
[11:20:21] *** Quits: pwillard (sid136981@id-136981.hampstead.irccloud.com) (Ping timeout: 245 seconds)
[11:21:21] *** Joins: pwillard (sid136981@id-136981.hampstead.irccloud.com)
[11:21:23] *** Joins: odc (sid197788@id-197788.helmsley.irccloud.com)
[11:21:30] *** Joins: braxas (sid508886@id-508886.lymington.irccloud.com)
[11:21:32] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[11:21:45] *** Quits: chunky (~chunky@i.dont.know.how.com.puters.work) (Quit: bye)
[11:21:54] *** Quits: catern (~sbaugh@2604:2000:8fc0:b:a9c7:866a:bf36:3407) (Ping timeout: 260 seconds)
[11:22:00] *** Joins: chunky (~chunky@i.dont.know.how.com.puters.work)
[11:22:15] *** Quits: rj1 (~rj1@i.dont.know.how.com.puters.work) (Quit: bye)
[11:22:25] *** Joins: rj1 (~rj1@i.dont.know.how.com.puters.work)
[11:22:36] *** Joins: lavaball (felix@31.204.155.215)
[11:23:51] <pj> # echo {7..13} {07..13}
[11:23:53] <shbot> pj: 7 8 9 10 11 12 13 07 08 09 10 11 12 13
[11:24:05] <pj> easy formatting ^^^^^
[11:25:34] *** Quits: potamides (~amnifiliu@2003:a:270f:c400:28d8:e046:7d92:3970) (Ping timeout: 250 seconds)
[11:30:49] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[11:32:22] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[11:34:34] *** Joins: rendar (~rendar@user/rendar)
[11:34:34] *** Joins: yosijo (~yosijo@2001:9e8:25d:a300:264b:feff:fe55:89e1)
[11:39:37] *** Quits: maryo87 (~Maryo@user/maryo) (Ping timeout: 256 seconds)
[11:39:44] *** Joins: maryo_87 (~Maryo@user/maryo)
[11:41:13] *** Joins: luckiswithme (~luckiswit@149.167.138.23)
[11:43:17] *** Quits: jonthesnow (~xizhendu@36.112.179.225) (Ping timeout: 240 seconds)
[11:43:37] *** Quits: lotharn|2 (~kvirc@2607:fb90:4a30:6f67:4fcf:d1f5:602:df23) (Ping timeout: 240 seconds)
[11:45:18] *** Quits: yosijo (~yosijo@2001:9e8:25d:a300:264b:feff:fe55:89e1) (Quit: yosijo)
[11:45:56] *** Quits: bash-libera (~bash-libe@h216-170-204-47.hrcnut.broadband.dynamic.tds.net) (Quit: Leaving...)
[11:46:57] *** Joins: Major_Biscuit (~MajorBisc@c-001-017-008.client.tudelft.eduvpn.nl)
[11:47:19] *** Joins: lotharn|2 (~kvirc@2607:fb90:4a37:89b8:1f16:19e3:323:b529)
[11:50:16] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 250 seconds)
[11:50:44] *** Joins: timm (~timm@user/timm)
[11:53:21] <jelly> echo {a..z}{a..z}{a..z}{a..z}{a..z}{a..z}|wc -c ... mce: CPU5: Core temperature above threshold, cpu clock throttled (total events = 69)
[11:54:02] <jelly> quick, now try to DoS the bot
[11:58:49] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[12:00:15] *** Joins: bash-libera (~bash-libe@h216-170-204-47.hrcnut.broadband.dynamic.tds.net)
[12:00:16] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[12:02:22] *** Joins: dsrt^ (~dsrt@50-207-160-170-static.hfc.comcastbusiness.net)
[12:06:12] *** Joins: Mo (~Mo@2a01:c23:94f1:7f00:2e44:fdff:fe2e:d02c)
[12:06:27] *** Joins: wannabesorabist[ (~wannabeso@2001:470:69fc:105::1:75cd)
[12:07:12] *** Joins: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk)
[12:07:35] <mags> is there a reason to use `mapfile < <(command)` instead of `command | mapfile`?
[12:07:37] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[12:07:41] *** Joins: maryo87 (~Maryo@user/maryo)
[12:07:51] *** Quits: maryo_87 (~Maryo@user/maryo) (Remote host closed the connection)
[12:08:52] *** Joins: aaro (aaro@user/aaro)
[12:09:05] <geirha> certainly
[12:09:10] <geirha> !faq disappear
[12:09:11] <greybot> https://mywiki.wooledge.org/BashFAQ/024 -- I set variables in a loop that's in a pipeline. Why do they disappear after the loop terminates? Or, why can't I pipe data to read?
[12:09:45] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[12:12:12] *** Quits: analognoise (~analognoi@185.202.221.105) (Read error: Connection reset by peer)
[12:12:44] <mags> I see, thanks.
[12:24:22] *** Joins: gallup (~gallup@bl16-179-173.dsl.telepac.pt)
[12:26:17] *** Quits: ouestbillie (~gallup@185.195.233.151) (Ping timeout: 240 seconds)
[12:34:13] *** Quits: bluedust_ (~bluedust@103.165.167.52) (Remote host closed the connection)
[12:39:05] *** gallup is now known as ouestbillie
[12:40:32] *** Joins: bluedust (~bluedust@103.165.167.52)
[12:40:32] *** Quits: han-solo (~hanish@user/han-solo) (Remote host closed the connection)
[12:41:41] *** Joins: han-solo (~hanish@user/han-solo)
[12:43:21] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[12:43:57] *** Quits: [R] (~rs@genoce.org) (Ping timeout: 240 seconds)
[12:45:48] *** Quits: bluedust (~bluedust@103.165.167.52) (Remote host closed the connection)
[12:46:10] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 250 seconds)
[12:47:03] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[12:48:05] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[12:49:37] *** Quits: nickdiaz1wag209 (~bjpenn_@13.110.54.38) (Ping timeout: 240 seconds)
[12:51:33] *** Joins: vysn (~vysn@user/vysn)
[12:52:24] *** Joins: _gabriele (~gabriele@host-95-250-67-210.retail.telecomitalia.it)
[12:52:24] *** Quits: _gabriele (~gabriele@host-95-250-67-210.retail.telecomitalia.it) (Changing host)
[12:52:24] *** Joins: _gabriele (~gabriele@user/gabriele)
[12:52:24] *** _gabriele is now known as gabriele
[12:52:43] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[12:54:25] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[12:54:31] <rendar> if i do `echo ${XDG_RUNTIME_DIR}` it prints /run/user/1000, but if i do this check `[[ -n "${XDG_RUNTIME_DIR}" ]]` in a bash scripts it fails, why? that variable seems to be a blank string... any help?
[12:55:53] <izabera> you're running it from cron or something?
[12:56:04] <izabera> or a systemd unit or whatever
[12:56:27] *** Joins: qub411 (~user@14-202-13-18.tpgi.com.au)
[13:00:03] *** Quits: irc_user (uid423822@id-423822.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[13:00:53] *** Joins: shad (~shad@user/shad)
[13:01:04] <geirha> or it's just not exported
[13:01:22] *** Quits: Rohambili (uid528665@id-528665.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[13:01:24] *** Joins: potamides (~amnifiliu@46.183.103.17)
[13:02:13] <emanuele6> probably exporting it from bashrc instead of from bash_profile or similar
[13:03:19] *** Joins: dreamon (~dreamon@217.78.160.135)
[13:04:38] <pj> rendar: what does `declare -p XDG_RUNTIME_DIR` say?
[13:04:50] *** Quits: tobybl (~tobybl@248.64.200.146.dyn.plus.net) (Remote host closed the connection)
[13:05:30] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[13:05:35] <rendar> pj, in command line or bash script?
[13:05:39] <rendar> izabera, no
[13:05:47] <pj> command line
[13:05:58] <rendar> declare -x XDG_RUNTIME_DIR="/run/user/1000"
[13:06:00] *** Quits: luckiswithme (~luckiswit@149.167.138.23) (Remote host closed the connection)
[13:06:04] <emanuele6> it's exported, yes
[13:06:12] <pj> so it is exported, and how are you running the script?
[13:06:14] <emanuele6> but how are you exporting it?
[13:06:32] *** Joins: luckiswithme (~luckiswit@149.167.138.23)
[13:06:36] <rendar> pj, the script is in /usr/local/bin which is in PATH
[13:06:41] <rendar> so i run it by command line
[13:06:49] *** Quits: luckiswithme (~luckiswit@149.167.138.23) (Remote host closed the connection)
[13:06:57] <pj> the same command line that you just ran the declare command on?
[13:07:04] <rendar> yes!
[13:07:13] <pj> okay, show us the script...
[13:07:16] <pj> !paste > rendar
[13:07:16] <greybot> rendar: Paste short snippets (<= 5 lines) in channel. Paste more using http://paste.debian.net/ or http://paste.wooledge.org/ or see !ix or !sprunge. Please don't use pastebin.com -- it's full of ads and mangles whitespace. NEVER upload screen shots. Don't use a site that requires Javascript, or registration to view raw.
[13:07:32] <rendar> wait wait
[13:07:39] <rendar> maybe i found something
[13:08:16] <rendar> no, fake alarm
[13:08:57] <pj> also `[[ -n "${XDG_RUNTIME_DIR}" ]]` can be shortened to just `[[ $XDG_RUNTIME_DIR ]]`
[13:09:23] <pj> but that's not your current issue.
[13:09:39] <rendar> https://bpa.st/GLUQ
[13:09:48] <rendar> here you go ^
[13:10:39] <pj> the issue's going to be with sudo, it's probably restricted somehow in what variables it passes through.
[13:10:47] <rendar> i think so
[13:11:09] <rendar> $  sudo declare -p XDG_RUNTIME_DIR
[13:11:09] <rendar> sudo: declare: command not found
[13:11:19] <emanuele6> yes, obviously
[13:11:27] <emanuele6> sudo bash -c 'declare -p XDG_RUNTIME_DIR'
[13:11:32] <pj> sudo bash -c 'declare -p XDG_RUNTIME_DIR'
[13:11:32] <rendar> yes! it's sudo
[13:11:46] *** Quits: synthmeat (~synthmeat@user/synthmeat) (Quit: WeeChat 3.0)
[13:12:33] *** Quits: maryo87 (~Maryo@user/maryo) (Ping timeout: 268 seconds)
[13:13:03] *** Joins: bluedust (~bluedust@103.165.167.52)
[13:13:05] *** Quits: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net) (Quit: Quit)
[13:14:58] <pj> rendar: try: sudo -E bash -c 'declare -p XDG_RUNTIME_DIR'
[13:15:27] <rendar> result: declare -x XDG_RUNTIME_DIR="/run/user/1000"
[13:15:39] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[13:15:39] <pj> -E, --preserve-env                 Indicates to the security policy that the user wishes to preserve their existing environment variables.
[13:15:43] <geirha> or   sudo XDG_RUNTIME_DIR="$XDG_RUNTIME_DIR virtz --audio ...
[13:15:56] <geirha> gah, missing closing " quote
[13:15:58] *** Joins: bluedust_ (~bluedust@103.165.167.52)
[13:16:06] <geirha> sudo XDG_RUNTIME_DIR="$XDG_RUNTIME_DIR" virtz --audio ...
[13:16:27] *** Joins: seninha (~seninha@user/seninha)
[13:16:52] <pj> yep, -E preserves the entire environment, the way geirha said will just preserve the one var.
[13:17:18] <pj> so it depends on your needs, preserving just the one var is safer, but if you need a bunch of vars then -E may be a lot more conenient.
[13:17:22] <pj> *convenient
[13:17:25] <rendar> i see!
[13:17:31] <rendar> good to know, thanks
[13:17:34] <pj> yw
[13:19:54] *** Joins: iomari891 (~iomari891@105.112.138.38)
[13:19:57] *** Quits: bluedust (~bluedust@103.165.167.52) (Ping timeout: 268 seconds)
[13:21:14] *** Joins: jonthesnow (~xizhendu@124.127.25.151)
[13:22:10] *** Quits: jonthesnow (~xizhendu@124.127.25.151) (Remote host closed the connection)
[13:22:12] <pj> you can also set env_keep in sudoers if you always want to pass that variable through for every sudo command.
[13:22:36] *** Joins: jonthesnow (~xizhendu@124.127.25.151)
[13:22:40] *** Quits: Penguin666 (~Penguin66@217.138.205.135) (Read error: Connection reset by peer)
[13:22:59] *** Joins: Penguin666 (~Penguin66@217.138.205.135)
[13:25:59] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[13:27:08] <rendar> oh thanks, yes that's nice
[13:30:12] *** Quits: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de) (Remote host closed the connection)
[13:30:47] *** Joins: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de)
[13:31:05] *** Joins: catern (~sbaugh@2604:2000:8fc0:b:a9c7:866a:bf36:3407)
[13:33:30] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:30eb:fc2a:cb36:acf0)
[13:35:46] *** Quits: nunggu (~q@user/nunggu) (Remote host closed the connection)
[13:36:10] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[13:36:16] *** Joins: nunggu (~q@user/nunggu)
[13:36:17] *** Quits: jonthesnow (~xizhendu@124.127.25.151) (Ping timeout: 240 seconds)
[13:38:03] *** Joins: [R] (~rs@genoce.org)
[13:38:37] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:30eb:fc2a:cb36:acf0) (Ping timeout: 240 seconds)
[13:40:13] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[13:40:17] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 240 seconds)
[13:40:35] *** Quits: bluedust_ (~bluedust@103.165.167.52) (Remote host closed the connection)
[13:40:37] *** Quits: potamides (~amnifiliu@46.183.103.17) (Ping timeout: 240 seconds)
[13:40:42] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[13:42:54] *** Joins: seninha (~seninha@user/seninha)
[13:44:05] *** Quits: stevenm_ (~stevenm@stevenm.keele.netcentral.co.uk) (Ping timeout: 256 seconds)
[13:45:08] *** Joins: stevenm (~stevenm@stevenm.keele.netcentral.co.uk)
[13:45:13] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[13:45:58] *** Quits: rMdes (~rmdes@my.armada.digital) (Quit: The Lounge - https://thelounge.github.io)
[13:45:59] *** Quits: Hyde (~MrHyde@static.54.68.46.78.clients.your-server.de) (Ping timeout: 256 seconds)
[13:47:25] *** Quits: bash-libera (~bash-libe@h216-170-204-47.hrcnut.broadband.dynamic.tds.net) (Quit: Leaving...)
[13:50:57] *** Quits: dreamon (~dreamon@217.78.160.135) (Ping timeout: 240 seconds)
[13:51:24] *** Quits: nunggu (~q@user/nunggu) (Remote host closed the connection)
[13:51:48] *** Joins: nunggu (~q@user/nunggu)
[13:51:57] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[13:52:22] *** Joins: seninha (~seninha@user/seninha)
[13:53:51] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[13:54:20] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[13:55:21] *** Joins: ano (~ano@user/ano)
[13:55:26] *** Quits: domicron (~domicron@gateway/tor-sasl/domicron) (Quit: Ping timeout (120 seconds))
[13:55:57] *** Joins: domicron (~domicron@gateway/tor-sasl/domicron)
[13:56:03] *** Joins: maryo87 (~Maryo@user/maryo)
[13:59:02] *** Joins: synthmeat (~synthmeat@user/synthmeat)
[13:59:22] *** Joins: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net)
[13:59:29] *** Quits: moviuro (~moviuro@znc.popho.be) (Quit: Reboot? Or did my jail(8) just die?)
[14:07:31] *** Quits: moto (~moto@user/moto) (Ping timeout: 256 seconds)
[14:07:58] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[14:08:17] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[14:08:59] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[14:09:17] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[14:10:21] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 256 seconds)
[14:10:58] *** Joins: potamides (~amnifiliu@2001:41b8:83c:fa01:6ccf:3460:4fec:ae63)
[14:12:57] *** Quits: tangy (~tangy@user/tangy) (Ping timeout: 240 seconds)
[14:13:12] *** Joins: drd (~drd@93-45-53-200.ip101.fastwebnet.it)
[14:14:03] *** Joins: tangy (~tangy@user/tangy)
[14:14:30] *** Joins: moviuro (~moviuro@znc.popho.be)
[14:17:09] *** Quits: shad (~shad@user/shad) (Ping timeout: 256 seconds)
[14:17:09] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:18:17] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[14:18:27] *** Lord_of_Life_ is now known as Lord_of_Life
[14:19:13] *** Joins: moto (~moto@user/moto)
[14:31:08] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:f1e7:8fae:6d24:6bb2)
[14:35:48] *** Parts: emanuele6 (~emanuele6@user/emanuele6) (WeeChat 3.4)
[14:35:48] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:f1e7:8fae:6d24:6bb2) (Ping timeout: 250 seconds)
[14:36:02] *** Quits: jab416171 (~jab416171@c-174-52-58-23.hsd1.ut.comcast.net) (Ping timeout: 240 seconds)
[14:36:44] *** Quits: ouestbillie (~gallup@bl16-179-173.dsl.telepac.pt) (Remote host closed the connection)
[14:37:53] *** Joins: tangyQED (~tangy@user/tangy)
[14:37:58] *** Quits: tangy (~tangy@user/tangy) (Ping timeout: 250 seconds)
[14:38:04] *** Joins: Rue_ (~rue@61-231-136-36.dynamic-ip.hinet.net)
[14:38:18] *** Joins: carwash (~jwash@c-73-254-46-148.hsd1.wa.comcast.net)
[14:39:15] *** Quits: jwash (~jwash@c-73-254-46-148.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[14:41:26] *** Joins: jab416171 (~jab416171@c-174-52-58-23.hsd1.ut.comcast.net)
[14:41:43] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[14:43:00] *** Joins: ouestbillie (~gallup@bl16-179-173.dsl.telepac.pt)
[14:43:02] *** Joins: ghost08 (~ghost08@adsl-dyn-18.95-102-48.t-com.sk)
[14:45:05] *** Joins: shad (~shad@user/shad)
[14:45:37] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[14:46:37] *** Quits: lotharn|2 (~kvirc@2607:fb90:4a37:89b8:1f16:19e3:323:b529) (Ping timeout: 240 seconds)
[14:47:48] *** Joins: gareth_ (~gareth@2001:8003:a08c:b00:1789:487d:b30e:4010)
[14:48:43] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[14:49:11] *** Quits: Tahvok (~Tahvok@user/tahvok) (Quit: ZNC - http://znc.in)
[14:49:44] *** Quits: gareth_ (~gareth@2001:8003:a08c:b00:1789:487d:b30e:4010) (Client Quit)
[14:51:11] *** Joins: lotharn|2 (~kvirc@2607:fb90:4a31:f262:18e1:ebb2:a749:17ab)
[14:54:13] *** Quits: vishal (~vishal@fedora/vishal) (Quit: ZNC 1.8.2 - https://znc.in)
[14:56:28] *** Joins: vishal (~vishal@fedora/vishal)
[14:56:34] *** Joins: egy (egy@tilde.team)
[14:57:48] *** Quits: yustin (~yustin@user/yustin) (Quit: Leaving)
[14:58:09] *** Joins: yustin (~yustin@user/yustin)
[15:03:33] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 268 seconds)
[15:05:02] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[15:05:56] *** Joins: maryo_87 (~Maryo@user/maryo)
[15:07:37] *** Quits: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de) (Remote host closed the connection)
[15:07:56] *** Joins: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de)
[15:08:18] *** Quits: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de) (Remote host closed the connection)
[15:08:57] *** Quits: maryo87 (~Maryo@user/maryo) (Ping timeout: 240 seconds)
[15:10:57] *** Quits: sinaowolabi_ (~SinaOwola@41.58.235.31) (Ping timeout: 240 seconds)
[15:11:32] *** Joins: Hyde (~MrHyde@static.54.68.46.78.clients.your-server.de)
[15:11:33] *** Quits: drd (~drd@93-45-53-200.ip101.fastwebnet.it) (Ping timeout: 256 seconds)
[15:12:03] *** Joins: drd (~drd@93-45-53-200.ip101.fastwebnet.it)
[15:14:50] *** Joins: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de)
[15:18:37] *** Quits: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[15:19:44] *** Joins: wuseman (~wuseman@90-229-213-60-no68.tbcn.telia.com)
[15:19:55] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[15:20:19] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[15:24:02] *** Joins: tobybl (~tobybl@248.64.200.146.dyn.plus.net)
[15:24:32] *** Quits: situ_ (~situ@nat-pool-brq-u.redhat.com) (Ping timeout: 240 seconds)
[15:25:42] *** Joins: sinaowolabi_ (~SinaOwola@41.190.30.65)
[15:26:39] *** Quits: wuseman (~wuseman@90-229-213-60-no68.tbcn.telia.com) (Changing host)
[15:26:39] *** Joins: wuseman (~wuseman@user/wuseman)
[15:27:47] *** Joins: andril (~andril@2601:586:8400:e4:a965:a318:3940:38c4)
[15:28:48] *** Joins: situ_ (~situ@ip-89-176-145-74.net.upcbroadband.cz)
[15:30:27] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:2055:673d:3155:da63)
[15:30:49] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[15:31:57] *** Joins: bluedust (~bluedust@103.165.167.52)
[15:32:00] *** Quits: andril (~andril@2601:586:8400:e4:a965:a318:3940:38c4) (Client Quit)
[15:32:50] *** Quits: ghost08 (~ghost08@adsl-dyn-18.95-102-48.t-com.sk) (Quit: WeeChat 3.4)
[15:33:19] *** Joins: KBar (~KBar@213.230.76.186)
[15:34:40] <KBar> hey all. i settled on this for PS0='\033[1F\033[9@\033[1G\t\n'
[15:36:29] *** Joins: andril (~andril@c-66-229-99-96.hsd1.fl.comcast.net)
[15:36:44] <KBar> as a result, every time a command is read, the timestamp is prepended to the current line like so `17:04:47 ~ cd`
[15:40:16] <KBar> looks like the \033[1G sequence isnt even needed
[15:40:17] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[15:44:35] *** Quits: jerrywilliamsjr1 (~jude@174-083-043-211.res.spectrum.com) (Quit: Leaving.)
[15:45:15] *** Joins: seninha_ (~seninha@user/seninha)
[15:45:46] *** Quits: sinaowolabi_ (~SinaOwola@41.190.30.65) (Read error: Connection reset by peer)
[15:46:43] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 268 seconds)
[15:47:19] <Soliton> seems weird to try to edit the timestamp into the previous prompt.
[15:50:28] *** Joins: thevishy (~Nishant@2405:201:f005:c007:39ad:8b3b:de67:f2a2)
[15:51:19] *** Quits: seninha_ (~seninha@user/seninha) (Quit: Leaving)
[15:51:36] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[15:53:22] *** Joins: luckiswithme (~luckiswit@149.167.139.19)
[15:53:57] *** Joins: BSaboia_ (~bsaboia@187.19.139.6)
[15:54:31] *** Joins: han-solo (~hanish@user/han-solo)
[15:54:31] *** Quits: BSaboia_ (~bsaboia@187.19.139.6) (Read error: Connection reset by peer)
[15:55:58] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[15:57:02] *** Quits: potamides (~amnifiliu@2001:41b8:83c:fa01:6ccf:3460:4fec:ae63) (Ping timeout: 240 seconds)
[15:57:03] <KBar> izabera and Earnestly thanks for your feedback and help
[15:57:12] *** Quits: KBar (~KBar@213.230.76.186) (Quit: Leaving.)
[16:02:28] *** Joins: sinaowolabi_ (~SinaOwola@160.152.24.180)
[16:02:54] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 250 seconds)
[16:04:54] *** Joins: Kruppt (~Kruppt@50-111-37-142.drhm.nc.frontiernet.net)
[16:17:30] *** Joins: seninha (~seninha@user/seninha)
[16:19:40] *** Quits: apos (~apos@gateway/tor-sasl/apos) (Remote host closed the connection)
[16:20:41] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[16:23:30] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[16:26:45] <Kartagis> hi. what's wrong with? while read -r module;do if [ -f docroot/modules/contrib/$module ];then echo $module >> d8.txt;done < modules.txt? it throws -bash: syntax error near unexpected token `done'.
[16:27:15] <Soliton> missing fi.
[16:27:20] <Soliton> also missing quotes.
[16:27:29] <Kartagis> right, thanks
[16:27:46] *** Joins: malina (~malina@user/malina)
[16:27:55] <Soliton> and you should redirect the loop instead of re-opening d8.txt all the time.
[16:28:28] <Kartagis> didn't create the d8.txt though
[16:28:33] *** Quits: bluedust (~bluedust@103.165.167.52) (Remote host closed the connection)
[16:28:36] <Kartagis> Soliton: how?
[16:29:07] <Soliton> while read -r module; do if [ -f docroot/modules/contrib/"$module" ]; then printf '%s\n' "$module"; fi; done < modules.txt > d8.txt
[16:29:08] *** Joins: bluedust (~bluedust@103.165.167.52)
[16:29:27] <Soliton> well, append if that's what you want.
[16:30:35] *** Joins: apos (~apos@gateway/tor-sasl/apos)
[16:30:44] <Kartagis> right, thanks again
[16:31:04] <Kartagis> well, it was -d what I was looking for
[16:31:22] <Soliton> !psychic
[16:31:23] <greybot> Nope, still not psychic.
[16:34:15] <Kartagis> lol @ greybot
[16:34:17] *** Quits: drd (~drd@93-45-53-200.ip101.fastwebnet.it) (Ping timeout: 256 seconds)
[16:34:45] <Kartagis> in my defense, i always seem to mistake one for the other
[16:34:49] *** Joins: shad (~shad@user/shad)
[16:36:53] *** Joins: drewnix (~textual@c-73-118-230-129.hsd1.wa.comcast.net)
[16:38:19] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[16:38:58] *** Joins: cdown (~cdown@163.114.131.1)
[16:41:49] *** Joins: hyskaru (~hyskaru@lfbn-tou-1-444-209.w86-206.abo.wanadoo.fr)
[16:41:57] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[16:42:43] *** Joins: shad (~shad@user/shad)
[16:43:29] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[16:44:35] *** Joins: liveacoustic (~adison@ip68-10-183-199.hr.hr.cox.net)
[16:46:07] <egy> i'd like to know if bash's builtin `read` performs the syscall read(2) or not
[16:46:28] <egy> i couldn't use neither strace or ltrace for that. any suggestions ?
[16:47:11] <Soliton> strace bash -c read
[16:49:01] *** Quits: hyskaru (~hyskaru@lfbn-tou-1-444-209.w86-206.abo.wanadoo.fr) (Changing host)
[16:49:01] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[16:50:14] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Quit: hyskaru)
[16:51:10] <egy> silly me. thanks a bunch Soliton
[16:51:26] <egy> i appreciate your help
[16:53:12] *** Quits: wwilliam (~afernande@user/wwilliam) (Quit: Konversation terminated!)
[16:54:14] *** Joins: DaNeenjah (~jake@adsl-74-230-4-35.hsv.bellsouth.net)
[16:56:12] *** Quits: situ_ (~situ@ip-89-176-145-74.net.upcbroadband.cz) (Ping timeout: 250 seconds)
[16:56:15] *** Joins: potamides (~amnifiliu@2001:41b8:83c:fa01:6ccf:3460:4fec:ae63)
[16:57:14] *** Joins: Adoi (~Adoi@user/adoi)
[16:57:15] *** Joins: Adois (~Adoi@user/adoi)
[16:57:40] *** Quits: Adois (~Adoi@user/adoi) (Remote host closed the connection)
[16:57:46] <egy> interesting. `read` doesn't do buffered reads but `read -N` does
[16:59:02] <Soliton> by default read has to stop on a newline.
[16:59:38] <egy> i know, but it calls read(2) for every character.
[16:59:53] <egy> newline is easily changed with `read -d`
[16:59:58] <Soliton> because it has no idea when the newline comes.
[17:00:07] <Soliton> or whatever delimiter you choose.
[17:00:17] <egy> i agree
[17:00:34] <egy> same goes for EOF, right ?
[17:01:38] <Soliton> not sure what you're asking.
[17:02:49] <egy> it has no idea when EOF comes also, right ?
[17:03:12] *** Quits: luckiswithme (~luckiswit@149.167.139.19) (Remote host closed the connection)
[17:04:11] <Blondie101010> like most basic CLI IO utils, bash uses readline: https://www.gnu.org/software/bash/manual/html_node/Readline-Interaction.html
[17:05:02] <Soliton> read only uses readline with -e.
[17:06:19] <Soliton> if read would read until EOF it's not going to read too much so wouldn't have to read one char at a time.
[17:06:42] <Soliton> i don't think there is a way to do that though.
[17:07:47] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:07:57] *** Quits: XV8 (~XV8@2601:5cb:c001:50:d0cb:b834:298c:b12d) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:08:30] *** Joins: XV8 (~XV8@2601:5cb:c001:50:d0cb:b834:298c:b12d)
[17:09:02] *** Joins: synaps3 (~void@user/synaps3)
[17:10:17] *** Quits: potamides (~amnifiliu@2001:41b8:83c:fa01:6ccf:3460:4fec:ae63) (Ping timeout: 240 seconds)
[17:10:32] <osse> from what I can tell bash buffers the reading if -N is not given and the fd is not a pipe
[17:11:08] <osse> https://github.com/bminor/bash/blob/f3a35a2d601a55f337f8ca02a541f8c033682247/lib/sh/zread.c#L120-L148
[17:12:17] *** Quits: maryo_87 (~Maryo@user/maryo) (Ping timeout: 240 seconds)
[17:12:18] <Earnestly> Ooh, still has legacy K&R C
[17:12:58] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[17:13:04] <Soliton> if it can seek, sure.
[17:14:22] *** Quits: bluepenquin (~bluepenqu@2001:470:69fc:105::829) (Changing host)
[17:14:22] *** Joins: bluepenquin (~bluepenqu@user/bluepenquin)
[17:14:26] *** Joins: potamides (~amnifiliu@2001:41b8:83c:fa01:6ccf:3460:4fec:ae63)
[17:16:59] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[17:17:52] *** Quits: andril (~andril@c-66-229-99-96.hsd1.fl.comcast.net) (Ping timeout: 250 seconds)
[17:18:34] *** Quits: ZAJDAN (~ZAJDAN@chladek-jar.zno.skynet.cz) (Read error: Connection reset by peer)
[17:26:46] *** Joins: BSaboia_ (~bsaboia@187.19.139.6)
[17:27:24] *** Joins: bluedust_ (~bluedust@103.165.167.52)
[17:30:17] *** Quits: bluedust (~bluedust@103.165.167.52) (Ping timeout: 240 seconds)
[17:30:37] *** Quits: Jong (~Jong@2620:10d:c090:400::5:4f54) (Ping timeout: 240 seconds)
[17:31:37] *** Quits: drewnix (~textual@c-73-118-230-129.hsd1.wa.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:33:40] *** Joins: thiras (~thiras@user/thiras)
[17:35:45] <egy> thanks
[17:37:21] *** Quits: kj (~kj@kj.aerisnetwork.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:38:02] *** Joins: twy (~twy@27.34.24.57)
[17:39:42] *** Joins: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com)
[17:43:02] *** Quits: BSaboia_ (~bsaboia@187.19.139.6) (Quit: Leaving)
[17:45:17] *** Quits: lotharn|2 (~kvirc@2607:fb90:4a31:f262:18e1:ebb2:a749:17ab) (Ping timeout: 240 seconds)
[17:46:34] *** Joins: fatal (~0x00@user/fatal)
[17:47:18] *** Joins: lotharn|2 (~kvirc@2607:fb90:4a23:bcf8:5d49:b6ac:2e22:2d57)
[17:47:32] *** Quits: fatal (~0x00@user/fatal) (Client Quit)
[17:48:16] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[17:49:38] *** Joins: drewnix (~textual@c-73-118-230-129.hsd1.wa.comcast.net)
[17:51:55] *** Quits: OlCe (~user@lfbn-nic-1-109-134.w2-15.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[17:55:16] *** Quits: timm (~timm@user/timm) (Remote host closed the connection)
[17:55:16] *** Joins: ChmEarl (~chmearl@user/chmearl)
[17:55:36] *** Joins: timm (~timm@user/timm)
[17:56:09] *** Joins: dreamon (~dreamon@ppp-88-217-91-105.dynamic.mnet-online.de)
[17:56:39] *** Joins: frostwork (~frostwork@user/frostwork)
[17:59:13] *** Joins: Inline (~Inline@ip-037-201-240-204.um10.pools.vodafone-ip.de)
[17:59:26] *** Quits: twy (~twy@27.34.24.57) (Remote host closed the connection)
[18:00:05] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[18:01:13] *** Joins: fef (~thedawn@user/thedawn)
[18:01:30] *** Joins: twy (~twy@27.34.24.57)
[18:03:00] *** Joins: kj (~kj@kj.aerisnetwork.net)
[18:06:26] *** Joins: situ_ (~situ@ip-89-176-145-74.net.upcbroadband.cz)
[18:07:16] *** Joins: fatal (~0x00@user/fatal)
[18:08:26] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[18:10:44] *** Quits: kj (~kj@kj.aerisnetwork.net) (Ping timeout: 250 seconds)
[18:11:35] *** Joins: MichaelOF (~michael@p200300eb8f119e015dae34d79f62d82a.dip0.t-ipconnect.de)
[18:11:42] *** Joins: Kyuzo68 (~Kyuzo@host-82-52-171-12.retail.telecomitalia.it)
[18:14:13] *** Quits: drewnix (~textual@c-73-118-230-129.hsd1.wa.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[18:14:33] *** Quits: MichaelOF (~michael@p200300eb8f119e015dae34d79f62d82a.dip0.t-ipconnect.de) (Client Quit)
[18:16:43] *** Joins: drewnix (~textual@c-73-118-230-129.hsd1.wa.comcast.net)
[18:17:16] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[18:17:18] *** Quits: drewnix (~textual@c-73-118-230-129.hsd1.wa.comcast.net) (Client Quit)
[18:17:21] *** Joins: Thanatermesis (~Thanaterm@191.92.148.122)
[18:18:57] *** Quits: Milijus (~Milijus@2601:580:4500:1305:e6e7:49ff:fe47:5310) (Ping timeout: 240 seconds)
[18:19:41] *** Quits: twy (~twy@27.34.24.57) (Ping timeout: 256 seconds)
[18:20:01] *** Joins: twy (~twy@2400:1a00:b011:8ec0:cfb5:6a97:2d41:842d)
[18:21:54] *** Joins: OlCe` (~user@lfbn-nic-1-117-92.w2-15.abo.wanadoo.fr)
[18:27:32] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[18:28:15] *** Quits: Noventicx1 (~Noventicx@crux.uberspace.de) (Quit: The Lounge - https://thelounge.chat)
[18:28:34] *** Joins: Noventicx1 (~Noventicx@crux.uberspace.de)
[18:28:37] *** Quits: potamides (~amnifiliu@2001:41b8:83c:fa01:6ccf:3460:4fec:ae63) (Ping timeout: 240 seconds)
[18:30:10] *** Quits: synaps3 (~void@user/synaps3) (Quit: Leaving)
[18:30:58] *** Joins: zeden (~zeden@user/zeden)
[18:33:52] *** Joins: Liblx (~Alex@2a02:810c:280:59c:ccf:2ed2:f415:b4be)
[18:35:41] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[18:35:46] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[18:40:13] *** Joins: kj (~kj@beta.aerisnetwork.net)
[18:40:24] *** Joins: davidl (~quassel@217-64-148-122.pool.ovpn.com)
[18:40:29] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[18:42:04] *** Joins: Jong (~Jong@2620:10d:c090:400::5:78f7)
[18:45:37] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[18:45:47] *** Joins: maryo (~Maryo@user/maryo)
[18:46:10] *** Joins: drd (~drd@2001:b07:6468:1782:1e9c:163f:3faa:8058)
[18:46:38] *** Joins: shad (~shad@user/shad)
[18:46:38] <eoli3n> Hi
[18:46:55] <eoli3n> from a bash script i redirect all output with 'exec &> >(tee "/root/system/preseed/post.log")'
[18:47:18] <eoli3n> in the middle on that script, i want to print output to tty7 so i use
[18:47:26] <eoli3n> exec < /dev/tty7 &> /dev/tty7
[18:47:30] <eoli3n> and then chvt 7
[18:48:26] <eoli3n> to continue to log to the logfile with tee, will 'exec &> >(tee -a "/root/system/preseed/post.log")' just after chvt continue to print on tty7 and append in the file ?
[18:49:00] <Riviera> Seriously/!
[18:49:01] <Riviera> ?!
[18:49:02] <Riviera> !tias
[18:49:03] <greybot> Try It And See
[18:49:08] <eoli3n> each try is 15min
[18:49:12] <eoli3n> so yes seriously
[18:55:15] *** Joins: crashrep (~crashrep@user/crashrep)
[18:57:42] *** Joins: potamides (~amnifiliu@2001:41b8:83c:fa01:6ccf:3460:4fec:ae63)
[18:58:17] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[18:59:20] *** Quits: murder (mdr@zny.us-ea.id.secunit.org) (Changing host)
[18:59:20] *** Joins: murder (mdr@user/murder)
[19:01:35] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[19:01:49] *** Quits: frostwork (~frostwork@user/frostwork) (Quit: Leaving)
[19:02:06] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[19:02:47] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[19:03:24] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[19:03:43] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[19:04:27] *** Quits: tomboy64 (~tomboy64@user/tomboy64) (Ping timeout: 250 seconds)
[19:04:40] *** Joins: samgranieri (~samgranie@user/samgranieri)
[19:08:59] *** Quits: yustin (~yustin@user/yustin) (Ping timeout: 268 seconds)
[19:09:24] *** Joins: greentree (~greentree@pool-74-101-99-157.nycmny.fios.verizon.net)
[19:09:33] *** Joins: han-solo (~han-solo@178.248.115.28)
[19:09:33] *** Quits: han-solo (~han-solo@178.248.115.28) (Changing host)
[19:09:33] *** Joins: han-solo (~han-solo@user/han-solo)
[19:11:23] <greentree> what would be a proper way to perform retries with a for loop? i tried the example at https://unix.stackexchange.com/a/82610 but it gave me a syntax error
[19:11:27] *** Quits: plopix[m] (~ewnzlmatr@2001:470:69fc:105::7b68) (Quit: Client limit exceeded: 20000)
[19:11:51] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:12:28] <Soliton> perhaps you did something wrong.
[19:12:41] *** Joins: tomboy64 (~tomboy64@user/tomboy64)
[19:12:41] *** Joins: plopix[m] (~ewnzlmatr@2001:470:69fc:105::7b68)
[19:12:46] *** Quits: dsrt^ (~dsrt@50-207-160-170-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[19:13:06] <izabera> # for i in 1 2 3 4 5; do command && break || sleep 15; done
[19:13:07] <shbot> izabera: no output
[19:13:32] *** Quits: Liblx (~Alex@2a02:810c:280:59c:ccf:2ed2:f415:b4be) (Ping timeout: 240 seconds)
[19:14:14] <izabera> # else
[19:14:15] <shbot> izabera: bash: syntax error near unexpected token `else'
[19:14:21] <izabera> right so that was not a syntax error, greentree
[19:14:31] <izabera> says shbot
[19:15:23] *** Joins: Liblx (~Alex@2a02:810c:280:59c:ccf:2ed2:f415:b4be)
[19:17:54] *** Quits: kill (~killown@user/killown) (Ping timeout: 250 seconds)
[19:17:59] *** Joins: Minvera (~Minvera@user/Minvera)
[19:18:14] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.3)
[19:18:40] *** Quits: Kyuzo68 (~Kyuzo@host-82-52-171-12.retail.telecomitalia.it) (Quit: Konversation terminated!)
[19:20:24] *** Joins: jkwnki (~jkwnki@p2e579abf.dip0.t-ipconnect.de)
[19:25:13] *** Quits: travisghansen (~travisgha@192.74.130.86) (Quit: The Lounge - https://thelounge.github.io)
[19:26:02] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[19:26:17] *** Quits: TheSilentLink (~TheSilent@user/thesilentlink) (Ping timeout: 240 seconds)
[19:27:20] *** Joins: travisghansen (~travisgha@192.74.130.86)
[19:28:48] *** Joins: TheSilentLink (~TheSilent@user/thesilentlink)
[19:29:22] *** Joins: rgrinberg (~textual@2806:101e:7:2b:4d0:6ff9:1790:ff37)
[19:30:50] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[19:31:08] *** Joins: JanC (~janc@user/janc)
[19:31:51] *** Joins: mat001 (~mat001@213.143.69.121)
[19:33:37] *** Quits: Liblx (~Alex@2a02:810c:280:59c:ccf:2ed2:f415:b4be) (Ping timeout: 240 seconds)
[19:33:56] *** Joins: minnow (~minnow@83.6.28.54.ipv4.supernova.orange.pl)
[19:35:18] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[19:35:42] *** Joins: Liblx (~Alex@2a02:810c:280:59c:ccf:2ed2:f415:b4be)
[19:35:53] *** Joins: andril (~andril@2601:586:8400:e4:a965:a318:3940:38c4)
[19:39:49] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 268 seconds)
[19:40:17] *** Quits: Liblx (~Alex@2a02:810c:280:59c:ccf:2ed2:f415:b4be) (Ping timeout: 240 seconds)
[19:40:50] *** Quits: rgrinberg (~textual@2806:101e:7:2b:4d0:6ff9:1790:ff37) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:41:43] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[19:42:01] *** Joins: Liblx (~Alex@2a02:810c:280:59c:ccf:2ed2:f415:b4be)
[19:44:03] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[19:51:16] *** Quits: Liblx (~Alex@2a02:810c:280:59c:ccf:2ed2:f415:b4be) (Ping timeout: 250 seconds)
[19:52:20] *** Joins: Liblx (~Alex@2a02:810c:280:59c:ccf:2ed2:f415:b4be)
[19:55:11] *** Joins: Filystyn (~piotr@user/filystyn)
[19:55:13] <Filystyn> guys
[19:55:25] <Filystyn> is_binary
[19:55:29] <Filystyn> dow we have ?
[19:56:00] <Filystyn> i gues test file and than test is executable ?
[19:56:16] <selckin> !file
[19:56:17] <Filystyn> test -x
[19:56:18] <Filystyn> !
[19:57:01] <Filystyn> thank you for help
[19:57:06] <osse> I think grep and friends just check the first N bytes for a NUL, and if one is found it's binary
[19:57:22] <Filystyn> nah test -x does the job
[19:58:24] <mknod> Filystyn, test -x tests the executable bit, not the content of the file.
[19:58:51] <Filystyn> you mean it can be also directory ?
[19:59:17] <mknod> It can also be a plain text file. Such as a shell script.
[19:59:42] *** Joins: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com)
[19:59:45] <Filystyn> yeah but actualy I need to check that too
[19:59:54] <Filystyn> so it's fine
[20:00:07] <mknod> Ah, if you didn't ask the right question then.
[20:00:15] <Filystyn> indeed I went on with binary but
[20:00:21] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[20:00:34] <Filystyn> since it's what I most times see as executable
[20:00:43] <Filystyn> not counting dir
[20:00:48] *** Quits: samgranieri (~samgranie@user/samgranieri) (Ping timeout: 250 seconds)
[20:01:25] *** Joins: seninha (~seninha@user/seninha)
[20:02:01] *** Quits: Liblx (~Alex@2a02:810c:280:59c:ccf:2ed2:f415:b4be) (Ping timeout: 268 seconds)
[20:02:37] *** Joins: Liblx (~Alex@2a02:810c:280:59c:ccf:2ed2:f415:b4be)
[20:02:47] *** Quits: mooz (~none@23.254.112.158) (Remote host closed the connection)
[20:02:57] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:fcf8:6040:f413:fda1)
[20:02:57] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:fcf8:6040:f413:fda1) (Changing host)
[20:02:57] *** Joins: skapata (~Skapata@user/skapata)
[20:03:36] *** Joins: heiner (~Thunderbi@2a00:6020:b006:a900:d250:99ff:fe34:8fd2)
[20:04:22] *** Joins: richardm75 (~richardm7@2600:8801:c507:b200:71f7:7610:38ec:f2b3)
[20:07:15] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[20:07:18] *** Quits: mat001 (~mat001@213.143.69.121) (Ping timeout: 250 seconds)
[20:07:34] *** Quits: bluedust_ (~bluedust@103.165.167.52) (Remote host closed the connection)
[20:09:02] *** Quits: Liblx (~Alex@2a02:810c:280:59c:ccf:2ed2:f415:b4be) (Ping timeout: 250 seconds)
[20:10:56] *** Joins: Liblx (~Alex@2a02:810c:280:59c:ccf:2ed2:f415:b4be)
[20:13:00] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[20:13:01] *** Joins: vysn (~vysn@user/vysn)
[20:14:47] <luva> so im already trying for an hour, even though I guess it shouldnt be so hard. I have folderhierachy of photos that I took. Lots of times, when the picture was bad, I deleted the JPG file, but left the RAW file. So I was trying to write a program that checks all folders  for .DNG, strips the .DNG ending, and searches if a corresponding .JPG file is
[20:14:47] <luva> inside. I dont get it though. Not looking for someone to do it for me, but can someone point me into right direction?
[20:15:03] *** Joins: mooz (~none@107.155.42.134)
[20:16:11] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[20:17:00] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[20:18:40] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:19:00] *** Quits: Inline (~Inline@ip-037-201-240-204.um10.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[20:19:22] *** Joins: seninha (~seninha@user/seninha)
[20:19:57] *** Joins: knstn (~knstn@ppp-94-66-57-10.home.otenet.gr)
[20:23:21] *** Joins: bash-libera (~bash-libe@h216-170-204-47.hrcnut.broadband.dynamic.tds.net)
[20:26:41] *** Quits: Liblx (~Alex@2a02:810c:280:59c:ccf:2ed2:f415:b4be) (Ping timeout: 268 seconds)
[20:27:13] *** Joins: Liblx (~Alex@2a02:810c:280:59c:ccf:2ed2:f415:b4be)
[20:27:32] *** Quits: drd (~drd@2001:b07:6468:1782:1e9c:163f:3faa:8058) (Quit: ZNC 1.8.2 - https://znc.in)
[20:28:12] *** Joins: drd (~drd@2001:b07:6468:1782:1e9c:163f:3faa:8058)
[20:29:18] *** Quits: jkwnki (~jkwnki@p2e579abf.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[20:29:37] *** Quits: twy (~twy@2400:1a00:b011:8ec0:cfb5:6a97:2d41:842d) (Ping timeout: 240 seconds)
[20:30:26] *** Joins: twy (~twy@27.34.24.57)
[20:31:11] *** fling is now known as swing
[20:32:33] *** Quits: Liblx (~Alex@2a02:810c:280:59c:ccf:2ed2:f415:b4be) (Quit: WeeChat 3.2)
[20:34:58] *** Joins: jkwnki (~jkwnki@p2e579abf.dip0.t-ipconnect.de)
[20:36:16] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[20:38:24] <pj> !pe > luva
[20:38:24] <greybot> luva: Parameter Expansion expands parameters: "$foo", "$1". You can use it to perform string or array operations: "${file%.mp3}", "${0##*/}", "${files[@]: -4}". They should *always* be quoted. See: http://mywiki.wooledge.org/BashFAQ/073 and "Parameter Expansion" in man bash. Also see http://wiki.bash-hackers.org/syntax/pe.
[20:41:17] *** Joins: Inline (~Inline@ip-037-201-240-204.um10.pools.vodafone-ip.de)
[20:42:49] *** Joins: zoe (~zoe@fsf/member/zoe)
[20:43:13] *** swing is now known as fling
[20:43:41] *** Joins: tobybl_ (~tobybl@248.64.200.146.dyn.plus.net)
[20:44:04] *** Joins: lotharn (~kvirc@2607:fb90:4a3f:9683:3405:62a:6359:24c1)
[20:44:25] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[20:44:45] *** Joins: betuxy (~betuxy@p579ad46c.dip0.t-ipconnect.de)
[20:46:18] *** Quits: tobybl (~tobybl@248.64.200.146.dyn.plus.net) (Ping timeout: 250 seconds)
[20:46:37] *** Quits: lotharn|2 (~kvirc@2607:fb90:4a23:bcf8:5d49:b6ac:2e22:2d57) (Ping timeout: 240 seconds)
[20:46:46] *** Joins: rgrinberg (~textual@2806:101e:7:2b:4d0:6ff9:1790:ff37)
[20:47:16] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[20:48:57] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[20:49:12] *** Joins: mat001 (~mat001@213.143.69.121)
[20:50:26] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Read error: Connection reset by peer)
[20:51:41] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[20:52:42] <libc> getopts put's '?' in $name even when in silent mode
[20:52:50] <libc> it's not according to `help getopts'
[20:52:53] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[20:53:10] *** Quits: twy (~twy@27.34.24.57) (Quit: Leaving)
[20:54:13] <libc> OPSTRING start's with colon
[20:54:32] *** Quits: dreamon (~dreamon@ppp-88-217-91-105.dynamic.mnet-online.de) (Ping timeout: 240 seconds)
[20:54:48] *** Joins: magla (~gelignite@55d4ee32.access.ecotel.net)
[20:59:02] *** Quits: potamides (~amnifiliu@2001:41b8:83c:fa01:6ccf:3460:4fec:ae63) (Ping timeout: 240 seconds)
[20:59:37] *** Quits: drd (~drd@2001:b07:6468:1782:1e9c:163f:3faa:8058) (Ping timeout: 240 seconds)
[20:59:50] *** Joins: bluedust (~bluedust@103.165.167.52)
[21:00:10] *** Joins: drd (~drd@93-45-53-200.ip101.fastwebnet.it)
[21:03:43] *** Quits: betuxy (~betuxy@p579ad46c.dip0.t-ipconnect.de) (Quit: Connection closed)
[21:07:10] *** Quits: tobybl_ (~tobybl@248.64.200.146.dyn.plus.net) (Remote host closed the connection)
[21:07:21] *** Quits: Rue_ (~rue@61-231-136-36.dynamic-ip.hinet.net) (Quit: WeeChat 3.4)
[21:07:57] *** Quits: jkwnki (~jkwnki@p2e579abf.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[21:07:57] *** Quits: minnow (~minnow@83.6.28.54.ipv4.supernova.orange.pl) (Ping timeout: 240 seconds)
[21:08:00] *** Quits: maryo (~Maryo@user/maryo) (Ping timeout: 268 seconds)
[21:08:36] <luva> thanks pj, very useful, unfortunately I have spaces in my folders names since the folders are from a few years ago when I was still on windows and did everything by hand
[21:09:13] <Soliton> there is no issue with spaces. just quote properly.
[21:09:44] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::4)
[21:12:25] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[21:14:22] <mattf_> in bash how can i convert an int number for a utf16 character?
[21:14:31] <mattf_> like js's String.FromCharCode
[21:14:32] *** Quits: rgrinberg (~textual@2806:101e:7:2b:4d0:6ff9:1790:ff37) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:15:08] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[21:16:24] *** Joins: rgrinberg (~textual@187.223.115.174)
[21:16:31] *** Joins: nickdiaz1wag209 (~bjpenn_@13.110.54.40)
[21:17:08] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[21:17:53] *** Quits: andril (~andril@2601:586:8400:e4:a965:a318:3940:38c4) (Quit: WeeChat 3.4)
[21:18:04] *** Quits: Filystyn (~piotr@user/filystyn) (Read error: No route to host)
[21:18:28] *** Joins: zro (~zro@user/zro)
[21:18:30] <Soliton> # chr() { printf "\\$(printf '%03o' "$1")"; }; chr 65
[21:18:32] <shbot> Soliton: A
[21:19:02] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 240 seconds)
[21:19:17] <mattf_> Soliton: thanks a lot!
[21:19:48] <luva> Soliton, well the find command i am using to search in my directory hierarchy gives back separate lines instead of the path of the folder, and I dont know how to make it one line per path.
[21:20:30] <Soliton> mattf_: that's for ascii only though.
[21:20:43] *** Quits: colo (~colo@user/colo) (Quit: Bye.)
[21:20:44] <luva> want to iterate over find  . -name "*.DNG"
[21:21:15] <phy1729> Don't and use -exec instead ?
[21:21:35] *** Joins: andril (~andril@2601:586:8400:e4:a965:a318:3940:38c4)
[21:21:45] *** Joins: legola (~legola@46.235.100.54)
[21:21:46] <Soliton> do you even have an arbitrary dir hierarchy that you need find?
[21:22:38] <Soliton> mattf_: printf understands \u and \U for unicode.
[21:23:39] <mattf_> Soliton: you think chr() { printf "\\$(printf '\u%03o' "$1")"; }
[21:24:12] <jelly> PRINT CHR$(34)
[21:25:52] <mattf_> that doesnt work.
[21:26:41] *** Joins: colo (~colo@user/colo)
[21:26:45] <Soliton> \u and \U take hex not octal.
[21:27:22] <mattf_> my input is decimal
[21:27:23] <Soliton> # chru() { printf "\\U$(printf '%08x' "$1")"; }; chru 65
[21:27:24] <shbot> Soliton: A
[21:27:33] <mattf_> i think
[21:27:59] *** Quits: bluedust (~bluedust@103.165.167.52) (Remote host closed the connection)
[21:28:08] *** Joins: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr)
[21:28:18] <ApostleInTriumph> Hello. I'm trying to run the following bash script https://bpa.st/MAEA inside a directory that contains XML files. I expect the output to be saved as X.ppm where X is the input file name. However, when I run this command, I find only one output ppm. why is that?
[21:28:26] <mattf_> no that actually work fine now
[21:28:54] <Soliton> !checl
[21:28:55] <Soliton> !check
[21:28:56] <checkbot> ApostleInTriumph: Line 10: Don't use variables in the printf format string. Use printf '..%s..' "$foo". Line 10: Double quote to prevent globbing and word splitting. Line 13: Double quote to prevent globbing and word splitting. See https://shellcheck.net/?id=cb33536
[21:30:42] <Soliton> you can write the file in one go: { printf "P2\n%s %s\n65535\n" "$w" "$h"; xmlstarlet ...; } > "${xml%%.*}".ppm
[21:31:58] <Soliton> surely you could also get width and height in one go.
[21:33:21] <ApostleInTriumph> Soliton thanks!
[21:33:34] *** Joins: dreamon (~dreamon@p54b1472c.dip0.t-ipconnect.de)
[21:33:42] *** Joins: potamides (~amnifiliu@46.183.103.8)
[21:34:22] <Soliton> oh and you said you want a loop over  multiple files so you need to write a loop...
[21:34:45] <Soliton> or call your script in a loop.
[21:36:54] *** Joins: minnow (~minnow@83.6.28.54.ipv4.supernova.orange.pl)
[21:37:16] *** Quits: richardm75 (~richardm7@2600:8801:c507:b200:71f7:7610:38ec:f2b3) (Quit: Leaving)
[21:38:37] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::4) (Ping timeout: 240 seconds)
[21:38:44] *** Quits: mat001 (~mat001@213.143.69.121) (Ping timeout: 250 seconds)
[21:40:27] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[21:44:47] *** Quits: legola (~legola@46.235.100.54) (Remote host closed the connection)
[21:45:17] *** Quits: DaNeenjah (~jake@adsl-74-230-4-35.hsv.bellsouth.net) (Quit: WeeChat 3.4)
[21:45:32] <minnow> foo=$([ -n "$hw" ] && printf scale_vaapi || printf scale)
[21:45:35] <minnow> ^ good or bad?
[21:46:32] *** Quits: Major_Biscuit (~MajorBisc@c-001-017-008.client.tudelft.eduvpn.nl) (Ping timeout: 250 seconds)
[21:46:42] *** Quits: rgrinberg (~textual@187.223.115.174) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:48:10] <Soliton> !&&||
[21:48:10] <greybot> foo && bar || baz is not equivalent to 'if foo; then bar; else baz; fi'. In the former case, baz will happen if *either* foo *or* bar return false. In the latter case, baz will only trigger if foo returns false, regardless of the exit code for bar. See http://mywiki.wooledge.org/BashPitfalls
[21:48:41] <minnow> oh but here printf is redirected to variable so it cannot fail?
[21:48:46] <Soliton> if [ -n "$hw" ]; then foo=scale_vaapi; else foo=scale; fi
[21:49:00] <p3rL> hello.. how do i concat my variable with string $var="abc" ... echo $var123
[21:49:03] <p3rL> output abc123
[21:49:12] <minnow> Soliton: yeah probably less contrived way
[21:49:35] <Soliton> "$var"123
[21:49:42] <p3rL> ok thanks
[21:49:55] *** Quits: knstn (~knstn@ppp-94-66-57-10.home.otenet.gr) (Ping timeout: 256 seconds)
[21:50:00] *** Quits: haliucinas (~haliucina@5.20.153.21) (Ping timeout: 250 seconds)
[21:50:07] *** Joins: rgrinberg (~textual@2806:101e:7:2b:4d0:6ff9:1790:ff37)
[21:51:35] *** Joins: knstn (~knstn@ppp-94-66-57-108.home.otenet.gr)
[21:51:43] <p3rL> Soliton echo -e "some old text \"$var\"123 \n some new line text"
[21:51:47] <p3rL> is that correct ?
[21:51:58] *** Quits: libc (~weechat@user/tessio) (Remote host closed the connection)
[21:52:14] <han-solo> # var=foo; printf 'some old text %s \n some new line text\n' "$var"
[21:52:16] <shbot> han-solo: some old text foo
[21:52:16] <shbot> han-solo:  some new line text
[21:52:56] <p3rL> do with echo also %s123
[21:53:04] <han-solo> !survey
[21:53:05] <greybot> survey says: No
[21:53:21] *** Joins: docmax_ (~docmax@dynamic-077-003-122-154.77.3.pool.telefonica.de)
[21:53:51] <han-solo> is this just to print ? or need to be in some another variable ?
[21:54:12] <p3rL> just print
[21:54:15] *** Quits: Namarrgon (~Namarrgon@archlinux/op/Namarrgon) (Ping timeout: 256 seconds)
[21:54:43] *** Quits: MrCollinsGA (~MrCollins@38.21.140.217) (Read error: Connection reset by peer)
[21:55:09] <han-solo> then use `prinft`
[21:55:21] <han-solo> er, `printf`
[21:55:36] <p3rL> will it work %s123 output like foo123
[21:55:38] <p3rL> without space
[21:55:47] <han-solo> !echo > p3rL # obligatory echo faq
[21:55:47] <greybot> p3rL # obligatory echo faq: echo outputs a string. echo has many portability problems, and should never be used with option flags. Consider printf instead: printf 'name: %s\n' "$name". http://wiki.bash-hackers.org/commands/builtin/echo | http://cfajohnson.com/shell/cus-faq.html#Q0b | http://www.in-ulm.de/~mascheck/various/echo+printf
[21:56:06] *** Quits: docmax__ (~docmax@dynamic-077-008-135-240.77.8.pool.telefonica.de) (Ping timeout: 268 seconds)
[21:56:52] <han-solo> # var='foo bar'; printf 'some line with %s123\n' "$var" # ?
[21:56:53] <shbot> han-solo: some line with foo bar123
[21:57:32] <wiscii> "prinft", reminds me of `sl` (steam loco), prinft could print a big-foot to term ;-)
[21:58:00] <han-solo> ':)
[21:58:08] *** Joins: jkwnki (~jkwnki@p2e5796b1.dip0.t-ipconnect.de)
[21:59:18] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[21:59:37] <p3rL> # IFS=","; for i in "word1,word2,word3"; do printf '%s %s'; done
[21:59:39] <shbot> p3rL: no output
[22:00:06] <wiscii> need a string to print :)
[22:00:16] *** Joins: larryv (~larryv@zsh/patchmanager/larryv)
[22:00:20] <p3rL> "word1,word2,word3" < isn't it string
[22:00:20] <Soliton> it's non-sense either way.
[22:00:44] <wiscii> OMG .. rofl
[22:00:53] <p3rL> thats why i was using echo :D
[22:01:04] <wiscii> use " to stop word splitting
[22:01:23] <wiscii> you are trying to use it FOR word splitting .. and that's just a start
[22:01:35] <p3rL> # IFS=","; for i in "word1,word2,word3"; do echo -e "$i $i"; done
[22:01:36] <shbot> p3rL: word1,word2,word3 word1,word2,word3
[22:01:56] <Soliton> so much non-sense. maybe state a goal in english.
[22:02:51] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[22:03:12] <p3rL> ok i am done
[22:03:26] *** Quits: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr) (Quit: Client closed)
[22:03:30] <wiscii> giving up ?
[22:03:38] <p3rL> no i did what i want
[22:03:48] <wiscii> hmm.. i don't think you did
[22:04:25] <wiscii> take another look at the output, from your input i would hesitate to guess that the outyput is not what you wanted
[22:04:28] <Soliton> they're usually just here to write non-sense in my experience and not listen to anyone.
[22:04:42] <wiscii> fair enough ;-)
[22:05:55] <p3rL> wiscii i Did https://termbin.com/e1qq
[22:06:11] *** Joins: crashrep (~crashrep@user/crashrep)
[22:06:16] *** Quits: nochi (~nochi@static.216.66.130.94.clients.your-server.de) (Quit: bye)
[22:06:19] *** Quits: Spydar007 (~spydar007@user/spydar007) (Quit: Quit)
[22:06:27] *** Joins: nochi (~nochi@2a01:4f8:10b:3074::4)
[22:06:35] *** Quits: brw (~bas@haring.bas.sh) (Read error: Connection reset by peer)
[22:06:42] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:06:53] <wiscii> # IFS=","; for i in word1,word2,word3; do printf '%s\n' "$i"; done
[22:06:54] *** Quits: xiaomiao (~purrrr@gentoo/developer/patrick) (Remote host closed the connection)
[22:06:55] <shbot> wiscii: word1,word2,word3
[22:07:03] *** Joins: brw (~bas@haring.bas.sh)
[22:07:14] <wiscii> # IFS=","; for i in word1,word2,word3; do printf '%s\n' "${i}123"; done
[22:07:15] <shbot> wiscii: word1,word2,word3123
[22:07:31] <p3rL> ${i}
[22:07:31] <p3rL> hmm
[22:07:42] <wiscii> # IFS=,; for i in word1,word2,word3; do printf '%s\n' "${i}123"; done
[22:07:43] <shbot> wiscii: word1,word2,word3123
[22:07:52] <p3rL> my way also usefull isn't ?
[22:07:54] <wiscii> # IFS=, for i in word1,word2,word3; do printf '%s\n' "${i}123"; done
[22:07:55] <shbot> wiscii: bash: syntax error near unexpected token `do'
[22:08:05] *** Quits: obiwahn (~heini@user/obiwahn) (Ping timeout: 252 seconds)
[22:08:05] *** Joins: xiaomiao (~purrrr@gentoo/developer/patrick)
[22:08:07] <wiscii> # IFS=',' for i in word1,word2,word3; do printf '%s\n' "${i}123"; done
[22:08:09] <shbot> wiscii: bash: syntax error near unexpected token `do'
[22:08:14] <wiscii> pfft
[22:08:22] <larryv> you don't really know when IFS matters, do you.
[22:08:25] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[22:08:33] <wiscii> don't use it mush
[22:08:42] *** Quits: simplicity (~yti@user/simplicity) (Ping timeout: 260 seconds)
[22:08:50] <wiscii> not liket that
[22:08:56] <p3rL> laris IFS=, = to split commas
[22:09:18] <p3rL> there is another way with "tr" something
[22:09:23] *** Joins: simplicity (~yti@user/simplicity)
[22:10:34] <wiscii> # for i in word1 word2 word3; do printf '%s\n' "${i}123"; done
[22:10:36] <shbot> wiscii: word1123
[22:10:36] <shbot> wiscii: word2123
[22:10:36] <shbot> wiscii: word3123
[22:10:38] *** Joins: Spydar007 (~spydar007@user/spydar007)
[22:11:22] <han-solo> $ printf '%s123\n' word1 word2 word3
[22:11:23] <p3rL> still not like that
[22:11:27] <han-solo> # printf '%s123\n' word1 word2 word3
[22:11:28] <shbot> han-solo: word1123
[22:11:29] <shbot> han-solo: word2123
[22:11:29] <shbot> han-solo: word3123
[22:12:04] <p3rL> word1:word1
[22:12:04] <p3rL> word1:word1123
[22:12:05] <han-solo> i forgot what was the trigger for "i want to do ________. ..."
[22:12:16] <OMGOMG> !want ?
[22:12:19] <OMGOMG> !have ?
[22:12:23] <Earnestly> !wayttd
[22:12:23] <greybot> What Are You Trying To Do?
[22:12:25] <Earnestly> Hm
[22:12:31] <emanuele6> # IFS=, evil_string=word1,word2,word3; set -f; for i in $evil_string; do printf '%s123\n' "${i}"; done
[22:12:32] <shbot> emanuele6: word1123
[22:12:32] <shbot> emanuele6: word2123
[22:12:32] <shbot> emanuele6: word3123
[22:13:08] <p3rL> # IFS=",";for i in $(echo "word1,word2,word3"); do echo -e "$i:$i\n$i:"$i"123"; done
[22:13:13] <shbot> p3rL: word1:word1
[22:13:13] <shbot> p3rL: word1:word1123
[22:13:13] <shbot> p3rL: etc... ( http://ix.io/3NvO )
[22:13:39] <Earnestly> !xy > han-solo
[22:13:39] <greybot> han-solo: http://mywiki.wooledge.org/XyProblem -- "I want to do X, but I'm asking how to do Y..."
[22:13:42] <Earnestly> This one?
[22:13:58] <han-solo> Earnestly: not quite, it had the _________, iirc
[22:14:00] <p3rL> han-solo can u do this with printf http://ix.io/3NvO
[22:14:08] *** Joins: xcm (~xcm@user/xcm)
[22:14:08] <han-solo> maybe i'm misremembering
[22:14:53] *** Quits: gabriele (~gabriele@user/gabriele) (Quit: Leaving)
[22:15:05] <emanuele6> p3rL: sure
[22:15:08] <Earnestly> # printf '%s\n%s123\n' word1 word1 word2 word2 word3 word3
[22:15:14] <shbot> Earnestly: word1
[22:15:14] <shbot> Earnestly: word1123
[22:15:14] <shbot> Earnestly: etc... ( http://ix.io/3NvP )
[22:15:19] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[22:15:20] <p3rL> still not like that
[22:15:20] <han-solo> p3rL: best to direct the questions at channel
[22:15:23] <Earnestly> Well, add more %s and stuff
[22:15:29] *** Joins: w1kl4s5 (~w1kl4s@user/w1kl4s)
[22:15:34] <p3rL> aa ok
[22:15:35] <Earnestly> Just needs more repeated arguments
[22:15:40] <p3rL> got it
[22:16:25] <Earnestly> But this comes across like a toy problem, often such contortions need either more care or can be approached in a better way given the right contect
[22:16:30] <Earnestly> context*
[22:16:37] <emanuele6> or even  printf '%s:%s\n' word{1..3}{,,,1234}
[22:16:44] <han-solo> Earnestly: got it
[22:16:46] <han-solo> !have
[22:16:46] <greybot> "I have ____ and I want ____." Fill in the blanks.
[22:16:51] <emanuele6> err   printf '%s:%s\n' word{1..3}{,,,123}
[22:16:53] *** Quits: xcm_ (~xcm@user/xcm) (Read error: Connection reset by peer)
[22:16:58] *** Quits: w1kl4s (~w1kl4s@user/w1kl4s) (Read error: Connection reset by peer)
[22:16:58] *** w1kl4s5 is now known as w1kl4s
[22:17:03] <Earnestly> han-solo: Ah, OMGOMG suggested that, but didn't execute it
[22:17:04] <han-solo> OMGOMG: thanks
[22:17:09] <han-solo> yeah, i was wondering
[22:17:14] <p3rL> i did't give input word1 word1 twice
[22:17:26] <p3rL> i just did once word1,word2,word3
[22:17:41] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[22:17:41] <Earnestly> p3rL: You asked how printf could do it, this is how printf would do it.  The question was silly, as was the answer
[22:17:57] *** Quits: potamides (~amnifiliu@46.183.103.8) (Ping timeout: 240 seconds)
[22:18:08] *** Joins: ph88^ (~ph88@ip5f5af71f.dynamic.kabel-deutschland.de)
[22:18:26] <p3rL> # IFS=",";for i in $(echo "word1,word2,word3"); do printf '%s:%s\n %s:{%s}123'; done
[22:18:32] <shbot> p3rL: :
[22:18:32] <shbot> p3rL:  :{}123:
[22:18:32] <shbot> p3rL: etc... ( http://ix.io/3NvR )
[22:18:37] <p3rL> rip
[22:18:57] <Earnestly> There's no need for this, neither the repeated example, or the use of IFS and wordsplitting, if you're going to use a for loop
[22:19:03] <ph88^> hello, i have this bash script in my build pipeline. The arguments in the script don't work as expected, i can not figure out why. Could somebody take a look ? https://bpa.st/FMPQ
[22:19:26] <wiscii> !check ph88^
[22:19:26] <checkbot> ph88^: Line 11: Assigning an array to a string! Assign as array, or use * instead of @ to concatenate. Line 4: jenkinsSshPrivateKeyFile appears unused. Verify use (or export if used externally). See https://shellcheck.net/?id=cb36566
[22:19:30] <Earnestly> ph88^: You can't assign $@ to a variable
[22:19:53] <Earnestly> If you want it as a string, you can use $*, but that isn't going to preserve the argument array
[22:20:04] <wiscii> p3rL: you might want to learn how %foo is not the same as $foo
[22:20:12] <emanuele6> you can, if you do it will just be a string that joins the argument by " "
[22:20:16] <p3rL> hmm
[22:20:31] <ph88^> Earnestly, it's being echo on line 12 so i assume assignment on line 11 worked
[22:20:35] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::4)
[22:20:37] <Earnestly> emanuele6: Is it?  $* is first character of IFS iirc, but not sure how $@ expands
[22:20:52] <Earnestly> ph88^: What do you expect line 11 to do?
[22:21:09] <emanuele6> when $@ expands in case or assignment it joins the arguments by space
[22:21:16] <ph88^> Earnestly, put $@ into all_arguments like assignment
[22:21:53] <Earnestly> ph88^: I'm not sure if you can be specific; but say your argument array is [a,b,c].  Do you expect all_assignments to be the literal string: "a b c"?
[22:21:59] <ph88^> Earnestly, i can remove line 11 and 12 and the script still doesn't work, this is not the root cause
[22:22:17] *** Quits: skered (~dereks@user/skered) (Ping timeout: 240 seconds)
[22:22:22] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[22:22:32] <ph88^> Earnestly, i don't have such specific expectation about line 12
[22:22:36] <emanuele6> what is the issue though?
[22:22:40] <larryv> ph88^: what's your problem exactly? what do you expect the output to be?
[22:22:51] <Earnestly> ph88^: There's no problem in the script, set -e is usually quite magical and should be avoided, I'm not sure if there's some obscure interaction going on within the pipeline that's triggering it
[22:23:01] <Earnestly> Like write failure.  What error are you seeing?
[22:23:06] <ph88^> emanuele6, see ouput line 4   host: build    this should be   host: swpo-test
[22:23:17] <ph88^> larryv, ^
[22:23:22] *** Quits: greentree (~greentree@pool-74-101-99-157.nycmny.fios.verizon.net) (Changing host)
[22:23:22] *** Joins: greentree (~greentree@user/greentree)
[22:23:29] <Earnestly> (Use of ${} around variables is also annoying and pointless)
[22:23:32] <emanuele6> ph88^: maybe you are running in zsh, not bash
[22:23:45] <Earnestly> emanuele6: Does zsh fail with this?
[22:23:47] <emanuele6> no, nevermind $host is not magical in zsh
[22:23:54] <Earnestly> Oh for that reason
[22:23:56] <emanuele6> i thought it could be like $path
[22:24:00] <ph88^> it's not just host ... all of the variables are not the right ones
[22:24:04] * wiscii didn't spot set -e before :'p
[22:24:04] <emanuele6> well, that is clearly the issue
[22:24:09] <Earnestly> ph88^: Oh sorry, I didn't noticed you included output
[22:24:28] <emanuele6> host is being expanded to the hostname
[22:24:31] <jelly> ph88^, entrypoint: swpo-test <- what you expect to be $1 was actually $6
[22:24:50] <emanuele6> ph88^: no, i see it
[22:24:56] <ph88^> jelly, yes exactly and i don't understand why
[22:24:56] <emanuele6> you are passing ****
[22:24:58] <emanuele6> that is a glob
[22:25:05] <jelly> ph88^, so the things you've hidden with **** were relevant, and more than a single parameter
[22:25:10] <emanuele6> pass '****'
[22:25:12] <Earnestly> ph88^: Is **** a redaction or are you literally supplying them?
[22:25:20] <ph88^> it's a redaction by the pipeline
[22:25:27] <ph88^> it's not what is being passed
[22:25:28] <emanuele6> it's clearly not redaction
[22:25:30] <emanuele6> it is a glob
[22:25:41] <jelly> ask the pipeline what's really there
[22:25:42] <Earnestly> ph88^: Do you have a file or directory called 'server' where it takes place?
[22:25:52] <emanuele6> you have    build   server   private   key.txt   in that directory
[22:25:57] <emanuele6> and **** is expanding to those
[22:25:58] *** Quits: andril (~andril@2601:586:8400:e4:a965:a318:3940:38c4) (Ping timeout: 250 seconds)
[22:26:00] <Earnestly> lol is the pipeline literally
[22:26:01] <ph88^> aah
[22:26:04] <Earnestly> That's amazing
[22:26:08] <larryv> well that's awful
[22:26:13] <Earnestly> I thought they just redacted for our sake
[22:26:17] <ph88^> i thought so ye
[22:26:24] <emanuele6> # touch build   server   private   key.txt; echo **** swpo-test
[22:26:25] <shbot> emanuele6: build key.txt private server swpo-test
[22:26:30] <emanuele6> # touch build   server   private   key.txt; echo '****' swpo-test
[22:26:31] <shbot> emanuele6: **** swpo-test
[22:28:13] <wiscii> lol
[22:28:15] <jelly> there's a hunter2 reference in here but I can find it
[22:28:46] <emanuele6> /msg nickserv identify emanuele6 ***********
[22:28:47] <wiscii> jelly: can -> can't ?
[22:28:58] <ph88^> ok thanks guys i will investigate what happened there
[22:28:58] <jelly> wiscii, correct
[22:29:01] *** Quits: jkwnki (~jkwnki@p2e5796b1.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[22:29:57] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[22:30:08] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[22:30:29] *** Joins: skered (~dereks@user/skered)
[22:30:48] *** Joins: pyzozord (pyzozord@user/pyzozord)
[22:31:21] *** Quits: skered (~dereks@user/skered) (Client Quit)
[22:32:02] <pyzozord> hello, is there an easy way to define to trigger the same completion for an alias as for the original command. As easy I mean not going deeply into the completion scripts to understand them
[22:32:21] <pyzozord> for example I want to alias k="kubernetes" and I would like for k to have all the same completion
[22:32:43] <pyzozord> oh sorry, k="kubectl" to be more precise
[22:33:12] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:34:46] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:35:19] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[22:35:23] *** Joins: jkwnki (~jkwnki@p2e5796b1.dip0.t-ipconnect.de)
[22:36:19] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[22:36:55] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:37:23] *** Quits: xcm (~xcm@user/xcm) (Remote host closed the connection)
[22:38:06] *** Joins: xcm (~xcm@user/xcm)
[22:38:23] *** Joins: Namarrgon (~Namarrgon@archlinux/op/Namarrgon)
[22:39:37] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[22:45:34] <osse> pyzozord: hmm, that seems to work out of the box here
[22:45:45] <osse> pyzozord: try alias ls=rofl and do rofl --<TAB>
[22:45:59] <osse> oops I mean alias rofl=ls
[22:46:25] *** Quits: liveacoustic (~adison@ip68-10-183-199.hr.hr.cox.net) (Quit: leaving)
[22:46:44] *** Joins: TheSilentLink_ (~TheSilent@user/thesilentlink)
[22:47:09] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[22:47:12] *** Quits: TheSilentLink (~TheSilent@user/thesilentlink) (Ping timeout: 250 seconds)
[22:47:29] *** Joins: Circuitsoft (uid393878@id-393878.lymington.irccloud.com)
[22:48:00] <pyzozord> it doesn't work for kubectl, maybe it works only for builtin commands
[22:48:09] *** TheSilentLink_ is now known as TheSilentLink
[22:48:26] *** Joins: irc_user (uid423822@id-423822.lymington.irccloud.com)
[22:48:29] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[22:49:25] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[22:49:42] <osse> ls is not builtin
[22:50:30] <emanuele6> pyzozord: run   complete -p kubectl
[22:50:45] <emanuele6> that will print a line that looks like    complete -F something kubectl
[22:50:57] <osse> pyzozord: oops, my bad. I'm wrong
[22:50:58] <emanuele6> run that command again, but replace kubectl with k
[22:51:22] *** Joins: obiwahn (~heini@user/obiwahn)
[22:51:54] <pyzozord> emanuele6: omg thanks so much
[22:52:42] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[22:53:36] <pyzozord> emanuele6: is there a trick like that but for alias kg="kubectl get"
[22:53:51] *** Joins: ozoned (odoood@gateway/vpn/protonvpn/odoood)
[22:53:57] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[22:54:41] *** Quits: Mo (~Mo@2a01:c23:94f1:7f00:2e44:fdff:fe2e:d02c) (Ping timeout: 268 seconds)
[22:55:04] *** Joins: liveacoustic (~adison@user/liveacoustic)
[22:55:57] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::4) (Ping timeout: 240 seconds)
[22:57:16] *** Quits: liveacoustic (~adison@user/liveacoustic) (Client Quit)
[22:57:32] *** Quits: djph (~dpurgert@cpe-107-10-235-152.neo.res.rr.com) (Ping timeout: 240 seconds)
[22:57:55] <emanuele6> i don't know
[22:59:10] <emanuele6> maybe you could hack something with _kubectl_get () { ((++COMP_CWORD));COMP_WORDS=( "${COMP_WORDS[@]:1:1}" enable "${COMP_WORDS[@]:2}" ); _kubectl "$@" ;}   (assuming the completion function for kubectl was _kubectl)  complete -F _kubectl_get kg
[22:59:20] <emanuele6> not sure if that is reliable, just an idea
[22:59:36] <emanuele6> maybe there is actually a cleaner way, i don't know much about bash completion
[23:01:24] <pyzozord> emanuele6: complete -p kubectl doesn't seem to work before I at least one trigger the completion on kubectl
[23:01:39] <geirha> it's dynamically loaded
[23:02:10] *** Joins: djph (~dpurgert@cpe-107-10-235-152.neo.res.rr.com)
[23:02:16] <pyzozord> I would like to define these aliases (and completion) in bashrc / bash_aliases, is that possible?
[23:02:30] *** Joins: liveacoustic (~adison@user/liveacoustic)
[23:02:48] *** Joins: djph_ (~dpurgert@cpe-107-10-235-152.neo.res.rr.com)
[23:02:57] <geirha> when you try to complete kubectl the first time, it looks through a bunch of bash-completion dirs, and if it finds a matching file, it sources it
[23:03:04] <geirha> so you can manually source that in your .bashrc
[23:03:57] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[23:04:41] <pyzozord> /usr/share/bash-completion/bash_completion has over 2000 lines, I'm not good enough with bash to find the right thing to figure out how to trigger the load of a specific completion
[23:05:04] <geirha> it's likely not in that file, but a separate file
[23:05:28] <pyzozord> I think that file loads the other files, I suspect so
[23:05:30] <geirha> I don't use bash-completion myself, so I don't know what directories it tries by default
[23:05:49] <geirha> but I'd start by looking under /etc/bash-completion or so
[23:06:06] <llua> it has to implement autoloadable functions, since bash lacks it itself
[23:06:27] <geirha> complete -p -D   will show the autoloader
[23:06:42] *** Quits: djph (~dpurgert@cpe-107-10-235-152.neo.res.rr.com) (Ping timeout: 250 seconds)
[23:06:46] <pyzozord> I found __load_completion() inside that file, maybe that's it
[23:07:05] <pyzozord> it is invoked in the same file like this __load_completion "$cmd"
[23:07:14] <phy1729> I'd probably just symlink it and move on
[23:07:43] <geirha> so you can probably run __load_completion kubectl manually in .bashrc (after it has sourced the initial bash-completion files) to force load it
[23:07:50] <llua> but, aliases~
[23:08:02] <llua> i need mah aliases
[23:08:20] *** Joins: Mo (~Mo@2a01:c22:89a2:b100:2e44:fdff:fe2e:d02c)
[23:08:53] <emanuele6> (s/enable/get/ in the function i sent before, i was testing it with systemctl)
[23:12:00] <pyzozord> so I have this now "$(complete -p kubectl)" | sed -e 's/kubectl$/k/'
[23:12:14] <pyzozord> how do I make it run now?
[23:12:14] <emanuele6> no, that would obviously not work
[23:12:19] <ph88^> what is the difference between  echo "11: $11"  and  echo "11: ${11}"   ?
[23:12:19] <emanuele6> just type it literally
[23:12:28] <emanuele6> complete -F _kubectl k
[23:12:56] <Soliton> ph88^: one expands argument one and the other argument 11.
[23:13:05] <pyzozord> I want to do the following "grab output of complete -k kubectl, replace last word kubectl with k, run the new command"
[23:13:06] <ph88^> ok
[23:13:30] <emanuele6> !$n
[23:13:30] <greybot> Handling positional parameters (arguments on commandline): https://wiki.bash-hackers.org/scripting/posparams
[23:13:30] <geirha> pyzozord: don't over-engineer it
[23:14:09] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[23:14:21] <pyzozord> I want to abstract it away because I don't know how complete works, and I don't want to hardcode it
[23:14:56] <pyzozord> I want to implelemnt the following logic /literally/ "whatever kubectl has for completion, but replace it with k"
[23:15:02] *** Quits: dreamon (~dreamon@p54b1472c.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[23:15:39] <pyzozord> I tried with eval "$(complete -p kubectl)" | sed -e 's/kubectl$/k/' but that doesn't seem to work
[23:16:09] *** Quits: skylite_ (~skylite@2E6B2CD6.catv.pool.telekom.hu) (Quit: bye...)
[23:16:29] *** Joins: skylite (~skylite@2E6B2CD6.catv.pool.telekom.hu)
[23:16:40] <geirha> you'd have to the sed inside $()
[23:16:54] <geirha> but that assumes that kubectl is the last word it outputs
[23:17:04] <pyzozord> yes, that assumption is ok
[23:17:10] *** Joins: skered (~dereks@user/skered)
[23:17:35] <pyzozord> ok so I have this now, and this works but it's ugly, is there any way to make it cleaner? eval $(echo "$(complete -p kubectl)" | sed -e 's/kubectl$/k/')
[23:17:51] <emanuele6> why are you doing that?
[23:17:56] <geirha> why would you add echo?!
[23:17:57] <emanuele6> echo "$(cmd)" | sed
[23:18:03] <emanuele6> why?
[23:18:21] <geirha> eval "$(cmd | sed)"
[23:20:52] <justsomeguy> pyzozord: If this is only for interactive usesage, maybe it would be nicer to do this with fish shell. alias k kubectl will automatically wrap k with kubectls completion scripts.
[23:20:53] <pyzozord> without echo it executes that comand
[23:21:08] <pyzozord> justsomeguy: I'm intentionally sticking with just bash
[23:21:14] <justsomeguy> pyzozord: Gotcha.
[23:21:22] <emanuele6> pyzozord: no
[23:21:38] <pyzozord> eval $("$(complete -p kubectl)" | sed -e 's/kubectl$/k/')
[23:21:47] <Soliton> kinda weird how you don't know how completions work but know exactly what transformations on a completion command are safe.
[23:21:48] <pyzozord> produces complete -o default -F __start_kubectl kubectl: command not found
[23:21:55] <geirha> ffs
[23:22:05] *** Joins: haliucinas (~haliucina@5.20.153.21)
[23:22:11] <geirha> eval "$(complete -p kubectl | sed -e 's/kubectl$/k/')"
[23:23:02] <pyzozord> ok thanks
[23:23:20] <emanuele6> your was wrong in many ways
[23:23:33] <emanuele6> if you are going to use eval, at least make it somewhat safe
[23:24:46] *** Joins: potamides (~amnifiliu@2003:a:270f:c400:28d8:e046:7d92:3970)
[23:25:37] *** Quits: ouestbillie (~gallup@bl16-179-173.dsl.telepac.pt) (Ping timeout: 240 seconds)
[23:27:13] *** Joins: dreamon (~dreamon@p54b1472c.dip0.t-ipconnect.de)
[23:27:23] *** Joins: Andrew (andrew@andrewyu.org)
[23:27:41] *** Joins: ouestbillie (~gallup@193.138.218.214)
[23:27:50] *** Joins: Adoi (~Adoi@user/adoi)
[23:28:02] <pyzozord> does eval run things in current shell?
[23:28:35] <Andrew> I've got a variable $P=home/andrew/stuff, I want to turn it into $P=andrew/stuff, namely striping until the first slash... possible?
[23:28:36] *** Joins: bluedust (~bluedust@103.165.167.52)
[23:28:43] <yitz> pyzozord: yes
[23:28:51] <pyzozord> I am trying to make a simple shell script now complete alias that automates for me defining an alias and loading completion for it
[23:28:55] <yitz> !pe > Andrew
[23:28:55] <greybot> Andrew: Parameter Expansion expands parameters: "$foo", "$1". You can use it to perform string or array operations: "${file%.mp3}", "${0##*/}", "${files[@]: -4}". They should *always* be quoted. See: http://mywiki.wooledge.org/BashFAQ/073 and "Parameter Expansion" in man bash. Also see http://wiki.bash-hackers.org/syntax/pe.
[23:28:55] <pyzozord> and I'm getting __load_completion: command not found
[23:29:01] <Andrew> Oh, god
[23:29:17] *** Quits: pieguy128_ (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-188.dsl.bell.ca) (Ping timeout: 240 seconds)
[23:29:21] <yitz> !completion > pyzozord
[23:29:21] <greybot> pyzozord: The "elders" in this channel mostly don't use tab completion, so can't help you, but a few of us do, so you may need to wait a while for help. See also !completion2 !completion3 and !completion4
[23:29:32] *** timm is now known as f00
[23:30:00] *** Quits: XV8 (~XV8@2601:5cb:c001:50:d0cb:b834:298c:b12d) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:30:08] <pyzozord> ok that's too much for now
[23:30:09] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[23:30:09] <emanuele6> p=/${p#*/}
[23:30:10] <pyzozord> thanks for help
[23:30:11] *** Parts: pyzozord (pyzozord@user/pyzozord) ()
[23:30:16] *** Quits: Kruppt (~Kruppt@50-111-37-142.drhm.nc.frontiernet.net) (Quit: Leaving)
[23:30:54] *** Joins: wwallace (~afernande@63.240.73.102)
[23:33:34] *** Joins: XV8 (~XV8@2601:5cb:c001:50:7138:38eb:1e16:f288)
[23:33:34] *** Quits: bluedust (~bluedust@103.165.167.52) (Ping timeout: 250 seconds)
[23:36:57] *** Joins: n4dir (~user@mue-88-130-56-163.dsl.tropolys.de)
[23:37:20] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-52-65-93-194-105.dsl.bell.ca)
[23:37:47] *** Joins: bluedust (~bluedust@103.165.167.52)
[23:38:09] *** Quits: ozoned (odoood@gateway/vpn/protonvpn/odoood) (Ping timeout: 256 seconds)
[23:38:17] *** Quits: XV8 (~XV8@2601:5cb:c001:50:7138:38eb:1e16:f288) (Ping timeout: 240 seconds)
[23:40:50] <wwallace> !password
[23:40:50] <greybot> my password is 1 2 3 4 5, but you knew that already. It's on your lunchbox!
[23:41:23] *** Quits: wwallace (~afernande@63.240.73.102) (Quit: Konversation terminated!)
[23:42:37] <wiscii> Andrew: it's easy :)
[23:42:45] <Andrew> Yup
[23:42:50] <wiscii> ok
[23:42:55] <Andrew> Thanks emanuele6 and yitz and wiscii
[23:42:58] <irc_user> !completion2
[23:42:58] <greybot> the completion facility is built-in, but it needs to be told the appropriate details for each command. The *package* called "bash-completion" is a grab-bag of such definitions, of rather varying quality. But you can simply put your own definitions in your .bashrc to override any faulty or missing ones
[23:43:09] <irc_user> Why don't the "elders" use tab completion?
[23:43:17] *** Joins: wwallace (~afernande@63.240.73.102)
[23:43:39] <Soliton> where does it say that?
[23:43:52] <irc_user> !completion > Soliton
[23:43:53] <greybot> Soliton: The "elders" in this channel mostly don't use tab completion, so can't help you, but a few of us do, so you may need to wait a while for help. See also !completion2 !completion3 and !completion4
[23:44:03] <wiscii> i think geirha denied using it
[23:44:07] *** Joins: lotharn|2 (~kvirc@2607:fb90:4a28:8c21:5836:9dbf:4083:4abd)
[23:44:15] <ph88^> maybe silly question but how can i copy back from https://www.shellcheck.net/ after i did apply fixes ? when i select all i just get the last line
[23:44:19] <Soliton> probably meant to say bash-completion instead.
[23:44:24] *** Joins: wwilliam (~afernande@63.240.73.102)
[23:44:24] *** Quits: wwilliam (~afernande@63.240.73.102) (Changing host)
[23:44:24] *** Joins: wwilliam (~afernande@user/wwilliam)
[23:44:25] *** Joins: goldfish (~goldfish@user/goldfish)
[23:44:28] <irc_user> Ohhh, I suspected something like that, thanks Soliton
[23:44:33] <Soliton> i'm sure everyone uses tab completion.
[23:44:41] *** Quits: wwallace (~afernande@63.240.73.102) (Client Quit)
[23:44:54] *** Joins: wwallace (~afernande@63.240.73.102)
[23:45:03] *** Quits: wwilliam (~afernande@user/wwilliam) (Client Quit)
[23:45:28] <irc_user> ph88^: Why not download shellcheck instead?
[23:46:01] <wiscii> ph88^: the interactive box on shellcheck.net is a little annoying, i think you have to manually select each line
[23:46:20] <ph88^> ok i will download the tool
[23:46:37] *** Quits: lotharn (~kvirc@2607:fb90:4a3f:9683:3405:62a:6359:24c1) (Ping timeout: 240 seconds)
[23:46:38] <irc_user> cmd+a is working for me, but yeah downloading it is a better option imo
[23:46:53] <wiscii> make sure to get the right version and keep it upp to date ;-)
[23:46:54] <sixwheeledbeast> You did edits in the browser window?
[23:47:16] <wiscii> i think he diid sixwheeledbeast
[23:47:26] *** Joins: yustin (~yustin@user/yustin)
[23:47:42] <sixwheeledbeast> You can right click in the window and select all, at least on my broswer
[23:48:46] <wiscii> i find "select all" is "not portable" ..
[23:49:45] *** Joins: piotr (~piotr@095160035009.warszawa.vectranet.pl)
[23:49:49] <ph88^> how do i get the shellcheck tool to do what the website is offering "apply fixes" ?
[23:50:08] <wiscii> shellcheck doesn't do that
[23:50:40] <ph88^> the website offers it
[23:50:46] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.3)
[23:50:46] <wiscii> omg .. if shellcheck applied fixes !!! x'P
[23:51:40] <wiscii> where does it say "shellcheck applies fixes" ?
[23:52:28] <ph88^> when you go to the website https://www.shellcheck.net/ where you enter the script, there is in the top right: apply fixes, report bug, mobile paste
[23:52:43] <Earnestly> wiscii: It can generate a diff
[23:52:47] <Earnestly> And then you can apply that diff
[23:53:17] <Earnestly> ph88^: So that's what you can do, but it's all heuristics (necessarily), so apply with diligence
[23:53:45] *** Joins: ZAJDAN (~ZAJDAN@chladek-jar.zno.skynet.cz)
[23:53:49] <ph88^> Earnestly, how can it generate the diff ? or is that the default output ?
[23:53:54] <Earnestly> ph88^: man shellcheck
[23:53:59] <wiscii> lol .. i never actually noticed that before ! .. sort of cool
[23:54:01] *** Quits: TheSilentLink (~TheSilent@user/thesilentlink) (Ping timeout: 256 seconds)
[23:54:03] <piotr> I would not trust such tools
[23:54:07] <jelly> a diff-u-cult proposition
[23:54:11] * jelly hides
[23:54:14] <Earnestly> piotr: gcc and such do this now too
[23:54:44] <ph88^> Earnestly, man command does not work on windows
[23:54:52] *** Quits: piotr (~piotr@095160035009.warszawa.vectranet.pl) (Changing host)
[23:54:52] *** Joins: piotr (~piotr@user/filystyn)
[23:54:52] <ph88^> well it's running but erroring out
[23:54:55] <larryv> shellcheck --help then
[23:54:55] <osse> maybe --help does
[23:54:56] *** piotr is now known as FIlystyn
[23:55:04] <FIlystyn> you can talk here not loged in O.o
[23:55:08] <Earnestly> ph88^: That's awful
[23:55:08] *** Quits: wwallace (~afernande@63.240.73.102) (Changing host)
[23:55:08] *** Joins: wwallace (~afernande@user/wwilliam)
[23:55:09] *** wwallace is now known as wwilliam
[23:55:09] <ph88^> --help already read this nothing about diff or fixes there
[23:55:24] <Earnestly> ph88^: Here is man: https://0x0.st/oodM.txt
[23:55:33] <ph88^> thanks !
[23:55:35] <Earnestly> ph88^: And yes, --help does mention diff
[23:55:48] <wiscii> i don't think `shellcheck` can apply fixes, only the website
[23:56:07] <Earnestly> wiscii: Sure, not shellcheck's job.  patch(1) exists
[23:56:18] <ph88^> Earnestly, oh sorry overlooked
[23:56:27] <FIlystyn> compiler warnings can also be quite missinformating
[23:56:41] <Earnestly> ph88^: Fair enough, but lack of man is horrible, I'd try fix that for other things if you can
[23:56:57] <FIlystyn> worth to look at but not trust too much
[23:56:57] *** Joins: TheSilentLink (~TheSilent@user/thesilentlink)
[23:57:29] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[23:58:17] *** Quits: Error (~err@user/error) (Quit: ZNC 1.8.2 - https://znc.in)
[23:59:36] <ph88^> should patch files from diff have   diff extension or patch extension ?
