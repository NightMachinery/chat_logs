[01:02:24] *** Quits: tux0r (~tux0r@2a03:4000:34:5e:281e:e1ff:fe28:c3b5) (Ping timeout: 272 seconds)
[01:05:01] *** Joins: tux0r (~tux0r@2a03:4000:34:5e:281e:e1ff:fe28:c3b5)
[01:59:14] *** Quits: irek (~irek@public-gprs170979.centertel.pl) (Ping timeout: 252 seconds)
[02:06:50] *** Joins: ngz (~ngz@user/ngz)
[02:13:33] *** Joins: irek (~irek@public-gprs170979.centertel.pl)
[02:32:20] *** Quits: ngz (~ngz@user/ngz) (Ping timeout: 272 seconds)
[02:49:19] *** Quits: bremner (~bremner@notmuch/developer/bremner) (Remote host closed the connection)
[03:12:38] *** Joins: bremner (~bremner@notmuch/developer/bremner)
[04:09:06] *** Quits: irek (~irek@public-gprs170979.centertel.pl) (Ping timeout: 265 seconds)
[06:46:25] *** Quits: tux0r (~tux0r@2a03:4000:34:5e:281e:e1ff:fe28:c3b5) (Ping timeout: 250 seconds)
[06:47:23] *** Joins: tux0r (~tux0r@2a03:4000:34:5e:281e:e1ff:fe28:c3b5)
[07:55:33] *** Joins: irek (~irek@public-gprs170979.centertel.pl)
[09:44:59] *** Quits: irek (~irek@public-gprs170979.centertel.pl) (Ping timeout: 258 seconds)
[10:07:37] *** Joins: irek (~irek@188.117.157.11)
[16:25:10] *** Quits: irek (~irek@188.117.157.11) (Ping timeout: 272 seconds)
[16:54:25] *** Joins: irek (~irek@public-gprs174618.centertel.pl)
[19:21:29] *** Quits: fsbot` (~fsbot@69.90.132.173) (Remote host closed the connection)
[19:23:54] *** Joins: fsbot (~fsbot@69.90.132.173)
[19:41:28] *** Joins: deego (~user@user/deeo)
[20:25:56] *** Quits: irek (~irek@public-gprs174618.centertel.pl) (Remote host closed the connection)
[20:26:15] *** Joins: irek (~irek@public-gprs174618.centertel.pl)
[20:57:19] *** Joins: catern (~sbaugh@2604:2000:8fc0:b:a9c7:866a:bf36:3407)
[20:59:15] <catern> maybe this is a local issue, but while (for example) file:///bin works fine (a file link to an existing file), file:///does/not/exist has an error and, worse, file://does/not/exist hangs emacs
[21:16:07] <wasamasa> what do you mean, hang?
[21:17:02] <bremner> certainly configuration dependent.
[21:17:10] <wasamasa> if I navigate to those links with SHIFT-TAB and hit RET, nothing happens
[21:17:38] <wasamasa> except for file:///bin, that opens a directory listing in qutebrowser
[21:20:13] <catern> interesting
[21:21:17] <catern> so it's local then, and file:/// is handled by whatever url-opener-thing I have configured
[21:21:51] <catern> wasamasa: by hang I mean it's in some Lisp loop or something and is non-responsive unless I keyboard-quit
[21:22:00] <wasamasa> ,tdoq
[21:22:09] <wasamasa> fsbot: tdoq
[21:22:44] <wasamasa> sigh
[21:23:41] <catern> stuck in url-retrieve-synchronously("file://does/not/exist")
[21:23:51] <wasamasa> ok and what's the surrounding context?
[21:23:57] <wasamasa> are you using eww as your browser?
[21:24:13] <catern> yes, browse-url-emacs
[21:24:38] <catern> kind of weird since it looks like that has a handler specifically for file://, hmm
[21:26:05] <catern> ah: (and (equal (url-type parsed) "file") (file-directory-p (url-filename parsed)))
[21:27:37] <catern> if the file doesn't exist it falls back on url-retrieve-synchronously (indirectly)
[21:27:44] <catern> pretty annoying
[21:27:54] <catern> seems buggy
[21:28:57] <catern> (well, also if the file is not a directory. either way, seems lame)
[21:32:07] <wasamasa> why even retrieve anything if it's a file
[21:41:43] <catern> this is interesting, I didn't know about the url-handlers library
[21:42:18] <catern> which I guess is like TRAMP but for verbatim URLs matched by url-handler-regexp
[21:42:45] <catern> browse-url-emacs is kind amusing, it does:
[21:42:58] <catern> (let ((file-name-handler-alist (cons (cons url-handler-regexp 'url-file-handler) file-name-handler-alist))) (find-file url))
[21:46:02] <catern> so I feel like file:// should probably not be in url-handler-regexp, hm... because it's not anything like the other options
[21:46:46] <catern> the file:// just needs to be stripped and then the lookup in file-name-handler-alist should be repeated
[21:51:06] <catern> ah obvious in retrospect, I'll just have url-file-handler do that
[21:54:54] <catern> cool cool cool I can't do that because there's no common argument for the filename in all the different operations handled by file-name-handlers
[23:08:36] *** Quits: tux0r (~tux0r@2a03:4000:34:5e:281e:e1ff:fe28:c3b5) (Ping timeout: 272 seconds)
[23:09:31] *** Joins: tux0r (~tux0r@2a03:4000:34:5e:281e:e1ff:fe28:c3b5)
