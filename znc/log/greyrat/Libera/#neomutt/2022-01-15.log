[00:06:57] *** Quits: bsd4me (~IceChat95@user/bsd4me) (Quit: He who laughs last, thinks slowest)
[00:07:04] *** Joins: blaub (~blaub@194-208-201-025.tele.net)
[00:41:08] *** Quits: blaub (~blaub@194-208-201-025.tele.net) (Quit: WeeChat 3.4)
[01:40:10] *** Joins: ericam (~ericam@pool-98-113-135-30.nycmny.fios.verizon.net)
[01:41:21] <ericam> Hey all, I know this is probably a question that gets asked a lot, but Google hasn't been super helpful.  Is there a way for me to tell Neomutt to always pipe the entire message through an external program before sending it? I would do this with sendmail, but I'm setting up neomutt using oauth2 on Google accounts, so I can't use regular sendmail/msmtp (afaik).
[01:56:19] *** Joins: _rittchen (~rittchen@gateway/tor-sasl/rittchen)
[01:58:51] <flatcap> hi ericam.  no.  what are you trying to do?
[01:59:24] *** Quits: rittchen (~rittchen@gateway/tor-sasl/rittchen) (Ping timeout: 276 seconds)
[02:06:21] *** Joins: rgrinberg (~textual@2806:101e:7:4889:70e9:6f65:e573:10f5)
[02:07:09] <ericam> flatcap: I want to compose my plaintext email in a lightweight markup language and then have it be processed into HTML and put into a multipart body. I know there are macros for this but I don't want to have to run them every time.
[02:12:08] <flatcap> ah, a common request...
[02:12:39] <flatcap> just this morning I committed dcpurton's Compose improvements...
[02:12:54] <flatcap> that allow much more manipulation of attachments, grouping etc
[02:14:35] <flatcap> you'll probably still need some scripting/macro magic, but it should be easier
[02:14:58] <flatcap> if you're technical you can build neomutt from master.  if not, you'll have to wait a few weeks for a new release
[02:32:23] *** Quits: rgrinberg (~textual@2806:101e:7:4889:70e9:6f65:e573:10f5) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:38:12] *** Joins: pekman (~pekman@user/pekman)
[02:39:30] *** Joins: gabriel1_ (~gabriel1@37.165.234.241)
[02:39:52] *** Joins: rgrinberg (~textual@2806:101e:7:4889:70e9:6f65:e573:10f5)
[02:42:15] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Ping timeout: 256 seconds)
[02:46:00] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[02:51:15] *** Quits: rgrinberg (~textual@2806:101e:7:4889:70e9:6f65:e573:10f5) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:04:33] <ericam> Oh that's really nice! I'll check it out. I am technical, so I'll try building it tomorrow (or maybe Tuesday when I'm back at work).
[03:06:38] *** Quits: gabriel1_ (~gabriel1@37.165.234.241) (Remote host closed the connection)
[03:07:35] *** Quits: kzak (~kzak@nat-37.starnet.cz) (Ping timeout: 256 seconds)
[03:07:36] <flatcap> great.  let us know how you get on
[03:07:55] <flatcap> we've given it a good thrashing, but there may still be some quirks :-)
[03:08:10] <ericam> Also, during setup, I was finding that subject lines would get wrapped at the exact character limit, even though smart_wrap was on
[03:08:48] <flatcap> hmm... sounds like an off-by-one type of error
[03:09:21] * flatcap builds ...
[03:09:25] <ericam> In the code, or in my configuration file?
[03:11:45] <flatcap> hmm... it doesn't seem to be smart when it comes to the headers
[03:12:34] <flatcap> yes, $smart_wrap only applies to the message text
[03:16:13] <flatcap> the headers' widths are set when the email is first displayed since there are special rules for wrapping headers
[03:17:29] <flatcap> I've made a note to think about it
[03:17:57] <ericam> Ty! It's not a huge deal but it's a little annoying
[03:18:18] <flatcap> agreed. it's a bit clumsy
[03:42:17] *** Joins: dcpurton (~dcpurton@193-115-93-249.tpgi.com.au)
[04:23:03] <ericam> flatcap: Hmm... if someone submitted a PR that added a preprocessing feature, such that just before a message was sent, it could be rendered into the sendmail format and sent through an external program, even when using the internal SMTP functionality... would you merge it?  Or at least consider it on its merits, assuming it was good quality code etc.
[04:27:08] <ericam> The reason I suggest that approach is that the Python standard library can read that format of messages, so people could pretty easily do whatever they wanted with it with a common scripting language
[04:31:58] *** Quits: dcpurton (~dcpurton@193-115-93-249.tpgi.com.au) (Quit: dcpurton)
[04:43:14] *** Joins: rgrinberg (~textual@2806:101e:7:4889:70e9:6f65:e573:10f5)
[04:59:58] *** Joins: nicolasbock_ (sid352851@id-352851.lymington.irccloud.com)
[04:59:59] *** Joins: fstab_ (sid501428@id-501428.uxbridge.irccloud.com)
[05:00:18] *** Joins: jsatk__ (sid304796@id-304796.helmsley.irccloud.com)
[05:02:23] *** Joins: rossyrg_ (~rossyrg@cordelia.uberspace.de)
[05:02:40] *** Joins: riesebie_ (~riesebie@HSI-KBW-078-042-175-253.hsi3.kabel-badenwuerttemberg.de)
[05:05:39] *** Joins: jindraj_ (~jindraj@neomutt/jindraj)
[05:05:43] *** Joins: guyzmal (~guyzmo@2001:bc8:6010:211:5054:ff:fe00:e941)
[05:09:04] *** Quits: nicolasbock (sid352851@id-352851.lymington.irccloud.com) (Ping timeout: 240 seconds)
[05:09:04] *** Quits: fstab (sid501428@id-501428.uxbridge.irccloud.com) (Ping timeout: 240 seconds)
[05:09:05] *** Quits: jsatk_ (sid304796@id-304796.helmsley.irccloud.com) (Ping timeout: 240 seconds)
[05:09:05] *** Quits: rossyrg (~rossyrg@cordelia.uberspace.de) (Ping timeout: 240 seconds)
[05:09:05] *** Quits: epony (~epony@user/epony) (Ping timeout: 240 seconds)
[05:09:05] *** Quits: riesebie (~riesebie@user/riesebie) (Ping timeout: 240 seconds)
[05:09:06] *** Quits: mvdan (~mvdan@2001:470:69fc:105::63d) (Ping timeout: 240 seconds)
[05:09:06] *** Quits: dngray[m] (~dngray@user/dngray) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: peb (~PEB@debian/peb) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: guyz (~guyzmo@2001:bc8:6010:211:5054:ff:fe00:e941) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: jindraj (jindraj@neomutt/jindraj) (Ping timeout: 240 seconds)
[05:09:07] *** nicolasbock_ is now known as nicolasbock
[05:09:45] *** Joins: epony (~epony@user/epony)
[05:15:49] *** Quits: noex (~null@user/noex) (Ping timeout: 256 seconds)
[05:17:42] *** Joins: noex (~null@user/noex)
[05:20:11] *** Joins: mvdan (~mvdan@2001:470:69fc:105::63d)
[05:21:04] *** Joins: dngray[m] (~dngray@user/dngray)
[05:22:05] *** Joins: vysn (~vysn@user/vysn)
[05:32:16] *** Quits: maetthew (~maetthew@user/maetthew) (Quit: ZNC 1.8.2 - https://znc.in)
[05:34:53] *** Joins: maetthew (~maetthew@c188-150-159-232.bredband.tele2.se)
[05:34:53] *** Quits: maetthew (~maetthew@c188-150-159-232.bredband.tele2.se) (Changing host)
[05:34:53] *** Joins: maetthew (~maetthew@user/maetthew)
[05:51:26] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[05:57:47] *** Quits: noex (~null@user/noex) (Quit: :q!)
[06:00:44] *** Joins: noex (~null@user/noex)
[06:15:09] *** Quits: rgrinberg (~textual@2806:101e:7:4889:70e9:6f65:e573:10f5) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:19:56] *** Quits: nyah (~nyah@94.6.71.219) (Quit: leaving)
[07:03:18] *** Quits: Pali (~pali@user/pali) (Ping timeout: 250 seconds)
[07:06:42] *** Joins: bsd4me (~IceChat95@user/bsd4me)
[07:11:51] *** Joins: amigan (dramoray@dtvax.dynatron.me)
[07:17:24] *** Joins: weirdsmiley (~weirdsmil@203.122.10.222)
[07:20:34] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.3)
[07:21:16] *** Joins: vysn (~vysn@user/vysn)
[07:21:49] *** Quits: vysn (~vysn@user/vysn) (Client Quit)
[07:35:06] *** Joins: vysn (~vysn@user/vysn)
[07:37:24] *** Quits: _rittchen (~rittchen@gateway/tor-sasl/rittchen) (Ping timeout: 276 seconds)
[07:39:29] *** Joins: _rittchen (~rittchen@gateway/tor-sasl/rittchen)
[08:00:12] *** Joins: rgrinberg (~textual@2806:101e:7:4889:70e9:6f65:e573:10f5)
[08:30:45] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 256 seconds)
[08:50:02] *** Quits: _rittchen (~rittchen@gateway/tor-sasl/rittchen) (Remote host closed the connection)
[08:50:27] *** Joins: _rittchen (~rittchen@gateway/tor-sasl/rittchen)
[09:24:09] *** Quits: pekman (~pekman@user/pekman) (Quit: pekman)
[09:29:33] *** Joins: rsaavedra (~rodrigo@user/rsaavedra)
[09:34:26] *** Joins: dcpurton (~dcpurton@193-115-93-249.tpgi.com.au)
[09:37:58] *** Joins: jason1 (~Sogens@gateway/vpn/pia/sogens)
[09:39:04] *** Quits: sbach (~sbach@user/sbach) (Read error: Connection reset by peer)
[09:39:06] *** Quits: jason1 (~Sogens@gateway/vpn/pia/sogens) (Client Quit)
[09:39:15] *** Joins: sogens (~Sogens@gateway/vpn/pia/sogens)
[09:40:16] *** Quits: bsd4me (~IceChat95@user/bsd4me) (Quit: Do fish get thirsty?)
[09:41:41] *** Joins: sbach (~sbach@user/sbach)
[09:41:51] *** Quits: rsaavedra (~rodrigo@user/rsaavedra) (Quit: WeeChat 3.4)
[09:46:06] *** Joins: just1602_ (~just1602@199.58.80.143)
[09:46:06] *** Quits: just1602 (~just1602@199.58.80.143) (Read error: Connection reset by peer)
[09:46:40] *** Quits: sogens (~Sogens@gateway/vpn/pia/sogens) (Ping timeout: 250 seconds)
[09:47:07] *** Joins: sogens (~Sogens@pa49-182-138-25.pa.qld.optusnet.com.au)
[09:54:03] *** Quits: sogens (~Sogens@pa49-182-138-25.pa.qld.optusnet.com.au) (Ping timeout: 256 seconds)
[09:55:47] *** Joins: sogens (~Sogens@gateway/vpn/pia/sogens)
[10:02:53] *** Joins: sogens1 (~Sogens@pa49-182-138-25.pa.qld.optusnet.com.au)
[10:04:15] *** Quits: sogens (~Sogens@gateway/vpn/pia/sogens) (Ping timeout: 256 seconds)
[10:16:17] *** Quits: dcpurton (~dcpurton@193-115-93-249.tpgi.com.au) (Quit: dcpurton)
[10:42:32] *** Quits: sogens1 (~Sogens@pa49-182-138-25.pa.qld.optusnet.com.au) (Quit: WeeChat 3.4)
[10:43:46] *** Joins: sogens (~Sogens@pa49-182-138-25.pa.qld.optusnet.com.au)
[10:47:45] *** Joins: dcpurton (~dcpurton@193-115-93-249.tpgi.com.au)
[10:49:02] *** Quits: weirdsmiley (~weirdsmil@203.122.10.222) (Ping timeout: 240 seconds)
[10:49:56] *** Joins: weirdsmiley (~weirdsmil@203.122.10.222)
[10:51:50] *** Quits: rgrinberg (~textual@2806:101e:7:4889:70e9:6f65:e573:10f5) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:54:02] *** Quits: sogens (~Sogens@pa49-182-138-25.pa.qld.optusnet.com.au) (Ping timeout: 240 seconds)
[10:55:02] *** Quits: dcpurton (~dcpurton@193-115-93-249.tpgi.com.au) (Quit: dcpurton)
[10:55:54] *** Joins: sogens (~Sogens@gateway/vpn/pia/sogens)
[11:06:35] *** Quits: sogens (~Sogens@gateway/vpn/pia/sogens) (Ping timeout: 256 seconds)
[11:08:08] *** Joins: sogens (~Sogens@gateway/vpn/pia/sogens)
[11:16:11] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[11:36:43] *** Quits: epony (~epony@user/epony) (Quit: QUIT)
[11:38:42] *** Joins: epony (epony@user/epony)
[11:56:27] *** Quits: sogens (~Sogens@gateway/vpn/pia/sogens) (Ping timeout: 256 seconds)
[11:58:29] *** Joins: sogens (~Sogens@pa49-182-138-25.pa.qld.optusnet.com.au)
[12:00:56] *** Joins: M4rty (~M4rtyflex@37.171.157.145)
[12:09:13] *** Joins: dcpurton (~dcpurton@193-115-93-249.tpgi.com.au)
[12:09:29] *** Quits: sogens (~Sogens@pa49-182-138-25.pa.qld.optusnet.com.au) (Ping timeout: 256 seconds)
[12:11:59] *** Joins: sogens (~Sogens@pa49-182-138-25.pa.qld.optusnet.com.au)
[12:40:39] *** Quits: sogens (~Sogens@pa49-182-138-25.pa.qld.optusnet.com.au) (Ping timeout: 256 seconds)
[12:42:38] *** Joins: sogens (~Sogens@gateway/vpn/pia/sogens)
[12:46:51] *** Joins: mord0d (~mord0d@gateway/tor-sasl/mord0d)
[13:03:50] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Ping timeout: 250 seconds)
[13:06:02] *** Quits: sogens (~Sogens@gateway/vpn/pia/sogens) (Ping timeout: 240 seconds)
[13:08:11] *** Joins: sogens (~Sogens@gateway/vpn/pia/sogens)
[13:31:00] *** Quits: mord0d (~mord0d@gateway/tor-sasl/mord0d) (Remote host closed the connection)
[13:32:27] *** Quits: M4rty (~M4rtyflex@37.171.157.145) (Quit: leaving)
[13:37:51] *** Joins: mord0d (~mord0d@gateway/tor-sasl/mord0d)
[13:57:30] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[14:01:28] *** Quits: dcpurton (~dcpurton@193-115-93-249.tpgi.com.au) (Quit: dcpurton)
[14:06:55] *** Joins: dcpurton (~dcpurton@2001:44b8:217:9e00:ed15:6980:ea65:a797)
[14:11:48] *** Quits: mord0d (~mord0d@gateway/tor-sasl/mord0d) (Remote host closed the connection)
[14:16:10] <flatcap> morning all
[14:23:21] <jindraj_> morning Richard
[14:25:54] <flatcap> hi jindraj_ 
[14:27:49] <flatcap> ericam: I try to keep an open mind.  Please can you raise an issue describing your perfect email.  We can figure out how to get there.
[14:32:32] *** Quits: saki (~saki@gateway/tor-sasl/saki) (Remote host closed the connection)
[14:32:51] *** Joins: saki (~saki@gateway/tor-sasl/saki)
[14:33:57] <dcpurton> ericam: is this related to https://github.com/neomutt/neomutt/issues/2772
[14:36:58] <dcpurton> (I got just one message on IRC in the conversation, since I just run a client on my laptop)
[14:37:11] <dcpurton> But it kind of seemed related
[14:38:39] <flatcap> I mentioned your new work to them (and they'll try it out very soon)
[14:40:21] <dcpurton> What I have done won't directly help
[14:41:19] <dcpurton> But maybe it would be possible to go via postpone, then filter the message, then resend?
[14:41:32] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Ping timeout: 240 seconds)
[14:41:51] <flatcap> possibly...  it depends on what they're *really* trying to achieve
[14:42:22] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[14:42:38] <flatcap> when we know _that_, we'll know how to help
[14:43:13] <flatcap> are you familiar with the XY problem?  https://en.wikipedia.org/wiki/XY_problem
[14:45:21] <dcpurton> ah yes
[14:46:06] <flatcap> :-)
[14:47:34] <flatcap> btw, do you need any of the compose branches on github?
[14:47:39] <dcpurton> nope
[14:48:08] <flatcap> lovely.  tidied
[14:48:42] <flatcap> I've left [debug/compose] for now (and it's backed up to https://github.com/neomutt/neomutt-old)
[14:48:55] <dcpurton> The bug-report suggests the user wants multiart/related
[14:50:08] <flatcap> is there any difference to us which label it has?
[14:50:12] <dcpurton> yes
[14:50:26] <dcpurton> well, the code is pretty much same
[14:50:39] <dcpurton> but how it's interpreted by reader is different
[14:50:53] <flatcap> ah, that's what I thought
[14:50:54] *** Joins: whatsyourask (~whatsyour@user/whatsyourask)
[14:51:13] * flatcap lazily reads wikipedia, rather than the RFCs :-)  https://en.wikipedia.org/wiki/MIME#Multipart_subtypes
[14:52:23] <dcpurton> so if you want multipart/alternative text and html with inline images in html and attachments, the structure has to be carefully arranged to not confuse anyone
[14:53:02] <flatcap> yes, with Content-IDs
[14:53:48] <dcpurton> I reckon I could do the setting content IDs and the related grouping very easily
[14:53:57] <dcpurton> basically same as language and multilingual
[14:54:15] <dcpurton> the content id could be set automatically to file name (and able to change manually)
[14:55:05] <flatcap> sounds good
[14:55:42] <dcpurton> But you wouldn't be able to use a macro to easily group it all up in the right way because it's not possible to know in advance whether a PNG should be attached or inline as part of the multipart/related group without parsing the html (or Markdown)
[14:56:16] <dcpurton> hence why the reporter wants an external script
[14:56:19] <flatcap> ah, ok
[14:56:42] <dcpurton> where you can parse the Markdown and do the right things with the attachments
[14:56:52] <dcpurton> though…
[14:57:30] <dcpurton> I guess you could use a neomutt macro to write out a .rc file with a push command that would be sourced when a script returns to do it :D
[14:57:46] <flatcap> urgh!
[14:57:49] <flatcap> hehe
[14:58:02] <dcpurton> it *would* work though
[14:58:05] <dcpurton> I should try that
[14:58:41] <dcpurton> or maybe not
[14:58:55] <dcpurton> you'd still have to search for an attachment by name while comosing
[14:59:34] <dcpurton> which you can do!
[15:01:48] <dcpurton> Just a matter of searching for `![Tux, the Linux mascot](tux.png)` in the text part
[15:02:29] <dcpurton> outputting '<img alt="Tux, the Linux mascot" src="cid:tux.png">' in the HTML
[15:03:02] <dcpurton> Then telling mutt to search for and tag tux.png in the attachment list (assuming it's already attached before you press send)
[15:05:02] <flatcap> oh, yeah. so easy :-)
[15:05:51] <dcpurton> no harder than writing a python program to do everything
[15:06:13] <dcpurton> though perhaps more frigile…
[15:06:22] <dcpurton> *fragile
[15:20:29] *** Joins: Pali (~pali@user/pali)
[15:32:12] <dcpurton> Bother
[15:32:41] <dcpurton> Body doesn't have a pointer for Content-ID
[15:34:07] <dcpurton> flatcap: is it risky to add fields to the Body structure?
[15:35:08] *** Quits: whatsyourask (~whatsyour@user/whatsyourask) (Quit: whatsyourask)
[15:35:55] * flatcap checks something...
[15:38:39] <flatcap> no, not risky but it affects the header cache
[15:39:01] <dcpurton> what does that mean?
[15:39:36] <flatcap> if we change struct Body, everyone's header cache will be invalid
[15:39:47] <flatcap> (but that's a common thing after every release)
[15:40:15] <flatcap> the binary format in the header cache database is strictly tied to that in memory
[15:44:12] <flatcap> is an existing Content-Id stored in struct ParameterList Body->parameter?
[15:45:51] * flatcap doesn't see it
[15:48:33] <flatcap> if mutt_read_mime_header() or mutt_rfc822_parse_line() recognised Content-Id, then we could store it in B->parameter
[15:50:29] <flatcap> if that's enough, then we wouldn't need to alter Body, for now
[15:51:30] <flatcap> copy https://github.com/neomutt/neomutt/blob/master/email/parse.c#L1390-L1391
[15:51:37] <flatcap> into the "content-" `if` above
[15:55:07] <dcpurton> As long as you can store a string I can't see why that wouldn't work
[15:55:51] <flatcap> it nearly works. it store the raw "<xyz>" where I guess we want "xyz"
[15:57:34] <dcpurton> I'll have a play. I'm sure it would be easier than modifying Body
[15:58:01] *** Joins: strajder (~strajder@user/strajder)
[16:16:27] *** Joins: plastico (~plastico@neomutt/plastico)
[16:31:37] <ericam> dcpurton: sorry, was sleeping. That's exactly what I want to do, including setting up an alternative body type
[16:31:59] <ericam> multipart/alternative I mean
[16:33:37] <dcpurton> but you talk about wanting the alternative body type to have inline images, right?
[16:34:12] <ericam> That isn't a requirement for me, since I don't need inline images often, but that would be really convenient if possible.
[16:36:35] <dcpurton> the multipart/alternative behaviour is pretty good now and I think I can do multipart/alternative too
[16:38:05] <ericam> I'm not sure I follow
[16:38:54] <dcpurton> errm
[16:38:56] <dcpurton> multipart/related too
[16:39:03] <dcpurton> for inline images
[16:39:50] <ericam> Ohh okay, that makes sense. Again, I think it's easier to have an external script do this, but maybe there's something I don't understand about why that's undesirable.
[16:41:35] <flatcap> at the worst case, neomutt has to parse the email from scratch -- if it goes wrong, then what?
[16:44:09] <ericam> Keep the original in memory, report to the user "unable to parse output, send original email? [y/N]" and if they choose no, drop them back to the previous view where they can choose to save as a draft?
[16:44:49] <flatcap> yeah, we could do that, but it suddenly sounds like a lot of code
[16:45:39] <flatcap> I need examples from lots of people of their "perfect" email.  then I can understand the gaps that need to be filled
[16:45:54] <flatcap> (by code or script)
[16:47:16] <ericam> I see, that makes sense.
[16:48:04] <ericam> I'm curious why that would be a lot of code though.  Rendering out the format already exists, parsing it already exists, and piping functionality is already there.  Unless those can't be used?  Or there's something else I'm not understanding?  Maybe I just have Python brain, haha
[16:48:20] <flatcap> hehe
[16:48:45] <flatcap> the mutt code is a desperate mess.  the neomutt code is getting better
[16:49:51] <flatcap> How's your C? ;-)
[16:51:02] <ericam> I've done a bit of C programming in the past, but nothing of this complexity.  How reliant on macros is it?  Looking at `email.h`, it doesn't seem to use too many
[16:52:52] <flatcap> C macros?  few.  I've killed the worst offenders
[16:55:32] <ericam> Cool cool.  Also, looking at https://github.com/neomutt/neomutt/issues/181, I see that there was a "better" fix that was bigger; is that still the case?  I'd imagine the code has come a long way since 2017
[16:58:22] <flatcap> 181?  create $net_folder_format ?
[16:59:14] <flatcap> yeah, the code is significantly different, and significantly improved, since 2017
[17:01:45] <flatcap> since the split: clang-format the code, document all the code, rename everything consistently, eliminate UGLY macros, eliminate LOADS of global vars, add LOADS of APIs, create loads of libraries...
[17:04:57] <dcpurton> flatcap: the parameter idea is good, but doesn't quite do the right thing by default
[17:05:56] <dcpurton> It puts the parameter in Content-Type:
[17:06:27] <dcpurton> e.g., Content-Type: image/png; Content-ID="<neomutt-256.png>"
[17:06:37] *** Joins: Guest881 (~Martin@mail.mdosch.de)
[17:06:51] <dcpurton> But perhaps I can handle it specially when I write out the email?
[17:08:21] <flatcap> ah, perhaps
[17:10:32] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Ping timeout: 240 seconds)
[17:17:08] <flatcap> I'm trying to resolve a discrepancy between compose and recv...
[17:18:11] <flatcap> in compose the Email holds the top-level attachments, but there's no Parameter holding the "boundary" for them. I guess that gets added in send_message()
[17:18:57] <flatcap> when we receive the email, we create a dummy Body that contains the boundary
[17:19:06] <flatcap> compose: https://flatcap.org/mutt/compose2/12%3A51%3A09-email.svg
[17:19:13] <flatcap> receive: https://flatcap.org/mutt/compose2/12%3A53%3A20-email.svg
[17:20:06] <flatcap> I'm wondering how much effort it would be to unify the two
[17:20:52] <flatcap> so in compose you'd start with Email->Body (plain),
[17:21:27] <flatcap> then if you add an attachment you'd get Email->Body (boundary=xyz) -> Plain text, Attachment
[17:22:36] <flatcap> this'd probably be invisible to the user in compose
[17:24:56] <dcpurton> A lot of fields in the compose section seem to be left empty until things are actually sent
[17:25:23] <flatcap> yeah
[17:26:35] <flatcap> having the extra Body in compose would remove most of the differences between the compose/recv attachment display
[17:27:12] <flatcap> background: I've been trying to work out how to represent the Body using TAILQ
[17:27:51] <flatcap> I'm trying to work out if there's always a single Body at the root (recv) or a set of Bodys (compose)
[17:40:37] *** Quits: elshize (elshize@gateway/vpn/protonvpn/elshize) (Ping timeout: 240 seconds)
[17:42:46] *** Joins: elshize (~elshize@70.107.91.44)
[17:48:30] <ericam> Quick question btw: is there a way to make neomutt render html from an external command directly in the view?  I have been massaging my mailcap file but with no luck
[17:48:56] <dcpurton> ooo. I sent an email with an inline `neomutt-256.png`!
[17:50:41] <flatcap> nice one!
[17:51:08] * flatcap reads the question carefully...
[17:53:10] <flatcap> where's the source file?  where's it going?  which view? (recv?)
[17:53:53] <ericam> Sorry, I don't know the neomutt terminology very well.  I am reading emails I've received (so recv I think) and when I view an email without text/plain, it says text/html is unsupported, press v to view
[17:54:06] <dcpurton> ericam: if there's no text/plain part then my ~/.mailcap uses `links` to convert the HTML to text and displays it like normal
[17:54:06] <ericam> Then it properly shows the output of w3m
[17:54:52] <ericam> dcpurton: that's exactly what I would like to do.  Apparently I'm bad at Google
[17:55:45] <dcpurton> I have three lines in my ~/.mailcap for text/html:
[17:55:51] <dcpurton> in this order:
[17:55:56] <dcpurton> text/html; qutebrowser '%s'; test=test -n "$DISPLAY"; description="HTML Text"; nametemplate=%s.html
[17:56:02] <dcpurton> text/html; links %s; nametemplate=%s.html
[17:56:08] <dcpurton> text/html; links -html-margin 0 -width 72 -dump %s; nametemplate=%s.html; copiousoutput
[17:56:21] <flatcap> thanks dcpurton 
[17:56:22] <dcpurton> I don't really understand how it selects which one…
[17:56:54] <dcpurton> But if I'm in the attachment view and press <enter> it opens qutebrowser
[17:57:18] <dcpurton> but for annoying emails with no text/plain part it renders OK in text like a normal email
[17:58:00] <flatcap> the copiousoutput label means neomutt can use that entry to output text to be displayed in the pager
[17:59:15] <flatcap> there are quite a lot of ways to view things... (but I'll have to look them up)
[18:00:07] <flatcap> for multipart emails, the `alternative_order text/plain text/html` command tells neomutt which part you'd prefer to see
[18:00:56] <flatcap> the `auto_view text/html` command tells neomutt which types you'd like to view automatically in the pager (if there's a matching mailcap entry)
[18:02:07] <flatcap> there are also separate commands in the attachments view:
[18:02:41] <ericam> This is my entire mailcap: https://0paste.com/346454
[18:02:48] <flatcap> `<Enter> view-attach` will try to get a text view (copiousoutput)
[18:03:08] <flatcap> `m` view-mailcap -- force viewing of attachment using mailcap
[18:04:06] <flatcap> ah. the `auto_view` is a neomutt command, so that should live in your .neomuttrc
[18:04:21] <ericam> Ohhh of course
[18:04:30] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[18:05:20] <flatcap> I have:  text/html; w3m -cols ${COLUMNS:-80} -I %{charset} -T text/html; copiousoutput;
[18:05:42] <ericam> Yep, that worked perfectly for me
[18:05:45] <flatcap> great
[18:05:53] <ericam> Also I didn't know about the columns variable, that is a good trick
[18:06:10] <flatcap> :-)
[18:12:01] <dcpurton> flatcap: <enter> for me also opens the gui. I wish it didn't
[18:12:43] <flatcap> hmm...
[18:13:06] <dcpurton> (<Enter> is bound to <view-attach>)
[18:13:12] <flatcap> try putting the copiousoutput entry first
[18:16:14] <dcpurton> That does work. Except then <view-mailcap> doesn't open the GUI
[18:17:21] <dcpurton> There must be something weird in my ~/.neomuttrc
[18:17:33] <flatcap> sorry, dunno.  I'm certain there _is_ a way, though
[18:18:05] <dcpurton> it doesn't bother me that much
[18:18:21] <dcpurton> Usually if I want to see the HTML part I want it in a browser
[18:22:42] *** Joins: mord0d (~mord0d@gateway/tor-sasl/mord0d)
[18:33:15] <dcpurton> Some multipart/related goodness to check out
[18:33:18] <dcpurton> https://github.com/neomutt/neomutt/pull/3197
[18:33:59] * flatcap looks ...
[18:34:03] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Remote host closed the connection)
[18:34:13] <dcpurton> using the Body->parameter probably isn't ideal. But it does simplify things
[18:34:22] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[18:34:38] <flatcap> great.  I'll have a play in a bit
[18:34:53] <dcpurton> if you want an ordinary attachment, it needs to be outside of the multipart/related group
[18:35:19] <flatcap> <enter> and `m` both call mutt_view_attachment() with MUTT_VA_REGULAR and MUTT_VA_MAILCAP flags respectively
[18:35:45] *** Quits: mord0d (~mord0d@gateway/tor-sasl/mord0d) (Remote host closed the connection)
[18:35:51] <dcpurton> if I'm feeling keen, I'll run it through `gdb` and see what's happening
[18:36:02] <dcpurton> I'm off to bed. Good night
[18:36:13] *** Joins: mord0d (~mord0d@gateway/tor-sasl/mord0d)
[18:36:33] <flatcap> night dcpurton 
[18:39:21] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Ping timeout: 256 seconds)
[18:42:33] *** Quits: dcpurton (~dcpurton@2001:44b8:217:9e00:ed15:6980:ea65:a797) (Quit: dcpurton)
[18:49:48] *** Joins: bsd4me (~IceChat95@user/bsd4me)
[19:09:26] *** Quits: sassmann_ (~sassmann@user/sassmann) (Read error: Connection reset by peer)
[19:09:48] *** Joins: sassmann (~sassmann@user/sassmann)
[19:24:37] *** Guest881 is now known as Martin[XMPP]
[19:24:37] *** Martin[XMPP] is now known as Martin
[19:24:37] *** Martin is now known as Martin[XMPP]
[19:41:55] *** Quits: noex (~null@user/noex) (Quit: :q!)
[19:44:13] *** Joins: noex (~null@user/noex)
[19:46:47] *** Quits: bsd4me (~IceChat95@user/bsd4me) (Ping timeout: 256 seconds)
[20:05:32] *** Quits: noex (~null@user/noex) (Ping timeout: 240 seconds)
[20:06:40] *** Joins: noex (~null@user/noex)
[20:09:54] *** Joins: bsd4me (~IceChat95@user/bsd4me)
[20:42:37] *** Quits: adnidor (~adnidor@p5dc353da.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[20:55:37] *** Joins: adnidor (~adnidor@p54aec6d3.dip0.t-ipconnect.de)
[21:00:17] *** Quits: bsd4me (~IceChat95@user/bsd4me) (Quit: Light travels faster then sound, which is why some people appear bright, until you hear them speak)
[21:11:27] *** just1602_ is now known as just1602
[21:11:40] *** Quits: just1602 (~just1602@199.58.80.143) (Changing host)
[21:11:40] *** Joins: just1602 (~just1602@user/just1602)
[21:16:16] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[21:23:29] *** Joins: aymen (~aymen@197.1.11.67)
[21:23:44] *** Quits: aymen (~aymen@197.1.11.67) (Client Quit)
[21:25:16] *** Joins: G_w (~Gw@197.1.11.67)
[21:25:31] <G_w> !help
[21:30:04] *** Quits: G_w (~Gw@197.1.11.67) ()
[21:44:14] *** Joins: nyah (~nyah@94.6.71.219)
[22:06:44] *** Joins: rsaavedra (~rodrigo@user/rsaavedra)
[22:25:48] *** Quits: rsaavedra (~rodrigo@user/rsaavedra) (Quit: WeeChat 3.4)
[22:27:40] *** Joins: rsaavedra (~rodrigo@user/rsaavedra)
[23:00:54] *** Quits: mord0d (~mord0d@gateway/tor-sasl/mord0d) (Quit: SIGSEGV received, terminated)
[23:41:02] *** Joins: bsd4me (~IceChat95@user/bsd4me)
[23:42:34] *** Joins: blaub (~blaub@194-208-201-025.tele.net)
[23:51:37] *** Quits: blaub (~blaub@194-208-201-025.tele.net) (Quit: WeeChat 3.4)
[23:58:17] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
