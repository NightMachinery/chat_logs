[00:04:46] *** Quits: Junxter (~Junxter@222.95.222.185) (Ping timeout: 260 seconds)
[00:06:38] *** Quits: bobdobbs (~user@2406:5a00:f027:d00:7975:f84d:857d:18a7) (Ping timeout: 260 seconds)
[00:14:00] *** Joins: coder7of9 (~coder7of9@modemcable007.22-130-66.mc.videotron.ca)
[00:14:00] <coder7of9> thanks i will look at both options
[00:23:32] *** Quits: guido (~guido@host-87-10-17-127.retail.telecomitalia.it) (Quit: WeeChat 3.2.1)
[00:33:10] *** Joins: glumanda (~manu@194-208-201-025.tele.net)
[00:34:10] *** Quits: glumanda (~manu@194-208-201-025.tele.net) (Client Quit)
[00:34:54] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[00:40:28] <sumthing1980> hello any sqlite experts here
[00:41:40] <Sammitch> #sqlite
[00:42:06] <Sammitch> !+ask
[00:42:06] <php-bot> If you have a question, please just *ask it*. And don't address specific people - ask the channel. If somebody knows, they'll answer. :) To get help more quickly, don't ask "can I ask a question," "can anyone help," or "does anybody use/know about foo". Be as specific as you can. Also, please don't /msg people without permission, and read the topic before you ask.
[00:43:03] <sumthing1980>  Im running a small crawler I want to optimize speed for it I have a table for urls, they have url and urlmd5 as columns I have index on url md5
[00:43:03] <sumthing1980>  CREATE INDEX IF NOT EXISTS 'md5' on urls (md5url) limit 1
[00:43:03] <sumthing1980> I want to avoid duplicates and insert new urls as fast as possible it is a bottleneck atm
[00:43:03] <sumthing1980> I do select * from urls where md5url='$md5url'
[00:43:03] <sumthing1980> then check if the count of the returned data (php) is 0 or not,  if 0 then I insert. are there any faster ways?
[00:43:03] <php-bot> Muting sumthing1980 for 20 seconds to prevent them from flooding
[00:43:49] <sumthing1980> no answer in sqlite
[00:45:29] <Sammitch> that's probably as good as you're going to get in _any_ DB backend, and you're likely going to be better served with a _persistent_ DB backend rather than something that needs to pull its data/indexes off the disk for every single request.
[00:46:14] <sumthing1980> the db is open for like many many inserts
[00:46:22] <sumthing1980> but yes thanks
[00:46:49] <Sammitch> not to mention the tangential issue that if you're not canonicalizing those URLs you're going to have duplicates and false negatives for things like ?foo=1&bar=2 and ?bar=2&foo=1
[00:47:34] <Sammitch> but if you're just trying to power through inserts then show us the code that does it
[00:47:41] <sumthing1980> yes but these are mostly urls for the sites given by the sites themselves within the sites either links or from sitemaps
[00:47:44] <Sammitch> but likely you're just running up against write IO bottleneck
[00:48:03] <Sammitch> immaterial
[00:48:31] <sumthing1980> yes its io I know
[00:49:26] <Sammitch> are you batching your inserts inside explicit transactions?
[00:49:51] <sumthing1980> no they are done one by one inside php
[00:50:50] <Sammitch> try batching them into one or more transactions. this tends to bundle the writes together more efficiently
[00:51:28] <sumthing1980> the problem is having only unique urls in the table
[00:51:43] <sumthing1980> I think there is no command to do insert if unique
[00:51:48] <sumthing1980> in sqlite
[00:52:03] <sumthing1980> so I gotta do manually
[00:52:06] <Sammitch> CREATE UNIQUE INDEX
[00:52:09] <sumthing1980> but maybe I could do
[00:52:19] <Sammitch> https://www.sqlite.org/lang_createindex.html
[00:52:29] <sumthing1980> check if like 10 urls at a time exists and if all say no
[00:52:31] <sumthing1980> then insert
[00:52:41] <sumthing1980> that check could be just one command
[00:52:54] <sumthing1980> I have index
[00:53:01] <sumthing1980> CREATE INDEX IF NOT EXISTS 'md5' on urls (md5url)
[00:53:21] <Sammitch> INSERT ... ON CONFLICT ... https://sqlite.org/lang_conflict.html
[00:54:14] <Sammitch> you have AN index, and you want those entries to be unique, so what you want is a unique index which enforces that constraint
[00:54:36] *** Quits: magla (~gelignite@55d4cb04.access.ecotel.net) (Quit: Stay safe!)
[00:54:40] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[00:55:33] <sumthing1980> ooh yes now I remember
[00:55:47] <sumthing1980> there can be multiple urls in the db
[00:55:49] <sumthing1980> same url
[00:55:53] <sumthing1980> but different timestamp
[00:56:07] <Sammitch> so you want a composite unique index
[00:56:13] <sumthing1980> I had unique previously but I removed this
[00:56:21] <sumthing1980> composite unique
[00:56:22] <sumthing1980> dont know that
[00:57:08] <Sammitch> use more than one column name in CREATE INDEX https://www.sqlite.org/lang_createindex.html
[00:58:27] <Sammitch> if you plan to use the index for lookups it's generally implemented such that in a composite index such as (a,b,c) you can look up (a) and (a,b) efficiently, but (b), (b,c), or (c) will not be able to use the index
[01:00:32] <sumthing1980> ok thanks
[01:01:04] *** Quits: tlaxkit (~hexchat@170.253.35.150) (Ping timeout: 252 seconds)
[01:02:16] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: WeeChat 3.2)
[01:03:56] * Sammitch thinks about Rosetta Code, but for the differences between SQL dialects...
[01:08:31] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[01:09:19] <sumthing1980>  UNIQUE(users_id, lessoninfo_id)
[01:12:25] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 268 seconds)
[01:17:04] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[01:19:48] *** Quits: xSavitar (~xSavitar@user/xsavitar) (Read error: Connection reset by peer)
[01:31:22] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 252 seconds)
[01:34:04] *** Quits: junktext (~junktext@109.201.152.164) (Ping timeout: 252 seconds)
[01:38:10] *** Joins: tuskkk____ (uid18470@id-18470.tinside.irccloud.com)
[01:49:20] *** Quits: carlino3 (~carlino3@user/carlino3) (Ping timeout: 256 seconds)
[01:49:33] *** Joins: carlino3 (~carlino3@user/carlino3)
[01:55:02] *** Quits: joachimo (~joachimo@cloud02.joachimopdenakker.be) (Ping timeout: 256 seconds)
[01:55:19] *** Joins: joachimo (~joachimo@cloud02.joachimopdenakker.be)
[01:55:32] *** Quits: fiddlerwoaroof (~fiddlerwo@user/fiddlerwoaroof) (Ping timeout: 245 seconds)
[01:55:59] *** Quits: Miles8of9 (~obrien@93-34-146-123.ip50.fastwebnet.it) (Ping timeout: 268 seconds)
[01:57:02] *** Joins: fiddlerwoaroof (~fiddlerwo@user/fiddlerwoaroof)
[01:59:04] *** Quits: AnrDaemon (~ZNC@darkdragon-nln.starlink.ru) (Ping timeout: 268 seconds)
[02:00:15] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Quit: Leaving)
[02:19:23] *** Joins: AnrDaemon (~ZNC@darkdragon-nln.starlink.ru)
[02:34:51] *** Quits: jess (~jess@libera/staff/jess) ()
[02:37:22] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 260 seconds)
[02:39:37] *** Joins: arieh7 (~51062cbc@user/jewllama)
[02:43:51] *** Quits: arieh (~51062cbc@user/jewllama) (Quit: The Lounge - https://thelounge.github.io)
[02:43:51] *** arieh7 is now known as arieh
[02:44:43] *** Quits: arieh (~51062cbc@user/jewllama) (Quit: The Lounge - https://thelounge.github.io)
[02:46:00] *** Quits: carlino3 (~carlino3@user/carlino3) (Ping timeout: 256 seconds)
[02:47:14] *** Joins: arieh (~51062cbc@user/jewllama)
[02:57:46] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[02:59:44] *** Quits: deltab (~deltab@user/deltab) (Ping timeout: 265 seconds)
[03:00:44] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[03:01:08] *** Joins: deltab (~deltab@user/deltab)
[03:15:01] *** Quits: coder7of9 (~coder7of9@modemcable007.22-130-66.mc.videotron.ca) (Quit: Ping timeout (120 seconds))
[03:18:59] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:39:55] *** Joins: ferdna (~ferdna@user/ferdna)
[03:43:10] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 260 seconds)
[04:18:17] <ferdna> i need to store key/values pairs... like an array...
[04:18:24] <ferdna> and then print them back with a foreach
[04:19:06] <ferdna> i tried with vararray = array("fruit1" => "apple")
[04:19:17] <ferdna> but it doesnt work
[04:23:44] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[04:26:58] *** Quits: genomc (uid245282@id-245282.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[04:35:42] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 268 seconds)
[04:42:43] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 252 seconds)
[04:55:30] *** Joins: semeion (~semeion@user/semeion)
[04:55:50] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[05:04:50] *** Quits: ArchNoob (~maotora@user/archnoob) (Ping timeout: 260 seconds)
[05:30:26] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:35:19] <s17> $vararray
[05:35:23] *** Joins: vlm (~vlm@user/vlm)
[05:47:56] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[05:51:21] <__adrian> ferdna: https://php.net/language.variables
[05:54:30] <ferdna> s17, yes i know that...
[05:54:35] <ferdna> __adrian, ^
[05:54:36] <ferdna> ...
[05:54:41] <__adrian> your question implied you did not
[05:54:46] <ferdna> i typed here quickly...
[05:54:59] <ferdna> i get my array with print_r
[05:55:37] <__adrian> if your question's about something else, can you clarify?
[06:00:34] <ferdna> __adrian, yes. i do apologize...
[06:00:39] <ferdna> for not explaining correctly
[06:00:41] <ferdna> ...
[06:01:33] <ferdna> wait... let me test it before...
[06:03:39] <ferdna> can i paste here? its only 5 lines
[06:04:28] <ferdna> ...
[06:04:29] <ferdna> https://dpaste.com/E75T9LQQQ
[06:04:47] <ferdna> that gives me this:
[06:04:48] <ferdna> Array ( [0] => Array ( [fruit] => banana ) [1] => Array ( [fruit] => apple ) [2] => Array ( [fruit] => watermelon ) )
[06:06:59] <Byteflux> yes, that is what `$arr[] =` does. maybe you meant to do: $vararray['fruit1'] = 'banana';
[06:09:26] <ferdna> i need to do the foreach on that array now...
[06:09:31] <ferdna> remember i only want this list:
[06:09:38] <ferdna> fruit1 | banana
[06:09:41] <ferdna> fruit1 | apple
[06:09:42] <ferdna> etc
[06:09:42] <__adrian> see Byteflux's answer
[06:09:56] <__adrian> you're appending a whole new array to your first array, there
[06:10:10] <__adrian> from what you're describing, you only want to append the string
[06:10:11] <ferdna> __adrian, exactly... and that is not what i want to do
[06:10:24] <ferdna> i just want to keep 1 single array
[06:10:34] <__adrian> so don't  = []
[06:10:43] <__adrian>    = "apple"
[06:10:56] <__adrian> https://php.net/array
[06:11:05] <ferdna> if i remove the [] then the other following 2 key/val wont be added
[06:11:08] <ferdna> only the last one
[06:11:21] <ferdna> i want to keep adding key/val
[06:11:46] <Byteflux> https://3v4l.org/sthpr
[06:12:12] <Byteflux> If they have the same "key" then it's not really a key.
[06:12:32] <Byteflux> Do they have the same key? Your paste example shows fruit1, fruit2, fruit3, so they are different keys.
[06:12:44] <Byteflux> So my solution would work
[06:13:39] <ferdna> ohh i see that now...
[06:13:48] <ferdna> thats perfect
[06:14:00] <ferdna> thank you so much
[06:14:19] <Byteflux> You're welcome.
[06:15:04] <Byteflux> If you're using a really old version of PHP then just change `$arr = [];` to `$arr = array();` (and also consider upgrading)
[06:16:42] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[06:17:11] <ferdna> ohh cool.. thanks thanks!
[06:31:03] *** Joins: jetchisel (jetchisel@user/jetchisel)
[06:38:20] <__adrian> ferdna: i'd suggest that when you find yourself assigning keys like "...1", "...2" it means that the keys are not meaningful
[06:38:52] <__adrian> e.g., rather than  $array = ["fruit1" => "apple", ...];  you should be doing  $fruits = ["apple", ...];
[06:42:05] <ferdna> __adrian, yeah i dont want to use numbers...
[06:42:11] <ferdna> i rather use key names
[06:42:25] <__adrian> if the key names are meaningful, that's good
[06:42:43] <__adrian> but if they're not, it's extra complexity for no reason. it's counterproductive.
[06:45:38] <Blondie101010> ferdna:  you might also be doing it backwards, where the key is the item like ['apple' => 'fruit', 'tomatoe' => 'vegetable', 'orange' => 'fruit']
[06:49:16] <bibble> [ 'fruit' => [ 'apple', 'orange'], 'vegetable' => ['tomato'] ]
[06:50:03] <__adrian> guys, guys
[06:50:06] <__adrian> this is horrible advice
[06:50:11] <bibble> lol
[06:50:14] <__adrian> tomatoes are FRUIT
[06:50:21] <bibble> :D
[06:53:05] <Blondie101010> :)
[06:55:29] <bibble> "A common tomato disease is tobacco mosaic virus. Handling cigarettes and other infected tobacco products can transmit the virus to tomato plants."
[06:55:32] <bibble> https://en.wikipedia.org/wiki/Tomato
[06:56:09] <Blondie101010> so tomato fields need to be smoke free
[06:56:25] <__adrian> certainly relevant to any programming task
[06:56:57] <bibble> lol
[07:14:29] <ferdna> hahahaha
[07:28:19] *** Joins: Rockwood (~Rocky@user/rocky)
[07:29:13] *** Joins: Rockwood_ (~Rocky@user/rocky)
[07:30:09] <Rockwood_> why testing is important?
[07:30:21] <Rockwood_> lots packages out of box?
[07:30:24] <Rockwood_> lots packages out of box
[07:33:31] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 268 seconds)
[07:40:12] *** Joins: carlino3 (~carlino3@user/carlino3)
[09:10:55] *** Joins: bobdobbs (~user@2406:5a00:f027:d00:781d:17c:2a49:2ffa)
[09:12:42] *** Joins: guido (~guido@host-87-17-251-50.retail.telecomitalia.it)
[09:28:59] *** Quits: guido (~guido@host-87-17-251-50.retail.telecomitalia.it) (Quit: WeeChat 3.2.1)
[09:29:18] *** Joins: guido (~guido@host-87-17-251-50.retail.telecomitalia.it)
[09:33:41] *** Quits: Rockwood_ (~Rocky@user/rocky) (Quit: The Time is Over)
[09:36:03] *** Joins: Junxter (~Junxter@222.95.222.185)
[09:41:16] *** synapt is now known as nate
[09:42:28] *** Joins: ArchNoob (~maotora@user/archnoob)
[09:47:02] *** Quits: guido (~guido@host-87-17-251-50.retail.telecomitalia.it) (Quit: WeeChat 3.2.1)
[09:47:46] *** Joins: guido (~guido@host-87-17-251-50.retail.telecomitalia.it)
[10:05:07] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[10:05:09] *** Quits: carlino3 (~carlino3@user/carlino3) (Ping timeout: 256 seconds)
[10:07:33] *** Joins: genomc (uid245282@id-245282.hampstead.irccloud.com)
[10:11:14] *** Joins: carlino3 (~carlino3@user/carlino3)
[11:29:05] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 268 seconds)
[11:34:32] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[11:39:41] <arash> Hello, what is the difference between exec and system? I want to zip a folder in ubuntu, and I don't need any output so which command should i use?
[11:42:38] *** Quits: carlino3 (~carlino3@user/carlino3) (Ping timeout: 256 seconds)
[11:46:51] <arash> or maybe i should use ZipArchive class? which one is better?
[11:49:58] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:53:58] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.2.1)
[11:58:10] *** Quits: \mSg (~mSg@user/msg/x-0285936) (Ping timeout: 265 seconds)
[12:04:12] *** Joins: \mSg (~mSg@user/msg/x-0285936)
[12:04:49] *** Quits: \mSg (~mSg@user/msg/x-0285936) (Client Quit)
[12:06:25] <AllenJB> ZipArchive gives you more programmatic control. Using an external command may be faster and completely avoids any memory restrictions imposed on the PHP script
[12:06:58] <AllenJB> With regards to system vs exec, system will print the command output, where as exec won't.
[12:07:54] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:14:43] *** Joins: dericku7 (~dericku7@user/dericku7)
[12:21:14] <arash> AllenJB, thank you
[12:23:56] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[12:25:31] *** Quits: guido (~guido@host-87-17-251-50.retail.telecomitalia.it) (Quit: WeeChat 3.2.1)
[12:32:41] *** Quits: dericku7 (~dericku7@user/dericku7) (Quit: Leaving)
[12:49:43] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[13:34:46] *** Joins: onizu (uid373383@id-373383.uxbridge.irccloud.com)
[13:35:28] *** Joins: Miles8of9 (~obrien@93-34-146-123.ip50.fastwebnet.it)
[14:45:53] *** Quits: ArchNoob (~maotora@user/archnoob) (Ping timeout: 265 seconds)
[14:58:32] *** Joins: ArchNoob (~maotora@user/archnoob)
[15:04:42] *** Quits: grawity (grawity@star.nullroute.eu.org) (Remote host closed the connection)
[15:05:07] *** Joins: grawity (grawity@star.nullroute.eu.org)
[15:12:22] *** Joins: stenno (~stenno@user/stenno)
[15:40:15] *** Joins: sssr (~sssr@2a02:2454:522:e600:3a56:7e5c:a935:d08b)
[15:41:13] *** Quits: sssr (~sssr@2a02:2454:522:e600:3a56:7e5c:a935:d08b) (Client Quit)
[15:45:32] *** Joins: sssr (~sssr@2a02:2454:522:e600:3a56:7e5c:a935:d08b)
[15:53:21] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[16:03:14] *** Joins: arieh4 (~51062cbc@user/jewllama)
[16:20:02] *** Joins: Simplar (~quassel@188.163.92.105)
[16:39:55] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 252 seconds)
[17:07:01] *** Quits: Ducki (~ducki@user/ducki) (Remote host closed the connection)
[17:19:46] *** Joins: Ducki (~ducki@user/ducki)
[17:25:32] <Simplar> What will you recommend me to use to cut the content after the last slash (and the slash itself) from $path better than `implode('/',array_pop(explode('/',$path)))`?
[17:25:58] <TinoDidriksen> substr() + strrpos()
[17:26:08] <Simplar> will this be better?
[17:26:12] <Simplar> in terms of performance
[17:26:23] <TinoDidriksen> Vastly better
[17:26:51] <stenno> is that really a performance issue, Simplar ?
[17:27:00] <stenno> i'd rather prefer the code which is better to read and to maintain
[17:27:03] <TinoDidriksen> $str = substr($str, 0, strrpos($str, '/')-1);
[17:27:15] <TinoDidriksen> If you want better to read, use preg_replace.
[17:28:39] <stenno> hmm
[17:28:41] <TinoDidriksen> $str = preg_replace('~/[^/]*$~', '', $str);
[17:28:47] <__adrian> none of those examples will have a performance "problem"   ;)
[17:28:48] <stenno> thats a nasty regexp
[17:28:49] <stenno> yep
[17:28:59] <TinoDidriksen> That's a pretty clean regex.
[17:29:23] <Naktibalda> I think that you have to make it non-greedy
[17:29:44] <Naktibalda> no, it is good
[17:29:44] <__adrian> this ^ is why regex is not the ideal solution btw
[17:29:54] <__adrian> it's hard to just look at and know it's right
[17:30:11] <__adrian> you have to think about it a sec
[17:30:24] <stenno> its terser, thats for sure
[17:30:29] <TinoDidriksen> substr() is easier to reason about, but needs an error check if there is no /
[17:31:15] <TinoDidriksen> But implode+array_pop+explode is orders of magnitude more complex. Just hilariously overkill.
[17:31:33] <stenno> agreed
[17:32:48] <stenno> don't you have url functions in php which can do stuff like this more comfortable?
[17:33:24] <stenno> or paths for that matter
[17:34:04] <TinoDidriksen> dirname() could actually do it.
[17:34:34] <TinoDidriksen> But the semantics are completely off, unless it is a local path.
[17:34:40] <__adrian> mm
[17:34:53] <__adrian> you'd just be taking advantage of how sloppy diranme() is
[17:35:01] <stenno> ^_^"
[17:35:21] <__adrian> "remove last ssegment and slash" isn't really a normal url operation
[17:37:56] *** Quits: tuskkk____ (uid18470@id-18470.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[17:40:44] <Simplar> TinoDidriksen: you provided the substr($str, 0, strrpos($str, '/')-1) for getting the part up to the last slash excluding the slash (-1 is incorrect here, it cuts one more symbol I wanted to leave in)
[17:40:56] <Simplar> How do I get the part that was cut by that substr?
[17:41:17] <TinoDidriksen> substr($str, strrpos($str, '/'));
[17:41:31] <Simplar> Thought the same way!
[17:41:34] <Simplar> Let me see what it prints
[17:42:54] <Naktibalda> basename() would work too
[17:43:08] <stenno> Simplar: your initial solution doesn't work btw
[17:43:14] <Simplar> substr($str, strrpos($str, '/')+1); works
[17:43:27] <stenno> array_pop returns the popped element, not the array
[17:44:23] <TinoDidriksen> Classic off-by-one with substr() offsets. The method is solid enough.
[17:44:46] <TinoDidriksen> I would just use PCRE, but I'm comfortable with regex.
[17:47:47] *** Joins: Hiccup (cHoy@2404:8000:1003:1db2::420)
[17:48:03] <TinoDidriksen> Sounds like you want to split on the last /, which preg_split() can do with ~/(?=[^/]*$)~
[17:49:41] <TinoDidriksen> Simplar, https://3v4l.org/05E5g
[17:55:05] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 260 seconds)
[18:04:46] *** Quits: Junxter (~Junxter@222.95.222.185) (Ping timeout: 268 seconds)
[18:07:14] *** Joins: stenno (~stenno@user/stenno)
[18:15:52] *** Joins: junktext (~junktext@109.201.152.165)
[18:21:48] * stenno reads up on regexp delimiters in php
[18:22:07] <stenno> oh wow
[18:22:18] <stenno> unusual but convenient
[18:22:43] <TinoDidriksen> PHP? That's PCRE. Perl can do the same.
[18:22:52] <stenno> i see
[18:22:54] <TinoDidriksen> s/// could be s~~~ or s@@@ or whatever.
[18:23:04] <stenno> right
[18:24:04] <TinoDidriksen> What trips people is that the match shortcut is /pattern/ so they never imagine anything other than /, but Perl allows prefix m for others such as m~pattern~
[18:24:22] *** Joins: WishBoy (~WishBoy@user/wishboy)
[18:26:10] <stenno> not familiar with perl i have to admit
[18:26:41] <__adrian> i actually like using ()
[18:27:00] <__adrian> no extra characters that need escaping that way
[18:27:35] <stenno> wait
[18:27:43] <stenno> that doesn't make sense
[18:27:57] <stenno> you can use ( as a starting delimiter and ) as an ending delimiter?
[18:27:58] <da_wunder> I like to use #
[18:28:01] <__adrian> yes
[18:28:06] <stenno> neat
[18:28:06] <__adrian> you can use () [] {}
[18:28:19] <stenno> but wont it complain for e.g (()
[18:28:28] * stenno TIAS
[18:28:49] <TinoDidriksen> ( is a special character, so if you don't mean a match group () then you must always escape \( or use [(]
[18:28:57] <TinoDidriksen> Delimiter doesn't change this.
[18:29:03] <__adrian> it would fail anyway
[18:29:10] <stenno> indeed
[18:29:33] <stenno> oh but the error is different
[18:29:43] <stenno> echo preg_match('/(/', 'foo(bar'); // gives
[18:29:47] <stenno> Warning: preg_match(): Compilation failed: missing closing parenthesis at offset 1 in /in/gUqPL on line 3
[18:29:56] <__adrian> yes
[18:30:01] <stenno> Warning: preg_match(): No ending matching delimiter ')' found in /in/SqNBi on line 3
[18:30:06] <stenno> for echo preg_match('(()', 'foo(bar');
[18:30:12] <TinoDidriksen> Yup, makes sense.
[18:30:57] <stenno> oh () [] and {} are special-cased for delimiting, i see
[18:31:04] <stenno> got confused by that
[18:31:19] <stenno> so '(' as opening delimiter requires ')' as closing
[18:31:24] <stenno> makes sense now
[18:33:25] <TinoDidriksen> I really like ~ as delimiter. It stands out visually without being obnoxiously big like # or @. But it's so hard to type since it's an alt-gr dead key.
[18:34:21] <stenno> german layout? :)
[18:34:26] <TinoDidriksen> Danish
[18:34:35] <stenno> shift-` for me on US layout
[18:34:36] <da_wunder> I don't see the point for "hard to type" it's "same" for # you need shift + 3 there
[18:34:44] <stenno> alt-gr is nasty
[18:34:50] <stenno> it requires some finger acrobatics
[18:35:11] <stenno> for example, in german layout, { is like alt-gr+7 or so
[18:35:21] <da_wunder> I use right hand tumb for that alt gr
[18:35:22] <TinoDidriksen> ~ is Alt-Gr plus the key plus then space to actually emit it. Because otherwise we get e.g. ñ
[18:35:23] <stenno> its very unnatural hand position
[18:35:32] <TinoDidriksen> # is just shift+3, no space.
[18:35:46] <stenno> luckily i switched to US layout a very long time ago
[18:36:41] <da_wunder> to type ~ is easy for me just use your right hand tump and little finger and then left hand tumb for space
[18:37:24] <stenno> hm
[18:37:47] <TinoDidriksen> But when you need 3 in a row for s~~~ then it gets annoying. s@@@ or s### is vastly faster to type.
[18:38:07] <stenno> on german layout i used to right-thumb for alt-gr, and then middle-finger for {
[18:38:09] <da_wunder> hmm, ~~~
[18:38:10] <stenno> super nasty
[18:38:21] <da_wunder> that is quite easy and fast to do - imho
[18:38:25] <stenno> ~~~
[18:38:37] <stenno> super easy on the mbp keyboard
[18:38:40] <stenno> with US layout
[18:38:55] <TinoDidriksen> US layout makes all those easy. Dead keys means you need to lift everything between each one.
[18:38:59] <stenno> yes
[18:39:08] <da_wunder> I use finnish layout
[18:39:11] <stenno> otoh i cannot type any umlauts
[18:39:21] <stenno> so whenever i need to write an email i switch to german layout
[18:39:26] <TinoDidriksen> Anyway, that all veered way off topic...
[18:39:33] <stenno> but for programming, DE layout is crap
[18:39:35] <stenno> right, true
[18:39:37] <stenno> sorry
[18:43:50] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 268 seconds)
[18:50:15] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[19:02:09] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[19:10:16] *** Quits: Simplar (~quassel@188.163.92.105) (Ping timeout: 265 seconds)
[19:12:18] *** Quits: bobdobbs (~user@2406:5a00:f027:d00:781d:17c:2a49:2ffa) (Ping timeout: 260 seconds)
[19:18:36] *** Joins: ferdna (~ferdna@user/ferdna)
[19:50:45] *** Joins: Simplar (~quassel@188.163.92.105)
[19:56:24] *** Quits: Hiccup (cHoy@2404:8000:1003:1db2::420) (Remote host closed the connection)
[19:59:51] *** Joins: genom (~g@37.214.28.227)
[20:03:55] *** Quits: ArchNoob (~maotora@user/archnoob) (Ping timeout: 265 seconds)
[20:15:24] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Quit: Given the choice between you, I'll take the sea-sick crocodile.)
[20:15:52] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[20:32:06] *** Quits: Simplar (~quassel@188.163.92.105) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[20:39:57] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[20:56:15] *** Joins: glumanda (~manu@194-208-201-025.tele.net)
[20:57:10] *** Quits: glumanda (~manu@194-208-201-025.tele.net) (Client Quit)
[21:13:54] *** Joins: Rockwood (~Rocky@user/rocky)
[21:38:55] *** Joins: semeion (~semeion@user/semeion)
[22:00:40] *** Joins: memoryleak (~memorylea@77-58-142-250.dclient.hispeed.ch)
[22:06:17] *** Joins: Alexander-47u (~Alexander@a44107.upc-a.chello.nl)
[22:06:26] <Alexander-47u> Hi guys
[22:06:28] <Alexander-47u> im trying this
[22:06:29] <Alexander-47u> https://stackoverflow.com/questions/34698016/download-pdf-from-base64-string/34698092
[22:06:57] <Alexander-47u> im using an href button to trigger an if statement, where this code is in
[22:07:06] <Alexander-47u> but when I download the pdf, its prepended with all sorts of html junk
[22:07:18] <Alexander-47u> not sure if its the get request or wordpress
[22:08:46] <Alexander-47u> I think its because im using an get request to trigger the if code block
[22:09:31] <__adrian> more likely you're just ...outputting html
[22:09:42] <__adrian> you'd need to look at your actual code to determine that
[22:09:57] <Alexander-47u> https://pastebin.com/GGCudQ51
[22:10:25] <Alexander-47u> where $invoice is binary data
[22:10:41] <__adrian> !+pastebin.com
[22:10:41] <php-bot> pastebin.com is blocked by many corporate firewalls and - in some cases - by entire countries; please don't use it for sharing code. Try something like gist.github.com; if you want to exec the PHP, try repl.it, glot.io, or 3v4l.org
[22:11:06] <__adrian> also lately .com is doing something that literally hides the paste contents for some reason
[22:11:13] <Naktibalda> there is no evidence that your code does not output any html before this
[22:11:22] <TinoDidriksen> Wordpress normally does a lot of work before your plugin is run, such as output the theme and page headers.
[22:11:39] <__adrian> yeah, if you're using wordpress, i'd think that was very likely
[22:11:47] <__adrian> all the output buffering it does
[22:11:48] <Alexander-47u> yeah how can I prevent it from injecting all sorts of nonsense
[22:11:54] <__adrian> no idea
[22:11:57] <__adrian> ask on #wordpress
[22:12:00] <Alexander-47u> my situation is, I am collecting base64 data, for an invoice
[22:12:06] <Alexander-47u> and want to create a download button
[22:12:09] <Alexander-47u> #wordpress is dead
[22:12:22] <__adrian> unfortunately, that doesn't mean it's not a wordpress question
[22:12:47] <Rockwood> __adrian, hi how are you sir?
[22:12:55] <__adrian> hi
[22:13:14] <TinoDidriksen> In your plugin, have a .php file that directly handles these requests and have the download button hit that URL.
[22:13:31] <__adrian> "direct handling" is going to be the thing
[22:15:03] <Alexander-47u> I just need an echo without worpdress injecting nonsense into it :D
[22:15:23] <TinoDidriksen> Then don't go via Wordpress.
[22:15:31] <__adrian> ^
[22:16:07] <Alexander-47u> guys, I understand that if you are a veteran programmer, you might have some ideas about wordpress. but the fact it, it gets stuff done real quick :D
[22:16:24] <Alexander-47u> so pls bare with me
[22:16:26] <TinoDidriksen> I gave the solution. I did not say don't use Wordpress.
[22:16:54] <Alexander-47u> TinoDidriksen, thanks yes, but hte problem for me in this case is, I would have to pass the invoice code to that file using GET or POST parameters
[22:17:00] <TinoDidriksen> Yes
[22:17:01] <Alexander-47u> which could easily be changed, for downloading other invoices
[22:17:03] <__adrian> this is not about anyone's opinions or like/dislike of wordpress. it's about wordpress doing things that you don't want done.
[22:17:26] <TinoDidriksen> They could easily change the href as well. It's the same.
[22:19:13] <TinoDidriksen> The non-WP php file can still load and check that they have a valid WP user and login and role, if that's the way you check access.
[22:19:38] <s17> yeah, you just include the blog header
[22:21:05] <Alexander-47u> TinoDidriksen, ye problem here is, im using an external API to retrieve an invoice
[22:21:19] <TinoDidriksen> Based on what?
[22:21:35] <Alexander-47u> so its going to be a lot of work to do proper authorization, if im going to put the entire logic in a seperate non wordpress php file
[22:21:57] <TinoDidriksen> If the auth data is in Wordpress, you can reuse that.
[22:22:13] <Alexander-47u> its not
[22:22:20] <Alexander-47u> I just have 1 api key, for everyhing
[22:22:22] <Blondie101010> Alexander-47u:  I may have missed something, but it sounds like you want the best of wordpress without really learning how to use it "properly"
[22:22:47] <__adrian> to clarify my earlier statement - yes, wp is doing stuff you don't want. but it's likely that it doesn't _have to_. that's why you need to ask your question of people that know a lot about wordpress and are intent on answering wordpress questions.
[22:23:40] <Alexander-47u> __adrian, yes, very true, probably some way to have it stop injecting stuff into everything
[22:23:48] <TinoDidriksen> The API key and request code can go in a library file. But you must have some way for the user to say which invoice to fetch.
[22:24:35] <Alexander-47u> TinoDidriksen, exactly. right now im just doing cheap tricks, with a single hardcoded user meta field, which has the debtorcode
[22:24:49] <TinoDidriksen> Ok, so the data IS in Wordpress...
[22:25:04] <Alexander-47u> ye sorry, I misunderstood what you meant
[22:25:16] <Alexander-47u> only the debtorcode
[22:25:20] <Alexander-47u> is in wordpress
[22:25:51] <TinoDidriksen> Alexander-47u, https://3v4l.org/2tEgN is how you can load the parts of Wordpress that you need, without getting any headers or themes or pages. You'll get the user, as in Wordpress, and all Wordpress' APIs, but nothing else automatic. Then you can go from there.
[22:28:42] *** Joins: glumanda (~manu@194-208-201-025.tele.net)
[22:28:45] <Alexander-47u> Thansk buddy!
[22:28:49] <Alexander-47u> this can work indeed
[22:28:50] <Alexander-47u> :)
[22:28:56] <TinoDidriksen> I use Wordpress as a user management system, so I have a lot of pages that does exactly this.
[22:32:54] <Blondie101010> I once wanted a quick solution so I used a WP php plugin to do the equivalent :)
[22:40:46] *** Joins: lembron (~admin@user/lembron)
[22:41:48] *** Quits: glumanda (~manu@194-208-201-025.tele.net) (Quit: WeeChat 3.2.1)
[22:42:00] <lembron> hi, phpunit, even when diving in the code i only find "Adds a directory to the whitelist (recursively)." and the docs are _very_ sparse... - is there nothing NOT recursive? ( https://phpunit.de/manual/6.5/en/appendixes.configuration.html#appendixes.configuration.whitelisting-files )
[22:44:14] <Blondie101010> the point of phpunit is to get proper test coverage, not as minimal as possible, so I really don't get your logic or approach
[22:44:33] <Blondie101010> put the directory as shown in your link and add the *few* exclusions you want
[22:48:22] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[22:50:04] <TML> lembron: if you don't want to allowlist the whole tree, make a new directory and symlink just the files you want to use, and then allowlist _that_ directory
[22:52:19] <lembron> blacklisting doesnt help there as it still "adds everything, then walks the array again and removes" so things still blow in the meantime
[22:53:51] <lembron> dont see how symlinking helps.... if anything id go crazy and "onion-fs to delete all dirs" with a line of bash :/
[22:55:06] <TinoDidriksen> PHP also doesn't behave well with symlinks. It's awful and wrong, but sadly wontfix behavior.
[22:58:08] <__adrian> for this use case, it would be fine
[22:58:57] <__adrian> phpunit also has a @group feature
[23:07:24] *** Joins: ArchNoob (~maotora@user/archnoob)
[23:11:27] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Ping timeout: 265 seconds)
[23:26:21] *** Joins: glumanda (~manu@194-208-201-025.tele.net)
[23:27:44] *** Quits: glumanda (~manu@194-208-201-025.tele.net) (Client Quit)
[23:28:58] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[23:42:48] *** Quits: Alexander-47u (~Alexander@a44107.upc-a.chello.nl) (Quit: Leaving)
[23:45:44] *** Joins: guido (~guido@host-87-17-251-50.retail.telecomitalia.it)
[23:46:05] <TML> TinoDidriksen: What do you mean "PHP doesn't behave well with symlinks"?
[23:46:42] <TML> I cannot even fathom what you might mean by that - I have dozens of websites setup using massive symlink farms
[23:47:27] <TML> I use a symlink farm to share a single copy of the wordpress codebase for all my users, so that I only have to go upgrade wordpress in /srv/master/wordpress and all their sites are upgraded
[23:47:58] <TinoDidriksen> For non-code files, sure symlinks works as they should. PHP itself misbehaves badly wrt. symlinks. __DIR__ and __FILE__ are completely wrong - they're resolved, when they really really should not be.
[23:55:14] <Blondie101010> that's a bad assumption actually
[23:55:45] <Blondie101010> but it does explain your problem using them
[23:55:47] <TinoDidriksen> Nope. No other tool or language works the way PHP does.
[23:55:55] <Blondie101010> so what
[23:56:14] <Blondie101010> you notice that, clarify the situation, and bypass it
[23:56:58] <Blondie101010> __DIR__ on a symlink is looking for trouble
[23:57:38] <TinoDidriksen> Unfortunately, there is no bypass. It means I can't share code via symlinks, because they will then look for files in the wrong places.
[23:57:58] <TML> TinoDidriksen: Of course no other tool or language works the way PHP does. If they did, there wouldn't be any reason for PHP to exist, we'd just direct everyone to that tool or language.
[23:58:19] <TML> TinoDidriksen: You can share code using symlinks just fine, you just can't use __FILE__ or __DIR__
[23:59:00] <TML> Use a calculated absolute path off of PWD (or the equivalent for your SAPI)
