[00:01:25] <arch> Ooh! I thought that comparison was going to be a lot less flattering
[00:01:29] *** Quits: nomic (~nomic@185.192.69.10) (Quit: Leaving)
[00:01:39] <eXtr3m0> yes but sorry calc() is missing. Here is one from 2017 https://lisilinhart.info/posts/css-variables-performance/
[00:01:40] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[00:01:40] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[00:01:40] *** Joins: wroathe (~wroathe@user/wroathe)
[00:01:47] *** Joins: nomic (~nomic@185.192.69.10)
[00:01:57] *** Quits: xsperry (~xs@user/xsperry) (Ping timeout: 240 seconds)
[00:03:33] <eXtr3m0> Wow yeah that seems crazy. much better to calculate a px value with js and apply it inline
[00:03:34] <arch> Gosh, that post really makes me think I should give browsers more credit
[00:03:34] <arch> I'll still respect calc() and not overuse it, but this is extremely encouraging
[00:04:11] *** Joins: mknod (~mknod@user/mknod)
[00:04:57] *** Joins: Wizzzzzy (~wizzzzzy@185.69.145.173)
[00:05:30] <eXtr3m0> But yeah then again this is 5 years old.
[00:06:09] <arch> Mhm! It's also using JS to set CSS, which means that comparisons to computing things in JS might be a bit unfair
[00:06:30] <arch> But the variables in those iterations are actually a lot more performant that I was worried they would be--even five years ago
[00:06:44] <arch> s/variables/cals/
[00:06:52] <arch> calcs even
[00:08:50] <arch> Even the slowest in the screenshot is over 2000 operations per second (Meaning 1 would be cost half a millisecond), and that's including the part where they are updating the objects in JS with new style attributes, which already has performance implications
[00:09:58] <eXtr3m0> I find them most handy in regards of responsiveness for the layout and for little details
[00:10:05] <arch> Me too!
[00:10:50] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[00:11:10] *** Joins: gproto23 (~gproto23@user/gproto23)
[00:15:06] *** Quits: harriet_tubman (~harriet_t@209.202.223.146) (Quit: Client closed)
[00:16:52] <alystair> arch visual logic extraction and context flag toggling is a core component of my upcoming library, glad to know others feel the same way
[00:17:42] <alystair> Using it as a work around for the limitations of prefers-color-scheme...
[00:20:12] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[00:20:53] <arch> alystair: Heck yeah! That's how I write most of the things where that can make sense
[00:21:42] <arch> Like, usually a class API where throwing a class on certain elements gives it a certain piece of behavior, and all of the visual parts of it are handled with CSS
[00:23:35] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[00:24:38] *** Quits: anderson_ (~anderson@176.106.245.98) (Ping timeout: 268 seconds)
[00:25:17] <arch> So like, giving a normal input a .calendarPlz class will turn it into a clickable thing that pops up a calendar
[00:25:18] <arch> Or .delete on a link will make it request a data attribute on it with a delete request
[00:25:18] <arch> .careful makes a confirmation pop up before doing other logic
[00:25:18] <arch> etc...
[00:25:21] <arch> All of this stuff has visual details, but if I just use those same classes, it's easy enough to just make those appear correctly no matter where I do those things
[00:25:49] <alystair> I went a step beyond and created negation logic
[00:26:04] <arch> It means that like, 40% of the time when I need to implement something new, all I need to do is just write a little bit of HTML and give them some classes
[00:26:11] <arch> alystair: Oooh!
[00:26:16] *** Joins: pavonia (~user@user/siracusa)
[00:28:29] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[00:30:34] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[00:32:13] *** Joins: matsaman (~matsaman@user/matsaman)
[00:32:27] *** Quits: onosendi (~onosendi@user/onosendi) (Ping timeout: 256 seconds)
[00:34:09] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:34:17] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc) (Ping timeout: 240 seconds)
[00:34:25] *** Quits: onizu (uid373383@id-373383.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[00:34:44] *** Joins: ultsllt (~ultsllt@50.231.5.242)
[00:38:16] *** Quits: flameboi (dgw@user/flameboi) (Quit: Ping timeout (120 seconds))
[00:38:34] *** Joins: flameboi (dgw@user/flameboi)
[00:38:48] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:2447:e568:11bd:7d06)
[00:40:34] *** Quits: lispy (~lispy4@84.69.59.93) (Quit: Leaving)
[00:42:45] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:2447:e568:11bd:7d06) (Client Quit)
[00:43:17] *** Joins: sam_1 (~sam_1@87.51.251.118)
[00:43:47] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Ping timeout: 256 seconds)
[00:44:19] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[00:44:46] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[00:47:32] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 240 seconds)
[00:47:57] <buu> htmx
[00:57:43] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[01:00:13] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[01:01:01] *** Quits: c4017w__ (~c4017@2605:8d80:4e1:336:6462:cec4:311f:f3ce) (Ping timeout: 240 seconds)
[01:06:52] *** Quits: Nitrousoxide (~msdos@user/nitrousoxide) (Read error: Connection reset by peer)
[01:07:08] *** Joins: Nitrousoxide (~msdos@user/nitrousoxide)
[01:08:02] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[01:08:17] *** Joins: wroathe (~wroathe@user/wroathe)
[01:09:37] <ljharb> kijix\: you're not authed, so only ops can see what you say. see the last link in the topic.
[01:12:07] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 268 seconds)
[01:12:41] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[01:12:53] *** Joins: Bishop_Bautista (~Bishop_Ba@174-087-246-009.res.spectrum.com)
[01:13:03] *** stenno is now known as h\e[30mllo
[01:13:11] *** h\e[30mllo is now known as stenno
[01:14:04] *** Quits: Nitrousoxide (~msdos@user/nitrousoxide) (Ping timeout: 250 seconds)
[01:14:19] *** Joins: Nitrousoxide (~msdos@user/nitrousoxide)
[01:14:22] *** Quits: relms (~relms@user/relms) (Quit: Ping timeout (120 seconds))
[01:14:26] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[01:14:28] *** Joins: c4017w (~c4017@209.52.68.8)
[01:14:49] *** Joins: relms (~relms@user/relms)
[01:16:03] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[01:17:02] *** Joins: onosendi (~onosendi@user/onosendi)
[01:17:32] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[01:18:08] <Bishop_Bautista> HI is there a good group in Libera for css questions?
[01:18:30] <ljharb> #css i presume
[01:18:53] <Bishop_Bautista> thank you @ljharb
[01:18:55] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[01:21:26] *** Quits: onosendi (~onosendi@user/onosendi) (Ping timeout: 250 seconds)
[01:21:57] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[01:22:07] *** Quits: Intelo (~Intelo@88.244.94.93) (Ping timeout: 256 seconds)
[01:23:08] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[01:25:35] *** Joins: theibbster[m] (~theibbste@2001:470:69fc:105::1:7819)
[01:28:17] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Quit: Client closed)
[01:28:50] *** Parts: theibbster[m] (~theibbste@2001:470:69fc:105::1:7819) ()
[01:32:37] *** Parts: kijix\ (~shinomori@c-73-143-164-176.hsd1.ct.comcast.net) ()
[01:35:02] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 240 seconds)
[01:38:01] *** Joins: kijix (~shinomori@c-73-143-164-176.hsd1.ct.comcast.net)
[01:42:10] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Quit: ThePhilgrim)
[01:48:25] *** Quits: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[01:50:51] *** Quits: oscurochu (~oscurochu@2603:9000:c202:1034:3d68:e938:5362:5275) (Remote host closed the connection)
[01:51:09] *** Joins: oscurochu (~oscurochu@2603:9000:c202:1034:3d68:e938:5362:5275)
[01:53:47] <eXtr3m0> OT arch:  look at this one. (resize window) https://jsfiddle.net/fd8nza9v/ not even using calc(). :D
[01:54:16] *** Quits: flameboi (dgw@user/flameboi) (Read error: Connection reset by peer)
[01:54:54] *** Joins: flameboi (~flameboi@user/flameboi)
[01:56:21] <arch> eXtr3m0: Ooh! That's pretty
[01:56:51] *** Joins: tomasz (~tomasz@user/tomasz)
[01:57:51] *** Joins: sveinse (~sveinse@2a01:799:55e:1000:c23f:d5ff:fe69:c6fb)
[01:59:57] *** Joins: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au)
[02:00:25] *** Joins: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com)
[02:00:52] *** Quits: pmercado (~pmercado@186.107.59.154) (Ping timeout: 250 seconds)
[02:02:41] *** Quits: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com) (Client Quit)
[02:05:04] *** Joins: onosendi (~onosendi@user/onosendi)
[02:05:14] <mknod> systemfault, that goes even more into details than what I linked before, in case you give a damn. https://ramblings.mcpher.com/apps-script/apps-script-v8/multiple-script-files/#Multiple_Script_Files_The_problem
[02:06:30] *** Quits: tomasz (~tomasz@user/tomasz) (Ping timeout: 250 seconds)
[02:07:17] *** Quits: admin123 (~harrymore@47.18.246.203) (Ping timeout: 240 seconds)
[02:07:39] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 256 seconds)
[02:09:17] *** Quits: onosendi (~onosendi@user/onosendi) (Ping timeout: 240 seconds)
[02:09:21] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[02:10:21] *** Quits: pulse (~pulse@user/pulse) (Read error: Connection reset by peer)
[02:10:28] *** Quits: salad1 (~cucumber@82.76.150.118) (Quit: salad1)
[02:11:09] *** Joins: pulse (~pulse@user/pulse)
[02:12:41] <mknod> I'm still failing to understand why an IEF is used in this case: https://termbin.com/qyh5
[02:13:20] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Quit: Leaving)
[02:13:38] *** Quits: DrowningElysium (uid190788@user/drowningelysium) (Quit: Connection closed for inactivity)
[02:14:12] <systemfault> No reason
[02:14:48] *** Joins: c4017w_ (~c4017@209.52.68.8)
[02:15:00] <systemfault> You could make a constant for the "base url" and it would be inside the IIFE
[02:17:17] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[02:18:25] *** Quits: c4017w (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[02:18:43] *** Joins: junebug (~junebug@2600:1700:3db0:2540:5083:9a19:ef3c:a16e)
[02:19:57] *** Quits: Camilo (~hugh@host-92-1-126-125.as13285.net) (Ping timeout: 268 seconds)
[02:20:26] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[02:24:36] *** Joins: admin123 (~harrymore@47.23.53.26)
[02:28:38] *** Quits: cotko_ (~cotko@188-230-251-153.dynamic.t-2.net) (Remote host closed the connection)
[02:29:04] *** Joins: wroathe (~wroathe@user/wroathe)
[02:29:53] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[02:30:01] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:19] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[02:30:27] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:31:02] *** Joins: onosendi (~onosendi@user/onosendi)
[02:32:03] *** Quits: simon816 (~simon816@ec2-35-178-246-72.eu-west-2.compute.amazonaws.com) (Read error: Connection reset by peer)
[02:32:35] *** Quits: Wizzzzzy (~wizzzzzy@185.69.145.173) (Ping timeout: 256 seconds)
[02:33:43] *** Quits: pizdets_ (~pizdets@183.182.115.221) (Ping timeout: 256 seconds)
[02:33:43] *** Quits: dmanto (~dmanto@181.110.55.80) (Ping timeout: 256 seconds)
[02:34:10] *** Joins: pizdets (~pizdets@183.182.114.221)
[02:35:32] *** Quits: onosendi (~onosendi@user/onosendi) (Ping timeout: 240 seconds)
[02:35:52] *** Joins: simon816 (~simon816@ec2-35-178-246-72.eu-west-2.compute.amazonaws.com)
[02:35:56] *** Joins: pulse_ (~pulse@user/pulse)
[02:36:44] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[02:38:49] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[02:43:16] *** Joins: matsaman (~matsaman@user/matsaman)
[02:43:54] *** Joins: Maxattax97 (~max@2603:300f:b9f:2000::b278)
[02:45:35] *** Quits: lilmonkey (~lilmonkey@user/lilmonkey) (Read error: Connection reset by peer)
[02:46:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[02:49:21] *** Joins: lilmonkey (~lilmonkey@user/lilmonkey)
[02:54:29] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[02:54:33] *** Quits: ultsllt (~ultsllt@50.231.5.242) (Remote host closed the connection)
[02:54:44] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[02:54:44] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[02:54:44] *** Joins: wroathe (~wroathe@user/wroathe)
[02:59:25] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[02:59:37] *** Quits: Maxattax97 (~max@2603:300f:b9f:2000::b278) (Remote host closed the connection)
[03:00:00] *** Quits: c4017w_ (~c4017@209.52.68.8) (Quit: Leaving)
[03:01:13] <oscurochu> are there any open source ecommerse platforms for javascript?
[03:01:49] *** Joins: Buoy172 (~Buoy172@95.86.30.159)
[03:01:54] *** Quits: optimist (~optimist@27.57.127.39) (Read error: Connection reset by peer)
[03:02:13] *** Joins: optimist (~optimist@27.57.127.39)
[03:02:20] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[03:02:24] *** Joins: mat001_ (~mat001@213.143.69.121)
[03:03:06] *** Joins: src (~src@user/src)
[03:03:57] *** Quits: mat001 (~mat001@72.28.108.216) (Ping timeout: 240 seconds)
[03:04:17] *** Quits: junebug (~junebug@2600:1700:3db0:2540:5083:9a19:ef3c:a16e) (Ping timeout: 240 seconds)
[03:04:26] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:04:26] *** Quits: mat001_ (~mat001@213.143.69.121) (Remote host closed the connection)
[03:08:01] *** Joins: c4017w (~c4017@209.52.68.8)
[03:08:14] *** Quits: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se) (Quit: Leaving)
[03:09:37] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:8d4d:eeb3:fd66:5d10) (Ping timeout: 240 seconds)
[03:09:42] *** Joins: optimist_ (~optimist@27.57.127.39)
[03:10:30] *** Joins: chao (~stenno@user/stenno)
[03:10:33] *** Quits: optimist (~optimist@27.57.127.39) (Read error: Connection reset by peer)
[03:10:38] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 250 seconds)
[03:10:54] *** Joins: optimist (~optimist@27.57.127.39)
[03:11:11] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[03:12:06] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:939:6a42:860e:8603)
[03:13:57] *** Quits: optimist_ (~optimist@27.57.127.39) (Ping timeout: 240 seconds)
[03:13:57] *** Quits: paule32 (~paul@user/paule32) (Ping timeout: 256 seconds)
[03:14:13] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 268 seconds)
[03:15:14] *** Quits: kill (~killown@user/killown) (Quit: Leaving)
[03:15:37] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[03:19:53] *** Quits: morgabra (sid500580@user/morgabra) (Quit: Connection closed for inactivity)
[03:22:33] <jaawerth> one might say there is a plethora of them
[03:22:36] <jaawerth> in the truest sense of the word
[03:23:47] <jaawerth> not my problem domain so oI can't really telll you what's good from experience but if you cruise a few top N lists I'm sure you'll see the same 4-5 show up on all of them, when in doubt you might as well start there ;)
[03:25:01] <theskillwithin> i'm making one currently using KeystoneJS,  but I wouldn't call it an ecommerce platform,  its just a really flexible framework
[03:25:08] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc)
[03:25:53] *** Quits: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net) (Ping timeout: 252 seconds)
[03:27:55] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[03:28:29] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[03:29:15] *** Quits: kakashiAL (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[03:29:17] *** Joins: Reign (~Username@ip98-161-226-10.ph.ph.cox.net)
[03:29:32] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[03:35:14] *** Joins: mat001 (~mat001@213.143.69.121)
[03:37:49] *** Joins: Talon_ (Talon@172.77.118.48)
[03:39:01] *** Parts: arch (~user@2604:3d09:2083:6000:9079:4fd6:f7ea:ece4) (ERC (IRC client for Emacs 26.3))
[03:39:24] *** Quits: trafficjam (~qubes@2001:8004:5190:2c63:a183:c5e0:d4bb:13db) (Read error: Connection reset by peer)
[03:39:27] *** Quits: Talon (Talon@172.77.118.229) (Ping timeout: 256 seconds)
[03:39:57] *** Quits: mat001 (~mat001@213.143.69.121) (Ping timeout: 240 seconds)
[03:41:12] *** Joins: SevenCats (~SevenCats@135-23-44-80.cpe.pppoe.ca)
[03:43:53] *** Joins: kakashiAL (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de)
[03:44:08] *** Joins: trafficjam (~qubes@2001:8004:5190:2c63:1e11:30c:39d0:9b3c)
[03:49:02] *** Joins: junebug (~junebug@2600:1700:3db0:2540:a681:4423:a77:ee92)
[03:49:37] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 240 seconds)
[03:51:37] *** Joins: chao (~stenno@user/stenno)
[03:52:54] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[03:53:57] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:939:6a42:860e:8603) (Ping timeout: 240 seconds)
[03:59:08] *** Joins: onosendi (~onosendi@user/onosendi)
[04:01:30] *** Quits: onosendi (~onosendi@user/onosendi) (Client Quit)
[04:01:38] *** Joins: codingcampbell (~codingcam@user/codingcampbell)
[04:01:55] *** Quits: codingcampbell (~codingcam@user/codingcampbell) (Client Quit)
[04:02:32] *** Joins: codingcampbell (~codingcam@user/codingcampbell)
[04:03:37] *** Quits: admin123 (~harrymore@47.23.53.26) (Ping timeout: 240 seconds)
[04:03:48] *** Joins: poiqwepoiqwe (~poiqwepoi@120.17.107.161)
[04:04:11] *** Quits: codingcampbell (~codingcam@user/codingcampbell) (Client Quit)
[04:05:20] *** Joins: codingcampbell (~codingcam@user/codingcampbell)
[04:05:31] *** Joins: Betal (~Betal@user/betal)
[04:08:43] *** Joins: c4017w_ (~c4017@209.52.68.8)
[04:08:53] *** Joins: ferdna (~ferdna@user/ferdna)
[04:12:19] *** Quits: c4017w (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[04:16:17] *** Quits: junebug (~junebug@2600:1700:3db0:2540:a681:4423:a77:ee92) (Ping timeout: 240 seconds)
[04:16:51] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (Ping timeout: 256 seconds)
[04:17:26] *** Joins: junebug (~junebug@2600:1700:3db0:2540:b8e6:a00d:e4f6:213e)
[04:18:13] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[04:18:21] *** Quits: junebug (~junebug@2600:1700:3db0:2540:b8e6:a00d:e4f6:213e) (Remote host closed the connection)
[04:18:44] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[04:18:58] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Ping timeout: 268 seconds)
[04:21:00] *** pulse_ is now known as pulse
[04:22:32] *** Joins: chenqisu1 (~bhca7d@183.217.200.249)
[04:23:39] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[04:24:59] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[04:25:56] *** Joins: BSaboia (~bsaboia@2a05:f480:1400:b88:5400:3ff:fe51:575c)
[04:26:14] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-65df-a0f5-02cd-1378.res6.spectrum.com) (Remote host closed the connection)
[04:27:07] *** Joins: Lenkov45 (~Lenkov45@45.133.193.22)
[04:28:05] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[04:28:06] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[04:28:06] *** Joins: wroathe (~wroathe@user/wroathe)
[04:28:34] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[04:29:28] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:b52d:73d3:33d2:6e5)
[04:29:53] *** Quits: flameboi (~flameboi@user/flameboi) (Ping timeout: 256 seconds)
[04:35:08] *** Quits: mknod (~mknod@user/mknod) (Quit: mknod)
[04:35:37] *** Quits: stagas (~stagas@2a02:587:c425:4449:79ec:866f:daf9:3124) (Ping timeout: 268 seconds)
[04:36:20] *** Quits: poiqwepoiqwe (~poiqwepoi@120.17.107.161) (Quit: Client closed)
[04:37:31] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[04:37:47] <banana_> hey anyone good at simplifying boolean expressions?
[04:38:15] <Buoy172> banana_: shoot
[04:39:28] <banana_> ( !A && !(B && C) ) || ( A && (B && !C) )
[04:39:30] *** Joins: poiqwepoiqwe (~poiqwepoi@120.17.107.161)
[04:40:27] <banana_> help me god
[04:42:49] <Buoy172> I don't know if this can be simplified
[04:44:09] <banana_> damn
[04:44:21] *** Joins: gehn (~gehn@user/gehn)
[04:46:59] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Quit: Client closed)
[04:47:37] *** Quits: Lenkov45 (~Lenkov45@45.133.193.22) (Ping timeout: 240 seconds)
[04:48:30] *** Joins: mat001 (~mat001@213.143.69.121)
[04:50:02] *** Quits: kakashiAL (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[04:50:22] *** Joins: Lenkov45 (~Lenkov45@196.240.128.84)
[04:51:34] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[04:52:37] *** Quits: mat001 (~mat001@213.143.69.121) (Ping timeout: 240 seconds)
[04:53:07] <theskillwithin> the A && is prob pointlress because if A was falsey it wouldn't have gotten that far
[04:53:31] <theskillwithin> easier to think about it when theres like a jsfiddle example of whats really going on, instead of arbitrary variables
[04:53:32] *** Joins: z_lehinsun (~lehinsun@188.113.178.220)
[04:54:37] *** Quits: Lenkov45 (~Lenkov45@196.240.128.84) (Ping timeout: 240 seconds)
[04:56:09] <oscurochu> var notBAndC = !(B && C) ); var notAnotBnotC = !A && notBAndC; var bAndNotC = (B && !C); var aAndBandNotC = A && bandNotC; if ( bandNotC || bAndNotC )
[04:56:27] <banana_> so yore thinking short circuiting the code so A isnt a factor?
[04:56:41] *** Joins: Lenkov45 (~Lenkov45@45.133.193.26)
[04:58:03] *** Joins: re101-llama-44 (~re101-lla@204.128.182.24)
[04:58:41] *** Quits: re101-llama-44 (~re101-lla@204.128.182.24) (Quit: Client closed)
[04:58:55] <banana_> my brains frie
[04:58:57] <banana_> fried
[04:59:40] <oscurochu> 3 rules i follow: every statement inside of () should be in a variable. groups of && should have its own variable, groups of || should have its own variable. the 2nd and 3rd rule is done this way automatically in lisp languages.
[05:00:13] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[05:00:57] <oscurochu> lisp example for &&: (and exrp1 expr2 exr3)
[05:01:08] <oscurochu> lisp example for ||: (or exrp1 expr2 exr3)
[05:01:46] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) ()
[05:02:40] *** Joins: kakashiAL (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de)
[05:03:11] <oscurochu> its the only sane way, in my opinion, to structure logic.
[05:03:22] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 268 seconds)
[05:05:01] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[05:05:37] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:b52d:73d3:33d2:6e5) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[05:07:12] *** Quits: kakashiAL (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[05:07:39] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[05:09:14] *** Joins: c4017w__ (~c4017@209.52.68.8)
[05:12:57] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[05:15:09] *** Joins: vysn (~vysn@user/vysn)
[05:17:57] *** Quits: oscurochu (~oscurochu@2603:9000:c202:1034:3d68:e938:5362:5275) (Ping timeout: 240 seconds)
[05:19:25] *** Joins: oscurochu (~oscurochu@2603-9000-c202-1034-3d68-e938-5362-5275.inf6.spectrum.com)
[05:19:57] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[05:20:17] *** Joins: kakashiAL (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de)
[05:22:22] *** Quits: Aljone (~Aljone1@77.125.193.245) (Ping timeout: 250 seconds)
[05:23:26] *** Joins: Aljone (~Aljone1@87.70.206.164)
[05:24:32] *** Quits: kakashiAL (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[05:26:24] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Quit: WeeChat 2.8)
[05:27:51] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[05:28:21] *** Joins: jazzy (~jaziz@user/jaziz)
[05:28:36] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[05:35:22] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 250 seconds)
[05:37:57] <wroathe> banana_: You still around?
[05:38:03] <wroathe> banana_: https://gist.github.com/JustinChristensen/affd7d3d69661bf984e1aef841e643c3
[05:38:22] <wroathe> Although that doesn't necessarily apply to JS, because A, B, or C in your expression might have side effects
[05:38:34] <wroathe> And so that simplified expression wouldn't be semantically the same if that were the case
[05:38:50] <chao> !B || B ?
[05:39:25] <wroathe> chao: what about it? && binds tighter
[05:40:19] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[05:41:26] *** Quits: kijix (~shinomori@c-73-143-164-176.hsd1.ct.comcast.net) (Ping timeout: 250 seconds)
[05:41:52] *** Joins: kakashiAL (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de)
[05:42:07] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[05:48:30] <wroathe> Oh shit, my work is wrong
[05:48:37] *** Quits: eXtr3m0 (~eXtr3m0@user/eXtr3m0) (Ping timeout: 240 seconds)
[05:48:40] <wroathe> Well, the answer is right, but I need to go back to the drawing board
[05:50:57] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[05:51:32] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 240 seconds)
[05:53:05] *** Quits: poiqwepoiqwe (~poiqwepoi@120.17.107.161) (Quit: Client closed)
[05:53:38] <KevinX> https://www.wolframalpha.com/input/?i=%28+%21A+%26%26+%21%28B+%26%26+C%29+%29+%7C%7C+%28+A+%26%26+%28B+%26%26+%21C%29+%29
[05:53:51] <KevinX> might help
[05:53:56] *** Joins: kadams (~kadams@user/kadams)
[05:54:29] <wroathe> Ha, that's how I knew the answer was right ;)
[05:54:42] <wroathe> Just trying to flex my boolean algebra muscle for the first time in like a decade
[05:56:42] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[05:58:06] *** Joins: pmercado (~pmercado@186.107.59.154)
[05:59:48] *** Joins: keypusher (keypusher@user/keypusher)
[06:01:17] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[06:03:52] *** Joins: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net)
[06:03:52] *** Joins: mat001 (~mat001@213.143.69.121)
[06:04:11] *** Joins: matsaman (~matsaman@user/matsaman)
[06:08:18] *** Quits: mat001 (~mat001@213.143.69.121) (Ping timeout: 250 seconds)
[06:08:20] <KevinX> :P
[06:09:43] *** Joins: c4017w_ (~c4017@209.52.68.8)
[06:11:17] *** Quits: Betal (~Betal@user/betal) (Ping timeout: 240 seconds)
[06:13:35] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[06:13:48] *** Joins: Betal (~Betal@user/betal)
[06:14:25] *** Quits: Buoy172 (~Buoy172@95.86.30.159) (Remote host closed the connection)
[06:15:56] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[06:16:37] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Quit: Client closed)
[06:16:45] *** Quits: llorllale (~llorllale@198.98.119.85) (Quit: WeeChat 3.4)
[06:20:22] *** Quits: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:20:38] *** Joins: aeyxa (~aeyxa@EPLICA-CORP.bar1.SanDiego1.Level3.net)
[06:24:28] *** Joins: llorllale (~llorllale@198.98.119.85)
[06:25:37] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[06:27:08] <jaawerth> I had a an electrical/computer engineering prof (didn't stick with the major but the prof was great) in school who drilled us so hard on De Morgan's THeorem that I wouldn't be surprised if it's the last thing I recall on my deathbed
[06:27:48] <jaawerth> that and hex/binary/decimal headmath
[06:27:51] *** Quits: trafficjam (~qubes@2001:8004:5190:2c63:1e11:30c:39d0:9b3c) (Read error: Connection reset by peer)
[06:28:11] <jaawerth> which actually *does* come in handy, lol
[06:28:25] <jaawerth> welwl so does boolean algebra
[06:28:57] <jaawerth> meanwhile I'm not even sure when the last time I solved a differential equation..
[06:30:40] *** Parts: aeyxa (~aeyxa@EPLICA-CORP.bar1.SanDiego1.Level3.net) ()
[06:33:18] <gehn> well, most differential equations aren't solvable
[06:33:21] <gehn> at least, not analytically
[06:33:33] <jaawerth> got me there
[06:33:34] <gehn> there's only like 3 basic classes that are actually "solvable" so to speak
[06:33:35] *** Quits: LtHummus (~lthummus@97-126-121-3.tukw.qwest.net) (Quit: ZNC 1.8.2 - https://znc.in)
[06:33:44] <jaawerth> all that schoolin' was just a cruel trick
[06:34:04] <jaawerth> it's all power series in the ened haha
[06:34:05] <gehn> heh, well... I mean to be fair it's good practice to know how to do it
[06:34:12] *** Joins: trafficjam (~qubes@2001:8004:5190:2c63:1e11:30c:39d0:9b3c)
[06:34:12] <jaawerth> yeah I'm just kidding
[06:34:14] <gehn> but yeah, like... NASA basically does everything Kerbal Space Program style
[06:34:19] <gehn> you just simulate the equation
[06:34:29] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[06:34:36] <jaawerth> I mean even the undergrad level math is close enough for astrophysics half the time
[06:34:44] <jaawerth> that's what I loved about astrophysics
[06:34:59] <jaawerth> the "spherical cow" physicist assumptions... actually work pretty well!
[06:35:29] <gehn> https://www.reddit.com/r/interestingasfuck/comments/3j96p1/aerodynamics_of_a_cow/
[06:35:31] <jaawerth> drag coefficients are for suckers
[06:35:49] <jaawerth> lol
[06:36:07] <gehn> because of course someone did that XD
[06:36:18] <jaawerth> hold up
[06:36:41] <jaawerth> a whole-ass reddit thread thread and nobody even *says* "spherical cow"
[06:36:52] <jaawerth> OP is obviously a reference but stillll
[06:37:36] <jaawerth> also this might as well be #physics now, programming is over. I ruined it today
[06:38:28] *** Joins: matsaman (~matsaman@user/matsaman)
[06:39:01] <jaawerth> programming is now cursed, my bad https://gist.github.com/jaawerth/7501b0ae26ce82dbad76a51ecb8cdb78
[06:40:13] *** Quits: kakashiAL (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[06:43:40] *** Joins: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net)
[06:43:41] *** Quits: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:43:53] *** Joins: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net)
[06:49:11] *** Joins: paule32 (~paul@nat-91-137-26-13.net.encoline.de)
[06:49:11] *** Quits: paule32 (~paul@nat-91-137-26-13.net.encoline.de) (Changing host)
[06:49:11] *** Joins: paule32 (~paul@user/paule32)
[06:49:43] *** Quits: pavonia (~user@user/siracusa) (Read error: Connection reset by peer)
[06:49:49] *** Joins: dragoonEarth (~dragoonEa@2601:1c0:6b00:8880:142e:4ad5:fe42:8d95)
[06:51:42] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[06:53:19] *** Joins: kakashiAL (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de)
[06:59:39] *** Joins: teut (~teut@2401:4900:1c68:97ee:f019:e976:f8bd:9ca2)
[07:00:08] *** Joins: pavonia (~user@user/siracusa)
[07:02:22] <systemfault> OH NO
[07:03:28] <matsaman> a snake
[07:04:44] <oscurochu> badgerbadegrbadgerbadgerbadger
[07:05:21] <dragoonEarth> mushroom mushroom
[07:10:14] *** Joins: c4017w__ (~c4017@209.52.68.8)
[07:11:09] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:2447:e568:11bd:7d06)
[07:13:39] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[07:14:16] <jaawerth> lol that brings me back
[07:14:21] *** Joins: Rockwood (~Rocky@user/rocky)
[07:14:33] <jaawerth> that meme is like a sophomore in college or something by now
[07:14:45] <jaawerth> ok not *quite*
[07:21:55] *** Quits: optimist (~optimist@27.57.127.39) (Remote host closed the connection)
[07:23:51] *** Joins: easbarba` (~user@177.43.146.7.dynamic.adsl.gvt.net.br)
[07:24:30] <dragoonEarth> I've got a javascript question, In Chrome Dev-tools console, it's allowing me to access my function or variables outside of their scope (for example, I can access functions or variables declared with let or const outside a function).
[07:25:26] <matsaman> ?
[07:25:32] <dragoonEarth> For example, the output of this https://gist.github.com/victorfeight/eb35734a0fd96df612958c8df284d8d0  in Devtools console is 1, whereas in RunJS or JS-Fiddle (or firefox dev console) it's correctly "f is undefined". I'm wondering if this is an optimization or something in chrome
[07:25:49] *** Quits: easbarba (~user@2804:1b2:81:9dbd:11f6:c867:c4b4:8ad3) (Ping timeout: 268 seconds)
[07:26:17] <matsaman> dev tools are not reality
[07:26:31] <matsaman> doesn't mean you aren't misunderstanding something, but they're not reality
[07:26:56] <systemfault> "f" is simply not accessible.
[07:27:54] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[07:28:16] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[07:28:31] <dragoonEarth> yea...the "dev tools is not a reality" makes sense lol. Reason I'm asking is I was watching a video on closures and chrome devtools console output was not aligning to the video
[07:29:02] <matsaman> that could also just be bad/lazy/sloppy video editing
[07:29:14] <matsaman> very common with video tutelage
[07:29:23] <matsaman> because it's an extremely inefficient way to convey most information
[07:29:32] <matsaman> and takes a ton of work to make a polished end result
[07:29:49] <matsaman> and then _on top of that_, someone instructors are just dumb and full of crap
[07:29:53] <matsaman> sometimes*
[07:33:33] <dragoonEarth> Yea, sometimes there are inaccuracies or outdated informations. To make my question more clear, I uploaded the output from RunJS vs Chrome devtools with the same code. It's funny because Chrome can access the block-scoped 'i' value, but RunJS (using Node I believe) correctly shows a reference error.
[07:33:39] <dragoonEarth> https://i.imgur.com/Lxa5Y2u.png
[07:34:32] *** Quits: oscurochu (~oscurochu@2603-9000-c202-1034-3d68-e938-5362-5275.inf6.spectrum.com) (Ping timeout: 250 seconds)
[07:34:43] *** Joins: LtHummus (~lthummus@97-126-121-3.tukw.qwest.net)
[07:39:17] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 240 seconds)
[07:43:20] *** Joins: oscurochu (~oscurochu@2603:9000:c202:1034:3d68:e938:5362:5275)
[07:43:54] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[07:44:48] *** Quits: easbarba` (~user@177.43.146.7.dynamic.adsl.gvt.net.br) (Quit: ERC (IRC client for Emacs 27.2))
[07:44:56] *** Quits: twiclo (~twiclo@2604:7b80:2000:1069:cde9:e3cf:754c:100d) (Ping timeout: 250 seconds)
[07:45:03] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:2447:e568:11bd:7d06) (Quit: I have gone to sleep. ZZZzzzâ€¦)
[07:45:17] *** Joins: easbarba (~user@2804:1b2:81:9dbd:11f6:c867:c4b4:8ad3)
[07:46:03] *** Joins: twiclo (~twiclo@2604:7b80:2000:1069:52fc:cedd:fbeb:10c)
[07:46:33] *** Quits: src (~src@user/src) (Quit: Leaving)
[07:49:36] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[07:52:37] *** Quits: trafficjam (~qubes@2001:8004:5190:2c63:1e11:30c:39d0:9b3c) (Read error: Connection reset by peer)
[07:56:38] *** Quits: kakashiAL (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[07:57:48] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[07:57:59] *** Joins: trafficjam (~qubes@2001:8004:5190:2c63:1e11:30c:39d0:9b3c)
[08:02:23] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[08:05:22] <banana_> wroathe: hey sry had to step out shows a 404 now
[08:07:01] *** Quits: pluri_ (~pluri@user/pluri) (Ping timeout: 240 seconds)
[08:10:20] <banana_> damn he quit
[08:10:28] *** Joins: pluri (~pluri@user/pluri)
[08:10:43] *** Joins: c4017w_ (~c4017@209.52.68.8)
[08:10:45] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[08:10:45] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[08:10:45] *** Joins: wroathe (~wroathe@user/wroathe)
[08:11:27] *** Quits: Lenkov45 (~Lenkov45@45.133.193.26) (Ping timeout: 256 seconds)
[08:12:22] *** Joins: Lenkov45 (~Lenkov45@45.133.193.26)
[08:14:24] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[08:14:43] <systemfault> banana_: wroathe pasted that https://jsfiddle.net/eqns046o/
[08:14:46] *** Joins: flameboi (dgw@user/flameboi)
[08:15:25] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[08:15:30] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[08:15:32] <banana_> oh made fun of my unnecessary parens
[08:17:42] *** Joins: optimist (~optimist@27.57.127.39)
[08:18:27] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[08:19:03] *** Joins: optimist_ (~optimist@27.57.127.39)
[08:20:21] *** Quits: mintoyatsu (~mint@ip24-255-4-17.tc.ph.cox.net) (Remote host closed the connection)
[08:21:56] <banana_> this is effing awesome
[08:21:57] *** Quits: optimist (~optimist@27.57.127.39) (Ping timeout: 240 seconds)
[08:22:40] *** Joins: stagas (~stagas@2a02:587:c425:4449:c435:f5d6:d802:33ee)
[08:22:58] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[08:24:28] <banana_> seems like everything prior was set up for complementation to simplify it
[08:27:24] *** Quits: Lenkov45 (~Lenkov45@45.133.193.26) (Ping timeout: 250 seconds)
[08:27:39] *** Joins: Lenkov45 (~Lenkov45@45.133.193.23)
[08:28:45] <banana_> so !A || A is true or "1" in this example
[08:29:06] <banana_> I guess "open" in boolean algebra
[08:29:12] <banana_> systemfault: thanks
[08:29:28] <banana_> and thanks everyone else for responding
[08:30:01] *** Joins: paule32_ (~paul@nat-91-137-17-30.net.encoline.de)
[08:30:01] *** Quits: paule32_ (~paul@nat-91-137-17-30.net.encoline.de) (Changing host)
[08:30:01] *** Joins: paule32_ (~paul@user/paule32)
[08:30:26] *** Quits: Reign (~Username@ip98-161-226-10.ph.ph.cox.net) (Quit: Going offline, see ya! (www.adiirc.com))
[08:30:44] <banana_> ^ Buoy172, theskillwithin, oscurochu
[08:32:02] *** Quits: paule32 (~paul@user/paule32) (Ping timeout: 240 seconds)
[08:34:51] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[08:36:04] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[08:38:20] <oscurochu> dragoonEarth f = testClosure(); f();
[08:39:49] *** Quits: pmercado (~pmercado@186.107.59.154) (Ping timeout: 268 seconds)
[08:41:17] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[08:43:30] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[08:44:39] *** Joins: kakashiAL (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de)
[08:44:49] *** Quits: fury__ (~fury@znc.codexterous.com) (Quit: bye)
[08:45:02] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[08:45:04] *** Joins: fury_ (~fury@znc.codexterous.com)
[08:45:15] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[08:47:26] *** Joins: pingpongball (~pingpongb@27.34.47.17)
[08:52:41] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[08:53:37] *** Quits: oscurochu (~oscurochu@2603:9000:c202:1034:3d68:e938:5362:5275) (Ping timeout: 240 seconds)
[08:54:30] *** Quits: gehn (~gehn@user/gehn) (Quit: Leaving)
[08:55:02] *** Joins: oscurochu (~oscurochu@2603:9000:c202:1034:3d68:e938:5362:5275)
[08:55:32] *** Quits: SevenCats (~SevenCats@135-23-44-80.cpe.pppoe.ca) (Ping timeout: 240 seconds)
[08:57:05] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 268 seconds)
[08:57:59] *** Quits: teut (~teut@2401:4900:1c68:97ee:f019:e976:f8bd:9ca2) (Quit: Client closed)
[08:59:43] *** Quits: pingpongball (~pingpongb@27.34.47.17) (Quit: Client closed)
[09:00:20] *** Quits: Lenkov45 (~Lenkov45@45.133.193.23) (Ping timeout: 250 seconds)
[09:02:04] *** Quits: adas (adas@adas.shelltalk.net) (Ping timeout: 250 seconds)
[09:03:38] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:51ae:1989:3c73:9d89)
[09:05:04] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[09:06:39] *** Joins: flameboi5 (~flameboi@user/flameboi)
[09:07:30] *** Joins: adas (adas@adas.shelltalk.net)
[09:08:08] *** Quits: flameboi (dgw@user/flameboi) (Ping timeout: 250 seconds)
[09:11:13] *** Joins: c4017w__ (~c4017@209.52.68.8)
[09:11:31] *** Quits: flameboi5 (~flameboi@user/flameboi) (Ping timeout: 256 seconds)
[09:13:57] *** Joins: flameboi5 (~flameboi@user/flameboi)
[09:14:38] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[09:15:02] *** Joins: han-solo (~hanish@user/han-solo)
[09:15:08] *** Joins: audiobirb (~audio@user/audio)
[09:15:10] *** Quits: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net) (Remote host closed the connection)
[09:16:27] *** Quits: flameboi5 (~flameboi@user/flameboi) (Client Quit)
[09:16:46] *** Joins: flameboi5 (dgw@user/flameboi)
[09:18:06] *** Joins: ensyde (~ensyde@2600:1700:2050:1040:c06a:eb2:e18d:4418)
[09:20:51] *** Quits: flameboi5 (dgw@user/flameboi) (Read error: Connection reset by peer)
[09:21:45] *** Quits: stagas (~stagas@2a02:587:c425:4449:c435:f5d6:d802:33ee) (Ping timeout: 268 seconds)
[09:21:54] *** Joins: stagas (~stagas@2a02:587:c44d:80c7:3c81:c5b6:762e:a9d6)
[09:22:09] *** Joins: flameboi5 (dgw@user/flameboi)
[09:23:20] *** Quits: trafficjam (~qubes@2001:8004:5190:2c63:1e11:30c:39d0:9b3c) (Read error: Connection reset by peer)
[09:27:52] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[09:28:27] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[09:28:50] *** Joins: trafficjam (~qubes@2001:8004:5190:2c63:1e11:30c:39d0:9b3c)
[09:29:05] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[09:40:13] *** Joins: cthulchu_ (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[09:43:20] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 268 seconds)
[09:47:13] *** Quits: kakashiAL (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[09:49:39] *** paule32_ is now known as paule32
[09:49:50] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Remote host closed the connection)
[09:50:02] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[09:54:11] *** Joins: mat001 (~mat001@213.143.69.121)
[09:55:12] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[09:58:17] *** Quits: mat001 (~mat001@213.143.69.121) (Ping timeout: 240 seconds)
[10:00:16] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[10:01:23] *** Joins: kakashiAL (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de)
[10:05:37] *** Quits: kakashiAL (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[10:05:37] *** Joins: pingpongball (~pingpongb@27.34.47.17)
[10:06:24] *** Quits: trafficjam (~qubes@2001:8004:5190:2c63:1e11:30c:39d0:9b3c) (Read error: Connection reset by peer)
[10:07:04] *** Joins: kordou (~goartis@2a02:2149:8a7b:e200:499f:4038:b101:4136)
[10:07:44] *** Joins: kakashiAL (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de)
[10:08:37] <dragoonEarth> oscurochu, thank you. After fiddling I realized I have to reload the page so the scoped variables get reset in the Devtools console. This corrected my scoping issue. And as you mentioned, to observe a closure I had to add a reference. Nicely, Chrome does show that my closure is observed now.
[10:08:42] <dragoonEarth> https://i.imgur.com/OKjRIpR.png
[10:08:45] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[10:09:08] <kordou> Hi All! I have an app in js with webpack 5 and the export of the final ls is almost 3mb. So i want to export a secont js file to just put a page loader function in order to have a nice loader but i cannot find a way to do that even if i add two etry points. how can i do that ?  thank you
[10:11:42] *** Joins: c4017w_ (~c4017@209.52.68.8)
[10:11:44] *** Joins: trafficjam (~qubes@2001:8004:5190:2c63:1e11:30c:39d0:9b3c)
[10:13:45] *** Quits: pingpongball (~pingpongb@27.34.47.17) (Quit: Client closed)
[10:15:02] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[10:17:28] *** Quits: oscurochu (~oscurochu@2603:9000:c202:1034:3d68:e938:5362:5275) (Ping timeout: 250 seconds)
[10:19:02] *** Quits: flameboi5 (dgw@user/flameboi) (Ping timeout: 240 seconds)
[10:20:30] *** Joins: flameboi5 (dgw@user/flameboi)
[10:24:24] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc) (Ping timeout: 250 seconds)
[10:25:16] *** Quits: flameboi5 (dgw@user/flameboi) (Ping timeout: 250 seconds)
[10:29:41] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[10:33:31] *** Joins: d[-_-]b (~stenno@user/stenno)
[10:34:17] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[10:35:20] *** Joins: oscurochu (~oscurochu@2603-9000-c202-1034-bdc2-5ae0-346e-f66f.inf6.spectrum.com)
[10:35:58] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 260 seconds)
[10:36:32] *** Joins: optimist (~optimist@27.57.127.39)
[10:38:01] *** Quits: kalen (~kalen@gateway/vpn/pia/kalen) (Ping timeout: 256 seconds)
[10:39:22] *** Quits: optimist_ (~optimist@27.57.127.39) (Ping timeout: 256 seconds)
[10:39:47] *** Quits: alystair (~alystair@user/alystair) (Remote host closed the connection)
[10:43:10] *** Joins: xsperry (~xs@user/xsperry)
[10:45:10] *** Joins: Talon (~Talon@172.77.106.63)
[10:45:36] *** Quits: mattf_ (~mattf@li908-138.members.linode.com) (Ping timeout: 256 seconds)
[10:45:55] *** Joins: justGhost3 (~justache@user/justache)
[10:45:57] *** Quits: d[-_-]b (~stenno@user/stenno) (Ping timeout: 240 seconds)
[10:46:10] *** Joins: NoiseEee9 (~NoiseEee@178.128.153.219)
[10:46:32] *** Joins: BinarySavior_ (~BinarySav@josh.vet)
[10:46:32] *** Joins: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4)
[10:46:44] *** Quits: BinarySavior (~BinarySav@idlerpg/player/BinarySavior) (Ping timeout: 256 seconds)
[10:47:17] *** Quits: Talon_ (Talon@172.77.118.48) (Ping timeout: 256 seconds)
[10:47:18] *** Quits: justGhost (~justache@user/justache) (Ping timeout: 256 seconds)
[10:47:18] *** Quits: kzootech (~contact@kzoo.tech) (Ping timeout: 256 seconds)
[10:47:18] *** Quits: edr (~edr@user/edr) (Ping timeout: 256 seconds)
[10:47:18] *** Quits: NoiseEee (~NoiseEee@178.128.153.219) (Ping timeout: 256 seconds)
[10:47:18] *** NoiseEee9 is now known as NoiseEee
[10:47:18] *** justGhost3 is now known as justGhost
[10:47:47] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:47:52] *** Quits: daniel-k (~daniel-k@fsf/emeritus/daniel-k) (Ping timeout: 256 seconds)
[10:47:52] *** daniel-k3 is now known as daniel-k
[10:48:09] *** Joins: d[-_-]b (~stenno@user/stenno)
[10:50:09] *** Quits: xsperry (~xs@user/xsperry) ()
[10:52:07] *** Joins: kzootech (~contact@kzoo.tech)
[10:52:17] *** Joins: admin123 (~harrymore@ool-2f12f6cb.dyn.optonline.net)
[10:52:28] *** Joins: edr (~edr@enlo.co)
[10:52:28] *** Quits: edr (~edr@enlo.co) (Changing host)
[10:52:28] *** Joins: edr (~edr@user/edr)
[10:56:11] *** Joins: kalen (~kalen@gateway/vpn/pia/kalen)
[10:56:27] *** Quits: admin123 (~harrymore@ool-2f12f6cb.dyn.optonline.net) (Ping timeout: 250 seconds)
[10:59:26] *** Joins: iomari891 (~iomari891@105.112.138.38)
[11:03:24] *** Quits: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au) (Ping timeout: 250 seconds)
[11:03:39] *** Joins: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au)
[11:05:05] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[11:05:46] *** d[-_-]b is now known as stenno
[11:07:13] <dragoonEarth> I believe the option "Disable Cache (While devtools is open)" in Chrome devtools settings has fixed my previous issue
[11:07:21] *** Quits: easbarba (~user@2804:1b2:81:9dbd:11f6:c867:c4b4:8ad3) (Remote host closed the connection)
[11:09:07] *** Joins: fef (~thedawn@user/thedawn)
[11:09:37] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[11:10:13] *** Joins: salad (~cucumber@82.76.150.118)
[11:10:16] *** Quits: trafficjam (~qubes@2001:8004:5190:2c63:1e11:30c:39d0:9b3c) (Read error: Connection reset by peer)
[11:12:14] *** Joins: c4017w__ (~c4017@209.52.68.8)
[11:15:32] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[11:16:10] *** Joins: trafficjam (~qubes@2001:8004:5190:2c63:1e11:30c:39d0:9b3c)
[11:16:30] *** Quits: nomic (~nomic@185.192.69.10) (Quit: Leaving)
[11:17:57] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 240 seconds)
[11:18:42] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:19:43] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[11:20:08] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:20:56] *** Joins: Tobbi (~Tobbi@ip1f115d4d.dynamic.kabel-deutschland.de)
[11:23:40] *** Joins: anderson_ (~anderson@176.106.245.98)
[11:26:33] *** Quits: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au) (Ping timeout: 250 seconds)
[11:26:47] *** Joins: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au)
[11:29:37] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[11:30:18] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[11:31:04] *** Quits: bobdobbs (~user@116.251.149.196) (Remote host closed the connection)
[11:35:17] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[11:35:52] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[11:38:52] *** Quits: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[11:39:03] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[11:40:17] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[11:43:15] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 250 seconds)
[11:44:17] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[11:45:21] *** Joins: stenno (~stenno@user/stenno)
[11:45:26] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:49:08] *** Quits: Joel (~jjshoe@user/joel) (Ping timeout: 268 seconds)
[11:55:05] *** Quits: optimist (~optimist@27.57.127.39) (Quit: Leaving...)
[11:55:22] *** Joins: optimist (~optimist@27.57.127.39)
[11:55:52] *** Quits: kristijonas (~kristijon@78-56-32-39.static.zebra.lt) (Remote host closed the connection)
[11:56:17] *** Joins: kristijonas (~kristijon@78-56-32-39.static.zebra.lt)
[11:56:52] *** Joins: Joel (~jjshoe@user/joel)
[11:58:29] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 252 seconds)
[12:00:34] *** Joins: stenno (~stenno@user/stenno)
[12:00:38] *** Quits: stenno (~stenno@user/stenno) (Client Quit)
[12:01:10] *** Joins: Booster2ooo|2 (~Booster2o@host-78-129-75-220.dynamic.voo.be)
[12:03:41] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Ping timeout: 245 seconds)
[12:05:23] *** Joins: Liblx (~Alex@2a02:810c:280:59c:9c31:26ec:be5b:4744)
[12:06:21] *** Quits: trafficjam (~qubes@2001:8004:5190:2c63:1e11:30c:39d0:9b3c) (Read error: Connection reset by peer)
[12:06:30] *** Quits: Booster2ooo|2 (~Booster2o@host-78-129-75-220.dynamic.voo.be) (Quit: The Game)
[12:06:45] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[12:08:36] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[12:12:29] *** Joins: trafficjam (~qubes@2001:8004:5190:2c63:1e11:30c:39d0:9b3c)
[12:12:36] *** Quits: crazyhorse (~crazyhors@115-166-19-92.tpgi.com.au) (Remote host closed the connection)
[12:12:44] *** Joins: c4017w_ (~c4017@209.52.68.8)
[12:13:17] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[12:13:24] *** Joins: Camilo (~hugh@host-92-1-126-125.as13285.net)
[12:13:25] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[12:16:15] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[12:17:49] *** Quits: optimist (~optimist@27.57.127.39) (Remote host closed the connection)
[12:18:21] *** Joins: optimist (~optimist@27.57.127.39)
[12:18:29] *** Joins: laravelnewbie (~laravelne@117.199.47.76)
[12:18:39] *** Quits: Liblx (~Alex@2a02:810c:280:59c:9c31:26ec:be5b:4744) (Quit: WeeChat 3.2)
[12:19:44] *** Quits: optimist (~optimist@27.57.127.39) (Read error: Connection reset by peer)
[12:19:47] *** Joins: Liblx (~Alex@2a02:810c:280:59c:9c31:26ec:be5b:4744)
[12:19:59] *** Joins: optimist (~optimist@27.57.127.39)
[12:20:36] *** Joins: \mSg (mSg@user/msg/x-0285936)
[12:22:36] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[12:23:27] *** Quits: Liblx (~Alex@2a02:810c:280:59c:9c31:26ec:be5b:4744) (Remote host closed the connection)
[12:23:54] *** Quits: laravelnewbie (~laravelne@117.199.47.76) (Quit: Client closed)
[12:23:54] *** Joins: Liblx (~Alex@2a02:810c:280:59c:9c31:26ec:be5b:4744)
[12:24:20] *** Joins: RLa (~RLa@82.131.127.168.cable.starman.ee)
[12:24:26] *** Quits: optimist (~optimist@27.57.127.39) (Ping timeout: 250 seconds)
[12:26:04] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[12:26:12] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Quit: WeeChat 3.4)
[12:28:20] *** Quits: Liblx (~Alex@2a02:810c:280:59c:9c31:26ec:be5b:4744) (Ping timeout: 250 seconds)
[12:30:08] *** Quits: trms[m] (~trmsmatri@2001:470:69fc:105::1:28d2) (Quit: You have been kicked for being idle)
[12:30:23] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 252 seconds)
[12:41:28] *** Joins: optimist (~optimist@27.57.127.39)
[12:42:36] *** Joins: eXtr3m0 (~eXtr3m0@user/eXtr3m0)
[12:42:43] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[12:50:32] *** Joins: cotko (~cotko@89-212-138-82.static.t-2.net)
[12:50:37] *** Quits: cthulchu_ (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 240 seconds)
[12:51:18] *** Joins: benni (~benni@p5084a116.dip0.t-ipconnect.de)
[12:56:30] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[12:57:48] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[12:58:24] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[12:59:30] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[13:03:17] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[13:04:22] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 260 seconds)
[13:04:33] *** Joins: plitter (~plitter@192.108.100.200)
[13:04:33] *** Quits: plitter (~plitter@192.108.100.200) (Changing host)
[13:04:33] *** Joins: plitter (~plitter@user/plitter)
[13:06:32] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[13:09:30] *** Quits: pluri (~pluri@user/pluri) (Ping timeout: 250 seconds)
[13:11:07] *** Joins: o (~niko@libera/staff/niko)
[13:11:42] *** Joins: pluri (~pluri@user/pluri)
[13:13:14] *** Joins: c4017w__ (~c4017@209.52.68.8)
[13:14:04] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[13:15:18] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:16:53] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[13:17:29] *** Quits: jazzy (~jaziz@user/jaziz) (Quit: Beddie bye-bye)
[13:19:22] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[13:22:06] *** Quits: ensyde (~ensyde@2600:1700:2050:1040:c06a:eb2:e18d:4418) (Quit: Leaving)
[13:23:48] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[13:24:52] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[13:26:45] *** Joins: fef (~thedawn@user/thedawn)
[13:26:52] *** Quits: fef (~thedawn@user/thedawn) (Client Quit)
[13:32:06] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[13:32:51] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[13:33:53] *** Joins: fef (~thedawn@user/thedawn)
[13:35:41] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 250 seconds)
[13:36:44] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[13:36:46] *** Joins: sylario (uid115390@id-115390.tinside.irccloud.com)
[13:37:03] *** Quits: paule32 (~paul@user/paule32) (Ping timeout: 268 seconds)
[13:37:17] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[13:39:59] *** Joins: gproto23 (~gproto23@user/gproto23)
[13:48:04] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[13:49:12] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[13:50:38] *** Quits: benni (~benni@p5084a116.dip0.t-ipconnect.de) (Quit: Client closed)
[13:51:17] *** Quits: federico (~federico@176.206.191.61) (Ping timeout: 240 seconds)
[13:53:31] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[13:55:28] *** Joins: optimist_ (~optimist@27.57.127.39)
[13:55:43] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[13:59:15] *** Quits: optimist (~optimist@27.57.127.39) (Ping timeout: 268 seconds)
[14:05:24] *** Quits: defjam (~eb0t@90.209.247.249) (Quit: WeeChat 3.0)
[14:05:38] *** Quits: chenqisu1 (~bhca7d@183.217.200.249) (Ping timeout: 256 seconds)
[14:06:33] *** Quits: c17r_ (~c17r@c17r.com) (Ping timeout: 256 seconds)
[14:06:42] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[14:07:18] *** Joins: c17r (~c17r@c17r.com)
[14:07:22] *** Joins: Dorward_ (~dorward@2001:8b0:683:6dc5:56b2:3ff:fe9c:2b78)
[14:07:25] *** Joins: Alexendoo_ (~Alex@144.21.50.247)
[14:07:41] *** Quits: Alexendoo (~Alex@144.21.50.247) (Ping timeout: 256 seconds)
[14:07:41] *** Alexendoo_ is now known as Alexendoo
[14:08:15] *** Quits: root__ (~root@157.245.144.252) (Ping timeout: 256 seconds)
[14:08:15] *** Quits: Dorward (~dorward@13.5.169.217.in-addr.arpa) (Ping timeout: 256 seconds)
[14:08:15] *** Quits: monokrome| (~monokrome@50.215.11.140) (Ping timeout: 256 seconds)
[14:08:15] *** Dorward_ is now known as Dorward
[14:09:56] *** Joins: root__ (~root@157.245.144.252)
[14:09:56] *** Joins: monokrome| (~monokrome@50.215.11.140)
[14:11:35] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 252 seconds)
[14:12:58] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[14:13:43] *** Joins: c4017w_ (~c4017@209.52.68.8)
[14:16:08] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[14:17:32] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[14:17:56] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[14:18:27] *** Quits: robertmaxrees (~robert0@c-76-114-62-229.hsd1.ca.comcast.net) (Read error: No route to host)
[14:18:52] *** Joins: robertmaxrees (~robert0@c-76-114-62-229.hsd1.ca.comcast.net)
[14:19:41] *** Quits: dragoonEarth (~dragoonEa@2601:1c0:6b00:8880:142e:4ad5:fe42:8d95) (Read error: Connection reset by peer)
[14:20:23] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[14:21:25] *** Joins: Intelo (~Intelo@88.244.94.93)
[14:21:25] <Intelo> Hi
[14:22:09] <Intelo> Is there a way to capÂ  the time of execution of a code in vm2 or any other so if a bad code link while(true) is executed, it is terminated after a certain time?
[14:23:11] *** Joins: paule32 (~paul@nat-91-137-17-30.net.encoline.de)
[14:23:11] *** Quits: paule32 (~paul@nat-91-137-17-30.net.encoline.de) (Changing host)
[14:23:11] *** Joins: paule32 (~paul@user/paule32)
[14:23:32] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:25:22] *** Joins: mat001 (~mat001@213.143.69.121)
[14:27:18] *** Quits: mat001 (~mat001@213.143.69.121) (Remote host closed the connection)
[14:27:38] *** Joins: mat001 (~mat001@213.143.69.121)
[14:28:12] <Intelo> Is there a way to capÂ  the time of execution of a code in vm2 or any other so if a bad code link while(true) is executed, it is terminated after a certain time?Â  https://www.npmjs.com/package/vm2 says Timeout is not effective for NodeVM so it is not immune to while (true) {} or similar evil.
[14:30:57] *** Quits: mat001 (~mat001@213.143.69.121) (Remote host closed the connection)
[14:31:28] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[14:31:35] *** Joins: mat001 (~mat001@72.28.108.216)
[14:31:37] <RLa> Intelo, execute a separate process and kill it when timeout is exceeded?
[14:32:08] *** Joins: jazzy (~jaziz@user/jaziz)
[14:32:12] <RLa> or maybe it can be run as/in a worker
[14:33:23] <RLa> and then terminated: https://nodejs.org/api/worker_threads.html#workerterminate
[14:33:43] *** Joins: pingpongball (~pingpongb@27.34.47.129)
[14:34:12] <Intelo> RLa this is one node app. How to run it in separate process? and also, what is a worker in node? I thought web workers are only in frontend browsers?
[14:34:25] *** Parts: pingpongball (~pingpongb@27.34.47.129) ()
[14:34:31] <RLa> read the docs
[14:35:02] <RLa> and for running something as a separate process, see docs for child_process
[14:36:37] *** Quits: mat001 (~mat001@72.28.108.216) (Ping timeout: 240 seconds)
[14:37:00] *** Joins: vladoski (~vladoski@2001:b07:add:d406:eb67:9fa3:5edf:a9b4)
[14:37:14] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:a9ef:8cb1:3f34:9694)
[14:37:58] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[14:38:17] <vladoski> I have a stupid problem to solve: I have a filter (toolbar form with comboboxes) that I need to "throttle"
[14:38:33] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[14:38:56] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[14:39:05] <vladoski> If I change them quite fast, my frontend queries the api two times and first shows one result and then refreshes with the other one
[14:39:20] <vladoski> is there a pattern or something that I can use? How can I approach this problem?
[14:39:30] <RLa> you could try to use lodash throttle or debounce method
[14:39:50] <RLa> you have to think whether you want throttle or debounce
[14:39:56] <RLa> they are different
[14:40:11] <RLa> you probably want "last update wins" type of solution
[14:40:19] <vladoski> RLa exactly
[14:40:37] <vladoski> okay let me see the difference between them
[14:40:39] <vladoski> thanks
[14:42:06] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[14:43:51] <Intelo> RLa I see so I do not need vm2 or isolatevm kind of libs? node.js can do it out of the box?
[14:44:11] <vladoski> RLa, okay so debounce is what I need
[14:45:02] <RLa> Intelo, no, you probably still need isolation libs to restrict filesystem or network access
[14:47:00] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[14:47:55] <Intelo> ok RLa so I guess child_process and worker won't limit file+ network acces
[14:48:38] *** Joins: Naan (~Naan@user/naan)
[14:49:44] *** Joins: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com)
[14:50:36] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[14:52:24] *** Joins: fef (~thedawn@user/thedawn)
[14:57:47] <RLa> Intelo, yes
[15:02:17] *** Quits: trafficjam (~qubes@2001:8004:5190:2c63:1e11:30c:39d0:9b3c) (Read error: Connection reset by peer)
[15:04:05] *** Joins: mat001 (~mat001@213.143.69.121)
[15:07:43] *** Joins: trafficjam (~qubes@2001:8004:5190:2c63:1e11:30c:39d0:9b3c)
[15:08:14] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[15:09:06] *** Quits: mat001 (~mat001@213.143.69.121) (Ping timeout: 256 seconds)
[15:09:52] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[15:12:29] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[15:13:00] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[15:14:02] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[15:14:03] *** Joins: xsperry (~xs@user/xsperry)
[15:14:14] *** Joins: c4017w__ (~c4017@209.52.68.8)
[15:17:04] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[15:17:36] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[15:18:11] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 268 seconds)
[15:19:04] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[15:20:06] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[15:20:39] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 268 seconds)
[15:23:19] *** Joins: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net)
[15:24:40] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[15:25:39] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[15:27:48] *** Quits: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[15:31:49] *** Joins: maret (~maret@195.12.158.102)
[15:33:12] *** Joins: pulse (~pulse@user/pulse)
[15:34:07] *** Joins: Guest_2211 (~Guest_221@106.209.139.74)
[15:34:32] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Quit: Client closed)
[15:38:00] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[15:38:47] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[15:39:02] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Remote host closed the connection)
[15:43:44] *** Joins: pmercado (~pmercado@186.107.59.154)
[15:44:16] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[15:44:46] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[15:49:34] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 260 seconds)
[15:50:44] *** Joins: fef (~thedawn@user/thedawn)
[15:54:10] *** Joins: thiras (~thiras@user/thiras)
[15:55:02] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[15:55:33] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[15:56:07] *** Joins: mat001 (~mat001@213.143.69.121)
[15:59:13] *** Joins: optimist (~optimist@27.57.127.39)
[16:00:14] *** Quits: mat001 (~mat001@213.143.69.121) (Ping timeout: 250 seconds)
[16:01:32] *** Quits: optimist_ (~optimist@27.57.127.39) (Ping timeout: 240 seconds)
[16:03:11] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[16:07:00] *** Joins: FreEm1nD (~FreEm1nD@mail.guarapari.store)
[16:07:36] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[16:08:38] *** Quits: Intelo (~Intelo@88.244.94.93) (Quit: Client closed)
[16:08:42] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[16:09:41] *** Quits: wwwi (~wwwi@213-152-174.netrun.cytanet.com.cy) (Quit: Leaving)
[16:10:29] *** Quits: FreEm1nD (~FreEm1nD@mail.guarapari.store) (Client Quit)
[16:10:54] *** Joins: FreEm1nD (~FreEm1nD@mail.guarapari.store)
[16:10:54] *** Quits: RLa (~RLa@82.131.127.168.cable.starman.ee) (Quit: Client closed)
[16:13:40] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[16:13:54] *** Quits: eMBee (~eMBee@realss.com) (Read error: Connection reset by peer)
[16:14:36] *** Quits: maret (~maret@195.12.158.102) (Quit: maret)
[16:14:43] *** Joins: c4017w_ (~c4017@209.52.68.8)
[16:14:45] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[16:15:18] *** Joins: maret (~maret@195.12.158.102)
[16:15:32] *** Quits: maret (~maret@195.12.158.102) (Client Quit)
[16:16:45] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[16:17:40] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[16:18:00] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[16:18:49] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[16:19:06] *** Joins: pagios (~pagios@life.is-a.beauty)
[16:19:10] <pagios> does HTML smuggling still works as an attack technique ? where javascript autoexecutes a downloaded .exe for example when a user opens an email ?
[16:19:16] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[16:20:16] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[16:20:44] *** Joins: ZeroWalker (~ZeroWalke@2001:9b1:28f8:8300:7164:4c68:eefc:f59d)
[16:22:28] *** Quits: salad (~cucumber@82.76.150.118) (Read error: Connection reset by peer)
[16:22:45] *** Joins: salad (~cucumber@82.76.150.118)
[16:22:54] *** Joins: iomari891 (~iomari891@105.112.138.38)
[16:23:07] *** Quits: henry40408 (~henry4040@175.181.155.165) (Quit: The Lounge - https://thelounge.chat)
[16:23:32] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[16:23:32] *** Joins: mintoyatsu (~mint@ip24-255-4-17.tc.ph.cox.net)
[16:25:20] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[16:26:17] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[16:28:31] *** Quits: optimist (~optimist@27.57.127.39) (Remote host closed the connection)
[16:29:05] *** Joins: optimist (~optimist@27.57.127.39)
[16:30:59] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[16:32:56] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 252 seconds)
[16:36:14] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 252 seconds)
[16:37:29] *** Joins: henry40408 (~henry4040@175.181.155.165)
[16:38:48] *** Joins: taupiqueur (~taupiqueu@91.245.204.77.rev.sfr.net)
[16:39:17] *** Quits: henry40408 (~henry4040@175.181.155.165) (Client Quit)
[16:41:52] *** Quits: gproto23 (~gproto23@user/gproto23) (Quit: Leaving)
[16:44:08] *** Joins: henry40408 (~henry4040@175.181.155.165)
[16:44:31] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Ping timeout: 268 seconds)
[16:44:56] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[16:45:05] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[16:45:10] *** Joins: maret (~maret@195.12.158.102)
[16:46:02] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[16:47:44] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[16:47:46] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[16:48:35] *** Quits: henry40408 (~henry4040@175.181.155.165) (Read error: Connection reset by peer)
[16:49:06] *** Joins: RLa (~RLa@82.131.127.168.cable.starman.ee)
[16:49:07] *** Joins: henry40408 (~henry4040@175.181.155.165)
[16:49:29] *** Quits: maret (~maret@195.12.158.102) (Client Quit)
[16:49:44] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[16:49:57] *** Quits: taupiqueur (~taupiqueu@91.245.204.77.rev.sfr.net) (Ping timeout: 240 seconds)
[16:50:11] *** Joins: maret (~maret@195.12.158.102)
[16:51:28] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[16:54:17] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[16:54:36] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[16:56:22] *** Joins: nomic (~nomic@2a00:23c7:ec90:a501:4c0a:4e68:6f7f:23ed)
[16:58:28] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 256 seconds)
[17:00:18] *** Quits: optimist (~optimist@27.57.127.39) (Quit: Leaving...)
[17:01:17] *** Joins: roadt (~roadt@36.5.93.137)
[17:03:11] <NoiseEee> Lolwot
[17:03:43] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[17:08:25] *** Joins: Lauxley (~lauxley@2a01:e34:ec55:2700:853a:fd1e:be90:55cb)
[17:10:42] *** Quits: henry40408 (~henry4040@175.181.155.165) (Quit: The Lounge - https://thelounge.chat)
[17:10:56] *** Quits: eXtr3m0 (~eXtr3m0@user/eXtr3m0) (Ping timeout: 256 seconds)
[17:12:06] *** Joins: dfinr (~dfinr@user/dfinr)
[17:12:09] <Lauxley> if i have a contenteditable with a bunch of divs in it and start/end offsets of text relative to the container, is there a straightforward way to tell the start and end children (without looping through the children and counting the letters)? I tried using a Range but startContainer and endContainer point at the parent
[17:15:14] *** Joins: c4017w__ (~c4017@209.52.68.8)
[17:18:13] *** Quits: maret (~maret@195.12.158.102) (Quit: maret)
[17:18:32] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[17:19:16] *** Joins: maret (~maret@195.12.158.102)
[17:19:41] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:21:45] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[17:23:08] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[17:26:32] <jaawerth> Lauxley: what did you try wrt a Range?
[17:26:36] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[17:27:15] <Lauxley> jaawerth, createRange(), setStart(parent, start_offset), setEnd(parent, end_offset)
[17:27:37] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[17:28:41] <jaawerth> hmm ok, you might want to try this one too if you're ok getting this info in reaction to input
[17:28:47] <jaawerth> !mdn getTargetRanges
[17:28:48] <jellobot> jaawerth, getTargetRanges() method of the InputEvent interface returns an array of static ranges that will be affected by a change to the DOM if the input event is not canceled. https://mdn.io/getTargetRanges
[17:29:23] <jaawerth> the range api is a pain and I hven't used it a whole lot but that seems to be generally for that sort of purpose ^
[17:30:45] <Lauxley> Ok going to try that but I get the offsets from another lib so the InputEvent might not work for me, thanx
[17:31:40] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 250 seconds)
[17:34:44] *** Joins: henry40408 (~henry4040@175.181.155.165)
[17:35:06] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[17:35:30] <jaawerth> Lauxley: looking at the setStart and setEnd, though, maybe I'm misunderstanding something but have you also tried setStart(firstchild, startoffset) setEnd(lastChild, endoffset)? just grabbind the first and last child node?
[17:35:33] <jaawerth> worth a shot anyway
[17:36:10] <Lauxley> ah good idea let me try that
[17:36:25] *** Joins: thelounge8192 (b9dc66fa@67.205.143.82)
[17:36:43] *** Joins: Wizzzzzy (~wizzzzzy@w-206.cust-u445.ip.static.uno.uk.net)
[17:37:20] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[17:37:53] *** Joins: l__q (~modinfo@user/modinfo)
[17:39:07] <Lauxley> nop i get hit with "Index or size is negative or greater than the allowed amount", so presumably the offsets can go past the content length of the firstChild
[17:39:31] *** Joins: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net)
[17:39:38] *** Quits: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net) (Remote host closed the connection)
[17:42:05] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[17:42:41] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[17:43:14] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[17:44:03] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Quit: Leaving)
[17:44:57] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[17:45:10] *** Quits: nomic (~nomic@2a00:23c7:ec90:a501:4c0a:4e68:6f7f:23ed) (Quit: Leaving)
[17:46:38] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[17:48:44] <jaawerth> it'll probably entail some offset math, but this is one of those things I can't always have to fiddle with myself to get it right..
[17:51:36] *** Joins: fef (~thedawn@user/thedawn)
[17:55:10] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[17:59:22] *** Quits: oscurochu (~oscurochu@2603-9000-c202-1034-bdc2-5ae0-346e-f66f.inf6.spectrum.com) (Remote host closed the connection)
[17:59:32] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[17:59:56] *** Quits: Wizzzzzy (~wizzzzzy@w-206.cust-u445.ip.static.uno.uk.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[18:01:11] *** Joins: Wizzzzzy (~wizzzzzy@w-206.cust-u445.ip.static.uno.uk.net)
[18:01:42] *** Joins: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net)
[18:02:29] *** Joins: jim87 (~quassel@93.55.249.30)
[18:02:52] *** Quits: jim87 (~quassel@93.55.249.30) (Client Quit)
[18:03:35] *** Joins: DrowningElysium (uid190788@user/drowningelysium)
[18:04:15] *** Joins: dev4449 (~dev4449@gateway/vpn/pia/dev4449)
[18:05:04] *** Joins: CoolerX (~CoolerX@user/coolerx)
[18:06:01] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:06:01] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:06:01] *** Joins: wroathe (~wroathe@user/wroathe)
[18:07:23] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Ping timeout: 250 seconds)
[18:11:10] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:12:02] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:15:43] *** Joins: c4017w_ (~c4017@209.52.68.8)
[18:15:52] *** Quits: dev4449 (~dev4449@gateway/vpn/pia/dev4449) (Ping timeout: 250 seconds)
[18:18:00] *** Joins: voltage_ (voltage@user/voltage)
[18:18:06] *** Joins: dev4449 (~dev4449@5.114.133.129)
[18:19:20] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[18:23:54] *** Quits: maret (~maret@195.12.158.102) (Quit: maret)
[18:25:23] *** Quits: RLa (~RLa@82.131.127.168.cable.starman.ee) (Quit: Client closed)
[18:25:50] *** Quits: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net) (Ping timeout: 250 seconds)
[18:27:04] *** Joins: maret (~maret@195.12.158.102)
[18:27:49] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[18:28:20] <hassoon_> 'afternoon
[18:30:38] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 252 seconds)
[18:31:29] <undefined_bob> any experience in implementing a more or less simple search function for a website? not as complex as elastic search
[18:31:54] <robertparkerx> https://kopy.io/041xy how do I keep selected value?
[18:32:05] <robertparkerx> for some reason it sorts the options but always selects the last value
[18:32:32] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[18:32:50] <austincheney> I have limited experience with search, but I have learned that I can search the file system using JavaScript, even from an interface in the browser, orders of magnitude faster than the OS using the OS's native conventions
[18:33:26] <austincheney> I believe, and I could be wrong, is that OS search supports legacy conventions, like wildcards, that are slow
[18:33:39] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[18:34:40] <undefined_bob> well, I'm not really experienced in search engines too. But I think the search must search the html file on the server for the search value and then show the results somehow
[18:35:54] <austincheney> undefined_bob, HTML, as a file is a big string.  That said you have two search options:  string search or parse the string into something like else like a DOM tree and then traverse the tree nodes
[18:37:25] <undefined_bob> hm most stuff inside the html is in <table>
[18:37:44] <undefined_bob> I think I'll google and see if there are some scripts or something I can try
[18:38:11] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[18:38:15] <undefined_bob> I dont wanna make it too complicated, its not worth it. thank you for your input, austincheney
[18:38:29] <austincheney> html tables are among the slowest of DOM artifacts to render, but are among the fastest to traverse
[18:39:19] *** Joins: admin123 (~harrymore@ool-2f12f6cb.dyn.optonline.net)
[18:39:34] *** Joins: kijix\ (~shinomori@c-73-143-164-176.hsd1.ct.comcast.net)
[18:40:07] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:e809:4efb:d06e:27ad) (Quit: Textual IRC Client: www.textualapp.com)
[18:41:05] *** Quits: Swant (~swant@libera/staff/swant) (Quit: gone to IKEA)
[18:41:55] *** Joins: RLa (~RLa@82.131.127.168.cable.starman.ee)
[18:41:57] *** Quits: brentaarnold (~brentaarn@24.112.58.14) (Ping timeout: 240 seconds)
[18:43:45] *** Quits: plitter (~plitter@user/plitter) (Quit: WeeChat 3.4)
[18:45:17] *** Quits: admin123 (~harrymore@ool-2f12f6cb.dyn.optonline.net) (Ping timeout: 240 seconds)
[18:47:22] *** Quits: cornfeedhobo (~cornfeedh@user/cornfeedhobo) (Remote host closed the connection)
[18:47:24] *** Quits: dfg (dfg@user/dfg) (Quit: I hate quit messages.)
[18:47:35] *** Joins: admin123 (~harrymore@ool-2f12f6cb.dyn.optonline.net)
[18:47:40] *** Joins: dfg (dfg@dfg.rocks)
[18:47:40] *** Quits: dfg (dfg@dfg.rocks) (Changing host)
[18:47:40] *** Joins: dfg (dfg@user/dfg)
[18:49:14] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[18:51:50] *** Joins: brentaarnold (~brentaarn@24.112.58.14)
[18:52:22] *** Quits: admin123 (~harrymore@ool-2f12f6cb.dyn.optonline.net) (Ping timeout: 256 seconds)
[18:54:25] *** Joins: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com)
[18:55:18] *** Joins: cornfeedhobo (~cornfeedh@user/cornfeedhobo)
[18:56:35] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 250 seconds)
[18:57:03] *** Quits: maret (~maret@195.12.158.102) (Quit: maret)
[18:57:29] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:57:29] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:57:29] *** Joins: wroathe (~wroathe@user/wroathe)
[18:58:05] *** Joins: maret (~maret@195.12.158.102)
[18:58:22] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[18:58:57] <banana_> wroathe: that is actually perfect because it's part of a Array.prototype.sort(...) callback
[18:59:15] <banana_> and the callback doesn't any side effects
[18:59:21] <banana_> have^
[19:01:59] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[19:03:08] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[19:07:01] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:5564:f68e:22ca:9091)
[19:08:08] *** Quits: undefined_bob (~undefined@user/undefined-bob/x-5411918) (Quit: WeeChat 1.5)
[19:08:44] <banana_> the distributive law in boolean algebra gives me stage fright for some reason
[19:08:59] <banana_> need to practice for sure I think. comes in handy when developing
[19:10:36] *** Joins: sam_1 (~sam_1@87.51.251.118)
[19:10:42] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[19:11:48] *** Quits: kmh (~kmh@2a00:6020:5004:6800:5c9:7912:93ae:96ad) (Quit: Leaving)
[19:14:48] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:15:36] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 268 seconds)
[19:15:51] *** Joins: kmh (~kmh@2a00:6020:5004:6800:d55:196:f32b:b0f1)
[19:15:57] *** Joins: nomic (~nomic@2a00:23c7:ec90:a501:4c0a:4e68:6f7f:23ed)
[19:16:14] *** Joins: c4017w__ (~c4017@209.52.68.8)
[19:17:09] *** Joins: Trieste (T@user/pilgrim)
[19:17:51] *** Joins: mknod (~mknod@user/mknod)
[19:19:56] <mknod> Hello. I'm trying to check whether a value returned by Range.getValue() (https://developers.google.com/apps-script/reference/spreadsheet/range#getvalue) is a CellImage object: https://developers.google.com/apps-script/reference/spreadsheet/cell-image.html
[19:20:02] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[19:20:31] <mknod> On such a cell, range.getValue().toString() returns "CellImage", but this test alone doesn't seem very reliable.
[19:21:14] <mknod> Object.prototype.toString.call(range.getValue()) returns "[object Object]". I would have expected "[object CellImage]" but I must be missing something.
[19:22:02] <mknod> I would prefer to use instanceof as it seems to be the most elegant and reliable solution, but I had no luck so far.
[19:24:04] <mknod> range.getValue() instanceof SpreadsheetApp.newCellImage().toBuilder().build especially, returns false. I just can't find the right hand side of instanceof that will allow me to perform that test.
[19:25:32] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[19:26:12] <mknod> The ValueType enum might be useful as well, but same problem. I'm not sure what I should check it against.
[19:27:17] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[19:27:34] *** Joins: dsrt^ (~dsrt@50.231.5.242)
[19:30:57] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[19:31:55] *** Joins: velix (~velix@user/velix)
[19:31:57] *** Quits: pluri (~pluri@user/pluri) (Ping timeout: 240 seconds)
[19:32:25] *** Joins: eXtr3m0 (~eXtr3m0@user/eXtr3m0)
[19:32:26] <velix> Is it okay to limit the numbers of event listers? This listens on the DIV to clicks only. So 1 event listener is needed only: https://jsfiddle.net/okdm9ey7/
[19:33:54] <hassoon_> velix: sure, the less, the more optimized, the btter
[19:33:56] <hassoon_> * better
[19:34:08] <hassoon_> depends on whether that should be done or not anyway
[19:34:17] <hassoon_> your use case is what tells you
[19:34:19] *** Joins: admin123 (~harrymore@ool-2f12f6cb.dyn.optonline.net)
[19:34:40] <velix> hassoon_: It's still the sidebar, I've posted some days ago ;)
[19:34:51] <velix> I thought it's better to have just one event lister on it than on every icon.
[19:34:57] <velix> that would be a mess.
[19:35:25] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[19:35:30] <hassoon_> velix: set a click event listener on document, then work on event.target
[19:35:44] <velix> hassoon_: document is too much. Because this will affect other stuff.
[19:35:54] <velix> hassoon_: on the sidebar only is better for my task.
[19:36:08] <hassoon_> velix: i.e if(event.target.id == "id-1" || event.target.id == "id-3"){//your logic here}
[19:36:38] <hassoon_> velix: nope, it's just one event listener that you need to optimize and know how to use the right way
[19:37:08] <hassoon_> velix: if i click on the 123, your click event handler is triggered, and that's..not coherent you know
[19:37:16] <hassoon_> since oly buttons are meant to call the handler
[19:37:46] <velix> hassoon_: Yes, that's on purpose. I wanted to check if it works on text also.
[19:38:27] <velix> For example, it would be text when using fontawesome. Sure, I can wrap this in <i>
[19:38:34] <hassoon_> velix: alright then, fair enough
[19:38:34] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[19:38:50] <velix> I've seen websites with 40 event listeners and I thought: uh!
[19:39:14] *** Joins: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net)
[19:39:15] <hassoon_> ya alot have dozens of dozens of event listeners sure
[19:39:17] *** Quits: admin123 (~harrymore@ool-2f12f6cb.dyn.optonline.net) (Ping timeout: 240 seconds)
[19:40:30] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[19:41:22] *** Quits: maret (~maret@195.12.158.102) (Quit: maret)
[19:41:28] *** Joins: sam_1 (~sam_1@87.51.251.118)
[19:41:48] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[19:46:02] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 240 seconds)
[19:48:13] *** Quits: Guest_2211 (~Guest_221@106.209.139.74) ()
[19:50:05] *** Quits: Wizzzzzy (~wizzzzzy@w-206.cust-u445.ip.static.uno.uk.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[19:51:35] *** Joins: PenguinMan98 (~PenguinMa@65.153.38.250)
[19:52:02] *** Joins: stenno (~stenno@user/stenno)
[19:52:47] *** Joins: sam_1 (~sam_1@87.51.251.118)
[19:53:02] *** Joins: onosendi (~onosendi@user/onosendi)
[19:53:03] *** Joins: admin123 (~harrymore@ool-2f12f6cb.dyn.optonline.net)
[19:55:14] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[19:55:17] *** Quits: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[19:56:12] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[19:56:36] *** Joins: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net)
[19:56:37] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[19:57:32] *** Quits: admin123 (~harrymore@ool-2f12f6cb.dyn.optonline.net) (Ping timeout: 252 seconds)
[19:57:32] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 252 seconds)
[19:58:03] *** Quits: cotko (~cotko@89-212-138-82.static.t-2.net) (Remote host closed the connection)
[19:59:09] *** Quits: dev4449 (~dev4449@5.114.133.129) (Quit: Quit)
[19:59:21] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[19:59:30] *** Joins: pluri (~pluri@user/pluri)
[20:01:35] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc)
[20:01:59] <velix> Wow, I've found a freelancer, who wants to do it for $65
[20:02:05] <velix> I think this will end in a mess :D
[20:02:06] <onosendi> systemfault: I saw you said the other day you decreased TS compile time by changing a few types to interfaces. What's your strategy with types vs interfaces? Use interfaces until you need types?
[20:03:27] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[20:04:02] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[20:04:53] *** Joins: l__q (~modinfo@user/modinfo)
[20:05:37] *** Quits: l__q (~modinfo@user/modinfo) (Client Quit)
[20:06:32] *** Quits: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[20:07:40] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 250 seconds)
[20:09:29] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Read error: Connection reset by peer)
[20:09:35] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[20:10:25] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[20:12:34] *** Joins: sam_1 (~sam_1@87.51.251.118)
[20:13:34] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[20:16:01] *** Joins: mat001 (~mat001@213.143.69.121)
[20:16:40] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[20:16:43] *** Joins: c4017w_ (~c4017@209.52.68.8)
[20:16:57] <systemfault> It's not as simple as type vs interface, it's also related to how you use them. But if you declare a type in a lib that is used all over your codebase, better make it an interface.
[20:16:58] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 260 seconds)
[20:18:19] <systemfault> The compiler doesn't hesitate to copy type aliases... And that can produce huge .d.ts files... And generating them takes a while
[20:18:56] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 250 seconds)
[20:19:39] <systemfault> Nearly all of the time I saved was in the emit phase
[20:20:12] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[20:21:54] *** Joins: EgonX_ (~EgonX@2601:2c6:47f:879e:5564:f68e:22ca:9091)
[20:22:24] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:5564:f68e:22ca:9091) (Read error: Connection reset by peer)
[20:22:27] <onosendi> Ah, gotcha.
[20:24:30] *** Quits: mat001 (~mat001@213.143.69.121) (Remote host closed the connection)
[20:25:07] *** Joins: mat001 (~mat001@72.28.108.216)
[20:25:15] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[20:25:15] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[20:25:15] *** Joins: wroathe (~wroathe@user/wroathe)
[20:27:00] <ThePendulum> why are we so much worse at our jobs than brain surgeons
[20:28:53] *** Joins: Wizzzzzy (~wizzzzzy@148.252.129.27)
[20:29:18] <onosendi> ThePendulum: how do you figure? Btw, did you figure out the vim issue with eslint and vue?
[20:29:37] <ThePendulum> I did not
[20:30:04] <ThePendulum> It's specific to one of my projects and I don't know why
[20:30:44] <ThePendulum> and a patient can only file so many bug reports before they'd be dead
[20:31:00] <onosendi> Haha
[20:31:31] <onosendi> What's vim using to lint? Ale? nvim-lsp? Coc?
[20:32:34] *** Joins: src (~src@user/src)
[20:33:17] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[20:34:33] *** Quits: tkazi (~tkazi@user/tkazi) (Quit: Disconnected)
[20:35:42] *** Joins: tkazi (~tkazi@user/tkazi)
[20:37:37] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[20:39:39] *** Quits: RLa (~RLa@82.131.127.168.cable.starman.ee) (Quit: Client closed)
[20:46:15] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[20:49:01] *** Quits: tkazi (~tkazi@user/tkazi) (Ping timeout: 250 seconds)
[20:49:40] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[20:51:33] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[20:52:22] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[20:52:22] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[20:52:22] *** Joins: wroathe (~wroathe@user/wroathe)
[20:53:43] <devslash> I've got an object that looks like this: [{"GroceryItemID":3,"Name":"Test","PreferredStoreID":3,"Notes":"Test","CreatedOn":"Apr 30 2021 10:43PM"},{"GroceryItemID":2,"Name":"Baguette","PreferredStoreID":7,"Notes":"","CreatedOn":"Apr 30 2021 10:43PM"},{"GroceryItemID":1,"Name":"Saltines","PreferredStoreID":3,"Notes":"","CreatedOn":"Apr 30 2021  6:26AM"}] I am trying to write a map or filter to get unique PreferredStoreID values from this object
[20:54:40] *** Joins: cocomo (~cocomo@103.255.6.64)
[20:54:58] *** Joins: Booster2ooo|2 (~Booster2o@host-78-129-75-220.dynamic.voo.be)
[20:54:59] <onosendi> devslash: paste the object in a pastebin.
[20:55:24] <devslash> https://jsfiddle.net/sntegvjb/
[20:55:44] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[20:55:46] *** Joins: teut (~teut@2401:4900:1c68:97ee:c14d:567d:7988:3ca2)
[20:57:32] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[20:58:02] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Ping timeout: 252 seconds)
[20:58:32] *** Quits: Wizzzzzy (~wizzzzzy@148.252.129.27) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[20:59:15] *** Quits: cocomo (~cocomo@103.255.6.64) (Quit: leaving)
[21:01:07] <systemfault> devslash: The easy way is to map the PreferredStoreID of each element of the array and create a Set from it
[21:01:23] <devslash> how do you do that
[21:01:37] <systemfault> new Set(myArray.map(({ PreferredStoreID }) => PreferredStoreID))
[21:02:14] <systemfault> Then you can get an array back, if you want by taking that set and spreading it: const result = [...new Set(myArray.map(({ PreferredStoreID }) => PreferredStoreID))]
[21:03:51] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[21:04:37] *** Joins: cthulchu_ (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[21:05:53] <devslash> ok that works well
[21:05:55] *** Quits: thelounge8192 (b9dc66fa@67.205.143.82) (Quit: The Lounge - https://thelounge.chat)
[21:06:04] <devslash> thanks
[21:07:23] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[21:07:53] *** Quits: nomic (~nomic@2a00:23c7:ec90:a501:4c0a:4e68:6f7f:23ed) (Quit: Leaving)
[21:08:34] <devslash> systemfault, ok now the next thing that I want to do is get the name based on the ID. Here's my updated JSFIddle: https://jsfiddle.net/sntegvjb/1/
[21:09:09] *** Quits: jonifen (~jonifen@user/jonifen) (Quit: Bye everyone)
[21:10:04] <devslash> uniquePreferredStores does correctly have a unique PreferredStoreID. Now I want to get the names from preferredStores for each unique ID. I can just that with a map right ?
[21:10:19] *** Joins: jonifen (~jonifen@user/jonifen)
[21:11:06] <systemfault> You'd build a Map where the key is the pref store id and the value, an array of related stores
[21:11:23] <systemfault> You can do that with Array#reduce and Map
[21:12:20] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 252 seconds)
[21:13:31] <systemfault> Hmm, I may have misunderstood the question.
[21:13:45] <systemfault> Then yes, a simple .map would work
[21:14:40] *** Joins: fef (~thedawn@user/thedawn)
[21:16:52] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[21:17:13] *** Joins: c4017w__ (~c4017@209.52.68.8)
[21:18:36] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[21:20:38] *** Joins: Akiva (~Akiva@user/Akiva)
[21:20:54] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[21:22:03] <devslash> well I think that you'd need to do what I want to do in 2 steps
[21:22:34] <devslash> first, I want to get a unique array of PreferredStoreIDs from the preferredStoreItems object
[21:22:37] *** Quits: Booster2ooo|2 (~Booster2o@host-78-129-75-220.dynamic.voo.be) (Quit: The Game)
[21:22:57] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[21:22:59] <devslash> then I want to get the name of the store based on those IDs from preferredStores
[21:27:21] <Henry151> howdy; https://bpa.st/EUHA i'm working with something like this, but insead of a list of names, on line 18, i have a dictionary of names and ages. I am trying to understand how to access the values from in the dictionary in a similar context to this. Can someone give me some guidance or links?
[21:27:58] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:b89f:3526:404:e4fa)
[21:29:34] <devslash> systemfault, so how would I do that
[21:30:57] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[21:33:06] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[21:33:12] *** Joins: pingpongball (~pingpongb@27.34.47.155)
[21:33:15] *** Quits: ZeroWalker (~ZeroWalke@2001:9b1:28f8:8300:7164:4c68:eefc:f59d) (Quit: Leaving)
[21:33:37] *** Joins: sgen (~sgen@2607:fea8:7ce1:c8e0:2891:6bd5:ed2a:ab88)
[21:34:13] *** Quits: teut (~teut@2401:4900:1c68:97ee:c14d:567d:7988:3ca2) (Ping timeout: 256 seconds)
[21:34:53] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[21:35:05] *** Quits: dsrt^ (~dsrt@50.231.5.242) (Remote host closed the connection)
[21:35:22] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[21:35:22] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[21:35:22] *** Joins: wroathe (~wroathe@user/wroathe)
[21:35:44] *** Parts: pingpongball (~pingpongb@27.34.47.155) ()
[21:37:06] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Client Quit)
[21:40:31] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[21:40:36] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:b89f:3526:404:e4fa) (Quit: I have gone to sleep. ZZZzzzâ€¦)
[21:40:40] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[21:40:50] *** Joins: admin123 (~harrymore@ool-2f12f6cb.dyn.optonline.net)
[21:42:08] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 250 seconds)
[21:43:26] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 250 seconds)
[21:43:36] *** Quits: tofran (~tofran@37.189.158.134) (Ping timeout: 268 seconds)
[21:45:27] *** Quits: admin123 (~harrymore@ool-2f12f6cb.dyn.optonline.net) (Ping timeout: 268 seconds)
[21:45:27] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 268 seconds)
[21:45:29] *** Joins: crashrep (~crashrep@user/crashrep)
[21:45:53] *** Joins: CoolerX (~CoolerX@user/coolerx)
[21:47:04] <sgen> How can I make this work? MDN Says DocumentFragment does not have a .style property. Im not sure what the workaround would be
[21:47:06] <sgen> https://codepen.io/sgen-the-vuer/pen/vYeMQBg
[21:48:48] <Alexendoo> sgen: Put it on the div
[21:49:19] <onosendi> devslash: is this data coming from an API or a database query?
[21:50:20] <sgen> Alexendoo: thank you
[21:50:33] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[21:51:26] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[21:58:09] *** Joins: tmm88 (~tmm88@user/tmm88)
[21:59:07] *** Joins: minnow (~minnow@79.184.103.124.ipv4.supernova.orange.pl)
[22:00:23] *** Joins: pulse (~pulse@user/pulse)
[22:01:10] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Remote host closed the connection)
[22:01:39] <minnow> which syntax is better? "links = Array.from(nodeList).map(a => a.href)" or "links = []; for (a of nodeList) links.push(a.href)"
[22:02:05] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[22:02:10] <minnow> i.e. better map or push?
[22:03:25] <stenno> you can put the map cb as the second argument of from
[22:03:49] <stenno> Array.from(nodeList, (el) => el.href);
[22:03:58] <stenno> super terse and super cool
[22:04:31] *** Joins: nomic (~nomic@2a00:23c7:ec90:a501:4c0a:4e68:6f7f:23ed)
[22:05:56] <stenno> i think its pretty obvious why this form is superior
[22:06:12] <stenno> Array.from itself already returns the array, no need for nasty loops
[22:06:32] <stenno> and the fact that it .from takes a second param makes it so terse
[22:06:42] <stenno> so its def. the first one
[22:06:42] <Henry151> https://bpa.st/BXLA this is what i'm trying and it's not working... please help!
[22:06:44] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[22:06:44] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[22:07:17] <stenno> Henry151: you should tell us what error you get. 'its not working' is not helpful
[22:07:29] <stenno> Henry151: you have to specify the `key` propery for the <li> element
[22:07:50] <stenno> Henry151: https://reactjs.org/docs/lists-and-keys.html
[22:07:51] *** Joins: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net)
[22:07:59] <minnow> stenno: ah great thanks
[22:08:21] <ljharb> minnow: avoid loops
[22:08:23] <ljharb> !iterations @ minnow
[22:08:23] <jellobot> minnow, ECMAScript's Array contains a number of built-in methods for iteration (e.g., map, reduce, every, some, filter, and forEach). They relieve the need for manual iteration, provide better abstraction than a `for` loop, and make it clear what your iteration is doing. See https://gist.github.com/ljharb/58faf1cfcb4e6808f74aae4ef7944cff
[22:08:29] <Henry151> thanks stenno
[22:09:23] <stenno> always wondered why setting `key` is left to the programmer lol
[22:09:40] <stenno> its kinda surprising caveat
[22:11:26] <devslash> onosendi, at the moment no but it will later.
[22:11:48] <onosendi> devslash: at the moment what?
[22:12:06] <devslash> onosendi> devslash: is this data coming from an API or a database query?
[22:12:22] *** Joins: gproto23 (~gproto23@user/gproto23)
[22:12:25] <velix> devslash: can't an API call lead to a database query? :D
[22:12:46] <onosendi> velix: I meant external API, out of his control :P
[22:12:46] <devslash> yea
[22:12:47] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[22:12:56] <devslash> I mean I think that I am going to modify the backend to include the names with the data automatically so I can get the unique names directly
[22:13:01] *** Quits: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[22:13:10] <ljharb> stenno: because react can't read your code at runtime
[22:13:23] <ljharb> stenno: and because the jsx compiler can't know the semantics of your list items
[22:13:33] <ljharb> iow, you need to choose the unique characteristics of your item
[22:13:33] <onosendi> devslash: what I'm getting at is, it'd be better if you included the store names in the query, so you don't have two objects.
[22:13:44] <onosendi> yeah
[22:13:54] <devslash> stenno key is needed so React can know exactly which element in the DOM needs updating
[22:14:07] <stenno> devslash: i know what they 'key' property does, thank you
[22:14:14] <devslash> you're welcome
[22:14:17] *** Joins: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se)
[22:14:35] <stenno> i didn't ask 'what does it do' but 'why is it needed'
[22:14:49] <devslash> right which is what I just explained to you
[22:15:09] <stenno> no, because react knows very well in all other situations which element in the DOM needs updating
[22:15:12] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[22:15:14] <stenno> because thats kinda the thing react does
[22:15:38] *** Joins: tmm88_ (~tmm88@bl22-240-102.dsl.telepac.pt)
[22:15:58] <stenno> in all cases apart from lists
[22:16:25] <devslash> but lets say you render list items from an object. you end up with <li> data</li> <li> data 2</li> etc... without the key if you update the caption data to data 3 it wont know which lement needs updating
[22:17:20] *** Joins: tofran (~tofran@37.189.158.134)
[22:17:34] <stenno> that... is just repeating again what i linked to earlier instead of explaining it
[22:17:43] *** Joins: c4017w_ (~c4017@209.52.68.8)
[22:17:59] <devslash> you dont seem to get how it works and why its needed
[22:18:13] <stenno> you don't seem to know or else you would have told me
[22:18:14] <devslash> im not saying that to be mean.
[22:18:19] <stenno> but luckily ljharb did
[22:18:21] *** Quits: brw (~bas@haring.bas.sh) (Quit: The Lounge - https://thelounge.chat)
[22:18:44] <devslash> but thats essentially the same thing that I said!
[22:19:09] <Alexendoo> stenno: An example would be something that maps to [<SomeListItem />, <SomeListItem />], where each has some state, a text field or whatever. Without a key there'd be no way to express that their order was swapped in the next render
[22:19:13] <onosendi> devslash: in the meantime, you can do something like this: https://gist.github.com/onosendi/1a34096d0c27ad1c9cf0ea7afbd4aa08
[22:19:21] <Alexendoo> Or if it became 3, to tell react at which point the new one was inserted
[22:19:55] *** Joins: brw (~bas@haring.bas.sh)
[22:20:05] <devslash> onosendi, i am going to make this easier by updating the API so the names are included
[22:20:15] *** Joins: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net)
[22:20:20] <onosendi> devslash: that's the best option, for sure.
[22:21:04] <devslash> yea
[22:21:06] <stenno> devslash: if i have a code like <div><Foo /><Foo /></div> i do not need to set key for Foo
[22:21:08] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[22:21:09] <stenno> Alexendoo: thanks
[22:21:46] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:21:59] <devslash> right. Anytime you loop through an array and create objects of the same type in a component, you do need a key
[22:23:05] <ljharb> not just the same type
[22:23:10] <ljharb> any items in an array
[22:23:19] <stenno> devslash: yes, i know this now because Alexendoo told me
[22:23:19] <devslash> well yea technically thats true
[22:23:20] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[22:23:36] <devslash> stenno you know, you're being kind of a dick to someone who is trying to help you
[22:23:42] *** Quits: FreEm1nD (~FreEm1nD@mail.guarapari.store) (Quit: Leaving)
[22:23:49] *** Quits: tofran (~tofran@37.189.158.134) (Ping timeout: 240 seconds)
[22:24:10] *** Joins: admin123 (~harrymore@ool-2f12f6cb.dyn.optonline.net)
[22:25:22] <stenno> i don't want to be a dick, i just want to show you that you were providing no additional information
[22:25:57] <stenno> so the actual important thing is when you have a syntax like, say,  <ul>{ array of jsx }</ul>
[22:26:04] <devslash> I think that I was but you're just dismissing it
[22:26:19] <stenno> so if my JSX looked like <ul><ListItem /><ListItem /></ul> it will be fine
[22:26:48] <devslash> without a key, you'll still see a warning in the dev console
[22:26:54] <devslash> try it out
[22:27:58] <PenguinMan98> They key is needed so the system doesn't have to update the whole list if one item changes.
[22:28:08] <stenno> ah yes, as expected, <ul><ListItem /><ListItem /></ul> doesn't give me a warning
[22:28:29] <PenguinMan98> If you manually create the list, then that's handled because the component has a reliable structure
[22:28:33] <stenno> yep!
[22:29:09] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[22:29:29] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Quit: Client closed)
[22:29:46] *** Joins: Akiva (~Akiva@user/Akiva)
[22:31:27] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:31:34] <PenguinMan98> If you have a dynamic list without a key though, then the component structure changes and if one of the items kicks off a render, the structure can't tell which one did it and should be updated, so it has to render them all. This slows things down. Not ideal. Also, if you have code that inserts or reorders that list and you don't have keys, its
[22:31:35] <PenguinMan98> easy for the scripts to get confused and sometimes update the wrong thing.
[22:32:02] *** Joins: oscurochu (~oscurochu@2603:9000:c202:1034:bdc2:5ae0:346e:f66f)
[22:32:18] <PenguinMan98> And picking a good key is super important. I've had to troubleshoot wonky scripts doing bad renders because somebody didn't use a unique key.
[22:32:25] <PenguinMan98> Pain in the butt.
[22:32:41] <stenno> i know that 'array index' is _not_ a good key :P
[22:32:48] *** Quits: admin123 (~harrymore@ool-2f12f6cb.dyn.optonline.net) (Ping timeout: 256 seconds)
[22:33:01] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:33:16] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[22:33:22] <onosendi> devslash: when you get the name in the query: https://gist.github.com/onosendi/cfab69a02ae3ce39ef6d1346270a7ff5
[22:33:27] <PenguinMan98> Only if a script is going to reorder them. In all other cases it shouldn't be an issue
[22:33:56] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:51ae:1989:3c73:9d89) (Quit: Textual IRC Client: www.textualapp.com)
[22:34:23] <hassoon_> weird text cursor is visible wherever i click on a text i chromse
[22:34:28] <hassoon_> * chrome
[22:34:35] <hassoon_> it's happening everywhere
[22:34:51] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:36:04] *** Joins: mat001_ (~mat001@213.143.69.121)
[22:36:04] <velix> hassoon_: press F7
[22:36:12] <velix> it's a helper function
[22:36:18] <velix> accessability stuff
[22:37:20] *** Quits: mat001_ (~mat001@213.143.69.121) (Remote host closed the connection)
[22:37:56] *** Joins: mat001_ (~mat001@72.28.108.216)
[22:37:58] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[22:39:17] *** Quits: mat001 (~mat001@72.28.108.216) (Ping timeout: 240 seconds)
[22:42:33] *** Quits: brw (~bas@haring.bas.sh) (Quit: The Lounge - https://thelounge.chat)
[22:42:57] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[22:43:32] <stenno> devslash: i appreciate your help and i shouldn't at least have argued about it, sorry
[22:43:38] *** Joins: brw (~bas@haring.bas.sh)
[22:45:11] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[22:47:51] *** Joins: Akimb (~Akimb@86.100.13.100)
[22:48:57] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[22:49:43] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[22:50:12] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 268 seconds)
[22:55:06] <onosendi> devslash: select psi.*, ps.name from preferred_store_items psi left join preferred_store ps on psi.store_id = ps.id;
[22:55:12] <onosendi> :)
[22:56:09] <hassoon_> velix: aaaaaah i see
[22:56:32] <velix> #annoying
[22:56:57] *** Quits: vladoski (~vladoski@2001:b07:add:d406:eb67:9fa3:5edf:a9b4) (Remote host closed the connection)
[22:58:18] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[23:03:51] *** Quits: pluri (~pluri@user/pluri) (Quit: Textual IRC Client: www.textualapp.com)
[23:04:34] *** Joins: daoumilseitek (~daoumilse@164.96.146.77.rev.sfr.net)
[23:05:20] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 250 seconds)
[23:06:57] *** Joins: salad1 (~cucumber@82.76.150.118)
[23:06:57] *** Quits: salad (~cucumber@82.76.150.118) (Read error: Connection reset by peer)
[23:08:32] *** Joins: pluri (~pluri@user/pluri)
[23:12:07] *** Joins: pluri_ (~pluri@user/pluri)
[23:12:53] *** Quits: pluri (~pluri@user/pluri) (Ping timeout: 250 seconds)
[23:15:52] *** Quits: tmm88_ (~tmm88@bl22-240-102.dsl.telepac.pt) (Ping timeout: 256 seconds)
[23:16:14] *** Joins: Wizzzzzy (~wizzzzzy@148.252.129.27)
[23:17:43] <NoiseEee> https://www.youtube.com/watch?v=BrcugNqRwUs is friggin amazing (via NodeJS Weekly)
[23:17:44] <skillbot> YouTube Title: How to buy Stocks with JavaScript // Algo Trading Tutorial for Dummies
[23:18:01] <devslash> oscurochu, thanks. Im really comfortable with SQL
[23:18:03] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[23:18:15] *** Joins: c4017w__ (~c4017@209.52.68.8)
[23:19:04] *** Joins: pluri (~pluri@user/pluri)
[23:20:37] *** Quits: oscurochu (~oscurochu@2603:9000:c202:1034:bdc2:5ae0:346e:f66f) (Ping timeout: 240 seconds)
[23:20:50] *** Quits: pluri_ (~pluri@user/pluri) (Ping timeout: 260 seconds)
[23:21:48] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[23:22:17] <onosendi> devslash: Are you using postgres?
[23:24:08] <hassoon_> velix: it is !
[23:24:25] *** Joins: oscurochu (~oscurochu@2603:9000:c202:1034:bdc2:5ae0:346e:f66f)
[23:24:37] <oscurochu> devslash were you talking to me?
[23:24:51] <onosendi> oscurochu: nah, me.
[23:24:56] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Remote host closed the connection)
[23:25:00] <velix> I thought me?
[23:25:07] <velix> hassoon_: At least you can turn it off.
[23:25:08] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[23:25:30] <oscurochu> i got a notification and i was idling so i was confused
[23:25:57] <oscurochu> i keep geting disconnected too, idk why. i guess irc doesn't like when people are invactive?
[23:26:37] <hassoon_> velix: glad i could, thanks
[23:36:30] *** Quits: CoolerX (~CoolerX@user/coolerx) (Quit: Leaving)
[23:40:48] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[23:41:51] *** Joins: admin123 (~harrymore@cpe-69-203-109-69.nyc.res.rr.com)
[23:42:53] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[23:44:17] *** Quits: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[23:44:52] *** Joins: summersault (~summersau@179.221.251.36)
[23:45:31] *** Quits: Wizzzzzy (~wizzzzzy@148.252.129.27) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:46:13] *** Joins: cotko (~cotko@188-230-251-153.dynamic.t-2.net)
[23:47:35] *** Joins: tmm88_ (~tmm88@bl22-240-102.dsl.telepac.pt)
[23:48:07] *** Joins: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net)
[23:48:10] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[23:50:04] *** Joins: diamondbond (~diamondbo@175.157.238.109)
[23:51:41] *** Quits: diamondbond (~diamondbo@175.157.238.109) (Client Quit)
[23:55:28] *** Joins: banana__ (~banana_@2603-6000-b500-9ce3-f040-8cef-0a9d-e37c.res6.spectrum.com)
[23:58:37] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[23:58:48] *** Joins: blezz (~blez@213-130-92-213.ip.btc-net.bg)
[23:58:53] *** Joins: Wizzzzzy (~wizzzzzy@148.252.129.27)
