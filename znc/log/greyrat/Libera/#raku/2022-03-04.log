[00:18:00] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[00:18:00] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[00:19:17] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[00:19:21] *** Quits: Darkcoal (~user@user/Darkcoal) (Quit: Darkcoal)
[00:19:48] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[00:31:14] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[01:31:14] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[01:31:14] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[01:32:21] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[01:33:35] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[02:03:18] *** Quits: greyrat_ (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[02:03:38] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[02:07:33] *** Server sets mode: +nt 
[02:57:59] *** Joins: mo (~mo@41.232.220.202)
[02:58:46] *** Quits: mo (~mo@41.232.220.202) (Client Quit)
[03:09:49] *** Quits: discord-raku-bot (~RakuIRC@ip5f5ab74b.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[03:10:21] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab74b.dynamic.kabel-deutschland.de)
[03:38:25] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[04:38:26] *** Quits: greppable6 (gre-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[04:38:26] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[04:38:26] *** Quits: shareable6 (sha-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[04:38:26] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[04:38:26] *** Quits: bisectable6 (bis-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[04:38:26] *** Quits: notable6 (not-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[04:38:26] *** Quits: bloatable6 (blo-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[04:38:26] *** Quits: sourceable6 (sou-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[04:38:26] *** Quits: committable6 (com-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[04:38:26] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[04:38:26] *** Quits: quotable6 (quo-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[04:38:26] *** Quits: releasable6 (rel-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[04:38:26] *** Quits: nativecallable6 (nat-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[04:38:26] *** Quits: coverable6 (cov-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[04:38:26] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[04:38:26] *** Quits: tellable6 (tel-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[04:38:26] *** Quits: benchable6 (ben-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[04:38:27] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[04:38:44] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[04:39:01] *** Joins: unicodable6 (uni-able@2001:41d0:2:5eb5::)
[04:39:44] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[04:39:55] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[04:40:59] *** Joins: notable6 (not-able@2001:41d0:2:5eb5::)
[04:41:18] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[04:41:27] *** Joins: sourceable6 (sou-able@2001:41d0:2:5eb5::)
[04:41:33] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[05:29:10] *** Joins: Shane__ (~Shane@cpe-75-85-166-79.san.res.rr.com)
[05:39:08] *** Joins: quotable6 (quo-able@2001:41d0:2:5eb5::)
[05:39:33] *** Joins: committable6 (com-able@2001:41d0:2:5eb5::)
[05:40:53] *** Joins: releasable6 (rel-able@2001:41d0:2:5eb5::)
[05:41:00] *** Joins: bisectable6 (bis-able@2001:41d0:2:5eb5::)
[06:39:35] *** Joins: shareable6 (sha-able@2001:41d0:2:5eb5::)
[06:39:41] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[06:40:09] *** Joins: bloatable6 (blo-able@2001:41d0:2:5eb5::)
[06:40:39] *** Joins: tellable6 (tel-able@2001:41d0:2:5eb5::)
[06:40:57] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[07:26:54] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[07:27:25] *** Joins: frost (~frost@user/frost)
[07:40:43] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[08:40:44] *** Quits: committable6 (com-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:40:44] *** Quits: quotable6 (quo-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:40:44] *** Quits: bisectable6 (bis-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:40:44] *** Quits: releasable6 (rel-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:40:44] *** Quits: nativecallable6 (nat-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:40:44] *** Quits: coverable6 (cov-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:40:44] *** Quits: sourceable6 (sou-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:40:44] *** Quits: notable6 (not-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:40:44] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:40:44] *** Quits: bloatable6 (blo-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:40:44] *** Quits: greppable6 (gre-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:40:44] *** Quits: benchable6 (ben-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:40:44] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:40:44] *** Quits: shareable6 (sha-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:40:44] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:40:44] *** Quits: tellable6 (tel-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:40:44] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:40:44] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:41:28] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[08:41:39] *** Joins: unicodable6 (uni-able@2001:41d0:2:5eb5::)
[08:41:49] *** Joins: notable6 (not-able@2001:41d0:2:5eb5::)
[08:41:59] *** Joins: sourceable6 (sou-able@2001:41d0:2:5eb5::)
[08:42:36] *** Joins: bloatable6 (blo-able@2001:41d0:2:5eb5::)
[08:42:37] *** Joins: bisectable6 (bis-able@2001:41d0:2:5eb5::)
[08:42:44] *** Joins: shareable6 (sha-able@2001:41d0:2:5eb5::)
[08:43:01] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[08:43:07] *** Joins: releasable6 (rel-able@2001:41d0:2:5eb5::)
[08:43:28] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[08:43:30] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[08:43:33] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[08:43:59] *** Joins: tellable6 (tel-able@2001:41d0:2:5eb5::)
[09:37:55] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:40:14] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[09:41:14] *** Joins: quotable6 (quo-able@2001:41d0:2:5eb5::)
[09:42:45] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[09:47:41] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[09:51:58] *** Joins: frost (~frost@user/frost)
[09:57:52] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[10:19:46] *** Joins: frost (~frost@user/frost)
[10:22:07] <guifa>  interesting
[10:22:42] <guifa> Apparently the most performant way to create an object with numerous attributes is just self.bless: attr-a => foo, attr-b => bar
[10:24:24] <guifa> I have a bunch of classes where .new receives an Array-like bit of data, so I figured all of the hashy stuff involved with named arguments would be a slow down
[10:27:29] <guifa> passing the array through to BUILD or TWEAK and directly setting the attributes ($!attr-a = @args[0]; $!attr-b = @args[1], …) was about 50% slower than self.bless: attr-a => @args[0], attr-b => @args[1], …)
[10:39:40] *** Joins: statisfiable6 (sta-able@2001:41d0:2:5eb5::)
[10:41:17] *** Joins: abraxxa (~ahartmai@smtp.hartmaier.priv.at)
[10:41:46] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95)
[10:43:19] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[10:47:45] *** Quits: abraxxa (~ahartmai@smtp.hartmaier.priv.at) (Ping timeout: 256 seconds)
[10:48:38] *** Joins: abraxxa (~ahartmai@tsa-tc-flod.t-systems.at)
[11:02:29] *** Joins: Darkcoal (~user@user/Darkcoal)
[11:21:26] <nine> guifa: we have spent considerable time to optimize object construction, so it's not terribly surprising that it's actually quite fast :)
[11:27:48] *** Quits: MasterDuke (~MasterDuk@94.0.188.131) (Ping timeout: 240 seconds)
[11:42:32] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[11:43:07] *** Joins: committable6 (com-able@2001:41d0:2:5eb5::)
[11:46:52] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[11:56:11] *** Quits: abraxxa (~ahartmai@tsa-tc-flod.t-systems.at) (Read error: Connection reset by peer)
[11:58:12] *** Joins: abraxxa (~ahartmai@tsa-tc-flod.t-systems.at)
[12:53:21] <elcaro> guifa: Yeah, I've found with a couple AoC puzzles. Sometime I'd write a solution using a hash, but when the "keys" are known at compiletime, using a class (where "keys" == method) even an anon class trounced the hash in runtime
[12:54:03] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[12:56:53] *** Joins: ProperN[out] (~holyShizn@user/propernoun)
[12:57:47] *** Quits: ProperNoun (~holyShizn@user/propernoun) (Ping timeout: 256 seconds)
[13:57:47] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[13:57:47] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[13:58:22] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[14:13:02] <codesections> guifa/elcaro: for some (2019) benchmark numbers on object construction, see jnthn's Performance Update talk http://jnthn.net/papers/2019-perlcon-performance.pdf
[14:13:23] <codesections> (esp. slides 90+)
[14:34:24] <discord-raku-bot> <Nemokosch#9980> > Destructuring (and signature unpacks)
[14:34:24] <discord-raku-bot> <Nemokosch#9980> came across this one 😅
[14:58:22] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[15:00:33] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[15:00:52] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[15:37:41] *** Quits: abraxxa (~ahartmai@tsa-tc-flod.t-systems.at) (Remote host closed the connection)
[15:38:04] *** Joins: abraxxa (~ahartmai@tsa-tc-flod.t-systems.at)
[15:38:09] *** Quits: abraxxa (~ahartmai@tsa-tc-flod.t-systems.at) (Remote host closed the connection)
[15:38:10] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[15:39:22] *** Joins: abraxxa-home (~alex@2a01:100:2000:2500::22)
[15:41:12] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[16:15:54] *** Joins: Altai-man (~sena_kun_@static-84-42-198-52.net.upcbroadband.cz)
[16:28:17] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[16:33:34] *** Joins: tejr (~tejr@user/tejr)
[16:33:40] *** Quits: rypervenche (~rypervenc@user/rypervenche) (Quit: brb)
[16:40:59] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[17:46:28] <guifa> nine: yeah, I knew there had been a lot of work on it, but it was just surprising that the direct assignment was so much slower
[17:47:16] <guifa> the penalty for direct assignment (via TWEAK, BUILD, or similar) is quite substantial 
[17:49:56] <guifa> https://gist.github.com/alabamenhu/86ee3f276b2bf1fc727c572bc4d528be 
[17:53:59] <guifa> ^^ designed to roughly mirror how most of the stuff is made in CLDR and the different classes are things I think I've tried in the past / am using now / considered using.
[18:03:03] <guifa> I've been using method B, so switching to A whenever I can and G when I can't should get me a pretty massive improvement at runtime
[18:11:15] *** Quits: Altai-man (~sena_kun_@static-84-42-198-52.net.upcbroadband.cz) (Read error: Connection reset by peer)
[18:11:35] *** Joins: Altai-man (~sena_kun_@static-84-42-198-52.net.upcbroadband.cz)
[18:22:40] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[18:23:01] *** Joins: greyrat_ (~greyrat@ip202.ip-51-178-215.eu)
[18:25:19] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Ping timeout: 256 seconds)
[18:25:31] *** Joins: japhb_ (~geoff@mugs/japhb)
[18:25:32] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[18:26:28] *** Joins: Maylay_ (~gren@108-198-59-230.lightspeed.miamfl.sbcglobal.net)
[18:26:55] *** Server sets mode: +nt 
[18:27:48] *** Joins: perlmaros_ (~perlmaros@master.k-1.com)
[18:28:50] *** Joins: phogg` (~phogg@static-108-51-94-2.washdc.fios.verizon.net)
[18:29:52] *** Quits: Altai-man (~sena_kun_@static-84-42-198-52.net.upcbroadband.cz) (*.net *.split)
[18:29:52] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (*.net *.split)
[18:29:52] *** Quits: sena_kun (~koto@94.142.239.45) (*.net *.split)
[18:29:52] *** Quits: japhb (~geoff@mugs/japhb) (*.net *.split)
[18:29:52] *** Quits: perlmaros (~perlmaros@master.k-1.com) (*.net *.split)
[18:29:53] *** Quits: Kaiepi (~Kaiepi@156.34.47.253) (*.net *.split)
[18:29:53] *** Quits: guifa (~guifa@host-68-169-141-191.MIDOLT1.epbfi.com) (*.net *.split)
[18:29:53] *** Quits: dogbert17 (~dogbert@c83-253-59-194.bredband.tele2.se) (*.net *.split)
[18:29:53] *** Quits: vrurg (~vrurg@45.74.95.181) (*.net *.split)
[18:29:53] *** Quits: sftp (~sftp@79.174.36.182) (*.net *.split)
[18:29:53] *** Quits: juanfra__ (~juanfra@user/juanfra) (*.net *.split)
[18:29:53] *** Quits: jrjsmrtn (~jrjsmrtn@ip-83-134-41-224.dsl.scarlet.be) (*.net *.split)
[18:29:53] *** Quits: phogg (~phogg@user/phogg) (*.net *.split)
[18:29:53] *** Quits: gugod (gugod@li7-202.members.linode.com) (*.net *.split)
[18:29:53] *** Quits: Maylay (~gren@108-198-59-230.lightspeed.miamfl.sbcglobal.net) (*.net *.split)
[18:29:53] *** perlmaros_ is now known as perlmaros
[18:29:53] *** sftp_ is now known as sftp
[18:30:14] *** Joins: sena_kun (~koto@94.142.239.45)
[18:32:50] *** Joins: gugod (gugod@li7-202.members.linode.com)
[18:44:21] <codesections> m: my class A {}; say A.^lookup('BUILD'); say A.^lookup('TWEAK'); say A.^lookup('bless')
[18:44:22] <camelia> rakudo-moar 1d733cbfa: OUTPUT: «(Mu)␤(Mu)␤bless␤»
[18:45:50] <codesections> ^^^^ guifa_my understanding is that classes always have a .bless method but *don't* have a BUILD/TWEAK unless you give them one.  So using BUILD/TWEAK involves an extra method call (not an alternative one)
[18:50:52] <codesections> and the pre-assignment options (F & G) are declaring extra variables, so I'm not surprised to see a bit of a slowdown there
[18:51:22] *** Joins: Sgeo (~Sgeo@user/sgeo)
[18:55:51] <codesections> (I _am_ a bit surprised to see how slow the dynamic BUILD is.  I would have bet on it being slower than BUILD, but a 2.7× difference is a lot
[18:55:56] <codesections> )
[19:25:56] <guifa_> codesections yeah, I figured the pre-assignment would be slower, test just shows how much slower
[19:28:54] <guifa_> Optimizations in theory could remove those assignments, I'd think, just didn't know how strong the static optimizer was for that type of stuff
[19:31:36] <codesections> My understanding is that, right now, there's almost no static optimization – lots of JIT optimization, but not much static.  (But I'm hardly an expert)
[19:33:32] <guifa_> In any case, this adds one more thing for me to do while I'm cleaning up code in CLDR
[19:34:05] <guifa_> but with the nice side effect of it probably reducing up the load time for language data by nearly 50%
[19:37:50] <guifa_> it's just … so many files to update hahaha (I think it was gfldex that ran the numbers and it's the largest module by LOC in the ecosystem)
[19:51:22] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[19:51:22] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[19:52:25] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[19:53:58] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[20:09:10] <japhb_> guifa_: How do all those compare with *not* overriding new, and just instantiating a class with 12 attributes the "old fashioned way"?
[20:10:46] *** japhb_ is now known as japhb
[20:12:02] <guifa_> japhb_ : good question.  That doesn't work in my case (the .new for CLDR types passes an index and a blob: no type has knowledge of other types are constructed), but I'll try adding it to the test suit
[20:24:37] <guifa_> japhb_ it's basically the same speed, which kind of makes sense.  I think the base .new is just method new (|c) { self.bless: |c }, and in both cases they'll be the multi dispatcher's first attempt
[20:25:31] <japhb> Nod
[21:10:08] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95)
[21:24:20] *** phogg` is now known as phogg
[21:24:26] *** Quits: phogg (~phogg@static-108-51-94-2.washdc.fios.verizon.net) (Changing host)
[21:24:26] *** Joins: phogg (~phogg@user/phogg)
[21:27:46] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:38:34] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[22:03:12] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:9479:a856:8538:8810)
[22:34:24] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:9479:a856:8538:8810) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:40:55] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[22:41:22] *** Quits: sena_kun_ (~sena_kun_@static-84-42-198-52.net.upcbroadband.cz) (Quit: Leaving)
[23:41:22] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[23:41:22] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[23:43:19] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
