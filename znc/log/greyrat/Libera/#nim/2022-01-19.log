[00:00:06] <FromDiscord> <Patitotective> Maybe it should iterate backwards through `indentStack` until `$0` matches an element, and the index means the levels of indentation to get out from
[00:00:10] <FromDiscord> <Patitotective> (edit) "Maybe it should iterate backwards through `indentStack` until `$0` matches an element, and the index means the levels of indentation to get out from ... " 03added "(?)"
[00:00:42] <FromDiscord> <Patitotective> (edit) "Maybe it should iterate backwards through `indentStack` until `$0` matches an element, and the index ... means" 03added "it matched in"
[00:01:06] <PMunch> Yeah the fix is pretty trivial: http://ix.io/3MI4
[00:01:34] <PMunch> Basically when getting out of indentation drop until the new indentation matches the current one
[00:01:54] <PMunch> In fact I'm pretty sure you wouldn't need the indentStack at all
[00:02:17] <FromDiscord> <Patitotective> In reply to @PMunch "In fact I'm pretty": Then?
[00:02:30] <PMunch> Jut use a number to track the current indentation
[00:02:39] <PMunch> I think that should work
[00:02:51] <FromDiscord> <Patitotective> Let me try
[00:04:39] <FromDiscord> <Patitotective> What is the opposite to the `inc` proc?
[00:06:02] <FromDiscord> <mratsim> In reply to @Patitotective "What is the opposite": dec
[00:06:18] <FromDiscord> <mratsim> you can also use inc(-1) I think
[00:06:22] <FromDiscord> <mratsim> or -=
[00:06:27] <FromDiscord> <mratsim> or += -1
[00:07:18] <FromDiscord> <Patitotective> In reply to @PMunch "Jut use a number": What do you think? http://ix.io/3MI5
[00:20:40] <PMunch> indOut could just also set the new indent level, maybe after verifying that the new level is lower than the old one
[00:23:09] <FromDiscord> <Patitotective> üëç
[00:39:12] <madprops> patito detective
[00:43:32] <FromDiscord> <The Bron Jame (real)> How would I read input without making a newLine?
[00:49:09] <FromDiscord> <Elegantbeef> `stdin.readChar` though it's blocking
[00:56:29] <NimEventer> New thread by Reversem3: Nimble.directory down ? , see https://forum.nim-lang.org/t/8824
[00:57:54] *** Quits: PMunch (~PMunch@user/pmunch) (Quit: leaving)
[01:03:57] <FromDiscord> <inv> what is wrong here? https://media.discordapp.net/attachments/371759389889003532/933111994935038012/unknown.png
[01:04:13] <FromDiscord> <inv> autocomplete does not work
[01:04:39] <FromDiscord> <gerwy> In reply to @Patitotective "The _npeg_ example of": are you making a lang or something?
[01:04:51] <FromDiscord> <gerwy> because im making one too :3‚Üµand its indentation based
[01:06:40] <FromDiscord> <Rosen> In reply to @inv "what is wrong here?": I also had it not work at all on windows
[01:06:50] <FromDiscord> <Rosen> Eventually gave up and just used vscode lmao but if you come up with a fix let me know
[01:08:10] <FromDiscord> <inv> @Rosen it is not windows. but WSL2
[01:08:30] <FromDiscord> <Rosen> oh dayum
[01:08:53] <FromDiscord> <inv> and for windows - the same problem - nvim made coredump and decided than no way to avoid vscode. but decided to try one more time in WSL2
[01:09:23] <FromDiscord> <inv> (edit) "and for windows - the same problem - nvim made coredump and decided than no way to avoid vscode. but decided to try one more time in WSL2 ... " 03added "and it does not work again. but vs+nim-plugin works fine again in WSL2 too"
[01:11:59] <FromDiscord> <IsaacPaul> Nim needs better error/error reporting for their tools. If autocomplete fails I'd like to see why. Perhaps I can open up the plugin and fix it. Currently using vscode without nimsuggest as that doesn't work for most of my projects.
[01:12:37] <FromDiscord> <Rosen> ok, so I copied the essence of that minimal config in my wsl2 env @inv and got autocompletion working correctly https://media.discordapp.net/attachments/371759389889003532/933114181354422272/unknown.png
[01:12:56] <FromDiscord> <Rosen> dumb questions that have to be asked, you did :PlugInstall, right? And you're trying to use it on a .nim file that's on disk?
[01:14:24] <FromDiscord> <inv> I did. hm, with your example - it stuck for first autocomplete, but started to work later
[01:15:09] <FromDiscord> <Rosen> strange
[01:17:21] <FromDiscord> <inv> it works and does not work the same line and char. brrr
[01:17:46] <FromDiscord> <inv> it should be group_by here, and I see it ... sometimes https://media.discordapp.net/attachments/371759389889003532/933115473057419324/unknown.png
[01:18:19] <FromDiscord> <inv>  https://media.discordapp.net/attachments/371759389889003532/933115611532361818/unknown.png
[01:18:26] <FromDiscord> <Rosen> I'll try to get datamancer and repro that myself
[01:18:32] <FromDiscord> <inv> ctrl+space helps ... sometimes
[01:20:00] <FromDiscord> <Rosen> It's definitely that macro that's screwing it up
[01:20:16] <FromDiscord> <Rosen> Template, rather
[01:20:22] <FromDiscord> <inv> I do: `df.` then g - nothin, then r - nothing. then I delete last char , then ctrl+space - and I have it
[01:20:56] <FromDiscord> <inv> in vscode it works without any problem at all - that is why strange - I expected they use the same nimsuggesst
[01:21:05] <FromDiscord> <inv> (edit) "problem" => "problems"
[01:22:01] <FromDiscord> <inv> ah! looks like it is the same - but in vscode I type it faster üôÇ
[01:32:47] <FromDiscord> <Patitotective> In reply to @madprops "patito detective": just like conan
[01:33:34] <FromDiscord> <Patitotective> In reply to @Life Sucks "are you making a": I'm making a preferences system yaml-like‚ÜµIt is based on a Python library https://patitotective.github.io/PREFS/
[01:40:11] *** Joins: rockcavera (~rc@192.12.113.78)
[01:40:11] *** Quits: rockcavera (~rc@192.12.113.78) (Changing host)
[01:40:11] *** Joins: rockcavera (~rc@user/rockcavera)
[01:46:32] <FromDiscord> <gerwy> Ah nice
[01:51:25] *** Quits: mahlon (~mahlon@martini.nu) (Ping timeout: 256 seconds)
[01:52:03] *** Quits: neocron (~NeoCron@p200300c4cf1b4400f695d81d4d068b5c.dip0.t-ipconnect.de) (Quit: Leaving)
[01:54:11] *** Joins: mahlon (~mahlon@martini.nu)
[02:30:33] <FromDiscord> <ajusa> Why does Nim get tripped up if I use the word include as an argument to a macro? Tried doing `foo(hx-include=5)` and it didn't compile. I know include is a keyword, but why is it an issue in a substring?
[02:31:03] <FromDiscord> <Elegantbeef> cause it's attempting to parse an include statmt
[02:31:04] <FromDiscord> <ajusa> Fwiw I used stropping to get the code working, but was curious as to why
[02:31:31] <FromDiscord> <ajusa> So include can't be used in any variables then? Or is it a macro thing?
[02:31:35] <FromDiscord> <Elegantbeef> Some keywords cause the parser to go "ok we're looking for a X statement"
[02:32:14] <arkanoid> I have defined an iterator that works when used like "for x in myIt(y)", but doesn't compile if "for i,x in myIt(y).pairs():"
[02:32:17] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3MIA
[02:32:18] <FromDiscord> <Elegantbeef> Since it's a `dotExpr`
[02:32:21] <arkanoid> what am I doing wrong?
[02:32:58] <FromDiscord> <Elegantbeef> `import std/enumerate` `for x, y in enumerate myIt(y)`
[02:33:11] <FromDiscord> <Elegantbeef> `pairs` is an iterator that is implemented for types
[02:34:11] <FromDiscord> <Patitotective> Hey @PMunch, I was wondering how to avoid that after you get out from two levels of indentation (to zero) the first level tries to indent out but it will fail since 0 is not less than 0‚Üµhttp://ix.io/3MIz
[02:34:46] <FromDiscord> <Elegantbeef> you could also implement a `myItPairs(y)` which yields `(int, T)`
[02:36:16] <arkanoid> could you please expand a little bit what you mean with `pairs` is an iterator that is implemented for types?
[02:36:42] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/theindex.html#pairs
[02:37:41] <FromDiscord> <Elegantbeef> `pairs` is implicitly called when you do `for x, y in z` but it needs to be implemented for `z`, due to that you're using an `iterator` you'd either want to have a `pairs` variant or use enumerate
[02:38:40] <arkanoid> got it, thanks
[03:01:36] <FromDiscord> <Patitotective> Hey @enthus1ast, did you start with the char's table macro?
[03:02:10] <FromDiscord> <Patitotective> (edit) "Hey @enthus1ast, did you start with the char's table macro? ... " 03added "I don't understand it yet üòÖ"
[03:03:08] <FromDiscord> <Patitotective> (Context: I want to convert `"\\n"` into `"\n"`)
[03:03:44] <FromDiscord> <Patitotective> (edit) "(Context: I want to convert ... `"\\n"`" 03added "unescape the backslash to get the actual escape sequence:"
[03:03:49] <FromDiscord> <Patitotective> (edit) 04removed "convert"
[03:20:02] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[03:23:08] <FromDiscord> <evoalg> @ElegantBeef is the reason that a lot of things in system don't have examples because Nim is a small community? I'm referring to when I wanted to use setControlCHook but I was completely lost as how to use it in Nim if it wasn't for the example of stackoverflow? In python it's really easy to look up examples of most things I might want, but as I say I know Nim isn't a big community. Unless I'm looking in the wrong place for setControlCHook
[03:24:30] <FromDiscord> <Elegantbeef> Kinda, someone probably didnt make an example, time for a PR from you
[03:25:23] <FromDiscord> <evoalg> so a PR isn't opening an issue?
[03:25:59] <FromDiscord> <Elegantbeef> A PR is a pull request, i'm suggesting you add a `runnableExample` to the `setControlCHook`
[03:27:40] <FromDiscord> <evoalg> oh ... I'm not experienced in using git ... I would somehow add it using git right?
[03:27:48] <FromDiscord> <Elegantbeef> Yep
[03:28:28] <FromDiscord> <Elegantbeef> You'd fork the compiler, go into the nim file you want to add the runnable example to, add it, make a commit pushing to your fork, then make a PR to the Nim repo
[03:33:04] <FromDiscord> <evoalg> ok I forked https://github.com/nim-lang/Nim
[03:34:00] <FromDiscord> <Elegantbeef> now you'll want to go to `lib/system.nim` and add your runnable example
[03:34:58] <FromDiscord> <Patitotective> I'm creating a nimble library and I was wondering what should be included into main module (`niprefs.nim`), should I just export all the other modules?
[03:35:34] <FromDiscord> <Elegantbeef> You could it's up to you, you dont need a "main" module for a library
[03:36:21] <FromDiscord> <Patitotective> Oh, really? Thanks :uos
[03:36:30] <FromDiscord> <Patitotective> (edit) ":uos" => "üôÉ"
[03:37:33] <FromDiscord> <evoalg> I've gone to Nim/tree/devel/lib/system ... but that's not lib/system.nim
[03:37:55] <FromDiscord> <Elegantbeef> You cloned the repo right?
[03:38:23] <FromDiscord> <Elegantbeef> After forking you want to clone your fork, then go to that directory on your drive
[03:38:31] <FromDiscord> <evoalg> I forked it ... oh there's a system.nim and a system folder ... that was my problem
[03:38:47] <FromDiscord> <evoalg> oh I don't do it on the github site?
[03:39:09] <FromDiscord> <Elegantbeef> I mean you can but life is easier working in a proper environment
[03:39:17] <FromDiscord> <evoalg> ok
[03:41:36] <FromDiscord> <Elegantbeef> Hmm i dont know if there is a good way to properly test this...
[03:42:01] <FromDiscord> <Elegantbeef> Ideally the runnable example has a assurance it works, but you need to send the ctrl+c to the program somehow
[03:42:29] <FromDiscord> <evoalg> oh so a runnable example isn't just meant as an example for users?
[03:42:53] <FromDiscord> <Elegantbeef> Well it is, but ideally you have assurances that it works
[03:43:24] <FromDiscord> <Elegantbeef> I cant think of how to assure this so i'd say just write an example and make a PR and either it'll get accepted or you'll get told to sod off but have learned how to make a PR
[03:44:18] <FromDiscord> <congusbongus> there should be a way to send signals to programs in tests, it might be more involved in compiled languages in nim but it's possible
[03:44:27] <FromDiscord> <congusbongus> (edit) "in" => "like"
[03:44:29] <FromDiscord> <evoalg> examples are good ... there are lots of cases where I ended up coming here and asking you because there were no examples ... or that's at least how if feels to me, being new
[03:45:16] <FromDiscord> <exelotl> yep we can always benefit from more examples
[03:45:32] <FromDiscord> <evoalg> I would imagine (but might be quite wrong) that most people checking out a language wouldn't come on irc / discord etc
[03:47:23] <FromDiscord> <evoalg> ahhh some of the examples are put in with comments ... I will do that
[03:47:57] *** Quits: rlp10 (~rp@cpc77289-basf12-2-0-cust607.12-3.cable.virginm.net) (Ping timeout: 240 seconds)
[03:49:58] *** Joins: rlp10 (~rp@cpc77289-basf12-2-0-cust607.12-3.cable.virginm.net)
[03:52:41] <FromDiscord> <evoalg> ok beefy I added an example, and I pushed it back to my forked nim ... now how do I create a PR?
[03:54:30] *** Quits: rlp10 (~rp@cpc77289-basf12-2-0-cust607.12-3.cable.virginm.net) (Read error: Connection reset by peer)
[03:55:17] *** Quits: krux02 (~krux02@p200300e81723dd00b48b627b8314596f.dip0.t-ipconnect.de) (Remote host closed the connection)
[03:56:08] *** Joins: rlp10 (~rp@cpc77289-basf12-2-0-cust607.12-3.cable.virginm.net)
[03:57:06] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:14be:59d4:43c7:c828) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[03:58:23] <FromDiscord> <Elegantbeef> https://github.com/nim-lang/Nim/pulls the big green button or if you view your repo it'll say "recent commit in X, pullrequest" or similar
[03:59:24] <FromDiscord> <Elegantbeef> Well the main issue is that it'd require importing other libraries just for the test‚Üµ(@congusbongus)
[03:59:37] <FromDiscord> <Elegantbeef> I suppose that's not a big issue
[04:00:16] <arkanoid> once I have a enum with string symbols, is there a convenient way to get that enum value from the string?
[04:01:11] <FromDiscord> <Elegantbeef> `import std/strutils; let myEnm = parseEnum[MyEnumType](myStr)`
[04:01:34] <arkanoid> is it fast? otherwise I would map it the other way around
[04:01:49] <FromDiscord> <Elegantbeef> Warning in the case of `type Colors = enum r = "red", g = "green",  b = "blue"` both `"r"` and `"red"` are accepted
[04:02:12] <FromDiscord> <Elegantbeef> It's relatively fast it converts the string to a nim normalized string then compares using hashes iirc
[04:03:09] <FromDiscord> <evoalg> In reply to @Elegantbeef "https://github.com/nim-lang/Nim/pulls the big green": and it should be devel?
[04:03:18] <FromDiscord> <Elegantbeef> Actually it might just has the normalized string
[04:03:26] <FromDiscord> <Elegantbeef> Yep from your branch to `nim/devel`
[04:04:01] <arkanoid> thanks
[04:04:31] <FromDiscord> <evoalg> I clicked on the big green button "New pull request" but I can't then click on "Create pull request"
[04:05:45] <FromDiscord> <evoalg> and I dunno if that's what I'm supposed to do ... when I went to my forked nim (instead of clicking on the big green button) I can't see where it says "recent commit in X, pullrequest"
[04:06:00] <FromDiscord> <Elegantbeef> Click `"compare across forks"` then click the `headRepository` and click yours
[04:06:00] <FromDiscord> <Elegantbeef> Should be like this
[04:06:01] <FromDiscord> <Elegantbeef> image.png https://media.discordapp.net/attachments/371759389889003532/933157816645058560/image.png
[04:06:02] <FromDiscord> <Elegantbeef> of course replace my repo with yours
[04:07:28] <FromDiscord> <Elegantbeef> Assuming you pushed to devel you can just copy this link and replace `beef331` with your github name https://github.com/nim-lang/Nim/compare/devel...beef331:devel
[04:08:39] <FromDiscord> <evoalg> I think I did it ... with the compare across forks way
[04:09:17] <FromDiscord> <evoalg> https://github.com/nim-lang/Nim/pull/19416
[04:09:49] <FromDiscord> <Elegantbeef> Nice though i dont know about using `## Example`
[04:11:01] <FromDiscord> <evoalg> it looked like there were other ones like that (that weren't runnable examples)
[04:12:14] <FromDiscord> <Elegantbeef> Is there an example of it elsewhere?
[04:12:14] <FromDiscord> <Elegantbeef> Ah it's full of it üòÄ
[04:12:15] <FromDiscord> <evoalg> I can sort of see why people just put it on stackoverflow ... it'd be better in the docs though
[04:12:24] <FromDiscord> <evoalg> hehe yea
[04:12:33] <FromDiscord> <Elegantbeef> I dont see why
[04:12:44] <arkanoid> is it better to name it atLargeUtf8String or arLargeUTF8String?
[04:12:55] <FromDiscord> <Elegantbeef> It might be a bit odd to learn but nothing bad will happen
[04:13:14] <FromDiscord> <Elegantbeef> It's Nim it doesnt matter, but NEP says former
[04:15:34] <FromDiscord> <evoalg> I guess people find it easier to "stackoverflow" it with less time spend by them instead of "fighting" to get it on the system docs ... and eg if I have something to look up in python my first choice is SO as then it's usually explained beautifully with examples and gotchas
[04:16:07] <FromDiscord> <evoalg> but I agree it's better in the docs
[04:16:42] <FromDiscord> <evoalg> (or both)
[04:17:35] <FromDiscord> <evoalg> ... and thank you beefy for patiently showing me how to create a PR üôÇ
[04:17:54] <FromDiscord> <Elegantbeef> No problem
[04:18:59] <FromDiscord> <Elegantbeef> For reference https://github.com/nim-lang/Nim/blob/version-1-6/lib/system.nim#L200
[04:19:46] <FromDiscord> <evoalg> ahhhh ok
[04:20:16] <arkanoid> thanks again
[04:21:08] <FromDiscord> <Elegantbeef> To quickly explain `rebase` allows you to modify the git history `HEAD~1` goes back 1 commit from where you are, everything else i think is self explanatory üòÄ
[04:21:15] <FromDiscord> <Elegantbeef> No problem ark
[04:23:37] <FromDiscord> <evoalg> hang on ... `rebase` ... you're talking to me beefy? What should I do?
[04:24:25] <FromDiscord> <Elegantbeef> Reread my message that starts with "you are missing"
[04:25:00] <FromDiscord> <evoalg> I can't see that message?
[04:25:01] <FromDiscord> <Elegantbeef> I'm suggesting you to edit your last commit with one that has the codeblock statement is basically what that means
[04:25:07] <arkanoid> if I have a enum with string symbol like type MyEnum = enum; meFoo: "bar", how can I print "meFoo"?
[04:25:49] <FromDiscord> <Elegantbeef> You are missing `.. code-block:: Nim` so you may want to to `git rebase -i HEAD~1` replace `pick` with `edit` add code block then `git add --all` followed by `git rebase --continue` and `git push --force`
[04:25:59] <FromDiscord> <Elegantbeef> Matrix bridge working now?
[04:26:24] <FromDiscord> <Elegantbeef> Probably should've wrote periods and commas üòÄ
[04:26:34] <FromDiscord> <evoalg> I can see it now üòâ
[04:27:10] <FromDiscord> <Elegantbeef> You are missing `.. code-block:: Nim`.‚ÜµSo you may want to do`git rebase -i HEAD~1` replace `pick` with `edit`.‚ÜµAdd the code block stuff then `git add --all` followed by `git rebase --continue` and `git push --force`‚ÜµThere we go probably more readable! üòõ
[04:27:42] <FromDiscord> <Elegantbeef> I dont know if you can arkanoid without making something to do it
[04:28:00] <FromDiscord> <Elegantbeef> the whole `a = "yourStr"` intentionally overwrites `$`
[04:31:02] <FromDiscord> <evoalg> I think I did it ... will that only update my forked one?
[04:31:26] <FromDiscord> <Elegantbeef> https://github.com/nim-lang/Nim/pull/19416/files ehhh!
[04:31:37] <FromDiscord> <Elegantbeef> You've learned to git! üôÇ
[04:32:30] <arkanoid> Elegantbeef, I've enabled --stylecheck:hint, and it is saying "'atUtf8String' should be: 'atUTF8String'"
[04:32:47] <arkanoid> well, I hope it is coming from nim, vscode may be doing something
[04:33:02] <FromDiscord> <Elegantbeef> Well yea declaration has to match call with styleCheck
[04:33:50] <FromDiscord> <Elegantbeef> Here you go arknoid https://play.nim-lang.org/#ix=3MIY
[04:34:05] <FromDiscord> <Elegantbeef> You also provided me with yet another typed macro for my updated macro tutorial! üòõ
[04:34:23] <arkanoid> :D
[04:34:29] <arkanoid> thanks a lot!
[04:34:51] <arkanoid> what do you mean with "Well yea declaration has to match call with styleCheck"?
[04:35:09] <arkanoid> argh! here the stile checker is saying the opposite!
[04:35:25] <FromDiscord> <Elegantbeef> `styleCheck` ensures that the callsites have the same identifiers as declared iirc
[04:35:44] <FromDiscord> <Elegantbeef> Oh nvm that's Nim's style guid by default
[04:35:54] <arkanoid> 'atUtf8String' should be: 'atUTF8String', 'atLargeUTF8String' should be: 'atLargeUtf8String'
[04:36:09] <FromDiscord> <Elegantbeef> > ‚ÜµIn the age of HTTP, HTML, FTP, TCP, IP, UTF, WWW it is foolish to pretend these are somewhat special words requiring all uppercase. Instead treat them as what they are\: Real words. So it's parseUrl rather than parseURL, checkHttpHeader instead of checkHTTPHeader etc.
[04:36:15] <FromDiscord> <Elegantbeef> That's from NEP1
[04:37:23] <nrds> <06Prestige99> Seems a bit weird, I would capitalize abbreviations personally
[04:37:56] <FromDiscord> <Elegantbeef> Given that people say "json" as "jason" and "gui" as "gooey" i dont know
[04:38:12] <arkanoid> in my case it is suggesting two completely opposite things
[04:38:32] <FromDiscord> <Elegantbeef> I think it cannot reasonable enforce style checks
[04:39:03] <FromDiscord> <evoalg> In reply to @Elegantbeef "https://github.com/nim-lang/Nim/pull/19416/files eh": hehe ... I haven't learned git, but I'm taking notes - thank you once again üôÇ
[04:39:58] <FromDiscord> <Elegantbeef> No problem, the best part is you can now document things once you find they're under documented, you've become the change you want to see üòõ
[04:44:45] <FromDiscord> <evoalg> true
[04:47:35] <arkanoid> does nim have a "null type" I can use as T?
[04:47:49] <FromDiscord> <Elegantbeef> `void`?
[04:48:13] <FromDiscord> <Elegantbeef> If you want void but different you can do `type NoType = distinct void`
[04:52:52] <arkanoid> right! thanks, sorry for the naive questions
[04:53:20] <arkanoid> I have to deal with multiple languages every day, it's hard to draw a line and switch context
[04:58:28] <FromDiscord> <Patitotective> Is there an equivalent for _Python_ class properties in _Nim_? (Fields that call a procedure)
[04:58:46] <FromDiscord> <Elegantbeef> yes properties üòÄ
[04:59:04] <FromDiscord> <Patitotective> lol
[04:59:47] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3MJ8
[04:59:58] <FromDiscord> <Elegantbeef> Whoops the `a=` should be `myType: var MyType`
[05:00:09] <FromDiscord> <Patitotective> damn, _Nim_'s so cool lol üôÉ
[05:00:10] <FromDiscord> <Patitotective> thanks
[05:02:18] <arkanoid> do you know if there a way to ask the compile to reorder index of literal arrays with char index?
[05:02:57] <FromDiscord> <Elegantbeef> I dont think so
[05:03:03] <FromDiscord> <Elegantbeef> Atleast if i understand what you want
[05:03:09] <arkanoid> I mean this https://play.nim-lang.org/#ix=3MJ9
[05:03:31] <FromDiscord> <Elegantbeef> Yea there is not
[05:03:38] <FromDiscord> <Elegantbeef> You could make a macro for it though
[05:04:10] <FromDiscord> <Elegantbeef> But there's also an issue that it's non contiguous
[05:04:21] <arkanoid> is that a problem?
[05:04:46] <arkanoid> I just wanted to avoid hash map given that index is char
[05:04:56] <arkanoid> but yeah, it's premature optimization
[05:07:56] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3MJb is what you could do
[05:08:24] <FromDiscord> <Elegantbeef> You then can do `yourChar in formatChars` before indexing the array
[05:08:47] <FromDiscord> <Elegantbeef> Or you can just index and get `taInvalid`
[05:09:20] <NimEventer> New post on r/nim by TheDarkMode: noesisengine and nim?, see https://reddit.com/r/nim/comments/s7e1hq/noesisengine_and_nim/
[05:09:58] <FromDiscord> <Patitotective> sent a code paste, see https://play.nim-lang.org/#ix=3MJc
[05:10:02] <FromDiscord> <Patitotective> (edit) "https://play.nim-lang.org/#ix=3MJc" => "https://play.nim-lang.org/#ix=3MJd"
[05:10:45] <FromDiscord> <Elegantbeef> I'd personally do `newPrefs(table.objectV, path)` but ymmv
[05:10:56] <arkanoid> Elegantbeer, very elegant, very beef. Thanks!
[05:11:17] <FromDiscord> <Elegantbeef> Lol no problem
[05:13:58] <FromDiscord> <Elegantbeef> I dont know my view is repeating oneself is silly, so when possible dont do it
[05:17:49] <arkanoid> and now is possible to have a map of MyEnum -> Type? Like atUInt8 : int8
[05:18:04] <arkanoid> array[ArrowType, typedesc] seems not valid
[05:18:05] <FromDiscord> <Elegantbeef> No
[05:18:18] <FromDiscord> <Elegantbeef> `typedesc` is compile time information
[05:19:06] <arkanoid> ok, time for large "case" i suppose
[05:19:10] <FromDiscord> <Patitotective> How can I clean all whitespaces from a string? https://nim-lang.org/docs/strutils.html#Whitespace
[05:19:16] <FromDiscord> <Patitotective> (edit) "https://nim-lang.org/docs/strutils.html#Whitespace" => "(https://nim-lang.org/docs/strutils.html#Whitespace)"
[05:20:40] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/strutils.html#strip%2Cstring%2Cset%5Bchar%5D
[05:20:52] <FromDiscord> <Elegantbeef> Depending what you're doing ark https://play.nim-lang.org/#ix=3MJe will work
[05:22:01] <arkanoid> mmm ok
[05:22:51] <arkanoid> I have to do it at runtime: I'm reading a string that represents a datatype, and I have to resolve it's sizeof
[05:23:13] <arkanoid> so I have to run a parser first, then find out the type/object, then sizeof it
[05:23:20] <FromDiscord> <Patitotective> In reply to @Elegantbeef "https://nim-lang.org/docs/strutils.html#strip%2Cstr": I want to remove whitespaces inside the string too (`"Hello world" -> "Helloworld"`)
[05:25:07] <FromDiscord> <Elegantbeef> Time to iterate over all the characters only adding the result if it's not whitespace
[05:26:05] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3MJf
[05:27:50] <FromDiscord> <Patitotective> why this `result = newString(s.len)`?
[05:28:12] <FromDiscord> <Elegantbeef> To preallocate the result buffer to a known larger size so `add` doesnt cause any allocations
[05:28:34] <FromDiscord> <Elegantbeef> The max size of the result is the length of s, but the min size can be 0..s.len
[05:28:44] <FromDiscord> <Elegantbeef> i gues `0..<s.len`
[05:28:53] <FromDiscord> <Patitotective> üôÉ
[05:29:07] <FromDiscord> <Elegantbeef> By preallocating a string to max size we avoid multiple allocations while doing `.add`
[05:30:11] <FromDiscord> <Elegantbeef> You could also do an inplace variation that modifies the `var string` but I didnt feel like implementing it
[05:50:32] <FromDiscord> <Yardanico> In reply to @Patitotective "why this `result =": As Beef said, it preallocates, but he made a slight mistake - if you want to still use add you need to use newStringOfCap instead of just newString
[05:51:10] <FromDiscord> <Patitotective> In reply to @Yardanico "As Beef said, it": lol thanks üôÉ
[05:51:49] <FromDiscord> <Elegantbeef> Ah right
[05:51:55] <FromDiscord> <Elegantbeef> Sue me
[05:53:29] <FromDiscord> <Patitotective> How can I create a procedure with optional parameters? Not default, parameters that when given modify the result‚Üµ(Maybe different procedures?)
[05:54:04] <FromDiscord> <Elegantbeef> Overload is one way, but give an example of what you're after
[05:55:22] <FromDiscord> <Patitotective> sent a code paste, see https://play.nim-lang.org/#ix=3MJn
[05:55:34] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 250 seconds)
[05:55:41] <FromDiscord> <Elegantbeef> `if key.len > 0` if `prefs.len != 0`
[05:56:10] <FromDiscord> <Elegantbeef> If you dont want that you can also use `std/options`
[05:56:18] <FromDiscord> <Patitotective> In reply to @Elegantbeef "`if key.len > 0`": But, what if the user wants to use an empty table?
[05:56:32] <FromDiscord> <Patitotective> In reply to @Elegantbeef "If you dont want": Hmm, ok
[05:56:35] <FromDiscord> <Patitotective> (edit) "In reply to @Elegantbeef "If you dont want": Hmm, ok ... " 03added "thanks"
[05:57:26] <FromDiscord> <Rika> In reply to @Patitotective "But, what if the": Do you actually have a distinction between none and empty?
[05:58:06] <FromDiscord> <Patitotective> Yep
[05:58:20] <FromDiscord> <Patitotective> There can be a key that's an empty string
[05:58:35] <FromDiscord> <Elegantbeef> Then options are your best bet
[05:58:42] <FromDiscord> <Elegantbeef> Or overloads üòÄ
[05:59:46] <FromDiscord> <Patitotective> In reply to @Elegantbeef "Or overloads üòÄ": hmm, yea, let me try them
[05:59:58] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3MJo
[06:05:52] <FromDiscord> <Rika> In reply to @Patitotective "There can be a": Then the table is not empty
[06:06:04] <FromDiscord> <Rika> Ah you mean the key
[06:10:30] <arkanoid> is there a logic behind which value is returned from an array with index with holes when a hole is requestes?
[06:11:00] <arkanoid> it seems to return the same value as the last highest index in array
[06:11:23] <FromDiscord> <Elegantbeef> What do you mean?
[06:11:50] <FromDiscord> <Elegantbeef> Array's are contiguous so there are no holes
[06:13:18] <arkanoid> Elegantbeef: https://play.nim-lang.org/#ix=3MJq
[06:13:47] <FromDiscord> <Elegantbeef> the value will always be the `0`'d value in this case `atInvalid`
[06:13:52] <FromDiscord> <Elegantbeef> remember Nim 0's memory
[06:14:12] <arkanoid> is it an assert or is just a case?
[06:14:23] <FromDiscord> <Elegantbeef> I dont follow
[06:16:21] <FromDiscord> <Elegantbeef> All values will be by default be `atInvalid` if you dont want to check what is implemented make a bitset and check that first
[06:16:28] <FromDiscord> <Elegantbeef> `{'n', 'b', 'c', 'C', ....}`
[06:18:05] <arkanoid> ok
[06:18:44] <arkanoid> sorry I feel my english is not up-to-level sometimes
[06:19:09] <FromDiscord> <Elegantbeef> It's fine, you can provide code which is better than english, cause i'm clearly inept at english aswell
[06:19:10] <arkanoid> I was just asking if I can add a doAssert in that
[06:19:32] <FromDiscord> <Elegantbeef> You can do `assert a in FormatSet`
[06:24:33] <arkanoid> I have an UncheckedArray[MyType] and a length of it, it is possible to generate a type that turns it into something I can pass around as an openArray or similar?
[06:24:36] <arkanoid> without copy
[06:25:19] <arkanoid> at runtime
[06:25:55] <FromDiscord> <Elegantbeef> There is `toOpenArray`
[06:26:42] <arkanoid> it doesn't do copy?
[06:26:48] <FromDiscord> <Elegantbeef> Nope
[06:26:57] <FromDiscord> <Elegantbeef> But you cannot hold onto it as a variable
[06:27:07] <FromDiscord> <Elegantbeef> So you need to send it to a procedure or similar that accepts `openArray[T]`
[06:28:44] <arkanoid> sure
[06:28:52] <arkanoid> sweet sweet openarray
[06:31:37] <arkanoid> damns seems that it wont work for a  UncheckedArray[pointer]
[06:38:43] <FromDiscord> <Elegantbeef> Cast to `UncheckedArray[int]` perhaps i dont know
[07:09:29] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:17:09] <arkanoid> I succeeded finally, I had to use templates instead of procs, and it makes sense
[07:17:14] <arkanoid> I cannot return openArray
[07:19:43] <FromDiscord> <Elegantbeef> Ah yes
[07:21:13] <arkanoid> now I'm stuck, at runtime I have a enum value that means a nim type (like atFloat64), and I have a "ptr UncheckedArray[byte]" that I need to cast to "ptr UncheckedArray[float64]" and possibly to openArray after that, but all this at runtime
[07:22:11] <arkanoid> I lack the knowledge to handle types at runtime
[07:22:50] <FromDiscord> <Elegantbeef> Well you need to handle them statically üòõ
[07:23:05] <arkanoid> but how?
[07:23:38] <arkanoid> maybe the answer is here but unsure https://play.nim-lang.org/#ix=3MJe
[07:23:51] <arkanoid> my arg is not static
[07:24:41] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3MJz
[07:26:07] <arkanoid> like what I'm doing here I guess https://play.nim-lang.org/#ix=3MJA
[07:27:42] <FromDiscord> <Rosen> man's really naming his types "taint"
[07:28:10] <arkanoid> ?
[07:28:34] <FromDiscord> <Elegantbeef> you know you can do `of atBinary, atLargeBinary, atUtf8String, atLargeUtf8String` üòõ
[07:28:52] <FromDiscord> <Elegantbeef> I guess that's to be implemented
[07:28:53] <FromDiscord> <Elegantbeef> Disregard!
[07:28:59] <arkanoid> yes, but these are todo
[07:29:57] <arkanoid> so there's no way to ArrowType -> typedesc at runtime
[07:30:14] <arkanoid> damn, now I feel where python shines
[07:30:25] <arkanoid> but smells everywhere else
[07:33:30] <arkanoid> maybe a large object variant ...
[07:36:47] <FromDiscord> <Elegantbeef> That's basically what you have
[07:56:49] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[09:16:22] <arkanoid> it always confuses me how you cannot do UFC on iterator
[09:17:15] <arkanoid> I have "template values*[T](arr: ArrowArray): openArray[T] =", I can do "for v in values[int32](arr)", but I can't "for v in arr.values[int32]()"
[09:18:18] <FromDiscord> <Elegantbeef> you can
[09:18:23] <FromDiscord> <Elegantbeef> do `arr.values[: int32]`
[09:18:38] <FromDiscord> <Elegantbeef> generic method call syntax requires `[: T]`
[09:19:13] <arkanoid> how can I discriminate when it is needed and when is not?
[09:23:13] <FromDiscord> <Elegantbeef> Is it a generic you're calling using method call syntax? You need it
[09:36:22] <arkanoid> it happens so rarely that I never figured it out by myself
[09:36:26] <arkanoid> thanks for your patience
[09:36:49] <arkanoid> in the meanwhile, hooray, got my first read from pyarrow structure
[09:37:58] <arkanoid> how was that pragma to raise compile error? {.error.} or something
[09:39:08] <FromDiscord> <Elegantbeef> `{.error: "msg".}`
[09:55:07] <FromDiscord> <evoalg> So beefy, someone corrected my example as it was quite right https://github.com/nim-lang/Nim/pull/19416 ... I don't have to do anything right?
[09:55:15] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[10:06:35] <arkanoid> thanks
[10:09:19] <FromDiscord> <Elegantbeef> No they did not correct it
[10:09:24] <FromDiscord> <Elegantbeef> They gave you what is needed to fixed
[10:09:38] <FromDiscord> <Elegantbeef> So you'll want to follow my instructions again adding the tabs
[10:09:57] <FromDiscord> <Elegantbeef> Or just add the tabs and push
[10:23:00] <FromDiscord> <Elegantbeef> @evoalg\: ^ just to get your attention
[10:23:54] <FromDiscord> <evoalg> I can add the tabs and push without doing that trickiness?
[10:24:44] <FromDiscord> <Elegantbeef> You can, it'll add another commit though depending on your view that's not that great
[10:25:07] <FromDiscord> <Elegantbeef> They squash them all into a single commit anyway, but yea just a think to be cognisant about
[10:26:08] <FromDiscord> <evoalg> so can I click on the drop-down on their code and click commit?
[10:26:41] <FromDiscord> <Elegantbeef> I think so
[10:26:47] <FromDiscord> <Elegantbeef> Havent used github gui much myself
[10:27:41] <FromDiscord> <evoalg> The drop-down on the "Commit suggestion" and click on "Commit changes" ... oh ok .... another question, how do I tell that they didn't commit those changes (and didn't correct it)?
[10:28:06] <FromDiscord> <Elegantbeef> It says "suggested change" and there is no new commit in the history
[10:28:31] <FromDiscord> <Elegantbeef> image.png https://media.discordapp.net/attachments/371759389889003532/933254078069354516/image.png
[10:28:40] <FromDiscord> <Elegantbeef> For example of what it looks like if someone adds a commit ontop of yours üòÄ
[10:29:29] <FromDiscord> <evoalg> ok ... I clicked commit on the drop down ... I'll try and see if that worked
[10:29:29] <FromDiscord> <Elegantbeef> They missed the last statement!
[10:30:05] <FromDiscord> <Elegantbeef> https://github.com/nim-lang/Nim/pull/19416/files#diff-c7ae564e61082887ea50f0d58a637cb12fa78261f51aa4eface24ababfeee299R2330 that poor line isnt indented üôÇ
[10:30:44] <FromDiscord> <Elegantbeef> Git does get easier to use the more you use it
[10:31:10] <FromDiscord> <evoalg> oh darn
[10:31:19] <FromDiscord> <evoalg> I should have realized sorry
[10:31:40] <FromDiscord> <evoalg> so it's too late to do the HEAD trick?
[10:31:44] <FromDiscord> <Elegantbeef> Nah
[10:31:52] <FromDiscord> <Elegantbeef> You can always do `git pull`
[10:32:15] <FromDiscord> <evoalg> oh I edited the change ... but maybe I should do a git pull ok
[10:32:28] <FromDiscord> <evoalg> I mean edited it locally
[10:32:48] <FromDiscord> <evoalg> oh it did not like that
[10:33:23] <FromDiscord> <Elegantbeef> you can then do  `git rebase -i HEAD~2` `edit` the first `drop` the second, indent it properly do‚Üµ`git add --all`‚Üµ`git rebase -- continue`‚Üµ`git force --push`
[10:33:29] <FromDiscord> <Elegantbeef> Jeez
[10:33:32] <FromDiscord> <Elegantbeef> `git push --force` üòõ
[10:33:46] <FromDiscord> <Elegantbeef> You can either do `git checkout .` to discard your change
[10:33:52] <FromDiscord> <Elegantbeef> Or you can do `git reset --hard`
[10:33:59] <FromDiscord> <evoalg> I only edited it in vim ... I didn't add it locally to git
[10:34:11] <FromDiscord> <Elegantbeef> Ah
[10:34:44] <FromDiscord> <evoalg> I'll undo and do you HEAD~1 trick and then change it?
[10:35:05] <FromDiscord> <Elegantbeef> Well `HEAD~2` now if you want to have a single commit
[10:35:24] <FromDiscord> <evoalg> ok
[10:35:32] <FromDiscord> <Elegantbeef> You can drop the latest commit and edit the first
[10:35:55] <FromDiscord> <evoalg> sorry how do I do that? ... I'm easily confused with git
[10:36:09] <FromDiscord> <Elegantbeef> This message walks you through it
[10:36:20] <FromDiscord> <evoalg> ok
[10:36:35] <FromDiscord> <Elegantbeef> it should be `git push --force` though
[10:36:41] <FromDiscord> <evoalg> ok
[10:36:54] <FromDiscord> <Elegantbeef> Tired mind got starwarsy i guess
[10:37:26] <FromDiscord> <evoalg> lol
[10:37:38] <FromDiscord> <Elegantbeef> `HEAD~2` if you cannot guess allows you to modify the the last two commits
[10:37:44] <FromDiscord> <evoalg> sent a code paste, see https://play.nim-lang.org/#ix=3MJU
[10:37:48] <FromDiscord> <Elegantbeef> `git checkout .`
[10:37:59] <FromDiscord> <Elegantbeef> You saved a file inside the git directory and git knows it
[10:38:27] <FromDiscord> <Elegantbeef> Git's tracking files so it knows when one has changes and will not let you use many commands whilst you have them
[10:38:53] <FromDiscord> <Elegantbeef> `checkout .` should discard changes if you havent committed
[10:39:00] <FromDiscord> <evoalg> sent a code paste, see https://play.nim-lang.org/#ix=3MJV
[10:39:07] <FromDiscord> <evoalg> I change to edit the 2nd ... ignore the 1st?
[10:39:11] <FromDiscord> <Elegantbeef> you didnt do `git pull`
[10:39:13] <FromDiscord> <evoalg> oh
[10:39:20] <FromDiscord> <Elegantbeef> do not modify that just close it
[10:39:28] <FromDiscord> <evoalg> ok
[10:39:40] <FromDiscord> <Elegantbeef> `git pull` now
[10:39:50] <FromDiscord> <Elegantbeef> That'll get your remote changes(from github gui)
[10:40:03] <FromDiscord> <evoalg> sent a code paste, see https://play.nim-lang.org/#ix=3MJW
[10:40:49] <FromDiscord> <evoalg> it's suggesting I do one of those before my next git pull
[10:40:55] <FromDiscord> <Elegantbeef> I guess the first
[10:40:58] <FromDiscord> <evoalg> ok
[10:41:02] <FromDiscord> <Elegantbeef> \Dont know if i've seen that before
[10:42:08] <FromDiscord> <evoalg> I did it ... but I'm still getting:
[10:42:17] <FromDiscord> <evoalg> sent a code paste, see https://play.nim-lang.org/#ix=3MJX
[10:42:23] <FromDiscord> <Elegantbeef> That's right this time
[10:42:24] <FromDiscord> <Elegantbeef> Notice how the commits changed
[10:42:43] <FromDiscord> <Elegantbeef> edit the first one "add an example to" and drop "correct the example"
[10:42:54] <FromDiscord> <evoalg> ohhhhh
[10:43:02] <FromDiscord> <evoalg> now I edit the first?
[10:43:22] <FromDiscord> <evoalg> change pick to edit on the first one?
[10:43:43] <FromDiscord> <evoalg> drop the 2nd...
[10:44:19] <FromDiscord> <Elegantbeef> yes
[10:44:41] <FromDiscord> <Elegantbeef> you now properly format the example then do `git add --all`
[10:45:31] <FromDiscord> <Elegantbeef> then you can do `git rebase --continue` and `git push --force` and should be golden
[10:45:39] <FromDiscord> <Elegantbeef> And this is your intro to git! üôÇ
[10:48:47] <FromDiscord> <evoalg> I did it ... I think...
[10:49:01] <FromDiscord> <Elegantbeef> You did!
[10:49:09] <FromDiscord> <Elegantbeef> Congrats
[10:49:38] <FromDiscord> <evoalg> phew ... but I needed lots of hand holding
[10:50:13] <FromDiscord> <Elegantbeef> To be fair i dont imagine most are used to manually rebasing/editing commits
[10:51:05] <FromDiscord> <evoalg> advance trickiness heh üòâ
[10:51:25] <FromDiscord> <Elegantbeef> Think i mainly depends on what they're working on or who they are
[10:51:54] <FromDiscord> <evoalg> those spaces after the hash signs `## ` and then indenting made me stop and think
[10:51:58] <FromDiscord> <Elegantbeef> Eh if you use git more often it's not too magical
[10:53:43] <FromDiscord> <evoalg> so I could have committed additional changes but using advanced ways we made it as if it was right the first time
[10:53:50] <FromDiscord> <Elegantbeef> Yep
[10:55:02] <FromDiscord> <evoalg> if it passes and people have happy with it, will it get updated with the next nim version or something ... not the current one right?
[10:55:08] <FromDiscord> <Elegantbeef> The git history is not any wiser that you panicked hyperventilated and vomited in a paper bag
[10:55:36] <FromDiscord> <Elegantbeef> Yea it'll be in the next minor Nim version  `1.8`(or 2.0) unless it's backported
[10:56:00] <FromDiscord> <evoalg> Thanks for your help once again
[10:56:47] <FromDiscord> <Elegantbeef> It will be on the dev docs though
[10:57:05] <FromDiscord> <Elegantbeef> Dev docs hosted here https://nim-lang.github.io/Nim/
[10:57:40] <FromDiscord> <Elegantbeef> Dont remember if these are generated nightly or after each PR, so no clue how long after your PR will you see your first contribution
[10:57:42] <FromDiscord> <evoalg> ahhh thanks üôÇ
[10:57:59] <FromDiscord> <evoalg> that's if it's accepted
[10:58:25] <FromDiscord> <Elegantbeef> Eh it'll probably be
[11:00:37] <FromDiscord> <xflywind> You can use `nim doc -r --lib:lib lib/system.nim` to see whether your changes work.
[11:01:09] <FromDiscord> <xflywind> https://nim-lang.github.io/Nim/contributing.html contains many contributing guides.
[11:01:49] <FromDiscord> <Elegantbeef> Oh right the commit message should've had `[skip CI]` cause it's purely doc
[11:02:12] <FromDiscord> <evoalg> ahhhhh ... thank you both
[11:04:11] <FromDiscord> <xflywind> In reply to @evoalg "ahhhhh ... thank you": I think an extra line is required between example and code examples
[11:04:15] <FromDiscord> <xflywind>  https://media.discordapp.net/attachments/371759389889003532/933263064839618560/unknown.png
[11:04:36] <FromDiscord> <xflywind> (edit) "code examples" => "`.. code-block`"
[11:04:59] <FromDiscord> <Elegantbeef> Evo is like 3 seconds away from going "Well i thought adding this was going to be simple, but i'm off to go kill a person, be back after lunch"
[11:05:18] <FromDiscord> <evoalg> or have a cry
[11:05:58] <FromDiscord> <enthus1ast> @Patitotective\: yes but you must tweak it to fit your use case https://play.nim-lang.org/#ix=3MJZ
[11:06:04] <FromDiscord> <evoalg> Shall I do the HEAD~1 trick again beefy?
[11:06:27] <FromDiscord> <Elegantbeef> Hey dont look at me I'm not someone that can accept PRs
[11:07:02] <FromDiscord> <xflywind> rebase is not required, PRs are merged by squash automatically.
[11:07:17] <FromDiscord> <enthus1ast> @Patitotective\:  eg if you want to replace hex/decimal with numbers or characters
[11:07:50] <FromDiscord> <evoalg> so I could just do another git add, commit & push after editing it with the new line?
[11:07:58] <FromDiscord> <xflywind> yeah
[11:08:08] <FromDiscord> <Elegantbeef> Test locally with what flywind said first though
[11:08:21] *** Joins: PMunch (~PMunch@user/pmunch)
[11:08:44] <FromDiscord> <evoalg> true
[11:08:58] <FromDiscord> <Isofruit> In reply to @Elegantbeef "And this is your": Oh boy, git rebase
[11:10:16] <FromDiscord> <Isofruit> I use almost anything but, I do not run with a lot of branches generally though so I guess that doesn't quite count.‚ÜµI use cherry pick more than I use rebase tbh
[11:10:40] <FromDiscord> <evoalg> looks good ... and I should use [skip CI] somewhere in the commit message?
[11:12:08] <FromDiscord> <evoalg> geez I did "git commit" and forgot to do the  [skip CI]  straight away
[11:12:26] <FromDiscord> <Isofruit> Can always amend if it isn't pushed
[11:12:41] <FromDiscord> <evoalg> I didn't do git push yet
[11:13:18] <FromDiscord> <Isofruit> Git commit - - amend... Imagine I wrote that flag correctly
[11:13:29] <FromDiscord> <Isofruit> On mobile, life is hard
[11:14:07] <FromDiscord> <evoalg> thanks that worked
[11:17:07] <FromDiscord> <evoalg> so I ended up doing `git add .` and `git commit` (and then edited it) and then `git push` ... and I think it updated the PR
[11:17:52] <FromDiscord> <Isofruit> If you commit to a branch that is in pr that commit counts towards the pr
[11:19:20] <FromDiscord> <Isofruit> Effectively the PR isn't on a snapshot of your branch, it's of the entire branch until the pr is merged. That is so you can make refactoring commits after receiving feedback on your pr by the repo owner
[11:20:12] <FromDiscord> <Isofruit> Or whoever else reads the pr
[11:21:08] <FromDiscord> <evoalg> nice that makes life a little better then üòâ
[11:21:40] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:14be:59d4:43c7:c828)
[11:22:47] <FromDiscord> <Isofruit> Sidenote, I recommend tiny commits and small pr's if other people are involved in the review process
[11:25:36] <FromDiscord> <evoalg> makes sense I guess yea
[11:46:26] <FromDiscord> <evoalg> I dunno who flywind is on git ... I dunno if they are on here but thank you
[11:46:41] <FromDiscord> <Elegantbeef> They're xflywind üòõ
[11:47:04] <FromDiscord> <evoalg> ohhhh all good üôÇ
[11:47:43] <szahid> Hello. Why i have 3 on output everytime? https://play.nim-lang.org/#ix=3MKd
[11:47:46] <FromDiscord> <Isofruit> They're literally the main person behind the prologue framework üòÑ
[11:48:02] *** Joins: pch (~pch@66.49.131.33)
[11:48:12] <FromDiscord> <evoalg> oh shows how little I know
[11:48:29] <FromDiscord> <Elegantbeef> `randomize()` szahid
[11:48:32] <FromDiscord> <Elegantbeef> Otherwise it uses the default state
[11:48:52] <FromDiscord> <enthus1ast> 3 sound like a fair random number to me \:)
[11:49:20] <FromDiscord> <evoalg> some languages randomize by default, but not Nim though
[11:49:49] *** Quits: xet7 (~xet7@user/xet7) (Ping timeout: 240 seconds)
[11:51:01] <PMunch> @Elegantbeef, yeah we rolled a dice and it came up 3, so that's the random number
[11:51:20] <PMunch> https://xkcd.com/221/
[11:51:45] <szahid> Elegantbeef thanks!
[11:51:51] <pch> is there a fast way to truncate least significant bits without assuming endianness when working with integers? I need to truncate a 32-bit normalized position to 8 or 16 bits on the fly and store
[11:52:25] <PMunch> pch, well you can stop assuming endianness and check it?
[11:53:38] <pch> more optimal would be to just have a truncate function that Knows:tm:
[11:55:19] <PMunch> Well it'd need to check as well
[11:55:25] <PMunch> So someone has to check
[11:55:52] <PMunch> You can divide the number by a power of two
[11:55:57] <PMunch> That would truncate it
[11:56:02] <pch> yeah just asking if there's a built-in way that Knows
[11:56:07] <pch> true
[11:56:21] <PMunch> And probably be optimised away to a shift optimisation anyways
[11:56:29] <FromDiscord> <leorize> the only way to know is if someone told you, no?
[11:56:54] <pch> well usually The Compiler Knows
[11:57:03] <FromDiscord> <leorize> no matter what the byte ordering is, the data is still correct
[11:57:09] <pch> this is kinkinkijkin btw, working on a project i havent touched in years
[11:58:26] <pch> bit shift left on BE32 divides, on BE8 mangles
[11:59:51] <FromDiscord> <leorize> nim does let you know the endian at compile time, if you're working on native mumbers
[12:00:28] <pch> so just use `when` then...
[12:00:32] <FromDiscord> <leorize> but aren't native numbers always follow a constant shift pattern anyway?
[12:00:58] <PMunch> pch, pretty much, you can of course put that in a template or something
[12:01:01] <pch> possibly? might change between compilers
[12:01:23] <FromDiscord> <leorize> ie. shift-left defined as shift torwards most significant bit and shift-right defined as shifting torwards least significant bit
[12:02:43] <pch> I know there's some wacky reactions you can get from some GCC versions on 32BE8 compiles
[12:02:57] <pch> ie on armv7 with -mbe8
[12:03:12] *** Joins: xet7 (~xet7@user/xet7)
[12:03:32] <PMunch> https://stackoverflow.com/questions/7184789/does-bit-shift-depend-on-endianness
[12:04:21] <pch> ah okay
[12:09:48] <FromDiscord> <Rika> So basically shifts aren‚Äôt dependent on endianness unless you‚Äôre on PowerPC?
[12:10:07] <PMunch> Seems like it :P
[12:44:44] *** Joins: Vladar (~Vladar@46.162.2.53)
[12:51:40] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:14be:59d4:43c7:c828) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[13:21:51] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[14:18:23] <FromDiscord> <dizzyliam> sent a code paste, see https://play.nim-lang.org/#ix=3MKG
[14:18:30] <FromDiscord> <dizzyliam> today in cursed things: code justified like text
[14:21:59] <FromDiscord> <congusbongus> No ooooo‚ÜµThis is why my favourite thing about golang is gofmt
[14:33:39] <FromDiscord> <Tanguy> gofmt is a dictatorship
[14:34:17] <PMunch> @dizzyliam, oh goodness gracious
[14:35:08] <PMunch> @congusbongus, no wonder you started looking into Nim if your favourite feature from Go is it's auto-formatter :P
[14:37:02] *** Quits: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113) (Ping timeout: 240 seconds)
[14:37:23] <FromDiscord> <xx_ns> In reply to @karma_corrections "today in cursed things:": i kind of like it
[14:37:33] <FromDiscord> <xx_ns> I'll start formatting my code like this from now on
[14:44:37] <FromDiscord> <Rika> In reply to @Tanguy "gofmt is a dictatorship": Go
[14:53:43] <FromDiscord> <mratsim> And Github is punisshing tab users by displaying tabs as 8 spaces.
[14:54:28] <FromDiscord> <mratsim> like wtf: https://github.com/sel-hamr/42-fractol/blob/master/fractol.h
[14:58:38] <PMunch> @mratsim, Emacs-style code looks like a complete mess if you don't do that, and it doesn't really break anything for code that only uses tabs
[14:59:33] <PMunch> You can also just chuck on ?ts=4 in the URL to change it: https://github.com/sel-hamr/42-fractol/blob/master/fractol.h?ts=4
[14:59:56] <PMunch> And there's probably a browser extension somewhere out there which applies that automatically for you
[15:01:37] <FromDiscord> <mratsim> TIL
[15:01:50] <FromDiscord> <mratsim> (I was looking for mandelbrot ;))
[15:09:49] <PMunch> By the way, for those who might not know. It was (is?) common in Emacs to indent C code with four spaces, but replace every eight space with a tab. If you open up code written in this style in another editor it looks completely bonkers, and you start questioning the sanity of the author.
[15:10:25] <PMunch> Had a professor who wrote his pre-code in Emacs, and as his TA I had to answer all the angry emails from students wondering if the professor had gone mad
[15:15:18] <FromDiscord> <Rika> That sounds bonkers even with context‚Ä¶
[15:16:31] <szahid> What is the correct way to use query parameters with httpClient? just add this to the url string?
[15:17:53] <FromDiscord> <Rika> Yes
[15:18:56] <PMunch> @Rika, well it used to be a thing that even code should save space
[15:19:13] <szahid> Hello Rika :)
[15:19:18] <PMunch> I mean C still has trigraphs in order to support non-ASCII machines :P
[15:19:20] <FromDiscord> <Hamid_Bluri> sent a long message, see http://ix.io/3MKZ
[15:19:30] <FromDiscord> <Hamid_Bluri> wow
[15:19:37] <FromDiscord> <Rika> In reply to @szahid "Hello Rika :)": Hello, what‚Äôs up
[15:19:42] <FromDiscord> <Rika> In reply to @PMunch "<@259277943275126785>, well it used": Ah I see
[15:19:53] <FromDiscord> <Rika> In which case just use tabs for everything no?
[15:19:55] <PMunch> if (my_int == 42) ??( printf("Hello world %d", 42); ??)
[15:19:59] <PMunch> That's valid C
[15:20:18] <FromDiscord> <Hamid_Bluri> ?????
[15:20:27] <FromDiscord> <Rika> Did you mean ??(
[15:20:46] <FromDiscord> <Hamid_Bluri> yeah what is it
[15:21:00] <FromDiscord> <Hamid_Bluri> trigraphs?
[15:21:03] <PMunch> Well if you have more than 5 levels of indentation you start saving again
[15:21:13] <PMunch> Not 100% sure why they did it that way though..
[15:21:20] <FromDiscord> <Rika> https://riptutorial.com/c/example/23858/trigraphs
[15:21:23] <FromDiscord> <Rika> Cursed
[15:21:34] <PMunch> @Hamid_Bluri, it's for machines that don't have 8-bit ASCII files
[15:21:42] <FromDiscord> <Rika> Imagine a world that wasn‚Äôt standardised‚Ä¶. Wait
[15:22:11] <PMunch> Oh apparently it's ??< and not ??(
[15:22:16] <FromDiscord> <Rika> Yup
[15:22:16] <PMunch> ??( is a square bracket
[15:22:55] <FromDiscord> <Rika> You‚Äôre a square bracket smh
[15:23:09] <PMunch> By the way, trigraph replacement is one of the very first things the compiler does. Even before parsing. So it will replace them in string literals as well :P
[15:23:24] <FromDiscord> <Rika> I mean it should shouldn‚Äôt it
[15:23:34] <PMunch> Although nowadays I think you actually have to pass a flag to GCC to enable it
[15:23:47] <FromDiscord> <Rika> Yes, -trigraphs I think
[15:23:49] <PMunch> Oh yeah it's very much a feature
[15:24:23] <PMunch> But it can be confusing if you write something like `printf("What happened??!");` and it prints out "What happened|"
[15:30:15] <FromDiscord> <Rika> Lol
[16:12:41] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[16:13:02] *** Joins: greyrat_ (~greyrat@ip202.ip-51-178-215.eu)
[16:14:03] *** Joins: Yardanico (~quassel@user/yardanico)
[16:14:14] *** Joins: LyndsySimon_ (sid34452@lymington.irccloud.com)
[16:14:37] *** Joins: emery (~quassel@2a03:3b40:fe:ab::1)
[16:14:55] *** Joins: mjsir911 (~bnc@user/mjsir911)
[16:15:04] *** Joins: greaser|q (greaser@antihype.space)
[16:15:19] *** Joins: crem1 (~crem@2a02:169:160a:1:9b30:962e:76eb:4bb3)
[16:16:06] *** Quits: LyndsySimon (sid34452@id-34452.lymington.irccloud.com) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: msirabella (~bnc@user/mjsir911) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: Yardanico_ (~quassel@2a01:4f8:c2c:df22::2) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: crem (~crem@2a02:169:160a:1:9b30:962e:76eb:4bb3) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: Jjp137 (~Jjp137@2603-8000-2a01-3406-92fb-a6ff-fee2-6861.res6.spectrum.com) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: GreaseMonkey (greaser@user/greasemonkey) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: nrds (~NimBot@ns501209.ip-142-4-210.net) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: nisstyre (~wes@user/nisstyre) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: ehmry (~quassel@2a03:3b40:fe:ab::1) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: oddish (~oddish@2a01:4f8:1c1c:a9da::1) (Ping timeout: 240 seconds)
[16:16:08] *** Quits: NimBot (~NimBot@mail.nim-lang.org) (Ping timeout: 240 seconds)
[16:16:08] *** LyndsySimon_ is now known as LyndsySimon
[16:16:27] *** Server sets mode: +nt 
[16:16:45] *** Joins: NimBot (~NimBot@mail.nim-lang.org)
[16:17:16] *** Joins: nisstyre (~wes@user/nisstyre)
[16:19:09] <szahid> im looking for substitute python's list range ex. arr[2:5]
[16:20:16] <szahid> ok. i have.. seq[2..5]
[16:20:41] <FromDiscord> <eyecon> Oooh, let me give the standard answer this time
[16:20:49] <FromDiscord> <eyecon> In reply to @szahid "im looking for substitute": Use slicerator: https://www.notion.so/ardasaltoglu/slicerator-f1693185839a403e8d167a81d8ee583d
[16:21:06] <FromDiscord> <eyecon> Use slicerator: https://github.com/beef331/slicerator
[16:21:31] <FromDiscord> <eyecon> Pasted a wrong link at first, sorry
[16:24:24] <FromDiscord> <Rika> Only if you want an iterator
[16:24:41] <FromDiscord> <Rika> It doesn‚Äôt apply if you want a slice value I believe
[16:32:39] <FromDiscord> <eyecon> sent a code paste, see https://play.nim-lang.org/#ix=3MLF
[16:33:34] <FromDiscord> <mratsim> In reply to @szahid "ok. i have.. seq[2..5]": seq[2..<5]
[17:00:02] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[17:03:34] *** Joins: rockcavera (~rc@192.12.113.78)
[17:03:34] *** Quits: rockcavera (~rc@192.12.113.78) (Changing host)
[17:03:34] *** Joins: rockcavera (~rc@user/rockcavera)
[17:06:40] <NimEventer> New thread by GordonBGood: Update on compiling to asmjs or wasm through emscripten..., see https://forum.nim-lang.org/t/8827
[17:17:13] <FromDiscord> <Rika> In reply to @eyecon "Do you see any": Why not in [] you get or default (removes the var) and in []= you just do the same as []= for tables?
[17:17:33] <FromDiscord> <Rika> You already store the default value, why store it more times in the table?
[17:17:47] <FromDiscord> <Rika> Ah I can see why
[17:18:49] <FromDiscord> <Rika> Eh okay if you need the formerly accessed but not set keys okay
[17:40:46] <NimEventer> New thread by Sauerbread: Privacy offensive - remove Google Analytics from the Nim website, see https://forum.nim-lang.org/t/8828
[17:45:39] <FromDiscord> <eyecon> In reply to @Rika "Eh okay if you": Thanks! Any comments/criticisms that still apply?
[17:51:01] <FromDiscord> <Rika> I don‚Äôt think you can improve this other than using the same []= from tables in []=
[17:51:28] <FromDiscord> <Rika> Because you don‚Äôt need to put the default before always putting a new value
[17:56:01] *** Joins: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113)
[17:57:47] <FromDiscord> <eyecon> I... don't get it. My use case is, if it helps, generally to have empty `seq`s in the table's unallocated keys so that I can add without checking and creating a new empty `seq`.
[17:59:22] <FromDiscord> <eyecon> Ah, do you mean that I overwrite the value from `mGetOrPut` in any case?
[17:59:29] <FromDiscord> <eyecon> If so, I think you are right
[18:02:19] <FromDiscord> <eyecon> So simply: `proc `[]=`[A, B](self: var DefaultTable[A, B], key: A, value: B) = self.table[key] = value`
[18:03:22] *** Joins: nrds (~NimBot@ns501209.ip-142-4-210.net)
[18:04:19] <FromDiscord> <Rika> Yes
[18:04:26] <FromDiscord> <Rika> That‚Äôs what I mean yes
[18:04:27] <FromDiscord> <IsaacPaul> In reply to @eyecon "Thanks! Any comments/criticisms that": > proc `[]`[A, B](self: var DefaultTable[A, B], key: A): var B =‚Üµ>     self.table.mgetOrPut(key, self.defaultvalue)‚ÜµYou're lying to the developer. You're saying that there is a value at that key when there isn't.
[18:04:40] <FromDiscord> <Rika> In reply to @IsaacPaul "> proc `[]`*[A, B](self:": That‚Äôs the point of the data structure‚Ä¶
[18:05:18] <FromDiscord> <IsaacPaul> I don't think you should lie to save a few keystrokes lol
[18:05:25] <FromDiscord> <Rika> Opinion
[18:05:29] <FromDiscord> <Rika> Not helpful in which case
[18:05:44] <FromDiscord> <eyecon> Lie? That's the whole point, to have values automatically created on access
[18:05:56] <FromDiscord> <eyecon> Besides, I'm not overwriting `contains`
[18:06:18] <FromDiscord> <eyecon> So key presence checks still fail for nonexistent keys
[18:06:30] <FromDiscord> <eyecon> I think at least, never needed them
[18:06:54] <FromDiscord> <Rika> I don‚Äôt know what your point is
[18:07:41] <FromDiscord> <IsaacPaul> Honestly, the structure sounds problematic from a maintenance prospective. But I have no way to quantify my opinion besides experience üòõ
[18:08:14] <FromDiscord> <Rika> I personally don‚Äôt understand why they need it either but I won‚Äôt question it too hard
[18:11:37] <FromDiscord> <eyecon> sent a code paste, see https://play.nim-lang.org/#ix=3MMa
[18:11:52] <FromDiscord> <IsaacPaul> sent a code paste, see https://play.nim-lang.org/#ix=3MMb
[18:12:12] <FromDiscord> <mratsim> or use array[char, int] ?
[18:12:43] <FromDiscord> <eyecon> But it's a pair of chars to int
[18:12:53] <FromDiscord> <mratsim> ah
[18:13:04] <FromDiscord> <mratsim> then array[uint16, int]
[18:13:04] <FromDiscord> <IsaacPaul> (edit) "https://play.nim-lang.org/#ix=3MMb" => "https://play.nim-lang.org/#ix=3MMc"
[18:13:13] <FromDiscord> <eyecon> That would have been possible, sure
[18:13:25] <FromDiscord> <eyecon> So, pre-allocate all combinations basically
[18:13:48] <FromDiscord> <eyecon> If the value type is not a primitive, like a seq, it gets more complicated
[18:14:21] *** Joins: arkurious (~arkurious@user/arkurious)
[18:14:32] <FromDiscord> <mratsim> array[uint16, seq[Something]]?
[18:17:17] <FromDiscord> <eyecon> Yes, and if the usage is sparse, then we are probably allocating some thousand times empty `seq`s in vain
[18:17:26] <FromDiscord> <eyecon> Not that it's impossible or bad, jut saying
[18:17:35] <FromDiscord> <eyecon> That is definitely an option
[18:19:42] <FromDiscord> <eyecon> Can I say something like Kotlin's "delegate all the unknown actions on this object to this field"?
[18:20:38] <FromDiscord> <eyecon> So that e.g. `items` on a `DefaultTable` automatically is applied to the `.table`?
[18:21:46] *** Joins: Jjp137 (~Jjp137@2603:8000:2a01:3406:92fb:a6ff:fee2:6861)
[18:23:37] <FromDiscord> <Rika> No
[18:23:42] <FromDiscord> <Rika> Or rather
[18:23:45] <FromDiscord> <Rika> With a macro üôÇ
[18:24:05] <FromDiscord> <IsaacPaul> sent a code paste, see https://play.nim-lang.org/#ix=3MMl
[18:24:12] <FromDiscord> <eyecon> I tend to take "no"s in this channel as "only with a macro" anyway
[18:24:24] <FromDiscord> <IsaacPaul> (edit) "https://play.nim-lang.org/#ix=3MMl" => "https://play.nim-lang.org/#ix=3MMm"
[18:24:48] <FromDiscord> <Rika> Do you want to distinguish no key from defaulted/accessed before anyway?
[18:24:58] <FromDiscord> <Rika> Do you have a reason to distinguish them
[18:25:06] <FromDiscord> <mratsim> In reply to @eyecon "Yes, and if the": they aren't allocated if they are uninitialized
[18:25:22] <FromDiscord> <Rika> In reply to @mratsim "they aren't allocated if": They aren‚Äôt? Huh since when
[18:25:32] <FromDiscord> <eyecon> In the case I wrote about, yes, I did. I can imagine use cases where I wouldn't too
[18:25:58] <FromDiscord> <eyecon> So I implemented `.pairs` which would only iterate in previously set keys' values
[18:26:07] <FromDiscord> <eyecon> It works for my use case
[18:26:11] <FromDiscord> <mratsim> In reply to @Rika "They aren‚Äôt? Huh since": a while, there is a check in add(s: var seq): to ensure a seq is allocated
[18:26:17] <FromDiscord> <Rika> Okay so in that case technically Option wouldn‚Äôt help you
[18:26:36] <FromDiscord> <mratsim> and if not ia allocates one
[18:26:42] <FromDiscord> <mratsim> (edit) "ia" => "it"
[18:27:04] <FromDiscord> <Rika> In reply to @mratsim "a while, there is": But the default value is an empty seq? Do default values not have any allocations
[18:27:28] <FromDiscord> <IsaacPaul> In reply to @mratsim "they aren't allocated if": üòÆ that's good to know
[18:27:33] <FromDiscord> <mratsim> it's ptr+len with a nil pointer
[18:28:32] <FromDiscord> <mratsim> https://github.com/nim-lang/Nim/blob/b24812df5f952427c1266e48c40b7956bdf3d999/lib/system/repr.nim#L163-L165
[18:28:59] <FromDiscord> <mratsim> so if unitialized you just need to check if len == 0
[18:29:09] <FromDiscord> <mratsim> and if so you check the pointer if it's nil
[18:29:18] <FromDiscord> <mratsim> and if yes, you allocate only at that point
[18:30:20] <FromDiscord> <Rika> I see
[18:30:49] <FromDiscord> <mratsim> easy to check, cast a array[16, byte] to seq[Foo] and add Foo
[18:33:16] <FromDiscord> <mratsim> sent a code paste, see https://play.nim-lang.org/#ix=3MMH
[18:33:50] <FromDiscord> <mratsim>  https://media.discordapp.net/attachments/371759389889003532/933376208954069092/unknown.png
[18:34:11] <FromDiscord> <mratsim> @eyecon ^
[18:35:46] <FromDiscord> <mratsim>  https://media.discordapp.net/attachments/371759389889003532/933376695539478619/unknown.png
[18:37:21] <FromDiscord> <eyecon> I see, thanks
[18:37:33] <FromDiscord> <eyecon> So it's the `add` that allocates
[18:37:46] <FromDiscord> <xflywind> !eval echo (NimMajor, NimMinor, NimPatch)
[18:37:47] <FromDiscord> <demotomohiro> !eval var sq: seq[string]; echo cast[int](sq)
[18:37:50] <NimBot> (1, 4, 8)
[18:37:50] <NimBot> 0
[18:44:09] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[19:11:37] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[19:37:22] <FromDiscord> <Patitotective> sent a code paste, see https://play.nim-lang.org/#ix=3MN3
[19:53:45] <PMunch> Hmm, it seems like on of your runnable examples have caused an issue
[19:53:53] <PMunch> Too bad it doesn't say which one..
[19:54:19] <PMunch> Or is it because /usr/doc/nimdoc.css doesn't exist? That would be silly
[19:57:06] <FromDiscord> <Patitotective> Yea, `usr/doc/nimdoc.css` doesn't exist
[20:07:11] <FromDiscord> <leorize> this is expected if you install Nim through your distro package manager which packages nim according to the FHS
[20:07:48] <FromDiscord> <leorize> simply put\: the compiler is incompatible with Linux's FHS so packaging like that will break a feature or two
[20:08:35] <PMunch> It is generally recommended to grab Nim via choosenim
[20:09:31] <FromDiscord> <Patitotective> I had a problem while installing _Nim_ because my pc is _old_, so Yardanico helped me to install _Nim_ manually
[20:10:21] <FromDiscord> <Patitotective> Maybe that's the problem
[20:10:44] <FromDiscord> <Patitotective> sent a code paste, see https://paste.rs/Opk
[20:10:50] <FromDiscord> <Rika> thats a dev version
[20:10:51] <FromDiscord> <Patitotective> (edit) 
[20:10:51] <FromDiscord> <Rika> huh
[20:12:08] <FromDiscord> <Patitotective> Here are the message with Yardanico https://discord.com/channels/371759389889003530/753721959308853319/927965417094410251
[20:14:22] <PMunch> Hmm, so where did you put Nim?
[20:15:04] <PMunch> Did you copy the binary anywhere?
[20:15:27] <PMunch> I think it looks for some files relative to its own location
[20:15:59] <FromDiscord> <Patitotective> sent a code paste, see https://play.nim-lang.org/#ix=3MNq
[20:16:05] <FromDiscord> <Patitotective> (edit) 
[20:16:07] <PMunch> So I'm guessing you moved it to /usr/bin/nim or something like that, and then it goes looking out of the bin folder, expecting to find the rest of the repository, but ending up in /usr
[20:16:24] <PMunch> Yup, that's exactly what has happened
[20:16:35] <FromDiscord> <Patitotective> So should I reinstall _Nim_?
[20:16:45] <PMunch> Nah I think we can hack this
[20:16:51] <PMunch> Do you still have nimble in the Nim repo folder?
[20:17:34] <FromDiscord> <Patitotective> sent a code paste, see https://play.nim-lang.org/#ix=3MNr
[20:17:38] <FromDiscord> <Patitotective> (edit) "https://play.nim-lang.org/#ix=3MNr" => "https://play.nim-lang.org/#ix=3MNs"
[20:17:55] <FromDiscord> <Patitotective> I guess I removed it, should I clone it again?
[20:18:33] <PMunch> Ah, well then we're pretty much in the territory of a reinstall
[20:18:45] <PMunch> But yeah, I guess that's the easiest solution
[20:18:54] <PMunch> But the binary in .nimble is a shim I think
[20:18:58] <PMunch> It just runs another program
[20:20:53] <PMunch> If you run `strace ~/.nimble/bin/nimble --version 2>&1 | grep nimble` you should see the actual location of nimble
[20:21:36] <FromDiscord> <Patitotective> sent a code paste, see https://play.nim-lang.org/#ix=3MNt
[20:21:40] <FromDiscord> <Patitotective> (edit) 
[20:22:07] <FromDiscord> <Patitotective> I already downloaded nim repo again, should I remove my current installation and run `install.sh`?
[20:23:11] <PMunch> Huh, that was actually the right nimble
[20:23:22] <PMunch> Yeah I guess that's the best way of doing it
[20:23:31] <PMunch> Which repo did you download though?
[20:23:42] <PMunch> You probably want to grab the latest stable version
[20:24:08] <FromDiscord> <Patitotective> sent a long message, see http://ix.io/3MNy
[20:24:12] <FromDiscord> <Patitotective> wait
[20:24:19] <FromDiscord> <Patitotective> quite a long url
[20:24:53] <FromDiscord> <Patitotective> sent a code paste, see https://play.nim-lang.org/#ix=3MNz
[20:25:21] <PMunch> Nah, that will run the same script that errored out for you
[20:25:41] <FromDiscord> <Patitotective> Then manually?
[20:25:50] <PMunch> Grab the one from here: https://github.com/nim-lang/Nim/releases/tag/v1.6.2
[20:26:46] <PMunch> You should be able to just run the `build_all.sh` script from there
[20:26:58] <PMunch> And then go grab a cup of tea or something, might take a while
[20:27:08] <FromDiscord> <Patitotective> Without removing the actual installation?
[20:27:17] <PMunch> Well you should remove the current one first
[20:27:22] <FromDiscord> <Patitotective> how?
[20:27:54] <PMunch> To be honest I'm not entirely sure how those files ended up where you have them
[20:28:15] <PMunch> Did you run some script to install Nim?
[20:29:01] <FromDiscord> <Patitotective> `install.sh`
[20:29:13] <FromDiscord> <Patitotective> let me see if `uninstall.sh` is in the trash lol
[20:30:05] <FromDiscord> <Patitotective> oh, it is called `deinstall.sh`
[20:30:50] <PMunch> Right, yeah run that
[20:31:28] <FromDiscord> <Patitotective> done, now im going to install _1.6.2_ and go grab a cup of tea
[20:31:28] <FromDiscord> <Patitotective> üôÉ
[20:44:31] <PMunch> Is it safe to have the same `const something {.strdefine.}` in two libraries, one which imports the other?
[20:47:23] <FromDiscord> <kevin> anyone know if there's a good DNS server Nim package? Can only find this https://github.com/rockcavera/nim-ndns which is a client üò¶
[20:47:44] <FromDiscord> <enthus1ast> no not that i'm aware of
[20:47:53] <FromDiscord> <enthus1ast> have worked on one, but got bored
[20:48:53] <PMunch> None that I know of, but I've used Unbound with a Nim-written dynamic library with great success
[20:49:14] <FromDiscord> <enthus1ast> but dns got more complicated these days so maybe good idea to use production ready stuff
[20:49:23] <FromDiscord> <mratsim> In reply to @PMunch "Is it safe to": won't you have ambiguous identifier at call site?
[20:49:56] <FromDiscord> <mratsim> I'm surprised Carrier-Grade NAT didn't break just about everything.
[20:50:12] <PMunch> They're not exported, so the module that imports it shouldn't be able to see that it was already put in a const
[20:54:24] <FromDiscord> <Patitotective> In reply to @Patitotective "done, now im going": It is done with `./build_all.sh`, what do I do now? just add `/usr/nim` to the path?
[20:54:45] <FromDiscord> <enthus1ast> i would use choosenim
[20:55:00] <FromDiscord> <enthus1ast> easy to change between versions
[20:56:25] <FromDiscord> <Patitotective> should I use choosenim? @PMunch or is it going to cause any error?
[20:57:08] <PMunch> @Patitotective, don't run choosenim
[20:57:31] <PMunch> @enthus1ast, his problem is that his CPU is too old, the pre-built versions doesn't have support for it
[20:57:53] <PMunch> @Patitotective, where did you download it?
[20:58:22] <PMunch> Basically you should now have a /bin folder
[20:58:34] <PMunch> And it should contain a working version of nim and nimble
[20:58:36] <FromDiscord> <enthus1ast> ic
[20:59:04] <FromDiscord> <Patitotective> In reply to @PMunch "Basically you should now": do i move that directory to `/usr/bin`
[20:59:08] <PMunch> So if you just add that folder to your PATH (hopefully you didn't do all this in /tmp, but if you did just copy it somewhere else)
[20:59:19] <PMunch> No, don't move it, that's what caused your original issue
[20:59:31] <NimEventer> New thread by Chaemon: Bug of newSeqWith with Slice, see https://forum.nim-lang.org/t/8829
[20:59:32] <PMunch> You need to add that directory to your PATH variable
[20:59:39] *** Joins: pro (~pro@user/pro)
[20:59:51] <FromDiscord> <Patitotective> Ok
[21:07:06] <FromDiscord> <Patitotective> sent a code paste, see https://play.nim-lang.org/#ix=3MNT
[21:07:59] <FromDiscord> <Patitotective> (edit) "https://play.nim-lang.org/#ix=3MNT" => "https://play.nim-lang.org/#ix=3MNU"
[21:08:25] <FromDiscord> <Patitotective> I added it to `~/.bashrc`
[21:08:42] <FromDiscord> <Patitotective> should i add it to `~/.profile`?
[21:09:01] <PMunch> `source .bashrc`
[21:09:31] <PMunch> If you do `echo $PATH` you should see that it is there
[21:09:44] <PMunch> If not you must run `source` or restart your terminal
[21:14:18] <FromDiscord> <Patitotective> üòï https://media.discordapp.net/attachments/371759389889003532/933416591411015770/Screenshot_from_2022-01-19_12-44-11.png
[21:15:01] <PMunch> You have dots in the actual folder name, and dashes in the one in your path
[21:15:21] <FromDiscord> <Patitotective> oh
[21:16:03] <FromDiscord> <Patitotective> Thaaanks üôÉ
[21:16:10] <FromDiscord> <Patitotective> ‚ù§Ô∏è
[21:16:23] *** Joins: krux02 (~krux02@p200300e81723dd00b48b627b8314596f.dip0.t-ipconnect.de)
[21:17:27] <PMunch> No problem :)
[21:18:18] <PMunch> @mratsim, apparently trying to use a `const something* {.strdefine.} = ""` in a `static: echo something` from a module that imports the one where it is defined doesn't work
[21:18:24] <PMunch> Just complains that it is `void`
[21:27:52] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:14be:59d4:43c7:c828)
[21:29:18] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[21:30:23] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[21:30:52] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[21:35:39] <NimEventer> New thread by Nycto: Atomics: attempting to call undeclared routine: 'testAndSet', see https://forum.nim-lang.org/t/8830
[21:36:10] *** Quits: Figworm (FiggyWitIt@user/figworm) (Quit: Figworm)
[21:43:41] <NimEventer> New thread by Dbaron4: Libmysqlclient.so Not Found, see https://forum.nim-lang.org/t/8831
[22:33:09] *** Joins: vicfred (~vicfred@user/vicfred)
[22:36:31] *** Joins: Figworm (~inoor@user/figworm)
[22:36:54] *** Quits: Figworm (~inoor@user/figworm) (Client Quit)
[22:36:57] *** Joins: yassernasc (~yassernas@ec2-54-87-145-249.compute-1.amazonaws.com)
[22:38:29] <FromDiscord> <sigkill> sent a long message, see http://ix.io/3MOo
[22:38:51] *** Joins: Figworm (FiggyWitIt@user/figworm)
[22:41:56] <NimEventer> New thread by Jayv: Working with tables and strict funcs, see https://forum.nim-lang.org/t/8832
[22:41:57] <PMunch> Easy fix, use a nimble file
[22:42:25] <PMunch> NimLSP needs to find your project root, it has a couple different ways of doing this, one of which is the nimble file
[22:44:29] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[23:13:27] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[23:22:59] *** Quits: greaser|q (greaser@antihype.space) (Changing host)
[23:22:59] *** Joins: greaser|q (greaser@user/greasemonkey)
[23:23:02] *** greaser|q is now known as GreaseMonkey
[23:35:38] <FromDiscord> <Patitotective> In the `runnableExamples` of my library, should I include `import library` or is it obsolete?
[23:36:21] <PMunch> It should import the library it is defined in
[23:46:17] <FromDiscord> <Patitotective> Like
[23:46:19] <FromDiscord> <Patitotective> ?
[23:46:22] <FromDiscord> <Patitotective> sent a code paste, see https://play.nim-lang.org/#ix=3MOI
[23:49:03] *** Quits: pro (~pro@user/pro) (Quit: WeeChat 3.4)
[23:51:50] <PMunch> Yes, that should work I believe
[23:59:15] *** Quits: yassernasc (~yassernas@ec2-54-87-145-249.compute-1.amazonaws.com) (Remote host closed the connection)
