[00:00:18] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 260 seconds)
[00:01:27] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[00:02:49] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[00:05:09] *** Joins: carlavilla (~carlavill@2a0c:5a84:3407:5100:221:6bff:fe3b:cee4)
[00:06:09] *** Quits: AmR (~AmREiSa@156.207.199.106) (Quit: Konversation terminated!)
[00:13:48] *** Joins: skapata (~Skapata@user/skapata)
[00:15:17] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 240 seconds)
[00:18:35] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[00:18:44] *** Joins: rgrinberg (~textual@187.223.144.204)
[00:20:54] *** Quits: cmj (~cmj@68.207.254.124) (Quit: Leaving)
[00:22:32] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[00:22:32] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[00:22:32] *** Joins: wroathe (~wroathe@user/wroathe)
[00:27:11] <SoF> hi, how can I make CLion (in a Makefile project) use the C11 standard?
[00:27:25] <SoF> it currently complains when I use e.g. htons about being in C99 mode 
[00:29:25] <twkm> htons isn't in any standard.
[00:30:15] <SoF> ah I see, thanks, the report still makes me believe CLion thinks it's in C99 which I would like to change to C11
[00:30:40] <System_Error> <nomagno> I still think it would be useful to have void data type, that is not a pointer <- use eg uint8 array or whatever and cast type?
[00:30:53] <twkm> ewww, intN_t.
[00:31:02] <twkm> also, ewww, casts.
[00:31:03] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[00:31:42] <System_Error> twkm: void pointers are sorta eww on their own, so... 
[00:31:44] *** Quits: mahmutov (~mahmutov@5.176.51.91) (Ping timeout: 256 seconds)
[00:32:38] <System_Error> And uint8_t is more or less meant to be "byte", so one can reinterpret array of bytes, etc. And IMO original C types even more of eww kind thing. 
[00:32:45] *** Joins: mahmutov (~mahmutov@5.176.0.19)
[00:32:45] <twkm> no casts are needed with them, though some prefer casts.
[00:33:20] <System_Error> code backfires so funny when e.g. some atmega stuff gives them int = 16 bits and its fraggin valid under standards XD
[00:34:23] <twkm> when the code was written poorly, yes.
[00:34:27] <System_Error> basically failing to define some well defined limits in standards led to zillions of stupid software bugs
[00:35:02] <System_Error> Its not code fault "int" lacks good definition so you dont even easily know what is valid to store and what isnt.
[00:35:13] <twkm> the lower limits are well defined, and the actual limits are testable.
[00:35:41] <System_Error> Imo it really suxx when things like that are up to implementation. (u)intXX_t at least somewhat took on that idiocy
[00:36:10] <System_Error> actual limits are testable. <- At expense of turning code into what? Some testlab?
[00:36:20] <twkm> by making a different choice that might bite you when horrible code is compileed.
[00:36:34] *** g0z is now known as gerogerigegege
[00:37:12] *** Parts: FishByte (~fishbyte@2601:984:4100:fed0:1e56:c099:e5c7:60be) (Leaving)
[00:37:39] <System_Error> In case u32 I know that sorta can hold 32 bits, and so 2^32-1 is valid limit any day. But anything like that doesn't holds for "int".
[00:38:29] <twkm> too lazy to check the limits, then the required minimums indicate you should use long.
[00:39:14] <System_Error> twkm: problem with "long" same as with other types: not exactly well defined in way implementations supposed to expose smth consistent
[00:45:28] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[00:48:14] *** Joins: Viewday118 (~Viewday@user/viewday)
[00:49:04] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[00:50:26] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[00:50:26] *** Viewday118 is now known as Viewday11
[00:51:13] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[00:51:46] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[00:54:40] *** Quits: Libero (~Libero@77.49.32.8.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[00:54:51] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[00:55:32] *** Quits: rgrinberg (~textual@187.223.144.204) (Ping timeout: 256 seconds)
[00:56:03] *** Joins: xse (~xse@user/xse)
[00:57:26] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 245 seconds)
[00:59:07] *** Joins: rgrinberg (~textual@187.223.248.37)
[01:05:40] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[01:05:53] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[01:08:50] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[01:12:17] *** Quits: bolovanos (~bolovanos@user/bolovanos) (Ping timeout: 240 seconds)
[01:12:38] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 260 seconds)
[01:13:57] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[01:13:57] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[01:13:57] *** Joins: wroathe (~wroathe@user/wroathe)
[01:15:39] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[01:16:02] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[01:19:03] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[01:21:38] *** Joins: Libero (~Libero@77.49.32.8.dsl.dyn.forthnet.gr)
[01:25:17] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 240 seconds)
[01:26:20] *** Quits: MarcoFe (~marcofe@net-5-88-237-237.cust.vodafonedsl.it) (Quit: Konversation terminated!)
[01:26:33] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[01:27:16] *** Quits: dustinm- (~dustinm@static.38.6.217.95.clients.your-server.de) (Quit: Leaving)
[01:29:09] *** Quits: Torr (~Torr@user/torr) ()
[01:29:20] *** Joins: Torr (~Torr@user/torr)
[01:29:54] *** Joins: rgrinberg (~textual@187.223.250.159)
[01:31:46] *** Quits: Libero (~Libero@77.49.32.8.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[01:35:08] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net)
[01:35:14] *** Quits: hxztnxt (~hxztnxt@218.red-83-54-57.dynamicip.rima-tde.net) (Remote host closed the connection)
[01:36:25] *** Joins: Libero (~Libero@77.49.32.8.dsl.dyn.forthnet.gr)
[01:39:19] *** Joins: dustinm (~dustinm@static.38.6.217.95.clients.your-server.de)
[01:41:26] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 256 seconds)
[01:44:33] *** Joins: nyah (~nyah@94.6.71.219)
[01:48:27] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[01:51:44] *** Quits: mahmutov (~mahmutov@5.176.0.19) (Ping timeout: 268 seconds)
[01:54:19] *** Quits: singularity00 (~singulari@85.187.64.126.client.entry.bg) (Quit: The true sign of intelligence is not knowledge but imagination.)
[01:56:45] *** Joins: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com)
[02:03:47] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:04:51] *** Quits: strajder (~strajder@user/strajder) (Quit: gn)
[02:05:48] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Read error: Connection reset by peer)
[02:08:04] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[02:11:28] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 256 seconds)
[02:11:51] *** Joins: inlight (~inlight@157.42.247.230)
[02:11:51] *** Quits: inlight (~inlight@157.42.247.230) (Changing host)
[02:11:51] *** Joins: inlight (~inlight@user/inlight)
[02:13:17] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[02:13:57] *** Quits: CormacAttack (~mac@2601:449:8380:7bf0::66db) (Ping timeout: 240 seconds)
[02:14:06] *** Quits: Brewster (~Brewster@104.145.226.5) (Changing host)
[02:14:06] *** Joins: Brewster (~Brewster@user/brewster)
[02:16:25] *** Joins: constxd (~brad@142.134.38.68)
[02:16:57] *** Quits: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com) (Ping timeout: 240 seconds)
[02:17:38] *** Quits: pert (~pert@fsf/member/pert) (Read error: Connection reset by peer)
[02:17:56] *** Joins: pert (~pert@fsf/member/pert)
[02:19:35] *** Quits: pert (~pert@fsf/member/pert) (Client Quit)
[02:20:11] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[02:20:43] *** Quits: |darc| (darc@23-112-65-16.lightspeed.nworla.sbcglobal.net) (Ping timeout: 268 seconds)
[02:20:57] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[02:20:57] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[02:21:25] *** Joins: Enitin (~Enitin@82.102.22.85)
[02:24:24] *** Joins: |darc| (~darc@23-112-65-16.lightspeed.nworla.sbcglobal.net)
[02:29:57] *** Quits: concrete-houses (~g@209.6.150.53) (Ping timeout: 240 seconds)
[02:31:41] *** Joins: nightstrike (uid487@id-487.uxbridge.irccloud.com)
[02:32:07] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[02:32:12] *** Joins: concrete-houses (~g@209.6.150.53)
[02:33:24] *** Quits: pizdets (~pizdets@183.182.110.61) (Ping timeout: 250 seconds)
[02:33:44] *** Joins: pizdets_ (~pizdets@183.182.111.198)
[02:34:22] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Quit: This computer has gone to sleep)
[02:34:22] *** Quits: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu) (Quit: Leaving)
[02:36:10] *** Quits: Akuli (~Akuli@213.216.211.11) (Quit: Akuli)
[02:38:17] *** Quits: johnjay__ (~pi@154.6.152.74) (Ping timeout: 240 seconds)
[02:38:56] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[02:39:21] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[02:40:27] *** Joins: johnjay__ (~pi@154.6.152.74)
[02:44:23] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:48:52] *** Joins: begriffs (~begriffs@user/begriffs)
[02:50:37] *** Quits: Libero (~Libero@77.49.32.8.dsl.dyn.forthnet.gr) (Ping timeout: 240 seconds)
[02:51:40] *** Joins: Libero (~Libero@77.49.32.8.dsl.dyn.forthnet.gr)
[02:53:04] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[02:53:04] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[02:53:04] *** Joins: wroathe (~wroathe@user/wroathe)
[02:55:21] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[02:57:50] *** Quits: tomboy64 (~tomboy64@user/tomboy64) (Quit: Off to see the wizard.)
[02:58:26] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 252 seconds)
[02:59:28] *** Joins: imm_ (~imm_@user/imm/x-3405860)
[03:01:57] *** Quits: Libero (~Libero@77.49.32.8.dsl.dyn.forthnet.gr) (Ping timeout: 240 seconds)
[03:02:49] *** Joins: tomboy64 (~tomboy64@user/tomboy64)
[03:03:02] *** Quits: constxd (~brad@142.134.38.68) (Ping timeout: 256 seconds)
[03:08:16] *** Quits: esselfe (~steph@user/esselfe) (Ping timeout: 245 seconds)
[03:15:28] *** Joins: rgrinberg (~textual@187.223.26.102)
[03:16:17] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Ping timeout: 240 seconds)
[03:16:46] *** Quits: johnjay__ (~pi@154.6.152.74) (Ping timeout: 260 seconds)
[03:17:20] *** Joins: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy)
[03:17:57] *** Joins: dan_pena (~dan_pena@86.228.71.37.rev.sfr.net)
[03:18:40] *** Joins: johnjay__ (~pi@154.6.152.74)
[03:20:01] *** Quits: dan_pena (~dan_pena@86.228.71.37.rev.sfr.net) (Client Quit)
[03:20:57] *** Quits: inlight (~inlight@user/inlight) (Remote host closed the connection)
[03:22:45] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[03:23:10] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:9180:b80f:58c7:8de8) (Quit: Quit)
[03:24:26] *** Joins: Viewday113 (~Viewday@user/viewday)
[03:26:38] *** Joins: cmj (~cmj@68.207.254.124)
[03:26:50] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[03:26:50] *** Viewday113 is now known as Viewday11
[03:29:41] *** Joins: esselfe (~steph@user/esselfe)
[03:30:28] *** Quits: tomboy64 (~tomboy64@user/tomboy64) (Quit: Off to see the wizard.)
[03:32:36] *** Joins: tomboy64 (~tomboy64@user/tomboy64)
[03:33:46] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[03:36:28] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[03:36:29] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Quit: Leaving)
[03:39:16] *** Quits: pulse (~pulse@user/pulse) (Quit: Join a gamedev community https://indiedevs.net/)
[03:39:18] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:9180:b80f:58c7:8de8)
[03:39:35] *** Quits: rgrinberg (~textual@187.223.26.102) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:40:49] *** Joins: rgrinberg (~textual@2806:101e:1:27a5:b170:6e98:8314:62d3)
[03:41:08] *** Quits: rgrinberg (~textual@2806:101e:1:27a5:b170:6e98:8314:62d3) (Client Quit)
[03:41:46] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[03:41:48] *** Quits: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy) (Quit: WeeChat 3.3)
[03:42:36] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 240 seconds)
[03:44:01] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:44:23] *** Joins: Wulf (~Wulf@user/wulf)
[03:44:24] *** Joins: tejr (~tejr@user/tejr)
[03:44:48] *** Joins: CormacAttack (~mac@2601:449:8380:7bf0::66db)
[03:45:34] <caze> System_Error: Do you know what the size guarantees are?
[03:46:09] *** Joins: Libero (~Libero@188.4.24.22.dsl.dyn.forthnet.gr)
[03:48:02] *** Quits: alch (~alch@151.82.42.94) (Ping timeout: 240 seconds)
[03:49:58] *** Joins: alch (~alch@mi-18-55-186.service.infuturo.it)
[03:50:17] *** Quits: dsrt^ (~dsrt@64.253.22.77) (Ping timeout: 240 seconds)
[03:50:52] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[03:51:11] <tk> There's apparently a horrible clang option which forces you to cast void *
[03:51:27] <tk> I found someone who also thinks this is a: useful and b: common
[03:52:11] <smallville7123> does gcc error thing deal with unicode or only ascii ?
[03:54:08] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[03:56:39] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[03:56:51] <tk> okay, the person was apparently using clang in C++ mode 
[03:56:57] <tk> this is even dumber
[03:57:07] *** Joins: newchair (~newchair@d-204-195-168-15.paw.cpe.atlanticbb.net)
[03:57:38] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[04:02:53] *** Quits: newchair (~newchair@d-204-195-168-15.paw.cpe.atlanticbb.net) (Quit: zzz)
[04:03:55] *** Quits: Torr (~Torr@user/torr) ()
[04:04:06] *** Joins: Torr (~Torr@user/torr)
[04:06:09] *** Joins: xa0s (~xa0s@mab.sdf.org)
[04:06:52] *** Joins: rgrinberg (~textual@2806:101e:1:27a5:b170:6e98:8314:62d3)
[04:07:39] *** Quits: magla (~gelignite@55d4d5f7.access.ecotel.net) (Quit: Stay safe!)
[04:10:25] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[04:10:40] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[04:14:03] *** Quits: DonRichie (~DonRichie@ricl.de) (Quit: bye)
[04:16:52] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[04:17:00] *** Quits: Libero (~Libero@188.4.24.22.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[04:18:11] *** Quits: Kev_ (~Kev@2a01cb0400149f0041527f8c4ccb017e.ipv6.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[04:18:55] *** Joins: DonRichie (~DonRichie@ricl.de)
[04:19:25] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[04:19:41] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[04:22:57] *** Quits: graywolf (~wolf@user/graywolf) (Quit: WeeChat 3.3)
[04:25:47] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[04:30:46] *** Quits: Burgundy (~yomon@79.115.213.171) (Ping timeout: 245 seconds)
[04:34:57] *** Quits: CormacAttack (~mac@2601:449:8380:7bf0::66db) (Ping timeout: 240 seconds)
[04:36:29] *** Joins: dsrt^ (~dsrt@64.253.22.77)
[04:38:48] *** Quits: johnjay__ (~pi@154.6.152.74) (Ping timeout: 256 seconds)
[04:38:55] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[04:39:50] *** Quits: zwr (~zwr@2804:d45:b966:fb00:7634:5fa:3b2f:e1a6) (Ping timeout: 260 seconds)
[04:39:53] *** Joins: johnjay__ (~pi@154.6.152.74)
[04:40:21] *** Joins: zwr (~zwr@2804:d45:b966:fb00:7aef:c67e:18ed:ef2b)
[04:42:17] *** Quits: rgrinberg (~textual@2806:101e:1:27a5:b170:6e98:8314:62d3) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:43:06] *** Quits: clime (~clime@78-80-24-27.customers.tmcz.cz) (Quit: WeeChat 3.3)
[04:45:08] *** Quits: gothicserpent (~gothicser@204.152.216.121) (Ping timeout: 252 seconds)
[04:46:15] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 268 seconds)
[04:49:01] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 240 seconds)
[04:52:46] *** Joins: gothicserpent (~gothicser@89.45.90.230)
[04:52:49] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[04:56:30] *** Joins: velgin (~velgin@pool-96-237-105-119.bstnma.fios.verizon.net)
[04:56:46] *** Quits: DonRichie (~DonRichie@ricl.de) (Quit: bye)
[05:02:28] *** Joins: DonRichie (~DonRichie@ricl.de)
[05:03:55] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: leaving)
[05:05:03] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[05:06:57] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[05:07:22] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d5a4-1687-e9ec-e2fe.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[05:19:46] <ioxzev1z> tk, didn't calling clang++ tip them off?
[05:22:38] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[05:24:41] *** Joins: Viewday111 (~Viewday@user/viewday)
[05:24:42] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[05:26:58] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[05:26:58] *** Viewday111 is now known as Viewday11
[05:30:44] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[05:31:23] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[05:34:14] *** Joins: arinov (~arinov@213.194.126.155)
[05:34:19] *** Joins: fe23 (~fe23@2409:8a34:468:83d0:405c:4b86:aa8b:2e65)
[05:37:23] *** Quits: Charadon (~Charadon@155.138.164.183) (Remote host closed the connection)
[05:40:31] *** Joins: haniaF_ (~haniaF@83.24.190.184.ipv4.supernova.orange.pl)
[05:41:11] *** Quits: haniaF (~haniaF@83.24.213.124.ipv4.supernova.orange.pl) (Ping timeout: 250 seconds)
[05:41:12] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[05:41:32] *** Quits: arinov (~arinov@213.194.126.155) (Quit: WeeChat 3.3)
[05:47:56] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[05:48:32] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[05:48:49] *** Quits: cmj (~cmj@68.207.254.124) (Quit: Leaving)
[05:49:27] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:49:36] *** Quits: masterbuilder (~user@user/masterbuilder) (Remote host closed the connection)
[05:51:33] *** Joins: Charadon (~Charadon@155.138.164.183)
[05:52:01] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[05:54:10] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[05:56:10] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:9180:b80f:58c7:8de8) (Quit: Quit)
[05:58:13] *** Joins: joe_ (~joe_@63.119.181.194)
[06:03:57] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 240 seconds)
[06:05:53] *** Quits: PaulePanter (~paul@mail.gw90.de) (Remote host closed the connection)
[06:06:34] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Quit: Leaving)
[06:08:46] *** Quits: System_Error (~SystemErr@user/systemerror) (Remote host closed the connection)
[06:09:14] *** Joins: System_Error (~SystemErr@user/systemerror)
[06:09:50] *** Quits: u0_a391 (~u0_a391@cpe-76-190-178-139.neo.res.rr.com) (Read error: No route to host)
[06:10:02] *** Joins: u0_a391 (~u0_a391@2603-6010-a141-6fa3-88f4-4cc9-a7b6-7571.res6.spectrum.com)
[06:14:34] *** Quits: random-nick (~random-ni@87.116.181.93) (Ping timeout: 256 seconds)
[06:14:47] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[06:17:23] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[06:20:35] *** Quits: Charadon (~Charadon@155.138.164.183) (Remote host closed the connection)
[06:25:50] *** Joins: inomoz (~inomoz@85.26.165.145)
[06:27:41] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[06:28:25] *** Quits: joe_ (~joe_@63.119.181.194) ()
[06:28:37] *** Joins: joe_ (~joe_@63.119.181.194)
[06:29:08] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[06:29:32] *** Joins: sloanr (~user@94.140.9.154)
[06:33:14] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 260 seconds)
[06:39:33] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[06:40:18] *** Parts: danielcamiel (~danielcam@user/danielcamiel) (Leaving)
[06:41:10] *** Quits: joe_ (~joe_@63.119.181.194) (Remote host closed the connection)
[06:43:19] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[06:44:22] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[06:44:36] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[06:44:57] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net)
[06:45:01] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[06:45:18] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[06:46:20] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[06:46:48] *** Joins: sloanr` (~user@70-59-70-189.mpls.qwest.net)
[06:47:03] *** Joins: joe_ (~joe_@2607:fb91:131e:82c7:9dae:d8bf:722f:1369)
[06:47:17] *** Quits: sloanr (~user@94.140.9.154) (Ping timeout: 240 seconds)
[06:47:20] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[06:47:28] *** Joins: joe__ (~joe_@63.119.181.194)
[06:48:22] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[06:49:26] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[06:51:17] *** Quits: joe_ (~joe_@2607:fb91:131e:82c7:9dae:d8bf:722f:1369) (Ping timeout: 240 seconds)
[06:52:26] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[06:56:05] *** Joins: VArchS (~VArchS@dyn216-8-140-70.ADSL.mnsi.net)
[07:00:13] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[07:03:20] *** Joins: squidrin (~squidrin@75.165.136.107)
[07:04:36] *** Quits: joe__ (~joe_@63.119.181.194) (Remote host closed the connection)
[07:05:51] *** Quits: squidrin (~squidrin@75.165.136.107) (Remote host closed the connection)
[07:06:23] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[07:07:52] *** Joins: u0_a3911 (~u0_a391@2603-6010-a141-6fa3-88f4-4cc9-a7b6-7571.res6.spectrum.com)
[07:07:52] *** Quits: u0_a391 (~u0_a391@2603-6010-a141-6fa3-88f4-4cc9-a7b6-7571.res6.spectrum.com) (Read error: Connection reset by peer)
[07:08:59] *** Quits: VArchS (~VArchS@dyn216-8-140-70.ADSL.mnsi.net) (Quit: WeeChat 3.3)
[07:09:18] *** Quits: velgin (~velgin@pool-96-237-105-119.bstnma.fios.verizon.net) (Quit: Leaving)
[07:09:29] *** Joins: VArchS (~VArchS@dyn216-8-140-70.ADSL.mnsi.net)
[07:11:51] *** Joins: squidrin (~squidrin@75.165.136.107)
[07:13:35] *** Quits: squidrin (~squidrin@75.165.136.107) (Client Quit)
[07:13:49] *** Joins: squidrin (~squidrin@75.165.136.107)
[07:18:43] *** Quits: squidrin (~squidrin@75.165.136.107) (Remote host closed the connection)
[07:19:09] *** Joins: squidrin (~squidrin@75.165.136.107)
[07:21:47] *** Quits: squidrin (~squidrin@75.165.136.107) (Remote host closed the connection)
[07:22:34] *** Joins: squidrin (~squidrin@75.165.136.107)
[07:23:25] *** Quits: squidrin (~squidrin@75.165.136.107) (Client Quit)
[07:23:39] *** Joins: squidrin (~squidrin@75.165.136.107)
[07:24:34] *** Joins: Viewday118 (~Viewday@user/viewday)
[07:26:32] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[07:26:32] *** Viewday118 is now known as Viewday11
[07:28:43] <squidrin> hello. my irc client resets everytime i switch to another application. (on a mobile device). is there anything i can do to stop myself from join flooding? im on ios
[07:28:48] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[07:29:46] *** Quits: squidrin (~squidrin@75.165.136.107) (Remote host closed the connection)
[07:30:08] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[07:30:08] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[07:30:08] *** Joins: wroathe (~wroathe@user/wroathe)
[07:30:20] *** Joins: squidrin (~squidrin@75.165.136.107)
[07:31:58] *** Quits: VArchS (~VArchS@dyn216-8-140-70.ADSL.mnsi.net) (Quit: WeeChat 3.3)
[07:33:37] *** Quits: u0_a3911 (~u0_a391@2603-6010-a141-6fa3-88f4-4cc9-a7b6-7571.res6.spectrum.com) (Ping timeout: 240 seconds)
[07:35:17] *** Joins: rgrinberg (~textual@2806:101e:1:27a5:b170:6e98:8314:62d3)
[07:35:20] *** Joins: u0_a3911 (~u0_a391@cpe-76-190-178-139.neo.res.rr.com)
[07:35:51] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:46] *** Quits: squidrin (~squidrin@75.165.136.107) (Remote host closed the connection)
[07:37:50] *** Joins: slidercrank (~slidercra@user/slidercrank)
[07:39:11] *** Joins: squidrin (~squidrin@75.165.136.107)
[07:40:25] *** Quits: squidrin (~squidrin@75.165.136.107) (Remote host closed the connection)
[07:40:38] *** Joins: squidrin (~squidrin@75.165.136.107)
[07:43:11] *** Quits: squidrin (~squidrin@75.165.136.107) (Remote host closed the connection)
[07:43:28] *** Joins: squidrin (~squidrin@75.165.136.107)
[07:45:33] *** Quits: squidrin (~squidrin@75.165.136.107) (Remote host closed the connection)
[07:45:34] *** Quits: alch (~alch@mi-18-55-186.service.infuturo.it) (Read error: Connection reset by peer)
[07:47:32] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[07:50:21] *** Joins: alch (~alch@to-18-92-215.service.infuturo.it)
[07:53:46] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[07:53:51] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[07:55:57] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[08:01:56] *** Quits: kaizen (sid501599@id-501599.helmsley.irccloud.com) ()
[08:06:18] *** Joins: john99 (~john99@138.246.103.34.bc.googleusercontent.com)
[08:10:36] *** Quits: zwr (~zwr@2804:d45:b966:fb00:7aef:c67e:18ed:ef2b) (Remote host closed the connection)
[08:11:56] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Quit: neshpion)
[08:12:47] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[08:14:43] <concrete-houses> what is static linking and why do some say it is way better?
[08:15:57] <dave0> concrete-houses: all the libraries that the program needs are linked once at compile time
[08:16:39] <dave0> concrete-houses: as opposed to dynamic where libraries are loaded on demand at run time
[08:17:13] *** Joins: zwr (~zwr@2804:d45:b966:fb00:2c53:f3e6:ebd:1d0e)
[08:17:45] <dave0> concrete-houses: static linking means the program is self contained and needs nothing extra at runtime... it's useful if you use a lot of libraries but don't want to distribute them with your program
[08:18:05] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[08:19:37] <dave0> concrete-houses: it also avoid dll-hell where the system may have incompatible versions of libraries.. for example they are old and missing features, or the are new and incompatible with your program
[08:20:06] <dave0> concrete-houses: static linked programs are usually larger than dynamic linking
[08:20:42] *** Joins: PortableDave (~portabled@220.253.22.64)
[08:22:22] <dave0> there are arguments that static linked programs use less memory than dynamically linked... but there are also counter arguments that they use more memory
[08:23:15] <dave0> in general static linked is better for users because they are self contained
[08:25:24] *** Quits: goddard (~goddard@user/goddard) (Remote host closed the connection)
[08:25:43] *** Joins: goddard (~goddard@user/goddard)
[08:28:16] *** Quits: dsrt^ (~dsrt@64.253.22.77) (Ping timeout: 268 seconds)
[08:30:19] *** Joins: node14 (~node1@user/node1)
[08:30:21] *** Joins: constxd (~brad@142.68.160.15)
[08:32:49] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[08:35:40] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[08:38:01] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[08:38:57] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[08:39:22] *** Joins: Enitin (~Enitin@82.102.22.86)
[08:42:29] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[08:47:00] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[08:49:13] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[08:50:57] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[08:54:11] *** Joins: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com)
[08:54:40] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: leaving)
[08:56:54] *** Joins: epony (epony@user/epony)
[08:57:17] *** Quits: constxd (~brad@142.68.160.15) (Ping timeout: 240 seconds)
[08:58:36] *** Joins: gco (~gco@2601:647:4c80:2424:6d7b:d9aa:d590:cbee)
[09:00:14] *** Quits: pr-asadi (~pr-asadi@2602:fccf:1:1150::) (Ping timeout: 260 seconds)
[09:00:31] *** Joins: pr-asadi (~pr-asadi@2602:fccf:1:1150::)
[09:00:55] *** Joins: loganlee (~Thunderbi@user/loganlee)
[09:03:35] *** Joins: CormacAttack (~mac@2601:449:8380:7bf0::66db)
[09:03:53] *** Joins: off^ (~off@64.253.22.77)
[09:07:55] *** Quits: rgrinberg (~textual@2806:101e:1:27a5:b170:6e98:8314:62d3) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:08:50] *** Joins: khrbt (~znc@user/khrbt)
[09:13:17] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:14:16] <wroathe> dave0: Not necessarily. In a workstation environment where you've got thousands or even tens of thousands of binaries on the system it'd get quite expensive if every single one of them insisted on having their own copies of every library they use
[09:15:36] *** Joins: kdc (~kdc@196.211.197.159)
[09:16:17] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 240 seconds)
[09:17:07] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[09:17:29] *** Quits: CormacAttack (~mac@2601:449:8380:7bf0::66db) (Quit: WeeChat 3.3)
[09:17:37] <ent58> oo is this shared libraries vs static linking?
[09:17:54] <dave0> yes :-)
[09:18:43] <ent58> my 10 picocents: shared whenever you reasonably can, static when it's not common
[09:19:35] <ent58> I figure if less than around 20% of the software on the machine uses that library, I link it statically
[09:21:11] <dave0> i remember one time in here someone was having trouble with getting his program running on an older linux ... his development machine had glibc version something point 7, but his target machine had glibc point 4, and he couldn't get his program running on the older version
[09:23:12] <dave0> for some reason he couldn't build his program on the older machine, which probably would have worked a treat and solved his problem
[09:23:45] <dave0> and he couldn't install point 4 side by side with his point 7 developer machine
[09:23:49] *** Joins: rgrinberg (~textual@2806:101e:1:27a5:b170:6e98:8314:62d3)
[09:24:45] <ent58> you would figure something like glibc wouldn't have that much of an issue, but I guess if you need stricter version control, static also applies
[09:24:51] *** Joins: Viewday110 (~Viewday@user/viewday)
[09:25:42] <ent58> there's security pros and cons in both directions; static libraries are controlled and don't introduce new bugs, shared ones allow for independent fixes of old bugs
[09:26:06] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[09:26:06] *** Viewday110 is now known as Viewday11
[09:26:41] <ent58> I'd never really figured out the One True Way, but I definitely don't like having 20 million copies of a runtime on the machine for no reason
[09:28:09] <wroathe> I don't think there is a one true way. I think it's just another thing that must be reasoned about on a case by case basis
[09:29:29] <ent58> windows did it in a way that at the very least prevents issues like your glibc case; keep ALL the runtimes
[09:30:39] <dave0> backwards compatibility forever
[09:31:10] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[09:31:29] <wroathe> Speaking of backwards compatibility
[09:31:57] <wroathe> I'm dealing with a vendor at my work that has a legacy product built on .NET Framework that they provide an SDK to build features on top of
[09:32:16] <wroathe> And I've been pressing them about the fact that a significant amount of the surface of that SDK relies on ASP.NET Web Forms
[09:32:32] <wroathe> .NET Core is getting rid of Web Forms
[09:33:16] <wroathe> So I've had meetings with executives and VPs and architects to try and hear back when they'll be upgrading to .NET Core, and how they're going to handle that transition to try and determine whether or not we should pursue building our features with this SDK
[09:33:50] <ent58> I'm okay with a hybrid solution where you have 15 different versions of the same runtime and they can be independently fixed...it seems better than having 5 zillion copies statically linked but worse than One True Copy that is designed with hardcore compatibility in mind
[09:34:10] <ent58> .net is the worst ;-;
[09:34:16] <wroathe> And in this most recent huddle I heard that to maintain backwards compatibility they might just implement their own parser for Web Forms files, and basically single handedly keep web forms alive when they move to .NET Core
[09:34:22] <wroathe> Even though Microsoft has discarded it
[09:34:36] *** Quits: sloanr` (~user@70-59-70-189.mpls.qwest.net) (Ping timeout: 256 seconds)
[09:35:08] <wroathe> Trying to move the world forward by leaving legacy tech really doesn't work, because someone somewhere has invested too heavily in it to just leave it behind when upgrading
[09:35:27] <wroathe> So companies like this vendor are just going to single handedly keep ASP.NET alive forever
[09:35:44] <System_Error> <ent58> windows did it in a way that at the very least prevents issues like your glibc case; <- By turning os into trashbin full of vulnerable libs.
[09:35:53] <ent58> yes :/
[09:36:06] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[09:36:09] <ent58> the ideal case is that the parallel versions are all maintained but that's clearly not the case either
[09:36:23] <ent58> so it almost, almost ends up better to statically link everything
[09:36:26] <ent58> security wise
[09:36:46] <System_Error> So this brings zlib version X, that version Y and something else version Z. When it comes to vuln in X and Y, patching it is like problem at best, impossible at worst.
[09:37:34] <System_Error> Someone smart would also kindly link it statically and die out with their proprietary thing alltogether to ensure it not fixed for the time being.
[09:38:02] <System_Error> (so many years later someone undigging ancient exploit still gets their point)
[09:38:16] <ent58> they did make a valiant effort to do code signing in the newer windows versions, so maybe apps can be very easily built with simple checks that they version they are linking against is the version they want
[09:38:34] <ent58> the*
[09:38:44] <System_Error> Code signing... so MSish way to solve probs... 
[09:39:10] <System_Error> that's why I'd not to have ms on my head at all costs :P
[09:40:45] <ent58> The fabled year of the Linux desktop cannot come soon enough
[09:41:37] <System_Error> I dont care. On my computers it came... ages ago.
[09:42:03] <System_Error> When I had enough of code signing and OS screwing things up and restricting me rather than helping me.
[09:42:32] *** Quits: rahl (~rahl@102.114.169.69) (Ping timeout: 256 seconds)
[09:44:00] *** Joins: rahl (~rahl@102.114.118.155)
[09:44:14] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[09:49:11] <ent58> it's just that the really important hard to reach % of the computing world comes with mass adoption, and with it a complete defeat of microsoft
[09:54:06] *** Quits: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com) (Quit: Client closed)
[10:02:57] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[10:03:00] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[10:03:18] *** Quits: off^ (~off@64.253.22.77) (Remote host closed the connection)
[10:04:36] *** Joins: Enitin (~Enitin@82.102.22.86)
[10:05:49] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[10:08:30] *** Joins: dsrt^ (~dsrt@64.253.22.77)
[10:14:18] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[10:14:50] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[10:22:05] *** Quits: node14 (~node1@user/node1) (Ping timeout: 256 seconds)
[10:26:12] *** Joins: puke (~puke@user/puke)
[10:26:24] *** Quits: soapsudsxx (~soapsudsx@209.221.40.139) (Remote host closed the connection)
[10:28:22] *** Joins: constxd (~brad@142.68.160.15)
[10:34:04] *** Joins: Akiva (~Akiva@user/Akiva)
[10:34:40] *** Quits: PortableDave (~portabled@220.253.22.64) (Ping timeout: 256 seconds)
[10:37:47] *** Joins: mahmutov (~mahmutov@5.176.0.19)
[10:39:57] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[10:41:16] *** Joins: loganlee (~Thunderbi@user/loganlee)
[10:43:28] *** Joins: winning-luser (~wl@2601:8c1:80:70d0::414b)
[10:43:48] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[10:51:26] *** Quits: kurahaupo (~kurahaupo@pa49-186-234-227.pa.vic.optusnet.com.au) (Ping timeout: 252 seconds)
[10:54:23] *** Joins: gproto23 (~gproto23@user/gproto23)
[10:55:14] *** Joins: Darkcoal (~user@2001:16a2:7709:f400:846d:c7d1:8468:2ddd)
[11:09:06] *** Joins: PortableDave (~portabled@220.253.22.64)
[11:11:15] *** Joins: meator (~meator@user/meator)
[11:13:13] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[11:13:27] *** Quits: gry_ (~quassel@203-129-25-247.cb8119.syd.static.aussiebb.net) (Quit: пока)
[11:15:16] <meator> Hello. Is it true that I should use a thread instead of a fork when the child needs to comunicate with the parent through global variables?
[11:16:14] *** Quits: Darkcoal (~user@2001:16a2:7709:f400:846d:c7d1:8468:2ddd) (Quit: Darkcoal)
[11:16:23] *** Joins: Darkcoal (~user@2001:16a2:7709:f400:846d:c7d1:8468:2ddd)
[11:17:02] *** Quits: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67) (Quit: Leaving)
[11:22:33] *** Quits: puke (~puke@user/puke) (Quit: puke)
[11:24:21] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Quit: Leaving)
[11:24:33] *** Joins: puke (~puke@user/puke)
[11:24:36] *** Joins: Viewday118 (~Viewday@user/viewday)
[11:25:56] *** Joins: aradesh (~aradesh@user/aradesh)
[11:26:14] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[11:26:15] *** Viewday118 is now known as Viewday11
[11:28:30] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[11:28:58] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net)
[11:31:17] *** Quits: constxd (~brad@142.68.160.15) (Ping timeout: 240 seconds)
[11:31:29] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Remote host closed the connection)
[11:32:08] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[11:32:57] *** Joins: mrig (~AdiIRC@user/mrig)
[11:33:25] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[11:33:56] *** Joins: boB_K7IQ (~boB_K7IQ@c-67-161-97-23.hsd1.wa.comcast.net)
[11:35:07] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 268 seconds)
[11:36:57] *** Joins: kurahaupo (~kurahaupo@45.248.143.48)
[11:40:37] *** Quits: boB_K7IQ (~boB_K7IQ@c-67-161-97-23.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[11:40:58] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net)
[11:45:30] *** Quits: alch (~alch@to-18-92-215.service.infuturo.it) (Read error: Connection reset by peer)
[11:45:56] *** Quits: gco (~gco@2601:647:4c80:2424:6d7b:d9aa:d590:cbee) (Quit: ZZZzzz…)
[11:46:56] *** Joins: wa321 (~wa321@21-53-255-130.kamensktel.ru)
[11:49:38] *** Joins: alch (~alch@151.82.84.177)
[11:50:09] *** Quits: Darkcoal (~user@2001:16a2:7709:f400:846d:c7d1:8468:2ddd) (Quit: Darkcoal)
[11:50:19] *** Joins: Darkcoal (~user@2001:16a2:7709:f400:846d:c7d1:8468:2ddd)
[11:54:57] *** Quits: wa321 (~wa321@21-53-255-130.kamensktel.ru) (Read error: Connection reset by peer)
[11:57:58] *** Quits: larry87 (~quassel@c-73-6-106-85.hsd1.tx.comcast.net) (Ping timeout: 256 seconds)
[11:59:57] *** Joins: awd23 (~awd23@21-53-255-130.kamensktel.ru)
[12:04:04] <Wulf> meator: if your requirement is that you can't use fork, then you can't use it.
[12:04:21] <Wulf> meator: threads are often a bad idea. Reconsider your requirements!
[12:05:40] <smallville7123> why would you use fork for threads?
[12:05:47] <smallville7123> just use clone(2)
[12:06:23] <smallville7123> "17:45:17 meator: Hello. Is it true that I should use a thread instead of a fork when the child needs to comunicate with the parent through global variables?" this depends
[12:06:42] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Remote host closed the connection)
[12:07:02] <smallville7123> a fork can access the parent process space however is usually *expensive* to construct
[12:07:23] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[12:08:24] <smallville7123> you can *reduce* some of this overhead by using clone(2) with specific flags you want instead of fork however be warned that using clone(2) directly is NOT supported by most debuggers
[12:08:24] *** Quits: mahmutov (~mahmutov@5.176.0.19) (Ping timeout: 268 seconds)
[12:08:56] <smallville7123> if your intent is a demon process (child outlives parent) then use fork
[12:09:16] <smallville7123> (eg a program that starts up background services)
[12:09:22] <meator> The other process just sets a bool, so creating a pipe of using some other method of IPC is a little bit overkill. Threads seem appropriate for my situation. Parent outlives the child.
[12:09:45] <smallville7123> then use a thread
[12:10:03] <smallville7123> i assume this is for some kind of background work
[12:10:19] <smallville7123> eg doing some intensive task in another thread
[12:10:29] <smallville7123> and then notifying when this task is completed
[12:10:55] <dave0> don't skimp on the mutexes
[12:11:10] <dave0> make sure your bool is properly protected
[12:11:16] <smallville7123> a pthread is very lightweight compared to fork and clone
[12:11:28] <Wulf> meator: do parent and child work a lot on the same data and it's a lot of data? yes -> thread or shared memory,  no -> proceess.
[12:11:42] <Learath2> Hm, I'm not aware of much of a difference between the construction cost of a "fork" vs a "clone". glibc fork is implemented in terms of clone(2) even
[12:12:18] <smallville7123> Learath2: i meant the construction of a pthread is usually lighter than the construction of a fork/clone
[12:12:34] <meator> I'm using sig_atomic_t for data sharing and only one thread at a time is writing to it, so there shouldn't be any race conditions.
[12:12:35] <smallville7123> (tho pthread itself probably uses clone(2) under the hood)
[12:13:16] <meator> What's so bad about threads?
[12:13:17] <dave0> don't try anything fancy
[12:13:25] <dave0> keep it boring and correct
[12:13:30] <smallville7123> meator: nothing
[12:13:46] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[12:13:46] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[12:13:46] *** Joins: wroathe (~wroathe@user/wroathe)
[12:14:12] <Learath2> smallville7123: it does, pthread_create is a fancy wrapper around clone(2)
[12:14:20] <smallville7123> :)
[12:14:43] <smallville7123> yet my thread implementation breaks gdb :)
[12:14:50] <smallville7123> :D
[12:15:36] <Learath2> meator: The thing with threads is that you need to first make sure you need them, otherwise you'll just be wasting your time messing around, they also make your code harder to follow
[12:18:20] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:18:56] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[12:21:54] <Learath2> Also why are you using a sig_atomic_t? Stuck with C99?
[12:22:50] <meator> Because it is atomic.
[12:24:39] <meator> The main thread is reading the value and the other thread is setting it. This assures that the main thread will not read it when the other thread is in the middle of writing to it.
[12:26:15] <meator> Is there a better solution?
[12:26:27] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[12:28:23] <Wulf> meator: what's your program about? Why do you think you might need a thread or sub process?
[12:28:28] *** Quits: awd23 (~awd23@21-53-255-130.kamensktel.ru) (Read error: Connection reset by peer)
[12:28:38] <Learath2> I mean we have proper atomics since C11 (<stdatomic.h>). Don't really see a reason to use sig_atomic_t which has different guarantees than one might expect
[12:29:34] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[12:29:57] *** Joins: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy)
[12:30:09] *** Quits: Akawama[m] (~akawama@user/akawama) (Quit: You have been kicked for being idle)
[12:30:35] *** Joins: joe_ (~joe_@63.119.181.194)
[12:31:57] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[12:33:19] <meator> It's a little program for personal use. I'm writing it to learn more about the Linux programming interface.
[12:33:41] *** Quits: joe_ (~joe_@63.119.181.194) (Client Quit)
[12:34:55] <dave0> i don't understand that atomic stuff... i always use a mutex
[12:35:28] <Learath2> The thing is sig_atomic_t provides no memory-order guarantees, so reads and writes on either thread can get reordered into not making sense
[12:36:15] *** smallvil_ is now known as smallville7123
[12:36:17] <dave0> the only place i saw sig_atomic_t was in example code for the signal function
[12:36:39] <Learath2> e.g. child manipulates some data, sets a sig_atomic_t flag to signal that it's done. compiler re-orders this as child sets the flag, then manipulates data. the parent will now read the flag, think the child is done and operate on unmanipulated data
[12:37:24] <smallville7123> have you tried C++? it is a bit easier to use with std::atomic and std::mutex and std::thread
[12:37:26] <dave0> even though a pthread mutex is more typing
[12:38:06] <Learath2> When in doubt a mutex is indeed the better way to go imo, less chance of invoking ub and launching nuclear missiles
[12:38:08] <smallville7123> meator: 
[12:39:40] <dave0> meator: don't try to cut corners.. don't try to optimize it... keep it really boring
[12:40:09] <dave0> whenever your variable is mentioned, grab a lock
[12:40:33] <smallville7123> "18:54:39 meator: The main thread is reading the value and the other thread is setting it. This assures that the main thread will not read it when the other thread is in the middle of writing to it."   you will need BOTH an atomic and a mutex
[12:41:52] <Learath2> smallville7123: actually a seq_cst atomic should be just enough in this case
[12:42:38] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[12:42:39] <smallville7123> having an atomic by itself is often not enough sometimes as it can be difficult to use correctly and often you will need to use a mutex to prevent the another code from accessing the atomic while/before the other has written to it
[12:43:07] <Learath2> Well very technically just a sig_atomic_t is also enough here since he doesn't say that he needs any memory order guarantees, he said he just needs no intermediate values :P
[12:43:08] <smallville7123> tho this could also be done with a busy loop
[12:43:48] <smallville7123> eg while (load_atomic(a) != expected_value) {}; // loop until atomic has changed
[12:44:08] *** Joins: larry87 (~quassel@c-73-6-106-85.hsd1.tx.comcast.net)
[12:44:12] <dave0> if you want that use a condition variable
[12:44:20] <smallville7123> tho this will burn cpu if done for a long time
[12:47:16] <dave0> you don't want a race condition
[12:47:21] <dave0> really unhappy
[12:47:33] <smallville7123> a conditional could be used to avoid cpu-burn tho the other thread must notify the conditional
[12:48:26] <meator> Well I should maybe post here what the program does (*cough* XY problem *cough*):
[12:48:33] <smallville7123> meator: if you want, you can check out my ordered mutex implementation that i use to ensure ordered multi-thread read/write to variables, it is in C++ but perhaps you can port it to C :)      https://github.com/mgood7123/cpp17-instruction-pipeline/blob/master/src/pipeline/pipeline_v3_h.cpp#L297
[12:48:34] <Learath2> condvars are the cutest
[12:48:37] <dave0> yes it's more code
[12:49:07] <meator> It is a modified version of dwmstatus, a program that makes statusbar contents. It sends the statusbar text periodically every second to dwm.
[12:49:07] <meator> The part I'm working on shows, if a flag is on or off.  The flag is on if a specific file exists, it's off when the file doesn't exist. I could repeatedly call access(path, F_OK), but I don't want to do that.
[12:49:07] <meator> I'm using inotify to detect changes in the folder where the file is. I could check it synchronously, for example with making use of SIGIO, but that could slow down the main program if there are a lot of events. So I want to do it asynchronously. 
[12:49:10] <meator> I know that this might not be a real problem, but I want to make the program perfect, to familiarize myself with those concepts.
[12:49:13] <smallville7123> eg T1.read(0); t2.write(1); // T2 will NOT write until T1 has read
[12:49:25] <smallville7123> wait no
[12:50:34] <smallville7123> eg T1 : var.read(0); var.read(2); T2: var.write(1); // T2 will NOT write until T1 has read, // T1 will not read second time until T2 has written        order: T1 read T2 write T1 read
[12:51:09] <Learath2> So you have a thread blocking on read(2) on the inotify fd and if the file is added or removed you modify the flag?
[12:51:36] <smallville7123> Learath2: me or meator?
[12:51:37] <meator> Learath2: Yes.
[12:52:16] <meator> I have one writer and N readers. The only bad situation that could possibly happen that the reader would receive corrupted data, because the variable wasn't written atomically, but this can't happen with sig_atomic_t.
[12:52:22] *** Quits: winning-luser (~wl@2601:8c1:80:70d0::414b) (Quit: Leaving)
[12:53:07] *** Joins: MarcoFe (~marcofe@net-5-88-237-210.cust.vodafonedsl.it)
[12:54:26] <dave0> normally i'd say get it working before you try to make it multi-threaded BUT tacking on threads after might not be easy
[12:55:24] *** Joins: alien_lappy (~alien@user/alien)
[12:55:57] *** Quits: Darkcoal (~user@2001:16a2:7709:f400:846d:c7d1:8468:2ddd) (Ping timeout: 240 seconds)
[12:55:59] *** Joins: robyndrake (~robyndrak@user/robyndrake)
[12:56:37] *** Quits: john99 (~john99@138.246.103.34.bc.googleusercontent.com) (Quit: Client closed)
[12:57:40] *** Quits: MarcoFe (~marcofe@net-5-88-237-210.cust.vodafonedsl.it) (Remote host closed the connection)
[12:57:59] *** Joins: MarcoFe (~marcofe@net-5-88-237-210.cust.vodafonedsl.it)
[12:58:05] *** Joins: Darkcoal (~user@139.64.29.83)
[12:58:34] <alien_lappy> hey, (64bit system) i have 'v += a << (c << 3);' in my code with a being unsigned char; and v and c being size_t; the 4th time it runs a = 0xF1 and fprintf with %zX on v, gives FFFFFFFFF166E4C1 ; i would expect it to be 00000000F166E4C1 ; does anyone know why?
[12:59:47] <Learath2> This is one of those cases where a single seq_cst atomic is just fine, maybe even a relaxed atomic, though I don't remember if C has the same finite time propagation guarantee as C++ so not sure
[13:00:26] *** Joins: mahmutov (~mahmutov@37.155.25.5)
[13:00:41] *** Joins: karakedi (~eAC53C340@user/karakedi)
[13:01:00] <Learath2> meator: anyway, if you are doing this as a learning exercise I suggest not using sig_atomic_t as it is a tool for dealing with asynchronous signals, not really intended to even be thread-safe
[13:01:53] <caze> alien_lappy: testcase
[13:02:14] <Learath2> alien_lappy: looks like sign extension but a testcase would help make it clearer indeed
[13:02:43] <alien_lappy> https://bpa.st/QOHQ
[13:02:53] <meator> So I should use volatile atomic_bool for the flag and manipulate it with atomic_store(), atomic_load() and atomic_init()?
[13:03:17] *** Quits: PortableDave (~portabled@220.253.22.64) (Ping timeout: 240 seconds)
[13:03:18] <Learath2> meator: That'd be my suggestion
[13:04:05] <alien_lappy> Learath2: that's what i thought too, but everything in unsigned, so i donno?
[13:04:37] <trenka> alien_lappy: 3 << 3 > 8, so a << (c << 3) is UB
[13:04:56] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[13:05:34] <alien_lappy> UB == unsigned byte?
[13:05:44] <Learath2> undefined behaviour
[13:05:44] <trenka> alien_lappy: undefined behaviour
[13:05:45] <smallvil_> abraham: unsigned
[13:05:49] <alien_lappy> oh
[13:05:51] <smallvil_> UB is signed byte mixed with signed byte
[13:06:11] <smallvil_> UB is unsigned byte interpeted as signed byte *
[13:06:34] <Learath2> ehe?
[13:06:45] <alien_lappy> but, c = size_t wouldn't a also be upcasted?
[13:06:48] <smallvil_> note (unsigned char) will not do since u will get same as char
[13:06:50] <meator> Well I'll use a thread and stdatomic.h functions then. Thanks!
[13:07:05] <smallvil_> uint8_t however will
[13:07:17] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[13:07:30] *** Joins: kurahaupo_ (~kurahaupo@pa49-182-131-41.pa.qld.optusnet.com.au)
[13:07:31] <dave0> alien_lappy: you've been hit by integer promotion rules.. try   (unsigned long long)a << (c << 3)
[13:07:41] <alien_lappy> so, if i just do: size_t b = a; and then use b, i'd have no issues?
[13:07:42] *** Quits: kurahaupo (~kurahaupo@45.248.143.48) (Read error: Connection reset by peer)
[13:07:52] <Learath2> 3 different people 3 different answers, intriguing :D
[13:07:54] <alien_lappy> or casting a also works
[13:07:55] <alien_lappy> nice
[13:08:38] <trenka> casting will work, it's not  UB after that
[13:08:45] <smallvil_> ,cc char c = (char)0x80; printf("%x, %x", (unsigned int)(c), (unsigned int) (uint8_t) c);
[13:08:47] <candide> smallvil_: ffffff80, 80
[13:08:59] <smallvil_> alien_lappy: 
[13:09:24] <alien_lappy> casting as (size_t)a works like a charm :-)
[13:09:27] <alien_lappy> thx!
[13:09:50] <smallvil_> ,cc char c = (char)0x80; printf("signed char: %x, unsigned char: %x, uint8_t: %x", c, (unsigned char) c, (uint8_t) c);
[13:09:52] <candide> smallvil_: signed char: ffffff80, unsigned char: 80, uint8_t: 80
[13:10:07] <trenka> smallvil_: the case is different
[13:10:13] <smallvil_> heh unsigned char does work :)
[13:10:28] <alien_lappy> ic
[13:10:43] <alien_lappy> i'll do casting to size_t so all 3 vars are size_t, then i don't have issues
[13:10:49] <alien_lappy> it's clearer that way
[13:11:46] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[13:11:50] <Learath2> I actually don't quite see why this didn't work as is, wouldn't the unsigned char get promoted to unsigned int and thus the << 8 be not UB?
[13:12:02] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[13:12:14] <alien_lappy> well, i never that that char << size_t would be UB with like a regular int promotion, that's some weird behavior; i'd expect type1 operator type2 where type2 > type1 to have autocasting to type2
[13:12:40] <alien_lappy> *i never thought that
[13:13:21] <dave0> we need fizzie to quote the standard, but i believe it promotes to a signed int, because unsigned char 0-255 fits in an int
[13:13:26] <alien_lappy> i guess it's like when you have undeclared functions where it has all types be "int"
[13:13:51] <caze> dave0: Look it up yourself.
[13:13:54] <Learath2> Ahh, I see the problem yes, it does indeed promote to int
[13:14:12] <Learath2> ,c99 6.3.1.1p2
[13:14:14] <candide> http://www.iso-9899.info/n1256.html#6.3.1.1p2 [Boolean, characters, and integers] The following may be used in an expression wherever an i​nt or unsigned i​nt may be used: -- An object or expression with an integer type whose integer conversion rank is less than or equal to the rank of i​nt and unsigned i​nt. -- A bit-field of type _Bool, i​nt, signed i​nt, or unsigned i​nt. If an i​nt can... <truncated; https://0x0.st/-CSv.txt>
[13:14:29] <dave0> caze: didn't need to!
[13:15:30] <Learath2> Though I'd like to say it's indeed sign extension being an issue not UB!
[13:15:53] <Learath2> << 8 is completely fine there since the operator considers the width of the promoted left operand not the original left operand
[13:16:22] <trenka> why it should be promoted _before_ +=?
[13:17:19] <Learath2> Actually nevermind I still have no idea what is going on there :D The conversion from unsigned char to int should preserve sign
[13:18:47] *** Joins: lleo (~lleo@31-161-159-13.mobile.kpn.net)
[13:19:03] <lleo> 0
[13:19:04] <trenka> ,cc size_t v = 0; unsigned char c = 0xff; v += c; printf("%zd", v)
[13:19:06] <candide> trenka: 255
[13:19:14] <trenka> works fine with _just_ promotion
[13:19:25] <smallvil_> alien_lappy: always cast
[13:19:37] <caze> %zu
[13:20:17] <trenka> the root cause is that because of UB compiler used signed int for the shift
[13:21:49] <dave0> the root cause is it promoted to a signed type and the shift overflowed the integer
[13:22:19] <dave0> cast to unsigned and also check the shift amount
[13:23:00] <trenka> it should not be promoted for shift
[13:23:09] <trenka> only for +=, the shift result
[13:23:20] <caze> It does promote for shift.
[13:23:30] <Learath2> trenka: it is promoted, ,{c99 6.5.7p3}
[13:23:30] <candide> trenka: http://www.iso-9899.info/n1256.html#6.5.7p3 [Bitwise shift operators] The integer promotions are performed on each of the operands. The type of the result is that of the promoted left operand. If the value of the right operand is negative or is greater than or equal to the width of the promoted left operand, the behavior is undefined.
[13:24:21] *** Joins: Viewday116 (~Viewday@user/viewday)
[13:25:06] *** Quits: rkta (~rkta@2001:4ba0:cafe:eaf::1) (Quit: rkta)
[13:25:57] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[13:25:57] *** Viewday116 is now known as Viewday11
[13:26:06] *** Joins: rkta_ (~rkta@2001:4ba0:cafe:eaf::1)
[13:26:20] <trenka> hmm
[13:26:25] <Learath2> Ah, I think the shift resulted in shifting into the sign bit of the now signed (due to promotion) lhs,  which is ub
[13:26:52] *** Joins: singularity00 (~singulari@85.187.64.126.client.entry.bg)
[13:27:41] *** rkta_ is now known as rkta
[13:28:06] <Learath2> An interesting cascade of events :P
[13:29:34] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[13:29:34] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[13:29:34] *** Joins: wroathe (~wroathe@user/wroathe)
[13:29:44] *** Parts: Bou (sid274843@user/bou) ()
[13:30:57] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:9180:b80f:58c7:8de8)
[13:31:57] *** Quits: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy) (Ping timeout: 240 seconds)
[13:33:54] <caze> https://ideone.com/6HnCHq
[13:34:38] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[13:35:59] *** Quits: rgrinberg (~textual@2806:101e:1:27a5:b170:6e98:8314:62d3) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:36:51] *** Joins: rgrinberg (~textual@2806:101e:1:27a5:b170:6e98:8314:62d3)
[13:38:58] <caze> https://ideone.com/UXZpeY
[13:39:47] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[13:40:21] <Learath2> Hm, so technically it's not the UB that's breaking things, it actually behaves quite sanely
[13:41:02] <Learath2> The conversion of a negative signed int to size_t is what's creating the odd behaviour
[13:41:16] *** Joins: Rounin (~david@84.212.130.215)
[13:41:57] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[13:42:17] <caze> What negatvie signed int?
[13:43:30] *** Quits: rgrinberg (~textual@2806:101e:1:27a5:b170:6e98:8314:62d3) (Ping timeout: 260 seconds)
[13:44:12] <Learath2> a[c] << (c << 3); in the last iteration shifts into the sign bit, resulting in the bit representation E4000000, which has it's sign bit set, no?
[13:45:08] <caze> https://ideone.com/UXZpeY
[13:45:29] <caze> -469762048
[13:45:48] <dave0> Learath2: it is actually undefined
[13:46:14] <caze> Well here's the fix https://ideone.com/BThWBP
[13:46:16] <dave0> Learath2: the shift resulted in an overflow which is UB
[13:46:46] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[13:47:18] <caze> dave0: It'd be nice if you could find the paragraph in the standard that back that up :P
[13:47:21] <Learath2> I mean it is UB, but the behaviour is the result of the shift being negative, no?
[13:47:31] <dave0> Learath2: 0x80 << 24 cannot be represented in a signed int of 32 bits
[13:47:46] <Learath2> caze: ,{c99 6.5.7p4}
[13:47:47] <candide> caze: http://www.iso-9899.info/n1256.html#6.5.7p4 [Bitwise shift operators] The result of E1 << E2 is E1 left-shifted E2 bit positions; vacated bits are filled with zeros. If E1 has an unsigned type, the value of the result is E1 × 2E2 , reduced modulo one more than the maximum value representable in the result type. If E1 has a signed type and nonnegative value, and E1 × 2E2 is representable in the res... <truncated; https://0x0.st/-CS0.txt>
[13:48:03] <caze> Learath2: I was asking dave0.
[13:48:15] <dave0> caze is on a mission to make me learn the standard! lol
[13:48:18] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[13:48:45] <Learath2> Hm, thought it wouldn't matter who answers, didn't account for you trying to get dave0 to stop being lazy :P
[13:49:57] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[13:51:11] <dave0> but i know a guy who knows the standard better than i ever could
[13:51:23] <dave0> (fizzie ;-)
[13:51:50] <dave0> i wouldn't be surprised if he had a photographic memory!
[13:51:58] <caze> Actually, this is probably easier for alien_lappy https://ideone.com/InsGPF
[13:52:09] <caze> alien_lappy: Prefer creating a new variable over casting.
[13:52:10] <Learath2> Anyway, that was a bit of a fail on my part, should have been fairly easy to pinpoint what was going wrong but t-enka led me down the wrong path :P
[13:53:14] *** Quits: kdc (~kdc@196.211.197.159) (Remote host closed the connection)
[13:54:47] *** Joins: Nahra (~user@static.161.95.99.88.clients.your-server.de)
[13:56:15] <caze> Just noticed I entered his constants wrong.
[13:56:56] <Learath2> doesn't matter, you get the same behaviour for anything larger than 0x80 for the last byte
[13:57:04] <Learath2> >= even :P
[13:58:01] <dave0> i write code with that bug. bad language? no, bad programmer.
[13:58:50] *** Joins: bebyx (~Thunderbi@user/bebyx)
[13:58:57] <jason1234> hello 
[13:59:05] <jason1234> how to fix this error: /usr/include/c++/6/cwchar:141:11: error: ‘::btowc’ has not be  ...
[13:59:24] <Learath2> You ask in #C++
[14:00:20] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[14:00:20] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[14:00:20] *** Joins: wroathe (~wroathe@user/wroathe)
[14:02:22] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:20e5:aa8:d248:c43e)
[14:02:22] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:20e5:aa8:d248:c43e) (Changing host)
[14:02:22] *** Joins: skapata (~Skapata@user/skapata)
[14:02:52] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[14:03:38] <jason1234> ok
[14:04:30] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[14:04:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[14:05:37] *** Quits: mahmutov (~mahmutov@37.155.25.5) (Ping timeout: 240 seconds)
[14:05:46] *** Joins: arinov (~arinov@213.194.126.155)
[14:08:45] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[14:09:22] *** Joins: rgrinberg (~textual@2806:101e:1:27a5:b170:6e98:8314:62d3)
[14:09:33] *** Joins: plastico (~plastico@neomutt/plastico)
[14:15:27] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[14:15:49] *** Quits: mrig (~AdiIRC@user/mrig) (Remote host closed the connection)
[14:16:03] *** Joins: mrig (~AdiIRC@user/mrig)
[14:17:55] *** Quits: rgrinberg (~textual@2806:101e:1:27a5:b170:6e98:8314:62d3) (Ping timeout: 268 seconds)
[14:20:11] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[14:20:26] *** Joins: Kev_ (~Kev@2a01cb0400149f00541631b2d06f6e60.ipv6.abo.wanadoo.fr)
[14:20:32] *** Joins: earnestly (~earnest@user/earnestly)
[14:21:37] *** Quits: kurahaupo_ (~kurahaupo@pa49-182-131-41.pa.qld.optusnet.com.au) (Ping timeout: 240 seconds)
[14:27:10] *** Joins: Libero (~Libero@77.49.184.64.dsl.dyn.forthnet.gr)
[14:27:11] *** Joins: luckyxxl (~luckyxxl@185.209.196.150)
[14:29:40] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:30:13] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:30:58] *** Joins: csrf (~csrf@user/csrf)
[14:31:08] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[14:31:08] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[14:31:08] *** Joins: wroathe (~wroathe@user/wroathe)
[14:31:57] <smallville7123> to keep track of something do i only need the history and current position?
[14:35:21] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Read error: Connection reset by peer)
[14:36:25] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[14:41:16] *** Quits: pflanze (~pflanze@5-168-208-80-pool.fiber.fcom.ch) (Remote host closed the connection)
[14:41:38] *** Joins: pflanze (~pflanze@5-168-208-80-pool.fiber.fcom.ch)
[14:43:11] <trenka> Learath2: dave0: caze: just to be sure -- so left operand of shift is promoted due to width of right operand? Does not sound sane, it's not +/-/comparasion
[14:44:21] <trenka> char itself is integer type
[14:44:37] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[14:46:28] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[14:46:58] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[14:47:30] *** Quits: Dotz0cat (~Dotz0cat@h158.227.19.98.static.ip.windstream.net) (Ping timeout: 268 seconds)
[14:47:52] *** Joins: Dotz0cat (~Dotz0cat@h97.197.117.75.dynamic.ip.windstream.net)
[14:48:02] *** Joins: Burgundy (~yomon@79.115.213.171)
[14:48:24] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[14:50:40] <trenka> why it's promoted to 'signed int' here
[14:50:56] <dave0> trenka: the left operand of << is promoted ... in the person's problem, the left operand was an unsigned char, which can hold the values 0-255 .. since that range fits inside an int, it was promoted to int, which is signed
[14:51:11] <trenka> dave0: why to int?
[14:51:38] <dave0> that's just the rules
[14:52:20] <dave0> i don't know the rules, i've just gleaned it from being here so long
[14:52:33] *** Quits: tobiasu (~tobiasu@user/tobiasu) (Quit: apt dist-upgrade)
[14:52:49] <trenka> which exaclty one? I'm not arguing, just trying to fine
[14:52:53] <trenka> to find
[14:53:00] <dave0> hang on it's in the scrollback
[14:54:07] *** Joins: tobiasu (~tobiasu@user/tobiasu)
[14:54:24] <trenka> https://www.iso-9899.info/n1256.html#6.5.7p4 ? no
[14:54:29] <dave0> ,c99 6.3.1.1p2
[14:54:31] <candide> http://www.iso-9899.info/n1256.html#6.3.1.1p2 [Boolean, characters, and integers] The following may be used in an expression wherever an i​nt or unsigned i​nt may be used: -- An object or expression with an integer type whose integer conversion rank is less than or equal to the rank of i​nt and unsigned i​nt. -- A bit-field of type _Bool, i​nt, signed i​nt, or unsigned i​nt. If an i​nt can... <truncated; https://0x0.st/-CQc.txt>
[14:55:28] <dave0> something something rank something something dunno
[14:55:33] <Learath2> what are you looking for?
[14:56:26] <dave0> the promotion rule for an unsigned char
[14:57:17] *** Joins: g2anj (~v@58.228.230.4)
[14:57:46] <Learath2> if you mean integer promotions ,{c99 6.3.1.1p2}
[14:57:48] <candide> http://www.iso-9899.info/n1256.html#6.3.1.1p2 [Boolean, characters, and integers] The following may be used in an expression wherever an i​nt or unsigned i​nt may be used: -- An object or expression with an integer type whose integer conversion rank is less than or equal to the rank of i​nt and unsigned i​nt. -- A bit-field of type _Bool, i​nt, signed i​nt, or unsigned i​nt. If an i​nt can... <truncated; https://0x0.st/-CQB.txt>
[14:58:01] <Learath2> char has rank lower than int thus is gets promoted to int
[14:58:16] <Learath2> so does unsigned char
[14:58:19] <dave0> trenka: ^
[14:58:53] <Learath2> and p1 for the actual rules about the ranks
[14:58:58] *** Joins: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy)
[14:59:37] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 240 seconds)
[15:00:46] *** Joins: rkta__ (~rkta@2a00:f48:1003:1::8bee:ec40)
[15:01:04] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 268 seconds)
[15:02:28] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[15:07:15] <trenka> well, I understand why if unsigner char is extented (promoted) it's done to int. But 'The purpose is to determine a common real type for the operands and result' (6.3.1.8). Why at all here unsigned char must be extented? What common type? With what?
[15:08:16] *** Joins: rgrinberg (~textual@2806:101e:1:27a5:b170:6e98:8314:62d3)
[15:09:57] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[15:13:37] *** Quits: rgrinberg (~textual@2806:101e:1:27a5:b170:6e98:8314:62d3) (Ping timeout: 240 seconds)
[15:18:55] *** Joins: frost (~frost@user/frost)
[15:19:50] *** Joins: lightningwright (~lightning@user/lightningwright)
[15:20:24] *** Quits: Darkcoal (~user@139.64.29.83) (Quit: Darkcoal)
[15:23:22] <trenka> ,cc  unsigned int c = 0xFFFFFFFF; long long v = c << 35ULL; printf("%llx", v)
[15:23:25] <candide> trenka: [warning: left shift count >= width of type [-Wshift-count-overflow]]  runtime error: shift exponent 35 is too large for 32-bit type 'unsigned i​nt' fffffff8
[15:23:53] <trenka> like, unsigned char is promoted to int, but unsdigned int is not promoted to long long
[15:24:26] *** Joins: Viewday111 (~Viewday@user/viewday)
[15:24:38] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[15:26:30] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[15:26:30] *** Viewday111 is now known as Viewday11
[15:29:07] *** Joins: random-nick (~random-ni@87.116.181.93)
[15:30:57] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Ping timeout: 240 seconds)
[15:31:31] *** Joins: kspalaiologos (~kspalaiol@user/kspalaiologos)
[15:32:53] *** Quits: Burgundy (~yomon@79.115.213.171) (Remote host closed the connection)
[15:33:34] *** Joins: seninha (~seninha@user/seninha)
[15:34:50] *** Quits: lleo (~lleo@31-161-159-13.mobile.kpn.net) (Remote host closed the connection)
[15:35:25] *** Quits: supajerm (~supajerm@gateway/vpn/pia/supajerm) (Remote host closed the connection)
[15:35:32] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[15:35:44] *** Joins: supajerm (~supajerm@gateway/vpn/pia/supajerm)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:54] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:42:33] *** Joins: badsektor (~badsektor@user/badsektor)
[15:45:13] *** Joins: pulse (~pulse@user/pulse)
[15:45:56] *** Joins: kanton (kanton@gateway/vpn/airvpn/kanton)
[15:47:48] *** Joins: winningluser (~wl@2601:8c1:80:70d0::e17b)
[15:47:57] *** Quits: alch (~alch@151.82.84.177) (Ping timeout: 240 seconds)
[15:48:05] *** Joins: mahmutov (~mahmutov@37.155.25.5)
[15:50:09] *** Joins: alch (~alch@to-18-87-5.service.infuturo.it)
[15:52:59] *** Quits: pflanze (~pflanze@5-168-208-80-pool.fiber.fcom.ch) (Quit: Leaving)
[15:56:13] *** Joins: nyah (~nyah@94.6.71.219)
[15:59:45] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Quit: This computer has gone to sleep)
[15:59:47] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[16:00:18] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[16:00:41] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[16:00:41] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[16:00:41] *** Joins: wroathe (~wroathe@user/wroathe)
[16:02:02] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[16:02:12] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[16:03:22] *** Joins: Darkcoal (~user@139.64.29.83)
[16:04:05] *** Joins: arinov (~arinov@31.142.65.165)
[16:05:22] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[16:06:10] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[16:06:31] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[16:09:57] *** Joins: sysctl (~sysctl@88.215.77.255)
[16:10:49] *** Quits: rkta__ (~rkta@2a00:f48:1003:1::8bee:ec40) (Quit: rkta__)
[16:11:18] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[16:11:57] *** Joins: rkta__ (~kt@62.113.246.111)
[16:12:17] *** Quits: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy) (Ping timeout: 240 seconds)
[16:12:17] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Quit: This computer has gone to sleep)
[16:12:48] *** Quits: rkta__ (~kt@62.113.246.111) (Client Quit)
[16:16:36] *** Joins: rkta__ (~kt@62.113.246.111)
[16:16:55] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[16:17:35] *** Quits: rkta__ (~kt@62.113.246.111) (Client Quit)
[16:17:59] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[16:18:35] *** Joins: Klinda (~superleag@user/klinda)
[16:18:37] *** Quits: Jck_true (~jcktrue@user/jck-true/x-0200799) (Quit: The Lounge - https://thelounge.chat)
[16:19:08] *** Quits: heiner_ (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2) (Remote host closed the connection)
[16:19:09] *** Quits: boreas (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2) (Read error: Connection reset by peer)
[16:22:17] *** Joins: evlc (~evlc@l37-193-63-15.novotelecom.ru)
[16:23:11] *** rkta is now known as rkta_
[16:23:20] *** Joins: boreas (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2)
[16:23:25] *** Quits: Klinda (~superleag@user/klinda) (Client Quit)
[16:24:01] *** rkta_ is now known as rkta
[16:28:11] *** Joins: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy)
[16:28:37] *** Quits: lightningwright (~lightning@user/lightningwright) (Ping timeout: 240 seconds)
[16:37:20] *** Quits: arinov (~arinov@31.142.65.165) (Ping timeout: 256 seconds)
[16:41:32] *** Quits: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy) (Ping timeout: 240 seconds)
[16:41:33] *** Quits: yo (~0xfe0@49.36.188.149) (Read error: Connection reset by peer)
[16:42:50] *** Joins: yo (~0xfe0@49.36.188.149)
[16:43:24] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[16:44:33] *** Quits: yo (~0xfe0@49.36.188.149) (Read error: Connection reset by peer)
[16:44:57] *** Joins: yo (~0xfe0@49.36.188.149)
[16:46:54] *** Quits: u0_a3911 (~u0_a391@cpe-76-190-178-139.neo.res.rr.com) (Ping timeout: 260 seconds)
[16:49:45] *** Joins: kdc (~kdc@196.211.197.159)
[16:50:31] *** Joins: lightningwright (~lightning@user/lightningwright)
[16:51:43] *** Joins: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy)
[16:53:46] *** Quits: mahmutov (~mahmutov@37.155.25.5) (Ping timeout: 256 seconds)
[16:56:36] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[16:59:06] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[17:02:04] *** Joins: arinov (~arinov@31.142.65.165)
[17:03:13] *** Joins: Snaffu (~Snaffu@c-174-60-107-126.hsd1.pa.comcast.net)
[17:03:16] *** Quits: frost (~frost@user/frost) (Ping timeout: 245 seconds)
[17:08:17] *** Quits: gothicserpent (~gothicser@89.45.90.230) (Ping timeout: 240 seconds)
[17:10:24] *** Joins: gothicserpent (~gothicser@89.45.90.225)
[17:10:57] *** Quits: remedan_ (~remedan@balak.me) (Quit: Bye!)
[17:12:30] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[17:13:12] *** Joins: u0_a3911 (~u0_a391@2600:380:8a39:b859:1454:866:e3a9:b3bf)
[17:16:45] <tsujp> im trying to build a very simple win32 application in jetbrains CLion, im expecting to see some debug output but I don't see anything https://bpa.st/PWWA
[17:17:16] <tsujp> im building it with clang-cl cmake configured as follows: https://bpa.st/WLXQ
[17:17:37] <tsujp> it complains about `main` missing, so if I add `WIN32` to the cmake `add_executable` it builds, but no output
[17:17:41] <tsujp> .. why?
[17:18:04] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[17:21:26] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[17:21:32] *** Quits: yo (~0xfe0@49.36.188.149) (Ping timeout: 256 seconds)
[17:24:22] *** Joins: remedan (~remedan@octo.cafe)
[17:24:35] *** Joins: Viewday115 (~Viewday@user/viewday)
[17:24:37] *** amosbird- is now known as amosbird
[17:24:58] *** Quits: larry87 (~quassel@c-73-6-106-85.hsd1.tx.comcast.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[17:25:49] *** Satin is now known as setin
[17:26:38] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[17:26:38] *** Viewday115 is now known as Viewday11
[17:28:21] *** Joins: Jck_true (~jcktrue@user/jck-true/x-0200799)
[17:28:55] <tsujp> oh i should've been viewing it from Debug -> Debugger -> LLDB
[17:29:08] <tsujp> (im using CLion on windows because holy smokes is building C programs hard on windows vs linux)
[17:30:00] *** Quits: MarcoFe (~marcofe@net-5-88-237-210.cust.vodafonedsl.it) (Quit: Konversation terminated!)
[17:32:18] *** Quits: Jck_true (~jcktrue@user/jck-true/x-0200799) (Read error: Connection reset by peer)
[17:32:35] *** Joins: Jck_true (~jcktrue@user/jck-true/x-0200799)
[17:34:00] <tsujp> nope i lied still nothing...
[17:35:01] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[17:35:55] <trenka> tsujp: ask windows channel, it's not about C, it's about platform. But a small question: where did you check? Was it where stdout (for printf) directed?
[17:36:40] <tsujp> okay i found it yet again, had to run it in debug mode for LLDB to capture the output from OutputDebugStringA
[17:36:45] <tsujp> trenka
[17:36:57] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[17:38:21] *** Joins: karakedi (~eAC53C340@user/karakedi)
[17:41:08] *** Quits: arinov (~arinov@31.142.65.165) (Read error: Connection reset by peer)
[17:41:21] *** Quits: singularity00 (~singulari@85.187.64.126.client.entry.bg) (Quit: The true sign of intelligence is not knowledge but imagination.)
[17:41:25] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[17:43:08] *** Quits: Torr (~Torr@user/torr) (Read error: Connection reset by peer)
[17:44:42] *** Joins: Torr (~Torr@user/torr)
[17:45:38] *** Joins: pert (~pert@fsf/member/pert)
[17:48:36] <adinf> Why does the C standard support strftime() but not strptime()?
[17:48:37] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 240 seconds)
[17:51:52] *** Joins: arinov (~arinov@31.142.70.80)
[17:52:45] <Wulf> adinf: perhaps the standards committee couldn't agree on some details, dunno.
[17:54:32] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[17:56:33] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[17:58:37] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[17:58:41] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[17:59:18] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[18:00:24] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[18:02:09] *** Joins: Klinda (~superleag@user/klinda)
[18:05:26] *** Quits: Darkcoal (~user@139.64.29.83) (Quit: Darkcoal)
[18:06:37] *** setin is now known as Satin
[18:06:50] *** Joins: Darkcoal (~user@139.64.29.83)
[18:07:04] *** Quits: Darkcoal (~user@139.64.29.83) (Client Quit)
[18:09:17] <nomagno> You know how many part of standard libc aren't really implementation-specific? As in, you can provide most non-IO functions as code that compiles to any compliant platform. Is there a project that specifically provides these parts?
[18:09:24] <adinf> Wulf: Ah, so nothing grand -- thank you.
[18:10:00] *** Joins: Darkcoal (~user@2001:16a2:7709:f400:846d:c7d1:8468:2ddd)
[18:12:34] <pert> nomagno: the closest thing I can think of off the top of my head is Newlib, because it's an ISO C standard library designed to be capable of running on bare-metal hardware as well as minimal RTOSes
[18:14:02] *** Joins: Darkcoal_ (~user@139.64.29.83)
[18:14:19] *** Quits: Darkcoal_ (~user@139.64.29.83) (Client Quit)
[18:14:23] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[18:14:40] *** Joins: Darkcoal_ (~user@139.64.29.83)
[18:14:48] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 256 seconds)
[18:14:50] *** Quits: Darkcoal (~user@2001:16a2:7709:f400:846d:c7d1:8468:2ddd) (Client Quit)
[18:18:46] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[18:24:07] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[18:27:56] *** Quits: dacav (~dacav@h94-245-9-196.cust.a3fiber.se) (Quit: leaving)
[18:28:06] *** Joins: dacav (~dacav@h94-245-9-196.cust.a3fiber.se)
[18:31:46] *** Joins: gdd (~gdd@129.199.146.230)
[18:32:17] *** Quits: robyndrake (~robyndrak@user/robyndrake) (Quit: WeeChat 3.3)
[18:36:40] *** Joins: robyndrake (~robyndrak@154.16.118.240)
[18:36:44] *** Quits: robyndrake (~robyndrak@154.16.118.240) (Changing host)
[18:36:44] *** Joins: robyndrake (~robyndrak@user/robyndrake)
[18:38:37] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[18:38:40] *** Quits: Darkcoal_ (~user@139.64.29.83) (Quit: Darkcoal_)
[18:38:59] *** Joins: Darkcoal (~user@139.64.29.83)
[18:40:34] *** Quits: luckyxxl (~luckyxxl@185.209.196.150) (Quit: bye)
[18:44:59] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[18:45:40] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[18:47:28] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:47:28] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[18:47:28] *** Joins: wroathe (~wroathe@user/wroathe)
[18:49:37] *** Quits: evlc (~evlc@l37-193-63-15.novotelecom.ru) (Ping timeout: 240 seconds)
[18:50:33] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[18:51:02] * Feuermagier pets candide 
[18:51:13] * candide blushes at F​euermagier
[18:51:26] * Feuermagier is comfortable
[18:52:16] *** Quits: clamiax (~clamiax@net-93-144-125-193.cust.dsl.teletu.it) (Remote host closed the connection)
[18:52:51] *** Joins: clamiax (~clamiax@net-93-144-125-193.cust.vodafonedsl.it)
[18:53:02] *** Joins: mrig (~mrig@user/mrig)
[18:58:54] *** Joins: plantman (~plantman@2601:405:4680:1b0::f)
[18:59:06] *** Joins: bud (~bud@user/bud)
[18:59:30] <bud> hello i am new to C and is trying to get a list of files in a directory.
[18:59:39] <bud> i am using scandir() and it works fine,
[18:59:50] <bud> but i would like to filter out the "." and ".."
[19:00:12] <bud> this works for filtering out "." https://0x0.st/-C1W.txt
[19:00:29] <bud> but i cant get it to work with more tests..
[19:00:52] <bud> return ( strcmp(entry->d_name, ".")  || strcmp(entry->d_name, ".."))   ; <- filters nothing
[19:01:11] <bud> i tried with different strings, and it doesn't seem to have anything to do with the "."
[19:01:20] <bud> (or "..")
[19:02:01] <bud> i also tried an if .. else if  with the tests with same results.
[19:04:48] <pragma-> bud: strmp returns 0 on match
[19:05:18] <pragma-> return !strcmp(..., ".") || !strcmp(..., "..");
[19:05:45] <bud> hmm
[19:05:56] *** Joins: magicalegg[m] (~magicaleg@2001:470:69fc:105::1:52e9)
[19:06:18] <bud> well that filtered the list inversed
[19:06:46] <bud> return (!strcmp(entry->d_name, ".") || !strcmp(entry->d_name, "..")) ? 0 : 1 ;
[19:06:54] <bud> ^ that gave me the result
[19:06:59] <bud> i wanted
[19:07:14] <pragma-> Excellent, I'll have my people send your people the billing.
[19:07:34] <bud> nice
[19:09:58] *** Joins: u0_a3912 (~u0_a391@2603-6010-a141-6fa3-88f4-4cc9-a7b6-7571.res6.spectrum.com)
[19:10:18] <Matt|home> mmap is posix right
[19:10:33] <Matt|home> in general, is there a reason to not want to use posix except for extreme portability cases?
[19:11:33] <tsujp> i guess no valid reason unless you use windows
[19:11:55] <pert> and even then, Cygwin can make almost all POSIX functionality available. yes, mmap is POSIX
[19:11:57] *** Quits: arinov (~arinov@31.142.70.80) (Ping timeout: 240 seconds)
[19:12:25] <Matt|home> ok. mmap requires a file descriptor, which i can get with open() , but fopen returns a file pointer. i was just wondering if there was a reason to use one over the other
[19:12:57] *** Quits: u0_a3911 (~u0_a391@2600:380:8a39:b859:1454:866:e3a9:b3bf) (Ping timeout: 240 seconds)
[19:13:36] <pert> file descriptors are used for lower-leval I/O. In general, you should use fopen(), FILE*, and friends. If you want to use mmap() to map the file directly into memory instead (it might make your program simpler), that's a valid reason to use open() to get a file descriptor
[19:13:53] <Matt|home> kk. yeah that's what i was thinking
[19:14:23] <Matt|home> ty
[19:15:17] *** Joins: mahmutov (~mahmutov@37.155.25.5)
[19:16:11] *** Quits: Ranhir (~Ranhir@157.97.53.139) (Ping timeout: 245 seconds)
[19:17:15] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[19:18:38] *** Joins: Ranhir (~Ranhir@157.97.53.139)
[19:19:01] <Matt|home> hm. this is kind of annoying. some functions return 1 or -1 on failure. is there some kind of accepted convention for error checking when the return codes are different, or am i way overthinking this
[19:19:39] *** Quits: leah2 (~leah@vuxu.org) (Remote host closed the connection)
[19:20:11] <Matt|home> im also reading the man page for open() and i don't know if my assumption is correct or not :\
[19:20:17] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Ping timeout: 240 seconds)
[19:20:26] <Matt|home> https://man7.org/linux/man-pages/man2/open.2.html
[19:21:10] <Matt|home> "On success, open(), openat(), and creat() return the new file descriptor (a nonnegative integer).  On error, -1 is returned and errno is set to indicate the error." <-- does that mean a -1 indicates the file does not exist, or could it be a more generic "we couldn't open the file due to permissions errors"..
[19:21:55] *** Joins: leah2 (~leah@vuxu.org)
[19:22:06] <ioxzev1z> Matt|home, wrt return codes, you need to check the return of each function (e.g. man pages) and handle accordingly. There is no "convention" where everything returns -1 on fail, etc
[19:22:10] <Matt|home> so i _assume_ this means a successful return here means the file exists and was opened successfully
[19:22:25] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[19:22:56] <Matt|home> ioxzev1z : ty ja i figured
[19:23:19] *** Joins: arinov (~arinov@212.154.56.200)
[19:23:28] *** Quits: dsrt^ (~dsrt@64.253.22.77) (Remote host closed the connection)
[19:23:32] *** Joins: evlc (~evlc@l37-193-63-15.novotelecom.ru)
[19:23:35] <gnoo> Matt|home: if(fd<0) perror("open");  will tell you what went wrong. otherwise, you can check for errno manually 
[19:23:45] *** Joins: Betal (~Betal@user/betal)
[19:25:41] *** Quits: Darkcoal (~user@139.64.29.83) (Quit: Darkcoal)
[19:26:18] *** Joins: Darkcoal (~user@2001:16a2:7709:f400:846d:c7d1:8468:2ddd)
[19:26:39] *** Joins: constxd (~brad@142.134.38.68)
[19:27:06] <pragma-> he seems to be more wondering about function return values. don't check errno unless the function returns an error in the first place.
[19:28:35] *** Joins: ferdna (~ferdna@user/ferdna)
[19:31:26] *** Joins: esselfe_ (~steph@user/esselfe)
[19:31:34] *** Quits: esselfe (~steph@user/esselfe) (Quit: done)
[19:32:29] <fizzie> Ngh, `x ? 0 : 1` is such a thing.
[19:32:38] <Matt|home> my very silly question is basically: if ( rval = somefunction() != -1 ) { do stuff} and if ( rval = anotherfunction() != 1) { do other stuff} is ok
[19:32:39] <fizzie> Instead of `return (!strcmp(name, ".") || !strcmp(name, "..")) ? 0 : 1;`, why not just `return strcmp(name, ".") != 0 && strcmp(name, "..") != 0`.
[19:32:42] <fizzie> Compare the comprehensibility of the English versions of that; "if name is '.' or name is '..', then false, else true" vs. just "name is not '.' and name is not '..' either".
[19:32:54] *** Joins: soapsudsxx (~soapsudsx@209.221.40.139)
[19:33:56] *** Quits: Darkcoal (~user@2001:16a2:7709:f400:846d:c7d1:8468:2ddd) (Ping timeout: 252 seconds)
[19:35:36] *** Joins: Darkcoal (~user@139.64.29.83)
[19:35:54] *** Joins: duuude (~user@user/duuude)
[19:36:16] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[19:37:54] *** Joins: sbrothy (~sbrothy@23.102.41.137)
[19:38:35] *** Quits: sbrothy (~sbrothy@23.102.41.137) (Client Quit)
[19:41:10] *** Joins: rgrinberg (~textual@2806:101e:1:27a5:b170:6e98:8314:62d3)
[19:42:02] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[19:42:12] *** Quits: lightningwright (~lightning@user/lightningwright) (Remote host closed the connection)
[19:42:57] *** Quits: rahl (~rahl@102.114.118.155) (Ping timeout: 240 seconds)
[19:43:20] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[19:44:32] *** Joins: lrgyrfvtdlvbt^ (~lrgyrfvtd@64.253.22.77)
[19:44:46] *** Quits: evlc (~evlc@l37-193-63-15.novotelecom.ru) (Quit: WeeChat 3.3)
[19:45:03] *** Quits: listen_ers (~listen_er@c-98-240-233-64.hsd1.mn.comcast.net) (Quit: Client closed)
[19:46:02] *** esselfe_ is now known as esselfe
[19:46:05] *** Joins: listen_ers (~listen_er@c-98-240-233-64.hsd1.mn.comcast.net)
[19:47:44] *** Quits: alch (~alch@to-18-87-5.service.infuturo.it) (Ping timeout: 256 seconds)
[19:49:33] *** Joins: alch (~alch@151.68.153.249)
[19:49:42] *** Quits: kspalaiologos (~kspalaiol@user/kspalaiologos) (Quit: Leaving)
[19:52:01] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[19:56:45] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54f844-160.dhcp.inet.fi)
[19:57:37] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 240 seconds)
[19:59:56] *** Quits: duuude (~user@user/duuude) (Ping timeout: 245 seconds)
[20:00:56] <pragma-> `strcmp(foo, ".") != 0` reads more like "if string compare foo and "." is not zero". writing `if (!strcmp(...))` to test for equality has always felt awkward to me. It looks like it should read "if strings do not match".
[20:01:34] *** Quits: Darkcoal (~user@139.64.29.83) (Quit: Darkcoal)
[20:01:58] <pragma-> In any case, that could be shortened to `return strcmp(name, ".") && strcmp(name, "..");` but it reads like it's testing if it matches those rather than testing if they do not match. Such an awkward function.
[20:02:34] <pragma-> should make a strequal function that doesn't do greater/less comparision.
[20:02:40] <pragma-> and returns a sensible boolean.
[20:03:04] <pragma-> ,calc 2021-1989
[20:03:04] <candide> 2021-1989 = 32
[20:03:10] * pragma- shakes his head.
[20:03:41] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[20:03:59] <pragma-> they would have named it streq in 1989.
[20:04:30] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[20:04:53] <pragma-> and I would have read it as "stat req" instead of "str eq"
[20:05:36] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[20:05:52] *** Quits: Thymo (~Thymo@NASSP/developer/Thymo) (Ping timeout: 256 seconds)
[20:06:21] *** Joins: shivesh (~shivesh@user/shivesh)
[20:06:38] *** Joins: strajder (~strajder@user/strajder)
[20:07:08] *** Joins: Thymo (~Thymo@NASSP/developer/Thymo)
[20:10:03] *** Joins: lleo (~lleo@31-161-159-13.mobile.kpn.net)
[20:13:16] *** Joins: sbrothy (~sbrothy@23.102.41.137)
[20:18:46] *** Joins: duuude (~user@user/duuude)
[20:19:39] *** Quits: badsektor (~badsektor@user/badsektor) (Quit: Leaving)
[20:22:58] *** Quits: bud (~bud@user/bud) (Ping timeout: 260 seconds)
[20:23:49] *** Joins: eqw (~eqw@31.134.178.99)
[20:27:09] *** Joins: moog (~moog@107.126.53.64)
[20:28:56] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Read error: Connection reset by peer)
[20:30:12] *** Joins: Guest88 (~Guest88@dyx0pyyf8tjxym97rhsxy-3.rev.dnainternet.fi)
[20:30:16] <Guest88> Hello can some licesne pro tell me what MIT license requires me to do? If I fork someones code and use it
[20:30:47] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[20:31:32] <gnoo> Guest88: if you decide to share the source code as well, then it must be mit and you'll have to credit the author, i think
[20:32:10] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-70b2-1b29-14df-adcf.res6.spectrum.com)
[20:33:37] *** Quits: constxd (~brad@142.134.38.68) (Ping timeout: 240 seconds)
[20:33:42] *** Quits: arinov (~arinov@212.154.56.200) (Ping timeout: 260 seconds)
[20:36:56] *** Joins: X-Scale` (~ARM@206.46.158.5.rev.vodafone.pt)
[20:37:29] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[20:37:33] *** Joins: magla (~gelignite@55d4bf95.access.ecotel.net)
[20:37:56] *** Quits: fe23 (~fe23@2409:8a34:468:83d0:405c:4b86:aa8b:2e65) (Quit: fe23)
[20:38:16] *** Joins: bud (~bud@user/bud)
[20:39:24] *** Quits: X-Scale (~ARM@31.22.167.85) (Ping timeout: 240 seconds)
[20:39:25] *** X-Scale` is now known as X-Scale
[20:42:24] *** Joins: lightningwright (~lightning@user/lightningwright)
[20:42:50] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[20:44:06] *** Quits: rgrinberg (~textual@2806:101e:1:27a5:b170:6e98:8314:62d3) (Ping timeout: 245 seconds)
[20:46:00] *** Quits: sbrothy (~sbrothy@23.102.41.137) (Quit: Lost terminal)
[20:46:57] *** Quits: duuude (~user@user/duuude) (Ping timeout: 240 seconds)
[20:51:46] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[20:52:02] *** Quits: Thymo (~Thymo@NASSP/developer/Thymo) (Read error: Connection reset by peer)
[20:52:57] *** Joins: Thymo (~Thymo@NASSP/developer/Thymo)
[20:55:16] <eqw> I have a source file with includes with includes with further includes. Is there some tool that prints a full list of includes?
[20:59:21] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[21:00:10] *** Joins: rahl (~rahl@102.114.58.55)
[21:00:20] <pragma-> Guest88: the MIT license is like 2 lines long.
[21:00:24] <pragma-> Just read it.
[21:01:22] <Guest88> pragma- I was confused because a block of code I forked I contributed to author, but author contacted me  and told me to remove his name, yet his product is under mit licence
[21:01:23] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[21:01:29] <pragma-> eqw: yes and yes. one such tool could be the -H option for gcc.
[21:01:42] <Guest88> so I am wondering if it can come later and bite me back
[21:01:58] <pragma-> you mean attributed
[21:02:11] <Guest88> yeah i wrote // this part written by guy, and his github found here
[21:02:43] <pragma-> i guess he doesn't like his code any more or he really doesn't like your code.
[21:02:56] <Guest88> yeah, but I am just wondering if I can get in trouble later
[21:03:02] <Guest88> if i remove his attribution
[21:03:26] <Guest88> its copy paste from his github for like 200 lines, like very obvious
[21:04:31] *** Joins: sloanr` (~user@70-59-70-189.mpls.qwest.net)
[21:06:05] <twkm> eqw: some compilers will produce a list.
[21:06:07] <pragma-> I guess you could argue that the portion you copied isn't a "substantial portion" of the software.
[21:06:55] <pragma-> In any case, if you're worried about it, just keep a copy/record of the email github comment where he insisted on his copyright being removed.
[21:07:04] <Guest88> yeah
[21:07:07] <Guest88> ill do that
[21:07:08] *** Joins: remavas (~Remavas@user/remavas)
[21:08:09] *** Quits: Guest88 (~Guest88@dyx0pyyf8tjxym97rhsxy-3.rev.dnainternet.fi) (Quit: Client closed)
[21:08:32] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[21:08:32] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[21:08:32] *** Joins: wroathe (~wroathe@user/wroathe)
[21:10:28] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 256 seconds)
[21:11:28] *** Quits: esselfe (~steph@user/esselfe) (Quit: rebooting)
[21:12:44] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[21:13:20] *** Joins: AmR (~AmREiSa@156.207.199.106)
[21:14:01] *** Joins: slidercrank (~slidercra@user/slidercrank)
[21:16:43] *** Joins: esselfe (~steph@user/esselfe)
[21:17:14] *** Quits: Snaffu (~Snaffu@c-174-60-107-126.hsd1.pa.comcast.net) (Quit: leaving)
[21:19:00] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[21:19:00] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[21:19:00] *** Joins: wroathe (~wroathe@user/wroathe)
[21:19:42] <k0tyk[m]> Ask him publicly for a 0BSD license to the code section in question. If he's the only author, that should prevent legal concerns
[21:23:35] *** Joins: superboot (~agentgasm@user/superboot)
[21:27:06] *** Joins: Satin (uid193953@user/Seten)
[21:30:10] *** Joins: Charadon (~Charadon@155.138.164.183)
[21:30:43] *** Quits: lleo (~lleo@31-161-159-13.mobile.kpn.net) (Remote host closed the connection)
[21:31:54] *** Joins: lleo (~leo@31-161-159-13.mobile.kpn.net)
[21:32:38] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[21:32:39] *** Quits: NEYi (~NEYi@109.251.216.38) (Quit: Leaving)
[21:32:53] * APic grins magically.
[21:34:00] *** Joins: dutch (~DutchIngr@user/dutch)
[21:34:12] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:9180:b80f:58c7:8de8) (Quit: Quit)
[21:36:14] *** Joins: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu)
[21:37:29] *** Quits: superboot (~agentgasm@user/superboot) (Quit: Lost terminal)
[21:37:57] *** Quits: zlg (~zlg@user/zlg) (Ping timeout: 240 seconds)
[21:37:59] *** Quits: sloanr` (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[21:38:12] *** Joins: sloanr` (~user@70-59-70-189.mpls.qwest.net)
[21:38:14] * wroathe grins industrially  
[21:39:33] <apotheon> shit
[21:39:38] * pragma- grins harmonically
[21:39:38] <apotheon> I wish I was here sooner.
[21:40:01] <APic> Poor pragma-.
[21:40:02] <apotheon> I could've suggested that Guest88 just change the attribution to refer to using code from someone who wishes to remain anonymous.
[21:40:08] <APic> His own Bot outsmarts him.
[21:40:34] <apotheon> (and still include the MIT License)
[21:41:13] <pragma-> maybe he copied a portion that was extremely generic and basic.
[21:41:34] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu)
[21:42:08] <wroathe> Hrm, I don't know whether I should be concerned or not that all of the top hits that Amazon is pushing on the U.S. for routers are Chinese brands. That seems like something to be concerned about.
[21:42:36] *** Quits: remavas (~Remavas@user/remavas) (Quit: WeeChat 2.8)
[21:43:03] <wroathe> This TP-Link brand
[21:49:27] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[21:51:08] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Client Quit)
[21:53:09] <APic> *shrug*
[21:55:23] *** Quits: kdc (~kdc@196.211.197.159) (Remote host closed the connection)
[21:56:18] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:9180:b80f:58c7:8de8)
[21:56:18] *** Quits: System_Error (~SystemErr@user/systemerror) (Ping timeout: 276 seconds)
[21:59:44] *** Joins: Torr (~Torr@user/torr)
[22:02:13] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[22:03:34] *** Joins: zlg (~zlg@user/zlg)
[22:04:26] *** Joins: kapil (~kapil@o-k.website)
[22:07:08] *** Quits: concrete-houses (~g@209.6.150.53) (Ping timeout: 256 seconds)
[22:07:32] *** Joins: Akuli (~Akuli@213.216.211.142)
[22:08:50] *** Joins: concrete-houses (~g@209.6.150.53)
[22:09:17] *** Quits: inomoz (~inomoz@85.26.165.145) (Ping timeout: 240 seconds)
[22:09:43] *** Joins: awd321 (~awd321@21-53-255-130.kamensktel.ru)
[22:11:04] *** Joins: X-Scale` (~ARM@31.22.167.116)
[22:11:58] *** Quits: kapil (~kapil@o-k.website) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[22:12:28] *** Joins: kapil (~kapil@o-k.website)
[22:13:15] *** Quits: X-Scale (~ARM@206.46.158.5.rev.vodafone.pt) (Ping timeout: 256 seconds)
[22:13:15] *** X-Scale` is now known as X-Scale
[22:13:26] *** Quits: cisco87 (~quassel@static.128.104.12.49.clients.your-server.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:13:51] *** Joins: cisco87 (~quassel@static.128.104.12.49.clients.your-server.de)
[22:15:03] *** Joins: flynn (~mcbloch@user/flynn)
[22:17:32] *** Quits: awd321 (~awd321@21-53-255-130.kamensktel.ru) (Ping timeout: 240 seconds)
[22:18:28] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[22:19:14] *** Joins: soapsudsxx_ (~soapsudsx@209.221.40.139)
[22:19:15] *** Quits: soapsudsxx (~soapsudsx@209.221.40.139) (Remote host closed the connection)
[22:19:18] <Matt|home> .. that's weird notation
[22:19:19] <Matt|home> int
[22:19:25] <Matt|home> main() 
[22:19:25] <Matt|home> {
[22:19:28] <Matt|home> who does that :\
[22:20:07] *** Joins: adw213 (~adw213@21-53-255-130.kamensktel.ru)
[22:20:27] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Quit: Ping timeout (120 seconds))
[22:20:47] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[22:20:52] *** Quits: adw213 (~adw213@21-53-255-130.kamensktel.ru) (Read error: Connection reset by peer)
[22:21:03] <Learath2> old greybeards who still grep for their functions
[22:22:27] <fizzie> "It is also important for function definitions to start the name of the function in column one." <- still in the GNU style guide.
[22:23:16] <fizzie> ("This helps people to search for function definitions, and may also help certain tools recognize them.")
[22:25:40] *** Quits: lleo (~leo@31-161-159-13.mobile.kpn.net) (Quit: corona attack!)
[22:26:41] <fizzie> pragma-: `enum { equal = 0 }; /* ... */ if (strcmp(a, b) == equal) ...` (just kidding)
[22:27:53] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[22:27:57] *** Joins: harsh (~harsh@2409:4064:812:e3fd:3309:480f:ec1e:8bca)
[22:28:51] <wroathe> Learath2: This checks out. I occassionally grep for functions and I do in fact have a beard that is graying.
[22:29:04] <wroathe> But I don't use the GNU style guide
[22:29:52] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[22:33:22] *** Quits: kapil (~kapil@o-k.website) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[22:33:38] *** Joins: kapil (~kapil@o-k.website)
[22:35:28] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[22:37:04] *** Quits: kapil (~kapil@o-k.website) (Remote host closed the connection)
[22:37:46] *** Joins: kapil (~kapil@65.21.110.221)
[22:39:01] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[22:40:28] <pragma-> It slightly helps readability when you have compound return types, I guess.
[22:42:16] *** Joins: wroathe (~wroathe@user/wroathe)
[22:45:00] *** Quits: cisco87 (~quassel@static.128.104.12.49.clients.your-server.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:45:07] *** Quits: Haxxa (~Haxxa@202-130-211-204.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:41] *** Joins: cisco87 (~quassel@static.128.104.12.49.clients.your-server.de)
[22:47:08] *** Joins: Haxxa (~Haxxa@202-130-211-204.ip4.superloop.com)
[22:47:16] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[22:48:49] <APic> 😸
[22:48:54] <APic> Sorry for the CATS.
[22:49:26] <pragma-> 🛦
[22:50:22] *** Quits: blinky42 (~quassel@user/blinky42) (Ping timeout: 268 seconds)
[22:50:27] *** Joins: Akiva (~Akiva@user/Akiva)
[22:51:26] <rcf> jellicle cats
[22:51:28] *** Quits: kapil (~kapil@65.21.110.221) (Quit: ZNC 1.8.2+deb2build1 - https://znc.in)
[22:51:57] *** Joins: kapil (~kapil@2a01:4f9:c010:c9c3::1)
[22:52:15] *** Joins: blinky42 (~quassel@jabber.blinkylight.net)
[22:52:15] *** Quits: blinky42 (~quassel@jabber.blinkylight.net) (Changing host)
[22:52:15] *** Joins: blinky42 (~quassel@user/blinky42)
[22:52:25] <APic> Nom nom nom.
[23:02:23] *** Quits: justSleigh (~justache@user/justache) (Remote host closed the connection)
[23:08:41] *** Quits: sloanr` (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[23:08:52] *** Quits: u0_a3912 (~u0_a391@2603-6010-a141-6fa3-88f4-4cc9-a7b6-7571.res6.spectrum.com) (Read error: Connection reset by peer)
[23:08:54] *** Joins: sloanr` (~user@70-59-70-189.mpls.qwest.net)
[23:09:15] *** Joins: u0_a3912 (~u0_a391@2603-6010-a141-6fa3-88f4-4cc9-a7b6-7571.res6.spectrum.com)
[23:12:00] *** Joins: u-ou (sid524992@smol/hors)
[23:12:19] *** Parts: u-ou (sid524992@smol/hors) ()
[23:15:00] *** Joins: constxd (~brad@142.134.38.68)
[23:15:50] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: Lost terminal)
[23:16:19] *** Joins: justSleigh (~justache@user/justache)
[23:17:02] *** Quits: lightningwright (~lightning@user/lightningwright) (Ping timeout: 260 seconds)
[23:19:05] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Quit: Leaving)
[23:20:56] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[23:24:53] *** Quits: harsh (~harsh@2409:4064:812:e3fd:3309:480f:ec1e:8bca) (Quit: Konversation terminated!)
[23:26:07] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 268 seconds)
[23:26:55] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[23:28:37] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[23:30:57] *** Joins: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com)
[23:34:24] <SrPx> Is there any really really fast C compiler? I need something capable of compiling a medium-sized file (1000 LOC) in <0.001s
[23:36:31] *** Joins: remavas (~Remavas@user/remavas)
[23:38:55] <rkta> SrPx: did you try tcc?
[23:39:08] <SrPx> yep, that's the one I've been trying (recommended here)
[23:39:20] <SrPx> but it doesn't even support Apple's M1 yet
[23:39:54] <SrPx> and seems unmaintained
[23:39:58] <apotheon> Oh, so you need a really really fact C compiler *ported to the M1*.
[23:40:05] <apotheon> s/fact/fast/
[23:40:30] <apotheon> If it compiles what you need without creating problems, "unmaintained" isn't necessarily a limitation.
[23:41:16] *** Joins: lightningwright (~lightning@user/lightningwright)
[23:44:26] *** Joins: beepbooptheory (~mik@c-73-13-112-194.hsd1.pa.comcast.net)
[23:45:06] <SrPx> yes.
[23:45:23] *** Quits: alch (~alch@151.68.153.249) (Read error: Connection reset by peer)
[23:45:38] *** Joins: pnbeast (~pnbeast@2601:140:4200:e3d0::1)
[23:46:47] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[23:46:55] *** Joins: Burgundy (~yomon@79.115.213.171)
[23:47:22] *** Quits: sloanr` (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[23:47:35] *** Joins: sloanr` (~user@70-59-70-189.mpls.qwest.net)
[23:47:47] <apotheon> I don't know shit about what's available on M1 systems.
[23:48:58] <SrPx> fair enough
[23:49:11] <SrPx> just wondering though, it doesn't need to be C
[23:49:32] <SrPx> I just need to compile a small function that I'm generating procedurally, as fast as possible
[23:49:59] *** Joins: alch (~alch@151.68.218.203)
[23:50:00] <SrPx> is there a compile target designed to compile fast, with a good production ready compiler?
[23:50:21] <SrPx> I mean I'm doing this: `my_lang -> C -> CLang -> shared_lib`
[23:50:48] <SrPx> perhaps I could do: `my_lang -> Something -> SomethingCompiler -> shared_lib` instead, if `Something` is a low-level language designed to have a fast compiler
[23:52:59] <nomagno> Your only bet for a low-level language designed to have a fast compiler that supports the M1 is C. There just isn't a fast compiler for the platform yet :D
[23:54:17] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 240 seconds)
[23:55:28] <apotheon> SrPx: I heard Zig compiles quickly.
[23:55:36] <apotheon> There's another language that I'm trying to remember, too.
[23:55:38] <apotheon> umm
[23:56:38] <apotheon> SrPx: V was the other language that came to mind.
[23:56:52] <apotheon> I don't know if either is available for MacOS on M1.
[23:58:12] *** Quits: beepbooptheory (~mik@c-73-13-112-194.hsd1.pa.comcast.net) (Ping timeout: 256 seconds)
[23:59:14] *** Joins: bolovanos__ (~bolovanos@user/bolovanos)
[23:59:15] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[23:59:15] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[23:59:15] *** Joins: wroathe (~wroathe@user/wroathe)
