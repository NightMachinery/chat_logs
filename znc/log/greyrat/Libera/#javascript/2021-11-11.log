[00:00:05] <sheetjs> that's the problem
[00:00:06] <ljharb> because of the still-prevailing belief that ANY COSTS are worth it to stop patent trolls
[00:00:10] <ljharb> they didn't JUST use react for it
[00:00:16] <ljharb> they did it on every project they had, afaik
[00:00:23] <sheetjs> right, but that casts a dark cloud on react-native and other facebook projects
[00:00:42] <sheetjs> see, even if they did walk back some of the changes
[00:00:54] *** Quits: optimist (~optimist@106.202.250.65) (Quit: Leaving...)
[00:00:59] <sheetjs> there's still a perception that facebook is willing to mess with the licensing to serve the company's needs
[00:01:14] <sheetjs> *that* is a huge problem in trust
[00:01:41] <teut> where do you get this info from?
[00:01:47] <sheetjs> hypothetically, say SheetJS were relicensed from Apache 2.0 to some proprietary license or AGPL
[00:02:01] *** Joins: kogepan_ (~kogepan@user/kogepan)
[00:02:07] <sheetjs> would you trust us not to do the same in future open source projects?
[00:02:48] <sheetjs> certainly there's precedent in the number of projects that did decide to relicense
[00:03:05] <sheetjs> as obimod put it, relicensing is "in vogue"
[00:03:35] *** Joins: sonny (~sonny@8.6.144.238)
[00:03:45] <sheetjs> but there's a strong recognition that relicensing would destroy nearly a decade in goodwill
[00:04:08] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[00:04:20] <sonny> say you get a button from a web page, that is an event. If you trigger the event, what gets returned?
[00:04:30] *** Joins: pulse_ (~pulse@user/pulse)
[00:04:45] <sonny> I am making a hypothetical situation to understand DOM
[00:05:00] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[00:05:47] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:06:45] <sheetjs> depends on the event sonny but the callback receives an event object
[00:06:50] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[00:07:03] *** Quits: kakashiA1 (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 256 seconds)
[00:07:34] *** Joins: falafel (~falafel@cpe-76-168-195-162.socal.res.rr.com)
[00:07:37] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[00:08:34] <sonny> thank you. I am a js noob but I was considered scripting a job app web site, where the key is DOM manipulation
[00:10:31] *** pulse_ is now known as pulse
[00:13:11] <Decker> hmmm  [].find( async (srvc,idx)=>{...await...} )  doesn't work very well huh?
[00:13:37] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[00:14:46] <sheetjs> Decker: find expects a normal callback
[00:15:05] <Decker> ya... so probably a promise is 'true' so...
[00:15:10] <sheetjs> *truthy
[00:15:15] <Decker> right
[00:15:35] <sheetjs> you can make your own simple loop
[00:15:43] <qswz> yea you can't really shortcircuit there
[00:15:58] <sheetjs> you can short circuit in a for await loop
[00:16:10] <qswz> try racing the first
[00:16:14] <ljharb> sheetjs: anyone who has that trust, even in the absence of changes, is making a mistake
[00:16:26] <qswz> sheetjs: please ket's try without loops first
[00:16:50] <ljharb> Decker: your predicate requires async logic?
[00:16:51] <qswz> using Promise.all/race and .find behind
[00:16:56] <sheetjs> the entire open source community is based on trust chains
[00:17:46] <Decker> ljharb ya it sorta needs to behave like an await [].find()...
[00:18:18] *** Quits: Harlin (~DonQixote@75-163-144-60.clsp.qwest.net) (Quit: Leaving)
[00:18:27] <Decker> which I can do with a for( let of ){} as a quick replacement
[00:18:50] <Decker> and an external temp variable to save 'found'
[00:20:17] <systemfault> JS doesn't have that.. so that for/of loop may actually be the best solution here.
[00:20:28] <qswz> n> const t=timers.promises.setTimeout;  const a = [()=>t(50,0), ()=>t(20,20),()=>t(10,10)]; Promise.race(a.map(fn => fn().then(v => v > 0)));
[00:20:30] <jellobot> (okay) true
[00:21:02] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Quit: Leaving)
[00:22:21] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[00:22:48] <sheetjs> qswz: find calls in order
[00:23:09] *** Quits: teut (~teut@223.182.71.245) (Quit: Client closed)
[00:23:22] <qswz> n> const t=timers.promises.setTimeout;  const a = [()=>t(50,0), ()=>t(20,20),()=>t(10,10)]; console.time(); console.log(await Promise.race(a.map(fn => fn().then(v => {if (v<=0){throw new Error()} return v})))); console.timeEnd()
[00:23:23] <jellobot> (okay) 10 default: 14.835ms
[00:23:49] <qswz> sheetjs: here I think weshould use find at all
[00:23:55] <qswz> shouldn't*
[00:24:16] <qswz> the order won't be the array order, but the time order
[00:24:43] <systemfault> Doesn't matter, it's still shit.
[00:25:00] <qswz> hmm, the issue is I'm running all promises
[00:25:09] <qswz> its heavy
[00:25:21] <systemfault> You wouldn't do 998 useless HTTP requests if the second element matches.
[00:25:24] <systemfault> Exactly.
[00:25:33] <qswz> let's see with a loo
[00:25:41] *** Joins: yaalon (~yaalon@24.243.76.137)
[00:27:02] *** Quits: yaalon (~yaalon@24.243.76.137) (Remote host closed the connection)
[00:27:06] <systemfault> I'm all for the general idea of "no loop"... but there's a point where you need to be realistic :)
[00:28:10] <qswz> n> const t=timers.promises.setTimeout;  const a = [()=>t(50,0), ()=>t(20,20),()=>t(10,10)]; console.time(); let found; for (const fn of a) {const v=await fn(); if (v>0) {found=v; break;}} console.log(found); console.timeEnd()
[00:28:11] <jellobot> (okay) 20 default: 76.54ms
[00:28:52] <qswz> all agreed
[00:30:05] <ljharb> Decker: async iterator helpers would help
[00:30:30] *** Joins: funnybunny (~funnybunn@user/funnybunny)
[00:30:34] <Decker> ya...but... again size of domain they solve things for :)
[00:31:11] <funnybunny> Will a service worker be killed on Android when Chrome is killed by the OS to save memory?
[00:31:33] <funnybunny> I think so, but I can't find any info on Google
[00:31:48] <qswz> const findAsync = async (a, cb) => { let found; for (const fn of a) {const v=await fn(); if (cb(v)) {found=v; break;}} return found}
[00:31:50] <Decker> see - that find wasn't a 'shallow' function either :)  but ya I might have the thing, I might find the thing with a few requests (someday it'll have to be a smarter lookup)
[00:32:07] <Alexendoo> funnybunny: Yes, but that wouldn't matter. They're killed all the time
[00:32:17] <Alexendoo> They're not designed to be long running
[00:32:52] <funnybunny> Alexendoo: How else are they killed? I guess sending notifications through a service worker is not very robust
[00:33:00] <ljharb> for those using the airbnb eslint config: https://twitter.com/ljharb/status/1458540388185038851
[00:33:37] <Alexendoo> funnybunny: When a notification is received they are woken up
[00:34:01] <funnybunny> Alexendoo: OK. But if Chrome is killed by the OS on Android they wont run right?
[00:34:15] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:34:39] <Alexendoo> Chrome would also be started when it receives a push notification for itself, so they probably would still run
[00:34:51] <Alexendoo> If they don't, file a bug
[00:36:37] <funnybunny> I'm not sure
[00:38:15] *** Quits: sonny (~sonny@8.6.144.238) (Quit: Going offline, see ya! (www.adiirc.com))
[00:38:45] *** Joins: rendar (~rendar@user/rendar)
[00:38:48] <Alexendoo> An android app doesn't have to be actively running in order to receive push notifications, it uses services/intents
[00:39:36] *** Quits: qswz (~caub@89-80-20-125.abo.bbox.fr) (Quit: leaving)
[00:39:43] <rendar> can i stream json "pieces" by counting { }? e.g. ++i when i get a {, and --i when i get a }, when i will be 0 again, i have a complete JSON parsable document -- is this right?
[00:40:23] <sheetjs> modulo strings and arrays, yes
[00:40:40] <sheetjs> JSON.stringify({a: "{"})
[00:40:44] <sheetjs> n> JSON.stringify({a: "{"})
[00:40:45] <jellobot> (okay) '{"a":"{"}'
[00:40:52] <rendar> oh
[00:40:55] <sheetjs> n> JSON.stringify([1,2,3])
[00:40:56] <jellobot> (okay) '[1,2,3]'
[00:41:10] <sheetjs> n> JSON.stringify(123)
[00:41:11] <jellobot> (okay) '123'
[00:41:12] <funnybunny> Alexendoo: What about the case where the notification is sent from the client with ServiceWorkerRegistration.showNotification and handled by the notificationclick listener in the service worker?
[00:41:28] <rendar> so how could i stream json if i receive partial json on a socket?!
[00:41:28] *** Parts: lmat_ (~Lmat@c-68-58-60-231.hsd1.in.comcast.net) ()
[00:41:30] <sheetjs> outside of corner cases like that, you can implement a streaming JSON parser in the way you described
[00:42:12] <funnybunny> funnybunny: showNotification will create a notification on the device for Chrome. So will that always restart Chrome and the service worker?
[00:42:22] <funnybunny> Alexendoo: ^^
[00:43:20] <rendar> sheetjs, but i want to implement those cases
[00:43:26] <Alexendoo> funnybunny: client as in from a regular page?
[00:43:31] <rendar> so how could i stream valid json into a socket?
[00:43:33] <funnybunny> Alexendoo: Yes
[00:43:36] <sheetjs> https://www.json.org/json-en.html
[00:43:46] *** Joins: paule32_ (~paule32@user/paule32)
[00:44:01] <Alexendoo> funnybunny: Well if chrome gets killed there no longer is a page running, so no
[00:44:18] <sheetjs> speaking of trust ljharb
[00:44:40] <sheetjs> rendar: https://github.com/creationix/jsonparse haven't actually tried this, so it's not a personal recommendation
[00:44:46] <funnybunny> Alexendoo: So notifications that are already sent will re-run Chrome when clicked, but new notificaitons will not be sent if Chrome is killed in a low-memory situation, right?
[00:45:08] <sheetjs> but it does exist and some notable open source JS devs contributed to it
[00:45:08] <ljharb> sheetjs: speaking of it what
[00:45:41] *** Quits: OnkelBlade (~OnkelTem@user/onkeltem) (Ping timeout: 264 seconds)
[00:45:51] <funnybunny> Alexendoo: The notification will have to be sent from the service, not the web page
[00:45:56] <funnybunny> *server
[00:46:15] *** Quits: paule32 (~paule32@user/paule32) (Ping timeout: 244 seconds)
[00:47:17] <sheetjs> oh rendar was
[00:47:26] *** Quits: joepie91 (~joepie91p@user/joepie91) (Quit: Bridge terminating on SIGTERM)
[00:47:28] <sheetjs> asking about a streaming json parser
[00:47:41] *** Joins: OnkelBlade (~OnkelTem@user/onkeltem)
[00:48:26] <Decker> https://www.npmjs.com/package/json-6 sheetjs ?
[00:48:32] *** Quits: Nitrousoxide (~msdos@user/nitrousoxide) (Ping timeout: 240 seconds)
[00:48:44] *** Joins: joepie91 (~joepie91p@user/joepie91)
[00:49:15] *** Quits: dmaislin (~dmaislin@24-155-131-76.dyn.grandenetworks.net) (Quit: Textual IRC Client: www.textualapp.com)
[00:49:27] <sheetjs> https://www.npmjs.com/package/jsonparse seems to be the more popular package and has some solid contributors
[00:50:33] <sheetjs> seeing people like substack contributing to the package confers the same sense of trust as, say, seeing ljharb contribute to a project
[00:50:42] <ljharb> it should
[00:50:49] <ljharb> but substack hasn't done much in the JS ecosystem for years
[00:50:55] <Alexendoo> funnybunny: I wouldn't say re-run since It's not likely running chrome itself, just a service. Yeah, new notifications can be sent from the server still
[00:50:59] <ljharb> and the package you linked has barely been touched in 6-7 years
[00:51:23] *** Quits: mei3 (~mei@user/mei) (Ping timeout: 268 seconds)
[00:51:28] *** Joins: kalen- (~kalen@gateway/vpn/pia/kalen)
[00:51:36] <sheetjs> true
[00:52:20] <sheetjs> what would a 2021 streaming JSON parser API look like?
[00:53:35] <Decker> https://github.com/d3x0r/json6#json6-streaming probably not like this
[00:53:39] <funnybunny> Alexendoo: ty
[00:53:45] *** Quits: funnybunny (~funnybunn@user/funnybunny) (Quit: leaving)
[00:54:02] *** Quits: kalen (~kalen@gateway/vpn/pia/kalen) (Ping timeout: 240 seconds)
[00:56:12] *** Joins: Nitrousoxide (~msdos@user/nitrousoxide)
[00:56:24] *** Quits: OnkelBlade (~OnkelTem@user/onkeltem) (Read error: Connection reset by peer)
[00:57:23] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 264 seconds)
[00:57:32] *** Quits: kalen- (~kalen@gateway/vpn/pia/kalen) (Ping timeout: 240 seconds)
[00:57:59] *** Joins: vysn (~vysn@user/vysn)
[00:59:47] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:fcbc:82d8:6a9b:bafd)
[01:00:54] *** Joins: kalen- (~kalen@gateway/vpn/pia/kalen)
[01:00:54] *** kalen- is now known as kalen
[01:02:02] *** Joins: OnkelBlade (~OnkelTem@user/onkeltem)
[01:02:04] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Quit: WeeChat 3.1)
[01:02:19] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[01:03:02] *** Quits: obimod (~obimod@gateway/vpn/pia/obimod) (Ping timeout: 240 seconds)
[01:03:23] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:04:35] <ljharb> sheetjs: it'd probably use async iterators, observables, web streams, node streams, or some combination of those
[01:04:44] *** Joins: obimod (~obimod@gateway/vpn/pia/obimod)
[01:05:46] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:06:20] <Decker> are async iterators generators?
[01:06:33] <sheetjs> no but related
[01:08:33] <sheetjs> n> async function *gen() { yield 1; } gen.prototype
[01:08:34] <jellobot> (okay) Object [AsyncGenerator] {}
[01:09:26] <sheetjs> async iterators just have to implement Symbol.asyncIterator, they need not be generator functions
[01:13:23] *** Joins: pavonia (~user@user/siracusa)
[01:13:35] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:fcbc:82d8:6a9b:bafd) (Quit: Client closed)
[01:14:13] <ljharb> Decker: no
[01:14:19] <ljharb> Decker: async generators produce async iterators
[01:14:30] <ljharb> just like generators produce iterators
[01:14:38] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[01:14:53] <Decker> okay I could be onboard with that...
[01:15:02] <Decker> I'm using it in other callback based tech so I didn't consider
[01:15:14] <Decker> (ws onmessage write )
[01:20:46] *** Quits: Intelo (~Intelo@88.244.91.14) (Ping timeout: 256 seconds)
[01:25:22] *** Quits: kalen (~kalen@gateway/vpn/pia/kalen) (Ping timeout: 260 seconds)
[01:25:38] *** Joins: kalen (~kalen@gateway/vpn/pia/kalen)
[01:27:06] *** Quits: gde33 (~gde33@84-106-154-98.cable.dynamic.v4.ziggo.nl) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[01:27:08] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:27:43] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[01:31:20] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[01:34:32] *** Quits: harpia (~harpia@143.208.84.235) (Quit: harpia)
[01:35:53] *** Quits: kalen (~kalen@gateway/vpn/pia/kalen) (Ping timeout: 250 seconds)
[01:37:57] *** Joins: sebastorama (~sebastora@190.83.56.68)
[01:41:41] *** Joins: va5c0 (~vasco.nun@2001:818:e35b:6300:5ab0:35ff:fe81:99ae)
[01:42:17] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:43:21] *** Quits: sagax (~sagax_nb@user/sagax) (Quit: Konversation terminated!)
[01:47:28] *** Joins: quazimodo (~quazimodo@n1-40-235-47.bla1.nsw.optusnet.com.au)
[01:48:27] *** Joins: sam_1 (~sam_1@87.51.251.118)
[01:49:04] *** Joins: Guest50 (~Guest50@209.202.223.146)
[01:52:35] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 246 seconds)
[01:53:27] <src> If I overwrite the prototype of a class with some methods and function f is an instance of said class, why does console.log(f.constructor); print [Function: Object]
[01:53:39] <src> I expected an error like 'constructor undefined' or something
[01:54:07] <ljharb> src: what do you mean "overwrite the prototype"
[01:54:21] <ljharb> src: also by "class" do you mean the `class` keyword, or an obsolete function constructor
[01:54:45] <src> I mean pre ES6 constructor function, simply returning an object, wait, preparing example code
[01:55:34] <ljharb> src: why would you be writing one of those in the year of our lord 2021
[01:56:03] <ljharb> but sure, i'll look at the code
[01:56:49] <src> https://dpaste.com/A6Z5AESQ4
[01:57:13] <src> I'm just trying to understand classes, prototype, prototype inheritance et cetera, I'm not saying I wouldn't use current language features
[01:57:59] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[01:59:09] <src> (I extracted it from a bigger piece of code... just spotted some very minor errors but I think you get the gist of it nonetheless)
[01:59:29] <ljharb> src: sure, for learning is fine; but since it's virtually impossible to do all the right things without `class`, i'm not sure how useful it is
[01:59:42] <ljharb> src: so, `C.prototype` is still a plain object, which inherits from Object.prototype
[02:00:00] <ljharb> src: and `Object.prototype.constructor` is a thing, it's `Object`
[02:00:07] <src> oic
[02:00:09] <ljharb> src: so, that code is broken because it's supposed to include `constructor: C`
[02:00:12] *** Joins: Naan (~naan@user/naan)
[02:00:13] <samsch> It's also impossible to do the right thing *with* `class`
[02:00:22] <ljharb> eh
[02:00:30] <ljharb> i agree in the sense that inheritance is basically never the right thiing
[02:00:37] <src> ljharb yes I've read about it, so the back-reference of the constructor is still there
[02:00:38] <ljharb> but `class` sets up all the proper inheritance pieces
[02:00:43] <src> ljharb but thanks that explains it
[02:00:49] <ljharb> src: np
[02:01:25] *** Joins: kalen (~kalen@gateway/vpn/pia/kalen)
[02:02:33] <src> ljharb, one last thing if I may, writing `f.constructor` or `f.prototype.constructor` is basically the same thing?
[02:02:38] <src> first is just short hand for the second?
[02:03:24] <src> constructors are always defined on the prototype of their objects no?
[02:05:09] <ljharb> src: no, they are not at all the same
[02:05:22] <ljharb> src: or rather they aren't necessarily
[02:05:32] *** Quits: zebrag (~chris@user/zebrag) (Ping timeout: 246 seconds)
[02:05:53] *** Joins: zebrag (~chris@user/zebrag)
[02:06:55] <src> ljharb, I think I know what you're getting at, but it's probably safe to say the should be the same thing in almost all circumstances no?
[02:07:01] <src> *they should
[02:07:50] <ljharb> src: yes
[02:07:56] <ljharb> src: oh no wait
[02:07:56] *** Quits: ThePhilgrim (~thephilgr@151.41.185.44) (Read error: Connection reset by peer)
[02:08:03] <ljharb> src: `.prototype` is meaningless unless it's on a function
[02:08:20] <ljharb> src: so `instance.constructor === C.prototype.constructor`
[02:08:32] <ljharb> src: and `Object.getPrototypeOf(instance) === C.prototype`
[02:08:40] <ljharb> src: but `C.constructor` is basically always Function
[02:11:01] *** Joins: iloveopenbsdizzl (~iloveopen@104-1-37-155.lightspeed.miamfl.sbcglobal.net)
[02:11:35] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[02:13:20] <src> I feel like JS might not be the best language to first lean OOP :D
[02:13:34] <src> but perseverance will get me there, thanks :)
[02:13:40] <src> s/lean/learn
[02:13:53] *** Joins: rannnn8888 (~rannnn888@bzq-85-130-144-96.static-ip.bezeqint.net)
[02:14:19] <ljharb> src: i mean, sure, but OOP is terrible
[02:14:35] <obimod> python is better for learning OOP, even better is Java
[02:15:18] <src> I've dabbled in C and Go, so I feel more at home in JS, and I might want to do some webdev stuff, so JS it is for me for now
[02:15:46] <obimod> javascript's prototypical OOP means you'll mostly learn by syntax, ES6/babel which compiles down to prototypes / closures, 'instantiated' via the new operator
[02:16:55] *** Quits: iloveopenbsdizzl (~iloveopen@104-1-37-155.lightspeed.miamfl.sbcglobal.net) (Quit: Client closed)
[02:17:04] <obimod> or something
[02:22:35] *** Joins: iloveopenbsdizzl (~iloveopen@104-1-37-155.lightspeed.miamfl.sbcglobal.net)
[02:24:00] *** Quits: src (~src@user/src) (Quit: Leaving)
[02:27:57] *** Joins: sagax (~sagax_nb@user/sagax)
[02:28:49] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:29:34] *** Joins: sebastorama (~sebastora@190.83.56.68)
[02:29:54] *** Quits: iloveopenbsdizzl (~iloveopen@104-1-37-155.lightspeed.miamfl.sbcglobal.net) (Ping timeout: 256 seconds)
[02:30:02] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:29] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:31:15] *** Quits: va5c0 (~vasco.nun@2001:818:e35b:6300:5ab0:35ff:fe81:99ae) (Quit: WeeChat 3.3)
[02:31:18] *** Joins: src (~src@user/src)
[02:31:35] *** Quits: CiaoSen (~Jura@p200300c95730dd002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 264 seconds)
[02:32:27] *** Joins: highrate (~presonic@111-22-237-24.gci.net)
[02:32:56] *** Quits: pizdets_ (~pizdets@183.182.114.168) (Ping timeout: 250 seconds)
[02:33:20] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[02:34:05] *** Joins: pizdets (~pizdets@183.182.114.210)
[02:36:47] *** haise01_ is now known as Haise01
[02:40:51] *** Quits: ryzokuken (~ryzokuken@fanzine2.igalia.com) (Ping timeout: 268 seconds)
[02:43:29] *** Haise01 is now known as Haise0
[02:43:42] *** Quits: derjanni (~textual@ip-88-153-100-48.hsi04.unitymediagroup.de) (Quit: Textual IRC Client: www.textualapp.com)
[02:44:54] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:46:10] *** Joins: Maxattax97 (~max@2603:300f:b9f:2000::91)
[02:46:23] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Read error: Connection reset by peer)
[02:46:32] *** Quits: kogepan_ (~kogepan@user/kogepan) (Ping timeout: 240 seconds)
[02:46:35] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[02:46:48] *** Quits: rannnn8888 (~rannnn888@bzq-85-130-144-96.static-ip.bezeqint.net) (Quit: Client closed)
[02:47:42] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[02:49:17] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[02:51:04] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[02:52:28] *** Joins: ryzokuken (~ryzokuken@fanzine2.igalia.com)
[02:55:49] *** Quits: Maxattax97 (~max@2603:300f:b9f:2000::91) (Remote host closed the connection)
[02:56:06] *** Joins: gggpkm (~gggpkm@125.33.82.254)
[02:57:37] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Quit: Leaving)
[02:58:29] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:fcbc:82d8:6a9b:bafd)
[03:01:55] *** Joins: banana__ (~banana_@2603-6000-b500-9ce3-6993-680f-6d4d-ed0e.res6.spectrum.com)
[03:02:39] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[03:05:47] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 264 seconds)
[03:06:18] *** Parts: queue (~nerd@rektnet.com) ()
[03:06:38] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:15e2:e4e8:56c5:6bf)
[03:06:41] *** Joins: queue- (~nerd@rektnet.com)
[03:07:14] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[03:11:25] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:14e7:eea:7680:eb78)
[03:11:57] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[03:12:52] *** Joins: w0ng (~w0ng@103.212.224.212)
[03:16:05] *** Quits: Guest50 (~Guest50@209.202.223.146) (Quit: Client closed)
[03:19:26] *** Quits: kmh (~kmh@2a00:6020:5004:6800:286a:5c84:4c02:dded) (Quit: Leaving)
[03:19:49] *** Joins: federico_it (~textual@151.95.120.179)
[03:22:33] *** Quits: pmercado_ (~pmercado@186.107.48.172) (Ping timeout: 256 seconds)
[03:24:15] *** Quits: tex (~super@user/dix) (Ping timeout: 256 seconds)
[03:29:05] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[03:29:55] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[03:33:46] *** Quits: Fault (~Fault@152.70.112.168) (Quit: Quit.)
[03:34:38] *** Joins: jurjen (~jurjen@31-161-147-158.mobile.kpn.net)
[03:36:09] *** Joins: Fault (~Fault@152.70.112.168)
[03:36:35] *** Joins: kmh (~kmh@2a00:6020:5004:6800:5e1e:1234:c6b9:3ab)
[03:40:09] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[03:40:19] *** Quits: jurjen (~jurjen@31-161-147-158.mobile.kpn.net) (Quit: WeeChat 3.0)
[03:41:15] *** Quits: falafel (~falafel@cpe-76-168-195-162.socal.res.rr.com) (Ping timeout: 256 seconds)
[03:42:57] *** Joins: audiobirb (~audio@user/audio)
[03:43:15] *** Joins: jurjen (~jurjen@31-161-147-158.mobile.kpn.net)
[03:44:12] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:1d7d:b2a6:bcce:595d) (Quit: Textual IRC Client: www.textualapp.com)
[03:45:21] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[03:49:06] *** Quits: federico_it (~textual@151.95.120.179) (Quit: Textual IRC Client: www.textualapp.com)
[03:49:28] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[03:49:41] *** Joins: sam_1 (~sam_1@87.51.251.118)
[03:51:01] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:51:49] *** Joins: sebastorama (~sebastora@190.83.56.68)
[03:51:59] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:5811:1ea8:8cab:4910)
[03:52:37] *** Quits: jurjen (~jurjen@31-161-147-158.mobile.kpn.net) (Read error: Connection reset by peer)
[03:53:20] *** Quits: AtomicInteger (~primamate@p200300ee170ca500e482c2a05d384488.dip0.t-ipconnect.de) (Quit: WeeChat 3.3)
[03:53:48] *** Quits: themaxdavitt_ (sid433050@hampstead.irccloud.com) (Ping timeout: 244 seconds)
[03:54:07] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 250 seconds)
[03:54:19] *** Quits: owlbynight (sid501016@tinside.irccloud.com) (Ping timeout: 244 seconds)
[03:54:32] *** Quits: celphi (sid97751@user/celphi) (Ping timeout: 268 seconds)
[03:54:50] *** Quits: Argorok (sid195487@hampstead.irccloud.com) (Ping timeout: 244 seconds)
[03:55:09] *** Quits: itok_ (sid418430@ilkley.irccloud.com) (Ping timeout: 268 seconds)
[03:55:15] *** Quits: llinguini (sid257922@hampstead.irccloud.com) (Ping timeout: 260 seconds)
[03:55:15] *** Quits: andrew9184_ (sid416777@uxbridge.irccloud.com) (Ping timeout: 260 seconds)
[03:55:15] *** Quits: merpnderp (sid16744@hampstead.irccloud.com) (Ping timeout: 260 seconds)
[03:55:36] *** Quits: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net) (Remote host closed the connection)
[03:55:38] *** Quits: jwpapi (sid502614@uxbridge.irccloud.com) (Ping timeout: 260 seconds)
[03:55:38] *** Quits: jakesyl_ (sid56879@hampstead.irccloud.com) (Ping timeout: 260 seconds)
[03:55:38] *** Quits: shurane (sid132556@helmsley.irccloud.com) (Ping timeout: 260 seconds)
[03:55:46] *** Quits: _0x1d3 (sid43116@tinside.irccloud.com) (Ping timeout: 268 seconds)
[03:56:08] *** Joins: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net)
[03:56:42] *** Quits: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net) (Remote host closed the connection)
[03:56:46] *** Quits: Lewix_ (sid158496@id-158496.tinside.irccloud.com) (Ping timeout: 245 seconds)
[03:56:54] *** Joins: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net)
[03:57:05] *** Quits: CryptoDavid (uid14990@id-14990.uxbridge.irccloud.com) (Ping timeout: 264 seconds)
[03:57:23] *** Quits: ross (sid305269@user/ross) (Ping timeout: 264 seconds)
[03:57:33] *** Quits: naeluh__ (sid95128@id-95128.lymington.irccloud.com) (Read error: Connection reset by peer)
[03:57:33] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Read error: Connection reset by peer)
[03:57:33] *** Quits: beowulf_ (sid116@id-116.lymington.irccloud.com) (Read error: Connection reset by peer)
[03:57:33] *** Quits: tcsc (sid145321@id-145321.lymington.irccloud.com) (Read error: Connection reset by peer)
[03:57:33] *** Quits: rickbutton (sid410078@id-410078.helmsley.irccloud.com) (Read error: No route to host)
[03:57:33] *** Quits: patchie (sid504252@id-504252.ilkley.irccloud.com) (Read error: Connection reset by peer)
[03:57:34] *** Quits: gendl (sid100083@id-100083.hampstead.irccloud.com) (Read error: Connection reset by peer)
[03:57:34] *** Quits: statico (sid521804@user/statico) (Read error: Connection reset by peer)
[03:57:34] *** Quits: poiqwepoiqwe (uid525840@id-525840.hampstead.irccloud.com) (Read error: Connection reset by peer)
[03:57:34] *** Quits: notchris (sid181145@id-181145.hampstead.irccloud.com) (Write error: Connection reset by peer)
[03:57:34] *** Quits: lebster (sid17131@id-17131.hampstead.irccloud.com) (Read error: Connection reset by peer)
[03:57:34] *** Joins: ferdna (~ferdna@user/ferdna)
[03:57:35] *** Quits: jsatk (sid304796@id-304796.helmsley.irccloud.com) (Write error: Connection reset by peer)
[03:57:36] *** Quits: JayDoubleu (sid339529@id-339529.hampstead.irccloud.com) (Read error: Connection reset by peer)
[03:57:36] *** Quits: redrambles (sid319583@2a03:5180:f::4:e05f) (Write error: Connection reset by peer)
[03:57:37] *** Quits: Ownix (sid11917@2a03:5180:f:1::2e8d) (Read error: Connection reset by peer)
[03:57:37] *** Quits: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com) (Read error: Connection reset by peer)
[03:57:37] *** Quits: systemfault (sid267009@id-267009.uxbridge.irccloud.com) (Ping timeout: 268 seconds)
[03:57:39] *** Quits: kraih (sid17075@mojo/destroy-all-humans/kraih) (Read error: Connection reset by peer)
[03:57:39] *** Quits: victor (sid208353@user/victor) (Read error: Connection reset by peer)
[03:57:39] *** Quits: graingert (sid128301@2a03:5180:f::1:f52d) (Read error: Connection reset by peer)
[03:57:39] *** Quits: snek (sid280155@id-280155.lymington.irccloud.com) (Read error: Connection reset by peer)
[03:57:39] *** Quits: ljharb (sid43720@user/ljharb) (Read error: Connection reset by peer)
[03:57:40] *** Quits: DrowningElysium (sid190788@user/drowningelysium) (Read error: Connection reset by peer)
[03:57:40] *** Quits: Manouchehri (sid384576@id-384576.hampstead.irccloud.com) (Read error: Connection reset by peer)
[03:57:40] *** Quits: KnownSyntax (sid233169@user/knownsyntax) (Write error: Connection reset by peer)
[03:57:40] *** Quits: hughrawlinson_ (sid11243@id-11243.ilkley.irccloud.com) (Write error: Connection reset by peer)
[03:57:41] *** Quits: NiKaN (sid385034@id-385034.helmsley.irccloud.com) (Read error: Connection reset by peer)
[03:57:42] *** Quits: SrPx (sid108780@id-108780.uxbridge.irccloud.com) (Read error: Connection reset by peer)
[03:57:42] *** Quits: morgabra (sid500580@user/morgabra) (Read error: Connection reset by peer)
[03:57:42] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Read error: Connection reset by peer)
[03:58:17] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Ping timeout: 264 seconds)
[03:58:27] *** Quits: nomic (~nomic@185.192.69.7) (Quit: Leaving)
[04:00:10] <gehn> even better is learning FP instead of OOP
[04:01:39] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:02:25] *** Joins: sebastorama (~sebastora@190.83.56.68)
[04:02:47] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:14e7:eea:7680:eb78) (Ping timeout: 250 seconds)
[04:06:32] *** Joins: Betal (~Betal@user/betal)
[04:07:46] <Tabmow> I have an issue when trying to display a PDF (base64 encoded) when it hits a certain limit. From my research it seems there is a limit in certain browsers on this and the solutions are to use Blob instead, which is fine. However when I open the pdf via blob I don't have the ability to save the file and I can't refresh it either... Is there a way around this?
[04:08:00] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[04:08:00] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[04:08:00] *** Joins: wroathe (~wroathe@user/wroathe)
[04:08:30] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[04:09:28] *** Quits: Fault (~Fault@152.70.112.168) (Quit: Quit.)
[04:09:51] <gehn> Tabmow, the bad news is dealing with PDF in the context of browser JS is crap and broken and I don't think the situation has changed (much)
[04:09:56] *** Quits: src (~src@user/src) (Quit: Leaving)
[04:10:04] *** Joins: Fault (~Fault@152.70.112.168)
[04:10:18] <gehn> the only good and truly reliable way I know of to handle PDF stuff on the browser side is to effectively actually not handle it on the browser side
[04:10:49] <gehn> have your server deliver the PDF as a "download" and redirect the user to that link via e.g. a hidden <a> tag and manually calling the click event on it from JS
[04:11:32] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 240 seconds)
[04:11:47] <gehn> as to other options, I dunno, there might be alternatives. if so I'd like to know, but so far I haven't updated my brain to be aware of them, and probably with those alternatives I still suspect it's very much a ymmv type of situation
[04:12:15] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:12:35] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 246 seconds)
[04:12:59] *** Joins: sebastorama (~sebastora@190.83.56.68)
[04:13:24] <pavonia> You can create an <a> element to download the blob
[04:13:29] <merced> Tabmow: oh hi again
[04:14:05] *** Joins: rickbutton (sid410078@helmsley.irccloud.com)
[04:14:13] *** Joins: lebster (sid17131@hampstead.irccloud.com)
[04:14:17] *** Joins: redrambles (sid319583@tinside.irccloud.com)
[04:14:20] *** Joins: kraih (sid17075@mojo/destroy-all-humans/kraih)
[04:14:21] *** Joins: tcsc (sid145321@lymington.irccloud.com)
[04:14:22] *** Joins: gendl (sid100083@hampstead.irccloud.com)
[04:14:24] *** Joins: lind{at}yahoo (uid486956@tinside.irccloud.com)
[04:14:26] *** Joins: systemfault (sid267009@uxbridge.irccloud.com)
[04:14:32] *** Joins: SrPx (sid108780@uxbridge.irccloud.com)
[04:14:34] <merced> you can display the PDF from your backendd if your backeend controller has content-type: application/pdf
[04:14:41] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 256 seconds)
[04:14:44] <merced> then your backend just returns the PDf as an octet-stream
[04:15:30] <Tabmow> Interesting... I'll check those options...
[04:15:36] <Tabmow> merced: hey! :)
[04:15:42] <Tabmow> Thanks
[04:15:54] <merced> its starting to sound like you're in the same business as i am )
[04:15:56] <merced> ;)
[04:16:18] <Tabmow> haha - is it the business of failing? It feels like that's where I am at the moment :P
[04:16:47] *** Quits: Betal (~Betal@user/betal) (Ping timeout: 246 seconds)
[04:16:51] <merced> hehe something like that
[04:17:00] <merced> i live and breathe PDFs at work though
[04:18:05] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Ping timeout: 256 seconds)
[04:19:35] *** Quits: tcsc (sid145321@lymington.irccloud.com) (Ping timeout: 264 seconds)
[04:19:35] *** Quits: lebster (sid17131@hampstead.irccloud.com) (Ping timeout: 264 seconds)
[04:19:35] *** Quits: rickbutton (sid410078@helmsley.irccloud.com) (Ping timeout: 264 seconds)
[04:19:47] *** Quits: redrambles (sid319583@tinside.irccloud.com) (Ping timeout: 256 seconds)
[04:19:57] *** Joins: Samian (~s@user/samian)
[04:20:11] *** Quits: gendl (sid100083@hampstead.irccloud.com) (Ping timeout: 264 seconds)
[04:20:21] *** Quits: lind{at}yahoo (uid486956@tinside.irccloud.com) (Ping timeout: 256 seconds)
[04:20:26] *** Quits: SrPx (sid108780@uxbridge.irccloud.com) (Ping timeout: 268 seconds)
[04:20:26] *** Quits: kraih (sid17075@mojo/destroy-all-humans/kraih) (Ping timeout: 268 seconds)
[04:20:47] *** Quits: systemfault (sid267009@uxbridge.irccloud.com) (Ping timeout: 264 seconds)
[04:21:12] *** Joins: stenno (~stenno@user/stenno)
[04:21:45] *** Joins: shurane (sid132556@helmsley.irccloud.com)
[04:21:57] *** Joins: merpnderp (sid16744@hampstead.irccloud.com)
[04:21:58] *** Joins: jwpapi (sid502614@uxbridge.irccloud.com)
[04:22:15] *** Joins: rickbutton (sid410078@helmsley.irccloud.com)
[04:22:20] *** Joins: tcsc (sid145321@lymington.irccloud.com)
[04:22:43] *** Joins: kraih (sid17075@mojo/destroy-all-humans/kraih)
[04:22:46] *** Joins: redrambles (sid319583@tinside.irccloud.com)
[04:22:51] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:22:51] *** Joins: celphi (sid97751@user/celphi)
[04:23:21] *** Joins: lind{at}yahoo (uid486956@tinside.irccloud.com)
[04:23:23] *** Joins: systemfault (sid267009@uxbridge.irccloud.com)
[04:23:28] *** Joins: SrPx (sid108780@uxbridge.irccloud.com)
[04:23:38] *** Joins: sebastorama (~sebastora@190.83.56.68)
[04:24:05] *** Quits: stenno\OK (~stenno@user/stenno) (Ping timeout: 264 seconds)
[04:24:18] *** Joins: patchie (sid504252@ilkley.irccloud.com)
[04:24:20] *** Joins: notchris (sid181145@hampstead.irccloud.com)
[04:24:20] *** Joins: victor (sid208353@user/victor)
[04:24:25] *** Joins: morgabra (sid500580@user/morgabra)
[04:24:30] *** Joins: graingert (sid128301@tinside.irccloud.com)
[04:24:36] <gehn> I have had the misfortune of needing to read the PDF spec once upon a time. I wouldn't wish it upon my worst enemy.
[04:24:36] *** Joins: whatsupdoc (uid509081@hampstead.irccloud.com)
[04:24:36] *** Joins: Ownix (sid11917@helmsley.irccloud.com)
[04:24:39] *** Joins: ljharb (sid43720@user/ljharb)
[04:24:44] *** Joins: DrowningElysium (sid190788@user/drowningelysium)
[04:24:45] *** Joins: snek (sid280155@lymington.irccloud.com)
[04:24:46] *** Joins: naeluh__ (sid95128@lymington.irccloud.com)
[04:24:49] <gehn> well, actually, maybe my worst enemy
[04:25:10] *** Joins: gendl (sid100083@hampstead.irccloud.com)
[04:25:27] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:15e2:e4e8:56c5:6bf) (Quit: you are feeeling very sleeeeeepyy......)
[04:25:51] *** Quits: gehn (~gehn@user/gehn) (Quit: Leaving)
[04:26:23] *** Joins: KnownSyntax (sid233169@user/knownsyntax)
[04:31:00] *** Joins: owlbynight (sid501016@tinside.irccloud.com)
[04:31:07] *** Joins: falafel (~falafel@cpe-76-168-195-162.socal.res.rr.com)
[04:31:10] *** Joins: andrew9184_ (sid416777@uxbridge.irccloud.com)
[04:31:21] *** Joins: _0x1d3 (sid43116@tinside.irccloud.com)
[04:31:21] *** Joins: Argorok (sid195487@hampstead.irccloud.com)
[04:32:03] *** Joins: sfields (~sfields@2605:a601:adea:7a00:a73:feb1:e03c:b9f5)
[04:32:11] *** Joins: themaxdavitt_ (sid433050@hampstead.irccloud.com)
[04:32:11] *** Joins: llinguini (sid257922@hampstead.irccloud.com)
[04:32:34] *** Joins: itok_ (sid418430@ilkley.irccloud.com)
[04:34:20] *** Joins: statico (sid521804@user/statico)
[04:34:21] *** Joins: ross (sid305269@user/ross)
[04:34:39] *** Joins: NiKaN (sid385034@helmsley.irccloud.com)
[04:34:49] *** Joins: JayDoubleu (sid339529@hampstead.irccloud.com)
[04:36:42] <Tabmow> Doesn't sound good at all!
[04:37:09] <merced> gendl: lol which veresion
[04:37:30] *** Joins: Rockwood (~Rocky@user/rocky)
[04:38:00] <merced> i have the pdf spec 3rd edition on my desk still
[04:38:28] <Tabmow> So the frontend 'solution' would be something like this: https://dpaste.org/KonR ?
[04:39:02] *** Quits: zsoc (~zsoc@cpe-24-168-59-34.hvc.res.rr.com) (Ping timeout: 240 seconds)
[04:39:09] <merced> Tabmow: something like that, do you have to use base64 and blobs?
[04:39:16] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:15e2:e4e8:56c5:6bf)
[04:40:00] <Tabmow> I'd rather not use blobs... we get the base64 from other api calls but I could modify my backend to convert to pdf?
[04:40:29] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:15e2:e4e8:56c5:6bf) (Client Quit)
[04:40:39] <merced> yeah, you can have your backend just convert base64 into a byte stream and return that instead
[04:40:56] <merced> easier for your backend to compress the actual bytes than the b64
[04:41:21] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[04:42:08] *** Joins: jakesyl_ (sid56879@hampstead.irccloud.com)
[04:42:24] <merced> but my frontend philosophy is dated, i much rather the client browser do as little work as possible
[04:43:04] *** Quits: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[04:44:14] *** Quits: highrate (~presonic@111-22-237-24.gci.net) (Remote host closed the connection)
[04:44:27] *** Joins: Lewix_ (sid158496@tinside.irccloud.com)
[04:44:27] *** Joins: poiqwepoiqwe (uid525840@hampstead.irccloud.com)
[04:44:32] *** Joins: lebster (sid17131@hampstead.irccloud.com)
[04:44:34] *** Joins: hughrawlinson_ (sid11243@ilkley.irccloud.com)
[04:44:35] *** Joins: highrate (~presonic@111-22-237-24.gci.net)
[04:44:44] *** Joins: Manouchehri (sid384576@hampstead.irccloud.com)
[04:44:44] <Tabmow> Ok, so if I return the byte stream then just open it in a new window like normal and I should be golden?
[04:44:46] *** Joins: rustyshackleford (uid236774@helmsley.irccloud.com)
[04:45:44] <merced> Tabmow: iirc as long as you set the Content-Type header to "application/pdf" in your response, yeah
[04:45:47] *** Joins: Buoy172 (~Buoy172@95.86.30.137)
[04:46:02] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 260 seconds)
[04:46:07] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[04:48:02] <Tabmow> merced: sweet, cheers.
[04:48:30] <Rockwood> what is the motive of code?
[04:49:09] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:49:27] <Rockwood> and what is in backend?
[04:49:55] *** Joins: sebastorama (~sebastora@190.83.56.68)
[04:50:05] <merced> i imagine "display a pdf in the browser instead of downloading it"
[04:50:26] <Rockwood> backend?
[04:50:49] <Rockwood> my concern is data coming from where?
[04:50:55] <merced> i imagine some poorly coded API that can only return JSON so it b64 encodes the PDF bytese
[04:53:48] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:15e2:e4e8:56c5:6bf)
[04:54:05] <Rockwood> as per my view frontend isn't good option for backend responsibilities
[04:54:14] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 246 seconds)
[04:54:28] <merced> generally my view yes
[04:54:29] *** Joins: jsatk (sid304796@helmsley.irccloud.com)
[04:54:39] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[04:54:39] *** Joins: beowulf_ (sid116@lymington.irccloud.com)
[04:54:39] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[04:54:39] *** Joins: wroathe (~wroathe@user/wroathe)
[04:54:55] <merced> though with the amount of memory a chrome tab uses these days, you'd think it could do more
[04:55:11] <Rockwood> mozilla sucks well
[04:55:15] *** Joins: CryptoDavid (uid14990@uxbridge.irccloud.com)
[04:56:43] <Rockwood> theskillwithin, o/
[04:59:45] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:00:28] *** Joins: sebastorama (~sebastora@190.83.56.68)
[05:00:30] *** Quits: sebastorama (~sebastora@190.83.56.68) (Client Quit)
[05:00:35] *** Quits: hughrawlinson_ (sid11243@ilkley.irccloud.com) (Ping timeout: 256 seconds)
[05:01:23] *** Joins: hughrawlinson_ (sid11243@ilkley.irccloud.com)
[05:07:33] *** Quits: CryptoDavid (uid14990@uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[05:08:33] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:4d21:33e0:266f:38f8) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:14:40] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[05:16:39] *** Joins: zeromule (~eric@2601:602:8d80:4e50:707f:35e2:289d:393)
[05:18:44] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 246 seconds)
[05:19:37] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:21:33] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[05:22:06] *** Quits: austincheney (~austinche@2600:1700:1220:76c8:f982:507a:283b:3df9) (Read error: Connection reset by peer)
[05:24:09] *** Quits: ckdCreations (~ckdCreati@147.55.133.142) (Read error: Connection reset by peer)
[05:25:44] *** Quits: zeromule (~eric@2601:602:8d80:4e50:707f:35e2:289d:393) (Ping timeout: 246 seconds)
[05:27:47] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 256 seconds)
[05:27:51] *** Quits: falafel (~falafel@cpe-76-168-195-162.socal.res.rr.com) (Remote host closed the connection)
[05:28:15] *** Joins: falafel (~falafel@cpe-76-168-195-162.socal.res.rr.com)
[05:30:03] *** Quits: justache (~justache@user/justache) (Read error: Connection reset by peer)
[05:30:39] *** Joins: justache (~justache@user/justache)
[05:31:24] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:fcbc:82d8:6a9b:bafd) (Quit: Client closed)
[05:32:17] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[05:32:30] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[05:32:30] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[05:32:30] *** Joins: wroathe (~wroathe@user/wroathe)
[05:35:48] *** Joins: ckdCreations (~ckdCreati@147.55.133.132)
[05:36:11] *** Joins: Guest39 (~Guest39@92-100-212-174.dynamic.avangarddsl.ru)
[05:36:46] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 245 seconds)
[05:36:49] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[05:37:04] *** Joins: incognito (~relativit@user/incognito)
[05:40:24] *** Joins: Guest50 (~Guest50@209.202.223.146)
[05:44:32] *** Quits: banana__ (~banana_@2603-6000-b500-9ce3-6993-680f-6d4d-ed0e.res6.spectrum.com) (Ping timeout: 240 seconds)
[05:45:08] <poiqwepoiqwe> react i have a mui textfield with value={statevar} which is set by slider value ... all ok. i want to apply a css animation to make the textfield glow when the value is change but onChange is not being triggered when value={statevar} changes ... is there an easy way to get this working or will i need to listen for state change and add a ref to the component?
[05:48:40] *** Joins: gggpkm_ (~gggpkm@125.33.82.254)
[05:50:13] *** Joins: OhTheCode (~OhTheCode@14-200-73-17.tpgi.com.au)
[05:50:38] *** Joins: sam_1 (~sam_1@87.51.251.118)
[05:50:42] <Buoy172> What is a textfield? <input> or <textarea> ?
[05:50:44] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[05:50:49] <poiqwepoiqwe> input
[05:51:05] <Rockwood> its css stuff
[05:51:17] <poiqwepoiqwe> its a mui component
[05:51:37] <Rockwood> just change className
[05:51:38] *** Quits: gggpkm (~gggpkm@125.33.82.254) (Ping timeout: 246 seconds)
[05:51:43] <Rockwood> on event
[05:51:52] <poiqwepoiqwe> yes ... im aware its css ... and im asking how to apply the class to the component onChange when onChange isnt triggering
[05:52:03] *** Quits: KDev (~KDev@cpe-98-10-64-75.rochester.res.rr.com) (Read error: Connection reset by peer)
[05:52:04] <Buoy172> ah mui, ok I don't use it
[05:53:23] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 246 seconds)
[05:53:36] <Rockwood> https://mui.com/api/input-label/#props
[05:53:44] <Rockwood> chk this doc
[05:54:01] <Rockwood> poiqwepoiqwe, where is your code?
[05:54:46] <poiqwepoiqwe> its fine ... ive just added a ref to the component and using useEffect to catch the state change
[05:54:48] <poiqwepoiqwe> thanks
[05:54:49] *** Joins: howdoi (uid224@lymington.irccloud.com)
[05:55:17] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 264 seconds)
[05:55:33] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 256 seconds)
[05:55:35] <Rockwood> useEffect mostly usable in case of onload
[05:55:38] <Buoy172> Then you change the css in the function passed to useEffect?
[05:55:54] *** Quits: Guest50 (~Guest50@209.202.223.146) (Quit: Client closed)
[05:56:07] *** Quits: quazimodo (~quazimodo@n1-40-235-47.bla1.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[05:56:08] <Rockwood> i think not correct
[05:56:20] <poiqwepoiqwe> dont think too hard
[05:56:27] <Rockwood> lol
[05:56:31] <Rockwood> sure
[05:59:43] <Buoy172> Changing CSS in useEffect is cool. Setting state in useEffect is not so cool as it re-renders the entire component.
[06:02:28] <Rockwood> https://codepen.io/abottega/pen/vNzQMo
[06:02:33] *** Quits: highrate (~presonic@111-22-237-24.gci.net) (Remote host closed the connection)
[06:02:54] *** Joins: highrate (~presonic@111-22-237-24.gci.net)
[06:03:50] <Rockwood> you can do that by direct css easily
[06:04:32] *** Quits: Buoy172 (~Buoy172@95.86.30.137) (Remote host closed the connection)
[06:04:59] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[06:06:54] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[06:08:04] *** Quits: Guest39 (~Guest39@92-100-212-174.dynamic.avangarddsl.ru) (Ping timeout: 256 seconds)
[06:09:02] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[06:10:16] *** Quits: whatsupdoc (uid509081@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[06:11:03] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 250 seconds)
[06:11:34] <poiqwepoiqwe> theres a css selector that can catch value change? =/
[06:13:39] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Ping timeout: 250 seconds)
[06:15:16] <pavonia> CSS only applies to states, not changes
[06:15:32] <Rockwood> why not changes??
[06:16:01] <Rockwood> you should chk the possibilities
[06:16:23] <Rockwood> https://react-doprrk.stackblitz.io/
[06:16:36] <merced> didn't someone implement an interpreter using CSS
[06:16:48] <merced> i think there was also a CSS-only keylogger ...
[06:18:03] <poiqwepoiqwe> https://bpa.st/GKYA works just fine
[06:19:14] <Rockwood> listen its look something odd to me
[06:20:06] <Rockwood> works and correctly work both are differs
[06:20:49] <zettabyte> he's using useEffect to set a class on something on a state change, what's not correct about that?
[06:21:04] <poiqwepoiqwe> wtf is https://react-doprrk.stackblitz.io/?
[06:21:43] <zettabyte> the appearance of his components will be defined in CSS, management of state in JSX
[06:21:44] *** Quits: rustyshackleford (uid236774@helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[06:21:47] <zettabyte> this is the right way to do it
[06:22:53] <merced> just because it works doesn't mean it's right
[06:22:57] <merced> hehe
[06:23:03] <zettabyte> yes Rockwood already said that
[06:23:10] <merced> aw
[06:23:15] * merced slinks away
[06:23:15] <zettabyte> and to that I say, what poiqwepoiqwe has done is the right way
[06:23:31] <zettabyte> if you disagree I welcome an explanation and opportunity to learn something
[06:23:49] <merced> i dunno the first thing about react xP
[06:24:33] <zettabyte> ok, well I think we are discussing allocation on concerns (state and appearance, specifically) between JSX and CSS
[06:25:05] <poiqwepoiqwe> i almost feel i was duped into click https://react-doprrk.stackblitz.io/ ... feeling paranoid
[06:25:16] <zettabyte> you should not be directly modifying CSS with JSX, and this ought to be achieved by modifying classes on nodes
[06:25:40] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[06:26:17] <merced> poiqwepoiqwe: never click links in IRC otherwise your security team will yell at you
[06:26:36] <poiqwepoiqwe> i just want my textfield to glow when the value changes ... this was not supposed to solicit a philosophical debate
[06:27:02] <merced> you picked the wrong place to ask then :P
[06:28:05] <poiqwepoiqwe> ah yes, that is my mistake along with clicking the bait
[06:28:31] <merced> IRC culture is alive and well on libera
[06:28:38] <Rockwood> lol
[06:29:25] <Rockwood> nested programming never good idea just that is my concern
[06:30:06] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 260 seconds)
[06:30:06] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[06:30:19] <merced> are you saying it's a bad idea to write tsx files that get compiled into jsx files which get compiled into js files which get compiled into v8 bytecode which gets optimized by the v8 engine
[06:31:05] <merced> oh i forgot the webpack step to add your node_modules into client side libs your customer has to load
[06:31:50] *** Joins: jazzy (~jaziz@user/jaziz)
[06:32:08] <Rockwood> i am not say that
[06:32:17] <zettabyte> poiqwepoiqwe: ensure you're using the correct event handler
[06:32:37] <Rockwood> see his framework generating what kind of code
[06:32:45] <poiqwepoiqwe> nested programming ... as in if you need more than three idents you need to redesign - linus
[06:33:07] <merced> if you can do less than three indents in C you don't exist
[06:33:18] <zettabyte> https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers see oninput
[06:33:47] <Rockwood> poiqwepoiqwe, my concern is approach not only code
[06:33:57] <Rockwood> select properly
[06:34:22] <Rockwood> only 2 lines code make it work instead this that
[06:35:10] <Rockwood> if you need add an animation somewhere just include that
[06:35:27] <silly> https://chromium-review.googlesource.com/c/chromium/src/+/3260807
[06:35:30] <silly> lolwat?
[06:35:46] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[06:36:21] <merced> silly: that one senator made viewing the source illegeal
[06:36:23] <merced> illegal*
[06:36:54] <silly> yea i remember that one
[06:37:07] <Rockwood> cya
[06:38:41] <silly> "Somebody said, to the Chromium team, schools are using Google Forms for testing, and the kids can see the right answers in the forms, so to address that, we want to prevent students from reading source code."
[06:38:53] <silly> https://www.jwz.org/blog/2021/11/putting-on-my-hacker-hoodie-to-view-source/
[06:43:39] *** Joins: gggpkm__ (~gggpkm@60.10.194.43)
[06:44:44] <merced> silly: oof
[06:44:49] <merced> that is silly
[06:44:53] <merced> :eyes:
[06:45:07] *** Joins: jazzy2 (~jaziz@user/jaziz)
[06:45:37] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[06:46:12] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[06:46:35] *** Quits: gggpkm_ (~gggpkm@125.33.82.254) (Ping timeout: 246 seconds)
[06:48:41] <silly> i understand it's more like a chrome setting/flag kind of thing
[06:48:41] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 264 seconds)
[06:49:06] <silly> rather than something you could enable on your website with a meta tag or so
[06:49:18] <silly> still funny
[06:49:31] <merced> yea but still ... why bother
[06:49:43] <merced> i guess gen z is better than boomers are at reading html?
[06:50:07] *** Quits: howdoi (uid224@lymington.irccloud.com) (Quit: Connection closed for inactivity)
[06:50:38] <merced> waste of effort regardless, why doesnt someone fix the memory leaks
[06:50:44] <silly> and gen x will always suck at finding hacks and workarounds
[06:51:23] <silly> but all you need is one nerd per class ¯\_(ツ)_/¯
[06:51:30] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[06:52:34] *** Joins: zeromule (~eric@2601:602:8d80:4e50:707f:35e2:289d:393)
[06:52:35] *** Quits: justache (~justache@user/justache) (Read error: Connection reset by peer)
[06:53:14] *** Joins: justache (~justache@user/justache)
[06:53:25] *** Joins: paule32__ (~paule32@user/paule32)
[06:53:46] <merced> true that
[06:55:28] *** Joins: paule32 (~paule32@user/paule32)
[06:56:32] *** Quits: paule32_ (~paule32@user/paule32) (Ping timeout: 240 seconds)
[06:58:14] *** Joins: paule32_ (~paule32@user/paule32)
[06:58:14] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[06:58:27] *** Quits: paule32__ (~paule32@user/paule32) (Ping timeout: 256 seconds)
[06:59:55] *** Joins: paule32__ (~paule32@user/paule32)
[07:01:50] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[07:01:51] *** Quits: paule32 (~paule32@user/paule32) (Ping timeout: 256 seconds)
[07:02:49] *** Joins: gggpkm_ (~gggpkm@60.10.194.43)
[07:03:00] *** Joins: quazimodo (~quazimodo@n1-40-235-47.bla1.nsw.optusnet.com.au)
[07:03:41] *** Quits: paule32_ (~paule32@user/paule32) (Ping timeout: 264 seconds)
[07:04:07] *** Quits: stiv3n (~stiv3n@107.182.237.14) (Ping timeout: 256 seconds)
[07:05:15] *** Quits: gggpkm__ (~gggpkm@60.10.194.43) (Ping timeout: 256 seconds)
[07:05:17] *** Joins: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi)
[07:05:54] *** Joins: stiv3n (~stiv3n@2601:647:8101:e370::4762)
[07:06:10] *** Joins: gggpkm__ (~gggpkm@60.10.194.43)
[07:06:22] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[07:06:31] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 250 seconds)
[07:08:29] *** Quits: gggpkm__ (~gggpkm@60.10.194.43) (Read error: Connection reset by peer)
[07:08:48] *** Joins: gggpkm__ (~gggpkm@60.10.194.43)
[07:08:59] *** Quits: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net) (Remote host closed the connection)
[07:09:13] *** Quits: gggpkm_ (~gggpkm@60.10.194.43) (Ping timeout: 256 seconds)
[07:09:31] *** Joins: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net)
[07:11:48] *** Quits: Drgonz0 (~Drgonz0@107-179-254-222.cpe.teksavvy.com) ()
[07:18:50] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:20:19] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[07:21:56] *** Joins: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com)
[07:22:30] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[07:24:11] *** Joins: gggpkm_ (~gggpkm@111.63.44.13)
[07:26:15] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[07:27:30] *** Quits: gggpkm__ (~gggpkm@60.10.194.43) (Ping timeout: 260 seconds)
[07:30:22] *** Quits: deltab (~deltab@user/deltab) (Ping timeout: 268 seconds)
[07:32:00] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[07:34:45] *** Joins: sebastorama (~sebastora@190.83.56.68)
[07:34:52] *** Joins: banana__ (~banana_@2603-6000-b500-9ce3-6993-680f-6d4d-ed0e.res6.spectrum.com)
[07:35:12] *** Joins: gggpkm__ (~gggpkm@111.63.44.13)
[07:38:02] *** Quits: gggpkm_ (~gggpkm@111.63.44.13) (Ping timeout: 240 seconds)
[07:38:56] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[07:39:00] *** Joins: deltab (~deltab@user/deltab)
[07:39:10] *** Joins: gggpkm_ (~gggpkm@60.10.194.43)
[07:40:49] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[07:41:26] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[07:42:02] *** Quits: gggpkm__ (~gggpkm@111.63.44.13) (Ping timeout: 240 seconds)
[07:44:10] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[07:44:23] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[07:46:17] *** Quits: ckdCreations (~ckdCreati@147.55.133.132) (Read error: Connection reset by peer)
[07:46:33] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[07:51:21] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[07:51:29] *** Joins: sam_1 (~sam_1@87.51.251.118)
[07:52:02] *** Quits: stiv3n (~stiv3n@2601:647:8101:e370::4762) (Ping timeout: 240 seconds)
[07:52:35] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[07:54:11] *** Quits: falafel (~falafel@cpe-76-168-195-162.socal.res.rr.com) (Ping timeout: 250 seconds)
[07:54:12] *** Joins: stiv3n (~stiv3n@107.182.237.14)
[07:55:55] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 250 seconds)
[07:56:15] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 256 seconds)
[07:57:37] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:59:25] *** Quits: eblip (~eb0t@90.199.241.70) (Read error: Connection reset by peer)
[08:03:06] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[08:05:02] *** Joins: eblip (~eb0t@90.209.246.132)
[08:06:32] *** Quits: zeromule (~eric@2601:602:8d80:4e50:707f:35e2:289d:393) (Ping timeout: 240 seconds)
[08:07:32] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[08:08:17] *** Joins: falafel (~falafel@cpe-76-168-195-162.socal.res.rr.com)
[08:08:36] *** Quits: Xavier7 (~O_o@179.6.152.255) (Ping timeout: 268 seconds)
[08:09:47] *** Quits: banana__ (~banana_@2603-6000-b500-9ce3-6993-680f-6d4d-ed0e.res6.spectrum.com) (Ping timeout: 250 seconds)
[08:15:24] *** Joins: gde33 (~gde33@84-106-154-98.cable.dynamic.v4.ziggo.nl)
[08:15:31] *** Joins: banana__ (~banana_@2603-6000-b500-9ce3-6993-680f-6d4d-ed0e.res6.spectrum.com)
[08:21:08] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[08:21:41] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[08:26:20] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[08:27:19] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[08:28:19] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[08:32:43] *** Joins: gggpkm__ (~gggpkm@123.113.176.184)
[08:32:50] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 260 seconds)
[08:35:55] *** Quits: gggpkm_ (~gggpkm@60.10.194.43) (Ping timeout: 256 seconds)
[08:45:51] *** Quits: z_lehinsun (~lehinsun@188.113.178.220) (Quit: Leaving)
[08:48:39] *** Joins: bilbo (~bilbo@host-37-191-190-173.lynet.no)
[08:48:39] <jaawerth> ehh no matter what workarounds you do, deobfuscating tends to inevitably win over obfuscating and all it takes is one really talented high school coder of dubious ethics (or heroism, depending on your pov) to crack it wide open for everyone
[08:52:02] *** Joins: cisme__ (~cisme_@2600:1700:d980:1a40:f931:2b39:1da1:c672)
[08:54:02] *** Quits: obimod (~obimod@gateway/vpn/pia/obimod) (Ping timeout: 240 seconds)
[08:55:56] *** Quits: cismee (~cisme_@user/cisme/x-1186982) (Ping timeout: 245 seconds)
[08:58:20] *** Quits: cis_ (cis@user/cis) (Quit: ZNC - https://znc.in)
[08:58:22] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:15e2:e4e8:56c5:6bf) (Quit: you are feeeling very sleeeeeepyy......)
[09:01:21] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[09:02:07] *** Joins: cis_ (cis@user/cis)
[09:03:45] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[09:05:59] *** Joins: mexen (uid495612@user/mexen)
[09:06:31] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (Ping timeout: 256 seconds)
[09:08:12] *** Joins: obimod (~obimod@gateway/vpn/pia/obimod)
[09:08:17] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 250 seconds)
[09:14:00] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[09:16:37] *** Quits: Fault (~Fault@152.70.112.168) (Quit: Quit.)
[09:17:14] *** Joins: Fault (~Fault@152.70.112.168)
[09:17:41] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[09:17:41] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[09:17:41] *** Joins: wroathe (~wroathe@user/wroathe)
[09:18:36] <Maxdamantus> So now they'll have to use developer tools to see the answers.
[09:18:51] <merced> inb4 disable devtools
[09:20:10] *** Joins: gggpkm_ (~gggpkm@111.63.44.13)
[09:21:55] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[09:22:02] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[09:23:27] *** Quits: gggpkm__ (~gggpkm@123.113.176.184) (Ping timeout: 250 seconds)
[09:26:32] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 240 seconds)
[09:29:47] *** Quits: jellobot (~jellobot@li334-26.members.linode.com) (Remote host closed the connection)
[09:29:50] *** Joins: jellobot2 (~jellobot@li334-26.members.linode.com)
[09:29:50] *** ChanServ sets mode: +v jellobot2
[09:29:50] *** jellobot2 is now known as jellobot
[09:29:54] *** Quits: robertmaxrees (~robert0@c-76-114-62-229.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[09:30:18] *** Joins: robertmaxrees (~robert0@c-76-114-62-229.hsd1.ca.comcast.net)
[09:30:38] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[09:32:22] *** Joins: gggpkm (~gggpkm@123.113.176.184)
[09:33:00] *** Quits: Fault (~Fault@152.70.112.168) (Quit: Quit.)
[09:33:26] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 250 seconds)
[09:33:30] *** Joins: gggpkm__ (~gggpkm@123.113.176.184)
[09:33:45] *** Joins: Fault (~Fault@152.70.112.168)
[09:33:52] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[09:34:02] *** Quits: gggpkm_ (~gggpkm@111.63.44.13) (Ping timeout: 240 seconds)
[09:34:18] *** Joins: tex (~super@user/dix)
[09:35:56] *** Quits: banana__ (~banana_@2603-6000-b500-9ce3-6993-680f-6d4d-ed0e.res6.spectrum.com) (Ping timeout: 245 seconds)
[09:36:38] *** Joins: gggpkm_ (~gggpkm@123.113.182.69)
[09:36:39] *** Joins: banana__ (~banana_@2603-6000-b500-9ce3-dc4c-5b70-0bd4-98c4.res6.spectrum.com)
[09:36:53] *** Quits: gggpkm (~gggpkm@123.113.176.184) (Ping timeout: 250 seconds)
[09:38:26] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 245 seconds)
[09:38:44] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[09:39:51] *** Joins: JohnComputation2 (~JohnCompu@gateway/tor-sasl/johncomputation)
[09:39:54] <alystair> you can actually do that on chromebooks that are part of an org
[09:40:21] *** Quits: gggpkm__ (~gggpkm@123.113.176.184) (Ping timeout: 250 seconds)
[09:40:41] *** Joins: gggpkm__ (~gggpkm@123.113.176.184)
[09:41:33] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Ping timeout: 276 seconds)
[09:43:21] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 256 seconds)
[09:43:50] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:c15f:8bb8:33c:1048)
[09:43:51] *** Quits: gggpkm_ (~gggpkm@123.113.182.69) (Ping timeout: 245 seconds)
[09:45:00] <ljharb> great reason to never use one
[09:47:17] *** Quits: k_sze (~k_sze@mail2.kalunite.net) (Quit: ZNC 1.8.2 - https://znc.in)
[09:47:36] *** Joins: k_sze (~k_sze@mail2.kalunite.net)
[09:48:35] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 250 seconds)
[09:48:56] <alystair> one of many
[09:50:19] *** Quits: falafel (~falafel@cpe-76-168-195-162.socal.res.rr.com) (Ping timeout: 250 seconds)
[09:52:26] *** Joins: han-solo (~hanish@user/han-solo)
[09:56:36] *** Joins: falafel (~falafel@cpe-76-168-195-162.socal.res.rr.com)
[09:56:39] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[09:58:37] *** Joins: gggpkm_ (~gggpkm@123.113.176.184)
[10:00:40] *** Joins: gggpkm (~gggpkm@60.10.194.43)
[10:01:35] *** Quits: gggpkm__ (~gggpkm@123.113.176.184) (Ping timeout: 250 seconds)
[10:02:11] *** Quits: banana__ (~banana_@2603-6000-b500-9ce3-dc4c-5b70-0bd4-98c4.res6.spectrum.com) (Ping timeout: 245 seconds)
[10:03:19] *** Quits: gggpkm_ (~gggpkm@123.113.176.184) (Ping timeout: 250 seconds)
[10:04:42] *** Joins: gggpkm_ (~gggpkm@60.10.194.43)
[10:05:55] *** Joins: timwis (~timwis@2.30.116.137)
[10:06:47] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 250 seconds)
[10:07:43] *** Quits: gggpkm (~gggpkm@60.10.194.43) (Ping timeout: 256 seconds)
[10:08:03] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[10:09:18] <timwis> Hi all, I've got a race condition in my worker, and I keep losing the race. I'm struggling to think of how to mitigate it. It seems the main thread's postMessage is run before the worker can set itself up. https://gist.github.com/timwis/32f455d7b0175febf9336930fb8fbca8
[10:09:58] <timwis> I made db a global var so I could await it in onmessage, but it's not yet defined when onmessage runs
[10:13:53] *** Quits: falafel (~falafel@cpe-76-168-195-162.socal.res.rr.com) (Ping timeout: 264 seconds)
[10:15:37] *** Joins: mei3 (~mei@user/mei)
[10:18:15] *** Joins: falafel (~falafel@cpe-76-168-195-162.socal.res.rr.com)
[10:18:42] *** Joins: gggpkm__ (~gggpkm@125.33.82.254)
[10:20:17] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[10:20:28] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:c15f:8bb8:33c:1048) (Quit: you are feeeling very sleeeeeepyy......)
[10:21:53] *** Quits: gggpkm_ (~gggpkm@60.10.194.43) (Ping timeout: 256 seconds)
[10:26:01] *** Joins: entropy_ (~ent@user/entropy/x-9891564)
[10:26:16] <entropy_> hey how do i make a reset button on one of my forms?
[10:26:28] <entropy_> i tried many articles
[10:26:32] <entropy_> nothing works :(
[10:26:38] *** Joins: vysn (~vysn@user/vysn)
[10:27:15] <pavonia> What have you tried? Where did it fail?
[10:28:06] <alystair> if it's plain HTML a 'reset' type <button> should work...
[10:29:17] <Cork> just remember reset resets the user modified values, so if you have prepopulated value="" attributes they will change to those
[10:30:01] <pavonia> Oh interesting, I didn't know about the reset type
[10:32:47] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[10:34:44] <alystair> reset buttons are a UX gotcha, might want to read about it :)
[10:35:22] *** Quits: Pixi_ (~Pixi@user/pixi) (Quit: Leaving)
[10:35:29] *** Quits: kalen (~kalen@gateway/vpn/pia/kalen) (Ping timeout: 256 seconds)
[10:36:09] <Cork> i've never really understood the use for them, if the user wants to reset the form leave the page else...?
[10:36:32] <Cork> (and leaving the page includes F5)
[10:36:49] <ljharb> reset buttons should never have existed in the first place
[10:36:56] <ljharb> for the reasons mentioned
[10:37:00] <ljharb> entropy_: never use a reset button
[10:39:27] <Cork> i have used it in one form, but then i used localstorage to stor the entire form on each keypress and it was restored on revisiting the url
[10:39:41] *** Joins: sam_1 (~sam_1@87.51.251.118)
[10:39:45] <Cork> but i see that as a special case, especially as it used personal logins
[10:45:08] <poiqwepoiqwe> timwis not much to go off there ... have you tried adding an event listener to see the sequence of messages or are you assuming you have a "race condition"?
[10:45:56] *** Joins: gggpkm (~gggpkm@111.63.44.13)
[10:47:02] *** Quits: gggpkm__ (~gggpkm@125.33.82.254) (Ping timeout: 246 seconds)
[10:48:23] *** Quits: falafel (~falafel@cpe-76-168-195-162.socal.res.rr.com) (Ping timeout: 250 seconds)
[10:49:37] *** Joins: Pixi (~Pixi@user/pixi)
[10:51:14] <timwis> poiqwepoiqwe: Actually there's only one message. The (assumed) race condition is because it seemed to be run before the worker could intitialise itself. But I'll add some logs to verify that's what's occurring.
[10:52:02] *** Quits: machinehum (~machinehu@2604:3d08:937e:d600::4da2) (Ping timeout: 268 seconds)
[10:52:08] *** Joins: derjanni (~textual@ip-88-153-100-48.hsi04.unitymediagroup.de)
[10:53:21] *** Quits: bliminse (~bliminse@host86-185-253-43.range86-185.btcentralplus.com) (Quit: leaving)
[10:54:38] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Remote host closed the connection)
[10:54:38] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[10:55:15] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[11:00:03] *** Quits: cisme__ (~cisme_@2600:1700:d980:1a40:f931:2b39:1da1:c672) (Changing host)
[11:00:03] *** Joins: cisme__ (~cisme_@user/cisme/x-1186982)
[11:00:05] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 264 seconds)
[11:01:26] *** Joins: kalen (~kalen@gateway/vpn/pia/kalen)
[11:03:13] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[11:03:31] *** Joins: mickey8 (~user@user/mickey)
[11:06:13] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Remote host closed the connection)
[11:06:46] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[11:07:35] *** Quits: itok_ (sid418430@ilkley.irccloud.com) (Ping timeout: 264 seconds)
[11:08:13] *** Joins: ThePhilgrim (~thephilgr@151.41.185.44)
[11:09:39] *** Joins: itok_ (sid418430@id-418430.ilkley.irccloud.com)
[11:09:50] *** Quits: ThePhilgrim (~thephilgr@151.41.185.44) (Read error: Connection reset by peer)
[11:11:57] *** Joins: mach`` (~Mach@2a02:2f09:d105:f200:d139:3880:cbb9:4c3d)
[11:12:31] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: Textual IRC Client: www.textualapp.com)
[11:12:39] *** Joins: gggpkm_ (~gggpkm@60.10.194.43)
[11:15:32] *** Quits: gggpkm (~gggpkm@111.63.44.13) (Ping timeout: 240 seconds)
[11:16:22] *** Joins: falafel (~falafel@cpe-76-168-195-162.socal.res.rr.com)
[11:17:32] *** Quits: realies (~realies@user/realies) (Ping timeout: 240 seconds)
[11:17:55] *** Joins: realies (~realies@user/realies)
[11:18:08] *** Quits: mach`` (~Mach@2a02:2f09:d105:f200:d139:3880:cbb9:4c3d) (Quit: q)
[11:20:34] *** Quits: shalok (~shalok@user/shalok) (Remote host closed the connection)
[11:21:05] *** Quits: falafel (~falafel@cpe-76-168-195-162.socal.res.rr.com) (Ping timeout: 264 seconds)
[11:21:06] *** Joins: han-solo (~hanish@user/han-solo)
[11:21:27] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:22:06] <poiqwepoiqwe> handshaking
[11:22:17] *** Joins: shalok (~shalok@user/shalok)
[11:27:02] *** Joins: pycode (~pycode@2001:b07:5d28:551:f810:cf1a:ccfe:7040)
[11:29:12] *** Joins: gggpkm__ (~gggpkm@123.113.191.141)
[11:30:59] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[11:31:03] *** Quits: con3 (~con3@2604:a880:4:1d0::be:d000) (Quit: ZNC 1.8.2 - https://znc.in)
[11:31:21] *** Joins: con3 (~con3@143.198.53.32)
[11:31:32] *** Quits: realies (~realies@user/realies) (Ping timeout: 240 seconds)
[11:32:00] <timwis> poiqwepoiqwe: Okay I've confirmed - the onmessage cb is being fired before the IEFE at the top runs inside the worker. Odd..
[11:32:43] *** Quits: gggpkm_ (~gggpkm@60.10.194.43) (Ping timeout: 256 seconds)
[11:33:01] <timwis> (As evidenced by adding a console.log to each block and looking at the order of the logs)
[11:35:20] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 246 seconds)
[11:40:00] *** Joins: machinehum (~machinehu@2604:3d08:937e:d600::4da2)
[11:41:59] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:43:28] *** Joins: silverdust (~silverdus@user/silverdust)
[11:43:35] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 264 seconds)
[11:44:46] *** Joins: gggpkm_ (~gggpkm@60.10.194.43)
[11:44:47] <alystair> oh my god I just read the channel topic :(
[11:45:14] *** Quits: timwis (~timwis@2.30.116.137) (Remote host closed the connection)
[11:45:47] *** glass is now known as theglass
[11:47:35] *** Quits: gggpkm__ (~gggpkm@123.113.191.141) (Ping timeout: 246 seconds)
[11:47:36] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 245 seconds)
[11:48:11] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:e5ef:144b:750a:3781)
[11:50:58] <comatory> is there some "Javascript" Ruby On Rails? I know there was framework called Sails but not sure if it's still being developed. basically something that allows you to build both BE and FE parts as a monolith app.
[11:53:14] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[11:54:47] *** Quits: Samian (~s@user/samian) (Quit: Textual IRC Client: www.textualapp.com)
[11:55:03] *** Joins: realies (~realies@user/realies)
[12:00:48] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[12:01:11] *** Quits: quazimodo (~quazimodo@n1-40-235-47.bla1.nsw.optusnet.com.au) (Ping timeout: 250 seconds)
[12:02:52] *** Joins: mickey8 (~user@user/mickey)
[12:04:46] *** Joins: kogepan (~kogepan@user/kogepan)
[12:05:09] *** Joins: gggpkm__ (~gggpkm@123.113.191.141)
[12:06:43] *** Joins: nomic (~nomic@185.192.69.7)
[12:08:25] *** Quits: cis_ (cis@user/cis) (Quit: ZNC - https://znc.in)
[12:08:25] *** Quits: gggpkm_ (~gggpkm@60.10.194.43) (Ping timeout: 256 seconds)
[12:08:39] *** Joins: cis_ (cis@user/cis)
[12:11:57] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[12:13:11] *** Joins: netameta (~netameta@2a00:a040:193:50fe:25eb:6ff9:c847:c22f)
[12:35:17] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[12:35:47] *** Quits: notchris (sid181145@hampstead.irccloud.com) (Ping timeout: 264 seconds)
[12:36:30] *** Joins: notchris (sid181145@id-181145.hampstead.irccloud.com)
[12:37:35] *** Quits: themaxdavitt_ (sid433050@hampstead.irccloud.com) (Ping timeout: 264 seconds)
[12:37:53] *** Quits: Manouchehri (sid384576@hampstead.irccloud.com) (Ping timeout: 256 seconds)
[12:38:42] *** Joins: Manouchehri (sid384576@id-384576.hampstead.irccloud.com)
[12:39:28] *** Joins: themaxdavitt_ (sid433050@id-433050.hampstead.irccloud.com)
[12:42:44] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[12:48:39] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 256 seconds)
[12:50:10] *** Joins: CiaoSen (~Jura@p200300c95730dd002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[12:52:20] *** Joins: electr0n (~electr0n@about/security/founder/electr0n)
[12:53:46] *** Quits: themaxdavitt_ (sid433050@id-433050.hampstead.irccloud.com) (Read error: Connection reset by peer)
[12:53:52] *** Quits: notchris (sid181145@id-181145.hampstead.irccloud.com) (Read error: No route to host)
[12:53:59] *** Joins: notchris (sid181145@id-181145.hampstead.irccloud.com)
[12:54:37] *** Joins: themaxdavitt_ (sid433050@id-433050.hampstead.irccloud.com)
[12:56:56] *** Quits: realies (~realies@user/realies) (Quit: Ping timeout (120 seconds))
[12:57:21] *** Joins: realies (~realies@user/realies)
[12:57:24] *** Joins: han-solo (~hanish@user/han-solo)
[12:59:46] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:01:27] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[13:03:16] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:c5aa:8a17:a74d:cbf1)
[13:03:48] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[13:04:29] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:c5aa:8a17:a74d:cbf1) (Client Quit)
[13:07:14] *** Joins: gggpkm_ (~gggpkm@123.113.177.194)
[13:09:31] *** Joins: gggpkm (~gggpkm@123.113.186.135)
[13:10:24] *** Quits: gggpkm (~gggpkm@123.113.186.135) (Remote host closed the connection)
[13:10:32] *** Quits: gggpkm__ (~gggpkm@123.113.191.141) (Ping timeout: 246 seconds)
[13:10:56] *** Joins: gggpkm (~gggpkm@123.113.186.135)
[13:12:05] *** Quits: gggpkm_ (~gggpkm@123.113.177.194) (Ping timeout: 264 seconds)
[13:13:26] *** Quits: nomic (~nomic@185.192.69.7) (Quit: Leaving)
[13:14:36] *** Joins: Naan (~Naan@user/naan)
[13:24:07] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[13:24:30] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[13:25:20] *** Joins: Guest45 (~Guest45@p200300c8cf21a300e4f35a30ccdb996c.dip0.t-ipconnect.de)
[13:27:29] *** Joins: fweht (uid404746@lymington.irccloud.com)
[13:35:51] *** Joins: rcoote (~rcoote@2a02:908:69a:58a0:4d18:ed79:1a00:b201)
[13:36:49] <dminuoso> Hi. In a browser, if I do something like `(() => { const ws = new WebSocket(addr); ws.onmessage = ... })()`, what prevents the websocket from being garbage collected immediately afterwards?
[13:37:30] <dminuoso> Is it just that the websocket registers callbacks into the browser API (until the websocket dies) that themselves point back into the websocket object?
[13:38:05] <derjanni> Nothing prevents it from being killed by the GC
[13:38:21] <derjanni> Unless it's global, like in a Singleton.
[13:39:14] <derjanni> the JIT-Compiler will kill off the underlying pointer. Never forget, there's a world below your JIT Compiler.
[13:39:27] <dminuoso> derjanni: But here's the thing:
[13:39:32] <dminuoso> We're essentially using websockets in that style
[13:39:42] <dminuoso> And they're *never* garbage collected instantly
[13:39:46] <dminuoso> They are kept alive until they are closed
[13:39:52] <dminuoso> So *something* must be referencing them
[13:39:56] <derjanni> It depends on your concrete implementation.
[13:40:01] <dminuoso> It's either that or the GC is terribly poor
[13:40:07] <derjanni> And what the JIT Compiler makes of it.
[13:40:21] <dminuoso> derjanni: So semantics wise, Im expect to keep a reference to that websocket in say window?
[13:40:34] <dminuoso> And removing that reference on the onclose message?
[13:40:36] <derjanni> or a singleton
[13:40:43] <dminuoso> What do you mean by singleton here?
[13:41:25] *** Quits: gggpkm (~gggpkm@123.113.186.135) (Remote host closed the connection)
[13:41:35] <derjanni> Either make the handle global or use a global object (like a Singleton pattern).
[13:41:51] *** Quits: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net) (Remote host closed the connection)
[13:42:00] <derjanni> If its just a few lines of code, a global var/object should do the job.
[13:42:03] *** Joins: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net)
[13:42:04] <dminuoso> well even that "global object" has to be referenced from say window
[13:42:13] <dminuoso> But anyway
[13:42:18] *** Joins: gggpkm (~gggpkm@60.10.194.43)
[13:42:28] <derjanni> Yeah, depends on the JIT Compiler you are using.
[13:42:36] <dminuoso> Oh hold on
[13:42:44] <dminuoso> I finally found the specs
[13:42:53] <dminuoso> https://html.spec.whatwg.org/multipage/web-sockets.html#garbage-collection-2
[13:42:54] *** Quits: gggpkm (~gggpkm@60.10.194.43) (Remote host closed the connection)
[13:43:00] <dminuoso> A WebSocket object whose readyState attribute's value was set to OPEN (1) as of the last time the event loop reached step 1 must not be garbage collected if there are any event listeners registered for message events, error, or close events.
[13:43:16] <derjanni> Oh, interesting. Didn't know that.
[13:43:17] <dminuoso> So I guess I can simply create that websocket object, connect it, and then simply lose all references to it - it should be kept alive
[13:43:28] <derjanni> Still bad style if you keep it in the wrong scope.
[13:43:28] <dminuoso> Yeah interesting
[13:43:41] <dminuoso> derjanni: Well, I dont want to keep references to it, that's sort of the point.
[13:44:17] <derjanni> What if you use multiple sockets or need to recycle them?
[13:44:39] <dminuoso> Either is not a problem.
[13:44:42] <derjanni> Irrespective of what works, I'd recommend keeping the architecture clean.
[13:44:45] <dminuoso> I simply create them as needed, and the GC will clean them up
[13:44:48] <derjanni> It's going to backfire otherwise.
[13:44:56] <dminuoso> This is not, its just a small use case
[13:44:58] <dminuoso> Nothing major
[13:45:00] <derjanni> Oh ok.
[13:45:58] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[13:46:18] *** Joins: de-facto (~de-facto@user/de-facto)
[13:47:03] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[13:48:51] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[13:50:59] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[13:54:28] *** Quits: cis_ (cis@user/cis) (Quit: ZNC - https://znc.in)
[13:54:42] *** Joins: cis_ (cis@user/cis)
[13:56:23] *** Quits: pycode (~pycode@2001:b07:5d28:551:f810:cf1a:ccfe:7040) (Ping timeout: 246 seconds)
[13:56:29] *** Quits: newton (james@user/newton) (Ping timeout: 264 seconds)
[13:57:18] *** Joins: newton (james@user/newton)
[13:58:29] *** Quits: CiaoSen (~Jura@p200300c95730dd002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 246 seconds)
[13:59:14] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[14:02:31] *** Andrew_ is now known as AndrewYu
[14:03:21] *** Joins: i0e (~is0ke3@user/is0ke3)
[14:03:23] *** Quits: robertmaxrees (~robert0@c-76-114-62-229.hsd1.ca.comcast.net) (Read error: No route to host)
[14:03:47] *** Joins: robertmaxrees (~robert0@c-76-114-62-229.hsd1.ca.comcast.net)
[14:06:30] *** Joins: onizu (uid373383@id-373383.uxbridge.irccloud.com)
[14:07:11] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 245 seconds)
[14:14:03] *** Quits: onizu (uid373383@id-373383.uxbridge.irccloud.com) (Read error: Connection reset by peer)
[14:15:13] *** Joins: onizu (uid373383@id-373383.uxbridge.irccloud.com)
[14:15:16] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[14:19:53] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[14:24:42] *** Joins: jdw3000 (~jonathan@c-76-18-136-183.hsd1.tn.comcast.net)
[14:27:06] *** Joins: off^ (~off@h50.174.139.63.static.ip.windstream.net)
[14:28:57] *** Quits: newton (james@user/newton) (Ping timeout: 250 seconds)
[14:30:00] *** Joins: bliminse (~bliminse@host86-185-253-43.range86-185.btcentralplus.com)
[14:30:02] *** Joins: newton (james@user/newton)
[14:33:55] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:36:21] *** Quits: Guest45 (~Guest45@p200300c8cf21a300e4f35a30ccdb996c.dip0.t-ipconnect.de) (Quit: Client closed)
[14:38:01] *** Quits: silly (~silly@user/silly) (Ping timeout: 256 seconds)
[14:40:49] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:f084:fd47:7c6c:59eb)
[14:42:07] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:f084:fd47:7c6c:59eb) (Client Quit)
[14:43:59] *** Quits: bliminse (~bliminse@host86-185-253-43.range86-185.btcentralplus.com) (Quit: leaving)
[14:46:42] *** Joins: ThePhilgrim (~thephilgr@151.41.185.44)
[14:46:56] *** Joins: bliminse (~bliminse@host86-185-253-43.range86-185.btcentralplus.com)
[14:55:05] *** Quits: obimod (~obimod@gateway/vpn/pia/obimod) (Remote host closed the connection)
[14:55:25] *** Joins: obimod (~obimod@gateway/vpn/pia/obimod)
[14:56:02] *** Joins: earendel (uid498179@user/earendel)
[14:59:51] *** Joins: teut (~teut@223.182.71.245)
[15:00:17] <teut> https://bpa.st/UCRA    is this good object oriented code or yagni?
[15:00:28] <teut> and am I using the factory pattern correctly?
[15:15:39] <Alexendoo> teut: Don't name things after patterns, they're just functions
[15:17:04] <teut> they are functions but design patterns name tell the function of a "function"
[15:18:25] <teut> ok , let me just remove the word factory then
[15:18:35] <Alexendoo> It tells you it returns something, that is a given when you call a function and assign it
[15:18:58] *** Joins: Drgonz0 (~Drgonz0@107-179-254-222.cpe.teksavvy.com)
[15:19:25] *** Joins: nomic (~nomic@185.192.69.7)
[15:19:50] <teut> a factory usually returns a bunch of objects
[15:20:03] <teut> isnt it?
[15:20:07] *** Joins: zer0bitz (~zer0bitz@2001:2003:f6e3:7400:9c57:4715:1ac5:a700)
[15:20:27] <Alexendoo> Almost everything in javascript is an object
[15:20:27] <Decker> one at a time though
[15:21:13] <teut> but even if this factory returns bunch of filter I ll have to apply them individual by using a loop
[15:21:20] <Alexendoo> Though when I hear factory my mind goes to the horrible Java kind
[15:21:24] <teut> that looks bad
[15:22:02] <teut> java is trash, now its grabbing all those functional styles to save its popularity
[15:24:24] *** Quits: incognito (~relativit@user/incognito) (Remote host closed the connection)
[15:24:29] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[15:25:21] *** Joins: i0e (~is0ke3@user/is0ke3)
[15:27:28] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[15:27:31] *** Quits: bilbo (~bilbo@host-37-191-190-173.lynet.no) (Quit: Client closed)
[15:32:11] *** Quits: ThePhilgrim (~thephilgr@151.41.185.44) (Remote host closed the connection)
[15:32:21] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[15:32:43] *** Joins: ThePhilgrim (~thephilgr@151.41.185.44)
[15:32:49] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[15:34:13] *** Joins: iomari891 (~iomari891@105.112.138.38)
[15:35:26] *** Quits: alystair (~alystair@user/alystair) (Ping timeout: 246 seconds)
[15:36:18] *** Joins: mexen (uid495612@user/mexen)
[15:37:17] *** Quits: ThePhilgrim (~thephilgr@151.41.185.44) (Ping timeout: 264 seconds)
[15:43:50] *** Joins: silverdust (~silverdus@user/silverdust)
[15:48:02] *** Quits: shuvarek (~shuvarek@staticline-31-182-169-28.toya.net.pl) (Ping timeout: 240 seconds)
[15:48:17] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 256 seconds)
[15:48:45] *** paule32__ is now known as paule32
[15:48:52] *** Joins: CiaoSen (~Jura@p200300c95730dd002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[15:49:41] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 245 seconds)
[15:50:49] *** Joins: i0e (~is0ke3@user/is0ke3)
[15:51:17] *** Joins: gas51627 (uid91066@id-91066.helmsley.irccloud.com)
[15:51:20] *** Joins: pmercado_ (~pmercado@186.107.48.172)
[15:52:53] <gas51627> hello here. I am a javascript noob so please excuse my ignorance. We have a "package-lock.json" file. It contains "resolved" property for each dependency. This resolved property points to potentially sensitive data (internal repoisitory name, layout etc). Is there a way to generate the package-lock.json file without the resolved attribute?
[15:53:19] <gas51627> it's a node js thing
[16:02:37] *** Joins: ThePhilgrim (~thephilgr@151.41.185.44)
[16:04:43] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[16:04:55] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Read error: Connection reset by peer)
[16:05:21] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[16:05:39] *** Joins: i0e (~is0ke3@user/is0ke3)
[16:06:49] *** Joins: shuvarek (~shuvarek@staticline-31-182-169-28.toya.net.pl)
[16:11:49] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[16:11:56] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[16:12:16] *** Joins: de-facto (~de-facto@user/de-facto)
[16:18:23] <jaawerth> gas51627: the resoled property needs to contain the same URL used to locate that exact version of the dep from that exact source so it's deterministic; if you installed via git it would need to contain the git url + commit hash; so if you used a registry instead (github's npm registry, verdaccio, etc) that would be one way. But you can also gitignore the package-lock file too
[16:19:20] <jaawerth> package-lock is generally something you'd gitignore (or disable) for libraries, since you want to allow semver drift to pull in semver-patch or possibly semver-minor updates depending on what's in package.json, but for apps you usually check it in so npm installing the app is a deterministic process
[16:19:44] <gas51627> @jaawerth yes it's an app
[16:19:53] *** Joins: ggnoredo (~user@212.98.236.50)
[16:20:30] <gas51627> @jaawerth right, so if I understood it correctly, if I run npm against the public package repo and not the internal one, I will get links to external package repo (therefore it will be ok)
[16:21:22] <jaawerth> right, so you'd just need to make sure when you publish that you regenerate package-lock with npm configured to public repos so they don't resolve to private locations - you could throw together a CI job to enforce this, for example, to prevent mistakes
[16:21:23] *** Joins: bilbo (~bilbo@host-37-191-190-173.lynet.no)
[16:22:16] <gas51627> @jaawerth now thinking about the current package-lock.json file. Since it's pointing to internal repo it would be of no use to external users ,right? since they cannot access it
[16:22:51] <jaawerth> actually package-lock isn't publissed to a registry anyway iirc, so I guess I should say "push to public repo" in which case you might need a git hook instead to prevent it? hrm
[16:22:55] <gas51627> so probably node will resort to resolving dependencies using package.json
[16:23:01] <jaawerth> but yes, it woul be usless to non-internal users
[16:23:17] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[16:23:46] <jaawerth> if users who can't access the other repo try to use it, it would fail to resolve things and.. off the top of my head I *think* yes it will then try to resolve using public or currently-configured npm repo and if successful update their package-lock locally
[16:24:00] <jaawerth> but you'd want to verify that since I don't remember all the fine details
[16:24:01] <ggnoredo> Hi, can someone help me an issue about unicode characters like İĞÜÖÇ. https://pastebin.com/aNMPqCdq
[16:24:14] <jaawerth> `npm help package-lock.json` might have more info
[16:24:36] *** Joins: montybanksnyc (~montybank@pool-108-5-238-57.nwrknj.fios.verizon.net)
[16:25:08] <gas51627> @jaawerth right. Some very noob question. Basically, our js app is a bunch of js scripts and we put it to a github
[16:25:36] <gas51627> @jaawerth so what is the purpose of the package.json or package-lock.json in this case
[16:26:30] <gas51627> @jaawerth do I understand correctly that package.json and package-lock.json are only needed when you publish your app as a package to npm registry? I think it is also used if you have "loose" scripts but when they require some dependencies
[16:26:45] <jaawerth> package.json allows semver drift. if they're all git sources though it's more rigid than that and there might not be a functional benefit to using package-lock
[16:27:25] <jaawerth> the main purpose of package-lock is so that when you do shared development that everyone is getting the same versions, which can help avoid weird an confusing behavior differences
[16:27:42] <gas51627> @jaawerth right that I understand
[16:27:56] <jaawerth> but for git sources it's just going to resolve using what you provide, vs a semver range that goes through an npm registry, which
[16:28:00] *** Quits: kogepan (~kogepan@user/kogepan) (Quit: Leaving)
[16:28:02] <jaawerth> will allow drift
[16:28:29] <jaawerth> so yeah if it's all git urls, absolute urls, etc in package.json then it might be unnecessary
[16:29:22] <gas51627> @jaawerth well, in our readme it says run `npm i` or smth like that beforehead. So I assume that those loose scripts require those dependencies. The package.json file does not contain absolute urls
[16:29:42] *** Joins: kogepan_ (~kogepan@user/kogepan)
[16:32:00] *** Quits: off^ (~off@h50.174.139.63.static.ip.windstream.net) (Remote host closed the connection)
[16:32:52] <jaawerth> in package.json is just names and versions then yeah it's just doing normal registry stuf
[16:33:10] <jaawerth> but if there's no ~ or ^ etc in the versions and it's pinne to a full numerical X.Z.Y there wouldn't be drift anyway
[16:33:31] <gas51627> @jaawerth there are ^
[16:33:39] <jaawerth> right, so there's a difference
[16:34:35] <jaawerth> you'd have to figure out your desired behavior and go accordingly in that case. if it doesn't do what you want, you could just disable it an deal with some drift - it didn't even used to be a default thing, it won't kill you
[16:34:37] <jaawerth> depends on project needs
[16:35:11] <gas51627> @jaawerth I guess our only need so that thing continues working
[16:35:22] *** Quits: teut (~teut@223.182.71.245) (Ping timeout: 256 seconds)
[16:35:29] <gas51627> and since it's an app, it probably should use hardcoded version
[16:35:35] <gas51627> it's a cli
[16:35:39] <jaawerth> ggnoredo: well .toLowerCase() doesn't remove unicode codepoints so the lowercased version of "İ" isn't isn't actually "i"
[16:36:49] <gas51627> @jaawerth: thanks a lot for your help anyway, I have much better understanding of the thing now
[16:37:13] <jaawerth> sure thing
[16:37:36] <jaawerth> ggnoredo: you could try something like https://stackoverflow.com/a/37511463 to normalize + remove the codepoints with the accent marks
[16:37:57] <jaawerth> or the Intl.Collator approach
[16:40:10] <jaawerth> if the string is coming from a databases, many also have builtin utils for this like postgres's `unaccent`
[16:42:43] *** Joins: jurjen (~jurjen@83.232.63.97)
[16:43:02] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[16:44:20] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[16:51:11] *** Joins: kongzilla (~weechat@gateway/tor-sasl/kongzilla)
[16:53:37] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:58:15] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[17:04:18] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Ping timeout: 260 seconds)
[17:04:51] *** Quits: bilbo (~bilbo@host-37-191-190-173.lynet.no) (Quit: Client closed)
[17:06:32] *** Quits: rcoote (~rcoote@2a02:908:69a:58a0:4d18:ed79:1a00:b201) (Quit: Konversation terminated!)
[17:06:44] *** Joins: rcoote (~rcoote@ip-176-198-113-0.hsi05.unitymediagroup.de)
[17:10:02] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Ping timeout: 240 seconds)
[17:10:02] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Ping timeout: 240 seconds)
[17:10:51] *** Quits: itok_ (sid418430@id-418430.ilkley.irccloud.com) (Read error: Connection reset by peer)
[17:10:51] *** Quits: notchris (sid181145@id-181145.hampstead.irccloud.com) (Read error: Network is unreachable)
[17:10:57] *** Quits: themaxdavitt_ (sid433050@id-433050.hampstead.irccloud.com) (Read error: Connection reset by peer)
[17:10:59] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Read error: Connection reset by peer)
[17:10:59] *** Quits: onizu (uid373383@id-373383.uxbridge.irccloud.com) (Ping timeout: 246 seconds)
[17:11:01] *** Quits: statico (sid521804@user/statico) (Ping timeout: 256 seconds)
[17:11:01] *** Quits: owlbynight (sid501016@tinside.irccloud.com) (Ping timeout: 256 seconds)
[17:11:01] *** Quits: DrowningElysium (sid190788@user/drowningelysium) (Ping timeout: 256 seconds)
[17:11:02] *** Quits: gas51627 (uid91066@id-91066.helmsley.irccloud.com) (Ping timeout: 250 seconds)
[17:11:02] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Read error: Connection reset by peer)
[17:11:04] *** Quits: Manouchehri (sid384576@id-384576.hampstead.irccloud.com) (Read error: Connection reset by peer)
[17:11:11] *** Quits: andrew9184_ (sid416777@uxbridge.irccloud.com) (Ping timeout: 264 seconds)
[17:11:11] *** Quits: systemfault (sid267009@uxbridge.irccloud.com) (Ping timeout: 264 seconds)
[17:11:16] *** Quits: gendl (sid100083@hampstead.irccloud.com) (Ping timeout: 268 seconds)
[17:11:16] *** Quits: redrambles (sid319583@tinside.irccloud.com) (Ping timeout: 268 seconds)
[17:11:17] *** Quits: shurane (sid132556@helmsley.irccloud.com) (Ping timeout: 268 seconds)
[17:11:21] *** Quits: Lewix_ (sid158496@tinside.irccloud.com) (Ping timeout: 245 seconds)
[17:11:27] *** Quits: mexen (uid495612@user/mexen) (Ping timeout: 250 seconds)
[17:11:35] *** Quits: ljharb (sid43720@user/ljharb) (Ping timeout: 256 seconds)
[17:11:35] *** Quits: patchie (sid504252@ilkley.irccloud.com) (Ping timeout: 256 seconds)
[17:11:46] *** Quits: hughrawlinson_ (sid11243@ilkley.irccloud.com) (Ping timeout: 260 seconds)
[17:11:47] *** Quits: JayDoubleu (sid339529@hampstead.irccloud.com) (Ping timeout: 264 seconds)
[17:11:47] *** Quits: NiKaN (sid385034@helmsley.irccloud.com) (Ping timeout: 264 seconds)
[17:11:47] *** Quits: snek (sid280155@lymington.irccloud.com) (Ping timeout: 264 seconds)
[17:11:47] *** Quits: graingert (sid128301@tinside.irccloud.com) (Ping timeout: 264 seconds)
[17:11:53] *** Quits: llinguini (sid257922@hampstead.irccloud.com) (Ping timeout: 268 seconds)
[17:11:53] *** Quits: naeluh__ (sid95128@lymington.irccloud.com) (Ping timeout: 268 seconds)
[17:11:53] *** Quits: Ownix (sid11917@helmsley.irccloud.com) (Ping timeout: 268 seconds)
[17:11:53] *** Quits: lind{at}yahoo (uid486956@tinside.irccloud.com) (Ping timeout: 268 seconds)
[17:11:53] *** Quits: merpnderp (sid16744@hampstead.irccloud.com) (Ping timeout: 268 seconds)
[17:11:53] *** Quits: fweht (uid404746@lymington.irccloud.com) (Ping timeout: 250 seconds)
[17:12:09] *** Quits: _0x1d3 (sid43116@tinside.irccloud.com) (Ping timeout: 256 seconds)
[17:12:14] *** Quits: beowulf_ (sid116@lymington.irccloud.com) (Ping timeout: 260 seconds)
[17:12:14] *** Quits: lebster (sid17131@hampstead.irccloud.com) (Ping timeout: 260 seconds)
[17:12:19] *** Quits: earendel (uid498179@user/earendel) (Ping timeout: 250 seconds)
[17:12:23] *** Quits: SrPx (sid108780@uxbridge.irccloud.com) (Ping timeout: 264 seconds)
[17:12:23] *** Quits: kraih (sid17075@mojo/destroy-all-humans/kraih) (Ping timeout: 264 seconds)
[17:12:23] *** Quits: jwpapi (sid502614@uxbridge.irccloud.com) (Ping timeout: 264 seconds)
[17:12:30] *** Quits: tcsc (sid145321@lymington.irccloud.com) (Ping timeout: 268 seconds)
[17:12:30] *** Quits: rickbutton (sid410078@helmsley.irccloud.com) (Ping timeout: 268 seconds)
[17:12:32] *** Quits: poiqwepoiqwe (uid525840@hampstead.irccloud.com) (Ping timeout: 240 seconds)
[17:12:32] *** Quits: jakesyl_ (sid56879@hampstead.irccloud.com) (Ping timeout: 240 seconds)
[17:12:34] *** Joins: themaxdavitt_ (sid433050@hampstead.irccloud.com)
[17:12:38] *** Joins: NiKaN (sid385034@helmsley.irccloud.com)
[17:12:40] *** Joins: patchie (sid504252@ilkley.irccloud.com)
[17:12:40] *** Joins: earendel (uid498179@user/earendel)
[17:12:41] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Ping timeout: 264 seconds)
[17:12:43] *** Joins: Ownix (sid11917@helmsley.irccloud.com)
[17:12:43] *** Quits: jsatk (sid304796@helmsley.irccloud.com) (Ping timeout: 256 seconds)
[17:12:43] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[17:12:49] *** Joins: ljharb (sid43720@user/ljharb)
[17:12:52] *** Joins: DrowningElysium (sid190788@id-190788.hampstead.irccloud.com)
[17:12:53] *** Joins: jsatk (sid304796@2a03:5180:f:1::4:a69c)
[17:12:53] *** Joins: Lewix_ (sid158496@2a03:5180:f::2:6b20)
[17:12:55] *** Joins: Manouchehri (sid384576@id-384576.hampstead.irccloud.com)
[17:12:59] *** Quits: KnownSyntax (sid233169@user/knownsyntax) (Ping timeout: 264 seconds)
[17:12:59] *** Quits: morgabra (sid500580@user/morgabra) (Ping timeout: 264 seconds)
[17:12:59] *** Quits: victor (sid208353@user/victor) (Ping timeout: 264 seconds)
[17:13:01] *** Joins: SrPx (sid108780@id-108780.uxbridge.irccloud.com)
[17:13:03] *** Joins: beowulf_ (sid116@2a03:5180:f:2::74)
[17:13:04] *** Joins: hughrawlinson_ (sid11243@2a03:5180:f:3::2beb)
[17:13:04] *** Joins: andrew9184_ (sid416777@uxbridge.irccloud.com)
[17:13:05] *** Joins: snek (sid280155@2a03:5180:f:2::4:465b)
[17:13:06] *** Joins: llinguini (sid257922@2a03:5180:f:4::3:ef82)
[17:13:07] *** Quits: ross (sid305269@user/ross) (Ping timeout: 268 seconds)
[17:13:07] *** Quits: Argorok (sid195487@hampstead.irccloud.com) (Ping timeout: 268 seconds)
[17:13:07] *** Quits: celphi (sid97751@user/celphi) (Ping timeout: 268 seconds)
[17:13:08] *** Joins: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com)
[17:13:09] *** Joins: gitesh (uid423739@2a03:5180:f:3::6:773b)
[17:13:10] *** Quits: DrowningElysium (sid190788@id-190788.hampstead.irccloud.com) (Changing host)
[17:13:10] *** Joins: DrowningElysium (sid190788@user/drowningelysium)
[17:13:12] *** Joins: victor_ (sid208353@user/victor)
[17:13:14] *** Joins: epolanski (uid312403@2a03:5180:f:1::4:c453)
[17:13:19] *** Joins: graingert (sid128301@2a03:5180:f::1:f52d)
[17:13:21] *** Joins: _0x1d3 (sid43116@2a03:5180:f::a86c)
[17:13:22] *** Joins: KnownSyntax_ (sid233169@user/knownsyntax)
[17:13:29] *** Joins: gendl (sid100083@2a03:5180:f:4::1:86f3)
[17:13:35] *** Joins: notchris (sid181145@id-181145.hampstead.irccloud.com)
[17:13:37] *** Joins: ross (sid305269@id-305269.helmsley.irccloud.com)
[17:13:37] *** Joins: owlbynight (sid501016@tinside.irccloud.com)
[17:13:39] *** Joins: rustyshackleford (uid236774@2a03:5180:f:1::3:9ce6)
[17:13:39] *** Joins: itok_ (sid418430@ilkley.irccloud.com)
[17:13:40] *** Joins: systemfault (sid267009@uxbridge.irccloud.com)
[17:13:40] *** Joins: varaindemian (uid73404@2a03:5180:f:3::1:1ebc)
[17:13:44] *** Joins: tcsc (sid145321@id-145321.lymington.irccloud.com)
[17:13:47] *** Joins: shurane (sid132556@helmsley.irccloud.com)
[17:13:50] *** Joins: mexen (uid495612@2a03:5180:f:3::7:8ffc)
[17:13:51] *** Joins: lebster (sid17131@hampstead.irccloud.com)
[17:13:53] *** Joins: poiqwepoiqwe (uid525840@hampstead.irccloud.com)
[17:13:56] *** Joins: Argorok (sid195487@id-195487.hampstead.irccloud.com)
[17:13:58] *** Joins: merpnderp (sid16744@hampstead.irccloud.com)
[17:13:59] *** Joins: celphi (sid97751@5.254.36.58)
[17:14:02] *** Joins: kraih (sid17075@tinside.irccloud.com)
[17:14:04] *** Joins: redrambles (sid319583@id-319583.tinside.irccloud.com)
[17:14:06] *** Joins: jakesyl_ (sid56879@hampstead.irccloud.com)
[17:14:07] *** Joins: aniruddha (uid340443@2a03:5180:f:3::5:31db)
[17:14:08] *** Joins: onizu (uid373383@id-373383.uxbridge.irccloud.com)
[17:14:10] *** Joins: gas51627 (uid91066@id-91066.helmsley.irccloud.com)
[17:14:14] *** Joins: JayDoubleu (sid339529@hampstead.irccloud.com)
[17:14:14] *** Quits: ross (sid305269@id-305269.helmsley.irccloud.com) (Changing host)
[17:14:14] *** Joins: ross (sid305269@user/ross)
[17:14:18] *** Joins: statico (sid521804@id-521804.hampstead.irccloud.com)
[17:14:22] *** Joins: morgabra (sid500580@id-500580.hampstead.irccloud.com)
[17:14:23] *** Quits: mexen (uid495612@2a03:5180:f:3::7:8ffc) (Changing host)
[17:14:23] *** Joins: mexen (uid495612@user/mexen)
[17:14:29] *** Joins: naeluh__ (sid95128@id-95128.lymington.irccloud.com)
[17:14:33] *** Quits: celphi (sid97751@5.254.36.58) (Changing host)
[17:14:33] *** Joins: celphi (sid97751@user/celphi)
[17:14:33] *** Joins: rickbutton (sid410078@id-410078.helmsley.irccloud.com)
[17:14:36] *** Joins: jwpapi (sid502614@id-502614.uxbridge.irccloud.com)
[17:14:47] *** Quits: kraih (sid17075@tinside.irccloud.com) (Changing host)
[17:14:47] *** Joins: kraih (sid17075@mojo/destroy-all-humans/kraih)
[17:14:57] *** Quits: statico (sid521804@id-521804.hampstead.irccloud.com) (Changing host)
[17:14:57] *** Joins: statico (sid521804@user/statico)
[17:15:01] *** Quits: morgabra (sid500580@id-500580.hampstead.irccloud.com) (Changing host)
[17:15:01] *** Joins: morgabra (sid500580@user/morgabra)
[17:15:21] *** Joins: voltage_ (voltage@user/voltage)
[17:15:32] *** Joins: N4buc0 (~N4buc0@2804:7f4:3487:cd22:b02b:8ce5:bf19:5b10)
[17:18:02] *** Joins: h4b17s (~h4b17s@94.140.9.188)
[17:19:30] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:49a5:4b56:9915:ce49)
[17:20:15] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 260 seconds)
[17:20:44] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:49a5:4b56:9915:ce49) (Client Quit)
[17:21:11] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[17:21:35] *** Quits: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[17:21:56] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[17:25:32] *** Quits: siyb1 (~siyb@h081217185055.dyn.cm.kabsi.at) (Ping timeout: 240 seconds)
[17:27:54] *** Joins: Danishman (~Danishman@2-104-144-110-cable.dk.customer.tdc.net)
[17:30:20] *** Joins: siyb1 (~siyb@h081217185055.dyn.cm.kabsi.at)
[17:31:11] *** Quits: epolanski (uid312403@2a03:5180:f:1::4:c453) (Quit: Connection closed for inactivity)
[17:31:58] *** Quits: nomic (~nomic@185.192.69.7) (Quit: Leaving)
[17:32:38] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[17:33:55] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[17:34:32] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[17:34:39] *** Quits: varaindemian (uid73404@2a03:5180:f:3::1:1ebc) (Quit: Connection closed for inactivity)
[17:35:30] *** Quits: derjanni (~textual@ip-88-153-100-48.hsi04.unitymediagroup.de) (Quit: Textual IRC Client: www.textualapp.com)
[17:37:13] *** Quits: Danishman (~Danishman@2-104-144-110-cable.dk.customer.tdc.net) (Quit: Leaving)
[17:38:34] *** Joins: pycode (~pycode@2001:b07:5d28:551:70c9:f6e9:8bc5:21fe)
[17:39:55] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Ping timeout: 256 seconds)
[17:40:01] *** Quits: Axy (~Axy@user/axy) (Read error: Connection reset by peer)
[17:42:03] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[17:43:34] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Killed (NickServ (GHOST command used by Sven_vB_)))
[17:43:37] *** Joins: Sven_vB_ (~sven@user/sven-vb/x-2094958)
[17:45:47] *** Joins: WishBoy (~WishBoy@user/wishboy)
[17:46:35] *** Quits: celphi (sid97751@user/celphi) (Ping timeout: 264 seconds)
[17:46:43] *** Quits: systemfault (sid267009@uxbridge.irccloud.com) (Ping timeout: 256 seconds)
[17:46:43] *** Quits: themaxdavitt_ (sid433050@hampstead.irccloud.com) (Ping timeout: 256 seconds)
[17:46:46] *** Quits: lebster (sid17131@hampstead.irccloud.com) (Ping timeout: 260 seconds)
[17:47:02] *** Quits: ljharb (sid43720@user/ljharb) (Ping timeout: 268 seconds)
[17:47:26] *** Quits: owlbynight (sid501016@tinside.irccloud.com) (Ping timeout: 250 seconds)
[17:47:32] *** Quits: statico (sid521804@user/statico) (Ping timeout: 240 seconds)
[17:47:32] *** Quits: notchris (sid181145@id-181145.hampstead.irccloud.com) (Ping timeout: 240 seconds)
[17:47:32] *** Quits: beowulf_ (sid116@2a03:5180:f:2::74) (Ping timeout: 240 seconds)
[17:47:32] *** Quits: DrowningElysium (sid190788@user/drowningelysium) (Ping timeout: 240 seconds)
[17:47:39] *** Quits: Ownix (sid11917@helmsley.irccloud.com) (Ping timeout: 268 seconds)
[17:47:47] *** Quits: JayDoubleu (sid339529@hampstead.irccloud.com) (Ping timeout: 264 seconds)
[17:47:51] *** Quits: onizu (uid373383@id-373383.uxbridge.irccloud.com) (Ping timeout: 250 seconds)
[17:47:51] *** Quits: KnownSyntax_ (sid233169@user/knownsyntax) (Ping timeout: 250 seconds)
[17:48:02] *** Quits: graingert (sid128301@2a03:5180:f::1:f52d) (Ping timeout: 240 seconds)
[17:48:02] *** Quits: snek (sid280155@2a03:5180:f:2::4:465b) (Ping timeout: 240 seconds)
[17:48:10] *** Quits: kraih (sid17075@mojo/destroy-all-humans/kraih) (Ping timeout: 260 seconds)
[17:48:10] *** Quits: jakesyl_ (sid56879@hampstead.irccloud.com) (Ping timeout: 260 seconds)
[17:48:10] *** Quits: shurane (sid132556@helmsley.irccloud.com) (Ping timeout: 260 seconds)
[17:48:10] *** Quits: andrew9184_ (sid416777@uxbridge.irccloud.com) (Ping timeout: 260 seconds)
[17:48:16] *** Quits: patchie (sid504252@ilkley.irccloud.com) (Ping timeout: 268 seconds)
[17:48:17] *** Quits: merpnderp (sid16744@hampstead.irccloud.com) (Ping timeout: 250 seconds)
[17:48:18] *** Quits: victor_ (sid208353@user/victor) (Ping timeout: 250 seconds)
[17:48:18] *** Quits: NiKaN (sid385034@helmsley.irccloud.com) (Ping timeout: 250 seconds)
[17:48:23] *** Quits: naeluh__ (sid95128@id-95128.lymington.irccloud.com) (Ping timeout: 264 seconds)
[17:48:23] *** Quits: aniruddha (uid340443@2a03:5180:f:3::5:31db) (Ping timeout: 264 seconds)
[17:48:23] *** Quits: rustyshackleford (uid236774@2a03:5180:f:1::3:9ce6) (Ping timeout: 264 seconds)
[17:48:25] *** Quits: poiqwepoiqwe (uid525840@hampstead.irccloud.com) (Ping timeout: 256 seconds)
[17:48:32] *** Quits: morgabra (sid500580@user/morgabra) (Ping timeout: 240 seconds)
[17:48:32] *** Quits: mexen (uid495612@user/mexen) (Ping timeout: 240 seconds)
[17:48:32] *** Quits: jsatk (sid304796@2a03:5180:f:1::4:a69c) (Ping timeout: 240 seconds)
[17:48:32] *** Quits: SrPx (sid108780@id-108780.uxbridge.irccloud.com) (Ping timeout: 240 seconds)
[17:48:38] *** Quits: itok_ (sid418430@ilkley.irccloud.com) (Ping timeout: 260 seconds)
[17:48:44] *** Quits: tcsc (sid145321@id-145321.lymington.irccloud.com) (Ping timeout: 250 seconds)
[17:48:44] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Ping timeout: 250 seconds)
[17:48:44] *** Quits: Manouchehri (sid384576@id-384576.hampstead.irccloud.com) (Ping timeout: 250 seconds)
[17:48:59] *** Quits: rickbutton (sid410078@id-410078.helmsley.irccloud.com) (Ping timeout: 264 seconds)
[17:48:59] *** Quits: gendl (sid100083@2a03:5180:f:4::1:86f3) (Ping timeout: 264 seconds)
[17:48:59] *** Quits: gitesh (uid423739@2a03:5180:f:3::6:773b) (Ping timeout: 264 seconds)
[17:49:02] *** Quits: redrambles (sid319583@id-319583.tinside.irccloud.com) (Ping timeout: 240 seconds)
[17:49:10] *** Quits: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com) (Ping timeout: 250 seconds)
[17:49:29] *** Quits: ggnoredo (~user@212.98.236.50) (Remote host closed the connection)
[17:49:32] *** Quits: hughrawlinson_ (sid11243@2a03:5180:f:3::2beb) (Ping timeout: 240 seconds)
[17:49:35] *** Quits: gas51627 (uid91066@id-91066.helmsley.irccloud.com) (Ping timeout: 264 seconds)
[17:49:35] *** Quits: Argorok (sid195487@id-195487.hampstead.irccloud.com) (Ping timeout: 264 seconds)
[17:49:35] *** Quits: _0x1d3 (sid43116@2a03:5180:f::a86c) (Ping timeout: 264 seconds)
[17:49:35] *** Quits: llinguini (sid257922@2a03:5180:f:4::3:ef82) (Ping timeout: 264 seconds)
[17:49:35] *** Quits: Lewix_ (sid158496@2a03:5180:f::2:6b20) (Ping timeout: 264 seconds)
[17:49:35] *** Quits: jwpapi (sid502614@id-502614.uxbridge.irccloud.com) (Ping timeout: 250 seconds)
[17:49:35] *** Quits: ross (sid305269@user/ross) (Ping timeout: 250 seconds)
[17:49:36] *** Quits: earendel (uid498179@user/earendel) (Ping timeout: 250 seconds)
[17:52:23] *** Joins: merpnderp (sid16744@hampstead.irccloud.com)
[17:52:39] *** Joins: tcsc (sid145321@lymington.irccloud.com)
[17:52:53] *** Joins: Lewix_ (sid158496@tinside.irccloud.com)
[17:52:56] *** Joins: onizu (uid373383@uxbridge.irccloud.com)
[17:52:58] *** Joins: fweht (uid404746@lymington.irccloud.com)
[17:53:07] *** Joins: jwpapi (sid502614@uxbridge.irccloud.com)
[17:53:10] *** Joins: Argorok (sid195487@hampstead.irccloud.com)
[17:53:14] *** Joins: morgabra (sid500580@user/morgabra)
[17:53:18] *** Joins: lebster (sid17131@hampstead.irccloud.com)
[17:53:26] *** Joins: ross (sid305269@user/ross)
[17:53:27] *** Joins: earendel (uid498179@user/earendel)
[17:53:28] *** Joins: kraih (sid17075@mojo/destroy-all-humans/kraih)
[17:53:33] *** Joins: lind{at}yahoo (uid486956@tinside.irccloud.com)
[17:53:38] *** Joins: jakesyl_ (sid56879@hampstead.irccloud.com)
[17:53:38] *** Joins: patchie (sid504252@ilkley.irccloud.com)
[17:54:02] *** Joins: NiKaN (sid385034@helmsley.irccloud.com)
[17:54:04] *** Joins: itok_ (sid418430@ilkley.irccloud.com)
[17:54:09] *** Joins: DrowningElysium (sid190788@user/drowningelysium)
[17:54:10] *** Joins: llinguini (sid257922@hampstead.irccloud.com)
[17:54:10] *** Joins: hughrawlinson_ (sid11243@ilkley.irccloud.com)
[17:54:14] *** Joins: themaxdavitt_ (sid433050@hampstead.irccloud.com)
[17:54:16] *** Joins: snek (sid280155@lymington.irccloud.com)
[17:54:18] *** Joins: gendl (sid100083@hampstead.irccloud.com)
[17:54:18] *** Joins: arthur_melo (~IRC@user/arthur-melo/x-6822691)
[17:54:21] *** Joins: naeluh__ (sid95128@lymington.irccloud.com)
[17:54:21] *** Joins: Manouchehri (sid384576@hampstead.irccloud.com)
[17:54:26] *** Joins: statico (sid521804@user/statico)
[17:54:34] *** Joins: graingert (sid128301@tinside.irccloud.com)
[17:54:35] *** Joins: _0x1d3 (sid43116@tinside.irccloud.com)
[17:54:41] *** Joins: gas51627 (uid91066@helmsley.irccloud.com)
[17:54:44] *** Joins: victor_ (sid208353@tinside.irccloud.com)
[17:54:48] *** Joins: KnownSyntax_ (sid233169@hampstead.irccloud.com)
[17:54:50] *** Joins: aniruddha (uid340443@ilkley.irccloud.com)
[17:54:54] *** Joins: systemfault (sid267009@uxbridge.irccloud.com)
[17:55:06] *** Joins: beowulf_ (sid116@lymington.irccloud.com)
[17:56:28] *** Quits: DrowningElysium (sid190788@user/drowningelysium) (Client Quit)
[17:56:51] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[17:57:31] *** Joins: Axy (~Axy@user/axy)
[17:58:06] *** Quits: Sven_vB_ (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[17:58:11] *** Quits: EgonX (~EgonX@c-73-115-70-244.hsd1.tx.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[17:58:51] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[17:59:02] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 240 seconds)
[18:00:20] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:2d85:38b9:f7f3:5e1)
[18:00:54] *** Joins: celphi (sid97751@user/celphi)
[18:03:27] *** Quits: Axy (~Axy@user/axy) (Read error: Connection reset by peer)
[18:03:53] *** Quits: kongzilla (~weechat@gateway/tor-sasl/kongzilla) (Quit: kongzilla)
[18:04:09] *** Joins: notchris (sid181145@hampstead.irccloud.com)
[18:04:15] *** Joins: poiqwepoiqwe (uid525840@hampstead.irccloud.com)
[18:04:29] *** Joins: JayDoubleu (sid339529@hampstead.irccloud.com)
[18:04:29] *** Joins: jsatk (sid304796@helmsley.irccloud.com)
[18:04:45] *** Joins: ljharb (sid43720@user/ljharb)
[18:04:45] *** Joins: Ownix (sid11917@helmsley.irccloud.com)
[18:04:48] *** Joins: shurane (sid132556@helmsley.irccloud.com)
[18:04:53] *** Joins: rustyshackleford (uid236774@helmsley.irccloud.com)
[18:07:07] *** Joins: Axy (~Axy@user/axy)
[18:07:10] *** Quits: Axy (~Axy@user/axy) (Read error: Connection reset by peer)
[18:07:17] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Ping timeout: 264 seconds)
[18:08:29] *** Joins: silly (~silly@user/silly)
[18:09:14] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Ping timeout: 268 seconds)
[18:11:16] *** Joins: derjanni (~Hans@ip-88-153-100-48.hsi04.unitymediagroup.de)
[18:11:33] *** Joins: silverdust (~silverdus@user/silverdust)
[18:13:55] *** Quits: jurjen (~jurjen@83.232.63.97) (Ping timeout: 256 seconds)
[18:14:26] *** Joins: owlbynight (sid501016@tinside.irccloud.com)
[18:14:30] *** Joins: andrew9184_ (sid416777@uxbridge.irccloud.com)
[18:14:37] *** Joins: gitesh_ (uid423739@ilkley.irccloud.com)
[18:14:41] *** Joins: SrPx (sid108780@uxbridge.irccloud.com)
[18:15:00] *** Joins: Pixi_ (~Pixi@user/pixi)
[18:15:49] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[18:15:50] *** Quits: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Read error: Connection reset by peer)
[18:16:02] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[18:17:34] *** Quits: Pixi (~Pixi@user/pixi) (Ping timeout: 260 seconds)
[18:17:56] *** Joins: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[18:18:01] *** Joins: sebastorama (~sebastora@190.83.56.68)
[18:18:25] *** Joins: zsoc (~zsoc@cpe-24-168-59-34.hvc.res.rr.com)
[18:18:39] *** Quits: arthur_melo (~IRC@user/arthur-melo/x-6822691) (Remote host closed the connection)
[18:18:58] *** Joins: arthur_melo (~IRC@user/arthur-melo/x-6822691)
[18:21:21] *** Joins: mimmy (~mimmy@72.142.88.18)
[18:22:44] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:d928:97aa:ec46:572)
[18:22:59] *** Joins: bilbo (~bilbo@host-37-191-190-173.lynet.no)
[18:23:51] *** Joins: redrambles (sid319583@tinside.irccloud.com)
[18:24:00] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:d928:97aa:ec46:572) (Client Quit)
[18:24:34] *** Joins: rickbutton (sid410078@helmsley.irccloud.com)
[18:24:50] *** Quits: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com) (Ping timeout: 246 seconds)
[18:25:17] *** Quits: CiaoSen (~Jura@p200300c95730dd002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 264 seconds)
[18:26:44] *** gitesh_ is now known as gitesh
[18:27:41] *** Joins: Guest50 (~Guest50@209.202.223.146)
[18:28:13] <ThePhilgrim> Hey, if I have a class with Constructor(foo) {this.foo = foo} – Is there a way to ensure that foo is a number when I instantiate the class?
[18:30:37] *** Quits: sebastorama (~sebastora@190.83.56.68) (Read error: Connection reset by peer)
[18:31:46] <derjanni> ThePhilgrim: I guess you have to do a type check and conversion or throw when it's not.
[18:32:37] <ThePhilgrim> Hmm, okay. Can I try/catch in a constructor?
[18:32:38] <derjanni> constructor(foo) {if(isNaN(foo)){throw "WTF?!";}else{this.foo = foo;}}
[18:32:48] <derjanni> Sure, you can
[18:32:57] <ThePhilgrim> awesome
[18:33:07] <ThePhilgrim> Thanks!
[18:33:12] <derjanni> constructor(foo) {if(isNaN(foo)){this.foo = Number(foo);}else{this.foo = foo;}}
[18:33:31] <derjanni> constructor(foo) {if(isNaN(foo)){this.foo = Number(foo) ?? 0;}else{this.foo = foo;}}
[18:35:47] *** Quits: mimmy (~mimmy@72.142.88.18) (Ping timeout: 264 seconds)
[18:37:53] <dminuoso> ThePhilgrim: So the ideal way to do this is to look into typescript or flow type
[18:38:23] <dminuoso> Runtime checking you're being passes values of correct shape leads to a variety of hard to solve problems
[18:39:25] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Ping timeout: 250 seconds)
[18:40:54] *** Quits: Nitrousoxide (~msdos@user/nitrousoxide) (Ping timeout: 260 seconds)
[18:43:32] *** Joins: Nitrousoxide (~msdos@user/nitrousoxide)
[18:47:44] *** Joins: mimmy (~mimmy@72.142.88.18)
[18:48:21] *** Joins: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp)
[18:50:47] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Ping timeout: 264 seconds)
[18:50:57] *** Joins: pulse (~pulse@user/pulse)
[18:51:23] *** Quits: earendel (uid498179@user/earendel) (Quit: Connection closed for inactivity)
[18:55:02] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 240 seconds)
[18:55:43] *** Quits: KnownSyntax_ (sid233169@hampstead.irccloud.com) ()
[18:56:19] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 250 seconds)
[18:58:32] *** Joins: KnownSyntax (sid233169@user/knownsyntax)
[19:00:18] *** Quits: Guest50 (~Guest50@209.202.223.146) (Quit: Client closed)
[19:02:15] *** Joins: sebastorama (~sebastora@190.83.56.68)
[19:03:00] *** Quits: arthur_melo (~IRC@user/arthur-melo/x-6822691) (Quit: arthur_melo)
[19:10:42] *** Quits: undefined_bob (~undefined@user/undefined-bob/x-5411918) (Quit: WeeChat 1.5)
[19:15:50] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[19:16:22] *** Quits: rcoote (~rcoote@ip-176-198-113-0.hsi05.unitymediagroup.de) (Ping timeout: 260 seconds)
[19:19:29] *** Joins: yaalon (~yaalon@24.243.76.137)
[19:20:56] *** Joins: pycode1 (~pycode@93-40-5-81.ip36.fastwebnet.it)
[19:22:37] *** Quits: pycode (~pycode@2001:b07:5d28:551:70c9:f6e9:8bc5:21fe) (Ping timeout: 268 seconds)
[19:22:50] *** Joins: sam_1 (~sam_1@87.51.251.118)
[19:23:51] *** Quits: Nitrousoxide (~msdos@user/nitrousoxide) (Ping timeout: 268 seconds)
[19:25:53] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:4d31:a4ee:9ed0:329b)
[19:26:19] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[19:26:42] *** Joins: Nitrousoxide (~msdos@user/nitrousoxide)
[19:27:16] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:4d31:a4ee:9ed0:329b) (Client Quit)
[19:27:34] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 268 seconds)
[19:30:23] *** Quits: yaalon (~yaalon@24.243.76.137) (Remote host closed the connection)
[19:32:13] *** Quits: APic (apic@apic.name) (Quit: [TLS] Client upgrade)
[19:32:40] *** Joins: APic (apic@apic.name)
[19:35:05] *** Joins: earendel (uid498179@user/earendel)
[19:40:00] *** Quits: gas51627 (uid91066@helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[19:40:16] *** Joins: node1 (~node1@user/node1)
[19:40:34] *** Quits: kogepan_ (~kogepan@user/kogepan) (Quit: Leaving)
[19:41:15] *** Joins: src (~src@user/src)
[19:43:37] *** Quits: irrgit_ (~irrgit@192.241.175.183) (Remote host closed the connection)
[19:46:41] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 268 seconds)
[19:46:58] *** Quits: aniruddha (uid340443@ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[19:47:18] *** Joins: yaalon (~yaalon@24.243.76.137)
[19:49:17] *** Quits: yaalon (~yaalon@24.243.76.137) (Read error: Connection reset by peer)
[19:49:52] *** Joins: yaalon (~yaalon@24.243.76.137)
[19:52:01] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[19:52:33] *** edro is now known as edr
[19:52:55] *** Quits: yaalon (~yaalon@24.243.76.137) (Remote host closed the connection)
[19:53:14] *** Joins: yaalon (~yaalon@24.243.76.137)
[19:56:25] *** Joins: yaalon_ (~yaalon@24.243.76.137)
[19:57:10] *** Quits: yaalon (~yaalon@24.243.76.137) (Read error: Connection reset by peer)
[19:59:12] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[20:00:58] <ThePhilgrim> Installing prompt-sync gives me "3 moderate severity vulnerabilities – To address all issues (including breaking changes), run: npm audit fix --force",
[20:01:02] <ThePhilgrim> Is this something I should do?
[20:01:15] <ThePhilgrim> Or do these 3 vulnerabilities not matter?
[20:02:05] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Ping timeout: 268 seconds)
[20:02:48] *** Joins: nomic (~nomic@185.192.69.7)
[20:04:33] *** Quits: h4b17s (~h4b17s@94.140.9.188) (Quit: WeeChat 3.3)
[20:09:32] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[20:09:38] *** Joins: sam_1 (~sam_1@87.51.251.118)
[20:11:30] *** Joins: CiaoSen (~Jura@p5dcc1a24.dip0.t-ipconnect.de)
[20:13:18] *** Quits: machinehum (~machinehu@2604:3d08:937e:d600::4da2) (Quit: WeeChat 3.3)
[20:15:18] *** Quits: yaalon_ (~yaalon@24.243.76.137) (Remote host closed the connection)
[20:18:25] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[20:18:40] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[20:21:02] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 246 seconds)
[20:22:02] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[20:22:38] <ljharb> ThePhilgrim you’d use typeof foo === ‘number’
[20:22:51] *** Joins: yaalon (~yaalon@24.243.76.137)
[20:22:59] <ljharb> isNaN checks for a non-NaN number, which may be what you want but isn’t what you asked for
[20:23:23] <ljharb> dminuoso: false; runtime checks are the only way to solve those hard problems, and you should have them even when using a type system.
[20:23:30] *** Joins: i0e (~is0ke3@user/is0ke3)
[20:24:00] *** Quits: kmh (~kmh@2a00:6020:5004:6800:5e1e:1234:c6b9:3ab) (Quit: Leaving)
[20:28:12] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[20:29:15] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[20:29:37] *** Quits: yaalon (~yaalon@24.243.76.137) (Read error: Connection reset by peer)
[20:32:11] *** Joins: spronkey (~spronkey@203.86.199.163)
[20:32:19] *** Joins: rcoote (~rcoote@ip-176-198-113-0.hsi05.unitymediagroup.de)
[20:33:23] *** Joins: sam_1 (~sam_1@87.51.251.118)
[20:33:28] *** Quits: spronkey (~spronkey@203.86.199.163) (Client Quit)
[20:35:01] *** Joins: rr (~rr@146-241-73-74.dyn.eolo.it)
[20:36:16] *** Quits: onizu (uid373383@uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[20:36:39] *** Quits: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net) (Quit: Leaving...)
[20:36:52] *** Joins: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net)
[20:37:24] *** Parts: rr (~rr@146-241-73-74.dyn.eolo.it) ()
[20:38:12] *** Joins: vladoski (~vladoski@2001:b07:add:d406:3c91:4335:8b8a:b120)
[20:40:32] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 240 seconds)
[20:43:17] *** Quits: obimod (~obimod@gateway/vpn/pia/obimod) (Ping timeout: 264 seconds)
[20:43:38] *** Joins: obimod (~obimod@gateway/vpn/pia/obimod)
[20:43:54] *** Joins: whatsupdoc (uid509081@hampstead.irccloud.com)
[20:43:56] *** Joins: alystair (~alystair@user/alystair)
[20:47:24] *** Quits: sebastorama (~sebastora@190.83.56.68) (Read error: Connection reset by peer)
[20:49:49] *** Trieste_ is now known as Trieste
[20:52:18] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[20:52:26] *** Quits: brachamh (~brachamh@user/brachamh) (Ping timeout: 260 seconds)
[20:53:17] *** Joins: sam_1 (~sam_1@87.51.251.118)
[20:54:44] *** Joins: Rockwood (~Rocky@user/rocky)
[20:56:53] *** Joins: brachamh (~brachamh@user/brachamh)
[20:57:26] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 246 seconds)
[20:57:39] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 250 seconds)
[20:57:48] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[20:58:32] *** Joins: h4b17s (~h4b17s@94.140.9.188)
[20:58:53] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[20:59:42] <FlorianBad> Nothing wrong in having a reference to an object be a const while the original object is a var, and then modifying the original through the new one? e.g.   `var obj = { foo : 5 }; const o = obj; o.foo++; o.newVar = 6; `   I know it works but I wonder if it's very future-proof
[20:59:55] *** Joins: AtomicInteger (~primamate@p200300ee170ca500e482c2a05d384488.dip0.t-ipconnect.de)
[21:01:10] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Quit: Cya soon!)
[21:01:23] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Client Quit)
[21:01:31] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[21:01:44] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[21:02:39] <systemfault> You can't modify a const, it's just that maybe you don't understand what it des
[21:02:44] <systemfault> *does
[21:02:59] <systemfault> "const" doesn't mean "immutable", it means "variable cannot be reassigned"
[21:03:01] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[21:03:08] *** Quits: brachamh (~brachamh@user/brachamh) (Ping timeout: 268 seconds)
[21:03:23] *** Quits: N4buc0 (~N4buc0@2804:7f4:3487:cd22:b02b:8ce5:bf19:5b10) (Remote host closed the connection)
[21:03:44] *** Joins: N4buc0 (~N4buc0@2804:7f4:3487:cd22:b02b:8ce5:bf19:5b10)
[21:04:19] <renlo> hey everybody
[21:05:11] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 264 seconds)
[21:05:48] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[21:05:49] <Rockwood> systemfault, o/
[21:07:01] <renlo> interesting to see the same people here from yesteryear lol
[21:07:53] *** Quits: mimmy (~mimmy@72.142.88.18) (Ping timeout: 256 seconds)
[21:08:22] *** Joins: i0e (~is0ke3@user/is0ke3)
[21:12:03] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[21:17:09] *** Joins: Xavier7 (~O_o@179.6.138.143)
[21:18:21] <ThePendulum> 🍑💨
[21:18:24] <ThePendulum> whop, pardon
[21:19:35] *** Joins: mimmy (~mimmy@72.142.88.18)
[21:20:09] *** Quits: N4buc0 (~N4buc0@2804:7f4:3487:cd22:b02b:8ce5:bf19:5b10) (Remote host closed the connection)
[21:20:16] *** Joins: N4buc0- (~N4buc0@179.186.178.29.dynamic.adsl.gvt.net.br)
[21:20:29] *** Quits: ThePhilgrim (~thephilgr@151.41.185.44) (Remote host closed the connection)
[21:21:01] *** Joins: ThePhilgrim (~thephilgr@151.41.185.44)
[21:21:07] *** Joins: pycode2 (~pycode@2001:b07:5d28:551:70c9:f6e9:8bc5:21fe)
[21:21:14] *** Quits: pycode1 (~pycode@93-40-5-81.ip36.fastwebnet.it) (Remote host closed the connection)
[21:24:41] <dminuoso> ljharb: That's nonsense. It's a hard problem only if the language was not designed with this in mind.
[21:25:14] <dminuoso> Languages designed around a type system do not require these runtime checks, as usually you even prove formal correctness of said type systems.
[21:25:23] *** Quits: ThePhilgrim (~thephilgr@151.41.185.44) (Ping timeout: 250 seconds)
[21:26:02] <dminuoso> If in OCaml, SML or Haskell a confusion between types would ever occur, it would flat out lead to memory corruption. These languages dont come with runtime checks at all, and programs dont ever crash that way.
[21:26:17] <dminuoso> It's mostly a discipline question
[21:26:36] *** Quits: fweht (uid404746@lymington.irccloud.com) (Quit: Connection closed for inactivity)
[21:27:21] *** Joins: sam_1 (~sam_1@87.51.251.118)
[21:27:22] <dminuoso> Otherwise the reality becomes, you'd have to insert runtime checks on *every* function and api interface for *every* value passes. And then this becomes an error handling problem
[21:27:41] <dminuoso> And this is not a good solution for that hard problem
[21:27:51] <ljharb> dminuoso: yes they do
[21:28:01] <dminuoso> No they dont.
[21:28:02] <ljharb> dminuoso: a) neither typescript nor flow is a sound type system; soundness is required for what you're saying
[21:28:21] <dminuoso> ljharb: Formally there are almost no sound type systems because all of them backdoors
[21:28:21] <ljharb> dminuoso: b) neither typescript nor flow can ensure the type of data coming from the user, the network, or the filesystem
[21:28:27] <dminuoso> Say in Haskell we have unsafeCoerce
[21:28:31] <dminuoso> People just dont use it.
[21:28:34] <ljharb> dminuoso: so *guaranteed* your codebase is brittle if you lack runtime checks
[21:28:45] <ljharb> and yes, you do have to have runtime checks on every function, everywhere, no exceptions, always
[21:28:52] <ljharb> you can *also* have types
[21:28:59] <ljharb> but types aren't a solution, they're a build-time optimistic convenience
[21:28:59] <dminuoso> Let's just settle on we disagree.
[21:29:09] <ljharb> also, typescript will tell you things are fine that still error in production
[21:29:20] <ljharb> for example, TS thinks the types of `Object.create(null).toString()` are a-ok
[21:29:31] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@46.109.76.104)
[21:29:36] <dminuoso> I find that proponents of runtime checks happen to be folks happily using languages with poor or no type systems, and proponents of type systems happen to be folks using languages with strong and expressive type systems.
[21:29:37] <ljharb> so it's not a thing that can be disagreed with; it's a fact, and one the TS team themselves admits to frequently
[21:29:49] <dminuoso> Okay, you win.
[21:29:52] <ljharb> dminuoso: sure, people want what they're familiar with
[21:29:59] *** Quits: johnjay (~pi@192.142.100.50) (Ping timeout: 256 seconds)
[21:30:01] <ljharb> but that doesn't change that a TS codebase with no runtime typechecks is *guaranteed* to be broken
[21:30:16] <dminuoso> ljharb: It's not *guaranteed*
[21:30:19] <dminuoso> You're exaggerating here.
[21:30:37] <dminuoso> Perhaps this has been your experience in the majority of some cases.
[21:30:38] <Ronalds_Mazitis_> hey, I'm using three.js in this mmorpg game 3d game  and there is .fbx files it feeds into
[21:30:41] <Ronalds_Mazitis_> my deal is
[21:30:43] <dminuoso> My experience has been vastly different
[21:31:18] <Ronalds_Mazitis_> right now, there are no physics between game and these "holograms" I push inside game
[21:31:32] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 240 seconds)
[21:31:52] <Ronalds_Mazitis_> I should write a code that responds to nodes found on xyz line...
[21:31:58] <Ronalds_Mazitis_> or something like that
[21:32:51] *** Joins: yaalon (~yaalon@24.243.76.137)
[21:32:56] *** Quits: yaalon (~yaalon@24.243.76.137) (Remote host closed the connection)
[21:33:29] <Decker> Ronalds_Mazitis_ there's several phsyics engines that integrate with three.js ... depending on what you want/need
[21:33:32] *** Joins: Deneb (~johnch@117.111.189.80.dyn.plus.net)
[21:35:02] <Decker> https://pmndrs.github.io/cannon-es/docs/index.html https://sbcode.net/threejs/physics-cannonjs/   there's this https://github.com/lo-th/Oimo.js/ which is a little smalelr
[21:35:27] <ljharb> dminuoso: i would bet real money that you can't show me a typescript codebase, one without runtime checks, that i can't break in production by providing mistyped data
[21:35:28] <renlo> is lj team ts yet
[21:35:55] <ljharb> renlo: maybe if it's ever capable of typing all javascript. today is not that day, and tomorrow won't be either
[21:36:59] *** Quits: voltage_ (voltage@user/voltage) (Ping timeout: 264 seconds)
[21:37:01] <dminuoso> ljharb: I agree that typescript is far from ideal, but the problem domain sort of demands free interop with untyped code bases...
[21:38:57] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:5811:1ea8:8cab:4910) (Quit: Textual IRC Client: www.textualapp.com)
[21:39:18] *** Joins: ThePhilgrim (~thephilgr@151.41.185.44)
[21:39:50] *** Joins: johnjay (~pi@192.142.100.50)
[21:40:06] *** Quits: rcoote (~rcoote@ip-176-198-113-0.hsi05.unitymediagroup.de) (Ping timeout: 260 seconds)
[21:43:10] <Ronalds_Mazitis_> Decker I am using https://github.com/lv88h/Quick_3D_MMORPG
[21:43:20] *** Joins: teut (~teut@223.182.71.245)
[21:43:50] <Decker> Ronalds_Mazitis_ how? the documention is non existant?
[21:44:19] <Ronalds_Mazitis_> there is youtube video how dude mumbles around the making of the game
[21:44:44] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: WeeChat 3.3)
[21:44:53] <teut> https://dpaste.org/WmEq  how to improve this class code?
[21:44:54] <Ronalds_Mazitis_> I could try to integrate one those examples You gave me
[21:45:11] <teut> mainly the setAttribute method
[21:45:22] <Decker> Ronalds_Mazitis_ what sort of things do you have?  Physics engines are best if you can use a simple approximation of a thing
[21:45:29] *** Joins: k4rt0ff31ch33t4h (~k4rt0ff3l@92-249-237-69.pool.digikabel.hu)
[21:45:59] <teut> also the filters here is to be passed as a dict , which the user of the class cannot know if docs are not provided
[21:46:01] <Deide> Types don't do automatic parsing. You still need to parse (or validate) in any language that deals with data from the environment
[21:46:02] <Ronalds_Mazitis_> well it has login, then you get in the game, where there are biomes populated by random things
[21:46:30] <teut> so in vscode on hovering I the person cant know whats to be passed
[21:46:40] <Ronalds_Mazitis_> I made a bit change and added functionality to add things manually
[21:47:02] <Ronalds_Mazitis_> adding physics would make this legit
[21:47:10] <Decker> if it's simple you could just compare distances and prevent them from being N close together?
[21:47:20] <Ronalds_Mazitis_> there are mountains in the game too
[21:47:24] <Decker> you said 2d, but... is it really lke a 2d world?
[21:47:32] <Ronalds_Mazitis_> no it's 3d
[21:47:47] *** Quits: gitesh (uid423739@ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[21:48:20] <Ronalds_Mazitis_> https://www.youtube.com/watch?v=IptkgFOoci0&t=789s
[21:48:20] <skillbot> YouTube Title: I Tried Making a 3D MMORPG Game in JavaScript
[21:48:35] <Decker> https://doc.babylonjs.com/divingDeeper/physics  babylon I thought had better support - it's a library wrapped around three.js too
[21:48:38] <Deide> That said, once you do the parsing, types are useful to ensure well structured data (if, say, you limit the constructor of some type to it's parsing/validating function) is being passed around so you don't have to repeat the 'check' over and over again
[21:50:08] <renlo> Ronalds_Mazitis_: probably difficult to implement tbh. Might want to look into more general video game programming / paradigms to see how people typically do things like that
[21:51:11] <renlo> basically you'd need your world-objects to have some collision component, in addition to a renderable component; just because you render it in three.js doesnt nec mean you can drop in some physics lib
[21:51:33] <renlo> esp if the meshes are complex
[21:51:44] *** Quits: rustyshackleford (uid236774@helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[21:51:50] *** Quits: pycode2 (~pycode@2001:b07:5d28:551:70c9:f6e9:8bc5:21fe) (Quit: Leaving)
[21:51:58] <Ronalds_Mazitis_> I think there is something about collisions in code
[21:52:34] <Decker> capsules are probably enough
[21:52:50] <Decker> unless you're trying to do a physics sword play sim or something ;)
[21:52:53] <Ronalds_Mazitis_> Uploaded file: https://uploads.kiwiirc.com/files/fbb4bea892f8b039be1e62b8147b3caf/pasted.txt
[21:52:58] <Decker> (die by the sword)
[21:53:04] <Ronalds_Mazitis_> lol
[21:53:05] *** Quits: X-Scale (~ARM@31.22.202.101) (Ping timeout: 246 seconds)
[21:53:25] <Decker> right - 2d ground - you lied.
[21:53:31] <Ronalds_Mazitis_> oh ok
[21:53:34] *** Joins: X-Scale` (~ARM@165.201.137.78.rev.vodafone.pt)
[21:53:42] <Ronalds_Mazitis_> but the game is 3d
[21:53:46] <Decker> even if there's aheightmap that's just a fixed offste at any 2d point
[21:53:52] <Decker> ya but it's not
[21:53:57] <Decker> things don't jump
[21:54:08] <Ronalds_Mazitis_>  :D
[21:54:25] <Decker> and there's no overpass - or tunnels
[21:54:25] <Ronalds_Mazitis_> well
[21:54:43] <Ronalds_Mazitis_> any other similar game engine
[21:54:47] <Decker> or are you adding floating islands then?
[21:54:48] <Ronalds_Mazitis_> You would suggest?
[21:54:51] *** X-Scale` is now known as X-Scale
[21:55:17] <Ronalds_Mazitis_> it supposed to be something like real life simulator type thing
[21:55:18] <Decker> if that's been working for you it's pretty good :)
[21:55:46] <Ronalds_Mazitis_> jumping should not be issue
[21:55:49] <Ronalds_Mazitis_> y axis
[21:56:00] <Ronalds_Mazitis_> just collisions with something
[21:56:25] <Ronalds_Mazitis_> I once tried to write 2d game controller for a pokemone type game
[21:56:26] <Decker> so there are collisions?
[21:57:02] <Ronalds_Mazitis_>             collisions.push(nearby[i].entity);
[21:57:40] *** Joins: sheetjs_ (~sheetjs@pool-173-54-145-7.nwrknj.fios.verizon.net)
[21:57:55] *** Joins: voltage_ (voltage@user/voltage)
[22:00:23] *** Quits: vladoski (~vladoski@2001:b07:add:d406:3c91:4335:8b8a:b120) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:01:21] *** Quits: johnjay (~pi@192.142.100.50) (Ping timeout: 245 seconds)
[22:01:32] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[22:04:56] *** Quits: teut (~teut@223.182.71.245) (Quit: Client closed)
[22:09:22] <killown> how can I use string = 'é isso ai ok'; string.includes('e isso ai') to ignore accents and return True?
[22:12:39] *** Joins: teut (~teut@223.182.71.245)
[22:12:42] *** Quits: montybanksnyc (~montybank@pool-108-5-238-57.nwrknj.fios.verizon.net) (Read error: Connection reset by peer)
[22:12:43] *** Quits: ThePhilgrim (~thephilgr@151.41.185.44) (Remote host closed the connection)
[22:12:45] <teut> https://dpaste.org/k9Lh
[22:12:51] <teut> what does this error say?
[22:12:58] <teut> in that class only
[22:13:15] *** Joins: ThePhilgrim (~thephilgr@151.41.185.44)
[22:14:36] *** Quits: happymeal (~happymeal@user/happymeal) (Quit: https://www.endofthelinegaming.com -- A Team Fortress 2 community!)
[22:15:14] <renlo> killown: yourstring.normalize().includes('e isso ai')
[22:15:28] <renlo> i think
[22:16:07] <killown> renlo, what if {'é', 'ó'}
[22:16:14] <killown> how to normalize in this case
[22:17:00] *** Quits: bilbo (~bilbo@host-37-191-190-173.lynet.no) (Quit: Client closed)
[22:17:34] <teut>    https://bpa.st/HI2Q
[22:17:41] <teut> class with error
[22:17:47] *** Quits: ThePhilgrim (~thephilgr@151.41.185.44) (Ping timeout: 264 seconds)
[22:17:56] <ThePendulum> n> 'tést'.normalize()
[22:17:59] <jellobot> (okay) 'tést'
[22:18:38] *** Joins: johnjay (~pi@192.142.100.50)
[22:19:51] <renlo> killown: from interwebs
[22:20:26] <renlo> n> 'é isso ai ok'.normalize('NFD').replace(/[\u0300-\u036f]/g, '').contains('e isso ai')
[22:20:27] <jellobot> (fail) TypeError: "é isso ai ok".normalize(...).replace(...).contains is not a function
[22:21:13] *** Joins: yaalon (~yaalon@24.243.76.137)
[22:21:30] <renlo> n> 'é isso ai ok'.normalize('NFD').replace(/[\u0300-\u036f]/g, '').includes('e isso ai')
[22:21:31] <jellobot> (okay) true
[22:22:10] <renlo> the 'replace' removes the unicode accent characters, 'normalize' splits single unicode point (e with accent) into two characters (e + accent-character)
[22:22:22] *** Quits: yaalon (~yaalon@24.243.76.137) (Remote host closed the connection)
[22:22:46] <killown> renlo, I have an array ['á', 'é']
[22:22:56] <killown> the includes will check that
[22:23:00] <renlo> ?
[22:23:05] <renlo> I do not understand
[22:23:15] <killown> ['á', 'é'].includes('e')
[22:23:30] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 260 seconds)
[22:23:49] *** Quits: CiaoSen (~Jura@p5dcc1a24.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[22:24:03] <renlo> killown: use 'map'
[22:25:36] <renlo> n> ['á', 'é'].map(s => s.normalize('NFD').replace(/[\u0300-\u036f]/g, '')).includes('e')
[22:25:37] <jellobot> (okay) true
[22:26:08] <killown> renlo, thanks a lo t that's nice
[22:27:40] <killown> ['á', 'é', 'c'].map(s => s.normalize('NFD').replace(/[\u0300-\u036f]/g, '')).includes('ç') wont work
[22:29:16] *** Quits: johnjay (~pi@192.142.100.50) (Remote host closed the connection)
[22:29:24] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:34eb:13a1:c804:3b0)
[22:29:40] <renlo> killown: you need to normalize both the candidate set ([a, e, c]) and the target ('c' ... I cant make this symbol but hope you understand)
[22:30:19] <killown> I got that
[22:30:27] <killown> 'ç'.normilize()
[22:30:29] <killown> thank you
[22:30:54] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:34eb:13a1:c804:3b0) (Client Quit)
[22:31:52] <renlo> n> normalize = s => s.normalize('NFD').replace(/[\u0300-\u036f]/g, ''); ['á', 'é', 'c'].map(normalize).includes(normalize('ç'))
[22:31:53] <jellobot> (okay) true
[22:31:59] <renlo> killown: ^
[22:33:13] <killown> thanks a lot works perfec tly
[22:33:41] *** Quits: teut (~teut@223.182.71.245) (Quit: Client closed)
[22:35:59] *** Parts: paule32 (~paule32@user/paule32) (Leaving)
[22:36:51] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 256 seconds)
[22:38:42] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[22:41:15] <killown> you are good and fast renlo
[22:43:05] *** Joins: happymeal (~happymeal@user/happymeal)
[22:43:31] <ljharb> dminuoso: and that interop is yet another reason why runtime checks are critical
[22:48:21] <src> question about fields in JS, am I right in concluding that private fields are a new feature while the rest is syntactic sugar that allows for more sensible code factoring basically?
[22:49:06] *** Joins: kogepan (~kogepan@user/kogepan)
[22:49:21] <renlo> private fields iirc were added to EcmaScript 3, sugar is more recent addition
[22:49:35] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Ping timeout: 264 seconds)
[22:51:20] <src> I guess rephrasing slightly: private fields is something you need fields for, other uses of fields allow for more sensible refactoring but don't introduce any capability per se?
[22:52:34] *** Joins: pulse (~pulse@user/pulse)
[22:52:47] <ljharb> renlo: do you mean internal slots? not quite the same
[22:53:05] <ljharb> src: `class` itself isn’t purely sugar, and yes private fields are a new feature
[22:53:39] <ljharb> src: public fields let you be declarative instead of imperative, which is strictly better
[22:54:00] *** Quits: Deneb (~johnch@117.111.189.80.dyn.plus.net) (Quit: Leaving)
[22:54:12] <renlo> wasn't there a way to set a fields 'getter' to null or something, which was added in ES3? maybe mistaken
[22:54:33] <renlo> accessors were added in ES5 so I maybe was thinking of that
[22:54:33] <ljharb> renlo: getters and setters were added in ES5
[22:54:39] <ljharb> but that’s not fields
[22:54:44] <ljharb> fields are distinctly different
[22:54:49] <renlo> static?
[22:55:01] <ljharb> instance and static
[22:55:13] <ljharb> static fields tho are basically sugar
[22:55:13] <src> ljharb k, thanks as always, you're a treasure <3
[22:55:15] <renlo> I've been away too long lol
[22:56:04] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:02:00] <theskillwithin> still getting people who haven't seen the bad news in the topic
[23:02:41] <Rockwood> abt GJ?
[23:04:43] <renlo> wait ... tf .. GreenJello is dead?
[23:05:13] <theskillwithin> yes =[
[23:05:53] <silly> oh man, this feels like he's dying all over again. and again and again :(
[23:05:54] *** Joins: tlf (~tlf@mobile-166-176-248-229.mycingular.net)
[23:06:51] <Rockwood> theskillwithin, chk the PM please
[23:07:13] <theskillwithin> k
[23:07:17] *** Joins: harpia (~harpia@2804:2aec:205:1400:1a8b:e47a:9188:7f77)
[23:07:52] *** Joins: ThePhilgrim (~thephilgr@151.41.185.44)
[23:08:28] *** Joins: g0zart (~g0zart@gateway/vpn/pia/g0zart)
[23:08:33] <Ronalds_Mazitis_> why I can't add multiple Vector3 constants
[23:08:41] <Ronalds_Mazitis_> three.js
[23:09:07] *** Quits: electr0n (~electr0n@about/security/founder/electr0n) (Quit: WeeChat 3.3)
[23:09:10] *** Quits: derjanni (~Hans@ip-88-153-100-48.hsi04.unitymediagroup.de) (Quit: Textual IRC Client: www.textualapp.com)
[23:10:16] *** Joins: sam_1 (~sam_1@87.51.251.118)
[23:11:02] *** Quits: g0zart (~g0zart@gateway/vpn/pia/g0zart) (Remote host closed the connection)
[23:12:12] *** Joins: yaalon (~yaalon@24.243.76.137)
[23:14:50] *** Quits: stiv3n (~stiv3n@107.182.237.14) (Ping timeout: 260 seconds)
[23:15:57] <theskillwithin> Ronalds_Mazitis_ idk three.js have you looked at https://threejs.org/docs/index.html?q=vector#api/en/math/Vector3
[23:17:05] *** Quits: yaalon (~yaalon@24.243.76.137) (Ping timeout: 256 seconds)
[23:17:12] *** Joins: montybanksnyc (~montybank@pool-108-5-238-57.nwrknj.fios.verizon.net)
[23:20:13] <Ronalds_Mazitis_> I added       const _P = new THREE.Vector3();
[23:20:13] <Ronalds_Mazitis_>  in one file
[23:20:16] <Ronalds_Mazitis_> and
[23:20:29] <Ronalds_Mazitis_> other       const _P2 = new THREE.Vector3();
[23:20:32] <Ronalds_Mazitis_> in other file
[23:20:38] *** Joins: qswz (~caub@89-80-20-125.abo.bbox.fr)
[23:20:41] <Ronalds_Mazitis_> makes the character not move
[23:20:47] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Quit: !be back soon)
[23:21:07] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[23:21:36] <Ronalds_Mazitis_> ah I did loop
[23:22:01] <Rockwood> good nite
[23:22:18] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[23:22:44] <Ronalds_Mazitis_> I will need an multiple constants then
[23:22:48] <Ronalds_Mazitis_> this gets tricky
[23:23:03] *** Joins: gitesh (uid423739@ilkley.irccloud.com)
[23:23:21] *** Joins: zeromule (~eric@2601:602:8d80:4e50:808c:5edb:c14c:6907)
[23:24:02] *** Joins: faLUKE (~paolo@host-80-117-216-225.retail.telecomitalia.it)
[23:25:16] *** Joins: bpr_admin (~bpr_admin@2620:7e:30e0:1:58a2:1679:5be2:ccf4)
[23:27:27] *** Joins: yaalon (~yaalon@24.243.76.137)
[23:27:29] *** Quits: yaalon (~yaalon@24.243.76.137) (Remote host closed the connection)
[23:29:29] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[23:29:44] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[23:29:54] <faLUKE> hello. I know this is not vanilla js, but, anyway: I'm trying to modify the "A Panzoom instance within another Panzoom instance" example ( https://timmywil.com/panzoom/demo/#A%20Panzoom%20instance%20within%20another%20Panzoom%20instance ) so to keep the original size of the contained element while zooming the container.  Here's my attempt:  https://jsfiddle.net/Ld967asj/1/   (zoom in/out by using the mouse wheel) but there's
[23:29:55] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:29:56] <faLUKE> some error which I can't fix.
[23:30:58] *** Joins: bogdaniel (~bogdaniel@89.137.238.168)
[23:31:04] <Ronalds_Mazitis_> Uploaded file: https://uploads.kiwiirc.com/files/30ab68b2c9d5d46d5c2a4b7103079b47/pasted.txt
[23:31:16] <Ronalds_Mazitis_> I need for multiple P2 values
[23:31:18] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:31:26] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[23:31:52] <Ronalds_Mazitis_> for every novietojumi value should be one vector
[23:32:04] <Ronalds_Mazitis_> if anyone can code a bit here
[23:32:53] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:34:41] *** Joins: sebastorama (~sebastora@190.83.56.68)
[23:35:12] <faLUKE> (so sad for GreenJello, I can't believe it...)
[23:37:06] *** Joins: gehn (~gehn@user/gehn)
[23:43:02] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 240 seconds)
[23:43:36] *** Quits: muley (~muley@76-245-68-99.lightspeed.iplsin.sbcglobal.net) (Remote host closed the connection)
[23:44:49] *** Joins: muley (~muley@76-245-68-99.lightspeed.iplsin.sbcglobal.net)
[23:49:17] *** Quits: tlf (~tlf@mobile-166-176-248-229.mycingular.net) (Ping timeout: 246 seconds)
[23:51:19] <src> sorry for asking but given `method` `method2` and `method3` can someone explain the usage differences?
[23:51:28] <src> https://dpaste.com/6Z6CBBWU3
[23:51:58] <src> I should know the difference but somehow fail to grasp the great picture on why all those ways exist I guess
[23:53:45] <renlo> method is an instance field, method2 is prototype / class field, method3 is static field
[23:53:48] <ljharb> src: they’re very different
[23:53:58] <ljharb> src: method2 is on instances, method3 is only on the constructor
[23:54:06] <ljharb> so the this - the receiver - is very different.
[23:54:07] <renlo> method2 is on instance?
[23:54:18] <ljharb> yes
[23:54:27] <ljharb> if it doesn’t have “static”, it’s on the instance
[23:54:40] <silly> method2 is on prototype
[23:55:00] <src> ljharb, but `method` and `method3` are both on the constructor?
[23:55:03] <silly> method(1) is created on inititalizatio
[23:55:29] <silly> so you get a new method every time
[23:55:37] <silly> you create a new instance
[23:55:38] <ljharb> src: method is on the instance
[23:55:50] <ljharb> And yes, that’s terrible because it’s freshly created every time
[23:56:15] <renlo> src it's how they're used. method -> 'my_object.method()'; method2 -> object1 = new C(); object2 = new C(); object1.method2(), object1.method2() (uses the same function with a different 'this')
[23:56:16] <silly> the one on prototype method2 is always the same for every instance
[23:56:32] <renlo> method3 -> class-wide function, doesnt operate on any 'this'
[23:56:43] <FlorianBad> Can someone tell me if someone answered anything to my question a couple of hours ago? My logs don't go far enough.
[23:56:56] <silly> oh, method3 is like Array.isArray?
[23:57:09] <renlo> yes
[23:57:16] <silly> oic
[23:57:33] <renlo> `C.method3()` is an alternative to the `c.constructor.method3()`
[23:58:09] <src> (just a note, am reading, trying to understand, researching etc, I just need time to process)
[23:58:23] <renlo> it's pretty confusing imo
[23:58:25] *** Joins: yaalon (~yaalon@24.243.76.137)
[23:58:28] <renlo> welcome to JavaScripts! :P
[23:58:32] *** Quits: yaalon (~yaalon@24.243.76.137) (Remote host closed the connection)
[23:59:01] *** Quits: alystair (~alystair@user/alystair) (Ping timeout: 256 seconds)
