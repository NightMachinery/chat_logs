[00:05:51] *** Joins: rgrinberg (~textual@187.223.183.192)
[00:10:29] *** Quits: [relay]__ (~logicmoo@c-98-232-203-68.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[00:17:46] *** Quits: rgrinberg (~textual@187.223.183.192) (Ping timeout: 256 seconds)
[00:17:52] *** Quits: rogersm (~rogersm@90.166.180.250) (Quit: Leaving...)
[00:21:53] *** Joins: kwon-young (~kwon-youn@2001:861:3dc0:4400:d529:8d16:4de5:a4a0)
[00:31:31] *** Joins: rgrinberg (~textual@187.223.248.37)
[00:38:10] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 256 seconds)
[00:40:28] *** Joins: rgrinberg (~textual@187.223.248.37)
[01:00:50] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 256 seconds)
[01:07:20] *** Joins: rgrinberg (~textual@187.223.183.192)
[01:16:08] *** Quits: rgrinberg (~textual@187.223.183.192) (Ping timeout: 256 seconds)
[01:19:14] *** Joins: rgrinberg (~textual@187.223.218.43)
[01:29:35] *** Quits: danieli (~danieli@user/danieli) (Ping timeout: 250 seconds)
[01:30:04] *** Joins: danieli (~danieli@user/danieli)
[01:34:50] *** Quits: rgrinberg (~textual@187.223.218.43) (Ping timeout: 256 seconds)
[01:39:17] *** Joins: rgrinberg (~textual@187.223.248.37)
[01:53:32] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 256 seconds)
[02:00:46] *** Joins: rgrinberg (~textual@187.223.183.192)
[02:01:42] *** Quits: kwon-young (~kwon-youn@2001:861:3dc0:4400:d529:8d16:4de5:a4a0) (Ping timeout: 268 seconds)
[02:23:00] *** Quits: rgrinberg (~textual@187.223.183.192) (Ping timeout: 256 seconds)
[02:38:14] *** Joins: rgrinberg (~textual@187.223.183.192)
[02:42:50] *** Quits: rgrinberg (~textual@187.223.183.192) (Ping timeout: 256 seconds)
[03:10:05] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 252 seconds)
[03:12:32] *** Joins: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se)
[03:33:21] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:18b:fa2e:c948:1d68)
[04:17:53] *** Quits: dmiles_afk (~dmiles@c-98-232-203-68.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[04:55:45] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:18b:fa2e:c948:1d68) (Read error: Connection reset by peer)
[04:56:49] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:18b:fa2e:c948:1d68)
[04:57:39] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:18b:fa2e:c948:1d68) (Client Quit)
[06:31:24] *** Joins: rgrinberg (~textual@177.246.217.138)
[07:03:36] *** Joins: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net)
[07:31:07] *** Joins: yauhsien_ (~yauhsien@118-167-43-90.dynamic-ip.hinet.net)
[07:31:07] *** Quits: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net) (Read error: Connection reset by peer)
[07:31:19] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[08:22:16] *** Quits: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Ping timeout: 256 seconds)
[08:29:13] *** Quits: rgrinberg (~textual@177.246.217.138) (Read error: Connection reset by peer)
[08:30:32] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:18b:fa2e:c948:1d68)
[08:44:10] *** Joins: [relay]_ (~logicmoo@c-98-232-203-68.hsd1.wa.comcast.net)
[08:57:36] *** Joins: PrologMUD (~PrologMUD@c-98-232-203-68.hsd1.wa.comcast.net)
[09:11:51] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:18b:fa2e:c948:1d68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:33:54] *** Joins: rgrinberg (~textual@177.246.217.138)
[09:45:04] *** Quits: jealousmonk (~user@2804:431:e7c4:750a:e8f5:ebdf:f21a:128e) (Quit: ERC (IRC client for Emacs 27.1))
[09:49:55] *** Quits: RLa (~RLa@82.131.26.206.cable.starman.ee) (Quit: Client closed)
[09:55:28] *** Quits: rgrinberg (~textual@177.246.217.138) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:01:44] *** Joins: rgrinberg (~textual@177.246.219.153)
[10:10:05] *** Quits: PrologMUD (~PrologMUD@c-98-232-203-68.hsd1.wa.comcast.net) (Read error: No route to host)
[10:10:05] *** Quits: [relay]_ (~logicmoo@c-98-232-203-68.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[10:13:26] *** Joins: kwon-young (~kwon-youn@2001:861:3dc0:4400:d529:8d16:4de5:a4a0)
[10:21:32] *** Quits: rgrinberg (~textual@177.246.219.153) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:23:04] *** Quits: yauhsien_ (~yauhsien@118-167-43-90.dynamic-ip.hinet.net) (Remote host closed the connection)
[10:23:36] *** Joins: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net)
[10:33:42] *** Quits: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net) (Remote host closed the connection)
[10:34:16] *** Joins: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net)
[10:39:30] *** Quits: nitrix (~nitrix@user/nitrix) (Quit: ZNC 1.8.2 - https://znc.in)
[10:43:08] *** Joins: nitrix (~nitrix@user/nitrix)
[10:44:19] *** Quits: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net) (Remote host closed the connection)
[10:44:53] *** Joins: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net)
[10:45:22] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:18b:fa2e:c948:1d68)
[10:46:51] *** Joins: kwon-young_ (~kwon-youn@lcs07-lyo-176-188-228-64.sfr.lns.abo.bbox.fr)
[10:47:06] *** Quits: kwon-young (~kwon-youn@2001:861:3dc0:4400:d529:8d16:4de5:a4a0) (Ping timeout: 268 seconds)
[10:54:56] *** Quits: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net) (Remote host closed the connection)
[10:55:31] *** Joins: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net)
[11:05:33] *** Quits: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net) (Remote host closed the connection)
[11:06:08] *** Joins: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net)
[11:16:10] *** Quits: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net) (Remote host closed the connection)
[11:16:46] *** Joins: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net)
[11:26:48] *** Quits: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net) (Remote host closed the connection)
[11:27:23] *** Joins: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net)
[11:37:25] *** Quits: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net) (Remote host closed the connection)
[11:38:00] *** Joins: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net)
[11:48:02] *** Quits: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net) (Remote host closed the connection)
[11:48:37] *** Joins: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net)
[11:58:39] *** Quits: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net) (Remote host closed the connection)
[11:59:14] *** Joins: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net)
[12:18:47] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:18b:fa2e:c948:1d68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:46:29] *** Joins: [relay]_ (~logicmoo@c-98-232-203-68.hsd1.wa.comcast.net)
[13:52:48] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[14:40:39] *** Quits: [relay]_ (~logicmoo@c-98-232-203-68.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[15:41:35] *** Quits: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net) (Remote host closed the connection)
[15:42:10] *** Joins: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net)
[16:11:36] *** Quits: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net) (Remote host closed the connection)
[16:12:11] *** Joins: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net)
[16:12:40] *** Joins: [relay]_ (~logicmoo@c-98-232-203-68.hsd1.wa.comcast.net)
[16:53:54] *** Joins: pbmagi (~Thunderbi@host-92-14-106-162.as13285.net)
[17:16:27] <ns12> When is user "talismanick" going to be online? I want to ask a question about that user's interesting knowledge base project ...
[18:24:26] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:b9d4:dfb1:ac7d:59bf)
[18:24:27] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:b9d4:dfb1:ac7d:59bf) (Changing host)
[18:24:27] *** Joins: skapata (~Skapata@user/skapata)
[18:41:36] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[18:53:48] *** Joins: dmiles (~dmiles@c-98-232-203-68.hsd1.wa.comcast.net)
[18:53:48] *** dmiles is now known as dmiles_afk
[18:54:11] <dmiles_afk> .seen stis
[19:24:03] *** Joins: PrologMUD (~PrologMUD@c-98-232-203-68.hsd1.wa.comcast.net)
[19:29:49] *** Quits: pbmagi (~Thunderbi@host-92-14-106-162.as13285.net) (Ping timeout: 240 seconds)
[19:50:57] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[19:51:42] *** Joins: millido (~millido@84.210.150.128)
[20:12:49] *** Joins: pbmagi (~Thunderbi@host-92-14-106-162.as13285.net)
[20:15:38] *** Joins: jealousmonk (~user@2804:431:e7c4:750a:e8f5:ebdf:f21a:128e)
[20:37:24] <aindilis> I have a set of rewards (e.g. drinking a pop) and a set of tasks.  I want to reward myself some amount of three types of rewards (time, money, points) for tasks completed.  I want to dynamically price the rewards I earn for tasks as well as the price of the rewards.
[20:37:26] <aindilis> So for instance, if I drink pop a lot, the price of pop goes up.  If I don't drink pop a lot, the price of the reward goes down.
[20:37:56] <aindilis> (Some rewards can only be unlocked by completing certain tasks).
[20:38:24] <aindilis> Does anyone know where I could start to look into an algorithm to adjust the earnings for tasks and price of rewards?
[20:39:43] <aindilis> Another thing is it would be nice for the algorithm to take account of the extent and affordability of the rewards.
[20:40:25] <aindilis> So for instance, if I only have $80 discretionary funds per month..  it doesn't dispense them too liberally.  It should try to optimize the amount of work done per reward qualia.
[20:42:45] <aindilis> It should also take into account that some rewards are similar to each other, and that the user may be temporarily or permanently sick of a given reward.
[20:47:33] <aindilis> I was thinking about using Newton's method to price the items, with a time logarithmic decay
[20:51:53] <aindilis> Also, if a task raises or lowers in computed importance, the corresponding reward changes.
[20:53:39] <yauhsien> You want the price of some reward to go up by accessing times. Then do you want it to go down after some time interval?
[20:58:12] <yauhsien> IMO, the portfolio of rewards is some thing like the prolog_flags in SWI which are keep tracked in database.
[20:58:37] *** Joins: econo (uid147250@user/econo)
[20:59:32] <aindilis> yauhsien: yeah I'm tracking the rewards in Prolog.
[21:00:47] <aindilis> I have hasReward/3 - hasReward(Agents,Reward,costs([time(T),money(M),points(P)])).
[21:02:05] <aindilis> but I need a scheme whereby the demand or value to me of the different rewards is approached, hopefully somewhat optimally
[21:03:49] <yauhsien> you may want to use trie? as these https://www.swi-prolog.org/pldoc/man?section=trie
[21:05:06] <aindilis> (I was thinking of using newton's method when the reward is redeemed, and diminishing the cost of everything else by the difference, normalized)
[21:06:38] <aindilis> unfortunately, I've forgotten basic math, which makes this harder.  I want to relearn math, but I have a circular dependency in that I need self-discipline to relearn math, and a reward system eases that.
[21:13:10] <yauhsien> for example, when a pop as reward is redeemed, its price goes higher, and prices of other rewards go down at the same time?
[21:13:18] <aindilis> yeah
[21:13:57] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 240 seconds)
[21:13:57] <aindilis> (or otherwise, they could just have a slow expontential decay or something)
[21:14:41] <aindilis> but pretty sure there would be some mathematical theory behind all this. I suppose I could implement the naive method I just proposed, but I was hoping someone might know some relevant theory that would suggest a better approach.
[21:15:30] <yauhsien> you need some function as a lever.
[21:16:10] <aindilis> (I asked on economics, but was told that reward systems like this don't work psychologically-speaking, however I think there is still value to this approach, because it's a different context).
[21:16:58] <aindilis> the reason is, I'm not aiming to be optimally productive, but just to be *more* productive, even if only according to the metrics and not reality.
[21:17:38] <aindilis> and also, I'm trying to use rewards as a carrot, whereas currently I just have a pop whenever I want...
[21:18:42] <aindilis> trying to lock down all rewards, and mostly administer them as rewards for accomplishments.
[21:19:34] <aindilis> atTime([2022-1-8,17:30:39.999951616],deltaRewardForReason(credits,-300,reasonFn(redeemed(drink(energyDrink))))).
[21:19:35] <aindilis>  
[21:19:35] <aindilis>  
[21:19:36] <aindilis> atTime([2022-1-8,17:30:39.999951616],deltaRewardForReason(dollars,-1.5,reasonFn(redeemed(drink(energyDrink))))).
[21:19:38] <aindilis> atTime([2022-1-8,17:30:39.999951616],redeemed(drink(energyDrink))).
[21:21:48] <aindilis> hasReward([andrewDougherty],drink(energyDrink),cost(credits('300'),dollars('1.5'))).
[21:22:21] <aindilis> somehow have to alter the cost(_) using the deltaRewardForReason
[21:27:56] <aindilis> https://arxiv.org/pdf/2109.06505.pdf
[21:29:55] <aindilis> I think probably the cost should be computed from this reward log and current time, but not stored, since assert retract to KB would be wasteful (since every assert uses up the ID autoincrement).
[21:37:19] <aindilis> yauhsien: thanks for your help, I think I've stated the problem in enough detail..
[21:56:35] <yauhsien> first I'll take it by an easy way, that is, as i said, a lever function to change all the prices. As a MVP I'll make the function simple such as the upward price doubles and others divided by two.
[21:58:03] <aindilis> thanks! (another factor I just thought of is there should be an initial estimation of the value of the reward).
[21:58:42] <yauhsien> Before that, I have to abstract the cost part in deltaRewardForReason/3 and one in hasReward/3.
[21:59:21] <aindilis> say there are M rewards, and the user chooses one.  that one should double, so x_i = 2*x_i, but the other M-1 rewards should decrease by x_i/(M-1) iiuc.
[21:59:44] <aindilis> *should each decrease
[22:01:18] <aindilis> (* or rather, even as a percentage of their current value)
[22:01:47] <aindilis> such that Delta(x_i) = Sigma(Delta(x_j)) : j \= i.
[22:03:54] <aindilis> I suppose we could compute once, and then rely on in memory only asserts to temporarily store the values.  when program crashes/restarts, it recomputes and in-memory asserts.
[22:06:48] <aindilis> bbiab
[22:11:49] <jbalint_> hi
[22:14:37] <aindilis> hey
[22:14:48] <aindilis> jbalint_: do you see the backlog?
[22:18:37] <aindilis> it also occurs to me now that maybe having a fixed sum of prices for all rewards is not required or even desired
[22:22:25] <aindilis> for instance, we want prices to go up to the optimal point where "profit"(work) is maximized (so not all the way up to the maximum price the user is willing to pay).
[22:35:27] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[22:45:05] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[22:47:17] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[22:50:15] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 256 seconds)
[22:50:55] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[23:06:41] *** Quits: kwon-young_ (~kwon-youn@lcs07-lyo-176-188-228-64.sfr.lns.abo.bbox.fr) (Ping timeout: 256 seconds)
[23:15:31] *** Joins: kwon-young_ (~kwon-youn@lcs07-lyo-176-188-228-64.sfr.lns.abo.bbox.fr)
