[00:05:18] <FromDiscord> <greenb1ade> In reply to @Shinyzenith "the same call in": Random but what theme is that?
[00:38:37] <FromDiscord> <Bubblie> hey beef, I got this
[00:38:45] <FromDiscord> <Bubblie> sent a code paste, see https://play.nim-lang.org/#ix=3TcB
[00:38:46] <FromDiscord> <Bubblie> trying to run exactly the same code
[00:39:22] <FromDiscord> <Bubblie> sent a code paste, see https://play.nim-lang.org/#ix=3TcC
[00:39:36] <FromDiscord> <Bubblie> (edit) "https://play.nim-lang.org/#ix=3TcC" => "https://play.nim-lang.org/#ix=3TcD"
[00:39:46] <FromDiscord> <Bubblie> (edit) "https://play.nim-lang.org/#ix=3TcD" => "https://play.nim-lang.org/#ix=3TcE"
[00:39:46] <FromDiscord> <Bubblie> I pasted it without the import on accident
[00:40:03] <FromDiscord> <Bubblie> I was wondering if you knew anything about this, before I start trying to dive in for a windows fix
[01:06:32] *** Quits: k0mpjut0r (~k0mpjut0r@79.124.7.34) (Ping timeout: 240 seconds)
[01:13:31] <NimEventer> New thread by ArchNemesis3301: Runexe: Syntactic sugar for running/piping shell commands., see https://forum.nim-lang.org/t/9030
[01:14:58] *** Joins: lumo_e (~enrico@151.29.53.201)
[01:15:46] *** Quits: xet7 (~xet7@user/xet7) (Ping timeout: 245 seconds)
[01:32:47] *** Joins: xet7 (~xet7@user/xet7)
[01:38:28] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[01:53:45] *** Joins: xet7 (~xet7@user/xet7)
[01:54:47] <FromDiscord> <wsantos> I'm trying to do a DatabaseWrapper so my app can work with postgres or sqlite and I'm using generics for that, but I'm receiving this warning `generic methods are deprecated [Deprecated]`. My question is why and what are my options ?
[02:02:07] <FromDiscord> <hmmm> hmm I'm trying to & two strings but I'm getting  Error: type mismatch: got <void, string>
[02:03:44] <FromDiscord> <wsantos> In reply to @hmmm "hmm I'm trying to": Can you share a example on nim playground ?
[02:03:46] <FromDiscord> <ynfle> @hmmm What's the code?
[02:04:04] <FromDiscord> <ynfle> In reply to @wsantos "I'm trying to do": What are you using the generics for with methods?
[02:04:52] <FromDiscord> <hmmm> sent a code paste, see https://paste.rs/iGZ
[02:04:58] <FromDiscord> <wsantos> sent a code paste, see https://paste.rs/VIi
[02:05:03] <FromDiscord> <hmmm> the first is a proc that returns a string and the second is a string
[02:05:08] <FromDiscord> <hmmm> wtf
[02:05:15] <FromDiscord> <ynfle> In reply to @wsantos "this is my base": You don't need methods in that case
[02:05:36] <FromDiscord> <ynfle> In reply to @hmmm "hmm it's a bit": Are you sure it returns a string
[02:05:53] <FromDiscord> <wsantos> But this is just the base class, I'll have other for each type of DB, but I think you are right, I don't think I need method maybe
[02:05:58] <FromDiscord> <hmmm> lol I checked 3 times, I'll recheck, what is void btw
[02:07:00] <FromDiscord> <ynfle> In reply to @hmmm "lol I checked 3": Try `echo typeof generatePathUtils(i)`
[02:07:38] <FromDiscord> <ynfle> In reply to @wsantos "But this is just": Make 2 separate procs. One for `DatabaseWrapper[postgress connection]` and one for the other
[02:08:01] <FromDiscord> <ynfle> Make 2 classes that inherit from the `DatabaseWrapper` and drop the generic
[02:09:04] <FromDiscord> <hmmm> aaaaaaaaaaaa
[02:09:33] <FromDiscord> <hmmm> the forward declaration of that proc didn't match the proc lol üòÖ
[02:09:43] <FromDiscord> <hmmm> ty ynfle ‚ù§Ô∏è
[02:10:02] <FromDiscord> <wsantos> @ynfle I don't think I get it, but how should I be able to choose between without changing code ? Right now I store the typedef in the config to decide what to use.
[02:12:55] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 240 seconds)
[02:13:31] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[02:15:55] <FromDiscord> <ynfle> In reply to @hmmm "ty ynfle ‚ù§Ô∏è": üëç
[02:16:03] *** Joins: xet7 (~xet7@user/xet7)
[02:16:14] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[02:16:36] <FromDiscord> <ynfle> In reply to @wsantos "<@!767093711112241162> I don't think": What do you mean by "choose between them"?
[02:16:48] *** Joins: xet7 (~xet7@user/xet7)
[02:18:02] <FromDiscord> <wsantos> With generics I can use the typespec from db_sqilite or db_postgres as generic and everything fits, I don't see what you described working on my mind (I still new to nim, pardon me)
[02:18:32] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[02:19:02] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[02:19:53] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[02:26:26] <FromDiscord> <luteva> Hi! I am thinking about how c++ bindings could be written in nim and especially how/where/when destructors should be called. I mean: would it be a good idea to "bind" a nim object to a c++ object and automatically call the destructor when the nim object is collected by the gc (the reference counter sees no reference anymore)? Is that possible and if yes is it a good/practical idea? Are there any tutriols on how to do that or are there at l
[02:30:27] *** Joins: rockcavera (~rc@192.12.113.72)
[02:30:27] *** Quits: rockcavera (~rc@192.12.113.72) (Changing host)
[02:30:27] *** Joins: rockcavera (~rc@user/rockcavera)
[02:33:07] <FromDiscord> <Elegantbeef> I think you've described exactly how you're supposed to do it, though i could be wrong i've not done C++ interop‚Üµ(@luteva)
[02:35:07] <FromDiscord> <luteva> are there any tutorials? or at least some examples?
[02:36:16] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[02:36:28] <FromDiscord> <Elegantbeef> https://scripter.co/binding-nim-to-c-plus-plus-std-list/ is a tutorial for C++ interop, but dont know about destructors
[02:36:36] <FromDiscord> <wsantos> In reply to @ynfle "Make 2 classes that": Do you mind to show me a small example of what you mean ?
[02:38:27] <FromDiscord> <ynfle> @wsantos A couple options‚Üµhttps://play.nim-lang.org/#ix=3Td8
[02:38:30] <FromDiscord> <ynfle> Here's one
[02:39:59] <FromDiscord> <Elegantbeef> Why are you making it so complicated ynfle?
[02:40:01] <FromDiscord> <wsantos> Sure but with this one I'll need to update my code for every single new DB type
[02:40:14] <FromDiscord> <Elegantbeef> `proc open(dbConn: type T...`
[02:40:24] <FromDiscord> <Elegantbeef> What are we trying to do wsantos?
[02:41:08] <FromDiscord> <Elegantbeef> Easy overridable dispatch without OOP?
[02:41:18] <FromDiscord> <ynfle> In reply to @Elegantbeef "Why are you making": Overcomplicated is what my wife calls me ü§∑‚Äç‚ôÇÔ∏è
[02:41:21] <FromDiscord> <ynfle> Just kidding
[02:41:39] <FromDiscord> <ynfle> Why is it overly complicated
[02:41:58] <FromDiscord> <Elegantbeef> I mean you're making a generic procedure instead of using an implicit generic
[02:42:00] <FromDiscord> <Elegantbeef> It's a bit tedious
[02:42:10] <FromDiscord> <ynfle> In reply to @wsantos "Sure but with this": You just have separate proc defs for each one
[02:43:06] <FromDiscord> <Elegantbeef> Yea it's the same thiing
[02:43:06] <FromDiscord> <Elegantbeef> Yea it's the same thing
[02:43:32] <FromDiscord> <ynfle> https://play.nim-lang.org/#ix=3Tdb
[02:44:06] <FromDiscord> <Elegantbeef> There we go ynfle
[02:44:18] <FromDiscord> <ynfle> Thanks big bro
[02:44:26] <FromDiscord> <Elegantbeef> You're older than i
[02:44:29] <FromDiscord> <wsantos> @ElegantBeef I want to abstract the DB implementation so it's easy to add others without changing my code
[02:44:36] <FromDiscord> <Elegantbeef> Well then do the above
[02:45:03] <FromDiscord> <Elegantbeef> Want to add a new DB add a new proc and change a type
[02:45:06] <FromDiscord> <ynfle> You can also use concepts, but I don't think it's necessary
[02:45:11] <FromDiscord> <wsantos> If someone wants to add a new DB they just implement/inherit my DBWrapper
[02:45:26] <FromDiscord> <Elegantbeef> You're describing concepts though
[02:46:13] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Tdd
[02:46:21] <FromDiscord> <Elegantbeef> There we go now we dont have to use inheritance or methods
[02:46:31] <FromDiscord> <ynfle> I'm pretty sure the current db_ implementation is already that though? Why reinvent the wheel?
[02:47:07] <FromDiscord> <Elegantbeef> I mean you should use concepts to ensure extensibillity
[02:48:12] <FromDiscord> <Elegantbeef> It allows you to atleast make abstractions across all dbs
[02:51:24] <FromDiscord> <Elegantbeef> @wsantos\: what's the current interaction look like?
[02:51:42] <FromDiscord> <ynfle> I know, but just define the concept and all dbs should work because they are designed around the same interface
[02:53:48] <FromDiscord> <wsantos> In reply to @Elegantbeef "<@121971538898452482>\: what's the current": I still implementing it, but the idea is to store the DB typedef in a conf, and I was trying to implement a DBWrapper class that one could use to implment a new DB so My system could accept new dbs
[02:54:29] <FromDiscord> <Elegantbeef> Sounds like a generic with a concept constraint is ideal, ymmv
[02:55:46] <FromDiscord> <wsantos> This is what I have so far, I'll check concepts my only concern is that is a "experimental" feature
[02:56:15] <FromDiscord> <Elegantbeef> It's not behind a flag and is only experimental cause araq whats a different API
[02:56:29] <FromDiscord> <Elegantbeef> wants a different\
[02:56:37] <FromDiscord> <wsantos> sent a code paste, see https://play.nim-lang.org/#ix=3Tdg
[02:56:51] <FromDiscord> <Elegantbeef> That is checking if there is a `open` procedure which takes 4 strings and returns the same type as `db`
[02:58:33] <FromDiscord> <luteva> euh.... concepts? constraints? any link to a manuel about "concepts" and "constraints"?
[02:58:47] <FromDiscord> <wsantos> In reply to @luteva "euh.... concepts? constraints? any": https://nim-lang.org/docs/manual_experimental.html#concepts
[02:59:08] <FromDiscord> <Elegantbeef> Constraints are generic limitations the simplest is just `type MyType[T: not int] = object`
[02:59:28] <FromDiscord> <Elegantbeef> Concepts work like C++ concepts where they constrain if the body of the concept compiles for a type
[02:59:47] <FromDiscord> <Elegantbeef> So you can use them to explicitly state the API required for a generic to function
[03:01:01] <FromDiscord> <luteva> oh yes i remember. there was something about constraints in the "nim in action" book.... but only experimental afaik. and just a few senteces.
[03:01:14] <FromDiscord> <wsantos> sent a code paste, see https://play.nim-lang.org/#ix=3Tdj
[03:01:18] <FromDiscord> <Elegantbeef> constraints are not experimental
[03:01:21] <FromDiscord> <luteva> but can't remember "concepts"
[03:01:25] <FromDiscord> <Elegantbeef> `DB` is the type of the value being tested
[03:01:58] <FromDiscord> <wsantos> I don't get the `type` in there
[03:02:16] <FromDiscord> <wsantos> Let me check the docs instead of asking everything here üòÑ RTFM üòÑ
[03:02:21] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Tdk
[03:02:37] <FromDiscord> <Elegantbeef> `db` will an instance of `OdbcConnTyp` and `DB` will be `OdbcConnTyp`
[03:02:43] <FromDiscord> <ynfle> sent a code paste, see https://play.nim-lang.org/#ix=3Tdl
[03:02:45] <FromDiscord> <Elegantbeef> It's a shorthand for `typeof(DB)`
[03:02:50] <FromDiscord> <ynfle> (edit) "https://play.nim-lang.org/#ix=3Tdl" => "https://play.nim-lang.org/#ix=3Tdm"
[03:02:59] <FromDiscord> <Elegantbeef> Oh god it's all module based dispatch?
[03:03:05] <FromDiscord> <Elegantbeef> Fuck i hate that
[03:03:05] <FromDiscord> <ynfle> In reply to @Elegantbeef "Oh god it's all": Yup
[03:03:24] <FromDiscord> <ynfle> You could import different modules depending on a `-d` switch
[03:03:31] <FromDiscord> <Elegantbeef> I'd enforce `DB.open("", "", "", "")` instead
[03:03:46] <FromDiscord> <Elegantbeef> It's just stupid to rely on module namespace to distinguish procedures for stuff like this imo
[03:04:24] <FromDiscord> <Elegantbeef> I'll be in my corner sulking
[03:05:22] <FromDiscord> <luteva> oh yeah. concepts: kind of typeclasses (in haskell)?!? great!
[03:05:42] <FromDiscord> <Elegantbeef> Yep
[03:06:03] <FromDiscord> <Bubblie> sent a code paste, see https://play.nim-lang.org/#ix=3Tdn
[03:06:21] <FromDiscord> <Elegantbeef> You can ping me with my name
[03:06:22] <FromDiscord> <Elegantbeef> It's magic
[03:06:30] <FromDiscord> <Elegantbeef> Elegantbeef just magic summons me
[03:06:40] <FromDiscord> <Bubblie> Oh wait you have a discord account?
[03:06:51] <FromDiscord> <Elegantbeef> I do, not that i use it here
[03:06:55] <FromDiscord> <Bubblie> Ah okay
[03:06:59] <FromDiscord> <Elegantbeef> Throw the code on playground üòõ
[03:07:09] <FromDiscord> <Bubblie> Alright
[03:07:53] <FromDiscord> <Bubblie> Can I even import vulkan in playground though
[03:08:14] <FromDiscord> <Bubblie> Doesnt it need the dll
[03:08:21] <FromDiscord> <Bubblie> Or dylib or so
[03:08:39] <FromDiscord> <wsantos> @ElegantBeef so to summarise use concept as generic constraint, right ? the documentation about concepts is huge holy F* üòÑ
[03:08:44] *** Quits: lumo_e (~enrico@151.29.53.201) (Quit: Quit)
[03:08:46] <FromDiscord> <Elegantbeef> Yes
[03:08:50] <FromDiscord> <Elegantbeef> Concepts are generic constraints
[03:09:03] <FromDiscord> <Elegantbeef> That allow you to use "this much match X" to compile
[03:09:16] <FromDiscord> <Bubblie> Yeah uh I dont think I can import vulkan in playground
[03:09:25] <FromDiscord> <wsantos> Perfect, I'll play around and share so you guys can double share before committing to it, thanks !
[03:09:38] <FromDiscord> <Elegantbeef> Doesnt fuckiing matter bubblie i just want a nice editor to read the code
[03:09:45] <FromDiscord> <Bubblie> OH
[03:09:48] <FromDiscord> <Bubblie> Thats what you meant?
[03:09:52] <FromDiscord> <Elegantbeef> You double edited  it so it disappeared here
[03:09:56] <FromDiscord> <Bubblie> OH
[03:10:01] <FromDiscord> <Bubblie> Okay I got you fam mb LOL
[03:10:58] <FromDiscord> <Elegantbeef> actually wsantos we dont need to bitch and moan about the lack of type in first parameter i think
[03:11:01] <FromDiscord> <Elegantbeef> Gotta check something
[03:12:00] <FromDiscord> <wsantos> Not sure what you mean ;/
[03:12:03] <FromDiscord> <wsantos> (edit) ";/" => ":/"
[03:12:21] <FromDiscord> <Elegantbeef> Well Nim doesnt let you disambiguate based off returrn type
[03:12:46] <FromDiscord> <Elegantbeef> So the fact the nim builting `db` `open` procedures all use `open(a, b, c, d: string): DB` means if you have 2 DB modules you get a compile time error
[03:15:12] <FromDiscord> <wsantos> Ok, yeah let me play with it
[03:16:55] <FromDiscord> <Bubblie> @ElegantBeef https://play.nim-lang.org/#ix=3Tdo here you go sorry that took a bit my wifi shat itself
[03:20:34] <FromDiscord> <Elegantbeef> Ok now what's the issue?
[03:28:37] <FromDiscord> <Elegantbeef> @Bubblie\: are you still using nimgl?
[03:33:39] <FromDiscord> <ynfle> In reply to @Elegantbeef "Gotta check something": Did you figure something out?
[03:33:51] <FromDiscord> <Elegantbeef> I'm still fighting concepts
[03:34:25] *** Joins: ltriant_ (~ltriant@ec2-13-211-134-196.ap-southeast-2.compute.amazonaws.com)
[03:35:16] <FromDiscord> <ynfle> You mean programming with concepts
[03:35:24] <FromDiscord> <ynfle> Their quite esoteric
[03:35:30] <FromDiscord> <ynfle> they're
[03:35:44] <FromDiscord> <Elegantbeef> Nah they generally work fine it's quite difficult to reason what i'm trying
[03:36:17] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 240 seconds)
[03:36:33] <FromDiscord> <ynfle> Nice
[03:40:23] <FromDiscord> <Bubblie> In reply to @Elegantbeef "<@415227941408997381>\: are you still": yes
[03:40:39] <FromDiscord> <Bubblie> essentially the issue here
[03:40:42] <FromDiscord> <Bubblie> let me get the error
[03:40:45] <FromDiscord> <Elegantbeef> `import nimgl/vulkan`
[03:41:40] <FromDiscord> <Bubblie> doing nimgl/vulkan causes it to state it cannot open the file, see the thing is I installed the vulkan bindings seperately so I didn't have to get the entiriety of nimgl
[03:41:46] <FromDiscord> <Elegantbeef> Ah
[03:41:54] <FromDiscord> <Bubblie> but let me just try installing nimgl entirely and see if that makes a difference
[03:45:03] <FromDiscord> <Bubblie> sent a code paste, see https://play.nim-lang.org/#ix=3Tdr
[03:45:12] <FromDiscord> <Bubblie> also, this time I did nimgl/vulkan
[03:45:14] <FromDiscord> <Bubblie> for the import
[03:45:16] <FromDiscord> <Bubblie> everything else is the same
[03:45:34] <FromDiscord> <Bubblie> at this point I think I might just do the bindings myself
[03:45:53] <FromDiscord> <Elegantbeef> Have fun
[03:46:43] <FromDiscord> <Bubblie> If you have an idea please throw it my way, if you dont then yeah thats fine too
[03:47:13] <FromDiscord> <Elegantbeef> I mean i had the same error so seems something either needs imported or exported
[03:47:24] <FromDiscord> <Elegantbeef> Look at the bindings and see if there's a missing ``
[03:48:19] <FromDiscord> <Bubblie> Missing  in the example?
[03:48:24] <FromDiscord> <Bubblie> Or in the bindings themselves
[03:48:37] <FromDiscord> <Elegantbeef> The bindings
[03:48:42] <FromDiscord> <Bubblie> Alright ill take a look
[03:49:26] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Tds
[03:52:12] <FromDiscord> <ynfle> Nice!
[03:52:36] <FromDiscord> <ynfle> Intense nimnastics
[04:03:49] <FromDiscord> <Shinyzenith> In reply to @greenb1ade "Random but what theme": Toykonight
[04:04:21] <FromDiscord> <Shinyzenith> In reply to @auxym "what does wl_signal_add do?": It adds a callback to a wl-listener struct
[04:05:23] <FromDiscord> <auxym> no addr? time for gdb then I guess?
[04:06:14] <FromDiscord> <Elegantbeef> Or i look at code
[04:09:27] <FromDiscord> <Elegantbeef> Herb output is a stack variable afaict so this is unsafe
[04:13:44] <FromDiscord> <Elegantbeef> So it's due to abusing the stack i imagine
[04:13:46] <FromDiscord> <Elegantbeef> I could be wrong
[04:21:02] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[04:21:33] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[04:37:29] <FromDiscord> <Bubblie> well beef, the astericks are there and im out of ideas
[04:37:33] <FromDiscord> <Bubblie> its time to make my own shit
[04:38:53] <FromDiscord> <Elegantbeef> That's not a procedure in the bindings
[04:39:29] <FromDiscord> <Bubblie> oh no I got a new error
[04:39:30] <FromDiscord> <Bubblie> lol
[04:39:33] <FromDiscord> <Bubblie> forgot to say
[04:40:06] <FromDiscord> <Elegantbeef> What's the new issue?
[04:40:26] <FromDiscord> <Bubblie> OH WAIT I may have figured out something gimmie one second
[04:42:55] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[04:43:27] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[04:43:39] <FromDiscord> <Bubblie> figured it out
[04:43:55] <FromDiscord> <Bubblie> okay, so essentially, it was a problem with the extensions, the extensions are just fucked
[04:44:11] <FromDiscord> <Bubblie> adding vulkan extensions here doesn't work cause that query thing in the example simply does not exist in any of the files
[04:44:28] <FromDiscord> <Bubblie> sorry, any of the places in the vulkan.nim I meant
[04:44:33] <FromDiscord> <Bubblie> deleting this fixes the issue
[04:44:49] <FromDiscord> <Bubblie> this can be a problem if I want vulkan extensions
[04:46:17] <FromDiscord> <Elegantbeef> What do you mean?
[04:49:13] <FromDiscord> <Bubblie> sent a code paste, see https://play.nim-lang.org/#ix=3TdG
[04:49:30] <FromDiscord> <Elegantbeef> Now imagine contributing the fixes to the nimgl bindings to make that work
[04:50:06] <FromDiscord> <Bubblie> im working on it LMAO
[04:50:18] <FromDiscord> <Bubblie> im trying to see why it was just, flat out removed
[04:50:37] <FromDiscord> <Elegantbeef> eh i just see "its time to make my own shit" and go "ah yes open source software"
[04:51:59] <FromDiscord> <Bubblie> make my own shit can mean make own fix too lol, I was only going to think about making my own bindings because I assumed the bindings were just messed up on windows, nimgl probably works everywhere else (everywhere else meaning linux, im excluding mac)
[04:52:12] <FromDiscord> <Bubblie> but now, it seems like this may be an issue with its generator
[04:53:02] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[04:53:21] <FromDiscord> <Bubblie> and in general, what ive noticed is that compared to other bindings, nimgl does this weird thing with glfwWindow, it may be restricting the freedom that comes from setting up a proper vulkan pipeline
[04:53:35] <FromDiscord> <Bubblie> Im gonna add that to my own fork, and pr it
[04:54:55] <FromDiscord> <Bubblie> okay yeah, loadVK_EXT_host_query_reset is not anywhere, not in the main repo not in the seperate repo and not in my project either
[04:54:58] <FromDiscord> <Bubblie> hmmmm
[04:55:11] <FromDiscord> <Bubblie> maybe its removal was an accident? Maybe they did something else that was also un documented?
[04:55:19] <FromDiscord> <Bubblie> let me look into the history
[04:56:33] <FromDiscord> <Bubblie> ...
[04:56:37] <FromDiscord> <Bubblie> its not even in the history
[05:01:12] <FromDiscord> <Elegantbeef> Well time to make an issue or make it in the history
[05:01:44] <FromDiscord> <Bubblie> yes, but my question is if it was never added to the vulkan.nim this entire time, how was the example even working?
[05:01:50] <FromDiscord> <Bubblie> maybe im being stupid ill keep looking
[05:03:55] <FromDiscord> <Bubblie> okay found something, it was here, now I need to find where it was removed
[06:28:10] *** Joins: tiorock (~rc@192.12.113.201)
[06:28:10] *** Quits: tiorock (~rc@192.12.113.201) (Changing host)
[06:28:10] *** Joins: tiorock (~rc@user/rockcavera)
[06:28:10] *** rockcavera is now known as Guest1667
[06:28:10] *** tiorock is now known as rockcavera
[06:29:06] *** Quits: Guest1667 (~rc@user/rockcavera) (Ping timeout: 245 seconds)
[06:47:57] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[06:59:04] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:01:05] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Max SendQ exceeded)
[07:01:43] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:07:14] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 268 seconds)
[07:35:30] <FromDiscord> <Hamid_Bluri> In reply to @Elegantbeef "<@121971538898452482> <@767093711112241162>  i": amazing
[07:37:50] <FromDiscord> <Elegantbeef> Now if only we can get rid of the `DBConn` shit inside the `db_` modules üòõ
[07:44:20] *** Joins: tiorock (~rc@192.12.113.201)
[07:44:20] *** Quits: tiorock (~rc@192.12.113.201) (Changing host)
[07:44:20] *** Joins: tiorock (~rc@user/rockcavera)
[07:44:20] *** Quits: rockcavera (~rc@user/rockcavera) (Killed (tantalum.libera.chat (Nickname regained by services)))
[07:44:20] *** tiorock is now known as rockcavera
[07:51:24] <FromDiscord> <dilawar (Dilawar Singh)> I thought since many NIM developers are there, I probably post it there and see. üòü/
[07:51:42] <FromDiscord> <Elegantbeef> What's a NIM developer?
[07:53:21] <FromDiscord> <dilawar (Dilawar Singh)> I can't login to my account after I changed my nim-forum password. The error is always "wrong username or password". I change it again, try login again and same error again. Feeling a bit like https://www.youtube.com/watch?v=SHJQSRa02iQ.
[07:54:09] <FromDiscord> <Elegantbeef> I'd say ping someone that can actually do something
[07:54:22] <FromDiscord> <Elegantbeef> Dom or Miran probably
[07:54:38] <FromDiscord> <dilawar (Dilawar Singh)> Thanks. I'll ping them. Are they here?
[07:55:00] <FromDiscord> <dilawar (Dilawar Singh)> Sorry, autocorrect and my loose grip on English.
[07:55:43] <FromDiscord> <dilawar (Dilawar Singh)> I can't post anything on nim forum anymore.
[07:58:51] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[07:59:51] <FromDiscord> <Elegantbeef> They are here dom96 is dom, think miran uses irc
[08:08:47] <FromDiscord> <Hamid_Bluri> https://play.nim-lang.org/#ix=3Teb
[08:08:53] <FromDiscord> <Hamid_Bluri> can't understand iterators
[08:09:32] <FromDiscord> <Hamid_Bluri> why the value of `x` is not equal to 10
[08:09:54] <FromDiscord> <Hamid_Bluri> how do they work üòï
[08:10:52] <FromDiscord> <Elegantbeef> This closure doesnt hold state
[08:11:23] <FromDiscord> <Elegantbeef> I mean it does üòõ
[08:11:43] <FromDiscord> <Hamid_Bluri> what
[08:12:34] <FromDiscord> <Elegantbeef> `x`'s state is stored in the proc
[08:12:36] <FromDiscord> <Elegantbeef> rather closure
[08:13:02] <FromDiscord> <Hamid_Bluri> Ah
[08:13:39] <FromDiscord> <Rika> first call does the x = a, then enters the loop and stops at the yield
[08:13:47] <FromDiscord> <Rika> next calls stay in the loop
[08:14:27] <FromDiscord> <Hamid_Bluri> what about `echo c(10, 13)` ?
[08:14:43] <FromDiscord> <Elegantbeef> it returns the `yield x`
[08:15:36] <FromDiscord> <Elegantbeef> `closure` iterators hold onto their state, which was intialized to `1`
[08:16:23] <FromDiscord> <Hamid_Bluri> but if you swap lines 12 & 13
[08:16:28] <FromDiscord> <Hamid_Bluri> something strange happens
[08:16:52] <FromDiscord> <Elegantbeef> 10 \> 3
[08:17:16] <FromDiscord> <Rika> well yeah, a doesnt change but b does
[08:17:53] <FromDiscord> <Hamid_Bluri> i kinda get it
[08:18:08] <FromDiscord> <Elegantbeef> This isnt a closure generator so the state has to be passed
[08:18:24] <FromDiscord> <Elegantbeef> If you want a closure generator look at slicerator's `asClosure`
[08:19:36] <FromDiscord> <Hamid_Bluri> ok
[08:19:37] <FromDiscord> <Hamid_Bluri> thanks you both
[08:19:42] <FromDiscord> <Hamid_Bluri> (edit) "thanks" => "thank"
[08:19:43] <FromDiscord> <Elegantbeef> This isnt even a property of iterators it's just closures
[08:20:16] <FromDiscord> <Elegantbeef> If you want to see how Nim implements closures https://nim-lang.org/docs/intern.html#code-generation-for-closures
[08:20:41] <FromDiscord> <Hamid_Bluri> thank u so much
[08:22:08] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:43:58] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[08:48:27] <FromDiscord> <V0id_Matr1x> Is elegantbeef really a bot?
[08:48:35] <FromDiscord> <Elegantbeef> sadly not
[08:49:06] <FromDiscord> <huantian> why does everyone ask if beef is a bot and not anyone else
[08:49:11] <FromDiscord> <V0id_Matr1x> Oh lmao, I was like wow that is the craziest thing I have ever seen lol.
[08:49:37] <FromDiscord> <Elegantbeef> Cause i pass the butter
[08:50:57] <FromDiscord> <Rika> not the turing test it seems
[08:51:02] <FromDiscord> <huantian> I swear more people use Matrix right
[08:53:02] <FromDiscord> <Elegantbeef> Perhaps
[08:55:11] <FromDiscord> <huantian> hm I have no idea how to do the device verification thing with element
[08:56:00] <FromDiscord> <V0id_Matr1x> You need a pass phrase key for backup I think.
[08:56:26] <FromDiscord> <V0id_Matr1x> To verify if I remember correctly, I don't use it much.
[08:56:34] <FromDiscord> <Elegantbeef> It's in security settings i thiink
[08:56:40] <FromDiscord> <V0id_Matr1x> Yeah
[08:58:16] *** Joins: pch_ (~pch@66.49.131.33)
[08:58:53] <FromDiscord> <huantian> Oh huh ok that makes sense
[08:59:08] <FromDiscord> <Equinox> In reply to @V0id_Matr1x "Oh lmao, I was": No they are a bot, one of the most advanced ai‚Äôs ever written
[08:59:26] <FromDiscord> <huantian> I have no idea what that actually did but cool
[08:59:44] <FromDiscord> <Elegantbeef> Would allow you to continue DMing people i think
[08:59:52] <FromDiscord> <Elegantbeef> in a E2E environment
[08:59:59] *** Quits: pch (~pch@66.49.131.33) (Ping timeout: 250 seconds)
[08:59:59] <FromDiscord> <V0id_Matr1x> No I looked it up, they logged in with a bot or something. It was like magic at first though lmfao.
[09:00:19] <FromDiscord> <Elegantbeef> It's just the matrix bridge
[09:00:25] <FromDiscord> <Elegantbeef> We're otherly located
[09:00:27] <FromDiscord> <Hamid_Bluri> sent a code paste, see https://play.nim-lang.org/#ix=3Tel
[09:00:43] <FromDiscord> <V0id_Matr1x> googled "how to get bot tag on discord" lol
[09:01:45] <FromDiscord> <V0id_Matr1x> In reply to @Elegantbeef "It's just the matrix": That makes sense. I will get myself the bot tag too lol.
[09:01:48] <FromDiscord> <Elegantbeef> Hamid that's an uninstantiatble distinct
[09:02:10] <FromDiscord> <Elegantbeef> `type CustomSlice = distinct HSlice` has no generic on the HSlice
[09:02:27] <FromDiscord> <Elegantbeef> Should be `type CustomSlice = distinct HSlice[int, BackwardsIndex]` in this example
[09:03:41] <FromDiscord> <Hamid_Bluri> sent a code paste, see https://paste.rs/2Mp
[09:04:05] <FromDiscord> <Hamid_Bluri> but is there any way to get rid of `CustomSlice[int, int]( ... )` ?
[09:04:07] <FromDiscord> <Elegantbeef> Yes
[09:04:22] <FromDiscord> <Elegantbeef> A converter
[09:04:36] <FromDiscord> <Elegantbeef> But you'd need a converter for that specific generic
[09:04:39] <FromDiscord> <Elegantbeef> So to answer no
[09:04:48] <FromDiscord> <Hamid_Bluri> thanks
[09:05:54] <FromDiscord> <huantian> hey beef wanna meet up sometime and I verify each other's client xD
[09:06:00] <FromDiscord> <Elegantbeef> Works for instance
[09:06:03] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Ten
[09:06:15] <FromDiscord> <Elegantbeef> You coming to bumfuck nowhere Canada?
[09:06:52] <FromDiscord> <huantian> hm probably not seems cold
[09:06:57] <FromDiscord> <huantian> how about you visit arizona
[09:06:59] <FromDiscord> <Elegantbeef> It's warm today
[09:07:03] <FromDiscord> <Elegantbeef> It's +2C right now
[09:07:25] <FromDiscord> <Elegantbeef> Nope i'm good
[09:08:23] <FromDiscord> <huantian> it's around 30 highs over here rn
[09:08:35] <FromDiscord> <Elegantbeef> In real units?
[09:08:42] <FromDiscord> <huantian> yeah Celcius
[09:08:50] <FromDiscord> <Elegantbeef> Ah that's my summer temps
[09:08:59] <FromDiscord> <Elegantbeef> I prefer the -50 to that
[09:13:44] <FromDiscord> <huantian> hm what if we instead verify sessions via github issue
[09:14:26] <FromDiscord> <Elegantbeef> Speaking of github issues, thoughs on my async await message change?
[09:15:45] <FromDiscord> <Equinox> In reply to @Elegantbeef "Speaking of github issues,": What did you change
[09:15:55] <FromDiscord> <huantian> Yeah I think it's a good idea to mention waitFor in the error message
[09:16:43] <FromDiscord> <huantian> should the message mention asyncCheck as well? or is that use case not frequent enough to worry about
[09:16:52] <FromDiscord> <Elegantbeef> I didnt change anything i suggested the change to huan's pr
[09:17:05] <FromDiscord> <Elegantbeef> `asynCheck`  is the `discard` equivlent
[09:17:15] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 240 seconds)
[09:17:19] <FromDiscord> <huantian> yeah, so it doesn't wait for the future to complete
[09:17:48] <FromDiscord> <Elegantbeef> So it doesnt relate to using await
[09:18:12] <FromDiscord> <huantian> true
[09:18:22] <FromDiscord> <huantian> there we go bigger cubes
[09:19:18] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[09:19:54] <FromDiscord> <huantian> Also the other error messages in asyncmacro seem to use "async proc" instead of "proc marked as 'async'" or "'async' marked proc."‚Üµmaybe it would be better to just say that
[09:20:09] <FromDiscord> <Elegantbeef> Perhaps
[09:22:11] <FromDiscord> <Elegantbeef> @Equinox\: this is what we're talking about https://github.com/nim-lang/Nim/pull/19622
[09:23:09] *** pch_ is now known as pch
[09:25:03] <FromDiscord> <Elegantbeef> Huan and i talked about it to remove the stupid error message of "yield can only be used in an iterator"
[09:25:31] <FromDiscord> <Elegantbeef> I havent used async much but it's the most seen error from people trying to use it heree
[09:27:02] <FromDiscord> <huantian> "If waiting" feels a tad awkward, maybe `"If intentional, use 'waitFor' to call a 'async' proc in non-async scope."` is better
[09:28:37] <FromDiscord> <huantian> But I think sticking with specifically saying marked is the move
[09:30:26] <FromDiscord> <huantian> Man words are hard
[09:32:12] <FromDiscord> <Elegantbeef> 'if calling' is better imo
[09:32:52] <FromDiscord> <Elegantbeef> "If calling an 'async' proc in a non-async scope use `waitfor`"
[09:34:53] <FromDiscord> <huantian> this is just wording but should we say "use waitFor" before saying if?
[09:34:58] <FromDiscord> <Elegantbeef> Probably
[09:35:20] *** Quits: ltriant_ (~ltriant@ec2-13-211-134-196.ap-southeast-2.compute.amazonaws.com) (Read error: Connection reset by peer)
[09:36:08] <FromDiscord> <Hamid_Bluri> sent a code paste, see https://play.nim-lang.org/#ix=3Tev
[09:36:08] <FromDiscord> <huantian> ok so `Can only 'await' inside a proc marked as 'async'. Use 'waitFor' when calling an 'async' proc in a non-async scope instead`
[09:36:22] <FromDiscord> <Elegantbeef> Sounds good to me
[09:37:54] <FromDiscord> <Elegantbeef> Hamid you bounded `A` and `B` to the same type
[09:38:10] <FromDiscord> <Hamid_Bluri> Oh
[09:38:11] <FromDiscord> <Elegantbeef> Wait nvm
[09:38:39] <FromDiscord> <Hamid_Bluri> it works with int, int
[09:38:45] <FromDiscord> <Hamid_Bluri> (edit) "int, int" => "[int, int]"
[09:39:10] <FromDiscord> <Hamid_Bluri> sent a code paste, see https://play.nim-lang.org/#ix=3Tew
[09:40:35] *** Joins: ltriant (~ltriant@ec2-13-211-134-196.ap-southeast-2.compute.amazonaws.com)
[09:43:51] <FromDiscord> <Elegantbeef> It's a bug if i've ever seen one
[09:44:32] <FromDiscord> <Hamid_Bluri> intresting
[09:44:58] <FromDiscord> <Hamid_Bluri> that works
[09:45:02] <FromDiscord> <Hamid_Bluri> sent a code paste, see https://paste.rs/ZyA
[09:45:35] <FromDiscord> <Hamid_Bluri> sent a code paste, see https://play.nim-lang.org/#ix=3TeA
[09:45:46] <FromDiscord> <huantian> oh yeah beef looking at this windows test, seems to be failing because of `\` and not `/` in paths‚Üµhttps://github.com/nim-lang/Nim/pull/19622/checks?check_run_id=5609347020
[09:47:50] <FromDiscord> <Elegantbeef> Well guess compiler dev right now
[09:50:03] <FromDiscord> <huantian> ah I see the issue, the example you sent doesn't use `nimoutFull: true` so it only checks for the parts of the error message that don't have paths
[09:50:31] <FromDiscord> <Elegantbeef> Ugh it's another typerel bug i think
[09:50:48] <FromDiscord> <Elegantbeef> sent a code paste, see https://paste.rs/nBr
[09:56:47] <FromDiscord> <Hamid_Bluri> i'm sorry to call you "beef"
[09:56:57] <FromDiscord> <Hamid_Bluri> you're "Elegant beef"
[09:57:13] <FromDiscord> <Elegantbeef> I'm whatever the fuck i want to respond to üòõ
[09:57:25] <FromDiscord> <Hamid_Bluri> "Elegant beef" is distinct type of `beef`
[09:57:47] *** Joins: Zectbumo (~Zectbumo@2600:8802:5100:3f90:2c5f:1252:d0fb:7ca2)
[09:57:59] <FromDiscord> <Elegantbeef> I hate these distinct issues
[09:58:22] <FromDiscord> <Elegantbeef> It's actually not even a distinct issue, just a generic issue
[09:58:47] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3TeC
[09:58:49] <FromDiscord> <Elegantbeef> For the same reason, typerel is being dumb
[09:58:56] <FromDiscord> <Hamid_Bluri> typerel?
[09:59:24] <FromDiscord> <Elegantbeef> It's the part of the compiler that reasons type relations
[10:00:18] <FromDiscord> <V0id_Matr1x> What is the butter everyone is referring too?
[10:03:11] <FromDiscord> <Hamid_Bluri> sent a code paste, see https://play.nim-lang.org/#ix=3TeD
[10:03:13] <FromDiscord> <Hamid_Bluri> only last one doesn't work
[10:11:11] <FromDiscord> <Elegantbeef> Oh i think i already see the issue
[10:16:20] <FromDiscord> <Elegantbeef> Nevermind i'm silly
[10:20:15] <FromDiscord> <V0id_Matr1x> Hey elegant, did you merge my pull request because after I told you I was waiting it merged. If so thanks!
[10:20:32] <FromDiscord> <Elegantbeef> What PR?
[10:21:16] <FromDiscord> <V0id_Matr1x> Oh then nevermind. Must be coincidence, what is your github name?
[10:21:25] <FromDiscord> <Elegantbeef> beef331
[10:22:24] <FromDiscord> <Elegantbeef> I have no relation with `nim-lang`
[10:22:25] <FromDiscord> <V0id_Matr1x> Oh then no, it is definitely coincidence. I thought you were the guy merging` packages.json`
[10:23:28] <FromDiscord> <V0id_Matr1x> That makes sense, I figure your were more experienced in Nim than me, and had no idea who you were so I thought I would as for feedback.
[10:23:40] <FromDiscord> <V0id_Matr1x> (edit) "figure" => "figured"
[10:24:04] <FromDiscord> <Rika> He probably is‚Ä¶?
[10:24:10] <FromDiscord> <Rika> I don‚Äôt remember seeing you around here
[10:24:10] <FromDiscord> <V0id_Matr1x> OH he is lol
[10:24:19] <FromDiscord> <V0id_Matr1x> I am a noob to Nim
[10:24:29] <FromDiscord> <Rika> Yeah he likely is
[10:24:34] <FromDiscord> <V0id_Matr1x> It is my favorite lang now though
[10:24:46] <FromDiscord> <Elegantbeef> You forget, i'm an idiot‚Üµ(@Rika)
[10:25:10] <FromDiscord> <V0id_Matr1x> In reply to @Elegantbeef "You forget, i'm an": I don't believe that for a second lmao.
[10:26:04] <FromDiscord> <Elegantbeef> Someone wanna give me a CPU with a higher IPC so i can debug the compiler a tinge faster?
[10:26:41] <FromDiscord> <Rika> Go buy a Mac studio or something, it‚Äôs only just 4000 USD for the best CPU
[10:26:45] <FromDiscord> <Elegantbeef> Ah actually i think i dumbly have the compiler built ind ebug
[10:27:15] <FromDiscord> <Elegantbeef> I think that stands for everything i'm against
[10:27:43] <FromDiscord> <Elegantbeef> an unupgradable unrepairable lockedown computer
[10:32:46] <FromDiscord> <Rika> Then build one
[10:36:39] <FromDiscord> <V0id_Matr1x> Wait so Nim Lang is dead, and Nim Skull is the current project? code might be broken??
[10:36:48] <FromDiscord> <Elegantbeef> No
[10:36:59] <FromDiscord> <Elegantbeef> Nim-lang is alive, nimskull is alive
[10:37:10] <FromDiscord> <V0id_Matr1x> I am so confused, can you elaborate please.
[10:37:18] <FromDiscord> <Phil> araq and co work on nim
[10:37:20] <FromDiscord> <Elegantbeef> Nimskull is a fork of nim
[10:37:29] <FromDiscord> <Phil> Other folks that split off of nim work on nimskull
[10:37:50] <FromDiscord> <Elegantbeef> I really should leave nimskull's organization
[10:37:59] <FromDiscord> <Elegantbeef> I'm equally associated with them as i am with nim-lan üòÄ
[10:38:00] <FromDiscord> <V0id_Matr1x> WHy?
[10:38:21] <FromDiscord> <Phil> Differences over the codebase and the scope of the supported featureset IIRC
[10:38:21] <FromDiscord> <Elegantbeef> Cause I dont have any reason to be in it
[10:38:34] <FromDiscord> <V0id_Matr1x> Ok man
[10:38:35] <FromDiscord> <Phil> Ohhh why he's in the group, my bad
[10:38:40] <FromDiscord> <Elegantbeef> Why to the fork is read the readme of nimskull
[10:38:41] <FromDiscord> <Elegantbeef> It explains why it exists
[10:39:19] <FromDiscord> <V0id_Matr1x> I read it and that is where I got the impression Nim was dead, and got worried.
[10:39:52] <FromDiscord> <V0id_Matr1x> "‚ÜµWe love the original vision behind nim-lang; we believe that an element of the vision was lost. We simply believe a different development process was needed to that which was being used and decided that the best way to see this vision materialize was to enforce that process ourselves. "
[10:40:10] <FromDiscord> <Rika> Nothing here implies the original is dead
[10:41:32] <FromDiscord> <V0id_Matr1x> No worries, thank you for making that clear.
[11:13:31] <FromDiscord> <Phil> sent a code paste, see https://paste.rs/1oF
[11:14:00] <FromDiscord> <Phil> (edit) "https://paste.rs/F3M" => "https://play.nim-lang.org/#ix=3TeR"
[11:14:06] <FromDiscord> <Phil> (edit) "https://play.nim-lang.org/#ix=3TeR" => "https://play.nim-lang.org/#ix=3TeT"
[11:14:25] <FromDiscord> <Elegantbeef> `_: typedesc[T]` reduce the proc length
[11:14:35] <FromDiscord> <Phil> (edit) "https://play.nim-lang.org/#ix=3TeT" => "https://play.nim-lang.org/#ix=3TeU"
[11:14:58] <FromDiscord> <Elegantbeef> proc last so you can use the do syntax imo
[11:17:08] <FromDiscord> <Elegantbeef> sent a code paste, see https://paste.rs/ZeY
[11:17:23] <FromDiscord> <Phil> do-syntax? Is that a nim feature I over-read?
[11:17:31] <FromDiscord> <Rika> No
[11:17:44] <FromDiscord> <Rika> It‚Äôs in the experimental manual but it‚Äôs not actually very experimental
[11:17:51] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/manual_experimental.html#do-notation
[11:18:09] <FromDiscord> <Phil> Ah, Do notation
[11:22:51] <FromDiscord> <Phil> So if I understood this right, when calling a proc this is a way of moving the proc-definition to outside of the params and underneath the proc-call, which can be useful for larger anonymous functions
[11:23:28] <FromDiscord> <Phil> I'll keep that in mind when writing procs that take proc params! Thanks!
[11:23:33] <FromDiscord> <Elegantbeef> Depends what you're doing but yes
[11:24:18] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3TeX
[11:24:30] <FromDiscord> <Phil> You'd only use the do-syntax when creating anonymous procs right? I have a couple times where I invoke the proc and pass it a named  proc from another module
[11:24:52] <FromDiscord> <Elegantbeef> Yea you'd use the do syntax for anonymous procs
[11:25:24] <FromDiscord> <Elegantbeef> for named procs you'd just pass them in
[11:37:55] <FromDiscord> <Phil> Check
[12:09:47] *** Quits: Lord_Nightmare (znc@user/lord-nightmare/x-3657113) (Quit: ZNC - http://znc.in)
[12:12:22] <FromDiscord> <untoreh> In reply to @demotomohiro "<@152784476701851648> Maybe `toStrLit` in": this one almost does it, but it adds whitespace, I guess I have to copy the tree recursion function and just remove the whitespace stuff
[12:12:38] *** Joins: Lord_Nightmare (znc@user/lord-nightmare/x-3657113)
[12:33:04] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[12:33:37] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[12:33:41] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[12:34:19] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[12:59:17] <FromDiscord> <enthus1ast> It seems when a loaded dll crashes/excepts (loaded via dynlib) i cannot get the error message in the host application, do you know how to do this? Or should my application do this somehow?
[12:59:43] <FromDiscord> <enthus1ast> Eg, try and catch in the dll and store the error in a table etc that my host retreives ?
[13:00:18] <FromDiscord> <enthus1ast> is maybe the reason that the dll does not have a stdout/strerr ?
[13:02:16] <FromDiscord> <Elegantbeef> Wrap the program in try except and propogate it bad with an error handler
[13:02:20] <FromDiscord> <Elegantbeef> it back\
[13:02:35] <FromDiscord> <enthus1ast> yes sounds resonable
[13:02:37] <FromDiscord> <enthus1ast> thank you
[13:22:38] <FromDiscord> <wsantos> In reply to @Elegantbeef "<@121971538898452482> <@767093711112241162>  i": @ElegantBeef this is amazing I'll need some time to digest it üòÑ thank you so much
[13:27:04] *** Quits: Zectbumo (~Zectbumo@2600:8802:5100:3f90:2c5f:1252:d0fb:7ca2) (Remote host closed the connection)
[13:35:20] <FromDiscord> <luteva> @wsantos just one more idea: I think what you are searching for was some kind of "interfaces" like in java or in go.‚ÜµThere are interface implementations in/for nim: Maybe you may want to have a look at iface: https://github.com/yglukhov/iface‚Üµthis i s a go-like interface implementation.
[13:36:11] <FromDiscord> <Elegantbeef> I mean they only need iface if they want runtime interfaces
[13:36:18] <FromDiscord> <Elegantbeef> Concepts give them compiletime inferfaces
[13:40:11] <FromDiscord> <luteva> yes. that's definitvely a better solution if you can handle that at compiletime. but whenever not sure you may want to choose runtime interfaces (or maybe not... just an idea.....)‚Üµalso: using iface seems to be quite easy! concepts are still a bit more complicated in my opinion.
[13:41:51] <FromDiscord> <Elegantbeef> Eh it's a bit more complicated in this case cause of the odd matching needed
[13:42:23] <FromDiscord> <Elegantbeef> Otherwise they're more tame and `a.doThing(args) is T`
[13:42:58] <FromDiscord> <Phil> In reply to @Elegantbeef "<@121971538898452482> <@767093711112241162>  i": This looks like something I should really steal for tinypool
[13:43:27] <FromDiscord> <Elegantbeef> It lets you get away from inheritance so I think so
[13:45:42] <FromDiscord> <Elegantbeef> I still want to see Norm without the inheritance requirement üòõ
[13:46:00] <FromDiscord> <Elegantbeef> Not that i'd be any more likely to use it, just dont like inheritance where it's not needed
[13:47:37] <FromDiscord> <Phil> Within the very, very limited scope that norm uses it I'm not a fan, but at least it doesn't bother me greatly.‚ÜµWhat does bother me is the requirement of an ID field which makes working with views/fts5 impossible as well as no way to write raw SQL if I wanted to
[13:48:02] <FromDiscord> <Phil> But that'd have to be solved with a different type, if it comes....ever
[13:49:18] <FromDiscord> <Elegantbeef> Yea i only know of Norm for looking at your code briefly and found  the usage of `Model` suspect
[13:50:37] <FromDiscord> <enthus1ast> i like the way nisane composes, but it is a more manual way
[13:50:50] <FromDiscord> <Elegantbeef> I know nothing of any of this, so i dont comment further
[13:51:04] <FromDiscord> <enthus1ast> its a seq to object converter
[13:51:05] <FromDiscord> <Phil> nisane is essentially: Take seq[string], convert to object
[13:51:46] <FromDiscord> <Phil> Where the strings have to be in the order of the fields in the object
[13:51:47] <FromDiscord> <enthus1ast> BUT i guess the correct way is to patch the various db\_\ drivers to get types from the db and generate objects by themself
[13:52:25] <FromDiscord> <enthus1ast> sent a long message, see http://ix.io/3Tff
[13:53:44] <FromDiscord> <enthus1ast> this way you can collect any sql returns, withouth the id requirement in MyObj
[13:54:17] <FromDiscord> <enthus1ast> also if you you join some rows\:‚ÜµmyRow.to(entryId, entry, userId, user)
[13:54:48] <FromDiscord> <Elegantbeef> Yea i dont DB
[13:54:51] <FromDiscord> <Elegantbeef> So i dont follow
[13:55:31] <FromDiscord> <enthus1ast> how do you store your data then? \:)
[13:55:40] <FromDiscord> <Rika> prolly flat files
[13:55:44] <FromDiscord> <Rika> or doesnt
[13:56:12] <FromDiscord> <Elegantbeef> Store data?
[13:56:16] <FromDiscord> <Elegantbeef> The fuck do you think i am a webdev?
[13:56:27] <FromDiscord> <Elegantbeef> I make failed projects that dont go anywhere
[13:56:35] <FromDiscord> <enthus1ast> ic ;)
[13:56:35] <FromDiscord> <Elegantbeef> Dont need to store data there
[13:57:04] <FromDiscord> <Elegantbeef> When ii do store data i generally use a binary buffer
[13:57:39] <FromDiscord> <enthus1ast> to make flatfile storage really great, we need a datastructure that\:‚Üµprovides idx access, MULTI key access (like sql indexes on multiple columns), iteratable from both directions, get next and prev from one element
[13:58:00] <FromDiscord> <Elegantbeef> No, we need to be able to get a Nim object out from a file path
[13:58:03] <FromDiscord> <Elegantbeef> Anything else is redundant
[13:58:21] <FromDiscord> <enthus1ast> if you can do this you still have some limitations
[13:58:26] <FromDiscord> <luteva> use lmdb
[13:58:31] <FromDiscord> <luteva> üòÑ
[13:58:46] <FromDiscord> <Elegantbeef> Wait until enthus learns i'm joking about the fact i only need game save data in my projects
[13:59:04] <FromDiscord> <Rika> lmdb or rocks
[13:59:13] <FromDiscord> <Rika> and beef doesnt really have a use for dbs
[13:59:27] <FromDiscord> <Rika> he doesnt make things that require massive/low-latency/etc storage
[13:59:46] <FromDiscord> <Elegantbeef> Indeed
[14:00:00] <FromDiscord> <Elegantbeef> I make things that need to store compact data that can be versioned
[14:00:16] <FromDiscord> <Elegantbeef> Still need to expand on my versioning API seemed quite promising though presently pointless
[14:00:16] <FromDiscord> <luteva> just use snail mail for storing/archiving data üòâ
[14:01:28] <FromDiscord> <Rika> snail mail and punch cards
[14:01:28] <FromDiscord> <Rika> gotcha
[14:01:47] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3Tfi this is what I was lookin at for my save data
[14:01:52] <FromDiscord> <Elegantbeef> Some issues with it though
[14:02:20] <FromDiscord> <Elegantbeef> Goto line 80 to see it in usue
[14:02:40] <FromDiscord> <Rika> versioning is a pretty large problem in database schemas as well
[14:03:20] <FromDiscord> <Elegantbeef> This is mostly for enabling typesave versioning and migration of save dataa
[14:03:39] <FromDiscord> <Elegantbeef> Interesting concept at least
[14:04:13] <FromDiscord> <Rika> thats precisely what versioning is for schemas, data migration and safe (resilient to errors) versioning...?
[14:05:08] <FromDiscord> <enthus1ast> the think is\: sql gives me the option to query any data really fast thanks to indexes, and also combine any data in any way. ‚ÜµTo do this all in eg nim, i must write quite some code that sql can do in a few lines.
[14:05:11] <FromDiscord> <enthus1ast> thing
[14:05:45] <FromDiscord> <Rika> again, beef doesnt need that
[14:05:47] <FromDiscord> <Rika> hence he doesnt use it
[14:05:56] <FromDiscord> <enthus1ast> but imho this is because of a missing "awesome" datastructure
[14:06:01] <FromDiscord> <Rika> idk what youre even talking about
[14:06:02] <FromDiscord> <Elegantbeef> Think enthus is talking about their idea
[14:06:02] <FromDiscord> <enthus1ast> yes yes i get it \:)
[14:06:06] <FromDiscord> <Rika> ok
[14:06:20] <FromDiscord> <Elegantbeef> In reference to this
[14:06:24] <FromDiscord> <enthus1ast> yes
[14:06:51] <FromDiscord> <Rika> idk why you'd care when you have "good enough" rocks/lm/sqlite
[14:06:59] <FromDiscord> <Rika> rocks is kv store only tho
[14:07:03] <FromDiscord> <Rika> i think lm is also kv only
[14:07:14] <FromDiscord> <Rika> sqlite can prolly be made to use rocks as a storage engine
[14:07:17] <FromDiscord> <enthus1ast> the issue is that i must convert from db stuff to nim types
[14:07:23] <FromDiscord> <Elegantbeef> Anyway i'm off, so send all your DB spam to your nearest nerd
[14:07:32] <FromDiscord> <Rika> okay
[14:07:38] <FromDiscord> <enthus1ast> most of my database code is mostly conversion
[14:07:44] <FromDiscord> <Phil> In reply to @Elegantbeef "Anyway i'm off, so": bye nerd
[14:07:46] <FromDiscord> <enthus1ast> thats stupid in 2022
[14:08:16] <FromDiscord> <Rika> what? thats going to be normal, youre going to be hard pressed trying to do otherwise, idgi
[14:08:53] <FromDiscord> <enthus1ast> imho thats not normal OR it should not be normal to parse strings
[14:09:19] <FromDiscord> <enthus1ast> just to get data from your datasource
[14:09:33] <FromDiscord> <Rika> mysql has a binary interface and there are libraries that use that instead
[14:09:46] <FromDiscord> <Rika> i mentioned amysql; it has support for the binary interface
[14:10:01] <FromDiscord> <Phil> This kinda makes me wish for binary storage in sqlite
[14:10:02] <FromDiscord> <enthus1ast> mh yeah that a way i guess
[14:10:10] <FromDiscord> <Phil> But then I'd store non-human-readable stuff in sqlite
[14:10:15] <FromDiscord> <Phil> And I don't like that
[14:10:20] <FromDiscord> <Rika> teeeechnically its still parsing "strings" but its not literal text
[14:10:28] <FromDiscord> <Rika> its less-ambiguous binary data
[14:10:34] <FromDiscord> <enthus1ast> but you still must tell your database what it must do in a untyped string
[14:10:41] <FromDiscord> <Rika> "an untyped string"?
[14:10:52] <FromDiscord> <Rika> what does that mean now?
[14:11:31] <FromDiscord> <enthus1ast> i meant you write your sql in a string which is very error prone, and crashes on runtime
[14:11:55] <FromDiscord> <Rika> ah well you could include a sql parser and validator (good luck)
[14:12:26] <FromDiscord> <Rika> perhaps there are C libraries that do so
[14:12:27] <FromDiscord> <enthus1ast> imho the problem is sql itself
[14:12:32] <FromDiscord> <Rika> though that means it is not compile time
[14:12:52] <FromDiscord> <Rika> im not gonna argue that sql is pretty crazy because i agree it is lol
[14:12:59] <FromDiscord> <Rika> unfortunately this is the world we live in
[14:13:04] <FromDiscord> <enthus1ast> yes
[14:14:35] *** Quits: kayabaNerve (~kayabaNer@user/kayabanerve) (Ping timeout: 250 seconds)
[14:15:24] <Amun-Ra> Shinyzenith: either use unsafeAddr or make that thing 'var'
[14:15:35] <Amun-Ra> sorry
[14:15:49] <FromDiscord> <Rika> maybe there are validation libraries for mysql at least
[14:15:57] <FromDiscord> <Rika> but idk, still doesnt fix the compile time thing
[14:19:43] <FromDiscord> <enthus1ast> i must also go (work yay)
[15:03:35] <FromDiscord> <System64 ~ Flandre Scarlet> Normal it cannot be assigned to? https://media.discordapp.net/attachments/371759389889003532/956138633096744980/unknown.png
[15:03:49] <FromDiscord> <Rika> for e in entities.mitems:
[15:04:07] <FromDiscord> <System64 ~ Flandre Scarlet> ah thanks
[15:04:15] <FromDiscord> <System64 ~ Flandre Scarlet> that's true it's immutable by default
[15:31:57] *** Joins: PMunch (~PMunch@user/pmunch)
[16:18:36] <FromDiscord> <Require Support> `int (WINAPI  pOrigMessageBox)(HWND hWnd, LPCTSTR lpText, LPCTSTR lpCaption, UINT uType) = MessageBoxA;` in c == `var pOrigMessageBox : proc = MessageBoxA` if im importing winim?
[16:31:21] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: I'm a quit message virus. Please replace your old line with this line and help me take over the world. <screw you aloo_shu my old line was better and more creative!>)
[16:43:02] <FromDiscord> <demotomohiro> You can write `var pOrigMessageBox = MessageBoxA`.
[16:49:44] <FromDiscord> <Schelz> Does someone know how anti debug would be done in nim ?
[16:50:30] <FromDiscord> <mratsim> In reply to @Schelz "Does someone know how": binary obfuscation? Like in C.
[16:50:56] <FromDiscord> <mratsim> Anything you can do in C you can do in Nim.
[16:52:01] <FromDiscord> <mratsim> Nuclear option: tag all functions inline and have a single function that do all. Then pass it to the movusfactor so that everything is a mov instruction.
[16:52:46] <FromDiscord> <hmmm> broskis I'm iterating a for loop over a seq, after a compare hit, delete an item from the same seq to avoid duplicates. Now Nim complains I'm changing a seq I'm iterating over, so how do I it
[16:53:32] <FromDiscord> <mratsim> In reply to @hmmm "broskis I'm iterating a": Iterate from the end and use indexes. + `del`
[16:54:11] <FromDiscord> <mratsim> otherwise `s.toHashset().toSeq()`
[16:54:32] <FromDiscord> <hmmm> ty, I'll try and report back
[17:04:25] <FromDiscord> <Rika> In reply to @mratsim "Nuclear option: tag all": Or the reductio one I sent a while back https://github.com/xoreaxeaxeax/reductio
[17:05:40] <FromDiscord> <tandy> does anyone know what enums are initialised to by default?
[17:05:41] <FromDiscord> <tandy> cant do `isNil`
[17:07:40] <FromDiscord> <konsumlamm> their first variant i'd guess
[17:08:25] <FromDiscord> <konsumlamm> you can only do `isNil` on types that can actually be `nil`
[17:08:45] <FromDiscord> <konsumlamm> and enums can't be (it wouldn't make much sense either)
[17:11:26] <FromDiscord> <hmmm> turns instead of deleting I could just change the seq element so something that cannot be hit by the compare. Now if I want to check the seq A has exactly the same elements as seq B in different order do I turn both in sets and compare right?
[17:11:38] <FromDiscord> <hmmm> turns out
[17:25:08] *** Quits: mahlon (~mahlon@martini.nu) (Ping timeout: 268 seconds)
[17:26:51] <PMunch> @tandy, they default to binary 0 as with everything in Nim
[17:27:11] <PMunch> If you don't assign numbers to them then it's the first option as that is value 0
[17:33:39] <FromDiscord> <auxym> yes that. Consider using `Option[YourEnumType]` if you want to signal a missing value (or make the first option a special/sentinel value).
[17:35:36] <PMunch> https://play.nim-lang.org/#ix=3Tg9
[17:38:07] <FromDiscord> <auxym> holey enums are not Ordinals anymore though which tends to break a lot of stuff, IIRC (sets, succ/pred, etc)
[17:39:14] <FromDiscord> <mratsim> In reply to @auxym "holey enums are not": they never were. and they always broke stuff, it was made apparent.
[17:45:27] <FromDiscord> <auxym> oh yeah I know, I meant anymore in the sense that a regular enum is Ordinal, but once you make a hole in it, it's not Ordinal anymore
[18:03:30] <FromDiscord> <fbpyr> sent a code paste, see https://paste.rs/dwq
[18:32:42] <FromDiscord> <hmmm> friendsies I want to add a feature that takes a nim string and places it into an outlook compose new message, do I need to fiddle with something in osproc / os or there is a simpler way
[18:35:49] <FromDiscord> <Rika> 1. Good luck
[18:35:58] <FromDiscord> <hmmm> windows has something like send to -> mail recipient in context menu, I think it uses the default mail app which is thunderbird in my case, but that's fine
[18:38:00] <FromDiscord> <hmmm> sent a code paste, see https://play.nim-lang.org/#ix=3Tgw
[18:38:26] <FromDiscord> <hmmm> we need to find a win32 thingy in nim
[18:38:33] <FromDiscord> <Rika> Winim?
[18:38:37] <FromDiscord> <hmmm> maybe!
[18:38:41] <FromDiscord> <hmmm> I'll check
[18:41:06] <FromDiscord> <Bubblie> Does nim have anything for protobuf datastructurr
[18:41:18] <FromDiscord> <Bubblie> (edit) "datastructurr" => "datastructure"
[18:41:55] <FromDiscord> <Rika> A lot
[18:41:58] <FromDiscord> <Bubblie> SHEEEEEESH
[18:42:01] <FromDiscord> <Bubblie> Lets go
[18:42:04] <FromDiscord> <Rika> Search GitHub, can‚Äôt be bothered lol
[18:42:13] <FromDiscord> <Rika> There‚Äôs a good amount given the size of Nim I mean
[18:42:16] <FromDiscord> <Bubblie> https://github.com/PMunch/protobuf-nim
[18:42:22] <FromDiscord> <Bubblie> I love this language lets go
[18:42:36] <FromDiscord> <Bubblie> Im getting use to discard a bit though
[18:42:39] <FromDiscord> <Bubblie> Its a new thing for me
[18:42:48] <FromDiscord> <Bubblie> Especially when making void methods and procs
[18:42:57] <FromDiscord> <Bubblie> Oh yeah, when should I use method and when should I use proc
[18:43:02] <FromDiscord> <Bubblie> They seem to be two different things
[18:43:11] <PMunch> In general you should always use proc
[18:43:26] <FromDiscord> <Bubblie> Alright
[18:43:31] <FromDiscord> <Bubblie> I wonder why method is there then
[18:43:33] <PMunch> If you need method then you would know you needed it :P
[18:43:40] <PMunch> It is runtime dispatch
[18:43:47] <PMunch> Procs are compile-time dispatch
[18:44:00] <FromDiscord> <Bubblie> Ohhh
[18:44:26] <PMunch> So you use methods for some object oriented stuff
[18:44:38] <PMunch> But in general it's not used a lot
[18:44:52] <FromDiscord> <Bubblie> Makes sense
[18:45:00] <PMunch> And about discard, if you have to use discard you should probably do error handling or something instead :P
[18:45:20] <PMunch> discard is literally "yes I know this thing returns something that's probably important, but I don't care"
[19:06:53] *** Joins: arkurious (~arkurious@user/arkurious)
[19:22:00] <FromDiscord> <Shinyzenith> sent a code paste, see https://play.nim-lang.org/#ix=3TgF
[19:22:19] <FromDiscord> <Shinyzenith> I'm not sure why but removing it gets rid of the segfault
[19:22:47] <FromDiscord> <Shinyzenith> the function call looks fine to me
[19:25:42] <FromDiscord> <Shinyzenith> Also noticed something, the template you defined "fieldParentPtr" didn't return a pointer to the base struct
[19:25:46] <FromDiscord> <Shinyzenith> which is odd
[19:25:52] <FromDiscord> <Shinyzenith> because we're casting it to ptr of T
[19:26:57] <PMunch> @Shinyzenith, do you have the code?
[19:27:21] <FromDiscord> <auxym> @Shinyzenith also did you see this? https://discord.com/channels/371759389889003530/371759389889003532/955974017364410370
[19:27:39] <FromDiscord> <Shinyzenith> In reply to @PMunch "<@633967275090771971>, do you have": yes, I'll push to an experimental branch
[19:27:44] <FromDiscord> <Shinyzenith> In reply to @auxym "<@!633967275090771971> also did you": Oh no
[19:27:46] <FromDiscord> <Shinyzenith> :( sorry
[19:27:50] <FromDiscord> <Shinyzenith> i'll go through it now
[19:28:31] <FromDiscord> <Shinyzenith> In reply to @Elegantbeef "So it's due to": üòî
[19:31:11] <FromDiscord> <Shinyzenith> @PMunch https://github.com/waycrate/nim-wl/tree/devel
[19:32:27] <PMunch> By the way, you can write a rename callback for Futhark
[19:33:05] <FromDiscord> <Shinyzenith> i don't quite understand, can you provide an example?
[19:33:06] <PMunch> So you can have something like `if name.startsWith("struct_"): name[7..^1]` to remove all those `struct` names
[19:33:16] <FromDiscord> <Shinyzenith> O
[19:33:25] <PMunch> But I plan on fixing those names in an upcoming release anyways
[19:33:35] <FromDiscord> <Shinyzenith> Oh awesome!
[19:33:42] <PMunch> Those and the static inlines will likely be the same release
[19:33:48] <FromDiscord> <Shinyzenith> I'll wait for the release then, will keep them hardcoded for now
[19:34:49] <FromDiscord> <Shinyzenith> also if you wonder why literally almost every single line is commented under the sun, it's cuz I want to make this compositor friendly for people to learn from so I apologize ahead of time if that makes the code messy
[19:34:57] <PMunch> I mean you could also remove all the `wl_` prefixes which won't be necessary in Nim :)
[19:35:04] <PMunch> And upercase all the types
[19:35:25] <PMunch> Comments are good, as long as they are kept up to date with the code .)
[19:35:25] <FromDiscord> <Shinyzenith> In reply to @PMunch "I mean you could": It's just easier to differentiate what is from libwayland and wlroots
[19:35:33] <PMunch> Which part are you having trouble with by the way?
[19:35:59] <FromDiscord> <Shinyzenith> In reply to @PMunch "Which part are you": libherb.nim line 148, removing it also removes the segfault
[19:36:09] <FromDiscord> <Shinyzenith> In reply to @PMunch "Comments are good, as": yep I'm trying my best üòÅ
[19:37:24] <PMunch> You don't need semicolons in Nim by the way
[19:37:46] <PMunch> And it's convention to have a space after colons in type definitions
[19:37:47] <FromDiscord> <Shinyzenith> Oh ik, it just satisfies my java brain
[19:37:58] <FromDiscord> <Shinyzenith> In reply to @PMunch "And it's convention to": Noted
[19:38:10] <PMunch> e.g. `var time: struct_timespec`
[19:38:44] <FromDiscord> <Shinyzenith> I believe I've done that everywhere
[19:39:05] <FromDiscord> <Shinyzenith> other than fieldParentPtr,forgot to change that one
[19:39:35] <FromDiscord> <Shinyzenith> nvm i forgot it in a few places
[19:40:43] <FromDiscord> <Shinyzenith> fixed
[19:41:41] <NimEventer> New thread by Drkameleon: Ruby's parallel-like functionality in Nim, see https://forum.nim-lang.org/t/9032
[19:44:54] *** Joins: noeontheend (~noeonthee@12.205.205.130)
[19:47:26] <PMunch> @Shinyzenith, and you're sure that `data` is actually a pointer to a `wlr_output`?
[19:47:54] <FromDiscord> <Shinyzenith> In reply to @PMunch "<@633967275090771971>, and you're sure": which line are you talking about?
[19:48:10] <PMunch> 124
[19:48:18] <PMunch> You use that variable on line 148
[19:48:32] <PMunch> To look into its structures
[19:48:37] <FromDiscord> <Shinyzenith>  https://media.discordapp.net/attachments/371759389889003532/956210366243803156/unknown.png
[19:48:43] <FromDiscord> <Shinyzenith> oh wlr output
[19:48:46] <FromDiscord> <Shinyzenith> yeah it should have the data
[19:49:03] <FromDiscord> <Shinyzenith> libwayland callbacks will always have the respective struct in the dispatch data
[19:49:25] <FromDiscord> <Shinyzenith> Odd thing is, I had this same problem earlier with another callback
[19:49:35] <FromDiscord> <Shinyzenith>  https://media.discordapp.net/attachments/371759389889003532/956210608523579392/unknown.png
[19:49:36] <FromDiscord> <Shinyzenith> these 2
[19:49:48] <FromDiscord> <Shinyzenith> they threw the same segfault
[19:49:51] <FromDiscord> <Shinyzenith> but moving them to herb.nim fixed it
[19:49:53] <FromDiscord> <Shinyzenith> I have no idea why
[19:50:14] <FromDiscord> <Shinyzenith> so a) they surely must have the dispatch data in the data field ‚Üµb) something in libherb.nim is causing the fuck up ü•≤
[19:50:19] <PMunch> Hmm, moving them fixed it?
[19:50:22] <FromDiscord> <Shinyzenith> Yep
[19:50:24] <PMunch> That sounds a bit fishy
[19:50:37] <FromDiscord> <Shinyzenith> I can try to reproduce rn if you want
[19:50:42] <PMunch> Guess it's time for some GDB debugging
[19:50:53] <FromDiscord> <Shinyzenith> I'll get on it
[19:51:32] <FromDiscord> <Shinyzenith> oh wait before that
[19:51:38] <FromDiscord> <Shinyzenith> let me try 1 possible fix rq
[19:52:03] <FromDiscord> <Shinyzenith> oh nvm it's not a possible fix
[19:52:47] <FromDiscord> <auxym> @Shinyzenith you're taking a pointer to a stack variable here: https://github.com/waycrate/nim-wl/blob/devel/src/libherb.nim#L148
[19:53:03] <FromDiscord> <auxym> add_signal uses unsafeaddr on herb_output
[19:53:13] <FromDiscord> <Shinyzenith> segfault @ pmunch https://media.discordapp.net/attachments/371759389889003532/956211523011887104/unknown.png https://media.discordapp.net/attachments/371759389889003532/956211523234172958/unknown.png
[19:53:54] <PMunch> @auxym, oh yeah that might be it
[19:54:19] <FromDiscord> <Shinyzenith> In reply to @auxym "add_signal uses unsafeaddr on": signal_add ?
[19:54:41] <PMunch> Oh well, gotta go for a while
[19:54:49] <FromDiscord> <Shinyzenith> Cya, thank you for the help pmunch
[19:54:50] <FromDiscord> <Shinyzenith> ‚ù§Ô∏è
[19:55:42] <FromDiscord> <auxym> In reply to @Shinyzenith "signal_add ?": here https://github.com/waycrate/nim-wl/blob/devel/src/libherb.nim#L58
[19:56:25] <FromDiscord> <Shinyzenith> so should I change it to addr?
[19:56:29] <FromDiscord> <auxym> your herb_output is a stack variable so as soon as init_server() exits its memory is cleared
[19:56:44] <FromDiscord> <Shinyzenith> Oh
[19:57:02] <FromDiscord> <Shinyzenith> that makes sense why it works in the main file
[19:57:11] <FromDiscord> <Shinyzenith> instantiation is done by then, function call ends, and it returns the object
[19:57:27] <FromDiscord> <auxym> In reply to @Shinyzenith "so should I change": no. you have to make sure herb_output is kept around somehow. either manual memory management (not recommended unless you really have to for C compat) or using a ref type and keeping a ref around somewhere
[19:58:08] <FromDiscord> <Shinyzenith> I guess I'll read up about refs
[19:58:43] <FromDiscord> <auxym> ref is just a pointer, but its freeing is handled automatically by Nim's memory-manager
[19:59:23] <FromDiscord> <Shinyzenith> https://nim-lang.org/docs/system.html#ref this right?
[20:01:23] <FromDiscord> <auxym> https://nim-lang.org/docs/tut1.html#advanced-types-reference-and-pointer-types
[20:01:28] <FromDiscord> <Solitude> In reply to @Shinyzenith "https://nim-lang.org/docs/system.html#ref this righ": https://nim-lang.org/docs/manual.html#types-reference-and-pointer-types
[20:29:04] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[20:31:54] <FromDiscord> <wsantos> In reply to @Elegantbeef "<@121971538898452482> <@767093711112241162>  i": @ElegantBeef I can be wrong but I think this code is not working your proc open is not being called
[20:32:51] *** Quits: noeontheend (~noeonthee@12.205.205.130) (Ping timeout: 245 seconds)
[20:35:11] <FromDiscord> <wsantos> I've added a echo to the open function and it did not echoed anything
[20:36:33] <FromDiscord> <wsantos> but if I remove your proc it complains /shrug
[20:47:05] <FromDiscord> <Solitude> In reply to @Shinyzenith "https://nim-lang.org/docs/system.html#ref this righ": man, your program doesnt even fail at the place you said...
[20:47:07] <FromDiscord> <Solitude> https://github.com/waycrate/nim-wl/blob/devel/src/libherb.nim#L140
[20:57:43] *** Joins: mahlon (~mahlon@martini.nu)
[21:03:57] <FromDiscord> <Shinyzenith> In reply to @Solitude "man, your program doesnt": hold up, It doesn't? I made sure I wasn't on release mode and then proceeded to get the error on herb.nim
[21:04:14] <FromDiscord> <Shinyzenith> which was being triggered due to the erroneous line in libherb.nim
[21:04:24] <FromDiscord> <Shinyzenith> which Is what I mentioned
[21:04:29] <FromDiscord> <Shinyzenith> (edit) "Is" => "is"
[21:04:35] <FromDiscord> <Shinyzenith> In reply to @Solitude "https://nim-lang.org/docs/manual.html#types-referen": Thank you!
[21:14:31] <FromDiscord> <Bubblie> Looking more in depth into the nimgl bindings, whats weird is that the vulkan triangle example does not have the extension code like the main example, but the triangle.nim example doesnt use any extensions so I assume it doesnt even need the extension code, whats also weird is that this vk load function wasnt removed from the vulkan xml but is somehow not present in the nim bindings from the generator, so the generator may be the one with
[21:14:39] <FromDiscord> <Bubblie> Hopefully I can fix this today
[21:14:45] <FromDiscord> <Bubblie> And pr it
[21:14:59] <FromDiscord> <Bubblie> If it doesnt give me trouble of course
[21:15:08] <FromDiscord> <Bubblie> (It probably will)
[21:16:55] <FromDiscord> <Bubblie> Glfw instance extensions does work, vulkan extensions does not
[21:17:28] <FromDiscord> <Solitude> @PMunch any idea why i cant echo futhark generated objects with `/home/solitude/git/nim/lib/system/dollars.nim(108, 12) Error: request to generate code for .compileTime proc: Lit`
[21:19:33] <FromDiscord> <Bubblie> Does nimgl have lambdas
[21:19:36] <FromDiscord> <Bubblie> Kinda like java lambdas
[21:20:24] <PMunch> That's because Futhark uses macroutils and this bug: https://github.com/nim-lang/Nim/issues/18986
[21:20:30] <PMunch> @Solitude ^
[21:21:14] <FromDiscord> <Solitude> i dont get it
[21:21:17] <FromDiscord> <Solitude> but amazing
[21:21:50] <PMunch> Amazing?
[21:22:04] <FromDiscord> <Solitude> yes, im truly amazed..
[21:22:06] <FromDiscord> <Phil> In reply to @Bubblie "Kinda like java lambdas": It does. You can pass functions like any normal parameter and for writing anonymous procs there's the sugar stdlib
[21:22:16] <PMunch> @Solitude, by what?
[21:22:19] <FromDiscord> <Phil> Link to docs incoming once I get there
[21:22:28] <FromDiscord> <Solitude> by shit like this
[21:22:49] <PMunch> Ah right, yeah it's unfortunate
[21:23:14] <FromDiscord> <Bubblie> What happened?
[21:23:16] <FromDiscord> <Solitude> not even `severe` tag...
[21:23:18] <FromDiscord> <Bubblie> In reply to @Isofruit "It does. You can": Also cool
[21:23:51] <PMunch> @Solitude, I don't think any of the core devs have seen the issue. It's not tagged with anything
[21:23:59] <PMunch> @Solitude, which version are you on?
[21:24:03] <FromDiscord> <Phil> In reply to @Bubblie "Kinda like java lambdas": https://nim-lang.org/docs/sequtils.html‚ÜµYou want to look at the first example, notice how they import std/sugar‚Üµ(Under the hood it's really just writing the syntax `proc(<yourParams>): <outputType> = <yourProcBody>` for you )
[21:24:14] <FromDiscord> <Solitude> bleeding edge
[21:24:29] <PMunch> Oh, so what unclechu said there isn't correct
[21:24:36] <PMunch> Or rather, the actual error isn't fixed
[21:24:46] <PMunch> Could you leave a comment about that?
[21:28:24] <FromDiscord> <Bubblie> In reply to @Isofruit "https://nim-lang.org/docs/sequtils.html You want to": Swag
[21:28:35] <FromDiscord> <Bubblie> I personally really liked the way java di lambdas
[21:28:38] <FromDiscord> <Bubblie> Its one of the things they did well
[21:28:54] <FromDiscord> <Bubblie> This is pretty similar
[21:29:01] <FromDiscord> <Bubblie> With the syntaxic sugar
[21:29:19] <FromDiscord> <Phil> The syntactic sugar is straight up JS arrow functions
[21:30:12] <FromDiscord> <Phil> Which I think either JS got inspired from java for, or java got inspired for their lambda bei JS arrow functions, I actually don't know what came first
[21:30:35] <FromDiscord> <Phil> (edit) "functions," => "functions (in terms of how the syntax looks like,"
[21:32:29] <PMunch> @Solitude, is that the commit that introduces the bug?
[21:33:44] <FromDiscord> <Bubblie> In reply to @Isofruit "Which I think either": Js from java
[21:33:52] <FromDiscord> <Bubblie> Java had lambdas first
[21:34:01] <FromDiscord> <Bubblie> Before js
[21:35:58] <FromDiscord> <Solitude> In reply to @PMunch "<@104136074569211904>, is that the": its commit my compiler is on
[21:36:31] <PMunch> Oh right
[21:36:43] <PMunch> I guess a `git bisect` might be in order
[21:37:52] <FromDiscord> <Solitude> damn, cant even build older compiler... `/home/solitude/git/nim/lib/system/nimscript.nim(206, 10) Error: echo ["[NimScript] ", "exec: " & command] can have an unlisted effect: WriteIOEffect`
[21:38:05] <FromDiscord> <Solitude> truly amazing
[21:52:34] <FromDiscord> <Jakraes> Quick question, how do you remove an item from a seq at  ay index
[21:52:43] <FromDiscord> <Jakraes> (edit) " ay index" => "a y index?"
[21:53:27] <PMunch> @Solitude, you can't build an older compiler using the new compiler?
[21:53:55] <PMunch> @Jakraes, `remove` from strutils?
[21:54:07] <FromDiscord> <Jakraes> I'll check it out, thanks
[21:54:19] <FromDiscord> <Bung> @PMunch https://github.com/PMunch/nimlsp/pull/120 pls take a look
[21:54:30] <PMunch> @Jakraes, delete sorry
[21:55:15] <FromDiscord> <Jakraes> I just checked it, it's only for strings :/
[21:55:23] <PMunch> @Bubblie, done
[21:55:38] <PMunch> Oops, @Bung, done
[21:56:29] <PMunch> @Jakraes, oh I meant sequtils
[21:56:35] <FromDiscord> <Jakraes> Ah, sequtils is the thingy
[21:56:36] <FromDiscord> <Jakraes> Yup
[21:57:05] <PMunch> Maybe the pain in my leg is getting to me
[21:59:24] <FromDiscord> <Bung> hmm why it doesn't run CI ? it runs on my own fork repo well
[22:02:01] <PMunch> @Bung, no idea you're the one who implemented it :P
[22:02:48] <PMunch> Probably because nothing have been pushed yet?
[22:03:44] <FromDiscord> <Bung> uh merge doesn't consider as push?
[22:04:47] <PMunch> Well the action wasn't there when it was pushed
[22:04:53] <PMunch> It should run for the next push
[22:05:45] <FromDiscord> <Bung> okay , that's nice
[22:06:08] <FromDiscord> <Bung> I guess windows platform maybe fails
[22:07:01] *** Quits: mahlon (~mahlon@martini.nu) (Ping timeout: 245 seconds)
[22:09:32] <PMunch> As is tradition
[22:26:32] *** Quits: rwb (~augh@alogs.space) (Quit: ZNC - https://znc.in)
[22:26:44] *** Joins: rwb (~augh@alogs.space)
[22:31:30] *** Joins: kayabaNerve (~kayabaNer@user/kayabanerve)
[22:31:41] *** Joins: Zectbumo (~Zectbumo@2600:8802:5100:3f90:2c5f:1252:d0fb:7ca2)
[23:13:22] <FromDiscord> <wsantos> Is it possible to use a `concept` as type ? or it can only be used as generic constraints ?
[23:14:15] *** Joins: kayabaNerve_ (~kayabaNer@user/kayabanerve)
[23:14:37] *** Quits: kayabaNerve (~kayabaNer@user/kayabanerve) (Ping timeout: 240 seconds)
[23:20:45] <FromDiscord> <Rika> Concepts are abstract, so no types
[23:26:23] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[23:27:13] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[23:35:56] *** Quits: Zectbumo (~Zectbumo@2600:8802:5100:3f90:2c5f:1252:d0fb:7ca2) (Remote host closed the connection)
[23:42:46] *** Joins: TechAspirer (~kayabaNer@user/kayabanerve)
[23:44:57] *** Quits: kayabaNerve_ (~kayabaNer@user/kayabanerve) (Ping timeout: 240 seconds)
