[00:00:33] *** Quits: independent56 (~independe@2.25.26.98) (Ping timeout: 248 seconds)
[00:03:56] *** Joins: ricci (~ricci@31.187.110.131)
[00:04:35] <seebs> basically, yeah, := is there for brevity, and to avoid the impression that you care about a thing being zeroed out right before you assign it
[00:07:56] *** Joins: some14u (~textual@d5153017c.static.telenet.be)
[00:10:14] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[00:10:51] *** Quits: some14u (~textual@d5153017c.static.telenet.be) (Client Quit)
[00:12:44] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[00:13:48] *** Joins: some14u (~textual@d5153017c.static.telenet.be)
[00:14:22] <fizzie> There's also places where only the short declaration is allowed, like in `if` and `for` statements and others that allow a "simple" statement as an initializer.
[00:15:45] <fizzie> As in, you can do `if err := foo(); err != nil { ... }` but you can't do `if var err = foo(); err != nil { ... }`. (You can, of course, do `var err = foo(); if err != nil { ... }` but then the variable will have a different scope.)
[00:15:45] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[00:16:18] *** Quits: some14u (~textual@d5153017c.static.telenet.be) (Client Quit)
[00:16:39] *** Joins: absc (~absc@dynamic-adsl-94-34-200-127.clienti.tiscali.it)
[00:18:28] <rendar> i see
[00:18:55] *** Joins: rawley (~rawley@142.99.241.242)
[00:30:23] *** Quits: ekathva (~ekathva@2001:999:250:8f1f:9d72:5a3d:d0:fe01) (Quit: Leaving)
[00:33:37] *** Joins: christophergray (~christoph@186.151.84.243)
[00:41:54] *** Joins: nmollerup (~nmollerup@customer-2a00-7660-1612-0168-f424-63c2-936c-f5fa.ip6.gigabit.dk)
[00:41:58] *** Quits: mpldr (~mpldr@user/mpldr) (Quit: WeeChat 3.5)
[00:43:17] *** Quits: zer0bitz (~zer0bitz@2001:2003:f750:a200:d52e:866a:6f3a:60a1) (Ping timeout: 256 seconds)
[00:52:01] *** Joins: acagastya (~acagastya@wikinews/acagastya)
[00:53:48] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[00:56:11] *** Quits: absc (~absc@dynamic-adsl-94-34-200-127.clienti.tiscali.it) (Quit: Leaving)
[00:57:39] *** Quits: V (~v@anomalous.eu) (Changing host)
[00:57:39] *** Joins: V (~v@ircpuzzles/2022/april/winner/V)
[00:59:24] *** Joins: some14u (~textual@d5153017c.static.telenet.be)
[01:00:44] *** Quits: Rayke (rayke@user/rayke) (Quit: WeeChat 3.4.1)
[01:03:05] <acagastya> Hi, I have created a TCP connection to net.Dial (actually to irc.libera.chat) and I am trying to read the messages sent by the server using `bufio.NewReader(conn).ReadString('\n')`.  I am then printing those messages to stdout, but the number of messages I see printed by this are less than when I use netcat.  I am suspecting the MOTD message sent by the server contains more than one occurance of \n.  So how do I read incoming message from the serv
[01:03:05] <acagastya> character?
[01:04:44] <b0nn> acagastya: https://github.com/mindfarm/republish-bot/blob/main/platform/irc-freenode/freenode.go
[01:05:12] *** Joins: Rayke (rayke@user/rayke)
[01:05:51] <b0nn> hmm that's not reading the stream post-connect though
[01:07:07] <b0nn> This might be better - it's an IRC logging bot https://github.com/mindfarm/fluentdrama/blob/main/bot/IRC/irc.go#L183
[01:09:48] <acagastya> mhm, uses textproto...let's try that then.  Thanks, b0nn.
[01:12:47] *** Quits: bertvvvs (~bertvvvs@user/bertvvvs) (Quit: Y'all have a nice day.)
[01:21:36] <acagastya> Or, I could do `conn.Read` -- though knowing the size of response would really be beneficial.
[01:23:37] <ikke> https://pkg.go.dev/bufio#Reader.ReadString
[01:23:50] *** Quits: cim (~cim@205.185.117.110) (Quit: The Lounge - https://thelounge.chat)
[01:23:55] <ikke> oh, that's what you were using
[01:24:19] *** Joins: cim (~cim@205.185.117.110)
[01:25:38] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d99d:3b0b:7662:bc00)
[01:28:11] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[01:33:02] <acagastya> ikke, yes.  ReadString.  Somehow if I can figure out the size of the response (I guess I should read more about TCP and IRC's IETF docs), maybe buffers could come to my rescue.
[01:34:36] *** Quits: jjonah (~jjonah@p200300d5d7205100dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[01:34:39] <ikke> tcp is a streaming protocol
[01:34:57] <ikke> so the idea is that you just keep reading data and process what's comming in
[01:36:16] <acagastya> Hmm, in that case, I could create a large byte array, read until I hit \n and then send to, in this case, stdout.
[01:36:29] <ikke> that's what bufio does for you
[01:37:29] <ikke> Call r := bufio.NewREader(conn); for { line, err := r.ReadString('\n'); .. }
[01:38:20] <ikke> You now call ReadString just once
[01:38:24] <ikke> for the entire connection
[01:39:01] <acagastya> But if the message is "foo\nbar\nbaz\n", won't it drop everything after too?  Is there a way to capture the residue of the readstring?
[01:39:17] <ikke> Every time you call ReadString, it will return the next portion
[01:40:10] <acagastya> Ah, okay!  I could just keep on consuming that!
[01:41:01] <ikke> It will block until there is data
[01:43:16] *** Quits: rawley (~rawley@142.99.241.242) (Remote host closed the connection)
[01:45:48] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 272 seconds)
[01:46:39] *** Joins: chasmo77 (~chas77@c-71-193-246-4.hsd1.or.comcast.net)
[01:46:46] <acagastya> All right.  Thanks for explaining, ikke!  :D
[01:50:27] *** Joins: independent56 (~independe@2.25.26.98)
[01:51:26] *** Joins: treeford (~charleste@user/treeford)
[01:52:46] *** Quits: independent_ (~independe@2.25.26.98) (Ping timeout: 272 seconds)
[01:54:20] *** Joins: kakysha (~kakysha@user/kakysha)
[01:55:50] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 246 seconds)
[01:58:48] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[02:01:40] <dostoyevsky2> The default string is a "" but a default map is a nil map... not just an empty map, kind of annoying
[02:06:24] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d99d:3b0b:7662:bc00) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[02:09:09] <pjs> I know what a x.(X) type assertion is, but what is something like (*x.X).Method() do? In this case, "x" is already a pointer of it's object.
[02:09:56] <b0nn> X is a pointer too
[02:10:24] <b0nn> when you prepend with a * you're saying that the last thing in the.. statement.. is a pointer being dereferenced
[02:10:43] <b0nn> so you put brackets around to show the compiler where you are dereferencing
[02:11:44] <b0nn> *x.X.Method() would be dereferencing the output from that method (not possible because it's not addressable)
[02:12:07] <b0nn> (*x).X.Method() is dereferencing the first x
[02:20:49] <buu> Aren't method calls automatically dereferencing though?
[02:21:37] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 268 seconds)
[02:21:50] <b0nn> I think you're talking about the "pointer receivers and value receivers in methods" thin?
[02:21:56] <b0nn> thing*
[02:22:29] <b0nn> The thing is, if you call a method with a value, then it's going to behave differently than if you call it with the pointer
[02:22:35] *** Joins: treeford (~charleste@user/treeford)
[02:24:07] *** Quits: The_Loko (~The_Loko@79.116.41.227) (Quit: Leaving)
[02:28:23] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 260 seconds)
[02:30:57] <b0nn> uhh you might be right actually - I cannot remember what I was thinking about
[02:34:19] <buu> Yeah me either, it's been a while
[02:34:45] <buu> I think there's something like; func (*x) foo() is callable on either x or *x
[02:34:50] <buu> as x.foo
[02:36:30] *** Quits: chemsmith (~chemsmith@user/chemsmith) (Read error: Connection reset by peer)
[02:36:31] <fizzie> It's a little subtle. A method declared on a non-pointer receiver, `func (x) foo()`, is in the method sets of both `x` and `*x`. On the other hand, `func (*x) foo()` is *only* in the method set of `*x`, but there's a rule that allows a call like `x.foo()` still if x is addressable, in which case it's as if you had written `(&x).foo()`.
[02:36:44] *** Joins: chemsmith (~chemsmith@user/chemsmith)
[02:37:00] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[02:37:03] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Remote host closed the connection)
[02:38:03] <buu> augh
[02:38:44] *** Quits: independent56 (~independe@2.25.26.98) (Remote host closed the connection)
[02:39:02] *** Joins: independent56 (~independe@2.25.26.98)
[02:39:03] <buu> So do methods always get pointers to their receivers?
[02:39:16] <buu> And why would you want a pointer only receiver
[02:39:22] <buu> Is that more of an interface thing
[02:39:43] <fizzie> No, if the method is declared with a non-pointer receiver, it gets the receiver as... not a pointer.
[02:40:24] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[02:41:02] <fizzie> The method just ends up in the method sets of both types. For the pointer type, you could say it automatically gets dereferenced, I think, like you said.
[02:41:13] *** Quits: adamtajti (~adamtajti@catv-176-63-164-65.catv.fixed.vodafone.hu) (Ping timeout: 260 seconds)
[02:43:27] <fizzie> I think you might need to write `(*x.X).Method()` though if x.X is either (a) a pointer to an interface, or (b) a pointer to a pointer. But both are pretty unusual things to have.
[02:43:58] *** Joins: adamtajti (~adamtajti@catv-176-63-164-65.catv.fixed.vodafone.hu)
[02:46:14] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 246 seconds)
[02:48:15] *** Joins: imm_ (~imm_@user/imm/x-3405860)
[02:50:56] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[02:51:50] *** Quits: independent56 (~independe@2.25.26.98) (Ping timeout: 246 seconds)
[02:53:55] *** Quits: mug3n_ (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 240 seconds)
[02:55:59] *** Joins: treeford (~charleste@user/treeford)
[02:57:24] <pjs> I got the question from this that b0nn posted earlier: https://github.com/mindfarm/republish-bot/blob/main/platform/irc-freenode/freenode.go#L98
[02:57:48] <pjs> so you can see, (*c.conn) where conn is a *net.Conn
[02:58:01] <fizzie> That is, in fact, a pointer to an interface.
[02:58:33] <pjs> Interesting.
[02:58:40] <fizzie> (`net.Conn` is an interface type, so `*net.Conn` is a pointer to an interface, and therefore has no methods of its own.)
[02:58:46] <pjs> thank you everyone. Sorry for all my weird questions but this is always helpful
[02:59:43] <pjs> fizzie: Curious, why would you ever declare a pointer to an interface?
[02:59:53] *** Quits: adip (~adip@deu228.neoplus.adsl.tpnet.pl) (Ping timeout: 260 seconds)
[02:59:53] *** Quits: christophergray (~christoph@186.151.84.243) (Ping timeout: 246 seconds)
[03:00:01] <fizzie> I can't see any particular reason in that one file, at least.
[03:01:10] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 272 seconds)
[03:01:36] <b0nn> I don't know if there *is* a legitimate reason to create a pointer to an interface, but the compiler is happy with it, so there must be a reason forthe concept to exist
[03:02:26] <b0nn> I mean, an interface is really an abstract, and the type that satisfies the interface is what people are probably trying to point to, but, that's not really done by creating a pointer to the interface
[03:05:46] *** Joins: christophergray (~christoph@186.151.84.243)
[03:06:24] <fizzie> I could vaguely imagine a situation where you have an interface-typed value somewhere (let's say an `io.Reader` field in a struct), and you'd want to find a way for some code to be able to change that specific field, without giving it access to the whole struct, so you might give it an `*io.Reader` it can write through. But it's not exactly convincing.
[03:08:09] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[03:08:15] <pjs> ok well then I'll assume that's not something I should do and avoid doing so
[03:08:20] <pjs> thank you both again
[03:12:04] <fizzie> FWIW, there's no instances of `*io.Reader` in the Go distribution itself, and exactly one `*io.Writer`, and that one's just an example of using reflect.TypeOf, where there's a call to `reflect.TypeOf((*io.Writer)(nil)).Elem()`, because `reflect.TypeOf(io.Writer(nil))` wouldn't work.
[03:12:59] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[03:14:28] *** Quits: adamtajti (~adamtajti@catv-176-63-164-65.catv.fixed.vodafone.hu) (Ping timeout: 272 seconds)
[03:16:33] *** Joins: jiqiren (~jiqiren@oh-hi.org)
[03:21:31] * pjs thumbs up
[03:21:42] *** Quits: jkl (~jkl@user/jkl) (Quit: Gone.)
[03:22:47] *** Quits: whaley (~whaley@cpe-76-182-165-20.sc.res.rr.com) (Quit: It won't give up.  It wants me dead.  Goddamn this noise inside my head.)
[03:23:04] *** Joins: jkl (~jkl@user/jkl)
[03:24:49] *** Quits: kakysha (~kakysha@user/kakysha) (Ping timeout: 248 seconds)
[03:32:37] *** Quits: itsalexjones (~itsalexjo@82.4.99.241) (Read error: Connection reset by peer)
[03:33:58] *** Joins: rcernin (~rcernin@101.189.129.123)
[03:37:04] *** Joins: treeford (~charleste@user/treeford)
[03:39:24] *** Quits: kiwi49 (~kiwi49@user/kiwi49) (Quit: Leaving)
[03:41:42] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 272 seconds)
[03:42:44] *** Quits: todo75 (~todo75@user/todo75) (Remote host closed the connection)
[03:46:55] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 240 seconds)
[03:47:09] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[03:49:12] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[03:50:34] *** Quits: shka (~herr@109.231.3.55) (Ping timeout: 272 seconds)
[03:59:40] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 268 seconds)
[04:02:57] *** Quits: tebruno99 (~tebruno99@user/tebruno99) (Quit: The Lounge - https://thelounge.chat)
[04:03:31] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[04:03:33] *** Joins: tebruno99 (~tebruno99@user/tebruno99)
[04:09:37] *** Quits: ricci (~ricci@31.187.110.131) (Quit: ricci)
[04:11:31] *** Quits: hub (~hub@user/hub) (Quit: -)
[04:11:52] *** Joins: llorllale (~llorllale@198.98.119.85)
[04:12:04] *** Joins: hub (~hub@user/hub)
[04:13:21] *** Joins: chenqisu12 (~chenqisu1@183.217.202.44)
[04:18:26] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[04:21:44] *** Quits: RhinosF1 (uid339563@miraheze/RhinosF1) (Quit: Connection closed for inactivity)
[04:22:29] *** Joins: v9fk1yn3nu (~v9fk1yn3n@user/v9fk1yn3nu)
[04:30:16] *** Quits: antranigv (~antranigv@37.252.78.252) (Quit: ZNC 1.8.2 - https://znc.in)
[04:30:41] *** Joins: antranigv (~antranigv@37.252.78.252)
[04:37:21] *** Joins: caverton3 (~caverton@ercro.tech)
[04:37:30] *** Joins: shadowchaser9 (~Shadowcha@liox.eu)
[04:37:31] *** Joins: ajfriesen1 (~ajfriesen@cable-78-35-98-50.nc.de)
[04:37:33] *** Quits: syg (~syg@flamebot.net) (Ping timeout: 256 seconds)
[04:37:33] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Ping timeout: 256 seconds)
[04:37:33] *** Quits: Kane (~Kane@portal.yarg.fr) (Ping timeout: 256 seconds)
[04:37:33] *** Joins: scjosh7 (~scjosh@206.189.79.69)
[04:37:33] *** Joins: KDDLB9 (kevin@user/kddlb)
[04:37:40] *** Joins: SoF9 (~skius@user/skius)
[04:37:42] *** Joins: haliucinas7 (~d5c5a67e@5.20.153.21)
[04:37:47] *** Quits: KDDLB (kevin@user/kddlb) (Killed (NickServ (GHOST command used by KDDLB9)))
[04:37:48] *** KDDLB9 is now known as KDDLB
[04:37:50] *** Joins: ziofork526 (~ziofork@fr.worn.eu)
[04:38:08] *** Quits: CrunchyChewie (~CrunchyCh@user/crunchychewie) (Read error: Connection reset by peer)
[04:38:10] *** Quits: scjosh (~scjosh@206.189.79.69) (Read error: Connection reset by peer)
[04:38:10] *** scjosh7 is now known as scjosh
[04:38:15] *** Joins: Kane (~Kane@portal.yarg.fr)
[04:38:16] *** Joins: mooff7 (mooff@awful.cooking)
[04:38:27] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:38:27] *** Joins: CrunchyChewie (~CrunchyCh@user/crunchychewie)
[04:38:41] *** Quits: ShotokanZH (~ShotokanZ@aitch.me) (Ping timeout: 256 seconds)
[04:38:50] *** Quits: caverton (~caverton@ercro.tech) (Read error: Connection reset by peer)
[04:38:51] *** caverton3 is now known as caverton
[04:38:53] *** Quits: kochchef (~quassel@80.146.255.46) (Remote host closed the connection)
[04:38:54] *** Quits: SoF (~skius@user/skius) (Read error: Connection reset by peer)
[04:38:54] *** Quits: mooff (mooff@awful.cooking) (Write error: Connection reset by peer)
[04:38:54] *** SoF9 is now known as SoF
[04:38:55] *** mooff7 is now known as mooff
[04:38:56] *** Quits: ajfriesen (~ajfriesen@cable-78-35-98-50.nc.de) (Read error: Connection reset by peer)
[04:38:57] *** ajfriesen1 is now known as ajfriesen
[04:38:59] *** Quits: shadowchaser (~Shadowcha@liox.eu) (Read error: Connection reset by peer)
[04:39:07] *** Quits: wolfshappen (~waff@irc.furworks.de) (Read error: Connection reset by peer)
[04:39:08] *** Joins: syg (~syg@flamebot.net)
[04:39:11] *** Quits: ziofork52 (~ziofork@fr.worn.eu) (Read error: Connection reset by peer)
[04:39:11] *** ziofork526 is now known as ziofork52
[04:39:15] *** Quits: haliucinas (~d5c5a67e@5.20.153.21) (Ping timeout: 256 seconds)
[04:39:15] *** Quits: g2anj (~v@58.228.230.4) (Ping timeout: 256 seconds)
[04:39:15] *** haliucinas7 is now known as haliucinas
[04:39:42] *** Joins: n8nl (~n8nl@c-24-61-77-34.hsd1.ma.comcast.net)
[04:40:00] *** Joins: kochchef (~quassel@80.146.255.46)
[04:40:03] *** Joins: wolfshappen (~waff@irc.furworks.de)
[04:41:15] *** Joins: g2anj (~v@58.228.230.4)
[04:42:39] *** Quits: Mathisen (mathisen@about/windows/staff/mathisen) (Ping timeout: 256 seconds)
[04:42:39] *** Quits: higgins (~higgins@static.38.6.217.95.clients.your-server.de) (Ping timeout: 256 seconds)
[04:42:39] *** Quits: bradp (~bradp@cpe-70-92-7-182.wi.res.rr.com) (Ping timeout: 256 seconds)
[04:42:39] *** Quits: AsenMx (~asen@user/asenmx) (Ping timeout: 256 seconds)
[04:42:39] *** Quits: fhs (~fhs@pool-108-30-71-53.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[04:42:39] *** Quits: _rubik (~rubik@user/rubik/x-6853868) (Ping timeout: 256 seconds)
[04:42:39] *** Quits: KBmePLS (~KBme@ra.ndom.dev) (Ping timeout: 256 seconds)
[04:42:54] *** Joins: Mathisen (mathisen@about/windows/staff/mathisen)
[04:42:55] *** Joins: belak51 (~belak@user/belak)
[04:42:58] *** Joins: fhs (~fhs@pool-108-30-71-53.nycmny.fios.verizon.net)
[04:42:58] *** Joins: bradp (~bradp@cpe-70-92-7-182.wi.res.rr.com)
[04:43:02] *** Joins: AsenMx (~asen@user/asenmx)
[04:43:02] *** Joins: KBme (~KBme@ra.ndom.dev)
[04:43:13] *** Quits: apotheon (~apotheon@copyfree/founder/apotheon) (Ping timeout: 256 seconds)
[04:43:13] *** Quits: dg (~dgl@dg.wtf) (Ping timeout: 256 seconds)
[04:43:13] *** Quits: Aph3x-WL (~Aph3x@li616-175.members.linode.com) (Ping timeout: 256 seconds)
[04:43:13] *** Quits: sjas (~sjas@irc.sjas.de) (Ping timeout: 256 seconds)
[04:43:13] *** Quits: Rudde (~rudde@netboot.io) (Ping timeout: 256 seconds)
[04:43:30] *** Joins: dfch_ (~dfch@user/dfch)
[04:43:35] *** Joins: Ginja (~nyx@thanatos.gn32.uk)
[04:43:47] *** Quits: GinjaNinja32 (~nyx@thanatos.gn32.uk) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: packet_lozenge (~packet_lo@user/packet-lozenge/x-7125090) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: jlaffaye (~jlaffaye@user/jlaffaye) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: OMGOMG (~bobrobert@poppy.ifi.uio.no) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: dfch (~dfch@user/dfch) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: qzio (~qzio@198.167.223.200) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: zsnes (~dead@173.82.46.220) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: eau (~chat@user/eau) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: p1nky (pinky@minime.fef.net) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: couture (~couture@user/couture) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: anticw (~anticw@157-131-153-146.fiber.dynamic.sonic.net) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: alm (~alm@user/alm) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: arcanez (~arcanez@warpedreality.org) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: go (~puck@undernet.hu) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: feuerrot (~feuerrot@shells.chaosdorf.de) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: sam1 (~sam1@molly.millions.slask.me) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: TDT (~TDT@20.118.225.139) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: Nnavd (~Nnavd@ec2-34-220-224-214.us-west-2.compute.amazonaws.com) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: wkalt (~wkalt@user/wkalt) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: belak (~belak@user/belak) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: Ekho (~Ekho@user/ekho) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: nz (~david@oh.not.bad.aye.yeah.nah.nz) (Ping timeout: 256 seconds)
[04:44:11] *** Joins: packet_lozenge (~packet_lo@user/packet-lozenge/x-7125090)
[04:44:21] *** Quits: shackra (~irc-chat-@52.68.179.186.ufinet.co.cr) (Ping timeout: 256 seconds)
[04:44:21] *** Quits: mohan43u (~mohan@user/mohan43u) (Ping timeout: 256 seconds)
[04:44:21] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Ping timeout: 256 seconds)
[04:44:21] *** Quits: Lost (cold@user/lost) (Ping timeout: 256 seconds)
[04:44:21] *** Quits: torin (~torin@user/torin) (Ping timeout: 256 seconds)
[04:44:29] *** Joins: fjmorazan_ (~quassel@user/fjmorazan)
[04:44:31] *** Joins: shackra (~irc-chat-@52.68.179.186.ufinet.co.cr)
[04:44:32] *** Joins: Nnavd (~Nnavd@ec2-34-220-224-214.us-west-2.compute.amazonaws.com)
[04:44:42] *** belak51 is now known as belak
[04:44:51] *** Joins: Rudde (~rudde@netboot.io)
[04:45:15] *** Joins: OMGOMG (~bobrobert@poppy.ifi.uio.no)
[04:45:17] *** Joins: alm (~alm@user/alm)
[04:45:17] *** Joins: couture (~couture@user/couture)
[04:45:17] *** Joins: zsnes (~dead@173.82.46.220)
[04:45:18] *** Joins: apotheon (~apotheon@copyfree/founder/apotheon)
[04:45:21] *** Joins: ShotokanZH (~ShotokanZ@aitch.me)
[04:45:25] *** Joins: eau (~chat@user/eau)
[04:45:25] *** Joins: qzio (~qzio@198.167.223.200)
[04:45:30] *** Joins: feuerrot (~feuerrot@shells.chaosdorf.de)
[04:45:30] *** Joins: jlaffaye (~jlaffaye@user/jlaffaye)
[04:45:39] *** Joins: wkalt (~wkalt@user/wkalt)
[04:45:39] *** Joins: go (~puck@undernet.hu)
[04:45:46] *** Joins: anticw (~anticw@157-131-153-146.fiber.dynamic.sonic.net)
[04:45:47] *** Joins: Lost (cold@user/lost)
[04:45:52] *** Joins: TDT (~TDT@20.118.225.139)
[04:45:54] *** Joins: torin (~torin@cpc158497-croy28-2-0-cust45.19-2.cable.virginm.net)
[04:45:54] *** Joins: mohan43u (~mohan@user/mohan43u)
[04:45:54] *** Quits: torin (~torin@cpc158497-croy28-2-0-cust45.19-2.cable.virginm.net) (Changing host)
[04:45:54] *** Joins: torin (~torin@user/torin)
[04:46:01] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:46:12] *** Joins: p1nky (pinky@minime.fef.net)
[04:47:36] *** Joins: Ekho (~Ekho@user/ekho)
[04:47:38] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:48:34] *** Joins: higgins (~higgins@static.38.6.217.95.clients.your-server.de)
[04:48:58] *** Joins: dg (~dgl@dg.wtf)
[04:52:42] *** Quits: llorllale (~llorllale@198.98.119.85) (Ping timeout: 268 seconds)
[04:54:14] *** Quits: some14u (~textual@d5153017c.static.telenet.be) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[04:54:21] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (Remote host closed the connection)
[04:54:47] *** Joins: some14u (~textual@d5153017c.static.telenet.be)
[04:55:51] *** Joins: sjas (~sjas@irc.sjas.de)
[04:56:44] *** Joins: sam1 (~sam1@molly.millions.slask.me)
[04:56:53] *** Joins: arcanez (~arcanez@warpedreality.org)
[04:57:18] *** Joins: Aph3x-WL (~Aph3x@li616-175.members.linode.com)
[04:57:22] *** Joins: nz (~david@oh.not.bad.aye.yeah.nah.nz)
[04:58:15] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[04:58:17] *** Quits: LtHummus (~lthummus@user/LtHummus) (Quit: ZNC 1.8.2 - https://znc.in)
[05:02:15] *** Joins: LtHummus (~lthummus@user/LtHummus)
[05:11:19] *** Joins: treeford (~charleste@user/treeford)
[05:16:08] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 268 seconds)
[05:21:19] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[05:26:37] *** Quits: n8nl (~n8nl@c-24-61-77-34.hsd1.ma.comcast.net) (Ping timeout: 268 seconds)
[05:29:27] *** Joins: Guest87 (~Guest87@2601:282:167f:fe6d:8970:62c8:4ea5:1ce0)
[05:32:42] *** Quits: andlabs (~andlabs@2a00:79e1:abc:1a12:e9dd:8499:105b:c2) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[05:34:36] *** Quits: haniaF (~haniaF@79.191.93.146.ipv4.supernova.orange.pl) (Ping timeout: 240 seconds)
[05:35:38] *** Joins: haniaF (~haniaF@79.191.100.214.ipv4.supernova.orange.pl)
[05:39:56] *** Quits: Guest87 (~Guest87@2601:282:167f:fe6d:8970:62c8:4ea5:1ce0) (Quit: Client closed)
[05:40:16] *** Joins: Church (~aleph@72.80.0.136)
[05:41:35] *** Quits: rcernin (~rcernin@101.189.129.123) (Ping timeout: 256 seconds)
[05:43:31] *** Joins: rcernin (~rcernin@101.189.129.123)
[05:44:44] *** Quits: haniaF (~haniaF@79.191.100.214.ipv4.supernova.orange.pl) (Ping timeout: 246 seconds)
[05:45:22] *** Joins: haniaF (~haniaF@79.191.91.134.ipv4.supernova.orange.pl)
[05:47:00] *** Joins: neurocyte861449 (~neurocyte@IP-045093110082.dynamic.medianet-world.de)
[05:47:00] *** Quits: neurocyte861449 (~neurocyte@IP-045093110082.dynamic.medianet-world.de) (Changing host)
[05:47:00] *** Joins: neurocyte861449 (~neurocyte@user/neurocyte)
[05:48:26] *** Joins: n8nl (~n8nl@c-24-61-77-34.hsd1.ma.comcast.net)
[05:49:26] *** Quits: neurocyte86144 (~neurocyte@user/neurocyte) (Ping timeout: 268 seconds)
[05:49:26] *** neurocyte861449 is now known as neurocyte86144
[05:49:48] *** Joins: treeford (~charleste@user/treeford)
[05:54:27] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 260 seconds)
[05:55:01] *** Joins: andlabs (~andlabs@2605:ef80:8091:72cc:84cb:e9af:6bd8:2611)
[06:00:54] *** Joins: andlabs_ (~andlabs@2605:ef80:8095:42fb:e54b:e45e:f1af:136e)
[06:04:44] *** Joins: andlabs__ (~andlabs@2605:ef80:8095:42fb:b4a0:2934:ecc4:62a6)
[06:05:23] *** Quits: theoceaniscool (~theoceani@119.12.241.230) (Ping timeout: 260 seconds)
[06:06:05] *** Quits: andlabs (~andlabs@2605:ef80:8091:72cc:84cb:e9af:6bd8:2611) (Ping timeout: 268 seconds)
[06:06:32] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[06:07:47] *** Joins: treeford (~charleste@user/treeford)
[06:08:33] *** Quits: andlabs_ (~andlabs@2605:ef80:8095:42fb:e54b:e45e:f1af:136e) (Ping timeout: 268 seconds)
[06:11:38] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 268 seconds)
[06:12:39] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 260 seconds)
[06:14:03] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[06:17:54] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[06:21:35] *** Joins: theoceaniscool (~theoceani@93.177.120.244)
[06:25:54] *** Joins: walterwhip (~walterwhi@user/walterwhip)
[06:31:59] *** Quits: some14u (~textual@d5153017c.static.telenet.be) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[06:32:27] *** Joins: some14u (~textual@d5153017c.static.telenet.be)
[06:36:59] *** Quits: some14u (~textual@d5153017c.static.telenet.be) (Ping timeout: 250 seconds)
[06:39:18] *** Joins: lxdr3 (~lxdr@user/lxdr)
[06:39:20] *** Joins: ypszilon0 (~ypszilon@user/ypszilon)
[06:39:32] *** Quits: lxdr3 (~lxdr@user/lxdr) (Remote host closed the connection)
[06:39:42] *** Joins: csmiga1 (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com)
[06:39:49] *** Joins: iivvoo5 (~l@m3r.nl)
[06:39:57] *** Quits: nikos (~nikos@nikos.dev) (Ping timeout: 256 seconds)
[06:39:57] *** Quits: a1paca (~a1paca@user/a1paca) (Ping timeout: 256 seconds)
[06:40:08] *** Joins: redquasar_ (~redquasar@user/redquasar)
[06:40:16] *** Joins: blackwood821_ (~blackwood@user/blackwood821)
[06:40:19] *** Joins: gsora_ (~gsora@140.238.174.213)
[06:41:05] *** Quits: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com) (Ping timeout: 256 seconds)
[06:41:05] *** Quits: void09 (~void@150.230.21.57) (Ping timeout: 256 seconds)
[06:41:05] *** Quits: iivvoo (~l@m3r.nl) (Ping timeout: 256 seconds)
[06:41:05] *** Quits: redquasar (~redquasar@user/redquasar) (Ping timeout: 256 seconds)
[06:41:05] *** Quits: ypszilon (~ypszilon@user/ypszilon) (Ping timeout: 256 seconds)
[06:41:05] *** Quits: blackwood821 (~blackwood@user/blackwood821) (Ping timeout: 256 seconds)
[06:41:05] *** Quits: lxdr (~lxdr@user/lxdr) (Ping timeout: 256 seconds)
[06:41:05] *** Quits: ario (~ario@159.65.220.102) (Ping timeout: 256 seconds)
[06:41:05] *** Quits: gsora (~gsora@140.238.174.213) (Ping timeout: 256 seconds)
[06:41:05] *** iivvoo5 is now known as iivvoo
[06:41:05] *** Rhvs is now known as Rhys
[06:41:05] *** csmiga1 is now known as csmiga
[06:41:05] *** ypszilon0 is now known as ypszilon
[06:41:13] *** Joins: acosta3 (~acosta@163-172-62-165.rev.poneytelecom.eu)
[06:41:14] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Ping timeout: 268 seconds)
[06:41:22] *** redquasar_ is now known as redquasar
[06:41:39] *** Quits: snits (~quassel@ip98-179-76-75.ph.ph.cox.net) (Ping timeout: 256 seconds)
[06:41:44] *** Joins: void09 (~void@150.230.21.57)
[06:41:52] *** Joins: snits (~quassel@ip98-179-76-75.ph.ph.cox.net)
[06:42:08] *** Joins: a1paca (~a1paca@user/a1paca)
[06:42:19] *** Joins: nikos (~nikos@nikos.dev)
[06:42:36] *** Quits: acosta (~acosta@163-172-62-165.rev.poneytelecom.eu) (Read error: Connection reset by peer)
[06:42:36] *** acosta3 is now known as acosta
[06:42:55] *** Joins: ario (~ario@159.65.220.102)
[06:45:00] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:48:38] *** Quits: n8nl (~n8nl@c-24-61-77-34.hsd1.ma.comcast.net) (Ping timeout: 268 seconds)
[06:49:17] *** Joins: some14u (~textual@d5153017c.static.telenet.be)
[06:50:27] *** Quits: christophergray (~christoph@186.151.84.243) (Ping timeout: 260 seconds)
[06:52:20] *** Quits: beholders_eye (~weechat@2804:1b3:70c2:80b4:37b:3fb6:164f:722e) (Ping timeout: 268 seconds)
[06:52:29] *** Quits: andlabs__ (~andlabs@2605:ef80:8095:42fb:b4a0:2934:ecc4:62a6) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[06:55:08] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Quit: 404)
[06:56:18] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[06:57:51] *** Quits: some14u (~textual@d5153017c.static.telenet.be) (Ping timeout: 245 seconds)
[06:58:12] *** Joins: treeford (~charleste@user/treeford)
[07:02:26] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 246 seconds)
[07:05:14] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Read error: Connection reset by peer)
[07:07:01] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[07:12:28] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[07:13:02] *** Joins: yagamilito (~yagamilit@2601:642:4600:34b0:102d:fff3:ec75:fbd7)
[07:16:17] *** Quits: LiftLeft (~LiftLeft@airstream-nelson-fiber-dhcp-007-17.dsl.airstreamcomm.net) (Ping timeout: 248 seconds)
[07:16:34] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Remote host closed the connection)
[07:16:36] <yagamilito> hello
[07:16:36] <yagamilito> i am seeing this error
[07:16:37] <yagamilito> no required module provides package github.com/gardener/gardener/pkg/client/kubernetes; to add it:
[07:16:37] <yagamilito> Â go get github.com/gardener/gardener/pkg/client/kubernetes
[07:16:38] <yagamilito> make: *** [unit] Error 1
[07:16:38] <yagamilito> i tried running
[07:16:39] <yagamilito> go get github.com/gardener/gardener/pkg/client/kubernetes
[07:16:39] <yagamilito> how to fix this
[07:18:28] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[07:19:10] <seebs> it's possible that the make command is doing something in a different directory or something? i don't know. is there a readme or something? what are you trying to build?
[07:19:34] *** Joins: christophergray (~christoph@186.151.84.243)
[07:23:25] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Remote host closed the connection)
[07:23:45] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[07:29:44] *** Quits: christophergray (~christoph@186.151.84.243) (Ping timeout: 246 seconds)
[07:32:35] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Remote host closed the connection)
[07:32:56] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[07:38:59] *** Quits: rcernin (~rcernin@101.189.129.123) (Ping timeout: 260 seconds)
[07:44:29] *** Joins: rcernin (~rcernin@101.189.129.123)
[07:51:11] *** Joins: DogHackit (~doghackit@c-76-27-57-63.hsd1.ut.comcast.net)
[07:52:45] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[08:00:49] *** Joins: treeford (~charleste@user/treeford)
[08:02:49] <b0nn> https://twitter.com/porges/status/1511184044498718728
[08:03:00] *** Quits: chenqisu12 (~chenqisu1@183.217.202.44) (Quit: Leaving)
[08:03:24] <b0nn> I mean, strictly speaking it's really "Any library that's location changes will break things" but it's kinda funny
[08:03:44] <b0nn> that's thats
[08:03:54] *** Quits: anticw (~anticw@157-131-153-146.fiber.dynamic.sonic.net) (Remote host closed the connection)
[08:05:01] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 240 seconds)
[08:05:42] *** Joins: anticw (~anticw@157-131-153-146.fiber.dynamic.sonic.net)
[08:14:20] *** Joins: treeford (~charleste@user/treeford)
[08:17:41] *** Quits: KekS (~KekSi@dynamic-077-180-084-156.77.180.pool.telefonica.de) (Ping timeout: 246 seconds)
[08:19:24] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[08:20:03] *** Joins: andlabs (~andlabs@pool-72-69-84-9.nycmny.fios.verizon.net)
[08:23:03] *** Joins: KekSi (~KekSi@77.185.189.53)
[08:23:59] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 246 seconds)
[08:37:49] *** Quits: Valentine (~valentine@hackerspacesg/valentine) (Ping timeout: 256 seconds)
[08:39:42] *** Joins: Valentine (~valentine@hackerspacesg/valentine)
[08:40:05] *** Quits: vhost- (~vhost@65.102.48.134) (Ping timeout: 256 seconds)
[08:40:21] *** Joins: vhost- (~vhost@65.102.48.134)
[08:43:08] *** Joins: ekathva (~ekathva@2001:999:250:8f1f:76db:3839:8c62:de89)
[08:47:35] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 260 seconds)
[08:49:30] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[08:51:39] *** Joins: favadi (~favadi@2001:ee0:4081:610b:31ed:8a80:88bc:7e7b)
[09:07:00] *** Quits: fling (~fling@user/fling) (Remote host closed the connection)
[09:07:23] *** Joins: fling (~fling@user/fling)
[09:07:41] *** Parts: acagastya (~acagastya@wikinews/acagastya) ()
[09:08:47] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 246 seconds)
[09:15:05] *** Joins: noarb (~noarb@user/noarb)
[09:18:36] *** Joins: treeford (~charleste@user/treeford)
[09:23:03] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 260 seconds)
[09:30:37] *** Quits: c10l (~c10l@user/c10l) (Quit: See ya! o/)
[09:30:53] *** Joins: c10l (~c10l@user/c10l)
[09:33:00] *** Joins: KaitoDaumoto (Frat@user/kaitodaumoto)
[09:35:08] *** Quits: kn100 (~kn100@wireguard/tunneler/kn100) (Quit: https://kn100.me :))
[09:35:27] *** Joins: kn100 (~kn100@wireguard/tunneler/kn100)
[09:42:04] *** Quits: DogHackit (~doghackit@c-76-27-57-63.hsd1.ut.comcast.net) (Quit: WeeChat 3.4.1)
[09:53:48] *** Quits: favadi (~favadi@2001:ee0:4081:610b:31ed:8a80:88bc:7e7b) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[09:56:40] *** Joins: acagastya (~acagastya@wikinews/acagastya)
[10:05:57] *** Joins: favadi (~favadi@2001:ee0:4081:610b:dd2e:cd79:159f:cf8d)
[10:08:15] *** Quits: lack (~lack@user/lack) (Ping timeout: 256 seconds)
[10:10:13] *** Joins: adip (~adip@deu228.neoplus.adsl.tpnet.pl)
[10:11:15] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[10:13:15] *** Joins: fling (~fling@user/fling)
[10:15:16] *** Joins: lack (~lack@user/lack)
[10:19:07] *** Quits: yagamilito (~yagamilit@2601:642:4600:34b0:102d:fff3:ec75:fbd7) (Quit: Client closed)
[10:19:41] *** Joins: treeford (~charleste@user/treeford)
[10:21:45] *** Quits: favadi (~favadi@2001:ee0:4081:610b:dd2e:cd79:159f:cf8d) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[10:22:46] *** Joins: favadi (~favadi@2001:ee0:4081:610b:7121:c8f9:8c62:8f60)
[10:23:25] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:24:23] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 260 seconds)
[10:30:56] <acagastya> bufio.ReadString reads the buffer until it find the delimiter byte...is it possible to make it keep on reading until it hits CRLF without needing to make an arbitarily large buffer to hold the incoming request?
[10:35:31] *** Joins: shiroyas1 (~shiroyash@ec2-3-124-70-31.eu-central-1.compute.amazonaws.com)
[10:36:09] *** Joins: imm__ (~imm_@user/imm/x-3405860)
[10:36:19] *** Joins: caubert_ (~caubert@136.244.111.235)
[10:37:23] *** Quits: sudden (~cat@user/sudden) (Ping timeout: 256 seconds)
[10:37:23] *** Quits: shiroyasha (~shiroyash@ec2-3-124-70-31.eu-central-1.compute.amazonaws.com) (Ping timeout: 256 seconds)
[10:37:46] *** Joins: jhchabran_ (~jhchabran@user/jhchabran)
[10:37:57] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 256 seconds)
[10:37:57] *** Quits: caubert (~caubert@136.244.111.235) (Ping timeout: 256 seconds)
[10:39:05] *** Quits: jhchabran (~jhchabran@user/jhchabran) (Ping timeout: 256 seconds)
[10:39:12] *** Joins: sudden (~cat@user/sudden)
[10:44:49] *** Joins: mpldr (~mpldr@user/mpldr)
[10:53:30] *** Joins: habamax (~habamax@user/habamax)
[10:53:48] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:01:31] *** Quits: favadi (~favadi@2001:ee0:4081:610b:7121:c8f9:8c62:8f60) (Ping timeout: 260 seconds)
[11:03:32] *** Quits: epony (epony@user/epony) (Quit: QUIT)
[11:06:23] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[11:08:23] *** Joins: jcajka (~jcajka@ip-86-49-244-111.net.upcbroadband.cz)
[11:15:55] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[11:17:24] *** Joins: fling (~fling@user/fling)
[11:23:03] *** Joins: RhinosF1 (uid339563@miraheze/RhinosF1)
[11:32:50] *** Joins: saschagrunert (~saschagru@46.128.124.48)
[11:33:48] *** Quits: remote (~self@user/hackers) (Ping timeout: 260 seconds)
[11:33:52] *** Joins: xsteadfastx (~marv@94.31.99.245)
[11:35:31] *** Joins: remote (~self@user/hackers)
[11:44:25] *** Joins: shka (~herr@109.231.3.55)
[11:49:45] *** Joins: chenqisu1 (~chenqisu1@183.217.202.44)
[11:53:19] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:57:50] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 246 seconds)
[12:02:26] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d99d:3b0b:7662:bc00)
[12:07:14] *** imm__ is now known as imm_
[12:10:45] *** Joins: mollerup (~nmollerup@customer-2a00-7660-1612-0168-0b24-89ef-9770-22f7.ip6.gigabit.dk)
[12:11:08] *** Quits: rcernin (~rcernin@101.189.129.123) (Quit: WeeChat 3.4.1)
[12:11:25] *** Quits: nmollerup (~nmollerup@customer-2a00-7660-1612-0168-f424-63c2-936c-f5fa.ip6.gigabit.dk) (Read error: Connection reset by peer)
[12:16:10] *** Quits: mollerup (~nmollerup@customer-2a00-7660-1612-0168-0b24-89ef-9770-22f7.ip6.gigabit.dk) (Remote host closed the connection)
[12:19:14] *** Quits: fling (~fling@user/fling) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[12:19:30] *** Joins: fling (~fling@user/fling)
[12:20:29] *** Joins: epony (epony@user/epony)
[12:23:56] *** Joins: ricci (~ricci@31.187.110.131)
[12:26:16] <rendar> with `var x int = 4` you specify `var <name> <type> = <value>` but with `var x = [9]int{1,2,3...}` you specify `var <name> = <type><value>` -- is this normal?
[12:27:24] <aLeSD[m]> hi all
[12:27:32] <Duns_Scrotus> The [9]int{} thing is part of the value
[12:28:21] <ikke> rendar: the former would be written as: var x [9]int = [9]int{1,2,3...}
[12:28:24] *** Joins: nmollerup (~nmollerup@customer-212-237-103-18.ip4.gigabit.dk)
[12:28:38] <rendar> Duns_Scrotus, but [9]int isn't the type? e.g. i'm declaring an array of size 9
[12:28:49] <rendar> ikke, uhm, i see
[12:29:00] <rendar> my book writes it as `var x = ...`
[12:29:13] <ikke> yes, that means the type is inferred
[12:29:35] <rendar> i see now
[12:29:57] <rendar> so, {1,2,3..} without [9]int is nothing
[12:30:07] <ikke> correct
[12:30:13] <rendar> that's clear, thanks
[12:30:17] *** Joins: StyXman (~mdione@2a01:e0a:931:5060:20d:b9ff:fe52:1a0)
[12:31:11] <StyXman> I'm reading in https://pkg.go.dev/crypto#PublicKey: "Although this type is an empty interface for backwards compatibility reasons, all public key types in the standard library implement the following interface". does this mean that I have to cast the type to the filanl type to get the method I want "Equal()"?
[12:31:26] <StyXman> final*
[12:37:58] *** Quits: cim (~cim@205.185.117.110) (Ping timeout: 260 seconds)
[12:39:29] *** Rhys is now known as Guest6037
[12:39:29] *** Quits: Guest6037 (Rhys@help.lux.melted.me) (Killed (strontium.libera.chat (Nickname regained by services)))
[12:39:46] *** Joins: Rhvs (Rhys@help.lux.melted.me)
[12:40:34] *** Quits: moto (~moto@user/moto) (Ping timeout: 260 seconds)
[12:41:20] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[12:45:09] *** bkircher is now known as bkircher_afk
[12:49:30] *** Joins: nosolls (~nosolls@user/nosolls)
[12:52:14] *** Quits: mweckbecker (~matthias@weckbecker.name) (Ping timeout: 260 seconds)
[12:55:24] *** Joins: wert (~wert@user/wert)
[12:57:50] *** Joins: mweckbecker (~matthias@weckbecker.name)
[12:58:38] *** Joins: kakysha (~kakysha@user/kakysha)
[12:59:11] *** Joins: moto (~moto@user/moto)
[13:00:13] *** Quits: nosolls (~nosolls@user/nosolls) (Quit: WeeChat 3.5)
[13:04:25] *** Joins: moog_ (~moog@98.97.85.106)
[13:06:02] *** Quits: moog (~moog@98.97.85.106) (Ping timeout: 268 seconds)
[13:21:19] *** Joins: adamtajti (~adamtajti@business-212-48-250-30.business.broadband.hu)
[13:23:26] *** Quits: fling (~fling@user/fling) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[13:23:45] *** Joins: fling (~fling@user/fling)
[13:31:30] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d99d:3b0b:7662:bc00) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[13:33:22] *** Quits: adamtajti (~adamtajti@business-212-48-250-30.business.broadband.hu) (Ping timeout: 260 seconds)
[13:40:16] *** Joins: adamtajti (~adamtajti@business-212-48-250-30.business.broadband.hu)
[13:40:53] *** Joins: vimal (~vimal@2a02:a210:9641:8780:c1c8:67bc:35b:91da)
[13:44:28] *** Joins: lehmrob (~lehmrob@p578c3e7c.dip0.t-ipconnect.de)
[13:45:37] *** Quits: vimal (~vimal@2a02:a210:9641:8780:c1c8:67bc:35b:91da) (Ping timeout: 248 seconds)
[13:49:03] *** Quits: kakysha (~kakysha@user/kakysha) (Ping timeout: 260 seconds)
[13:52:21] <fizzie> StyXman: What did you mean by "final" type there? Per the documentation, you can type-assert a `crypto.PublicKey` to `interface { Equal(crypto.PublicKey) bool }` (or give that interface a name, and then type-assert it to that) if you want to call the method.
[13:55:28] *** Joins: treeford (~charleste@user/treeford)
[14:00:01] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 248 seconds)
[14:06:50] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[14:07:41] *** Joins: llorllale (~llorllale@198.98.119.85)
[14:11:45] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 248 seconds)
[14:12:14] *** Quits: belphegor666 (~satan@user/belphegor666) (Quit: WeeChat 3.4)
[14:14:28] *** Joins: belphegor666 (~satan@ip-046-223-003-068.um13.pools.vodafone-ip.de)
[14:15:04] *** Quits: belphegor666 (~satan@ip-046-223-003-068.um13.pools.vodafone-ip.de) (Changing host)
[14:15:04] *** Joins: belphegor666 (~satan@user/belphegor666)
[14:15:50] *** Joins: robyn (~robyn@144.172.118.48)
[14:15:56] *** Quits: robyn (~robyn@144.172.118.48) (Changing host)
[14:15:56] *** Joins: robyn (~robyn@user/robyndrake)
[14:25:04] *** Joins: vimal (~vimal@2a02:a210:9641:8780:c1c8:67bc:35b:91da)
[14:25:25] *** Quits: dalan62 (~dalan@59-102-63-107.tpgi.com.au) (Quit: dalan62)
[14:25:48] *** Quits: opcode (~opcode@2604:5800:0:1f::2) (Ping timeout: 240 seconds)
[14:25:51] *** Joins: dalan62 (~dalan@59-102-63-107.tpgi.com.au)
[14:27:05] *** Joins: opcode (~opcode@user/opcode)
[14:27:35] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[14:29:07] *** Joins: kakysha (~kakysha@user/kakysha)
[14:29:40] *** Joins: fling (~fling@user/fling)
[14:32:08] *** Joins: kakysha_ (~kakysha@user/kakysha)
[14:34:37] *** Quits: kakysha (~kakysha@user/kakysha) (Ping timeout: 260 seconds)
[14:39:58] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[14:44:26] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 246 seconds)
[14:44:57] *** Quits: llorllale (~llorllale@198.98.119.85) (Quit: WeeChat 3.4.1)
[14:47:36] *** Joins: llorllale (~llorllale@198.98.119.85)
[14:48:38] *** Quits: nortoh (~nortoh@user/nortoh) (Ping timeout: 246 seconds)
[14:49:52] *** Quits: lehmrob (~lehmrob@p578c3e7c.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[14:52:39] *** Joins: nortoh (~nortoh@bishop.xerrero.com)
[14:52:39] *** Quits: nortoh (~nortoh@bishop.xerrero.com) (Changing host)
[14:52:39] *** Joins: nortoh (~nortoh@user/nortoh)
[14:54:17] *** Quits: KaitoDaumoto (Frat@user/kaitodaumoto) (Remote host closed the connection)
[14:57:02] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[15:01:58] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 268 seconds)
[15:02:21] *** Quits: StyXman (~mdione@2a01:e0a:931:5060:20d:b9ff:fe52:1a0) (Ping timeout: 256 seconds)
[15:09:44] *** Quits: adamtajti (~adamtajti@business-212-48-250-30.business.broadband.hu) (Ping timeout: 252 seconds)
[15:15:09] *** Joins: Alina-ma- (~Alina-mal@37.252.83.224)
[15:15:28] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Ping timeout: 260 seconds)
[15:18:52] *** Quits: tuskkk____ (uid18470@id-18470.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[15:21:32] *** Joins: adamtajti (~adamtajti@business-212-48-250-30.business.broadband.hu)
[15:30:04] *** Joins: lehmrob (~lehmrob@p578c3e7c.dip0.t-ipconnect.de)
[15:31:42] *** Quits: adamtajti (~adamtajti@business-212-48-250-30.business.broadband.hu) (Quit: Lost terminal)
[15:34:34] *** Quits: wert (~wert@user/wert) (Quit: WeeChat 3.3)
[15:41:26] *** Quits: lehmrob (~lehmrob@p578c3e7c.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[15:48:03] *** Quits: llorllale (~llorllale@198.98.119.85) (Ping timeout: 260 seconds)
[15:49:39] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[15:52:32] *** Parts: blackwood821_ (~blackwood@user/blackwood821) ()
[15:54:09] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 248 seconds)
[15:56:09] *** Parts: shadowchaser9 (~Shadowcha@liox.eu) ()
[15:57:10] *** Joins: shadowchaser (~Shadowcha@liox.eu)
[15:58:01] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[16:00:18] *** Joins: llorllale (~llorllale@198.98.119.85)
[16:04:35] *** Quits: llorllale (~llorllale@198.98.119.85) (Ping timeout: 246 seconds)
[16:13:45] *** Quits: wolfshappen (~waff@irc.furworks.de) (Quit: later)
[16:14:10] *** Joins: wolfshappen (~waff@irc.furworks.de)
[16:15:51] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[16:16:06] *** Joins: califax (~califax@user/califx)
[16:29:51] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (Remote host closed the connection)
[16:32:15] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[16:33:58] *** Joins: fling (~fling@user/fling)
[16:34:23] *** Quits: agrosant (~agrosant@79.103.182.92.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[16:34:57] *** Joins: agrosant (~agrosant@79.103.182.92.dsl.dyn.forthnet.gr)
[16:35:38] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[16:37:40] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[16:40:02] *** Joins: independent56 (~independe@2.25.26.98)
[16:41:18] *** Quits: sevenever (~seven@user/sevenever) (Read error: Connection reset by peer)
[16:45:09] *** Joins: sevenever (~seven@user/sevenever)
[16:47:08] *** Quits: dreamcat4 (uid157427@id-157427.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[16:52:54] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[17:03:20] *** Joins: cim (~cim@205.185.117.110)
[17:04:53] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Remote host closed the connection)
[17:05:15] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[17:06:37] *** Quits: Ullarah (~ullarah@user/ullarah) (Quit: The Lounge - https://thelounge.chat)
[17:09:21] *** Quits: xsteadfastx (~marv@94.31.99.245) (Ping timeout: 248 seconds)
[17:13:53] *** Joins: Ullarah (~ullarah@user/ullarah)
[17:15:56] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[17:20:29] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[17:25:45] *** Joins: independent_ (~independe@2.25.26.98)
[17:28:33] *** Quits: independent56 (~independe@2.25.26.98) (Ping timeout: 248 seconds)
[17:28:52] *** Joins: christophergray (~christoph@186.151.84.243)
[17:32:56] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[17:33:01] *** Quits: chenqisu1 (~chenqisu1@183.217.202.44) (Ping timeout: 240 seconds)
[17:35:12] *** Joins: bertvvvs (~bertvvvs@user/bertvvvs)
[17:36:15] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[17:38:03] *** Joins: fling (~fling@user/fling)
[17:39:05] *** Quits: andlabs (~andlabs@pool-72-69-84-9.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[17:39:21] *** Quits: teasea (~teasea@user/teasea) (Quit: teasea)
[17:41:11] *** Joins: teasea (~teasea@user/teasea)
[17:41:13] *** Joins: lehmrob (~lehmrob@p578c3e7c.dip0.t-ipconnect.de)
[17:48:51] *** Joins: treeford (~charleste@user/treeford)
[17:48:52] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[17:50:13] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[17:50:25] *** Joins: califax (~califax@user/califx)
[17:51:19] *** Joins: shtirlic (~shtirlic@184.22.78.41)
[17:52:09] *** Joins: off^ (~off@c-24-99-107-170.hsd1.ga.comcast.net)
[17:53:44] *** Quits: dalan62 (~dalan@59-102-63-107.tpgi.com.au) (Quit: dalan62)
[17:54:01] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 268 seconds)
[17:54:22] *** Joins: dalan62 (~dalan@59-102-63-107.tpgi.com.au)
[17:58:39] *** Joins: jjonah (~jjonah@p200300d5d7205100dea632fffeb3342f.dip0.t-ipconnect.de)
[18:02:43] *** Joins: andlabs (~andlabs@2605:ef80:8081:5344:2190:78d1:bf0a:cbc9)
[18:02:53] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 246 seconds)
[18:04:52] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[18:05:09] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[18:10:02] *** Quits: v9fk1yn3nu (~v9fk1yn3n@user/v9fk1yn3nu) (Remote host closed the connection)
[18:20:35] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[18:23:41] *** Joins: andlabs_ (~andlabs@2605:ef80:8088:9381:11d3:68d3:dca5:efd)
[18:26:13] *** Quits: andlabs (~andlabs@2605:ef80:8081:5344:2190:78d1:bf0a:cbc9) (Ping timeout: 260 seconds)
[18:28:52] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Quit: mikoto-chan)
[18:29:09] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[18:29:43] *** Quits: andlabs_ (~andlabs@2605:ef80:8088:9381:11d3:68d3:dca5:efd) (Ping timeout: 260 seconds)
[18:29:56] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Read error: Connection reset by peer)
[18:30:00] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[18:30:18] *** Quits: walterwhip (~walterwhi@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[18:30:41] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[18:31:25] *** Joins: emg (ffa8d4e6e1@2604:bf00:561:2000::2f8)
[18:32:31] *** Quits: Alina-ma- (~Alina-mal@37.252.83.224) (Quit: !be back soon)
[18:33:25] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[18:34:47] *** Joins: arkurious (~arkurious@user/arkurious)
[18:36:47] *** Joins: beholders_eye (~weechat@2804:1b3:70c2:80b4:37b:3fb6:164f:722e)
[18:37:22] *** Quits: lehmrob (~lehmrob@p578c3e7c.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[18:39:55] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[18:40:33] *** Joins: fling (~fling@user/fling)
[18:45:50] *** Joins: some14u (~textual@d5153017c.static.telenet.be)
[18:54:15] *** Joins: todo75 (~todo75@user/todo75)
[18:54:34] *** Joins: blackwood821_ (~blackwood@user/blackwood821)
[18:55:34] *** Joins: llorllale (~llorllale@198.98.119.85)
[18:59:56] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 245 seconds)
[19:00:06] <emg> Is there a best way to create an io.Reader that is empty? It returns (0, EOF) on any read?
[19:02:23] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 246 seconds)
[19:04:10] <emg> I can do strings.NewReader("") but that feels like it's extra complicated and I should be able to create something like io.Discard but for reading
[19:04:10] <siXy> Something like bytes.NewBuffer([]byte{}) might work for you.
[19:10:04] <MD87> or io.MultiReader()
[19:11:41] <emg> siXy, MD87: thanks
[19:12:18] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[19:12:37] *** Quits: todo75 (~todo75@user/todo75) (Ping timeout: 240 seconds)
[19:15:05] *** Quits: some14u (~textual@d5153017c.static.telenet.be) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[19:15:51] *** Quits: christophergray (~christoph@186.151.84.243) (Quit: WeeChat 3.5)
[19:18:24] *** Quits: llorllale (~llorllale@198.98.119.85) (Ping timeout: 272 seconds)
[19:26:34] *** Joins: todo75 (~todo75@user/todo75)
[19:27:37] *** Joins: treeford (~charleste@user/treeford)
[19:28:55] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[19:29:14] *** Quits: bertvvvs (~bertvvvs@user/bertvvvs) (Quit: Y'all have a nice day.)
[19:39:04] *** Joins: Asgaroth (~Asgaroth@93.107.191.92)
[19:43:47] *** Quits: todo75 (~todo75@user/todo75) (Ping timeout: 268 seconds)
[19:43:48] *** Quits: fling (~fling@user/fling) (Remote host closed the connection)
[19:43:57] *** Quits: bindu (~bindu@user/bindu) (Quit: Leaving)
[19:44:04] *** Joins: fling (~fling@user/fling)
[19:44:13] *** Joins: bindu (~bindu@user/bindu)
[19:47:23] *** Quits: saschagrunert (~saschagru@46.128.124.48) (Remote host closed the connection)
[19:47:45] <fizzie> `bytes.NewReader(nil)` as well, I would think. Although you could almost certainly write an always-at-EOF "stateless" io.Reader implementation if you liked. Not that I imagine it would normally be an efficiency concern.
[19:48:10] *** Quits: seebs (~seebs@24.196.59.174) (Ping timeout: 272 seconds)
[19:49:01] <fizzie> Oh, or even just `&bytes.Reader{}`. ("The zero value for Reader operates like a Reader of an empty slice.")
[19:54:53] *** Quits: nortoh (~nortoh@user/nortoh) (Ping timeout: 268 seconds)
[19:56:05] *** Joins: ghost08 (~ghost08@adsl-dyn150.78-99-35.t-com.sk)
[19:56:15] *** Joins: nortoh (~nortoh@bishop.xerrero.com)
[19:56:15] *** Quits: nortoh (~nortoh@bishop.xerrero.com) (Changing host)
[19:56:15] *** Joins: nortoh (~nortoh@user/nortoh)
[19:56:47] *** Joins: todo75 (~todo75@user/todo75)
[20:01:00] *** Quits: todo75 (~todo75@user/todo75) (Ping timeout: 240 seconds)
[20:02:51] *** Joins: todo75 (~todo75@user/todo75)
[20:02:51] *** Joins: zstix (~zstix@c-76-115-137-165.hsd1.or.comcast.net)
[20:04:44] *** Quits: espero (~espero@ucitelonline.pedf.cuni.cz) (Quit: Leaving)
[20:07:13] *** Quits: independent_ (~independe@2.25.26.98) (Ping timeout: 268 seconds)
[20:09:12] *** Joins: espero (~espero@ucitelonline.pedf.cuni.cz)
[20:17:01] *** Joins: some14u (~textual@d5153017c.static.telenet.be)
[20:20:52] *** Joins: lungaro_ (~lungaro@99-117-118-33.lightspeed.sndgca.sbcglobal.net)
[20:21:27] <lungaro_> anyone use goose? I'm trying to use emebeded migrations and it just says "schema at version 1" despite me adding another migration
[20:21:35] <lungaro_> Seems kind of annoying to use tbh
[20:21:49] <lungaro_> zero debug info and is very silent on activities even with SetVerbose(true)
[20:22:20] *** Joins: resamvi (~resamvi@p200300f617179a003c219d8a42372b7d.dip0.t-ipconnect.de)
[20:22:20] *** Quits: resamvi (~resamvi@p200300f617179a003c219d8a42372b7d.dip0.t-ipconnect.de) (Changing host)
[20:22:20] *** Joins: resamvi (~resamvi@user/resamvi)
[20:22:32] *** Joins: andlabs (~andlabs@2a00:79e1:abc:1a0a:8ca1:5db3:192d:f772)
[20:23:39] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:b1a6:339e:65ca:f206)
[20:24:50] *** Joins: whaley (~whaley@cpe-76-182-165-20.sc.res.rr.com)
[20:26:41] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 248 seconds)
[20:28:03] *** Quits: beholders_eye (~weechat@2804:1b3:70c2:80b4:37b:3fb6:164f:722e) (Ping timeout: 260 seconds)
[20:28:41] *** Quits: caubert_ (~caubert@136.244.111.235) (Quit: WeeChat 3.4)
[20:29:01] *** Joins: caubert (~caubert@136.244.111.235)
[20:31:43] *** Quits: some14u (~textual@d5153017c.static.telenet.be) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[20:32:58] *** Joins: independent_ (~independe@2.25.26.98)
[20:34:56] *** Joins: fspax (~fspax@46.148.141.211)
[20:41:58] *** cnf8 is now known as cnf
[20:44:36] *** Quits: nortoh (~nortoh@user/nortoh) (Ping timeout: 240 seconds)
[20:46:19] *** Joins: some14u (~textual@d5153017c.static.telenet.be)
[20:48:15] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[20:50:07] *** Joins: fling (~fling@user/fling)
[20:51:26] <emg> fizzie: thanks
[20:56:30] *** Joins: MattByName (~MattByNam@cpc138182-asht8-2-0-cust870.10-1.cable.virginm.net)
[20:58:03] *** Joins: beholders_eye (~weechat@2804:1b3:70c2:80b4:37b:3fb6:164f:722e)
[20:58:53] *** Quits: MattByName (~MattByNam@cpc138182-asht8-2-0-cust870.10-1.cable.virginm.net) (Client Quit)
[20:59:32] *** Joins: bertvvvs (~bertvvvs@user/bertvvvs)
[20:59:40] *** Joins: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net)
[21:00:34] *** Quits: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net) (Client Quit)
[21:01:05] *** Quits: some14u (~textual@d5153017c.static.telenet.be) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:01:19] *** Joins: zer0bitz (~zer0bitz@2001:2003:f750:a200:5019:823:a50e:5ee6)
[21:04:58] *** Quits: wolfshappen (~waff@irc.furworks.de) (Read error: Connection reset by peer)
[21:12:24] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:b1a6:339e:65ca:f206) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[21:13:18] *** Joins: nortoh (~nortoh@bishop.xerrero.com)
[21:13:18] *** Quits: nortoh (~nortoh@bishop.xerrero.com) (Changing host)
[21:13:18] *** Joins: nortoh (~nortoh@user/nortoh)
[21:13:28] *** Joins: resamvi (~resamvi@p200300f617179a003c219d8a42372b7d.dip0.t-ipconnect.de)
[21:13:28] *** Quits: resamvi (~resamvi@p200300f617179a003c219d8a42372b7d.dip0.t-ipconnect.de) (Changing host)
[21:13:28] *** Joins: resamvi (~resamvi@user/resamvi)
[21:18:06] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 260 seconds)
[21:18:33] *** Quits: blackwood821_ (~blackwood@user/blackwood821) (Quit: ZNC 1.8.2 - https://znc.in)
[21:21:40] *** Quits: ghost08 (~ghost08@adsl-dyn150.78-99-35.t-com.sk) (Quit: WeeChat 3.5)
[21:36:33] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[21:38:28] *** Joins: blinux (~blinux@70.21.20.62)
[21:46:59] *** Joins: some14u (~textual@d5153017c.static.telenet.be)
[21:48:09] <lungaro_> any reason why go can't infer a type when the variable is locally scoped? This is such a common pattern that could be shortened.. https://go.dev/play/p/IMyRqpRec8a
[21:50:54] <fizzie> Just do https://go.dev/play/p/hVxwG0GtogL ?
[21:51:33] *** Quits: some14u (~textual@d5153017c.static.telenet.be) (Ping timeout: 260 seconds)
[21:51:55] *** Quits: fling (~fling@user/fling) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[21:52:15] *** Joins: fling (~fling@user/fling)
[21:52:22] <lungaro_> it's a contrived example here but i'm usually conditionally setting a interface elsewhere, so passing a nil one is ideal.
[21:52:34] <lungaro_> this would work but the assignment happens later
[21:53:53] *** Quits: aead (~aead@user/aead) (Ping timeout: 260 seconds)
[21:54:50] <ikke> You have to do a type assertion before you can access the underlying type
[21:55:29] <lungaro_> yeah, that's lame when the concrete type is created in the same scope
[21:55:32] <lungaro_> that's what i'm wondering about
[21:55:35] <lungaro_> a shorthand
[21:55:43] <lungaro_> but not a biggie either way
[21:55:53] <ikke> I suppose they didn't want to make this a special case
[21:56:15] <ikke> It's more consistent if you always have to do a type assertion
[21:56:20] *** Quits: cation (cation@user/cation) (Quit: Leaving)
[21:56:23] <lungaro_> i can see how that makes sense
[21:56:38] <lungaro_> special cases are slippery too, i'm sure more asks would arrise
[21:56:40] *** Joins: cation (cation@user/cation)
[21:57:54] *** Quits: habamax (~habamax@user/habamax) (Quit: WeeChat 3.0)
[22:01:44] *** Joins: resamvi (~resamvi@p200300f617179a003c219d8a42372b7d.dip0.t-ipconnect.de)
[22:01:44] *** Quits: resamvi (~resamvi@p200300f617179a003c219d8a42372b7d.dip0.t-ipconnect.de) (Changing host)
[22:01:44] *** Joins: resamvi (~resamvi@user/resamvi)
[22:03:55] <A_Dragon> it'd also likely make code generation weird
[22:04:29] *** Quits: CrunchyChewie (~CrunchyCh@user/crunchychewie) (Quit: ZNC 1.8.2 - https://znc.in)
[22:05:21] *** Joins: blackwood821_ (~blackwood@user/blackwood821)
[22:06:14] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 268 seconds)
[22:06:28] *** Quits: blackwood821_ (~blackwood@user/blackwood821) (Client Quit)
[22:07:11] *** Joins: blackwood821 (~blackwood@user/blackwood821)
[22:28:05] *** Quits: todo75 (~todo75@user/todo75) (Ping timeout: 252 seconds)
[22:32:37] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:b1a6:339e:65ca:f206)
[22:34:29] *** Quits: nortoh (~nortoh@user/nortoh) (Ping timeout: 246 seconds)
[22:38:08] *** Joins: tane (~tane@dslb-002-201-234-231.002.201.pools.vodafone-ip.de)
[22:38:09] *** Quits: tane (~tane@dslb-002-201-234-231.002.201.pools.vodafone-ip.de) (Changing host)
[22:38:09] *** Joins: tane (~tane@user/tane)
[22:38:43] *** Joins: todo75 (~todo75@user/todo75)
[22:43:23] *** Quits: todo75 (~todo75@user/todo75) (Ping timeout: 260 seconds)
[22:44:14] *** Joins: nortoh (~nortoh@bishop.xerrero.com)
[22:44:14] *** Quits: nortoh (~nortoh@bishop.xerrero.com) (Changing host)
[22:44:14] *** Joins: nortoh (~nortoh@user/nortoh)
[22:48:48] *** Quits: ricci (~ricci@31.187.110.131) (Quit: ricci)
[22:50:12] *** Joins: todo75 (~todo75@user/todo75)
[22:50:56] *** Joins: StyXman (~mdione@2a01:e0a:931:5060:20d:b9ff:fe52:1a0)
[22:51:17] <StyXman> fizzie: ah, that's better than what I did, tx :)
[22:52:07] *** Joins: resamvi (~resamvi@p200300f617179a003c219d8a42372b7d.dip0.t-ipconnect.de)
[22:52:07] *** Quits: resamvi (~resamvi@p200300f617179a003c219d8a42372b7d.dip0.t-ipconnect.de) (Changing host)
[22:52:07] *** Joins: resamvi (~resamvi@user/resamvi)
[22:52:27] *** Joins: The_Loko (~The_Loko@79.116.41.227)
[22:56:33] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 248 seconds)
[22:56:55] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[22:58:12] *** Joins: fling (~fling@user/fling)
[22:58:39] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 268 seconds)
[22:58:42] *** Joins: wolfshappen (~waff@irc.furworks.de)
[23:02:32] *** Quits: jcajka (~jcajka@ip-86-49-244-111.net.upcbroadband.cz) (Quit: Leaving)
[23:04:28] *** Quits: kakysha_ (~kakysha@user/kakysha) (Ping timeout: 260 seconds)
[23:04:37] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 240 seconds)
[23:11:51] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[23:16:43] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[23:18:29] *** Joins: Greebo (~Greebo@192.139.149.54)
[23:20:56] <FiskFan2000> Hello. If I have a net/http client executing a POST, is it possible for me to access the progress of the upload (or download), for a progress bar for example?
