[00:00:08] <Yamakaja[m]> #gnuradio:gnuradio.org 
[00:00:16] <Yamakaja[m]> (So yes)
[00:00:16] <_Darth_Vader_> okay cool
[00:00:38] <DerekKozel[m]> The Matrix room ID format is #roomname:servername.tld
[00:00:39] <Yamakaja[m]> * (So yes, but on the gnuradio.org server)
[00:00:58] <DerekKozel[m]> users are @username:servername.tld
[00:14:33] *** Joins: jemius (~imperator@2001:16b8:2dca:3400:4b42:9474:af1b:54c5)
[00:22:02] <_Darth_Vader_> Would I need to uninstall gnuradio 3.9 to install 2.8?
[00:22:06] <_Darth_Vader_> 3.8*
[00:22:39] <DerekKozel[m]> It depends on how you installed it. It's usually simplest and quickest to uninstall and then reinstall
[00:23:11] <DerekKozel[m]> It is possible to have multiple versions installed, but it's more of a manual and advanced feature unless you're using Anaconda
[00:23:38] <_Darth_Vader_> I'm not sure how 3.8 was installed. It's the PiSDR image. I'm just following the instructions from gnuradio for the 3.8 installation
[00:23:53] <_Darth_Vader_> 3.9* sorry
[00:24:35] <funkylab[m]> hm
[00:24:54] <funkylab[m]> I don't think you should try to replace the GNU Radio on such a specific distro
[00:25:03] <funkylab[m]> that basically negates the value of PiSDR
[00:25:10] <DerekKozel[m]> There's probably a different PiSDR image that has 3.8, that might be the simplest route if you need to use the Raspberry Pi
[00:25:45] <_Darth_Vader_> I'll look into that. Thanks!
[00:27:01] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[00:27:26] <DerekKozel[m]> v5.0 does. Probably 5.1, but I can't immediately see
[00:28:22] <_Darth_Vader_> Just saw that. I'm going to do 5.0
[00:29:04] <funkylab[m]> hm
[00:32:31] *** Quits: _Darth_Vader_ (~Guest5@d149-67-38-85.clv.wideopenwest.com) (Quit: Client closed)
[00:32:52] *** Joins: guest (~guest@d149-67-38-85.clv.wideopenwest.com)
[00:33:08] *** guest is now known as _Darth_Vader_
[00:34:02] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 240 seconds)
[00:39:22] *** Joins: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de)
[00:51:35] <DerekKozel[m]> The ESA is inviting folks to try hacking their OPS-SAT cubesat.
[00:51:35] <DerekKozel[m]> https://www.esa.int/Safety_Security/Live_demonstration_for_cyber_resilience
[00:56:25] <Hoernchen_> payment appears to be storytelling
[01:07:57] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[01:13:53] *** Quits: uros (~Thunderbi@2001:8a0:6074:ad00:1fb8:96c:aa1:1053) (Quit: uros)
[01:17:40] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[01:23:10] <funkylab[m]> > The next-generation GomSpace NanoCom AX100 serves as the baseline UHF radio for the OPS-SAT mission.
[01:23:22] <funkylab[m]> um, what's "next-gen" about AX100?
[01:27:21] <tnt> there was a generation before it.
[01:35:57] *** Joins: uros (~Thunderbi@2001:8a0:6074:ad00:1fb8:96c:aa1:1053)
[01:39:35] <funkylab[m]> ah, makes sense
[01:41:25] *** Quits: uros (~Thunderbi@2001:8a0:6074:ad00:1fb8:96c:aa1:1053) (Remote host closed the connection)
[01:54:37] *** Quits: OnAironaut (~OnAir@user/onaironaut) (Ping timeout: 240 seconds)
[02:28:36] *** Quits: jemius (~imperator@2001:16b8:2dca:3400:4b42:9474:af1b:54c5) (Quit: Leaving)
[02:35:31] *** Joins: Macuser (~Macuser@166.sub-174-206-113.myvzw.com)
[02:36:42] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:8079:4c7e:6b01:dc34)
[02:46:36] *** Joins: linext_ (~linext@pool-108-53-128-199.nwrknj.fios.verizon.net)
[02:49:25] *** Quits: linext__ (~linext@pool-108-53-128-199.nwrknj.fios.verizon.net) (Ping timeout: 240 seconds)
[02:55:31] *** Quits: Keshl (~Purple@idlerpg/player/Keshl) (Read error: Connection reset by peer)
[02:55:54] *** Joins: Keshl (~Purple@idlerpg/player/Keshl)
[02:56:02] *** Quits: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[02:57:33] *** Quits: Macuser (~Macuser@166.sub-174-206-113.myvzw.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[03:02:07] *** Quits: _Darth_Vader_ (~guest@d149-67-38-85.clv.wideopenwest.com) (Ping timeout: 256 seconds)
[03:15:51] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[03:19:31] *** Joins: Macuser (~Macuser@100.sub-174-206-99.myvzw.com)
[03:20:45] <noc0lour_> Smaller, lighter, still with necessary flight qualifications
[03:24:41] <noc0lour_> affordable enough for a cubesat
[03:33:13] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[03:45:29] *** Quits: Macuser (~Macuser@100.sub-174-206-99.myvzw.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[03:45:48] *** Joins: drewlander (~drewlande@74.196.20.3)
[03:57:44] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[03:57:45] *** Quits: Malvolio (~Malvolio@user/malvolio) (Quit: surface freedom safety domesticity sedentarism)
[04:17:04] *** Quits: goldrak (~goldrak@bl16-27-108.dsl.telepac.pt) (Ping timeout: 256 seconds)
[04:17:52] *** Quits: DiffieHellman (~Username@user/curve25519chacha) (Remote host closed the connection)
[04:18:22] *** Joins: DiffieHellman (~Username@user/curve25519chacha)
[04:25:18] *** Joins: Malvolio (~Malvolio@user/malvolio)
[05:43:37] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 256 seconds)
[06:00:34] *** Joins: pcero (~pcero@187.135.224.23)
[06:30:16] *** Quits: echoSMILE (uid504326@user/echosmile) (Quit: Connection closed for inactivity)
[06:34:05] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[06:41:07] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[06:44:25] *** Joins: microp11 (~microp11@host-24-222-106-3.public.eastlink.ca)
[06:53:13] <microp11> Hi, I am using gnuradio to put together a demodulator for BPSK 1200 bauds. The graph initial params are passed through command line params from windows and feeds a decoder through a TCP Server Sink. I have added an offset through a QT GUI Range slider to fine control the frequency. I do not know how to read/write the slider from outside the graph. Could someone please point me to an example of how to manipulate in python the 
[06:53:13] <microp11> graph from an outside app? Thank you.do this through the *.py flow graph 
[06:56:37] *** Quits: superkuh (~superkuh@user/superkuh) (Ping timeout: 240 seconds)
[06:57:40] <microp11> I can control the offset based on the pll reported deviation and all works fine manually. I have the data to do this automatically, just do not know how to interact with the graph through code.
[06:59:27] <microp11> In the end this will run unattended on an RPi.
[06:59:40] *** Joins: superkuh (~superkuh@user/superkuh)
[07:00:43] <patchvonbraun[m]> XMLRPC server within the graph can allow you to set any variable in the graph.  
[07:01:07] <patchvonbraun[m]> ZMQ probably allows the same thing, but I"ve not used that yet.
[07:01:15] <microp11> does it allow a get as well?
[07:01:32] <microp11> need to read error to know how to set offset
[07:02:35] <microp11> I will do a search on how to use the XMLRPC, thank you.
[07:02:36] <patchvonbraun[m]> Does the error manifest as a variable, or something else?
[07:04:51] <microp11> it is a float coming out of the output of the Costas Loop block "frequency"
[07:06:00] <microp11> I am displaying it right now in a QT GUI Number Sink so I can visually see it and manually adjust the offset when needed to bring it back close to zero
[07:07:20] <patchvonbraun[m]> That's a stream, rather than a discrete variable.  So you can proably use ZMQ to send it outside the graph.
[07:07:40] <patchvonbraun[m]> variables are usually top-level parameters for blocks, rather than the streams that they produce.
[07:07:40] <microp11> There is about 400 Hz variation between day and night and my loop only synchronizes about 300 Hz.
[07:08:19] <microp11> It is enough even if I just read it once a minute or so
[07:08:36] <patchvonbraun[m]> What kind of signal has such a frequency error?
[07:09:18] <microp11> Inmarsat-C std-c, 5k separation, 4k bandwidth, unfiltered bpsk at 1200 baud
[07:10:06] <microp11> the frequency error is in between -1 and 1
[07:10:28] <microp11> I have to adjust the offset in about 400 Hz range
[07:11:45] <microp11> usually the frequency of the loop when locked is below or around .001
[07:12:15] <patchvonbraun[m]> I suspect that there's a MUCH better way to handle this in a fully-automated way.      There are others who have likely played with Inmarsat demodulators--not necessarily on here, but on the discuss-gnuradio mailing list.
[07:12:42] <patchvonbraun[m]> What type of receiver?
[07:14:27] <gh555222> so I have a 900mhz wifi adapter and the cellphone towers keep causing interference, is there a way to cause the cellphone towers to be quieter?
[07:15:43] <patchvonbraun[m]> microp11: FOr example:  https://www.gnuradio.org/blog/2016-11-04-reverse-engineering-outernet/
[07:16:31] <microp11> Any consumer sdr radio reciver. I wrote an std-c decoder called ScytaleC. It has its own demodulator written in C# that I wrote but it needs a radio to get either 48k audio in this 4k band or I/Q. By using gnuradio I can run it unnatended on a RPi and eliminate the need for setting up a receiver and audio piping and setting up frequencies manually...
[07:17:15] <patchvonbraun[m]> gh555222: Run your Wifi in a faraday cage?
[07:17:36] <gh555222> that would work, but there are cellphone towers within the area that the wifi points span
[07:17:51] <microp11> And I am very close as i have the demodulator running in a graph at a command line. Just need to be able to automate the offset correction in code.
[07:17:53] <gh555222> I could try boxing the tower itself within one though
[07:18:12] <patchvonbraun[m]> If the cell transmittetrs are "in band" there's not a lot you can do.
[07:19:00] <patchvonbraun[m]> microp11: Thing is, normally an FLL would handle that *within the flow-graph*.    
[07:19:33] <patchvonbraun[m]> But I"m not a modems expert.  
[07:20:42] <microp11> To me, but I do not know gnuradio, seems that all I need is a way to get a variable somehow and set a variable somehow to and from outside the graph.
[07:21:01] <patchvonbraun[m]> I mean, yeah, you can take the streams coming out of the Costas Loop, and use some external program to evaluate them and make adjustments, but really, that should all be handled within your Gnu Radio flowgraph.  Doing modems is one of the things that Gnu Radio is all aout.
[07:21:09] <microp11> the modem part I have. the controlling of the graph is what I would need
[07:21:28] <microp11> I see what you mean!
[07:22:29] <patchvonbraun[m]> Well, for runtime parameters, like I said, XMLRPC server will allow you to set any variable within the graph.   But the outputs of the Costas loop are streams, so they would need to terminate in a block (ZMQ perhaps) that allows some external program to see them.
[07:23:34] <microp11> Of course I can handle it within, the logic does not change a bit. But that means I will probably have to write my logic in a custom block. Wanted the easy way out, but it would make a lot more sense as it is meant to run unattended in the end.
[07:25:07] <microp11> A block that has input a stream and output a float, something like that.
[07:25:17] <jholtom> gh555222: get better frontend filters?
[07:25:44] <patchvonbraun[m]> microp11: The required sample rate is not a lot, so even an embedded Pyton blco will suffice.
[07:25:54] <jholtom> The 900MHz ISM band is awfully crowded tbh and getting worse
[07:26:05] <patchvonbraun[m]> s/blco/block/
[07:26:31] <patchvonbraun[m]> The PtP Wifi links I use out at CCERA are on 5.8GHz.
[07:27:02] <microp11> "embedded Python block" any examples somewhere? 
[07:27:28] <patchvonbraun[m]> https://wiki.gnuradio.org/index.php/Embedded_Python_Block
[07:27:45] <microp11> Is this different that a "custom" block. Python would totally suffice, almost no computing inside.
[07:28:11] <microp11> thank you
[07:28:47] <patchvonbraun[m]> THere's a distinction between a so-called "OOT Module" which is more formal, and has a lot more "build" infrastructure required, but is generally designed to be accessible from multiple programs, and an "Embedded Python" block, which is intended really for the private use of your particular flow-graph.
[07:29:40] <microp11> I see, will I be able to input a stream as this is the case and output a float?
[07:29:50] <microp11> ... reading on it now
[07:30:48] <patchvonbraun[m]> Also:  https://wiki.gnuradio.org/index.php/Simulation_example:_BPSK_Demodulation
[07:35:40] <microp11> I will figure this out with the suggested embedded module. Thank you so much!
[07:54:12] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Quit: Leaving)
[08:04:50] <muaddib[m]> patchvonbraun: glad i'm not the only one that knows XMLRPC exists in GNURadio!
[08:06:37] <microp11> patchvonbraun: oh the beauty, was able to create my embedded block. :)
[08:07:10] <patchvonbraun[m]> muaddib: Yeah, I've used it a fair amount in the last several years.  The XMLRPC *server* is kinda of nice.  The *client* side is kinda ugly--it creates a seperate client connection for each variable.  Gack.
[08:07:44] <muaddib[m]> microp11: have you used JAERO? I'm currently trying to write a custom block to pass the audio from an SSB demod in GNURadio to JAERO's ZMQ socket. Unfortunately the ZMQ implementation in JAERO is a little different, so it's taking me a while to knit the 2 together.
[08:08:38] <muaddib[m]> patchvonbraun[m]: same here. I agree. It's on my list to fix the client so it doesn't set up separate connections. I'll submit a pull request when it's done
[08:11:16] <patchvonbraun[m]> I will submit that if you're wanting to do mPSK demodualtion in Gnu Radio, spend some time with the tutorials, because they give you a complete signal flow, including things like equalization, etc.    I realize that the task-at-hand is to use a wee bit of GR to "front end" your own modem implementation.  But the tutorials on "how to do it the Gnu Radio way" are useful, I think.  
[08:11:59] <patchvonbraun[m]> Not that I"m a data/modem guy, per se.  I mean, if I have to do clock recovery on radio astronomy signals, there's a Scientific American paper right there :) :)
[08:13:09] <microp11> muaddib: I only used it in debugger as to understand the demodulator. intended to break his QPSK into an PBSK. In the end I wrote my demodulator based on trials in matlab with Jonti's help.
[08:14:39] <muaddib[m]> nice! i'm very interested in your project. Is it available on github?
[08:14:41] <microp11> PBSK -> BPSK 
[08:15:34] <muaddib[m]> It's a bummer that it's all in QT, i'm not good with C/C++ as it is so adding that to it is even trickier
[08:15:56] <muaddib[m]> s/It's a bummer that it's all in QT, i'm not good with C/C++ as it is so adding that to it is even trickier/It's a bummer that it's all in QT, i'm not good with C/C++ as it is so adding QT lingo and 'qbytearrays' to it is even trickier/
[08:16:05] <microp11> it's on bitbucket, at the time github did not allow for private projects, and I did not want to make it public from the getgo: https://bitbucket.org/scytalec/scytalec/ 
[08:17:16] <microp11> and a bunch of adjacent projects one folder below (where the original demod in matlab with a bunch of jonti's code is still)
[08:18:18] <microp11> the think is, at the time it was the only good source I had, dealing with QT was a very small price to pay
[08:18:30] <microp11> think->thing
[08:57:18] *** Quits: koma (~koma@user/koma) (Quit: Arc)
[09:00:33] *** Joins: koma (~koma@user/koma)
[09:29:03] *** Quits: spithash (~spithash@user/spithash) (Ping timeout: 276 seconds)
[09:29:16] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[09:30:33] *** Joins: spithash (~spithash@user/spithash)
[09:38:47] *** Quits: Lucanis (~Lucanis@user/lucanis) (Ping timeout: 256 seconds)
[09:38:53] *** Joins: Lucanis (~Lucanis@user/lucanis)
[09:41:06] *** Quits: pcero (~pcero@187.135.224.23) (Ping timeout: 250 seconds)
[10:04:29] *** Quits: cyrozap-ZNC (~cyrozap@2604:180:2:69f::45de) (Quit: Client quit)
[10:04:45] *** Joins: cyrozap (~cyrozap@168.235.71.249)
[11:05:37] *** Joins: massi (~massi@host-188-15-128-106.business.telecomitalia.it)
[11:13:38] *** Quits: ve7it (~LawrenceG@S0106f0f249afdb93.pk.shawcable.net) (Remote host closed the connection)
[11:49:09] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[11:51:22] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[11:52:28] *** Joins: Major_Biscuit (~MajorBisc@c-001-009-026.client.tudelft.eduvpn.nl)
[11:56:18] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 250 seconds)
[12:00:32] *** Quits: Echoz_ (~chris@user/echoz) (Quit: WeeChat 3.3)
[12:02:51] *** Joins: Vonter (~Vonter@user/vonter)
[12:04:28] *** Joins: Echoz (~chris@user/echoz)
[12:05:32] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[12:22:44] *** Quits: Major_Biscuit (~MajorBisc@c-001-009-026.client.tudelft.eduvpn.nl) (Ping timeout: 250 seconds)
[12:23:09] *** Joins: MajorBiscuit (~MajorBisc@c-001-009-026.client.tudelft.eduvpn.nl)
[12:23:35] *** Joins: goldrak (~goldrak@bl16-27-108.dsl.telepac.pt)
[12:30:08] *** Quits: wert20[m] (~wert20gnu@2001:470:69fc:105::1:5000) (Quit: You have been kicked for being idle)
[12:30:09] *** Quits: jesusp[m] (~jesuspgnu@2001:470:69fc:105::1:e01) (Quit: You have been kicked for being idle)
[12:34:59] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[12:38:45] *** Joins: uros (~Thunderbi@2001:8a0:6074:ad00:217c:5694:276a:57b7)
[13:16:35] *** Joins: jemius (~jemius@2a01:4f8:c0c:8564::1)
[14:44:57] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[14:50:05] *** Joins: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de)
[15:43:04] *** KotH_ is now known as KotH
[15:52:29] *** Joins: Flash_ (~Flash@user/flash)
[15:54:29] *** Quits: Flash (~Flash@user/flash) (Ping timeout: 256 seconds)
[16:02:50] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[16:03:18] *** Quits: MajorBiscuit (~MajorBisc@c-001-009-026.client.tudelft.eduvpn.nl) (Ping timeout: 250 seconds)
[16:04:32] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[16:06:47] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[16:08:15] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[16:08:27] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[16:10:29] *** Joins: Vonter (~Vonter@user/vonter)
[16:10:57] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[16:11:26] *** Joins: Major_Biscuit (~MajorBisc@c-001-009-026.client.tudelft.eduvpn.nl)
[16:15:37] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[16:15:38] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 252 seconds)
[16:20:26] *** Joins: Vonter (~Vonter@user/vonter)
[16:30:35] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:8079:4c7e:6b01:dc34) (Read error: Connection reset by peer)
[16:31:54] *** Quits: uros (~Thunderbi@2001:8a0:6074:ad00:217c:5694:276a:57b7) (Ping timeout: 250 seconds)
[16:32:11] *** Joins: uros (~Thunderbi@bl5-152-18.dsl.telepac.pt)
[16:34:39] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:8079:4c7e:6b01:dc34)
[16:48:24] *** Quits: microp11 (~microp11@host-24-222-106-3.public.eastlink.ca) (Quit: Leaving)
[17:03:37] *** Quits: drmpeg (~drmpeg@2601:647:4700:284:a9e3:9c34:8570:2096) (Ping timeout: 240 seconds)
[17:16:32] *** Joins: drmpeg (~drmpeg@2601:647:4700:284:d301:af87:82b4:2bf9)
[17:17:32] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[17:17:57] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Max SendQ exceeded)
[17:18:22] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[17:23:33] *** Parts: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Leaving)
[17:26:14] *** Joins: natewrench (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[17:46:29] <BarryDuggan[m]> In https://wiki.gnuradio.org/index.php/Guided_Tutorial_PSK_Demodulation#Phase_and_Fine_Frequency_Correction there is this statement: "There are ways to do coarse frequency correction, but we won't get getting into those here."
[17:46:30] <BarryDuggan[m]> So what are some ways to do coarse frequency correction?
[17:49:18] <BarryDuggan[m]> microp11: have you tried increasing the loop bandwidth of the Costas loop?
[17:50:39] *** Quits: natewrench (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Quit: Leaving)
[17:50:51] <BarryDuggan[m]> microp11: FYI: https://wiki.gnuradio.org/index.php/Understanding_XMLRPC_Blocks
[17:53:56] <JDemel[m]> > <@kv4fv:gnuradio.org> In https://wiki.gnuradio.org/index.php/Guided_Tutorial_PSK_Demodulation#Phase_and_Fine_Frequency_Correction there is this statement: "There are ways to do coarse frequency correction, but we won't get getting into those here."
[17:53:56] <JDemel[m]> > So what are some ways to do coarse frequency correction?
[17:53:56] <JDemel[m]> Since this is a PSK tutorial, it focuses on single carrier systems. In that case, You might want to go through 3 stages: FLL -> Polyphase -> Costas.
[17:55:11] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[17:57:14] <BarryDuggan[m]> JDemel: thanks! that looks promising ðŸ™‚
[18:05:01] *** Joins: Vonter (~Vonter@user/vonter)
[18:09:50] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 250 seconds)
[18:12:09] *** Joins: pcero (~pcero@187.135.224.23)
[18:16:31] *** Joins: DaNeenjah (~jake@adsl-74-230-4-35.hsv.bellsouth.net)
[18:16:52] *** Quits: Malvolio (~Malvolio@user/malvolio) (Quit: +o()
[18:17:14] *** Joins: Vonter (~Vonter@user/vonter)
[18:21:09] *** Joins: Malvolio (~Malvolio@user/malvolio)
[18:30:29] *** Joins: Foxyfox (~Foxyahuas@200.119.151.22)
[18:52:24] *** Quits: karet (~karet@dc7cnryyyyyyyyyyyyyyt-3.rev.dnainternet.fi) (Quit: WeeChat 3.4)
[18:55:38] *** Joins: smn8362 (~smn@81-197-25-209.elisa-laajakaista.fi)
[18:59:46] *** Joins: smn83622 (~smn@81-197-25-209.elisa-laajakaista.fi)
[19:21:37] *** Quits: AdamHorden (~adam.hord@host81-150-189-121.in-addr.btopenworld.com) (Ping timeout: 240 seconds)
[19:24:05] *** Quits: jemius (~jemius@2a01:4f8:c0c:8564::1) (Quit: Leaving)
[19:24:48] *** Quits: Major_Biscuit (~MajorBisc@c-001-009-026.client.tudelft.eduvpn.nl) (Ping timeout: 250 seconds)
[19:27:41] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[19:28:17] *** Quits: uros (~Thunderbi@bl5-152-18.dsl.telepac.pt) (Ping timeout: 256 seconds)
[19:28:58] *** Joins: uros (~Thunderbi@bl5-152-18.dsl.telepac.pt)
[19:30:25] *** Quits: phil[m]1234 (~philhacke@2001:470:69fc:105::ebb0) (Quit: You have been kicked for being idle)
[19:30:25] *** Quits: pd-allen[m] (~pd-alleng@2001:470:69fc:105::eb9f) (Quit: You have been kicked for being idle)
[19:30:25] *** Quits: parientola[m] (~parientol@2001:470:69fc:105::eba1) (Quit: You have been kicked for being idle)
[19:30:25] *** Quits: panserulka[m] (~panserulk@2001:470:69fc:105::eb9d) (Quit: You have been kicked for being idle)
[19:30:25] *** Quits: bistromat[m] (~bistromat@2001:470:69fc:105::ff76) (Quit: You have been kicked for being idle)
[19:30:25] *** Quits: phil-7[m] (~phil-7gnu@2001:470:69fc:105::ebae) (Quit: You have been kicked for being idle)
[19:30:25] *** Quits: smunday[m] (~smundaygn@2001:470:69fc:105::ec0e) (Quit: You have been kicked for being idle)
[19:30:25] *** Quits: sparsematrix[m] (~sparsemat@2001:470:69fc:105::ec1f) (Quit: You have been kicked for being idle)
[19:30:26] *** Quits: teque5[m] (~teque5gnu@2001:470:69fc:105::ec40) (Quit: You have been kicked for being idle)
[19:30:26] *** Quits: seldad8[m] (~seldad8gn@2001:470:69fc:105::ec02) (Quit: You have been kicked for being idle)
[19:30:26] *** Quits: xtreme[m] (~xtremegnu@2001:470:69fc:105::ec8e) (Quit: You have been kicked for being idle)
[19:30:26] *** Quits: rich[m] (~richgnura@2001:470:69fc:105::fd1b) (Quit: You have been kicked for being idle)
[19:30:26] *** Quits: cbkillion[m] (~cbkillion@2001:470:69fc:105::fcfe) (Quit: You have been kicked for being idle)
[19:30:26] *** Quits: mikeream[m] (~mikereamg@2001:470:69fc:105::eb43) (Quit: You have been kicked for being idle)
[19:30:26] *** Quits: mrhermit[m] (~mrhermitg@2001:470:69fc:105::eb54) (Quit: You have been kicked for being idle)
[19:30:26] *** Quits: kkeller[m] (~kkellergn@2001:470:69fc:105::1:922) (Quit: You have been kicked for being idle)
[19:30:26] *** Quits: benreynwar[m] (~benreynwa@2001:470:69fc:105::e73d) (Quit: You have been kicked for being idle)
[19:30:26] *** Quits: huntsman[m] (~huntsmang@2001:470:69fc:105::ea80) (Quit: You have been kicked for being idle)
[19:30:27] *** Quits: ganges[m] (~gangesgnu@2001:470:69fc:105::e7e5) (Quit: You have been kicked for being idle)
[19:33:11] *** Joins: AdamHorden (~adam.hord@host81-150-189-121.in-addr.btopenworld.com)
[19:34:32] *** Quits: smn83622 (~smn@81-197-25-209.elisa-laajakaista.fi) (Quit: Leaving)
[19:34:40] *** Quits: smn8362 (~smn@81-197-25-209.elisa-laajakaista.fi) (Quit: Leaving)
[19:38:33] *** Quits: AdamHorden (~adam.hord@host81-150-189-121.in-addr.btopenworld.com) (Quit: Adam Horden)
[19:40:56] *** Joins: AdamHorden (~adam.hord@host81-150-189-121.in-addr.btopenworld.com)
[19:47:17] *** Quits: AdamHorden (~adam.hord@host81-150-189-121.in-addr.btopenworld.com) (Quit: Adam Horden)
[19:47:54] *** Joins: AdamHorden (~adam.hord@host81-150-189-121.in-addr.btopenworld.com)
[19:53:13] *** Quits: AdamHorden (~adam.hord@host81-150-189-121.in-addr.btopenworld.com) (Quit: Adam Horden)
[19:53:45] *** Joins: AdamHorden (~adam.hord@host81-150-189-121.in-addr.btopenworld.com)
[20:02:37] *** Quits: Vonter (~Vonter@user/vonter) (Read error: Connection reset by peer)
[20:04:32] *** Joins: Vonter (~Vonter@user/vonter)
[20:06:13] *** Quits: level420 (~level420@S010664777d95fd33.wp.shawcable.net) (Ping timeout: 240 seconds)
[20:13:21] *** Quits: balrog (~balrog@user/balrog) (Quit: Bye)
[20:15:00] *** Joins: balrog (znc@user/balrog)
[20:19:23] *** Joins: MajorBiscuit (~MajorBisc@c-001-009-026.client.tudelft.eduvpn.nl)
[20:20:34] <DerekKozel[m]> An open workshop showing the structure and usage of the Signal Metadata Format (SigMF) is going to start in 10 minutes.
[20:20:43] <DerekKozel[m]> https://seti.zoom.us/j/86182140744
[20:34:23] *** Joins: uros1 (~Thunderbi@2001:8a0:6074:ad00:9176:f066:9f61:4960)
[20:35:52] *** Quits: uros (~Thunderbi@bl5-152-18.dsl.telepac.pt) (Ping timeout: 250 seconds)
[20:35:52] *** uros1 is now known as uros
[20:40:26] *** Flash_ is now known as Flash
[20:53:02] *** Joins: Eupolis (~tph@user/Eupolis)
[20:54:30] *** Quits: uros (~Thunderbi@2001:8a0:6074:ad00:9176:f066:9f61:4960) (Ping timeout: 250 seconds)
[20:56:48] *** Quits: massi (~massi@host-188-15-128-106.business.telecomitalia.it) (Remote host closed the connection)
[21:07:46] *** Joins: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:99d9:6776:2468:91ec)
[21:27:49] *** Joins: neverfindme (~hayden@158.123.160.43)
[21:28:32] *** Quits: neverfindme (~hayden@158.123.160.43) (Remote host closed the connection)
[21:29:37] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[21:45:01] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Ping timeout: 240 seconds)
[21:45:53] *** Quits: DiffieHellman (~Username@user/curve25519chacha) (Remote host closed the connection)
[21:46:13] *** Joins: DiffieHellman (~Username@user/curve25519chacha)
[21:47:03] *** Quits: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:99d9:6776:2468:91ec) (Read error: Connection reset by peer)
[21:53:37] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[21:57:46] *** Quits: MajorBiscuit (~MajorBisc@c-001-009-026.client.tudelft.eduvpn.nl) (Ping timeout: 250 seconds)
[22:03:45] *** Joins: arch3r (~ben@gateway/vpn/pia/arch3r)
[22:04:42] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Ping timeout: 250 seconds)
[22:05:05] *** Quits: pcero (~pcero@187.135.224.23) (Ping timeout: 256 seconds)
[22:17:17] *** Joins: smn8362 (~smn@81-197-25-209.elisa-laajakaista.fi)
[22:18:01] *** Quits: smn8362 (~smn@81-197-25-209.elisa-laajakaista.fi) (Client Quit)
[22:26:14] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[22:33:52] *** Joins: uros (~Thunderbi@bl5-152-18.dsl.telepac.pt)
[22:54:30] *** Quits: kusanagi (~kusanagi@user/kusanagi) (Read error: Connection reset by peer)
[22:55:58] *** Joins: kusanagi (~kusanagi@user/kusanagi)
[23:01:11] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Ping timeout: 256 seconds)
[23:03:10] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[23:05:36] *** Joins: hb9fxq[m] (~hb9fxqmat@2001:470:69fc:105::1:68fc)
[23:24:55] *** Joins: uros1 (~Thunderbi@2001:8a0:6074:ad00:bbff:3198:e5b6:12b5)
[23:26:36] *** Quits: uros (~Thunderbi@bl5-152-18.dsl.telepac.pt) (Ping timeout: 250 seconds)
[23:26:37] *** uros1 is now known as uros
[23:30:12] *** Quits: ephemer0l (~ephemer0l@organizedmagnetism.com) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[23:33:40] *** Joins: microp11 (~microp11@host-24-222-106-3.public.eastlink.ca)
