[00:17:37] <jjhoo> C++ would be more interesting if there was something as fast as TCC for C++
[00:18:38] *** Joins: klovett (~klovett@166.205.90.177)
[00:18:39] <mario-goulart> That'd be called "witchcraft".
[00:22:30] *** Quits: klovett__ (~klovett@166.205.90.177) (Ping timeout: 260 seconds)
[00:25:15] <wasamasa> https://slatestarcodex.com/2016/06/07/ketamine-research-in-a-new-light/
[00:25:16] <wasamasa> err
[00:25:19] <wasamasa> https://github.com/endrazine/wcc
[00:25:48] <wasamasa> only related in name of course
[00:31:46] <mario-goulart> That's actually pretty cool, although not witchcrafty enough to compile C++.
[00:33:31] <jjhoo> damn, Visual Studio 2022 might have something like hot reload for C++
[00:47:41] *** Joins: fantazo (~fantazo@192-164-154-92.hdsl.highway.telekom.at)
[01:33:24] <Bunny351> I once heard that someone booted linux from sources with tcc
[01:34:25] * Bunny351 imagines a world where Scheme programs are bundled with a chicken runtime built from scratch at startup
[01:35:03] <Bunny351> it makes one realize how insanely fast modern computers are. we don't need quantum computing, we just have to get rid of the useless bloat!
[01:37:37] <fantazo> And force hardware manifactures to free software all the shit, no closed hardware specs, no brickable hardware, "no: you can't touch that".
[01:38:55] <fantazo> it doesn't matter if its scheme or otherwise, there are other nice runtimes too.
[01:46:21] *** Quits: fantazo (~fantazo@192-164-154-92.hdsl.highway.telekom.at) (Quit: leaving)
[02:28:04] *** Joins: abralek_ (~abralek@j74182.upc-j.chello.nl)
[02:28:05] *** Quits: abralek (~abralek@109.38.157.180) (Read error: Connection reset by peer)
[02:30:01] *** Quits: ecloud (~quassel@192.89.120.58) (Ping timeout: 250 seconds)
[02:33:58] *** Joins: ecloud (~quassel@192.89.120.58)
[02:47:26] *** Joins: seepel (~seepel@c-24-4-200-111.hsd1.ca.comcast.net)
[03:05:09] *** Quits: seepel (~seepel@c-24-4-200-111.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[03:26:36] *** Joins: s-liao (~s-liao@101.86.101.64)
[04:25:07] *** Quits: rgherdt (~rgherdt@2a02:8109:86c0:d8d:b451:65f7:f961:6c1a) (Remote host closed the connection)
[04:25:25] *** Joins: rgherdt (~rgherdt@2a02:8109:86c0:d8d:b451:65f7:f961:6c1a)
[04:31:59] *** Joins: klovett_ (~klovett@166.205.90.177)
[04:34:34] *** Quits: klovett (~klovett@166.205.90.177) (Ping timeout: 268 seconds)
[04:40:44] *** Quits: mononote (~mononote@user/mononote) (Ping timeout: 268 seconds)
[04:56:30] *** Joins: seepel (~seepel@c-24-4-200-111.hsd1.ca.comcast.net)
[05:26:25] *** Quits: ublx (~ublx@user/ublx) (Quit: ublx)
[05:43:38] *** Quits: seepel (~seepel@c-24-4-200-111.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[06:19:08] *** Quits: klovett_ (~klovett@166.205.90.177) (Quit: ZZZzzz…)
[06:19:43] *** Joins: klovett (~klovett@166.205.90.177)
[06:48:22] *** Joins: mononote (~mononote@user/mononote)
[07:56:36] *** Joins: klovett_ (~klovett@166.205.90.177)
[07:59:26] *** Quits: klovett (~klovett@166.205.90.177) (Ping timeout: 256 seconds)
[08:04:14] *** Quits: s-liao (~s-liao@101.86.101.64) (Quit: Client closed)
[08:07:01] *** Joins: klovett (~klovett@166.205.90.177)
[08:10:12] *** Quits: klovett_ (~klovett@166.205.90.177) (Ping timeout: 256 seconds)
[08:26:40] *** Joins: s-liao (~s-liao@101.86.101.64)
[08:52:59] *** Joins: klovett_ (~klovett@166.205.90.177)
[08:53:48] *** Joins: klovett__ (~klovett@166.205.90.177)
[08:56:02] *** Quits: klovett (~klovett@166.205.90.177) (Ping timeout: 268 seconds)
[08:57:42] *** Quits: klovett_ (~klovett@166.205.90.177) (Ping timeout: 260 seconds)
[09:24:31] *** Joins: klovett (~klovett@166.205.90.177)
[09:27:50] *** Quits: klovett__ (~klovett@166.205.90.177) (Ping timeout: 256 seconds)
[10:09:08] *** Quits: s-liao (~s-liao@101.86.101.64) (Quit: Client closed)
[10:11:04] *** Joins: abralek (~abralek@109.38.156.176)
[10:11:11] *** Joins: jobol (~jobol@2a01:e34:ee5c:ee50:d6be:d9ff:fea3:db03)
[10:13:41] *** Quits: abralek_ (~abralek@j74182.upc-j.chello.nl) (Read error: Connection reset by peer)
[10:13:41] *** Quits: abralek (~abralek@109.38.156.176) (Read error: Connection reset by peer)
[10:13:50] *** Joins: abralek (~abralek@j74182.upc-j.chello.nl)
[10:26:19] *** Joins: klovett_ (~klovett@166.205.90.177)
[10:29:38] *** Quits: klovett (~klovett@166.205.90.177) (Ping timeout: 260 seconds)
[10:30:15] *** Joins: klovett (~klovett@166.205.90.177)
[10:30:56] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[10:33:22] *** Quits: klovett_ (~klovett@166.205.90.177) (Ping timeout: 260 seconds)
[10:40:12] *** Joins: klovett_ (~klovett@166.205.90.177)
[10:41:26] *** Joins: klovett__ (~klovett@166.205.90.177)
[10:42:23] *** Quits: klovett (~klovett@166.205.90.177) (Ping timeout: 264 seconds)
[10:45:11] *** Quits: klovett_ (~klovett@166.205.90.177) (Ping timeout: 268 seconds)
[10:46:53] *** Joins: klovett (~klovett@166.205.90.177)
[10:50:44] *** Quits: klovett__ (~klovett@166.205.90.177) (Ping timeout: 268 seconds)
[11:19:15] *** Quits: klovett (~klovett@166.205.90.177) (Quit: ZZZzzz…)
[11:22:47] <sjamaan> mario-goulart: Wow, subsecond compilation times for the full base system! Crazy times
[11:35:46] *** Joins: s-liao (~s-liao@101.86.101.64)
[11:57:28] *** Quits: s-liao (~s-liao@101.86.101.64) (Ping timeout: 256 seconds)
[12:19:32] *** Quits: abralek (~abralek@j74182.upc-j.chello.nl) (Ping timeout: 268 seconds)
[13:06:18] *** Joins: s-liao (~s-liao@101.86.101.64)
[13:45:42] *** Quits: s-liao (~s-liao@101.86.101.64) (Ping timeout: 256 seconds)
[13:48:15] *** Joins: s-liao (~s-liao@101.86.101.64)
[15:30:10] <vandusen> "anonymous" pasted "no title" http://paste.call-cc.org/paste?id=2427954fb2619a7c11b25bf16f85cd6db67eafcd
[15:30:10] <judybot> vandusen: spam 2427954fb2619a7c11b25bf16f85cd6db67eafcd
[15:30:11] <vandusen> judybot: I have deleted 1 paste(s) with hash 2427954fb2619a7c11b25bf16f85cd6db67eafcd successfully.
[15:48:40] <megane_> just realized that optimizing compilers make more sense in the future than before. because single thread performance keeps progressing slower and slower.
[15:49:08] <megane_> not arguing they have ever made that much sense, but anyway
[16:37:56] *** Quits: mononote (~mononote@user/mononote) (Ping timeout: 256 seconds)
[16:43:01] <vandusen> "freeee" pasted "freeee" http://paste.call-cc.org/paste?id=b0260ab9762f7d7975e27b802e9a423878d4d4b4
[16:43:02] <judybot> vandusen: spam b0260ab9762f7d7975e27b802e9a423878d4d4b4
[16:43:02] <vandusen> judybot: I have deleted 1 paste(s) with hash b0260ab9762f7d7975e27b802e9a423878d4d4b4 successfully.
[17:27:33] *** Joins: markjf (~markjf@cpc115884-addl5-2-0-cust442.6-3.cable.virginm.net)
[17:58:36] *** Joins: klovett (~klovett@166.205.90.177)
[18:02:05] <mario-goulart> sjamaan: pretty awesome, isn't it?  Our compilation time with tcc is probably faster than getting a prompt on some repls. :-)
[18:05:38] <sjamaan> XD
[18:08:04] *** Quits: s-liao (~s-liao@101.86.101.64) (Ping timeout: 256 seconds)
[18:16:10] *** Joins: klovett_ (~klovett@166.205.90.177)
[18:18:47] *** Joins: klovett__ (~klovett@166.205.90.177)
[18:18:48] *** Quits: klovett (~klovett@166.205.90.177) (Ping timeout: 256 seconds)
[18:20:47] *** Quits: klovett_ (~klovett@166.205.90.177) (Ping timeout: 264 seconds)
[18:22:24] *** Joins: s-liao (~s-liao@101.86.101.64)
[18:32:34] *** Quits: s-liao (~s-liao@101.86.101.64) (Quit: Client closed)
[18:36:13] <rgherdt> is there some way to get warnings from csc if a non-defined variable is used in a function?
[18:36:30] <rgherdt> Say I create a file containing "(define (f) (if g 1 0))". Evaluating it in the REPL issues following warning: "Note: the following toplevel variables are referenced but unbound: ..."
[18:36:37] <rgherdt> but csc compiles it happily
[18:38:13] <sjamaan> rgherdt: csc -M wraps it in a module which should cause an error when the variable is unknown
[18:43:51] <rgherdt> sjamann: thanks. Actually 'csc -M' still didn't issue any warnings. I manually wrapped my code in a module and it than worked
[18:44:43] *** Joins: mononote (~mononote@user/mononote)
[18:44:53] <sjamaan> rgherdt: Oh I think it's "-m foo"
[18:45:30] <rgherdt> sjamaan: perfect! thx
[20:29:12] *** Joins: fantazo (~fantazo@192-164-154-92.hdsl.highway.telekom.at)
[21:21:04] *** Joins: ublx (~ublx@user/ublx)
[22:15:48] *** Quits: klovett__ (~klovett@166.205.90.177) (Quit: Textual IRC Client: www.textualapp.com)
[22:27:30] *** Quits: jobol (~jobol@2a01:e34:ee5c:ee50:d6be:d9ff:fea3:db03) (Quit: Leaving)
[22:29:10] <markjf> ooh, 5.3.0! i've update my windows build and vmware linux build. the good news is everything built fine from scratch - i did a clean install as i was still getting the static build error when i only installed chicken, after installing all the modules again it went away!
[22:30:05] <markjf> also, ran my aoc examples, and sadly, for most of the results, windows is still much much slower.
[22:30:53] <markjf> however, one of the tests was faster than than the equivalently built and run executable between linux and windows.
[22:31:34] <markjf> however i did find that a static linux build was much faster in a few of the aoc cases than the normal buil
[22:31:36] <markjf> d
[22:32:05] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:7883:4458:4520:f986)
[22:32:06] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:7883:4458:4520:f986) (Changing host)
[22:32:06] *** Joins: skapata (~Skapata@user/skapata)
[22:34:11] <markjf> for instance, one of my cases takes 6.687s on windows, but only 1.4s on linux. same build
[22:36:05] <markjf> i'd really like to work out how to find why windows code is so much slower, and if anyone here has a windows build that could confirm it's "not just me"
[22:38:32] <markjf> also, it's nearly december, so advent of code 2021 is about to start. *screeeeeeee*
[23:18:16] <mario-goulart> It's sounding like 2022 is going to be the Year of the *fast* Linux Desktop.
[23:18:56] *** Joins: klovett (~klovett@166.205.90.177)
[23:37:53] *** Joins: nkatte (~nkatte@2804:14c:7980:8c85::bde6)
[23:38:16] *** Quits: nkatte (~nkatte@2804:14c:7980:8c85::bde6) (Remote host closed the connection)
