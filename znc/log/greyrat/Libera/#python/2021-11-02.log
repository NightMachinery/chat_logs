[00:01:35] *** Quits: Mechanismus (~LabMonkey@206.255.106.67) (Ping timeout: 264 seconds)
[00:02:28] *** Joins: Klinda (~superleag@user/klinda)
[00:03:08] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[00:08:18] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[00:09:49] *** Joins: Mechanismus (~LabMonkey@206.255.106.67)
[00:13:11] *** Joins: lastshell (~lastshell@user/lastshell)
[00:13:15] *** Joins: ham5urg (~ham5urg@2a04:4540:6811:1500:1761:c066:fda0:b16e)
[00:13:45] <dman777> https://dpaste.org/KbjB I am not seening api_responses in print(api_responses). What am I doing wrong
[00:13:48] <dman777> ?
[00:15:08] <ham5urg> I try to extend a string like self.mystring="abc" self.mystring.choice=["a","b"] but I get AttributeError: 'str' object has no attribute 'choice'. Is this correct that a str is not like any Class instantiation?
[00:15:38] *** Joins: gregloscombe (~greglosco@82.25.194.79)
[00:15:42] <aphysically> looks like python made a decision to reject addressing the bidirectional CVE
[00:15:47] <aphysically> (re: mailing list discussion)
[00:16:16] <KirkMcDonald> ham5urg: str, and builtin types generally, don't have instance attribute dicts.
[00:16:22] *** Quits: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 268 seconds)
[00:16:37] *** Quits: codeswhite (~codeswhit@user/codeswhite) (Read error: Connection reset by peer)
[00:17:49] <ham5urg> KirkMcDonald, I see. Is there a way to define a class which could act like this? To wrap a string.
[00:18:30] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[00:18:41] <KirkMcDonald> ham5urg: I may be unclear about the goal, here.
[00:18:50] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 268 seconds)
[00:19:03] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[00:20:50] <ham5urg> KirkMcDonald. Just to store some config values inside a class. I try to keep the main topic of any setting in a var like self.mystring and all "sub-settings" into self.mystring.subsetting.
[00:21:15] <whatsupdoc> Q: When using range(5, some_var, -1), can you stop a for loop early by changing the value of some_var?
[00:21:24] *** Stench is now known as Staunch
[00:21:32] <sco1> No
[00:21:36] <phy1729> no, the generator object has already been created
[00:21:47] <KirkMcDonald> (It's a range object, not a generator.)
[00:21:56] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:c1c7:b90:e12f:7d31) (Ping timeout: 268 seconds)
[00:22:01] <whatsupdoc> ok
[00:22:06] <phy1729> (subclass?)
[00:22:22] <KirkMcDonald> No. A range object is a sequence type unto itself.
[00:22:35] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[00:22:49] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[00:23:03] <Repiphany> whatsupdoc: Maybe you want something like https://docs.python.org/3/library/itertools.html#itertools.takewhile
[00:23:14] <phy1729> drat (makes note to use classes higher up in the tree as whesel classes)
[00:23:26] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:6941:80d8:479:9d51)
[00:23:32] *** Quits: Whoopla (Whoopla@gateway/vpn/protonvpn/whoopla) (Quit:  )
[00:24:04] <aphysically> yes Python rejected addressing the CVE: https://mail.python.org/archives/list/python-dev@python.org/thread/6DBJJRQHA2SP5Q27MOMDSTCOXMW7ITNR/
[00:24:28] *** Quits: Akuli (~Akuli@82-203-161-164.bb.dnainternet.fi) (Quit: Leaving)
[00:24:48] <aphysically> a bit surprising to not reject just the unpaired bidi control codes but not unexpected
[00:25:20] *** Joins: tracey (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[00:25:28] *** Joins: Bakunin (~Lindis@user/lindis)
[00:26:11] *** Quits: mat001_ (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 264 seconds)
[00:26:25] *** Quits: ali1234 (~al@user/ali1234) (Remote host closed the connection)
[00:26:50] *** Quits: gregloscombe (~greglosco@82.25.194.79) (Quit: WeeChat 3.2)
[00:26:56] *** Joins: ali1234 (~al@user/ali1234)
[00:27:23] *** Joins: Nselm (~Nselm@p200300d56f1ca8e8405dc66eb7cff6d9.dip0.t-ipconnect.de)
[00:28:42] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[00:28:43] <whatsupdoc> Suppose you have a list of lists, and you want to return the list that has the smallest sum. What is the cleanest way to do this?
[00:29:19] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 268 seconds)
[00:30:06] *** Quits: pr100 (~pr100@cpc92728-cmbg20-2-0-cust160.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[00:32:10] <phy1729> min(the_lists, key=sum)
[00:33:18] <Bakunin> nice
[00:33:32] <whatsupdoc> damn, wasn't expecting it to be that simple
[00:33:40] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[00:36:43] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Ping timeout: 268 seconds)
[00:38:56] *** Quits: darksun (~darksun@user/darksun) (Read error: Connection reset by peer)
[00:39:20] *** Joins: Chex (~Chex@user/chex)
[00:40:07] *** Joins: darksun (~darksun@user/darksun)
[00:42:24] <aphysically> jinsun_: saw this on the mailing list thought it was interesting
[00:42:26] <aphysically> https://mypy-play.net/?mypy=latest&python=3.10&gist=5a58af6227d1bb811bddfca433425208
[00:42:31] <aphysically> quirk of typing T!=T
[00:42:53] *** Quits: luva (~luva@5.180.62.157) (Ping timeout: 268 seconds)
[00:43:29] *** Joins: oz4ga (~tim@93.90.4.233)
[00:43:42] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[00:46:14] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:47:39] *** Quits: ffledgling (~textual@2620:10d:c090:500::1:8381) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:48:39] *** Quits: lastshell (~lastshell@user/lastshell) (Quit: WeeChat 3.0)
[00:49:06] *** Joins: akaWolf (~akaWolf@2a05:3580:df03:1a00:21e:8cff:fe18:61)
[00:49:24] *** Quits: dba (uid502594@id-502594.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[00:50:30] *** Joins: ffledgling (~textual@2620:10d:c090:500::2:2832)
[00:51:40] *** Joins: zepolen (~zepolen@ppp-94-66-223-35.home.otenet.gr)
[00:51:58] *** Quits: zepolen_ (~zepolen@ppp-94-66-223-35.home.otenet.gr) (Ping timeout: 260 seconds)
[00:52:25] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:52:52] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[00:53:24] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Ping timeout: 276 seconds)
[00:54:42] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[00:56:28] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 268 seconds)
[00:56:34] *** Joins: fikran (~fikran@user/fikran)
[00:57:16] <greatgatsby> Using tweepy, if I `api.update_status("@SomeUser how's it going?")` should the @SomeUser not be turned into a mention on twitter?  New to both tweepy and twitter, hoping someone here can help.
[00:58:41] *** Quits: stdout (~stdout@216.163.21.11) (Quit: Leaving)
[01:00:59] *** Joins: luva (~luva@5.180.62.157)
[01:01:19] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[01:02:48] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[01:04:20] *** Joins: darksun (~darksun@user/darksun)
[01:05:29] *** Joins: Macuser (~Macuser@216.30.159.201)
[01:06:01] *** Quits: magla (~gelignite@55d4d950.access.ecotel.net) (Quit: Stay safe!)
[01:06:31] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::2612) (Quit: Konversation terminated!)
[01:07:39] *** Quits: hideaway (~hideaway@user/hideaway) (Quit: WeeChat 2.8)
[01:10:48] *** Quits: millido (~millido@84.210.150.128) (Ping timeout: 260 seconds)
[01:12:03] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[01:12:19] *** Joins: george-smiley (~george_sm@user/george-smiley/x-3139219)
[01:12:35] <greatgatsby> ok - seems multi-line is required
[01:14:02] <dman777> https://dpaste.org/KbjB#L8,15 is it possible to return a value in this unpacked list rather than just a true/false value?
[01:15:24] <grym> dman777: both of those should give you lists with the filtered elements of `fields` and `apis_to_call` as written
[01:16:03] *** Joins: chair1 (~bbs@187.109.18.204)
[01:16:07] *** Quits: Pandadub (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c) (Quit: Leaving)
[01:16:24] <grym> but note that your second listcomp will never filter
[01:16:55] <grym> because the value returned by any successful evaluation of  consume_prefill_apis   will be truthy
[01:16:58] *** Joins: anddam (~anddam@user/anddam)
[01:17:07] *** Quits: upsala (~zcb@185.213.155.232) (Quit: WeeChat 3.3)
[01:18:23] <grym> dman777: do you actually just want to call consume_prefill_apis on every element of `apis_to_call`
[01:18:38] <lionslicer> Man, I've been reading and practicing everyday using Python Crash Course.
[01:18:45] <dman777> grym: yes
[01:19:01] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Remote host closed the connection)
[01:19:22] <grym> dman777: ah.  ok, this is a walrus then: api_responses = [x for x in apis_to_call if (x:=consume_prefill_apis(x))]
[01:19:40] <grym> but ... probably just write the for loop if we're honest
[01:19:43] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[01:19:45] <grym> lionslicer: good first week?
[01:20:03] <dman777> grym: oh...ok... so for better readability just use a loop instead?
[01:20:31] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[01:20:57] <grym> dman777: you could api_responses = [consume_prefill_apis(x) for x in apis_to_call]
[01:21:00] <grym> that's ok
[01:21:44] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[01:22:23] <dman777> grym: oh that is cool, thank you
[01:22:41] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[01:23:13] <grym> dman777: sure! the thing listcomps are not suitable for is "call a function that returns None on everything in this list, and don't bother assigning the new list to a name"
[01:23:24] <grym> that is just a for loop, every time
[01:23:43] <grym> eg a line like `[mutate_state(x) for x in thing]` is a smell
[01:24:42] *** Quits: Nselm (~Nselm@p200300d56f1ca8e8405dc66eb7cff6d9.dip0.t-ipconnect.de) (Quit: Client closed)
[01:25:54] *** Joins: millido (~millido@84.210.150.128)
[01:25:57] <grym> but `thing = [give_me_a_new(t) for t in things]` is fine
[01:26:04] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Ping timeout: 268 seconds)
[01:26:27] <grym> (the former makes and immediately discards a [None, None, None, ...] list, and that is very silly_
[01:26:43] <dman777> grym: ah...ok. good to know. I prefer not to mutate when I have the chance...I would rather make new memory
[01:27:11] <grym> you and me both
[01:27:17] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 268 seconds)
[01:27:46] <dman777> I do alot of JavaScript and with the typescript introduction, I am forced to mutate rather than create new memory. I hate typescript
[01:28:20] <lionslicer> grym: yeah, I'm really enjoying this book
[01:29:09] *** Quits: ham5urg (~ham5urg@2a04:4540:6811:1500:1761:c066:fda0:b16e) (Ping timeout: 268 seconds)
[01:29:36] <lionslicer> I'm almost half way through the book. Does it cover everything I need? Or should I get another one after I have finished learning and working on the projects?
[01:29:57] <lionslicer> I'm assuming you've used this book
[01:30:20] <Celelibi> Hey guys, I'm preparing a course on python, I was wondering if I missed any major feature.
[01:30:22] <Celelibi> I have: basic syntax, classes, exceptions, decorators, files IO, generators, iterators, context managers, modules and packages.
[01:30:53] <phy1729> list/dict comprehensions?
[01:30:59] *** Quits: lbracher (~lucas@94.105.106.159.dyn.edpnet.net) (Ping timeout: 268 seconds)
[01:31:08] <Celelibi> Was going to put those in the basic syntax.
[01:31:27] <phy1729> Does that also cover splatting and kwonly args etc?
[01:31:51] <Celelibi> Ok, *args and **kwargs, I missed those.
[01:32:24] *** Quits: m4r35n357 (~m4r35n357@host-78-151-108-203.as13285.net) (Quit: Leaving)
[01:32:31] <Celelibi> But what is splatting?
[01:32:35] <grym> those
[01:32:47] <grym> lionslicer: no one book will cover everything you need
[01:34:04] *** Quits: ffledgling (~textual@2620:10d:c090:500::2:2832) (Ping timeout: 268 seconds)
[01:34:37] <grym> lionslicer: reading alone gets you like .. 20% of the way down the road.  the remaining 80% is engaged practice
[01:35:18] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Ping timeout: 268 seconds)
[01:35:27] <phy1729> (and reading stack traces / error messages when they happen and reading relevant docs)
[01:35:39] <Celelibi> If I didn't miss any other major feature I think I'll just put some extra material about regexes and numpy just in case the students are too fast. ^^
[01:35:46] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 260 seconds)
[01:35:49] *** Joins: CB_JD (~Code_Bleu@user/code-bleu/x-6939963)
[01:35:55] <lionslicer> yeah, I plan on working on a lot of projects once I have finished learning everything I need
[01:36:42] *** Quits: Bode_Cleu (~Code_Bleu@user/code-bleu/x-6939963) (Read error: Connection reset by peer)
[01:36:44] *** Quits: ubert (~Thunderbi@p548c9652.dip0.t-ipconnect.de) (Remote host closed the connection)
[01:36:46] <phy1729> I'd stick in pathlib abd mypy for extra stuff
[01:36:50] *** Joins: ffledgling (~textual@2620:10d:c090:500::1:8381)
[01:37:05] *** Quits: george-smiley (~george_sm@user/george-smiley/x-3139219) (Quit: Leaving)
[01:37:18] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[01:38:07] <Celelibi> tuple assignment! I have to put this somewhere.
[01:38:22] *** Quits: akmod (~akmod@c-73-228-115-212.hsd1.ut.comcast.net) (Remote host closed the connection)
[01:38:47] *** Quits: NeoCore (~neocore@89.40.183.30) (Quit: Leaving)
[01:39:04] *** Quits: R035N3R (~phobos@user/r035n3r) (Remote host closed the connection)
[01:39:25] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[01:41:08] *** Quits: alxndr (~alexander@ybti.net) (Remote host closed the connection)
[01:42:18] <grym> lionslicer: both at once
[01:43:04] *** Joins: alxndr (~alexander@ybti.net)
[01:43:24] <grym> lionslicer: also, i've never used that book; i learned python as my fourth or fifth language so what i needed was a thesaurus, not a dictionary
[01:44:36] <lionslicer> grym: gotcha
[01:46:05] <Celelibi> Any idea of a fun exercice for a chapter about IO, context managers, generators and iterators? Something with an actual goal, not just "write a file, read it and sum the numbers".
[01:46:47] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:4fc2:7d99:5128:4a6d)
[01:47:02] *** Quits: the-mask (~the-mask@user/the-mask) (Ping timeout: 260 seconds)
[01:47:26] <bookworm> let them play with the twitter api?
[01:47:52] *** Joins: Jong (~Jong@2620:10d:c091:480::1:fe60)
[01:48:56] <Celelibi> Relying on a external API is risky. A dodgy network could ruin it. And getting an account approved to create a twitter app can take some time.
[01:50:09] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[01:50:14] <Celelibi> They had me use a phone number to prove I wasn't a bot. But I didn't want to my personal phone for my job.
[01:50:49] <bookworm> pull down some data, use it. Although that's probably against the TOS
[01:51:13] <dman777> form_template_dict_with_apis = { **form_template_dict, fields: api_responses } api_responses is a list but I am having issues creating this object with unhashable type: 'list'
[01:51:35] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[01:51:53] <akk> Celelibi: I used a twitter api in a project for a book, and regretted it. The complexity of the api, oauth, and registering with twitter seemed like a distraction from an otherwise straightforward project.
[01:52:29] <Celelibi> dman777, your issue is probably with fields not being hashable.
[01:53:09] <Celelibi> akk, I remember I used a library and some examples without really understanding the auth part.
[01:53:19] <dman777> Celelibi: how would I create a new object and add the list as a property of fields?
[01:54:01] <Celelibi> dman777, Do you have a variable named fields? Or do you want a dict entry named "fields"?
[01:54:25] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 268 seconds)
[01:55:02] <Celelibi> dman777, {a: b} and {"a": b} are two very distinct dicts.
[01:55:52] <dman777> Celelibi: oh...my bad. thanks
[01:56:07] <akk> Celelibi: Just registering with twitter and creating an access token was 4 pages.
[01:56:23] <Celelibi> akk, was 4 lines for me.
[01:56:39] *** Quits: lovelace (~Elspeth@2.24.23.175) (Quit: Konversation terminated!)
[01:57:30] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Ping timeout: 268 seconds)
[01:58:07] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-25-65-93-17-96.dsl.bell.ca) (Ping timeout: 268 seconds)
[01:58:10] <Celelibi> akk, I used tweepy at that time.
[01:58:16] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[01:58:31] *** Quits: sfields (~sfields@2605:a601:adea:7a00:5fcc:d1b3:a00e:11b8) (Quit: Leaving)
[01:58:45] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 268 seconds)
[01:59:02] <akk> Celelibi: I was using python-twitter, but that wouldn't have helped the complexity of signing up for access.
[01:59:21] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Quit: hyskaru)
[02:00:45] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b125-ee43-8416-dc8d.res6.spectrum.com)
[02:01:08] *** Quits: grooverman (~grooverma@177.102.119.40) (Read error: Connection reset by peer)
[02:01:26] *** Quits: luva (~luva@5.180.62.157) (Ping timeout: 260 seconds)
[02:01:26] <Celelibi> Basically, for me it was just: tweepy.AppAuthHandler(key, secret)
[02:01:56] *** Joins: grooverman (~grooverma@177.95.12.14)
[02:01:59] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:02:52] <Celelibi> Then api = tweepy.API(authobj) and there you can do some stuff.
[02:03:29] <akk> Celelibi: No, I'm talking about the 5- or so step process of going to twitter.com and registering for an api key and an app key etc.
[02:03:32] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[02:03:54] <akk> And then of course you can't put your keys in your code (to be checked in to github or whatever) so there has to be a section on reading them from a file or env variable.
[02:03:54] <Celelibi> Ah.
[02:04:15] *** Joins: george-smiley (~george_sm@user/george-smiley/x-3139219)
[02:04:35] *** Quits: george-smiley (~george_sm@user/george-smiley/x-3139219) (Client Quit)
[02:04:39] <Celelibi> Yeah, I'm not really sure twitter would approve of an automatic app registration. ^^
[02:06:28] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[02:06:45] <Celelibi> But not committing your secrets into git is a fairly common problem. The solutions are well known.
[02:07:16] <akk> Sure, but I don't want to be the author of a book that doesn't mention that and results in a bunch of newbies checking in their keys.
[02:07:33] *** Joins: ham5urg (~ham5urg@2a04:4540:6811:1500:cfaf:bf50:7167:4f97)
[02:08:56] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[02:09:08] <Celelibi> I usually like having a config file on disk. like config.ini which is in the .gitignore. And a config.ini.example on the side which *is* committed in git.
[02:09:30] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[02:10:12] *** Quits: Tenn0 (~Tenn0@88.97.110.231) (Quit: WeeChat 3.3)
[02:12:08] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[02:12:23] *** Quits: Jefren1 (~Jefren@70.35.67.214) (Ping timeout: 264 seconds)
[02:13:29] <akk> I usually use something like os.environ['XDG_CONFIG_HOME']/appname
[02:13:53] <akk>  /appname.conf or whatever
[02:14:04] *** Joins: Jefren1 (~Jefren@70.35.67.61)
[02:16:11] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[02:16:41] *** Joins: luva (~luva@159.48.53.250)
[02:17:15] *** Quits: Inline (~Inline@2a02:908:1252:7a80:86ce:9852:a68c:aeee) (Ping timeout: 268 seconds)
[02:17:51] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Quit: Leaving)
[02:19:21] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:22:26] *** Quits: Jefren1 (~Jefren@70.35.67.61) (Ping timeout: 260 seconds)
[02:24:29] *** Joins: Jefren1 (~Jefren@70.35.66.134)
[02:24:52] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[02:26:58] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[02:27:41] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[02:28:08] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b125-ee43-8416-dc8d.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[02:28:50] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:29:08] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[02:29:09] *** Joins: mdemo (~mdemo@c-73-40-53-74.hsd1.va.comcast.net)
[02:29:34] *** Quits: TJ- (~root@user/tj-) (Ping timeout: 268 seconds)
[02:29:41] *** Quits: f8e4_ (~user@159.89.21.45) (Quit: WeeChat 3.1)
[02:30:27] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b125-ee43-8416-dc8d.res6.spectrum.com)
[02:30:34] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[02:31:15] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b125-ee43-8416-dc8d.res6.spectrum.com) (Client Quit)
[02:31:44] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[02:33:07] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[02:33:28] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[02:33:40] *** Joins: Atque (~Atque@user/atque)
[02:34:06] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Remote host closed the connection)
[02:34:22] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[02:38:47] *** Quits: Thanatos (~Thanatos@105.112.17.39) (Read error: Connection reset by peer)
[02:39:18] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:4fc2:7d99:5128:4a6d) (Quit: Konversation terminated!)
[02:40:07] *** Joins: causaui1 (~causasui@192.241.228.169)
[02:40:52] *** Joins: TJ- (~root@user/tj-)
[02:42:49] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b125-ee43-8416-dc8d.res6.spectrum.com)
[02:42:51] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[02:45:20] *** Joins: iqqdq (~iqqdq@pool-108-26-241-146.bstnma.fios.verizon.net)
[02:45:29] *** Parts: iqqdq (~iqqdq@pool-108-26-241-146.bstnma.fios.verizon.net) ()
[02:45:37] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 268 seconds)
[02:46:50] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 268 seconds)
[02:47:04] *** Joins: george-smiley (~george_sm@user/george-smiley/x-3139219)
[02:47:14] *** Quits: george-smiley (~george_sm@user/george-smiley/x-3139219) (Client Quit)
[02:47:40] *** Quits: grooverman (~grooverma@177.95.12.14) (Remote host closed the connection)
[02:49:16] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:50:04] *** Quits: soman (~soman@83.139.147.234) (Ping timeout: 256 seconds)
[02:50:05] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[02:51:26] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 260 seconds)
[02:52:37] *** Joins: grooverman (~grooverma@177.95.12.14)
[02:53:02] *** Joins: analoq (~yashi@user/dies)
[02:55:16] *** Joins: __xor (~xor@72.49.199.147)
[02:56:41] *** Quits: parv (~quass@user/parv) (Quit: parv)
[02:56:46] *** Quits: _xor (~xor@72.49.199.147) (Ping timeout: 245 seconds)
[02:58:48] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[02:59:43] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[03:00:15] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:01:32] *** Joins: nergar (~Nergar@177.225.129.22)
[03:02:12] *** Joins: mefistof1les (~mefistofe@user/mefistofeles)
[03:02:21] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Quit: Reconnecting)
[03:02:23] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[03:02:34] *** mefistof1les is now known as mefistofeles
[03:03:10] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[03:03:58] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[03:05:55] *** Joins: fikran (~fikran@user/fikran)
[03:07:13] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-25-65-93-17-96.dsl.bell.ca)
[03:08:04] *** Quits: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[03:08:11] *** Joins: mandanguita (~mandangui@139.47.125.171)
[03:08:14] <mandanguita> Hi
[03:08:15] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[03:08:19] <mefistofeles> hey
[03:08:24] <mandanguita> Where are the log or config files of pip?
[03:08:32] *** Joins: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz)
[03:08:41] <mandanguita> It's messing with pacman and I don't know why, because I don't use pip at all
[03:09:17] <mefistofeles> mandanguita: what do you mean by messing with pacman exactly?
[03:09:37] *** Quits: tracey (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Quit: Leaving)
[03:10:25] *** Quits: brelod (~me@90.244.150.142) (Quit: leaving)
[03:10:32] <mandanguita> mefistofeles: it install packages globally
[03:10:47] <mandanguita> and then pacman cannout upgrade does packages (conflicting error)
[03:11:08] <mefistofeles> mandanguita: ok, yeah, so clearly you used pip with sudo, that's commonly a bad idea
[03:12:13] <mefistofeles> mandanguita: from the errors I guess you could spot what pkg it is and remove/uninstall it with pip
[03:13:41] <mandanguita> $ history | grep pip 688  history | grep pip
[03:13:51] <mandanguita> I'm not using pip :C
[03:14:18] <mandanguita> I simply don't understand pip, virtualenvs, I don't program with python
[03:14:33] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[03:14:38] <nedbat> mandanguita: you said pip is messing with pacman, and then, that you don't use pip.  can you clarify?
[03:15:05] <mefistofeles> I have the feeling it is more of an arch issue, mandanguita , you probably installed something from AUR that run pip with admin/sudo capabilities
[03:15:13] <mefistofeles> or something like that
[03:15:19] <mandanguita> nedbat: since I don't use pip, I guess there is some automatic process that uses it, or maybe another program that uses it and installs packages globally
[03:15:40] <mandanguita> mefistofeles: I don't use AUR
[03:15:59] <nedbat> mandanguita: why do you think it's pip that is doing it?
[03:16:02] <mefistofeles> mandanguita: well, in any case it's something you did
[03:16:10] <mefistofeles> directly or indirectly
[03:16:32] <mandanguita> I don't know, that's what I want to know if there are log files or config files
[03:16:48] <mandanguita> as I said, I don't know anything about pip
[03:16:49] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:17:01] <nedbat> mandanguita: tbh, i don't know if it keeps a log
[03:17:03] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[03:18:11] <mefistofeles> I think it has logging capabilities but it doesn't have a fixed one, iirc
[03:18:33] <mandanguita> pip list returns a list of 127 packages
[03:19:01] <mefistofeles> mandanguita: that's without sudo?
[03:19:16] <mandanguita> I guess installing a python version includes installing pip and with that some packages, but I don't know
[03:19:25] <mefistofeles> mandanguita: no, it doesn't work that way
[03:19:28] <mandanguita> mefistofeles: you mean the invocation?
[03:19:31] <mefistofeles> mandanguita: yes
[03:19:33] <mandanguita> yes
[03:19:40] *** Joins: mat001_ (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[03:20:24] *** Joins: webmariner (~james@cpc95914-rdng25-2-0-cust148.15-3.cable.virginm.net)
[03:21:03] <mefistofeles> mandanguita: I still think that this must be solved from the arch side, I also use arch, but I guess this is not the channel for it, I suggest #archlinux
[03:21:33] <mefistofeles> so if you share in that channel the exact errors you are getting with pacman, that might be helpful
[03:21:43] <mandanguita> ok
[03:22:20] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:22:44] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[03:22:50] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[03:23:06] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[03:23:11] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 264 seconds)
[03:23:20] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:23:27] *** Parts: rojiro (~rojiro@gateway/tor-sasl/rojiro) ()
[03:23:30] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[03:23:31] *** Quits: Khoyo (~khoyo@user/khoyo) (Ping timeout: 252 seconds)
[03:23:44] *** Joins: Naan (~naan@user/naan)
[03:24:13] *** Joins: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net)
[03:24:49] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[03:25:41] *** Quits: akaWolf (~akaWolf@2a05:3580:df03:1a00:21e:8cff:fe18:61) (Ping timeout: 268 seconds)
[03:25:42] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 268 seconds)
[03:26:19] *** Quits: CB_JD (~Code_Bleu@user/code-bleu/x-6939963) (Ping timeout: 268 seconds)
[03:27:31] *** Joins: Khoyo (~khoyo@user/khoyo)
[03:28:10] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 268 seconds)
[03:28:23] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[03:29:48] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[03:30:19] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Quit: Leaving)
[03:33:32] *** Joins: george-smiley (~george_sm@user/george-smiley/x-3139219)
[03:33:41] *** Quits: george-smiley (~george_sm@user/george-smiley/x-3139219) (Client Quit)
[03:34:52] *** Quits: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[03:34:56] *** Joins: Zambzuga (~Zambzuga@h-109-228-190-15.A400.priv.bahnhof.se)
[03:36:38] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[03:37:04] *** Quits: ffledgling (~textual@2620:10d:c090:500::1:8381) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:37:25] *** Quits: TJ- (~root@user/tj-) (Ping timeout: 268 seconds)
[03:38:10] *** Quits: java (~java@2406:da1c:87a:b700:ba4:9251:3d45:648d) (Quit: Kā kite ano i a koutou)
[03:39:15] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 268 seconds)
[03:39:42] <Zambzuga> Hello! Is there anyway i can break out of the selector mainloop without using break when cathing OSError?
[03:39:43] <Zambzuga> https://bpa.st/TATQ
[03:40:05] <Zambzuga> exit_server() is called when sigint is detected
[03:40:33] *** Quits: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net) (Quit: Konversation terminated!)
[03:40:34] <Zambzuga> Now obviously the selector does get closed which is why my mainloop() goes bananas.
[03:40:38] *** Joins: analoq (~yashi@user/dies)
[03:40:40] *** Joins: java (~java@2406:da1c:87a:b700:ba4:9251:3d45:648d)
[03:40:43] *** Joins: CB_JD (~Code_Bleu@user/code-bleu/x-6939963)
[03:41:02] <Zambzuga> But i can't really figure out a better way of doing this without, maybe if i change the entire code.
[03:42:23] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2 - https://znc.in)
[03:48:22] <mcon> Zambzuga: What, exactly, would you like to happen if/whenyou get that OSError? At first sight yous should ineed break and close the selector which is gone anyway (most likely). You could put  a loop restarting the server. It seems to me you are doing everything in Server.__init__() which might not be a very good idea. Consider creating the server and then starting it from outside.
[03:48:39] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-541a-d54d-99fb-72fd.res6.spectrum.com) (Read error: Connection reset by peer)
[03:49:12] *** Joins: causaui1 (~causasui@192.241.228.169)
[03:49:57] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[03:50:09] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[03:51:10] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[03:51:12] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[03:51:13] <Zambzuga> mcon bascially when exit_server() is ran i just want everything to shutdown gracefully.
[03:51:21] <Zambzuga> Well at least as gracefully as possible :P
[03:51:36] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[03:52:29] *** Lord_of_Life_ is now known as Lord_of_Life
[03:52:33] <Zambzuga> I can't seem to find a nice way of breaking that mainloop in a better way than catching the exception.
[03:53:50] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.3)
[03:54:40] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 268 seconds)
[03:54:49] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[03:55:15] <mcon> Zambzuga: You can always change "while True" -> "while self.running", initialize it in __init__() and reste it in exit_server()
[03:55:18] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[03:55:47] *** Joins: causaui1 (~causasui@192.241.228.169)
[03:56:09] *** Joins: BUSY (~BUSY@user/busy)
[03:57:05] <mcon> Zambzuga: I still suggest you do something like "Server().start_server_socket()" in your main and take the call out if __init__()
[03:57:35] <Zambzuga> Why is that better? I'm not suggesting it aint
[03:57:57] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[03:58:35] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 264 seconds)
[03:58:36] <mcon> Zambzuga: 'cause otherwise you really never have a fully initialized Server()
[04:00:01] *** Joins: Wulf (~Wulf@user/wulf)
[04:00:14] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 268 seconds)
[04:00:16] <Zambzuga> https://bpa.st/FWGA I tried what you suggested but still getting the same error if i don't catch that exception
[04:01:01] <Zambzuga> And yeah i know that handle_client() method is horrible but gonna clean it up once i've gotten rid of this issue :P
[04:01:17] *** Joins: george-smiley (~george_sm@user/george-smiley/x-3139219)
[04:02:29] *** Quits: george-smiley (~george_sm@user/george-smiley/x-3139219) (Client Quit)
[04:04:57] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[04:05:11] *** Joins: rany (~rany@user/rany)
[04:05:59] *** Quits: rany (~rany@user/rany) (Remote host closed the connection)
[04:07:22] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[04:07:37] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (Ping timeout: 268 seconds)
[04:08:27] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[04:09:55] <mcon> Zambzuga: OF COURSE you need to catch that exception. Problem is event_listener() is stuck in select() and you get out of it either because of an error (the socket was closed) or because something is ready for consumption. AFAIK selector.select() cannot wait for "error" conditions as normal "select()" can.
[04:10:25] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[04:10:42] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 268 seconds)
[04:10:50] <mcon> You can just "try: ... except OSError: pass" though
[04:11:45] <Zambzuga> yeah either i do pass or break
[04:11:55] <Zambzuga> was hoping there was a better way of handling it
[04:12:14] <Zambzuga> I've been using the debugger and as you say it seems to be "stuck" on select()
[04:12:44] *** Quits: oriba (~oriba@dynamic-089-012-132-051.89.12.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[04:12:55] <Zambzuga> guessing self.sel.close() does close the selector but because its stuck on that line of code it gives an error
[04:13:30] <mcon> Zambzuga: I don't think so. Problem is select() does not seem to have an "error return" , it can only raise an exception, so you need ot handle it.
[04:13:43] <dre_> do we have any of the developers of pytest or etc here?
[04:13:53] *** Joins: ovnicraft (~ovnicraft@181.198.3.234)
[04:14:04] *** Joins: monkey_ (~user@2803:d100:e440:314:e2f7:7ee8:f319:f707)
[04:14:06] *** Parts: mcon (~Thunderbi@host-79-55-229-50.retail.telecomitalia.it) ()
[04:14:07] <dre_> I've tried this before but I can't seem to find a way to neatly "ignore all breakpoints" in pytest running
[04:14:35] <dre_> like I know if I litter my code with `breakpoint()` I can "py.test -s"
[04:14:46] <Zambzuga> mcon thanks a lot for your time and efforts. I guess i'll have to be happy with breaking at oserror and hoping there aint some other weird conditions where it can throw that error and i need to treat it differently
[04:14:49] <dre_> but if I have py.test without "-s" it will raise an error because they find breakpoint()
[04:16:27] *** Joins: pluri (~pluri@user/pluri)
[04:16:44] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[04:17:03] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[04:17:25] *** Joins: rany (~rany@user/rany)
[04:17:26] *** Quits: chair1 (~bbs@187.109.18.204) (Quit: leaving)
[04:17:33] *** Joins: mickey8 (~user@user/mickey)
[04:19:43] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Read error: Connection reset by peer)
[04:20:34] *** Quits: luva (~luva@159.48.53.250) (Ping timeout: 268 seconds)
[04:20:58] *** Quits: Gerula (~Gerula@user/gerula) (Read error: Connection reset by peer)
[04:21:21] *** Joins: Gerula (~Gerula@user/gerula)
[04:22:23] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[04:23:08] *** Joins: f8e4 (~user@159.89.21.45)
[04:24:36] *** Joins: ham5urg_ (~ham5urg@2a04:4540:6815:2e00:a9fa:b1d3:afd2:7f22)
[04:27:22] *** Quits: ham5urg (~ham5urg@2a04:4540:6811:1500:cfaf:bf50:7167:4f97) (Ping timeout: 268 seconds)
[04:27:55] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[04:28:19] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Remote host closed the connection)
[04:28:54] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[04:29:30] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:29:39] <pluri> I'm hitting a basic "just a moment, you will be automatically redirected" page when using a selenium webdriver. When I open the same url in a normal browser, it automatically redirects after a few seconds to the correct page. This redirection doesn't seem to happen in Selenium. anyone knows why?
[04:30:34] <pluri> I'm doing `driver.get(url)`, then I'm watching the proxy through which the connection is tunnelled, and after the initial request, no other requests are being made.
[04:30:37] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Read error: Connection reset by peer)
[04:30:53] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[04:31:42] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 260 seconds)
[04:31:57] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[04:32:58] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[04:33:42] *** Joins: luva (~luva@159.48.53.250)
[04:34:21] *** Joins: whatsupdoc52 (~whatsupdo@168.149.164.91)
[04:35:33] *** Joins: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il)
[04:36:25] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[04:36:29] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Quit: ZNC - http://znc.in)
[04:37:11] *** Joins: INeedAHandle (~INeedAHan@39.124.72.106)
[04:37:18] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:37:51] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 268 seconds)
[04:39:16] *** Quits: flokuehn (~flokuehn@87.123.247.51) (Ping timeout: 245 seconds)
[04:39:20] *** Quits: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz) (Quit: Textual IRC Client: www.textualapp.com)
[04:39:38] *** Quits: jcvfen (~jcvfen@84.209.129.214) (Ping timeout: 260 seconds)
[04:40:27] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[04:41:04] *** Joins: flokuehn (~flokuehn@87.123.247.59)
[04:42:09] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[04:42:51] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[04:44:04] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Remote host closed the connection)
[04:45:11] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[04:53:00] *** Joins: enquora (~enquora@S0106f0f2498387f3.cg.shawcable.net)
[04:53:09] *** Quits: enquora (~enquora@S0106f0f2498387f3.cg.shawcable.net) (Client Quit)
[04:54:42] *** Quits: Bakunin (~Lindis@user/lindis) (Quit: Chew Tobacco. TWO CHEWBACCAS.)
[04:55:06] *** Quits: MrC (Ben@mrbenc.net) (Ping timeout: 260 seconds)
[04:59:14] *** Quits: luva (~luva@159.48.53.250) (Ping timeout: 260 seconds)
[04:59:20] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.3)
[05:02:50] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[05:04:19] *** Joins: jonthesnow (~xizhendu@240e:404:8511:3fc3:dadc::30c0)
[05:05:46] *** Quits: akk (~akk@75.161.146.115) (Quit: +++)
[05:06:11] *** Joins: dba (uid502594@id-502594.hampstead.irccloud.com)
[05:06:51] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[05:07:38] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 260 seconds)
[05:07:39] *** Quits: cth (~Cthulchu@193.194.107.250) (Ping timeout: 260 seconds)
[05:08:41] *** Joins: alexyov1 (~alexyov@79.124.0.2)
[05:08:56] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[05:10:45] *** Joins: tm007 (uid287041@id-287041.uxbridge.irccloud.com)
[05:10:48] *** Quits: Praise (~Fat@user/praise) (Ping timeout: 265 seconds)
[05:11:08] *** Quits: alexyov (~alexyov@79.124.0.2) (Ping timeout: 260 seconds)
[05:11:08] *** alexyov1 is now known as alexyov
[05:11:11] *** Joins: Praise (~Fat@user/praise)
[05:13:04] *** Joins: stealth_ (~stealth_@216-197-160-97.regn.static.sasknet.sk.ca)
[05:13:14] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[05:14:13] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Ping timeout: 268 seconds)
[05:15:16] *** Joins: fikran (~fikran@user/fikran)
[05:16:36] *** Quits: fassl (~fassl@2a02:8388:1987:9380:c4ee:81c5:625a:a215) (Quit: Leaving)
[05:16:52] *** Joins: luva (~luva@185.232.23.45)
[05:17:55] *** Quits: vit (~vit@chello085216193138.chello.sk) (Ping timeout: 268 seconds)
[05:24:46] *** Joins: ricky (~rickybob@35.143.255.39)
[05:26:50] *** Quits: R0b0t1 (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net) (Remote host closed the connection)
[05:27:15] *** Joins: R0b0t1 (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net)
[05:28:24] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[05:29:02] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 268 seconds)
[05:29:10] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 260 seconds)
[05:29:11] *** Joins: amo (~amogorkon@port-92-196-11-223.dynamic.as20676.net)
[05:30:29] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:32:36] *** Quits: amogorkon (~amogorkon@port-92-196-69-68.dynamic.as20676.net) (Ping timeout: 260 seconds)
[05:32:40] *** Quits: jancoow (~jancoow@user/jancoow) (Quit: The Lounge - https://thelounge.chat)
[05:33:59] *** Quits: ovnicraft (~ovnicraft@181.198.3.234) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:34:04] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[05:34:55] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[05:35:19] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[05:35:48] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:d29:7f9f:ec16:1313) (Ping timeout: 268 seconds)
[05:36:06] *** Quits: whatsupdoc52 (~whatsupdo@168.149.164.91) (Ping timeout: 256 seconds)
[05:37:39] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Quit: Going offline, see ya! (www.adiirc.com))
[05:38:03] *** Joins: ffledgling (~textual@2620:10d:c090:400::5:f2cf)
[05:38:16] *** Quits: Khoyo (~khoyo@user/khoyo) (Ping timeout: 268 seconds)
[05:38:18] *** Joins: Thanatos (~Thanatos@105.112.182.162)
[05:38:25] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:d29:7f9f:ec16:1313)
[05:39:31] *** Quits: ricky (~rickybob@35.143.255.39) (Ping timeout: 268 seconds)
[05:40:08] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 268 seconds)
[05:40:08] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[05:40:14] *** Quits: Thanatos (~Thanatos@105.112.182.162) (Read error: Connection reset by peer)
[05:40:26] *** Joins: Khoyo (~khoyo@user/khoyo)
[05:42:36] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Ping timeout: 268 seconds)
[05:42:59] *** Quits: fannagoganna (uid110488@id-110488.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[05:44:18] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[05:45:25] *** Joins: frost (~frost@user/frost)
[05:47:26] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:48:05] *** Joins: jazzy3 (~jaziz@user/jaziz)
[05:49:10] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 260 seconds)
[05:53:04] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[05:55:29] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[05:56:38] *** Joins: causaui1 (~causasui@192.241.228.169)
[06:00:29] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:01:08] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[06:01:42] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 268 seconds)
[06:02:03] *** Quits: nomic (~nomic@185.192.69.57) (Quit: Leaving)
[06:02:04] *** Joins: george-smiley (~george_sm@user/george-smiley/x-3139219)
[06:02:11] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[06:02:12] *** Quits: george-smiley (~george_sm@user/george-smiley/x-3139219) (Remote host closed the connection)
[06:02:19] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Ping timeout: 268 seconds)
[06:02:46] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:03:06] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[06:03:30] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[06:03:54] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[06:06:01] *** Quits: Khoyo (~khoyo@user/khoyo) (Ping timeout: 268 seconds)
[06:06:31] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[06:06:54] *** Joins: jancoow (~jancoow@user/jancoow)
[06:07:50] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 260 seconds)
[06:08:29] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 268 seconds)
[06:08:49] <grym> lionslicer: on the one hand this has nothing to do with python; on the other it has a lot to do with learning about stuff.  Just substitute "programming" when he says "riding" :) https://www.youtube.com/watch?v=Iz6aYWxYZnI
[06:09:06] *** Quits: jazzy3 (~jaziz@user/jaziz) (Ping timeout: 268 seconds)
[06:10:07] *** Joins: jetchisel (jetchisel@user/jetchisel)
[06:11:49] *** Quits: p-i- (~Ohmu@223.206.144.16) (Read error: Connection reset by peer)
[06:12:07] *** Quits: monkey_ (~user@2803:d100:e440:314:e2f7:7ee8:f319:f707) (Remote host closed the connection)
[06:12:11] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 268 seconds)
[06:12:25] *** Joins: p-i- (~Ohmu@mx-ll-223.206.144-16.dynamic.3bb.co.th)
[06:13:35] *** Quits: emf (~emf@2620:10d:c090:400::5:f24f) (Ping timeout: 264 seconds)
[06:13:53] *** Quits: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net) (Quit: Leaving)
[06:14:26] *** Joins: jazzy (~jaziz@user/jaziz)
[06:15:34] *** Joins: emf (~emf@2620:10d:c091:480::1:9d5d)
[06:15:54] *** Joins: zmt00 (~zmt00@user/zmt00)
[06:16:49] *** Joins: Lykaina (~Lykaina@cpe-67-255-96-229.stny.res.rr.com)
[06:17:29] <Lykaina> what is python usually used for?
[06:17:35] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[06:19:59] *** Quits: nergar (~Nergar@177.225.129.22) (Quit: Leaving)
[06:20:04] *** Joins: The_Jag (~The_Jag@host-79-52-47-230.retail.telecomitalia.it)
[06:20:25] <Lykaina> i mean, assume i want to learn a language, heard about python, but don't know if it will fit my needs.
[06:22:04] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[06:22:10] <moonmoon> what are your needs
[06:22:24] <moonmoon> it's a general purpose language and serves many niches
[06:22:35] *** Quits: The_Jag_ (~The_Jag@host-87-16-87-93.retail.telecomitalia.it) (Ping timeout: 264 seconds)
[06:23:33] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) (Remote host closed the connection)
[06:24:17] <Lykaina> how easy is it to learn?
[06:24:29] *** Quits: Lykaina (~Lykaina@cpe-67-255-96-229.stny.res.rr.com) (Changing host)
[06:24:29] *** Joins: Lykaina (~Lykaina@user/lykaina)
[06:24:34] *** Joins: Khoyo (~khoyo@user/khoyo)
[06:24:39] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[06:24:53] <moonmoon> depends on your background, but it's not particularly difficult imo
[06:25:41] <Lykaina> i usually write in c/c++
[06:25:47] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[06:26:21] <Lykaina> my needs are learning new things to occupy my time
[06:26:38] *** Joins: emf_ (~emf@2620:10d:c090:400::5:5f62)
[06:27:17] <lionslicer> grym: that makes sense. I'll start projects as soon as I finish this book. in fact, the last part of the book focus on some projects like games and sites
[06:28:35] *** Quits: emf (~emf@2620:10d:c091:480::1:9d5d) (Ping timeout: 264 seconds)
[06:29:16] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 245 seconds)
[06:29:55] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[06:30:14] *** Joins: brabrax (~brabrax@user/brabrax)
[06:30:27] <Lykaina> lionslicer: you an author?
[06:30:30] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:a584:300e:8b6:5c5d) (Ping timeout: 256 seconds)
[06:30:43] *** Joins: RiFo (~RiFo@user/rifo)
[06:31:07] *** Joins: causaui1 (~causasui@192.241.228.169)
[06:31:55] *** Quits: audiocat (~audio@user/audio) (Ping timeout: 268 seconds)
[06:32:08] *** Joins: elkclone (~elkclone@user/elkclone)
[06:34:07] <lionslicer> Lykaina: lol no, I'm currently reading a book. that's what I mean by finishing it
[06:34:23] <lionslicer> a book on python, that is
[06:35:08] *** Quits: MercilessDeth (~brad@136.49.61.2) (Ping timeout: 260 seconds)
[06:36:04] *** Joins: MercilessDeth (~brad@136.49.59.177)
[06:36:06] <Lykaina> is it good for intermediate programmers new to python and would you recommend it to one?
[06:36:22] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 260 seconds)
[06:36:29] <lionslicer> I'm pretty new to programming
[06:37:11] <lionslicer> I just started and this book is for people who are starting out
[06:37:12] <grym> Lykaina: "think python" in the topic is good, so is the official tutorial
[06:37:16] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[06:38:18] *** Quits: spiderman (~spiderman@user/spiderman) (Quit: WeeChat 3.2)
[06:38:43] <p-i-> Python is _really_ easy to get started with, but it has taken me years to get a real feeling for it. And I still feel like I'm less than halfway there.
[06:39:03] <p-i-> It's like saying 'how hard is piano?' ... it depends on what you want to play!
[06:39:45] *** Quits: Valeria (~Valeria@user/valeria) (Quit: Client closed)
[06:39:50] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:a584:300e:8b6:5c5d)
[06:40:06] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-6cb7-7b9e-be34-0e03.res6.spectrum.com) (Quit: jarthur)
[06:42:37] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[06:42:51] <Lykaina> ty
[06:44:53] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 268 seconds)
[06:45:08] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Read error: Connection reset by peer)
[06:45:30] *** Joins: ovnicraft (~ovnicraft@181.198.3.234)
[06:45:31] *** Joins: tWqaq (~tWqaq@180.169.35.114)
[06:46:49] *** Parts: Lykaina (~Lykaina@user/lykaina) (Leaving)
[06:48:07] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[06:49:29] *** Joins: khanred (~khanred@user/khanred)
[06:49:39] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[06:49:47] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) (Read error: Connection reset by peer)
[06:50:46] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-25-65-93-17-96.dsl.bell.ca) (Ping timeout: 260 seconds)
[06:51:24] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[06:51:39] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) (Remote host closed the connection)
[06:51:54] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[06:53:15] *** Joins: aknot (~aknot@2603:900a:1503:17bb:a613:558d:38eb:924f)
[06:56:31] <pluri> I did `python3.7 -m venv venv` , but when I activate the virtual environment, `python --version` returns 3.6.9
[06:57:21] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[06:58:41] <pluri> help?
[06:59:02] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[07:00:10] *** Quits: mat001_ (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[07:00:39] <stealth_> you might be looking at 2 different python installs like `python` vs `python3`
[07:02:46] *** Quits: Khoyo (~khoyo@user/khoyo) (Ping timeout: 268 seconds)
[07:05:51] *** Quits: tWqaq (~tWqaq@180.169.35.114) (Read error: Connection reset by peer)
[07:06:51] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) ()
[07:07:00] *** Quits: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Quit: Leaving)
[07:08:59] *** Joins: tWqaq (~tWqaq@180.169.35.114)
[07:09:09] *** Quits: tWqaq (~tWqaq@180.169.35.114) (Read error: Connection reset by peer)
[07:09:16] *** Joins: causaui1 (~causasui@192.241.228.169)
[07:11:16] *** Joins: tWqaq (~tWqaq@180.169.35.114)
[07:11:47] *** Quits: enyc (~enyc@user/enyc) (Ping timeout: 264 seconds)
[07:11:52] *** Joins: zmt01 (~zmt00@user/zmt00)
[07:12:27] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b125-ee43-8416-dc8d.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[07:13:10] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 260 seconds)
[07:13:25] *** Joins: p-i-_ (~Ohmu@223.206.144.16)
[07:13:42] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 260 seconds)
[07:15:34] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 260 seconds)
[07:16:57] *** Quits: p-i- (~Ohmu@mx-ll-223.206.144-16.dynamic.3bb.co.th) (Ping timeout: 268 seconds)
[07:17:22] *** Quits: tWqaq (~tWqaq@180.169.35.114) (Read error: Connection reset by peer)
[07:17:25] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[07:18:39] *** Joins: tWqaq (~tWqaq@180.169.35.114)
[07:18:50] *** Quits: tWqaq (~tWqaq@180.169.35.114) (Read error: Connection reset by peer)
[07:20:25] *** Joins: tWqaq (~tWqaq@180.169.35.114)
[07:20:31] *** Quits: tWqaq (~tWqaq@180.169.35.114) (Read error: Connection reset by peer)
[07:20:35] *** Quits: thurs8060 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[07:21:52] *** Quits: luva (~luva@185.232.23.45) (Ping timeout: 268 seconds)
[07:22:07] *** Joins: Thanatos (~Thanatos@105.112.182.162)
[07:22:36] *** Joins: tWqaq (~tWqaq@180.169.35.114)
[07:22:59] <Togra> if you're on a garden variety terminal, start with "python" and tab a few times to see how many you have
[07:23:01] *** Joins: LabMonkey (~LabMonkey@206.255.106.67)
[07:23:06] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[07:23:13] <Togra> you might even have python3.7 and python3.6
[07:23:52] *** Quits: tWqaq (~tWqaq@180.169.35.114) (Read error: Connection reset by peer)
[07:23:55] <Togra> which one is the default when you just genericly type in "python" may be up to your particular distro, and there's probly distro-specific steps to make the one you like most the default one
[07:24:15] <Togra> I'm not very familiar with how systems differ on package management though so I can't give any pointers there, if that's even the issue
[07:24:37] *** Joins: fikran (~fikran@user/fikran)
[07:25:12] *** Joins: tWqaq (~tWqaq@180.169.35.114)
[07:26:48] *** Quits: Mechanismus (~LabMonkey@206.255.106.67) (Ping timeout: 268 seconds)
[07:27:07] *** Quits: tWqaq (~tWqaq@180.169.35.114) (Read error: Connection reset by peer)
[07:27:14] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:a584:300e:8b6:5c5d) (Quit: Client closed)
[07:27:14] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[07:27:28] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[07:27:30] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:ad21:fcbf:5a0b:dd37)
[07:28:40] *** Joins: tWqaq (~tWqaq@180.169.35.114)
[07:28:41] *** Quits: tWqaq (~tWqaq@180.169.35.114) (Read error: Connection reset by peer)
[07:30:23] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[07:30:59] *** Quits: ckdCreations (~ckdCreati@147.55.133.137) (Read error: Connection reset by peer)
[07:31:00] *** Joins: djhankb (~djhankb@208.113.164.68)
[07:31:12] *** Joins: tWqaq (~tWqaq@180.169.35.114)
[07:31:16] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[07:31:22] *** Quits: tWqaq (~tWqaq@180.169.35.114) (Read error: Connection reset by peer)
[07:31:44] *** Quits: grooverman (~grooverma@177.95.12.14) (Ping timeout: 268 seconds)
[07:32:11] *** Quits: zyweo (~Svew@user/zyweo) (Ping timeout: 264 seconds)
[07:32:25] *** Joins: thurs8060 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[07:32:56] *** Joins: tWqaq (~tWqaq@180.169.35.114)
[07:32:59] *** Quits: tWqaq (~tWqaq@180.169.35.114) (Read error: Connection reset by peer)
[07:34:42] *** Joins: tWqaq (~tWqaq@180.169.35.114)
[07:34:44] *** Joins: luva (~luva@195.181.170.216)
[07:35:46] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:38:29] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[07:39:27] *** Quits: khanred (~khanred@user/khanred) (Quit: Leaving)
[07:40:07] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[07:40:22] *** Quits: aknot (~aknot@2603:900a:1503:17bb:a613:558d:38eb:924f) (Ping timeout: 268 seconds)
[07:42:52] *** Joins: fibby (~kj7rrv@16.sub-174-204-192.myvzw.com)
[07:43:39] <fibby> I think i found a bug in Python.
[07:43:39] <fibby> When I enter `1 == 1`, it returns True
[07:44:49] <KirkMcDonald> Okay?
[07:45:05] <fibby> Is that something I could fix?
[07:45:14] <KirkMcDonald> What is the behavior you expect this to have?
[07:45:16] * themill is comfortable with that result
[07:45:23] <fibby> I expected False
[07:45:26] <KirkMcDonald> Why?
[07:45:50] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 260 seconds)
[07:45:53] <fibby> Because 1 equals 2 not 1
[07:46:19] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[07:46:23] <stealth_> True == True  # True
[07:46:53] <fibby> How could I fix the bug?
[07:47:35] <KirkMcDonald> There's a guide to contributing to Python here: https://devguide.python.org/
[07:47:42] <KirkMcDonald> Good luck!
[07:47:52] *** Quits: tWqaq (~tWqaq@180.169.35.114) (Read error: Connection reset by peer)
[07:48:03] <fibby> Thank you!
[07:48:14] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[07:48:30] *** Joins: spithash (~spithash@user/spithash)
[07:49:03] <fibby> Which file will the bug be in?
[07:49:15] <KirkMcDonald> That's really a thing you'll have to determine yourself.
[07:49:27] <fibby> Okay.
[07:49:32] <stealth_> are you thinking `1 + 1` # 2?
[07:49:35] *** Joins: tWqaq (~tWqaq@180.169.35.114)
[07:49:49] <fibby> No, I would expect 1 to equal 2
[07:50:11] <stealth_> are you drunk or trolling?
[07:50:14] <fibby> `print(1)` should print 2 to the terminal
[07:51:22] *** Quits: tWqaq (~tWqaq@180.169.35.114) (Read error: Connection reset by peer)
[07:52:22] *** Quits: fibby (~kj7rrv@16.sub-174-204-192.myvzw.com) (Quit: Quit)
[07:52:39] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[07:52:45] *** Joins: tWqaq (~tWqaq@180.169.35.114)
[07:52:49] *** Quits: p-i-_ (~Ohmu@223.206.144.16) (Read error: Connection reset by peer)
[07:53:17] *** Quits: tWqaq (~tWqaq@180.169.35.114) (Read error: Connection reset by peer)
[07:53:24] *** Joins: p-i- (~Ohmu@223.206.144.16)
[07:54:01] *** Joins: tWqaq (~tWqaq@180.169.35.114)
[07:54:08] *** Quits: tWqaq (~tWqaq@180.169.35.114) (Read error: Connection reset by peer)
[07:55:29] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[07:55:46] *** Joins: tWqaq (~tWqaq@180.169.35.114)
[07:55:50] *** Quits: tWqaq (~tWqaq@180.169.35.114) (Read error: Connection reset by peer)
[07:57:03] <Thanatos> Hello everyone
[07:57:30] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Ping timeout: 260 seconds)
[07:57:31] *** Joins: tWqaq (~tWqaq@180.169.35.114)
[07:57:39] *** Quits: tWqaq (~tWqaq@180.169.35.114) (Read error: Connection reset by peer)
[07:58:32] *** Joins: zmt00 (~zmt00@user/zmt00)
[07:59:09] *** Joins: tWqaq (~tWqaq@180.169.35.114)
[07:59:20] *** Quits: tWqaq (~tWqaq@180.169.35.114) (Read error: Connection reset by peer)
[07:59:40] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[08:00:57] *** Quits: Spawns_Carpeting (~Spawns_Ca@user/spawns-carpeting/x-6969421) (Quit: WeeChat 3.3)
[08:01:08] *** Joins: fannagoganna (uid110488@id-110488.tinside.irccloud.com)
[08:02:36] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[08:03:58] <Thanatos> I have a python script that makes a long running request, that takes 1 minute to get a response from the server. (that's by design). How do I get the script to respond to Ctrl + C or SIGINT instantaneously? I've truied "    signal.signal(signal.SIGINT, lambda x,y : sys.exit(x))
[08:03:58] <Thanatos> "
[08:04:40] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:ad21:fcbf:5a0b:dd37) (Quit: Client closed)
[08:04:59] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:ad21:fcbf:5a0b:dd37)
[08:05:16] *** Joins: akaWolf (~akaWolf@akawolf.org)
[08:05:54] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 260 seconds)
[08:05:57] <stealth_> Thanatos, use try to catch `KeyboardInterrupt` https://docs.python.org/3/library/exceptions.html#KeyboardInterrupt
[08:06:09] *** Joins: enyc (~enyc@user/enyc)
[08:08:29] <Thanatos> stealth_, nope, the script still runs for some time before stopping
[08:08:35] *** Quits: lionslicer (~lionslice@2804:d41:a7a6:1300:8ca1:238b:723f:2741) (Remote host closed the connection)
[08:09:31] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[08:09:36] <stealth_> Thanatos, hmm... do you have link to the code?
[08:10:29] *** Quits: wilk (~wilk@user/wilk) (Remote host closed the connection)
[08:10:53] *** Quits: mandanguita (~mandangui@139.47.125.171) (Quit: leaving)
[08:14:52] <Thanatos> stealth_, sorry, it's on an internal server. I won't be able to link it
[08:15:03] <Thanatos> It's not particularly complex
[08:15:33] <Thanatos> It's just get requests that take 1 minute to complete
[08:16:31] <icy> a code sample would greatly help
[08:17:05] <cluelessperson> Thanatos,    you would probably design for the request to be handled in the background or asynchronously, and have the foreground wait for that.   And enable the foreground to capture the signal and decide what to do about the request it's waiting on.
[08:17:23] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Quit: Hay te huacho!)
[08:17:33] <dba> let say I have 3 variable declared a = 1 and b = 2 and then a = b, would I have allocation of a and b in the memory and just a?
[08:17:37] <stealth_> Thanatos, i would guess that someone is blocking even after ctrl+c for another minute
[08:17:55] <cluelessperson> background_process = subprocess.exec(    or whatever.     try:   while waiting whatever amount:      except signal:  cleanup, cancel, quit
[08:18:03] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:18:41] <stealth_> something*
[08:18:43] <cluelessperson> dba, "a and b in memory, and just a?"
[08:19:17] <cluelessperson> dba, you're assigning the value of a to b,  but a still exist and carries the assigned value.
[08:19:58] *** Quits: reset (~reset@user/reset) (Quit: reset)
[08:21:22] <stealth_> dba `a = b` now `a` would reference to `2` memory block and increase reference count of 2 by +1, and reference to `1` would have reached `0` and garbage collected.
[08:21:41] *** Joins: Khoyo (~khoyo@user/khoyo)
[08:21:59] *** Quits: msfninja (~kali@user/msfninja) (Ping timeout: 264 seconds)
[08:25:34] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[08:27:13] <dba> cluelessperson, stealth_, what I am trying to get into is to figure out if it is possible to make a variable immutable. do you think it is possible?
[08:27:20] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[08:29:14] *** Quits: nickel8448 (~rahulwadh@147.80.76.34.bc.googleusercontent.com) (Quit: WeeChat 3.2.1)
[08:29:53] <stealth_> dba hmm.. you mean like define? in python you can't really do such things!
[08:30:36] *** Quits: c10l (~c10l@user/c10l) (Quit: The Lounge - https://thelounge.chat)
[08:31:01] *** Joins: c10l (~c10l@user/c10l)
[08:31:01] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[08:31:14] *** Joins: rany_ (~rany@user/rany)
[08:31:34] <dba> stealth_, yes after defining it, make it immutable. I know of object can be immutable but not sure of variables
[08:31:34] *** Quits: luva (~luva@195.181.170.216) (Ping timeout: 260 seconds)
[08:32:43] <stealth_> dba, you mean the value can be immutable? depends on the type and to some extent, yes. but not the variable
[08:32:47] *** Joins: ghostbuster (~admin@user/ghostbuster)
[08:32:47] *** Quits: rany (~rany@user/rany) (Ping timeout: 268 seconds)
[08:34:08] <stealth_> dba, generally you can `DEFINE = 123` and all capital letters is assumed to be defined and ppl normally don't modify its values.
[08:35:10] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:ad21:fcbf:5a0b:dd37) (Ping timeout: 256 seconds)
[08:35:15] <Thanatos> icy, stealth_, code sample is here.
[08:35:18] <Thanatos> https://bpa.st/U3UQ
[08:37:22] <stealth_> Thanatos, you probably don't need signal
[08:38:17] <Thanatos> Yea, I guess. I was just trying to pre-empt the possibility of using `kill <pid>`
[08:38:48] <Thanatos> I may run this unattended on a server
[08:39:00] <stealth_> Thanatos, you normally want to safely account for ctrl+c within the software, so you do all the clean up before exiting
[08:40:41] <Thanatos> I'm just considering the user experience, it's kind of weird to kill a program and wait for up to 60 seconds before it crashes
[08:40:46] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:41:11] <Thanatos> I'm perfectly fine with having the interpreter handle cleanup for me
[08:41:56] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[08:42:01] *** Quits: java (~java@2406:da1c:87a:b700:ba4:9251:3d45:648d) (Remote host closed the connection)
[08:42:19] *** Joins: java (~java@3.105.31.94)
[08:42:46] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[08:43:09] <stealth_> Thanatos, don't think you need to use `sys.exit()` either, ctrl+c will exit your software, its just you catch `except KeyboardInterrupt: ...` to do any clean up.
[08:45:26] <Thanatos> stealth_, I was looking to see if there's anyway to make the exit faster. I think cluelessperson's idea may work. It may just add more complexity.
[08:45:34] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[08:47:05] *** Joins: zmt00 (~zmt00@user/zmt00)
[08:47:38] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[08:48:13] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 268 seconds)
[08:48:19] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[08:48:24] *** __xor is now known as _xor
[08:49:51] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:52:32] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[08:53:58] *** Quits: alkino (~quassel@user/alkino) (Ping timeout: 260 seconds)
[08:54:14] *** Joins: alkino (~quassel@user/alkino)
[08:54:23] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 268 seconds)
[08:55:24] *** Joins: AsenMx (~AsenMx@78.90.248.234)
[08:56:14] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 268 seconds)
[08:56:24] *** byzandula is now known as byzafk
[08:58:10] *** Joins: zmt00 (~zmt00@user/zmt00)
[08:58:58] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:03:30] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[09:03:44] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Remote host closed the connection)
[09:04:22] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[09:04:39] *** Joins: zmt01 (~zmt00@user/zmt00)
[09:09:10] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 268 seconds)
[09:09:10] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:6941:80d8:479:9d51) (Ping timeout: 268 seconds)
[09:09:58] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:6941:80d8:479:9d51)
[09:10:25] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 268 seconds)
[09:12:04] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[09:12:05] *** Joins: analoq (~yashi@user/dies)
[09:13:36] *** Joins: mat001_ (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[09:15:37] *** Joins: ham5urg__ (~ham5urg@149.233.139.246.dynamic-pppoe.dt.ipv4.wtnet.de)
[09:15:42] *** Joins: causaui1 (~causasui@192.241.228.169)
[09:16:54] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[09:18:25] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 268 seconds)
[09:18:26] *** Quits: ham5urg_ (~ham5urg@2a04:4540:6815:2e00:a9fa:b1d3:afd2:7f22) (Ping timeout: 268 seconds)
[09:19:49] *** Quits: Skyfire (~pyon@user/pyon) (Read error: Connection reset by peer)
[09:20:17] *** Quits: enyc (~enyc@user/enyc) (Ping timeout: 268 seconds)
[09:20:34] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 260 seconds)
[09:20:37] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:21:18] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:7d98:b130:1888:cac6) (Read error: Connection reset by peer)
[09:21:20] *** Joins: msfninja (~kali@user/msfninja)
[09:22:26] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:22:45] *** Quits: java (~java@3.105.31.94) (Ping timeout: 268 seconds)
[09:24:48] *** Joins: zmt00 (~zmt00@user/zmt00)
[09:25:34] *** Quits: zmt00 (~zmt00@user/zmt00) (Remote host closed the connection)
[09:26:02] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[09:26:17] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:27:14] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[09:28:17] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 268 seconds)
[09:29:36] *** Joins: stranac (~stranac@195.29.239.126)
[09:30:22] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:30:30] *** Quits: TMan459 (~TMan459@068-187-099-141.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[09:31:33] *** Quits: kujo (~kujo@188.166.12.52) (Remote host closed the connection)
[09:32:00] *** Joins: kujo (~kujo@188.166.12.52)
[09:32:14] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[09:33:58] *** Joins: fikran (~fikran@user/fikran)
[09:35:53] *** Quits: ovnicraft (~ovnicraft@181.198.3.234) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:39:12] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[09:39:53] *** Joins: hendursaga (~weechat@user/hendursaga)
[09:41:07] *** Joins: Tas-sos (~Tas-sos@ppp005054072206.access.hol.gr)
[09:42:10] *** Joins: dvx (~dvx@185.63.97.64)
[09:42:10] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[09:43:25] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[09:45:14] *** Joins: java (~java@2406:da1c:87a:b700:ba4:9251:3d45:648d)
[09:47:28] *** Quits: seednode4 (~seednode@user/seednode) (Quit: Nihil supernum.)
[09:48:09] *** Joins: seednode4 (~seednode@user/seednode)
[09:48:21] *** Joins: mallkrampus (~mallkramp@64.44.140.61)
[09:49:11] *** Joins: causaui1 (~causasui@192.241.228.169)
[09:52:45] *** Joins: Elzington_ (~Elzington@68.235.43.124)
[09:54:17] *** Joins: Elzington__ (~Elzington@68.235.43.14)
[09:54:25] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[09:54:38] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 260 seconds)
[09:55:26] *** Quits: Elzington (~Elzington@68.235.43.172) (Ping timeout: 268 seconds)
[09:55:30] *** Joins: upsala (~zcb@185.213.155.232)
[09:57:26] *** Quits: Elzington_ (~Elzington@68.235.43.124) (Ping timeout: 260 seconds)
[09:57:26] *** Quits: jonthesnow (~xizhendu@240e:404:8511:3fc3:dadc::30c0) (Ping timeout: 260 seconds)
[09:57:31] *** Quits: Tas-sos (~Tas-sos@ppp005054072206.access.hol.gr) (Quit: leaving)
[09:57:54] *** Joins: Tas-sos (~Tas-sos@ppp005054072206.access.hol.gr)
[09:57:59] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:59:07] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Ping timeout: 268 seconds)
[09:59:07] *** Quits: ffledgling (~textual@2620:10d:c090:400::5:f2cf) (Ping timeout: 268 seconds)
[09:59:08] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 268 seconds)
[09:59:46] *** Quits: xcombel39 (~Xavier_Co@atoulouse-551-1-6-34.w92-156.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[10:00:52] *** Joins: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net)
[10:00:56] *** Quits: mumixam (~m@user/mumixam) (Ping timeout: 260 seconds)
[10:02:17] *** Joins: ffledgling (~textual@2620:10d:c090:400::5:f2cf)
[10:03:02] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[10:13:48] *** Joins: alkino_ (~quassel@user/alkino)
[10:13:56] *** Quits: alkino (~quassel@user/alkino) (Ping timeout: 268 seconds)
[10:14:55] *** Joins: dohtem (uid524096@user/dohtem)
[10:17:02] *** Quits: pluri (~pluri@user/pluri) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:17:47] *** Joins: ihristov (~ihristov@85.187.46.226)
[10:18:54] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[10:18:58] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:22:35] *** Quits: mat001_ (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 264 seconds)
[10:26:09] *** Joins: mumixam (~m@user/mumixam)
[10:26:31] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[10:29:32] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:33:51] *** Joins: kosh (~kosh@user/kosh)
[10:33:57] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[10:34:16] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Ping timeout: 268 seconds)
[10:35:47] *** Quits: eblip (~eb0t@90.196.142.2) (Ping timeout: 264 seconds)
[10:37:23] *** Joins: eblip (~eb0t@90.194.37.155)
[10:38:36] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 268 seconds)
[10:38:52] *** Joins: kenoba8 (~kenoba@user/kenoba)
[10:38:59] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[10:40:03] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[10:40:35] *** Quits: kenoba (~kenoba@user/kenoba) (Ping timeout: 264 seconds)
[10:40:35] *** kenoba8 is now known as kenoba
[10:41:11] *** Joins: ExeciN (~ExeciN@user/nicexe)
[10:42:17] *** Joins: carl-- (~carl-@185.103.188.130)
[10:44:27] *** Joins: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[10:44:36] *** Joins: rendar (~rendar@user/rendar)
[10:47:13] *** Quits: carl-- (~carl-@185.103.188.130) (Ping timeout: 268 seconds)
[10:47:50] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 268 seconds)
[10:48:40] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:49:49] *** Joins: mrwick (~mrwick@user/mrwick)
[10:50:18] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[10:58:11] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[11:00:43] *** Quits: anddam (~anddam@user/anddam) (Quit: WeeChat 3.3)
[11:02:21] *** Quits: delvian (~delvian@41.13.220.35) (Quit: Leaving)
[11:05:06] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 260 seconds)
[11:05:14] *** Quits: seednode4 (~seednode@user/seednode) (Quit: Nihil supernum.)
[11:05:29] *** Quits: resmo_ (~resmo@2a00:d420:9:8a00:ec66:1e29:9b4a:5827) (Remote host closed the connection)
[11:05:37] *** Joins: seednode4 (~seednode@user/seednode)
[11:05:47] *** Joins: resmo_ (~resmo@2a00:d420:9:8a00:9626:93cb:3018:1b2f)
[11:07:59] *** Joins: anonymeowo (~anonymeow@185.213.154.243)
[11:08:08] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[11:09:17] *** Joins: spithash_ (~spithash@user/spithash)
[11:09:38] *** Joins: metaace_ (~metaace@user/metaace)
[11:10:16] *** Quits: anonymeowo (~anonymeow@185.213.154.243) (Remote host closed the connection)
[11:10:54] *** Quits: metaace (~metaace@user/metaace) (Ping timeout: 276 seconds)
[11:11:18] *** Joins: MrC (Ben@mrbenc.net)
[11:11:33] *** Quits: spithash (~spithash@user/spithash) (Ping timeout: 276 seconds)
[11:12:24] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[11:13:06] *** Quits: apteryx (~maxim@dsl-153-210.b2b2c.ca) (Ping timeout: 260 seconds)
[11:14:53] *** Joins: Armanzor (~Armanzor@user/armanzor)
[11:15:27] *** Joins: mat001_ (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[11:16:07] *** Joins: jonthesnow (~xizhendu@36.112.204.240)
[11:16:55] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[11:17:13] *** Joins: Elzington (~Elzington@68.235.43.46)
[11:17:50] *** Joins: manti7 (~manti7@176.10.104.94)
[11:18:21] *** Joins: fecktd (~fecktd@149.167.147.186)
[11:18:42] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[11:19:02] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:19:18] *** Quits: Elzington__ (~Elzington@68.235.43.14) (Ping timeout: 268 seconds)
[11:21:54] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 260 seconds)
[11:22:59] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[11:23:15] <jmcantrell> If I need to create an new object from a method that matches the class that the method is being called on, would the best way be to: `self.__class__(...)` ?
[11:23:48] *** Joins: tobybl (~tobybl@213.31.135.91)
[11:24:06] <stealth_> that would create a new class same as the one you are using
[11:24:50] *** Joins: AlanMD_ (~AlanMD@86.121.179.183)
[11:25:32] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Read error: Connection reset by peer)
[11:25:32] *** Joins: iomari891 (~iomari891@105.112.138.38)
[11:26:09] <stealth_> its neat to use self.__class__ if for whatever reason you change the class name it will work.
[11:26:09] *** Joins: apteryx (~maxim@dsl-153-235.b2b2c.ca)
[11:27:06] *** Joins: palasso (~palasso@user/palasso)
[11:27:10] *** Quits: fecktd (~fecktd@149.167.147.186) (Quit: fecktd)
[11:29:27] *** Joins: chemsmith (~chemsmith@user/chemsmith)
[11:33:28] *** Quits: jonthesnow (~xizhendu@36.112.204.240) (Ping timeout: 268 seconds)
[11:35:19] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:35:38] *** Joins: Ilyu (~quassel@78.202.228.230)
[11:38:51] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:39:31] *** Joins: causaui1 (~causasui@192.241.228.169)
[11:39:59] <diverdude> hello... is it possible to somehow just replace all unkown characters in a string which is not Latin-1 with for example a whitespace?
[11:40:17] *** spithash_ is now known as spithash
[11:40:28] <KirkMcDonald> diverdude: Sure. A regular expression could do this.
[11:41:13] *** Quits: Tas-sos (~Tas-sos@ppp005054072206.access.hol.gr) (Quit: leaving)
[11:41:23] <diverdude> KirkMcDonald: hmm ok i see. How would such a regular expression look like?
[11:41:34] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[11:42:26] <KirkMcDonald> diverdude: e.g. re.sub(r"[^\x00-\xFF]", "?", s)
[11:42:58] *** Quits: mat001_ (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[11:43:02] *** Joins: thurs80601 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[11:43:03] <KirkMcDonald> You could also play some games with encoding and decoding the string.
[11:43:19] <diverdude> KirkMcDonald: aha ok, that makes sense.
[11:43:19] *** Joins: fikran (~fikran@user/fikran)
[11:43:35] *** Joins: vladoski (~vladoski@2001:b07:add:d406:9ee7:9bd:91c5:afe0)
[11:44:19] *** Joins: n0sou1 (nosoul@gateway/vpn/protonvpn/nosoul)
[11:44:35] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 268 seconds)
[11:45:03] <diverdude> KirkMcDonald: so if i have an arbitrary string - how would i first of all make sure that its for example latin-1? could i do something like mystring.encode("ISO-8859-1")
[11:45:12] *** Quits: thurs8060 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Ping timeout: 268 seconds)
[11:45:33] *** thurs80601 is now known as thurs8060
[11:45:39] *** Joins: Tas-sos (~Tas-sos@ppp005054072206.access.hol.gr)
[11:46:35] *** Joins: nomic (~nomic@185.192.69.57)
[11:46:56] <KirkMcDonald> Sure. That would raise an exception if any of the code points in the string could not be represented in that encoding.
[11:47:26] <stealth_> isn't there a trick like saving it to utf8 then as latin or something?
[11:47:51] <KirkMcDonald> stealth_: I'm not certain that's related to the issue at hand.
[11:47:54] *** Joins: nomic2 (~nomic@185.192.69.57)
[11:49:39] <KirkMcDonald> But Latin-1, in particular, has the useful property that the bytes 0x00 through 0xff correspond to the code points U+0000 through U+00FF.
[11:49:42] *** Joins: Valeria (~Valeria@user/valeria)
[11:49:42] *** Joins: vit (~vit@chello085216193138.chello.sk)
[11:50:21] <stealth_> ya like you could just do `print(b'a'[0])` and if its over > 0-255 replace it
[11:51:15] <stealth_> well `ord('a')` i suppose
[11:51:29] *** Quits: portalrat (~portalrat@user/portalrat) (Remote host closed the connection)
[11:51:30] <KirkMcDonald> Or just... the regex I suggested earlier.
[11:51:41] *** Joins: mickey88 (~user@user/mickey)
[11:51:49] *** Joins: portalrat (~portalrat@user/portalrat)
[11:52:18] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[11:52:19] *** mickey88 is now known as mickey8
[11:53:21] <amosbird> Hello! What's the purpose of doing this "    e=decimal.Decimal(str(math.e))"
[11:53:24] *** Joins: chele (~chele@user/chele)
[11:54:36] <phantomotap> obfuscation maybe?
[11:54:44] <KirkMcDonald> amosbird: It gives a decimal approximation of math.e that is truncated somewhat from how passing math.e directly would do it.
[11:55:38] *** Joins: pr100 (~pr100@cpc92728-cmbg20-2-0-cust160.5-4.cable.virginm.net)
[11:56:07] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[11:56:16] *** Joins: Auron (Auron956@user/auron)
[11:56:53] *** Joins: weedmic (~weedmic@188.120.139.53)
[11:58:36] *** Joins: parv (~quass@user/parv)
[11:59:40] <weedmic> Cheers!  I want to make a script that pulls data from vnstat.  I can do "vnstat --dumpdb >delme.file" to dump the data to a file, then take out what I want.  so that is my fall back.  What I should like is to be able to just pull out the data without making a file first.  I've done that before with inxi commands, but don't seem able with vnstat.  Anyone know if it is possible?
[12:00:32] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:00:34] <KirkMcDonald> weedmic: The subprocess module should make this reasonably straightforward.
[12:01:14] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Ping timeout: 268 seconds)
[12:01:48] *** Quits: Trieste_ (T@user/pilgrim) (Ping timeout: 260 seconds)
[12:04:29] <amosbird> KirkMcDonald: is it to somehow produce better precision?
[12:05:49] *** Quits: upsala (~zcb@185.213.155.232) (Quit: WeeChat 3.3)
[12:05:54] *** Joins: the-mask (~the-mask@user/the-mask)
[12:05:55] <KirkMcDonald> amosbird: I suppose the question is which value is closer to the actual mathematical value of e.
[12:06:22] *** Joins: Trieste (T@user/pilgrim)
[12:06:41] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[12:08:00] <Jong> anyone know how to stop text editor from screwing up quotes, changing the character to a quote that isn't a quote in code ?
[12:08:00] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 268 seconds)
[12:08:08] <Jong> Any font I can use that stops this issue ?
[12:08:18] <Jong> what's the issue called? Quote conflicts?
[12:08:25] <KirkMcDonald> Presumably this is a feature of your specific editor.
[12:08:39] <KirkMcDonald> Perhaps that feature can be disabled?
[12:08:50] <Jong> maybe.
[12:09:39] <Jong> hah they're called "smart quotes"
[12:09:44] <Jong> versus "dumb quotes"
[12:09:51] *** Quits: ffledgling (~textual@2620:10d:c090:400::5:f2cf) (Ping timeout: 268 seconds)
[12:10:09] <deniska> «smart»
[12:10:20] <KirkMcDonald> smrt
[12:10:33] <jinsun> are you writing in MS word?
[12:11:04] <jinsun> code editors should not do that
[12:11:12] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:11:45] <rindolf> Jong: https://github.com/shlomif/Freenode-programming-channel-FAQ/blob/master/FAQ_with_ToC__generated.md#which-integrated-development-environment-ide-or-text-editor-would-you-recommend
[12:12:06] <FastJack> sounds like an editor for text not for code
[12:12:24] *** Joins: ffledgling (~textual@2620:10d:c090:400::5:f2cf)
[12:12:43] *** Quits: nomic2 (~nomic@185.192.69.57) (Quit: Leaving)
[12:13:59] <pr100> what editor are you using?
[12:14:46] <amosbird> https://www.laac.dev/blog/float-vs-decimal-python/#:~:text=Decimals%20can%20suffer%20from%20their,performance%20benefits%20of%20a%20float.
[12:15:45] *** Joins: causaui1 (~causasui@192.241.228.169)
[12:16:46] <deniska> decimal.Decimal(str(somefloat)) won't give you anything too useful
[12:17:24] <deniska> But maybe they need to properly compute the loan with e percents per year :)
[12:17:39] <stealth_> suppose you can preserve that precision into future code!
[12:17:55] *** Joins: jonthesnow (~xizhendu@240e:305:7380:4300:d47:48bf:97c5:2de9)
[12:18:09] <weedmic> to me it avoids a step
[12:19:09] <parv> amosbird, Re: fraction, could have been better than "[o]nce again to avoid any precision issues, initialize the fraction with a string" 🙄
[12:19:52] <deniska> e=decimal.Decimal('2.72')
[12:20:20] *** Joins: PJBoy (~PJBoy@user/pjboy)
[12:20:21] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 268 seconds)
[12:21:06] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[12:21:25] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:21:42] <KirkMcDonald> I find myself extremely disappointed in Wolfram Alpha: https://www.wolframalpha.com/input/?i=e+-+2.718281828459045
[12:22:23] *** Joins: darksun (~darksun@user/darksun)
[12:24:51] <weedmic> ty - bbl
[12:24:53] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[12:24:55] *** Quits: weedmic (~weedmic@188.120.139.53) (Quit: Konversation terminated!)
[12:25:35] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[12:26:37] <amosbird> parv: well
[12:26:40] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[12:26:42] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-209.dhcp.inet.fi)
[12:27:26] *** Joins: e2m4n (~ezman@user/e2m4n)
[12:28:04] *** Joins: shad (~shad@user/shad)
[12:28:31] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.3)
[12:28:58] *** Joins: jsmock (~jsmock@2a0a-a541-ed04-0-6d8b-8be7-111b-cbc3.ipv6dyn.netcologne.de)
[12:29:08] <KirkMcDonald> I think it is, at a minimum, *incomplete* to say that decimals are "more precise" than floats.
[12:29:37] <KirkMcDonald> It is about the prime factors of the radix.
[12:30:10] <stealth_> you can manually set precision for Decimal, unlike float
[12:30:24] <KirkMcDonald> Yes, there is that.
[12:30:34] <deniska> decimals look more like normal school math human numbers than floats
[12:30:52] <KirkMcDonald> Right, because we tend to think in base 10.
[12:31:12] *** Quits: dba (uid502594@id-502594.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[12:31:36] <odinsbane> Yes, we should switch to base 16. Hah metric system "just move the decimal point" now.
[12:34:25] <KirkMcDonald> Also, if the thinking in the original problem was "make decimals using strings and not floats -> therefore convert the float to a string first!" then that is somewhat bonkers, but actually not *totally* bonkers.
[12:34:34] <parv> An example from elsewhere : https://raku.org/#samp-rats  -- I personally do not have much of experience with Raku yet
[12:36:04] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:36:39] <parv> Sorry for the link: #samp-rats does not make the "Rational Numbers" tap appear (in Firefox), need to click it.
[12:36:51] <parv> s/tap/tab/
[12:36:56] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[12:37:07] *** Quits: Valeria (~Valeria@user/valeria) (Quit: Client closed)
[12:37:26] *** Joins: enyc (~enyc@user/enyc)
[12:37:53] *** Quits: khile (cacambo@triton.blinkenshell.org) (Quit: Lost terminal)
[12:37:58] <KirkMcDonald> Rationals have their own issues, of course. Any given representation will have its benefits and its drawbacks.
[12:38:05] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[12:38:12] <parv> Sure
[12:38:54] * enyc meows
[12:40:15] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[12:40:58] *** Joins: Elzington_ (~Elzington@68.235.43.12)
[12:42:46] *** Joins: Elzington__ (~Elzington@68.235.43.30)
[12:43:06] *** Quits: the-mask (~the-mask@user/the-mask) (Ping timeout: 260 seconds)
[12:43:46] *** Quits: Elzington (~Elzington@68.235.43.46) (Ping timeout: 268 seconds)
[12:44:37] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[12:45:14] *** Joins: drogas (~drogas@jump2.jet.uk)
[12:45:54] *** Quits: Elzington_ (~Elzington@68.235.43.12) (Ping timeout: 260 seconds)
[12:46:17] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[12:46:24] *** Joins: TinoDidriksen (~TinoDidri@tinodidriksen.com)
[12:46:50] *** Parts: TinoDidriksen (~TinoDidri@tinodidriksen.com) ()
[12:47:12] *** Joins: ubert (~Thunderbi@p200300ecdf4fca90e6b318fffe838f33.dip0.t-ipconnect.de)
[12:48:28] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Ping timeout: 256 seconds)
[12:49:04] *** Quits: zepolen (~zepolen@ppp-94-66-223-35.home.otenet.gr) (Quit: Konversation terminated!)
[12:49:15] *** Joins: zepolen (~zepolen@2a02:587:863d:d8c0:cab8:dda7:a83c:cfec)
[12:50:06] *** Joins: causaui1 (~causasui@192.241.228.169)
[12:51:10] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 268 seconds)
[12:51:33] *** Quits: Linux77 (~Linux7_7@186.233.178.42) (Read error: Connection reset by peer)
[12:52:02] *** Quits: ubert (~Thunderbi@p200300ecdf4fca90e6b318fffe838f33.dip0.t-ipconnect.de) (Remote host closed the connection)
[12:52:16] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[12:52:20] *** Joins: ubert (~Thunderbi@p200300ecdf4fca90e6b318fffe838f33.dip0.t-ipconnect.de)
[12:52:25] *** Joins: mei (~mei@user/mei)
[12:53:39] *** Quits: webmariner (~james@cpc95914-rdng25-2-0-cust148.15-3.cable.virginm.net) (Ping timeout: 268 seconds)
[12:54:52] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 268 seconds)
[12:54:52] *** Quits: wender (~Wender@189.15.202.128) (Ping timeout: 268 seconds)
[12:54:53] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 268 seconds)
[12:55:03] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[12:55:30] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[12:58:30] *** Joins: Valeria (~Valeria@user/valeria)
[13:00:31] *** Joins: computeiro (~Wender@189.37.67.145)
[13:00:47] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[13:01:03] *** Joins: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net)
[13:01:46] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::2612)
[13:02:21] <Zambzuga> If i have a folder structure such as this how would i go about importing the modules/classes in the Modules folder from the client.py and server.py files?
[13:02:22] <Zambzuga> https://bpa.st/QHSA
[13:02:36] <Zambzuga> tried from modules.datahandler import DataHandler but its not working
[13:04:45] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Ping timeout: 268 seconds)
[13:05:05] <jinsun> Zambzuga: you will be able to do that if your current working directory is the top level folder (parent folder of modules)
[13:05:13] *** Joins: plastico (~plastico@neomutt/plastico)
[13:05:38] <jinsun> or if you make modules an installable package and install it with pip
[13:06:30] <Zambzuga> ahh so i can't be in the client folder and run python.py
[13:06:48] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[13:07:36] <jinsun> you can but that requires the second way (install modules with pip)
[13:08:07] *** Joins: chenqisu1 (~chenqisu1@183.217.200.99)
[13:08:18] <Zambzuga> guess its either that or place client.py and server.py togheter on folder up.
[13:08:19] *** Quits: chenqisu1 (~chenqisu1@183.217.200.99) (Client Quit)
[13:08:39] <jinsun> yeah that would work too
[13:08:44] *** Joins: chenqisu1 (~chenqisu1@183.217.200.99)
[13:08:52] *** Quits: alzgh (~alzgh@user/alzgh) (Ping timeout: 256 seconds)
[13:10:48] *** Quits: Valeria (~Valeria@user/valeria) (Quit: Client closed)
[13:10:54] *** Quits: dvx (~dvx@185.63.97.64) (Ping timeout: 268 seconds)
[13:11:03] *** Joins: TJ- (~root@user/tj-)
[13:13:35] *** Quits: wolfshappen (~waff@irc.furworks.de) (Ping timeout: 260 seconds)
[13:13:43] *** Joins: wolfshappen_ (~waff@irc.furworks.de)
[13:14:04] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[13:14:26] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1)
[13:14:53] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[13:15:31] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[13:17:04] *** Quits: ubert (~Thunderbi@p200300ecdf4fca90e6b318fffe838f33.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[13:17:29] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:18:15] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[13:18:55] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Ping timeout: 268 seconds)
[13:19:10] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[13:19:59] *** Joins: klf (~klf@135.12.180.212)
[13:20:11] *** Joins: thyriaen (~thyriaen@x4dbf0bd8.dyn.telefonica.de)
[13:20:14] <klf> [i-2, i-1 for i in range(4,37,4)]
[13:20:50] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:21:08] <stealth_> klf, needs to wrap `[(i-2, i-1) ...`
[13:21:29] <thyriaen> Howdy, I've got a matrix with 3 rows where the 3rd row is the label - how can i get a matrix with only the entries where the label is 0 ?
[13:21:30] <klf> what is the correct syntax to include the (i-2)th and (i-1)th on every iteration in the list comprehension?
[13:21:31] *** Joins: Linux77 (~Linux7_7@186.233.178.42)
[13:21:59] <thyriaen> what i ment were columns not rows T_T
[13:22:08] <klf> stealth_, yes, but I don't want a tuple
[13:22:17] <klf> tuples*
[13:22:29] <stealth_> klf, what do you want?
[13:22:47] <klf> just a list of the elements?  I guess i need to flatten afterwords?
[13:22:51] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[13:23:03] <stealth_> klf, sure flatten works
[13:23:03] <klf> or is there a more direct way?
[13:24:03] <stealth_> klf, `a = []; a.extend((i-2, i-1) for i in range(4,37,4))`
[13:24:41] *** Joins: causaui1 (~causasui@192.241.228.169)
[13:24:50] <stealth_> nm it doesn't :D
[13:25:03] <parv> "Comma makes a tuple not parentheses except when it does not. -- Python"
[13:27:12] <jinsun> comma is always required
[13:27:17] <jinsun> parens sometimes
[13:28:17] *** Quits: sandb0y (~pirate@user/sandb0y) (Ping timeout: 264 seconds)
[13:28:36] *** Quits: godlike (~godlike@user/godlike) (Ping timeout: 260 seconds)
[13:29:18] <jinsun> klf: `[x for i in range(4,37,4) for x in (i-2, i-1)]` ?
[13:29:22] *** Joins: sandb0y (~pirate@user/sandb0y)
[13:29:24] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 268 seconds)
[13:29:30] *** Joins: slav0nic (slav0nic@python.su)
[13:29:45] <Zambzuga> jinsun, thanks a lot! I just moved them up, made life easier.
[13:30:20] <klf> jinsunyes, I know about that one.  I just another one.
[13:30:35] <klf>  t = [ (1,2), (3,4), (5,6)]; list(itertools.chain(*t))
[13:31:02] <klf> can someone pleae remind me of the '*' operator in python?
[13:31:08] <klf> '*t'
[13:31:55] <jinsun> it unpacks the iterable, so the itertools.chain gets each item as a separate argument, instead of getting the iterable as one argument
[13:32:16] <stealth_> klf `*chain.from_iterable(t)`
[13:32:21] <jinsun> you could have done itertools.chain.from_iterable(t) also
[13:32:49] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[13:32:52] <jinsun> but in some cases there is no other way than unpacking
[13:35:18] <stealth_> klf, `*(1, 2) # 1 2`
[13:36:14] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[13:37:12] *** Joins: cosimone (~user@93-47-228-48.ip115.fastwebnet.it)
[13:37:36] <klf> I see.  Thanks you.
[13:39:56] *** Joins: Deneb (~johnch@86.111.189.80.dyn.plus.net)
[13:39:59] *** Joins: doko (~doko@2a02:8106:1a:7600:c44:5aab:5471:1a0f)
[13:42:26] *** Quits: moose (~moose@user/moose) (Quit: Leaving)
[13:43:49] <merijn> I have some cursed problem. This code is using Popen to spawn a child process that connects back to the parent using a socket. For some cursed reason the child errors out if (and only if) Popen is invoked with "close_fds=True" and even then *only* on macOS. I'll take any clue anyone might have...
[13:44:29] *** Parts: Mikaela- (~mikaela-@Feneas/Mikaela-) ()
[13:46:06] <merijn> I've reached the point where I'm thinking it might be the child closing the listening socket affecting things. On the other hand, that doesn't make sense because the child errors out before it even tries to connect
[13:46:12] <stealth_> merijn, code?
[13:46:53] <stealth_> merijn why do you have a child process?>
[13:47:37] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[13:47:58] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[13:48:42] <merijn> stealth_: I mean, this is a codebase of >600k SLOC, extract a minimal reproducing prototype I can link isn't exactly easy or I would be struggling to debug things so much :p
[13:49:23] <jinsun> what error do you get?
[13:50:01] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Quit: Leaving)
[13:50:09] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Read error: Connection reset by peer)
[13:50:24] *** Quits: orangeboxcutter (~orange@user/orangeboxcutter) (Remote host closed the connection)
[13:50:41] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[13:50:47] *** Joins: orangeboxcutter (~orange@user/orangeboxcutter)
[13:50:50] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[13:52:20] <merijn> jinsun: As soon as the parent calls accept() on the socket, the call times out and the child process dies with exit code 1. But there's no output from the child on stdout or stderr, I've tried attaching a debugger to the child but that seems to run as expected and just exit with no detectable error. But if I run the exact same process invocation from the shell it works and I get all the debug output I'd
[13:52:26] <merijn> expect
[13:52:32] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[13:52:40] *** Joins: fikran (~fikran@user/fikran)
[13:53:07] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[13:53:23] *** Joins: gggp_ (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[13:53:39] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Read error: Connection reset by peer)
[13:53:56] *** Joins: ubert (~Thunderbi@ip5b405828.dynamic.kabel-deutschland.de)
[13:57:03] <stealth_> merijn how does the child connect backs to parent socket?
[13:57:41] <merijn> stealth_: It gets the IP and port as commandline arguments and connects to those (or rather, it would if it ever got that far when closed_fds=True)
[13:57:42] <ztane> merijn: interesting
[13:57:53] *** Joins: jcvfen (~jcvfen@84.209.129.214)
[13:58:23] *** Quits: vladoski (~vladoski@2001:b07:add:d406:9ee7:9bd:91c5:afe0) (Ping timeout: 268 seconds)
[13:58:39] <stealth_> merijn, i see, rather then using tcp, could you not use unix socket? this way you open a link from both process
[13:59:00] <ztane> merijn: what I am thinking maybe something errors and it actually *does* close stdout/stderr..
[13:59:07] <merijn> oh, new hypothesis: It's mucking up during the testsuite. Maybe pytests is somehow having some files open that get closed and blow up pytest with the actual code being fine
[14:00:14] <ztane> merijn: could be Popen figures out the stdout file number incorrectly.
[14:00:22] <ztane> because pytest wraps it
[14:00:55] <ztane> what if you explicitly do sth like open stdin, stdout, stderr to tty
[14:01:03] <merijn> ztane: I spend half a day looking at the Popen implementation in cpython yesterday. I will never sleep well again at night with the atrociousness going on there
[14:01:14] *** Joins: vladoski (~vladoski@93-47-225-6.ip114.fastwebnet.it)
[14:01:24] *** resmo_ is now known as resmo
[14:01:34] <rindolf> merijn: heh
[14:02:00] *** Joins: vulpes_vulpes (~vulpes_vu@88-144-232-205.host.pobb.as13285.net)
[14:02:04] <rindolf> merijn: also - ltns
[14:02:10] <The-Compiler> merijn: maybe try pytest with --capture=no  to rule that out
[14:04:23] <merijn> The-Compiler: Sadly, no. I think I'll try to badger this test into running outside of pytest and see if it still fails then
[14:04:26] <ztane> well, also, mac is notorious for making every single-threaded program multithreaded so you can never fork safely, so everything popen does after fork is questionable
[14:04:44] <merijn> Hence my nightmares :)
[14:04:46] *** Quits: jonthesnow (~xizhendu@240e:305:7380:4300:d47:48bf:97c5:2de9) (Ping timeout: 260 seconds)
[14:05:21] *** Quits: thyriaen (~thyriaen@x4dbf0bd8.dyn.telefonica.de) (Quit: Leaving)
[14:05:22] <merijn> People should just stop pretending fork() is a reasonable system call used by sane people instead of it being a Lovecraftian horror that induces nightmare bugs >.>
[14:05:37] <LiaoTao> ^
[14:05:53] <ztane> :D
[14:06:24] *** Quits: gggp_ (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:07:55] <merijn> ok, this sounds like an "after lunch break" endeavour, though
[14:07:59] <nedbat> worst pytest hack, or best?  https://github.com/nedbat/coveragepy/blob/master/tests/conftest.py#L119-L126
[14:08:27] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[14:09:50] <enyc> win 106
[14:09:53] <enyc> oops
[14:11:00] <The-Compiler> enyc: Windows 95 and Windows 11, best combination! :D
[14:11:08] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[14:11:27] <enyc> The-Compiler: irssi window number ;p
[14:11:47] <jbe> not sure I'd bother with channels that far up if I had that many channels open myself
[14:12:59] *** Quits: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net) (Quit: Leaving)
[14:13:11] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Ping timeout: 268 seconds)
[14:16:09] *** Joins: dvx (~dvx@5.181.92.64)
[14:16:50] <vinay> python -c "import math\n\tprint(math.pi)"
[14:17:13] *** Quits: TJ- (~root@user/tj-) (Quit: WeeChat 3.3)
[14:17:27] <vinay> Unexpected character after line continuation
[14:17:31] <vinay> Error!!
[14:19:25] <leduyquang753> Looks like your shell doesn't understand \n.
[14:19:30] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[14:19:50] <leduyquang753> Even if it does, the tab will raise a syntax error.
[14:20:23] <icy> vinay: you can alternatively use ';'
[14:20:42] <icy> python -c "import math; print(math.pi)" should work
[14:21:13] *** Quits: pr100 (~pr100@cpc92728-cmbg20-2-0-cust160.5-4.cable.virginm.net) (Quit: Client closed)
[14:21:32] <rindolf> or $'...' in some shells
[14:22:03] <vinay> icy: semicolon worked
[14:22:46] <vinay> python -c "import math;print(math.pi)"
[14:22:52] <vinay> Worked
[14:22:59] <icy> great
[14:23:14] <nedbat> vinay: what will you really do with -c ?
[14:23:53] <icy> i used to use it to spawn interactive shells heh
[14:24:22] <icy> python -c 'import pty; pty.spawn("/bin/sh")'
[14:24:38] <vinay> nedbat: I was just reading the python documentation
[14:25:05] <nedbat> vinay: ok, cool
[14:26:45] *** Quits: chenqisu1 (~chenqisu1@183.217.200.99) (Ping timeout: 268 seconds)
[14:30:59] *** Joins: upsala (~zcb@185.213.155.232)
[14:31:12] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[14:31:13] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[14:32:59] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[14:33:08] *** Joins: damxsa (~damx@2001:16a2:ce33:4e00:152d:b032:78f3:27f0)
[14:33:19] *** Joins: ExeciN (~ExeciN@user/nicexe)
[14:34:43] *** Quits: dohtem (uid524096@user/dohtem) (Quit: Connection closed for inactivity)
[14:34:56] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[14:35:14] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[14:35:33] *** Joins: causaui1 (~causasui@192.241.228.169)
[14:37:51] *** Quits: dvx (~dvx@5.181.92.64) (Ping timeout: 268 seconds)
[14:40:14] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 260 seconds)
[14:40:34] *** Quits: Ergo^ (~ergo@91.238.59.144) (Read error: Connection reset by peer)
[14:42:41] *** Joins: mcpac82 (~textual@212.25.0.228)
[14:44:38] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[14:45:21] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:45:33] *** Quits: damxsa (~damx@2001:16a2:ce33:4e00:152d:b032:78f3:27f0) (Remote host closed the connection)
[14:45:46] *** Joins: damxsa (~damx@2001:16a2:ce33:4e00:3604:f881:a16d:7606)
[14:46:51] *** Quits: nomic (~nomic@185.192.69.57) (Quit: Leaving)
[14:48:41] *** Quits: damxsa (~damx@2001:16a2:ce33:4e00:3604:f881:a16d:7606) (Client Quit)
[14:48:49] *** Joins: damxsa (~damx@2001:16a2:ce33:4e00:3604:f881:a16d:7606)
[14:49:11] *** Joins: Klinda (~superleag@user/klinda)
[14:50:21] *** Parts: jsmock (~jsmock@2a0a-a541-ed04-0-6d8b-8be7-111b-cbc3.ipv6dyn.netcologne.de) ()
[14:50:34] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[14:50:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:52:26] *** Joins: pr100 (~pr100@cpc92728-cmbg20-2-0-cust160.5-4.cable.virginm.net)
[14:54:09] *** Joins: xensie (~xensie@88-115-236-81.elisa-laajakaista.fi)
[14:55:08] *** Joins: awmv_username_ta (~awmv@2a02:21b0:644f:c181:6861:c439:1f1e:69b9)
[14:56:21] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[14:56:41] *** Joins: ExeciN (~ExeciN@user/nicexe)
[14:56:48] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[14:56:59] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:6941:80d8:479:9d51) (Ping timeout: 268 seconds)
[14:59:34] <Jong> Is it possible to run a handful of conda install commands in a row?
[14:59:50] <Jong> all use -y so there aren't prompts
[15:00:44] <jinsun> you can give multiple packages to conda install
[15:00:58] <jinsun> conda install -y package1 package2 packages3 ...
[15:01:07] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:4503:1cc0:d766:37d8)
[15:01:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[15:01:40] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Read error: Connection reset by peer)
[15:02:00] *** Joins: gggp_ (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[15:03:09] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[15:03:10] *** Quits: gggp_ (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Remote host closed the connection)
[15:03:45] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[15:04:23] *** Quits: awmv_username_ta (~awmv@2a02:21b0:644f:c181:6861:c439:1f1e:69b9) (Ping timeout: 268 seconds)
[15:07:14] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:08:14] *** Quits: damxsa (~damx@2001:16a2:ce33:4e00:3604:f881:a16d:7606) (Quit: Leaving)
[15:08:56] *** Quits: treefrob (~treefrob@p2e5421a1.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[15:09:00] *** Joins: Ergo^ (~ergo@91.238.59.144)
[15:10:25] *** Joins: damxsa (~damx@2001:16a2:ce33:4e00:3604:f881:a16d:7606)
[15:12:26] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[15:12:39] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:13:03] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:13:05] *** Joins: treefrob (~treefrob@p2e5421a1.dip0.t-ipconnect.de)
[15:14:22] *** Quits: AnimalFarmPig (~quassel@catv-176-63-2-129.catv.broadband.hu) (Ping timeout: 260 seconds)
[15:14:43] *** Joins: weedmic (~weedmic@188.120.139.53)
[15:16:25] *** Joins: causaui1 (~causasui@192.241.228.169)
[15:17:30] *** Quits: damxsa (~damx@2001:16a2:ce33:4e00:3604:f881:a16d:7606) (Quit: Leaving)
[15:17:52] <Jong> oh thanks jinsun !
[15:18:37] *** Joins: zitter (~danilodim@93-57-35-194.ip162.fastwebnet.it)
[15:18:53] <drogas> what's the different `python -` arguments? `-m` -`i` etc.
[15:19:30] <lericson> python -h
[15:19:32] <lericson> find out
[15:19:32] *** Joins: damxsa (~damx@2001:16a2:ce33:4e00:3604:f881:a16d:7606)
[15:20:24] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[15:20:44] *** Quits: upsala (~zcb@185.213.155.232) (Read error: Connection reset by peer)
[15:21:09] *** Joins: kek_ (~kek_@net-2001-067c-10ec-574f-8000-0000-0000-0031.v6.ethz.ch)
[15:21:10] <kek_> hi
[15:21:22] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 260 seconds)
[15:21:54] <Jong> python foo/bar/baz.py == python -m foo.bar.baz
[15:21:58] *** Quits: damxsa (~damx@2001:16a2:ce33:4e00:3604:f881:a16d:7606) (Client Quit)
[15:22:07] *** Quits: weedmic (~weedmic@188.120.139.53) (Quit: Konversation terminated!)
[15:22:08] *** Joins: damxsa (~damx@2001:16a2:ce33:4e00:3604:f881:a16d:7606)
[15:22:46] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[15:23:07] *** very_sneaky_ is now known as very_sneaky
[15:23:36] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:24:12] *** Joins: upsala (~zcb@185.213.155.160)
[15:24:40] <kek_> so I'm using a library called pycbc and locally it works fine (using newest python and 3.7.12). On mycluster I activated 3.7.1 and if I install the lib and try to import something from it I get a seg fault. I'm kinda lost how to debug it. My instict tell me this isn't about a bug in the library itself. can't test with other python version on the cluster. any ideas what could be wrong?
[15:24:59] *** Quits: damxsa (~damx@2001:16a2:ce33:4e00:3604:f881:a16d:7606) (Client Quit)
[15:25:15] *** Joins: damxsa (~damx@2001:16a2:ce33:4e00:3604:f881:a16d:7606)
[15:25:42] <jinsun> Jong: not usually, if you construct your folders and files in a specific way then it is possible
[15:26:27] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[15:28:08] <stealth_> kek_, https://docs.python.org/3/library/faulthandler.html
[15:28:28] <Yhg1s> kek_: test with the same Python version locally.
[15:28:58] <Yhg1s> but really, 3.7.1 is not a release anyone should use at this point. There's a reason there've been 11 more bugfix releasese.
[15:29:03] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[15:29:22] <kek_> Yhg1s, I can't influence. I'm stuck with 3.7.1
[15:29:26] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:30:45] *** Joins: haasn (~nand@haasn.dev)
[15:31:00] <stealth_> kek_, upgrading miner python shouldn't break anything!
[15:31:17] <rindolf> stealth_: s/miner/minor/
[15:31:17] <kek_> stealth_, as I said. It is a cluster => I ahve no control over it.
[15:31:19] <Yhg1s> kek_: I recommend pushing back to whoever can influence then.
[15:31:46] <stealth_> rindolf, :)
[15:32:00] <haasn> I'm trying to run an existing python script that uses 'typing' using python 3.8.12. I get a bunch of errors like "type object is not subscriptable" on any type of type annotation like tuple[str, bytes] or dict[str, Any]. I can get it to work by removing the type annotations but the process is laborious. What am I doing wrong? Do I need a more recent version of python?
[15:32:02] <Yhg1s> kek_: but really, to debug the issue you'll have to recreate the environment. You could also try reading patch notes for 3.7.2-3.7.12 to see if anything stands out as a possible cause.
[15:32:26] <haasn> For reference, the existing python script is the python-nbxmpp library
[15:32:48] <Yhg1s> haasn: yes, you need 3.9, or you need to use 3.8 typing syntax, or you need 'from __future__ import annotations' (which makes annotations not be evaluated but stored as strings, which has other effects you may not like).
[15:33:02] <haasn> I see, I'll try switching to 3.9 then, thanks
[15:33:59] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 268 seconds)
[15:34:22] *** Quits: damxsa (~damx@2001:16a2:ce33:4e00:3604:f881:a16d:7606) (Ping timeout: 260 seconds)
[15:34:24] *** Joins: legola (~legola@46.235.101.181)
[15:34:50] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[15:35:12] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:35:56] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:54] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:03] *** Quits: shad (~shad@user/shad) (Ping timeout: 268 seconds)
[15:37:59] *** Joins: theprophet (~theprophe@85.114.228.184)
[15:38:43] <kek_> I think I solved it, might be a dependency version issue. thanks for the help
[15:43:08] <haasn> Great, now I get "TypeError: Gtk.Builder.add_from_string() takes exactly 3 arguments (2 given)" :(
[15:43:18] <haasn> looking at the docs online it seems add_from_string takes 2 arguments, not 3 as the error indicates
[15:43:39] <haasn> Oh well, I give up, I'll wait for package maintainers to figure this out
[15:44:11] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[15:45:06] *** Quits: Ilyu (~quassel@78.202.228.230) (Ping timeout: 260 seconds)
[15:46:27] *** Joins: luva (~luva@159.48.53.152)
[15:47:09] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[15:47:23] <jinsun> haasn: sounds like a class vs instance problem, instance.method will take 2 arguments because the instance itself is implicitly passed, Class.method will take 3 arguments
[15:50:47] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[15:50:50] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:51:37] *** Joins: ammarsalmi (~Username@154.121.15.41)
[15:52:09] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[15:55:18] *** Quits: parv (~quass@user/parv) (Quit: parv)
[15:55:49] *** Quits: kek_ (~kek_@net-2001-067c-10ec-574f-8000-0000-0000-0031.v6.ethz.ch) (Quit: Leaving)
[15:57:10] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[15:57:48] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[15:58:27] *** Quits: dalan62367 (~dalan@203.214.91.172) (Quit: dalan62367)
[15:58:57] *** Joins: dalan62367 (~dalan@203.214.91.172)
[15:59:47] *** Quits: dgdg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222) (Ping timeout: 264 seconds)
[16:00:02] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[16:01:28] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[16:02:01] *** Joins: fikran (~fikran@user/fikran)
[16:02:20] *** Quits: mei (~mei@user/mei) (Ping timeout: 268 seconds)
[16:02:28] *** Quits: nrg (~NRG@user/nrg) (Quit: ZNC - https://znc.in)
[16:03:49] *** Joins: wovixo (~wovixo@128.104.205.49)
[16:05:40] *** Quits: klf (~klf@135.12.180.212) (Quit: Leaving)
[16:06:22] *** Joins: dg_dg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222)
[16:07:04] *** Joins: mei (~mei@user/mei)
[16:07:09] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[16:07:47] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[16:08:43] <merijn> Ok, so the hypothesis from this morning seems correct. Test doesn't fail outside pytest, so pytest is messing with file descriptors in a way that gets borked by Popen
[16:10:03] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[16:11:37] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[16:13:36] *** Joins: weedmic (~weedmic@188.120.139.53)
[16:14:45] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:14:58] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Ping timeout: 260 seconds)
[16:15:12] <weedmic> i am writing a small script and am running (or trying) it for the first time.  I did "pip install schedule" and i have a line in my script "import schedule", yet the first error states "ImportError: No module named 'schedule'" - any hints would be helpful
[16:15:16] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[16:15:47] *** Joins: nrg (~NRG@user/nrg)
[16:15:53] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[16:16:11] <merijn> So, next challenge: Get pytest to stop messing with file descriptors in stupid ways, I guess. I'm open to suggestions...
[16:16:15] *** Joins: spithash (~spithash@user/spithash)
[16:18:06] <weedmic> nvm - it should have been pip3 not pip
[16:18:59] *** Quits: mei (~mei@user/mei) (Ping timeout: 268 seconds)
[16:23:11] *** Quits: Ninja3047 (~Ninja3047@3047.ninja) (Quit: bye)
[16:24:00] *** Joins: Ninja3047 (~Ninja3047@3047.ninja)
[16:24:09] *** Joins: shad (~shad@user/shad)
[16:25:05] *** Quits: Elzington__ (~Elzington@68.235.43.30) (Quit: Leaving)
[16:25:50] *** Joins: Elzington (~Elzington@68.235.43.30)
[16:26:54] *** Joins: lionslicer (~lionslice@2804:d41:a7a6:1300:f92a:50d8:cf32:7519)
[16:28:46] *** Joins: zrsm (~mrrobot@173.171.254.123)
[16:28:55] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 265 seconds)
[16:29:10] *** Joins: Julian (~tos9@python/site-packages/Julian)
[16:29:12] *** Quits: ammarsalmi (~Username@154.121.15.41) (Read error: Connection reset by peer)
[16:30:36] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[16:30:54] *** Joins: avikalp (~avikalp@49.36.103.196)
[16:31:13] *** Joins: knipster50 (~knipster@user/knipster)
[16:31:52] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Remote host closed the connection)
[16:31:56] *** Joins: slee (~slee@user/slee)
[16:32:26] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[16:32:50] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[16:33:36] <slee> hi, ran into an issue, using python to insert into sql(update a field), but i've noticed a string like  t/h-/s /is- -t/e/st is causing an issue...how do i have python tell it to enter the string as is, ignore excapes, etc?
[16:33:56] *** Quits: nrg (~NRG@user/nrg) (Quit: ZNC - https://znc.in)
[16:34:30] *** Quits: elkclone (~elkclone@user/elkclone) (Quit: Leaving)
[16:35:05] *** Joins: mat001_ (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[16:35:25] <jinsun> slee: put a r before the string, like r""t/h-/s /is- -t/e/st
[16:35:51] *** Joins: ghormoon (~ghormoon@ghorland.net)
[16:36:19] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[16:36:20] *** Joins: causaui1 (~causasui@192.241.228.169)
[16:37:03] *** Joins: nrg (~NRG@user/nrg)
[16:37:22] *** Quits: n0sou1 (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 260 seconds)
[16:37:56] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[16:38:11] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 264 seconds)
[16:39:12] *** Joins: bloody (~bloody@user/bloody)
[16:40:08] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[16:40:12] <slee> jinsun, so: "UPDATE stalker SET name = r"%s" WHERE name = r"%s""     ?
[16:40:15] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[16:41:09] <jinsun> hmm no
[16:41:33] <jinsun> don't write sql using python string formatting
[16:41:39] <slee> format before the insert?
[16:42:00] <dminuoso> Your favourite database library likely has some safe interpolation technique
[16:42:02] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 260 seconds)
[16:42:04] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[16:42:24] *** Quits: nrg (~NRG@user/nrg) (Quit: ZNC - https://znc.in)
[16:42:37] <jinsun> no, use something like sqlalchemy to construct the sql and send to your db
[16:42:39] <merijn> ok, so outside of pytest my code has 4 open file descriptors (stdin, stdout, stderr, and the socket I opened). Under pytest there are *20* open file descriptors, including 3 network sockets I know nothing about. So clearly pytest is doing a whole bunch of file descriptor shenanigans that I need it to stop with
[16:43:48] <bjs> slee: you don't need to use formatting to make sql queries
[16:43:57] <bjs> slee: most sql libraries let you "prepare" queries and fill in gaps
[16:44:46] <jinsun> slee: or your db library will have some syntax like "UPDATE stalker SET name = ?  WHERE name = ?"
[16:45:24] <slee>                     sql = "UPDATE stalker SET name = %s WHERE name = %s"
[16:45:25] <slee>                     val = (addname , str(row[2]))
[16:45:44] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Remote host closed the connection)
[16:45:47] <slee> so format in val =?
[16:45:52] <bjs> slee: no, don't format
[16:46:21] *** Quits: adder (~adder@user/adder) (Ping timeout: 245 seconds)
[16:46:22] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[16:46:24] <ghormoon> hi, assuming python has libraries for everything, is there some typo generating library? for start, i'd need something that would based on qwerty keyoard would do a key to left/right from given letter. is there anything or should i do the map myself?
[16:47:14] *** Quits: luva (~luva@159.48.53.152) (Ping timeout: 260 seconds)
[16:48:34] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:48:46] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[16:48:52] *** Joins: Ilyu (~quassel@78.202.228.230)
[16:49:26] *** Joins: nrg (~NRG@user/nrg)
[16:49:38] *** Joins: ammarsalmi (~ammarsalm@154.121.67.28)
[16:49:50] *** Joins: tg (~tg@rockylinux/infra/tg)
[16:50:11] *** Quits: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Quit: Leaving)
[16:51:29] *** Quits: elmcrest (~elmcrest@static.48.211.217.95.clients.your-server.de) (Quit: The Lounge - https://thelounge.chat)
[16:52:06] *** Joins: elmcrest (~elmcrest@static.48.211.217.95.clients.your-server.de)
[16:52:43] <Masklin_Gurder> Say I want to loop through some strings. Do I put them into a list, or can I use a literal generator, or some such?
[16:52:55] <Masklin_Gurder> e.g. for foo in (str1,str2,str3): ...
[16:53:02] <jinsun> slee: just give the sql and val both to the db library, instead of inserting the values in sql yourself
[16:53:28] <mdk> Masklin_Gurder: yes, it works, as you just showed, in which cas it's just a tuple of strings.
[16:53:42] <mdk> (It would even work without parenthesis, but keep them for readability)
[16:53:55] *** Joins: ThanatosJ (~Thanatos@105.112.180.61)
[16:53:56] <Masklin_Gurder> mdk: Wuld it be a tuple even without parantheses?
[16:54:03] <Masklin_Gurder> *e
[16:54:38] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[16:54:57] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[16:55:07] <mdk> Masklin_Gurder: yes, in Python tuple are defined by the presence of coma, not parenthesis.
[16:55:14] <Masklin_Gurder> Bummer
[16:55:20] <mdk> Masklin_Gurder: try in a repl: >>> 1, 2
[16:55:23] <Masklin_Gurder> So there's no way to avoid creating an iterable object?
[16:55:46] <mdk> Masklin_Gurder: why would you need to iterate over some things with no iterable objects in the first place?
[16:56:02] <grym> Masklin_Gurder: you could make a generator and iterate over that, if you can programmatically generate these strings
[16:56:07] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[16:56:08] <grym> but if you have them laying about
[16:56:11] <bjs> Masklin_Gurder: no, for loops iterate over objects, and those objects must be iterable
[16:56:14] <mdk> There's plenty of ways: put the body of your loop in a function, and call the function for each strings :)
[16:56:16] <grym> make a collection out of them
[16:56:27] <Masklin_Gurder> Hrmmmmmmmm
[16:57:02] <mdk> Masklin_Gurder: (btw, creating a tuple is very fast, don't worry)
[16:57:06] <merijn> Alternatively to my problem of stopping pytest from messing with file descriptors, does anyone know how to stop it from using multiple threads?
[16:57:26] *** Quits: Thanatos (~Thanatos@105.112.182.162) (Ping timeout: 260 seconds)
[16:57:30] *** Quits: Ilyu (~quassel@78.202.228.230) (Ping timeout: 260 seconds)
[16:57:44] <Masklin_Gurder> Using literals is even faster, I think.
[16:57:47] <Masklin_Gurder> I'll just test, w8
[16:58:17] *** Quits: Harlin (~DonQixote@75-163-172-250.clsp.qwest.net) (Remote host closed the connection)
[16:59:57] <Masklin_Gurder> [] and () are equally fast
[16:59:59] <Masklin_Gurder> Hrmmmmmm
[17:00:41] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[17:01:01] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Remote host closed the connection)
[17:01:08] <mdk> Is that your issue? Looks like a X-Y problem, what's you're trying to achieve in the first place?
[17:01:16] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[17:01:23] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[17:01:40] *** Joins: mickey8 (~user@user/mickey)
[17:02:34] *** Joins: Naan (~Naan@user/naan)
[17:03:29] <Masklin_Gurder> I'm just trying to minimize tasks, I thought maybe there was a way to iterate through string literals without referring to them inside an iterable.
[17:04:17] <Masklin_Gurder> (By means of a generator, I suppose)
[17:04:52] *** Quits: The_Jag (~The_Jag@host-79-52-47-230.retail.telecomitalia.it) (Read error: Connection reset by peer)
[17:05:29] *** LabMonkey is now known as Mechanismus
[17:05:37] <mdk> Masklin_Gurder: Are you using profiling tools (like scalene) to first ensure this is the spot needing optimization?
[17:05:59] *** Joins: The_Jag (~The_Jag@host-79-52-47-230.retail.telecomitalia.it)
[17:06:22] *** Joins: ba (~ba@cpc1-hari17-2-0-cust27.20-2.cable.virginm.net)
[17:06:44] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[17:08:06] *** Joins: reset (~reset@user/reset)
[17:08:42] *** Joins: Warped (~Warped@user/warped)
[17:08:56] <Masklin_Gurder> No I always keep in mind to not do more than necessary. I get off on it, I know it's not always productive in Python.
[17:09:03] <Masklin_Gurder> :)
[17:09:07] *** Joins: node1 (~node1@user/node1)
[17:09:09] *** Joins: adder (~adder@user/adder)
[17:10:58] <jinsun> making an tuple or list is necessary really, if you want to loop over them
[17:11:30] <merijn> Are there any other popular test runners besides pytest?
[17:11:51] <grym> merijn: unittest
[17:11:51] <bjs> merijn: not anymore,  pytest kind of won
[17:11:56] <grym> ^
[17:12:10] <merijn> Well, RIP me, then
[17:12:16] <bjs> merijn: why RIP you?
[17:12:39] <mdk> merijn: https://framagit.org/JulienPalard/pycon-emergence/-/raw/master/tests.png
[17:12:58] *** Joins: george-smiley (~george_sm@user/george-smiley/x-3139219)
[17:13:00] <merijn> bjs: The pytest runner insists on spawning multiple threads and opening a whole bunch of file descriptors, which entirely breaks down with Popen using closed_fds=True
[17:13:38] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[17:13:54] <mdk> merijn: open an issue https://github.com/pytest-dev/pytest/issues with a nice short reproducer?
[17:14:14] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[17:14:40] *** Joins: mickey8 (~user@user/mickey)
[17:15:12] <merijn> bjs: Since Popen is using fork and then running a bunch of code after forking and both fork in a multi-threaded process and running code after fork are alread nightmares independently. The end result is that this code works fine when I manually run the test, but just always fails under pytest
[17:15:16] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[17:15:20] *** Joins: dntreou (~yakiza@global-5-48.nat-1.net.cam.ac.uk)
[17:15:26] *** Joins: nickel8448 (~rahulwadh@147.80.76.34.bc.googleusercontent.com)
[17:15:42] *** Joins: nomic (~nomic@185.192.69.57)
[17:15:56] <merijn> At this point I'm kinda tempted to just detect running under pytest and disabling close_fds when that happens
[17:16:59] *** Joins: mei (~mei@user/mei)
[17:18:06] *** Joins: Quack (~Quack@185.21.216.169)
[17:18:59] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 264 seconds)
[17:19:07] <merijn> mdk: tbh, I think my time would be better spent eliminating Popen from this code then trying to get a minimal reproduction.
[17:19:43] *** Quits: slee (~slee@user/slee) (Quit: Leaving)
[17:19:44] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[17:20:56] <merijn> But there doesn't seem to an API for posix_spawn that also supports windows
[17:21:17] *** Quits: ammarsalmi (~ammarsalm@154.121.67.28) (Ping timeout: 268 seconds)
[17:21:46] *** Quits: dntreou (~yakiza@global-5-48.nat-1.net.cam.ac.uk) (Ping timeout: 260 seconds)
[17:22:05] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[17:22:42] *** Joins: dntreou (~yakiza@global-5-46.nat-1.net.cam.ac.uk)
[17:22:51] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[17:23:00] *** Joins: luva (~luva@45.141.152.44)
[17:23:09] *** Joins: mei (~mei@user/mei)
[17:26:31] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[17:26:50] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[17:28:02] *** Quits: ede (~ede@user/ede) (Remote host closed the connection)
[17:30:00] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:30:27] *** Joins: ede (~ede@user/ede)
[17:31:10] *** Joins: grooverman (~grooverma@177.102.119.40)
[17:32:00] *** Joins: neilthereildeil (~neilthere@204.115.183.4)
[17:32:06] <neilthereildeil> hey guys
[17:32:07] <stwange> This code is giving me intermittent "asyncio.exceptions.InvalidStateError: invalid state" exceptions until all of my semaphores run out and it just hangs. Can anyone tell me what I'm doing wrong and why the catch together with return_exceptions=True isn't masking this instead of causing it to error? https://pastebin.com/ujQdtY9v
[17:32:25] <neilthereildeil> how can i start a python program in a debugger in the terminal?
[17:32:30] <neilthereildeil> i dont have GUI
[17:32:37] <neilthereildeil> and i need to set breakpoints
[17:32:58] <grym> neilthereildeil: python -m pdb thething.py
[17:33:06] <grym> https://docs.python.org/3/library/pdb.html
[17:33:22] <grym> neilthereildeil: if you like more shiny, check out https://documen.tician.de/pudb/
[17:33:26] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[17:33:47] <neilthereildeil> this isnt a .py file. its a module that i run like this: "python -m my.python.module"
[17:33:51] *** Joins: mickey8 (~user@user/mickey)
[17:34:03] <neilthereildeil> how would i debug this?
[17:34:08] *** Quits: whatsupboy (~whatsupbo@user/scobydoo) (Quit: brb)
[17:34:30] *** Joins: whatsupboy (~whatsupbo@user/scobydoo)
[17:34:48] <grym> i think python -m pdb -m my.python.module ?
[17:35:07] <grym> i haven't tried, but apparently that bug got fixed in 2018 : https://github.com/python/cpython/pull/4752
[17:36:04] *** Quits: mei (~mei@user/mei) (Ping timeout: 268 seconds)
[17:36:14] *** Quits: dntreou (~yakiza@global-5-46.nat-1.net.cam.ac.uk) (Ping timeout: 260 seconds)
[17:37:45] *** Quits: AsenMx (~AsenMx@78.90.248.234) (Remote host closed the connection)
[17:38:05] *** Joins: AsenMx (~AsenMx@78.90.248.234)
[17:38:17] *** Joins: dntreou (~yakiza@inet-2a02-6900-8808-e010--297.oracle-ocna.com)
[17:39:08] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[17:39:44] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[17:40:05] *** Joins: pjb (~pjb@user/pjb)
[17:40:43] <pjb> Hi! where do I find the tap2junit command?  I used pip install tap2junit, but tap2junit doesn't seem to be available: https://termbin.com/yqfhl
[17:40:46] *** Joins: xiaguan (~parsley@2604:180:f1::173)
[17:41:25] *** Quits: george-smiley (~george_sm@user/george-smiley/x-3139219) (Quit: Leaving)
[17:42:02] <grym> pjb: it's still there https://pypi.org/project/tap2junit/#files
[17:42:05] <weedmic> I am trying to make a simple script that (at this point) merely executes a bash command and prints that to the screen.  It does not seem to reach "def runcommand():" - any help would be great.  i've not touched python 2 years, and probably forgot something really basic.  https://pastebin.com/3Gsy038z
[17:42:07] *** Joins: alius (~adrien@91-164-243-54.subs.proxad.net)
[17:42:08] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[17:42:24] <grym> pjb: you have it installed, even
[17:42:42] <grym> (its entry point is just not on your path)
[17:42:57] <pjb> Where is it? So I may add it to the path?
[17:43:08] <stwange> weedmic, you're not calling runcommand()
[17:43:29] <pjb> oh, /home/pjb/.local/bin/tap2junit  ; ok, thanks.
[17:43:32] <grym> pjb: probably ~/.local/bin
[17:43:44] <grym> that's the default for pip --user, which is the default for a naked pip these days
[17:43:59] *** Joins: stealth[] (~stealth]@2001:9e8:36ec:3200:1d50:6b67:9559:9543)
[17:44:03] <pjb> Yes. I need to add this to my PATH. Thanks.
[17:44:11] <exarkun> you probably want to use a virtualenv instead, though
[17:44:38] <stwange> weedmic, just add a line:   runcommand() on line 12
[17:45:04] *** Joins: p-i-_ (~Ohmu@223.206.144.16)
[17:45:15] <pjb> exarkun: well, I don't know. it's used in makefiles. Will virtualenv percolate to makefile rules?
[17:45:36] <weedmic> wilco - ty
[17:45:39] *** Joins: damxsa (~damx@2001:16a2:ce33:4e00:152d:b032:78f3:27f0)
[17:45:43] *** Joins: causaui1 (~causasui@192.241.228.169)
[17:46:02] <exarkun> pjb: yes
[17:46:08] <pjb> Let me try.
[17:46:17] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[17:46:18] <exarkun> pjb: as much as a PATH change will, anyway.
[17:46:39] <grym> pjb: if the thing in .local/bin calls out to a venv, that's no problem
[17:46:58] <grym> the tool that automates this juggling for you is https://github.com/pypa/pipx
[17:47:01] *** Quits: damxsa (~damx@2001:16a2:ce33:4e00:152d:b032:78f3:27f0) (Client Quit)
[17:47:10] *** Joins: damxsa (~damx@2001:16a2:ce33:4e00:152d:b032:78f3:27f0)
[17:47:13] <grym> which makes venvs and symlinks entry points to .local/bin
[17:47:20] <grym> (or somewhere else if you ask)
[17:47:25] <exarkun> you can also just activate the virtualenv, though
[17:47:28] *** Quits: damxsa (~damx@2001:16a2:ce33:4e00:152d:b032:78f3:27f0) (Remote host closed the connection)
[17:47:43] *** Joins: damxsa (~damx@2001:16a2:ce33:4e00:152d:b032:78f3:27f0)
[17:48:14] <pjb> ok.
[17:48:24] <grym> exarkun: programmatic activation sucks though
[17:48:24] *** Quits: damxsa (~damx@2001:16a2:ce33:4e00:152d:b032:78f3:27f0) (Client Quit)
[17:48:40] *** Joins: damxsa (~damx@2001:16a2:ce33:4e00:152d:b032:78f3:27f0)
[17:48:41] *** Quits: damxsa (~damx@2001:16a2:ce33:4e00:152d:b032:78f3:27f0) (Remote host closed the connection)
[17:49:02] *** Quits: p-i- (~Ohmu@223.206.144.16) (Ping timeout: 268 seconds)
[17:49:12] <exarkun> I guess?
[17:49:41] <exarkun> maybe implicit dependency on finding stuff in PATH also sucks
[17:49:56] <grym> exarkun: write me a cronjob that activates, for example
[17:49:59] <grym> (you don't want to do that)
[17:50:25] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[17:50:26] <exarkun> Yea but I don't want to write a cronjob at all
[17:50:27] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-6042-7156-16f0-8c3d.res6.spectrum.com)
[17:50:34] <exarkun> nor one that depends on my user env's PATH setting
[17:50:49] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:50:51] <exarkun> I didn't realize pjb was invoking make from a cronjob though
[17:51:00] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[17:51:23] <grym> i don't know that they are
[17:51:37] <grym> but i have written cronjobs that call into venvs and i do neither PATH stuff nor activation
[17:51:59] <grym> mine look like **** /the/full/dang/path/to/venv/bin/python -m thingie ...
[17:52:15] *** Joins: zepolen_ (~zepolen@ppp-94-66-223-35.home.otenet.gr)
[17:52:18] <exarkun> anyway, all I said is that you can manually activate virtualenvs if you want.  pipx is nice sometimes, it's just not required.
[17:52:35] *** Joins: humanBird (~humanBird@2603-8001-7003-5966-8863-abed-f4cb-e2b0.res6.spectrum.com)
[17:52:39] <exarkun> I hope pjb feels free to do whatever they want with that information, including completely ignore it and consider me a bozo.
[17:52:47] <exarkun> but it's certainly /true/
[17:53:03] <grym> sure.  i didn't suggest that pipx is required either
[17:53:29] <exarkun> quite so
[17:54:26] *** Quits: mat001_ (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[17:56:26] *** Quits: zepolen (~zepolen@2a02:587:863d:d8c0:cab8:dda7:a83c:cfec) (Ping timeout: 268 seconds)
[17:59:08] *** Joins: stdout (~stdout@216.163.21.11)
[17:59:09] *** Joins: akk (~akk@75.161.146.115)
[17:59:31] *** Quits: kaos02 (~kaos02@12.186.233.220.static.exetel.com.au) (Ping timeout: 268 seconds)
[17:59:39] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[18:02:10] *** Quits: legola (~legola@46.235.101.181) (Remote host closed the connection)
[18:05:12] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[18:07:01] *** Quits: weedmic (~weedmic@188.120.139.53) (Quit: Konversation terminated!)
[18:07:15] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.3)
[18:09:10] *** Joins: badsektor (~badsektor@user/badsektor)
[18:09:10] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Read error: Connection reset by peer)
[18:10:00] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[18:11:22] *** Joins: fikran (~fikran@user/fikran)
[18:11:24] *** Joins: jsmock (~jsmock@2a0a-a541-ed04-0-6d8b-8be7-111b-cbc3.ipv6dyn.netcologne.de)
[18:11:54] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[18:14:30] *** Joins: han-solo (~hanish@user/han-solo)
[18:14:39] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[18:15:19] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[18:15:46] *** Joins: kaos02 (~kaos02@12.186.233.220.static.exetel.com.au)
[18:15:59] *** Joins: y04nn (~y04nn@92.223.89.196)
[18:17:06] *** Parts: jsmock (~jsmock@2a0a-a541-ed04-0-6d8b-8be7-111b-cbc3.ipv6dyn.netcologne.de) ()
[18:18:39] *** Quits: mcpac82 (~textual@212.25.0.228) (Quit: mcpac82)
[18:19:16] *** Joins: n0sou1 (nosoul@gateway/vpn/protonvpn/nosoul)
[18:19:40] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[18:19:42] *** Quits: ede (~ede@user/ede) (Remote host closed the connection)
[18:19:58] *** Joins: mei (~mei@user/mei)
[18:20:30] *** Joins: Skyfire (~pyon@user/pyon)
[18:21:16] *** Joins: ede (~ede@user/ede)
[18:22:34] *** Joins: fdan (~fdan@103.215.168.1)
[18:22:56] *** Quits: kaos02 (~kaos02@12.186.233.220.static.exetel.com.au) (Ping timeout: 268 seconds)
[18:22:56] *** Joins: anddam (~anddam@user/anddam)
[18:23:17] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:25:14] *** Quits: luva (~luva@45.141.152.44) (Ping timeout: 260 seconds)
[18:25:38] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[18:26:20] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Quit: hyskaru)
[18:30:09] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-209.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:30:32] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[18:30:39] *** Joins: anonymeowo (~anonymeow@185.213.154.243)
[18:30:58] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[18:31:21] *** Quits: badsektor (~badsektor@user/badsektor) (Quit: Leaving)
[18:31:26] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-567363-170.dhcp.inet.fi)
[18:31:50] *** Quits: ThanatosJ (~Thanatos@105.112.180.61) (Read error: Connection reset by peer)
[18:32:43] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[18:33:06] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-567363-170.dhcp.inet.fi) (Client Quit)
[18:34:17] *** Joins: kaos02 (~kaos02@12.186.233.220.static.exetel.com.au)
[18:35:54] *** Joins: luva (~luva@37.120.197.46)
[18:36:09] *** Quits: Scarecr0w (scarecr0w@user/scarecr0w) (Quit: IRC Bouncer crashed ...)
[18:36:38] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[18:37:47] <fdan> p = defaultdict(int)
[18:37:58] <fdan> if i dont use a default dict, how can i use that as a normal dictionary
[18:37:58] <neilthereildeil> how can i use pdb to run this command? "python -m my.python.module"
[18:38:09] <grym> neilthereildeil: did you try what i suggested
[18:39:18] <grym> fdan: `p = dict(); if "foo" not in p.keys(): p['foo'] = 0 else: # do something to p['foo'], which is an integer`
[18:39:26] <neilthereildeil> grym: i tried python -m pdb -m my.python.module ?
[18:39:33] <neilthereildeil> Error: -m does not exist
[18:39:46] <grym> neilthereildeil: oh right you're on unsupported pythons aren't you
[18:39:54] <neilthereildeil> 2.7
[18:39:58] *** Joins: qlixed (~qlixed@181.44.129.13)
[18:40:19] <grym> neilthereildeil: right; these days i and many others generally understand "python" to mean "python 3.6 or higher"
[18:41:09] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[18:41:25] *** Joins: y1n (~y1n@178.115.37.117.wireless.dyn.drei.com)
[18:41:27] <grym> neilthereildeil: well, you can always `import pdb; pdb.set_trace()` and run normally
[18:41:36] <grym> then pdb will get hit and drop you in, i believe
[18:42:59] <grym> (and you'll probably get more topical help if you are explicit about saying python2)
[18:44:25] <aphysically> I should really set up a debugger in my development workflow
[18:44:51] * aphysically still just print()'s/logs things at relevant points
[18:45:13] <grym> aphysically: https://github.com/zestyping/q  >:)
[18:48:43] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Read error: Connection reset by peer)
[18:50:04] *** Quits: mei (~mei@user/mei) (Ping timeout: 268 seconds)
[18:53:51] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: SO LONG SUCKERS!)
[18:53:56] *** Joins: fuzzygeorge (~fuzzygeor@office.computeam.com)
[18:54:29] *** Quits: fuzzygeorge (~fuzzygeor@office.computeam.com) (Remote host closed the connection)
[18:54:47] *** Joins: fuzzygeorge (~fuzzygeor@office.computeam.com)
[18:54:51] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[18:55:00] *** Quits: Haxxa (~Haxxa@122.199.46.64) (Ping timeout: 268 seconds)
[18:55:28] *** Joins: dohtem (uid524096@user/dohtem)
[18:56:19] *** Joins: damxsa (~damx@2001:16a2:ce33:4e00:152d:b032:78f3:27f0)
[18:57:51] *** Joins: pretty_dumm_guy (~trottel@eduroam-134-96-204-83.uni-saarland.de)
[18:58:14] <fdan> grym https://dpaste.org/3Cwc
[18:58:19] <fdan> how can i do this without the default dict
[18:58:54] *** Joins: Scarecr0w (scarecr0w@user/scarecr0w)
[19:00:46] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[19:01:12] <grym> fdan: what i showed you should work, but what's wrong with defaultdict? this is exactly what it's for
[19:01:23] <jinsun_> fdan: why can't you use defaultdict?
[19:01:56] <fdan> jinsun_ this is the first time im using defaultdict. i tried an implementation by just using dict. that doesnt work
[19:02:26] <grym> there's also collections.Counter
[19:03:42] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[19:04:15] *** Quits: mallkrampus (~mallkramp@64.44.140.61) (Ping timeout: 268 seconds)
[19:04:18] <jinsun_> if you want to reimplement defaultdict then create a dict subclass with a `__missing__` method that calls the function passed to it in `__init__`
[19:04:56] <fdan> any other straight forwards ways
[19:05:08] <fdan> i want the same behaviour as a default dict for the above snippet i pasted
[19:05:10] <gloomy> fdan: not super pretty but you can also just do if key in dict: dict[key] += 1 else: dict[key] = 1
[19:06:34] <grym> ^ which is what i suggested
[19:06:36] <jinsun_> also `d[key] = d.setdefault(k, 0) + 1`
[19:07:01] *** Joins: Haxxa (~Haxxa@122.199.46.64)
[19:07:50] <gloomy> grym: sorry, didn't scroll back far enough
[19:08:10] *** vigumnov is now known as victori
[19:08:11] <grym> fdan: https://docs.python.org/3/library/collections.html#defaultdict-examples  see the second code snippet for an example for which "defaultdict is simpler and faster than an equivalent technique using dict.setdefault()"
[19:08:33] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[19:10:16] *** Quits: damxsa (~damx@2001:16a2:ce33:4e00:152d:b032:78f3:27f0) (Remote host closed the connection)
[19:10:25] *** Joins: bloody (~bloody@user/bloody)
[19:10:29] *** Joins: damxsa (~damx@2001:16a2:ce33:4e00:3604:f881:a16d:7606)
[19:11:12] *** Joins: keyehzh (~keyehzh@user/keyehzh)
[19:11:38] <gloomy> Does anyone know if there's a library that allows quickly and automatically creating a cli interface for a give python module?  ideally something that turns a function foo(a,b) to a cli interface like `python mymodule foo -a 42 -b potato`
[19:11:59] *** Quits: nomic (~nomic@185.192.69.57) (Quit: Leaving)
[19:12:03] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1) (Quit: Leaving)
[19:12:10] <grym> gloomy: there are a few, actually, but i've never given any a try
[19:12:40] <grym> gloomy: https://github.com/google/python-fire
[19:13:42] <gloomy> Awesome, thanks, checking it out
[19:14:04] <grym> there's at least one other one whose name escapes me right now
[19:14:40] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 260 seconds)
[19:15:12] <tdsmith> fire and typer are probably the most Just Expose My Function choices
[19:15:24] <grym> typer's great, but it's not automagic
[19:16:13] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[19:17:02] *** Quits: Haxxa (~Haxxa@122.199.46.64) (Ping timeout: 260 seconds)
[19:17:02] *** Joins: mallkrampus (~mallkramp@172.93.207.242)
[19:18:01] *** Joins: dakh7 (~dakh7@ip68-100-165-11.dc.dc.cox.net)
[19:18:14] <CrtxReavr> gloomy, click is really nice.
[19:18:29] *** Quits: stdout (~stdout@216.163.21.11) (Quit: Leaving)
[19:18:51] <tdsmith> eh! typer is pretty high-magic; you don't have to manually decorate each argument
[19:19:18] <grym> click's good too, but i don't know of a way to have either click or typer automatically generate a CLI for you
[19:19:23] <grym> you have to wire it up yourself
[19:21:06] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[19:22:10] <grym> tdsmith: right but it doesn't do codegen or anything for you
[19:22:46] *** Quits: avikalp (~avikalp@49.36.103.196) (Ping timeout: 268 seconds)
[19:23:34] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[19:24:26] *** Joins: nergar (~Nergar@177.225.129.22)
[19:26:05] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[19:26:34] *** Joins: darksun (~darksun@user/darksun)
[19:26:53] *** Quits: ffledgling (~textual@2620:10d:c090:400::5:f2cf) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:27:25] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[19:27:57] *** Joins: Haxxa (~Haxxa@122.199.46.64)
[19:28:30] *** Joins: zmt00 (~zmt00@user/zmt00)
[19:29:32] *** Quits: dntreou (~yakiza@inet-2a02-6900-8808-e010--297.oracle-ocna.com) (Ping timeout: 268 seconds)
[19:31:03] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:31:23] *** Joins: dntreou (~yakiza@global-5-48.nat-1.net.cam.ac.uk)
[19:32:34] *** Quits: humanBird (~humanBird@2603-8001-7003-5966-8863-abed-f4cb-e2b0.res6.spectrum.com) (Quit: Client closed)
[19:33:33] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[19:34:19] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[19:35:06] *** Quits: luva (~luva@37.120.197.46) (Ping timeout: 268 seconds)
[19:36:36] *** Joins: luva (~luva@146.70.62.237)
[19:37:16] *** Quits: p-i-_ (~Ohmu@223.206.144.16) (Read error: Connection reset by peer)
[19:37:30] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 260 seconds)
[19:37:51] *** Joins: p-i- (~Ohmu@mx-ll-223.206.144-16.dynamic.3bb.co.th)
[19:38:33] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[19:42:17] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[19:43:06] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 268 seconds)
[19:43:14] *** Quits: sagax (~sagax_nb@user/sagax) (Remote host closed the connection)
[19:43:56] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Remote host closed the connection)
[19:44:20] *** Quits: dntreou (~yakiza@global-5-48.nat-1.net.cam.ac.uk) (Ping timeout: 268 seconds)
[19:44:38] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:91a4:7e22:3b0e:329d)
[19:45:00] *** Joins: tga (~tga@user/tga)
[19:45:54] *** Joins: dntreou (~yakiza@global-5-47.nat-1.net.cam.ac.uk)
[19:46:02] *** Joins: olspookishmagus (~pookie@snf-137798.vm.okeanos.grnet.gr)
[19:46:11] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[19:48:19] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[19:48:52] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Remote host closed the connection)
[19:49:00] *** Joins: vlm (~vlm@user/vlm)
[19:50:08] *** Joins: Naan (~Naan@user/naan)
[19:51:18] *** Joins: jazzy2 (~jaziz@user/jaziz)
[19:51:30] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Ping timeout: 260 seconds)
[19:51:33] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Quit: Leaving)
[19:51:42] *** Joins: han-solo (~hanish@user/han-solo)
[19:51:46] *** Joins: Harlin (~DonQixote@75-163-172-250.clsp.qwest.net)
[19:52:22] *** Quits: dntreou (~yakiza@global-5-47.nat-1.net.cam.ac.uk) (Ping timeout: 268 seconds)
[19:54:08] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[19:54:13] *** Joins: dntreou (~yakiza@inet-2a02-6900-8808-e010--153.oracle-ocna.com)
[19:54:48] *** Joins: joshisanonymous (~joshisano@155-186-193-040.res.spectrum.com)
[19:58:15] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:58:43] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[19:59:08] *** jazzy2 is now known as jazzy3
[19:59:18] *** Joins: sagax (~sagax_nb@user/sagax)
[19:59:22] *** jazzy3 is now known as jazzy
[19:59:32] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[19:59:42] *** Joins: delvian (~delvian@105.251.119.20)
[19:59:45] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 268 seconds)
[19:59:54] *** Quits: dntreou (~yakiza@inet-2a02-6900-8808-e010--153.oracle-ocna.com) (Ping timeout: 260 seconds)
[20:00:33] *** Joins: dntreou (~yakiza@inet-2a02-6900-8808-e010--153.oracle-ocna.com)
[20:00:44] *** Quits: grandrew (~grandrew@2601:642:c301:c600:f22f:74ff:feac:90a3) (Remote host closed the connection)
[20:00:53] <SnoopJ> Probably don't need to do codegen for this, the click API and some reflection using the `inspect` module would be how I'd approach it at first, i.e. grab all the members of the module that are functions and make them Commands, then pull those together in a Group
[20:01:31] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Read error: Connection reset by peer)
[20:01:57] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[20:01:59] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[20:02:06] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[20:03:09] *** Quits: mosh3k21 (~mosh3k21@user/mosh3k21) (Quit: Boom)
[20:03:40] *** Joins: upsala (~zcb@185.213.155.160)
[20:04:10] *** Quits: DeaDSouL (~DeaDSouL@45.130.136.148) (Ping timeout: 260 seconds)
[20:04:37] *** Joins: hanaan (~naan@user/naan)
[20:04:37] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[20:04:42] *** hanaan is now known as Naan
[20:04:47] *** Quits: chemsmith (~chemsmith@user/chemsmith) (Read error: Connection reset by peer)
[20:05:01] *** Joins: chemsmith (~chemsmith@user/chemsmith)
[20:05:19] *** Quits: susam (~susam@user/susam) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[20:05:30] *** Joins: susam (~susam@user/susam)
[20:05:53] *** Joins: DeaDSouL (~DeaDSouL@45.130.136.10)
[20:10:12] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Remote host closed the connection)
[20:10:31] *** Joins: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[20:10:39] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[20:10:58] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[20:12:26] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-d4d1-6d9f-a6fc-1fe3.res6.spectrum.com)
[20:12:32] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[20:13:31] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[20:14:28] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[20:15:23] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[20:15:47] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 268 seconds)
[20:16:00] *** Joins: sazawal (~sazawal@122.161.81.57)
[20:18:32] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[20:18:51] *** Quits: rtsn (~nstr@user/rtsn) (Ping timeout: 245 seconds)
[20:18:52] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[20:19:21] *** Joins: jsmock (~Thunderbi@2a0a-a541-ed04-0-921b-eff-fe4d-aa0a.ipv6dyn.netcologne.de)
[20:19:40] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:20:02] *** Quits: pretty_dumm_guy (~trottel@eduroam-134-96-204-83.uni-saarland.de) (Quit: WeeChat 3.3)
[20:20:06] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Ping timeout: 268 seconds)
[20:20:43] *** Joins: fikran (~fikran@user/fikran)
[20:21:22] *** Quits: modlin (modlin@user/modlin) (Ping timeout: 260 seconds)
[20:21:56] *** Joins: Auron956 (Auron956@user/auron)
[20:21:57] *** Quits: Auron (Auron956@user/auron) (Ping timeout: 268 seconds)
[20:22:01] *** Joins: kurfen_ (~kurfen@45.152.181.22)
[20:22:32] *** Joins: modlin (modlin@user/modlin)
[20:22:33] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[20:22:55] *** Quits: kurfen (~kurfen@45.152.181.20) (Ping timeout: 260 seconds)
[20:23:06] *** Joins: Inline (~Inline@2a02:908:1252:7a80:9e2e:d238:6ddc:c88f)
[20:23:30] *** Quits: jsmock (~Thunderbi@2a0a-a541-ed04-0-921b-eff-fe4d-aa0a.ipv6dyn.netcologne.de) (Client Quit)
[20:24:25] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[20:27:48] *** Quits: joshisanonymous (~joshisano@155-186-193-040.res.spectrum.com) (Read error: Connection reset by peer)
[20:28:54] *** Quits: e2m4n (~ezman@user/e2m4n) (Ping timeout: 260 seconds)
[20:29:21] *** Joins: joshisanonymous (~joshisano@155-186-193-040.res.spectrum.com)
[20:29:56] *** Joins: audiobirb (~audio@user/audio)
[20:30:30] *** Quits: BlessJah (~BlessJah@user/blessjah) (Remote host closed the connection)
[20:31:11] *** Joins: ricky (rickybob@gateway/vpn/protonvpn/rickybob)
[20:32:08] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[20:32:36] *** Joins: sleepingforest (~sleepingf@user/sleepingforest)
[20:32:59] *** Joins: BlessJah (~BlessJah@user/blessjah)
[20:32:59] *** Parts: sleepingforest (~sleepingf@user/sleepingforest) (WeeChat 3.0)
[20:33:09] *** Joins: sleepingforest (~sleepingf@user/sleepingforest)
[20:33:41] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[20:33:59] *** Quits: ubert (~Thunderbi@ip5b405828.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[20:35:32] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 268 seconds)
[20:38:19] *** Quits: neilthereildeil (~neilthere@204.115.183.4) (Quit: Client closed)
[20:38:54] *** Joins: Akuli (~Akuli@82-203-161-162.bb.dnainternet.fi)
[20:41:34] *** Joins: ErkiS (~opera@85.253.103.121.cable.starman.ee)
[20:43:01] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:43:58] <ErkiS> when paging python script output with "myscript.py | more", is there a way to detect when more has been exited?
[20:44:10] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[20:45:09] <ErkiS> it is definitely possible when more's page buffer has been filled, then a BrokenPipeError is thrown - but what about before?
[20:45:15] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[20:45:38] <CrtxReavr> ErkiS, hang on. . . . there's a trick to get around that.
[20:46:04] *** Joins: fikran (~fikran@user/fikran)
[20:47:52] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 268 seconds)
[20:47:57] *** Quits: alius (~adrien@91-164-243-54.subs.proxad.net) (Quit: Konversation terminated!)
[20:48:10] *** Quits: jcvfen (~jcvfen@84.209.129.214) (Read error: Connection reset by peer)
[20:48:27] <CrtxReavr> ErkiS, https://bpa.st/5CDA
[20:49:36] <CrtxReavr> Basically, wrap our output syntax in a try/except stanza like that.
[20:49:45] *** Quits: Trashlord (~trash@user/trashlord) (Ping timeout: 260 seconds)
[20:49:58] *** Joins: jsmock (~Thunderbi@2a0a-a541-ed04-0-921b-eff-fe4d-aa0a.ipv6dyn.netcologne.de)
[20:49:59] <CrtxReavr> your, even
[20:50:22] *** Joins: jcarl43 (~jcarl@node-1w7jr9pj6xbfpbvumr522w6fg.ipv6.telus.net)
[20:50:31] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[20:50:55] <ErkiS> CrtxReavr: this only works when something gets printed. I have a script that may or may not produce output for some time - how to detect the downstream being closed then?
[20:51:04] *** Joins: xan (~jcvfen@84.209.129.214)
[20:51:17] <Zambzuga> Is it really hard to test this code using pytest + mock? https://bpa.st/MBVA
[20:51:28] <Zambzuga> I'm very new to tests and never really used mocks before
[20:51:37] <meejah> don't
[20:51:41] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:52:06] <Zambzuga> why not?
[20:52:43] <meejah> https://pythonspeed.com/articles/verified-fakes/
[20:52:58] *** Joins: nomic (~nomic@185.217.117.152)
[20:53:49] <Zambzuga> never heard about verified fakes
[20:53:51] <Zambzuga> dafaq
[20:54:03] <Zambzuga> Not that it says much there is lots of stuff i've never heard about lol
[20:54:27] <meejah> what were you considering mocking?
[20:54:52] <han-solo> that method seems like doing a lot for `write_to_file` ':)
[20:55:08] <Zambzuga> hahaha yeah it does tbh.
[20:55:41] <Zambzuga> I wanted to see if i can write a file in wb mode and make sure that it will keep adding _copy to names if it already exists.
[20:55:54] *** Quits: ricky (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 260 seconds)
[20:56:43] <sleepingforest> any way to make case insensitive enums in pydantic?
[20:57:37] <grym> sleepingforest: in the inner Config class on your BaseModel, set case_sensitive=False.  I think
[20:57:38] *** Quits: nomic (~nomic@185.217.117.152) (Client Quit)
[20:58:19] <meejah> Zambzuga: that sounds like a good test; what would you mock though?
[20:58:25] * aphysically trying out nvim-dap for python
[20:58:32] * aphysically not sure how he would get entry points to work
[20:58:41] <Zambzuga> meejah, well ideally i don't wanna actually write a file to disk
[20:59:06] *** Joins: ravan (~ravan@user/ravan)
[21:00:04] *** Joins: Trashlord (~trash@user/trashlord)
[21:00:07] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[21:00:34] <sco1> Pytest provides a fixture for temporary directories/paths
[21:00:49] <sleepingforest> grym: i think that applies to the whole model.  maybe ill try a validator instead
[21:01:25] *** Quits: y1n (~y1n@178.115.37.117.wireless.dyn.drei.com) (Ping timeout: 268 seconds)
[21:01:31] *** Joins: nomic (~nomic@185.217.117.152)
[21:01:54] <Zambzuga> sco1, ok so using a fixture i could verify a file "would have" been created and also that it would have changed the name of the file if a file with the same name already existed?
[21:01:58] *** Quits: vladoski (~vladoski@93-47-225-6.ip114.fastwebnet.it) (Remote host closed the connection)
[21:03:13] <meejah> Zambzuga: one way would be to pass in some "filesystem API" to that function and provide a verified-fake with the behavior you want the filesystem to have (instead of e.g. using os.* methods)
[21:03:15] <grym> sleepingforest: yeah that might be better
[21:03:17] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:03:31] <grym> sleepingforest: probably a pre validator; let me know how you get on, i'm curious now
[21:03:50] <ErkiS> Zambzuga: with unittest, you can mock any call you make in that function. e.g. with unittest.mock.patch("builtins.open", your_own_open_function): write_to_file(...)
[21:06:12] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[21:06:18] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[21:06:26] <Zambzuga> tmp_path would probably work to test the write_to_file method but dunno how i would make it work for the read function i also need to test
[21:06:30] <Zambzuga> so many options :P
[21:06:44] <Zambzuga> I'll see if i can find some good examples with pytest-mock
[21:06:53] *** Quits: pjb (~pjb@user/pjb) (Remote host closed the connection)
[21:07:01] <ErkiS> Zambzuga: if you don't care about the contents of what's written, then just with unittest.mock.patch("builtins.open", return_value=io.BytesIO()): write_to_file(..)
[21:08:06] <Zambzuga> I need to be able to verify that i can write it as "wb" as in writing in bytes instead of string.
[21:08:30] <Zambzuga> Later i need to be able to verify that i can read a smiliar file in bytes
[21:08:40] <ErkiS> Zambzuga: io.BytesIO is perfect for that
[21:09:08] *** dcaro is now known as dcaro_away
[21:09:43] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[21:09:53] <Zambzuga> Thanks i'll read the docs and see if i can actually understand what its for :)
[21:09:55] *** Joins: tobybl_ (~tobybl@213.31.135.91)
[21:09:58] *** Joins: _ganapathi_ (~ganapathi@60.243.67.5)
[21:10:18] <sleepingforest> grym: pre validators work. My enums are all uppercase, so i check against the value.upper().  Was hoping for a solution where i dont have to add the validator to each model, but this works
[21:10:34] *** Joins: jeho2 (~jehoshaph@user/jehoshaphat)
[21:10:37] *** Joins: adder`` (~adder@user/adder)
[21:10:41] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[21:10:41] *** Quits: adder (~adder@user/adder) (Remote host closed the connection)
[21:10:54] *** Joins: joshwasanon (~joshisano@155-186-193-040.res.spectrum.com)
[21:10:59] *** Quits: coc0nut (~coc0nut@user/coc0nut) (Excess Flood)
[21:11:15] *** Joins: grooverman_ (~grooverma@179.99.123.165)
[21:11:51] *** Quits: tobybl_ (~tobybl@213.31.135.91) (Remote host closed the connection)
[21:12:32] *** Quits: tobybl (~tobybl@213.31.135.91) (Ping timeout: 268 seconds)
[21:12:48] <_ganapathi_> am using visual studio code or vim to modify python code. but mostly am getting error as "indentation error". anybody suggest for configuration for visual studio code and vim for this
[21:13:09] *** Quits: joshisanonymous (~joshisano@155-186-193-040.res.spectrum.com) (Ping timeout: 268 seconds)
[21:13:09] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Ping timeout: 268 seconds)
[21:13:09] *** Quits: grooverman (~grooverma@177.102.119.40) (Ping timeout: 268 seconds)
[21:13:09] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 268 seconds)
[21:13:11] *** Quits: fdan (~fdan@103.215.168.1) (Quit: Client closed)
[21:13:22] <SnoopJ> ErkiS, do either sys.stdout.writable() or sys.stdout.closed do what you want?
[21:13:45] <SnoopJ> _ganapathi_, you need to figure out why those editors are giving you different kinds of indentation
[21:14:03] *** Quits: lionslicer (~lionslice@2804:d41:a7a6:1300:f92a:50d8:cf32:7519) (Remote host closed the connection)
[21:14:08] *** Joins: chalk (~chalk___@51.159.59.197)
[21:14:18] *** Joins: e2m4n (~ezman@user/e2m4n)
[21:14:20] *** Joins: coc0nut (~coc0nut@user/coc0nut)
[21:14:36] *** Quits: jsmock (~Thunderbi@2a0a-a541-ed04-0-921b-eff-fe4d-aa0a.ipv6dyn.netcologne.de) (Quit: jsmock)
[21:14:47] *** Quits: chalk (~chalk___@51.159.59.197) (Client Quit)
[21:15:08] <ErkiS> SnoopJ: nope, they merrily report file being writable and not closed if the downstream buffer is not full
[21:16:33] *** Joins: BlueShark (sid10311@user/blueshark)
[21:16:33] <_ganapathi_> how do i figure out. is there any static space value or tab option ?. for python.
[21:17:29] *** Joins: lionslicer (~lionslice@2804:d41:a7a6:1300:f92a:50d8:cf32:7519)
[21:17:42] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[21:18:10] <SnoopJ> ErkiS, I'm confused, do you want to know if the buffer is full, or if the pipe has been closed?
[21:19:14] <ErkiS> SnoopJ: that the pipe has been closed
[21:19:32] <SnoopJ> ErkiS, whence this concern about the buffer being full, then?
[21:20:01] *** Quits: ba (~ba@cpc1-hari17-2-0-cust27.20-2.cable.virginm.net) (Remote host closed the connection)
[21:21:11] <ErkiS> SnoopJ: not a concern, just how it functions - writing will succeed until a full page has been printed, regardless of whether more has been exited
[21:21:26] *** Joins: jsmock (~joern@xdsl-87-79-110-145.nc.de)
[21:22:20] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[21:22:38] *** pr3d4t0r is now known as NikkiWade
[21:22:43] *** Quits: pr100 (~pr100@cpc92728-cmbg20-2-0-cust160.5-4.cable.virginm.net) (Quit: Ping timeout (120 seconds))
[21:22:44] <SnoopJ> Maybe I'm missing something, then, my understanding was that when more exits, its stdin would be closed
[21:23:01] *** Quits: dntreou (~yakiza@inet-2a02-6900-8808-e010--153.oracle-ocna.com) (Ping timeout: 268 seconds)
[21:24:06] <ErkiS> SnoopJ: maybe the problem here is with more. looks like it actually continues running after pressing "q" if currently the page is not full. if I kill it externally (pkill more), then writing will fail immediately
[21:25:28] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 268 seconds)
[21:25:49] *** Joins: FluffyMask (~masque@user/fluffymask)
[21:26:10] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[21:26:49] *** Parts: jsmock (~joern@xdsl-87-79-110-145.nc.de) (WeeChat 3.2)
[21:27:12] <SnoopJ> I believe that's right, the only way to quit in that case is to send an interrupt
[21:27:43] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Quit: Leaving)
[21:27:57] *** Joins: naitsabes (~naitsabes@user/naitsabes)
[21:27:59] <ErkiS> SnoopJ: yeah, bummer, but looks like there's nothing I can do in this case
[21:28:34] *** NikkiWade is now known as pr3d4t0r
[21:30:01] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b125-ee43-8416-dc8d.res6.spectrum.com)
[21:30:57] <SnoopJ> ErkiS, there's nothing you can do from Python to change the behavior of `more` if that's what you mean, yea.
[21:32:53] *** Joins: vicfred (~vicfred@user/vicfred)
[21:33:25] *** Joins: jsmock (~jsmock@2a0a-a541-ed04-0-921b-eff-fe4d-aa0a.ipv6dyn.netcologne.de)
[21:35:05] *** Joins: mmercer (daemoen@2605:d100:0:2d:5054:ff:fef0:3953)
[21:36:07] <grym> sleepingforest: thanks!
[21:36:48] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Quit: pees oot)
[21:37:04] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[21:38:50] <_ganapathi_> how do i print all sql queries executed by django on console. only once i need to print
[21:39:39] *** Quits: luva (~luva@146.70.62.237) (Ping timeout: 268 seconds)
[21:39:45] <_ganapathi_> https://bpa.st/EIDA
[21:40:03] <_ganapathi_> am using like this. but its printing two times each query.
[21:40:18] <_ganapathi_> from base, utils module once
[21:40:39] *** Joins: Valeria (~Valeria@user/valeria)
[21:42:37] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[21:42:58] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:43:24] *** Joins: yangby (~secret@125.120.162.167)
[21:43:30] *** Joins: aknot (~aknot@2603:900a:1503:17bb:8dda:d4b7:fa9:d4d5)
[21:43:52] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[21:44:16] *** Quits: darkstardevx (~darkstard@2601:1c2:300:c8a0::6c32) (Ping timeout: 245 seconds)
[21:45:22] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[21:45:27] *** Quits: Harlin (~DonQixote@75-163-172-250.clsp.qwest.net) (Quit: Leaving)
[21:47:03] *** Quits: yangby (~secret@125.120.162.167) (Client Quit)
[21:47:20] *** Joins: luva (~luva@45.141.152.60)
[21:48:19] *** Joins: tobybl (~tobybl@213.31.135.91)
[21:48:22] *** Quits: m1n10n (~r41d1n@cpe-76-184-204-251.tx.res.rr.com) (Quit: GoodBye)
[21:48:29] *** Quits: hel0 (~hel0@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[21:48:39] *** Joins: KombuchaKip (~kip@192.252.230.5)
[21:48:53] <han-solo> _ganapathi_: SO tells me, you need to set the 'propagate' to false on the logger conf # https://docs.djangoproject.com/en/3.2/topics/logging/#examples
[21:49:40] *** Joins: fling (~fling@user/fling)
[21:50:26] *** Quits: fuzzygeorge (~fuzzygeor@office.computeam.com) (Quit: Leaving)
[21:52:29] *** Quits: Milos (~Milos@user/milos) (Quit: ZNC 1.8.2 - https://znc.in)
[21:52:44] *** Joins: Milos (~Milos@user/milos)
[21:53:11] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Ping timeout: 264 seconds)
[21:54:23] *** Joins: hel0 (~hel0@user/redrum88)
[21:56:08] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[21:56:38] *** Quits: e2m4n (~ezman@user/e2m4n) (Ping timeout: 260 seconds)
[21:57:08] *** Joins: m1n10n (~r41d1n@cpe-76-184-204-251.tx.res.rr.com)
[22:02:47] *** Parts: jsmock (~jsmock@2a0a-a541-ed04-0-921b-eff-fe4d-aa0a.ipv6dyn.netcologne.de) (Leaving)
[22:04:06] *** Quits: Jigsy (~Jigsy@user/jigsy) (Ping timeout: 260 seconds)
[22:05:12] *** Joins: darkstardevx (~darkstard@50.39.114.152)
[22:06:43] *** Quits: tobybl (~tobybl@213.31.135.91) (Remote host closed the connection)
[22:08:25] *** Joins: mei (~mei@user/mei)
[22:09:18] *** Joins: Jigsy (~Jigsy@user/jigsy)
[22:09:40] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[22:10:06] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[22:10:38] *** Joins: magla (~gelignite@55d4b8af.access.ecotel.net)
[22:10:46] *** Quits: Deneb (~johnch@86.111.189.80.dyn.plus.net) (Quit: Leaving)
[22:11:55] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[22:13:35] *** Quits: aknot (~aknot@2603:900a:1503:17bb:8dda:d4b7:fa9:d4d5) (Ping timeout: 264 seconds)
[22:13:37] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[22:15:53] <Zambzuga> https://bpa.st/APBA
[22:16:01] <Zambzuga> Anyone got an idea why i'm getting this?
[22:16:01] *** Joins: mike18 (~geri@217-149-167-230.nat.highway.telekom.at)
[22:16:17] <mike18> hi - how can i extract those ids from the string using regex? https://ideone.com/xAR2SZ
[22:16:18] *** Quits: y04nn (~y04nn@92.223.89.196) (Remote host closed the connection)
[22:16:29] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[22:16:57] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[22:17:51] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:796b:8f2f:c085:d02b)
[22:18:41] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:796b:8f2f:c085:d02b) (Client Quit)
[22:18:54] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:796b:8f2f:c085:d02b)
[22:19:30] <han-solo> mike18: will the string always be 'db_update_numyouneed_something...' ?
[22:20:48] *** Joins: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net)
[22:20:53] <mike18> yes
[22:21:04] <mike18> just the 2 ids change
[22:22:04] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[22:22:08] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:22:17] <han-solo> i mean, if it's exactly like that you don't need regex, you could just split it right ?
[22:22:24] <han-solo> [x.split('_')[2] for x in files] # but i wonder if this is best :/
[22:22:52] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[22:22:59] <SnoopJ> str.partition() is slightly safer if you're not absolutely sure the split point will be there
[22:23:28] <SnoopJ> but you can also just split() and sanity-check the number of parts you get
[22:24:34] <mike18> i could have other files too :)
[22:24:39] <mike18> @han-solo
[22:25:09] *** Quits: ham5urg__ (~ham5urg@149.233.139.246.dynamic-pppoe.dt.ipv4.wtnet.de) (Quit: Leaving)
[22:25:30] *** Quits: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net) (Ping timeout: 260 seconds)
[22:26:39] <han-solo> i could write a stupid regex for that, but i'm reluctant to use regex until i have to
[22:27:18] *** Joins: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net)
[22:28:37] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Remote host closed the connection)
[22:29:02] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[22:29:08] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Quit: Leaving)
[22:30:34] *** Joins: Roey (~Roey@user/Roey)
[22:32:05] *** Quits: sharperguy (~sharpergu@fnord.cryptophone.de) (Ping timeout: 268 seconds)
[22:33:41] *** Joins: waynew (~wayne@user/waynew)
[22:33:43] *** Joins: sharperguy (~sharpergu@88.130.217.78)
[22:33:48] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[22:34:21] *** Joins: mwichmann (~mats@209-188-119-117.taosnet.com)
[22:34:42] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 276 seconds)
[22:34:50] *** Joins: grys (~quassel@botters/gry)
[22:34:56] *** Joins: ledtc (~ledtc@c-f8aa70d5.014-57-6c756e3.bbcust.telenor.se)
[22:35:46] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[22:36:09] *** Joins: goldfish (~goldfish@user/goldfish)
[22:36:13] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:37:14] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:796b:8f2f:c085:d02b) (Ping timeout: 256 seconds)
[22:37:18] *** Joins: fassl (~fassl@2a02:8388:1987:9380:c4ee:81c5:625a:a215)
[22:39:48] *** Joins: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net)
[22:40:07] <_ganapathi_> han-solo: Thanks
[22:40:57] *** Hash is now known as LordOfThePings
[22:41:27] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b125-ee43-8416-dc8d.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[22:41:32] *** Joins: ffledgling (~textual@2620:10d:c090:500::1:76af)
[22:43:01] *** Joins: davidd (~hay_sup@user/memorious)
[22:43:53] <mike18> hi have a dataframe with id and a list of bad ids - how to drop the badids from the dataframe? was thinking of that: data.drop(data[data.Id.isin(badIds)].index.tolist())
[22:43:58] *** Parts: davidd (~hay_sup@user/memorious) (WeeChat 3.0)
[22:44:54] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:796b:8f2f:c085:d02b)
[22:45:04] *** Quits: Haxxa (~Haxxa@122.199.46.64) (Quit: Haxxa flies away.)
[22:45:49] <deniska> mike18: can't you just data.drop(badIds) or something like that?
[22:46:05] <mike18> but it need to tell it what col it takes
[22:46:08] <mike18> badIds is a list
[22:46:15] *** Quits: luva (~luva@45.141.152.60) (Ping timeout: 268 seconds)
[22:47:13] <mike18> keep in mind i want to delete the entire rows
[22:48:13] <mike18> the badIds should look at the col called Id and if they matches delete the entire row
[22:48:16] <mike18> it
[22:49:07] *** Joins: webmariner (~james@cpc95914-rdng25-2-0-cust148.15-3.cable.virginm.net)
[22:49:08] *** Joins: Haxxa (~Haxxa@122.199.46.64)
[22:49:15] <mike18> deniska: did i explain that right? :D
[22:49:56] <stewie925> hi guys, I am trying to debug a code - what is the magic word to make python "pause" if a condition is reached?
[22:50:40] <han-solo> you could just assign the things you selected back ?
[22:51:01] <han-solo> `df = df[~df.Id.isin(ids)].reset_index(drop=True)` # ?
[22:51:10] <han-solo> negate the selection, i mean
[22:51:37] *** Joins: luva (~luva@37.120.197.44)
[22:51:41] <SnoopJ> stewie925, in 3.7+ you can call breakpoint() to enter a debugger (pdb by default). On older versions, you can do `import pdb; pdb.set_trace()` to enter pdb (and other debuggers have a similar magic spell that does the same thing)
[22:51:52] <SnoopJ> https://docs.python.org/3/library/functions.html#breakpoint
[22:52:55] <stewie925> I havent used pdb since I was laid off from work - been using vscode these days...
[22:53:08] <SnoopJ> the two are not mutually exclusive
[22:53:10] <stewie925> thanks SnoopJ!  will try that
[22:53:35] <han-solo> vscode has a thing that will let you put breakpoints, i think
[22:53:35] <SnoopJ> I hear that PyCharm's debugging experience is nice, not sure what options there are for VSCode. I like pudb, myself, and just run it in a terminal
[22:54:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[22:54:26] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[22:54:51] <stewie925> yeah now it makes me  wonder why I never  used IDEs and totally just relied on pdb.trace() back at work...
[22:55:39] *** Joins: fikran (~fikran@user/fikran)
[22:55:42] <SnoopJ> the only thing I really want that pdb doesn't have is a variable inspector
[22:55:54] <SnoopJ> but the UI isn't the friendliest
[22:55:56] *** Joins: khile (cacambo@triton.blinkenshell.org)
[22:56:11] *** Quits: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net) (Ping timeout: 264 seconds)
[22:56:40] *** Joins: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net)
[22:56:44] *** Joins: elwoodpd (~elwood@host-92-8-65-11.as13285.net)
[22:56:52] <elwoodpd> Hello
[22:57:06] <han-solo> stewie925: https://code.visualstudio.com/docs/python/debugging
[22:57:18] <han-solo> er, sorry
[22:57:18] *** Quits: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net) (Ping timeout: 260 seconds)
[22:57:19] <elwoodpd> I am interested in scraping data over time and was wondering if anyone had any suggestions on how to store it
[22:57:31] <han-solo> i have no idea which IDE you use
[22:57:37] <elwoodpd> if it is like simple integers over hours/days
[22:57:58] <stewie925> han-solo - thank you - I just put the if condition and put a breakpoint on it  - it worked :)
[22:58:16] <han-solo>  👍
[22:58:21] <akk> elwoodpd: I tend to store simple stuff like that in CSV, or JSON if it gets more complicated/hierarchical.
[22:58:26] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[22:58:45] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[22:59:02] <elwoodpd> hmm yeah ok
[22:59:40] *** Quits: stealth_ (~stealth_@216-197-160-97.regn.static.sasknet.sk.ca) (Quit: Leaving)
[22:59:49] *** Quits: mei (~mei@user/mei) (Ping timeout: 268 seconds)
[23:00:42] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[23:01:44] *** Quits: elwoodpd (~elwood@host-92-8-65-11.as13285.net) (Quit: Leaving)
[23:02:01] *** Joins: bhuvan (~bhuvan@49.206.56.144)
[23:02:10] *** Quits: Armanzor (~Armanzor@user/armanzor) (Read error: Connection reset by peer)
[23:02:29] *** Joins: trace987 (~trace@dynamic-002-247-250-004.2.247.pool.telefonica.de)
[23:02:40] <bhuvan> Hello I have a doubt regarding flask. Since I could not find a channel thought I can post it in here.
[23:03:04] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Quit: Leaving)
[23:03:14] *** Joins: darklands (~darklands@gateway/vpn/pia/darklands)
[23:03:20] <SnoopJ> Flask questions are on-topic here
[23:03:31] <bhuvan> SnoopJ, Thanks.
[23:04:05] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[23:04:44] *** Joins: pro_z (~pro_z@37.214.77.123)
[23:05:58] <DX099> Hi all
[23:06:06] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 260 seconds)
[23:06:44] <DX099> I have a piece of code here that I'm having a hard time understanding the behaviour off:
[23:06:47] <DX099> ```
[23:06:57] <DX099>  * ```... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/74bed7837ebe38f40b2df07c93383231e30e8759)
[23:07:37] <bhuvan> https://pastebin.com/gt0mvDiW
[23:07:50] *** Joins: Tenn0 (~Tenn0@88.97.110.231)
[23:08:00] *** Quits: darksun (~darksun@user/darksun) (Read error: Connection reset by peer)
[23:08:08] <bhuvan> So I created this simple app and what I am trying to do is to get the value to be printed in the same page where the form is.
[23:08:11] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[23:08:15] <DX099> no matter what I do, it keeps retrying the maximum  number
[23:08:44] <bhuvan> https://pastebin.com/cXmhQ0cH
[23:08:55] <bhuvan> this is the template.
[23:09:03] *** Quits: vulpes_vulpes (~vulpes_vu@88-144-232-205.host.pobb.as13285.net) (Remote host closed the connection)
[23:09:19] <ChrisWarrick> bhuvan: you’ll need to call render_template and pass in the variable as part of the context
[23:09:52] <SnoopJ> I think as written you're clobbering the first handler when you call @app.route("/fact") again?
[23:09:54] <bhuvan> If I am able to show the value in the same page then I want to expand the function fact() to add some more functionality
[23:10:29] *** Joins: Omega037 (~Omega037@047-024-168-024.res.spectrum.com)
[23:10:47] *** Joins: _Ev (~ev@user/ev/x-8999918)
[23:11:34] <bhuvan> SnoopJ, yes but when I give any value and say submit the value is shown in the browser. I want it to be visible under the submit button.
[23:11:37] *** Quits: nergar (~Nergar@177.225.129.22) (Quit: Leaving)
[23:11:38] <DX099> how come neither break nor return are working in this instance?
[23:12:14] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 260 seconds)
[23:12:14] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b125-ee43-8416-dc8d.res6.spectrum.com)
[23:12:15] <bhuvan> ChrisWarrick, When I do that I get an error saying value is undefined.
[23:12:44] <ChrisWarrick> bhuvan: what error? how are you trying?
[23:13:06] <bhuvan> ChrisWarrick, give me a minute I will change the code and get back with the error.
[23:13:58] *** Joins: parv (~quass@user/parv)
[23:14:52] <bhuvan> ChrisWarrick, I get this error. local variable 'value' referenced before assignment
[23:15:43] <SnoopJ> DX099, `break` does not occur in the code you shared with us, and the bit inside the `try` clause is probably failing before it hits the `return` (and jumping to the `except` clause)
[23:16:07] <ChrisWarrick> bhuvan: show full code and traceback
[23:16:08] <bhuvan> ChrisWarrick, https://pastebin.com/zXish2UC
[23:16:26] <ChrisWarrick> bhuvan: (also, please use https://bpa.st/+python )
[23:16:57] <bhuvan> ChrisWarrick, thanks for pointing me to this link :)
[23:17:13] <ChrisWarrick> bhuvan: `value` is never defined in that function. Uncomment line 16. For the non-POST case (else:), you could probably do `value = None`
[23:18:05] <bhuvan> ChrisWarrick: def fact_post(value=None):
[23:18:11] <bhuvan> something like this?
[23:18:18] <mike18> why is mypy complaining about that? processed_data = List[int] ...
[23:18:29] <ChrisWarrick> bhuvan: no
[23:18:38] <SnoopJ> mike18, you should probably share the full code and error report
[23:18:40] <aphysically> the python-dev mailing list discussion seems to be unware only unpaired bidi control characters would need to be disallowed
[23:18:41] <ChrisWarrick> mike18: types are specified with :, not =
[23:18:41] <DX099> SnoopJ:
[23:18:41] <DX099> https://bpa.st/7A6Q
[23:18:43] <DX099> here's the result
[23:19:08] <SnoopJ> DX099, ?
[23:19:12] <DX099> it retries twice whether I use return or break
[23:19:13] *** Quits: darklands (~darklands@gateway/vpn/pia/darklands) (Quit: Leaving)
[23:19:27] *** Joins: darksun (~darksun@user/darksun)
[23:19:32] <InPhase> DX099: Your gets and puts have inconsistent line endings.
[23:19:41] <mike18> SnoopJ: https://ideone.com/RwI9qh
[23:19:42] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[23:19:46] <mike18> oh lol
[23:20:15] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[23:20:28] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[23:20:37] <DX099> InPhase:  well maybe one day I'll contact the dev of vsftpd about it
[23:20:55] <DX099> SnoopJ:  https://bpa.st/WDYA
[23:20:58] <bhuvan> ChrisWarrick, https://bpa.st/XQDA like this?
[23:21:01] <DX099> it was the result of this code
[23:21:01] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[23:21:14] <jinsun> mike18: `processed_data = List[int]` doesn't make a list, `processed_data: List[int] = []` does
[23:21:16] <SnoopJ> mike18, the mypy error on the corrected version of that file is because you are returning the annotation, which is not an instance of the type it describes.
[23:21:22] <mike18> InPhase: yeah snow it :)
[23:21:24] <ChrisWarrick> bhuvan: no need to put it in the argument list (line 2)
[23:21:25] <mike18> SnoopJ: :)
[23:21:33] <DX099> I use return alone: it retries twice, I use break, it also retries twice (value of MAX_RETRIES)
[23:21:45] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[23:21:45] <bhuvan> ChrisWarrick, sorry missed that.
[23:22:09] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[23:22:37] <SnoopJ> DX099, the code you just shared is not valid Python (`try` without an `except` clause is invalid syntax), but as I said before, if the exception occurs before you break/return, those lines won't be executed, it will immediately enter the error handling clause.
[23:22:56] <SnoopJ> which would likely cause a retry
[23:23:39] *** Joins: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz)
[23:23:39] <bhuvan> ChrisWarrick, ok now Jinja is saying that no tag defined.
[23:23:41] <bhuvan> jinja2.exceptions.TemplateSyntaxError: Encountered unknown tag 'value'.
[23:23:58] <DX099> ah
[23:24:00] <DX099> so in fact I never suceeded in  the first place
[23:24:12] <ChrisWarrick> bhuvan: your template had `{% value %}`?
[23:24:17] <bhuvan> yes
[23:24:19] <ChrisWarrick> bhuvan: it needs to be `{{ value }}`
[23:24:19] <DX099> the debug clause is affecting the output maybe
[23:24:23] <bhuvan> ok
[23:24:36] <InPhase> DX099: You should never write except: pass.  I'm guessing your next lines are except: pass or similar.
[23:24:41] <SnoopJ> DX099, probably, yes. I would recommend you `print(repr(exc))` in your handler instead of `print(exc)` (the latter discards type information)
[23:25:06] <SnoopJ> It looks like there are some name errors in your output, but I don't really know how to correlate that with the limited part of your program you are showing us
[23:25:17] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[23:25:31] *** Quits: kaichiuchu (~kaichiuch@user/kaichiuchu) (Quit: leaving)
[23:25:43] <DX099> InPhase:  ? no... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/f93ee9772cde2d98e9259c15605cb573c2aa402c)
[23:25:44] <bhuvan> ChrisWarrick, Wow Thanks so much it work!
[23:25:53] <bhuvan> *Works
[23:25:57] <SnoopJ> even better: `traceback.print_exc()` instead will show the entire traceback which would be far more useful to debugging this
[23:26:06] <InPhase> DX099: So it prints and then continues.
[23:26:10] <SnoopJ> because it would tell you precisely where the exception originated
[23:26:28] *** Quits: sazawal (~sazawal@122.161.81.57) (Quit: Leaving)
[23:26:40] <InPhase> DX099: I suppose that is the parse150 line in your output, originating from one of the ftp.nlst calls.
[23:26:57] <SnoopJ> yea, looks like something is trying to use the name `parse150` somewhere and it isn't defined
[23:26:57] <DX099> probably yes
[23:27:00] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Remote host closed the connection)
[23:27:31] <DX099> I should probably add a Raise after the execpt
[23:27:35] <ChrisWarrick> bhuvan: you’re welcome!
[23:27:37] <DX099> s/execpt/except/
[23:28:52] *** Joins: p-i-_ (~Ohmu@223.206.144.16)
[23:29:32] *** Quits: ffledgling (~textual@2620:10d:c090:500::1:76af) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:30:28] <DX099> anyone knows if excedeed retries is a base exception or something?
[23:30:36] <SnoopJ> well, if you re-raise, you make the retry loop kind of pointless. Swallowing the exception is a meaningful thing to do here, you're just discarding the information you need to debug it.
[23:31:19] <SnoopJ> The standard hierarchy of exceptions is given here: https://docs.python.org/3/library/exceptions.html ; there isn't a builtin for retries, but you could define one pretty easily
[23:31:29] <DX099> ok, so what should I do with traceback.print_exc()?
[23:31:32] <SnoopJ> `class RetriesExceededException(Exception): pass`
[23:32:01] <SnoopJ> DX099, if you call that instead of `print(exc)` you will get the same output on stdout that you would if the exception propagated up and terminated your application, but your program won't terminate.
[23:32:24] <SnoopJ> i.e. the complete error report that tells you exactly where the exception originates from (which is where you need to fix something)
[23:32:31] *** Quits: p-i- (~Ohmu@mx-ll-223.206.144-16.dynamic.3bb.co.th) (Ping timeout: 268 seconds)
[23:32:57] <DX099> right, do I need to import "traceback" or something?
[23:33:05] <SnoopJ> yes, it's defined in that library
[23:33:26] *** Joins: ffledgling (~textual@2620:10d:c090:500::3:17e7)
[23:34:45] *** Joins: SilverFox (~SilverFox@64.223.223.162)
[23:35:04] <DX099> it worked
[23:35:10] <DX099> thanks, that looks nice indeed
[23:35:22] <DX099> can I crash?
[23:35:25] <SilverFox> Hey #python, im trying to import this method here https://domonic.readthedocs.io/packages/autodocs.html#domonic.JSON.JSON.tablify using from domonic.JSON import tablify but im not having any luck, is that not the right syntax? i just get an import error
[23:35:27] <DX099> in except?
[23:35:30] <SilverFox> ImportError: cannot import name 'tablify' from 'domonic.JSON'
[23:35:35] <SnoopJ> DX099, you can re-raise the exception if you want, sure.
[23:35:44] <SnoopJ> or raise a new one "from" the one you're handling
[23:35:59] <SnoopJ> `raise exc` or `raise RuntimeError("Hello world!") from exc` respectively
[23:36:19] <DX099> rather I'd like to crash because the max number of retries were exceeded
[23:36:47] <DX099> if possible please
[23:36:51] <SnoopJ> I would do that with `raise ...` after the for loop
[23:37:02] *** Joins: FergusL (~freenode4@user/fergusl)
[23:37:23] <SnoopJ> preferably with your own subclass of Exception (but RuntimeError is not a bad choice for indicating "something went wrong")
[23:38:17] <dale> Forgot that ElementTree wants you to do fromstring, got very confused when ElementTree('<doc><foo/></doc>').find('./doc/foo') returned -1.
[23:38:36] <SnoopJ> dale, it's a pretty weird API, but in this sense it matches XML very well
[23:38:42] *** Quits: sandb0y (~pirate@user/sandb0y) (Quit: Time for another great escape)
[23:38:47] <dale> SnoopJ: Ha
[23:39:04] <dale> I can't remember how odd it looked when it was first created.  Probably still a bit odd.  But, as you said, like XML.
[23:39:49] <dale> It's funny that it will accept the completely wrong type as its constructor, and then it ends up just calling find on whatever you gave it, which in my case was a str of course.
[23:40:53] *** Quits: keyehzh (~keyehzh@user/keyehzh) (Quit: Leaving)
[23:41:09] <SnoopJ> yea, you'd really think it would accept only an instance of Element, but...
[23:41:50] *** Quits: mike18 (~geri@217-149-167-230.nat.highway.telekom.at) (Remote host closed the connection)
[23:43:23] <DX099> I put it like this: https://bpa.st/JZCQ
[23:43:45] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[23:43:46] <DX099> but it seems "err" is kind of local/private
[23:44:00] *** Joins: dakh7_ (~dakh7@2600:8806:3201:e87b:741d:c962:c467:738a)
[23:44:05] <DX099> and python tells me "err" doesn't exist  in raise
[23:45:03] <DX099> also you told me "after the for loop" but does return exits the function entirely in this case?
[23:45:03] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-6042-7156-16f0-8c3d.res6.spectrum.com) (Read error: Connection reset by peer)
[23:45:10] *** Joins: amazoniantoad (~jrand@pool-71-114-43-42.washdc.fios.verizon.net)
[23:45:17] <amazoniantoad> Can anyone help me resolve this issue with tensorflow? https://datascience.stackexchange.com/questions/103747/valueerror-dimensions-must-be-equal-but-are-21-and-30
[23:45:27] *** Quits: bhuvan (~bhuvan@49.206.56.144) (Quit: Leaving)
[23:45:32] *** Joins: dakh7__ (~dakh7@ip68-100-165-11.dc.dc.cox.net)
[23:46:50] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[23:47:18] *** Quits: dakh7 (~dakh7@ip68-100-165-11.dc.dc.cox.net) (Ping timeout: 268 seconds)
[23:47:38] *** Quits: pro_z (~pro_z@37.214.77.123) (Ping timeout: 260 seconds)
[23:48:27] <dale> DX099: I would think the only way err would not exist there is if you never had an exception get raised, which here looks like you never did even a single iteration of the loop?
[23:48:32] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 268 seconds)
[23:48:33] *** Joins: WarpedAI (~Warped@user/warped)
[23:48:45] *** Joins: stdout (~stdout@216.163.21.11)
[23:48:53] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[23:49:04] <dale> Oh, unless I'm forgetting that the variable an exception is assigned to is taken out of scope once you leave the except clause, maybe to try and prevent circular references?
[23:49:16] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[23:49:38] *** Joins: orange (~orangeext@user/orangeextract)
[23:49:46] *** Quits: dakh7_ (~dakh7@2600:8806:3201:e87b:741d:c962:c467:738a) (Ping timeout: 268 seconds)
[23:49:53] *** Quits: dakh7__ (~dakh7@ip68-100-165-11.dc.dc.cox.net) (Client Quit)
[23:50:02] <DX099> https://bpa.st/IEIA
[23:50:16] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[23:50:16] <DX099> I only got half of what you were saying, but I think it's true
[23:50:51] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[23:51:21] <DX099> the exception is raised but doesn't exists outside the "try" context (and I also had  the same error when it put it in try but outside of except
[23:51:38] *** Quits: Warped (~Warped@user/warped) (Ping timeout: 268 seconds)
[23:52:38] <SnoopJ> DX099, the name is only defined in the handler's scope, but you could do `saved_err = err` and then raise from that to propagate it out
[23:53:21] <DX099> SnoopJ:  wouldn't saved_err but just a local var too?
[23:53:34] <SnoopJ> DX099, it assigns to the enclosing scope
[23:53:53] <SnoopJ> this is kind of a quirk of exception handler syntax
[23:54:28] <DX099> ah right
[23:54:31] <DX099> it works indeed
[23:55:06] *** Quits: luva (~luva@37.120.197.44) (Ping timeout: 260 seconds)
[23:55:14] *** Joins: jess (~jess@libera/staff/jess)
[23:55:46] <DX099> I'm bound to python 3.6 so I can't use the new exceeded retries clause it seems
[23:55:58] <SnoopJ> I'm not sure what clause you're talking about
[23:56:14] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[23:56:29] <SnoopJ> but if you want retry functionality that Just Works™, tenacity is a well-liked library: https://tenacity.readthedocs.io/en/latest/
[23:56:46] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[23:56:55] *** Quits: damxsa (~damx@2001:16a2:ce33:4e00:3604:f881:a16d:7606) (Quit: Leaving)
[23:57:13] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
